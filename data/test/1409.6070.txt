{
  "article_text": [
    "convolutional neural networks typically consist of an input layer , a number of hidden layers , followed by a softmax classification layer .",
    "the input layer , and each of the hidden layers , is represented by a three - dimensional array with size , say , @xmath0 .",
    "the second and third dimensions are spatial .",
    "the first dimension is simply a list of features available in each spatial location .",
    "for example , with rgb color images @xmath1 is the image size and @xmath2 is the number of color channels .",
    "the input array is processed using a mixture of convolution and pooling operations . as you move forward through the network , @xmath3 decreases while @xmath4 is increased to compensate .",
    "when the input array is spatially sparse , it makes sense to take advantage of the sparsity to speed up the computation .",
    "more importantly , knowing you can efficiently process sparse images gives you greater freedom when it comes to preparing the input data .    consider the problem of online isolated character recognition ; _ online _ means that the character is captured as a path using a touchscreen or electronic stylus , rather than being stored as a picture .",
    "recognition of isolated characters can be used as a building block for reading cursive handwriting , and is a challenging problem in its own right for languages with large character sets .",
    "each handwritten character is represented as a sequence of strokes ; each stroke is stored as a list of @xmath5- and @xmath6-coordinates .",
    "we can draw the characters as @xmath1 binary images : zero for background , one for the pen color .",
    "the number of pixels is @xmath7 , while the typical number of non - zero pixels is only @xmath8 , so the first hidden layer can be calculated much more quickly by taking advantage of sparsity .    another advantage of sparsity is related to the issue of spatial padding for convolutional networks .",
    "convolutional networks conventionally apply their convolutional filters in _",
    "valid _ mode  they are only applied where they fit completely inside the input layer .",
    "this is generally suboptimal as makes it much harder to detect interesting features on the boundary of the input image .",
    "there are a number of ways of dealing with this .    padding the input image @xcite with zero pixels .",
    "this has a second advantage : training data augmentation can be carried out in the form of adding translations , rotations , or elastic distortions to the input images .    adding small amounts of padding to each of the convolutional layers of the network ; depending on the amount of padding added",
    "this may be equivalent to applying the convolutions in _ full _ mode .",
    "this has a similar effect to adding lots of padding to the input image , but it allows less flexibility when it comes to augmenting the training data .    applying the convolutional network to a number of overlapping subsets of the image @xcite ; this is useful if the input images are not square .",
    "this can be done relatively computationally efficiently as there is redundancy in the calculation of the lower level convolutional filters .",
    "however , the ( often large ) fully connected classification layers of the network must be evaluated several times .",
    "sparsity has the potential to combine the best features of the above .",
    "the whole object can be evaluated in one go , with a substantial amount of padding added at no extra cost .    in section [ deepcnet]-[deepcnin ]",
    "we describe a family of convolutional networks with many layers of max - pooling . in section  [ sparsity][nn ]",
    "we describe how sparsity applies to character recognition and image recognition . in section [ results ]",
    "we give our results . in section [ sec : conclusion ] we discuss other possible uses of sparse cnns .",
    "early convolutional networks tended to make use of pooling in a relatively restrained way , with two layers of pooling being quite typical .",
    "as computing power has become cheaper , the advantages of combining many layers of pooling with small convolutional filters to build much deeper networks have become apparent @xcite .",
    "applying pooling slowly , using many layers of @xmath9 pooling rather than a smaller number of @xmath10 or @xmath11 layers , may be particularly important for handwriting recognition .",
    "the speed with which pooling is applied affects how a cnn will generalize from training data to test data .",
    "slow max - pooling retains more spatial information ; this is better for handwriting recognition , as handwriting is highly structured .",
    "consider three small pictures : @xmath12 using fast max - pooling , all three pictures look the same : they all contain a circle and a line .",
    "using slower max - pooling , more spatial information is retained , so the first two pictures will be different from the third .    for general input",
    ", slow pooling is relatively computationally expensive as the spatial size of the hidden layers reduces more slowly , see figure  [ deepcnetlenet ] . for sparse input ,",
    "this is offset by the fact that sparsity is preserved in the early hidden layers , see figure [ circles ] . this is particularly important for handwriting recognition , which needs to operate on relatively low - power tablet computers .      inspired by @xcite",
    "we first consider a simple family of cnns with alternating convolutional and max - pooling layers .",
    "we use two parameters @xmath14 and @xmath15 to characterize the structure : there are @xmath16 layers of convolutional filters , separated by @xmath14 layers of @xmath17 max - pooling . the number of convolutional filters in the @xmath18-th convolutional layer is taken to be @xmath19",
    ". the spatial size of the filters is @xmath20 in the first layer , and then @xmath17 in the subsequent layers .",
    "finally , at the top of the network is an output layer .",
    "if the input layer has spatial size @xmath1 with @xmath21 , then the final convolution produces a fully connected hidden layer .",
    "we call this network deepcnet@xmath13 . for example",
    ", deepcnet@xmath22 is the architecture from @xcite with input layer size @xmath23 and four layers of max - pooling : @xmath24 for activation functions , we used the positive part function @xmath25 for the hidden layers ( rectified linear units ) and softmax for the output layer .",
    "the size of the hidden layers decays exponentially , so for general input the cost of evaluating the network is essentially just the cost of evaluating the first few layers : roughly speaking it is @xmath26 .",
    "conversely , the number of trainable parameters of the model is @xmath27 most of the parameters are located in the top few layers .",
    "when using dropout @xcite with a deepcnets@xmath28 , we need @xmath29 numbers to describe the amount of dropout applied to the input of the @xmath30 convolutional layers and the classification layer . the lower levels of a deepcnet seem to be fairly immune to overfitting , but applying dropout in the upper levels improved test performance for larger values of @xmath15 .",
    "+      inspired by @xcite , we have tried modifying our deepcnets by adding _",
    "network - in - network _ layers .",
    "a nin layer is a convolutional layer where the filters have spatial size just @xmath31 .",
    "they can be thought of as single layer networks that increase the learning power of a convolutional layer without changing the spatial structure .",
    "we placed nin layers after each max - pooling layer and the final convolutional layer . with @xmath15 and @xmath14 as before , we call the resulting network deepcnin@xmath13 . for example , deepcnin(4,100 ) is @xmath32 as the spatial structure is unchanged , the cost of evaluating these networks is not much greater than for the corresponding deepcnet .",
    "we took two steps to help the backpropagation algorithm operate effectively through such deep networks .",
    "first , we only applied dropout to the convolutional layers , not the nin layers .",
    "second , we used a form of _ leaky _ rectified linear units @xcite , taking the activation function to be @xmath33 compared to @xcite , we have used @xmath34 rather than @xmath35 for the @xmath36 case .",
    "this seems to speed up learning without harming the representational power of the network .",
    "imagine putting an all - zero array into the input layer of a cnn . as you evaluate the network in the forward direction , the translational invariance of the input is propagated to each of the hidden layers in turn .",
    "we can therefore think of each hidden variable as having a _ ground state _ corresponding to receiving no meaningful input ; the ground state is generally non - zero because of bias terms .",
    "when the input array is sparse , you only have to calculate the values of the hidden variables where they differ from their ground state .",
    "figure  [ circles ] shows how the active spatial locations change through the layers .",
    "essentially , we want to memoize the convolutional and pooling operations .",
    "memoizing can be done using a hash table , but that would be inefficient here as for each operation there is only one input , corresponding to regions in the ground state , that we expect to see repeatedly .    instead , to forward propagate the network we calculate two matrices for each layer of the network :    a _ feature matrix _ which is a list of row vectors , one for the ground state , and one for each active spatial location in the layer ; the width of the matrix is the number of features per spatial location .",
    "a _ pointer matrix _ with size equal to the spatial size of the convolutional layer . for each spatial location in the convolutional layer , we store the number of the corresponding row in the feature matrix .",
    "this representation is very loosely biologically inspired .",
    "the human visual cortex separates into two streams of information : the dorsal ( _ where _ ) and ventral ( _ what _ ) streams .",
    "similar data structures can be used in reverse order for backpropagation .    for a regular convolutional network ,",
    "the convolutional and pooling operations within a layer can be performed in parallel on a gpu ( or even spread over multiple gpus ) .",
    "exactly the same holds here ; there is simply less work to do as we know the inactive output spatial locations are all the same .",
    "online character recognition is the task of reading characters represented as a collection of pen - stroke paths .",
    "two rather different techniques work particularly well for online chinese character recognition .    render the pen strokes at a relatively high resolution , say @xmath37 with @xmath38 , and then use a cnn as a classifier @xcite .",
    "draw the character in a much lower resolution grid , say @xmath37 with @xmath39 . in each square of the grid",
    "calculate an 8-dimensional _ histogram _ measuring the amount of movement in each of the 8 compass directions .",
    "the resulting @xmath40 dimensional vectors are suitable input for general purpose statistical classifiers @xcite .    the first representation records more accurately _ where _ the pen went , while the second is better at recording the _ direction _ the pen was taking . using sparsity",
    ", we can try to get the best of both worlds .",
    "combining the two representations gives an array of size @xmath41 .",
    "setting @xmath42 gives a sparse representation of the character suitable for feeding into a cnn .",
    "this preserves sparsity as the histogram is all zero at sites the pen does not touch . increasing",
    "the number of input features per spatial location only increases the cost of evaluating the first hidden layer , so for sparse input it tends to have a negligible impact on performance .",
    "the idea of supplementing pictures of online pen strokes with extra features has been used before , for example in the context of cursive english handwriting recognition @xcite . the key difference to previous work is the use of sparsity to allow a substantial increase in the spatial resolution , allowing us to obtain good results for challenging datasets such as casia - olhwdb1.1 .",
    "in contrast to online character recognition , for offline character recognition you simply have a picture of each character  for example , the mnist digit dataset @xcite .",
    "the @xmath43 pictures have on average 150 non - zero pixels .",
    "the input layer for a deepcnet@xmath44 network is @xmath45 .",
    "placing the mnist digits in the middle of the input layer produces a sparse dataset as @xmath46 is much smaller than @xmath47 .",
    "the background of each mnist picture is zero , so extending the images simply increases the size of the background .    to a lesser extent , we can also think of the @xmath48 images in the cifar-10 and cifar-100 datasets as being sparse , again by placing them into a @xmath45 grid .",
    "for the cifar datasets , we scale the rgb features to the interval @xmath49 $ ] .",
    "padding the pictures with zeros corresponds to framing the images with gray pixels .",
    "let @xmath18 denote the size of the sparse objects to be recognized . for offline / image recognition ,",
    "this is the width of the images . for online character recognition ,",
    "we are free to choose a scale @xmath18 on which to draw the characters .    given @xmath18 , we must choose the @xmath14-parameter such that the characters fit comfortably into the @xmath1 input layer , where @xmath21 .",
    "deepcnets work well with @xmath50 .",
    "there are a number of ways to account for this :    to process the @xmath37 sized input down to a zero - dimensional quantity , the number @xmath51 of levels of @xmath17 max - pooling should be approximately @xmath52 .",
    "counting the number of paths through the cnn from the input to output layers reveals a plateau ; see figure  [ counts ] .",
    "each corner of the input layer has only one route to the output layer ; in contrast , the central @xmath53 points in the input layer each have @xmath54 such paths",
    ".    if the input - layer is substantially larger than the object to be recognized , then you can apply various transformations ( translations , rotations , etc ) to the training images without having to worry about truncating the input .",
    "when the input is sparse , translating the input by @xmath55 corresponds to translating the output of the @xmath15-th level of @xmath17 max - pooling by exactly one .",
    "adding moderately large random shifts to the training data forces the network to learn how the alignment of input with the max - pooling layers affects the flow of information through the network .",
    "the results are all test errors for single networks .",
    "we consider two ways of augmenting the training data :    by translation , adding random shifts in the @xmath5 and @xmath6 directions .    by affine transformations , using a randomized mix of translations , rotations , stretching and shearing operations .    in section [ varyl ]",
    "we see that it is crucial to move the training data around inside the much larger input field .",
    "we guess that this is an unavoidable consequence of the slow max - pooling .",
    "it is therefore difficult to compare meaningfully deepcnet test results with the results of other papers , as they often deliberately limit the use of data augmentation to avoid the temptation of learning from the test data . as a compromise , we restrict ourselves to only extending the mnist dataset by translations .",
    "for other datasets , we use affine transformations , but we do not use elastic deformations or cropped versions of the training images .    some language specific handwriting recognition systems preprocess the characters to truncate outlying strokes , or apply local scalings to make the characters more uniform . the aim is to remove variation between writing styles , and to make the most of an input layer that is limited in size .",
    "however , there is a danger that useful information is being discarded .",
    "our method seems able to handle a range of datasets without preprocessing .",
    "this seems to be a benefit of the large input grid size and the use of slow max - pooling .",
    "we will first look at three relatively small datasets @xcite to study the effect of varying the network parameters .",
    "see figure  [ datasets ] .",
    "the pendigits dataset contains handwritten digits 0 - 9 .",
    "it contain about 750 training characters for each of the ten classes .",
    "the ujipenchars database includes the 26 lowercase letters .",
    "the training set contains 80 characters for each of the 26 classes .",
    "the online handwritten assamese characters dataset contains 45 samples of 183 indo - aryan characters .",
    "we used the first 36 handwriting samples as the training set , and the remaining 9 samples for a test set .",
    "as described in section [ nn ] , when using a deepcnet@xmath13 we draw the characters with size @xmath56 in the center of the input layer of size @xmath57 .",
    "as described in section [ onlinecr ] , the number of features @xmath4 per spatial location is either 1 ( simple pictures ) or 9 ( pictures and 8-directional histogram features ) .",
    "+   +   +      we first explore the impact of increasing the number @xmath14 of layers of max - pooling ; equivalently we are increasing the scale @xmath58 at which the characters are drawn .",
    "for simplicity we only look here at the assamese dataset . in terms of computational cost , increasing @xmath14 by one approximately doubles the number of active input spatial locations . when @xmath59 , characters are drawn in a @xmath60 square , and",
    "about 6% of the spatial sites are active .    with only 36 handwriting samples for training",
    ", we should expect the dataset to be quite challenging , given the large alphabet size , and the relatively intricate characters .",
    "we see in table  [ assameseresults ] that adding translations to the training data is clearly a crucial part of training deepcnets .",
    "adding more general affine transforms also helps .",
    ".test errors for the assamese dataset for different values of @xmath14 and different amounts of data augmentation ( @xmath61).[assameseresults ] [ cols=\"^,^,^,^\",options=\"header \" , ]      we entered a version of our program into the icdar2013 competition for task 3 , trained on the casia olhwdb1.0 - 1.2 datasets . our entry won with a test error of 2.61% , compared to 3.13% for the second best entry . human performance on the test dataset",
    "was reported to be 4.81% .",
    "our ten - best - guesses included the correct character 99.88% of the time .",
    "let us move now from online to offline handwriting recognition .",
    "we extended the mnist training set by translations only , with shifts of up to @xmath62 pixels .",
    "we first trained a very small - but - deep network , deepcnet@xmath63 .",
    "this gave a test error of 0.58% . using a nvidia geforce gtx 680 graphics card",
    ", we can classify 3000 characters per second .",
    "training a deepcnet@xmath64 with dropout per level of @xmath65 resulted in a test error of 0.31% .",
    "better results on the mnist dataset have been obtained , but only by training committees of neural networks , and by using elastic distortions to augment the dataset .",
    "these two dataset each contain 50,000 @xmath66 color training images , split between 10 and 100 categories , respectively .",
    "for each of the datasets , we extended the training set by affine transformations , and trained a deepcnet(5,300 ) network with dropout per convolutional level of @xmath67 .",
    "the resulting test errors were 8.37% and 29.81% .",
    "for comparison @xcite reports errors of 8.81% ( with data augmentation ) and 35.68% ( without data augmentation ) .    adding network in network layers to give a deepcnin(5,300 ) network produced substantially lower test errors : 6.28% and 24.30% , respectively",
    "we have implemented a spatially - sparse convolutional neural network , and shown that it can be applied to the problems of handwriting and image recognition .",
    "sparsity has allowed us to use cnn architectures that we would otherwise have rejected as being too slow .    for online character recognition , we have extended the dense 8-directional histogram representation to produce a sparse representation .",
    "there are other ways of creating sparse representation , for example by using path curvature as a feature .",
    "trying other sparse representation could help improve performance .",
    "very recently , convolutional networks somewhat similar to our deepcnin , but trained with multiple gpus or networks of computers , have been shown to perform well on the lsvrc2012 image dataset @xcite .",
    "for example , a network from @xcite uses layers of type c3-c3-mp2 as opposed to our c2-mp2-c1 deepcnin layers . running larger ,",
    "sparse cnns could potentially improve accuracy or efficiency by making it practical to train on uncropped images , and with greater flexibility for training set augmentation .",
    "sparsity could also be used in combination with a segmentation algorithm .",
    "segmentation algorithms divide an image into irregularly shaped foreground and background elements .",
    "a sparse cnn could be applied to classify efficiently the different segments .",
    "also , by mixing and matching neighboring segments , a sparse cnn could be used to check if two segments are really both parts of a larger object .",
    "sparsity could also be used to implement higher dimensional convolutional networks , where the convolutional filters range over three or more dimensions @xcite .",
    "higher dimensional convolutions can be used to analyze static objects in 3d , or objects moving in 2 + 1 or 3 + 1 dimensional space - time .",
    "just as lines form sparse sets when embedded in two or higher dimensional spaces , surfaces form sparse sets when embedded in three or higher dimensional spaces .",
    "possible applications include analyzing 3d representations of human faces ( 2d surfaces in 3d space ) or analyzing the paths of airplanes ( 1d lines in 4d space - time ) .",
    "many thanks to fei yin , qiu - feng wang and cheng - lin liu for their work organizing the icdar2013 competition .",
    "d.  ciresan , u.  meier , and j.  schmidhuber .",
    "multi - column deep neural networks for image classification . in _",
    "computer vision and pattern recognition ( cvpr ) , 2012 ieee conference on _ , pages 36423649 , 2012 .",
    "alex krizhevsky , ilya sutskever , and geoffrey  e. hinton .",
    "imagenet classification with deep convolutional neural networks . in peter  l. bartlett ,",
    "fernando c.  n. pereira , christopher j.  c. burges , lon bottou , and kilian  q. weinberger , editors , _ nips _ , pages 11061114 , 2012 .",
    "y.  lecun and y.  bengio .",
    "word - level training of a handwritten word recognizer based on convolutional neural networks . in iapr ,",
    "editor , _ proc . of the international conference on pattern recognition _ , volume  ii , pages 8892 , jerusalem , october 1994 .",
    "ieee .",
    "liu , f.  yin , d .- h .",
    "wang , and q .- f .",
    "online and offline chinese handwriting databases . in _ proc .",
    "11th international conference on document analysis and recognition ( icdar ) , beijing , china _ , pages 3741 , 2011 ."
  ],
  "abstract_text": [
    "<S> convolutional neural networks ( cnns ) perform well on problems such as handwriting recognition and image classification . however , the performance of the networks is often limited by budget and time constraints , particularly when trying to train deep networks .    </S>",
    "<S> motivated by the problem of online handwriting recognition , we developed a cnn for processing spatially - sparse inputs ; a character drawn with a one - pixel wide pen on a high resolution grid looks like a sparse matrix . taking advantage of </S>",
    "<S> the sparsity allowed us more efficiently to train and test large , deep cnns . on the casia - olhwdb1.1 dataset containing 3755 character classes </S>",
    "<S> we get a test error of 3.82% .    </S>",
    "<S> although pictures are not sparse , they can be thought of as sparse by adding padding . </S>",
    "<S> applying a deep convolutional network using sparsity has resulted in a substantial reduction in test error on the cifar small picture datasets : 6.28% on cifar-10 and 24.30% for cifar-100 .    </S>",
    "<S> * keywords : * online character recognition , convolutional neural network , sparsity , computer vision </S>"
  ]
}
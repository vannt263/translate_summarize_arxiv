{
  "article_text": [
    "the third author of this paper still vividly recollects his visit to victor klee at the university of washington ( seattle ) in augustwe had a memorable drive in vic s car from the hotel to the math department .",
    "vic skipped all the small talk and immediately asked : `` do you think that the simplex method is polynomial ? ''",
    "i still remember how awkward i felt to be asked this question by the very person who had provided the first and seminal insights into it . my ( then as now quite irrelevant ) opinion shall remain between vic and me forever . _",
the seminal work referred to above is of course the 1972 paper of klee and minty entitled `` how good is the simplex algorithm ? ''",
    "it deals with the number of iterations that may be required in the worst case to solve a linear program ( lp ) by dantzig s _ simplex method _",
    "@xcite , which was at that time the only available practical method .",
    "klee and minty exhibited a family of lps ( now known as the _ klee - minty cubes _ ) for which the number of iterations is _ exponential _ in the number of variables and constraints .",
    "dantzig s specific _ pivot rule _ for selecting the next step is just one of many conceivable rules .",
    "the question left open by the work of klee and minty is whether there is some _ other _ rule that provably leads to a small number of iterations .",
    "this question is as open today as it was in 1972 .",
    "nowadays , the simplex method is no longer the only available method to solve lps .",
    "in particular , there _ are _ proven polynomial - time algorithms for solving lps ",
    "khachiyan s _ ellipsoid method _ @xcite and karmarkar s _ interior point method _ @xcite  that are based on techniques developed originally for nonlinear optimization .",
    "it is still unknown , though , whether there is a _ strongly _ polynomial - time algorithm for solving lps , that is , an algorithm for which the number of arithmetic operations does not depend on the bit lengths of the input numbers .",
    "[ [ the - p - matrix - linear - complementarity - problem . ] ] the p - matrix linear complementarity problem . + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    in this paper",
    "we are concerned with pivoting methods for the _ p - matrix linear complementarity problem _",
    "( p - lcp ) , a prominent problem for which neither polynomial - time algorithms nor hardness results are available .    in general ,",
    "an lcp is given by a matrix @xmath0 and a vector @xmath1 , and the problem is to find vectors @xmath2 such that @xmath3 it is @xmath4-complete to decide whether such vectors exist @xcite .",
    "however , in a p - lcp , @xmath5  is a p - matrix ( meaning that all principal minors are positive ) , and then there are unique solution vectors @xmath6 for every right - hand side  @xmath7  @xcite . the problem of efficiently finding them is unsolved , though .",
    "megiddo has shown that the p - lcp is unlikely to be np - hard .",
    "for this , he considers the following ( more general ) variant : given @xmath5 and @xmath7 , either find @xmath6 that satisfy ( [ eq : lcpdef ] ) , or exhibit a nonpositive principal minor of @xmath5 .",
    "np - hardness of the latter variant would imply that @xmath8  @xcite .",
    "there is a different notion of hardness that might apply to the p - lcp as a member of the complexity class  @xmath9  @xcite .",
    "this class has complete problems , and no polynomial - time algorithm is known for any of them .",
    "it has recently been shown that the famous problem of finding a nash equilibrium in a bimatrix game is @xmath9-complete  @xcite .",
    "some researchers consider this to be an explanation why ( despite many efforts ) no polynomial - time algorithm has been found so far .",
    "incidentally , this is the _ second _ problem for which megiddo showed in his technical report  @xcite that it is unlikely to be np - hard .",
    "however , it is currently not known whether the p - lcp is also ppad - complete .    there are various algorithms for solving p - lcps , among them the classic method by lemke @xcite as well as interior point approaches @xcite .",
    "still , there is no known polynomial - time algorithm for p - lcps .",
    "for example , the complexity of interior point algorithms depends linearly on a matrix parameter @xmath10 @xcite that is not bounded for p - matrices .    in this work ,",
    "we focus on combinatorial methods for p - lcps and in particular on _ simple principal pivoting methods _ that share their essential idea with the simplex method .",
    "[ [ simple - principal - pivoting - methods . ] ] simple principal pivoting methods .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    let @xmath11 , and let @xmath12 be the @xmath13 matrix whose @xmath14th column is the @xmath14th column of  @xmath15 if @xmath16 , and the @xmath14th column of the @xmath13 identity matrix  @xmath17 otherwise .",
    "if @xmath5 is a p - matrix , then @xmath12 is invertible for every set @xmath18 .",
    "we call @xmath18 a",
    "_ basis_. if @xmath19 , we have discovered the solution : let @xmath20    if on the other hand @xmath21 , then @xmath22 and @xmath23 defined above satisfy @xmath24 and @xmath25 , but @xmath26 fails . in _",
    "principal pivoting _ , one tries to improve the situation by replacing the basis @xmath18 with the symmetric difference @xmath27 , where @xmath28 is some nonempty subset of the `` bad indices '' @xmath29 .",
    "the greedy choice is to let @xmath28 be the set of all bad indices in every step . for some p - lcps , however , this algorithm cycles and never terminates  @xcite .",
    ", one such example is the p - lcp ( [ eq : morrismq ] ) whose digraph model ( see next paragraph ) appears in figure [ fig : uso ] .",
    "cycling occurs for any of the three start bases just below the top vertex in figure  [ fig : uso ] . ] in _ simple principal pivoting _ , @xmath28 is of size one , and a _ pivot rule _ is employed to select the bad index .",
    "simple principal pivoting methods are sometimes called _ bard - type _ methods and were first studied by zoutendijk  @xcite and bard  @xcite . for a detailed exposition on simple principal pivoting methods see , for instance , ( * ? ? ?",
    "* section  4.2 ) or  ( * ? ? ?",
    "* chapter  4 ) .",
    "[ [ the - digraph - model - and - unique - sink - orientations . ] ] the digraph model and unique sink orientations .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    there is a natural digraph model behind principal pivoting , first studied by stickney and watson @xcite . the graph s vertices are all bases  @xmath18 , with a directed edge going from @xmath18 to @xmath30 if @xmath31 and @xmath32 . to be nondegenerate , meaning that @xmath33 for all @xmath18 and @xmath14",
    "this is no serious restriction since a nondegenerate problem can always be obtained from a degenerate one by a symbolic perturbation of @xmath7 . ]",
    "the underlying undirected graph is the graph of the @xmath34-dimensional cube .",
    "a principal pivot step considers the cube that is spanned by the outgoing edges at the current vertex , and it jumps to the antipodal vertex of some subcube of it .",
    "a simple principal pivot step can be interpreted as the traversal of an outgoing edge , and this is the analogy with the simplex method for linear programming .",
    "the above digraph has the following specific property : every nonempty subcube ( including the whole cube ) has a unique sink , and the global sink corresponds to the solution of the p - lcp @xcite . in the terminology of szab and welzl @xcite",
    ", we are dealing with a _ unique - sink orientation _ ( uso ) .",
    "the goal of this paper is to deepen the understanding of the uso description of simple principal pivoting methods for the p - lcp . on a general level",
    ", we want to understand whether and how algebraic properties of a p - lcp ( which are well studied ) translate to combinatorial properties of the corresponding uso ( which are much less studied ) , and what the algorithmic implications of such translations are .",
    "the principal motivation behind this research is the continuing quest for a polynomial - time p - lcp algorithm . in this paper ,",
    "the concept of a uso serves as the main tool to obtain two more positive results for simple principal pivoting .",
    "we believe that this combinatorial approach has some untapped potential for the theory of ( simple ) principal pivoting methods for lcps .    [ [ the - randomized - method - of - murty - and - the - morris - orientations . ] ] the ( randomized ) method of murty and the morris orientations .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the simple principal pivoting method of murty ( also known as the _ least - index _ rule ) @xcite works for all p - lcp instances , but it may take exponentially many iterations in the worst case @xcite . as a possible remedy , researchers have considered _ randomized _ methods .",
    "the two most prominent ones are randomizedmurty ( which is just the least - index rule , after randomly reshuffling the indices at the beginning ) , and randomedge ( which performs a purely random walk in the uso ) .",
    "however , morris found a family of p - lcp instances ( we call their underlying digraphs the _ morris orientations _ ) on which randomedge spends a long time running in cycles and thus performs much worse than even the exhaustive search algorithm  @xcite .",
    "for randomizedmurty there are as yet no such negative results on p - lcp instances .",
    "in particular , on murty s worst - case example , this algorithm takes an expected _ linear _ number of steps @xcite ; the expected number of steps becomes quadratic if we allow arbitrary start vertices  @xcite .    on general p - lcp instances ,",
    "the expected number of iterations taken by randomizedmurty is _ subexponential _ if the underlying digraph is acyclic  @xcite , but it is unknown whether this also holds under the presence of directed cycles ( as they appear in the morris orientations , for example ) .",
    "we prove that not only the randomized variant , but actually _ any _ variant of the least - index rule obtained by some initial reshuffling of indices leads to a _",
    "number of iterations on the morris orientations .",
    "in particular , this `` kills '' another family of potentially bad instances for the randomizedmurty rule .    [",
    "[ k - matrix - linear - complementarity - problems . ] ] k - matrix linear complementarity problems .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    a _ k - matrix _ is a p - matrix so that all off - diagonal elements are non - positive .",
    "lcps with k - matrices ( k - lcps ) appear for example in free boundary problems ( * ? ? ?",
    "* section  5.1 ) and in american put option pricing @xcite .",
    "it is known that every k - lcp instance can be solved in polynomial time ( even by a simple principal pivoting method  @xcite , see also  ( * ? ? ?",
    "* section  4.7 ) ) , but we prove something stronger : _ every _ simple principal pivoting method takes only a linear number of iterations .",
    "we obtain this result by showing that in k - lcp - induced usos , _ all _ directed paths are short .",
    "our approach is to extract combinatorial structure from the algebraic properties of k - matrices .",
    "subsequently , we use the distilled combinatorial information to get our structural results .    [ [ lcps - with - sufficient - matrices - and - the - criss - cross - method . ] ] lcps with sufficient matrices and the criss - cross method .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    let us step back and take a broader view that brings together lp , the p - lcp , pivoting methods , and computational complexity : linear complementarity problems with _ sufficient _ matrices generalize both lp and the p - lcp while still being amenable to pivoting approaches .",
    "the _ criss - cross method _",
    "@xcite may be considered an extension of murty s algorithm .",
    "in fact , the results of  @xcite make lcps with sufficient matrices the largest known class of lcps for which megiddo s techniques of  @xcite still apply , so that np - hardness is unlikely .",
    "determining the complexity of sufficient matrix lcp remains a tough challenge for the future .",
    "now we formally introduce the digraph model behind p - lcps and show some of its basic properties .",
    "the model was first described by stickney and watson in 1978 @xcite .",
    "we use the following notation .",
    "let @xmath35:=\\{1,2,\\ldots , n\\}$ ] . for a bit vector @xmath36 and",
    "@xmath37 $ ] , let @xmath38 be the element of  @xmath39 defined by @xmath40 this means that @xmath38 is obtained from @xmath41 by flipping all entries with coordinates in  @xmath42 . instead of @xmath43",
    "we simply write @xmath44 .    under this notation , the ( undirected ) _",
    "@xmath34-cube _ is the graph @xmath45 with @xmath46\\}.\\ ] ]    a _ subcube _ of  @xmath47 is a subgraph @xmath48 of  @xmath47 where @xmath49 for some vertex @xmath41 and some set @xmath50 $ ] , and @xmath51 .",
    "[ def : uso ] let @xmath52 be an orientation of the @xmath34-cube ( a digraph with underlying undirected graph @xmath47 ) .",
    "we call @xmath52 a _ unique - sink orientation _ ( uso ) if every nonempty subcube has a unique sink in @xmath52 .    figure  [ fig : uso ] depicts a uso of the 3-cube .",
    "the conditions in definition [ def : uso ] require the orientation to have a unique global sink , but in addition , all proper nonempty subcubes must have unique sinks as well . in figure  [ fig : uso ] there are six 2-dimensional subcubes , twelve 1-dimensional subcubes ( edges ) and eight 0-dimensional subcubes ( vertices ) . for edges and vertices ,",
    "the unique - sink condition is trivial .",
    "the figure also shows that usos may contain directed cycles .",
    "( @xmath53  for an outgoing edge ; @xmath54  for an incoming edge ) .",
    "the unique global sink and a directed cycle are highlighted .",
    "[ fig : uso ] ]    if @xmath55 is the vertex set of a subcube ( as defined above ) , then the directed subgraph of  @xmath56 induced by  @xmath55 is denoted by  @xmath57 .",
    "it is convenient to view the orientation of the @xmath34-cube  @xmath47 as a mapping @xmath58 , where @xmath59 if the edge between @xmath41 and  @xmath44 is oriented towards @xmath44 , and @xmath60 if it is oriented towards  @xmath41 . to encode a vertex  @xmath41 along with the orientations of its incident edges",
    ", we can then use a _ configuration _ of @xmath34  bits and @xmath34  signs , where the @xmath14th sign is @xmath61 ( see figure  [ fig : uso ] ) . if an orientation @xmath52 of @xmath47 contains the directed edge @xmath62 , we write @xmath63 , or simply @xmath64 if @xmath52  is clear from the context .",
    "let @xmath52 be an orientation of the @xmath34-cube and let @xmath65 $ ] .",
    "then @xmath66  is the orientation of the @xmath34-cube obtained by reversing all edges in coordinates contained in  @xmath67 ; formally @xmath68    if @xmath52  is a uso , then @xmath66 is also a uso for an arbitrary subset  @xmath65 $ ]",
    ".    this proposition can be proved by induction on the size of  @xmath67 ; it essentially suffices to show that under @xmath69 , the whole cube still has a unique sink .",
    "now we can derive the _ unique - completion property_. its meaning is that we can prescribe the bits for some coordinates and the signs for the remaining coordinates , and in a uso there will always be a unique vertex that satisfies the prescription .",
    "in particular , it follows that any uso ( and any of its subcubes ) also has a _",
    "unique source_.    in fact , the unique - completion property characterizes unique - sink orientations .",
    "[ lem : ucp ] an orientation  @xmath52 of the @xmath34-cube  @xmath47 is a unique - sink orientation if and only if for every partition @xmath35=a\\cup b$ ] and every pair of maps @xmath70 , @xmath71 there exists a unique vertex  @xmath41 such that    [ eq : ucp ] @xmath72    first suppose that @xmath52  is a uso .",
    "let @xmath73 and consider the subcube  @xmath74 .",
    "let @xmath75 .",
    "as we have just noted , @xmath66  is a unique - sink orientation , and thus the subcube  @xmath74 has a unique sink  @xmath41 with respect to  @xmath66 .",
    "this vertex  @xmath41 is the only vertex that satisfies  ( [ eq : ucp]a ) and ( [ eq : ucp]b ) .",
    "conversely , let @xmath52 be an orientation of the @xmath34-cube which satisfies the unique - completion property and let @xmath76 . set @xmath77 and @xmath78\\setminus c$ ] , and let @xmath79 for @xmath80 and @xmath81 for @xmath16 .",
    "then the unique vertex  @xmath41 satisfying  ( [ eq : ucp]a ) and ( [ eq : ucp]b ) is the unique sink of the subcube  @xmath74 .    [ [ p - lcp - induced - usos . ] ] p - lcp - induced usos .",
    "+ + + + + + + + + + + + + + + + + + +    we now formally define the uso that is induced by a nondegenerate p - lcp instance @xmath82 @xcite . for @xmath36 ,",
    "let @xmath83 : v_j=1\\}$ ] be the canonical `` set representation '' of  @xmath41 .",
    "then the unique - sink orientation @xmath52 induced by @xmath82 is @xmath84 recall that @xmath12 is the ( invertible ) @xmath13 matrix whose @xmath14th column is the @xmath14th column of  @xmath15 if @xmath16 , and the @xmath14th column of the @xmath13 identity matrix  @xmath17 otherwise .    in this way , we have reduced the p - lcp to the problem of finding the sink in an implicitly given uso .",
    "access to the uso is gained through a _",
    "vertex evaluation oracle _ that for a given vertex @xmath36 returns the orientations @xmath85 of all incident edges . in this",
    "setting , the aim is to find the sink of the uso so that the number of queries to the oracle would be bounded by a polynomial in the dimension  @xmath34 . in the case of a p - lcp - induced uso ,",
    "a ( strongly ) polynomial - time implementation of the vertex evaluation oracle is immediate from  . from the sink of  @xmath52",
    ", we can reconstruct solution vectors @xmath22 and  @xmath23 as in  .",
    "the fact that the @xmath34-cube orientation defined in this way is indeed a unique - sink orientation was proved by stickney and watson  @xcite .    not every uso is p - lcp - induced ; for @xmath86 , the p - lcp - induced usos are characterized in  @xcite , but for @xmath87 , we have only a necessary condition .",
    "this condition was originally proved by holt and klee for polytope graphs oriented by linear functions  @xcite .",
    "every p - lcp - induced uso of the @xmath34-cube satisfies the _ holt - klee condition _ , meaning that there are @xmath34 directed paths from the source to the sink with pairwise disjoint sets of interior vertices.[thm : hk ]",
    "in the uso setting resulting from p - lcps , simple principal pivoting can be interpreted as follows : start from any vertex , and then proceed along outgoing edges until the global sink ( and thus the solution to the p - lcp ) is reached .",
    "a _ pivot rule _",
    "r determines which outgoing edge to choose if there is more than one option .",
    "here is the generic algorithm , parameterized with the rule r. it outputs the unique sink of the given uso  @xmath52 .",
    "@xmath88    choose @xmath36 choose @xmath89 according to the pivot rule r @xmath90 @xmath41    [ alg : pivot ]    note that when @xmath52 contains directed cycles as in figure [ fig : uso ] , this algorithm may enter an infinite loop for certain rules r , but we consider only rules for which this does not happen . in the uso setting",
    "we are restricted to _ combinatorial _ rules .",
    "these are rules that may access only the orientations of edges @xmath91 ( as given by the vertex evaluation oracle ) but not any numerical values such as @xmath92 that define these orientations .",
    "let us now introduce the combinatorial pivot rules that are of interest to us .",
    "we write them as functions of the set @xmath93 of candidate indices .",
    "the first one is murty s least - index rule @xmath94 that simply chooses the smallest candidate . in the cube , this may be interpreted as a `` greedy '' approach that always traverses the first outgoing edge that it finds ( in the order of the cube dimensions ) .    to    it is easy to prove by induction on @xmath34 that this rule leads to a finite number of iterations , even if the uso contains directed cycles .",
    "the rule has a straightforward generalization , using a fixed permutation @xmath95 : choose the index @xmath96 with the smallest @xmath14 such that @xmath97 .",
    "this just reshuffles the cube dimensions by applying @xmath98 , and with @xmath99 , we recover murty s least - index rule .",
    "the natural randomized variant of @xmath100 is randomizedmurty : at the beginning , choose the permutation  @xmath98 uniformly at random from the set  @xmath101 of all permutations , and then use @xmath100 throughout .",
    "finally , randomedge stands for the plain random walk : in each iteration , simply choose a random candidate .    to    unlike the previous rules , randomedge may lead to cycling in @xmath102 , but the algorithm still terminates with probability @xmath103 , and with an expected number of at most @xmath104 iterations .",
    "this is a simple consequence of the fact that there is always a short directed path to the sink .",
    "[ lem : hamming ] let @xmath105 be the global sink of an @xmath34-cube uso  @xmath52 , and let @xmath36 be any vertex . if @xmath106 is the hamming distance between @xmath41 and  @xmath107 , then @xmath52  contains a directed path of length  @xmath106 from @xmath41 to  @xmath107 .",
    "morris proved that under @xmath108 , algorithm  [ alg : pivot ] may be forced to perform an expected _ exponential _ number of iterations @xcite . more precisely ,",
    "at least @xmath109 iterations are required on average to find the sink of the @xmath34-cube uso generated ( as described in section [ sec : uso ] ) by the @xmath110 , with @xmath111 here , @xmath34 must be an odd integer in order for @xmath5 to be a p - matrix .    to prove this result morris first extracted the relevant structure of the underlying uso , and then showed that on this uso , randomedge runs in cycles for a long time before it finally reaches the global sink .",
    "it was left as an open problem to determine the expected performance of randomizedmurty , the other natural randomized rule , on this particular uso .",
    "we solve this open problem by showing that for _ any _ permutation @xmath98 , @xmath100 incurs only @xmath112 iterations on the @xmath34-dimensional morris orientation .",
    "in particular , this bound then also holds for randomizedmurty .",
    "[ thm : general ] for any @xmath113 , algorithm [ alg : pivot ] with @xmath114 finds the sink of the @xmath34-dimensional morris orientation after at most @xmath115 iterations , from any start vertex .",
    "computational experiments suggest that the worst running time is attained for the identity permutation if the algorithm starts from @xmath116 ( the global source ) .",
    "therefore we analyze this case thoroughly and compute the precise number of iterations .",
    "[ thm : id ] algorithm [ alg : pivot ] with @xmath117 finds the sink of the @xmath34-dimensional morris orientation after @xmath118 iterations , starting from @xmath116 .",
    "experimental data suggest that this is an upper bound on the number of iterations for any permutation @xmath98 and start vertex @xmath116 . allowing start vertices different from @xmath116 ,",
    "we get slightly higher iteration numbers , but @xmath99 continues to be the worst permutation . in view of this , we conjecture that @xmath119 iterations actually suffice for all @xmath98 and all start vertices .",
    "this would mean that the bound in theorem [ thm : general ] is still off by a factor of  @xmath120 .",
    "[ [ the - combinatorial - structure . ] ] the combinatorial structure .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + +    the @xmath34-cube uso resulting from ( [ eq : morrismq ] ) can be described in purely combinatorial terms ( * ? ? ?",
    "* lemma 1 ) . here",
    "we make its structure even more transparent by exhibiting a _",
    "finite state transducer _",
    "( finite automaton with output ) with just two states that can be used to describe the uso , see figure [ fig : morrisfst ] . for the remainder of this section , we fix @xmath34 to be an odd integer and we are considering the @xmath34-dimensional morris orientation  @xmath56 .    ]",
    "the orientation is then determined for each vertex @xmath121 as follows .",
    "if @xmath122 , then @xmath41  is the global sink .",
    "otherwise choose some  @xmath14 in  @xmath35 $ ] so that @xmath123 and consider the bit string @xmath124 as the input string to the transducer .",
    "in other words , the transducer is reading the input from right to left , starting immediately to the left of some @xmath116 .",
    "the output string @xmath125 then determines the orientation of each edge incident to  @xmath41 .",
    "the choice of  @xmath14 does not matter , because after reading any zero , the transducer is in the state  @xmath126 .    for instance",
    ", let @xmath127 and let @xmath128 .",
    "then the transducer takes @xmath129 , outputs @xmath54 and switches to state  @xmath130 ; reads @xmath131 , outputs @xmath53 and switches to  @xmath126 ; reads @xmath132 , outputs @xmath53 and stays in  @xmath126 ; reads @xmath133 , outputs @xmath54 and switches to  @xmath130 ; and finally reads @xmath134 , outputs  @xmath54 and switches to  @xmath126 .",
    "the resulting configuration for  @xmath41 is @xmath135 .",
    "figure [ fig : uso ] depicts the morris orientation for @xmath86 .",
    "it can easily be checked that the above procedural definition of the orientation is equivalent to the one given in ( * ? ? ?",
    "* lemma 1 ) .",
    "in particular , we obtain a uso .",
    "it has the remarkable symmetry that the set of configurations is closed under cyclic shifts .",
    "[ [ pivoting . ] ] pivoting .",
    "+ + + + + + + + +    from the transducer we can easily derive the sign changes in the configuration  @xmath136 that are caused by a pivot step @xmath137 .",
    "we always have @xmath138 and @xmath139 .",
    "if @xmath140 , we get @xmath141 . in processing @xmath41 and @xmath142 , the transducer then performs exactly the same steps , except that at the @xmath14th coordinate different transitions are used to get from  @xmath130 to  @xmath126 . but this implies @xmath143 for @xmath144 . here is an example for such a pivot step ( with @xmath145 ; affected signs are indicated ) : @xmath146    if @xmath123 , we get @xmath147 , meaning that at the @xmath14th coordinate the transducer stays in  @xmath126 for  @xmath41 but switches to  @xmath130 for  @xmath142 ( assuming that @xmath142  is not the sink ) .",
    "this implies that signs change at all coordinates @xmath148 , @xmath149 down to ( and including ) the next coordinate  @xmath106 ( wrap around possible ) for which @xmath150 . in our example",
    "we have such a step for @xmath151 : @xmath152 in both @xmath41 and @xmath142 , the signs in the block of @xmath103 s at indices @xmath153 alternate .    [",
    "[ levels . ] ] levels .",
    "+ + + + + + +    it will be useful to define the following function on the vertices of the cube .",
    "let @xmath154 be the number of coordinates where @xmath155 appears . formally , @xmath156 the number @xmath154 is called the _ level _ of  @xmath41 . from the two types of pivots ,",
    "it is easy to see that the value of  @xmath157 does not increase along any directed edge  ( * ? ?",
    "* lemma  3 ) . indeed , if @xmath142  is an out - neighbor of  @xmath41 , then either @xmath158 ( this happens in every pivot of type , and in pivots of type with an odd block of @xmath103 s at indices @xmath153 ) , or @xmath157 decreases to the next possible value : @xmath159 , or @xmath160 if @xmath161 . in particular ,",
    "the values of  @xmath157 lie in the set @xmath162 .",
    "the sink is the only vertex at level  0 .",
    "let us make a small digression and briefly explain why randomedge is slow on  @xmath52 .",
    "let @xmath163 .",
    "so the outdegree of  @xmath41 is @xmath164 .",
    "now let @xmath41 be a vertex at level  @xmath103 .",
    "in pivots of type , @xmath165  decreases by one , whereas in pivots of type that do not reach the sink , @xmath165  increases by one .",
    "the latter occurs if and only if randomedge pivots at the unique @xmath155 , which happens with probability @xmath166 .    at level  @xmath103",
    ", we can thus interpret randomedge as a random walk on the integers , where @xmath167 with probability @xmath168 , and @xmath169 with probability @xmath170 .",
    "therefore the walk is strongly biased towards  @xmath116 , but in order to reach a neighbor  @xmath142 of the sink , we need to get to @xmath171 .",
    "this takes exponentially long in expectation  @xcite .",
    "[ [ a - quadratic - bound - for - textscmurty_pi . ] ] a quadratic bound for @xmath100 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    to prove theorem  [ thm : general ] we first derive a ( somewhat surprising ) more general result : for _ any _ pivot rule , starting from any vertex @xmath41 with @xmath172 for some @xmath106 , it takes @xmath112 iterations to reach a vertex @xmath142 with @xmath173 .",
    "this can be viewed as a statement about the uso induced by the @xmath34-dimensional morris orientation on the cube facet @xmath174 .",
    "the statement is that in this induced uso , all directed paths are short ( in particular , the induced uso is acyclic ) .",
    "[ lem : poten ] let @xmath36 be a vertex , and let @xmath106 be any index for which @xmath175 . starting from  @xmath41 , algorithm [ alg : pivot ] ( with an arbitrary pivot rule r ) reaches a vertex  @xmath142 satisfying @xmath176 after at most @xmath177 iterations .",
    "we employ a nonnegative potential that decreases with every pivot step . by a cyclic shift of coordinates",
    "we may assume that @xmath178 , and thus @xmath179 .",
    "let us define @xmath180 : v_j = 0 \\text { and } \\phi(v)_j={-}\\},\\\\",
    "n_1(v ) & : = \\{j\\in[n ] : v_j = 1 \\text { and } \\phi(v)_j={-}\\}.    \\end{aligned}\\ ] ] the _ potential _ of @xmath41 is the number @xmath181    now we will observe how the potential changes during a pivot step @xmath182 .",
    "we always have @xmath138 , @xmath139 .",
    "there are two cases . if @xmath140 , as in , the configurations of @xmath41 and @xmath142 differ only at index @xmath14 .",
    "hence @xmath183 and @xmath184 .",
    "therefore @xmath185 .    in the other case we have @xmath123 , as in .",
    "if @xmath186 , we are done , since then @xmath187 . otherwise , @xmath41 is of the form @xmath188 with @xmath189 .",
    "if @xmath190 is odd , there is an even number of @xmath103 s between @xmath191 and @xmath192 , implying that @xmath193 and @xmath194 .",
    "we then have @xmath195 .",
    "if @xmath190 is even , there is an odd number of @xmath103 s between @xmath191 and @xmath192 , implying that @xmath196 and @xmath197 . since @xmath198 in this case , we get @xmath199 .    to summarize , the potential decreases by at least 1 in every pivot step @xmath200 , and as long as @xmath41 is not the sink , we have @xmath201",
    ". the highest potential is attained by the source , @xmath202 . therefore after at most @xmath177 steps we have @xmath133 .",
    "if @xmath41 happens to be at level  1 already , we obtain a better bound , since @xmath203 in this case .",
    "in fact , the vertex with largest potential in level  1 such that @xmath179 is @xmath204 , and its potential is @xmath205 .",
    "[ cor : poten ] let @xmath36 be a vertex at level  1 , and let @xmath106 be any index for which @xmath175 .",
    "starting from  @xmath41 , algorithm [ alg : pivot ] ( with arbitrary pivot rule r ) reaches a vertex  @xmath142 satisfying @xmath176 after at most @xmath206 iterations .",
    "now @xmath100 comes in : we will apply either lemma  [ lem : poten ] or corollary  [ cor : poten ] to vertices @xmath41 with @xmath207 and @xmath208 , for some @xmath14 .",
    "the next lemma shows that the @xmath103 s at coordinates @xmath209 will stay .",
    "[ lem : visonly ] let @xmath210 $ ] .",
    "after algorithm [ alg : pivot ] with @xmath211 visits a vertex  @xmath41 with @xmath208 , it will visit only vertices  @xmath142 satisfying @xmath212 .    at every iteration , the algorithm replaces the current vertex @xmath41 with @xmath213 , where @xmath214 is the smallest index such that @xmath215 .",
    "it follows that coordinates @xmath209 will be touched only if @xmath216 for all @xmath217 .",
    "when this holds for the first time , we have @xmath218    the unique - completion property ( lemma [ lem : ucp ] ) then implies that we have already reached the sink .",
    "now we can put it all together .",
    "let @xmath41 be the start vertex , and let @xmath14 be the largest index such that @xmath207 ( if no such index exists , @xmath41 is the sink , and we are done ) .",
    "lemmas  [ lem : poten ] and [ lem : visonly ] show that after at most @xmath219 iterations , we additionally have @xmath220 ( since the next pivot step flips @xmath221 ) . at this point @xmath41",
    "is at level  1 , since there is a unique  @xmath155 : at coordinate  @xmath96 . after the flip at coordinate  @xmath96 ,",
    "we repeatedly apply corollary  [ cor : poten ] together with lemma [ lem : visonly ] to also produce @xmath103 s at coordinates @xmath222 , at which point we have reached the sink .",
    "this takes at most @xmath223 more iterations , summing up to a total of @xmath224    a better bound in the case of the identity permutation can be achieved by thoroughly examining the run of the algorithm , as we do next .",
    "[ [ the - identity - permutation . ] ] the identity permutation .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + +    let us now go on to prove theorem  [ thm : id ] .",
    "for this , we first identify certain `` milestone '' vertices that are visited by algorithm [ alg : pivot ] with @xmath117 , and then we count the number of iterations to get from one milestone to the next .",
    "let us define @xmath225    [ lem : l4 ] if algorithm [ alg : pivot ] with @xmath117 starts at the vertex @xmath226 , @xmath227 , it gets to the vertex @xmath228 in @xmath229 iterations .",
    "the algorithm starts at @xmath230 , and then proceeds by the rules of pivoting and in four phases ( recall that @xmath231 always pivots on the leftmost  @xmath53 ) :    * it pivots on the coordinates @xmath232 , @xmath233 ,   ,  @xmath103 and thus reaches the vertex + @xmath234 after @xmath235  iterations . *",
    "it pivots on the coordinates @xmath236 , @xmath120 , @xmath237 ,   ,  @xmath238 , @xmath239 and thus reaches the vertex + @xmath240 after @xmath235  iterations ; * it pivots on the coordinates @xmath238 , @xmath241 ,   ,  @xmath236 and thus reaches the vertex + @xmath242 after @xmath14  iterations ; * it pivots on the coordinates @xmath103 , @xmath243 , @xmath244 ,   ,  @xmath232 and thus reaches the vertex + @xmath245 after @xmath235  iterations .",
    "therefore it takes @xmath229 iterations to get from @xmath226 to @xmath228 .",
    "the previous lemma allows us to count the number of iterations from @xmath246 to @xmath247 .",
    "the following lemma takes care of the remaining iterations .",
    "[ lem : l6 ] if algorithm [ alg : pivot ] with @xmath117 starts at the vertex @xmath247 , it gets to the global sink in @xmath248 iterations .",
    "the proof is similar to the proof of lemma [ lem : l4 ] , except that here only the first phase takes place : if the algorithm starts at the vertex @xmath249 , it pivots on coordinates @xmath34 , @xmath250 ,   ,  @xmath103 and thus reaches the sink after @xmath248 iterations .",
    "by lemmas  [ lem : l4 ] and [ lem : l6 ] , the overall number of iterations from the source to the sink is @xmath251",
    "in this section we examine _ k - lcps _ , the linear complementarity problems @xmath110 where @xmath5  is a k - matrix .",
    "we introduce two simple combinatorial conditions on unique - sink orientations and prove that one of them implies that all directed paths from  @xmath116 are short , and the other one implies that all directed paths in the orientation are short .",
    "we show that k - lcp orientations satisfy these conditions and conclude that a simple principal pivoting method with an arbitrary pivot rule solves a k - lcp in linearly many iterations , starting from any vertex .",
    "a unique - sink orientation  @xmath52 is _ 2-up - uniform _ if whenever @xmath253 is such that @xmath254 and @xmath142  is the source of  @xmath255 , then the orientation of the subcube  @xmath74 is uniform ( see figure  [ fig:2uu ] ) .",
    "the essential fact we use is that a subcube of a k - uso is also a k - uso , as was observed already by stickney and watson  ( * ? ? ?",
    "* lemma  1 ) .",
    "thus it suffices to prove 2-up - uniformity for k - lcps of dimension  2 .",
    "hence suppose that @xmath257 is a @xmath258 k - matrix , so @xmath259 and @xmath260 .",
    "then @xmath261 and nonsingular .",
    "now 0  is the source of the orientation induced by the  @xmath110 if and only if @xmath262 .",
    "hence @xmath263 , which proves uniformity .",
    "one particular nice property of a 2-up - uniform orientation is that all paths from the vertex  0 to the sink  @xmath107 have the shortest possible length , equal to the hamming distance @xmath264 of  @xmath107 from  @xmath116 . to prove this statement , we use the following lemma .",
    "suppose for the sake of contradiction that @xmath140 , @xmath266 and @xmath269 , and that @xmath267 , @xmath270 and @xmath271 .",
    "let @xmath272 and consider the subcube  @xmath74 ( see figure  [ fig : uni - proof1 ] , left ) : we observe that @xmath273 because otherwise the subcube would not contain a sink .",
    "but then it follows from 2-up - uniformity of  @xmath52 that @xmath274 , a contradiction .",
    "it follows from lemma  [ lem : crufa - up ] by induction that if @xmath142  is a vertex on any directed path starting from  @xmath116 , and if @xmath147 , then @xmath274 .",
    "hence all edges on a directed path from  @xmath116 to  @xmath107 are oriented from  0 to  1 , and therefore the length of a directed path from  @xmath116 to  @xmath107 is  @xmath264 .        what is the actual strength of this theorem ? we know that from any vertex of a unique - sink orientation there _ exists",
    "_ a path to the sink of length at most  @xmath34 ( lemma [ lem : hamming ] ) .",
    "it has also long been known how to find such a path from the vertex  0 in the case of a k - uso  @xcite .",
    "the novelty is that _ any _ directed path starting from  0 reaches the sink after the least possible number of iterations .",
    "hence a simple principal pivoting method with an _ arbitrary _ pivot rule finds the solution to a k - lcp in at most @xmath34  iterations .    in view of this result",
    ", it is natural to ask whether it also holds if the path starts in some vertex different from  0 .",
    "imposing 2-up - uniformity is insufficient , as we can observe by looking at the morris orientations .",
    "if we swap 0 s and 1 s in any morris orientation , we get a 2-up - uniform orientation .",
    "hence all directed paths from  0 to the sink are short ; indeed , 0  is the sink of the orientation after swapping , so all such paths have length  0 .",
    "nevertheless , long directed paths ( and even directed cycles ) do exist in this orientation .",
    "therefore we introduce the following stronger combinatorial property of usos , which turns out to be satisfied by k - usos as well .",
    "[ cor:2n ] algorithm [ alg : pivot ] with an arbitrary pivot rule  r , starting at an arbitrary vertex of the corresponding uso , finds the solution to an @xmath34-dimensional k - lcp in at most @xmath280  iterations .    as a consequence ,",
    "we get a result for a larger class of lcps .",
    "if @xmath5  is a _ principal pivotal transform _",
    "* section 2.3 ) of a k - matrix  @xmath281 , then @xmath5  is a p - matrix ( * ? ? ?",
    "* theorem 4.1.3 ) , and the uso @xmath52 induced by the @xmath110 is isomorphic to the uso  @xmath282 induced by the @xmath283 for suitable @xmath284 .",
    "it follows that corollary  [ cor:2n ] also applies to the @xmath110 , even though @xmath5  is not necessarily a k - matrix itself .",
    "our proof of theorem  [ thm:2lu ] is based on the following crucial fact , which extends lemma  [ lem : crufa - up ] .",
    "informally , it asserts that once we have a @xmath285 in some coordinate , we will always have a @xmath285 .",
    "if @xmath266 , the claim follows from lemma  [ lem : crufa - up ] .",
    "so let us suppose that we have @xmath140 , @xmath286 and @xmath269 , and that @xmath267 , @xmath270 and @xmath287 .",
    "let @xmath288 .",
    "we observe that @xmath273 so that the subcube  @xmath74 contains a sink .",
    "but then it follows from 2-up - uniformity of  @xmath278)}$ ] that @xmath64 , a contradiction ( see figure  [ fig : uni - proof1 ] , right ) .",
    "let @xmath14 be a fixed coordinate .",
    "suppose in the considered directed path there is an edge @xmath269 such that @xmath140 . as a consequence of lemma  [ lem : crufa ] ,",
    "all vertices @xmath142 on a directed path starting at @xmath41 satisfy @xmath147 .",
    "it follows that in any directed path no more than two edges appear of the form @xmath289 for any fixed  @xmath14 : possibly one with @xmath123 and one with @xmath140 .",
    "this fact then implies that the length of any directed path is at most  @xmath280 .",
    "the strength of 2-uniformity can perhaps be explained by its being equivalent to what we call _ local uniformity_. a uso  @xmath52 is _ locally up - uniform _ if for every @xmath290 such that @xmath291 and @xmath292 for all @xmath293 , the orientation of the subcube  @xmath74 is uniform .",
    "a uso  @xmath52 is _ locally uniform _ if both @xmath52 and @xmath278)}$ ] are locally up - uniform .",
    "local up - uniformity allows for a slight improvement in solving a k - lcp .",
    "when following a directed path starting in  0 , instead of traversing one edge at a time we can perform a `` greedy '' principal pivot : jump straight to the sink of the subcube induced by outgoing edges . unlike the general p - matrix case , it can not lead to cycling . due to local up - uniformity",
    ", it will never increase the number of iterations and may sometimes reduce it .",
    "the answer to this question is negative . it can be shown that the number of @xmath34-dimensional locally uniform usos is asymptotically much larger than the number of k - usos .",
    "a lower bound of @xmath294 on the number of locally uniform usos can be derived by an adaptation of develin s construction  @xcite of many orientations satisfying the holt - klee condition .",
    "an upper bound of  @xmath295 on the number of p - usos ( and thus also k - usos ) follows from develin s proof of his upper bound on the number of lp - realizable cube orientations .",
    "a.  borici and h .- j .",
    "pricing american put options by fast solutions of the linear complementarity problem . in e.",
    "j. kontoghiorghes , b.  rustem , and s.  siokos , editors , _ computational methods in decision - making , economics and finance _ , volume  74 of _ applied optimization_. kluwer acad .",
    "dordrecht , 2002 .",
    "f.  holt and v.  klee .",
    "a proof of the strict monotone @xmath120-step conjecture . in _ advances in discrete and computational geometry _",
    ", volume 223 of _ contemp .",
    "_ , pages 201216 ."
  ],
  "abstract_text": [
    "<S> we study the behavior of simple principal pivoting methods for the p - matrix linear complementarity problem ( p - lcp ) . </S>",
    "<S> we solve an open problem of morris by showing that murty s least - index pivot rule ( under any fixed index order ) leads to a quadratic number of iterations on morris s highly cyclic p - lcp examples . </S>",
    "<S> we then show that on k - matrix lcp instances , _ all _ pivot rules require only a linear number of iterations . </S>",
    "<S> as the main tool , we employ _ unique - sink orientations _ of cubes , a useful combinatorial abstraction of the p - lcp . </S>"
  ]
}
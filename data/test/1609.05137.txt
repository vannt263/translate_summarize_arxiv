{
  "article_text": [
    "the uniform sampling of bipartite , directed or undirected graphs ( without self - loops and multiple edges ) with fixed degree sequence has many applications in network science @xcite .",
    "it has proven difficult to generate truly unbiased samples of graphs with fixed degree sequence @xcite . in this paper",
    "we focus on markov chain approaches to this problem , where a graph is randomised by repeatedly making small changes to it .",
    "even though several markov chains have been shown to converge to the uniform distribution on their state space @xcite , the main question for both theoreticians and practitioners remains unanswered : that is , in all but some special cases it is unknown how many changes need to be made , i.e. how many steps the markov chains needs to take , in order to sample from a distribution that is close to uniform .",
    "the best known markov chain approach for sampling graphs with fixed degree sequence is the _ _ switching model _ _ @xcite .",
    "it finds an approximately uniform sample of bipartite graphs , undirected graphs or directed graphs with given vertex degrees , by repeatedly switching the ends of non - adjacent edge pairs .",
    "this simple yet flexible approach converges to the uniform distribution if implemented correctly .",
    "furthermore , this chain was proven as _",
    "fully polynomial almost uniform sampler _ for the following classes of graphs : regular , half - regular and irregular with bounded degrees @xcite .",
    "however , even for these classes of graphs , the theoretically proven mixing time is much too large to use in practice , e.g. @xmath0 for regular graphs with degree @xmath1 @xcite .",
    "notice that the fully polynomial uniform sampler of jerrum et al .",
    "@xcite for perfect matchings can be used to sample all graphs with fixed degree sequence in polynomial time in transforming the fixed degree sequence problem in a perfect matching problem via an approach of tutte @xcite .",
    "however , the theoretical proven mixing times are much too large in practice and furthermore , this approach is more difficult to implement .    in this paper",
    "we analyse and further develop a _",
    "different _ markov chain approach : the curveball algorithm @xcite , which randomises bipartite graphs and directed graphs with self - loops .",
    "experimentally , this chain has been shown to mix much faster than the corresponding switching chain @xcite .",
    "the intuition behind the curveball algorithm mixing faster than the switching model can be understood when thinking of both algorithms as games in which kids trade cards .",
    "that is , think of the curveball algorithm as an algorithm that randomises the binary @xmath2 bi - adjacency matrix of a bipartite graph .",
    "imagine that each row of the adjacency matrix corresponds to a kid , and the @xmath3 s in each row correspond to the cards owned by the kid . then at each step in the curveball algorithm ,",
    "two kids are randomly selected , and trade a number of their differing cards . using this same analogy for the switching model , in each step two cards are randomly selected and traded if firstly they are different and secondly they are owned by different kids .",
    "intuitively , the curveball algorithm is clearly a more efficient approach to randomise the card ownership by the kids .",
    "more formally , the curveball algorithm is also based on switches but instead of making one switch , several switches can be made in a single step . we show that this leads to possibly exponentially many graphs being reached in a single step , in contrast with the switching model where at most @xmath4 ( the maximum number of possible edge pairs ) graphs can be reached in a single step .",
    "several algorithms closely related to the curveball algorithm were discovered independently by verhelst @xcite . in particular , verhelst already made the critical change from switches to trades .",
    "the curveball algorithm is briefly mentioned by verhelst as a variation on his non - uniform sampling algorithms .",
    "however , he prefers a metropolis - hastings approach to obtain uniform samples , since intuitively it mixes faster .",
    "it is unclear if the added complexity of a single trade in this algorithm causes the overall algorithm to run faster .",
    "verhelst furthermore introduces an algorithm similar to the curveball algorithm that fixes the position and number of self - loops , and hence can be used to randomise directed graphs .    here , we propose two extensions of the curveball algorithm : the directed curveball algorithm , which samples directed graphs and the undirected curveball algorithm , which samples graphs .",
    "our proposed algorithm for directed graphs differs from verhelst s algorithm in the way it deals with induced cycle sets @xcite . by introducing these extensions ,",
    "we show that , just like the switching model , the curveball algorithm offers a flexible framework that can be used to randomise several classes of graphs .",
    "furthermore , we propose a modification to the curveball algorithm and the directed curveball algorithm , that further increases the number of states that can be reached in a single step .",
    "we refer to these algorithms as the global curveball algorithm and the global directed curveball algorithm respectively . in the card game analogy",
    ", our modification corresponds to letting _ all _ kids trade cards in pairs _ simultaneously _ instead of letting only one pair of kids trade .",
    "we prove that both extensions of the curveball algorithm , as well as our global directed curveball algorithms , converge to the uniform distribution .",
    "we do so by showing that their markov chains are ergodic ( the underlying state graph is non - bipartite and connected ) and the transition probabilities are symmetric ( see @xcite for an overview on random sampling ) .",
    "our proofs follow the approach in @xcite where the original curveball algorithm was proven to converge to the uniform distribution .",
    "we show experimentally that the introduced curveball algorithms all tend to mix magnitudes faster than the respective switching models . however ,",
    "even though experimentally it is clear that the curveball algorithm outperforms the switching model , we do not have a theoretical justification for this .",
    "in fact , it turns out that the techniques used to prove fast mixing for the switching chain can not be transferred to the curveball algorithm .",
    "hence we present the question of fast mixing for curveball algorithms as an interesting open problem . in our opinion , the curveball algorithm provides a big opportunity and step forward to fast mixing markov chains for the sampling of graphs with fixed degree sequence .",
    "the remainder of this paper is organised as follows .",
    "section [ sec : cb_ext ] first discusses the original curveball algorithm in terms of adjacency lists , it then introduces two extensions of the curveball algorithm : the directed curveball algorithm that randomises directed graphs , and the undirected curveball algorithm that randomises graphs .",
    "furthermore it introduces our modification to the curveball algorithm and directed curveball . in section [ sec : unbiased ] we prove that under mild conditions , all proposed algorithms converge to the uniform distribution . section",
    "[ sec : mixing_times ] presents our experimental results on the run - times of all proposed algorithms .",
    "furthermore we analyse why the proof of rapid mixing for the switching model can not be used for the curveball algorithm .",
    "finally we discuss our conclusions and recommendations for further research in section [ sec : concl ] .",
    "we start with a formal definition . given two lists @xmath5 and",
    "@xmath6 of non - negative integers , the _ realization problem for bipartite fixed degree sequence _ asks whether there is a labeled bipartite graph , @xmath7 , such that all vertices @xmath8 with @xmath9 have degree @xmath10 and all vertices @xmath11 with @xmath12 degree @xmath13 .",
    "analogously , the _ realisation problem for directed fixed degree sequence _ asks for a labeled directed graph for a list @xmath14 , and the _ realisation problem for undirected fixed degree sequence _ for a graph for given list @xmath15 for an overview about these problems see  @xcite .",
    "the corresponding graphs or lists for each problem are called _ realisations _ or _ degree sequences _ , respectively .",
    "the curveball algorithm , as introduced in @xcite , is a markov chain approach to the uniform random sampling of a realisation with bipartite fixed degree sequence .",
    "given one such realization , the curveball algorithm finds others by repeatedly making small changes to the _ adjacency list representation of the bipartite graph . _",
    "the adjacency list representation @xcite of a bipartite graph @xmath16 is a set of lists @xmath17 , one for each vertex @xmath9 .",
    "the list @xmath17 contains the indices @xmath18 corresponding to the neighbours @xmath19 of @xmath20 ( see figure [ fig : adj_lists](a ) ) corresponding to neighbours of the vertex @xmath21 . depending on the degree sequence ,",
    "the curveball algorithm may run faster on this representation . ] . the adjacency list representation of all graphs discussed in this paper are in fact sets of _ sets_. we will therefore from now on refer to this representation as the _ adjacency set representation_.     the adjacency set representations of ( a ) a bipartite graph , ( b ) a digraph , and ( c ) a graph.,width=453 ]    the curveball algorithm randomises the adjacency sets of a bipartite graph using the following steps .",
    "( a ) select two sets @xmath17 and @xmath22 at random .",
    "( b ) let @xmath23 be all indices that are in @xmath17 but not in @xmath22 , i.e. @xmath24 . similarly define @xmath25 .",
    "( c ) create new sets @xmath26 by removing @xmath23 from @xmath17 and adding the same number of elements randomly chosen from @xmath27 .",
    "combine @xmath28 with the remaining elements of @xmath27 to form @xmath29 .",
    "( d ) reiterate step ( a)-(c ) @xmath30 times , for a certain fixed number @xmath30 .",
    "we follow @xcite and refer to one iteration of steps ( a)-(c ) as a _ trade _ and the number of exchanged indices @xmath31 as the _ size of the trade_. notice that trades can be of size zero and such trades correspond to repeating the current state in the markov chain .",
    "furthermore , note that each switch in the switching model for directed graphs equals a trade of size one in the curveball algorithm , as was shown in @xcite",
    ". however , the curveball algorithm in addition allows trades of larger size .",
    "as discussed in @xcite , the curveball algorithm can be used to sample directed graphs with self - loops ( without multiple edges ) with fixed in- and out - degrees .",
    "the adjacency set representation of a digraph with self - loops consists of sets @xmath17 corresponding to out - neighbours of a vertex @xmath20 ( figure [ fig : adj_lists](b ) ) correspond to the in - neighbours of @xmath20 .",
    "depending on the digraph that is being randomised , the curveball algorithm may be more efficient when using the in - neighbour representation . ] .",
    "we now introduce two extensions of the curveball algorithm : the directed curveball algorithm randomises directed graphs for a fixed degree sequence @xmath32 @xmath33 @xmath34 , @xmath35 , @xmath36 , @xmath37 ( realisation problem for directed graphs ) and the undirected curveball algorithm randomises graphs for a fixed degree sequence @xmath38 ( realisation problem for graphs ) @xcite .",
    "the directed curveball algorithm randomises directed graphs by randomising their adjacency set representation . the adjacency set representation of a digraph is the same as that of directed graphs with self - loops , except that it has the property @xmath39 for all @xmath40 , since directed graphs do not contain self - loops . the _ directed curveball algorithm",
    "_ differs from the curveball algorithm in step ( b ) only . in the directed curveball algorithm ,",
    "the set @xmath23 is defined as all elements in @xmath17 not in @xmath22 _ and not equal to @xmath18 _ ,",
    "i.e. @xmath41 . the set @xmath42 is defined analogously by @xmath43 .",
    "this small change ensures no self - loops are introduced while randomising directed graphs .",
    "figure [ fig : simple_cb ] illustrates the directed curveball algorithm .",
    "notice that for the directed curveball algorithm trades can be of size zero and such trades correspond to repeating a state in the markov chain .",
    "the lemma below shows that all switches in the switching model for directed graphs equal trades of size one in the directed curveball algorithm .",
    "but , the directed curveball algorithm in addition allows trades of larger size .",
    "[ lem : subgraph_simple_dir ] any switch in a digraph is a trade of size one in step ( c ) of the directed curveball algorithm .",
    "let @xmath44 and @xmath45 be edges in a digraph @xmath46 that are allowed to be switched",
    ". then @xmath47 can not be equal to @xmath48 and @xmath49 can not be equal to @xmath50 since otherwise this switch would introduce a self - loop .",
    "furthermore @xmath51 and @xmath52 since otherwise the resulting digraph would have multiple edges .",
    "in particular this implies @xmath53 and @xmath54 .",
    "now if row @xmath47 and row @xmath49 are selected for a trade , then @xmath55 and @xmath56 are possible sets in step ( c ) that lead to exactly the two new edges @xmath57 and @xmath58 .",
    "illustration of the directed curveball algorithm . in this example , the vertices @xmath59 and @xmath60 are selected in step ( a ) . in step ( b )",
    "their entries are compared to create the sets @xmath61 and @xmath62 .",
    "notice that 3 is removed from @xmath63 since trading it would introduce a self - loop at vertex @xmath59 . in step ( c )",
    "the new sets @xmath64 and @xmath65 are constructed by randomly redistributing the elements @xmath66 and @xmath67 .",
    "step ( d ) repeats steps ( a)-(c ) @xmath30 times .",
    "the dashed arrow shows the result of the single trade made in steps ( a)-(c).,width=453 ]      the undirected curveball algorithm samples graphs with fixed degree sequence .",
    "the adjacency set representation of a graph @xmath68 is a set of sets @xmath17 .",
    "the set @xmath17 now contains the indices of the neighbours of vertex @xmath20 ( figure [ fig : adj_lists](c ) ) .",
    "the symmetry of a graph is reflected in its adjacency set representation .",
    "that is , @xmath40 is an element of @xmath22 if and only if @xmath18 is also an element of @xmath17 .",
    "furthermore , these sets have the property that @xmath39 for all @xmath40 , since graphs do not contain self - loops .",
    "we introduce the undirected curveball algorithm .",
    "this algorithm randomises the adjacency set representation of a graph while maintaining its symmetry and ensuring no self - loops are introduced .",
    "the undirected curveball algorithm is defined by the following steps .",
    "( a ) randomly select two sets @xmath17 and @xmath22 .",
    "( b ) let @xmath23 be the set of elements in @xmath17 not in @xmath22 and not equal to @xmath18 , i.e. @xmath41 .",
    "analogously define @xmath43 .",
    "( c ) create a new set @xmath26 by removing @xmath23 from @xmath17 and adding the same number of elements randomly chosen from @xmath27 .",
    "combine @xmath28 with the remaining elements of @xmath27 to form @xmath29 .",
    "( c@xmath69 ) for each index @xmath70 , replace @xmath18 by @xmath40 in @xmath71 , similarly for each @xmath72 , replace @xmath40 by @xmath18 in @xmath73 .",
    "( d ) reiterate step ( a)-(c@xmath69 ) @xmath30 times , for a certain fixed number @xmath30 .",
    "figure [ fig : simple_undir_cb ] illustrates the undirected curveball algorithm .    step ( b ) ensures no self - loops are introduced .",
    "step ( c@xmath69 ) is well - defined since @xmath70 implies @xmath74 and @xmath75 .",
    "this in turn implies that @xmath76 and @xmath77 by symmetry of the adjacency sets .",
    "thus we can replace @xmath18 by @xmath40 in @xmath78 to obtain @xmath71 .",
    "similarly @xmath72 implies that @xmath40 is an element of @xmath79 and that @xmath18 is not . and",
    "thus , replacing @xmath40 by @xmath18 in @xmath79 is well - defined .",
    "step ( c@xmath69 ) thus ensures that @xmath80 represents a graph .",
    "illustration of the undirected curveball algorithm . in this example",
    "the sets @xmath81 and @xmath82 are selected in step ( a ) . in step ( b ) their entries are compared to create the sets @xmath83 and @xmath84 . in step ( c )",
    "the new sets @xmath85 and @xmath64 are constructed by randomly redistributing the elements @xmath3 and @xmath86 .",
    "step ( c ) updates the sets corresponding to indices involved in the trade . in this case",
    "we need to update @xmath87 by removing @xmath88 and inserting @xmath89 , conversely @xmath90 .",
    "step ( d ) repeats steps ( a)-(c ) @xmath30 times .",
    "the dashed arrow shows the result of the single trade illustrated by steps ( a)-(c).,width=453 ]    notice that the undirected curveball algorithm includes trades of size zero which correspond to repeating the current state in the markov chain .",
    "furthermore , lemma [ lem : switch_equals_trade_undir ] shows that any switch in the switching model for graphs corresponds to a trade of size one in the undirected curveball algorithm .",
    "in fact , figure [ fig : undircb ] shows that for each switch in the switching model , there are two different trades of size one in the undirected curveball algorithm .",
    "[ lem : switch_equals_trade_undir ] let @xmath91 be graphs that differ by a switch .",
    "there are two trades of size one in the undirected curveball algorithm from @xmath46 to @xmath92 .    without loss of generality",
    "we may assume that @xmath46 and @xmath92 differ by a switch from @xmath93 and @xmath94 to @xmath95 and @xmath96 ( see figure [ fig : undircb ] ) .",
    "let @xmath97 be the adjacency set representation of @xmath46 , then @xmath53 since the edge @xmath93 is an edge of @xmath46 , the edge @xmath96 is not and @xmath50 can not be equal to @xmath49 since @xmath98 and @xmath92 has no self - loops .",
    "similarly we find that @xmath54 and hence the trade that swaps @xmath50 and @xmath48 between rows @xmath47 and @xmath49 results in the graph @xmath92 .",
    "similarly , there is a second trade which generates @xmath92 , namely the trade that exchanges @xmath47 and @xmath49 between sets @xmath99 and @xmath100 .",
    "a switch corresponds to a trade of size one in the undirected curveball algorithm . notice that each switch can be realized by two distinct trades : the switch from @xmath93 and @xmath94 to @xmath95 and @xmath96 can be realized by selecting @xmath101 and @xmath102 or by selecting @xmath99 and @xmath100 .",
    ", width=453 ]    analogous to the other versions of the curveball algorithm , the undirected curveball algorithm in addition allows trades of larger size , corresponding to making several switches at once .",
    "we now introduce the global curveball algorithm and the global directed curveball algorithm as a modification of the curveball algorithm and the directed curveball algorithm respectively .",
    "the number of graphs that can be reached by a single step in the markov chain of these _ global _ curveball algorithms is even higher than for the regular curveball algorithms .",
    "this modification is motivated by our desire to improve the curveball algorithm in situations where it can reach the exact same number of graphs as the switching model .",
    "this happens for instance when a biadjacency matrix represents a perfect matching , i.e. row and column sums are one . in this case",
    ", each trade has at most size one , and hence corresponds to either a switch or a repeated state .    as explained in the introduction , instead of attempting trades between two sets ( kids ) in the adjacency set representation , the global algorithms allow each of the sets to trade in pairs .",
    "more formally , the global curveball algorithm and the global directed curveball algorithm are defined as follows .",
    "we replace step ( a ) in the curveball algorithm and directed curveball algorithm by the following step : for all lists @xmath103 choose uniformly at random a 2-partition @xmath104 , @xmath105 , @xmath106 , @xmath107 for even @xmath108 , or , @xmath109 , @xmath105 , @xmath106 , @xmath110 , @xmath111 for odd @xmath108 . for each pair @xmath112 apply steps ( b)-(c ) .",
    "step ( d ) again reiterates steps ( a)-(c ) @xmath30 times .",
    "we refer to one iteration of steps ( a)-(c ) as a _ global trade _ in analogy to the term trade for the curveball algorithm . in the appendix we present algorithm  [ algorithmtwopartition ] for determining a uniform @xmath88-partition in @xmath113 asymptotic runtime .",
    "in our example of a perfect matching above , the global curveball algorithm has an exponential number of possible transitions for each realisation : each pair of the @xmath114 possible partitions allows @xmath115 different global trades , since all @xmath116 adjacency list pairs allow two trades ( a switch or a trade of size zero ) .",
    "this exponential number of possible transitions is in contrast to only a quadratic number of transitions in the curveball algorithm : each transition corresponding to a single switch for each of the @xmath117 possible adjacency list pairs .",
    "a similar modification to the undirected curveball algorithm is not possible .",
    "a trade between two sets affects additional sets in step ( @xmath118 ) , and hence a trade between a pair of sets is not independent of trades between other pairs of sets .",
    "a markov chain can be seen as a _ random walk _",
    "@xcite on a set @xmath119 of combinatorial objects , the so - called _ states_. two states @xmath120 are connected via a transition edge @xmath121 , when @xmath47 can be transformed into @xmath50 via a small local change . for the switching chain",
    "such a ` local change ' corresponds to a switch , and in the curveball algorithms to one trade . for both algorithms , the states of @xmath119",
    "are all realisations of a fixed degree sequence .",
    "this definition induces a so - called directed _ state graph _ @xmath122 , representing the states and how they are connected by local changes . a step from @xmath47 to @xmath50 in a random walk",
    "is done with _ transition probability _",
    "@xmath123    in @xcite",
    "the curveball algorithm was proven to converge to the uniform distribution by applying the fundamental theorem for markov chains ( see for example @xcite ) .",
    "[ thm : mc_stationary ] a finite markov chain converges to its unique stationary distribution if its state graph @xmath122 is connected and non - bipartite .",
    "if there exists a probability distribution @xmath124 $ ] such that the detailed balanced equations , @xmath125 , are satisfied for all @xmath126 then @xmath127 is the unique stationary distribution .    markov chains which fulfill these properties are called _",
    "ergodic_. this theorem implies that an ergodic markov chain converges to the uniform distribution if @xmath128 for all @xmath120 .",
    "we now derive the conditions for which the directed curveball algorithm , the undirected curveball algorithm , the global curveball algorithm , and the global directed curveball algorithm converge to the uniform distribution on their respective state spaces , i.e. the set of all possible solutions of the realisation problem .",
    "we start by deriving the transition probabilities of the directed curveball algorithm .",
    "[ lem : subgraph_simple_dir ] let @xmath129 and @xmath80 be two adjacency set representations of directed graphs with equal degree sequence .",
    "the transition probability @xmath130 from @xmath129 to @xmath80 , in the directed curveball algorithm , is given by @xmath131 where @xmath132 and @xmath133 .",
    "hence , @xmath134 for all @xmath135 .",
    "the probability of transitioning from a state @xmath129 to another state @xmath80 that differs in a trade between sets @xmath17 and @xmath22 can be found as follows .",
    "the probability of selecting set @xmath17 and set @xmath22 equals the inverse of the number of pairs of sets in the adjacency set representation , i.e. @xmath136 , where @xmath108 equals the number of sets .",
    "the probability that shuffling @xmath27 results in state @xmath80 equals the inverse of the number of ways you can select @xmath137 unordered elements from the set @xmath27 in step ( c ) of the algorithm .",
    "this probability equals @xmath138 since @xmath139 .    to show that the probabilities @xmath130 and @xmath140 are equal for all adjacency sets @xmath129 and @xmath80 we only need to show that this is true in the non - trivial case when the adjacency sets differ exactly in two sets , say @xmath17 and @xmath22 . @xmath141 equals @xmath142 , and @xmath143 equals @xmath144 since trades do not add or remove elements .",
    "we find @xmath145 since @xmath146 , and @xmath147 .",
    "similarly @xmath148 , and indeed we find @xmath134 .",
    "we next discuss irreducibility of the directed curveball algorithm .",
    "notice that lemma [ lem : subgraph_simple_dir ] implies that the state graph of the switching model for simple directed graphs is a subgraph of the state graph of the directed curveball algorithm because each switch is a trade of size one .",
    "hence , since both markov chains have the same state space , whenever the switching model for directed graphs has irreducible markov chain then so does the markov chain of the directed curveball algorithm .",
    "this leads to the following theorem .",
    "[ thm : concergence_directed_notconnected ] if the state graph corresponding to the switching chain for directed fixed degree sequences is connected , then the markov chain of the directed curveball chain converges to its stationary distribution , which is the uniform distribution . on the other hand ,",
    "if the markov chain of the switching model is not connected , then applying the curveball algorithm to any component converges to the uniform distribution on all states in this component .",
    "the state graph of the switching model with respect to directed graphs is a subgraph of the state graph of the directed curveball algorithm ( lemma [ lem : subgraph_simple_dir ] ) .",
    "hence , a connected state graph of the switching chain implies a connected state graph of the directed curveball chain .",
    "the state graph of the directed curveball chain is always non - bipartite , since there is a non - zero transition probability @xmath149 of repeating each state @xmath129 in step ( c ) , due to trades of size zero .",
    "finally @xmath134 for all states @xmath129 and @xmath80 ( see lemma [ lem : subgraph_simple_dir ] ) .",
    "hence convergence to the uniform distribution follows from theorem [ thm : mc_stationary ] .",
    "it is well - known that the switching model for directed graphs can have a reducible markov chain @xcite .",
    "the simplest example being a directed cycle on three vertices , its opposite orientation can not be achieved by switches , since no switch is possible without introducing self - loops .",
    "we know of two approaches to mitigate this problem for switching chains : one is to introduce an additional move which reorients directed cycles of length three ( hexagonal move in @xcite ) .",
    "this is the approach taken in @xcite to sample directed graphs .",
    "however , we follow a second approach that uses a pre - sampling step @xcite . we prefer this approach because the corresponding markov chain runs on a ( potentially much ) smaller state graph compared with the triangle reorientation chain and hence should be faster .",
    "furthermore , this approach is much easier to transfer to the directed curveball algorithm .    to discuss this approach",
    "we need the definition of _ induced cycle sets _",
    "@xcite for a directed graph sequence @xmath150 .",
    "an induced cycle set consists of three indices , @xmath151 , @xmath152 and @xmath153 , for pairs in @xmath150 such that the vertices @xmath154 form a directed cycle in _ each _ directed graph realisation of @xmath150 .",
    "let @xmath155 be the state graph of the switching model for directed graphs with fixed degree sequence @xmath150 .",
    "berger et al @xcite prove that @xmath155 is non - connected if and only if @xmath150 contains an _ induced cycle set_. in fact , they prove that if @xmath150 contains @xmath156 induced cycle sets , then @xmath155 consists of @xmath157 isomorphic components where each component corresponds to a specific orientation for all @xmath156 cycles .",
    "hence , instead of introducing a triangle reorientation , berger et al . @xcite choose one of the isomorphic components uniformly at random prior to running the switching model on this component .",
    "notice that they also show that all induced cycle sets are disjunctive , i.e. at most @xmath158 such cycle sets are possible .",
    "the state graph of the directed curveball algorithm decomposes in @xmath157 isomorphic components , where @xmath159 is the number of induced cycle sets .",
    "if it is not connected @xmath160 , then applying the directed curveball algorithm on any component leads to the uniform distribution of all states in this component .",
    "the state graph for the directed curveball decomposes in at most @xmath157 isomorphic components because the state graph of the switching chain for directed sequences is a subgraph ( lemma  [ lem : subgraph_simple_dir ] ) of the state graph of the directed curveball algorithm , and the state graph of the switching chain decomposes in @xmath157 isomorphic components @xcite .",
    "all these components contain realisations which only differ in the orientation of triangles of induced cycle sets .",
    "the directed curveball algorithm basically applies switches , and is not able to change these triangles .",
    "hence , the state graph of the directed curveball chain has exactly @xmath157 components , consisting of exactly the same states as the components of the switching chain state graph",
    ". therefore trades must be identical in each component leading to isomorphic components . using the non - bipartitness of each component ( proof of theorem  [ thm : concergence_directed_notconnected ] ) and @xmath161 with lemma  [ lem : subgraph_simple_dir ]",
    ", it follows with theorem  [ thm : mc_stationary ] that the directed curveball algorithm on a component converges to the uniform distribution on all states in the component .",
    "this theorem implies that choosing one component uniformly at random and applying the directed curveball algorithm on this component leads to a uniform distribution of all states .",
    "hence , we propose the following adjusted directed curveball algorithm for a directed graph @xmath46 with degree sequence @xmath150 : ( 1 ) identify all @xmath156 induced cycle sets in @xmath150 .",
    "( 2 ) choose a random orientation for each induced cycle set in @xmath46 , leading to a realisation @xmath92 of @xmath150 .",
    "( 3 ) use the directed curveball algorithm starting with @xmath92 .",
    "let @xmath46 be a directed graph with directed graph sequence @xmath150 .",
    "the adjusted directed curveball algorithm converges to the uniform distribution on all directed graph realisations of @xmath150 .",
    "we now propose a linear - time algorithm for the identification of all induced cycle sets in ( 1 ) of the adjusted directed curveball algorithm .",
    "this approach follows a result of lamar  @xcite , which we write in a different form and simplify .",
    "first we give a classical definition of _ corrected ferrers matrices _ for a degree sequence @xmath162 , @xmath106 , @xmath163 in non - increasing lexicographical order . a corresponding @xmath164 _",
    "ferrers matrix _",
    "@xmath165 is a matrix with row sums @xmath166 .",
    "each row consists of consecutive @xmath3 s followed by consecutive @xmath167 s with the exception that the diagonal elements @xmath168 are always @xmath169 this leads to column sums @xmath170 of @xmath171 the classical result of chen - fulkerson - ryser states that @xmath150 has a realisation if and only if @xmath172 for all @xmath173 for a comprehensive discussion we recommend the paper of berger @xcite .",
    "we define @xmath174 as the function with @xmath175 for @xmath176 and @xmath177 in all other cases .",
    "lamar  @xcite stated the following result .",
    "[ theoremlamar ] let @xmath178 be a lexicographical non - increasing degree sequence with a directed graph as realisation , and @xmath170 the column sums of its corrected ferrers matrix .",
    "+ let @xmath179 be a permutation of @xmath150 which was generated by exchanging the component order in all pairs and sorting it in non - increasing lexicographical order .",
    "let @xmath180 the column sums of its corrected ferrers matrix .",
    "+ indices @xmath181 form an induced cycle set in @xmath150 if and only if    1 .",
    "@xmath182 2 .",
    "@xmath183 3 .",
    "@xmath184 for @xmath185 4 .",
    "@xmath186 for @xmath187    we state a simpler version of this theorem which is based on the observation that items ( 2 ) and ( 4 ) follow directly from items ( 1 ) and ( 3 ) .",
    "thmtheoreminducedcycles [ theoreminducedcycles ] let @xmath178 be a lexicographical non - increasing degree sequence with a directed graph as realisation , and @xmath170 the columnn sums of its corrected ferrers matrix",
    ". indices @xmath181 form in @xmath150 an induced cycle set if and only if    1 .",
    "@xmath182 2 .",
    "@xmath188 for @xmath185    the proof is given in the appendix .",
    "this results in the following algorithm for detecting all induced cycle sets in linear time ( which was also the case for lamar s theorem  [ theoremlamar ] ) .",
    "( 1 ) sort @xmath150 in non - increasing lexicographical order , ( 2 ) determine the set @xmath189 of all triples @xmath190 fulfilling ( 1 ) in theorem  [ theoreminducedcycles ] , ( 3 ) construct the corresponding ferrers matrix for @xmath150 , and ( 4 ) determine @xmath191 for @xmath173 if @xmath192 for triple @xmath193 then @xmath194 is an induced cycle set .",
    "step ( 1),(2),(4 ) can be done in @xmath113 time .",
    "the construction of the ferrers matrix needs @xmath195 time where @xmath196 denotes the number of @xmath3 s in the matrix . in summary",
    "this algorithm leads to an asymptotic linear time .",
    "we now discuss the conditions under which the undirected curveball algorithm converges to the uniform distribution .",
    "we start by deriving its transition probabilities .",
    "[ lem : undir_cb_trans_prob ] let @xmath129 and @xmath80 be two adjacency set representations of graphs with equal degree sequence .",
    "the transition probability @xmath130 from @xmath129 to @xmath80 , in the undirected curveball algorithm , is given by @xmath197 with @xmath132 , @xmath133 , @xmath198 and @xmath199 .",
    "in particular , @xmath134 for all states @xmath135 .",
    "when the adjacency sets @xmath129 and @xmath80 differ by a trade of size one between sets @xmath17 and @xmath22 involving indices @xmath156 and @xmath200 , then they also differ by a trade of size one between sets @xmath78 and @xmath79 involving indices @xmath40 and @xmath18 ( see lemma [ lem : switch_equals_trade_undir ] ) .",
    "hence , we need to add the probabilities of selecting either one of these trades .",
    "when @xmath129 and @xmath80 differ in trade of size larger than one , there is a unique pair of sets that corresponds to this trade , hence we find the usual transition probability .    to see that @xmath134 , observe that just like in the directed curveball algorithm , a trade between sets @xmath17 and @xmath22 to form @xmath26 and @xmath29 implies that @xmath201 and @xmath202 since trades leave common elements invariant and do not alter the number of elements in eachs set .    for any graph @xmath46",
    ", the markov chain of the undirected curveball algorithm starting at @xmath46 converges to the uniform distribution on all graphs with the same degree sequences as @xmath46 .",
    "the state graph of the switching chain for graphs with fixed degree sequence is a subgraph of the state graph of the undirected curveball algorithm on the same states ( lemma  [ lem : switch_equals_trade_undir ] ) .",
    "the state graph of the switching model was shown to be connected in @xcite which implies the connectance of the state graph of the undirected curveball algorithm .",
    "the state graph of the undirected curveball algorithm is always non - bipartite , since there is a non - zero probability of repeating each state , due to trades of size zero .",
    "finally @xmath134 , see lemma [ lem : undir_cb_trans_prob ] . hence by theorem [ thm : mc_stationary ] the undirected curveball algorithm converges to the uniform distribution on its state space .",
    "we start by deriving the transition probabilities for the global curveball algorithm of subsection  [ sec : modified_curveball ] .",
    "first we calculate the number of possible global trades for _ one _ @xmath88-partition @xmath203 , and develop the number of possible transitions for _ all _ @xmath88-partitions .",
    "this value will be taken as a basis for calculating the transition probabilities . in the following",
    "we denote by _ even partition _ of a set @xmath204 a @xmath88-partition @xmath205 , and by _ odd partition _ @xmath206 .",
    "[ lem : number_global_trade ] let @xmath129 be the adjacency set representations of a bipartite graph with degree sequence @xmath150 , and @xmath203 be a @xmath88-partition of @xmath207 with @xmath208 for even @xmath108 , and @xmath209 for odd @xmath108 .",
    "the number @xmath210 of global trades for @xmath203 in the global curveball chain is @xmath211 with @xmath212 and @xmath213 .",
    "the number of global trades for one partition @xmath203 in the global curveball algorithm is the product of the number of trades for each of the randomly chosen pairs @xmath214 , since trades for these pairs are applied independently .",
    "the number of trades for each pair of rows is the same as that in the original curveball algorithm .",
    "this number was derived in @xcite and our result now follows .",
    "we now discuss an example that shows that two different @xmath88-partitions and corresponding global trades may result in the same change in the adjacency set representation .",
    "let @xmath129 be the following adjacency set representation of a digraph with self - loops : @xmath215 $ ] , @xmath216 $ ] , @xmath217 $ ] and @xmath218 $ ] .",
    "consider the following two different @xmath88-partitions @xmath219 and @xmath220 .",
    "it is easy to see that the set of global trades for both partitions is exactly the same .",
    "this example leads us to derive the transition probabilities of the global curveball algorithm as follows .",
    "lemmamodifiedcurveballtransition [ lem : modified_curveball_transitions ] let @xmath129 and @xmath80 be two adjacency set representations of bipartite graphs with equal degree sequence , and @xmath221 the set of all @xmath88-partitions of @xmath207 .",
    "the transition probability @xmath130 from @xmath129 to @xmath80 , in the global curveball algorithms , is given by @xmath222 where @xmath210 is the number of global trades for one partition @xmath203 in lemma  [ lem : number_global_trade ] .",
    "the number of @xmath88-partitions @xmath223 is given by @xmath224 for even partitions , and by @xmath225 for odd partitions .",
    "in particular , @xmath134 for all @xmath135 .",
    "we prove the result for the bipartite and directed case simultaneously .",
    "each partition in @xmath221 corresponds to at most one global trade ( see lemma  [ lem : number_global_trade ] ) between @xmath129 and @xmath80 .",
    "the probability of selecting a partition that corresponds to a global trade between @xmath129 and @xmath80 equals @xmath226 . for each of these partitions , @xmath203 ,",
    "the probability of selecting the corresponding global trade between @xmath129 and @xmath80 equals @xmath227 .",
    "we derive the number of @xmath88-partitions @xmath223 in the appendix .    using the same arguments as in proof of lemma  [ lem : subgraph_simple_dir ] we get @xmath134 for all @xmath135 because @xmath227 is the probability of @xmath116 independent trades in the directed curveball algorithms .    recalling that global trades correspond to a number of independent trades in the curveball algorithm it follows that the state graph of the directed version of the global curveball algorithm decomposes in @xmath157 isomorphic components whenever induced cycle sets are contained in degree sequence @xmath228 all results from subsection  [ sec : unbiased_simple ] can be applied analogously leading to an _ adjusted version of the global directed algorithm _ which samples uniform at random one isomorphic component and uses global trades to sample within this isomorphic component uniformly at random .",
    "we do not repeat all details from subsection  [ sec : unbiased_simple ] .",
    "instead we state the following theorem .    [",
    "thm : concergence_directed_modified ] if the state graph corresponding to the switching chain for directed fixed degree sequences is connected , then the markov chain of the global directed curveball chain converges to its stationary distribution , which is the uniform distribution . on the other hand ,",
    "if the markov chain of the switching model is not connected , then applying the global directed curveball algorithm to any component converges to the uniform distribution on all states in this component .",
    "the most important question for practitioners as well as theoreticians is how many steps the ( global ) curveball algorithms have to run from an initial probability distribution ( where an initial state is taken from ) to sample from a probability distribution which is close to the uniform distribution .",
    "this number is defined as the _ total mixing time _ ,",
    "i.e. the number @xmath30 of reiteration steps in the curveball algorithms .",
    "the curveball algorithm has experimentally been shown to run much faster than the switching algorithm @xcite .",
    "although we do not know if the total mixing time of the curveball algorithm is smaller than that of the switching model , we show that all of our proposed curveball algorithms ( see section [ sec : cb_ext ] ) tend to run faster in experiments than the respective switching models .      to establish the run - time of a markov chain we need to know both its mixing time , that is the approximate number of steps needed to reach its stationary distribution , and its step run - time , i.e. the the average time it takes to execute a single step in the chain .",
    "all algorithms were implemented in the r programming language and are publicly available @xcite .",
    "the perturbation scores @xcite between directed graphs in the markov chain and the original directed graph provides a dissimilarity measure .",
    "we use the point where this perturbation score stabilizes as an estimate for the mixing time of the markov chains .",
    "figure [ fig : cb_converge_directed](a ) indicates that the directed curveball algorithm mixes in fewer steps than the switching model : the perturbation score stabilizes much faster .",
    "furthermore figure [ fig : cb_converge_directed](b ) shows that the steps in the directed curveball algorithm take much less time to run than those in the switching model .",
    "( a)the perturbation score at each step in the directed curveball algorithm ( solid ) and the switching model with respect to simple directed networks ( dashed ) as compared to the initial network .",
    "we randomise five erds - rnyi random networks @xmath229 with different edge densities @xmath230 .",
    "the perturbation score stabilizes much earlier for the directed curveball algorithm than for the switching algorithm .",
    "( b)the time in seconds , that it takes to run 1000 steps in the directed curveball algorithm and the switching model.,width=453 ]    we found similar results for the undirected curveball algorithm and the corresponding switching model , as shown in figure [ fig : cb_converge_undirected ] .",
    "our experiments indicate an improvement in speed both in terms of the mixing time and the step run - time .",
    "the improved step run - time of the curveball algorithm might be due to the use of the adjacency set representation of networks , as this is an efficient method for storing networks @xcite .",
    "( a)the perturbation score at each step in the undirected curveball algorithm ( solid ) and the switching model with respect to undirected networks ( dashed ) as compared to an initial network .",
    "we randomise five erds - rnyi random networks @xmath229 with different @xmath230 .",
    "( b)the time in seconds , that it takes to run 1000 steps in the undirected curveball algorithm and the switching model.,width=453 ]      even though there is experimental evidence that the mixing time of the curveball algorithms is much faster than that of switching models , there is currently no theoretical proof .",
    "there are few theoretical results about the rapid mixing of the switching model .",
    "for the special case of regular and semi - regular networks @xcite , the polynomial upper bound for the mixing time was found using a multi - commodity flow argument @xcite .",
    "these proofs rely on defining a special class of paths between all states in the state graph .",
    "paths are chosen in such a way that the load on each edge ( the number of paths it takes part in ) is relatively small .",
    "the mixing time can then be bounded from above in terms of a product of these edge loads and the inverse of their transition probabilities .    unfortunately the multi - commodity flow method can not be used to prove rapid mixing for the curveball algorithm",
    ". the same class of paths could be used , but the argument breaks down when estimating the transition probabilities .",
    "the reason for this is that the transition probabilities in the curveball algorithm can be exponentially small with respect to the number of vertices @xmath108 in a network , leading to an exponential factor in the upper bound .",
    "we do not believe that the small transition probabilities are an _ actual _ obstruction to fast mixing of the curveball algorithms , since each state also has a corresponding exponential number of neighbouring states .",
    "the fastest mixing markov chain on @xmath30 states has the complete graph as its state graph , with all transition probabilities equal to @xmath231 . with an exponentially large state space ,",
    "these probabilities are also exponentially small .",
    "intuitively , the curveball algorithm is much closer to this optimal situation than the switching method .",
    "it appears that an altogether different method is needed to find a theoretical upper bound for the mixing time of the curveball algorithm .",
    "this is a difficult , but important open problem .",
    "the curveball algorithm seems to be a step in the right direction for the fast generation of random directed networks .",
    "in this paper we introduced two extensions of the curveball algorithm : the directed curveball algorithm and the undirected curveball algorithm .",
    "these algorithms were developed to randomise undirected and simple directed networks while fixing their degree sequence .",
    "it is important for random network models to sample without bias .",
    "we proved that both the directed curveball algorithm and the undirected curveball algorithm converge to the uniform distribution .",
    "furthermore , experimental evidence shows that they do so much faster than the well - known switching models .",
    "we recommend the use of these models over that of the switching model , especially for large networks .",
    "we pointed out why current techniques can not be used for formal proof of rapid mixing of the curveball algorithm . developing new techniques and proving rapid mixing is an interesting open problem .",
    "10    https://github.com/queenbne/curveball .",
    "https://github.com/queenbne/switchingmodelfamily .",
    "y.  artzy - randrup and l.  stone .",
    "generating uniformly distributed random networks .",
    ", 72:056708 , 2005 .",
    "a.  berger .",
    "the connection between the number of realizations for degree sequences and majorization . ,",
    "a.  berger . a note on the characterization of digraphic sequences .",
    ", 314:38  41 , 2014 .",
    "a.  berger and m.  mller - hannemann .",
    "uniform sampling of digraphs with a fixed degree sequence . in _ proceedings of the 36th international conference on graph - theoretic concepts in computer science _ , pages 220231 .",
    "springer - verlag , 2010 .",
    "full version available as preprint in arxiv:0912.0685v3 .",
    "c.  j. carstens . a uniform random graph model for directed acyclic networks and its effect on motif - finding .",
    ", 2:419430 , 2014 .    c.  j. carstens .",
    "proof of uniform sampling of binary matrices with fixed row sums and column sums for the fast curveball algorithm .",
    ", 91:042812 , 2015 .    c.  cooper , m.  dyer , and c.  greenhill .",
    "corrigendum : sampling regular graphs and a peer - to - peer networks . , 2012 .    r.  b. eggleton and d.  a. holton .",
    "simple and multigraphic realizations of degree sequences . in _ combinatorial mathematics viii _ , pages 155172 .",
    "springer berlin heidelberg , 1981 .",
    "l. erds , i.  mikls , and l.  soukup . towards random uniform sampling of bipartite graphs with given degree sequence . , 2010 .",
    "p.  l. erds , i.  mikls , and z.  toroczkai .",
    "new classes of degree sequences with fast mixing swap markov chain sampling . , abs/1601.08224 , 2016 .",
    "nj  gotelli and gl  entsminger .",
    "ecosim : null models software for ecology .",
    "version 7 . acquired intelligence inc . & kesey - bear .",
    "jericho , vt 05465 , 2009 .",
    "c.  greenhill .",
    "a polynomial bound on the mixing time of a markov chain for sampling regular directed graphs . , 18(1):p234 , 2011 .    c.  greenhill .",
    "the switch markov chain for sampling irregular graphs : extended abstract . in _ proceedings of the twenty - sixth annual acm - siam symposium on discrete algorithms _ , pages 15641572 , 2015 .",
    "m.  jerrum . .",
    "birkhuser verlag , basel , switzerland , 2003 .",
    "m.  jerrum and a.  sinclair .",
    "approximating the permanent .",
    ", 18(6):11491178 , 1989 .",
    "m.  jerrum , a.  sinclair , and e.  vigoda .",
    "a polynomial - time approximation algorithm for the permanent of a matrix with nonnegative entries .",
    ", 51:671697 , 2004 .",
    "d.  jungnickel . .",
    "springer verlag , heidelberg , 1999 .",
    "r.  kannan .",
    "markov chains and polynomial time algorithms . in _ foundations of computer science , 1994 proceedings .",
    ", 35th annual symposium on _ , pages 656671 , 1994 .",
    "o.  d. king",
    ". comment on `` subgraphs in random networks '' .",
    ", 70(5):058101 , 2004 .    donald  e. knuth . .",
    "addison wesley longman publishing co. , inc . , redwood city , ca , usa , 1998 .",
    "m.  d. lamar .",
    "on uniform sampling simple directed graph realizations of degree sequences .",
    ", abs/0912.3834 , 2009 .",
    "d.  a. levin , y.  peres , and e.  l. wilmer . .",
    "american mathematical society , providence , rhode island , 2009 .",
    "l.  lovsz .",
    "random walks on graphs : a survey . in _",
    "combinatorics , paul erds is eighty _ , volume  2 , pages 353397 .",
    "jnos bolyai mathematical society , 1996 .",
    "s.  maslov and k.  sneppen .",
    "specificity and stability in topology of protein networks .",
    ", 296:910913 , 2002 .",
    "i.  mikls , p.  l. erds , and l.  soukup . towards random uniform sampling of bipartite graphs with given degree sequence .",
    ", 20(1):p16 , 2013 .",
    "i.  mikls and j.  podani .",
    "randomization of presence - absence matrices : comments and new algorithms .",
    ", 85:8692 , 2004 .",
    "m.  molloy and b.  reed .",
    "a critical point for random graphs with a given degree sequence .",
    ", 6(2 - 3):161180 , 1995 .",
    "m.  e.  j. newman . .",
    "oxford university press , 2010 .",
    "m.  e.  j. newman , s.  h. strogatz , and d.  j. watts .",
    "random graphs with arbitrary degree distributions and their applications . , 64(2):026118 , 2001 .",
    "a.  r. rao , r.  jana , and s.  bandyopadhyay .",
    "a markov chain monte carlo method for generating random ( 0 , 1)-matrices with given marginals .",
    "58:225242 , 1996 .    h.  j. ryser .",
    "combinatorial properties of matrices of zeros and ones .",
    ", 9:371377 , 1957 .    a.  sinclair and m.  jerrum .",
    "approximate counting , uniform generation and rapidly mixing markov chains .",
    ", 82(1):93133 , 1989 .",
    "g.  strona , d.  nappo , f.  boccacci , s.  fattorini , and j.  san - miguel - ayanz . a fast and unbiased procedure to randomize ecological binary matrices with fixed row and column totals .",
    ", 5:4114 , 2014 .",
    "r.  taylor . , chapter constrained switchings in graphs , pages 314336 .",
    "springer berlin heidelberg , berlin , heidelberg , 1981 .",
    "the factors of graphs . , ( 4):314328 , 1952 .    n.  d. verhelst .",
    "an efficient mcmc algorithm to sample binary matrices with fixed marginals .",
    ", 73(4):705728 , 2008 .",
    "in the following we give an algorithm for computing a @xmath88-partition @xmath203 of a set @xmath207 uniformly at random .",
    "the basic idea is that there is always a pair of integers in each partition containing the minimum number of a set @xmath232 the algorithm creates one pair with this number @xmath40 and chooses the partner @xmath18 randomly from @xmath233 it remains to find a @xmath88-partition of a set @xmath234 which does nt contain @xmath40 and @xmath235    set @xmath204 .",
    "uniform sampled @xmath88-partition @xmath205 of @xmath234 ( for even @xmath108 ) .",
    "uniform sampled @xmath88-partition @xmath236 ( for odd @xmath108 ) .",
    "initialize @xmath237 choose @xmath238 at random and set @xmath239 and @xmath240 .",
    "choose the smallest number @xmath40 in @xmath234 .",
    "choose a random element @xmath18 in @xmath241 @xmath242 @xmath243    the while - loop in step ( 5 ) will be used at most @xmath116 times . a careful implementation with @xmath234 as an initial increasing array of numbers @xmath244 requires for step ( 6 ) and deleting @xmath40 in ( 9 ) , @xmath245 time , for step ( 7 ) @xmath245 time to choose @xmath18 @xcite and to delete it in ( 9 ) .",
    "this leads to @xmath113 time .",
    "we show that conditions 1 . ) and 2 . )",
    "imply that @xmath181 is an induced cycle set .",
    "for this we give an interpretation of 2 . ) . a well - known classical connection using the principle of double - counting",
    "gives for the ferrers sequence @xmath170 , @xmath246 .",
    "let us now consider an arbitrary adjacency matrix @xmath129 for a directed graph with degree sequence @xmath228 condition 2 . ) with @xmath247 states that all @xmath3 s of the first @xmath248 columns of @xmath129 equal the number of the @xmath3 s in the first @xmath248 columns of its ferrers matrix .",
    "the same can be find for the first @xmath249 columns when considering @xmath250 in 2 . ) .",
    "for @xmath251 , @xmath252 , and @xmath250 it states that @xmath129 contains in the @xmath40th column one more @xmath3 than @xmath165 , in the @xmath253th column the same number , and in the @xmath249nd column one @xmath3 less . more formally ,",
    "condition 2 . )",
    "states for matrix @xmath129 a ) for each @xmath254 all @xmath255 @xmath3 s of row @xmath18 are contained in the first @xmath248 columns , b ) for each @xmath256 ( i.e. the induced cycle set ) we have in rows @xmath18",
    "@xmath3 s in the first @xmath248 columns and a @xmath3 in one of the columns @xmath40 , @xmath253 and @xmath249 for rows @xmath40 , @xmath253 and @xmath253 .",
    "furthermore , it states c ) that all others @xmath257 , and that all corresponding rows possess @xmath3 s in their first @xmath249 columns with the exception of the diagonal element .",
    "+ let us now assume 1 . ) and 2 . )",
    "are fulfilled but @xmath181 is not an induced cycle set .",
    "then it exists a realisation @xmath46 with adjacency matrix @xmath80 such that @xmath181 is an induced cycle in @xmath46 which can be destroyed by a switch in either deleting an arc or adding an additional arc .",
    "we consider the case that @xmath258 can be switched .",
    "all other cases can be treated analogously .",
    "then there exists another switching arc @xmath259 such that @xmath260 are non - arcs , and all vertices @xmath261 are pairwise disjunctive .",
    "we have @xmath262 , otherwise we have a contradiction to b ) due to @xmath263 is a non - arc .",
    "if @xmath264 ( @xmath265 and @xmath266 not possible due to assumption ) than we have in row @xmath48 of @xmath80 a @xmath3 in column @xmath249 and a @xmath167 in column @xmath253 which contradicts c ) or a ) since @xmath267 it remains @xmath268 since @xmath269 is no arc in @xmath80 , we have in row @xmath48 a @xmath167 in column @xmath253 and a @xmath3 in column @xmath270 which contradicts a ) or c ) . hence",
    ", @xmath46 can not exist which means that an induced cycle of vertices @xmath40 , @xmath253 and @xmath249 can never be destroyed by a switch .    the fist part of this lemma was already given in section  [ sec_modified_curveball ] .",
    "we proof the formula for @xmath271 by induction . for @xmath272 and @xmath273",
    "we have only one partition and @xmath274 in both cases .",
    "for @xmath275 we have in a @xmath88-partition @xmath276 three possibilities to choose @xmath153 , and @xmath151 and @xmath152 are forced by this choice .",
    "this results in @xmath89 possible @xmath88-partitions , and indeed @xmath277 for @xmath278 in a @xmath88-partition @xmath279 , @xmath151 can be fixed as @xmath280 because the number @xmath3 must be in one pair .",
    "then we have @xmath89 possibilities to choose @xmath152 , and after this choice @xmath153 and @xmath281 are settled . hence ,",
    "the number of @xmath88-partitions is @xmath89 , which corresponds to @xmath277 let us assume that the claim is true for all @xmath282 for a given @xmath204 in an even partition we can choose @xmath283 , because @xmath108 has to be in one of these pairs . for @xmath152",
    "we have @xmath284 possible numbers @xmath285 from @xmath3 to @xmath284 .",
    "we delete @xmath108 and @xmath285 in @xmath234 and get @xmath284 subsets @xmath286 for @xmath287 for each @xmath288 we can apply the induction hypothesis . each of the @xmath284 @xmath289 can be combined with @xmath290 leading to a partition of @xmath234 .",
    "hence , we get for @xmath234 , @xmath291 . in the odd case",
    "we first need to choose an element @xmath292 randomly , and then we apply for the remaining even set @xmath293 the formula for the even case ."
  ],
  "abstract_text": [
    "<S> the switching model is a markov chain approach to sample graphs with fixed degree sequence uniformly at random . </S>",
    "<S> the recently invented curveball algorithm @xcite for bipartite graphs applies several switches simultaneously ( ` trades ' ) . here , we introduce curveball algorithms for simple ( un)directed graphs which use single or simultaneous trades . </S>",
    "<S> we show experimentally that these algorithms converge magnitudes faster than the corresponding switching models . </S>"
  ]
}
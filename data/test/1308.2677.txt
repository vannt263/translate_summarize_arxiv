{
  "article_text": [
    "the abelian sandpile model and rotor - routing model are combinatorial models of various dynamics on graphs that were rediscovered several times in several different communities , ranging from combinatorics to self - organized criticality , arithmetic geometry , and algorithms .",
    "( for example , @xcite ; see @xcite for more details and references . )",
    "the stable configurations in the abelian sandpile model on a graph @xmath1 form a group called the sandpile group or the critical group of @xmath1 ; it is also known as the picard group of the graph , which we will denote @xmath0 in analogy with the picard group of a riemann surface .",
    "it has long been known that the order of @xmath0 is equal to the number of spanning trees of @xmath1 ( see , e.g. , @xcite and references therein ) .",
    "indeed , this is a form of kirchoff s matrix  tree theorem . a natural first question to ask , then ,",
    "is whether there is a canonical bijection between the elements of @xmath0 and the spanning trees of @xmath1 .",
    "what does `` canonical '' mean here ?",
    "at the very least , we should require that the bijection be invariant under automorphisms of @xmath1 , for certainly it should nt depend on what we name the vertices and edges .",
    "but there is clearly no such bijection : many graphs , e.g.  a complete graph or an @xmath2-cycle , do nt even have a distinguished spanning tree that could correspond to the identity element of @xmath0 .    so it is natural to ask instead for the next best thing : _",
    "is there a canonical free , transitive action of the sandpile group on the set of spanning trees ? _ in other words , is there a canonical @xmath0-torsor structure on the set of spanning trees of @xmath1 ? by `` canonical , '' we still mean an action that is invariant under automorphisms of @xmath1 .",
    "such an action would give a bijection between the sandpile group and the set of spanning trees , once we decide on a spanning tree that corresponds to the identity element .",
    "but this is still too much to ask for .",
    "for example , consider the graph @xmath1 with two vertices and @xmath2 parallel edges between them .",
    "the sandpile group @xmath0 is cyclic of order @xmath2 , and each edge of @xmath1 is itself a spanning tree .",
    "so an automorphism - invariant action of @xmath3 amounts to an automorphism - invariant cyclic ordering of the edges , which clearly does not exist .",
    "this example , and others like it , suggest that we might hope for a free transitive action that is canonically defined on @xmath1 once we ve fixed the additional structure of a cyclic ordering of the edges incident to each vertex . a graph together with such a system of cyclic orderings is called a _ ribbon graph _ ( or sometimes `` combinatorial embedding '' ) .",
    "we therefore arrive at the following question .",
    "[ q : intro ] is there a free and transitive action of @xmath0 on the spanning trees of @xmath1 that is invariant under automorphisms preserving a ribbon graph structure on @xmath1 ?",
    "holroyd _ et al . _",
    "@xcite gave one possible way to answer question  [ q : intro ] .",
    "given a ribbon graph _ and _ a choice of a basepoint vertex , they used rotor - routing to define a free and transitive action of @xmath0 on the spanning trees of @xmath1 .",
    "this action is explained in section  2 .",
    "therefore an affirmative answer to question  [ q : intro ] would follow if one could prove that the basepoint in the construction of holroyd _ et al _ is unnecessary .",
    "in other words , we have the following question , which to our knowledge was first asked by ellenberg @xcite : does the rotor - routing action of @xmath0 on the spanning trees of @xmath1 depend on the choice of basepoint ?    in this paper we prove that if @xmath1 is a _ planar _ ribbon graph , then miraculously , the action defined by rotor routing is independent of the basepoint and hence canonical .",
    "furthermore , we show that this characterization is tight : only planar ribbon graphs have this property .",
    "our main theorem is thus :    [ theorem : main ] let @xmath1 be a connected ribbon graph .",
    "the action of the sandpile group @xmath0 on the set @xmath4 of spanning trees is independent of the choice of basepoint vertex if and only if @xmath1 is a planar ribbon graph .",
    "the proof is based on three key ideas .",
    "first , the rotor - routing action of the sandpile group on spanning trees can be partially modeled via _ rotor - routing on unicycles _",
    "( @xcite ) .",
    "this is a related dynamical system with the property that rotor - routing becomes periodic , rather than terminating after finitely many steps .",
    "rotor - routing on unicycles is described in section  [ sec : reversibility ] .",
    "the second main idea is that the independence of the sandpile action on spanning trees can be described in terms of _ reversibility of cycles_. we introduce the notion of reversibility ( previously considered in @xcite only for planar graphs ) , and prove in proposition  [ prop : reversibility2 ] that reversibility is a well - defined property of cycles in a ribbon graph .",
    "we establish a relation between reversibility and basepoint - independence in section  [ sec : spanningtrees ] .",
    "third , reversibility is closely related to whether a cycle separates the surface corresponding to the ribbon graph into two components .",
    "we prove in lemma  [ lemma : almostseparating ] that these conditions are almost equivalent .",
    "moreover , although they are not equivalent for individual cycles , we prove in proposition  [ prop : planar_is_reversible ] that _ all _ cycles are reversible if and only if all cycles are separating , in which case the ribbon graph is planar .",
    "by a _ graph _ we mean a connected and undirected graph , with multiple edges allowed but no self - loops .",
    "we write @xmath5 and @xmath6 for the vertex set and edge set of @xmath1 , respectively . throughout",
    ", @xmath1 denotes a _ ribbon graph _ : a graph together with a cyclic ordering of the edges incident to each vertex .",
    "ribbon graphs are equivalent to graphs embedded into orientable surfaces ( hence their alternate name `` combinatorial embeddings '' ) : from any ribbon graph one can reconstruct a closed orientable surface in which it is naturally embedded , and conversely the local orientation of the surface at a vertex gives the cyclic ordering ( see , e.g. , ( * ? ? ?",
    "* theorem  3.7 ) ) .",
    "we denote by @xmath4 the set of spanning trees of @xmath1 .",
    "when the graph is clear from context , we sometimes write @xmath7 for @xmath4 .    * the rotor - routing model . * a _ rotor configuration _",
    "@xmath8 on a directed graph is an assignment to each vertex @xmath9 of an outgoing edge @xmath10 $ ] based at @xmath9 .",
    "when we speak about rotor - routing or rotor configurations on a ( ribbon ) graph @xmath1 , we will always mean rotor configurations on the underlying eulerian directed graph @xmath11 obtained by replacing each undirected edge of @xmath1 with two oppositely oriented edges .    fix a ribbon graph @xmath1 .",
    "the _ rotor - routing model _ is a deterministic process on pairs @xmath12 consisting of a rotor configuration @xmath8 and a vertex @xmath13 .",
    "we think of @xmath14 as the position of a _ chip _ that will move around the graph as the process is iterated .",
    "one step of the rotor - routing process consists of replacing @xmath12 by a new pair @xmath15 defined as follows .",
    "first , the rotor configuration @xmath16 coincides with @xmath8 at every vertex except at @xmath14 , where @xmath17 $ ] is the edge leaving @xmath14 that follows @xmath18 $ ] in the cyclic order .",
    "second , the new position of the chip @xmath9 is the vertex at the other end of the edge @xmath17 $ ] from @xmath14 . in short ,",
    "the rotor - routing process rotates the rotor @xmath18 $ ] at the current position of the chip to the next position , and then moves the chip along this edge in the new direction of the rotor . in this paper",
    "we will frequently iterate the rotor - routing process until a certain `` stopping condition '' is reached , and reason about the resulting configuration and the steps taken to reach it .    *",
    "the sandpile group . *",
    "the group @xmath19 of _ divisors _ on the graph @xmath1 is the free abelian group of formal @xmath20-linear combinations @xmath21 of the vertices of @xmath1 . in this paper",
    "we will be mostly interested in the subgroup @xmath22 of `` degree-0 '' divisors : @xmath23 if we fix a vertex @xmath24 ( for `` root '' ) , @xmath22 is freely generated by the basis @xmath25 as @xmath26 ranges over the other vertices of @xmath1 .",
    "the _ graph laplacian _ of a graph @xmath1 is an operator @xmath27 closely related to the adjacency matrix of @xmath1 .",
    "with respect to the basis of vertices @xmath26 , the operator @xmath28 corresponds to the symmetric matrix whose diagonal entries are @xmath29 = degree of @xmath26 and whose off - diagonal entries @xmath30 .",
    "the sum @xmath31 of each row and column is 0 , which shows both that the image of @xmath28 is contained in @xmath22 , and that @xmath32 .",
    "the image of @xmath28 is a finite - index subgroup of @xmath22 , and the _ sandpile group _",
    "@xmath0 is the quotient : @xmath33 for any graph @xmath1 the group @xmath0 is a finite abelian group whose order is , up to sign , the determinant @xmath34 of any @xmath35 submatrix of the graph laplacian .",
    "people who study sandpile groups usually prefer to work with the distinguished representatives of each divisor class that are recurrent under a certain dynamical process",
    ". we will not describe the beautiful story of sandpile dynamics here , but that viewpoint does implicitly play a key role in the rotor - routing action that we now define .",
    "* action of @xmath0 on @xmath4 . * given a choice of root @xmath36 , holroyd _ et al . _",
    "@xcite defined a natural action of @xmath22 on @xmath4 , which we now describe .",
    "this action is trivial on any divisor in @xmath37 and thus descends to an action of @xmath0 on @xmath4 .    .",
    "the rotor - routing process in the bottom row shows that @xmath38 and thus @xmath39 so the action of @xmath40 on @xmath41 is independent of our choice of @xmath14 or @xmath9 as basepoint . here",
    ", the white circle indicates the position of the chip , and the rotors are all oriented clockwise relative to the page.,height=192 ]    for a fixed root @xmath24 , given a spanning tree @xmath42 and a divisor @xmath43 , we will write @xmath44 for the image of @xmath41 under the rotor - routing action ( based at @xmath24 ) .",
    "we define the action of @xmath22 by describing the action @xmath45 of the generators @xmath46 for each @xmath47 , as follows . given a spanning tree @xmath41 , orient the edges of @xmath41 towards @xmath24 .",
    "the resulting collection of directed edges defines a rotor configuration on @xmath1 , except that there is no rotor at the root @xmath24 ; we think of this as a rotor configuration @xmath8 on the graph obtained from @xmath11 by removing the edges leaving @xmath24 . place a chip on the vertex @xmath14 , and",
    "iterate the rotor - routing process starting with @xmath12 .",
    "stop when the chip first reaches @xmath24 ( which it necessarily must ( * ? ? ?",
    "* lemma  3.6 ) ) , and call the resulting state @xmath48 .",
    "the rotor configuration @xmath16 is in fact another spanning tree @xmath49 oriented towards @xmath24 , and we define @xmath50 to be the spanning tree @xmath49 .",
    "see figure  [ f : planar ] .",
    "since @xmath22 is an abelian group , the action of different divisors @xmath51 will commute : @xmath52 .",
    "however , we emphasize that the actions corresponding to _ different _ root vertices @xmath24 and @xmath53 may _ not _ commute , so it is important to distinguish between @xmath54 and @xmath55 .",
    "the action of @xmath22 descends to the sandpile group @xmath0 .",
    "in fact , for any choice of root vertex @xmath24 , the resulting action of @xmath0 on @xmath4 is free and transitive ( * ? ? ?",
    "* lemmas 3.17 and 3.19 ) .",
    "( this property has been vastly generalized to abelian networks by bond and levine in their recent preprint @xcite . )",
    "we can now restate ellenberg s question @xcite as : if @xmath56 is the permutation defined by this action , does @xmath57 for all @xmath58 and @xmath59 ?",
    "in other words , is the rotor - routing @xmath0-torsor structure on the set of spanning trees @xmath4 independent of basepoint ?",
    "theorem  [ theorem : main ] completely answers this question .",
    "a _ path _ @xmath60 in the graph @xmath1 is an edge - injective map @xmath61 from the length-@xmath62 path @xmath63 ; it may or may not be vertex - injective .",
    "a _ cycle _ @xmath64 in @xmath1 is the image of a vertex - injective and edge - injective map @xmath65 from the length-@xmath62 cycle @xmath66 ( a circle subdivided into @xmath62 edges ) .",
    "we consider both paths @xmath60 and cycles @xmath64 to be oriented , but we identify maps @xmath67 that differ by cyclic permutation ( in other words , we do not specify a basepoint for cycles ) .",
    "we denote by @xmath68 or @xmath69 the same path or cycle with the opposite orientation .",
    "given an oriented cycle @xmath64 in a ribbon graph and a vertex @xmath70 , the edges incident to @xmath14 naturally fall into three classes : the two edges involved in @xmath64 , the edges ( if any ) on the left of @xmath64 , and the edges ( if any ) on the right of @xmath64 .",
    "the edges to the right of @xmath64 , for example , are the ones that occur after the out - edge at @xmath14 in @xmath64 and before the in - edge at @xmath14 in @xmath64 , in the cyclic order at @xmath14 .",
    "these three classes are disjoint , since our graphs have no self - loops ; however , if an edge @xmath71 has both endpoints @xmath14 and @xmath9 on @xmath64 , it is possible that @xmath71 is on the left of @xmath64 at @xmath14 but on the right of @xmath64 at @xmath9 .    a cycle @xmath64 is _ nonseparating _",
    "if there exists a path @xmath60 in @xmath1 whose endpoints lie on @xmath64 and is disjoint from @xmath64 otherwise , with its first edge on the left of @xmath64 and its last edge on the right of @xmath64 .",
    "such a path @xmath60 is a _ witness",
    "_ that @xmath64 is nonseparating .",
    "the cycle @xmath64 is _ separating _ if no such witness exists ; this is equivalent to saying that @xmath64 is a separating curve on the surface associated to the ribbon graph @xmath1 .",
    "the ribbon graph @xmath1 is _ planar _ if every cycle is separating ( equivalently , if its associated surface is a sphere ) .    * unicycles and rotor - routing . *",
    "a _ unicycle _ @xmath72 consists of a rotor configuration @xmath8 which contains exactly one directed cycle @xmath73 , together with a vertex @xmath26 lying on the cycle @xmath73 .",
    "it is not difficult to see that applying rotor - routing to the configuration @xmath72 preserves these conditions , and thus takes unicycles to unicycles ( * ? ? ?",
    "* lemma 3.4 ) .",
    "in fact , the following is is a key observation that we will use many times :    [ lemma : periodic ] let @xmath72 be a unicycle on a graph with @xmath74 edges . iterating the rotor routing process @xmath75 times starting at @xmath72",
    ", the chip traverses each edge of @xmath1 exactly once in each direction , each rotor makes exactly one full turn , and the stopping state is @xmath76 .",
    "we write @xmath77 if the configuration @xmath15 can be obtained from @xmath12 by iterating the rotor - routing process some positive number of times . by lemma  [ lemma : periodic ]",
    ", the relation @xmath77 is in fact an equivalence relation on unicycles .",
    "the following lemma shows that each equivalence class is naturally in bijection with the directed edges of @xmath1 .",
    "we write @xmath78 if @xmath77 and @xmath79=e$ ] .",
    "[ lemma : therotorknows ] let @xmath12 be a unicycle . for any vertex @xmath9 and",
    "any directed edge @xmath71 based at @xmath9 , there exists a unique rotor configuration @xmath16 such that @xmath80 .",
    "run the rotor - routing process starting at @xmath12 until the next occurrence of @xmath12 . according to lemma  [ lemma : periodic",
    "] , each rotor makes precisely one full rotation in this process .",
    "since the rotor at @xmath9 only advances when the chip is at @xmath9 , this implies that at some intermediate stage @xmath15 we had @xmath79=e$ ] .",
    "the next rotor - routing step then advances the rotor at @xmath9 , so @xmath16 is unique .",
    "the _ first _ time the chip arrives at @xmath9 when rotor - routing is iterated starting with @xmath12 , the current rotor configuration @xmath16 satisfies @xmath79=\\rho[y]$ ] , since @xmath9 has not previously been visited .",
    "accordingly we write @xmath81 as an abbreviation for @xmath82}(\\sigma , y)$ ] . finally , when @xmath15 has already been defined , we write @xmath83 as shorthand for the rotor routing process beginning with @xmath12 and ending at the first occurrence of @xmath84 .",
    "[ def : reversible ] given a unicycle @xmath72 with directed cycle @xmath85 , let @xmath86 denote the configuration obtained from @xmath8 by reversing the edges of @xmath64 , and keeping all other rotors unchanged .",
    "we say that @xmath64 is _ reversible _ if @xmath87 .    before using this terminology",
    ", we need to verify that it is well - defined : in other words , that reversibility really is a property of the _ cycle _ @xmath64 , and does not depend on the choice of @xmath8 nor the choice of @xmath26 . note that by definition , @xmath64 is reversible if and only if @xmath69 is reversible .",
    "we will prove in proposition  [ prop : reversibility2 ] that reversibility is well - defined , but we first need the following technical result .",
    "this result will also be used , along with lemma  [ lemma : almostseparating ] , to show that reversible cycles are quite close to being separating .",
    "[ prop : lcrc ] let @xmath64 be a directed cycle . if there exists a unicycle @xmath72 with @xmath85 such that @xmath88 , then the vertices @xmath89 can be partitioned into two sets @xmath90 such that :    1 .   if @xmath89 is adjacent to @xmath91 along an edge lying on the left of @xmath64 at @xmath14 , then @xmath92 .",
    "2 .   if @xmath89 is adjacent to @xmath91 along an edge lying on the right of @xmath64 at @xmath14 , then @xmath93 .",
    "if @xmath89 is adjacent to @xmath94 , then @xmath9 and @xmath95 are either both in @xmath96 or both in @xmath97 .",
    "any separating curve @xmath64 separates the surface into two parts @xmath96 and @xmath97 as in this proposition .",
    "the key utility of proposition  [ prop : lcrc ] is that it allows us to define the sets @xmath96 and @xmath97 knowing only that @xmath64 is _ reversible _ , without knowing whether or not @xmath64 is separating .    for any vertex @xmath9 in @xmath1 , let @xmath98 be its degree .",
    "consider the rotor - routing process that takes @xmath72 to @xmath99 .",
    "for any vertex @xmath9 _ not _ lying on @xmath64 , the rotor ends at its initial position @xmath10={\\overline}{\\rho}[y]$ ] , so by lemma  [ lemma : periodic ] , the vertex @xmath9 was visited either 0 or @xmath98 times .",
    "we define @xmath100 and @xmath101 . since @xmath1 has no isolated vertices ( by our convention , all graphs are connected ) , these two sets are disjoint .",
    "since no directed edge is traversed more than once , in the latter case @xmath93 the chip must arrive at @xmath9 along each of the @xmath98 adjacent edges exactly once and leave @xmath9 along each edge exactly once .",
    "now consider a vertex @xmath14 lying on @xmath64 .",
    "since the cycle @xmath64 has been reversed , the rotor at @xmath14 begins at @xmath18=c[x]$ ] and ends at @xmath102={\\overline}{c}[x]$ ] .",
    "therefore the rotor rotates @xmath103 times , where @xmath104 is 1 plus the number of edges at @xmath14 on the _ right _ of @xmath64 , and so the chip visits @xmath14 precisely @xmath103 times .",
    "the first @xmath105 times the chip leaves @xmath14 , it leaves along the @xmath105 edges lying on the right of @xmath64 ; the final time it leaves @xmath14 , it leaves along the edge @xmath102={\\overline}{c}[x]$ ] of the reversed cycle @xmath64 ( since this is the final state of the rotor ) .",
    "if @xmath89 is adjacent to @xmath91 along an edge lying on the right of @xmath64 at @xmath14 , the chip will leave @xmath14 along this edge at some point , so @xmath93 . similarly , if @xmath89 is adjacent to @xmath91 along an edge lying on the left of @xmath64 at @xmath14 , the chip does not leave @xmath14 along this edge ; in other words , the chip does not arrive at @xmath9 along this edge .",
    "this implies that @xmath92 , because we noted above a vertex @xmath9 lying in @xmath97 must be visited along every one of its incoming edges , and this would include the edge from @xmath14 . finally , if @xmath89 is adjacent to @xmath94 and the chip traverses this edge in either direction , then both @xmath9 and @xmath95 lie in @xmath97 ; if not , both lie in @xmath96 .",
    "the three conditions above uniquely characterize @xmath96 and @xmath97 as those vertices that can be connected by a path to the left side or right side of @xmath64 respectively ; since this description does not depend on @xmath8 or @xmath26 , the sets @xmath96 and @xmath97 depend only on the cycle @xmath64 .",
    "this seems at first to prove that @xmath64 is separating .",
    "however , it does not rule out the possibility of a witness consisting of a single edge joining the left side of @xmath91 to the right side of @xmath106 .",
    "in fact , nonseparating cycles of this form can indeed be reversible , as we will see in the proof of proposition  [ prop : planar_is_reversible ] .",
    "[ prop : reversibility2 ] let @xmath64 be a directed cycle . if @xmath107 for _ some _ unicycle @xmath108 with @xmath109 , then @xmath110 for _ any _ unicycle @xmath76 with @xmath85 . in other words ,",
    "the reversibility of a cycle @xmath64 , as in definition  [ def : reversible ] , is well - defined : it only depends on @xmath64 , and not on a choice of unicycle .    given a unicycle @xmath72 with @xmath85 ,",
    "define its _ maximal reversal _",
    "@xmath111 to be the first state @xmath111 encountered in the rotor - routing process such that @xmath112 and @xmath113={\\overline}{c}[u]$ ] . in other words ,",
    "the chip is on the cycle @xmath64 at the vertex @xmath114 , and the rotor at @xmath114 is about to rotate _",
    "past _ the reversed cycle @xmath69 to the edges on the left of @xmath64 for the first time .",
    "we will prove that as long as @xmath107 for _ some _ @xmath115 and some @xmath116 , the maximal reversal of @xmath72 is @xmath99 .",
    "then we will have @xmath117 as desired .",
    "( we can not use lemma  [ lemma : therotorknows ] to deduce this from @xmath113={\\overline}{c}[u]={\\overline}{\\rho}[u]$ ] , because we do not yet know that @xmath118 . )",
    "assume that @xmath107 for some @xmath115 with @xmath109 , and let @xmath96 and @xmath97 be the sets defined by proposition  [ prop : lcrc ] .",
    "the set of directed edges traversed in the process @xmath119 was described in the proof of that proposition : the chip traverses ( 1 ) every directed edge leaving @xmath93 , ( 2 ) each directed edge leaving @xmath91 on the right side of @xmath64 , and ( 3 ) each edge @xmath120 $ ] leaving @xmath91 .",
    "this set of directed edges only depends on @xmath64 , not on @xmath115 or @xmath121 , so we will denote it by @xmath122 .",
    "for any vertex @xmath123 , let @xmath124 denote the number of edges in @xmath122 leaving @xmath123 .",
    "( specifically , @xmath125 for @xmath91 , @xmath126 for @xmath93 , and @xmath127 for @xmath92 . )",
    "since the chip ends up back at @xmath26 , it leaves each vertex @xmath123 the same number of times that it arrives there , so @xmath124 is also the number of directed edges in @xmath122 _ arriving _ at @xmath123 .",
    "now consider an arbitrary rotor configuration @xmath72 with @xmath85 and @xmath128 .",
    "the key to this lemma is the observation that if @xmath111 is the maximal reversal of @xmath72 , the process @xmath129 only traverses edges in @xmath122 .",
    "assume otherwise , and let @xmath71 be the first directed edge _ not _ in @xmath122 traversed .",
    "since the chip begins on @xmath64 , and no edges connect @xmath97 to @xmath96 , this first edge @xmath71 is based at some @xmath91 . by definition of @xmath122 ,",
    "either @xmath71 lies on the left side of @xmath64 , or @xmath130 $ ] itself . in either case , the rotor at @xmath14 must rotate past @xmath120 $ ] before it can reach the edge @xmath71 .",
    "but this is a contradiction , since by definition @xmath111 is the first time the rotor at @xmath91 is @xmath131 $ ] while the chip is there .    in the process @xmath132",
    ", the rotor at @xmath112 rotates from @xmath133=c[u]$ ] to @xmath113={\\overline}{c}[u]$ ] , so the chip leaves @xmath114 precisely @xmath134 times .",
    "however , if @xmath135 , the chip must have arrived at @xmath114 precisely @xmath136 times , since it did not originate there . since the total number of edges in @xmath122 arriving at @xmath114 is only @xmath134 , this is a contradiction .",
    "this shows that @xmath137 , and moreover that the chip has arrived at @xmath26 along each of the @xmath138 edges in @xmath122 directed towards @xmath26 .",
    "one of these is the edge @xmath139 $ ] , where @xmath140 is the next vertex after @xmath26 in the cycle @xmath64 , so we must have @xmath141={\\overline}{c}[w]$ ] as well .",
    "but if the rotor at @xmath123 has reversed from @xmath142=c[w]$ ] to @xmath141={\\overline}{c}[w]$ ] , the chip must have left @xmath124 times .",
    "to arrive @xmath124 times at @xmath123 , the rotor at the _ next _ vertex after @xmath123 must have been reversed , and so on . by induction , we conclude that we have @xmath17={\\overline}{c}[x]={\\overline}{\\rho}[x]$ ] for all @xmath91 .",
    "in particular , the directed cycle of @xmath16 is @xmath143 .",
    "since the process @xmath144 does not visit @xmath96 , we know that @xmath79=\\rho[y]={\\overline}{\\rho}[y]$ ] for all @xmath92 .",
    "it remains to show that @xmath79=\\rho[y]$ ] for @xmath93 . to do this ,",
    "let @xmath145 be the maximal reversal of @xmath146 .",
    "since @xmath143 , the process @xmath147 does not visit @xmath148 , so @xmath149=\\sigma[y]$ ] for all @xmath93 .",
    "but the previous paragraph shows that @xmath150=\\overline{\\sigma}[v]=\\rho[v]$ ] . since @xmath151",
    ", lemma  [ lemma : therotorknows ] implies that @xmath152 .",
    "therefore @xmath79=\\rho[y]$ ] for all @xmath89 , and @xmath17={\\overline}{\\rho}[x]$ ] for all @xmath91 , demonstrating that @xmath153 as desired .",
    "[ lemma : almostseparating ] let @xmath64 be a directed cycle .",
    "if @xmath64 is reversible , then any path @xmath60 witnessing that @xmath64 is nonseparating must have length 1 .",
    "conversely , if @xmath64 is a separating cycle , then @xmath64 is reversible",
    ".    let @xmath60 be a path of length @xmath154 , with vertices @xmath155 , with endpoints @xmath156 and @xmath157 .",
    "if @xmath60 is a witness that @xmath64 is nonseparating , the second vertex @xmath158 lies in @xmath96 , and the second - to - last vertex @xmath159 lies in @xmath97 . but this contradicts condition ( 3 ) of proposition  [ prop : lcrc ] , which says that membership in @xmath96 is locally constant along paths in @xmath160 .",
    "therefore any witness @xmath60 must have length 1 .    to prove that any separating cycle is reversible",
    ", we will go through the proof of proposition  [ prop : lcrc ] in reverse ; the resulting argument closely parallels ( * ? ? ?",
    "* corollary 4.11 ) , where this was proved for planar ribbon graphs .",
    "( in fact , a special case of reversibility , for cycles in an @xmath161 planar grid graph , was proved even earlier , in ( * ? ? ?",
    "* proposition i ) . )",
    "if @xmath64 is a separating cycle , we can partition the vertices @xmath89 into @xmath162 , where @xmath163 ( resp .",
    "@xmath164 ) if there exists a path from @xmath9 to @xmath64 ending with an edge on the left side ( resp .",
    "right side ) of @xmath64 .",
    "every @xmath9 can be connected to @xmath64 by some path , since @xmath1 is connected , so @xmath165 . if @xmath166 could be connected to both sides of @xmath64 , splicing these paths together would give a witness that @xmath64 was nonseparating , so @xmath167 .",
    "let @xmath168 be the ribbon graph obtained from @xmath1 by deleting all vertices in @xmath169 , all edges adjacent to @xmath169 , and all edges lying on the right of @xmath64 .",
    "because @xmath64 is separating , no edge on the left side of @xmath64 is removed ( every such edge either joins @xmath91 to @xmath163 , or joins @xmath91 to @xmath106 , in which case it lies on the left side of @xmath64 at both endpoints ) . since no rotor in @xmath170 points along a removed edge",
    ", we can restrict the rotor configuration @xmath8 to @xmath168 as @xmath171 .",
    "it is easy to run the rotor routing process starting at @xmath172 , because at each @xmath91 the two edges of @xmath64 are now adjacent in the cyclic order .",
    "thus at each step , the rotor at one vertex on @xmath64 is reversed , and the chip moves to the previous vertex on @xmath64 . after a number of steps equal to the length of @xmath64",
    ", each rotor on @xmath64 has moved once , the cycle @xmath64 has been reversed , and the chip is back at @xmath26 ; in other words , the process takes @xmath173 .",
    "since rotor - routing on @xmath168 is periodic , continuing gives a rotor - routing process on @xmath168 taking @xmath174 to @xmath172 .",
    "but this segment of the process does not involve any of the deleted edges .",
    "therefore if the rotor - routing process is run in parallel on @xmath1 starting with @xmath99 , the two processes will take precisely the same series of steps .",
    "when the former terminates at @xmath175 , the latter will therefore be at @xmath76 , demonstrating that @xmath176 as desired .",
    "[ prop : planar_is_reversible ] a connected ribbon graph @xmath1 without loops is planar if and only if all cycles on @xmath1 are reversible .",
    "if @xmath1 is planar , the jordan curve theorem implies that every cycle is separating , so lemma  [ lemma : almostseparating ] implies that every cycle is reversible .",
    "for the converse , suppose @xmath1 is not planar , so it has at least one nonseparating cycle , but that every cycle on @xmath1 is reversible .",
    "our first claim is that every nonseparating cycle on @xmath1 has length 2 .",
    "indeed , let @xmath60 be a path witnessing that the cycle @xmath64 is nonseparating , joining the left side of @xmath91 to the right side of @xmath106 .",
    "this path splits @xmath64 into two directed arcs from @xmath14 to @xmath177 . call them @xmath178 and @xmath179 , labeled so that @xmath180 .",
    "let @xmath181 be the cycle @xmath182 , and let @xmath183 be the cycle @xmath184 .",
    "the arc @xmath178 is now a witness that @xmath181 is nonseparating , since @xmath178 lies on the left of @xmath181 at @xmath14 but on the right of @xmath181 at @xmath177 .",
    "similarly @xmath179 witnesses that @xmath183 is nonseparating , since @xmath179 lies on the right of @xmath183 at @xmath14 but on the left of @xmath183 at @xmath177 . since all three cycles @xmath64 , @xmath181 , and @xmath183 are reversible by assumption , lemma  [ lemma : almostseparating ] implies that the paths @xmath60 , @xmath179 and @xmath178 each have length 1 .",
    "in particular , the original cycle @xmath185 has length 2 , as claimed .",
    "let us rename the edge @xmath60 to @xmath186 , and the cycle @xmath64 to @xmath187 , to expose the cyclic symmetry of our notation .",
    "then the cyclic order of these edges at @xmath14 and @xmath177 is the same , namely @xmath188 and @xmath189 respectively , and @xmath190 with indices modulo 3 .",
    "see figure  [ fig : a1a2a3 ] .",
    "let us say that an edge at @xmath14 _ lies between _ @xmath191 and @xmath192 , for @xmath193 , @xmath194 , or @xmath195 , if it comes after @xmath191 and before @xmath192 in the cyclic order of edges at @xmath14 .",
    "similarly , we will say that an edge at @xmath177 lies between @xmath196 and @xmath197 if it comes after @xmath196 and before @xmath197 in the cyclic ordering of edges at @xmath177 .     and",
    "@xmath186 in the proof of proposition  [ prop : planar_is_reversible ] .",
    "the orientation at each vertex is clockwise with respect to the page.,width=144 ]    before moving on , we observe that _ any _ path from @xmath14 to @xmath177 not passing through @xmath14 or @xmath177 except at its endpoints will witness that one of the cycles @xmath198 is nonseparating , so by lemma  [ lemma : almostseparating ] any such path has length 1 . indeed ,",
    "each edge at @xmath14 other than the @xmath191 lies on the right side of exactly one cycle @xmath198 , and on the left side of the other two ; similarly , each edge at @xmath177 lies on the left of exactly one @xmath198 and on the right of the other two .",
    "thus the pigeonhole principle implies that no path from @xmath14 to @xmath177 can lie on the same side of @xmath198 for all three simultaneously .",
    "we may also assume that no edge @xmath71 connects @xmath14 to @xmath177 and lies between @xmath179 and @xmath186 at @xmath14 , after repeating the following reduction step .",
    "suppose @xmath71 is such an edge .",
    "if @xmath71 lies between @xmath199 and @xmath200 at @xmath177 , then replace @xmath179 with @xmath71 .",
    "if @xmath71 lies between @xmath199 and @xmath201 at @xmath177 , then replace @xmath186 with @xmath71 .",
    "if @xmath71 lies between @xmath200 and @xmath201 at @xmath177 , then replace either @xmath179 or @xmath186 with @xmath71 .",
    "in each case , this reduces the number of edges at @xmath14 between @xmath179 and @xmath186 while preserving the cyclic orderings of @xmath188 and @xmath202 at @xmath14 and @xmath177 , so we may repeat this step until there are no edges to @xmath177 lying between @xmath179 and @xmath186 at @xmath14 .",
    "let @xmath12 be any unicycle with @xmath203 ( e.g.  by adding @xmath178 to a spanning tree that uses @xmath179 ; see  [ sec : spanningtrees ] for details ) .",
    "we have @xmath18=a_1 $ ] and @xmath204={\\overline}{a}_2 $ ] by definition .",
    "define @xmath16 by @xmath205 .",
    "we had @xmath102=a_2 $ ] and @xmath206={\\overline}{a}_1 $ ] , and the latter implies @xmath207={\\overline}{a}_1 $ ] .",
    "but we know moreover that @xmath17=a_3 $ ] .",
    "this is because in the rotor routing process @xmath208 , starting from the last time the chip leaves @xmath14 and ending at its arrival at @xmath177 , the chip traces out a path from @xmath14 to @xmath177 .",
    "that path has length 1 by the argument above , which means that the chip arrives for the first time at @xmath177 along some edge from @xmath14 .",
    "but we have assumed that @xmath186 is the first such edge that the rotor at @xmath14 encounters when it starts at @xmath179 .",
    "finally , define @xmath209 by @xmath210 .",
    "we had @xmath211=a_1 $ ] and @xmath212={\\overline}{a_3}$ ] , and the former implies @xmath213=a_1 $ ] .",
    "we have assumed that all cycles are reversible , so @xmath214 and @xmath215 . by transitivity",
    "this implies @xmath216 ; since @xmath213=\\rho[x]=a_1 $ ] , it must be that @xmath152 .",
    "however , this would mean that the rotor @xmath217 $ ] ends up at @xmath218 , which is impossible : this rotor began at @xmath212={\\overline}{a}_3 $ ] , so the first edge to @xmath14 that it encounters can not be @xmath218 ( it would encounter @xmath199 first , if not some other edge ) .",
    "this contradiction completes the proof that not all cycles in @xmath1 can be reversible if @xmath1 has nonseparating cycles .",
    "* spanning trees and unicycles .",
    "* the reason that we studied unicycles so carefully in the previous section is that they are closely related to spanning trees , as we now explain .",
    "let @xmath42 be a spanning tree .",
    "any two vertices @xmath14 and @xmath9 are connected by a unique geodesic path in @xmath41 ; we write @xmath219 for that path , oriented from @xmath14 to @xmath9 . therefore if @xmath71 is an edge of @xmath1 connecting @xmath9 to @xmath14 , the undirected graph @xmath220 contains a unique cycle .",
    "now given a directed edge @xmath71 from @xmath9 to @xmath14 and a spanning tree @xmath41 , define a rotor configuration @xmath221 as follows .",
    "let @xmath222 denote the collection of directed edges obtained from @xmath41 by directing each edge towards the `` root '' @xmath9 .",
    "then the collection of directed edges @xmath223 forms a rotor configuration @xmath221 with unique directed cycle @xmath224 .",
    "we will denote this directed cycle by @xmath225 .",
    "if @xmath41 already contains @xmath71 , then @xmath225 is the length 2 cycle consisting only of @xmath226 ; note that this cycle is trivially reversible in any ribbon graph .",
    "if we took instead the edge @xmath227 from @xmath14 to @xmath9 , the rotor configuration @xmath228 comes from the directed graph @xmath229 , with directed cycle @xmath230",
    ". the following observation will be fundamental for us .      for @xmath232",
    "this follows because @xmath233 for vertices @xmath234 , we have @xmath235=t_y[z]$ ] , since the geodesics @xmath236 and @xmath237 share an initial segment . then @xmath238=\\rho_{{\\overline}e}(t)[z]$ ] , and @xmath238 = { \\overline}{\\rho_e(t)}[z]$ ] since @xmath95 is not on the cycle .    given a spanning tree @xmath239 and an edge @xmath71 from @xmath9 to @xmath14 , the rotor configuration @xmath240 is a unicycle since @xmath241 .",
    "conversely , given a unicycle @xmath72 , deleting the directed edge @xmath242 $ ] yields a spanning tree @xmath243 with all edges directed towards the root @xmath26 .",
    "this correspondence between spanning trees and rotor configurations lets us partially model the action of the sandpile group on spanning trees .",
    "[ prop : rotorscompute ] given a spanning tree @xmath41 in a ribbon graph @xmath1 , let @xmath71 be an edge not in @xmath41 , and @xmath53 any vertex on the @xmath41-geodesic between the endpoints @xmath244 of @xmath71 ( including @xmath14 or @xmath9 ) .",
    "let @xmath245 ( so that @xmath246 ) .",
    "then @xmath247 is a unicycle , and if @xmath16 is the rotor configuration defined by @xmath248 , then @xmath249    the rotor configuration @xmath8 is equal to @xmath223 , where @xmath222 is obtained by directing each edge of @xmath41 towards @xmath9 .",
    "the configuration @xmath8 then has a unique cycle , namely @xmath250 , and by assumption @xmath53 is on that cycle , so @xmath247 is a unicycle .",
    "next , by definition , @xmath251 is obtained by beginning with @xmath222 , placing the chip at @xmath53 , and running the rotor - routing process until the chip arrives at @xmath9 for the first time .",
    "the presence of the rotor @xmath10=e$ ] does not affect this process , since @xmath9 is not reached until the last step .",
    "therefore the rotor - routing process @xmath252 takes precisely the same steps as the process @xmath253 .",
    "we conclude that @xmath254 . since @xmath255 by definition , this proves the lemma .    * basepoint - independence and reversible cycles . * before giving our last few lemmas and proving our main theorem , let us give some intuition as to why reversibility should be at all related to basepoint - independence . consider a spanning tree @xmath256 , and let @xmath14 and @xmath9 be adjacent vertices connected by an edge @xmath71 from @xmath14 to @xmath9 .",
    "suppose that we wish to compute @xmath257 for some divisors @xmath51 .",
    "the first step is to compute @xmath258 . by proposition  [ prop : rotorscompute ] , the computation of @xmath259 can be modeled ( at least for some divisors ) by a rotor - routing process ; this process terminates with the rotor configuration @xmath260 , which is the spanning tree @xmath41 oriented towards the basepoint @xmath14 .",
    "the next step is to compute @xmath261 , and to do this we first need to re - orient the tree @xmath41 towards the basepoint @xmath9 .",
    "this does not affect any edges except those on the @xmath41-geodesic between @xmath14 and @xmath9 , which are reversed . if we add the edge @xmath71 to our rotor configuration @xmath260 to obtain @xmath262 , the reversal of the @xmath41-geodesic @xmath219 amounts to the reversal of the cycle @xmath224 in the rotor configuration @xmath221 .",
    "if this cycle is reversible , then we can compute both steps @xmath263 and @xmath264 as part of a _ single rotor - routing process _",
    ", even though these actions involve two _ different _ basepoints .",
    "this basic observation is the heart of the relation between reversibility and basepoint - independence , upon which our main theorem rests .",
    "the next lemma capitalizes on this observation .",
    "[ lemma : ongeodesic ] given a spanning tree @xmath41 in a ribbon graph @xmath1 and an edge @xmath71 from @xmath9 to @xmath14 , let @xmath53 be any vertex on the geodesic @xmath219 ( including @xmath265 or @xmath266 ) , and set @xmath267 .",
    "let @xmath245 ; as in proposition  [ prop : rotorscompute ] , @xmath247 is a unicycle .",
    "define rotor configurations @xmath270 , @xmath16 , and @xmath209 by @xmath271 note that @xmath272={\\overline}{\\rho}[x]={\\overline}{e}$ ] , and similarly @xmath79=\\rho[y]=e$ ] implies that @xmath213={\\overline}{\\sigma}[x]={\\overline}{e}$ ] .",
    "in fact , by lemma  [ lemma : ovrho ] and proposition  [ prop : rotorscompute ] , we have      thus we see that equality is exactly the condition @xmath276 .",
    "moreover , since @xmath272=\\tau[x]={\\overline}{e}$ ] , lemma  [ lemma : therotorknows ] implies that this is equivalent to @xmath277 .",
    "consider the following diagram relating these six rotor configurations : @xmath278\\ar_{\\txt{\\large ? } } @{2{<}~2{>}}[dl]&&(\\sigma , y)\\ar^{\\txt{\\large ? } } @{2{<}~2{>}}[dr]\\\\    ( { \\overline}{\\rho},s)\\ar@{2{<}~2{>}}[dr]&&&&({\\overline}{\\sigma},y)\\ar@{2{<}~2{>}}[dl]\\\\    & ( \\psi , x)\\ar_{\\txt{\\large ? } } @{2{<}~2{>}}[rr]&&(\\tau , x ) } \\ ] ] three of these edges hold by definition , namely @xmath279 , @xmath280 , and @xmath281 . by the results of section  [ sec : reversibility ] , the upper left edge @xmath282 is equivalent to the cycle @xmath283 being reversible .",
    "similarly the upper right edge is equivalent to @xmath284 being reversible .",
    "finally , we have already shown that the bottom edge is equivalent to the assertion",
    ". therefore parts ( a ) and ( b ) of the lemma each assert that if two of the remaining three edges hold , the third does as well . but",
    "this follows immediately from the transitivity of this equivalence relation .      by lemma  [ lemma : almostseparating ] ,",
    "the hypothesis of lemma  [ lemma : ongeodesic](a ) is always satisfied if @xmath1 is planar , so @xmath286 now applying @xmath287 to both sides , we conclude that @xmath288 .",
    "we emphasize that we are _ not _ yet claiming that @xmath289 , since the condition of corollary  [ corollary : first ] that @xmath53 lies on the @xmath41-geodesic from @xmath14 to @xmath9 need not hold for all trees @xmath41 .",
    "[ lemma : rununtil ] let @xmath290 be a spanning tree of an arbitrary ribbon graph @xmath1 .",
    "let @xmath14 , @xmath95 , and @xmath53 be arbitrary vertices such that @xmath53 is the first vertex on @xmath291 visited by the rotor - routing process starting with @xmath292",
    ". then @xmath293    define @xmath294 by @xmath295 ; by definition , the underlying spanning tree @xmath49 of @xmath294 is equal to @xmath296 .",
    "similarly , define @xmath297 by @xmath298 , with underlying spanning tree @xmath299 .    as we noted in the proof of lemma  [ lemma : ovrho ] , the configurations @xmath260 and",
    "@xmath300 coincide for all vertices @xmath301 , while on this geodesic , the difference between @xmath260 and @xmath300 is that @xmath291 is reversed and thus replaced by @xmath302 .",
    "therefore if the rotor - routing processes are run in parallel starting with @xmath292 and @xmath303 , the same steps will be taken until the chip first arrives at @xmath291 . by our assumption on @xmath53 ,",
    "this occurs when the chip reaches @xmath53 , i.e.  when the second process reaches @xmath304 .",
    "the first process coincides except that the geodesic between @xmath14 and @xmath53 is directed towards @xmath14 instead .",
    "but by the first sentence of this paragraph , this is the directed tree @xmath305 obtained from @xmath49 by directing its edges towards @xmath14 . to sum up",
    ", we have observed that @xmath306 .    by definition",
    ", @xmath307 can be computed by starting with @xmath308 and running the rotor - routing process until the chip reaches @xmath14 .",
    "the above shows that the first process reaches @xmath308 as an intermediate stage ; therefore continuing this process eventually yields @xmath309 , since @xmath298 by definition .",
    "this shows that @xmath310 . expanding out our notation",
    ", this says that @xmath311 applying @xmath312 to both sides yields @xmath313 , as desired .",
    "let @xmath53 be the first vertex on @xmath219 that is reached by the rotor - routing process starting with @xmath292 .",
    "note that @xmath53 is _ a fortiori _",
    "the first vertex visited on @xmath302 or on @xmath315 as well .",
    "we use this to apply lemma  [ lemma : rununtil ] twice , giving @xmath316 write @xmath49 for the tree @xmath296 appearing in .",
    "notice that by definition of @xmath53 , in the rotor routing process that computes @xmath296 , the chip never touches any vertex on @xmath219 until it reaches @xmath53 , so @xmath317 .",
    "so @xmath53 lies on @xmath318 by corollary  [ corollary : first ] applied to @xmath49 ( with the roles of @xmath14 and @xmath9 reversed ) , we have @xmath319 the desired result follows once this equation is combined with , by applying @xmath320 to the left - hand side of and applying @xmath321 to the right - hand side of .",
    "( @xmath322 ) first , assume that @xmath1 is a planar ribbon graph .",
    "our goal is to prove for any @xmath43 that @xmath323 as elements of @xmath324 for arbitrary vertices @xmath14 and @xmath9 .",
    "since @xmath1 is connected , it suffices to prove this when @xmath14 and @xmath9 are adjacent , with the general case following by induction .",
    "fix adjacent vertices @xmath14 and @xmath9 .",
    "the group @xmath22 is generated by divisors of the form @xmath325 as @xmath95 ranges over the vertices of @xmath1 .",
    "but we proved in corollary  [ corollary : fulladjacent ] that @xmath326 when @xmath14 and @xmath9 are adjacent .",
    "it follows that @xmath323 for any @xmath43 .",
    "this completes the proof that if @xmath1 is a planar ribbon graph , the action of @xmath0 on @xmath7 is independent of the basepoint .",
    "( @xmath327 ) conversely , assume that the action of @xmath0 on @xmath7 is independent of the basepoint . choose any edge @xmath71 of @xmath1 with endpoints @xmath14 and @xmath9 . we claim that for any @xmath239 and any @xmath43 , the cycle @xmath225 is reversible if and only if the cycle @xmath328 is reversible .",
    "( we have dropped the subscripted basepoints , since by assumption the action of @xmath0 does not depend on them . )",
    "we first prove the claim in the case when @xmath329 for some @xmath95 .    as in the proof of corollary",
    "[ corollary : fulladjacent ] , let @xmath53 be the first vertex on @xmath219 reached by the rotor - routing process starting with @xmath292 . since we have assumed independence of basepoint , this process @xmath330 computes @xmath331 .",
    "since this process does not reach @xmath219 until the last step , the cycle @xmath225 remains unchanged , i.e. @xmath332 .",
    "we may now apply lemma  [ lemma : ongeodesic ] to @xmath333 , since @xmath53 lies on the cycle @xmath332 .",
    "the condition is always satisfied by our assumption that the action is independent of the basepoint , so applying lemma  [ lemma : ongeodesic](b ) implies that @xmath334 completing the proof of the claim for @xmath329 .",
    "since @xmath22 is generated by such elements , the claim follows .",
    "we now show that every cycle @xmath64 in @xmath1 is reversible . given a cycle @xmath64 ,",
    "let @xmath71 be any edge of @xmath64 .",
    "extend the edge @xmath71 to a spanning tree @xmath41 , and separately extend the path @xmath335 to a spanning tree @xmath49 .",
    "since @xmath0 acts transitively on @xmath7 , there exists @xmath43 for which @xmath336 .",
    "thus the claim above shows that @xmath225 is reversible if and only if @xmath268 is reversible . but",
    "@xmath225 is the trivial cycle @xmath226 , which is always reversible in any ribbon graph , while @xmath268 is our original cycle @xmath64 .",
    "we conclude that every cycle in @xmath1 is reversible . by proposition",
    "[ prop : planar_is_reversible ] , @xmath1 is a planar ribbon graph .",
    "* acknowledgements .",
    "* we are very grateful to jordan ellenberg for calling our attention to the question considered in this paper , and we thank math overflow for providing a venue for the question . the first and third authors would also like to thank the second author for suggesting that the three of us get together to work on this problem , which was great fun !",
    "a.  holroyd , l.  levine , k.  mszros , y.  peres , j.  propp and d.  wilson , chip - firing and rotor - routing on directed graphs , in _ in and out of equilibrium 2 _ , eds . v.  sidoravicius and m.  e.  vares , _ progress in probability _ 60 , birkhuser ( 2008 ) , 331364 . `",
    "arxiv:0801.3306 ` ."
  ],
  "abstract_text": [
    "<S> the sandpile group @xmath0 of a finite graph @xmath1 is a discrete analogue of the jacobian of a riemann surface which was rediscovered several times in the contexts of arithmetic geometry , self - organized criticality , random walks , and algorithms . given a ribbon graph @xmath1 , holroyd _ et al . </S>",
    "<S> _ used the `` rotor - routing '' model to define a free and transitive action of @xmath0 on the set of spanning trees of @xmath1 . </S>",
    "<S> however , their construction depends _ a priori _ on a choice of basepoint vertex . ellenberg asked whether this action does in fact depend on the choice of basepoint . </S>",
    "<S> we answer this question by proving that the action of @xmath0 is independent of the basepoint if and only if @xmath1 is a planar ribbon graph . </S>"
  ]
}
{
  "article_text": [
    "bipartite networks are composed of two types of nodes with no links connecting nodes of the same type , see fig .",
    "[ fig : bip](a ) .",
    "examples include recommendation systems  @xcite , networks of collaborations  @xcite and metabolic reactions  @xcite , gene regulatory networks  @xcite , peer to peer networks  @xcite , pollination networks  @xcite , and many others  @xcite . compared to traditional unipartite networks , less",
    "is known about the organizing principles determining the structure and evolution of bipartite networks , partly because only unipartite projections of bipartite networks are often considered .",
    "the unipartite projection accounts for connecting two nodes of one type by a link if these nodes share at least one neighbor of the other type , and then throwing out all nodes of this other type , see figs .",
    "[ fig : bip](b ) and [ fig : bip](c ) .     a toy bipartite network and its unipartite projections .",
    "( a )  original bipartite network .",
    "we refer to the nodes of one type as top nodes ( labeled by letters ) and to the nodes of the other type as bottom nodes ( labeled by numbers ) .",
    "unipartite projections of the original network onto ( b )  bottom and ( c )  top domains .",
    "the top ( bottom ) nodes are connected in the projections if they have at least one common neighbor in the original network.,width=8 ]    even though this procedure allows one to study bipartite networks using powerful tools developed for unipartite networks , the unipartite projections in most cases lead to significant loss of information , and to artificial inflation of the projected network with fully connected subgraphs  @xcite .",
    "nodes in real bipartite networks can often be characterized by a number of intrinsic attributes .",
    "for example , in recommendation networks , composed of consumer and product nodes , a consumer - product pair is connected if the consumer has purchased the product .",
    "consumers can be characterized by their age , geographic location , income , sex , lifestyle , etc . , while products have their type , price , quality , uniqueness , and other properties .",
    "consumers do not buy products at random . making their purchase decisions ,",
    "consumers implicitly match their attributes with those of products .",
    "for example , a person with a higher income is more likely to purchase an expensive item , books in italian are mostly purchased by people who speak italian , consumers at a gas station tend to own a car , etc .",
    "similar considerations apply to the formation of links between researchers and scientific projects , molecules and reactions in which they participate , and so forth .",
    "the concept of hidden variables formalizes these observations as follows .",
    "every node of each type in a bipartite network is assigned a number of hidden variables drawn from some distributions , and then every node pair of different types is connected with some probability which depends on the hidden variables of the two nodes . in this work",
    "we build the hidden variable formalism for bipartite networks , based on the formalism developed earlier for unipartite networks  @xcite . specifically , in section  ii we overview basic topological characteristics of bipartite networks . in section",
    "iii we define a general class of bipartite networks with hidden variables , and study analytically the topological properties of networks in this class . in section  iv we consider two specific examples of bipartite networks with hidden variables , uncorrelated and stratified bipartite networks , and confirm in simulations our analytical results for these networks .",
    "section  v summarizes the paper .",
    "in this section we review some key relationships among the basic topological characteristics of bipartite networks .",
    "let the nodes of two different types be called top and bottom nodes , see figs .",
    "[ fig : bip](b ) and [ fig : bip](c ) .",
    "similar to unipartite networks , the degree correlations in bipartite networks are defined by the number of links @xmath0 between top and bottom nodes of degrees @xmath1 and @xmath2  @xcite .",
    "the correlation matrix @xmath0 satisfies the following equations : @xmath3 where @xmath4 and @xmath5 are the numbers of top and bottom nodes of degree @xmath1 and @xmath2 , and @xmath6 is the total number of links in the network .",
    "the joint degree distribution @xmath7 is the normalized correlation matrix , i.e. , the probability that a randomly chosen edge connects nodes of degrees @xmath1 and @xmath2 : @xmath8 which contains all information needed to construct a network with a given degree distribution and correlations .",
    "the top and bottom node degree distributions @xmath9 and @xmath10 can be obtained from eq .",
    "( [ eq : identity ] ) : @xmath11 the conditional probabilities @xmath12 and @xmath13 that an edge emanating from a @xmath1- or @xmath2-degree node is connected to a node of degree @xmath2 or @xmath1 are @xmath14    to characterize degree correlations in unipartite networks , one often considers the average nearest neighbor degree ( annd ) , which is the average degree of the neighbors of all @xmath1-degree nodes  @xcite .",
    "the annds for top and bottom nodes in a bipartite network are @xmath15 in uncorrelated bipartite networks @xmath16 as a result , @xmath12 and @xmath13 do not depend on @xmath1 and @xmath2 , respectively : @xmath17 and neither do the annds : @xmath18 networks with increasing or decreasing annds are called assortative or disassortative  @xcite .",
    "some real bipartite networks have non - trivial degree correlation profiles , and therefore they can not be classified as either assortative or disassortative  @xcite .",
    "the standard clustering coefficient of node @xmath19 quantifies how close @xmath19 s neighbors are to forming a clique  @xcite : @xmath20 where the summation is over all @xmath19 s pairs of neighbors @xmath21 and @xmath1 , and @xmath22 is the adjacency matrix . since in bipartite networks there are no loops of size @xmath23 , this clustering coefficient is zero for all nodes .",
    "therefore , to assess the density of connections in a vicinity of a particular node , one has to analyze connections among its second nearest neighbors .",
    "there have been several attempts to generalize the clustering coefficient for bipartite networks using this idea  @xcite .",
    "here we focus on the definition by zhang et al  @xcite : @xmath24 where @xmath25 goes over all pairs of @xmath19 s neighbors , @xmath26 is the number of common neighbors between nodes @xmath27 and @xmath28 excluding @xmath19 , @xmath29 and @xmath30 are the degrees of nodes @xmath27 and @xmath28 , and @xmath31 .",
    "the above definition may look cumbersome , but it has a simple interpretation .",
    "let @xmath32 and @xmath33 be the sets of neighbors of nodes @xmath27 and @xmath28 excluding @xmath19 .",
    "then @xmath26 is the intersection of @xmath32 and @xmath33 , @xmath34 , while @xmath35 is their union .",
    "therefore , the bipartite clustering coefficient is simply @xmath36 the ratio of the intersection and union of two sets is known as the jaccard similarity coefficient  @xcite . the bipartite clustering coefficient , on the other hand ,",
    "is given by the ratio of the sums of intersections and unions for all pairs of @xmath19 s neighbors .",
    "therefore , the bipartite clustering coefficient can be interpreted as a combined jaccard similarity of @xmath19 s neighbors . regardless of the clustering",
    "definition details , nodes in real bipartite networks tend to be strongly clustered , as compared to nodes in their randomized counterparts with preserved degree distributions  @xcite .",
    "we define the class of bipartite networks with hidden variables as follows :    * \\(i ) each top and bottom nodes @xmath19 and @xmath21 are assigned hidden variables @xmath37 and @xmath38 drawn from probability distribution @xmath39 and @xmath40 ; * \\(ii ) each top - bottom node pair @xmath41 is connected with probability @xmath42 , @xmath43 .    the hidden variable formalism developed here is valid for both discrete and continuous variables . in the latter case ,",
    "all sums must be replaced by integrals .",
    "we are primarily interested in the cases where the hidden variable distributions @xmath39 and @xmath40 are independent of the sizes of the top and bottom domains @xmath44 and @xmath45 .",
    "we also assume that in the thermodynamic limit of large @xmath46 , these sizes are proportional to each other , @xmath47 . for the sake of clarity",
    "we consider only one hidden variable per node .",
    "the generalization to several hidden variables per node is straightforward .",
    "we also drop indices in the top and bottom hidden variable distribution notations : @xmath48 and @xmath49 .",
    "we first compute the most basic topological properties of the networks in the model  the degree distributions and average degrees . due to the stochastic nature of connections between top and bottom nodes",
    ", we can not compute the degree of a top node with hidden variable @xmath50 deterministically .",
    "instead , we can compute propagator @xmath51 , which is the probability that a node with hidden variable @xmath50 ends up connecting to @xmath1 bottom nodes .",
    "similarly , propagator @xmath52 is the probability that a bottom node with hidden variable @xmath53 will be connected to @xmath2 top nodes .",
    "propagators @xmath51 and @xmath52 are the main building blocks of the hidden variable formalism .",
    "as soon as we know @xmath51 , for example , the average degree @xmath54 of a top node with hidden variable @xmath50 , the degree distribution @xmath9 , and the average degree @xmath55 in the top node domain are given by : @xmath56 while the corresponding expressions for bottom nodes can be obtained by an appropriate swap of notations .    to compute propagator @xmath51 we first compute partial propagator @xmath57 defined as the probability that a top node with hidden variable @xmath50 ends up having @xmath58 connections to bottom nodes with hidden variable @xmath59 .",
    "since links between node pairs appear independently from one pair to another , @xmath57 is given by the binomial distribution : @xmath60^{k_{i } } \\left[1-r(\\kappa , \\lambda_i ) \\right]^{m_{\\lambda_i}-k_{i}},\\ ] ] where @xmath61 is the binomial coefficient , and @xmath62 is the total number of bottom nodes with hidden variable @xmath59 .",
    "the full propagator @xmath51 is then a convolution of partial propagators : @xmath63 where the product is over the entire spectrum of hidden variables @xmath53 , while the summation is over the ensemble of all possible degrees @xmath58 whose sum is @xmath1 .",
    "since the full propagator is a convolution , its generating function @xmath64 is a product of the generating functions @xmath65 for partial propagators : @xmath66 the generating function for binomial @xmath67 is @xmath68 substituting which into eq .",
    "( [ eq : g(z|kappa ) ] ) we obtain @xmath69.\\ ] ] the average degree of nodes with hidden variable @xmath50 is given by the derivative of @xmath64 at @xmath70  @xcite , to confirm the obvious @xmath71 while higher moments of @xmath51 can be computed by taking higher order derivatives of the generating function .",
    "( [ eq : avg_k_kappa2 ] ) yields the average degree in the entire top node domain @xmath72 and the expected total number of links in the network @xmath73 it is evident from the last equation that to end up with a sparse bipartite network , @xmath74 , the connection probability @xmath75 must be of the form @xmath76 where @xmath77 is independent of @xmath45 .",
    "therefore , for large sparse networks we can expand the logarithm in eq .",
    "( [ eq : gener_propagator2 ] ) in powers of @xmath78 to finally obtain , in the first order , @xmath79^{k } /k ! , \\ ] ] which we can use to compute the degree distribution in eq .",
    "( [ eq : pk ] ) .",
    "propagator @xmath52 and degree distribution @xmath10 for bottom nodes can be obtained from eqs .",
    "( [ propagator2 ] ) and ( [ eq : pk ] ) by swapping @xmath80 and @xmath81 .",
    "the poisson form of the propagator @xmath51 , given by eq .",
    "( [ propagator2 ] ) , implies that @xmath82^{2 } + \\overline{k}(\\kappa).\\ ] ] furthermore , eq .",
    "( [ eq : pk ] ) allows us to obtain the second moment of the degree distribution : @xmath83^{2 } \\rho(\\kappa ) + \\sum_{\\kappa}\\overline{k}(\\kappa)\\rho(\\kappa)\\ ] ]      next we establish the connection between the degrees of nodes in a bipartite network and in its unipartite projections , often considered in the literature . in the top unipartite projection ,",
    "two top nodes are connected if they have at least one common bottom neighbor in the bipartite network .",
    "therefore , we first compute the probability @xmath84 that two top nodes with hidden variables @xmath85 and @xmath86 do not have any common bottom neighbors in the bipartite network .",
    "this probability is @xmath87,\\ ] ] where the product is over all the bottom nodes . taking the logarithm on both sides , we get @xmath88,\\ ] ] and",
    "the probability @xmath89 that two top nodes with hidden variables @xmath85 and @xmath86 are connected in the unipartite projection is simply @xmath90\\}.\\ ] ] in sparse networks we use eq .",
    "( [ eq : sparse ] ) to approximate @xmath91 as @xmath92    next we find propagator @xmath93 , the conditional probability that a top node with hidden variable @xmath50 has @xmath94 connections in the unipartite projection .",
    "the derivation is similar to the derivation of propagator @xmath51 for the bipartite network .",
    "we first define partial propagator @xmath95 , the probability that a top node with hidden variable @xmath50 is connected in the unipartite projection to @xmath96 nodes with hidden variable @xmath97 .",
    "equation  ( [ eq : uni_degree_2 ] ) indicates that a node with hidden variable @xmath50 is equally likely to be connected in the unipartite projection to any of @xmath98 nodes with hidden variable @xmath97 , where @xmath99 is the number of top nodes with hidden variable @xmath97 .",
    "if @xmath100 , we can assume that the links in the unipartite projection are independent , leading to binomial @xmath95 : @xmath101^{n_i}\\left[(1-p_{u}(\\kappa,\\kappa'_i))\\right]^{n_{\\kappa'_i}-n_i}.\\ ] ] similar to eq .",
    "( [ eq : g_propagator ] ) , @xmath102 is then a convolution @xmath103 and its generating function @xmath104 is @xmath105.\\ ] ] therefore if @xmath106 scales as @xmath107 with @xmath108 , then similar to the bipartite case , propagator @xmath93 is approximately the poisson distribution : @xmath109^{k_u } /k_u!.\\ ] ]    the average degree @xmath110 of nodes with hidden variable @xmath50 in the unipartite projection is given by the first derivative of the generating function @xmath111 at @xmath70 to yield the obvious @xmath112 which for sparse networks using eq .",
    "( [ eq : uni_degree_2 ] ) transforms to : @xmath113 where @xmath114 is the average degree of bottom nodes with hidden variable @xmath53 in the bipartite network .",
    "the average degree in the entire top unipartite projection is then @xmath115^{2}.\\ ] ] finally , the degree distribution in the unipartite projection is @xmath116      the common neighbor statistics is useful in many applications , such as node similarity estimation  @xcite and link prediction  @xcite .",
    "we compute the probability that two top nodes with hidden variables @xmath85 and @xmath86 have @xmath27 common bottom neighbors .",
    "this probability can be calculated as @xmath117 where @xmath118 is the probability that two top nodes with @xmath85 and @xmath86 have @xmath119 common bottom neighbors with @xmath59 , and the product is over the entire range of @xmath59 , while the summation is over all possible combinations of @xmath120 adding up to @xmath27 .",
    "consider two nodes with hidden variables @xmath85 and @xmath86 .",
    "each common neighbor of the two nodes with @xmath85 and @xmath86 appears independently with probability @xmath121 where @xmath53 is the hidden variable of the common neighbor .",
    "therefore , @xmath122 is also binomial : @xmath123^{m } \\left[1-\\tilde{r}_{\\lambda}(\\kappa_1,\\kappa_2 ) \\right]^{m_{\\lambda}-m},\\ ] ] and the corresponding generating function is given by @xmath124^{m_\\lambda}. \\label{eq : avg_m_binom_gener}\\ ] ] since @xmath125 is given by a convolution , its generation function is @xmath126 combining the last two equations , we get @xmath127.\\ ] ] to compute the average number of common neighbors between top nodes with @xmath85 and @xmath86 we evaluate the derivative of @xmath128 with respect to @xmath129 at @xmath70 : @xmath130 the generating function for the common neighbor distribution has the same structure as @xmath131 .",
    "therefore , the closed form of @xmath132 in the sparse network approximation is given by @xmath133^{m}/m!.\\ ] ]      the degree correlations in bipartite networks are fully described by conditional probabilities @xmath12 and @xmath13 in eqs .",
    "( [ eq : cond_prob1],[eq : cond_prob2 ] ) . in order to calculate",
    "@xmath12 we need to define the related conditional probability @xmath134 that an edge outgoing from a top node with hidden variable @xmath50 is connected to a bottom node with hidden variable @xmath53 .",
    "then , @xmath12 can be written as @xmath135 where @xmath136 is the conditional probability that a bottom node with hidden variable @xmath53 ends up having degree @xmath2 ( one connection is already taken into account by the conditional edge ) , while the inverse propagator @xmath137 is the probability that a top node of degree @xmath1 has hidden variable @xmath50 .",
    "this inverse propagator is given by the bayes formula  @xcite @xmath138 using which we write @xmath139 to determine @xmath134 we note that the conditional probability that an edge is connected to a bottom node with @xmath53 , given that this edge is connected to a top node with @xmath50 , is proportional to the density of bottom nodes @xmath140 and the connection probability @xmath75 , @xmath141 taking into account the normalization condition @xmath142 , we get @xmath143 using eqs .",
    "( [ eq : corr_pk2]-[eq : cond_corr2 ] ) we obtain the final expression for the top annd statistics : @xmath144 where @xmath145 is the average nearest neighbor degree of top nodes with hidden variable @xmath50 : @xmath146      finally we derive the bipartite clustering coefficient as defined by p. zhang et al  @xcite .",
    "other variations of the bipartite clustering coefficient can be computed in a similar manner .",
    "the bipartite clustering coefficient of top node @xmath19 , given by eq .  ( [ eq : clustering ] ) , can be written as @xmath147 where @xmath148 is the number of common neighbors between bottom nodes @xmath21 and @xmath149 , while @xmath150 and @xmath151 are their degrees .",
    "since the summations in the numerator and denominator are performed independently , we can estimate the average bipartite clustering coefficient of top nodes with hidden variable @xmath50 by calculating the ensemble averages of the numerator and denominator .",
    "the details are in the appendix , while the answer is @xmath152 where @xmath134 is the conditional probability that an edge connected to a top node with hidden variable @xmath50 is also connected to a bottom node with hidden variable @xmath53 , @xmath153 is the average number of common neighbors between two bottom nodes with hidden variables @xmath154 and @xmath155 , and @xmath145 is the average nearest neighbor degree of top nodes with hidden variable @xmath50 .",
    "the average bipartite clustering coefficient of top nodes with degrees @xmath156 can be expressed in terms of @xmath157 as @xmath158 while the average bipartite clustering coefficient in the top node domain is simply @xmath159",
    "having the general formalism in place , we next consider a couple of examples of bipartite networks with hidden variables .",
    "the first example of uncorrelated networks is fairly standard .",
    "the second one , stratified networks , is more unusual .",
    "consider a random bipartite network composed of nodes with degrees @xmath160 and @xmath161 drawn from distributions @xmath9 and @xmath10 .",
    "if nodes in the network are connected at random , then two randomly chosen nodes with degrees @xmath1 and @xmath2 are connected with probability @xmath162 , where @xmath6 is the total number of links in the network .",
    "similar random uncorrelated networks can be constructed in the hidden variable formalism .",
    "consider a network with hidden variables drawn from distributions @xmath163 and @xmath140 , in which node pairs are connected with probability proportional to the product of nodes hidden variables : @xmath164 where @xmath165 is some normalization constant .",
    "the above form of @xmath78 implies that the hidden variable of a node can be regarded as its target or expected degree .",
    "indeed , if we choose @xmath166 , then a top node with hidden variable @xmath50 gets @xmath50 connections on average @xmath167 since the assumption of a sparse network , given by eq .",
    "( [ eq : sparse ] ) holds here , propagator @xmath51 is given by the poisson distribution : @xmath168 and using eqs .",
    "( [ eq : pk ] ) and ( [ eq : second_moment ] ) one can obtain @xmath169    one type of nodes in real bipartite networks is often characterized by scale - free degree distributions , while degree of nodes of the other type can follow either fat - tailed or poissonian distributions  @xcite .",
    "our uncorrelated formalism can account for both options .",
    "the former case is actually simpler , and the properties of top and bottom nodes can be obtained from each other via a simple swap of notations .",
    "therefore below we consider the latter case , which is more typical for real networks .",
    "specifically , let @xmath50 be power - law distributed : @xmath170 where power - law exponent @xmath171 and minimum expected degree @xmath172 are parameters of the distribution .",
    "the resulting degree distribution of the top node domain is given by eqs .",
    "( [ eq : pk ] ) and  ( [ propagator2 ] ) , which yield @xmath173 \\over \\gamma[k+1]},\\ ] ] where @xmath174 $ ] is the incomplete gamma function . in the large @xmath1 limit",
    "we can approximate @xmath9 by @xmath175 we note that the distribution @xmath9 of top node degrees does not depend on a specific form of the hidden variable distribution @xmath140 in the bottom node domain .",
    "let the latter be a delta function @xmath176 , meaning that all bottom nodes have the same value of their hidden variable equal to @xmath177 . then using the same eqs .",
    "( [ eq : pk],[propagator2 ] ) swapped for the bottom nodes , we immediately conclude that the distribution of bottom node degrees is poissonian : @xmath178    we now turn our attention to the unipartite projections . we first consider the top node projection .",
    "we use eq .",
    "( [ eq : avg_uni_k3 ] ) to compute the average degree of @xmath50-nodes : @xmath179 therefore the average degree in the top unipartite projection is @xmath180 the degree distribution in the projection are given by eqs .",
    "( [ eq : uni_pk ] ) and  ( [ eq : cond_pk ] ) : @xmath181^{\\gamma-1 } { \\gamma[k_u -\\gamma + 1 , \\kappa_0 \\lambda_0]\\over \\gamma[k_{u}+1]},\\ ] ] that is , this distribution is also a power law , @xmath182^{\\gamma-1 } k_u^{-\\gamma},\\ ] ] and the exponent of this power law is equal to the exponent of the top power - law degree distribution in the original bipartite network .    in the bottom unipartite projection ,",
    "the average node degrees are obtained in a similar manner to yield @xmath183 for @xmath184 , @xmath185 depends on @xmath44 , and diverges in the thermodynamic limit .",
    "therefore connection probability @xmath186 does not satisfy the condition of eq .",
    "( [ eq : uni_pkk ] ) , and we can not approximate the degree distribution in the bottom domain by eq .",
    "( [ eq : uni_pk ] ) with poissonian @xmath93 in eq .",
    "( [ eq : cond_pk ] ) .",
    "however , if @xmath187 , then @xmath185 is finite in the thermodynamic limit , and the degree distribution is given by @xmath188^{\\ell } /\\ell!.\\ ] ]    as far as correlations are concerned , the conditional hidden variable distributions are @xmath189 leading to the following expression for the top and bottom annds given by eq .",
    "( [ eq : annd ] ) : @xmath190    the average number of common neighbors is given by eq .",
    "( [ eq : avg_m ] ) yielding , for top and bottom nodes , @xmath191 finally , to compute clustering , we insert the expressions for the average number of common neighbors ( [ eq : random_avg_m1],[eq : random_avg_m2 ] ) , annds  ( [ eq : random_k_annd],[eq : random_l_annd ] ) , and conditional distributions ( [ eq : random_rho_lambda],[eq : random_pll ] ) into eq .",
    "( [ eq : cbi_final ] ) , and obtain the average bipartite clustering coefficient for top and bottom nodes : @xmath192 we observe that the clustering coefficient of a node does not depend on its hidden variable in either case , i.e. , that it is constant .",
    "this constant decreases as the network sizes @xmath46 increase , and vanishes in the thermodynamic limit .",
    "degree distributions in a random uncorrelated bipartite network .",
    "( a )  degree distributions in the top domain ( green circles ) and top unipartite projection ( red squares ) .",
    "the solid lines are the analytical predictions from eqs .",
    "( [ eq : random_pk],[eq : random_uni_pk ] ) .",
    "( b )  degree distributions in the bottom domain ( green circles ) and bottom unipartite projection ( red squares ) .",
    "both plots correspond to the model with @xmath193 , @xmath194 , @xmath195 , @xmath196 , and @xmath197.,title=\"fig:\",width=8 ]   degree distributions in a random uncorrelated bipartite network .",
    "( a )  degree distributions in the top domain ( green circles ) and top unipartite projection ( red squares ) .",
    "the solid lines are the analytical predictions from eqs .",
    "( [ eq : random_pk],[eq : random_uni_pk ] ) .",
    "( b )  degree distributions in the bottom domain ( green circles ) and bottom unipartite projection ( red squares ) .",
    "both plots correspond to the model with @xmath193 , @xmath194 , @xmath195 , @xmath196 , and @xmath197.,title=\"fig:\",width=8 ]    to test our analytical results we perform simulations , setting @xmath198 , @xmath199 , @xmath195 , @xmath200 , and @xmath197 to satisfy @xmath201 .",
    "the degree distributions in the top and bottom domains as well as in their unipartite projections are shown in fig .",
    "( [ fig : unc1 ] ) .",
    "the degree distribution of top nodes in the original bipartite network , and in its top unipartite projection both follow a power law with the same exponent @xmath195 , see fig .",
    "[ fig : unc1](a ) . as seen in fig .",
    "[ fig : unc1](b ) , the degree distribution in the bottom node domain is well approximated by a poisson distribution .",
    "on the other hand , due to the divergent behavior of the second moment of the top degree distribution @xmath185 , the degree distribution in the bottom unipartite projection seems to follow a truncated power - law .",
    "the measured values of @xmath202 and @xmath203 are in good agreement with eqs .",
    "( [ eq : random_uni_avg_k],[eq : random_uni2_avg_k ] ) since @xmath204 and @xmath205 for the selected parameters .",
    "( a ) the average nearest neighbor degrees of top ( blue triangles ) and bottom ( magenta hexagons ) nodes in an uncorrelated bipartite network with @xmath199 , @xmath194 , @xmath195 , @xmath196 , and @xmath206 .",
    "the solid lines are the analytical predictions in eqs .",
    "( [ eq : random_k_annd],[eq : random_l_annd ] ) .",
    "( b ) the average bipartite clustering coefficient for top nodes in uncorrelated bipartite networks as a function of network size @xmath44 for @xmath207 , @xmath195 and @xmath208 .",
    "the solid lines are the theoretical predictions of @xmath209 with @xmath210.,title=\"fig:\",width=8 ] ( a ) the average nearest neighbor degrees of top ( blue triangles ) and bottom ( magenta hexagons ) nodes in an uncorrelated bipartite network with @xmath199 , @xmath194 , @xmath195 , @xmath196 , and @xmath206 .",
    "the solid lines are the analytical predictions in eqs .",
    "( [ eq : random_k_annd],[eq : random_l_annd ] ) .",
    "( b ) the average bipartite clustering coefficient for top nodes in uncorrelated bipartite networks as a function of network size @xmath44 for @xmath207 , @xmath195 and @xmath208 .",
    "the solid lines are the theoretical predictions of @xmath209 with @xmath210.,title=\"fig:\",width=8 ]    in fig .",
    "[ fig : unc2](a ) we plot the annds , and confirm that they are independent of node degrees as eqs .",
    "( [ eq : random_k_annd],[eq : random_l_annd ] ) predict for uncorrelated networks .    to test the dependence of the average bipartite clustering coefficient on the network size",
    ", we generate a number of uncorrelated bipartite network of different sizes and values of @xmath171 .",
    "while sampling hidden variables @xmath50 for top nodes , we impose the cutoff of @xmath211 to avoid structural degree correlations  @xcite .",
    "therefore , @xmath212 , and the average bipartite clustering coefficient scales as @xmath213 with @xmath214 for @xmath215 . in fig .",
    "[ fig : unc2](b ) we confirm this scaling .",
    "the figure shows the measured bipartite clustering coefficients as a function of @xmath44 for different values of @xmath171 .",
    "the original stratified unipartite network model was considered by leicht et al  @xcite . in this model , @xmath44 nodes",
    "are assigned random integer _ ages _",
    "@xmath216 with uniform probability , and then links are created between node pairs with probability @xmath217 where @xmath218 and @xmath219 are model parameters .",
    "the motivation for this model in  @xcite was to have a simplified social model in which individuals preferably connect to other individuals of similar age .",
    "the stratified model was used in  @xcite to test the ability of different node similarity measures to infer relative node ages .    here",
    "we generalize the stratified network model as follows .",
    "the networks in the model consist of @xmath44 top and @xmath45 bottom nodes .",
    "all nodes are assigned hidden variables @xmath50 and @xmath53 drawn from the continuous uniform distribution on interval @xmath220 $ ] , @xmath221 . to eliminate finite size effects we impose the periodic boundary condition , meaning that nodes are uniformly scattered along a circle , and their hidden variables are their angular coordinates if we set @xmath222 . to simplify the calculations we use the squared distances in the connection probability function : @xmath223 where @xmath224 is the angular distance between @xmath53 and @xmath50 : @xmath225",
    "we first calculate the degree distributions for the top nodes . due to the uniform distribution of hidden variables ,",
    "the expected degree of a node is independent of its hidden variable @xmath50 . using eqs .",
    "( [ eq : avg_k_kappa2 ] ) and ( [ eq : avg_k_2 ] ) we obtain @xmath226 where @xmath227 is the error function . for @xmath55 to be independent of network size , we must set @xmath228",
    ". another natural choice would be to constraint @xmath229 , but this choice would lead to bipartite clustering coefficients dependent on the network size .",
    "constant bipartite clustering can be instrumented by setting @xmath230 where @xmath231 is a parameter controlling the average degree in the network . with the above choice of parameters",
    "( [ eq : strat_k ] ) simplifies to @xmath232 similarly , the average degree in the bottom node domain is given by @xmath233 since connection probability @xmath75 does not scale as @xmath234 , propagator @xmath51 is not given by eq .",
    "( [ propagator2 ] ) .",
    "instead we have to use eq .",
    "( [ eq : gener_propagator2 ] ) to compute the propagator , yielding @xmath235 where @xmath236 is the polylogarithm . equation  ( [ eq : strat_gener ] ) can be used to calculate higher moments of the degree distribution .",
    "for example , the second moment is @xmath237 that is , similar to the poisson distribution , the standard deviation of @xmath51 is @xmath238 according to eq .",
    "( [ eq : annd_kappa ] ) , the average nearest neighbor degree is independent of the node s hidden variable : @xmath239 because node degrees are not correlated with their hidden variables , see eq .",
    "( [ eq : strat_k2 ] ) . therefore ,",
    "despite strong correlation between hidden variables of connected nodes , there are no degree correlations .",
    "the annd can be obtained by inserting @xmath145 from eq .",
    "( [ eq : strat_lnn ] ) into eq .",
    "( [ eq : annd ] ) to yield @xmath240    , @xmath241 , and @xmath242 .",
    "[ fig : strat],title=\"fig:\",width=8 ] , @xmath241 , and @xmath242 .",
    "[ fig : strat],title=\"fig:\",width=8 ] , @xmath241 , and @xmath242 .",
    "[ fig : strat],title=\"fig:\",width=8 ]    the average number of common neighbors between bottom nodes with hidden variables @xmath154 and @xmath155 is given by eq .",
    "( [ eq : avg_m ] ) , which now becomes @xmath243 to compute @xmath153 we first change the integration variable to @xmath244 , so that the new integration limits are @xmath245 .",
    "since @xmath246 , in the thermodynamic limit the integration interval becomes @xmath247 , leading to @xmath248 inserting the expression for @xmath153 and @xmath145 into eqs .",
    "( [ eq : cbi_final ] ) and ( [ eq : avg_cbi_k ] ) yields the average bipartite clustering coefficient : @xmath249    to validate the obtained analytical expressions we perform numerical simulations , generating networks with @xmath250 and @xmath241 . to generate a network with a target value of @xmath55 we set @xmath231 according to eq .",
    "( [ eq : strat_k2 ] ) . figure  [ fig : strat](a ) shows the degree distributions for the top and bottom nodes in the model .",
    "the degree distributions are well approximated by the poisson distributions with the averages at @xmath251 and @xmath252 .",
    "figure  [ fig : strat](b ) confirms that there are no correlations : @xmath253 and @xmath254 do not depend on node degree , and match eq .",
    "( [ eq : strat_lnn ] ) . figure  [ fig : strat](c ) shows that clustering is strong ,",
    "does not depend on either node degree or sizes @xmath46 , and matches the prediction in eq .",
    "( [ eq : strat_cbi ] ) .",
    "the appearance of high bipartite clustering in the stratified model is due to preferential linking of nodes with similar hidden variables .",
    "we have constructed and analyzed a general class of bipartite networks with hidden variables . in this class of bipartite networks , nodes of both type reside in hidden variable spaces , and",
    "the connection probability between a pair of nodes is a function of their hidden variables .",
    "the independent character of link appearance in the model allows one to calculate analytical expressions for many important topological properties of modeled networks .",
    "the formalism developed here builds up on the hidden variable formalism for unipartite networks  @xcite .",
    "some basic structural properties of bipartite networks , such as the degree distributions and correlations , are straightforward generalizations of those in unipartite networks .",
    "some other characteristics , such as unipartite projections and bipartite clustering , are unique to bipartite networks .",
    "the hidden variable formalism has proven to be a powerful tool in studying the structure and function of complex networks  @xcite .",
    "one particular application of interest for us are network geometry and navigability  @xcite .",
    "the formalism developed here can also be useful in inferring individual characteristics , attributes , and annotations of nodes in real bipartite networks .",
    "we thank f.  papadopoulos , m.   .",
    "serrano , m.  bogu and kc claffy for many useful discussions and suggestions .",
    "this work was supported by nsf grants no .",
    "cns-0964236 , cns-1039646 , cns-0722070 ; dhs grant no .",
    "n66001 - 08-c-2029 ; and by cisco systems .",
    "99 g. uchyigit , and m. y. ma . _ personalization techniques and recommender systems _ , ( world scientific , singapore , 2008 )",
    ". j. j. ramasco , s. n. dorogovtsev , and r. pastor - satorras , phys .",
    "e. * 70 * 036106 ( 2004 ) .",
    "h. ma , a .-",
    "zeng , bioinformatics * 19 * ( 2 ) : 270 ( 2003 ) .",
    "e. davidson , and m. levin , pnas * 102 * ( 14 ) 4935 ( 2005 ) .",
    "a. iamnitchi , m. ripeanu , i. foster , infocom ( 2004 ) .",
    "e. burgos , h. ceva , l. hernandez , r. p. j. perazzo , m. devoto , d. medan , phys .",
    "e * 78 * , 046113 ( 2008 ) .",
    "m. latapy , c. magnien , and n. del vecchio , social networks , * 30 * ( 1 ) 31 ( 2008 ) .",
    "guillaume , m. latapy , inform . process",
    ". lett . * 90 * 215 ( 2004 ) .",
    "m. bogu , r. pastor - satorras , phys .",
    "e * 68 * , 036112 ( 2003 ) d. s. callaway , j. e. hopcroft , j. m. kleinberg , m. e. j. newman , and s. h. strogatz , phys .",
    "e * 64 * , 041902 ( 2001 ) .",
    "r. pastor - satorras , a. vazquez , and a. vespignani , phys .",
    "lett . * 87 * 258701 ( 2001 ) .",
    "m. e. j. newman , phys .",
    ". lett . * 89 * 208701 ( 2002 ) .",
    "d. j. watts , and s. strogatz , nature * 393 * 440 ( 1998 ) .",
    "p. zhang , j. wanga , x. lia , m. lia , z. dia , and y. fana , physica a * 387 * 27 6869 ( 2008 ) .",
    "p. g. lind , m. c. gonzalez and h. j. herrmann , phys .",
    "e * 72 * 056127 ( 2005 ) .",
    "p. jaccard , bulletin de la socit vaudoise des sciences naturelles * 37 * 547 ( 1901 ) . h. s. wilf,_generatingfunctionology _ , 2nd ed .",
    "( academic press , san diego , 1994 ) .",
    "e. a. leicht , p. holme , and m. e. j. newman , phys .",
    "e * 73 * 026120 ( 2006 ) .",
    "l. a. adamic , and e. adar , social networks , * 25 * 3 ( 2003 ) .",
    "b. v. gnedenko , _ the theory of probability _",
    "( chelsea , new york , 1962 ) .",
    "z. burda , and a. krzywicki , phys .",
    "e * 67 * 046118 ( 2003 ) .",
    "d. garlaschelli , a. capocci , and g. caldarelli , nature phys .",
    "* 3 * 813 ( 2007 ) .",
    "a. fekete , g. vattay , and m. psfai , phys .",
    "e * 79 * , 065101(r ) ( 2009 ) .",
    "d. garlaschelli , and m. i. loffredo , phys .",
    "e * 78 * , 015101(r ) ( 2008 ) .",
    "g. a. miller , y. y. shi , h. qian , and k. bomsztyk , phys .",
    "e * 75 * , 051910 ( 2007 ) .",
    "m. bogu , d. krioukov , and kc claffy , nature phys .",
    "* 5 * , 74 ( 2009 ) .",
    "m. bogu , and d. krioukov phys .",
    "* 102 * 058701 , ( 2009 ) .",
    "d. krioukov , f. papadopoulos , m. kitsak , a. vahdat , and m. boguna , phys .",
    "e. * 82 * , 036106 ( 2010 ) . m. boguna , f. papadopoulos , and d. krioukov , nature comm .",
    "* 1 * , 62 ( 2010 ) .",
    "here we provide the detailed derivation of the bipartite clustering coefficient defined in eq .",
    "( [ eq : cbi ] ) .",
    "we estimate the average bipartite clustering coefficient of a node with hidden variable @xmath50 by calculating the ensemble averages of the numerator and the denominator in eq .",
    "( [ eq : cbi ] ) : @xmath255 we first focus on the numerator in eq .",
    "( [ eq : c42 ] ) : @xmath256 where @xmath51 is the @xmath50-to-@xmath1 propagator , @xmath257 is the conditional probability that a bottom node has hidden variable @xmath258 provided it is connected to a top node with @xmath50 , and @xmath259 is the probability that two bottom nodes with @xmath154 and @xmath155 have exactly @xmath260 common neighbors besides @xmath19 .",
    "equation  ( [ eq : c4_numer ] ) simplifies to @xmath261 next we compute the denominator of eq .",
    "( [ eq : c42 ] ) : @xmath262 sum @xmath263 is the same as in the numerator , so that we only need to compute @xmath264 : @xmath265 where @xmath58 is degree of node @xmath19 . therefore , @xmath266 using eqs .",
    "( [ eq : c4_numer2 ] ) and ( [ eq : c4_denom4 ] ) we finally obtain @xmath267"
  ],
  "abstract_text": [
    "<S> we introduce and study random bipartite networks with hidden variables . </S>",
    "<S> nodes in these networks are characterized by hidden variables which control the appearance of links between node pairs . </S>",
    "<S> we derive analytic expressions for the degree distribution , degree correlations , the distribution of the number of common neighbors , and the bipartite clustering coefficient in these networks . </S>",
    "<S> we also establish the relationship between degrees of nodes in original bipartite networks and in their unipartite projections . </S>",
    "<S> we further demonstrate how hidden variable formalism can be applied to analyze topological properties of networks in certain bipartite network models , and verify our analytical results in numerical simulations . </S>"
  ]
}
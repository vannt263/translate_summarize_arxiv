{
  "article_text": [
    "minimizers of a submodular function form a distributive lattice , and are compactly represented by a poset ( partially ordered set ) via birkhoff representation theorem .",
    "this fact reveals a useful hierarchical structure of the minimizers , and is applied to the dm - decomposition of matrices and further refined block - triangular decompositions  @xcite .    in this paper , we address such a birkhoff - type representation for minimizers of a _ @xmath0-submodular function_. here @xmath0-submodular functions , introduced by huber ",
    "kolmogorov  @xcite , are functions on @xmath2 defined by submodular - type inequalities .",
    "this generalization of ( bi)submodular functions has recently gained attention for algorithm design and modeling  @xcite .",
    "our main result is to establish a compact representation for minimizers of a @xmath0-submodular function .",
    "this can be viewed as a generalization of the above poset representation for submodular functions and ando ",
    "fujishige s signed - poset representation for bisubmodular functions  @xcite .",
    "a feature of our representation is to utilize a _",
    "poset with inconsistent pairs ( pip ) _",
    "@xcite , which is a discrete structure having a stronger power of expression than that of a signed - poset .",
    "actually a pip is a poset endowed with an additional binary relation ( _ inconsistent relation _ ) , and is viewed as a poset reformulation of 2-cnf .",
    "this concept , also known as an _ event structure _ , was first introduced by nielsen  plotkin ",
    "winskel  @xcite as a model of concurrency in theoretical computer science , and was independently considered by barthelemy ",
    "constantin  @xcite to establish a birkhoff - type representation theorem for a _",
    "median semilattice_a semilattice generalization of a distributive lattice .",
    "a pip was recently rediscovered by ardila ",
    "sullivant  @xcite to represent nonpositively - curved cube complexes ; the term `` pip '' is due to them .",
    "our results consist of structural and algorithmic ones , summarized as follows :    [ [ structural - results . ] ] structural results .",
    "+ + + + + + + + + + + + + + + + + + +    we show that minimizers of a @xmath0-submodular function form a median semilattice ( lemma  3 ) . by a birkhoff - type representation theorem  @xcite for median semilattices ,",
    "the minimizer set is represented by a pip , where minimizers are encoded into special ideals in the pip , called _",
    "consistent ideals_. pips arising from @xmath0-submodular functions are rather special .",
    "we completely characterize such pips ( theorem  [ thm : closed_set_and_elementary_pip ] ) , which we call _",
    "elementary_. this representation is actually compact .",
    "we show that the size of the elementary pip for a @xmath0-submodular function of @xmath3 variables is @xmath4 ( proposition  [ prop : number_of_irreducibles ] ) .",
    "[ [ algorithmic - results . ] ] algorithmic results .",
    "+ + + + + + + + + + + + + + + + + + + +    we present algorithms to construct the elementary pip of the minimizers of a @xmath0-submodular function @xmath1 under the following three situations :    * a minimizing oracle of @xmath1 is given .",
    "* @xmath1 is network - representable .",
    "* @xmath1 arises from a potts energy function .    for ( i )",
    ", we show that the pip is obtained by calling the minimizing oracle @xmath5 time ( theorem  [ thm : alg_oracle ] ) .",
    "notice that a polynomial time algorithm to minimize @xmath0-submodular functions is not known for the value - oracle model but is known for the valued - csp model  @xcite .",
    "our result for ( i ) is applicable to such a case .    for ( ii ) ( and ( iii ) )",
    ", we consider an efficiently minimizable class of @xmath0-submodular functions considered in  @xcite , where a @xmath0-submodular function in this class is represented by the cut function in a network of @xmath4 vertices and can be minimized by a minimum - cut computation .",
    "we show that the pip is naturally obtained from the residual graph of a maximum flow in the network ( theorems  [ thm : network_algo ] and  [ thm : network_time ] ) .    for ( iii ) , we deal with a @xmath0-submodular function @xmath6 obtained from a @xmath0-label potts energy function @xmath7 by adding the @xmath8-label ( meaning `` non - labeled '' ) .",
    "such a @xmath0-submodular function , called _ potts @xmath0-submodular _ , is particularly useful in vision applications . indeed , via the _ persistency property _",
    "@xcite , a minimizer of @xmath9 ( an optimal labeling ) is partly recovered from a minimizer of the relaxation @xmath10 .",
    "kolmogorov  @xcite showed that a minimizer of a potts @xmath0-submodular function can be obtained by @xmath11 calls of a max - flow algorithm performed on a network of @xmath12 vertices .",
    "we show that the pip is also obtained in the same time complexity ( theorem  [ thm : potts ] ) . in showing this result ,",
    "we reveal an intriguing structure of the pip for a potts @xmath0-submodular function ( theorem  [ thm : pip_potts ] ) , and utilize results  @xcite from undirected multiflow theory .",
    "we also discuss enumeration aspects for minimizers .",
    "maximal minimizers , which are minimizers with a maximal number of nonzero components , are of particular interest from the view of partial optimal labeling . for a potts @xmath0-submodular function ,",
    "we show that the problem of enumerating all maximal minimizers reduces to the problem of enumerating all ideals of a single poset ( theorem  [ thm : enumeration_potts ] ) .",
    "this enables us to use an existing fast enumeration algorithm , and leads to a practical algorithm enumerating all maximal partial optimal labeling in actual computer vision problems .",
    "we present experimental results for real instances of stereo matching problems .",
    "[ [ organization . ] ] organization .",
    "+ + + + + + + + + + + + +    the rest of this paper is organized as follows . in section  [ sec : preliminaries ] , we give preliminaries including a birkhoff - type representation theorem between pips and median semilattices . in section  [ sec :",
    "structure ] , we prove the above structural results . in section  [ sec : algorithms ] , we prove the algorithmic results",
    ". finally , in section  [ sec : application ] , we describe applications and present experimental results .",
    "for a nonnegative integer @xmath3 , we denote @xmath13 by @xmath14}}$ ] ( with @xmath15 } } \\defeq \\varnothing$ ] ) . for a subset @xmath16 of an ordered set , let @xmath17 denote the minimum element in @xmath16 ( if it exists ) .",
    "let @xmath18 be the set of real numbers and @xmath19 .",
    "for a function @xmath1 from a set @xmath20 to @xmath21 , a _ minimizer _ of @xmath1 is an element @xmath22 that satisfies @xmath23 for all @xmath24 .",
    "the set of minimizers of @xmath1 is simply called the _ minimizer set _ of @xmath1 .",
    "we assume that posets are always finite , and assume the standard notions of lattice theory , such as join @xmath25 and meet @xmath26 .",
    "let @xmath0 be a positive integer .",
    "let @xmath27 denote @xmath28 .",
    "the partial order @xmath29 on @xmath27 is defined by @xmath30 if and only if @xmath31 for each @xmath32 .",
    "consider the @xmath3-product @xmath33 of @xmath27 , where the partial order on @xmath33 is defined as the direct product of @xmath29 and is also denoted by @xmath29 . in this way , @xmath33 and its subsets are regarded as posets . for @xmath34 , the _ support _ of @xmath35 is the subset of indices @xmath36}}$ ] with nonzero @xmath37 , and is denoted by @xmath38 : @xmath39}}}\\mathrel{}\\middle|\\mathrel{}{x_i \\neq 0}\\right\\}}.\\end{aligned}\\ ] ]    a _",
    "@xmath0-submodular function _",
    "@xcite is a function @xmath40 satisfying the following inequality @xmath41 for all @xmath42 . here",
    "the binary operation @xmath43 on @xmath33 is given by @xmath44 for every @xmath42 and @xmath36}}$ ] .",
    "the operation @xmath45 in is dually defined by changing @xmath46 to @xmath47 in .    besides its recent introduction , a @xmath0-submodular function seems to be recognized when bouchet  @xcite introduced _",
    "multimatroids_. indeed , a @xmath0-submodular function is a direct generalization of the rank function of a multimatroid , and was suggested by fujishige  @xcite in 1995 as a _",
    "multisubmodular function_.    it is not known whether @xmath0-submodular functions for @xmath48 can be minimized in polynomial time on the standard oracle model",
    ". however , some special classes of @xmath0-submodular functions are efficiently minimizable .",
    "for example , kolmogorov  thapper  ivn  @xcite showed that a sum of low - arity @xmath0-submodular functions can be minimized in polynomial time , where the _ arity _ of a function is the number of variables . a nonnegative combination of binary _ basic @xmath0-submodular functions _",
    ", introduced by iwata  wahlstrm  yoshida  @xcite , can be minimized by computing a minimum @xmath49-cut on a directed network ; see section  [ sec : network ] .    a nonempty subset of @xmath33 is said to be",
    "_ @xmath50-closed _ if it is closed under the operations @xmath43 and @xmath45 . from  , the following obviously holds .",
    "the minimizer set of a @xmath0-submodular function is @xmath50-closed .",
    "a key tool for providing a compact representation for @xmath50-closed sets is a correspondence between median semilattices and pips , which was established by barthlemy ",
    "constantin  @xcite .",
    "a recent paper  @xcite also contains an exposition of this correspondence .    a _ median semilattice _",
    "@xcite is a meet - semilattice @xmath51 satisfying following conditions :    ms    every principal ideal is a distributive lattice .    for all @xmath52 , if @xmath53 and @xmath54 exist , then @xmath55 exists in @xmath56",
    ".    note that every distributive lattice is a median semilattice .",
    "an element of @xmath56 is said to be _ join - irreducible _ if it is not minimum and is not represented as the join of other elements .",
    "let @xmath57 denote the set of join - irreducible elements of @xmath56 .",
    "next we introduce a _ poset with inconsistent pairs ( pip)_. a pip  @xcite is a poset @xmath58 endowed with an additional symmetric relation @xmath59 satisfying the following conditions :    ic    for all @xmath60 with @xmath61 , there is no @xmath62 with @xmath63 and @xmath64 .    for all @xmath65 , if @xmath66 and @xmath67 , then @xmath61 .",
    "a pip is also denoted by a triple @xmath68 .",
    "the relation @xmath59 is called an _ inconsistent relation_. each unordered pair @xmath69 of @xmath70 is called _ inconsistent _ if @xmath61 .",
    "note that every inconsistent pair of @xmath70 is incomparable and has no common upper bound in @xmath70 .",
    "an inconsistent pair @xmath69 of @xmath70 is said to be _ minimally inconsistent _ if @xmath71 , @xmath72 and @xmath67 imply @xmath73 and @xmath74 for all @xmath75 .",
    "if @xmath69 is minimally inconsistent , the @xmath61 is particularly denoted by @xmath76 .",
    "we can easily check the following properties of the minimally inconsistent relation :    mic    for all @xmath60 with @xmath76 , there is no @xmath62 with @xmath63 and @xmath64 .    for all @xmath65 with @xmath71 and @xmath72 , if @xmath77 and @xmath76 , then @xmath78 and @xmath79 .",
    "actually , pips can also be defined as a triplet @xmath80 , where @xmath81 is a binary symmetric relation on a poset @xmath58 satisfying the conditions ( mic1 ) and ( mic2 ) . in this definition , the inconsistent relation @xmath59 on @xmath70 is obtained by @xmath82 for every @xmath60 . since both definitions of pips are equivalent , we will use a convenient one .    for a pip @xmath70",
    ", an ideal of @xmath70 is said to be _ consistent _ if it contains no ( minimally ) inconsistent pair .",
    "let @xmath83 denote the family of consistent ideals of @xmath70 .",
    "regard @xmath83 as a poset with respect to the inclusion order @xmath84 .",
    "\\(a ) at ( 0 , 0 ) ; ( b ) at ( 2 , 0 ) ; ( c ) at ( 1 , 1 ) ; ( p ) at ( 0.4 , 1 ) @xmath85 ; ( d ) at ( 4 , 0 ) ; ( e ) at ( 4 , 1 ) ; ( q ) at ( 4.6 , 1 ) @xmath86 ; ( f ) at ( 0 , 2 ) ; ( g ) at ( 2.5 , 2 ) ; ( r ) at ( 2.5 , 2.4 ) @xmath87 ; / n a / c , b / c , d / e , c / f , c / g , e / g ( )  ( ) ; ( c ) to ( e ) ; ( e ) to ( f ) ;    \\(a ) at ( 0 , 0 ) ; ( b ) at ( 2 , 0 ) ; ( c ) at ( 1 , 1 ) ; ( d ) at ( 4 , 0 ) ; ( p ) at ( 4.6 , 0 ) @xmath85 ; ( e ) at ( 4 , 1 ) ; ( qr ) at ( 5.1 , 1 ) @xmath88 ; ( f ) at ( 0 , 2 ) ; / n a / c , b / c , d / e , c / f ( )  ( ) ; ( c ) to ( e ) ; ( d ) to [ bend right=40 ] ( e ) ; ( e ) to ( f ) ;    \\(a ) at ( 0 , 0 ) ; ( b ) at ( 2 , 0 ) ; ( c ) at ( 1 , 1 ) ; ( d ) at ( 4 , 0 ) ; ( e ) at ( 4 , 1 ) ; ( f ) at ( 0 , 2 ) ; / n a / c , b / c , d / e , c / f ( )  ( ) ; ( c ) to ( e ) ; ( e ) to ( f ) ;    \\(a ) at ( 0 , 0 ) ; ( b ) at ( 2 , 0 ) ; ( p ) at ( 1.4 , 0 ) @xmath89 ; ( c ) at ( 1 , 1 ) ; ( p ) at ( 0.4 , 1 ) @xmath85 ; ( d ) at ( 4 , 0 ) ; ( p ) at ( 4.65 , 0 ) @xmath90 ; ( e ) at ( 4 , 1 ) ; ( p ) at ( 4.65 , 1 ) @xmath86 ; ( f ) at ( 0 , 2 ) ; / n a / c , b / c , d / e , c / f ( )  ( ) ; ( b ) to ( d ) ;    \\(a ) at ( 0 , 0 ) ; ( b ) at ( 2 , 0 ) ; ( c ) at ( 1 , 1 ) ; ( d ) at ( 4 , 0 ) ; ( e ) at ( 4 , 1 ) ; ( f ) at ( 0 , 2 ) ; / n a / c , b / c , d / e , c / f ( )  ( ) ; / n b / e , d / c , d / f , c / e , e / f ( )  ( ) ; ( b ) to ( d ) ;    figure  [ fig : pip ] shows examples of pips and non - pip structures .",
    "solid arrows indicate the orders between elements ( drawn from higher elements to lowers ) .",
    "dotted lines and dashed lines indicate the inconsistent relations . in ( a ) ,",
    "( b ) and ( d ) , labeled elements indicate where the violations of ( ic1 ) and ( ic2 ) are . in ( c ) and ( e ) , the minimally inconsistent relations are drawn by dashed lines .    the following theorem establishes a one - to - one correspondence between median semilattices and pips .",
    "[ thm : median_semilattice_and_pip ]    1 .",
    "let @xmath51 be a median semilattice and @xmath59 a symmetric binary relation on @xmath56 defined by @xmath91 for every @xmath92 .",
    "then @xmath93 forms a pip with inconsistent relation @xmath59 .",
    "the consistent ideal family @xmath94 is isomorphic to @xmath56 , and an isomorphism is given by @xmath95 .",
    "2 .   let @xmath70 be a pip .",
    "the consistent ideal family @xmath83 forms a median semilattice .",
    "the pip @xmath96 obtained in the same way as ( 1 ) is isomorphic to @xmath70 .",
    "the latter part of theorem  [ thm : median_semilattice_and_pip ]  ( 2 ) is implicit in  @xcite , and follows from theorem  [ thm : median_semilattice_and_pip ]  ( 1 ) and the fact that for pips @xmath70 and @xmath97 , if @xmath83 and @xmath98 are isomorphic , then @xmath70 and @xmath97 are also isomorphic  @xcite .",
    "[ lem : pip_and_cnf ] a pip is an alternative expression of a satisfiable boolean 2-cnf , where consistent ideals correspond to true assignments . indeed , for a pip @xmath68 with @xmath99}}$ ] ,",
    "consider the following 2-cnf of boolean variables",
    "@xmath100 : @xmath101 then an assignment @xmath102 is true if and only if the set of elements @xmath103 with @xmath104 is a consistent ideal . the reverse construction of a pip from a 2-cnf satisfiable at @xmath105 is also easily verified .",
    "the starting point for a compact representation for @xmath50-closed sets is the following .    [",
    "lem : closed_set_is_median_semilattice ] every @xmath50-closed set is a median semilattice .",
    "let @xmath106 be a @xmath50-closed set .",
    "then @xmath107 is a semilattice since @xmath33 is a semilattice with minimum element @xmath108 , and the operator @xmath43 coincides with @xmath26 on @xmath33 .",
    "we show that @xmath107 satisfies the conditions ( ms1 ) and ( ms2 ) .",
    "let @xmath109 be the principal ideal of @xmath110 . for all @xmath111 and @xmath36}}$ ] , @xmath112 is equal to either 0 or @xmath37 .",
    "therefore , for all @xmath113 , the join @xmath114 exists and it holds @xmath115 .",
    "next let @xmath116}}}}$ ] be an injection defined by @xmath117 for every @xmath111 .",
    "one can easily see that @xmath118 and @xmath119 for every @xmath113 .",
    "in other words , @xmath120 is an isomorphism from @xmath121 to @xmath122 . since any nonempty subset of @xmath123}}}$ ] closed under @xmath124 and @xmath125 is a distributive lattice ordered by inclusion , @xmath109 is also distributive .",
    "let @xmath126 be such that the join of any two of them exists in @xmath107 .",
    "since @xmath127 and @xmath128 are comparable for any @xmath36}}$ ] , the join @xmath55 exists in @xmath33 , and coincides with @xmath129",
    ". finally since @xmath107 is closed under @xmath45 , the join @xmath55 belongs to @xmath107 .",
    "let @xmath59 be a symmetric binary relation on @xmath33 defined by @xmath130 for every @xmath42 .",
    "note that if @xmath131 then @xmath132 is equal to @xmath133 for every @xmath134 . from theorem  [ thm : median_semilattice_and_pip ]  ( 1 ) and lemma  [ lem : closed_set_is_median_semilattice ] , we obtain the following .",
    "[ thm : closed_set_and_pip ] let @xmath107 be a @xmath50-closed set",
    ". then @xmath135 forms a pip with inconsistent relation @xmath59 .",
    "the consistent ideal family @xmath136 is isomorphic to @xmath107 , and the isomorphism is given by @xmath137 .",
    "\\(000 ) at ( 0 , 0 ) 00002 ; ( 100 ) at ( -1 , 1 ) 13002 ; ( 001 ) at ( 1 , 1 ) 00012 ; ( 110 ) at ( -1.5 , 2 ) 13102 ; ( 101 ) at ( -0.5 , 2 ) 13012 ; ( 120 ) at ( 0.5 , 2 ) 13202 ; ( 031 ) at ( 1.5 , 2 ) 00312 ; ( 111 ) at ( -1.5 , 3 ) 13112 ; ( 121 ) at ( -0.5 , 3 ) 13212 ; ( 131 ) at ( 0.5 , 3 ) 13312 ; ( 231 ) at ( 1.5 , 3 ) 22312 ; / n 000/100 , 000/001 , 100/110 , 100/101 , 100/120 , 001/101 , 001/031 , 110/111 , 101/111 , 101/121 , 101/131 , 120/121 , 031/131 , 031/231 ( )  ( ) ;    \\(100 ) at ( -1 , 0.5 ) 13002 ; ( 110 ) at ( -1.5 , 1.5 ) 13102 ; ( 120 ) at ( -0.5 , 1.5 ) 13202 ; ( 001 ) at ( 1 , 0 ) 00012 ; ( 031 ) at ( 1 , 1 ) 00312 ; ( 231 ) at ( 1 , 2 ) 22312 ; / n 100/110 , 100/120 , 001/031 , 031/231 ( )  ( ) ; /",
    "n 110/120 , 120/031 , 100/231 ( )  ( ) ; ( 110 ) to [ bend right=17 ] ( 031 ) ;    figure  [ fig : example_of_closed_set_and_pip ] shows an example of a @xmath138-closed set and the corresponding pip . in ( a )",
    ", elements surrounded by double - lined frames are join - irreducible . in ( b ) , only minimally inconsistent relations are drawn .    from theorem  [ thm :",
    "closed_set_and_pip ] , it will turn out that the set @xmath139 of join - irreducible elements of every @xmath50-closed set @xmath107 does not lose any information about the structure of @xmath107 .",
    "that is , non - minimum elements in @xmath107 can be obtained as the join of one or more join - irreducible elements of @xmath107 ( notice that we can not obtain the minimum element of @xmath107 in this way ) .",
    "therefore we call @xmath135 a _ pip - representation _ of @xmath107 .",
    "furthermore , the following proposition , which will be proved in section  [ sec : proof_of_theorem_1 ] , says that this representation is actually compact .",
    "[ prop : number_of_irreducibles ] let @xmath107 be a @xmath50-closed set on @xmath33 .",
    "the number of join - irreducible elements of @xmath107 is at most @xmath140 .",
    "theorem  [ thm : closed_set_and_pip ] states that any @xmath50-closed set can be represented by a pip . however , not all pips correspond to some @xmath50-closed sets .",
    "a natural question then arises : _ what class of pips represents @xmath50-closed sets ? _ the main result ( theorem  [ thm : closed_set_and_elementary_pip ] ) of this section answers this question .",
    "[ def : elementary ] a pip @xmath58 is called _ elementary _ if it satisfies the following conditions :    ep    @xmath70 is the disjoint union of @xmath141 such that every pair @xmath142 of distinct elements is minimally inconsistent if and only if @xmath143 for some @xmath36}}$ ] .    for any distinct @xmath144}}$ ] , if @xmath145 and @xmath146 , there is no element @xmath147 with @xmath148 .    for any distinct @xmath144}}$ ] , if @xmath145 and @xmath149 , either of the following holds :    ep    every pair of @xmath147 and @xmath150 is not comparable .",
    "there exist @xmath151 and @xmath152 such that @xmath153 and @xmath154 for all @xmath155 and @xmath156 .",
    "\\(01 ) at ( 0 , 0 ) ; ( 02 ) at ( 1 , 0 ) ; ( 03 ) at ( 2 , 0 ) ; ( 10 ) at ( 0 , 1 ) ; ( 10 )  ( 01 ) ; ( 01 )  ( 02 ) ; ( 02 )  ( 03 ) ; ( 01.south east ) to [ bend right=25 ] ( 03.south west ) ;    \\(01 ) at ( 0 , 1 ) ; ( 02 ) at ( 1 , 1 ) ; ( 03 ) at ( 2 , 1 ) ; ( 10 ) at ( 0 , 0 ) ; ( 01 )  ( 10 ) ; ( 01 )  ( 02 ) ; ( 02 )  ( 03 ) ; ( 01.north east ) to [ bend left=25 ] ( 03.north west ) ;    \\(10 ) at ( 0 , 0 ) ; ( 20 ) at ( 1 , 0 ) ; ( 30 ) at ( 2 , 0 ) ; ( 01 ) at ( 0 , 1 ) ; ( 02 ) at ( 1 , 1 ) ; ( 03 ) at ( 2 , 1 ) ; ( 01 )  ( 10 ) ; ( 02 )  ( 20 ) ; ( 03 )  ( 30 ) ; ( 01 )  ( 02 ) ; ( 02 )  ( 03 ) ; ( 01.north east ) to [ bend left=25 ] ( 03.north west ) ; ( 10 )  ( 20 ) ; ( 20 )  ( 30 ) ; ( 10.south east ) to [ bend right=25 ] ( 30.south west ) ;    \\(10 ) at ( 0 , 0 ) ; ( x ) at ( -0.5 , 0.05 ) @xmath157 ; ( 02 ) at ( -0.5 , 1 ) ; ( 03 ) at ( 0.5 , 1 ) ; ( 01 ) at ( 2 , 0 ) ; ( x ) at ( 2.5 , 0.05 ) @xmath158 ; ( 20 ) at ( 1.5 , 1 ) ; ( 30 ) at ( 2.5 , 1 ) ; ( 02 )  (",
    "10 ) ; ( 03 ) ",
    "( 10 ) ; ( 20 ) ",
    "( 01 ) ; ( 30 ) ",
    "( 01 ) ; ( 01 ) ",
    "( 03 ) ; ( 02 )  ( 03 ) ; ( 02 ) to [ bend right=10 ] ( 01 ) ; ( 10 )  ( 20 ) ; ( 20 )  ( 30 ) ; ( 10 ) to [ bend right=10 ] ( 30 ) ;    figure  [ fig : example_of_elementary_pip ] shows examples of elementary pips and non - elementary pips . in all diagrams ,",
    "the drawn pips satisfy the condition ( ep0 ) with @xmath159 .",
    "each element is colored black or white according to the corresponding part @xmath160 .",
    "non - minimally inconsistent relations are not drawn in each diagram .",
    "[ thm : closed_set_and_elementary_pip ]    1 .   for every @xmath50-closed set @xmath107 ,",
    "the pip @xmath135 is elementary .",
    "2 .   for every elementary pip @xmath70",
    ", there is a @xmath50-closed set @xmath107 isomorphic to @xmath83 .    in case of @xmath161 , since the condition ( ep2 ) in definition  [ def : elementary ] is equivalent to the skew - symmetricity of the corresponding hasse diagram , the pip - representation for @xmath50-closed sets coincides with the one by ando ",
    "fujishige  @xcite .",
    "the following corollary of theorem  [ thm : median_semilattice_and_pip ]  ( 2 ) and theorem  [ thm : closed_set_and_elementary_pip ]  ( 1 ) will be used in section  [ sec : algorithms ] .",
    "[ cor : elementary_pip ] let @xmath70 be a pip . if @xmath83 is isomorphic to some @xmath50-closed set , then @xmath70 is elementary .",
    "the remaining part of this section is devoted to proving theorem  [ thm : closed_set_and_elementary_pip ] .",
    "the proof of theorem  [ thm : closed_set_and_elementary_pip ]  ( 1 ) is outlined as follows :    1 .",
    "first we define the _ differential _ of a join - irreducible element @xmath35 as the difference between @xmath35 and the unique lower cover @xmath157 of @xmath35 .",
    "next we introduce a _",
    "@xmath50-closed set , which is a @xmath50-closed set such that every differential has exactly one nonzero component .",
    "we show that every @xmath50-closed set is isomorphic to some normalized @xmath50-closed set .",
    "this set gives us a natural partition of join - irreducible elements .",
    "finally we construct an elementary pip from the partition .",
    "a @xmath50-closed set @xmath107 is said to be _ simple _ if @xmath162 .",
    "any @xmath50-closed set can be converted to a simple @xmath50-closed set without any structural change .",
    "[ def : differential ] let @xmath106 be a simple @xmath50-closed set . for @xmath134",
    ", we say that @xmath163 is a _ lower cover _ of @xmath35 , or _",
    "@xmath35 covers @xmath163 _ , if @xmath164 and there is no @xmath165 such that @xmath166 .",
    "for a join - irreducible element @xmath167 , there uniquely exists @xmath168 covered by @xmath35 .",
    "the _ differential _ @xmath169 of @xmath35 is defined by @xmath170 if @xmath171 and @xmath172 if @xmath173 for each @xmath36}}$ ] .",
    "\\(000 ) at ( 0 , 0 ) 0000 ; ( 100 ) at ( -1 , 1 ) 1300 ; ( 001 ) at ( 1 , 1 ) 0001 ; ( 110 ) at ( -1.5 , 2 ) 1310 ; ( 101 ) at ( -0.5 , 2 ) 1301 ; ( 120 ) at ( 0.5 , 2 ) 1320 ; ( 031 ) at ( 1.5 , 2 ) 0031 ; ( 111 ) at ( -1.5 , 3 ) 1311 ; ( 121 ) at ( -0.5 , 3 ) 1321 ; ( 131 ) at ( 0.5 , 3 ) 1331 ; ( 231 ) at ( 1.5 , 3 ) 2231 ; / n 000/100 , 000/001 , 100/110 , 100/101 , 100/120 , 001/101 , 001/031 , 110/111 , 101/111 , 101/121 , 101/131 , 120/121 , 031/131 , 031/231 ( )  ( ) ;    \\(100 ) at ( -1 , 0.5 ) 1300 + _ 1300 _ ; ( 110 ) at ( -1.5 , 1.5 ) 1310 + _ 0010 _ ; ( 120 ) at ( -0.5 , 1.5 ) 1320 + _ 0020 _ ; ( 001 ) at ( 1 , 0 ) 0001 + _ 0001 _ ; ( 031 ) at ( 1 , 1 ) 0031 + _",
    "0030 _ ; ( 231 ) at ( 1 , 2 ) 2231 + _ 2200 _ ; / n 100/110 , 100/120 , 001/031 , 031/231 ( )  ( ) ; / n 110/120 , 120/031 , 100/231 ( )  ( ) ; ( 110 ) to [ bend right=20 ] ( 031 ) ;    \\(000 ) at ( 0 , 0 ) 000 ; ( 100 ) at ( -1 , 1 ) 100 ; ( 001 ) at ( 1 , 1 ) 001 ; ( 110 ) at ( -1.5 , 2 ) 110 ; ( 101 ) at ( -0.5 , 2 ) 101 ; ( 120 ) at ( 0.5 , 2 ) 120 ; ( 031 ) at ( 1.5 , 2 ) 031 ; ( 111 ) at ( -1.5 , 3 ) 111 ; ( 121 ) at ( -0.5 , 3 ) 121 ; ( 131 ) at ( 0.5 , 3 ) 131 ; ( 231 ) at ( 1.5 , 3 ) 231 ; / n 000/100 , 000/001 , 100/110 , 100/101 , 100/120 , 001/101 , 001/031 , 110/111 , 101/111 , 101/121 , 101/131 , 120/121 , 031/131 , 031/231 ( )  ( ) ;    \\(100 ) at ( -1 , 0.5 ) 100 + _ 100 _ ; ( 110 ) at ( -1.5 , 1.5 ) 110 + _ 010 _ ; ( 120 ) at ( -0.5 , 1.5 ) 120 + _ 020 _ ; ( 001 ) at ( 1 , 0 ) 001 + _ 001 _ ; ( 031 ) at ( 1 , 1 ) 031 + _ 030 _ ; ( 231 ) at ( 1 , 2 ) 231 + _ 200 _ ; / n 100/110 , 100/120 , 001/031 , 031/231 ( )  ( ) ; / n 110/120 , 120/031 , 100/231 ( )  ( ) ; ( 110 ) to [ bend right=20 ] ( 031 ) ;    figure  [ fig : example_of_differential_and_normalizing ]  ( a ) and ( b ) show examples of a simple @xmath50-closed set and the corresponding pip , respectively . in ( b",
    ") , the differential of each join - irreducible element is written in italics .",
    "we show some properties about differentials . in what follows",
    ", we denote the subset @xmath174 by @xmath175 for @xmath36}}$ ] and @xmath176}}$ ] .",
    "note that @xmath175 also forms a @xmath50-closed set if @xmath177 .",
    "[ lem : differential ] let @xmath106 be a simple @xmath50-closed set .",
    "the following hold :    1 .",
    "for every @xmath36}}$ ] and @xmath176}}$ ] with @xmath177 , @xmath178 is join - irreducible in @xmath107 and @xmath179 holds .",
    "2 .   for every @xmath167 and @xmath36}}$ ] with @xmath180",
    ", it holds @xmath181 .",
    "3 .   for every @xmath36}}$ ] and",
    "@xmath176}}$ ] , there is at most one join - irreducible element @xmath167 such that @xmath179 .",
    "4 .   for every @xmath167",
    ", the differential @xmath182 of @xmath35 has at least one nonzero components .",
    "the map @xmath183 is an injection from @xmath139 to @xmath33 .",
    "let @xmath36 } } { , \\;}\\alpha \\in { { \\left[{k}\\right]}}$ ] and @xmath178 .",
    "suppose to the contrary that @xmath184 .",
    "then there exist @xmath185 such that @xmath186 and @xmath187 . since @xmath188 , either @xmath112 or @xmath128 is equal to @xmath189 .",
    "this contradicts the assumption that @xmath181 and @xmath186 .",
    "hence @xmath35 is join - irreducible .",
    "moreover , from definition  [ def : differential ] , it holds @xmath179 .",
    "let @xmath167 and @xmath36}}$ ] such that @xmath180 .",
    "then @xmath190 . let @xmath163 be the minimum element of @xmath175 .",
    "if @xmath191 , definition  [ def : differential ] contradicts @xmath192 .",
    "hence we have @xmath193 .",
    "suppose that @xmath107 has a join - irreducible element @xmath167 such that @xmath179 . from ( 2 )",
    ", it holds @xmath181 .",
    "this lemma follows from the uniqueness of the minimum element of @xmath175 .",
    "assume that @xmath107 has a join - irreducible element @xmath35 such that @xmath194 .",
    "then for every @xmath195 , there exists @xmath196 such that @xmath197 .",
    "thus the join of @xmath198 is equal to @xmath35 .",
    "this contradicts the assumption that @xmath35 is join - irreducible .",
    "let @xmath199 such that @xmath200 .",
    "since @xmath201 from ( 4 ) , there exists @xmath36}}$ ] such that @xmath202 .",
    "then @xmath203 follows from ( 3 ) .",
    "now proposition  [ prop : number_of_irreducibles ] is a consequence of lemma  [ lem : differential ] .",
    "it suffices to consider the case where @xmath107 is simple . from lemmas  [ lem : differential ]  ( 3 ) and ( 4 ) , it holds @xmath204 .",
    "furthermore , since the map @xmath205 is injective , we have @xmath206 .",
    "hence @xmath207 is at most @xmath140 .",
    "a simple @xmath50-closed set @xmath107 is said to be _",
    "normalized _ if it satisfies @xmath208 for all @xmath167 .",
    "examples of a normalized @xmath50-closed set and the corresponding pip are shown in figure  [ fig : example_of_differential_and_normalizing ]  ( c ) and ( d ) , respectively .",
    "[ lem : normalized_is_general ] for any @xmath50-closed set @xmath107 , there exists a normalized @xmath50-closed set that is isomorphic to @xmath107 .",
    "we can suppose that @xmath107 is simple .",
    "we first show :    1 .   for @xmath199",
    ", it holds that @xmath209 or @xmath210 .",
    "assume that @xmath107 has a join - irreducible element @xmath35 such that @xmath211 and @xmath212 for distinct @xmath144}}$ ] .",
    "if there exists @xmath213 such that @xmath214 and @xmath215 , it holds @xmath216 from lemma  [ lem : differential ]  ( 3 ) .",
    "hence we have @xmath217 since @xmath218 . however , @xmath35 and @xmath133 belong to @xmath219 since @xmath220 , thus it holds @xmath221 from lemma  [ lem : differential ]  ( 2 ) .",
    "this is a contradiction .    by ( 1 ) , we can define an equivalence relation @xmath222 over the index set @xmath223}}}\\mathrel{}\\middle|\\mathrel{}{\\text{there exists $ x \\in { { m}^\\mathrm{ir}}$ such that $ x_i \\neq 0$}}\\right\\ } }    \\end{aligned}\\ ] ] as follows : @xmath224 then each equivalence class can be `` contracted '' into a single index without any structural change of @xmath107 as follows .",
    "let @xmath225 be the set of equivalence classes .",
    "for @xmath226}}$ ] , let @xmath227 be the set of join - irreducible elements having nonzero support @xmath228 .",
    "then , by lemma  [ lem : differential ] ,    1 .   for every @xmath110 and @xmath229}}$ ] , either @xmath230 for all @xmath231 or there uniquely exists @xmath232}}$ ] such that @xmath233 for all @xmath231 .    let @xmath234 } k_j$ ] .",
    "define @xmath235 by @xmath236 if @xmath230 for @xmath231 , and @xmath237 if @xmath238 for @xmath231 .",
    "it is easily verified ( from lemma  [ lem : differential ] ) that the map @xmath120 is injective and preserves @xmath29 .",
    "an irreducible element of @xmath239 is the image of an irreducible element of @xmath107 , and , by construction , has the differential of a singleton support .",
    "thus @xmath239 is a normalized @xmath50-closed set .",
    "now we are ready to prove theorem  [ thm : closed_set_and_elementary_pip ]  ( 1 ) .    by lemma  [ lem : normalized_is_general ] , it suffices to consider the case where @xmath107 is normalized . for every @xmath36}}$ ] , let @xmath240 . from the definition of normalized @xmath50-closed sets",
    ", @xmath241 forms a partition of @xmath139 ( note that @xmath242 may be empty ) .",
    "we show that the pip @xmath243 satisfies the axiom of elementary pips with @xmath244 for every @xmath36}}$ ] .",
    "( ep0 , `` only if '' part ) .",
    "let @xmath245 be a minimally inconsistent pair .",
    "then there exists @xmath36}}$ ] such that @xmath246 .",
    "we show @xmath247 .",
    "suppose that @xmath248 . from definition  [ def : differential ] , there exists @xmath249 such that @xmath250 and @xmath251 .",
    "now we have @xmath250 and @xmath252 , which contradict the assumption that @xmath35 and @xmath163 are minimally inconsistent .",
    "therefore @xmath211 holds , and we can show @xmath214 in the same way . thus @xmath253 holds .",
    "( ep1 ) is an immediate consequence of the following property :    * let @xmath144}}$ ] be distinct . if there exist @xmath254 and @xmath255 such that @xmath256 , then for all @xmath257 , there exists @xmath258 such that @xmath259 ; in particular @xmath260 if @xmath261 .",
    "we show ( @xmath262 ) .",
    "let @xmath254 and @xmath255 such that @xmath256 .",
    "now it holds @xmath263 and @xmath264 .",
    "let @xmath257 .",
    "we have @xmath265 since @xmath266 .",
    "thus @xmath267 does not hold .",
    "we show that @xmath268 .",
    "if not , @xmath269 is equal to @xmath270 , hence @xmath133 belongs to @xmath271 .",
    "therefore it holds @xmath267 since @xmath163 is the minimum element of @xmath271 from lemma  [ lem : differential ]  ( 2 ) .",
    "we have a contradiction here .",
    "let @xmath272 .",
    "this @xmath158 belongs to @xmath273 from lemma  [ lem : differential ]  ( 1 ) , and it holds @xmath274 .",
    "let @xmath144}}$ ] be distinct indices such that @xmath275 and @xmath276 .",
    "we can assume that ( ep2 - 1 ) does not hold , i.e. , there exist @xmath254 and @xmath255 such that @xmath256 .",
    "consider @xmath277 . by ( @xmath262 ) , there exist @xmath278 such that @xmath279 and @xmath280 .",
    "we show @xmath281 .",
    "suppose not . since @xmath279 and @xmath282 , we can take @xmath283 such that @xmath284 by ( @xmath262 ) with changing the role of @xmath285 and @xmath286 .",
    "now we have @xmath287 , which contradicts @xmath288 . therefore @xmath158 and @xmath289 are same elements .",
    "consequently , the required element @xmath290 in ( ep2 - 2 ) is given by @xmath158 . by changing the role of @xmath285 and @xmath286",
    ", we see that @xmath291 is given by @xmath157 .",
    "( ep0 , `` if '' part ) .",
    "let @xmath292 be distinct with @xmath36}}$ ] .",
    "now since @xmath293 , there exists a minimally inconsistent pair @xmath294 such that @xmath295 and @xmath296 . from the `` only if '' part of ( ep0 ) , @xmath157 and @xmath158 belong to @xmath273 for some @xmath297}}$ ] . if @xmath298 , then we have @xmath292 , @xmath299 , @xmath250 and @xmath300 , which contradict ( ep2 ) .",
    "hence @xmath301 and it must hold @xmath302 .",
    "let @xmath68 be an elementary pip with partition @xmath303 of condition ( ep0 ) .",
    "for every @xmath36}}$ ] , let @xmath304 , where @xmath305 .",
    "let @xmath306 } } } k_i$ ] .",
    "for a consistent ideal @xmath109 , let @xmath307 be defined by @xmath308}}}\\right)}.\\end{aligned}\\ ] ] now @xmath309 is well - defined since every consistent ideal @xmath109 of @xmath70 has at most one element in each @xmath160 by ( ep0 ) .",
    ". then @xmath83 and @xmath107 are clearly isomorphic .",
    "therefore the rest of the proof of theorem  [ thm : closed_set_and_elementary_pip ]  ( 2 ) is to show that @xmath107 forms a @xmath50-closed set .",
    "we define binary operations @xmath43 and @xmath45 on @xmath83 as @xmath311 and @xmath312 for every @xmath313 .",
    "theorem  [ thm : closed_set_and_elementary_pip ]  ( 2 ) follows immediately from :    [ lem : consistent_ideal_family_of_p_is_closed ] for every @xmath313 , it holds @xmath314 , @xmath315 and @xmath316 .",
    "let @xmath313 .",
    "since the consistent ideal family of a pip is closed under the intersection , @xmath317 also forms a consistent ideal of @xmath70 .",
    "in addition , we can easily check that @xmath315 holds .",
    "next we consider @xmath318 .",
    "we show that @xmath318 is a consistent ideal .",
    "suppose that @xmath318 is not an ideal of @xmath70 .",
    "there exist @xmath319 and @xmath320 such that @xmath321 .",
    "without loss of generality , we assume @xmath322 .",
    "now @xmath109 also contains @xmath85 since @xmath109 is an ideal .",
    "let @xmath144}}$ ] such that @xmath323 and @xmath324 .",
    "we can take @xmath325 since @xmath326 .",
    "thus @xmath327 is greater than 1 , and @xmath328 is also greater than 1 since @xmath321 contradicts the condition ( ep1 ) if @xmath329 . from ( ep2 - 2 ) , there exists @xmath330 such that @xmath331 .",
    "it holds @xmath332 since @xmath333 .",
    "now we have @xmath334 , @xmath322 , @xmath332 and @xmath335 .",
    "this contradicts @xmath319 .",
    "therefore @xmath318 is an ideal .",
    "finally suppose that @xmath318 includes an inconsistent pair @xmath69 .",
    "since @xmath318 is an ideal , it also includes the minimally inconsistent pair @xmath336 with @xmath71 and @xmath72 . from",
    "( ep0 ) , @xmath89 and @xmath90 belong to the same part @xmath160 of the partition .",
    "this contradicts the fact that @xmath337 , and thus @xmath318 is a consistent ideal .",
    "@xmath316 follows from the definitions of @xmath45 on @xmath33 and on @xmath83 .",
    "in this section , we study algorithmic aspects of constructing pip - representations for the minimizer sets of @xmath0-submodular functions .",
    "let @xmath338 denote the minimizer set of a function @xmath1 .",
    "let @xmath339 denote the time complexity of an algorithm of a maximum flow ( and a minimum cut ) in a network of @xmath3 vertices and @xmath340 edges .",
    "we assume a standard max - flow algorithm , such as preflow - push algorithm , and hence assume that @xmath339 is not less than @xmath341 ; notice that the current fastest one is an @xmath341 algorithm by orlin  @xcite .",
    "we also assume @xmath342 for dealing with @xmath0-submodular functions on @xmath33 .      we can obtain the pip - representation for the minimizer set of a @xmath0-submodular function @xmath40 by using a minimizing oracle @xmath0-sfm , which returns a minimizer of @xmath1 and its restrictions .",
    "let @xmath343 be the minimum value of @xmath1 .",
    "for @xmath36}}$ ] and @xmath344 , we define a new @xmath0-submodular function @xmath345 from @xmath1 by @xmath346 namely , @xmath347 is a function obtained by fixing the @xmath285-th variable of @xmath1 to @xmath348 .    before describing the main part of our algorithm",
    ", we present a subroutine in algorithm  [ alg : get_minimum_minimizer ] .",
    "this subroutine returns the minimum minimizer of a @xmath0-submodular function .",
    "the validity of this subroutine can be checked by the fact that @xmath349 is equal to @xmath343 if @xmath350 and otherwise it holds @xmath351 .",
    "this subroutine calls @xmath0-sfm at most @xmath352 times .",
    "a @xmath0-submodular function @xmath40 the minimum minimizer @xmath353 of @xmath1    algorithm  [ alg : get_irreducibles_minimizers ] shows a procedure to collect all join - irreducible minimizers of a @xmath0-submodular function .",
    "let @xmath35 be the minimum minimizer of @xmath1 .",
    "the function @xmath354 in algorithm  [ alg : get_irreducibles_minimizers ] is defined as @xmath355 for every @xmath356 . since @xmath357 is equal to @xmath112 if @xmath230 and to @xmath37 if @xmath358 , we can regard @xmath359 as a @xmath0-submodular function obtained by fixing each @xmath285-th variable of @xmath1 to @xmath37 if @xmath358 .",
    "note that the minimum values of @xmath1 and @xmath359 are the same .",
    "the correctness of this algorithm is based on lemma  [ lem : differential ]  ( 1 ) and ( 2 ) .",
    "namely , the set of join - irreducible minimizers of @xmath1 coincides with the set @xmath360 } } \\setminus { \\mathop{\\mathrm{supp}}}{x } { , \\;}\\alpha \\in { { \\left[{k}\\right ] } } { , \\;}\\min { { \\tilde{f}}_{{i},{\\alpha } } } = \\min f}\\right\\}}.\\end{aligned}\\ ] ] the algorithm collects each join - irreducible minimizer according to by calling at most @xmath361 times . consequently ,",
    "if a minimizing oracle is available , the minimizer set can also be obtained in polynomial time .",
    "[ thm : alg_oracle ] the pip - representation for the minimizer set of a @xmath0-submodular function @xmath40 is obtained by @xmath5 calls of @xmath0-sfm .    a @xmath0-submodular function @xmath40 the set @xmath362 of all join - irreducible minimizers of @xmath1      iwata  wahlstrm ",
    "yoshida  @xcite introduced _ basic @xmath0-submodular functions _ , which form a special class of @xmath0-submodular functions .",
    "they showed a reduction of the minimization problem of a nonnegative combination of binary basic @xmath0-submodular functions to the minimum cut problem on a directed network .",
    "we describe their method and present an algorithm to obtain the pip - representation for the minimizer set .",
    "let @xmath3 and @xmath0 be positive integers .",
    "we consider a directed network @xmath363 with vertex set @xmath364 , edge set @xmath365 and nonnegative edge capacity @xmath366 .",
    "suppose that @xmath364 consists of source @xmath367 , sink @xmath368 and other vertices @xmath369 , where @xmath36}}$ ] and @xmath176}}$ ] .",
    "let @xmath370 for @xmath36}}$ ] .",
    "an @xmath49-cut of @xmath371 is a subset @xmath16 of @xmath364 such that @xmath372 and @xmath373 .",
    "we call an @xmath49-cut @xmath16 _ legal _ if @xmath374 for every @xmath36}}$ ]",
    ". there is a natural bijection @xmath375 from @xmath33 to the set of legal @xmath49-cuts of @xmath371 defined by @xmath376 for an @xmath49-cut @xmath16 of @xmath371 , let @xmath377 denote the legal @xmath49-cut obtained by removing vertices in @xmath378 from @xmath16 for every @xmath36}}$ ] with @xmath379 .",
    "the _ capacity _",
    "@xmath380 of @xmath16 is defined as sum of capacities @xmath381 of all edges @xmath382 from @xmath16 to @xmath383 .",
    "we say that a network @xmath371 _ represents _ a function @xmath40 if it satisfies the following conditions :    nr    there exists a constant @xmath384 such that @xmath385 for all @xmath386 .",
    "it holds @xmath387 for all @xmath49-cuts @xmath16 of @xmath371 .    from ( nr1 ) , the minimum value of @xmath388 is equal to the capacity of a minimum @xmath49-cut of @xmath371 . for every minimum @xmath49-cut @xmath16 of @xmath371 ,",
    "@xmath377 is also a minimum @xmath49-cut since @xmath371 satisfies the condition ( nr2 ) .",
    "therefore @xmath389 is a minimizer of @xmath1 , and a minimum @xmath49-cut can be computed by maximum flow algorithms . indeed ,",
    "wahlstrm  yoshida  @xcite showed that nonnegative combinations of basic @xmath0-submodular functions are representable by such networks .",
    "now we shall consider obtaining the pip - representation for the minimizer set of a @xmath0-submodular function @xmath40 represented by a network @xmath371 .",
    "the minimizer set of @xmath1 is isomorphic to the family of legal minimum @xmath49-cuts of @xmath371 ordered by inclusion , where the isomorphism is @xmath375 .",
    "it is well - known that the family of ( not necessarily legal ) minimum @xmath49-cuts forms a distributive lattice .",
    "thus , by birkhoff representation theorem , the family is efficiently representable by a poset .",
    "queyranne  @xcite showed an algorithm to obtain the poset from the residual graph corresponding to a maximum @xmath49-flow of @xmath371 .",
    "we describe their theorem briefly . for an @xmath49-flow @xmath120 of @xmath371 , the _ residual graph _ corresponding to @xmath120",
    "is a directed graph @xmath390 , where @xmath391    [ thm : picard ] let @xmath363 be a directed network with @xmath392 and @xmath393 the residual graph corresponding to a maximum @xmath394-flow of @xmath371 .",
    "let @xmath395 be the set of strongly connected components ( sccs ) of @xmath393 other than the following :    sccs reachable from @xmath367 .",
    "sccs reachable to @xmath368 .",
    "let @xmath396 be a partial order on @xmath395 defined by @xmath397 for every @xmath398 .",
    "the ideal family of the poset @xmath399 is isomorphic to the family of minimum @xmath49-cuts of @xmath371 ordered by inclusion .",
    "the isomorphism @xmath400 is given by @xmath401 , where @xmath402 is the set of vertices reachable from @xmath367 .",
    "our result is the following .",
    "[ thm : network_algo ] let @xmath371 be a network representing a @xmath0-submodular function @xmath40 and @xmath393 the residual graph corresponding to a maximum @xmath394-flow of @xmath371 .",
    "let @xmath395 be the set of sccs of @xmath393 other than the following :    sccs reachable from @xmath367 .",
    "sccs reachable to @xmath368 .",
    "sccs reachable to an scc containing two or more elements in @xmath403 for some @xmath36}}$ ] .",
    "sccs reachable to sccs @xmath16 and @xmath404 such that @xmath405 and @xmath406 for some @xmath36}}$ ] .",
    "a partial order @xmath396 on @xmath395 is defined in the same way as theorem  [ thm : picard ] .",
    "let @xmath59 be a symmetric binary relation on @xmath395 defined as @xmath407}}$}.    \\end{aligned}\\ ] ] then @xmath395 forms an elementary pip with inconsistent relation @xmath59 .",
    "the consistent ideal family of @xmath395 is isomorphic to the minimizer set of @xmath1 , where the isomorphism is @xmath408 .",
    "first we prove that @xmath395 is a pip .",
    "we can see that @xmath59 satisfies the condition ( ic1 ) since for every @xmath398 with @xmath409 , an scc @xmath410 reachable to @xmath16 and @xmath404 does not belong to @xmath395 according to the above exclusion rule ( 4 ) . the condition ( ic2 )",
    "is also satisfied from the definition of the relation @xmath59 .",
    "thus @xmath395 forms a pip .",
    "next we show @xmath411 for every consistent ideal @xmath109 of @xmath395 .",
    "let @xmath412 be the poset given in theorem  [ thm : picard ] .",
    "note that @xmath395 is a subposet of @xmath412 .",
    "we show that @xmath109 is an ideal of @xmath412 .",
    "suppose not .",
    "then there exist @xmath413 and @xmath414 such that @xmath404 is reachable from @xmath16 and meets the above exclusion rules ( 3 ) or ( 4 ) .",
    "now since @xmath16 also satisfies the same exclusion rule , @xmath16 does not belong to @xmath395 .",
    "this is a contradiction .",
    "hence @xmath109 is an ideal of @xmath412 , and @xmath415 is a minimum @xmath49-cut ( theorem  [ thm : picard ] ) .",
    "moreover , from the exclusion rule ( 3 ) and the definition of @xmath59 , we can see that @xmath415 is legal .",
    "therefore @xmath416 is a minimizer of @xmath1 .",
    "conversely , let @xmath386 be a minimizer of @xmath1 . since @xmath417 is a minimum @xmath49-cut",
    ", @xmath418 is an ideal of @xmath412 ( theorem  [ thm : picard ] ) .",
    "suppose that @xmath419",
    ". then there exists @xmath420 which meets the exclusion rule ( 3 ) or ( 4 ) .",
    "suppose that @xmath16 meets the rule ( 3 ) . then @xmath16 is reachable to an scc @xmath404 such that @xmath421 for some @xmath36}}$ ] .",
    "now @xmath404 is not reachable to @xmath368 since @xmath16 is not reachable to @xmath368 .",
    "thus @xmath404 meets the rule ( 1 ) or belongs to @xmath109 otherwise . in either case",
    "it holds @xmath422 .",
    "this contradicts the fact that @xmath417 is legal .",
    "a similar argument can also be applied in the case where @xmath16 meets the rule ( 4 ) .",
    "therefore @xmath423 holds , and @xmath109 is an ideal of @xmath395 since @xmath395 is a subposet of @xmath412 .",
    "the consistency of @xmath109 is an immediate consequence of the fact that @xmath417 is legal .",
    "now we have shown that @xmath408 is a bijection from @xmath424 to @xmath338 .",
    "in addition , @xmath408 clearly preserves the orders , hence it is an isomorphism . finally from corollary  [ cor :",
    "elementary_pip ] , @xmath395 is elementary .",
    "consider the time complexity to obtain @xmath395 from the residual graph @xmath393 .",
    "first we can obtain the sccs of @xmath393 in @xmath425 time , where @xmath426 .",
    "additionally , the exclusion rules ( 1 ) , ( 2 ) and ( 3 ) can be applied to the sccs in the same time complexity .",
    "hence it is only the exclusion rule ( 4 ) that we should carefully take account of .",
    "an efficient algorithm is as follows : for each remaining scc @xmath16 , memorize the union of sccs reachable from @xmath16 , and if the union set has two or more elements in @xmath403 for some @xmath36}}$ ] , remove all sccs reachable to @xmath16 . by executing this process in reverse topological order , it can be done in @xmath427 time since the size of each memorized set is at most @xmath3 .",
    "therefore the time complexity for obtaining @xmath395 from @xmath393 is much less than the one for computing @xmath393 from the network @xmath371 .",
    "consequently , we obtain the following theorem :    [ thm : network_time ] let @xmath40 be a @xmath0-submodular function represented by a network @xmath371 with @xmath428 edges . the pip - representation for the minimizer set of @xmath1 is obtained in @xmath429 time .",
    "let @xmath430 be a connected undirected graph on vertex set @xmath431}}$ ] with @xmath432 , where each edge @xmath433 has a positive edge weight @xmath434 .",
    "let @xmath435}}$ ] be the set of labels .",
    "potts @xmath0-submodular function _ is a @xmath0-submodular function @xmath436 of the following form : @xmath437 where @xmath438 is any @xmath0-submodular function on @xmath27 for each @xmath36}}$ ] and @xmath439 is a @xmath0-submodular function on @xmath440 defined by @xmath441 for each @xmath442 .",
    "a potts @xmath0-submodular function is naturally associated with a _ potts energy function _ @xmath443}}^n}{\\setr}$ ] : @xmath444}}^n}\\right)},\\end{aligned}\\ ] ] where @xmath438 is any function on @xmath435}}$ ] for each @xmath36}}$ ] and @xmath445}}^2}{\\setr}$ ] is defined by @xmath446 if @xmath447 and @xmath448 if @xmath449 .    finding a labeling @xmath450}}^n$ ] of the minimum potts energy",
    "is np - hard for @xmath48 but particularly important in computer vision applications .",
    "useful information of optimal labelings of the potts energy can be extracted from a minimizer of a potts @xmath0-submodular function with appropriate @xmath0-submodular functions @xmath451 .",
    "define each @xmath451 by @xmath452 for @xmath176}}$ ] and @xmath453}}}\\::\\:{\\beta \\neq \\gamma } } } { \\left({{{g_i}{{\\mathopen{}\\mathclose\\bgroup\\left}({\\beta}{\\aftergroup\\egroup\\right } ) } } + { { g_i}{{\\mathopen{}\\mathclose\\bgroup\\left}({\\gamma}{\\aftergroup\\egroup\\right})}}}\\right)}/2 $ ] . in this case",
    ", @xmath10 is a _ @xmath0-submodular relaxation _ of @xmath9 , and an optimal labeling of @xmath9 is a partially recovered from a minimizer of @xmath9 ; see the next section .",
    "another choice of @xmath454 is : @xmath455 } } \\setminus { \\left\\{{\\alpha}\\right\\ } } } { { g_i}{{\\mathopen{}\\mathclose\\bgroup\\left}({\\beta}{\\aftergroup\\egroup\\right})}}}\\right)}/2 $ ] for @xmath176}}$ ] and @xmath456 .",
    "also in this case , a part of an optimal labeling is obtained from a minimizer of @xmath10 , and coincides with kovtun s partial labeling  @xcite .",
    "the goal of this section is to develop a fast algorithm to construct the pip of a potts @xmath0-submodular function @xmath10 .",
    "notice that @xmath10 is network - representable with @xmath457 edges  @xcite .",
    "therefore we can obtain a minimizer as well as the pip - representation for @xmath10 in @xmath458 time by the network construction in the previous section .",
    "however it is hard to apply this algorithm to the vision application with large @xmath459 in  @xcite .",
    "kolmogorov  @xcite developed an @xmath460-time algorithm to find a minimizer of @xmath10 .",
    "the main theorem in this section is a stronger result that the pip - representation is also obtained in the same time complexity .",
    "[ thm : potts ] the pip - representation for the minimizer set of @xmath10 is obtained in + @xmath460 time .",
    "the rest of this subsection is devoted to proving this theorem .",
    "first we construct a network @xmath371 , different from the one in the previous section . for each @xmath36}}$ ] , decompose @xmath451 as follows .",
    "let @xmath461 be defined by @xmath462 if @xmath463 and @xmath464 otherwise .",
    "choose a minimizer @xmath465 of @xmath451 .",
    "then @xmath451 is represented as @xmath466 } } } \\sigma_{i , \\alpha } { { 1_{=}}{{\\mathopen{}\\mathclose\\bgroup\\left}({\\alpha , x_i}{\\aftergroup\\egroup\\right})}},\\end{aligned}\\ ] ] where @xmath467 and @xmath468 for @xmath176}}$ ] .",
    "we remark that @xmath469 is nonnegative by @xmath0-submodularity , and that @xmath470 implies @xmath471 .",
    "let us construct @xmath371 .",
    "starting from @xmath430 , define the edge - capacity @xmath472 of each edge @xmath433 by @xmath434 .",
    "next add new vertices @xmath473 , called _",
    "terminals_. for each @xmath36}}$ ] , if @xmath470 with @xmath474}}$ ] , add a new edge @xmath475 of capacity @xmath476 .",
    "an edge @xmath475 is called a _ terminal edge_. for each @xmath176}}$ ] with @xmath477 , add a new vertices @xmath478 and new edge @xmath479 of capacity @xmath480 .",
    "a vertex @xmath478 is called the _",
    "@xmath189-fringe _ of @xmath285 .",
    "let @xmath481 .",
    "let @xmath482 be the set of all fringes , @xmath483 the set of all edges incident to fringes , and @xmath484 the set of all terminal edges .",
    "let @xmath485 and @xmath486 .",
    "let @xmath487 be the resulting network .",
    "second we show that @xmath10 is represented as a certain multicut function in @xmath371 . for a vertex subset @xmath16 ,",
    "the cut capacity @xmath380 of @xmath16 is the sum of @xmath381 of all edges @xmath382 between @xmath16 and @xmath383 . for @xmath176}}$ ] , a vertex subset @xmath16 is called an _ @xmath488-isolating cut _ or _ @xmath189-cut _ if @xmath489 , @xmath490 for @xmath491 } } \\setminus { \\left\\{{\\alpha}\\right\\}}$ ] , and @xmath16 contains no @xmath189-fringe .",
    "semi - multicut _ is an ordered partition @xmath492 of @xmath493 such that @xmath494 is an @xmath189-cut for each @xmath176}}$ ] .",
    "the _ capacity _",
    "@xmath495 of a semi - multicut @xmath496 is defined by @xmath497 } } } { { c}{{\\mathopen{}\\mathclose\\bgroup\\left}({x_\\alpha}{\\aftergroup\\egroup\\right})}}.\\end{aligned}\\ ] ] an _ admissible _ semi - multicut is a semi - multicut @xmath498 such that for each @xmath176}}$ ] , each @xmath189-fringe @xmath478 belongs to @xmath402 if @xmath499 and belongs to @xmath500 if @xmath501 for @xmath491 } } \\setminus { \\left\\{{\\alpha}\\right\\}}$ ] . observe that the part to which a fringe of @xmath36}}$ ] belongs is uniquely determined from the part which @xmath285 belongs .",
    "for an admissible semi - multicut @xmath496 , define @xmath502 by @xmath503 if and only if @xmath504 .",
    "this map @xmath505 is a bijection from the family of all admissible semi - multicuts to @xmath33 .",
    "the next lemma says that a @xmath0-submodular function @xmath10 is actually represented by capacities of admissible semi - multicuts .",
    "for any admissible multicut @xmath506 , it holds @xmath507 } } } { { \\tilde{g}_i}{{\\mathopen{}\\mathclose\\bgroup\\left}({\\gamma_i}{\\aftergroup\\egroup\\right})}}.    \\end{aligned}\\ ] ]    let @xmath508 .",
    "the capacity @xmath509 of a fringe edge @xmath479 contributes to @xmath495 by @xmath469 if @xmath510 and by @xmath8 otherwise .",
    "thus the contribution is equal to @xmath511 .",
    "the capacity @xmath512 of a terminal edge @xmath475 contributes to @xmath495 by @xmath8 if @xmath510 and by @xmath513 if @xmath514 , and by @xmath512 if @xmath501 with @xmath515 .",
    "thus the contribution is equal to @xmath516 .",
    "similarly , we verify that the contribution of the capacity @xmath434 of @xmath433 is equal to @xmath517 . thus the claimed equality holds .",
    "third we show that a minimum admissible semi - multicut is easily obtained by @xmath0 max - flow computations , where `` minimum '' is with regard to the cut capacity .",
    "an _ admissible _",
    "@xmath189-cut is an @xmath189-cut @xmath16 such that for each @xmath491 } } \\setminus { \\left\\{{\\alpha}\\right\\}}$ ] , each @xmath518-fringe @xmath519 belongs to @xmath16 if @xmath520 and @xmath521 otherwise .",
    "then an admissible semi - multicut @xmath498 is exactly a partition of @xmath493 such that @xmath494 is an admissible @xmath189-cut for each @xmath176}}$ ] .",
    "[ lem : minimum_semimultiway_cut ]    1 .",
    "any minimum @xmath189-cut is admissible .",
    "2 .   for @xmath176}}$ ] , let @xmath522 be the inclusion - minimal minimum @xmath189-cut .",
    "then @xmath523 is a minimum admissible semi - multicut .",
    "in particular , a minimum admissible semi - multicut is exactly a partition @xmath524 of @xmath493 such that @xmath494 is a minimum @xmath189-cut for each @xmath176}}$ ] .",
    "let @xmath16 be an @xmath189-cut . for @xmath491 } } \\setminus { \\left\\{{\\alpha}\\right\\}}$ ] , if the @xmath518-fringe @xmath519 of @xmath520 is outside of @xmath16 , then include @xmath519 into @xmath16 to decrease the cut capacity .",
    "similarly , for @xmath491 } } \\setminus { \\left\\{{\\alpha}\\right\\}}$ ] , if the @xmath518-fringe @xmath519 of @xmath525 belongs to @xmath16 , then remove @xmath519 from @xmath16 to decrease the cut capacity .",
    "( 2 ) is immediate from the standard uncrossing argument ; see the proof of lemma  [ lem : uncrossing ] .",
    "in particular , a minimum admissible multicut is obtained by computing a minimal minimum @xmath189-cut for each @xmath176}}$ ] .",
    "the network @xmath371 has at most @xmath526 vertices and @xmath527 edges .",
    "when computing a minimum @xmath189-cut , all @xmath518-fringes with @xmath515 can be removed , and a max - flow algorithm is performed on a network of @xmath528 vertices and @xmath529 edges ( after combining @xmath530 for @xmath515 and all @xmath189-fringes into a single vertex ) . thus we obtain the following , which was essentially shown in  @xcite .",
    "a minimizer of @xmath10 can be obtained in @xmath531 time .",
    "fourth we explain how to obtain the pip representation from maximum @xmath189-flows for @xmath176}}$ ] , where by an _ @xmath189-flow _ we mean a flow from @xmath488 to the union of @xmath532 and @xmath189-fringes .",
    "to construct the pip , we use the following intersecting properties of minimum isolating cuts . here a minimum @xmath189-cut is simply called an _",
    "@xmath189-mincut_.    [ lem : uncrossing ]    1 .   for distinct @xmath533}}$ ] , if @xmath16 is an @xmath189-mincut and @xmath404 is a @xmath518-mincut , then @xmath534 is an @xmath189-mincut and @xmath535 is a @xmath518-mincut .",
    "2 .   for distinct @xmath536}}$ ] , if @xmath16 is an @xmath189-mincut , @xmath404 is a @xmath518-mincut and @xmath410 is a @xmath537-mincut , then @xmath538 .    in the theory of minimum cuts on undirected networks , the following inequalities are well - known : @xmath539 for every @xmath540 .",
    "then ( 1 ) is an immediate consequence of the first inequality and the fact that any subset of an @xmath189-cut containing @xmath488 is again an @xmath189-cut .",
    "( 2 ) is also immediate from the second inequality and the condition that @xmath430 is connected and each edge of @xmath371 has a positive capacity .    by lemma  [ lem : uncrossing ]  ( 2 ) , each vertex belongs to at most two minimum isolating cuts .",
    "let @xmath541 denote the directed network obtained from @xmath371 by replacing each undirected edge @xmath542 by two directed edge @xmath543 and @xmath544 of capacity @xmath545 .",
    "for each @xmath176}}$ ] , consider the network obtained from @xmath541 by removing all @xmath518-fringes with @xmath515 and contracting terminals @xmath530 with @xmath515 and @xmath189-fringes into a single terminal @xmath546 , and consider the residual graph @xmath547 corresponding to a maximum @xmath548-flow in this network .",
    "let @xmath549 be the poset obtained from @xmath547 in the same way as defined in theorem  [ thm : picard ] . here",
    "each element in @xmath550 is a subset of @xmath364 ( not including terminals and fringes ) .",
    "the ideal family of each @xmath550 is isomorphic to the family of minimum @xmath189-cuts .",
    "the intersecting part in @xmath550 and @xmath551 is described as follows .",
    "[ lem : intersection_of_isolating_cuts ] let @xmath533}}$ ] with @xmath447 .",
    "the following hold :    1 .   for every @xmath552 and @xmath553 , it holds either @xmath554 or @xmath555 .",
    "2 .   for every @xmath556 , if @xmath557 , then it holds @xmath558 .",
    "assume that @xmath559 and @xmath560 .",
    "we can assume @xmath561 .",
    "consider an @xmath189-mincut @xmath16 with @xmath562 and consider a @xmath518-mincut @xmath404 with @xmath563 .",
    "take @xmath404 minimal .",
    "then every scc of @xmath564 included in @xmath404 is less than or equal to @xmath565 with respect to @xmath566 .",
    "suppose that @xmath404 contains @xmath365 .",
    "there is a @xmath518-mincut @xmath410 containing @xmath567 and disjoint from @xmath565 . by lemma  [ lem : uncrossing ]  ( 1 )",
    ", @xmath568 is an @xmath189-mincut and properly intersects @xmath365 .",
    "however this is impossible since the set of non - fringe vertices in each @xmath189-mincut is a disjoint union of sccs of @xmath547 .",
    "suppose that @xmath404 does not contain @xmath365 .",
    "then @xmath534 is an @xmath189-mincut and properly intersects @xmath365 again .",
    "this is a contradiction .",
    "assume that @xmath557 and @xmath569 .",
    "there is a @xmath518-mincut @xmath404 containing @xmath365 and disjoint with @xmath565 .",
    "consider an @xmath189-mincut @xmath16 containing @xmath565 .",
    "then @xmath534 is an @xmath189-mincut , contains @xmath565 , and does not contain @xmath365 .",
    "however this contradicts the assumption that @xmath557 .    by lemma  [ lem : intersection_of_isolating_cuts ]",
    ", we obtain the elementary pip representing minimum admissible cuts just by `` gluing '' @xmath570 along the intersections .",
    "let @xmath571 } } } \\sigma_\\alpha \\times { \\left\\{{\\alpha}\\right\\}}$ ] and @xmath396 a partial order on @xmath70 defined by @xmath572 for every @xmath573 .",
    "in addition , let @xmath81 be a symmetric binary relation on @xmath70 defined by @xmath574 for every @xmath575 .",
    "[ thm : pip_potts ] the triplet @xmath576 is an elementary pip with minimally inconsistent relation @xmath81 . the consistent ideal family @xmath83 and the family of minimum admissible semi - multicuts of @xmath371 are in one - to - one correspondence by the map @xmath577 where , for each @xmath176}}$ ] , @xmath578 is the admissible @xmath189-cut containing all vertices @xmath579 such that @xmath285 is reachable from @xmath488 in @xmath547 or belongs to @xmath16 for some @xmath580 .",
    "it is easy to see from lemma  [ lem : intersection_of_isolating_cuts ]  ( 2 ) that @xmath70 is a pip with minimally inconsistent relation @xmath81 .",
    "we next show that @xmath83 represents the family of minimum semi - multiway cuts .",
    "let @xmath581 .",
    "then @xmath578 is a minimum @xmath488-isolating cut ( by theorem  [ thm : picard ] ) . by consistency",
    ", it necessarily holds @xmath582 for @xmath447 .",
    "thus @xmath583 is a minimum semi - multiway cut .",
    "conversely , let @xmath498 be a minimum semi - multiway cut .",
    "each @xmath494 is a minimum @xmath488-isolating cut , and is represented by an ideal @xmath584 of @xmath550 .",
    "now @xmath585 } } } i_\\alpha \\times { \\left\\{{\\alpha}\\right\\}}$ ] is a consistent ideal of @xmath70 since @xmath586 are pairwise disjoint",
    ". then it holds @xmath587 for @xmath176}}$ ] .",
    "now @xmath70 represents a @xmath588-closed set in @xmath33 , and is necessarily elementary by corollary  [ cor : elementary_pip ] .",
    "therefore the pip - representation is obtained by computing a maximum @xmath189-flow for each @xmath176}}$ ] .",
    "the pip - representation for the minimizer set of @xmath10 is obtained in @xmath589 time .",
    "finally we present an improved algorithm of time complexity @xmath460 .",
    "the key is the existence of a single `` multiflow '' that includes all maximum @xmath189-flows .",
    "let @xmath590 denote the set of @xmath189-paths over all @xmath176}}$ ] , where an _",
    "@xmath189-path _ is a path connecting @xmath488 and an @xmath189-fringe or a terminal @xmath530 with @xmath515 .",
    "a _ multiflow _ is a nonnegative - valued function @xmath1 on @xmath590 satisfying the capacity constraint : @xmath591 let @xmath592 denote the total - flow value of @xmath1 : @xmath593 for @xmath176}}$ ] , let @xmath594 be the submultiflow of @xmath1 defined by @xmath595 if @xmath596 is an @xmath189-path and @xmath597 otherwise .",
    "although the set @xmath590 is exponential , we can efficiently handle multiflow @xmath1 by keeping @xmath1 as @xmath0 flows of node - arc form in @xmath541 , as in @xcite .",
    "the following is a special case of  ( * ? ? ?",
    "* theorem 1.2 ) ( a version of _ multiflow locking theorem _ ) .",
    "there exists a multiflow @xmath1 such that @xmath598 is equal to the minimum capacity of an @xmath189-cut for each @xmath176}}$ ] .",
    "thus the submultiflow @xmath594 of @xmath1 turns into a maximum @xmath189-flow in @xmath541 .",
    "we call such a multiflow _ locking_. our goal is to show that a locking multiflow @xmath1 is obtained in @xmath460 time .",
    "this , consequently , yields @xmath460-time algorithm to obtain posets @xmath570 and the desired pip @xmath599 } } } \\sigma_\\alpha \\times { \\left\\{{\\alpha}\\right\\}}$ ] .    in the case where there are no fringes , the problem of finding a locking multiflow is nothing but the _ maximum free multiflow problem _ , which is a well - studied problem in multiflow theory .",
    " karzanov ",
    "nagamochi developed a divide - and - conquer @xmath600-time algorithm ( _ ikn - algorithm _ ) to obtain a locking multiflow .",
    "we remark that gridchyn ",
    "algorithm  @xcite is also designed by a similar divide - and - conquer idea in `` cut side . ''",
    "we adapt ikn - algorithm to the case where fringes exist .",
    "the pseudo code is shown in algorithm  [ alg : locking ] .    a network @xmath371 with terminal set @xmath601 a locking multiflow in @xmath371",
    "let us explain the detail of the algorithm .",
    "consider the case @xmath602 .",
    "as in ikn - algorithm , our algorithm divides terminal set @xmath601 into two sets @xmath603 and @xmath604 such that @xmath605 and @xmath606 , and find a minimum cut @xmath16 with @xmath607 and @xmath608 , where fringes are removed in computation .",
    "two networks @xmath609 and @xmath610 are constructed as follows .",
    "the network @xmath609 is obtained from @xmath371 by contracting @xmath521 into a single terminal @xmath546 and by removing all @xmath189-fringes for @xmath611 .",
    "similarly , the network @xmath610 is obtained from @xmath371 by contracting @xmath16 into a single terminal @xmath612 and by removing all @xmath189-fringes for @xmath613 .",
    "suppose that we have a locking multiflow @xmath614 in @xmath609 and locking multiflow @xmath615 in @xmath610 .",
    "then a locking multiflow @xmath1 in @xmath371 is obtained by `` aggregating '' @xmath614 and @xmath615 as follows .",
    "an @xmath189-path @xmath596 in @xmath609 not connecting @xmath546 is regarded as an @xmath189-path in @xmath371 .",
    "set @xmath616 for such a path @xmath596 .",
    "similarly , set @xmath617 for each @xmath189-path @xmath596 in @xmath610 not connecting @xmath612 .",
    "next consider paths connecting @xmath546 in @xmath609 and @xmath612 in @xmath610 .",
    "observe that @xmath618 is a minimum @xmath546-cut in @xmath609 and @xmath619 is a minimum @xmath612-cut in @xmath610 .",
    "an edge @xmath382 in @xmath371 joining @xmath16 and @xmath620 becomes an edge connecting @xmath546 in @xmath609 and an edge connecting @xmath612 in @xmath610",
    ". then @xmath621 necessarily holds .",
    "consider an @xmath546-path @xmath622 in @xmath609 and @xmath612-path @xmath623 in @xmath610 containing @xmath382 .",
    "the two paths @xmath622 and @xmath623 are concatenated along @xmath382 into an @xmath624-path @xmath596 in @xmath371 for @xmath625 , and set @xmath626 .",
    "decrease @xmath614 by @xmath627 on @xmath622 ( no @xmath612-flows in @xmath610 ) , and decrease @xmath615 by @xmath627 on @xmath623 . repeating this process until there are no @xmath546-flows in @xmath609 , we obtain a multiflow @xmath1 in @xmath371 . here",
    "@xmath1 is a locking in @xmath371 .",
    "this follows from the fact ( obtained from uncrossing ) that for @xmath176}}$ ] with @xmath628 ( resp .",
    "@xmath604 ) , a minimum @xmath189-cut in @xmath609 ( resp .",
    "@xmath610 ) is a minimum @xmath189-cut in @xmath371 .",
    "multiflows are kept as node - arc forms .",
    "this procedure , called the _ aggregation _",
    ", can be done in @xmath341 time as in  ( * ? ? ?",
    "* section 2.2 ) .",
    "suppose that @xmath629 .",
    "suppose that there is an @xmath189-fringe .",
    "compute a minimum @xmath189-cut @xmath16 . construct @xmath609 and @xmath610 as above ,",
    "find locking multiflows @xmath614 in @xmath609 and @xmath615 in @xmath610 , and aggregate @xmath614 and @xmath615 into a locking multiflow @xmath1 in @xmath371 . in @xmath609",
    ", there are two terminals , and a locking multiflow is obtained by a maximum flow . in @xmath610 , there are ( at most ) three terminals but no @xmath189-fringes . after recursing at most three times ,",
    "we arrive at the situation that there are no fringes .",
    "this situation is precisely the same as ( * ? ? ?",
    "* section 2.1 ) . then a locking multiflow is obtained in at most three max - flow computations .",
    "the time complexity of this algorithm is analyzed in precisely the same way as ( * ? ? ?",
    "* section 2.3 ) , sketched as follows .",
    "for simplicity of analysis , we use orlin s @xmath341-time algorithm  @xcite to find a maximum flow and minimum cut .",
    "let @xmath630 denote the time complexity of the algorithm applied to potts @xmath0-submodular functions on graph @xmath430 with @xmath631 , and @xmath632 .",
    "suppose that the time complexity of the max - flow algorithm and the aggregation procedure are bounded by @xmath633 and by @xmath634 for constants @xmath20 and @xmath635 , respectively .",
    "we show by induction that @xmath636 for a constant @xmath637 ( to be determined later ) . for @xmath638 , it holds @xmath639 .",
    "suppose that @xmath640 .",
    "then @xmath641 with @xmath642 .",
    "by induction , we have @xmath643 where we use @xmath342 and @xmath644 . for @xmath645 , it holds @xmath636 as required .",
    "this completes the proof of theorem  [ thm : potts ] .",
    "the compact representation for @xmath50-closed sets by an elementary pip is kind of a data compression .",
    "hence it is natural to consider an efficient way to extract elements of the original @xmath50-closed set .",
    "this corresponds to the enumeration of consistent ideals of an elementary pip . as seen in remark",
    "[ lem : pip_and_cnf ] , consistent ideals correspond to true assignments of a boolean 2-cnf .",
    "thus we can enumerate all consistent ideals in output - polynomial time  @xcite ( i.e. , the algorithm stops in time polynomial in the length of the input and output ) .",
    "maximal consistent ideals are of special interest , as described in section  [ sec : relaxation ] . for a pip @xmath70 ,",
    "let @xmath646 denote the family of maximal consistent ideals .",
    "now we consider the enumeration of @xmath646 .",
    "this can also be done in output - polynomial time by using the algorithm of  @xcite in @xmath647 time per output .",
    "we here develop a considerably faster algorithm for the elementary pip of a potts @xmath0-submodular function @xmath10 .",
    "our algorithm utilizes its amalgamated structure by posets ( theorem  [ thm : pip_potts ] ) .",
    "in fact , the structure of @xmath646 is quite simple , which we now explain .",
    "let @xmath570 be the posets , and @xmath571 } } } \\sigma_\\alpha \\times { \\left\\{{\\alpha}\\right\\}}$ ] the pip defined in the previous section . for distinct @xmath533}}$ ] , let @xmath648 be the subposet of @xmath550 . in particular , @xmath649 is equal to @xmath650 as a set , and the partial order of @xmath649 is the reverse of that of @xmath650",
    ". let @xmath651 } } \\setminus { \\left\\{{\\alpha}\\right\\ } } } \\sigma_{\\alpha , \\beta}$ ] .",
    "define the poset @xmath652 by disjoint sum @xmath653 where partial order @xmath396 on @xmath652 is defined as : the relation on @xmath649 is the same as the partial order of @xmath649 and there is no relation between @xmath649 and @xmath654 for @xmath655 . for a subset @xmath656 of @xmath550 , let @xmath657 . for an ideal @xmath658 of @xmath652 , let @xmath659 be defined by @xmath660    [ thm : enumeration_potts ]",
    "the map @xmath661 is a bijection from the ideal family of @xmath652 to @xmath646 .",
    "let @xmath658 be an ideal of @xmath652 .",
    "we first show that @xmath659 is a consistent ideal .",
    "consider @xmath662 .",
    "if @xmath663 , then @xmath664 since @xmath665 is an ideal by ( ep1 ) .",
    "suppose that @xmath666",
    ". then @xmath667 .",
    "since @xmath658 is an ideal in @xmath649 , @xmath668 is an ideal in @xmath550 .",
    "consequently @xmath669 , and @xmath670 .",
    "suppose that @xmath671",
    ". then @xmath672 .",
    "observe that @xmath673 is an ideal in @xmath674 . from this , we obtain @xmath670 , as above . since @xmath659 contains exactly one of @xmath675 with @xmath447 , the image @xmath659",
    "is consistent and maximal .",
    "let @xmath109 be a maximal consistent ideal of @xmath395 .",
    "necessarily @xmath109 contains @xmath665 for all @xmath176}}$ ] .",
    "consider @xmath675 with @xmath447 .",
    "then @xmath109 contains exactly one of @xmath676 . otherwise , consider the principal ideal @xmath677 of @xmath678 , and the ideal @xmath679 . by maximality , @xmath679 is inconsistent .",
    "then there are @xmath680 and @xmath681 with @xmath682 . by ( ep1 ) , ( ep2 ) and lemma  [",
    "lem : intersection_of_isolating_cuts ] , there is @xmath683 with @xmath684 .",
    "since @xmath109 is an ideal , it holds @xmath685 .",
    "necessarily @xmath686 and @xmath687 .",
    "this is a contradiction .    for distinct @xmath533}}$ ]",
    "let @xmath688 .",
    "then @xmath649 is the disjoint union of @xmath689 and @xmath690 ( as a set ) .",
    "thus , letting @xmath691 , we have @xmath692",
    ".    therefore our problem of enumerating all maximal minimizers of @xmath693 is reduced to the enumeration of all ideals of poset @xmath652 .",
    "this is a well - studied enumeration problem .",
    "one of the current best algorithms is squire s algorithm  @xcite that enumerates all ideals of an @xmath3-element poset in amortized @xmath694 time per output .    from the elementary pip for the minimizer set of potts @xmath0-submodular function @xmath436 , all maximal minimizers of @xmath10",
    "can be enumerated in amortized @xmath694 time per output .",
    "the above poset @xmath652 may be viewed as a `` compact representation '' of maximal minimizers of potts @xmath0-submodular function @xmath10 . in a general elementary pip @xmath70 ( for the minimizer set of a general @xmath0-submodular function ) ,",
    "such a compact representation is still possible if @xmath70 has a maximal consistent ideal @xmath637 satisfying the following property :    * @xmath637 contains exactly one of @xmath291 and @xmath290 for each @xmath695 of the case ( ep2 - 1 ) .    in this case , as in @xmath661 , there is a bijection between @xmath696 and @xmath646 .",
    "one can see that the pip @xmath697 has a simple structure similar to the above poset @xmath652 ( though it is not elementary ) .",
    "we developed an algorithm to enumerate consistent ideals of @xmath697 in @xmath12 time per output , and announced in the conference version of this paper  @xcite that such a fast enumeration is possible for maximal consistent ideals of pip @xmath70 .",
    "however we found an elementary pip that having no maximal consistent ideal with the property ( p ) ; consider pip @xmath698 with @xmath699 , @xmath700 , @xmath701 , @xmath702 , @xmath703 , and @xmath704 . therefore ( * ? ? ? * theorem 14 ) is not true for such a pip .",
    "a _ @xmath0-submodular relaxation _ @xmath359 of a function @xmath705}}^n}{{\\overline{\\setr}}}$ ] is a @xmath0-submodular function on @xmath33 such that @xmath706 for all @xmath450}}^n { \\left({\\subseteq { s_k}^n}\\right)}$ ] .",
    "yoshida  @xcite investigated @xmath0-submodular relaxations as a key tool for designing efficient fpt algorithms .",
    "kolmogorov  @xcite applied @xmath0-submodular relaxations to labeling problems on computer vision , which we describe below .",
    "a label assignment is a process of assigning a label to each pixel of a given image .",
    "for example , in the object extraction , each pixel is labeled as `` foreground '' or `` background '' . in stereo",
    "matching , the disparity of each pixel is computed from the given two photos taken from slightly different positions , and the pixel is labeled according to the estimated depth .",
    "we consider the labels to be numbered from 1 to @xmath0 .",
    "such a labeling problem is formulated as the problem of minimizing an _ energy function_. a potts energy function is simple but widely used energy function .",
    "however the exact minimization of a potts energy function is computationally intractable .",
    "gridchyn  kolmogorov  @xcite applied the @xmath0-submodular relaxation , that is , the energy function is relaxed to a @xmath0-submodular function by allowing some pixels to have 0 ( meaning `` non - labeled '' ) . the following property , called _ persistency _",
    "@xcite , is the reason why they introduced the relaxation .",
    "[ thm : persistency ] let @xmath705}}^n}{{\\overline{\\setr}}}$ ] be a function and @xmath354 a @xmath0-submodular relaxation of @xmath1 .",
    "for every minimizer @xmath386 of @xmath359 , there exists a minimizer @xmath707}}^n$ ] of @xmath1 such that @xmath358 implies @xmath173 for each @xmath36}}$ ] .",
    "namely , each minimizer of @xmath359 gives us partial information about a minimizer of @xmath1 .",
    "an efficient algorithm for minimizing @xmath0-submodular relaxations of potts functions was also proposed in  @xcite .",
    "hence we can obtain a partial labeling extensible to an optimal labeling , which we call a _",
    "persistent labeling_.    in section  [ sec : potts ] we gave an efficient algorithm to construct the elementary pip representing all the minimizers of a potts @xmath0-submodular function . since minimizers that contain more nonzero elements have more information , we want to find a minimizer whose support is largest .",
    "in fact , such minimizers are precisely maximal minimizers .",
    "let @xmath107 be a @xmath50-closed set on @xmath33 .",
    "the supports of maximal elements in @xmath107 are the same .",
    "let @xmath134 be maximal and @xmath708 .",
    "for each @xmath36}}$ ] , it holds @xmath709 if @xmath710 and @xmath711 if @xmath712 .",
    "in particular , @xmath713 and @xmath714 hold . since @xmath163 is maximal",
    ", we obtain @xmath715 and @xmath716 . by changing the role of @xmath35 and @xmath163",
    ", we also have @xmath717 .",
    "thus @xmath209 .    from this lemma",
    ", it turns out that all maximal minimizers of @xmath359 have the same and largest amount of information about minimizers of @xmath1 . in labeling problem with potts energy ,",
    "all maximal persistent labelings ( with respect to a @xmath0-submodular relaxation ) can be efficiently generated by the algorithm in section  [ sec : enumeration ] .",
    "we implemented our algorithm on the stereo matching problem with potts energy function  .",
    "this has an aspect of the replication of the experiment in  @xcite , but we computed not only one of the persistent labelings but also its pip - representation .",
    "we used `` tsukuba '' and `` cones '' in the middlebury data  @xcite as input images .",
    "[ [ problem - setting - and - formulation . ] ] problem setting and formulation .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we are given photo images @xmath56 and @xmath652 taken from left and right positions , respectively .",
    "the images @xmath56 and @xmath652 are @xmath718 arrays such that entries @xmath719}}$ ] and @xmath720}}$ ] are rgb vectors @xmath721 of the intensity at pixel @xmath722 , where each pixel is represented by a pair @xmath722 of its horizontal coordinate @xmath723 and vertical coordinate @xmath724 .",
    "the goal of the stereo matching problem is to assign to each pixel the `` disparity label '' @xmath725}}$ ] that represents the depth of the object on the pixel .",
    "we model this problem as a minimization of a potts energy function   on diagonal grid graph @xmath430 , where @xmath364 is the set of pixels , and two pixels @xmath722 and @xmath726 have an edge in @xmath727 if and only if @xmath728 and @xmath729 .",
    "the first and the second term of   are called `` data term '' and `` smoothness term ''  @xcite , respectively .    for each pixel @xmath579 ,",
    "the data term @xmath438 measures how well the estimated disparity of pixel @xmath285 agrees with the pair of given images .",
    "we employed the traditional averaged ssd ( sum of squared difference ) costs as in  @xcite : @xmath730 } } - { { r}{{\\mathopen{}\\mathclose\\bgroup\\left}[{x + d_\\alpha , y}{\\aftergroup\\egroup\\right}]}}}\\right\\rvert}^2 $ }    \\quad    { \\left({\\alpha \\in { { \\left[{k}\\right]}}}\\right)},\\end{aligned}\\ ] ] where @xmath731 is the @xmath732 window centered at @xmath733 ( i.e. , the set of pixels @xmath726 with @xmath734 and @xmath735 ) , @xmath736 is the 2-norm , @xmath737 is the disparity corresponding to the label @xmath189 .",
    "we simply set @xmath738 for each @xmath176}}$ ] .",
    "for each pair of adjacent pixels @xmath433 , the smoothness term increases the energy by @xmath434 if @xmath285 and @xmath286 have different labels .",
    "we set every @xmath434 to be the same value @xmath739 as in  @xcite , and conducted experiments with @xmath740 and 20 to see the effect of @xmath739 .",
    "[ [ experimental - results . ] ] experimental results .",
    "+ + + + + + + + + + + + + + + + + + + + +     and `` cones '' ( bottom row ) with @xmath741     and `` cones '' ( bottom row ) with @xmath741     and `` cones '' ( bottom row ) with @xmath741     and `` cones '' ( bottom row ) with @xmath741     and `` cones '' ( bottom row ) with @xmath741     and `` cones '' ( bottom row ) with @xmath741    figure  [ fig : result_image ] and table  [ tbl : result ] show the results of our experiment .",
    "the pixels labeled in the minimum persistent labeling are colored in gray of the brightness corresponding to each label .",
    "the blue pixels are unlabeled even in maximal persistent labelings .",
    "the red pixels are the difference between the minimum persistent labeling and maximal ones , i.e. , the pixel was labeled in ( any of ) maximal persistent labelings but not in the minimum one .",
    "we can observe that there are few red pixels as mentioned in  @xcite , and they are mainly located on the boundary of two regions with different labels .",
    "a possible reason is the following : consider a simple 1-dimensional case where a pixel @xmath285 is adjacent only to pixels @xmath286 and @xmath742 .",
    "let @xmath386 be the minimum persistent labeling and assume @xmath743 .",
    "then the increment of the energy is the same ( @xmath744 ) even if @xmath37 is set to any of @xmath745 .",
    "therefore the pixel @xmath285 will be red if @xmath746 , and thus we think that this will occur in boundaries more frequently than inside of regions .",
    "with regard to the effect of @xmath739 , the larger @xmath739 decreases the percentages of gray and red pixels on both tsukuba and cones , and increases the blue pixels to the contrary .",
    "this result agrees with the experiments in  @xcite .",
    "we consider that this is due to the fact that the value of each @xmath747 is moderately lower in @xmath451 since @xmath747 is the average of the minimum and the second minimum values of @xmath438 as described in section  [ sec : potts ] .",
    "hence if @xmath739 is large , the energy will be lower just by letting all @xmath748 than by tuning each @xmath37 finely according to the values of the corresponding data term @xmath451 .",
    ".experimental result [ cols=\"<,>,^,^,^,^\",options=\"header \" , ]     [ tbl : result ]    [ [ the - structure - of - the - pip . ] ] the structure of the pip .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + +    ]    figure  [ fig : result_pip ] shows the pip - representation for the partial labelings on tsukuba with @xmath740 .",
    "the pip consists of many small connected pips , which correspond to each of connected red regions in figure  [ fig : result_image ] .",
    "thus we can easily calculate the number of maximal persistent labelings by multiplying the number of maximal consistent ideals of each connected pip ( notice that an ideal of the pip is maximal and consistent if and only if it contains all elements having no inconsistent pair and one element of each minimally inconsistent pairs ) .",
    "the right most column of table  [ tbl : result ] shows the number of maximal persistent labelings in each experiment .",
    "we discovered the fact that there are plenty of maximal persistent labelings even though the percentages of red pixels are little .",
    "we thank kazuo murota for helpful comments . this work was partially supported by jsps kakenhi grant numbers 25280004 , 26330023 , 26280004 , and by jst , erato , kawarabayashi large graph project ."
  ],
  "abstract_text": [
    "<S> a @xmath0-submodular function is a generalization of submodular and bisubmodular functions . </S>",
    "<S> this paper establishes a compact representation for minimizers of a @xmath0-submodular function by a poset with inconsistent pairs ( pip ) . </S>",
    "<S> this is a generalization of ando  </S>",
    "<S> fujishige s signed - poset representation for minimizers of a bisubmodular function . </S>",
    "<S> we completely characterize the class of pips ( elementary pips ) arising from @xmath0-submodular functions . </S>",
    "<S> we give algorithms to construct the elementary pip of minimizers of a @xmath0-submodular function @xmath1 for three cases : ( i ) a minimizing oracle of @xmath1 is available , ( ii ) @xmath1 is network - representable , and ( iii ) @xmath1 arises from a potts energy function . </S>",
    "<S> furthermore , we provide an efficient enumeration algorithm for all maximal minimizers of a potts @xmath0-submodular function . our results are applicable to obtain all maximal persistent labelings in actual computer vision problems . </S>",
    "<S> we present experimental results for real vision instances . </S>",
    "<S> + * keywords : * @xmath0-submodular function , birkhoff representation theorem , poset with inconsistent pairs ( pip ) , potts energy function </S>"
  ]
}
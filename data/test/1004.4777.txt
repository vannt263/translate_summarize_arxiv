{
  "article_text": [
    "_ monadic second - order logic _ ( @xmath6 ) is one of the most expressive logics for which the theories of many interesting classes of structures are still decidable .",
    "in particular , the infinite binary tree and many linear orders have a decidable @xmath6-theory @xcite and the same holds for many classes of ( finite or infinite ) structures with bounded _ tree - width _ @xcite .",
    "furthermore , for every fixed @xmath6-sentence  @xmath7 and every class  @xmath8 of finite structures with bounded tree - width , there is a linear - time algorithm that checks whether a given structure from  @xmath8 satisfies  @xmath7 @xcite .",
    "examples of monadic second - order expressible graph properties are @xmath9-colourability , various types of connectivity , and planarity ( via kuratowski s well - known characterisation by forbidden configurations ) .",
    "a variant of monadic second - order logic called _ guarded second - order logic _ ( @xmath10 ) allows quantification not only over sets of elements but also over sets of edges ( i.e. , tuples from the relations )  @xcite .",
    "the above mentioned linear - time algorithms can be adapted to this logic .",
    "there are tight links between guarded second - order logic and tree - width.08em : every class of ( finite or infinite ) relational structures with a decidable @xmath10-theory has bounded tree - width .",
    "this gives a sort of converse to the above mentioned decidability results @xcite .",
    "the proof of this result uses a deep theorem of graph minor theory by robertson and seymour.08em : a set of graphs has bounded tree - width if and only if it excludes some planar graph as a minor  @xcite .    to compare the @xmath6-theories or @xmath10-theories of two classes of structures",
    "we can use _",
    "monadic second - order transductions , _ a certain kind of interpretations suitable both , for monadic second - order logic and , using a detour via incidence structures , also for guarded second - order logic @xcite .    in the present article",
    "we classify classes of finite structures according to their ` combinatorial complexity ' .",
    "( note that we do not consider decidability issues . )",
    "we will consider two ways to measure the complexity of such classes .",
    "on the one hand , we can use their tree - width and its variants . on the other hand",
    ", we can compare them via transductions . as it turns out , these two approaches are equivalent and they give rise to the same hierarchy .",
    "this indicates the robustness of our definitions and their intrinsic interest .",
    "other possible hierarchies , based on different logics , will be briefly mentioned in section  [ sect : conclusion ] .",
    "let us give more details .",
    "an @xmath6-transduction is a transformation of relational structures specified by monadic second - order formulae . as graphs",
    "can be represented by relational structures , we can use @xmath6-transductions as transformations between graphs .",
    "an @xmath6-transduction is a generalisation of the following kind of operations ( see definition  [ def : transduction]).08em :    \\(i ) the definition of a relational structure `` inside '' another one ( in model theory this is called an _",
    "interpretation_).08em ;    \\(ii ) the replacement of a structure  @xmath11 by the union of a fixed number of disjoint copies of  @xmath11 , augmented with appropriate relations between the copies.08em ;    \\(iii ) the expansion of a given structure  @xmath11 by a fixed number of unary predicates , called _ parameters .",
    "_ usually , these predicates are arbitrary subsets of the domain , but we also may have a formula imposing restrictions on them .    because of the possibility to use parameters , a transduction  @xmath1 is a many - valued map in general .",
    "( we may also think of it as non - deterministic . )",
    "each relational structure  @xmath11 has several images @xmath12 depending on the choice of the parameters @xmath13 .",
    "if @xmath14 we can consider the tuple  @xmath15 as an _ encoding _ of  @xmath16 in  @xmath11 . the transduction  @xmath1 is the corresponding _ decoding function .",
    "_    each transduction  @xmath1 extends in a canonical way to a transformation between classes of structures .",
    "if @xmath8  and  @xmath17 are classes of relational structures with @xmath18 , we can think of  @xmath1 as a way of encoding the structures in  @xmath8 by elements of  @xmath17 .",
    "for instance , every finite graph can be encoded in a sufficiently large finite square grid ( by a fixed transduction  @xmath1 ) .",
    "every finite tree of height at most  @xmath4 ( for fixed  @xmath4 ) can be encoded in a sufficiently long finite path .",
    "but it is not the case that all finite trees can be encoded by paths ( by a single transduction ) .",
    "the purpose of this article is to classify classes of finite relational structures according to their _ encoding powers .",
    "_ we will compare classes @xmath8  and  @xmath17 of structures by the following preorder.08em : @xmath19 we attack the problem of determining the structure of this preorder .",
    "since , at the moment , a complete description of this hierarchy seems to be out of reach , we concentrate on a variant where we replace monadic second - order logic by _ guarded second - order logic .",
    "_ in this case , the corresponding hierarchy can be described completely . to obtain a corresponding notion of transduction",
    "we can not simply change the definition of an @xmath6-transduction to use @xmath10-formulae since the resulting notion of transduction would not yield a reduction between @xmath10-theories , and it even would not be closed under composition .",
    "instead , we will take a detour by combining ordinary @xmath6-transductions with a well - known translation between @xmath10 and @xmath6 .",
    "this translation is based on _ incidence structures .",
    "_ let us first describe this notion for undirected graphs where it is very natural .",
    "there are two canonical ways to encode a graph  @xmath20 by a relational structure .",
    "we can use its _ adjacency representation _ which is a structure @xmath21 where the domain  @xmath22 consists of all vertices of  @xmath20 and @xmath23 is a binary relation containing all pairs of adjacent vertices .",
    "but we also can use the _ incidence representation _ of  @xmath20 .",
    "this is the structure @xmath24 where the domain @xmath25 contains both , the vertices and the edges of  @xmath20 , and @xmath26 is the incidence relation between vertices and edges . in a similar way ,",
    "we can associate with every relational structure  @xmath11 its incidence structure  @xmath27 ( see definition  [ def : incidence structure ] ) where the domain also contains elements for all tuples in some relation of  @xmath11 .    it is shown in @xcite that every @xmath10-formula  @xmath7 talking about some structure  @xmath11 can be translated into an @xmath6-formula talking about the incidence structure  @xmath27 , and vice versa .",
    "hence , we can use incidence structures to obtain an analogue  @xmath28 of the preorder  @xmath29 suitable for guarded second - order logic .",
    "we set @xmath30 where @xmath31 .",
    "the main result of the present article is a complete characterisation of the resulting hierarchy for classes of finite structures .",
    "we show that the preorder  @xmath28 is linear of order type @xmath32 .",
    "it turns out that every class of finite structures is equivalent to one of the following classes , listed in increasing order of generality.08em :    * trees of height at most  @xmath4 , for each @xmath33.08em ; * paths.08em ; * arbitrary trees ( equivalently , binary trees).08em ; * ( square ) grids .",
    "each of these levels can be characterised in terms of tree decompositions .",
    "hence , we also obtain a corresponding hierarchy of complexity measures on structures that are compatible with @xmath6-transductions transforming incidence structures .",
    "the upper levels of the hierarchy can be determined easily using techniques from graph minor theory developed by robertson and seymour , such as the notions of a minor and a tree decomposition .",
    "in particular , we employ two results characterising bounded tree - width and bounded path - width in terms of excluded minors @xcite .    for the lower levels , which consist of classes of bounded path - width , the characterisation is more complicated and requires new results relating tree decompositions and monadic second - order logic .    in sections [ sect : preliminaries ]  and",
    "[ sect : mso ] we give basic definitions .",
    "section  [ sect : tree decompositions ] collects some known results from graph minor theory .",
    "we also introduce a new variant of tree - width and prove some of its basic properties .",
    "in section  [ sect : tree decompositions and transductions ] we expound the connections between tree - width and monadic second - order transductions . in section  [",
    "sect : hierarchy ] we introduce the transduction hierarchy and we state our main theorem .",
    "its proof is contained in sections [ sect : hierarchy2 ]  and  [ sect : hierarchy3 ] . in the first one , we prove that the hierarchy is strict while , in the second one , we show that it covers every class .",
    "the final section  [ sect : conclusion ] contains some extension of our results to other logics and some open problems in this direction .",
    "let us fix our notation .",
    "we set @xmath34 : = \\{0,\\dots , n-1\\}$ ] and we write @xmath35 for the power set of a set  @xmath36 .",
    "we denote tuples  @xmath37 with a bar .",
    "the components of  @xmath37 will be @xmath38 where the length  @xmath4 will usually be implicit .",
    "we sometimes identify a tuple  @xmath37 with the set of its components .",
    "for instance , we write @xmath39 to express that @xmath40 , for some  @xmath41 .    in this article all graphs , trees , and relational structures are finite .",
    "we will not repeat this finiteness assumption .",
    "a relational structure  @xmath11 is of the form @xmath42 with domain  @xmath43 and relations  @xmath44 .",
    "the _ signature _ of such a structure is the set @xmath45 of relation symbols . in some proofs",
    "we will also use signatures with constant symbols denoting elements of the domain .",
    "we write @xmath46 for the arity of a relation  @xmath47 . for a signature  @xmath48 ,",
    "we denote by @xmath49 $ ] the class of all @xmath48-structures .",
    "we write @xmath50 for the _ disjoint union _ of the structures @xmath11  and  @xmath16 .",
    "we mainly consider _ incidence structures .",
    "_ these are representations of structures  @xmath11 where we have added new elements to the domain , one for each tuple in the relations of  @xmath11 .",
    "[ def : incidence structure ] let @xmath51 be a structure and let @xmath52  be the maximal arity of a relation  @xmath53 .",
    "the _ incidence structure _ of  @xmath11 is the structure @xmath54 where we extend the domain  @xmath43 by @xmath55 and the relations are @xmath56 the class of all incidence structures is @xmath57 : = \\set { \\fraka_{\\mathrm{in } } } { \\fraka \\in { \\mathbb{str}}[\\sigma ] } $ ] .",
    "note that incidence structures are binary ( i.e. , their relations have arity at most  @xmath58 ) .",
    "hence , they can be regarded as bipartite labelled directed graphs .",
    "one important property of incidence structures is the fact that they are _ sparse , _",
    "i.e. , their relations contain few tuples .",
    "let @xmath59 . a structure @xmath60 is _",
    "_ @xmath9-sparse__-sparse hypergraphs _ and _ uniformly @xmath9-sparse hypergraphs .",
    "_ what we call @xmath9-sparse is a slight modification of the uniform version of @xcite . ]",
    "if , for every subset @xmath61 and all relations  @xmath53 , we have @xmath62    every incidence structure is @xmath63-sparse .    let us fix our notation regarding trees and graphs .",
    "a _ directed graph _ is a pair @xmath64 where @xmath22  is the set of _ vertices _ and @xmath65 is the _ edge relation .",
    "thus , graphs are by definition simple ( without parallel edges ) . an _ undirected graph _",
    "is a graph where the edge relation @xmath66 is symmetric .",
    "when speaking of a _ graph _ we will always mean an undirected one .",
    "we regard a _ coloured graph _ as a relational structure @xmath67 with binary relations  @xmath68 and unary relations  @xmath69 that encode the colours of , respectively , the edges and the vertices .",
    "we allow graphs whose edges and vertices have several colours .",
    "trees play a major role in this article .",
    "intuitively , a tree is a directed graph  @xmath70 with a unique vertex  @xmath52 of indegree  @xmath71 , called the _ root _ of  @xmath70 , such that every vertex is reachable from  @xmath52 by a unique directed path .",
    "the actual definition we will use is slightly more concrete .",
    "it is based on the usual encoding of the vertices of a tree by finite sequences describing the path from the root to the given vertex .",
    "in fact , we introduce two notions of a tree.08em : _ order - trees _ and _ successor - trees . _ the latter use the usual edge relation , while the former are equipped with the tree - order instead .",
    "let @xmath72  be a set .",
    "\\(a ) for an ordinal  @xmath73 , we denote by @xmath74 the set of all sequences of elements of  @xmath72 of length less than  @xmath73 .",
    "the _ prefix relation _ on  @xmath75 is defined by @xmath76 the infimum of @xmath77  and  @xmath78 with respect to  @xmath79 , i.e. , their longest common prefix , is denoted by @xmath80 .",
    "\\(b ) a finite prefix closed subset @xmath81 is called a _ tree domain . _",
    "following our intuition that a vertex is represented by the path leading to it , we call the empty sequence  @xmath82 the _ root _ of  @xmath83 and the maximal elements of  @xmath83 its _ leaves . _ the domain of the _ complete @xmath84-ary tree of height  @xmath4 _ is @xmath85 .",
    "hence , @xmath86  is the empty tree , @xmath87  the one consisting only of the root , and @xmath88 consists of a root and @xmath84  leaves .",
    "given a tree domain  @xmath83 we can define the _ successor relation _",
    "@xmath66 on  @xmath83 by setting @xmath89 in this case we call @xmath78  a _ successor _ of  @xmath77 and @xmath77  the _ predecessor _ of  @xmath78",
    ". a structure of the form @xmath90 ( and every structure isomorphic to it ) is called a _",
    "successor - tree . _    sometimes it is convenient to replace the successor relation  @xmath66 by the tree order  @xmath79 .",
    "structures of the form @xmath91 are called _ order - trees . _ a  _ coloured tree _ is the expansion of a ( order- or successor- ) tree by unary predicates  @xmath92 .",
    "( we do not require these predicates to be pairwise disjoint .",
    "hence , every vertex may have none , one , or several colours . )",
    "we write @xmath93 for the class of all order - trees @xmath94 with @xmath84  colours .",
    "the set of _ leaves _ of a tree  @xmath70 is denoted by @xmath95 .",
    "\\(c ) let @xmath96 be an order - tree .",
    "the _ level _ of an element @xmath97 is the number of vertices @xmath98 with @xmath99 .",
    "we denote it by  @xmath100 .",
    "the _ height _ of  @xmath70 is the least ordinal  @xmath73 greater than the level of every element of  @xmath83 .",
    "hence , the empty tree has height  @xmath71 and the tree with a single vertex has height  @xmath63 .",
    "the _ out - degree _ of  @xmath70 is the maximal number of successors of a vertex of  @xmath70 . for successor - trees",
    "we define these notions analogously .",
    "\\(d ) let @xmath70  be a tree and @xmath101  a vertex of  @xmath70 .",
    "the _ subtree _ of  @xmath70 _ rooted _ at  @xmath101 is the subtree  @xmath102 consisting of all vertices  @xmath103 with @xmath104 , i.e. , all vertices below  @xmath101 .",
    "sometimes it is possible to reduce statements about relational structures to statements about graphs .",
    "one way to do so consists in replacing a structure by its _ gaifman graph .",
    "_    the _ gaifman graph _ of a structure @xmath60 is the undirected graph @xmath105 with the same domain  @xmath43 and with the edge relation @xmath106",
    "monadic second - order logic ( @xmath6 ) is the extension of first - order logic by set variables and quantifiers over such variables .",
    "an important variant of @xmath6 is guarded second - order logic ( @xmath10 ) where one can quantify not only over sets of elements but also over sets of tuples from the relations ( see  @xcite for details ) . hence , guarded second - order logic over a given structure",
    "@xmath11 is equivalent to monadic second - order logic over its incidence structure  @xmath27 .",
    "+ for every @xmath10-sentence  @xmath7 , we can effectively construct an @xmath6-sentence  @xmath107 such that @xmath108    for every @xmath6-sentence  @xmath7 , we can effectively construct a @xmath10-sentence  @xmath107 such that @xmath109    throughout the article we will consistently work with incidence structures , thereby avoiding the treatment of guarded second - order logic . in particular , all formulae are tacitly assumed to be @xmath6-formulae .    besides @xmath6 and @xmath10",
    "we also consider their _ counting extensions _",
    "@xmath110 and @xmath111 .",
    "these add predicates of the form @xmath112 to , respectively , @xmath6 and @xmath10 , where @xmath36  is a set variable and @xmath113 are numbers .",
    "all of our results for @xmath10 go through also for @xmath111 , i.e. , for @xmath110-transductions between incidence structures . in section  [ sect : conclusion ] we will give a partial characterisation of the hierarchy for @xmath110-transductions of graphs ( not of incidence graphs ) .",
    "in this case the availability of counting predicates does make a difference .    to state the composition theorem below it",
    "is of advantage to work with a variant of @xmath6 without first - order variables .",
    "this variant has atomic formulae of the form @xmath114 and @xmath115 , for set variables @xmath116 , where a formula of the form  @xmath115 states that there are elements @xmath117 such that the tuple  @xmath37 is in  @xmath47 .",
    "note that every general monadic second - order formula with first - order variables can be brought into this restricted form by replacing all first - order variables by set variables and adding the condition that these sets are singletons .",
    "whenever we speak of @xmath6 we will have this version in mind .",
    "in particular , the following definition of the rank of a formula is based on this variant .",
    "when writing down concrete formulae , on the other hand , we will allow the use of first - order variables to improve readability .",
    "we regard every such formula as an abbreviation of a formula of the restricted form .",
    "similarly , when we use structures with constants we actually regard each constant as a singleton set .",
    "\\(a ) the _ rank _",
    "@xmath118 of a formula  @xmath7 is the nesting depth of quantifiers in  @xmath7 .",
    "formulae of rank  @xmath71 are called _ quantifier - free .",
    "_    \\(b ) the _ monadic theory of rank  @xmath84 _ of a structure  @xmath11 is @xmath119 for a tuple  @xmath37 of elements of  @xmath11 , we also consider the monadic theory @xmath120 of the expansion @xmath121 .",
    "we use the term ` rank ' instead of the more natural ` quantifier rank ' since in section  [ sect : conclusion ] below we will consider @xmath110 where the notion of rank has to be adapted for our results to go through .    in order to compare the monadic theories of two classes of structures we employ @xmath6-transductions . to simplify the definition",
    "we introduce three simple operations and we obtain @xmath6-transductions as compositions of these .",
    "[ def : transduction ] ( a ) let @xmath122 be a natural number .",
    "the operation @xmath123 maps a structure  @xmath11 to the expansion @xmath124 of the disjoint union of @xmath9  copies of  @xmath11 by the following relations . denoting the copy of an element @xmath125 in the @xmath41-th component of @xmath126 by the pair @xmath127",
    ", we define @xmath128 for @xmath129 , we set @xmath130 .",
    "\\(b ) for @xmath131 , we define the operation @xmath132 that maps a structure  @xmath11 to all possible expansions by @xmath84  unary predicates @xmath133 .",
    "note that this operation is many - valued and that @xmath134 is just the identity .",
    "basic @xmath6-transduction _ is a partial operation  @xmath1 on relational structures described by a list @xmath135 of @xmath6-formulae called the _ definition scheme _ of  @xmath1 .",
    "given a structure  @xmath11 that satisfies the formula  @xmath136 the operation  @xmath1 produces the structure @xmath137 where @xmath138 if @xmath139 then @xmath140 remains undefined .",
    "\\(d ) a _ @xmath9-copying @xmath6-transduction _",
    "@xmath1 is a ( many - valued ) operation on relational structures of the form @xmath141 where @xmath142  is a basic @xmath6-transduction .",
    "when the value of  @xmath9 does not matter , we will simply speak of a _ transduction . _",
    "note that , due to  @xmath132 , a structure can be mapped to several structures by a transduction .",
    "consequently , we consider @xmath140 as the _ set _ of possible values @xmath143 where @xmath92  ranges over all @xmath84-tuples of subsets of  @xmath43 .    for a class  @xmath8",
    ", we set @xmath144    \\(a ) the expansion by @xmath84  unary predicates corresponds , in the terminology of @xcite , to using @xmath84  _ parameters .",
    "_ we will use this terminology , for instance , in the proof of theorem  [ thm : interpretable implies tree decomposable ] .",
    "\\(b ) note that every basic @xmath6-transduction is a @xmath63-copying @xmath6-transduction without parameters .",
    "[ exam : gf interpretable ] ( a ) let @xmath48  be a signature and let @xmath52  be the maximal arity of a relation in  @xmath48 .",
    "the operation mapping an incidence structure @xmath145 $ ] to the structure @xmath146 is a @xmath9-copying @xmath6-transduction where @xmath147 , for @xmath148 , and @xmath129 , for @xmath149 .",
    "\\(b ) for every fixed number  @xmath33 , we describe a transduction  @xmath1 transforming a path  @xmath150 of length  @xmath151 into the class of all trees of height  @xmath4 with @xmath152 vertices .",
    "we can encode a tree  @xmath83 of height  @xmath4 with @xmath84  vertices as a finite word  @xmath153 of length  @xmath84 over the alphabet  @xmath34 $ ] as follows .",
    "let @xmath154 be the enumeration of the vertices of  @xmath83 in lexicographic order , and let @xmath155  be the level of  @xmath156 .",
    "we encode  @xmath83 by the word @xmath157 .",
    "a transduction can recover  @xmath83 from  @xmath153 as follows .",
    "each position in  @xmath153 corresponds to a vertex .",
    "the predecessor of the @xmath41-th vertex  @xmath101 is the maximal vertex to the left of  @xmath101 whose label is less than  @xmath155 .",
    "clearly , this predecessor relation is definable in monadic second - order logic .",
    "the two most important properties of @xmath6-transductions are summarised in the following lemmas .",
    "[ lem : transductions are comorphisms ] let @xmath1  be a transduction . for every @xmath6-sentence  @xmath7 , there exists an @xmath6-sentence  @xmath158 such that , for all structures  @xmath11 , @xmath159 furthermore , if @xmath1  is quantifier - free , then the rank of  @xmath158 is no larger than that of  @xmath7 .",
    "[ cor : transductions operate on theories ] for every quantifier - free transduction  @xmath1 and every @xmath131 , there exists a function  @xmath160 on monadic theories of rank  @xmath84 such that @xmath161    for all transductions @xmath162 there exists a transduction  @xmath163 such that @xmath164 .    as a further example note that we can use transductions to translate between order - trees and successor - trees .",
    "there exists a transduction  @xmath1 mapping an order - tree to the corresponding successor - tree .",
    "there exists a transduction  @xmath165 mapping a successor - tree to the corresponding order - tree .",
    "similarly there are transductions translating between a structure and its incidence structure .    for every signature  @xmath48 , there exists a transduction  @xmath1 such that @xmath166 , for all @xmath167 $ ] .",
    "the converse statement is a much deeper result and requires the structure in question to be @xmath9-sparse for some fixed  @xmath9 .",
    "for every signature  @xmath48 and all numbers @xmath59 , there exists an @xmath6-transduction  @xmath1 such that @xmath168 , for all @xmath9-sparse structures @xmath167 $ ] .",
    "we have seen in lemma  [ lem : transductions are comorphisms ] that transductions relate the monadic theories of two structures .",
    "we also need techniques to relate the monadic theory of a structure to those of its substructures .",
    "the disjoint union operation can frequently be used for this purpose ( for a proof of the following theorem see , e.g. , theorem 7.11 of  @xcite , or  @xcite ) .",
    "[ thm : composition for unions ] let @xmath48  and  @xmath169 be relational signatures with constants .",
    "for every @xmath131 , there exists a ( computable ) binary operation  @xmath170 on monadic theories of rank  @xmath84 such that @xmath171 for all @xmath48-structures  @xmath11 and @xmath169-structures  @xmath16 .",
    "below we will mainly make use of the following corollary .",
    "[ lem : composition for trees ] let @xmath70  be an order - tree and @xmath97 a vertex .",
    "suppose that @xmath172  is the order - tree obtained from  @xmath70 by replacing the subtree  @xmath102 by some tree  @xmath173 .",
    "let @xmath174  be a tuple of vertices of  @xmath70 with @xmath175 , for all  @xmath41 . if @xmath37  are vertices of  @xmath102 and @xmath176  are vertices of  @xmath173 such that @xmath177 then it follows that @xmath178    let @xmath179  be the tree obtained from  @xmath70 by replacing the subtree  @xmath102 by a single vertex  @xmath153 .",
    "we define the following auxiliary predicates.08em : @xmath180 we construct a quantifier - free transduction  @xmath1 such that @xmath181 if @xmath160  is the function from corollary  [ cor : transductions operate on theories ] and @xmath170  the operation from theorem  [ thm : composition for unions ] , it follows that @xmath182 as desired .",
    "hence , it remains to define  @xmath1 .",
    "let @xmath183 be the signature of @xmath184 , and @xmath185 the signature of @xmath186 and @xmath187 . for @xmath1  we can use the basic @xmath6-transduction consisting of the following formulae.08em : @xmath188 --",
    "some properties of the transduction hierarchy , which we will introduce in section  [ sect : hierarchy ] below , can be deduced from results about graph minors .",
    "\\(a ) let @xmath189 be an undirected graph and @xmath190 a set of edges .",
    "we denote by @xmath191  the reflexive and transitive closure of  @xmath192 .",
    "note that @xmath191  is an equivalence relation .",
    "the graph @xmath193 is obtained by contracting all edges in  @xmath192 . formally , we have @xmath194 where @xmath195 is the set of equivalence classes and @xmath196  contains an edge between classes @xmath197 $ ] and @xmath198 $ ] if and only if @xmath197 \\neq [ y]$ ] and there are representatives @xmath199 $ ] and @xmath200 $ ] with @xmath201 .",
    "\\(b ) a _ minor _ of a graph  @xmath20 is a graph that can be obtained from  @xmath20 by first deleting some vertices and edges and then contracting some of the remaining edges . for a class  @xmath8 of graphs ,",
    "we denote by @xmath202 the class of all minors of graphs in  @xmath8 .",
    "one central tool in graph minor theory is the notion of a tree decomposition and the related complexity measures called tree - width and path - width .",
    "these notions extend in a natural way to relational structures .",
    "let @xmath60 be a structure .",
    "\\(a ) a _ tree decomposition _ of  @xmath11 is a family @xmath203 of ( possibly empty ) subsets @xmath204 indexed by a rooted tree  @xmath83 such that    * for every element @xmath125 , the set @xmath205 is nonempty and connected in  @xmath83.08em ; * for every tuple @xmath206 , there is some index @xmath97 with @xmath207 .",
    "we call the sets  @xmath208 the _ components _ of the decomposition , and @xmath83  is its _ underlying tree .",
    "_    the _ height _ of a tree decomposition @xmath203 is the height of  @xmath83 , while its _ width _ is the number @xmath209    \\(b ) the _ tree - width _ @xmath210 of  @xmath11 is the minimal width of a tree decomposition of  @xmath11 .",
    "\\(c ) the _ path - width _ @xmath211 of  @xmath11 is the minimal width of a tree decomposition of  @xmath11 where the underlying tree is a path .",
    "\\(d ) the _ @xmath4-depth tree - width _ @xmath212 of  @xmath11 is the minimal width of a tree decomposition of  @xmath11 whose underlying tree has height at most  @xmath4 .",
    "\\(e ) for a class  @xmath8 of structures , we define @xmath213 as the supremum of @xmath210 , for @xmath214 , and similarly for @xmath215 and @xmath216 .",
    "\\(a ) the @xmath4-depth tree - width of a graph  @xmath20 is related to its _ tree - depth _ @xmath217 as introduced by neetil and ossona de mendez @xcite .",
    "the tree - depth of a graph  @xmath20 is the least number  @xmath4 such that some orientation of  @xmath20 is a subgraph of some order - tree of height  @xmath4 . for a graph  @xmath20",
    ", it follows that    * @xmath218 implies @xmath219.08em ; * @xmath220 implies @xmath221 .",
    "these facts are easy to establish .",
    "we will not need them in the following .",
    "\\(b ) there are some simple relations between @xmath4-depth tree - width , path - width , and tree - width . for every graph  @xmath20",
    ", we have @xmath222 ( let us sketch the proof of the last inequality.08em : let @xmath223 be a tree decomposition of  @xmath20 of height  @xmath4 and width @xmath224 . as the components of a path decomposition of  @xmath20 we take all sets of the form @xmath225 , where @xmath226 is a path from the root  @xmath227 to some leaf  @xmath228 of  @xmath83 . )    the next lemma shows that most questions regarding tree decompositions of a structure can be reduced to the corresponding questions about its gaifman graph . for many of the following results it is therefore sufficient to consider graphs .",
    "let @xmath11  be a structure .",
    "a family @xmath223 is a tree decomposition of  @xmath11 if and only if it is a tree decomposition of @xmath229 .",
    "@xmath230 is immediate .",
    "@xmath231 follows from the fact that every tree decomposition of a clique has one component  @xmath208 containing the whole clique .",
    "this implies that , for every clique  @xmath232 in @xmath229 induced by some tuple @xmath206 , there is some vertex @xmath97 with @xmath233 .",
    "hence , every tuple @xmath206 is contained in some component  @xmath208 .    in order to separate the higher classes of the hierarchy",
    ", we shall employ two deep results of robertson and seymour about excluded minors .",
    "[ thm : excluded tree theorem ] for each tree  @xmath70 , there exists a number @xmath59 such that @xmath234    [ thm : excluded grid theorem ] for each planar graph  @xmath235 , there exists a number @xmath59 such that @xmath236    a class of graphs has bounded path - width if and only if it excludes some tree as a minor .",
    "a class of graphs has bounded tree - width if and only if it excludes some planar graph as a minor .",
    "we also need a variant of these theorems for @xmath4-depth tree - width .",
    "the next lemma contains the main technical argument .",
    "suppose that @xmath20  is a graph that does not contain a path of length  @xmath151 .",
    "then @xmath20  has a tree decomposition of height at most  @xmath151 and width at most @xmath237 .",
    "let @xmath238 be a depth - first spanning order - tree of  @xmath20 , i.e. , a spanning tree such that , for every edge @xmath239 of  @xmath20 we have @xmath240 or @xmath104 ( for details see , e.g. , @xcite where such spanning trees are called _ normal _ ) .",
    "we define a tree decomposition @xmath223 of  @xmath20 by setting @xmath241 since @xmath83  is depth - first , it follows that every edge @xmath239 of  @xmath20 is contained in some component  @xmath242 where @xmath153  is the maximum of @xmath103  and  @xmath101 .",
    "the height of the tree  @xmath83 can be at most  @xmath151 since @xmath20  contains no path of length  @xmath151 .",
    "furthermore , we have @xmath243 .",
    "hence , the width of the tree decomposition is at most @xmath237 .",
    "[ thm : excluded path theorem ] for each path  @xmath150 , there exist numbers @xmath244 such that @xmath245    suppose that @xmath246 and let @xmath151  be the length of  @xmath150",
    ". then the preceding lemma implies that @xmath247 .",
    "a class of graphs has bounded @xmath4-depth tree - width , for some  @xmath4 , if and only if it excludes some path as a minor ( equivalently , as a subgraph ) .",
    "a class of graphs has bounded tree - depth if and only if it excludes some path as a minor ( equivalently , as a subgraph ) .",
    "we can also compute a bound on the @xmath4-depth tree - width in terms of the @xmath248-depth tree - width .",
    "it will be needed in the proof of theorem  [ thm : covering for lower part ] below .",
    "we say that the tree @xmath249 can be _ embedded _ into a tree  @xmath91 if there exists an order - preserving injective mapping @xmath250 , i.e. , if @xmath251 , regarded as relational structure , is isomorphic to an induced substructure of @xmath238 .",
    "for instance , we have an embedding        as indicated by the labels .",
    "if @xmath252  can be embedded in  @xmath83 then @xmath252  is isomorphic to a minor of  @xmath83 , when we consider @xmath252  and  @xmath83 as graphs .",
    "let @xmath203 be a tree decomposition and let @xmath253  be a set of edges of ( the successor - tree corresponding to )  @xmath83 .",
    "the tree decomposition @xmath254 obtained by _ contracting _ the edges in  @xmath253 is @xmath255})_{[v ] \\in t / f}\\,,\\end{aligned}\\ ] ] where @xmath256 } : = \\bigcup_{u \\in [ v ] } u_u$ ] .",
    "[ lem : bound on twd - n ] let @xmath20  be a graph and let @xmath257 be a tree decomposition of  @xmath20 of width  @xmath9 and height at most @xmath258 . if @xmath131 is some number such that the tree @xmath259 can not be embedded into  @xmath83 , then @xmath260 .",
    "we construct a tree decomposition  @xmath261 of height at most  @xmath4 and width at most @xmath262 as follows .",
    "let @xmath263 be the minimal ( w.r.t .",
    "@xmath264 ) set of vertices that contains    * every leaf of  @xmath83 at level  @xmath4 and * every vertex that has at least @xmath84  successors in  @xmath265 .",
    "since @xmath259 can not be embedded into  @xmath83 it follows that @xmath265  does not contain the root of  @xmath83 .",
    "let @xmath253  be the set of all edges of  @xmath83",
    "linking a vertex in @xmath266 to a vertex in  @xmath265 . by definition of  @xmath265 it follows that ( i )  every vertex of  @xmath83 has less than  @xmath84 @xmath253-successors.08em ; ( ii )  every path of  @xmath83 from the root to some leaf on level  @xmath4 contains at least one edge from  @xmath253.08em ; and ( iii )  no such path contains two consecutive edges from  @xmath253 .",
    "the decomposition @xmath267 obtained by contracting all edges in  @xmath253 has width at most @xmath268 furthermore , the height of the underlying tree is at most  @xmath4 .",
    "[ cor : bound on twd - n ] let @xmath8  be a class such that @xmath269 and let @xmath131 . if every structure @xmath214 has a tree decomposition @xmath223 of width  @xmath9 and height at most @xmath258 such that the tree @xmath259 can not be embedded into  @xmath83 , then @xmath270 .",
    "we conclude this section with a lemma that will be useful when constructing transductions  @xmath271 that transform a structure into their tree decompositions of height  @xmath4 .",
    "our construction works for all tree decompositions that are _ strict _ in the following sense .",
    "[ def : strict tree decomposition ] let @xmath223 be a tree decomposition of a structure  @xmath11 .",
    "we define a function @xmath272 by @xmath273 note that @xmath274  is well - defined since , by the definition of a tree decomposition , there is at least one @xmath97 such that @xmath275 .    for @xmath97 , we set @xmath276    the tree decomposition @xmath277 is _ strict _ if , for every @xmath97 ,    * @xmath278 ( equivalently , @xmath279 , where @xmath103  is the predecessor of  @xmath101 ) and * if @xmath101  is not the root of  @xmath83 , then the subgraph of @xmath229 induced by the set @xmath280 is connected .",
    "we conclude this section by a result implying that , for our purposes , it will be sufficient to consider only strict tree decompositions .    [",
    "lem : existence of strict tree decompositions ] let @xmath20  be a graph . for every tree decomposition @xmath223 of  @xmath20",
    ", there exists a strict tree decomposition @xmath281 of  @xmath20 whose width and height are at most those of @xmath223 .    by induction on @xmath33 , we will construct a sequence @xmath282 of tree decompositions such that @xmath283  is connected , for every @xmath284 with level @xmath285 .",
    "( recall that @xmath100 denotes the level of  @xmath101 , and the root is the only vertex of level  @xmath71 . ) furthermore , the restriction of  @xmath286 to the set of vertices of level at most  @xmath4 will coincide with the corresponding restriction of  @xmath287 , and we have @xmath288 , for all @xmath289 with level @xmath290 .",
    "it will follow that the sequence has a limit @xmath291 where @xmath292    we start the construction with @xmath293 and @xmath294 .",
    "suppose that we have already defined @xmath282 .",
    "for every vertex @xmath284 of level @xmath295 we modify the tree decomposition as follows .",
    "let @xmath296 be an enumeration of the connected components of  @xmath283 .",
    "we replace in  @xmath286 the subtree rooted at  @xmath101 by @xmath84  copies @xmath297 of the subtree , all attached to the predecessor of  @xmath101 .",
    "for @xmath298 we define @xmath299 .",
    "we can do these modifications for all vertices of level @xmath258 simultaneously .",
    "let @xmath300 be the resulting tree decomposition .",
    "the limit @xmath291 of this sequence satisfies the connectedness requirement of a strict tree decomposition . to also satisfy the other condition we proceed as follows",
    "let @xmath253  be the set of all edges @xmath239 of  @xmath301 such that @xmath302 .",
    "( note that this implies @xmath303 . )",
    "we construct the tree decomposition @xmath281 by contracting all edges in  @xmath253 .",
    "the details and the remaining verifications are left to the reader .",
    "in this section we relate the material presented in the preceding one to monadic second - order transductions .",
    "let us start by showing that there is a transduction computing the minors of a graph .",
    "[ lem : minors interpretable ] there exists a transduction  @xmath1 such that @xmath304 , for every graph  @xmath20 .    a minor  @xmath305 of  @xmath20 is obtained by deleting vertices , deleting edges , and contracting edges .",
    "hence , we can encode  @xmath305 by four sets.08em : the set of vertices we delete , the set of edges we delete , the set of edges we contract , and a set of vertices containing one representative of each contracted subgraph of  @xmath20 ( these vertices serve as vertices of the resulting graph  @xmath305 ) . with the help of these parameters we can define  @xmath305 inside of  @xmath306 by @xmath6-formulae .",
    "there is a close relationship between tree decompositions and transductions .",
    "[ lem : tree decomposable implies interpretable ] for every signature  @xmath48 and every number @xmath59 , there exists a transduction @xmath307 $ ] that maps an order - tree  @xmath83 to the class of all incidence structures  @xmath27 such that the corresponding @xmath48-structure  @xmath11 has a tree decomposition of width at most  @xmath9 with underlying tree  @xmath83 .",
    "suppose that @xmath11  is a structure which has a tree decomposition @xmath223 of width  @xmath9 .",
    "we prove that @xmath11  can be defined from a colouring of  @xmath83 where the number of colours depends only on @xmath48  and  @xmath9 .",
    "let @xmath308 be an enumeration of all @xmath48-structures whose domain is a subset of @xmath309 $ ] .",
    "for each @xmath97 , let @xmath310  be the substructure of  @xmath11 induced by  @xmath208 .",
    "it follows that , for every @xmath97 , we can find some index @xmath311 such that @xmath312 .",
    "let @xmath313 be the corresponding isomorphism .",
    "furthermore , we associate with each edge @xmath239 of  @xmath83 the binary relation @xmath314 \\times [ k+1]\\,.\\end{aligned}\\ ] ]    we can recover  @xmath11 from  @xmath83 with the help of the vertex colouring  @xmath315 and the edge colouring  @xmath47 .",
    "we form the disjoint union of all structures @xmath316 , for @xmath97 , and we identify two elements @xmath317 and @xmath318 if @xmath239 is an edge of  @xmath83 such that @xmath319 .",
    "this can be performed by an @xmath4-copying @xmath6-transduction where @xmath4  is the maximal size of the structures @xmath320 , @xmath321 .",
    "we have just seen that we can map a class of trees to a class of structures with these trees as tree decompositions .",
    "conversely , if we only consider strict tree decompositions , we can define a transduction mapping a class of structures to the corresponding class of trees .",
    "recall the function @xmath272 from definition  [ def : strict tree decomposition ] .",
    "that assigns to an element @xmath125 the minimal index @xmath97 such that @xmath275 .",
    "[ prop : strict tree decompositions definable ] for each number @xmath33 , there exists an @xmath6-formula @xmath322 such that , for every strict tree decomposition @xmath203 of a graph  @xmath20 of height at most  @xmath4 , there are sets @xmath323 such that @xmath324    given  @xmath72 we use the sets @xmath325 of all elements that first appear at level  @xmath41 of the tree .",
    "in particular , @xmath326 is the root component of the tree decomposition . for @xmath327 ,",
    "let @xmath328  be the subgraph of  @xmath20 induced by @xmath329 .",
    "for @xmath330 and @xmath331 we define @xmath332 clearly , the relation  @xmath79 is @xmath6-definable with the help of the parameters  @xmath333 .",
    "we claim that , for @xmath334 , we have @xmath335    @xmath231 suppose that @xmath336 . then @xmath337 .",
    "furthermore , @xmath338 is connected since @xmath72  is strict .",
    "hence , @xmath338 is a connected component of @xmath339 containing both @xmath340  and  @xmath341 . since @xmath342 it follows that @xmath343 .",
    "@xmath230 suppose that @xmath343 .",
    "then there exists an undirected path  @xmath344 in  @xmath345 connecting @xmath340  and  @xmath341 . since @xmath346 , for all @xmath347 such that @xmath348 , it follows that @xmath344  is contained in some @xmath280 such that @xmath349 . since @xmath340  is a vertex of  @xmath344 we must have @xmath350 .",
    "furthermore , @xmath337 since @xmath341  is also a vertex of  @xmath344 .",
    "this implies that @xmath336 .",
    "[ thm : strict tree decompositions can be computed by a transduction ] for each constant @xmath33 , there exists a transduction  @xmath271 mapping a graph  @xmath20 to the class of all ( underlying trees of ) strict tree decompositions of  @xmath20 of height at most  @xmath4 .",
    "let @xmath203 be a strict tree decomposition of  @xmath20 , and let @xmath351 be the formula from proposition  [ prop : strict tree decompositions definable ] with parameters @xmath323 .",
    "we can define the tree  @xmath83 underlying  @xmath72 as follows.08em :    * its root is any element of  @xmath326 .",
    "* for the other vertices of  @xmath83 , we choose one vertex in each @xmath352-class different from  @xmath353 .",
    "note that @xmath352  is definable with the help of  @xmath354 . *",
    "the ordering of  @xmath83 is defined by  @xmath354 .",
    "hence , we obtain a transduction with parameters  @xmath333 that transforms a graph into a ` candidate ' tree decomposition . via a backwards translation",
    "we can write down a formula stating that the candidate given by the parameters  @xmath333 corresponds to an actual strict tree decomposition .",
    "we omit the details which are standard for this type of construction .",
    "in lemma  [ lem : tree decomposable implies interpretable ] we have seen how to obtain classes of bounded tree - width from classes of trees .",
    "conversely , it is the case that every class obtained from a class of trees via a transduction has a bounded tree - width .",
    "[ thm : interpretable implies tree decomposable ] for every transduction @xmath355 $ ] , there exists a number @xmath59 such that , for each @xmath84-coloured tree  @xmath70 with image @xmath356 , the structure @xmath11  has a tree decomposition of width at most  @xmath9 where the underlying tree is  @xmath70 .",
    "\\(a ) courcelle and engelfriet  @xcite have shown that an incidence structure  @xmath27 obtained via a transduction  @xmath1 from an @xmath84-coloured tree  @xmath70 has bounded tree - width .",
    "theorem  [ thm : interpretable implies tree decomposable ] strengthens this result by proving that , if @xmath27  is the image of a tree  @xmath70 , then we can use the same tree  @xmath70 as the tree underlying a tree decomposition of the given width .",
    "\\(b ) lapoire has announced in  @xcite a result somewhat related to theorem  [ thm : strict tree decompositions can be computed by a transduction ] .",
    "he claims that , for every @xmath59 , there exists a transduction that transforms a given graph  @xmath20 of tree - width at most  @xmath9 to a coloured tree ( like in the proof of lemma  [ lem : tree decomposable implies interpretable ] ) that encodes some tree decomposition of  @xmath20 of width at most  @xmath9 .",
    "our result is less ambitious in the sense that we only consider tree decompositions of a fixed height .",
    "this enables us to give a precise description of which tree decompositions ( the strict ones ) our transduction returns .",
    "note that one can show that , for @xmath122 , there is no such transduction that would return _ all _ tree decompositions of  @xmath20 of width at most  @xmath9 .",
    "we split the proof into several lemmas .",
    "as a technical tool we introduce a second kind of hierarchical decompositions of structures and a corresponding notion of width . to simplify the definition we will only consider incidence structures .",
    "let @xmath357 be an incidence structure .",
    "\\(a ) a _ partition refinement _ of  @xmath27 is a family @xmath358 of pairs consisting of a subset @xmath359 and an equivalence relation  @xmath360 on  @xmath361 with the following properties.08em :    * the index set  @xmath83 is a tree . * for the root  @xmath82 , we have @xmath362 * for every internal vertex ( i.e. , non - leaf ) @xmath98 with successors @xmath363 , the sets @xmath364 form a partition of  @xmath365 .",
    "* @xmath366 , for every leaf @xmath98 .",
    "* @xmath367 and @xmath240 implies @xmath368 . * if @xmath103  is an internal vertex of  @xmath83 , @xmath369 successors of  @xmath103 , not necessarily distinct , and @xmath370 , @xmath371 elements , then @xmath368 implies either @xmath372    note that it follows that , for every element @xmath373 , there is some leaf @xmath98 such that @xmath374 .",
    "\\(b ) the _ width _ of a partition refinement @xmath358 is the maximum number of equivalence classes realised in some component  @xmath361.08em : @xmath375 the _ partition - width _ of the structure  @xmath27 is the minimal width of a partition refinement of  @xmath27 .",
    "the notion of a partition refinement and of partition - width are adaptations of definitions from @xcite .",
    "up to a factor of  @xmath58 , the partition - width of an incidence structure and its clique - width coincide .",
    "let @xmath376 be a structure with domain @xmath377 and a ternary relation @xmath378 its incidence structure is @xmath379 with @xmath380 .",
    "we obtain a partition refinement        where we have indicated the partition into @xmath360-classes by vertical bars .",
    "this partition refinement has width  @xmath381 .",
    "[ lem : tree decomposition bounded by partition width ] for every partition refinement @xmath358 of an incidence structure @xmath382 , there exists a tree decomposition @xmath203 of  @xmath11 with the same underlying tree  @xmath83 such that @xmath383    let @xmath384 be the function assigning to every @xmath373 the unique leaf @xmath385 of  @xmath83 such that @xmath386 .",
    "we claim that the desired tree decomposition @xmath387 of  @xmath11 is given by @xmath388 note that the connectedness condition holds since @xmath389 implies that @xmath101  belongs to precisely those components  @xmath390 such that  @xmath103 lies on the path from  @xmath391 to  @xmath392 .",
    "it remains to prove that @xmath393 .",
    "if @xmath394 , for some @xmath395 , then @xmath396 consists of the components of  @xmath174 . hence , @xmath397",
    "therefore , we may assume that @xmath398 $ ] .",
    "let @xmath399_u : = \\set { y \\in w_u } { y \\approx_u x } \\end{aligned}\\ ] ] denote the @xmath400-class of  @xmath77 .",
    "we prove the following bounds .",
    "@xmath401_u } = 1 $ ] , for all @xmath402 .",
    "@xmath401_u \\cap u_u } \\leq 2 $ ] , for all @xmath403 .",
    "@xmath404 .    since @xmath405",
    "it then follows that @xmath406 .",
    "\\(1 ) let @xmath402 .",
    "there is some tuple @xmath407 and some index  @xmath41 such that @xmath408 and @xmath409 .",
    "we have @xmath410 , for every @xmath411 such that @xmath412 . since @xmath77  is the only such element it follows that @xmath197_u = \\{x\\}$ ] .",
    "\\(2 ) let @xmath403 .",
    "there is some tuple @xmath407 and some  @xmath41 such that @xmath408 and @xmath413 .",
    "let @xmath101  be the successor of  @xmath103 such that @xmath414 .",
    "we have @xmath410 , for all @xmath415 such that @xmath412 .",
    "hence , @xmath197_u \\smallsetminus w_v = \\{x\\}$ ] .",
    "suppose that there is some element @xmath416_u \\cap w_v \\cap u_u$ ] . by definition of  @xmath390",
    "there is some tuple  @xmath417 and some  @xmath418 such that @xmath419 and @xmath420 . as above it follows that @xmath197_u \\cap w_v = \\{y\\}$ ] .",
    "consequently , we have @xmath401_u \\cap u_u } \\leq 2 $ ] .",
    "\\(3 ) let @xmath421 and consider some tuple @xmath407 such that @xmath408 and @xmath422 .",
    "set @xmath423 for @xmath424 , it follows that @xmath425 furthermore , we obviously have @xmath426 .",
    "it follows that @xmath427  contains at most @xmath428 vertices .",
    "[ lem : partition width of simple tree interpretations ] let @xmath355 $ ] be a basic @xmath6-transduction such that , for every @xmath84-coloured order - tree  @xmath70 with image @xmath356 , we have @xmath429 then there exists a number @xmath33 such that , for every order - tree  @xmath70 , we can find a partition refinement @xmath430 of @xmath431 of width at most  @xmath4 .",
    "let @xmath432 be the definition scheme of  @xmath1 , and let @xmath433  be the maximal rank of these formulae .",
    "given  @xmath70 we define the desired partition refinement @xmath434 by setting @xmath435 \\prefixtext{and }    & x \\approx_u y \\quad\\defiff\\quad    \\begin{aligned}[t ]      & { \\mathrm{mth}}_h(\\frakt_v , x ) = { \\mathrm{mth}}_h(\\frakt_w , y)\\ , , \\\\      & \\text{where $ v , w$ are the successors of $ u$ with }       x \\in w_v \\text { and } y \\in w_w\\ , .    \\end{aligned}\\end{aligned}\\ ] ] ( if @xmath103  is a leaf of  @xmath83 then @xmath374 and we take the equality relation for  @xmath400 . ) note that the index of  @xmath360 is finite and that it only depends on  @xmath433 and not on the input tree  @xmath70 .",
    "it remains to show that @xmath436  is actually a partition refinement .",
    "first , let us prove that @xmath367 and @xmath240 implies @xmath368 .",
    "it is sufficient to consider the case that @xmath103  is the predecessor of  @xmath101 .",
    "then the general case follows by induction .",
    "hence , suppose that @xmath101  is a successor of  @xmath103 , that @xmath437 are successors of  @xmath101 , and that @xmath438 are leaves with @xmath439 and @xmath440 such that @xmath367",
    ". then we have @xmath441 which , by lemma  [ lem : composition for trees ] , implies that @xmath442 consequently , we have @xmath368",
    ".    we also have to show that the incidence relation is invariant under  @xmath400 .",
    "let @xmath369  be successors of  @xmath103 and suppose that @xmath438 are leaves with @xmath443 and @xmath444 such that @xmath368 .",
    "we distinguish two cases .",
    "suppose that @xmath445 and let @xmath446 be an edge . since @xmath447 it follows that @xmath448 hence , @xmath408 iff @xmath410 .",
    "now , suppose that @xmath449 and let @xmath450 be an element . since @xmath447 it follows that @xmath451 hence , @xmath452 iff @xmath453 .",
    "\\(1 ) first , suppose that @xmath355 $ ] is a basic @xmath6-transduction such that , for every @xmath84-coloured order - tree @xmath454 with image @xmath356 , we have @xmath429 it follows by lemma  [ lem : partition width of simple tree interpretations ] that there is a number @xmath455 such that , for every tree  @xmath70 , we can find a partition refinement of @xmath356 with underlying tree  @xmath70 whose width is at most  @xmath153 .",
    "by lemma  [ lem : tree decomposition bounded by partition width ] it follows that @xmath11  has a tree decomposition @xmath223 with underlying tree  @xmath70 and whose width is less than @xmath456 .",
    "\\(2 ) if @xmath1  is a basic @xmath6-transduction such that @xmath457 then we can argue similarly .",
    "let @xmath458  be the @xmath6-transduction mapping  @xmath70 to the structure obtained from @xmath431 by adding one isolated element for every leaf of  @xmath70 that does not correspond to an element of  @xmath431 .",
    "then @xmath458  is of the form considered in  ( 1 ) and we obtain a tree decomposition  @xmath223 of @xmath459 . deleting from every component  @xmath208 all elements not in  @xmath431 we obtain the desired tree decomposition of  @xmath431 .",
    "\\(3 ) suppose that @xmath1  is a non - copying @xmath6-transduction as in  ( 2 ) but with  @xmath460 parameters .",
    "we can regard  @xmath1 as a basic @xmath6-transduction @xmath461 $ ] . by",
    "( 2 ) it follows that , for every value of the parameters  @xmath92 , the structure @xmath462 has a tree decomposition of the required form .",
    "\\(4 ) finally , consider the general case .",
    "suppose that @xmath1  is @xmath151-copying .",
    "given  @xmath70 let @xmath463  be the tree obtained from  @xmath70 by adding  @xmath151 new successors to every vertex of  @xmath70 .",
    "formally , suppose that @xmath81 , for some finite set  @xmath72 . w.l.o.g .",
    "we may assume that @xmath464 = \\emptyset$ ] .",
    "we define the domain @xmath465)^{<\\omega}$ ] of  @xmath463 by @xmath466)\\,.\\end{aligned}\\ ] ] furthermore , we add new colour predicates @xmath467\\,.\\end{aligned}\\ ] ] note that every element of @xmath431 is of the form @xmath468 where @xmath469 $ ] and @xmath97 . hence , each such element corresponds to a leaf @xmath470 \\subseteq t^+$ ] . using the parameters  @xmath471",
    "we can construct a basic @xmath6-transduction @xmath472 $ ] satisfying the conditions of  ( 3 ) such that @xmath473 . by  ( 3 )",
    ", we obtain a tree decomposition @xmath474 of @xmath473 .",
    "let @xmath475 be the tree decomposition obtained from  @xmath476 by contracting every edge leading to a leaf in @xmath477 .",
    "then we have @xmath478 --",
    "the focus of our investigation lies on the following preorder on classes of structures which compares their ` encoding powers ' with respect to @xmath6-transductions .",
    "our main result is a complete description of the hierarchy induced by this preorder .",
    "it will be given in theorem  [ thm : hierarchy ] .",
    "let @xmath479 .",
    "we define the following relations .",
    "@xmath480 if there exists a transduction  @xmath1 such that @xmath18 .",
    "@xmath481 if @xmath480 and @xmath482 .",
    "@xmath483 if @xmath480 and @xmath484 .",
    "@xmath485 if @xmath481 and there is no class  @xmath486 with @xmath487 .",
    "@xmath488 if @xmath489 .",
    "the relations @xmath490 , @xmath491 , and @xmath492 are defined analogously to @xmath493 , @xmath494 , @xmath495 by replacing  @xmath29 everywhere by  @xmath28 .",
    "the _ transduction hierarchy _ is the hierarchy of classes @xmath496 induced by the relation  @xmath28 .    as the class of transductions",
    "is closed under composition , it follows that the relation  @xmath28 is a preorder , i.e. , it is reflexive and transitive .",
    "@xmath28  is a preorder on @xmath497 .",
    "we consider the following subclasses of @xmath498 $ ] .",
    "( all trees below are considered to be successor - trees . )",
    "@xmath499 is the set of all complete @xmath84-ary trees of height  @xmath4 .",
    "@xmath500 is the class of all binary trees .",
    "@xmath501 is the class of all trees .",
    "@xmath502  is the class of all paths .",
    "@xmath503  is the class of all rectangular grids .",
    "the following description of the transduction hierarchy is the main result of the present paper .",
    "[ thm : hierarchy ] we have the following hierarchy.08em : @xmath504 for every signature  @xmath48 , every class @xmath505 $ ] is @xmath491-equivalent to some class in this hierarchy .    there is a lot of flexibility in the choice of representatives for the various levels .",
    "for instance , we could replace  @xmath506 by the class of _ all _ trees of height at most  @xmath4 , @xmath501 by @xmath500 or @xmath507 , and @xmath503  by the class of square grids .",
    "it is straightforward to show that the above classes form an increasing chain .",
    "the hard part is to prove that the chain is strictly increasing and that there are no further classes .",
    "we have @xmath508    in the example before lemma  [ lem : transductions are comorphisms ] , we have constructed transductions  @xmath271 such that @xmath509 .",
    "hence , @xmath510 .",
    "the remaining assertions follow from the observation that , by lemma  [ lem : minors interpretable ] , @xmath511 implies @xmath488 .",
    "let us collect some easy properties of the hierarchy .",
    "our first result states that @xmath503  is a representative of the top level of the transduction hierarchy .",
    "[ lem : g is top ] @xmath49 \\sqsubseteq_{\\mathrm{in}}\\calg$ ]    recall that the @xmath512 grid is the undirected graph @xmath189 with vertices @xmath513 \\times [ n]$ ] and edge relation @xmath514 before encoding arbitrary structures in such grids we describe a transduction mapping  @xmath20 to its directed variant @xmath515 where @xmath516 this can be done with the help of the parameters @xmath517 where @xmath518 then @xmath519 it is easy to write down a formula checking that the parameters @xmath520  and  @xmath521 are correctly chosen ( see , e.g. , @xcite ) .    to show that @xmath49 \\sqsubseteq_{\\mathrm{in}}\\calg$ ] , suppose that @xmath167",
    "$ ] is a structure with @xmath522 .",
    "fix enumerations @xmath523 of  @xmath43 and @xmath524 of  @xmath192 . by the above remarks ,",
    "it is sufficient to encode  @xmath27 in the directed @xmath512 grid .",
    "consider the following subsets of @xmath525 \\times [ n]$].08em : @xmath526 \\times \\{0\\}\\,,\\qquad    & p'_r & : = \\set { \\langle 0,k\\rangle } { e_k \\in p_r } \\ , , \\\\    e '    & : = \\{0\\ } \\times [ n]\\,,\\qquad    & i'_l & : = \\set { \\langle i , k\\rangle } { ( a_i , e_k ) \\in { \\mathrm{in}}_l } \\,.\\end{aligned}\\ ] ] then @xmath27 can be recovered from  @xmath20 by an @xmath6-transduction using these sets as parameters .",
    "@xmath527 .    for one direction ,",
    "note that @xmath528 implies @xmath529 .",
    "conversely , each finite tree can be obtained as minor of a binary tree .",
    "therefore , we have @xmath530 .    we have @xmath531 if and only if @xmath8  is finite and contains at least one nonempty structure .",
    "as indicated in the example before lemma  [ lem : transductions are comorphisms ] , there exists a transduction mapping an incidence structure  @xmath27 to the incidence structure @xmath146 of the gaifman graph of  @xmath11 .",
    "[ lem : gaifman graph interpretable ] for every class  @xmath8 of structures , we have @xmath532 .",
    "the next result is just a restatement of lemma  [ lem : minors interpretable ] in our current terminology .",
    "[ lem : minor equivalent ] for every class  @xmath8 of graphs we have @xmath533 .",
    "in this section we prove that the hierarchy is strict .",
    "using the results of section  [ sect : tree decompositions and transductions ] we can characterise each level of the hierarchy in terms of tree - width and its variants .",
    "[ thm : characterisation of pwd , twd ] let @xmath505 $ ] .",
    "@xmath534 @xmath535 .",
    "@xmath536 @xmath537 .",
    "@xmath538 @xmath539 .    in each case @xmath231 follows from lemma  [ lem : tree decomposable implies interpretable ] and @xmath230 follows from theorem  [ thm : interpretable implies tree decomposable ] .",
    "let @xmath8  be a class of @xmath48-structures .",
    "@xmath540 implies @xmath541 .",
    "@xmath542 implies @xmath543 .",
    "\\(a ) suppose that @xmath540 .",
    "then theorem  [ thm : excluded tree theorem ] implies that @xmath544 .",
    "hence , the claim follows from lemmas [ lem : gaifman graph interpretable ]  and  [ lem : minor equivalent ] .",
    "\\(b ) suppose that @xmath542 .",
    "then theorem  [ thm : excluded grid theorem ] implies that @xmath545 . as in  ( a )",
    ", the claim follows from lemmas [ lem : gaifman graph interpretable ]  and  [ lem : minor equivalent ] .",
    "[ cor : nothing between p , t , g ] let @xmath505 $ ] .",
    "@xmath546 implies @xmath541 .",
    "@xmath547 implies @xmath548 .",
    "in particular , it follows that the upper part of the hierarchy is strict.08em :    [ cor : upper part ] @xmath549    both assertions follow from theorem  [ thm : characterisation of pwd , twd ] and corollary  [ cor : nothing between p , t , g ] .    for the first one , note that we have @xmath550 since @xmath551 .",
    "conversely , @xmath552 implies , by theorem  [ thm : characterisation of pwd , twd](a ) , that @xmath553 .",
    "hence , @xmath554 . finally , if @xmath555 then @xmath534 , by corollary  [ cor : nothing between p , t , g](a ) .",
    "consequently , we have @xmath556 .",
    "similarly , the fact that @xmath557 follows from lemma  [ lem : g is top ] .",
    "since @xmath558 , theorem  [ thm : characterisation of pwd , twd](b ) implies that @xmath559 . finally , we obtain @xmath560 by corollary  [ cor : nothing between p , t , g](b ) .",
    "let us turn to the lower part .",
    "we start with two technical lemmas .",
    "let @xmath561 be an order - tree .",
    "vertices @xmath562 of  @xmath83 are _ horizontally related via _ a vertex  @xmath153 if all  @xmath156 are at the same level of the tree and @xmath563 , for all @xmath564 .",
    "[ lem : large degree is preserved ] let @xmath70 be a coloured order - tree of height  @xmath4 , and suppose that @xmath1  is a parameterless @xmath9-copying @xmath6-transduction of rank  @xmath52 such that @xmath431 is a successor - tree of height at most @xmath258 . consider vertices @xmath562 of  @xmath70 that are horizontally related via  @xmath153 and fix some number @xmath565 .",
    "let @xmath566  be the successor of  @xmath153 with @xmath567 .",
    "if , for all @xmath568 , we have @xmath569 then at least @xmath570 elements of the set @xmath571 ( these are elements of the domain of @xmath431 ) are horizontally related in @xmath431 .",
    "let @xmath572 be the formula defining the successor relation in @xmath431 between vertices of the form @xmath573 and @xmath574 . by assumption",
    "the rank of  @xmath572 is at most  @xmath52 .",
    "first , note that a vertex @xmath575 is on level  @xmath433 in @xmath431 if and only if there are indices @xmath576 such that @xmath577        \\exists y_0\\cdots\\exists y_{h-1}\\bigl[\\land_{i < h-1 } \\varphi_{s_is_{i+1}}(y_i , y_{i+1 } )        & \\land \\varphi_{s_{h-1}l}(y_{h-1},v ) \\\\        & \\land \\neg \\exists z\\lor_{s < k }",
    "\\varphi_{ss_0}(z , y_0)\\bigr ]      \\end{aligned}\\end{aligned}\\ ] ] expresses that there exists a path of the form @xmath578 from the root @xmath579 of  @xmath431 to the vertex @xmath575 . by assumption on  @xmath156 and lemma",
    "[ lem : composition for trees ] , we have @xmath580 since the rank of @xmath581 is @xmath582 it follows that @xmath583 hence , all vertices @xmath584 are on the same level  @xmath433 in @xmath431 .",
    "we prove by induction on  @xmath433 that @xmath585 implies that all but at most one of @xmath584 are horizontally related .",
    "let @xmath586  be the predecessor of @xmath587 in @xmath431 , that is , @xmath588 we distinguish two cases .",
    "first suppose that @xmath589 in  @xmath70 . by  @xmath590 and lemma  [ lem : composition for trees ]",
    ", we have @xmath591 for all  @xmath41 such that @xmath592 .",
    "note that there can be at most one index  @xmath41 that does not satisfy this condition since , if we had @xmath593 and @xmath594 , for @xmath595 , then we would have @xmath596 and @xmath562 would not be horizontally related via  @xmath153 .",
    "it follows that @xmath597 hence , @xmath598 is the common predecessor of all the @xmath587 , except for possibly one of them .",
    "( for an index  @xmath41 with @xmath593 our composition argument does not work since in that case @xmath590  does not imply that the theories of @xmath599 and @xmath600 coincide . )",
    "it remains to consider the case that @xmath601 .",
    "setting @xmath602 we have @xmath603\\,.\\end{aligned}\\ ] ] since the rank of this formula is @xmath604 it follows that @xmath605\\ , ,    \\quad\\text{for all } i < m\\,.\\end{aligned}\\ ] ] consequently , we have @xmath606 , for all  @xmath41 , and @xmath607 are horizontally related via  @xmath153 .",
    "since the vertices @xmath608 are on level @xmath609 in @xmath431 , we can apply the induction hypothesis and it follows that all but at most one of then are horizontally related via some vertex  @xmath610 .",
    "therefore , the same holds for their successors @xmath584 .",
    "we denote by @xmath611 the number of functions @xmath612)$ ] with @xmath613 .",
    "intuitively , each such function corresponds to a vertex - colouring of the tree @xmath85 with @xmath614  colours .    for @xmath615 and @xmath122",
    ", we have @xmath616    for @xmath617 , we have @xmath618 since @xmath619^{<n } } = \\sum_{i < n } m^i = m^{n-1 } + \\sum_{i < n-1 } m^i$ ] it follows that @xmath620^{<n } } \\leq 2m^{n-1}.\\end{aligned}\\ ] ] therefore , we can bound @xmath621^{<n}}}\\end{aligned}\\ ] ] from above by @xmath622 and from below by @xmath623 --    [ lem : lower part strict ] @xmath624    for a contradiction , suppose that there exists a transduction  @xmath1 such that @xmath625 .",
    "let @xmath626  be the class of all order - trees corresponding to successor - trees in  @xmath506 , and let @xmath627 be the class of all coloured successor - trees with one colour whose underlying tree is in  @xmath628 .",
    "since the successor - trees in  @xmath506 are @xmath63-sparse we can construct an @xmath6-transduction  @xmath629 such that @xmath630 . since @xmath631",
    "we can combine @xmath1  and  @xmath629 to a transduction  @xmath165 such that @xmath632 . by lemma  [ lem : large degree is preserved ] , it follows that there is some constant  @xmath633 such that every tree @xmath634 with out - degree at most  @xmath9 is of the form @xmath635 where @xmath636 has out - degree at most  @xmath637 .",
    "( the out - degree of an order - tree is the out - degree of the corresponding successor - tree . )",
    "suppose that @xmath165  uses @xmath614  parameters .",
    "there are @xmath638 colourings of trees in @xmath626 with out - degree at most  @xmath637 .",
    "on the other hand , there are @xmath639 trees in @xmath640 with out - degree at most  @xmath9 . for large  @xmath9",
    "it follows that @xmath641 consequently , there is some tree in @xmath640 that is not the image of a tree in  @xmath626 . a  contradiction .",
    "we have shown that the hierarchy presented in theorem  [ thm : hierarchy ] is strict . to conclude the proof of the theorem it therefore remains to show that there are no additional classes .",
    "we have already seen in corollary  [ cor : upper part ] that @xmath501  and  @xmath503 are the only classes above @xmath502 . next we shall prove that @xmath642 .",
    "[ lem : embeddable trees means interpretable ] let @xmath8  be a class of structures . if , for every number @xmath131 , there exists a structure @xmath214 such that we can embed @xmath259 into every tree underlying a tree decomposition @xmath223 of  @xmath11 of width  @xmath9 , then @xmath643 .    by lemma  [ lem :",
    "existence of strict tree decompositions ] , it follows that , for every @xmath131 , there is a structure in  @xmath8 with a strict tree decomposition of width at most  @xmath9 and with an underlying tree  @xmath83 into which we can embed the tree  @xmath259 . according to proposition  [ prop : strict tree decompositions definable ]",
    "there is a transduction mapping  @xmath8 to the class of trees underlying these strict tree decompositions .",
    "hence , there exists a class @xmath644 of successor - trees containing , for every @xmath131 , some tree into which we can embed @xmath259 .",
    "hence , @xmath645 .",
    "[ thm : covering for lower part ] let @xmath8  be a class of structures",
    ". then @xmath646 implies @xmath539 .",
    "suppose that @xmath646 .",
    "then @xmath647 since @xmath648 . by lemmas [ lem : gaifman graph interpretable ]  and  [ lem : minor equivalent ]",
    ", this implies that @xmath649 .",
    "therefore , we can find a path that is not in @xmath650 . by theorem  [ thm : excluded path theorem ] , it follows that there are numbers @xmath651 such that @xmath652 .    by induction on  @xmath151 , we prove that @xmath653 implies @xmath539 . for @xmath654 , there is nothing to do . for @xmath655",
    ", we have @xmath656 , which implies that @xmath657 .",
    "consequently , it follows by lemma  [ lem : embeddable trees means interpretable ] and corollary  [ cor : bound on twd - n ] that @xmath658 . by induction hypothesis",
    ", the result follows .    by lemma  [ lem : tree",
    "decomposable implies interpretable ] we obtain the following results .",
    "[ cor : nothing between tn and tn+1 ] if @xmath646 then @xmath538 .",
    "[ cor : lower part covers ] @xmath659 .    to conclude the proof of theorem  [ thm : hierarchy ]",
    "it remains to show that there are no classes between the lower part of the hierarchy and its upper part .",
    "[ lem : calt_n dense below calp ] let @xmath8  be a class of structures .",
    "if @xmath660 , for all @xmath33 , then @xmath661 .",
    "we show the contraposition .",
    "suppose that @xmath647 .",
    "we have to show that there is some  @xmath4 such that @xmath662 . as in the proof of theorem  [ thm : covering for lower part ] it follows that there are numbers @xmath651 such that @xmath652 .",
    "hence , we can use lemma  [ lem : tree decomposable implies interpretable ] to obtain a transduction  @xmath1 witnessing that @xmath663 . by theorem  [ lem : lower part strict ]",
    "we have @xmath664 .",
    "it follows that @xmath665 , as desired .",
    "[ cor : noting between lower and upper part ] if @xmath666 then there is some @xmath33 such that @xmath538 .    by lemma  [ lem : calt_n dense below calp ] , there is some @xmath33 such that @xmath646 .",
    "hence , corollary  [ cor : nothing between tn and tn+1 ] implies that @xmath538 .",
    "together , corollaries [ cor : upper part ] ,  [ cor : lower part covers ] , and  [ cor : noting between lower and upper part ] ( and the fact that every class  @xmath8 satisfies @xmath667 ) show that every class of @xmath48-structures is @xmath491-equivalent to some of the classes in theorem  [ thm : hierarchy ] .",
    "this completes the proof of this theorem .",
    "above we have obtained a complete description of the transduction hierarchy for classes of finite incidence structures .",
    "the most surprising result is that the hierarchy is linear . at this point",
    "there are at least three natural directions in which to proceed .",
    "an answer to  ( ii ) seems within reach , at least if we restrict our attention to countable structures .",
    "although the resulting hierarchy is no longer linear we can adapt most of our techniques to this setting .",
    "( for an example of nonlinearity , note that the class of all countable trees and the class of all finite grids are incomparable . )    concerning question  ( iii ) , let us remark that all results above go through if we use @xmath110 instead of  @xmath6 .",
    "we only need the right definition of rank for @xmath110 . in the proof of theorem  [ lem : lower part strict ] we needed the fact that there are only finitely many theories of bounded rank",
    ". we can ensure this for @xmath110 by defining the rank as the least number  @xmath4 such that        for logics much weaker than @xmath6 , on the other hand , it seems unrealistic to hope for a complete description of the corresponding transduction hierarchy .",
    "for instance , a related hierarchy for first - order logic was investigated by mycielski , pudlk , and stern in  @xcite .",
    "the results they obtain indicate that the structure of the resulting hierarchy is very complicated .",
    "finally , let us address question  ( i ) .",
    "when using transductions between structures instead of their incidence structures , we can transfer some of the above results to the corresponding hierarchy .",
    "but we presently have no complete description since we miss some of the corresponding excluded minor results .",
    "note that all classes in theorem  [ thm : hierarchy for mso ] are @xmath58-sparse . for @xmath58-sparse classes @xmath8 and  @xmath17 , lemma  [ lem : relation between ad and in ] implies that @xmath679 consequently , the result follows from theorem  [ thm : hierarchy ] .",
    "if we only consider classes of graphs and if we use @xmath110-transductions instead of @xmath6-transductions , then the following result can be used as replacement of theorem  [ thm : excluded grid theorem].08em :      this eliminates some possibilities for intermediate classes of graphs in the hierarchy of theorem  [ thm : hierarchy for mso ] , but to complete the picture we still need analogues of proposition  [ prop : strict tree decompositions definable ] and of theorems [ thm : excluded tree theorem ]  and  [ thm : excluded path theorem ] .",
    "furthermore , the techniques of  @xcite are specific to graphs ( or , more generally , to relational structures where all relations are binary ) .",
    "even with the results of  @xcite one can not exclude the existence of a class  @xmath8 of arbitrary relational structures strictly between @xmath501  and  @xmath503 in the @xmath110-transduction hierarchy .",
    "let us make a final comment about relational structures .",
    "an incidence structure  @xmath27 can be seen as a bipartite labelled directed graph ( see the remark after definition  [ def : incidence structure ] ) .",
    "furthermore , it is @xmath63-sparse .",
    "hence , our results use tools from graph theory , in particular those of @xcite",
    ". however , there is currently no encoding of relational structures as labelled graphs that could help to solve question  ( i ) above ."
  ],
  "abstract_text": [
    "<S> we compare classes of finite relational structures via monadic second - order transductions . </S>",
    "<S> more precisely , we study the preorder where we set @xmath0 if , and only if , there exists a transduction @xmath1 such that @xmath2 . </S>",
    "<S> if we only consider classes of _ incidence structures _ we can completely describe the resulting hierarchy . </S>",
    "<S> it is linear of order type @xmath3 . </S>",
    "<S> each level can be characterised in terms of a suitable variant of tree - width . </S>",
    "<S> canonical representatives of the various levels are0.08em : the class of all trees of height  @xmath4 , for each @xmath5 , of all paths , of all trees , and of all grids . </S>"
  ]
}
{
  "article_text": [
    "distributed computing provides an effective means of utilizing a network of limited capacity quantum computers . by connecting a network of limited capacity quantum computers via classical and quantum channels ,",
    "a group of small quantum computers can simulate a quantum computer with a large number of qubits .",
    "this approach is useful for the development of quantum computers because the earliest useful quantum computers will most likely hold only a small number of qubits .",
    "this constraint limits the usage of such quantum computers to small problems .",
    "we propose that distributed quantum computing ( dqc ) is a possible solution to this problem .",
    "furthermore , even if one could construct a large quantum computer , the distributed computing model can still provide an effective means of increasing computational power .    by a distributed quantum computer ,",
    "we mean a network of small quantum computers , connected by classical and quantum channels .",
    "each quantum computer ( or node ) has a register that can hold only a limited number of qubits .",
    "each node also possesses a small number of channel qubits which can be sent back and forth over the network .",
    "a qubit in a register can freely interact with any other qubit in the same register .",
    "it also can freely interact with channel qubits that are in the same node . to interact with qubits on a remote computer ,",
    "the qubits have to be teleported or physically transported to the remote computer , or have to interact via non - local operations .",
    "indeed , distributed quantum computing can simply be implemented by teleporting or physically transporting qubits back and forth .",
    "a more efficient implementation of dqc has been proposed by eisert et al  @xcite using a non - local cnot gate .",
    "since the control not gate ( cnot ) together with all one - qubit gates is universal  @xcite , a distributed implementation of any unitary transformation reduces to the implementation of non - local cnot gates .",
    "eisert et al also prove that one shared entangled pair ( ebit ) and two classical bits ( cbits ) are necessary and sufficient to implement a non - local cnot gate .    in this paper",
    ", we present two primitive operations , cat - entangler and cat - disentangler , which in turn can be used to implement non - local operations , e.g. a non - local cnot and quantum teleportation protocol .",
    "the cat - entangler and cat - disentangler can be implemented using only local operation and classical communication ( locc ) , assuming that an entanglement has already been established .",
    "we show how to establish an entangled pair between two nodes , and use entangled pairs to efficiently create a generalized ghz state .",
    "furthermore , we present procedures which allow us to reuse channel qubits in a sequence of non - local operations .    to implement a non - local cnot gate ,",
    "first an entangled pair must be established between two computers . then the cat - entangler transforms a control qubit @xmath0 and an entangled pair @xmath1 into the state @xmath2 , called a `` cat - like '' state .",
    "this state allows two computers to share the control qubit . as a result ,",
    "each computer now can use a qubit shared within the cat - like state as a local control qubit .",
    "after completion of the control operation , cat - disentangler is then applied to disentangle and restore the control qubit from the cat - like state . finally , the channel qubits are then be reset so that the entangled pair can be re - established .    to teleport an unknown qubit to a target qubit",
    ", we begin by establishing an entangled pair between two computers .",
    "then we apply the cat - entangler operation to create a cat - like state from an unknown qubit and the entangled pair . after that",
    ", we apply a slightly modify cat - disentangler operation to disentangle and restore the unknown qubit from the cat - like state into the target qubit . finally , we reset the channel qubits . in other words ,",
    "quantum teleportation can be considered as a composition of the cat - entangler operation followed by the cat - disentangler operation .",
    "the cat - entangler and cat - disentangler operations can be extended to a multi - party environment by replacing the entangled pair with a generalized greenberger - horne - zeilinger ( ghz ) state ( also called a cat state ) expressed as @xmath3 .",
    "the state @xmath4 ( also called a cat - like state ) can be created using only locc .",
    "a cat - like state can be used to share a control qubit between multiple computers , allowing each computer to use a qubit shared within the cat - like state as a local control line . in many cases ,",
    "this idea leads to an efficient implementation of multi - party control gates .",
    "in addition , a parallel implementation of some unitary transformations can also be realized .    before performing any non - local operation , an entanglement between computers must be established .",
    "moreover , the entanglement has to be refreshed after its use .",
    "brennen , song , and williams address this issue in a lattice model quantum computer using entanglement swapping  @xcite , which can be used to establish and refresh entanglement between two qubits .",
    "the multiple entanglement swapping  @xcite can create a generalized ghz state , which is used by multiple computers .",
    "we address these same issues for the quantum network model by showing how to establish two entangled pairs by sending two qubits , one in each direction .",
    "asymptotically , this is equivalent to establishing one entangled pair at the cost of sending one qubit .",
    "furthermore , we show how to convert a number of entangled pairs into a generalized ghz state , which in turn is used to distribute control over multiple computers .",
    "we also address refreshing entanglement by observing that measurements , made during the primitive operations , provide crucial information for resetting channel qubits to @xmath5 .",
    "hence , channel qubits can be re - entangled with other channel qubits at a later time .",
    "the idea of using a cat - like state to distribute control qubits is discussed in section  [ sec : dist - ctrl ] .",
    "next , the cat - entangler and cat - disentangler are presented .",
    "after that , we use these operations to construct non - local cnot and teleportation operations .",
    "section [ sec : ctrl - gates ] discusses various constructions of non - local control gates in different situations .",
    "issues related to establishing and refreshing entanglement are addressed in section  [ sec : impt - em ] via constructing entangling gates .",
    "finally , an example of a distributed version of the quantum fourier transform is presented in section  [ sec : fourier ] .",
    "we adopt the notation found in  @xcite . for any one - qubit unitary matrix @xmath6 , and integer @xmath7 , the operator @xmath8 which acts on @xmath9 qubits , is defined as @xmath10 for all @xmath11 , where `` @xmath12 '' denotes logical ` and . '    in other words , @xmath8 is an @xmath13-fold control-@xmath14 gate . for example , if @xmath15 then @xmath16 is the cnot gate , and @xmath17 is the toffoli gate .",
    "more detailed discussion about this notation can be found in  @xcite .",
    "this diagram represents an entangling gate , denoted by @xmath18 .",
    "this gate can be locally implemented using a hadamard gate and a cnot gate , as shown .",
    "a distributed version of the entangling gate is discussed in section [ sec : impt - em ] . ]    to reduce the complexity of diagrams , we introduce a diagram for an entangling gate , called an @xmath18 gate , as shown in figure  [ fig : entan - gate ] .",
    "two qubits are entangled by this @xmath18 gate . in particular ,",
    "if the input state is @xmath19 , the output state will be @xmath20 .",
    "the entangling gate @xmath18 can be generalized to an @xmath13-fold entangling gate , denoted by @xmath21 , which creates the cat state @xmath22 upon the input state @xmath23 .",
    "the @xmath24 gate is illustrated in figure  [ fig : ghz - gate ] .",
    "this diagram represents a generalized entangling gate for 3 qubits , denoted by @xmath24 .",
    "it creates the ghz state if the input is the state @xmath25 .",
    "this gate can be locally implemented by a hadamard gate and two cnot gates , as shown . ]",
    "finally , figure  [ fig : swap - gate ] shows a diagram for the swap gate .",
    "section  [ sec : impt - em ] discusses the distributed implementations of the @xmath21 gate and the swap gate .     a swap gate .",
    "the discussion of distributed implementation of this gate can be found on section  [ sec : dist - swap ] ]",
    "in this section , we discuss how a cat - like state can distribute control over multiple computers .",
    "_ this is the key idea of the construction of non - local interaction presented in this paper .",
    "_ we will demonstrate this idea using the simplest control gate , i.e. , the cnot gate .    the cnot gate @xmath26 is defined on a two - qubit system as follows : for any control qubit @xmath27 and target bit @xmath28 , @xmath29 we assume that a cat - state @xmath30 has already been shared between multiple computers . then cat - entangler can be used to transform a control qubit and a cat - state into a cat - like state .",
    "as a result , equation  [ eqn : samp_ctrl ] becomes @xmath31 which can be rewritten as @xmath32    equations  [ eqn : multi_ctrl ] and  [ eqn : dist_ctrl ] show that we can use any qubit , shared in the cat - like state , as a control line .",
    "for example , the two circuits in figure  [ fig : eqv - ctrl ] have an equivalent effect on the target bit , assuming that the state of lines one and two is the cat - like state @xmath33 .     since line one and line two",
    "are in the state @xmath34 , the target qubit @xmath28 can be controlled by either line one or two . ]",
    "given a qubit @xmath35 and a generalized ghz state @xmath36 , created by an entangling gate @xmath37 , one can create a cat - like state @xmath38 with the above circuit . ]    a cat - entangler is shown in figure  [ fig : create - ctrl ] .",
    "the box labeled by @xmath39 is a standard basis measurement . since",
    "a result of the measurement ( represented by a dotted line ) is a classical bit , we can distribute and reuse the result to control many @xmath40-gates at the same time .",
    "[ thm : dist - ctrl ] given a qubit @xmath41 and an @xmath13-fold cat state @xmath42 , a cat - like state @xmath43 can be created by a cnot gate , local operations ( i.e. , one measurement and @xmath40-gates ) , and classical communication .",
    "proof : a quantum circuit that creates an @xmath13-fold cat - like state can be generalized from the circuit shown in figure [ fig : create - ctrl ] .",
    "assume that an m - fold ghz state is created by a @xmath21 gate .    at point",
    "a , after applying the cnot gate , the state of the circuit is @xmath44 after the measurement , the state is either    @xmath45    or @xmath46    where the underlined qubit is the measured qubit .",
    "assume that the result of measurement is a classical bit @xmath47 .",
    "after applying @xmath40 controlled by the classical bit @xmath47 ( represented by a dotted line on the @xmath40 gates ) , the state at point b is @xmath48 hence , an m - fold cat - like state shared between the qubit @xmath49 and other qubits from the cat state ( except the measured qubit ) is created .    to complete the non - local cnot operation",
    ", the control line must be disentangled and restored .",
    "this can be accomplished by a cat - disentangler , as demonstrated in figure  [ fig : restore - ctrl ] .",
    "an input state at point @xmath50 , @xmath38 , is transformed by a cat - disentangler into a state @xmath51 , where @xmath52 is the result of measurements on line @xmath53 . the phase - flip gate ( @xmath54-gate )",
    "is controlled by the mod 2 sum of the @xmath52 , written by @xmath55 . ]",
    "a state @xmath56 can be transformed into a state @xmath57 , where @xmath58 is the result of @xmath13 @xmath59-qubit measurements , by a cat - disentangler , which can be generalized from the circuit shown in figure  [ fig : restore - ctrl ] .",
    "proof : assume the input of the circuit is @xmath60 . after applying hadamard transformations ,",
    "the state of the circuit is @xmath61 where the binary representation of @xmath47 is @xmath62 .",
    "after the measurements , the state becomes @xmath63 where @xmath64 is the result of the measurement on line @xmath65 .    to correct the phase , we use the result of the computation @xmath55 to control the @xmath54 gate applied to the first line .",
    "hence , the state at the end of the circuit is @xmath66 .    by considering the circuit in figure  [ fig :",
    "restore - ctrl ] , the first line can be switched with another line .",
    "therefore , the control state can be restored to any qubit involved in the cat - like state .",
    "furthermore , we can leave more qubits to be untouched , which means we do not apply hadamard and measurement on one or more qubits . as a result ,",
    "the remaining qubits form a smaller cat - like state .",
    "a teleportation circuit can be considered as a composition of the cat - entangler and cat - disentangler as shown in figure  [ fig : teleport ] .",
    "this figure shows a construction of a teleportation circuit using the cat - entangler and cat - disentangler .",
    "an unknown quantum state @xmath67 is teleported from the first line to the third line . ]    if the cat - entangler is applied , then the state of qubits @xmath59 and @xmath68 is in the cat - like state @xmath33 .",
    "we next apply the cat - disentangler .",
    "however , the unknown qubit @xmath67 is restored on line @xmath68 , not on line @xmath59 .    after carefully considering the teleportation circuit , the group of operations applied on the first two qubits after the entangling gate , is actually the bell basis transformation followed by standard basis measurement",
    "these operations are equivalent to a complete bell measurement .",
    "furthermore , the result of the measurement is used to control the @xmath40 and @xmath54 gates , as in the teleportation circuit described in  @xcite .",
    "in this section , we begin by discussing the construction of a non - local cnot gate . then we show how to construct efficient distributed control gates in different situations .",
    "we assume that we have distributed entangling gates , which create and share a cat state among multiple computers .",
    "construction of distributed entangling gates is described in section  [ sec : impt - em ] .      by observing that a control line can be distributed by a cat - like state , a non - local cnot gate",
    "can be implemented as shown in figure  [ fig : nonlocal - cnot ] .     after applying the cat - entangler ,",
    "the state of the control line and the third line becomes a cat - like state @xmath69 .",
    "instead of using the control line ( the first line ) directly , line @xmath68 can be used to control line 4 .",
    "then we apply a cat - disentangler to restore the control qubit .",
    "each computer boundary is indicated by a tightly dotted box . ]",
    "[ thm : cnot - proof ] given a control line @xmath41 and an entangled pair @xmath1 created by an entangling gate , a non - local cnot gate can be implemented from the cat - entangler and cat - disentangler , as shown in the figure  [ fig : nonlocal - cnot ] .",
    "proof : after applying the cat - entangler , the state at point @xmath70 is @xmath71 where @xmath47 denotes the result of the measurement .    since line 1 and line 3 are in a cat - like state @xmath72 .",
    "we can use either line 1 or line 3 to control the @xmath40 gate . in this case",
    ", we use line 3 , which is on the local machine .    because the control line does not change after applying cnot , the state of line 1 and line 3 remains in a cat - like state .",
    "therefore after applying the cat - disentangler , the control qubit is restored to line 1 .",
    "hence , we have completed a non - local cnot operation .",
    "this circuit is proven to be the optimal implementation by  @xcite , i.e. one ebit and two cbits are necessary and sufficient for implementing a non - local cnot gate .",
    "furthermore , the cat - entangler and cat - disentangler can be applied to create a @xmath16 . in many cases ,",
    "we have an efficient implementation of @xmath16 .      in this section",
    ", we assume that a unitary transformation @xmath14 is small enough to implement on one computer , but that the control line is on a different computer .",
    "moreover , the transformation @xmath14 is composed of a number of basic gates , i.e , @xmath73 , for some integer @xmath53 .",
    "after a cat - entangler creates a cat - like state , this establish distributed control between two computers .",
    "since the control line can be reused , only one cat - entangler is needed .",
    "therefore , one ebit and two cbits are needed to implement this type of non - local @xmath16 gate .",
    "this idea is demonstrated in figure  [ fig : nonlocal - cu ] , where @xmath74 .",
    "because the control line is reused , the cost of implementing the @xmath75 gates can be shared among the basic gates .",
    "in other words , each non - local @xmath75 can be implemented using only @xmath76 ebits and @xmath77 cbits , asymptotically .",
    "assume @xmath74 .",
    "then @xmath78 can be distributed as shown .",
    "the control line needs to be distributed only once , because it can be reused .",
    "this implementation allows the cost of distributing the control qubit to be shared among the elementary gates . ]      in this section , we assume that a unitary transformation @xmath14 is too big to implement on one computer . therefore , @xmath14 has to be decomposed into a number of smaller transformations , where each transformation can be implemented on one computer . in this setting , there are two scenarios to consider .    in the first scenario , we assume that there are no shared qubits between the components of @xmath14 , i.e. @xmath14 is decomposed into smaller transformations , where each transformation is applied to different qubits .",
    "for example , assume @xmath14 is a unitary transformation for a 7-qubit system , and @xmath79 , where @xmath80 is a unitary transformation acting on qubits 1 and 2 , @xmath81 is a unitary transformation acting on qubits 3 , 4 , and 5 , and @xmath82 is a unitary transformation acting on qubits 6 and 7 . in this case , not",
    "only the cat - like state can be used to distribute a control line among three computers , but @xmath16 can also be executed in parallel , as demonstrated in figure  [ fig : exm - mulparty ] .     in this case",
    ", the transformation @xmath14 can be decomposed into a set of small transformations .",
    "the cat - like state allows the control to be distributed among multiple computers , and also allows each computer to execute in parallel . ]    in the second scenario , there are shared qubits between these transformations .",
    "for example , assume a transformation @xmath14 is a transformation on a 3-qubit system , and @xmath83 , where @xmath84 acts on qubit 1 and 2 and @xmath85 acts on qubit 2 and 3 .",
    "@xmath14 can be decomposed into a set of smaller transformations that can be implemented on one computer .",
    "however , they share qubit number @xmath86 . a distributed version of this case can be implemented by transporting or teleporting qubit number @xmath86 back and forth between the top and the bottom machine .",
    "line @xmath86 becomes line @xmath87 in the bottom computer .",
    "]    in this case , the shared qubits can be physically transported or teleported from one computer to another . however , sending this shared qubit introduces a communication overhead , which is not present in a non - distributed implementation of @xmath16 .",
    "a non - local @xmath8 can simply be implemented by using @xmath13 cat - like pairs to distribute @xmath13 control qubits to one machine , and then to implement @xmath8 locally , as suggested in  @xcite .",
    "figure  [ fig : mctrl-2u ] shows an instance of @xmath17 .",
    "both control lines @xmath88 and @xmath89 are distributed via two cat - like states to the bottom machine so that @xmath17 can be implemented locally .",
    "the swap gate moves the control line from the channel qubit and resets it to @xmath5 , so that the channel qubit can be reused .",
    "]    however , this requires the computer to have enough qubits to implement @xmath8 locally .",
    "therefore , the number of non - local control lines is limited by the number of qubits available on one computer .     in this case ,",
    "@xmath90 and @xmath91 .",
    "the @xmath92 gate is simulated by two @xmath93 gates and two @xmath94 gates as shown . ]",
    "barenco et al show that the @xmath95 gate can be linearly simulated on @xmath13-qubit system  @xcite .",
    "for example , for any @xmath96 , @xmath97 , a @xmath95 gate can be implemented as two @xmath98 gates and two @xmath99 gates on an @xmath13-qubit system .",
    "an implementation for the case of @xmath90 and @xmath91 is shown in figure [ fig : mctrl - lin ] .",
    "this technique can be used to break down a large @xmath8 gate into a sequence of smaller gates .",
    "after thus making the number of control lines small enough , we can distribute these control lines to one machine , and implement each gate locally .",
    "a distributed implementation of figure  [ fig : mctrl - lin ] is demonstrated in figure  [ fig : mctrl - lin - dist ] .",
    "we group lines 1 , 2 , and 5 together on the top machine .",
    "then we distribute line 5 to line 5 and then use it to perform a control operation with lines 3 and 4 applied to line 6 in the bottom machine .",
    "this circuit presents a distributed version of @xmath92 , where @xmath90 and @xmath91 .",
    "line 5 becomes line 5 on the bottom machine . ]",
    "before any non - local cnot and teleportation operations are performed , an entangled pair must be established between channel computers . moreover , after the operation is finished , the channel qubits must be reset to refresh the pair .",
    "we discuss establishing and refreshing procedure in the next section via the construction of entangling gates .",
    "because establishing entanglement can not be accomplished by any local operations , channel qubits must be on one machine . the simplest way to establish an entangled pair",
    "is described as follow :    to establish an ebit between a remote and a local computers , the remote computer sends a channel qubit to the local machine .",
    "then , the local machine entangles the remote channel qubit with one of the local channel qubits .",
    "then one qubit of the pair is sent back to the remote machine .",
    "this process establishes one ebit by sending two qubits , one in each direction .",
    "if we allow each machine to have two channel qubits , then two ebits can be established by sending two qubits . to do so",
    ", each computer entangles its own channel qubits , then exchanges one qubit of the pair with the other computer , as demonstrated in figure  [ fig : ent - e2 ] . as a result",
    ", one ebit is established with the cost of sending one qubit , asymptotically . to refresh the entanglement , the procedure is simply repeated . however , the channel qubits must be reset to state @xmath5 before they can be re - entangled .     assuming each machine holds a pair of channel qubits .",
    "each machine entangles its channel pair , and then exchanges one qubit of the pair with another machine . ]",
    "channel qubits need to be in the state @xmath5 before being entangled",
    ". therefore the channel qubits must be reset to the state @xmath5 before the entangled pair can be refreshed .",
    "because the measurement result reveals the current state of the measured qubit , we can use the measurement result to control the @xmath40-gate to set the channel qubit to @xmath5 , as shown in figure  [ fig : reverse - reset ] .",
    "this figure demonstrates how the channel qubits can be reset to @xmath5 by considering the result of the measurement .",
    "assume the input state at point a is @xmath101 .",
    "the output of the circuit is the state @xmath102 . ]",
    "a non - distributed version of @xmath21 gate can be linearly implemented using a hadamard gate , and a sequence of cnot gates as shown in figure [ fig : ghz - gate ] ( for three qubits case . )",
    "however , it takes @xmath103 steps to create an m - fold ghz state . an efficient way of implementing a non - distributed version of an @xmath21 gate is shown in figure  [ fig : em - gate ] .",
    "this implementation utilizes a binary tree idea to reduce the number of steps from @xmath103 to @xmath104 .",
    "this figure represent an efficient implementation of @xmath105 , using a hadamard gate and 7 cnot gates .",
    "a generalized ghz state can be created after applying @xmath106 gates .",
    "however , this implementation requires more channel qubits . ]    a distributed version of @xmath21 gate can be implemented by using non - local cnot gates . in this process",
    ", we exchange @xmath107 ebits with the @xmath13-fold cat state by replacing cnot gates with non - local cnot gates .    in the linear implementation of @xmath21 , each computer requires at least two channel qubits to establish entanglement with its neighbors .",
    "this number is fixed regardless of the number of computers involved .    on the contrary , in the binary implementation ,",
    "the number of channel qubits on each computer increases with respect to @xmath13 .",
    "in fact , the number of channel qubits required is @xmath104 .",
    "this is true because the first computer has to simultaneously establish @xmath104 entangled pairs with others computers , as shown in figure  [ fig : em - gate ] , before an @xmath13-fold cat state is created .",
    "however , the trade off is justified because the number of steps required to establish the @xmath13-fold cat state is reduced from @xmath103 to @xmath104 .      in the implementation of a non - local cnot gate",
    ", measurements are performed on both channel qubits .",
    "therefore , the channel qubits can be reset by considering the measurement results . in the teleportation circuit , the remote channel qubit",
    "is not measured .",
    "moreover , it holds the unknown state which is teleported by the circuit .",
    "pati and braunstein show in  @xcite that an unknown qubit can not be deleted . to solve this problem",
    ", we can swap the remote channel qubit with @xmath5 held by another qubit in the register on the same machine . by swapping ,",
    "the unknown qubit is preserved and the channel qubit is reset .",
    "the construction of the teleportation circuit , with channel qubits reset , is shown in figure  [ fig : reset - tel ] .",
    "the remote channel qubit can be reset by swapping with a empty qubit ( @xmath5 ) .",
    "in addition , after teleportation , the original qubit is reset to @xmath5 state . ]",
    "one remaining question is how many @xmath108 ( or empty qubits ) are needed to support the teleportation protocol .",
    "we observe that , after teleportation , the original unknown qubit on the source machine is reset to state @xmath5 .",
    "therefore , we can use this qubit as an empty qubit in the next inbound teleportation .",
    "however , the required number of empty qubits still depends on how many qubits are teleported into the machine before another qubit is teleported out . in other words",
    ", we can consider the @xmath5 qubit as an empty space . to teleport a qubit in",
    ", we need an empty space to receive the qubit .",
    "the more qubits teleported into the machine , the more spaces needed .      a distributed swap gate can be implemented by using two teleportations to exchange two qubits .",
    "if each machine has two channel qubits involved in a swapping operation , we do not need any empty qubits in the registers .",
    "the channel qubit becomes a swapping buffer , because the first teleportation creates an empty qubit for the second teleportation to use .",
    "however , if we have only one channel qubit in a swapping operation , one empty qubit is needed for a swapping buffer .    in  @xcite , collins , linden , and popescu",
    "show that an optimal non - local swap gate requires two ebits and two cbits in each direction .",
    "therefore , implementing a swap gate by two teleportations is an optimal implementation .",
    "the quantum fourier transform is a unitary transformation defined on basis states as follows , @xmath109 where @xmath110 is the number of qubits .",
    "see  @xcite for more details .",
    "shor presents the quantum fourier transformation in  @xcite as a routine used in the factoring algorithm .",
    "later on , it becomes a standard routine used in many quantum algorithms , such as phase estimation , and the hidden subgroup algorithms .",
    "an efficient circuit for the quantum fourier transformation , found in  @xcite , is shown in figure  [ fig : fourier ] .",
    "the gate @xmath111 is defined as follows , @xmath112 where @xmath113 .",
    "we use the construction of @xmath16 to implement a distributed version of the fourier transformation .",
    "the swap gate can be implemented by teleporting qubits back and forth between two computers .",
    "the communication resources needed depend on how many non - local control gates have to be implemented .",
    "assume that we implement the fourier transformation on @xmath13 computers , and each computer has @xmath53 qubits , not including the channel qubits .",
    ". therefore , there are @xmath115 control gates to implement .",
    "hence , for each computer , there are @xmath116 local control gates .",
    "the number of local control gates is @xmath117 .",
    "the number of non - local control gates is @xmath118 gates .",
    "hence , the communication resources are @xmath119 .",
    "an implementation of the distributed fourier transformation of @xmath120 qubits is shown in figure  [ fig : dist - fourier ]",
    "the teleportation circuit and the non - local cnot gate can be implemented using two primitive operations , cat - entangler and cat - disentangler .",
    "these two primitive operations work on the idea that a cat - like state can be used to distribute a control line .",
    "this principle is extended to construct non - local operations efficiently in many cases .",
    "for example , the communication cost can be shared among elementary gates because a control line can be reused after being distributed via cat - like state . moreover ,",
    "the cat - like state allows parallel implementation of some control gates .    before using a non - local operation",
    ", an entanglement has to be established .",
    "moreover , it has to be refreshed after being used .",
    "fortunately , by looking at the measurement results , we can reset channel qubits , and re - establish entanglement .",
    "this procedure works well with non - local cnot gates . to reset channel qubits in the teleportation operation , the channel qubits have to be swapped with empty qubits ( @xmath5 ) .    in general ,",
    "if we can break down a unitary transformation into a sequence of cnot gates and one - qubit gates , a distributed version of the unitary transformation can be simply implemented by replacing cnot gates with non - local cnot gates .",
    "therefore , the communication overhead is dependent on the number of non - local cnot gates needed to be implemented .",
    "with help from teleportation to move qubits back and forth between computers , better distributed implementation can be accomplished .",
    "amsalpha j. eisert , k. jacobs , p. papadopoulos , and m.b .",
    "plenio , phys . rev . a , * 62 * , 052317 - 1 ( 2000 ) .",
    "_ quant - ph/0005101_. peter w. shor , quant - ph/9508027 ( 1995 ) .",
    "charles h. bennett , gilles brassard , claude crpeau , richard jozsa , asher peres , and william k. wootters , phys .",
    "lett . * 70 * , 1895 ( 1993 ) .",
    "daniel collins , noah linden , and sandu popescu , phys .",
    "rev . a , * 64 * , 032302 ( 2001 ) .",
    "_ quant - ph/0005102_. adriano barenco , charles h. bennett , richard cleve , david p. divincenzo , norman margolus , perter shor , tycho sleator , john a. smolin , and harald weinfurter , phys .",
    "rev . a , * 52 * , 3457 ( 1995 ) .",
    "_ quant - ph/9503016_. k. brennen , daegene song , and carl j. williams , quant - ph/0301012 ( 2003 ) .",
    "m. zekowski , a. zeilinger , m.a .",
    "horne and a.k .",
    "ekert , phys .",
    "lett , * 71 * , 4287 ( 1993 ) ; s. bose , v. vedral and p.l .",
    "knight , phys .",
    "rev . a , * 57 * , 822 ( 1998 ) .",
    "s. bose , v. vedral , and p.l .",
    "knight , phys .",
    "a , vol 57 822 ( 1997 ) ; lucien hardy and david d. song , phys .",
    "a , vol 62 , 052315 ( 2000 ) .",
    "arun k. pati and samuel l. braunstein , quant - ph/9911090 v2 ( 2000 ) .",
    "m. a. nielsen and i. l. chuang , `` quantum computation and quantum information '' , cambridge press , 2000 ."
  ],
  "abstract_text": [
    "<S> a key problem in quantum computing is finding a viable technological path toward the creation of a scalable quantum computer . </S>",
    "<S> one possible approach toward solving part of this problem is distributed computing , which provides an effective way of utilizing a network of limited capacity quantum computers .    in this paper , we present two primitive operations , cat - entangler and cat - disentangler , which in turn can be used to implement non - local operations , e.g. non - local cnot and quantum teleportation . we also show how to establish an entangled pair , and use entangled pairs to efficiently create a generalized ghz state . </S>",
    "<S> furthermore , we present procedures which allow us to reuse channel qubits in a sequence of non - local operations .    </S>",
    "<S> these non - local operations work on the principle that a cat - like state , created by cat - entangler , can be used to distribute a control qubit among multiple computers . using this principle </S>",
    "<S> , we show how to efficiently implement non - local control operations in many situation , including a parallel implementation of a certain kind of unitary transformation . </S>",
    "<S> finally , as an example , we present a distributed version of the quantum fourier transform . </S>"
  ]
}
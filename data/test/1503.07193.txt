{
  "article_text": [
    "stochastic optimal control is an important research area for analysis and control design for continuous - time dynamical systems that operate in the presence of uncertainty .",
    "however , existing stochastic control methods can not be readily applied to handle complex temporal logic specifications with real - time constraints , which are of growing interest to the design of autonomous and semiautonous systems @xcite . in this paper",
    ", we propose a numerical method for stochastic optimal control with respect to a subclass of metric temporal logic specifications .",
    "particularly , given a specification encoding desirable properties of a continuous - time stochastic system , the task is to synthesize a control policy such that if the system implements the policy , then the probability of a path satisfying the formula is maximized .",
    "metric temporal logic ( mtl ) is one of many real - time logics that not only express the relative temporal ordering of events as linear temporal logic ( ltl ) , but also the duration between these events .",
    "for example , a surveillance task of a mobile robot , infinitely revisiting region 1 and 2 , can be expressed in ltl .",
    "but tasks with quantitative timing constraints , for instance , visiting region 2 within 5 minutes after visiting region 1 , require the expressive power of mtl . for system specifications in ltl and its untimed variants ,",
    "methods have been developed for quantitative verification of discrete - time stochastic hybrid systems @xcite , control design of continuous - time and discrete - time linear stochastic systems @xcite .",
    "for mtl and its variants , a specification - guided testing framework is proposed in @xcite for verification of stochastic cyber - physical systems .",
    "reference @xcite proposes a solution to the vehicle routing problem with respect to mtl specifications .",
    "reference @xcite develops an abstraction technique and a method of transforming mtl formulas to ltl formulas . as a result ,",
    "existing synthesis methods for discrete deterministic systems with ltl constraints can be applied to design switching protocols for continuous - time deterministic systems in dynamical environment subject to mtl constraints .",
    "reference @xcite proposes a reactive synthesis method to non - deterministic systems with respect to maximizing the robustness of satisfying a specification in signal temporal logic , which is a subclass of mtl .",
    "the robustness of a path is measured by the distance between this path and the set of paths that satisfy the specification .",
    "our work differs from existing ones in both the problem formulation and control objective .",
    "we deal with systems with stochastic dynamics , rather than non - deterministic systems @xcite .",
    "we consider reachability objectives specified in , which is a subclass of mtl .",
    "the optimality of control design is evaluated by the probability of satisfying the given specification .",
    "the synthesis method is with respect to quantitative criteria ( the probability of satisfying the formula ) , not qualitative criteria ( whether the formula is satisfied ) .",
    "our solution approach utilizes the _ markov chain approximation method _ @xcite to generate a discrete abstraction in the form of a approximating the continuous - time stochastic system .",
    "based on a product operation between the discrete abstraction and a finite - state automaton that represents the desirable system property , a near optimal policy with respect to the probability of satisfying the formula in the _ point - based semantics _ of @xcite can be computed by solving an optimal planning problem in the .",
    "we show that as the discretization gets finer in both state space and time space , the optimal control policy in the abstract system converges to the optimal one in the original stochastic system with respect to the probability of satisfying the formula in the _ continuous or dense - time semantics _ @xcite .",
    "we study stochastic dynamical systems in continuous time .",
    "the state of the system evolves according to the @xmath0 where @xmath1 and @xmath2 are continuous and bounded functions given @xmath3 and @xmath4 as compact state and input space ; @xmath5 is an @xmath6-valued , @xmath7-wiener process which serves as a `` driving noise '' and is defined on the probability space @xmath8 ; @xmath9 is an @xmath3-valued , @xmath7-adapted , measurable process also defined on @xmath8 and @xmath10 is an _",
    "admissible control law _ ,",
    "i.e. , a @xmath4-valued , @xmath7-adapted , measurable process defined on @xmath8 .",
    "we say @xmath11 solve the sde in provided that @xmath12 holds for all time @xmath13 .",
    "we introduce a labeling function that relates a sample path of the in to a _ timed behavior_. let @xmath14 be a finite set of atomic propositions and @xmath15 be a labeling function that maps each state @xmath16 to a set of atomic propositions that evaluate true at that state .    a _ time interval _",
    "@xmath17 is a convex set @xmath18 where @xmath19 , the symbol ` @xmath20 ' can be one of ` @xmath21 ' , ` @xmath22 ' , and the symbol ` @xmath23 ' can be one of ` @xmath24 ' , ` @xmath25 $ ] ' , and @xmath26 . for a time interval of the above form , @xmath27 and @xmath28 are left and right end - points , respectively .",
    "a time interval is empty if it contains no point .",
    "a time interval is _ singular _ if @xmath29 and it contains exactly one point .",
    "@xcite a _ dense - time behavior _ over an infinite - time domain @xmath30 and a set @xmath14 of atomic propositions is a function @xmath31 which maps every time instant @xmath32 to a set @xmath33 of atomic propositions that hold at @xmath27 .    given a continuous sample path @xmath34 of the stochastic process @xmath9 , the timed behavior @xmath35 of this sample path is @xmath36 , for all @xmath13 .",
    "@xcite let @xmath35 be a dense - time behavior and @xmath37 be a positive real number , referred to as the _ sampling interval_. the _ canonical sampling _ @xmath38 of the timed behavior @xmath35 is defined such that @xmath39      we introduce metric interval temporal logic @xcite , a subclass of mtl , to express system specifications .",
    "given a set @xmath14 of atomic propositions , the formulas of are built from @xmath14 by boolean connectives and time - constrained versions of the _ until _ operator @xmath40 as follows .",
    "@xmath41 where @xmath42 , @xmath43 is a _ nonsingular _ time interval with integer end - points , and @xmath44 , @xmath45 are unconditional true and false , respectively .",
    "[ [ dense - time - semantics - of ] ] dense - time semantics of + + + + + + + + + + + + + + + + + + + + + + + +    given a timed behavior @xmath35 , we define @xmath46 with respect to an formula @xmath47 at time @xmath27 inductively as follows :    * @xmath48 where @xmath49 if and only if @xmath50 ; * @xmath51 where @xmath52 ; * @xmath53 if and only if @xmath54 and @xmath55 ; * @xmath56 if and only if there exists @xmath57 such that @xmath58 and for all @xmath59 , @xmath60 ;    we write @xmath61 if @xmath62 .",
    "we also define temporal operator @xmath63 ( eventually , @xmath47 will hold within interval @xmath17 from now ) and @xmath64 ( for all points within @xmath17 , @xmath47 holds . )",
    "an formula can be translated into equivalent non - deterministic timed automaton @xcite .",
    "we consider a fragment of which can be translated into equivalent _",
    "deterministic _ timed automaton .",
    "let @xmath65 be a finite alphabet .",
    "@xmath66 are the sets of finite and infinite words ( sequences of symbols ) over @xmath65",
    ". a _ ( infinite ) timed word _",
    "@xcite over @xmath65 is a pair @xmath67 , where @xmath68 is an infinite word and @xmath69 is an infinite _ timed sequence _ , which satisfies    _ initialization _ : @xmath70 ;    _ monotonicity _ : @xmath71 increases strictly monotonically ; i.e. , @xmath72 , for all @xmath73 ;    _ progress _ :",
    "for every @xmath74 and @xmath75 , there exists some @xmath73 , such that @xmath76 .",
    "the conditions ensure that there are finitely many symbols ( events ) in a bounded time interval , known as _ non - zenoness_. we also write @xmath77 .    before the introduction of timed automata",
    ", we introduce _ clock _ and _ clock _ constraints : let @xmath78 be a finite set of clocks , @xmath79 .",
    "we define a set @xmath80 of clock constraints over @xmath78 in the following manner .",
    "let @xmath81 be a non - negative integer , and @xmath82 be a comparison operator , @xmath83 where @xmath84 are clocks .",
    "deterministic timed automaton _ is a tuple @xmath85 where @xmath86 is a finite set of states , @xmath87 is a finite set of alphabet with the set @xmath14 of atomic propositions , @xmath88 is the initial state , @xmath89 is a finite set of accepting states , @xmath78 is a finite set of clocks .",
    "the transition function @xmath90 is deterministic and interpreted as follows : if @xmath91 then @xmath92 allows a transition from @xmath93 to @xmath94 when the set @xmath95 of atomic propositions evaluate true and the clock constraint @xmath96 is met . after taking this transition , the clocks in @xmath97 are reset to zero , while other clocks remain unchanged .    for each clock",
    "@xmath98 , we denote @xmath99 the range of that clock . for notational convenience , we define a _ clock vector _ @xmath100 where the @xmath101-th entry @xmath102 $ ] of the clock vector @xmath103 is the value of clock @xmath104 , for @xmath105 .",
    "given @xmath106 , let @xmath107+t , v[2]+t,\\ldots , v[m]+t)$ ] .",
    "we use @xmath108 for the clock vector @xmath103 where @xmath102=0 $ ] for all @xmath109 and @xmath110 the set of all possible clock vectors in @xmath92 . note that a clock vector is essentially a _ clock valuation _ defined in @xcite .",
    "a _ configuration _ of @xmath92 is a pair @xmath111 where @xmath93 is a state and @xmath103 is a clock vector .",
    "a transition @xmath112 being taken from the configuration @xmath113 after @xmath114 time units is also written as @xmath115 where @xmath116 , and @xmath117= v[i]+\\delta$ ] if @xmath118 , otherwise @xmath117=0 $ ] .",
    "a _ run _ in @xmath92 on a timed word @xmath119 is an infinite alternating sequence of configurations and delayed transitions @xmath120 , with @xmath121 and @xmath122 for @xmath123 , subject to the following conditions :    1 .",
    "there exists @xmath124 and @xmath125 such that @xmath126 , @xmath127 and @xmath128= \\tau_0 $ ] for all @xmath129 and @xmath128=0 $ ] for all @xmath130 .",
    "2 .   for each @xmath131",
    ", there exist @xmath132 and @xmath133 such that @xmath134 satisfies the clock constraint @xmath135 , @xmath136 is defined and @xmath137=v_{i}[k]+\\delta\\tau_{i+1}$ ] for all @xmath138 and @xmath137=0 $ ] for all @xmath139 .",
    "we consider reachability objectives : a run @xmath140 on a timed word @xmath141 is _ accepting _ if and only if @xmath142 where @xmath143 is the set of states in @xmath86 occurring in @xmath140 . the set of timed words on which runs are accepted by @xmath92 is called the language of @xmath92 , denoted @xmath144 .    as a simple example of timed automata ,",
    "let @xmath145 and the specification formula is @xmath146 } r_1 $ ] .",
    "the reachability specification can be expressed with a deterministic timed automaton @xmath147 in figure  [ fig : reach ] .",
    "the set of final states is @xmath148 .",
    "the timed automaton accepts a timed word with a prefix @xmath149 , i.e. , @xmath150 since @xmath151 and @xmath152 is accepting .",
    "it does not accept @xmath153 , @xmath154 for an arbitrary timed sequence @xmath71 , or @xmath155 because either @xmath156 is evaluated true when @xmath157 or @xmath158 , or it is never true over an infinite timed sequence .     for @xmath159",
    "} r_1 $ ] .",
    "only one clock @xmath160 is used . a transition labeled @xmath161",
    "is taken if and only if both @xmath162 and @xmath163 evaluate true . a transition labeled @xmath164",
    "is taken if and only if both @xmath162 and @xmath165 evaluate true and along with taking the transition , the clock @xmath160 is reset to @xmath166.,scaledwidth=40.0% ]      given a sampling interval @xmath114 and a timed behavior @xmath167 , we map the canonical sampling @xmath168 of @xmath35 to a timed word @xmath169 such that for any @xmath73 , @xmath170 .",
    "we say that the timed behavior @xmath35 satisfies the formula @xmath47 in the _ point - based semantics _ under the sampling interval @xmath114 , denoted @xmath171 , if and only if @xmath172 is accepted in the timed automaton @xmath147 that expresses @xmath47 .",
    "the sampling interval @xmath114 determines a sequence of positions ( time instances ) @xmath173 in the timed behavior . with @xmath174 being a positive infinitesimal ,",
    "any position in a timed behavior @xmath35 appears in the timed sequence of the timed word @xmath175 .",
    "thus , we say that the timed behavior @xmath35 satisfies @xmath47 in the _ continuous or dense - time semantics _ , i.e. , @xmath176 , if and only if @xmath177 . a formal definition of satisifiability of mtl formulas over dense - time and point - based semantics is given in @xcite and the relation between these two semantics has been studied in @xcite .",
    "we say that a sample path of the in satisfies an formula @xmath47 in the dense - time semantics ( resp .",
    "point - based semantics under the sampling interval @xmath114 ) if its timed behavior satisfies @xmath47 in the dense - time semantics ( resp .",
    "point - based semantics under the sampling interval @xmath114 ) .",
    "formally , let @xmath178 where @xmath179 be a sample path of the stochastic process @xmath180 .",
    "we have that @xmath181^\\delta \\models \\varphi$ ] is equivalent to @xmath182 .    given a stochastic process @xmath9 and an admissible control law @xmath183 that solve the in , the probability of satisfying a formula @xmath47 in the system under the control law @xmath183 is the sum of probabilities of continuous sample paths of @xmath9 that satisfy the formula @xmath47 in the dense - time or point - based semantics ( with respect to a given sampling interval ) .",
    "[ problem ] given an in and a timed automaton @xmath184 expressing an formula @xmath47 , compute a control input @xmath183 that maximizes the probability of satisfying @xmath47 in the dense - time semantics .",
    "in this section , we first show that for the in , problem  [ problem ] can be formulated as a stochastic optimal control problem in a system derived from the with an augmented state space for capturing relevant properties with respect to its specification .",
    "then , we introduce a numerical scheme that computes an optimal policy in a discrete - approximation of the in with respect to the probability of satisfying the specification in the point - based semantics .",
    "the numerical scheme is based on the so - called markov chain approximation method @xcite .",
    "we prove that such a policy converges to a solution to problem  [ problem ] as the discretization gets finer .",
    "we make two assumptions .",
    "[ assumption0 ] the state space @xmath3 and the clock vector space @xmath185 are bounded .",
    "this condition ensures a finite number of states in the discrete approximation . in certain cases , we might also require @xmath4 to be bounded in order to approximate the input space with a finite set .",
    "[ assumption1 ] @xmath186 and @xmath187 are bounded , continuous , and lipschitz continuous in state @xmath188 , while @xmath186 is uniformly so in @xmath189 .",
    "assumption  [ assumption1 ] ensures that the in has a unique solution for a given controller @xmath183 .      for reachability objectives in ,",
    "problem  [ problem ] is also referred to as the _ probabilistic reachability problem_.    a state in @xmath190 is called a _ product state _ , following from the fact that it is a state in a product construction between the stochastic process for the controlled stochastic system and the timed automaton expressing the specification .",
    "we define a projection @xmath191 such that for a given tuple @xmath192 , @xmath193 is the @xmath101-th element in the tuple .",
    "the projection @xmath191 is extended to sequences of tuples in the usual way : @xmath194 where @xmath192 is a tuple and @xmath140 is a sequence of tuples .",
    "let @xmath195 . for a stochastic process",
    "@xmath196 , we derive a _",
    "product stochastic process _",
    "@xmath197 where @xmath198 is a random variable describing the product state .",
    "the process @xmath199 satisfies the following conditions .",
    "* @xmath200 where @xmath201 and @xmath202 .",
    "* for any time @xmath203 , let @xmath204 .",
    "if @xmath205 , then let @xmath206 , @xmath207=v(\\tau)[i]+\\delta$ ] for @xmath208 and @xmath207=0 $ ] for @xmath209 .",
    "moreover , for all @xmath210 , @xmath211 .    alternatively , given a sample path @xmath212 , @xmath213 , suppose that at time @xmath71 the configuration in @xmath147 is @xmath113 , the labeling @xmath214 and the clock vector @xmath215 trigger a transition precisely at time @xmath216 and between the interval @xmath217 , no transition is triggered .",
    "then , the configuration in @xmath147 changes from @xmath113 to @xmath218 also at time @xmath216 provided that @xmath219 .",
    "moreover , for any time @xmath27 during the time interval @xmath220 , the state in the specification automaton remains to be @xmath93 and each clock increases by @xmath27 as the time passes .",
    "for a measurable function @xmath221 that maps sample paths in the process @xmath222 into reals , we write @xmath223 for the expected value of @xmath221 when the initial state is @xmath224 .    the following lemma is an immediate consequence of the derivation procedure for the product stochastic process .",
    "[ lma : relate ] given a set @xmath225 , let @xmath226 denote the probability of a sample path in the stochastic process @xmath227 starting from @xmath228 and satisfying @xmath47 in the dense - time semantics and @xmath229 is the probability of reaching the set @xmath230 in the derived product stochastic process @xmath231 with @xmath224 .",
    "it holds that @xmath232    by lemma  [ lma : relate ] , we can define a value function in the product stochastic process to characterize the probability of satisfying @xmath47 in the dense - time semantics .",
    "[ [ dense - time - reachability - probability ] ] * dense - time reachability probability * + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the probability of reaching @xmath230 from a product state @xmath233 under a controller @xmath183 is denoted as @xmath234 .",
    "we construct a reward function @xmath235 such that @xmath236 where @xmath237 is the indicator function , i.e. , @xmath238 if @xmath239 , and @xmath240 otherwise . then , @xmath241 is evaluated by the value function @xmath242 where @xmath243 is a random variable describing the stopping time such that @xmath244 . the optimal value function is defined as @xmath245 , where @xmath246 is the set of all admissible control policies for the in .",
    "so far , we have shown that given @xmath11 that solve the in , the probability that a sample path in the stochastic process @xmath9 satisfies the formula @xmath47 in the dense - time semantics can be represented by the value @xmath247 in the derived product stochastic process @xmath222 under the reward function @xmath248 .      in this section ,",
    "we employ the methods in @xcite to compute locally consistent markov chains that approximate the sde in under a given control policy .    given an approximating parameter @xmath249 , referred to as the _ spatial step _ , we obtain a discretization of the bounded state space , denoted by @xmath250 , which is a finite set of discrete points approximating @xmath3 .",
    "intuitively , the spatial step @xmath249 characterizes the distance between neighboring and introduces a partition of @xmath3 .",
    "the set of points in the same set of the partition is called an _",
    "equivalent class_. for each @xmath251 , the set of points in the same equivalent class of @xmath188 is denoted @xmath252=\\{x'\\in x\\mid x \\le x ' < x+h\\ } $ ] .",
    "we call @xmath251 the representative point of @xmath252 $ ] .",
    "we define an @xmath253 where @xmath250 is the discrete state space .",
    "@xmath4 is the input space , which can be infinite .",
    "@xmath254 $ ] is the transition probability function ( defined later in this section ) .",
    "the initial state is @xmath255 such that the initial state @xmath256 of the in satisfies @xmath257 $ ] .",
    "@xcite let @xmath258 be the interpolation interval at step @xmath101 for @xmath259 .",
    "let @xmath260 and @xmath261 for @xmath262 be interpolation times .",
    "the _ continuous interpolations _",
    "@xmath263 of the stochastic processes @xmath264 and @xmath265 under the interpolation times @xmath266 are @xmath267    given a policy @xmath268 , let @xmath269 be the induced markov chain from @xmath270 by such a policy .",
    "it is shown that if a certain condition is satisfied by the spatial step and the interpolation times , the continuous interpolations of @xmath269 and @xmath268 converges to processes @xmath9 and @xmath183 which solve the in .",
    "[ thm : stateconverge ] @xcite suppose assumption [ assumption1 ] holds . for any policy @xmath265 ,",
    "let the chain induced from @xmath270 by this policy be @xmath264 .",
    "let @xmath271 denote the conditional expectation given @xmath272 .",
    "then , for all @xmath16 and @xmath273 , the chain @xmath264 satisfies the _ local consistency condition _ : @xmath274\\left[\\delta x^h_n -   e_{x , n}^{h ,",
    "a}\\delta x^h_n \\right]'\\right)\\\\ & = g(x ) g'(x)\\delta t^h(x , a)+o(\\delta t^h(x , a)),\\\\ & \\sup_{n,\\omega}{\\lvert\\delta x_n^h \\rvert } _ 2 \\xrightarrow{h } 0,\\end{aligned}\\ ] ] where @xmath275 is the difference and @xmath276 is an appropriate interpolation interval for @xmath16 and @xmath273 . as @xmath277 , the continuous interpolations @xmath263 of @xmath264 and @xmath265 under the interpolation times @xmath266 computed from the interpolation intervals @xmath278",
    ", @xmath279 , converge in distribution to @xmath11 which solve the in .",
    "given a spatial step @xmath249 , under the local consistency condition we construct the @xmath270 over the discrete state space @xmath250 by computing the transition probability function @xmath280 from the parameters of the ( see @xcite for the details ) .",
    "if the diffusion matrix @xmath281 is diagonal , then the transition probabilities are : @xmath282 , $ ] and @xmath283 , $ ] where @xmath284 is the unit vector in the @xmath101-th direction and @xmath285 .",
    "in this section , we construct a product from a discrete approximation of the original system and the timed automaton expressing the system specification .",
    "then , an optimal planning problem is formulated in a product for computing a near - optimal policy for the in with respect to the probability of satisfying the specification in the point - based semantics .    given the timing constraints in",
    ", we consider an explicit approximation method that discretizes both the continuous state space and time .",
    "particularly , instead of computing potentially varying interpolation intervals , we choose a constant interpolation interval @xmath114 , referred to as the _ time step_. for the local consistency condition to hold , it is required that for a given @xmath286 , @xmath287 } , \\forall x\\in x , \\forall a\\in u.\\ ] ] furthermore , @xmath114 is used as the parameter to discretize the clock vector space @xmath185 .",
    "let @xmath288 be the discretized space for the range @xmath99 of clock @xmath289 .",
    "the discretized clock vector space is @xmath290 .",
    "since both @xmath3 and @xmath185 are bounded , sets @xmath250 and @xmath291 are both finite .",
    "the method is `` explicit '' given the fact that the advance of clock values are explicit : at each step @xmath292 , if the clock is not reset to @xmath166 , then its value is increased by the interpolation interval @xmath114 .",
    "let @xmath293 denote a tuple of spatial and time steps .",
    "next , we construct a product @xmath294 where @xmath295 is the discrete product state space , @xmath4 is the input space , @xmath296 $ ] is the transition probability function , defined as follows .",
    "let @xmath297 and @xmath298 .",
    "for any @xmath273 ,",
    "@xmath299 if and only if @xmath300 . otherwise @xmath301 .",
    "the initial state is @xmath302 with @xmath303 .",
    "[ assume : equivalent ] there exists a spatial step @xmath286 and a choice of representative points from @xmath3 such that for all @xmath251 and all @xmath304 $ ] , @xmath305 .",
    "[ lma1]under assumption  [ assume : equivalent ] , given @xmath306 that solve the sde in and a discretization @xmath250 of the state space , we construct a discrete chain @xmath307 as follows : @xmath308 with @xmath257 $ ] and @xmath303 ; for all @xmath309 , @xmath310 where @xmath311 is the representative point to which @xmath312 belongs , i.e. , @xmath313 $ ] , and @xmath314 .",
    "the following two statements hold .    1 .   for all @xmath315 ,",
    "the range of the random variable @xmath316 is @xmath317 .",
    "2 .   the probability of a continuous sample path in @xmath318 satisfying @xmath47 in the point - based semantics under the sampling interval @xmath114 equals the probability of a discrete sample path in the chain @xmath307 hitting the set @xmath319 . that is ,",
    "@xmath320^\\delta\\models \\varphi   \\right ) = \\\\    p_{s_0}(s_k \\in g^d\\text { and } \\forall   j < k ,",
    "s_j \\notin g^d).\\end{gathered}\\ ] ]    to show the first statement , initially , @xmath321 is a vector of zeros , which is in @xmath291 .",
    "suppose that at the @xmath292-th sampling step @xmath322 , at the next sampling step , for any clock @xmath98 , either the value of @xmath104 is increased by @xmath114 or it is reset to @xmath166 depending on the current state in the automaton , the clock vector and the current labeling of state in @xmath3 . if the value of @xmath104 is reset to @xmath166 , @xmath323=0 \\in { \\mathcal{v}}_i^\\delta$ ] .",
    "otherwise , @xmath323=v(n\\delta)[i]+\\delta \\in { \\mathcal{v}}_i^\\delta $ ] . by induction , all possible clock vectors we can encounter at the sampling times are in the set @xmath291 .",
    "thus , the range of a random variable @xmath316 for any @xmath279 is @xmath317 , which is a subset of @xmath324 .",
    "let @xmath212 with @xmath213 be a sample path of the process @xmath9 and @xmath325 be the corresponding sample path of the chain @xmath307 given the construction method above .",
    "remind that @xmath212 satisfies @xmath47 in the point - based semantics under the sampling interval @xmath114 if and only if the timed word @xmath326 , where @xmath327 , is accepted in @xmath147 . since @xmath328 $ ] for all @xmath329 , let @xmath330 , we have that the timed word @xmath331 by assumption  [ assume : equivalent ] .",
    "let the run on the timed word @xmath332 be @xmath333 such that @xmath334 . by construction",
    ", it holds that @xmath335 and @xmath336 for all @xmath337 . by definition of the acceptance condition in @xmath147 ,",
    "@xmath332 is accepted in @xmath147 if and only if @xmath338 , which is equivalent to say that for some @xmath339 , @xmath340 and for all @xmath341 , @xmath342 . since in the first statement",
    "we have shown that the range of @xmath316 for all @xmath279 is @xmath317 , @xmath343 and the proof for the second statement is complete .",
    "lemma  [ lma1 ] characterizes the probability of satisfying the specification in point - based semantics under the sampling interval @xmath114 with the probability of reaching a set @xmath344 in the product @xmath345 .",
    "given the objective of maximizing the probability of reaching a set in an , there exists a memoryless and deterministic policy such that by following this policy , from any state , the probability of reaching the set is maximized @xcite .",
    "we introduce a state @xmath346 into the product @xmath347 and modify @xmath348 such that for all @xmath349 and all @xmath273 , @xmath350 , and for all @xmath273 , @xmath351 , while the other transition probabilities remain unchanged . the product @xmath347 with the augmented state set and the modified transition probability function",
    "is denoted @xmath352 . the reward function @xmath353 is defined by @xmath354 .",
    "let @xmath355 be a memoryless and deterministic policy in @xmath352 and @xmath356 the set of all such policies in @xmath352 .",
    "the value function of policy @xmath189 is @xmath357,\\ ] ] where @xmath358 is the markov chain induced from @xmath352 with policy @xmath189 .",
    "thus , the optimal value function @xmath359 , and the dynamic programming equation is obtained : for @xmath360 , @xmath361,\\\\ & \\text { and } v^d({\\mathsf{sink}})=0 . \\end{split}\\end{aligned}\\ ] ]    given the optimal policy @xmath362 that achieves the maximum value of @xmath363 for all @xmath360 in the modified product @xmath352 , we derive a policy @xmath364 by letting @xmath365 . by the definition of reward function and the modified product , policy @xmath366 maximizes the probability of hitting the set @xmath344 in @xmath347 .",
    "a policy @xmath367 is implemented in the original system in in the following manner .",
    "the initial product state is @xmath368 with @xmath369 . at each sampling time",
    "@xmath370 , let the current product state be @xmath371 .",
    "we compute @xmath372 such that @xmath373 $ ] .",
    "note that at the sampling time the clock vector is always in @xmath291 by lemma  [ lma1 ] and thus @xmath374 , for which @xmath189 is defined .",
    "then , we apply a constant input @xmath375 during the time interval @xmath376 . at the next sampling time @xmath377 , according to the current state @xmath378 , we compute the state in @xmath147 and the clock vector such that @xmath300 .",
    "hence , the new product state is @xmath379 and a constant control input for the interval @xmath380 is obtained in the way we just described .    when the input space @xmath4 for the product is bounded , in the numerical method for the reward maximization problem in the product , in general we also discretize the input space @xmath4 with some discretization parameter @xmath381 .",
    "let @xmath382 be the discretized input space .",
    "given the optimal policy @xmath366 for the product and the optimal policy @xmath383 in the product with the input space @xmath382 , one can derive the bound on @xmath384 as a function of @xmath381 , which converges to @xmath166 as @xmath385 @xcite .",
    "thus , with both discretized state and input space , the implemented policy is near - optimal for the sde in with respect to the probability of satisfying the specification in the point - based semantics .",
    "based on theorem  [ thm : stateconverge ] , we show that the optimal policy synthesized in the product converges to the optimal policy that achieves the maximal probability of satisfying the specification in the dense - time semantics as the discretization in both state space and time space get finer .    given a discretization parameter @xmath386 where @xmath114 satisfies the local consistency condition in with respect to the spatial step @xmath249",
    ", it holds that @xmath387 where @xmath388 , @xmath389 and @xmath257 $ ] .",
    "first , it is noted by the local consistency condition and the constraint on @xmath114 in , @xmath114 is a decreasing function of @xmath249 and when @xmath390 , @xmath391 .    for a given @xmath293 where @xmath114 satisfies the constraint in with respect to @xmath249 , let @xmath392 be a policy in the product @xmath347 and @xmath393 be the induced markov chain . according to theorem  [ thm : stateconverge ] , when @xmath390 , @xmath391 and the continuous interpolations of @xmath394 and @xmath395 converge in distribution to @xmath9 and @xmath183 that solve the sde in . by the determinism in the transition function of the timed automaton and the labeling function , as @xmath277",
    ", @xmath396 also converges in distribution to @xmath197 , which is the product stochastic process derived from @xmath397 .",
    "according to the definition of reward functions @xmath398 and @xmath399 , since @xmath390 , we have @xmath391 , @xmath400 and @xmath401 converges to @xmath402 .",
    "now given the optimal control policy @xmath403 obtained for the product @xmath347 , let @xmath307 be the markov chain induced by @xmath404 in @xmath347 .",
    "we have that @xmath405 by the optimality of the value function @xmath406 .",
    "on the other hand , let @xmath407 be the optimal control policy in the continuous - time stochastic system .",
    "we construct a policy @xmath408 for the product @xmath409 such that the action @xmath410 is taken at the step @xmath292 .",
    "we have @xmath411 by the optimality of @xmath412 . since @xmath413",
    ", it is inferred that @xmath414 .",
    "therefore , @xmath415 .",
    "0.45     0.45     0.45     0.45     0.5     [ fig : simulation ]    this section illustrates the method using a motion planning example for a robot modeled as a stochastic dubin s car .",
    "the dynamics of the system are described by the @xmath416 where @xmath417 is the coordinate and heading angle of the robot , @xmath103 is the linear velocity and @xmath418 $ ] is the angular velocity input . in this example , @xmath419 is fixed and @xmath420 , and @xmath5 is a 3-dimensional wiener process on the probability space @xmath8 .    the workspace of the robot is depicted in figure  [ fig : xy - view ] , with two regions @xmath156 and @xmath421 of importance .",
    "the workspace is constrained by the walls @xmath422 .",
    "the objective of the robot is to maximize the probability of visiting region @xmath156 within the first @xmath423 time units and after visiting @xmath156 , reaching @xmath421 between the @xmath424rd and @xmath423th time units , while avoiding hitting the walls .",
    "we define atomic propositions @xmath425 , @xmath426 , which evaluates true when the robot is in region @xmath427 .",
    "an atomic proposition @xmath428 evaluates true if the robot hits the surrounding walls .",
    "the formula describing the specification is @xmath429 } ( ( r_1 \\land \\neg hitwall)\\land \\lozenge_{[3,5 ] } ( r_2\\land \\neg hitwall))$ ] . given an initial state @xmath430 ,",
    "we want to find an optimal policy that maximizes the probability of @xmath47 being satisfied .",
    "we select a spatial step @xmath431 to obtain a uniform discretization of the state space @xmath3 .",
    "given the choice of @xmath249 , the time step @xmath114 is chosen to be @xmath432 time units for the local consistency condition to hold for all state and control input pairs .",
    "the number of states in the @xmath270 is @xmath433 and the number of product states in the modified product @xmath434 is @xmath435 ( after trimming unreachable states ) . remind that the value iteration is polynomial in the size of the @xmath436 .",
    "the implementation are in matlab^^ on a desktop with intel(r ) core(tm ) processor and 16 gb of memory .",
    "the computation of the product takes @xmath437 minutes and the value iteration converges after @xmath438 iterations with a pre - specified error tolerance of @xmath439 .",
    "each iteration takes about @xmath440 minutes . in the value iteration",
    "we also approximate the input space @xmath4 with a finite set @xmath382 where @xmath441 is the discretization parameter for the input space .",
    "since the product state space of the example is @xmath423-dimensional , we select to plot the optimal value @xmath442 for the states with the initial heading angle @xmath443 , the initial state of the timed automaton and initial clock vector @xmath108 in figure  [ fig : valuefunction ] .",
    "figures  [ fig:3d - view ] , [ fig : xy - view ] , [ fig : xt - view ] , and [ fig : yt - view ] show the sample paths starting from @xmath444 for a time interval @xmath445 $ ] from different perspectives .",
    "the optimal value @xmath363 with @xmath446 is @xmath447 , which is the approximately maximal probability for satisfying @xmath47 in the point - based semantics under the sampling interval @xmath432 in the system with initial state @xmath448 . in simulation",
    ", there are @xmath449 paths ( marked in blue ) out of @xmath450 sample paths that satisfy the specification in the point - based semantics .",
    "the drawback of the explicit approach is scalability . in order to compute a control policy with a finer approximation",
    ", we need to reduce the spatial step @xmath249 as well as the time step @xmath114 for the local consistency condition to hold .",
    "the product state space becomes very large for a fine discretization .",
    "for example , if @xmath249 is chosen to be @xmath451 , @xmath114 has to be chosen below @xmath452 time units and for the simple example , the product has @xmath453 states after trimming .",
    "we did not carry out the computation for @xmath442 given this finer discretization since it is very time consuming .",
    "we discuss the limitation and possible solutions to deal with the issue of scalability in section  [ sec : conclude ] .",
    "this paper proposes a numerical method based on the markov chain approximation method for stochastic optimal control with respect to a subclass of quantitive metric temporal logic specifications .",
    "we show that as the discretization gets finer , the optimal control policy in the discrete abstract system with respect to satisfying the specification in the point - based semantics converges to the optimal policy in the original system with respect to the dense - time semantics for satisfying the formula . the approach can be easily extended to bounded - time mtl formulas including signal temporal logic formulas . in the future work",
    ", we aim to investigate the error bounds introduced by the proposed discrete approximation method . on the other hand ,",
    "since scalability is a critical issue in the explicit approximation method , we will also investigate a solution approach based on implicit approximation @xcite . with implicit approximation method",
    ", we can potentially reduce the size of discrete abstract system by treating the clock vector as a state variable , whose discretization parameters are pre - defined and potentially different from the interpolation interval .",
    "parallel algorithms and distributed planning for large - scale s are also considered to handle the issue of scalability .",
    "a.  abate , j .-",
    "katoen , and a.  mereacre , `` quantitative automata model checking of autonomous stochastic hybrid systems , '' in _ acm international conference on hybrid systems : computation and control _ , 2011 , pp .",
    "m.  lahijanian , s.  b. andersson , and c.  belta , `` a probabilistic approach for control of a stochastic system from ltl specifications , '' in _ ieee conference on decision and control _ , 2009 ,",
    "22362241 .",
    "m.  svorenova , j.  kretinsky , m.  chmelik , k.  chatterjee , i.  cerna , and c.  belta , `` temporal logic control for stochastic linear systems using abstraction refinement of probabilistic games , '' in _ acm international conference on hybrid systems : computation and control _ , 2015 , to appear .",
    "h.  abbas , b.  hoxha , g.  fainekos , and k.  ueda , `` robustness - guided temporal logic testing and verification for stochastic cyber - physical systems , '' in _ ieee annual international conference on cyber technology in automation , control , and intelligent systems _ , 2014 , pp .",
    "16 .",
    "v.  raman , a.  donze , d.  sadigh , r.  murray , and s.  a. seshia , `` reactive synthesis from signal temporal logic specifications , '' in _ acm international conference on hybrid systems : computation and control _ , 2015 , to appear .",
    "r.  alur , t.  feder , and t.  a. henzinger , `` the benefits of relaxing punctuality , '' _ journal of the acm _ , vol .",
    "43 , no .  1 ,",
    "116146 , jan . 1996 .",
    "[ online ] .",
    "available : http://doi.acm.org/10.1145/227595.227602"
  ],
  "abstract_text": [
    "<S> this paper studies an optimal control problem for continuous - time stochastic systems subject to reachability objectives specified in a subclass of metric interval temporal logic specifications , a temporal logic with real - time constraints . </S>",
    "<S> we propose a probabilistic method for synthesizing an optimal control policy that maximizes the probability of satisfying a specification based on a discrete approximation of the underlying stochastic system . </S>",
    "<S> first , we show that the original problem can be formulated as a stochastic optimal control problem in a state space augmented with finite memory and states of some clock variables . </S>",
    "<S> second , we present a numerical method for computing an optimal policy with which the given specification is satisfied with the maximal probability in point - based semantics in the discrete approximation of the underlying system . </S>",
    "<S> we show that the policy obtained in the discrete approximation converges to the optimal one for satisfying the specification in the continuous or dense - time semantics as the discretization becomes finer in both state and time . </S>",
    "<S> finally , we illustrate our approach with a robotic motion planning example . </S>"
  ]
}
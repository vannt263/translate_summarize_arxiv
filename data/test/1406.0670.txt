{
  "article_text": [
    "as is well - known , the logical theory @xmath5 , sometimes called presburger arithmetic , is decidable @xcite .",
    "bchi @xcite showed that if we add the function @xmath6 , for some fixed integer @xmath7 , where @xmath8 , then the resulting theory is still decidable .",
    "this theory is powerful enough to define finite automata ; for a survey , see .    as a consequence , we have the following theorem ( see , e.g. , @xcite ) :    there is an algorithm that , given a proposition phrased using only the universal and existential quantifiers , indexing into one or more @xmath9-automatic sequences , addition , subtraction , logical operations , and comparisons , will decide the truth of that proposition .",
    "[ one ]    here , by a @xmath9-automatic sequence , we mean a sequence @xmath10 computed by deterministic finite automaton with output ( dfao ) @xmath11 . here",
    "@xmath12 is the input alphabet , @xmath13 is the output alphabet , and outputs are associated with the states given by the map @xmath14 in the following manner : if @xmath15 denotes the canonical expansion of @xmath16 in base @xmath9 , then @xmath17 = \\kappa(\\delta(q_0 , ( n)_k))$ ] .",
    "the prototypical example of an automatic sequence is the thue - morse sequence @xmath18 , the fixed point ( starting with @xmath19 ) of the morphism @xmath1 , @xmath20 .",
    "it turns out that many results in the literature about properties of automatic sequences , for which some had only long and involved proofs , can be proved purely mechanically using a decision procedure .",
    "it suffices to express the property as an appropriate logical predicate , convert the predicate into an automaton accepting representations of integers for which the predicate is true , and examine the automaton .",
    "see , for example , the recent papers .",
    "furthermore , in many cases we can explicitly enumerate various aspects of such sequences , such as subword complexity .    beyond base @xmath9 , more exotic numeration systems are known , and one can define automata taking representations in these systems as input .",
    "it turns out that in the so - called pisot numeration systems , addition is computable , and hence a theorem analogous to theorem  [ one ] holds for these systems .",
    "see , for example , .",
    "it is our contention that the power of this approach has not been widely appreciated , and that many results , previously proved using long and involved ad hoc techniques , can be proved with much less effort by phrasing them as logical predicates and employing a decision procedure .",
    "furthermore , many enumeration questions can be solved with a similar approach .",
    "we have implemented a decision algorithm for one such system ; namely , fibonacci representation . in this paper",
    "we report on our results obtained using this implementation .",
    "we have reproved many results in the literature purely mechanically , as well as obtained new results , using this implementation .",
    "the paper is organized as follows . in section  [ fibrep ] , we briefly recall the details of fibonacci representation . in section  [ proofsf ]",
    "we report on our mechanical proofs of properties of the infinite fibonacci word ; we reprove many old results and we prove some new ones . in section  [ finitefib ]",
    "we apply our ideas to prove results about the finite fibonacci words . in section  [ rotefib ]",
    "we study a special infinite word , the rote - fibonacci word , and prove many properties of it , including a new avoidability result . in section",
    "[ other ] we look briefly at another sequence , the fibonacci analogue of the thue - morse sequence . in section  [ additive ]",
    "we apply our methods to another avoidability problem involving additive squares . in section  [ enumer ]",
    "we report on mechanical proofs of some enumeration results .",
    "some details about our implementation are given in the last section .",
    "let the fibonacci numbers be defined , as usual , by @xmath21 , @xmath22 , and @xmath23 for @xmath24 .",
    "( we caution the reader that some authors use a different indexing for these numbers . )",
    "it is well - known , and goes back to ostrowski @xcite , lekkerkerker @xcite , and zeckendorf @xcite , that every non - negative integer can be represented , in an essentially unique way , as a sum of fibonacci numbers @xmath25 , subject to the constraint that no two consecutive fibonacci numbers are used .",
    "for example , @xmath26 . also see @xcite .",
    "such a representation can be written as a binary string @xmath27 representing the integer @xmath28 .",
    "for example , the binary string @xmath29 is the fibonacci representation of @xmath30 .    for @xmath31",
    ", we define @xmath32_f : = \\sum_{1 \\leq",
    "i \\leq n } a_i f_{n+2-i}$ ] , even if @xmath27 has leading zeroes or consecutive @xmath33 s .",
    "by @xmath34 we mean the _ canonical _ fibonacci representation for the integer @xmath16 , having no leading zeroes or consecutive @xmath33 s .",
    "note that @xmath35 , the empty string .",
    "the language of all canonical representations of elements of @xmath36 is @xmath37 .    just as fibonacci representation is the analogue of base-@xmath9 representation",
    ", we can define the notion of _ fibonacci - automatic sequence _ as the analogue of the more familiar notation of @xmath9-automatic sequence .",
    "we say that an infinite word @xmath38 is fibonacci - automatic if there exists an automaton with output @xmath39 that @xmath40 for all @xmath41 .",
    "an example of a fibonacci - automatic sequence is the infinite fibonacci word , @xmath42 which is generated by the following 2-state automaton :    ( q_0 ) @xmath43 ; ( q_1 ) [ right = of q_0 ] @xmath44 ;    ( q_0 ) edge [ loop above ] node 0 ( ) ( q_0.10 ) edge node 1 ( q_1.170 ) ( q_1.190 ) edge node 0 ( q_0.350 ) ;    to compute @xmath45 , we express @xmath46 in canonical fibonacci representation , and feed it into the automaton . then @xmath45 is the output associated with the last state reached ( denoted by the symbol after the slash ) .",
    "another characterization of fibonacci - automatic sequences can be found in @xcite .",
    "a basic fact about fibonacci representation is that addition can be performed by a finite automaton . to make this precise , we need to generalize our notion of fibonacci representation to @xmath47-tuples of integers for @xmath48 . a representation for @xmath49 consists of a string of symbols @xmath50 over the alphabet @xmath51",
    ", such that the projection @xmath52 over the @xmath46th coordinate gives a fibonacci representation of @xmath53 .",
    "notice that since the canonical fibonacci representations of the individual @xmath53 may have different lengths , padding with leading zeroes will often be necessary .",
    "a representation for @xmath54 is called canonical if it has no leading @xmath55 $ ] symbols and the projections into individual coordinates have no occurrences of @xmath56 .",
    "we write the canonical representation as @xmath57 . thus ,",
    "for example , the canonical representation for @xmath58 is @xmath59[1,0][0,0][0,1][0,0][1,0]$ ] .",
    "thus , our claim about addition in fibonacci representation is that there exists a deterministic finite automaton ( dfa ) @xmath60 that takes input words of the form @xmath61^ * ( x , y , z)_f$ ] , and accepts if and only if @xmath62 .",
    "thus , for example , @xmath60 accepts @xmath63[1,0,0][0,1,0][1,0,1]$ ] , since the three strings obtained by projection are @xmath64 , which represent , respectively , @xmath65 , @xmath66 , and @xmath67 in fibonacci representation .",
    "this result is apparently originally due to berstel @xcite ; also see .",
    "since this automaton does not appear to have been given explicitly in the literature and it is essential to our implementation , we give it here .",
    "the states of @xmath60 are @xmath68 , the input alphabet is @xmath69 , the final states are @xmath70 , the initial state is @xmath71 , and the transition function @xmath72 is given below .",
    "the automaton is incomplete , with any unspecified transitions going to a non - accepting dead state that transitions to itself on all inputs .",
    "this automaton actually works even for non - canonical expansions having consecutive @xmath33 s ; an automaton working only for canonical expansions can easily be obtained by intersection with the appropriate regular languages .",
    "the state @xmath19 is a `` dead state '' that can safely be ignored .",
    ".transition table for @xmath60 for fibonacci addition [ cols=\"^,^,^,^,^,^,^,^,^\",options=\"header \" , ]     we use the predicate @xmath73[i][i+n]=0 ) \\wedge ( \\forall j < i\\ ( \\exists t<2n \\ ( { \\bf f}[j+t]\\not= { \\bf f}[i+t]))).\\ ] ] to create the matrices and vectors .",
    "@xmath74 infinitely often and @xmath75 infinitely often .",
    "more precisely @xmath74 iff @xmath76 or @xmath77 for @xmath78 , and @xmath75 iff @xmath79 for @xmath78 .    for the first statement",
    ", we create a dfa accepting those @xmath34 for which @xmath74 , via the predicate @xmath80[i][i+n]=0 ) \\wedge   ( \\operatorname{fab}[n][j][j+n]=0 ) ) \\implies ( \\forall t<2n \\ ( { \\bf f}[j+t ] = { \\bf f}[i+t])).\\ ] ] the resulting @xmath67-state automaton accepts the set specified .    for the second result , we first compute the minimal polynomial of the matrix @xmath81 of the linear representation .",
    "it is @xmath82 .",
    "this means that , for @xmath83 , we have @xmath84 where , as usual , @xmath85 and @xmath86 . solving for the constants ,",
    "we determine that @xmath87 for @xmath24 , as desired .",
    "to show that these are the only cases for which @xmath75 , we use a predicate that says that there are not at least three different factors of length @xmath88 that are not abelian squares . running this through our program results in only the cases",
    "previously discussed .",
    "finally , we turn to abelian cubes . unlike the case of squares",
    ", some orders do not appear in @xmath3 .",
    "the fibonacci word @xmath3 contains , as a factor , an abelian cube of order @xmath16 iff @xmath34 is accepted by the automaton below .    , width=624 ]    theorem  [ fibr ] has the following interesting corollary .",
    "let @xmath89 be an arbitrary morphism such that @xmath90 .",
    "then @xmath91 is an infinite fibonacci - automatic word .    from theorem  [ fibr ]",
    "we see that there is a predicate @xmath92 which is true if @xmath93|_0 $ ] and false otherwise , and this predicate can be implemented as a finite automaton taking the inputs @xmath16 and @xmath94 in fibonacci representation .",
    "suppose @xmath95 and @xmath96 .",
    "now , to show that h(*f * ) is fibonacci - automatic , it suffices to show that , for each letter @xmath97 , the language of `` fibers '' @xmath98 = a   \\}\\ ] ] is regular .    to see this",
    ", we write a predicate for the @xmath16 in the definition of @xmath99 , namely @xmath100)| ) \\ \\wedge \\",
    "\\operatorname{zc}(m , r_0 ) \\ \\wedge \\",
    "( r_0+r_1=m ) \\wedge \\\\ ( r_0 |w| + r_1 |x| = q )   \\ \\wedge \\ ( ( { \\bf f}[m]=0 \\ \\wedge \\   w[n - q ] = a ) \\ \\vee \\   ( { \\bf f}[m ] = 1 \\",
    "\\wedge\\   x[n - q ] = a ) ) .\\end{gathered}\\ ] ]    notice that the predicate looks like it uses multiplication , but this multiplication can be replaced by repeated addition since @xmath101 and @xmath102 are constants here .    unpacking this predicate",
    "we see that it asserts the existence of @xmath103 , @xmath104 , @xmath105 , and @xmath106 having the meaning that    * the @xmath16th symbol of h(*f * ) lies inside the block @xmath107)$ ] and is in fact the @xmath108th symbol in the block ( with the first symbol being symbol 0 ) * @xmath109 $ ] has @xmath105 0 s in it * @xmath110 $ ] has @xmath106 1 s in it * the length of @xmath111)$ ] is @xmath104    since everything in this predicate is in the logical theory @xmath112 where @xmath113 is the predicate for the fibonacci word , the language @xmath99 is regular .",
    "notice that everything in this proof goes through for other numeration systems , provided the original word has the property that the parikh vector of the prefix of length @xmath16 is synchronized .",
    "our program is written in java , and was developed using the eclipse development environment .",
    "we used the dk.brics.automaton package , developed by anders mller at aarhus university , for automaton minimization .",
    "maple 15 was used to compute characteristic polynomials .",
    "the graphviz package was used to display automata .",
    "our program consists of about 2000 lines of code .",
    "we used hopcroft s algorithm for dfa minimization .",
    "a user interface is provided to enter queries in a language very similar to the language of first - order logic .",
    "the intermediate and final result of a query are all automata . at every intermediate step , we chose to do minimization and determinization , if necessary .",
    "each automaton accepts tuples of integers in the numeration system of choice .",
    "the built - in numeration systems are ordinary base-@xmath9 representations and fibonacci base",
    ". however , the program can be used with any numeration system for which an automaton for addition and ordering can be provided .",
    "these numeration system - specific automata can be declared in text files following a simple syntax . for the automaton resulting from a query",
    "it is always guaranteed that if a tuple @xmath114 of integers is accepted , all tuples obtained from @xmath114 by addition or truncation of leading zeros are also accepted . in fibonacci representation , we make sure that the accepting integers do not contain consecutive @xmath33 s .",
    "the program was tested against hundreds of different test cases varying in simplicity from the most basic test cases testing only one feature at a time , to more comprehensive ones with many alternating quantifiers .",
    "we also used known facts about automatic sequences and fibonacci word in the literature to test our program , and in all those cases we were able to get the same result as in the literature .",
    "in a few cases , we were even able to find small errors in those earlier results",
    ".    the source code and manual will soon be available for free download .",
    "we thank kalle saari for bringing our attention to the small error in .",
    "we thank narad rampersad and michel rigo for useful suggestions .",
    "eric rowland thought about the proof of theorem  [ additive - thm ] with us in 2010 , and was able to prove at that time that the word @xmath115 avoids additive squares .",
    "we acknowledge his prior work on this problem and thank him for allowing us to quote it here .                                        j.  r. bchi .",
    "weak secord - order arithmetic and finite automata .",
    "( 1960 ) , 6692 .",
    "reprinted in s. mac lane and d. siefkes , eds .",
    ", _ the collected works of j. richard bchi _ , springer - verlag , 1990 , pp .",
    "398424 .",
    "j.  d. currie , n.  rampersad , and k.  saari .",
    "suffix conjugates for a class of morphic subshifts . in j.",
    "karhumki , a.  lepist , and l.  zamboni , editors , _ words 2013 _ , vol .",
    "8079 of _ lecture notes in computer science _ , pp . 95106 .",
    "springer - verlag , 2013 .                      c.  frougny and b.  solomyak . on representation of integers in linear numeration systems . in m.",
    "pollicott and k.  schmidt , editors , _ ergodic theory of @xmath117 actions ( warwick , 19931994 ) _ , vol .",
    "228 of _ london mathematical society lecture note series _ , pp . 345368 .",
    "cambridge university press , 1996 .",
    "d.  goc , d.  henshall , and j.  shallit .",
    "automatic theorem - proving in combinatorics on words . in n.  moreira and r.  reis , editors , _ ciaa 2012 _ , vol .",
    "7381 of _ lecture notes in computer science _ , pp . 180191 .",
    "springer - verlag , 2012 .",
    "d.  goc , h.  mousavi , and j.  shallit . on the number of unbordered factors . in a .-",
    "dediu , c.  martin - vide , and b.  truthe , editors , _ lata 2013 _ , vol .",
    "7810 of _ lecture notes in computer science _ , pp . 299310 .",
    "springer - verlag , 2013 .",
    "d.  goc , k.  saari , and j.  shallit .",
    "primitive words and lyndon words in automatic and linearly recurrent sequences . in a",
    "dediu , c.  martin - vide , and b.  truthe , editors , _ lata 2013 _ , vol .",
    "7810 of _ lecture notes in computer science _ , pp .",
    "springer - verlag , 2013 .",
    "d.  goc , l.  schaeffer , and j.  shallit .",
    "the subword complexity of @xmath9-automatic sequences is @xmath9-synchronized . in m .-",
    "bal and o.  carton , editors , _ dlt 2013 _ , vol .",
    "7907 of _ lecture notes in computer science _ , pp . 252263 .",
    "springer - verlag , 2013 .",
    "r.  kolpakov and g.  kucherov . on maximal repetitions in words . in g.",
    "ciobanu and g.  pun , editors , _ fundamentals of computation theory : fct 99 _ , vol .",
    "lecture notes in computer science _ , pp . 374385 .",
    "springer - verlag , 1999 .",
    "m.  presburger .",
    "die volstndigkeit eines gewissen systems der arithmetik ganzer zahlen , in welchem die addition als einzige operation hervortritt . in _",
    "sparawozdanie z i kongresu matematykw krajw slowianskich _ , pp .",
    "92101 , 395 .",
    "warsaw , 1929 .",
    "j.  shallit .",
    "decidability and enumeration for automatic sequences : a survey . in a.",
    "a. bulatov and a.  m. shur , editors , _ csr 2013 _ , vol .",
    "7913 of _ lecture notes in computer science _ , pp . 4963 .",
    "springer - verlag , 2013 ."
  ],
  "abstract_text": [
    "<S> we implement a decision procedure for answering questions about a class of infinite words that might be called ( for lack of a better name ) `` fibonacci - automatic '' . </S>",
    "<S> this class includes , for example , the famous fibonacci word @xmath0 , the fixed point of the morphism @xmath1 and @xmath2 . </S>",
    "<S> we then recover many results about the fibonacci word from the literature ( and improve some of them ) , such as assertions about the occurrences in @xmath3 of squares , cubes , palindromes , and so forth . as an application of our method we prove a new result </S>",
    "<S> : there exists an aperiodic infinite binary word avoiding the pattern @xmath4 . </S>",
    "<S> this is the first avoidability result concerning a nonuniform morphism proven purely mechanically .    </S>",
    "<S> [ theorem]corollary [ theorem](almost ) theorem [ theorem]lemma [ theorem]proposition    [ theorem]definition [ theorem]example [ theorem]conjecture [ theorem]open problem [ theorem]procedure    [ theorem]remark </S>"
  ]
}
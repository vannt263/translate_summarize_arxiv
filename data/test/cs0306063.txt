{
  "article_text": [
    "grid computing for the high energy and nuclear physics communities will need to deal with thousands of users and hundreds of computing facilities in the near future .",
    "traditional computing models require that each user must register individually with each computing facility .",
    "this model will not scale as the numbers of users and facilities increase .",
    "some tools have already been developed to address the scalability problems by centralizing user registration with a central service for a distributed organization including cas @xcite and voms @xcite .",
    "as they are currently implemented , these approaches do not provide enough information about users to allow access to some sites , especially doe laboratories .",
    "the separation of user management software from the user policy creates potential security problems for the sites .",
    "the purpose of this project was to adapt the existing grid mapfile tools to the large laboratory environment .",
    "the particular problem that we intend to address is the need for strong pre - registration of users , and we believe that this builds nicely on some of the preliminary pieces that were available as early as 2001 . our focus has been on developing a user account management system and tools to allow sites to keep track of users .",
    "we intend all of these developments to be compatible with whatever vo management tools are adopted for the large hadron collider computing grid project ( lcg ) , although we do have some requirements to put on those tools .    before a user can be authorized to use resources at a site",
    ", the site must have some basis for trusting the user and approving the request .",
    "for a site to perform user based authorization , the user must be known to the site .",
    "different sites may have different requirements that must be satisfied before granting site access , but at a minimum , some basic user information must be collected and provided to the site by secure , trusted and auditable means .",
    "an additional requirement is to maintain history information of site access rites .",
    "to get started on solving these problems , we developed a user management model that has been presented at several open meetings over the past year , most strongly within the ppdg site - aaa working group .",
    "a primary requirement is that the user information is trustable , and this requires that the information is validated before it is distributed to resource providers . to accomplish this ,",
    "a virtual organization must identify some set of members who will act as registrars , meaning that they are the ones who can add users into the vo s membership list .",
    "this list of registrars must be known and accepted by the resource providers who will be providing services to the vo .",
    "when a user joins the vo , she / he goes to one of the designated registrars and provides basic identification and contact info such as grid certificate , distinguish name(dn ) , real name , institution and email address .",
    "the exact info to be provided must be agreed among all of the resource providers .",
    "the user also `` signs '' a user agreement that is required by the vo .",
    "lcg is beginning to work on this registration model , and a prototype user agreement is being used .",
    "the registrar then adds the user to a vo database .",
    "the user record will include the information that is required by the resource providers plus the name of the registrar .",
    "existing vo management tools do not keep track of enough user info to satisfy many resource providers , and better user registration and vo management tools will need to be developed .    once the user is added to the vo database , sites will need tools to download and keep track of these users . this requires more than just a simple `` make - gridmapfile '' tool .",
    "sites need to be able to plug in local policy modules to control the user access .",
    "historical access rights need to be kept track of .",
    "sites need to serve large sets of grid users and many sites require pre - registration of grid users .",
    "grid users need access to a large number of sites without the detailed knowledge about these individual sites . to make the whole transaction scale to the grid environment",
    ", sites and vos should work out reliable grid user registration mechanisms .",
    "grid user registration process includes three parties : virtual organization ( vo ) , grid users and resource providers .",
    "virtual organization needs to satisfy the requirements of existing large grid resource sites with respect to the acceptance of grid credentials for access to their services .",
    "because those requirements are non - uniform , the user registration mechanisms and toolkits must provide to sites an interface to insert their own implementations of their requirements based on site policies .",
    "sites must articulate what resources they are making available as grid resources and the details of the access requirements .",
    "this user registration mechanisms should enable sites to restrict access to the members of a specific vo , not automatically grant access to anyone with authentication credentials from grid .",
    "the requirements for these three parties are :    * * site requirements * : all sites currently have authentication systems for identifying users and verifying user identities .",
    "any new user registration system must be capable of being integrated with site policy and site infrastructure .",
    "sites need to collect sufficient information about users and the registration chain .",
    "information must be provided to site in secure , trusted , auditable manner .",
    "the grid user list to sites should be reasonably static . * * user requirements * : users should be required to register only once per virtual organization .",
    "the registration process must be reasonably local to the user .",
    "virtual organizations should only collect reasonable information without violating the user s privacy .",
    "the items collected by vo should be relatively static .",
    "all of the private user information should be protected . *",
    "* vo requirements * sites must have reasonably complete and up - to - date user list so that the grid scheduler can distribute user jobs without keeping track of all users authorization information at each individual site .",
    "the grid user authentication infrastructure for virtual organization consists of two components : vo for large collaboration and grid user management system for sites .",
    "the detailed implementation of these two components can be found in the remaining part of this section .",
    "figure [ figure : schematic ] shows how these two components are organized together to enable large number of grid users to register with distributed site resources .",
    "the user registration authority obtains the user information and sends this information to upper - level registration authority via a feed up daemon",
    ". then the user information is stored at vo user database .",
    "the local site daemon interacts with the vo user database to obtain user information and stores into the local database .",
    "the local policy is considered on whether the user can be registered at the local resource provider .",
    "if the user gets authorization , the grid user management system interacts with the local user account management system on behalf of the user . in this section",
    ", we also discuss the security issues with the infrastructure and provide a solution based on grid security infrastructure ( gsi ) .",
    "* vo user database * : an expandable columnar database that contains one record per authorized user .",
    "each record includes sufficient information to allow account creation at remote sites .",
    "exact content of record is subject to negotiation between sites and vos .",
    "the vo user databases must be secure both to safeguard potentially private user information but also to ensure a reliable and trustable source of information for sites .",
    "the vo user database will accept inputs from the remote user registration authorities in a secure and ( two - way mutually authenticated ) trusted way .",
    "such inputs will be pushed from the registration authorities to the vo user database .",
    "the vo user database must also provide a capability for assigning users to one or more groups within the vo and this group membership information must be available to the sites together with other user information .",
    "* vo user registration authority * : it basically tracks the same information about users as the primary vo user database and feeds this information up to the vo . the purpose is to distribute the responsibility of registering users .",
    "the functionality may be tiered with sub - registration authorities feeding up a chain .",
    "any user registration authority could also function as a vo user database for a regional subsection of a vo , so the same implementation could be used for both the root vo and regional sub - vo , with the feed up communications handled by an external daemon .",
    "a local user registration authority may contain more information about a user than is required by the vo user database , and the feed up daemon would only push the information that is actually required .",
    "* feed up daemon * : this module establishes the secure , mutually - authenticated connection and pushes the required user information into the vo user database .",
    "figure [ figure : architecture ] provides the system architecture of local grid user management system and how its components interact with each other to register the globally dispersed users to sites and allow them to use the site resources .",
    "* site daemon * : this is the active piece that runs at each site to pull user information from a vo user database and invoke the local tools that track and manage local accounts .",
    "this daemon must use secure mutually - authenticated protocols to pull the user information from the vo server .",
    "the information required by the site may be a subset of the information available , and only the required information should be retrieved .",
    "the site daemon uses the information retrieved from the ( one or more ) vo user database together with local information such as a list of banned users or a list of existing non - grid users to initiate and control the local functions described in the following paragraphs .    *",
    "local database * : maintain a database tracking user information , including all of the information required by the site to create user accounts plus any additional local customization that may be required .",
    "this database should serve both current and historic information .",
    "* create and maintain local accounts * : this could mean different things at different sites , anywhere from directly invoking tools that actually create accounts to printing the user information for a human administrator to review and maintain accounts manually .",
    "the diversity of possible implementations requires a send request followed by an asynchronous process that obtains the results of the requests , possibly many hours later .",
    "the results can be ( at a minimum ) success or failure of the request .",
    "the actual local user identity assigned to the request is also returned as part of the results if it is a new account request .",
    "* maintain the grid - mapfile * : this means creating a record for each user with the user certificate .",
    "the user s distinguished name is mapped to local account name , and the mapping information is written into a system file belonging to the grid gatekeeper . if a new account request has not been successfully completely yet , obviously no grid - mapfile record is created for that user yet .      the grid user registration system satisfies the requirements listed in section [ requirement - ref ] .",
    "when the sites fetch user information from a vo server , it uses the grid security infrastructure ( gsi ) @xcite to mutually authenticate with the vo server .",
    "the site administrator must register his grid certificate at the vo server .",
    "after he / she is authenticated as a legal site administrator , his grid identify will be enrolled in the vo site administrator list .",
    "then he is authorized to download user information .",
    "the ldap - based vo @xcite server can use access control list ( acl ) with different granularities for different site administrators . on the other hand , even compromising the grid user management system could not grant illegal access to other resources .",
    "the name of our software is `` gums '' , the acronym for the grid user management system . in this section",
    ", we will provide the install instructions and user manual for gums . before you install gums ,",
    "you should obtain the vo server information from the vo administrator of your collaboration .",
    "you also need to install and setup a mysql server at your site .",
    "the mysql server and the gums software do not need to be installed on the same host .",
    "the software package can be obtained without any restriction at brookhaven national laboratory .",
    "after you obtain the software , you only need to execute the following commands to install and configure the software .",
    "* install from tarball *    * obtaining and unpacking the package s source code + ....",
    "$ tar zxvf   gums-1.2.src.tar.gz    $ cd gums-1.2 .... * configuration + ....    $ ./configure [ --prefix < prefix > ] .... * building + ....    $ make .... * installation + ....    $ make install ....    * install from source rpm *    * obtaining and unpacking the source package + ....",
    "$ rpm -i gums-1.2-1.src.rpm   .... * building + ....    $ cd /usr",
    "/ src / redhat / specs    $ rpm -ba gums-1.2.spec .... * installation + ....    $ rpm -uvh gums-1.2-1.i386.rpm    ....    * post - installation * + you need to setup your local mysql database before you use the system commands . to set up the configuration file , go to your installation directory .",
    "if you install the gums rpm , the installation directory by default is /usr",
    "/ local / gums/ , the configure file is /usr / local / gums / etc / vo.conf , and the executables are in /usr / local / gums / sbin/.    * select the vo ldap server from which you could get user information and certificates . by defaults ,",
    "it is ldap://spider.usatlas.bnl.gov:6200/ou = us - atlas , o = atlas , dc = ppdg - datagrid , dc = org .",
    "* you need to choose a mysql server to save your user information and certificates locally .",
    "before you run any command , make sure your mysql is started and you have proper permission . *",
    "initialize mysql database , set up database , database tables and populate the table with records by running the command  initdb \" .",
    "the following tools are available for the gums software .",
    "* * initdb : * it initializes the local mysql database .",
    "this command setups the mysql user account , creates tables , populates the tables with 100 local grid accounts ( grid001 to grid099 ) . * * getvousers / secgetvousers : * these commands download the user information from the vo servers specified by the configuration file , update the local grid account databases . if a new user comes from a vo , his / her information is inserted to the database , the information about his role in vo is also be put into the user database . based on his role ,",
    "the user obtains the site authorization to execute his requests which abide by his role . at the current implementation , the role authorization",
    "is implemented based on unix group . for each role ,",
    "a group is created with specific authorization for that role .",
    "these two command line tools keep track of all members of a vo server .",
    "if a member resigns from the vo , then the tools will disable the corresponding authorization assigned to this user by removing the user from the group . these tools",
    "send email to the site administrator for adding and removing a user to / from a group .",
    "the site administrator should be involved to do the actual operations . * * updategroup : * it checks the user s vo memberships and roles , and assigns the user to the unix group created for each role in the vo . the group is used to implement role based authorizations in a vo .",
    "for example , an atlas vo has three roles : simulation role , reconstruction role , and analysis role .",
    "we create three unix groups for these roles .",
    "each group can use the computing resource and disk space according to their group allocations .",
    "if a vo member has the role for reconstruction , his / her account belongs to the unix group `` reconstruction '' and he is authorized to do work on the computing resource allocated for reconstruction . + if this tool runs in `` cron '' mode , it scans the pending group requests and sends the requests of updating the users group membership to the site administrator .",
    "if a new role in a vo is found , it sends emails to the site administrator to create a group for this new role .",
    "after the site administrator creates the group , he / she needs to insert the newly created group to the grid user database .",
    "this tool provides the interface for the site administrator to access the database . *",
    "* generate_gridmap : * this script scans through all of user records stored in mysql database and generates a gridmap file .",
    "in this paper , we discussed requirements for distributed , scalable grid user registration .",
    "we presented a system we developed , called gums , which automates user registration and management at for a grid site .",
    "gums is designed to satisfy the stated distributed registration requirements while incorporating site policies .",
    "our experience using gums proved that this system was scalable , flexible and secure .    the distributed registration infrastructure and the trust relationships within a virtual organization are largely undeveloped at this time , but organizations such as the lhc ( the large hadron collider ) computing grid project are starting to address this issue .",
    "the current implementation of gums is based on plain password protected mysql , but mysql recently included the secure sockets layer ( ssl ) and the x509 certificate in its authentication module .",
    "we will incorporate these security enhancements in the mysql - based local database which stores user information for gums .",
    "l. pearlman , v. welch , i. foster , c. kesselman , s. tuecke , `` a community authorization service for group collaboration '' , proceedings of the ieee 3rd international workshop on policies for distributed systems and networks , 2002 .",
    "r. alfieri , r. cecchini , v. ciaschini , l. dellagnello , a. frohner , a. gianoli , k. lorentey , and f. spataro , `` voms , an authorization system for virtual organizations '' , 1st european across grids conference , santiago de compostela , february 13 - 14 , 2003"
  ],
  "abstract_text": [
    "<S> registration and management of users in a large scale grid computing environment presents new challenges that are not well addressed by existing protocols . within a single virtual organization ( vo ) </S>",
    "<S> , thousands of users will potentially need access to hundreds of computing sites , and the traditional model where users register for local accounts at each site will present significant scaling problems . </S>",
    "<S> however , computing sites must maintain control over access to the site and site policies generally require individual local accounts for every user . </S>",
    "<S> we present here a model that allows users to register once with a vo and yet still provides all of the computing sites the information they require with the required level of trust . </S>",
    "<S> we have developed tools to allow sites to automate the management of local accounts and the mappings between grid identities and local accounts .    * keywords * : grid computing , virtual organization , user accounts , grid user management system . </S>"
  ]
}
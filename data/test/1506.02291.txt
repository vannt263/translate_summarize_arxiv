{
  "article_text": [
    "in this paper , we make some progress on a problem that has essentially been open since 1902 @xcite .",
    "it is well known that for each monic polynomial @xmath3 one can construct a matrix @xmath4 , such that @xmath5 .",
    "one of the options is a companion matrix ( see , e.g. , @xcite ) @xmath6.\\ ] ] thus , we can numerically compute the zeros of the polynomial @xmath7 as eigenvalues of the corresponding companion matrix @xmath8 using tools from numerical linear algebra .",
    "this approach is used in many numerical packages , for instance in the ` roots ` command in matlab  @xcite .",
    "the aim of this paper is to find a similar elegant tool for finding the zeros of a system of two bivariate polynomials of degree @xmath1 @xmath9 an approach analogous to the univariate case would be to construct matrices @xmath10 , @xmath11 , @xmath12 , @xmath13 , @xmath14 , and @xmath15 of size @xmath16 such that @xmath17 \\det(a_2+x b_2 + y c_2)&=q(x , y ) .",
    "\\end{split}\\ ] ] this would give an equivalent two - parameter eigenvalue problem @xcite @xmath18 ( a_2+x b_2 + y c_2 ) \\",
    ", u_2&=0 \\end{split}\\ ] ] that could be solved by the standard tools like the qz algorithm , see @xcite for details .",
    "this idea looks promising , but there are many obstacles on the way to a working numerical algorithm that could be applied to a system of bivariate polynomials .",
    "although it is known for _ more than a century _",
    "@xcite that such matrices of size @xmath19 exist , so far there are no efficient numerical algorithms that can construct them . even worse , it seems that the construction of such matrices might be an even harder problem than finding zeros of polynomials @xmath7 and @xmath20 .",
    "there exist simple and fast constructions @xcite that build matrices of size @xmath21 that satisfy ( [ eq : detrep ] ) , where the resulting two - parameter eigenvalue problem ( [ eq : twopar ] ) is singular ; we will discuss more details in section  [ sec : multipar ] .",
    "recent results @xcite show that it is possible to solve singular two - parameter eigenvalue problems numerically for small to medium - sized matrices .",
    "however , the @xmath21 size of the matrices pushes the complexity of the algorithm to the enormous @xmath22 and it is reported in @xcite that this approach to compute zeros is competitive only for polynomials of degree @xmath23 .    the construction of @xcite yields matrices that are of asymptotic order @xmath24 , while those of @xcite are of asymptotic order @xmath25 . in this paper",
    "we give two new representations .",
    "the first one uses the tree structure of monomials in @xmath26 and @xmath27 .",
    "the resulting matrices are smaller than those of @xcite , with the same asymptotic order @xmath25 .",
    "this representation can be used for bivariate polynomials as well as for polynomial multiparameter eigenvalue problems @xcite ; that is , for polynomials with matrix coefficients .",
    "the second representation is even more condensed , with asymptotic order @xmath28 , and can be applied to scalar bivariate polynomials .",
    "although the size of the matrices asymptotically still grows quadratically with @xmath1 , the smaller size renders this approach attractive for polynomials of degree @xmath29 , or for larger @xmath1 if the polynomials have only few terms .",
    "this already is an interesting size for a practical use and might trigger additional interest in such methods that could culminate in even more efficient representations .",
    "moreover , as we will see , for modest @xmath1 , the order of the matrices is only roughly @xmath30 .",
    "furthermore , for polynomials of degree 3 , we present a construction of matrices of order ( exactly ) 3 .",
    "there are other ways to study a system of polynomials as an eigenvalue problems , see , e.g. , @xcite and @xcite , but they involve more symbolic computation . in @xcite an algorithm is proposed that only requires to solve linear systems and check rank conditions , which are similar tools that we use in the staircase method @xcite to solve the obtained singular two - parameter eigenvalue problem .",
    "of course , there are many numerical methods that can be applied to systems of bivariate polynomials , two main approaches are the homotopy continuation and the resultant method , see , e.g. , @xcite and the references therein .",
    "there are also many methods which aim to compute only real solutions of a system of two real bivariate polynomials , see , e.g. , @xcite .",
    "we compare our method with two existing approaches , mathematica s nsolve @xcite and phcpack @xcite in section  [ sec : numex ] , and show that our approach is competitive for polynomials up to degree @xmath31 .",
    "let us mention that another advantage of writing the system of bivariate polynomials as a two - parameter eigenvalue problem is that then we can apply iterative subspace numerical methods such as the jacobi  davidson method and compute just a small part of zeros close to a given target @xmath32 @xcite ; we will not pursue this approach in this paper .",
    "the rest of this paper is organized as follows . in section  [ sec : motiv ] we give some applications where bivariate polynomial systems have to be solved . in section  [ sec : detrep ] we introduce determinantal representations .",
    "section  [ sec : multipar ] focuses on two - parameter eigenvalue problems . in section  [ sec : lin1 ] we give a determinantal representation that is based on the `` tree '' of monomials , involves no computation , and is suitable for both scalar and matrix polynomials .",
    "the matrices of the resulting representation are asymptotically of order @xmath25 . in section  [ sec : lin2 ] we give a representation with smaller matrices , of asymptotic order @xmath28 , that involves just a trivial amount of numerical computation ( such as computing roots of low - degree univariate polynomials ) and can be computed very efficiently",
    ". this representation may be used for scalar polynomials .",
    "we end with some numerical experiments in section  [ sec : numex ] and conclusions in section [ sec : conc ] .",
    "in delay differential equations , determining critical delays in the case of so - called commensurate delays may lead to a problem of type @xcite .",
    "the simplest example is of the form @xmath33 , where @xmath34 is the delay ; asked are values of @xmath35 that results in periodic solutions .",
    "this yields @xmath7 and @xmath20 of degrees 2 and 3 , respectively .",
    "more delay terms with delays that are multiples of @xmath35 gives polynomials of higher degree .",
    "polynomial systems of form arise in numerous applications and fields , such as signal processing @xcite and robotics @xcite . in computer",
    "aided design , one may be interested in the intersections of algebraic curves , such as ellipses @xcite . in two - dimensional subspace minimization @xcite , such as polynomial tensor optimization ,",
    "one is interested in two - dimensional searches @xmath36 , where @xmath37 , @xmath26 is the current point , and @xmath38 and @xmath39 are search directions ; see @xcite and the references therein .    in systems and control the first - order conditions of the @xmath40-approximation problem of minimizing @xmath41 , for a given impulse response @xmath42 of degree @xmath1 , and @xmath43 , lead to a system of type @xcite .",
    "when considering quadratic eigenvalue problems in numerical linear algebra , it is of interest to determine @xmath44 , as an approximate eigenvalue for a given approximate eigenvector @xmath45 , which gives a system of degree 3 in the real and imaginary part of @xmath46 ( * ? ? ?",
    "generalizations to polynomial eigenvalue problems give rise to polynomials @xmath7 and @xmath20 of higher degree .",
    "also , there has been some recent interest in this problem in the context of the chebfun2 project @xcite . in chebfun2 ,",
    "nonlinear real bivariate functions are approximated by bivariate polynomials , so solving is relevant for finding zeros of systems of real nonlinear bivariate functions and for finding local extrema of such functions .",
    "in this section we introduce determinantal representations and present some existing constructions .",
    "the difference between what should theoretically be possible and what can be done in practice is huge .",
    "the algorithms we propose reduce the difference only by a small ( but still significant ) factor ; there seems to be plenty of room for future improvements .",
    "we say that a bivariate polynomial @xmath47 has degree @xmath1 if all its monomials @xmath48 have total degree less or equal to @xmath1 , i.e. , @xmath49 , and if at least one of the monomials has total degree equal to @xmath1 .",
    "we say that the square @xmath50 matrices @xmath51 , and @xmath52 form a",
    "_ determinantal representation _ of the polynomial @xmath7 if @xmath53 . as our motivation is to use eigenvalue methods to solve polynomial systems , we will , instead of determinantal representation",
    ", often use the term _ linearization _ since a determinantal representation transforms an eigenvalue problem that involves polynomials of degree @xmath1 into a linear eigenvalue problem .",
    "a definition of linearization that extends that for the univariate case ( see , e.g. , @xcite ) is the following .    a linear bivariate pencil @xmath54 of size @xmath50 is a linearization of the polynomial @xmath47 if there exist two polynomial matrices @xmath55 and @xmath56 such that @xmath57 and @xmath58.\\ ] ]    we are interested not only in linearizations of scalar polynomials but also in linearizations of matrix bivariate polynomials of the form ( cf .  ) @xmath59 where the @xmath60 are @xmath61 matrices . in line with the above",
    ", a linear pencil @xmath62 of matrices of size @xmath50 presents a linearization ( determinantal representation ) of the matrix polynomial @xmath63 if there exist two polynomial matrices @xmath55 and @xmath56 such that @xmath57 and @xmath64.\\ ] ] in this case @xmath65 .",
    "each linearization of a matrix polynomial gives a linearization for a scalar polynomial , as we can think of scalars as of @xmath66 matrices ; the opposite is not true in general .",
    "dixon @xcite showed that for every scalar bivariate polynomial @xmath47 of degree @xmath1 there exists a determinantal representation with symmetric matrices of size @xmath16 .",
    "dickson  @xcite later showed that this result can not be extended to general polynomials in more than two variables , except for three variables and polynomials of degree two and three , and four variables and polynomials of degree two .",
    "although they both give constructive proofs , there does not seem to exist an efficient numerical algorithm to construct the determinantal representation with matrices of size @xmath16 for a given bivariate polynomial of degree @xmath1 .",
    "in recent years , the research in determinantal representations is growing , as determinantal representations for a particular subset of polynomials , _ real zero polynomials _ , are related to linear matrix inequality ( lmi ) constraints used in semidefinite programming sdp . for an overview",
    "see , e.g. , @xcite ; here we give just the essentials for bivariate polynomials that are related to our problem .",
    "we say that a real polynomial @xmath47 satisfies the _ real zero condition _ with respect to @xmath67 if for all @xmath68 the univariate polynomial @xmath69 has only real zeros .",
    "a two - dimensional _ lmi set _ is defined as @xmath70 where @xmath51 , and @xmath52 are symmetric matrices of size @xmath50 and @xmath71 stands for positive semidefinite . in sdp",
    "we are interested in convex sets @xmath72 that admit an lmi representation , i.e. , @xmath73 is an lmi set for certain matrices @xmath51 and @xmath52 .",
    "such sets are called _ spectrahedra _ and helton and vinnikov  @xcite showed that such @xmath73 must be an algebraic interior , whose minimal defining polynomial @xmath7 satisfies the real zero condition with respect to any point in the interior of @xmath73 . their results state that if a polynomial @xmath47 of degree @xmath1 satisfies real zero condition with respect to @xmath32 , then there exist symmetric matrices @xmath51 , and @xmath52 of size @xmath16 such that @xmath74 and @xmath75 .",
    "matrices @xmath51 , and @xmath52 thus form a particular determinantal representation for @xmath7 .",
    "the problem of constructing an lmi representation with symmetric or hermitian matrices @xmath76 and @xmath52 for a given spectrahedron @xmath73 raised much more interest than the related problem of generating a determinantal representation for a generic bivariate polynomial .",
    "there exist procedures , which rely heavily on slow symbolic computation or other expensive steps , that return an lmi representation with hermitian matrices for a given spectrahedron , but they are not efficient enough .",
    "for instance , a method from @xcite , based on the proof from @xcite , does return @xmath16 matrices for a polynomial of degree @xmath1 , but the reported times ( 10 seconds for a polynomial of degree 10 ) show that it is much too slow for our purpose . as a first step of the above method is to find zeros of a system of bivariate polynomials of degree @xmath1 and @xmath77 , this clearly can not be efficient enough for our needs .",
    "in addition , we are interested in determinantal representations for polynomials that do not necessary satisfy the real zero condition .    in sdp and",
    "lmi the matrices have to be symmetric or hermitian , which is not required in our case .",
    "we need a simple and fast numerical construction of matrices that satisfy ( [ eq : detrep ] ) and are as small as possible  ideally their size should increase linearly and not quadratically with @xmath1 .",
    "if we look at the available determinantal representations for generic bivariate polynomials , we first have the linearization by khazanov with matrices of size @xmath78 @xcite . in (",
    "* appendix ) , a smaller linearization for bivariate matrix polynomials is given with block matrices of order @xmath79 .",
    "the linearization uses all monomials of degree up to @xmath77 and contains a direct expression for the matrices @xmath80 , @xmath81 and @xmath52 such that @xmath82 .",
    "similar to @xcite , it can be applied to matrix polynomials .",
    "we give an example for a general matrix polynomial of degree @xmath83 , from which it is possible to deduce the construction for a generic degree .",
    "this linearization will be superseded in section  [ sec : lin1 ] by a more economical one .",
    "[ ex : lin0 ] ( * ? ? ? * appendix ) we take a matrix bivariate polynomial of degree @xmath83 @xmath84 if @xmath45 is a nonzero vector , then @xmath85 if and only if @xmath86 , where @xmath87}\\ ] ] and @xmath88^t.\\ ] ] we have @xmath89 and @xmath90 is a linearization of @xmath63 .",
    "we remark that quarez  @xcite also gives explicit expressions for determinantal representations .",
    "he is interested in symmetric representations and is able to construct , for a bivariate polynomial of degree @xmath1 such that @xmath91 , a linearization with symmetric matrices of size @xmath92 , where @xmath93 this has asymptotically the same order as the linearization that we give in section  [ sec : lin1 ] .",
    "let us also remark that in the phase , when we are solving a two - parameter eigenvalue problem to compute the zeros of a system of two bivariate polynomials , we can not exploit the fact that the matrices are symmetric , so this is not important for our application .",
    "there are some other available tools , for instance it is possible to construct a determinantal representation using the package ncalgebra @xcite for noncommutative algebra that runs in mathematica @xcite , but this does not give satisfactory results for our application as the matrices that we can construct have smaller size .",
    "in this section we briefly present the two - parameter eigenvalue problem and the available numerical methods . a motivation for the search for small determinantal representations",
    "is that if we transform a system of bivariate polynomials into an eigenvalue problem , then we can apply existing numerical methods for such problems .",
    "a _ two - parameter eigenvalue problem _ has the form where @xmath94 , and @xmath95 are given @xmath96 complex matrices .",
    "we are looking for @xmath97 and nonzero vectors @xmath98 , @xmath99 , such that ( [ eq : twopar ] ) is satisfied .",
    "in such case we say that a pair @xmath100 is an eigenvalue and the tensor product @xmath101 is the corresponding eigenvector .",
    "if we introduce the so - called operator determinants , the matrices @xmath102 then the problem ( [ eq : twopar ] ) is related to a coupled pair of generalized eigenvalue problems @xmath103",
    "\\label{drugi}\\\\[-1.5ex ]    \\delta_2 \\ , w&=y \\ \\delta_0 \\ , w\\nonumber\\end{aligned}\\ ] ] for a decomposable tensor @xmath104 .",
    "if @xmath105 is nonsingular , then atkinson  @xcite showed that the solutions of ( [ eq : twopar ] ) and ( [ drugi ] ) agree and the matrices @xmath106 and @xmath107 commute . in the nonsingular case the two - parameter problem ( [ eq : twopar ] ) has @xmath108 eigenvalues and we can numerically solve it with a variant of the qz algorithm on ( [ drugi ] ) from @xcite .",
    "ideally , if we could construct a determinantal representation with matrices @xmath19 for a bivariate polynomial of degree @xmath1 , this would be the method that we would apply on the `` companion '' two - parameter eigenvalue problem to get the zeros of the polynomial system . as matrices @xmath109 , and",
    "@xmath110 have size @xmath111 , the computation of all eigenvalues of a nonsingular two - parameter eigenvalue problem has time complexity @xmath112 , which would lead to @xmath113 algorithm for a system of bivariate polynomials .",
    "of course , for this approach we need a construction of a determinantal representation with matrices @xmath16 that should not be more computationally expensive than the effort to solve a two - parameter eigenvalue problem .    unfortunately , all practical constructions for determinantal representations ( including the two presented in this paper ) return matrices that are much larger than @xmath16 .",
    "if we have a determinantal representation with matrices larger than the degree of the polynomial , then the corresponding two - parameter eigenvalue problem is singular , which means that both matrix pencils ( [ drugi ] ) are singular , and we are dealing with a more difficult problem . there exists a numerical method from @xcite that computes the regular eigenvalues of ( [ eq : twopar ] ) from the common regular part of ( [ drugi ] ) . for the generic singular case it is shown in @xcite that the regular eigenvalues of ( [ eq : twopar ] ) and ( [ drugi ] ) do agree . for other types of singular two - parameter eigenvalue problems",
    "the relation between the regular eigenvalues of ( [ eq : twopar ] ) and ( [ drugi ] ) is not completely known , but the numerical examples indicate that the method from @xcite can be successfully applied to such problems as well .",
    "however , the numerical method , which is a variant of a staircase algorithm @xcite , has to make a lot of decisions on the numerical rank and a single inaccurate decision can cause the method to fail . as the size of the matrices increases , the gaps between singular values may numerically disappear and it may be difficult to solve the problem .",
    "this is not the only issue that prevents the use of determinantal representations to solve a bivariate system .",
    "the algorithm for the singular two - parameter eigenvalue problems still has complexity @xmath112 , but the fast determinantal representations that we are aware of return matrices of size @xmath21 instead of @xmath114 .",
    "this is what pushes the overall complexity to @xmath22 and makes this approach efficient only for polynomials of small degree .",
    "nonetheless , at complexity so high , each construction that gives a smaller determinantal representation can make a change . in view of this , we propose two new linearizations in the next two sections .",
    "we are interested in linearizations of the matrix polynomial @xmath115 of degree @xmath1 , where @xmath60 are square matrices .",
    "our goal is to find square matrices @xmath51 , and @xmath52 as small as possible such that @xmath116 . also , we need a relation that @xmath85 if and only if @xmath117 , where @xmath118 is a tensor product of @xmath45 and a polynomial of @xmath26 and @xmath27 . the linearization in this section also applies to scalar bivariate polynomials , where all matrices are @xmath66 and @xmath119 .    in section  [ sec : detrep ]",
    "we have given a linearization with block matrices of order @xmath79 .",
    "we can view this linearization in the following way . if @xmath85 for @xmath120 , then @xmath121 , where the vector @xmath118 has the form @xmath122^t.\\ ] ] this means that @xmath118 always begins with the initial block @xmath45 and then contains all blocks of the form @xmath123 where @xmath124 . to simplify the presentation we will usually omit @xmath45 when referring to the blocks of the vector ( [ eq : blockvec ] ) .",
    "the blocks are ordered in the degree negative lexicographic ordering , i.e. , @xmath125 if @xmath126 , or @xmath127 and @xmath128 .",
    "the above block structure of vector @xmath118 is defined in the rows of the matrix from the second one to the last one ( see example [ ex : lin0 ] ) . for each block @xmath129 of ( [ eq : blockvec ] )",
    "such that @xmath130 there always exists a preceding block @xmath20 of the grade @xmath131 such that either @xmath132 or @xmath133 ( when @xmath134 and @xmath135 both options are possible ) .",
    "suppose that @xmath132 , @xmath136 , and @xmath137 , where function @xmath138 returns the index of a block .",
    "then the matrix @xmath139 has block @xmath140 on position @xmath141 and block @xmath142 on position @xmath143 .",
    "these are the only nonzero blocks in the block row @xmath144 .",
    "a similar construction with @xmath140 replaced by @xmath145 is used in the case @xmath133 .    the first block row of the matrix @xmath139 is used to represent the matrix polynomial @xmath63 .",
    "one can see that there exist linear pencils @xmath146 , @xmath147 , such that @xmath148 \\underline{u},\\ ] ] where @xmath149 is the number of blocks in ( [ eq : blockvec ] ) .",
    "the pencils in ( [ eq : firstrow ] ) are not unique . for instance , a term @xmath150 of @xmath63 can be represented in one of up to the three possible ways :    1 .",
    "if @xmath151 , we can set @xmath152 where @xmath153 , 2 .",
    "if @xmath154 , we can set @xmath155 where @xmath156 , 3 .",
    "if @xmath157 , we can set @xmath158 where @xmath159 .",
    "based on the above discussion we see that not all the blocks in ( [ eq : blockvec ] ) are needed to represent a matrix polynomial @xmath63 . what we need is a minimal set of monomials @xmath160 , where @xmath151 , that is sufficient for a matrix polynomial of degree @xmath1 .",
    "we can formulate the problem of finding the smallest possible set for a given polynomial as a graph problem .",
    "for the polynomial of degree @xmath161.[fig : graph ] ]    we can think about all possible terms @xmath162 , where @xmath151 , as of nodes in a directed graph @xmath163 with the root @xmath164 and a directed edge from node @xmath165 to node @xmath166 if @xmath167 or @xmath168 ( see figure  [ fig : graph ] for the case @xmath169 ) .",
    "now , we are looking for the smallest connected subgraph @xmath170 with a root @xmath164 that can represent a given polynomial .",
    "equivalently , we are looking for a minimal directed rooted tree .",
    "let us remember that for each term @xmath171 of the polynomial @xmath63 there are up to three possible nodes in the graph @xmath163 that can be used to represent it .",
    "it is sufficient that one of these nodes is in a minimal tree @xmath170 .",
    "furthermore , if @xmath172 , then we can assume that we always use a node of degree @xmath131 to represent @xmath171 and then there are only one or two options for a given term .",
    "all together , each nonzero term @xmath150 , where @xmath173 , in the polynomial @xmath174 defines one of the following rules for the subgraph @xmath170 :    * if @xmath175 then @xmath176 has to be in the subgraph @xmath170 , * if @xmath177 then @xmath178 has to be in the subgraph @xmath170 , * if @xmath154 and @xmath157 then at least one of @xmath179 or @xmath180 has to be in the subgraph @xmath170 .",
    "the term @xmath181 can be presented by the root @xmath164 , which is always present in the subgraph @xmath170 .    finding a minimal tree for a given polynomial is not an easy problem",
    ": it can be formulated as an np - hard directed steiner tree problem ( dst ) ( see , e.g. , @xcite ) , where one has a directed graph @xmath182 with nonnegative weights on edges and the goal is to find the minimum weight directed rooted tree that connects all terminals @xmath183 to a given root @xmath184 .",
    "suppose that we are looking for a minimal representation tree for a polynomial @xmath63 of degree @xmath1 .",
    "in the graph @xmath163 , which contains all nodes @xmath162 for @xmath151 ( see figure  [ fig : graph ] for the case @xmath169 ) , we put weight @xmath164 on all directed @xmath26 and @xmath27 edges",
    ". now we add a new vertex for each monomial @xmath162 that is present in @xmath63 and connect it with zero weight edges from all possible nodes in @xmath163 that could be used to represent the monomial in the linearization .",
    "we make a dst problem by taking node @xmath164 as a root and all newly added vertices as terminals . from a solution of the dst problem",
    "the minimal representation tree can be recovered .",
    "although this is an np - hard problem , there exist some polynomial time approximation algorithms that give a solution close to the optimal one and could be used to construct a small determinantal representation for a given polynomial with small number of nonzero terms",
    ". for the latest available algorithms , see , e.g. , @xcite and the references therein .",
    "[ ex : minlin ]    we are interested in a minimal tree for the matrix polynomial @xmath185 nonzero terms in ( [ eq : pol6 ] ) define the nodes that have to be present in the minimal subgraph .",
    "they are either strictly defined as are the nodes @xmath164 , @xmath186 , and @xmath187 , or come in pairs where at least one element of each pair has to be present in the subgraph .",
    "such pairs are @xmath188 , and @xmath189 .",
    "the situation is presented in figure  [ fig : graphex ] , where nodes and pairs , such that either left or right node has to be included , are shadowed green .",
    "the nodes of the minimal connected subgraph that includes all required nodes are colored red .    in a dst formulation",
    "each green shadow presents a terminal linked by zero weight edges to one or two nodes that are included in the region . on all other edges we put weight 1 and",
    "then search for the minimum weight directed rooted tree that connects all terminals to the root @xmath164 .     for the matrix polynomial ( [ eq : pol6 ] ) of degree @xmath190.[fig : graphex ]",
    "]    matrix polynomial ( [ eq : pol6 ] ) can thus be represented with matrices of block size @xmath191 .",
    "if we order the nodes of the subgraph in the degree negative lexicographic ordering , then @xmath192 has the form @xmath193^t\\ ] ] and a possible first block row of @xmath62 has the form @xmath194.\\ ] ] in the subsequent block rows , the matrix @xmath62 has only 20 nonzero blocks , 10 of them are identity blocks on the main diagonal .",
    "the remaining nonzero blocks are @xmath140 on block positions @xmath195 , @xmath196 , @xmath197 , @xmath198 , @xmath199 , @xmath200 , @xmath201 and blocks @xmath145 on positions @xmath202 .    if we have a generic matrix polynomial @xmath63 , whose terms are all nonzero , then it is easy to see that the subgraph that contains all terms @xmath162 , where @xmath151 and either @xmath175 or @xmath203 is even , is minimal .",
    "the detailed situation for the case @xmath204 is presented in figure  [ fig : mingraph ] , and representation trees for polynomials of degree from 1 to 8 are presented in figure  [ fig : lin1first8 ] . counting the number of nodes in the tree gives the following result @xmath205 if we compare this with the linearization from example  [ ex : lin0 ] that has matrices of block size @xmath79 , we see that the new linearization uses matrices of roughly half size .",
    "the size of the matrices is also smaller than ( [ eq : quarez ] ) from @xcite , which has the same asymptotic order .     for a generic polynomial of degree @xmath161.[fig : mingraph ] ]    = [ circle , draw , fill = blue!40 , inner sep=0pt , minimum size=5pt , node distance=0.35 cm ]    \\(00 ) ; ;    \\(00 ) ; ( 10 ) [ below left of=00 ] ; ( 01 ) [ below right of=00 ] ; ; ( 00 ) to ( 10 ) ; ( 00 ) to ( 01 ) ;    \\(00 ) ; ( 10 ) [ below left of=00 ] ; ( 20 ) [ below left of=10 ] ; ( 01 ) [ below right of=00 ] ; ( 02 ) [ below right of=01 ] ; ; ( 00 ) to ( 01 ) to ( 02 ) ; ( 00 ) to ( 10 ) to ( 20 ) ;    \\(00 ) ; ( 10 ) [ below left of=00 ] ; ( 20 ) [ below left of=10 ] ; ( 30 ) [ below left of=20 ] ; ( 01 ) [ below right of=00 ] ; ( 02 ) [ below right of=01 ] ; ( 03 ) [ below right of=02 ] ; ( 12 ) [ below left of=02 ] ; ; ( 00 ) to ( 01 ) to ( 02 ) to ( 03 ) ; ( 00 ) to ( 10 ) to ( 20 ) to ( 30 ) ; ( 02 ) to ( 12 ) ;    \\(00 ) ; ( 10 ) [ below left of=00 ] ; ( 20 ) [ below left of=10 ] ; ( 30 ) [ below left of=20 ] ; ( 40 ) [ below left of=30 ] ; ( 50 ) [ below left of=40 ] ; ( 60 ) [ below left of=50 ] ; ( 70 ) [ below left of=60 ] ; ( 01 ) [ below right of=00 ] ; ( 02 ) [ below right of=01 ] ; ( 12 ) [ below left of=02 ] ; ( 22 ) [ below left of=12 ] ; ( 32 ) [ below left of=22 ] ; ( 42 ) [ below left of=32 ] ; ( 52 ) [ below left of=42 ] ; ( 03 ) [ below right of=02 ] ; ( 04 ) [ below right of=03 ] ; ( 05 ) [ below right of=04 ] ; ( 06 ) [ below right of=05 ] ; ( 16 ) [ below left of=06 ] ; ( 07 ) [ below right of=06 ] ; ( 15 ) [ below left of=04 ] ; ( 25 ) [ below left of=15 ] ; ( 35 ) [ below left of=25 ] ; ; ( 00 ) to ( 01 ) to ( 02 ) to ( 03 ) to ( 04 ) to ( 05 ) to ( 06 ) to ( 07 ) ; ( 00 ) to ( 10 ) to ( 20 ) to ( 30 ) to ( 40 ) to ( 50 ) to ( 60 ) to ( 70 ) ; ( 02 ) to ( 12 ) to ( 22 ) to ( 32 ) to ( 42 ) to ( 52 ) ; ( 04 ) to ( 15 ) to ( 25 ) to ( 35 ) ; ( 06 ) to ( 16 ) ;    \\(00 ) ; ( 10 ) [ below left of=00 ] ; ( 20 ) [ below left of=10 ] ; ( 30 ) [ below left of=20 ] ; ( 40 ) [ below left of=30 ] ; ( 50 ) [ below left of=40 ] ; ( 60 ) [ below left of=50 ] ; ( 01 ) [ below right of=00 ] ; ( 02 ) [ below right of=01 ] ; ( 12 ) [ below left of=02 ] ; ( 22 ) [ below left of=12 ] ; ( 32 ) [ below left of=22 ] ; ( 42 ) [ below left of=32 ] ; ( 03 ) [ below right of=02 ] ; ( 04 ) [ below right of=03 ] ; ( 05 ) [ below right of=04 ] ; ( 06 ) [ below right of=05 ] ; ( 15 ) [ below left of=04 ] ; ( 25 ) [ below left of=15 ] ; ; ( 00 ) to ( 01 ) to ( 02 ) to ( 03 ) to ( 04 ) to ( 05 ) to ( 06 ) ; ( 00 ) to ( 10 ) to ( 20 ) to ( 30 ) to ( 40 ) to ( 50 ) to ( 60 ) ; ( 04 ) to ( 15 ) to ( 25 ) ; ( 02 ) to ( 12 ) to ( 22 ) to ( 32 ) to ( 42 ) ;    \\(00 ) ; ( 10 ) [ below left of=00 ] ; ( 20 ) [ below left of=10 ] ; ( 30 ) [ below left of=20 ] ; ( 40 ) [ below left of=30 ] ; ( 50 ) [ below left of=40 ] ; ( 01 ) [ below right of=00 ] ; ( 02 ) [ below right of=01 ] ; ( 12 ) [ below left of=02 ] ; ( 22 ) [ below left of=12 ] ; ( 32 ) [ below left of=22 ] ; ( 03 ) [ below right of=02 ] ; ( 04 ) [ below right of=03 ] ; ( 14 ) [ below left of=04 ] ; ( 05 ) [ below right of=04 ] ; ; ( 00 ) to ( 01 ) to ( 02 ) to ( 03 ) to ( 04 ) to ( 05 ) ; ( 00 ) to ( 10 ) to ( 20 ) to ( 30 ) to ( 40 ) to ( 50 ) ; ( 02 ) to ( 12 ) to ( 22 ) to ( 32 ) ; ( 04 ) to ( 14 ) ;    \\(00 ) ; ( 10 ) [ below left of=00 ] ; ( 20 ) [ below left of=10 ] ; ( 30 ) [ below left of=20 ] ; ( 40 ) [ below left of=30 ] ; ( 01 ) [ below right of=00 ] ; ( 02 ) [ below right of=01 ] ; ( 12 ) [ below left of=02 ] ; ( 22 ) [ below left of=12 ] ; ( 03 ) [ below right of=02 ] ; ( 04 ) [ below right of=03 ] ; ; ( 00 ) to ( 01 ) to ( 02 ) to ( 03 ) to ( 04 ) ; ( 00 ) to ( 10 ) to ( 20 ) to ( 30 ) to ( 40 ) ; ( 02 ) to ( 12 ) to ( 22 ) ;    [ thm : one ] we can linearize each matrix polynomial @xmath63 of degree @xmath1 with matrices of block size @xmath206 from ( [ eq : sizeg ] ) using a minimal tree @xmath170 that contains the terms @xmath162 , where @xmath151 and either @xmath175 or @xmath203 is even .",
    "we order all nodes of a minimal tree @xmath170 in the degree negative lexicographic ordering and form the block matrix @xmath55 in the following way .",
    "all diagonal blocks of @xmath55 are @xmath142 .",
    "if a node with index @xmath7 is connected to a node with index @xmath20 with an @xmath26 or @xmath27 edge , then we put @xmath140 or @xmath145 in the block position @xmath207 , respectively .",
    "because of the ordering , the matrix @xmath208 is block lower triangular and nonsingular .",
    "its inverse @xmath209 is therefore also a lower triangular matrix with diagonal identity blocks .",
    "let @xmath210 be the number of nodes in @xmath170 .",
    "if follows from @xmath211 that the first block column of @xmath209 has the form @xmath212^t,\\ ] ] where @xmath213 is the monomial in the @xmath203th node of @xmath170 for @xmath214 ( @xmath215 ) .",
    "now we will construct the linearization of the matrix polynomial @xmath63 .",
    "we need a block matrix @xmath216 , whose elements are linear pencils in @xmath26 and @xmath27 .",
    "we take @xmath217 and adjust the first block row @xmath218 , where we put linear pencils such that @xmath219^t)=p(x , y).\\ ] ] this is always possible as for each term @xmath150 in the polynomial @xmath63 there exists a term @xmath220 in @xmath170 such that @xmath221 is one of the following three options : @xmath222 , @xmath223 , or @xmath224 .",
    "the product @xmath225 is an upper block triangular matrix of the form @xmath226,\\ ] ] where @xmath227 are matrix polynomials . if we introduce the matrix polynomial @xmath228,\\ ] ] then it follows that @xmath229\\ ] ] and since @xmath230 , this proves that @xmath216 is indeed a linearization of the matrix polynomial @xmath63 .",
    "[ ex::cubic1 ] as an example we consider the scalar bivariate polynomial @xmath231 which was already linearized in @xcite with matrices of size @xmath232 ( we can also get a @xmath232 linearization if we insert the coefficients in matrix ( [ eq : ex2 ] ) of example  [ ex : lin0 ] ) .",
    "now we can linearize it with matrices of size @xmath233 as @xmath234 , where @xmath235}.\\ ] ] in the next section we will further reduce the size of the matrices to @xmath236 and @xmath237 .",
    "we will upgrade the approach from the previous section and produce even smaller representations for scalar polynomials .",
    "as before , representations have a form of the directed tree , but instead of using only @xmath26 and @xmath27 , an edge can now be any linear polynomial @xmath238 such that @xmath239 .",
    "these additional parameters give us enough freedom to produce smaller representations .",
    "the root is still @xmath164 while the other nodes are polynomials in @xmath26 and @xmath27 that are products of all edges on the path from the root to the node . in each node",
    "all monomials have the same degree , which is equal to the graph distance to the root . before we continue with the construction",
    ", we give a small example to clarify the idea .",
    "= [ ellipse , draw , fill = red!20 , font= , text width=4.2em , text centered , rounded corners , minimum width=4.1em , minimum height=1em , node distance=2 cm ] = [ rectangle , draw , fill = red!20 , font= , text width=1.6em , text centered , rounded corners , minimum width=1.6em , minimum height=1.4em , node distance=1.6 cm ]    ]    [ ex : lin2 ]    a linearization of a polynomial of degree @xmath83 with matrices of size @xmath240 is presented in figure  [ fig : ex4 ] .",
    "let us explain the figure and show how to produce the matrices from the representation tree .",
    "the nodes in the representation tree are the following polynomials : @xmath241 q_3(x , y)= ( x+y ) \\ , q_2(x , y ) = x^2-y^2 , & & q_4(x , y)= ( 2x - y ) \\ , q_1(x , y ) = 2x -y . \\end{array}\\ ] ] the polynomial of degree @xmath83 is then a linear combination of nodes in the representation tree and coefficients @xmath242 which are polynomials of degree @xmath164 contained in the ellipses .",
    "this gives @xmath243    similar as in section  [ sec : lin1 ] , we can write the matrices by putting the linear coefficients in the first row and relations between the polynomials @xmath244 to @xmath245 in the subsequent rows . for each edge of the form",
    "@xmath246 we put @xmath247 in the position @xmath248 in the matrix @xmath249 and @xmath164 in the position @xmath250 . in the first row we put @xmath251 in the position @xmath252 if @xmath253 is the linear factor that multiplies the polynomial @xmath254 in the linearization .",
    "the matrix @xmath255 that corresponds to figure [ fig : ex4 ] , such that @xmath256 , is @xmath257.\\ ] ]    1 .",
    "compute @xmath1 zeros @xmath258 of the polynomial @xmath259 .",
    "2 .   form a branch of the tree with the root @xmath260 and nodes @xmath261 , where @xmath262 is a successor of @xmath263 and the edge from @xmath263 to @xmath262 contains the factor @xmath264 for @xmath265 .",
    "3 .   compute linear coefficients @xmath266 for nodes @xmath267 in the following way : 1 .",
    "take @xmath268 , 2 .",
    "take @xmath269 , where @xmath270 is a coefficient of @xmath254 at @xmath271 , for @xmath272 , 3 .",
    "take @xmath273 .",
    "4 .   compute the remainder @xmath274 which has the form @xmath275 , where @xmath276 is a polynomial of degree @xmath277 .",
    "if @xmath278 then stop and return the tree .",
    "add node @xmath279 and connect it to the root by an edge having the factor @xmath27 .",
    "if @xmath276 is a nonzero constant @xmath280 , then use @xmath281 as a coefficient for the node @xmath279 , stop , and return the tree .",
    "recursively call the same algorithm to obtain a representation tree with the root @xmath282 for the polynomial @xmath276 .",
    "connect @xmath279 to @xmath282 by an edge with a factor @xmath27 and return the tree with the root @xmath283 .",
    "in example [ ex : lin2 ] we showed how to construct the bivariate pencil @xmath284 from a representation tree and the corresponding linear coefficients .",
    "the outline of an algorithm that constructs a representation tree and the corresponding linear coefficients for a given polynomial @xmath47 is presented in algorithm  [ alg : lin2 ] . in the following discussion",
    "we give some missing details and show that the algorithm indeed gives a linearization .",
    "* the nodes @xmath261 that we construct in step 2 are polynomials of the form @xmath285 for @xmath286 .",
    "all monomials in @xmath263 have degree @xmath287 and the leading term is @xmath288 . *",
    "each product @xmath289 for @xmath286 is a polynomial with monomials of exact degree @xmath290 , while @xmath291 is a polynomial of degree @xmath164 .",
    "the linear factors @xmath292 in step 3 are constructed so that : * * leading two monomials ( @xmath293 and @xmath271 ) of @xmath294 agree with the part @xmath295 of the polynomial @xmath47 for @xmath272 , * * the product @xmath296 agrees with the part of @xmath47 composed of all monomials of degree exactly @xmath1 , * * the product @xmath297 agrees with the part of @xmath47 composed of all monomials of degree up to @xmath164 . + as a result , the remainder in step 4 has the form @xmath298 , where @xmath276 is a polynomial of degree @xmath277 .",
    "the situation at the end of step 4 is presented in figure  [ fig : lin22 ] .",
    "the remainder @xmath299 is a polynomial of the form @xmath300 , where @xmath276 is a polynomial or degree @xmath277.[fig : lin22 ] ] * if the coefficient @xmath301 is zero , then we can apply a linear substitution of @xmath26 and @xmath27 of the form @xmath302 and @xmath303 , where we pick @xmath304 such that @xmath305 this ensures that the substituted polynomial in @xmath306 and @xmath307 will have a nonzero coefficient at @xmath308 .",
    "after we complete the representation tree for the substituted polynomial in @xmath306 and @xmath307 , we perform the substitution back to @xmath26 and @xmath27 . *",
    "if the polynomial @xmath276 in step 4 is not a constant , then we obtain a representation subtree for @xmath276 by calling recursively the same algorithm . in order to obtain the final representation tree ,",
    "we then join the existing branch to the representation subtree for the polynomial @xmath276 .",
    "we do this by introducing a new node @xmath279 in step 6 that is linked to the root by the edge with the factor @xmath27 . to this new node",
    "we link the root @xmath282 of the subtree for the polynomial @xmath276 in step 9 , again using the edge with the factor @xmath27 . as @xmath282",
    "is linked to the root by two edges @xmath27 , this multiplies all nodes in the subtree by @xmath186 and , since the subtree is a representation for @xmath276 , this gives a representation for the remainder @xmath309 from step 4 .",
    "the situation after step 9 with the final representation tree for the polynomial @xmath47 is presented in figure  [ fig : lin23 ] .    ]    from the output of algorithm  [ alg : lin2 ] , matrices @xmath310 such that @xmath74 can be obtained in the same way as in example  [ ex : lin2 ] .",
    "let us remark that the zeros @xmath258 in step 1 can be complex , even if polynomial @xmath7 has real coefficients .",
    "thus , in a general case a linearization produced by algorithm  [ alg : lin2 ] has complex matrices @xmath51 , and @xmath52 .    [ ex::pol2 ]",
    "we apply algorithm  [ alg : lin2 ] on @xmath311 from example [ ex::cubic1 ] .",
    "first , we compute the roots @xmath312 of the polynomial @xmath313 .",
    "the zeros are ordered so that @xmath314 .",
    "in exact computation the order is not important , but in numerical tests we experience better results with this order .",
    "this gives the polynomials in the first branch of the representation tree : @xmath315 and we can compute the corresponding coefficients @xmath316 for the remainder @xmath317 we need just one additional node @xmath318 with the coefficient @xmath319 .",
    "the determinantal representation with @xmath240 matrices is @xmath320 , where @xmath321},\\quad b = { \\footnotesize\\left[\\begin{array}{rrrr } 2 & 4 & 7 & 0\\cr -1 & 0 & 0 & 0 \\cr 0 & -1 &   0 & 0\\cr 0 & 0 & 0 & 0\\end{array}\\right ] } , \\quad \\text{and } \\\\[1 mm ] c & = { \\footnotesize \\left[\\begin{matrix } 3 & 4.9681 + 4.5036i & 7.8882 & 0.88972 + 5.5576i\\cr -0.0079857 + 1.1259i & 0 & 0 & 0 \\cr 0 & -0.0079857 - 1.1259i &   0 & 0\\cr -1 & 0 & 0 & 0\\end{matrix}\\right]}.\\end{aligned}\\ ] ]    = [ circle , draw , fill = blue!40 , inner sep=0pt , minimum size=5pt , node distance=0.35 cm ]    \\(00 ) ; ;    \\(00 ) ; ( 10 ) [ below left of=00 ] ; ; ( 00 ) to ( 10 ) ;    \\(00 ) ; ( 10 ) [ below left of=00 ] ; ( 20 ) [ below left of=10 ] ; ( 01 ) [ below right of=00 ] ; ; ( 00 ) to ( 01 ) ; ( 00 ) to ( 10 ) to ( 20 ) ;    \\(00 ) ; ( 10 ) [ below left of=00 ] ; ( 20 ) [ below left of=10 ] ; ( 30 ) [ below left of=20 ] ; ( 01 ) [ below right of=00 ] ; ( 02 ) [ below right of=01 ] ; ; ( 00 ) to ( 01 ) to ( 02 ) ; ( 00 ) to ( 10 ) to ( 20 ) to ( 30 ) ;    \\(00 ) ; ( 10 ) [ below left of=00 ] ; ( 20 ) [ below left of=10 ] ; ( 30 ) [ below left of=20 ] ; ( 40 ) [ below left of=30 ] ; ( 50 ) [ below left of=40 ] ; ( 60 ) [ below left of=50 ] ; ( 70 ) [ below left of=60 ] ; ( 01 ) [ below right of=00 ] ; ( 02 ) [ below right of=01 ] ; ( 12 ) [ below left of=02 ] ; ( 22 ) [ below left of=12 ] ; ( 32 ) [ below left of=22 ] ; ( 42 ) [ below left of=32 ] ; ( 03 ) [ below right of=02 ] ; ( 04 ) [ below right of=03 ] ; ( 15 ) [ below left of=04 ] ; ; ( 00 ) to ( 01 ) to ( 02 ) to ( 03 ) to ( 04 ) ; ( 00 ) to ( 10 ) to ( 20 ) to ( 30 ) to ( 40 ) to ( 50 ) to ( 60 ) to ( 70 ) ; ( 02 ) to ( 12 ) to ( 22 ) to ( 32 ) to ( 42 ) ; ( 04 ) to ( 15 ) ;    \\(00 ) ; ( 10 ) [ below left of=00 ] ; ( 20 ) [ below left of=10 ] ; ( 30 ) [ below left of=20 ] ; ( 40 ) [ below left of=30 ] ; ( 50 ) [ below left of=40 ] ; ( 60 ) [ below left of=50 ] ; ( 01 ) [ below right of=00 ] ; ( 02 ) [ below right of=01 ] ; ( 12 ) [ below left of=02 ] ; ( 22 ) [ below left of=12 ] ; ( 32 ) [ below left of=22 ] ; ( 03 ) [ below right of=02 ] ; ( 04 ) [ below right of=03 ] ; ; ( 00 ) to ( 01 ) to ( 02 ) to ( 03 ) to ( 04 ) ; ( 00 ) to ( 10 ) to ( 20 ) to ( 30 ) to ( 40 ) to ( 50 ) to ( 60 ) ; ( 02 ) to ( 12 ) to ( 22 ) to ( 32 ) ;    \\(00 ) ; ( 10 ) [ below left of=00 ] ; ( 20 ) [ below left of=10 ] ; ( 30 ) [ below left of=20 ] ; ( 40 ) [ below left of=30 ] ; ( 50 ) [ below left of=40 ] ; ( 01 ) [ below right of=00 ] ; ( 02 ) [ below right of=01 ] ; ( 12 ) [ below left of=02 ] ; ( 22 ) [ below left of=12 ] ; ( 03 ) [ below right of=02 ] ; ; ( 00 ) to ( 01 ) to ( 02 ) to ( 03 ) ; ( 00 ) to ( 10 ) to ( 20 ) to ( 30 ) to ( 40 ) to ( 50 ) ; ( 02 ) to ( 12 ) to ( 22 ) ;    \\(00 ) ; ( 10 ) [ below left of=00 ] ; ( 20 ) [ below left of=10 ] ; ( 30 ) [ below left of=20 ] ; ( 40 ) [ below left of=30 ] ; ( 01 ) [ below right of=00 ] ; ( 02 ) [ below right of=01 ] ; ( 12 ) [ below left of=02 ] ; ; ( 00 ) to ( 01 ) to ( 02 ) ; ( 00 ) to ( 10 ) to ( 20 ) to ( 30 ) to ( 40 ) ; ( 02 ) to ( 12 ) ;    representation trees for polynomials of degree from 1 to 8 are presented in figure  [ fig : small ] .",
    "if we compare them to the determinantal representations from section  [ sec : lin1 ] in figure  [ fig : lin1first8 ] , then we see that representations obtained by algorithm  [ alg : lin2 ] are much smaller .",
    "the following lemma shows that asymptotically we use @xmath322 fewer nodes than in section  [ sec : lin1 ] .    algorithm  [ alg : lin2 ] returns representation tree @xmath163 for the linearization of a polynomial @xmath47 of degree @xmath1 of size @xmath323    it follows from the recursion in the algorithm ( see figure  [ fig : lin23 ] ) that the number of nodes satisfies the recurrence equation @xmath324 the solution of this equation with the initial values @xmath325 , @xmath326 , and @xmath327 is ( [ eq : sizeg2 ] ) .    for generic polynomials of degrees @xmath328 and",
    "@xmath329 it turns out to be possible to modify the construction and save one node in the representation tree .",
    "the main idea is to apply a linear substitution of variables @xmath26 and @xmath27 in the preliminary phase to the polynomial @xmath47 to eliminate some of the terms .",
    "this implies that the resulting matrices are of order @xmath83 ( @xmath328 ) and @xmath161 ( @xmath329 ) , instead of order @xmath330 and @xmath190 as seen before and , it also reduces the size of the matrices for @xmath331 and @xmath332 by 1 .",
    "we give details in the following two subsections .",
    "let us consider a cubic bivariate polynomial @xmath333 , where we can assume that @xmath334 .",
    "we introduce a linear substitution of the form @xmath335 and @xmath336 , where @xmath165 is such that @xmath337 and @xmath338 .",
    "the substitution is well defined if @xmath165 is a single root of ( [ eq : sc31 ] ) and the only situation , where this is not possible , is when @xmath42 has a triple root .",
    "the above substitution transforms @xmath47 into a polynomial @xmath339 such that its coefficients @xmath340 and @xmath341 are both zero .",
    "if we apply algorithm  [ alg : lin2 ] to @xmath339 and choose @xmath342 for the first zero , then the remainder in step 4 is zero and we get @xmath343 matrices @xmath344 , @xmath345 , and @xmath346 such that @xmath347 .",
    "now , it is easy to see that for @xmath348 , @xmath349 , and @xmath350 , @xmath82 .",
    "[ ex::pol3 ] we take the recurrent example @xmath311 ( see examples [ ex::cubic1 ] and [ ex::pol2 ] ) .",
    "if we take @xmath351 ( see ( [ eq : sc31 ] ) ) and @xmath352 , then substitution @xmath335 and @xmath336 changes @xmath47 into a polynomial @xmath353 algorithm  [ alg : lin2 ] gives @xmath343 matrices @xmath344 , @xmath345 , and @xmath346 such that @xmath347 , from which matrices @xmath354,\\quad b = { \\footnotesize \\left[\\begin{matrix } 1.5317 &   -2.4833 & 7\\cr    -1 &     0 &             0\\cr              0   & -1 &    0\\end{matrix}\\right ] } , } \\quad \\text{and } \\\\[1 mm ] c & = { \\footnotesize \\left[\\begin{matrix } 2.2189 &   2.8587 & 0.00559 + 7.8813i\\cr    -1.1269 &     0 &             0\\cr              0   & -0.0079857 + 1.1259i &    0\\end{matrix}\\right]}\\end{aligned}\\ ] ] such that @xmath355 , are obtained and we have a @xmath343 linearization .",
    "before we give a construction for a generic quartic bivariate polynomial , let us consider a particular case , when a polynomial @xmath356 of degree 4 is such that @xmath357 .",
    "in this case @xmath161 nodes are enough to represent the polynomial @xmath47 .",
    "the representation tree for the polynomial @xmath47 is presented in figure  [ fig : ex4new ] , where @xmath358 and @xmath359 are the zeros of @xmath360 .     of degree 4 such that @xmath357.[fig : ex4new ] ]    for a generic quartic polynomial we first transform it into one with zero coefficients at @xmath361 , @xmath362 , @xmath363 , and @xmath364 . except for very special polynomials , we can do this with a combination of two linear substitutions .",
    "similar as in case @xmath328 , we first introduce a linear substitution of the form @xmath335 and @xmath336 , where @xmath165 is such that @xmath365 and @xmath366 .",
    "the substitution is well defined if @xmath165 is a single root of @xmath367 .",
    "after the substitution we have a polynomial @xmath339 such that its coefficients @xmath368 and @xmath340 are both zero . on this polynomial we apply a new substitution @xmath369 and @xmath370 , where @xmath371 and @xmath372 .",
    "this substitution is well defined if @xmath45 is a single root of @xmath373 ; therefore , both substitutions exist for a generic polynomial of degree @xmath330 .",
    "after the second substitution we get a polynomial @xmath374 such that its coefficients @xmath375 , @xmath376 , @xmath377 , and @xmath378 are all zero . for such polynomial we can construct a representation with matrices @xmath240 as presented in figure [ fig : ex4new ] .",
    "this gives @xmath240 matrices @xmath379 , @xmath380 , and @xmath381 such that @xmath382 .",
    "finally , if we take @xmath383 then @xmath384 .",
    "if we add the constructions from subsections [ ss : case3 ] and [ ss : case4 ] as special cases to algorithm  [ alg : lin2 ] , then we save one node for all generic polynomials of degree @xmath385 or @xmath386 .",
    "although this advantage seems to be modest , numerical results in the following section point out that for small @xmath1 this does speed up the computation of the zeros considerably ( for instance , for @xmath204 the corresponding @xmath387-matrices are of order @xmath388 instead of @xmath389 ) .",
    "determinantal representations from sections [ sec : lin1 ] and [ sec : lin2 ] can be used to numerically solve a system of two bivariate polynomials .",
    "we first linearize the problem as a two - parameter eigenvalue problem and then solve it with the method for singular two - parameter eigenvalue problems from @xcite .",
    "subsequently , we refine the solutions by two steps of newton s method .",
    "we refer to the numerical methods that use linearizations from sections [ sec : lin1 ] and [ sec : lin2 ] as lin1 and lin2 , respectively . in the first example we take polynomials with random coefficients , while the second example considers some challenging benchmark polynomials .",
    "[ ex : randtest]we compare lin1 and lin2 to nsolve in mathematica 9 and phclab 1.02 @xcite running phcpack 2.3.84 on systems of full bivariate polynomials of the same degree , whose coefficients are random real numbers uniformly distributed on @xmath390 $ ] or random complex numbers , such that real and imaginary part are both uniformly distributed on @xmath390 $ ] .    the results are presented in table [ tbl : one ] . for each @xmath1",
    "we run all methods on the same set of 20 random polynomial systems and measure the average time .",
    "lin1 and mathematica s nsolve work faster for polynomials with real coefficients while this does not make a change for lin2 and phclab , therefore , the results in the table for lin2 and phclab are an average of 20 real and 20 complex examples .",
    "clearly , if lin1 is applied to a polynomial with real coefficients , then matrices @xmath105 , @xmath391 , and @xmath110 are real . if we apply lin2 then the matrices are complex in general as roots of univariate polynomials are used in the construction",
    ". although the complex arithmetic is more expensive than the real one , complex eigenproblems from lin2 are so small that they are solved faster than the larger real problems from lin1 .",
    "r|cccccc|rr & & + @xmath1 & lin1 ( @xmath392 ) & lin1 ( @xmath393 ) & lin2 & phclab & nsolve ( @xmath393 ) & nsolve ( @xmath392 ) & lin1 & lin2 +    ' '' ''    3 & 0.01 & 20.01 & @xmath394 & 0.18 & 0.25 & 0.04 & 25 & 9 + 4 & 0.02 & 20.02 & 0.01 & 0.21 & 0.42 & 0.07 & 64 & 25 + 5 & 0.03 & 20.05 & 0.02 & 0.26 & 0.67 & 0.17 & 121 & 64 + 6 & 0.08 & 20.18 & 0.05 & 0.34 & 1.04 & 0.22 & 225 & 100 + 7 & 0.23 & 20.57 & 0.16 & 0.44 & 2.75 & 0.61 & 361 & 169 + 8 & 0.67 & 22.04 & 0.54 & 0.59 & 2.17 & 0.88 & 576 & 289 + 9 & 2.25 & 26.21 & 1.33 & 0.80 & 5.53 & 1.48 & 841 & 400 + 10 & 6.24 & 16.62 & 3.38 & 1.05 & 8.12 & 3.85 & 1225 & 576 +    computational times for lin1 , lin2 , and phclab are very similar for each of the 20 test problems of the same degree . on the other hand",
    ", nsolve needs substantially more time for certain problems .",
    "for example , for complex polynomials of degree @xmath395 , nsolve needed approximately @xmath396 for 16 of the 20 examples , and @xmath397 for the additional 4 examples .",
    "that explains why the average time for nsolve ( @xmath393 ) is larger in case @xmath395 than in case @xmath398 .    beside the computational time ,",
    "accuracy and reliability are another important factors .",
    "nsolve is the only method that finds all solutions in all examples , but on the other hand , the results are on average less accurate than with other methods . as a measure of accuracy we use the maximum value of @xmath399 where @xmath400 is a jacobian matrix of @xmath401 and @xmath402 at @xmath32 , over all computed zeros @xmath32 .",
    "@xmath403 is an absolute condition number of a zero @xmath32 and we assume that in random examples all zeros are simple . for a good method ( [ eq : condn ] ) should be as small as possible .    for real or complex systems of degree @xmath404 , lin2 is the fastest method and usually the most accurate one .",
    "it is never significantly less accurate than the others , so it clearly wins in this case . for real polynomials of degree @xmath398 computational times of all methods",
    "are very close .",
    "nsolve is the fastest method with a tight margin in 17 out of 20 cases , but is also several orders of magnitude less accurate .",
    "phclab is faster and slightly less accurate than lin2 in 5 out of 40 cases , but , in one of them it fails to compute all the solutions",
    ".    for @xmath405 and @xmath406 phclab becomes the fastest method , but is less reliable .",
    "in many cases it does not compute all the solutions . for @xmath405",
    "this happens in 14 out of 40 times and for @xmath406 in @xmath407 out of @xmath408 cases .",
    "as phclab is using random initial systems , a possible remedy is to run phclab several times .",
    "also lin2 fails to compute solutions for @xmath409 real examples for @xmath406 .",
    "a remedy for lin2 in these cases is to interchange variables @xmath26 and @xmath27 .",
    "lin1 is competitive in particular for real systems of degree @xmath404 .",
    "for @xmath398 it misses one solution in one example and in two examples for @xmath406 we have to adapt the criteria for detecting a numerical rank in the staircase algorithm to get the correct number of solutions .",
    "let us remark that each node less in the representation tree really does make a difference .",
    "for instance , if we do not apply the special case for @xmath329 in subsection [ ss : case4 ] , then the @xmath387 matrices for lin2 for polynomial systems of degree @xmath406 are of size @xmath410 instead of @xmath411 and the average computational time rises from @xmath412 to @xmath413 .    [ ex:25]we test lin1 and lin2 on 25 examples ex001 to ex025 from @xcite .",
    "this set contains challenging benchmark problems with polynomials of small degree from @xmath414 to @xmath415 that have many multiple zeros and usually have less solutions than a generic pair of the same degrees .",
    "lin1 and lin2 performed satisfactorily on most examples , but , they also failed on some . instead of giving the details for all 25 examples , we give the key observations .",
    "* multiple zeros can present a problem for the algorithm from @xcite that is used to solve the projected regular problem @xmath416 , @xmath417 that is obtained from ( [ drugi ] ) by the modified staircase algorithm from @xcite .",
    "the qz algorithm is first applied to @xmath416 and then @xmath417 is multiplied by @xmath418 and @xmath419 . the eigenvalues are clustered along the diagonal so that multiple eigenvalues @xmath26 should be in the same block . for several of the 25 examples with eigenvalues of high multiplicity the clustering criteria have to be adapted otherwise the results are not so accurate .",
    "* lin2 is faster , but the accuracy can be lost if the polynomial in step 1 of algorithm  [ alg : lin2 ] has multiple zeros , an example is @xmath402 from ex008 .",
    "the method fails for ex014 , ex018 , and ex020 .",
    "* we get very good results in example ex005 with the system @xmath420 and @xmath421 using lin2 . in this case",
    "lin2 returns optimal determinantal representations with matrices of size @xmath422 and @xmath423 , respectively .",
    "the obtained two - parameter eigenvalue problem is not singular and we get the solutions in @xmath424 , while phclab and nsolve need @xmath425 . for comparison , lin1 ,",
    "applied to the same problem , returns @xmath387 matrices of size @xmath426 , while lin2 gives @xmath387 matrices of size @xmath427 .",
    "* lin1 is slower but can be more accurate . because there is no computation in the construction , no errors are introduced in the construction of the linearization .",
    "lin1 manages to solve 22 out of 25 examples ( in some examples the parameters have to be adapted to make it work ) , but fails for ex007 , ex016 , and ex018 .",
    "* nsolve always finds all solutions but is slower than lin1 and lin2 except for ex014 where polynomials are of degrees @xmath428 and @xmath429 .",
    "phclab usually finds just one instance of a multiple eigenvalue and thus returns much less zeros .",
    "[ ex : tri ] encouraged by the good results for ex005 in example [ ex:25 ] , we carry out some experiments with polynomials of form @xmath430 , where @xmath431 is a polynomial of small degree @xmath432 . for such polynomials algorithm  [ alg : lin2 ] returns matrices of size @xmath433 or even smaller .",
    "for example , it is easy to see that for @xmath434 we get linearization of the smallest possible size @xmath16 .",
    "we compared lin2 , phclab , and nsolve .",
    "computational times for random polynomials with complex coefficients of the above form are presented in table [ tbl : two ] .",
    "as @xmath1 increases , phclab becomes faster then lin2 , but in most cases it does not compute all solutions .",
    "for instance , for @xmath435 it misses 16 and 20 zeros for @xmath434 and @xmath436 , respectively .",
    "therefore , lin2 might be the preferred method for such polynomial systems .",
    "cc|lcc & + @xmath1 & @xmath437 & lin2 & phclab & nsolve +    ' '' ''    15 & 1 & 10.48 & 11.9 & 13.7 + 15 & 3 & 10.87 & 11.8 & 14.1 + 20 & 1 & 12.1 & 14.5 & 10.8 + 20 & 3 & 13.8 & 15.0 & 11.3 + 25 & 1 & 19.6 & 10.6 & 25.0 + 25 & 3 & 13.1 & 12.7 & 26.3 + 30 & 1 & 23.2 & 17.4 & 52.8 + 30 & 3 & 37.2 & 20.1 & 55.0 +",
    "we have proposed two linearizations for bivariate polynomials .",
    "the first linearization does not involve any computation as the coefficients of the polynomials appear as ( block ) coefficients of the matrices @xmath80 , @xmath81 , and @xmath52 .",
    "this linearization is suitable for both scalar and matrix bivariate polynomials .",
    "the second linearization , useful for scalar polynomials , involves little computation and returns much smaller matrices .",
    "they are still larger than the theoretically smallest possible size @xmath16 , but their construction is very simple and fast . moreover , while the asymptotic order is @xmath438 , the order for small @xmath1 is about @xmath30 ; for polynomials of degree 3 and 4 we have presented determinantal representations of order 3 and 5 , respectively .    as an application we have presented a method for finding roots of two bivariate polynomials .",
    "we show that an approach , where the polynomial system is first linearized into a two - parameter eigenvalue problem , which is later solved by a modified staircase method , is numerically feasible and gives good results for polynomials of degree @xmath29 , as well as for polynomials of higher degree but with few terms .",
    "any further results on even smaller determinantal representations that can be efficiently constructed numerically , could enlarge the above degree .",
    "* acknowledgment * the research was performed while the first author was visiting the casa group at tu eindhoven .",
    "the author wishes to thank the nwo for the visitor s grant and the casa group for the hospitality .",
    ", resultant - based methods for plane curves intersection problems , in : proceedings of the 8th international conference on computer algebra in scientific computing , vol .",
    "3718 of lecture notes in computer science , springer - verlag ( 2005 ) 7592 .              , phclab : a matlab / octave interface to phcpack . in : m.",
    "stillman , j.  verschelde , and n.  takayama ( eds ) , _",
    "software for algebraic geometry _ ,",
    "volume 148 of the i m a volumes in mathematics and its applications , springer new york ( 2008 ) 1532 .                                  , a unified approach to computing real and complex zeros of zero - dimensional ideals , in : m.  putinar , s.  sullivant ( eds . ) , _ emerging applications of algebraic geometry _ , the i m a volumes in mathematics and its applications 149 , springer - verlag , new york ( 2009 ) 125155 .                                          , lmi representations of convex semialgebraic sets and determinantal representations of algebraic hypersurfaces : past , present , and future , in h.  dym , m.  c.  de oliveira , m.  putinar ( eds . ) , _ mathematical methods in systems , optimization , and control : festschrift in honor of j.  william helton . _",
    "operator theory : advances and applications 222 , birkhuser ( 2012 ) 325349 ."
  ],
  "abstract_text": [
    "<S> we give two determinantal representations for a bivariate polynomial . </S>",
    "<S> they may be used to compute the zeros of a system of two of these polynomials via the eigenvalues of a two - parameter eigenvalue problem . </S>",
    "<S> the first determinantal representation is suitable for polynomials with scalar or matrix coefficients , and consists of matrices with asymptotic order @xmath0 , where @xmath1 is the degree of the polynomial . </S>",
    "<S> the second representation is useful for scalar polynomials and has asymptotic order @xmath2 . </S>",
    "<S> the resulting method to compute the roots of a system of two bivariate polynomials is competitive with some existing methods for polynomials up to degree 10 , as well as for polynomials with a small number of terms .    </S>",
    "<S> system of bivariate polynomial equations , determinantal representation , two - parameter eigenvalue problem , polynomial multiparameter eigenvalue problem .    </S>",
    "<S> 65f15 , 65h04 , 65f50 , 13p15 . </S>"
  ]
}
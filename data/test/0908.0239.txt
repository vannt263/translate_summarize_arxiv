{
  "article_text": [
    "the burrows - wheeler transform ( bwt ) is a widely used preprocessing technique in lossless data compression @xcite .",
    "it brings every word into a form which is likely to be easier to compress @xcite .",
    "its compression performance is almost as good as ppm ( prediction by partial matching ) schemes @xcite while its speed is comparable to that of lempel - ziv algorithms @xcite .",
    "therefore , bwt based compression schemes are a very reasonable trade - off between running time and compression ratio .    in the classic setting , the bwt maps a word of length @xmath0 to a word of length @xmath0 and an index ( comprising @xmath3 bits ) . thus , the bwt is not bijective and hence , it is introducing new redundancies to the data , which is cumbersome and undesired in applications of data compression or cryptography . instead of using an index ,",
    "a very common technique is to assume that the input has a unique end - of - string symbol @xcite .",
    "even though this often simplifies proofs or allows speeding up the algorithms , the use of an end - of - string symbol introduces new redundancies ( again @xmath3 bits are required for coding the end - of - string symbol ) .",
    "we discuss bijective versions of the bwt which are one - to - one correspondences between words of length @xmath0 .",
    "in particular , no index and no end - of - string symbol is needed .",
    "not only does bijectivity save a few bits , for example , it also increases data security when cryptographic procedures are involved ; it is more natural and it can help us to understand the bwt even better .",
    "moreover , the bijective variants give us new possibilities for enhancements ; for example , in the bijective bwt different orders on the letters can be used for the two main stages .",
    "several variants of the bwt have been introduced @xcite .",
    "an overview can be found in the textbook by adjeroh , bell , and mukherjee @xcite .",
    "one particularly important variant for this paper is the sort transform ( st ) , which is also known under the name schindler transform @xcite . in the original paper",
    ", the inverse of the st is described only very briefly .",
    "more precise descriptions and improved algorithms for the inverse of the st have been proposed recently @xcite . as for the bwt",
    ", the st also involves an index or an end - of - string symbol .",
    "in particular , the st is not onto and it introduces new redundancies .",
    "the bijective bwt was discovered and first described by scott ( 2007 ) , but his exposition of the algorithm was somewhat cryptic , and was not appreciated as such . in particular , the fact that this transform is based on the lyndon factorization went unnoticed by scott .",
    "gil and scott @xcite provided an accessible description of the algorithm .",
    "here , we give an alternative description , a proof of its correctness , and more importantly , draw connections between scott s algorithm and other results in combinatorics on words .",
    "further , this variation of the bwt is used to introduce techniques which are employed at the bijective sort transform , which makes the main contribution of this paper .",
    "the forward transform of the bijective st is rather easy , but we have to be very careful with some details .",
    "compared with the inverse of the bijective bwt , the inverse of the bijective st is more involved",
    ".    * outline . *",
    "the paper is organized as follows . in section  [ sec : prelim ] we fix some notation and repeat basic facts about combinatorics on words . on our way to the bijective sort transform ( section  [ sec : lst ] ) we investigate the bwt ( section  [ sec : bwt ] ) , the bijective bwt ( section  [ sec : lbwt ] ) , and the sort transform ( section  [ sec : st ] ) .",
    "we give full constructive proofs for the injectivity of the respective transforms .",
    "each section ends with a running example which illustrates the respective concepts .",
    "apart from basic combinatorics on words , the paper is completely self - contained .",
    "throughout this paper we fix the finite non - empty alphabet @xmath4 and assume that @xmath4 is equipped with a linear order @xmath5 . a _ word _ is a sequence @xmath6 of letters @xmath7 , @xmath8 .",
    "the set of all such sequences is denoted by @xmath9 ; it is the free monoid over  @xmath4 with concatenation as composition and with the empty word @xmath10 as neutral element .",
    "the set @xmath11 consists of all non - empty words . for words",
    "@xmath12 we write @xmath13 if @xmath14 or if @xmath15 is lexicographically smaller than @xmath16 with respect to the order @xmath5 on the letters .",
    "let @xmath17 be a non - empty word with letters @xmath18 .",
    "the _ length _ of @xmath19 , denoted by @xmath20 , is @xmath0 .",
    "the empty word is the unique word of length @xmath21 .",
    "we can think of @xmath19 as a labeled linear order : position @xmath22 of @xmath19 is labeled by @xmath18 and in this case we write @xmath23 , so each word @xmath19 induces a labeling function @xmath24 .",
    "the first letter @xmath25 of @xmath19 is denoted by @xmath26 while the last letter @xmath27 is denoted by @xmath28 .",
    "the _ reversal _ of a word @xmath19 is @xmath29 .",
    "we say that two words @xmath12 are _ conjugate _ if @xmath30 and @xmath31 for some words @xmath32 , i.e. , @xmath15 and @xmath16 are cyclic shifts of one another .",
    "the @xmath33-fold concatenation of @xmath19 with itself is denoted by @xmath34 .",
    "a word @xmath15 is a _ root _ of @xmath19 if @xmath35 for some @xmath36 .",
    "a word @xmath19 is _ primitive _ if @xmath35 implies @xmath37 and hence @xmath38 , i.e. , @xmath19 has only the trivial root @xmath19 .",
    "the _ right - shift _ of @xmath39 is @xmath40 and the @xmath22-fold right shift  @xmath41 is defined inductively by @xmath42 and @xmath43 .",
    "we have @xmath44 for @xmath45 .",
    "the word @xmath41 is also well - defined for  @xmath46 and then @xmath47 where @xmath48 .",
    "we define the _ ordered conjugacy class _ of a word @xmath49 as @xmath50 = ( w_1 , \\ldots , w_n)$ ] where @xmath51 .",
    "it is convenient to think of  @xmath50 $ ] as a cycle of length @xmath0 with a pointer to a distinguished starting position .",
    "every position @xmath22 , @xmath8 , on this cycle is labeled by @xmath52 . in particular",
    ", @xmath25 is a successor of @xmath27 on this cycle since the position @xmath1 is a successor of the position @xmath0",
    ". the mapping @xmath53 moves the pointer to its predecessor .",
    "the ( unordered ) conjugacy class of @xmath19 is the multiset @xmath54 . whenever there is no confusion , then by abuse of notation we also write @xmath50 $ ] to denote the ( unordered ) conjugacy class of @xmath19 .",
    "for instance , this is the case if @xmath19 is in some way distinguished within its conjugacy class , which is true if @xmath19 is a lyndon word .",
    "a _ lyndon word _ is a non - empty word which is the unique lexicographic minimal element within its conjugacy class .",
    "more formally , let @xmath50 = ( w , w_2 , \\ldots , w_n)$ ] , then @xmath55 is a lyndon word if @xmath56 for all @xmath57 .",
    "lyndon words have a lot of nice properties @xcite .",
    "for instance , lyndon words are primitive .",
    "another interesting fact is the following .",
    "[ thm : lyndon ] every word @xmath58 has a unique factorization @xmath59 such that @xmath60 is a non - decreasing sequence of lyndon words .",
    "an alternative formulation of the above fact is that every word @xmath19 has a unique factorization @xmath61 where @xmath62 for all @xmath22 and where @xmath63 is a strictly increasing sequence of lyndon words .",
    "the factorization of @xmath19 as in fact  [ thm : lyndon ] is called the _ lyndon factorization _ of @xmath19 .",
    "it can be computed in linear time using duval s algorithm @xcite .",
    "suppose we are given a multiset @xmath64 of lyndon words enumerated in non - decreasing order @xmath65 .",
    "now , @xmath66 uniquely determines the word @xmath67 .",
    "therefore , the lyndon factorization induces a one - to - one correspondence between arbitrary words of length @xmath0 and multisets of lyndon words of total length @xmath0 . of course , by definition of lyndon words , the multiset @xmath68 of lyndon words and the multiset @xmath69 , \\ldots , [ v_s]}\\right\\}}$ ] of conjugacy classes of lyndon words are also in one - to - one correspondence .",
    "we extend the order @xmath5 on @xmath4 as follows to non - empty words .",
    "let @xmath70 be the infinite sequences obtained as the infinite power of @xmath19 .",
    "for @xmath71 we write @xmath72 if either @xmath73 or @xmath74 and @xmath75 for @xmath76 , @xmath77 with @xmath78 , and infinite sequences @xmath79 ; phrased differently , @xmath72 means that the infinite sequences  @xmath80 and @xmath81 satisfy @xmath82 .",
    "if @xmath15 and @xmath16 have the same length , then @xmath83 coincides with the lexicographic order induced by the order on the letters . for arbitrary words , @xmath83 is only a preorder since for example @xmath84 and @xmath85 . on the other hand , if @xmath86 and @xmath87 then @xmath88 .",
    "hence , by the periodicity lemma @xcite , there exists a common root @xmath89 and @xmath90 such that @xmath91 and @xmath92 .",
    "also note that @xmath93 whereas @xmath94 for @xmath78 .    intuitively , the _ context of order @xmath2 _ of @xmath19 is the sequence of the first @xmath2 letters of @xmath19 .",
    "we want this notion to be well - defined even if @xmath95 .",
    "to this end let @xmath96 be the prefix of length @xmath2 of @xmath97 , i.e. , @xmath96 consists of the first @xmath2 letters on the cycle @xmath50 $ ] .",
    "note that our definition of a context of order @xmath2 is left - right symmetric to the corresponding notion used in data compression .",
    "this is due to the fact that typical compression schemes are applying the bwt or the st to the reversal of the input .",
    "an important construction in this paper is the _ standard permutation _",
    "@xmath98 on the set of positions @xmath99 induced by a word @xmath100 @xcite .",
    "the first step is to introduce a new order @xmath101 on the positions of @xmath19 by sorting the letters within @xmath19 such that identical letters preserve their order .",
    "more formally , the linear order @xmath101 on @xmath102 is defined as follows : @xmath103 if @xmath104 let @xmath105 be the linearization of @xmath106 according to this new order .",
    "now , the standard permutation @xmath98 is defined by @xmath107 .",
    "[ exa : start ] consider the word @xmath108 over the ordered alphabet @xmath109 .",
    "we have @xmath110 .",
    "therefore , the positions in @xmath19 are @xmath111 . for instance , the label of position @xmath112 is @xmath113 .",
    "its lyndon factorization is @xmath114 .",
    "the context of order @xmath115 of the prefix @xmath116 of length @xmath117 is @xmath118 and the context of order @xmath115 of the factor @xmath119 is @xmath120 .",
    "for computing the standard permutation we write @xmath19 column - wise , add positions , and then sort the pairs lexicographically :    [ cols=\"^,^,^\",options=\"header \" , ]     this yields the standard permutation @xmath121 the conjugacy class @xmath50 $ ] of @xmath19 is depicted in figure  [ sfg : w ] ; the @xmath22-th word in @xmath50 $ ] is written in the @xmath22-th row .",
    "the last column of the matrix for @xmath50 $ ] is the reversal @xmath122 of @xmath19 .",
    "the _ burrows - wheeler transform _ ( bwt ) maps words @xmath19 of length @xmath0 to pairs",
    "@xmath123 where @xmath124 is a word of length @xmath0 and @xmath22 is an index in @xmath125 .",
    "the word @xmath124 is usually referred to as the burrows - wheeler transform of @xmath19 . in particular , the bwt is not surjective .",
    "we will see below how the bwt works and that it is one - to - one .",
    "it follows that only a fraction of @xmath126 of all possible pairs @xmath123 appears as an image under the bwt . for instance @xmath127 where @xmath128 is not an image under the bwt .    for @xmath58",
    "we define @xmath129 where @xmath130 $ ] and @xmath131 .",
    "now , the burrows - wheeler transform of @xmath19 consists of the word @xmath132 and an index @xmath22 such that @xmath133 .",
    "note that in contrast to the usual definition of the bwt , we are using right shifts ; at this point this makes no difference but it unifies the presentation of succeeding transforms . at first glance , it is surprising that one can reconstruct @xmath134 from @xmath135 . moreover , if we know the index @xmath22 of @xmath19 in the sorted list @xmath134 , then we can reconstruct @xmath19 from @xmath135 .",
    "one way of how to reconstruct @xmath134 is presented in the following lemma . for later use , we prove a more general statement than needed for computing the inverse of the bwt .    [",
    "lem : contextretrieval ] let @xmath136 .",
    "let @xmath137 = { \\left\\{\\mathinner{w_1 ,      \\ldots , w_n}\\right\\ } } \\subseteq \\sigma^+$ ] be a multiset built from conjugacy classes @xmath138 $ ] .",
    "let @xmath139 satisfy @xmath140 and let @xmath141 be the sequence of the last symbols .",
    "then @xmath142 where @xmath143 denotes the @xmath144-fold application of @xmath145 and @xmath146 .",
    "by induction over the context length @xmath144 , we prove that for all @xmath147 we have @xmath148 .",
    "for @xmath149 we have @xmath150 and hence , the claim is trivially true .",
    "let now @xmath151 . by the induction hypothesis ,",
    "the  @xmath152-order context of each @xmath153 is @xmath154 . by applying one right - shift",
    ", we see that the @xmath144-order context of @xmath155 is @xmath156 .",
    "the list @xmath157 meets the sort order induced by @xmath2-order contexts .",
    "in particular , @xmath158 is sorted by @xmath152-order contexts .",
    "let @xmath159 be a stable sort by @xmath144-order contexts of the right - shifts @xmath160 .",
    "the construction of @xmath159 only requires a sorting of the first letters of @xmath161 such that identical letters preserve their order .",
    "the sequence of first letters of the words @xmath162 is exactly @xmath124 . by construction of @xmath163",
    ", it follows that @xmath164 .",
    "since @xmath157 is built from conjugacy classes , the multisets of elements occurring in @xmath158 and @xmath165 are identical .",
    "the same holds for the multisets induced by @xmath166 and @xmath159 .",
    "therefore , the sequences of @xmath144-order contexts induced by @xmath167 and @xmath168 are identical .",
    "moreover , we conclude @xmath169 which completes the induction .",
    "we note that in general @xmath170 since the sort order of @xmath157 beyond @xmath2-order contexts is arbitrary .",
    "moreover , for @xmath171 the property @xmath172 does not need to hold ( even though the multisets of @xmath173-order contexts coincide ) .",
    "note that in lemma  [ lem : contextretrieval ] we do not require that all @xmath174 have the same length .",
    "applying the bwt to conjugacy classes of words with different lengths has also been used for the _ extended bwt _ @xcite .",
    "the bwt is invertible , i.e. , given @xmath175 where @xmath22 is the index of  @xmath19 in @xmath134 one can reconstruct the word @xmath19 .",
    "we set @xmath176 .",
    "let @xmath177 and @xmath178 .",
    "now , by lemma  [ lem : contextretrieval ] we see that @xmath179 in particular , @xmath180 only depends on @xmath124 and @xmath22 .    in the special case of the bwt it is possible to compute the @xmath22-th element @xmath153 of @xmath134 by using the inverse @xmath181 of the permutation @xmath163 : @xmath182 this justifies the usual way of computing the inverse of @xmath175 from right to left ( by using the restriction of @xmath181 to the cycle containing the element @xmath22 ) .",
    "the motivation is that the ( required cycle of the ) inverse @xmath181 seems to be easier to compute than the standard permutation @xmath163 .",
    "[ exa : bwt ] we compute the bwt of @xmath108 from example  [ exa : start ] .",
    "the lexicographically sorted list @xmath134 can be found in figure  [ sfg : m ] .",
    "this yields the transform @xmath183 where @xmath178 is the last column of the matrix @xmath134 and @xmath19 is the @xmath22-th row in @xmath134 .",
    "the standard permutation of @xmath124 is @xmath184 now , @xmath185 gives us the following sequence of positions starting with @xmath186 : @xmath187 applying the labeling function @xmath188 to this sequence of positions yields @xmath189 i.e. , we have successfully reconstructed the input @xmath19 from @xmath175 .",
    "now we are ready to give a comprehensive description of scott s bijective variant of the bwt and to prove its correctness .",
    "it maps a word of length  @xmath0 to a word of length  @xmath0without any index or end - of - string symbol being involved .",
    "the key ingredient is the lyndon factorization : suppose we are computing the bwt of a lyndon word @xmath16 , then we do not need an index since we know that @xmath16 is the first element of the list @xmath190 .",
    "this leads to the computation of a multi - word bwt of the lyndon factors of the input .",
    "the bijective bwt of a word @xmath19 of length @xmath0 is defined as follows .",
    "let @xmath191 with @xmath192 be the lyndon factorization of @xmath19 .",
    "let @xmath193 where @xmath194 and where the multiset @xmath195 $ ] .",
    "then , the bijective bwt of @xmath19 is @xmath196 .",
    "the _ s _ in @xmath197 is for _ scottified_. note that if @xmath19 is a power of a lyndon word , then @xmath198 .    in some sense",
    ", the bijective bwt can be thought of as the composition of the lyndon factorization @xcite with the inverse of the gessel - reutenauer transform @xcite . in particular , a first step towards a bijective bwt can be found in a 1993 article by gessel and reutenauer @xcite ( prior to the publication of the bwt @xcite ) .",
    "the link between the gessel - reutenauer transform and the bwt was pointed out later by crochemore et al",
    ". a similar approach as in the bijective bwt has been employed by mantaci et al .",
    "@xcite ; instead of the lyndon factorization they used a decomposition of the input into blocks of equal length .",
    "the output of this variant is a word and a sequence of indices ( one for each block ) . in its current form",
    ", the bijective bwt has been proposed by scott @xcite in a newsgroup posting in 2007 .",
    "gil and scott gave an accessible version of the transform , an independent proof of its correctness , and they tested its performance in data compression @xcite .",
    "the outcome of these tests is that the bijective bwt beats the usual bwt on almost all files of the calgary corpus @xcite by at least a few hundred bytes which exceeds the gain of just saving the rotation index .",
    "[ lem : cycleretrieval ] let @xmath191 with @xmath192 be the lyndon factorization of  @xmath19 , let @xmath193 , and let @xmath199 .",
    "consider the cycle @xmath200 of the permutation @xmath163 which contains the element @xmath1 and let @xmath201 be the length of @xmath200 . then @xmath202 .    by lemma  [ lem : contextretrieval ]",
    "we see that @xmath203 .",
    "since @xmath204 is primitive it follows @xmath205 for some @xmath206 . in particular , the lyndon factorization of @xmath19 ends with @xmath207 .",
    "let @xmath208 be the subsequence of @xmath209 which consists of those @xmath210 which come from this last factor @xmath207 .",
    "the sequence @xmath208 contains each right - shift of @xmath204 exactly @xmath211 times .",
    "moreover , the sort - order within @xmath208 depends only on @xmath212-order contexts .",
    "the element @xmath213 is the first element in @xmath208 since @xmath204 is a lyndon word . in particular",
    ", @xmath214 is the first occurrence of @xmath215 within @xmath208 .",
    "suppose @xmath216 is the first occurrence of @xmath217 within @xmath208 .",
    "let @xmath218 be the indices of all occurrences of @xmath217 in @xmath208 . by construction of @xmath163 , we have @xmath219 and therefore @xmath220 is the first occurrence of @xmath221 within @xmath208 .",
    "inductively , @xmath216 always refers to the first occurrence of @xmath217 within @xmath208 ( for all @xmath222 ) . in particular",
    "it follows that @xmath223 and @xmath224 .",
    "[ thm : bijbwt ] the bijective bwt is invertible , i.e. , given @xmath225 one can reconstruct the word @xmath19 .",
    "let @xmath199 and let @xmath191 with @xmath226 be the lyndon factorization of @xmath19 .",
    "each permutation admits a cycle structure .",
    "we decompose the standard permutation @xmath163 into cycles @xmath227 .",
    "let @xmath228 be the smallest element of the cycle @xmath229 and let @xmath230 be the length of @xmath229 .",
    "we can assume that @xmath231 .",
    "we claim that @xmath232 , @xmath233 , and @xmath234 . by lemma  [ lem : cycleretrieval ]",
    "we have @xmath235 .",
    "let @xmath236 denote the restriction of @xmath163 to the set @xmath237 , where by abuse of notation @xmath238 denotes the set of all elements occurring in @xmath239 .",
    "let @xmath240 .",
    "the word @xmath241 can be obtained from @xmath124 by removing all positions occurring in the cycle @xmath242 .",
    "this yields a monotone bijection @xmath243 such that @xmath244 and @xmath245 for all @xmath246 .",
    "in particular , @xmath247 has the same cycle structure as @xmath236 and @xmath248 is the sequence of the minimal elements within the cycles . by induction on the number of lyndon factors ,",
    "@xmath249 appending @xmath250 to the last line allows us to reconstruct @xmath19 by @xmath251 moreover , @xmath252 and @xmath233 .",
    "we note that this formula for @xmath19 only depends on @xmath124 and does not require any index to an element in @xmath209 .",
    "[ exa : bijbwt ] we again consider the word @xmath108 from example  [ exa : start ] and its lyndon factorization @xmath253 where @xmath254 , @xmath255 , @xmath256 , @xmath257 , @xmath258 , and @xmath259 .",
    "the lists @xmath260 , \\ldots , [ v_6])$ ] and @xmath209 are :    r|*5p1.75mm| & + & @xmath261 & & & & + & @xmath261 & @xmath261 & @xmath262 & & + & @xmath262 & @xmath261 & @xmath261 & & + & @xmath261 & @xmath262 & @xmath261 & & + & @xmath261 & @xmath262 & @xmath262 & & + & @xmath262 & @xmath261 & @xmath262 & & + & @xmath262 & @xmath262 & @xmath261 & & + & @xmath262 & @xmath263 & & & + & @xmath263 & @xmath262 & & & + & @xmath262 & @xmath263 & & & + & @xmath263 & @xmath262 & & & + & @xmath262 & @xmath263 & @xmath262 & @xmath263 & @xmath263 + & @xmath263 & @xmath262 & @xmath263 & @xmath262 & @xmath263 + & @xmath263 & @xmath263 & @xmath262 & @xmath263 & @xmath262 + & @xmath262 & @xmath263 & @xmath263 & @xmath262 & @xmath263 + & @xmath263 & @xmath262 & @xmath263 & @xmath263 & @xmath262 +    r|*5p1.75mm| & + & @xmath261 & & & & + & @xmath261 & @xmath261 & @xmath262 & & + & @xmath261 & @xmath262 & @xmath261 & & + & @xmath261 & @xmath262 & @xmath262 & & + & @xmath262 & @xmath261 & @xmath261 & & + & @xmath262 & @xmath261 & @xmath262 & & + & @xmath262 & @xmath262 & @xmath261 & & + & @xmath262 & @xmath263 & & & + & @xmath262 & @xmath263 & & & + & @xmath262 & @xmath263 & @xmath262 & @xmath263 & @xmath263 + & @xmath262 & @xmath263 & @xmath263 & @xmath262 & @xmath263 + & @xmath263 & @xmath262 & & & + & @xmath263 & @xmath262 & & & + & @xmath263 & @xmath262 & @xmath263 & @xmath262 & @xmath263 + & @xmath263 & @xmath262 & @xmath263 & @xmath263 & @xmath262 + & @xmath263 & @xmath263 & @xmath262 & @xmath263 & @xmath262 +    hence , we obtain @xmath264 as the sequence of the last symbols of the words in @xmath209 .",
    "the standard permutation @xmath163 induced by @xmath124 is @xmath265 the cycles of @xmath163 arranged by their smallest elements are @xmath266 , @xmath267 , @xmath268 , @xmath269 , @xmath270 , and @xmath271 .",
    "applying the labeling function @xmath188 to the cycle @xmath272 ( starting with the second element ) yields the lyndon factor @xmath174 . with this procedure , we reconstructed @xmath273 from @xmath199 .",
    "[ sec : st ]    the _ sort transform _",
    "( st ) is a bwt where we only sort the conjugates of the input up to a given depth @xmath2 and then we are using the index of the conjugates as a tie - breaker . depending on the depth @xmath2 and the implementation details this can speed up compression ( while at the same time slightly slowing down decompression ) .",
    "in contrast to the usual presentation of the st , we are using right shifts .",
    "this defines a slightly different version of the st .",
    "the effect is that the order of the symbols occurring in some particular context is reversed .",
    "this makes sense , because in data compression the st is applied to the reversal of a word .",
    "hence , in the st of the reversal of @xmath19 the order of the symbols in some particular context is the same as in @xmath19 . more formally ,",
    "suppose @xmath274 for @xmath275 then in the sort transform of order @xmath276 of @xmath19 , the order of the occurrences of the letters @xmath52 is not changed .",
    "this property can enable better compression ratios on certain data .    while the standard permutation is induced by a sequence of letters ( i.e.",
    ", a word ) we now generalize this concept to sequences of words . for a list of non - empty words",
    "@xmath277 we now define the _ @xmath2-order standard permutation _",
    "@xmath278 induced by @xmath66 . as for the standard permutation ,",
    "the first step is the construction of a new linear order @xmath101 on @xmath102 .",
    "we define @xmath103 by the condition @xmath279 let @xmath105 be the linearization of @xmath102 according to this new order .",
    "the idea is that we sort the line numbers of @xmath280 by first considering the @xmath2-order contexts and , if these are equal , then use the line numbers as tie - breaker . as before , the linearization according to @xmath101 induces a permutation @xmath278 by setting @xmath281 .",
    "now , @xmath282 is the position of @xmath174 if we are sorting @xmath66 by @xmath2-order context such that the line numbers serve as tie - breaker .",
    "we set @xmath283 where @xmath284 .",
    "now , we are ready to define the sort transform of order @xmath2 of a word  @xmath19 : let @xmath285 ) = ( w_1 , \\ldots , w_n)$ ] ; then @xmath286 , i.e. , we first sort all cyclic right - shifts of @xmath19 by their @xmath2-order contexts ( by using a stable sort method ) and then we take the sequence of last symbols according to this new sort order as the image under @xmath287 . since the tie - breaker relies on right - shifts , we have @xmath288 , i.e. , @xmath289 is the reversal mapping . the @xmath2-order",
    "sort transform of @xmath19 is the pair @xmath290 where @xmath22 is the index of @xmath19 in @xmath285)$ ] . as for the bwt",
    ", we see that the @xmath2-order sort transform is not bijective .",
    "next , we show that it is possible to reconstruct @xmath285)$ ] from @xmath291 . hence , it is possible to reconstruct @xmath19 from the pair @xmath290 where @xmath22 is the index of  @xmath19 in  @xmath285)$ ] .",
    "the presentation of the back transform is as follows .",
    "first , we will introduce the _",
    "@xmath2-order context graph _ @xmath292 and we will show that it is possible to rebuild  @xmath285)$ ] from @xmath292",
    ". then we will show how to construct @xmath292 from @xmath291 .",
    "again , the approach will be slightly more general than required at the moment ; but we will be able to reuse it in the presentation of a bijective st .",
    "let @xmath293 , \\ldots , [ u_s ] ) = ( v_1 , \\ldots , v_n)$ ] be a list of words built from conjugacy classes @xmath294 $ ] of non - empty words @xmath210 .",
    "let @xmath139 be an arbitrary permutation of the elements in @xmath66 .",
    "we are now describing the edge - labeled directed graph   @xmath2-order context graph of @xmath157    which will be used later as a presentation tool for the inverses of the st and the bijective st .",
    "the vertices of @xmath295 consist of all @xmath2-order contexts @xmath96 of words @xmath19 occurring in @xmath157 .",
    "we draw an edge @xmath296 from context @xmath297 to context @xmath298 labeled by @xmath22 if @xmath299 and @xmath300 .",
    "hence , every index @xmath301 of @xmath157 defines a unique edge in @xmath295 .",
    "we can also think of @xmath302 as an additional implicit label of the edge @xmath296 , since @xmath303 .    a _ configuration _",
    "@xmath304 of the @xmath2-order context graph @xmath295 consists of a subset of the edges @xmath305 and a vertex @xmath263 .",
    "the idea is that ( starting at context @xmath263 ) we are walking along the edges of @xmath295 and whenever an edge is used , it is removed from the set of edges @xmath305 .",
    "we now define the transition @xmath306 from a configuration @xmath307 to another configuration @xmath308 with output @xmath309 more formally .",
    "if there exists an edge in @xmath310 starting at @xmath297 and if @xmath311 is the unique edge with the smallest label @xmath22 starting at @xmath297 , then we have the single - step transition @xmath312 if there is no edge in @xmath310 starting at @xmath297 , then the outcome of @xmath313 is undefined .",
    "inductively , we define @xmath314 and for @xmath315 and @xmath316 we have @xmath317 for some configuration @xmath318 .",
    "hence , the reversal @xmath319 is the label along the path of length @xmath320 starting at configuration @xmath307 . in particular ,",
    "if @xmath321 holds , then it is possible to chase at least @xmath322 transitions starting at @xmath307 ; vice versa , if we are chasing @xmath323 transitions then we obtain a word of length @xmath323 as a label .",
    "we note that successively taking the edge with the smallest label comes from the use of right - shifts .",
    "if we had used left - shifts we would have needed to chase largest edges for the following lemma to hold .",
    "the reverse labeling of the big - step transitions is motivated by the reconstruction procedure which will work from right to left .",
    "[ lem : smallestedgechasing ] let @xmath136 , @xmath324 , \\ldots , [ v_s])$ ] , @xmath325 , and @xmath326 .",
    "let @xmath310 consist of all edges of @xmath327 .",
    "then @xmath328      & \\ \\ \\vdots \\\\      ( \\mathcal{c}_s , c_s ) & \\stackrel{v_s}{\\to } ( \\mathcal{c}_{s+1},c_s ) .",
    "\\end{aligned}\\ ] ]    let @xmath329 .",
    "consider some index @xmath22 , @xmath330 , and let @xmath331 , \\ldots ,    [ v_{i-1}])$ ] .",
    "suppose that @xmath332 consists of all edges of @xmath327 except for those with labels @xmath333 for @xmath334 .",
    "let @xmath335 .",
    "we write @xmath336 and @xmath337 , i.e. , @xmath138 = ( u_{t+1 } , \\ldots ,    u_{t+q})$ ] . starting with @xmath338 , we show that the sequence of transitions @xmath339 is defined .",
    "more precisely , we will see that the transition @xmath340 walks along the edge @xmath341 and hence indeed is labeled with the letter @xmath342 .",
    "consider the context @xmath343 . by induction",
    ", we have @xmath344 and no edge with label @xmath345 for @xmath346 occurs in  @xmath347 while all other labels do occur . in particular , @xmath348 for @xmath349 is an edge in @xmath347 ( where @xmath350 only holds for @xmath351 ; we will consider the case @xmath352 below ) .",
    "suppose there were an edge @xmath353 with @xmath354 .",
    "then @xmath355 and hence , @xmath356 has the same @xmath2-order context as @xmath357 .",
    "but in this case , in the construction of @xmath358 we used the index in @xmath66 as a tie - breaker .",
    "it follows @xmath359 which contradicts the properties of @xmath347 .",
    "hence , @xmath348 is the edge with the smallest label starting at context @xmath343 .",
    "therefore , @xmath360 and @xmath340 indeed walks along the edge @xmath348 .",
    "it remains to verify that @xmath361 , but this is clear since @xmath362 .    [",
    "lem : reconstructingg ] let @xmath136 , @xmath324 , \\ldots , [ v_s])$ ] , @xmath363 , and @xmath364",
    ". then it is possible to reconstruct @xmath295 from @xmath124 .    by lemma  [ lem : contextretrieval ] it is possible to reconstruct the contexts @xmath365 .",
    "this gives the vertices of the graph @xmath295 .",
    "write @xmath366 . for each @xmath367",
    "we draw an edge @xmath368 .",
    "this yields the edges of @xmath295 .",
    "the @xmath2-order st is invertible , i.e. , given @xmath290 where @xmath22 is the index of @xmath19 in @xmath285)$ ] one can reconstruct the word @xmath19 .",
    "the construction of @xmath19 consists of two phases .",
    "first , by lemma  [ lem : reconstructingg ] we can compute @xmath369))$ ] . by lemma  [ lem : contextretrieval ] we can compute @xmath370 from @xmath290 . in the second stage , we are using lemma  [ lem : smallestedgechasing ] for reconstructing @xmath19 by chasing @xmath371 where @xmath305 consists of all edges in @xmath369))$ ] .",
    "efficient implementations of the inverse transform rely on the fact that the @xmath2-order contexts of @xmath285)$ ] are ordered .",
    "this allows the implementation of the @xmath2-order context graph @xmath292 in a vectorized form @xcite .",
    "[ exa : st ] we compute the sort transform of order @xmath372 of @xmath108 from example  [ exa : start ] .",
    "the list @xmath373)$ ] is depicted in figure  [ sfg : m2 ] .",
    "this yields the transform @xmath374 where @xmath375 is the last column of the matrix  @xmath373)$ ] and @xmath19 is the @xmath22-th element in @xmath373)$ ] .",
    "next , we show how to reconstruct the input @xmath19 from @xmath123 .",
    "the standard permutation induced by @xmath124 is @xmath376 note that @xmath163 has four cycles @xmath377 , @xmath378 , @xmath379 , and @xmath380 .",
    "we obtain the context of order @xmath372 of the @xmath33-th word by @xmath381 .",
    "in particular , @xmath382 , @xmath383 , @xmath384 , @xmath385 , @xmath386 , @xmath387 , @xmath388 , and @xmath389 . with @xmath124 and these contexts we can construct the graph @xmath390)$ ] .",
    "the vertices of @xmath327 are the contexts and the edge - labels represent positions in @xmath124 .",
    "the graph @xmath327 is depicted below :    ( 0,0 ) node[circle , draw , inner sep=2.5pt ] ( ba ) @xmath391 ; ( 3,0 ) node[circle , draw , inner sep=2.5pt ] ( aa ) @xmath392 ; ( 6,0 ) node[circle , draw , inner sep=2.5pt ] ( ca ) @xmath393 ; ( 9,0 ) node[circle , draw , inner sep=2.5pt ] ( cb ) @xmath394 ; ( 0,3 ) node[circle , draw , inner sep=2.5pt ] ( bb ) @xmath395 ; ( 3,3 ) node[circle , draw , inner sep=2.5pt ] ( ab ) @xmath396 ; ( 6,3 ) node[circle , draw , inner sep=2.5pt ] ( bc ) @xmath119 ; ( 9,3 ) node[circle , draw , inner sep=2.5pt ] ( cc ) @xmath397 ;    ( aa ) ",
    "node[above ] @xmath1 ( ba ) ; ( ab ) .. controls ( 1.25,1.75 )",
    ".. node[sloped , above ] @xmath372 ( ba ) ; ( ab ) ",
    "node[left ] @xmath398 ( aa ) ; ( ab ) ",
    "node[above right ] @xmath399 ( ca ) ; ( ba ) .. controls ( 1.75,1.25 )",
    ".. node[sloped , above ] @xmath117 ( ab ) ; ( ba ) ",
    "node[left ] @xmath112 ( bb ) ; ( bb ) ",
    "node[above ] @xmath115 ( ab ) ; ( bc ) ",
    "node[above ] @xmath400 ( ab ) ; ( bc ) ",
    "node[sloped , above ] @xmath401 ( cb ) ; ( bc ) .. controls ( 8,2 ) ..",
    "node[sloped , above ] @xmath402 ( cb ) ; ( bc ) .. controls ( 8.5,2.5 ) .. node[sloped , above ] @xmath403 ( cb ) ; ( ca ) ",
    "node[left ] @xmath404 ( bc ) ; ( cb ) .. controls ( 7,1 ) .. node[sloped , above ] @xmath405 ( bc ) ; ( cb ) ",
    "node[right ] @xmath406 ( cc ) ; ( cb ) .. controls ( 6.5,0.5 )",
    ".. node[sloped , above ] @xmath407 ( bc ) ; ( cc ) ",
    "node[above ] @xmath408 ( bc ) ;    we are starting at the context @xmath409 and then we are traversing @xmath327 along the smallest edge - label amongst the unused edges . the sequence of the edge labels obtained this way is @xmath410 the labeling of this sequence of positions yields @xmath411 . since we are constructing the input from right to left , we obtain @xmath108 .",
    "the bijective sort transform combines the lyndon factorization with the st .",
    "this yields a new algorithm which serves as a similar preprocessing step in data compression as the bwt . in a lot of applications",
    ", it can be used as a substitute for the st .",
    "the proof of the bijectivity of the transform is slightly more technical than the analogous result for the bijective bwt .",
    "the main reason is that the bijective sort transform is less modular than the bijective bwt ( which can be grouped into a ` lyndon factorization part ' and a ` gessel - reutenauer transform part ' and which for example allows the use of different orders on the alphabet for the different parts ) .    for the description of the bijective st and of its inverse , we rely on notions from section  [ sec : sorttransform ] .",
    "the bijective st of a word @xmath19 of length @xmath0 is defined as follows .",
    "let @xmath67 with @xmath192 be the lyndon factorization of @xmath19 .",
    "let @xmath412 , \\ldots , [ v_s ] ) = ( u_1 , \\ldots , u_n)$ ]",
    ". then the bijective st of order @xmath2 of @xmath19 is @xmath413 .",
    "that is , we are sorting the conjugacy classes of the lyndon factors by @xmath2-order contexts and then take the sequence of the last letters . the letter _",
    "l _ in @xmath414 is for _",
    "[ thm : bijst ] the bijective st of order @xmath2 is invertible , i.e. , given @xmath415 one can reconstruct the word @xmath19 .",
    "let @xmath191 with @xmath192 be the lyndon factorization of @xmath19 , let @xmath416 , and let @xmath417 . by lemma  [ lem : reconstructingg ]",
    "we can rebuild the @xmath2-order context graph @xmath418 , \\ldots , [ v_s ] ) ) =    ( w_1 , \\ldots , w_n)$ ] from @xmath124 .",
    "let @xmath310 consist of all edges in @xmath327 .",
    "then by lemma  [ lem : smallestedgechasing ] we see that @xmath419      & \\ \\ \\vdots \\\\      ( \\mathcal{c}_s , c_s ) & \\stackrel{v_s}{\\to } ( \\mathcal{c}_{s+1},c_s ) .",
    "\\end{aligned}\\ ] ] we can not use this directly for the reconstruction of @xmath19 since we do not know the lyndon factors @xmath174 and the contexts @xmath420 .    the word @xmath204 is the first element in the list @xmath412 , \\ldots ,    [ v_s])$ ] because @xmath204 is lexicographically minimal and it appears as the first element in the list @xmath260 , \\ldots , [ v_s])$ ] .",
    "therefore , by lemma  [ lem : contextretrieval ] we obtain @xmath421 .",
    "the reconstruction procedure works from right to left .",
    "suppose we have already reconstructed @xmath422 for @xmath423 with @xmath424 being a ( possibly empty ) suffix of @xmath425 .",
    "moreover , suppose we have used the correct contexts @xmath426 .",
    "consider the configuration @xmath318 defined by @xmath419      & \\ \\ \\vdots \\\\      ( \\mathcal{c}_j , c_j ) & \\stackrel{v_j}{\\to } ( \\mathcal{c}_{j+1},c_j ) \\\\",
    "( \\mathcal{c}_{j+1},c_{j+1 } ) & \\stackrel{w'}{\\to } ( \\mathcal{c}',c ' )    \\end{aligned}\\ ] ] we assume that the following invariant holds : @xmath427 contains no edges @xmath428 with @xmath429 .",
    "we want to rebuild the next letter .",
    "we have to consider three cases .",
    "first , if @xmath430 then @xmath431 yields the next letter @xmath261 such that @xmath432 is a suffix of @xmath425 .",
    "second , let @xmath433 and suppose that there exists an edge @xmath434 starting at @xmath435 . then there exists a word @xmath436 in @xmath437 ,    \\ldots , [ v_s]$ ] such that @xmath438 . if @xmath439 then from the invariant it follows that @xmath440 .",
    "this is a contradiction , since @xmath441 is minimal among the words in @xmath437 , \\ldots , [ v_s]$ ] .",
    "hence , @xmath442 and the invariant still holds for @xmath443 .",
    "the last letter @xmath261 of @xmath441 is obtained by @xmath444 the third case is @xmath433 and there is no edge @xmath434 starting at @xmath435 . as before , @xmath441 is minimal among the ( remaining ) words in @xmath437 , \\ldots , [ v_s]$ ] . by construction of @xmath327 , the unique edge @xmath445 with the minimal label @xmath323 has the property that @xmath446 . in particular ,",
    "since @xmath441 is minimal , the invariant for @xmath448 is established . in this case , the last letter @xmath261 of @xmath441 is obtained by @xmath449 we note that we can not distinguish between the first and the second case since we do not know the length of @xmath425 , but in both cases , the computation of the next symbol is identical . in particular ,",
    "in contrast to the bijective bwt we do not implicitly recover the lyndon factorization of @xmath19 .",
    "we note that the proof of theorem  [",
    "thm : bijst ] heavily relies on two design criteria .",
    "the first one is to consider @xmath412 , \\ldots , [ v_s])$ ] rather than @xmath450 , \\ldots , [ v_1])$ ] , and the second is to use right - shifts rather than left - shifts .",
    "the proof of theorem  [ thm : bijst ] yields the following algorithm for reconstructing @xmath19 from @xmath451 :    1 .",
    "compute the @xmath2-order context graph @xmath452 and the @xmath2-order context @xmath297 of the last lyndon factor of @xmath19 .",
    "2 .   start with the configuration @xmath304 where @xmath305 contains all edges of @xmath327 and @xmath453 .",
    "3 .   if there exists an outgoing edge starting at @xmath263 in the set @xmath305 , then * let @xmath454 be the edge with the minimal label @xmath323 starting at @xmath263 .",
    "* output @xmath455 . *",
    "set @xmath456 and @xmath457 .",
    "* continue with step ( 3 ) .",
    "4 .   if there is no outgoing edge starting at @xmath263 in the set @xmath305 , but @xmath458 , then * let @xmath459 be the edge with the minimal label @xmath323",
    ". * output @xmath455 . * set @xmath460 and @xmath461 . * continue with step ( 3 ) .",
    "the algorithm terminates as soon as @xmath462 .",
    "the sequence of the outputs is the reversal @xmath122 of the word @xmath19 .",
    "we consider the word @xmath108 from example  [ exa : start ] and its lyndon factorization @xmath253 where @xmath254 , @xmath255 , @xmath256 , @xmath257 , @xmath258 , and @xmath259 .",
    "for this particular word @xmath19 the bijective burrows - wheeler transform and the bijective sort transform of order @xmath372 coincide . from example",
    "[ exa : bijbwt ] , we know @xmath463 and the standard permutation @xmath163 .",
    "as in example  [ exa : st ] we can reconstruct the @xmath372-order contexts @xmath464 of @xmath465,\\ldots,[v_6])$ ] : @xmath466 , @xmath467 , @xmath468 , @xmath385 , @xmath469 , @xmath470 , and @xmath471 . with @xmath124 and the @xmath372-order contexts",
    "we can construct the graph @xmath472,\\ldots,[v_6]))$ ] :    ( 0,0 ) node[circle , draw , inner sep=2.5pt ] ( ba ) @xmath391 ; ( 3,0 ) node[circle , draw , inner sep=2.5pt ] ( aa ) @xmath392 ; ( 9,0 ) node[circle , draw , inner sep=2.5pt ] ( cb ) @xmath394 ; ( 0,3 ) node[circle , draw , inner sep=2.5pt ] ( bb ) @xmath395 ; ( 3,3 ) node[circle , draw , inner sep=2.5pt ] ( ab ) @xmath396 ; ( 6,3 ) node[circle , draw , inner sep=2.5pt ] ( bc ) @xmath119 ; ( 9,3 ) node[circle , draw , inner sep=2.5pt ] ( cc ) @xmath397 ;    ( aa ) .. controls ( 4,-0.5 ) and ( 4,+0.5 ) .. node[right ] @xmath1 ( aa ) ; ( aa )  node[above ] @xmath372 ( ba ) ; ( ab )",
    " node[left ] @xmath398 ( aa ) ; ( ab ) .. controls ( 1.25,1.75 )",
    ".. node[sloped , above ] @xmath399 ( ba ) ; ( ba ) .. controls ( 1.75,1.25 )",
    ".. node[sloped , above ] @xmath117 ( ab ) ; ( ba ) ",
    "node[left ] @xmath112 ( bb ) ; ( bb )  node[above ] @xmath115 ( ab ) ; ( bc ) .. controls ( 7,1 )",
    ".. node[sloped , above ] @xmath400 ( cb ) ; ( bc ) ",
    "node[sloped , above ] @xmath401 ( cb ) ; ( bc ) .. controls ( 8,2 )",
    ".. node[sloped , above ] @xmath402 ( cb ) ; ( bc ) .. controls ( 8.5,2.5 ) ..",
    "node[sloped , above ] @xmath403 ( cb ) ; ( cb ) .. controls ( 6.5,0.5 ) .. node[sloped , above ] @xmath404 ( bc ) ; ( cb ) .. controls ( 6.0,0.0 )",
    ".. node[sloped , above ] @xmath405 ( bc ) ; ( cb ) ",
    "node[right ] @xmath406 ( cc ) ; ( cb ) .. controls ( 5.5,-0.5 ) .. node[sloped , above ] @xmath407 ( bc ) ; ( cc ) ",
    "node[above ] @xmath408 ( bc ) ;    we are starting with the edge with label @xmath1 and then we are traversing @xmath327 along the smallest unused edges .",
    "if we end in a context with no outgoing unused edges , then we are continuing with the smallest unused edge .",
    "this gives the sequence @xmath473 after which we end in context @xmath392 with no unused edges available .",
    "then we continue with the sequences @xmath474 and @xmath475 .",
    "the complete sequence of edge labels obtained this way is @xmath476 and the labeling of this sequence with @xmath188 yields @xmath477 . as for the st",
    ", we are reconstructing the input from right to left , and hence we get @xmath108 .",
    "we discussed two bijective variants of the burrows - wheeler transform ( bwt ) .",
    "the first one is due to scott . roughly speaking , it is a combination of the lyndon factorization and the gessel - reuternauer transform .",
    "the second variant is derived from the sort transform ( st ) ; it is the main contribution of this paper .",
    "we gave full constructive proofs for the bijectivity of both transforms .",
    "as a by - product , we provided algorithms for the inverse of the bwt and the inverse of the st .",
    "for the latter , we introduced an auxiliary graph structure  the @xmath2-order context graph .",
    "this graph yields an intermediate step in the computation of the inverse of the st and the bijective st .",
    "it can be seen as a generalization of the cycle decomposition of the standard permutation  which in turn can be used as an intermediate step in the computation of the inverse of the bwt and the bijective bwt .",
    "* acknowledgments . *",
    "the author would like to thank yossi gil and david a.  scott for many helpful discussions on this topic as well as alexander lauser , antonio restivo , and the anonymous referees for their numerous suggestions which improved the presentation of this paper ."
  ],
  "abstract_text": [
    "<S> the sort transform ( st ) is a modification of the burrows - wheeler transform ( bwt ) . </S>",
    "<S> both transformations map an arbitrary word of length @xmath0 to a pair consisting of a word of length @xmath0 and an index between @xmath1 and @xmath0 . </S>",
    "<S> the bwt sorts all rotation conjugates of the input word , whereas the st of order @xmath2 only uses the first @xmath2 letters for sorting all such conjugates . </S>",
    "<S> if two conjugates start with the same prefix of length @xmath2 , then the indices of the rotations are used for tie - breaking . both transforms output the sequence of the last letters of the sorted list and the index of the input within the sorted list . in this paper , we discuss a bijective variant of the bwt ( due to scott ) , proving its correctness and relations to other results due to gessel and reutenauer ( 1993 ) and crochemore , dsarmnien , and perrin ( 2005 ) . </S>",
    "<S> further , we present a novel bijective variant of the st . </S>"
  ]
}
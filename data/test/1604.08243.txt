{
  "article_text": [
    "recent years have witnessed several initiatives on enabling internet access to the next three billion people .",
    "it is widely recognized by all the stakeholders involved in the game of universal service provisioning , that providing access to the internet has no one size fits all solution for enabling wider universal internet access but requires exploring a variety of solutions .",
    "this is evident from organizations like facebook and google who are on a ( noble ) mission to connect the next three billion through novel ways utilizing high altitude platforms such as drones , balloons and satellites .",
    "access to the internet necessarily translates to access to its services .",
    "this means that the goal of providing internet access requires access to its critical service infrastructure , which are currently hosted in the cloud .",
    "however , recent works have pointed out that the current cloud centric nature of the internet is a fundamental barrier for internet access in rural / remote areas as well as in developing regions .",
    "taking africa as an example , we recently conducted a study mapping the african web ecosystem @xcite .",
    "our study highlighted that majority of the african web infrastructure is placed outside the continent .",
    "this has direct impact on aspects of dns resolution times as well as http page load times causing users to experience higher latencies for downloading the webpages and poor quality of experience .",
    "our paper concluded that there is a need for localised service infrastructures .",
    "access to services are also extremely important ( even potentially life saving ) during humanitarian crisis where access to services are challenged - due to intermittent connectivity , heavy interference and congestion leading to increased latencies to global servers or in most cases no access to them . hence its not rocket science to understand that access to localized service infrastructures is of paramount importance to solve the global access problem .",
    "recent work on mobile edge computing @xcite aims to push computation right at the edge of mobile networks , enabling computations at the edge improving latencies and performance .",
    "the recent work on infrastructure mobility @xcite illustrates the interesting concept of making the access infrastructure mobile thus providing better and much more efficient coverage based on the need / demand from the users .",
    "so an obvious question or follow up to this exciting idea is rather than making the access infrastructure mobile , why can not build on such work to make the service infrastructure mobile i.e. rather than expecting the users to access the cloud services , why can not we directly provision the cloud service infrastructure to the user on demand even in the absence of a terrestrial infrastructure e.g. rural / remote areas or disaster zones ?    in this paper , we present @xmath0- a preliminary idea of deploying a lightweight micro cloud infrastructure in the sky using indigenously built low cost drones , single board computers and lightweight operating system virtualization technologies such as unikernels / dockers @xcite .",
    "our paper lays out the preliminary ideas on such a system that can be instantaneously deployed on demand .",
    "to enable a lightweight micro cloud infrastructure in the sky using drones , we bring together a couple of fascinating recent innovations in computing : single board computers such as the raspberry pis ( pi ) and lightweightos virtualisation technologies such as dockersand integrate them with lightweight quadcopters .",
    "there were two possibilities for us to build the cloudrone : integrate the pi with an off the shelf ready made quadcopter or design and build an entire quadcopter from scratch with the pi powering both the drone as well as acting as a micro cloud server .",
    "we decide to go for the latter since we wanted to have the drone as lightweight and low cost as possible .",
    "there are two main challenges in building a low cost quadcopter .",
    "it has to be light weight yet robust and it has to be economical .",
    "the cost can not be controlled on components such as the motors , electronic speed controllers ( escs ) and the battery .",
    "so the focus was on the other two major areas to reduce the cost .",
    "the frame and the rc controller . for building the frame ,",
    "some materials like carbon fiber are light and strong but they are expensive compared to other materials like aluminium shafts or high quality reinforced plastic .",
    "the frame of the quadcopter consists of carbon infused plastic , the landing gear is made of light - weight square aluminium sections fitted with high quality foam sponge balls to withstand crashes .",
    "four brushless dc motors ( 1400kv , 800gms thrust ) connected with carbon fibre propellers ( 8x4.5 \" ) drive the drone .",
    "the speed of the motors is controlled by four electronic speed controllers ( peak current 30a ) with in - built battery eliminator circuits that provide 5v , 2a for powering up other circuits like the kk2 flight controller board and the pi .",
    "these escs are instructed by control signals that are generated by the output pins of the kk2 flight controller board .",
    "the kk2 board has a variety of modes to control different uavs like tricopters , quadcopters , hexacopters and octocopters easily .",
    "so any extension to the current quadcopter design can be easily accommodated and realised quickly .",
    "the kk2 has input pins which are generally connected to rc receivers .",
    "but rc transmitters and receivers tend to be quite expensive and make up a large portion of the entire cost .    a good quality 4 channel rc transmitter costs more than  200 .",
    "to build a low cost quadcopter that can act as a micro cloud server , we eliminated the rc transmitter and receiver entirely and replaced it with the pi .",
    "the pi has two important functions i.e. , controlling the drone s movements and to run micro services . since controlling the quadcopter",
    "is now being done by the pi , it can be programmed to fly autonomously along with manual override .",
    "we used the pi 2 model b equipped with quad - core armv7 cpu 900 mhz .",
    "the ram memory is 1024 mb .",
    "it requires power feed about 800 ma .",
    "the pi runs an arm version of ubuntu 14.04 .",
    "we used a edimax wifi dongle ( ew-7811un ) for providing the wifi interface .",
    "0.33     0.33     0.33       the pi generates a portable wi - fi access point to which the laptop is connected .",
    "a gaming joystick is connected to the laptop to control the drone manually . by using a python module called pygame  ,",
    "the joystick emulates an rc transmitter with different buttons and 2-axis joysticks , acting as controls for roll , pitch , yaw and throttle .",
    "a graphical user interface was also created to monitor the orientation , altitude , battery level , gps co - ordinates .",
    "the pi and the base laptop are connected by a software framework called ros ( robot operating system )   which simplifies sending and receiving data with the concepts of publishing and subscribing data .",
    "data which may be originating from a controller or from a sensor is published onto a  topic \" , from which any other component of the entire system can access it by subscribing to that topic .    in our design ,",
    "the joystick values are published to a topic which is subscribed by the pi .",
    "the pi then uses that data to send pulse width modulated control signals to the kk2 board .",
    "the program that runs on the pi has been designed to give signals exactly as an rc receiver would .",
    "so , for the kk2 board the signals appear to be coming from an rc receiver .",
    "based on the signal it receives , the kk2 board sends corresponding signals to the escs , which in turn send the brushless dc ( bldc ) motors the appropriate currents to change their speeds .",
    "all the electronics , motors and escs are powered using a lithium polymer battery ( 4200mah 3s 35c ) .    in order to maintain stability the kk2 implements p - i ( proportional - integral ) controller .",
    "the user has to manually set values to constants that govern the flight control . in the kk2 board",
    ", there are two important constants : p - gain , and i - gain for roll , pitch and yaw .",
    "these constant values will be the same for both roll and pitch owing to symmetry .",
    "firstly considering only one axis , say roll , setting i - gain to zero , p - gain is increased until the quadcopter produces oscillations periodically .",
    "if p - gain is too low , the reaction to roll left or right will be sluggish .",
    "if the p - gain is too high the quadcopter produces high frequency oscillations .",
    "based on observations , the p - gain is set to an appropriate value .",
    "i - gain is then increased to ensure that the quadcopter does not drift from the set - point . if i - gain is too high , there will be a lot of overshoot from the set point and if it is too low there will be a lot of drift .",
    "the quadcopter will not reach the set point forever . in order to tune the roll axis ,",
    "the quadcopter is tied along the pitch axis to two parallel cots which act as a stable test rig .",
    "the accelerometers and gyroscopes in the kk2 board are then calibrated .",
    "we place the quadcopter on a tested perfectly flat surface and run this calibration on the kk2 board to make sure that the pitch and roll angles are zero while hovering .",
    "the escs are then calibrated to start at the same time .",
    "this is done by pressing the back and enter buttons simultaneously while switching on the kk2 board with all the escs connected . the joystick connected to the laptop",
    "is set to 100% throttle .",
    "the escs beep to indicate that they have been calibrated .",
    "propellers , even the high quality ones may have some weight discrepancies which affect the quadcopter s flight when the motors spin at 14,000 rpm .",
    "so with a simple balancing test , we find out which side of the propeller is lighter than the other .",
    "to make the weights of both sides of the propeller equal , we stick cellophane tape on the lighter side .",
    "similarly to reduce the vibrations generated by the bldc motors we first measure the vibrations using an android app and stick cellophane tapes accordingly to all four motors and minimize these vibrations as they can corrupt the values of the accelerometer and gyroscope in the kk2 board .",
    "the quadcopter s final weight is approximately 1.5 kgs .",
    "the maximum altitude to which it was flown was 50 feet . with the current setup it can fly up to 100 feet theoretically .",
    "the effectiveness of the landing gear was also tested .",
    "the quad copter was dropped from a 2-storey building ( 45 feet high free fall ) and no components were damaged .",
    "the quadcopter s flight time has been measured in two different case scenarios .",
    "first with a 2200mah battery with 60c discharge rating and then with a 4200mah 35c battery . the flight duration and the throttle levels vary noticeably in these two scenarios . when we use the 2200mah battery the payload of the quadcopter was bout 50 gms higher than when the 4200mah battery was used .",
    "these are the observations :    * the quadcopter in the first scenario lifts only at 70% throttle level and the flight time is very poor owing to the smaller capacity of the battery and slightly heavier load .",
    "the estimated and realised flight times are only around 2 - 3 minutes . * on redesigning certain aspects of the quadcopter to compensate for the heavier 4200mah battery ,",
    "the overall weight of the quadcopter was reduced by 50 gms .",
    "the quadcopter now lifts at 55% throttle and was able to have sustained flight for over 8 minutes .",
    "if a smaller battery is used in the lighter quadcopter , the performance is still not as good as using a bigger and higher capacity battery . * by using a higher mah rated battery , the flight time can be further increased to an estimated 15 minutes .",
    "the quadcopter s cpu consumption was measured during the flight operation by using _ sysstat _ tools . on average",
    "our quadcopter consumes 30% for the flight control of the quadcopter leaving 70% for other processes .    to measure the wifi coverage of the quadcopter while it was in the air , we measured the signal strength from various distances ( with clear line of sight ) using wigle .",
    "we observed signal strengths varying from -65 dbm to -78 dbm within the distances 10 to 50 meters north , east and west of the direction of the wifi dongle .",
    "south being the direction away from the dongle had relatively poor coverage ( between -75 dbm to -89 dbm ) .",
    "wifi coverage can be enhanced by using additional portable lightweight wifi hotspots that can provide wider coverage ( such as the tp - link mr3040 ) .",
    "our vision to build a micro cloud infrastructure in the air is to use a swarm of pis on drones acting as micro cloud servers running dockers enabling us to run several lightweight containers .",
    "the lightweight nature of docker containers significantly reduce the size of image compared to the heavyweight vms @xcite .",
    "for instance , we can build a minimal static web server with only 2 mb size .",
    "this can be further reduced with new lightweight os virtualisation technologies such as includeos .    to interconnect the pis as a swarm / mesh ,",
    "each of these devices also act as mobile routers operating in two wifi communication modes : one operates in the wifi ad - hoc mode to allow optimised link state routing ( olsr ) protocol , constructing a mobile ad hoc network ( manet )  @xcite ; the other operates in the access point ( ap ) mode to allow user devices to connect with dhcp .",
    "the benefit of using olsr protocol compared to other manet routing protocols is it uses a special mechanism called multi - point relay ( mpr ) to reduce the number of flooded messages . only a few devices that are located in strategically better spatial positions",
    "are chosen to relay ( i.e. , re - transmit ) messages in the path from a source device to a destination device .",
    "the mpr mechanism helps reduce overall energy consumption .    to create a swarm of micro cloud servers , we use the docker swarm technology that allows us to create a cluster of multiple docker hosts ( pi running docker ) and migrate the service containers across the cluster . specifically , there are two types of nodes classified in the swarm .",
    "1 . swarm manager - who manages overall resources ( e.g. , swarm members , number of running containers ) and decides where to place the service containers .",
    "2 . swarm agent - nodes registered with the swarm manager .",
    "when the swarm manager and agents are created , they have to register with the discovery backend as members of the swarm .",
    "the discovery backend maintains an up - to - date list of swarm members and updates that list with the swarm manager .",
    "the swarm manager uses this list to assign tasks and schedule the service containers to the agents . to determine where to place the new container in the swarm , the swarm manager uses either",
    "_ spread _ or _",
    "bin packing _",
    "strategy to compute the rank regarding node s available cpu , ram and the number of running containers . with the spread strategy",
    ", the swarm manager gives a priority to the node who has the largest available memory or has the minimum number of running containers . on the other hand ,",
    "the bin packing strategy tries to pack as many containers to a node until reaching its maximum capacity ( e.g. , ram , cpu ) . in this sense",
    ", a swarm can optimise the number of nodes running the containers and leave room for future assignment which may require large space of resources .",
    "@xmath0targets to provide localised service infrastructure in challenged network environments .",
    "such scenarios refer to the emergency and post - disaster situations wherein traditional communication services are completely inoperable .",
    "an example of @xmath0 s deployment is illustrated in figure  [ img : cloudrone ] .",
    "a base camp command center with backhaul internet connectivity ( e.g. , satellite link ) is set up close to the affected area .",
    "a cluster of drones can fly to cover the target area ( and could also land ) , forming a mesh network and provide localised services to the users ( immigrants or post - disaster victims ) on the ground via wifi .",
    "a variety of ( crucial ) services ( lightweight docker containers ) can be either pre - loaded onto the pi or on demand from the ground .",
    "the manet of drones , facilitates the swarm manager to communicate and control the cluster remotely from the base camp through the long haul link .",
    "the swarm manager can update the necessary services from the internet and disseminate throughout the cluster .        in some operations , the cluster can be out of contact with the swarm manager ( i.e. , the target area is far away from the command center ) . to deal with any interruption of service",
    ", we can create a primary swarm manager operating as the main point of contact and multiple replicas to be the backup swarm managers . using this feature ,",
    "the replicas can seamlessly take over the functionalities from the primary swarm manager when it fails .",
    "if the cluster fails to contact the primary swarm manager , the most powerful replica automatically takes over the control .",
    "battery life time is one of the major challenges in our deployment , since the flight time is limited to 15 minutes . to mitigate this problem",
    ", we envision that the drone can either fly or land to provide service access . in case , the battery is low , our drone can decide to land on the ground to save the battery while the docker containers and wifi access point are still operating to provide service access .",
    "the preliminary benchmarking presented in this paper focusses on understanding the scalability issues of lightweight os virtualisation technology such as docker on a pi .",
    "we focus on two main questions 1 ) how many docker containers can a single pi support ?",
    "2 ) how many user requests can a single container running on a pi support ?",
    "0.24     0.24     0.24     0.24     0.33     0.33     0.33       the first evaluation is to explore the maximum number of containers that could be operated concurrently over a single pi . to scale up the containers ,",
    "the docker image could be prepared as small as possible to minimize memory footprint .",
    "consequently , the memory allocation for kernel to handle a web server process can be optimized . for this",
    ", we use a nano web server image developed in assembly code ( size is less than 90 kb ( included index.html and a small jpg file ) ) . to benchmark the capability of a pi ( pi 2 ) , we base our evaluation on memory consumption , cpu utilisation and the creation time ( time taken to create a container ) by using _ sysstat _",
    ", a collection of performance monitoring tools for linux . in our first attempt , we were able to spin up only 37 containers , even though the memory usage and cpu utilisation were only 40% and 18% respectively .",
    "we then hacked the docker daemon , to scale up the deployed containers to 2408 .",
    "the procedures that we used is summarised below :    * _ tweak docker command : _ we disabled some docker options that are unnecessary for running a web server .",
    "especially , running with a dedicated ip stack per container involve a huge resource usage , so we run each container with @xmath1",
    ". we also disabled log driver ( @xmath2 ) to let docker use less resources .",
    "* _ unlock docker limit : _ linux distributions use systemd to start the docker daemon .",
    "we customised some parameters to unlock the limitation of maximum number of running containers .",
    "the number of processes ( limitnproc ) and number of queued signals ( limitsigpending ) were set to infinity . *",
    "_ _ tweak docker configuration:__with the default configuration , docker daemon is run with many options which is not required for a simple web server such as ipv6 , proxies , ip forwarding , log - driver .",
    "we disabled all these options to reduce the memory usage of docker daemon .",
    "the results for our optimised docker are depicted in figure  [ result : benchmark ] where we were able to scale up the number deployed containers to 2408 .",
    "specifically , memory usage is a key factor that limits the capability of running the containers on a pi .",
    "as shown in figure  [ result : mem ] , the memory usage increases gradually when a container is added .",
    "the initial memory usage before creating the first container was about 98 kb ( 9.89% ) .",
    "we hit the limit of 2408 containers where there is no space for available memory .",
    "figure  [ result : cpu ] shows the average utilisation of the quad - core cpu of the pi . over the first thousand of deployed containers ,",
    "the average cpu usage is very low ( about 0.2% ) with a few spikes .",
    "however as expected , the cpu usage increases significantly in the high load state ( when the number of containers is larger than 2000 ) . as mentioned in section  [ benchmarking the drone ] , the quadcopter consumes about 30% of cpu resources .",
    "the available space can be around 70% which is sufficient to provide multiple services with docker containers .",
    "hence when the quadcopter is flying , we will not be able to have 2408 containers running in parallel .",
    "however , a @xmath0can still support a large number of concurrent containers .",
    "figure  [ result : time ] depicts the results of creation time where each point denotes the time it took for the nth container to start up .",
    "the creation time for each container varies from 0.62 s to 38.37 s depending on the current cpu load and memory usage .",
    "in addition , we also plot the cumulative creation time of the 2408 containers ( figure  [ result : cumulativetime ] ) .",
    "the pi spent approximately 1 hr and 50 minutes to spin out 2408 containers . on average",
    "each container requires about 2.79 s to start up the web server .    _ key takeaway message _ :",
    "a single pi ( pi 2 model b ) can support significant amount of concurrent lightweight services .      in order to investigate the feasibility of using lightweight containers as a platform for the @xmath0",
    ", we aim to evaluate the scalability of each of these containers running on a single pi while serving a large number of requests .",
    "we deploy a minimal static web server using httpd docker base image using a similar configuration as the experiments in the previous section .",
    "the benchmarking scenario represents the _ cloudrone s _ operation where users on the ground can access the services provided by the _ cloudrone _ through a wireless interface . using the _ ab _ - apache http server benchmarking tool",
    ", we conduct stress tests on the _ cloudrone _ while scaling the number of concurrent users from 10 to 250 . the total number of request was set as 10000 transactions per experiment .",
    "for instance , in case of 10 users , 1000 of requests were sent by each user .",
    "the measured rtt via ping tests with a clear line of sight at 50 feet was between 8ms-10ms .",
    "figure  [ result : cdf_delay ] illustrates the cdf of response time from the web container running on pi while varying the number of simultaneous users accessing the service . as shown in the figure , a single deployed docker container is capable of serving a large number of concurrent users .",
    "as expected , the average response time increases when the number of concurrent users is scaled up .",
    "figure  [ result : cpu_utilization ] and  [ result : cpu_load ] plot the cpu utilisation and cpu load of the pi using _ sysstat _ tools .",
    "the cpu utilisation increases almost 20% when the number of users increase from 10 to 250 .",
    "this increases the response time for the processes .",
    "even though the utilization has not reached the capacity of cpu , processes still run slower as the cpu load increases .",
    "figure  [ result : cpu_load ] shows the average cpu load of the pi ( sampled in one min intervals ) . as the arrival rate of user requests increases , the amount of computational work need to process also increases",
    "this has impact on the response of time(figure  [ result : cdf_delay ] ) .",
    "_ key takeaway message _",
    ": a docker container running on a single pi ( pi 2 model b ) can support significant amount of concurrent users .",
    "our preliminary benchmarking demonstrates that the pi is capable of functioning as a great micro cloud platform .",
    "our benchmarking was carried out using a lightweight web server serving a lightweight webpage .",
    "it is important that the scalability of the @xmath0should also be tested with heavier web servers serving applications such as openstreetmaps .",
    "each application will have different memory and cpu requirements and hence the number of containers that can be instantiated will vary depending on the type of applications which directly influences the size of the container ( e.g. , packages , data , library ) .    another scalability challenge is to support a larger number of users within an area . increasing the number of users causes an adverse influence on the response time which will cause service degradation .",
    "we envision , the different services will be provided by a swarm of drones and hence appropriate load balancing using techniques such as application layer anycast  @xcite could be used .",
    "_ cloudrones _ have two main challenges in terms of providing a reliable service .",
    "first , mobility poses a critical challenge . during mobility , ongoing sessions may break and sessions need to be reestablished .",
    "second , considering the distributed nature of the services across a mesh of drones , identifying the location of the service across a mobile adhoc network is challenging . to solve the latter ,",
    "techniques such as multicast dns ( mdns )  @xcite or application layer anycast could be used  @xcite .",
    "another potential way to mitigate the problem of mobility and service discovery is to explore new architectures that utilise information centric networking )  @xcite .",
    "icn architectures such as named data networking ( ndn )  @xcite or scandex  @xcite decouple the content from the location thus removing the need for the current end - to - end client server model such that the service and/or content can be served directly by any host that currently has the service / content .",
    "icn thus integrates the provisioning of content with the locationless notion of information delivery in icn allowing different flavours of caching , from on - path caching to edge caching through a farm of surrogate micro servers running on the _ cloudrones _ that can be quickly integrated into the overall ( icn ) routing fabric without the need for dns redirection or other solutions of the current internet .",
    "this inherently addresses the issues of mobility and reliability . as ongoing work",
    ", we are in the process of developing an icn architecture for _ cloudrones _ via the eu umobile project  .",
    "although _ cloudrones _ demonstrate excellent potential for deploying localised service infrastructures in areas where access to services are crucial but are beyond reach - there are still major challenges that need to be surmounted .",
    "drones such as quadcopters have reduced flight times due to battery life .",
    "we envision this situation will change in the near future with better innovations in battery design and production or innovations in alternate sources of power e.g. hydrogen powered drones have flight times upto two hours  .",
    "_ cloudrones _ also need not be in the air for their entire flight duration to provide access to its services .",
    "we envision that _ cloudrones _ can be flown to an area and then can provide it s localised services from the ground ( ideally powered by an energy source on the ground ) .",
    "there are tight regulations in flying drones such as quadcopters .",
    "these rules have been laid out by civil aviation authority ( in the case of uk ) .",
    "hence these rules should be adhered to and in some cases may be restrictive e.g. land or fly in a congested area .",
    "however , we believe , @xmath0deployments will fall under the commercial aerial work , and hence special permission from the aviation authority will be required to fly .",
    "in this paper , we present @xmath0- a preliminary idea of deploying a lightweight micro cloud infrastructure in the sky using indigenously built low cost drones , single board computers and lightweight operating system virtualization technologies .",
    "we describe an initial design of the @xmath0and provide a preliminary evaluation of the proposed system mainly focussed on the scalability issues of supporting multiple services and users . as part of future work",
    ", we plan to conduct large scale evaluation trials benchmarking the @xmath0performance while in the air ( in terms of throughput , latencies and energy ) across a wide set of scenarios .",
    "we are also in the process of integrating docker with ndn and performance benchmarks will be carried out .",
    "finally , the current @xmath0design does not fly autonomously and hence is strictly limited in terms of distance it can cover without manual intervention . as part of future work , we intend to build autonomous flying capabilities ."
  ],
  "abstract_text": [
    "<S> recent years have witnessed several initiatives on enabling internet access to the next three billion people . </S>",
    "<S> access to the internet necessarily translates to access to its services . </S>",
    "<S> this means that the goal of providing internet access requires access to its critical service infrastructure , which are currently hosted in the cloud . </S>",
    "<S> however , recent works have pointed out that the current cloud centric nature of the internet is a fundamental barrier for internet access in rural / remote areas as well as in developing regions . </S>",
    "<S> it is important to explore ( low cost ) solutions such as micro cloud infrastructures that can provide services at the edge of the network ( potentially on demand ) , right near the users .    in this paper , we present @xmath0- a preliminary idea of deploying a lightweight micro cloud infrastructure in the sky using indigenously built low cost drones , single board computers and lightweight operating system virtualization technologies . </S>",
    "<S> our paper lays out the preliminary ideas on such a system that can be instantaneously deployed on demand . </S>",
    "<S> we describe an initial design of the @xmath0and provide a preliminary evaluation of the proposed system mainly focussed on the scalability issues of supporting multiple services and users . </S>"
  ]
}
{
  "article_text": [
    "particle - in - cell ( pic ) simulation of plasmas is a powerful technique for studying plasma phenomena , in large part because it can include all of the classical `` first principles '' physics ",
    "i.e . , the lorentz force and maxwell s equations ( with the latter sometimes helpfully simplified , e.g. , to poisson s equation ) @xcite . to accomplish this , pic simulations track sample `` macroparticles , '' which follow trajectories of real particles and represent ( parts of ) particle distribution functions .",
    "pic simulation is of course still an approximation of the underlying physics ; however , in the limit of infinite grid resolution , infinitesimal timestep , and small ( hence numerous ) macroparticles , pic simulation includes all the physics of maxwell s equations and the lorentz force law .",
    "the very strength of pic is sometimes its biggest drawback , because simulations are often limited by what one _ can _ simulate rather than what one _ wants _ to simulate .",
    "for example , because electrostatic pic simulation _ can _ capture the phenomenon of plasma oscillation , simulations experience instability unless the timestep @xmath0 is small enough to resolve the plasma frequency @xcite . with a timestep determined by the plasma frequency , pic simulation is often too costly ( computationally ) to simulate phenomena that operate on much longer timescales than plasma oscillations .    a new pic - based simulation technique  speed - limited pic ( slpic)modifies the pic method to slow down fast phenomena , enabling larger timesteps while retaining the same underlying physics on slow timescales .",
    "slpic has the potential to speed up simulation when there exist fast phenomena that are numerically troublesome , but physically unimportant . for such simulations slpic",
    "improves upon pic by increasing the amount of approximation ; however , the strength of approximation can be continuously varied until slpic is identical to pic , making it possible  without leaving the slpic framework or sacrificing efficiency  to verify whether faster phenomena actually have negligible effect    there are two main classes of methods developed to suppress numerical problems related to irrelevant physics : reduced - physics methods that neglect ( or integrate over ) irrelevant physics , and methods that use a special time - advance to avoid growth of unresolved plasma modes .",
    "the first class can be very useful when a reduced physics model ( e.g. , magnetohydrodynamics or gyrokinetics ) is known and is known to be applicable ; however , extending such models to include more physics tends to be difficult or impossible .",
    "the second class ( e.g. , fully implicit time - advances ) can be difficult to implement and computationally expensive , often involving iterative nonlinear solves .",
    "slpic does not require a reduced physics model , and can be explicit ; moreover , it can be implemented as a minor modification to an existing pic code .",
    "slpic is not a universal replacement for other methods , but it does extend the feasible range of pic simulation to longer timescales .",
    "slpic has the potential to be the fastest method in a niche where kinetic simulation is required and distribution functions change relatively slowly compared to the plasma frequency .",
    "fluid - based simulations are important examples of the first class ; they use reduced physics models to avoid numerical problems with irrelevant phenomena .",
    "for example ,",
    "magnetohydrodynamics ( mhd ) simulations lack the ability to simulate plasma oscillations , so they avoid any timestep limitation related to the plasma frequency",
    ". another fluid approach  using boltzmann electrons  treats electrons as a fluid in thermal equilibrium so that the electron density is given by @xmath1 , where @xmath2 is the local electrostatic potential .",
    "the use of boltzmann electrons allows pic ( hence fully kinetic ) treatment of ions and ion dynamics while neglecting most electron dynamics ( see , e.g. , @xcite ) .",
    "slpic may be useful in circumstances where the boltzmann electron approach is almost sufficient , but more physics is required .",
    "slpic allows the electron distribution to relax to the ion distribution ( as boltzmann electrons relax to the potential determined by the ions ) , but slpic can evolve arbitrary electron distributions . for example , we expect slpic to speed simulation of phenomena such as collisionless sheaths ( in which the electron distribution is not maxwellian ) and electron landau damping of ion - acoustic waves .    some ( kinetic ) pic - based approaches , such as gyrokinetics ( cf .",
    "@xcite ) , modify the particle equations of motion to integrate over small length and time scales .",
    "slpic is somewhat similar in that it also averages over fast phenomena by modifying particle equations of motion , but differs from gyrokinetics because the slpic approximation does not affect the physics ( i.e. , does not use a reduced physics model ) at slow timescales .",
    "we note that slpic could also be applied to a reduced physics model such as gyrokinetics ; however , slpic s advantage may rely on the simplicity and power obtained from using the complete ( classical ) physics .    in principle , slpic is a method for modifying any pic algorithm ( e.g. , whether standard lorentz - force or gyrokinetic ) by slowing down fast particles . in slpic ,",
    "slow particles behave just as in normal pic , while fast particles are `` speed - limited '' and locally follow the same phase - space trajectories as real particles but in slow motion . in the limit of sufficiently slowly - varying fields ,",
    "slpic particles follow the same phase - space trajectories as real particles ( over finite times , not just locally ) , but at different speeds .",
    "it is practical for the speed - limit @xmath3 ( separating fast and slow particles ) to depend on the timestep , @xmath4 , and thus slpic introduces a continuously - variable approximation ( in addition to the pic approximation ) that depends on the relative scales of the desired timestep and the temporal variation of particle distribution functions . as the timestep approaches the ( stable ) pic timestep , slpic simulation becomes identical ( in function and computational cost ) to pic simulation .",
    "although slpic can be ( and is probably most effective when ) used with an explicit time - advance , it shares some similarities with fully implicit pic methods ( see , e.g. , @xcite ) that allow larger timesteps without reduced physics or instability .",
    "naturally and unavoidably , such implicit methods inaccurately simulate phenomena that are poorly resolved by the timestep ; unlike explicit methods , however , implicit methods may remain stable even when not resolving irrelevant high - frequency phenomena . as with implicit methods ,",
    "the approximation in slpic is continuously adjustable through the choice of timestep ; the choice of timestep in slpic as in implicit pic is a choice to simulate faster phenomena inaccurately  a choice that is justified when those phenomena are unimportant .",
    "slpic has several possible advantages over implicit pic .",
    "first , slpic can be explicit , hence faster than implicit pic ( for the same timestep ) .",
    "second , slpic is very similar to standard pic ( i.e. , much simpler than implicit pic ) , requiring little modification to algorithms except those governing individual macroparticle trajectories .",
    "third , slpic handles the problem of particles crossing too many grid cells within a timestep : crossing multiple cells poses a challenge for parallel computation , which is necessary for most large plasma simulations .",
    "slpic offers a method that ( unlike mhd or boltzmann electrons ) is essentially similar to pic and does not require any reduced physics model .",
    "an existing pic code can be modified to support slpic with relatively little trouble ; for example , field solvers remain completely unchanged .",
    "the main difference is that ( fast ) particles move in slow motion .",
    "the most prevalent case where slpic can speed simulation is perhaps when the electron distribution relaxes ( to a quasi - equilibrium ) on ion time scales .",
    "slpic involves explicit , local modifications of a standard pic code ; while extra computation is required , that extra computation is local ( involving only an individual particle and its equation of motion ) and predictable / consistent ( i.e. , not iterative , or requiring new solvers that might affect scaling with problem size or number of parallel processors ) .",
    "slpic is a very new and promising simulation technique .",
    "we introduce and justify the fundamental approach in the following section ; in subsequent sections we show calculation of the plasma frequency in slpic and demonstrate the effectiveness of slpic for collisionless sheath simulation .",
    "the goal of _ kinetic _ simulation is the self - consistent evolution of the particle distribution function @xmath5 , which in a collisionless plasma satisfies the vlasov equation , @xmath6 + \\nabla_v \\cdot [ a(x , v , t ) f(x , v , t ) ] = 0,\\end{aligned}\\ ] ] where @xmath7 is acceleration due to whatever forces act on a particle located at @xmath8 with velocity @xmath9 at time @xmath10 .",
    "( although we present this analysis with zero on the right - hand side above , a non - zero value , e.g. , due to collisions , would not alter the slpic technique . ) for a hamiltonian ( phase - space - preserving ) system , @xmath11 , leading to the familiar form , @xmath12    equation  ( [ eg : conservvlasov ] ) can be solved by the method of characteristics , since it describes an element of the phase - space distribution advecting through phase space with the local velocity and acceleration .",
    "thus , it has a solution as a sum over particles ( or trajectories ) , @xmath13 where @xmath14 and @xmath15 are particle trajectories ( and @xmath16 is a weight representing the number of real particles embodied in macroparticle @xmath17)i.e . , they satisfy @xmath18 [ one can verify by direct substitution that , with these equations of motion , eq .  ( [ eg : vlasovdeltafcn ] ) is a solution of eq .",
    "( [ eg : conservvlasov ] ) . ]",
    "this is the basis of pic simulation @xcite ; pic methods will not be reviewed here , except to say that they in essence broaden the delta - function @xmath19 so that particle charges and currents can be transferred to a grid for calculation of fields ( the scatter operation ) , while fields on a grid are interpolated to particles positions ( the gather operation ) to yield the forces on the particles .    while this approach can in principle simulate all the fundamental ( classical ) physics of plasmas , the separation of scales  especially between electron and ion motion ",
    "often renders practical simulation impossible with current resources .",
    "two important ( and related ) problems make simulation slow : ( 1 ) the timestep must generally be smaller than the grid - cell - crossing time of the fastest particle , and ( 2 ) the timestep must be smaller than the inverse plasma frequency . the first reason is related to accuracy ( as well as practicality for parallel computing ) : since fields can not vary on length scales smaller than a grid cell , a particle traversing less than one cell - length experiences only small changes in fields .",
    "the second condition is crucial to avoid catastrophic numerical instability : with a timestep greater than @xmath20 , where @xmath21 is the plasma frequency , the standard and simple leap - frog integration scheme is unstable , with numerical solutions that grow exponentially .",
    "if one also wishes to avoid the grid instability ( unphysical heating that increases the debye length until it is resolved by the grid ) , one must usually choose a grid cell that resolves the electron debye length , @xmath22 , in the case of a stationary , thermal plasma .",
    "in this case , the two criteria above are identical within a factor of order unity .    for cases where time scales of interest are long compared with the plasma period ,",
    "the above conditions on the timestep are prohibitive .",
    "e.g. , for steady state plasma sheaths , the relaxation time is of the order of ion time scales , which are longer by @xmath23 . for such simulations we would like to choose a timestep of the order of the ion plasma period , but we are prevented from doing so by numerical instability . in such cases , the electrons are effectively in equilibrium with the electrostatic field . critically , they are in a kinetic equilibrium , but a nontrivial one , since in a collisionless sheath problem , electrons that flow into the sheath with enough energy to overcome the sheath potential do not reflect back into the plasma or equilibrate , and so a boltzmann dependence @xmath24 is not accurate .    to address such situations",
    "we propose using `` speed - limited '' electrons , which reduce the scale - separation when the dynamics of interest take place over times that are long compared with the inverse plasma frequency or the cell - crossing time of the fastest particles . to do this we limit the _ speed _ with which simulated electrons travel through the simulation to some maximum @xmath3 , but preserve the correct _ direction _ of travel , ensuring that a speed - limited electron follows the same path as a real electron ( but at a slower speed ) .",
    "we will show that this approach allows larger timesteps , hence faster simulation , while accurately capturing the physics of longer time scales  including kinetic effects of electrons on those timescales .    to use this method ,",
    "we will simulate a distribution @xmath25 of speed - limited ( macro)particles , defined through the speed - limiting factor @xmath26 [ we will see later in eq .",
    "( [ eg : limptcldyn ] ) that the speed - limited velocity is @xmath27 times the real velocity , @xmath28 : @xmath29 whereas pic evolves @xmath5 , slpic uses pic methods to evolve @xmath25 , which can be trivially converted to @xmath5 at any time . inserting this into eq .",
    "( [ eg : conservvlasov ] ) yields @xmath30    + \\nabla_x \\cdot [ \\beta v g(x , v , t ) ] +    \\nabla_v \\cdot [ \\beta a(x , v , t ) g(x , v , t ) ] = 0,\\end{aligned}\\ ] ] which we rewrite in the form , @xmath31 +    \\nabla_v \\cdot",
    "[ \\beta a(x , v , t ) g(x , v , t ) ] =    \\partial_t [ ( 1 -\\beta ) g(x , v , t)],\\end{aligned}\\ ] ] the approximation that makes slpic useful is the neglect of the right - hand side above ; in the limit that the right - hand side vanishes , slpic is as accurate as pic .",
    "therefore , slpic achieves full - pic accuracy in the limit of static perturbations ( steady - state ) , where all the time derivatives vanish  and in particular the right side of eq .",
    "( [ eg : conservspeedlimitvlasov ] ) vanishes .",
    "also , when @xmath32 , the right - hand side vanishes and again slpic achieves exactly the same accuracy as standard pic .",
    "effective use of slpic involves choosing @xmath26 such that for @xmath33 , @xmath34 and so slow particles are simulated just as accurately as in full pic , while particles with @xmath35 are simulated under the approximation that the time - derivative on the right - hand side is negligible .",
    "the latter is a good approximation when the distribution function changes sufficiently slowly .",
    "in more detail , we consider ( not necessarily small ) perturbations or plasma modes with characteristic ( phase ) velocities @xmath36 .",
    "particles moving much faster than such perturbations equilibrate with them rapidly .",
    "however , particles with velocities of order @xmath36 are not in equilibrium with the perturbations .",
    "indeed , such particles can lead to landau damping , extracting energy from the perturbations .",
    "hence for such particles all temporal derivatives in the above equation must be kept . however , if we set @xmath27 to be nearly unity for velocities less than @xmath3 where @xmath37 , then the right side of eq .",
    "( [ eg : conservspeedlimitvlasov ] ) vanishes for low - velocity particles also .",
    "thus , it is a uniform approximation to set the right - hand side of eq .",
    "( [ eg : conservspeedlimitvlasov ] ) to zero : @xmath38 +    \\nabla_v \\cdot [ \\beta a(x , v , t ) g(x , v , t ) ] = 0,\\end{aligned}\\ ] ] since it is valid for high velocities by accurately giving their equilibrium , and it is valid for low velocities because @xmath39 .    with this approximation",
    ", we can evolve @xmath25 according to @xmath40 by the method of characteristics , just as eq .",
    "( [ eg : conservvlasov ] ) , except that to satisfy eq .",
    "( [ eq : conservspeedlimapprox ] ) the macroparticles are slow ( or speed - limited ) , following trajectories @xmath41 , @xmath42 satisfying the equation of motion ( hereafter we omit the particle index @xmath17 ) @xmath43    slpic evolves @xmath25 in time  and",
    "this ( because of the slpic approximation ) is computationally faster than evolving @xmath5 because the macroparticles move more slowly , allowing larger timesteps . with a known @xmath26",
    ", one can convert @xmath44 to @xmath45 as desired .    in some sense",
    ", @xmath27 acts like a macroparticle weight ; i.e. , a macroparticle that is used to evolve @xmath44 is subsequently `` weighted '' by @xmath26 to compute @xmath45 . with this view , @xmath45 is the sum of macroparticles following trajectories given by eq .",
    "( [ eg : limptcldyn ] ) with weights changing according to @xmath46 evaluated along each particle s trajectory .",
    "there are many possibilities for the speed - limiting function @xmath26 . for slpic",
    ", @xmath27 needs to limit the speed of macroparticles to some value @xmath3 . for large velocities ,",
    "we must have @xmath47 ( to limit @xmath48 to @xmath3 ) , and for small velocities , @xmath49 [ so the right - hand side of eq .",
    "( [ eg : conservspeedlimitvlasov ] ) vanishes ] .",
    "examples are @xmath50 where @xmath51 is the heaviside step function , but there are many other options .",
    "it is possible even for @xmath27 to have spatial dependence , e.g. , for a spatially varying grid , or time - dependence , e.g , to adjust the severity of approximation mid - simulation .",
    "however , we will denote the speed limit by @xmath3 , keeping in mind that it may vary with position ( and possibly time ) .",
    "an important aspect of this method is that , since the right - hand sides of eqs .",
    "( [ eg : ptcldyn ] ) and ( [ eg : limptcldyn ] ) differ by a scalar factor @xmath27 , speed - limited particles [ representing @xmath25 ] follow the same phase - space trajectories as real particles [ representing @xmath5 ] , except at a slower speed . therefore , even though fast electrons ( with @xmath54 ) move unphysically slowly ( with @xmath55 ) under slpic , they have the correct response as long as the fields evolve slowly .",
    "as a speed - limited particle ( with @xmath54 ) accelerates , its actual velocity @xmath9 increases ( so it gains energy ) , but @xmath56 remains near @xmath3 ; to compensate , its weight must decrease .",
    "e.g. , in a steady - state streaming fluid , an increase in velocity results in a decrease in density ; in slpic , the macroparticle speed does nt change much , so the macroparticle density does nt change much , and the macroparticle weight decreases to reflect the real decrease in density .    with particles limited to speeds below @xmath3 , one may choose the timestep @xmath57 , where @xmath58 is the cell size , so that particles will not cross more than one cell per timestep .",
    "this allows an increase in timestep by a factor @xmath59 , where @xmath60 is the maximum particle speed and @xmath61 is the thermal velocity .",
    "like methods involving boltzmann electrons , this method is useful when the electron distribution is quasi steady - state on the timescales of ion motion .",
    "however , unlike boltzmann electron methods , this method simulates an arbitrary electron distribution and has an `` adjustable '' approximation , which allows the simulation to change continuously into a full pic simulation by increasing @xmath3 just above the maximum particle speed .",
    "despite some mathematical resemblance , slpic is not a @xmath62-pic method , nor is it equivalent to lowering the speed of light to @xmath3 .",
    "whereas @xmath62 methods evolve a perturbed distribution @xmath63 on top of a given ( usually equilibrium ) distribution @xmath64 ( see , e.g. , @xcite ) , slpic evolves the entire distribution function @xmath5 and does not require that the solution be a small perturbation of some known equilibrium . and while lowering the speed of light to @xmath3 would certainly impose a speed limit , particles would not follow the same trajectories as if the speed of light had not been lowered .",
    "as we noted above , using speed - limited electrons allows us to relax the cell - crossing timestep restriction , as electrons move more slowly through the simulation .",
    "it turns out that speed - limiting of electrons also lowers the electron plasma frequency , which relaxes the other condition that required a small timestep .",
    "here we show that the plasma frequency for speed - limited electrons is reduced by @xmath65 ( again , allowing the timestep to be increased by a factor of @xmath66 , where @xmath61 is the electron thermal velocity ) .    to compute the plasma frequency in the slpic system ,",
    "we consider 1d wave - like perturbations @xmath67 $ ] from a zero - field , uniform , steady - state distribution @xmath68 with @xmath69 independent of space and time . denoting unperturbed quantities with subscript 0 , and first - order with subscript 1 , the first - order solution to eq .",
    "( [ eq : conservspeedlimapprox ] ) for the speed - limited distribution function is @xmath70,\\end{aligned}\\ ] ] where @xmath71 is the acceleration due to the first - order electric field , and over - tildes indicate amplitudes of oscillation .",
    "i.e. , @xmath72 from this we find the solution for the density perturbation : @xmath73 \\nonumber \\\\               & = & i \\tilde{a_1 } \\int dv \\ , \\beta g_0                   \\partial_v \\frac{\\beta}{\\omega - k \\beta v }                \\;=\\ ; i \\tilde{a_1 } \\int dv \\ , f_0                   \\partial_v \\frac{\\beta}{\\omega- k \\beta v } \\nonumber \\\\               & = & i \\tilde{a_1 } n_0 \\left\\langle \\partial_v                   \\frac{\\beta}{\\omega- k \\beta v } \\right\\rangle , \\end{aligned}\\ ] ] where the angled brackets denote the average over the velocity distribution function @xmath74 .",
    "inserting this into gauss s law [ @xmath75 or @xmath76 we find @xmath77 where @xmath78 .",
    "the plasma frequency is found by looking at the long wavelength limit @xmath79 . when @xmath34 ( hence @xmath80 ) , we recover the standard result : @xmath81 .    when @xmath82 , then for isotropic @xmath74 and @xmath27 [ i.e. , @xmath83 and @xmath84 , @xmath85 , and expansion of the denominator to first order yields @xmath86 when the limiting velocity @xmath3 is much less than the electron thermal velocity @xmath61 , the speed - limiting function is @xmath87 and the speed - limited plasma frequency @xmath88 is @xmath89 i.e. , the effective plasma frequency is reduced by nearly the same fraction by which a typical particle s speed is limited , @xmath90 .    by speed - limiting simulated particles to @xmath3 ,",
    "i.e. , reducing the speed of typical electrons by @xmath90 , we reduce the simulated plasma frequency by a similar factor .",
    "naturally , plasma oscillations are not accurately simulated , but that is an advantage because this method is appropriate only for cases where the important dynamics are much slower than plasma oscillations .      to prove its basic usefulness and accuracy , we implemented speed - limited pic simulation in 1d and applied it to collisionless sheath simulation . for sheath simulation , the debye length must be resolved and ( in normal pic simulation ) the timestep must be shorter than the time for the fastest electron to cross a cell , @xmath91 .",
    "on the other hand , the sheath will approach a steady state on the time scale with which slow ions cross the entire simulation . for",
    "a simulation that is @xmath92 with @xmath93 , the ( hydrogen ) ion crossing time can be on the order of @xmath94 timesteps ( and 6 times worse for , say , argon ions ) .    on the other hand , with speed - limited pic simulation , we can greatly increase the timestep , allowing much faster simulation . for a very simple test case of a sheath simulation",
    ", we chose @xmath95ev and @xmath96ev , and an extremely low @xmath97 ( so even many ions are speed - limited ) . while speed - limiting typical ions is probably not desirable because it is not likely to reduce the time to solution , it should not harm the steady state in principle , and so we chose this @xmath3 to demonstrate this principle .",
    "with speed - limiting , we ran the simulation with a timestep 520 times normal ; @xmath98 .",
    "our python toy code running the speed - limited simulation reached a steady state after approximately 90 steps ( or 10@xmath99s physical time ) , while the normal pic simulation ( vorpal , @xcite ) reached a steady state after about @xmath94 steps ( or 2@xmath99s physical time ) . because our extremely low @xmath3 was less than the ion thermal velocity ,",
    "it s not surprising that the speed - limited simulation evolved more slowly in physical time .",
    "s intervals , just after reaching a steady state : ( left ) normal pic simulation , which reached a steady - state after @xmath94 steps ; and ( right ) slpic simulation , which reached a steady - state after 90 steps .",
    "the slpic simulation is noisier , for reasons yet to be understood ( the time - ordering of the curves is : blue , green , red , cyan , magenta ) . [",
    "fig : sheathphi ] , title=\"fig:\",width=264]s intervals , just after reaching a steady state : ( left ) normal pic simulation , which reached a steady - state after @xmath94 steps ; and ( right ) slpic simulation , which reached a steady - state after 90 steps .",
    "the slpic simulation is noisier , for reasons yet to be understood ( the time - ordering of the curves is : blue , green , red , cyan , magenta ) . [",
    "fig : sheathphi ] , title=\"fig:\",width=264 ]    the resulting sheath potentials are shown in fig .",
    "[ fig : sheathphi ] .",
    "the similarity in sheath potentials  with the 500@xmath100 increase in time - step  is very promising .",
    "speed - limited particle - in - cell ( slpic ) simulation is a new technique that allows kinetic pic simulation with a larger timestep , by limiting the maximum speed of particles ( which otherwise follow the proper trajectories ) .",
    "the choice of speed limit controls the strength of the approximation introduced by slpic : as the speed - limit increases beyond the speed of the fastest particle , slpic becomes identical to pic . lowering the speed limit",
    "also lowers the plasma frequency , which allows the timestep to be increased without courting the instability that results in standard pic from the failure to resolve the plasma frequency ; it also prevents particles from traveling too far during one ( increased ) timestep .",
    "slpic overcomes a common limitation of explicit pic simulation : even when the phenomena of interest ( hence fields and distribution functions ) do not involve plasma oscillations and change slowly compared with the plasma frequency , the pic timestep must be small enough to resolve the plasma frequency to avoid instability .",
    "slpic allows the timestep to be determined by the phenomena of interest , rather than by the irrelevant and much faster plasma oscillations .",
    "slpic promises to be useful in cases where particle distribution functions change slowly compared with the timestep required by pic for stability ( and also for preventing particles from crossing too many cells in one timestep ) .",
    "for example , slpic may be especially applicable to cases where the electron distribution relaxes on ion time scales .    in a typical slpic simulation with a cell size approximately equal to a debye length",
    ", one might imagine setting the speed limit some factor below typical electron speeds , but above physically - important velocities such as the phase velocity of a plasma mode being simulated .",
    "the timestep could then be increased by the same factor , speeding up computation by roughly that factor , reduced slightly because the slpic particle - advance requires more operations than standard pic .",
    "the extra operations are local ( to a single particle ) and explicit , so they will take advantage of memory cache and may be especially amenable to hardware acceleration ; and they will not affect overall scaling with problem size or computational resources .",
    "the speed limit can in principle vary in both space and time ; this offers intriguing possibilities of increasing the speed - limit ( and decreasing the timestep ) mid - simulation to increase and/or verify the accuracy of approximation .",
    "modification of a pic code to implement slpic is expected to be localized to the integration of individual particle trajectories , and consideration of particle weight ( e.g. , in charge deposition ) .",
    "other aspects of pic , such as collisions , field solvers , boundary conditions , etc . , should carry over to slpic with little or no change .",
    "slpic therefore promises a particularly flexible and powerful approach to increase the timestep of pic simulations .",
    "the basic slpic method has been tested in a 1d simulation of a steady - state plasma sheath , successfully yielding an accurate potential profile despite a timestep 500 times larger than would be used in standard pic simulation ."
  ],
  "abstract_text": [
    "<S> particle - in - cell ( pic ) simulation is often impractical for the same reason that it is powerful : it includes too much physics . sometimes the mere ability to simulate physics on small length or time scales requires those scales to be resolved ( by the cell size and timestep ) to avoid instability , even when the effects at those scales contribute negligibly to the phenomenon motivating the simulation . </S>",
    "<S> for example , a timestep larger than the inverse plasma frequency will often result in unphysical growth of plasma oscillations , even in simulations where plasma oscillations should not arise at all . </S>",
    "<S> larger timesteps are possible in simulations based on reduced physics models , such as mhd or gyrokinetics , or in simulations with implicit time - advances . a new method , speed - limited pic ( slpic ) simulation , allows larger timesteps without reduced physics and with an explicit time - advance . </S>",
    "<S> the slpic method slows down fast particles while still accurately representing the particle distribution . </S>",
    "<S> slpic is valid when fields and distribution functions change slowly compared with the desired timestep ; slpic is useful when that timestep is much larger than that allowed by standard pic ( and when alternative approximations do not include enough physics ) . </S>",
    "<S> speed - limited pic can be implemented with relatively localized modifications of a standard pic code .    </S>",
    "<S> simulation , fdtd , pic , finite difference time domain , particle - in - cell , speed - limited particle - in - cell </S>"
  ]
}
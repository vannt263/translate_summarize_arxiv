{
  "article_text": [
    "csma / eca instruct nodes to get out of the contention when their mac queue empties .",
    "these nodes @xmath0 upon receiving a new packet in the mac queue @xmath0 will rejoin the contention picking a random backoff counter @xmath1 $ ] .",
    "this behavior brings again a transitory state , where nodes that just rejoined the contention will attempt to make a successful transmission and get back into the collision - free state .",
    "our first attempts to take a look at what happens under this condition were unsuccessful mainly for the lack of code considering this scenario , i.e. : packet erasure from the mac queue upon successful transmissions or retransmission attempts , delay measures and the determination of when was it really an unsaturated system .",
    "nevertheless , those times are behind us . in the following sections we will take a look at some of the results , namely :    * throughput , * delay , * number of packets in the mac queue at the end of each simulation , * number of times a mac queue empties , * average backoff stage at the end of each simulation , and * average collisions .",
    "we can see form figure  [ unsat : throughput ] that as each tested protocol enters in saturation , it deviates from the straight line ( which is the offered traffic load ) .",
    "the delay metric that we are using in this report measures the time elapsed between the moment a packet enters the mac queue , up until an acknowledgement for this ( these ) packet(s ) is received .",
    "csma / eca offers lower delay than csma / ca , nevertheless we can see an otherwise strange behavior at around 60 nodes .",
    "what happens ?",
    "if we take a closer look at what happens with the delay curves ( using a logarithmic scale ) , the `` _ _ bumb _ _ '' appears again at 60 nodes .",
    "this bumb is related to the saturation of csma / eca .",
    "we can see from figure  [ unsat : delaylog ] , that this behavior is similar to csma / ca when it is about to enter in saturation .",
    "if we use the `` csma / ca unsaturated with maximum aggregation '' curve as an example :    * from around 20 to around 35 contenders , this curve seems to be concave ; as both csma / eca curves are from around 20 to 60 contenders . *",
    "the concavity ends at around 35 contenders ( which coincides with the saturation point , see figure  [ unsat : throughput ] ) , just to change to another concavity from the saturation point forward .",
    "* for the csma / eca curves this behavior seems to be the same , but this time at around csma / eca s saturation point ( around 60 nodes ) .",
    "this increase in the delay at saturation point will be appreciated as a rapid increase in the number of packets in the mac queue , see figure  [ unsat : qsize ] .",
    "csma / eca eliminates collisions while in saturation and for a limited number of contenders in 802.11 networks .      in figure  [ unsat : collisions ]",
    "an increase on the average number of collisions is appreciated in the csma / eca curves .",
    "this is the result of many nodes emptying their mac queue and rejoining the contention .",
    "figure  [ unsat : qempties ] provides evidence of this event , where from 20 to 60 nodes csma / eca s nodes empty their mac queue sometime in the simulation and collide ."
  ],
  "abstract_text": [
    "<S> during the past month we have been trying to understand both the behavior of csma / eca and how our simulator works . in this report </S>",
    "<S> i try to asses some of those doubts and provide a groundwork for discussion of past and new ideas for further develop the mac protocol . </S>"
  ]
}
{
  "article_text": [
    "the problem of reconstructing binary matrices from their row and column sums is a classical inverse task in combinatorics ; see @xcite .",
    "even though the term was introduced much later it can be seen as a root of _ discrete tomography _ ; see @xcite , and the collected editions @xcite , @xcite .",
    "of particular relevance for the present paper are two well - known observations : ( 1 ) the question of consistency of the data i.e. , the question whether there exists a matrix whose row and column sums coincide with the given data , can be solved in polynomial time .",
    "( 2 ) typically , its row and column sums do not determine the underlying matrix uniquely .",
    "see @xcite for characterizations of the ` rare ' cases of uniqueness .    in the present paper",
    "we address the second issue by adding additional window constraints , specifying ( or giving bounds on ) how many points there are in certain minors of the matrix .",
    "these constraints come up naturally in _ dynamic discrete tomography _ @xcite .",
    "an application of particular relevance in physics is that of particle tracking ; see @xcite , @xcite . here",
    ", the positions of particles over time are to be reconstructed from two ( sometimes more ) high speed camera images .",
    "window constraints are a natural way of modeling additional physical information for instance on the speed of the particles ; see @xcite and the background literature given there for further information .",
    "here we are taking a complexity theoretical view commemorating observation ( 1 ) .",
    "in fact , when adding various kinds of window constraints , we are interested in the boundary between polynomial - time solvability and @xmath1-hardness . intuitively speaking ,",
    "we ask which kinds of additional constraints can be added without imposing a significant extra computational effort . or , phrased differently , what is the computational price to pay for reducing the number of solutions by utilizing additional window information .",
    "we will focus on the effect of three different parameters : @xmath2 corresponds to the _ size _ of the window , @xmath3 is the _ number of @xmath4 s _ in the nonzero minors , and @xmath5 specifies the allowed positions of @xmath4 s in the windows , referred to as the _ pattern _ of the window .",
    "the choice for these parameters will specify the given problem rec@xmath6 which is formally introduced in section  [ sec - results ] . hence @xmath7 @xmath8 and @xmath5",
    "are given beforehand ( i.e. , are not part of the input ) .",
    "as it will turn out , the problem exhibits various unexpected complexity jumps .    omitting technical details ( which are all given in section [ sec - results ] )",
    "some of these jumps can be summarized as follows ; see table [ table : sumtable1 ] .",
    "for @xmath9 the problems are in @xmath10 regardless on how the other parameters are set ; see theorem  [ thm : tract]([thm : tract : i ] ) .",
    "for @xmath11 it depends on @xmath3 and @xmath5 whether the problems are in @xmath10 or @xmath1-hard ; see theorems  [ thm : tract]([thm : tract : ii]),([thm : tract : iii ] ) and  [ thm : np ] . for @xmath11 ,",
    "some values of @xmath3 render the problems tractable while others make them @xmath1-hard ; see theorems  [ thm : tract]([thm : tract : ii ] ) and  [ thm : np]([thm : np : ii ] ) even if the patterns are not restricted at all . adding a pattern constraint may turn an otherwise @xmath1-hard problem into a polynomial time solvable problem ; see theorems  [ thm : np]([thm : np : ii ] ) and  [ thm : tract]([thm : tract : iii ] ) .",
    "the reverse complexity jump , however , can also be observed ; see theorems  [ thm : tract]([thm : tract : ii ] ) and  [ thm : np]([thm : np : i ] ) .",
    "the present paper is organized as follows : section [ sec - results ] will introduce our notation and state the main results . the proofs of our tractability results are given in section [ sec - tractability ] while the @xmath1-hardness results are proved in section [ sec - intractability ] .",
    "section  [ sect : finalremarks ] contains some final remarks .",
    "in particular , it provides a ( potentially also quite interesting ) extension of our main problem and collects related implications of our main results .",
    "we begin with some standard notation .",
    "let @xmath12 @xmath13 and @xmath14 denote the set of integers , natural numbers , and non - negative integers , respectively",
    ". for @xmath15 set @xmath16 , @xmath17 @xmath18:=\\{1,\\dots , k\\}$ ] , and @xmath18_0:=[k]\\cup\\{0\\}.$ ] the support of a vector @xmath19 is defined as @xmath20 . with @xmath21",
    "we denote the all - ones vector of the corresponding dimension .",
    "the cardinality of a finite set @xmath22 is denoted by  @xmath23 we will use the notational convention that specific settings of variables and parameters are signified by a superscript @xmath24    in this paper we often refer to points ( or variables ) @xmath25 where @xmath26 are points of the integer grid  @xmath27 .",
    "then , @xmath28 and @xmath29 denote the @xmath30- and @xmath31-coordinates of @xmath26 , respectively . in the grid @xmath32\\times[n],$ ] the set @xmath33 $ ] and @xmath32\\times\\{j\\}$ ] is called _",
    "column  @xmath34 _ and _ row  @xmath35 _ respectively . for @xmath36",
    "we refer to @xmath37 $ ] and @xmath32\\times\\{(j-1)k+1,\\dots , jk\\}$ ] as _ vertical strip  @xmath34 ( of width  @xmath2 ) _ and _ horizontal strip  @xmath38 ( of width  @xmath2 ) _ , respectively .",
    "of course , the standard matrix notation can be obtained from our notation by the coordinate transformation @xmath39    generally , any subset of the @xmath32\\times[n]$ ] grid is called a _",
    "window_. windows of the form @xmath40\\times[c , d])\\cap\\mathbb{z}^2,$ ] with @xmath41 and @xmath42 @xmath43 are called _ boxes . _ defining for any @xmath36 and @xmath44 the set of _ ( lower - left ) corner points _",
    "@xmath45\\times [ n])\\cap(k\\mathbb{n}_0 + 1)^2,$ ] we call any box @xmath46 ^ 2 $ ] with @xmath47 a _ block _ ; see figure  [ fig : ill ] for an illustration .",
    "( here we depict the structure both as point set and as pixels . in the following",
    "we restrict the figures to pixel images , which we find more intuitive . )",
    "the blocks form a partition of @xmath32\\times[n],$ ] i.e. , @xmath48\\times[n].$ ] in the main part of this paper , we consider such non - overlapping blocks , which play also a role in super - resolution imaging @xcite . in section  [",
    "sect : finalremarks ] we consider also other windows , which may be positioned at other places than those defined by @xmath49    next we introduce three patterns that we will study in detail since they exhibit already the general complexity jump behavior we are particular interested in .",
    "the first pattern @xmath50 is unconstrained , i.e. , does not pose any additional restrictions on the positions of @xmath4 s . the second pattern @xmath51 forces all elements in the @xmath52 block to be @xmath53 except possibly for the two entries in the lower - left and upper - right corner .",
    "the third pattern @xmath54 excludes all patterns that admit more than one  @xmath4 in each row of the @xmath52 block ( see also figure  [ fig : c1 ] ) . here",
    "are the formal definitions",
    ".    for @xmath55 let @xmath56_0 ^ 2}$ ] denote the power set of @xmath57_0 ^ 2.$ ] then we set @xmath58_0 ^ 2},\\\\ p(k,1)&:=\\{\\{(0,0)\\},\\{(k-1,k-1)\\}\\},\\\\ p(k,2)&:=\\{m\\in2^{[k-1]_0",
    "^ 2 } \\::\\ : |m\\cap\\left([k-1]_0\\times\\{j\\}\\right)|\\leq 1 \\textnormal { for all } j\\in [ k]_0.\\}\\end{aligned}\\ ] ]    further , for @xmath59 and @xmath60,j\\in[n]}$ ] we set @xmath61    for @xmath62 and @xmath63 we define now the following problem rec@xmath64    rec@xmath65 +    @xmath66 & \\textnormal{task:}\\quad & & \\omit \\rlap{find   $ \\xi_{p , q}\\in\\{0,1\\},$ \\:$(p , q)\\in[m]\\times[n],$ with } \\\\",
    "\\displaystyle & & & \\sum_{\\mathclap{p\\in[m ] } } \\xi_{p , q}&&=r_q , & &    q\\in[n ] , & & \\textnormal{(row sums ) } \\\\",
    "\\displaystyle & & & \\sum_{q\\in[n ] } \\xi_{p , q}&&=c_p , & &   p \\in [ m ] , & & \\textnormal{(column sums)}\\\\    \\displaystyle & & & \\sum_{\\mathclap{(p , q)\\in b_k(i , j ) } } \\xi_{p , q } & & \\leq v(i , j ) , & &   ( i , j)\\in c(m , n , k ) , \\quad & & \\textnormal{(block constraints)}\\\\ \\displaystyle & & & \\textnormal{pat}_k(x , i , j)&&\\in p(k , t),\\qquad & &   ( i , j)\\in c(m , n , k),\\qquad & & \\textnormal{(pattern constraints),}\\\\[1.2ex ] & & & \\omit \\rlap{or decide that no such solution exists.}\\\\\\end{aligned}\\ ] ]    in other words , we ask for @xmath67-solutions that satisfy given row and column sums , _ block constraints _ of the form @xmath68 with given @xmath69 and _ pattern constraints _ that restrict the potential locations of the 1 s in each block .",
    "we remark that the @xmath70 @xmath71 can be viewed as some part of prior knowledge . in particle tracking",
    "@xcite , for instance , the @xmath72 may reflect prior knowledge about physically meaningful particle trajectories ; see also @xcite .",
    "our main results show that the computational complexity of @xmath73 may change drastically when  @xmath7  @xmath8 or  @xmath5 is varied .",
    "[ thm : tract ]    a.   rec@xmath74 for any @xmath75 and @xmath76 [ thm : tract : i ] b.   rec@xmath77 for any @xmath78 [ thm : tract : ii ] c.   rec@xmath79 for any @xmath80 and @xmath81 [ thm : tract : iii ]    [ thm : np ]    a.   rec@xmath82-hard for any",
    "@xmath78 [ thm : np",
    ": i ] b.   rec@xmath83-hard for any @xmath78 [ thm : np : ii ]    the most notable changes are summarized in table  [ table : sumtable1 ] .",
    "some of these changes may at first glance seem somewhat counterintuitive . for instance , restricting the solution space via pattern constraints turns the @xmath0-hard problem rec@xmath84 @xmath85 into the polynomial time solvable problem rec@xmath86 figure  [ fig : c1 ] depicts the possible types of blocks in rec@xmath87 conversely , additional pattern constraints convert the tractable problem rec@xmath88 into the @xmath0-hard problem rec@xmath89 @xmath90    ccc & @xmath91 & @xmath0-hard + varying @xmath2 & rec@xmath92 & rec@xmath84 + & rec@xmath93 & rec@xmath89 + varying @xmath3 & rec@xmath94 & rec@xmath84 + varying @xmath5 & rec@xmath95 & rec@xmath84 + & rec@xmath88 & rec@xmath89 +   +    -entries ( black pixels ) in each block of any solution of a @xmath96 instance.,scaledwidth=50.0% ]",
    "this section contains the proofs of our tractability results stated in theorem  [ thm : tract ] .",
    "clearly , a polynomial - time algorithm for rec@xmath97 can be given along the classical lines for deciding whether given row and column sums of a binary matrix are consistent . in the following we give one of the various arguments .",
    "the problem obviously reduces to that of reconstructing a @xmath67-matrix from given row and column sums with some of the matrix entries fixed to @xmath98 it is well known that the coefficient matrix is totally unimodular , see , e.g. , @xcite , ( * ? ? ?",
    "the problem can thus be solved efficiently , e.g. , by linear programming .",
    "next we turn to the proof of theorem  [ thm : tract]([thm : tract : ii ] ) . for @xmath99",
    "let @xmath100)\\cap i|\\qquad \\textnormal{and}\\qquad \\rho_j(i):=|([i]\\times\\{j\\})\\cap i|\\ ] ] denote the number of blocks  @xmath101 with @xmath102 @xmath103 and @xmath104 that lie in the same vertical and horizontal strip , respectively , as the block @xmath105 moreover , for @xmath106 we set @xmath107\\times[n],\\\\ \\pi_x(i)&:=\\{i\\in[m]:\\exists j\\in[n]:(i , j)\\in i\\},\\\\ \\pi_y(i)&:=\\{j \\in [ n]:\\exists i \\in [ n]:(i , j)\\in i\\}.\\end{aligned}\\ ] ] note that @xmath108 and @xmath109 denotes the projection of  @xmath110 onto the first and second coordinate , respectively .",
    "we use a ( slightly generalized version of a ) result of @xcite on the following problem .",
    "dr@xmath111 +    @xmath112_0 , & & \\textnormal{(row sum measurem . ) }   \\\\ & & & \\omit \\rlap{$\\displaystyle c_{i+l}\\in \\mathbb{n}_0,$ } & & & & i\\in\\pi_x(i ) , \\:\\ : l\\in [ k-1]_0 , & & \\textnormal{(column sum measurem.)}\\\\[1.2ex ] & \\textnormal{task:}\\quad & & \\omit \\rlap{find   $ \\xi_{p , q}\\in\\{0,1\\ } , \\:(p , q)\\in g(i)$ with } \\\\",
    "\\displaystyle & & & \\sum_{\\mathclap{p:(p , j)\\in g(i)}}\\xi_{p , j+l}&&=r_{j+l } , & &   j\\in\\pi_y(i ) , \\:\\ : l\\in [ k-1]_0,&&\\textnormal{(row sums ) } \\\\",
    "\\displaystyle & & & \\sum_{\\mathclap{q:(i , q)\\in g(i)}}\\xi_{i+l , q}&&=c_{i+l } , & &   i\\in\\pi_x(i ) , \\:\\ : l\\in [ k-1]_0,&&\\textnormal{(column sums)}\\\\   \\displaystyle & & & \\sum_{\\mathclap{(p , q)\\in b_k(i , j)}}\\xi_{p , q}&&=1,&\\:\\ : & ( i , j)\\in i , & & \\textnormal{(block constraints),}\\\\ & & & \\omit \\rlap{or decide that no such solution exists.}\\end{aligned}\\ ] ]    [ prop : mono ]    a.   [ mono2 ] an instance @xmath113 of dr@xmath111 is feasible if , and only if , for every @xmath114 we have @xmath115 b.   [ mono1 ] dr@xmath116    as a service to the reader we remark that a solution @xmath117 @xmath118 for a given instance of dr@xmath111 is obtained by setting for every @xmath114 and @xmath119 @xmath120 an illustration is given in figure  [ fig : example1 ] ( taken from @xcite ) .     with @xmath121 in gray color .",
    "( right ) solution defined by  .,scaledwidth=45.0% ]    now we provide a polynomial - time algorithm for rec@xmath122    let @xmath123 denote an instance of rec@xmath122 we proceed in two steps .    first , we solve the following reconstruction - from - row - and - column - sums instance of finding @xmath124 @xmath71 satisfying the constraints @xmath125\\cap(k\\mathbb{n}_0 + 1),\\\\   \\sum_{j:(i , j)\\in i } \\eta_{i , j}&=\\sum_{l=0}^{k-1}c_{i+l } ,   & & i\\in [ m]\\cap(k\\mathbb{n}_0 + 1),\\\\   \\eta_{i , j}&=0 , & & ( i , j)\\in \\{(a , b)\\in c(m , n , k):v(a , b)=0\\}. \\end{aligned}\\ ] ] if no solution exists , we report infeasibility of @xmath126 the idea behind solving   first is that in this way we locate boxes that we want to contain a  1 .    in a second step , if is feasible , we invoke dr@xmath111 from proposition  [ prop : mono ] for the instance @xmath127 where @xmath128 and @xmath129 if there is no solution we report infeasibility of @xmath130 otherwise , we return the solution of dr@xmath131 it remains to be shown that this solves  @xmath113 correctly .    to this end , suppose that @xmath113 has a solution @xmath132 @xmath133\\times[n].$ ] then ,   is also feasible ( a solution is given by @xmath134 @xmath47 ) and @xmath135 satisfies the corresponding instance of dr@xmath131 conversely , let @xmath136 @xmath71 denote a solution to   and let @xmath110 be defined as in  . for every @xmath114 we have clearly @xmath115 by proposition  [ prop : mono ]",
    "there is thus a solution to dr@xmath131 this solution satisfies all row and column sum constraints of  @xmath113 by definition .",
    "further since @xmath137 by definition of  , there are 1 s in the solution only in those blocks @xmath138 @xmath71 for which @xmath139 holds .",
    "the block constraints are thus also satisfied , which proves the claim .",
    "the integer linear program   can be solved in polynomial time as the coefficient matrix is well known to be totally unimodular ; see , e.g. , @xcite , ( * ? ? ?",
    "the set @xmath110 in   is determined in polynomial time , and dr@xmath140 by proposition  [ prop : mono]([mono1 ] ) .",
    "hence , rec@xmath141    next we turn to the proof of theorem  [ thm : tract]([thm : tract : iii ] ) .",
    "it relies on the following result .",
    "[ prop : totallyunimodular ] let @xmath142 be the node - edge incidence matrix of a ( simple ) bipartite graph , and let @xmath143 denote a binary @xmath144 matrix with the following properties .",
    "a.   for every @xmath145 $ ] there exists an index @xmath146 $ ] with @xmath147 ; [ lem1:prop2 ] b.   the supports of any two distinct vectors @xmath148 and @xmath149 of @xmath150 with @xmath151 for some @xmath152 $ ] do not intersect .",
    "[ lem1:prop3 ]    then , @xmath153 is totally unimodular .",
    "it suffices to prove the assertion under the additional assumption that latexmath:[\\[\\label{eq : h }    all vectors @xmath149 whose support is a singleton can be added later since appending any subset of rows of the @xmath155-identity matrix to a totally unimodular matrix yields again a totally unimodular matrix .",
    "as the matrix @xmath156 is the node - edge incidence matrix of a bipartite graph , let @xmath157 denote a corresponding partition of ( the indices of ) the vertices of the graph i.e. , a partition of @xmath158 $ ] .",
    "clearly , for every @xmath159 with @xmath160 we have @xmath161    it suffices to prove that every collection of rows of @xmath162 can be split into two parts such that the sum of the rows in one part minus the sum of the rows in the other part is a vector with entries in @xmath163 ; see e.g. ( * ? ? ?",
    "* theorem  19.3 ) . hence , let @xmath164 $ ] and @xmath165 $ ] denote such a collection of row indices of  @xmath156 and  @xmath166 respectively . for @xmath167",
    "$ ] we set @xmath168 of course , the sets @xmath169 and @xmath170 form a partition of @xmath171 i.e. , @xmath172 also , it follows from  ( i ) , ( ii ) ,  ,  , and the fact that the graph is simple that @xmath173 i.e. , the sets constitute a partition of @xmath174 .    by  ( i ) ,  ( ii ) ,  ,   and   we have @xmath175 hence @xmath176 similarly , @xmath177 therefore , @xmath178 i.e. , the collection @xmath110 and @xmath174 of rows of @xmath156 and @xmath166 respectively , is split into two parts such that the sum of the rows in one part minus the sum of the rows in the other part is a vector with entries in @xmath163 .",
    "now we present a polynomial - time algorithm for rec@xmath179 when @xmath180 .",
    "we claim that the problem can be formulated as that of finding an integer solution to @xmath181 with a totally unimodular matrix  @xmath182 and integral right - hand side  @xmath183 showing that the problem is solvable in polynomial time ; see @xcite , ( * ? ? ?",
    "16.2 ) .    assembling the variables",
    "@xmath184 for @xmath185\\times[n]$ ] into an @xmath186-dimensional vector and rephrasing the row and column sum constraints in matrix form @xmath187 where @xmath188 contains the  @xmath189 s and  @xmath190 contains the  @xmath191 s ,  @xmath156 is the node - edge incidence matrix of a bipartite graph , and hence totally unimodular .    as the pattern constraints ensure that no row of a block contains two 1 s , and since @xmath192 or @xmath193 we",
    "can ( equivalently ) replace the block and pattern constraints by the _ box constraints _ @xmath194_0,\\ ] ] where @xmath195\\times\\{j+l\\}).$ ]    we can rephrase the box constraints in matrix form @xmath196 with a binary matrix  @xmath150 and a vector  @xmath197 containing the respective right - hand sides .    since each box @xmath198 is contained in a row of @xmath32\\times [ n]$ ]",
    "the condition in lemma  [ prop : totallyunimodular ] is satisfied .",
    "also , any two of these boxes are disjoint since the blocks are disjoint .",
    "hence the condition in lemma  [ prop : totallyunimodular ] is satisfied .",
    "therefore , by lemma  [ prop : totallyunimodular ] , the matrix @xmath199 is also totally unimodular . appending @xmath200 and the identity matrix @xmath201 yields again a totally unimodular matrix ,",
    "hence @xmath202 is totally unimodular .",
    "since the corresponding right - hand side vector  @xmath203 is integral , the instance can be solved by linear programming .",
    "this section contains the proof of theorem [ thm : np ] .",
    "we begin with the @xmath0-hardness of @xmath204 for @xmath80 .",
    "it suffices to show the result for @xmath205 since the @xmath0-hardness for larger  @xmath2 can be inferred from that for @xmath205 by setting the row and column sums @xmath206 and @xmath207 to zero for every @xmath47 and @xmath208 see @xcite .",
    "so , let @xmath209 we use a transformation from the following problem 3-color tomography , which is @xmath0-hard by  @xcite .",
    "( note that the third color is just `` blank . '' )    3-color tomography +    @xmath210.$}\\\\[1.2ex ] & \\textnormal{task:}\\quad & & \\omit \\rlap { find $ \\xi_{p , q}^{(a)}\\in\\{0,1\\},\\:\\:$ $ ( p , q)\\in[m]\\times[n],$ $ a \\in [ 2],$ with } \\\\",
    "\\displaystyle & & & \\sum_{p\\in[m ] } \\xi^{(a)}_{p , q}&&=r_q^{(a)},\\qquad & &   q\\in[n ] , a\\in[2],&&\\textnormal{(row sums ) } \\\\",
    "\\displaystyle & & & \\sum_{q\\in[n ] } \\xi^{(a)}_{p , q}&&=c_p^{(a ) } , & &   p\\in[m ] , a\\in[2],&&\\textnormal{(columns sums ) } \\\\",
    "\\displaystyle & & & \\xi_{p , q}^{(1)}+\\xi_{p , q}^{(2)}&&\\leq1 , & &   ( p , q)\\in [ m]\\times[n]\\qquad&&\\textnormal{(disjointness condition),}\\\\[1.2ex ] & & & \\omit \\rlap{or decide that no such solution exists.}\\end{aligned}\\ ] ]    let @xmath211 denote an instance of 3-color tomography . we are setting up an instance  @xmath127 of our reconstruction problem by defining the row and column sums @xmath212 and @xmath213 , respectively .",
    "the block and pattern constraints ensure that there are only three possibilities for setting the 1 s in each block .",
    "they are shown in figure  [ fig:3colors ] .",
    "instances.,scaledwidth=30.0% ]    note that the types can be viewed as representing three colors , which are counted by different row and column sums .",
    "the row and column sums with odd indices count type  1 blocks , the other sums count type  2 blocks .    setting @xmath214,\\:\\ : & a\\in[2 ] , \\\\",
    "\\displaystyle c_{2p+a-2}&:=c^{(a)}_p,\\quad & & p\\in[m],\\:\\ : & a\\in[2],\\end{aligned}\\ ] ] and using the correspondences @xmath215,\\\\ \\displaystyle { \\xi_{p , q}^{(1)}}^*={\\xi_{p , q}^{(2)}}^*=0 \\quad & & \\leftrightarrow \\quad ( \\xi_{2p-1,2q-1}^*,\\xi_{2p-1,2q}^*,\\xi_{2p,2q-1}^*,\\xi_{2p,2q}^ * ) \\textnormal { is of type~3},&&\\end{aligned}\\ ] ] we conclude that @xmath113 admits a solution if , and only if , @xmath127 admits a solution .",
    "next we turn to the @xmath1-hardness of rec@xmath84 for @xmath216 .",
    "again it suffices to prove the result for  @xmath209    the general structure of the proof follows that of the @xmath0-hardness result under data uncertainty given in @xcite . however , some adaptations and additions are required as will be detailed below .    as in  @xcite",
    "we give a transformation from the @xmath0-hard problem 1-in-3-sat @xcite , which asks for a satisfying truth assignment that sets exactly one literal true in each clause of a given boolean formula in conjunctive normal form where all clauses contain three literals ( involving three different variables ) .    for a given instance of 1-in-3-sat a `` circuit board ''",
    "is constructed that contains an initializer , several connectors , and clause chips .",
    "the general structure of the circuit board from the proof of  @xcite and its modification , which contains additional connectors and initializers , are outlined in figure  [ fig : p2layoutleq ] .",
    "the initializers contain , for every variable @xmath217 @xmath218,$ ] so - called _",
    "@xmath219-chips _ , while the connectors contain _ @xmath220-chips . _",
    "the clause chips are more complex as they consist of two _ collectors _ , two _ verifiers _ , and a _",
    "transmitter_. the initializer holds a truth assignment for the variables @xmath221 of the given instance  @xmath113 of 1-in-3-sat .",
    "the boolean values true and false are encoded in @xmath219-chips , @xmath218,$ ] by the type  1 and  2 blocks , respectively , that are shown in figure  [ fig : p2types ] .",
    "-chips.,scaledwidth=17.0% ]    the proof in  @xcite shows how the truth assignment is transmitted through the circuit board , and how the verifier chips indeed check the feasibility of the given 1-in-3-sat instance .",
    "figure  [ fig : p2example2 ] depicts a specific problem instance and a corresponding solution for the original construction of  @xcite .",
    "the proof in  @xcite employs three different types of block constraints . for every block @xmath222 @xmath223 there is one of the following constraints : @xmath224 the names in parenthesis are those from @xcite ( even though  @xmath225 may seem more natural here in the third case ) .    as for binary variables ,",
    "the constraint @xmath226 is equivalent to @xmath227 it suffices to adapt the construction in such a way that no @xmath228-block constraints are required .",
    "in fact , the @xmath228-block constraints in the original construction are only employed for the @xmath220-chips , @xmath218,$ ] contained in the connectors .    for each @xmath220-chip , @xmath218,$ ] in a connector , we replace the @xmath228-block constraints by a @xmath229-block constraint . then , between any two clause chips we insert an additional copy of a connector and an initializer each .",
    "these copies are placed as indicated in figure  [ fig : p2layoutleq](b ) .",
    "the additional row and column sums are prescribed again to values  @xmath4 and  @xmath230 in alternation .",
    "the new copies ensure that each @xmath220-chip , @xmath218,$ ] is contained in a horizontal or vertical strip that contains a @xmath219-chip of an initializer .",
    "the corresponding row or column sums have values  @xmath4 and  @xmath231 and since we have @xmath229-block constraints for both chips , we can distribute the @xmath232 ones only in such a way that each of the two chips contains exactly two 1 s . in other words ,",
    "each @xmath220-chip , @xmath218,$ ] is required to contain exactly two 1 s .",
    "figure  [ fig : change ] shows the solution of our correspondingly adapted circuit board from  figure  [ fig : p2example2 ] .     a solution @xmath233 is shown ( non - zero components  @xmath234 are depicted as black pixels ) , representing the boolean solution @xmath235 , scaledwidth=60.0% ]    with this adaptation the proof from  @xcite carries over .",
    "as a service to the reader we explain how the truth assignment is transmitted in our particular example ; see figure  [ fig : transmission ] .",
    "the formal proof that , in particular , this transmission and , in general , the complete transformation works as needed , follows exactly as in  @xcite .",
    "( for the example shown in  figure  [ fig : change ] ) .",
    ", scaledwidth=60.0% ]    suppose the @xmath236-chip of the initializer in the lower right corner of the circuit board shown in figure  [ fig : transmission ] is of type  1 .",
    "the truth assignment is vertically transmitted from the initializer to a connector , which negates the boolean value as the x - rays are set to  @xmath4 and  @xmath230 in alternation .",
    "then , this boolean value is horizontally transmitted to an initializer ( again negated , so that we have the original values back ) , then vertically to a connector ( again negated ) . from here",
    "the boolean value is transmitted horizontally to the first clause chip , where it enters and exits , yet again negated , through a collector . in the part between the two collectors , the boolean values for the literals appearing in the first clause",
    "take a path through the verifiers that ensure that exactly one literal is set to true ; the values for the other literals are just transmitted ( again with negation ) .",
    "this process continues in a similar way for the remaining clauses .",
    "we end up with feasible solution for our instance of rec@xmath84 if , and only if , there is a satisfying truth assignment for our given instance of 1-in-3-sat .",
    "let us first point out that the question of inferring information about an otherwise unknown object from observations `` under the microscope , '' i.e. , through certain windows , is fundamental for a wide range of applications . for corresponding results on the scanning of binary or integer matrices",
    "; see e.g.  @xcite . in our terminology ,",
    "@xcite studies the task of reconstructing binary matrices from their number of  @xmath4 s in each windows of a fixed size .",
    "in addition to the patterns @xmath247 , and @xmath54 we consider , for @xmath216 , a fourth one @xmath248_0 ^ 2 } \\::\\ : |m\\cap\\left([k-1]_0\\times\\{j\\}\\right)|\\geq k-1 \\textnormal { for all } j\\in [ k]_0\\}.\\ ] ] note that @xmath249 can be viewed as the colored - inverted version of @xmath250        @xmath254 & \\textnormal{task:}\\quad & & \\omit \\rlap{find   $ \\xi_{p , q}\\in\\{0,1\\},$ \\:$(p , q)\\in[m]\\times[n],$ with } \\\\",
    "\\displaystyle & & & \\sum_{\\mathclap{p\\in[m ] } } \\xi_{p , q}&&=r_q , & &    q\\in[n ] , & & \\textnormal{(row sums ) } \\\\",
    "\\displaystyle & & & \\sum_{q\\in[n ] } \\xi_{p , q}&&=c_p , & &   p \\in [ m ] , & & \\textnormal{(column sums)}\\\\    \\displaystyle & & & \\sum_{\\mathclap{(p , q)\\in w_{k}(i , j ) } } \\xi_{p , q } & & \\sim_{i , j } v(i , j ) , & &   ( i , j)\\in c(m , n , k , l ) , \\quad & & \\textnormal{(window constraints)}\\\\ \\displaystyle & & & \\textnormal{pat}_{k}(x , i , j)&&\\in p(k , t ) , \\qquad \\qquad \\qquad & &   ( i , j)\\in c(m , n , k , l),\\qquad   & & \\textnormal{(pattern constraints),}\\\\[1.2ex ] & & & \\omit \\rlap{or decide that no such solution exists.}\\end{aligned}\\ ] ]    tables  [ tablep01 ] and  [ tablenp01 ] below list tractability and intractability results for @xmath253 , respectively , which are simple corollaries to our main theorems [ thm : tract ] and [ thm : np ] .",
    "in fact , they are either just reinterpretations of these results or rely , in addition , on one or two of the following simple transformation principles ( t1 ) , ( t2 ) , or ( t3 ) .",
    "( t1 ) is the trivial observation that rather than reconstructing the ones in an image , we may reconstruct the zeros instead .",
    "more precisely , this process of `` color inversion '' works as follows",
    ". let @xmath255 denote the number of positions in the window @xmath256 .",
    "then , we associate a given instance @xmath113 of @xmath253 with the instance @xmath127 of @xmath257 where @xmath258 @xmath259 and @xmath260 , @xmath261 @xmath262,$ ] @xmath263 @xmath264,$ ] @xmath265 and , for all @xmath266 , @xmath267 is replaced by @xmath268 clearly , the problems @xmath253 and @xmath257 lie in the same complexity class .",
    "the transformation ( t2 ) adds empty rows and columns to an instance @xmath113 of @xmath269 to extend @xmath0-hardness results for @xmath205 to higher values of @xmath2 .",
    "more precisely , let @xmath270 @xmath271 and set for @xmath272\\times[n])\\cap c(m , n,2)$ ] and @xmath273 $ ] @xmath274,\\\\ 0&:&\\textnormal{otherwise,}\\end{array}\\right.\\\\ c'_{\\frac{k}{2}(i-1)+l}&:=\\left\\{\\begin{array}{lll}c_{i+l}&:&l\\in[2],\\\\ 0&:&\\textnormal{otherwise,}\\end{array}\\right.\\\\ ( \\sim'_{i , j},v'(k(i-1)/2 + 1,k(j-1)/2 + 1)))&:=(\\sim_{i , j},v(i , j)).\\end{aligned}\\ ] ] this defines an instance @xmath127 of @xmath275 with row sums @xmath276 column sums @xmath277 and block constraints @xmath278 @xmath279 clearly , the instance  @xmath113 admits a solution if , and only if ,  @xmath127 admits a solution ( by filling / extracting the  @xmath280-blocks of  @xmath113 into / from the  @xmath52-blocks of @xmath127 ) .",
    "as this is a polynomial - time transformation , @xmath0-hardness of @xmath269 implies @xmath0-hardness of @xmath281    in the final transformation ( t3 ) additional rows and columns are filled by ones . for a given instance @xmath113 of @xmath282 and @xmath80 , let @xmath283 , @xmath284 , and set for @xmath272\\times[n])\\cap c(m , n,2)$ ] and @xmath273 $ ] @xmath274,\\\\ m'&:&\\textnormal{otherwise,}\\end{array}\\right.\\\\ c'_{\\frac{k}{2}(i-1)+l}&:=\\left\\{\\begin{array}{lll}c_{i+l}&:&l\\in[2],\\\\ n'&:&\\textnormal{otherwise,}\\end{array}\\right.\\\\ ( \\sim'_{i , j},v'(k(i-1)/2 + 1,k(j-1)/2 + 1)))&:=(\\sim_{i , j},k^2+v(i , j)-4).\\end{aligned}\\ ] ]",
    "this defines an instance @xmath127 of @xmath285 with row sums @xmath276 column sums @xmath277 block constraints @xmath278 @xmath286 @xmath287 @xmath288 and @xmath289 clearly , the instance  @xmath113 admits a solution if , and only if ,  @xmath127 admits a solution ( by filling / extracting the  @xmath280-blocks of  @xmath113 into / from the  @xmath52-blocks of @xmath127 ) . as this is a polynomial - time transformation , @xmath0-hardness of @xmath269 implies @xmath0-hardness of @xmath290    c@3exc@3exc@3exc@3exc@3exc@3exl@3ex@xmath2&@xmath291&@xmath292&@xmath293&@xmath5&@xmath174&reference + 1&@xmath14&@xmath294&@xmath294&@xmath295_0$]&@xmath296&thm .",
    "[ thm : tract]([thm : tract : i ] ) + 2&@xmath297&@xmath298&@xmath299_0$]&0&@xmath300&@xcite + @xmath301&@xmath302&@xmath303&@xmath304&@xmath53&@xmath305&thm .",
    "[ thm : tract]([thm : tract : ii ] ) + @xmath301&@xmath297&@xmath306&@xmath304&@xmath53&@xmath305&thm .",
    "[ thm : tract]([thm : tract : ii ] ) & ( t1 ) + @xmath301&@xmath307&@xmath294&@xmath297&@xmath308&@xmath305&thm .",
    "[ thm : tract]([thm : tract : iii ] ) + @xmath301&@xmath294&@xmath309_0$]&@xmath303&@xmath230&@xmath305&thm .",
    "[ thm : tract]([thm : tract : iii ] ) & ( t1 ) +   +    c@4exc@4exc@4exc@4exc@4exc@4exl@4ex@xmath2&@xmath291&@xmath292&@xmath293&@xmath5&@xmath174&reference + @xmath301&@xmath294&@xmath297&@xmath310&0&@xmath296&@xcite [ tablenp01:14 ] + @xmath301&@xmath302&@xmath294&@xmath294&1&@xmath305&thm .",
    "[ thm : np]([thm : np : i ] ) + @xmath301&@xmath311&@xmath294&@xmath294&0&@xmath305&thm .",
    "[ thm : np]([thm : np : ii ] ) [ tablenp01:17 ] + @xmath301&@xmath312&@xmath294&@xmath294&0&@xmath305&thm .",
    "[ thm : np]([thm : np : ii ] ) & ( t3 ) + @xmath301&@xmath294&@xmath313&@xmath294&0&@xmath305&thm .",
    "[ thm : np]([thm : np : ii ] ) & ( t1 ) + @xmath301&@xmath294&@xmath314&@xmath294&0&@xmath305&thm .",
    "[ thm : np]([thm : np : ii ] ) & ( t1 ) & ( t2 ) +   +    let us finally point out , that the tables  [ tablep01 ] and  [ tablenp01 ] can be largely extended . in particular , we can consider reconstruction problems for different types of windows which are even allowed to vary for each @xmath315\\times[n]$ ] . while some of the complexity results in this more general setting may seem rather marginal",
    ", other may be interesting for certain applications ; see @xcite . as this would go far beyond the scope of the present paper",
    "we refrain , however , from carrying the results to the extremes here .",
    "p.  gritzmann . on the reconstruction of finite lattice sets from their x - rays . in _ discrete geometry for computer imagery ( eds .",
    ": e.  ahronovitz and c.  fiorio ) , dcgi97 , lecture notes on computer science 1347 , springer _ , pages 1932 , 1997 .",
    "c.  kisielowski , p.  schwander , f.  h. baumann , m.  seibt , y.  kim , and a.  ourmazd .",
    "an approach to quantitative high - resolution transmission electron microscopy of crystalline materials .",
    ", 58(2):131155 , 1995 .",
    "p.  schwander , c.  kisielowski , f.  h. baumann , y.  kim , and a.  ourmazd .",
    "mapping projected potential , interfacial roughness , and composition in general crystalline solids by quantitative transmission electron microscopy .",
    ", 71(25):41504153 , 1993 .    j.  zhu , j.  gao , a.  ehn , m.  aldn , z.  li , d.  moseev , y.  kusano , m.  salewski , a.  alpers , p.  gritzmann , and m.  schwenk .",
    "measurements of 3d slip velocities and plasma column lengths of a gliding arc discharge . , 106(4):04410114 , 2015 ."
  ],
  "abstract_text": [
    "<S> the present paper deals with the discrete inverse problem of reconstructing binary matrices from their row and column sums under additional constraints on the number and pattern of entries in specified minors . </S>",
    "<S> while the classical consistency and reconstruction problems for two directions in discrete tomography can be solved in polynomial time , it turns out that these window constraints cause various unexpected complexity jumps back and forth from polynomial - time solvability to @xmath0-hardness .    </S>",
    "<S> = 1 </S>"
  ]
}
{
  "article_text": [
    "self - contentedness is a convenience for the reader : he / she is exempted from searching definitions , statements and sometimes proofs from previous papers , many times from the same author(s ) .",
    "now , if i comply to this constraint , anti - plagiarism software will warn the reader that there is a definite percent of overlap of this paper with other papers of the author .",
    "the struggle against plagiarism is definitely necessary .",
    "i just mention that it may have some inconvenience .",
    "now , i am convinced that the reader will understand these inconveniences , so that he / she will play the game of looking into the papers indicated in the references instead of throwing the paper because some context is not at hand .",
    "accordingly , i do not repeat most of the introduction of  @xcite . as mentioned in the abstract , the improvement with respect to  @xcite",
    "is obtained by relaxing the constraint of rotation invariance .",
    "again , we repeat that the new result is a true planar cellular automaton , which means that at each step of the computation , the set of non quiescent states has always infinitely many cycles , as already mentioned in the abstract .",
    "also , the reason for not repeating the introduction is that we make use of the same model of railway computation . also for this reason",
    ", we do not mention the reminder sections of  @xcite about the railway model and its implementation in the hyperbolic tiling we use in this paper .",
    "we also not repeat the introduction to the approach to hyperbolic tilings used in this paper , again , the reader is referred to  @xcite and to several papers as  @xcite where other references are available .    in section  [ scenar ] , i indicate the new features for implementing the model with the constraint of using two states only . in section  [ rules ] , we give the rules of the automaton , insisting in the way we defined these rules in a context where rotation invariance is no more required , which gives a definite advantage as indicated by the result itself :    [ letheo ] there is a weakly universal cellular automaton on the pentagrid with moore neighbourhood which is truly planar and which has two states .    presently , we turn to the proof of this result .",
    "as in previous papers , sensors and control devices are no more immediate neighbours of the cells where tracks arrive at the point which define a switch .",
    "this reinforce the careful study of the tracks themselves as their role for conveying key information is more and more important .    here",
    "too , tracks are blank cells marked by appropriate milestones .",
    "we carefully study this point in sub - section  [ tracks ] .",
    "later , in sub - sections  [ roundabout ] and  [ forcontrol ] , we look at the changes introduced with respect to  @xcite .      in this implementation , the tracks are represented in the same way as in  @xcite .",
    "for the convenience of the reader , we repeat the illustration of this implementation given by figure  [ elemtrack ] .",
    "however , some care has to be given to this structure . with two states",
    ", we have to thoroughly check that all constraints we have to define horizontal and vertical tracks can be satisfied .",
    "we refer the reader to sub - section  [ trackrules ] were we give the rules and in which appropriate figures allow us to check the correctness of the implementation given in this paper .",
    "we just remember that for this implementation , the locomotive is implemented as a single black cell : it has the same colour as the milestones of the tracks . only the position of the locomotive with respect to the milestones",
    "allow us to distinguish it from the milestones . as clear from the next sub - section ,",
    "we know that besides this * simple locomotive * , the locomotive also occurs as a * double one * in some portions of the circuit .",
    "moreover , the circuit also makes use of signals which are implemented in the form of a simple locomotive . so that at some point , it may happen that we have three simple locomotives travelling on the circuit : the locomotive and two auxiliary signals involved in the working of some switch . for aesthetic reasons ,",
    "the black colour which is opposed to the blank is dark blue in the figures .",
    "the round - about replaces the crossing , a railway structure , by a structure inspired by road traffic . at a round - bout where two roads are crossing , if you want to keep the direction arriving at the round - about , you need to leave the round - about at the second road",
    ". figure  [ roundaboutfig ] illustrates this features , a figure from  @xcite which is repeated here for convenience .",
    "now , this strategy requires the cellular automaton knows how to count up to two . as in  @xcite , we use the three auxiliary structures which are represented in figure  [ roundaboutfig ] by a rhombus , a small circle and a bit larger ones .",
    "these structures are  : the fixed switch , see sub - subsection  [ fix ] , the doubler and the selector , see sub - subsection  [ doublesel ] .",
    "when the locomotive arrives close to the round - about , it first meets the doubler : it transforms the simple locomotive into a double one which consists of two contiguous black cells occupying blank cells of the tracks .",
    "then , the locomotive may arrive at the fixed switch , depending on whether it arrived from  * a * or from**b**. then , the double locomotive arrives at the first selector : the structure recognizes a double locomotive .",
    "it kills one of the cells and the surviving simple locomotive is sent further on the round - about .",
    "when it meets the second selector , the structure recognizes a simple locomotive .",
    "accordingly , it sends it on the track which leaves the round - about at that point .    in order to use",
    "the illustrations of this section and of the next one , me make use of a numbering of the tiles based on what is indicated by figure  [ pentanum ] .",
    "the central tile is numbered  0 .",
    "its side are increasingly and counter - clockwise numbered from  1 to  5 .",
    "side  1 is defined as follows .",
    "let  @xmath0 be the upper vertex of tile  0 which is on the vertical diameter  @xmath1 of the right - hand side figure .",
    "the side  1 of tile  0 is the tile which shares  @xmath0 with tile  0 and which is on the left - hand side of  @xmath1 .",
    "each side of tile  0 delimits a sector : sector  1 is headed by the tile 1(1 ) obtained from tile  0 by a reflection on its side  1 .",
    "the sector is delimited by the rays starting from the other end of the side  1 of tile  0 which belong to edges of tile  1(1 ) .",
    "the other sectors are obtained by appropriate rotations around the centre of tile  0 in such a way that the union of the sectors is the complement of tile  0 in the tiling . inside each sector , the tiles are numbered as indicated in the right - hand side part of figure  [ pentanum ] .",
    "the tile  @xmath2 of sector  @xmath3 is numbered @xmath4 .",
    "each sector is panned by the same tree . in each tile ,",
    "the sides are increasingly and counter - clockwise numbered from  1 to  5 .",
    "the side  1 of the tile @xmath4 is the side it shares with its father in the tree rooted in the tile @xmath5 . in section  [ rules ] , we shall indicate another way to number the sides of the tiles based on this numbering too .",
    "when we shall consider the cellular automaton constructed for the proof of theorem  [ letheo ] , we shall speak of cell  @xmath4 instead of tile  @xmath4 . in this notation , tile  0",
    "will be denoted by 0(0 ) . once the side  1 is fixed in a cell  @xmath6 , its edges",
    "are numbered according to what we mentioned .",
    "the neighbour of  @xmath6 which shares the side  @xmath7 with it is called neighbour  @xmath7 . as we also consider as neighbours of  @xmath6 the cells which share a vertex only with  @xmath6 , we call these neighbours * vertex - neighbours * and we number them as follows : the vertices are increasingly and counter - clockwise numbered from  6 to  10 , vertex  6 being shared by sides  1 and  5 . accordingly , the vertex - neighbour of  @xmath6 sharing its vertex  @xmath8 will be called neighbour  @xmath8 or vertex - neighbour  @xmath8 .",
    "as the tracks are one - way and as an active fixed switch always sends the locomotive in the same direction , there is no need of the other direction : there is no active fixed switch .",
    "now , passive fixed switches are still needed as just seen in the previous paragraph .",
    "figure  [ stabfix ] illustrates the passive fixed switch when there is no locomotive around .",
    "we can see that it consists of elements of the tracks which are simply assembled in the appropriate way in order to drive the locomotive to the bottom direction in the picture , whatever upper side the locomotive arrived at the switch . from our description of the working of the round - about , a passive fixed switch must be crossed by a double locomotive as well as a simple one .",
    "later , in section  [ fixedswitch ] , we shall check that the structure illustrated by figure  [ stabfix ] allows these crossings .",
    "note that the cell  0(0 ) in figure  [ stabfix ] has six black neighbours instead of five of them in an ordinary cell of the tracks in a vertical track , see figures  [ voievertd ] and  [ voievertm ] , further .",
    "its black neighbours are neighbours  2 , 4 , 6 , 7 , 8 and  10 .",
    "note that neighbour  10 is a milestone belonging to the cell  1(5 ) which is an element of the second track which arrives to the centre of the switch .",
    "the doubler is illustrated by the left - hand side picture of figure  [ stab_doublsel ] .",
    "note that the neighbourhood of the cell  @xmath9 is different from an ordinary element of the tracks and it is also different from the cell  0(0 ) of a fixed switch . here , the black neighbours are neighbours  2 , 4 , 5 , 7 and  8 .",
    "it is slightly simpler than the doubler in  @xcite although we have two states only . as will be seen in section  [ rules ] ,",
    "this is obtained by a particular numbering of the sides of a cell .",
    "the working of the configuration is the same as in  @xcite , with this difference that the locomotive is black .",
    "the selector is illustrated by the right - hand side of figure  [ stab_doublsel ] .",
    "it is a very symmetric picture , rather different from that for the selector in  @xcite .",
    "in fact , the symmetry of the picture and an appropriate choice of the sides  1 allow us to make the cells  1(2 ) and  1(4 ) to react in a different way according to the number of black cells in the locomotive .",
    "whatever this number , when the first cell of the locomotive is in cell  0(0 ) , both cells  1(2 ) and  1(4 ) can see whether or not a second black cell follows the first one in the cell  1(3 ) .",
    "if a single black cell occurs , the cell  1(4 ) becomes black and the cell  1(2 ) remains white . if a second black cell occurs , the cell  1(4 ) remains white and the cell  1(2 ) turns to black .    after this point , in both cases ,",
    "the configuration is that of tracks so the locomotive is sent on the appropriate path .      in this sub - section ,",
    "we look at the decomposition of two active switches : the flip - flop and the active part of the memory switch .",
    "we follow the same implementation as in  @xcite , separating the working of the switch into two separate stages .",
    "the fork is implemented as in  @xcite , but the controller is a bit different .",
    "for the convenience of the reader , we reproduce the figures of  @xcite which are again used by our automaton . in particular , we reproduce figure  [ activswitches ]",
    ". figure  [ stab_active ] is different : the fork has the same configuration , but the two possible stable configurations of the controller are different , distinguished by the colour of the cell 1(1 ) , especially when the controller has to stop the locomotive .",
    "when the simple locomotive arrives at the fork  @xmath10 , it is duplicated into two simple locomotives , each one following its own path . in the active memory switch",
    ", each locomotive goes to a controller . in the flip - flop ,",
    "one of these locomotives goes on its way to the controller , and the other goes to another fork  @xmath11 which sends one locomotive to the other controller and the other , which is now a third locomotive , is sent to a third fork  @xmath12 .",
    "the locomotives sent by  @xmath12 go both to a controller , one to the black controller , the other to the white one .",
    "now , when a locomotive sent by  @xmath12 arrives at a controller , it changes the black one into a white one and the white one into a black one .",
    "accordingly , what should be performed by a flip - flop is indeed performed .",
    "it is enough to manage things in such a way that the locomotives arriving to the controllers from  @xmath12 arrive later than those sent by  @xmath10 and by  @xmath11 . in the active memory switch , the locomotive which arrives to  @xmath12 is sent by the passive memory switch . in this sense ,",
    "the passive memory switch is active while the active one is passive .    in the fork",
    ", the locomotive , in its simple form , arrives through the cell  1(3 ) . from the cell  0(0 ) , two simple locomotives arise at the same time at the cells 1(1 ) and  1(4 ) .    in the controller ,",
    "the locomotive arrives through the path defined by the cells 21(4 ) , 8(4 ) , 3(4 ) and  1(4 ) , in this order .",
    "these cells constitute a branch of the tree spanning the sector . along this path",
    ", the simple locomotive arrives at cell  0(0 ) through the cell  1(4 ) .",
    "when the cell 1(1 ) is black , it goes on its way along the track through the cells 1(2 ) , 3(2 ) , 8(2 ) and 21(2 ) .",
    "when the cell 1(1 ) is white , the locomotive is stopped at the cell 1(4 ) and does not reach cell  0(0 ) .",
    "figure  [ memopass ] illustrates the construction of the passive memory switch with the help of forks and controllers . that implementation is somehow different from the one indicated in  @xcite .",
    "however , as in  @xcite , the controllers of figure  [ memopass ] are not the same as those of figure  [ activswitches ] and they are different from those of  @xcite .",
    "the main reason is that in the case of a passage of the locomotive through the non - selected track , in  @xcite , the controller let the locomotive go , it changes the selection and it sends a signal to the other controller in order to order it to change its selection too . so that the controller has to perform three tasks at once .",
    "the present idea is to slightly simplify the task of the controller .",
    "as the locomotive should anyway not be stopped , we can place a fork on the tracks passively arriving to the switch : this is the reason for placing the forks @xmath13 and  @xmath14 in figure  [ memopass ] where they are on the picture .",
    "let us look at the locomotive which arrives at the fork  @xmath14 on the figure .",
    "it corresponds to the non - selected track .",
    "the simple locomotive is duplicated : one goes to the fixed switch @xmath15 and goes further .",
    "the second simple locomotive goes to the controller  @xmath16 . as this controller signalizes a non - selected track ,",
    "the selection is changed and the controller let this locomotive go on along the track which leads it to the other controller , @xmath17 . there , at  @xmath17 , the second locomotive changes the selection from selected to non - selected .",
    "note that the locomotive which goes on its way to  @xmath17 passes through another fork , namely @xmath18 which sends a third locomotive to the active switch in order to change its selection too .",
    "consider the case when the simple locomotive arrives to  @xmath13 , the fork which corresponds on the figure to the selected track .",
    "then , the locomotive is sent to  @xmath17 where it is stopped as no change should be performed .",
    "figure  [ stab_ctrlsgn ] illustrates the controller of the passive memory switch .",
    "it is presented when no locomotive is around and it presents the structure in its two basic configurations : when it is black and when it is blank .",
    "the difference is shown by the colour of the cell  1(1 ) .",
    "the locomotive arrives at the cell  0(0 ) along the path 33(2 ) , 12(2 ) , 4(2 ) and  1(2 ) in this order .",
    "if the cell  1(1 ) is blank , which signalizes that the track is not selected , then the cell  1(1 ) turns to black and the locomotive goes on its way through the cells 1(4 ) , 4(4 ) , 12(4 ) and 33(4 ) .",
    "accordingly , the constraints above described are satisfied .",
    "if the cell 1(1 ) is black when the locomotive arrives from 33(4 ) , the locomotive is stopped at 1(2 ) : it does not reach even the cell  0(0 ) and the cell  1(1 ) remains white . in section  [ rules ] , we shall see that the working is slightly more complex : this is induced by technical details raised by the rules themselves .",
    "note that when the locomotive arrived through the non - selected track , the second locomotive which arrives to  @xmath18 or  @xmath19 in figure  [ stab_ctrlsgn ] arrives to the controller through the path defined by 2(1 ) , 2(6 ) , 16(1 ) and 42(1 ) .",
    "the signal stops at the cell  2(1 ) where it is changed to blank . at the same time , the cell 1(1 ) is also changed to blank .",
    "it should be stressed that when the cell  1(1 ) is black , and when the locomotive arrives through the selected track , no locomotive is sent to the other controller as there is nothing to change .",
    "the figures of section  [ scenar ] help us to establish the rules .",
    "the rules and the figures were established with the help of a computer program which checked the coherence of the rules .",
    "the program also wrote the postscript files of the pictures from the computation of the application of the rules to the configurations of the various type of parts of the circuit .",
    "the computer program also established the traces of execution which allow the reader to check the application of the rules .",
    "we have to revisit the format of the rules and also to explain what is allowed from the relaxation from rotation invariance .",
    "we remind the reader that a rule has the form , where is the state of the cell  @xmath6 , is the state of the neighbour  @xmath7 of  @xmath6 and is the new state of  @xmath6 once the rule has been applied . as the rules no",
    "more observe the rotation invariance , we may freely choose which is side  1 for each cell .",
    "we take this freedom from the format of the rule which only requires to know which is neighbour  1 . in order to restrict the number of rules",
    ", it is decided that as a general rule , for a cell which is an element of the track , side  1 is the side shared by the cell and its next neighbour on the track .",
    "there can be exceptions when the cell is in a switch or the neighbour of the central cell in a switch .",
    "in particular , when a cell belongs to two tracks , side  1 is arbitrarily chosen among the two possible cases .",
    "the milestones have their side  1 shared by an element of the track .",
    "this means that when a milestone  @xmath20 is a vertex - neighbour of an element of the track  @xmath21 , the side  1 of @xmath20 is not a side of  @xmath21 .",
    "we have to keep in mind that there are two types of rules .",
    "those which keep the structure invariant when the locomotive is far from them , we call this type of rules * conservative * , and those which control the motion of the locomotive . these latter rules , which we call * motion rules * , are the rules applied to the cells of the tracks as well as their milestones and , sometimes to the cells of the structures which may be affected by the passage of the locomotive",
    ".    table  [ consrules ] provides us with rules which concern the white cells which are not on the track and who have a single or two black neighbours .",
    "it also concerns black cells which have a single or two non white neighbours",
    ". a few other conservative rules of the same kind also appear in further tables .",
    "# 1 # 2 # 3 # 4 -4pt # 1 # 2 # 3 # 4 # 4      as explained in section  [ scenar ] , the construction of the tracks is very important .",
    "the figures we give in this sub - section and in the following ones are _ local views_. by that phrase , we mean that we can only see a very tiny part of the hyperbolic plane , that the central cell is not the centre of the hyperbolic plane , such a centre does not exist , but the cell on which we focus our attention . in these figures , we can see the central cell , an element of the tracks in figures  [ voievertd ] and  [ voievertm ] , as well as two other cells of the track , on both sides of the central cell .",
    "we need to define verticals and horizontals in the pentagrid in order to simulate the corresponding euclidean notions , which will allow us to directly implement the basic elements of the railway model , see  @xcite for references .",
    "we look at verticals in sub - subsection  [ les_verticales ] and we look at horizontals in sub - subsection  [ les_horizontales ] , defining in these sub - subsections what we call verticals and horizontals in the pentagrid .",
    "we call * line of the pentagrid * a line of the hyperbolic plane which supports a side of a tile of the pentagrid . note that if a line  @xmath1 of the hyperbolic plane supports a side  @xmath22 of some tile  @xmath23 , it also supports the sides of a sequence where @xmath24 for some and such that each @xmath25 has a side on  @xmath1 , that @xmath25 and @xmath26 share an edge for all and that all @xmath25 are on the same side of  @xmath1",
    ". such a set of tiles is called a * tape*. it is easy to see that a line of the pentagrid  @xmath1 defines two tapes : each one is in its own side of  @xmath1 .",
    "say that a ray is a * ray of the pentagrid * if it is contained in a line of the pentagrid and if it is issued from a vertex of a tile of the pentagrid .",
    "we obtain a * half - tape * by replacing the line of the pentagrid  @xmath1 by a ray of the pentagrid in the above definition of a tape .",
    "the tile of a half - tape defined by the ray of the pentagrid  @xmath27 which contains the vertex from which @xmath27 is issued is called the * head * of the half - tape .",
    "we say that a * vertical * is a finite sequence of consecutive tiles belonging to a half - tape  @xmath21 and which also belong to a branch of the fibonacci tree rooted at the head of  @xmath21 .",
    "we remind the reader that the fibonacci tree is the tree which generates the restriction of the pentagrid to a sector as illustrated in figure  [ pentanum ] .",
    "= 21.5pt # 1 # 2 # 3 # 4 # 5 # 6 # 7 # 8 # 9    # 1 # 2 # 3 # 4 # 5 # 6 # 7 # 8    # 1 # 2 # 3 # 4 # 5 # 6 # 7    # 1 # 2 # 3 # 4 # 5 # 6    # 1 # 2 # 3 # 4 # 5    # 1 # 2 # 3 # 4    # 1 # 2 # 3    a * vertical track * as illustrated by figures  [ voievertd ] and  [ voievertm ] consists in two verticals which belong to half - tapes defined on both sides of the same ray of the pentagrid  @xmath27 .",
    "we say that @xmath27 is the * backbone * of the vertical track .",
    "one vertical along  @xmath27 consists of blank cells while the other consists of black cells : each black cell  @xmath28 is a milestone of the white cell  @xmath29 which shares a side on  @xmath27 with  @xmath28 .",
    "if the side  1 of  @xmath29 is shared with the centre of the next element of the track , @xmath28 is the neighbour  5 of  @xmath29 while the second milestone of  @xmath29 is its neighbour  2 .",
    "note that @xmath29 can see other milestones of its neighbouring elements of the track . in a going down track , neighbour  6 is a milestone in the next element of the tracks , it is also a neighbour of the neighbour  5 of  @xmath29 .",
    "neighbours  9 and  10 of  @xmath29 are milestones of the previous element of the track , neighbour  10 being also a neighbour of the neighbour  5 of  @xmath29 .",
    "when the track is going up , the vertex - neighbours are  7 , a milestone of the next element of the track , and  8 with  9 which are milestones of the previous element .",
    "note that if we take the reflection in its backbone of the vertical track illustrated by figure  [ voievertd ] , we obtain the image of the vertical track illustrated by figure  [ voievertm ] by a reflection in a vertex of a pentagon lying on the backbone of that vertical track .",
    "this shows us that figures  [ voievertd ] and  [ voievertm ] illustrate all possible vertical track : going down as in figure  [ voievertd ] or going up as in figure  [ voievertm ] and again whichever the side where the track lies with respect to its backbone .",
    "this is why the rules of tables  [ verttracktab ] and  [ mounttracktab ] also apply to tracks which are displayed on another side compared to that of figures  [ voievertd ] and  [ voievertm ] .",
    "let us now turn to the rules displayed by table  [ verttracktab ] for a locomotive which goes down and by table  [ mounttracktab ] for a locomotive which goes up .",
    "when the locomotive is not there , the rule which is applied to the centre of an element of the track is rule  25 in table  [ verttracktab ] : note that , as already mentioned , the milestones are neighbours  2 and  5 and that the milestones of neighbouring elements are seen by the centre as neighbours  6 , 9 and  10 when the track goes down .",
    "when a simple locomotive crosses an element  @xmath21 in a vertical track , rule 26 makes the locomotive enter  @xmath21 .",
    "indeed , the locomotive is seen by  @xmath21 as its neighbour  4 .",
    "rule  27 makes the locomotive go out : the cell turns from white to black .",
    "rule  28 witnesses that the locomotive went out : it is seen as the neighbour  1 of  @xmath21 .",
    "table  [ exvertd ] shows which rule are applied on the cells of the track around the central cell of figure  [ voievertd ] .",
    "we can see than the same sequence of rules : 25 , 27 , 28 and again 25 is applied along the cells of the tracks : 4(1 ) , 1(1 ) , 0(0 ) , 1(3 ) and 3(3 ) .",
    "these rules are motion rules as they apply to the centres of the elements of the tracks .",
    "they allow the locomotive to move on its way .",
    "but other rules are also needed .",
    "we can see there necessity in table  [ exvertd ] which displays the rules applied to the cells  1(2 ) and  1(4 ) which are the milestones of the cell  @xmath9 . when the locomotive is far from the element of the track , rule  12 applies to 1(2 ) and rule  2 applies to  1(4 ) . for that latter cell",
    "it is clear : all neighbours of  1(4 ) are white .",
    "for the cell  1(2 ) , it can see two other milestones on the half - line of black cells to which it belongs : its neighbour  2 , a milestone of the cell of the track before  0(0 ) and its neighbour  5 , a milestone of the cell of the track after  0(0 ) .",
    "this is exactly what rule  12 says : with such a neighbouring , the cell remains blank . when the locomotive approaches , the milestone can first see it as its neighbour  7 : rule  15 applies",
    ". then , the milestone can see the locomotive as its neighbour  1 : rule  16 applies .",
    "then , the locomotive is going further , it is seen as neighbour  6 : rule  17 applies .",
    "after that time , the locomotive is no more seen before a possible new passage on this very track , rule  12 applies again .",
    "all these rules : 12 , 15 , 16 and  17 leave the milestone unchanged .",
    "for the cell  1(4 ) , other rules are applied with the same effect : the state is not changed .",
    "rule  8 is applied when the locomotive is in the cell  0(0 ) and not before : it is seen as neighbour  1 of the milestone .",
    "then rule  11 is applied , indicating that the locomotive , seen as neighbour  7 , has left the cell  0(0 ) .",
    "it is no more seen so that rule  2 again is applied .",
    "table  [ verttracktab ] also displays the rules when the locomotive is double .",
    "table  [ exvertd ] also indicates which rules are applied to the same cells as those seen previously . to some of the rules",
    "already examined , new rules are applied due to the fact that now two contiguous black cells travel together .",
    "when the locomotive approaches the cell  0(0 ) , the same rule  26 is applied .",
    "but at the next time , instead of rule  27 , rule  29 is applied : this rule makes the second black cell enter the cell  0(0 ) as this second cell is seen as the neighbour  4 of  0(0 ) .",
    "then , rule  31 is applied which makes the second black cell leave  0(0 ) because the first cell of the locomotive is seen as the neighbour  1 of  0(0 ) .",
    "when the cell  0(0 ) is again white , rule  28 is again applied : it can see the second cell of the locomotive in neighbour  1 .",
    "after that time , rule  25 is again applied . for the milestones",
    ", we have a similar situation . for  1(2 ) , after rule  15 , rule  33 is applied : it can see the first cell of the locomotive in its neighbour  1 and the second one in its neighbour  7 . then rule  34",
    "is applied which can see the first cell of the locomotive in the neighbour  6 of the milestone and the second cell of the locomotive in its neighbour  1 .",
    "after that , rule  17 is applied as the first cell of the locomotive is no more seen by the milestone .",
    "for the cell  1(4 ) , similarly , rule  32 is applied after rule  8 as two cells of the locomotive are seen : in the neighbour  7 of  1(4 ) and in its neighbour  1 .",
    "then rule  11 applies as a single cell of the locomotive can be seen .",
    "after that , rule  2 is again applied .    in table",
    "[ mounttracktab ] , we have the rules for going up .",
    "table  [ exvertm ] shows the rules which where applied in a motion illustrated by figure  [ voievertm ] , where the locomotives are going up . this time , rules  35 , 41 , 42 and  48 are used .",
    "indeed , although side  1 is defined in the same way as in the case of figure  [ voievertd ] , the neighbourhood of the cell  0(0 ) is not exactly the same .",
    "this , time , as already mentioned , the milestones of the cell are still its neighbours  2 and  5 , but the milestones of neighbouring elements are now seen in the neighbours  7 , 8 and  9 instead of the neighbours  6 , 9 and  10 in the previous case . that explains the differences we already noticed for a simple locomotive .",
    "note that for the milestones , the rules are the same but they are applied in the reverse order : this is explained by the symmetry we already noticed .",
    "we now investigate the construction of the horizontal tracks . for this",
    ", we have to define what we call * horizontals of the pentagrid*. these objects are not lines nor rays , they are sets of tiles defined with the help of the fibonacci tree .",
    "a * level * of the fibonacci tree is the set of nodes which are at the same distance from its root : this distance is the number of nodes on the branch going from the root to the node , the root being not taken into account .",
    "a * horizontal of the pentagrid * is a finite sequence of tiles whose image on in the fibonacci tree belong to the same level of the tree , with this constraint , that two consecutive tiles in the sequence share a vertex .",
    "a * horizontal track * @xmath21 is defined from a horizontal of the pentagrid @xmath30 which is called the * backbone * of  @xmath21 .",
    "figure  [ horizstab ] shows us two possible configurations of a horizontal track depending on whether the tile around which they turn corresponds to a black tile or to a white one .",
    "moreover , the figure is split into two parts : to left , the track goes in a clockwise way , to right , it goes on a counter - clockwise one .",
    "consider the case of a clockwise way around a black tile .",
    "the track consists of the following cells : 5(4 ) , 4(3 ) , 10(3 ) , 3(3 ) , 7(3 ) , 2(3 ) , 1(2 ) , 2(2 ) , 5(2 ) , 4(1 ) , 10(1 ) , 3(1 ) , 7(1 ) , 18(1 ) , 6(1 ) , 15(1 ) and 5(1 ) .",
    "their isolated milestones are , in the same order : 13(4 ) , 11(3 ) , 28(3 ) , 26(3 ) , 8(3 ) , 20(3 ) , 18(3 ) , 5(3 ) , 3(2 ) , 6(2 ) , 15(2 ) , 13(2 ) , 11(1 ) , 28(1 ) , 26(1 ) , 8(1 ) , 19(1 ) , 49(1 ) , 47(1 ) , 16(1 ) , 41(1 ) , 39(1 ) and 13(1 ) . the other milestones , those which share a side with another one ,",
    "are : 2(1 ) , 1(1 ) , 0(0 ) , 1(3 ) and 2(4 ) . in our setting",
    ", we consider that 2(1 ) and 2(4 ) are white nodes and that 0(0 ) is a black one . as a consequence , 1(3 )",
    "is a black node .",
    "if we assume that these three nodes belong to the same generation , we need to append the tiles 1(1 ) and 1(3 ) in order to avoid a cell of the track with two consecutive neighbours numbered in 1 .. 5 .",
    "indeed , in the same level of the tree , a black node is in between two white ones .",
    "the isolated milestones are not always completely surrounded by blank cells . for instance , 19(1 ) shares a side with 41(1 ) .",
    "similarly , the cells which constitute the clockwise horizontal track around a white cell are : 5(3 ) , 4(2 ) , 10(2 ) , 3(2 ) , 7(2 ) , 2(2 ) , 1(1 ) , 2(1 ) , 1(5 ) , 2(5 ) , 5(5 ) , 4(4 ) , 10(4 ) , 3(4 ) and 7(4 ) .",
    "the isolated milestones are , in the same order : 13(3 ) , 11(2 ) , 28(2 ) , 26(2 ) , 8(2 ) , 20(2 ) , 18(2 ) , 5(2 ) , 3(1 ) , 7(1 ) , 5(1 ) , 3(5 ) , 6(5 ) , 15(5 ) , 13(5 ) , 11(4 ) , 28(4 ) , 26(4 ) , 8(4 ) and 19(4 ) .",
    "the other milestones are , sharing at least a side with another one : 18(3 ) , 6(3 ) , 2(3 ) , 1(2 ) , 0(0 ) , 1(3 ) , 1(4 ) , 2(4 ) , 5(4 ) and 4(3 ) .",
    "note that 1(3 ) is almost surrounded by black cells .",
    "we assume that 2(4 ) is a black node , 0(0 ) and  2(3 ) are both white nodes , all of them the sons of a white node , here 1(3 ) . in our case , 1(2 ) and 1(4 ) can not be the centres of elements of the tracks so that we define these cells as milestones .",
    "this is a general feature : in between two consecutive nodes @xmath31 and  @xmath32 on the same level which are milestones , the black node which shares a side with both @xmath31 and  @xmath32 must also be a milestone .    for the counter - clockwise tracks , the centres of the elements of the track are the same as in the clockwise case .",
    "the changes occur in the isolated milestones . for the black node track , 5(4 ) , 11(3 ) , 8(3 ) , 5(3 ) , 3(2 ) , 6(2 ) , 11(1 ) , 8(1 ) , 19(1 ) , 16(1 ) and",
    "13(1 ) are eplaced by 6(4 ) , 12(3 ) , 9(3 ) , 6(3 ) , 4(2 ) , 7(2 ) , 12(1 ) , 9(1 ) , 20(1 ) , 17(1 ) and 14(1 ) respectively .",
    "similarly , for the the white node track , the milestones : 13(3 ) , 11(2 ) , 8(2 ) , 5(2 ) , 3(1 ) , 3(5 ) , 6(5 ) , 11(4 ) , 8(4 ) and 19(4 ) are replaced by 14(3 ) , 12(2 ) , 9(2 ) , 6(2 ) , 4(1 ) , 4(5 ) , 7(5 ) , 12(4 ) , 9(4 ) and 20(4 ) respectively .",
    "tables  [ horizahstab ] and  [ horizahdtab ] display the rules for the motion on a horizontal in a clockwise way around a black node .",
    "the corresponding motion is illustrated by figure  [ horizah ] .",
    "also , tables  [ exhorizahs ] and  [ exhorizahd ] show the application of the rules of tables  [ horizahstab ] and  [ horizahdtab ] respectively , on cells of horizontal tracks and on some of their milestones .",
    "the motion is illustrated by figure  [ horizh ] .",
    "we can see that the centres of the elements of the tracks are applied different rules from those we have seen previously , although horizontal tracks consists of the same elements of the tracks .",
    "let us look at this more carefully .",
    "for instance , in figure  [ horizah ] , when it is visited by a simple locomotive , the cell 3(1 ) is applied rules  58 , 78 , 83 , 87 and 90 respectively .",
    "rule 58 , is a conservative rule : it leaves the cell blank and it is applied when the locomotive is not by the cell . note that the milestones are in neighbours  2 and  5 , but the cell can see the milestones of neighbouring cells in its vertex - neighbours  6 , 8 and  9 , a very slight difference with rule  35 .",
    "when the locomotive approaches 3(1 ) , it is seen in its neighbour  3 and rule  78 , is applied .",
    "then , rule  83 , is applied which makes the locomotive leave the cell .",
    "next , rule  87 , is applied : it witnesses that the locomotive is now in neighbour  1 .",
    "then , rule  90 , witnesses that the locomotive is in the vertex - number  6 of  3(1 ) . note that for the cell  4(1 ) , the neighbourhood is a bit different .",
    "besides the milestones of the element in neighbours  2 and  5 , other milestones , from neighbouring elements , can be seen in the vertex - neighbours  6 and  9 only .",
    "now , rule  58 again apply as the locomotive is seen in the vertex - neighbour of the cell .",
    "later , rule  88 , makes the locomotive enter the cell as it is seen in its neighbour  3 .",
    "rule  61 , makes it leave the cell , rule  71 , can see it in its neighbour  1 and rule  79 , can see it in its vertex - neighbour  7 .",
    "now , the cells  10(1 ) and 5(2 ) are applied the same rules as they are in the same situation , playing the same role .",
    "the locomotive enters such a cell in a standard way but it leaves the cell from an entry and not from the side which is in between two ones which are shared by a black neighbour .",
    "this can be performed in one direction and also in the opposite one as seen later , with table  [ exhorizhs ] .",
    "rule  62 , is the conservative rule : it can see the milestones in the neighbours  3 , 5 and vertex - neighbours  7 and  8 .",
    "the locomotive enters through side  2 , rule  65 , and it leaves the cell by rule  73 , rule  63 , can see the leaving locomotive in the neighbour  1 of the cell .",
    "the milestones 12(1 ) and  13(1 ) are applied already used rules in other contexts in the vertical motions .",
    "we leave this study to the reader .",
    "we also do the same for the motions when the horizontal track goes through the sons of a white node : see tables  [ horizwahtab ] and  [ horizwhtab ] for the rules , tables  [ exhorizwahs ] , [ exhorizwahd ] , [ exhorizwhs ] and  [ exhorizwhd ] for the application of the rules to cells of the tracks and a few milestones which are taken from figures  [ horizwah ] , and [ horizwh ] .    in the abstract and in the introduction",
    ", we mentioned that we relaxed the condition on the rotation invariance of the cellular automaton constructed for the proof of theorem  [ letheo ] . in this part of our study , we can see six rules which are concerned with this point . as an example : rule 21 , has a rotated neighbourhood which is also that of rule  65 : the state of the cell is the same , but the new state is different .",
    "rule  21 appeared in the motion of a simple locomotive going down a vertical track , while rule  65 appears in the motion of a simple locomotive counter - clockwise moving along a horizontal track .",
    "a higher number of rules are the rotated form of another one .",
    "for instance , rules  81 , 93 and 136 are in this case : rule  93 , and rule  136 , are both rotated forms of rule  81 , as can easily be seen . at the end of the paper we shall look at all rules which have the same neighbourhood , up to rotation , the same state but a different new state .",
    "figures  [ fixeg ] and  [ fixed ] illustrate how the locomotive passively crosses a fixed switch .",
    "both figures illustrate the case when the locomotive comes from the left - hand side and when it comes from the right - hand side .",
    "note that the locomotive may be simple as well as double : indeed , the fixed switch plays a role in the round - about , this is why it may be crossed by a double locomotive .",
    "table  [ fixtab ] displays the rules used for the passive fixed switch .",
    "more precisely , the table gives the rules which were not yet used .",
    "in fact several rules from the vertical motions are also used in this case .",
    "as illustrated by the figures , the switch is passive and it works both for a single and a double locomotive whatever the side from which they arrive to the switch .",
    "note that the exceptional cell is the centre of the switch , the cell  0(0 ) in the pictures of figures  [ fixeg ] and  [ fixed ] .",
    "rule  191 , is the conservative rule which is applied when no locomotive crosses the switch .",
    "its milestones are neighbours  2 , and  5 and also the vertex - neighbours  6 , 8 , 9 and  10 which belong to milestones of neighbouring elements of the tracks .",
    "note that the cell  2(1 ) is a milestone shared by two elements , each one belonging to one of the tracks which arrive to the switch .",
    "table  [ exfixs ] gives traces of executions for a simple locomotive crossing the switch , either from the left , left - hand side part of the table , or from the right , right - hand side part of the table .",
    "table  [ exfixd ] does the same for the same cells when a double locomotive crosses the switch .",
    "these traces deal with the cells 1(1 ) , 1(5 ) , 0(0 ) and  1(3 ) for the tracks and with the cells 1(2 ) and 1(4 ) for the particular milestones which are not in the situation of milestones in a vertical track or around a set of cells .",
    "note that the side from which the locomotive arrives to the cell  0(0 ) is indicated by rule  193 , for the left - hand one and rule  200 , for the right hand one .",
    "for rule  193 , the locomotive can be seen in the neighbour  4 of 0(0 ) when it comes from the left - hand side . for rule  200",
    ", it can be seen in neighbour  3 when it comes from the right - hand side .",
    "it can be checked that many rules from table  [ verttracktab ] are used in these executions , this is especially the case for the conservative rules applied to all cells of the tables .",
    "the motion rules are also those of the vertical tracks for cells  1(1 ) and  1(3 ) .      in section  [ scenar ]",
    ", we have seen the idle configurations of the other pieces of the round - about : the doubler , see sub - subsection  [ subsdoubler ] and the selector , see sub - subsection  [ subssel ] .",
    "figure  [ doubleur ] illustrates the motion of the locomotive through the doubler .",
    "the locomotive arrives in the form of a simple one .",
    "the creation of the second cell of the locomotive happens in a simple way : when the locomotive enters the cell  1(1 ) , at the same moment , a black cell is created in the cell  0(0 ) .",
    "that event constitutes the creation of the double locomotive , which is clear in figure  [ doubleur ] as well as in table  [ exdoubl ] .",
    "the rules are given in table  [ doubltab ] .",
    "however , rules of previous tables are also involved , in particular rules from the motions on the vertical tracks .",
    "the cells of the track involved in the doubler are , in the order they are traversed : 2(1 ) , 1(1 ) , 0(0 ) , 1(3 ) , 3(3 ) and 8(3 ) .",
    "the milestones are in the cells : 4(5 ) , 15(1 ) , 1(5 ) , 7(1 ) , 3(1 ) , 2(2 ) , 1(2 ) , 1(4 ) , 2(3 ) , 4(3 ) , 7(3 ) and 9(3 ) . here",
    ", the conservative rule for the central cell is rule  202 : we can see the milestones in neighbours  2 , 3 and  5 as well as in vertex - neighbours  6 and  10 .",
    "the creation of the double locomotive is performed by rules  207 , and rule  206 , simultaneously applied to the cell  1(1 ) and to  0(0 ) , respectively .",
    "note that in rule  206 , the occurrence of a black cell in the vertex - neighbour  9 triggers the creation of the front cell of the locomotive .",
    "although the fork is not connected with the round - about , we place it here as it appears at that point in the table of the rules .",
    "however , it has some link with the doubler as , like for that structure , two locomotives are issued from the fork .",
    "now , in contrast with what happens in the doubler where both locomotives travel together , always in contact with one another , in the fork each created simple locomotive goes its own way : they travel in different directions .",
    "figure  [ fourche ] illustrates this structure .",
    "table  [ forktab ] gives the rules for the fork and table  [ exfork ] displays the rules which are applied in the visit of the fork by a locomotive .",
    "the cells of the tracks involved in the structure are : 8(3 ) , 3(3 ) , 1(3 ) , 0(0 ) and then 1(1 ) , 4(1 ) , 12(1 ) and 33(1 ) in one direction and 1(4 ) , 2(5 ) , 7(5 ) , 20(5 ) and 54(5 ) in the other direction .",
    "the milestones are : 20(3 ) , 23(3 ) , 7(3 ) , 10(3 ) , 2(3 ) , 2(4 ) and then 1(2 ) , 1(5 ) , 2(2 ) , 3(1 ) , 5(2 ) , 11(1 ) , 13(2 ) and 32(1 ) in the first direction and 4(4 ) , 6(5 ) , 3(5 ) , 19(5 ) , 8(5 ) and 53(5 ) for the second one .",
    "the neighbourhood of the cell  0(0 ) is exactly that of a cell of going up vertical tracks .",
    "it is given by the conservative rule  35 : the milestones are in neighbours  2 and  5 and the cell can see the milestones of the neighbouring elements in the vertex - neighbours   7 , 8 and  9 .",
    "when the simple locomotive is in the cell  0(0 ) , rules  41 , and rule  222 , apply to cell  1(1 ) and  1(4 ) respectively , simultaneously creating a locomotive at the corresponding place .",
    "in the cell  1(1 ) , the locomotive can be seen in its neighbour  3 while in the cell  1(4 ) , it can be seen in its neighbour  2 .",
    "note that the cell  1(4 ) behaves like the cells 10(1 ) and  5(2 ) we have looked at in sub - section  [ les_horizontales ] .",
    "the cell  1(4 ) allows the locomotive to perform a turn at right - angle .",
    "figure  [ select ] illustrates the working of the selector of the round - about .",
    "the case of a single locomotive is illustrated by the first two rows of the figure while the case of a double locomotive is illustrated by the last row .",
    "tables  [ selectstab ] and  [ selectdtab ] give the rules for the locomotive and for the cells of the selector , table  [ selectstab ] for a simple locomotive , table  [ selectdtab ] for a double one .",
    "note the very symmetric structure of the exit configurations when no locomotive is around . as shown by the figures , the cells of tracks involved in this structure are 8(3 ) , 3(3 ) , 1(3 ) and 0(0 ) for the arrival and then 1(2 ) , 2(2 ) , 5(2 ) and 13(2 ) for the path leading to the next selector and 1(4 ) , 2(5 ) , 7(5 ) and 20(5 ) for the track leading to the continuation of the required path .",
    "the milestones are 20(3 ) , 23(3 ) , 7(3 ) , 10(3 ) , 2(3 ) and 2(4 ) for the entry path , 1(1 ) , 6(2 ) , 4(1 ) , 14(2 ) , 12(1 ) and 35(2 ) for the path leading to the next selector and 1(5 ) , 6(5 ) , 3(5 ) , 19(5 ) , 8(5 ) and 53(5 ) for the track to the required path .",
    "we remain with the milestones of cells  1(2 ) and  1(4 ) as these cells play the selection role : besides the already mentioned 1(1 ) and 2(3 ) , we have 5(3 ) , 3(2 ) and 10(2 ) for  1(2 ) ; besides the already mentioned 1(5 ) and 2(4 ) , we have 5(4 ) , 7(4 ) , 18(4 ) , 4(4 ) and 10(4 ) for  1(4 ) .    the conservative rule for  0(0 ) is rule  230 , and we can see that the milestones of the cell are neighbours  4 , 5 , 7 and  8 .",
    "rule  232 , and rule  236 , are the conservative rules for  1(2 ) and  1(4 ) respectively .",
    "note that they are rotated forms of one another .",
    "when the locomotive is a simple one , 1(2 ) remains white while the locomotive passes by .",
    "this can checked on rule  243 , and on rule  248 , the locomotive being seen in the neighbour  10 of  1(2 ) for the first rule and in its neighbour  5 for the second one .",
    "for the same passage , 1(4 ) very differently reacts : rule  245 , can see the locomotive through its vertex - neighbour  8 while rule  251 , now seeing the locomotive in the neighbour  2 of the cell makes it become black .",
    "this can be checked on table  [ exsels ] .",
    "when the locomotive is double , 1(4 ) remains white .",
    "it is witnessed by rule  245 again , the locomotive is in the neighbour  8 of the cell , and then by rule  269 , applied when the locomotive is in the neighbours  2 and  8 of the cell . but this time , 1(2 ) behaves differently : rule  243 again applies as the cell can only see the front of the locomotive through a vertex neighbour : it can not know whether it is simple or double . at the next time",
    ", rule  193 , applies as the locomotive can be seen in the neighbours  5 and  10 respectively , making the cell becoming black .      in section  [ scenar ]",
    "we have seen that we can implement both a flip - flop and the active memory switch by using the same basic devices provided that they are suitably arranged .",
    "figure  [ control ] shows how the controller is working , depending on its cell  1(1 ) whose state we call the * colour * of the controller .",
    "figure  [ controls ] shows how the colour of controller is changed by the arrival of the appropriate signal : we remind the reader that the signal has the form of a simple locomotive .",
    "table  [ controltab ] gives the rules corresponding to the illustration given by figures  [ control ] and  [ controls ] .",
    "also , table  [ excontrol ] gives the traces of executions of the rules applied to significant cells when the locomotive arrives to the controller while table  [ excontrols ] gives similar traces when the signal arrives to the controller in order to change its colour .",
    "note that the tracks which crosses the controller passes through the cells  8(4 ) , 3(4 ) , 1(4 ) , 0(0 ) , 1(2 ) , 3(2 ) and  8(2 ) in this order .",
    "the signal for changing the colour of the cell  1(1 ) passes through the cells 16(1 ) , 6(1 ) and 2(1 ) .",
    "the milestones of the path which crosses the controller are 54(4 ) , 57(4 ) , 20(4 ) , 23(4 ) , 7(4 ) , 10(4 ) , 2(4 ) , 2(5 ) , 1(3 ) , 1(1 ) , 4(2 ) , 2(2 ) , 9(2 ) , 7(2 ) , 20(2 ) and 22(2 ) .",
    "the milestones for the path followed by the signal are the cells 41(1 ) , 44(1 ) , 15(1 ) , 18(1 ) and  2(5 ) .",
    "there are three additional milestones which are specific to the controller : the cells 4(1 ) , 10(1 ) and 6(2 ) .",
    "figure  [ control ] shows us that when the cell  1(1 ) is black , the locomotive passes through the tracks , because 1(1 ) constitutes a milestone of the track .",
    "when 1(1 ) is white , the expected milestone being missing , the locomotive is stopped , see rule  315 , the rule shows that the cell  0(0 ) remains white despite the fact that the locomotive is seen in the neighbour  3 of the cell .",
    "indeed , the conservative rule for  0(0 ) when the cell 1(1 ) is white is rule  279 , that rule can be compared with the one which is used when the cell  1(1 ) is black , namely rule  58 ,    table  [ excontrol ] gives the traces of execution for the rules which apply to the cells 1(4 ) , 0(0 ) and 1(2 ) for the tracks , the cells 2(2 ) and 1(1 ) for milestones and the cell 2(1 ) for a witness of transformations induced by the passage of the locomotive .",
    "# 1 # 2 # 3 # 4 to 25pt#1 to 25pt#2 to 25pt#3 to 25pt#4    when the colour of the controller is black , the conservative rule for  1(1 ) is rule  294 , when the locomotive crosses the controller , cell  1(1 ) can see it first through in its neighbour  1 , rule  306 , and then in its vertex - neighbour  6 , see rule  310 , that rule and figure  [ control ] show us that the cell  2(2 ) became white after seeing the locomotive in  0(0 ) , which is the neighbour  7 of  2(2 ) .",
    "indeed , in this situation , rule  266 , applies to  2(2 ) .",
    "when 2(2 ) is white , applying rule  312 , allows us to restore the black state in the cell .",
    "this problem comes from the fact that rule  266 was needed in the selector for the cell  0(0 ) when a double locomotive crosses that cell .",
    "note that after rule  310 , rule  294 again applies to the cell  1(1 ) .",
    "figure  [ controls ] illustrates the action of the signal on the cell  1(1 ) : when the cell is black , the signal turns it to white and conversely .",
    "table  [ excontrols ] displays which rules are used to which cells when the signal arrives in order to change the colour of the cell  1(1 ) .",
    "the conservative rules for the cell  1(1 ) are rule  294 , we have already seen , when the cell is black , it is rule  280 , when the cell is white .",
    "we can see that the neighbourhood is the same for rules  294 and  280 : the milestones are in the neighbours  4 , 5 and  9 of the cell , and the difference lies in the state of the cell itself .",
    "the change from black to blank is performed by rule  302 , which can see the signal in its neighbour  2 .",
    "the reverse change is obtained by rule  290 , again as the signal is seen in the neighbour  2 of the cell .",
    "# 1 # 2 # 3 # 4 to 25pt#1 to 25pt#2 to 25pt#3 to 25pt#4    other neighbours of the cell  1(1 ) can see those changes . as an example which is not given in table  [ excontrol ] , we take the cell  1(5 ) which is always blank .",
    "the conservative rule is rule  299 when the cell 1(1 ) is black , and it is rule  286 when 1(1 ) is white . when the locomotive crosses the controller in the black colour , rule  305 , can see the locomotive in its neighbour  7 , then rule  308 , can see it in its neighbour  1 and then , rule  299 is again applied .",
    "when 1(1 ) is white , rule  316 , is applied when the locomotive appears : it can be seen in its neighbour  7 and then the locomotive disappeared , so that rule  286 again applies .",
    "table  [ excontrols ] shows the rules applied when the signal arrives , changing the colour of the cell  1(1 ) .      as we said in section  [ scenar ] , the controller of the passive memory switch works in a different way than that of the active switches .",
    "for this reason , we call it the * controller - sensor * as it does not stop the locomotive when it runs through the non - selected track . as in the case of the active switches , this controller is characterized by the state of a cell , again the cell  1(1 ) , see figure  [ controlsign ] . here , the cell 1(1 )",
    "is called the * sensor * as its role is to detect a passage , not to stop it . as in the case of the controller",
    ", we say that the state of 1(1 ) is the * colour * of the sensor .",
    "the tracks goes along the cells 33(2 ) , 12(2 ) , 4(2 ) , 1(2 ) , 0(0 ) and 1(4 ) , 4(4 ) , 12(4 ) and 33(4 ) in this order .",
    "this order is the opposite of what he have seen for the passage of a locomotive through the controller of an active switch .",
    "this raises no problem thanks to the possibility to use round - abouts if needed : the round - abouts do not use the controllers nor the controller - sensors .",
    "the difference of direction induces a sharp difference in the milestones . here",
    "the milestones of the track of the locomotive are : 34(3 ) , 86(2 ) , 13(3 ) , 31(2 ) , 5(3 ) , 10(2 ) , 2(3 ) , 2(2 ) , 2(5 ) , 3(4 ) , 5(5 ) , 11(4 ) , 13(5 ) , 32(4 ) , 34(5 ) and 87(4 ) .",
    "now , there is a common point between the controller - sensor and the controller of the active switches : it is the path of the signal for changing the colour of the sensor . the path and the milestones are the same . however a difference again : here , in the case of the controller - sensor , the colour is changed only if the sensor is black . when it is white , it is changed to black by the very passage of the locomotive",
    ", there are also additional milestones : they consists of the cells 7(2 ) , 6(2 ) , 4(1 ) , 10(1 ) and 2(4 ) .",
    "those actions are illustrated by figure  [ controlsign ] .",
    "table  [ passmemotab ] gives all the new rules induced by those constraints .",
    "consider the case when the sensor is white .",
    "the conservative rule for  0(0 ) is rule  317 , its milestones are in its vertex - neighbours  6 , 8 , 9 and  10 .",
    "table  [ exctrlsn ] displays the rules used for the cells of the controller - sensor when the locomotive passes through the non - selected track .",
    "when the locomotive arrives at the cell  0(0 ) , it is seen from the neighbour  3 of the cell see rule  325 , here , the side  1 of cell  0(0 ) is shared with 1(5 ) . then , rule  328 , makes the locomotive leave the cell .",
    "rule  25 , witnesses that the locomotive left  0(0 ) as it can be seen in the neighbour  5 of  0(0 ) .",
    "the rule also witnesses that the sensor turned to black : the cell  1(1 ) is the neighbour  2 of  0(0 ) which is now black .",
    "rule  25 is a rule of the vertical track is also applied here because at that very moment , the cell  2(2 ) became white and the cell  2(2 ) is the vertex - number  8 of the cell which , usually , is black .",
    "after that , rule  289 , is applied .",
    "it is the conservative rule of  0(0 ) when the sensor is black : remember that the cell  1(1 ) is the neighbour  2 of  0(0 ) .",
    "the rule also witnesses that the cell  2(2 ) returned to black .",
    "we leave to the reader the examination of the application of the rules given by table  [ passmemotab ] to the cells indicated in table  [ exctrlsn ] .",
    "the first two rows of figure  [ controlsign ] are of help for such a task .",
    "table  [ exctrlbands ] gives traces of execution for the rules applied to the cells when the locomotive crosses a black sensor and for those concerned by the change of the sensor from black to white . in the latter case ,",
    "the comparison of the right - hand side part of table  [ exctrlbands ] with the left - hand side part of table  [ excontrols ] show us that the same rules apply .",
    "this explains why the last row of figure  [ controlsign ] is very similar to that of the first line of figure  [ controls ] for the part of these figures involved by the cells concerned by the signal : the track where the signal goes , their milestones and the cell  1(1 ) with its neighbours .",
    "similarly , the behaviour of the cell  2(2 ) is the same in the first line of figure  [ control ] and in the first one of figure  [ controlsign ] .",
    "an important difference should also be noticed between the first line of figure  [ controlsign ] and the first line of figure  [ control ] .",
    "it is the fact that the sensor is white in the first case while it is black in the second one .",
    "also , in the first case the sensor changes its colour while its colour is unchanged in the second one .",
    "this explains why a few rules in the tables  [ exctrlsn ] and  [ exctrlbands ] are taken from table  [ passmemotab ] .    as examples ,",
    "consider the cells  0(0 ) , 1(1 ) and  2(2 ) when the locomotive passes while the sensor is black .",
    "as already mentioned , the conservative rule for  0(0 ) when the cell  1(1 ) is black is rule  289 . when the locomotive is seen by  0(0 ) ,",
    "the locomotive is in the neighbour  3 of  0(0 ) , so that rule  344 , is applied . at the next time , as the locomotive vanished , rule  289 is again applied . in the case of",
    "1(1 ) when it is black , the conservative rule is rule  294 , a rule from table  [ controltab ] .",
    "when the cell can see the locomotive which appears as the neighbour  6 of  1(1 ) , rule  345 , is applied . again , as the locomotive vanishes at the next time , rule  294 is again applied . at last , the conservative rule for  2(2 ) is rule  143 , a rule for the horizontal tracks . here too , the presence of the locomotive is noticed for one time only : the locomotive is in the neighbour  1 of  2(2 ) : rule 347 , is applied . at the next time , rule  143 is applied : the locomotive vanished .",
    "the tables of this section completes the proof of theorem  [ letheo ] .",
    "we already mentioned in section  [ rules ] that the automaton we constructed to prove theorem  [ letheo ] is not rotation invariant .",
    "we used this property in order to suitably number the sides of each cell . among the rules displayed in the various tables of section  [ rules ] , many of them are rotated forms of other rules .",
    "as an example , rules  3 , 39 , 126 and 286 , _",
    "i.e. _ and respectively , are rotated form of each other .",
    "they apply to white cells with a single black neighbour , neighbour  1 , 2 , 5 and 3 respectively .",
    "we shall say that in the corresponding neighbourhoods there is a shift by 1 , 4 and  2 for rules  39 , 126 and  286 respectively with respect to that of rule  3 .",
    "# 1 # 2 # 3 # 4 # 5 # 6 # 7    now , there are 14 pairs of rules in which the neighbourhoods are rotated , the state of the cell is the same but its new state is different . tables  [ diffs1 ] and  [ diffs2 ] give the rules together with the cells to which they apply and in which part of the circuit .",
    "the part of the circuit is identified by a few letters as follows . for the tracks ,",
    "v means vertical and h means horizontal ; d as second letter means down while u means up ; d , s as a last letter indicates a double , simple locomotive , respectively ; c , a means a clockwise , counter - clockwise running , respectively ; w means that the horizontal goes around a white node ; when w is missing , this means that the horizontal goes around a black node .",
    "the fixed switch is represented by fx , l , r indicates from the left- , right - hand side respectively .",
    "the fork is represented by fk , the doubler by d. the controller is denoted by  c while the controller - sensor is defined by sn , b , w indicate the colour of the controller or the sensor and s indicates the run involving the signal . at last",
    ", sl denotes the selector , s and d indicating whether it is crossed by a simple or a double locomotive .",
    "the tables indicate that the relaxation of the rotation invariance plays an important role .",
    "however , the number of rules concerned is a bit less than ten percents of the rules .",
    "also the high number of rotated forms of rules is an interesting feature . at last , besides the first rules numbered from  1 to  10 , several rules are used in many different places . as an example",
    ", rule  190 , is used in many places : 5(3 ) in horizontal tracks which clockwise go around a white node , both for the simple and the double locomotive .",
    "the rule is also applied to the cell 1(5 ) in the controller and in the controller - sensor when the black colour is changed to the white one .",
    "we have already seen that these motions of the signal are very similar in both those cases .",
    "three rules have all their rotated forms present in the tables : rule  16 , rule  23 and rule  56 . as an interesting example",
    ", we have chosen rule  16 , whose other forms are rule  81 , rule  93 , rule  136 , and rule  320 , with respect to rule  16 , the shifts applied to rule  81 , 93 , 136 and  320 are 3 , 2 , 4 and  1 , respectively .",
    "rule  16 is present very often , in many situations , the horizontal motions excepted .",
    "rule  81 is applied to 1(1 ) and 1(3 ) each time once in the horizontal motions with the simple locomotive around a black node .",
    "rule  93 is applied once to  1(1 ) in the same motions .",
    "rule  136 is applied once to 1(3 ) in the clockwise motion only .",
    "rule  320 is applied to 5(3 ) and 13(3 ) , once in the sensor , in the passage of the locomotive , whatever the colour of the sensor .",
    "it should be noted that the rules of table  [ diffs1 ] apply to many cells , in particular the first five pairs of the table .",
    "this is due to the fact that the rules mainly concern elements of the tracks .",
    "by contrast , in each pair of table  [ diffs2 ] , each rule concerns at most two cells .",
    "several questions are raised by this result . how to reduce the number of states in this situation ?",
    "is it possible to obtain two states with a moore neighbourhood and still observing rotation invariance ?",
    "still hard work ahead .",
    "m. margenstern , _ cellular automata in hyperbolic spaces , vol .",
    "@xmath33 , theory _ , collection : _ advances in unconventional computing and cellular automata _ ,",
    "editor : andrew adamatzky , old city publishing , philadelphia , ( 2007 ) , 422p .",
    "m. margenstern , _ cellular automata in hyperbolic spaces , vol .",
    "@xmath34 , implementation and computations _ , collection : _ advances in unconventional computing and cellular automata _ , editor : andrew adamatzky , old city publishing , philadelphia , ( 2008 ) , 360p ."
  ],
  "abstract_text": [
    "<S> in this paper , we prove that there is a weakly universal cellular automaton on the pentagrid with two states . </S>",
    "<S> this paper improves in some sense a previous result with three states . </S>",
    "<S> both results make use of _  la moore _ neighbourhood </S>",
    "<S> . however , the result with three states is rotation invariant while that with two states is not . in both cases , at each step of the computation , the set of non quiescent states has always infinitely many cycles . </S>"
  ]
}
{
  "article_text": [
    "actual causation has puzzled philosophers since at least the work by .",
    "one way of phrasing the problem is as follows : suppose we know the causal laws that govern some domain , and that we then observe a story that takes place in this domain ; when should we now say that , in this particular story , one thing actually caused another ?",
    "recent work by has also garnered interest in this topic in the ai community .",
    "their account ( which i will refer to as _ hp _ ) constructs a formal definition that tries to capture this intuition in the context of structural models @xcite . to be more concrete , it defines when some random variables @xmath0 of the structural model having values @xmath1 can be counted as an actual cause for @xmath2 .    in previous work ,",
    "i have tried to show that the knowledge representation properties of pearl s structural models can be improved by borrowing representations and techniques from logic programming . in particular , introduced the probabilistic logic programming language of logic programming with annotated disjunctions , for which riguzzi ( 2008 ; 2010 ) implemented sld and slg based resolution algorithms .",
    "further analysis of this language has lead to a reformulation of its semantics , called _ cp - logic _ , which attempts to clarify its causal aspects and examine its relation to pearl s work @xcite .",
    "a more recent paper @xcite showed that pearl s analysis of interventions and counterfactuals in the context of structural models can be elegantly redone in the context of cp - logic , yielding better results for a number of examples , most notably when cyclic causalities are involved .",
    "the goal of this paper is to examine the notion of actual causation in the context of cp - logic .",
    "section [ sec : mot ] will start with some motivation , by explaining a few of the differences between structural models and cp - logic , and offering some hand - waving arguments for why cp - logic might offer a more appropriate setting for the study of actual causation .",
    "the semantics of cp - logic is briefly recalled in section [ sec : prel ] .",
    "then , section [ sec : hp ] dives into the details of actual causation by discussing the hp definition , while section [ sec : ac ] gives my own account .",
    "the traditional way of testing such a definition is to run through a number of `` tricky '' examples and checking whether the obtained answers are intuitively plausible . in section [ sec : ex ] , i will follow suit . finally , section [ sec : imp ] briefly comments on a naive implementation in prolog that can be downloaded to play with my definitions",
    "a structural model is based on a set of random variables ( rvs ) .",
    "each rv has an associated domain of possible values .",
    "the simplest case are boolean rvs , which have @xmath3 as their domain , and can therefore be thought of as propositional symbols or ground atoms .",
    "boolean rvs suffice for typical examples of actual causation , so i will from now on restrict attention to just these .",
    "a structural model then consists of a set of equations @xmath4 , which define the value of the rv @xmath5 in terms of the rvs @xmath6 by a boolean function @xmath7 .",
    "the rvs that appear in the left - hand side of such an equation are called _ endogenous _ , and the other ones _",
    "exogenous_. typically , these sets of equations are assumed to be acyclic .",
    "their meaning is formalized by the obvious possible world semantics : each assignment of values to the rvs that satisfies all of the equations is a possible world .",
    "an acyclic set of equations has the useful property that an assignment of values to the exogenous rvs uniquely determines a single possible world .",
    "pearl uses structural models to represent causal relations : each equation @xmath8 is taken to mean that the causes for @xmath5 taking value @xmath9 are all assignments @xmath10 for which @xmath11 .",
    "this representation is used by pearl to great effect , studying interventions , counterfactuals , and of course also actual causation .    despite its successes ,",
    "however , there is something peculiar about the structural model representation of causal relations : it does not take into account their dynamic nature .",
    "suppose , for instance , that you make the causal claim that dropping a glass causes it to break .",
    "if i do nt believe you , i might challenge you to prove your claim .",
    "how would you do this ?",
    "presumably , you would first hold out an unbroken glass . then",
    ", you would drop it , so that i could watch it fall , hit the floor , and break . in other words",
    ", you would show me a transition from a state of the world in which the glass is whole to a one in which it is broken .",
    "if you can convince me that it was indeed your dropping the glass that initiated this transition , then you have proven your causal claim .",
    "what this little thought experiment shows is that the idea of a transition from one state of the world to the next is inherently part of the way in which we interpret causal statements .",
    "however , structural models have nothing to do with such transitions . for instance , the causal claim about glasses breaking would just be represented by an equation @xmath12 , which determines two possible worlds : @xmath13 and @xmath14 . in this sense ,",
    "structural models make complete abstraction of the dynamic aspects of causality , until all that remains is a static picture of how the values of different random variables can be defined in terms of each other .",
    "other approaches to causality do not share this static worldview .",
    "for instance , gives an explicitly dynamic account of causation .",
    "he represents causal systems by means of probability trees , in which edges represent transitions between states of the world . for example , in the following picture , the edge going from @xmath15 to @xmath16 represents a transition from a state in which joe hasnt yet taken a swing at the ball to one in which he has and missed : @xmath17\\\\ & n_1 \\ar[ld]_{\\text{joe misses ball}}^{0.75 } \\ar[rd]^{\\text{joe hits ball}}_{0.25}\\\\ n_2 \\ar[d ] & & n_3\\ar[d]\\\\ \\ldots & & \\ldots } \\end{split}\\ ] ] the edge @xmath18 represents a transition of the same state @xmath15 to a state where joe has hit the ball .",
    "together , these two edges represent a non - deterministic event , namely that of joe s taking a swing at the ball , which may result in one of these two outcomes .",
    "the edges are labeled with the probabilities of the outcomes : the probability of joe s swing missing is @xmath19 and that of it hitting is @xmath20",
    ".    this paper will use _ cp - logic _ as its formal language , which is essentially just a modular , syntactic representation for such shaferian probability trees . a theory in cp - logic",
    "represents the causal structure of a domain by means of a set of _ causal probabilistic laws _ ( cp - laws , for short ) .",
    "each such cp - law is a blue - print for a class of non - deterministic events .",
    "for instance , the following cp - law : @xmath21 states that , for every player @xmath22 and ball @xmath23 , player @xmath22 s taking at swing at ball @xmath23 causes a non - deterministic event , which has as one possible outcome that @xmath22 hits @xmath23 ( and this happens with probability @xmath20 ) , and as its other possible outcome that @xmath22 misses @xmath23 ( which happens with probability @xmath19 ) .",
    "if @xmath22 and @xmath23 are instantiated to , respectively , a particular player and a particular ball , say joe and the twelfth pitch , the we obtain a description of one particular event ( that may or may not happen , depending on whether joe decides to swing ) : @xmath24 this instantiated cp - law can be seen as a textual representation of picture , provided that , of course , node @xmath15 represents a state of the domain where joe has decided to take a swing at this particular pitch . in this way",
    ", each instantiation of a cp - law describes a piece of probability tree .",
    "as will be explained in more detail later , an entire cp - theory describes a class of probability trees , each of which can be constructed by putting these small pieces together .    unlike structural models",
    ", the formal semantics of cp - logic therefore does provide mathematical objects that represent transitions between states of the world . as argued by ,",
    "these transitions are important for a study of actual causation . indeed ,",
    "when the goal is to figure out what caused what in a given _ story _ , it is obviously convenient to have a language whose formal semantics already offers objects that correspond in a natural way to stories .",
    "a branch of a shaferian probability tree is precisely such an object , because , like a story , it is a description of a sequence of events that change the state of the world .",
    "there is also a second argument in favour of cp - logic .",
    "the goal of actual causation is to explain why things happened .",
    "typically , though , not everything is in need of explanation . a detective solving a murder case , for instance , will be interested in why the victim is dead , but he wo nt care about why he was ever alive in the first place .",
    "the detective s causal model will therefore list causes for dying ( poison , gun shot ,  ) , but not for living ( sexual intercourse , ivf ,  ) . in more technical terms , the detective considers living to be the _ default _ state of a person , and he is only interested in _ deviations _ from this default .",
    "many authors , such as or , have argued that actual causation should be studied under the assumption that each rv has such a default state .",
    "structural models make no distinction between the different values of a rv .",
    "consequently , a rv @xmath25 with values @xmath26 and @xmath27 , and a rv @xmath28 with values @xmath27 and @xmath26 are completely interchangeable . in cp - logic , this is not the case . here , each rv ( i.e. , ground atom ) has * f * as its default value .",
    "this means that the mere existence of the atom @xmath29 implies that the default condition is for @xmath30 to be dead , and that he can only come to life when there is a sufficient cause for this .",
    "by contrast , the detective s theories will contain atoms such as @xmath31 , indicating that living is the default and death is in need of causal explanation . in the probability trees generated by a cp - theory ,",
    "an atom always starts out at its default value , and only deviates from this when it has sufficient cause to do so .",
    "lacking space for a full review of cp - logic , i will only summarize the main ideas and refer to @xcite for details .",
    "the general form of a cp - law is : @xmath32 here , @xmath33 is a first - order formula and the @xmath34 are atoms , such that the tuple of variables @xmath1 contains all free variables in @xmath33 and the @xmath34 .",
    "the @xmath35 are non - zero probabilities with @xmath36 .",
    "such a cp - law expresses that @xmath33 causes some ( implicit ) non - deterministic event , of which each @xmath34 is a possible outcome with probability @xmath35 . if @xmath37 , then at least one of the possible effects @xmath34 must result if the event caused by @xmath33 happens ; otherwise , it is also possible that the event happens without any ( visible ) effect on the state of the world . for the purpose of this paper ,",
    "the propositional fragment of cp - logic suffices , so i will from now on restrict attention to cp - laws in which the tuple of variables @xmath1 is empty .    for a cp - law @xmath38 , we refer to @xmath33 as the _ body _ of @xmath38 , and to the sequence @xmath39 as the _ head _ of @xmath38 .",
    "we denote these objects as @xmath40 and @xmath41 , respectively , and also write @xmath42 for the set of all @xmath34 for which there exists an @xmath35 such that @xmath43 . for cp - laws",
    "that are vacuously caused , @xmath40 may be omitted .",
    "if a cp - law has a deterministic effect , i.e. , it is of the form @xmath44 , it is also written simply as @xmath45 .",
    "a _ cp - theory _ is a finite set of cp - laws .",
    "such a cp - theory describes the non - deterministic evolution of a domain , which is formally represented by a shaferian probability tree .",
    "initially , all rvs of this domain ( i.e. , all ground atoms ) are in their default state .",
    "this means that we can describe the initial state of the domain , which corresponds to the root of the probability tree , by the interpretation that assigns * f * to each of them .",
    "we then extend this root by picking a cp - law @xmath38 whose precondition @xmath40 is satisfied according to this interpretation and creating a child node for each pair @xmath46 in @xmath41 .",
    "the edge to child @xmath47 is labeled with the probability @xmath35 and the corresponding new state of the domain is constructed from the previous state by switching @xmath48 to its deviant state * t*. the cp - law @xmath38 has now happened , and will not happen again .",
    "we repeat this process of adding children to one of the leaf nodes of the current tree , until this is no longer possible , i.e. , until for all leaves @xmath49 of the current tree it is the case that all rules @xmath38 that have not yet happened in @xmath49 have a precondition @xmath40 that is false in @xmath49 .",
    "the resulting trees are called the _ execution models _ of the cp - theory . for a node @xmath50 of the tree ,",
    "i denote by @xmath51 the interpretation that corresponds to the state of the world at that node , and , if @xmath50 is not a leaf , by @xmath52 the cp - law that was used to create the children of this node .",
    "the construction of execution models is quite non - deterministic , in the sense that in any particular node of the tree , there can be many cp - laws that may be used to extend it .",
    "the question is now whether each of these trees actually reflects a sensible way in which a domain described by the cp - theory might evolve .",
    "the answer is a qualified `` yes '' , and depends on precisely how we choose to interpret negation appearing in the body of a cp - law .",
    "consider the following example : @xmath53 we could take the body of this cp - law to mean that this transition may happen in any state where @xmath54 is still at its default state * f * , such as , by definition , the initial state in which suzy has no yet made up her mind about throwing . taking this view ,",
    "every probability tree constructed according to the above principles can indeed be seen as a sensible description of how the domain might evolve . however , this is not very useful .",
    "as argued by , it is more interesting to read negation in a slightly different way , namely , as not just saying that @xmath54 is still at its default value in the current state , but that it can actually _ never _ deviate any more . in other words , according to this reading , the above cp - law will only be applicable _ after _ suzy has decided that she will not refuse the throw .",
    "this idea is formalized in the semantics of cp - logic by means of a construction similar to the gelfond - lifschitz reduct .",
    "we use this to compute , for each state @xmath50 , an overestimate @xmath55 of all atoms that can still be caused in this @xmath50 .",
    "only if an atom @xmath56 does not belong to @xmath57 , do we then say that @xmath58 holds in @xmath50 . if there are no loops containing double negation ( i.e. , some @xmath59 causing @xmath60 and @xmath61 causing @xmath62 ) , then it is the case that , in any branch of a probability tree , each cp - law must either happen at some point , or else become impossible . showed that there is a close connection between the resulting semantics and the well - founded model construction for a logic program",
    "each probability tree @xmath63 defines , in the obvious way , a probability distribution @xmath64 over its leaves . for an execution model @xmath63 of a cp - theory @xmath65",
    ", this distribution @xmath64 induces a probabilistic possible world semantics : the probability @xmath66 of an interpretation @xmath67 is @xmath68 , where the sum is taken over leaves @xmath49 of @xmath63",
    ". showed that each execution model @xmath63 of a cp - theory @xmath65 defines the same possible world semantics @xmath64 .",
    "for instance , the two trees shown on page are execution models of the same theory and , even though they are not isomorphic , they both define the same @xmath64 . in this way",
    ", each cp - theory @xmath65 defines a unique probability distribution , which is denoted as @xmath69 .",
    "the probability of a formula @xmath33 can then be defined as @xmath70 .",
    "the fact that @xmath69 does not depend on the choice of any particular execution model @xmath63 may help to explain why structural models choose to ignore the dynamic aspects of causality in the first place .",
    "indeed , this result shows precisely that , for applications which only care about properties of the final state that the domain will eventually reach , the details of how this final state came about can be safely ignored .",
    "as i attempt to show in this paper , though , actual causation is _ not _ such an application .    like structural models",
    ", cp - logic also makes a distinction between exogenous and endogenous random variables . with @xmath5 the set of all exogenous atoms ,",
    "the semantics of a cp - theory now becomes relative to an interpretation @xmath71 for these atoms .",
    "in particular , an execution model for @xmath65 _ given @xmath71 _ is defined as a execution model that starts not from a root in which _ all _ atoms are * f * , but instead starts with only the endogenous atoms being * f * and the exogenous atoms being interpreted by @xmath71 .",
    "have shown that for each interpretation @xmath71 for the exogenous predicates of a cp - theory @xmath65 , all execution models @xmath63 given @xmath71 define the same probability distribution @xmath64 , which is denoted as @xmath72 .",
    "this section briefly recalls the hp account . their paper starts with this example :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ suppose that two arsonists drop lit matches in different parts of a dry forest , and that both cause trees to start burning , until the entire forest burns down .",
    "both matches are necessary to burn down the forest ; with only one match , the fire would die downit is clear that both arsonists are an actual cause of the forest burning down .",
    "hp reach this conclusion as follows . to represent the causal structure of the example , they use a structural model consisting of a single equation : @xmath73 the particular story under consideration",
    "is then represented by the following assignment of values to the exogenous rvs : @xmath74 .",
    "this of course also uniquely determines the values of the endogenous rvs : @xmath75 .",
    "the hp definition is now reproduced below . in it",
    ", @xmath76 is a structural model with endogenous rvs @xmath77 , @xmath78 an assignment of values to the exogenous rvs , @xmath0 a tuple of endogenous rvs , and @xmath33 a boolean formula in the rvs .",
    "the notation @xmath79 \\phi$ ] means that @xmath33 holds in @xmath80 after the intervention of assigning @xmath1 to @xmath0 is performed , i.e. , each @xmath81 has its defining equation removed from @xmath76 and replaced by @xmath82 .",
    "[ hp ] @xmath83 is an actual cause of @xmath33 in @xmath84 if the following three conditions hold .",
    "* @xmath85 ( that is , both @xmath86 and @xmath33 are true in the actual world . ) * there exists a partition @xmath87 of @xmath88 with @xmath89 and some setting @xmath90 of the variables in @xmath91 such that if @xmath92 for all @xmath93 , then both of the following conditions hold : * * @xmath94\\lnot\\phi$ ] . in words , changing @xmath91 from @xmath95 to @xmath96 changes @xmath33 from true to false . *",
    "* @xmath97\\phi$ ] for all subsets @xmath98 of @xmath99 and all subsets @xmath100 of @xmath101 . in words , setting any subset of variables in @xmath99 to their values in @xmath102 should have no effect on @xmath33 , as long as @xmath0 is kept at its current value @xmath1 , even if all the variables in an arbitrary subset of @xmath101 are set to their original values in the context @xmath78 .",
    "* @xmath0 is minimal ; no subset of @xmath0 satisfies conditions ac1 and ac2 .",
    "minimality ensures that only those elements of the conjunction @xmath103 that are essential for changing @xmath33 in ac2(a ) are considered part of a cause .    with @xmath104 , @xmath105 and @xmath106 ,",
    "this definition provides the result that @xmath107 actually caused @xmath108 , since if we change @xmath5 to @xmath109 , while leaving @xmath110 at its original value ( this trivially satisfies ac2(b ) ) , we obtain @xmath111 as required by ac2(a ) .",
    "in other words , in this example , we get actual causation from a simple counterfactual dependency : if it had nt been for @xmath107 , the forest would nt have burned down .",
    "hp also consider a disjunctive variant of this example , where a single match already suffices to burn down the forest ( @xmath112 ) .",
    "this causes the straightforward counterfactual criterion to fail , since stopping only one of the arsonists does not stop the forest burning down .",
    "this motivates the additional machinery of the above definition . by considering the context",
    "in which @xmath113 , that is @xmath110 and @xmath114 , we can re - establish the counterfactual dependency of @xmath115 on @xmath104 .",
    "as we have seen , a question of actual causation can only be asked in the presence of two pieces of information : a causal model of a domain ( the @xmath76 of definition [ hp ] ) and a story that takes place in this domain ( the @xmath78 ) .",
    "my definition will of course assume that the causal model is given in the form of a cp - theory @xmath65 . in the context of cp - logic ,",
    "the most obvious formal counterpart of a `` story '' is a branch of an execution model of @xmath65 .",
    "already , this allows us some more room for nuance than hp , as the following example from shows .    _",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ suzy and billy might each decide to throw a rock at a bottle .",
    "if suzy does so , her rock shatters the bottle with probability @xmath116 .",
    "billy s aim is slightly worse and he only hits with probability @xmath117 . _",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    this domain corresponds to the following set of cp - laws , where @xmath118 and @xmath119 are exogenous : @xmath120 assuming that suzy and billy both throw , there still exist two different execution models of the theory . representing the states in which the bottle is broken by an empty circle , and those in which it is still whole by a full one",
    ", they look like this : + [ trees ] @h=0.8 cm & & ^0.9|(.3 ) _ 0.1|(.3 ) + & _ 0.8|(.3 ) ^0.2|(.3 ) & & _",
    "0.8|(.3 ) ^0.2|(.3 ) + & & & & @h=0.8 cm & & ^0.8|(.3 ) _ 0.2|(.3 ) + & _ 0.9|(.3 ) ^0.1|(.3 ) & & _",
    "0.9|(.3 ) ^0.1|(.3 ) + & & & & + in the left execution model , suzy s rock reaches the bottle before billy s does , whereas in the right one , it is billy s rock that gets there first . as discussed at the end of section [ sec : prel ] , this difference is irrelevant if we are only interested in the final outcomes that might be reached : the probability of the bottle shattering is @xmath121 in both models .",
    "however , the difference becomes relevant when we want to judge actual causation .",
    "indeed , in the left execution model , it is possible for suzy",
    "s rock to _ actually _ break the bottle even though billy s also would have ( in particular , this happens in the leftmost branch of the tree ) .",
    "according to the execution model on the right , however , this is impossible : here , suzy s rock can only actually break the bottle if billy s rock fails to do so .",
    "goes on to consider the following story :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ suzy and billy both pick up rocks and throw them at a bottle .",
    "rock get there first , shattering the bottle .",
    "since both throws are perfectly accurate , billy s would have shattered the bottle had it not been preempted by suzy s throw . _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    this story tells us precisely that we are in the leftmost branch of the left execution model above . hence , suzy s rock should be the actual cause of the bottle breaking , and not billy s . before showing how i reach this conclusion in the context of cp - logic ,",
    "let me first remark that things are more difficult for the hp account .",
    "their paper first tries the following straightforward structural model : @xmath122 here , there is no such thing as one execution in which suzy s rock reaches the bottle first and one in which billy s is first .",
    "hall s story therefore seems to say nothing more than that all five rvs are @xmath123 , and the phrase `` suzy s rock gets there first '' contributes nothing .",
    "of course , because it is precisely this phrase that determines which rock actually broke the bottle , this causal model does not work .",
    "hp fix the problem by introducing two new random variables : @xmath124 ( `` billy s rock hits the ( unbroken ) bottle '' ) and @xmath125 .",
    "the order in which the two rocks actually reach the bottle can then be encoded _ in the structure of the model _ : @xmath126 to me , this does not seem the right way to go .",
    "the order in which the rocks arrive is a purely contingent matter , which belongs to the details of the particular story that is being told , and _ not _ to the general causal structure of the domain . saying that suzy s rock arrives before billy s should not be placed on the same level of causal discourse as the statement that throwing rocks at bottles causes them to break .",
    "this is not just a matter of taste , but also has practical consequences .",
    "if we would want to know whether suzy s rock would still have been the actual cause of the bottle breaking if billy s rock had gotten there first , then  in the hp account  we would not just have to look at a different story in the same domain , but we would have to change the structure of our causal model .",
    "such hand - tailoring of the causal model to the question under consideration is undesirable , and , as i will now show , it is not needed in cp - logic .",
    "my definition too will be heavily based on the intuition of counterfactual dependency from a cause @xmath65 to an effect @xmath127 .",
    "therefore , i first formalize the following criterion :    if all events happen in the way they actually happened _ with the exception that @xmath65 is somehow prevented from occurring _ , then @xmath127 will no longer occur .",
    "( * )    this requires some mathematical machinery .",
    "first , we need to be able to fix the outcome of certain events . for a cp - law @xmath38 of the form @xmath128 , we write @xmath129 to denote the deterministic cp - law @xmath130 .",
    "if we now have a branch @xmath23 that tells us what actually happened , then we can define as follows a theory that fixes the outcome of all events that happened to their actual outcome .",
    "let @xmath131 be a branch of an execution model of a cp - theory @xmath132 .",
    "we define @xmath133 as the union of two disjoint sets @xmath134 and @xmath135 , where @xmath134 contains all cp - laws from @xmath132 that did not happen in branch @xmath23 , i.e. , @xmath136 , and @xmath135 consists of all @xmath137 for which @xmath38 caused @xmath138 in @xmath23 , i.e. , @xmath139    we also need an antonymical transformation , which prevents some @xmath34 from occurring . for an @xmath38 of the same form as above , we write @xmath140 for : @xmath141 to prevent an atom @xmath138 entirely",
    ", it now suffices to apply this transformation to all cp - laws that might cause it .",
    "given a theory @xmath132 , we therefore define @xmath142 as : @xmath143 by combining this transformation with the previous one , we can now construct a theory @xmath144 which corresponds precisely to the counterfactual eventuality that everything happens precisely as it did in branch @xmath23 , with the exception that @xmath65 is somehow prevented from occurring .",
    "i thus formalize the counterfactual criterion ( * ) , by expressing that , according to this new cp - theory @xmath144 , @xmath127 will not occur .",
    "let @xmath131 be a branch of an execution model of a theory @xmath132 . for two atoms @xmath65 and",
    "@xmath127 , such that both @xmath65 and @xmath127 hold in @xmath145 , we say there is a _ counterfactual dependency _ from @xmath65 to @xmath127 if @xmath146 where @xmath147 and , to cover the case where @xmath65 is exogenous , @xmath148 is @xmath149 .    here",
    ", saying that @xmath150 is of course equivalent to @xmath127 being false in each leaf @xmath49 of each execution model of @xmath151 .    this intuition of counterfactual dependency forms the core of the concept of actual causation , but as discussed above , it is in itself not enough .",
    "the additional aspect is the idea of _ relevance_. a causal model might make provisions for a large number of eventualities , many of which may not have been relevant in the actual course of events .",
    "it is typical for judgments of actual causation that truly irrelevant causal mechanisms are ignored , even when they might appear to become relevant in a counterfactual context .",
    "the typical case where this intuition manifests itself is when counterfactual dependencies are masked by _",
    "redundant causation _ : there is some back - up mechanism waiting in the wings , which will ensures that the effect happens anyway , even if we preempt its actual cause .",
    "the example of suzy and billy is a good illustration of this .",
    "the reason why we nevertheless insist that suzy is the actual cause of the bottle shattering is precisely a criterion of relevance : because suzy s rock got to the bottle first , billy s was irrelevant , so we ignore it .    tried to formalize this same intuition by means of the concept of a _ causal beam _ , which is meant to encompass precisely the relevant parts of the causal model .",
    "however , the formal details proved hard to get right , and the refinement that eventually became part of the hp definition seems to be a significant source of complexity , which considerably clouds the otherwise rather simple idea of counterfactual dependency . in the explicitly dynamic context of cp - logic , something much more simple is possible .",
    "let us ask again why intuitions feels that billy s rock is irrelevant if suzy s rock gets to the bottle first and shatters it .",
    "i suggest the blindingly obvious answer : it just got there _",
    "too late_. by the time billy s rock reached the bottle , the damage was already done , the bottle lay in pieces , and there was nothing left to shatter .",
    "in other words , one simply can not cause what is already the case .",
    "my notion of relevance will comprise just this : whatever happened _ after _ the effect is irrelevant , and whatever happened _ on the way to _ the effect is counted as relevant .",
    "of course , this is not yet a complete dichotomy , since it does not rule on the status of those events that did not happen at all . recall that if some cp - law does not happen in a particular branch , this means that , somewhere along the way",
    ", its precondition must have become impossible .",
    "whether an event that did not happen is considered relevant will depend on when its precondition became impossible : if this was _ before _ the effect arose , then it is relevant , otherwise not .",
    "this leads to the following definition .",
    "let @xmath131 be a branch of an execution model of a theory @xmath132 .",
    "let @xmath65 and @xmath127 be two atoms that both hold in the final state @xmath152 of @xmath23 , i.e. , @xmath153 .",
    "@xmath65 is an _ actual cause _ of @xmath127 in branch @xmath23 if @xmath154 with @xmath155 and @xmath156 , where @xmath151 is constructed as follows .",
    "if @xmath157 is the smallest @xmath158 for which @xmath159 , then @xmath160 . in words , @xmath65 is an actual cause of @xmath127 if there is a counterfactual dependency from @xmath65 to @xmath127 , according to the theory @xmath161 that consists of both those events that happened before @xmath127 was caused , and those events that had already become impossible by then .",
    "[ def : actc ]    it is quite easy to check whether this definition is satisfied : you look at the given branch , find the place where @xmath127 first appeared , discard all events that had not yet happened then but still were possible , and check whether the remaining theory exhibits a counterfactual dependency between @xmath65 and @xmath127 or not . to illustrate , consider again the leftmost branch @xmath162 of the left execution model for the billy and suzy example .",
    "the bottle breaks in node @xmath163 , i.e , @xmath164 . therefore , @xmath165 and @xmath166 .",
    "according to @xmath167 , there now is indeed a counterfactual dependency from @xmath118 to @xmath168 , so the first is an actual cause of the second . as this example illustrates , it is important that a branch @xmath169 of an execution model not only records the successive states @xmath170 of the domain , but also the events @xmath171 that caused each of the state transitions .",
    "recall that the hp setting offers no mathematical objects that correspond to a complete story about what happened , so their definition is always just given the final outcome in the form of an assignment of values to the rvs .",
    "in this case , we can not always say with certainty whether some potential cause actually caused an effect or not . indeed ,",
    "if we get only the final interpretation @xmath145 instead of the full branch @xmath172 , then the best we can do is this :    [ partial ] let @xmath132 be a cp - theory and @xmath71 an interpretation for its vocabulary .",
    "let @xmath173 be the set of all branches of all execution models of @xmath132 that end in a state @xmath50 for which @xmath174 .",
    "if @xmath65 actually causes @xmath127 in _ at least one _ branch @xmath175 , we say that @xmath65 is a _",
    "possible _ actual cause for @xmath127 .",
    "if @xmath65 actually causes @xmath127 in _ all _ branches @xmath176 , we say that @xmath65 is a _",
    "certain _ actual cause for @xmath127 .",
    "if , in the bottle breaking example , we are only told that eventually @xmath118 , @xmath119 and @xmath168 all hold , we find ourselves faced with precisely the same problem as hp s first structural model : all that we can say is that both are possible actual causes , but neither is a certain actual cause .",
    "this is typical for redundant causation patterns , and fits well with intuition here : without knowledge about the order in which events happened , we can not say which of the redundant causes actually `` got there first '' .",
    "so far , we have only considered actual causation as it applies to atoms causing atoms . often , it is also interesting to wonder which omissions contributed to an effect ( `` did the doctor s failure to treat the patient cause his death ? '' ) or why some effect was in fact not caused ( `` did the doctor s treatment prevent the patient s death ? '' ) .",
    "extending the framework to also address such questions is easy enough :    * to extend our definition of actual causation to allow also literals @xmath177 to act as effects , we need to specify when such a @xmath177 `` happens '' for the first time , such that we may discard all later events when making counterfactual judgments to determine what caused @xmath177 .",
    "the obvious cut - off point is when @xmath127 no longer belongs to the overestimate @xmath178 . *",
    "to also allow literals @xmath179 to act as causes , we need to define precisely how we will check the counterfactual dependency in this case . to assume that @xmath179 was not the case , we need to assume that @xmath65 has somehow occurred , which we can do formally by just adding a new cp - law `` @xmath180 '' that always causes @xmath65 .",
    "due to space restrictions , formal details are left to the reader .",
    "there is a large literature about actual causation , with many examples , counterexamples , and counter - counterexamples .",
    "while e.g.   have argued that the importance of such small examples should not be exaggerated , it nevertheless remains useful to check that my approach behaves sensibly for them .",
    "due to space restrictions , i will limit myself to those examples that most clearly illustrate the difference between my approach and the hp account .",
    "it is common practice in research on actual causation to formulate examples in terms of neuron diagrams .",
    "a neuron can be in one of two states , one is the default `` off '' state and the other is the deviant `` on '' state in which the neuron `` fires '' or `` is active '' .",
    "different kinds of links between two nodes define how the state of one affects the other . for instance , in the following figure , @xmath127 fires if and only if @xmath181 fires , and @xmath181 fires if at least one of @xmath138 or @xmath65 fires .",
    "[ fill](0,1)0.25 cm [ fill](1,1)0.25 cm [ fill](2,1)0.25 cm [ stroke](0,0)0.25 cm    neuron diagrams typically record not only this causal structure , but also the state of the neurons . in the figure above , nodes that are",
    "`` on '' are represented by full circles and nodes that are `` off '' are shown as empty circles .",
    "so , @xmath138 , @xmath181 and @xmath127 all fire , whereas @xmath65 does not . in the language that we have developed so far , a neuron diagram therefore places us in the partial information setting of definition [ partial ] : we are given a causal model of a domain together with the final state that has been reached , but are not told precisely how this state has come about .",
    "shows a number of counterexamples to hp , and introduces an alternative account , which he formalizes for neuron diagrams only .",
    "one of his counterexamples concerns the following two diagrams :    in both diagrams , the edges from @xmath181 to @xmath182 and from @xmath182 to @xmath127 are _ blocking _ edges : if @xmath181 fires , then @xmath182 will never fire , regardless of its other incoming edges . in the left diagram ,",
    "both @xmath138 and @xmath65 cause @xmath127 : @xmath138 causes it directly and @xmath65 causes it by stopping @xmath183 from preventing @xmath127 . in the right diagram , however , @xmath65 also causes the very `` threat '' to @xmath127 that it prevents . therefore",
    ", hall argues , in this diagram it should not be counted as a cause for @xmath127 .",
    "the hp account correctly handles the left diagram , but fails for the right one , since taking @xmath184 and @xmath185 allows us to create the context @xmath186 in which there is a counterfactual dependency from @xmath65 to @xmath127 .    to see how my definition fares , here are the obvious cp - logic versions . in the first ,",
    "@xmath187 and @xmath183 are all exogenous , while in the second only @xmath138 and @xmath65 are .",
    "+    @xmath188    @xmath189    first , consider the left theory . here",
    ", @xmath127 can only be caused after has already happened and both and have become impossible .",
    "therefore , all these cp - laws are relevant and we end up having to check whether there is a counterfactual dependency from @xmath65 to @xmath127 in the original theory . clearly , this is the case , since no tree that starts from a root in which the exogenous predicates @xmath183 and @xmath138 are * t * and @xmath65 is * f * can produce @xmath127 . in the second theory",
    ", the event may either happen before @xmath127 is caused or after .",
    "this means we either have to check for a counterfactual dependency in the theory @xmath190 or in @xmath191 . in neither theory",
    "we find a counterfactual dependency , so @xmath65 is correctly judged to certainly not be an actual cause of @xmath127 .",
    "hp s problems with this example are caused by the fact that , lacking an explicitly dynamic semantics , they have to resort to interventions to eliminate irrelevant events from consideration . as an undesired side - effect",
    ", they end up allowing the possibility that @xmath183 itself is relevant for judging the impact of @xmath65 on @xmath127 , but the link between @xmath65 and @xmath183 is not .",
    "the following is an example of _ bogus prevention _",
    "@xcite , taken from .",
assassin is in possession of a lethal poison , but has a last minute change of heart and refrains from putting it in victim s coffee .",
    "bodyguard puts antidote in the coffee , which would have neutralized the poison had there been any .",
    "victim drinks the coffee and survives . _",
here , hp , as well as others such as , erroneously designate the bodyguard s unnecessary antidote as an actual cause for victim s survival .",
    "as i will now show , my account handles this correctly . since the example states that assassin has his @xmath192 before the @xmath193 is administered",
    ", i will not make these exogenous atoms , but instead include them as endogenous atoms that are vacuously caused with some unknown ( and irrelevant ) probability .",
    "@xmath194 the example now tells the story that first event happens , which is then followed by .",
    "however , as soon as happens , both @xmath195 and @xmath196 become impossible , so is considered irrelevant in the actual course of events and will not be part of the theory in which we check for a counterfactual dependency .",
    "hence , preventing @xmath193 in this theory has no effect whatsoever upon the victim s survival , so it is not an actual cause of victim s survival ( but @xmath192 is ) .",
    "note that if the antidote were administered before the assassin s change of heart , then it _ would _ be considered relevant , but still not an actual cause of victim s survival because then would no longer be relevant .",
    "to make the antidote an actual cause of victim s survival , it would have to be administered after the assassin has _ failed _ to have a change of heart .",
    "a prototype implementation can be downloaded from the following url :    http://people.cs.kuleuven.be/~joost.vennekens/actcaus/act.pl[http://people.cs.kuleuven.be/@xmath197joost.vennekens/actcaus/act.pl ]    this small program computes whether an atom is a possible / certain actual cause for an effect in the partial information setting , or an actual cause in the complete information setting .",
    "it was written in swi - prolog , but should also run in sicstus or yap .",
    "currently , it only handles ground theories without disjunction in rule bodies .    in the partial information",
    "setting , this prototype performs a simple backtracking search over all branches that might generate the given observations . obviously , this is not an approach that would scale well for larger examples .",
    "the goal of this prototype , however , is just to allow interested people to experiment with my definition , in order to see whether it corresponds to their intuition . as such ,",
    "it is not meant to handle problems larger than the examples typically considered in the actual causation literature .",
    "future work may investigate better algorithms , e.g. , by means of an integration into riguzzi s @xcite query answering algorithm .",
    "this paper has tried to argue that the hp account of actual causation is flawed for two reasons , both of which stem from their choice of structural models as the formal language to express causal relations .",
    "first , structural models fail to make the distinction between default and deviant values , which has been argued by many authors to play a key role in a correct understanding of actual causation .",
    "second , the static world - view of structural models is ill - suited to handling dynamic concepts , such as the stories that are part of the input to an actual causation problem .",
    "since the hp paper first appeared , it has received a great deal of attention among researchers interested in actual causation , and many counterexample and alternative approaches have been presented .",
    "most of these , such as or , recognize the importance of the deviant / default distinction . the problems caused by the mismatch between the static formalism of structural equations and the dynamic problem of actual causation have achieved less attention , even though they are recently also pointed out by",
    ". nevertheless , also these more recent approaches still use static formalisms such as neuron diagrams or variants of structural models . the main point",
    "i hope to make in this paper is that for problems that , like actual causation , require reasoning about the way in which a domain evolves , it pays to have a language with a formal semantics that contains mathematical objects that correspond to such evolutions .",
    "i have tried to illustrate this by defining a notion of actual causation in the context of cp - logic , a probabilistic logic programming language which can be seen as a modular syntactic representation for shaferian probability trees , which offer precisely the kind of dynamic representation that is perfectly suited for a study of actual causation .",
    "my definition is based on a counterfactual criterion similar to hp s , but is able to leverage the dynamic nature of cp - logic s semantical objects to come up with a very straightforward notion of relevance , namely , it only considers as relevant those events that happened ( or became impossible ) _ before _ the effect first arose .",
    "this is much simpler than the relevance criterion of hp , since i do not have to rely on complex manipulations by means of interventions .",
    "while lacking space for an elaborate review of examples from the literature , i have shown that there are three examples where my definition beats hp : already for simple examples of redundant causation , it offers a more elegant account due to its ability to distinguish the complete and partial information settings ; it is also able to detect fake causes that simply prevent themselves from preventing the effect ; and it also handles bogus prevention .",
    "of course , that is not to say my approach is perfect .",
    "for instance , the railroad switch example from the hp paper can not be handled , because it contains a rv ( @xmath198 ) whose default and deviant values switch in the middle of the story .",
    "i am also offering a prototype implementation of my definition , in the hope that it may help to find further examples where it does not correspond to intuition .",
    "feedback will be appreciated .",
    "inference with logic programs with annotated disjunctions under the well founded semantics . in _ logic programming , 24th international conference , iclp 2008 , udine , italy ,",
    "december 9 - 13 , 2008 , proceedings_. lecture notes in computer science , vol .",
    "springer , 667771 ."
  ],
  "abstract_text": [
    "<S> given a causal model of some domain and a particular story that has taken place in this domain , the problem of actual causation is deciding which of the possible causes for some effect actually caused it . </S>",
    "<S> one of the most influential approaches to this problem has been developed by halpern and pearl in the context of structural models . in this paper , </S>",
    "<S> i argue that this is actually not the best setting for studying this problem . as an alternative , </S>",
    "<S> i offer the probabilistic logic programming language of cp - logic . </S>",
    "<S> unlike structural models , cp - logic incorporates the deviant / default distinction that is generally considered an important aspect of actual causation , and it has an explicitly dynamic semantics , which helps to formalize the stories that serve as input to an actual causation problem . </S>"
  ]
}
{
  "article_text": [
    "in this paper , we propose a simple distributed scheduling algorithm that provides weighted fairness in ieee 802.11 @xcite wireless networks , despite the unpredictability of the 802.11 mac layer and physical channels .    in 802.11 wireless networks , mac - layer contention ,",
    "dynamics and bandwidth allocation are hard to predict . for such networks , the fixed - point model in @xcite",
    "gives a method for computing the long - term throughput of the binary exponential backoff ( beb ) algorithm @xcite .",
    "however , the short - term dynamics and unfairness are quite unpredictable . in a certain period",
    ", a station may randomly backoff more than others , and therefore have a smaller chance of winning the channel , which in turn makes that station backoff even more .",
    "meanwhile , the beb amplifies the unfairness caused by the impairments of the wireless channels .",
    "this aggravation is an unintentional side effect of beb that was designed to reduce collisions , not to guarantee fairness .",
    "the following two effects cause the unfairness :    * _ capture : _ capture occurs when the signals from different transmitters have very different strengths at a receiver @xcite .",
    "for instance , a ratio of 2 in distances from the stations to the ap can lead to approximately a ratio of 16 in received signal strengths . when more than one station transmit packets to the ap at the same time , the ap may be able to capture and correctly decode the packet from the closer station , while ignoring the other packets .",
    "this effect increases the aggregate throughput since the ap receives one packet even when multiple transmissions overlap in time .",
    "however , capture may result in unfairness since the stations that are further away backoff more with the beb algorithm , and consequently obtain much less throughput than closer stations @xcite . * _ channel errors : _ in addition to packet collisions , channel errors are another important cause of packet loss .",
    "a more lossy channel to the ap drops more packets because of channel errors .",
    "the transmitting station interprets all packet losses as collisions and doubles its contention window .",
    "accordingly , the beb algorithm magnifies the asymmetry of the lossy channels . to alleviate this problem , reference",
    "@xcite describes a way to differentiate the two kinds of packet losses ( due to collisions or channel errors ) .",
    "the algorithm proposed in this paper provides a simpler solution .    with a more complicated mac ,",
    "ieee 802.11e @xcite provides differentiated service ( diffserv ) , by adopting different minimum contention windows ( @xmath0 ) and inter - frame spaces ( ifs ) for different service classes such as voice , video and data .",
    "this protocol provides relative performance differentiation among different classes : the classes with smaller @xmath0 and ifs have a relative priority over others . to evaluate the performance of 802.11e , reference",
    "@xcite provides a simulation study ; while reference @xcite uses an analytical model ( a markov chain ) to find the saturated throughput of 802.11e .",
    "however , the model there is quite complicated , indicating that the `` amount '' of relative priority is hard to quantify and control .",
    "for instance , it is not clear how much more bandwidth the protocol gives to video with a particular setting of @xmath0 and ifs , nor how to adjust the amount of priority by varying these parameters .    in this paper",
    ", we describe a simple , easy to implement , distributed fair scheduling algorithm that we call vls , for``variable - length scheduling , '' to cope with the above problems .",
    "vls provides exact weighted fairness despite the unpredictability of the 802.11 mac layer and physical channels .",
    "in this section , we assume that there is only one collision domain . that is , each station can sense the transmissions of other stations .",
    "( we consider the case of multiple collision domains in section [ sec : vls - in - multiple - cd ] . )",
    "there are two versions of the scheduling algorithm : without and with an access point ( ap ) .",
    "the latter is an adaptation of the former that utilizes the ap to simplify the algorithm .",
    "the algorithm is based on the concept of `` virtual slot . '' by definition , a station sees a virtual slot when it senses a collision , a burst of transmissions ( i.e. , one data - ack exchange , or a series of data - ack exchanges separated by sifs ) , or when it transmits a burst of packets itself .",
    "mini - slots are not counted as virtual slots . in other words ,",
    "a station counts a virtual slot whenever if senses the channel as `` idle '' for an interval equal to difs ( difs@xmath1sifs @xcite ) and is involved in a contention process ( i.e. , when the station s backoff counter goes down until it transmits a packet or senses other transmissions ) . in fig .",
    "[ fig : virtual - slots ] , for example , there are 3 virtual slots .",
    "`` virtual slots '' are similar to `` busy slots '' except that a burst of transmissions is counted as one `` virtual slot .",
    "''    virtual slots .",
    "( there are 3 virtual slots in this figure.),width=316 ]    the notion of `` virtual slot '' is particularly useful because every station in a single collision domain sees the same number of virtual slots , assuming that the stations are always backlogged . ( if not , the station starts the algorithm only when it has a backlog and stops it when its backlog is cleared . ) therefore , virtual slots can serve as a `` clock '' for scheduling .",
    "we design the distributed algorithm as follows .    * each station @xmath2",
    "is assigned a `` weight '' @xmath3 @xcite .",
    "( if there are multiple flows outgoing from station @xmath2 , then let @xmath3 be the sum of the weights of all individual flows . ) and each station @xmath2 keeps track of a value @xmath4 that is initially equal to 1 .",
    "* if station @xmath2 gets an ack after it transmits a packet , it keeps transmitting a burst of @xmath5 packets separated by sifs and then resets @xmath4 to the value 1 . *",
    "if it does not get an ack after it transmits a packet , or if it does not get to transmit ( i.e. , it does not win a contention ) , station @xmath2 increments @xmath4 by one whenever it sees a virtual slot .",
    "for example , fig .",
    "[ fig : vls_2sta ] shows the process with 2 stations with weights @xmath6 and @xmath7 respectively . in the figure",
    ", each block represents a virtual slot ( aligned across different stations ) .",
    "the number in each block indicates the transmission length in that virtual slot .",
    "( note that the size of a block here does not reflect the actual length of the virtual slot . )",
    "assume station 1 starts transmission with the 1st virtual slot , while station 2 starts transmission with the 2nd .",
    "variable - length scheduling .",
    "( @xmath6 , @xmath7 are the weights .",
    "each block represents a variable - length virtual slot .",
    "the number in a block indicates the transmission length.),width=316 ]    in a time period when station @xmath2 is backlogged , we can see that the total number of packets it has transmitted is equal to the number of virtual slots it has seen so far times the weight @xmath8 .",
    "( so station @xmath2 _ virtually _ transmits @xmath8 packets per slot .",
    "this is why we use the name `` virtual slot '' . )",
    "since all stations see the same virtual slots , the bandwidth allocation is weighted fair .",
    "that is @xmath9 is the same for all the stations where @xmath10 is the average rate of packets that station @xmath2 transmits .",
    "note that vls guarantees the weighted fairness , no matter what happens in the mac and physical layers .",
    "thus , vls automatically adjusts for the randomness of the mac protocol and the asymmetry of the physical channels .      in a wireless lan with an ap ,",
    "the above algorithm can be adapted so that the client stations need not count the virtual slots . in this variation ,",
    "the ap counts the virtual slots for the stations and piggybacks that count in the mac - layer acks to the stations .",
    "the algorithm works as follows .    *",
    "the ap keeps counting the virtual slots .",
    "it increments the count ( @xmath11 ) for each virtual slot .",
    "* a station can start and stop the algorithm at any time .",
    "when station @xmath2 starts , it contends for the channel and sends the first @xmath8 packets to the ap . in one ack ,",
    "the ap piggybacks the current value of @xmath12 , denoted as @xmath13 .",
    "the next time station @xmath2 wins the channel , it sends @xmath8 packets first .",
    "the ap , again , piggybacks the current value of @xmath12 , denoted as @xmath14 .",
    "then , the station sends @xmath15 more packets in the burst . since @xmath16 , station @xmath2 sends at least @xmath8 packets per burst .",
    "suppose that , at each virtual slot , every station @xmath17 has a probability @xmath18 of winning the channel .",
    "then on average , station @xmath17 accumulates @xmath19 units of `` credit '' before it wins the channel ( since the average number of virtual slots it waits for is @xmath20 ) .",
    "it can then spent the credits by transmitting ( on average ) @xmath19 packets .",
    "when the number of active stations @xmath21 increases in a wireless networks , @xmath18 decreases ( approximately @xmath22 ) . as a result , the average burst length increases , thus causing more delays for all the stations .    to avoid this effect",
    ", we define a system - wide parameter @xmath23 , called `` _ speed of the clock _ '' , and we modify the protocol as follows :    * instead of transmitting @xmath24 packets in a burst as in subsection [ sub : distributed - algorithm ] , station @xmath2 transmits @xmath25 packets .",
    "if @xmath25 is not an integer , then it transmits @xmath26 packets , and saves the extra credits @xmath27 for the next time .",
    "essentially , @xmath28 controls the speed of clock in the whole network .",
    "( therefore , the delay is proportional to @xmath28 . )",
    "* the stations can adjust the value of parameter @xmath28 in several different ways : * * if station @xmath2 knows the number of backlogged stations @xmath21 , then it can choose @xmath29 and broadcast @xmath30 to the network .",
    "the other stations will then follow the parameter . * * common tcp flows are usually not sensitive to the burst length and delay .",
    "but if a station ( say , station @xmath2 ) has delay - sensitive flows and some other stations burst lengths are causing too much delay to it , it computes a new value of @xmath30 and broadcasts it to the network .",
    "( assume the current average delay for station @xmath2 is @xmath31 , and its targeted delay is @xmath32 , then set @xmath33 , where @xmath34 is the current parameter of the system . ) * * if the network has an ap , the ap can act as a controller to adjust @xmath28 .",
    "* * if there are more than one stations broadcasting @xmath30 , each station follow the lowest @xmath30 it has received ( i.e. , @xmath35 ) .",
    "* further details about the implementation of broadcasting : * * station @xmath2 embeds @xmath30 in a packet ( or piggybacked in a usual data packet ) , along with its id / address . * * to increase reliability , this packet can be repeated multiple times . also , although stations in a single collision domain may `` carrier - sense '' each other , they may not be able to `` decode '' the packets of each other .",
    "therefore , the packets containing @xmath30 are transmitted with a higher power , or a lower data rate , than usual packets . * * if a station has broadcast a @xmath30 before and wants to update it , it simply broadcasts the new @xmath30 . since other stations know",
    "the i d of the sender , they update the old parameter of the same sender , and follow the lowest @xmath30 in their records .",
    "in addition , we can impose a limit on the burst length , @xmath36 , of each station @xmath2 . in this case ,",
    "station @xmath2 can transmit up to @xmath37 packets in a burst ( and the remaining credit is left for future transmissions ) .",
    "this mechanism smooths out the randomness of the burst lengths , which may otherwise be ( randomly ) long or short , even if the network has a proper value of @xmath28 .",
    "but in this situation , @xmath28 needs to be small enough to avoid the instability of credits ( i.e. , the remaining credits should not go to infinity ) . in particular",
    ", a simple inequality needs to be satisfied .",
    "we discuss this issue in section [ sec : stability ] .",
    "as mentioned before , virtual slots act as a clock for scheduling . using this synchronization mechanism , vls has the flexibility to achieve many forms of fairness .",
    "the scheduler above uses the number of packets as a fairness metric .",
    "vls can also provide weighted fairness in terms of the number of bits or the `` air - time '' occupied by different stations .",
    "if different stations use very different data rates ( e.g. , 1mbps vs. 11mbps ) in a shared - medium wireless network , providing fairness in terms of bits leads to very low efficiency ( throughput ) of the whole network @xcite . in this case",
    ", @xcite shows that allocating equal air - time to different stations strikes a good balance between fairness and efficiency , and is actually equivalent to achieving proportional fairness @xcite .",
    "in a wireless lan , or an ad - hoc network with a single collision domain , the long - term saturated throughput should the same for all stations , by symmetry @xcite .",
    "however , the collisions and the dynamics of contention windows ( with beb ) are quite unpredictable , leading to fluctuations of short - term throughput ( fig . [",
    "fig : short - term](a ) ) . also , the volumes of data that different stations send drift away from each other ( fig .",
    "[ fig : short - term](a ) ) .",
    "this means that , although the average throughput of the different stations are equal in the long term , the average throughputs may differ over a considerable time window ( 20 sec in the figure ) . with vls , short - term and long - term fairness have been clearly improved ( fig .",
    "[ fig : short - term](b ) ) .      without vls ,",
    "weighted fairness may be implemented by using different @xmath0 s .",
    "approximately , the throughput of an individual station is inversely proportional to its minimum cw , assuming that each station has the same average packet size and use the same ifs ( fig .",
    "[ fig : weighted - fairness](a ) ) .",
    "however , the approximation is not accurate ( especially when @xmath0 s are small ) , and one can expect it to be vulnerable to physical layer factors such as capture effect and channel errors . with vls , the weighted fairness is exact , and easy to adjust and control ( fig . [",
    "fig : weighted - fairness](b ) ) .      besides improving short - term fairness and providing weighted fairness",
    ", our algorithm can readily solve many other unfairness problems in wireless networks .      in a wlan",
    ", different stations may have very different distances from the ap . also , the channel qualities between stations and the ap may differ greatly even if the distances are similar , for instance because of multipath or obstructions",
    ". the above effects result in different signal strengths from different stations as received by the ap . when more than one stations transmit packets to the ap at the same time , so that these transmissions collide",
    ", the ap may still be able to capture and correctly decode the packet with the strongest signal , and send back an ack .",
    "this feature is helpful in terms of the aggregate throughput since one packet is received even in the event of a collision , but may exacerbate the unfairness .",
    "the weaker stations tend to backoff more with the beb algorithm , and therefore obtain much less throughput than stronger ones ( see fig . [",
    "fig : capture](a ) ) .",
    "if our vls algorithm is enabled , it can overcome the unfairness problem , as well as _ retaining the throughput benefit _ provided by capture .",
    "since both strong and weak stations share the same view of the virtual slots , they share the bandwidth in a fair way ( see fig . [",
    "fig : capture](b ) ) .      in wireless networks ,",
    "in addition to packet collisions , channel errors are another important cause of packet losses .",
    "if a station has a lossy channel to the ap , its packets are dropped with higher probability because of channel errors .",
    "similarly to the capture effect , these losses also result in an asymmetry among different stations , and therefore in unfairness , aggravated by the beb algorithm .",
    "this effect is shown in fig . [",
    "fig : channel error](a ) where only station 1 suffers from a loss probability @xmath38 caused by channel errors .",
    "a simple model of a time - varying wireless channel is a markov chain with two states : `` good '' and `` bad '' . for simplicity",
    ", we assume that in the `` good '' state all packets can be received and that in the `` bad '' state all packets are dropped .",
    "each state has an exponentially - distributed duration before it transits to the other state .",
    "[ fig : markov - channel - model ] shows the state transition diagram . in the scenario simulated",
    ", only station 1 has such a noisy channel , with @xmath39 , @xmath40 ( therefore the average loss probability is @xmath38 ) ; and other stations have perfect channels ( @xmath41 ) .",
    "it turns out that our algorithm not only maintains fairness , but also utilize the channel `` _ _ opportunistically _ _ '' to get a high throughput : when the weak station wins a contention , but meets the `` bad '' state , it transmits a packet , without receiving the ack , and relinquishes the channel immediately .",
    "when it wins a contention and meets the `` good '' state , it can transmit a burst of packets . since the channel is likely to stay in the `` good '' state for some time , the station has the opportunity to compensate for its past losses .",
    "if at some point the state goes back to `` bad '' , the station stops immediately and waits for the next opportunity ( see fig .",
    "[ fig : channel error](b ) ) .",
    "in other words , the weak station transmits more when the channel is good , and less when the channel is bad , thus utilizing the noisy channel more efficiently . as a result , the total throughput in fig .",
    "[ fig : channel error](b ) is only slightly less than that in fig .",
    "[ fig : channel error](c ) , where the channels are perfect for all stations .",
    "markov channel model , width=144 ]    it is evident that if the average duration of the `` good '' state is too short , the weak station may still receive unfair throughput .",
    "we can derive the condition under which fairness is guaranteed ( see section [ sec : stability ] ) .",
    "nevertheless , vls always improves the fairness .",
    "when the channel of one station is significantly worse than that of the others , providing throughput - fairness to different stations may drag down the total throughput of the network .",
    "( this is a tradeoff between fairness and efficiency . ) in that case , providing time - fairness would be more suitable .",
    "vls has the flexibility to provide time - fairness , as mentioned in subsection [ sub : generalized - fair - scheduling ] .    in the above",
    ", we have assumed that the stations do not know the state of the channel before transmitting .",
    "if the channel state information is known in advance , the station can avoid transmitting in the `` bad '' state . in that case",
    ", the throughput performance is further improved .",
    "in vls , each active station keeps accumulating and spending credit , where the accumulated credit is proportional to a station s weight , the number of virtual slots it has observed , and the speed of clock @xmath28 . in this section , we consider whether the credits are stable , that is , whether the credits of some stations keep increasing and go to infinity .",
    "if that happens , the bandwidth allocation may not be fair , since the extra credits of some stations are not spent .",
    "first , if there is no limit on the length of transmission at each burst , the credits must be stable , given that each station has non - zero probability of winning the channel .",
    "suppose at each virtual slot , a station @xmath17 has a probability of @xmath18 of winning the channel , then on average , it has accumulated @xmath42 units of credit .",
    "it then spent all of them .",
    "in fact , the probability that the credits reach @xmath43 ( before it is spent ) is approximately @xmath44 . therefore @xmath45 .",
    "but if there is a pre - defined limit of the burst length @xmath46 for station @xmath17 , then instability is possible .",
    "in particular , if @xmath47 , the credits of station @xmath17 go to infinity .",
    "this can be readily proved by law of large numbers .",
    "also , this inequality tells us how to avoid instability : ensuring @xmath48    for implementation , each station monitors its @xmath18 ( average over a period of time ) .",
    "if the inequality is violated , it computes a proper value of @xmath28 and broadcasts it to the network",
    ". then every station uses the new value of @xmath28 .",
    "another simple implementation is to monitor the credits .",
    "if the credits of station @xmath17 keep increasing , it knows a smaller @xmath28 is needed to stabilize its credit .",
    "the above analysis can be extended to the case of capture effect or channel errors .",
    "1 .   capture effect .",
    "capture effect will affect the values of the @xmath18 s .",
    "the weaker stations have smaller @xmath18 s , which , in turn , may entail adjustment of @xmath28 .",
    "2 .   channel errors . here",
    ", we define @xmath18 as station @xmath17 s probability of winning the contention and meet the `` good '' state of channel @xmath17 , in a given virtual slot .",
    "accordingly , channel errors clearly affect the @xmath18 s .",
    "the stations with noisy channels have smaller @xmath18 s ( due to both channel errors and beb ) .",
    "also , the time - variation of channel quality imposes another limit on the burst length .",
    "denote the length of the `` good '' period of channel @xmath17 as @xmath49 , which is a random variable .",
    "then the following inequality is required:@xmath50>w_{i}\\cdot c / p_{i},\\forall i\\label{eq : stability with channel errors}\\ ] ]    to analyze the values of @xmath18 s , one can adapt bianchi s fixed point model @xcite . in practice",
    ", the stations do not need to compute @xmath18 s .",
    "they only need to adjust @xmath28 according to their extra credits .",
    "if a wireless network has multiple collision domains , a station may not be able to hear all the other stations transmissions .",
    "therefore , different stations may have different views of the virtual slots , which makes virtual - slot - based scheduling more difficult .",
    "( two stations have the same view of virtual slots only if they can hear the same set of stations . ) in ieee 802.11 , this may cause severe unfairness problem ( as will be shown later ) .",
    "so , in this case , we devise a variable - length scheduling algorithm based on the realized throughputs , instead of the number of virtual slots .",
    "the basic idea is similar to @xcite@xcite .",
    "( there , the minimum contention windows , @xmath0 s , are dynamically adjusted . )",
    "say we have a set of @xmath51 stations , with respective weights @xmath52 .",
    "the weights can be pre - determined by optimizing some global objective of the network .",
    "for example , they can be the solution of the utility optimization problem @xcite@xcite @xmath53 where @xmath54 is the concave `` utility function '' of station @xmath2 , and each set @xmath55 is a `` clique '' ( in a clique , only one station can transmit at a time ) .",
    "note that with the constraints , we have assumed that the contention graph is a `` perfect graph '' @xcite ( otherwise , another set of constraints based on `` independent set '' should be used @xcite ) .",
    "we have also omitted some details such as packet collisions .",
    "this optimization problem can be solved in a distributed manner , similar to wired network @xcite .",
    "a `` clique '' here is analogous to a `` link '' in wired network , therefore to solve the problem , some communication among stations in the same clique is needed .    in this vls algorithm , each station @xmath2 monitors the aggregate throughput of its neighbors @xmath56 ( i.e , @xmath57 ) , as well as its own throughput @xmath58 .",
    "( this can be done in several ways : ( a ) station @xmath2 can overhear the packets sent by its neighbors , if possible ; ( b ) otherwise , stations can explicitly exchange information about their throughput with their neighbors periodically . )",
    "then , it adjusts the burst length as follows.@xmath59 where @xmath60 denotes the burst length of station @xmath2 at time @xmath61 , and @xmath62 is the step size . clearly , @xmath63 converges when the actual ratio of throughputs is equal to the target ratio of weights .    in the following simulation",
    ", we compare the throughput allocation with fixed - length scheduling and vls . in vls",
    ", we use a discrete version of the above algorithm : each node adjusts its transmission length every 4ms , and the throughput @xmath58 is an average over the last 40ms .    in the network",
    "simulated , stations 1 , 2 , 3 belong to collision domain 1 , while stations 3 , 4 , 5 belong to collision domain 2 , as shown in fig .",
    "[ fig : vls - in - multiple](a ) .",
    "note that station 3 faces contentions from both domains .",
    "the destinations of the flows from node 1 , 2 , 3 , 4 , 5 are assumed to be node 2 , 1 , 2 , 5 , 4 , respectively .",
    "the data rate is 11mbps , and the initial transmission length is 1ms for all stations .    without vls , station",
    "3 s throughput is very low compared to others ( fig .",
    "[ fig : vls - in - multiple](b ) ) .",
    "the reason is that at most of the time , station 3 senses the medium as busy , due to the transmissions in both collision domains .",
    "therefore it does not have much chance to transmit its packets .",
    "then , we use vls , and require the weights of all stations to be 1/3 . as shown in fig . [",
    "fig : vls - in - multiple](c ) , after a short period of time in the beginning ( for convergence ) , the target weights are achieved . on average ,",
    "station 3 transmission length is 1.54ms , while others are about 0.5ms after convergence .",
    "in this paper , we have proposed a distributed algorithm , vls , for fair scheduling in 802.11 wireless networks .",
    "we have shown that , by varying the transmission lengths of different stations , it is feasible to provide fairness without careful modeling of mac - layer contention , physical channel variations , and the effect of multiple collision domains .",
    "many existing fairness problems in 802.11 networks are therefore overcome , including short - term unfairness , unfairness introduced by physical channel s asymmetry , such as capture effect and channel errors .",
    "it makes the throughput of each station more smooth , which is appealing to real - time service such as video and voice .",
    "it can easily provide weighted fairness for different services . for networks with multiple collision domains , vls gives a way to avoid the starvation of those stations that are in several collision domains .",
    "since vls can avoid excessively long transmissions by tuning the parameter @xmath28 , we should be able to achieve certain objectives on packet delay .",
    "however , this problem has not been studied thoroughly in this paper , and is a subject for further study .",
    "since vls can be used in 802.11e networks , the advantages of both protocols can be achieved : vls can provide weighted fairness ( a prioritization ) in terms of throughput , while 802.11e can provide prioritization in terms of delay , by using different @xmath0 s and ifs s ( inter - frame spaces ) .",
    "therefore , throughputs and delays can be controlled separately by two protocols , instead of being coupled in a complicated way as in 802.11e @xcite .",
    "more analytical / experimental study of this issue is interesting for future research .",
    "information technology- telecommunications and information exchange between systems- local and metropolitan area networks- specific requirements- part 11 : wireless lan medium access control ( mac ) and physical layer ( phy ) specifications . , pages i513 , 2003 .",
    "unapproved draft amendment standard for information technology telecommunications and information exchange between systems ",
    "lan / man specific requirements part 11 wireless medium access control ( mac ) and physical layer ( phy ) specifications : medium access control ( mac ) quality of service ( qos ) enhancements ( replaced by approved draft 802.11e / d13.0 ) . , 2005 .",
    "b.  bensaou , wang yu , and ko  chi  chung .",
    "fair medium access in 802.11 based wireless ad - hoc networks . in _ mobile and ad hoc networking and computing , 2000 .",
    "2000 first annual workshop on _ ,",
    "pages 99106 , 2000 .",
    "rajarshi gupta and jean walrand . .",
    "`` advances in control , communication networks , and transportation systems , '' e.h . abed ( ed . ) , systems and control : foundations and applications series , springer - birkhauser , boston .",
    "july 2005 .",
    "a.  kochut , a.  vasan , a.  u. shankar , and a.  agrawala .",
    "sniffing out the correct physical layer capture model in 802.11b . in _",
    "network protocols , 2004 .",
    "icnp 2004 .",
    "proceedings of the 12th ieee international conference on _ , pages 252261 , 2004 .",
    "jiang li  bin and liew soung  chang .",
    "proportional fairness in wireless lans and ad hoc networks . in _",
    "wireless communications and networking conference , 2005 ieee _ , volume  3 , pages 15511556 vol . 3 , 2005 .",
    "choi sunghyun , j.  del prado , n.  sai  shankar , and s.  mangold .",
    "`` ieee 802.11 e contention - based channel access ( edcf ) performance evaluation '' . in _ communications , 2003 .",
    "ieee international conference on _ , volume  2 , pages 11511156 vol.2 , 2003 ."
  ],
  "abstract_text": [
    "<S> the fairness of ieee 802.11 wireless networks ( including wireless lan and ad - hoc networks ) is hard to predict and control because of the randomness and complexity of the mac contentions and dynamics . </S>",
    "<S> moreover , asymmetric channel conditions such as those caused by capture and channel errors often lead to severe unfairness among stations . in this paper </S>",
    "<S> we propose a novel distributed scheduling algorithm that we call vls , for `` _ variable - length scheduling _ '' , that provides weighted fairness to all stations despite the imperfections of the mac layer and physical channels . </S>",
    "<S> distinct features of vls include the use of variable transmission lengths based on distributed observations , compatibility with 802.11 s contention window algorithm , opportunistic scheduling to achieve high throughput in time - varying wireless environments , and flexibility and ease of implementation . </S>",
    "<S> also , vls makes the throughput of each station more smooth , which is appealing to real - time applications such as video and voice . </S>",
    "<S> although the paper mostly assumes 802.11 protocol , the idea generally applies to wireless networks based on csma ( carrier sensing multiple access ) </S>",
    "<S> .    distributed fair scheduling , variable transmission lengths , carrier sensing multiple access , ieee 802.11 , wireless channel </S>"
  ]
}
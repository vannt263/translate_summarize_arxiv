{
  "article_text": [
    "collisional @xmath0-body simulations , in which the equations of motion of @xmath0 particles integrated numerically , have been extensively used in studies of dense star clusters , such as globular cluster , open cluster , and clusters with black holes , and also in studies of planetary formation . one feature of the collisional @xmath0-body simulations is need for relatively high accuracy in the force calculations , because the total number of timestep is very large to simulate relatively long simulation span , such as the relaxation timescale .",
    "another feature is a wide difference in orbital timescale of particles since two particles can approach arbitrary close .",
    "the individual timestep algorithm , first developed by aarseth ( @xcite ) , has been a powerful tool that handles the collisional @xmath0-body system , whose basic idea is to assign different times and timesteps to particles in the system .",
    "grape(gravity pipe)(@xcite ) is a special purpose hardware that can accelerate the individual timestep algorithm .",
    "grape hardware has specialized pipelines for the gravitational - force calculation , which is the most expensive part of the collisional @xmath0-body simulations . among the individual timestep algorithm , the hermite scheme ( @xcite ) can efficiently use the grape hardware , in which the block individual timestep algorithm ( @xcite ) and the 4th - other hermite integration are used .",
    "grape-6 ( @xcite ) is a massive - parallel hardware for the collisional @xmath0-body simulations using the hermite scheme .",
    "it consists of 1728 pipeline chips and has a peak speed of around 64 teraflops .",
    "although direct summation algorithm was used for the force calculations on the grape-6 system , whether it is the really best solution or not remains a question .",
    "the barnes - hut tree algorithm ( @xcite ) is one of algorithms that reduces the calculation cost by replacing forces from distant particles by those from a virtual particle at their center of mass .",
    "mcmillan and aarseth ( @xcite ) have demonstrated that it is possible to implement a combination of the barnes - hut tree algorithm and the individual timestep algorithm that runs efficiently on a single - processor computers .",
    "however , on the grape-6 system , the combination of the tree algorithm and the individual timestep algorithm was not possible , because its memory addressing scheme was limited only to sequential access to a full set of particle data , and there is not enough memory size for particle data .",
    "we successfully implemented the combination of the tree algorithm and the individual timestep algorithm on grape-9 system .",
    "grape-9 is a newly - developed system that uses fpga(field programmable gate array ) device and the force and predictor pipelines the same as grape-6 chip are integrated in the device .",
    "the grape-9 system also has an indirect memory addressing unit and a relatively large - sized particle memory , implemented by widely - used dram device .",
    "interaction lists for the tree algorithm can be stored in the grape-9 system , and the force pipelines can calculate only the interactions necessary . by our implementation , the interaction calculations are significantly reduced from the direct summation in the hermite scheme .",
    "the plan of this paper is as follows . in section 2",
    "we describe implementation of the tree algorithm on the hermite scheme using grape-9 . in section 3 ,",
    "we present the performance and accuracy of our implementation .",
    "section 4 is for discussion .",
    "in this section , we describe how the interactions are calculated using the tree algorithm in our implementation . in an ideal way , the interaction list should be created at every block timestep using predicted particle data , but it is not practical . in our implementation , the tree structure and the interaction lists are created only at intervals of @xmath3 , and the same interaction lists are used during @xmath3 .",
    "therefore , the interval @xmath3 becomes a cause of error in the interactions calculation since the tree structure is deformed as time advances .",
    "the interval @xmath3 has to be small enough not to affect simulation results and its performance . in our implementation",
    ", the maximum size of timestep is set to be @xmath3 for simplicity .    with the original hermite scheme , the previous grape system ( grape-6 system ) performs the integration of one step in the following way :    * as the initialization procedure",
    ", the host computer sends all data of all particles to the memory on grape .",
    "* the host computer selects particles to be integrated at the present system time .",
    "* repeat 4 - 6 for all particles selected . *",
    "the host computer predicts the position and velocity of the particle , and sends them to grape .",
    "* grape calculates the force from all other particles , and then returns the results to the host computer . *",
    "the host computer integrates the orbits of the particles and determines the new timestep .",
    "the updated particle data are sent to the memory on grape .",
    "* the host computer updates the present system time and go back to step 2 .    in our new implementation with the tree algorithm ,",
    "the grape system ( grape-9 system ) performs the integration of one step in the following way ( the bold item number shows the step that changes from the original algorithm ) :    * at intervals of @xmath3 ( and at initial ) , the host computer makes tree data .",
    "the procedure includes construction of a tree structure , identification of groups of particles for which the same interaction list is used by traversing the tree structure , and creation of interaction lists for the groups .",
    "the host computer sends all particles data , the interaction lists for all groups , and tree node data listed up in the interaction lists , to the memory on grape .",
    "the tree node data are stored in the memory as ( pseudo-)particles that have positions , velocities , accelerations , and their time derivatives .",
    "* the host computer selects particles to be integrated at the present system time .",
    "* repeat 4 - 6 for all particles selected . *",
    "the host computer predicts the position and velocity of the particle , and sends them to grape . *",
    "the host computer sends the index number of the interaction list for the particle to grape . *",
    "grape calculates the force from particles in the interaction list , and then returns the results to the host computer . *",
    "the host computer integrates the orbits of the particles and determines the new timestep .",
    "the updated particle data are sent to the memory on grape .",
    "* the host computer updates the present system time and go back to step 2 .",
    "the differences from the original algorithm are in three steps : in step 1 , at intervals of @xmath3 , the tree structure and the interaction list are created and sent to grape . in step 4a , the index number of the interaction list is sent to grape . in step 5 ,",
    "the force are calculated from particles in the interaction list , instead of from all particles .    in order to use efficiently the grape hardware",
    ", we use the modified tree algorithm ( as already described in step 1 ) , which was developed by barnes ( @xcite ) and implemented on the grape hardware by makino ( @xcite ) . with this algorithm ,",
    "tree traversal is performed for a group of neighboring particles and an interaction list is created for the group .",
    "the maximum number of particles in the group , @xmath4 , is set to be optimal at which the total computing time is the minimum . as we increase @xmath5 , the interaction calculation on grape increases since interactions between particles in a group are calculated directly and the interaction list becomes longer . on the other hand , as we decrease @xmath5 , an efficiency of usage of the grape hardware becomes lower , since the number of particles in the same group at each block step becomes smaller on average .",
    "for the present system , @xmath6 , is close to optimal .",
    "note that , with such @xmath5 , interactions with a rather large number of the neighboring particles , about @xmath7 ( for @xmath8 ) , are directly calculated .",
    "the part of the tree algorithm in our code is almost the same as that used in the previous studies ( @xcite,@xcite ) .",
    "the simulation program is written using the grape-6 compatible api library and two additional functions for step 1 and steps 4a-5 , respectively .",
    "we implemented these algorithm on the grape-9 ( model 5000 ) system .",
    "the grape-9 system consists of 8 - 16 grape-9 cards , connected to the host computer via a pci express switch device ( plx pex8696 ) .",
    "the grape-9 card is a pci express extension card on which one fpga(field programmable gate ) device and one ddr2 sdram ( so - dimm module ) memory are mounted . in the fpga device ,",
    "the force and predictor pipelines , almost identical to the grape-6 chip , and an indirect memory addressing unit are integrated , which is illustrated in figure [ fig : g9 ] .",
    "the interaction lists for the tree algorithm is stored in the indirect memory addressing unit of the fpga device , actually in on - chip memory of the fpga device , and all particles data and tree node data are stored in the memory unit , which consists of the ddr2 sdram memory . according to the interaction list , the indirect memory addressing unit outputs an address entry for the memory unit , and the force pipelines calculate only the interactions necessary .",
    "we use altera cyclone v 5cgxc9 for the fpga device .",
    "the wealthy amount of the on - chip memory in this device is one of reasons that enables our implementation . for the present implementation ,",
    "we use a configuration in which grape-6-compatible 14 force pipelines and one predictor pipeline are integrated , which operates at 98mhz .",
    "other details on the grape-9 system will be discussed elsewhere .    as for the indirect memory addressing unit",
    ", we use the particle index unit same as in grape-5 ( @xcite ) , which was designed for the cell - index method ( @xcite ) to handle short - range forces in a periodic boundary condition .",
    "figure [ fig : indirect ] shows a block diagram for the indirect memory addressing unit .",
    "it consists of the cell - index memory and two counters : the cell counter and the particle index counter . in the cell - index memory ,",
    "sets of start address and count number are stored . according to the output of the cell - index memory",
    ", the particle index counter generates entries to the memory unit .",
    "the cell counter indicates address entry for the cell - index memory .",
    "actually , in step 4a , the host computer sends the start address and count number of the cell counter for the group of the interaction list . because size of the on - chip memory of the fpga device is limited ( about several mbits ) , we store the interaction list for the tree algorithm in such form , instead of full sets of indices .",
    "the entry size of the cell - index memory is 98304 for the present fpga device . in order to reduce total length of the interaction lists in the cell - index memory",
    ", we rearrange all particles in the peano - hilbert order and store the tree node data for each group in a consecutive location in the memory unit .",
    "since we typically use 1 gb ddr2 sdram so - dimm ( 8 gb at maximum ) , the memory unit can store 10 millions particles at the maximum for each card .    when we perform calculations using multiple grape-9 cards , we use two parallelization methods in combination : ( 1 ) multiple cards calculate the force on the same set of ( @xmath9-)particles , but from different set of ( @xmath10-)particles .",
    "( called @xmath10-parallel ) ( 2 ) multiple cards calculate the force on different set of ( @xmath9-)particles whose interaction list ( group ) are different .",
    "( called @xmath9-parallel )",
    "in this section , we discuss performance and accuracy for our implementation . as the benchmark runs , we integrated the plummer model with equal - mass particles .",
    "we use the standard unit ( @xcite ) in which @xmath11 . here",
    "@xmath12 and @xmath13 are the total mass and energy of the system , and @xmath14 is the gravitational constant .",
    "the timestep criterion is that of aarseth ( @xcite ) with @xmath15 . for the softening parameter",
    ", we used an @xmath0-dependent softening , @xmath16 .",
    "we set @xmath17 for all runs except for runs of @xmath18 , @xmath0=512k and 1 m ( @xmath19 and @xmath20 ) , and the interval @xmath21 .",
    "we used the grape-9 system that consists of 8 grape-9 cards and whose peak speed is 630 gflops . here",
    "we count operations for the gravitational force and its time derivatives as 57 floating - point operations .",
    "host computer has intel core i7 - 3820 ( 4core , 3.6ghz ) cpu .",
    "communications between the host computer and each grape-9 card is pci express gen1 4lane ( 1gb / s peak for each direction ) . in order to use 8 cards simultaneously",
    ", we used a parallelization method whose degree is 4 for @xmath10-parallel and 2 for @xmath9-parallel .",
    "figure [ fig : nt ] shows the calculation time , @xmath22 , to integrate the system for one time unit as a function of the number of particles , @xmath0 , for @xmath23 and @xmath24 , where @xmath25 is a opening parameter for the tree algorithm . for comparison",
    ", we also plot the calculation time for the original hermite scheme .",
    "we measured the calculation time , @xmath22 , from simulation time @xmath26 to @xmath27 ( and multiplied it by four ) to avoid the complication due to the startup procedure .",
    "figure [ fig : nsp ] shows another plot with an equivalent - performance , @xmath28 , defined by @xmath29 where @xmath30 is the total number of individual timestep to integrate one time unit , and",
    "@xmath31 is that for the hermite scheme .",
    "the equivalent - performance means the performance in the case that we perform the same simulation within the same time using the hermite scheme . for the ratio , @xmath32 , of @xmath331 m",
    ", we used instead those of @xmath33512k for each @xmath25 .",
    "the ratio @xmath32 itself is close to unity , for example , @xmath34 for @xmath33512k , @xmath35 , which means even if we use the tree algorithm total number of individual timestep does not increase so much .",
    "we can see that about a factor ( @xmath36k ) of speedup ( for @xmath8 ) against the original hermite scheme is achieved .",
    "figure [ fig : err256k ] shows errors in the total energy as a function of time up to simulation time @xmath37 for @xmath38k .",
    "the calculation of the potential energy is obtained with the direct summation on grape , not with the tree algorithm .",
    "we can see that the errors in our implementation of the tree algorithm increase linearly as time advances . in figure",
    "[ fig : err ] , the errors in the total energy at time @xmath37 are summarized . from both figures",
    ", we can see that the errors for @xmath39 are comparable to those for the original hermite scheme .",
    "[ tab : timing ]    0    [ tab : tree ]    we discuss breakdown of the calculations using a simple performance model .",
    "the calculation time per one particle step is expressed as @xmath40 in table [ tab : timing ] , the terms of the right - hand side measured in actual runs are listed .",
    "the first term of the right - hand side , @xmath41 , is the time to calculate the force and its time derivative for one particle on grape-9 , expressed as @xmath42 where @xmath43 is average numbers of the interaction list for the tree algorithm . in the case of one grape-9 card , @xmath44 ( s ) .",
    "the factor @xmath45 expresses a decrease in performance when the number of particles that calculate interactions simultaneously ( at step 5 ) is less than @xmath46 . here ,",
    "@xmath46 and @xmath47 are the maximum and average number of the particles that calculate interactions simultaneously , respectively .",
    "the number @xmath48 becomes much smaller for the tree algorithm than in the original hermite scheme , because , even in the same block step , the particles belong to several different groups . the number @xmath49 in actual runs , which does not depends on @xmath0 nor @xmath25 so much .",
    "for the present system , @xmath50 , since it has 14 real force pipelines and each real pipeline serves as 4 virtual multiple pipelines ( @xcite ) .",
    "the second term , @xmath51 , is the time for the tree data processing spent in the host computer ( step 1 ) , which are listed in table [ tab : timing ] for @xmath52 .",
    "the time @xmath51 is proportional to @xmath53 and does not depend on @xmath0 so much .",
    "the third term , @xmath54 , expresses the time to transfer data between the host computer and grape , which include data conversion .",
    "since about 200 byte data transfer are required per one particle step , the sustained transfer speed is about 200mb / s .",
    "the fourth term , @xmath55 , is the time for the host computer to perform computations to integrate one particle other than @xmath51 .    as for the breakdown , at first",
    ", we note that , in the first term @xmath56 , the decrease in performance due to small @xmath57 is rather large and the sustained performance decreases to about half of its peak performance .",
    "this is partly because @xmath58 for the present system is not small enough .",
    "the system which has @xmath46 less than 30 is desirable for our implementation .",
    "second , the largest term is @xmath54 among three terms other than @xmath56 , and the fraction to @xmath56 is not small compared in the original hermite scheme because the number of interaction @xmath43 is not large , of course .",
    "third , the time @xmath51 is small enough compared to other terms , in the case of @xmath52 .",
    "we successfully implemented the hierarchical tree algorithm on the individual timestep algorithm ( the hermite scheme ) for collisional @xmath0-body simulations on the grape-9 system .",
    "the present grape-9 system has the indirect memory addressing unit and the memory unit large enough to store all particles data and also tree nodes data . in our implementation ,",
    "the interaction calculations are significantly reduced , compared to direct @xmath1 summation in the original hermite scheme .    in comparison to other methods that also reduce calculation amounts for the individual timestep algorithm successfully , our implementation has one advantageous feature that interactions from particles at an intermediate range are evaluated in more accurate way .",
    "the neighbor scheme ( @xcite , @xcite ) is an example of such methods . in the scheme ,",
    "the force on a particle is divided into two components , the neighbor force and the regular force and calculations amount are reduced by evaluating the regular force less frequently .",
    "p@xmath59 t ( particle - particle particle - tree , @xcite , @xcite ) is another example . in p@xmath59 t ,",
    "the force on a particle is split into short - range and long - range contribution .",
    "the short - range force are evaluated with the hermite scheme and the long - range force are evaluated with the tree algorithm and leapfrog integrator .",
    "it is reported that less accurate evaluation for intermediate range force might influence the angular momentum evolution ( see @xcite ) .    at present , the grape-9 system is probably good solution for the implementation of the hierarchical tree algorithm on the individual timestep algorithm .",
    "further improvement with the next generation fpga device would provide more powerful computing systems .",
    "shipment within one year of a new fpga device ( altera arria 10 ) that has more than 4 times number of logic elements , 3 times operation speed , 8 times data transfer speed ( pcie gen3 8lane ) , 4 times size of the on - chip memory and 10 times memory bandwidth ( ddr3/ddr4 sdram ) , compare to the current fpga device ( altera cyclone v ) , has been announced .",
    "new system using such fpga device would be able to provide about 10 times of performance with keeping smaller @xmath60 , which is another required ingredient for our implementation .",
    "porting of our implementation on other accelerators , such as gpgpu device , is presumably feasible and in preparation .",
    "typically , very large number of parallel operations must be executed on such accelerator . since , for our implementation",
    ", the number of the interaction calculations that can be executed in parallel becomes smaller , some ingenuities would be necessary for an efficient use of the accelerator .",
    "aarseth ,  s.  j. 1963 , mnras , 126 , 223 aarseth ,  s.  j. 1999 , celest . mech .",
    ", 73 , 127 ahmad ,  a. & cohen ,  l. 1973 , j. comput .",
    "phys , 12 , 389 barnes ,  j.  e. 1990 , j. comput .",
    "phys , 87 , 161 barnes ,  j.  e. , & hut ,  p. 1986 , nature , 326 , 446 fukushige ,  t. , makino ,  j. , & kawai ,  a. 2005 , pasj , 57 , 1009 heggie ,  d.  c. , & mathieu ,  r.  d. 1986 , in the use of supercomputer in stellar dynamics , ed .",
    "p.hut & s.mcmillan ( new york : springer ) , 233 iwasawa ,  m. , portegies zwart ,  s. , & makino ,  j. 2015 , computional astrophysics and cosmology , 2 , 6 kawai ,  a. , fukushige ,  t. , makino ,  j. , & taiji ,  m. 2000 , pasj , 52 , 659 makino ,  j. 1991a , pasj , 43 , 621 makino ,  j. & aarseth ,  s.  j. 1992 , pasj , 44 , 141 makino ,  j. , fukushige ,  t. , koga ,  m. , & namura ,  k. 2003 , pasj , 55 , 1163 makino ,  j. , taiji ,  m. , ebisuzaki ,  t. , & sugimoto ,  d. 1997 , apj , 480 , 432 mcmillan ,  s.  l.  w. 1986 , in the use of supercomputer in stellar dynamics , ed .",
    "p.hut & s.mcmillan ( new york : springer ) , 156 mcmillan ,  s.  l.  w. & aarseth ,  s.  j. 1993 , apj , 414 , 200 nitadori ,  k. & aarseth ,  s.  j. 2012 , mnras , 424 , 545 oshino ,  s. , makino ,  j. , & funato ,  y. 2011 , pasj , 63 , 881 quentrec ,  b. & brot ,  c. 1975 , j. comput .",
    "phys , 13 , 430 sugimoto ,  d. , chikada ,  y. , makino ,  j. , ito ,  t. , ebisuzaki ,  t. , & umemura ,  m. 1990 , nature , 345 , 33 yoshikawa ,  k. & fukushige ,  t. 2005 , pasj , 57 , 849            , to integrate the system for one time unit as a function of the number of particles , @xmath0 .",
    "the triangle , square , and pentagon indicate the results with opening angles for the tree algorithm @xmath23 and @xmath24 , respectively .",
    "the star indicates the result for the hermite scheme .",
    ", width=340 ]    , defined in the text , as a function of the number of particles , @xmath0 . the triangle , square , and pentagon indicate those with opening angles for the tree algorithm @xmath61 and @xmath24 , respectively .",
    "the star indicates that for the hermite scheme .",
    "the thin dashed line indicates the peak performance for the hermite scheme .",
    ", width=340 ]       as a function of the number of particles , @xmath0 .",
    "the triangle , square , and pentagon indicate those with opening angles for the tree algorithm @xmath61 and @xmath24 , respectively .",
    "the star indicates that for the hermite scheme .",
    ", width=340 ]"
  ],
  "abstract_text": [
    "<S> we present an implementation of the hierarchical tree algorithm on the individual timestep algorithm ( the hermite scheme ) for collisional @xmath0-body simulations , running on grape-9 system , a special - purpose hardware accelerator for gravitational many - body simulations . </S>",
    "<S> such combination of the tree algorithm and the individual timestep algorithm was not easy on the previous grape system mainly because its memory addressing scheme was limited only to sequential access to a full set of particle data . </S>",
    "<S> the present grape-9 system has an indirect memory addressing unit and a particle memory large enough to store all particles data and also tree nodes data . </S>",
    "<S> the indirect memory addressing unit stores interaction lists for the tree algorithm , which is constructed on host computer , and , according to the interaction lists , force pipelines calculate only the interactions necessary . in our implementation , the interaction calculations are significantly reduced compared to direct @xmath1 summation in the original hermite scheme . for example , we can archive about a factor 30 of speedup ( equivalent to about 17 teraflops ) against the hermite scheme for a simulation of @xmath2 system , using hardware of a peak speed of 0.6 teraflops for the hermite scheme . </S>"
  ]
}
{
  "article_text": [
    "answer - set programming ( asp )  @xcite is an established approach for declarative problem solving and non - monotonic reasoning . so far ,",
    "research in asp can basically be classified into three categories : ( i ) theoretical foundations of asp including language extensions , ( ii ) performance and capabilities of asp solvers , and ( iii ) case studies and applications involving asp .",
    "more recently , methods and methodologies to support an asp programmer are increasingly becoming a focus of research interest  @xcite .    in this paper",
    ", we propose to augment programs with additional meta - information to facilitate the asp development process . to this end",
    ", we devised a dedicated annotation language , , standing for `` language for annotating answer - set programs '' , that specifies specially formatted program comments .",
    "this meta - information is invisible to an asp solver  therefore not altering the semantics of the program  but different tools may interpret and use the annotated information to various ends like documentation , testing , verification , code completion , or other development support .",
    "one particular and quite central feature of  is grouping rules that are related in meaning into coherent blocks .",
    "although different notions of modularity have already been proposed for asp in the literature  @xcite , a strict concept of a program module can sometimes be a too tight corset .",
    "in particular , notions of modularity in asp often come with their own semantics and different kinds of constraints need to be satisfied .",
    "for example , dlp - functions  @xcite require that their input and output signatures are disjoint and two dlp - functions need to satisfy certain syntactic constraints in order to be composable . on the other hand , @xmath1-functions are a modular approach to build a logic program from its specification  @xcite .",
    "that is , an @xmath1-function is used to realise some functional specification that relates input and output relations for some domain by means of a logic program .",
    "the kind of grouping that we are proposing has , however , no semantical ramifications other than documenting that some rules belong together in a certain sense .",
    "nevertheless , the benefit is that we add some extra structure to a program , improving the clarity and coherence of the program parts , which in turn can be used by other tools for , e.g.,unit testing  @xcite .",
    "while unit testing is an integral element in software development using common languages like java or c , it has been addressed in asp only quite recently  @xcite .",
    "we provide means to formulate unit tests for single blocks using , allowing for easy regression testing .",
    "after rules are grouped into blocks , we may use further annotations to declare respective input and output signatures , which are also useful for testing and verification .",
    "furthermore , we can declare the names and arities of predicates that are used within a block .",
    "this information can be exploited by , e.g.,an integrated development environment ( ide ) for syntax checking and code completion features while a user is writing a program . besides names , description , and arities of predicates",
    ", one can also specify the domains of term arguments of a predicate using respective language features for declaring types .",
    "this information can be used for automated detection of type violations .",
    "these declarations have the potential to eliminate the source for quite common programmer errors with only little extra cost . for verification purposes ,",
    "our annotation language can be used to specify assertions like pre- and postconditions for blocks .",
    "preconditions are expected to hold for any input of a block , while postconditions have to hold for any output .",
    "together , they can be used to verify correctness of an asp encoding with respect tosuch assertions .",
    "our main contributions are thus as follows :    * we introduce an annotation language for asp that offers various ways to express meta - information for rules and other language elements .",
    "this information can be used to support and ease the development process , test and verify programs , and to eliminate many sources for common programmer errors . *",
    "we describe , a. ] inspired tool , which takes an answer - set program , interprets the meta - comments , and automatically generates an html file documenting the program . *",
    "we introduce , an implementation of a unit - testing framework in the spirit of based on the structural annotations found in a program .",
    "this framework allows to formulate unit tests for individual program blocks , to execute them , and to monitor test runs .",
    "the paper is organised as follows . in section  [ sec : bg ] , we provide some background on asp .",
    "then , in section  [ sec : lang ] , we introduce , explain the basic language features , and illustrate them using a running example .",
    "section  [ sec : aspdoc ] describes the basic features of while section  [ sec : aspunit ] does the same for .",
    "finally , we review related work in section  [ sec : rel ] and conclude in section  [ sec : concl ] with pointers for future work .",
    "answer - set programming ( asp ) @xcite is a declarative programming paradigm in which a logic program is used to describe the requirements that must be fulfilled by the solutions of a certain problem .",
    "the solutions of the problem can be obtained through the interpretation of the answer sets of the program , usually defined through a variant or extension of the stable - model semantics @xcite .",
    "this technique has been successfully applied in various domains such as planning @xcite , configuration and verification @xcite , music composition @xcite , or reasoning about biological networks @xcite to just name a few . in the following ,",
    "we briefly cover the essential concepts of asp ; for in - depth coverage , we refer to the well - known textbook by .",
    "the basic components of the language are _ atoms _ , elements that can be assigned a truth value .",
    "an atom @xmath2 can be negated using _ negation as failure_. a _ literal _ is an atom @xmath2 or a negated atom @xmath3 .",
    "we say that @xmath3 is true if we can not find evidence supporting the truth of @xmath2 .",
    "atoms and literals are used to create rules of the general form @xmath4 where @xmath2 , @xmath5 , and @xmath6 are atoms .",
    "intuitively , this means _ if all atoms @xmath5 are known / true and no atom @xmath7 is known / true , then @xmath2 must be known / true_. we refer to @xmath2 as the head and @xmath8 as the body of the rule . rules with empty body are called _ facts_. rules with empty head are referred to as _ constraints _ , indicating that no solution satisfies the body .",
    "a ( _ normal _ ) _ program _ is a set of rules .",
    "the semantics is defined in terms of _ answer sets _",
    ", i.e. , assignments of true and false to all atoms in the program that satisfy the rules in a minimal and consistent fashion .",
    "a program has zero or more answer sets , each corresponding to a solution .",
    "different extensions to the language have been proposed . on the one hand , we have syntactic extensions , providing mere , but very useful , syntactic sugar . on the other hand , we have semantic extensions where the formalism itself is generalised .    from a programmer s perspective , _",
    "choice rules _",
    "@xcite are probably the most commonly used extension .",
    "many problems require choices between a set of atoms to be made .",
    "although this can be modelled in the basic formalism , it tends to increase to the number of rules and increases the possibility of errors .",
    "to avoid this , choices are introduced .",
    "choices , written @xmath9 , are a convenient construct to indicate that at least @xmath10 and at most @xmath11 literals from the set @xmath12 must be true in order to satisfy the construct . bound @xmath10 defaults to 0 while @xmath11 defaults to @xmath13 .",
    "choice rules are often used with a grounding predicate : @xmath14 represents the choice of a number of atoms where @xmath15 is grounded with all values of @xmath16 for which @xmath17 is true .",
    "one of the major extensions to the language was the introduction of disjunction in the head of rules  @xcite . when the body of the rule is true , we need to have at least one head atom that is true .",
    "although at first it may seem that disjunctive programs can easily be translated to non - disjunctive programs , this is not the case .",
    "both types of programs are in different complexity classes ( under the usual complexity - theoretic proviso that the polynomial hierarchy does not collapse ) .",
    "algorithms and implementations for obtaining answer sets of logic programs are referred to as _ answer - set solvers_. the most popular and widely used solvers are dlv  @xcite , providing solver capabilities for disjunctive programs , and the sat inspired clasp @xcite .",
    "alternatives are smodels  @xcite and cmodels  @xcite , a solver based on translating the program to sat .",
    "in this section , we describe our annotation language .",
    "an overview of most language elements of  appears in table  [ tab : summary ] ; table [ tab : testcases ] gives a summary of the remaining language elements related to testing in .",
    "we make use of a simple answer - set program to illustrate all the language features in a step - by - step fashion .",
    "in particular , we use an encoding of the _ battleship _ puzzle .",
    "a solved instance of battleship appears in fig .",
    "[ fig : battleship ] . in battleship ,",
    "a group of ships is hidden on a grid and one has to find the positions of each .",
    "the fleet consists of one four - squares long battleship , two three - squares long cruisers , three two - squares long destroyers , and four one - square long submarines  each ship is placed horizontally or vertically on the grid such that no ship is touching any other ship ( not even diagonally ) . to provide hints",
    ", some squares may show parts of a ship or water .",
    "moreover , a number besides each row and each column indicates how many squares in that row or column are occupied by ship parts .",
    "a solution of a puzzle is a configuration of all the ships that is consistent with the initially given hints .",
    ".overview of   based on bnf . [ cols=\"^,<,<\",options=\"header \" , ]     to support large application developments , traditional languages offer programming tools that automatically generate searchable documentation , like e.g. ,  .",
    "methodologies like test - driven development provide a mechanism to incrementally unit test code and to support regression testing ; is an example of this for java .",
    "provides the support for both , incorporating the annotation of tests directly into the documentation of the program .",
    "the use of assertions in  is inspired by the java modelling language @xcite and annotations as used in prolog @xcite .",
    "similar to our unit testing approach , prolog offers unit - testing functionality called . as in our approach , where tests are expressed using asp itself and only a java wrapper is used to call all tests within a given test - suite , tests in  are formulated as prolog clauses .    provide a mechanism for unit testing in asp , which is incorporated in their ide @xmath18 .",
    "they base unit tests on clusters on the dependency graphs or rule labelling , while we allow the user to decide which rules belong to a test by defining blocks .",
    "in this paper , we presented , an annotation language for asp .",
    "this language can be used to structure a program into blocks and to declare language elements like predicates with type information , input and output signatures , pre- and postconditions , test cases , etc .",
    "annotations do not interfere with the languages of answer - set solvers as they have the form of program comments .",
    "the main advantage of such annotations is that they can be interpreted by tools to support the development process , to automatically test and verify programs , and to increase maintainability by enhancing program documentation .",
    "in fact , we implemented and described two such tools , namely for generating an html documentation for a program , and for running and monitoring unit tests .",
    "the former tool is especially useful for maintaining and using larger collections of program modules ; the latter tool is used for managing a test corpus when a program is developed and to enable test - driven development methods , a methodology popular in industry , e.g.,as in extreme and agile programming .",
    "while many interesting features of  for development support can be realised by stand - alone tools like and , things become more interesting when the respective functionalities are available within an ide for asp .",
    "the two most actively developed ides for asp at present are @xmath0  @xcite and @xmath18  @xcite .",
    "then , the proposed language can be used as a basis to realise intelligent syntax highlighting , static or dynamic type checking , code completion , and so on .",
    "indeed ,  can already be parsed by @xmath0and the features of aspdoc are already available from within the ide .",
    "further integration is planned with the goal that all features sketched in this paper are supported in @xmath0 .",
    "furthermore , we want to empirically evaluate to what extent additional meta - information is beneficial for program development within courses on declarative problem solving at our universities . in general ,",
    "program annotations provide a wealth of information .",
    "one of the main issues with debugging asp programs is the difficulty of working out the program s interpretation of the problem ( resp . ,",
    "solution ) , and the programmer s view of the problem ( resp . ,",
    "solution ) . using the meta - data",
    ", it would be possible to automatically generate a semi - natural language reading of the program , allowing programmers to cross - check their interpretation of the program with that of the program itself .",
    "this is only possible if developers use a specific grammar to annotate the various components of the program .    in traditional software engineering ,",
    "coding standards including documentation are imposed , especially in case of developing large software projects . in this paper , we propose  as part of coding standards for asp .",
    "future work will look into other best - practices for writing and maintaining asp programs .",
    "the growing number of applications of asp can provide a wealth of information for this .",
    ", de  vos , m. , brain , m. , and padget , j. 2008 . : declarative visualisation and animation using answer set programming . in _ proc .",
    "iclp 2008_. lecture notes in computer science , vol .",
    "springer , 724728 .                                ,",
    "niemel , i. , oetsch , j. , phrer , j. , and tompits , h. 2011 . random vs. structure - based testing of answer - set programs : an experimental comparison . in _",
    "proc.lpnmr 2011_. lecture notes in computer science , vol .",
    "springer , 242247 .      ,",
    "oetsch , j. , phrer , j. , and tompits , h. 2011 .",
    "kara : a system for visualising and visual editing of interpretations for answer - set programs . in _",
    "proc.inap/wlp 2011_. infsys research report 1843 - 11 - 06 , 152164 .",
    "annotations for prolog - a concept and runtime handling . in _ selected papers of the 9th international workshop on logic - based program synthesis and transformation _ ( _ lopstr 1999_)__. lecture notes in computer science , vol .",
    "springer - verlag , 234254 .",
    ", phrer , j. , and tompits , h. 2010 . methods and methodologies for developing answer - set programs",
    " project description . in _ technical communications of the 26th international conference on logic programming ( iclp 2010)_. lipics , vol",
    "schloss dagstuhl - leibniz - zentrum fr informatik , 154161 ."
  ],
  "abstract_text": [
    "<S> while past research in answer - set programming ( asp ) mainly focused on theory , asp solver technology , and applications , the present work situates itself in the context of a quite recent research trend : _ development support for asp . _ in particular , we propose to augment answer - set programs with additional meta - information formulated in a dedicated annotation language , called . </S>",
    "<S> this language allows the grouping of rules into coherent blocks and to specify language signatures , types , pre- and postconditions , as well as unit tests for such blocks . while these annotations are invisible to an asp solver , as they take the form of program comments , they can be interpreted by tools for documentation , testing , and verification purposes , as well as to eliminate sources of common programming errors by realising syntax checking or code completion features . to demonstrate its versatility , we introduce two such tools , viz .  </S>",
    "<S> ( i )  , for generating an html documentation for a program based on the annotated information , and ( ii )  , for running and monitoring unit tests on program blocks .  </S>",
    "<S> is also exploited in the @xmath0system , an integrated development environment for asp based on eclipse .    </S>",
    "<S> [ firstpage ]    answer - set programming , program annotations , documentation , unit testing </S>"
  ]
}
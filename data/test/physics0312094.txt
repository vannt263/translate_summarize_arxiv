{
  "article_text": [
    "certain dissipative evolutionary equations possess low - dimensional , attracting invariant manifolds which govern their long term dynamics . such a manifold is readily apparent for a system given in the singularly perturbed form : dy / dt = y = f(y , z ) , f ^n+m ^n dz / dt = z = g(y , z)/ , g ^n+m ^m where @xmath0 and @xmath1 are such that , for small positive @xmath2 , @xmath3 is rapidly attracted to the region @xmath4 and @xmath5 is non - singular . since @xmath6 where @xmath7 is the solution of @xmath8 ,",
    "the slow manifold is given by the solution of y = f(y , z_0(y ) ) + o ( ) so that we can `` easily '' compute an approximation to it .",
    "the one - dimensional slow manifold is parameterized here by @xmath9 ( other parameterizations are also possible )",
    ".    in more complicated cases , approximations to the slow manifold may not be so apparent ; yet within such manifolds the system dynamics can still be described by a lower - order differential equation - the _ reduced system_. methods for approximating such manifolds have been the subject of intense research in communities ranging from reactive flow modeling ( e.g. @xcite ) to inertial manifolds for dissipative pdes ( e.g. @xcite ) .",
    "if we are able to somehow constrain the dynamics to a slow manifold , stable numerical integration could be performed with larger stepsizes than would be possible in the original system .",
    "furthermore , many global properties of the original system are ( approximately ) inherited by the reduced system ; these include stationary points , limit cycles , and bifurcations and may be computable more easily on the slow manifold . unfortunately ,",
    "approximating the slow manifold may be as computationally challenging as the original problem .",
    "in our work we seek an approximation to such a manifold that is ( a ) simple to obtain _ on the fly _ during numerical computations , and ( b ) only requires evaluations of time derivatives of the state , such as would be available from a legacy code . our starting point is the assumption that , given a basis for the full set of variables in the problem , a subset of this basis can be used to parameterize the slow manifold and our approximation of it , as @xmath9 did in our example above . in some applications , such as when the full system is described by a microscopic simulation , the subset used to parameterize the slow manifold might be called  macroscopic observables \" ; such observables could be the pressure field in kinetic theory based flow simulation , or a concentration field in the kinetic monte carlo simulation of a chemical reaction .",
    "we may start with a finite - dimensional system ( an ode ) or an infinite - dimensional system ( a pde , for example ) . in the latter case",
    "we will have to introduce a finite - dimensional approximation before commencing computation ( in effect , the `` method of lines '' ) .",
    "suppose that the system is represented by ( approximated by ) the system u_t = l(u ) where @xmath10 .",
    "for ease of presentation , let us assume that the equation has already been transformed to a suitable basis so that @xmath11 parameterizes the slow manifold .",
    "in some sense we are assuming that the remaining variables , @xmath12 , are the `` fast '' ones that are quickly `` slaved '' to @xmath13 ; we will return to this assumption .",
    "the split system is = l_1(u , v ) = l_2(u , v ) .",
    "we now view the solutions of the system as families of curves in the @xmath14 state space , as illustrated in - although such figures are potentially misleading because we have to remember that each axis represents a multi - dimensional space .",
    "the essential feature of the figure is that one member of the family of solutions is a `` slow '' manifold _ with no high - curvature region _ , while other members of the family of solutions approach this slow manifold relatively rapidly .",
    "since the slow manifold , @xmath15 , can be parameterized by the slow variables , @xmath13 , points on @xmath15 , @xmath16 , must be uniquely determined by @xmath13 - that is , the curve can not `` fold '' in the region of interest .",
    "if we had a scheme for approximating the value of @xmath17 for each @xmath13 ( as we did in the singularly perturbed example above ) we could , for example , apply a numerical integration method to just the @xmath13 variables , _ computing the equivalent values of @xmath18 only as needed by the integration scheme_. this is the main point of our approach : one does not compute the entire manifold _ a priori _ , but only computes it pointwise ,  on demand \" as required by the low - dimensional integration code ( or by algorithms performing other numerical tasks , such as fixed point computation ) .    from the assumptions ,",
    "we suspect that an approximation to the slow manifold can be found by computing the value of @xmath19 ( as shown in ) for which the time derivatives of the @xmath20 components are zero . here",
    "we will compute on this  steady manifold \" ; for the appropriate basis choice this steady aim is not too far from the slow manifold .",
    "better approximations , based on higher order expansions of singularly perturbed equations , can also be used in a legacy code context , and will be the subject of further work .",
    "we are particularly interested in the case where we do not have `` access '' to the differential equations directly because , for example , we have a legacy simulation code , or the system is the unknown closure of a microscopic simulation model ( kinetic monte carlo , molecular dynamics ) .",
    "then , the only computational possibility we have is to integrate the full system for a short time in what we call an _ inner _ integration step . in this case",
    ", we can define an aim by requiring that the _ chord _ of the inner step has zero change in the @xmath20 components , that is , it is `` horizontal . ''",
    "this can be computed iteratively by performing an inner integration over a small step of length @xmath21 and then _ projecting _ the solution back to the specified value of @xmath13 ( by simply resetting the values of @xmath13 to their values at the start of the step ) and repeating .",
    "if @xmath21 is small enough , this iteration will converge if the solution family in the neighborhood of @xmath22 is locally attracted to the solution that passes through @xmath23 .",
    "this can be seen by noting that one step of the process performs the mapping v_m+1 = v_m + gl_2(u , v_m ) + o(h^2 ) so we have v_m+1 - v_m = ( i + h)(v_m - v_m-1 ) + o(h^2 ) which implies convergence for small enough @xmath21 if the eigenvalues of @xmath24 are in the negative half plane .",
    "this property can form the basis of alternative algorithms to approximate the ",
    "steady aim : \" matrix free fixed point algorithms , like the recursive projection method or gmres @xcite can be applied to accelerate the computation of the fixed point of .    in the following sections we will illustrate the use of this technique on the chafee - infante reaction - diffusion equation = + u - u^3 with @xmath25 and @xmath26 .",
    "this is known to possess an inertial manifold of dimension two ( in effect , the two - dimensional unstable manifold of the origin , and its closure ) .",
    "although we know the differential equations in this example , we are not going to make explicit use of the knowledge in our computational method .",
    "we will only use it as if we were given a legacy code for evaluating time derivatives .",
    "we first discretize the equations in space . since we are not interested in the issue of the best spatial discretization , we use simple finite difference methods over @xmath27 equally spaced points , so that the variables are @xmath28 , where @xmath29 .",
    "these variables are chosen for convenience in the calculation .",
    "the resulting odes are the usual : = ( u_i-1 - 2u_i + u_i+1 ) + u_i - u^3_i , i = 1 , , n where @xmath30 .",
    "if we had a legacy code or a microscopic model , the variables would be the ones that happened to come with the code or model .",
    "in this example , no subset of the @xmath31 variables is suitable for defining the aim ( since the slow manifold varies rapidly as a function of each @xmath32 ) so we will use an  observation basis \" in which a linear combination of the variables will parameterize the aim . in this case , we can use a basis formed by @xmath33 .",
    "( these are the unnormalized eigenvectors of when @xmath34 . )",
    "the modified variables are a_i = _",
    "j=1^n_ij u_j where @xmath35 , is the basis given by @xmath36 .",
    "the first two @xmath37 can parameterize the slow manifold , and it is not necessary to calculate the rest .",
    "we now present a technique for approximating @xmath38 _ on the slow manifold _ given @xmath39 .",
    "this approximation can then be used to implement time integration , stability analysis , or other numerical procedures on the system _ constrained to the aim_. the general method consists of    1 .",
    "start with a prescribed value of @xmath39 .",
    "2 .   compute the values of @xmath31 such that is satisfied and the local derivative of the full ( @xmath31 system ) is `` horizontal '' in the other components of the basis ( in this example , @xmath40 ) .",
    "this can be done in a number of ways : 1 .   use and to compute @xmath41 and then solve for the values of @xmath42 that makes these zero using newton iteration .",
    "this can be done directly when the equations are available ( it is done in the example illustrated here ) , or can be done through matrix - free based contraction mappings if the equations are not explicitly available .",
    "2 .   if we only have a legacy code or a microscopic simulator of the full system , use iteration repeatedly to find the values of @xmath43 such that the chords of those @xmath42 are zero .",
    "3 .   conceptually",
    "( since this is not practical for a legacy code ) one could implement a lagrange multiplier , evolving the dynamics while constraining the projection of the solution on @xmath39 .",
    "this is reminiscent of techniques like shake used to  prepare \" molecular dynamics simulations @xcite .",
    "the approach described immediately above is a way of effectively implementing what amounts to such a lagrange multiplier constrained integration to a legacy simulator .",
    "3 .   compute the derivatives ( or chord slope ) of the full ( @xmath31 ) system from the given values of @xmath44 and the now computed @xmath45 ( actually they have probably been computed in the previous step ) .",
    "4 .   compute the ",
    "@xmath39 \" components of the derivative by applying to the @xmath31 derivatives .",
    "these are the approximations to the time derivatives of @xmath39 _ on the steady aim_.    in the next section we will use this technique to integrate both forward and backward in time on our two - dimensional steady aim , and compare it with the integration of the full system and in the subsequent section we will use it to compute the steady states directly by performing a newton iteration on the two - dimensional steady aim .",
    "in @xcite we introduced _ projective integration _ which uses computation of the chord slope obtained by integration of a legacy code or of a microscopic model in place of derivatives for performing large _ projective _ integration steps on the slow components .",
    "if we were working with legacy codes or microscopic simulators , we would use that technique in our  on manifold \" integrations .",
    "however , we have chosen an example for which we know the equations of the detailed system , so that we can compare the `` true '' integration of the system with the approximation on the steady aim we have defined .",
    "we integrated the full system using the automatic runge - kutta method with the dormand - prince pair of formulae known as rk45 and available in matlab as * ode45*. we also used the same method to integrate just @xmath39 _ on the aim _ , using the technique described in the previous section to approximate the derivatives of @xmath39 .",
    "it is possibly better to view this as the ( approximate ) integration _ of the projection _ on the @xmath39  observables plane \" of the true dynamics .",
    "the results for @xmath39 are shown in .",
    "the integration was started from six different points near the origin in the @xmath39 plane ( which is an unstable steady state ) .",
    "all but one approach the stable steady state at approximately ( 1.12,0 ) but the one that starts at ( 0,0.05 ) stays on the invariant submanifold @xmath46 and moves to the saddle point at about ( 0,0.7 ) . since the origin is on the inertial manifold of , the starting points are also very close to it so that the rk45 integration of the full system gives a good approximation of the solutions on the inertial manifold and provides a picture of the manifold itself . in",
    ", the solid line is the rk45 solution of the full system , while the dashed line is the integration on our steady aim .    the full system in is rapidly damped in its fastest components , and so it would not be feasible to numerically integrate it _ in the reverse time direction_. however , the @xmath39 differential system on the aim does not have these fast components , so it can be integrated `` backwards . ''",
    "the dotted arcs in are the results of a reverse integration in the @xmath39-plane starting from a point on the rk45 solution of the full system shortly before the stationary point is reached ( one ca nt start too close to the stationary point because the trajectory chosen would be too sensitive to small perturbations ) .    as we can see in , the forward and",
    "reverse solutions on the aim are fairly good approximations to the components of the  true \" solution on the i m .",
    "we do not expect the other components , @xmath47 to be good approximations .",
    "this is shown in which shows the values of @xmath48 plotted against @xmath49 for each of the trajectories .",
    "( the reverse integration trajectories are almost indistinguishable from the forward trajectories for the @xmath39 integration . )",
    "the procedure described in section 1 computes @xmath50 where @xmath51 is the parameterization of the slow manifold . using any standard techniques we can look for zeros of @xmath52 to identify stationary states of the system .",
    "since the dimension is low , we can use newton s method , computing the approximate partial derivatives by finite differencing .",
    "many better methods exist , but our purpose here is simply to show that the reduced system can be used directly in any conventional numerical process",
    ".    shows the sequence of iterates for newton s method starting at three different point in the @xmath39-plane and iterating until changes were less than @xmath53 in the l1 norm .",
    "the eigenvalues of @xmath54 as the iteration proceeds are also shown . for comparison ,",
    "the two leading eigenvalues of the full system at steady state for each of the three cases are ( 0.8403,0.3648 ) , ( 0.2204,-0.7118 ) , and ( -1.4491,-1.5392 ) respectively . as can be seen , the three stationary points , ( 0,0 ) , ( 0,0.7056 ) , and ( 1.1206,0 ) are source , saddle , and stable ( sink ) , respectively .",
    "note that the stationary states on the steady aim are necessarily on the slow manifold since all of the derivatives are zero at these points .",
    "& & & + 0.2000 & 0.2000 & 0.7171 & 0.1971 + -0.0838 & -0.1946 & 0.7737 & 0.2684 + 0.0159 & 0.0551 & 0.8351 & 0.3571 + -0.0002 & -0.0009 & 0.8403 & 0.3648 + 0.0000 & 0.0000 & 0.8403 & 0.3648 +   + & & & + 0.1000 & 0.7500 & 0.1666 & -0.8904 + -0.0405 & 0.7271 & 0.2069 & -0.7902 + 0.0063 & 0.7087 & 0.2359 & -0.7293 + -0.0001 & 0.7057 & 0.2405 & -0.7203 + 0.0000 & 0.7056 & 0.2407 & -0.7200 +   + & & & + 1.0000 & 0.1000 & -0.8687 & -1.5201 + 1.1707 & -0.0462 & -2.0297 & -1.6832 + 1.1255 & -0.0042 & -1.6847 & -1.6599 + 1.1206 & -0.0000 & -1.6529 & -1.6529 + 1.1206 & -0.0000 & -1.6528 & -1.6526 +    [ t1 ]",
    "we have demonstrated that it is possible to perform low - dimensional ( macroscopic ) computations on an aim ( more precisely , on _ observations _ of an aim ) based on choosing a suitable parameterization of the low dimensional slow manifold . that parameterization must be chosen so that the slow manifold does not ",
    "fold over it \" .",
    "it must also be chosen so that the induced aim is reasonably close to the true slow manifold . in the example we discussed",
    ", the first two eigenvectors of the linearization of the problem at a particular solution value ( the origin ) were chosen to parameterize the manifold , since at that solution value they are tangent to the true slow manifold .",
    "as long as the solution does not stray too far from that region ( compared to the non - linearities present ) these directions provide a reasonable parameterization to the slow manifold elsewhere . the steady aim for these two variables",
    "is illustrated in which plots @xmath48 against @xmath49 and @xmath55 on the aim .",
    "this aim is a reasonable approximation of the slow manifold , ( which is shown is figure 1 of @xcite ) .",
    "it is clear from this figure that choosing , say , @xmath55 and @xmath48 to characterize the slow manifold would have been bad since @xmath56 is multivalued for some @xmath48 .",
    "( see the line @xmath57 that is indicated in the figure .",
    "it intersects the aim twice within the region plotted . )",
    "this is true even near the origin , where this aim is a good approximation to the inertial manifold .",
    "the focus of this work was on the use of a legacy simulator to approximate the slow manifold on the fly , as dictated by the needs of numerical analysis tools employed for computations on it .",
    "the local nature of the approximation should be contrasted to  off line",
    "\" algorithms that attempt to approximate the entire manifold first ( see the extensive discussion in @xcite as well as @xcite ) .",
    "here we pursued the simplest approximate manifold one can find by constraining a legacy code .",
    "an important issue that was only tangentially mentioned here was the selection of good basis functions ( or macroscopic observables in the case of atomistic inner simulators ) that parameterize the manifold ; statistical data analysis techniques have an important role to play in this .",
    "better algorithms , resulting from the implementation of higher order approximations to the slow manifold ( requiring a higher order derivative to vanish ) in a legacy code context are currently being explored .",
    "gear , c. w. and kevrekidis , i. g.  projective methods for stiff differential equations : problems with gaps in their eigenvalue spectrum \" ; nec technical report neci - tr 2001 - 029 _ siam j. sci . comp._. * 24*(4 ) pp.1091 - 1106 ( 2003 ) .",
    "rico - martinez , r. , c. w. gear and i.g.kevrekidis  coarse projective kmc integration : forward / reverse initial and boundary value problems \" , _ j. comp .",
    "_ , in press ( 2003 ) ; can be found as nlin.cg/0307016 at arxiv.org .",
    "j. p.ryckaert , g. ciccotti and h. berendsen  numerical integration of the cartesian equations of motion of a system with constraints : molecular dynamics of n - alkanes \" _ j. comp .",
    "_ * 23 * pp.327 - 341 ( 1977 )"
  ],
  "abstract_text": [
    "<S> if the dynamics of an evolutionary differential equation system possess a low - dimensional , attracting , slow manifold , there are many advantages to using this manifold to perform computations for long term dynamics , locating features such as stationary points , limit cycles , or bifurcations </S>",
    "<S> . approximating the slow manifold , however , may be computationally as challenging as the original problem . </S>",
    "<S> if the system is defined by a legacy simulation code or a microscopic simulator , it may be impossible to perform the manipulations needed to directly approximate the slow manifold . in this paper </S>",
    "<S> we demonstrate that with the knowledge only of a set of `` slow '' variables that can be used to _ </S>",
    "<S> parameterize _ the slow manifold , we can conveniently compute , using a legacy simulator , on a nearby manifold . forward and </S>",
    "<S> reverse integration , as well as the location of fixed points are illustrated for a discretization of the chafee - infante pde for parameter values for which an inertial manifold is known to exist , and can be used to validate the computational results .    </S>",
    "<S> * keywords * differential equations , inertial manifolds , stiff equations </S>"
  ]
}
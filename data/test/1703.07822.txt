{
  "article_text": [
    "consider the scenario shown in figure [ fig : ex ] , where a robot ( motoman ) assists another robot ( baxter ) that can not reach its desired object . due to the placements of the robots in the scene , the intersection of each robot s reachable",
    "workspace is empty , which restricts the robots from executing a `` direct hand - off '' maneuver . in this case",
    ", the motoman robot must exploit the dynamic physical properties of the object in order to `` slide '' it over to the baxter robot .",
    "ideally , this action would happen without intervention or assistance from an outside operative , such as a human .",
    "learning the physical properties of an object and predicting its motion under physical interaction is a critical aspect of this challenge .",
    "if the robot simply executes a maximum velocity push on the object , the result could cause the object to leave the robot s workspace ( i.e. falling off the table ) , which is undesirable as it would ruin the autonomous behavior of the system .",
    "this paper proposes a data - efficient approach for motion prediction by utilizing a physics engine and learning the physical parameters through black - box bayesian optimization . specifically , the objective of the method is to predict the motion of an object when acted upon by a robotic hand .",
    "first , a real robot is used to perform some random pushing action with an object on a tabletop  @xcite .",
    "both the initial and final configurations of the object and the hand are recorded . instead of learning the object s motion explicitly ,",
    "a bayesian optimization technique is used to identify relevant physical parameters , such as mass and friction , through the physics engine simulation . to predict the motion of the object under a new action",
    ", the learned parameters can be used to simulate the action in a physics engine .",
    "the results of this simulation can then be used by the robot to predict the effect of its action on the object . to solve the challenge in figure [ fig : ex ] ,",
    "the same bayesian optimization technique is used to search the optimal control policy for the robotic hand pushing the object .",
    "several physics engines have been used for simulating dynamics of robots as well as the objects they interact with .",
    "examples of popular physics engines frequently used in robotics include _ bullet _",
    "@xcite , _ mujoco _",
    "@xcite , _ dart _  @xcite , _ physx _",
    "@xcite , _ havok _",
    "@xcite , _ ode _",
    "@xcite , and _ graspit !",
    "_  @xcite . a survey and a comparison of these tools are given in  @xcite .",
    "data - driven system identification is a popular approach that is at the core of learning for control techniques .",
    "examples of these techniques include model - based reinforcement learning for instance  @xcite .",
    "we focus here on works related to learning mechanical models of unknown objects .",
    "several cognitive models that combine bayesian inference with approximate knowledge of newtonian physics have been proposed recently  @xcite .",
    "these methods learn probabilistic models from noisy physical simulations .",
    "nevertheless , these models are built to explain the learning of newtonian physics in humans , rather than to be used for robotic manipulation , which typically requires a higher precision as well as faster learning and inference times .",
    "two high - level approaches exist for solving physical interaction problems , which reside at two extremes of a spectrum .",
    "model - based approaches  @xcite rely on accurate models for objects and their properties .",
    "they are used within standard simulation , planning , and actuation control loops .",
    "a physics - based simulation was used in  @xcite for predicting the effects of pushing actions , but the authors considered only flat , well - separated objects on a smooth surface .",
    "a nonparametric approach was used in  @xcite for learning the outcome of pushing large objects ( furniture ) .",
    "a markov decision process ( mdp ) is used in  @xcite for modeling interactions between objects , however , only simulation results on pushing were reported in that work . nevertheless , it is prohibitive to manually define perfect and accurate models that express all types of interactions a robot can experience in the real world .",
    "other bayesian model - based techniques , such as pilco  @xcite , have been proven efficient in utilizing a small amount of data for learning dynamical models and optimal policies .",
    "these techniques learn dynamical equations from scratch , unlike our method which assumes that the motion equations are known and provided by a physics engine , and instead concentrates on identifying only the inertial and friction properties of the objects .",
    "another alternative , which is becoming increasingly popular , addresses these challenges through end - to - end learning  @xcite .",
    "this involves the demonstration of many successful examples of physical interaction and learning the controls for solving a problem as a function of the sensing input .",
    "these approaches , however , usually require many physical experiments to effectively learn .",
    "the proposed method aims to be more data - efficient , and can quickly adapt online to minor changes in object dynamics .",
    "furthermore , it is not clear for existing methods how uncertainty , a consequence of learning from a small number of data points , could be handled in a principled way .",
    "note that there is a significant body of work on learning sliding models of objects using _ white - box _",
    "optimization  @xcite .",
    "it is not clear , at the moment , if these methods would perform better than the proposed approach .",
    "a drawback of white - box methods is that they are often used only in simple setups , such as pushing planar objects  @xcite .",
    "to solve the problem of modeling mechanical properties of objects , this paper proposes an online learning approach to identify mass and sliding models of objects using bayesian optimization .",
    "the goal is to allow the robot to use predefined models of objects , in the form of prior distributions , and to improve the accuracy of these models on the fly by interacting with the objects .",
    "this learning process must happen in real time since it takes place simultaneously with the physical interaction .",
    "figure  [ systemidworkflow ] shows an overview of the proposed approach .",
    "the first step consists of using a pre - trained object detector to detect the different objects present in the scene and estimate their poses by mapping them to a knowledge base of pre - existing 3d mesh models .",
    "the proposed method augments the 3d mesh models of each object with the mechanical properties .",
    "these properties correspond to the object s mass , as well as the static and kinetic friction coefficients for each rigid subpart of a given object .",
    "using a different model for each subpart of an object is crucial to modeling articulated objects . in this work ,",
    "we focus on non - articulated objects .",
    "we divide the surface of an object into a regular grid and identify the friction parameters of each part of the grid .",
    "these properties are represented as a @xmath0-dimensional vector @xmath1 . a prior distribution @xmath2 on @xmath1",
    "is used instead of a single value of @xmath1 , since different instances of the same category usually have different mechanical properties .",
    "the online learning algorithm takes as input a prior distribution @xmath3 on the model parameters @xmath1 .",
    "@xmath3 is calculated based on an initial distribution @xmath2 and a sequence of observations @xmath4 , wherein @xmath5 is the 6d pose ( position and orientation ) of the manipulated object at time @xmath6 and @xmath7 is a vector describing a force applied by the robot s fingertip on the object at time @xmath6 . applying a force @xmath8 results in changing the object s",
    "pose from @xmath9 to @xmath10 .",
    "given a prior distribution @xmath3 and a new observation @xmath11 , a physics engine is used to estimate a posterior distribution @xmath12 on the model parameters @xmath1 .",
    "we are currently using the _ bullet _ physics engine  @xcite .",
    "the posterior distribution @xmath12 is obtained by simulating the effect of force @xmath13 on the object under various values of parameters @xmath1 and observing the resulting positions @xmath14 .",
    "the goal is to identify the model parameters that make the outcome @xmath14 of the simulation as close as possible to the actual observed outcome @xmath10 . in other terms , the following black - box optimization problem is solved : @xmath15 wherein @xmath9 and @xmath10 are the observed poses of the object at times @xmath6 and @xmath16 , @xmath8 is the force that moved the object from @xmath9 to @xmath10 , and @xmath17 , the simulated pose at time @xmath16 after applying force @xmath8 in pose @xmath5 .",
    "the model parameters @xmath1 can be limited to a discrete set , i.e. @xmath18 . a naive approach of solving this problem consists of systematically simulating all the parameters @xmath19 in @xmath20 , simulating the effect of force @xmath8 on the object with parameters @xmath19 , and comparing the predicted pose @xmath21 to the actual pose @xmath10 .",
    "however , this would be inefficient due to the size of @xmath20 , which is relatively large given that the dimension @xmath0 of the parameter space is typically high .",
    "furthermore , each individual simulation is also computationally expensive .",
    "it is therefore important to minimize the number of simulations while searching for the optimal parameters .",
    "moreover , the optimization problem above is ill - posed , as is the case in all inverse problems . in other terms , there are multiple model parameters that can explain an observed movement of an object . instead of returning a single answer , the proposed algorithm returns a distribution @xmath12 on the set of possible parameters @xmath20 .",
    "this paper formulates this challenge in a bayesian optimization framework , which uses the entropy search technique presented in  @xcite .",
    "this work instead presents a more computationally efficient version of the entropy search technique , that we call _ greedy entropy search _ and describe in the following .    to solve the aforementioned bayesian optimization problem",
    ", the error function @xmath22 must be learned from a minimum number of simulations , using a sequence of parameters @xmath23 . to choose these parameters efficiently , a belief about the actual error function",
    "is maintained . this belief is a probability measure @xmath24 over the space of all functions @xmath25 .",
    "a gaussian process ( gp ) is used to represent the belief @xmath26 , which is sequentially updated using the errors @xmath27 computed from simulation using model parameters @xmath28 .",
    "readers can find more details in textbooks on how gaussian processes are updated from data and how to get the gp belief @xmath26 on unknown function @xmath22 from data points @xmath27  @xcite .",
    "the belief @xmath26 is initialized at each time instance @xmath6 using prior @xmath3 , which represents the model distribution from the previous time - step .    after simulating the object s motion with different model parameters @xmath29",
    ", @xmath26 is updated using the computed simulation errors . @xmath26",
    "implicitly defines another distribution @xmath30 on the identity of the best model parameter @xmath31 , which can be used to select the next simulation parameter @xmath32 .",
    "@xmath33 where @xmath34 is the heaviside step function , i.e. @xmath35 if @xmath36 and @xmath37 otherwise .    unlike @xmath24 ,",
    "the distribution of the simulation error @xmath22 modeled as a gaussian process , the distribution @xmath30 does not have a closed - form expression .",
    "therefore , _",
    "monte carlo _ is used for estimating @xmath30 from samples of @xmath38 for each @xmath39 . specifically , this process samples vectors containing the values that @xmath22 takes , according to the learned gaussian process , in each model parameter in @xmath20 .",
    "@xmath40 is estimated by counting the fraction of sampled vectors of the values of @xmath22 where @xmath19 happens to have the lowest value .",
    "the model parameter @xmath1 is chosen such that it has the highest contribution to the current entropy of @xmath30 , i.e. with the highest term @xmath41 , as the next model parameter to evaluate in simulation .",
    "this method is referred to as the _ greedy entropy search _ method because it aims to decrease the entropy of the belief @xmath30 .",
    "this process is repeated until the entropy of @xmath30 does not change much or until the simulation s time budget is consumed .",
    "after that , @xmath30 is used as the new belief @xmath12 on the model parameters .",
    "this new belief can then be utilized for planning an action @xmath13 which will move the object to a new pose @xmath10 , after which the same process is repeated all over again .      given a distribution @xmath3 on the model ( e.g , friction parameters and mass ) , and cost function @xmath42",
    ", where @xmath43 is a trajectory of predicted object poses and applied forces , the robot needs to find a feedback control policy @xmath44 that returns an action @xmath8 in pose @xmath5 of the object .",
    "policy @xmath44 is limited to a family of predefined policies ( e.g , pushing directions ) and parametrized by @xmath45 ( e.g. , end - effector velocity along a given pushing direction ) . since the physics engine that we are using is deterministic , the transition model used by the physics engine is defined to be a function @xmath46 that takes as input an initial pose @xmath47 and a policy @xmath44 , a model parameter @xmath1 and returns a trajectory @xmath48 .",
    "we then search for a policy parameter @xmath49 defined as @xmath50 .    to solve this problem in real - time ,",
    "only the most likely object model @xmath51 is used for finding the optimal policy parameter @xmath31 .",
    "the policy parameter @xmath45 can be limited to a discrete set , i.e. @xmath52",
    ". a naive approach of solving this problem consists of iterating over all the parameters @xmath53 in @xmath54 , simulating a trajectory @xmath55 of the object using policy @xmath56 , and selecting the policy parameter @xmath57 with the minimum cost @xmath58 . however , this would be computationally inefficient .",
    "we therefore use the same _ greedy entropy search _ method , presented in the previous section , for searching for the best policy parameter @xmath49 in real - time .",
    "this is achieved by noticing the analogy between model parameters @xmath1 and policy parameters @xmath45 , and between the simulation error @xmath59 and the cost function @xmath60 .",
    "hence , the same technique can be used for finding @xmath50 where @xmath1 is known and @xmath45 is a variable .",
    "in all experiments , we used _ blender_@xcite which utilizes the _ bullet",
    "_  @xcite physics engine .",
    "physim_6dpose@xcite was used to track the object and provide the initial and final poses of the object , through a realsense depth camera mounted on the torso of the _ motoman _ robot .",
    "videos of the experiments can be found here : https://goo.gl/8pi2gu .            in this preliminary experiment ,",
    "a _ reflex sf _",
    "robotic hand mounted on the right arm of a _",
    "motoman sda10f _ manipulator was used to randomly push a simple rigid object on a tabletop , as shown in figure [ fig : moto_push_1 ] .",
    "we learn the object model parameters @xmath1 ( mass and the friction coefficient ) of an _ expo _ eraser . during data collection",
    ", no human effort is needed to reset the scene since both the speed and pushing direction were controlled such that the object was always in the workspace of the robotic hand . using the collected pushing data , the physical properties of the object",
    "were learned so as to predict the motion of the object under new actions .",
    "fifteen random pushing actions were performed .",
    "six actions were discarded due to inaccurate tracking caused by occlusions . out of the remaining nine actions ,",
    "six were used for training and the other three for testing . to measure the accuracy of the learned model ,",
    "the error between the predicted location of the object and the observed end location was computed .",
    "additionally , a large scale planar push dataset@xcite was also used to validate the proposed method .",
    "the dataset contained recorded poses of a planar object before and after being pushed by an abb irb 120 robot arm .",
    "the poses are recorded using the vicon tracking system and are therefore more accurate .",
    "0.25     0.25     we compared the results of the proposed greedy entropy search method against random search in figure  [ bo_gs ] .",
    "random search was performed by randomly sampling @xmath1 in the same parameter space as the greedy entropy search .",
    "both methods were run ten times , with the resulting mean and standard deviation of the training error reported .",
    "the results show that greedy entropy search achieved lower error when predicting the results of new actions .    0.25     0.25     the prediction error",
    "is also reported as a function of the number of training samples .",
    "figure  [ no_of_sample ] shows a comparison between the prediction errors of models trained with one sample , three samples and all six samples in .",
    "the results indicate that with more training samples , the average error decreases .",
    "the proposed method was also tested using a large scale pushing dataset@xcite . specifically , we report the result using the _ rect1 _ shape on the _ abs _ surface .",
    "200 samples were randomly selected and the result of 10-fold cross validation is shown in figure[mit ] .",
    "the proposed greedy entropy search also achieved lower error than the random search baseline .            in this experiment ,",
    "the task is to push the object to a fixed goal position from a start region .",
    "the setup is similar to [ motion prediction ] , a _",
    "manipulator pushing an _ expo _ eraser using a _ reflex hand_. for each trial , we push the object twice towards the goal , as shown in figure [ fig : moto_push_2 ] . in this experiment ,",
    "the policy parameter @xmath45 is the push direction .",
    "25 random actions are sampled and the action that can push the object closest to the goal position is selected to be executed .",
    "we compare the pushing results using motion prediction model with two sets of parameters : one is learned using greedy entropy search , the other is found using random search .",
    "figure  [ action ] shows that the model using greedy entropy search enabled the robot to push the object to the 1 cm vicinity of the goal position 7 out of 10 trials , while the one using random search only did it 4 times .",
    "so far , the actions were limited to low speed pushes so that the object was always in the reachable workspace of the robot .",
    "in order to solve the challenge presented in figure [ fig : ex ] , however , higher speed push actions are needed .",
    "the friction between the object and the contact surface varies when the object moves at different speeds .",
    "we can collect data using higher speed push in a similar way to [ data ] .",
    "however , this also means much more human resets will be needed , since the robot would push the object away from its workspace , sometimes even off the table . in this experiment , we avoid the human resets and aim to optimize high speed pushing policy using model trained with only low speed pushing data .       to push the object to the other side of the table.,scaledwidth=45.0% ]        in this experiment ,",
    "the task is to push the bottle from one side to the other side of the table , which is about one meter away , as shown in figure [ fig : moto_push_3 ] .",
    "we aim to find the optimal policy with parameter @xmath45 representing the pushing speed of the robotic hand .",
    "we collected random low speed pushing data in a similar way to [ data ] , using a _ glucose bottle _ , without human reset .    after being pushed , the object sometimes is no longer within the view of the realsense camera on the torso of _",
    "motoman_. instead , the in - hand camera on _ baxter _ robot was used to localize the final location of the object after it s being pushed . after learning the object model with parameters @xmath1 ( mass and the friction coefficient ) , using the greedy entropy search approach , optimal policy that can push the object closest to the goal position is selected .",
    "we compare our approach with a model - free reinforcement learning method : policy learning by weighting exploration with the returns ( power)@xcite .",
    "power iteratively optimizes a stochastic policy as an expectation - maximization(em ) problem , directly using real roll - outs results .",
    "we report results from both simulation and real roll - outs .",
    "we evaluate :    * the error between the final object location after being push and the desired goal location . *",
    "the number of times object falling off the table .",
    "figure [ fig : simulation ] and [ fig : rollouts ] show the result in simulation and with a real _ motoman _ robot . in simulation",
    ", we randomly set ground - truth(gt ) mass and friction parameters and perform roll - outs using the gt parameters . both in simulation and with the real",
    "_ motoman _ robot , the proposed method achieves both lower error and fewer object drops .",
    "we argue this is important in robot learning as we would like to minimize human efforts during the learning process in order to achieve autonomous robot learning .",
    "notice that power achieved smaller variance in real rollouts comparing to simulation .",
    "the probable reason for that is that because of sensing and actuation error in real roll - outs , power tended to be over conservative in terms of pushing speed because of the object drops it made .    0.25     0.25     0.25     0.25",
    "in this paper , we presented a data - efficient online learning method for identifying mechanical properties of objects .",
    "the method leverages a physics engine through simulation and finds the optimal parameters that match the real roll - outs in a bayesian optimization framework .",
    "the same framework is also used for policy optimization .",
    "experimental results , both in simulation and using a real robot , show that the method outperforms model - free reinforcement learning methods .",
    "an important aspect of robot learning is how many real world roll - out data are enough to achieve a certain success rate .",
    "we are currently working on evaluating the model confidence by computing the expected success rate using the uncertainty of the model . in the future",
    ", finding efficient methods for handling model parameters of non - homogeneous objects is an interesting future direction that can help scaling to more complex environment .",
    "furthermore , while this work only considered random exploratory actions , a more intelligent way of action sampling could help better exploring the action space .",
    "additionally , it would be interesting to investigate combining the pre - trained deep models with online learning to achieve both high capability of generalization and data efficiency ."
  ],
  "abstract_text": [
    "<S> we consider the problem of a robot learning the mechanical properties of objects through physical interaction with the object , and introduce a practical , data - efficient approach for identifying the motion models of these objects . </S>",
    "<S> the proposed method utilizes a physics engine , where the robot seeks to identify the inertial and friction parameters of the object by simulating its motion under different values of the parameters and identifying those that result in a simulation which matches the observed real motions . </S>",
    "<S> the problem is solved in a bayesian optimization framework . </S>",
    "<S> the same framework is used for both identifying the model of an object online and searching for a policy that would minimize a given cost function according to the identified model . </S>",
    "<S> experimental results both in simulation and using a real robot indicate that the proposed method outperforms state - of - the - art model - free reinforcement learning approaches . </S>"
  ]
}
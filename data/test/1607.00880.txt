{
  "article_text": [
    "the proliferation of mobile devices and the surge of a myriad of multimedia applications has resulted in an exponential growth of the mobile data traffic . in this context",
    ", wireless caching has emerged as a powerful technique to overcome the backhaul bottleneck , by reducing the backhaul rate and the delay in retrieving content from the network .",
    "the key idea is to store popular content closer to the end users . in @xcite , a novel system architecture named _",
    "femtocaching _ was proposed .",
    "it consists of deploying a number of small base stations ( bss ) with large storage capacity , in which content is stored during periods of offpeak traffic .",
    "the mobile users can then download the content from the small bss , which results in a higher throughput per user . in @xcite , it was proposed to store content directly in the mobile devices .",
    "users can then retrieve content from neighboring devices using device - to - device ( d2d ) communication or , alternatively , from the serving bs .    in both scenarios",
    "content may be stored using an erasure correcting code , which brings gains with respect to uncoded caching .",
    "the use of erasure correcting codes establishes an interesting link between distributed caching for content delivery and distributed storage ( ds ) for data storage .",
    "the key difference is that in the wireless network scenario , data can be downloaded from the storage nodes ( the small bss or the mobile devices ) but also from a serving bs , which has always the content available .",
    "therefore , the reliability requirements in ds for data storage can be relaxed . in @xcite ,",
    "the placement of content encoded using a maximum distance separable ( mds ) code to small bss was investigated and it was shown that the backhaul rate can be significantly reduced . in @xcite , for the scenario where content is stored in the mobile devices , the repairing of the lost data when a device storing data leaves the network was considered . assuming instantaneous repair , the communication cost of data download and repair was investigated .",
    "in @xcite , a repair scheduling where repair is performed periodically was introduced and analytical expressions for the overall communication cost of content download and data repair as a function of the repair interval were derived . using these expressions ,",
    "the communication cost entailed by ds using mds codes , regenerating codes @xcite , and locally repairable codes @xcite was evaluated in @xcite .    in this paper , as in @xcite , we consider the scenario where content is stored in the mobile devices , which arrive and depart from a cell according to a poisson random process . in particular , we assume that content is stored using mds codes .",
    "our focus is on the delay of retrieving content from the network , which was not considered in @xcite .",
    "we derive analytical expressions for the download delay and show that mds - encoded ds can significantly reduce the delay with respect to the case where content is solely downloaded from the bs .",
    "we consider a single cell in a cellular network where mobile devices , referred to as nodes , roam in and out according to a poisson random process and request a single file at random times .",
    "the file is stored in a number of the mobile devices using an mds code .",
    "a copy of the file is also available at the bs serving the cell .",
    "nodes arrive according to a poisson process with exponential independent , identically distributed ( i.i.d . )",
    "random inter - arrival time @xmath0 with probability density function ( pdf ) @xmath1 where @xmath2 is the expected arrival rate of a node and @xmath3 is time , measured in time units ( t.u . ) .",
    "the nodes stay in the cell for an i.i.d .",
    "exponential random lifetime @xmath4 with pdf @xmath5 where @xmath6 is the expected departure rate of a node .",
    "we assume that @xmath6=@xmath7 , which implies that the expected number of nodes in the network is @xmath8 .",
    "we assume that nodes request the file at random times with i.i.d .",
    "random inter - request time @xmath9 with pdf @xmath10 where @xmath11 is the expected request rate per node .    the file is partitioned into @xmath12 packets , called symbols , and is encoded into @xmath13 coded symbols using an @xmath14 mds erasure correcting code of rate @xmath15 = @xmath16 .",
    "the encoded data is stored into @xmath13 nodes , referred to as storage nodes , and hence each storage node stores one symbol . in the rest of the paper , for ease of language",
    ", we will sometimes refer to the set of storage nodes as the ds network . for simplicity ,",
    "we assume @xmath17 , hence the probability that the number of nodes in the cell is smaller than @xmath13 is negligible .    in this work we focus on the download process .",
    "each node in the cell can request the file and attempts to retrieve it from the ds network using d2d communication .",
    "if the file can not be completely retrieved from the storage nodes , the bs assists in providing the missing coded symbols .",
    "thanks to the mds property , the file can be recovered collecting any subset of @xmath12 coded symbols .",
    "the download of a symbol from a storage node incurs @xmath18 t.u . , and from the bs @xmath19 t.u .. we assume that @xmath20 due to the congestion of the bs - to - node link and the fact that d2d communication occurs over a better channel due to the reduced distance between the involved nodes .",
    "we further assume that only one d2d link at a time can be established , and that the d2d communication does not interfere with the communication between the bs and the nodes .",
    "therefore , if the ds network is not idle , the whole file is downloaded from the bs .",
    "moreover , to simplify the analysis , we assume that multiple bs - to - node links can coexist .    here",
    "we do not address the repair problem of restoring the initial state of reliability of the ds network when storage nodes leave the cell  @xcite .",
    "in particular , we assume that the bs keeps track of the storage nodes and repair is performed every @xmath21 t.u . and",
    ", for simplicity , we assume that incurs no transmission delay . alternatively , we can also assume that nodes arriving in the cell can bring content .",
    "this corresponds to the case where the same content is also stored in mobile devices in adjacent cells .",
    "nevertheless , they do not join the ds network instantaneously , but the bs serving the cell periodically updates and broadcasts the list of storage nodes every @xmath21 t.u .. therefore , our model complies with both cases . similar to  @xcite , the parameter @xmath21 is referred to as the repair interval in the sequel .",
    "our performance measure is the download time , referred to as download delay .",
    "a node which requests the file is allowed to use d2d communication only if the ds network is idle .",
    "therefore , we introduce the binary random variable ( rv ) @xmath22 which describes the status of the ds network . @xmath23 if the network is idle and @xmath24 otherwise",
    ". if the ds network is idle , the requesting node uses d2d communication to download as many coded symbols as possible ( up to @xmath12 ) from the ds network and turns to the bs to recover possible missing symbols .",
    "if the ds network is occupied , the file is entirely downloaded from the bs . the average file download delay , @xmath25 ,",
    "can then be computed as @xmath26 where @xmath27 is the average number of coded symbols downloaded using d2d communication per request and @xmath28 is the corresponding delay .",
    "in the following , @xmath28 is referred to as the average d2d download delay .",
    "the first step in our derivation is the computation of the probability that the ds network is idle .",
    "let @xmath29 be the status of the network at the time of the @xmath30th request .",
    "we have @xmath31 in order to compute @xmath32 , we introduce the rv @xmath33 that denotes the time instant of the @xmath34th request . also , let @xmath35 be the time during which the ds network is occupied by the @xmath34th request .",
    "the ds network is idle at the time of the @xmath30th request if none of the previous requests is still using d2d communication .",
    "therefore , @xmath36 and @xmath37 assuming that if the ds network is occupied at time @xmath38 is because of the @xmath39th request , the product in ( [ e : p_i exact ] ) reduces to the term involving the @xmath39th request only , i.e. , @xmath40 where @xmath41 is the pdf of @xmath42 . since the requests are i.i.d .",
    "with inter - request time distributed as in ( [ e : request time ] ) and on average there are @xmath8 nodes in the cell , we can compute @xmath43 and ( [ e : p_i approx1 ] ) can be written as @xmath44 where @xmath45 represents the expectation with respect to the variable @xmath46 .",
    "if @xmath47 , @xmath48 and @xmath49 in  ( [ e : idle_ell ] ) , we have used the fact that the average d2d download delay is independent of the specific request ( if @xmath30 is sufficiently large ) .",
    "this result is proven in lemma  [ lemma ] . substituting ( [ e : idle_ell ] ) in ( [ e : idle ] ) and after some simple calculations , we obtain @xmath50 note that in the expression above , with some abuse of notation , we use equal sign to avoid carrying all the way the approximation sign due to the approximations introduced in ( [ e : p_i approx1 ] ) and ( [ e : p_i approx2 ] ) .",
    "we now consider the computation of the average d2d download delay and the average number of coded symbols downloaded using d2d per request .",
    "we assume that a node can not download in parallel from multiple nodes , but it serially tries to download @xmath12 symbols from the ds network .",
    "when a node requests the file , if the ds network is idle , it randomly choses one of the storage nodes from the list supplied by the bs . after each downloaded symbol",
    ", the requesting node randomly choses the next storage node among those belonging to the list and still alive .",
    "we assume that a requesting node that has collected less than @xmath12 symbols turns to the bs when all the reference storage nodes left or when the download of a symbol fails , even if other storage nodes are available . to simplify the analysis",
    ", we assume that both cases ( the failed symbol download and the absence of storage nodes ) incur @xmath18 t.u .",
    ", even if the node could contact the bs earlier .",
    "we also assume that the download from the ds network fails if the requesting node itself leaves the cell before collecting @xmath12 symbols . in this case",
    ", the download is also completed from the bs .",
    "the download from the storage nodes can be fully successful or only partially accomplished . in order to describe the d2d download",
    ", we define @xmath51 the binary rv which describes the success of download at the first attempt .",
    "more precisely , @xmath52 represents the successful download of the coded symbol from the first contacted storage node . if download is not successful from the first contacted storage node , @xmath53 .",
    "similarly , we define @xmath54 the binary rv describing the download at the @xmath34th attempt and we denote by @xmath55}$ ] , @xmath56 the random vector ( @xmath57 ) . in the following",
    ", @xmath58 represents the all - ones vector of length @xmath34 .    according to our model",
    ", the requesting node completes the download of @xmath12 symbols from the ds network in @xmath59 t.u . with probability @xmath60}={\\mathbf{1}}_k \\ } $ ] , while the partial download of @xmath61 symbols happens with probability and incurs @xmath62 t.u .. in the computation of the average d2d download delay , we also consider the case where download from the ds network completely fails .",
    "the corresponding probability is @xmath63 and the delay is @xmath18 . to simplify the analysis , we do not take into account the fact that the request may originate from a storage node , i.e. , we do not consider that a storage node needs to download @xmath64 symbols instead of @xmath12 .",
    "finally , the average d2d download delay @xmath28 and the average number of d2d downloaded symbols @xmath27 are given by @xmath65}={\\mathbf{1}}_k \\ }   + \\sum_{j=1}^{k-1 } j    \\pr \\{{\\mathbf{s}}_{[j]}={\\mathbf{1}}_{j } , s_{j+1}=0 \\ } \\nonumber\\\\ { \\overline{t}_{\\eta } } = & { t_\\mathrm{d}}\\big ( \\eta +   \\pr \\{s_1=0\\ } \\!+   \\!\\ !",
    "\\sum_{j=1}^{k-1 }    \\pr \\{{\\mathbf{s}}_{[j]}={\\mathbf{1}}_{j } , s_{j+1}=0 \\}\\big ) .   \\nonumber   \\end{aligned}\\ ] ] in the next section , we derive @xmath66 , @xmath60}={\\mathbf{1}}_k \\}$ ] , and @xmath67}={\\mathbf{1}}_{j } , s_{j+1}=0 \\}$ ] .",
    "in this section , we derive the probability that the content is fully recovered from the ds network , @xmath60}={\\mathbf{1}}_k \\ } $ ] , the probability that it is only partially recovered , @xmath67}={\\mathbf{1}}_{j } , s_{j+1}=0 \\}$ ] , and the probability that no symbols can be downloaded from the ds network , @xmath63 .",
    "we also show that the average d2d download time @xmath68 does not depend on the specific request if @xmath30 is sufficiently large .",
    "we introduce of the following rvs and events .",
    "* @xmath69 is the binary rv describing the successful symbol download at the @xmath70th attempt of the @xmath30th request .",
    "* @xmath71 is the number of storage nodes available at the time of the @xmath70th attempt of the @xmath30th request , i.e. , the available storage nodes not yet contacted . in  @xcite , it was shown that the probability that there are @xmath72 storage nodes at the instant of the @xmath30th request , @xmath73 , does not depend on @xmath30 ( when @xmath30 grows large ) , and is given by @xmath74 where @xmath75 and @xmath76 .",
    "+ to ease notation in the remainder of the paper , we define @xmath77 .",
    "* @xmath78 is the number of departures in @xmath18 t.u . among the @xmath79 storage nodes available at the time of the @xmath70th attempt of the @xmath30th request .",
    "we are interested in the probability @xmath80 .",
    "its derivation is similar to that of @xmath81 .",
    "we obtain @xmath82 the probability above is independent of @xmath30 and @xmath70 and we define @xmath83 .",
    "it follows that @xmath84 if @xmath85 and @xmath86 .",
    "* @xmath87 is the departure time of the node which places the @xmath30th request .",
    "* @xmath88 is the event that the node which places the @xmath30th request stays in the network for more than @xmath89 t.u . from the start of the download .",
    "the corresponding probability does not depend on @xmath30 and is given by @xmath90 we define @xmath91 .",
    "* @xmath92 is the event that the node which places the @xmath30th request departs after the @xmath93th download attempt but before the @xmath70th one .",
    "the probability of this event is @xmath94 and is independent of @xmath30 .",
    "we define @xmath95 .    in the following ,",
    "the probabilities @xmath96 are computed by ignoring the fact that the download request may originate from a storage node itself .",
    "the goodness of this approximation for the considered scenarios has been validated through computer simulations .",
    "we first consider @xmath97 , which is given by @xmath98 and compute @xmath99 .",
    "the recovery of the first symbol fails if the requesting node leaves the cell before completing the download .",
    "it also fails if the requesting node stays in the cell but no storage nodes are available or if it chooses to download from a storage node which departs before @xmath100 t.u . from the start of the download .",
    "therefore , @xmath101 the joint probability mass function of the number of storage nodes available for download and the number of storage nodes that depart before @xmath102 is independent of the departure time of the requesting node ( note that this is an approximation if the requesting node is a storage node ) .",
    "hence , we have @xmath103 the probability @xmath104 is equal to 1 if there are no storage nodes available , i.e. , @xmath105 .",
    "otherwise , it equals the probability to choose one of the @xmath106 storage nodes that leave the cell in @xmath18 t.u .",
    ", i.e. , @xmath107 , with @xmath108 . since the probabilities involved in  ( [ e : ps1b ] ) are all independent of @xmath30 , we finally have @xmath109      to evaluate the probability that @xmath12 symbols are downloaded from the ds network , we start with the following limit @xmath110 } = { \\mathbf{1}}_k \\}= \\lim_{l \\to \\infty }    \\frac{1}{l } \\sum_{\\ell=1}^l \\pr\\ {   { \\mathbf{s}}_{[k]}^{(\\ell)}={\\mathbf{1}}_k \\}\\ , .\\ ] ] we consider the @xmath30th request and , similarly to the previous case , we will find that this probability is independent of @xmath30 .",
    "we have @xmath111}^{(\\ell ) } = { \\mathbf{1}}_k \\}=\\sum_{x f }   \\pr\\ {   { \\mathbf{s}}_{[k]}^{(\\ell)}={\\mathbf{1}}_k , x_k^{(\\ell)}=x ,   f_k^{(\\ell)}=f \\ } \\\\ & = \\sum_{x f }   \\pr\\ { s_k^{(\\ell)}=1   |    x_k^{(\\ell)}=x ,   f_k^{(\\ell)}=f ,    \\mathcal{a}_k^{(\\ell ) } \\ } a_k \\cdot \\nonumber \\\\ & \\cdot \\pr\\{f_k^{(\\ell)}=f , x_k^{(\\ell)}=x   , { \\mathbf{s}}^{(\\ell)}_{1,k-1}={\\mathbf{1}}_{k-1}\\ }   \\ , .\\nonumber\\end{aligned}\\ ] ] the probability @xmath112 for @xmath113 and @xmath114 equals the probability to choose one of the storage nodes that stay in the cell , i.e. , @xmath115 .",
    "we now evaluate the probability @xmath116 for @xmath117 , which will be also used for the computation of the probability of partial d2d download . for @xmath118",
    ", we have the following recursion @xmath119 we define @xmath120 , which is equal to one if @xmath121 and @xmath122 , and zero otherwise . the condition @xmath121 follows from the fact that the number of available storage nodes after a successful symbol download is equal to the number of storage nodes still alive , , minus the storage node just used .",
    "the condition @xmath122 comes from the fact that the @xmath123th symbol download is assumed to be successful .",
    "it is easy to prove by induction that the probability ( [ e : pp ] ) does not depend on @xmath30 . by defining @xmath124 ,",
    "we obtain the following recursion for @xmath117 , @xmath125 with initial condition @xmath126 . the probabilities @xmath127 , @xmath128 , are equal to zero for @xmath85 .",
    "finally , the probability of complete download from the ds network is @xmath110 } = { \\mathbf{1}}_k \\}=a_k \\sum_{x = 1}^n \\sum_{f=0 } ^{x } \\frac{x - f}{x }   \\gamma_k(x , f)\\ , .\\ ] ]    following a similar approach , we can compute the probability of partial download , @xmath129}=&{\\mathbf{1}}_{j } , s_{j+1}=0 \\ } =   \\gamma_{j+1}(0,0 ) +     \\nonumber\\\\ & + \\sum_{x=1}^n \\sum_{f=0}^x \\big ( 1- \\frac{x - f}{x }   a_{j+1}\\big )   \\gamma_{j+1}(x , f )   \\nonumber\\ , .\\end{aligned}\\ ] ]    the results above allow also to prove the following lemma .",
    "[ lemma ] the average d2d download time for the @xmath30th request , @xmath130 , is independent of the specific request if the index @xmath30 is sufficiently large .",
    "similarly to the average d2d download delay , @xmath130 is @xmath131}={\\mathbf{1}}_k \\ } + { t_\\mathrm{d}}\\pr \\{s^{(\\ell)}_1=0\\ } + \\nonumber \\\\    & + \\sum_{j=1}^{k-1 }   ( j+1 ) { t_\\mathrm{d}}\\pr \\{{\\mathbf{s}}^{(\\ell)}_{[j]}={\\mathbf{1}}_{j } , s^{(\\ell)}_{j+1}=0 \\ } \\nonumber\\;\\ ; [ t.u.]\\ , .\\end{aligned}\\ ] ] the lemma follows from the fact that the probabilities in the expression above are independent of @xmath30 , when @xmath30 grows large .",
    "in this section , we consider the performance of a wireless network with @xmath132 nodes , departure rate @xmath133 , and request rate @xmath134 . we compare the average file download delay of the considered network with mds - coded ds with the delay of the traditional scenario where the content is solely downloaded from the bs .",
    "we consider several @xmath14 mds codes and also an uncoded scenario where one storage node in the cell stores the file .",
    "we denote by @xmath135 the delay incurred in the traditional scenario , and we fix @xmath136 t.u ..    in figs .",
    "[ f:0.1][f:0.001 ] , we show the gain that can be achieved using mds - coded ds , by reporting the ratio between @xmath137 and @xmath25 as a function of the repair interval . in fig .",
    "[ f:0.1 ] , [ f:0.01 ] , and [ f:0.001 ] , @xmath18 is 10 , 100 , and 1000 times , respectively , smaller than @xmath19 .",
    "the results clearly show that mds - coded ds can greatly improve the performance in terms of content download delay , provided that the update interval , @xmath21 , is sufficiently small .    .",
    "]    . ]    . ]",
    "we considered the application of mds - coded distributed storage to wireless networks and computed the average file download delay when users are allowed to use device - to - device communication .",
    "mds - coded ds can dramatically reduce the download delay with respect to the traditional case where content is always downloaded from the base station .",
    "k.  shanmugam , n.  golrezaei , a.  g. dimakis , a.  f. molisch , and g.  caire , `` femtocaching : wireless content delivery through distributed caching helpers , '' _ ieee trans .",
    "theory _ , vol .",
    "59 , no .  12 , pp . 84028413 , dec .",
    "n.  golrezaei , p.  mansourifard , a.  f. molisch , and a.  g. dimakis , `` base - station assisted device - to - device communications for high - throughput wireless video networks , '' _ ieee trans .",
    "wireless commun .",
    "_ , vol .  13 , no .  7 , pp",
    "36653676 , july 2014 .",
    "j.  pedersen , a.  graell i amat , i.  andriyanova , and f.  brnnstrm , `` repair scheduling in wireless distributed storage with d2d communication , '' in _ proc .",
    "ieee inf . theory work .",
    "( itw ) _ , jeju island , korea , 2015 ."
  ],
  "abstract_text": [
    "<S> we address the use of maximum distance separable ( mds ) codes for distributed storage ( ds ) to enable efficient content delivery in wireless networks . </S>",
    "<S> content is stored in a number of the mobile devices and can be retrieved from them using device - to - device communication or , alternatively , from the base station ( bs ) . </S>",
    "<S> we derive an analytical expression for the download delay in the hypothesis that the reliability state of the network is periodically restored . </S>",
    "<S> our analysis shows that mds - coded ds can dramatically reduce the download time with respect to the reference scenario where content is always downloaded from the bs . </S>"
  ]
}
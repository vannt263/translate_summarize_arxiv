{
  "article_text": [
    "typical eukaryotic protein - coding genes contain introns , which are removed prior to translation .",
    "key constituents of the spliceosome , which is the rna - protein complex that performs the intron excision , can be traced back   to the last common ancestor of extant eukaryotes ( leca ) .",
    "even deep - branching lineages   have introns .",
    "it is thus almost certain that spliceosomal introns were present in leca .",
    "moreover , when comparing distant eukaryotes , intron positions often agree  .",
    "the similarity is likely due more to conservation of early introns than to parallel gains  .",
    "it is thus compelling to use genome - scale comparisons to study intron evolution in different lineages , and even to estimate the exon - intron organization in extinct ancestors .",
    "one of the first such studies , by , involved orthologous gene sets in eight eukaryotes .",
    "the same data set was reanalyzed by different authors  , using novel methods developed for intron data .",
    "subsequent inquiries attest to a renewed interest in understanding the specifics of intron evolution within different eukaryotic lineages .",
    "this paper introduces novel computational techniques for the analysis of spliceosomal intron evolution , anticipating more large - scale studies to come .",
    "section  [ sec : identification ] describes an alignment method for intron - annotated protein sequences , as well as a segmentation method for identifying conserved portions of a multiple alignment .",
    "section  [ sec : likelihood ] describes a likelihood framework in which intron evolution can be analyzed in a theoretically sound manner .",
    "section  [ sec : compress ] scrutinizes a compression technique that accelerates the evaluation of the likelihood function .",
    "the compression involves an @xmath4-time preprocessing step for  @xmath5 sites and a phylogeny with  @xmath6 species .",
    "we show that the subsequent evaluation takes sublinear , @xmath7 time almost surely in the yule - harding model of random phylogenies , even in the case of arbitrary , constant - size alphabets .",
    "fast evaluation is particularly important when the likelihood is maximized in a numerical procedure that computes the likelihood function with many different parameter settings .",
    "section  [ sec : applications ] describes two applications of our methods . in one application ,",
    "intron - aware alignment was used to validate some unexpected features of intron evolution before leca . in a second application , we analyzed intron evolution in 18 eukaryotic species .",
    "we found evidence of intron - rich early eukaryotes and a prevalence of intron loss over intron gain in recent times .",
    "orthologous introns can be identified by using whole genome alignments in the case of closely related genomes  . for distant eukaryotes ,",
    "however , intron orthology can only be established through protein alignments  .",
    "the usual procedure is to project intron positions onto an alignment of multiple orthologous proteins .",
    "if introns in different species are projected to the same alignment position , then the introns are assumed to be orthologous .",
    "intron annotation can be included in protein alignments by defining intron match and mismatch scores .",
    "the alignment score is then computed as the sum of scores for amino acid matches , gaps , and intron matches .",
    "incorporating intron annotation should lead to better alignments at the amino acid level , and to a more reliable identification of orthologous introns .",
    "figure  [ fig : iali ] shows an example of such improvement .",
    "intron scoring can be based on log - likelihood ratios in a probabilistic model  .",
    "the model is defined by the joint distribution  @xmath8 for the intron state in two sequences  @xmath9 and  @xmath10 , and the prior distributions  @xmath11 and  @xmath12 .",
    "aligned sites have states  @xmath13 with probability @xmath14 if the two sites are unrelated , or with probability  @xmath15 in case of homology .",
    "an @xmath13 alignment is scored with a value that is proportional to @xmath16 .",
    "we used the data set of   to assess the strength of intron - match signals . since the data include no sites in which all species lack introns ,",
    "but the model does allow for that , we added extra sites with no introns .",
    "the original data comprise 7236 intron sites in 684 genes , across 8 species . using a method described earlier , we added 35000 unobserved intron sites . using estimates for  @xmath8 and  @xmath17",
    ", we computed the appropriate scores .",
    "the intron score is asymmetric and varies with evolutionary distance and intron conservation .",
    "matches for absent introns have an insignificant score , but shared introns have a high score , such as 93 ( human - plasmodium ) , 106 ( human - arabidopsis ) , 152 ( human-_s .",
    "pombe _ ) or 303 ( drosophila - anopheles ) on a 1/60-bit scale . shared",
    "introns thus give a signal comparable to amino acid matches : in the 1/60-bit scaled version of the vtml240 matrix  , a tryptophan match scores  289 , and an arginine identity scores  113 .",
    "consider the case of aligning two protein sequences , @xmath9 and  @xmath10 , which are annotated with the intron positions .",
    "every residue has two associated intron sites ( after the first and second nucleotides of their codons ) , and there is an intron site between consecutive amino acid positions ( phase-0 introns ) .",
    "intron sites may or may not be filled in by introns in either sequence .",
    "we use the notation for @xmath18}$ ] for the phase-0 site preceding the codon for amino acid  @xmath19 , and @xmath20}$ ] , @xmath21}$ ] for phase-1 and -2 sites within the codon .",
    "intron presence is encoded by  @xmath22 , and intron absence is encoded by  @xmath23 throughout the paper .",
    "the intron annotation is specified by the variables @xmath24}\\in\\{{\\texttt{1}},{\\texttt{0}}\\}$ ] .",
    "( there can be no introns after the last amino acid . )",
    "scores for aligned introns are specified by a  @xmath25 scoring matrix  @xmath26 .",
    "phase-1 and phase-2 intron sites are automatically placed by their associated amino acids .",
    "if  @xmath27 is the amino acid scoring matrix , then the alignment of @xmath28 $ ] and  @xmath29 $ ] entails a score of @xmath30}}}\\\\{{{t}[j]}}\\end{smallmatrix}}\\bigr]}+{{\\lambda}\\bigl[{\\begin{smallmatrix}{{{{s}[i]}}}\\\\{{{t}[j]}}\\end{smallmatrix}}\\bigr]}$ ] with @xmath31}}}\\\\{{{t}[j]}}\\end{smallmatrix}}\\bigr ] } = { { \\lambda}\\bigl[{\\begin{smallmatrix}{{{s}[i\\colon1]}}\\\\{{{t}[j\\colon1]}}\\end{smallmatrix}}\\bigr]}+{{\\lambda}\\bigl[{\\begin{smallmatrix}{{{s}[i\\colon2]}}\\\\{{{t}[j\\colon2]}}\\end{smallmatrix}}\\bigr]}$ ] .",
    "similarly , aligning @xmath28 $ ] with an indel implies a score of @xmath30}}}\\\\{{\\texttt{-}}}\\end{smallmatrix}}\\bigr]}+{{\\lambda}\\bigl[{\\begin{smallmatrix}{{{{s}[i]}}}\\\\{{\\texttt{0}}}\\end{smallmatrix}}\\bigr]}={{m}\\big[{\\begin{smallmatrix}{{{{s}[i]}}}\\\\{{\\texttt{-}}}\\end{smallmatrix}}\\bigr]}+{{\\lambda}\\bigl[{\\begin{smallmatrix}{{{s}[i\\colon1]}}\\\\{{\\texttt{0}}}\\end{smallmatrix}}\\bigr]}+{{\\lambda}\\bigl[{\\begin{smallmatrix}{{{s}[i\\colon2]}}\\\\{{\\texttt{0}}}\\end{smallmatrix}}\\bigr]}$ ] , in addition to possible gap opening and closing penalties .",
    "standard alignment procedures need to be modified to deal with phase-0 introns , since the placement of phase-0 introns is not fixed with respect to gaps .",
    "it is not possible to simply add a new character to the alphabet to represent phase-0 introns because they affect gaps differently from amino acids .",
    "we added intron scoring into a multiple alignment framework , using a sum - of - pairs scoring policy with affine gap - scoring .",
    "it is np - hard to find the alignment of two multiple alignments under these optimization criteria  .",
    "even the alignment of a single sequence to a multiple alignment necessitates sophisticated techniques  .",
    "our solution therefore uses a gap - counting heuristic : namely , a gap - open penalty is triggered for an indel aligned with an amino acid if the indel is preceded by an amino acid or a phase-0 intron .",
    "gap opening thus corresponds to a pattern @xmath32 or @xmath33 . here",
    ", @xmath34 are intron states for the phase-0 site , and @xmath35 denotes either state . in addition",
    ", @xmath36 denotes an arbitrary amino acid , @xmath37 is the indel character , and @xmath38 is either of the latter two .",
    "we implemented affine gap - scoring by separate gap - open and -close penalties , so that gaps at the alignment extremities can be penalized less severely .",
    "gap closing is counted for the patterns @xmath39 and @xmath40 .",
    "table  [ tbl : ali ] gives the recurrences for a dynamic programming algorithm that aligns an intron - annotated sequence  @xmath9 to a multiple alignment  @xmath41 of @xmath42 intron - annotated protein sequences . in order to simplify the presentation",
    ", we represent the sequences in such a way that every odd position of  @xmath9 and  @xmath41 is a regular residue or alignment column , annotated with information on the presence of phase-1 and phase-2 introns , whereas every even position is a phase-0 intron site .",
    "we use @xmath31}}}\\\\{{{{p}[j]}}}\\end{smallmatrix}}\\bigr]}$ ] to denote the sum of intron - match scores for the intron sites associated with the positions  @xmath28 $ ] , @xmath43 $ ] .",
    "we use also the shorthand @xmath44}$ ] to denote scoring for the alignment of an amino acid  @xmath45 with an amino acid profile  @xmath46 .",
    "the algorithm uses three types of variables , @xmath47}$ ] , @xmath48}$ ] and @xmath49}$ ] , which correspond to partial prefix alignments ending with aligned residues , gaps in  @xmath9 , or gaps in  @xmath41 , respectively . in case of  @xmath48}$ ] , the last indel must be aligned with an amino acid column , and , thus @xmath50 must be odd ; for  @xmath49}$ ] , @xmath19 must be odd .",
    "@xmath51 }      & = \\begin{aligned}[t ]          & { { m}\\big[{\\begin{smallmatrix}{{{{s}[i]}}}\\\\{{{{p}[j]}}}\\end{smallmatrix}}\\bigr]}+{{\\lambda}\\bigl[{\\begin{smallmatrix}{{{{s}[i]}}}\\\\{{{{p}[j]}}}\\end{smallmatrix}}\\bigr]}+{\\gamma^{(-)}_{1}}(j )          + \\max\\bigl\\ {                { \\mathsf{a}[i-2,j-2 ] }   + { { \\lambda}\\bigl[{\\begin{smallmatrix}{{{{s}[i-1]}}}\\\\{{{{p}[j-1]}}}\\end{smallmatrix}}\\bigr ] } + { \\gamma^{(<)}_{1}}(j ) + { \\gamma^{(>)}_{1}}(j),\\\\ *          &      { \\mathsf{gs}[i-2,j-2 ] } + { { \\lambda}\\bigl[{\\begin{smallmatrix}{{{{s}[i-1]}}}\\\\{{{{p}[j-1]}}}\\end{smallmatrix}}\\bigr ] } + { \\gamma^{(<)}_{1}}(j ) + { \\gamma^{(>)}_{2}}(j-2 ) ,                { \\mathsf{gs}[i-1,j-2 ] } + { { \\lambda}\\bigl[{\\begin{smallmatrix}{{\\texttt{0}}}\\\\{{{{p}[j-1]}}}\\end{smallmatrix}}\\bigr ] }    + { \\gamma^{(<)}_{1}}(j )   + { \\gamma^{(>)}_{2}}(j-2),\\\\ *          &      { \\mathsf{gp}[i-2,j-2 ] } + { { \\lambda}\\bigl[{\\begin{smallmatrix}{{{{s}[i-1]}}}\\\\{{{{p}[j-1]}}}\\end{smallmatrix}}\\bigr ] } + { \\gamma^{(<)}_{2}}(j )   + { \\gamma^{(>)}_{3}}(j ) ,               { \\mathsf{gp}[i-2,j-1 ] } + { { \\lambda}\\bigl[{\\begin{smallmatrix}{{{{s}[i-1]}}}\\\\{{\\texttt{0}}^h}\\end{smallmatrix}}\\bigr ] } + { \\gamma^{(>)}_{2}}(j )              \\bigr\\}\\end{aligned }          & \\text{odd $ i$ , odd $ j$}\\\\ { \\mathsf{gs}[i , j ] }       & = \\begin{aligned}[t ]          & { { \\lambda}\\bigl[{\\begin{smallmatrix}{{\\texttt{0}}}\\\\{{{{p}[j]}}}\\end{smallmatrix}}\\bigr ] } + { \\gamma^{(-)}_{2}}(j )              + \\max\\bigl\\ {                { \\mathsf{a}[i , j-2 ] } + { { \\lambda}\\bigl[{\\begin{smallmatrix}{{\\texttt{0}}}\\\\{{{{p}[j-1]}}}\\end{smallmatrix}}\\bigr ] } + { \\gamma^{(<)}_{3}}(j ) + { \\gamma^{(>)}_{1}}(j),\\\\ *              & { \\mathsf{gs}[i , j-2 ] } + { { \\lambda}\\bigl[{\\begin{smallmatrix}{{\\texttt{0}}}\\\\{{{{p}[j-1]}}}\\end{smallmatrix}}\\bigr ] } , \\\\ *              & { \\mathsf{gp}[i , j-2 ] } + { { \\lambda}\\bigl[{\\begin{smallmatrix}{{\\texttt{0}}}\\\\{{{{p}[j-1]}}}\\end{smallmatrix}}\\bigr ] } + { \\gamma^{(<)}_{3}}(j)+{\\gamma^{(>)}_{3}}(j ) ,                { \\mathsf{gp}[i , j-1 ] } + { { \\lambda}\\bigl[{\\begin{smallmatrix}{{\\texttt{0}}}\\\\{{\\texttt{0}}^h}\\end{smallmatrix}}\\bigr ] } + { \\gamma^{(<)}_{3}}(j ) + { \\gamma^{(>)}_{2}}(j )               \\bigr\\ }              \\end{aligned }      & \\text{odd $ i$ , odd $ j$}\\\\ { \\mathsf{gp}[i , j ] }       & = \\begin{aligned}[t ]          & { { \\lambda}\\bigl[{\\begin{smallmatrix}{{{{s}[i]}}}\\\\{{\\texttt{0}}^h}\\end{smallmatrix}}\\bigr ] } + { \\gamma^{(-)}_{1}}(j )          + \\max\\bigl\\ {                { \\mathsf{a}[i-2,j ] } + { { \\lambda}\\bigl[{\\begin{smallmatrix}{{{{s}[i-1]}}}\\\\{{\\texttt{0}}^h}\\end{smallmatrix}}\\bigr ] } + { \\gamma^{(<)}_{3}}(j),\\\\ *              & { \\mathsf{gs}[i-2,j]}+ { { \\lambda}\\bigl[{\\begin{smallmatrix}{{{{s}[i-1]}}}\\\\{{\\texttt{0}}^h}\\end{smallmatrix}}\\bigr ] } + { \\gamma^{(<)}_{3}}(j ) + { \\gamma^{(>)}_{2}}(j ) ,                 { \\mathsf{gs}[i-1,j]}+ { { \\lambda}\\bigl[{\\begin{smallmatrix}{{\\texttt{0}}}\\\\{{\\texttt{0}}^h}\\end{smallmatrix}}\\bigr ] } + { \\gamma^{(<)}_{3}}(j ) + { \\gamma^{(>)}_{2}}(j),\\\\ *              & { \\mathsf{gp}[i-2,j]}+ { { \\lambda}\\bigl[{\\begin{smallmatrix}{{{{s}[i-1]}}}\\\\{{\\texttt{0}}^h}\\end{smallmatrix}}\\bigr ] }               \\bigr\\ }          \\end{aligned }       & \\text{odd $ i$ , odd $ j$ }        \\\\ { \\mathsf{gs}[i , j ] }      & = \\begin{aligned}[t ]          & { { \\lambda}\\bigl[{\\begin{smallmatrix}{{\\texttt{0}}}\\\\{{{{p}[j]}}}\\end{smallmatrix}}\\bigr ] } + { \\gamma^{(-)}_{2}}(j )          + \\max\\bigl\\ {              { \\mathsf{a}[i-1,j-2 ] } + { { \\lambda}\\bigl[{\\begin{smallmatrix}{{{{s}[i]}}}\\\\{{{{p}[j-1]}}}\\end{smallmatrix}}\\bigr ] } + { \\gamma^{(<)}_{3}}(j ) + { \\gamma^{(>)}_{1}}(j ) , \\\\ *              & { \\mathsf{gs}[i-1,j-2 ] } + { { \\lambda}\\bigl[{\\begin{smallmatrix}{{{{s}[i]}}}\\\\{{{{p}[j-1]}}}\\end{smallmatrix}}\\bigr ] } + { \\gamma^{(<)}_{4}}(i , j ) + { \\gamma^{(>)}_{4}}(i , j ) ,                 { \\mathsf{gs}[i , j-2 ] } + { { \\lambda}\\bigl[{\\begin{smallmatrix}{{\\texttt{0}}}\\\\{{{{p}[j-1]}}}\\end{smallmatrix}}\\bigr ] } , \\\\ *              & { \\mathsf{gp}[i-1,j-2 ] } + { { \\lambda}\\bigl[{\\begin{smallmatrix}{{{{s}[i]}}}\\\\{{{{p}[j-1]}}}\\end{smallmatrix}}\\bigr ] } + { \\gamma^{(<)}_{3}}(j ) + { \\gamma^{(>)}_{3}}(j ) ,                 { \\mathsf{gp}[i-1,j-1 ] } + { { \\lambda}\\bigl[{\\begin{smallmatrix}{{{{s}[i]}}}\\\\{{\\texttt{0}}^h}\\end{smallmatrix}}\\bigr ] } + { \\gamma^{(<)}_{3}}(j ) + { \\gamma^{(>)}_{2}}(j )              \\bigr\\ }          \\end{aligned }           & \\text{even $ i$ , odd $ j$ } \\\\ { \\mathsf{gp}[i , j ] }      & = \\begin{aligned}[t ]          & { { \\lambda}\\bigl[{\\begin{smallmatrix}{{{{s}[i]}}}\\\\{{\\texttt{0}}^h}\\end{smallmatrix}}\\bigr ] } + { \\gamma^{(-)}_{1}}(j )          + \\max\\bigl\\ {               { \\mathsf{a}[i-2,j-1 ] } + { { \\lambda}\\bigl[{\\begin{smallmatrix}{{{{s}[i-1]}}}\\\\{{{{p}[j]}}}\\end{smallmatrix}}\\bigr ] }   + { \\gamma^{(<)}_{5}}(j )   + { \\gamma^{(>)}_{5}}(j),\\\\ *              & { \\mathsf{gs}[i-2,j-1 ] } + { { \\lambda}\\bigl[{\\begin{smallmatrix}{{{{s}[i-1]}}}\\\\{{{{p}[j]}}}\\end{smallmatrix}}\\bigr ] } + { \\gamma^{(<)}_{5}}(j ) + { \\gamma^{(>)}_{2}}(j-1 ) ,                { \\mathsf{gs}[i-1,j-1 ] } + { { \\lambda}\\bigl[{\\begin{smallmatrix}{{\\texttt{0}}}\\\\{{{{p}[j]}}}\\end{smallmatrix}}\\bigr ] }    + { \\gamma^{(<)}_{5}}(j ) + { \\gamma^{(>)}_{2}}(j-1),\\\\ *              & { \\mathsf{gp}[i-2,j-1 ] } + { { \\lambda}\\bigl[{\\begin{smallmatrix}{{{{s}[i-1]}}}\\\\{{{{p}[j]}}}\\end{smallmatrix}}\\bigr ] } + { \\gamma^{(<)}_{6}}(j ) + { \\gamma^{(>)}_{6}}(j ) ,                { \\mathsf{gp}[i-2,j ] } + { { \\lambda}\\bigl[{\\begin{smallmatrix}{{{{s}[i-1]}}}\\\\{{\\texttt{0}}^h}\\end{smallmatrix}}\\bigr]}\\bigr\\ }          \\end{aligned } & \\text{odd $ i$ , even $ j$}\\end{aligned}\\ ] ]",
    "gaps are scored by using affine penalties , with gap - open , -extend , and -close scores , denoted by @xmath52 .",
    "the gap - counting heuristic implies that gap scores in the equations of table  [ tbl : ali ] are defined by the number of certain patterns in up to three consecutive alignment columns .",
    "for instance , @xmath53 equals the gap - open penalty multiplied by the number of such rows in  @xmath41 where column  @xmath50 contains an indel , and column  @xmath54 has a phase-0 intron .",
    "the corresponding pattern is described as  @xmath55 .",
    "table  [ tbl : gaps ] lists the patterns for the gap - counting heuristic .",
    "@xmath56}}$ has intron , otherwise nothing } \\\\ * { \\gamma^{(<)}_{5 } } & { \\texttt{1}}\\text { or } { \\texttt{x}}{\\texttt{0 } } & { \\gamma^{(<)}_{6 } } & { \\texttt{1}}\\\\ * { \\gamma^{(>)}_{1 } } & { \\texttt{-}}{\\texttt{0}}{\\texttt{x}}\\text { or } { \\texttt{-}}{\\texttt{1}}{\\texttt { * } } & { \\gamma^{(>)}_{2 } } & { \\texttt{x}}\\\\ * { \\gamma^{(>)}_{3 } } & { \\texttt{1}}{\\texttt{*}}\\text { or } { \\texttt{0}}{\\texttt{x } } &      { \\gamma^{(>)}_{4 } } & { \\texttt{x}}\\text { if $ { { { s}[i]}}$ has intron , otherwise nothing } \\\\ * { \\gamma^{(>)}_{5 } } & { \\texttt{-}}{\\texttt{1 } } & { \\gamma^{(>)}_{6 } } & { \\texttt{1}}\\\\ * { \\gamma^{(-)}_{1 } } & { \\texttt{- } } & { \\gamma^{(-)}_{2 } } & { \\texttt{x}}\\end{array}\\ ] ]    table  [ tbl : ali ] does not show the initialization of the variables , nor the final gap - counting : they employ a logic analogous to the recurrences . at the end of the algorithm , the best of  @xmath57}$ ] , @xmath58}$ ] , @xmath59}$ ] is selected , and the actual alignment is found by standard traceback techniques  .",
    "we implemented the algorithm in java .",
    "the program iteratively realigns one sequence at a time to the rest of the sequences in a multiple alignment . instead of sequence - dependent intron match - mismatch scores ,",
    "the implementation uses only two parameters : one for intron conservation and another for intron loss / gain .      in order to reliably identify orthologs",
    ", we need to be able to distinguish regions of the alignment that are highly conserved from those that are less well - conserved . in poorly conserved regions",
    ", we can not confidently infer intron orthology .",
    "proposed post - processing pairwise sequence alignments into alternating blocks that score above a threshold parameter  @xmath60 or below  @xmath61 .",
    "we attained a similar goal by adapting algorithmic technniques from .",
    "the procedure separates a multiple alignment into alternating high- and low - scoring regions . using a complexity penalty  @xmath60",
    ", a segmentation with  @xmath62 high - scoring regions has a segmentation score of @xmath63 where  @xmath64 is the sum of scores for the aligned columns .",
    "column scores are computed without gap - open and -close penalties .",
    "the best segmentation of an alignment of length  @xmath5 can be found in  @xmath65 time after the column scores are computed .",
    "the result of this computation is that the total of column scores in each selected high - scoring region will be greater than  @xmath60 .",
    "there may be small sub - regions of negative scores , but the total score of such a sub - region can not be less than  @xmath61 .",
    "conversely , unselected regions score below  @xmath61 and can not have sub - regions scoring above  @xmath60 .",
    "we use a markov model for intron evolution , as in previous studies  . for the sake of generality",
    ", we describe the markov model over an arbitrary alphabet  @xmath66 of fixed size @xmath67 .",
    "the intron alphabet is @xmath68 .",
    "phylogeny _ over a set of species  @xmath69 is defined by a rooted tree  @xmath70 and a probabilistic model .",
    "the leaves are bijectively mapped to elements of  @xmath69 .",
    "each tree node  @xmath71 has an associated random variable  @xmath72 , which is called its _ state _ or _ label _ , that takes values over  @xmath66 .",
    "the tree  @xmath70 with its parameters defines the joint distribution for the random variables  @xmath72 .",
    "the distribution is determined by the _ root probabilities _ @xmath73 and _ edge transition probabilities _",
    "@xmath74 assigned to every edge  @xmath75 .",
    "the root probabilities give the distributon of the root state .",
    "edge transition probabilities define the conditional distributions @xmath76 . along every path away from the root , the node states form a markov chain .",
    "the leaf states form the _ character _",
    "an input data set ( or _ sample _ ) consists of independent and identically distributed ( iid ) characters : @xmath78 .    in case of intron evolution ,",
    "introns are generated by a two - state continuous - time markov process with _ gain _ and _ loss rates _",
    "@xmath79 along each edge  @xmath75 .",
    "the edge length is denoted by  @xmath80 . using standard results  , the transition probabilities on edge  @xmath75 with rates @xmath81 and",
    "length  @xmath82 can be written as @xmath83 , @xmath84 , and @xmath85 , @xmath86 . in the absence of established edge lengths",
    ", we fix the edge length scaling in such a way that @xmath87 .",
    "independent model parameters are thus @xmath88 , @xmath89 and  @xmath80 for all edges  @xmath75 .",
    "it is important to allow for branch - dependent rates , since loss and gain rates vary considerably between lineages .    in a maximum likelihood approach ,",
    "model parameters are set by maximizing the likelihood of the input sample .",
    "let  @xmath90 be the input data .",
    "every  @xmath91 is a vector of  @xmath6 states , and we write  @xmath92 to denote the observed state of leaf  @xmath71 . by independence ,",
    "the likelihood of  @xmath93 is the product @xmath94 .",
    "each character s likelihood can be computed in @xmath95 time , using a dynamic programming procedure introduced by .",
    "the procedure relies on a `` pruning '' technique , which consists of computing the conditional likelihoods  @xmath96 for every node  @xmath71 and letter  @xmath97 .",
    "@xmath96 is the probability of observing the leaf labelings in the subtree of  @xmath71 , given that  @xmath71 is labeled with  @xmath97 .",
    "the likelihood for the character  @xmath45 equals @xmath98 .",
    "intron data are somewhat unusual in that an all-@xmath23 character is never observed : the input does not include sites in which introns are absent in all of the organisms .",
    "the uncorrected likelihood function is therefore misleading , as it underestimates the probability of intron loss . to resolve this difficulty",
    ", we employ a correction technique proposed by for restriction sites .",
    "( describes an alternative technique based on expectation maximization . )",
    "we compute the likelihood under the condition that the input does not include all-@xmath23 characters .",
    "we use therefore the corrected likelihood @xmath99 , and maximize @xmath100 .",
    "our goal is to give a reliable characterization of the dynamics of intron evolution .",
    "in particular , we aim to give estimates for intron density in ancestral species , and for intron loss and gain events on the edges .",
    "notice that the estimation method needs to account for ancestral introns even if they got eliminated in all descendant lineages .",
    "it is possible to do that with the help of conditional expectations , which fit naturally into a likelihood framework .    for an observed character  @xmath45 , we define _ upper conditional likelihoods _  @xmath101 so that @xmath102 .",
    "upper conditional likelihoods are computed with dynamic programming , from the root towards the leaves , in  @xmath4 time  , even for non - binary trees .",
    "similar computations are routinely used in dna and protein likelihood maximization programs  . here",
    "we allow irreversible probabilistic models , which explains why  @xmath101 must be computed in a top - down fashion in  .    the posterior probability for the state at node  @xmath71 is @xmath103 the posterior probabilities for state changes on an edge  @xmath104 are @xmath105    now",
    ", the number of ancestral introns is estimated as the conditional expectation @xmath106 .",
    "the formula takes into consideration unobserved intron sites , by estimating their number @xmath107 as the mean of a negative binomial random variable .",
    "the number of intron state changes is estimated as @xmath108 .",
    "in particular , @xmath109 is the number of introns lost , and @xmath110 is the number of introns gained on the edge leading to  @xmath111 .    in order to compute  @xmath112 , we initialize @xmath113 . on every edge  @xmath104 ,",
    "there are many heuristics that accelerate likelihood - based phylogenetic reconstruction  , which mostly concentrate on the exploration of the tree space .",
    "we propose an improvement to the evaluation of the likelihood function , which normally takes linear time in the input size .",
    "our evaluation method yields an  @xmath115 speedup for typical trees .",
    "we use it to optimize the parameters of intron evolution on a known tree , but the method is generally applicable to phylogenetic likelihood problems where the likelihood is numerically optimized .",
    "the key idea is that it is enough to carry out the pruning algorithm once for every different labeling within a subtree .",
    "different labelings within each subtree can be computed in a preprocessing step .",
    "subsequent evaluations of the likelihood function with different model parameters are faster , and depend on the number of different labelings in the data set .    here",
    "we describe how the preprocessing step can be carried out in  @xmath4 time .",
    "secondly , we analyze the computational complexity of subsequent evaluations , and show that an  @xmath115 speedup is achieved for almost all random trees in the yule - harding model .",
    "the latter analysis produces some novel concentration results on the number of subtrees with a fixed size  @xmath62 .    to our knowledge , the closest idea to ours",
    "was articulated by .",
    "specifically , they proposed identifying characters in which leaves in a subtree have identical labels .",
    "they reported that in benchmark experiments with nucleotide sequences , likelihood optimization was accelerated by 1215% through this technique .",
    "the technique relies entirely on the fact that alignments of closely related sequences exhibit high levels of identity , and can not be extended to non - identical labelings .",
    "the yule - harding distribution is encountered in random birth and death models of species and in coalescent models  , and is thus one of the most adequate random models for phylogenies . in one of the equivalent formulations ,",
    "a random tree is grown by adding leaves one by one in a random order .",
    "the leaves are first numbered by using a random uniform permutation of the integers  @xmath116 .",
    "leaves are joined to the tree in an iterative procedure . in step 1 , the tree is just leaf  1 on its own . in step 2 ,",
    "the tree is a `` cherry '' with leaves  @xmath117 and  @xmath118 . in each subsequent step",
    "@xmath119 , a random leaf  @xmath120 is picked uniformly from the set @xmath121 .",
    "the new leaf  @xmath19 is added to the tree as the sibling of  @xmath120 , forming a cherry : a new node is placed on the edge leading to  @xmath120 and  @xmath19 is connected to it . the resulting random tree in iteration  @xmath6 has the yule - harding distribution  .    0.98    c    algorithm compress    * for * every leaf @xmath71 * do *    initialize @xmath122{\\leftarrow}0 $ ] // _ @xmath123 $ ] is the first occurrence of state @xmath50 _    * for * @xmath124 * do *    * if * @xmath125 = 0 $ ] * then * @xmath125{\\leftarrow}i$ ]    set @xmath126 $ ]    * for * every non - leaf node @xmath71 in a post - order traversal *",
    "do *    initialize the map @xmath127 as empty [ line : compression.map.init ]    let @xmath128 be the left and right children of @xmath71    * for * @xmath124 * do *    * if * @xmath129 * then * @xmath130 [ line : compression.map.set ]    set @xmath131 [ line : compression.map.get ]      the likelihood can be computed faster by first identifying the different  @xmath91 values , along with their multiplicity in the data . for large trees ,",
    "the input typically consists of many different labelings , but for small trees with  @xmath132 , the compression is useful , since the number of different  @xmath91 values is bounded by  @xmath133 . in order to exploit the benefits of compression ,",
    "we extend it to every subtree .",
    "[ def : compression ] define the multiset of observed labelings for every node  @xmath71 as follows .",
    "let  @xmath134 denote the number of leaves in the subtree rooted at  @xmath71 , and let  @xmath135 denote those leaves . define  @xmath136 for every labeling  @xmath137 of the leaves in the subtree of  @xmath71 as the number of times  @xmath138 is observed in the data : @xmath139 where  @xmath140 denotes the indicator function that takes the value 1 if its argument is true , otherwise it is  0 .",
    "define also the set of observed labelings @xmath141    the multisets of observed labelings are computed in the preprocessing step .",
    "the likelihood function is evaluated subsequently by computing the conditional likelihoods at each node  @xmath71 for the labelings of  @xmath142 only , in  @xmath143 time .    in order to compute  @xmath144",
    ", we use a recursive procedure .",
    "it is important to avoid working with the @xmath95-dimensional vectors  @xmath138 of definition  [ def : compression ] directly , otherwise the preprocessing may take superlinear time in  @xmath6 .",
    "for that reason , every labeling @xmath145 is represented by the index  @xmath19 for which  @xmath91 is the first occurrence of  @xmath138 .",
    "accordingly , we compute an auxiliary array  @xmath146 , which stores the first occurrence of each labeling  @xmath91 in  @xmath71 s subtree . in particular , @xmath147 if  @xmath148 is the smallest index such that @xmath149 for all  @xmath62 where  @xmath150 are the leaves in  @xmath71 s subtree .",
    "figure  [ fig : compression ] shows that the values  @xmath146 can be computed in a post - order traversal .",
    "after  @xmath146 are computed for all  @xmath19 and  @xmath71 , the multiplicities  @xmath144 and observed labelings  @xmath142 are straightforward to calculate in linear time .",
    "the map  @xmath151 in lines  [ line : compression.map.init][line : compression.map.get ] is sparse with at most  @xmath5 entries , and can be implemented as a hash table so that accessing and updating it takes  @xmath152 time",
    ". consequently , algorithm  compress takes @xmath4 time .",
    "0.98    l    algorithm loglikelihood    * for * every leaf @xmath71 do    set @xmath153[a']{\\leftarrow}\\chi\\{a = a'\\}$ ] for all @xmath154 and @xmath155    * for * every non - leaf node @xmath71 in a post - order traversal * do *    * for * every labeling @xmath145 * do *    let @xmath156 be the children of @xmath71 , and let @xmath157 be their subtree labelings    * for * every @xmath158    @xmath159[a ] { \\leftarrow}\\prod_{j=1,2}\\sum_{a'\\in{\\mathcal{a } } } p_{uu_j}(a\\rightarrow a ' ) l_{u_j}[y_j][a']$ ]    set @xmath160    * for * every labeling @xmath161 * do *    @xmath162[a]\\bigr)$ ]    * return * @xmath163      after the preprocessing step , the conditional likelihoods are computed only for the different labelings within each subtree .",
    "figure  [ fig : likelihood ] shows the evaluation of the likelihood function .",
    "the running time for the algorithm is @xmath164 where  @xmath165 is the total number of different labelings within all subtrees : @xmath166 if  @xmath167 denotes the number of leaves in the subtree rooted at  @xmath71 , then  @xmath142 has at most  @xmath168 elements .",
    "hence ,  @xmath165 is bounded as @xmath169 observe that by sheer number of arithmetic operations , it is always worth evaluating the likelihood function this way .",
    "the worst situation is that of a caterpillar tree ( where every inner node has a leaf child ) . in that case , there are only a few ( @xmath170 ) non - leaf nodes for which we can compress the data , and it is possible to construct an artificial data set in which there are  @xmath5 different labelings for @xmath171 subtrees .",
    "caterpillar trees , however , are rare in phylogenetic analysis .",
    "typical phylogenies have fairly balanced subtrees  .    in",
    "what follows , we examine the bound of   more closely in the yule - harding model .",
    "the analysis relies on a characterization of the random number of subtrees with a given size , as expressed in theorems  [ tm : sizes.mean ] and  [ tm : sizes.concentration ] .",
    "[ tm : sizes.mean ] consider random evolutionary trees with  @xmath6 leaves in the yule - harding model .",
    "let  @xmath172 denote the number of subtrees with  @xmath173 leaves in a random tree .",
    "the expected value of  @xmath172 is @xmath174 trivially , @xmath175 .",
    "derives equation   by appealing to a plya urn model .",
    "an equivalent result is stated by .",
    "@xmath176    [ tm : sizes.concentration ] for all @xmath177 ,    [ eq : sizes.tail ] @xmath178    consider the random construction of the tree .",
    "let  @xmath120 denote the random leaf picked in step  @xmath19 to which leaf  @xmath19 gets connected , for @xmath179 .",
    "each random variable  @xmath120 is uniformly distributed over the set  @xmath121 , and @xmath180 are independent .",
    "moreover , they completely determine the tree  @xmath10 at the end of the procedure .",
    "consequently , @xmath172  is a function of  @xmath181 : @xmath182 .",
    "the key observation for the concentration result is that if we change the value of only one of the  @xmath120 in the series , then @xmath172 changes by at most two . in order to see this , consider what happens to the tree  @xmath10 , if we change the value of exactly one of the  @xmath120 from  @xmath138 to  @xmath183 .",
    "such a change corresponds to a `` subtree prune and regraft '' transformation  .",
    "specifically , the subtree  @xmath184 , defined as the child tree of the lowest common ancestor  @xmath71 of  @xmath138 and  @xmath19 containing the leaf  @xmath19 , is cut from  @xmath10 , and is reattached to one of the edges on the path from the root to  @xmath183 .",
    "now , such a transformation does not affect  @xmath172 by much .",
    "notice that subtree sizes are strictly monotone decreasing from the root on every path . on the path from the root to  @xmath71 ,",
    "subtree sizes decrease by the size  @xmath185 of  @xmath184 , and  @xmath71 disappears , contributing a change of @xmath186 , @xmath187 or  @xmath188 to  @xmath172 .",
    "( at most one subtree of size  @xmath189 that contains @xmath184 now has size  @xmath62 , and at most one subtree of original size  @xmath62 is not counted anymore : it may be @xmath71 s subtree itself , or a subtree above it . )",
    "an analogous argument shows that regrafting contributes a change of  @xmath186 , @xmath187 , or  @xmath188 .",
    "hence , the function  @xmath190 is such that by changing one of its arguments , its value changes by at most  @xmath118 . as a consequence , mcdiarmid s inequality  ( @xcite )",
    "can be applied to bound the probabilities of large deviations for  @xmath172 . in particular , for all  @xmath177 , @xmath191 where  @xmath192 and @xmath193 since @xmath194 for all  @xmath19 , @xmath195 , implying eq .  .",
    "an identical bound holds for the right - hand tail of the distribution .",
    "@xmath176    remark .",
    "the particular case of  @xmath196 was considered by  .",
    "they showed that the distribution of  @xmath197 is asymptotically normal with mean  @xmath198 and variance  @xmath199 .",
    "the result suggests that the best constant factor in the exponent of eqs .",
    "is  @xmath200 for  @xmath201 , instead of  @xmath202",
    ". gave exact formulas for the variance of  @xmath172 .",
    "he showed that the variance of  @xmath172 is @xmath203 .",
    "the variance formulas were given earlier in a different context by .",
    "( see also the discussion by . )",
    "the result suggests that by analogy with the cherries , the best constant factor in the exponent is  @xmath204 .",
    "it is thus plausible that the probability is properly bounded by @xmath205 in theorem  [ tm : compute ] below .",
    "[ tm : compute ] with probability  @xmath206 , the likelihood function can be evaluated for random trees in the yule - harding model in @xmath207 time after an initial preprocessing step that takes  @xmath4 time . evaluating the likelihood function takes  @xmath4 time in the worst case , and @xmath208 time on average .",
    "we need the following lemma for the proof of theorem  [ tm : compute ] .",
    "[ lm : sum.q^i / i ] for all @xmath209 , @xmath210 .",
    "for all @xmath211 and @xmath212 , @xmath213 .",
    "the proof is straightforward by induction in  @xmath214 .",
    "notice that the right order of magnitude is @xmath215 but we need a bound for all  @xmath214 .",
    "@xmath176    .effect of the compression on three data sets .",
    "the fourth column quantifies the direct evaluation method , the fifth column quantifies the effect of the compression restricted to the root , the sixth column corresponds to the bound of eq .   and",
    "the seventh column gives the exact value of  @xmath165 .",
    "the first data set is from rogozin et al .",
    "( 2003 ) , the second data set is the one analyzed here in   [ ss : app.ancestors ] , and the third one is an unpublished data set we have worked on , where an ambiguity character is included in the alphabet .",
    "[ cols=\">,>,^ , > , > , > , > \" , ]      genbank flatfiles and protein sequences were downloaded from refseq and ensembl .",
    "exon - intron annotation was extracted from the genbank flatfiles .",
    "the _ c.  briggs _ protein sequences and genome annotation were downloaded from wormbase , and intron annotation was extracted from the gff annotation file .",
    "table  [ tbl : data ] lists the data sources and the species abbreviations .",
    "we used the 684 ortholog sets , each corresponding to a cluster of orthologous groups , or kog , from the study of as `` seeds '' for compiling a set of putative orthologs for our species .",
    "for each seed ( consisting of homologous protein sequences for eight species ) , we performed a position - specific iterated blast search . in case of plasmodium species",
    ", we used three iterations against a database of all protozoan peptide sequences in refseq .",
    "we used an e - value cutoff of  @xmath216 for retaining candidates .",
    "each candidate hit was then used as a query in a reversed position - specific blast ( rpsblast ) search against the kog database .",
    "candidates were retained after this point if they had the highest scoring hit ( by rpsblast ) against the same kog as the kog of the seed data , and they scored within  80% of the best such hit for the species .         from the resulting set of paralogs , we selected a putative ortholog set in the following manner . for each kog , we selected all possible triples of human - arabidopsis - saccharomyces paralogs and kept the triple that had the highest score in alignments built by muscle  .",
    "alignment score was computed using the vtml240 matrix  .",
    "additional putative orthologs were added for one species at a time , by aligning each paralog individually to the current profile , and keeping the one that gave the largest alignment score . at this iterative addition , scoring was done with the vtml240 matrix , by summing the five highest pairwise scores between a candidate and already included sequences .    the resulting sets were then realigned using muscle , and then realigned again using our intron - aware alignment with a gap penalty of  300 , gap - extend penalty of  11 , vtml240 amino acid scoring , intron - match scores of  300 and intron - mismatch penalties of  20 .",
    "( these latter were established using different intron - match and -mismatch scores , and selecting the ones that gave the fewest number of intron sites while decreasing the score of the implied protein alignment by less than  0.1% . )",
    "conserved portions were extracted using our segmentation program with a complexity penalty of  @xmath217 ( larger values gave identical segmentation results , and lower values resulted in too many scattered blocks ) .",
    "we penalized indels with an infinitely large value to exclude gap columns .",
    "phase-0 introns falling on the boundaries of conserved blocks were excluded . intron presence and absence in the aligned data",
    "was then extracted to produce the data for the likelihood programs .",
    "figure  [ fig : posteriors ] shows the estimated intron densities for ancestral species .",
    "it is notable that ancestral nodes such as the bilaterian ancestor ( node 4 ) , the ecdysozoan ancestor ( node 5 ) , the opisthokont ancestor ( node 15 ) , and the bikont ancestor ( node 16 ) all have very high intron densities , surpassing most previous estimates  .",
    "the ecdysozoan ancestor has an even higher estimated intron density ( 80% of human density ) than the otherwise quite generous estimates ( about 70% ) of , which is mostly due to the inclusion of the relatively intron - rich honeybee genes .",
    "intron density in the bilaterian ancestor is estimated to be almost as high as in humans ( 94% ) , agreeing with estimates of .",
    "sequences of a handful of intron - rich genes from the marine annelid _",
    "platynereis dumerilii _ have already indicated that the bilaterian ancestor s genome was at least two - thirds as intron - rich as the vertebrate genomes even by conservative estimates  .",
    "introns are for the most part lost on the branches .",
    "figure  [ fig : changes ] shows the estimated changes in a few lineages .",
    "intron evolution has been much slower in the vertebrate lineage than in most other lineages : in more than 380 million years since the divergence with fishes , only about 3% of our introns got lost .",
    "fungi , for example , massively trimmed their introns in many lineages .",
    "a notable exception is _ c.  neoformans _ , which seems to have gained introns , but that assessment may change if another basidiomycete genome becomes available besides the relatively intron - poor _",
    "u.  maydis_.",
    "we presented a novel alignment technique for establishing intron orthology , and a likelihood framework in which intron evolutionary events can be quantified .",
    "we described a compression method for the evaluation of the likelihood function , which has been extremely valuable in practice .",
    "we also showed that the compression leads to sublinear running times for likelihood evaluation .",
    "we illustrated our methods for analyzing intron evolution with a large and diverse set of eukaryotic organisms .",
    "the data set is more comprehensive than any used in other studies published to this day .",
    "the data indicate that ancestral eukaryotic genomes were more intron - rich than previous studies suggested .",
    "many circumstances influence intron loss , and realistic likelihood models need to introduce rate variation .",
    "usual rate variation models   entail multiple evaluations of the likelihood function , and , thus , underline the importance of computational efficiency .",
    "we believe that the proposed methods will help to produce and analyze large data sets even within complicated likelihood models .",
    "this research is supported by a grant from the natural sciences and engineering research council of canada .",
    "adachi , j. and m.  hasegawa ( 1995 ) .",
    "version 2.3 : programs for molecular phylogenetics based on maximum likelihood .",
    "volume  28 of _ computer science monographs _ , pp .",
    "tokyo , japan : institute of statistical mathematics .",
    "altschul , s.  f. , t.  l. madden , a.  a. schffer , j.  zhang , z.  zhang , w.  miller , and d.  j. lipman ( 1997 ) .",
    "gapped blast and psi - blast : a new generation of protein database search programs .  _",
    "25_(17 ) , 33893402 .                                              ma , b. , z.  wang , and k.  zhang ( 2003 ) .",
    "alignment between two multiple alignments . in r.",
    "a. baeza - yates , e.  chvez , and m.  crochemore ( eds . ) , _ proc .",
    "combinatorial pattern matching ( cpm ) _ , volume 2676 of _ lncs _ , pp .",
    "springer .",
    "raible , f. , k.  tessmar - raible , k.  osoegawa , p.  wincker , c.  jubin , g.  balavoine , d.  ferrier , v.  benes , p.  de  jong , j.  weissenbach , p.  bork , and d.  arendt ( 2005 ) .",
    "vertebrate - type intron - rich genes in the marine annelid platynereis dumerilii .  _ 310 _ , 13251326 .",
    "rogozin , i.  b. , y.  i. wolf , a.  v. sorokin , b.  g. mirkin , and e.  v. koonin ( 2003 ) .",
    "remarkable interkingdom conservation of intron positions and massive , lineage - specific intron loss and gain in eukaryotic evolution .",
    "_ 13 _ , 15121517 .",
    "stamatakis , a.  p. , t.  ludwig , h.  meier , and m.  j. wolf ( 2002 ) . : a fast program for sequential and parallel phylogenetic tree calculations based on the maximum likelihood method . in _ proc .",
    "ieee computer society bioinformatics conference ( csb ) _ , pp ."
  ],
  "abstract_text": [
    "<S> many fundamental questions concerning the emergence and subsequent evolution of eukaryotic exon - intron organization are still unsettled . </S>",
    "<S> genome - scale comparative studies , which can shed light on crucial aspects of eukaryotic evolution , require adequate computational tools .    </S>",
    "<S> we describe novel computational methods for studying spliceosomal intron evolution . </S>",
    "<S> our goal is to give a reliable characterization of the dynamics of intron evolution . </S>",
    "<S> our algorithmic innovations address the identification of orthologous introns , and the likelihood - based analysis of intron data . </S>",
    "<S> we discuss a compression method for the evaluation of the likelihood function , which is noteworthy for phylogenetic likelihood problems in general . </S>",
    "<S> we prove that after @xmath0 preprocessing time , subsequent evaluations take @xmath1 time almost surely in the yule - harding random model of @xmath2-taxon phylogenies , where @xmath3 is the input sequence length .    </S>",
    "<S> we illustrate the practicality of our methods by compiling and analyzing a data set involving 18 eukaryotes , more than in any other study to date . </S>",
    "<S> the study yields the surprising result that ancestral eukaryotes were fairly intron - rich . </S>",
    "<S> for example , the bilaterian ancestor is estimated to have had more than 90% as many introns as vertebrates do now .    [ </S>",
    "<S> [ contact ] ] contact : + + + + + + + +    csuros at iro.umontreal.ca </S>"
  ]
}
{
  "article_text": [
    "a stochastic game arena is a directed graph with three kinds of states : eve s , adam s and random states .",
    "a token circulates on this arena : when it is in one of eve s states , she chooses its next location among the successors of the current state ; when it is in one of adam s states , he chooses its next location ; and when it is in a random state , the next location is chosen according to a fixed probability distribution .",
    "the result of playing the game for @xmath0 moves is an infinite path of the graph .",
    "a play is winning either for eve or for adam , and the `` winner problem '' consists in determining whether one of the players has a winning strategy , from a given initial state .",
    "closely related problems concern the computation of winning strategies , as well as determining the nature of these strategies : pure or randomised , with finite or infinite memory .",
    "there has been a long history of using arenas without random states ( 2-player arenas ) for modelling and synthesising reactive processes @xcite : eve represents the controller , and adam the environment .",
    "stochastic ( 2@xmath1-player ) arenas @xcite , with the addition of random states , can also model uncontrollable actions that happen according to a random law , rather than by choice of an actively hostile environment .",
    "the desired behaviour of the system is traditionally represented as an @xmath0-regular winning condition , which naturally expresses the temporal specifications and fairness assumptions of transition systems @xcite . from this point of view",
    ", the complexity of the winning strategies is a central question , since they represent possible implementations of the controllers in the synthesis problem . in this paper",
    ", we focus on an important normal form of @xmath0-regular conditions , namely _ muller _ winning conditions ( see @xcite for a survey ) .    in the case of 2-player muller games , a fundamental determinacy result of bchi and landweber states that , from any initial state , one of the players has a winning strategy @xcite .",
    "gurevich and harrington used the _ latest appearance record _ ( lar ) structure of mcnaughton to extend this result to strategies with memory factorial in the size of the game @xcite .",
    "zielonka refines the lar construction into a tree , and derives from it an elegant algorithm to compute the winning regions @xcite .",
    "an insightful analysis of the zielonka tree by dziembowski , jurdzinski , and walukiewicz leads to optimal ( and asymmetrical ) memory bounds for pure ( non - randomised ) winning strategies @xcite .",
    "chatterjee extended these bounds to the case of pure strategies over 2@xmath1-player arenas @xcite .",
    "however , the lower bound on memory does not hold for _ randomised strategies _",
    ", even in non - stochastic arenas : chatterjee , de alfaro , and henzinger show that memoryless randomised strategies are enough for to deal with upward - closed winning conditions @xcite .",
    "chatterjee extends this result in @xcite , showing that conditions with non - trivial upward - closed subsets admit randomised strategies with less memory than pure ones .    * our contributions*.",
    "the memory bounds of @xcite are not tight in general , even for 2-player arenas .",
    "we give here matching upper and lower bounds for any muller condition @xmath2 , in the form of a number @xmath3 computed from the zielonka tree of @xmath2 :    * if eve has a winning strategy in a @xmath4-playergame @xmath5 , she has a randomised winning strategy with memory @xmath3 ( theorem  [ theorem : upper ] ) ; * there is a 2-player game @xmath6 where any randomised winning strategy for eve has at least @xmath3 memory states ( theorem  [ theorem : lower ] ) .    furthermore , the witness arenas we build in the proof of theorem  [ theorem : lower ] are significantly smaller than in @xcite , even though the problem of _ polynomial _ arenas remains open .",
    "* outline of the paper*. section  [ section : definitions ] recalls the classical notions in the area , while section  [ section : former ] presents former results on memory bounds and randomised strategies .",
    "the next two sections present our main results . in section  [ section :",
    "upper ] , we introduce the number @xmath3 and show that it is an upper bound on the memory needed to win in any 2@xmath1-game @xmath5",
    ". in section  [ section : lower ] , we show that this bound is tight .",
    "finally , in section  [ section : conclusions ] , we characterise the class of muller conditions that admit memoryless randomised strategies , and show that for each muller condition , at least one of the players can not improve its memory through randomisation .",
    "we consider turn - based stochastic two - player muller games .",
    "we recall here several classical notions in the field , and refer the reader to @xcite for more details .",
    "* probability distribution . *",
    "a probability distribution @xmath7 over a set @xmath8 is a function from @xmath8 to @xmath9 $ ] such that @xmath10 .",
    "the set of probability distributions over @xmath8 is denoted by @xmath11 .",
    "* arenas . * a _",
    "2@xmath1-player arena _",
    "@xmath12 over a set of colours @xmath13 consists of a directed finite graph @xmath14 , a partition @xmath15 of @xmath16 , a probabilistic transition function @xmath17 such that @xmath18 , and a partial colouring function @xmath19 . the states in @xmath20 ( resp .",
    "@xmath21 , @xmath22 ) are _ eve s states _ ( resp . _ adam s states _ , _ random states _ ) , and are graphically represented as @xmath23 s ( resp .",
    "@xmath24 , @xmath25 ) .",
    "2-player arena _ is an arena where @xmath26 .",
    "a set @xmath27 of states is _ @xmath28-closed _ if for every random state @xmath29 , @xmath30 .",
    "it is _ live _ if for every non - random state @xmath31 , there is a state @xmath32 such that @xmath33 .",
    "a live and @xmath28-closed subset @xmath34 induces a _ subarena _ of @xmath12 , denoted by @xmath35 .    *",
    "plays and strategies . * an infinite path , or _ play _ , over the arena",
    "@xmath12 is an infinite sequence @xmath36 of states such that @xmath37 for all @xmath38 .",
    "the set of states occurring infinitely often in a play @xmath39 is denoted by @xmath40 .",
    "we write @xmath41 for the set of all plays , and @xmath42 for the set of plays that start from the state @xmath43 .    a _ strategy with memory @xmath44 _ for eve on the arena @xmath45 is a ( possibly infinite ) transducer @xmath46 , where @xmath47 is the `` next - move '' function from @xmath48 to @xmath49 and @xmath50 is the `` memory - update '' function , from @xmath51 to @xmath52 .",
    "notice that both the move and the update are randomised : strategies whose memory is deterministic are a different , less compact , model .",
    "the strategies for adam are defined likewise . a strategy",
    "@xmath53 is _ pure _ if it does not use randomisation .",
    "it is _ finite - memory _ if @xmath44 is a finite set , and _ memoryless _ if @xmath44 is a singleton .",
    "notice that strategies defined in the usual way as functions from @xmath54 to @xmath16 can be defined as strategies with infinite memory : the set of memory states is @xmath54 and the memory update is @xmath55 .",
    "once a starting state @xmath56 and strategies @xmath57 for both players are fixed , the outcome of the game is a random walk @xmath58 for which the probabilities of events are uniquely fixed ( an _ event _ is a measurable set of paths ) . for an event @xmath59 ,",
    "we denote by @xmath60 the probability that a play belongs to @xmath61 if it starts from @xmath43 and eve and adam follow the strategies @xmath53 and @xmath62 .",
    "a play is consistent with @xmath53 if for each position @xmath63 such that @xmath64 , @xmath65 .",
    "the set of plays consistent with @xmath53 is denoted by @xmath66 .",
    "similar notions can be defined for adam s strategies .    * traps and attractors . *",
    "the _ attractor of eve to the set @xmath34 _ , denoted @xmath67 , is the set of states where eve can guarantee that the token reaches the set @xmath34 with a positive probability .",
    "it is defined inductively by :    @xmath68    the corresponding _ attractor strategy to @xmath34 for eve _ is a pure and memoryless strategy @xmath69 such that for any state @xmath70 , @xmath71 .",
    "the dual notion of _ trap for eve _ denotes a set from where eve can not escape , unless adam allows her to do so : a set @xmath34 is a trap for eve if and only if @xmath72 and @xmath73 .",
    "notice that a trap is a `` strong '' notion the token can never leave it if adam does not allow it to do so while an attractor is a `` weak '' one the token can avoid the target even if eve uses the attractor strategy . notice also that a trap ( for either player ) is always a subarena .    * winning conditions . *",
    "a _ winning condition _ is a subset @xmath74 of @xmath41 .",
    "a play @xmath39 is _ winning for eve _ if @xmath75 , and _",
    "winning for adam _ otherwise .",
    "we consider @xmath0-regular winning conditions formalised as _",
    "muller conditions_. a muller condition is determined by a subset @xmath2 of the power set @xmath76 of colours , and eve wins a play if and only ifthe set of colours visited infinitely often belongs to @xmath2 : @xmath77 .",
    "an example of muller game is given in figure  [ subfigure : game ] .",
    "we use it throughout the paper to describe various notions and results .",
    "* winning strategies . *",
    "a strategy @xmath53 for eve is _ surely winning _ ( or _ sure ) _ from a state @xmath43 for the winning condition @xmath74 if any play consistent with @xmath53 belongs to @xmath74 , and _ almost - surely winning _ ( or _ almost - sure _ ) if for any strategy @xmath62 for adam , @xmath78 .",
    "the _ sure _ and _ almost - sure _ regions are the sets of states from which she has a sure ( resp . almost - sure ) strategy .",
    "there has been intense research since the sixties on the non - stochastic setting , _ i.e. _ pure strategies and 2-player arenas .",
    "bchi and landweber showed the determinacy of muller games in @xcite .",
    "gurevich and harrington used the lar ( latest appearance record ) of mcnaughton to prove their _ forgetful determinacy _",
    "theorem @xcite , which shows that a memory of size @xmath79 is sufficient for any game that uses only colours from @xmath13 , even when the arena is infinite .",
    "this result was later refined by zielonka in @xcite , using a representation of the muller conditions as trees :    [ definition : zielonkatree ] the zielonka tree @xmath80 of a winning condition @xmath81 is defined inductively as follows :    1 .   if @xmath82 , then @xmath83 , where @xmath84 .",
    "2 .   if @xmath85 , then the root of @xmath80 is labelled with @xmath13 .",
    "let @xmath86 be all the maximal sets in @xmath87 .",
    "then we attach to the root , as its subtrees , the zielonka trees of @xmath88 , _",
    "i.e. _ the @xmath89 , for @xmath90 .",
    "hence , the zielonka tree is a tree with nodes labelled by sets of colours .",
    "a node of @xmath80 is an eve node if it is labelled with a set from @xmath2 , otherwise it is an adam node .",
    "a later analysis of this construction by dziembowski , jurdzinski and walukiewicz in @xcite led to an optimal and asymmetrical bound on the memory needed by the players to define sure strategies :    let @xmath91 be a muller condition , and @xmath92 be the subtrees attached to the root of the tree @xmath80 .",
    "we define the number @xmath93 inductively as follows :    @xmath94    [ theorem : pureupper ] if eve has a sure strategy in a 2-player muller game with the winning condition @xmath2 , she has a pure sure strategy with at most @xmath95 memory states .",
    "furthermore , there is a 2-player arena @xmath96 such that eve has a sure strategy , but none of her sure strategies have less than @xmath97 memory states .",
    "[ theorem : pureupperrandomised ] if eve has an almost - sure strategy in a 2@xmath1-player muller game with the winning condition @xmath2 , she has a pure almost - sure with at most @xmath95 memory states .",
    "randomised strategies are more general than pure strategies , and in some cases , they are also more compact . in @xcite , a first result showed that upward - closed conditions admit memoryless randomised strategies , while they do nt admit memoryless pure strategies :    [ theorem : upwardsclosed ] if eve has an almost - sure strategy in a 2@xmath1-player muller game with an upward - closed winning condition , she has a randomised almost - sure strategy .",
    "this result was later extended in @xcite , by removing the leaves attached to a node of the zielonka tree representing an upward - closed subcondition :    [ definition : chatterjee ] let @xmath98 be a muller condition , and @xmath99 be the subtrees attached to the root of the tree @xmath80 .",
    "we define the number @xmath100 inductively as follows :    @xmath101    [ theorem : chatterjee ] if eve has an almost - sure strategy in a 2@xmath1-player muller game with the winning condition @xmath2 , she has a randomised almost - sure strategy with at most @xmath102 memory states .",
    "the upper bound of theorem  [ theorem : chatterjee ] is not tight for all conditions .",
    "for example , the number @xmath103 of the condition @xmath104 in figure  [ subfigure : tree ] is three , while there is always an almost - sure strategy with two memory states .",
    "we present here yet another number for any muller condition @xmath2 , denoted @xmath3 , that we compute from the zielonka tree :    [ definition : rf ] let @xmath81 be a muller condition , where the root has @xmath105 children , @xmath106 of them being leaves .",
    "we denote by @xmath107 the non - leaves subtrees attached to the root of @xmath80 .",
    "we define @xmath3 inductively as follows :    @xmath108    the first remark is that if @xmath109 , @xmath3 is equal to @xmath97 : as the leaves belong to eve , the fourth case can not occur . in the other case ,",
    "the intuition is that we merge leaves if they are siblings .",
    "for example , the number @xmath110 for our recurring example is two : one for the leaves labelled @xmath111 and @xmath112 , and one for the leaves labelled @xmath113 and @xmath114 .",
    "the number @xmath115 is four ( one for each leaf ) , and @xmath116 is three ( one for the leaves labelled @xmath113 and @xmath114 , and one for each other leaf ) .",
    "this section will be devoted to the proof of theorem  [ theorem : upper ] :    [ theorem : upper ] if eve has an almost - sure strategy in a 2-@xmath1 player muller game with the winning condition @xmath117 , she has an almost - sure strategy with memory @xmath3 .",
    "let @xmath118 be a game defined on the set of colours @xmath13 such that eve wins from any initial node .",
    "we describe in the next three subsections a recursive procedure to compute an almost - sure strategy for eve with @xmath3 memory states in each non - trivial case in the definition of @xmath3 .",
    "we use two lemmas  lemmas  [ lemma : upperadam ] and [ lemma : uppereve ]  that derive directly from similar results in @xcite and @xcite .",
    "the application of these principles to the game @xmath119 in figure  [ figure : example ] builds a randomised strategy with two memory states _ left _ and _ right_. in _ left _ , eve sends the token to ( @xmath120 _ or _",
    "@xmath121 ) and in _ right _ , to ( @xmath122 _ or _",
    "@xmath123 ) . the memory switches from _ right _ to _ left _ with probability one when the token visits a @xmath124 , and from _ left _ to _ right _ with probability @xmath1 at each step .      in the case where adam wins the set @xmath13 ,",
    "the construction of @xmath53 relies on lemma  [ lemma : upperadam ] :    [ lemma : upperadam ] let @xmath98 be a muller winning condition such that @xmath82 , and @xmath45 be a 2@xmath1-player arena such that eve wins everywhere .",
    "there are subarenas @xmath125 such that :    * @xmath126 ; * @xmath127 is a trap for adam in the subarena @xmath128 ; * @xmath129 is included in the label @xmath130 of a child of the root of @xmath80 , and eve wins everywhere in @xmath131 ; * @xmath132 .",
    "let the subarenas @xmath133 be the ones whose existence is proved in this lemma .",
    "we denote by @xmath134 the almost - sure strategy for eve in @xmath133 , and by @xmath135 the attractor strategy for eve to @xmath133 in the arena @xmath136 .",
    "we identify the memory states of the @xmath134 , so their union has the same cardinal as the largest of them . for a state @xmath43 ,",
    "if @xmath137 , we define @xmath138 by :    * if @xmath139 * * @xmath140 * * @xmath141 * if @xmath142 * * @xmath143 * * @xmath144    by induction hypothesis over the number of colours , we can assume that the strategies @xmath134 have @xmath145 memory states .",
    "the strategy @xmath53 uses @xmath146 memory states .    [",
    "proposition : trapadam ] @xmath147 .",
    "the subarenas @xmath133 are embedded traps , defined in such a way that the token can escape an @xmath133 only by going to the attractor of a smaller one .",
    "eve has thus a positive probability of reaching an @xmath148 with @xmath149 .",
    "thus , if the token escapes one of the @xmath150 infinitely often , the token has probability one to go to an @xmath148 with @xmath149 . by argument of minimality , after a finite prefix , the token will stay in one of the traps forever .",
    "the strategy @xmath134 is almost - sure from any state in @xmath133 . as muller conditions are prefix - independent",
    ", it follows from proposition  [ proposition : trapadam ] that @xmath53 is also almost - sure from any state in @xmath45 .      in this case",
    ", the construction relies on the following lemma :    [ lemma : uppereve ] let @xmath98 be a muller winning condition such that @xmath85 , @xmath45 a 2@xmath1-player arena coloured by @xmath13 such that eve wins everywhere , and @xmath150 the label of a child of the root in @xmath80 .",
    "then , eve wins everywhere on the subarena @xmath151 with the condition @xmath152 .",
    "eve has a strategy @xmath134 that is almost - sure from each state in @xmath151 . in this case , the set of memory states of @xmath53 is @xmath153 .",
    "the `` next - move '' and `` memory - update '' functions @xmath47 and @xmath50 for a memory state @xmath154 are defined below :    * if @xmath155 * * @xmath156 where @xmath157 is any state in @xmath158 * * if @xmath159 , @xmath160 is any successor of @xmath43 in @xmath45 * if @xmath161 * * @xmath162 * * @xmath163 * if @xmath164 * * @xmath165 * * @xmath166    once again , we can assume that the memory @xmath167 of the strategy @xmath134 is of size @xmath168 . here , however , the memory set of @xmath53 is the disjoint union of the @xmath167 , so @xmath53 s needs the sum of the @xmath169 s .",
    "[ proposition : constant ] let @xmath170 be the event `` the top - level memory of @xmath53 is ultimately constant '' . then , @xmath171 .",
    "we call @xmath63 the value of the top - level memory at the limit . after a finite prefix , the token stops visiting @xmath172 .",
    "thus , with probability one , it also stops visiting @xmath173 . from this point on ,",
    "the token stays in the arena @xmath133 , where eve plays with the almost - sure strategy @xmath134 .",
    "thus , @xmath174 , and , as @xmath175 , proposition  [ proposition : constant ] follows .",
    "[ proposition : variation ] if the top - level memory takes each value in @xmath176 infinitely often , then surely , @xmath177 .",
    "the update on the top - level memory follows a cycle on @xmath176 , leaving @xmath63 only when the token visits @xmath172 .",
    "thus , in order for the top - level memory to change continuously , the token has to visit each of the @xmath172 infinitely often .",
    "proposition [ proposition : variation ] follows .      as in the previous section ,",
    "the construction relies on lemma  [ lemma : uppereve ] .",
    "in fact , the construction for children which are not leaves , labelled @xmath178 , is exactly the same .",
    "the difference is that we add here a single memory state @xmath179 that represents all the leaves ( labelled @xmath180 ) .",
    "the memory states are thus updated modulo @xmath181 , and not modulo @xmath182 .",
    "the `` next - move '' function of @xmath53 when the top - level memory is @xmath179 is an even distribution over all the successors in @xmath183 of the current state .",
    "the `` memory - update '' function has probability @xmath1 to stay into @xmath179 , and @xmath1 to go to @xmath184 , for some memory state @xmath185 .",
    "thus , @xmath53 uses memory @xmath186 .",
    "we prove now that @xmath53 is almost - sure .",
    "the structure of the proof is the same as in the former section , with some extra considerations for the memory state @xmath179 .",
    "[ proposition : constantbis ] let @xmath170 be the event `` the top - level memory of @xmath53 is ultimately constant and different from 0 '' .",
    "then , @xmath187 .",
    "the proof is exactly the same as the one of proposition  [ proposition : constant ] .",
    "[ proposition : constant0 ] the event `` the top - level memory is ultimately constant and equal to 0 '' has probability 0 .",
    "when the top - level memory is 0 , the memory - update function has probability @xmath1 at each step to switch to 1 .",
    "proposition  [ proposition : constant0 ] follows .",
    "proposition  [ proposition : variationbis ] considers the case where the top - level memory evolves continuously . by definition of the memory update",
    ", this can happen only if all the memory states are visited infinitely often .",
    "[ proposition : variationbis ] let @xmath188 be the event `` the top - level memory takes each value in @xmath189 infinitely often '' .",
    "then , @xmath190 .    as in the proof of proposition  [",
    "proposition : variation ] , from the fact that the memory is equal to each of the @xmath191 infinitely often , we can deduce that the token surely visits each of the @xmath192 infinitely often .",
    "we only need to show that , with probability one and for any @xmath193 , the set of limit states is not included in @xmath194 .",
    "the zielonka trees of the conditions @xmath195 are leaves .",
    "this means that they are trivial conditions , where all the plays are winning for adam .",
    "consequently , in this case , lemma  [ lemma : uppereve ] guarantees that @xmath196 is the whole arena .",
    "the definition of @xmath53 in the memory state @xmath197 is to play legal moves at random .",
    "there is thus a positive probability that eve will play according to the attractor strategy @xmath198 long enough to guarantee a positive probability that the token visits @xmath199 . to be precise , for any @xmath200 , this probability is greater than @xmath201 .",
    "thus , with probability one , the token visits each @xmath199 infinitely often .",
    "proposition [ proposition : variationbis ] follows .",
    "the initial case , where the zielonka tree is reduced to a leaf , is trivial : the winner does not depend on the play .",
    "thus , theorem  [ theorem : upper ] follows from sections  [ subsection:41 ] ,  [ subsection:42 ] , and  [ subsection:43 ] .",
    "in this section , we consider lower bounds on memory , _ i.e. _ if we fix a muller condition @xmath2 on a set of colours @xmath13 , the minimal size of the memory set that is enough to define randomised almost - sure strategies for eve on any arena coloured by the set @xmath13 . in his thesis , majumdar showed the following theorem :    [ theorem : globallowerbound ] for any set of colours @xmath13 , there is a 2-player muller game @xmath202 such that eve has an almost sure , but none of her almost - sure strategies have less than @xmath203 memory states .",
    "however , this is a general lower bound on _ all _ muller conditions , while we aim to find specific lower bounds for _ each _ condition .",
    "we prove here that there is a lower bound for each muller condition that matches the upper bound of theorem  [ theorem : upper ] :    [ theorem : lower ] let @xmath2 be a muller condition on @xmath13 .",
    "there is a 2-player arena @xmath204 over @xmath13 such that eve has a sure strategy , but none of her almost - sure strategies have less than @xmath3 memory states .",
    "as the construction of the upper bound was based on the zielonka tree , the lower bound is based on the zielonka _ dag _ :    [ definition : dag ] the zielonka dag @xmath205 of a winning condition @xmath81 is derived from @xmath80 by merging the nodes which share the same label .",
    "the relation between @xmath3 and the shape of @xmath205 is asymmetrical : it depends directly on the number of children of eve s nodes , and not at all on the number of children of adam s nodes .",
    "the notion of _ cropped dag _ is the next logical step : a sub - dag where eve s nodes keep all their children , while each node of adam keeps only one child :    [ definition : croppeddag ] a dag @xmath206 is a cropped dag of a zielonka dag @xmath205 if and only if    * the nodes of @xmath206 are nodes of @xmath205 , with the same owner and label .",
    "* there is only one node without predecessor in @xmath206 , which we call the root of @xmath206 .",
    "it is the root of @xmath205 , if it belongs to eve ; otherwise , it is one of its children . *",
    "the children of a node of eve in @xmath206 are exactly its children in @xmath205 . *",
    "a node of adam has exactly one child in @xmath206 , chosen among his children in @xmath205 , provided there is one .",
    "if it has no children in @xmath205 , it has no children in @xmath206 .",
    "cropped dag resemble zielonka dags : the nodes belong to either eve or adam , and they are labelled by sets of states .",
    "we can thus compute the number @xmath207 of a cropped dag @xmath206 in a natural way .",
    "in fact , this number has a more intuitive meaning in the case of cropped dags : if the leaves belong to eve , it is the number of branches ; if adam owns the leaves , it is the number of branches with the leaf removed . furthermore , there is a direct link between the cropped dags of a zielonka dag @xmath205 and the number @xmath3 :    [ proposition : memfrerf ] let @xmath2 be a muller condition on @xmath13 , and @xmath205 be its zielonka dag . then there is a cropped dag @xmath208 such that @xmath209 .      from any cropped dag @xmath206 of @xmath205",
    ", we define an arena @xmath210 which follows roughly the structure of @xmath206 : the token starts from the root , goes towards the leaves , and then restarts from the root . in her nodes ,",
    "eve can choose to which child she wants to go .",
    "adam s choices , on the other hand , consists in either stopping the current traversal or allowing it to proceed .",
    "we first present two `` macros '' , depending on a subset of @xmath13 :    * in @xmath211 , adam can visit any subset of colours in @xmath212 ; * in @xmath213 , he must visit exactly one colour in @xmath214 .",
    "both are represented in figure  [ figure : pick ] , and they are the only occasions where colours are visited in @xmath210 : all the other states are colourless .",
    "= 1.5 mm    eve s states in the arena @xmath210 are in bijection with her nodes in @xmath206 .",
    "adam s nodes , on the other hand , are in bijection with the pairs parent - child of @xmath206 , where the parent belongs to eve and the child to adam .    in the state corresponding to the node @xmath215",
    ", eve can send the token to any state of the form @xmath216 . in states corresponding to leaves",
    ", eve has no decision to take , and adam can visit any colours in the label of the leaf ( @xmath217 procedure ) .",
    "the token is then sent back to the root .",
    "adam s moves do not involve the choice of a child : by definition  [ definition : croppeddag ] , adam s nodes in @xmath206 have but one child .",
    "instead , he can either stop the current traversal , or , if the current node is not a leaf , allow it to proceed to its only child .",
    "if he chooses to stop , adam has to visit some coloured states before the token is sent back to the root .",
    "the available choices depend on the labels of both the current and the _ former _ nodes  which is why there are as many copies of adam s nodes in @xmath210 as they have parents in @xmath206 .",
    "if the parent is labelled by @xmath218 , and the current node by @xmath183 , the token goes through @xmath219 and @xmath220 .",
    "adam can thus choose any number of colours in @xmath218 , as long as he chooses at least one outside of @xmath183 .",
    "= 2 mm      we first describe a sure strategy @xmath221 for eve in the game @xmath222 .",
    "its memory states are the branches of @xmath206 , and do not change during a traversal .",
    "if the current memory state is @xmath223 , eve s moves follow the branch @xmath114 : in @xmath130 , she goes to @xmath224 .",
    "when adam stops the traversal at the @xmath63th step , eve updates her memory as follows :    * if @xmath130 has zero or one child in @xmath206 , the memory is unchanged ; * otherwise , the new memory branch has @xmath225 as a prefix , where @xmath183 is the next child of @xmath130 , or the first one if @xmath150 was the last .    [",
    "proposition : evewinsare ] the strategy @xmath221 is surely winning for eve in the game @xmath222 .",
    "let @xmath39 be a play consistent with @xmath221 .",
    "we denote by @xmath63 the smallest integer such that traversals stops infinitely often at the @xmath63th step . after a finite prefix , the first @xmath226 nodes in the memory branch are constant , and we denote them by @xmath227 . from this point on",
    ", the colours visited belong to @xmath130 .",
    "furthermore , each time a traversal stops at step @xmath63 , a state is visited outside of the current @xmath150 , which changes afterwards to the next , in a circular way .",
    "it follows that @xmath228 , and , for any child @xmath183 of @xmath130 in @xmath206 , @xmath229 .",
    "thus @xmath39 is winning for eve .",
    "proposition  [ proposition : evewinsare ] follows .    obviously , adam has no winning strategy in @xmath210 .",
    "however , we describe the class of _ branch strategies _ , whose point is to punish any attempt of eve to win with less than @xmath3 memory states .",
    "there is one such strategy @xmath230 for each branch @xmath114 in @xmath206 ( whence the name ) , and",
    "the principle is that @xmath230 stops the traversal as soon as eve deviates from @xmath114 :    the branch strategy @xmath230 for adam in @xmath210 , corresponding to the branch @xmath231 in @xmath206 , is a positional strategy whose moves are described below .    * in a state @xmath232 such that @xmath233 : stop the traversal and visit @xmath150 ; * in a state @xmath232 such that @xmath234 : send the token to @xmath235 ; * in the state @xmath236 , or the leaf @xmath237 : visit the colours of @xmath237 .",
    "no move is given for a state @xmath232 such that @xmath238 , as these states are not reachable from the root when adam plays @xmath230 .",
    "notice also that when adam chooses to stop a traversal in a state @xmath239 , he _ can _ visit exactly the colours of @xmath150 : as @xmath183 and @xmath150 are maximal subsets of @xmath130 , there is at least one state in @xmath240 that he can pick in the @xmath241 area .",
    "the key idea of the proof of theorem  [ theorem : lower ] is that if two branches @xmath114 and @xmath242 of @xmath206 are too different , eve needs different memory states to win against @xmath230 and @xmath243 .",
    "[ proposition : randomare ] let @xmath244 be an almost - sure strategy for eve in @xmath222 .",
    "then @xmath53 has memory at least @xmath245 .",
    "let @xmath223 be a branch of @xmath206 and @xmath230 be the corresponding branch strategy for adam . by definition of @xmath230 ,",
    "the set of colours visited in a traversal consistent with @xmath230 is one of the @xmath150 s , or @xmath237 if and only ifeve plays along @xmath114 .",
    "as @xmath53 is almost - sure , there must be a memory state @xmath246 such that eve has a positive probability to play along @xmath114 .",
    "it is also necessary to ensure that none of the @xmath150 s is visited infinitely often , with the possible exception of @xmath247 .",
    "so , if eve has a positive to play along a branch @xmath242 when she is in the memory state @xmath246 , @xmath248 must be a prefix of @xmath242 .",
    "it follows that a single memory state can be suitable against two strategies @xmath230 and @xmath243 with @xmath223 and @xmath249 only if @xmath250 and @xmath251 . by definition  [ definition : rf ] , the underlying equivalence relation has @xmath245 equivalence classes .",
    "proposition  [ proposition : randomare ] follows .    by proposition  [",
    "proposition : memfrerf ] , there is a cropped dag @xmath206 of @xmath205 such that @xmath252 .",
    "so , in general , eve needs randomised strategies with memory @xmath3 in order to win games whose winning condition is @xmath2 .",
    "this completes the proof of theorem  [ theorem : lower ] .",
    "we have provided better and tight bounds for the memory needed to define almost sure winning randomised strategies .",
    "this allows us to characterise the class of muller conditions which admit randomised memoryless strategies :      this yields a np algorithm for the winner problem of such games , as solving 1@xmath1-player muller games is ptime @xcite .",
    "another consequence of our result is that for each muller condition , at least one of the players can not improve its memory through randomisation :      our proof of lower bound also improves on the size of the witness arena : it is roughly equivalent to the size of the zielonka dag , instead of the size of the zielonka tree .",
    "whether these bounds still hold for arenas of size polynomial in the number of colours remains an open question , except for special cases like streett games @xcite ."
  ],
  "abstract_text": [
    "<S> stochastic games are a natural model for the synthesis of controllers confronted to adversarial and/or random actions . </S>",
    "<S> in particular , @xmath0-regular games of infinite length can represent reactive systems which are not expected to reach a correct state , but rather to handle a continuous stream of events . </S>",
    "<S> one critical resource in such applications is the memory used by the controller . in this paper </S>",
    "<S> , we study the amount of memory that can be saved through the use of randomisation in strategies , and present matching upper and lower bounds for stochastic muller games .    </S>",
    "<S> florian horn </S>"
  ]
}
{
  "article_text": [
    "in 1991 , ant colony optimization ( aco ) was presented firstly by m. drigoa .",
    "colorni11and applied to solve tsp firstly by v. mahiezzo et al.@xcite .",
    "drigo et al .",
    "create a new research topic which is studied by many scholars now .",
    "aco is essentially a system based on agents that simulate the natural behavior of ants , in which real ants are able to find the shortest route from a food source to their nest , without using visual cues by exploiting pheromone information@xcite .",
    "pheromone is deposited when ants walking on a route .",
    "it provides heuristic information for other ants to choose their routes .",
    "the more dense the pheromone trail of a route is , the more possibly the route is selected by ants . at last ,",
    "nearly all ants select the route that has the most dense pheromone trail , and it s the shortest route potentially .    aco has been applied to solve optimization problems widely and successfully , such as tsp@xcite , quadratic assignment problem@xcite , image processing@xcite , data mining@xcite , classification or clustering analysis@xcite , biology@xcite .",
    "the application of aco leads the theoretic study of aco .",
    "gutijahr firstly analyzes the convergence property of aco@xcite .",
    "stutzle & dorigo prove the important conclusion , that if the running time of aco is long enough , aco can find optimal solution possibly@xcite .",
    "the other interesting property is revealed currently by birattari and et al . that the sequence of solutions of some algorithms does not depend on the scale of problem instance@xcite .",
    "running time is too long and the quality of solution is still low , that are the two main problems of aco . to solve the main problems , the configuration of the parameters is discussed@xcite .",
    "the method of adaptation is used to improve aco@xcite .",
    "parallel computation and other method are used to accelerate aco@xcite .",
    "one of study focus of aco is to cut down running time .",
    "the running time of aco is @xmath4 , and @xmath5 $ ] in general , where @xmath6 , @xmath7 and @xmath3 denote the iteration number , number of ants , and number of cities respectively@xcite .",
    "the running time is proportional to @xmath8 .",
    "cutting down the number of cities @xmath3 is the key to reduce running time .",
    "therefore , classifying all cities into different classes and letting aco act on each class will reduce running time heavily .",
    "hu and huang used this method to improve the running speed of aco@xcite , which named aco - k - means .",
    "it s faster than aco by factors of 5 - 15 approximately .",
    "simulations show that aco - k - means algorithm is valid only to the set of cities that has evident clustering feature , and invalid to more general situation .",
    "aco - k - means implies that it is possible that using clustering method to improve the running speed of aco .",
    "clustering is the classification of objects of a set ( named training set ) into different classes ( or groups ) , so that the data in each class ( ideally ) share some common trait .",
    "one of most popular clustering algorithm is k - means clustering algorithm@xcite .",
    "k - means clustering algorithm assigns each point to the cluster whose center ( i.e. , centroid ) is nearest to it , then update the centroid .",
    "repeat this process until termination criterion is satisfied @xcite .    during the @xmath9 iteration of k",
    "- means algorithm , the @xmath10 class has distortion that is defined as the average distance of each point and the class centroid , which is denoted by @xmath11 @xmath12 , where @xmath13 is the number of classes .",
    "pang proves that for each @xmath14 , the distortion sequence @xmath15 is convergent if the @xmath10 class is separated from other classes evidently @xcite .",
    "that is , distortion sequence is convergent locally . according to this property , an algorithm named * local clustering algorithm ( lc ) * is presented@xcite , its essential idea is introduced as below .",
    "k - means is applied to a given training set to generate classes .",
    "the class which distortion @xmath11 is convergent firstly is deleted from training set . then update training set such that it is comprised by residual points .",
    "go to step1 .",
    "stop the process of step1 - 2 until all data is classified .",
    "lc algorithm is faster than k - means algorithm by factors of 4 - 13 approximately .",
    "suppose the @xmath10 class is @xmath16 during the @xmath9 iteration of k - means algorithm .",
    "set @xmath16 has entropy @xmath17 , where @xmath18 and @xmath19 is the probability of data @xmath20 .",
    "it is proved that entropy sequence @xmath21 is convergent @xcite .",
    "that is , the convergent criterion of k - means algorithm can be replaced by the convergence of entropy sequence @xcite .",
    "the k - means with convergent criterion of entropy convergence is fast by two of factors at least @xcite .",
    "for any subset of euclidean space @xmath22 , every sequence in this subset has a convergent subsequence , the limit point of which belongs to the set .",
    "this subset is called * compact set*. the conception of compact set ( or compactness ) is a topology conception . to understand it easily",
    ", compactness can be described visually as the phenomenon that many points cluster tightly in a small region , while non - compact set is the set that most of points clustering loosely in a big region .",
    "k - means clustering , lc or other algorithm aim to partition a training set into classes .",
    "some classes are compact and some are not .",
    "the most common situation is that a class contains a compact subset and some loose points , and the compact subset is around the center of the class .",
    "that is , the central part of class is compact possibly . to extract compact subset from a class , the following @xmath23-principle is introduced .    for gauss distribution",
    ", suppose that @xmath24 denotes the deviation of random data .",
    "it is the @xmath23-principle that it s more than 99% probability that a random point falling into the central region of data set which radius is @xmath23 @xcite .",
    "the central region contains points more than 99% .",
    "thus , if radius @xmath23 is small enough and the number of points is big enough , the central region is compact .",
    "even the central region with radius @xmath23 is not compact , shortening the radius of central region to @xmath25,@xmath26 , and so on will make it compact .",
    "for gauss distribution which is comprised by enough points , the compact central region always exists . in general , for a class generated by clustering algorithm , all distances of points and class centroid comprise a gauss distribution approximatively .",
    "therefore , the central region of a class is compact possibly .",
    "suppose the @xmath10 class is @xmath16 at the @xmath9 iteration of k - means or lc algorithm . with the increase of iteration",
    ",  class sequence @xmath27 @xmath28 appears , where @xmath2 denotes the number of classes .",
    "let@xmath29    , where @xmath30 denotes the number of elements in @xmath16 and @xmath31 denotes distance .",
    "@xmath32    clearly , @xmath11 is the distortion of class @xmath16 and @xmath33 is the approximation of deviation of @xmath11 .",
    "@xmath34    @xmath35 is the central region of class @xmath16 .",
    "parameter @xmath36 is used to shorten the radius of central region @xmath35 and makes it compact .",
    "fig.[fig1 ] illustrates the @xmath23-principle and compact subset @xmath35 .",
    "the local clustering algorithm with @xmath23-principle is used to classify points into classes and to extract compact central region of classes .",
    "its essential idea is described as below .",
    "firstly , apply lc algorithm to cluster data . and apply the criterion of entropy convergence ( i.e.,@xmath38 ) to mark the stable class @xmath16 .",
    "secondly , extract compact central region @xmath35 from class @xmath39 and preserve it as a genuine class .",
    "remove @xmath16 from training set and update it .",
    "repeat above two steps until all compact central regions are extracted .",
    "the detail is described as below .",
    "input parameters :    @xmath40 : training set    @xmath2 : the number of class    @xmath41 : the stop threshold for clustering .",
    "@xmath42 : initial centroids set .",
    "@xmath36 : a parameter to adjust the size of compact subsets @xmath43 .",
    "output :    @xmath44  ( i.e. , the set of compact subset , see fig.[fig1 ] )    @xmath45 , where @xmath46 , and it is comprised by dispersive points ( @xmath47 , see fig.[fig1 ] )    * void subroutine1 ( * @xmath40**,**@xmath2**,**@xmath41**,**@xmath48**,**@xmath36**,**@xmath49**,**@xmath50 * * ) * *    \\ {    step1 .",
    "initialization : let iteration number @xmath51 .",
    "let @xmath52 .",
    "let @xmath53  and @xmath54 , where @xmath55  denotes empty set . according to initial centroids set @xmath48 , generate initial partition of training set @xmath56 .",
    "step2 . while ( @xmath57 )  \\ {    step2.1 .",
    "generate new centroids set @xmath58  and new partition @xmath59    / * note : check whether entropy sequence @xmath21is convergent . if it is convergent , let the convergent marker @xmath60/    step2.2 .",
    "for ( @xmath61 ; @xmath62 ; i++ )  \\ {    estimate the entropy of class @xmath63 , i.e. , @xmath64 .    if ( @xmath65 )  \\ { @xmath66 ; }    else \\{@xmath67 }    }    /*note : extract the data around the centroid of class as a genuine class * /    step2.3 . for ( @xmath61 ; @xmath62 ; i++ )  \\ {    if ( @xmath66 )",
    "\\ {    calculate compact central region @xmath35  according to formula ( [ k23 ] )    calculate @xmath68 : @xmath69    let @xmath70    let @xmath71    update training set : @xmath72    update centroids set : @xmath73    @xmath74    }    }    @xmath75 .    }    }      note that above subroutine 1 is not a partition of training set .",
    "subroutine 1 extracts only compact central regions of all classes and the residual points are unclassified .",
    "the residual points comprise a new training set . and",
    "it s possible that some of residual points cluster together tightly and comprise some small compact subsets again .",
    "these small compact subsets are new classes . to obtain these new classes and classify all points ,",
    "slc algorithm is described as below .",
    "input parameters :    @xmath76 : training set    @xmath77 : the initial number of classes .",
    "@xmath41 : the stop threshold for clustering .",
    "output :    @xmath78 : the final number of classes .",
    "@xmath79 : the partition of @xmath76 , in which each class is compact .",
    "slc algorithm :    step1 .",
    "initialization : let @xmath80 , @xmath81 , @xmath82 , and @xmath83 .",
    "step2 . for ( i=0;@xmath84 $ ] ; i++ )  /*note : @xmath85 $ ]  denotes the integer*/    \\ { step2.1 generate initial centroids set @xmath86 .",
    "step2.2 call subroutine1 ( @xmath40,@xmath2,@xmath87,@xmath48,@xmath36,@xmath49,@xmath88 )    step2.3 @xmath89 ;    step2.4 @xmath90 ;    /*note : increase @xmath36  to get smaller compact class*/    step2.5 @xmath91 $ ] ; @xmath92 ;    }    step3 every residual point @xmath93  in the last set @xmath88  is regarded as a class @xmath94 . and",
    "let @xmath95 .",
    "let @xmath78  denote the number of classes contained in @xmath79 .",
    "the two outputs are @xmath79  and @xmath78 .",
    "the clustering algorithm slc presented above generates spherical classes only .",
    "however , for a general distribution , some classes are spherical shape , some classes are chain shape in which points cluster closely around a curve ( or a line ) , even some classes contain isolated points .",
    "this common distribution is called * mixture distribution*. for a large - scale tsp , the distribution of cities is mixture distribution in general . the clustering method for mixture distribution is proposed as below .",
    "the position of city on a map is two - dimensional point .",
    "a given class can be divided into 8 areas along the 4 directions of the north - south , west - east and two diagonal lines through the centroid of the class . if the class is spherical , the percentage of points in each area is close to 1/8 and is the same approximately .",
    "if the class is chain - shaped class ( or part of chain - shaped class ) , it s impossible that the percentage of every area is close to 1/8 at the same time .",
    "therefore , the percentage of points in each area is the maker of spherical class .",
    "fig.[fig2 ] illustrates the marker .      at first , apply slc to classify all data of training set .",
    "secondly , apply the marker presented above to distinguish spherical classes and extract them from the training set .",
    "then all residual points comprise a new set named residual set .",
    "the residual set contains only chain - shaped classes and isolated points .",
    "third , apply the method presented in ref.@xcite to classify all residual points of residual set into different chain - shaped classes or marked as isolated points .",
    "the method presented in ref.@xcite is named chain - shaped clustering algorithm and is introduced at appendix i.    the clustering  method presented in this section is called * slc - mixture * algorithm , which processes the mixture distribution of spherical classes , chain - shaped classes and isolated points .",
    "suppose aco acts on a compact class and let @xmath96 denotes the minimum route length that is generated at the @xmath9 iteration of computation .",
    "there are sequence @xmath97 and it is convergent under idea condition . the convergent criterion @xmath98 is proposed as the termination criterion of aco in this paper .    in the following discussion , aco refers to the algorithm which termination criterion is @xmath99 .      in this section",
    ", the clustering algorithm slc will be applied to improve the running speed of aco .",
    "the method is named aco - slc and it is described as below .",
    "input parameter :    @xmath40 : set of cities    output :  the shortest tsp route obtained by the algorithm    aco - slc algorithm :    step1 .",
    "apply slc algorithm to partition set @xmath40 .",
    "the classes are @xmath100 , and their centroids are @xmath101respectively .",
    "construct graph @xmath102 : centroids @xmath103  are regarded as virtual cities respectively , and the virtual cities are regarded as the vertices of graph @xmath102 . for a pair of classes",
    "@xmath104  and @xmath105 , if there exists two cities that belong to @xmath104  and @xmath105  respectively and they joint each other , use an edge to joint the two corresponding vertices @xmath106  and @xmath107 .",
    "the weight of edge is the minimum distance between two classes , i.e. ,    @xmath108    step3 .",
    "calculate a tsp route of graph @xmath102  to generate the traveling order of all classes : let aco algorithm act on graph @xmath102  to find a tsp route denoted by @xmath109 , where @xmath110 , is a permutation of sequence @xmath111 .",
    "the pair of classes @xmath112  and @xmath113  is called neighbor class .    step4 .",
    "choose an edge as the bridge to joint a pair of neighbor classes , and this edge is named bridge edge : assume that the two neighbor classes are @xmath114  and @xmath115 .",
    "if there exist an edge such that    @xmath116    , edge @xmath117  is the bridge edge , @xmath118  and @xmath119  are called border cities , where vertices @xmath20  and @xmath120  should be not used to joint other neighbor classes .",
    "calculate a local tsp route for every class @xmath121 : add a new edge to joint the two border cities in the class , and mark the edge as necessary edge of the local tsp route . this edge is named pseudo - edge .",
    "let the aco algorithm with convergence criterion @xmath122  act on the class to generate a local tsp route .",
    "construct a tsp route : walk along the traveling order obtained at step3 , for every pair of neighbor classes , delete the pseudo - edge of each class such that the local route is not close .",
    "then let the local route of each class and the bridge edge between these two classes be jointed .",
    "fig.[fig3 ] illustrates the processing of aco - slc algorithm .",
    "clustering may cause the error of solution although it improves the running speed of aco heavily .",
    "if all classes are compact and separated clearly , the quality of solution of aco - slc should be very good .",
    "however , in fact , the border between two neighbor classes is fuzzy .",
    "the fuzzy border will cause the inaccuracy of solution , and much longer route will appear . and recognizing the longer part and removing it will generate better solution possibly .",
    "it is well known that , the shortest route is always at the surface of a convex hull .",
    "thus , the longer part should be at the inner of a convex hull and two longer edges intersect . in other words ,",
    "intersection of two edges is a marker of longer part of a route possibly .",
    "according to the marker , removing longer edges is call * removing cross - edge * or * removing intersection edges * , which is similar to the method in hai - bin duan14 .",
    "( notice : in ref.@xcite , before execute aco , the long and crossed edges are removed to improve the running speed of aco , not to improve the solution quality . )",
    "fig.[fig4 ] illustrates the method of removing cross - edge .",
    "in addition , a simple method named * little - window strategy * is proposed to improve the running speed of aco in ref.@xcite .",
    "construct a set @xmath123 that is comprised by @xmath124 accessible and short edges which join the @xmath10 city , where @xmath124 is a pre - assigned constant .",
    "the ant which has arrived at @xmath10 city will select an edge from window set @xmath123 only to arrive its next city , and not selection an edge from all neighbor edges of this vertex .",
    "so , this method improve the running speed of aco .",
    "in addition , the parameter configuration of the method is put at appendix ii .",
    "the aco - slc with little - window strategy and cross - edges removing is called * aco - slc - lwcr*.      aco - slc is suitable for the spherical shape distribution only , and the low quality of solution will appear possibly when aco - slc is applied to process mixture distribution . to process mixture distribution ,",
    "the following method named aco - slc - mixture is proposed in this paper .",
    "firstly , apply slc - mixture at section 2.4.2 to partition the set of cities into spherical classes , chain - shaped classes , or isolated points .",
    "secondly , apply aco - slc - lwcr to each class and generate a tsp route .",
    "in this section , five related algorithms aco , aco - k - means , aco - slc , aco - slc - lwcr , aco - slc - mixture are tested and compared . in the following simulation",
    ", aco refers to ant - cycle presented by dorigo , which is very typical @xcite .",
    "all test data in this paper is downloaded from http://www.iwr .",
    "/ comopt / soft /tsplib95/tsplib.html .",
    "all algorithms in this paper run on personal computer .",
    "cpu : 1.80ghz .",
    "memory : 480 m .",
    "software : matlab .",
    "the parameters are listed as below .",
    "initialize pheromone trails @xmath125 , iteration number @xmath126 , @xmath127 , @xmath128 , @xmath129 , @xmath130 , @xmath131 , @xmath132 $ ] .",
    "two performance items are tested .",
    "one item is the running time , which is defined as @xmath133 .",
    "the bigger the ratio is , the faster the algorithm is .",
    "the other item is the quality of solution , which is defined as the percentage of error @xmath134 , where @xmath135 denotes the best solution known currently . the smaller the error is , the better the quality of solution is",
    ".    the performances of the five algorithms are listed in fig.[fig5 ] .",
    "it shows that aco - slc , aco - slc - lwcr and aco - slc - mixture are faster than aco by 41510736 , 39010192 and 257 - 9419 of factors respectively ! however , some solutions of aco - k - means and aco - slc have low quality",
    ". the inaccuracy ratio of aco - slc - mixture is less than aco in most cases , and is bigger than aco by 2% at most .    *",
    "the defect of aco - slc : * the authors have done many simulations under different conditions . and these simulations show the quality of aco - slc solution depends on the quality of clustering and clustering quality of slc is sensitive to the initial centroids just liking k - mean algorithm .",
    "this is main defect of aco - slc .",
    "all cities are two - dimensional ( or three - dimensional ) points and they are visual for general tsp problems . hence , reasonable initial centroids can be selected by researcher s eyes to reduce the sensitivity of initial centroids .",
    "the initial centroids of the simulations of this paper is selected by the authors eyes , and they are put at appendix iii of this paper .",
    "* time complexity of aco : * aco is the algorithm that inspired by the foraging behavior of ant colonies and has be applied to solve many optimization problem .",
    "the typical application of aco is the application at traveling salesman problem ( tsp ) .",
    "the running time of aco is @xmath136 , where @xmath6 , @xmath137 and @xmath3 denotes the iteration number , number of ants , and number of cities respectively .",
    "parameter @xmath2 is a experiential value and is set to @xmath138 $ ] in general .",
    "parameter @xmath3 is the key factor of running time because running time is proportional to its square .",
    "parameter @xmath6 and @xmath3 are available , and decreseaing parameter @xmath6 and @xmath3 will cut down running time .    * focus of aco study : * aco can generate solution with high quality in general .",
    "but its shortage is that running time is too long .",
    "cutting down running time is one of study focuses of aco , and one way is to decrease parameter @xmath6 and @xmath3 , especially @xmath3 .",
    "* basic idea for this study focus : * for this study focus , the following basic idea is presented in this paper .",
    "firstly , all cities are classified into compact classes , where compact class is the class that all cities in this class cluster tightly in a small region .    secondly , let aco act on every class to get a local tsp route .",
    "thirdly , all local tsp routes are jointed to form solution .",
    "fourthly , the inaccuracy of solution caused by clustering is eliminated .",
    "* realization of basic idea : * the realization of above idea is based on a novel clustering algorithm presented in this paper , which is named special local clustering algorithm ( slc ) .",
    "the running time of slc is far less than the time of aco .",
    "slc generates compact classes , while current popular clustering algorithm such as k - means does not generate compact classes in general .",
    "the compactness of class makes the length of tsp route @xmath139 at every iteration convergent , the convergence of @xmath96 ( i.e. , @xmath140 ) is proposed as the termination criterion of aco in this paper .",
    "thus , parameter @xmath6 is cut down to improve the running speed of aco .",
    "in addition , every class has small size , aco acting on small class makes parameter @xmath3 is cut down , and running speed is improved . according to this analysis ,",
    "aco - slc algorithm is presented in this paper .",
    "simulation shows that aco - slc is faster than aco by 41510736 of factors !    * elimination of the solution inaccuracy caused by clustering : * although the running speed is improved in this paper , the inaccuracy of solution is heavy .",
    "two factors causing the inaccuracy are found in this paper .",
    "one is the cross - edges ( see section 3.3 ) , and the other factor is the unmatch between aco - slc and mixture distribution ( see section 3.4 ) . according to these two factors , aco - slc - lwcr and aco - slc - mixture",
    "are presented in this paper , which is the improvement of aco - slc .",
    "simulation shows that aco - slc - lwcr and aco - slc - mixture is faster than aco by 39010192 and 257 - 9419 of factors respectively !",
    "the inaccuracy ratio of aco - slc - mixture is less than aco in most cases , and is bigger than aco by 2% at most .",
    "the authors appreciate the help from prof .",
    "j. zhang , prof .",
    "j. zhou and prof .",
    "qi li . the authors would like to thank group members mr .",
    "wang and ms .",
    "q. yang for their check .",
    "99 m. birattari , p. pellegrini , and m. dorigo , on the invariance of ant colony optimization ,  ieee transactions on evolutionary computation 11 ( 2007 ) 732 - 742 .",
    "b. bullnheimer , r. f. hartl , and c. strauss , new rank based version of the ant system a computational study ,  a computational study technical report , university of viena , institute of management science , pp",
    ". 1 - 16 , 1997 , http://citeseer.ist.psu.edu/166666.html .",
    "c. blum , m. dorigo the hyper - cube framework for ant colony algorithm ,  ieee trans . on smc 34 ( 2004 )",
    "1161 - 1172 .",
    "b. bullnheimer , g. kotsis , and c. steauss parallelization strategies for the ant system ,  high performance and algorithms and software in nonlinear optimization , applied optimization 24 ( 1998 ) 87 - 100 .",
    "y. chen , y. pan , l. chen , j. chen , partitioned optimization algorithms for multiple sequence alignment ,  20th international conference on advanced information networking and applications - volume 2 ( aina06 ) , los alamitos , ca , usa , 2006 , pp .",
    "618 - 622 .",
    "d. chu , m. till , a. zomaya , parallel ant colony optimization for 3d protein structure prediction using the hp lattice model ,  proc 19th ieee international parallel and distributed processing symposium - vol.7 , los alamitos , ca , usa , 2005 , pp . 1 - 7 .",
    "a. colorni , m. dorigo , and v. maniezzo , distributed optimization by ant colonies ,  in proceedings of the 1st european conference on artificial life , paris , france , 1991 , pp .",
    "134 - 142 ,    o. cordon , i. viana , f. herrera , l. moreno , a new aco model integrating evolutionary computation concepts : the best - worst ant system ,  proceedings of the 2nd inernational workshop on ant algorithm / ants2000 , brussels , belgiums , 2000 , pp .",
    "22 - 29 .",
    "m. dorigo , l. m. gambardella , study of ant - q ,  proceedings of 4th international conference on parallel problem from nature , berlin , 1996 , pp .",
    "656 - 665 .",
    "m. dorigo , l. m. gambardella , ant colony system : a cooperative learning approach to the traveling salesman problem ,  ieee trans . on evolutionary computation 1 ( 1997 )",
    "53 - 66    m. dorigo , v. maniezzo , and a. colorni , ant system : optimization by a colony cooperating agents ,  ieee trans . on systems ,",
    "man , and cybernetics part b : cybernetics , 26 ( 1996 ) 29 - 41    hai - bin duan , ant colony algorithms : theory and applications , science publisher , beijin , china , 2005 .",
    "l. m. gambardella , marco dorigo , ant - q : a reinforcement learning approach to the traveling salesman problem ,  proceedings of ml-95 , twelfth intern . conf . on machine learning , morgan kaufmann , 1995 , pp .",
    "252 - 260 .",
    "gambardella , m. dorigo , solving symmetric and asymmetric tsps by ant colonies , ieee conference on evolutionary computation ( icec96 ) , nagoya , japan , 1996 , pp .",
    "622 - 627 .",
    "w. j. gutijahr , a generalized convergence result for the graph based ant system.technical report 99 - 09 , dpet . of statistics and decision support systems ,",
    "of vienna , austria , 1999 .",
    "w. j. gutijahr , a graph - based ant system and its convergence ,  future generation computer systems 16 ( 2000 ) 873 - 888 .",
    "n. holden , a. freitas , hierarchical classification of g - protein - coupled receptors with a pso / aco algorithm ,  proc .",
    "of the 2006 ieee swarm intelligence symposium , indianapolis , indiana , usa , 2006 , pp.77 - 84 , http://www.cs.kent.ac.uk/people/staff/aaf/pub_papers.dir/ieee-sis-2006-holden.pdf .",
    "xiao bing hu and xi yue huang , solving tsp with characteristic of clustering by ant colony algorithm ,  journal of system simulation 16 ( 2004 ) 55 - 58 .",
    "huang xiaobin , wang jianwei and zhang yan , adaptive k near neighbor clustering algorithm for data with non - spherical - shape distribution ,  computer engineering 29 ( 2003 ) 21 - 22 .",
    "x. li , x.- h. luo , and j.- h. zhang .",
    "codebook design by a hybridization of ant colony with improved lbg algorithm ,  ieee int .",
    "neural networks and signal processing , nanjing , china , 2003 , pp.469 - 472 .",
    "li xia luo xuehui zhang jihong .",
    "modeling of vector quantization image coding in an ant colony system ,  chinese of journal electronics 13 ( 2004 ) 305 - 307 .",
    "y. linde , a. buzo , and r. m. gray , an algorithm for vector quantization design ,  ieee trans on.commum com-28 ( 1980 ) 84 - 95 .",
    "v. maniezzo , v. colorni , a. , the ant system applied to the quadratic assignment problem ,  ieee transactions on knowledge and data engineering 11 ( 1999 ) 769 - 778 .",
    "v. maniezzo , exact and approximate nondeterministic tree - search procedures for the quadratic assignment problem ,  informs journal on computing 11 ( 1999 ) 358 - 369 , http://www.amitkoth.com/weblog/dissertation/documents/maniezzo98exact.pdf .",
    "d. martens , m. backer , r. haesen , j. vanthienen , m. snoeck , and b. baesens , classification with ant colony optimization ,  ieee transactions on evolutionary computation 11 ( 2000 ) 651 - 665 .",
    "p. meksangsouy , n. chaiyaratana , dna fragment assembly using an ant colony system algorithm ,  proceedings of the 2003 congress on evolutionary computation , canberra , australia , 2003 , pp .",
    "1756 - 1763 .",
    "d. merkle , m. middendorf fast ant colony optimization on runtime reconfigurable processor arrays ,  genetic programming and evolvable machine 3 ( 2002 ) 345 - 361    p. merz , b. freisleben , fitness landscape analysis and memetic algorithms for the quadratic assignment problem ,  ieee transactions on evolutionary computation 4 ( 2000 ) 337 - 352 .",
    "s. meshoul , m. batouche , ant colony system with extremal dynamics for point matching and pose estimation ,  proceeding of the 16th international conference on pattern recognition , quebec , 2002 , pp .",
    "823 - 826 .",
    "j. moss and g. johnson , an ant colony algorithm for multiple sequence alignment in bioinformatics ,  artificial neural networks and genetic algorithms , springer , april 2003 , pages 182 - 186 , http://www.cs.kent.ac.uk/pubs/2003/1707/content.pdf .",
    "chao - yang pang , vector quantization and image compression ,  doctoral thesis , university of electronic science and technology of china , chengdu , china , jun 2002 .",
    "pang chaoyang , sun shixin , pan ye , and gong haiying , a fast codebook training algorithm using local clustering ,  journal of electronics and information technology 9 ( 2002 ) 1282 - 1286    pang chao - yang and sun shi - xin , codebook trainning algorithm by the convergence of entropy sequence tor vector quantization ,  systems engineering and electronics 24 ( 2002 ) 83 - 85 .",
    "rafael s. parpinelli , heitor s. lopes , data mining with an ant colony optimization algorithm , ieee transactions on evolutionary computation 6 ( 2002 ) 321 - 332 .",
    "d. piriyakumar , p. levi a new approach to exploiting parallelism in ant colony algorithm ,  in : international symposium on micromechatronics and human science ( mhs ) , nagoya , japan , 2002 , pp .",
    "237 - 243 .",
    "m. randall , a. lewis a parallel implementation of ant colony algorithm ,  parallel and distributed computing 62 ( 2002 ) 1421 - 1432 .",
    "a. shmygelska and h. hoos , an ant colony optimisation algorithm for the 2d and 3d hydrophobic polar protein folding problem , bmc bioinformatics  6 ( 2005 ) 30- , http://www.biomedcentral.com/1471-2105/6/30 .",
    "t. stutzle , m dorigo , aco algorithms for the quadratic assignment problem ,  new ideas in optimization , mcgraw - hill inc . , us , 1999 .",
    "http://neo.lcc.uma.es/eawebsite/skeleton/ant/bc.05-studor-nio99.pdf.gz .",
    "t. stutzle , m dorigo , a short convergence proof for a class of ant colony optimization algorithms ,  ieee trans . on evolutionary computation 6 ( 2002 )",
    "358 - 365 .",
    "t. stutzle , h. hoos , max - min ant system ,  future generation computer systems 16 ( 2000 ) 889914 . http://www.cs.ubc.ca/spider/hoos/publ/fgcs00.ps.gz .",
    "e. talbi , o. roux , c. fonlupt , d. robilard parallel ant colonies for the quadratic assignment problem ,  future generation computer systems 17 ( 2001 ) 441 - 449 .",
    "xiao yunshi , li bingyu , ant colony algorithm based on little window ,  computer engineering 29 ( 2003 ) 143 - 145 .",
    "h. zheng , a. wong , s. nahavandi , hybrid ant colony algorithm for texture classification , proceeding of 2003 congress on evolutionary computation - vol.4 , washington , dc , usa , 2003 , pp .",
    "2648 - 2652 .",
    "* appendix i : * chain - shaped clustering algorithm of ref.@xcite        step2 .",
    "select the points that are close to the seed into the first class as many as possible until the trace of the first set is bigger than the pre - assigned threshold ( notice : the set of random data has covariance matrix .",
    "the trace of covariance matrix is proportion to the size of region containing these random data .",
    "the smaller the trace is , the smaller the size is .",
    "thus , if the trace is less than a pre - assigned threshold , the class is still small and compact .",
    "the threshold is 0.0005 in this paper ) .    repeating the two steps",
    ", the first class , second class , 3rd class , and so on , will be obtained until all points are classified .",
    "finally , merge all neighbor classes as a new big class .",
    "e.g. , if class a is close to b and b close to c  the three classes a , b and c are neighbors and are merged as a big chain - shaped class .      the configuration of parameter @xmath124 in little - window strategy : let @xmath141 denotes the number of neighbor cities , if @xmath142 , let w = min(@xmath141 - 1 , 8) ; else if @xmath143 , let w = min(@xmath141 - 1 , 9 ) ; else if @xmath144 , let w = min(@xmath141 - 1,13 ) ; else if @xmath145 , let w = min(@xmath141 - 1 , 19 ) ; else @xmath146 , let w = min(@xmath141 - 1,100 ) ; else let @xmath147 $ ] ;"
  ],
  "abstract_text": [
    "<S> ant colony optimization ( aco ) has time complexity @xmath0 , and its typical application is to solve traveling salesman problem ( tsp ) , where @xmath1 , @xmath2 , and @xmath3 denotes the iteration number , number of ants , number of cities respectively . </S>",
    "<S> cutting down running time is one of study focuses , and one way is to decrease parameter @xmath1 and @xmath3 , especially @xmath3 . for this focus , </S>",
    "<S> the following method is presented in this paper . </S>",
    "<S> firstly , design a novel clustering algorithm named special local clustering algorithm ( slc ) , then apply it to classify all cities into compact classes , where compact class is the class that all cities in this class cluster tightly in a small region . </S>",
    "<S> secondly , let aco act on every class to get a local tsp route . </S>",
    "<S> thirdly , all local tsp routes are jointed to form solution . </S>",
    "<S> fourthly , the inaccuracy of solution caused by clustering is eliminated . </S>",
    "<S> simulation shows that the presented method improves the running speed of aco by 200 factors at least . and this high speed is benefit from two factors . </S>",
    "<S> one is that class has small size and parameter @xmath3 is cut down . </S>",
    "<S> the route length at every iteration step is convergent when aco acts on compact class . </S>",
    "<S> the other factor is that , using the convergence of route length as termination criterion of aco and parameter @xmath1 is cut down </S>"
  ]
}
{
  "article_text": [
    "restricted boltzmann machines ( rbm )  @xcite have become a model of choice for learning unsupervised features for use in deep feed - forward architectures @xcite as well as for modeling complex , high - dimensional distributions @xcite .",
    "their success can be explained in part through the bi - partite structure of their graphical model .",
    "units are grouped into a visible layer @xmath0 and a hidden layer @xmath1 , prohibiting connections within the same layer .",
    "the use of latent variables affords rbms a rich modeling capacity , while the conditional independence property yields a trivial inference procedure .    rbms",
    "are parametrized by an energy function @xmath2 which is converted to probability through the boltzmann distribution , after marginalizing out the hidden units .",
    "the probability of a given configuration @xmath3 is thus given by @xmath4 , where @xmath5 is the partition function defined as @xmath6 .    despite their popularity ,",
    "direct learning of these models through maximum likelihood remains problematic .",
    "the maximum likelihood gradient with respect to the parameters @xmath7 of the model is : @xmath8    the first term is trivial to calculate and is referred to as the * positive phase * , as it raises the probability of training data . the second term or * negative phase * is intractable in most applications of interest , as it involves an expectation over @xmath9 .",
    "many learning algorithms have been proposed in the literature to address this issue :    * contrastive divergence ( cd )  @xcite replaces the expectation with a finite set of negative samples , which are obtained by running a short markov chain initialized at positive training examples .",
    "this yields a biased , but low - variance gradient which has been shown to work well as a feature extractor for deep networks such as the deep belief network  @xcite . * stochastic maximum likelihood ( sml ) or persistent contrastive divergence ( pcd ) @xcite on the other hand , relies on a persistent markov chain to sample the negative particles .",
    "the chain is run for a small number of steps between consecutive model updates , with the assumption that the markov chain will stay close to its equilibrium distribution as the parameters evolve .",
    "learning actually encourages this process , in what is called the `` fast - weight effect '' @xcite .",
    "* ratio matching and score matching  @xcite avoid the issue of the partition function altogether by replacing maximum likelihood by another learning principle , based on matching the change in likelihood to that implied by the empirical distribution .",
    "@xcite recently compared these algorithms on a variety of tasks and found sml to be the most attractive method when taking computational complexity into account .",
    "unfortunately , these results fail to address the main shortcomings of sml .",
    "first , it relies on gibbs sampling to extract negative samples : a poor choice when sampling from multi - modal distributions .",
    "second , to guarantee convergence , the learning rate must be annealed throughout learning in order to offset the loss of ergodicity incurred by the markov chain due to parameter updates @xcite .",
    "using tempering in the negative phase of sml  @xcite appears to address these issues to some extent . by performing a random walk in the joint ( configuration , temperature ) space",
    ", negative particles can escape regions of high probability and travel between disconnected modes .",
    "also , since high temperature chains are inherently more ergodic , the sampler as a whole exhibits better mixing and results in better convergence properties than traditional sml .",
    "tempering is still no panacea however .",
    "great care must be taken to select the set of temperatures @xmath10 , m \\in \\mathbb{n}\\}$ ] over which to run the simulation .",
    "having too few or incorrectly spaced chains can result in high rejection ratios ( tempered transition ) , low return rates ( simulated tempering ) or low swap rates between neighboring chains ( parallel tempering ) , which all undermine the usefulness of the method . in this work ,",
    "we show that the choice of @xmath11 can be automated for parallel tempering , both in terms of optimal temperature spacing , as well as the number of chains to simulate .",
    "our algorithm relies heavily on the work of @xcite , who were the first to show that optimal temperature spacing can be obtained by minimizing the average * return time * of particles under simulation .",
    "the paper is organized as follows .",
    "we start with a brief review of sml , then explore the details behind sml with parallel tempering ( sml - pt ) as described in @xcite . following this ,",
    "we show how the algorithm of katzgraber et al .",
    "can be adapted to the online gradient setting for use with sml - pt and show how chains can be created dynamically , so as to maintain a given level of ergodicity throughout training .",
    "we then proceed to show various results on a complex synthetic dataset .",
    "we start with a very brief review of sml , which will serve mostly to anchor our notation . for details on the actual algorithm",
    ", we refer the interested reader to @xcite .",
    "rbms are parametrized by @xmath12 , where @xmath13 is the @xmath14-th hidden bias , @xmath15 the @xmath16-th visible bias and @xmath17 is the weight connecting units @xmath18 to @xmath19 .",
    "they belong to the family of log - linear models whose energy function is given by @xmath20 , where @xmath21 are functions associated with each parameter @xmath22 . in the case of rbms , @xmath23 and @xmath24 . for this family of model",
    ", the gradient of equation  [ eq : maxll ] simplifies to : @xmath25 - { \\mathbb{e}}_{p({\\mathbf{v}},{\\mathbf{h}})}[\\phi({\\mathbf{v}},{\\mathbf{h}})].\\end{aligned}\\ ] ]    as was mentioned previously , sml approximates the gradient by drawing negative phase samples ( i.e. to estimate the second expectation ) from a persistent markov chain , which attempts to track changes in the model .",
    "if we denote the state of this chain at timestep @xmath26 as @xmath27 and the i - th training example as @xmath28 , then the stochastic gradient update follows @xmath29 , where @xmath30 $ ] , and @xmath31 is obtained after @xmath32 steps of alternating gibbs starting from state @xmath27 and @xmath33 $ ] .",
    "training an rbm using sml - pt maintains the positive phase as is . during the negative phase",
    "however , we create and sample from an an extended set of @xmath34 persistent chains , @xmath35 , \\beta_i \\ge \\beta_j \\iff i < j\\}$ ] . here",
    "each @xmath36 represents a smoothed version of the distribution we wish to sample from , with the inverse temperature @xmath37 $ ] controlling the degree of smoothing .",
    "distributions with small @xmath38 values are easier to sample from as they exhibit greater ergodicity .    after performing @xmath32 gibbs steps for each of the @xmath34 intermediate distributions",
    ", cross - temperature state swaps are proposed between neighboring chains using a metropolis - hastings - based swap acceptance criterion .",
    "if we denote by @xmath39 the joint state ( visible and hidden ) of the @xmath14-th chain , the swap acceptance ratio @xmath40 for swapping chains ( @xmath14,@xmath41 ) is given by : @xmath42    although one might reduce variance by using free - energies to compute swap ratios , we prefer using energies as the above factorizes nicely into the following expression : @xmath43    while many swapping schedules are possible , we use the deterministic even odd algorithm ( deo ) @xcite , described below .      conventional wisdom for choosing",
    "the optimal set @xmath11 has relied on the `` flat histogram '' method which selects the parameters @xmath44 such that the pair - wise swap ratio @xmath40 is constant and independent of the index @xmath14 . under certain conditions ( such as when sampling from multi - variate gaussian distributions ) , this can lead to a geometric spacing of the temperature parameters @xcite .",
    "@xcite has recently shown that geometric spacing is actually optimal for a wider family of distributions characterized by @xmath45 , where @xmath46 denotes the expectation over inverse temperature and @xmath47 are arbitrary constants .",
    "since this is clearly not the case for rbms , we turn to the work of @xcite who propose a novel measure for optimizing @xmath11 .",
    "their algorithm directly maximizes the ergodicity of the sampler by minimizing the time taken for a particle to perform a round - trip between @xmath48 and @xmath49 .",
    "this is defined as the average `` return time '' @xmath50 .",
    "the benefit of their method is striking : temperatures automatically pool around phase transitions , causing spikes in local exchange rates and maximizing the `` flow '' of particles in temperature space .",
    "the algorithm works as follows . for @xmath51 sampling",
    "updates :    * assign a label to each particle : those swapped into @xmath48 are labeled as `` up '' particles .",
    "similarly , any `` up '' particle swapped into @xmath49 becomes a `` down '' particle . * after each swap proposal , update the histograms @xmath52 , counting the number of `` up '' and `` down '' particles for the markov chain associated with @xmath44 . *",
    "define @xmath53 , the fraction of `` up''-moving particles at @xmath44 . by construction ,",
    "notice that @xmath54 and @xmath55 .",
    "@xmath56 thus defines a probability distribution of `` up '' particles in the range @xmath57 $ ] . * the new inverse temperature parameters @xmath58",
    "are chosen as the ordered set which assigns equal probability mass to each chain .",
    "this yields an @xmath56 curve which is linear in the chain index .",
    "the above procedure is applied iteratively , each time increasing @xmath51 so as to fine - tune the @xmath44 s . to monitor return time",
    ", we can simply maintain a counter @xmath59 for each particle @xmath39 , which is ( 1 ) incremented at every sampling iteration and ( 2 ) reset to 0 whenever @xmath39 has label `` down '' and is swapped into @xmath48 .",
    "a lower - bound for return time is then given by @xmath60 .",
    "while the above algorithm exhibits the right properties , it is not very well suited to the context of learning . when training an rbm , the distribution we are sampling from is continuously changing . as such",
    ", one would expect the optimal set @xmath11 to evolve over time .",
    "we also do not have the luxury of performing @xmath51 sampling steps after each gradient update .",
    "our solution is simple : the histograms @xmath61 and @xmath62 are updated using an exponential moving average , whose time constant is in the order of the return time @xmath63 . using @xmath63 as the time constant is crucial as it allows us to maintain flow statistics at the proper timescale .",
    "if an `` up '' particle reaches the @xmath14-th chain , we update @xmath64 as follows : @xmath65 where @xmath66 is the estimated return time at time @xmath26 .    using the above",
    ", we can estimate the set of optimal inverse temperatures @xmath67 .",
    "beta values are updated by performing a step in the direction of the optimal value : @xmath68 , where @xmath69 is a learning rate on @xmath38 .",
    "the properties of @xcite naturally enforce the ordering constraint on the @xmath44 s .",
    "another important point is that @xcite optimizes the set @xmath11 while keeping the bounds @xmath48 and @xmath49 fixed . while @xmath70 is a natural choice , we expect the optimal @xmath49 to vary during learning . for this reason",
    ", we err on the side of caution and use @xmath71 , relying on a * chain spawning process * to maintain sufficiently high swap rates between neighboring parallel chains .",
    "spawning chains as required by the sampler should therefore result in increased stability , as well as computational savings .",
    "@xcite performed an interesting study where they compared the round trip rate @xmath72 to the average swap rate measured across all chains .",
    "they found that the deo algorithm , which alternates between proposing swaps between chains @xmath73 followed by @xmath74 ) , gave rise to a concave function with a broad maximum around an average swap rate of @xmath75    our temperature adaptation therefore works in two phases :    1 .",
    "the algorithm of katzgraber et .",
    "al is used to optimize @xmath76 , for a fixed m. 2 .",
    "periodically , a chain is spawned whenever @xmath77 , a hyper - parameter of the algorithm .",
    "empirically , we have observed increased stability when the index @xmath16 of the new chain is selected such that @xmath78 , @xmath79 $ ] . to avoid a long burn - in period , we initialize the new chain with the state of the @xmath80-th chain and choose its inverse temperature as the mean @xmath81 . a small but fixed burn - in period",
    "allows the system to adapt to the new configuration .",
    "we evaluate our adaptive sml - pt algorithm ( sml - apt ) on a complex , synthetic dataset .",
    "this dataset is heavily inspired from the one used in @xcite and was specifically crafted to push the limits of the algorithm .",
    "it is an online dataset of @xmath82x@xmath82 binary images , where each example is sampled from a mixture model with probability density function @xmath83 .",
    "our dataset thus consists of @xmath84 mixture components whose weights @xmath85 are sampled uniformly in the unit interval and normalized to one .",
    "each mixture component @xmath86 is itself a random @xmath82x@xmath82 binary image , whose pixels are independent random variables having a probability @xmath87 of being flipped . from the point of view of a sampler performing a random walk in image space , @xmath87 is inversely proportional to the difficulty of finding the mode in question .",
    "the complexity of our synthetic dataset comes from our particular choice of @xmath85 and @xmath87.$ ] and @xmath88 $ ] ] large @xmath85 and small @xmath87 lead to modes which are difficult to sample and in which a gibbs sampler would tend to get trapped .",
    "large @xmath87 values on the other hand will tend to intercept `` down '' moving particles and thus present a challenge for parallel tempering .",
    "figure  [ fig : fig11 ] compares the results of training a @xmath89 hidden unit rbm , using standard sml , sml - pt with @xmath90 parallel chains and our new sml - apt algorithm .",
    "we performed @xmath91 updates ( followed by @xmath92 steps of sampling ) with mini - batches of size 5 and tested learning rates in @xmath93 , @xmath38 learning rates in @xmath94 . for each algorithm",
    ", we show the results for the best performing hyper - parameters , averaging over @xmath84 different runs .",
    "results are plotted with respect to computation time to show the relative computational cost of each algorithm .",
    "as we can see , standard sml fails to learn anything meaningful : the gibbs sampler is unable to cope with the loss in ergodicity and the model diverges .",
    "sml - pt on the other hand performs much better . using more parallel chains in sml - pt",
    "consistently yields a better likelihood score , as well as reduced variance .",
    "this seems to confirm that using more parallel chains in sml - pt increases the ergodicity of the sampler .",
    "finally , sml - apt outperforms all other methods .",
    "as we will see in figure  [ fig : fup ] , it does so using only @xmath95 parallel chains . unfortunately , the computational cost seems similar to 50 parallel chains .",
    "we hope this can be reduced to the same cost as sml - pt with @xmath95 chains in the near future . also interesting to note ,",
    "while the variance of all methods increase with training time , sml - apt seems immune to this issue .",
    "we now compare the various metrics being optimized by our adaptive algorithm .",
    "figure  [ fig : rtime ] shows the average return time for each of the algorithms .",
    "we can see that sml - apt achieves a return time which is comparable to sml - pt with 10 chains , while achieving a better likelihood score than sml - pt 50 .",
    "we now select the best performing seeds for sml - pt with 50 chains and sml - apt , and show in figure [ fig : fup ] , the resulting @xmath96 curves obtained at the end of training .    the blue curve plots @xmath56 as a function of beta index , while the red curves plots @xmath56 as a function of @xmath38 .",
    "we can see that sml - apt results in a more or less linear curve for @xmath96 , which is not the case for sml - pt . in figure",
    "[ fig : swapstat1 ] we can see the effect on the pair - wise swap statistics @xmath40 . as reported in @xcite , optimizing @xmath11 to maintain a linear @xmath56 leads to temperatures pooling around the bottleneck . in comparison , sml - pt fails to capture this phenomenon regardless of whether it uses @xmath95 or @xmath97 parallel chains ( figures  [ fig : swapstat2]-[fig : swapstat3 ] ) .",
    "finally , figure  [ fig : betas ] shows the evolution of the inverse temperature parameters throughout learning .",
    "we can see that the position of the bottleneck in temperature space changes with learning . as such , a manual tuning of temperatures would be hopeless in achieving optimal return times .",
    "\\}$ ] , of inverse temperature parameters used by sml - apt during learning .",
    "temperatures pool around a bottleneck to minimize return time , while new chains are spawned to maintain a given average swap rate .",
    "note that the last @xmath95k updates actually correspond to a pure sampling phase ( i.e. a learning rate of 0 ) .",
    "[ fig : betas ] ]",
    "we have introduced a new adaptive training algorithm for rbms , which we call stochastic maximum likelihood with adaptive parallel tempering ( sml - apt ) .",
    "it leverages the benefits of pt in the negative phase of sml , but adapts and spawns new temperatures so as to minimize return time .",
    "the resulting negative phase sampler thus exhibits greater ergodicity . using a synthetic dataset ,",
    "we have shown that this can directly translate to a better and more stable likelihood score . in the process",
    ", sml - apt also greatly reduces the number of hyper - parameters to tune : temperature set selection is not only automated , but optimal .",
    "the end - user is left with very few dials : a standard learning rate on @xmath44 and a minimum average swap rate @xmath98 below which to spawn .",
    "much work still remains . in terms of computational cost",
    ", we would like a model trained with sml - apt and resulting in @xmath34 chains , to always be upper - bounded by sml - pt initialized with @xmath34 chains .",
    "obviously , the above experiments should also be repeated with larger rbms on natural datasets , such as mnist or caltech silhouettes ..",
    "the authors acknowledge the support of the following agencies for research funding and computing support : nserc , compute canada and cifar .",
    "we would also like to thank the developers of theano , for developing such a powerful tool for scientific computing , especially gradient - based learning ."
  ],
  "abstract_text": [
    "<S> restricted boltzmann machines ( rbm ) have attracted a lot of attention of late , as one the principle building blocks of deep networks . </S>",
    "<S> training rbms remains problematic however , because of the intractibility of their partition function . </S>",
    "<S> the maximum likelihood gradient requires a very robust sampler which can accurately sample from the model despite the loss of ergodicity often incurred during learning . </S>",
    "<S> while using parallel tempering in the negative phase of stochastic maximum likelihood ( sml - pt ) helps address the issue , it imposes a trade - off between computational complexity and high ergodicity , and requires careful hand - tuning of the temperatures . in this paper </S>",
    "<S> , we show that this trade - off is unnecessary . </S>",
    "<S> the choice of optimal temperatures can be automated by minimizing average return time ( a concept first proposed by @xcite ) while chains can be spawned dynamically , as needed , thus minimizing the computational overhead . </S>",
    "<S> we show on a synthetic dataset , that this results in better likelihood scores . </S>"
  ]
}
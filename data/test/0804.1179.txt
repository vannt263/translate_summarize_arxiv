{
  "article_text": [
    "one of the simplest and most common ways to categorize an entity as living or non - living is to stipulate that if we were to decompose that entity into its constituent parts and could then reconstruct the whole by assembling the parts , it is non - living ; otherwise , it is living .",
    "that is , a living thing is more than just the collection of its parts , but a non - living thing is not .",
    "then how is the gap between living and non - living things expressed ?",
    "r. rosen  @xcite claims that a central feature of living things is _ complexity _ , where a system is said to be _ complex _ if its behavior can not be captured by models of that system ; otherwise , that system is said to be _",
    "simple_. ( that is , the complexity of a system depends primarily on the models of the system , and only secondarily on the system per se . ) in rosen s description , use of the term _ complex _ in reference to a system is equivalent to use of the term _ incomputable _ or _ notwell - formed _ in reference to its models .    in his model of living things",
    ", rosen considers a logical paradox ( such as russell s paradox  @xcite ) as a _ metabolism - repairsystem _ ( _ mrsystem _ )  @xcite .",
    "an mr system consists of two sets ( a set @xmath6 of _ rawmaterials _ and a set @xmath7 of _ behaviors _ ) and three functions ( a _ metabolicfunction_@xmath8@xmath9 , a _",
    "repairfunction_@xmath10@xmath11 , and a _ replicationfunction_@xmath12@xmath13 ) , where @xmath14 and @xmath15 are onto functions and @xmath16 .",
    "( for sets @xmath17 denotes the set of all morphisms from @xmath18 to @xmath19  @xcite . )",
    "one remarkable feature of rosen s model is the following :    1 .",
    "there do not exist such onto functions @xmath20 and @xmath21 .",
    "if they are assumed to exist , we obtain a contradiction .    one way to treat such a contradiction is to invoke hyperset theory  @xcite .",
    "a _ hyperset _ is defined as a graphable set  in particular , one that can be represented by a hyperset diagram , which is a digraph ( directed graph ) with the property that every node is either a set contained in the hyperset or an element of such a set , and every edge is directed from some set  @xmath22 contained in the hyperset to one of the elements of  @xmath22  @xcite .",
    "thus edge @xmath23 expresses the relationship @xmath24 , i.e. , @xmath25 is an element of  @xmath26 .",
    "for example , the hyperset diagram of @xmath27 is shown in fig .",
    "[ fighyperset1_p5 ] .",
    "there are two directed edges : @xmath28 and @xmath29 .",
    "a relationship of the form @xmath28 leads to the well - known contradiction known as russell s paradox  @xcite ; however , such a relationship is interpreted as just a loop structure in hyperset theory .    , width=132,height=43 ]    property ( i ) can be expressed in hyperset theory by its way .",
    "let us represent @xmath30 by the set @xmath31 ; thus @xmath32 and @xmath33 are represented by the sets @xmath34 and @xmath35 respectively .",
    "then we obtain the hyperset diagram of mr as shown in fig .",
    "[ fighyperset2_p5 ]  @xcite .",
    "accordingly , a system can be said to be complex if it can not be well - formed in standard set theory but it can be well - formed in hyperset theory .",
    "matsuno and gunji , in their theory of internal measurement  ( i m )  @xcite , propose a different way , called a _",
    "perpetualequilibratingmechanism_. they address property ( i ) as follows :    1 .",
    "any solution to a problem ( paradox ) is inevitably a pseudo - solution , and the pseudo - solution at any given time step `` always '' triggers a problem that that is to be solved at the next time step .",
    "this leads to an evolutionary process that goes on forever and thereby allows for emergent properties .",
    "therefore , the paradox is treated as the force that drives the time evolution of the system .    in i",
    "m , the gap between the whole and the aggregation of the parts drives the time evolution of the dynamical system .",
    "therefore , i m can be understood as a proposal of a dynamical system which is based on the idea of a perpetual loop between two different logical layers , such as the parts and the whole , with a decomposition @xmath36 of the whole into the parts , and an integration @xmath37 ( as a pseudo - solution ) of the parts into the whole .",
    "thus we may express an i m model in terms of a triad : the two different logical layers and a mediator / interface to adjust the two layers in an _ inconsistent _ manner  @xcite .",
    "i m claims that the relationship between the two layers ( or the relationship between @xmath36 and @xmath37 ) is not consistently determined , and for this reason they are perpetually changing relative to each another , where the term inconsistent means that we obtain a logical paradox if we assume consistency between them .",
    "any finite boolean network ( bn ) has a fixed transition matrix , hence a finite bn ultimately reaches an attractor and stays there ( i.e. , the computation ends ) . in section  [ secvbn_p5 ]",
    ", we define a virtual boolean network ( vbn ) as a bn in which the set of incoming nodes for every node is the entire set of nodes of the bn , and we show that every finite bn can be treated as a vbn . in section  [ secexpansions_p5 ] , we introduce a labeling function to label the states of a vbn , and we discuss the probabilistic boolean network ( pbn ) and the hidden markov model ( hmm ) as extensions of a vbn .",
    "the purpose of an hmm is to find an optimal solution ; in the case of a living thing , however , it is not always possible to find such a solution .",
    "thus , in section  [ secdbn_p5 ] , we abandon the attempt to find an optimal solution , and we introduce a dynamical boolean network ( dbn ) , which is a vbn whose set of nodes is fixed but whose transition matrix can change from one time step to another .",
    "thus even a finite dbn does not necessarily have any attractors . in our dbn ,",
    "a labeling function plays a role in maintaining a perpetual loop between the of the vbn at different time steps .    in section  [ secdbn_p5 ] , we present a construction of a dbn  a construction that incorporates stochasticity in a number of respects . in section [ secsimulation_p5 ]",
    ", we present the results of a number of simulations of a dbn with two nodes .",
    "the purpose of each simulation was to investigate the set of rule vectors actually visited by the dbn , which is equivalent to the set of transition matrices actually visited by the dbn . in subsection",
    "[ subsectype1_p5 ] , we present the results of a simulation of a dbn based on the construction in section  [ secdbn_p5 ] , which we call a type  1 simulation .",
    "the simulations presented in the remaining three subsections of section  [ secsimulation_p5 ] use dbn constructions which are similar to the one in section  [ secdbn_p5 ] , the only difference being that , for @xmath38 , we chose the transition matrix @xmath0 of the dbn for time step  @xmath1 to be @xmath39 , where @xmath3 is the transition matrix in our original construction and @xmath40 is the matrix representation of some permutation @xmath41 of the states of the dbn .",
    "those three simulations correspond to three different classes of permutations . in our type  2",
    "simulation , @xmath41 was randomly chosen from the set of permutations that consist of either the identity or a single 2-cycle or the product of two disjoint 2-cycles . in our type  3",
    "simulation , @xmath41 was randomly chosen from the set of all 24 permutations of the four states of a dbn with two nodes .",
    "in our type  4 simulation , @xmath41 was constructed from a labeling function .",
    "there are 81 rule vectors ( out of a total of 256 possible rule vectors for a dbn with two nodes ) that were not visited at all after the fifth time step of any trial in the type  1 and type  2 simulations .",
    "however , all 256 rule vectors were visited in every trial of the type  3 simulation , as well as in slightly more than half of the trials of the type  4 simulation . indeed , six of the 81 aforementioned rule vectors were the ones visited most frequently of all in the type  4 simulation .",
    "a total of six single - node transition rules are associated with those six rule vectors ( each rule vector corresponds to an ordered pair of single - node rule vectors ) .",
    "three of those six single - node transition rules are transition rules of a linear vbn ( lvbn ) ; the other three are the negations of the first three .",
    "thus our conclusion is that the type  4 simulation presents new insight into linearity of a vbn .",
    "a boolean network ( bn )  @xcite is a digraph in which each vertex has an internal state and a transition rule .",
    "the vertices of a bn are hereinafter referred to as nodes .",
    "each internal state has a value of either 0 or 1 at any given time .",
    "the transition rule for a given node specifies the next state of that node as a function of the current internal states of its incoming ( input ) nodes .    a bn can be finite or infinite .",
    "the discussion of bn s in this paper is limited to finite bn s ( i.e. , those that have finitely many nodes ) .",
    "some of the assertions made herein about bn s do not extend to the infinite case .",
    "an example of a bn is shown in fig .",
    "[ kauffman1_p5 ] .",
    "there are three nodes ( @xmath42 ) , so the bn has a total of @xmath43 ( @xmath44 ) possible states:@xmath45 the set of incoming nodes for each node of a bn is specified by the digraph . here , the sets of incoming nodes for @xmath46 , and @xmath47 are @xmath48 , and @xmath49 , respectively . since nodes @xmath26 and @xmath25 have just one incoming node apiece , each of them has just two possible input states : @xmath50 and @xmath51 .",
    "node @xmath47 has two incoming nodes , hence it has four possible input states : ( 0,0),(0,1),(1,0),(1,1 ) .",
    "given the initial state of a bn , we obtain the time evolution of the system ( the sequence of states visited ) by repeated application of the transition rules .",
    "since the number of nodes is finite , the number of possible states is finite , so for every initial state the system evolves to some finite cyclic sequence of states , i.e. , a finite sequence of states of the bn which is visited _ ad infinitum from some time on , with no other states intervening_. such a sequence is called an attractor .",
    "clearly , each state evolves to one and only one attractor .",
    "thus the set of states of a bn can be partitioned in such a way that states in the same block of the partition evolve to the same attractor , and states in different blocks evolve to different attractors .",
    "all possible states and attractors of the bn in fig .",
    "[ kauffman1_p5 ] are depicted in the transition diagram in fig .",
    "[ kauffman2_p5 ] . in this particular bn , only four of the states are visited infinitely often , and there are two attractors : one of length 3 ( @xmath52 ) and one of length 1 ( @xmath53 ) .",
    "( the length of an attractor is the number of states in the cycle . )",
    "the set of states can be partitioned as @xmath54 , where @xmath55 and@xmath56 and every state in  @xmath57 evolves to the attractor of length 3 .    , width=415,height=113 ]    a digraph with node set @xmath58 is specified by assigning to every node a set of incoming nodes . assigning a set of incoming nodes to a single node",
    "can be regarded as selecting an element of @xmath59 , where @xmath60 denotes the set of all morphisms from @xmath18 to @xmath19  @xcite .",
    "( here , 2 denotes the set @xmath61 . )",
    "the term _ morphism _ as used here is synonymous with _ function _ ; hence @xmath59 is the set of all binary functions ( functions whose values are elements of the set @xmath62 ) with @xmath58 as domain .",
    "each such binary function can be represented as a binary sequence ( a sequence of 0 s and 1 s ) in which the @xmath63th term is the value of the function at node @xmath63 .",
    "the set of incoming nodes for node @xmath64 is represented by the binary sequence in which the @xmath63th term is 1 if node @xmath63 is an incoming node for @xmath64 , and 0 otherwise . thus assigning to every node in",
    "@xmath58 a set of incoming nodes ( i.e. , selecting an element of @xmath59 for every node ) can be regarded as selecting an element of @xmath65 .",
    "alternatively , specification of a digraph can be regarded as selecting an element of @xmath66 , since @xmath67 via the mapping of @xmath68 to the element @xmath69 of @xmath65 which is defined by @xmath70 . for every @xmath71 ,",
    "denote @xmath72 by @xmath73 .",
    "then @xmath74 and , for every @xmath75 , @xmath76 note that @xmath77    the internal states of the nodes of a bn with node set  @xmath58 can be regarded as the components of a state  @xmath78 , where @xmath79 is the number of nodes in  @xmath58 and @xmath80 is the internal state of node @xmath64 ( i.e. , @xmath81 ) .",
    "there are two ways to specify the transition rules for a bn .",
    "the first method is completely general .",
    "[ deffirstruledescription_p5 ] the transition rule @xmath82 for node @xmath64 assigns the next internal state ( either 0 or 1 ) to node  @xmath64 .",
    "the assignment is a function of the current internal states of the nodes in the set @xmath83 of incoming nodes for @xmath64 .",
    "let @xmath84 , where @xmath85 is the number of nodes in  @xmath83 .",
    "then@xmath86 where @xmath87    the transition rules for the nodes of a bn can be regarded as the components of a rule vector  @xmath88:@xmath89    the second method of specifying the transition rules applies only to a bn for which @xmath90 ( hence @xmath91 ) for every node @xmath64 , where @xmath92 denotes @xmath93 .",
    "we will refer to such a bn as a virtual boolean network ( vbn ) .",
    "[ defsecondruledescription_p5 ] if @xmath90 for every @xmath64 , then the transition rules @xmath82 for the individual nodes can be incorporated into a single transition rule @xmath94 : @xmath95    for node @xmath64 , denote @xmath96 by @xmath97 . for @xmath98 , we will say that node @xmath63 is _ virtually disconnected _ from node @xmath64 if @xmath99 is invariant with respect to substitution of input @xmath100 with @xmath101 , where@xmath102 we will say that the nodes which are not virtually disconnected from node @xmath64 are _ virtual incoming nodes _ for node  @xmath64 , and we will denote the set of virtual incoming nodes by @xmath103 ; hence the set of nodes which are virtually disconnected from node @xmath64 is @xmath104 .",
    "any bn can be regarded as a vbn , by defining @xmath97 in such a way that it extends @xmath82 and all the nodes in @xmath92 are virtually disconnected from @xmath64 .",
    "[ ex1_p5 ] let @xmath105 , and fix a node @xmath64 .",
    "suppose that @xmath106 and @xmath107 , and that the transition rule @xmath82 for node @xmath64 is @xmath108\\ ] ]    the domain of rule @xmath82 is just the set of states of node @xmath26 , but @xmath82 can be embedded into rule @xmath97 defined by @xmath109\\begin{array}{lc|cccc } \\emph{in}&(x_{a},x_{b},x_{c})&(1,0,0)&(1,0,1)&(1,1,0)&(1,1,1)\\\\\\hline \\emph{out}&(x_{i})&0&0&0&0\\end{array } \\end{array}\\right]\\ ] ]    the domain of @xmath97 is the set of states of all the nodes .",
    "note that , for all @xmath110 , the embedding satisfies @xmath111 hence nodes @xmath25 and @xmath47 are virtually disconnected from node  @xmath64 .",
    "we can translate a specification of a vbn into a specification of a bn , though the resulting bn is not necessarily unique ( since @xmath83 can be any superset of @xmath103 ) .",
    "for node  @xmath64 in example  [ ex1_p5 ] , we could define @xmath83 as @xmath49 , and the transition rule @xmath112 for node @xmath64 as    @xmath113\\ ] ]    note that , for all @xmath114,@xmath115 furthermore , both @xmath82 and @xmath112 embed into the transition rule @xmath97 given in example  [ ex1_p5 ] .",
    "the transition diagram of a bn is a digraph in which the vertices are the states of the bn and every vertex has just one out - going edge .",
    "if the set of nodes of the bn is  @xmath58 , then the bn has a total of @xmath116 states .",
    "thus the transition diagram can be represented as a @xmath117 _ adjacency matrix _ .",
    "the adjacency matrix @xmath3 of any digraph is a binary matrix ( i.e. , a matrix of 0 s and 1 s ) such that @xmath118 if there is an out - going edge from the vertex labeled  @xmath64 to the vertex labeled  @xmath63 ( and @xmath119 otherwise ) .",
    "since each state of a bn has just one out - going edge , exactly one of the entries in each row of the adjacency matrix of a bn is a 1 . in the case of a bn , the adjacency matrix",
    "is also called the _",
    "transition matrix_.    [ proprules2trans1_p5 ] the transition matrix @xmath3 of a bn with vertex set  @xmath58 can be obtained from the rule vector @xmath88 ; however , @xmath88 can not be recovered from @xmath3 .",
    "* proof * ( @xmath120 ) : label the rows of  @xmath3 with the states of the bn , and use the same labels ( in the same order ) for the columns of  @xmath3 .",
    "let @xmath78 be a state of the bn .",
    "then , in the row of  @xmath3 which is labeled with state  @xmath121 , the unique 1 is located in the column labeled with state  @xmath122 , where , for every  @xmath123  is computed by applying transition rule @xmath82 to  @xmath121 .",
    "+ ( @xmath124 ) : to determine transition rule  @xmath82 , its domain ( namely , @xmath83 ) must be known ; however , @xmath83 can not be derived from  @xmath3 .",
    "@xmath125    the following proposition follows from the fact that , for every node in a vbn with node set  @xmath58 , the set of incoming nodes is @xmath58 .",
    "[ proprules2trans2_p5 ] in a vbn , the transition matrix @xmath3 can be derived from the transition rule  @xmath94 , and @xmath94  can be derived from  @xmath3 .",
    "* proof * by proposition  [ proprules2trans1_p5 ] , it suffices to prove that @xmath126 .",
    "assume that the rows and columns of  @xmath3 are labeled with the states of the vbn , as indicated in the proof of proposition  [ proprules2trans1_p5 ] , and let @xmath127 .",
    "the output of transition rule  @xmath97 , which is the next internal state of node  @xmath64 , is a function of the current state of the bn , so let @xmath121 be a state of the vbn .",
    "furthermore , let @xmath63  be such that , in the row of  @xmath3 which is labeled with state  @xmath121 , the unique 1 is located in column  @xmath63 , and let @xmath122 be the state that labels column  @xmath63 . then @xmath128 is the output of @xmath97 that corresponds to input  @xmath129    from this point on , we assume that every bn is a vbn , so we need not specify the set of incoming nodes for any node .",
    "every state @xmath121 of a vbn with node set  @xmath58 is an element of @xmath59 , and the transition rule @xmath94 for such a vbn is an element of @xmath130 .    [ deflbn_p5 ] a vbn is said to be a _ linear vbn ( lvbn ) _ if , for every node  @xmath64 , transition rule @xmath97 is of the form @xmath131 where @xmath121 is the current state of the vbn and @xmath132 is a vector whose components are 0 s and 1 s .",
    "( clearly , the number of components of  @xmath132 must be equal to the number of nodes in the vbn . )",
    "[ propmbn1_p5 ] in an lvbn , node  @xmath64 is virtually disconnected from node  @xmath63 if and only if the @xmath63th component of the vector @xmath132 in definition  [ deflbn_p5 ] is 0 .    *",
    "proof*the output of transition rule  @xmath97 ( namely , @xmath133 ) is invariant under the transformation that consists of replacing the current internal state  @xmath134 of node  @xmath63 with  @xmath135 ( and leaving the current internal states of the other nodes unchanged ) if and only if the @xmath63th component of @xmath132 is 0 .",
    "@xmath125    for a vbn with set of states  @xmath22 and node set  @xmath58 , the number of possible single - node transition rules is @xmath136 . in the case of a vbn with two nodes ,",
    "this is @xmath137 .",
    "the output of each of the 16 possible single - node transition rules for a vbn with two nodes is given in table  [ tablerule_p5 ] as a function of the input state of the vbn ; tabulated along with the output of each transition rule is the number @xmath138 of virtual incoming nodes for each of the node(s ) to which that rule would be applied .",
    "there are only four possible transition rules for a node of an lvbn with two nodes ( namely , the rules which are presented in boldface in the table ) .",
    "those four transition rules ( 1 , 7 , 11 , and 13 ) correspond to the vectors @xmath139 , and @xmath140 , respectively , where @xmath141 is as in definition  [ deflbn_p5 ] .",
    "if nodes 1 and 2 of an lvbn are @xmath26 and @xmath25 ( in that order ) , then the sets of virtual incoming nodes for each of the nodes to which rules 1 , 7 , 11 , and 13 would be applied are @xmath142 , and @xmath143 , respectively .",
    ".outputs of the transition rules for a vbn with two nodes . [ cols=\"^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^\",options=\"header \" , ]     the 1,000 trials of the type  4 simulation can be grouped into two classes :    * trials in which a handful of rule vectors were visited very frequently ( visited at roughly 1,000 or more different time steps ) and the remaining rule vectors were visited very infrequently ( visited at roughly no more than 30 different time steps ) * trials in which the variation in the number of visits per rule vector was very small    about 70@xmath144 of the trials of the type  4 simulation fall into class ( i ) ; the remaining 30@xmath144 are in class ( ii ) .",
    "all 94 trials with less than 90@xmath144 coverages are in class ( i ) .",
    "the numbers of time steps at which rule vector @xmath145 was visited in two specific trials of the type  4 simulation with at least 90@xmath144 coverage apiece are shown in the maps in fig .",
    "[ figresulttype4_3_p5 ] .",
    "the map in ( a ) is for a typical class ( i ) trial , and the map in ( b ) is for a typical class ( ii ) trial .",
    "only six rule vectors ( namely , @xmath146 , and @xmath147 ) were visited very frequently ( visited at roughly 1,000 or more different time steps ) in the class  ( i ) trial associated with fig .",
    "[ figresulttype4_3_p5](a ) .",
    "white is used for the remaining 250 rule vectors , each of which was visited no more than 22 times . in about 20@xmath144 of the class",
    "( i ) trials , at least one rule vector other than those six was among the rule vectors visited very frequently ( visited at roughly 1,000 or more different time steps ) .    the map shown in fig .",
    "[ figresulttype4_3_p5](b ) , for a class ( ii ) trial , bears a much greater resemblance to the maps for the trials of the type  3 simulation than to those for the class ( i ) trials of the type  4 simulation .",
    "was visited in two trials of the type  4 simulation with at least 90% coverage apiece : ( a ) a typical class ( i ) trial and ( b ) a typical class ( ii ) trial , width=491,height=229 ]    all six of the rule vectors enumerated earlier are from fig .",
    "[ figresultiti3_p5](a ) .",
    "each of those six rule vectors was visited a total of more than 300,000 times in the class  ( i ) trials of the type  4 simulation , while each of the 175 rule vectors not from fig .",
    "[ figresultiti3_p5](a ) had a total of fewer than 50,000 visits in the class  ( i ) trials .",
    "the total number of visits ( in units of @xmath148 ) of rule vector @xmath145 in the class ( i ) trials of the type  4 simulation ( summed over all 1,000 trials ) is shown in the map in fig .",
    "[ figbc_p5](a ) .",
    "only 54 of the 256 rule vectors were visited very frequently in at least one of the class  ( i ) trials : 41 of the 81 rule vectors from fig .",
    "[ figresultiti3_p5](a ) , including the six rule vectors enumerated earlier ; and 13 of the other 175 rule vectors .",
    "those 54 rule vectors are depicted by red squares in fig .",
    "[ figbc_p5](b ) .    ) of rule vector @xmath149 in the class ( i ) trials of the type  4 simulation .",
    "( b ) the 54 rule vectors ( indicated by red squares ) that were visited very frequently in at least one of the class ( i ) trials.,width=491,height=245 ]    the maximum time step at which rule vector @xmath145 was visited in the type  4 simulation ( where the maximum is taken over all 1,000 trials ) is shown in the map in fig .",
    "[ figmaxtimestep4_p5 ] . of the 256 rule vectors ,",
    "203 were visited at the very last ( 10,000th ) time step of at least one trial ; those rule vectors are depicted in white in the figure .",
    "red is used for the other 53 rule vectors , each of which was visited at some time step in the range 9,9929,999 but was never visited at the last time step .",
    "was visited in the type  4 simulation ( where the maximum is taken over all 1,000 trials),width=302,height=238 ]    fig .",
    "[ figresulttype4_4_p5 ] shows a graph of the cumulative percentage of rule vectors visited in our type 4 simulation , averaged over the 550 trials in which all 256 rule vectors were visited , vs.  the number of time steps .",
    "again , the blue curve is the result of our simulation , and the green curve is the parametric curve given by @xmath150 .",
    "the number of time steps actually taken to visit all 256 rule vectors ( in the 550 trials of our simulation with 100@xmath144 coverage ) was about 4,500 , which is about 2.9 times as large as the theoretical value and 2.7 times the number of steps taken in the type  3 simulation .    , where @xmath151 varies from 1 to 256 and @xmath152 is given by ( [ eqvisitratingfunction2_p5]).,width=283,height=223 ]",
    "at each time step in our simulations of a dbn , we incorporated randomness into several processes : in generating pseudo - transition diagrams from the output digraph , in choosing a pseudo - transition diagram and then transforming it to the transition diagram of a vbn , in choosing a labeling function for the states of the dbn , and ( in types  2 , 3 , and  4 ) in choosing a permutation of the states of the dbn .    in every trial of the type  1 simulation , fewer than 70@xmath144 of the rule vectors",
    "were visited .",
    "furthermore , the 256 rule vectors split into two groups : the set of 81 rule vectors that were not visited after the fifth time step in any trial of the first type  1 simulation ( and not visited at all in the two additional type  1 simulations ) , and the set consisting of the other 175 rule vectors , each of which was visited considerably more frequently than those in the set of 81 .",
    "those features of the type  1 simulation were largely preserved under the kinds of permutations of the states of the dbn which were chosen at random in the type  2 simulation ( namely , the identity permutation , the 2-cycles , and the products of disjoint pairs of 2-cycles ) .",
    "the salient features of the type  1 and type  2 simulations were not preserved under the kinds of permutations chosen in the type  3 and type  4 simulations .",
    "( any permutation could be selected in type  3 ; however , the permutation @xmath41 selected at time step  @xmath1 in the type  4 simulation depended in part on the labeling function @xmath153 . ) a remarkable contrast was found between the results of the type  3 and type  4 simulations on one hand , and those for type  1 and type  2 on the other .",
    "all 256 rule vectors were visited in every trial of the type  3 simulation , and six of the 81 rule vectors which were not visited after the sixth time step of any trial in the type  1 and type  2 simulations were the rule vectors visited the most frequently of all  by far  in the type  4 simulation .",
    "the results of the one simulation we ran in which @xmath41 was randomly chosen from the complement of the set of permutations used in type  2 were similar to those for our type  3 simulation , in that the total number of visits per rule vector varied little from one rule vector to another .",
    "fully 41 of the aforementioned 81 rule vectors were visited very frequently ( visited at roughly 1,000 or more different time steps ) in at least one class  ( i ) trial of our type  4 simulation .",
    "six of those 41 rule vectors had a total of over 300,000 visits in the type  4 simulation .",
    "each component of every one of those six rule vectors is a single - node transition rule from the set @xmath154 .",
    "three of those ( rule numbers 7 , 11 , and 13 ) are transition rules of an lvbn ; each of the other three ( 4 , 6 , and 10 ) is the negation of a single - node transition rule of an lvbn . the only single - node transition rules of an lvbn which are not a component of any of those six rule vectors are rule numbers 1 and 16and both of those transition rules correspond to a node of an lvbn that has no virtual incoming nodes .",
    "thus it appears that we can regard the class ( i ) trials of the type  4 simulation as a restriction of the single - node transition rules of a vbn to the single - node transition rules of an lvbn and their negations , hence that linearity may have played a significant role in our type  4 simulation .",
    "therefore , linearity may be a worthwhile topic for further study ."
  ],
  "abstract_text": [
    "<S> we propose a dynamical boolean network ( dbn ) , which is a virtual boolean network ( vbn ) whose set of states is fixed but whose transition matrix can change from one discrete time step to another . </S>",
    "<S> the transition matrix @xmath0 of our dbn for time step  @xmath1 is of the form @xmath2 , where @xmath3 is a transition matrix ( of a vbn ) defined at time step  @xmath1 in the course of the construction of our dbn and @xmath4 is the matrix representation of some randomly chosen permutation @xmath5 of the states of our dbn . for each of several classes of such permutations </S>",
    "<S> , we carried out a number of simulations of a dbn with two nodes ; each of our simulations consisted of 1,000 trials of 10,000 time steps each . in one of our simulations , </S>",
    "<S> only six of the 16 possible single - node transition rules for a vbn with two nodes were visited a total of 300,000 times ( over all 1,000 trials ) . in that simulation , linearity appears to play a significant role in that three of those six single - node transition rules are transition rules of a linear virtual boolean network ( lvbn ) ; the other three are the negations of the first three . </S>",
    "<S> we also discuss the notions of a probabilistic boolean network and a hidden markov model  in both cases , in the context of using an arbitrary ( though not necessarily one - to - one ) function to label the states of a vbn .    </S>",
    "<S> [ thm]note    internal measurement ; boolean network ; probabilistic boolean network ; hidden markov model ; linearity </S>"
  ]
}
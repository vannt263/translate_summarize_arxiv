{
  "article_text": [
    "network coding @xcite is a promising approach for efficient information dissemination in packet networks",
    ". network coding generalizes routing , allowing nodes in the network not only to switch packets from input ports to output ports , but also to combine incoming packets in some manner to form outgoing packets .",
    "for example , in _ linear _ network coding , fixed - length packets are regarded as vectors over a finite field @xmath0 , and nodes in the network form outgoing packets as @xmath0-linear combinations of incoming packets . for the single - source multicast problem",
    ", it is known that linear network coding suffices to achieve the network capacity @xcite .",
    "recently the problem of error correction in network coding has received significant attention due to the fact that pollution attacks can be catastrophic .",
    "indeed , the injection of even a single erroneous packet somewhere in the network has the potential to corrupt each and every packet received by a given sink node .",
    "this problem was first investigated from an edge - centric perspective @xcite , where a number of packet errors could arise in any of the links in the network .",
    "alternatively , under a node - centric perspective , it is assumed that an adversarial node may join the network and transmit corrupt packets on all its outgoing links , but the other links in the network remain free of error .",
    "one approach , investigated in @xcite , for dealing with the pollution problem is to apply cryptographic techniques to ensure the validity of received packets , permitting corrupted packets to be discarded by each node , and therefore preventing the contamination of other packets .",
    "this approach typically requires the use of large field and packet sizes , which leads to computationally expensive operations at the nodes and possibly to significant transmission delay .",
    "these requirements may be acceptable in the large - file - downloading scenario , but may be incompatible with delay - constrained applications such as streaming - media distribution .",
    "another approach ( and the one followed in this paper ) is to look for end - to - end coding techniques that require little or no intelligence at the internal nodes .",
    "@xcite show that , if @xmath1 is the network capacity ( per transmission - generation ) and @xmath2 is the min - cut from the adversary to a destination , then a rate of @xmath3 packets per generation is achievable . the same rate can also be achieved using the subspace approach introduced by ktter and kschischang @xcite .",
    "a higher rate @xmath4 can be achieved using a scheme proposed in @xcite ( see also @xcite ) if the source and sink nodes are allowed to share a secret ( i.e. , if they have common information not available to the adversary ) .    in all of the end - to - end techniques mentioned above",
    ", we observe that the min - cut from the adversary to a sink node has a significant impact on the achievable rates .",
    "if @xmath2 is large  for instance , if @xmath5then the adversary can jam the network with no hope of recovery .",
    "it is important , therefore , to conceive of protocols that induce per - generation network topologies that can perform well , even in the presence of adversaries .",
    "the central question of this paper is the following :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ * what simple changes to a protocol ( and hence to the induced network topology ) might be effective in reducing the influence of an adversary , while not ( greatly ) affecting the rate of reliable communication ? * _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    we show that in some important special cases it is indeed possible to constrict potential adversaries , without any sacrifice of network capacity .    in this paper",
    ", we introduce the concept of a _ broadcast transformation _ , which essentially constrains potential adversaries to sending the same packet on all its outgoing links . in the case of a single malicious node ,",
    "this effectively enforces @xmath6 . in order for such a transformation to be possible ,",
    "we introduce the concept of a _ trusted node _ that performs the role of broadcasting traffic .",
    "a beneficial side - effect of a broadcast transformation is to lower the encoding complexity , since each node only needs to compute a single outgoing packet in each round of communication .    in practice",
    ", such a broadcasting feature could be implemented at trusted network gateways .",
    "for example , in overlay network applications , it could be implemented by isps at their gateways , through the use of deep packet inspection or similar technologies .",
    "note that the broadcast constraint is effectively enforced if all packets in the same generation from the same user have identical payload ( although with different headers corresponding to different destination addresses ) .",
    "thus , for each user / generation pair , the network gateway could simply store the payload of the first packet it receives and drop any subsequent packets that have different payloads ( while also flagging such a user as `` suspicious '' ) .",
    "it is worth mentioning that , for wireless networks , this constraint is automatically satisfied due to the broadcast nature of wireless communication  @xcite , so the results of this paper are also naturally applicable in this case .",
    "in general , a broadcast transformation can reduce capacity ( significantly , in some cases ) , unless the network has special connectivity properties .",
    "we will show that the maximum number of _ internally - disjoint paths _ between source and sink , rather than edge - disjoint paths , becomes the key parameter .",
    "this result implies that robustness to node failures and robustness to adversarial attacks are closely related concepts .",
    "we then examine a class of networks , which we call _ @xmath7-diverse _ networks , that have excellent robustness properties .",
    "this class of networks is strongly inspired by the work of jain , lovsz and chou in  @xcite on robust and scalable network topologies .",
    "we show that , under certain conditions , no loss in capacity is incurred when performing broadcast conversion in such @xmath7-diverse networks .",
    "the remainder of this paper is organized as follows . in sec .",
    "[ sec : preliminaries ] we review some basic concepts of graph theory and network coding . in sec .",
    "[ sec : adversarial ] we introduce an adversarial model for communication over untrusted networks . in sec .",
    "[ sec : broadcast ] we introduce the broadcast transformation and characterize the achievable rates of broadcast - constrained networks by relating it to parameters of the original network . in sec .",
    "[ sec : d - diverse - networks ] we introduce @xmath7-diverse networks and study their robustness properties . in sec .",
    "[ sec : conclusions ] we present our conclusions .",
    "in this paper , a _ graph _ always means a directed multigraph , i.e. , all edges are directed and multiple edges between nodes are allowed . if @xmath8 is a graph , then @xmath9 and @xmath10 denote its vertex set and edge set , respectively . let @xmath11 .",
    "we assume that @xmath12 , where the third component is used to distinguish among multiple edges between the same nodes .    for @xmath13 ,",
    "let @xmath14 $ ] denote the set of all edges @xmath15 in @xmath16 such that @xmath17 and @xmath18",
    ". we may also denote @xmath19 \\triangleq [ \\{a\\},\\mathcal{b}]$ ] , @xmath20 \\triangleq [ \\mathcal{a},\\{b\\}]$ ] and @xmath21 \\triangleq [ \\{a\\},\\{b\\}]$ ] . for @xmath22",
    "$ ] and any other concept that implicitly depends on @xmath8 , we will use a subscript such as @xmath22_{\\mathcal{g}}$ ] if the graph is not clear from the context .    if @xmath23 , then @xmath24 is the graph consisting of the vertex set @xmath25 and edge set @xmath26 \\cup [ { \\mathcal{s}},{\\mathcal{v}}]$ ] .",
    "let @xmath27 denote the cardinality of a set @xmath28 . for nodes",
    "@xmath29 and @xmath30 , if @xmath31|>0 $ ] , then @xmath29 is called a _",
    "parent _ of @xmath30 , while @xmath30 is called a _ child _ of @xmath29 .",
    "we use @xmath32 and @xmath33 to denote , respectively , the set of all parents and the set of all children of a node @xmath30 .",
    "let @xmath34|$ ] and @xmath35|$ ]",
    ".    for @xmath36 $ ] , let @xmath37 and @xmath38 . also , for @xmath39 , let @xmath40 and , similarly , let @xmath41 .    for @xmath42 ,",
    "let @xmath43 . for distinct nodes @xmath44 and @xmath45",
    ", if @xmath46 and @xmath47 , then @xmath48 $ ] is called an _",
    "@xmath49-edge cut_. let @xmath50|\\ ] ] denote the minimum size of an @xmath49-edge cut .",
    "note that @xmath51 is often denoted by @xmath52 . for convenience ,",
    "define also @xmath53|.\\ ] ]    a _ path _ is a sequence of vertices such that from each vertex there is an edge to the next vertex in the sequence .",
    "the first and last vertices in a finite path are called _ end vertices _ , and the other vertices are called _ internal vertices_.    for distinct nodes @xmath44 and",
    "@xmath45 , a set @xmath54 is called an _ @xmath49-vertex cut _ if @xmath24 has no path connecting @xmath44 and @xmath45 .",
    "note that for an @xmath49-vertex cut to exist , @xmath45 can not be a child of @xmath44 . in that condition ,",
    "let @xmath55 denote the minimum size of an @xmath49-vertex cut .",
    "two paths are called _ edge - disjoint _ if they have no edges in common , and are called _ internally - disjoint _ if they have no internal nodes in common .",
    "let @xmath56 denote the maximum number of pairwise edge - disjoint paths from a node @xmath44 to a node @xmath45 and let @xmath57 denote the maximum number of pairwise internally - disjoint paths from @xmath44 to @xmath45 .",
    "we will frequently refer to the edge and vertex versions of menger s theorem on directed graphs  @xcite ( the former is also known as the max - flow min - cut theorem ) .",
    "[ thm : menger - edge ] for any vertices @xmath44 and @xmath45 , @xmath58 .",
    "[ thm : menger - vertex ] for any vertices @xmath44 and @xmath45 , if @xmath59|=0 $ ] , then @xmath60 .",
    "a _ ( single - source ) multicast network _",
    "@xmath61 consists of a ( directed multi)graph @xmath16 with a distinguished _ source node _",
    "@xmath44 and a set of _ sink nodes _ @xmath62 . in a multicast problem , each sink node requests the same message that is observed at the source node .",
    "each link in the network is assumed to transport , free of errors , a packet of a certain fixed size .",
    "a packet in a link entering a node is said to be an incoming packet to that node , and similarly a packet in a link leaving a node is said to be an outgoing packet from that node .",
    "when network coding is used , the source node produces each of its outgoing packets as an arbitrary function of the message it observes .",
    "also , each non - source node produces each of its outgoing packets as an arbitrary function of its incoming packets .",
    "the set of functions applied by all nodes in the network specifies a _",
    "network code_. if each sink node , by observing its incoming packets , is able to correctly identify the source message , then we say that the decoding is successful .",
    "let @xmath63 be the size of the set from which packets are selected and let @xmath64 be the set from which the source message is selected .",
    "the _ rate _ of communication is defined as @xmath65 which is the amount of information , measured in packets , that can be conveyed by the source message .",
    "a rate @xmath66 is said to be _ achievable _ for a network @xmath67 if , for any @xmath68 , there exist @xmath63 and @xmath64 with @xmath69 , along with a corresponding network code , such that the probability of unsuccessful decoding is smaller than @xmath70 .    for a multicast network @xmath61 , define",
    "@xmath71 a key result in @xcite is that a rate @xmath66 is achievable for @xmath67 if and only if @xmath72 for this reason , @xmath73 is referred to as the _ capacity _ of a multicast network @xmath67 .",
    "in this section we describe a node - centric adversarial model for networks that can be subject to pollution attacks .",
    "this model will be used in the remainder of the paper for the computation of achievable rates .",
    "we start with the definition of an untrusted multicast network .",
    "consider a multicast network .",
    "a node is said to be _ trusted _ if it is guaranteed to behave according to a specified network coding protocol ; otherwise , it is said to be _",
    "untrusted_. in particular , a trusted node can not be controlled by an adversary , while an untrusted node may ( or may not ) be so . an _ untrusted multicast network _ @xmath74 is a multicast network @xmath75 with a specified set of untrusted nodes @xmath76 such that all nodes in @xmath77 are trusted .",
    "an adversarial model for communication over an untrusted multicast network may be specified as follows .",
    "the adversary chooses a set of adversarial nodes @xmath78 with @xmath79 prior to the beginning of the session .",
    "the set @xmath80 is unknown to source and sink nodes , but remains fixed during the whole session .",
    "the adversary controls the nodes in @xmath80 , which are allowed to transmit any arbitrary packets on their outgoing links and also to cooperate with each other .",
    "since an adversarial node can not be counted as a sink node , we say that decoding is successful if each node in @xmath81 can correctly recover the source message .",
    "several end - to - end error control schemes have been proposed to ensure reliable communication over an untrusted network @xcite .",
    "the rates achievable by these schemes depend on further assumptions on the system model . in this paper",
    ", we focus on the two most basic of these models . the _ omniscient adversary _ ( oa ) model refers to the case where no constraints are imposed on the knowledge or computational power of the adversary . if an additional assumption is made that common randomness is available between the source and sink nodes , then resulting scenario is called the _ shared secret _ ( ss ) model .",
    "achievable rates under these models are often stated from an edge - centric perspective , i.e. , assuming that the adversary controls a certain number of edges .",
    "below we restate these results from a node - centric perspective .",
    "[ thm : rate - oa ] let @xmath74 be an untrusted multicast network with at most @xmath82 adversarial nodes . under the shared secret model , it is possible to achieve the rate @xmath83 where @xmath84^+.\\ ] ]    [ thm : rate - ss ] let @xmath74 be an untrusted multicast network with at most @xmath82 adversarial nodes . under the omniscient adversary model",
    ", it is possible to achieve the rate @xmath85 where @xmath86^+.\\ ] ]    we will use ( [ eq : rate - oa ] ) and ( [ eq : rate - ss ] ) as benchmarks to evaluate the effective throughput of a multicast network in the presence of adversaries .",
    "note that when there is no adversary , both expressions reduce to the capacity of the underlying network , i.e. , @xmath87    from theorems  [ thm : rate - oa ] and  [ thm : rate - ss ] we observe that , for an adversarial set @xmath80 and a sink node @xmath45 , the quantity @xmath88 can have a severe impact on the achievable rate of the untrusted network . if @xmath88 is large compared to @xmath51 , then the adversary can overwhelm the system with corrupt packets , preventing successful decoding .",
    "in this section , we propose an approach to restrict the min - cut between adversarial nodes and sink nodes , which can lead to potentially higher achievable rates over untrusted networks .",
    "the idea is to force each adversarial node to transmit only copies of the same packet , effectively constraining its outdegree to be at most 1 .",
    "as we do not know beforehand which nodes are adversarial , the constraint must be enforced on every _ untrusted _ node .",
    "this operation can be represented graphically by introducing a new node @xmath89 , as described in fig .",
    "[ fig : broadcast ] .        here , @xmath89 is a _ trusted node _ that only replicates the packet received .",
    "the overall operation , which we refer to as a _ broadcast transformation _ , is formally defined below .",
    "[ def : broadcast - transformation ] let @xmath74 be an untrusted multicast network with @xmath90 .",
    "the _ broadcast transformation _ of @xmath91 , denoted by @xmath92 , is an untrusted multicast network @xmath93 with @xmath94 given by @xmath95 ) \\cup \\{(u , u^+,1)\\colon u \\in \\mathcal{u}\\ } \\cup [ \\mathcal{u},\\mathcal{v}]^+ \\nonumber\\end{aligned}\\ ] ] where @xmath96^+ = \\{(u^+,v , i ) \\colon ( u , v , i ) \\in [ \\mathcal{u},\\mathcal{v}]\\}$ ] .    after a broadcast transformation",
    ", adversarial nodes can only do limited harm , as shown in the following simple result .",
    "[ prop : broadcast - rates ] let @xmath97 be the broadcast transformation of an untrusted multicast network @xmath98 . for @xmath99 , we have @xmath100^+   \\nonumber \\\\    r^{\\sf ss}(\\beta(\\mathcal{n}),w ) & \\geq \\left[c(\\beta(\\mathcal{n } ) ) - w\\right]^+   \\nonumber    \\end{aligned}\\ ] ] with equality if @xmath101 . [",
    "prop : rate - r - transform ]    let @xmath102 .",
    "the pair of inequalities follows immediately from definition  [ def : broadcast - transformation ] and theorems  [ thm : rate - oa ] and  [ thm : rate - ss ] by noticing that @xmath103 for any @xmath78 and any @xmath104 .    for the case",
    "@xmath101 , let @xmath105 be any node satisfying @xmath106 .",
    "note that @xmath45 must have at least @xmath107 distinct parents in @xmath16 , all of which are untrusted . take any @xmath82 of such parents to form a set @xmath80 .",
    "then @xmath108 , which shows that both inequalities can be met with equality .    in general ,",
    "applying a broadcast transformation may reduce @xmath107 , the multicast capacity of the resulting network .",
    "still , the reduction in the jamming capability of the adversary may compensate for this loss and yield a higher achievable rate .",
    "this trade - off , which is captured by proposition  [ prop : broadcast - rates ] , will be shown to be indeed favorable in certain meaningful situations .",
    "more specifically , we are interested in studying networks for which @xmath107 is equal or approximately equal to @xmath73 .",
    "if this is the case , we will say that @xmath67 is a _ robust _ network .    in the remainder of the paper , we restrict attention to the case @xmath101 , where all non - source nodes are untrusted .",
    "this case not only has analytical advantages , but also seems to be the case of most practical relevance .    for a multicast network @xmath109 ,",
    "define @xmath110 the following theorem shows that the multicast capacity of a broadcast - transformed network has a nice graph - theoretical characterization in terms of the original network .",
    "[ thm : rate - after - broadcast ] let @xmath98 be an untrusted multicast network with @xmath111 .",
    "then @xmath112    the proof is closely related to the standard argument used to derive theorem  [ thm : menger - vertex ] from the max - flow min - cut theorem .",
    "let @xmath113 .",
    "since @xmath111 , the broadcast transformation replaces each non - source node by a node followed by an edge followed by a node , as illustrated in fig  [ fig : broadcast ] .",
    "thus , if two paths in @xmath16 are internally - disjoint , then they will also be internally- ( and therefore edge- ) disjoint in @xmath114 .",
    "conversely , if two paths in @xmath16 are not internally - disjoint , i.e. , they share a node @xmath30 , then they will also share the two nodes @xmath30 and @xmath115 and the edge @xmath116 in @xmath114 , and therefore will not be edge - disjoint in @xmath114 .",
    "thus , for any @xmath117 , the maximum number of internally - disjoint paths from @xmath44 to @xmath45 in @xmath16 must be equal to the maximum number of edge - disjoint paths from @xmath44 to @xmath45 in @xmath114 , i.e. , @xmath118 .",
    "the result now follows from the definitions of @xmath119 and @xmath120 .",
    "we now give some examples of robust and non - robust networks .",
    "[ eg : nonrobust ] consider the network @xmath67 in fig .  [ fig : nonrobust_eg ] ,     and @xmath121 . ]    where @xmath44 is the source node and all other nodes @xmath122 are untrusted sink nodes .",
    "note that , for any @xmath123 , we have @xmath124 , and therefore @xmath125 .",
    "meanwhile , @xmath126 , so @xmath127 .",
    "thus , @xmath67 is not a robust network .",
    "[ eg : robust ] to make the network in fig .",
    "[ fig : nonrobust_eg ] robust , we can increase the diversity of internally - disjoint paths to @xmath128 and @xmath129 by letting @xmath128 and @xmath129 have multiple parents .",
    "this may result in a network @xmath67 as shown in fig .",
    "[ fig : robust_eg2 ] .    .",
    "]    now , for all @xmath130 , we have @xmath124 and @xmath131 .",
    "thus @xmath125 and @xmath132 .",
    "therefore , @xmath67 is a robust network .",
    "in this section , we study a special class of networks , which we call _ @xmath7-diverse networks _ , that have simultaneously good capacity and robustness properties .",
    "this class of networks is motivated by the notion of parent diversity illustrated in example  [ eg : robust ] .",
    "[ def : d - diverse ] let @xmath61 be an acyclic multicast network .",
    "the _ ( parent ) diversity _ of a non - source node @xmath133 is defined as @xmath134|.\\ ] ] the _ ( parent ) diversity _ of @xmath91 is defined as @xmath135 if @xmath136",
    ", then @xmath91 is called a _",
    "@xmath7-diverse network_.    for any node that is nonadjacent to the source node , the parent diversity is exactly the cardinality of its parent set . for a node that is adjacent to the source node , this interpretation remains true if we replace each edge coming from the source node by an edge followed by a node followed by an edge .",
    "this slight twist in the definition is required due to the special role that a source node has in a network problem .",
    "the following is the main result of this section .",
    "[ thm : d - diverse - lambda ] let @xmath137 be an acyclic network .",
    "then @xmath138 in particular , if @xmath139 for some @xmath117 , then @xmath140    theorem  [ thm : d - diverse - lambda ] shows that , for large enough @xmath7 , a @xmath7-diverse network not only has good multicast capacity but is also robust . in particular , when designing a network , one might focus solely on achieving high parent diversity , obtaining good capacity and robustness as natural consequences .",
    "it is important to note that , while @xmath141 and @xmath119 are global parameters of the network , the diversity @xmath142 ( or rather @xmath143 for each node @xmath30 ) is a parameter that depends only on local information available at a node .",
    "therefore , it should be relatively easy to construct a @xmath7-diverse network by enforcing @xmath144 at each node .",
    "this is indeed the case for the class of jlc networks , as discussed later in example  [ eg : jlc ] .    in order to prove theorem  [ thm : d - diverse - lambda ] , we start with a lemma that characterizes minimal vertex cuts in a graph .",
    "[ lem : minimal - vertex - cut ] consider a graph @xmath145 with nonadjacent nodes @xmath44 and @xmath45",
    ". then every minimal @xmath49-vertex cut is given by @xmath146)$ ] for some @xmath49-edge cut @xmath48 $ ] .",
    "in particular , @xmath147}\\ , |\\operatorname{\\sf tail}([\\mathcal{s},\\bar{\\mathcal{s}}])|\\ ] ] where the minimization is taken over all @xmath49-edge cuts @xmath48 $ ] such that @xmath148)$ ] .",
    "first , note that if @xmath48 $ ] is an @xmath49-edge cut such that @xmath148)$ ] , then @xmath146)$ ] is indeed an @xmath49-vertex cut .",
    "this follows from the fact that removing @xmath146)$ ] from @xmath8 also removes all the edges in @xmath48 $ ] .",
    "we now show that if @xmath80 is a minimal @xmath49-vertex cut , then there exists some @xmath49-edge cut @xmath48 $ ] with @xmath148)$ ] such that @xmath149)$ ] . for this , consider the graph @xmath150 . since @xmath80 is an @xmath49-vertex cut , the graph @xmath151 has two components .",
    "let @xmath152 and @xmath153 be the components that contain @xmath44 and @xmath45 , respectively .",
    "let @xmath154 ; then @xmath155 .",
    "note that @xmath48 $ ] is an @xmath49-edge cut .",
    "moreover , @xmath146 ) \\subseteq \\mathcal{a}$ ] , otherwise @xmath80 would not separate @xmath44 and @xmath45 .",
    "since @xmath146)$ ] is also an @xmath49-vertex cut and @xmath80 is minimal , we conclude that @xmath146 ) = \\mathcal{a}$ ] . in addition , we must have @xmath48 \\cap [ s,\\mathcal{v } ] = \\emptyset$ ] , otherwise @xmath156 , which is impossible by the definition of an @xmath49-vertex cut .",
    "now the result follows immediately from theorem  [ thm : menger - vertex ] .    we can now give a proof of theorem  [ thm : d - diverse - lambda ] .",
    "let @xmath105 .",
    "first , suppose @xmath45 is not adjacent to @xmath44 .",
    "let @xmath48 $ ] be some @xmath49-edge cut achieving the minimization in ( [ eq : lambda - min - tail ] ) . since the graph @xmath8 is directed acyclic , it has at least one topological ordering .",
    "let @xmath29 be the first node in @xmath157 according to some topological ordering , i.e. , @xmath158 is a node whose parents are all in @xmath28 .",
    "we have @xmath159)| \\nonumber \\\\ & \\geq |\\gamma^-(u)| \\nonumber \\\\ & \\geq d({\\mathcal{n } } ) \\label{eq : proof - lambda - d - diverse-3}\\end{aligned}\\ ] ] where ( [ eq : proof - lambda - d - diverse-3 ] ) follows from the fact that @xmath160| = 0 $ ] , since @xmath148)$ ] .    now , suppose @xmath45 is adjacent to @xmath44 .",
    "let @xmath161|$ ] .",
    "consider a new network @xmath162 , where @xmath163 $ ] .",
    "note that @xmath164 . using the argument above on @xmath165",
    ", we obtain that @xmath166 returning to the original network , we have @xmath167    from the above arguments , it follows that @xmath168 .",
    "the special case follows immediately since @xmath169 , for all @xmath117 .    as an application of theorem  [ thm : d - diverse - lambda ] , consider the case of a network in which all non - source nodes are sink nodes with diversity exactly @xmath7 , and such that there are no parallel edges between nodes , except possibly emanating from the source node .",
    "then the multicast capacities both before and after broadcast transformation are exactly equal to @xmath7 .",
    "note that , as the indegree of any non - source node is exactly @xmath7 , any removed edge would result in a smaller capacity .",
    "thus , we may conclude that , given a fixed number of edges , the network capacity is maximized by having nodes select incoming edges from distinct parents rather than from the same parent .",
    "this result holds even if all non - source nodes are untrusted , provided a broadcast transformation is performed .",
    "[ eg : jlc ] we now describe a class of networks that has not only good theoretical properties but also potential for practical applications .",
    "the protocol for constructing and operating these networks has been proposed by jain , lovsz and chou @xcite as a scalable and robust solution to peer - to - peer data dissemination with network coding .",
    "we refer to any network constructed according to their protocol as a _",
    "jlc network_.    an example of a jlc network is depicted in fig .",
    "[ fig : jlc_eg ] .    -diverse jlc network with @xmath170 and @xmath171 . ]",
    "the network is acyclic , and all non - source nodes are sinks .",
    "initially , the network contains only the source node ( or server ) , which has @xmath172 ( potential ) outgoing links .",
    "here , each link represents a stream of unit bandwidth . at any time",
    ", the server maintains a list of @xmath172 available links for download .",
    "when a new node joins the network , it requests from the server @xmath7 download links .",
    "the server randomly picks @xmath7 links from the pool of available links , and updates its list with @xmath7 potential links originating from the new node .",
    "therefore , the network always has @xmath172 links ( i.e. , streams of unit bandwidth ) available for download .",
    "it is easy to ensure that a jlc network is @xmath7-diverse by performing a simple protocol modification .",
    "when a new node joins the network , rather than choosing the @xmath7 upstream links completely at random from the @xmath172 available links ( thereby allowing the possibility of fewer than @xmath7 distinct parents ) , the server simply needs to provide the new node with @xmath7 links from @xmath7 distinct parents .",
    "note that , in practice , @xmath173 , so the @xmath172 available links come from at least @xmath174 parents .",
    "hence , the modification can be done easily .",
    "we have introduced the broadcast transformation of a network , which restricts the influence of potential adversaries by limiting them to a single transmission opportunity per generation . for networks with a sufficient diversity of internally - disjoint paths from source to sink(s ) , the multicast capacity may not be greatly affected by this transformation . in particular , for a class of networks called @xmath7-diverse networks , the full capacity is maintained when @xmath7 is sufficiently large .",
    "combined with error control for network coding , the proposed approach may be an effective means of dealing with adversaries , particularly in application scenarios such as real - time media streaming , where alternative ( e.g. , cryptographic ) methods may be cost - prohibitive .",
    "the authors would like to thank the anonymous reviewers for their helpful comments , which significantly improved the presentation of the paper .",
    "s.  jaggi , m.  langberg , s.  katti , t.  ho , d.  katabi , m.  mdard , and m.  effros , `` resilient network coding in the presence of byzantine adversaries , '' _ ieee trans .",
    "inf . theory _ ,",
    "54 , no .  6 , pp . 25962603 , jun .",
    "2008 .",
    "he is currently working toward the m.s .",
    "degree in the department of electrical engineering and computer science ( eecs ) at the massachusetts institute of technology ( mit ) , cambridge .",
    "his research interests lie in the areas of communication and information theory .",
    "danilo silva ( s06m09 ) received the b.sc .",
    "degree from the federal university of pernambuco , recife , brazil , in 2002 , the m.sc .",
    "degree from the pontifical catholic university of rio de janeiro ( puc - rio ) , rio de janeiro , brazil , in 2005 , and the ph.d . degree from the university of toronto , toronto , canada , in 2009 , all in electrical engineering .    from september to october 2009 , he was a postdoctoral fellow with the ecole polytechnique fdrale de lausanne ( epfl ) , and from october to december 2009 , he was a postdoctoral fellow with the university of toronto .",
    "he is currently a postdoctoral fellow with the state university of campinas ( unicamp ) .",
    "his research interests include channel coding , information theory , and network coding .",
    "frank r. kschischang ( s83m91sm00f06 ) received the b.a.sc .",
    "degree ( with honors ) from the university of british columbia , vancouver , bc , canada , in 1985 and the m.a.sc .   and ph.d .",
    "degrees from the university of toronto , toronto , on , canada , in 1988 and 1991 , respectively , all in electrical engineering .",
    "he is a professor of electrical and computer engineering and canada research chair in communication algorithms at the university of toronto , where he has been a faculty member since 1991 . during 1997 - 98 , he was a visiting scientist at mit , cambridge , ma and in 2005 he was a visiting professor at the eth , zurich .",
    "his research interests are focused on the area of channel coding techniques .",
    "he is the recipient of the ontario premier s research excellence award , a canada council of the arts killam research fellowship , and ( with r. koetter ) the ieee communications society and information theory society joint paper award .    during 1997 - 2000 , he served as an associate editor for coding theory for the ieee transactions on information theory .",
    "he also served as technical program co - chair for the 2004 ieee international symposium on information theory ( isit ) , chicago , and as general co - chair for isit 2008 , toronto .",
    "he serves as the 2010 president of the ieee information theory society ."
  ],
  "abstract_text": [
    "<S> while network coding can be an efficient means of information dissemination in networks , it is highly susceptible to `` pollution attacks , '' as the injection of even a single erroneous packet has the potential to corrupt each and every packet received by a given destination . even when suitable error - control coding is applied , an adversary can , in many interesting practical situations , overwhelm the error - correcting capability of the code . to limit the power of potential adversaries , </S>",
    "<S> a broadcast transformation is introduced , in which nodes are limited to just a single ( broadcast ) transmission per generation . under this broadcast transformation , </S>",
    "<S> the multicast capacity of a network is changed ( in general reduced ) from the number of edge - disjoint paths between source and sink to the number of internally - disjoint paths . </S>",
    "<S> exploiting this fact , a family of networks is proposed whose capacity is largely unaffected by a broadcast transformation . </S>",
    "<S> this results in a significant achievable transmission rate for such networks , even in the presence of adversaries .    </S>",
    "<S> adversarial nodes , broadcast transformation , error correction , jlc networks , multicast capacity , network coding . </S>"
  ]
}
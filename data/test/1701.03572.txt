{
  "article_text": [
    "in recent times , unmanned aerial vehicles ( uavs ) are often equipped with streaming video cameras that can be employed for immediate observation .",
    "they are popular for several applications such as rescue , surveillance , mapping , etc .",
    "the main drawbacks of videos taken by uav are the undesired shaking motion caused by atmospheric turbulence and jittery flight control of the platform . the shaky motion in the video proves to mitigate the fundamental aim of using uav for vision - based tasks .",
    "in particular , the unstable motion also inhibits higher level vision tasks , such as detecting and tracking of objects in the video . while significant work has been done for handheld cameras and ground vehicles ,",
    "there are limited works for stabilization of videos taken from uav in the literature .",
    "moreover , the existing uav video stabilization algorithms , can not be applied on - board uav systems in real - time .        in general , uav video stabilization algorithms ( @xcite )",
    "follow three main steps : ( 1 ) motion estimation , ( 2 ) motion compensation and ( 3 ) image composition as indicated in figure [ figure : vsworkflow ] .",
    "most methods revolve around finding the 2d motion model ( such as homography ) to estimate the global motion trajectory .",
    "then a low - pass filter is applied to the trajectory to sieve out the high frequency jitters .",
    "then the low frequency parameters are then applied onto frames via warping .",
    "this framework is really effective for scenes with very little dynamic movement which is applicable to aerial videos taken by uavs .",
    "however , estimating the global motion trajectory using a window of frames can not achieve instantaneous stabilization , as required for real - time processing .    in @xcite , a video stabilization algorithm for uav",
    "was proposed using a circular block to search and match key places .",
    "the estimated affine transform was then smoothed by the polynomial fitting and prediction method ( pfpm ) . however , this approach only achieved a speed of less than 10fps on a desktop with 3.0ghz processor and 1 gb ram for images with resolution of 216x300p .    in @xcite ,",
    "a smoothing method utilizes lucas - kanade tracker(@xcite ) to detect interest points .",
    "the unintended motion compensation was accomplished by adjusting for extra rotation and displacements that generate vibrations .",
    "this approach is able to achieve a stabilizing speed between 20fps and 28fps for images with resolution of 320x240 pixels on a mac laptop with 2.16ghz intel core 2 duo processor with a three frame delay .",
    "@xcite , later proposed a three - step video stabilization method for uavs .",
    "firstly , a fast corner detector is employed to locate the feature points in the frames .",
    "secondly , the matched key - points are used for estimation of affine transform to reduce false matches .",
    "finally , motion estimation is performed based on the affine model and the compensation for vibration is conducted based on spline smoothing .",
    "it was reported that this algorithm can process up to 30fps on a workstation with an intel xeon 2.26 ghz processor and 6 gb ram for images with resolution of 320240 pixels .",
    "a very recent work by @xcite is able to process a 640x480 pixels video at a speed of 40fps on a notebook computer with a 2.5ghz intel duo core cpu .",
    "while it is able to achieve a high processing speed , the improvement comes at the price of unreliable motion estimation , which leads to failure in stabilizing the video ultimately .",
    "moreover , the algorithm proposed does not furnish evidence for real - time processing on real - time on - board systems .",
    "it is noted that these previous methods work offline or in a post - process way .",
    "for some uav vision tasks , frames are required to be stabilized immediately and be presented to other tasks , such as object tracking and detection .    the proposed method in this paper is closely related to the method proposed by ho ( @xcite ) .",
    "the algorithm employs finding corners in frames , followed by estimating a 2d motion model between consecutive frames .",
    "then the parameters in motion model are treated as trajectory to be smoothed using an averaging window .",
    "this smoothing of the motion model parameters is different from the motion trajectory smoothing employed by previous works ( @xcite ) .",
    "our framework is similar to nghia ho s but has a significant difference in terms of implementation and performance .",
    "most notably , a novel hybrid mechanism for motion estimation and an optical flow - based corner tracker has been proposed to overcome the challenges encountered by previous algorithms .",
    "in addition , the proposed stabilization algorithm performs in real - time , whereas nghia ho s algorithm processes the whole video sequence before achieving stabilization .",
    "the rest of this paper is structured as follows . in section 2 ,",
    "we introduce the proposed framework for video stabilization . then in section 3",
    ", we discuss how the processing speed of motion estimation is expedited by using an optical flow - based corner tracker and a reduced region of interest .",
    "then in section 4 , we explain the improvisation of the motion estimation given by optical flow - based tracker with hybrid motion estimation mechanism .",
    "following which , we verify the speed of the algorithm on publicly available uav videos and achieve a speed faster than the current state - of - the - art algorithm . in section 5 , we discuss the implementation of the real - time component of the algorithm using multi - thread processing .",
    "finally , we conclude the paper in section 6 .",
    "spurred by the challenge to meet the real - time requirements , we propose a novel stabilization framework as shown in figure [ figure : novelworkflow ] .",
    "the idea is to build an appropriate model for the global motion trajectory of the uav camera , estimate the motion parameters between two successive frames using very efficient key point detector and compensate the motion via an effective optical flow based tracking of the key points .",
    "firstly , the key novelty of the proposed algorithm lies in the high speed estimation of the motion parameter trajectory between two consecutive frames , which other methods are less efficient in accomplishing .",
    "this is because the motion estimation phase chooses an appropriate lower order homography , either rigid or similarity transformation between frames .",
    "this is so that the algorithm is able to frequently use lower order of homography to estimate the motion parameters unless there is a need to use higher order . as a result , achieving a high processing speed .",
    "secondly , our motion compensation phase smooths the parameters via an averaging window .",
    "lastly , we warp the frame according to the smoothed parameters .",
    "the program is able to process up to 100 frames per second for all 3 stages of the algorithm .",
    "this reassures us that the algorithm is suited for real - time video stabilization .",
    "after achieving such a high speed in stabilizing the frames , the real - time version of the algorithm can be implemented .",
    "the three stages of video stabilization were separated into three different threads .",
    "threads are basically independent processes that can run concurrently and share the same resources inside a program .",
    "our algorithm is implemented such that motion estimation thread , motion compensation thread and image composition thread are synchronized in such a way that they are able to stabilize a uav video in real time .",
    "in other words , there is no need to wait for the processing for the whole video to be done .",
    "motion estimation is the very first step in video stabilization and it is also the most time consuming step .",
    "consequently , our primary goal is to cut down the time required to calculate the motion parameters trajectory between consecutive frames in the video .",
    "the motion trajectory is estimated from how the feature points ( @xcite ) move between consecutive frames .",
    "therefore , to initialize motion estimation , we first efficiently detect feature points .",
    "feature points are locations in the image with large variations in intensity in all directions .",
    "they are very important in motion estimation step as they determine the quality of the motion estimation .",
    "one early attempt to find these corners was done by chris harris and mike stephens in their paper ( @xcite ) , which now is called harris corner detector .",
    "it basically finds the difference in intensity for a displacement of ( u , v ) in all directions .",
    "this can be easily expressed as below .",
    "@xmath0}^2 } }   \\label{eq : harriscornerdetector}\\ ] ]    where w ( x , y ) is either a rectangular window or gaussian window function which gives weight to the surrounding pixels . in 1994 , @xcite made a small modification to it in their paper which shows better results compared to harris corner detector .",
    "the scoring function in shi - tomasi corner detector is given by :    @xmath1    *  when @xmath2 is small , which happens when @xmath3 and @xmath4 are small , the region is flat . *  when @xmath5 , which happens when @xmath3 @xmath6 @xmath4 vice versa , the region is edge . *",
    " when @xmath5 is large , which happens when @xmath3 and @xmath4 are large and @xmath3   @xmath4 , the region is a corner .    since the proposed idea is to ensure that the algorithm is able to run in real - time , a simple experiment of mosaic was conducted .",
    "its purpose is to find out if the number of key points detected has a huge effect on the estimated transformation parameters and also to find out how the time is affected when the number of key points returned is scaled up .    in this experiment",
    ", two images of the same scene will be stitched together with a reference image as shown in figure [ fig : mosaic ] .    [",
    "cols=\"^ \" , ]     this section contains the final video results obtained from our algorithm which are available online .    1 .   ground : 2",
    ".   bird : 3 .",
    "girl : 4 .",
    "this paper describes the algorithms and methods used to tackle the problem of real - time video stabilization for unmanned aerial vehicles ( uavs ) videos . due to the size and structure limitations , uavs are highly susceptible to atmospheric turbulence , which induces jitters and makes the video unstable .",
    "it is very difficult to detect and track targets of interest in such unstable videos .",
    "therefore , it is necessary to design a real - time video stabilization algorithm for uavs as a pre - processing module for higher - level vision tasks , such as object detection and tracking . to achieve the above goal , two main components were designed as part of the proposed video stabilization algorithm : ( 1 ) by designing an appropriate motion model for the global motion of the uavs , the proposed stabilization mechanism avoids the necessity of estimating the most general motion model , projective transformation , and considers simpler motion models like the similarity and rigid transformation ; ( 2 ) in order to achieve high processing speeds , an optical flow based motion estimation is proposed to replace the conventional tracking and matching algorithms used by state - of - the - art video stabilization methods .",
    "these novel ideas resulted in a real - time stabilization algorithm .",
    "a demo of the stabilized videos can be accessed using the web links provided in this paper .",
    "our method will not yield excellent results for videos that has large and gradual scene changes .",
    "this will cause the frames to be warped in such a way to resist the changes resulting in large unfilled areas in the frames .",
    "future work will be carried out to resolve this issue .",
    "andoni a , indyk p ( 2006 ) near - optimal hashing algorithms for approximate nearest neighbor in high dimensions . in : 2006 47th annual ieee symposium on foundations of computer science ( focs06 ) , ieee ,",
    "pp 459468    battiato s , gallo g , puglisi g , scellato s ( 2007 ) sift features tracking for video stabilization . in : image analysis and processing , 2007 .",
    "iciap 2007 .",
    "14th international conference on , ieee , pp 825830                  shen h , pan q , cheng y , yu y ( 2009 ) fast video stabilization algorithm for uav . in : intelligent computing and intelligent systems , 2009 .",
    "icis 2009 .",
    "ieee international conference on , ieee , vol  4 , pp 542546"
  ],
  "abstract_text": [
    "<S> this paper describes the development of a novel algorithm to tackle the problem of real - time video stabilization for unmanned aerial vehicles ( uavs ) . </S>",
    "<S> there are two main components in the algorithm : ( 1 ) by designing a suitable model for the global motion of uav , the proposed algorithm avoids the necessity of estimating the most general motion model , projective transformation , and considers simpler motion models , such as rigid transformation and similarity transformation . </S>",
    "<S> ( 2 ) to achieve a high processing speed , optical - flow based tracking is employed in lieu of conventional tracking and matching methods used by state - of - the - art algorithms . </S>",
    "<S> these two new ideas resulted in a real - time stabilization algorithm , developed over two phases . </S>",
    "<S> stage i considers processing the whole sequence of frames in the video while achieving an average processing speed of 50fps on several publicly available benchmark videos . </S>",
    "<S> next , stage ii undertakes the task of real - time video stabilization using a multi - threading implementation of the algorithm designed in stage i. </S>"
  ]
}
{
  "article_text": [
    "the theory of finite type invariants allows us to interpret many important knot and link invariants in purely combinatorial terms , as functionals on spaces of chord diagrams . for knots",
    ", there is an obvious intersection graph associated with these diagrams , first studied ( in this context ) by chmutov , duzhin and lando @xcite . in many cases ,",
    "these graphs contain all the relevant information for the functionals coming from knot invariants @xcite . some of the most important knot invariants , such as the conway , jones , homfly and kauffman polynomials , can be interpreted in terms of these intersection graphs @xcite .    however , it is not obvious how to extend the idea of the intersection graph to finite type invariants of other objects , such as braids , links and string links .",
    "the goal of this paper is to introduce a reasonable definition of the intersection graph for chord diagrams associated with string links . as evidence that this is the `` right '' definition",
    ", we use these intersection graphs to construct weight systems for string links , and show that these weight systems are related to ( though weaker than ) the weight systems arising from the conway and homfly polynomials . in future work we will show that in some cases the intersection graph contains all the relevant information in the string link chord diagram @xcite , and that it can be used to give a new interpretation of milnor s homotopy invariants @xcite .    in section  [ s :",
    "prelim ] we will review the necessary background , including finite type invariants , chord diagrams , intersection graphs and lando s graph bialgebra @xcite . in section  [ s : igstring ] we will define intersection graphs for string links , and provide the space of graphs with a bialgebra structure similar to lando s . in section  [ s:2term ]",
    "we look at chord diagrams modulo the 2-term relations introduced by bar - natan and garoufalides @xcite , and use the adjacency matrices of their intersection graphs to construct weight systems related to those arising from the conway and homfly polynomials . finally , in section  [ s : questions ] we pose some questions for further research .",
    "+   + _ acknowledgement : _ the author thanks loyola marymount university for supporting this work via a summer research grant in 2003 .",
    "an _ ( oriented ) knot _ is an embedding of the ( oriented ) circle @xmath0 into the 3-sphere @xmath1 .",
    "knot invariant _ is a map from these embeddings to some set which is invariant under isotopy of the embedding .",
    "we will also consider invariants of _ regular _ isotopy , where the isotopy preserves the _ framing _ of the knot ( i.e. a chosen section of the normal bundle of the knot in @xmath1 ) .",
    "a _ link _ with @xmath2 components is simply an embedding of the disjoint union of @xmath2 copies of @xmath0 into @xmath1 ; each component is a knot .",
    "a _ string link _ can be defined as follows :    ( habegger and lin @xcite ) let d be the unit disk in the plane and let i = [ 0,1 ] be the unit interval . choose k points @xmath3 in the interior of d , aligned in order along the the x - axis .",
    "a * string link * @xmath4 of k components is a smooth proper imbedding of k disjoint copies of i into @xmath5 : @xmath6 such that @xmath7 and @xmath8 .",
    "the image of @xmath9 is called the ith string of the string link @xmath4 .    link and",
    "string link invariants are defined in the same way as for knots .",
    "note that any string link can be closed up to a link in a unique way by joining the top and bottom of each component by an arc which lies outside of @xmath5 ( and which is unlinked with the other such arcs ) .",
    "so any link invariant gives rise to a string link invariant by evaluating it on the closure of the string link .",
    "our treatment of finite type invariants will follow the combinatorial approach of birman and lin  @xcite",
    ". we will give a brief overview of this combinatorial theory , and its natural extensions to links and string links .",
    "for more details , see bar - natan  @xcite .",
    "we first note that we can extend any link invariant to an invariant of _ singular _ links , where a singular link is an immersion of a disjoint union of copies of @xmath0 in 3-space which is an embedding except for a finite number of isolated double points . given a link invariant @xmath10 ,",
    "we extend it via the relation :    @xmath11    an invariant @xmath10 of singular links is then said to be of _ finite type _ , specifically of _ type",
    "n _ , if @xmath10 is zero on any link with more than @xmath12 double points ( where @xmath12 is a finite nonnegative integer ) .",
    "we denote by @xmath13 the vector space over @xmath14 generated by ( framing - independent ) finite type invariants of type @xmath12 .",
    "we can completely understand the space of finite type invariants by understanding all of the vector spaces @xmath15 .",
    "an element of this vector space is completely determined by its behavior on links with exactly @xmath12 singular points .",
    "in addition , since such an element is zero on links with more than @xmath12 singular points , any other ( non - singular ) crossing of the knot can be changed without affecting the value of the invariant .",
    "this means that elements of @xmath15 can be viewed as functionals on the space of _ chord diagrams _ :",
    "a * chord diagram of degree n with k components * is a disjoint union of k oriented circles , together with @xmath12 chords ( line segments with endpoints on the circles ) , such that all of the @xmath16 endpoints of the chords are distinct .",
    "the circles represent a link of k components and the endpoints of a chord represent 2 points identified by the immersion of this link into 3-space .",
    "the diagram is determined by the orders of the endpoints on each component . for string links , chord diagrams involve oriented line segments rather than circles",
    ".    functionals on the space of chord diagrams which are derived from finite type link invariants will satisfy certain relations :    a * weight system of degree n * is a linear functional @xmath17 on the space of chord diagrams of degree @xmath12 ( with values in an associative commutative ring @xmath18 with unity ) which satisfies the 1-term and 4-term relations , shown in figure  [ f:4-term ] . for knots ,",
    "the three arcs all belong to the same circle ; for links ( resp .",
    "string links ) , they may belong to the same or different circles ( resp . line segments ) .",
    "( 1-term relation ) @xmath19 ( 4-term relation ) @xmath20    the natural map from elements of @xmath15 to functionals on chord diagrams is a homomorphism into the space of weight systems @xcite .",
    "kontsevich proved the much more difficult fact that these spaces are isomorphic @xcite ( the inverse map is the famous _ kontsevich integral _ ) . for convenience , we take the dual approach , and simply study the space of chord diagrams of degree @xmath12 modulo the 1-term and 4-term relations .",
    "the 1-term relation is occasionally referred to as the `` framing - independence '' relation , because it arises from the framing - independence of the invariants in @xmath13 ( essentially , from the first reidemeister move ) . since most of the interesting structure of the vector spaces arises from the 4-term relation , it is common to look at the more general setting of invariants of regular isotopy , and consider the vector space @xmath21 of chord diagrams of degree @xmath12 on links with @xmath2 components modulo the 4-term relation alone .",
    "linear functionals on @xmath21 are called _ regular weight systems _ of degree @xmath12 .",
    "similarly , we define the vector space @xmath22 for chord diagrams of degree @xmath12 on _ string links _ of @xmath2 components .",
    "it is useful to combine all of these spaces into graded modules @xmath23 and @xmath24 via direct sum . for @xmath25",
    ", we can define a product on @xmath26 via connect sum @xcite ; however , this does not extend to @xmath27 .",
    "but we _ can _ give the module @xmath28 a bialgebra ( or hopf algebra ) structure for any @xmath2 by defining an appropriate product and co - product :    * we define the ( noncommutative ) product @xmath29 of two chord diagrams @xmath30 and @xmath31 as the result of placing @xmath31 on top of @xmath30 ( joining the components so the orientations agree ) , as shown below : @xmath32 * we define the co - product @xmath33 of a chord diagram @xmath34 as follows : @xmath35 where @xmath36 is a subset of the set of chords of @xmath34 , @xmath37 is @xmath34 with all the chords in @xmath36 removed , and @xmath38 is @xmath34 with all the chords _ not _ in @xmath36 removed .",
    "@xmath39    it is easy to check the compatibility condition @xmath40 .",
    "for knots , there is a very natural notion of intersection among the chords of a chord diagram - two chords intersect if their endpoints alternate around the bounding circle .",
    "the intersection graph then has a vertex for each chord , and connects two vertices by an edge if the corresponding chords intersect . the difficulty with extending this idea to links and string links is how to deal with chords which have their endpoints on different components of the diagram - specifically , if they each have one endpoint on a given component , and their other endpoints are on different components . in what sense , if any , do these chords intersect ?",
    "the essential value of the intersection graph for knots is that it can detect when the order of two endpoints for different chords along the bounding circle is switched ( as happens in the 4-term relation ) , since this changes the pair of chords from intersecting to non - intersecting or vice - versa . to usefully extend the notion of intersection graphs to links or string links",
    ", we need to retain this ability . for string links",
    ", the existence of a `` bottom '' and `` top '' for each component allows us to give a linear ( rather than cyclic ) ordering to the endpoints of the chords on each component , and so the notion of one endpoint being `` below '' another is well - defined .",
    "let @xmath34 be a string link chord diagram with @xmath2 components ( oriented line segments , colored from 1 to @xmath2 ) and @xmath12 chords .",
    "the _ intersection graph _",
    "@xmath41 is the labeled , directed multigraph such that :    * @xmath41 has a vertex for each chord of @xmath34 .",
    "each vertex is labeled by an unordered pair @xmath42 , where @xmath43 and @xmath44 are the labels of the components on which the endpoints of the chord lie .",
    "* there is a directed edge from a vertex @xmath45 to a vertex @xmath46 for each pair @xmath47 where @xmath48 is an endpoint of the chord associated to @xmath45 , @xmath49 is an endpoint of the chord associated to @xmath46 , @xmath48 and @xmath49 lie on the same component of @xmath34 , and the orientation of the component runs from @xmath48 to @xmath49 ( so if the components are all oriented upwards , @xmath48 is below @xmath49 ) .",
    "we count these edges `` mod 2 '' , meaning that if two vertices are connected by two directed edges with the same direction , they cancel each other . if two vertices are connected by a directed edge in each direction , we will simply connect them by an undirected edge .",
    "examples of chord diagrams and their associated intersection graphs are given in figure  [ f : igstring ] .",
    "@xmath50    note that when the two chords have both endpoints on the same component @xmath43 , our definition of intersection graph corresponds to the usual intersection graph for knots .",
    "our definition also matches our intuition in the case of chord diagrams of two components , as shown in figure  [ f : igstring ] .",
    "note also that the total number of directed edges between a vertex @xmath10 labeled @xmath42 and a vertex @xmath51 labeled @xmath52 is given by the sum of the number of occurrences of @xmath43 in @xmath52 and the number of occurrences of @xmath44 in @xmath52 .",
    "in particular , if a vertex @xmath10 has a label @xmath53 , this number will be even ( 0 , 2 or 4 ) .",
    "since we count directed edges modulo 2 , this implies there is an ( uncancelled ) directed edge from @xmath10 to another vertex @xmath51 if and only if there is also an ( uncancelled ) directed edge from @xmath51 to @xmath10 .",
    "we will say that labeled directed multigraphs which have this property are _",
    "[ d : semisym ] a directed multigraph g , with each vertex labeled by a pair \\{i , j } , is * semisymmetric * if for every vertex v labeled \\{i , i } , and any other vertex w , there is a directed edge from v to w if and only if there is a directed edge from w to v.      following lando s work for knots @xcite , we can define a bialgebra structure on the space of intersection graphs for string links so that @xmath54 becomes a bialgebra homomorphism from the space of chord diagrams for string links to the space of intersection graphs .",
    "the key is to define the analogue of the 4-term relation for intersection graphs .",
    "consider the graded vector space ( over @xmath55 ) of formal linear combinations of labeled semisymmetric directed multigraphs , with vertices labeled by unordered pairs \\{i , j } , @xmath56 , graded by the number of vertices in the graphs .",
    "for any graph g and vertices a and b in v(g ) , with labels \\{i , j } and \\{i , l } respectively ( j and l may be equal , or equal to i ) , we impose on the vector space the relation : @xmath57 here @xmath58 is the result of complementing the edge ab in g ( i.e. adding a directed edge between the vertices in each direction , and then cancelling `` mod 2 '' ) .",
    "@xmath59 is the result of changing the label on a to \\{j , l } , complementing the edge ab if @xmath60 ( and leaving it unchanged if i = l ) , and adding a directed edge from a to c ( respectivley c to a ) for every vertex c in v(g ) for which g has a directed edge from b to c ( respectively c to b ) , and then cancelling mod 2 .",
    "finally , @xmath61 is the result of complementing the edge ab in @xmath59 . here is an example of such a relation : @xmath62 the bialgebra @xmath63 is defined as this graded vector space , together with a product and a coproduct .",
    "the product is a map @xmath64 , defined as follows . given graphs @xmath65 and @xmath66",
    ", @xmath67 is the disjoint union of the graphs , together with a directed edge from @xmath68 to @xmath69 for each color in the label \\{i , j } for @xmath45 which is also in the label for @xmath46 .",
    "an example is shown below : @xmath70 the coproduct is a map @xmath71 , defined as follows .",
    "for any graph g , and subset @xmath72 of its vertices , let @xmath73 denote the subgraph induced by @xmath36 . then : @xmath74 an example is shown below : @xmath75    [ t : bialgebra ] the product and coproduct defined above induce the structure of a co - commutative ( but not commutative ) bialgebra on the space f of labeled , directed multigraphs modulo the 4-term relation .",
    "proof : it is easy to check that @xmath63 is a bialgebra ( i.e. that @xmath76 ) , and that it is co - commutative , but not commutative .",
    "we also need to check that the product and coproduct respect the 4-term relation , i.e. that the product of a graph and a 4-term relation yields a 4-term relation , and that the coproduct of a 4-term relation yields a sum of 4-term relations . to begin with ,",
    "consider a product @xmath77 .",
    "it is clear that @xmath78 , since complementing the edge @xmath79 is independent of any edges between @xmath80 and @xmath81 .",
    "moreover , @xmath82 , since in each case there is an directed edge from a vertex @xmath83 to @xmath84 for each occurrence of @xmath44 or @xmath85 in the label of @xmath10 ( with cancellation mod 2 ) .",
    "it is then clear that @xmath86 , and so the product of the 4-term relation and another graph is another 4-term relation .    for the coproduct ,",
    "consider @xmath87 .",
    "the sum in the coproduct splits into two groups - terms where both @xmath84 and @xmath88 belong to either @xmath36 or its complement , and terms where one of the two vertices is in @xmath36 and the other is in its complement .",
    "the first group gives a sum of 4-term relations , while the terms of the second group already sum to zero in @xmath89 and @xmath90 .",
    "this finishes the proof of the theorem . @xmath91",
    "it is now easy to check that @xmath54 is a bialgebra homomorphism from the bialgebra @xmath28 of chord diagrams for string links with @xmath2 components modulo the 4-term relation to the bialgebra @xmath92 of directed , labeled graphs with labels 1 , ... ,",
    "@xmath2 , since the 4-term relation for graphs was defined to mimic the 4-term relation for the chord diagrams . as a result ,",
    "any functional on @xmath92 will induce , by composition with @xmath54 , a regular weight system .",
    "we call such a functional a _ regular graph weight system_.",
    "any particular weight system will satisfy relations in addition to the 1-term and 4-term relations , and it can be useful to look at weight systems which lie in the subspaces determined by these additional relations .",
    "in particular , bar - natan and garoufalides @xcite noted that the weight system associated with the conway polynomial for knots satisfies a set of _",
    "2-term _ relations which induce the 4-term relations .",
    "we can extend this notion to define a set of 2-term relations for string links , shown in figure  [ f:2-term ] .",
    "[ h ] @xmath93    clearly , these relations imply that the weight system satisfies the 4-term relation as well . as a result ,",
    "the product and coproduct of section [ ss : finitetype ] are still well - defined .",
    "so we can give the vector space of chord diagrams for string links with @xmath2 components modulo the 2-term relations the structure of a bialgebra .",
    "we will denote this bialgebra ( and the underlying vector space ) by @xmath94 .",
    "there is a natural projection from @xmath28 to @xmath94 .    similarly , we can look at the quotient space of @xmath63 by the 2-term relations @xmath95 since @xmath96 , the 2-term relations imply the 4-term relations , and the quotient space is a bialgebra @xmath97 with the product and coproduct induced from @xmath63 .",
    "@xmath54 is then a bialgebra homomorphism from @xmath94 to @xmath98 .",
    "bar - natan and garoufalides @xcite analyzed the space of chord diagrams for knots ( equivalently , string links of one component ) modulo the 2-term relations .",
    "they found that @xmath99 is generated ( as a vector space ) by _",
    "( @xmath100)-caravans _ of @xmath101 `` one - humped camels '' ( isolated chords which intersect no other chords ) and @xmath102 `` two - humped camels '' ( pairs of chords which intersect each other , but no other chords ) .",
    "an example of such a caravan is shown in figure  [ f : caravan ] .",
    "[ h ] @xmath103    our goal in this section is to find a similar `` normal form '' for string link chord diagrams with more than one component ; this will be useful in the remainder of the paper .",
    "we will prove the following theorem :    [ t : normalform ] any connected string link chord diagram is equivalent , modulo the 2-term relations , to a chord diagram with components numbered 1 , ... , n ( possibly after renumbering ) such that :    * every chord either has both endpoints on component 1 , or endpoints on components i and i+1 for some i. * the chords with both endpoints on component 1 are arranged in a caravan .",
    "moreover , all of their endpoints lie below the endpoints of any chords between components .",
    "* there are at most 2 chords between components i and i+1 , and if there are 2 they do not cross ( so the endpoints of one chord lie above the endpoints of the other on both components ) . * on component",
    "i , the endpoints of chords connecting component i to component i+1 lie below the endpoints of chords connecting component i to component i-1 .",
    "an example is shown in figure  [ f : normal ] .",
    "[ h ] @xmath104    if a diagram is not connected , we simply put each connected component into normal form .",
    "the proof proceeds in several steps .",
    "we will describe an algorithm to put any connected chord diagram into the normal form described above via 2-term relations .",
    "+ step 1 : we first deal with chords which have both endpoints on the same component . to begin with",
    ", any pair of intersecting chords which have all four endpoints on the same component can be slid to the bottom of the component , away from any other chords , to form a two - humped camel as in @xcite .",
    "an isolated chord with both endpoints on the same component can also be slid down to the bottom , forming a one - humped camel .",
    "see figure  [ f : factor ] for examples of these moves .",
    "[ h ] @xmath105    we are left with chords with both endpoints on the same component which only intersect chords which lie between two different components . by sliding this chord over one of the chords it intersects ,",
    "its endpoints are now on two different components , as shown in figure  [ f : step1 ] .",
    "[ h ] @xmath106    step 2 : our next step is to put every chord connecting two different components on a different horizontal `` level '' ; in particular , we will remove intersections between chords between the same two components .",
    "say that we have @xmath12 chords between components . select a chord arbitrarily , which we will denote chord @xmath107 . without loss of generality ,",
    "assume @xmath107 connects components 1 and 2 .",
    "we will move @xmath107 to the top level .",
    "as we move it up , if we come to a chord with an endpoint on components 1 or 2 which is above @xmath107 we move that endpoint below @xmath107 via a 2-term relation , as shown in figure  [ f : step2 ] .",
    "[ h ] @xmath108    ultimately , the endpoints of @xmath107 will lie above the endpoints of any other chord . during this process , some chords may have had both their endpoints moved to the same component - remove or modify these chords as in step 1 ( notice that this only reduces the number of chords between components from @xmath12 ) .",
    "we are left with _ at most _",
    "@xmath109 chords connecting components , all below @xmath107 .",
    "so we can continue the process inductively , ending with all chords between components horizontal , at different levels ( and with a caravan at the bottom of each component ) .",
    "+ step 3 : now we consider one component of the diagram , say component 1 , and move all the chords with an endpoint on component 1 to a higher level than all the other chords in the diagram ( leaving chords with both endpoints on the same component at the bottom ) .",
    "we will denote by an _",
    "( i , j)-chord _ a chord with endpoints on components @xmath43 and @xmath44 .",
    "if a ( 1,@xmath43)-chord lies directly below an ( @xmath110)-chord along component @xmath43 , we can use a 2-term relation to move the ( 1,@xmath43)-chord above the other chord , in the process transforming it into a ( 1,@xmath44)-chord , as in figure  [ f : step3 ] .",
    "[ h ] @xmath111    since there are only a finite number of chords , we can successively move all chords with one endpoint on component 1 above all other chords ( while the other endpoint may move , one will always remain on component 1 ) .",
    "+ step 4 : let @xmath107 be the top chord at this point ; without loss of generality , @xmath107 is a ( 1,2)-chord .",
    "let @xmath112 be the number of ( 1,@xmath43)-chords , and @xmath113 .",
    "now move @xmath107 down component 1 , stripping other chords off of component 1 by 2-term relations , transforming them from ( 1,@xmath43)-chords to ( 2,@xmath43)-chords , reversing the move from step 2 shown in figure  [ f : step2 ] .",
    "continue this until @xmath107 encounters another ( 1,2)-chord , @xmath114 .",
    "now move @xmath107 back up as in step 3 ( see figure [ f : step3 ] ) ; when it is again at the top , it will be a ( 1,@xmath43)-chord for some @xmath43 .",
    "repeat the process for @xmath114 , moving it up to just below @xmath107 , and with all the other ( 1,2)-chords .",
    "this reduces @xmath115 to @xmath116 , though the chords may no longer be ( 1,2)-chords .",
    "we can relabel the components so that @xmath107 is once again a ( 1,2)-chord and repeat the process .",
    "each repetition reduces @xmath115 , until we reach a point where @xmath117 ( i.e. all chords with an endpoint on component 1 are ( 1,2)-chords ) , and the ( 1,2)-chords lie above all other chords in the diagram .",
    "finally , we can reduce @xmath116 to 1 or 2 by noticing that whenever @xmath118 , we can factor out a 2-humped camel and reduce @xmath116 by 2 , as in figure  [ f : reduce ] .",
    "+    [ h ] @xmath119    step 5 : we can now repeat steps 3 and 4 for component 2 , and then for each component in turn . we are left with a diagram which is almost in normal form - the final step is to move all of the caravans to component 1 .",
    "we can move a caravan from the @xmath43th component to the @xmath120th component by sliding it over a chord between the two components , as in figure  [ f : step5 ] .",
    "[ h ] @xmath121    any other chords between the two components can be slid over the caravan in turn by 2-term relations , leaving the caravan below the chords connecting components @xmath122 and @xmath123 .",
    "continuing in this way , the caravans can be moved to component 1 , and finally pushed to to bottom of component 1 as in step 1 .",
    "this completes the proof of theorem [ t : normalform ] .",
    "@xmath91      in this section we will define the adjacency matrix for an intersection graph , and show that its rank and determinant ( over @xmath124 ) are regular graph weight systems .    [ d : adj ] given a directed graph g with n vertices , @xmath125 , such that each vertex @xmath126 has a label @xmath127 , the * adjacency matrix of g * , or adj(g ) , is the @xmath128 matrix defined by : @xmath129 @xmath130    these matrices can be viewed as bilinear forms over @xmath124 , but unlike the case for knots @xcite , they are not generally symmetric , so their classification is much more difficult ( and still , to my knowledge , an open question ) .",
    "we are interested in the notion of _ congruence _ of such matrices .",
    "we are particularly interested in the adjacency matrices of _ semisymmetric _ graphs ; which have the property ( which we will also denote by semisymmetry ) that if the @xmath43th diagonal element is 0 , then the @xmath43th row and column are the same .",
    "we say that two @xmath131 matrices a and b are * congruent * ( denoted @xmath132 ) if there is an invertible matrix p such that @xmath133 .",
    "one of our main results is that the congruence class of the adjacency matrix ( over @xmath124 ) satisfies the 2-term relation , and so induces a regular graph weight system .    for any graph g in e , @xmath134 .",
    "proof : reordering the vertices of @xmath80 changes @xmath135 by a congruence ; in this case , @xmath136 is the result of doing a corresponding reordering of the rows of the identity matrix .",
    "so we can assume that the first two rows and columns of @xmath135 and @xmath137 correspond to the vertices @xmath84 and @xmath88 .",
    "the matrices are identical except for the first row and column .",
    "say that @xmath84 has label @xmath138 and @xmath88 has label @xmath139 , so in @xmath59 @xmath84 has label @xmath140 .",
    "an entry @xmath141 ( where @xmath142 ) is equal to @xmath143 ( mod 2 ) , and similarly for the first column .",
    "@xmath144 if and only if @xmath145 , i.e. if @xmath146 , so @xmath147",
    ". finally , @xmath148 if @xmath149 , and 1 otherwise .",
    "we have five cases .",
    "+   + case 1 : @xmath150 . in this case",
    "@xmath151 and @xmath152 ( due to the semisymmetry of the graph ) .",
    "so , mod 2 , @xmath153 .",
    "+   + case 2 : @xmath154 . in this case",
    "@xmath155 and @xmath152 .",
    "so , mod 2 , @xmath156 .",
    "+   + case 3 : @xmath157 . in this case ,",
    "@xmath158 and @xmath159 , and @xmath160 .",
    "so , mod 2 , @xmath161 .",
    "+   + case 4 : @xmath162 . in this case ,",
    "@xmath163 and @xmath164 , and @xmath160 .",
    "so , mod 2 , @xmath161 .",
    "+   + case 5 : @xmath165 all different . in this case",
    "@xmath155 and @xmath166 .",
    "so , mod 2 , @xmath161 .",
    "+ we conclude that @xmath167 .",
    "therefore @xmath135 and @xmath137 are congruent by a matrix @xmath136 , where @xmath136 is the elementary matrix constructed from the identity matrix by adding the second row to the first row . in other words , @xmath136 is the same as the identity , except for the 2 by 2 matrix in the upper left corner , which is @xmath168 $ ] .",
    "@xmath91    the congruence class of the adjacency matrix of the intersection graph is invariant under the 4-term relations .",
    "the determinant ( mod 2 ) and rank ( over @xmath124 ) of the adjacency matrix of the intersection graph are regular graph weight systems .",
    "proof : if @xmath136 is invertible over @xmath124 , the rank of @xmath169 is the same as the rank of @xmath84 .",
    "in addition , @xmath170 ( mod 2 ) , so the determinant is also a congruence invariant mod 2 .",
    "@xmath91      for knots , the conway and homfly weight systems can be interpreted via intersection graphs @xcite .",
    "to what extent can we do the same for string links ?",
    "in general , this is still an open problem , but we can offer a few initial results .",
    "let us recall the definitions of the conway polynomial and weight system .",
    "the conway polynomial @xmath171 of a link is a power series @xmath172 .",
    "it can be computed via the skein relation ( where @xmath173 are as in figure  [ f : skein ] ) :    [ b ] @xmath174",
    "@xmath175 @xmath176 we define the conway polynomials of a string link as the conway polynomial of the link formed by closing the string link in the natural way .",
    "the coefficient @xmath177 is a finite type invariant of type @xmath12 @xcite , and therefore defines a weight system @xmath178 of degree @xmath12 .",
    "the collection of all these weight systems is called the conway weight system , denoted @xmath179 .",
    "consider a chord diagram @xmath34 , together with a chord @xmath10 .",
    "let @xmath180 be the result of _ surgery on v _",
    ", i.e. replacing @xmath10 by an band which preserves the orientation of the components , and then removing the interior of the band and the intervals where it is attached to @xmath34 , as shown in figure  [ f : surgery ]    [ h ] @xmath181    ( so @xmath180 may have multiple boundary circles ) .",
    "the skein relations for the conway polynomial give rise to the following relations for @xmath179 : @xmath182 @xmath183    it is easy to show @xcite that this weight system satisfies the 2-term relations of section [ s:2term ] .",
    "simply surger the two chords ; the 2-term relation then says just that one band can be `` slid '' over the other , which does nt change the topology of the diagram .",
    "bar - natan and garoufalides also showed that the weight system for the conway polynomial for knots is just the determinant of the adjacency matrix for the intersection graph , mod 2 .",
    "the next theorem extends this result to string links with two components .",
    "[ t : conway2 ] for any chord diagram d on a string link with two components , @xmath184 ( mod 2 ) .",
    "proof : since both of these weight systems satisfy the 2-term relations , it suffices to show that they agree on diagrams in normal form ( see section [ ss : chord2term ] ) . for string links with two components , normal form",
    "consists of a caravan on the first component , and 0 , 1 , or 2 parallel chords between the two components .",
    "say that the caravan has @xmath101 1-humped camels and @xmath102 2-humped camels , and there are @xmath85 chords between the components ( @xmath185 ) .",
    "then @xmath186^l \\oplus [ 0]^{m_1 } \\oplus \\left[{\\matrix{0 & 1 \\cr 1 & 0}}\\right]^{m_2}$ ] .",
    "so @xmath187 ( mod 2 ) and @xmath188 ( mod 2 ) . the product of the rank and determinant is 1 ( mod 2 ) when @xmath189 and @xmath190 , and 0 otherwise .",
    "on the other hand , if we surger all the chords of the diagram , and close the string link , we obtain an unlink with @xmath191 components when @xmath192 , and @xmath193 when @xmath194 , which means that @xmath195 only when @xmath196 and @xmath194 .",
    "so the two weight systems agree . @xmath91    with more than two components ,",
    "the situation is more complicated ; in fact , the conway weight system is not always determined by the adjacency matrix of the intersection graph .",
    "figure  [ f : counterexample ] shows two chord diagrams @xmath30 and @xmath31 on 4 components which illustrate this .",
    "[ h ] @xmath197    it is easy to see that these intersection graphs for these diagrams differ only in the labeling of the vertices , so :    @xmath198\\ ] ]    however , surgering the chords in @xmath30 yields a string link whose closure has one component , and surgering the chords in @xmath31 yields a string link whose closure has 3 components .",
    "therefore , @xmath199 , but @xmath200 .",
    "however , we can at least give a sufficient condition for @xmath201 to be trivial which depends only on the adjacency matrix .",
    "[ p : suff ] let d be a string link chord diagram of degree k on n components . if either of the following conditions holds , then c(d ) = 0 .",
    "* @xmath202 .",
    "* @xmath203 is even .",
    "proof : the first condition means that , in the normal form , there will be an isolated chord in the caravan , so @xmath201 will be trivial .",
    "the second condition comes from observing that every surgery of a chord in @xmath34 the number of components in the closure of @xmath34 by 1 ( either adding or removing a component ) . since we begin with @xmath12 components , the number of components after all the chords are surgered is congruent to @xmath203 modulo 2 .",
    "so @xmath201 can be non - trivial only if @xmath204 mod 2 .",
    "hence , if @xmath203 is even , then @xmath205 .",
    "@xmath91    now we will consider the ( framed ) homfly weight system for string links .",
    "the homfly invariant is the laurent polynomial @xmath206 $ ] defined by the following skein relations @xcite ( @xmath207 is the result of adding a positive kink to the link @xmath208 ) : @xmath209 @xmath210 @xmath211 @xmath212 if we make the substitutions @xmath213 and @xmath214 , and expand the resulting power series , we transform the homfly polynomial into a power series in @xmath215 , whose coefficients are finite type invariants ( of regular isotopy ) .",
    "these invariants give rise to regular weight systems which we can collect together as the homfly regular weight system @xmath81 .",
    "the skein relations above give rise to the following relations for @xmath81 , by looking at the first terms of the power series ( as before , @xmath180 is the result of surgering the chord @xmath10 in @xmath34 ) : @xmath216 @xmath217 @xmath218 so if @xmath34 is an unlink of @xmath2 components , @xmath219 .",
    "since the first of these relations is almost the same as for the conway weight system @xmath179 , the same argument shows that @xmath81 satisfies the 2-term relations .",
    "we can now consider string link diagrams with two components ( as with the conway weight system , the homfly weight system is not necessarily determined by the adjacency matrix of the intersection graph for chord diagrams on more than two components ) .",
    "[ t : homfly2 ] for any chord diagram d of degree k on a string link with 2 components , let @xmath220 . if r is odd , then @xmath221 ; if r is even , then @xmath222 .",
    "proof : as with theorem [ t : conway2 ] , it suffices to show that the weight systems agree on diagrams in normal form . let @xmath34 be the diagram with @xmath101 one - humped camels and @xmath102 two - humped camels on component 1 , and @xmath85 chords between the two components ( @xmath185 ) ( so the degree of @xmath34 is @xmath223 ) . as before , @xmath186^l \\oplus [ 0]^{m_1 } \\oplus \\left[{\\matrix{0 & 1 \\cr 1 & 0}}\\right]^{m_2}$ ] ,",
    "so the rank is @xmath224 .",
    "@xmath225 is even when @xmath192 and odd when @xmath194 .    on the other hand , if we surger all the chords ( each time multiplying @xmath81 by @xmath226 ) , the resulting link has @xmath191 components when @xmath192 ( and @xmath225 is even ) , and @xmath193 components when @xmath194 ( and @xmath225 is odd ) .",
    "so when @xmath225 is even , @xmath227 , and when @xmath225 is odd , @xmath228 .",
    "@xmath91 +   + remark : if we let @xmath229 and @xmath230 , then @xmath231 .",
    "according to theorem [ t : homfly2 ] , if @xmath34 is a string link chord diagram with two components , we will have @xmath232 in this case _ unless _",
    "@xmath233 is odd ( in which case @xmath234 ) .",
    "but this is exactly the case when @xmath235 ( since the matrix has full rank ) and @xmath236 mod 2 , so @xmath195 .",
    "so the formulas for the conway and homfly weight systems agree in this case .",
    "there are several obvious questions and directions for further research .",
    "figure [ f : counterexample ] gives an example of chord diagrams on 4 components where the adjacency matrix of the intersection graph is insufficient to determine the conway and homfly weight systems .",
    "however , this example seems to depend strongly on there being 4 components - it is not clear how to find connected examples with , say , 5 components where the adjacency matrix is insufficient . and",
    "certainly the adjacency matrix ( as shown by the example in figure [ f : counterexample ] does not contain all the information of the intersection graph - in particular , the information contained in the vertex labels .",
    "this leads to our next question :            this question is still open for knots , as well , though some progress has been made @xcite .",
    "some work has been done by the author @xcite for the case when the intersection graph is a tree , but this is only a bare beginning .        10 bar - natan , d. : on the vassiliev knot invariants , _ topology _ 34 , no .",
    "2 , pp . 423 - 472 , 1995 bar - natan , d. and garoufalidis , s. : on the melvin - morton - rozansky conjecture , _ invent .",
    "_ 125 , pp .",
    "103 - 133 , 1996 birman , j. and lin , x.s . : knot polynomials and vassiliev s invariants , _ invent .",
    "_ 111 , pp .",
    "225 - 270 , 1993 bouchet , a. : circle graph obstructions , _ journal of combinatorial theory , series b _ , 60 , pp .",
    "107 - 144 , 1994 chmutov , s.v . and duzhin , s.v .",
    ": the kontsevich integral , _ acta applicandae math .",
    "155 - 190 , 2001 chmutov , s.v . ,",
    "duzhin , s.v . and",
    "lando , s.k .",
    ": vassiliev knot invariants i , ii , iii , _ advances in soviet mathematics _ 21 , pp .",
    "117 - 145 , 1994 habegger , n. and lin , x.s . :",
    "the classification of links up to link - homotopy , _",
    "j. of the amer .",
    "3 , no . 2 , 1990 ,",
    "389 - 419 kontsevich , m. : vassiliev s knot invariants , _ advances in soviet mathematics _ , vol .",
    "16 , part 2 , pp .",
    "137 - 150 , 1993 lando , s. : on a hopf algebra in graph theory , _ journal of combinatorial theory , series b _ ,",
    "v.80 , p. 104 - 121 , 2000",
    "le , thang : unpublished , 1996 lickorish , w.b . : _ an introduction to knot theory _ , gtm vol .",
    "175 , springer , new york , 1997 mellor , b. : the intersection graph conjecture for loop diagrams , _ journal of knot theory and its ramifications _ , vol . 9 , no . 2 , 2000 .",
    "also see arxiv : math.gt/9807033 mellor , b. : a few weight systems arising from intersection graphs , _",
    "michigan math .",
    "j. _ , vol .",
    "509 - 536 , 2003 . also see arxiv : math.gt/0004080 mellor , b. : tree diagrams for string links , preprint , may 2004 , arxiv : math.gt/0405537 mellor , b. : tree diagrams for string links ii : determining chord diagrams , preprint , august 2004 , arxiv : math.gt/0408286 mellor , b. : weight systems for milnor invariants , in preparation meng , g. : bracket models for weight systems and the universal vassiliev invariants , _ topology and its applications _ 76 ,",
    "47 - 60 , 1997 morton , h.r . and cromwell , p.r .",
    ": distinguishing mutants by knot polynomials , _ journal of knot theory and its ramifications _ 5 , no .",
    "225 - 236 , 1996 milnor , j. and husemoller , d. : _ symmetric bilinear forms _ , springer - verlag , new york , 1973 stanford , t. : finite - type invariants of knots , links , and graphs ,",
    "_ topology _ 35 , no .",
    "4 , pp . 1027 - 1050 , 1996 vassiliev , v.a .",
    ": cohomology of knot spaces , in _ theory of singularities and its applications _",
    "arnold ) , _ advances in soviet mathematics _ , vol .",
    "1 , pp . 23 - 69 , 1990"
  ],
  "abstract_text": [
    "<S> we extend the notion of intersection graphs for chord diagrams in the theory of finite type knot invariants to chord diagrams for string links . </S>",
    "<S> we use our definition to develop weight systems for string links via the adjacency matrix of the intersection graphs , and show that these weight systems are related to the weight systems induced by the conway and homfly polynomials . </S>"
  ]
}
{
  "article_text": [
    "with the discovery of higgs particle at the cern large hadron collider , precision measurements are expected at a future international linear collider to explore new physics beyond the standard model . in tandem with experiments , an accurate theoretical prediction is required . to meet such a demand , higher order correction in perturbative quantum field theory",
    "becomes more and more important , and methods to evaluate multi - loop integrals precisely should be provided .",
    "we have been developing dcm ( direct computation method ) for loop integrals @xcite .",
    "this is a fully numerical method of the combination of multi - dimensional integration and the extrapolation technique .",
    "it is known that the accurate numerical evaluation of the integral is a hard problem due to its divergent nature .",
    "yuasa et al .",
    "@xcite reported that the numerical evaluation is numerically unstable with double - precision operations . a solution to",
    "this difficulty is to compute the integral in multi - precision arithmetic , that is , it needs more bits for mantissa than double - precision .",
    "in addition , we have a case that needs more bits for exponent . with double exponential formulas for numerical integration ( de ) @xcite",
    ", we can estimate that 15-bit wise exponent is required to reduce a relative error smaller than a reference value , although the exponent of double - precision is only 11-bit wise .",
    "there are several ways to accomplish multi - precision arithmetic .",
    "one way is to use the specific softwares , for examples , gmp @xcite , mpfr @xcite , arprec @xcite , mpfun90 @xcite , dd / qd @xcite , and quadmath on a new version of gnu compiler .",
    "these softwares are easy to use .",
    "however , high performance can not be expected , since one multi - precision arithmetic operation is realized with , at least , more than 10 double - precision arithmetic operations in these softwares .",
    "another way is to design a new , dedicated hardware which has circuits for calculation with precision higher than double - precision .",
    "we have been developing such a hardware based on the fundamental idea of grape originally developed for gravitational @xmath0-body simulations @xcite .",
    "we designed grape - multi - precision ( mp ) processor which consisted of a number of processing elements ( pe ) and memory components with dedicated circuits for quadruple , hexuple , octuple - precision arithmetic .",
    "we implemented this processor on a structured asic ( application specific integrated circuit ) which was called grape - mp @xcite , and on an fpga ( field programmable gate array ) board with a control processor , which was called grape - mpx @xcite . on these systems",
    ", we measured the performance of quadruple , hexuple , octuple - precision calculation and obtained the higher performance compared to a software implementation .    in this work",
    ", we developed a new system called grape9-mpx .",
    "it is similar to grape - mpx but is a rather larger system .",
    "this means that larger number of pes can be implemented in the new system , which will be suited for large scale simulations .",
    "in addition to designing a hardware , we have been developing a programming interface named goose and lsump which enable us easily to use grape9-mpx .",
    "this paper is organized as follows .",
    "next section covers a brief explanation of the design and the implementation of the new system from hardware and software viewpoints . in section 3 , we briefly explain feynman loop integrals used for the performance measurement .",
    "the results are shown in section 4 .",
    "the last section is devoted to the summary and our future prospects .",
    "figure [ fig : imag - g9mpx ] shows a schematic diagram and a picture of grape9-mpx system .",
    "it is an accelerator which is connected to a host computer .",
    "it consists of fpga boards ( up to 8 boards available ) which are housed on a pcie extender board ( g9 mg ) . for the fpga board , we used altera arria v board from altera co. @xcite . on this fpga",
    ", we implemented the mp processor and its control processors ( cp ) .",
    "the mp processor consists of pes and memory components for quadruple / hexuple / octuple - precision arithmetic ( named as mp4/mp6/mp8 ) , which forms a single - instruction - multiple - data ( simd ) processor .",
    "each pe has a floating - point multiply unit and an add unit which perform in every clock cycle .",
    "note that for mp4 , we used the numerical representation compatible with ieee-754 - 2008:binary128 format . for details of the pe , cp , and the numerical representations , see daisaka et al .",
    "@xcite and nakasato et al .",
    "@xcite .",
    "one of applications suited for our system is an interaction type calculation as @xmath1 where @xmath2 is @xmath3-th element of @xmath4 , @xmath5 is @xmath6-th element of @xmath7 , and @xmath8 is the number of elements of @xmath7 .",
    "the function @xmath9 describes an interaction form of @xmath2 and @xmath5 .",
    "note that data @xmath2 is set on @xmath3-th pe , whereas data @xmath5 is set on all pe , then each pe calculates @xmath9 and sums up from @xmath10 to @xmath11 in accordance with instructions .",
    "an example of this type calculation is gravitational interactions among particles",
    ". we should note that a multi - dimensional integration can be expressed in a similar form by _ loop fusion _ technique that merges multiple loops into a single loop .",
    "this indicates that we can accelerate the calculation of feynman loop integrals effectively by using grape9-mpx .",
    "table [ logic_utilization ] summarizes our current implementation of mp4/mp6/mp8 processors on the fpga board .",
    "the peak performance of mp4 , for example , can be estimated as 2 ( operations ) @xmath12 36 ( pes ) @xmath12 92 ( mhz ) = 6.6 gflops per board .",
    "it adds up to 26.4 gflops for the system with 4 boards .    .",
    "number of pes , clock speed , and theoretical peak performance for mp4/mp6/mp8 implemented on the fpga . [ cols=\"<,<,<,<\",options=\"header \" , ]      we have also developed goose compiler which provides a programming interface for grape9-mpx system .",
    "figure [ fig : gooseflow ] shows the flow of the compile process for our system , and the part of a sample program for one - loop box integral .",
    "goose is a directive base compiler like openmp , in which a directive is inserted in an original code . by the directive ( # pragma goose parallel seen in the sample code ) , goose extracts the loop next to the directive and generates an intermediate representation which is like an assembler code .",
    "goose also generates api calls in which functions of i / o interfaces for grape9-mpx are embedded . in order to convert the intermediate representation to machine instructions ( kernel code ) for the mp processor",
    ", goose uses lsump backend @xcite which is a domain specific language ( dsl ) compiler specially developed for the mp processor .",
    "the kernel code is read by an executable file which is generated from the api calls by c / c++ compiler . for more detail , see nakasato @xcite .",
    "figure [ fig:2lbc-3ls ] shows the two - loop crossed box diagram and the three - loop selfenergy diagram used for the performance measurement .     and",
    "@xmath13 denote a momentum of an external line and a feynman parameter , respectively .",
    ", width=151 ]     and @xmath13 denote a momentum of an external line and a feynman parameter , respectively .",
    ", width=132 ]    the number of dimensions of the loop integral is six for the two - loop crossed box , and seven for the three - loop selfenergy , respectively .",
    "we consider the case where all masses of the internal lines are 1 and set the mandelstam variables @xmath14 and the external momenta @xmath15 for the two - loop crossed box diagram and @xmath16 and @xmath17 for the three - loop selfenergy diagram , respectively .",
    "we choose these values to compare numerical results to ones in the previous studies @xcite .    with these parameters , the integrals of the two - loop crossed box with variable transformations from @xmath18 to @xmath19 to change the integration domain to the unit cube from the unit simplex",
    "is expressed as @xmath20 where @xmath21 with @xmath22 .",
    "note that the integration domain for three - loop selfenergy diagram , @xmath23 , can be changed by the similar way .    in order to evaluate @xmath24 and @xmath23 , we used de @xcite iteratively for the multi - dimensional integration .",
    "computation time for the numerical integration depends on the total number of evaluation points , @xmath25 . in order to take advantage of the hardware characteristics of grape9-mpx",
    ", we divide @xmath25 into two parts , @xmath3-loop ( outer loop ) part and @xmath6-loop ( inner loop ) part , so as to satisfy @xmath26 .",
    "this is realized by _ loop fusion _ technique , in which the outer 3-dimensional integration in eq .",
    "( [ eq : i2lbc ] ) can be performed in _ i_-loop and the most inner 3-dimensions in _ j_-loop . in the performance measurements ,",
    "we set @xmath27 to be @xmath28 for two - loop crossed box and @xmath29 three - loop selfenergy , respectively . on the other hand , we vary @xmath30 where @xmath31 .",
    "hereafter , we call the maximum problem size for @xmath32 . in the maximum problem size ,",
    "@xmath25 is @xmath33 for the two - loop crossed box , and @xmath34 for the three - loop selfenergy , respectively .",
    "the numerical results in quadruple precision obtained by grape9-mpx in the maximum problem size are @xmath35 and @xmath36 , which are within the relative errors of @xmath37 for the two - loop crossed box and @xmath38 for the three - loop selfenergy compared to the previous works @xcite .",
    "it seems that the error is slightly larger because of smaller number of @xmath25 , but the calculation with this error level is achieved in a very short time , as seen later .",
    "we measured the performance of grape9-mpx with up to 4 fpga boards .",
    "it is connected a linux pc ( scientific linux 6.5 ) with intel xeon 2687w ( 3.4ghz ) cpu on asrock xtreme11 motherboard ( x79 chipset ) .",
    "the performance results are plotted in fig.[fig : result-2lb-3lse ] . from this figure",
    ", we can see that for the two - loop crossed box integral , the effective performance in the maximum problem size was 2.4 gflops with a single board , 4.7 gflops with 2 boards , and 9.1 gflops with 4 boards , respectively . on the other hand , the effective performance for the three - loop selfenergy integral in the maximum problem size was 8.7 gflops with 4 boards .",
    "this figure also shows that the speed up by multiple boards is well scalable in the maximum problem size .",
    "it becomes 3.8 times faster using 4 boards , and 1.9 times faster using 2 boards than using a single board . on the other hand ,",
    "the scalability is not good in smaller @xmath39 .",
    "this is because the overhead by communication between the grape9-mpx boards and the host computer via pci express is not negligible for smaller @xmath40 .",
    "we compared the efficiency of the effective performance for the two - loop crossed box integral and for the three - loop selfenergy integral .",
    "we show that it is about 34% of the theoretical peak performance for the two - loop crossed box , whereas about 33% for the three - loop selfenergy .",
    "the reason why the latter is slightly lower than the former comes from the difference of the number of instructions . from lsump ,",
    "the operation count of the instruction is 91 for two - loop crossed box , whereas it is 89 for three - loop selfenergy .",
    "we also compared the computation time for the two - loop integral in the maximum problem size measured in grape9-mpx of mp4 with 4boards , and the time measured in software implementations with the same numerical format ( 15-bit exponent and 112-bit mantissa ) .",
    "the measured calculation time is 21.3 sec for grape9-mpx , 1074.7 sec for quadmath on gcc4.6.3 , and 6086.7 sec for gmp - mpfr .",
    "although we used openmp for the multi - threaded computing and the number of threads used was 16 , grape9-mpx system was 52.9 times faster than quadmath and , 319.5 times faster than gmp - mpfr .",
    "thus , we could show the advantage of our system in the performance .",
    "we have developed grape9-mpx system , an accelerator system for multi - precision arithmetic operations which can accelerate the calculation of feynman loop integrals .",
    "our system consists of multiple fpga boards in which a lot of pes are implemented and forms simd way .",
    "each pe has a dedicated logic for multi - precision operations .",
    "we measured the performance of the system in quadruple precision ( 15-bit exponent and 112-bit mantissa ) for the two - loop crossed box and the three - loop selfenergy integrals , and got the effective performance of 9.1 gflops and of 8.7 gflops with 4 boards in the maximum program size , respectively .",
    "one of the advantages of our system is that we have developed not only the hardware with high performance in multi - precision calculation , but also the programming interface which enables us to port applications easily for our system .",
    "the combination of goose and lsump provides a simple way to use grape9-mpx .",
    "all we have to do is to insert the directive in the original code .",
    "this simple programming model plays an essential role in treating various kinds of loop integrals in the automatic computation of feynman diagrams .",
    "although we mainly presented the results of mp4 in this paper , we have measured the performance of mp6 and mp8 for the same feynman loop integral . for the case of the two - loop crossed box",
    ", we achieved 4.4 gflops for mp6 and 2.3 gflops for mp8 with 4 boards , respectively .",
    "the detail of the results will appear in near future .",
    "we acknowledge the support from grants - in - aid for scientific research 23540328 and 24540292 ."
  ],
  "abstract_text": [
    "<S> higher order corrections in perturbative quantum field theory are required for precise theoretical analysis to investigate new physics beyond the standard model . </S>",
    "<S> this indicates that we need to evaluate feynman loop diagrams with multi - loop integrals which may require multi - precision calculation . </S>",
    "<S> we developed a dedicated accelerator system for multi - precision calculations ( grape9-mpx ) . </S>",
    "<S> we present performance results of our system for the case of feynman two - loop box and three - loop selfenergy diagrams with multi - precision . </S>"
  ]
}
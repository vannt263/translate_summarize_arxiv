{
  "article_text": [
    "since the introduction of virtual knots by kauffman @xcite as a generalization of classical knot theory , there has been considerable work in the area ( see , for example , the book - length survey by manturov and ilyutko @xcite ) . as with classical knots , one of the primary areas of research on virtual knots is defining invariants that will distinguish virtual knots .",
    "often , these invariants are generalizations of classical knot invariants ; however , the generalizations are often more complex than the original classical invariants .    in this paper , we focus on the virtual version of the alexander polynomial .",
    "the classical alexander polynomial is just the first of a sequence of invariants derived from the alexander module ; silver and williams @xcite generalized this construction to define an analogous module for virtual knots , and a series of polynomials @xmath1 for @xmath2 . for a classical knot , @xmath0 is always trivial , and the polynomial @xmath3 is equal to the classical alexander polynomial evaluated at @xmath4 . for virtual knots ,",
    "however , @xmath0 is _ not _ trivial , and so provides a tool for distinguishing among virtual knots ( and distinguishing virtual knots from classical knots ) .    while the invariant @xmath0 defined by silver and williams ( and , in somewhat different form , by sawollek @xcite ) is straightforward to compute for specific examples , it has not been computed for many infinite families of virtual knots . in part , this is because it does not satisfy the same nice skein relation as the classical alexander polynomial , so the computations become much more complex . in this paper",
    "we will provide a recursive formula for computing @xmath0 for an infinite family of _ virtual twist knots _ which generalize the classical twist knots .",
    "this formula allows us to use the virtual twist knots as test cases for conjectures about the behavior of @xmath0 in general .",
    "in particular , we use it to test a conjectured relation between @xmath0 and the _ odd writhe _ of kauffman @xcite .",
    "namely , @xmath5 , where @xmath6 is a particular factor of @xmath0 , and @xmath7 is the odd writhe of @xmath8 . using our recursive formula , we are able to prove the relationship for the virtual twist knots , and we conjecture that it holds for all virtual knots .",
    "our approach to virtual knots will be combinatorial .",
    "kauffman @xcite showed that virtual knots can be defined as equivalence classes of diagrams modulo certain moves , generalizing the reidemeister moves of classical knot theory .",
    "diagrams for virtual knots contain both classical crossings ( positive and/or negative crossings , if the knot is oriented ) and _ virtual _ crossings , as shown in figure [ f : crossings ] .",
    "two diagrams are equivalent if they are related by a sequence of the reidemeister moves shown in figure [ f : reidemeister ] .",
    "note that moves ( i)(iii ) are the classical reidemeister moves .",
    "kauffman @xcite showed that classical knots are equivalent by this expanded set of reidemeister moves if and only if they are equivalent by the classical reidemeister moves , so classical knot theory embeds inside virtual knot theory .      our definition of the alexander polynomial @xmath9 follows silver and williams @xcite .",
    "given a virtual knot diagram @xmath10 with @xmath11 classical crossings , labeled from @xmath12 to @xmath13 , an _",
    "arc _ of the diagram extends from one classical crossing to the next classical crossing ( ignoring any virtual crossings ) .",
    "note that these go from crossing to crossing , _ not _ undercrossing to undercrossing ( which is the usual notion of an arc in a classical knot diagram ) .",
    "so @xmath10 has @xmath14 arcs , which we label from @xmath15 to @xmath16 . at each classical",
    "crossing , we define two relations among the four arcs incident to that crossing . the relations depend on whether the crossing is positive or negative , as shown in figure [ f : alexander ] .",
    "the result is a system of @xmath14 linear equations in @xmath14 variables ( the arcs ) .",
    "we call the coefficient matrix for this system the _ alexander matrix _ for the knot diagram",
    ". we define @xmath17 as the determinant of the alexander matrix .",
    "note that changing the labeling of the arcs will permute the columns of the matrix , and can change the sign of @xmath18 ( on the other hand , reordering the crossings permutes _",
    "pairs _ of rows , so does not change the determinant ) .    to extend @xmath0 from an invariant of diagrams to an invariant of virtual knots , we need to see how it is affected by the reidemeister moves . since we only get relations at the classical crossings , moves ( i*)(iv * ) have no effect ( these moves do not change the arrangement of classical crossings ) . silver and williams",
    "@xcite analyzed the effect of reidemeister moves ( i)(iii ) , but only modulo the effect of permuting the labels on the arcs . in our calculations",
    ", we will need to keep track of these effects , so we are going to look more carefully at reidemeister moves ( i ) and ( ii ) ( we do not use move ( iii ) in our calculations ) .",
    "in fact , we discovered that silver and williams mistakenly claim that a reidemeister ( ii ) move does not affect @xmath0 ; this error is corrected in lemma [ l : r2 ] .",
    "first , however , we analyze the effect of a reidemeister ( i ) move . as in @xcite , we distinguish four types of reidemeister ( i ) move , shown in figure [ f : r1alexander ] .",
    "notice that we are fixing the labeling of the arcs ; in our proofs , we will need to account for differences in the labelings , but this is not difficult .",
    "[ l : r1 ] if @xmath10 is a virtual knot diagram , and @xmath19 is the result of applying a reidemeister ( i ) move to remove a crossing as in figure [ f : r1alexander ] , then :    * @xmath20 for a ( ia ) or ( ib ) move , and * @xmath21 for a ( ic ) or ( i d ) move",
    ".    we will prove the result for a move of type ( ia ) ; the proofs for the other cases are similar .",
    "the crossing shown in figure [ f : r1alexander](a ) gives two alexander relations : @xmath22 @xmath23 since we are assuming @xmath24 are the first three arcs , the alexander matrix @xmath25 for @xmath10 is : @xmath26 where @xmath27 is a submatrix and @xmath28 and @xmath29 are column vectors .",
    "expanding along the first row , we can calculate the determinant :    @xmath30    now , notice that in the new diagram , the new strand , @xmath31 , is involved in each crossing that the strands @xmath15 and @xmath32 were involved in .",
    "therefore , the alexander matrix @xmath33 for @xmath19 is : @xmath34 so as desired , @xmath35 .",
    "a similar argument holds for type ( ib ) , ( ic ) and ( i d ) moves .",
    "now we turn to the reidemeister ( ii ) move .",
    "again , we distinguish four types of reidemeister ( ii ) move , as shown in figure [ f : r2alexander ] .",
    "again , we give the arcs involved in the move the first 6 labels in the diagram , with odd labels along one strand and even labels along the other ( the choice of labels is made to simplify some of our later computations ) .",
    "[ l : r2 ] if @xmath10 is a virtual knot diagram , and @xmath19 is the result of applying a reidemeister ( ii ) move to remove two crossings as in figure [ f : r2alexander ] , then @xmath36 ( for all four types of reidemeister ( ii ) move ) .",
    "we will prove the result for moves of type ( iia ) ; the proofs for the others are similar .",
    "the alexander matrix @xmath25 for @xmath10 is : @xmath37 if we add the third row to the first and subtract the fourth row from the second , we get :    @xmath38 taking the cofactor expansion first along column @xmath39 , and then along column @xmath32 gives :    @xmath40 now , expanding along the second row gives :    @xmath41 in @xmath19 , arc @xmath31 is involved in each crossing that the arcs @xmath15 and @xmath42 were involved in in @xmath10 , and similarly arc @xmath43 is involved in each crossing that the arcs @xmath44 and @xmath45 were involved in in @xmath10 .",
    "therefore , the alexander matrix @xmath33 for @xmath19 is :    @xmath46 so @xmath47 , as desired .",
    "a similar argument shows that the same relation holds for the three other types of reidemeister ( ii ) moves .    from lemma",
    "[ l : r1 ] and lemma [",
    "l : r2 ] , two diagrams representing the same virtual knot can have alexander polynomials which differ by a factor of @xmath48 .",
    "typically , when we talk about the alexander polynomial for a _ knot _ , we normalize it to remove the indeterminacy . following silver and williams ,",
    "if @xmath8 is a virtual knot with diagram @xmath10 , we define : @xmath49 where @xmath50 is the lowest power of @xmath51 in @xmath17 , and @xmath52 is the sign of the term in @xmath53 with lowest total degree ( if there are multiple terms with the same lowest total degree , we choose the one where @xmath51 has the lowest degree ) .",
    "one of the most useful properties of the classical alexander polynomial is that it satisfies a recursive _ skein relation _ that makes it much easier to compute .",
    "silver and williams @xcite prove a similar skein relation for @xmath0 , but it has an indeterminacy that makes it difficult to use . in our next lemma , we remove this indeterminacy by considering diagrams rather than knots , and fixing a labeling for the arcs ; this will enable us to use the skein relation more easily ( at the cost of having to keep careful track of the labels on the arcs ) .",
    "our proof is essentially the same as in @xcite , but we include it for completeness .",
    "[ l : skein ] given labeled diagrams @xmath54 , @xmath55 and @xmath56 as shown in figure [ f : skein ] , we have @xmath57    for @xmath54 , the alexander matrix @xmath58 is :    @xmath59 taking the cofactor expansion along the second row , we get :    @xmath60+uv\\det \\left[\\alpha\\,\\delta\\,{\\bf a}\\right]+uv\\det \\left[\\alpha\\,\\gamma\\,{\\bf a}\\right ] - \\det\\left [ \\beta\\,\\gamma\\,{\\bf a}\\right ] - \\det \\left[\\alpha\\,\\gamma\\,{\\bf a}\\right ] + u\\det \\left[\\alpha\\,\\beta\\,{\\bf a}\\right ]    \\end{aligned}\\ ] ] for @xmath55 , the alexander matrix @xmath61 is :    @xmath62 taking the cofactor expansion along the second row , as with @xmath58 , we get :    @xmath63-uv\\det\\left[\\beta\\,\\delta\\,{\\bf a}\\right]-uv\\det\\left[\\beta\\,\\gamma\\,{\\bf a}\\right]+\\det\\left[\\beta\\,\\delta\\,{\\bf a}\\right ] + \\det\\left[\\alpha\\,\\delta\\,{\\bf a}\\right ] + u\\det\\left[\\alpha\\,\\beta\\,{\\bf a}\\right ]    \\end{aligned}\\ ] ] then : @xmath64+uv\\det \\left[\\alpha\\,\\delta\\,{\\bf a}\\right]+uv\\det \\left[\\alpha\\,\\gamma\\,{\\bf a}\\right ] - \\det\\left [ \\beta\\,\\gamma\\,{\\bf a}\\right ] - \\det \\left[\\alpha\\,\\gamma\\,{\\bf a}\\right ] + u\\det \\left[\\alpha\\,\\beta\\,{\\bf a}\\right ] \\\\ & \\quad - v\\det\\left[\\gamma\\,\\delta\\,{\\bf a}\\right ] + uv\\det\\left[\\beta\\,\\delta\\,{\\bf a}\\right ] + uv\\det\\left[\\beta\\,\\gamma\\,{\\bf a}\\right ] - \\det\\left[\\beta\\,\\delta\\,{\\bf a}\\right ] - \\det\\left[\\alpha\\,\\delta\\,{\\bf a}\\right ] - u\\det\\left[\\alpha\\,\\beta\\,{\\bf a}\\right ] \\\\ & = uv\\det\\left[\\alpha\\,\\delta\\,{\\bf a}\\right ] + uv\\det\\left[\\alpha\\,\\gamma\\,{\\bf a}\\right ] - \\det\\left[\\beta\\,\\gamma\\,{\\bf a}\\right ] - \\det\\left[\\alpha\\,\\gamma\\,{\\bf a}\\right ] \\\\ & \\quad + uv\\det\\left[\\beta\\,\\delta\\,{\\bf a}\\right ] + uv\\det\\left[\\beta\\,\\gamma\\,{\\bf a}\\right ] - \\det\\left[\\beta\\,\\delta\\,{\\bf a}\\right ] - \\det\\left[\\alpha\\,\\delta\\,{\\bf a}\\right ] \\\\ & = ( uv-1)\\left(\\det\\left[\\alpha\\,\\gamma\\,{\\bf a}\\right ] + \\det\\left[\\alpha\\,\\delta\\,{\\bf a}\\right ] + \\det\\left[\\beta\\,\\gamma\\,{\\bf a}\\right ] + \\det\\left[\\beta\\,\\delta\\,{\\bf a}\\right]\\right)\\end{aligned}\\ ] ] in @xmath56 , the arc @xmath31 is involved in each crossing that the arcs @xmath15 and @xmath44 were involved in , and similarly the arc @xmath65 is involved in each crossing that the arcs @xmath32 and @xmath39 were involved in .",
    "therefore , the alexander matrix @xmath66 for @xmath56 is : @xmath67 so : @xmath68 & = \\det\\left[\\alpha\\ \\ \\gamma+\\delta\\ \\ { \\bf a}\\right ] + \\det\\left[\\beta\\ \\ \\gamma+\\delta\\ \\ { \\bf a}\\right]\\\\ & = \\det\\left[\\alpha\\ \\gamma\\ { \\bf a}\\right ] + \\det\\left[\\alpha\\ \\delta\\ { \\bf a}\\right ] + \\det\\left[\\beta\\ \\gamma\\ { \\bf a}\\right ] + \\det\\left[\\beta\\ \\delta\\ { \\bf a}\\right]\\end{aligned}\\ ] ]",
    "so as desired , @xmath69 .    finally , we recall two more propositions due to silver and williams .    [",
    "p : factor]@xcite let @xmath70 be an oriented virtual link .    1 .",
    "@xmath71 divides @xmath72 .",
    "2 .   if @xmath70 is a knot , then @xmath73 divides @xmath72 .",
    "so if @xmath8 is a knot , @xmath74 divides @xmath75",
    ". we will let @xmath76 denote the quotient , so @xmath77    [ p : reverse ] @xcite given a diagram @xmath10 of a virtual knot @xmath8 , let @xmath78 be the result of switching every ( classical ) crossing of @xmath10 , @xmath79 be the reflection across a vertical line in the plane of the diagram , and @xmath80 the result of reversing all orientations .",
    "let @xmath81 , @xmath82 and @xmath83 be the corresponding virtual links .",
    "then for all @xmath84 ,    1 .",
    "@xmath85 2 .",
    "@xmath86 3 .",
    "we define the _ virtual twist knot _ @xmath88 as shown in figure [ f : virtualtwist ] . as compared to a classical twist knot , one of the crossings in the top clasp has been made virtual , and the crossings in the  twist \"",
    "have been divided into @xmath11 blocks of classical half - twists , each separated by a single virtual crossing , where the @xmath89th block consists of @xmath90 half - twists .",
    "the knot is oriented as shown in figure [ f : virtualtwist ] .",
    "if @xmath90 is positive , the crossings in block @xmath89 have positive sign ; if @xmath90 is negative the crossings have negative sign .    for the purposes of computing the alexander polynomial , we will fix a labeling of the arcs and crossings of the virtual twist knot .",
    "we label the crossing in the clasp @xmath12 ( as in figure [ f : virtualtwist ] ) , and label the other crossings @xmath91 from left to right in the twist . the two arcs to the left of the twist are labeled @xmath92 and @xmath93 as in figure [ f : virtualtwist ] .",
    "the arcs along the strand oriented from left to right are given odd labels @xmath94 , etc .",
    ", while the arcs along the strand oriented from right to left are given even labels @xmath95 etc .",
    "( the subscripts still increase from left to right ) .",
    "so at crossing @xmath96 , the orientations and labels match one of the two types in figure [ f : crossing ] ( here they are shown for positive crossings ; changing the sign of the crossing does not change the type ) .",
    "note that the crossings along the twist alternate between the two types , unless there is a virtual crossing in between .",
    "our goal is to compute the alexander polynomial @xmath0 for the virtual twist knots . in this section",
    ", we will find closed formulas for @xmath0 for four special infinite families of virtual twist knots .",
    "these will be the base cases for the recursive formula we derive in the next section .",
    "[ t : base ] given a sequence of @xmath97 ones , then :    * @xmath98 * @xmath99 * @xmath100 * @xmath101    here , we are computing the polynomials for the particular _ diagram _ shown in figure [ f : virtualtwist ] ; they are not yet normalized to give the polynomial for the knot",
    ".    we will prove the theorem for @xmath102 ; the proofs for the other cases are similar .",
    "define the following matrices : @xmath103 in @xmath104 , the real and virtual crossings alternate along the twist , starting and ending with a real crossing .",
    "so at each crossing in the twist , the  odd \" strand is coming down under the  even \" strand . hence , excluding the clasp , every crossing will be type 1 ( see figure [ f : crossing ] ) .",
    "so at crossing @xmath96 we get the submatrix : @xmath105 since the final classical crossing is _ not _ followed by a virtual crossing , the  odd \" strand leaves the twist as the bottom strand , and the crossing at the clasp will be positive .",
    "so the crossing at the clasp looks like : @xmath106 which gives rise to the submatrix : @xmath107 this gives us the following alexander matrix for @xmath102 : @xmath108 right - multiplying @xmath25 by the elementary block matrix @xmath109 shown below adds the @xmath89th column of @xmath25 multiplied by @xmath110 to the @xmath111th column of @xmath25 .",
    "@xmath112 in the case of @xmath102 , this means that right multiplying @xmath25 by @xmath113 will cancel the @xmath27 block in the @xmath89th row and @xmath111th column ( assuming @xmath114 ) .",
    "therefore , right - multiplying @xmath25 by the product : @xmath115 will reduce @xmath25 into upper triangular form while preserving its determinant .",
    "the determinant is then the product of the determinants of the block matrices along the diagonal . except for the entry in the first row and column ,",
    "every entry along the diagonal is @xmath116 , whose determinant is easily computed to be @xmath51 . because @xmath116 shows up @xmath97 times along the diagonal , we know that @xmath117 will be a factor of the determinant .",
    "the entry in first row and column , however , will take the form @xmath118 . for convenience ,",
    "define the matrix @xmath119 : @xmath120 the entry in the first row and column of the matrix can now be rewritten as @xmath121 , and the problem of computing its determinant is reduced to finding a general form for @xmath122 . to find such a form , notice that the following similarity relation holds :",
    "@xmath123 hence ,",
    "@xmath124 it is now straightforward to compute : @xmath125 since the product of the determinants of the other entries on @xmath25 s diagonal is @xmath126 , we see that : @xmath127 using the identity @xmath128 , we can factor @xmath129 as : @xmath130 a similar argument can be used to compute @xmath0 for @xmath131 , @xmath132 , and @xmath133 .",
    "we will use the skein relation of lemma [ l : skein ] to find a recursive formula for the alexander polynomial of the virtual twist knots ( more precisely , for the particular diagrams represented in figure [ f : virtualtwist ] ) .",
    "our first step is to find a formula for the alexander polynomial of the link that results when one of the classical crossings of a virtual twist knot is  smoothed . \" for this section , it is convenient to define the following functions : @xmath134    [ l : smoothed ] consider the virtual link diagram @xmath135 ( as shown in figure [ f : smoothed ] ) generated by smoothing out the first crossing in the @xmath89th block in the diagram of the virtual twist knot @xmath88 shown in figure [ f : virtualtwist ]",
    ". then @xmath136    by using reidemeister ( i ) moves to undo half - twists , the diagram for @xmath135 can be reduced to one of the virtual hopf links , @xmath137 or @xmath138 , shown in figure [ f : hopf ] .    using the labels shown in figure [ f : hopf ]",
    ", we compute that @xmath139 and @xmath140 , so the sign of @xmath141 ( for the given labeling ) depends on the sign of the crossing in the clasp of the original twist knot , @xmath88",
    ". this crossing is positive exactly when @xmath142 is odd , or when @xmath143 is even , so the final hopf link has @xmath144 .    by lemma",
    "[ l : r1 ] , the reidemeister ( i ) moves used to undo the half - twists will change @xmath0 as shown in figure [ f : reidemeister1 ] ( the equalities in the figure are between the polynomials of the diagrams shown ) . to see this",
    ", we note that the labelings require us to distinguish two sub - types for each move .",
    "if we compare the labels on a move of type ( ia@xmath145 ) to the label on a move of type ( ia ) in figure [ f : r1alexander ] , there are two differences to account for .",
    "first of all , the labels start at @xmath146 rather than 1 ; moving the three columns corresponding to these arcs to the left side of the matrix requires moving each of them past some number @xmath147 of other columns .",
    "then the new arc with label @xmath148 is moved back past the @xmath147 columns .",
    "altogether , this changes the determinant by a factor of @xmath149 .",
    "secondly , the order of the three columns differs from the order in figure [ f : r1alexander ] by a transposition ; this changes the determinant by a factor of @xmath150 .",
    "hence the effect of a move of type ( ia@xmath145 ) is to multiply the polynomial by @xmath151 , rather than by @xmath4 .",
    "similar reasoning shows that the effects of the other moves are as shown in figure [ f : reidemeister1 ] .",
    "we first consider removing twists to the right of the smoothed crossing in @xmath135 .",
    "each full twist involves two reidemeister ( i ) moves , one of type ( ia@xmath152 or ib@xmath152 ) and one of type ( id@xmath152 or ic@xmath152 ) ( depending on whether the crossings in the twist are positive or negative ) , and hence multiplies @xmath0 by @xmath153 .",
    "so in the @xmath154th block ( where @xmath155 ) , if @xmath156 is even then the effect of removing those twists is to multiply @xmath0 by @xmath157 .",
    "if @xmath156 is odd then the first half - twist is type ( ia@xmath152 or ib@xmath152 ) if an even number of ( real and virtual ) crossings preceded the @xmath154th block , and type ( id@xmath152 or ic@xmath152 ) otherwise .",
    "so the first half - twist contributes @xmath4 if @xmath158 is even and @xmath150 if @xmath158 is odd .",
    "so the final change is to multiply @xmath0 by : @xmath159 notice that if @xmath156 is even , then @xmath160 , @xmath161 , and we get @xmath157 . if @xmath156 is odd and @xmath158 even , we get @xmath162 , and if @xmath158 is odd , we get @xmath163 .",
    "the @xmath89th block differs slightly in that its first crossing was smoothed out to produce @xmath70 , so we are beginning with its second half - twist .",
    "observe that @xmath164 ( since @xmath165 ) , and that @xmath166 for any @xmath167 .",
    "hence , by similar reasoning as before , we see that the result of untwisting the @xmath89th block is to multiply @xmath0 by :    @xmath168    we must also remove any half - twists that remain to the left of the @xmath89th block , using moves of type ( ia@xmath145 or ib@xmath145 ) and ( id@xmath145 or ic@xmath145 ) . once again , removing a full twist changes @xmath0 by a factor of @xmath151 . in this case , only the type ( ia@xmath145 or ib@xmath145 ) moves change @xmath0 , so when a block has an odd number of crossings we need to determine which type of move is needed to remove the extra crossing .",
    "we look specifically at the first crossing in the block . a type ( ia@xmath145 or ib@xmath145 ) move is used to remove a type 2 crossing , which occurs as the first crossing in the block when @xmath158 is odd . notice that if @xmath158 is odd and @xmath156 is odd , then @xmath169 .",
    "so the change to @xmath0 from removing the twists in block @xmath154 , where @xmath170 , is to multiply by : @xmath171 combining all of these results with the value of @xmath0 for the virtual hopf link gives :    @xmath172 observe that if @xmath156 is even , then @xmath173 , and if @xmath156 is odd , then @xmath174 , so @xmath175 for any @xmath156 .",
    "also , @xmath176 .",
    "we can then reduce our expression for @xmath177 to :    @xmath178    we use lemma [ l : smoothed ] to derive a recursive formula for the alexander polynomial of a twist knot @xmath179 .",
    "we will derive the formula for the case when all @xmath90 s are nonnegative ; we will discuss later how to modify the formula when some of the blocks of crossings are negative .",
    "[ t : recursion ] given the diagram of the virtual twist knot @xmath88 shown in figure [ f : virtualtwist ] , then : @xmath180 where for a given knot @xmath8 , @xmath181 .",
    "we are going to use the skein relation of lemma [ l : skein ] .",
    "let @xmath182 , and suppose @xmath183 .",
    "all the crossings in the twists are positive , so choose the first crossing in the @xmath89th block to be the crossing we change to construct @xmath55 and @xmath56 . in @xmath55 ,",
    "changing the sign of the crossing gives us two crossings that we can remove by a reidemeister ( ii ) move , leaving us with a diagram for @xmath184 .",
    "figure [ f : reidemeister2 ] shows the two possible diagrams for @xmath55 , depending on whether the first crossing in the @xmath89th block was type 1 or type 2 . in either case , using lemma [ l : r2 ] , removing the two crossings changes @xmath0 by a factor of @xmath151 . to see this",
    ", we first move the columns corresponding to arcs @xmath185 through @xmath186 to the left of the alexander matrix ; since there are 6 columns , this requires an even number of transpositions , so the determinant remains unchanged .",
    "if the crossing changed was type 1 ( as on the left of figure [ f : reidemeister2 ] ) , then we apply a move of type ( iia ) ( see figure [ f : r2alexander ] ) , and @xmath0 changes by a factor of @xmath151 .",
    "if the crossing was type 2 , then we apply a move of type ( iib ) , only with the odd and even labels reversed .",
    "since there are three such pairs of labels before the move , and one pair after the move , reversing these labels does not change the sign of the determinant of the alexander matrix either before or after the move , so again the effect is to multiply @xmath0 by @xmath151 .",
    "so @xmath187 .",
    "now we turn to @xmath56 . if the crossing we smooth is type 1 , then we are in the situation of lemma [ l : skein ] , and @xmath188 .",
    "however , if the crossing is type 2 , we need to permute the labels to apply lemma [ l : skein ] .",
    "in particular , in figure [ f : skein ] , we would need to interchange @xmath15 and @xmath39 , @xmath44 and @xmath32 , and @xmath31 and @xmath65 .",
    "these effect of these three transpositions is to change the sign of @xmath189 , so we have @xmath190 . notice that the first crossing of the @xmath89th block is type 1 exactly when @xmath191 .",
    "so : @xmath192    now we can substitute the formula we found for @xmath189 in lemma [ l : smoothed ] .",
    "notice that the factor @xmath193 in the expression for @xmath189 exactly cancels the factor @xmath194 above .",
    "also , note that @xmath195 for @xmath196 .",
    "hence : @xmath197 we can then apply the skein relation to @xmath184 in the same way . again , changing the first crossing in the @xmath89th block to a negative crossing allows us to reduce @xmath55 to @xmath198 by a reidemeister ( ii ) move which gives us the relation : @xmath199 because the parity of each block is the same as it was in @xmath200 , we know that the number of reidemeister ( i ) moves of each type used to reduce @xmath56 to a virtual hopf link will remain unchanged except for the fact that the @xmath89th block now has size @xmath201 , so you have one fewer factor of @xmath151 .",
    "thus , we see that : @xmath202 and so @xmath203 if we continue to repeat the skein relation in this manner , inductively we find : @xmath204 continuing inductively , we find : @xmath205    then , after dividing through by @xmath74 , our formula becomes :    @xmath206 as desired .",
    "we now have an algorithm to compute @xmath207 :    1 .   first ,",
    "use theorem [ t : recursion ] to reduce the computation to finding @xmath208 .",
    "2 .   if @xmath209 for any @xmath89 with @xmath210 , then use a reidemeister ( ii * ) move to remove the two consecutive virtual crossings ( we will refer to this in the future as a contraction ) . do this for all such @xmath89 .",
    "this may result in longer blocks of classical crossings .",
    "3 .   check if we ve reduced @xmath211 to one of the following : @xmath102 , @xmath131 , @xmath132 , or @xmath133 .",
    "if we havent , we return to the first step .",
    "if we have , then we apply theorem [ t : base ] .",
    "4 .   finally , normalize the result to find the alexander polynomial of the virtual knot , rather than simply the diagram .",
    "this process will terminate because every every iteration reduces the number of classical and/or virtual crossings in the twist , unless we are at one of our base cases . to show how to use the process , we will compute a few examples .",
    "[ e:1block ] the knot @xmath212 ( with @xmath213 ) is the twist knot with @xmath147 ( positive ) classical crossings in the twist , and no virtual crossings ( except in the clasp ) . abusing notation ,",
    "let @xmath212 also denote the diagram for this knot following the pattern of figure [ f : virtualtwist ] .",
    "@xmath214 in this case , @xmath215 , @xmath216 and @xmath217 . also , from theorem [ t : base ] , @xmath218 and @xmath219 , which means @xmath220 .",
    "so : @xmath221 if we normalize this to find the alexander polynomial for the virtual knot @xmath212 ( rather than just the diagram ) , we get @xmath222    [ e:2blocks ] the knot @xmath223 ( with @xmath224 ) has two blocks of ( positive ) crossings in the twist , separated by a virtual crossing .",
    "as in the previous example , we will also let @xmath223 denote the diagram for this knot shown in figure [ f : virtualtwist ] . from theorem [ t : recursion ]",
    "we have @xmath225 observe that @xmath226 also , from theorem [ t : base ] we have @xmath227 and @xmath228 .",
    "combining these , we find : @xmath229 once we normalize the polynomial , we get : @xmath230    [ e : vt(7,4,3,5,9 ) ] consider the knot @xmath231 , with the diagram from figure [ f : virtualtwist ] .",
    "first observe that @xmath232 , @xmath233 , @xmath234 , @xmath235 , @xmath236 , @xmath237 and @xmath238 .",
    "so by theorem [ t : recursion ] , we have : @xmath239",
    "if we normalize this to get the invariant for the virtual knot , rather than the diagram , we get : @xmath240",
    "if some of the blocks of crossings are negative , we need to modify the algorithm outlined in the last section .",
    "theorem [ t : recursion ] still holds , with the caveats that each appearance of @xmath90 is replaced by @xmath241 , the term @xmath242 is _ subtracted _ whenever @xmath243 , and the twist knot is reduced to @xmath244 , where @xmath245 is the sign of the crossings in the @xmath89th block . in step",
    "( 2 ) of the algorithm , if we combine a block of positive and negative crossings , we can cancel some of the crossings using reidemeister ( ii ) moves , at the expense of multiplying the polynomial by a factor of @xmath151 for each reidemeister ( ii ) move .",
    "the end result of the algorithm will be one of @xmath246 , @xmath247 , @xmath248 , or @xmath249 .",
    "we can now use our skein relation and lemma [ l : smoothed ] to change any negative crossings to positive crossings , resulting in one of the base cases in section [ s : base ] .",
    "the proof of the following result is straightforward , and is left to the reader .",
    "( in the cases where the first block is @xmath250 , rather than @xmath251 , the crossing being changed is type 2 , and the sign in the skein relation changes . )",
    "[ c : negative ] in each case below , the twist knot has @xmath11 blocks , each with a single crossing ( except possibly the first and/or last ) , and the crossing in the @xmath89th block is negative .",
    "@xmath252    we will compute @xmath6 for @xmath253 . observe that @xmath254 , @xmath255 , @xmath256 , @xmath257 , @xmath236 , @xmath258 and @xmath259 .",
    "so by theorem [ t : recursion ] , we have : @xmath260 normalizing to get the invariant for the virtual knot , we get : @xmath261",
    "the choice of the clasp in the virtual twist knot @xmath179 shown in figure [ f : virtualtwist ] is somewhat arbitrary .",
    "we could well have picked any of the other clasps shown in figure [ f : clasps ] ( note that the clasp denoted @xmath262 is the one we have been using ) . in this section",
    "we will briefly discuss these other options .",
    "we first observe that some of these clasps are really equivalent .",
    "if @xmath263 is a string of twists , then we can use reidemeister moves to show that @xmath264 and @xmath265 ( see figure [ f : vta ] ) . also , @xmath266 ( where @xmath267 indicates that we have reversed the sign of each block of crossings in the twist ) and @xmath268 . then by proposition",
    "[ p : reverse ] we have : @xmath269    so the only really new class of virtual knots ( as far as @xmath0 is concerned ) is @xmath270 .",
    "we can compute the base cases and recursion formula much as we did for @xmath271 ; in fact , since classical hopf links have @xmath272 , the recursion is even simpler in this case .",
    "the next theorem gives the results of these computations ; the details are left to the reader .",
    "[ t : vtab ] given a sequence of @xmath97 ones , then : @xmath273 moreover , if all crossings in the twist are positive ( negative crossings can be dealt with as in section [ s : negative ] ) , then @xmath274 after normalizing , this implies @xmath275    [ e : vtab ] as an example , we will compute @xmath276 , where @xmath277 . by the recursion , after normalizing , we have @xmath278 . if we normalize by powers of @xmath4 and the sign , we find that @xmath279 for all choices of @xmath167 and @xmath280 .",
    "the _ odd writhe _ was introduced by kauffman @xcite , who proved it is an invariant of virtual knots .",
    "a classical crossing of a virtual knot is called _ odd _ if the path from the crossing back to itself goes through an odd number of classical crossings .",
    "the _ odd writhe _ is the sum of the signs of the odd crossings . in classical knots",
    "the odd writhe is always zero , since all crossings of classical knots are even . in this section",
    ", we will prove that the odd writhe of a virtual twist knot @xmath8 is related to its alexander polynomial ; we conjecture that this relationship holds in general .",
    "we first verify the relationship for our  base cases , \" and then use the recursion of theorem [ t : recursion ] to extend it to other virtual twist knots .",
    "all the crossings in the twist are odd , and the crossing in the clasp is odd exactly when the total number of crossings in the twist is odd .",
    "the sign of the crossing in the clasp is given by @xmath282 .",
    "[ l : owbase ] for the virtual twist knot diagrams @xmath102 , @xmath131 , @xmath132 , and @xmath133 ( following the pattern of figure [ f : virtualtwist ] ) , we have : @xmath283 where @xmath284 denotes the odd writhe .      by theorem [ t : base ] , @xmath287 notice that : @xmath288 therefore , we see that : @xmath289 so in this case : @xmath290 now , notice that : @xmath291 for any @xmath292",
    ". therefore : @xmath293 we also have that @xmath286 and @xmath294 , so we see that @xmath295 , and we get the desired result .      by theorem [ t : base ] , @xmath298 as in the previous case , @xmath299",
    "so in this case : @xmath300 now , notice that : @xmath301 for any @xmath302 .",
    "therefore : @xmath303 so @xmath304 .",
    "that is exactly the sign difference between @xmath305 and @xmath306 .      by theorem [ t : base ] , @xmath307 so in this case :",
    "now , notice that : @xmath291 for any @xmath292 . also , @xmath309 .",
    "therefore : @xmath310 so @xmath311 .",
    "that is exactly the sign difference between + @xmath312 and @xmath313 .      by theorem [ t : base ]",
    ", @xmath315 so in this case : @xmath316 now , notice that : @xmath317 for any @xmath302 . also , @xmath318 .",
    "therefore : @xmath319 so @xmath320 .",
    "that is exactly the sign difference between + @xmath321 and @xmath322 .",
    "we have shown that we can reduce any virtual twist knot @xmath179 to one of @xmath102 , @xmath323 , @xmath132 , or @xmath133 by successive applications of ( i ) the recursion formula in theorem [ t : recursion ] and ( ii ) contractions ( removing blocks with 0 crossings ) . by lemma [ l : owbase ]",
    ", we know that our relation holds for the four base cases . it remains to show that it is preserved by both the recursive operation and by contraction .",
    "first we will show it is preserved by the recursion .",
    "inductively , we assume that @xmath324 notice that @xmath325 is the same for both @xmath179 and @xmath326 , and that @xmath143 has the same sign for both , so these two terms in the power of @xmath150 are the same for both knots .",
    "now , using theorem [ t : recursion ] , we have : @xmath327    now we will show that the relationship is preserved by contraction .",
    "consider the two virtual twist knots @xmath88 and @xmath328 ( where @xmath329 ) , with diagrams following the pattern in figure [ f : virtualtwist ] .",
    "these two knots differ only by two consecutive virtual crossings in the twist .",
    "removing these two crossings by a reidemister ( ii * ) move does not change the labeling of the diagram , so both diagrams have the same value of @xmath0 . also , the two knots are equivalent , so they have the same odd writhe . the only thing that remains to check is that the power @xmath330 has the same sign for both knot diagrams",
    ". then if the relation holds for @xmath328 , it will also hold for the contraction @xmath88 .",
    "recall that @xmath333 and @xmath334 for @xmath88 .",
    "let @xmath335 and @xmath336 be the corresponding sums for @xmath337 .",
    "then , @xmath338 we can use this to compute @xmath336 .",
    "@xmath339 finally , we observe that @xmath340 since @xmath341 , this does not change the parity of the power of @xmath150 .",
    "it remains to show that @xmath342 is even .",
    "in fact , @xmath10 is always 0 . to verify this",
    ", we must check four cases , each corresponding to the different choices of parity for @xmath90 and @xmath343 .                we know",
    "that for any virtual twist knot @xmath8 , there is some diagram for @xmath8 of the form @xmath179 shown in figure [ f : virtualtwist ] .",
    "so @xmath351 for some integers @xmath50 and @xmath352 .",
    "but then : @xmath353        in the same way as above , we can check that the conjecture holds for the other twist knots considered in section [ s : clasp ] .",
    "we have also used a computer to verify the conjecture for the @xmath354 unoriented virtual knots with 6 or fewer crossings , as tabulated by green @xcite . by proposition [ p :",
    "reverse ] , changing the orientation will only change @xmath355 by a sign . since the odd writhe is invariant under a change in orientation , this means the conjecture holds for all @xmath356 oriented virtual knots with 6 or fewer crossings ."
  ],
  "abstract_text": [
    "<S> we define a family of virtual knots generalizing the classical twist knots . </S>",
    "<S> we develop a recursive formula for the alexander polynomial @xmath0 ( as defined by silver and william @xcite ) of these virtual twist knots . </S>",
    "<S> these results are applied to provide evidence for a conjecture that the odd writhe of a virtual knot can be obtained from @xmath0 . </S>"
  ]
}
{
  "article_text": [
    "the problem of managing operations of a telephone call center in an efficient way has a long history in the area of operational research and is a topic of current research in various disciplines ( see e.g. @xcite or @xcite for extensive overviews ) .",
    "from the modeling point of view they can be viewed as queuing systems .",
    "such a queuing model can be described by a corresponding continuous time markov chain ( ctmc ) whose steady - state distribution can be easily determined , either analytically - with the erlang - c formula for the simplest m / m / n model or with the erlang - a formula for its version augmented with exponential patience time as proposed in @xcite ; or numerically for more complicated models ( as in @xcite or recently @xcite ) . however , as real call centers are time inhomogenous , with varying arrival rates and changing number of servers - scheduled to meet the forecasted demand and in order to provide break time , stationary models can not be applied directly .",
    "it is , therefore , common to use approximations , assuming the system being pointwise stationary .",
    "examples of such well established methods can be found e.g. in @xcite , @xcite or in @xcite .",
    "unfortunately , stationary approximations are in many cases not adequate .",
    "for example , @xcite compared them with simulations based on real inbound call center data , with the conclusion that due to the nonstationarity only some of the performance measures can be estimated with satisfactory accuracy .",
    "ingolfsson in @xcite compared them with an inherently transient model and found their results significantly inaccurate or even entirely unreliable . despite this , their widespread use is commonly justified by simple implementation and low computational costs .",
    "many authors proposed to use simulation , which can achieve any desired accuracy .",
    "however , in order to achieve acceptable precision , very long computational times are needed , which makes it often impracticable for common applications like schedule planning .",
    "an alternative approach , which is very effective in terms of the accuracy of the model , is to analyze transient ctmc using numerical methods , solving effectively their corresponding system of _ ordinary differential equations _",
    "( ode s ) as proposed in @xcite , @xcite or by the author in @xcite .",
    "other , less computationally intensive , analytical methods that can approximate such nonstationary systems more accurately than stationary models are _ closure approximations _ and _ fluid and diffusion approximations _ , discussed e.g. in @xcite , @xcite , @xcite and @xcite or , for the direct comparison of some examples of such methods with the numerical methods and stationary approximations , in @xcite .",
    "although there is a number of papers dealing with the phenomena of customer balking and abandonment in multiserver queues ( e.g. @xcite,@xcite,@xcite,@xcite or recently @xcite ) , they concentrate on stationary models or approximations . to the best of our knowledge , an inherently transient ctmc model dealing with both balking and abandonment of a call center , has never been investigated .",
    "the main objective of this work is to model such non - stationary systems , using transient analysis of corresponding ctmc , in a reliable and precise way , with computational efficiency enabling its use for practical applications  in particular , as a much more accurate replacement to the erlang - c and erlang - a formulas , used by practitioners for quantitative call center management .    in this paper",
    "we model an inbound telephone call center with balking and abandonment , i.e. the customer may not stay in the queue once realizing he is put on hold , or abandon the queue if the waiting time is too long , extending the nonstationary m / m / n queuing model analyzed by the author in @xcite .",
    "the paper is structured as follows . in the next section the model and the basic notation",
    "are introduced .",
    "section 3 reviews the proposed multi - step uniformization algorithm with steady - state detection and section 4 presents the results of numerical experiments .",
    "the paper ends with a summary of results , conclusions and proposals for future research .",
    "we propose a following model of a call centre : the analyzed period is finite ( e.g. one working day ) with the system starting empty . the state variable @xmath0 represents total number of service requests ( served / waiting calls ) in the system at time @xmath1 .",
    "the size @xmath2 of the system , which represents the number of non empty possible states , is finite , equal to @xmath3 = number of identical servers ( agents ) plus @xmath4 = capacity of the queue , with corresponding discrete state space @xmath5,@xmath6 .",
    "customers arrive according to an inhomogenous poisson process with rate @xmath7 , the service time is i.i.d . exponentially distributed with rate @xmath8 .",
    "the load @xmath9 can be bigger than 1 .",
    "service requests that are not served immediately can leave the system ( hang up or balk ) with probability 1-@xmath10 , otherwise , after joining the queue , they abandon after reaching their _ patience time_. the patience times are independent and identically exponentially distributed with mean @xmath11 .",
    "queued requests are fcfs served .",
    "all of this is modeled via the state transition rates of a ctmc which is described by _ infinitesimal generator matrix _ @xmath12 and the _ initial state probability vector _ @xmath13 , where the time dependent value @xmath14 is the rate at which the state @xmath15 changes to the state @xmath16 and @xmath17 represents the rate for the event of staying in the same state .",
    "because @xmath18 is a birth - and - death process , it can be described by following state dependent birth @xmath19 and death @xmath20 rates :    @xmath21    similar to the model @xmath22 in @xcite .",
    "the transient distribution at time t @xmath23 for a given time dependent generator matrix @xmath24 can be calculated using kolmogorovs forward equations : @xmath25 where the vector @xmath26 $ ] gives probabilities of the system being in any of the states at time @xmath1 .    as we do not allow blocking or abandonment due to the overflow of the system",
    ", the capacity of the queue has to be big enough to be considered practically infinite , which is insofar realistic , as the cost of setting practically unlimited queue space in the telecommunications equipment is negligible nowadays .",
    "the system size must , in consequence , ensure that the probability of being in the state @xmath27 ( blocking or abandoning service requests ) is insignificant compared to the required computational precision of the whole model .",
    "the infinitesimal generator matrix @xmath24 of an inhomogenous continuous - time markov chain ( ictmc ) is time dependent and the process is described by modified kolmogorovs forward equations .",
    "when the changes in generator matrix q occur in a discrete way at finite points of time and all rates are constant during the intervals between them , we could also replace the analyzed ictmc with a sequence of homogeneous systems computing the state probability vectors for consecutive time periods recursively using uniformization as proposed e.g. in @xcite or in @xcite .    in case of a call center , time dependent changes in @xmath28 can occur either discretely due to the changing number of servers or due to changes in the arrival rate . since the forecast and current traffic data in call center management applications are already aggregated with their average values by an arbitrary period ( e.g. 5 , 15 or 30min ) , we will further assume , similarly to @xcite , q(t ) being accordingly piecewise constant and refer to such consecutive time periods of length @xmath29 with the coresponding homogenous continuous - time markov chains ( hctmcs ) as steps",
    ".    another approach adopting uniformization for time - inhomogenous ctmcs introduced by @xcite with subsequent improvements by @xcite , @xcite and @xcite could be used if continuous arrival rates were available , reducing the error of the approximation with the average rates .",
    "uniformization or randomization , known since the publication of jensen in 1953 and , therefore , often referenced to as jensen method , is the method of choice for computing transient behavior of ctmcs .",
    "many authors compared its performance in different applications with the conclusion that it usually outperforms known differential equation solvers ( e.g. @xcite , @xcite , @xcite ) . to use uniformization",
    "we first define the matrix @xmath30 which for @xmath31 is a stochastic matrix .",
    "the value of @xmath32 is called uniformization rate .",
    "further , let @xmath33 be the probability of a poisson process with rate @xmath32 to generate @xmath34 events in the interval @xmath35 .",
    "one now finds for @xmath23 @xmath36 the formula ( [ jensen ] ) can be interpreted as a discrete time markov process ( dtmc ) embedded in a poisson process generating events at rate @xmath32 .",
    "the implemented uniformization algorithm is based on @xcite and computes transient state probabilities for a ctmc with the following modification of ( [ jensen ] ) : @xmath37 where @xmath32 is uniformization rate , as described in ( [ pmx ] ) , and @xmath38 is the state probability vector of the underlying dtmc after each step @xmath15 computed iteratively by : @xmath39 to compute @xmath40 , within prespecified error tolerance , in finite time , the computation stops when the remaining value of cdf of poisson distribution is less than the error bound @xmath41 : @xmath42 with @xmath34 being the _ right truncation point_. as @xmath43 increases , the corresponding probabilities of small number of @xmath15 poisson events occurring become less significant .",
    "this allows us to start the summation from the @xmath44th iteration called _ left truncation point _ with the equation [ reibmann88 ] reduced to : @xmath45",
    "@xcite suggests that the values of @xmath44 and @xmath34 be derived by : @xmath46    the main computational effort of the algorithm lies in consecutive @xmath34 matrix vector multiplications ( mvm ) , necessary for calculation of epochs of dtmc in ( [ reibmann88pi ] ) , and is of @xmath47 where @xmath48 is the number of nonzero elements of ( sparse ) @xmath49 . for large @xmath43 , as the distribution converges to normal , both left and right truncation points @xmath44 and @xmath34 in ( [ reibmann88lk ] ) will tend to be symmetric to the mean .",
    "the number @xmath50 is consequently of @xmath51 and the number of additional @xmath52 mvms for the given error tolerance of @xmath53 and proportional to inverse cdf for that given @xmath41 .",
    "therefore , although we could solve the @xmath23 with any accuracy @xmath54 , choosing a higher , acceptable for a respective practical application , value would bring some computational advantage .",
    "the savings due to ( tighter ) left truncation are , however , rather insignificant , unless the computation of the first significant dtmc is performed in a more efficient way .",
    "an example of this , presented first in @xcite , is based on recognizing the steady - state of the underlying dtmc .",
    "if convergence of the probability vector in ( [ reibmann88pi ] ) is guaranteed then we can stop the mvm after arriving at the steady - state , i.e. let us assume that dtmc has the steady state solution @xmath55 and that after the @xmath56 iteration of ( [ reibmann88pi ] ) @xmath57 , where @xmath58 is an arbitrary vector norm . then ( [ reibmann88truncated ] ) changes to : @xmath59 with @xmath60 used instead @xmath23 denoting transient state probability vector computed using approximate steady state dtmc vector @xmath61 . according to @xcite for a predefined error bound @xmath41 ( as in , ) the following inequality holds :    @xmath62    the computing of consecutive epochs of the dtmc is equivalent to the power method of finding stationary probability vector of a finite markov chain . according to @xcite",
    "if the stochastic matrix @xmath49 is aperiodic convergence of the power method is guaranteed and the number of iterations @xmath34 needed to satisfy a tolerance criterion @xmath63 may be obtained approximately from the relationship    @xmath64    where @xmath65 is the magnitude of subdominant eigenvalue @xmath66 of matrix @xmath49 @xmath67 reducing , consequently , the computational complexity to @xmath68 .    since in most cases the size of the subdominant eigenvalue is not known in advance , the usual method of testing for convergence is to examine some norm of the difference of successive iterates : @xmath69 @xcite recommends using the relative convergence test of iterates spaced apart by @xmath70 being function of the rate of convergence :    @xmath71    and suggests envisaging a `` battery '' of different convergence tests in order to accept the approximation @xmath61 as being sufficiently accurate .",
    "the main risk in this approach is that in order to ensure , with the above proposed methods , that the @xmath61 is steady , an additional computational effort for both the convergence tests and the required additional number of iterations can easily obliterate the potential savings .",
    "however , in case of our model , we can easily calculate precise stationary distribution @xmath72 in advance , using global balance equations ( e.g. as in @xcite ) with birth and death rates as in and .",
    "therefore , we can consequently , as proposed in @xcite instead of iterating the dtmc vector in up to a point @xmath56 where it would probably satisfy required convergence tests , simply use the @xmath72 ( instead of @xmath73 , as proposed in the original algorithm by @xcite ) as the @xmath74 approximation of @xmath75 .",
    "this can be decided after relatively few @xmath15 iterations due to convergence properties of the power method as described e.g. in @xcite or in standard books on numerical analysis , using numerically estimated convergence function of @xmath38 ( as proposed in @xcite ) , as it allows for precise calculation of the error of such a solution : @xmath76 in order to decide if it is acceptable ( smaller than a predefined steady - detection threshold @xmath77 ) .",
    "one of the biggest advantages of the uniformization is its strict error bounding for one step independently of its length .",
    "it is not difficult to show ( e.g. @xcite ) that the total error for a number of uniformization steps is the sum of truncation errors ( error bounds ) for each step .",
    "assume for a time period @xmath78 with a known initial distribution @xmath13 that for any @xmath79 , @xmath80 $ ] the value of each its state has to be computed with an error less than @xmath81 .",
    "let us further assume @xmath82 being the error after computing some @xmath83 .",
    "then : @xmath84    as the error bound of steady state approximation is , in case the steady state is reached , absolute and independent of the error of the previous steps , we can set the convergence threshold dependent rather on the actual total error bound than the error for the single step ( as proposed e.g. by @xcite ) .",
    "it allows , consequently , to trade the error bounds of steps for higher convergence thresholds while still within the global error bound for the whole solution .",
    "then , assuming the system at time @xmath85  to satisfy @xmath82 for each @xmath23 , @xmath86 $ ] we have to :    @xmath87",
    "to test the implementation the following model has been used : a service system ( call center ) working for time @xmath78 = 24h and starting empty .",
    "the arrival rate changes sinusoidal with two peaks and is divided into 288 ( 5min ) periods with constant averaged rates , same as the first example in @xcite .",
    "the service rate and number of servers are constant ( @xmath88 , @xmath89 ) , the arrival rate varies in time - @xmath90 ( the load varying between 0.65 and 1.05 as shown in figure [ load ] ) .",
    "the probability @xmath91 of a customer immediately leaving when not served immediately is 0.03 .",
    "the mean value of patience time @xmath11 is equal to 4min .",
    "the capacity of the queue is constant and chosen so that for all times the probability @xmath92 of the system being in the state @xmath27 is less than @xmath93 for all tested system sizes .        to evaluate the impact of the proposed steady - state detection algorithm , models of 5 different sizes have been at first calculated using unmodified uniformization algorithm with an error step @xmath94 corresponding to the total error bound @xmath95 .",
    "[ table_ssd_taylor ]    the detailed results of computation times are in table [ table_ssd_taylor ] .",
    "all experiments were performed on a 1.7ghz pc under 64bit linux os with a processor supporting vector operations in both : avx with 256bit vectors ( 4 double or 8 float operations simultaneously ) and the older sse instruction set with 128bit vector operations ( an intel i5 - 3317u with cpu throttling disabled via kernel scaling governor ) , compiled with gnu gcc compiler .",
    "all measurements use standard unix _",
    "time.h / clock ( ) _ function - returning cpu time .",
    "all times are in milliseconds .",
    "load @xmath96 ,",
    "s=1000 q=200    the impact of reduced computational effort due to steady - state detection for some chosen total error bounds ( between @xmath97 and @xmath98 ) , with corresponding steady - state detection thresholds , is illustrated for the system of size 1200 in figure [ ssd_abdmnt_65_105_taylor_1000_200 ] .",
    "load @xmath96 , s=1000 q=200        load @xmath96 , s=1000 q=200    figure [ ssd_abdmnt_65_105_ess_taylor_1000_200 ] shows the expected state of the system , derived from the calculated probability vector as :    @xmath99\\ ] ]    figure [ ssd_abdmnt_65_105err_taylor_1000_200 ] shows its relative error for different steady - state detection thresholds .",
    "the reference for the error estimate has been calculated with @xmath100 .",
    "load @xmath96 , s=1000 q=200    figure [ ssd_abdmnt_65_105_sl0_taylor_1000_200 ] shows the probability for an incoming service request to be served immediately ( with no waiting time ) .",
    "[ table_gamma_eta_65_105 ]    table [ table_gamma_eta_65_105 ] shows computation times and maximal values of @xmath101  probability of the system being in the state @xmath27 , for different values of : queue length , probability of the customer entering the queue despite not being served immediately @xmath10 and mean value of patience time @xmath11 .",
    "the difference compared to the corresponding value for @xmath102 and @xmath11= 4min from the table [ table_ssd_taylor ] ( equal to 468ms ) is not only both due to the bigger size of the system and higher uniformization rate @xmath32 resulting from higher queue length , but also to some extent due to the higher variability of the system state , resulting in fewer steps where the steady - state could be detected within the respective threshold .",
    "to illustrate this effect , we repeated the experiment with the load variability reduced to only @xmath103 i.e. with the arrival rate @xmath104 .",
    "the results corresponding to the cases from the table [ table_gamma_eta_65_105 ] are shown in the table [ table_gamma_eta_95_105 ] .",
    "[ table_gamma_eta_95_105 ]",
    "in this paper we showed that the uniformization with steady - state detection can be used in a very effective way to evaluate transient behavior of multiserver queues . applied to the modeling of the call center schedules",
    ", it allows calculation of transient system states for systems of any , possible in practical applications , size in a very short time , in a numerically stable way , with very high precision , using relatively common and inexpensive cpu .",
    "it can , therefore , be used for schedule planning based on available forecasts , as described in @xcite .",
    "the presented method can be extended in several directions .",
    "one could be , in regard to call center modeling , to automatically optimize the model size ( queue length ) with significant impact on the computational efficiency .",
    "another could be to use known periodicity of traffic forecasts to divide total error bound in between known times of the day , bounded by the points of time when the system will reach a steady state , than for the whole modeled period ."
  ],
  "abstract_text": [
    "<S> this paper considers a nonstationary multiserver queuing model with abandonment and balking for inbound call centers . </S>",
    "<S> we present a continuous time markov chain ( ctmc ) model which captures the important characteristics of an inbound call center and obtain a numerical solution for its transient state probabilities using uniformization method with steady - state detection .    </S>",
    "<S> keywords : call center , transient , markov processes , numerical methods , uniformization , abandonment , balking </S>"
  ]
}
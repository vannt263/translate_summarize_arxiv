{
  "article_text": [
    "stochastic volatility models such as the heston model @xcite have become one of the standard approaches in financial option pricing .",
    "for some stochastic volatility models and under additional restrictions , closed - form solutions can be obtained by fourier methods ( e.g. @xcite , @xcite ) .",
    "another approach is to derive approximate analytic expressions , see e.g.@xcite and the literature cited therein . in general , however , even in the heston model @xcite when the parameters in it are non constant the partial differential equations arising from stochastic volatility models have to be solved numerically .    in the mathematical literature",
    ", there are many papers on numerical methods for option pricing , mostly addressing the one - dimensional case of a single risk factor and using standard , second order finite difference methods ( see , e.g. , @xcite and the references therein ) .",
    "more recently , high - order finite difference schemes ( fourth order in space ) were proposed @xcite that use a compact stencil ( three points in space ) . in the option pricing context , see e.g.  @xcite .    there are less works considering numerical methods for option pricing in stochastic volatility models , i.e. , for two spatial dimensions .",
    "finite difference approaches that are used are often standard , second - order methods , e.g. in @xcite where different efficient methods for solving the american option pricing problem for the heston model are proposed . in @xcite a high - order compact finite difference scheme for option pricing in the heston model is derived and this approach is extended to non - uniform grids in @xcite .",
    "other approaches include finite element - finite volume @xcite , multigrid @xcite , sparse wavelet @xcite , fft - based @xcite or spectral methods @xcite .",
    "the classical alternating direction implicit ( adi ) method , introduced by peaceman and rachford @xcite , douglas @xcite , fairweather and mitchell @xcite , is a very powerful method that is especially useful for solving parabolic equations ( _ without _ mixed derivative terms ) on rectangular domains .",
    "beam and warming @xcite , however , have shown that no simple adi scheme involving only discrete solutions at time levels @xmath0 and @xmath1 can be second - order accurate in time in the presence of mixed derivatives . to overcome this limitation , unconditionally stable adi schemes which are second order in time",
    "have been proposed by hundsdorfer and verwer @xcite and more recently by int hout and welfert @xcite .",
    "these schemes are second - order accurate in time and space . in @xcite different second - order adi schemes of this type",
    "are applied to the heston model . in @xcite",
    "this approach is combined with different high - order discretisations in space , using high - order compact schemes for two - dimensional convection - diffusion problems _ with mixed derivatives and constant coefficients_. in @xcite this approach is combined with sparse grids and applied to multi - dimensional diffusion equations , again _ with constant coefficients_. building on the ideas in @xcite , a high - order ( second - order accurate in time and fourth - order accurate in space ) adi method for option pricing in stochastic volatility models which involve the solution of two - dimensional convection - diffusion equations _ with mixed derivative terms and space - dependent coefficients _ is derived in @xcite .    in this chapter",
    "we combine the approaches from @xcite and @xcite , to obtain a _ sparse grid high - order adi scheme _ for option pricing in stochastic volatility models . in the next section we recall stochastic volatility models for option pricing and the related convection - diffusion partial differential equations .",
    "section  [ sec : hv ] is devoted to the hundsdorfer - verwer adi splitting in time .",
    "the spatial discretisation is introduced in section  [ sec : hoc ] for the implicit steps , and in section  [ sec : hoexpl ] for the explicit steps .",
    "the solution of the resulting scheme and the discretisation of boundary conditions are discussed in sections  [ sec : hosolve ] and [ sec : bc ] .",
    "the sparse grid combination technique is explained in section  [ sec : ct ] .",
    "we present numerical convergence results in section  [ sec : num ] .",
    "we consider the following class of stochastic volatility models : assume that asset spot price @xmath2 and variance @xmath3 follow two stochastic diffusive processes for @xmath4 $ ] ,    [ eq : svmodels ] @xmath5    which are characterised by two brownian motions , @xmath6 and @xmath7 , with constant correlation parameter @xmath8 .",
    "the drift coefficient for stochastic asset returns is given by the mean return of the asset where @xmath9 and the diffusion coefficient is given by @xmath10 .",
    "the drift coefficient of the asset variance is given by @xmath11 , where constants @xmath12 and @xmath13 are the mean reversion speed of @xmath14 and the long run mean of @xmath14 , respectively .",
    "the diffusion coefficient is given by @xmath15 where constant @xmath16 is the volatility of volatility .",
    "the constant riskless interest rate is denoted by @xmath17 the constants @xmath18 determine the stochastic volatility model used .",
    "the class of stochastic volatility models includes a number of known stochastic volatility models : the most prominent stochastic volatility model , the _ heston model _ @xcite ( also called _ square root ( sqr ) model _ ) specifies the variance by @xmath19 other known stochastic volatility models include the _ garch _ ( or _ var model _ ) model , see @xcite , where the stochastic variance is modelled by @xmath20 and the _ 3/2 model _",
    "@xcite in which the variance follows the process @xmath21 all of the three stochastic volatility models mentioned above use a linear mean - reverting drift for the stochastic process of the variance @xmath22 , but there are also models , in which the drift is mean reverting in a non - linear fashion . following @xcite , we denote these models with an additional `` n '' : in the _ sqrn model _ the stochastic variance follows @xmath23 in the _ varn model _ @xmath24 and in the _ @xmath25-n model _",
    "@xmath26 see @xcite .",
    "applying standards arbitrage arguments and ito s lemma to the class of stochastic volatility models , we can derive the following second order partial differential equation for any financial derivative @xmath27 , to be solved backwards in time with @xmath28 , @xmath29 , @xmath30 : @xmath31v_{\\sigma } -rv = 0 .\\ ] ] here , @xmath32 is the market price of volatility risk , where @xmath33 , which is usually assumed to be proportional to the variance . in the following we assume @xmath34 for streamlining the presentation .",
    "the generalisation to the case @xmath35 is straightforward by consistently adding in the additional term in the coefficient of @xmath36 .",
    "the boundary conditions and final condition are determined by the type of financial derivative @xmath27 we are solving for .",
    "the boundary conditions of any european option will depend on a prescribed exercise price , denoted here by @xmath37 .",
    "for example , in the case of the european put option : @xmath38 the remaining boundary condition at @xmath39 can be obtained by looking at the formal limit @xmath40 in , i.e. , @xmath41 this boundary condition is used frequently , e.g.  in @xcite .",
    "alternatively , one can use a homogeneous neumann condition @xcite , i.e. , @xmath42    by using a change of variables : @xmath43 we transform the partial differential equation to an convection - diffusion equation in two spatial dimensions with a mixed derivative term .",
    "the transformed partial differential equation and boundary / initial conditions are now satisfied by @xmath44 , where @xmath45 , @xmath46 , @xmath47 $ ] : @xmath48    @xmath49    in order to discretise the problem and solve numerically , we truncate our spatial boundaries to finite values .",
    "take @xmath50 , where @xmath51 , and @xmath52 , where @xmath53 , so that the spatial domain forms a closed rectangle in @xmath54 of @xmath55 points with uniform spacing of @xmath56 in the @xmath57-direction and @xmath58 in the @xmath59-direction : @xmath60 the lower @xmath59-boundary is truncated to @xmath61 to ensure non - degeneracy of the partial differential equation for all values of @xmath59 .",
    "we assume cell aspect ratios to be moderate .",
    "we also take a uniform partition of @xmath62 $ ] into @xmath63 points such that @xmath64 , where @xmath65 .",
    "we denote the discrete approximation of @xmath66 by @xmath67 and @xmath68 .",
    "we consider the alternating direction implicit ( adi ) time - stepping numerical method proposed by hundsdorfer and verwer @xcite .",
    "our partial differential equation takes the form @xmath69 .",
    "we employ the splitting @xmath70 where unidirectional and mixed derivative differential operators are given by : @xmath71 we consider with the splitting and look for a semi - discrete approximation @xmath72 at time @xmath73 . given an approximation @xmath74 we can calculate an approximation for @xmath75 at time @xmath73 using the differential operators from :    [ hvscheme ] @xmath76    the parameter @xmath77 is taken to be @xmath78 to ensure second - order accuracy in time .",
    "the parameter @xmath79 is typically fixed to @xmath80 .",
    "larger values give stronger damping of the implicit terms while lower values return better accuracy .",
    "the role of @xmath79 is discussed in @xcite .",
    "its influence in the connection with high - order spatial approximations is investigated numerically in @xcite .",
    "the first and fourth step in can be solved explicitly , while the remaining steps are solved implicitly .",
    "our aim is to derive high - order spatial discretisations of the differential operators .",
    "following @xcite we combine high - order compact finite difference methods for the implicit steps with a ( classical , non - compact ) high - order stencil for the explicit steps .",
    "for @xmath81 , consider the one - dimensional convection - diffusion equation @xmath82 with constants @xmath83 and @xmath84 . to discretise the partial derivatives in , we employ standard , centered second - order finite difference operators , denoted by @xmath85 and @xmath86 .",
    "the second - order terms in the truncation error involve higher - order partial derivatives , @xmath87 and @xmath88 .",
    "hence , if we can find second - order accurate expressions for @xmath87 and @xmath88 , using only information on the compact stencil , then it will be possible to approximate @xmath89 and @xmath90 with fourth order accuracy on the compact stencil . by differentiating once and twice with respect to @xmath57 , respectively ,",
    "it is possible to express @xmath87 and @xmath88 in terms of first- and second - order derivatives of @xmath91 and @xmath92 with respect to @xmath57 .",
    "we obtain the following relations , concisely written in matrix form , @xmath93 this shows that only second - order approximations for @xmath94 @xmath90 , @xmath95 and @xmath96 are needed . using these relations to discretise and to replace the partial derivatives @xmath87 and @xmath88 in the truncation error , yields a fourth - order compact approximation for at all points of the spatial grid except those that lie on the @xmath57- and @xmath59-boundaries .",
    "we refer to @xcite for more details of the derivation of the compact high - order spatial discretisation .    to approximate @xmath97 at points along the @xmath57 boundaries of the inner grid of the spatial domain , we will require a contribution from the dirichlet values at the @xmath57-boundaries of the spatial domain .",
    "we collect these separately in a vector @xmath98 .",
    "details on the boundary conditions are given in section  [ sec : bc ] .",
    "the resulting linear system to be solved can be written in matrix form : @xmath99 where @xmath100 , @xmath101 .",
    "the coefficient matrices @xmath102 and @xmath103 are block diagonal matrices , with the following structure : @xmath104,\\quad   { b_x } = \\left [ { \\begin{array}{cccc } b_x^{1,1 } & 0 & 0   & 0\\\\ 0 & b_x^{2,2 } & 0 & 0\\\\ 0 & 0 & \\ddots & 0   \\\\ 0 & 0 & 0 & b_x^{n-2,n-2 }   \\end{array } } \\right],\\ ] ] where each @xmath105 $ ] and @xmath106 $ ] are tri - diagonal matrices .",
    "explicit expression for all coefficients are given in @xcite .",
    "for @xmath107 the derivation can be presented in a concise form , similar as for @xmath97 , again we refer to @xcite for additional details .",
    "consider the one - dimensional convection - diffusion equation @xmath108 with @xmath109 and @xmath110 , the necessary relations can be concisely written in matrix form , @xmath111 where the first two lines of the system correspond to standard , central second - order difference approximations , while the third and fourth are obtained from the repeated differentiation of . using these relations to discretise and to replace the partial derivatives @xmath112 and @xmath113 in the truncation error , yields a fourth - order compact approximation for .",
    "we obtain a linear system which can be represented in matrix form : @xmath114 where @xmath100 , @xmath101 .",
    "we do not impose any boundary conditions in @xmath59-direction , but discretise the boundary grid points with the same scheme , and handle resulting ghost points via extrapolation ; details on the boundary conditions are given in section  [ sec : bc ] .",
    "the coefficient matrices @xmath115 and @xmath116 are block tri - diagonal matrices with the following structures :    @xmath117 , \\\\ \\mathbf{b_y } = \\left[\\begin{array}{ccccc } b_y^{1,1 } & b_y^{1,2 } & 0 & 0 & 0   \\\\ b_y^{2,1 } & b_y^{2,2 } & b_y^{2,3 } & 0 & 0\\\\ 0 & \\ddots & \\ddots & \\ddots & 0   \\\\ 0 & 0 & b_y^{n-3,n-4 } & b_y^{n-3,n-3 } & b_y^{n-3,n-2 } \\\\ 0 & 0&0 & b_y^{n-2,n-3 } & b_y^{n-2,n-2 }   \\end{array}\\right],\\end{aligned}\\ ] ]    where each @xmath118 $ ] and @xmath119 $ ] are diagonal matrices .",
    "explicit expression for all coefficients are given in @xcite .",
    "the first and fourth steps of the adi scheme operate only on previous approximations to explicitly calculate an updated approximation .",
    "the differential operator in these steps takes the form of the right hand side of . for the mixed derivative term it seems not to be possible to exploit the structure of the differential operator to obtain a fourth - order approximation on a compact computational stencil .",
    "hence , in order to maintain fourth - order accuracy of the scheme in the explicit steps of , the derivatives in each differential operator @xmath120 , @xmath121 and @xmath122 are approximated using classical , fourth - order central difference operators which operate on a larger @xmath123-stencil in the spatial domain .",
    "here we use the shift operator defined by : @xmath124 for @xmath125 , we have the following scheme : @xmath126_{i , j } = \\frac{vy_j}{2}\\left ( \\frac{-s_x^{-2 } + 16 s_x^{-1 } - 30 + 16s_x - s_x^2}{12\\delta ^2_x}\\right)u_{i , j } \\\\ + \\left ( r - \\frac{vy_j}{2 } \\right ) \\left ( \\frac{s_x^{-2 } -8s_x^{-1 } + 8s_x -s_x^2}{12\\delta_x } \\right)u_{i , j }   + \\mathcal{o}(\\delta^4_x).\\end{gathered}\\ ] ] for @xmath127 , we have : @xmath128_{i , j } \\\\= \\frac{(vy_j)^{2\\beta}}{2}\\left ( \\frac{-s_y^{-2 } + 16 s_y^{-1 } - 30      + 16s_y - s_y^2}{12\\delta ^2_y } \\right ) u_{i , j } \\\\ +   \\frac{\\kappa(vy_j)^{\\alpha}(\\theta - vy_j)}{v}\\left ( \\frac{s_y^{-2 } -8s_y^{-1 } + 8s_y -s_y^2}{12\\delta_y } \\right)u_{i , j }    + \\mathcal{o}(\\delta^4_y ) .\\end{gathered}\\ ] ] finally , for the mixed derivative term @xmath129 , the following computational stencil is used : @xmath130_{i , j } \\\\= \\rho      ( vy_j)^{\\beta + \\frac{1}{2}}\\left ( \\frac{s_x^{-2 } -8s_x^{-1 } +          8s_x - s_x^{2}}{12\\delta_x}\\right)\\left ( \\frac{s_y^{-2 }          -8s_y^{-1 } + 8s_y - s_y^{2}}{12\\delta_y } \\right)u_{i , j }",
    "\\\\ + \\mathcal{o}(\\delta^4_x\\delta^4_y ) + \\mathcal{o}(\\delta^4_x ) + \\mathcal{o}(\\delta^4_y).\\end{gathered}\\ ] ] using these fourth - order approximations , the first and fourth step in can be computed directly .",
    "the values at the spatial boundaries for each solution of the adi scheme are determined by the boundary conditions , the computational stencil is required for all remaining points in the spatial domain . for the explicit steps , the @xmath123-point computational stencil exceeds the spatial boundary when we wish to approximate differential operator @xmath131 at any point along the boundary of the spatial domain s inner grid .",
    "for example if we wish to evaluate @xmath132 , we will require contributions from ghost points which fall outside the spatial domain , as marked by bullet points in figure  [ fig : ghostpoints ] .",
    "@xmath133    we extrapolate information from grid points @xmath134 , where @xmath135 @xmath136 to establish values at these ghost points for the purpose of evaluating the differential operator @xmath131 at any point along the boundary of the inner grid of the spatial domain . to calculate the values at these ghost points , we use the following five - point extrapolation formulae for three cases : @xmath137 the extrapolation at the @xmath138 and @xmath139 boundaries and the remaining three corners",
    "is handled analogously .",
    "starting from a given @xmath74 , the adi scheme involves six approximation steps to obtain @xmath75 , the solution at the next time level .",
    "the first approximation @xmath140 can be solved for explicitly using the @xmath123-point computational stencil derived in section  [ sec : hoexpl ] . the second approximation for our solution , denoted by @xmath141 , has to be solved for implicitly : @xmath142 we apply the fourth - order compact scheme established in section  [ sec : hoc ] to solve . in matrix form",
    "we obtain @xmath143 collecting unknown @xmath141 terms on the left hand side and known terms @xmath140 , @xmath74 and @xmath98 on the right hand side we get @xmath144 to solve , we invert the tri - diagonal matrix @xmath145 . for the third step of the adi scheme , we proceed analogously , and use the the high - order compact scheme presented in section  [ sec : hoc ] to solve for @xmath146 implicitly .",
    "the fourth , fifth and sixth step of the adi scheme are performed analogously as the first , second and third steps , respectively .",
    "note that the matrix @xmath145 appears twice in the scheme , in the second and fifth step .",
    "similarly , @xmath147 appears in the third and the sixth step .",
    "hence , using lu - factorisation , only two matrix inversions are necessary in each time step of scheme . moreover , since the coefficients in the partial differential equation do not depend on time , and the matrices are therefore constant , they can be lu - factorised before iterating in time to obtain a highly efficient algorithm .    the combination of the fourth - order spatial discretisation presented in section  [ sec : hoc ] and [ sec : hoexpl ] with the second - order time splitting yields a high - order adi scheme with order of consistency two in time and four in space .",
    "for the case of the dirichlet conditions at @xmath148 and @xmath138 we impose @xmath149 using the homogeneous neumann conditions and which are correct in the limit @xmath150 and @xmath151 , respectively , at the ( finite ) boundaries @xmath152 and @xmath139 would result in a dominant error along these boundaries .",
    "hence , we do not impose any boundary condition at these two boundaries but discretise the partial differential equation using the computational stencil from the interior .",
    "the values of the unknown on the boundaries are set by extrapolation from values in the interior .",
    "this introduces a numerical error , and it needs to be considered that the order of extrapolation should be high enough not to affect the overall order of accuracy .",
    "we refer to gustafsson @xcite to discuss the influence of the order of the approximation on the global convergence rate .",
    "we use the following extrapolation formulae : @xmath153",
    "due to the adi splitting and the compactness of the finite difference discretisation in the implicit steps , the computational effort grows linearly with the number of unknowns , namely @xmath154 . in the following we use the so - called _ sparse grid combination technique _ to reduce the number of grid nodes and thus also the computational effort .",
    "sparse grids go back to smolyak @xcite , who used them for numerical integration .",
    "zenger @xcite , bungartz et al .",
    "@xcite and schiekofer @xcite extended his idea and applied sparse grids to solve pdes with finite element , finite volume and finite difference methods .",
    "these methods in general require hierarchical , tree - like data structures , which makes the data structure management more complicated than in the full grid case . with the help of the sparse grid combination technique @xcite this problem",
    "can be overcome . here",
    ", full tensor - based solutions are linearly combined to construct the sparse grid solution .",
    "this allows us to use standard full grid pde solvers .",
    "hence , this approach is very versatile and broadly applicable .",
    "furthermore , each sub - solution can be computed independently , which makes it easily parallelisable .",
    "the combination technique is based on the error splitting structure of the underlying numerical scheme .",
    "let the numerical solution of the ho - adi scheme be given by @xmath155 with multi - index @xmath156 and mesh widths @xmath157 , @xmath158 .",
    "we assume that our numerical scheme satisfies an error splitting structure of the form @xmath159 with functions @xmath160 bounded by some constant @xmath161 .",
    "the mesh widths @xmath162 and @xmath163 are independent of one another .",
    "since the error functions @xmath164 and @xmath165 only depend on either @xmath162 or @xmath163 , we can subtract two solutions with the same mesh width in one coordinate direction , such that the error term cancels out .",
    "exploiting this idea further leads to the combination technique @xmath166 applying the error splitting from above , the lower order terms cancel out and we obtain @xmath167 where @xmath168 and @xmath169 . as @xmath170 @xmath165 and @xmath171 are bounded by @xmath172 the pointwise error is given by @xmath173 which is equivalent to @xmath174 .",
    "we observe that the error of the sparse grid combination technique is deteriorated by a factor of @xmath175 compared to the fourth - order full grid solution .",
    "figure [ fig : sparse_grid_hier ] shows the two - dimensional grid hierarchy at levels @xmath176 .",
    "the sparse grid in two dimensions at level @xmath0 consists of sub - grids , whose sum of refinement levels fulfils @xmath177 . hence the number of grid points on each sub - grid grows with @xmath178 .",
    "as the number of grids increases with @xmath179 , this leads to @xmath180 nodes in the sparse grid .",
    "let @xmath181 , then this results in @xmath182 grid points compared to @xmath183 nodes in the full grid .",
    "thus we are able to reduce the number of grid nodes significantly while maintaining a high accuracy .",
    "it should be noted that for larger @xmath0 the combination technique as introduced above involves solutions on grids which violate the assumption of moderate cell aspect ratios which may lead to reduced accuracy and potential instability of the scheme due to the extreme distortion of the grid .",
    "this aspect of the combination technique is of general nature and not specific to our scheme .",
    "a usual remedy would be to exclude solutions on extremely distorted grids in .",
    "for further details we refer to the pertinent literature on sparse grids .    .",
    "in this section we test the proposed sparse grid high - order adi scheme . beside the accuracy of the full grid solution we are also interested in the efficiency of the combined sparse grid solution .    it is well known that due to the non - smooth nature of the payoff function in option pricing problems one can not expect to see higher - order in practice @xcite .",
    "some form of smoothing has to be applied to the initial condition . in @xcite",
    "suitable smoothing operators are identified in fourier space . since",
    "the order of convergence of our high - order compact scheme is four , we could use the smoothing operator @xmath184 as in @xcite , given by its fourier transformation @xmath185.\\ ] ] this leads to the smooth initial condition determined by @xmath186 for any stepsize @xmath187 , where @xmath188 is the original initial condition and @xmath189 denotes the fourier inverse of @xmath190 , see @xcite . as @xmath191",
    ", the smooth initial condition @xmath192 tends towards the original initial condition @xmath188 and the approximation of the smoothed problem tends towards the true solution . for our numerical experiments we use this smoothing operator which has already been applied successfully to option pricing problems in @xcite .    a numerical solution computed on a grid with @xmath193 , @xmath194 and time step @xmath195 serves as a reference solution , where @xmath196 . since the accuracy of option prices close to the strike price is of highest interest from a practitioner s point of view , we compute the maximum absolute error in the region @xmath197 \\times [ 0.05 , 1]$ ] .",
    "the grid parameters of the computational domain are chosen to be @xmath198 , @xmath199 , @xmath200 and @xmath201",
    ". the parameters of the adi method are @xmath78 and @xmath80 , cf .",
    "section  [ sec : hv ] .",
    "the full grid solution is computed with step sizes @xmath193 , @xmath194 and @xmath195 with @xmath202 , while the sparse grid solution @xmath203 is constructed according to definition ( [ eq : ct ] ) . in order to avoid instabilities due to the extreme distortion of the grid we neglect grids within the combination technique , where @xmath204 for @xmath205 .",
    "thus , the finest resolution in one of the sub - grids along one coordinate direction is given by @xmath206 .",
    "we compare the performance of the high - order adi scheme in the full and sparse grid case for a european put option with the parameters given in table  [ tab : para ] .",
    "figure  [ fig : experiment1 ] shows the maximum error plotted versus the grid resolution @xmath207 for both cases .",
    "the fourth - order compact finite difference scheme achieves an estimated numerical convergence order of @xmath208 , the error of the sparse grid solution decays slightly slower due to the logarithmic factor in ( [ eq : error_ct ] ) .    to illustrate the computational efficiency we compare the run - time to the accuracy in figure [ fig : experiment2 ] for both approaches .",
    "we confirm that , as the mesh width decreases , the lower number of employed grid nodes in the sparse grid method outweighs its slightly lower convergence rate .",
    "the serial implementation of the combination technique outperforms the full grid solver in the high accuracy region , reducing the computational time by about an order of magnitude , while achieving a similar accuracy .",
    "bd acknowledges support by the leverhulme trust research project grant ` novel discretisations for higher - order nonlinear pde ' ( rpg-2015 - 69 ) .",
    "ch is supported by the european union in the fp7-people-2012-itn program under grant agreement number 304617 ( fp7 marie curie action , project multi - itn strike - novel methods in computational finance ) .",
    "further ch acknowledges partial support from the bilateral german - spanish project hipeca  high performance calibration and computation in finance , programme acciones conjuntas hispano - alemanas financed by daad .",
    "jm has been supported in part by a studentship under the epsrc doctoral training partnership ( dtp ) scheme ( grant number ep / l505109/1 ) .",
    "b.  dring , m.  fourni and a.  rigal .",
    "high - order adi schemes for convection - diffusion equations with mixed derivative terms . in : _",
    "spectral and high order methods for partial differential equations - icosahom12 _ , m.  azaez et al .",
    "( eds . ) , pp . 217226 , lecture notes in computational science and engineering 95 , springer , berlin , heidelberg , 2013 .                                          a.r .",
    "mitchell and g.  fairweather , improved forms of the alternating direction methods of douglas , peaceman , and rachford for solving parabolic and elliptic equations , _ numer .",
    "_ * 6 * , 285292 , 1964 ."
  ],
  "abstract_text": [
    "<S> we present a sparse grid high - order alternating direction implicit ( adi ) scheme for option pricing in stochastic volatility models . </S>",
    "<S> the scheme is second - order in time and fourth - order in space . </S>",
    "<S> numerical experiments confirm the computational efficiency gains achieved by the sparse grid combination technique . </S>"
  ]
}
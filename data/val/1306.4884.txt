{
  "article_text": [
    "variants of the tic - tac - toe game have been the focus of a number of studies in the area of recreational mathematics  @xcite .",
    "probably the most studied among these games is an achievement game , a class of generalized tic - tac - toe games presented by harary  @xcite .",
    "a _ polyomino _ or an _ animal _ is a set of connected cells ( in the 4-neighbor topology ) of the infinite grid . in the harary games",
    "@xcite defined by a given animal , two players alice and bob alternatively occupy one cell in each round of the game ( we assume that alice is the first player ) , and the first player who occupies a translated copy of the given animal is the winner . by the strategy stealing argument , bob can not win in these type of games .",
    "thus , his objective is to obstruct alice s achievement .    here",
    "we present a new achievement game called the _ cannibal animal game_. as with harary s game , it is played on the infinite grid whereby players alternate turns to occupy free cells of the grid .",
    "this means that in each round the player must choose grid cells that are not yet occupied .",
    "once a cell is occupied , it remains so until the end of the game .",
    "in contrast to the generalized tic - tac - toe , the cannibal animal game is a _ partial game _ : the roles and legal moves of alice and bob are different .",
    "alice s legal move is to occupy one cell of the infinite grid in each round , and she wins if she occupies a translated copy of an animal given beforehand ( this move is the same as that of the first player of harary s generalized tic - tac - toe ) .",
    "bob s role and allowed moves , however , are different : in each round he must occupy a copy of the given animal ( i.e. , occupy a subset of the grid cells ) , and his objective is to prevent alice from achieving the animal .",
    "neither alice nor bob s moves are allowed to overlap with already occupied regions , even partially . the animal achieved or that bob occupies may be a translation , a mirror image and/or a @xmath1 , @xmath2 , or @xmath3-degree rotation of the given animal .",
    "each such translation / rotation / reflection is called a _ copy _ of the animal .",
    "figure  [ fig_el ] shows an example of the progress of the game where the animal is _ el _ , an l - shaped triomino .",
    "any animal of @xmath4 cells is called an @xmath4-cell - animal ( alternative , we refer @xmath4 as the _ size _ of the animal ) . also , let @xmath5\\times [ y_{\\min},y_{\\max}]$ ] be the rectangular region defined by the corner cells @xmath6 , @xmath7 , @xmath8 , and @xmath9 .",
    "we call an animal a _ cannibal _ or a _ loser _ if bob has a winning strategy ( bob s animal eats alice s animal ) and a _ non - cannibal _ or a _ winner _ otherwise . and hence the game is called the _ cannibal animal game_. the region in which alice and bob place their pieces will be called _ board _ and _ grid _ indistinctively .",
    "the game occurs in an infinitely large board in which players alternate turns playing pieces . in each turn",
    ", the first player ( or alice ) locates a unit square ( cell ) , while the second player ( or bob ) locates a copy of a previously given animal in the board .",
    "the only constraint is that whenever any player locates a new piece , it can not intersect ( even partially ) with already placed pieces .",
    "that is , the new pieces must be located at empty regions of the board .",
    "once a piece is placed , it remains in that place until the game is finished .",
    "the animal will be accepted in 90 , 180 or 270 degree rotations and , if it is asymmetrical , in either of its mirror - image forms .",
    "each of these translated / rotated and or mirror imaged polyominoes is called a _",
    "copy _ of the animal .",
    "[ [ our - results . ] ] our results .",
    "+ + + + + + + + + + + +    in this paper we study the following animals ( see figure  [ fig_shapes ] for examples ) : @xmath10 is an @xmath11 rectangle .",
    "we also define @xmath12 ( for @xmath13 and @xmath14 ) as a @xmath15-cell - animal having the shape of @xmath10 but with a @xmath16 rectangular hole in the center ( that is , an an o - shaped animal of thickness @xmath17 ) .",
    "animal @xmath18 ( for @xmath19 , @xmath20 , and @xmath21 ) is defined as a @xmath22-cell - animal having a @xmath23-shape with height @xmath24 , width @xmath25 , and thickness @xmath17 .",
    "the @xmath26 animal ( for any @xmath27 ) consists of the concatenation of @xmath4 copies of the el - animal , translated horizontally so that they touch , but do not overlap .    , @xmath28 , @xmath29 , @xmath30 , and @xmath31 ( from left to right).,scaledwidth=60.0% ]    1 .",
    "the following animals are cannibals : 1 .",
    "@xmath32 with holes if at least one of the holes is at least @xmath33 cells away from the boundary for @xmath34 ( and no hole is on the boundary ) 2 .",
    "@xmath12 for @xmath35 , and @xmath14 3 .",
    "@xmath36 for @xmath19 , @xmath20 , except @xmath37 4 .",
    "@xmath26 for @xmath38 2 .",
    "the following animals are non - cannibals : 1 .",
    "animals with at most three cells 2 .",
    "@xmath10 for any @xmath39",
    "in this section we present some non - cannibal animals .",
    "first we start by observing that when an animal is small , alice can easily win .",
    "[ obs_three ] any animal @xmath0 of three or fewer cells is non - cannibal .",
    "we also conjecture that polyominoes of size @xmath40 are all non - cannibal , but we have not been able to construct a winning strategy for all of them . in the following we give winning strategies for alice for the case",
    "in which the polyomino is a rectangle .",
    "[ theo_rect ] @xmath10 is a non - cannibal ( for any @xmath35 ) .    to prove the theorem",
    ", we first give a strategy for the case in which the board is bounded .",
    "this will afterwards be used for the unbounded board .",
    "[ lem_rect ] in any finite board , the rectangle @xmath10 is non - cannibal provided that at least one copy of @xmath10 can be placed on the empty board .    at the beginning of each round",
    "we define @xmath41 as the set of copies of @xmath0 not occupied by bob that fit on the board ( note that some of these positions may be occupied by alice s previous moves ) . the set @xmath42",
    "will be treated as a set of potential positions in which alice may form her animal .",
    "note that bob s moves must be at some @xmath43 .",
    "also , let @xmath44 be the set of animals that stab all elements of @xmath42 ( that is , @xmath45 , @xmath46 ) .",
    "note that the set @xmath42 initially is nonempty at the beginning of the game , and whenever bob plays , the size of @xmath47 is reduced .",
    "moreover , the set @xmath42 will only become empty if and only if bob manages to place his copy occupying the cells of some @xmath48 .",
    "the key observation is the fact that @xmath49 is a collection of pairwise intersecting rectangles , and as such it must have at least a common intersection point @xmath50 that intersects all rectangles of @xmath49 .",
    "alice s strategy is as follows : if the set @xmath49 is empty , alice occupies any empty cell of some @xmath51 .",
    "otherwise , alice plays at @xmath50 , preventing bob from playing at @xmath49 .    with this strategy",
    ", alice makes sure that the set @xmath42 never becomes empty ( since bob can never occupy @xmath48 ) .",
    "since the number of bob s possible moves only decreases after each of alice s moves , after a finite number of turns bob will be unable to play inside the bounded board ( and alice will be able to complete a copy of the animal ) .",
    "observe that the proof of lemma  [ lem_rect ] makes no assumptions on the shape of the finite board ( other that a copy of @xmath10 fits inside , and that alice plays first ) . in the following we extend this result to an infinite board .",
    "the first step in alice s strategy will be to construct a bounded region big enough so that the set @xmath42 is nonempty , and then apply the bounded region strategy .",
    "from this idea we have the proof of theorem  [ theo_rect ] as follows : + * proof of theorem  [ theo_rect ] ( bounding strategy ) .",
    "* we construct a region on the board large enough that at least one copy of @xmath10 can be constructed inside .",
    "the objective is to create an @xmath52 square for a sufficiently large @xmath53 ( the exact value will be determined later ) .",
    "alice can surround the boundary of the square with at most @xmath54 moves ( note that the four corners need not be occupied ) .",
    "let @xmath55 be the interior of the square .",
    "notice that at least @xmath56 copies of @xmath10 fit inside @xmath55 .",
    "each of bob s animals stabs at most @xmath57 copies of @xmath10 . during the ( at most ) @xmath58 rounds",
    "in which alice surrounds the boundary of the square , bob can stab at most @xmath59 animals of @xmath42 .",
    "thus , if @xmath60 , the set @xmath42 will be non - empty even after alice has completed surrounding the boundary of the square . because the first term is quadratic in @xmath53 and",
    "the second is linear , for a sufficiently large @xmath53 the inequality holds .",
    "@xmath61    the key property of this strategy is the fact that any collection of pairwise intersecting rectangles has a common intersection point .",
    "hence , this approach could be extended to any other animal that also satisfies this property .",
    "this property is often referred as the 2-helly ( or simply the helly ) property  @xcite in the literature .",
    "unfortunately , in a companion paper  @xcite we show that the rectangle is the only 2-helly polyomino .",
    "observe that the above strategy might take many moves , since alice starts by enclosing a large region . in the following ,",
    "we provide a strategy that uses fewer moves for the particular case in which the animal is an @xmath62 square .",
    "let @xmath63 be the connected square region of the grid such that its bottom - left cell is located at position @xmath64 ; that is , @xmath63 occupy the square region defined by the rectangular region @xmath65\\times [ y , y+n-1]$ ] .",
    "for any @xmath66 , alice can construct @xmath32 using at most @xmath67 moves .",
    "we will describe alice s strategy for constructing @xmath32 : alice will try to play at locations @xmath68 , @xmath69 , @xmath70 and @xmath71 , forming a horizontal strip with none of bob s pieces ( see figure  [ sn - case1 ] ) . by virtually rotating the board",
    "we can certify that bob s first move will be to the left of alice s .",
    "hence , she can occupy positions @xmath68 and @xmath69 with her first two moves .",
    "alice s strategy now depends on whether bob allows alice to play in the third and fourth positions .",
    ", @xmath69 , @xmath70 , and @xmath71.,scaledwidth=60.0% ]    two cells occupied : :    the only case in which alice can not occupy position    @xmath70 in her third move is if bob plays his second move    occupying position @xmath70 .",
    "we claim that in such a case ,    alice will win in at most @xmath72 moves . to prove the    claim , let @xmath73 be the position in which bob    placed his second move .",
    "observe that we must have    @xmath74 and    @xmath75 .",
    "then alice plays her third move at    position @xmath76 .",
    "+     with his second move @xmath77 having its    bottom - left cell at @xmath78 , then alice plays her    third move at @xmath79 .",
    "the striped rectangular area is a    region that bob can not occupy.,scaledwidth=60.0% ]    +    at this point , note that the cells inside the rectangular region    @xmath80\\times[0,b_y+n-1]$ ] can no longer be occupied    by bob since the ( horizontal and vertical ) distance between any two of    the cells occupied by alice within this region is less than    @xmath4 ( figure  [ sn - case2 - 1 ] ) . if @xmath81 , this    rectangular region defines @xmath82 and since no    cell of this square region can be occupied by bob , then alice wins by    occupying @xmath82 in @xmath83 moves    ( figure  [ sn - case2 - 1 ] ) .",
    "+     with his third move @xmath84 , then    alice plays her fourth move at @xmath85 .",
    "the striped    rectangular area is a region that bob can not    occupy.,scaledwidth=60.0% ]    +    otherwise , we have @xmath86 .",
    "notice that , if    alice plays at positions @xmath87 or    @xmath88 , she can enlarge bob s forbidden region to a    square ( regions @xmath89 and    @xmath90 , respectively ) .",
    "bob can only occupy one of    the two positions in one move .",
    "hence , regardless of bob s choice ,    alice will be able to secure a region large enough to construct a copy    of @xmath32",
    ".    +    among the four moves , at most two will be outside bob s forbidden    region .",
    "hence , alice will win using at most @xmath91 moves .",
    "three cells occupied : :    now , suppose alice is able to occupy @xmath70 with her    third move , but then bob occupies location @xmath71 . as    always , bob s first move",
    "must be in the halfplane @xmath92 .",
    "we also know that another one must be in the halfplane    @xmath93 . hence",
    ", bob can have played at most once in the    rectangular region @xmath94\\times[-n , n]$ ] .",
    "since    alice occupies positions @xmath68 , @xmath69 , and    @xmath70 , bob s move in @xmath95 ( if any )    must either be strictly above the halfplane @xmath96 ( or    strictly below ) . without loss of generality , we assume that the region    @xmath97\\times [ 0,n]$ ] is empty of bob s moves . in this    case , alice s third move will be @xmath98 ( see    figure  [ sn - case3 - 1 ] ) .",
    "+     with his third move @xmath84 , then alice    plays her fourth move in the region above or below the horizontal    strip that is free of bob s animals : in this example at    @xmath85 is above this strip .",
    "the two cells    @xmath99 and @xmath100 are cells one of    which alice will try to occupy next in order to    win.,scaledwidth=60.0% ]    +    similar to the previous case , alice can prevent bob from playing    inside an @xmath62 region by occupying either position    @xmath99 or @xmath100 . since bob s fourth    move can only block one of the two positions , alice can play in the    other one and construct a copy of @xmath32 .",
    "+    in each case , no cell of @xmath101 or    @xmath102 can be occupied by bob . but with his fourth    move , bob can occupy cells from at most one of @xmath103    or @xmath104 due to alice s fourth move that occupied    @xmath98 . without loss of generality",
    "assume that bob    occupies @xmath105 with his fourth move",
    ". then alice wins    by occupying @xmath100 and eventually occupying    @xmath102 in @xmath91 moves .",
    "four cells occupied : :    finally , assume alice manages to occupy the four locations    @xmath68 , @xmath69 , @xmath70 ,    @xmath71 .",
    "similar to the case in which three cells were    occupied , consider the rectangular region    @xmath106\\times [ -n , n]$ ] .",
    "after four turns , bob can place    at most three blocks in @xmath107 ( recall that bob s first move    is at a location to the left of the vertical line at    @xmath68 ) .",
    "moreover , bob can not occupy any cell of the    horizontal strip between @xmath68 and @xmath71 .",
    "hence , either the region above or below the horizontal strip will    contain at most one of bob s animals . without loss of generality",
    ", we    can assume that the upper half has none or one of bob s pieces .",
    "+    if this half is empty of bob s animals , alice will proceed as in the    case where three cells are occupied .",
    "her fifth move will be to play at    position @xmath108 and afterwards @xmath109 or    @xmath110 depending on bob s move . in either of the two    cases",
    ", @xmath67 moves will be sufficient to construct a    copy of the square .",
    "+    , @xmath69 , @xmath70 , and    @xmath71 then with her fifth move @xmath111 she    will play inside the region above or below the horizontal strip that    has at most one of bob s animals : in this example at @xmath112    is above this strip .",
    "the striped rectangular area is a region that bob    can no longer occupy.,scaledwidth=60.0% ]    +    finally , it remains to consider the case in which bob has placed a    single animal @xmath73 for some    @xmath113 and @xmath114 .    additionally , we assume that @xmath115 ( if necessary , we    can flip the board vertically to obtain this property , see    figure  [ sn - case4 - 1 ] ) . in this case",
    ", alice plays her fifth move at    position @xmath116 .",
    "this move will prevent bob from    occupying any position of the region @xmath82 .",
    "moreover , only three out of the five moves of alice have been placed    outside @xmath73 , hence alice wins again in    @xmath67 moves .",
    "observe that @xmath117 is a trivial lower bound on the number of moves of any winning strategy or @xmath32 .",
    "our strategy only uses at most 3 additional moves , which leads us to believe that our strategy is optimal ( in the sense that no other strategy can construct @xmath32 with fewer moves ) .",
    "in this section we demonstrate several strategies for bob that prevents alice from winning . by observation [ obs_three ] , the game becomes more interesting when the animal has 5 or more cells , since we will show that there exist both winning and losing polyominoes .",
    "we start by using the well - known concept of _ pairing strategy_. we note that this strategy has been successfully used in many other combinatorial games  @xcite .",
    "we start with a simple strategy for bob that works for the @xmath12 animal :    [ th_ring ] @xmath12 is a cannibal for any @xmath118 and @xmath14 .",
    "bob virtually partitions the playing - board into blocks of size @xmath119 .",
    "that is , we define the block @xmath120 as the rectangle @xmath121\\times [ j(m+k ) , ( j+1)(m+k)-1]$ ] ( as shown in figure  [ fig_o ] ) .",
    "the strategy for bob is to place his animal inside the block where alice played her last move .",
    "after alice plays , bob checks which block her last move belongs to ; if he has already played an animal in the same block , he simply plays in an arbitrary empty block ( e.g. , bob s @xmath40th move in figure  [ fig_o ] ) .",
    "note that since the playing board is infinite , bob can always play these moves .",
    "further note that , with this strategy any rectangular region free of bob s pieces has either height or width at most @xmath122 . since @xmath14 , alice will never be capable of constructing a copy of @xmath12 .",
    "this pairing strategy can also be applied to other animals , such as the @xmath26 .",
    "[ th_l ] for any @xmath38 , the @xmath26 animal is cannibal .",
    "the proof is analogous to the proof of theorem  [ th_ring ] .",
    "this time we partition the board into blocks of size @xmath123 . observe that , if alice plays in an empty block , bob also can place a copy of @xmath26 in the block ( with the appropriate reflection ) . with this strategy",
    ", it is easy to see that alice will not be able to create a connected polyomino of size five or larger . in particular",
    ", she will not be capable of constructing any copy of @xmath26 ( other than @xmath124 ) .",
    "recall that by observation [ obs_three ] , the @xmath124 is cannibal .",
    "hence , no pairing strategy can work for @xmath124 .",
    "in section [ sec_win ] we showed that squares are non - cannibals .",
    "surprisingly , the removal of a single interior cell from a square animal can transform it into a cannibal .",
    "[ lem_squa2 ] for any integer @xmath34 , let @xmath125 be the @xmath32 animal in which a single interior cell whose distance to the boundary is at least @xmath126 units has been removed .",
    "then @xmath125 is a cannibal .",
    "the proof of this claim also uses the pairing strategy , where this time we partition the board into blocks of size @xmath127 .",
    "it is easy to see that if the removed cell is at least @xmath126 units away from the boundary , then bob can always play his animal inside the same block as alice s last move .",
    "assume that alice is able to construct a copy of the animal on the board .",
    "observe that this animal can intersect with at most 4 blocks . by the pigeonhole principle",
    ", there would be a block in which alice s pieces form a square of size at least @xmath128 ( possibly with interior cells removed ) .",
    "however , this can not occur since bob also occupies the same block with an @xmath62 square .",
    "we note that we have been unable to use a similar pairing strategy when the hole is close to the boundary . in all the partitioning strategies we considered ,",
    "alice was able to create a copy of the polyomino .",
    "this pairing strategy works for many types of polyominoes .",
    "however , in some cases we might need a more careful partitioning of the grid into blocks :    [ th_u ] for any @xmath129 ( other than @xmath130 ) , the @xmath36 animal is cannibal .",
    "bob virtually partitions the playing board into blocks of size @xmath131 .",
    "but if he arranges these blocks naively , there might be `` cracks '' between bob s animals in which alice could construct her animal ( see figure  [ fig_u - fail ] ) . to avoid such cracks",
    ", bob must slant his partition , thus tiling the grid with blocks with a shift of size ( distance ) @xmath132 ( figure  [ fig_shift ] ) .",
    "we define the block @xmath133 as the rectangle @xmath134\\times [ jh , jh+h-1]$ ] .",
    "the exact value of the slant depends on the parameters @xmath25 and @xmath24 :    @xmath135 ( and @xmath136 ) : : :    @xmath137 . @xmath138 and",
    "@xmath139 : : :    @xmath140 .",
    "otherwise : : :    no slant is necessary ( i.e. , @xmath141 ) .",
    "it is easy to show that with such a partition , alice will be unable to construct her animal .",
    "by combining theorems [ th_l ] and [ th_u ] we can prove the existence of cannibal animals of any size .",
    "for example , the polyomino @xmath142 is a cannibal animal of size @xmath4 for any @xmath143 ( except for @xmath144 ) . if @xmath144 , an example of a cannibal animal would be @xmath31 .",
    "the above result combined with theorem  [ theo_rect ] this allows us to show the existence of both cannibal and non - cannibal animals of any size .",
    "[ cor_5more ] for any @xmath143 , there exists a cannibal and a non - cannibal polyomino of size @xmath4 .",
    "we now introduce another idea to generate new cannibal animals from known cannibal animals .",
    "let @xmath125 be an animal and let @xmath145 be a subset of cells of @xmath125 . then @xmath146 is an animal created by removing @xmath145 from @xmath125 ( this operation will only be considered when @xmath146 is connected ) .",
    "we say that @xmath145 is an _ outer piece _ if we can locate a second disjoint copy of @xmath146 that overlays with a part of the removed piece @xmath145 of the first copy ( even if partially ) ; we call @xmath145 an _ inner piece _ otherwise",
    ". see figure  [ fig_inner ] .",
    "notice that even if @xmath145 and @xmath147 are both inner pieces , @xmath148 need not be so .",
    "however , the superset of an outer piece must be an outer piece .     and @xmath149 are inner pieces . @xmath145 and @xmath150 are outer pieces since a second copy covers a part of the piece as seen in the right examples.,scaledwidth=70.0% ]    [ lem : punch ] let @xmath125 be a cannibal and let @xmath145 be an inner piece of @xmath125 .",
    "the animal @xmath146 is also a cannibal .",
    "assume otherwise that @xmath146 is non - cannibal ; by definition , alice is capable of constructing a copy of @xmath146 without bob preventing it .",
    "consider now the removed piece @xmath145 of the animal alice constructed .",
    "because @xmath145 is an inner piece , this position can not be occupied by bob .",
    "hence , alice can afterwards occupy this position in subsequent rounds to form animal @xmath125 .",
    "thus , we obtain a contradiction .",
    "note that the reciprocal is not always true ( see for example lemma [ lem_squa2 ] and theorem [ theo_rect ] ) . as a simple application of this lemma",
    ", we have the following result :    for any integer @xmath34 , let @xmath151 be an animal @xmath32 in which any number of interior cells have been removed .",
    "if at least one of the removed cells has distance @xmath33 or more to the boundary , then @xmath151 is a cannibal .",
    "we presented the cannibal animal game , a new partial game as variant of tic - tac - toe - like games .",
    "in harary s generalized tic - tac - toe , some monotone properties hold , e.g. , `` increasing the size of the board helps alice '' and `` increasing the size of the animal helps bob . ''",
    "however , such properties do not hold for this game , making it deeper and more interesting .",
    "in this paper we studied some basic animals and classified them into cannibals ( losers ) or non - cannibals ( winners ) .",
    "more interestingly , we introduced the `` bounding strategy '' ( lemma  [ lem_rect ] ) and `` punching lemma ( lemma  [ lem : punch ] ) , '' tools which we think that can be used for other games .    in harary s generalized tic - tac - toe , some monotone properties hold ; these properties include `` increasing the size of the board helps alice '' and `` increasing the animal helps bob . ''",
    "however , such properties do not hold for the cannibal animal game , making it deeper and more interesting .",
    "we also note that the cannibal property of many other animals is still left unsolved . among them",
    "is the @xmath37 animal , which we conjecture to be a cannibal .",
    "we conjecture that all @xmath40-cell - animals are also non - cannibals , and consequently , the @xmath152-cell - animal @xmath153 would be the smallest cannibal .",
    "another problem that remains open is what happens with the squares @xmath32 in which one or more interior cells have been removed , and the distance of these removed cells to the boundary is less than @xmath33 units away from the boundary .",
    "finally , we conclude with an open problem posed by an anonymous referee ; observe that the only arbitrarily large non - cannibal animals that we know of are rectangles .",
    "so , it would be interesting to know if there exist arbitrarily large non - cannibal animals ( other than rectangles ) .",
    "99      e.  r.  berlekamp , j.  h.  conway , and r.  k.  guy , winning ways for your mathematical plays , vol .  3 , second edition , a  k  peters , massachusetts , 2003",
    ". j.  cardinal , h.  ito , m.  korman , and s.  langerman .",
    "helly numbers of polyominoes . ,",
    "pages 114 , 2012 .",
    "e.  fisher and n.  seiben , rectangular polyomino set weak ( 1 , 2)-achievement games , theoretical computer science , * 409 * , 2008 , pp .",
    ". m.  gardner , generalized ticktacktoe , in : fractal music , hypercards and more ... ,",
    "w.  h.  freeman and company , ny , 1992 , pp .  202213 .",
    "goodman and j.  orourke , handbook of discrete and computational geometry , crc press , 1997 .",
    "f. harary , achieving the skinny animal , eureka , * 42 * , 1982 , pp .  814 .",
    "errata in edition number 42 , * 43 * , 1983 , pp .  56 .",
    "f. harary and h.  harborth , achievemt and avoidance games with triangular animals , j. recreational mathematics , * 18(2 ) * , 198586 , pp .  110115",
    ". h.  harborth and m.  seemann , handicap achievement for squares , j. combin .",
    "comput . , * 46 * , 2003 , pp .  4752",
    ". h.  ito and h.  miyagawa , snaky is a winner with one handicap , abstracts of hercma 2007 , sept .  2022 , athens univ . of economics and business , athens , greece , 2007 , pp"
  ],
  "abstract_text": [
    "<S> this paper presents a new partial two - player game , called the _ cannibal animal game _ , which is a variant of tic - tac - toe . </S>",
    "<S> the game is played on the infinite grid , where in each round a player chooses and occupies free cells . the first player alice can occupy a cell in each turn and wins if she occupies a set of cells , the union of a subset of which is a translated , reflected and/or rotated copy of a previously agreed upon polyomino @xmath0 ( called an _ animal _ ) . </S>",
    "<S> the objective of the second player bob is to prevent alice from creating her animal by occupying in each round a translated , reflected and/or rotated copy of @xmath0 . </S>",
    "<S> an animal is a _ cannibal _ if bob has a winning strategy , and a _ non - cannibal _ otherwise . </S>",
    "<S> this paper presents some new tools , such as the _ bounding strategy _ and the _ punching lemma _ , to classify animals into cannibals or non - cannibals . </S>",
    "<S> we also show that the _ pairing strategy _ works for this problem . </S>"
  ]
}
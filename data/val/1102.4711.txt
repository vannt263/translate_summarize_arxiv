{
  "article_text": [
    "low - density parity - check ( ldpc ) codes @xcite constructed on high - order finite fields @xcite show remarkable coding gains with respect to ( w.r.t . )",
    "binary ldpc / turbo codes @xcite .",
    "the gain is especially visible in the moderate - to - short block length ( @xmath3 bits ) regime @xcite , where binary iteratively - decodable codes tend to exhibit either high error floors or non - negligible coding gain losses @xcite w.r.t .",
    "available benchmarks ( e.g. , @xmath4 db with respect to the random coding bound ( rcb ) @xcite ) .",
    "code , for moderate - long block it provides a tight estimation of the performance of the best codes . in the short - length regime",
    ", properly - designed codes can surpass the rcb even remarkably .",
    "however , it will be kept as a reference through the paper together with the sphere packing bound ( spb ) of @xcite .",
    "] ultra - sparse non - binary ldpc codes based on fields of order @xmath5 for short block lengths allow approaching the average performance of random codes by @xmath6 db down to medium - low codeword error rates ( cers ) .    in this paper , we provide a novel turbo code construction , which leads to _ non - binary _ turbo codes based on convolutional codes on a finite field @xmath7 of order @xmath8 .",
    "the proposed construction bridges rate-@xmath9 non - binary turbo codes and regular @xmath0 non - binary ldpc codes , where @xmath10 and @xmath11 are the check node ( cn ) and variable node ( vn ) degrees , respectively .",
    "more specifically , the turbo code construction follows from a specific expansion of a @xmath0 protograph .",
    "the so - obtained turbo codes have performance close to that of their non - binary ldpc counterparts , with the advantage of an efficient encoding structure .",
    "even more important , the proposed construction allows building families of rate - compatible turbo codes with flexible block size , by adopting combinatorial ( on - the - fly ) interleaver constructions .",
    "convolutional turbo(-like ) codes over non - binary finite fields / rings have been investigated previously , e.g. in @xcite . with respect to the past works ,",
    "the main novelties of our construction are listed next .",
    "most of the previous contributions devote attention to fields of low order , whereas we focus on high order fields , e.g. of order @xmath12 .",
    "moreover , our construction is based on codes with memory @xmath13 ( in symbols ) , whereas in @xcite codes with larger memories are considered .",
    "the convolutional codes adopted by the proposed construction are time - variant , while in @xcite the feed - forward / feedback polynomials are fixed .",
    "to our knowledge , the only non - binary iterative schemes adopting time - variant convolutional codes are the irregular repeat accumulate ( ira ) codes of @xcite .",
    "however , in @xcite a turbo code structure is not considered explicitly .",
    "we further propose an alternative serial turbo code interpretation of the @xmath0 regular protograph ensemble which allows to efficiently encode rate-@xmath14 @xmath1 regular ldpc codes as a serial concatenation of a non - binary time - variant differentiator , and interleaver , and a non - binary time variant accumulator .",
    "the proposed construction features a nice graph interpretation which provides useful insights for the interleaver design .",
    "high rates can be obtained by suitably puncturing the code symbols , whereas low rates can be easily obtained by using the multiplicative repetition approach of @xcite .",
    "a discussion on how decoding can be performed either in a turbo - like fashion ( i.e. , by iterating a bcjr decoder on the @xmath15-states trellises of the component codes ) or via the classical belief propagation ( bp ) algorithm for ldpc codes is provided . in both cases , the decoder complexity growth w.r.t .",
    "the field order @xmath15 can be limited to @xmath16 by adopting fast fourier transforms .",
    "the contribution is structured as follows .",
    "section [ sec : structure ] describes the code structure . in section [ sec : decoding ]",
    "the iterative decoding algorithm is discussed .",
    "numerical results and conclusions follow in sections [ sec : results ] and [ sec : conclusions ] respectively .",
    "regular @xmath17 non - binary ldpc codes are characterized by excellent iterative decoding thresholds @xcite . in this paper , we shall focus on the @xmath0 rate-@xmath9 case .",
    "the iterative decoding threshold over the binary - input additive white gaussian noise ( awgn ) channel for the @xmath0 unstructured ensembles with random choice of the non - zero coefficients in the parity - check matrix is @xmath18 db , will denote the energy per information bit and @xmath19 the one - sided noise power spectral density . ]",
    "only @xmath20 db away from the shannon limit .",
    "the turbo codes described in this paper are constructed on a specific protograph sub - ensemble of the @xmath0 regular ensemble , depicted in fig .",
    "[ fig : proto](a ) .",
    "a protograph @xcite is a tanner graph @xcite with a relatively small number of nodes .",
    "a protograph @xmath21 consists of a set of @xmath22 variable nodes @xmath23 , a set of @xmath24 check nodes @xmath25 , and a set of edges @xmath26 . each edge @xmath27 connects a vn @xmath28 to a cn @xmath29 .",
    "a larger _ derived _ graph can be obtained by a copy - and - permute procedure : the protograph is copied @xmath30 times , and the edges of the individual replicas are permuted among the @xmath30 replicas .",
    "a protograph can be described by a _ base matrix _ @xmath31 of size @xmath32 .",
    "the element @xmath33 of @xmath31 represents the number of edges connecting the vn @xmath34 to the cn @xmath35 . the base matrix associated with the protograph in fig .",
    "[ fig : proto](a ) is given by @xmath36 \\ , .\\ ] ] we proceed by expanding the protograph into the derived graph as follows .",
    "we first replace the upper - left ` @xmath13 ' in @xmath37 with a identity matrix , @xmath38 .",
    "the lower - left ` @xmath13 ' is replaced by a @xmath39 permutation matrix @xmath40 .",
    "each of the ` @xmath41 ' entries of @xmath37 is replaced by a @xmath39 cyclic matrix @xmath42.\\ ] ] the @xmath43 derived graph adjacency matrix has the form @xmath44.\\ ] ]     protograph as parallel ( a ) and serial ( b ) concatenation . ]",
    "we then construct a parity - check matrix on @xmath7 by replacing each ` @xmath13 ' in @xmath45 with a suitable element of @xmath46 .",
    "the @xmath47 full - rank non - binary parity - check matrix is given  by @xmath48\\label{eq : h}\\ ] ] where    * @xmath49 is a @xmath39 matrix with non - zero entries only on the main diagonal ( _ pseudo - identity matrix _ ) .",
    "more specifically , @xmath50 for @xmath51 , otherwise @xmath52 .",
    "* @xmath53 is a @xmath39 matrix with non-@xmath54 entries only for @xmath55 .",
    "in particular , @xmath56 .",
    "thus , @xmath53 can be described as the product between a permutation matrix @xmath57 and a pseudo - identity matrix with diagonal coefficients @xmath58 , with @xmath59 being the permutation function . *",
    "both @xmath60 are double diagonal matrices with form @xmath61,\\qquad z=1,2.\\ ] ]      the parity - check matrix may be interpreted as the parity - check matrix of the parallel concatenated convolutional code ( pccc ) .",
    "the information word @xmath62 of @xmath63 symbols in @xmath7 , @xmath64 , is input to a rate-@xmath13 , memory-@xmath13 time - variant recursive systematic convolutional ( rsc ) tail - biting encoder ( _ non - binary accumulator _ ) .",
    "the first set of parity symbols @xmath65 is obtained as @xmath66\\label{eq : rsc1}\\ ] ] and with @xmath67 properly initialized .",
    "( and consequently of @xmath68 ) can be obtained as indicated in ( * ? ? ?",
    "* lemma 4 ) . ] here , @xmath69 , and all operations are in @xmath7 .",
    "the second set of parity symbols are obtained by first permuting the symbols of @xmath70 according to the interleaving rule @xmath71 . the permuted information word @xmath72 ( with @xmath73 )",
    "is then fed in a second rate-@xmath13 , memory-@xmath13 time - variant rsc tail - biting encoder .",
    "the second set of parity symbols @xmath74 is obtained as @xmath75\\label{eq : rsc2}\\ ] ] and with @xmath76 .",
    "the systematic codeword is given by @xmath77 $ ] and has length @xmath78 symbols .",
    "the code length is @xmath79 bits and the code dimension is @xmath80 .",
    "the code rate for the proposed construction is @xmath81 .      by stretching the protograph of fig .",
    "[ fig : proto](a ) onto the one of fig .",
    "[ fig : proto](b ) , it is possible to devise an alternative encoder which is based on the serial concatenation of a memory-@xmath13 non - recursive encoder ( _ non - binary differentiator _ ) , and interleaver , and a rate-@xmath13 rsc encoder ( non - binary accumulator ) .",
    "the information vector @xmath70 is first multiplied by the transpose of @xmath82 , resulting in the intermediate vector @xmath83 , with @xmath84 and @xmath85 .",
    "the vector @xmath83 is then point - wise multiplied by the coefficient vector @xmath86 and permuted according to @xmath57 , obtaining a second intermediate vector @xmath87 , which is then input to a rate-@xmath13 , memory-@xmath13 time - variant rsc tail - biting encoder leading to a parity vector @xmath88 .",
    "@xmath89\\label{eq : rsc3}\\ ] ] and with @xmath90 the final codeword is hence given by @xmath91 $ ] , and the code has length @xmath92 symbols .",
    "the proposed construction brings gives a turbo code with code rate @xmath93",
    ". we will refer to this construction as differentiate accumulate ( da ) code .",
    "a lower rate @xmath94 can be obtained by providing at the output of the encoder the intermediate vector @xmath95 as well , i.e. by setting @xmath96 $ ] .",
    "note that , while for the rate @xmath9 code the parity - check matrix is still given by ( with proper columns permutation ) , for the rate @xmath14 code @xmath97 represents an extended parity - check matrix , where the first @xmath30 columns are associated with punctured symbols .",
    "the parity - check matrix for the rate @xmath14 da code can be obtained by noting that @xmath98 and @xmath99.\\ ] ] the parity - check matrix is hence given by the parity - check matrix of a non - binary ira code @xcite @xmath100.\\label{eq : h2}\\ ] ] this parity - check matrix form is a particular case of the construction of @xcite , with left and right sub - matrices characterized by a single cycle involving all their associated variable nodes .",
    "the codes specified by the parity - check matrices of and can be conveniently described as cycle ( circuit ) codes @xcite , as the corresponding tanner graphs have a regular vn degree @xmath101 .",
    "a graph representation for cycle codes can be obtained by associating a vertex with each parity - check equation and an edge with each codeword symbol .",
    "considering the parity - check matrix , the graph is hence given by @xmath78 edges connecting @xmath92 vertexes .",
    "an example is provided in fig .",
    "[ fig : petersen_graph ] . the graph of a rate @xmath9 , @xmath102 code ( fig .",
    "[ fig : petersen_graph](a ) ) is obtained by connecting two length-@xmath103 cycles according to the interleaver generated by the relative prime rule @xmath104 with @xmath105 and @xmath106 .",
    "the graph of fig .",
    "[ fig : petersen_graph](a ) turns to be the petersen graph @xcite , and hence is a @xmath107-_cage _ @xcite , i.e. a graph with minimal number of vertexes with degree @xmath108 having girth @xmath103 .. ] the graph associate with the parity - check matrix of can be directly obtained by pruning the graph of fig .",
    "[ fig : petersen_graph](a ) as follows : each edge connecting a vertex of the lower pentagon to a vertex of the upper pentagon is eliminated , and the corresponding upper and lower vertexes are merged together . the obtained graph is shown in fig .  [",
    "fig : petersen_graph](b ) .    in general",
    ", the connections between the upper and the lower cycles in the rate @xmath9 graph define the interleaver , which may be selected according to rules for increasing the interleaver spread ( _ turbo code perspective _ ) , or may be generated by filling the sub - matrix @xmath53 of @xmath109 according to girth optimization techniques ( _ ldpc code perspective _ ) .",
    "the first approach has the inherent advantage of allowing code constructions for various block sizes on - the - fly by adopting efficient high - spread interleaver construction algorithms @xcite .",
    "may be optimized according to the technique introduced in @xcite . ]",
    "as for the code construction , both the ldpc and the turbo code perspectives can be used to perform iterative decoding . for the former case",
    "we refer to the vast literature on fast fourier transform ( fft)-based bp decoders for non - binary ldpc codes ( see for instance @xcite ) , giving decoding algorithms with complexity that scales as @xmath16 . for the latter , the conventional turbo decoding algorithm based on the bcjr algorithm @xcite applied on the trellis of the component codes",
    "can be simplified by ffts as well , resulting in a complexity growth @xmath16 as for the ldpc bp decoder case @xcite .",
    "we shall focus next on the symbol maximum a - posteriori ( map ) decoding for the component convolutional codes .",
    "we discuss the case of a time - variant memory-@xmath13 rsc code , the non - recursive convolutional code case derivation being similar .",
    "each of the two rsc encoders of the proposed pccc scheme is in fact a time - variant memory-@xmath13 encoder ( i.e. , the current output symbol depends only on the current input symbol and on the past output symbol ) .",
    "the time variant nature of the component codes is due to the multiplications by the coefficients @xmath110 ( we omitted the superscript indicating the branch index ) .",
    "the rsc encoder is fully specified by the relations @xmath111 and @xmath112 , where the state of the encoder is defined by the value stored at the input of the delay unit .",
    "the number of states in the code trellis corresponds to the field order @xmath15 .",
    "we first consider the case where the component rsc codes are terminated .",
    "the a posteriori probability mass function ( p.m.f . ) vector for the symbol @xmath113 given the channel output @xmath114 is denoted by @xmath115 $ ] with @xmath116=\\pr\\{u_i=\\omega|\\mathbf{y}\\}$ ] , @xmath117 .",
    "the channel observation @xmath114 is given by @xmath118 where each element can be further split as @xmath119 , @xmath120 @xmath121 being the channel output corresponding to @xmath113 ( @xmath122 ) .",
    "is composed by @xmath123 elements to account for the additional input / output symbol required by the termination .",
    "] we further introduce the notation @xmath124}=(\\mathbf y_i , \\mathbf y_{i+1 } , \\ldots , \\mathbf y_{j})$ ] ( @xmath125 ) .",
    "the computation of the a posteriori probability for the symbol @xmath113 can be accomplished by evaluating @xmath126 the operator @xmath127 returns the label associated with @xmath113 for the trellis edge connecting the state @xmath128 at time @xmath129 to the state @xmath130 at time @xmath131 , @xmath132 denotes the forward metric for the state @xmath128 at time @xmath129 , @xmath133 is the backward metric for the state @xmath130 at time @xmath131 , and @xmath134 is the transition metric between states @xmath135 at time @xmath131 .",
    "we normalize the metrics such that @xmath136}\\ } , \\qquad \\varphi_{0}(0)=1,\\nonumber \\\\",
    "\\beta_{i}(s)&=\\pr\\{s_i = s|\\mathbf y_{[i+1:k]}\\ } , \\qquad \\beta_{k}(0)=1,\\nonumber \\\\",
    "\\gamma_i(s , s')&=\\pr\\{s_{i-1}=s , s_i = s'|\\mathbf y_i\\}\\nonumber \\\\ & = \\pr\\{u_i=\\omega , p_i=\\nu|y^u_i , y^p_i\\},\\label{eq : gamma_1}\\end{aligned}\\ ] ] with @xmath137 , @xmath138 . assuming independent outputs @xmath139 , can be factored into @xmath140 where @xmath141 depends on @xmath130 only since @xmath112 .",
    "the forward / backward metrics can be computed recursively as @xmath142 @xmath143\\gamma^u_{i+1}(s , s').\\label{eq : bwd_recursion}\\end{aligned}\\ ] ] note that involves a convolution since @xmath144 are related by @xmath145 .",
    "similarly , for @xmath135 are related by @xmath146 .",
    "we introduce the p.m.f .",
    "vectors @xmath147,\\\\ \\mathbf{\\beta}_{i}&=\\left[\\beta_{i}(0),\\beta_{i}(1),\\beta_{i}(\\alpha),\\ldots,\\beta_{i}\\left(\\alpha^{q-2}\\right)\\right],\\\\ \\mathbf{\\gamma}^p_i&=\\left[\\gamma^p_i(0),\\gamma^p_i(1),\\gamma^p_i(\\alpha),\\ldots,\\gamma^p_i\\left(\\alpha^{q-2}\\right)\\right],\\\\ \\mathbf{\\gamma}^u_i&=\\left[\\gamma^u_i(0),\\gamma^u_i(1),\\gamma^u_i(\\alpha),\\ldots,\\gamma^u_i\\left(\\alpha^{q-2}\\right)\\right],\\\\\\end{aligned}\\ ] ] where in the last expression ( with a slight abuse of the notation ) we re - defined @xmath148 . in vector form , we can re - arrange , into @xmath149\\nonumber \\\\ \\mathbf{\\beta}_{i}&=\\pi^{-1}_{f_{i+1}}\\left\\{\\left[\\mathbf{\\beta}_{i+1}\\cdot\\mathbf{\\gamma}^p_{i+1}\\right]\\circledast\\pi_{g_{i+1}}\\left(\\mathbf{\\gamma}^u_{i+1}\\right)\\right\\}. \\label{eq : vect_fwdbwd}\\end{aligned}\\ ] ] in , @xmath150 denotes the permutation , induced by the multiplication by a scalar @xmath151 of a random variable with p.m.f .",
    "vector @xmath152 , on @xmath152 , while @xmath153 denotes the inverse permutation ( or equivalently the permutation induced by the multiplication by @xmath154 ) .",
    "furthermore , @xmath155 denotes the ( point - wise ) multiplication of two vectors , and @xmath156 denotes the convolution of the two vectors .",
    "the a posteriori p.m.f .",
    "vector of @xmath113 given the channel output @xmath114 is finally given ( up to a normalization factor ) by @xmath157\\right\\}}_{\\mathbf{\\mu}_i^u}\\cdot \\mathbf{\\gamma}^u_i\\ ] ] where @xmath158 represents the extrinsic information , @xmath159 .",
    "the message update can be easily followed on the normal factor graph of a section of the trellis provided in fig .",
    "[ fig : fg ] . the complexity is here dominated by the convolution operations , and thus scales as @xmath160 .",
    "is the field order , and hence the length of the vectors involved in the convolutions of . ]",
    "the algorithm can be simplified by applying the ( fast ) fourier transform ( ft ) @xcite for finite abelian groups on the vectors involved in the convolutions . assuming extension fields with characteristic @xmath41",
    ", the ft reduces to the walsh - hadamard transform @xcite , i.e. given a function @xmath161 , @xmath162 , its fourier ( walsh - hadamard ) transform @xmath163 , @xmath164 , is obtained as @xmath165 @xmath166 being the inner product over @xmath167 between the length-@xmath168 binary vector representations @xmath169 of @xmath170 . by employing ffts , the decoding complexity is reduced to @xmath16 .",
    "simulation results on the awgn channel for codes on @xmath171 are presented next . in all the simulations , we adopted the bp decoding over the tanner graph of the codes with a maximum number of iterations set to @xmath172 .",
    "binary antipodal modulation has been considered .",
    "[ fig : perf128_all ] shows the performance for a rate - compatible code family with input block size @xmath173 bits . the mother code is a @xmath174 code , whose parity - check matrix coefficients",
    "have been selected according to the method of @xcite .",
    "a lower code rate @xmath175 has been obtained by repeating each code symbol twice , and by multiplying the replicas by random elements in @xmath176 as for the multiplicative repeat ( mr ) approach of @xcite .",
    "higher code rates have been obtained in two different ways , i.e. ( i ) according to the parallel concatenation scheme , by periodically - puncturing parity symbols at the output of the two accumulators and ( ii ) by puncturing the vns of type @xmath177 ( thus , a rate @xmath14 da code is obtained , and further higher rates can be achieved by puncturing symbols periodically at the output of the accumulator in the da encoder ) . in both cases , symbol - wise puncturing pattern ( spp ) has been applied .",
    "the interleaver has been designed according to a circulant version of the progressive edge growth ( peg ) algorithm @xcite .",
    "the rate @xmath9 mother code does not show floors down to @xmath178 , performing within @xmath179 db from the rcb @xcite .",
    "similar results are obtained by the lowest - rate code . for the two schemes with rate @xmath14 ,",
    "the performance is still within @xmath180 from the rcb down to @xmath181 , with a slight advantage for the da construction .",
    "the advantage is more visible for the rate @xmath182 case . here",
    ", the pccc performance suffers for a lack of steepness , which is not due to a low minimum distance ( low - weight error patterns have not been detected ) , but to a slow decoding convergence associable with the large fraction of punctured symbols . for the da case ,",
    "the rate @xmath14 code parity - check matrix of has been used for the tanner graph , and hence the higher rates have been obtained with a reduced fraction of punctured symbols .",
    "the same plot provides the performance of the @xmath174 double - binary turbo code of the dvb - rcs standard @xcite .",
    "the @xmath183 pccc outperforms the double - binary one by more that @xmath184 db at @xmath181 .",
    "[ fig : spb ] depicts the minimum @xmath185 required to achieve @xmath181 for several rate @xmath9 parallel concatenated convolutional codes and rate @xmath14 da codes , with block sizes spanning from @xmath186 bits to @xmath187 bits .",
    "the performances of rate @xmath14 binary irregular protograph - based ldpc and accumulate repeat accumulate ( ara ) codes from @xcite are provided too . the chart is completed by the spb @xcite for the continuous - input awgn channel .",
    "the da codes have been again obtained by puncturing the @xmath177-type nodes of the pccc graph .",
    "the interleavers have been generated on the fly according to @xcite .",
    "additionally , the rate @xmath9 and @xmath14 @xmath186 bits codes associated with the cycle graphs of fig .  [ fig : petersen_graph ] have been simulated .",
    "the rate @xmath9 pcccs perform within @xmath188 db from the spb all over the block sizes ( with the exception of @xmath186 ) . for the largest ( @xmath187 ) block length ,",
    "the gap is reduced to @xmath180 db . for the rate @xmath14 , the gap w.r.t .",
    "the spb is slightly larger ( @xmath179 db more ) .",
    "the gain of the proposed non - binary turbo codes over the binary ldpc codes is remarkable ( @xmath2 db or more)for the shortest block sizes . for the largest ( @xmath187 ) block length ,",
    "the gain is reduced to @xmath189 db .",
    "the performance of two short codes from @xcite are provided as well .",
    "the first is a @xmath190 extended bch code under maximum likelihood ( ml ) decoding , which achieves @xmath181 at @xmath191 db , only @xmath192 db away from the spb with a coding gain of @xmath193 db over the @xmath194 da code .",
    "we shall consider in the comparison that the da code does not perform a complete ml decoding , and hence provides an error detection mechanism that may be required by critical application , e.g. telecommand in the up - link of space communication systems @xcite .",
    "the second code is a @xmath195 terminated binary convolutional code with constraint length @xmath196 .",
    "this code performs close to the @xmath197 da code , which however has a slightly higher code rate ( @xmath188 vs. @xmath198 ) and a lower block size ( @xmath199 vs @xmath200 information bits ) .    , @xmath173 bits . ]     for achieving @xmath181 for various codes with rates @xmath201 , compared with the corresponding spbs . ]",
    "two novel classes of turbo codes constructed over high - order finite fields have been presented .",
    "the codes are derived from a protograph sub - ensemble of the @xmath0 regular ldpc ensemble .",
    "one of the proposed construction is based on the serial concatenation of a non - binary , time - variant differentiator and a of non - binary , time - variant accumulator , and provides a highly - structured flexible encoding scheme for @xmath1 ldpc ensembles .",
    "symbol map decoding of the component codes has been illustrated , together with its fft - based simplification .",
    "the proposed codes allow efficient decoding either as ldpc or as turbo codes .",
    "remarkable gains ( @xmath2 db ) w.r.t .",
    "binary ldpc / turbo codes have been demonstrated in the moderate - short block regimes .",
    "this research was supported in part by the esa project antares and in part by the ec under seventh fp grant agreement ict optimix n. infso - ict-214625 .",
    "g.  white and j.  costello , d.j .",
    ", `` construction and performance of @xmath15-ary turbo codes for use with @xmath168-ary modulation techniques , '' in _ proc . of ieee int .",
    "symp . on information theory _ , 2000 ,",
    "p. 220 .",
    "w.  lin , b.  bai , y.  li , and x.  ma , `` design of q - ary irregular repeat - accumulate codes , '' in _ proc .",
    "int . conf . on advanced information networking and applications _ ,",
    "los alamitos , usa , 2009 , pp .",
    "201206 .",
    "k.  kasai , d.  declercq , c.  poulliat , and k.  sakaniwa , `` rate - compatible non - binary ldpc codes concatenated with multiplicative repetition codes , '' in _ proc .",
    "symp . on information theory _",
    ", austin , texas , usa , jun . 2010 .",
    "s.  crozier , j.  lodge , p.  guinand , and a.  hunt , `` performance of turbo codes with relative prime and golden interleaving strategies , '' in _ proc .",
    "6th international mobile satellite conference _ , ottawa , ontario , canada , jun .",
    "1999 , pp . 268275 ."
  ],
  "abstract_text": [
    "<S> two classes of turbo codes over high - order finite fields are introduced . </S>",
    "<S> the codes are derived from a particular protograph sub - ensemble of the @xmath0 low - density parity - check code ensemble . </S>",
    "<S> a first construction is derived as a parallel concatenation of two non - binary , time - variant accumulators . </S>",
    "<S> the second construction is based on the serial concatenation of a non - binary , time - variant differentiator and of a non - binary , time - variant accumulator , and provides a highly - structured flexible encoding scheme for @xmath1 ensemble codes . </S>",
    "<S> a cycle graph representation is provided . </S>",
    "<S> the proposed codes can be decoded efficiently either as low - density parity - check codes ( via belief propagation decoding over the codes bipartite graph ) or as turbo codes ( via the forward - backward algorithm applied to the component codes trellis ) . </S>",
    "<S> the forward - backward algorithm for symbol maximum a posteriori decoding of the component codes is illustrated and simplified by means of the fast fourier transform . </S>",
    "<S> the proposed codes provide remarkable gains ( @xmath2 db ) over binary low - density parity - check and turbo codes in the moderate - short block regimes . </S>"
  ]
}
{
  "article_text": [
    "applying discrete optimization usually means solving real - world problems in industry , transportation , location , etc , but there are many problems arising in abstract mathematics , specially in commutative algebra , that can be formulated as integer programming problems and that have centered the attention of many researchers . in particular , problems in classical number theory are specially interesting and only a few papers appear in the literature where operational researchers deal with these type of problems .    in the recent years , there have appeared several methods based on algebraic tools to solve ( single and multi - objective ) discrete optimization problems as grbner bases @xcite or short generating functions @xcite , amongst others . in this paper",
    "we intend to give an inverse viewpoint , that is , how optimization tools can help to solve algebraic problems and then getting closer both mathematical fields , algebra and operational research .    here , we study a specific problem in a basic algebraic structure : numerical semigroups .",
    "it is a simple framework where developing optimization tools to make computations that are usually done by brute force .",
    "a numerical semigroup is a set of non - negative integers , closed under addition , containing zero and such that its complement in @xmath1 is finite .",
    "details about the theory of numerical semigroups can be found in the recent monograph by rosales and garca - snchez @xcite .",
    "it can be checked that many of the main notions in the theory of semigroups are , in fact , defined or characterized as discrete optimization problems .",
    "for instance , for a numerical semigroup @xmath2 , its multiplicity , @xmath3 , is the least integer belonging to @xmath2 , that is @xmath4 note that , if the reader is not familiar with numerical semigroups , may be it may not be possible to see why the above problem is a discrete optimization problem , but any numerical semigroup is minimally generated by a finite set of integers @xmath5 with @xmath6 , and then , any element in @xmath2 can be expressed as a linear combination , with non - negative integer coefficients , of this set .",
    "hence , the multiplicity of @xmath2 can be written as @xmath7 in this case , it is clear that @xmath8 .",
    "other well - known index is the _",
    "frobenius number_. if @xmath2 is a numerical semigroup , its frobenius number , @xmath9 , is the largest integer not belonging to @xmath2 .",
    "this index is well defined since by definition @xmath10 is finite .",
    "then ,    @xmath11    selmer proved that when a numerical semigroup , @xmath2 , is generated by only two elements @xmath12 and @xmath13 , then @xmath14 .",
    "however , there have not been many successes in finding formulas to compute the frobenius number when the numerical semigroup is generated by more than two integers .",
    "unfortunately , this problem can not be expressed as a linear integer problem .",
    "the last classical index that we want to mention is the genus of a numerical semigroup .",
    "if @xmath2 is a numerical semigroup , the _ genus _ of @xmath2 , @xmath15 , is the cardinal of @xmath10 ( its number of holes ) , that is , @xmath16 .",
    "new arithmetic invariants for commutative semigroups , and then , in particular for numerical semigroups that have recently appeared in the literature are the tame degree , the catenary degree and the @xmath0 invariant ( see @xcite for a complete algebraic description of these indices ) .",
    "these arithmetic invariants come from the field of commutative algebra and factorization theory , and their definitions are not intuitive from a combinatorial viewpoint . in particular , the @xmath0 invariant allows to derive crucial finiteness properties in the theory of non - unique factorizations for semigroups ( tameness ) .",
    "however , in @xcite the authors give characterizations of some of these concepts that allow the optimization approach giving here .    the goal of this paper is to present a new method for computing the @xmath0 invariant of a numerical semigroup by optimizing a linear function over the non - dominated solutions of a multiobjective integer programming problem .",
    "in contrast to usual integer programming problems , in multiobjective problems there are several objective functions to be optimized .",
    "usually , it is not possible to optimize all the objective functions simultaneously since objective functions induce a partial order over the vectors in the feasible region , so a different notion of solution is needed .",
    "a feasible vector is said to be a non - dominated ( or pareto optimal ) solution if no other feasible vector has component - wise larger objective values .",
    "the evaluation through the objectives of a non - dominated solution is called efficient solution .",
    "there are nowadays relatively few exact methods to solve general multiobjective integer and linear problems ( see @xcite ) .",
    "some of them combine optimality of the returned solutions with adaptability to a wide range of problems  @xcite .",
    "other methods , such as dynamic programming , are general methods for solving , not very efficiently , general families of optimization problems ( see @xcite ) . a different approach , as the two - phase method ( see @xcite ) , looks for supported solutions ( those that can be found as solutions of a single - objective problem over the same feasible region but with objective function a linear combination of the original objectives ) in a first stage and non - supported solutions are found in a second phase using the supported ones .",
    "the two - phase method combines usual single - criteria methods with specific multiobjective techniques .    optimizing over an efficient set consists then of maximizing ( or minimizing ) a single objective function over the solutions of a multiobjective problem . since it is not known the structure of the solution set of that problem , different techniques that those used to solve single or multiobjective problems are needed if we do not want to enumerate all the efficient solutions and then evaluate the function over all of them .",
    "although there have appeared some papers analyzing this problem when the problem is continuous ( see for instance , @xcite or @xcite ) , only a few study the discrete case ( @xcite ) .",
    "we apply an adaptation of the algorithm presented in @xcite to compute the @xmath0 invariant of a numerical semigroup .",
    "we choose that methodology since the approaches given in @xcite and @xcite does not fit the requirement of our problem .",
    "although there is no need of computing the @xmath0 invariant of a numerical semigroup in a short time , the hardness of computing this index even for a small number of generators makes it difficult to analyze the invariant . furthermore , algebraic researchers are showing an interest in studying certain combinatorial properties of non - unique factorizations ( in particular by the @xmath0 invariant ) , but this difficulty makes impossible to go further in the study of this index . in @xcite",
    "the authors give an algorithm to compute the @xmath0 invariant of a numerical semigroup by using techniques from factorization theory in monoids , and they give a short list of small problems that can be solved by using that methodology .",
    "we provide here a new method that avoid the complete enumeration of the non - dominated solutions of the subjacent multiobjective problem , and then , we are able to compute more efficiently the @xmath0 invariant of a numerical semigroup .",
    "this allows us to obtain computations that can not be done up to the moment by using the brute force algorithm and then , better analysis of the behavior of this invariant . in the last section of the paper",
    "we show that our method , not only improve the cpu computation times , but the sizes of the problems that can be solved .",
    "however , in this paper we do not underestimate the algorithm in @xcite .",
    "our algorithm seems to be able to compute the invariant for larger instances , but the approach in @xcite allows to give interesting conclusions for some special families of numerical semigroups .",
    "we center here in the computational side of the problem .",
    "other advantage of formulating the omega index as a mathematical programming problem is that a better analysis of the constraints and the objective function may improve the general running of the method .",
    "in section [ sec:2 ] we introduce the preliminary definitions and results for the rest of the paper .",
    "there , we describe the objects under study , the numerical semigroups , and the index we are interested to compute , the @xmath0-invariant .",
    "an algorithm for optimizing a linear function over an efficient integer set is described in section [ sec:3 ] , and it allows to compute efficiently the @xmath0-invariant of a numerical semigroup . in section [ sec:4 ] we show some computational tests done to check the efficiency of the algorithm .",
    "this paper is almost self - contained and written to be accessible for both algebraists and operational researchers .",
    "we begin this section introducing the structure under the study of this paper .",
    "a numerical semigroup is a subset @xmath2 of @xmath1 ( here @xmath1 denotes the set of non - negative integers ) closed under addition , containing zero and such that @xmath10 is finite .",
    "we say that @xmath5 is a system of generators of @xmath2 if @xmath17 .",
    "we denote @xmath18 if @xmath5 is a system of generators of @xmath2 .",
    "note that any numerical semigroup has an unique minimal system of generators , in the sense that no proper subset of it is a system of generators .",
    "then , we assume through this paper that if @xmath18 then @xmath5 is the minimal system of generators of @xmath2 and @xmath19 .",
    "the cardinality of the minimal system of generators , @xmath20 , is called the _ embedding dimension _ of @xmath2 .    note that , for @xmath18 a numerical semigroup we can define a homomorphism @xmath21 as @xmath22 usually called _ the factorization homomorphism_. for any element @xmath23 in @xmath2 we define @xmath24 as the set @xmath25 .",
    "the _ factorization monoid _ is the set @xmath26 .    for these semigroups",
    "we are interested in computing an index that measures how far away generators of a numerical semigroup are from primes : the @xmath0 invariant ( see @xcite for further details ) .",
    "[ defi : omega ] let @xmath18 be a numerical semigroup . for @xmath27 , let  @xmath28  denote the smallest  @xmath29  with the following property :    1 .   for all",
    "@xmath30 and @xmath31 , if @xmath32 , then there exists a subset @xmath33 such that @xmath34 and @xmath35    furthermore , we set @xmath36    note that @xmath37 since any numerical semigroup satisfies the ascending chain condition for @xmath38-ideals ( see @xcite and the references therein for further details ) .",
    "it is not direct to connect the above definition with optimization theory .",
    "however , the following result , proved in @xcite , is crucial to develop the integer programming method proposed in this paper . here , if @xmath39 , for some @xmath40 , we denote by @xmath41 the set of minimals elements in @xmath41 with respect to the component - wise order in @xmath42 .",
    "[ theo : omega ] let @xmath18 be a numerical semigroup .    1 .   for every @xmath27 , @xmath43 , 2 .",
    "@xmath44 .",
    "we denote by @xmath45 the _ length _ of @xmath46 . from the above result ,",
    "compute the @xmath0 invariant consists of maximizing the lengths of the minimal elements in the factorization monoid .    in the next section",
    "we connect the above result with the problem of optimizing a linear function over the efficient set of a multiobjective integer linear problem . in",
    "what follows , we recall the general structure of the optimization problems that are involved in the mathematical programming formulation of the omega invariant .",
    "this part of the paper can be skipped if the reader is familiar with this theory .",
    "an _ integer linear programming _ problem consists of finding the largest ( or smallest ) value of a linear operator ( objective function ) @xmath47 when @xmath48 only takes values over a feasible region defined by a system of linear equations :    @xmath49    where @xmath50 for all @xmath51 and @xmath52 .",
    "if we denote by @xmath53 and by @xmath54 , this problem can be written as    @xmath55    it is well - known @xcite that the complexity of solving the above problem is np - complete , and difficult to solve even for a small number of variables ( see @xcite ) . however",
    ", when the constraints ( @xmath56 ) have a concrete structure , or the formulation comes from a problem where more information is known , it is possible to develop exact ( or heuristic with high precision ) algorithms that allow to solve efficiently these problems ( see @xcite ) .",
    "recently , some papers have appeared where algebraic tools are used to solve problem ( see @xcite ) .",
    "if we consider in a linear operator @xmath57 ( with @xmath58 ) we get a integer linear multiobjective optimization problem : @xmath59    since , in this case , objective function defines a non - total order over the set of solutions of @xmath56 with @xmath60 , it is needed to define what we understand about solving .",
    "we say that a vector @xmath61 with @xmath56 is a _ non - dominated ( or pareto optimal ) solution _ if there is no other vector @xmath62 with @xmath63 and such that @xmath64 and @xmath65 where @xmath66 denotes the component - wise order in @xmath67 .",
    "then , the solution of is a set of feasible solutions that are not comparable and such that we can not find better solutions with respect to the partial ordering induced by @xmath68 . in the case",
    "we want to minimize instead of maximize , the ordering is adapted conveniently .    in general , the complexity of solving multiobjective integer problems is @xmath69p - hard and just a few algorithms appear in the literature to solve exactly this kind of problems .",
    "the recent works by blanco and puerto @xcite , de loera et .",
    "al @xcite and blanco and puerto @xcite present algebraic approaches for solving these problems . an interesting monograph for multiobjective optimization is @xcite .    in the next and last step",
    "we recall the goal of optimizing over an efficient integer region .",
    "note that given the set of non - dominated solutions of we may be interested in finding those non - dominated solutions that maximize a linear operator .",
    "then , we are interested in solving the following optimization problem : @xmath70 it is not possible , in general , to express the constraint of the above problem as a linear system of equations . actually , as far as we know , there are no descriptions for the set of solutions of a multiobjective problem , and then , to solve one may think of solving first the multiobjective problem , and then , selecting those solutions with largest values of @xmath48 .",
    "this process is not effective and it makes it difficult when the efficient set has a large size .",
    "however , there exists a few algorithms to solve without enumerating the complete set of non - dominated solutions of .",
    "in particular , we will adapt the algorithm presented in @xcite to solve the problem of optimizing over the efficient integer set related to the @xmath0-invariant .",
    "the following result states the structure of the optimization problem that solves the @xmath0-invariant .",
    "[ theo:1 ] let @xmath18 be a numerical semigroup .",
    "then , for each @xmath71 , @xmath72 is the solution of the following oes problem : @xmath73    observe that the elements in @xmath74 are those minimal elements with respect to the component wise ordering in @xmath75 , and @xmath76 .",
    "problem consists of maximizing the lengths of the non - dominated solutions of a multiobjective problem .",
    "we denote by @xmath77 that subjacent multiobjective problem    from the formulation of the @xmath0-invariant given in the above result , it is clear that if we denote by @xmath78 , the @xmath20-tuple having a @xmath79 as its @xmath80th entry and zeros otherwise , for each @xmath81 , @xmath82 since we can always write @xmath83 and @xmath84 is not a feasible solution .",
    "consequently , if the multiobjective subproblem has more non - dominated solutions they must have @xmath85 to be not comparable with @xmath78 .",
    "the next lemma states that these unit vector can not be solution of the multiobjective subjacent problem .",
    "[ lemma:1 ] let @xmath18 be a numerical semigroup .",
    "then , @xmath86 for all @xmath81 .    from definition [ defi : omega ] ,",
    "let us see that @xmath88 .",
    "assume that @xmath89 , then , if @xmath90 , there exists some @xmath91 such that @xmath92 .",
    "that is , if @xmath93 for some @xmath27 , then @xmath94 for some @xmath95 , for any @xmath96 and any @xmath30 .",
    "it is clear that it is not possible since that assumption is the same as stating that the generators of @xmath2 are prime , but there are no primes in a numerical semigroup ( see @xcite ) .",
    "furthermore , note that the feasible region in is not bounded .",
    "however , by solving linear integer problems we can obtain upper bounds for each of the variables @xmath97 involved in the problem , making bounded the feasible region .",
    "for each @xmath81 and @xmath98 , let @xmath99 the optimal value of the following integer program : @xmath100 the solutions of are those feasible solutions of in the form @xmath101 .",
    "an upper bound for each variable in is then @xmath102 .",
    "note that if @xmath103 is a non - dominated solution of the multiobjective subproblem in , and @xmath104 , then @xmath105 , and also , if @xmath106 , then @xmath85 .",
    "it is clear since if @xmath107 and @xmath108 have nonzero values , then , we can always find a feasible solution @xmath109 where @xmath110 , @xmath111 , and @xmath112 and @xmath113 for @xmath114 .",
    "this result is also proved in @xcite from an algebraic viewpoint , in terms of the supports of @xmath103 and @xmath115 .    as a direct consequence of lemma [ lemma:1 ] , theorem [ theo:1 ] and the comment above we get the following result :    [ corollary:1 ] let @xmath18 be a numerical semigroup .",
    "then , for each @xmath71 , @xmath72 is the solution of the following oes problem : @xmath116    now , computing the omega invariant consists of solving a problem of optimizing a linear function over the efficient region of a bounded integer linear multiobjective problem . in the next section",
    "we describe a methodology for solving .",
    "in this section we adapt the procedure given in @xcite for solving , and consequently compute the omega invariant of a numerical semigroup . for the sake of that , we first give some previous results related to each of the steps of the algorithm .",
    "let @xmath81 .",
    "the first step of the proposed procedure consists of stating that we effectively need to design an algorithm to compute @xmath72 . with this aim",
    ", we consider a relaxed problem of consisting of obviating that the feasible solutions are just the minimal non - dominated solutions of the multiobjective problem , but the feasible solutions of @xmath77 .",
    "this problem is the following @xmath118 if we solve and the optimal solution is a non - dominated solution of @xmath77 , then , that solution is the solution of .",
    "furthermore , if is infeasible , has no solution .",
    "the next result gives us some information about the above problem .",
    "[ lemma:3 ] problem is feasible .",
    "furthermore , the optimal solutions of are not non - dominated solution of @xmath77 .    by the definition of the @xmath0 invariant and the characterization given in theorem [ theo:1 ] ,",
    "it is clear that can not be infeasible .",
    "moreover , the problem is bounded due to the finiteness of @xmath119 ( see comment after definition [ defi : omega ] ) .",
    "let @xmath120 an optimal solution of .",
    "assume first that @xmath121 for all @xmath122 with @xmath114 ( @xmath123 ) .",
    "then , by the comment done before corollary [ corollary:1 ] , @xmath124 for all @xmath114 , and then , by feasibility @xmath125 , that is not possible since we are supposing that @xmath5 is a minimal system of generators of @xmath2",
    ". then , there exists at least one @xmath98 such that @xmath126 .",
    "assume now that @xmath120 is a non - dominated solution of @xmath77 , and let @xmath127 and @xmath128 .",
    "by definition @xmath129 is a feasible solution of @xmath77 and @xmath130 , and consequently @xmath131 contradicting the optimality of @xmath132 .",
    "the above result justifies the development of an algorithm that allows to improve the optimal solution of to obtain the optimal value of . in the next step we search for feasible solutions of @xmath77 that are non - dominated and that dominate the optimal solution of . for that , we use the following adaptation of the result by ecker and kouada @xcite .",
    "[ lemma:4 ] let @xmath132 be an optimal solution of and @xmath133 an optimal solution of the following problem @xmath134 then , @xmath135 is a non - dominated solution of @xmath77 that dominates @xmath132 .    with this lemma , we are able to compute non - dominated solutions of @xmath77 from the solutions of",
    ". however , these solutions may not be the ones that maximize the lengths in .",
    "to move through feasible solutions of our problem to obtain the wished solutions , we use the idea presented in @xcite , where the author gives a procedure to generate new non - dominated solutions .",
    "this procedure uses a result given in the book by nemhauser and wolsey @xcite .",
    "[ lemma:5 ] let @xmath135 be a non - dominated solution @xmath136 and @xmath137 an optimal solution of the following problem @xmath138 and where @xmath139 .",
    "then , @xmath140 is a feasible solution of @xmath136 that is not dominated by @xmath135 .    by using the above lemma , in case",
    "the solution @xmath135 is not a solution of , we can generate other feasible solution , non comparable with it and such that we can check if it is the one that we are looking for or , if it is not , continue iterating to reach it .    therefore ,",
    "if the solution @xmath135 obtained is not optimal for and we find @xmath140 by using lemma [ lemma:5 ] , @xmath132 can be replaced by @xmath140 in the procedure of lemma [ lemma:4 ] to obtain a non - dominated solution that dominates @xmath140 . if this new non - dominated solution is not the optimal solution of we use again lemma [ lemma:5 ] to obtain a non comparable solution with this .",
    "but it may occur that this process cycle obtaining @xmath140 again .",
    "however , this can be avoided by applying the following extension of lemma [ lemma:5 ] , and also the reader can find it in @xcite , that allows to obtain a feasible solution of @xmath77 that is not comparable with a given list of non - dominated solutions @xmath141 .",
    "[ lemma:6 ] let @xmath141 be non - dominated solutions of @xmath136 and @xmath137 an optimal solution of the following problem @xmath142 and where @xmath139 .",
    "then , @xmath140 is a feasible solution of @xmath136 that is not dominated by @xmath141 .    with this method",
    "we are able to find a feasible solution that is not comparable with any of the solutions found in the previous iterations ( those that we know that are not optimal for ) .",
    "we can repeat the process until we get the desired solution , but when do we know that we have got the solution of our problem ? to ask this question we analyze the last step of the described procedure .",
    "assume we have obtained a non - dominated solution of @xmath143 , @xmath140 .",
    "if we solve and we get @xmath144 as optimal solution with @xmath145 then , @xmath140 is the solution to our problem since among all the possible non - dominated solutions , the one that has maximum length has smaller length than @xmath140 . moreover , if is infeasible , clearly @xmath140 is our solution .",
    "the general procedure is describe in the pseudo - code of algorithm [ alg:1 ]    [ alg:1 ] @xmath146    solve : @xmath147 .    a direct consequence of all the above comments about the proposed procedure is the following .",
    "let @xmath148 be a numerical semigroup .",
    "algorithm [ alg:1 ] computes @xmath72 in a finite number of steps . as @xmath149 , algorithm [ alg:1 ] also allows the computation of @xmath119 .",
    "the following example illustrates the usage of algorithm [ alg:1 ] .",
    "let @xmath150 .",
    "the corresponding bounds are @xmath151 , @xmath152 and @xmath153 and the constants for are @xmath154 , @xmath155 and @xmath156 .",
    "the optimal solution for @xmath157 is @xmath158 .",
    "solving now @xmath159 we obtain @xmath160 , and finally , the optimal solution of @xmath161 is @xmath162 . since @xmath163",
    ", we continue with the algorithm with @xmath164 .",
    "computing now the solution of @xmath159 we get @xmath165 and @xmath166 is infeasible , so @xmath167 .",
    "analogously we obtain @xmath168 and @xmath169 , being @xmath170 .",
    "note that further improvements can be done in the above algorithm by incorporating bounds for the @xmath0 invariant at each step of it .",
    "for instance , we can initially set @xmath171 and @xmath172 , the lower and upper bounds for @xmath72 , respectively .",
    "then , update @xmath173 with the optimal value of and @xmath174 with the optimal value of when they are improved . with this",
    ", we have that either when @xmath175 or the optimal value of is smaller than @xmath173 , the solution is the last solution obtained by solving .",
    "we have included these bounds to our implementation for the computational results , although some others could be added by incorporating these bounds conveniently to the constraints of the problems .",
    "moreover , if the apery sets of the numerical semigroup are known , the following lemma , that appears in @xcite , helps us to simplify the problem of searching minimal solutions .",
    "let @xmath176 be a numerical semigroup , @xmath81 , and @xmath177 . then ,",
    "if @xmath178 , @xmath179 .    choose @xmath180 such that @xmath178 . since @xmath132 is feasible for @xmath77 , @xmath181 .",
    "from the minimality of @xmath120 , @xmath182 can not be minimal , that is , @xmath183 can not be expressed as a integer linear combination of @xmath184 , or equivalently , @xmath185 .",
    "this implies that @xmath186 .",
    "then , with the above result , the equation defining the feasible region of @xmath187 can be written as @xmath188    since the above constraint is not linear , we can add part of the information contained on it by incorporating inequalities in the form @xmath189 or @xmath190",
    "in this section we present the results of some computational experiments done to analyze the applicability of the algorithm proposed in section [ sec:3 ] . for the sake of",
    "that we have generated a set of instances of numerical semigroups with different numbers of minimal generators . from the computational viewpoint , up to the moment , we can only compare our algorithm with a recent implementation done in gap @xcite for @xcite ( available upon request ) , and that consists of enumerating all the feasible solutions of @xmath77 , comparing them to determine which are the minimal solutions , and finally selecting those with largest length .",
    "our algorithm has been implemented in xpress - mosel 7.0 that allows to solve the single - objective integer problems involved in the resolution of the @xmath0 invariant , by using a branch - and - bound method and nesting models by calling the library ` mmjobs ` .",
    "the algorithms have been executed on a pc with an intel core 2 quad processor at 2x 2.50 ghz and 4 gb of ram .",
    "it is clear that the complexity of the algorithm depends of the dimension of the space ( embedding dimension of the numerical semigroups ) and the size of the coefficient of the constraints .",
    "then , we have generated for each @xmath191 , five instances of @xmath20 non - negative integers ranging in @xmath192 $ ] .",
    "note that larger instances are difficult to find since even for @xmath193 , selecting @xmath194 non - negative integers with great common divisor equal to one and such that they are a minimal system of generators of a numerical semigroup is not an easy task .",
    "we have used recursively the function ` randomlistforns ` of gap until we found the list of integer with the above requirements . in table",
    "[ table:1 ] we show the battery of numerical semigroup for which we have run the algorithms . in the first column",
    "we write the name we give to the semigroup , in the second column the set of minimal generating system of the numerical semigroup , and in the last column the embedding dimension of the semigroup .     `",
    "s`@xmath195 & @xmath196 & + ` s`@xmath197 & @xmath198 & + ` s`@xmath199 & @xmath200 & @xmath201 + ` s`@xmath202 & @xmath203 & + ` s`@xmath204 & @xmath205 & + ` s`@xmath206 & @xmath207 & + ` s`@xmath208 & @xmath209 & + ` s`@xmath210 & @xmath211 & @xmath212 + ` s`@xmath213 & @xmath214 & + ` s`@xmath215 & @xmath216 & +    ` s`@xmath217 & @xmath218 & + ` s`@xmath219 & @xmath220 & + ` s`@xmath221 & @xmath222 & @xmath223 + ` s`@xmath224 & @xmath225 + ` s`@xmath226 & @xmath227 & + ` s`@xmath228 & @xmath229 & + ` s`@xmath230 & @xmath231 & + ` s`@xmath232 & @xmath233 & @xmath194 + ` s`@xmath234 & @xmath235 & + ` s`@xmath236 & @xmath237 & +    in tables [ table:2 ] and [ table:3 ] we summarize the obtained results . in the first column",
    "we write the numerical semigroup ( @xmath2 ) .",
    "the second column is the generator with respect to the @xmath0 invariant is computed ( @xmath238 ) .",
    "the value of @xmath239 is shown in the third column ( in this same column we mark in bold face , for each numerical semigroup , the maximum value that coincides with @xmath240 ) .",
    "one of the minimal vectors that reach the maximum length is shown in the fourth column .",
    "the next column , the fifth , shows the number of iterations of our algorithm ( @xmath241 ) .",
    "the cpu time ( in seconds ) needed to compute @xmath72 with our algorithm ( ` time`@xmath242 ) and with gap ( ` gaptime ` - @xmath243 indicates that gap was not able to solve the problem in less than @xmath244 hours ) is shown in columns sixth and seventh , respectively .",
    "the eigth shows the total cpu time needed to compute @xmath119 ( ` totaltime ` ) .",
    "the average cpu time to compute each of the @xmath72 ( ` avtime ` ) is written in column nineth .",
    "the last column is the number of minimal ( nondominated ) elements of the corresponding problem that was computed with gap ( @xmath243 indicates that gap was not able to compute this number in less than two hours ) .    for the computations of the experiments for @xmath245 we add to the constraints of the multiobjective problem the inequalities @xmath189 or @xmath190 .",
    "@xmath246 & ` min ` & ` it ` & @xmath247 & ` gaptime ` & ` tottime ` & ` avtime ` & @xmath248 + & 20 & 4 & [ 0,0,0,0,4 ] & 9 & 0.54 & 6.03 & & & 12 + & 354 & 60 & [ 60,0,0,0,0 ] & 12 & 0.95 & 11.35 & & & 14 + s5(1 ) & 402 & 63 & [ 63,0,0,0,0 ] & 16 & 1.439 & 12.54 & 5.921 & 1.184 & 17 + & 417 & 60 & [ 60,0,0,0,0 ] & 15 & 1.43 & 12.68 & & & 16 + & 429 & 60 & [ 60,0,0,0,0 ] & 17 & 1.55 & 12.43 & & & 20 + & 7 & 3 & [ 0,3,0,0,0 ] & 10 & 0.55 & 12.48 & & & 11 + & 292 & 93 & [ 93,0,0,0,0 ] & 9 & 0.37 & 23.72 & & & 11 + s5(2 ) & 359 & 93 & [ 93,0,0,0,0 ] & 11 & 0.43 & 27.33 & 2.84 & 0.56 & 13 + & 645 & 200 & [ 200,0,0,0,0 ] & 14 & 0.67 & 45.92 & & & 15 + & 755 & 200 & [ 200,0,0,0,0 ] & 18 & 0.81 & 75.59 & & & 19 + & 5 & 2 & [ 0,0,0,2,0 ] & 8 & 0.285 & 1.201 & & & 11 + & 86 & 37 & [ 37,0,0,0,0 ] & 11 & 0.294 & 2.527 & & & 12 + s5(3 ) & 99 & 37 & [ 37,0,0,0,0 ] & 11 & 0.34 & 2.82 & 1.69 & 0.33 & 12 + & 148 & 60 & [ 60,0,0,0,0 ] & 12 & 0.37 & 4.1 & & & 13 + & 152 & 60 & [ 60,0,0,0,0 ] & 12 & 0.39 & 2.29 & & & 13 + & 41 & 14 & [ 0,14,0,0,0 ] & 12 & 0.893 & 5.64 & & & 14 + & 65 & 22 & [ 22,0,0,0,0 ] & 13 & 0.988 & 6.02 & & & 14 + s5(4 ) & 155 & 24 & [ 24,0,0,0,0 ] & 16 & 1.1 & 8.22 & 7.39 & 1.47 & 18 + & 317 & 22 & [ 21,0,1,0,0 ] & 22 & 2.916 & 13.96 & & & 28 + & 377 & 31 & [ 31,0,0,0,0 ] & 18 & 1.49 & 18.7 & & & 35 + & 28 & 10 & [ 0,10,0,0,0 ] & 11 & 0.5 & 10.71 & & & 12 + & 55 & 25 & [ 25,0,0,0,0 ] & 8 & 0.381 & 11.45 & & & 12 + s5(5 ) & 125 & 27 & [ 27,0,0,0,0 ] & 13 & 0.71 & 20.18 & 4.719 & 0.94 & 15 + & 233 & 26 & [ 26,0,0,0,0 ] & 13 & 0.732 & 42.37 & & & 17 + & 590 & 30 & [ 24,5,0,1,0 ] & 23 & 2.38 & 109.38 & & & 48 + & 43 & 5 & [ 0,0,5,0,0,0,0,0,0,0 ] & 49 & 3.36 & 5.41 & & & 58 + & 63 & 8 & [ 8,0,0,0,0,0,0,0,0,0 ] & 48 & 2.7 & 8.61 & & & 65 + & 68 & 8 & [ 8,0,0,0,0,0,0,0,0,0 ] & 49 & 3.16 & 13.18 & & & 69 + & 108 & 7 & [ 5,0,2,0,0,0,0,0,0,0 ] & 52 & 4.15 & 18.26 & & & 81 + & 120 & 8 & [ 8,0,0,0,0,0,0,0,0,0 ] & 57 & 4.24 & 12.65 & & & 94 + s10(1 ) & 135 & 9 & [ 9,0,0,0,0,0,0,0,0,0 ] & 68 & 5.95 & 15.5 & 67.89 & 6.78 & 108 + & 142 & 9 & [ 9,0,0,0,0,0,0,0,0,0 ] & 88 & 9.24 & 16.75 & & & 125 + & 150 & 7 & [ 4,2,1,0,0,0,0,0,0,0 ] & 66 & 8.07 & 19.85 & & & 116 + & 177 & 9 & [ 7,2,0,0,0,0,0,0,0,0 ] & 70 & 6.88 & 49.26 & & & 149 + & 224 & 9 & [ 7,0,2,0,0,0,0,0,0,0 ] & 113 & 20.1 & 65.16 & & & 246 + & 15 & 3 & [ 0,0,3,0,0,0,0,0,0,0 ] & 36 & 1.801 & 6.64 & & & 45 + & 46 & 9 & [ 9,0,0,0,0,0,0,0,0,0 ] & 39 & 1.66 & 10.32 & & & 48 + & 58 & 10 & [ 10,0,0,0,0,0,0,0,0,0 ] & 38 & 1.69 & 12.23 & & & 50 + & 89 & 9 & [ 7,0,1,0,0,0,0,1,0,0 ] & 47 & 2.681 & 17.33 & & & 68 + & 108 & 15 & [ 15,0,0,0,0,0,0,0,0,0 ] & 63 & 3.278 & 24 & & & 83 + s10(2 ) & 114 & 16 & [ 16,0,0,0,0,0,0,0,0,0 ] & 57 & 3.07 & 28.81 & 35.87 & 3.58 & 78 + & 117 & 15 & [ 15,0,0,0,0,0,0,0,0,0 ] & 63 & 4.316 & 21.65 & & & 88 + & 126 & 16 & [ 16,0,0,0,0,0,0,0,0,0 ] & 73 & 4.243 & 22.48 & & & 99 + & 130 & 22 & [ 22,0,0,0,0,0,0,0,0,0 ] & 64 & 3.399 & 38.59 & & & 98 + & 173 & 23 & [ 23,0,0,0,0,0,0,0,0,0 ] & 107 & 9.73 & 80.49 & & & 161 + & 20 & 4 & [ 0,0,0,4,0,0,0,0,0,0 ] & 39 & 1.48 & 5.1 & & & 43 + & 22 & 5 & [ 5,0,0,0,0,0,0,0,0,0 ] & 43 & 1.59 & 5.41 & & & 45 + & 24 & 5 & [ 5,0,0,0,0,0,0,0,0,0 ] & 36 & 1.3 & 5.41 & & & 45 + & 26 & 5 & [ 3,2,0,0,0,0,0,0,0,0 ] & 33 & 1.64 & 3.49 & & & 44 + s10(3 ) & 54 & 6 & [ 0,6,0,0,0,0,0,0,0,0 ] & 52 & 2.77 & 14.05 & 99.49 & 9.94 & 88 + & 77 & 9 & [ 7,0,2,0,0,0,0,0,0,0 ] & 93 & 13.27 & 26.72 & & & 176 + & 83 & 9 & [ 6,0,2,1,0,0,0,0,0,0 ] & 109 & 19.41 & 33.83 & & & 198 + & 89 & 10 & [ 10,0,0,0,0,0,0,0,0,0 ] & 100 & 13.85 & 41.18 & & & 219 + & 93 & 10 & [ 10,0,0,0,0,0,0,0,0,0 ] & 109 & 21.75 & 46.17 & & & 254 + & 95 & 10 & [ 10,0,0,0,0,0,0,0,0,0 ] & 114 & 22.4 & 52.46 & & & 251 + & 131 & 7 & [ 5,0,0,0,2,0,0,0,0,0 ] & 63 & 8.34 & 61.44 & & & 102 + & 136 & 6 & [ 3,1,0,0,2,0,0,0,0,0 ] & 47 & 7.23 & 54.38 & & & 88 + & 171 & 6 & [ 2,2,0,0,2,0,0,0,0,0 ] & 65 & 11.18 & 56.92 & & & 102 + & 173 & 7 & [ 3,1,3,0,0,0,0,0,0,0 ] & 60 & 9.87 & 116.22 & & & 118 + s10(4 ) & 239 & 8 & [ 5,2,0,0,0,0,0,1,0,0 ] & 83 & 16.81 & 104.66 & 225.55 & 22.55 & 155 + & 278 & 10 & [ 10,0,0,0,0,0,0,0,0,0 ] & 80 & 14.93 & 129.1 & & & 208 + & 287 & 10 & [ 10,0,0,0,0,0,0,0,0,0 ] & 62 & 11.628 & 128.1 & & & 178 + & 364 & 10 & [ 7,3,0,0,0,0,0,0,0,0 ] & 128 & 34.053 & 227.12 & & & 260 + & 483 & 11 & [ 9,1,0,0,0,0,1,0,0,0 ] & 204 & 105.146 & 497 & & & 427 + & 146 & 8 & [ 0,6,2,0,0,0,0,0,0,0 ] & 42 & 8.048 & 100.82 & & & 70 + & 173 & 10 & [ 10,0,0,0,0,0,0,0,0,0 ] & 71 & 15.43 & 115.39 & & & 99 + & 207 & 10 & [ 10,0,0,0,0,0,0,0,0,0 ] & 60 & 11.77 & 138.87 & & & 82 + & 359 & 12 & [ 7,5,0,0,0,0,0,0,0,0 ] & 60 & 14.69 & 198.246 & & & 152 + s10(5 ) & 426 & 12 & [ 12,0,0,0,0,0,0,0,0,0 ] & 77 & 16.23 & 290.08 & 315.14 & 31.51 & 130 + & 548 & 12 & [ 0,12,0,0,0,0,0,0,0,0 ] & 105 & 38.525 & 470.76 & & & 209 + & 604 & 15 &",
    "[ 15,0,0,0,0,0,0,0,0,0 ] & 124 & 43.81 & 499.9 & & & 244 + & 606 & 13 & [ 13,0,0,0,0,0,0,0,0,0 ] & 98 & 28.4 & 422.96 & & & 243 + & 657 & 12 & [ 0,8,4,0,0,0,0,0,0,0 ] & 105 & 65.01 & 558.71 & & & 244 + & 702 & 14 & [ 14,0,0,0,0,0,0,0,0,0 ] & 159 & 73.19 & 718.58 & & & 362 +     @xmath246 & ` min ` & ` it ` & @xmath247 & ` gaptime ` & ` tottime ` & ` avtime ` & @xmath248 + & 47 & 6 & [ 6,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 114 & 8.386 & 13.78 & & & 129 + & 65 & 5 & [ 4,0,0,1,0,0,0,0,0,0,0,0,0,0,0 ] & 112 & 10.358 & 35.64 & & & 159 + & 79 & 5 & [ 3,1,0,0,1,0,0,0,0,0,0,0,0,0,0 ] & 105 & 9.392 & 7.21 & & & 165 + & 82 & 6 & [ 0,6,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 141 & 13.664 & 17.93 & & & 184 + & 84 & 6 & [ 4,1,0,0,1,0,0,0,0,0,0,0,0,0,0 ] & 112 & 11.156 & 28.24 & & & 192 + & 91 & 7 & [ 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 101 & 6.863 & 9.34 & & & 173 + s15(1 ) & 96 & 7 & [ 4,3,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 104 & 11.98 & 52.225 & 612.099 & 40.8066 & 250 + & 100 & 8 & [ 8,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 187 & 26.425 & 29.725 & & & 251 + & 109 & 7 & [ 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 129 & 12.659 & 35.725 & & & 245 + & 121 & 8 & [ 8,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 154 & 19.271 & 48.225 & & & 307 + & 124 & 8 & [ 8,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 214 & 37.796 & 203.8 & & & 364 + & 134 & 7 & [ 5,1,1,0,0,0,0,0,0,0,0,0,0,0,0 ] & 168 & 29.652 & 241.9 & & & 383 + & 139 & 8 & [ 8,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 183 & 30.122 & 199.05 & & & 394 + & 169 & 8 & [ 5,2,0,0,0,1,0,0,0,0,0,0,0,0,0 ] & 285 & 38.405 & 164.625 & & & 680 + & 46 & 5 & [ 0,1,3,0,1,0,0,0,0,0,0,0,0,0,0 ] & 83 & 8.383 & 79.4 & & & 98 + & 115 & 6 & [ 2,0,3,0,1,0,0,0,0,0,0,0,0,0,0 ] & 94 & 10.454 & 112.65 & & & 109 + & 155 & 17 & [ 17,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 123 & 14.728 & 139.425 & & & 151 + & 286 & 15 & [ 12,0,3,0,0,0,0,0,0,0,0,0,0,0,0 ] & 137 & 20.015 & 291.65 & & & 206 + & 289 & 15 & [ 15,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 109 & 14.545 & 293.575 & & & 190 + & 341 & 17 & [ 17,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 174 & 65.975 & 401 & & & 252 + & 342 & 15 & [ 14,0,0,0,1,0,0,0,0,0,0,0,0,0,0 ] & 192 & 32.986 & 406.775 & & & 265 + s15(2 ) & 348 & 15 & [ 13,0,2,0,0,0,0,0,0,0,0,0,0,0,0 ] & 193 & 113.383 & 427.3 & 1683.63 & 112.242 & 291 + & 393 & 20 & [ 20,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 228 & 135.869 & 550.35 & & & 320 + & 436 & 25 &",
    "[ 25,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 273 & 74.036 & 736.575 & & & 413 + & 445 & 24 & [ 24,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 311 & 96.198 & 784.625 & & & 434 + & 449 & 19 & [ 19,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 294 & 82.945 & 795.45 & & & 425 + & 504 & 22 & [ 22,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 354 & 177.154 & 1161.45 & & & 594 + & 527 & 20 & [ 20,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 367 & 166.69 & 1345.275 & & & 610 + & 584 & 26 & [ 26,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 438 & 670.269 & 1988.875 & & & 737 + & 40 & 3 & [ 0,1,0,0,1,0,0,0,0,1,0,0,0,0,0 ] & 89 & 7.53 & 24.85 & & & 113 + & 84 & 8 & [ 8,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 119 & 11.648 & 39.95 & & & 139 + & 126 & 10 & [ 10,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 114 & 13.082 & 67.375 & & & 195 + & 130 & 10 & [ 10,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 117 & 12.165 & 68.425 & & & 188 + & 132 & 10 & [ 10,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 126 & 12.849 & 69.1 & & & 186 + & 135 & 10 & [ 10,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 149 & 23.85 & 72.4 & & & 212 + & 142 & 10 & [ 10,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 156 & 20.35 & 78.35 & & & 216 + s15(3 ) & 152 & 8 & [ 8,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 176 & 22.83 & 90.65 & 1407.684 & 93.8456 & 267 + & 165 & 12 & [ 12,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 183 & 31.199 & 109.15 & & & 305 + & 183 & 10 & [ 10,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 189 & 38.537 & 134.025 & & & 324 + & 217 & 11 & [ 9,1,0,0,1,0,0,0,0,0,0,0,0,0,0 ] & 244 & 77.582 & 219.075 & & & 446 + & 221 & 11 & [ 11,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 250 & 70.445 & 229.625 & & & 454 + & 229 & 13 & [ 13,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 274 & 89.679 & 253.775 & & & 478 + & 273 & 14 & [ 14,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 353 & 133.473 & 475.725 & & & 701 + & 323 & 15 & [ 15,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 578 & 842.465 & 3487.55 & & & 1076 + & 75 & 5 & [ 0,4,0,1,0,0,0,0,0,0,0,0,0,0,0 ] & 92 & 8.229 & 42.65 & & & 123 + & 104 & 6 & [ 4,0,0,1,1,0,0,0,0,0,0,0,0,0,0 ] & 96 & 10.708 & 52.2 & & & 140 + & 114 & 7 & [ 5,0,0,2,0,0,0,0,0,0,0,0,0,0,0 ] & 86 & 8.044 & 54.875 & & & 144 + & 128 & 7 & [ 5,0,2,0,0,0,0,0,0,0,0,0,0,0,0 ] & 104 & 10.528 & 61.075 & & & 147 + & 216 & 8 & [ 3,0,5,0,0,0,0,0,0,0,0,0,0,0,0 ] & 151 & 23.513 & 126.85 & & & 254 + & 219 & 9 & [ 8,1,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 145 & 19.017 & 126.95 & & & 251 + & 241 & 9 & [ 9,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 139 & 22.934 & 156.65 & & & 302 + s15(4 ) & 271 & 8 & [ 4,3,1,0,0,0,0,0,0,0,0,0,0,0,0 ] & 188 & 52.956 & 202.2 & 892.038 & 59.4692 & 357 + & 309 & 9 & [ 6,1,1,1,0,0,0,0,0,0,0,0,0,0,0 ] & 211 & 62.039 & 284.25 & & & 439 + & 310 & 10 & [ 10,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 188 & 34.511 & 281.525 & & & 429 + & 321 & 12 & [ 12,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 269 & 67.673 & 320.65 & & & 523 + & 327 & 10 &",
    "[ 10,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 185 & 43.396 & 341.225 & & & 502 + & 340 & 11 & [ 11,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 212 & 42.852 & 374.325 & & & 509 + & 352 & 10 & [ 7,3,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 262 & 300.513 & 2434.3 & & & 622 + & 371 & 11 & [ 11,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 315 & 185.125 & 505.925 & & & 661 + & 29 & 5 & [ 0,5,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 97 & 3.899 & 258.275 & & & 106 + & 50 & 5 & [ 5,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 99 & 4.911 & 533.775 & & & 116 + & 95 & 6 & [ 3,2,0,0,0,1,0,0,0,0,0,0,0,0,0 ] & 115 & 9.017 & 73.725 & & & 154 + & 96 & 10 & [ 10,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 120 & 7.652 & 24.55 & & & 171 + & 99 & 9 & [ 9,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 127 & 9.08 & 25.7 & & & 170 + & 109 & 9 & [ 9,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 138 & 11.984 & 30.225 & & & 187 + & 110 & 10 & [ 10,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 124 & 7.249 & 31.025 & & & 192 + s15(5 ) & 119 & 11 & [ 11,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 127 & 9.411 & 36.375 & 685.921 & 45.72807 & 211 + & 131 & 10 & [ 9,1,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 121 & 10.939 & 45.3 & & & 252 + & 134 & 11 & [ 11,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 174 & 17.188 & 48.075 & & & 258 + & 135 & 11 & [ 11,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 173 & 20.678 & 225.525 & & & 288 + & 152 & 10 & [ 8,2,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 180 & 28.469 & 144.375 & & & 338 + & 162 & 9 & [ 8,0,0,0,1,0,0,0,0,0,0,0,0,0,0 ] & 205 & 32.88 & 83.55 & & & 357 + & 180 & 10 & [ 8,2,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 269 & 71.89 & 269.85 & & & 471 + & 201 & 14 & [ 14,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 306 & 440.674 & 1883.525 & & & 584 + & 131 & 8 & [ 0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 188 & 35.321 & 321.325 & & & 264 + & 145 & 8 & [ 8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 191 & 34.252 & 332.3 & & & 265 + & 249 & 9 & [ 6,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 233 & 54.57 & 550.725 & & & 340 + & 257 & 9 &",
    "[ 6,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 233 & 53.913 & 569.15 & & & 352 + & 260 & 8 & [ 8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 197 & 47.428 & 573.775 & & & 355 + & 319 & 9 & [ 1,7,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 244 & 90.809 & 785.925 & & & 451 + & 354 & 9 & [ 4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 256 & 97.12 & 938.925 & & & 500 + & 459 & 10 & [ 0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 398 & 182.085 & 1700.525 & & & 787 + & 465 & 9 & [ 9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 356 & 363.725 & 1747.575 & & & 752 + s20(1 ) & 469 & 11 & [ 3,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 317 & 239.548 & 1802.75 & 19603.67 & 980.1835 & 796 + & 487 & 9 & [ 9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 384 & 408.842 & 2011.8 & & & 865 + & 572 & 12 & [ 6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 399 & 826.33 & 3290.4 & & & 1160 + & 575 & 10 & [ 0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 542 & 3123.4 & 3414.425 & & & 1235 + & 587 & 12 & [ 12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 487 & 1356.94 & 3657.525 & & & 1273 + & 606 & 11 & [ 11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 507 & 2100.84 & 4119.5 & & & 1389 + & 607 & 10 & [ 5,5,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 787 & 2894.21 & 4181.7 & & & 1387 + & 652 & 11 & [ 9,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 683 & 2013.25 & 5538.2 & & & 1673 + & 674 & 12 & [ 12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 821 & 1999.747 & 6288.875 & & & 1732 + & 694 & 11 & [ 11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 726 & 2991.08 & 7185.075 & & & 1851 + & 762 & 12 & [ 12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 118 & 690.26 & 11142.2 & & & 2375 + & 57 & 4 & [ 0,2,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0 ] & 146 & 15.003 & 108.725 & & & 186 + & 105 & 7 & [ 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 169 & 20.95 & 158.525 & & & 211 + & 182 & 9 & [ 6,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 195 & 31.558 & 311.125 & & & 304 + & 186 & 11 & [ 11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 272 & 61.55 & 328.45 & & & 364 + & 201 & 14 & [ 14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 319 & 300.1 & 374.2 & & & 409 + & 204 & 9 & [ 9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 284 & 63.721 & 394.55 & & & 427 + & 254 & 9 & [ 8,0,0,0,1,0,0,0,0,0,0,0,0,0,0 ] & 378 & 153.266 & 635.725 & & & 599 + & 259 & 10 & [ 7,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 295 & 72.789 & 653.9 & & & 530 + & 263 & 10 &",
    "[ 6,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 294 & 69.81 & 695.8 & & & 612 + s20(2 ) & 274 & 9 & [ 4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 336 & 172.839 & 751.05 & 11703.9 & 585.1952 & 587 + & 275 & 11 & [ 8,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 414 & 217.261 & 798.075 & & & 702 + & 294 & 8 & [ 5,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 359 & 396.194 & 915.575 & & & 612 + & 295 & 11 & [ 8,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 488 & 2342.7 & 975.65 & & & 802 + & 298 & 12 & [ 12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 463 & 174.03 & 990.675 & & & 773 + & 307 & 10 & [ 6,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 391 & 187.431 & 1084.4 & & & 808 + & 338 & 13 & [ 13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 484 & 432.837 & 1546.65 & & & 1001 + & 367 & 14 & [ 14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 608 & 2000.37 & 2113.475 & & & 1248 + & 393 & 12 & [ 3,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 658 & 2531.045 & 2889.325 & & & 1502 + & 417 & 11 & [ 5,0,2,0,0,0,0,0,0,2,3,0,0,0,0,0,0,0,0,0 ] & 563 & 1093.34 & 3737.325 & & & 1686 + & 431 & 14 & [ 6,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 781 & 1367.11 & * & & & * + & 85 & 4 & [ 0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 147 & 25.646 & 341.175 & & & 230 + & 298 & 15 & [ 15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 316 & 99.513 & 864.5 & & & 455 + & 333 & 15 & [ 15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 322 & 91.273 & 1007.75 & & & 465 + & 342 & 16 & [ 16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 326 & 99.809 & 1026.075 & & & 466 + & 349 & 16 & [ 16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 307 & 76.393 & 1075.375 & & & 512 + & 358 & 15 & [ 15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 324 & 86.003 & 1092.975 & & & 480 + & 401 & 12 & [ 10,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 394 & 154.683 & 1372.975 & & & 631 + & 415 & 16 & [ 16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 448 & 293.327 & 1474 & & & 687 + & 462 & 15 & [ 15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 361 & 135.922 & 1827.75 & & & 691 + s20(3 ) & 480 & 14 & [ 14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 527 & 261.581 & 1982.85 & 8912.075 & 445.6038 & 786 + & 556 & 16 & [ 16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 610 & 592.666 & 2975.05 & & & 1028 + & 569 & 18 & [ 18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 695 & 2453.98 & 3284.75 & & & 1158 + & 583 & 19 & [ 19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 711 & 1496.19 & 3440.55 & & & 1164 + & 609 & 15 & [ 15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 57 & 11.671 & 4037.25 & & & 1290 + & 619 & 13 & [ 12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 912 & 990.061 & 4518.725 & & & 1386 + & 708 & 18 & [ 18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 582 & 569.397 & * & & & * + & 710 & 15 & [ 11,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 733 & 673.064 & * & & & * + & 752 & 18 & [ 18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 777 & 722.174 & * & & & * + & 821 & 21 & [ 18,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 108 & 35.333 & * & & & * + & 853 & 21 & [ 19,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 108 & 43.389 & * & & & * + & 81 & 5 & [ 0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 140 & 17.706 & 219.175 & & & 214 + & 107 & 6 & [ 6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 176 & 27.955 & 264.375 & & & 251 + & 168 & 9 & [ 7,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 185 & 26.037 & 416.725 & & & 291 + & 194 & 9 & [ 6,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 239 & 57.189 & 527.75 & & & 427 + & 230 & 8 & [ 4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 186 & 39 & 707.575 & & & 471 + & 236 & 9 & [ 7,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 198 & 49.312 & 735.875 & & & 474 + & 274 & 9 & [ 8,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 284 & 524.051 & 1027.225 & & & 590 + & 277 & 9 & [ 7,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 276 & 113.266 & 1079.7 & & & 679 + & 286 & 9 & [ 6,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 321 & 676.315 & 1143.675 & & & 698 + s20(4 ) & 290 & 8 & [ 1,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 312 & 1775.88 & 1177.15 & 11215.3 & 560.7652 & 630 + & 305 & 10 & [ 7,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 256 & 188.763 & 1345.125 & & & 683 + & 310 & 10 & [ 10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 297 & 85.818 & 1407.6 & & & 704 + & 348 & 10 & [ 7,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 403 & 392.226 & 2039.675 & & & 953 + & 351 & 11 & [ 11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 432 & 193.712 & 2079.4 & & & 949 + & 366 & 10 & [ 9,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 383 & 295.208 & 2346.175 & & & 912 + & 379 & 10 & [ 3,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 296 & 1007.8 & 2735.2 & & & 1116 + & 396 & 11 & [ 10,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 560 & 3095.66 & 3283.85 & & & 1222 + & 416 & 12 & [ 12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 541 & 693.549 & * & & & * + & 521 & 14 & [ 14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 611 & 955.771 & * & & & * + & 583 & 14 & [ 14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 982 & 1000.085 & * & & & * + & 101 & 8 & [ 0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 57 & 8.393 & 488.75 & & & 246 + & 141 & 7 & [ 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 146 & 33.759 & 567.975 & & & 260 + & 279 & 12 & [ 12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 99 & 23.478 & 1170.65 & & & 502 + & 314 & 10 & [ 10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 199 & 68.421 & 1328.55 & & & 457 + & 329 & 11 & [ 7,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 85 & 17.706 & 1428.15 & & & 461 + & 369 & 11 & [ 5,5,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 106 & 25.178 & 1747.875 & & & 493 + & 399 & 11 & [ 7,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 156 & 90.957 & 2166.55 & & & 711 + & 425 & 11 & [ 5,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 65 & 26.208 & 2477.4 & & & 718 + & 438 & 13 & [ 13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 115 & 37.799 & 2648.8 & & & 732 + s20(5 ) & 447 & 15 & [ 15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 60 & 11.342 & 2771.675 & 10007.05 & 500.3524 & 808 + & 477 & 14 & [ 14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 138 & 51.901 & 3357.7 & & & 929 + & 501 & 16 & [ 16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 40 & 7.425 & 3884.325 & & & 1026 + & 534 & 12 & [ 12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 180 & 145.075 & 4557.05 & & & 983 + & 536 & 14 & [ 14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 83 & 23.15 & 4752.25 & & & 1090 + & 555 & 13 & [ 9,3,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 166 & 63.804 & 5404.225 & & & 1190 + & 574 & 13 & [ 13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 345 & 777.094 & * & & & * + & 620 & 14 & [ 14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 721 & 654.063 & * & & & * + & 727 & 18 & [ 18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 882 & 2140.435 & * & & & * + & 786 & 17 & [ 17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 734 & 3000.11 & * & & & * + & 871 & 17 & [ 17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ] & 813 & 2800.75 & * & & & * +    from the computational tests we can assert that our method improves the current algorithm implemented in gap used to compute the @xmath0 invariant of a numerical semigroup because several reasons :    * the cpu times of our algorithm are much smaller than the brute force implementation in gap . observe that the average quotient between @xmath247 and @xmath249 is @xmath250 . * our algorithm avoids the complete enumeration of the set of non - dominated solutions of @xmath77 .",
    "note that the average percentage of explored solutions ( @xmath251 ) with respect to the number of non - dominated solutions ( @xmath248 ) is @xmath252 while in gap the 100% of the solutions are explored .",
    "the algorithm proposed in @xcite also needs to compute a large number of solutions to obtain the @xmath0 invariant , so although we have not explicitly compared the running times with this method , our algorithm only searches a part of the efficient solutions and then , it must take much smaller cpu times .",
    "* algorithm [ alg:1 ] is able to compute the @xmath0 invariant of the whole battery of experiments while the gap method was not able to solve 14 problems ( * ) .",
    "in this paper we propose a new methodology , based on discrete optimization tools , to compute a specific arithmetic invariant for numerical semigroups .",
    "we use a result in @xcite ( theorem [ theo : omega ] ) to translate the algebraic problem to the problem of optimizing a linear function over the non - dominated solutions of a multiobjective integer linear program that is basically a knapsack - type problem .",
    "then , an adaptation of the methodology in @xcite is applied to compute more efficiently than the current methods , the @xmath0 invariant of a numerical semigroup . the key here is to avoid the complete enumeration of the non - dominated solutions of the multiobjective problem to solve the problem .",
    "the algorithm may be improved by using better bounds or by adding more information to the problem .",
    "it is here where bidirectional improvements in both fields , optimization and commutative algebra , may help to have better computational results .",
    "note that the proposed methodology can be adapted conveniently to compute the @xmath0 invariant of some other commutative semigroups .",
    "in particular , in the case when the semigroup is defined by a system of linear diophantine equations , like in full and affine semigroups ( also called saturated semigroups ) , from theorem [ theo : omega ] a similar result than the one in theorem [ theo:1 ] can be derived but where the feasible region consists of several equations instead of the knapsack type equation . for those semigroups , can also be adapted algorithm [ alg:1 ] to compute the @xmath0 invariant .",
    "furthermore , some other arithmetic invariant , as the tame degree , should also be modeled as a discrete optimization problem , and optimization techniques can help to solve more efficiently these problems .",
    "the analysis of different arithmetic invariant by discrete optimization is left for further research .",
    "different approaches but also using tools from operational research may be used to solve problems for numerical semigroups such as the computation of minimal decomposition of a numerical semigroup into irreducible numerical semigroups or to define new indices that can be defined as optimal values of a linear objective function over the kunz s polytope .",
    "we hope that this paper is the first of many bidirectional collaborations between the fields of algebra and operation research .",
    "the two fields seem to be very different from each other , but that may help to get new results in both areas and to understand with different viewpoints notions that usually live in one of them .",
    "blanco , v. , garca - snchez , p.a . , and geroldinger , a. ( 2010 ) .",
    "_ semigroup - theoretical characterizations of arithmetical invariants with applications to numerical monoids and krull monoids_. submitted .",
    "arxiv:1006.4222[math.ac ] .",
    "conti , p. and traverso , c. ( 1991 ) .",
    "_ buchberger algorithm and integer programming _ , in proceedings of the aaecc-9 , new orleans , lect .",
    "notes comput .",
    "539 , h. f. mattson , t. mora , and t. r. n. rao , eds . , springer , new york , 1991 , pp . 130139 .",
    "cornujols , g. and dawande , m. ( 1999 ) . _ a class of hard small 0 - 1 programs_. informs journal on computing vol .",
    "2 , spring 1999 , pp . 205210 .",
    "delgado , m. , p. a. garca - snchez , p.a .",
    ", morais , j. `` numericalsgps '' : a gap package on numerical semigroups .",
    "( http://www.gap-system.org/packages/numericalsgps.html ) .",
    "chapman , s.t .",
    ", garca - snchez , p.a . , and llena , d. ( 2009 ) .",
    "_ the catenary and tame degree of numerical monoids _ , forum math . * 21 * ( 2009 ) , 117  129 .",
    "de loera , j.a , haws , d. , hemmecke , r. , huggins , p. , sturmfels , b. , and yoshida , r. ( 2004 ) .",
    "_ short rational functions for toric algebra and applications_. journal of symbolic computation , vol .",
    "38 , 2 , 959973 .",
    "de loera , j.a . ,",
    "hemmecke , r. , kppe , m. ( 2009 )",
    ". _ pareto optima of multicriteria integer linear programs_. informs journal on computing 21 , no .",
    "ecker , j. , kouada , i. ( 1975 ) .",
    "_ finding efficient points for linear multiple objective programs_. mathematical programming 8 , 375377 .",
    "ehrgott , m. and gandibleux , x. ( editors ) ( 2002 ) .",
    "_ multiple criteria optimization_. state of the art annotated bibliographic surveys .",
    "boston , kluwer .",
    "geroldinger , a. and kainrath , f. ( 2010 ) .",
    "_ on the arithmetic of tame monoids with applications to krull monoids and mori domains _ , j. pure appl",
    "algebra , to appear .",
    "jorge , j. ( 2009 ) , _ an algorithm for optimizing a linear function over an integer efficient set _ , european journal of operational research 195 , 88103 .",
    "lasserre , j. b. ( 2004 ) .",
    "_ integer programming , barvinok s counting algorithm and gomory relaxations_. oper .",
    "32(2 ) : 133 - 137 ( 2004 ) .",
    "marcotte , o. , soland , r.m .",
    "an interactive branch - and - bound algorithm for multiple criteria optimization .",
    "management science 32 6175 .",
    "nguyen , n.c .",
    "( 1992 ) . _",
    "an algorithm for optimizing a linear function over the integer efficient set _ , konrad - zuse - zentrum fur informationstechnik berlin , november 1992 .",
    "available at http://opus.kobv.de/zib/volltexte/1992/92/pdf/sc-92-23.pdf .",
    "nemhauser , g. , wolsey , l. ( 1988 ) . _ integer and combinatorial optimization_. john wiley & sons .",
    "rosales , j.c . and garca - snchez , p.a .",
    "( 2009 ) , _ numerical semigroups _ ,",
    "springer , 2009 .",
    "schrijver , a. ( 1998 ) .",
    "_ theory of linear and integer programming_. john wiley & sons , 1998 , isbn 0 - 471 - 98232 - 6 .",
    "ulungu , e. and teghem , j. ( 1995 ) .",
    "the two - phases method : an efficient procedure to solve biobjective combinatorial optimization problems , foundations of computing and decision sciences 20(2 ) , 149165 .",
    "villarreal , b. and karwan , m.h .",
    "multicriteria dynamic programming with an application to the integer case . journal of optimization theory and applications .",
    "pp 43 - 69 .",
    "yamamoto , y. ( 2002 ) .",
    "_ optimization over the efficient set : overview_. j. of global optimization 22 , 1 - 4 ( jan . 2002 ) , 285 - 317 zionts , s. ( 1979 ) .",
    "a survey of multiple criteria integer programming methods",
    ". annals of discrete mathematics 5 , 389398 ."
  ],
  "abstract_text": [
    "<S> in this paper we present a mathematical programming formulation for the @xmath0 invariant of a numerical semigroup for each of its minimal generators . </S>",
    "<S> the model consists of solving a problem of optimizing a linear function over the efficient set of a multiobjective linear integer program . </S>",
    "<S> we offer a methodology to solve this problem and we provide some computational experiments to show the applicability of the proposed algorithm . </S>"
  ]
}
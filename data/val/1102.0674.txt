{
  "article_text": [
    "in a news distribution system with a tremendous number of users , such as digg.com and reddit.com , thousands of news are released every hour .",
    "when a user logs on the system without any support , he is drowned in the flood of information immediately  @xcite .",
    "recommender systems emerged to help users deal with the information overload and find out content matching their interests  @xcite . in traditional recommender systems",
    "relevant news are delivered to users according to their profiles and historical activities , with recommendation mechanism designed in a centralized way : data analysis and recommendation decision are made by the system for the whole network . in contrast , in social recommender systems users submit and forward news to others , as in a peer - to - peer network .",
    "the core idea of peer - to - peer is that all nodes in the system have the same function : each node can both gain service from other nodes , as a client , and provide service to others , as a server .    in this work we present a modified version of a previously introduced news recommender system  @xcite .",
    "this system is naturally implemented in a peer - to - peer environment : each user , considered as a node of the network , does not get news directly from some central servers , but he can post news and recommend them to other users ( i.e. his followers ) and at the same time he receives news from other users ( i.e. his leaders ) .",
    "hence each node acts as a follower and at the same time can become a leader in the network .",
    "when a user receives a news from his leader and likes it , he forwards it to his followers ; then , if these followers like the news too , they forward it further to their followers , and so on . hence news diffusion over the network resembles an epidemic spreading  @xcite .",
    "as in peer - to - peer systems , the leader - follower network is varying in topology : links between leaders and followers may be changed as the network evolves .",
    "the system continually refines the neighborhood of each user until connections between taste mates are established , so that news can spread quickly from the original source to the users who are most interested in it .",
    "network evolution is therefore driven from an interplay between topology and dynamics  @xcite .",
    "the leader updating procedure is a crucial part of the whole recommender mechanism .",
    "an effective updating method should choose for each user a leader with very similar tastes at very low cost .",
    "in this work we compare several heuristic methods in detail .",
    "we discuss their efficiency , performance and scalability ( which are important aspects for real systems ) , and we analyze the properties of the evolving network structure with agent - based simulations .",
    "a comparison with other widely adopted popularity - based recommendation methods has already been discussed in  @xcite .",
    "this work is organized as follows . in section 2",
    "we present related work . in section 3",
    "we describe the news recommendation method and an agent - based model to test it . in section 4",
    "we report simulation results for network s evolution with different updating methods . in section 5",
    "we introduce two refined updating methods .",
    "lastly , we conclude with discussion .",
    "so far , plenty of recommendation techniques have been proposed by researchers .",
    "these techniques can be classified in three main categories : content - based , collaborative filtering and social filtering methods .",
    "content - based methods  @xcite try to classify items according to their content ( e.g. by keywords ) and to extract users preferences from their pick history .",
    "these two elements are used to obtain recommendation : items recommend to a user are the ones whose characteristics match user s preferences .",
    "collaborative filtering methods make predictions about the interests of a user by collecting taste information from the community the user belongs to , with the underlying assumption that those users who agreed in the past tend to agree again in the future . in memory - based collaborative filtering , such as in amazon.com  @xcite ,",
    "the recommendation score for an item is computed as a weighted average of ratings given by other users with weights proportional to the similarity between users  @xcite . in model - based collaborative filtering methods ( e.g. bayesian clustering  @xcite and plsi  @xcite )",
    "users are classified according to their preferences .",
    "diffusion - based methods , where heat conduction  @xcite , random walk  @xcite or hybrid processes  @xcite are employed to efficiently extract the taste similarity between users or items , can be considered as extensions of collaborative filtering .",
    "social filtering methods make use of users relationship in a social network to obtain recommendations .",
    "these methods are based on the assumption that users prefer recommendations made by a friend than those by a centralized system  @xcite . in other words ,",
    "social influence is more determinant for users to decide what to read than similarity of past activities  @xcite .",
    "generally , a social recommender system can be devised in two different ways : pull and push . in the first case ,",
    "each user selects other users as his information sources and he can pull information from these sources ( as in , e.g. , delicious.com ) . in the latter ,",
    "each user can push what he likes to other users who have accepted him as an information source ( as in , e.g. , twitter.com ) . in many of these systems",
    "users have also the possibility to assign information with user - defined words , so - called _ tags _ , that allow a more effective management of resources by users  @xcite .",
    "different from all methods mentioned above , the news recommendation mechanism we study in this work combines memory - based and social recommendation together with network s topology optimization .",
    "recommendation scores are computed using users past ratings , though recommendations come only from the information sources a user selects ; in parallel , the leader - follower network is continually refined according to similarity of user tastes , in order for news to be efficiently delivered to their eagerest readers .",
    "this combination of social and similarity recommendation turns out to be particularly effective : the presence of directed links among users makes the recommendation process naturally fast and scalable , while the use of rating patterns similarity in the information diffusion process enhance users social contacts and experience .",
    "in this section we describe the news recommendation mechanism  @xcite that provides a personalized set of news for each user .",
    "as stated in the introduction , the system consists of a set of users with distinct tastes who continually post and evaluate various news items .      the taste similarity between users",
    "is predicted using statistical correlation of users rating histories .",
    "we adopt pearson correlation coefficient : for a pair of users @xmath0 and @xmath1 @xmath2 where @xmath3 and @xmath4 are the ratings given by these users to news @xmath5 and @xmath6 and @xmath7 are the average ratings of @xmath0 and @xmath1 .",
    "@xmath8 $ ] , with @xmath9 indicating that user @xmath0 and @xmath1 tend to agree in evaluations of news while with @xmath10 that they tend to disagree .",
    "despite the network is directed , @xmath11 .    the similarity score ( [ eq1 ] ) is different from the one used in  @xcite .",
    "this is because we assume that users evaluate news in a binary scale : @xmath12 if user @xmath0 likes news @xmath5 and otherwise @xmath13 . in other words",
    ", we do not distinguish between a disliked and not rated news since in many real news distributing systems the only available information about users ratings is users _ click history_. therefore the simples possible assumption is to treat a user s click on a news as a positive vote for the news itself , while any information about users negative interests remain undiscovered .",
    "the choice of pearson correlation ( [ eq1 ] ) as similarity metric is motivated by the fact that it can be used also in systems where users gives explicit ratings to news .",
    "however the choice of other metrics , such as jaccard coefficient or cosine similarity , does not alter the behavior and the features of the system .",
    "this statements also holds for asymmetric similarity metrics ( as for example the asymmetric jaccard coefficient ) , because the difference of rating patterns between similar users becomes smaller and smaller as they evaluate more news .",
    "this causes the asymmetric @xmath14 and @xmath15 to converge to the same value , i.e. to a symmetric coefficient .",
    "we use some heuristics methods to avoid problems related to data sparsity .",
    "if two users have no evaluations @xmath14 is undefined .",
    "therefore at the beginning of system s evolution we set @xmath16 , with @xmath17 a small fixed value , for each pair of users .",
    "@xmath14 is undefined also when a user gives all positive or negative evaluations . in this case",
    "we set @xmath18 to prevent this kind of malicious behavior ( i.e. giving ratings that do not bring any information about the user s interests ) from affecting recommender system s performance .",
    "note that for the sake of system scalability we do not store the similarity scores between all user pairs but only the reading history of users , from which the similarity scores are computed . in other words , the information is distributed over the network : the click history of each node , which is stored in the peer node itself , is available to other nodes and can be retrieved by them in order to perform local tasks like assigning recommendation scores to incoming news or updating connections to other nodes .",
    "when a user logs into the recommender system , the system checks all the candidate unread news forwarded by his leaders in his waiting list and then selects the top @xmath19  @xcite of them to recommend him according to their recommendation scores .",
    "the recommendation score of each news is equal to the similarity between the user and the leader who forwarded it , so that a high recommendation score is assigned to the news sent by leaders with high similarity .",
    "when the same news is recommended to a user from multiple sources , recommendation scores are not summed up , as in  @xcite , to prevent eclipse attacks on the system  @xcite . instead , each news can be recommended only once to each user .",
    "when the user likes a recommended news , he will forward it to the waiting list of his followers .",
    "also , he can introduce a new news item in the system and forward it to his followers .",
    "we employ a book - keeping mechanism to make sure that each user does not receive news he has already read . besides , users waiting lists are of limited length , and when they are completely filled with candidate news the later arrived ( i.e. the fresh news ) have few chances to jump on top of the recommender list and be consequently read . to allow fresh contents to be more visible ,",
    "the waiting list of a user is cleaned up after the user gets offline .",
    "other mechanisms to promote the diffusion of novel news items are discussed in  @xcite .",
    "as news spread over the network and get evaluated , taste differences between users and their leaders can be gradually identified .",
    "we use this information to refine the local neighborhood network and improve news propagation : from time to time we find the least similar leaders of all users and replace them with new ones . in what follows we will compare several updating methods in detail .",
    "we remark that the present model differs from the one described in  @xcite under several aspects , as we make use of much less information , for instance : ratings are binary , the different recommendation scores for a news are not aggregated , recommendation list of users are cleaned every time they get offline . by keeping only the necessary information and using fewer computational resources , we want our system to be efficient and fast as well as effective and robust .",
    "we make use of an agent - based approach to test the model . in order to depict the tastes of users and the attributes of news",
    ", we use @xmath20-dimensional vectors containing only 0 or 1 .",
    "user @xmath0 s taste vector ( @xmath21 ) describes what topics he likes  ( 1 ) or dislikes  ( 0 ) .",
    "the maximum number of distinct taste vectors is @xmath22 . in",
    "@xcite an alternative setting with a fixed number of 1s in each vector was used .",
    "however the present scenario better depicts users who are heterogeneous in their scope of interests .    at the beginning of the simulation ,",
    "@xmath23 randomly selected leaders are assigned to each user .",
    "the similarity between each user and his newly selected leaders is set to the uniform default value @xmath17 .",
    "at every running step each user gets online with probability @xmath24 and , if active , submits a new news item with probability @xmath25 .",
    "the attribute vector of the submitted news is identical to the taste vector of the user who submitted it .",
    "when a user is online , he reads and evaluates the top @xmath19 news recommended by his leaders . the overlap between user s tastes and news attributes , computed by counting the number of identical bits in the corresponding vectors ,",
    "is used to obtain user s evaluation on the news item .",
    "agent @xmath0 likes news @xmath5 with attribute vector @xmath26 if : @xmath27 here , @xmath28 is the norm of the vector and @xmath29 is the approval threshold .",
    "if agent @xmath0 likes news @xmath5 , then @xmath30 ; if @xmath0 dislikes @xmath5 or if @xmath0 has not evaluated @xmath5 yet , @xmath31 .",
    "if a user likes a news , he forwards it to the waiting lists of his followers .",
    "users assessments on news are used to compute the similarity scores between users and their leaders .",
    "the leader updating procedure takes place for each user after this user gets online @xmath32 times .",
    "for any recommender system , the approval fraction , i.e. how often users are satisfied with the news they get recommended , is the most important performance measure .",
    "besides , we focus mainly on the properties of the leader - follower network . since in a computer simulation we have the luxury of knowing the taste vectors of users , we can compute the average value of the taste vector differences between a user and his leaders . since there are no identical users in the system , the baseline value of these differences is 1 and we define the excess differences as the average number of differences minus  1 .",
    "this measure shows the intrinsic quality of the leadership in the network : the lower the average differences , the higher the taste likeness between leaders and their followers .",
    "in our simulations we assume 13-dimensional taste vectors and hence the system consists of 8192 users . for other simulation parameters ,",
    "see table [ tab1 ] .",
    ".simulation parameters and their default values [ cols=\"<,<,<\",options=\"header \" , ]      updating the leader - follower network consists in finding for a specific user @xmath0 the least similar leader ( e.g. user @xmath1 ) and replace this leader with a new one ( e.g. user @xmath19 ) .",
    "some straightforward methods to select the new leader are :    * _ pure random _ : the new leader is simply a randomly selected user ; * _ selective random _ : the new leader is selected as in the pure random method , but he replaces the old leader only if he has a higher similarity score with user @xmath0 , i.e. if @xmath33 ; * _ best s random leader ( brl ) _ : the new leader @xmath19 is a user chosen at random among the leaders of user @xmath0 s best leader ; * _ _ global memory based ( gmb ) _ _  @xcite collaborative filtering algorithm ( although in this case there is no spreading of news on a social network ) . ] : the new leader @xmath19 is the user in the network with the highest similarity with user @xmath0 .",
    "figure [ fig1 ] shows the performance of these methods .    )",
    ".,title=\"fig : \" ] ) .,title=\"fig : \" ]    as expected , the gmb strategy performs best ( by achieving the highest approval fraction and the best assignment of leaders  see the insets of figure [ fig1 ] ) because it makes use of all available information . however , this method is very expensive in terms of computing cycles : it involves the computation of @xmath34 similarity scores to update the leaders of a single user , and @xmath35 to update the whole network once .",
    "therefore it is not scalable with respect to the system s size .",
    "we use it only as a benchmark for the other methods .",
    "the pure and selective random methods perform worse , but have a much smaller computational cost@xmath36 to update the whole network  and can still converge to a network state with a good assignment of leaders . as compared to pure random , the selective method may be slower in network exploration but is more careful in selections , therefore it eventually reaches a network state as good as with the gmb method . on the other hand , the brl method , while exploiting the local neighborhood network with computational cost @xmath37 ( it involves the computation of @xmath20 similarity values to identify the best leader of a user ) , reaches a strongly sub - optimal network state and has the worst performance in approval fraction .",
    "this is because with this procedure a user can only exchange his leader for a two - step away user , hence he gets a very limited range of possibilities for selection and may not ever get in contact with his taste mates if they are too distant from him .",
    "lower panel of figure [ fig1 ] also shows that system s evolution  driven by any leader updating method  eventually stops when an _ equilibrium state _ is found . in such state , users have no advantage in changing their choices ( i.e leaders ) simply because they can not find better ones .",
    "thus an equilibrium state corresponds to an optimum for each agent .",
    "however , since users make decisions independently from what others have chosen , the particular equilibrium state reached by the system does depend strongly on the updating method employed ( i.e. how users make their decisions ) and only weakly on the interaction between agents ( as user @xmath0 s selection of leaders little influences news arriving to user @xmath1 ) .",
    "hence , if the updating method allows users to make the best choices for themselves , the equilibrium state will be not only an optimum for each agent but also a global minimum , i.e. a _ ground state _ for the whole system . in the ground state each user is linked to his best taste mates : there is not a better possible configuration in terms of leader assignment to users .",
    "the excess differences in the ground state ( represented in figure [ fig1 ] by a horizontal dotted line ) are determined by equation ( [ eq2 ] ) in our artificial environment : as shown in figure  [ fig3 ] , for each user first - order and second - order taste mates ( i.e. users who differ from him in one and two elements of taste vectors , respectively ) are indistinguishable in terms of the similarity ( [ eq1 ] ) .    .",
    "simulations with the selective random updating method . ]    .",
    "simulations with the selective random updating method . ]",
    "since each user has @xmath20 first - order and @xmath38 second - order taste mates in the network and he has to chose @xmath20 of them as leaders , the maximization of similarity is equally likely to select a first or second order taste mate and hence the expected value of excess differences is @xmath39    finally we remark that the frequency of the leader updating strongly influences the convergence rate of the system .",
    "if the updating interval is too short , there are not enough evaluations to assess the real similarity between a leader and his followers , hence the leadership structure of the network deteriorates . on the other hand ,",
    "if the updating interval is too long there is redundant information for similarity evaluations and leader updating , therefore the evolution of the system is unnecessarily slowed down .",
    "figure [ fig4 ] shows that it is possible to find an optimal value of the leader updating frequency which yields the best convergence rate .",
    "we now compare the leader updating methods from the viewpoint of network topology .",
    "we use two quantities to describe the network :    * _ link reciprocity _ , the tendency of node pairs to form connections between each other  @xcite .",
    "this quantity is defined as the ratio between the number of bidirected links and the total number of links in a network : @xmath40 where @xmath41 if user @xmath1 is one of user @xmath0 s leaders ( @xmath42 otherwise ) .",
    "* _ clustering coefficient _ , the tendency of a network to form tightly connected neighborhoods  @xcite .",
    "this quantity is calculated as the ratio between the number of triangles a user forms with his neighbors and the total number of possible triangles this user can form , averaged over all users .",
    "when edges are directed , each user can generate up to eight different triangles with any pair of neighbors , hence : @xmath43}\\ ] ] where @xmath44 denotes the number of @xmath0 s neighbors ( @xmath0 s total degree ) and @xmath45 is the number of bidirected links @xmath0 forms with his neighbors .",
    "is represented by @xmath46 and @xmath47 , @xmath48 by @xmath49 in the respective panels).,title=\"fig : \" ]   is represented by @xmath46 and @xmath47 , @xmath48 by @xmath49 in the respective panels).,title=\"fig : \" ]    figure [ fig5 ] shows the evolution of the link reciprocity in networks with different leader updating methods . in the initial random networks the average probability of finding a reciprocal link between two connected vertices is simply equal to the average probability of finding a link between any two vertices , which is given by @xmath50=d/(n-1)$ ] .",
    "hence the starting value of @xmath51 is equal to @xmath52 .",
    "as the network evolves , the reciprocity coefficient grows from @xmath52 with all updating methods : network s structure becomes more and more reciprocal .",
    "this growth eventually stops when a stationary state of the network is found .",
    "if the network is driven to the ground state ( e.g. by the selective method ) the value of the reciprocity becomes @xmath53=2/(d+1)$ ] , because in this state each user choses his @xmath54 leaders among @xmath55 best taste - mates who are indistinguishable in term of the similarity score ( see figure [ fig3 ] ) : each user choose randomly among them and @xmath56 .",
    "the evolution of the clustering coefficient is also shown in figure [ fig5 ] . with any updating method @xmath5 grows from its initial value , again equal to @xmath52 ( the probability to find a link between two vertices in the initial random network ) .",
    "the selective method , driving the system to the optimal state , makes @xmath5 converge to @xmath57 $ ] ( i.e. the probability to find a link between two users @xmath1 and @xmath19 who are linked to user @xmath0 and who are taste - mates of user @xmath0 ) .",
    "@xmath48 , like @xmath47 , corresponds to users randomly choosing leaders among their best taste - mates .",
    "instead with the brl method , where links can only form locally , the clustering coefficient becomes immediately very large ( even bigger than @xmath48 ) : network s evolution is hindered because a high clustering coefficient means that news do not spread effectively ( they get few directions to propagate and their traffic is limited to a subset of the network ) .",
    "users who happen to be far apart are unlikely to read the same news : their similarity remains undiscovered and they can not be connected even if they are taste - mates .",
    "note also that with this method once a node has no followers , it will never get any follower in future because it can not be selected as a leader , hence some users may get isolated from the system .",
    "these two factors cause the network evolution to end in a sub - optimal equilibrium state .",
    "in this section we propose new updating methods that strongly enhance the system s performance .",
    "the brl method has the ability to exploit the local neighborhood network , that is the most significant feature of a peer - to - peer system .",
    "unfortunately , as we have mentioned , it has some major drawbacks caused by the limited range of the network that this method is able to explore .",
    "we attempt to overcome these problems by broadening the exploration range .",
    "the first possible solution is to explore the whole second - order neighborhood ( i.e. , not only the subset related to the best leader ) , or even to go further by including the third - order neighborhood , fourth - order neighborhood , and so on .",
    "however , the computational cost of such exploration grows very fast  it is @xmath58 for a @xmath59-order neighborhood  and soon becomes comparable with the cost of the gmb method .    )",
    "compared to other leader updating methods .",
    "inset : comparison with gmb for a smaller system ( @xmath60 ) . ]",
    "a more effective solution is to employ some randomness in the updating method in order to have the possibility to connect users regardless of their distance and prevent the system from getting trapped in a sub - optimal state .",
    "hence we propose a _ hybrid _",
    "updating method that combines selective and brl methods : at each updating step we employ the first with probability @xmath61 , otherwise we employ the second . this mechanism mimics the evolution of self - organizing communities where users search for friends among friends of friends but casual encounters also occur .",
    "figure [ fig7 ] shows that the hybrid method improves system s performance as compared to both selective and brl methods , still keeping an affordable @xmath37 computational cost .",
    "hence it represents a cheap and effective updating algorithm suitable for large systems .",
    "we now concentrate on the drawbacks of the above mentioned random updating methods .",
    "the pure random method may replace an old leader with a less similar one , hence it can not reach the best assignment of leaders . therefore the selective method outperforms the pure random .",
    "however the selective method may leave the network unchanged if it does nt find a better leader ( which may occur quite often ) , hence slowing down the system s evolution .",
    "a simple solution to this problem is to employ a selective approach with more trials .",
    "we name this new method _",
    "las vegas algorithm",
    "_  @xcite .",
    "its basic idea is that if the newly randomly selected candidate leader is less similar than the old leader , we drop it and retry the random updating until a better candidate is found .",
    "since there may not be a better candidate , we set the maximum number of trials to a predefined value @xmath62 .",
    "the bigger this value , the longer the execution time , but also the higher chances to find a better leader .",
    "compared to other updating methods .",
    "inset : comparison with gmb for a smaller system ( @xmath60 ) . ]",
    "figure [ fig8 ] shows the performance of the las vegas algorithm for different values of @xmath62 .",
    "note that the selective method is nothing but a las vegas method with @xmath63 .",
    "as @xmath62 increases from 1 , the convergence rate of the las vegas method becomes faster and faster , and it becomes even comparable with the gmb method , yet keeping the affordable computational cost @xmath64 of gmb .",
    "moreover , the average number of actual trials @xmath65 of the las vegas algorithm ( figure [ fig9 ] ) is very small at the beginning of system s evolution , when it is very easy to find better candidate leaders for users : @xmath66 again reduces computational cost",
    ". then the network approaches to the ground state and @xmath67 as each user is already linked to his taste mates ; however at this stage the evolution already ended .",
    "las vegas algorithm therefore improves both effectiveness and efficiency of the leader updating schedule , standing as a candidate mechanism to be employed in real recommender systems .     of the las vegas algorithm with @xmath68 at different stages of the system s evolution ( represented by the value of the excess differences ) . at the beginning ,",
    "@xmath66 ( the fictitious starting point at @xmath69 only represent the initial network s state ) . as the system approaches the ground state , @xmath67 ( @xmath70 represents the point of convergence ) . ]",
    "online news websites are nowadays overloaded with a variety of fresh information .",
    "the hard task for readers is how to find the news they are really interested in .",
    "recommender systems are a possible answer to this problem .",
    "a significant yet less noticed aspect is that social relationship is extremely useful in delivering news to potentially interested users .    in this work we generalized a recently proposed news recommendation method  @xcite to make it more efficient and effective .",
    "this method combines memory - based and social recommendation : recommendation scores of news items are computed using users past ratings , though recommendations come only from the information sources a user selects .",
    "another important feature of this model is that network s topology can be continually refined according to similarity of user tastes , in order for news to be efficiently delivered to the users that are most interested in them .",
    "we proposed new stochastic algorithms which are computationally cheap ( and hence scalable with system s size ) and provide an effective way to speed up the leader updating process .",
    "the next step will be to develop the described system on a real platform .",
    "there are still some open questions to be answered .",
    "for instance , users do not differ only in their particular tastes but in many other aspects , like activity , reputation , generosity , and so on .",
    "news are also different in many aspects , like quality and freshness . taking into account users and news heterogeneity",
    "may bring to a more realistic scenario .",
    "another important point is that any real recommender system must face potential attacks from malicious users or communities , that may systematically introduce spam news or try to intentionally mislead the system .",
    "measures of trustworthiness and reputation of users can be introduced to cope with these threats .",
    "we acknowledge helpful discussions with chiho yeung , cihang jin and matus medo .",
    "this work was partially supported by swiss national science foundation ( grant no .",
    "200020 - 121848 ) and by the future and emerging technologies programmes of the european commission fp7-ict-2007 ( project liquidpublication , grant no .",
    "213360 ) and fp7-cosi - ict ( project qlectives , grant no .",
    "t.z . acknowledges the national natural science foundation of china under grant nos .",
    "60973069 .",
    "g. m. d. corso , a. gulli , f. romani , proc .",
    "of the 14th intl . conf . on world wide web .",
    "new york , ny , usa : acm press ( 2005 ) 97 .",
    "r. burke , user modeling and user - adapted interaction , 12(4 ) ( 2002 ) 331 .",
    "b. sarwar , g. karypis , j. konstan , j. riedl , proc . of the 10th intl",
    ". conf . on world wide web .",
    "new york , ny , usa : acm press ( 2001 ) 285 .",
    "p. resnick , n. iakovou , m. sushak , p. bergstrom , j. riedl , proc . of computer",
    "supported cooperative work conf . , ( 1994 )",
    "m. medo , y .- c .",
    "zhang , t. zhou , europhys .",
    "88 ( 2009 ) 38005 .",
    "r. pastor - satorras , a. vespignani , phys .",
    "lett . , 86 ( 2001 ) 3200 .",
    "t. zhou , z. q. fu , b .- h .",
    "wang , prog .",
    ", 16 ( 2006 ) 452 .",
    "d. garlaschelli , a. capocci , g. caldarelli , nature physics 3 ( 2007 ) 813 .",
    "r. k. pon , a. f. cardenas , d. buttler , t. critchlow , ieee symposium on computational intelligence and data mining , honolulu , hi ( 2007 ) .",
    "i. cantador , p. castells , proc . of recsys09 workshop 3 : workshop on context - aware recommender systems ( 2009 ) .",
    "g. linden , b. smith , j. york , ieee internet computing , 7(1 ) ( 2003 ) 76 .",
    "j. breese , d. heckerman , c. kadie , proc . of the 14th conf . on uncertainty in artificial intelligence ( 1998 ) 43 .",
    "t. hofmann , acm trans . on information systems , 22(1 ) ( 2004 ) 89 .",
    "c . zhang , m. blattner , y .- k .",
    "yu , phys .",
    "99 ( 2007 ) 154301 .",
    "t. zhou , j. ren , m. medo , y .- c .",
    "e , 76 ( 2007 ) 046115 .",
    "t. zhou , z. kuscsik , j. g. liu , m. medo , j. r. wakeling , y .- c .",
    "zhang , proc .",
    ", 107 ( 2010 ) 4511 .",
    "r. sinha , k. swearingen , proc . of the delosnsf workshop on personalization and recommender systems in digital libraries , dublin , ireland ( 2001 ) 271 .",
    "s. p. borgatti , r. cross , manage .",
    "49(4 ) ( 2003 ) 432 .",
    "a. gulli , s. cataudella , l. foschini , proc . of the 6th intl .",
    "workshop on algorithms and models for the web - graph , barcelona , spain ( 2009 ) 143 .",
    "a. capocci , g. caldarelli , j. phys .",
    "a : math . theor .",
    "41 ( 2008 ) 224016 .",
    "k . zhang , c. liu , j. stat .",
    "( 2010 ) p10005 .",
    "k . zhang , c. liu , y .- c .",
    "zhang , t. zhou , epl 92 ( 2010 ) 28002 .",
    "m. blum , r. floyd , v. pratt , r. rivest , r. tarjan , j. comput .",
    "( 1973 ) 448 .",
    "a. singh , m. castro , p. druschel , a. rowstron , proc . of the acm",
    "sigops european workshop ( 2004 ) .",
    "s. wasserman , k. faust , social network analysis , cambridge university press , cambridge ( 1994 ) .",
    "g. fagiolo , phys . rev .",
    "e 76 ( 2007 ) 026107 l. babai , technical report dms 79 - 10 , universite de montreal ( 1979 ) ."
  ],
  "abstract_text": [
    "<S> recommendation systems represent an important tool for news distribution on the internet . in this work </S>",
    "<S> we modify a recently proposed social recommendation model in order to deal with no explicit ratings of users on news . </S>",
    "<S> the model consists of a network of users which continually adapts in order to achieve an efficient news traffic . to optimize network s topology </S>",
    "<S> we propose different stochastic algorithms that are scalable with respect to the network s size . </S>",
    "<S> agent - based simulations reveal the features and the performance of these algorithms . to overcome the resultant drawbacks of each method we introduce two improved algorithms and </S>",
    "<S> show that they can optimize network s topology almost as fast and effectively as other not - scalable methods that make use of much more information .    </S>",
    "<S> recommender systems , social recommendation , adaptive networks </S>"
  ]
}
{
  "article_text": [
    "since wireless channels are time varying , by properly choosing scheduling algorithm , it is possible to achieve multi - user diversity , which enhances the performance of a system considerably .",
    "most studies of scheduling algorithms have focused on optimizing the long term average throughput of users , i.e. , stability . from the stability point of view , it is important to design an algorithm which schedules the transmissions in such a way that the queues are stabilized at given offered loads .",
    "throughput optimal algorithms are considered as stable .",
    "definition of a throughput optimal algorithm is as follows : at any offered load if any other algorithm can stabilize a system , the designated algorithm can stabilize the system as well .",
    "for example ,",
    "maxweight ( mw ) and exponential ( exp ) algorithms are throughput optimal since they ensure stochastic stability of queues as long as such is feasible .    in other way",
    ", stability implies that average packet delay of users can not reach infinity .",
    "although stability is an important metric for designing a throughput optimal algorithm , for many delay - sensitive and guaranteed - rate traffic , it is not sufficient . for real - time applications such as voice and video ,",
    "we often need to ensure a stronger condition that the packet delay should be upper bounded or the long - term throughput should be lower bounded by some threshold with high probability .",
    "one approach to quantify the requirements of these delay - sensitive and guaranteed - throughput applications is to enforce constraints on the probability of the queue overflow . in other words ,",
    "we need to guarantee the smallest value of the probability that the largest queue length exceeds a given threshold , i.e. , @xmath0 $ ] . here , @xmath1 is the number of users , @xmath2 is the queue length of user @xmath3 at time @xmath4 , and @xmath5 is the overflow threshold .    in this paper , at low traffic load , we study the stability property of a scheduling algorithm  @xcite usually used for the scheduling purpose in heterogeneous traffic networks .",
    "the system we consider is the downlink of a single cell in orthogonal frequency division multiplexing ( ofdm)-based systems .",
    "there are many users in the network which are served by the base station . for the sake of simplicity , we consider , there is only one transmission which serves one user at a time .",
    "perfect channel information is assumed to be available at the base station .",
    "since calculating the exact queue distribution is often mathematically intractable , for this problem , we use the large deviation theory . according to the property of large deviation , we reformulate the quality - of - service ( qos ) constraint of delay - sensitive and guaranteed - throughput traffic in terms of the asymptotic decay rate of the queue - overflow probability as @xmath5 approaches infinity . particularly , for this problem , large deviation theory is applicable since queue - overflow probability in a system with low load is very small .",
    "previously , large deviation theory was successfully applied to wireline networks as well as for channel state aware wireless scheduling algorithms . however , when applied to queue length aware wireless scheduling algorithms , this approach encounters a significant amount of technical difficulty . when the large deviation theory is applied to queue length aware scheduling algorithms , sample path large deviation",
    "is used while formulating the problem as a multidimensional calculus - of - variation ( cov ) problem for finding the most likely path to overflow . however , for queue length based scheduling algorithms , this multidimensional cov problem is very difficult to solve .    in the literature ,",
    "only some restricted cases have been solved : either restricted problem structures are assumed ( e.g. , symmetric users and on - off channels  @xcite ) , or the size of the system is very small ( e.g. , only two users )  @xcite . @xcite",
    "have used similar method in order to analyze mw scheduling rule for a system like ours . however , to make the problem simpler , the authors in this work used lyapunov function to map multidimensional cov problem to a one dimensional one .",
    "the result of this work is that mw algorithm maximizes the decay rate of the largest queue overflow probability when its one parameter approaches infinity . in an earlier work  @xcite",
    ", the author showed that the exp rule can maximize the decay rate of the largest queue overflow probability over all scheduling policies , however through the refined sample path large deviation principle ( ldp ) which is more technically involved .",
    "since the algorithm studied in this paper and exp scheduler both are queue length scale - variant , we have adopted the similar analytical technique as in  @xcite .",
    "analysis for the log rule scheduling algorithm has appeared in  @xcite . capturing a simplified network in the classical markov decision process",
    ", they computed a mean delay optimal scheduling policy which exhibits radial sum rate monotonicity ( rsm ) .",
    "the authors in this work also proved that log rule has rsm property which is absent in mw or exp rule .    in this paper",
    ", we have shown a number of results for the minimum cost path to queue overflow event achieved by our scheduling scheme  @xcite . presuming that the large deviation property exists for the largest queue , we have shown many properties for the sample path of the largest queue .",
    "we prove that the largest queue follows a linear increment before reaching a threshold length .",
    "finally , we prove that our scheduling algorithm is asymptotically optimal in reducing the largest queue length over other scheduling algorithms for certain value of its parameter .",
    "extensive simulation results verify the large deviation properties and optimality of our scheduling algorithm comparing with other algorithms in the literature .",
    "the rest of the paper is organized as follows .",
    "we describe the system model and some preliminary definitions related to this problem in section  [ sec : sysmodel ] and section  [ sec : preface ] , respectively .",
    "we derive the generalized upper and lower bounds of the decay rate for the overflow probability of the largest queue length in section  [ sec : up - low - bound ] .",
    "consequently , in the large deviation setting , we outline the properties of the sample path for the largest queue length in section  [ sec : prop ] . our analytical study is justified with the simulation results in section  [ sec : sim - res ] , and section  [ sec : concl ] concludes this paper .",
    "we consider the downlink of a single cell in which the base station serves @xmath1 users .",
    "time is considered as slotted and the channel state at each time slot is independent and identically distributed ( i.i.d . ) from one of @xmath6 possible states .",
    "let @xmath7 denote the state of the channel at time @xmath8 , and the probability of @xmath7 being @xmath9 is given by @xmath10 , m=1,2,\\cdots , m$ ] .",
    "let @xmath11 $ ] . as mentioned previously",
    ", the base station can serve one user at a time .",
    "furthermore , at channel state @xmath9 , if user @xmath3 is picked for service , its service rate is denoted by @xmath12 .",
    "the data packets for user @xmath3 arrive at a constant rate @xmath13 .",
    "let @xmath14 $ ] .",
    "if @xmath15 denotes the backlog of user @xmath3 at time @xmath8 , let @xmath16 $ ] .",
    "in general , at time instant @xmath8 , the decision of user selection is dependent on the global backlog @xmath17 and the channel state @xmath7 . given this system ,",
    "the behavior of the scheduling algorithm  @xcite is as follows .",
    "when the backlog of the users is @xmath17 and the state of the channel @xmath7 is @xmath9 , the algorithm chooses to serve user @xmath18 while obeying the following formula    @xmath19},\\ ] ]    where @xmath20 is the acceptable queue level that ensures the qos of all users . @xmath21 and @xmath22 are the parameters , the values of which are any natural number in between @xmath23 and @xmath24 . if the tie happens , it is broken arbitrarily by choosing any tied user .",
    "the user selection rule of the above scheduling scheme is equivalent to    @xmath25}.\\ ] ]    given the scheduling algorithm above , the system is presumed to be stable for the given offered load @xmath26 .",
    "specifically , we assume that @xmath27 is in the capacity region of the system .",
    "this implies that there exists @xmath28 \\ge 0 $ ] such that @xmath29 , @xmath30}$ ] , and    @xmath31}.\\ ] ]    as the objective of this work is to prove that the aforementioned scheduler ensures the queue stability , we are interested in the probability that the largest backlog exceeds a certain threshold @xmath5 after certain time @xmath4 , i.e. ,    @xmath32.\\ ] ]    the probability in  ( [ eq : eqn2 ] ) is equivalent to the delay violation probability for delay - sensitive traffic or the throughput violation probability for guaranteed - throughput traffic .",
    "this is because these events are related by the relations @xmath33",
    "= \\mbox{pr}\\left[q_i(t ) \\ge \\lambda_id_i\\right]$ ] and @xmath34 = \\mbox{pr}\\left[q_i(t ) \\ge \\lambda_i - \\lambda_i\\zeta_i\\right]$ ] .    since the scheduling rule in ( [ eq : eqn1 ] )",
    "is the function of @xmath17 , calculating the probability in  ( [ eq : eqn2 ] ) is mathematically intractable . to circumvent this difficulty",
    ", we plan to use large deviation theory to minimize this probability . in the large deviation",
    "setting , minimizing the probability in ( [ eq : eqn2 ] ) is equivalent to maximizing the decay rate of this probability .",
    "let define the upper and lower bounds of the decay rate for the probability in  ( [ eq : eqn2 ] ) as follows .",
    "@xmath35 \\\\ i^{low } = \\displaystyle\\limsup_{b \\to \\infty}\\frac{1}{b}\\mbox{log}p\\left[\\max_{1 \\le i \\le n}q_i(t ) \\ge b\\right].\\end{aligned}\\ ] ]    in the following sections , we will show that no scheduling algorithm can have a decay rate larger than a certain value @xmath36 , i.e. , @xmath37 .",
    "then , we will show that our scheduling algorithm asymptotically attains the decay rate @xmath36 for certain value of its parameter ( @xmath20 ) and several properties for the sample path of the largest queue backlog .",
    "it is already mentioned that our scheduling algorithm is not queue length scaling invariant .",
    "that implies , given the arrival rate , if we scale the channel rate process in some magnitude , the length of the resultant queues do not scale in the same magnitude .",
    "hence , to study the properties of the scaled queue length , we need to understand the system process empirically . for this , we need to introduce additional functions associated with the system evolution . for @xmath38 ,",
    "let    @xmath39    where @xmath40 and @xmath41 are the number of packets that arrive and depart for user @xmath3 over the time interval @xmath42 $ ]",
    ". furthermore , denote by @xmath43 the total number of time slots when the channel is in state @xmath9 over the interval @xmath42 $ ] , and by @xmath44 the number of time slots when the channel is in state @xmath9 and user @xmath3 is chosen for service .",
    "note that @xmath45 and @xmath46 are the number of packets that arrive and depart for user @xmath3 at time slot @xmath8 . given these functions to evolve the system , using our scheduling algorithm ,",
    "the resultant queue length process of all users over the time interval @xmath47 $ ] is    @xmath48    the other functions of the system over the same interval are given by    @xmath49 , i\\in[1,\\cdots , n]\\right).\\end{aligned}\\ ] ]    the state of the system is uniquely determined by the initial state @xmath50 .",
    "functions @xmath51 and @xmath52 drive the system , and @xmath53 , @xmath54 are determined by the scheduling algorithm and vice versa .",
    "the relationships of these functions over the time interval @xmath42 $ ] are given as follows .",
    "@xmath55    then , for any non - negative integer @xmath5 , we define the scaled processes of the system are    @xmath56    for any given @xmath57 , let @xmath58 denote the space of mappings from @xmath42 $ ] to @xmath59 .",
    "since the arrival process of users follow poisson distribution , it is well known that the scaled arrival process of user @xmath3 at a particular time instant @xmath8 , @xmath60 has a sample path ldp with the following rate function    @xmath61,\\ ] ]    where @xmath62 is a convex lower semi - continuous function on @xmath63 , and has the following properties    @xmath64    since the arrival processes of users are independent of each other , there exists a single decay rate function combining all users in the large deviation setting .",
    "this is because the decay rate of independent processes are additive .",
    "hence , the combined rate function of all users at a particular time instant @xmath8 can be written as    @xmath65    on the other hand , since the scaled channel state process @xmath66 follows i.i.d . in the time domain ,",
    "the rate function of this process can be given by    @xmath67    where @xmath68 , and @xmath69\\in\\textit{p}_m$ ] .",
    "here , @xmath70 such that @xmath71 is satisfied .",
    "now , the sequence of scaled processes @xmath72 are known to satisfy the sample path ldp over the interval @xmath73 $ ] with the rate function    @xmath74dt,~\\mbox{if } ( \\textbf{f}^b ( . ) \\textbf{g}^b(.))\\in ac , \\\\ \\infty~\\mbox{otherwise}\\end{cases},\\ ] ]    where @xmath75 denotes the set of absolute continuous functions in @xmath58 .",
    "the intuitive interpretation of this function is that for any set @xmath76 of trajectories in @xmath58 , the following relation holds :    @xmath77 \\\\",
    "\\nonumber\\ge \\displaystyle\\limsup_{b{\\to}\\infty}\\frac{1}{b}\\mbox{log}\\textbf{p}\\left[(\\textbf{f}^b ( . ) , \\textbf{g}^b(.))\\in\\lceil\\right ] \\\\ \\nonumber\\ge -\\inf_{(\\textbf{f}^b ( . ) , \\textbf{g}^b(.))\\in\\bar{\\lceil}}j_t(\\textbf{f}^b ( . ) , \\textbf{g}^b(.)),\\end{aligned}\\ ] ]    here @xmath78 and @xmath79 are the interior and closure of set @xmath76 , respectively . for @xmath80",
    ", we can have different sequences of @xmath81 , @xmath66 , and @xmath82 .",
    "for any value of @xmath5 , it is easy to verify that @xmath81 , @xmath66 , and @xmath82 are lipschitz - continuous , and their derivatives exist . as @xmath83",
    ", there must exist a sequence of @xmath81 , @xmath66 , and @xmath82 that converge uniformly over the interval @xmath84 $ ] .",
    "since the arrival scaled process @xmath81 and the channel rate process @xmath66 follow some known distribution , they follow some known sample path ldp .",
    "the goal of this work is to use the known sample path ldp of @xmath85 to characterize that of @xmath82 and the decay rate of the queue overflow probability .",
    "in this section , followed by the justification , we derive an upper bound @xmath36 on @xmath87 in ( [ eq : eqn3 ] ) . then , we provide a general lower bound of this on @xmath88 .      no matter the scheduling algorithm , @xmath36 is the decay rate for the probability that the stationary backlog process @xmath89 exceeds a certain threshold after a certain time . for any arrival rate vector @xmath90 and channel state probability vector @xmath91 , define the following optimization problem    @xmath92 } \\displaystyle\\max_{1 \\le i \\le n}\\left[y_i - \\sum_{m=1}^m{\\gamma}_m{\\phi}_m^if_m^i\\right]^+ \\\\ \\nonumber & s.t .",
    "\\sum_{i=1}^n{\\phi}_m^i = 1,~\\forall{m } \\\\",
    "\\nonumber & { \\phi}_m^i \\ge 0 , \\forall{i},\\forall{m},\\end{aligned}\\ ] ]    where @xmath93 is the long term fraction of time that user @xmath3 is served when the channel state is @xmath9 . since @xmath94 and @xmath95 , @xmath96^+$ ] indicates the long term growth rate of the backlog of user @xmath3 . if @xmath97 , @xmath98 is the minimum rate of growth of the backlog of the largest queue .",
    "now , define    @xmath99    * proposition 1 : * the stationary backlog process @xmath89 achieved by any scheduling algorithm satisfies the following relation    @xmath100    _ proof : _ from the definition of @xmath101 , it implies that @xmath102 provides a lower bound on the backlog of the largest queue , i.e. ,    @xmath103    for any @xmath104 , we can find @xmath105 such that @xmath106 .",
    "for any @xmath107 , we know that @xmath108 and @xmath109 .",
    "find @xmath110 such that @xmath111}||(\\textbf{f}(t ) , \\textbf{g}(t))-(\\textbf{f}_{\\delta}(t ) , \\textbf{g}_{\\delta}(t))|| < \\epsilon$ ] .",
    "it implies that @xmath112 for @xmath113 .",
    "since @xmath114^+$ ] is a continuous function with respect to @xmath115 for any @xmath116 , we can write    @xmath117    where @xmath118 is a small number and @xmath119 . now",
    ", if we define @xmath120 , from ( [ eq : eqn3 ] ) , this in turn implies that    @xmath121    therefore    @xmath122    by the ldp definition of @xmath72 , we have    @xmath123 \\\\ \\nonumber & \\ge -\\displaystyle\\inf_{(\\textbf{f } ( . ) , \\textbf{g } ( . ) ) \\in { \\psi}_t({\\textbf{f}}_{\\delta } , { \\textbf{g}}_{\\delta } , \\epsilon)}{\\int}_0^t\\left[l_{(\\textbf{f})}(\\dot{\\textbf{f}}(t ) ) + l_{(\\textbf{g})}(\\dot{\\textbf{g}}(t))\\right]dt \\\\ \\nonumber & \\ge -{\\displaystyle\\int}_0^t\\left[l_{(\\textbf{f})}(\\dot{\\textbf{f}}_{\\delta}(t ) ) + l_{(\\textbf{g})}(\\dot{\\textbf{g}}_{\\delta}(t))\\right]dt \\\\ \\nonumber & = -t\\left[l_{(\\textbf{f})}({\\textbf{y}}_{\\delta } ) + l_{(\\textbf{g})}({\\bm{\\gamma}}_{\\delta})\\right ] \\\\",
    "\\nonumber & = -\\left(1 + \\epsilon{\\epsilon}_1\\right)(i_{opt } + \\delta).\\end{aligned}\\ ] ]    since @xmath124 , @xmath125 and @xmath118 are arbitrarily small , we can conclude the proof of _ proposition 1_.      the large deviation philosophy implies that rare events occur in the most likely way .",
    "hence , the probability of the queue overflow is determined by the smallest cost among all sample paths that overflow .",
    "so , the decay rate of the queue overflow probability is the minimum cost among all fluid sample paths that overflow . to prove the lower bound of this decay rate , we consider that the system starts at time 0 , instead of considering the entities at the stationary system .",
    "consider a certain time @xmath57 .",
    "let @xmath126 denote the set of fluid sample paths @xmath127 on the interval @xmath84 $ ] such that @xmath128 and @xmath129 .",
    "_ proposition 2 _ states the lower bound of the decay rate that the largest queue overflows .",
    "* proposition 2 : * given the system described above , we have the following lower bound    @xmath130 \\\\ & \\le - \\displaystyle\\inf_{(\\textbf{f } ( . ) , \\textbf{g } ( . ) , \\textbf{q } ( . ) ) \\in { \\lceil}_t}\\displaystyle\\int_0^t[l_{(\\textbf{f})}(\\dot{\\textbf{f}}(t ) ) + l_{(\\textbf{g})}(\\dot{\\textbf{g}}(t))]dt + { \\delta}t.\\end{aligned}\\ ] ]    _ proof : _ for user @xmath3 , let denote the maximum possible value of arrival rate is @xmath131 .",
    "we choose a large integer @xmath132 , and divide the interval @xmath133 $ ] into @xmath132 ( integer number ) subintervals such that the length of each subinterval is @xmath134 .",
    "hence , @xmath135$]th subinterval can be named as @xmath136 .",
    "we call each granular subinterval as `` bin '' .",
    "the value of @xmath132 is such that the following condition is satisfied for all bins of user @xmath3 .",
    "@xmath137    we ensure the property in ( [ eq : eqn5 ] ) uniformly over all bins for all users . if necessary",
    ", we increase / decrease the value of @xmath138 $ ] .",
    "then , we divide the simplex of all vectors representing the probability distributions @xmath139 on the set of channel states into @xmath140 ( integer number ) non - intersecting subsets ( `` bins '' ) such that the oscillation ( difference between the maximum and minimum ) of @xmath141 within the closure of each bin is at most @xmath125 . if necessary",
    ", we increase / decrease the value of @xmath140 so that this condition is satisfied uniformly over all bins .    for any @xmath142 , and for the time interval",
    "@xmath73 $ ] , let a vector function @xmath143 .",
    "each component of @xmath144 has a constant non - negative derivative in each of the time - subintervals of @xmath84 $ ] .",
    "we know that the derivative of @xmath145 ( @xmath146 ) resides in each of the @xmath147 bins ( described above ) , and the derivative of @xmath148 ( @xmath149 ) is in each of the @xmath140 bins . consequently , the derivatives of the function @xmath144 over the time interval @xmath84 $ ] has @xmath150^t$ ] possible combinations . for any @xmath142 ,",
    "consider one fixed aggregate bin @xmath151 , of which @xmath152 $ ] is the bin for the component @xmath60 of @xmath153 .",
    "hence , the ldp definition of @xmath154 at time instant @xmath8 implies that    @xmath155 \\le -\\displaystyle\\min_{\\xi\\in[\\xi_1,\\xi_2]}l_i(\\xi ) + \\frac{\\epsilon}{n}.\\ ] ]    the property in  ( [ eq : eqn6 ] ) is applicable for other component of @xmath144 as well .",
    "since the components of @xmath144 are independent processes , the decay rate of the derivative of @xmath144 is the sum value of the decay rate of the derivatives of its components .",
    "therefore , combining all components and according to the definition of ldp , we can write    @xmath156 \\le \\\\ & - \\displaystyle\\int_0^t\\left[l_{(\\textbf{f})}(\\dot{\\textbf{f}}(t ) ) + l_{(\\textbf{g})}(\\dot{\\textbf{g}}(t))\\right ] + 2{\\epsilon}t.\\end{aligned}\\ ] ]    for @xmath157}$ ] , we set @xmath158 .",
    "then , for @xmath57 and for any @xmath5 , @xmath159 is the set of arrival and channel rate processes @xmath72 such that the corresponding backlog process satisfies @xmath160 .",
    "obviously , each component of @xmath159 is the instance of vector function @xmath144 .",
    "consequently , we have    @xmath161 \\\\ \\le \\displaystyle\\limsup_{b \\to \\infty}\\frac{1}{b}\\mbox{log}\\mbox{pr}\\left[(\\textbf{f}^b ( . ) , \\textbf{g}^b ( . ) ) \\in \\cup_{b=1}^{\\infty}{\\lceil}^b\\right]\\end{aligned}\\ ] ]    by the ldp definition for @xmath144 ( @xmath72 ) in  ( [ eq : eqn7 ] ) , we have    @xmath162 \\\\ \\le - \\inf_{(\\textbf{f } ( . ) , \\textbf{g } ( . ) ) \\in \\overline{\\cup_{b=1}^{\\infty}{\\lceil}^b}}\\displaystyle\\int_0^t\\left[l_{(\\textbf{f})}(\\dot{\\textbf{f}}(t ) ) + l_{(\\textbf{g})}(\\dot{\\textbf{g}}(t))\\right]dt + 2{\\epsilon}_0t.\\end{aligned}\\ ] ]    since @xmath163 , it turns out    @xmath164 \\\\ \\le - \\inf_{(\\textbf{f } ( . ) , \\textbf{g } ( . ) ) \\in \\overline{\\cup_{b=1}^{\\infty}{\\lceil}^b}}\\displaystyle\\int_0^t\\left[l_{(\\textbf{f})}(\\dot{\\textbf{f}}(t ) ) + l_{(\\textbf{g})}(\\dot{\\textbf{g}}(t))\\right]dt + 2{\\epsilon}_0t.\\end{aligned}\\ ] ]    to prove _ proposition 2 _ , it is sufficient to show that the right hand side of ( [ eq : eqn6 ] ) is no greater than that of ( [ eq : eqn8 ] ) . for each @xmath165 , we can find @xmath166 such that    @xmath167dt - 2{\\epsilon}_nt \\\\   & < \\displaystyle\\inf_{(\\textbf{f } ( . ) , \\textbf{g } ( . ) ) \\in \\overline{\\cup_{b=1}^{\\infty}{\\lceil}^b}}\\displaystyle\\int_0^t\\left[l_{(\\textbf{f})}(\\dot{\\textbf{f}}(t ) ) + l_{(\\textbf{g})}(\\dot{\\textbf{g}}(t))\\right]dt - 2{\\epsilon}_0 t + \\frac{1}{n}.\\end{aligned}\\ ] ]    since @xmath168 is equicontinuous , we can find a subsequence that has a uniform derivative on the time - interval @xmath73 $ ] .",
    "let @xmath169 be its limit , which implies that @xmath170 .",
    "since the cost functions in ( [ eq : prop1 ] ) and ( [ eq : prop2 ] ) are lower semi - continuous , we can have    @xmath171dt - 2{\\epsilon}_nt \\\\ & \\ge \\displaystyle\\liminf_{n\\to\\infty}\\displaystyle\\int_0^t\\left[l_{(\\textbf{f})}(\\dot{\\textbf{u}}_n^*(t ) ) + l_{(\\textbf{g})}(\\dot{\\textbf{v}}_n^*(t))\\right]dt - 2{\\epsilon}_n^*t.\\end{aligned}\\ ] ]    the process of obtaining @xmath172 from @xmath166 is described as follows . from @xmath173 , we can find a series of functions @xmath174 such that @xmath175 . from subscript @xmath9 , we can choose @xmath176 such that @xmath177}||(\\textbf{u}_{n , m+1}(t ) , \\textbf{v}_{n , m+1}(t ) ) - ( \\textbf{u}_{n , m+1}(t-1 ) , \\textbf{v}_{n , m+1}(t-1))|| < \\sup_{t\\in[0,t]}||(\\textbf{u}_{n , m}(t ) , \\textbf{v}_{n , m}(t ) ) - ( \\textbf{u}_{n , m}(t-1 ) , \\textbf{v}_{n , m}(t-1))||$ ] is satisfied .    for each @xmath178 ,",
    "let @xmath179 be the corresponding backlog process for @xmath172 .",
    "similar to @xmath172 , @xmath179 is equi - continuous and has a uniform non - negative derivative on the interval @xmath84 $ ] . from the construction ,",
    "@xmath180 and @xmath181 are true .",
    "hence , @xmath182 is in @xmath126 .",
    "consequently , for sufficiently small values of @xmath183 , @xmath184 and @xmath124 , we can write    @xmath185dt - 2{\\epsilon}_n^*t \\ge \\displaystyle\\inf_{(\\textbf{f } ( . ) , \\textbf{g } ( . ) , \\textbf{q } ( . ) ) \\in { \\lceil}_t}\\displaystyle\\int_0^t[l_{(\\textbf{f})}(\\dot{\\textbf{f}}(t ) ) + l_{(\\textbf{g})}(\\dot{\\textbf{g}}(t))]dt - { \\delta}t.\\ ] ]    finally , from ( [ eq : eqn9 ] ) and ( [ eq : eqn10 ] ) , we can conclude that    @xmath186dt - 2{\\epsilon}_0 t \\\\",
    "& \\nonumber \\ge \\displaystyle\\liminf_{n\\to\\infty } \\displaystyle\\int_0^t\\left[l_{(\\textbf{f})}(\\dot{\\textbf{u}}_n(t ) ) + l_{(\\textbf{g})}(\\dot{\\textbf{v}}_n(t))\\right]dt - 2{\\epsilon}_nt \\\\ & \\ge \\displaystyle\\inf_{(\\textbf{f } ( . ) , \\textbf{g } ( . ) , \\textbf{q } ( . ) ) \\in { \\lceil}_t}\\displaystyle\\int_0^t[l_{(\\textbf{f})}(\\dot{\\textbf{f}}(t ) ) + l_{(\\textbf{g})}(\\dot{\\textbf{g}}(t))]dt - { \\delta}t.\\end{aligned}\\ ] ]    thus , _ proposition 2 _ is proved .",
    "in this section , we will show the properties of the path to @xmath86 $ ] achieved by our scheduling algorithm . in this context",
    ", we would like to study the relationship of the system components and their derivatives in granular time - interval . to understand the behavior of the system ,",
    "scaled processes are already derived and given by ( [ sec : scaled - procs ] ) . to interconnect the outcome of scheduling policy with these scaled processes , we study the scheduling rule at time instant @xmath187 for any @xmath142 and @xmath188 . after re - arranging the scheduling rule for user @xmath3 at time instant @xmath187",
    ", we have @xmath189}e^{-\\frac{q_i(bt)}{q^{th}}}$ ] if the channel state is @xmath9 at time instant @xmath187 .",
    "once scaled over @xmath5 , it appears @xmath190}\\frac{1}{b}e^{-b\\frac{q_i^b(t)}{q^{th } } } \\approx - e^{\\left[\\rho_1 + \\rho_2 - \\frac{f_m^i}{\\max_{i}f_m^i}\\right]}e^{-\\frac{q_i^b(t)}{q^{th}}}$ ] .",
    "since the scaled queue length part of our scheduling rule is proportional to some real number multiple of the original non - scaled queue length , it is sufficient to find the relationship between the system components and the scheduling policy at the scaled time instant @xmath8 instead of further refinement .",
    "_ lemma 1 _ summarizes these relationships followed by the corresponding proof . in a non - overloaded state of the system",
    ", we provide the structure of the sample path to overflow event over a finite time interval in _ theorem 1 _ , and then in _ theorem 2 _ , we prove that the value of @xmath191 of our scheduling rule affects the decay rate of the largest queue overflow probability .    * lemma 1 : * at the scaled time instant @xmath192 $ ] , the following derivatives exist and are finite    @xmath193    furthermore",
    ", the following relationships hold among the system components , their derivatives and our scheduling policy    @xmath194}e^{-\\frac{q_i(t)}{q^{th}}}.\\end{aligned}\\ ] ]    _ proof : _ for moderately large value of @xmath195 , the sequence of scaled functions @xmath196 @xmath197 converges to @xmath198 over the time interval @xmath199 $ ] .",
    "since all functions are lipschitz - continuous , their derivatives in ( [ eq : derivs ] ) exist .",
    "the relations in ( [ eq : rel1 ] ) , ( [ eq : rel3 ] ) and ( [ eq : rel4 ] ) are a simple consequence of the relations in ( [ eq : orig - rel1 ] ) and ( [ eq : orig - rel2 ] ) .",
    "since our objective is to study the path to the largest queue overflow event , we denote the largest queue at scaled time instant @xmath8 by @xmath200 . since at scaled time instant @xmath8 , @xmath201 exists , the relation in ( [ eq : rel2 ] )",
    "is satisfied consequently .",
    "consider a scaled time - interval @xmath202 $ ] .",
    "the unscaled version of this interval is @xmath203 $ ] . during this unscaled time - interval , at any time instant , if the channel state @xmath9 is selected , user @xmath204 is chosen for service based on the rule @xmath205}e^{-\\frac{q_i^b(t)}{q^{th}}}$ ] .",
    "however , at its counterpart scaled @xmath8th time instant , the service rate of each user is the average service rate achieved over @xmath5 time slots . given the channel state distribution over @xmath5 time slots @xmath206 , we can deduce a set which contains service rate of all users for all possible combinations , @xmath207 .",
    "given this set , the scheduling policy at time instant @xmath8 converges to the relation in ( [ eq : rel5 ] ) . the detailed proof is given in  @xcite for the exp scheduling policy .    * lemma 2 : * if @xmath208 , there exist some fixed constants @xmath209 and @xmath104 such that the following statement holds at any time @xmath192 $ ] for a non - overloaded system    @xmath210    _ proof : _ let @xmath211 be the channel - user assignment matrix for the best possible non - overloaded system , and @xmath212 be the corresponding service rate vector such that @xmath213",
    ". at time instant @xmath8 , consider a subset of users @xmath214 , the users of which satisfy @xmath215 .",
    "let us assume that channel state @xmath9 is sampled at time instant @xmath8 , such that @xmath216 and @xmath217 . then , using an argument similar to that in  @xcite ( at the end of section @xmath218 ) , we can establish the following fact    @xmath219    multiplying @xmath12 on both sides for user @xmath220 , we obtain    @xmath221    now , @xmath222 implies that @xmath223 is close to @xmath26 , and @xmath224 is close to @xmath225 .",
    "furthermore assume that stochastic matrix @xmath211 is the resultant outcome for the actual arrival rate distribution @xmath26 of the system .",
    "therefore , for all sufficiently small values ( i.e. , @xmath209 ) of @xmath226 , we have    @xmath227    after multiplying @xmath228 for channel state @xmath9 , and then summing the relation in  ( [ eq : eqn11 ] ) over all channel states , we obtain    @xmath229    sufficiently small values ( i.e. , @xmath209 ) of @xmath226 further implies    @xmath230 \\le \\sum_{i{\\in}\\textbf{n}^*}[\\lambda_i - v_i^ * ]   < 0.\\ ] ]    at time instant @xmath192 $ ] , we know that @xmath231 . hence , the statement of _ lemma 2 _ is proved .    * lemma 3 : * there exist fixed constants @xmath209 and @xmath104 such that the following statement holds for the time - interval @xmath73 $ ] at a non - overloaded state of the system    @xmath232    _ proof : _ the proof is as same as _ lemma 9.3 _ of  @xcite .",
    "* theorem 1 : * in a non - overloaded state of the system , for any @xmath233 , and @xmath57 , let us denote    @xmath234\\},\\ ] ]    the aforementioned definition implies that    @xmath235}q_*(t ) \\ge \\delta_2\\right ) \\le -k(\\delta_1 , \\delta_2 , t).\\ ] ]    based on the above definitions , given some fixed constant @xmath236 , the value of @xmath237 grows linearly with @xmath4 .",
    "more precisely , for any @xmath236 , there exists @xmath238 such that for a moderately large value of @xmath57 and @xmath239 , @xmath240 .    _",
    "proof : _ the proof of this theorem can be proved by the statement of _ lemma 3_.    * theorem 2 : * at any time instant , suppose @xmath26 and @xmath139 are the arrival rate and channel state vectors . ] .",
    "consequently , @xmath241 be the set of all possible service rate vectors for all users .",
    "furthermore , we assume that @xmath242 . if @xmath243 is the growth rate of the largest queue , and @xmath244 is the service rate vector , the value of @xmath243 resides in the solution of the auxiliary optimization problem in  ( [ eq : opt1 ] ) .",
    "@xmath245 \\\\ & \\mbox{subject to } \\sum_{i}e^{-q_i / q^{th } } \\le a,~\\mbox{is a fixed constant and } > 0 .",
    "\\end{aligned}\\ ] ]    the optimization problem in ( [ eq : opt1 ] ) has the following properties    \\(i ) it has the following structure , which is equivalent to the rule of our scheduling algorithm .    @xmath246    \\(ii ) the resultant value of @xmath243 is affected by the value of @xmath191 , and the optimal decay rate achieved by our scheduling algorithm can be obtained by tweaking this variable .",
    "\\(iii ) it is equivalent to the optimization problem in ( [ eq : opt2 ] ) . and , the value of the problem in ( [ eq : opt1 ] ) is equal to @xmath247 multiple of the value in ( [ eq : opt2 ] ) .",
    "@xmath248 \\\\ & \\mbox{subject to } v_i \\ge 0 , \\forall{i}.\\end{aligned}\\ ] ]    _ proof : _ if we redefine the variables @xmath249 , the optimization problem in ( [ eq : opt1 ] ) can be written as    @xmath250 \\\\ \\nonumber & \\mbox{subject to } \\sum_iz_i \\le a \\\\ & z_i \\ge 0 , \\forall{i}.\\end{aligned}\\ ] ]    note the following property of the problem in ( [ eq : opt3 ] )    @xmath251    the aforementioned function in ( [ eq : func1 ] ) is convex .",
    "the inner problem ( the min part ) in ( [ eq : opt3 ] ) is then the concave function @xmath252 , and then we can write the convex problem in ( [ eq : opt4 ] ) as    @xmath253    subject to the constraints in ( [ eq : opt3 ] ) . taking the lagrangian of the problem in ( [ eq : opt4 ] ) over * z",
    "* , we have    @xmath254    where @xmath255 and @xmath256 , are the lagrange multipliers . for any optimal solution @xmath257 of the problem , there exist some fixed @xmath258 and @xmath256 for which the following conditions are satisfied    @xmath259    where    @xmath260    this is because a vector @xmath261 is a subgradient of @xmath262 at point @xmath263 if and only if @xmath264 . due to the duality property , @xmath255 must be positive that implies @xmath265 are positive , and @xmath266 since @xmath257 is positive .",
    "since @xmath267 , we can say that the resultant @xmath268 is the real number multiple of @xmath269 .",
    "consequently , from the definition , @xmath270 can be renamed as the service rate vector @xmath244 .",
    "furthermore , from the definition of the growth rate of the largest queue , @xmath271 .",
    "this proves the statement of ( i ) in _ theorem 2_. consequently , at the unique optimal solution @xmath257 , the value of the problem in ( [ eq : opt3 ] ) is    @xmath272 = \\displaystyle\\sum_iz_i^*\\left[\\lambda_i - b_i\\right ] = a\\pi.\\ ] ]    now , we want to see how the value of @xmath191 affects the value of @xmath244 that eventually affects the value of @xmath243 .",
    "intuitively , the larger the value of @xmath191 , the resultant @xmath261 is such that it gives more priority to the value of @xmath273 instead of @xmath263 . on the other hand , the smaller the value of @xmath191 , the resultant @xmath261 is such that it gives more priority to the value of * z*.",
    "consequently , the values of @xmath244 and @xmath243 are affected as well . to summarize , consider @xmath274 and @xmath275 are two possible values of @xmath191 , where @xmath276 .",
    "for @xmath277 and @xmath278 , if the resultant values of @xmath243 are @xmath279 and @xmath280 , respectively , we can say that @xmath281 .",
    "the optimal value of @xmath243 ( the minimum one ) resides in choosing the proper value of @xmath191 . generally , the smaller the value of @xmath191 ( while @xmath282 ) , the better the value of @xmath243 .",
    "this concludes the statement of ( ii ) in _ theorem 2_.    the proof of the statement in ( iii ) is as follows .",
    "we know that @xmath283 \\le \\max_i[\\lambda_i - e^{\\{-\\frac{v_i}{\\max_iv_i } + \\rho_1 + \\rho_2\\ } } ] , \\forall{i}$ ] .",
    "hence , the objective function part of ( [ eq : opt3 ] ) can be re - written as    @xmath284 \\le z_i\\displaystyle\\max_{1 \\le i \\le n}\\left[\\lambda_i - e^{\\{-\\frac{v_i}{\\max_iv_i } + \\rho_1 + \\rho_2\\}}\\right ] , \\forall{i}.\\ ] ]    consequently , the maximum value of the problem in ( [ eq : opt3 ] ) ( while satisfying its constraint @xmath285 ) appears to    @xmath286 \\\\ & \\mbox{subject to } v_i \\ge 0 , \\forall{i}.\\end{aligned}\\ ] ]    this concludes the statement of ( iii ) in _ theorem 2_.",
    "[ tab : f - param ]    .channel capacity in different states [ cols=\"^,^,^,^\",options=\"header \" , ]     in this section , we will provide simulation results to verify the analytical results given in the earlier sections .",
    "we consider that the simulated system has @xmath287 users ( i.e. , @xmath288 ) and @xmath289 channel states ( i.e. , @xmath290 ) .",
    "data packet arrival rate for all users are considered as @xmath24 ( i.e. , @xmath291 ) .",
    "the probabilities of the channel states are @xmath292 and @xmath293 .",
    "the capacity for each user on each channel state is given in table i.    ) and the optimal one . ]     achieved by our scheduler . ]",
    "since the ldp only holds for the large value of @xmath5 , for moderately large value @xmath294 of @xmath5 , we have run our scheduling algorithm under the setting mentioned above , and compared the resultant decay rate of the queue overflow probability with the optimal one ( @xmath36 ) in fig .",
    "[ fig : our - dr ] . in this simulation , the values of @xmath21 and @xmath22 are set as @xmath23 . in the analytical study , we have observed that the decay rate is different for different values of @xmath191 , which is validated in this figure .",
    "furthermore , we see that the smaller the value of @xmath191 , the better the value of decay rate . however , the decay rate is the best at @xmath295 .",
    "now , we want to see the reason behind the relationship between the value of @xmath191 and the decay rate . for this ,",
    "table iii(a ) and table iii(b ) show the resultant user - channel state distribution matrix for @xmath296 and @xmath297 , respectively . to compare our results with the optimal decay rate ( @xmath36 ) ,",
    "we have shown the corresponding user - channel state distribution matrix in table ii . in the analytical study",
    ", we argued that the smaller the value of @xmath191 , the scheduling algorithm gives more priority to the queue length .",
    "this is obvious when we look at table iii , which is at channel state @xmath298 , @xmath299 is larger for @xmath300 comparing with @xmath301 . for the similar reason , at channel state @xmath302 , @xmath299 is smaller for @xmath300 comparing with @xmath301 .",
    "furthermore , we see in fig .  [",
    "fig : our - dr ] that the decay rate for @xmath303 is worse than that with @xmath295 , and it implies that only queue aware scheduling rule does not improve the decay rate .",
    "we will investigate this issue more in the following discussions .",
    "comparing these tables , it is very obvious that simulation results confer with the analytical study . at @xmath300 ,",
    "the resultant user - channel state distribution matrix is more approaching to the optimality comparing with the other cases .",
    "[ fig : our - of - prob ] shows the buffer overflow probability for different values of @xmath191",
    ". the larger the decay rate , the smaller the buffer overflow probability , which is evident in the figure .",
    "this figure further proves that the larger the buffer size , the smaller the buffer overflow probability .    ) and the optimal one . ]",
    "achieved by the exp scheduler . ]",
    "we also have simulated exp  @xcite and mw  @xcite rules for the above setup . at time",
    "instant @xmath8 , if the channel state is @xmath9 , exp rule chooses to serve user @xmath18 following the formula    @xmath304f_m^i,\\ ] ]    where @xmath305 is a constant parameter that is taken from the interval @xmath306 .",
    "similar to our case , we plot the decay rate of the queue overflow probability achieved by this scheduler for different values of @xmath305 in fig .",
    "[ fig : exp - dr ] .",
    "moreover , we present the user - channel state distribution matrix for @xmath307 and @xmath308 in table iv(a ) and table iv(b ) , respectively .",
    "we also plot buffer overflow probability for different values of @xmath305 in fig .  [ fig : exp - of - prob ] . according to the analytical results of  @xcite ,",
    "the optimal value of decay rate for the largest queue overflow probability is independent of @xmath305 .",
    "however , in the tables , we notice , for larger value of @xmath305 , the scheduling algorithm gives more priority to the instantaneous channel rate comparing with the instantaneous queue length , and hence the resultant largest queue length slightly increases for this case as well as the corresponding decay rate decreases .",
    "however , from our observation in the simulation , the resultant decay rate does not vary that much for different values of @xmath305 .",
    "moreover , the decay rate for @xmath309 is more approaching to the optimality .",
    "this observation is more evident in table iv(a ) and table iv(b ) .    ) and the optimal one . ]     achieved by the mw scheduler . ]    on the other hand , mw rule selects user @xmath18 such that    @xmath310    here , @xmath258 is also a constant parameter that ranges from @xmath311 $ ] . for this rule ,",
    "similar to the above two cases , we plot the decay rate and buffer overflow probability in fig .  [",
    "fig : mw - dr ] and fig .",
    "[ fig : mw - of - prob ] , respectively .",
    "table v(a ) and table v(b ) present the user - channel state distribution matrix for @xmath312 and @xmath313 , respectively . unlike the exp rule , with this rule , larger value of @xmath258 makes the scheduling algorithm to be more dependent on the instantaneous queue length comparing with the instantaneous channel rate .",
    "however , as we mentioned in the previous paragraphs , the scheduling algorithm that is solely dependent on queue length is not throughput optimal , can not provide optimal decay rate . to achieve the optimality",
    ", one needs to choose the proper value of @xmath258 that provides the proper balance between the instantaneous queue length and the instantaneous channel rate dependence of the scheduling algorithm .",
    "consequently , the optimal decay rate is achieved at @xmath313 .",
    "table v(a ) and table v(b ) further emphasizes this observation . in fig .",
    "[ fig : mw - of - prob ] , it is further evident that the better the decay rate , the better the buffer overflow probability .",
    "the above simulation results discussed raise some issues on the applicability of the large deviation principle as the probability of any event is an exponential function of its decay rate . from our analytical study and also from  @xcite , buffer size that is close to @xmath314 fits the characteristics of ldp .",
    "this study does not provide much information on what buffer level is enough for the asymptotic system behavior to be accurate .",
    "furthermore , the ldp study only specifies the decay rate of the probability of any event .",
    "if the factor in front of the exponential term is unknown , the exact value of the probability from the ldp study is not possible .",
    "hence , one needs to be careful while comparing the performance predicted by a ldp with the actual performance ( e.g. , buffer overflow probability ) of any scheduling algorithm .    to better understand the results",
    ", we plot the state space of the simulation ( our scheduler ) in fig .",
    "[ fig : our - dec - reg - qth-2 ] and fig .",
    "[ fig : our - dec - reg - qth-10 ] for @xmath295 and @xmath301 , respectively .",
    "we project the length of two chosen queues @xmath315 and @xmath316 on the x - axis and y - axis , respectively . based on the scheduling decision ,",
    "the state space is divided into decision regions . in region",
    "@xmath24 , user @xmath24 is scheduled based on its queue length irrespective of the channel state . in the similar manner , no matter the channel state , in region @xmath289 , @xmath316 is served . in region @xmath317 , either @xmath315 or @xmath316 is served based on their channel state and queue length .",
    "boundary of the decision regions is determined by the scheduling policy .",
    "the tiny circles in the figures are the states that have been visited by the system during the simulation .    .",
    "]    ]    region @xmath24 and region @xmath289 are referred to as max - queue regions as in these regions , scheduling decisions are only made based on the queue length . whereas , region @xmath317 is named as the max - rate region as the user instantaneous rate is considered while making the scheduling decision in this region . for our scheduling algorithm , as we decrease @xmath191 , the boundaries between the decision regions tend to move to the diagonal line .",
    "this trend has two implications .",
    "first , as the decision boundaries approach the diagonal line , the algorithm places more emphasis on reducing the largest queue .",
    "apparently , with this setup , the decay rate of the queue overflow probability should be improved significantly .",
    "however , the second effect of decreasing @xmath191 is the reduction of the max - rate region . as a result , for smaller value of queue length , it is less likely that the system falls into the max - rate region . with smaller value of @xmath191 ,",
    "the algorithm is unlikely to take the advantage of the increased capacity at small queue lengths which leads to the tendency for the queues to grow .",
    "the area of the max - rate region introduces the tradeoff in increasing / decreasing the largest queue length . for this reason , as observed in fig .",
    "[ fig : our - dr ] , the decay rate of the overflow probability for @xmath303 is smaller than that with @xmath295 .    . ]    similar to the state space plots achieved from the simulation of our scheduling algorithm , we show the decision boundaries of the state space derived from the simulation of the exp scheduler in fig .",
    "[ fig : exp - dec - region ] for different values of @xmath305 .",
    "the slight variation of the decay rate for different values of @xmath305 can be understood when we see different boundary lines . from this figure and the plot in fig .",
    "[ fig : our - dr ] , this is evident that with larger values of @xmath305 , the larger max - rate region may not be useful in reducing the largest queue length .    .",
    "]    for different values of @xmath258 , we also plot the decision boundaries of the simulated state space obtained by the mw scheduling algorithm .",
    "we argued previously that the mw rule provides more emphasis on the largest queue length for larger values of @xmath258 , and fails to take the advantage of the instantaneous channel rate .",
    "this observation is further proved in this figure . however , with smaller values of @xmath258 , the algorithm exaggeratedly gives more emphasis on the instantaneous use rate , and hence the largest queue length increases consequently . as a result , the best decay rate of the overflow probability is obtained at @xmath313 .",
    "in this paper , we have analyzed the performance of the scheduling algorithm proposed in  @xcite . because of the complex coupling between input and output metrics of a scheduling algorithm , it is difficult to analyze such algorithm using conventional methods .",
    "since the scheduling algorithm is specifically designed for qos based traffic , we have mapped the probability that the scheduling algorithm does not meet the qos bound to the queue overflow probability .",
    "then , we have used ldp to determine the bound of this probability . we have proved that for certain value of the parameter @xmath191 , the scheduling algorithm converges to the optimal possible algorithm which can reduce the queue overflow probability to the smallest possible level . finally , through the numerical results",
    ", we have proved our analytical study comparing with other scheduling algorithms .",
    "r.  ruby , v.  c.  m. leung , and d.  g. michelson , `` uplink scheduler for sc - fdma - based heterogeneous traffic networks with qos assurance and guaranteed resource utilization , '' _ ieee trans . veh .",
    "_ , vol .  64 , no .  10 , pp . 47804796 , oct 2015 .            a.  l. stolyar , `` large deviations of queues sharing a randomly time - varying server , '' _ queueing syst .",
    "_ , vol .",
    "59 , no .  1 ,",
    "135 , may 2008 .",
    "[ online ] .",
    "available : http://dx.doi.org/10.1007/s11134-008-9072-y        m.  andrews , k.  kumaran , k.  ramanan , a.  stolyar , r.  vijayakumar , and p.  whiting , `` scheduling in a queuing system with asynchronously varying service rates , '' _ probab .",
    "_ , vol .  18 , no .  2 , pp .",
    "191217 , apr 2004 .",
    "[ online ] .",
    "available : http://dx.doi.org/10.1017/s0269964804182041                s.  meyn , `` stability and asymptotic optimality of generalized maxweight policies , '' _",
    "siam j. control optim .",
    "_ , vol .",
    "47 , no .  6 , pp .",
    "32593294 , 2009 .",
    "[ online ] .",
    "available : http://link.aip.org/link/?sjc/47/3259/1"
  ],
  "abstract_text": [
    "<S> in this paper , we study the stability of light traffic achieved by a scheduling algorithm which is suitable for heterogeneous traffic networks . since analyzing a scheduling algorithm is intractable using the conventional mathematical tool , </S>",
    "<S> our goal is to minimize the largest queue - overflow probability achieved by the algorithm . in the large deviation setting , this problem is equivalent to maximizing the asymptotic decay rate of the largest queue - overflow probability . </S>",
    "<S> we first derive an upper bound on the decay rate of the queueoverflow probability as the queue overflow threshold approaches infinity . </S>",
    "<S> then , we study several structural properties of the minimum - cost - path to overflow of the queue with the largest length , which is basically equivalent to the decay rate of the largest queue - overflow probability . given these properties , we prove that the queue with the largest length follows a sample path with linear increment . for certain parameter value , </S>",
    "<S> the scheduling algorithm is asymptotically optimal in reducing the largest queue length . through numerical results </S>",
    "<S> , we have shown the large deviation properties of the queue length typically used in practice while varying one parameter of the algorithm .    </S>",
    "<S> submitted paper    scheduling , heterogeneous traffic , large deviation principle . </S>"
  ]
}
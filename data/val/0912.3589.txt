{
  "article_text": [
    "determining three - dimensional information from a single two - dimensional image is a common goal in computer vision @xcite .",
    "circular features appear frequently in real world objects , the mouth of a cup , the wheels of a car , the iris of a human eye .",
    "such circular features ( referred to as 3d circles from here on ) appear as ellipses when imaged if viewed non - frontally .    in this paper",
    "we present a method for matching parts of a two - dimensional scene to existing three - dimensional models using a technique that maps three - dimensional circles to two - dimensional ellipses .",
    "additionally , we present a novel method for identifying elliptical regions and the properties thereof in a two - dimensional image . in particular",
    ", we aim to recover the pose of motor vehicles in natural scenes .",
    "the purpose of this is twofold : first , it allows us to determine the location and facing of a car in a street scene , which has obvious uses in driver assistance systems , and second it allows us to place vehicles in three dimensions from a single image without constructing a depth map of the entire scene .",
    "it is important to note that this paper does not present a general - purpose vehicle detection or complete scene reconstruction algorithm , rather it aims to deliver a basis from which such platforms can be built or improved .",
    "intelligent driver assist technology is becoming more and more important as our roads become busier . determining vehicle",
    "pose in three dimensions allows us to estimate a heading for a visible vehicle , which can alert the driver to approaching vehicles .",
    "importantly , our pose detection technique requires only a single frame , allowing it to detect stationary vehicles as potential hazards in case of unexpected motion , unlike many techniques which require a series of images of moving vehicles .    developing a depth map of a scene from a single image is an underconstrained problem .",
    "there are approaches based on machine learning @xcite , or that make use of the effects of fog @xcite , but these either require classification and a large training data set or specific scene conditions .",
    "our method is able to place 3d models of imaged vehicles at their locations in the same orientation as in the real world .",
    "this has applications for security , as observers will be able to determine the position of a vehicle from surveillance footage , as well as scene reconstruction . unlike the work of hinz et al .",
    "@xcite , which places simple 3d car models in vehicle locations in aerial photographs , we want to use a specific , detailed 3d model to match to street - level car images .    in order to do this ,",
    "we first must isolate ellipses in the image that we can then match to circular areas in a three - dimensional model . for vehicles ,",
    "the most applicable choice for these ellipses are the wheels .",
    "existing ellipse detection methods , such as the hough transform @xcite require a five - dimensional search , which has high computational and memory requirements .",
    "there are many recent methods methods which aim to reduce this by using parametrised spaces for the hough transform accumulator , such as @xcite .",
    "these methods still require edge extraction or other image preprocessing , and often detect significantly more ellipse than we need in this paper . to this end",
    ", we present a new method for identifying wheels in real - world vehicle images which incorporates a significant amount of ellipse filtering and parameter estimation as part of the detection process .",
    "other feature detection methods are discussed more fully in the text .    while this work is focussed on identifying the pose of cars ,",
    "the ellipse to circle mapping process can be applied to any three dimensional object with circular features , as shown in the experimental verification of section [ 2d3dmatch ] .",
    "rather than using an existing ellipse detection method based on edge detection , such as those presented in @xcite , we propose a method for detecting elliptical objects which allows for significant noise at the edge of the object .",
    "the ellipse detection method presented here involves several steps .",
    "first , pixels which are brighter than their surroundings are identified by comparing each pixel to the average local intensity . connected components , or blobs ,",
    "are then found and labeled .",
    "further processing is performed on each of these blobs to fill gaps and then to determine whether the detected object is elliptical . while we use bright image regions here",
    ", the method can be easily changed to identify dark regions or regions which adhere to some other color or intensity property .",
    "this process is summarised in algorithm 1 and visually in figure [ fig : ellipsealgorithm ] .",
    "smooth image with square kernel ( figure [ fig : ellipsealgorithm]b ) normalize image ( figure [ fig : ellipsealgorithm]c ) threshold normalised image ( figure [ fig : ellipsealgorithm]d ) detect and label connected regions ( figure [ fig : ellipsealgorithm]e ) star fill connected regions ( figure [ fig : ellipsealgorithm]g ) get ellipse parameters using eq.([ellipseparams ] ) filter out non - ellipses by comparison to expected ellipse ( figure [ fig : ellipsealgorithm]g ) determine ellipse normal using eq.([ctophi ] ) ( figure [ fig : ellipsealgorithm]g )    in order to identify pixels which are brighter than their surrounding area , a new image which reflects the local mean intensity for each pixel is built .",
    "each pixel in this new image contains the mean intensity for a square region centered on that pixel in the original image .",
    "this square is set to _",
    "b_% of the shortest image side . for the purposes of this paper , a window 10% of the width of the image was found to be effective , but this can depend on the nature of the ellipses that are desired .",
    "if this window would extend beyond the edges of the image for a particular pixel , the mean of the closest possible window which is entirely contained within the image is used instead . the intensity integral image @xcite",
    "is used to efficiently calculate this windowed mean value , which was the primary motivation for using a simple box kernel for smoothing .",
    "we then subtract this average from the intensity of each pixel in the initial image , and then set a threshold _",
    "t _ which defines how much a pixel must exceed the local average to be flagged as ` bright ' . for wheel detection , one standard deviation above the mean of the average image was found to produce good results .",
    "this thresholding produces a binary image , with zero corresponding to ` dark ' pixels , and one corresponding to ` bright ' pixels .",
    "this thresholding method tends to produce a thick ` edge ' around the ellipse perimeter as seen in figure [ fig : ellipsedetect ] ( ii ) , and frequently contains small gaps corresponding to darker areas of the ellipse surface , corresponding to occlusions , decoration or simply image noise .    to denoise the binary image obtained above , it is first necessary to eliminate small bright regions .",
    "simple blob extraction is then performed , labeling each 8-connected region with a unique identifier .    in this ellipse detection method ,",
    "objects being investigated must be filled .",
    "as it is not desirable to affect the overall shape of a blob , the fill method chosen preserves the perimeter and fills gaps in a radial fashion . in each blob , if a pixel is marked as bright then all pixels on a line between it and the blob center are also marked as bright .",
    "we are able to do this efficiently , in linear time , by spiralling in from the edge to the centre .",
    "this fill method is used rather than a simple flood fill as blobs frequently do not have fully enclosed edges due to noise or occlusions .",
    "each of these filled , denoised blobs is then separately investigated to determine if it is elliptical in nature .",
    "see the following section and figure [ fig : ellipsedetect ] ( iii ) for more details .    in order to determine whether a particular blob is elliptical , the extracted blob",
    "is compared to an equivalent ellipse .",
    "we do this by finding the mean and covariance matrix of each blob .",
    "let @xmath0 be the pixels of one .",
    "the area @xmath1 , mean @xmath2 and covariance matrix @xmath3 of each blob can then be found as follows : [ ellipseparams ] |w| = _ pw 1 , = _ pwp , + c = 1|w|_pw(p - v)(p - v)^by assuming that the blob is an ellipse , the major and minor axes of the corresponding ellipse can be calculated from the eigenvalues @xmath4 and @xmath5 of the blob covariance matrix , and the center of the corresponding ellipse is given by @xmath6 . from this information , we are able to find the shape of the corresponding ellipse by eq .. this approach is similar to that described in @xcite .",
    "this step is shown in figure [ fig : ellipsedetect ] ( iii ) .",
    "we are able to perform a consistency check at this stage to eliminate some obvious non - ellipses : if @xmath7 is an ellipse , its area is given by @xmath8 as well as @xmath9 .",
    "thus if @xmath10 for some small threshold @xmath11 , we can immediately discard this blob .",
    "we can then directly compare the remaining blobs to the equivalent ellipse on a per pixel basis by counting the number of pixels in which the blob and its ellipse do not match .",
    "as we are interested in the elliptical nature of the blob regardless of size , we divide the number of mismatches by the blob area .",
    "blobs with a sufficiently low mismatch can be regarded as ellipses .",
    "we found experimentally that a mismatch ratio of 20% identifies human - visible ellipses while discarding non - ellipses .",
    "circles in 3d space become ellipses in 2d space after parallel projection .",
    "it is possible to exploit this fact to determine the pose of a 3d object containing circular features from a projected image .",
    "first , we describe an ellipse in a way that is easily manipulated .",
    "let [ ellipsefromparams ] e(v , c ) : = \\{p^2 : ( p - v)^c^-1(p - v)4 } describe a solid ellipse with center @xmath6 , where @xmath12 is a symmetric positive definite matrix .",
    "it can be shown by integration that @xmath12 is the covariance of the ellipse given by @xmath13 .",
    "the eigenvalues @xmath14 of @xmath12 can be computed from the trace @xmath15 and the determinant @xmath16 : [ evalue ] _",
    "1/2 = 12c therefore , the lengths of the major and minor axes of the ellipse are [ axes ] a_1=2 a_2=2    in lemma [ circletoellipse ] , we describe how a 3d circle projects to an ellipse in 2d .",
    "[ circletoellipse ] let : = \\{x^3 : ||x||r & x^v=0 } be a centered circle with radius @xmath17 and unit normal @xmath18 .",
    "let @xmath19 be the orthogonal projection of circle along the @xmath20 axis .",
    "then @xmath21 and @xmath22 and @xmath12 are related by [ ctophi ] v (    c_x + _ y + _ z    ) =(    c +   + a_2    ) where @xmath4 and @xmath5 are defined in and .",
    "the @xmath23 coordinates of @xmath24circle describe an ellipse .",
    "condition @xmath25 implies @xmath26 . inserting this into @xmath27 yields ||x||^2 &",
    "= & x^2+y^2+z^2 = x^2+y^2+(x_x+y_y_z)^2 + & = & ^ 1+_x^2/_z^2_x_y/_z^2 _ x_y/_z^21+_y^2/_z^2 hence the projected circle is an ellipse with covariance [ phitoc ] c & = & r^24 _",
    "x_y/_z^21+_y^2/_z^2 ^ -1 + & = & r^24    where we have exploited @xmath28 when inverting the matrix .",
    "conversely , given an ellipse with covariance @xmath12 , using , , and , the radius and normal of the underlying 3d circle are given by .",
    "there is one hard sign constraint , namely @xmath29 . since",
    "a projected circle is usually only visible from one side of the 3d object , we define @xmath22 as pointing away from the observer into the image .",
    "this fixes the sign of @xmath30 , leaving two solutions which can not be disambiguated .",
    "these solutions arise from the fact that an ellipse can be projected from a circle facing in two different directions .",
    "we give some rough estimates of the accuracy of the reconstructed @xmath22 .",
    "in particular we show that reconstruction from a frontal view is somewhat surprisingly harder than from a tilted view .",
    "let @xmath31 $ ] be the angle by which the circle is tilted out of the @xmath23-plane , and let @xmath32 be the accuracy to which the minor axis @xmath5 could be determined by the ellipse detection algorithm 1 . for `` perfect '' pixel ellipses ,",
    "an accuracy between @xmath33 ( pixel accuracy ) and @xmath34 ( sub - pixel accuracy due to averaging / anti - aliasing ) is achievable . from @xmath35",
    ", we get by taylor expansion , a_2 = -r ( ) - 12 r()^2 + o((^3 ) ) hence for a non - frontal view ( @xmath36 ) , the orientation of the circle axis @xmath22 can be determined with accuracy @xmath37 ) , the accuracy reduces to @xmath38 .",
    "this is consistent with our experimental results on real cars like those in figure [ fig : fullpageresults ] .",
    "we now want to determine the orthogonal projection that maps a general circle in 3d to a general ellipse in 2d .",
    "let @xmath39 , and @xmath40 be the center , normal , and radius of the circle , let @xmath2 and @xmath41 be the center and covariance matrix of the ellipse , and let [ project ] x = qx+q be the orthogonal projection to be determined .",
    "matrix @xmath42 consists of the first two rows of an orthogonal matrix @xmath43 , @xmath44 is a scaling factor , and @xmath45 a shift vector . the centers @xmath46 and @xmath6 must match , hence @xmath47 .",
    "the major ellipse axis @xmath4 corresponds to the circle radius @xmath48 by , hence @xmath49 .",
    "let @xmath22 be the `` normal '' of the ellipse as defined in lemma [ circletoellipse ] .",
    "note that there are two possibilities for this vector , as there is a sign ambiguity in .",
    "we use the convention that @xmath22 and @xmath50 point from ellipse center away from the observer ( @xmath51 ) .",
    "axle @xmath50 `` projects / rotates '' to @xmath52 , which must align with @xmath22 , hence we have the constraint @xmath53 on @xmath54 ( and hence @xmath55 ) .",
    "an orthogonal matrix has three degrees of freedom ( dof ) , the constraint @xmath53 determines 2 dof , hence 1 dof remains , namely after rotating @xmath50 into @xmath22 , we can freely rotate around @xmath22 .",
    "a rotation around a unit axle @xmath56 by angle @xmath57 can be represented by quaternion @xcite [ quaternion ] q : = a + bi + cj + dk a+(b , c , d ) + : = 2 + 2 , ||||=1 which has the following matrix representation [ qtomat ] (    ccc a^2+b^2-c^2-d^2 & 2bc-2ad & 2ac+2bd + 2ad+2bc & a^2-b^2+c^2-d^2 & 2cd-2ab + 2bd-2ac & 2ab+2cd & a^2-b^2-c^2+d^2 +    ) in our case , a rotation around @xmath58 by angle @xmath59 $ ] rotates @xmath50 into @xmath22 . using @xmath60\\end{aligned}\\ ] ] leads to the following convenient representation : [ phitovarphi ] a = 2 = , ( b , c , d ) = 2 = 12a(vv ) this representation only breaks down if @xmath50 is exactly antiparallel to @xmath22 .",
    "in this case , any @xmath61 orthogonal to @xmath50 will do .",
    "subsequently , a rotation around @xmath62 by an arbitrary angle @xmath63 can be applied .",
    "hence the complete transformation is as follows :    [ onewheelalign ] eq .",
    "projects 3d circle @xmath64 = ( center , axle , radius ) to 2d ellipse @xmath65 = ( center , covariance ) iff q = q ,",
    "q = q_2q_1 , q = v - qv , = a_1/r , minor axis @xmath4 is given by and .",
    "matrix @xmath66 is given by and and .",
    "matrix @xmath67 is given by and with arbitrary @xmath68 $ ] but now with @xmath69 given by .",
    "[ 2d3dmatch : eg ]        .the true and estimated pose of a simple 3d table . [ cols=\"^,^,^,^,^,^ \" , ]     table [ tab : artificialresults ] shows the true and estimated pose using the wheel normal estimation method .",
    "the rotation is given as quaternion parameters @xmath70 , the shift as a 2-dimensional vector @xmath71 $ ] representing the shift from car centre to image origin , and the scale factor is a scalar .",
    "figure [ fig : fullpageresults ] shows graphically the recovered pose for two artificial images using approximated wheel normals .",
    "the pose recovered from exact ellipse normals matched exactly the input pose , and so is not included .",
    "the pose returned when ellipse normals are precisely known matches perfectly with the expected pose of the image .",
    "however , the estimated ellipse normals produce a pose which does not exactly match that expected .",
    "the pose error is relatively small , and it clearly results from inaccuracies in the estimation of ellipse parameters from the wheel detection . even when using estimated parameters , the pose of the vehicle is still close enough to the true pose that it provides a good starting point for techniques which make use of other information about the vehicle to fine - tune the estimation .",
    "figure [ fig : fullpageresults ] shows three real - world car images and the estimated pose of a 3d model of these vehicles . as we do not know the true vehicle pose in a real image , we are unable to conduct a quantitative analysis of the recovered pose , and must instead rely on visual inspection .",
    "car pose is recovered quite well in terms of scale and position , but there is some misalignment in orientation .",
    "this misalignment is caused by a distortion of the detected wheel ellipses , resulting in an imprecise normal recovery and thus a mismatched pose .",
    "the recovered model pose is still able to give us significant information about the position of the vehicle .",
    "we have presented a method for mapping a two - dimensional ellipse to a three - dimensional circle by estimating the normal of the ellipse in three dimensions .",
    "our results show that an ellipse can be matched to a circle in three dimensions to a pose with eight discrete and one continuous ambiguity .",
    "we also show that these ambiguities can be reduced by using other information about the object to be matched or the scene it is drawn from . in particular ,",
    "vehicle pose can be resolved to a four - fold discrete ambiguity by making use of both of a vehicle s wheels and the fact that a vehicle is not transparent .",
    "forcing the vehicle to be upright reduces this to a twofold ambiguity , given that we know which wheel in the image is the rear .",
    "we are currently developing a dissimilarity measure that will be able to automatically select the correct pose from these ambiguities by performing a comparison between each returned pose and the input image , but detail on this process is beyond the scope of this paper .",
    "it is based on a distance between images which is invariant under lighting conditions and relatively insensitive to the image background .",
    "additionally , we described a technique for wheel detection and wheel parameter estimation using a local thresholding technique and blob covariance .",
    "our results show that this technique performs well on a variety of real and synthetic vehicle images .",
    "r.  safaee - rad , k.c .",
    "smith , b.  benhabib , and i.  tchoukanov .",
    "application of moment and fourier descriptors to the accurate estimation of elliptical shape parameters . in _ prof . international conf . on acoustics , speech , and signal processing ( icassp91 ) _ , pages 24652468 vol.4 , 1991 ."
  ],
  "abstract_text": [
    "<S> finding the three - dimensional representation of all or a part of a scene from a single two dimensional image is a challenging task . in this paper </S>",
    "<S> we propose a method for identifying the pose and location of objects with circular protrusions in three dimensions from a single image and a 3d representation or model of the object of interest . to do this , </S>",
    "<S> we present a method for identifying ellipses and their properties quickly and reliably with a novel technique that exploits intensity differences between objects and a geometric technique for matching an ellipse in 2d to a circle in 3d .    </S>",
    "<S> we apply these techniques to the specific problem of determining the pose and location of vehicles , particularly cars , from a single image . </S>",
    "<S> we have achieved excellent pose recovery performance on artificially generated car images and show promising results on real vehicle images . </S>",
    "<S> we also make use of the ellipse detection method to identify car wheels from images , with a very high successful match rate .    </S>",
    "<S> computer vision ; image recognition / processing ; ellipse detection ; 3d models ; 2d - ellipse to 3d - circle matching ; single image pose identification ; wheel detection ; 3d vehicle models . </S>"
  ]
}
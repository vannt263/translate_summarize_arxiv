{
  "article_text": [
    "as an indispensable type of information filtering techniques , recommendation systems have attracted a lot of attention in the past decade and have been successfully deployed in many e - commerce websites , such as amazon and netflix .",
    "_ collaborative filtering _ ( cf ) and _ content - based _ techniques are two widely adopted approaches for recommendation systems  @xcite .",
    "collaborative filtering  @xcite recommends items for a given user by referencing item ratings from other similar users , while content - based techniques  @xcite make recommendations by matching a user s personal interests ( or profiles ) with item content ( e.g. , item description or tags ) .",
    "some research works have also discussed approaches that integrate both techniques for item recommendation  @xcite .",
    "however , no emphasis has been placed explicitly on users _ social influence _ in these works . in our real life",
    ", we usually turn to our friends for recommendations of books , movies or restaurants . as evident by the dramatic expansion of social media and social networking systems , social influence from friends",
    "presents new opportunities for recommendation systems but also bring many great challenges . in this paper",
    ", we aim to take social influence among users , along with user profile , user preference and item content , into the design of recommendation systems .    to meet users social demands , @xcite show that social influence is beneficial for item recommendations .",
    "the idea behind is that a user s friends may share common interests with the user , and have influence on the user s decisions . to incorporate the social influence to the recommendation system , @xcite",
    "employ the random walk approach  @xcite to incorporate user s social network for item recommendation . on the other hand ,",
    "model - based systems were also been extended to include social influence  @xcite . assuming that trust intensities among a user and his friends are available , some prior works propose to integrate users social trust network into their models through a linear combination  @xcite or as a regularization term  @xcite .",
    "however , most of the proposed methods either apply ad hoc heuristics to include social influence to their methods or assume quantified prior knowledge of social trusts which is handily available .",
    "there is a need to define comprehensible social influence , beyond random walking over the social network , to explicitly model and unveil the social influence from data available to the recommendation system .",
    "owing to the success of collaborative filtering and content - based recommendation ideas , in this paper we propose to incorporate social influence with these ideas in a unified fashion to design new recommendation systems . through our design , we aim to demonstrate the importance and strength of social influence to recommendation services . to our best knowledge , ideas for unifying social influence with collaborative",
    "filtering and content - based recommendation are unexplored and very challenging . in this paper",
    ", we adopt the _ probabilistic generative model _ as a methodology to reach our goal . the basic idea behind probabilistic generative models",
    "is to `` mimic '' user behaviors in a process of decision making , e.g. , deciding which restaurant to dine . while there exists a prior study  @xcite on integrating collaborative filtering and item content into a probabilistic generative model for item recommendation",
    ", we want to point out that incorporating social influence into the probabilistic generative model is nontrivial .",
    "notice that the data used for cf and content based techniques ( i.e. , the user - item accessing history , user profiles and item content ) contain _ explicit _ observations .",
    "thus , the notions of user preferences , user profiles and item content can be easily modeled . on the other hand , social influence",
    "can not be observed directly from the data ( i.e. , we only know who access which item but never know if this decision is influenced by other people ) , we aim to introduce a latent variable and develop algorithms to capture the social influence between friends in addition of the latent variable for user s topics .    the proposed probabilistic generative model is a latent class statistical mixture model .",
    "the model discovers ( 1 ) users personal preference distribution over latent topics ; ( 2 ) an item generative distribution for each topic ; and ( 3 ) a social influence distribution from friends for each user .",
    "the generative model aims to capture the process of human behaviors and/or reasonings for decision making .",
    "for example , a user ( @xmath0 ) wants to choose a restaurant ( @xmath1 ) for dinner .",
    "he may choose one based on his own tastes or turn to one of his friends ( @xmath2 ) for help .",
    "in the case that @xmath0 wants to choose the restaurant without any influence from his friends ( with a certain probability ) , he chooses a topic according to his personal preference distribution .",
    "then the selected topic in turn `` generates ''",
    "an item @xmath1 following on the topic s item generative distribution . in the case",
    "that social influence from a friend @xmath2 is effective , @xmath2 would generate an item following @xmath2 s preference distributions similarly .",
    "thus , this model simulates the process that how @xmath0 picks the item @xmath1 , including how a friend @xmath2 influences @xmath0 s decision .",
    "as mentioned , both users preferences and social influence among friends are latent variables .",
    "thus , there is a need to devise new learning algorithms to estimate the model parameters . in this paper",
    ", we address this issue by devising a new model learning algorithm based on the idea of _ expectation maximization _",
    "moreover , due to the large volume of social network datasets and the excessive computational cost incurred in learning the generative model parameters , we devise a parallel algorithm under the map - reduce framework in addition to a single - thread algorithm , to process the large - scale datasets we collect . finally , to demonstrate the flexibility and applicability of our ideas to other recommendation services that may utilize social influence",
    ", we adapt our probabilistic generative model and develop an algorithm to support _",
    "group recommendations_. the primary contributions made in our research are summarized as follows .",
    "* we argue that social influence is important for item recommendations and devise probabilistic generative models that explicitly quantify and incorporate social influence from friends to a user in the recommendation process . *",
    "we provide model learning methods ( based on em algorithms ) to learn the model parameters from common user - item pairs .",
    "we implement the algorithms on single machine and parallel processing platform ( based on the map - reduce framework  @xcite ) to efficiently process large - scale data . * in addition to support item recommendation for individual users ,",
    "we demonstrate that the quantified social influence parameter is essential for supporting group recommendations .",
    "owing to the advantages of social influence learned in our model , the proposed social - influence - based group recommendation algorithms significantly outperforms conventional aggregation - based allgorithms .",
    "* we conduct a comprehensive performance evaluation on two real datasets crawled from last.fm and whrrl.com .",
    "experimental results show that our proposal to incorporate social influence into generative models for item recommendation techniques are very effective .",
    "the experimental results for group recommendation also confirm that the good estimation of social influence in our generative model is beneficial for group recommendation .",
    "the remainder of this paper is organized as follows .",
    "section  [ sec : preliminary ] summarizes the related work and provide some background on probabilistic generative models .",
    "section  [ sec : social ] introduces the design of our generative model which combines collaborative filtering and social influence into recommendation process .",
    "section  [ sec : mapreduce ] discusses how the em algorithm is implemented on a single machine and on the map - reduce framework .",
    "section  [ sec : extend ] demonstrates how to incorporate social influence , in addition of collaborative filtering and item content , into the probabilistic generative model .",
    "section  [ sec : group ] reviews some previous group recommendation methods and proposes a new group recommendation method using the social influence obtained from our model .",
    "section  [ sec : perform ] shows the result of an empirical evaluation of our proposal using two real datasets .",
    "finally , section  [ sec : conclusion ] concludes the paper .",
    "in this section , we introduce some related works , including recommendation systems , recommendation in social networks and group recommendation .",
    "then , we provide the background about how to utilize probabilistic generative model for item recommendations .",
    "* recommendation system*. item recommendation has been a crucial service for many e - commerce and web services ( e.g. netflix.com and amazon.com ) .",
    "the goal is to recommend an accurate list of items that the targeted user may be interested in .",
    "collaborative filtering and content - based techniques are two widely adopted approaches for recommendation systems  @xcite .",
    "both of them discover users personal interests and utilize these interests to find relevant items .",
    "collaborative filtering techniques  @xcite automatically predict relevant items for a given user by referencing item rating information from other similar users .",
    "content - based techniques  @xcite make recommendations by matching a user s personal interests ( or profiles ) to descriptive item information .",
    "recommendation systems using pure collaborative filtering approaches tend to fail when little knowledge about the user is known or when no one has similar interests with the user .",
    "for example , if a user has little item rating / selection history or his interests are rare compared to others , the item rating / selection history of other users can not help .",
    "although content - based methods is able to cope with the issue of lacking knowledge , it fails to account for community endorsement .",
    "for example , even though we know a user is interested in chinese restaurants , content - based methods may possibly recommend a bad chinese restaurant to him due to the lack of consideration in users group consensus . as a result , there has been a continuous research interests and effort in combining the advantages of both collaborative filtering and content - based methods  @xcite .",
    "our proposal in this work not only is able to naturally integrate the ideas behind collaborative filtering and content - based methods but also incorporate social influence into the recommendation process .",
    "* social recommendation*. under the context of social networks , social friendship is shown to be beneficial for recommendation  @xcite .",
    "however , prior works in this area are mostly based on ad hoc heuristics .",
    "how a user is influenced by friends in the item selection process remains vague .",
    "for example , @xcite linearly combines social influence with conventional collaborative filtering ; @xcite employ the random walk  @xcite approach to incorporate social network information into the process of item recommendation ; while @xcite explores social friendship via matrix factorization technique , where social influence is integrated by simple linear combination  @xcite or as a regularization term  @xcite .    in this paper",
    ", we propose to employ the probabilistic generative model as a methodology to integrate social influence with collaborative filtering and content - based methods for item recommendation .",
    "our work is uniquely different from these previous works because we do not assume social influence is explicitly available . by leaning a quantitative parameter for social influence",
    ", we are able to obtain a better understanding of the social influence and improve the performance of recommendation systems .",
    "moreover , the quantified social influence obtained in our model can support related applications such as group recommendation  @xcite and viral marketing  @xcite .",
    "* group recommendation*. to explore how to utilize social influence for group recommendation , we provides an in - depth study and comparison on group recommendation techniques .",
    "group recommendations have been designed for various domains such as web / news pages  @xcite , tourism  @xcite , music  @xcite , and tv programs and movies  @xcite . in summary ,",
    "two main approaches have been proposed for group recommendation  @xcite .",
    "the first one creates an aggregated profile for a group based on its group members and then makes recommendations based on the aggregated group profile  @xcite .",
    "the second approach _ aggregates _ the recommendation results from individual members into a single group recommendation list . in other words , recommendations ( i.e. , ranked item lists ) for individual members",
    "are created independently and then aggregated into a joint group recommendation list  @xcite , where the aggregation functions could be based on average or least misery strategies  @xcite .",
    "different from these proposed methods , our approach regenerates the process of how group members would _",
    "express _ their preferences and _ influence _ other members to reach the final decision .",
    "evaluation from real datasets demonstrates a significant improvement over the proposed method using social influence over the traditional methods .",
    "the recommendation techniques we proposed in this paper are inspired by the probabilistic generative model developed for collaborative filtering in @xcite .",
    "let @xmath3 and @xmath4 be the user set and item set , respectively .",
    "a latent topic set @xmath5 is assumed to capture latent user interests and item profiles . in the context of item recommendation ,",
    "an event of a user @xmath6 accessing an item @xmath7 is considered to be associated with one of the latent topic variables @xmath8 .",
    "conceptually , as shown in figure  [ fig : cf ] , user @xmath0 chooses a topic @xmath9 according to his interest distributions , and in turn the topic @xmath10 probabilistically `` generates '' an item @xmath1 according to the distribution of items associated with @xmath10 . under this model",
    ", users are assumed to be independent of items given the chosen topic .",
    "the joint probability distribution over user @xmath0 , topic @xmath10 and item @xmath1 can be written as @xmath11 an equivalent specification of the joint probability distribution that treats users and items symmetrically is @xmath12 since we are only interested in how likely a user @xmath0 chooses an item @xmath1 , the joint distribution over @xmath0 and item @xmath1 is @xmath13    this model has a set of parameters @xmath14 , @xmath15 and @xmath16 for all @xmath17 , which for simplicity is represented as @xmath18 . in  @xcite , the user - item concurrence history @xmath19 , which contains all the observed user - item , is used to learn the model parameters @xmath18 .",
    "one way to learn @xmath18 is to maximize the log - likelihood of history data which is : @xmath20 where each @xmath21 can be found using model parameters as in equation  ( [ eq : cf ] ) .",
    "after model parameters are inferred , items can be ranked for a given user according to @xmath22 , which refers to the probability that the user @xmath0 selects the item @xmath1 .",
    "@xmath22 can be computed as @xmath23 since most recommendation systems only focus on recommending _ new _ items ( items not presented in @xmath24 for a particular user @xmath0 ) , items with the higher @xmath22 and not accessed by @xmath0 are good recommendations .    the probabilistic generative model described above is based on the ideas of collaborative filtering .",
    "although @xcite has extended the model to integrate item contents as an additional component , social influence has not been considered yet . moreover , as to be shown later , incorporating social influence into the generative model is fundamentally more challenging than integrating item contents into the model because item contents are _ observable _ from the training data , while the social influence is a hidden factor not directly observable . in this paper , we demonstrate how to integrate social influence into this model and introduce our approach to infer model parameters .",
    "in this section , we introduce our approach to incorporate social influence in a new probabilistic generative model for item recommendation . while the ultimate goal of our study is to unify the ideas of social influence , collaborative filtering and content - based methods as a model for item recommendation . for simplicity , here we first discuss how to integrate collaborative filtering and social influence into a probabilistic generative model .",
    "we will introduce the complete model ( including collaborative filtering , item content and social influence ) later in section  [ sec : extend ] .        here",
    "we propose a new probabilistic generative model that describes the process of how a user selects an item by taking into account the user s own preferences and the social influence from her friends .",
    "let @xmath25 denote the friend list of a user @xmath0 .",
    "the social influence introduced in this model aims to capture the scenario that one of @xmath0 s friends ( @xmath26 ) has contributed his opinions in the item selection process . here ,",
    "for simplicity , we assume @xmath0 is a special friend of himself ( i.e. , @xmath27 ) .",
    "therefore , our model can be depicted as in figure  [ fig : cf - social ] .",
    "as shown , a user @xmath0 would first picks a friend ( including himself ) @xmath28 to make the item selection .",
    "if the picked friend @xmath2 happens to be himself @xmath29 , @xmath0 is not influenced by someone else in this selection .",
    "nevertheless , if the picked friend @xmath2 is not @xmath0 , @xmath0 is influenced by @xmath2 at this time and thus the selected item follows @xmath2 s interests rather than @xmath0 s own tastes . in this model",
    ", we define a parameter _ social influence distribution _ @xmath30 as the probability for @xmath0 to be influenced by a friend @xmath2 .",
    "after @xmath2 is chosen based on @xmath30 , @xmath2 randomly chooses a topic @xmath10 according to his interests , and then the topic generates an item @xmath1 according to the topic s item distribution .",
    "the joint probability distribution over users , friends , topics and items is as below .",
    "@xmath31 where @xmath6 , @xmath32 , @xmath28 and @xmath8 .",
    "the key observations from this model are 1 ) @xmath33 and @xmath1 are independently conditioned on @xmath2 , and 2 ) @xmath34 and @xmath1 are independently conditioned on @xmath10 . because we intend to model the item selection probability in terms of social influence and topics ( two latent parameters in our model ) , we transform equation  ( [ eq : joint ] ) into the following form : @xmath35 thus , the joint distribution over users and items is:@xmath36    different from the generative model in  @xcite ( see equation  ( [ eq : cf ] ) ) , the newly proposed model has two latent variables , namely the topic variable ( @xmath10 ) and the social influence variable ( @xmath2 ) .",
    "correspondingly , the model parameters @xmath18 now include @xmath37 .",
    "note that the size of parameters is increased by @xmath38 for social influence @xmath39 .",
    "notice that while the friend space could potentially be the entire user space , the averaged number of friends per user is limited .",
    "this is very important because it ensures that our latent variable space is small enough and not to over - complicate the model .",
    "moreover , the small latent parameter space yields high - quality parameter estimations even when the available history @xmath24 is not large .    in this study",
    ", we employ _ expected maximization ( em ) _ to learn model parameters from the user - item history @xmath24 .",
    "however , the conventional expected maximization ( em ) algorithm developed for single latent variable is not applicable for our model because we now have two latent variables , i.e. , social influence and topics . to address this challenging issue ,",
    "we have performed a detailed mathematical derivation to develop an new em algorithm in order to infer the model parameters .",
    "the derived em algorithm iterates over the following steps :    1 .",
    "e - step : computes posterior of the latent variables as @xmath40 using the model parameters of previous iteration .",
    "m - step : computes new model parameters by maximizing the expected log - likelihood .    in the e - step ,",
    "we only need to use the previous iteration s model parameters to find @xmath41 as : @xmath42 also note that we only need to compute the posteriors of those pairs presented in the history @xmath24 instead of all the possible user - item pairs , because the expectation to be maximized only weights on the observed user - item pairs .",
    "the m - step shall find new model parameters to maximize the expected log - likelihood found in the e - step . according to our derivation",
    ", the new model parameters should be updated as @xmath43    equation  ( [ eq : prmstep ] ) shows that for each parameter distributions , the new number should be chosen as normalized corresponding posterior sums .",
    "for example , @xmath44 is obtained by taking the sum of all the _ related _ latent variable posteriors for the @xmath2 and @xmath10 .",
    "then , because of @xmath45 , we need to normalize the posterior sums with regarding to different @xmath2 to update the correct model parameters of @xmath44 .    by repeating the e - step and m - step ,",
    "the em algorithm improves the model parameters iteratively until they converge to a local log - likelihood maximum .",
    "the learned model parameters are used for item recommendations by ranking items for a given user according to @xmath46 which can be calculated by equation  ( [ eqn : zifu ] ) .",
    "in this section , we discuss how to implement the em algorithm efficiently to learn the model parameters . here",
    "we first present our algorithm for single machine .",
    "a challenge encountered in our initial research effort is that the em algorithm , while fine tuned , is still slow due to excessive computation incurred in processing large - scale datasets . to overcome this challenge",
    ", we develop a parallel processing version of the em algorithm on the map - reduce framework . through this effort",
    ", we demonstrate that our design of the em algorithm can be elegantly decomposed for efficient parallel processing using map - reduce .",
    "we first show an implementation that efficiently realize our em algorithm on a single machine . for simplicity ,",
    "we only present one iteration of the e - step and the m - step , which aims is to approach the model parameters @xmath47 based on the current approximate value of parameters @xmath48 .",
    "normalize @xmath49[socialem : norm ]    algorithm  [ alg : socialem ] executes one em iteration to find the next model parameters @xmath47 .",
    "notice that we do not execute the e - step separately . because we only need to compute @xmath50 once for each user - item pair observed in @xmath24 , we embed the e - step computation in the m - step so",
    "the posteriors are computed only as needed .",
    "therefore , for each observed @xmath51 , the e - step is executed once in line [ socialem : estep ] , and the m - step is executed from line  [ socialem : mstep ] to accumulate latent variable posteriors into the corresponding posterior sums ( e.g. @xmath44 now takes the sum of all the posteriors with the same friend and topic ids ) .",
    "after all the observed user - item pairs are examined , m - step need to normalize posterior sums as next iteration s parameters in line [ socialem : norm ] .",
    "these accumulation and normalization steps realize the m - step in equation  ( [ eq : prmstep ] ) .",
    "the running time for this em algorithm is @xmath52 , where @xmath53 is the total number of observed user - item pairs , @xmath54 is the latent topic size and @xmath55 is the average number of friends per user .      in this section ,",
    "we show how we decompose the algorithm  [ alg : socialem ] for parallel processing .",
    "notice that there are three computation components in one em iterations : 1 ) e - step to compute posteriors @xmath56 ; 2 ) accumulate posteriors to posterior sums ; and 3 ) normalization step to obtain the model parameters for next iteration . among them ,",
    "step 1 and 3 could not be parallelized because step 1 requires the knowledge about all the related model parameters @xmath57 and step 3 requires the entire set of @xmath47 for parameter normalization . therefore ,",
    "based on the design principle of map - reduce algorithms , we execute step 3 of previous iteration along with step 1 . as such",
    ", the non - parallelizable components are combined to avoid overhead of another round of map - reduce to achieve the same task .",
    "normalize @xmath58[mapper : norm ] [ socialem : endmstep ]    the algorithms for mapper side and reducer side are shown in algorithm  [ alg : socialmapper ] and algorithm  [ alg : socialreducer ] , respectively . at its start , each mapper normalize posterior sums from previous results to construct model parameters @xmath48 ( see line  [ mapper : norm ] ) .",
    "then the user - item pairs are processed in parallel at different mappers ( line  [ mapper : mstep ] ) because each mapper now has the same global knowledge of @xmath48 . and the accumulation step is done in reducer to find posterior sums of for next iteration .",
    "since each mapper only processes a portion of the user - item history , one mapper does not have the entire knowledge of @xmath59 , and thus can not accumulate correct posterior sums ( e.g. @xmath44 ) . to address this problem , we move the accumulation step to reducers ( algorithm  [ alg : socialreducer ] ) .",
    "in particular , we park posteriors for a specific user , item or friend i d together and emit the packed value ( line  [ mapper : park]-[mapper : parkend ] ) . to ensure these posteriors are correctly accumulated in reducer , a standard shuffle - and - sort is performed to all the emitted key - value pairs . in this way , the map - reduce framework ensures that _ all the emitted values for the same key _ are grouped and processed together in the same reducer .",
    "thanks to the shuffle - and - sort step , the reducer algorithm ( algorithm  [ alg : socialreducer ] ) is very simple , which only takes a sum of all the grouped values and output the sums . let us take the @xmath44 computation as an example to understand how the reducer performs its task as desired .",
    "when a mapper run algorithm  [ alg : socialmapper ] , only a part of @xmath60 pairs are processed and the posteriors with respect to a particular @xmath2 are emitted to the mapper outputs .",
    "although emitted key - value pairs with the same key ( @xmath2 ) may come from different mappers , but they are grouped by key ( @xmath2 ) after keys are shuffled and sorted .",
    "because now all the values ( packed with posteriors ) for the same key @xmath2 are grouped , the reducer can simply sum the posteriors to find the correct posterior sums .",
    "similar steps can be done for all the other parameter computations , i.e. , ( @xmath61 and @xmath62 ) .",
    "a reducer does not need to differentiate key types , because the accumulation steps are the same for user / item / friend ids .",
    "recall that these reducer outputs are not the @xmath47 yet .",
    "what left is the normalization for each posterior sums to do in the next map - reduce iteration .",
    "the above map - reduce em algorithms addresses the scalability issue in learning model parameters .",
    "we find the map - reduce framework is quite suitable for expediting our em algorithm because the posterior computation and accumulation ( which incur significant cost ) can be done in parallel .",
    "as mentioned earlier , we aim to developed a new generative model to unify the ideas of social influence , collaborative filtering and content - based methods for item recommendation . in this section",
    ", we present the unified generative model developed for our ultimate goal .",
    "the unified generative model depicting a more general process of item selection is shown in figure  [ fig : cf - social - content ] . as shown , the early steps of the process is similar to the model introduced earlier ( see figure  [ fig : cf - social ] ) .",
    "however , the selected topic now generates an item @xmath1 and a content description @xmath63 .",
    "therefore , a topic in this new model is not only associated with a distribution of items but also a distribution of item content ( e.g. , tag words ) .",
    "notice that here we assume items and contents are independently conditioned on the topics .",
    "as such , the similarity of item contents is taken into account in the recommendation process . as a result ,",
    "the joint probability distribution over all factors is : @xmath64 where @xmath65 and @xmath66 is the space of possible item contents .",
    "for example , @xmath63 could be a word of the content vocabulary or a tag of the tag space .",
    "similar to equation  ( [ eqn : zifu ] ) , the joint probability distribution can be rewritten as : @xmath67    now the remaining issue is to learn the set of all the model parameters @xmath18 .",
    "different from what we discussed earlier in section  [ sec : social ] , the dataset used for learning now consists of three elements , including users , items and tags , i.e. , @xmath68 , where @xmath6 , @xmath7 , and @xmath69 ( i.e. , @xmath70 denotes the tag / word set associated with item @xmath1 ) . note that an item may contain multiple tags / words . for a history record of a user @xmath0 selecting an item @xmath1 where @xmath71",
    ", we have @xmath72 , @xmath73 .",
    "notice that @xmath18 now includes an extra parameter @xmath74 in addition to the other model parameters discussed earlier in our preliminary generative model ( see section  [ sec : social ] ) .",
    "the approach of learning model parameters is still to maximize the log - likelihood of @xmath75 .",
    "however , the details are different .    in e - step , instead of computing the expectation of the log - likelihood for individual latent variables ( e.g. , @xmath10 or @xmath2 individually ) , we propose to compute the expectation of the log - likelihood for the joint latent latent variables ( i.e. , @xmath10 and @xmath2 together ) .",
    "more specifically , we calculate @xmath76    in m - step , model parameters are computed to maximize the expected log - likelihood found on the e - step as below .",
    "@xmath77[eq : pr - mstep ] the parameters maximization method is similar to equation  ( [ eq : prmstep ] ) .",
    "note that the summed latent variable posterior is different and that we have an additional set of parameters in @xmath78 .",
    "after the model is learned , items can be ranked for a given user based on @xmath22 , which can be approximated by equation  ( [ eq : cf_rec ] ) , in which @xmath79 note that we are only interested in the tags / words associated with the given item when we calculate the user - item joint probability .",
    "item @xmath1 with high @xmath22 that user @xmath0 has not yet accessed is a good candidate for recommendation .",
    "given a group of people @xmath80 , group recommendation aims to find items that are welcomed by the whole group instead of individual group members .",
    "this recommendation service has a very large application base , e.g. , coordinating a group of people to find quality activities / venues / restaurants / movies , etc .",
    "although the generative models we proposed earlier are targeting on item recommendation for an individual user , the social influence parameter learned in our models is very useful for group recommendation . in this section ,",
    "we first introduce the state - of - the - art approaches for group recommendation , namely _ aggregation - based group recommendation _ and then discuss how to apply the quantified social influence obtained from our models to develop a new algorithm , called _ social influence based group recommendation _",
    ", for group recommendation .      for group recommendation ,",
    "one popular approach is the _ ranking aggregation _ method which finds a `` consensus '' ranking / score for each item for the whole group . given individual ranking / score for each member , some aggregation methods are employed to obtain a group ranking / score from individual ranking / scores . in this paper , we review two popular aggregation strategies : _ average _ and _ least misery _",
    "recent proposed in  @xcite .",
    "* average * - with the average aggregation strategy , an item @xmath1 s group score is defined as an _ average _ of the scores from individual group members . by using the item access probability estimation @xmath22 as the score",
    ", the group score for an item @xmath1 to group @xmath80 is calculated as @xmath81 accordingly , the recommendation ranking can be computed by sorting the group scores in descending order .",
    "* least misery * - with the least misery aggregation strategy , the group score for item @xmath1 to a group @xmath80 is equal to the _ smallest _ predicted rating for item @xmath1 in the group , specifically @xmath82 following this strategy , whether an item is acceptable to the group depends on the least satisfied member .",
    "basically , the item least disliked by each individual member shall has the highest group score for recommendation .",
    "these two aggregation - based group recommendation approaches captures a group consensus of item ranking by considering all the decisions made by users to be independent and equally important .",
    "however , in a group activity , people interact with each other and thus influence each other",
    ". we aim to address this observation in our social influence based group recommendation algorithm .",
    "note that we restrict the recommendation to a group where every group member has at least one friend in the group .",
    "within such a group , friends may influence each other so there may exist a group consensus . while our generative models aim to capture the process where a given user @xmath0 ( influenced by a friend @xmath2 ) selects an item @xmath1 , we can also see the process as a group activity , i.e. , @xmath0 is influenced by @xmath2 to jointly select item @xmath1 .",
    "intuitively , our models can be used directly to support group recommendation for `` two - member '' groups .",
    "let @xmath83 denote a  two - member \" group . to select an item for the group ,",
    "user @xmath84 could influence user @xmath85 and vice versa .",
    "therefore , we define the score for recommending an item @xmath1 to the group @xmath86 as @xmath87 where @xmath88 can be easily obtained from the model parameters of our generative models .        the ideas described above can be generalized for groups with more than two members .",
    "a group of more than two members can be decomposed into a set of two - member groups based on the friendship of members ( see the example in figure  [ fig : group ] for illustration ) . to make a group recommendation , we assume the social influence only takes action between friends .",
    "intuitively , if most pairs of friends in the group prefer a particular item , it would be a good candidate for recommendation to the group .",
    "let @xmath80 denote a group with arbitrary cardinality .",
    "the score for recommending an item @xmath1 to @xmath80 is defined as the sum of @xmath89 score over all possible friend pairs in the group .",
    "formally ,    @xmath90    the ranking of items for group recommendation is based on the sorted group scores of items as defined above .",
    "thus , the decision of selecting an item for the group naturally incorporates the social influence among members of the group .",
    "we find superior performance of our social - influence strategy over the two aggregation strategies ( to be shown in our evaluation ) .",
    "in this section , we validate our proposed probabilistic generative models using two real datasets , one from _ last.fm _ and the other from _ whrrl.com_. we develop web crawlers to collect theses two datasets , which include user - item accessing history , users friendship network and tags associated with each item .",
    "besides , we collect group check - in history data from whrrl.com to validate our group recommendation approach . in our evaluation",
    ", we adopt the user - based collaborative filtering approach ( denoted as cf ) as a baseline and propose to study the effectiveness of different factors ( i.e. , social influence , collaborative filtering and item content ) included in our unified generative model .",
    "the different configurations of factors included on our evaluation are : 1 ) cf factor ( cf - pgm ) ( see figure  [ fig : cf ] ) , 2 ) combination of cf and social influence factors ( cf+si - pgm ) ( see figure  [ fig : cf - social ] ) , 3 ) combination of cf and item content factors ( cf+ic - pgm ) ( this has been discussed in @xcite ) , and 4 ) combination of cf , social influence and item content factors ( cf+si+ic - pgm ) ( i.e. , our unified model ; see figure  [ fig : cf - social - content ] ) . in this evaluation , we conduct a comprehensive set of experiments for item recommendation ( to a single user ) and group recommendation .      here",
    "we first provide information about the datasets , i.e. , _",
    "last.fm _ and _ whrrl.com_ , used in our experiments .",
    "last.fm is an on - line music radio web service and whrrl.com is a location - based social network web service .",
    "the last.fm dataset contains music access history of @xmath91 users over @xmath92 unique songs ; while whrrl.com dataset includes the check - in history of @xmath93 users to @xmath94 unique places .",
    "it is worth noting that the whrrl.com dataset includes 17,587 _ group _ check - in records which are very valuable for evaluating the group recommendation approaches .",
    "additionally , both datasets have their user social networks available . the basic statistics of these two datasets are summarized in table  [ tbl : datasets ] . cumulative distributions with respect to the number of items accessed by users ( user items ) , the number of friends of users ( user friends ) , and the number of tags associated with items ( item tags ) are shown in figure  [ fig : lastfm ] and figure  [ fig : whrrl ] for last.fm and whrrl.com , respectively .",
    ".datasets statistics [ cols=\">,^,^\",options=\"header \" , ]      after the datasets are prepared , we are able to apply em algorithms to infer model parameters . however , for all em methods , model parameters need to be initialized and the iteration termination condition needs to be specified . after experimenting with different model parameter initialization methods , we decided to use latent dirichlet allocation ( lda )  @xcite to initialize the model parameters .",
    "although lda has been mainly used for clustering documents , it has similar parameters as the cf - pgm in figure  [ fig : cf ] . to obtain initial parameters from lda",
    ", we treat each user as a `` document '' in the lda model and transform items accessed by the user as `` words '' in the document .",
    "after the lda model converges , we discard the document clustering but keep @xmath15 and @xmath95 as the model initialization values for em algorithms . for the social influence parameters @xmath39 required in cf+si - pgm , we use the normalized jaccard similarity as the initial values ( i.e. , @xmath96 , where @xmath97 and @xmath98 denote the accessed items for @xmath0 and @xmath2 , respectively ) .",
    "this initialization ensures friends having more commonly accessed items to have a higher social influence initially .",
    "note that in our models , @xmath0 is treated as a special friend of himself .",
    "since @xmath99 , a user s self influence is always larger than any social influence from his friends at the beginning . to terminate the em algorithms , we use log - likelihood as model converge indicators and terminate the em algorithms when an additional em iteration can not improve the training data s log - likelihood by @xmath100 or when the maximum iteration threshold ( empirically set with 50 ) is reached .",
    "we implement both the single machine em - algorithm and its map - reduce version and confirm that both implementations produce the same results with small datasets . for those more complicated models ( i.e. , cf+si - pgm and + cf+si+ic - pgm ) , we apply our map - reduce implementation on a cluster of 10 machines to infer the model parameters .",
    "we use item recommendation as the primary test case to evaluate the performance of the probabilistic generative models under evaluation .",
    "we apply cross - validation method to find item recommendation s precisions and recalls . for both datasets , we mark off @xmath101 item",
    "assess history of each user for testing .",
    "in other words , the rest @xmath102 user - item pairs are used as training data to infer model parameters .",
    "then after each model is learned , we use the model parameters to find @xmath103 for all users .",
    "the items _ not in presence _ in the training dataset are ranked based on their @xmath104 . in this way",
    ", we prevent our recommendation system from `` repeating '' a user s item access history",
    ". therefore , all the recommendations for a user must be `` fresh '' items that have not been accessed by him in the training dataset .",
    "the precisions and recalls for top @xmath105 recommendations are used as the evaluation metrics , where @xmath106 ( 5 is the default value ) .",
    "precision is calculated as the ratio of the number of recommendation hits to the recommendation size ; and recall is calculated as the ratio of the number of recommendation hits to the size of user s validation item set",
    ". then the average precisions and recalls of different users serve as the evaluation metrics .    in figure",
    "[ fig : lastfm_topic ]  and figure  [ fig : whrrl_topic ] , the precision and recall of top 5 item recommendations for last.fm and whrrl.com under different latent topic sizes are presented .",
    "we find social influence indeed improves the recommendation performance , for both cf+si - pgm against cf - pgm and cf+si+ic - pgm against cf+ic - pgm .",
    "the result shows that the best recommendation performance is reached when the topic size is chosen around @xmath107 .",
    "therefore , we set the default value of the latent topic size to 60 for the remaining part of performance evaluation .     & cf - pgm & 0.0399 & 0.0372 & 0.0342 & 0.0296 + & cf+si - pgm & 0.0427 & 0.0429 & 0.0383 & 0.0315 + & cf+ic - pgm & 0.0470 & 0.0542 & 0.0494 & 0.0388 + & cf+si+ic - pgm & 0.0492 & 0.0566 & 0.0506 & 0.0398 + & cf & 0.0046 & 0.0066 & 0.0080 & 0.0085 + & cf - pgm & 0.0048 & 0.0085 & 0.0157 & 0.0329 + & cf+si - pgm & 0.0050 & 0.0100 & 0.0187 & 0.0363 + & cf+ic - pgm & 0.0054 & 0.0102 & 0.0198 & 0.0385 + & cf+si+ic - pgm & 0.0057 & 0.0117 & 0.0213 & 0.0411 + & cf & 0.0010 & 0.0024 & 0.0050 & 0.0122 +     & cf - pgm & 0.0048 & 0.0038 & 0.0035 & 0.0028 + & cf+si - pgm & 0.0053 & 0.0041 & 0.0036 & 0.0028 + & cf+ic - pgm & 0.0059 & 0.0048 & 0.0040 & 0.0029 + & cf+si+ic - pgm & 0.0062 & 0.0049 & 0.0041 & 0.0030 + & cf & 0.0015 & 0.0016 & 0.0015 & 0.0011 + & cf - pgm & 0.0062 & 0.0090 & 0.0141 & 0.0251 + & cf+si - pgm & 0.0069 & 0.0100 & 0.0146 & 0.0254 + & cf+ic - pgm & 0.0076 & 0.0119 & 0.0157 & 0.0252 + & cf+si+ic - pgm & 0.0081 & 0.0115 & 0.0154 & 0.0275 + & cf & 0.0020 & 0.0033 & 0.0051 & 0.0071 +    in table  [ tbl : lastfm_topn ]  and table  [ tbl : whrrl_topn ] , we compare the item recommendation performance of different algorithms .",
    "as shown in these two tables , all the probabilistic generative model approaches clearly outperform the conventional user - based collaborative filtering ( cf ) .",
    "again , we find social influence factor indeed improves the recommendation performance , ( for both cf+si - pgm against cf - pgm and cf+si+ic - pgm against cf+ic - pgm ) .",
    "most importantly , the unified model we propose in this paper ( which integrates collaborative filtering , social influence and item content ) shows the best performance .    by comparing results from whrrl.com and last.fm datasets",
    ", we find that social influence is more important ( in terms of item recommendation ) in whrrl.com than last.fm .",
    "one possible reason is that in our collected datasets , users in whrrl.com are more _ social _ than users in last.fm , i.e. , the average number of friends in whrrl.com is @xmath108 compared to last.fms @xmath109 .",
    "we also observe this phenomenon from the statistics shown in figure  [ fig : lastfm](b ) and figure  [ fig : whrrl](b ) .",
    "in other words , it is more likely for users in whrrl.com to be influenced by their on - line friends than users in last.fm .",
    "consequently , the recommendation performance benefit from social influence in last.fm is less significant than that in whrrl.com .      in this section",
    ", we aim to study the social influence between friends , where the social influence is learned through our proposed models .",
    "for simplicity , we focus on cf+si - pgm .",
    "instead of investigating how social influence improves the recommendation performance , here we are interested in how significant a particular user influence his friends . as different people have different personalities , we plot the distributions of social influence probabilities among friend pairs ( that we learned through cf+si - pgm ) in figure  [ fig : last_fm_influence ] and figure  [ fig : whrrl_influence ] .",
    "note that we also consider the circumstance of self - influence and use @xmath110 to denote the probability .",
    "figure  [ fig : last_fm_influence ] shows the learned social influence presented in last.fm",
    ". in general , people s self - influence ( @xmath110 ) in this dataset is significantly higher than the influence from their friends ( @xmath111 ) when choosing a music piece .",
    "figure  [ fig : last_fm_self_influence ] shows that more than @xmath112 users self - influences are higher than @xmath113 . also , since each user may have several friends , each friend s social influence is thus quite small , e.g. , @xmath112 friends influence is smaller than @xmath114 .",
    "this observation indicates that most music pieces consumed by the users in last.fm are selected in accordance with users own preferences and tastes .",
    "figure  [ fig : whrrl_influence ] demonstrates very different findings . as shown in figure  [ fig : whrrl_self_influence ] , the self - influence is still quite significant but much smaller than that in last.fm , i.e. , @xmath115 users self - influence is lower than @xmath116 .",
    "the implication from this finding is that while people visit places mainly based on their own preferences , they would sometimes take friends suggestions to visit places . while users in whrrl.com have more friends than users in last.fm , ( i.e. , average @xmath108 friends compared to @xmath109 ) , we find a lot of friends are not influential and that usually a small portion of friends takes the most part of social influence . in general , people s social influence in place check - in activities are much more significant than music consumption  one explanation is that check - ins are inherently social activities and music consumption are usually for self - entertainment .      finally , we report our findings on evaluation of group recommendation algorithms , including the social - influence based ( sig ) algorithm introduced in section  [ sec : group ] along with two aggregation - based group recommendation strategies .",
    "to compare their performance , we use the @xmath117 group check - in records in whrrl.com . in our experiment",
    ", we consider a group check - in record ( i.e. , the ground truth ) at a time and take the average of tested records .",
    "notice that a record indicates a group of people visits a place .",
    "an effective group recommendation algorithm should have this place ranked high among all the places returned .",
    "therefore , we propose a metric called _ relative ranking _ to evaluate the performance of these group recommendation algorithms .",
    "suppose that a given group recommendation algorithm returns a ranked list of @xmath118 items ( i.e. , places in this experiment ) .",
    "if the actual visited place is ranked in the @xmath119-th position of the returned list , the relative ranking is calculated as @xmath120 .",
    "for example , if an actual visited place is ranked 10th among a total of 100 items returned by a group recommendation algorithm , the relative ranking is @xmath121 ) .    in figure  [ fig : whrrl_group_result ] , we compare the performance of our sig group recommendation method with the other two aggregation - based strategies , i.e. , average and least misery .",
    "the values in y - axis represent the relative rankings of actual visited places ( the lower the better ) . in figure",
    "[ fig : whrrl_group_size ] , we find that sig outperforms the average and least misery strategies for most of the varied group sizes .",
    "however , the larger the group is , the smaller improvement is reached from sig .",
    "this finding implies that for smaller groups , the social influence among group members plays a major role in item selection for the group .",
    "however , for larger groups , the group consensus aggregated from individual preferences may dominate the group decision .",
    "this finding is consistent with our common experience that in activity planning for a smaller group , one or two influencing members may significantly determine the activity venue . on the other hand , for a large group , the social influence from individuals may be difficult to take effect on the entire group . as a result , the group s common interest dominates .",
    "next , we evaluate the three group recommendation strategies by varying topic size .",
    "the result shown in figure  [ fig : whrrl_group_topic ] indicates that sig always outperforms the other two and reach its optimal point when the topic size is configured to around @xmath107 .",
    "this research attempts to explore social influence for item recommendation .",
    "we propose a probabilistic generative model , called _ unified model _ , which naturally unifies the ideas of social influences , collaborative filtering and content - based methods in the recommendation process . to address the issue of hidden social influence in the available datasets ,",
    "we devise new algorithms to learning the model parameters based on the idea of expectation maximization ( em ) .",
    "moreover , we provide a map - reduce implementation , in addition to a single - machine version , of our em algorithm to process large - scale datasets . furthermore , by exploring the social influence quantitatively captured in our models , we develop a social influence based group recommendation algorithm to demonstrate the strength of our proposed models on group recommendation . finally , we conduct a comprehensive experimental study to evaluate the performance of our proposal for item recommendation to individual users and to groups .",
    "experimental results show that the unified probabilistic generative model proposed in this paper accommodates different factors very well to achieve a superior recommendation performance over other alternatives .",
    "our experimental results also facilitate a better understanding of the social influence between friends in social networks .",
    "it is interesting to note that users in whrrl.com are more likely to be influenced by friends than those in last.fm .",
    "finally , our experimental result also confirms that our social influence based algorithm outperforms the state - of - the - art algorithms for group recommendation .",
    "the authors thank mu qiao for insightful discussions .    10    g.  adomavicius and a.  tuzhilin . .",
    ", 17(6):734749 , 2005 .",
    "l.  baltrunas , t.  makcinskas , and f.  ricci .",
    "group recommendations with rank aggregation and collaborative filtering . in _ recsys _ , pages 119126 , 2010 .",
    "j.  basilico and t.  hofmann .",
    "unifying collaborative and content - based filtering . in _ icml _",
    ", page  9 , 2004 .    c.  basu , h.  hirsh , and w.  w. cohen .",
    "recommendation as classification : using social and content - based information in recommendation . in _",
    "aaai / iaai _ , pages 714720 , 1998 .",
    "s.  berkovsky and j.  freyne .",
    "group - based recipe recommendations : analysis of data aggregation strategies . in _ recsys _ , pages 111118 , 2010 .",
    "d.  m. blei , a.  y. ng , and m.  i. jordan .",
    "latent dirichlet allocation .",
    ", 3:9931022 , 2003 .",
    "j.  s. breese , d.  heckerman , and c.  m. kadie .",
    "empirical analysis of predictive algorithms for collaborative filtering . in _ uai _ , pages 4352 , 1998 .",
    "w.  chen , c.  wang , and y.  wang .",
    "scalable influence maximization for prevalent viral marketing in large - scale social networks . in _",
    "kdd _ , pages 10291038 , 2010 .",
    "a.  crossen , j.  budzik , and k.  j. hammond .",
    "flytrap : intelligent group music recommendation . in _ iui _ , pages 184185 , 2002 .",
    "j.  dean and s.  ghemawat .",
    "mapreduce : simplified data processing on large clusters .",
    ", 51:107113 , january 2008 .",
    "d.  goldberg , d.  nichols , b.  m. oki , and d.  terry . using collaborative filtering to weave an information tapestry . , 35:6170 , december 1992 .",
    "a.  goyal , f.  bonchi , and l.  v.  s. lakshmanan .",
    "learning influence probabilities in social networks . in _ wsdm _ , pages 241250 , 2010 .",
    "j.  l. herlocker , j.  a. konstan , a.  borchers , and j.  riedl .",
    "an algorithmic framework for performing collaborative filtering . in _ sigir _ , pages 230237 , 1999 .    t.  hofmann and j.  puzicha .",
    "latent class models for collaborative filtering . in _ ijcai _ , pages 688693 , 1999 .",
    "m.  jamali and m.  ester . : a random walk model for combining trust - based and item - based recommendation . in _",
    "pages 397406 , 2009 .",
    "a.  jameson and b.  smyth .",
    "the adaptive web .",
    "chapter recommendation to groups , pages 596627 .",
    "springer - verlag , berlin , heidelberg , 2007 .",
    "b.  m. kim , q.  li , c.  s. park , s.  g. kim , and j.  y. kim . a new approach for combining content - based and collaborative filters .",
    ", 27(1):7991 , 2006 .",
    "i.  konstas , v.  stathopoulos , and j.  m. jose .",
    "on social networks and collaborative recommendation . in _ sigir _ , pages 195202 , 2009 .",
    "h.  ma , i.  king , and m.  r. lyu .",
    "learning to recommend with social trust ensemble . in _ sigir _ , pages 203210 , 2009 .",
    "h.  ma , m.  r. lyu , and i.  king . learning to recommend with trust and distrust relationships . in _",
    "recsys _ , pages 189196 , 2009 .",
    "h.  ma , d.  zhou , c.  liu , m.  r. lyu , and i.  king . .",
    "in _ wsdm _ , 2011 .",
    "j.  masthoff .",
    "group modeling : selecting a sequence of television items to suit a group of viewers .",
    ", 14:3785 , february 2004 .",
    "j.  f. mccarthy and t.  d. anagnost .",
    "musicfx : an arbiter of group preferences for computer supported collaborative workouts . in _ cscw _ , pages 363372 , 1998 .",
    "k.  mccarthy , m.  salam , l.  coyle , l.  mcginty , b.  smyth , and p.  nixon .",
    "cats : a synchronous approach to collaborative group recommendation . in _ flairs conference _ , pages 8691 , 2006 .",
    "r.  j. mooney and l.  roy .",
    "content - based book recommending using learning for text categorization . in _ dl _ ,",
    "pages 195204 , 2000 .",
    "m.  oconnor , d.  cosley , j.  a. konstan , and j.  riedl .",
    "polylens : a recommender system for groups of users . in _ cscw _ , pages 199218 , 2001 .",
    "s.  pizzutilo , b.  de  carolis , g.  cozzolongo , and f.  ambruoso .",
    "group modeling in a public space : methods , techniques , experiences . in _ proceedings of the 5th wseas international conference on applied informatics and communications _ ,",
    "pages 175180 , 2005 .",
    "a.  popescul , l.  h. ungar , d.  m. pennock , and s.  lawrence .",
    "probabilistic models for unified collaborative and content - based recommendation in sparse - data environments . in _ uai _ , pages 437444 , 2001 .",
    "m.  richardson and p.  domingos . mining knowledge - sharing sites for viral marketing . in _",
    "kdd _ , pages 6170 , 2002 .",
    "b.  m. sarwar , g.  karypis , j.  a. konstan , and j.  riedl .",
    "item - based collaborative filtering recommendation algorithms . in _",
    "www _ , pages 285295 , 2001 .",
    "h.  tong , c.  faloutsos , and j .- y .",
    "in _ icdm _ , pages 613622 , 2006 .",
    "j.  wang , a.  p. de  vries , and m.  j.  t. reinders . unifying user - based and item - based collaborative filtering approaches by similarity fusion . in _",
    ", pages 501508 , 2006 .",
    "m.  ye , p.  yin , and w .- c .",
    "in _ gis _ , pages 458461 , 2010 .    m.  ye , p.",
    "yin , w .- c .",
    "lee , and d.  l. lee . .",
    "in _ sigir _ , 2011 .",
    "z.  yu , x.  zhou , y.  hao , and j.  gu .",
    "tv program recommendation for multiple viewers based on user profile merging .",
    ", 16:6382 , march 2006 .",
    "v.  w. zheng , y.  zheng , x.  xie , and q.  yang .",
    "collaborative location and activity recommendations with gps history data . in _ www _ , pages 10291038 , 2010 .",
    "the em algorithm is a way to find model parameters to achieve local maximum of log - likelihood function ( i.e. equation  ( [ eq : loglikelihood - cf ] ) ) .",
    "since direct maximizing @xmath75 is difficult , em algorithm applies an iterative method to improve model parameters step by step .",
    "starting from the log - likelihood @xmath75 , we have : @xmath122 therefore , instead of maximizing @xmath75 , the em algorithm tries to find model parameters @xmath47 to maximize @xmath123 .",
    "therefore , we can drop constant terms w.r.t . @xmath18 as @xmath124 therefore , the em algorithm consists iterating :      the e - step needs to find the posterior probabilities in equation  ( [ eq : em_expect ] ) , which is computing @xmath125 .",
    "because these probabilities assume model parameters are known as @xmath48 , we have : @xmath126 where the right hand side of equation  ( [ eq : estep ] ) only consists of the parameters in @xmath48 .        in equation  [ eq : separated ] ,",
    "each model parameters are separated into different inner products .",
    "for example , terms related to @xmath14 is the inner product of @xmath130 with corresponding posterior sums . recall",
    "that we always have the probability constrain that @xmath131 , to maximize the inner product , @xmath132 should be chosen so that the @xmath14 vector is at the same `` direction '' as the summed posteriors . in other words , @xmath132 should be proportional to the corresponding summed @xmath41 . doing the similar maximization to all the model parameters , we can find the @xmath133 as :"
  ],
  "abstract_text": [
    "<S> in this paper , we propose a probabilistic generative model , called _ unified model _ , which naturally unifies the ideas of social influence , collaborative filtering and content - based methods for item recommendation . to address the issue of hidden social influence , </S>",
    "<S> we devise new algorithms to learn the model parameters of our proposal based on expectation maximization ( em ) . in addition to a single - machine version of our em algorithm </S>",
    "<S> , we further devise a parallelized implementation on the map - reduce framework to process two large - scale datasets we collect . </S>",
    "<S> moreover , we show that the social influence obtained from our generative models can be used for group recommendation . finally , we conduct comprehensive experiments using the datasets crawled from last.fm and whrrl.com to validate our ideas . </S>",
    "<S> experimental results show that the generative models with social influence significantly outperform those without incorporating social influence . </S>",
    "<S> the unified generative model proposed in this paper obtains the best performance . </S>",
    "<S> moreover , our study on social influence finds that users in whrrl.com are more likely to get influenced by friends than those in last.fm . </S>",
    "<S> the experimental results also confirm that our social influence based group recommendation algorithm outperforms the state - of - the - art algorithms for group recommendation . </S>"
  ]
}
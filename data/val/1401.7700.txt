{
  "article_text": [
    "in the assignment problem , agents express linear preferences over objects and an object is assigned to each agent keeping in view the agents preferences .",
    "the problem models one of the most fundamental setting in computer science and economics with numerous applications  @xcite .",
    "depending on the application setting , the objects could be car - park spaces , dormitory rooms , replacement kidneys , school seats , etc .",
    "the assignment problem is also referred to as _ house allocation _",
    "if the outcome of the assignment problem is _ deterministic _ then it can be inherently unfair .",
    "take the example of two agents having identical preferences over two objects .",
    "then any reasonable notion of fairness demands that both agents have equal right to each of the two objects .",
    "since randomization is one of the oldest tools to achieve fairness , we consider the _ random assignment problem _",
    "@xcite in which objects are allocated randomly to agents according to their preferences .",
    "the outcome is a random assignment which specifies the probability of each object being allocated to each of the agents .",
    "in contrast to some of the earlier work on random assignment , we focus on the random assignment problem in which there can be more objects than the number of agents  @xcite .",
    "when agents express ordinal preferences over objects but the outcomes are fractional or randomized allocations , then there is a need to use _ lottery extensions _ to extend preferences over objects to preferences over random allocations . in random settings ,",
    "the most established preference relation between random allocations is _ stochastic dominance ( @xmath0)_. @xmath0 requires that one random allocation is preferred to another one if and only if the former first - order stochastically dominates the latter .",
    "this relation is especially important because one random allocation stochastically dominates another one if and only if the former yields at least as much expected utility as the latter for any von - neumann - morgenstern ( vnm ) utility representation consistent with the ordinal preferences  @xcite .",
    "the @xmath0 relation can be used to define corresponding notions of envy - free , efficiency , and strategyproofness  @xcite . in this paper",
    ", we check which levels of fairness , efficiency , and strategyproofness can be satisfied simultaneously .    for the random assignment problem without multi - unit demands , the most common and well - known way to assign objects is _ random priority ( @xmath3 ) _ in which a permutation of agents is chosen uniformly at random and agents successively take their most preferred available object  @xcite . although @xmath3 is strategyproof and results in a pareto optimal assignment , @xcite in a remarkable paper showed that @xmath3 does not satisfy the stronger efficiency notion of stochastic dominance ( @xmath0 ) efficiency and also a fairness concept called @xmath0-envy - freeness .",
    "is that the resultant fractional allocation is # p - complete to compute  @xcite . ]",
    "furthermore , they presented an elegant algorithm called _",
    "@xmath1 ( probabilistic serial ) _ that is not only @xmath0-efficient and @xmath0-envy - free but also satisfies weak @xmath0-strategyproofness . in @xmath1 , agents ` eat ' the most favoured available object at the same rate until all the objects are consumed .",
    "the fraction of object consumed by an agent is the probability of the agent getting that object .    since its inception  @xcite",
    ", @xmath1 has received considerable attention and has been extended in a number of ways  @xcite . in particular",
    ", it can be naturally extended to the more general case with multi - unit demands in which there are @xmath4 objects and @xmath5 objects are allocated to each of the agents  @xcite .",
    "the extension does not require any modification to the specification of @xmath1 : agents continue eating their most preferred available object until all the objects have been consumed .",
    "although this _ one - at - a - time _ extension ( which we will refer to as @xmath6 ) still satisfies @xmath0-efficiency and @xmath0-envy - freeness , it is not weak @xmath0-strategyproof  @xcite .",
    "incidentally there is another extension of @xmath1 called the _ multi - unit - eating probabilistic serial _ that was briefly described by @xcite but has received no attention in the literature . in multi - unit - eating @xmath1 , each agent tries to eat his @xmath7 most preferred objects that are still available at a uniform speed until all objects have been consumed .",
    "we show that multi - unit - eating @xmath1 satisfies desirable properties : it is weak @xmath0-strategyproof , @xmath0-envy - free , and unanimous .",
    "we point out that the problem of discrete assignment with multi - unit demands has attracted considerable attention  @xcite . in this paper",
    ", we focus on _ random _ assignments with multi - unit demands .",
    "multi - unit demand is a natural requirement in settings such as course allocation  @xcite .",
    "moreover , we will require that each agents gets equal number of objects  @xcite .",
    "this is a natural requirement in settings such as paper assignment to referees .",
    "apart from @xmath3 and @xmath1 , two other natural assignment rules are _ uniform _ and _ priority_. in the uniform rule , each agent gets @xmath8 of each object  @xcite . in the priority mechanism",
    ", there is a permutation of agents , and each agent in the permutation is assigned the @xmath7 most preferred available objects .",
    "the priority mechanism is also referred to as _ serial dictator _ in the literature  @xcite . whereas uniform does not take into account the preferences of agents and is highly inefficient , priority is highly unfair to the agents at the end of the permutation . in more recent work ,",
    "@xcite proposed two mechanisms for the random assignment problem that also handle limited complementarities .",
    "@xcite presented a generalization of rp for more general settings .",
    "[ [ contributions ] ] contributions + + + + + + + + + + + + +    we first prove that for multi - unit demands , there exists no anonymous , neutral , weak @xmath0-strategyproof and @xmath0-efficient random assignment rule .",
    "the statement is somewhat surprising considering that all the four axioms used in the statement are minimal requirements .",
    "incidentally , we have not used @xmath0 envy - freeness that is often used to obtain characterizations or impossibility statements in the literature  @xcite and is a very demanding requirement . the result",
    "is then extended to random assignment _ without _ multi - unit demands if requiring weak @xmath0 group - strategyproofness instead of weak @xmath0 strategyproofness .",
    "our second result carries over to the setting randomized voting in which agents express weak orders over alternatives and the outcome is a lottery over the alternatives .",
    "we then conduct an axiomatic analysis of the ps . .",
    "it is first highlighted that the definition of ps . in the literature",
    "is not entirely correct . a proper definition of ps .",
    "is formulated .",
    "we show that for multi - unit demands , in contrast to @xmath6 , ps .",
    "satisfies weak @xmath0-strategyproofness .",
    "we prove that ps .",
    "satisfies @xmath0 envy - freeness which is one of the strongest notions of fairness . on the other hand , ps .",
    "does not fare well in terms of efficiency .",
    "we prove that ps . does not even satisfy ex post efficiency although it does satisfy unanimity .",
    "therefore when we generalize @xmath1 for multi - unit demands , @xmath6 is the right extension if the focus is on efficiency . on the other hand ps .",
    "is the right extension , if the aim is to maintain weak @xmath0-strategyproofness .",
    "the arguments for weak @xmath0-strategyproofness and @xmath0 envy - freeness of @xmath9 ps . also simplify the proofs for @xmath1 for single - unit demands in @xcite .",
    "the study helps clarify the relative merits of different assignment rules for multi - unit demands .",
    "the relative merits of prominent random assignment rules are then summarized in table  [ table : summarymulti ] in the final section .",
    "[ [ random - assignment - problem ] ] random assignment problem + + + + + + + + + + + + + + + + + + + + + + + + +    the model we consider is the random assignment problem which is a triple @xmath10 where @xmath11 is the set of @xmath12 agents @xmath13 , @xmath14 is the set of objects , and @xmath15 specifies strict , complete , and transitive preferences @xmath16 of agent @xmath17 over @xmath18 .",
    "we will assume that @xmath19 is a multiple of @xmath12 i.e. , @xmath20 where @xmath7 is an integer .",
    "we will denote by @xmath21 as the set of all complete and transitive relations over the set of objects @xmath18 .",
    "a random assignment @xmath22 is a @xmath23 matrix @xmath24_{1\\leq i\\leq n , 1\\leq j\\leq m}$ ] such that for all @xmath25 , and @xmath26 , @xmath27 $ ] ; @xmath28 for all @xmath29 ; and @xmath30 for all @xmath25 .",
    "the value @xmath31 represents the probability of object @xmath32 being allocated to agent @xmath17 .",
    "each row @xmath33 represents the allocation of agent @xmath17 .",
    "the set of columns correspond to probability vectors of the objects @xmath34 .",
    "a feasible random assignment is discrete if @xmath35 for all @xmath25 and @xmath36 .",
    "a _ random assignment rule _ specifies for each preferences profile a random assignment .",
    "two minimal fairness conditions for rules are _ anonymity _ and _",
    "neutrality_. informally , they require that the rule should not depend on the names of the agents or objects respectively .",
    "we define the _ sd ( stochastic dominance ) _ relation which is an incomplete relation that extends the preferences of the agents over objects to preferences over random allocations . given two random assignments @xmath22 and @xmath37 , @xmath38 i.e. , a player @xmath17 _ @xmath0  prefers _",
    "allocation @xmath39 to allocation @xmath40 if @xmath41 since sd is incomplete , it can be that two allocations @xmath39 and @xmath40 are _ incomparable _ : @xmath42 and @xmath43 .",
    "next , we define the dl ( downward lexicographical ) relation which is a complete relation .",
    "let @xmath39 and @xmath40 be two random allocations .",
    "let @xmath36 be the most preferred object such that @xmath44 .",
    "then , @xmath45    [ example : assignment ] consider the random assignment problem for two agents @xmath46 and four objects @xmath47 with the following preferences : @xmath48 let us assume that agent @xmath49 gets @xmath50 with probability one , and objects @xmath51 and @xmath52 with probability half .",
    "then the random assignment can be represented by the following matrix . @xmath53note",
    "that agent 1 s preference is @xmath54 .",
    "based on the preferences over objects , one can consider preferences over allocations : @xmath55 and also @xmath56    [ [ envy - freeness ] ] envy - freeness + + + + + + + + + + + + +    an assignment @xmath22 satisfies _",
    "@xmath0 envy - freeness _ if each agent ( weakly ) @xmath0 prefers his allocation to that of any other agent : @xmath57 an assignment @xmath22 satisfies _ weak @xmath0 envy - freeness _ if no agent strictly @xmath0 prefers someone else s allocation to his : @xmath58 \\text { for all } i , j\\in n.$ ] for fairness concepts , @xmath0 envy - freeness implies weak @xmath0-envy - freeness  @xcite .",
    "[ [ economic - efficiency ] ] economic efficiency + + + + + + + + + + + + + + + + + + +    an assignment is _ perfect _ if each agents gets his most preferred @xmath7 objects .",
    "an assignment @xmath22 is _",
    "@xmath0-efficient _ is there exists no assignment @xmath37 such that @xmath59 for all @xmath25 and @xmath60 for some @xmath25 .",
    "an assignment is _ ex post efficient _ if it can be represented as a probability distribution over the set of @xmath0-efficient discrete assignments .",
    "perfection implies @xmath0-efficiency which implies ex post efficiency .    an assignment rule is @xmath0-efficient ( ex post efficient ) if it always returns an @xmath0-efficient ( ex post efficient ) assignment .",
    "an assignment rule satisfies _ unanimity _ , if it returns the perfect assignment if a perfect assignment exists .",
    "@xmath0-efficiency implies ex post efficiency which implies unanimity .",
    "the first implication was shown by @xcite .",
    "for the second implication , assume that an assignment does not satisfy unanimity , there exists a perfect assignment @xmath22 but the mechanism returns some imperfect assignment @xmath37 . the only @xmath0-efficient assignment that gives @xmath7 units to each agent is @xmath22 .",
    "however since @xmath61 , it can not be achieved by a probability distribution over @xmath0-efficient discrete assignments .",
    "[ [ strategyproofness ] ] strategyproofness + + + + + + + + + + + + + + + + +    a random assignment function @xmath62 is _",
    "@xmath0-strategyproof _ if @xmath63 a random assignment function @xmath62 is",
    "_ weak @xmath0-strategyproof _ if @xmath64   \\text { for all $ { \\succsim\\xspace}_i'\\in \\mathcal{r}(o)$ and $ { \\succsim\\xspace}_i'\\in { \\mathcal{r}(o)}^{n-1}$}.$ ] it is easy to see that @xmath0-strategyproofness implies weak @xmath0-strategyproofness  @xcite .",
    "a random assignment function @xmath62 is",
    "_ weak @xmath0-group - strategyproof _ if there never exists an @xmath65 and @xmath66 such that @xmath67 and @xmath68 .",
    "for the random assignment problem for which the number of objects is not more than the number of agents , there exists a rule ( @xmath1 ) that is anonymous , neutral , @xmath0-efficient and weak @xmath0-strategyproof .",
    "however when the number of objects is more than the number of agents , we get the following impossibility ( theorem  [ th : impossible ] ) .    [",
    "th : impossible ] for the random assignment problem with @xmath69 , there exists no anonymous , neutral , @xmath0-efficient , and weak @xmath0-strategyproof rule .",
    "we consider a random assignment setting with two agents and four objects with the requirement that each agents gets two units of houses .",
    "let us compute @xmath71 . by anonymity and neutrality of @xmath62    @xmath72    by @xmath0-efficiency of @xmath62 ,    @xmath73    by anonymity and neutrality of @xmath62 ,    @xmath74    by using similar arguments ,",
    "@xmath0-efficiency , anonymity , and neutrality of @xmath62 implies that    @xmath75    now let us consider    @xmath76    for @xmath77 to be feasible ,    @xmath78    next , we show that if @xmath79 or @xmath80 , then @xmath62 is not weak @xmath0-strategyproof .    if @xmath79 , then    @xmath81 hence , @xmath62 is not weak @xmath0-strategyproof .    if @xmath80 , then    @xmath82 hence , @xmath62 is not weak @xmath0-strategyproof .    therefore the only way @xmath62 can still be weak @xmath0-strategyproof if both of the following conditions hold .",
    "* @xmath83 is incomparable for @xmath49 with @xmath84 .",
    "* @xmath85 is incomparable for @xmath86 with @xmath87 .",
    "this means that the following constraints should hold .",
    "given that agent @xmath86 reports @xmath88 , agent @xmath49 should not benefit by misreporting @xmath89 instead of @xmath90 .",
    "this implies that @xmath91 .",
    "given that agent @xmath49 reports @xmath90 , agent @xmath86 should not benefit by misreporting @xmath92 instead of @xmath88 .",
    "this implies that @xmath93 .    adding both these inequalities yields @xmath94    but this is a contradiction since @xmath95 .",
    "hence if @xmath62 is @xmath0-efficient , and anonymous , neutral , then it can not be weak @xmath0-strategyproof .    the same argument",
    "can be extended to arbitrary number of agents where each agent requires two objects from among @xmath96 .",
    "each new agent @xmath97 most prefers objects @xmath98 and least prefers objects @xmath99 . hence in each @xmath0-efficient assignment each agent @xmath97 is allocated @xmath100 and @xmath101 completely .",
    "the same arguments for the case of two agents apply to the more general case .",
    "similarly , the same arguments can also be extended to the case where @xmath102 .",
    "one can add more objects to end of the preference lists of both agents and each agent gets a uniform fraction of these objects at the end of the preference lists .",
    "theorem  [ th : impossible ] complements an earlier impossibility result of @xcite that states there exists no @xmath0-efficient , @xmath0 envy - free , and weak @xmath0-strategyproof random assignment rule for multi - unit demands . in theorem",
    "[ th : impossible ] , the property of @xmath0 envy - freeness is replaced by anonymity .",
    "the proof above can be extended by cloning agents @xmath49 and @xmath86 to prove the following statement for the basic assignment setting with single - unit demand .",
    "[ th : impossible - group ] for the random assignment problem , there exists no anonymous , neutral , @xmath0-efficient , and weak @xmath0 group - strategyproofness rule even for equal number of agents and objects .",
    "we consider a random assignment setting with four agents and fours objects .",
    "there are two agents that are of type @xmath49 and two agents of type @xmath86 .",
    "let the real preferences of the agents @xmath103 of type @xmath49 be @xmath90 and let the real preferences of agents @xmath104 of type @xmath86 be @xmath88 .",
    "@xmath105    let us compute @xmath106 .    by anonymity and neutrality , we know that    @xmath107    by @xmath0-efficiency , we know that    @xmath108    due to anonymity and neutrality of @xmath62 ,    @xmath109    by using similar arguments , @xmath0-efficiency , anonymity , and neutrality of @xmath62 implies that    @xmath110    now let us consider    @xmath111    for @xmath112 to be feasible ,    @xmath78    next",
    ", we show that if @xmath113 or @xmath114 , then @xmath62 is not weak @xmath0 group - strategyproof .",
    "if @xmath113 , then @xmath115 hence , @xmath62 is not weak @xmath0 group - strategyproof .    if @xmath114 , then @xmath116 hence , @xmath62 is not weak @xmath0 group - strategyproof .    given that agent of type @xmath88 report @xmath88 , then agent of type @xmath90 should not benefit by misreporting @xmath89 instead of @xmath90 .",
    "this implies that @xmath91 .",
    "given that agents of type @xmath86 report @xmath90 , then agents of type @xmath86 should not benefit by misreporting @xmath92 instead of @xmath88 .",
    "this implies that @xmath93 .",
    "hence , @xmath117    but this is a contradiction since @xmath95 .",
    "hence if @xmath62 is @xmath0-efficient and anonymous , and neutral , then it can not be weak @xmath0 group - strategyproof .",
    "the same argument can be extended to arbitrary number of agents .",
    "theorem  [ th : impossible - group ] ( that holds for single - unit demands ) complements theorem 1 in @xcite that only holds for multi - unit demands .",
    "the assignment problem in which @xmath118 can be viewed as a subdomain of voting in which each alternative is a discrete assignment and preferences of an agent over assignments simply depend on his allocated object  @xcite . as a corollary of theorem  [ th : impossible - group ]",
    ", we get that when agents may express indifference , there exists no randomized social choice rule that is anonymous , neutral , @xmath0-efficient , and weak @xmath0 group - strategyproof .",
    "this proves a weaker version of the conjecture that there exists no randomized social choice rule that is anonymous , neutral , @xmath0-efficient , and weak @xmath0-strategyproof  @xcite .",
    "we now show that if one of @xmath0-efficiency , anonymity , or weak @xmath0-strategyproofness is dropped , then there exist rules that satisfy the other properties mentioned in the two impossibility theorems respectively even for multi - unit demands . if @xmath0-efficiency is dropped or is replaced by ex post efficiency , then rp satisfies strategyproofness , anonymity , neutrality and ex post efficiency .",
    "if anonymity is dropped , then the priority mechanism achieves @xmath0-efficiency and group @xmath0-strategyproofness .",
    "if weak @xmath0-strategyproofness is dropped , then ops satisfies the other properties .",
    "it remains open whether neutrality is necessarily required to obtain the two impossibility theorems .",
    "in this section , we examine the properties satisfied by ps .",
    "( @xmath9 ) .",
    "before we proceed , we will try to get a better understanding of how ps .",
    "@xcite defined ps . as the rule in which each agent eats his @xmath7 most preferred objects at speed @xmath49 during the time interval @xmath119 $ ] .",
    "they assumed that at each point each agent has @xmath7 objects available for consumption during the running of ps . and",
    "hence all the objects are consumed at time @xmath49 .",
    "we first show that it may be the case that less than @xmath7 objects are available for consumption .",
    "consider the illustration of ps . in figure",
    "[ figure : muli - ps ] . at time @xmath120 , only @xmath52 is remaining .",
    "hence the first goal is to decide how to define ps . when agents have less than @xmath7 objects to eat .",
    "we resort to the following definition of ps . .",
let @xmath121 be the number of objects that have not been completely eaten at time @xmath122 . in multi - unit - eating @xmath1 , each agent eats his @xmath123 most preferred available objects with speed @xmath49 at every time point until all the objects have been consumed .",
xmath124                  \\centering                  \\draw[- ] ( 0,-.5 ) -- ( 0,9 ) ;                       \\draw[- ] ( -.5,0 ) -- ( 22.5,0 ) ;                                                                                        \\draw[- ] ( 22.5,9 ) -- ( 22.5,0 ) ;     \\draw[- ] ( 0,3 ) -- ( 22.5,3 ) ; \\draw[- ] ( 0,6 ) -- ( 22.5,6 ) ; \\draw[- ] ( 20,0 ) -- ( 20,9 ) ;     \\draw[- ] ( 10,0 ) -- ( 10,9 ) ;    \\draw[- ] ( 0,9 ) -- ( 22.5,9 ) ;            \\draw[- ] ( 15,0 ) -- ( 15,9 ) ;    \\draw[- ] ( 17.5,0 ) -- ( 17.5,9 ) ;                                                                                                                                                                                                                                     \\draw ( 0,-.6 ) node(c){\\small $ 0 $ } ;                              \\draw ( 20/2,-.6 ) node(c){\\small $ 1/2 $ } ;                                                                       \\draw ( 22.5,-.6 ) node(c){\\small $ 9/8 $ } ;                                                                                                                                   \\draw ( 20,-.6 ) node(c){\\small$1 $ } ;                                                                   \\draw ( 17.5,-.6 ) node(c){\\small$7/8 $ } ;    \\draw ( 15,-.6 ) node(c){\\small$3/4 $ } ;                                \\draw(-2,6 ) node(z){\\small agent $ 1 $ } ;                  \\draw(-2,3 ) node(z){\\small agent $ 2 $ } ;     \\draw(5,6.5 ) node(z){\\small $ o_1,o_2 $ } ;    \\draw(5,3.5 ) node(z){\\small $ o_3,o_2 $ } ;    \\draw(12.5,6.5 ) node(z){\\small $ o_1,o_3 $ } ;    \\draw(12.5,3.5 ) node(z){\\small $ o_3,o_4 $ } ;    \\draw(16.25,6.5 ) node(z){\\small $ o_1,o_4 $ } ;    \\draw(16.25,3.5 ) node(z){\\small $ o_1,o_4 $ } ;        \\draw(18.75,6.5 ) node(z){\\small $ o_4 $ } ;     \\draw(18.75,3.5 ) node(z){\\small $ o_4 $ } ;    \\draw(21.25,6.5 ) node(z){\\small $ o_4 $ } ;     \\draw(21.25,3.5 ) node(z){\\small $ o_4 $ } ;                    \\end{tikzpicture}\\ ] ] @xmath125 @xmath126    we will use @xmath9 as the abbreviation for ps . .",
    "our first observation is that even though agent may not necessarily eat @xmath7 objects at each point , each agent eats the same number of objects .    at each time point , each agent is consuming the same number of objects .",
    "all the agents stop eating at exactly the same time .",
    "if the number of objects is less than @xmath7 , then we know that only @xmath127 objects are remaining .",
    "next , we study properties of ps . .",
    "the first things to observe is that ps .",
    "runs in linear time and results in a unique fractional assignment .",
    "we examine various axiomatic properties of ps . .",
    "our main findings are summarized in the following theorem .",
    "we will prove these properties in a series of propositions .",
    "multi - unit - eating @xmath1is linear - time , @xmath0 envy - free , weak @xmath0-strategyproof , and unanimous but not ex post efficient .",
    "we first show that ps .",
    "satisfies all the notions of fairness defined in the preliminaries .",
    "it is easy to see that ps . is anonymous and neutral .",
    "next we show that ps . is @xmath0 envy - free . for the proof",
    ", we use an extra bit of notation . for each set @xmath128 , let the characteristic vector of @xmath129 be @xmath130 where @xmath131 if @xmath132 and @xmath133 if @xmath134 .",
    "multi - unit - eating @xmath1is @xmath0 envy - free .",
    "when ps . is run , if at least one of the @xmath7 most preferred available objects of some agent @xmath25 is finished , agent @xmath17 starts eating the next most preferred @xmath7 available objects .",
    "also note that when an agent can not consume more units of an object , then _ no _ agent can consume more units of the object either .",
    "we will refer to such a time - point as a breakpoint .",
    "the breakpoints are @xmath135 .",
    "let @xmath136 be the partial assignment at breakpoint @xmath137 .",
    "we prove by induction over @xmath138 , the number of breakpoints in the algorithm , that for each agent @xmath25 , his partial allocation @xmath139 for all @xmath140 .    for the base case @xmath141 , we know that @xmath142 for all @xmath140 since each agent @xmath17 was consuming his most preferred @xmath7 objects",
    ". now let us assume that @xmath139 .",
    "we show that @xmath143 . at time",
    "@xmath144 , let the number of objects that have not been completely even be @xmath145 .",
    "let us consider the time point @xmath146 for some arbitrarily small @xmath147 .",
    "from time point @xmath137 to @xmath146 each agent @xmath17 consumes @xmath148 amount of @xmath149 most preferred objects of @xmath150 for which @xmath148 amount is still available .",
    "thus @xmath151 is changed to @xmath152 . in the meanwhile for each @xmath153 , @xmath154 is changed to @xmath155 where @xmath156 consists of @xmath149 most preferred objects for which @xmath148 amount is still available .",
    "hence , @xmath143 for each @xmath157 .",
    "multi - unit - eating @xmath1is weak @xmath0 envy - free . moreover , for the assignment problem without multi - unit demands , @xmath1 is @xmath0 envy - free .      in this subsection",
    ", we examine the strategic aspects of ps . .",
    "we show that ps .",
    "satisfies @xmath158-strategyproofness and hence weak @xmath0-strategyproofness .",
    "a random assignment function @xmath62 is @xmath158-strategyproof if @xmath159 for all @xmath160 and @xmath161 .",
    "@xmath158-strategyproofness implies weak @xmath0-strategyproofness .",
    "next we show that ps . is @xmath158-strategyproof .",
    "the key to our argument is the insight that an agent can not get an object with probability one if he does not start eating it from time @xmath162 .",
    "this contrasts sharply with one - at - a - time @xmath1 where an agent can still get an object completely even if he delays eating it .",
    "[ lemma : complete ] an agent can not get an object @xmath163 completely if he does not express it as one of his most preferred @xmath7 objects .",
    "assume that agent @xmath17 does not report @xmath163 as one of his most preferred @xmath7 objects but gets it completely .",
    "then while @xmath17 is eating @xmath163 , there must be at least @xmath7 + 1 objects that are still not eaten completely and none of the other agents are eating @xmath163 .",
    "before agent @xmath17 eats @xmath163 , the number of units eaten by @xmath17 is at least @xmath49 and less than @xmath7 .",
    "if @xmath17 has already eaten exactly @xmath7 units , then it will get zero units of @xmath163 .",
    "now for the @xmath7 objects it starts eating including @xmath163 , it can eat at most @xmath164 units because it has already eaten at least one unit .",
    "therefore , agent @xmath17 can eat at most @xmath165 of @xmath163 .",
    "[ prop : dlsp ] multi - unit - eating @xmath1is @xmath158-strategyproof .",
    "we show that for each agent @xmath25 , @xmath166 for all other preferences @xmath167 and @xmath168 .",
    "if agent @xmath17 misreports but eats the same objects at each time point , then @xmath17 gets exactly the same allocation .",
    "therefore , it is sufficient to show that @xmath17 gets a less preferred allocation with respect to @xmath158 if he does not eat the most preferred available objects at each point . consider the untruthful report @xmath169 under which at some breakpoint @xmath122 , agent @xmath17 eats a different set of @xmath123 objects than when he reports @xmath170 .",
    "consider the most preferred object @xmath163 that @xmath17 started eating at time @xmath122 when he was reports @xmath170 but does not eat when he reports @xmath170 .",
    "this means that for all @xmath171 , agent @xmath17 gets exactly the same units of @xmath172 when he reports @xmath170 or when he reports @xmath169 .",
    "since @xmath17 does not eat @xmath163 at time @xmath122 when he reports @xmath169 , he eats it at a time later than @xmath122 .",
    "we can assume that @xmath173 or else agent @xmath17 will eat the same objects after time @xmath122 whether he reports @xmath170 or @xmath169 .",
    "we show that @xmath17 gets strictly less fraction of @xmath163 when he reports @xmath169 .",
    "we distinguish between two cases : @xmath174 when @xmath17 eats @xmath163 when he reports @xmath169 , there is at least one other agent @xmath153 that also eats @xmath163 at some point .",
    "@xmath175 when @xmath17 eats @xmath163 when he reports @xmath169 , there is at least one other agent @xmath153 that also eats @xmath163 at some point . in case of @xmath174",
    ", @xmath172 is in demand and @xmath17 could have eaten a bigger portion of @xmath163 had he started eating it earlier such as time @xmath122 . in case of @xmath175 ,",
    "no agent started eating @xmath163 at _ any _ time point when @xmath17 reports @xmath169 .",
    "this implies that @xmath17 gets @xmath163 completely .",
    "but this is a contradiction because we proved in lemma  [ lemma : complete ] that if an agent does not start eating an object at time @xmath176 , then he can not eat it completely .",
    "the proposition implies that multi - unit - eating @xmath1is weak @xmath0-sp . as a corollary",
    "we also get that for @xmath118 , the original @xmath1 is weak @xmath0-strategyproof .",
    "our proof simplifies the argument in ( step 2 , proposition 1 , * ? ? ?",
    "note that proposition  [ prop : dlsp ] crucially depends on the fact that in mps , each agent tries to eat his @xmath7 most preferred objects .",
    "if each agent eats @xmath164 most preferred objects , then we already know from @xcite , that the rule is then not even weak @xmath0-strategyproof .",
    "we note that in contrast to multi - unit - eating @xmath1 , @xmath6 is not dl - strategyproof and in fact there exists a polynomial - time algorithm for computing a dl best response  @xcite .",
    "we now consider efficiency of ps . .",
    "we first observe that ps .",
    "satisfies unanimity .",
    "multi - unit - eating @xmath1satisfies unanimity .",
    "a preference profile admits a perfect assignment only if each agent can get his most preferred @xmath7 objects .",
    "this implies that for any two agents , their sets of @xmath7 most preferred objects do nt intersect .",
    "given this condition , ps .",
    "will assign each agent with his most preferred @xmath7 objects .",
    "although unanimity is a very undemanding efficiency property , not all assignment rules satisfy unanimity .",
    "for example , the uniform rule does not satisfy it . even if ps .",
    "is modified slightly so that agents eat their @xmath177 most preferred objects at the same rate , then the modified rule would not satisfy unanimity .",
    "we also note that the allocation of each agent via ps .",
    "is @xmath0-preferred over the uniform allocation .    for each agent @xmath25",
    ", @xmath17 @xmath0-prefers his allocation returned by ps . to the uniform allocation .",
    "informally , an agent gets his worst possible assignment if all the other agents have the same preferences . even in this case",
    ", each agent gets a uniform allocation .",
    "although , ps . satisfies unanimity , an assignment returned by ps . can be represented as a convex combination of pareto dominated discrete assignments .",
    "there exists a preference profile for which the outcome of ps .",
    "can be represented as a probability distribution over pareto dominated discrete assignments .",
    "consider two agents having the following preferences . @xmath178 the random assignment as a result of ps .",
    "is @xmath179    which can be represented by a probability distribution over the following discrete assignments .",
    "@xmath180    it can be shown that both discrete assignments are not @xmath0-efficient .",
    "multi - unit - eating @xmath1is not @xmath0-efficient .",
    "an @xmath0-efficient assignment can not be represented as a convex combination of discrete assignment in which at least one of the assignments is not @xmath0-efficient . if this were the case , then the random assignment is not @xmath0-efficient .",
    "although the lack of @xmath0-efficiency of ps . was commented on in the original paper of @xcite , we show that ps . is surprisingly not even ex post efficient .",
    "multi - unit - eating @xmath1is not ex post efficient even if we allow convex combinations of all deterministic assignments including unbalanced deterministic assignments .    consider two agents having the following preferences .",
    "@xmath181    a discrete assignment is not @xmath0-efficient if agent @xmath49 gets @xmath51 or @xmath52 and agent @xmath86 gets @xmath50 .",
    "the only @xmath0-efficient discrete assignments are @xmath182 , @xmath183 we note that the outcome of ps .",
    "is @xmath184 now if random assignment @xmath22 is ex post efficient , then it can be expressed as a convex combination of @xmath0-efficient feasible discrete assignments .",
    "since @xmath185 , this is only possible if @xmath186 is used in the convex combination .",
    "but since agent @xmath86 does not get @xmath50 in any other discrete permutation , this means that if any convex combination of @xmath0-efficient discrete assignments is used to obtain @xmath22 , then in each discrete @xmath0-efficient assignment used the following three cases can occur : @xmath187 @xmath86 gets both @xmath188 and @xmath50 ; @xmath189 @xmath86 gets neither @xmath188 nor @xmath50 and @xmath190 @xmath86 gets @xmath188 but not @xmath50 .",
    "hence , it must be that @xmath191 .",
    "but this is a contradiction .",
    "in this paper , we showed a general impossibility result concerning randomized assignment with multi - unit demands . another impossibility result requiring weak",
    "@xmath0-group - strategyproofness applies to randomized assignment without multi - unit demands . as a corollary of the second impossibility",
    ", we also obtain the corresponding impossibility in the domain of randomized voting .",
    "we then presented a definition of ps . .",
    "multi - unit - eating @xmath1has previously only been defined inaccurately in the literature .",
    "we showed that whereas ps . satisfies some compelling fairness and strategic properties , it does not satisfy reasonable efficiency requirements .",
    "we note that the positive results of multi - unit - eating @xmath1even hold if @xmath19 is not a multiple of @xmath12 . in this case",
    ", agents eat a maximum of @xmath192 houses at any time .    our findings concerning ps .",
    "are summarized in table  [ table : summarymulti ] which also provides a comparison with other random assignment rules . in view of the impossibility result ( theorem  [ th",
    ": impossible ] ) , it is not possible to achieve the desirable properties of @xmath1 and ps . simultaneously .",
    "it is easy to see that the choice of an assignment rule depends on which properties are prioritized .",
    "our paper helps clarify the relative merits of various randomized assignments rules .",
    "it is an open problem whether ex post efficiency , weak @xmath0-strategyproofness and @xmath0 envy - freeness are compatible in the multi - unit case .",
    "we leave a characterization of ps . for future work .",
    "this material is based upon work supported by the australian government s department of broadband , communications and the digital economy , the australian research council , the asian office of aerospace research and development through grant aoard-124056 .",
    "d.  j. abraham , k.  cechlrov , d.  manlove , and k.  mehlhorn .",
    "pareto optimality in house allocation problems . in _ proceedings of the 16th international symposium on algorithms and computation ( isaac ) _ ,",
    "volume 3341 of _ lecture notes in computer science ( lncs ) _ , pages 11631175 , 2005 .      h.  aziz and p.  stursberg .",
    "a generalization of probabilistic serial to randomized social choice . in _ proceedings of the 28th aaai conference on artificial intelligence ( aaai ) _ , pages 559565 .",
    "aaai press , 2014 .",
    "h.  aziz , f.  brandt , and m.  brill .",
    "on the tradeoff between economic efficiency and strategyproofness in randomized social choice . in _ proceedings of the 12th international conference on autonomous agents and multi - agent systems ( aamas ) _ , pages 455462 .",
    "ifaamas , 2013 .",
    "h.  aziz , f.  brandt , and p.  stursberg .",
    "on popular random assignments .",
    "in _ proceedings of the 6th international symposium on algorithmic game theory ( sagt ) _ , volume 8146 of _ lecture notes in computer science ( lncs ) _ ,",
    "pages 183194 .",
    "springer - verlag , 2013 .",
    "h.  aziz , s.  gaspers , s.  mackenzie , n.  mattei , n.  narodytska , and t.  walsh . manipulating the probabilistic serial rule . in _ proceedings of the 14th international conference on autonomous agents and multi - agent systems ( aamas )",
    "_ , pages 14511459 , 2015 .",
    "s.  bouveret and j.  lang . a general elicitation - free protocol for allocating indivisible goods . in _ proceedings of the 22nd international joint conference on artificial intelligence ( ijcai )",
    "_ , pages 7378 .",
    "aaai press , 2011 .",
    "s.  bouveret , u.  endriss , and j.  lang .",
    "fair division under ordinal preferences : computing envy - free allocations of indivisible goods . in _ proceedings of the 19th european conference on artificial intelligence ( ecai ) _ , pages 387392 , 2010 .",
    "m.  guo and v.  conitzer .",
    "strategy - proof allocation of multiple items without payments or priors . in _ proceedings of the 9th international conference on autonomous agents and multi - agent systems ( aamas )",
    "_ , pages 881888 .",
    "ifaamas , 2010 .",
    "t.  kalinowski , n.  narodytska , t.  walsh , and l.  xia .",
    "strategic behavior when allocating indivisible goods sequentially . in _ proceedings of the 27th aaai conference on artificial intelligence ( aaai ) _ , pages 452458",
    "aaai press , 2013 ."
  ],
  "abstract_text": [
    "<S> we consider the multi - unit random assignment problem in which agents express preferences over objects and objects are allocated to agents randomly based on the preferences . </S>",
    "<S> the most well - established preference relation to compare random allocations of objects is stochastic dominance ( @xmath0 ) which also leads to corresponding notions of envy - freeness , efficiency , and weak strategyproofness . </S>",
    "<S> we show that there exists no rule that is anonymous , neutral , efficient and weak strategyproof . for single - unit random assignment , </S>",
    "<S> we show that there exists no rule that is anonymous , neutral , efficient and weak group - strategyproof . </S>",
    "<S> we then study a generalization of the @xmath1 ( probabilistic serial ) rule called multi - unit - eating @xmath1 and prove that multi - unit - eating @xmath1 satisfies envy - freeness , weak strategyproofness , and unanimity .    * jel classification * : c70 @xmath2 d61 @xmath2 d71 </S>"
  ]
}
{
  "article_text": [
    "consider a large - scale publish - subscribe application that is characterized by a large number of information flows , as well as a large number of subscribers .",
    "each information flow generates messages which must be delivered to an interested subset of subscribers .",
    "subscribers are interested in different , yet possibly overlapping , subsets of the information flows .",
    "naturally , an individual information flow may be required by many subscribers .",
    "a typical example is a financial market data dissemination system , where the flows can be stock quotes ( of which there are tens of thousands ) , commodity prices , etc . , and subscribers are traders , analysts and so on ( in hundreds ) .",
    "each subscriber is interested in a different portfolio .",
    "one of the two common approaches in the above dissemination scenario is to utilize ip multicast to transmit the data . in this work",
    "we assume that ip multicast service is supported in the enterprise network .",
    "given that overlaps between subscribers interests are not rare , transmission costs can be reduced by grouping information flows into groups , and using multicast to disseminate these flows to subscribers .",
    "this mechanism requires two mappings : one between flows and groups ( mapping of a flow to one or more multicast group ) , and another mapping between users and multicast groups ( such that each subscriber gets all the information she is interested in ) .",
    "the problem of finding the mappings which minimize consumption of network resources is termed _",
    "`` the channelization problem '' _ @xcite .    using multicast",
    "as a mean of dissemination has some limitations . typically , there is a limited amount of multicast addresses which can be used , due to the memory and computational overhead of the network devices .    in our setting ,",
    "the number of flows is much larger than the number of available multicast groups , which means that a one - to - one mapping of flows to multicast groups is not possible .",
    "thus , different flows have to be batched into the same multicast group . as",
    "a result subscribers may receive data they are not interested in and which they must filter . as shown in  @xcite ,",
    "filtering in the end hosts is one of the reasons for reduced performance in a high bandwidth enterprise network .",
    "a second common approach is to use point - to - point connections , where each publisher transmits the information required using unicast .",
    "the main drawback of solely using unicast is the poor utilization of network resources when many subscribers are interested in the same data flow . in this case",
    ", the transmitter has to transmit the same data many times to different users , which results in a waste of transmitter resources like bandwidth , cpu and memory as well as wasted network bandwidth .    in the current paper",
    ", we propose a novel hybrid approach , which combines both unicast and multicast transports . in our approach",
    ", we allow a flexible allocation of flows into unicast and multicast connections , avoiding the inherent drawbacks of using a single scheme .",
    "thus , we gain high efficiency when many subscribers are interested in the same data flow by utilizing multicast , and use unicast to reduce unneeded filtering , whenever the subscription to certain flows is relatively rare .",
    "we define the hybrid unicast - multicast problem as an optimization problem , and explore several heuristics to solve it . using extensive simulations , we compare different approaches for solving the hybrid problem and identify which perform best , under different scenarios . as an additional contribution",
    ", we explore different algorithms for solving the related channelization problem , which is np - hard , and identify a single algorithm which outperforms the others .",
    "the paper is organized as follows .",
    "section  [ sec : rel_work ] overviews the related work and explains the novelty in our hybrid approach .",
    "section  [ sec : model ] describes the problem model and formally defines the hybrid problem , showing it is a np - hard problem .",
    "section  [ sec : algos ] presents our proposed heuristics for solving the hybrid problem .",
    "section  [ sec : exp_res ] gives extensive experimental results which compare the different heuristics and their operation under various real - world scenarios .",
    "we conclude in section  [ sec : conc ] .",
    "publish - subscribe systems have been the target of extensive research in the last years .",
    "research has focused on the problem of disseminating data efficiently to interested users .",
    "two main paradigms were proposed : content - based multicast and subject - based multicast  @xcite ) .",
    "different extensions to the paradigms include  @xcite where a hybrid approach for content - based and subject based dissemination is proposed .",
    "another example is  @xcite which proposes a solution for a setting in which dynamic changes of the multicast groups is required . in  @xcite content - based dissemination",
    "is implemented using ip multicast .",
    "one of the main challenges when considering subject - based multicast is in solving the channelization problem ( @xcite ) .",
    "previous approaches map flows into multicast groups , while the current paper allows for both multicast and unicast transmissions . in section",
    "[ sec : exp_res ] we empirically compare several algorithms for solving the channelization problem , identifying a single algorithm which outperforms the others .    a closely related work to ours is dr .",
    "multicast @xcite which proposes to use unicast as well as multicast in a data center information dissemination scenario . however , @xcite focuses on the management and stability issues of ip multicast in the data - center , and does not explicitly explore the question of mapping flows into multicast and unicast in a quantitative manner . to the best of our knowledge ,",
    "we are the first work which formally defines the problem as an optimization problem , and explores several heuristics to solve it .",
    "we use the following notations as in  @xcite .",
    "* let @xmath0 be the number of users .",
    "* let @xmath1 be the number of flows .",
    "* let @xmath2 be the number of mulitcast groups .",
    "* let @xmath3 denote the interest matrix : @xmath4 * let @xmath5 denote the mapping from flows to multicast groups : @xmath6 * let @xmath7 denote the mapping from multicast groups to users : @xmath8 * let @xmath9 denote the unicast matrix : @xmath10 * let @xmath11 denote the rate of the flows where @xmath12 is the rate of flow @xmath13",
    ".      given @xmath0 users , @xmath1 flows , @xmath2 multicast groups , a vector of flow rates @xmath14 and an interest matrix @xmath15 , the channelization problem  @xcite aims at finding two mapping matrices @xmath16 that minimize the cost of transmission ( using only multicast groups ) , under the constraint that each user receives all the flows it is interested in .",
    "a schematic diagram of the channelization mappings is given in figure  [ fig : channelization ] .",
    "+    to formally define the cost function , let @xmath17 be real positive numbers , @xmath18    the cost consists of two terms ; the first sums all transmission received by subscribers . for each user",
    "@xmath19 it sums the number of times @xmath19 receives any given flow @xmath13 , times the rate @xmath20 of flow @xmath13 .",
    "the second term sums the transmission of the senders ; that is , each flow @xmath13 is summed according to the number of multicast groups it is transmitted to , times the rate @xmath20 .",
    "@xmath17 are factors which weight the two terms .",
    "the channelization problem is defined as : @xmath21 @xmath22 in other words , given a set of users @xmath23 , a set of multicast groups @xmath24 , a set of flows @xmath25 , an interest matrix @xmath15 and a flow - rate vector @xmath14 ; find @xmath16 that minimize @xmath26 under the constraint that @xmath27 .",
    "below we model our hybrid framework as an optimization problem . unlike the original channelization problem , the transmitters may send flows using unicast .",
    "that is , any flow @xmath28 can be transmitted using unicast to any user @xmath19 . in the hybrid problem",
    "the cost function @xmath29 is composed of three terms : @xmath30    the additional term represents the cost of all the flow @xmath13-user @xmath19 pairs such that flow @xmath13 is sent using unicast to user @xmath19 , multiplied by the cost of transmission .",
    "the cost of transmission of a flow consists of the cost of sending the flow ( @xmath31 ) , the cost of receiving the flow ( @xmath32 ) , and the cost incurred by the unicast mechanism , @xmath33 ( additional memory requirements , etc ) . for the rest of the paper , we assume that the transmitting and receiving costs are equal ( @xmath34 ) and that the unicast cost equals their sum ( _ i.e. _ , @xmath35 ) .    using the cost function @xmath36 the hybrid channelization problem can be formally defined .",
    "given @xmath0 users , @xmath2 multicast groups , @xmath1 flows , an interest matrix @xmath15 and a flow - rate vector @xmath14 , the hybrid channelization problem is defined as :    @xmath37 @xmath38 the constraint @xmath39 requires that each user @xmath19 requesting flow @xmath13 will either receive @xmath13 via unicast or via a multicast group @xmath19 listens to .",
    "( @xmath19 may receive flow @xmath13 via both multicast and unicast ; however , that would be wasteful . )",
    "the hybrid channelization problem is np - hard .    in @xcite",
    "it was shown that the non - unicast problem is np - hard , therefore the unicast channelization problem can be reduced to the non - unicast channelization problem as a proof of its hardness .",
    "the reduction is simple : given @xmath40 as input to the channelization problem , construct an input to the hybrid channelization problem which is exactly the same , with a single modification . setting @xmath33 to be large than @xmath41 ensures that any solution @xmath42 does not have a lower cost than @xmath43 .",
    "thus , the minimal cost is the same as in the non - unicast setting .",
    "we propose the following two - step framework for solving the hybrid problem . in the first step ,",
    "we solve the channelization problem , without assigning any unicast flows . in the second step , we heuristically",
    "select some of the flows to be sent using unicast , and update the subscription matrix @xmath15 accordingly .",
    "this process can be repeated several times , as long as the system cost is reduced .",
    "simulation results show that repeating the process does not significantly improve system cost , while having a high computational cost .",
    "the above process can be viewed as starting from a solution that uses only multicast , and then using unicast to greedily improve the solution .",
    "alternatively , one can start with a solution that uses only unicast ( _ i.e. _ , @xmath44 ) , and greedily improve it by moving flows to multicast .",
    "our simulations show that the first framework operates better than the latter one ; while both of them improve upon previous non - hybrid solutions .",
    "previous work  @xcite discuss several heuristics for solving the channelization problem .",
    "et al._examine several heuristics , among them , random assignment and user and flow based merges .",
    "et al._proposed a variant of the k - means algorithm which greedily minimizes the cost on each iteration .    in this work",
    ", we extensively compare the different previous approaches , while exploring new algorithms .",
    "we have utilized an algorithm from the data mining domain , called binary matrix decomposition ( bmd @xcite ) which is originally used for two - sided binary clustering of documents and keywords into document classes .",
    "the basic idea is that the global cost function for minimization is : @xmath45 @xmath46 which means we are looking for a decomposition of the interest matrix @xmath15 into two binary matrices @xmath47 so that the euclidian norm between @xmath48 and @xmath15 is minimized .",
    "an alternating algorithm is derived by starting with an initial guess @xmath49 , solving @xmath50 which minimizes the cost function and then continuing in rounds .",
    "there are some drawbacks in using this algorithm : first , it does not support variable flow rates .",
    "second , it allows for some flows to be missing . despite those drawbacks it has reasonable performance when operating on small systems ( _ i.e. _ , 200 flows , 10 multicast groups , 100 users )",
    "however , when operating on larger systems ( _ i.e. _ , 10000 flows , 100 multicast groups , 250 users ) it does not improve upon a random selection of a solution",
    ". therefore , we have omitted the experimental results of the bmd algorithm from the following graphs .",
    "we have also utilized the matlab  k - means algorithm @xcite which is a two phase algorithm . in the first phase points",
    "are reassigned to their nearest cluster centroid , all at once , followed by recalculation of cluster centroids .",
    "the second phase uses `` on - line '' updates , where points are individually reassigned while reducing the total cost function , and cluster centroids are recomputed after each reassignment .",
    "we further investigated an interior point algorithm .",
    "starting from the original problem formulation by adler _",
    "_ , the binary mapping matrices @xmath49 and @xmath50 are relaxed to be in the range @xmath51 . the constraints that @xmath52 and",
    "@xmath27 are incorporated into the cost function using the log - barrier technique ( @xcite ) and then the newton method is applied .",
    "after convergence , the solution is rounded to receive binary @xmath49 and @xmath50 .",
    "unfortunately , the interior point method did not perform well in practice .",
    "some of the reasons are that the problem is neither concave nor convex .",
    "we have usually received a good fractional solution , but when the solution was rounded to the closest integer solution , it did not compare favorably to the other algorithms .",
    "therefore , we have omitted the experimental results of the interior - point algorithm from the following graphs .    in total , we have examined five different algorithms for solving the channelization problem .",
    "table  [ tab : algos ] summarizes the tested algorithms .",
    "regarding their running time , not surprisingly , the random assignment is the lightest algorithm with running time of @xmath1 ( setting each flow to a random multicast group ) plus @xmath53 for going over all users and assigning them to groups such that they will receive all required flows .",
    "the two k - means variants as well as the bmd algorithms have a similar running time , where @xmath54 is the number of iterations ( typically five on problem sizes of thousands ) , since for each flow they go over all possible assignments of groups by taking the minimal cost .",
    "the interior point method running time is dominated by the hessian inversion in the newton step .",
    ".examined algorithms for solving the channelization problem and their running time .",
    "[ cols=\"<,<\",options=\"header \" , ]      different ways of choosing flow - user pairs can be used .",
    "we concentrated on two different types of heuristics : flow based and user based .",
    "flow based heuristic means that each flow @xmath13 is either sent to all users that are interested in it via unicast , or transmitted to all of them via multicast ; one can either remove the `` heaviest '' flow or the `` lightest '' flow ( in the sense of the amount of bandwidth required to transmit that flow to all users interested in it ) .",
    "clearly , we expect the lightest - flow approach to outperform the heaviest - flow approach ; this has been validated by our simulations , and in the following graphs we will consider only the lightest - flow approach .",
    "user based heuristics means that all flows sent to user @xmath19 are sent via unicast .",
    "that is , if user @xmath19 receives any flow @xmath13 using unicast , then any other flow @xmath55 that is sent to @xmath19 is sent using unicast .",
    "similar to the case of flow removal , we can choose to remove the `` heaviest '' or `` lightest '' user ( here `` heavy '' and `` lightweight '' means the total bandwidth required to transmit all flows user @xmath19 is interested in ) .",
    "our simulations show the heaviest - user approach outperforms the lightest - user approach ; the reason lies in the fact that heavy users listen to many multicast groups , and thus incur large overhead in filtering . in the following graphs we show the heaviest - user approach only .    to sum up",
    ", we have tested the heuristics of removing the heaviest / lightest flow / user from @xmath15 , and moving it to @xmath56 .",
    "in addition , each of the above options was tested twice : once by finding a single @xmath16 pair then removing as many flows / users from @xmath15 as possible ( termed `` non - iterative '' ) ; and once by finding a @xmath16 pair , removing a single flow / user from @xmath15 , then finding a new @xmath16 pair ( that optimizes the modified @xmath15 ) , removing another flow / user from the altered @xmath15 , and so on ( as long as the cost function was minimized ) ; termed `` iterative '' .",
    "our simulations have shown the non - iterative approach operates almost as good as the iterative , with significantly reduced computational effort .",
    "thus , the following graphs depict only the non - iterative runs .",
    "in addition , we have tested several other heuristics .",
    "the basic idea is to remove a flow / user in a greedy way , _",
    "i.e. _ , repeatedly move to unicast the user / flow / flow - user pair that minimizes the total cost ( eq .  [ hc ] ) , until cost does not decrease or bandwidth for unicast is fully utilized .",
    "we call those heuristics greedy user , greedy flow and greedy flow - user pair accordingly .    in practice",
    ", the flow - user pair heuristic did not perform well , while having a high computational cost .",
    "thus , it is not shown in the graphs . to sum up",
    ", we have tested in total eleven different heuristics . in the following section",
    ", we present the simulations results for the best - performing among these heuristics .",
    "we have experimented with three possible initializations of the user interest matrix @xmath15 .",
    "the first one is _ random _",
    ", where each user uniformly selects % 3 of the flows .",
    "the second one , _ market distribution _",
    ", is based on a model of subscription patterns in financial messaging systems  @xcite .",
    "this model is based on stock market symbol rates collected from the new york stock exchange ( nyse ) .",
    "the matrix @xmath15 was composed of 10,000 symbols divided into 10 markets , and 250 users .",
    "each user was interested in 4 markets , and chose some of the symbols in each selected market .",
    "the flows within a market are distributed exponentially , and the markets are distributed using zipf distribution .",
    "the _ market distribution_determines the flow rate @xmath14 as well .    figure  [ fig : user - interest - matrix ] shows an example of a user interest matrix ( top ) , and the relative message rate of each symbol ( bottom ) , according to the _ market distribution_.     and message rate  @xmath14 according to the market distribution model.,scaledwidth=40.0% ]    the third initialization to the matrix @xmath15 uses a subscription pattern captured from an ibm s websphere @xcite test cluster .",
    "in it there are 79 processes subscribed to over 6100 topics .",
    "subscription to the topics is entirely automatic , influenced by the configuration and load incurred upon the cell .",
    "as can be seen in figure  [ fig : user - interest - matrix2 ] , the resulting interest matrix is clearly different from the one generated by the model of human behavior in financial markets ( see figure  [ fig : user - interest - matrix ] ) . importantly , many topics have identical audiences , which perfectly lends itself to multicast channelization .          among the algorithms listed in table  [ tab :",
    "algos ] , only the k - means and the interior - point method take the flow rates @xmath14 into consideration .",
    "thus , only the k - means was plotted twice , once with equal rate and once with rate derived by the _ market distribution _ , as shown in figure  [ fig : non - unicast ] . using equal rate , both k - means and matlab k",
    "- means have a superior performance .",
    "however , using _",
    "market distribution_rate , the k - means algorithm has a noticeably superior performance over all others .        in all graphs",
    "shown , the y axis represents percentage cost from perfect multicast , where the term perfect multicast refers to the cost of transmission using multicast transport only ( with no unicast ) , assuming there are unlimited number of multicast groups .",
    "thus , perfect multicast means that each user receives exactly all flows it is interested in , each flow is transmitted only once and there is zero filtering in the network .    in the hybrid setting , we allow some of the traffic to be transmitted using point - to - point connections .",
    "we have tested different heuristics for moving traffic from multicast to unicast ( see subsection  [ sec : choosesys ] ) .",
    "figure  [ fig : unicast_methods ] compares the top heuristics : lightest - flow , heaviest - user , greedy flow and greedy user .",
    "as can be seen , allowing some of the data to be unicasted reduces the cost .",
    "evaluated using the market distribution , it seems that the greedy - user heuristic outperforms the greedy - flow heuristic .",
    "however , this result is overturned when evaluating using the websphere distribution ( in the sequel ) .",
    "thus , the relative competitiveness of these two heuristics depends of the nature of the interest matrix .",
    "the interest matrix @xmath15 represents the flows each user is interested in .",
    "the performance of the different heuristics is highly dependent on the content of @xmath15 which represents the characteristics of the instance of the problem . in figure",
    "[ fig : interest_matrix ] the lightest - flow heuristic is evaluated with different interest matrices : a random interest matrix where each flow has the same rate , a _ market distribution_interest matrix where all flow have a fixed same rate , and a _ market distribution_interest matrix where the rates are also according to _",
    "market distribution_. as can be seen in figure  [ fig : interest_matrix ] , the algorithm performs best when running on a _ market distribution_interest matrix ; _ i.e. _ the heuristic is optimized for the expected distribution of a real - world financial market application .",
    "this happens because of the underlying zipf probability , where the top flows are requested by a large number of users .",
    "this makes the clustering of top flows into multicast groups easier .",
    "figure  [ fig : scalability ] shows how the different heuristics perform as the size of the system increases .",
    "each point in the figure represents a different system : for point @xmath57 , the system consists of @xmath58 flows , @xmath59 users while the number of multicast groups is fixed to 50 .",
    "we did not scale the number of multicast groups since it is usually dictated by the networking hardware .",
    "the relation between the different heuristics is mostly preserved at different system sizes .",
    "an interesting exception is point @xmath60 , in which the greedy flows outperforms the greedy users heuristic .",
    "this effect is not surprising as different systems ( specifically , the ratio between flows , users and multicast groups ) can change the relative efficiency of the different heuristics .        to show the behaviorial difference of the heuristics",
    "when running on a mechanical subscription trace , we have ran the different heuristics on the ibm websphere distribution ( see figure  [ fig : unicast_methods2 ] ) . as can be seen , when the subscription patters closely overlap , the flow based heuristic outperform the user - based heuristics .",
    "it is interesting to note that the heavy - user heuristic actually increases the cost , since this heuristic moves the heaviest user and does not consider the cost of the move .",
    "in addition , the greedy user and greedy flow heuristics reach their maximal improvement at very low unicast bandwidth .",
    "this phenomena is due to the structured nature of the interest matrix , incurred by the mechanical subscription pattern .",
    "figure  [ fig : unicsat0 - 100 ] represents well the benefits of using our hybrid approach .",
    "the greedy heuristics is forced to use a given percentage of unicast bandwidth ( the x - axis ) , using the websphere subscription pattern . using the hybrid approach",
    ", the greedy flow heuristic improves upon both the multicast only and unicast only schemes . the total cost of transmission is reduced in a way which is not possible using a single scheme .",
    "we have experimented with different heuristics for selecting which of the data should be transmitted using unicast . under the stock market model ,",
    "the best heuristics are greedy heuristics which repeatedly move a single user / flow from multicast to unicast to minimize the total cost . in this",
    "setting , the distribution leads to several multicast groups which carry a large number of non - identical heavy flows .",
    "thus , a user that is interested in any heavy flow might be forced to receive it via a multicast group that carries other heavy flows that he does not need , leading to a high filtering cost . in this case , the gain of moving a single user to unicast outweighs the gain that might be achieved by moving the best flow to unicast , because the best flow to be moved is usually fairly light weight .",
    "therefore , the heuristic of greedily moving users from multicast to unicast works well in this setting .    the second scenario we tested consisted of a user interest matrix from a websphere test cluster . as the users of this problem are software / script based , their interests are homogenous .",
    "thus , many users can use the same multicast group with no need for filtering .",
    "therefore , a flow which is of interest to a few users can incur heavy cost on filtering , if it is assigned to a multicast group that many users listen to .",
    "this property causes the user based heuristics to perform poorly , while the flow based heuristics perform well .",
    "in other words , the greedy - user and greedy - flow schemes `` thin - out '' the interest matrix by removing rows and columns , respectively , making the resulting interest matrix more amenable to channelization .",
    "the relative competitiveness of these heuristics depend on the structure of the interest matrix .",
    "this paper analyzes the hybrid channelization problem .",
    "we formally define the problem as an optimization problem and propose efficient heuristics for solving it .",
    "our general framework starts from a solution to a non - unicast problem and tries to improve it by allowing some of the data to be transmitted via unicast .",
    "similarly , we start from a solution which utilizes only unicast , then improve it by allowing some of the data to be transmitted via multicast .    we have tested our heuristics against two different real - world scenarios .",
    "first is a simulated brokers interest in financial market data and the second is mechanical subscription pattern captured from an ibm websphere test cluster .",
    "five different algorithms for solving the non - unicast channelization problem where examined , and a single algorithm , the k - means algorithm was identified to perform the best in all settings .    in total",
    "we have experimented with eleven different heuristics .",
    "the greedy heuristics ( that improve the cost function directly ) performed better than the others .",
    "however , greedy heuristics should be taken with a salt of grain , as different problems incur different distributions on the user interest matrix @xmath15 and on the rate of the flows .",
    "thus , different heuristics may perform differently as the problem context changes .    to conclude , by allowing a combination of multicast and unicast transmissions , we gain in reduced host and network resource consumption .",
    "it seems that the performance of a publish subscribe system is highly depended on the subscription patterns .",
    "our hypothesis is that user based heuristics combined with the flow based heuristics cover a large range of problems .",
    "thus , we provide a range of heuristics that can be used to practically deploy a publish subscribe system efficiently .",
    "f.  cao and j.  p. singh .",
    "medym : match - early and dynamic multicast for content - based publish - subscribe service networks . in _",
    "icdcsw 05 : proceedings of the fourth international workshop on distributed event - based systems ( debs ) ( icdcsw05 ) _ , pages 370376 , washington , dc , usa , 2005 .",
    "ieee computer society .",
    "isbn 0 - 7695 - 2328 - 5 - 04 .",
    "s.  ganguly , s.  bhatnagar , a.  saxena , r.  izmailov , and s.  banerjee . a fast content - based data distribution infrastructure . in _",
    "infocom 2006 .",
    "25th ieee international conference on computer communications . proceedings _ , pages 113 , 2006 .      b.  n. levine , j.  crowcroft , c.  diot , j.  garcia luna  aceves , and j.  kurose .",
    "consideration of receiver interest for ip multicast delivery . in _",
    "proceedings ieee infocom _ , volume  2 , pages 470479 , mar 2000 .",
    "t.  li . a general model for clustering binary data .",
    "kdd 05 : proceedings of the eleventh acm sigkdd international conference on knowledge discovery in data mining _ , pages 188197 , new york , ny , usa , 2005 .",
    "isbn 1 - 59593 - 135-x .",
    "l.  opyrchal , m.  astley , j.  s. auerbach , g.  banavar , r.  e. strom , and d.  c. sturman .",
    "exploiting ip multicast in content - based publish - subscribe systems . in _",
    "ifip / acm international conference on distributed computing platforms _ , pages 185207 , 2000 .",
    "y.  tock , n.  naaman , a.  harpaz , and g.  gershinsky .",
    "hierarchical clustering of message flows in a multicast data dissemination system . in s.  q. zheng , editor ,",
    "_ iasted pdcs _ , pages 320326 .",
    "iasted / acta press , 2005 .",
    "isbn 0 - 88986 - 525 - 6 .",
    "y.  vigfusson , h.  abu - libdeh , m.  balakrishnan , k.  birman , and y.  tock .",
    "multicast : rx for datacenter communication scalability . in _",
    "hotnets vii : seventh acm workshop on hot topics in networks _ , calgary , canada , october 2008 ."
  ],
  "abstract_text": [
    "<S> one of the main challenges in building a large scale publish subcribe infrastructure in an enterprise network , is to provide the subscribers with the required information , while minimizing the consumed host and network resources . </S>",
    "<S> typically , previous approaches utilize either ip multicast or point - to - point unicast for efficient dissemination of the information . in this work </S>",
    "<S> , we propose a novel hybrid framework , which is a combination of both multicast and unicast data dissemination . </S>",
    "<S> our hybrid framework allows us to take the advantages of both multicast and unicast , while avoiding their drawbacks . </S>",
    "<S> we investigate several algorithms for computing the best mapping of publishers transmissions into multicast and unicast transport .    using extensive simulations , </S>",
    "<S> we show that our hybrid framework reduces consumed host and network resources , outperforming traditional solutions . to insure </S>",
    "<S> the subscribers interests closely resemble those of real - world settings , our simulations are based on stock market data and on recorded ibm webshpere subscriptions .    </S>",
    "<S> performance    ip - multicast , publish - subscribe </S>"
  ]
}
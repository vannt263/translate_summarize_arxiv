{
  "article_text": [
    "generating independent uniformly distributed samples over `` simple , '' sets such as @xmath0 norms , has been thoroughly studied and algorithms are available which efficiently solve this problem ; e.g. , see  @xcite . however , efficient generation of independent uniformly distributed samples over general sets remains a difficult problem .",
    "this especially true in the case where the set is of low volume , hard to localize and/or nonconvex or even disconnected .",
    "although an interesting problem on its own , efficient sample generation can be used for solving complex analysis and design problems .",
    "examples of these are chance - constrained optimization , robust optimization and multi - objective controller design , see e.g. @xcite and the many references therein .    in this paper , we present some preliminary results that aim at solving the sample generation problem over semialgebraic sets with non - empty interior .",
    "more precisely , we leverage recent results on polynomial approximation of indicator functions of sets defined by polynomial inequalities  @xcite to develop algorithms that    a.   generate independent uniformly distributed samples over the given semialgebraic set ; b.   have provable bounds on sample rejection rate ; c.   have a rejection rate tends to zero as the degree of the polynomial approximation of the indicator function increases .",
    "the problem of random sample generation has been the subject of active research .",
    "techniques for univariate generation techniques are discussed e.g.  in @xcite .",
    "these methods , however , are not readily extendable to the sets usually encountered in robust control .",
    "hence , specific techniques for generating uniform ( or radially symmetric ) samples in the @xmath1 vector norm ball are discussed in @xcite . in the papers @xcite and @xcite methods for random sample generation in real and complex spectral norm balls",
    "are developed ; see also @xcite for generation of matrices having a toeplitz structure .",
    "the generation of causal stable dynamic operator has been the subject of different studies . in @xcite various techniques for generating random samples inside the schur stability region",
    "are discussed , while @xcite presents an algorithm for approximately generating uniform transfer functions in the @xmath2 ball .",
    "we remark that the methods discussed in this paper are non - asymptotic , contrary to the markov chain monte carlo techniques discussed for instance in @xcite and references therein . in these papers ,",
    "the desired distribution is obtained by simulating a random walk on a graph . and",
    "the independence and uniformity properties are only guaranteed asymptotically .",
    "therefore , the methods discussed in this paper can be implemented on parallel and distributed architectures , see e.g.  @xcite .",
    "the paper outline is as follows .",
    "section  [ sec : statement ] provides a precise definition of the problem addressed in this paper and describes some auxiliary results needed for the development of the proposed approach . the algorithm for sample generation",
    "is described in section  [ sec : unifgen ] . since this algorithm requires generation of samples from a distribution with polynomial density , details on how one can do this efficiently",
    "are given in section  [ sec : pol_sample ] .",
    "in section  [ sec : examples ] , we illustrate the performance of the proposed approach with a few academic examples .",
    "finally , in section  [ sec : conclusion ] , concluding remarks are presented and further research directions are delineated .",
    "consider a compact basic semialgebraic set described by polynomial inequalities @xmath3 where @xmath4 , @xmath5 are given real multivariate polynomials .",
    "the problem we consider is the following : +    _ given the semialgebraic set @xmath6 defined in ( [ kset ] ) , generate @xmath7 independent identically distributed ( i.i.d . ) random samples @xmath8 uniformly distributed in @xmath6 .",
    "_    note that the considered setup is very general , and encapsulates many problems of interest to the control community . in particular , the algorithm presented in this paper can be used to generate uniform samples in the solution set of linear matrix inequalities ( lmis ) .",
    "indeed , it is a well - known fact that lmi sets are ( convex ) basic semialgebraic sets . to see this , consider the lmi set @xmath9 where @xmath10 stands for positive semidefinite and the matrix @xmath11 has size @xmath12 .",
    "a vector @xmath13 belongs to the lmi set if and only if all the principal minors of @xmath11 are nonnegative .",
    "this immediately leads to a set of @xmath14 polynomial inequalities in @xmath13 .",
    "we define by @xmath15 the vector space of multivariate real polynomials in @xmath16 variables of degree less than or equal to @xmath17 .",
    "the uniform density over a set @xmath6 of nonzero volume is defined as @xmath18 where @xmath19 denotes the indicator function of the set @xmath6 @xmath20 and @xmath21 is the lebesgue measure ( volume ) of @xmath6 ; e.g. , see @xcite for details on lebesgue measures and integration .",
    "the idea at the basis of the method we propose is to find a suitable approximation of the set @xmath6 , using the framework introduced in @xcite . to this end , let us consider a polynomial of degree @xmath17 @xmath22 where the sum ranges over all integer vectors of size @xmath16 summing up to @xmath17 or less .",
    "let us now introduce the polynomial super - level set @xmath23 the use of super - level sets as efficient nonconvex approximations of generic semialgebraic sets has been proposed in @xcite . in particular , the following optimization problem is considered @xmath24 the above problem amounts at finding the super - level set that better approximates , in terms of minimum volume , the original set @xmath6 .",
    "since @xmath6 is compact by assumption , for problem ( [ optp ] ) to have a finite minimum , it was further assumed in @xcite that a compact semialgebraic set @xmath25 is given such that @xmath26 and hence @xmath27    in this paper , we additionally assume that the set @xmath25 is the cartesian product of @xmath16 one - dimensional sets , i.e.  @xmath28 .",
    "for instance , the set @xmath25 can be taken as the @xmath16-dimensional hyper - rectangle @xmath29}:=\\{x \\in { \\mathbb r}^n : a_i\\leq x_i \\leq b_i , \\ : i=1,2,\\ldots , n \\}.\\ ] ] as noted in ( * ? ? ?",
    "* remark 1 ) , an outer - bounding box @xmath25 of a given semialgebraic set @xmath6 can be found by solving relaxations of the following polynomial optimization problems @xmath30 which compute the minimum and maximum value of each component of the vector @xmath13 over the semialgebraic set @xmath6 .",
    "note that arbitrarily tight lower and upper bounds can be obtained by means of the the techniques discussed e.g.  in @xcite based on sos / moment convex relaxations .    the algorithm presented in this paper leverages some recent results presented in @xcite , which , as a side - result , provide an optimal polynomial approximation of indicator functions .",
    "more precisely , it was shown in that paper that problem ( [ optp ] ) can be approximated by the following convex optimization problem @xmath31 in particular , the following result holds . see ( * ? ? ?",
    "* lemma 1 ) .",
    "[ cvg ] the minimum of problem ( [ l1 ] ) monotonically converges from above to the minimum of problem ( [ optp ] ) , i.e. @xmath32 for all @xmath17 , and @xmath33 .",
    "in particular , the convergence follows from the fact that the optimal polynomial @xmath34 solution to problem ( [ l1 ] ) converges in @xmath35 , or equivalently almost uniformly in @xmath25 , to the indicator function @xmath36 as its degree goes to infinity .",
    "this crucial property is the one we will exploit in section [ sec : unifgen ] to construct an efficient rejection algorithm for generating uniform samples in @xmath6 .",
    "from the proof of ( * ? ? ?",
    "* lemma 1 ) it can be seen that , for any @xmath17 , the optimal solution @xmath37 to problem ( [ l1 ] ) has the property of being an _ upper approximation _ of the indicator function @xmath36 , that is @xmath38 for all @xmath39 .",
    "moreover , this approximation becomes tight when @xmath17 goes to infinity .",
    "therefore , this polynomial is a `` dominating density '' of the uniform density @xmath40 for all @xmath39 , that is there exists a value @xmath41 such that @xmath42 for all @xmath39 .",
    "hence , the rejection method from a dominating density , discussed for instance in ( * ? ? ?",
    "* section 14.3.1 ) , can be applied leading to the random sampling procedure described in the following algorithm .",
    "algorithm 1 : uniform sample generation in semialgebraic set @xmath6    1 .   for",
    "a given integer @xmath43 , compute the solution of @xmath44 2 .",
    "generate a random sample @xmath45 with density proportional to @xmath37 over @xmath25 .",
    "3 .   if @xmath46 go to step 1 . 4 .   generate a sample @xmath47 uniform on @xmath48 $ ] .",
    "if @xmath49 return @xmath50 , else go to step 1 .",
    "end of algorithm 1    it must be noticed that problem ( [ l1p ] ) , even though convex and finite - dimensional , can be very hard to solve . in practice",
    ", we solve a tractable lmi problem by strenghtening the polynomial positivity constraints by polynomial sos constraints .",
    "convergence results are however not affected , see @xcite for more details .",
    "a graphical interpretation of the algorithm is provided in figure [ fig : oned ] , for the case of a simple one - dimensional set @xmath51 first , problem ( [ l1 ] ) is solved ( for @xmath52 and @xmath53 $ ] ) , yielding the optimal solution @xmath54 as it can be seen , @xmath37 is `` dominating '' the indicator function @xmath36 for all @xmath39 .",
    "then , uniform random samples are drawn in the hypograph of @xmath34 .",
    "this is done by generating uniform samples @xmath55 distributed according to a probability density function ( pdf ) proportional to @xmath34 ( step 2 ) , and then selecting its vertical coordinate uniformly in the interval @xmath56 $ ] ( step 3 ) .    finally , if this sample falls below the indicator function @xmath36 ( blue dots ) it is accepted , otherwise it is rejected ( red dots ) and the process starts again .    ]",
    "it is intuitive that this algorithm should outperform classical rejection from the bounding set @xmath25 , since `` more importance '' is given to the samples inside @xmath6 , and this importance is weighted by the function @xmath34 .    to formally analyze algorithm 1",
    ", we define the _ acceptance rate _ ( see e.g.  @xcite ) as one over the expected number of samples that have to be drawn from @xmath37 in order to find one  good \" sample , that is a sample uniformly distributed in @xmath6 .",
    "the following results , which is the main theoretical result of the paper , provides the acceptance rate of the proposed algorithm .",
    "algorithm 1 returns a sample uniformly distributed in @xmath6 .",
    "moreover , the acceptance rate of the algorithm is given by @xmath57 where @xmath58 is the optimal solution of problem ( [ l1 ] ) , that is @xmath59    to prove the statement , we first note that the polynomial @xmath37 defines a density @xmath60 over @xmath6 . moreover , by construction , we have @xmath38 , and hence @xmath61 then , it can be immediately seen that algorithm 1 is a restatement of the classical von neumann rejection algorithm , see e.g.  ( * ? ? ?",
    "* algorithm 14.2 ) , whose acceptance rate is given by the value of @xmath62 such that ( [ eq : rejrate ] ) holds , see for instance @xcite .",
    "it follows that the efficiency of the random sample generation increases as @xmath17 increases , and becomes optimal as @xmath17 goes to infinity , as reported in the next corollary .",
    "let @xmath17 be the degree of the polynomial approximation of the indicator function of the set @xmath63 .",
    "then , the acceptance rate tends to one as one increases degree @xmath17 ; i.e. , @xmath64    hence , the trade - off is between the complexity of computing a good approximation ( @xmath17 large ) on the one hand , and having to wait a long time to get a `` good '' sample ( @xmath65 large ) , on the other hand .",
    "note , however , that the first step can be computed off - line for a given set @xmath6 , and then the corresponding polynomial @xmath34 can be used for efficient on - line sample generation .    finally , we highlight that , in order to apply algorithm 1 in an efficient way ( step 2 ) , a computationally efficient scheme for generating random samples according to a polynomial density is required .",
    "this is discussed next .",
    "to generate a random sample according to the multivariate polynomial density @xmath66 , one can recur to the conditional density method , see e.g.  @xcite .",
    "this is a recursive method in which the individual entries of the multivariate samples are generated according to their conditional probability density . in particular",
    ", the joint pdf of the vector of random variables @xmath67 can be written as @xmath68 where @xmath69 are the conditional densities .",
    "the conditional density is defined as the ratio of marginal densities @xmath70 which , in turn , are given by @xmath71    hence , a random vector @xmath72 with density @xmath73 can be obtained by generating sequentially the @xmath74 , @xmath75 , where @xmath74 is distributed according to the univariate density @xmath76 . the basic idea of this method is to generate the first random variable according to @xmath77 , then generate the next one conditional on the first one , and so forth , thus reducing an @xmath16-dimensional generation problem to @xmath16 one - dimensional problems .",
    "note that , in the case of polynomial densities , the computation of the marginal densities is straightforward , thus making this method particularly appealing .",
    "moreover , to generate a random sample according to a given univariate polynomial density , the inversion method can be employed , see e.g. ( * ? ? ?",
    "* corollary 14.1 ) .",
    "this is summarized in the following algorithm for the sake of completeness .",
    "algorithm 2 : generation from a univariate polynomial density    1 .",
    "generate a random variable @xmath78 uniform on @xmath79 $ ] .",
    "2 .   compute the unique root @xmath80 in @xmath81 $ ] of the polynomial @xmath82 3 .",
    "return @xmath80 .",
    "end of algorithm 2    this algorithm returns a random variable @xmath13 distributed according to the univariate density proportional to the polynomial @xmath83 with support @xmath81 $ ] .    in step 2 ,",
    "the numerical computation of the root can be performed , up to a given accuracy , using some standard method such as bisection or newton  raphson .",
    "we also remark that more efficient methods for generating samples from polynomial densities exist , see for instance the method in  @xcite , based on finite mixtures .",
    "as a first illustration of the ideas described in this paper , we consider the outer approximations by polynomial super - level sets of the third - degree discrete - time stability region obtained by solving the convex optimization problem in step 1 of algorithm 1 .",
    "tightness of these approximations is crucial for a good performance of the sample generation method .",
    "a third - degree monic polynomial @xmath84 with real coefficients is discrete - time stable ( i.e. all its roots lie in the interior of the unit disk of the complex plane ) if and only if its coefficient vector @xmath85 belongs to the interior of the basic semialgebraic set @xmath86 which is nonconvex , see e.g. ( * ? ? ?",
    "* example 4.3 ) . set @xmath6 in included in the bounding box @xmath87\\times[-3,3]\\times[-1,1]$ ] . in figure",
    "[ fig : schur3outer4 ] we represent the super - level set @xmath88 of the degree 4 polynomial solving optimization problem ( [ l1p ] ) with the polynomial positivity constraints replaced with polynomial sos constraints .",
    "the set @xmath89 is a guaranteed outer approximation of @xmath6 . in figure",
    "[ fig : schur3outer8 ] we represent the much tighter degree 8 outer approximation @xmath90 .    ]    ]      as another control - oriented illustration of the polynomial super - level set approximation used by our sampling algorithms 1 and 2 , consider ( * ? ? ?",
    "* example 4.4 ) which is a degree 4 discrete - time polynomial @xmath91 to be stabilized with two real control parameters @xmath92 .",
    "in other words , we are interested in sampling uniformly in the set @xmath6 of values of @xmath93 such that this polynomial has its roots with modulus less than one .",
    "an explicit basic semialgebraic description of the sampling set is @xmath94 this set is nonconvex and it is included in the box @xmath95 ^ 2 $ ] . in figure",
    "[ fig : schur4 ] we represent the graph of the degree 10 polynomial @xmath96 constructed by solving optimization problem ( [ l1p ] ) with the polynomial positivity constraints replaced with polynomial sos constraints . from this",
    "we get the outer approximation @xmath97 used in our sampling algorithm .    ]      to demonstrate the behavior of algorithms 1 and 2 , we revisit a numerical example originally introduced in @xcite .",
    "the considered semialgebraic set @xmath6 is the two - dimensional nonconvex region described as : @xmath98 in @xcite , the outer - bounding box @xmath99 was considered .",
    "figure [ fig : cerone8 ] shows a two - dimensional plot of the indicator function @xmath19 , and the corresponding optimal solution @xmath37 for @xmath52 . the results of algorithm 1 are reported in figure [ fig : cerone8samples ] .",
    "the red points represent the points which have been discarded . to this regard",
    ", it is important to notice that also some point falling inside @xmath6 has been rejected .",
    "this is fundamental to guarantee uniformity of the discarded points .    ]",
    "defined in ( [ k - es ] ) , the pink area is the superlevel set @xmath100 .",
    "the red dots are the discarded samples .",
    "the remaining samples ( blue ) are uniformly distributed inside @xmath6 .",
    "[ fig : cerone8samples ] ]",
    "in this paper , a numerically efficient procedure for generating `` truly '' random samples inside a given ( possibly nonconvex ) semialgebraic set @xmath6 has been proposed .",
    "the algorithm is based on an acceptance / rejection scheme constructed upon an optimal polynomial superlevel set guaranteed to contain @xmath6 .",
    "a key feature of the method is that , for a given set @xmath6 and polynomial degree @xmath17 , this approximation , which is undoubtedly the most time - consuming step of the sampling scheme , can be constructed _ a priori _ and once for all , and then be used for online generation .",
    "the rejection rate is shown to become asymptotically optimal when the degree of the polynomial approximation increases .",
    "future work will concentrate on the application of this to specific fixed - order controller design problems .",
    "this work was partially supported by a bilateral project cnr - cnrs ."
  ],
  "abstract_text": [
    "<S> we propose efficient techniques for generating independent identically distributed uniform random samples inside semialgebraic sets . </S>",
    "<S> the proposed algorithm leverages recent results on the approximation of indicator functions by polynomials to develop acceptance / rejection based sample generation algorithms with guaranteed performance in terms of rejection rate ( the number of samples that should be generated in order to obtain an accepted sample ) . </S>",
    "<S> moreover , the acceptance rate is shown to be is asymptotically optimal , in the sense that it tends to one ( all samples accepted ) as the degree of the polynomial approximation increases . </S>",
    "<S> the performance of the proposed method is illustrated by a numerical example . </S>"
  ]
}
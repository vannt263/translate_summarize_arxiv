{
  "article_text": [
    "the computational complexity of video games is a topic that has earned a significant amount of attention in recent years .",
    "many video games have been proved to be np - hard , including _",
    "@xcite , _ commander keen _",
    "@xcite , _ flood - it ! _ @xcite , _ lemmings _",
    "@xcite , _ minesweeper _",
    "@xcite , _ pac - man _",
    "@xcite , _ sokoban _",
    "@xcite , and _ tetris _ @xcite ( see also the survey article @xcite ) .",
    "most video games that have been studied from a computational complexity point of view are classics : games that were originally developed while video gaming was in its infancy . in the present paper , we instead study the modern video game _",
    "final fantasy xiii-2 _ , which was released for the playstation 3 and xbox 360 video game consoles in early 2012 . in this game ,",
    "the player is frequently tasked with solving one of three types of `` temporal rift '' puzzles in order to advance .",
    "we investigate and derive a hardness result for all three of these puzzles .    the first puzzle , called _ tile trial _",
    ", tasks the player with collecting crystals that are placed on square tiles , while being careful not to step on any tile more than once .",
    "we show that the tile trial puzzle is np - hard in section  [ sec : tile_trial ] . the second puzzle , called _ crystal bonds _ ,",
    "is investigated in section  [ sec : crystal_bonds ] .",
    "this puzzle presents several crystals laid out on a grid , and asks the player to form bonds between some specified pairs of crystals before time runs out .",
    "we show that an optimal solution to the crystal bonds puzzle can be found in polynomial time , but a natural generalization of the puzzle is np - hard .",
    "finally , in section  [ sec : hands_of_time ] we consider the third puzzle , called _ hands of time _ , in which the player tries to navigate a clock face subject to certain movement restrictions .",
    "we show that solving partially - completed hands of time puzzles is also an np - hard problem .",
    "note that the reader is assumed to be familiar with basic concepts in graph theory .",
    "all of our reductions are from various forms of the hamiltonian path problem  that is , the problem of finding a path on a graph that visits every vertex exactly once .",
    "we use the term _ grid graph _ to refer to an undirected graph in which every vertex is located at a point on the @xmath0-dimensional integer lattice @xmath1 and there is an edge between two vertices if and only if the ( euclidean ) distance between them is @xmath2 .",
    "the first puzzle introduced in the game is called _ tile trial _ , which presents the player with a grid of tiles , some of which have crystals on them .",
    "the goal is to retrieve all of the crystals and reach the exit , while stepping on each tile no more than once ",
    "see figure  [ fig : tile_trial ] .",
    "the player s starting tile is always on one far end of the grid , while the finishing tile is on the opposite end of the grid .    )",
    "is touched and no tile is touched more than once . the path traced out by the grey dotted line is a solution to the given puzzle . ]",
    "some of the more difficult tile trial puzzles add in two additional challenges : some tiles may be stepped on twice , and some crystals periodically move between two different tiles .",
    "we now show that tile trial puzzles are np - hard even if the crystals never move .",
    "the tile trial puzzle is np - hard ( and the associated decision problem is np - complete ) .",
    "consider an arbitrary grid graph .",
    "construct a tile trial puzzle by first placing a tile and a crystal at each of the vertices of the graph . then choose one of the bottommost tiles and let this tile be stepped on twice .",
    "place two tiles , each of which may be stepped on twice , in a vertical line below this bottommost tile , as in figure  [ fig : tile_trial2 ] .",
    "finally , create a path from the new bottommost tile that leads left to the player s starting tile , and another path that leads right to the finishing tile .",
    "it is clear that this tile trial puzzle has a solution if and only if the original directed graph has a hamiltonian cycle . because the hamiltonian cycle problem on grid graphs is np - hard @xcite",
    ", np - hardness of tile trial puzzles follows .    to see that the problem of deciding whether or not a given tile trial puzzle is solvable is np - complete , note that it is trivial to verify whether or not a given path touches every tile at most once ( or twice for certain tiles ) and touches every crystal , so this problem is in np .",
    "the second puzzle introduced to the player is called _ crystal bonds _ , which presents the player with an orthogonal grid of tiles , some of which contain crystals , and a designated starting tile on a far side of the grid ( much like the tile trial puzzle ) .",
    "in this puzzle , however , there are straight lines drawn between some crystals , and the goal is to bond all of the indicated crystals by walking between them before time runs out ( see figure  [ fig : crystal_bonds ] ) . because the player walks at a constant speed , we consider the problem of minimizing the distance that needs to be traveled ( rather than time ) in order to solve the puzzle .",
    "some points of clarification about the rules of this puzzle include :     grid .",
    "the goal is to bond each pair of crystals ( @xmath3 ) that are connected by a black line before time runs out .",
    "a solution of minimum distance is overlaid as a grey dotted line .",
    "the player starts at the tile marked `` s '' , but may end at any crystal of their choosing ( the bottom - left crystal in the given solution ) . ]",
    "* the player may move in any direction ",
    "they are not restricted to movement orthogonally along the tiles .",
    "* the player may only move between tiles that are connected orthogonally ( i.e. , along their edges )  movement between tiles that are connected only at a corner is not allowed unless there is another tile that connects to both of them orthogonally .",
    "* lines between crystals may go over empty space on which the player can not walk .",
    "the player s path between those crystals does not need to be a straight line . *",
    "the graph of crystal bonds ( where crystals are the vertices and the bonds that must be formed are the edges ) is always a tree .",
    "* the player may only create one bond between pairs of crystals at a time .",
    "for example , in figure  [ fig : crystal_bonds_link ] the player can not create both bonds by walking along the path @xmath4 or @xmath5 .",
    "however , they can create both bonds by following the longer path @xmath6 .     crystals . ]",
    "note that in the game , crystals periodically change color , and crystals can only be bonded when they are both the same color .",
    "we ignore this additional gameplay element , however , as it does not affect our results .",
    "we now show that the optimal solution to the crystal bonds puzzle ( i.e. , the path of minimum length that bonds all of the specified pairs of crystals ) can be found efficiently .",
    "[ thm : crystal_bonds ] the optimal solution to a crystal bonds puzzle on an @xmath7 grid with @xmath8 crystals can be found in @xmath9 time .",
    "we present an algorithm that solves crystal bonds puzzles in two steps .",
    "the first step can be completed in @xmath10 time , while the second step can be completed in @xmath11 time .",
    "taking the longest running time of these two steps gives the result .",
    "our first step is to compute the minimum walking distance between any two crystals ( even between pairs of crystals that we do nt need to bond ) . given a fixed point in the plane and polygonal obstacles containing a total of @xmath12 vertices , a _ shortest path map _ can be computed in @xmath13 time via the algorithm of @xcite . from this shortest path map ,",
    "the minimum distance between the fixed point and any other point can be computed in @xmath14 time .",
    "the obstacles in this case are the missing tiles , so there are certainly no more than @xmath15 ( i.e. , @xmath16 ) vertices of obstacles",
    ". thus we can compute the minimum walking distance between a single crystal and all other crystals in @xmath17 time , and so we can find the minimum walking distance between all pairs of crystals in @xmath10 time .",
    "our next step is to consider the complete graph @xmath18 whose vertices are the @xmath8 crystals , and weigh each edge of @xmath18 to be the minimum walking distance between the two crystals at its endpoints .",
    "the problem of bonding the specified crystals is now a special case of the _ rural postman problem _ @xcite , which asks for the shortest path on an undirected graph @xmath19 that uses each edge in some specified subset @xmath20 of the edges of @xmath19 at least once . for us ,",
    "@xmath21 and @xmath20 is the set of edges corresponding to the required bonds between crystals .",
    "the rural postman problem can be solved in @xmath22 time @xcite , where @xmath23 is the number of vertices of @xmath19 and @xmath24 is the number of connected components of the subgraph of @xmath19 whose edges are the elements of @xmath20 . in our situation , we have @xmath25 because the set @xmath20 forms a tree and is thus connected , and @xmath26 .",
    "it follows that this step can be completed in @xmath11 time .",
    "even though crystal bonds puzzles can be solved in polynomial time , there is a natural generalization that is @xmath27-hard .",
    "we call a puzzle that is the same as a crystal bonds puzzle , except which allows the graph of crystal bonds to be disconnected ( rather than forcing it to be a tree ) , a disconnected crystal bonds puzzle . recall that the algorithm of theorem  [ thm : crystal_bonds ] relied on finding a solution to the rural postman problem . even though the rural postman problem can be solved in polynomial time as long as the set of required edges is connected ( or even if it contains a constant number of connected components @xcite ) , it becomes np - hard if the number of connected components is allowed to grow @xcite .",
    "the crystal bonds puzzle behaves similarly .",
    "we saw that it is solvable in polynomial time when the graph of crystal bonds is connected , and a similar argument works to show that it is solvable in polynomial time if we let the graph of crystal bonds have a constant number of connected components .",
    "however , we now show that if we place no restrictions on the crystal bonds , then the puzzle becomes np - hard .",
    "the disconnected crystal bonds puzzle is np - hard ( and the associated decision problem is np - complete ) .",
    "a proposed solution of the disconnected crystal bonds puzzle can have its length verified in polynomial time , so the decision problem version of the puzzle ( i.e. , the problem that asks whether there exists a solution with walking distance @xmath28 ) is in np .",
    "we now demonstrate np - hardness .",
    "we prove the result via a reduction from the np - hard problem of finding hamiltonian paths on grid graphs @xcite . given a grid graph with @xmath23 vertices",
    ", we construct a disconnected crystal bonds puzzle by placing a tile with a crystal on it at each vertex of the grid graph and @xmath29 tiles along each edge of the grid graph , as in figure  [ fig : disconnected_crystal_bonds ] .",
    "we also place one crystal in a single ( arbitrarily - chosen ) tile adjacent to each of the tiles already containing a crystal , and we draw lines connecting these adjacent pairs of crystals",
    ".     vertices .",
    "( right ) a corresponding disconnected crystal bonds puzzle with minimal solution length @xmath30 , indicating that the graph on the left has a hamiltonian path.,scaledwidth=95.0% ]    walking along an edge of the grid graph corresponds to the player walking a distance of @xmath31 tiles in a straight line in the disconnected crystal bonds puzzle .",
    "once the player is at a tile corresponding to a vertex , they can connect the crystal there to the adjacent crystal by walking a distance of no more than @xmath0 : one tile to the adjacent crystal , and one tile back .",
    "thus , if the original grid graph has a hamiltonian path , then the disconnected crystal bonds puzzle has a solution of length no longer than @xmath32 . on the other hand ,",
    "if the original grid graph does not have a hamiltonian path , then the optimal solution to the disconnected crystal bonds puzzle has length at least @xmath33 , and np - hardness follows .    for simplicity , we ignored the fact that the starting tile is always on a far side of the grid and we constructed a disconnected crystal bonds puzzle as if we could start wherever we like .",
    "this technicality can be accounted for as follows .",
    "if one of the leftmost vertices of the grid graph has degree @xmath2 , simply place the starting tile adjacent to the corresponding crystal in the disconnected crystal bonds puzzle .",
    "otherwise , choose one of the leftmost vertices of the grid graph with degree @xmath0 and place the starting tile adjacent to the corresponding crystal .",
    "furthermore , alter the puzzle by removing the empty tile that is adjacent to this crystal , extending the newly - broken path by a length of two , and adding a pair of crystals on the two new tiles , as in figure  [ fig : disconnected_crystal_bonds2 ] .",
    "now a solution of length @xmath34 indicates a hamiltonian cycle ( rather than a hamiltonian path ) , while the optimal solution having length @xmath35 indicates that the graph has no hamiltonian cycle .",
    "the third and final puzzle to be introduced in _ final fantasy xiii-2 _ is called _ hands of time_. this puzzle presents the player with @xmath36 nodes arranged around a circular clock face , and on each node is a positive integer from @xmath2 to @xmath37 ( inclusive ) .",
    "the rules of the puzzle are as follows :    1 .",
    "the player starts by selecting one of the @xmath36 nodes on the clock face .",
    "let s call the number in the selected node @xmath38 . upon selecting this node , its number vanishes , leaving the node empty .",
    "the player now has the option of selecting either the node @xmath38 positions clockwise from their last choice , or @xmath38 positions counter - clockwise from their last choice .",
    "the value @xmath38 is updated to be the number on the newly - selected node .",
    "that number then vanishes from the node , leaving the node empty .",
    "3 .   the player may never select an empty node ( i.e. , a node they have already selected in the past ) .",
    "step 2 is repeated until they have no valid moves remaining .",
    "the goal of the puzzle is to select every node on the clock face before running out of valid moves .    in order to analyze hands of time puzzles",
    ", we first note that they can be represented as directed graphs in which the vertices represent the @xmath36 nodes on the clock face and the directed edges represent the valid moves clockwise and counter - clockwise from each node .",
    "a hands of time puzzle then tasks the player with finding a directed hamiltonian path on this directed graph  see figure  [ fig : hands_of_time ] .",
    "the numbers on the nodes indicate how many positions clockwise or counter - clockwise the player is allowed to jump .",
    "( right ) the same hands of time puzzle , depicted as a directed graph .",
    "the black directed edges indicate a solution to the puzzle ( i.e. , a directed hamiltonian path on the graph ) , while the grey directed edges indicate valid moves that are not part of that solution . ]",
    "finding directed hamiltonian paths in general is np - hard @xcite , even when each vertex has outdegree @xmath2 or @xmath0 @xcite , so we might expect that the hands of time puzzle is np - hard . on the other hand , if we allow the player to move at most @xmath38 nodes clockwise or counter - clockwise in step 2 of the puzzle ( rather than exactly @xmath38 nodes ) , the problem becomes a directed analogue of the problem of finding a hamiltonian path on a circular - arc graph , which can be solved in polynomial time @xcite .",
    "the complexity of the hands of time puzzle is thus not clear .",
    "we now show that a slight generalization of the hands of time puzzle is np - hard : the problem of solving a hands of time puzzle that has potentially been partially solved .",
    "we call a puzzle that plays the same as a hands of time puzzle , but potentially has some empty nodes around the clock face , a _ partial hands of time _ puzzle  see figure  [ fig : partial_hands_of_time ] . note that a partial hands of time puzzle can be encoded by listing the positions of non - empty nodes and the numbers on them , and we assume this encoding ( or one of comparable efficiency ) throughout the following proof",
    ". note in particular that , under this encoding , the number of empty nodes around the clock face can be exponential in @xmath36 ( the number of non - empty nodes ) while keeping the input length polynomial in @xmath36 .",
    "the partial hands of time puzzle is np - hard ( and the associated decision problem is np - complete ) .    as with the previous puzzles ,",
    "it is trivial to verify a proposed solution to a partial hands of time puzzle , so we only need to show that it is np - hard .",
    "we prove np - hardness via a reduction from the problem of finding a hamiltonian path on a directed graph in which each vertex has outdegree @xmath2 or @xmath0 , which is known to be np - hard @xcite .",
    "we construct a partial hands of time puzzle whose associated directed graph ( as in figure  [ fig : partial_hands_of_time ] ) is a given arbitrary directed graph with vertices of outdegree @xmath2 or @xmath0 , plus perhaps some extra ( irrelevant ) vertices that have indegree and outdegree both equal to @xmath2 along some edges . because the partial hands of time puzzle has a solution if and only if the associated directed graph has a hamiltonian path , and vertices with indegree and outdegree equal to @xmath2 do nt affect the presence of hamiltonian paths , np - hardness follows .    to this end , fix a directed graph with @xmath23 vertices , and consider a partial hands of time puzzle with @xmath23 nodes ( we refer to these original @xmath23 nodes as _ primary nodes _ ) .",
    "label the primary nodes ( reading clockwise , choosing a starting point arbitrarily ) @xmath39 and associate the primary nodes bijectively ( and arbitrarily ) with the @xmath23 vertices of the directed graph .",
    "insert @xmath40 nodes between nodes @xmath41 and @xmath42 for @xmath43 and insert @xmath44 nodes between nodes @xmath45 and @xmath46 ( we refer to these newly - added nodes as _ secondary nodes _ ) . label the secondary nodes inserted between @xmath41 and @xmath42 ( again , reading clockwise ) as @xmath47 and label the secondary nodes inserted between @xmath45 and @xmath46 as @xmath48  see figure  [ fig : partial_hands_of_time_construct ] .     or @xmath0 .",
    "( right ) a partial hands of time puzzle constructed from the graph on the left .",
    "the four large circles represent the primary nodes ( which correspond to the four vertices in the directed graph ) , while the small circles represent the secondary nodes .",
    "the labels for the nodes are written in grey , while the black numbers within the circles , represent how far the player moves from that node.,scaledwidth=95.0% ]    we now place integers on the nodes of the partial hands of time puzzle so that it has a solution if and only if the given directed graph has a hamiltonian path .",
    "each vertex @xmath49 in the graph has a directed edge leading to a vertex @xmath41 , and possibly a second directed edge leading to another vertex @xmath50 , and we choose this labeling so that @xmath51 .",
    "the procedure for placing numbers on the nodes is as follows :    1 .",
    "on node @xmath49 , place the integer @xmath52 , which allows the player to move from node @xmath49 to node @xmath41 .",
    "2 .   by placing an integer on the node @xmath49 in the previous step , the player may now also move the distance @xmath53 away from node @xmath41 .",
    "if the outdegree of vertex @xmath49 is @xmath0 , we now consider three cases to make use of this fact : 1 .   if @xmath54 , place on node @xmath55 the integer @xmath56 , which we define as @xmath57 .",
    "2 .   if @xmath58 , place on node @xmath55 the integer @xmath56 , which we define as @xmath59 .",
    "3 .   if @xmath60 , place on node @xmath61 the integer @xmath56 , which we define as @xmath57 .",
    "+ note that in all three cases we have placed a number on a secondary node that makes the sequence of moves @xmath62 possible .",
    "note also that the puzzle has at most @xmath29 non - empty nodes ( @xmath23 primary and @xmath63 secondary ) .",
    "we now prove that this procedure produces a partial hands of time puzzle that is solvable if and only if the original directed graph has a hamiltonian path . for the most part",
    "this is clear ",
    "we constructed the puzzle in such a way that each directed edge of the graph corresponds to either one or two moves in the puzzle .",
    "however , we must show that we have not introduced any new paths through the puzzle  that is , we have to show that there is no way to land on a non - empty node via a move other than one of the moves suggested above .",
    "when moving from a primary node , this is clear because it is easily verified that    * @xmath64 when @xmath65 , and * the first decimal digit of @xmath66 in case 2(c ) above is @xmath67 or @xmath68 , while @xmath53 in cases 2(a ) and 2(b ) contains only the digits @xmath69 and @xmath2 ( so @xmath70 for all @xmath71 ) .    before considering the case where the player moves from a non - empty secondary node ,",
    "we first note from step 2 above that each non - empty secondary node is of the form @xmath72 , where @xmath8 is a number whose decimal expansion contains either only @xmath69 and @xmath2 ( cases 2(a ) and 2(b ) ) or only @xmath2 , @xmath67 , and @xmath68 ( case 2(c ) ) .",
    "similarly , @xmath56 is an integer whose decimal expansion contains either only @xmath69 , @xmath2 , and @xmath0 ( cases 2(a ) and 2(c ) ) or only @xmath69 , @xmath2 , @xmath67 , and @xmath68 ( case 2(b ) ) .",
    "if we start on a non - empty secondary node and move away from @xmath50 in case 2(a ) above , we end up at the secondary node @xmath73 .",
    "since @xmath74 contains a @xmath0 as its @xmath75th decimal digit , this secondary node must be empty .",
    "if we move away from @xmath50 in case 2(b ) above , we end up at the secondary node @xmath76 .",
    "since @xmath77 contains a @xmath0 as its @xmath75th decimal digit , this secondary node must be empty .",
    "finally , if we move away from @xmath50 in case 2(c ) above , we end up at the secondary node @xmath78 .",
    "the distance between this node and a non - empty secondary node from case 2(c ) above is @xmath79 , if we assume without loss of generality that @xmath80 .",
    "since the @xmath81 term ensures that this last quantity is non - zero for any values of @xmath82 , we see that the secondary node @xmath78 is empty , completing the proof .",
    "while we have proved np - hardness for the tile trial puzzle and shown that the crystal bonds puzzle can be efficiently solved , our only result on the hands of time puzzle concerns its partially - solved generalization .",
    "a strengthening of our result on the hands of time puzzle would be of interest .",
    "in particular , our proof of np - hardness depends on the construction of a partial hands of time puzzle in which there are a potentially exponential number of empty nodes ; does the puzzle remain np - hard if the number of empty nodes is promised to be polynomial in the number of non - empty nodes ( i.e. , is the partial hands of time puzzle strongly np - hard ) ?",
    "better yet , is the hands of time puzzle itself np - hard ?",
    "bdd+02 d.  arthur , r.  clifford , m.  jalsenius , a.  montanaro , and b.  sach .",
    "the complexity of flood filling games . in _ proceedings of the international conference on fun with algorithms ( fun10 ) _ , 307318 , 2010 .",
    "t.  c.  biedl , e.  demaine , m.  l.  demaine , r.  fleischer , l.  jacobsen , and j.  i.  munro .",
    "the complexity of clickomania . in _ more games of no chance _ , cambridge university press , edited by r.  j.  nowakowski , 389404 , 2002 .",
    "r .- w .  hung , m .- s .",
    "chang , and c .- h .",
    "the hamiltonian cycle problem on circular - arc graphs . in _ proceedings of the international multiconference of engineers and computer scientists _",
    ", 630637 , 2009 ."
  ],
  "abstract_text": [
    "<S> we analyze the computational complexity of solving the three `` temporal rift '' puzzles in the recent popular video game _ final fantasy xiii-2_. </S>",
    "<S> we show that the tile trial puzzle is np - hard and we provide an efficient algorithm for solving the crystal bonds puzzle . </S>",
    "<S> we also show that slight generalizations of the crystal bonds and hands of time puzzles are np - hard .    </S>",
    "<S> hamiltonian paths , video games , puzzles , grid graphs , computational complexity </S>"
  ]
}
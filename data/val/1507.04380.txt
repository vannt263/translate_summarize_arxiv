{
  "article_text": [
    "humanoid robots locomoting and performing manipulation tasks on uneven ground are required to actively apply forces on objects and the floor in order to achieve their task successfully .",
    "a direct effect of contact forces is a change of momentum in the robot , which on the one hand is necessary to move the center of mass , but on the other hand restricts the type of limb motion that the robot can perform .",
    "the nonlinear nature of the angular momentum dynamics makes preview - based control computationally hard in general and even with an admissible angular momentum trajectory open control parameters like the joint motion and feedback control remain problematic for use in a whole body control framework .",
    "successful applications of simplified momentum models have been shown on robots walking quite robustly over flat ground .",
    "a common approach is to use the linear inverted pendulum model ( lipm ) , which has been exploited for preview control since it was introduced by kajita et .",
    "al  @xcite . in  @xcite ,",
    "a model predictive control ( mpc ) approach is formulated that finds foot steps on a flat ground together with a compatible com location on a horizontal plane .",
    "com profiles can then be realized on the full body together with other limb motion ( e.g. swing leg ) controllers  @xcite ,  @xcite  @xcite ,  @xcite .",
    "the assumption of a horizontal com motion and flat ground can be relaxed to a pre - designed com height profile  @xcite ,  @xcite .",
    "although , less restrictive than the original lipm , these approaches are either built for point feet or leave parts of the dynamics uncontrolled . depending on the terrain , pre - defining the com along a fixed direction may result in suboptimal or infeasible reaction forces .",
    "approaches that leave the regime of linear models have been proposed , for instance for long jumps  @xcite leading to more complex task behavior .",
    "however , they often require task specific models that for example take into account the swing leg dynamics . going even further ,",
    "we have seen work that optimizes over the whole joint trajectories and the full momentum together  @xcite .",
    "the impressive near - to physical motions , however , come at a high computational cost .",
    "time - local controllers , have shown that balancing performance of robots is improved , when overall angular momentum is damped out directly  @xcite .",
    "nevertheless , it has remained unclear how angular momentum profiles should be chosen in non - static configurations .    in this paper , we consider the full momentum dynamics of the robot for generation of com and momentum trajectories and the according reaction force profiles at each contact .",
    "we formulate the problem as a continuous - time optimal control problem in a sequential form .",
    "a mode schedule is predefined together with end effector trajectories .",
    "a desired angular momentum trajectory , which is required for the limb motion , is generated from a simple inverse kinematics forward integration and realized with admissible contact forces in a least squares optimal sense .",
    "since the kinematics information is used before the optimization over the dynamics , our optimization procedure is relatively fast ( for example compared to @xcite ) . in our previous work",
    "@xcite we have proposed a way to compute control gains for the momentum task using a lqr design approach .",
    "we showed that it was able to significantly improve performance for balancing tasks on a real humanoid .",
    "however , this approach was only used for stabilization . in this paper , we extend the approach to receding horizon tracking control .",
    "we use the planned trajectories to generate feedback gains using a lqr design where we linearize the non - linear momentum dynamics around the optimized trajectory . in a simulated stepping task ,",
    "our humanoid traverses a terrain with changing height and angled stepping stones successfully .",
    "a whole - body controller computes joint torques that realize feedback loops on momentum as well as the swing leg motion and respect additional balancing and hardware constraints and generates physically realizable contact forces .",
    "a good tracking of overall momentum is achieved using our receding horizon lqr design . + this paper",
    "is organized as follows . in sec",
    "[ sec : momentum_trajectory ] we formulate an optimal control problem to obtain momentum trajectories of the robot .",
    "resulting trajectories are controlled with a lqr feedback design as discussed in sec  [ sec : momentum_lqr ] which is then incorporated into a whole - body control approach as explained in sec  [ sec : whole_body ] . in sec",
    "[ sec : results ] we demonstrate our control framework on a simulated stepping task on rough terrain .",
    "we discuss our results in sec  [ sec : discussion ] and finish with a conclusion in sec  [ sec : conclusion ] .",
    "in this section , we describe how the robot momentum is planned together with admissible contact forces .",
    "we will first discuss the reduced dynamics model which will then be used to phrase an optimal control problem to generate com and momentum profiles . at the end of the section",
    "we describe how a desired angular momentum is chosen for optimization .       of the system and contacts with the environment .",
    "states and controls are color - labeled blue and orange respectively .",
    "flat contacts that consist of a force , center of pressure and normal torque ( here @xmath0 ) can be modeled ( e.g. a hand touching a wall ) as well as point contacts like @xmath1 .",
    "there is no restriction on the pose of contacts nor the com .",
    "momenta generated around the com are not necessarily zero . ]",
    "we reduce the state of a robot to its center of mass ( com ) @xmath2 and overall momentum @xmath3 with linear @xmath4 and angular @xmath5 momenta .",
    "the state of the system is controlled by forces @xmath6 and torques @xmath7 acting at points @xmath8 on the mechanical structure .",
    "the momentum dynamics as illustrated in fig  [ fig : mass_and_contacts ] can be written @xmath9 where @xmath10 is the mass of the robot .",
    "the contact points @xmath8 can for instance be point foot locations that are touching the ground or they can represent the position of a handle that the robot holds on to .",
    "flat feet can be modeled by several contact points on the foot surface .",
    "equivalently , we can represent the effective force at the center of pressure ( cop ) . depending on the type of contact",
    ", it will be necessary to express constraints on the forces . in the case of point feet , no torques @xmath7 can be generated .",
    "torques that are generated at the cop of a flat foot are required to be normal to the foot surface .",
    "further , if we assume stationary contact points , we need to restrict the wrench to remain in a friction cone .      in the following we use the momentum dynamics of the robot to plan for admissible contact forces that generate desired ( linear and angular ) momentum trajectories .",
    "our goal is to compute force and contact point trajectories @xmath11 that satisfy the momentum dynamics in eqs  ( [ eq : momentum_dynamics_1]-[eq : momentum_dynamics_3 ] ) and contact constraints at all time .",
    "these trajectories are also required to steer the momentum through desired states over a time horizon @xmath12 . given the initial state of the robot com and momentum @xmath13 , we can integrate eqs  ( [ eq : momentum_dynamics_1]-[eq : momentum_dynamics_3 ] ) to obtain @xmath14 note that the states are expressed as ( nested ) functions of the reaction forces .",
    "they are constructed by integrating , summing and applying the cross - product on @xmath11 . given a naive idea of what the desired com @xmath15 and momentum @xmath16 should be ( e.g. coming from an initial kinematic plan ) ,",
    "we want to find contact forces that minimize the error    @xmath17    where we compute the errors at @xmath18 $ ] and @xmath19 are diagonal weighting matrices that allow trade - offs between the cost terms .      throughout the discussion in this paper",
    "we assume that the end effector moves between a series of predefined locations .",
    "however , this assumption can be relaxed without making the optimization problem harder .",
    "we simply substitute @xmath20 , where @xmath21 is the foot sole location that remains stationary throughout a contact phase and @xmath22 is the ( time - varying ) center of pressure inside of the foot sole . in this reformulation both , @xmath21 and @xmath22 ,",
    "will be optimization variables and are chosen automatically .",
    "the support planes still have to be decided before - hand , e.g. using a dedicated acyclic contact planer @xcite .",
    "we will now formulate the described problem into an optimization problem .",
    "first , the reaction forces are formulated as weighted basis functions , more specifically as polynomials of the form    @xmath23    with weights @xmath24 and basis functions @xmath25 summarized in vectors @xmath26 .",
    "we define the mode - scheduling variable @xmath27 which specifies contact activation and deactivation and is set before - hand , for example it could be obtained by a higher level planner .",
    "polynomials have the advantage of generating smooth force trajectories by construction .",
    "the forces can then be written as    @xmath28    where the subscript identifies the end effector , the superscript represents the coordinates and @xmath29 is the normal vector of the foot sole .",
    "contact forces , torques and cops thus become linear functions of polynomial coefficients .",
    "expressing the states in eqs  ( [ eq : state_quantities_1]-[eq : state_quantities_5 ] ) with eqs  ( [ eq : control_representation_1]-[eq : control_representation_3 ] ) substituted , gives us the states as functions of time and polynomial coefficients . at the core of operations required to carry out the result are multiplication , summation and integration of polynomials , which can be computed analytically . as a result",
    ", we phrased our optimal control problem in sequential form , where our controls evaluate directly to states and the dynamics equations ( cf .",
    "eqs  ( [ eq : momentum_dynamics_1]-[eq : momentum_dynamics_2 ] ) ) are implicitly incorporated .",
    "this allows us to phrase our optimization problem    @xmath30    where @xmath31 is a concatenation of variables @xmath32 .",
    "we try to find polynomial coefficients @xmath31 that minimize the error cost @xmath33 while satisfying friction and support bound constraints on forces .",
    "eqs  ( [ eq : cop_constr]-[eq : trq_constr ] ) bound the cops and torques . in eq",
    "we impose a friction cone constraint approximated as pyramid and upper bound it by a sufficiently large value @xmath34 to keep the polynomials from penetrating the lower bound and escaping above . in our constraints in eqs  ( [ eq : cop_constr]-[eq : fric_constr ] )",
    ", we wish to have bounds that hold at all @xmath35 $ ] ; in practice however , we express them at a finite number of time steps . given the limited flexibility of polynomials , we get minor penetration of those constraints in intervals @xmath36 .",
    "note that all our constraints are linear , whereas the objective function has quadratic terms as well as higher order ( non - convex ) terms due to the costs on angular momentum .",
    "since the dynamics are not further simplified , we have the benefit that all states and controls are included in the cost @xmath33 and none of them are left uncontrolled .",
    "given that the problem in eq   is non - convex , we can not expect to find a global optimum in general but need to find a local optimum starting from an initial guess @xmath37 . in our approach",
    "we use a receding horizon technique .",
    "we start out by solving our problem for a horizon @xmath38 and obtain an optimal solution @xmath39}^*$ ] .",
    "typically , we start our desired motion such that it is easy to solve in the interval @xmath40}$ ] , i.e. the robot is standing still and applying gravity compensation is already optimal .",
    "then , we formulate our problem for the interval @xmath41 $ ] where we initialize our optimizer with the previous solution .",
    "this has the advantage that an initial solution can be bootstrapped from an initial easier - to - solve configuration and then moved over the horizon to the difficult parts of the motion .",
    "further , as we push our implementation to run in real - time , we seek to use it in a receding horizon control setting .",
    "most simplified momentum models assume that angular momentum is desired to remain at zero .",
    "this , however , ignores the fact that momentum might be required to move the robot limbs .",
    "e.g. in a stepping task we need to swing a leg , which in turn generates a momentum around the hip .",
    "thus , it is not trivial to decide what the desired angular momentum should look like . in order to overcome this issue ,",
    "we integrate forward our desired swing leg trajectories using inverse kinematics . from the resulting joint motion",
    "we then compute @xmath42 ( explained e.g. in  @xcite ) .",
    "although dynamically not feasible , this method generates angular momentum profiles required to perform the task - imposed motion , e.g. swinging a leg .",
    "we iterate between kinematic forward integration of an optimized @xmath43 and optimizing a desired @xmath44 with dynamic constraints ( by solving the problem in eqs  ( [ eq : optimization_problem]-[eq : fric_constr ] ) ) . in our experiments",
    "two passes already lead to convergence , i.e. forward integrated and optimized trajectories do not differ significantly . with this iteration",
    "we not only generate admissible force profiles that obey the momentum dynamics equations but also we can bootstrap angular momentum trajectories which are not obvious to design otherwise .",
    "note that neither com nor momentum are predefined in advance .",
    "instead an initial guess is given and the final trajectories are found automatically .",
    "in the previous section we described how reference trajectories in accordance with the momentum dynamics are obtained . in order to track those trajectories on the full robot ,",
    "we propose a feedback law using a lqr design , which has shown superior performance compared to a naive pd gain approach in experiments on the real robot  @xcite . from our trajectory optimizer",
    "we obtain admissible states and controls    @xmath45    where we transform wrenches @xmath46 to the stationary poles @xmath21 .",
    "+ the dynamics function in eq   is discretized and linearized around the desired trajectories @xmath47 .",
    "the resulting time varying - linear dynamics are then used to formalize a finite horizon lqr problem .",
    "this yields a control policy @xmath48 with time - varying feedforward and feedback terms that map errors in states into contact wrenches .",
    "controlling the momentum with this feedback law requires 6 dof for wrenches at each contact .",
    "since our whole - body controller incorporates additional control objectives and force constraints , we compute directly the momentum rate that the wrenches generate    @xmath49_{\\times } & \\mathbf{i}_{3\\times 3 } & \\ldots    \\end{bmatrix }                                                          { \\mathbf{k}}_t({\\mathbf{x}}^*-{\\mathbf{x } } ) +                                                           { \\dot{\\mathbf{h}}}^ * ,   \\ ] ]    where @xmath50_\\times$ ] turns a cross - product into a matrix multiplication .",
    "the resolution of momentum rate to contact wrenches is then left to our whole - body controller as described in the next section . in this lqr design",
    "a quadratic performance cost is set once and then optimal gains are computed at each time step for the corresponding contact configuration . as we discussed in our previous work , in order to achieve compatible results with diagonal pd gain matrices , we had to design gains for different contact configurations , whereas the lqr design requires one performance cost and generated suitable gains automatically .",
    "in contrast to our previous work we linearize around desired trajectories , whereas in our robot experiments we used only two key configurations ; this may become limiting in more versatile tasks such as walking over a rough terrain .",
    "the trajectories generated with the model in eqs  ( [ eq : momentum_dynamics_1]-[eq : momentum_dynamics_3 ] ) define the com , momentum and end effector forces of our humanoid . in order to track these trajectories on the full robot ,",
    "we need to generate joint torques accordingly and at the same time control the limb motion and guarantee that other constraints are obeyed , e.g. joint limits . for this time - local control problem ,",
    "we use inverse dynamics in qp cascades , which we applied successfully on the real robot in previous work  @xcite .",
    "it allows us to phrase feedback controllers and constraints as functions of joint accelerations @xmath51 , external generalized forces @xmath52 and joint torques @xmath53 .",
    "for instance , we can express a cartesian controller on the swing foot as an affine function of joint accelerations or a momentum controller as a function of reaction forces .",
    "the latter , for example , would be    @xmath54_{\\times } & \\mathbf{i}_{3\\times 3 } & \\ldots    \\end{bmatrix }                                                          \\boldsymbol{\\lambda } +                                                           \\begin{bmatrix }                                                            m\\mathbf{g }                                                            \\\\",
    "\\mathbf{0 }                                                          \\end{bmatrix }    = \\dot{\\mathbf{h}}_{ref}.\\end{aligned}\\ ] ]    a reference momentum rate @xmath55 can be chosen from a lqr design as demonstrated in our previous work  @xcite and extended in sec  [ sec : momentum_lqr ] . given a set of controllers and tasks",
    ", we find torques that satisfy the dynamics equations of the full robot and at the same time generate the desired task feedback as good as possible .",
    "tasks , however , may conflict , for instance moving the com may require moving the swing leg and vice versa . in these cases ,",
    "qp cascade allow for two types of trade - offs ; we can either weigh tasks against each other or we can prioritize them strictly . especially when it comes to trade - offs between constraints , tasks of interest and redundancy resolution , prioritization can facilitate successful control design .",
    "this section describes our simulation results of the proposed control framework .",
    "we use a model of our sarcos humanoid in the sl simulation environment .",
    "contacts are simulated with a penalty method and stiff springs .",
    "all experiments are performed on a 2.7 ghz intel i7 processor with 16 gb ram .",
    "a task is generated where the robot is to walk on stepping stones that increase in height from one step to the other as visualized in fig  [ fig : task_snapshots ] and shown in the attached video ] .",
    "the z - axis of the inertial frame points up and the robot walks along the y - axis to the front .",
    "two out of the four steps are tilted by @xmath56 . both the change in com height as well as the angled supports break the assumptions made in lipm models and require the consideration of two separate contact wrenches .",
    "we generate swing leg trajectories using cubic splines to parameterize the pose of the foot .",
    "the humanoid starts out in double support at rest .",
    "after the first 3 seconds the left foot breaks contact and moves to an angled support surface located to the front left - hand side of the robot at an increased height ( as shown in fig  [ fig : task_snapshots ] )",
    ". then a contact switch occurs at every second , changing from single support to double support or vice versa .",
    "the second step is again a support surface angled inwards to the robot and located to the front right - hand side .",
    "finally , the robot takes two steps onto a horizontal plateau located slightly below knee height .",
    "+ the planner is initialized with a naive idea of the robot motion where we simply keep the base at a certain height above the feet . after integrating the desired swing foot positions together with the base height using inverse kinematics ( as described in sec  [ seq : optimization_procedure ] )",
    ", we obtain resulting @xmath42 trajectories that take into account the angular momentum required to swing the legs from one stepping stone to the other . the inverse kinematics solution , which is physically not consistent , is then adjusted in the trajectory optimization step to be admissible with respect to constrained forces and cops .",
    "none of the force constraints were notably violated . as can be seen in fig  [ fig : momentum_plan ]",
    "the inverse kinematics - generated com trajectory is modified significantly in the lateral direction and as a consequence the angular momentum in the y - direction is modified as well . after a second iteration of inverse kinematics integration and trajectory optimization , the results have sufficiently converged and we stop .",
    "polynomials of order 3 are chosen and initialized with zero .",
    "the planning process took 4 min and converged after only two iterations .",
    "this allows us to generate a complex motion rather quickly compared to motion planners that are based on more extensive models of the robot .",
    "the numerical optimization problem in eq  [ eq : optimization_problem ] is solved with snopt  @xcite , a sequential quadratic programming method .",
    "+        next , we construct a hierarchy of feedback controllers and constraints in order to realize the momentum profile on the full humanoid . at the highest priority",
    "we express the physical model of the full robot to obtain physically - consistent torques .",
    "this is followed by force and joint limits together with contact constraints . in the third priority",
    "we control the swing leg motion and the momentum and add a posture pd control with a relatively - low weight . in the priorities below , we regularize end effector forces and stabilize the base orientation .",
    "a summary of the task setup is given in tab  [ tab : task_hierarchy ] .",
    "p.1p.27x * rank * & * nr . of eq / ineq constraints",
    "* & * constraint / task * + 1 & @xmath57 eq & newton euler equation + 2 & @xmath58 eq & contact constraints + & @xmath59 ineq & center of presure + & @xmath59 ineq & friction cone + & @xmath60 ineq & joint acceleration limits + 3 & @xmath57 eq & lqr momentum control + & @xmath57 eq & cartesian swing foot control + & @xmath61 eq & pd control on posture + 4 & @xmath58 eq & contact forces control + 5 & @xmath62 eq & base link orientation +    the momentum is controlled with feedback gains designed as described in sec  [ sec : momentum_lqr ] , where our performance cost is fixed for the whole run .",
    "we penalize state errors by @xmath63 , forces by @xmath64 and torques by @xmath65 .",
    "gains are generated over a 2sec horizon with a granularity of 200 time steps .",
    "a sequence of gains is recomputed every 10ms .",
    "+ the robot was able to traverse the terrain successfully .",
    "the momentum trajectories , which were both dynamically consistent as well as compatible with the robots limb motions , could be tracked well as shown in figs  ( [ fig : com_tracking]-  [ fig : mom_tracking ] ) .",
    "torques were generated that are in the bounds of the physical robot s torque limits . in the beginning of the task",
    "the planned com height forces the knees to stretch , which prevents the robot from using its knees to lift the com further , but instead it lifts the arms up rapidly .",
    "this can be avoided by adding a box constraint on the com in the optimization problem in order to consider kinematic limitations .",
    "+ the lqr gain matrices have non - zero off - diagonal values as expected ( cf .",
    "fig  [ fig : momentum_gain ] ) .",
    "for instance , we can see that angular momentum is generated in order to correct for errors in com and linear momentum , which would not be possible with diagonal pd gains .",
    "in fact , we tried to track the planned motion using diagonal pd gains .",
    "we started with values similar to the diagonal of the lqr gain , but we could not find parameters that were stable throughout several contact situations as was the case for the lqr gains .     and",
    "@xmath66 indicate contact switches .",
    "gain profiles change significantly over time and contact configurations .",
    "the gains and momentum dynamics are discontinuous at contact switches .",
    "nevertheless , discontinuities in joint torques were negligible . ]",
    "increasing the terrain difficulty was mainly problematic due to kinematic limits because our naive swing leg trajectories required to keep the heel on the ground during the whole support phase , thus limiting the stepping height .",
    "further , we noted problems with the simulator s contact model , which caused sporadic spikes in the force profile when we applied strong forces on the ground .",
    "+ overall , a complex task could be planned quickly including a non - trivial angular momentum profile that respected the end effector motion .",
    "the proposed feedback control law on the momentum showed good performance when it was embedded in an inverse dynamics task hierarchy .",
    "the momentum model in eqs  ( [ eq : momentum_dynamics_1]-[eq : momentum_dynamics_3 ] ) is often simplified further in order to obtain linear dynamics , which then leads to computationally more efficient algorithms . however , turning multiplicative terms between variables in eq   into linear terms requires potentially restrictive assumptions .",
    "e.g. in the lipm the com height @xmath67 is assumed to be constant , there is one effective @xmath8 , which lies in one horizontal plane , and the force is required to act along @xmath68 . +",
    "since a constant com height may be limiting for tasks that require vertical movement , the authors in  @xcite allow a predefined ( not constant ) @xmath69 . substituting this assumption into eq  , and assuming constant @xmath8 , turns the horizontal angular momentum into a linear function of forces and torques .",
    "assuming in addition that the nonlinear vertical angular momentum can be neglected , the authors end up again with linear dynamics .",
    "if we restrict our dynamics model further into a lipm and use discretized dynamics ( instead of polynomial trajectories ) we can recover the approach of @xcite",
    ". however , this can be restrictive if we want to step on various slopes or when a non - zero angular momentum is required , e.g. to consider limb motion .      in our current work , we focused on the capabilities of the multi - contact dynamics model to generate dynamic motions on uneven terrain and we showed that these behaviors can be controlled on a full humanoid robot .",
    "however , the goal of separating the control process into a predictive control generation on a lower dimensional model and time - local control on the full dynamics has the potential for a fast implementation in a mpc fashion . in our experiments we saw potential drawbacks in our numerical optimization in eq  .",
    "increasing the order of polynomials leads to slower convergence rates , whereas reducing the polynomial dimensions too far may lead to poor flexibility of the trajectory representation .",
    "this may be explained by the discrepancy of basis functions evaluated close to 0 and close to t leading to poorly conditioned problem .",
    "piecewise constant trajectories may overcome this problem .",
    "another point for improvement of the numerical procedure is the formulation of the optimal control problem . in the current formulation , the objective function in eq   has terms up to 4th order ( squared norm of cross products ) .",
    "our numerical solver is based on approximations up to second order , which may limit the region in which approximations are valid .",
    "it is possible ( but out of the scope of this paper ) to rewrite the problem into a ( non - convex ) quadratically constrained quadratic program where the objective function as well as the constraints are quadratic , leading to a better approximation in second order methods and potentially improving convergence .",
    "pushing the implementation towards an online control algorithm is part of our future work .",
    "we presented an approach to control contact forces and momentum for humanoid robots .",
    "com and momentum profiles were obtained in an optimal control framework together with admissible contact forces .",
    "feedback gains are generated from a lqr design , which generates time and contact - configuration dependent gains from a single performance cost .",
    "the resulting controller is embedded in an inverse dynamics - based whole - body controller together with other limb controllers and constraints .",
    "we demonstrated the control framework on a simulation of the sarcos humanoid traversing rough terrain .",
    "physically admissible momentum and force trajectories could be found relatively quickly and were tracked well during the task execution . in future work , we will implement the discussed speed - up and push the optimal controller to run online ."
  ],
  "abstract_text": [
    "<S> simplified models of the dynamics such as the linear inverted pendulum model ( lipm ) have proven to perform well for biped walking on flat ground . however , for more complex tasks the assumptions of these models can become limiting . </S>",
    "<S> for example , the lipm does not allow for the control of contact forces independently , is limited to co - planar contacts and assumes that the angular momentum is zero . in this paper </S>",
    "<S> , we propose to use the full momentum equations of a humanoid robot in a trajectory optimization framework to plan its center of mass , linear and angular momentum trajectories . </S>",
    "<S> the model also allows for planning desired contact forces for each end - effector in arbitrary contact locations . </S>",
    "<S> we extend our previous results on lqr design for momentum control by computing the ( linearized ) optimal momentum feedback law in a receding horizon fashion . </S>",
    "<S> the resulting desired momentum and the associated feedback law are then used in a hierarchical whole body control approach . </S>",
    "<S> simulation experiments show that the approach is computationally fast and is able to generate plans for locomotion on complex terrains while demonstrating good tracking performance for the full humanoid control . </S>"
  ]
}
{
  "article_text": [
    "computational social choice studies computational aspects of voting . for example , how does a coalition of agents compute a manipulation ? can we compile these votes into a more compact form ? how do we decide if we have elicited enough votes from the agents to be able to declare the result ?",
    "whilst there has been a very active research community studying these sort of questions for well known voting rules like plurality and borda , there are other less well known rules that might deserve attention .",
    "in particular , we put forward two historical voting rules due to nanson and baldwin which are related to borda voting .",
    "there are several reasons to consider these two rules .",
    "firstly , they have features that might appeal to the two opposing camps that support borda and condorcet .",
    "in particular , both rules are condorcet consistent as they elect the candidate who beats all others in pairwise elections .",
    "secondly , both rules are elimination style procedures where candidates are successively removed .",
    "other elimination procedures like stv and plurality with runoff are computationally hard to manipulate ( in the case of stv , with or without weights on the votes , whilst in the case of plurality with runoff , only in the case of weighted votes ) .",
    "we might therefore expect nanson s and baldwin s rules to be computationally hard to manipulate .",
    "thirdly , statistical analysis suggest that , whilst the borda rule is vulnerable to manipulation @xcite , nanson s rule is particularly resistant @xcite",
    ". we might expect baldwin to be similarly resistant .",
    "finally , the two rules have been used in real elections in the universitiy of melbourne ( between 1926 and 1982 ) , the university of adelaide ( since 1968 ) , and the state of michigan ( in the 1920s ) .",
    "it is perhaps therefore somewhat surprising that neither rule has received much attention till now in the computational social choice literature .",
    "let @xmath0 be the set of _ candidates _ ( or _ alternatives _ ) .",
    "a linear order on @xmath1 is a transitive , antisymmetric , and total relation on @xmath1 .",
    "the set of all linear orders on @xmath1 is denoted by @xmath2 .",
    "an @xmath3-voter profile @xmath4 on @xmath1 consists of @xmath3 linear orders on @xmath1 .",
    "that is , @xmath5 , where for every @xmath6 , @xmath7 .",
    "the set of all @xmath3-profiles is denoted by @xmath8 .",
    "we let @xmath9 denote the number of candidates .",
    "a ( deterministic ) _ voting rule _",
    "@xmath10 is a function that maps any profile on @xmath1 to a unique winning candidate , that is , @xmath11 . in this paper , if not mentioned otherwise , ties are broken in the fixed order @xmath12 .    _",
    "( positional ) scoring rules _ are commonly used voting rules .",
    "each positional scoring rule is identified by a _ scoring vector _ @xmath13 of @xmath9 integers , for any vote @xmath14 and any candidate @xmath15 , let @xmath16 , where @xmath17 is the rank of @xmath18 in @xmath19 . for any profile @xmath5 ,",
    "let @xmath20 .",
    "the rule selects @xmath21 such that the total score @xmath22 is maximized .",
    "we assume scores are integers and decreasing .",
    "_ borda _ is the positional scoring rule that corresponds to the scoring vector @xmath23 .",
    "we write @xmath24 for the borda score given to candidate @xmath25 from the profile of votes @xmath4 , and @xmath26 where @xmath4 is obvious from the context .",
    "when voters are weighted ( that is , each voter is associated with a positive real number as the weight ) , a positional scoring rule selects the candidate that maximizes the weighted total score .",
    "the _ unweighted ( coalitional ) manipulation _ problem is defined as follows . an instance is a tuple @xmath27 , where @xmath10 is a voting rule , @xmath28 is the non - manipulators profile , @xmath18 is the candidate preferred by the manipulators , and @xmath29 is the set of manipulators .",
    "we are asked whether there exists a profile @xmath30 for the manipulators such that @xmath31 .",
    "the _ weighted ( coalitional ) manipulation _ is defined similarly , where the weights of the voters ( both non - manipulators and manipulators ) are also given as inputs .",
    "as is common in the literature , we break ties in favour of the coalition of the manipulators where appropriate .",
    "the borda rule has several good properties .",
    "for instance , it is monotonic as increasing the score for a candidate only helps them win .",
    "also it never elects the condorcet loser ( a candidate that loses to all others in a majority of head to head elections ) .",
    "however , it may not elect the condorcet winner ( a candidate that beats all others in a majority of head to head elections ) .",
    "nanson s and baldwin s rules , by comparison , always elect the condorcet winner when it exists .",
    "nanson s and baldwin s rules are derived from the borda rule .",
    "nanson s rule eliminates all those candidates with less than the average borda score  @xcite .",
    "the rule is then repeated with the reduced set of candidates until there is a single candidate left .",
    "a closely related voting rule proposed by baldwin successively eliminates the candidate with the lowest borda score until one candidate remains @xcite .",
    "the two rules are closely related , and indeed are sometimes confused .",
    "one of the most appealing properties of nanson s and baldwin s rules is that they are condorcet consistent , i.e. they elect the condorcet winner .",
    "this follows from the fact that the borda score of the condorcet winner is never below the average borda score .",
    "both rules possess several other desirable properties including the majority criterion and the condorcet loser criterion .",
    "there are also properties which distinguish them apart .",
    "for instance , nanson s rule satisfies reversal symmetry ( i.e.  if there is a unique winner and voters reverse their vote then the winner changes ) but baldwin s rule does not .",
    "we start by considering the computational complexity of manipulating both these rules with unweighted votes .",
    "we prove that the coalitional manipulation problem is np - complete for both rules even with a single manipulator .",
    "computational intractability with a single manipulator is known only for a small number of other voting rules including the second order copeland rule  @xcite , stv  @xcite and ranked pairs  @xcite .",
    "in contrast , when there are two or more manipulators , unweighted coalitional manipulation is hard for some other common voting rules  @xcite .",
    "our results therefore significantly increase the size of the set of voting rules used in practice that are known to be np - hard to manipulate with a single manipulator .",
    "this also contrasts to borda where computing a manipulation with a single manipulator is polynomial  @xcite . adding elimination rounds to borda to get nanson s or baldwin s rules increases the computational complexity of computing a manipulation with one manipulator from polynomial to np - hard .",
    "our results are proved by reductions from the exact 3-cover ( x3c ) problem .",
    "an x3c instance contains two sets : @xmath32 and @xmath33 , where @xmath34 and for all @xmath35 , @xmath36 and @xmath37 .",
    "we are asked whether there exists a subset @xmath38 of @xmath39 such that each element in @xmath40 is in exactly one of the 3-sets in @xmath38 .",
    "[ thm : baldwin ] with unweighted votes , the coalitional manipulation problem under baldwin s rule is np - complete even when there is only one manipulator .    *",
    "proof :  * we sketch a reduction from x3c . given an x3c instance @xmath41 ,",
    "we let the set of candidates be @xmath42 , where @xmath18 is the candidate that the manipulator wants to make the winner , @xmath43 , and @xmath44 and @xmath45 are additional candidates .",
    "members of @xmath46 correspond to the 3-sets in @xmath39 .",
    "let @xmath47 .    the profile @xmath4 contains two parts : @xmath48 , which is used to control the changes in the score differences between candidates , after a set of candidates are removed , and @xmath49 , which is used to balance the score differences between the candidates .",
    "we define the votes @xmath50 where @xmath51 is a total order in which the candidates in @xmath52 are in a pre - defined lexicographic order , and @xmath53 is the reverse .",
    "we make the following observations on @xmath54 . for any set of candidates @xmath55 and any pair of candidates @xmath56 , @xmath57 here @xmath58 is the pair of votes obtained from @xmath59 by removing all candidates in @xmath60 . in words ,",
    "the formula states that after @xmath60 is removed , the score difference between @xmath61 and @xmath62 is increased by @xmath63 if and only if @xmath64 and @xmath65 is removed ; it is decreased by @xmath63 if and only if @xmath66 and @xmath67 is removed ; for any other cases , the score difference does not change .",
    "moreover , for any @xmath68 , @xmath69 and @xmath70 .",
    "we next show how to use @xmath54 to construct the first part of the profile @xmath48 .",
    "let @xmath71 , that is , @xmath72 .",
    "@xmath48 is composed of the following votes : ( 1 ) for each @xmath35 and each @xmath73 , there are @xmath74 copies of @xmath75 ; ( 2 ) for each @xmath76 , there are @xmath9 copies of @xmath77 ; ( 3 ) there are @xmath78 copies of @xmath79 .",
    "it is not hard to verify that @xmath80 , and for any @xmath81 , @xmath82 .",
    "@xmath49 is composed of the following votes : ( 1 ) for each @xmath76 , there are @xmath83 copies of @xmath84 ; ( 2 ) for each @xmath35 , there are @xmath85 copies of @xmath86 ; ( 3 ) there are @xmath87 copies of @xmath88 .",
    "let @xmath89 .",
    "we make the following observations on the borda scores of the candidates in @xmath4 .",
    "@xmath90 for any @xmath76 , @xmath91 ;    @xmath90 for any @xmath35 , @xmath92 ;    @xmath90 @xmath93 .",
    "suppose the x3c instance has a solution , denoted by ( after reordering the sets in @xmath39 ) @xmath94 .",
    "then , we let the manipulator vote for :    @xmath95    in the first @xmath96 rounds , all candidates in @xmath40 and @xmath97 drop out .",
    "then @xmath45 drops out . in the following @xmath98 rounds the candidates in @xmath99 drop out .",
    "finally , @xmath44 loses to @xmath18 in their pairwise election , which means that @xmath18 is the winner .",
    "suppose the manipulator can cast a vote to make @xmath18 the winner .",
    "we first note that @xmath44 must be eliminated in the final round since its score is higher than @xmath18 in all previous rounds . in the round when @xmath45 is eliminated",
    ", the score of @xmath45 should be no more than the score of @xmath18 .",
    "we note that @xmath93 and the score difference can only be reduced by the manipulator ranking @xmath45 below @xmath18 , and by eliminating @xmath100 before @xmath45 .",
    "however , by ranking @xmath45 below @xmath18 , the score difference is reduced by no more than @xmath101 .",
    "therefore , before @xmath45 drops out , all candidates in @xmath40 must have already dropped out .",
    "we note that for any @xmath102 , @xmath91 .",
    "therefore , for each @xmath102 , there exists @xmath103 with @xmath73 who is removed before @xmath104 . for any such @xmath103 , none of the candidates in @xmath105 can drop out before @xmath103 ( otherwise the score of @xmath103 can not be less than @xmath18 before @xmath45 drops out ) , and in the next three rounds the candidates in @xmath105 drop out .",
    "it follows that the set of candidates in @xmath46 that drop out before any candidate in @xmath40 corresponds to an exact cover of @xmath40 .    with unweighted votes ,",
    "the coalitional manipulation problem under nanson s rule is np - complete even when there is only one manipulator .",
    "the proof uses the same gadget @xmath106 that is used in the proof of theorem  [ thm : baldwin ] . due to the space constraints",
    ", the proof can be found in an online technical report .",
    "if the number of candidates is bounded , then manipulation is np - hard to compute when votes are weighted .",
    "baldwin s rule appears more computationally difficult than nanson s rule .",
    "@xcite prove that baldwin s requires only 3 candidates to be np - hard , whilst we prove here that nanson s rule is polynomial to manipulate with 3 candidates and requires at least 4 candidates to be np - hard .",
    "it follows that computing a manipulation is np - hard for both rules when votes are unweighted , the number of candidates is small and there is uncertainty about how agents have voted in the form of a probability distribution @xcite .",
    "note that the coalition manipulation problem for borda with weighted votes is np - hard for 3 or more candidates @xcite .",
    "thus , somewhat surprisingly , adding an elimination round to borda , which gives us nanson s rule , decreases the computational complexity of computing a manipulation with 3 manipulators from np - hard to polynomial .",
    "[ t : baldwin_constructive ] with nanson s rule and weighted votes , the coalition manipulation problem is np - complete for just 4 candidates .",
    "* proof :  * the proof is by a reduction from partition , where we are given a group of integers @xmath107 with sum @xmath108 , and we are asked whether there is way to partition the group into two groups , the elements in each of which sum to @xmath109 . for any partition instance , we construct a coalition manipulation problem with 4 candidates ( @xmath25 , @xmath45 , @xmath18 and @xmath110 ) where @xmath110 is again the candidate that the manipulators wish to win . we suppose the non - manipulators have voted as follows : @xmath111 for each of , , and , @xmath112 for and , and 1 each for , , and .",
    "the total scores from non - manipulators are as follows : @xmath113 , @xmath114 and @xmath115 . for each integer @xmath116",
    ", we have a member of the manipulating coalition with weight @xmath116 .    now",
    ", suppose there is a solution to the partition instance .",
    "let the manipulators corresponding to the integers in one half of the partition vote , and let the others vote .",
    "all scores are now @xmath117 ( which is also the average ) . by the tie - breaking rule",
    ", @xmath110 wins in the first round .",
    "thus the manipulators can make @xmath110 win if a perfect partition exists .",
    "conversely , suppose there is a successful manipulation .",
    "clearly , @xmath110 can not be eliminated in the first round . to ensure this",
    ", all manipulators must put @xmath110 in first place .",
    "next , we show that if @xmath110 is not a joint winner of the first round , @xmath110 can not win overall .",
    "we consider all possible sets of candidates that could be eliminated in the first round .",
    "there are 6 cases . in the first case ,",
    "only @xmath25 is eliminated in the first round .",
    "the scores from non - manipulators in the second round are as follows : @xmath118 , and @xmath119 .",
    "the average score is @xmath120 .",
    "even with the maximum @xmath121 possible score from the manipulators , @xmath110 is eliminated .",
    "this contradicts the assumption that @xmath110 wins . in the second case ,",
    "only @xmath45 is eliminated in the first round .",
    "as @xmath110 and @xmath25 are not eliminated in the first round , the manipulators have to cast votes that put @xmath110 in first place and @xmath45 in second place . with such manipulating votes , the scores in the second round are : @xmath122 , @xmath123 and @xmath124 .",
    "the average score is @xmath125 .",
    "hence , @xmath25 is eliminated . in the next round",
    ", @xmath110 is eliminated as @xmath126 , @xmath127 and the average score is @xmath128 .",
    "this contradicts the assumption that @xmath110 wins . in the third case ,",
    "only @xmath18 is eliminated in the first round .",
    "this case is symmetric to the second case . in the fourth case , @xmath25 and @xmath45",
    "are eliminated in the first round .",
    "the case when @xmath25 and @xmath18 are eliminated is symmetric . in the second round ,",
    "the scores from non - manipulators are @xmath127 and @xmath129 .",
    "the @xmath108 score from the manipulators can not prevent @xmath110 being eliminated .",
    "this contradicts the assumption that @xmath110 wins . in the fifth case , @xmath45 and @xmath18",
    "are eliminated in the first round . however ,",
    "in the first round , the score @xmath45 and @xmath18 receive from the non - manipulators is @xmath130 .",
    "one of them will get at least @xmath109 points from manipulators . this will give them greater than the average score of @xmath131 .",
    "hence , at least one of them is not eliminated . in the sixth and final case , @xmath25 , @xmath45 and @xmath18",
    "are all eliminated in the first round .",
    "this case is again impossible by the same argument as the last case .",
    "the only way for @xmath110 to win is to have a tie with all candidates in the first round . as we observed above",
    ", the manipulators have to put @xmath110 in first place , and @xmath25 in second place . in turn",
    ", both @xmath45 and @xmath18 have to get exactly @xmath109 points from the manipulators .",
    "hence , there exists a solution to the partition instance .    clearly , it is polynomial to compute a manipulation of baldwin s rule with 2 candidates ( since this case degenerates to majority voting ) . with nanson s rule , on the other hand , it is polynomial with up to 3 candidates .    with nanson s rule and weighted votes , the coalition manipulation problem is polynomial for up to 3 candidates .",
    "* proof :  * consider an election with 3 candidates ( @xmath132 and @xmath110 ) in which the manipulators want @xmath110 to win .",
    "we prove that the optimal strategy is for the manipulators either all to vote @xmath133 or all to vote @xmath134 .",
    "if @xmath110 does not win using one of these two votes , then @xmath110 can not win .",
    "therefore we simply try out the two votes and compute if @xmath110 wins in either case .",
    "suppose the manipulators can make @xmath110 win .",
    "we first note that there is no loss for them to raise @xmath110 to the first position , while keeping the other parts of their preferences the same . by doing so",
    ", the score of @xmath110 goes up and the scores of @xmath25 and @xmath45 go down .",
    "the only possible change in the elimination process is that now both @xmath25 and @xmath45 drop out in the first round , so that @xmath110 still wins .    now , suppose that all manipulators rank @xmath110 in their top positions .",
    "let @xmath135 denote the manipulators profile that makes @xmath110 win .",
    "because nanson s rule never selects the condorcet loser , @xmath110 can not be beaten by both @xmath25 and @xmath45 in pairwise elections .",
    "without loss of generality , suppose @xmath110 beats @xmath25 .",
    "we argue that if all manipulators vote @xmath133 , then @xmath110 still wins . for the sake of contradiction , suppose all manipulators vote @xmath133 but @xmath110 does not win . as the manipulators still rank @xmath110 in their top positions , the score of @xmath110 in the first round is the same as in @xmath135 .",
    "therefore , @xmath110 must enter ( and lose ) the second round .",
    "hence , only @xmath25 is eliminated in the first round , and in the second round @xmath45 beats @xmath110 . however , having the manipulators vote @xmath133 only lowers @xmath45 s score in the first round , compared to the case where they vote @xmath135 .",
    "hence , when the manipulators vote @xmath135 , @xmath45 also enters the second round and then beats @xmath110 , which is a contradiction .",
    "therefore , if the manipulators can make @xmath110 win , then they can make @xmath110 win by all voting @xmath133 , or all voting @xmath136 .",
    "one way to deal with computational intractability is to treat computing a manipulation as an approximation problem where we try to minimize the number of manipulators .",
    "we therefore considered five approximation methods .",
    "these are either derived from methods used with borda or are specifically designed for the elimination style of nanson s and baldwin s rules .",
    ": : :    the desired candidate is put first , and the other candidates are    reverse ordered by their current borda score .",
    "we repeat this    construction until the desired candidate wins .",
    "was used to manipulate    the borda rule in @xcite .",
    ": : :    this method was proposed for the borda rule @xcite . unlike which    constructs votes one by one , we construct votes in any order using a    bin packing heuristic which puts the next largest borda score into the    `` best '' available vote .",
    "we start with a target number of    manipulators .",
    "simple counting arguments will lower bound this number ,    and we can increae it until we have a successful manipulation .",
    "we    construct votes for the manipulators in which the desired candidate is    in first place .",
    "we take the other borda scores of the manipulators in    decreasing order , and assign them to the candidate with the lowest    current borda score who has been assigned less than the required    number of scores .",
    "a perfect matching algorithm then converts the sets    of borda scores for the candidates into a set of manipulating votes .",
    ": : :    this method was also proposed for the borda rule @xcite .",
    "we again    have a target number of manipulators , and construct votes for the    manipulators in which the desired candidate is in first place .",
    "we take    the other borda scores of the manipulators in decreasing order , and    assign them to the candidate with the current lowest _ average _ borda    score who has less than the required number of scores .",
    "the intuition    is that if every score was of average size , we would have a perfect    fit .",
    "if more than one candidate has the same lowest average borda    score and can accommodate the next score , we tie - break on the    candidate with the fewest scores .",
    "examples of and can be found in    @xcite .",
    ": : :    we repeatedly construct votes in which the desired candidate is put in    first place , and the other candidates in the reverse of the current    elimination order . for instance",
    ", the first candidate eliminated is put    in last place . for nanson",
    "s rule , we order candidates eliminated in    the same round by their borda score in that round . : : :    we repeatedly construct votes in which the desired candidate is put in    first place , and the other candidates in the current elimination    order . for instance",
    ", the first candidate eliminated is put in second    place . for nanson",
    "s rule , we order candidates eliminated in the same    round by the inverse of their borda score in that round .",
    "the intuition behind is to move the desired candidate up the elimination order whilst keeping the rest of the order unchanged . with",
    ", the intuition is to move the desired candidate up the elimination order , and to assign the largest borda scores to the least dangerous candidates .",
    "it is easy to show that all methods will eventually compute a manipulation of nanson s or baldwin s rule in which the desired candidate wins .    with borda voting ,",
    "good bounds are known on the quality of approximation that is achievable .",
    "in particular , @xcite proved that never requires more than one extra manipulator than optimal .",
    "baldwin s and nanson s rules appear more difficult to approximate within such bounds .",
    "we can give examples where all five methods compute a manipulation that use several more manipulators than is optimal .",
    "indeed , even with a fixed number of candidates , can require an unbounded number of extra manipulators .",
    "[ t : path_exm_baldwin ] with baldwin s rule , there exists an election with 7 candidates and @xmath137 votes where computes a manipulation with at least @xmath3 more votes than is optimal .",
    "* proof :  * ( sketch ) consider an election over @xmath25 , @xmath45 , @xmath18 , @xmath44 , @xmath138 , @xmath139 and @xmath110 where @xmath110 is the candidate that the manipulators wish to win .",
    "we define @xmath140 as the pair of votes : @xmath141 , @xmath142 where @xmath51 is some fixed ordering of the other candidates and @xmath143 is its reverse .",
    "the non - manipulators cast the following votes : @xmath144 copies of @xmath145 , @xmath146 , @xmath147 , @xmath148 and @xmath149 .",
    "in addition , there are @xmath150 copies of the votes : @xmath151 and @xmath152",
    ". if @xmath153 manipulators vote identically @xmath154 then @xmath110 wins .",
    "this provides an upper bound on the size of the optimal manipulation .",
    "after the non - manipulators have voted , @xmath155 , @xmath156 and @xmath157 .",
    "will put @xmath110 in first place .",
    "we suppose @xmath3 is a multiple of 2 , but more complex arguments can be given in other cases .",
    "after @xmath3 manipulating votes have been constructed , the scores of candidates @xmath25 to @xmath139 are level at @xmath158 and @xmath110 is leveled at @xmath159 . from then on ,",
    "the manipulators put @xmath110 in first place and alternate the order of the other candidates .",
    "at least @xmath160 votes are therefore required for @xmath110 to move out of last place .",
    "asymptotically this result is as bad as we could expect .",
    "any election can be manipulated with @xmath161 votes by simply reversing all previous votes , and this proof demonstrates that may use @xmath161 more votes than is optimal .",
    ".[table : urn_opt ] percentage of urn elections with 5 candidates where the heuristic finds the optimal manipulation . [ cols=\"^,^,^,^,^,^\",options=\"header \" , ]     our second set of experiments used larger problems .",
    "this amplifies the differences between the different approximation methods ( but means we are unable to compute the optimal manipulation using brute force search ) .",
    "problems have between @xmath162 and @xmath163 candidates , and the same number of votes as candidates .",
    "we tested 6000 instances , 1000 at each problem size .",
    "tables  [ table : uni_av_baldwin][table : urn_av_nanson ] show the results for the average number of manipulators .",
    "the results show that overall works slightly better than and , which themselves outperform the other two methods especially for problems with large number of candidates . we observe a similar picture with nanson s rule .",
    "this contrasts with the borda rule where and do much better than @xcite . in most cases",
    "is less effective than except urn elections with nanson s rule .",
    "these experimental results suggest that baldwin s and nanson s rules are harder to manipulate in practice than borda .",
    "approximation methods that work well on the borda rule are significantly less effective on these rules .",
    "overall , , and appear to offer the best performance , though no heuristic dominates .",
    "@xcite prove that a class of voting rules which use repeated ballots and eliminate one candidate in each round are condorcet consistent .",
    "they illustrate this class with the _ weakest link _ rule in which the candidate with the fewest ballots in each round is eliminated .",
    "@xcite has proposed a variant of single transferable vote where first place votes , candidates are successively eliminated based on their _ original _ borda score . unlike nanson s and baldwin s rules , this method does not recalculate the borda score based on the new reduced set of candidates .",
    "for any condorcet consistent rule ( and thus for nanson s and baldwin s rule ) , @xcite showed that many types of control and manipulation are polynomial to compute when votes are single peaked .",
    "with unweighted votes , we have proven that nanson s and baldwin s rules are np - hard to manipulate with one manipulator .",
    "this increases by two thirds the number of rules known to be np - hard to manipulate with just a single manipulator . with weighted votes , on the other hand ,",
    "we have proven that nanson s rule is np - hard to manipulate with just a small number of candidates and a coalition of manipulators .",
    "we have also proposed a number of approximation methods for manipulating nanson s and baldwin s rules .",
    "our experiments suggest that both rules are difficult to manipulate in practice .",
    "there are many other interesting open questions coming from these results .",
    "for example , are there other elimination style voting rules which are computationally difficult to manipulate ? as a second example , with nanson s and baldwin s rule what is the computational complexity of other types of control like the addition / deletion of candidates , and the addition / deletion of voters ? as a third example , we could add elimination rounds to other scoring rules .",
    "do such rules have interesting computational properties ?",
    "nina narodytska is supported by the asian office of aerospace research and development through grant aoard-104123 .",
    "toby walsh is funded by the australian department of broadband , communications and the digital economy and the arc .",
    "lirong xia acknowledges a james b.  duke fellowship and vincent conitzer s nsf career 0953756 and iis-0812113 , and an alfred p.  sloan fellowship for support .",
    "we thank all aaai-11 reviewers for their helpful comments and suggestions .",
    "betzler , n. ; niedermeier , r. ; and woeginger , g. 2011 .",
    "unweighted coalitional manipulation under the borda rule is np - hard . in _",
    "ijcai-11_. brandt , f. ; brill , m. ; hemaspaandra , e. ; and hemaspaandra , l. 2010",
    ". bypassing combinatorial protections : polynomial - time algorithms for single - peaked electorates . in _ aaai-10 _",
    ", 715722 .",
    "chamberlin , j. 1985 .",
    "an investigation into the relative manipulability of four voting systems .",
    "30:195203 .",
    "davies , j. ; katsirelos , g. ; narodytska , n. ; and walsh , t. 2011 .",
    "complexity of and algorithms for borda manipulation . in _",
    "faliszewski , p. ; hemaspaandra , e. ; and schnoor , h. 2008 .",
    "copeland voting : ties matter . in _ aamas-08 _ , 983990 ."
  ],
  "abstract_text": [
    "<S> nanson s and baldwin s voting rules select a winner by successively eliminating candidates with low borda scores . </S>",
    "<S> we show that these rules have a number of desirable computational properties . in particular , with unweighted votes , it is np - hard to manipulate either rule with one manipulator , whilst with weighted votes , it is np - hard to manipulate either rule with a small number of candidates and a coalition of manipulators . as only a couple of other voting rules </S>",
    "<S> are known to be np - hard to manipulate with a single manipulator , nanson s and baldwin s rules appear to be particularly resistant to manipulation from a theoretical perspective . </S>",
    "<S> we also propose a number of approximation methods for manipulating these two rules . </S>",
    "<S> experiments demonstrate that both rules are often difficult to manipulate in practice . </S>",
    "<S> these results suggest that elimination style voting rules deserve further study . </S>"
  ]
}
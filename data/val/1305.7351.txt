{
  "article_text": [
    "this paper is motivated by the need for a robust implementation of solid sweeps in solid modeling kernels .",
    "the solid sweep is of course , the envelope surface of a solid which is swept in space by a family of rotations and translations .",
    "the uses of sweeps are many , e.g. , in the design of scrolls  @xcite , in cnc machining verification  @xcite , to detect collisions , and so on .",
    "see appendix for an application of solid sweep in designing scrolls , where we describe a modeling attempt using an existing kernel and its limitations .",
    "constant radius blends can be considered as the partial envelope of a sphere moving along a specified path . as with blends",
    ", it is expected that a deeper mathematical understanding of solid sweep will lead to its rapid deployment and use .",
    "a robust implementation of solid sweep poses the following requirements : ( i ) allow for input models specified in the industry - standard brep format , ( ii ) output the sweep envelope in the brep format , with effective evaluators , and finally , ( iii ) perform body - check , i.e. , a check on the orientability , non - self - intersection , detection of singularities and so on .",
    "thus there are some `` local '' parts and some `` global '' parts to the problem .",
    "it is generally recognized that the harder parts of the local theory is in the smooth case , i.e. , when faces meet each other smoothly . for in the non - smooth case , the added complexity in the local geometry of the sweep is exactly that of a curve moving in 3-space .",
    "this is of course well understood , and offered by many kernels as a basic surface type . as far as we know ,",
    "the global situation in the non - smooth case , i.e. , the topological structure of edges and vertices ( i.e. , the 1-cage ) of the sweep has not been elucidated , but is also generally assumed to be simpler than the smooth case .",
    "in fact , much of existing literature has focused on a smooth single - face solid , as the key problem  @xcite .    in this paper , we focus on the smooth multi - face solid . in section  [ simplesec ] , we start with the mathematical structure of the simple sweep ( i.e. , one without singularities and self - intersections ) . by the calculus of curves of contact",
    ", we set up a correspondence between the faces , edges and vertices of the envelope with those of the swept solid .",
    "this sets up the brep structure of the envelope .",
    "next , we define the funnel as the parametrization space of a face of the envelope and construct a parametrization .",
    "we further elucidate the structure of the bounding edges / vertices of a face and provide several examples of simple sweeps from a pilot implementation .    in section  [ simplesisec ]",
    ", we examine the trim structures .",
    "the funnel of section  [ simplesec ] will remain the ambient parametrization of the faces .",
    "the correspondence will help us define the trim areas and trim curves which must be excised to form the correct envelope .",
    "we then define the function @xmath1 and use it to define elementary and singular trim curves .    in section  [ decompsec ]",
    ", we start with the decomposable sweep , i.e. , one which may be partitioned into a suitable small collection of simple sweeps .",
    "the final envelope is obtained by stable ( transversal ) boolean operations on this collection .",
    "we show that the trim curves so obtained are elementary .",
    "we next define an invariant @xmath2 on the funnels , which is robustly and efficiently computable and we show that @xmath3 on ( all ) the funnels characterizes decomposability .",
    "this is an important step in the robust implementation of sweeps .    in section  [ thetasec ] , we prove some of the properties of @xmath2 such as its invariance and show that it is the determinant of the transformation connecting two 2-frames on the envelope , and is thus an easily computable function on the surface .",
    "we show that the @xmath4 curve on the funnel is also the singular locus for the envelope surface . via a geometric theorem",
    ", we also show that the function @xmath2 matches the one by  @xcite for implicitly defined surfaces and using the so - called inverse trajectory .    in section  [ nondecompsec ]",
    ", we define the singular trim curve , i.e. , where @xmath5 may hit zero .",
    "we show that there is a correspondence between singular trim curves and the curves in the zero - locus of @xmath2 .",
    "we also show that ( i ) singular trim curves make contact with the @xmath4 curves , and ( ii ) excision at the singular trim curves removes all singularities of the envelope except at these points of contact . furthermore , these points are easily and robustly computed .",
    "in section  [ conclusionsec ] we summarize what has been achieved , viz .",
    ", that the decomposability and the zero - locus of @xmath2 complement to give a complete understanding of all trim curves .",
    "we also discuss some implementation issues and extensions .",
    "* previous work *    we now review existing related work .",
    "perhaps the most elaborate proposal for the sweep surface @xmath6 is the sweep envelope differential equations  @xcite approach , where the authors ( i ) assume that surface @xmath7 being swept is implicitly given by a function @xmath8 , and ( ii ) derive a differential equation whose solution is the envelope . for any point @xmath9 on the initial curve of contact , a runge - kutta marching",
    "yields a trajectory @xmath10 such that ( i ) @xmath11 , and ( ii ) @xmath12 , the curve of contact at time @xmath13 .",
    "these trajectories presumably serve as the iso - parametric lines @xmath14 . determining whether @xmath10 is in the trimming set @xmath15",
    "is solved by using the inverse trajectory condition .",
    "this is implemented by using the second derivative of the function @xmath16 , where @xmath17 is the inverse trajectory of point @xmath18 .    on the global front",
    ", the building of the envelope @xmath6 is done by selecting a collection of points on the initial curve of contact , developing trajectories , testing for membership in @xmath15 and then using the points which pass to construct an approximation to the envelope .",
    "the drawbacks are clear . typically , constructing an @xmath8 which defines @xmath7 is difficult .",
    "furthermore , the choice of @xmath8 seems to determine many computational and parametric issues , which is undesirable .",
    "the inverse - trajectory check remains poorly conditioned , especially when the second derivative of the function @xmath19 w.r.t .",
    "@xmath13 is zero .",
    "the structure of the envelope is unknown where this derivative is zero .",
    "a global understanding of @xmath15 and the nature of the trim curves is missing .    in  @xcite ,",
    "while classifying points for sweeping solids , the authors give a membership test for a point in the object space to belong inside , outside or on the boundary of the swept volume by using inverse trajectory of that point .",
    "a curve - solid intersection is required to be computed for each point membership query which is computationally expensive , especially when the intersection is non - transversal , as noted by the authors themselves .",
    "such high degree of computational complexity is prohibitive for a practical implementation .    in",
    "@xcite the authors work with 2d shapes and 2d motions and quantify singularities using inverse trajectories .",
    "this work is based on the computational framework described in  @xcite and involves computing intersections between 2d curves and 2d shapes .",
    "the authors remark that this work can be extended to the 3-dimensional case involving intersections between 3d curves and 3d solids .",
    "this approach has the same drawback as  @xcite , namely a high computational cost .    in trimming self - intersections in swept volumes",
    "@xcite , the authors detect self - intersections by computing approximate curves of contact at a few discrete time instances which are then checked for intersections .",
    "approximations are introduced at multiple levels , hence an accurate solution can not be expected from this method .",
    "in this section we formulate the boundary of the volume obtained by sweeping a solid @xmath20 along a given trajectory @xmath21 .",
    "we will use the boundary representation , also known as brep , which is a popular standard for representing a compact and oriented solid @xmath20 by its boundary @xmath22 .",
    "the boundary @xmath22 separates the interior of @xmath20 from the exterior of @xmath20 and is represented using a set of _ faces _ , _ edges _ and _ vertices_. see figure  [ conefig ] for the brep of a solid where different faces are colored differently .",
    "faces meet in edges and edges meet in vertices .",
    "the brep consists of two interconnected pieces of information , viz . , the geometric and the topological .",
    "the geometric information consists of the parametric description of the faces and edges while the topological information consists of orientation of the geometric entities and adjacency relations between them .    in this paper",
    "we consider solids whose boundary is formed by faces meeting smoothly . in the case when the faces do not meet smoothly , the added complexity in the local geometry of the sweep is exactly that of a curve moving in 3-space .",
    "this is of course well understood , and offered by many kernels as a basic surface type .",
    "the global geometry and topology for this case will be described in a later paper .",
    "[ trajectorydef ] a * trajectory * in @xmath23 is specified by a map @xmath24 where @xmath25 is a closed interval of @xmath26 , @xmath27 .",
    "the parameter @xmath13 represents time .",
    "we assume that @xmath21 is of class @xmath28 for some @xmath29 , i.e. , partial derivatives of order up to @xmath30 exist and are continuous .",
    "we make the following key assumption about @xmath31 .",
    "[ genericassum ] the tuple @xmath31 is in a _",
    "general position_.    [ envldef ] the * action * of @xmath21 ( at time @xmath13 in @xmath25 ) on @xmath20 is given by @xmath32 .",
    "the * swept volume * @xmath33 is the union @xmath34 and the * envelope * @xmath6 is defined as the boundary of the swept volume @xmath33 .",
    "clearly , for each point @xmath35 of @xmath6 there must be an @xmath36 and a @xmath37 such that @xmath38 .",
    "this sets up the following correspondence relation .",
    "[ corrdef ] the * correspondence * @xmath39 is the set of tuples @xmath40 for @xmath41 , we set @xmath42 .",
    "similarly , for @xmath43 , we define @xmath44 .",
    "we will denote the interior of a set @xmath45 by @xmath46 .",
    "it is clear that @xmath47 .",
    "therefore , we have    [ intlem ] if @xmath48 , then for all @xmath37 , @xmath49 .        thus , the points in interior of @xmath20 do not contribute to @xmath6 at all and @xmath50 .",
    "this sets up the brep structure for @xmath6 . in the sweep example shown in figure  [ conefig ] , the correspondence @xmath39 is illustrated via color coding , i.e. , for @xmath51 , the points @xmath35 and @xmath18 are shown in the same color . the general position assumption on @xmath31",
    "can be formulated as the condition that the induced brep topology of @xmath6 remains invariant under a small perturbation of @xmath31 .",
    "[ preimagelem ] assuming general position of @xmath31 , for any @xmath52 , there are at most three distinct tuples @xmath53 for @xmath54 which belong to @xmath55 .",
    "_ for distinct tuples @xmath56 , it is clear that @xmath57 , for otherwise @xmath58 . therefore @xmath59 and @xmath60 intersect at point @xmath35 . by assumption  [ genericassum ]",
    "this intersection is transversal .",
    "further , by the same assumption , at most @xmath61 surfaces may intersect in a point .",
    "@xmath62    [ trajxdef ] for a point @xmath36 , define the * trajectory of * @xmath63 as the map @xmath64 given by @xmath65 and the velocity @xmath66 as @xmath67 .",
    "for a point @xmath68 , let @xmath69 be the unit outward normal to @xmath20 at @xmath18 .",
    "define the function @xmath70 as @xmath71 thus , @xmath72 is the dot product of the velocity vector with the unit normal at the point @xmath73 .",
    "proposition  [ glem ] gives a necessary condition for a point @xmath68 to contribute a point on @xmath6 at time @xmath13 , namely , @xmath74 , and is a rewording in our notation of the statement in  @xcite that _ the candidate set is the union of the ingress , the egress and the grazing set of points_.    [ glem ] for @xmath51 and @xmath75 $ ] , either ( i ) @xmath76 or ( ii ) @xmath77 and @xmath78 , or ( iii ) @xmath79 and @xmath80 .    for proof",
    ", refer the appendix .",
    "[ cocdef ] for a fixed time instant @xmath41 , the set @xmath81 is referred to as the * curve of contact * at @xmath82 and denoted by @xmath83 .",
    "observe that @xmath84 .",
    "the union of the curves of contact is referred to as the * contact set * and denoted by @xmath85 , i.e. , @xmath86 .    in the sweep example in figure  [ dumbbellfig ]",
    ", the curve of contact at @xmath87 is shown imprinted on the solid in red .",
    "the curves of contact are referred to as the _ characteristic curves _ in  @xcite .",
    "[ projdef ] define projections @xmath88 and @xmath89 as : @xmath90 .",
    "[ simpledef ] a sweep @xmath91 is said to be * simple * if for all @xmath92 , @xmath93 .",
    "note that , by proposition  [ glem ] , for any sweep , we have @xmath94 . in a simple sweep , we require that @xmath93 .",
    "in other words , every point on the contact - set appears on the envelope , and thus , no _ trimming _ of the contact - set is needed in order to obtain the envelope .",
    "[ simplelem ] for a simple sweep , for all @xmath52 , @xmath95 is a singleton set .    _",
    "_ we first show that for a simple sweep , for @xmath96 , @xmath97 .",
    "suppose that @xmath98 . clearly , @xmath99 and @xmath100 . hence @xmath101 . since @xmath102 and @xmath103 intersect transversally , @xmath104 and @xmath105 .",
    "it follows by lemma  [ intlem ] that @xmath106 and @xmath107 which contradicts the fact that @xmath91 is simple .",
    "now suppose that there are @xmath108 tuples @xmath109 for @xmath110 . since @xmath22 is free from self - intersections it follows that @xmath57 and @xmath111 which is a contradiction to the fact that @xmath91 is simple .",
    "@xmath62      now we describe parametrizations of the various entities of the induced brep structure of @xmath6 . here",
    "we restrict to the case of the simple sweep .",
    "the more general case is derived from this .",
    "let @xmath112 be a face of @xmath113 .",
    "in general , @xmath112 gives rise to multiple faces of @xmath6 .",
    "below we describe a natural parametrization of these faces using the parametrization of the surface underlying the face @xmath112 .",
    "[ parsurfdef ] a * smooth / regular parametric surface * in @xmath23 is a smooth map @xmath114 such that at all @xmath115 @xmath116 and @xmath117 are linearly independent . here",
    "@xmath118 and @xmath119 are called the parameters of the surface .",
    "let @xmath120 be the surface underlying the face @xmath112 of @xmath22 .",
    "[ fdef ] define the function @xmath121 as @xmath122 .",
    "the domain of function @xmath8 will be referred to as the parameter space .",
    "note that @xmath8 is easily and robustly computed .",
    "[ lfrdef ] for an interval @xmath75 $ ] , we define the following subsets of the parameter space @xmath123    the set @xmath124 will be referred to as the * funnel*.        by assumption  [ genericassum ] about the general position of @xmath31 it follows that for all @xmath125 , the gradient",
    "@xmath126^t \\neq \\bar{0}$ ] . as a consequence ,",
    "@xmath124 is a smooth , orientable surface in the parameter space .",
    "[ pcocdef ] the set @xmath127 will be referred to as the * p - curve of contact * at @xmath82 and denoted by @xmath128 .",
    "we now define the sweep map from the parameter space to the object space .",
    "[ sigmadef ] the * sweep map * is defined as follows .",
    "@xmath129    note that , @xmath130 is a smooth map , @xmath131 and @xmath132 . here and later , by a slight abuse of notation , @xmath6 , @xmath85 and @xmath133 denote the appropriate parts of complete @xmath6 , @xmath85 and @xmath133 respectively resulting from the face @xmath134 whose underlying surface is @xmath7 .",
    "the surface patches @xmath135 and @xmath136 will be referred to as the left and right end - caps respectively .",
    "the funnel , the contact - set , @xmath128 and @xmath83 are shown schematically in figure  [ funnelfig ] .",
    "the condition @xmath137 can also be looked upon as the rank deficiency condition  @xcite of the jacobian @xmath138 of the sweep map @xmath130 . to make this precise ,",
    "let @xmath139 where @xmath140 , @xmath141 and @xmath142 .",
    "note that if @xmath143 then @xmath144 is the velocity , also denoted by @xmath145 .",
    "observe that regularity of @xmath7 ensures that @xmath138 has rank at least 2 .",
    "further , it is easy to show that @xmath146 is a non - zero scalar multiple of the determinant of @xmath138 .",
    "therefore , the condition @xmath147 is precisely the rank deficiency condition of @xmath138 .    for a simple sweep , by proposition  [ glem ] , definition  [ simpledef ] and definition  [ lfrdef ] it follows that @xmath148 .",
    "the surface patches @xmath135 and @xmath136 can be obtained from @xmath22 using proposition  [ glem ] and definition  [ lfrdef ] .",
    "the _ trim curve _ in parameter space for @xmath135 is given by @xmath149 and that for @xmath136 is given by @xmath150 .",
    "we now come to the parametrization of @xmath151 .",
    "the non - singularity of @xmath8 makes @xmath124 an effective parametrization space for @xmath151 . since time",
    "@xmath13 is a central parameter of the sweep problem and is important in numerous applications , it is useful to have @xmath13 as one of the parameters of @xmath151 . for most non - trivial sweeps there is no closed form solution for the parametrization of the envelope and we address this problem using the procedural paradigm which is now standard in many kernels and is described in the appendix . in this approach , a set of evaluators are constructed for the curve / surface via numerical procedures which converge to the solution up to the required tolerance .",
    "this has the advantage of being computationally efficient as well as accurate .",
    "clearly , the bounding edges of the multiple faces resulting from the face @xmath112 of @xmath22 , are generated by the bounding edges of @xmath112 .      .",
    "]    we now briefly describe the computation of edges of @xmath6 .",
    "if @xmath22 is composed of faces meeting smoothly , an edge @xmath152 of @xmath22 will , in general , give rise to a set of edges in @xmath6 .",
    "we define the restriction of @xmath39 to the edge @xmath152 as follows .    for an edge @xmath153 ,",
    "define @xmath154 .",
    "let @xmath152 be the intersection of faces @xmath155 and @xmath156 in @xmath22 and let @xmath157 denote the parameter of @xmath152 . since @xmath155 and @xmath156 meet smoothly at @xmath152 , at every point @xmath158 of @xmath152 there is a well - defined normal .",
    "hence we may define the following function on the parameter space @xmath159 .",
    "[ fedef ] define the function @xmath160 as @xmath161 .",
    "note that the function @xmath162 is the restriction of the function @xmath8 defined in definition  [ fdef ] to the parameter space curve @xmath163 corresponding to the edge @xmath152",
    "so that @xmath164 where @xmath7 is the surface underlying face @xmath155 . the following lemma gives a necessary condition for a point @xmath158 to be on @xmath6 at time @xmath13 .",
    "[ felem ] for @xmath165 and @xmath75 $ ] , either ( i ) @xmath77 and @xmath166 , or ( ii ) @xmath79 and @xmath167 , or ( iii ) @xmath168 .",
    "_ this follows from prop .",
    "[ glem ] and definition  [ fedef ] .",
    "@xmath62 figure  [ wireframefig ] shows the edges of the envelope for the sweep example shown in figure  [ conefig ] .",
    "the correspondence for one of the edges of the envelope is also marked .",
    "let @xmath169 denote the funnel corresponding to the contact set generated by face @xmath155 .",
    "the edge in parameter space which bounds @xmath169 is given by @xmath170 which we will denote by @xmath171 .",
    "note that @xmath171 is smooth if @xmath172 at all points in @xmath171 .",
    "a vertex @xmath173 on @xmath113 will , in general , give rise to a set of vertices on @xmath6 .",
    "we further restrict the correspondence @xmath39 to @xmath173 as @xmath174 . as @xmath22 is smooth , there is a well - defined normal at @xmath173 .",
    "hence we may define the function @xmath175 as @xmath176 .",
    "if @xmath173 is on the boundary of a face @xmath155 , @xmath173 will have a set of coordinates in the parameter space of the surface @xmath7",
    "underlying the face @xmath155 , say @xmath177 , so that @xmath178 .",
    "it is easy to see that if @xmath179 and @xmath75 $ ] then either ( i ) @xmath77 and @xmath180 , or ( ii ) @xmath79 and @xmath181 , or ( iii ) @xmath182 .",
    "three examples of simple sweeps are shown in figures  [ dumbbellfig ] , [ ellipbottlefig ] and [ spheresfig ] which were generated using a pilot implementation of our algorithm in acis 3d modeler @xcite .",
    "a curve of contact at initial time is shown imprinted on the solid in figure  [ dumbbellfig ] .    -axis and undergoing rotation about @xmath35-axis . ]",
    "unlike in a simple sweep , all points of @xmath85 may not belong to the envelope .",
    "we now define the subset of @xmath85 which needs to be excised in order to obtain @xmath6 .",
    "[ trimsetdef ] the * trim set * is defined as @xmath183    [ trimsetlem ] the set @xmath184 is open in @xmath85 .",
    "_ consider a point @xmath185 .",
    "then @xmath186 for some @xmath41 .",
    "hence , there exists an open ball of non - zero radius @xmath187 centered at @xmath188 , denote it by @xmath189 , which is itself contained in @xmath190",
    ". let @xmath191 . then",
    ", @xmath192 and @xmath193 is open in @xmath184 .",
    "hence @xmath15 is open in @xmath85 .",
    "@xmath62    in general , the trim set will span several parts of @xmath85 corresponding to different faces of @xmath22 .",
    "for the ease of notation and presentation , in the rest of this paper , we will analyse the corresponding trim structures on the _ funnel _ of a fixed face @xmath112 of @xmath22 .",
    "thanks to the natural parametrizations ( cf .",
    "subsection  [ paramsec ] ) , the migration of these trim structures across different funnels is an easy implementation detail . in view of this , we carry forward the notation developed in subsection  [ keynotation ] through the rest of this paper .",
    "[ trimsetdef ] the pre - image of @xmath184 on the funnel under the map @xmath130 will be referred to as the * p - trim set * , denoted by @xmath194 , i.e. , @xmath195 .",
    "an immediate corollary of lemma  [ trimsetlem ] is : @xmath194 is open in @xmath124 .",
    "one can also define similar parametric trim areas on the left and right caps ( cf .",
    "@xmath196 and @xmath197 from definition  [ lfrdef ] ) and their counterparts in the object space .",
    "however , for want of space , we assume here that these trim structures are empty .",
    "our analysis can be extended to also cover the non - empty case .",
    "[ trimcurvedef ] the boundary of @xmath198 will be referred to as the * trim curves * and denoted by @xmath199 . here",
    "@xmath198 denotes the closure of @xmath184 in @xmath85 .",
    "similarly , the boundary of the closure @xmath200 of @xmath194 in @xmath124 will be referred to as the * p - trim curves * and denoted by @xmath201 .",
    "note that @xmath202 , @xmath203 and @xmath204 .",
    "therefore the problem of excising the trim set is reduced to the problem of computing the trim curves .",
    "further , this computation is eventually reduced to _ guided _ parametric surface - surface intersections via the parametrization of @xmath151 described in subsection  [ paramsec ] .",
    "for each point @xmath205 there is a finite set of points @xmath206 such that @xmath207 for all @xmath208 ( cf .",
    "lemma  [ preimagelem ] ) . figure  [ ptrimcurveafig ] schematically illustrates p - trim curves on @xmath124 . for every point @xmath209 in the red portion of @xmath201",
    ", there is a point @xmath210 in the green portion of @xmath201 such that @xmath211 .",
    "we extend the correspondence of definition  [ corrdef ] to @xmath212 as below . abusing notation ,",
    "henceforth , @xmath39 will denote this correspondence .",
    "let @xmath213 .",
    "as expected , we define @xmath88 and @xmath214 as : @xmath90 .",
    "further , as before , @xmath42 , @xmath215 .",
    "a crucial observation is that , unlike the earlier correspondence , _ @xmath216_.    [ ldef ] for @xmath217 , let @xmath218 .",
    "let @xmath219 .",
    "define the function @xmath220 as follows .",
    "@xmath221 further , we define @xmath222 .    for @xmath125",
    ", @xmath223 is the set of all time instances @xmath224 ( except @xmath13 ) such that some point of @xmath225 coincides with @xmath226 .",
    "further , the function @xmath1 gives the ` smallest ' time @xmath227 such that some point of @xmath228 coincides with @xmath226 .",
    "[ trimclem ] let @xmath229 .",
    "then @xmath230 iff @xmath231 contains an interval , and @xmath232 iff @xmath231 is a discrete set of cardinality either two or three .    _ proof .",
    "_ suppose first that @xmath233 .",
    "let @xmath234 . then @xmath185 and @xmath186 for some @xmath41",
    "let @xmath189 be an open ball of radius @xmath235 centered at @xmath188 contained in @xmath190 .",
    "assume without loss of generality that @xmath236 and @xmath237 .",
    "by continuity of the trajectory @xmath21 it follows that given @xmath238 there exists @xmath239 such that @xmath240 .",
    "hence , @xmath241 for all @xmath242 $ ] . in other words , @xmath243 \\in l(p_0)$ ] .",
    "conversely , suppose that @xmath231 contains an interval @xmath244 $ ] , i.e. , @xmath245 for all @xmath246 $ ] . by assumption  [ genericassum ] about the general position of @xmath31 it follows that @xmath241 for some @xmath246 $ ] , i.e. , @xmath185 and @xmath233 .",
    "we have shown that for @xmath229 , @xmath233 iff @xmath231 contains an interval .",
    "hence , @xmath231 is discrete iff @xmath232 .    as @xmath247 , by lemma  [ preimagelem ]",
    ", it follows that at all but finitely many points @xmath248 , @xmath223 is of cardinality @xmath108 and at remaining points it is of cardinality @xmath61 .",
    "@xmath62    we classify trim curves as follows .    [ trimcclassifydef ] a curve @xmath249 of @xmath201 is said to be * elementary * if there exists @xmath250 such that for all @xmath251 , @xmath252 .",
    "it is said to be * singular * if @xmath253 .",
    "figures  [ ptrimcurveafig](a ) and  [ ptrimcurveafig](b ) schematically illustrate elementary and singular p - trim curves on @xmath124 respectively .",
    "further observe that , @xmath254 in case ( a ) and 0 in case ( b ) .    before proceeding further",
    ", we introduce the following notation : for @xmath255 , @xmath256 .",
    "[ transinterlem ] all but finitely many points of elementary trim curves lie on the transversal intersections of two surface patches @xmath257 and the remaining points lie on the transversal intersection of three surface patches @xmath257 where , for @xmath258 , @xmath259 are subintervals .",
    "_ suppose that all curves of @xmath201 are elementary , i.e. , @xmath260 such that for all @xmath248 , @xmath261 .",
    "by lemma  [ trimclem ] , all but finitely many points @xmath205 have two points @xmath262 and @xmath263 in @xmath201 such that @xmath264 .",
    "let @xmath265)$ ] and @xmath266)$ ]",
    ". then @xmath267 . from section  [ geomthetasec ]",
    "we know that @xmath59 and @xmath60 are tangential to @xmath268 and @xmath269 respectively at @xmath35 .",
    "by assumption  [ genericassum ] about general position of @xmath31 , @xmath59 and @xmath60 intersect transversally at @xmath35 .",
    "hence , @xmath268 and @xmath270 intersect transversally at @xmath35 .    at most finitely",
    "many points @xmath205 have three points @xmath271 and @xmath272 in @xmath201 such that @xmath207 . by an argument similar to above",
    ", it can be shown that @xmath35 lies on the transversal intersection of three surface patches @xmath273 for @xmath274 corresponding to appropriate subintervals @xmath259 .",
    "@xmath62    figure  [ toolfig ] shows an example in which a capsule is swept along a helical path while rotating about @xmath35-axis .",
    "the trim curves are elementary .",
    "-axis.(b ) the contact set restricted to interval @xmath275 $ ] with the trim set excised.,title=\"fig : \" ] -axis.(b ) the contact set restricted to interval @xmath275 $ ] with the trim set excised.,title=\"fig : \" ]",
    "we now consider sweeps , which though not simple , can be divided into simple sweeps by partitioning the sweep interval so that the trim curves can be obtained by transversal intersections of the contact sets of the resulting simple sweeps . given an interval @xmath25 , we call a partition @xmath276 of @xmath25 into consecutive intervals @xmath277 to be of width @xmath278 if @xmath279 .",
    "[ decompdef ] we say that the sweep @xmath280 is * decomposable * if there exists @xmath250 such that for all partitions @xmath276 of @xmath25 of width @xmath278 , each sweep @xmath281 is simple for @xmath282 .",
    "a sweep which is not decomposable is called * non - decomposable*.    figure  [ decompnondecompfig ] schematically illustrates the difference between decomposable and non - decomposable sweeps .",
    "the example shown in figure  [ toolfig ] is of a decomposable sweep in which partitioning the sweep interval @xmath25 into 2 equal halves will result in 2 simple sweeps .",
    "[ decomplem ] the sweep @xmath91 is decomposable iff @xmath254 .",
    "further , if @xmath254 then all the p - trim curves are elementary .",
    "_ suppose first that @xmath254 .",
    "let @xmath276 be a partition of @xmath25 of width @xmath283 .",
    "we show that @xmath284 is simple for @xmath285 .",
    "let @xmath286 and @xmath287 be the envelope and the contact set for @xmath284 respectively . by proposition  [ glem ] , ( modulo end - caps ) ,",
    "it needs to be shown that @xmath289 .",
    "suppose not .",
    "let @xmath290 such that @xmath291 for some @xmath292 .",
    "then , @xmath293 , i.e. , @xmath294 for some @xmath295 .",
    "let @xmath296 for @xmath297 .",
    "it follows that @xmath298 , leading to a contradiction .",
    "hence , @xmath91 is decomposable .",
    "suppose now that @xmath91 is decomposable with width - parameter @xmath278 ( cf . definition  [ decompdef ] ) .",
    "consider a point @xmath299 and let @xmath300 .",
    "let @xmath301 $ ] and @xmath302 $ ] .",
    "further , let @xmath286 and @xmath287 be the envelope and contact - set for the sweeps @xmath284 respectively .",
    "observe that @xmath303 for @xmath304 .",
    "let @xmath305 .",
    "as @xmath91 is decomposable with width - parameter @xmath278 , both @xmath306 and @xmath307 are simple , and hence , @xmath289 for @xmath304 .",
    "therefore , @xmath188 belongs to @xmath308 and @xmath309 . by lemma",
    "[ simplelem ] , @xmath310 and @xmath311 are both singleton sets .",
    "further , @xmath312 for @xmath313 .",
    "hence , @xmath314 .",
    "since for all @xmath125 , @xmath252 , we conclude that @xmath315 .",
    "suppose that @xmath254 .",
    "since @xmath316 for all @xmath248 if follows that all the p - trim curves are elementary .",
    "@xmath62    the above proposition provides a _ natural _",
    "test for decomposability .",
    "further , coupled with lemma  [ transinterlem ] , for a decomposable sweep , the problem of excising the trim set can be reduced to transversal intersections .",
    "however , note that , the very definition of @xmath283 is _ post - facto _ as it relies on the trim structures . besides , it is the infimum value of the not necessarily continuous function @xmath1 and is difficult to compute .",
    "thus , the above test of decomposability is not effective .",
    "one of the key contributions of this paper is a novel geometric ` invariant ' function on the funnel which is computed in closed form and serves the following objectives .",
    "1 .   quick / efficient and simple detection of decomposability of sweeps , which occur most often in practice .",
    "2 .   generation of trim curves for non - decomposable sweeps .",
    "3 .   quantification and detection of singularities on the envelope .    for a point @xmath317 ,",
    "let @xmath318 .",
    "recall from subsection  [ paramsec ] that , @xmath319 $ ] is of rank 2 . as @xmath320 , @xmath321",
    "are linearly dependent .",
    "recall that @xmath322 is the velocity of the point @xmath120 at time @xmath13 ( cf .",
    "subsection  [ paramsec ] ) .",
    "as @xmath7 is regular , the set @xmath323 forms a basis for the tangent space to @xmath102 .",
    "therefore , we must have @xmath324 where @xmath325 and @xmath326 are well - defined ( unique ) on the funnel and are themselves continuous functions on the funnel .    [ thetadef ] the function @xmath327 is defined as follows .",
    "@xmath328 where @xmath329 and @xmath330 denote partial derivatives of the function @xmath8 w.r.t . @xmath331 and @xmath13 respectively at @xmath9 , and @xmath325 and @xmath326 are as defined before .",
    "note that , unlike @xmath1 , @xmath0 is easily and robustly computable continuous function on the funnel .",
    "now we are ready to state one of the main theorems of this paper .",
    "[ thetadecomplem ] if for all @xmath125 , @xmath332 , then the sweep is decomposable .",
    "further , if there exists @xmath125 such that @xmath333 , then the sweep is non - decomposable .    the proof is given in section  [ proofsec ] which highlights many other surprisingly strong properties of the function @xmath0 .    the function @xmath0 partitions the funnel @xmath124 into three sets , viz .",
    "( i ) @xmath334 , ( ii ) @xmath335 and ( iii ) @xmath336 .",
    "further , we define @xmath337 , @xmath338 and @xmath339 .",
    "figure  [ lsiregionfig ] schematically illustrates the sets @xmath340 and @xmath341 on the funnel and sets @xmath342 and @xmath343 .",
    "and @xmath85 corresponds to @xmath344 and @xmath345 respectively .",
    "a curve of contact is shown in red . ]",
    "note that , for @xmath91 in general position , either @xmath344 is a non - empty open set or @xmath346 .",
    "whence , the above theorem provides an efficient ` open ' test for decomposability , namely , a sweep @xmath91 is decomposable iff the open set @xmath344 is empty .",
    "most kernels will have an effective procedure for such a test provided @xmath0 is effectively computable .",
    "in this section we prove some key properties of @xmath0 , namely , its invariance under the re - parametrization of the surface being swept and its relation with the notion of inverse trajectory used in earlier works .",
    "finally , we use these properties along with proposition  [ decomplem ] , to prove theorem  [ thetadecomplem ] .",
    "we show that the function @xmath0 is invariant of the parametrization of @xmath22 and hence , intrinsic to the sweep .",
    "[ thetainvarthm ] if @xmath347 is a re - parametrization of the surface @xmath7 so that @xmath348 , and @xmath349 , then @xmath350 .    _",
    "_ suppose as before that the boundary @xmath22 is specified by the parametrized surface @xmath7 .",
    "let @xmath351 be a re - parametrization map of @xmath7 and @xmath352 . since @xmath353 is a diffeomorphism",
    ", @xmath354 is an isomorphism at every point in the entire domain of @xmath353 .",
    "let @xmath355 .",
    "for convenience of expression , we extend @xmath353 to define it on the parameter space of the sweep map @xmath130 so that @xmath356 .",
    "hence the re - parametrized sweep map ( for @xmath347 ) is simply @xmath357 . recall that @xmath358 , where @xmath359 is the unit outward normal to @xmath102 at the point @xmath360 .",
    "it is easy to check that @xmath359 can also be expressed as @xmath361 , where @xmath362 is the intrinsic gauss map , @xmath363 being the unit sphere and @xmath364 stands for the usual composition of functions .",
    "thus , @xmath365    similarly , computing with the re - parametrization @xmath347 , and using the fact that @xmath366 , we have @xmath367 . differentiating w.r.t . @xmath368 and",
    "@xmath13 we get @xmath369 where @xmath354 is the jacobian of the map @xmath353 .",
    "observe that , from eq .",
    "[ thetaeq ] , for @xmath370 and @xmath371 , @xmath372 where @xmath373 spans the null - space of @xmath374 for @xmath375 .",
    "in order to compute @xmath376 for the re - parametrized sweep we see that @xmath377 and @xmath378 . now using @xmath369",
    ", we get that @xmath379 this proves the theorem .",
    "@xmath62    an important corollary of the above theorem is that the function @xmath0 on the funnel is a pull - back of an intrinsic function , say @xmath380 , on the abstract smooth manifold @xmath381 .",
    "more precisely , for @xmath217 with @xmath382 , define @xmath383 .",
    "then @xmath380 remains invariant under a re - parametrization .",
    "observe that , unlike @xmath384 , in general , @xmath85 is not a smooth manifold .      for a smooth point @xmath385 of @xmath45 ,",
    "let @xmath386 denote the tangent space to @xmath45 at @xmath385 .",
    "we show that the function @xmath0 arises out of the relation between two 2-frames on @xmath387 .",
    "let @xmath388 be such that @xmath226 is a smooth point of @xmath85 .",
    "we first compute a natural 2-frame @xmath389 in @xmath390 .",
    "note that , @xmath391 being the zero level - set of the function @xmath8 , @xmath392 .",
    "we set @xmath393 and note that @xmath394 .",
    "it is easy to see that @xmath395 is tangent to the p - curve - of - contact @xmath396 .",
    "let @xmath397 . here",
    "@xmath398 is the cross - product in @xmath23 . clearly , the set @xmath399 forms a basis of @xmath390 if @xmath400 . since @xmath401 , if @xmath402 then @xmath403 and @xmath404 serves as a basis for @xmath390 .",
    "figure  [ funnelfig ] illustrates the basis @xmath405 schematically .",
    "the set @xmath406 and can be expressed in terms of @xmath407 as follows @xmath408 note that , @xmath409 clearly , if @xmath400 then @xmath410 is a positive scalar multiple of @xmath411 . again ,",
    "if @xmath402 , expressing @xmath412 in terms of @xmath407 we see that @xmath413 .",
    "the above relation between @xmath407 and @xmath414 shows that if @xmath415 , then for @xmath296 , @xmath416 and @xmath417 are identitical ( as subspaces of @xmath418 ) , i.e. , @xmath102 makes tangential contact with @xmath85 at @xmath35 .",
    "we give a sweep example which will demonstrate the non - singularity of the function @xmath0 .",
    "we show that on the set @xmath341 , @xmath419 . consider a sphere parametrized as @xmath420 , @xmath421 , u \\in [ -\\pi , \\pi]$ ] swept along a curvilinear trajectory given by @xmath422 , @xmath423 , @xmath424 $ ] .",
    "the unit outward normal at @xmath120 at time @xmath13 is given by @xmath425 and velocity is given by @xmath426 .",
    "the envelope function is @xmath427 .",
    "the funnel @xmath124 is given by ( i ) @xmath428 , @xmath421 $ ] and ( ii ) @xmath429 , @xmath421 $ ] .",
    "hence , @xmath118 and @xmath119 can serve as local parameters of @xmath124 . in component ( ii ) of the funnel , we see that @xmath3 , hence we will only consider component ( i ) . on @xmath124 , @xmath430 where",
    "@xmath431 and @xmath432 , whence , @xmath433 .",
    "the set @xmath341 is given by @xmath434 , @xmath428 .",
    "on @xmath341 , @xmath435 and @xmath436 .",
    "an important consequence of non - singularity of @xmath0 is that its zero set , i.e. , @xmath341 can be computed robustly and easily .",
    "now we characterize the cusp - singular points of @xmath85 .",
    "geometrically , these are precisely the points where @xmath85 intersects itself non - transversally .",
    "note that , the transversal singularities of @xmath85 are addressed through decomposability .",
    "we consider the following restriction of @xmath130 to the funnel : @xmath437 .",
    "note that @xmath438 .",
    "[ singdef ] the set @xmath85 is said to have a * cusp - singularity * at a point @xmath439 if @xmath440 fails to be an immersion at @xmath9 .",
    "a basic result about immersion ( see @xcite ) implies that if @xmath441 is an immersion at a point @xmath9 , then there is a neighborhood @xmath442 of @xmath9 such that @xmath441 is a local diffeomorphism from @xmath442 onto its image .",
    "[ singlem ] let @xmath443 and @xmath444 .",
    "the point @xmath445 is a cusp - singularity iff @xmath446 .",
    "_ from subsection  [ geomthetasec ] , @xmath447 is a positive multiple of the determinant relating frames @xmath407 and @xmath448 at @xmath445 .",
    "since the set @xmath407 is always linearly independent , it follows that @xmath448 is linearly dependent iff @xmath440 fails to be an immersion at @xmath449 iff @xmath446 .",
    "@xmath62    in other words , the set @xmath343 is the set of cusp - singular points in @xmath85 .",
    "we now show the relation of the function @xmath0 with inverse trajectory  @xcite used in earlier works . given a trajectory @xmath21 and a fixed point @xmath18 in object - space , the inverse trajectory of @xmath18 is the set of points in the object - space which get mapped to @xmath18 at some time instant by @xmath21 , i.e. @xmath450 , a(t ) \\cdot z + b(t ) = x\\}$ ] .    [ invtrajdef ] given a trajectory @xmath21 , the * inverse trajectory * @xmath451 is defined as the map @xmath452 given by @xmath453 .",
    "thus , for a fixed point @xmath454 , the inverse trajectory of @xmath18 is the map @xmath455 given by @xmath456 .",
    "the range of @xmath457 is @xmath458 .",
    "we list some of the facts about @xmath457 in the appendix which will be used in proving theorem  [ lambdalem ] .    for the inverse trajectory @xmath457 of a point @xmath459 , let @xmath460 be the projection of @xmath457 on @xmath461 .",
    "let @xmath462 be the signed distance of @xmath463 from @xmath461 .",
    "if the point @xmath463 is in @xmath190 , @xmath464 ( the exterior of @xmath20 ) or on the surface @xmath461 , then @xmath462 is negative , positive or zero respectively .",
    "then we have @xmath465 , where @xmath466 is the projection of @xmath463 on @xmath461 along the unit outward pointing normal @xmath467 to @xmath461 at @xmath466 .",
    "this is illustrated in figure  [ type2lsifig ] .",
    "thus the following relation holds for @xmath468 .",
    "@xmath469     intersects @xmath190 . ]",
    "[ lambdalem ] for @xmath470 , @xmath471 where @xmath472 is the normal curvature of @xmath7 at @xmath473 along velocity @xmath474 , @xmath475 is the unit outward normal to @xmath7 at @xmath473 and @xmath476 .",
    "see appendix for the proof .    from theorem  [ lambdalem ]",
    "it is clear that the function @xmath0 is intimately connected with the curvature of the solid and that of the trajectory .",
    "it is easy to see that the function @xmath468 is identical to the function @xmath477 defined in  @xcite for implicitly defined solids , albeit , is invariant of the function defining the solid as well as the parametrization of the same .",
    "_ suppose that for all @xmath125 , @xmath332 .",
    "for @xmath125 , let @xmath478 denote the @xmath13-coordinate of @xmath9 .",
    "consider the set of points @xmath479 and @xmath480 .",
    "by the general position assumption , @xmath481 is a collection of smooth curves in @xmath124 . for @xmath482 , let @xmath483 denote the unique point in @xmath481 such that @xmath484 and @xmath485 .",
    "further , we define @xmath486 . let @xmath487 .",
    "consider two cases as follows :    * case ( i ) * : @xmath488 , i.e. , there exists a sequence @xmath489 in a curve @xmath249 of @xmath481 such that @xmath490 .",
    "hence there exists @xmath491 ( closure of @xmath249 ) which is a limit point of @xmath489 .",
    "since @xmath492 and @xmath22 is free from self - intersections , we have that @xmath493 .",
    "hence , for a small neighborhood @xmath442 of @xmath449 in @xmath124 , we may parametrize the smooth curve @xmath494 by a map @xmath495 so that @xmath496 and , for @xmath497 , @xmath498 and @xmath499 .",
    "let @xmath500 .",
    "note that @xmath501 .",
    "now , @xmath502    hence , @xmath503 since @xmath504 , the map @xmath505 fails to be an immersion at @xmath449 and by lemma  [ singlem ] we get that @xmath446 , which is a contradiction to the hypothesis .",
    "* case ( ii ) * : @xmath250 .",
    "let @xmath506 be a partition of @xmath25 of width @xmath507 .",
    "let @xmath274 and @xmath508 denote the funnel and the contact set corresponding to subinterval @xmath509 .",
    "then it is clear that for each @xmath208 , @xmath510 is a diffeomorphism , i.e. , for each @xmath208 , @xmath511 for all @xmath512 , @xmath96 .",
    "we show that the subproblems @xmath284 are simple for all @xmath208 .",
    "suppose not , i.e. , for some @xmath208 , there exists @xmath292 such that @xmath513 for some @xmath295 .",
    "hence the trim set @xmath514 is not empty . by lemma  [ transinterlem ] ,",
    "for all but finitely many points in @xmath515 there are two points @xmath516 such that @xmath517 .",
    "if @xmath518 and @xmath519 then it follows that @xmath520 leading to contradiction .",
    "hence , the subproblems @xmath284 are simple for all @xmath208 .",
    "it follows that @xmath91 is decomposable with width - parameter @xmath507 .",
    "hence we have proved that if for all @xmath125 , @xmath332 then the sweep is decomposable .",
    "suppose now that there exists @xmath217 such that @xmath333 .",
    "let @xmath296 .",
    "recall the definition of the function @xmath468 from equation  [ lambdaeq ] and relation @xmath521 from theorem  [ lambdalem ] .",
    "clearly , if @xmath522 , then @xmath13 is a local maxima of the function @xmath468 and the inverse trajectory of @xmath35 intersects @xmath523 .",
    "so , there exists @xmath524 such that for all @xmath525 , there exists @xmath526 such that @xmath527 .",
    "hence , the interval @xmath528 \\subset l(p)$ ] .",
    "thus @xmath529 and hence @xmath530 .",
    "by proposition  [ decomplem ] , the sweep is non - decomposable . @xmath62",
    "is shown in red and trim curve is shown in blue.,title=\"fig : \" ]   is shown in red and trim curve is shown in blue.,title=\"fig : \" ]     is shown in red and trim curve is shown in blue.,title=\"fig : \" ]   is shown in red and trim curve is shown in blue.,title=\"fig : \" ]    . here , @xmath211 .",
    "the point @xmath449 is a singular trim point . ]",
    "we recall from section  [ simplesisec ] , the classification of the curves of @xmath201 as being elementary or singular . in this section",
    "we look at singular p - trim curves , i.e. , a curve @xmath249 of @xmath201 where @xmath531 .",
    "figure  [ ptrimcurvefig](b ) schematically illustrates singular p - trim curves .",
    "figures  [ nondecompspherefig ] and  [ nondecompellipsefig ] show two examples of non - decomposable sweeps and the associated singular trim curves . in figure  [ nondecompspherefig ]",
    "a sphere undergoes curvilinear motion along a parabola and in figure  [ nondecompellipsefig ] an ellipsoid undergoes curvilinear motion along a circular arc . in figures  [ nondecompspherefig](a ) and",
    "[ nondecompellipsefig](a ) , curves of contact at a few time instances are shown .",
    "the portions of @xmath133 where @xmath3 and @xmath532 on @xmath533 are shown in black and pink respectively . by proposition  [ thetaneglem ]",
    ", the points where @xmath0 is negative do not lie on @xmath6 . in figures  [ nondecompspherefig](b ) and  [ nondecompellipsefig](b ) such points are excised , the curve @xmath534 is shown in red and the trim curve @xmath199 is shown in blue . note that @xmath534 and @xmath199 make contact , which they must , as we explain in this section .",
    "figure  [ cocfig ] schematically illustrates the interaction between curves of contact in non - decomposable sweeps .",
    "[ singtrimclem ] if @xmath249 is a singular p - trim curve and @xmath535 is a limit - point of @xmath536 such that @xmath537 , then @xmath538 .",
    "_ the proof is similar to case ( i ) of proof for theorem  [ thetadecomplem ] .",
    "[ singtrimptdef ] a limit point @xmath9 of a singular p - trim curve @xmath249 such that @xmath539 will be called a * singular trim point*.    in figure  [ ptrimcurvefig](b ) a singular trim point @xmath449 is shown on @xmath201 .",
    "[ thetaneglem ] if @xmath443 such that @xmath540 then @xmath233 .",
    "_ let @xmath541 .",
    "recall the definition of the function @xmath468 from equation  [ lambdaeq ] and relation @xmath542 from theorem  [ lambdalem ] .",
    "clearly , if @xmath543 , then @xmath82 is a local maxima of the function @xmath468 and the inverse trajectory of @xmath544 intersects @xmath190 and @xmath545 .",
    "hence , if @xmath540 then @xmath233 .",
    "@xmath62    the above two propositions link the curves of @xmath341 to the curves of @xmath201 .",
    "we see that every curve of @xmath341 lies inside a curve of @xmath201 and every curve @xmath249 of @xmath201 has a curve @xmath546 of @xmath341 which makes contact with it .",
    "we have already seen that @xmath341 is a collection of curves on which @xmath547 is non - zero .",
    "thus , the computation of @xmath341 in modern kernels is straightforward .",
    "the task before us is now to locate the points of @xmath548 .",
    "this is enabled by the following function .",
    "[ omegadef ] let @xmath549 be a parametrization of a curve @xmath550 of @xmath341 .",
    "let @xmath551 and @xmath552 at @xmath449 , i.e. , @xmath553 .",
    "define the function @xmath554 as follows .",
    "@xmath555 where @xmath398 is the cross - product in @xmath23 .    here , @xmath477 is a measure of the oriented angle between the tangent at @xmath449 to @xmath550 and the kernel ( line ) of the jacobian @xmath138 restricted to the tangent space @xmath556 .",
    "[ omegaprop ] every singular p - trim curve @xmath249 makes contact with a curve @xmath550 of @xmath341 so that if @xmath449 is a singular trim point of @xmath249 then @xmath557 . furthermore , at such points , @xmath558 where @xmath559 refers to the derivative of @xmath477 along the curve @xmath550 .",
    "_ we know from proposition  [ thetaneglem ] that @xmath560 .",
    "since @xmath341 and @xmath201 form the boundaries of @xmath344 and @xmath194 respectively , @xmath341 and a singular p - trim curve @xmath249 of @xmath201 meet tangentially at the singular trim point .",
    "further , by an argument similar to the case ( i ) of theorem  [ thetadecomplem ] , it can be seen that at a singular trim point @xmath449 , @xmath561 is the null - space of the jacobian @xmath562 . since @xmath563 , @xmath564 . since the function",
    "@xmath477 measures the oriented angle between @xmath565 and @xmath566 , it follows that @xmath557 .",
    "the derivative @xmath567 at singular trim points for non - decomposable sweeps shown in figure  [ nondecompspherefig ] and figure  [ nondecompellipsefig ] .",
    "@xmath62    proposition  [ omegaprop ] confirms that for every singular p - trim curve , we may use the function @xmath477 to locate a singular trim point @xmath449 in a computationally robust manner .",
    "thus , via @xmath0 and @xmath477 we may access every component of @xmath201 .    in the generic situation ,",
    "( i ) the singular p - trim curve @xmath249 has a finite set of singular trim points .",
    "each of these points lie on a curve of @xmath341 .",
    "( ii ) for all but finitely many non - singular points @xmath251 , the image @xmath226 lies on the transversal intersection of two surface patches @xmath273 and the remaining non - singular points lie on intersection of three surface patches @xmath273 where each @xmath568 corresponds to a suitable subinterval @xmath259 .    _",
    "_ it follows from proposition  [ singtrimclem ] that the singular trim points lie on @xmath341 . since at a non - singular trim point @xmath251 , @xmath569 , the proof for ( ii ) is identical to the proof for lemma  [ transinterlem ] about elementary trim curves .",
    "@xmath62    note that the computation of @xmath249 above is transversal except at the known point @xmath570 , i.e. , where @xmath571 .",
    "the problem then reduces to a surface - surface intersection which is transversal except at a known point .",
    "this information is usually enough for most kernels to compute @xmath249 robustly .",
    "figure  [ nestedfig ] schematically illustrates a scenario in which a singular p - trim curve is nested inside an elementary p - trim curve .",
    "note that the sweep is non - decomposable and this will be detected by the presence of points on @xmath124 where @xmath0 is negative .",
    "further , the region bounded by the singular p - trim curve needs to be excised before a surface - surface intersection algorithm can trace the elementary trim curves since no neighborhood of @xmath572 ( where @xmath0 is zero ) can be parametrized .",
    "our analysis will first successfully identify and excise the region bound by the singular p - trim curve .",
    "after parametrizing the remaining part , the task of excising the regions bound by elementary p - trim curves can be handled by existing kernels .",
    "this paper develops a mathematical framework for the implementation of the `` generic '' solid sweep in modern solid modelling kernels .",
    "this is done via a complete understanding of singularities and of self - intersections within the envelope and the notion of decomposability .",
    "this in turn is done through the important invariant @xmath2 by which all trim - curves are either stable surface - surface intersections or are caught by @xmath2 .",
    "we now detail certain implementation issues .",
    "firstly , the use of funnel as the parametrization space and the so called `` procedural '' framework is now standard , see e.g. , the acis kernel .",
    "secondly , the non - generic case in the sweep , as in blends or surface - surface intersections , will need careful programming and convergence with existing kernel methods for handling degeneracy .",
    "next , while we have not tackled the case when the trim curves intersect the left / right caps , that analysis is not difficult and we skip it for want of space . finally , the non - smooth sweep is a step away .",
    "the local geometry is already available .",
    "the trim curves and other combinatorial / topological properties of the smooth and non - smooth case are tackled in a later paper .",
    "mathematically , our framework may also extend to more complicated cases where the curves of contact are not simple .",
    "this calls for a more morse - theoretic analysis which should yield rich structural insights .",
    "the invariant @xmath2 is surprisingly strong and needs to be studied further .",
    "in this section we briefly describe an application of solid sweep in the packaging industry where complex needs for handling products arise .",
    "a few example scenarios are , orienting the products precisely as they pass along the assembly line , separating one stream of products into two streams or combing two streams into one , inverting the product as it passes along the line , introducing exact spacing between consecutive products , and so on . this is often achieved by a conveyor screw which rotates about its own axis and hence propels the product ahead which is sitting in its groove .",
    "the surface of this screw is specifically designed for moving the required product along the required path .",
    "see  @xcite for a video of conveyor screws which group a set of products together and introduce precise time lag between two consecutive products .    in order to design such a screw for the required object and the required motion profile ,",
    "the rotation of the screw is compounded into the desired motion profile .",
    "the object is then swept along the resultant trajectory and the swept volume so obtained is subtracted from a cylinder to obtain the conveyor screw .",
    "figure  [ screwfig ] shows the surface of a screw designed to translate a cylinder .",
    "the conventional method of designing such screws involves sampling the trajectory at a finite number of positions , and taking the union of the object positioned at all these positions . the resultant  discrete \" swept volume",
    "is then subtracted from the cylinder to obtain an approximate screw .",
    "this is shown in figure  [ discretescrewfig ] . as expected",
    ", this approach produces a large number of sliver faces and the brep structure of the resulting solid has a high degree of complexity .",
    "further , the solution is neither accurate nor smooth .",
    "recall the statement of proposition  8 that for @xmath51 and @xmath75 $ ] , either ( i ) @xmath77 and @xmath78 , or ( ii ) @xmath79 and @xmath80 or ( iii ) @xmath76 .",
    "_ define @xmath573 and @xmath574 as @xmath575 @xmath576 and @xmath577 respectively .",
    "we define the following objects in @xmath578 where the fourth dimension is time .",
    "let @xmath579 and @xmath580 .",
    "note that @xmath581 is a four dimensional topological manifold and @xmath582 is a three dimensional submanifold of @xmath581 .",
    "further , a point @xmath583 lies in @xmath584 if @xmath92 and @xmath585 .",
    "further , if @xmath75 $ ] , @xmath586 forms the boundary of @xmath581 where define the projection @xmath587 is defined as @xmath588 and the projection @xmath589 is defined as @xmath590 .",
    "clearly , for a point @xmath591 , if @xmath592 then @xmath593 .",
    "hence a necessary condition for @xmath385 to be in @xmath6 is that the line @xmath594 should be tangent to @xmath595 which is a three dimensional manifold which is smooth everywhere except at @xmath596 and at @xmath597 . for @xmath598 , the outward normal to @xmath595 at @xmath599",
    "is given by @xmath600 and the outward normal to @xmath595 at @xmath601 is given by @xmath574 .",
    "we now compute the outward normal to @xmath595 at @xmath602 .",
    "the manifold @xmath582 is diffeomorphic to @xmath603 , i.e. , the cross product of @xmath22 which is a 2-dimensional manifold and @xmath25 which is a 1-dimensional manifold , with the diffeomorphism given by @xmath604 , @xmath605 .",
    "hence , if @xmath606 spans @xmath607 and @xmath608 spans @xmath609 then the tangent space of @xmath603 at @xmath583 is spanned by @xmath610 and @xmath611 is spanned by + @xmath612 .",
    "hence , the outward normal to @xmath595 at @xmath613 is @xmath614 .",
    "consider now three cases as follows .    case ( i ) : @xmath615 . at any point @xmath616",
    "there is a cone of outward normals given by @xmath617 where @xmath618 and @xmath619 .",
    "so if the line @xmath594 is tangent to @xmath595 at @xmath599 then @xmath620 for some @xmath621 where @xmath622 and @xmath623 . solving the above for @xmath624 we get @xmath625 .",
    "hence @xmath78 .",
    "case ( ii ) : @xmath79 .",
    "proof is similar to case ( i ) .",
    "case ( iii ) : @xmath92 .",
    "if the line @xmath594 is tangent to @xmath582 at @xmath613 there exist @xmath626 not all zero such that @xmath627 it follows that @xmath628 .",
    "in other words , @xmath629 . @xmath62",
    "recall the inverse trajectory of a fixed point @xmath18 as @xmath456 .",
    "we will denote the trajectory of @xmath18 by @xmath630 \\to \\mathbb{r}^3 $ ] , @xmath631 .",
    "we now note a few useful facts about @xmath457 .",
    "we assume without loss of generality that @xmath236 and @xmath632 . denoting the derivative with respect to @xmath13 by @xmath633 , we have @xmath634 since @xmath635 we have , @xmath636 differentiating eq .",
    "[ aso3eq ] w.r.t .",
    "@xmath13 we get @xmath637 using eq .",
    "[ ybardoteq ] and eq .",
    "[ adottnoteq ] we get @xmath638 differentiating eq .",
    "[ ybardoteq ] w.r.t .",
    "time we get @xmath639 using equations  [ ybardotdoteq ] , [ adottnoteq ] and [ adotdottnoteq ] we get @xmath640",
    "_ proof . _ recall the definition of function",
    "@xmath468 as @xmath469 differentiating eq .  [ lambdaeq ] with respect to time and denoting derivative w.r.t . @xmath13 by @xmath633 , we get @xmath641 at @xmath615 , @xmath642 . since @xmath643 , it follows from eq .",
    "[ ybardottnoteq ] that @xmath644 .",
    "it is easy to verify that @xmath645 .",
    "hence , @xmath646 from eq .",
    "[ ddotlambdaeq ] and eq .",
    "[ ybardotdottnoteq ] it follows that @xmath647 since @xmath648 for all @xmath13 in some neighbourhood @xmath649 of @xmath82 , we have that @xmath650 . hence @xmath651 . hence @xmath652",
    "= @xmath653 . here",
    "@xmath654 is the differential of the gauss map , i.e. the curvature tensor of @xmath655 at point @xmath18 . using this in eq .",
    "[ ddotlambdatnoteq ] and the fact that @xmath656 , @xmath657 we get @xmath658 recalling that @xmath659 @xmath660 here @xmath661 and @xmath662 where @xmath654 is the shape operator ( differential of the gauss map ) of @xmath655 at @xmath473 . also , @xmath663 and @xmath664 .",
    "assume without loss of generality that @xmath236 and @xmath237 , hence @xmath665 , @xmath666 and @xmath667 .",
    "using eq .",
    "[ adottnoteq ] and the fact that @xmath668 we get @xmath669 from eqs .",
    "[ lsi2eq ] and  [ lsirelationeq ] and the fact that @xmath670 we get @xmath671 . @xmath62",
    "we now describe the parametrization of @xmath672 assuming that the sweep @xmath91 is simple .",
    "we obtain a procedural parametrization of @xmath673 which is an abstract way of defining curves and surfaces .",
    "this approach relies on the fact that from the user s point of view , a parametric surface(curve ) in @xmath23 is a map from @xmath674(@xmath26 ) to @xmath23 and hence is merely a set of programs which allow the user to query the key attributes of the surface(curve ) , e.g. its domain and to evaluate the surface(curve ) and its derivatives at the given parameter value .",
    "this approach to defining geometry is especially useful when closed form formulae are not available for the parametrization map and one must resort to iterative numerical methods .",
    "we use the newton - raphson(nr ) method for this purpose . as an example , the parametrization of the intersection curve of two surfaces is computed procedurally in  @xcite .",
    "this approach has the advantage of being computationally efficient as well as accurate . for a detailed discussion on the procedural framework ,",
    "see  @xcite .",
    "the computational framework is as follows . given @xmath7 and @xmath21 , an approximate funnel is first computed , which we will refer to as the seed surface .",
    "now , when the user wishes to evaluate @xmath673 or its derivative at some parameter value , a nr method will be started with seed obtained from the seed surface .",
    "the nr method will converge , upto the required tolerance , to the required point on @xmath673 , or to its derivative , as required . here , the precision of the evaluation is only restricted by the finite precision of the computer and hence is accurate .",
    "it has the advantage that if a tighter degree of tolerance is required while evaluation of the surface or its derivative , the seed surface does not need to be recomputed .",
    "thus , for the procedural definition of @xmath673 we need the following :    1 .   an nr formulation for computing points on @xmath675 and its derivatives , which we describe in section  [ nrformsubsec ] 2 .   seed surface for seeding the nr procedure , which we describe in section  [ seedsubsec ]    recall that by the non - degeneracy assumption , @xmath675 is the union of @xmath676 .",
    "this suggests a natural parametrization of @xmath675 in which one of the surface parameters is time @xmath13 .",
    "we will call the other parameter @xmath9 and denote the seed surface by @xmath495 which is a map from the parameter space of @xmath675 to the parameter space of @xmath677 , i.e. @xmath678 and while the point @xmath679 may not belong to @xmath675 , it is close to @xmath675 . in other words",
    ", @xmath680 is close to @xmath391 .",
    "we call the image of the seed surface through the sweep map @xmath130 as the approximate envelope and denote it by @xmath681 , i.e. @xmath682 .",
    "we make the following assumption about @xmath681 .",
    "note that this is not a very strong assumption and holds true in practice even with rather sparse sampling of points for the seed surface .",
    "we now describe the newton - raphson formulation for evaluating points on @xmath675 and its derivatives at a given parameter value .",
    "recall that the points on @xmath675 were characterized by the tangency condition @xmath683 . introducing the parameters @xmath684 of @xmath675 , we rewrite this equation @xmath685 : @xmath686 so , given @xmath687 , we have one equation in two unknowns , viz . @xmath688 and @xmath689 .",
    "@xmath690 is defined as the intersection of the plane normal to the iso-@xmath13(for @xmath615 ) curve of @xmath681 at @xmath691 with the iso-@xmath13(for @xmath615 ) curve of @xmath675 which is nothing but @xmath83 .",
    "recall that @xmath83 is given by @xmath692 where @xmath693 obey eq .",
    "[ envlcondpareq ] .",
    "henceforth , we will suppress the notation that @xmath694 and @xmath695 are functions of @xmath9 and @xmath13 .",
    "also , all the evaluations will be understood to be done at parameter values @xmath687 .",
    "the tangent to iso-@xmath13 curve of @xmath681 at @xmath687 is given by @xmath696 hence , @xmath690 is the solution of simultaneous system of equations  [ envlcondpareq ] and  [ planeorthoeq ] @xmath697 eq .",
    "[ envlcondpareq ] and eq .",
    "[ planeorthoeq ] give us a system of two equations in two unknowns , @xmath118 and @xmath119 and hence can be put into nr framework by computing their first order derivatives w.r.t @xmath118 and @xmath119 . for any given parameter value @xmath687 , we seed the nr method with the point @xmath698 and solve eq .",
    "[ envlcondpareq ] and eq .",
    "[ planeorthoeq ] for @xmath699 and compute @xmath690 .    having computed @xmath700",
    "we now compute first order derivatives of @xmath675 assuming that they exist . in order to compute @xmath701",
    ", we differentiate eq .",
    "[ envlcondpareq ] and eq .",
    "[ planeorthoeq ] w.r.t .",
    "@xmath9 to obtain @xmath702 eq .",
    "[ derpeq1 ] and eq .",
    "[ derpeq2 ] give a system of two equations in two unknowns , viz .",
    ", @xmath703 and @xmath704 and can be put into nr framework by computing first order derivatives w.r.t . @xmath703 and @xmath704 .",
    "note that eq .",
    "[ derpeq1 ] and eq .",
    "[ derpeq2 ] also involve @xmath118 and @xmath119 whose computation we have already described .",
    "after computing @xmath703 and @xmath704 , @xmath701 can be computed as @xmath705 .",
    "@xmath706 can similarly be computed by differentiating eq .",
    "[ envlcondpareq ] and eq .",
    "[ planeorthoeq ] w.r.t .",
    "higher order derivatives can be computed in a similar manner .",
    "the seed surface is constructed by sampling a few points on the funnel and fitting a tensor product b - spline surface through these points .",
    "for this , we first sample a few time instants , say , @xmath707 from the time interval of the sweep . for each @xmath708 , we sample a few points on the pcurve of contact @xmath709 . for this",
    ", we begin with one point @xmath9 on @xmath709 and compute the tangent to @xmath709 at @xmath9 , call it @xmath173",
    ". then @xmath710 is used as a seed in newton - raphson method to obtain the next point on @xmath709 and this process is repeated ."
  ],
  "abstract_text": [
    "<S> in this work , we propose a detailed computational framework for modelling the envelope of the swept volume , that is the boundary of the volume obtained by sweeping an input solid along a trajectory of rigid motions . our framework is adapted to the well - established industry - standard brep format to enable its implementation in modern cad systems . </S>",
    "<S> this is achieved via a `` local analysis '' , which covers parametrization and singularities , as well as a `` global theory '' which tackles face - boundaries , self - intersections and trim curves . </S>",
    "<S> central to the local analysis is the `` funnel '' which serves as a natural parameter space for the basic surfaces constituting the sweep . </S>",
    "<S> the trimming problem is reduced to the problem of surface - surface intersections of these basic surfaces . </S>",
    "<S> based on the complexity of these intersections , we introduce a novel classification of sweeps as either decomposable or non - decomposable . </S>",
    "<S> further , we construct an _ invariant _ function @xmath0 on the funnel which efficiently separates decomposable and non - decomposable sweeps . through a geometric theorem </S>",
    "<S> we also show intimate connections between @xmath0 , local curvatures and the inverse trajectory used in earlier works as an approach towards trimming . </S>",
    "<S> in contrast to the inverse trajectory approach , @xmath0 is robust and is the key to a complete structural understanding , and an efficient computation of both , the singular locus and the trim curves , which are central to a stable implementation . </S>",
    "<S> several illustrative outputs of a pilot implementation are included .    </S>",
    "<S> sweeping , boundary representation , parametric curves and surfaces </S>"
  ]
}
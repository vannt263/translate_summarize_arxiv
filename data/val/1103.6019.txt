{
  "article_text": [
    "graph searching games are increasingly becoming a popular way to characterize , and even define , practical graph parameters .",
    "there are many advantages to a characterization by graph searching games : it provides a useful intuition which can assist in constructing more general or more specific parameters ; it gives insights into relations with other , similarly characterized parameters ; and it is particularly useful from an algorithmic perspective as many parameters associated with such games are both structurally robust and efficiently computable .",
    "one of the most common graph searching games is the node - search game . in this game several searchers and one fugitive occupy vertices of the graph and make simultaneous moves .",
    "the ( omniscient ) fugitive moves along searcher - free paths of arbitrary length whereas the searchers movements are not constrained by the topology of the graph .",
    "the goal of the game is to minimize the number of searchers required to capture the fugitive by cornering him in some part of the graph and placing a searcher on the same vertex .",
    "this game has been extensively studied  @xcite and several important graph parameters such as treewidth  @xcite , pathwidth  @xcite , and tree - depth  @xcite can be characterized by natural variants of this game .",
    "one variation frequently used , indeed the one which separates treewidth and pathwidth , is whether the location of the fugitive is known or unknown to the searchers .",
    "another common variation is whether the searchers use a monotone or a non - monotone searching strategy .",
    "monotone search strategies lead to algorithmically useful decompositions , whereas non - monotone strategies are more robust under graph operations and hence reflect structural properties , so showing that monotone strategies require no more searchers than non - monotone strategies is an important and common question in the area . whilst node - search games on undirected graphs tend to enjoy monotonicity  @xcite , on digraphs",
    "the situation is much less clear  @xcite .",
    "node - search games naturally extend to digraphs , however , in the translation another variation arises depending on how one views the constraints on the movement of the fugitive .",
    "one interpretation is that in the undirected case the fugitive moves along paths , so the natural translation would be to have the fugitive move along directed paths .",
    "another view is that the fugitive moves to some other vertex in the same connected component , and here the natural translation would be to have the fugitive move within the same strongly connected component .",
    "both interpretations have been studied in the literature , the former giving characterizations of parameters such as dag - width  @xcite and directed pathwidth  @xcite and the latter giving a characterization of directed treewidth  @xcite .    in  @xcite , giannopoulou and thilikos",
    "define a variant of the node - search game in which only the most recently placed searchers may be removed ; that is , the searchers must move in a last - in - first - out ( lifo ) manner .",
    "they show that the visibility of the fugitive is not relevant to the minimum number of searchers required , the game is monotone , and that it characterizes tree - depth . in this paper",
    "we consider the extension of this game to digraphs .",
    "we generalize the results of giannopoulou and thilikos by showing that the minimum number of searchers required to capture a fugitive on a digraph with a lifo - search is independent of :    * whether the fugitive is invisible or visible , * whether the searchers use a monotone or non - monotone search , and * whether the fugitive is restricted to moving in searcher - free strongly connected sets or along searcher - free directed paths .",
    "this result is somewhat surprising : in the standard node - search game these options give rise to quite different parameters  @xcite .",
    "we show that on digraphs the lifo - search game also characterizes a pre - existing measure , cycle - rank  a generalization of tree - depth to digraphs ( though as the definition of cycle - rank predates tree - depth by several decades , it is perhaps more correct to say that tree - depth is an analogue of cycle - rank on undirected graphs ) .",
    "the cycle - rank of a digraph is an important parameter relating digraph complexity to other areas such as regular language complexity and asymmetric matrix factorization .",
    "it was defined by eggan  @xcite , where it was shown to be a critical parameter for determining the star - height of regular languages , and interest in it as an important digraph parameter , especially from an algorithmic perspective , has recently been rekindled by the success of tree - depth  @xcite .",
    "it is well known that tree - depth can also be characterized by a node - search game where a visible fugitive plays against searchers that are only placed and never moved  @xcite . in that paper , ganian et al .",
    "considered one extension of this game to digraphs .",
    "here we consider the other natural extension , where the visible fugitive moves in strongly connected sets , and show that it also characterizes cycle - rank .",
    "our final result uses these graph searching characterizations to define a dual parameter that characterizes structural obstructions for cycle - rank .",
    "we consider two obstructions , motivated by the shelters of  @xcite and the havens of  @xcite , that define simplified strategies for the fugitive .",
    "the game characterization then implies that these structural features are necessarily present when the cycle - rank of a graph is large . by showing that such strategies are also sufficient for the fugitive , we obtain a rare instance of an exact min - max theorem relating digraph parameters .",
    "the results of this paper can be summarized with the following characterizations of cycle - rank .",
    "[ thm : main2 ] let @xmath0 be a digraph , and @xmath1 a positive integer .",
    "the following are equivalent :    1 .",
    "@xmath0 has cycle - rank @xmath2 , 2 .",
    "on @xmath0 , @xmath1 searchers can capture a fugitive with a lifo - search strategy , 3 .",
    "on @xmath0 , @xmath1 searchers can capture a visible fugitive restricted to moving in strongly connected sets with a searcher - stationary search strategy , 4 .",
    "@xmath0 has no lifo - haven of order @xmath3 , and 5 .",
    "@xmath0 has no strong shelter of thickness @xmath4 .",
    "the paper is organised as follows . in section  [ sec : prelim ] we recall the definitions and notation that we use throughout the paper . in section  [ sec : game ]",
    "we define the lifo - search and searcher - stationary games and show that they characterize cycle - rank . in section  [ sec : min - max ] we prove the min - max theorem for cycle - rank , and in section  [ sec : conc ] we conclude with a discussion on further research and open problems .",
    "all ( di)graphs in this paper are finite , simple , directed and without self - loops , although the results readily extend to multigraphs with self - loops . for simplicity",
    ", we also assume that all digraphs contain at least one vertex unless explicitly mentioned .",
    "we use standard notation and terminology , in particular @xmath5 and @xmath6 denote the sets of vertices and edges respectively of a digraph @xmath0 and between digraphs , @xmath7 denotes the subgraph relation .",
    "we will often interchange an induced subgraph with the set of vertices which defines it , in particular strongly connected sets of vertices are sets of vertices that induce a strongly connected subgraph , and we will often view strongly connected components as sets of vertices . given a digraph @xmath0 and a set of vertices @xmath8 , we use @xmath9 to denote the subgraph of @xmath0 induced by @xmath10 . an _ initial component _ of a digraph @xmath0",
    "is a strongly connected component @xmath11 with no edges from @xmath12 to @xmath11 .",
    "@xmath13 is _ successor - closed _ if there are no edges in @xmath0 from @xmath14 to @xmath15 .",
    "given a finite set @xmath16 , we use @xmath17 to denote the set of finite words over @xmath16 , and @xmath18 to denote the set of words over @xmath16 of length @xmath19 .",
    "we use @xmath20 to denote the empty word and @xmath21 or juxtaposition to denote concatenation .",
    "for @xmath22 we write @xmath23 if @xmath24 is a prefix of @xmath25 , that is if there exists a word @xmath26 such that @xmath27 . for @xmath28 , we use @xmath29 to denote the length of @xmath24 , and @xmath30 to denote the set @xmath31 . given two sets @xmath32 and @xmath33",
    "we use @xmath34 to denote their symmetric difference , that is @xmath35 . given a set @xmath36 of subsets of @xmath16 , a _",
    "@xmath7-chain _ is a subset @xmath37 such that @xmath38 . if there is no @xmath39 such that @xmath40 , @xmath41 for some @xmath42 , or @xmath43 , then @xmath44 is a _",
    "maximal @xmath7-chain_.    the _ cycle - rank _ of a digraph @xmath0 , @xmath45 , is defined as follows :    * if @xmath0 is acyclic then @xmath46 .",
    "* if @xmath0 is strongly connected then @xmath47 .",
    "* otherwise @xmath48 where the maximum is taken over all strongly connected components @xmath14 of @xmath0 .",
    "we begin by formally defining the lifo - search game , and its variants , for digraphs .",
    "each variation of the lifo - search game gives rise to a digraph parameter corresponding to the minimum number of searchers required to capture the fugitive under the given restrictions .",
    "the main result of this section is that for any digraph all these parameters are equal .",
    "furthermore , we show they are all equal to one more than the cycle - rank of the digraph .      in summary , for the graph searching game",
    "in which we are interested the fugitive can run along searcher - free directed paths of any length , the searchers can move to any vertex in the graph , and the fugitive moves whilst the searchers are relocating .",
    "the only restriction we place on the searchers is that only the most recently placed searchers may be removed .",
    "if a searcher is placed on the fugitive then he is captured and the searchers win , otherwise the fugitive wins .",
    "the goal is to determine the minimum number of searchers required to capture the fugitive . for simplicity",
    "we assume that each searcher move consists of either placing or removing one searcher and observe that this does not affect the minimum number of searchers required to capture the fugitive .",
    "the variants we are primarily interested in are whether the searchers use a monotone or a non - monotone strategy , whether the fugitive is visible or invisible , and whether or not the fugitive must stay within the same strongly connected component when he is moving . as",
    "our fundamental definitions are dependent on these latter two options , we define four _ game variants _ : @xmath49 , corresponding to the visibility of the fugitive and whether he is constrained to moving within strongly connected components , and parameterize our definitions by these variants .",
    "let us fix a digraph @xmath0 .",
    "a position in a lifo - search on @xmath0 is a pair @xmath50 where @xmath51 and @xmath52 is a ( possibly empty ) induced subgraph of @xmath53 .",
    "intuitively @xmath24 represents the position and ordered placement of the searchers and @xmath52 represents the part of @xmath0 that the fugitive can reach ( in the visible case ) or the set of vertices where he might possibly be located ( in the invisible case ) .",
    "we say a position @xmath50 is an _ @xmath54-position _",
    "if @xmath52 is successor - closed ; an _ @xmath55-position _ if it is a union of strongly connected components of @xmath53 ; a _ @xmath56-position _ if @xmath52 is successor - closed and has a unique initial component ; and a _ @xmath57-position _ if @xmath52 is a strongly connected component of @xmath53 .    to reflect how the game transitions to a new position during a round of the game we say , for @xmath58 , a @xmath59-position @xmath60 is a _",
    "@xmath59-successor _ of @xmath50 if either @xmath61 or @xmath62 , with @xmath63 , and    * ( for @xmath64 ) for every @xmath65 there is a @xmath66 and a directed path in @xmath67 from @xmath68 to @xmath69 , or * ( for @xmath70 ) for every @xmath65 there is a @xmath66 such that @xmath68 and @xmath69 are contained in the same strongly connected component of @xmath67 .",
    "ideally we would like to assume games start from @xmath71 , however in the visible variants of the game this might not be a legitimate position .",
    "thus , for @xmath72 , if @xmath71 is not a @xmath59-position we include it as a special case , and set as its @xmath59-successors all @xmath59-positions of the form @xmath73 .",
    "we observe that in all variants , the successor relation is monotone in the sense that if @xmath50 and @xmath74 are positions with @xmath75 and @xmath76 is a successor of @xmath74 , then there is a successor @xmath60 of @xmath50 with @xmath77 .    for @xmath58 , a _",
    "( @xmath59-lifo-)search _ in a digraph @xmath0 from @xmath59-position @xmath50 is a ( finite or infinite ) sequence of @xmath59-positions @xmath78 @xmath79 where for all @xmath80 , @xmath81 is a @xmath59-successor of @xmath82 .",
    "a lifo - search is _ complete _ if either @xmath83 for some @xmath84 , or it is infinite .",
    "we observe that if @xmath83 , then @xmath85 for all @xmath86 .",
    "we say a complete lifo - search is _ winning for the searchers _ if @xmath83 for some @xmath84 , otherwise it is winning for the fugitive .",
    "a complete lifo - search from @xmath71 is _ monotone _",
    "if @xmath87 for all @xmath42 ; it is _ searcher - stationary _ if @xmath88 for all @xmath42 where @xmath89 ; and it _ uses at most @xmath1 searchers _ if @xmath90 for all @xmath42 .    whilst a complete lifo - search from @xmath71 describes a single run of the game , we are more interested in the cases where one of the players ( particularly the searchers ) can always force a win , no matter what the other player chooses to do . for this",
    ", we introduce the notion of a strategy . for @xmath58 , a _ ( searcher ) @xmath59-strategy _",
    "is a ( partial that can be reached from @xmath71 in a lifo - search consistent with the strategy .",
    "however , as this definition is somewhat circular , we assume strategies are total . ] ) function @xmath91 from the set of all @xmath59-positions to @xmath92 such that for all @xmath50 , @xmath93 is the first component of a @xmath59-successor of @xmath50 ; so with the possible exception of @xmath94 , either @xmath95 or @xmath96 .",
    "a @xmath59-lifo - search @xmath97 is _ consistent _ with a @xmath59-strategy @xmath91 if @xmath98 for all @xmath80 .",
    "a strategy @xmath91 is winning from @xmath50 if all complete lifo - searches from @xmath50 consistent with @xmath91 are winning for the searchers .",
    "likewise , a strategy is monotone ( searcher - stationary , uses at most @xmath1 searchers ) if all consistent complete lifo - searches from @xmath71 are monotone ( searcher - stationary , use at most @xmath1 searchers respectively ) .",
    "we say @xmath1 searchers can capture a fugitive on @xmath0 in the @xmath59-game with a ( monotone ) lifo - search strategy if there is a ( monotone ) @xmath59-strategy that uses at most @xmath1 searchers and is winning from @xmath71 .",
    "for @xmath99 , we define the ( monotone ) @xmath59-lifo - search number of @xmath0 , @xmath100 ( @xmath101 ) , as the minimum @xmath1 for which there is a ( monotone ) winning @xmath59-strategy that uses at most @xmath1 searchers .",
    "we also define the visible , strongly connected , searcher - stationary search number of @xmath0 , @xmath102 as the minimum @xmath1 for which there is a searcher - stationary winning @xmath57-strategy that uses at most @xmath1 searchers .    in section  [ sec :",
    "min - max ] we will also consider fugitive @xmath59-strategies : a partial function @xmath103 from @xmath104 to induced subgraphs of @xmath0 , defined for @xmath105 if @xmath50 is a @xmath59-position and @xmath106 is the first component of a @xmath59-successor of @xmath50",
    ". a lifo - search @xmath97 is _ consistent _ with a fugitive @xmath59-strategy @xmath103 if @xmath107 for all @xmath80 , and a fugitive strategy is winning if all consistent complete lifo - searches are winning for the fugitive . in this section , a strategy will always refer to a searcher strategy .",
    "we observe that in all game variants , a strategy that is winning from @xmath50 can be used to define a strategy that is winning from @xmath108 for any @xmath109 : the searchers can play as if the fugitive is located in the larger space ; and from the monotonicity of the successor relation , the assumption that the actual set of locations of the fugitive is a subset of the assumed set of locations remains invariant .",
    "one consequence is that a winning strategy on @xmath0 defines a winning strategy on any subgraph of @xmath0 , so the search numbers we have defined are monotone with respect to the subgraph relation .",
    "[ prop : subgraph ] let @xmath0 be a digraph and @xmath110 a subgraph of @xmath0 . then",
    ":    * @xmath111 , and * @xmath112 for @xmath113 .",
    "another consequence is that a winning strategy in the invisible fugitive variant defines a winning strategy when the fugitive is visible ; and a winning strategy when the fugitive is not constrained to moving within strongly connected components defines a winning strategy when he is .",
    "this corresponds to our intuition of the fugitive being more ( or less ) restricted .",
    "also , in all game variants , a monotone winning strategy is clearly a winning strategy , and because a searcher - stationary lifo - search is monotone , a winning searcher - stationary strategy is a monotone winning strategy .",
    "these observations yield several inequalities between the search numbers defined above .",
    "for example @xmath114 as any winning monotone @xmath54-strategy is also a winning @xmath57-strategy . the full set of these relationships is shown in a hasse diagram in figure  [ fig : rel ] , with the larger measures towards the top .",
    "@xmath115\\ar@{-}[d]\\ar@{-}[dr]\\\\ { \\textrm{lifo}^{{\\texttt{i}}}}(g)\\ar@{-}[d]\\ar@{-}[dr]&{\\textrm{lifo}^{{\\texttt{m}}{\\texttt{v}}}}(g)\\ar@{-}[dl]\\ar@{-}[dr]&{\\textrm{lifo}^{{\\texttt{m}}{\\texttt{isc}}}}(g)\\ar@{-}[d]\\ar@{-}[dl]&{\\textrm{ss}^{{\\texttt{vsc}}}}(g)\\ar@{-}[dl]\\\\ { \\textrm{lifo}^{{\\texttt{v}}}}(g)\\ar@{-}[dr]&{\\textrm{lifo}^{{\\texttt{isc}}}}(g)\\ar@{-}[d]&{\\textrm{lifo}^{{\\texttt{m}}{\\texttt{vsc}}}}(g)\\ar@{-}[dl]\\\\ & { \\textrm{lifo}^{{\\texttt{vsc}}}}(g )   } \\ ] ]    the main result of this section is that all these digraph parameters are equal to one more than cycle - rank .",
    "[ thm : game - char ] for any digraph @xmath0 : @xmath116    from the above observations , to prove theorem  [ thm : game - char ] it is sufficient to prove the following three inequalities :    1 .",
    "@xmath117 , 2 .",
    "@xmath118 , and 3 .",
    "@xmath119 .",
    "these are established with the following series of lemmas .",
    "for any digraph @xmath0 , @xmath117 .    we show that if a @xmath57-strategy is not searcher - stationary then it is not a winning strategy from @xmath71 .",
    "the result then follows as this implies every winning @xmath57-strategy is searcher - stationary .",
    "let @xmath91 be a @xmath57-strategy , and suppose @xmath120 is a complete @xmath57-lifo - search from @xmath121 consistent with @xmath91 which is not searcher - stationary .",
    "let @xmath122 be the least index such that @xmath123 and @xmath124 .",
    "as @xmath125 , there exists @xmath126 such that @xmath127 . by the minimality of @xmath122 , and the assumption that we only place or remove one searcher in each round , @xmath128 . as @xmath129 , @xmath130 , and as @xmath131 , @xmath132 . as @xmath124",
    ", it follows that @xmath133 and @xmath134 are the same strongly connected component of @xmath135 .",
    "thus @xmath136 is a @xmath57-successor of @xmath137 . as @xmath138",
    ", it follows that @xmath139 is an infinite , and hence complete , @xmath57-lifo - search ( from @xmath71 ) consistent with @xmath91 .",
    "as @xmath89 for all @xmath80 , the lifo - search is not winning for the searchers .",
    "thus @xmath91 is not a winning strategy .    for any digraph @xmath0 , @xmath140 .",
    "we prove this by induction on @xmath141 .",
    "if @xmath142 , then @xmath143 .",
    "now suppose @xmath144 for all digraphs @xmath110 with @xmath145 .",
    "we first consider the case when @xmath0 is not strongly connected . from proposition",
    "[ prop : subgraph ] , @xmath146 where the maximum is taken over all strongly connected components @xmath14 of @xmath0 . as @xmath0 is not strongly connected , @xmath147 for all strongly connected components @xmath14 of @xmath0 .",
    "therefore , by the induction hypothesis @xmath148 now suppose @xmath0 is strongly connected .",
    "let @xmath91 be a winning searcher - stationary @xmath57-strategy which uses @xmath102 searchers . as @xmath71 is a legitimate @xmath57-position , if @xmath50 is a @xmath57-successor of @xmath71 then @xmath149 .",
    "thus @xmath150 .",
    "let @xmath151 .",
    "as @xmath91 is a searcher - stationary strategy which uses the minimal number of searchers , it follows that @xmath152 .",
    "thus , by the induction hypothesis , @xmath153    for any digraph @xmath0 , @xmath154 .    we also prove this by induction on @xmath141 .    if @xmath155 , then @xmath156 .",
    "now suppose @xmath157 for all digraphs @xmath110 with @xmath145 .",
    "first we consider the case when @xmath0 is not strongly connected .",
    "as @xmath147 for each strongly connected component @xmath14 , by the inductive hypothesis , there is a monotone @xmath54-strategy , @xmath158 , which captures a fugitive using at most @xmath159 searchers . from the definition of cycle - rank , for each strongly connected component @xmath14 of @xmath0 , @xmath160 ,",
    "thus @xmath158 uses at most @xmath161 searchers .",
    "we define a monotone @xmath54-strategy which captures a fugitive on @xmath0 with at most @xmath161 searchers as follows . intuitively , we search the strongly connected components of @xmath0 in topological order using the monotone strategies @xmath158 . more precisely ,",
    "let @xmath162 be an ordering of the strongly connected components of @xmath0 such that if there is an edge from @xmath163 to @xmath164 then @xmath126 . we define @xmath91 as follows .",
    "* @xmath165 , * for @xmath166 , if @xmath167 and @xmath168 where @xmath169 , @xmath170 , * for @xmath171 , if @xmath172 and @xmath173 then @xmath174 where @xmath106 is the maximal proper prefix of @xmath24 .    from the definition of @xmath54-successors and the ordering of the strongly connected components",
    "if @xmath175 is an @xmath54-lifo - search on @xmath0 where @xmath176 and @xmath177 , then @xmath178 .",
    "it follows ( by induction on the length of a lifo - search ) that every lifo - search from @xmath71 consistent with @xmath91 can be divided into a sequence of lifo - searches @xmath179 , where @xmath180 can be viewed as a lifo - search consistent with @xmath181 with @xmath182 added to the second component of every position .",
    "thus if each @xmath181 is monotone , winning and uses at most @xmath161 searchers , then @xmath91 is also monotone , winning and uses at most @xmath161 searchers .",
    "now suppose @xmath0 is strongly connected .",
    "let @xmath183 be the vertex which minimizes @xmath184 .",
    "let @xmath185 , so @xmath186 . by the induction hypothesis",
    ", there exists a winning monotone @xmath54-strategy @xmath187 which uses at most @xmath188 searchers to capture a fugitive on @xmath110 .",
    "we define an @xmath54-strategy @xmath91 on @xmath0 which uses at most @xmath189 searchers as follows . initially ,",
    "place ( and keep ) a searcher on @xmath183 , then play the strategy @xmath187 on @xmath190 .",
    "more precisely , @xmath191 and @xmath192 . clearly any lifo - search consistent with @xmath91 can be viewed as a lifo - search consistent with @xmath187 prepended with the position @xmath71 and where the first component of every position is prepended with @xmath183 .",
    "thus if @xmath187 is monotone , then @xmath91 is monotone , and if @xmath187 is winning then @xmath91 is winning .",
    "thus @xmath91 is a monotone winning @xmath54-strategy which uses at most @xmath193 searchers .      with a characterization of cycle - rank in terms of several graph searching games",
    "we can compare it with other digraph measures defined by similar games .",
    "in particular , the directed pathwidth of a digraph , @xmath194 , which can be characterized by an invisble - fugitive graph searching game  @xcite , and the dag - depth , @xmath195 which can be characterized by a visible - fugitive , searcher - stationary searching game  @xcite . whilst the relationships we present here are known  @xcite , using the game characterizations we obtain a more simple and more intuitive proof .    for any digraph @xmath0 , @xmath196",
    "in this section we consider the dual parameter arising from considering the graph searching games from the fugitive s perspective .",
    "we show that it can be characterized by two types of structural features , akin to the havens and brambles used to dually characterize treewidth  @xcite .",
    "the first of these is the natural generalization of a shelter from  @xcite , a structural obstruction shown to be dual to tree - depth .",
    "a _ strong shelter _ of a digraph @xmath0 is a collection @xmath197 of non - empty strongly connected sets of vertices such that for any @xmath198 @xmath199 where @xmath200 is the @xmath7-maximal elements of @xmath201 .",
    "the _ thickness _ of a shelter @xmath197 is the minimal length of a maximal @xmath7-chain .",
    "the second structural obstruction we consider is motivated by the definition of a haven in  @xcite , a structural feature dual to directed treewidth .",
    "a _ lifo - haven of order @xmath1 _ is a function @xmath202 from @xmath203 to induced subgraphs of @xmath0 such that :    1 .",
    "@xmath204 is a non - empty strongly connected component of @xmath53 , and 2 .   if @xmath23 and @xmath205 then @xmath206 .    whilst adler  @xcite has shown that the havens of  @xcite do not give an exact min - max characterization of directed treewidth and safari  @xcite",
    "has shown that directed versions of havens and brambles give rise to distinct parameters , we show that lifo - havens and strong shelters both give a tight min - max characterization of cycle - rank .",
    "[ thm : min - max ] let @xmath0 be a digraph and @xmath1 a positive integer .",
    "the following are equivalent :    1 .",
    "@xmath0 has cycle - rank @xmath207 , 2 .",
    "@xmath0 has no lifo - haven of order @xmath3 , and 3 .",
    "@xmath0 has no strong shelter of thickness @xmath3 .",
    "\\(i ) @xmath208 ( ii ) .",
    "assume that it is not the case that @xmath0 has no lifo - haven of order @xmath4 , that is , @xmath0 has a lifo - haven @xmath202 of order @xmath209 .",
    "we show the fugitive has a winning strategy against @xmath1 searchers , so by theorem  [ thm : game - char ] , @xmath210 .",
    "define a @xmath57-strategy @xmath103 for the fugitive ( against @xmath1 searchers ) by defining @xmath211 for all suitable triples @xmath105 . from ( h1 ) , @xmath212 is a valid @xmath57-position .",
    "furthermore , ( h2 ) implies that if @xmath50 is a @xmath57-position such that @xmath213 , then @xmath212 is a @xmath57-successor of @xmath50 , so @xmath103 is a @xmath57-strategy ( defined for all lifo - searches that use at most @xmath1 searchers ) .",
    "also , if @xmath214 is a complete lifo - search consistent with @xmath103 then @xmath215 for all @xmath216 .",
    "as @xmath217 when @xmath218 , it follows that all consistent complete lifo - searches that use at most @xmath1 searchers are winning for the fugitive .",
    "thus @xmath103 is a winning strategy for the fugitive , so @xmath219 . by theorem  [ thm : game - char ] , @xmath210 .",
    "\\(ii ) @xmath208 ( iii ) .",
    "we show that a strong shelter @xmath197 of thickness @xmath1 can be used to define a haven of order @xmath1 . for each @xmath220",
    "we define @xmath221 inductively as follows . for @xmath222 ,",
    "let @xmath223 be any @xmath7-maximal element of @xmath197 .",
    "note that @xmath224 is a strong shelter of thickness @xmath225 .",
    "now suppose @xmath226 , @xmath227 is defined , @xmath228 , and @xmath229 is a strong shelter of thickness @xmath230 .",
    "from the definition of a strong shelter , there exists a @xmath7-maximal element of @xmath231 that does not contain @xmath68 , as otherwise @xmath232 for all @xmath233 .",
    "let @xmath234 be that element .",
    "as @xmath228 and @xmath235 , it follows that @xmath236 .",
    "further , @xmath237 is a strong shelter of thickness @xmath238 , satisfying the assumptions necessary for the next stage of the induction .",
    "now for all @xmath220 , @xmath234 is a non - empty strongly connected set such that @xmath236 .",
    "thus there is a unique strongly connected component of @xmath239 that contains @xmath234 . defining @xmath204 to be that component",
    "we see that @xmath202 satisfies ( h1 ) . for ( h2 ) , from the definition of @xmath234 , if @xmath23 and @xmath240 , then @xmath241 , so @xmath242 .",
    "therefore @xmath202 is a haven of order @xmath1 .",
    "\\(iii ) @xmath208 ( i ) .",
    "again , we prove the contrapositive , using a proof similar to  @xcite .",
    "suppose @xmath210 .",
    "let @xmath110 be a strongly connected component of @xmath0 which has cycle - rank @xmath243 .",
    "we prove by induction on @xmath1 that @xmath110 , and hence @xmath0 , has a strong shelter of thickness @xmath209 .",
    "every digraph with @xmath244 has a strong shelter of thickness @xmath245 : take @xmath246 for some @xmath247 .",
    "thus for @xmath248 , the result is trivial .",
    "now suppose for @xmath249 every digraph of cycle - rank @xmath250 contains a strong shelter of thickness @xmath251 .",
    "for @xmath252 , let @xmath253 . from the definition of cycle - rank , @xmath254 for all @xmath252 .",
    "thus , by the induction hypothesis , @xmath255 contains a strong shelter , @xmath256 , of thickness @xmath257 . as @xmath258 for all @xmath259",
    ", it follows that @xmath260 is a strong shelter .",
    "as @xmath256 has thickness @xmath1 for all @xmath252 , @xmath197 has thickness @xmath209 .",
    "combining theorems  [ thm : game - char ] and  [ thm : min - max ] gives our main result :      1 .",
    "@xmath0 has cycle - rank @xmath2 , 2 .",
    "on @xmath0 , @xmath1 searchers can capture a fugitive with a lifo - search strategy , 3 .   on @xmath0 , @xmath1 searchers can capture a visible fugitive restricted to moving in strongly connected sets with a searcher - stationary search strategy , 4 .",
    "@xmath0 has no lifo - haven of order @xmath3 , and 5 .",
    "@xmath0 has no strong shelter of thickness @xmath4 .",
    "this multiple characterization of cycle - rank gives a new perspective on the measure which can be useful for further investigation .",
    "for example , whilst it is known that computing the cycle - rank is np - complete  @xcite , the characterization in terms of a graph searching game with a visible fugitive automatically implies that for any fixed @xmath1 , deciding if a digraph has cycle - rank @xmath1 is decidable in polynomial time . from a parameterized complexity perspective",
    ", techniques based on separators have shown measures such as directed treewidth are fixed - parameter tractable",
    ". whether the visible , strongly connected game characterizations of cycle - rank can improve the known complexity from xp to fpt is part of ongoing research .",
    "dietmar berwanger , anuj dawar , paul hunter , and stephan kreutzer .",
    "-width and parity games . in _ proceedings of the 23rd international symposium on theoretical aspects of computer science _ , pages 524536 , 2006 .",
    "robert ganian , petr hlinen , joachim kneis , alexander langer , jan obdrzlek , and peter rossmanith .",
    "on digraph width measures in parameterized algorithmics . in _",
    "4th international workshop on parameterized and exact computation ( iwpec 2009 ) _",
    ", pages 185197 , 2009 .",
    "stephan kreutzer and sebastian ordyniak .",
    "digraph decompositions and monotonicity in digraph searching . in",
    "_ 34th international workshop on graph - theoretic concepts in computer science ( wg 2008 ) _ ,",
    "pages 336347 , 2008 ."
  ],
  "abstract_text": [
    "<S> we consider the extension of the last - in - first - out graph searching game of giannopoulou and thilikos to digraphs . we show that all common variations of the game require the same number of searchers , and the minimal number of searchers required is one more than the cycle - rank of the digraph . </S>",
    "<S> we also obtain a tight duality theorem , giving a precise min - max characterization of obstructions for cycle - rank . </S>"
  ]
}
{
  "article_text": [
    "a natural and important class of problems in computer science deals with random generation of objects satisfying certain properties .",
    "more precisely , one is interested in an efficient algorithm that , given a _",
    "compact _ description of a set of objects , outputs an element in the set uniformly at random , where the exact meaning of `` compact '' depends on the specific problem in question .",
    "uniform sampling typically arises for problems in @xmath0 .",
    "namely , given an instance belonging to a language in @xmath0 , one aims to produce a witness uniformly at random . here , the requirement is stronger than that of decision and search problems . in a seminal paper , jerrum ,",
    "valiant and vazirani @xcite gave a unified framework for this problem and showed that , for polynomial - time verifiable relations @xmath1 , uniform sampling of a witness @xmath2 for a given instance @xmath3 is reducible to approximate counting of the witnesses , and hence , can be efficiently accomplished using a @xmath4 oracle .",
    "it is natural to ask whether the requirement for an @xmath4 oracle can be lifted .",
    "in fact , this is the case ; a result of bellare , goldreich , and petrank @xcite shows that an @xmath0 oracle is sufficient and also necessary for uniform sampling of @xmath0 witnesses .",
    "the @xmath0 sampling problem can be equivalently stated as follows : given a boolean circuit of polynomially bounded size , sample an input that produces the output @xmath5 ( if possible ) , uniformly at random among all possibilities .",
    "this problem can be naturally generalized to models of computation other than small boolean circuits , and an interesting question to ask is the following : for what restricted models , the uniform ( or almost - uniform ) sampling problem is efficiently solvable ( e.g. , by polynomial - time algorithms or polynomial - sized circuits ) without the need for an additional oracle ?",
    "of course if the role of the @xmath0 oracle in @xcite can be replaced by a weaker oracle that can be efficiently implemented , that would immediately imply an efficient uniform sampler .",
    "while for general @xmath0 relations the full power of an @xmath0 oracle is necessary , this might not be the case for more restricted models .    in this work , we study the sampling problem for the restricted model of _ polynomial functions_. a polynomial function of degree @xmath6 over a field @xmath7 ( that we assume to be finite ) is a mapping @xmath8 such that every coordinate of the output can be computed by an @xmath9-variate polynomial of total degree at most @xmath6 over @xmath7 . the corresponding sampling problem ( that we call _ variety sampling _ )",
    "is defined as follows : given a polynomial function , find a pre - image of a given output ( that can be considered the zero vector without loss of generality ) uniformly at random .",
    "hence , in this problem one seeks to sample a uniformly random point on a given algebraic variety .",
    "it is not difficult to show that this problem is , in general , @xmath0-hard .",
    "hence , it is inevitable to relax the generality of the problem if one hopes to obtain an efficient solution without the need for an @xmath0 oracle .",
    "accordingly , we restrict ourselves to the case where    1 .",
    "the co - dimension of the variety ( or , the number of the polynomials that define the variety ) is _ small _ , 2 .",
    "the underlying field is _ sufficiently large _ , 3 .",
    "the output distribution is only required to be _ statistically close _ to the uniform distribution on the variety .",
    "it is shown in @xcite that almost uniform generation of @xmath0 witnesses ( with respect to the statistical distance ) is possible without using an @xmath0 oracle for self - reducible relations for which the size of the solution space can be efficiently approximated .",
    "the relation underlying the variety sampling problem consists of a set of @xmath9-variate polynomials over @xmath7 and a point @xmath10 , and it holds if and only if @xmath3 is a common zero of the polynomials . obviously , assuming that field operations can be implemented in polynomial time , this is a polynomial - time verifiable relation .",
    "moreover , the relation is self reducible , as any fixing of one of the coordinates of the witness @xmath3 leads to a smaller instance of the problem itself , defined over @xmath11 variables .",
    "approximate counting of the witnesses amounts to giving a sharp estimate on the number of common zeros of the set of polynomials .",
    "several such estimates are available .",
    "in particular , a result of lang and weil ( theorem  [ thm : langweil ] ) that we will later use in the paper gives general lower and upper bounds on the number of rational points on varieties .",
    "moreover , there are algorithmic results ( see @xcite and the references therein ) that consider the problem of counting rational points on a given variety that belongs to a certain restricted class of varieties over finite fields .",
    "thus , it appears that the result of @xcite already covers the variety sampling problem .",
    "however , this is not the case because of the following subtleties :    1 .",
    "our relation is not necessarily self - reducible in the strong sense required by the construction of @xcite .",
    "what required by this result is that partial fixings of the witness can be done in steps of at most logarithmic length ( to allow for an efficient enumeration of all possible fixings ) .",
    "namely , in our case , a partial fixing of @xmath3 amounts to choosing a particular value for one of the @xmath9 variables .",
    "the portion of @xmath3 corresponding to the variable being fixed would have length @xmath12 , and in general , this can be much larger than @xmath13 .",
    "the general lang - weil estimate gives interesting bounds only when the underlying field is fairly large .",
    "the algorithmic results mentioned above , being mostly motivated by cryptographic or number - theoretic applications such as primality testing , focus on very restricted classes of varieties , for instance , elliptic @xcite or hyperelliptic @xcite curves ( or general plane curves @xcite that are only defined over a constant number of variables ) , or low - dimensional abelian varieties @xcite .",
    "moreover , they are efficient in terms of the running time with respect to the logarithm of the field size and the dependence on the number of variables or the degree",
    "( whenever they are not restricted to constants ) can be exponential .",
    "hence , over large fields , fine granularity of the self - reduction can not be fulfilled and over small fields , no reliable and efficient implementation of a counting oracle is available for our problem , and we can not directly apply the general sampler of @xcite . in this work , we construct an efficient sampler that directly utilizes the algebraic structure of the problem . the main theorem that we prove",
    "is the following :    * ( main theorem ) * [ thm : main ] let the integer @xmath14 be any absolute constant , @xmath15 and @xmath16 be positive integers , @xmath17 be an arbitrarily small parameter , and @xmath18 be a large enough prime power .",
    "suppose that @xmath19 $ ] are polynomials , each of total degree at most @xmath6 , whose set of common zeros defines an affine variety @xmath20 of co - dimension @xmath21 .",
    "there is a randomized algorithm that , given the description of @xmath22 and the parameter @xmath23 , outputs a random point @xmath24 such that the distribution of @xmath25 is @xmath26-close to the uniform distribution on @xmath27 .",
    "the worst case running time of the algorithm is polynomial in @xmath28 , and the description length of @xmath29 .",
    "though we present the above result for affine varieties , our techniques can be readily applied to the same problem for projective varieties as well . at a high level ,",
    "the algorithm is simple and intuitive , and can be roughly described as follows : to sample a point on a variety @xmath27 of co - dimension @xmath21 , we first sample a @xmath21-dimensional affine subspace @xmath30 uniformly at random and then a random point on @xmath31 . to make the analysis clear , we show ( in section  [ sec : graph ] ) that the problem can be viewed as a sampling problem on _ almost regular _ bipartite graphs , where one can sample a left vertex almost uniformly by picking the left neighbor of a random edge .",
    "the main part of the analysis ( section  [ sec : variety ] ) is to show why this reduction holds , and requires basic tools from algebraic geometry , in particular the lang - weil estimate on the number of points on varieties ( theorem  [ thm : langweil ] ) , and details on how to deal with problems such as varying dimension and size of the intersection @xmath31 .",
    "the reduction combined with the graph sampling algorithm constitutes the sampling algorithm claimed in the main theorem .",
    "trevisan and vadhan @xcite introduced the notion of _ samplable sources _ as probability distributions that can be sampled using small , e.g. , polynomial - sized , boolean circuits .",
    "extractor _ for samplable sources is a deterministic function whose output , when the input is randomly chosen according to any samplable distribution , has a distribution that is statistically close to uniform .",
    "assuming the existence of certain hard functions , they constructed such extractors .    as a natural class of samplable distributions , dvir , gabizon and wigderson @xcite considered the class of distributions that are samplable by low - degree multivariate polynomials .",
    "they gave a construction of extractors for such sources over sufficiently large finite fields that does not rely on any hardness assumption and achieves much better parameters .",
    "moreover , they introduced the dual notion of _ algebraic sources _ that are defined as distributions that are uniform on rational points of low - degree affine varieties , and asked whether efficient extractors exist for such sources .",
    "our main theorem shows that algebraic sources ( for a wide range of parameters ) are close to samplable distributions , and hence , any extractor for samplable distributions is also an extractor for such algebraic sources .",
    "very recently , dvir @xcite gave a direct and unconditional construction of an extractor for algebraic sources when the field size is sufficiently large .",
    "we will use a simple form of the well known schwartz - zippel lemma and a theorem by lang and weil for bounding the number of the points on a variety :    @xcite [ lem : schzip ] let @xmath32 be a nonzero @xmath9-variate polynomial of degree @xmath6 defined over a finite field @xmath33 .",
    "then the number of zeros of @xmath32 is at most @xmath34 .",
    "@xcite [ thm : langweil ] let @xmath35 be positive integers .",
    "there exists a constant @xmath36 depending only on @xmath37 such that for any irreducible @xmath38-dimensional variety @xmath27 of degree @xmath6 defined in a projective space @xmath39 over a finite field @xmath33 , we have @xmath40 where @xmath41 is the number of rational points of @xmath27 over @xmath33 .",
    "this theorem can be generalized to the case of reducible varieties as follows :    [ coro : langweilgeneral ] let @xmath35 be positive integers . there exists a constant @xmath42 depending only on @xmath37 and a constant @xmath43 depending only on @xmath6 and integer @xmath44 , @xmath45 , such that for any @xmath38-dimensional variety @xmath27 of degree @xmath6 defined in a projective space @xmath39 over a finite field @xmath33 we have @xmath46 where @xmath41 is the number of rational points of @xmath27 over @xmath33 .",
    "let @xmath47 , where @xmath48 , be a decomposition of @xmath27 into distinct irreducible components and denote the set of @xmath38-dimensional components in this decomposition by @xmath49 .",
    "let @xmath50 .",
    "note that each component @xmath51 has dimension at most @xmath52 and by theorem  [ thm : langweil ] , the number of points on the union of the components outside @xmath49 is negligible , namely , at most @xmath53 where @xmath54 is a parameter depending only on @xmath35 . hence to prove the corollary",
    ", it suffices to bound the number of points on the union of the components in @xmath49 .    for each component",
    "@xmath55 we can apply theorem  [ thm : langweil ] , which implies that the number of points of @xmath56 in @xmath39 , assuming that its degree is @xmath57 , is bounded from @xmath58 by at most @xmath59 for some @xmath60 that depends only on @xmath61 .",
    "this upper bounds the number of points of @xmath27 by @xmath62 where @xmath63 ( from the fact that @xmath64 ) and @xmath65 .",
    "note that @xmath66 and @xmath67 can be upper bounded by quantities depending only on @xmath37 and @xmath6 , respectively .",
    "this proves one side of the inequality .    for the lower bound on @xmath68",
    ", we note that the summation above counts the points at the intersection of two irreducible components multiple times , and it will be sufficient to discard all such points and lower bound the number of points that lie on exactly one of the components .",
    "take a distinct pair of the irreducible components , @xmath56 and @xmath69 .",
    "the intersection of these varieties defines an @xmath70-dimensional variety , which by the upper bound we just obtained can have at most @xmath71 points , for some @xmath72 , and parameters @xmath73 depending only on @xmath6 and @xmath74 depending on @xmath75 .",
    "hence , considering all the pairs , the number of points that lie on more than one of the irreducible components is no more than @xmath76 , which means that the number of distinct points of @xmath27 is at least @xmath77 which is itself at least @xmath78 taking ( crudely ) @xmath79 and @xmath80 proves the corollary .",
    "[ rem : langweilaffine ] corollary  [ coro : langweilgeneral ] also holds for affine varieties .",
    "an affine variety @xmath27 can be seen as the restriction of a projective variety @xmath81 to the affine space , where no irreducible component of @xmath81 is fully contained in the hyperplane at infinity .",
    "then the _ affine dimension _ of @xmath27 will be the ( top ) dimension of @xmath81 , and the bound in corollary  [ coro : langweilgeneral ] holds for @xmath27 if the affine dimension of the variety is taken as the parameter @xmath38 in the bound .",
    "this is because each irreducible component of @xmath81 intersects the hyperplane at infinity at a variety of dimension less than @xmath38 , and by theorem  [ thm : langweil ] , adding those points to the estimate will have a negligible effect of order @xmath82 .",
    "finally , we review some basic notions that we use from probability theory . the _ statistical distance _ ( or _ total variation distance _ ) of two distributions @xmath83 and @xmath84 defined on the same finite space @xmath49 is defined as @xmath85 and @xmath86 denote the probability measures on @xmath49 defined by the distributions @xmath83 and @xmath84 , respectively .",
    "note that this is half the @xmath87 distance of the two distributions when regarded as vectors of probabilities over @xmath49 .",
    "it can be shown that the statistical distance of the two distributions is at most @xmath23 if and only if for every @xmath88 , we have @xmath89 - \\pr_{\\mathcal{y}}[t]| \\leq { \\epsilon}$ ] .",
    "when the statistical distance of @xmath83 and @xmath84 is at most @xmath23 , we say that @xmath83 and @xmath84 are @xmath23-close .",
    "we will also use the notion of a convex combination of distributions , defined as follows :    let @xmath90 be probability distributions on a finite set @xmath49 and @xmath91 be nonnegative real values that sum up to @xmath5 .",
    "then the _ convex combination _",
    "@xmath92 is a distribution @xmath83 on @xmath49 given by the probability measure @xmath93 for @xmath94 .",
    "there is a simple connection between convex combinations and distance of distributions :    [ prop : convexclose ] let @xmath95 and @xmath96 be probability distributions on a finite set @xmath49 such that for some @xmath97 , @xmath98 .",
    "then @xmath83 is @xmath23-close to @xmath84 .",
    "in this section we introduce a sampling problem on graphs , and develop an algorithm to solve it .",
    "we will later use this algorithm as a basic component in our construction of samplers for varieties .",
    "the problem is as follows :    [ prob : bisamp ] let @xmath99 be a bipartite graph defined on a set @xmath100 of left vertices and @xmath101 of right vertices .",
    "suppose that the degree of every vertex on the right is between @xmath5 and @xmath6 , for some @xmath102 , and the degree of every vertex on the left differs from an integer @xmath103 by at most @xmath104 .",
    "we are given an oracle @xmath105 that returns an element of @xmath101 chosen uniformly at random ( and independently at each call ) , and an oracle @xmath106 that returns the neighbor list of a given vertex @xmath107 .",
    "construct an algorithm that outputs a random vertex in @xmath100 almost uniformly .    intuitively , for a bipartite graph which is regular from left and right , sampling a vertex on the left amounts to picking a random edge in the graph , which is in turn possible by choosing a random edge connected to a random vertex on the right side .",
    "here of course , the graph is not regular , however the concentration of the left degrees around @xmath103 allows us to treat the graph as if it were regular and get an almost uniform distribution on @xmath100 by picking a random edge .",
    "we will compensate the irregularity from right by using a `` trial and error '' strategy .",
    "the pseudocode given in algorithm  [ alg : bisamp ] implements this idea .",
    "the algorithm in fact handles a more general situation , in which a call to @xmath108 can fail ( and return a special failure symbol @xmath109 ) with some probability upper bounded by a given parameter @xmath110 .",
    "@xmath111 given as in problem  [ prob : bisamp ] , and @xmath110 denoting the failure probability of @xmath108 .",
    "let @xmath112 be as in problem  [ prob : bisamp ] .",
    "@xmath113 @xmath114 @xmath115 @xmath116 @xmath117 with probability @xmath118 , output an element of @xmath27 uniformly at random and return .",
    "output an arbitrary element of @xmath100 .",
    "[ alg : bisamp ]    [ lem : vertexsamp ] the output distribution of algorithm  [ alg : bisamp ] is supported on @xmath100 and is @xmath119-close to the uniform distribution on @xmath100 .",
    "first we focus on one iteration of the * while * loop in which the call to @xmath108 has not failed , and analyze the output distribution of the algorithm conditioned on the event that line   returns a left vertex . in this case",
    ", one can see the algorithm as follows : add a special vertex @xmath120 to the set of left vertices @xmath100 .",
    "bring the degree of each right vertex up to @xmath6 by connecting it to @xmath120 as many times as necessary .",
    "hence , the graph @xmath99 now becomes @xmath6-regular from right .",
    "now the algorithm picks a random element @xmath121 and a random neighbor of @xmath122 and independently repeats the process if @xmath120 is picked as a neighbor .    let @xmath123 be a non - empty subset of the left vertices ( excluding @xmath120 ) in the graph .",
    "we want to estimate the probability of the event @xmath124 .",
    "we can write this probability as follows : @xmath125 = \\sum_{r \\in { \\mathcal{r } } } \\pr[t \\mid r = r ] \\pr[r = r ]       = \\frac{1}{|{\\mathcal{r}}| } \\sum_{r \\in { \\mathcal{r } } } \\pr[t \\mid",
    "r = r ]      = \\frac{1}{d |{\\mathcal{r}}| } \\sum_{r \\in { \\mathcal{r } } } |t \\cap \\gamma(r)| ,    \\end{aligned}\\ ] ] where in the last equation @xmath126 is the set of neighbors of @xmath38 in the graph .",
    "hence the summation can be simplified as the number of edges connected to @xmath124 .",
    "this quantity is in the range @xmath127 , because the left degrees are all concentrated around @xmath103 , ignoring @xmath120 which is by assumption not in @xmath124 .",
    "that is , @xmath128 = \\pr[t , \\lnot v_0 ] = \\frac{|t|\\ell}{d |{\\mathcal{r}}|}(1 \\pm \\delta ) , \\label{eqn : prt}\\ ] ] where we use the shorthand @xmath129 to denote a quantity in the range @xmath130 $ ] .",
    "hence the probabilities of all events that exclude @xmath120 are close to one another , which implies that the distribution of the outcome of a single iteration of the algorithm , conditioned on a non - failure , is close to uniform .",
    "we will now make this statement more rigorous .",
    "the degree of @xmath120 can be estimated as @xmath131 by equating the number of edges on the left and right side of the graph .",
    "similar to what we did for computing the probability of @xmath124 we can compute the probability of picking @xmath120 as @xmath132 combining this with we get that @xmath133 = \\frac{\\pr[t , \\lnot v_0]}{1-\\pr(v_0 ) } =",
    "\\frac{|t|}{|{\\mathcal{l}}|}\\left(1 \\pm \\frac{2\\delta}{1-\\delta}\\right).\\ ] ] hence , the output distribution of a single iteration of the * while * loop , conditioned on a non - failure ( i.e. , the event that the iteration reaches line   and outputs an element of @xmath100 ) is @xmath134-close to the uniform distribution on @xmath100",
    ". now denote by @xmath135 the failure probability . to obtain an upper bound on @xmath135 , note that the probability of sampling @xmath120 at line   of the algorithm is at most @xmath136 since each vertex on the right has at least one neighbor different from @xmath120 .",
    "@xmath137 now we get back to the whole algorithm , and notice that if the * while * loop iterates for up to @xmath138 times , the output distribution of the algorithm can be written as a convex combination @xmath139 where @xmath140 is the output distribution of a single iteration conditioned on a non - failure and @xmath141 is an arbitrary _ error distribution _ corresponding to the event that the algorithm reaches the last line . the coefficient of @xmath141 , for @xmath142 , can be upper bounded using by @xmath143 this combined with the fact that @xmath140 is @xmath134-close to uniform and proposition  [ prop : convexclose ] implies that @xmath144 is @xmath119-close to the uniform distribution on @xmath100 .",
    "now we are ready to describe and analyze our algorithm for sampling rational points on varieties . for the sake of brevity",
    ", we will present the results in this section for affine varieties .",
    "however , they can also be shown to hold for projective varieties using similar arguments .",
    "we reduce the problem to the vertex sampling problem described in the preceding section .",
    "the basic idea is to intersect the variety with randomly chosen affine spaces in @xmath145 and narrowing - down the problem to the points within the intersection .",
    "accordingly , the graph @xmath99 in the bipartite sampling problem will be defined as the incidence graph of the points on the variety with affine spaces .",
    "this is captured in the following definition :    [ defn : incidence ] let @xmath27 be an affine variety of co - dimension @xmath21 in @xmath145 .",
    "then the _ affine incidence graph _ of the variety is a bipartite graph @xmath146 defined as follows :    * the left vertex set is @xmath27 , * for a @xmath21-dimensional affine space @xmath30 , we say that @xmath30 _ properly intersects _",
    "@xmath27 if the intersection @xmath31 is non - empty and has dimension zero .",
    "then the right vertex set of @xmath99 is defined as the set of @xmath21-dimensional affine spaces in @xmath145 that properly intersect @xmath27 .",
    "* there is an edge between @xmath147 and @xmath148 if and only if the affine space @xmath25 contains the point @xmath149 .    before utilizing the vertex sampling algorithm of the preceding section",
    ", we need to develop the tools needed for showing that the affine incidence graph satisfies the properties needed by the algorithm .",
    "we begin with an estimate on the number of linear and affine subspaces of a given dimension .",
    "the estimate is straightforward to obtain , yet we include a proof for completeness .    [ prop : subspace ] let @xmath7 be a finite field of size @xmath150 , and let @xmath151 and @xmath152 be the number of distinct @xmath21-dimensional linear and affine subspaces of @xmath153 , respectively .",
    "then we have    1 .",
    "@xmath154 2 .",
    "@xmath155    if @xmath156 , then @xmath157 , and the claim is obvious .",
    "hence , assume that @xmath158 .",
    "denote by @xmath159 the number of ways to choose @xmath21 linearly independent vectors in @xmath153 .",
    "that is , @xmath160 this quantity is upper bounded by @xmath161 , and lower bounded by @xmath162 hence , the reciprocal of @xmath159 can be upper bounded as follows : @xmath163 where the last inequality follows from the assumption that @xmath164 .",
    "the number of @xmath21-dimensional subspaces of @xmath153 is the number of ways one can choose @xmath21 linearly independent vectors in @xmath153 , divided by the number of bases a @xmath21-dimensional vector space can assume .",
    "that is , @xmath165 by the bounds above , we obtain @xmath166 which implies @xmath167 .",
    "the second part of the claim follows from the observation that two translations of a @xmath21-dimensional subspace @xmath30 defined by vectors @xmath149 and @xmath25 coincide if and only if @xmath168 .",
    "hence , the number of affine @xmath21-dimensional subspaces of @xmath153 is the number of @xmath21-dimensional subspaces of @xmath153 multiplied by the number of cosets of @xmath30 , i.e. , @xmath169 .",
    "the following two propositions show that a good fraction of all @xmath21-dimensional affine spaces properly intersect any affine variety of co - dimension @xmath21 .",
    "[ prop : properlinear ] let @xmath170 be positive integers , and @xmath171 be an affine variety of co - dimension @xmath21 defined by the zero - set of @xmath21 polynomials @xmath172 $ ] , each of degree at most @xmath6 .",
    "suppose that @xmath173 is a fixed point of @xmath27 .",
    "then the fraction of @xmath21-dimensional affine spaces passing through @xmath25 that properly intersect @xmath27 is at least @xmath174 , where @xmath175 is independent of @xmath18 and polynomially large in @xmath170 .    without loss of generality , assume that @xmath25 is the origin , and that @xmath150 .",
    "denote by @xmath176 the set of @xmath21-dimensional linear subspaces that can be parametrized as @xmath177 where @xmath178 is a set of indeterminates in @xmath33 .",
    "note that @xmath179 , and define the polynomial ring @xmath180 $ ] .",
    "we first upper bound the number of _ bad _ subspaces in @xmath176 whose intersections with @xmath27 have nonzero dimensions . substituting the linear forms defining @xmath181 in @xmath29 we see that the intersection of @xmath27 and the elements of @xmath176 is defined by the common zero - set of polynomials @xmath182 $ ] , where for each @xmath183 $ ] , @xmath184 each @xmath185 , as a polynomial in @xmath186 , has total degree at most @xmath6 and each of its coefficients is a polynomial in @xmath187 of total degree at most @xmath6 .",
    "denote by @xmath188 $ ] the ideal generated by @xmath189 . for every @xmath190 $ ] , the ideal @xmath191 $ ] is generated by a polynomial @xmath192 .",
    "each coefficient of @xmath192 can be written as a polynomial in @xmath101 with total degree at most @xmath193 , where for a fixed @xmath21 , @xmath193 is polynomially large in @xmath6 .",
    "this can be shown using an elimination method , e.g. , generalized resultants or grbner bases ( cf .",
    "take any coefficient of @xmath192 which is a nonzero polynomial in @xmath101 . the number of the choices of @xmath194 which makes this coefficient zero is , by lemma  [ lem : schzip ] , at most @xmath195 .",
    "this also upper bounds the number of the choices of @xmath194 that make @xmath192 identically zero .",
    "a union bound shows that for all but at most @xmath196 choices of @xmath194 none of the polynomial @xmath192 is identically zero , and hence the solution space of @xmath197 is zero dimensional ( and obviously non - empty , as we already know that it contains @xmath25 ) .",
    "this gives an upper bound of @xmath198 on the fraction of bad subspaces in @xmath176 .    by proposition  [ prop : subspace ] ,",
    "the set @xmath176 contains at least a @xmath199 fraction of all @xmath21-dimensional subspaces of @xmath145 .",
    "hence , the fraction of @xmath21-dimensional subspaces of @xmath145 that properly intersect @xmath27 is at least @xmath200 the claim follows by taking @xmath201 .",
    "[ prop : properaffine ] let @xmath202 be positive integers , and @xmath171 be an affine variety of co - dimension @xmath21 defined by the zero - set of @xmath21 polynomials @xmath172 $ ] , each of degree at most @xmath6 .",
    "the fraction of @xmath21-dimensional affine subspaces that properly intersect @xmath27 is at least @xmath203 where @xmath204 are as in corollary  [ coro : langweilgeneral ] and proposition  [ prop : properlinear ] .",
    "we use a counting argument to obtain the desired bound .",
    "denote by @xmath205 , and @xmath152 the number of points of @xmath27 , the number of @xmath21-dimensional subspaces and @xmath21-dimensional affine subspaces in @xmath145 , respectively .",
    "then corollary  [ coro : langweilgeneral ] ( followed by remark  [ rem : langweilaffine ] ) implies that @xmath206 for some @xmath207 $ ] ( as the degree of @xmath27 is at most @xmath208 ) .    by proposition  [ prop : properlinear ] , for every @xmath173 , at least @xmath209 affine subspace pass through @xmath25 and properly intersect @xmath27 .",
    "hence in total @xmath210 affine spaces properly intersect @xmath27 , where we have counted every such affine space at most @xmath208 times ( this is because the intersection of @xmath27 and an affine space @xmath30 that properly intersects it is of size at most @xmath208 , and @xmath30 is counted once for each point at the intersection ) .",
    "thus , the fraction of distinct affine subspaces that properly intersect @xmath27 is at least @xmath211    by the fact that @xmath169 and the lower bound on @xmath41 , we conclude that this fraction is at least @xmath212 as @xmath213 , this proves the claim .    now having the above tools available",
    ", we are ready to give the reduction from variety sampling to the vertex sampling problem introduced in the preceding section and prove our main theorem : * proof of theorem  [ thm : main ] .",
    "* let @xmath214 be the affine incidence graph of @xmath27 .",
    "we will use algorithm  [ alg : bisamp ] on @xmath215 . to show that the algorithm works ,",
    "first we need to implement the oracles @xmath108 and @xmath216 that are needed by the algorithm .",
    "the function @xmath108 simply samples a @xmath21-dimensional affine space of @xmath145 uniformly at random , and checks whether the outcome @xmath30 properly intersects @xmath27 . to do so , one can parametrize the affine subspace as in the proof of proposition  [ prop : properlinear ] and substitute the parametrization in @xmath29 to obtain a system of @xmath21 polynomial equations in @xmath21 unknowns , each of degree at most @xmath193 which is polynomially large in @xmath6 .",
    "as @xmath21 is an absolute constant , it is possible to solve this system in polynomial time using multipolynomial resultants or the grbner bases method combined with backward substitutions .",
    "if at any point , the elimination of all but any of the variables gives the zero polynomial , it turns out that the system does not define a zero - dimensional variety and hence , @xmath30 does not properly intersect @xmath27 .",
    "also , if the elimination results in a univariate polynomial that does not have a solution in @xmath33 , the intersection becomes empty , again implying that @xmath30 does not properly intersect @xmath27 . in both cases @xmath108 fails , and otherwise , it outputs @xmath30 .",
    "furthermore , if the intersection is proper , the elimination method gives the list of up to @xmath217 points at the intersection , which one can use to construct the oracle @xmath216 .",
    "now we need to show that the graph @xmath215 satisfies the conditions required by lemma  [ lem : vertexsamp ] . by the argument above",
    ", the degree of every right vertex in @xmath215 is at least @xmath5 and at most @xmath217 , which is polynomially large in @xmath6 .",
    "let @xmath110 denote the failure probability of @xmath108 .",
    "then proposition  [ prop : properaffine ] implies that @xmath218 when @xmath219 .    to bound the left degrees of the graph , note that each left node , which is a point on @xmath27 , is connected to all @xmath21-dimensional affine subspaces that properly intersect @xmath27 and pass through the point .",
    "the number of such spaces is , by proposition  [ prop : subspace ] , at most @xmath220 ( assuming @xmath150 ) , and by combination of proposition  [ prop : subspace ] and proposition  [ prop : properlinear ] , at least @xmath221 now if we choose @xmath222 , the left degrees become concentrated in the range @xmath223 .    putting everything together , now we can apply lemma  [ lem : vertexsamp ] to conclude that the output distribution of the algorithm is @xmath26-close to the uniform distribution on @xmath27 .    to show the efficiency of the algorithm , first note that algorithm  [ alg : bisamp ] calls each of the oracles @xmath108 and @xmath216 at most @xmath224 times , which is upper bounded by a polynomial in @xmath225 .",
    "hence it remains to show that the implementation of the two oracles are efficient .",
    "the main computational cost of these functions is related to the problem of deciding whether a system of @xmath21 polynomial equations of bounded degree in @xmath21 unknowns has a zero dimensional solution space , and if so , computing the list of at most @xmath217 solutions of the system .",
    "as in our case @xmath21 is a fixed constant , elimination methods can be efficiently applied to reduce the problem to that of finding the zero - set of a single uni - variate polynomial of bounded degree .",
    "a randomized algorithm is given in @xcite for this problem that runs in expected polynomial time .",
    "thus , we can use this algorithm as a sub - routine in @xmath108 and @xmath216 to get a sampling algorithm that runs in expected polynomial time .",
    "then it is possible to get a worst - case polynomial time algorithm by using a _ time - out _ trick , i.e. , if the running time of the sampler exceeds a ( polynomially large ) threshold , it is forced to terminate and output an arbitrary point in @xmath145 .",
    "the error caused by this can increase the distance between the output distribution of the sampler and the uniform distribution on @xmath27 by a negligible amount that can be made arbitrarily small ( and in particular , smaller than @xmath226 ) , and hence , is of little importance .    finally , we need an efficient implementation of the field operations over @xmath33 .",
    "this is again possible using the algorithm given in @xcite .",
    "moreover , when the characteristic of the field is small , deterministic polynomial time algorithms are known for this problem @xcite .",
    "we showed the correctness and the efficiency of our sampling algorithm for varieties of constant co - dimension over large fields .",
    "though our result covers important special cases such as sampling random roots of multivariate polynomials , relaxing either of these requirements is an interesting problem . in particular , it remains an interesting problem to design samplers that work for super - constant ( and even more ambitiously , linear in @xmath9 ) co - dimensions ( in our result , the dependence of the running time on the co - dimension is exponential and thus , we require constant co - dimensions ) .",
    "moreover , in this work we did not attempt to optimize or obtain concrete bounds on the required field size , which is another interesting problem .",
    "finally , the error of our sampler ( i.e. , the distance of the output distribution from the uniform distribution on the variety ) depends on the field size , and it would be interesting to bring down the error to an arbitrary parameter that is given to the algorithm .",
    "we would like to thank frdric didier for fruitful discussions ."
  ],
  "abstract_text": [
    "<S> we consider the problem of uniform sampling of points on an algebraic variety . </S>",
    "<S> specifically , we develop a randomized algorithm that , given a small set of multivariate polynomials over a sufficiently large finite field , produces a common zero of the polynomials almost uniformly at random . </S>",
    "<S> the statistical distance between the output distribution of the algorithm and the uniform distribution on the set of common zeros is polynomially small in the field size , and the running time of the algorithm is polynomial in the description of the polynomials and their degrees provided that the number of the polynomials is a constant .    </S>",
    "<S> mahdi cheraghchi    amin shokrollahi </S>"
  ]
}
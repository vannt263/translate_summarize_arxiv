{
  "article_text": [
    "the recent spread of wireless devices has brought heavy data traffic which video - streaming requests , such as youtube , occupy a dominant portion of .",
    "unfortunately , however , current wireless systems have limitations of resources to accommodate this tremendous video traffic .",
    "discovering new but inexpensive resources is considered a solution to cope with the explosive traffic . in the same vein ,",
    "memory for data caching arises as a new resource to exploit in wireless communications @xcite .",
    "the characteristic of video traffic facilitates utilization of memory to handle huge video traffic ; a few popular videos account for the majority of video traffic @xcite and hence network traffic to carry the videos to the end users can be significantly reduced by storing the top - ranked video files near the users who are likely to request them .",
    "although caching has been intensively studied in wired networks , also known as content delivery network ( cdn ) , it is transparent to wireless segments . without consideration of wireless aspects ,",
    "cdn is not enough to provide sufficient data rate to wireless end users . in this context",
    ", there have been recent studies figuring out wireless caching . for a given caching placement ,",
    "several transmission schemes to exploit the given memory contents have been studied in @xcite .",
    "based on appropriate user grouping , when each user requests multiple files , a groupcasting scheme was proposed in @xcite . with practical zipf popularity distribution , @xcite characterized the regimes with different coded multicasting gains .",
    "prefix caching for wireless video streaming was proposed and optimized in @xcite .",
    "caching was exploited in cooperative multi - point mimo transmission ( comp ) to reduce backhaul cost in @xcite . because where and what to cache determines the performance of wireless caching , caching placement has also attracted research interests , namely femto - caching and device - to - device ( d2d ) caching . in @xcite , proactive caching for femto - caching and d2d caching was studied . a caching scheme based on prediction of future demands",
    "was proposed in @xcite .",
    "optimal caching placement is able to minimize the access distance and inter - cell interference in wireless cache networks . in @xcite ,",
    "an optimization problem in terms of the average delay , a function of caching placement , was formulated and proved to be np - complete when each user can access to a different set of femto base stations . with random caching placement for d2d communication , optimal cluster size and the parameter characterizing the random caching distribution",
    "were studied in @xcite , where a square cell was composed of square clusters and d2d communication was activated if the file requested by user in a cluster was cached in any device inside the cluster . for d2d",
    "coded caching placement , optimal portion of files to store and density of nodes caching the requested file were investigated in @xcite , respectively . combining coded multicasting with d2d communication , @xcite proposed caching and delivery schemes which can exploit spatial reuse gain as well as coded multicasting gain .",
    "caching placement optimizing a tradeoff between throughput and outage was explored in @xcite .",
    "when maximum - distance separable coding is used , optimal storage allocation under a total memory constraint was studied in @xcite .",
    "it was shown in @xcite that symmetric allocation achieved asymptotically optimal performance . replacing outage with delay",
    ", a similar tradeoff was revealed in a multi - hop network @xcite .    although the aforementioned studies on caching placement aim at wireless caching , the wireless channel models in those studies partially address effects of wireless channel fading on caching placement . in particular ,",
    "constant and identical channel links are assumed in most of the previous works @xcite .",
    "although the averaging effect of long file transmission justifies the assumption from a viewpoint of each link , random fading channels might reveal different aspects .",
    "for example , caching different files according to their popularity ( i.e. , _ file diversity _ ) , which increases the chance to access nearby caching nodes , is reported to be optimal @xcite because caching the same file in multiple helpers is redundant under constant and identical channels . however",
    ", caching the same file in different helpers might be able to offer _ channel diversity _ @xcite and hence caching the same file can be rather beneficial in random fading channels .",
    "although channel fading is considered in @xcite , the fundamental tradeoff was not clearly shown since they focused on proposing suboptimal or asymptotic solutions .    in this context , under random channel fading , this paper revisits and studies the optimal caching placement to minimize average bit error rate ( ber ) when there exist multiple helpers storing files .",
    "we identify the tradeoff between channel diversity and file diversity and derive optimal caching placement optimizing the tradeoff .",
    "our main contributions are as follows :    * we propose a greedy algorithm to find the optimal caching placement in terms of ber . exploiting the property of the optimal caching placement which we derive ,",
    "the proposed algorithm has considerably reduced search space .",
    "it is shown that optimal caching placement is not focusing on the file diversity gain only , contrary to @xcite ; optimal caching placement is a balance between the file diversity gain and the channel diversity gain . *",
    "we identify the conditions in terms of the popularity factor , i.e. , zipf exponent , that the optimal placement can be found without running the proposed greedy algorithm , and derive the corresponding optimal caching placement in closed form .",
    "in particular , we derive two special thresholds of popularity seeking an extreme of either file diversity gain or channel diversity gain , respectively . furthermore , given enough proximity and transmit power ,",
    "we show that optimal caching placement is parametrized solely with popularity .",
    "the rest of this paper is organized as follows : section [ system_model ] presents our system model .",
    "an optimization problem is formulated in section [ problem_formulation ] .",
    "we propose the algorithm to find a solution in section [ optimal_caching_placement ] and prove the optimality of the proposed algorithm . in section [ characterization ] ,",
    "we identify and analyze the tradeoff between the file diversity gain and the channel diversity gain .",
    "numerical results are presented in section [ numberical resutls ] .",
    "finally , section [ conclusion ] concludes this paper .",
    "in this paper , we consider a cell composed of multiple clusters . in each cluster , the users can access @xmath0 helpers which are capable of storing files in their memories .",
    "there is a file library whose size is @xmath1 which is strictly larger than @xmath0 .",
    "i.e. , @xmath2 .",
    "each helper can store one file from the library in advance , and the users request a file in the library independently with probability @xmath3 according to the zipf distribution with exponent @xmath4 , of which probability mass function is given by @xmath5 in each cluster , only one user is served for each file delivery period , which corresponds to orthogonal multiple access .",
    "assuming orthogonal frequency allocation across clusters , inter - cluster interference is not considered in this paper , and thus we consider one cluster in isolation for tractable analysis . in addition , for simplicity , we assume that based on open loop power control , all of the users in a cluster have the same average received signal - to - noise ratio ( snr ) from helpers regardless of their positions , but they still suffer from independent small - scale fading effects . as a result , the multi - user scenario is simplified into single - user one where a user who requests a file is served at every moment .",
    "if the requested file is already stored in any helper s memory in a cluster , the requested file is transmitted from the helper which cached the file . throughout this paper",
    ", we call this type of communication _ cluster communication_. if the requested file is cached by more than one helper , a helper which has the largest channel gain is selected by the requesting user , using perfect channel state information . fig .",
    "[ fig_system_model ] shows an example of caching placement for a system with seven helpers , where the instantaneous received snr from helper @xmath6 which caches the @xmath7th file is denoted by @xmath8 ; the average of @xmath8 is represented as @xmath9 . if the first file is requested by the user , since there are three helpers which has the file , the requesting user selects the helper whose received snr is the maximum among the three helpers and informs the corresponding helper to deliver the the first file . on the other hands ,",
    "if the file requested by the user is not stored in the cluster , the bs serves the requesting user with average received snr , @xmath10 ; namely , the file is transmitted through _",
    "cellular communication_. we denote the ratio between the average received snrs of cluster and cellular communication as @xmath11 such that @xmath12 , and owing to closer distances to caching helpers than to the macro base station , @xmath11 is reasonably assumed to be greater than one",
    ". however , instantaneous channels gains from helpers and bs follow rayleigh distribution .    packet error rate ( per ) and frame error rate ( fer ) are practical performance metrics .",
    "however , it is hard to mathematically analyze the impacts of caching placement and channel fading with per or fer because an expression of per or fer incorporating all affecting factors , such as channel coding and upper layer parameters , is usually not available . on the other hand , fer or per",
    "is in general represented as a function of ber .",
    "therefore , minimizing ber results in reducing fer or per , albeit not linearly proportional . in this context",
    ", we study optimal caching placement to minimize ber , which will also proportionally reduce per or fer . assuming arbitrary coherent modulation / demodulation , the instantaneous ber in general form is given as @xcite @xmath13 , where @xmath14 is the instantaneous received snr , @xmath15 , and @xmath16 are appropriate constants for each type of modulation , and @xmath17 is q - function defined as @xmath18 for simplity",
    ", we assume @xmath19 and @xmath20 , which corresponds to qpsk , but generalization for arbitrary @xmath15 and @xmath16 is straightforward and the assumption of @xmath19 and @xmath20 does not lose any insights .",
    "then , a file is transmitted over many coherent periods and the corresponding average ber of the file is obtained as @xmath21 .",
    "because caching placement affects the average ber , in this section , we derive the average ber as a function of caching placement . let us first derive the average ber of the @xmath7th file , denoted by @xmath22 , for given caching placement @xmath23 $ ] where @xmath24 is the number of helpers which cache the @xmath7th file such that @xmath25 . in the clustered system",
    ", since each helper provides equal average received snr , caching a file in which helper does not matter in average sense , caching placement can be characterized with the number of files cached in the cluster .",
    "if there are no helpers that stored the @xmath7th file in its memory ( i.e. , @xmath26 ) , the bs delivers the file to the user . in this case , since the average received snr from bs is @xmath10 , the average ber with cellular communication , @xmath27 , is calculated as @xmath28 otherwise , if @xmath29 , the @xmath30 file is delivered via cluster communication . since the helper with the largest channel gain among @xmath24 helpers is chosen to deliver the @xmath30 file to the user , the received snr of cluster communication follows the distribution of @xmath31 , of which pdf is @xmath32 using , the average ber of the @xmath7th file via cluster communication conditioned on @xmath24 cached helpers , @xmath33 is obtained as @xmath34 then , @xmath35 is obtained as @xmath36 since the @xmath30 file is requested by the user with probability @xmath3 , given caching placement @xmath37 , the average ber is derived as @xmath38\\label{eq_avg_error},\\end{aligned}\\ ] ] where @xmath39 is the indication function ; if event x is true , @xmath40 and otherwise , @xmath41 .",
    "then , the optimal caching placement that minimizes the average ber for the @xmath0-helper system can be obtained by solving the following optimization problem : @xmath42 where @xmath43 is a set of non - negative integers .",
    "the design variable of * p * is an @xmath0-dimension integer vector @xmath37 .",
    "a problem which finds an optimal integer variable is called integer programming . in many cases ,",
    "integer programming is too complicated to get a closed - form solution . on that account , instead of solving the problem directly ,",
    "we propose a greedy algorithm , which will be proven to be optimal under a mild condition .",
    "algorithm [ greedy_algorithm ] presents the proposed greedy algorithm , where @xmath44 is defined as @xmath45 by using and , @xmath44 is given as @xmath46 as shown in algorithm [ greedy_algorithm ] , at the @xmath47th iteration , the placement obtained by the proposed greedy algorithm provides the lowest average ber for the system with @xmath48 helpers .",
    "this is because the proposed greedy algorithm compares the amount of reduction in ber , @xmath49 , for each file and adds one file whose contribution is the largest to the memory in the cluster , where @xmath50 is the @xmath6th element of vector @xmath51 .    *",
    "input * @xmath0 ,  @xmath1 ,  @xmath4 ,  @xmath10 , and @xmath9 * initialize * @xmath52 $ ] @xmath53 @xmath54 * return * @xmath55    in general , a greedy algorithm is not global optimal ; however , we show that the proposed greedy algorithm can find an optimal solution . through the following lemma and theorem , we prove the optimality of the proposed greedy algorithm .",
    "[ lemma_1 ] for @xmath56 , ber gain of @xmath7th file decreases as @xmath24 increases",
    "@xmath57    please refer to appendix [ pf_lemma_1 ] .",
    "[ thm_1 ] for @xmath56 , the caching placement obtained by the proposed greedy algorithm , @xmath58 , is optimal for the @xmath0-helper system",
    ".    please refer to appendix [ pf_theorem_1 ] .",
    "the proposed greedy algorithm has low complexity , however , we can reduce the complexity further with the following proposition .",
    "[ proposition_1 ] for non - uniform popularity ( i.e. , @xmath59 ) , the elements of optimal caching placement @xmath60 must satisfy @xmath61    please refer to appendix [ pf_prop_1 ] .",
    "proposition [ proposition_1 ] implies that since a lower index file is requested more frequently , the placement which stores more files whose index is low can decrease the average ber more .",
    "it is shown in the proof of theorem 1 that caching placement of the @xmath47th iteration is optimal for the system with @xmath48 helpers .",
    "when there exist @xmath48 helpers , caching the @xmath62th file is strictly suboptimal since this implies one of the files more popular than the @xmath62th file is not cached .",
    "hence , @xmath63 for optimal caching placement . moreover , by proposition 1 , @xmath64 for @xmath65 .",
    "therefore , in the @xmath47th iteration which determines optimal caching placement of a system with @xmath48 helpers , it is unnecessary to compare the ber gain of the files less popular than the @xmath62th popular file .",
    "consequently , the number of comparisons in the @xmath47th iteration is reduced from the size of file library @xmath1 to @xmath47 . because @xmath66 iterations are required to find optimal caching placement of a system with @xmath0 helpers , the total number of comparisons decreases from @xmath67 to @xmath68 , which is independent of @xmath1 .",
    "theorem [ thm_1 ] ensures that the proposed greedy algorithm finds the optimal caching placement , given system parameters ( i.e. , @xmath0 ,  @xmath1 ,  @xmath4 ,  @xmath10 , and @xmath9 ) . in this section",
    ", we identify the conditions that the optimal placement can be found without running the proposed greedy algorithm , and derive the corresponding optimal placement . before analyzing further ,",
    "we first define the two types of gains which can be reaped by caching : _ file diversity gain _ and _ channel diversity gain_.    the amount of ber reduced by adding a new file which is not cached in any helper , is called file diversity gain .",
    "changing communication from cellular to cluster reduces average ber by means of the proximity between the helpers and the user .",
    "obviously , file diversity gain is proportional to the popularity of the file .",
    "hence , the file diversity gain of the @xmath6th file is defined as @xmath69    the amount of ber reduced by adding a file cached already by some helpers , is called channel diversity gain .    as we consider the effect of wireless fading channel such as small - scale fading , if we increase the number of helpers which store a specific file , the selection pool of channel links enlarges and ber of the file correspondingly improves due to the channel diversity .",
    "the channel diversity gain of the @xmath6th file is given as a function of the number of helpers that caches the @xmath6th file and the popularity of the @xmath6th file .",
    "the channel diversity gain of the @xmath6th popular file is written as @xmath70      in this subsection , we derive the condition when even placement , @xmath71=\\left[1, ...",
    ",1,0, ... ,0\\right]$ ] , is optimal . in order",
    "that the output of the algorithm becomes even placement , at each iteration , the file which was not cached in the past iterations need to be cached .",
    "this happens when the maximum file diversity gain , is larger than the maximum channel diversity gain , for all iterations . on the other hand ,",
    "if there exists any single iteration at which there is a file which has larger channel diversity gain than the maximum of file diversity gain , even caching placement can not be realized by the greedy algorithm .",
    "the following proposition reveals the condition when even placement is optimal .",
    "[ proposition_2 ] for @xmath56 , even caching placement is optimal if and only if @xmath72 , where @xmath73 is defined as @xmath74    please refer to appendix [ pf_prop_2 ] .",
    "this proposition states that if user s preference for files is sufficiently unbiased ( i.e. , low zipf exponent @xmath4 ) , even caching placement is a reasonable approach toward optimal performance .    for any @xmath11 ,",
    "even caching placement can not be optimal if @xmath75 , where @xmath76    since @xmath73 is an increasing function of @xmath11 and is bounded , we have @xmath77 which implies that if @xmath78 then , @xmath79 . by contraposition of proposition 2 , even caching placement can not be optimal if @xmath78 .",
    "this corollary implies that no matter how the received snr of cluster communication is large , if popularity is highly biased , channel diversity gain should be considered .      on the other extreme , if the smallest channel diversity gain is larger than the largest file diversity gain at every iteration , the output of the algorithm is single - file caching , i.e. , @xmath80=\\left[n,0, ... ,0\\right]$ ] .",
    "similarly , we can obtain an optimality condition of single - file caching .",
    "[ proposition_3 ] for @xmath56 , single - file placement is optimal if and only if @xmath81 , where @xmath82 is defined as @xmath83    please refer to appendix [ pf_prop_3 ] .",
    "when the zipf exponent is between @xmath73 and @xmath82 , owing to the following lemmas , we can analyze the structure of optimal placement in high snr regime .",
    "[ lemma_2 ] as @xmath84 , @xmath85 and @xmath86 for @xmath87    please refer to appendix [ pf_lemma_2 ] .",
    "lemma [ lemma_2 ] reveals that the channel diversity gain of multiple helpers decreases much faster than both of channel diversity gain of one helper and file diversity gain , in high snr regime .",
    "hence , if one more helpers cache the file , any file which was cached by a single helper or none of helpers has larger gain than any other files cached by multiple helpers , regardless of the popularity of files in high snr regime .",
    "now , we propose doubly caching placement with @xmath6 , in which up to the @xmath6-th popular files are stored in two helpers and the other files starting from the @xmath6 + 1-th popular file are stored in one helper until all helpers are occupied . in the following proposition ,",
    "the proposed doubly caching placement is shown to be optimal for a certain range of the zipf exponent .",
    "[ proposition_4 ] as @xmath84 , @xmath88 , and @xmath89 , doubly caching placement with @xmath90 is optimal if and only if @xmath91 and doubly caching placement with @xmath92 is optimal if and only if @xmath93 , where @xmath94    please refer appendix [ pf_prop_4 ] .    with propositions [ proposition_2 ] , [ proposition_3 ] and [ proposition_4 ] ,",
    "optimal caching placement can be obtained without running the greedy algorithm by comparing the zipf exponent of popularity , @xmath4 , with the thresholds , @xmath95 , @xmath96 .",
    "that is , if we have information about the file preference of users , then we can determine the optimal caching placement of helpers .",
    "until this point , we focused on the case when @xmath11 is larger than or equal to two .",
    "the condition @xmath56 is necessary for file diversity gain of each file to be larger than channel diversity gain of the file from one to two helpers .",
    "the regime where @xmath56 implies that the average received snr from helpers is larger than that from the macro base station by 3 db .",
    "given the proximity of femto base stations , it is known that the average received snr of a femto cell user is approximately 10 db higher than that of a macro cell user @xcite , so @xmath56 is typically achieved .",
    "we identified the optimal caching placement in the region of @xmath56 .",
    "for @xmath97 , fortunately , we can find optimal caching placement without running the proposed algorithm in high snr for @xmath98 .",
    "[ proposition_5 ] as @xmath84 , @xmath88 , and @xmath99 , doubly caching placement with @xmath100 is optimal",
    ".    please refer appendix [ pf_prop_5 ] .",
    "proposition [ proposition_5 ] verifies the analytic insights ; smaller @xmath11 brings less file diversity gain since the gain of first caching is higher as the snr difference between bs and helpers is larger . consequently , when @xmath11 is less than @xmath101 , channel diversity gain is more preferred . combining this fact with lemma [ lemma_2 ]",
    ", we can naturally conclude that caching all files in two helpers becomes optimal for @xmath97 in high snr .",
    "table [ tbl_summary ] summarizes the results of section [ characterization ] ; optimal caching placement depending on the range of zipf exponent and @xmath11 .",
    "the optimal caching placement in the region of @xmath56 is identified . for @xmath98 , the solution when snr is not large",
    "is unknown due to analytic intractability involved in lemma 1 but optimal caching placement is presented when snr is high .",
    "[ tbl_summary ]    .optimal caching placement depending on the range of zipf exponent [ cols=\"<,^,^,^\",options=\"header \" , ]      we compare ber performance of optimal caching placement with other caching placement for various system environments .    . ]    in fig .",
    "[ fig_sim1 ] , the average bers of different caching placement are shown for various snr of cluster communication under the default system parameters .",
    "this figure reveals that doubly caching placement achieves almost the same ber performance as optimal caching placement in all snr region .",
    "although even caching placement is known to be optimal without consideration of wireless aspects @xcite , it is rather outperformed by doubly caching placement in all snr region .     for snr@xmath102 [ db ] .",
    "]    the effects of the zipf exponent is considered in fig .",
    "[ fig_sim2 ] when @xmath103 [ db ] . as the zipf exponent increases , the frequency of requesting the most popular file increases and thus the ber of high - ranked file dominates the average ber .",
    "consequently , single - file caching placement shows better performance than even caching placement in high @xmath4 , but the opposite result is observed in low @xmath4 . on the other hand , doubly caching placement still show comparable ber performance with optimal caching placement for all values of the zipf exponent @xmath4 .",
    "we proposed an optimal greedy algorithm for caching placement in wireless femto - caching network .",
    "the proposed algorithm minimizes the average bit error rate with low computational complexity , exploiting the property of optimal caching placement which we derived .",
    "we also identified and explored the tradeoff between file diversity gain and channel diversity gain to minimize the average bit error rate .",
    "we derived two special thresholds of popularity seeking an extreme of either file diversity gain or channel diversity gain , respectively , which provide a useful caching placement guideline without running the proposed algorithm .",
    "furthermore , given enough proximity and transmit power , we showed that optimal caching placement was parametrized solely with popularity .",
    "we prove this lemma according to the range of @xmath104 : @xmath105 and @xmath106 . for @xmath105 , since zero is only integer which satisfies inequality @xmath107 , becomes @xmath108 using , @xmath109 and @xmath110 become @xmath111 obviously , we have , for @xmath56 , @xmath112 second , for the case when @xmath113 , we prove the equivalent statement that @xmath114 for @xmath115 .",
    "the equivalence is established by the two facts ; ( 1 ) @xmath116 and @xmath113 , @xmath117 obviously implies @xmath114 .",
    "( 2 ) conversely , @xmath118 can be extended to @xmath119 , and using mathematical induction , we can conclude @xmath120 for @xmath121 such that @xmath122 .",
    "now , we prove the equivalent statement . expressing the @xmath123 with ,",
    "@xmath124 @xmath125 can be rewritten as @xmath126 where @xmath127 is defined as @xmath128 .",
    "since @xmath129 has a positive value for all @xmath130 , it is enough to show that @xmath131 using the given pdf formula of @xmath132 in , @xmath127 becomes @xmath133   \\\\          & = \\frac{n+2}{\\bar{\\rho } } \\exp\\left(-\\frac{3x}{\\bar{\\rho}}\\right)\\left(1-\\exp\\left(-\\frac{x}{\\bar{\\rho}}\\right)\\right)^{n-1 } ,           \\end{aligned}\\ ] ] which is greater than zero for arbitrary @xmath134 and @xmath135 .",
    "based on , after simple manipulation , channel diversity gain can be expressed as integral of beta function . using the two properties of the beta function , @xmath193 and @xmath194",
    ", we have , for any @xmath195 , @xmath196 where @xmath197 is defined as @xmath198 hence , the ratio between @xmath199 and @xmath200 is represented by @xmath201 since numerator and denominator in have @xmath202 order of @xmath9 and @xmath203 order of @xmath9 for high snr regime , respectively , the limit becomes @xmath204 therefore , @xmath205 for any @xmath206 such that @xmath207 and @xmath208 .",
    "similarly , using and , the ratio between @xmath199 and @xmath209 is represented by @xmath210 where @xmath211 + since numerator and denominator in have @xmath202 order of @xmath9 and @xmath203 order of @xmath9 for high snr regime , respectively , the limit becomes @xmath212 therefore , @xmath213 for any @xmath206 such that @xmath214 and @xmath208 .",
    "this theorem is proved by induction . first , for @xmath136 , we can readily show that @xmath137 . supposing @xmath138",
    ", we will show that @xmath139 by contradiction .",
    "suppose @xmath58 is not optimal and there exists optimal caching placement for the @xmath0-helper system such that @xmath140 following the algorithm [ greedy_algorithm ] , the average ber of @xmath58 is given as @xmath141 hence , substituting ( [ eq_ber_opt ] ) into ( [ ineq_ber_n ] ) , we obtain the following inequality @xmath142 now , let us consider another caching placement @xmath143 for the @xmath66 helpers system , of which elements are the same as @xmath144 except that one element which least increases the average ber is reduced by one . in other words , @xmath143 comes from @xmath144 in a reverse - greedy way .",
    "@xmath145 where @xmath146 is defined as @xmath147 .",
    "we note that the average ber of @xmath148 must not be less than that of @xmath149 ; hence , we have @xmath150 in addition , from the definition of @xmath151 , @xmath152 by substituting ( [ eq_ber_tilde ] ) into ( [ ineq_ber_n-1 ] ) , ( [ ineq_ber_n-1 ] ) becomes @xmath153 if we combine ( [ ineq_max ] ) and ( [ ineq_min ] ) , we have the following inequality : @xmath154 now , to complete our proof by contradiction , we prove that can not be satisfied .",
    "since @xmath155 and @xmath156 , there exists at least one file index , @xmath157 such that @xmath158 . according to lemma [ lemma_1 ] and @xmath158",
    ", the following inequality holds @xmath159 since , @xmath160 is smaller than the left - hand side of , and + @xmath161 is greater than the right - hand side of , we have @xmath162 which contradicts ( [ ineq_max_min ] ) . consequently , there can not exist another optimal caching placement which is not @xmath58 .",
    "this completes the proof .",
    "by contradiction , we prove proposition [ proposition_1 ] .",
    "suppose the optimal caching placement for the @xmath0-helper system , @xmath60 , does not satisfy the proposition [ proposition_1 ] .",
    "then , there exists at least one @xmath157 which satisfies @xmath163 consider another caching placement @xmath164 that has the same element with @xmath60 except that @xmath165 and @xmath166 are switched with each other as follows : @xmath167 then , the difference of average ber between two caching placement schemes becomes @xmath168 since the @xmath169-th popular file is more probable to be requested than the @xmath170-th popular file , the first term on the right - hand side on is positive . indicates that we have more helpers which cache the @xmath170-th popular file than helpers which cache the @xmath169-th popular file .",
    "consequently , the average ber of the @xmath170-th popular file is lower than that of the @xmath169-th popular file because more helpers provide higher channel diversity gain which reduces ber .",
    "therefore , is positive ; we have @xmath171 this contradicts to optimal caching placement .",
    "first , we prove the necessary condition for optimality of even caching placement .",
    "the condition @xmath72 can be rewritten as @xmath172 note that means that the file diversity gain of the @xmath0-th file ( i.e. , the least popular file among possibly cached files ) is larger than the channel diversity gain of the most popular file cached in a single helper .",
    "in addition to that , by the order of popularity , both of file and channel diversity gain decreases as popularity of file becomes lower .",
    "hence , for any @xmath173 , @xmath174 .",
    "similarly , for any @xmath175 , @xmath176 .",
    "+ furthermore , by lemma 1 which states that @xmath177 for @xmath178 , we can conclude @xmath179 for @xmath180 .",
    "since @xmath181 is a product of popularity and @xmath44 , we have @xmath182 for @xmath183 and @xmath184 . combining this result with",
    ", we have the following inequality : @xmath185 for @xmath186 which implies that lower bound of file diversity gain is larger than upper bound of channel diversity gain . as a consequence ,",
    "file diversity gain is always larger than the maximum of channel diversity gain , which concludes optimality of even caching placement .",
    "+ for the proof of converse , we will show the contraposition of the converse is true .",
    "the contraposition of the converse is that if @xmath79 , even caching placement is not optimal .",
    "similarly , @xmath79 implies @xmath187 then , obviously , before the @xmath0-th popular file is cached , the most popular file will be cached in two helpers . as a consequence ,",
    "even caching placement can not be optimal .",
    "we first prove the sufficient condition for optimality : if @xmath81 , then single - file placement is optimal .",
    "the condition @xmath81 can be rewritten as @xmath188 by lemma [ lemma_1 ] , @xmath189 for @xmath190 which implies that if @xmath81 , channel diversity gain of the most popular file is always larger than file diversity gain of the second - popular file until @xmath0 helpers cache the most popular file .",
    "thus , the maximum channel diversity gain is always larger than maximum of file diversity gain for all iterations and consequently single - file placement becomes optimal . for proving the necessary condition",
    ", we prove the contraposition : if @xmath191 , then single - file placement is not optimal .",
    "@xmath191 is equivalent to @xmath192 which means the second - popular file will be cached before caching the first - popular one @xmath0 times .",
    "hence , single - file placement can not be optimal .      to prove the proposition [ proposition_4 ]",
    ", we first show the special character of optimal caching placement : as @xmath84 , the optimal caching placement @xmath215 satisfies @xmath216 for @xmath217 , where @xmath218 is the number of helpers that cache the @xmath7-th popular file . by lemma [ lemma_2 ] ,",
    "optimal caching placement consists of @xmath219 . because @xmath220 for @xmath217 , from proposition [ proposition_1 ] , @xmath221 for @xmath222 then , for optimal caching placement , feasible combinations of @xmath223 become @xmath224 .",
    "first , we consider the case when @xmath225 . in this case , by lemma [ lemma_2 ] , @xmath226 for @xmath227 .",
    "also , when @xmath228 , by proposition [ proposition_1 ] , @xmath229 for @xmath230 , and @xmath231 for @xmath232 since @xmath233 .",
    "therefore , the total number of helpers is bounded as @xmath234 this bound implies existence of at least one empty helper , which contradicts the fact that the optimal placement uses up all of helpers memories . consequently , the case when @xmath235 can not lead optimal caching placement .",
    "second , let us consider the case when @xmath236 . then , by proposition [ proposition_1 ] , @xmath237 for @xmath238 , and @xmath239 for @xmath240 .",
    "using these bound , the total number of helpers is bounded below by @xmath241 this lower bound implies that the caching placement requires at least @xmath242 helpers , which contradicts the fact that we have @xmath0 caching helpers .",
    "consequently , the case when @xmath243 is not feasible . as a result ,",
    "the optimal caching placement satisfies that @xmath244 for @xmath245 .",
    "+ using the above property , optimality of the doubly caching placement can be proven as follows . for each @xmath246",
    ", we will prove there exists an unique range of zipf exponent which makes doubly caching placement with @xmath6 optimal .",
    "from the fact that we have just shown , as @xmath84 , optimal caching placement has to satisfy @xmath247 for @xmath248 therefore , optimal caching placement will select a pair between @xmath249 and @xmath250 which gives a higher gain .",
    "the total gains from each pair are given , respectively , as @xmath251 for @xmath252 , @xmath253 for @xmath254 . since @xmath255 is a common term for both of @xmath249 and @xmath250 , whether @xmath256 is larger than @xmath257 or not determines if @xmath252 or @xmath254 for optimal caching placement .",
    "for each @xmath246 , if @xmath258 , @xmath259 furthermore , using @xmath260 for @xmath261 and @xmath262 for @xmath263 , inequality leads to @xmath264 for @xmath261 and @xmath263 which implies that @xmath265 is preferred to @xmath266 for @xmath261 .",
    "consequently , for each @xmath246 , optimal caching placement satisfies @xmath267 now , let us consider @xmath268 for each @xmath269 .",
    "we can rewrite @xmath268 as @xmath270 in contrast to , inequality implies that optimal caching placement satisfies @xmath271 for @xmath272 .",
    "then , from proposition [ proposition_1 ] , @xmath273 from and , we can conclude that doubly caching placement with @xmath274 is optimal if @xmath91 .",
    "+ however , when @xmath92 , inequality is equivalent to @xmath275 , where @xmath276 . obviously , when there are @xmath0 helpers , caching @xmath277-th file in two helpers violates proposition [ proposition_1 ] . to satisfy proposition [ proposition_1 ] ,",
    "is required when @xmath92 . as a result , doubly caching placement with @xmath92 is optimal if @xmath278 .",
    "+ for the converse , we prove that doubly caching placement with @xmath279 is optimal only if @xmath91 and doubly caching placement with @xmath92 is optimal only if @xmath280 . in order to prove the converse",
    ", we prove their contrapositions that if @xmath281 or @xmath282 , then doubly caching placement with @xmath90 is not optimal and if @xmath283 , doubly caching placement with @xmath92 is not optimal , respectively .",
    "+ when @xmath284 , @xmath281 is equivalently given by @xmath285 which means optimal caching placement satisfies @xmath252 rather than @xmath254 .",
    "consequently , optimal caching placement is to cache the @xmath6-th popular file in a single helper . on the other hand , for @xmath286 ,",
    "@xmath282 can be rewritten as @xmath287 which indicates that optimal caching placement is to cache the @xmath288-th popular file in two helpers . hence , if @xmath281 or @xmath282 , optimal caching placement is to cache the @xmath6-th popular file in a single helper or to cache the @xmath288-th popular file in two helpers . therefore , doubly caching placement with @xmath90 is not optimal if @xmath281 or @xmath282 and doubly caching placement with @xmath289 is not optimal if @xmath283 .",
    "this proposition is proved by contradiction .",
    "suppose doubly caching placement with @xmath100 is not optimal",
    ". then , there exists another optimal caching placement .",
    "let us denote optimal caching placement as @xmath215 and doubly caching placement with @xmath290 as @xmath291 .",
    "since proposition [ proposition_4 ] characterizes optimal caching placement in whole range of @xmath4 in high snr regime , @xmath215 has to be doubly caching placement with @xmath292 for some @xmath6 .",
    "if we subtract the average ber of @xmath291 from the that of @xmath293 , the difference must be less than zero due to optimality , i.e. , @xmath294 now , we show the difference becomes larger than zero .",
    "the difference of the average ber is expressed as @xmath295where @xmath296 is a set of files cached in @xmath215 but not cached in @xmath297 , and @xmath298 is a set of files cached doubly in @xmath297 but not doubly cached in @xmath215 , respectively .",
    "except for the files in @xmath296 and @xmath298 , other elements are the same in @xmath215 and @xmath291 .",
    "therefore , we can express the difference as a function of channel diversity gain and file diversity gain as @xmath299 ; to be cached only in @xmath215 , the popularity of the file has to be less than @xmath300 .",
    "also , the files which has lower popularity than @xmath300 can not be cached doubly due to proposition [ proposition_1 ] for optimal caching placement .",
    "thus , all the files in @xmath296 are less popular than all the files in @xmath298 .",
    "if we increase the popularity of the files in @xmath296 up to the popularity of @xmath298 , we can make a lower bound @xmath301 ; applying and to the definitions of both diversity gain and , we can get @xmath302 . is greater than zero due to @xmath98 , which contradicts the supposition that doubly caching placement with @xmath100 is not optimal .",
    "n. golrezaei , a. f. molich , a. g. dimakis , and g. caire ,  femtocaching and device - to - device collaboration : a new architecture for wireless video distribution , \" _ ieee commun . mag .",
    "142 - 149 , apr . 2013 .",
    "maddah - ali and u. niesen ,  decentralized coded caching attains order - optimal memory - rate tradeoff , \" in _ proc .",
    "ieee 51st annual allterton conference on communication , control , and computing ( allterton ) _ , oct .",
    "2013 , pp .",
    "421 - 427 .",
    "n. golrezaei , k. shanmugam , a. g. dimakis , a. f. molich , and g. caire ,  femtocaching : wireless video content delivery through distributed caching helpers , \" in _ proc .",
    "ieee conference on computer communications ( infocom ) _ , mar .",
    "2012 , pp .",
    "1107 - 1115 .",
    "k. shanmugam , n. golrezaei , a. g. dimakis , a. f. molisch , and giuseppe caire ,  femtocaching : wireless content delivery through distributed caching helpers , \" _ ieee trans .",
    "inf . theory _ ,",
    "59 , no . 12 , pp . 8402 - 8413 , dec .",
    "n. golrezaei , p. mansourifard , a. f. molich , and a. g. dimakis ,  base - station assisted device - to - device communications for high - throughput wireless video networks , \" _ ieee trans .",
    "wireless commun .",
    "_ , vol . 13 , no . 7 , pp",
    "3665 - 3676 , jul . 2014 .",
    "n. golrezaei , a. g. dimakis , and a. f. molisch ,  wireless device - to - device communications with distributed caching , \" in _ proc .",
    "ieee international symposium on information theory ( isit ) _ , july 2012 , pp . 2781 - 2785 .",
    "h. kang , k. park , k. cho , and c. kang ,  mobile caching policies for device - to - device ( d2d ) content delivery networking , \" in _ proc .",
    "ieee conference on computer communications workshops ( infocom wkshps ) _ , apr .",
    "2014 , pp .",
    "299 - 304 .",
    "b. hong , and w. choi ,  optimal storage allocation for wireless cloud caching systems with a limited sum storage capacity , \" _ submitted to ieee trans .",
    "wireless commun .",
    "_ , under minor revision .",
    "d. leong , a. g. dimakis and t. ho ,  distributed storage allocations , \" _ ieee trans .",
    "inf . theory _",
    "4733 - 4752 , july 2012 .",
    "a. goldsmith , _ wireless communications _ , cambridge university press , 2005 .",
    "c . lee and y .- h .",
    "lee,cognitive radio based femtocell resource allocation , \" _ international conference on information and communication technology convergence ( ictc ) _",
    ", 2010 , pp .",
    "274 - 279 ."
  ],
  "abstract_text": [
    "<S> this paper investigates optimal caching placement for wireless femto - caching network . </S>",
    "<S> the average bit error rate ( ber ) is formulated as a function of caching placement under wireless fading . to minimize the average ber </S>",
    "<S> , we propose a greedy algorithm finding optimal caching placement with low computational complexity . </S>",
    "<S> exploiting the property of the optimal caching placement which we derive , the proposed algorithm can be performed over considerably reduced search space . </S>",
    "<S> contrary to the optimal caching placement without consideration of wireless fading aspects , we reveal that optimal caching placement can be reached by balancing a tradeoff between two different gains : file diversity gain and channel diversity gain . </S>",
    "<S> moreover , we also identify the conditions that the optimal placement can be found without running the proposed greedy algorithm and derive the corresponding optimal caching placement in closed form . </S>"
  ]
}
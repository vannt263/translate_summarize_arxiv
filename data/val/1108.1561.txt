{
  "article_text": [
    "we consider a variant of the pursuit - evasion game in which multiple pursuers must simultaneously reach the evader s location to capture it .",
    "specifically , an evader @xmath3 , who is free to move in an @xmath2-dimensional euclidean space , is being pursued by @xmath1 agents @xmath4 .",
    "the evader and the pursuers have identical motion capabilities and , in particular , have equal maximum speed . unlike the classical pursuit evasion , our game requires at least @xmath0 pursuers to _ simultaneously _ reach the evader s location to capture it , for some given value of @xmath5 . if fewer than @xmath0 pursuers attack ( reach ) the evader , then those pursuers are destroyed by the evader .",
    "we assume that no two players ever occupy the same position in the environment _ except _ at the moment of capture ; that is , co - location either ends the game or only one player survives among the co - located ones . by disallowing co - location",
    ", we are assuming a weaker model of pursuers , which may also be more realistic because in many physical systems only one agent can occupy a point in the space .",
    "we call this version the _ @xmath0-capture pursuit evasion _ , and investigate necessary and sufficient conditions , as well as worst - case time bounds , for the @xmath0-capture .",
    "pursuit - evasion games provide an elegant setting to study algorithmic and strategic questions of exploration or monitoring by autonomous agents .",
    "their rich mathematical history can be traced back to at least 1930s when rado posed the now - classical lion - and - man ",
    "problem  @xcite : _ a lion and a man in a closed arena have equal maximum speeds ; what tactics should the lion employ to be sure of his meal ? _",
    "the problem was settled by besicovitch who showed that the man can escape regardless of the lion s strategy  @xcite .",
    "an important aspect of this pursuit - evasion problem , and its solution , is the assumption of _ continuous time _ :",
    "each player s motion is a continuous function of time , which allows the lion to get arbitrarily close to the man but never capture him . if , however , the players move in discrete time steps , taking alternating turns but still in continuous space , the outcome is different , as first conjectured by gale  @xcite and proved by sgall  @xcite .",
    "the distinction between continuous and discrete time models is significant albeit subtle .",
    "formulations based on the continuous time lead to differential games , whose solution requires solving the hamilton - jacobi - bellman - isaacs ( hjbi ) equation .",
    "this is a partial differential equation , whose solution becomes intractable in complex scenarios .",
    "( see the seminal work of isaacs  @xcite on several continuous time classical games including the homicidal chauffeur game and the game of two cars . ) besides this _ theoretical _ difficulty , one also faces the _ practical _ problem that continuous time solutions usually are expressed as a feedback law requiring an _ instantaneous _ measurement of each player s position and its communication to the opponent .",
    "this is impractical from an implementation point of view , and especially problematic for non - smooth motions .",
    "consequently , discrete time alternate moves versions of pursuit evasion have been favored in recent past , especially due to their algorithmic tractability . in these formulations ,",
    "the evader and the pursuers move in alternating time instants , with the evader moving first .",
    "we note that a capture in this formulation is equivalent to the evader being inside a specified small neighborhood of the pursuer in the continuous time formulation . in the discrete time model ,",
    "sgall  @xcite is able to circumvent the problem of lion approaching but not reaching the man in the continuous formulation , and shows that the lion can always capture the man in finite time inside a semi - open bounded environment .    when the evader is free to move inside an _ unbounded _ environment , multiple pursuers are clearly required to keep the evader from escaping .",
    "the capture condition is the same as before : if at some time @xmath6 , _ any _ pursuer can reach the position of the evader then the latter is captured . in this setting",
    ", it is known that the evader can be captured if and only if it lies in the convex hull of the pursuers  @xcite .",
    "many other pursuit evasion problems have also been studied , with focus on different types of environments  @xcite , characterization of environments in which a certain capture strategy works  @xcite , visibility - based pursuit - evasion  @xcite , sensing limitations  @xcite etc . finally ,",
    "if both time _ and _ space are assumed to be discrete , then the underlying space is represented as a graph with nodes and edges , and on each move a player can move from one node to another by traversing the edge(s ) connecting them .",
    "the techniques in this formulation tend to be different , and we refer the reader to a representative set of papers  @xcite .",
    "our objective in this paper is to study the @xmath0-capture problem in the unbounded continuous space and discrete time framework .",
    "in particular , we assume that a group of @xmath1 pursuers ( hyenas ) wish to capture an evader ( lion ) who is free to move in the @xmath2-dimensional euclidean space .",
    "the players take turns : the evader moves first , the pursuers move next and all of the pursuers can move simultaneously . on its turn , each player can move anywhere inside a unit disk centered at its current position .",
    "( in other words , the maximum speed of the players is normalized to one . ) we assume that no two players may occupy the same position in the environment _ except _ at the moment of capture .",
    "technically , this assumption is used only to rule out the possibility of a trivial pursuer strategy where they partition themselves into size @xmath0 subgroups , with each subgroup moving as a `` meta pursuer . ''",
    "co - location may also be unrealistic in many physical systems , and by disallowing it we only strengthen our results because pursuers without co - location are weaker in power than those with co - location .",
    "we say that the evader is @xmath0-captured , for some specified value of @xmath0 , if after a finite time , at least @xmath0 pursuers reach the evader s location . however , if fewer than @xmath0 pursuers reach the evader s location , then the evader is able to capture ( or destroy ) those pursuers .",
    "in other words , if at the end of a pursuer move , the evader occupies the same position as some of the pursuers , then the game either ends ( @xmath0-capture occurs ) , or all the @xmath7 , where @xmath8 , pursuers at that location are captured leaving only the evader .",
    "we study the necessary and sufficient conditions under which such a @xmath0-capture is possible , and derive bounds on the worst - case time needed to achieve this .",
    "additionally , we address a version of this problem played in a compact and convex subset of a euclidean space .    in particular , our paper makes four main contributions .",
    "first , we show that a necessary condition for @xmath0-capture is that the evader must be located inside the @xmath0-hull of the pursuers at the beginning of every evader move .",
    "the @xmath0-hull is the set of all points @xmath9 such that any line through @xmath9 divides the given points into two sets of at least @xmath0 points each .",
    "second , we show that this simple @xmath0-hull condition is also sufficient .",
    "in other words , if there is ever a time when this condition is satisfied , and in particular if it holds at time @xmath10 , then the pursuers can @xmath0-capture the evader in finite time .",
    "our proof of sufficiency is constructive , and based on a new multi - pursuer strategy .",
    "third , we derive an upper bound for the time needed to capture the evader , as a function of the initial positions of the pursuers and of the evader .",
    "finally , for a version of this problem played in a compact and convex environment in a euclidean space , we design a novel strategy and show that the evader is @xmath0-captured using @xmath0 pursuers .",
    "this paper is organized as follows . the problem formulation and the necessity of the @xmath0-hull condition for capture",
    "are presented in section  [ sec : problem ] .",
    "our multi - pursuer capture strategy and the sufficiency of the @xmath0-hull condition is presented in section  [ sec : suff ] .",
    "a version of this problem played in a compact and convex environment is analyzed in section  [ sec : compact ] .",
    "the conclusions and future directions for this work are summarized in section  [ sec : conclusions ] .",
    "our pursuit - evasion game is played in an @xmath2-dimensional euclidean space , with @xmath1 pursuers @xmath11 and a single evader @xmath3 .",
    "the positions of these agents at any time @xmath6 are denoted as @xmath12 , for @xmath13 , and @xmath14 , where @xmath15 . in section  [ sec :",
    "compact ] , we also consider the capture problem in a compact convex environment .",
    "we assume that the game is played in discrete time using alternate moves : on a turn , the evader moves first , all the pursuers simultaneously move next .",
    "we assume a normalized maximum speed of one , meaning that each player can move to any position inside a closed ball of radius one centered at the player s current position .",
    "more precisely , the players motions are described by the following equations : @xmath16 where @xmath17 and @xmath18 are unit vectors , termed as _ strategies _ of the evader @xmath3 and the pursuer @xmath19 , respectively .",
    "these motion equations say that each agent s strategy depends on the current positions of all other players , and that each agent can move to any position within distance one of its current position .",
    "( the apparent asymmetry in the equations of the evader and the pursuers is due to the fact that the evader moves first , so the pursuers moves can depend on the evader s positions at times @xmath6 _ and _ @xmath20 . )",
    "the capture occurs when evader is at the same location as some of the pursuers .",
    "the @xmath0-capture of the evader requires at least @xmath0 pursuers , while fewer than @xmath0 pursuers are themselves captured by the evader .",
    ", then @xmath21 can always move away from the evader at its turn .",
    "however , one can not rule out a pursuers strategy that involves _ sacrificing _ some of them to ultimately achieve @xmath0-capture . ] formally , we say that the evader is _",
    "@xmath0-captured _ if there exists a finite time @xmath22 and a subset @xmath23 of @xmath0 pursuers such that @xmath24 but @xmath25 , for all @xmath26 and all @xmath27 . in other words ,",
    "the @xmath0-capture occurs at a time @xmath22 if at least @xmath0 pursuers simultaneously reach the evader s location at time @xmath22 , and none of these pursuers have ever been captured in the past . pursuers who perform the @xmath0-capture , in our strategy , _ all _ the pursuers will remain safe .",
    "] we say that the evader _ escapes _ if there exists no finite time at which the pursuers @xmath0-capture the evader .",
    "finally , we require that no two players occupy the same point in the environment _ except _ at the time of capture .",
    "we now formulate a necessary condition for @xmath0-capture , which is then complemented by section  [ sec : suff ] that shows that this condition is also sufficient .",
    "our necessary condition prescribes the location of the evader relative to the locations of the pursuers for the @xmath0-capture to occur .",
    "this condition is independent of the pursuers strategy : that is , if the condition is violated , then there always exists an evader strategy for escape regardless of the pursuers strategy .",
    "naturally , the convex hull of the pursuers locations plays a key role in the game .",
    "this is not surprising because the convex hull is precisely the set of all evader locations that are capturable in the classical single pursuer game , as is well - known  @xcite .",
    "[ lem : conv ] if the evader s initial location is not inside the interior of the convex hull of the pursuers , then it can not be @xmath0-captured , even for @xmath28 .",
    "if the evader is not in the interior of the convex hull , then there exists a hyperplane through the evader s location such that all the pursuers lie in one ( closed ) half - space defined by the hyperplane .",
    "the evader simply escapes by moving perpendicular to this hyperplane , away from the pursuers , at maximum speed .      when @xmath29 , we need a generalized notion of the convex hull .",
    "the standard convex hull can be defined as the set of points so that any hyperplane tangent to the hull contains at least one point of the hull in each of the two half - spaces .",
    "if we require that at least @xmath0 points lie in each half - space , then we get a structure called @xmath0-hull , introduced by cole , sharir and yap  @xcite , which also has intimate connections to other fundamental structures in computational geometry such as @xmath0-levels and @xmath0-sets  @xcite .",
    "[ def : khull ] let @xmath30 be a set of @xmath1 points in the plane , and let @xmath0 be an integer .",
    "the @xmath0-hull of @xmath30 denoted by @xmath31 is the set of points @xmath9 such that , for any hyperplane @xmath32 through @xmath9 , there are at least @xmath0 points of @xmath30 in each closed half - space of @xmath32 .",
    "clearly , the standard convex hull is the same as the @xmath33-hull , and it is also easy to see that the @xmath34-hull is contained in the @xmath0-hull .",
    "one can also show , using helly s theorem  @xcite , that the @xmath0-hull is always non - empty for @xmath35 , where @xmath2 is the dimension of the underlying euclidean space .",
    "we , therefore , assume throughout this paper that @xmath36 .",
    "in particular , the standard convex hull in two dimensions , is well - defined for 3 or more non - collinear points , but @xmath37-hull requires at least @xmath38 points in the plane .",
    "[ fig : constraint ] shows the two possible configurations for @xmath39 for a planar environment .",
    "configurations for @xmath37-hull of @xmath38 points in the plane . ]",
    "while computational complexity is the not focus of our paper , we do point out that @xmath0-hulls are also efficiently computable . under the point - hyperplane duality",
    ", they correspond to the level @xmath0 in an arrangement of hyperplanes , and therefore computed easily in @xmath40 time in @xmath2 dimensions . the bound can be improved somewhat using more sophisticated algorithms and analysis .",
    "for instance , in the two - dimensional plane , @xmath0-hull contains at most @xmath41 vertices , and using dynamic convex hull data structures , it can be computed in worst - case time @xmath42  @xcite .      in a pleasing generalization of 1-capture",
    ", it turns out that the @xmath0-hull of the pursuers locations is precisely the set of evader locations that are @xmath0-capturable . throughout",
    ", we will use the notation @xmath43 to denote the _ interior _ of the @xmath0-hull .",
    "we have the following theorem stating our necessary condition .",
    "[ thm : necessary ] the evader @xmath3 can be @xmath0-captured by pursuers @xmath44 only if @xmath45 at all times @xmath46 , where @xmath43 is the interior of the @xmath0-hull .",
    "the proof is by contradiction .",
    "suppose that the evader s position @xmath14 violates the condition of the theorem at some time @xmath6 .",
    "then , there exist a hyperplane @xmath47 through @xmath14 that separates a subset @xmath48 of the pursuers from the rest , which we call @xmath49 , such that @xmath50 , and therefore @xmath51 . in this case , the evader can escape by moving according to the following strategy :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ move with maximum speed in the direction normal to @xmath47 towards the side containing @xmath48 .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    we observe that @xmath52this is because @xmath14 lies on @xmath47 , the hyperplane defining the half - space that contains @xmath53 . by lemma  [ lem : conv ] , therefore , none of the @xmath54 pursuers in @xmath49 can catch the evader when the evader uses the above - mentioned strategy . therefore , only the ( at most ) @xmath55 pursuers in @xmath48 can reach the evader , and the @xmath0-capture of evader is not possible .",
    "this completes the proof .",
    "the necessary condition asserts that if there is ever a time when the evader is outside the @xmath0-hull of the pursuers , then it has an escape strategy .",
    "the main result of our paper , presented in the following section , shows that this necessary condition is also sufficient . in particular ,",
    "if the evader lies in the pursuers @xmath0-hull at the initial time instant @xmath10 , then the pursuers are able to @xmath0-capture it .",
    "( clearly , if evader is not inside the @xmath0-hull initially , then it can escape unless it plays sub - optimally and move inside the pursuers @xmath0-hull at a later time , allowing them to capture it . )",
    "in this section , we prove our main result , which is to show that the necessary condition of theorem  [ thm : necessary ] is also sufficient . the proof , which is constructive , outlines a strategy for the pursuers and derives an upper bound on the time needed for the capture .",
    "our analysis exploits properties of the pursuers @xmath0-hull , and so we begin with some geometric preliminaries .      in general",
    ", the orientations of the pursuers with respect to the evader will change once the pursuit begins .",
    "we will show , however , that pursuers can coordinate their moves to preserve their individual directions relative to the evader s location .",
    "such a strategy will allow us to conclude that if the evader is in the @xmath0-hull of the pursuers at the initial instant , then it will remain in the @xmath0-hull at all subsequent instants .",
    "let us call a pursuers strategy _ orientation - preserving _ if the orientations of the vectors @xmath56 are preserved throughout the pursuit .",
    "we will prove that there is an orientation - preserving @xmath0-capture strategy for the pursuers . but",
    "first , we establish a key geometric lemma about such an strategy .",
    "let @xmath57 denote the evader s move at time @xmath6 , where the vector @xmath17 is a point on the @xmath2-dimensional sphere @xmath58 .",
    "let @xmath59 denote the ( smaller ) angle between vectors @xmath60 and @xmath57 .",
    "define , @xmath61 where @xmath62 refers to the @xmath0-th maximum of the @xmath1 quantities .",
    "the following result states that as long as the pursuers follow an orientation - preserving strategy , one can always find @xmath0 favorable pursuers at each instant of time , for whom the @xmath0 respective @xmath63 s are all less than a number which remains invariant at all times and which is strictly less than @xmath64 .    [",
    "lem : initial_k ] suppose that the evader lies inside the @xmath0-hull of the pursuers initial locations , and the pursuers follow an orientation - preserving strategy throughout the pursuit .",
    "then , the following facts hold at all times :    * there exists a @xmath65 , such that at every instant of time , @xmath66 * after any move by the evader at time @xmath20 , there exist at least @xmath0 pursuers @xmath67 such that @xmath68 , for all @xmath69 .    since @xmath70 , an orientation preserving strategy",
    "will ensure that @xmath71 , for all time instants @xmath6 .",
    "thus , for any @xmath6 , the quantity @xmath72 is identically defined as for @xmath10 , and therefore for the first claim , it suffices to show the existence of a @xmath73 at time @xmath10 , which satisfies eq .  .",
    "to see this , we can write @xmath72 at time @xmath10 as @xmath74 and therefore @xmath75 is a continuous function of @xmath17 . since @xmath76 , which is a compact set , @xmath75 attains a minimum for some @xmath77 in @xmath58 .",
    "it now remains to show that the minimum value @xmath78 .",
    "now , for every choice of @xmath17 , we must have at least @xmath0 pursuers @xmath67 such that @xmath79 , for all @xmath69 . if this were not the case for some @xmath80 , then the hyperplane perpendicular to @xmath80 through @xmath3 would separate @xmath55 pursuers from the remaining , implying that @xmath81 .",
    "thus , for every @xmath76 , @xmath82 and in particular , @xmath83 .",
    "thus , @xmath84 .",
    "thus , the first claim is established .",
    "the second claim follows from the fact that there always exist some @xmath0 pursuers @xmath67 such that @xmath79 , for all @xmath69 , and since @xmath85 .    throughout this section , we assume that no two pursuers are collinear with the evader , which implies that the vectors @xmath86 all have distinct orientations at @xmath10 , for all @xmath87 .",
    "we could easily ensure this condition by an initial move by the pursuers , as follows .",
    "suppose @xmath88 , for some @xmath89 , where the notation @xmath90 denotes the ( smaller ) angle between vectors @xmath91 and @xmath92 .",
    "let the evader s initial move is from position @xmath93 to @xmath94 .",
    "then , all the pursuers except @xmath95 move parallel to @xmath96 with step size @xmath97 .",
    "the pursuer @xmath95 also moves with step size @xmath97 but in a direction making a sufficiently small but positive angle @xmath98 with @xmath96 .",
    "since @xmath99 is an open set and a continuous function of the pursuer locations , there exists a sufficiently small but positive angle @xmath98 so that @xmath94 still lies inside @xmath99 at time @xmath100 .",
    "if there are multiple collinearities , then the same strategy can be used to break all of them while preserving the invariant that the evader lies inside the @xmath0-hull .",
    "we are now ready to describe our @xmath0-capture strategy and prove its correctness .      one simple - minded strategy for capture is to let each pursuer maximally advance towards the evader s new position at each move .",
    "because the evader lies in @xmath43 , this strategy reduces at least one pursuer s distance to @xmath3 .",
    "but it does not ensure that @xmath0 pursuers reach the evader simultaneously and so can not guarantee @xmath0-capture .",
    "instead , we let only those pursuers that are _ not the closest _ to the evader execute this kind of move , while those closest to the evader carry out a _",
    "move that maintains their distance and angle to the evader .",
    "we call this the _ advance move_. more specifically , the pursuers who are closest to the evader move to maintain their distance and angle to the evader , while the remaining pursuers advance towards the evader .",
    "unfortunately , while this strategy keeps the pursuers safe , it also keeps them away from the evader , and in the worst - case all the pursuers may become equidistant to the evader and then stagnate .",
    "we , therefore , introduce a second move , called the _ cone move _ , which ensures that the distance of the closest pursuers itself decreases but in such a way that at least @xmath0 pursuers remain closest to the evader .",
    "the following algorithm describes at a pseudo - code level the overall strategy .",
    "the terms @xmath101 and @xmath102 , respectively , denote the set of closest pursuers and a cone region , and are defined precisely following the algorithm .",
    "* for * each @xmath103 and for each @xmath104 , + determine @xmath105 , where @xmath106 + * end for * +    in the following , we give a precise definition of the advance move and the cone move .",
    "informally , the _ advance _ move is used by a pursuer to reduce its distance from the evader if it is sufficiently far from the evader .",
    "the _ cone _",
    "move is used by a pursuer _ together _ with at least @xmath55 other pursuers , if all of them are among the closest to the evader , and if the evader has made a move which is favorable for those pursuers .",
    "when both the moves are possible for a pursuer , the cone move has the priority .",
    "[ def : planes ] suppose the evader moves from @xmath14 to @xmath107 .",
    "then , given a parameter @xmath108 , the _ advance move _ of a pursuer @xmath19 is the following :    * draw a line through @xmath107 parallel to the vector @xmath109 .",
    "* move to the position @xmath110 on this line for which @xmath111 is minimized .",
    "[ fig : planes ] illustrates the advance move .",
    "our modification to the original planes algorithm  @xcite is the inclusion of the parameter @xmath112 .",
    "this parameter keeps a pursuer @xmath19 from moving straight towards @xmath3 _ if _ that pursuer is the closest one to the evader .",
    "therefore , with the parameter setting @xmath113 , the advance move forces the pursuer @xmath19 to move _ parallel _ to the evader , and with exactly the same step size as the evader .",
    "this is shown in the right subfigure .",
    "the left subfigure shows a generic application of the advance move .",
    "we now describe the cone move , which is used by @xmath0 or more pursuers when they are among the closest pursuers to the evader , and when they are located inside a cone region , which we define next .",
    "we show later ( cf .",
    "lemma  [ lem : strategy_k ] ) that after a finite time , there will be at least @xmath0 closest pursuers , so the following discussion focuses on such pursuers .",
    "let @xmath114 denote the set of pursuers that are closest to the evader @xmath14 at time @xmath6 .",
    "that is ,    @xmath115    the closed positive cone formed with vertex at @xmath14 , the axis along @xmath116 ( i.e. , along @xmath57 ) , and with half angle equal to @xmath117 is called the @xmath118 .",
    "[ def : cone_k ] if some @xmath0 pursuers @xmath119 are in @xmath114 and also in @xmath118 , then the cone move for @xmath120 is defined as follows :    * draw a line @xmath121 through @xmath107 , parallel to @xmath109 , for all @xmath122 .",
    "* @xmath110 is the point on line @xmath121 that minimizes @xmath123 subject to the constraint that + @xmath124 .     pursuers .",
    "the shaded region is @xmath118 .",
    "if the evader moves into @xmath118 , then the pursuers @xmath67 move so that their distances to the evader decrease by the same finite amount . ]",
    "[ fig : closein_k ] offers a geometric interpretation of the cone move .",
    "the key intuition behind the cone move is that the @xmath0 closest pursuers in @xmath118 can reduce their distance to the evader , and remain in @xmath125 , using the cone move .",
    "we can give a more precise expression for the new locations in a cone move , as follows .",
    "assume without loss of generality that @xmath126 . then , choose @xmath127 satisfying the following conditions :    * @xmath128 , and * @xmath129 , where @xmath130 .",
    "the positions @xmath110 , for all @xmath131 , are chosen to satisfy the following conditions :    * @xmath132 . *",
    "@xmath133 .      in the rest of this section",
    ", we prove that algorithm  [ algo : strategy_k ] succeeds .",
    "we begin with the observation that @xmath0-capture is orientation - preserving , since throughout the algorithm , the direction of the vectors @xmath134 remains invariant for each @xmath7 .",
    "[ prop : invariants_k ] the algorithm @xmath0-capture is orientation - preserving .",
    "our proof of @xmath0-capture depends on three technical lemmas showing , respectively , that some @xmath0 pursuers become closest to the evader , that every cone move reduces the minimum distance by a finite amount , and that irrespective of the evader s strategy , the minimum distance decreases by a finite amount . throughout the following discussion",
    ", it is assumed that the pursuers all follow the algorithm @xmath0-capture .",
    "the bound on the capture time depends on @xmath135 and @xmath136 , which are the minimum and the maximum distance between a pursuer and the evader at the initial time @xmath10 .",
    "the following lemma proves the closest pursuers property .",
    "[ lem : strategy_k ] after a finite time upper bounded by @xmath137 , some @xmath0 pursuers are in the set @xmath101 .    from statement 2 of lemma",
    "[ lem : initial_k ] , at every instant of time and for any move of the evader , there exists some @xmath0 pursuers @xmath67 such that for all @xmath138 , @xmath139 .",
    "if all of these @xmath0 pursuers are in @xmath114 , then this result stands proved .",
    "otherwise , for every @xmath6 , there exists some pursuer ( say @xmath140 ) out of the @xmath0 pursuers , which is not in @xmath114 , and is such that @xmath139 .",
    "so at time @xmath20 , the advance move by @xmath19 will ensure that either @xmath141 or @xmath142 .",
    "thus , in the worst case , after at most @xmath143 time instants , some @xmath0 pursuers must be @xmath101 .",
    "let @xmath144 be the distance of the closest pursuer from the evader at time @xmath6 .",
    "once @xmath0 pursuers are in @xmath101 , the following lemma establishes a lower bound on the decrease of @xmath145 assuming that a cone move occurs , which is favorable for the pursuers .",
    "[ lem : simcap_k ] let @xmath146 be @xmath0 pursuers closest to the evader at time @xmath6 . if these pursuers next move is a cone move , then after the pursuers move , we have @xmath147    let @xmath148 be the largest among the angles @xmath149 . using the new locations of the pursuers in the cone move , we obtain , @xmath150 since @xmath151 from the definition of the cone region .",
    "the lemma follows .",
    "finally , the next lemma derives a lower bound on the decrease of @xmath145 for the worst - case evader move , while the pursuers follow the strategy of algorithm @xmath0-capture .",
    "[ lem : dist_k ] if some @xmath0 pursuers become closest to the evader at some time @xmath6 , then the following holds :    * after every subsequent pursuer move , some @xmath0 pursuers are in @xmath101 , and * after at most @xmath143 pursuer moves , @xmath145 decreases by at least @xmath152 .",
    "let @xmath153 and @xmath154 be two groups of pursuers in @xmath101 at time @xmath6 , of which group @xmath153 comprises of some @xmath0 pursuers . if all pursuers of group @xmath153 are in the cone region at time @xmath6 , then group @xmath153 will make a cone move which ensures that all pursuers in @xmath153 are in @xmath101 at time @xmath20 .",
    "thus , the first claim trivially holds .",
    "otherwise , all pursuers in @xmath153 move parallel to the evader at time @xmath20 .",
    "now , if group @xmath154 does not contain @xmath0 pursuers , then at time @xmath20 , all pursuers in group @xmath154 are forced to move parallel to the evader , since they do not satisfy the criterion to make a cone move .",
    "thus , the pursuers in group @xmath153 satisfy the first claim at time @xmath20 .",
    "finally , if group @xmath154 contains some @xmath0 pursuers and are in the cone region at time @xmath6 , then these @xmath0 pursuers make a cone move and satisfy the first claim at time @xmath20 .",
    "thus , the first claim holds at all times .",
    "now , let us consider the second claim . from proposition  [ prop : invariants_k ] and statement 2 of lemma  [ lem : initial_k ] , at every instant of time and",
    "for any move of the evader , there exists some @xmath0 pursuers @xmath67 such that @xmath155 , for all @xmath156 . we need to consider two cases :    * [ all of @xmath157 are in @xmath114 : ] + in this case",
    ", the claim follows from lemma  [ lem : simcap_k ] because all of these pursuers lie in @xmath118 . *",
    "[ at least one of out of the @xmath0 pursuers , say @xmath140 is not in @xmath114 : ] + without loss of generality , assume that @xmath158 .",
    "then , at time @xmath20 , the advance move by @xmath19 will ensure that either @xmath141 or @xmath142 .",
    "thus , in the worst - case , it requires at most @xmath143 moves before all @xmath1 pursuers are in @xmath101 .",
    "then , the next pursuer move is necessarily a cone move , because for any choice of the evader move , there exists some @xmath0 pursuers which are now equidistant from the evader , which lie in the cone region . by lemma  [ lem : simcap_k ] , the distance of the @xmath0 closest pursuers from the evader strictly decreases by at least @xmath152 .",
    "this completes the proof of the lemma .",
    "we can now state our main theorem on @xmath0-capture .",
    "[ thm : suff_k ] if the evader lies in the interior of the pursuers @xmath0-hull at @xmath10 , i.e. , @xmath159 , then it can be @xmath0-captured in at most @xmath160 moves .    by lemma  [ lem : strategy_k ] ,",
    "after at most @xmath161 moves , some @xmath0 pursuers are in @xmath101 .",
    "thereafter , lemma  [ lem : dist_k ] ensures that the distance of some @xmath0 closest pursuers to the evader decreases by at least @xmath152 after every @xmath162 moves . since capture is defined after the pursuers move , after at most @xmath163 pursuer moves , we obtain @xmath164 , that is , the evader and some @xmath0 pursuers are coincident , which satisfies the conditions of @xmath0-capture .",
    "an upper bound on the time taken for the @xmath0-capture of the evader follows by summing the bounds of lemma  [ lem : strategy_k ] and lemma  [ lem : dist_k ] .",
    "this completes the proof of the theorem .",
    "a lower bound on the time taken to capture is @xmath165 . to see this ,",
    "consider the following initial condition and evader strategy . the evader s strategy is to move along a fixed vector @xmath17 with unit step .",
    "let @xmath166 be furthest from the evader initially , and be located on the boundary of the resulting @xmath167 .",
    "the rest of the pursuers are located outside @xmath167 .",
    "this evader strategy and the initial pursuer locations ensure that the evader is captured after a time of at least @xmath165 , independent of the pursuers strategy .",
    "in this section , we show a simple strategy for @xmath0-capture that always succeeds in a compact and convex subset of a euclidean space .",
    "if every pursuer were to use an established strategy by sgall  @xcite independently of the other pursuers , at each instant of time , then the distance between each pursuer and the evader would decrease to zero , but at different instants in time .",
    "although this approach does not guarantee @xmath0-capture in general , it suggests that intuitively , it should be possible to coordinate the moves of each pursuer to achieve @xmath0-capture from any set of initial locations in the environment .",
    "therefore , in contrast with the previous sections wherein there existed a necessary condition for @xmath0-capture , we will now directly present a strategy which requires @xmath0 pursuers , and which achieves @xmath0-capture of the evader in at most @xmath168 time steps , where @xmath169 is the diameter of the environment .",
    "our strategy comprises of two phases .",
    "the first phase is an _ initializing _ move , which gets the pursuers in a favorable formation so that they can apply the steps in the second phase . in particular",
    ", the initializing move will show that it is possible to achieve a configuration of the pursuers and the evader such that @xmath55 pursuers are located between a _ lead _",
    "pursuer and the evader .",
    "the second phase will mimic sgall s strategy  @xcite for the lead pursuer , while the other @xmath55 pursuers will maintain an invariant of being located between the lead pursuer and the evader at all times .",
    "the initial locations of the pursuers being sufficiently close to each other ensures that the evader gets captured if it moves to the location of any pursuer .",
    "we show that this phase terminates into the evader being @xmath0-captured .",
    "let us begin with the initializing move .      in this phase , the pursuers first group themselves such that they are located inside a sphere of radius equal to half .",
    "this essentially means that every pursuer can reach the location of any other pursuer , in one time step .",
    "now , consider a closed sphere @xmath170 of radius half which contains the pursuers at time @xmath171 .",
    "let @xmath172 denote the intersection of the sphere @xmath170 with line joining the evader s location at time @xmath100 to the center of @xmath170 .",
    "now , independent of the location @xmath94 , it is always possible to find @xmath0 distinct locations @xmath173 each contained in @xmath172 , such that @xmath173 are collinear with @xmath94 and @xmath174 lie between @xmath175 and @xmath94 .",
    "figure  [ fig : initial ] shows an illustration of this move .    , has radius equal to half unit . ]",
    "this terminates the initializing move , and we are now ready to present the @xmath0-capture strategy .      at each time",
    "instant @xmath6 , @xmath176 makes the sgall move , described as below .    1 .",
    "join @xmath177 and @xmath178 and extend it beyond @xmath178 to intersect the environment at @xmath179 .",
    "move to the point closest to @xmath14 and on the line joining @xmath14 and @xmath179 .",
    "all other pursuers pick distinct points between @xmath180 and @xmath14 .",
    "this strategy is illustrated in figure  [ fig : sgall ] , and is summarized in algorithm  [ algo : compact ] .    .",
    "pursuer @xmath176 follows the sgall move , while all the others pick distinct points between @xmath176 and @xmath3 to move to . ]    * for * each @xmath103 , + @xmath176 makes the _ sgall move_. + * for * each @xmath181 , + @xmath19 moves to the furthest point from @xmath176 between @xmath180 and @xmath14 , and on the line joining @xmath180 and @xmath14 . + * end for * + * end for * +    thus , we obtain the following result .    with the initializing move and",
    "subsequently algorithm  [ algo : compact ] , the pursuers @xmath0-capture the evader in @xmath168 number of time steps , where @xmath169 is the diameter of the compact environment .",
    "since @xmath176 uses the sgall move throughout the pursuit , @xmath182 becomes equal to zero in at most @xmath168 number of time steps .",
    "each pursuer move in step 4 of the algorithm exists since the environment is convex .",
    "thus , the remaining @xmath55 pursuers ensure that the evader is @xmath0-captured when @xmath176 becomes coincident with @xmath3 .",
    "in this paper , we introduced a new variant of the classical pursuit - evasion problem in an @xmath2-dimensional euclidean space , which requires multiple pursuers to simultaneously reach the evader for capture .",
    "we showed that , for @xmath0-capture to occur , the evader must lie inside the @xmath0-hull , in a pleasing generalization of the convex hull rule for the single pursuer capture .",
    "the main result of the paper was to show that this simple necessary condition is also sufficient .",
    "the proof of this sufficiency required a new pursuit strategy , requiring both an advance move , which is a modified version of a known planes algorithm and a new type of cone move , which requires a careful coordination among the pursuers . for a version of this problem played in a compact and convex environment , we showed that @xmath0-capture is always possible .",
    "our work suggests a number of intriguing problems for future research .",
    "interesting directions include improving the upper bound on the time taken to capture the evader and addressing versions of this problem in general environments , with obstacles .",
    "l.  j.  guibas , j.  c.  latombe , s.  m.  lavalle , d.  lin , and r.  motwani , `` a visibility - based pursuit - evasion problem , '' _ international journal on computational geometry and applications _ , vol .  9 , no .  4 , pp . 471494 , 1998 .        t.  d. parsons , `` pursuit - evasion in a graph , '' in _ theory and applications of graphs _ ,",
    "lecture notes in mathematics , y.  alavi and d.  lick , eds.1em plus 0.5em minus 0.4emspringer , 1978 , vol ."
  ],
  "abstract_text": [
    "<S> we consider the following generalization of the classical pursuit - evasion problem , which we call _ @xmath0-capture_. a group of @xmath1 pursuers ( hyenas ) wish to capture an evader ( lion ) who is free to move in an @xmath2-dimensional euclidean space , the pursuers and the evader can move with the same maximum speed , and at least @xmath0 pursuers must _ simultaneously _ reach the evader s location to capture it . if fewer than @xmath0 pursuers reach the evader , then those pursuers get destroyed by the evader . under what conditions can the evader be @xmath0-captured ? </S>",
    "<S> we study this problem in the discrete time , continuous space model and prove that @xmath0-capture is possible if and only there exists a time when the evader lies in the interior of the pursuers @xmath0-hull . </S>",
    "<S> when the pursuit occurs inside a compact , convex subset of the euclidean space , we show through an easy constructive strategy that @xmath0-capture is always possible . </S>"
  ]
}
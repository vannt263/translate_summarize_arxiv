{
  "article_text": [
    "papadimitriou defined in  @xcite the complexity classes ppa , ppad , and psk in order to classify total search problems which have always a solution.the class psk was renamed ppads in  @xcite .",
    "these classes can be characterized by some underlying combinatorial principles .",
    "the class polynomial parity argument  ( ppa ) is the class of np search problems , where the existence of the solution is guaranteed by the fact that in every finite graph the number of vertices with odd degree is even .",
    "the class ppad is the directed version of ppa , and its basic search problem is the following : in a directed graph , where the in - degree and the out - degree of every vertex is at most one , given a source , find another source or a sink . in the class",
    "ppads the basic search problem is more restricted than in ppad : given a source , find a sink .",
    "these classes are in fact subfamilies of tfnp , the family of all total np - search problems , introduced by megiddo and papadimitriou  @xcite .",
    "other important subclasses of tfnp are polynomial pigeonhole principle ( ppp ) and polynomial local search ( pls ) .",
    "the elements of ppp are problems which by their combinatorial nature obey the pigeonhole principle and therefore have a solution . in a pls problem ,",
    "one is looking for a local optimum for a particular objective function , in some neighborhood structure .",
    "all these classes are interesting because they contain search problems not known to be solvable in polynomial time , but which are also somewhat easy in the sense that they can not be np - hard unless np = co - np .",
    "another point that makes the parity argument classes interesting is that there are several natural problems from different branches of mathematics that belong to them .",
    "for example , in a graph with odd degrees , when a hamiltonian path is given , a theorem of smith  @xcite ensures that there is another hamiltonian path .",
    "it turns out that finding this second path belongs to the class ppa  @xcite .",
    "a search problem coming from a modulo 2 version of chevalley s theorem  @xcite from number theory is also in ppa .",
    "complete problems in ppad are the search versions of brouwer s fixed point theorem , kakutani s fixed point theorem , borsuk - ulam theorem , and nash equilibrium ( see  @xcite ) .",
    "the classical sperner s lemma  @xcite states that in a triangle with a regular triangulation whose vertices are labeled with three colors , there is always a trichromatic triangle . this lemma is of special interest since some customary proofs for the above topological fixed point theorems rely on its combinatorial content . however , it is unknown whether the corresponding search problem , that papadimitriou  @xcite calls * 2d - sperner * , is complete in ppad . variants of sperner s lemma also give rise to other problems in the parity argument classes .",
    "papadimitriou  @xcite has proven that a 3-dimensional analogue of * 2d - sperner * is in fact complete in ppad .",
    "the study of query complexities of the black - box versions of several problems in tfnp is an active field of research .",
    "several recent results point into the direction that quantum algorithms can give only a limited speedup over deterministic ones in this framework .",
    "the collision lower bound of aaronson  @xcite and shi  @xcite about ppp , and the recent result of santha and szegedy  @xcite on pls imply that the respective deterministic and quantum complexities are polynomially related . as a consequence ,",
    "if an efficient quantum algorithm exists for a problem in these classes , it must exploit its specific structure . in a related issue ,",
    "buresh - oppenheim and morioka  @xcite have obtained relative separation results among pls and the polynomial parity argument classes .",
    "a _ black - box problem _ is a relation @xmath4 where @xmath5 is a finite set and @xmath6 for some finite set @xmath7 .",
    "the oracle input is a function @xmath8 , hidden by a black - box , such that @xmath9 , for @xmath10 can be accessed via a query parameterized by @xmath11 .",
    "the output of the problem is some @xmath12 such that @xmath13 .",
    "a special case is the _ functional oracle problem _ when the relation is given by a function @xmath14 , the ( unique ) output is then @xmath15 .",
    "we say that @xmath16 is _ total _ if @xmath17 .    in the query model of computation",
    "each query adds one to the complexity of the algorithm , but all other computations are free .",
    "the state of the computation is represented by three registers , the query register @xmath18 , the answer register @xmath19 , and the work register @xmath20 .",
    "the computation takes place in the vector space spanned by all basis states @xmath21 . in the _ quantum query model",
    "_ introduced by beals , buhrman , cleve , mosca and de wolf  @xcite the state of the computation is a complex combination of all basis states which has unit length in the norm @xmath22 . in the randomized model",
    "it is a non - negative real combination of unit length in the norm @xmath23 , and in the deterministic model it is always one of the basis states .",
    "the query operation @xmath24 maps the basis state @xmath21 into the state @xmath25 ( here we identify @xmath7 with the residue classes @xmath26 ) .",
    "non - query operations are independent of @xmath27 .",
    "a _ @xmath28-query algorithm _ is a sequence of @xmath29 operations @xmath30 where @xmath31 is unitary in the quantum and stochastic in the randomized model , and it is a permutation in the deterministic case .",
    "initially the state of the computation is set to some fixed value @xmath32 , and then the sequence of operations @xmath33 is applied . a quantum or randomized algorithm computes ( with two - sided error )",
    "@xmath34 if the observation of the appropriate last bits of the work register yield some @xmath35 such that @xmath13 with probability at least @xmath36 .",
    "then @xmath37 ( resp .",
    "@xmath38 ) is the smallest @xmath28 for which there exists a @xmath28-query quantum ( resp .",
    "randomized ) algorithm which computes @xmath34 . in the case of deterministic algorithms of course",
    "exact computation is required , and the deterministic query complexity @xmath39 is defined then analogously .",
    "we have @xmath40 .",
    "beals et al .",
    "@xcite have shown that in the case of total functional oracle problems the deterministic and quantum complexities are polynomially related , and the gap is at most a degree 6 polynomial . for several partial functional problems exponential quantum speedups",
    "are known  @xcite .    in this paper",
    "we will give several results about sperner problems in the black - box framework .",
    "in section  [ section : algorithms ] , we will prove that the deterministic query complexity of * regular 2-spm * , the black - box version of * 2d - sperner * is @xmath0 .",
    "this matches the deterministic @xmath1 lower bound of crescenzi and silvestri  @xcite .",
    "the tightness of this bound was not known before .",
    "in fact , this result is the corollary of a general algorithm that solves the sperner problems over pseudo - manifolds of arbitrary dimension .",
    "the complexity analysis of the algorithm will be expressed in * theorem  [ th : abstract_complexity ] * in two combinatorial parameters of the pseudo - manifold : the size of its boundary and the separation number of its skeleton graph . in section  [ section : bounds ] , we show that quantum , probabilistic , and deterministic query complexities of * regular 2-spm * are polynomially related .",
    "more precisely , in * theorem  [ th : blackbox ] * we will prove that its randomized complexity is @xmath2{n})$ ] and that its quantum complexity is @xmath3{n})$ ] .",
    "this result is analogous to the polynomial relations obtained for the respective query complexities of ppp and pls .",
    "for an undirected graph @xmath41 , and for a subset @xmath42 of the vertices , we denote by @xmath43 $ ] the induced subgraph of @xmath44 by @xmath45 .",
    "a graph @xmath46 is a subgraph of @xmath44 , in notation @xmath47 , if @xmath48 and @xmath49 .",
    "the ring @xmath50 denotes the ring with @xmath51 elements .",
    "a _ simplicial complex _",
    "@xmath52 is a non - empty collection of subsets of a finite set @xmath53 , such that whenever @xmath54 then @xmath55 for every @xmath56 .",
    "an element @xmath57 of @xmath52 of cardinality @xmath58 is called a _ @xmath59-simplex_. a @xmath60-simplex @xmath56",
    "is called a _ @xmath60-face of @xmath57_.",
    "we denote by @xmath61 the set of @xmath59-simplices of @xmath52 .",
    "elementary @xmath59-complex _ is a simplicial complex that contains exactly one @xmath59-simplex and its subsets .",
    "the _ dimension _ of @xmath52 , denoted by @xmath62 , is the largest @xmath59 such that @xmath52 contains a @xmath59-simplex .",
    "the elements of @xmath63 are called the _ vertices _ of @xmath52 , and the elements of @xmath64 are called the _ edges _ of @xmath52 .",
    "the _ skeleton graph _ @xmath65 is the graph whose vertices are the vertices of @xmath52 , and the edges are the edges of @xmath52 .    without loss of generality",
    ", we suppose that @xmath53 consists of integers , and we identify @xmath66 with @xmath67 , for @xmath68 .",
    "[ fact : complete_graph ] let @xmath59 be a positive integer . if @xmath57 is an elementary @xmath59-complex , then @xmath69 is the complete graph .    for every positive integer @xmath70",
    ", we define an equivalence relation @xmath71 over @xmath72 , by @xmath73 if there exists an even permutation @xmath74 such that @xmath75 . for every @xmath76 we denote by @xmath77_{\\equiv_n}$ ] the equivalence class of @xmath78 for @xmath71 .",
    "the two equivalence classes of the orderings of the @xmath79-faces of a simplex are called its _",
    "orientations_. an _ oriented simplex _ is a pair formed of a simplex and one of its orientations .    for an oriented @xmath59-simplex @xmath80_{\\equiv_{d+1}})$ ] , where @xmath81 is an ordering of the @xmath79-faces of @xmath57 , and a permutation @xmath74 over @xmath82 , we denote by @xmath83_{\\equiv_{d+1}})$ ] the oriented @xmath59-simplex @xmath84_{\\equiv_{d+1}})$ ] . for every integer @xmath59 , and every simplicial complex @xmath52 whose simplices have been oriented , we denote by @xmath61 the set of oriented @xmath59-simplices of @xmath52 . from now on , @xmath57 may denote an oriented or a non - oriented simplex .",
    "when @xmath57 is an oriented simplex , @xmath85 will denote the same simplex with the opposite orientation .",
    "we also define @xmath86 to be @xmath57 if @xmath11 is even , and to be @xmath85 if @xmath11 is odd .",
    "we will often specify an oriented simplex by an ordering of its @xmath79-faces .",
    "let @xmath87 be an oriented @xmath59-simplex .",
    "for every @xmath88 , for every @xmath89-face @xmath90 of @xmath57 , the _ induced orientation _ is the oriented @xmath89-simplex @xmath91 .",
    "let @xmath52 be a simplicial complex whose simplices have been oriented , and let @xmath34 be a ring .",
    "we define @xmath92 as the submodule of the free @xmath34-module over the @xmath59-simplices of @xmath52 with both possible orientations , whose elements are of the form @xmath93 , with @xmath94 , satisfying the relation @xmath95 .",
    "the elements of @xmath92 are called _",
    "@xmath59-chains_. for every oriented simplex @xmath57 of @xmath52 , we denote by @xmath96 the element @xmath97 of @xmath92 .",
    "let @xmath57 be an oriented @xmath59-simplex @xmath98 of @xmath52 .",
    "the _ algebraic boundary _ of @xmath96 , denoted by @xmath99 , is the @xmath89-chain of @xmath100 defined as @xmath101 .    since @xmath102 ,",
    "the operator @xmath103 has been correctly defined on a basis of @xmath92 and can therefore be uniquely extended into a homomorphism @xmath104 .",
    "the proof of the next lemma is straightforward .",
    "[ lemma : boundary ] let @xmath57 be an oriented @xmath59-simplex of a simplicial complex @xmath52 .",
    "denote by @xmath105 the set of @xmath89-faces of @xmath57 , and for every @xmath106 by @xmath107 the induced orientation on @xmath108",
    ". then @xmath109 .    following an early version of a paper of bloch  @xcite , in the next definition",
    "we generalize the notion of pseudo - manifold , without the usual requirements of connectivity and pure dimensionality .",
    "[ def : pseudomanifold ] a simplicial complex @xmath110 is a _ pseudo @xmath59-manifold _",
    ", for a positive integer @xmath59 , if    a.   @xmath110 is a union of elementary @xmath59-complexes , b.   every @xmath89-simplex in @xmath110 is a @xmath89-face of at most two @xmath59-simplices of @xmath110 .",
    "the _ boundary of @xmath110 _ is the set of elementary @xmath89-complexes in @xmath110 that belong exactly to one @xmath59-simplex of @xmath110 .",
    "we denote it by @xmath111 .",
    "a pseudo @xmath59-manifold @xmath110 is said to be _",
    "orientable _ if it is possible to assign an orientation to each @xmath59-simplex of @xmath110 , such that for all @xmath89-simplex of @xmath110 that is not on its boundary the orientations induced by the two @xmath59-simplices to which it belongs are opposite .",
    "such a choice of orientations for all the @xmath59-simplices of @xmath110 makes @xmath110 _",
    "oriented_.    if the @xmath59-simplices of @xmath110 are oriented , then there is a natural orientation of the @xmath89-simplices of @xmath111 , where each @xmath89-simplex has the orientation induced by the oriented @xmath59-simplex of which it is a @xmath89-face .",
    "notice that if @xmath110 is a pseudo @xmath59-manifold , then @xmath112 need not be a pseudo @xmath89-manifold .",
    "from now , all the simplicial complexes will be pseudo - manifolds .",
    "observe that if @xmath113 , then for any oriented @xmath59-simplex @xmath57 , we have @xmath114 .",
    "given a simplicial complex @xmath52 of dimension @xmath59 , the _ standard @xmath59-chain @xmath115 of @xmath52 _ will be defined depending on whether @xmath52 is oriented as follows :    * if @xmath52 is non - oriented , then @xmath116 , for an arbitrary choice of orientations @xmath117 of the @xmath59-simplices @xmath57 in @xmath52 , * if @xmath52 is oriented , then @xmath118 where @xmath117 is the orientation of @xmath57 in @xmath52 .",
    "[ fact : pseudo_boundary ] let @xmath59 be an integer , and let @xmath110 be a pseudo @xmath59-manifold .",
    "then ,    1 .   if @xmath110 is not oriented the equality @xmath119 holds in @xmath120 , 2 .   and if @xmath110 is oriented the equality @xmath119 holds in @xmath121 .    for every @xmath59-simplex @xmath57 in @xmath110 , denote by @xmath105 the set of @xmath89-faces of @xmath57 , and for every @xmath106 denote by @xmath107 the induced orientation of @xmath108 from @xmath57 . from lemma  [ lemma : boundary ] , we can write @xmath122 from the definition of a pseudo @xmath59-manifold , we know that in the last sum each @xmath89-simplex that is not on the boundary of @xmath110 appears exactly twice",
    ". if @xmath110 is not oriented , then as the base ring is @xmath50 , the only @xmath89-simplices that remain in the sum are those that are in @xmath111 . if @xmath110 is oriented , then from the definition of the orientability , it follows that each @xmath89-simplex that appears in two @xmath59-simplices of @xmath110 appears in the sum once with each orientation . as for any oriented simplex @xmath57 the equality @xmath123 holds , the only terms that do not cancel are the oriented @xmath89-simplices of the boundary .",
    "these @xmath89-simplices appear with the correct orientation .",
    "let @xmath52 be a simplicial complex .",
    "a _ labeling of @xmath52 _ is a mapping @xmath124 of the vertices of @xmath52 into the set @xmath125 .",
    "if a simplex @xmath57 of @xmath52 is labeled with all possible labels , then we say that _",
    "@xmath57 is fully labeled_.      given a labeling @xmath124 of a simplicial complex @xmath52 , and an integer @xmath127 , we define the _ @xmath59-dimensional flow _ @xmath128 $ ] by @xmath129=\\begin{cases } 1 & \\text{if } \\ell(s)=[(0,1,2\\ldots , d)]_{\\equiv_{d+1 } } , \\\\",
    "-1 & \\text{if } \\ell(s)=[(1,0,2,\\ldots , d)]_{\\equiv_{d+1 } } , \\\\ 0 & \\text{otherwise } ,   \\end{cases}\\ ] ] and then extend it by linearity into a homomorphism @xmath130 .",
    "[ th : sperner_general ] let @xmath52 be a simplicial complex of dimension @xmath59 , let @xmath124 be a labeling of @xmath52 , and let @xmath34 be a ring . for an element @xmath131 of @xmath92 , we have @xmath132=(-1)^d n_{d-1}[{\\partial_{d}\\,{c}}]$ ] .      [",
    "th : sperner_pseudomanifold ] let @xmath59 be an integer , let @xmath110 be a pseudo @xmath59-manifold , and let @xmath124 be a labeling of @xmath110",
    ". then @xmath133=(-1)^d n_{d-1}[\\widehat{{\\partial_{}\\,{\\mathcal{m}}}}]$ ] where @xmath134    this version of sperner s lemma can be viewed , from a physicist s point of view , as a result equivalent to a global conservation law of a flow .",
    "if there is a source for the flow and the space is bounded then there must be a sink for that flow .",
    "more concretely , the lines of flow can be drawn over @xmath59-simplices , that goes from one @xmath59-simplex to another if they share a @xmath89-face that has all possible labels in @xmath135 .",
    "the sources and sinks of the flow are the fully labeled @xmath59-simplices .",
    "the lemma basically says that if the amount of flow entering the manifold at the boundary is larger than the exiting flow , then there must exist sinks inside .",
    "the local conservation is stated by the fact that if there is an ingoing edge , there will not be two outgoing edges , and conversely .",
    "formally , we have the following .",
    "[ fact : simplex ] let @xmath136 be an oriented @xmath59-simplex .",
    "then at most two of its oriented @xmath89-faces have a non - zero image by @xmath137 . moreover , if there are exactly two @xmath89-faces @xmath138 and @xmath139 that have non - zero image by @xmath137 , then @xmath140=0 $ ] and @xmath141=-n_{d-1}[\\langle ( s'',\\tau_{s''}^s)\\rangle]$ ] .",
    "this gives a relation between the problem of finding fully labeled @xmath59-simplices and the natural complete problems for the parity argument classes .",
    "we can consider an oriented @xmath59-simplex @xmath136 with @xmath142=1 $ ] as a source for the flow , and @xmath143 with @xmath144=-1 $ ] as a sink .",
    "for an integer @xmath146 a functional oracle problem @xmath147 with @xmath148 is @xmath145-_query reducible _ to a functional oracle problem @xmath149 with @xmath150 if the following two conditions hold :            we now turn to the simulation of an oracle for * unique - sperner * by an oracle for * snake*. if the query concerns a point @xmath163 on the boundary , the answer is independent from the oracle , and is given according to the definition of @xmath164 , for any @xmath165 .",
    "otherwise , the simulator will query the point and its left and right neighbors in the sense of the figure  [ fig : walk_example ] , from which the value of @xmath164 can be easily determined .",
    "formally , for such a point @xmath163 , let the functions @xmath166 , @xmath167 , @xmath168 and @xmath169 be defined as @xmath170 and @xmath171 , @xmath172 , @xmath173 .",
    "we give now the definition of the adversary matrix @xmath175 which will be a @xmath176 symmetric matrix , whose rows and columns will be indexed by the labelings @xmath177 , when @xmath178 .",
    "for the sake of simplicity , we will only use binary sequences to denote rows and columns , instead of the induced labelings . for two binary sequences @xmath165 and @xmath179 , we denote by @xmath180 their longest common prefix . then let @xmath181=\\begin{cases } 0 & \\text { if } w_0(b)=w_0(b ' ) , \\\\",
    "2^{|b\\wedge b'| } & \\text { otherwise . } \\end{cases}\\ ] ] for a given binary sequence @xmath165 , there are @xmath182 sequences that have longest common prefix of length @xmath59 with @xmath165 . out of them , @xmath183 will give the same output as @xmath165 .",
    "therefore , @xmath184 \\\\    & \\geq ( m-3)2^{m-3}-\\sum_{d=0}^{m-4 } 2^d{m-3-d \\choose \\lfloor ( m-3-d)/2\\rfloor } \\\\    & \\geq ( m-3)2^{m-3}-\\left(\\sum_{d=0}^{m-4 } \\frac{2^{m-3}}{\\sqrt{m-3-d}}\\right ) \\\\    & \\geq ( m-3)2^{m-3}-o(\\sqrt{m } 2^m)=\\omega(m 2^m).\\end{aligned}\\ ] ]    we now turn to bound from above @xmath185 and @xmath186 when @xmath187\\neq 0 $ ] and @xmath188 .",
    "let us now fix a point @xmath189 with @xmath190 , and two sequences @xmath165 and @xmath179 , such that @xmath188 .",
    "we assume that @xmath191 and @xmath192 .",
    "we trivially upper bound @xmath186 by @xmath193 .",
    "we will now upper - bound @xmath185 . set @xmath194 . if a sequence @xmath195 is such that @xmath196 , then the length of its longest common prefix with @xmath165 is at most @xmath197 .",
    "we regroup these sequences according to the value @xmath198 .",
    "the number of sequences @xmath195 for which @xmath199 and @xmath196 is at most @xmath200 .",
    "therefore we can bound @xmath185 as @xmath2012^{m-3 } = o(\\sqrt{m}2^m).\\end{aligned}\\ ] ]"
  ],
  "abstract_text": [
    "<S> we present several results on the complexity of various forms of sperner s lemma in the black - box model of computing . </S>",
    "<S> we give a deterministic algorithm for sperner problems over pseudo - manifolds of arbitrary dimension . </S>",
    "<S> the query complexity of our algorithm is linear in the separation number of the skeleton graph of the manifold and the size of its boundary . as a corollary </S>",
    "<S> we get an @xmath0 deterministic query algorithm for the black - box version of the problem * 2d - sperner * , a well studied member of papadimitriou s complexity class ppad . </S>",
    "<S> this upper bound matches the @xmath1 deterministic lower bound of crescenzi and silvestri . </S>",
    "<S> the tightness of this bound was not known before . in another result </S>",
    "<S> we prove for the same problem an @xmath2{n})$ ] lower bound for its probabilistic , and an @xmath3{n})$ ] lower bound for its quantum query complexity , showing that all these measures are polynomially related .    </S>",
    "<S> [ [ classification ] ] classification : + + + + + + + + + + + + + + +    computational and structural complexity , quantum computation and information . </S>"
  ]
}
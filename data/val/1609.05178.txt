{
  "article_text": [
    "a key signal processing operation is the computation of the distance between two signals .",
    "this simple operation can suddenly become challenging if the two signals belong to two mistrustful parties who are unwilling to share them .",
    "we must now facilitate the continuation of the operations , without exposing their signals to one another .",
    "more formally stated , two parties , alice and bob , have two real valued vectors @xmath0 and @xmath1 respectively .",
    "the signal processing operation requires the computation of @xmath2 , which may be required by one or both parties .",
    "however , at the same time , it is required that none besides alice learns about @xmath0 , and similarly none besides bob is exposed to @xmath3 .",
    "a number of methods have been suggested in the literature to solve this problem .",
    "these have generally involved the use of secure multi - party computation protocols [ gcs ] @xcite or fully homomorphic @xcite which enables the computation of distances over encrypted data .",
    "although this provides the participants with the desired privacy , they are computationally unattractive",
    ". they can increase both the communication and the computational cost of computing the distance by several orders of magnitude .",
    "an alternate approach uses _ trusted third parties _ to facilitate the computation . here ,",
    "alice and bob interact with a third party , charlie to compute the distances between their signals with information - theoretic privacy .",
    "no party gets additional information despite their computational power . under this approach",
    ", protocols based on secret sharing using polynomials on finite fields have been proposed to compute the euclidean distance @xcite between privately held real - valued vectors . while secure , the precision of the computation depends on how well real numbers are represented in the selected field .",
    "moreover , the communication complexity of this kind of protocol is proportional to the dimensionality of the data , which is problematic when alice and bob need to compute a distance between high dimensional vectors in presence of communication constraints .",
    "_ even _ if the above concerns were somehow allayed , an additional problem arises from the fundamental definition of the basic problem itself .",
    "the outcome of the computation  the distance ",
    "itself reveals information about the signals .",
    "the party who obtains this result , which may be either alice or bob , or both of them , learns about the relationship between their signals . in trusted third - party settings , charlie may get to know this distance too",
    ". ideally , while this `` leakage '' of information can not be avoided , we would like to limit it .",
    "in particular , it is preferable that the third party charlie not be exposed to the information at all .    in this paper",
    "we propose several third - party based protocols for the computation of distances between signals , which address the above issues .",
    "we propose to encode the signals through a _",
    "modular _ hashing scheme @xcite with cryptographic properties that ensure that none of the parties can recover the original signal from the hashes , without the appropriate keys .",
    "the hashes have the property that they permit _ limited _ release of the information between vectors  the true distance is only revealed if the vectors are sufficiently close and the distance between them lies below a threshold , but is naturally effectively thresholded when the distance is greater , ensuring that even the parties that _ do _ get the distance only get as much as is required for effective computation of the signal processing processes , but not enough to chart out the other person s data .",
    "we impose protocols on top of the hashing which ensure that the third party can not gather any information besides the limited distance computed .",
    "when the third party may be trusted to know this limited distance then , unlike other cryptographic or secret sharing based schemes , the communication overhead may be made independent of the dimension of the signals , permitting control of the precision of the distance estimate .",
    "finally , we also analyze how the protocols may be modified in order to not expose even the limited distance to the third party .    in the next section ( section 2 )",
    "we discuss the hashing scheme . in section 3",
    "we describe our protocols and in section 4 we explain how they may be extended to hide the distance from the third party ( charlie ) .",
    "finally we present our conclusions in section 5 .",
    "our proposed approach requires alice and bob to transform their signals into hashes prior to further processing .",
    "we now describe the transform . this transformation may be considered as a _ modular _ variant of the @xmath4-stable locality sensitive hashing ( lsh ) @xcite @xcite .",
    "however , unlike the standard lsh , the introduction of modularity helps to generate _ uninformative hashes _ , i.e. the distribution of the resulting hash does not depend on its input .",
    "furthermore , the euclidean distance between two signals may be estimated through comparison of their hashes , provided the distance is shorter than some threshold .      *",
    "definition : * let @xmath5 be an integer larger than 1 , @xmath6 be an @xmath7 matrix , @xmath8^m$ ] , and @xmath9 be the set of integers @xmath10 .",
    "we define a _ modular hash _ as the function @xmath11 as @xmath12 where the floor function and modulo are component - wise .",
    "* definition : * if @xmath6 and @xmath13 are randomly selected , we say that @xmath14 is a _ secure modular hash _ ( smh ) if    1 .",
    "@xmath15 , @xmath16 is independent of @xmath17 for every @xmath18 , 2 .",
    "@xmath19 , @xmath20    one example of smh is given in @xcite as follows :    * theorem 1 .",
    "* @xmath14 is a smh if @xmath6 is randomly generated where its components are i.i.d with @xmath21 for some @xmath22 , and @xmath13 is independent of @xmath6 , with i.i.d components @xmath23 it is shown in @xcite that for smh defined as above , the expected value of the hamming distance between @xmath24 and @xmath25 relates to the actual value of @xmath2 , until the former achieves the value of @xmath26 , beyond which the hash is information theoretically secure and reveals no information about @xmath2 .",
    "we will henceforth assume that we work with this kind of smh .",
    "the _ lee _ distance @xcite between two integers @xmath27 is the length of the shortest path from @xmath28 to @xmath29 along a ring of circumference @xmath5 .",
    "@xmath30 using this distance metric , we can obtain the following result :    * theorem 2 .",
    "* @xmath31 , @xmath32 , @xmath33 even , then we obtain the following relation between the @xmath34 components of @xmath24 and @xmath25 : @xmath35 = \\\\",
    "\\frac{k}{4 } -   \\frac{2k}{\\pi^2 } \\sum\\limits_{j=1}^\\infty \\frac{1}{(2j-1)^2 } e^{-2 \\left ( \\frac{\\pi \\|{\\bf x}_1-{\\bf x}_2\\|(2j-1)}{\\delta k}\\right)^2 }   \\end{gathered}\\ ] ] moreover , bounding this expression it is possible to prove that when @xmath36 the described series converges to @xmath37 .",
    "the _ expected _ value of the lee distance between @xmath38 and @xmath39 approximates the euclidean distance between @xmath0 and @xmath3 .",
    "the following result bounds the error of the approximation .",
    "* proposition 1 .",
    "* let @xmath40 .",
    "we define the error    @xmath41 -   \\| { \\bf x}_1 - { \\bf x}_2 \\| \\right| \\end{gathered}\\ ] ] the following relation holds :    @xmath42 where @xmath43    it is easy to see that @xmath44 is increasing in @xmath45 and decreasing in @xmath5 .",
    "even more , for fixed @xmath45 , when @xmath5 tends to infinity @xmath46 tends to 0 .",
    "therefore , we can prove the following proposition :    * proposition 2 . *",
    "@xmath47 , @xmath48 , @xmath49 even , @xmath50 @xmath51    this proposition says that given a threshold @xmath52 we can find a value of @xmath5 large enough , such that the difference between @xmath2 and the expected value of the lee distance between the corresponding hashes is as small as we want for all @xmath53 .",
    "this is illustrated by figure [ fig : theoreticalcurve ] which shows the expression given by theorem 2 against @xmath2 .",
    "the relation is seen to be an identity for distances smaller than a threshold , and then converging to @xmath37 .",
    "hence , we can compute an accurate estimate of the euclidean distance between @xmath0 and @xmath3 directly from the lee distance between their hashes .",
    "the above relations are all statements of statistical expectation . in real applications , however , we must deal with a single realization of this kind of random process . to proceed , we note that the random variables @xmath54 are i.i.d . we define the _ mean lee distance _ as the empirical average of the lee distances between components of @xmath24 and @xmath25 :",
    "@xmath55 to determine the value of @xmath56 such that the mean lee distance between the hashes of @xmath0 and @xmath3 is a reasonable estimate of the _ expected _ value of the lee distance , we can use the hoeffding inequality and note that the lee distance is a number between 0 and @xmath57 to prove that    * proposition 3 . * for @xmath40 , if @xmath58 , then @xmath59 \\big|   <",
    "\\epsilon \\bigg )   \\geq 1 - \\frac{1}{2^\\beta}\\end{gathered}\\ ] ]    thus , the mean lee distance is similar to its expected value with high probability if @xmath56 satisfies the described condition . for instance , if @xmath60 , @xmath61 and @xmath62 , then with @xmath63 we can obtain an estimate of the expected lee distance with precision 0.5 with probability more than 0.999 .",
    "an important consequence of this result is that the value of @xmath56 required to obtain a good estimate of the expectation of the mean lee distance between the hashes of @xmath0 and @xmath3 , which in turn relates to the euclidean distance between the signals , is not dependent on @xmath64 , the dimensionality of the signal !",
    "thus , we may even consider this kind of transform as a dimensionality - reduction technique or as a dimensionality - hiding hash .",
    "figure [ fig : simulatedcurve ] shows simulation plots of how the mean lee distance approximates the euclidean distance , when the latter is lower than some threshold , for different values of @xmath5 .",
    "this is absolutely consistent with the previous theoretical results .",
    "we now describe a three - party protocol which uses smh to estimate the distance between two private signals without revealing them .",
    "* input * : alice and bob have @xmath0 and @xmath1 respectively .",
    "* output * : alice and/or bob obtain an estimation of @xmath2 , provided it is lower than some threshold .    * protocol * :    1 .",
    "alice and bob agree on a threshold @xmath52 and precision @xmath65 , and compute @xmath5 and @xmath56 using results from propositions 3 and 4 . 2 .   alice generates @xmath66 and sends them to bob securely , this is @xmath67 3 .",
    "alice computes @xmath24 and sends it to charlie .",
    "4 .   bob computes @xmath25 and sends it to charles .",
    "charles computes @xmath68 and sends @xmath69 to alice and bob .",
    "first , we can see that after this protocol no party gets anything more than the estimate of @xmath2 .",
    "alice and bob never see each others vectors .",
    "charlie never sees the plain vectors and receives just two vectors in @xmath70 , where each one can be seen as a sequence of independent realizations of draws from a uniform distribution in @xmath9 .",
    "since charles does not know @xmath71 , he does not have any mechanism to reconstruct the actual vectors , and even extract any kind of information more than the distance between them .",
    "note that it is important that charlie must not know @xmath71 ; otherwise he may reconstruct the original vectors , particularly if he has some knowledge of the domain of the signals .",
    "for the same reason alice and bob can not directly share their hashes after sharing the key @xmath66 .",
    "provided these conditions are followed , the scheme can be shown to be information theoretically secure .",
    "one drawback of this protocol is related to the key transmission . indeed ,",
    "if the vectors have a high dimension , transmitting the matrix @xmath6 may cause a communication overhead .",
    "however , we can make @xmath6 public because the security property of the hash reside on the random vector @xmath13 .",
    "hence , we can adapt the protocol as follows : * input * : alice and bob have @xmath0 and @xmath1 respectively .",
    "the @xmath72 matrix @xmath6 is public .",
    "* output * : alice and/or bob obtain an estimation of @xmath2 , provided it is lower than some threshold .    * protocol * :    1 .",
    "alice generates a @xmath56-dimensional vector @xmath13 with @xmath73 , and a random permutation of @xmath56 components @xmath74 .",
    "then alice sends @xmath75 to bob .",
    "alice computes @xmath76 privately and sends it to charles .",
    "bob computes @xmath77 privately and sends it to charles .",
    "4 .   charles computes @xmath68 and sends @xmath69 to alice and bob .",
    "note that , despite the fact that vector @xmath13 results in hashes with uniform distribution , we added the permutation @xmath74 in order to obstruct an exhaustive reconstruction by exploring all possible values of @xmath13 . following a similar analysis to the first protocol we can conclude that this protocol is secure .    however , these protocols have the disadvantage that the third party has access to the estimate of the euclidean distance between @xmath0 and @xmath3 .",
    "ideally we would like not to trust the third party to know this . in the next section",
    "we explore some solutions for this setting .",
    "in order to not reveal the distance to the third party , we propose two protocols .",
    "the first does not consider the third party , and the distance computation between two real valued vectors is based on a secure hamming distance computation between binary vectors .",
    "the second protocol considers the idea of adding noise to the hashes in order to hide the true distance value .",
    "one way to prevent the use of a third party is to establish a cryptographic protocol which lets us compute the lee distance privately .",
    "however , the computation of the lee distance involves a minimum between two numbers , a task that can increase the computational complexity .    nevertheless , it is possible to reduce the lee distance computation to a hamming distance computation .",
    "in fact , we can encode any element in @xmath9 as a vector in @xmath78 .",
    "in particular , if @xmath79 , we define @xmath80 as follows : + if @xmath81 , @xmath82 if @xmath83 , @xmath84    for example , in @xmath85 the coding left @xmath86 \\quad   c(1 ) = \\left [ \\begin{array}{c}1\\\\0\\\\0 \\end{array } \\right ] \\quad   c(2 ) = \\left [ \\begin{array}{c}1\\\\1\\\\0 \\end{array } \\right]\\ ] ] @xmath87 \\quad c(4 ) = \\left [ \\begin{array}{c}0\\\\1\\\\1 \\end{array } \\right ] \\quad   c(5 ) = \\left [ \\begin{array}{c}0\\\\0\\\\1 \\end{array } \\right]\\ ] ]    this kind of coding has the property that @xmath88    therefore , an element @xmath89 can be coded as @xmath90 , where @xmath91\\ ] ]    then , the mean lee distance between @xmath92 and @xmath93 is equal to @xmath94    with this result we enable the estimation of the euclidean distance between two points in @xmath95 using the hamming distance of two binary vectors . as a consequence , we can replace the third party computation by any protocol which computes securely the hamming distance between binary vectors ; for example , in @xcite defines a two party protocol based on oblivious transfer .    to summarize , we define the following protocol ,    * protocol : *    1 .",
    "alice generates @xmath66 and sends them to bob .",
    "2 .   alice computes @xmath96 privately .",
    "3 .   bob computes @xmath97 privately .",
    "alice and bob apply a secure two party protocol to compute the hamming distance @xmath69 between @xmath96 and @xmath98 .",
    "alice and bob compute the estimate of @xmath99 as @xmath100 .    unlike most protocols based on homomorphic encryption to compute the euclidean distance ,",
    "the complexity of the presented protocols does not depend on the dimensionality of the vector at the moment of applying the cryptographic technique .",
    "hence , our proposal for computing the euclidean distance between two vectors is to embed them in binary vectors and compute the hamming distance between them .",
    "one problem of this protocol is the fact we lose information - theoretical privacy , unlike the previous ones .",
    "one alternative is to retain the third party but hide information from it through obfuscation .",
    "we simply propose adding noise to the corresponding hashes .",
    "the protocol is as follows :    * protocol : *    1 .",
    "alice generates @xmath66 , two independent vectors @xmath92 and @xmath101 in @xmath102 , where each component is independent and distributed uniformly in @xmath9 , and a permutation @xmath74 of @xmath103 elements , and sends @xmath104 to bob .",
    "alice computes @xmath105 \\right)$ ] privately , and sends it to charlie .",
    "3 .   bob computes @xmath106 \\right)$ ] privately , and sends it to charlie .",
    "charlie computes the mean lee distance @xmath69 between the received vectors and sends it to alice and bob .",
    "alice and bob compute privately the mean lee distance @xmath107 between @xmath92 and @xmath101 and compute @xmath108 obtaining the estimate of @xmath2 .",
    "it is easy to see that mean lee distance between @xmath109 and @xmath109 is equal to the last expression of the protocol .",
    "one of the advantages of this protocol is the fact that , when @xmath110 is large enough , @xmath106 \\right)$ ] is indistinguishable from a vector with uniformly distributed i.i.d components , therefore , the value of @xmath69 should be close to @xmath37 for every pair @xmath0 and @xmath3 .",
    "a natural drawback is that the number of parameter to run the protocol , which may cause a computational overhead .",
    "in this paper we have presented a random transformation , that given a threshold @xmath52 , can generate hashes from vectors that preserving the euclidean distance between them if it is smaller than @xmath52 .",
    "these hashes are uninformative if the random parameters of the function are unknown .    with this kind of transformation , we are able to describe protocols to compute distances privately and efficiently .",
    "in fact , the proposed transformation is not only uninformative , it can be see as a transformation which reduces the data dimension and preserves the euclidean distance through the lee distance output space .    although the fact that the distance is preserved until some threshold seems to be a drawback , if both alice and bob know the maximum possible distance between their vectors , then they can set an appropriate value of @xmath5 which lets preserve distances to any desired threshold .",
    "we also describe how to hide the distance value from the third party , action that may increase the computational cost of the protocol , as it is expected .",
    "we still have many questions .",
    "how can we extend these protocols to multiparty versions ?",
    "how easy is a reconstruction of @xmath111 knowing @xmath112 and @xmath66 ?",
    "we have also trusted the third party to not collude with alice or bob .",
    "can this restriction be lifted ?",
    "* theorem 2 .",
    "* @xmath31 , @xmath32 , @xmath33 even , then we obtain the following relation between the @xmath34 components of @xmath24 and @xmath25 : @xmath35 = \\\\",
    "\\frac{k}{4 } -   \\frac{2k}{\\pi^2 } \\sum\\limits_{j=1}^\\infty \\frac{1}{(2j-1)^2 } e^{-2 \\left ( \\frac{\\pi \\|{\\bf x}_1-{\\bf x}_2\\|(2j-1)}{\\delta k}\\right)^2 }   \\end{gathered}\\ ] ]        + besides , we know that the density function of @xmath117 is @xmath118 + then @xmath119 + but , since both @xmath115 and @xmath120 are positive , we can extend these functions over real line , defining @xmath121 as @xmath122 + similarly we define @xmath123 . then @xmath124 + however",
    ", we can see that @xmath125 + where @xmath126 + and @xmath127\\\\ &   \\\\ 1 & \\mbox { if } x\\in [ -j , j]\\\\ & \\\\ -x+j+1 & \\mbox { if } x \\in [ j , j+1 ] \\\\ & \\\\ 0 & \\mbox { otherwise } \\end{array } \\right . } \\ ] ] + additionally , using the parseval s theorem we have @xmath128 + where @xmath129 and @xmath130 are the fourier transform of @xmath121 and @xmath123 respectively .",
    "but , using the definition of @xmath121 we have + @xmath131 + because @xmath132 + on the other hand , since @xmath123 is a gaussian , it is easy to see @xmath133 + therefore @xmath134 \\\\ & \\qquad \\qquad \\qquad \\cdot e^{-2\\left ( \\frac{\\pi \\|{\\bf x}_1-{\\bf x}_2\\| i}{\\delta k } \\right)^2}\\\\ & = \\frac{k}{\\pi^2 } \\sum\\limits_{i=1}^\\infty \\frac{\\left [ \\cos \\left ( 2 \\pi j \\frac{i}{k } \\right ) - \\cos \\left ( 2 \\pi ( j+1 ) \\frac{i}{k } \\right ) \\right]}{i^2 }   e^{-2\\left ( \\frac{\\pi \\|{\\bf x}_1-{\\bf x}_2\\| i}{\\delta k } \\right)^2 } \\\\ & \\qquad \\qquad + \\frac{2j+1}{k}\\end{aligned}\\ ] ] + finally , noting that if @xmath5 is even , we have @xmath135 and @xmath136 \\\\ & = \\sum_{i=0}^{k/2 } 1- \\mathbb{p}\\left(d_{lee}(q_{k , a , u}({\\bf x}_1),q_{k , a , u}({\\bf x}_2))\\leq j \\right ) \\end{aligned}\\ ] ] we can prove that @xmath137 = \\\\",
    "\\frac{k}{4 } -   \\frac{2k}{\\pi^2 } \\sum\\limits_{i=1}^\\infty \\frac{1}{(2i-1)^2 } e^{-2 \\left ( \\frac{\\pi \\|{\\bf x}_1-{\\bf x}_2\\|(2i-1)}{\\delta k}\\right)^2 }   \\end{gathered}\\ ] ] + @xmath138        1 .",
    "considering just the first term of the series , we have @xmath140 \\leq   \\frac{k}{4}-\\frac{2k}{\\pi^2}e^{-2 \\left ( \\frac{\\pi \\|{\\bf x}_1-{\\bf x}_2\\|}{\\delta k}\\right)^2}\\ ] ] + on the other hand , we can notice that @xmath141 then , applying this inequality , the second inequality holds .",
    "+ @xmath138        1 .   using the same scheme as in the proof of theorem 2",
    ", we can see that @xmath142 = \\int_0^\\infty f_l(u ) w(u ) du\\ ] ] + where @xmath120 is given by @xmath143 and @xmath144 by the function shown in the following plot +    + it is easy to see that @xmath145 + then @xmath146 & \\leq & \\int_0^\\infty f_l(u ) u\\ , du\\\\   & = & \\sqrt{\\frac{2}{\\pi } } \\cdot \\frac{\\|{\\bf x}_1 - { \\bf x}_2\\|}{\\delta}\\end{aligned}\\ ] ] + besides , noting that + @xmath147 + we can write @xmath148 -   \\sqrt{\\frac{2}{\\pi } } \\cdot \\frac{\\|{\\bf x}_1 - { \\bf x}_2\\|}{\\delta } \\right| = \\\\",
    "\\left| \\int_0^\\infty f_l(u ) \\cdot ( w(u)-u ) \\,du\\right|\\end{gathered}\\ ] ] + but + @xmath149 + and we have + @xmath150 + hence , setting @xmath151 we have + @xmath152 -   \\|{\\bf x}_1 - { \\bf x}_2\\| \\bigg| \\leq \\\\ \\|{\\bf x}_1 - { \\bf x}_2\\| \\cdot e^{- \\frac{k^2}{4 \\pi \\|{\\bf x}_1 - { \\bf x}_2 \\|^2}}$$\\end{gathered}\\ ] ] + and defining + @xmath153",
    "+ we have the result .",
    "+ @xmath138        1 .   to see this is enough to verify",
    "that @xmath46 is increasing in @xmath45 and when @xmath5 tends to infinity @xmath46 tends to 0 .",
    "+ to see that @xmath44 increases in @xmath45 we can just compute the derivative and it is easy to verify that is positive . + on the other hand , it is clear that , when @xmath5 tends to infinity , @xmath46 tends to zeros for every value of @xmath45 + @xmath138        1 .   the hoeffding inequality establish that , if @xmath154 $ ] , and @xmath155 , then @xmath156 in our case , noting that @xmath157 we have + @xmath158 + then , setting + @xmath159 + we can conclude that a sufficient condition is to consider + @xmath160 + @xmath138      m. pathak and b. raj , `` privacy - preserving speaker verification and identification using gaussian mixture models . ''",
    "ieee transactions on audio , speech and language processing , vol 21:2 , pp .",
    "397 - 406 , 2013 .",
    "j. bringer , h. chabanne and a. patey , `` shade : secure hamming distance computation from oblivious transfer . ''",
    "financial cryptography and data security volume 7862 of the series lecture notes in computer science pp 164 - 176 ."
  ],
  "abstract_text": [
    "<S> a critically important component of most signal processing procedures is that of computing the distance between signals . in multi - party processing applications where these signals belong to different parties , this introduces privacy challenges . </S>",
    "<S> the signals may themselves be private , and the parties to the computation may not be willing to expose them . </S>",
    "<S> solutions proposed to the problem in the literature generally invoke homomorphic encryption schemes , secure multi - party computation , or other cryptographic methods which introduce significant computational complexity into the proceedings , often to the point of making more complex computations requiring repeated computations unfeasible . </S>",
    "<S> other solutions invoke third parties , making unrealistic assumptions about their trustworthiness .    </S>",
    "<S> in this paper we propose an alternate approach , also based on third party computation , but without assuming as much trust in the third party . </S>",
    "<S> individual participants to the computation `` secure '' their data through a proposed secure hashing scheme with shared keys , prior to sharing it with the third party . </S>",
    "<S> the hashing ensures that the third party can not recover any information about the individual signals or their statistics , either from analysis of individual computations or their long - term aggregate patterns . </S>",
    "<S> we provide theoretical proof of these properties and empirical demonstration of the feasibility of the computation .    secure distance computation , information - theoretic privacy , locality sensitive hashing    . </S>"
  ]
}
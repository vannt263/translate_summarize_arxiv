{
  "article_text": [
    "scheduling problems form one of the most important class of combinatorial optimization problems .",
    "they arise in situations where a set of operations ( tasks ) have to be performed on a set of resources ( machines ) , optimizing a given quality criterion .",
    "flowshop problems constitute a special case of scheduling problems in which an operation must pass through all the set of resources before being completed .",
    "such scheduling problems are often difficult to solve , because of the large search space they induce , and then represent a great challenge for combinatorial optimization .",
    "therefore many optimization methods have been proposed so far and experimented on a set of widely - used benchmark instances .",
    "regarding , the minimization of makespan in flowshop problems , iterated local search ( ils ) approaches seem to achieve very good performance .",
    "in particular , sttzle s ils @xcite stays one of the references of the literature .",
    "it has been listed as one of the best performing metaheuristics on a review of heuristic approaches for the flowshop problem investigated in the paper  @xcite .",
    "more recently , ruiz and sttzle @xcite have proposed an iterated greedy algorithm to solve the flowshop problem , based on similar mechanisms , and they have shown that is outperforms the classical metaheuristics for this problem .",
    "the aim of the paper is to analyze characteristics of the flowshop problems in order to understand and to explain why sttzle s method achieves such good performance .",
    "a quick analysis shows that the neutrality is high in those problems and we want to explain how this neutrality influences the behavior of heuristic methods .",
    "it will then become possible to propose mechanisms that are able to exploit this neutrality .    the method proposed by sttzle consists of an iterated local search ( ils ) approach based on the _ insertion _ neighborhood operator .",
    "this operator is argued to be the best one by the original author , as it produces better results than the _ transpose _ operator , for example , while allowing a faster evaluation compared to the _ exchange _ operator .",
    "the method starts from a solution constructed using a greedy heuristic ( the neh heuristic ) , initially proposed by nawaz et al .",
    "next , the local search algorithm , based on a _ first improvement _ exploration of the neighborhood , is iterated until a local minimum is reached .",
    "then , between each local search , a small perturbation is applied on the current solution using random applications of the _ transpose _ and _ exchange _ neighborhood operators .",
    "an important characteristic of this approach is the acceptance criterion of the ils algorithm , which is based on the metropolis condition ( as in simulated annealing ) .",
    "indeed , such a condition allows to accept a solution with a same or worse fitness value than the current one .",
    "hence , the contributions of this work are the following ones . on the one hand ,",
    "the specific problem of flowshop scheduling is deeply studied in terms of landscape analysis and neutrality . on the other hand ,",
    "some propositions are drawn in order to exploit neutrality in the design of a local search algorithm .",
    "of course , these considerations are still valid for other combinatorial optimization problems with a neutrality .",
    "the paper is organized as follows .",
    "section  [ sec : background ] is dedicated to the presentation of the flowshop scheduling problem investigated in this paper , and of the required notions about neutrality analysis in fitness landscapes .",
    "section [ sec : analysis ] presents the neutral networks analysis for the permutation flowshop problem under study , whereas section [ sec : heuristic ] gives some hints on how to exploit the neutrality property in order to solve such problems efficiently by means of local search algorithms .",
    "finally , the last section is devoted to discussion and future works .",
    ".notations used in the paper . [ cols=\">,<\",options=\"header \" , ]     [ tab : param ]      the flowshop scheduling problem ( fsp ) is one of the most investigated scheduling problem from the literature .",
    "the problem consists in scheduling @xmath0  jobs @xmath1 on @xmath2 machines @xmath3 .",
    "machines are critical resources , _ i.e. _ two jobs can not be assigned to the same machine at the same time .",
    "a job @xmath4 is composed of @xmath2  tasks @xmath5 , where  @xmath6 is the @xmath7 task of  @xmath4 , requiring machine  @xmath8 . a processing time  @xmath9 is associated with each task  @xmath6 .",
    "we here focus on a permutation fsp , where the operating sequences of the jobs are identical and unidirectional for every machine . as consequence",
    ", a feasible solution can be represented by a permutation @xmath10 of size @xmath0 ( the ordered sequence of scheduled jobs ) , and the size of the search space is then @xmath11 .    in this study",
    ", we will consider that the makespan , _",
    "i.e. _  the total completion time , is the objective function to be minimized .",
    "let @xmath12 be the completion date of task  @xmath6 , the makespan ( @xmath13 ) can be computed as follows : @xmath14 according to graham et al .",
    "@xcite , the problem under study can be denoted by @xmath15 .",
    "the fsp can be solved in polynomial time by the johnson s algorithm for two machines  @xcite . however , in the general case , minimizing the makespan has been proven to be np - hard for three machines and more  @xcite . as a consequence",
    ", large - size problem instances can generally not be solved to optimality , and then metaheuristics may appear to be good candidates to obtain well - performing solutions .    [ [ benchmark - instances . ] ] benchmark instances .",
    "+ + + + + + + + + + + + + + + + + + + +    experiments will be driven using a set of benchmark instances originally proposed by taillard @xcite and widely used in the literature @xcite .",
    "we investigate different values of the number of jobs @xmath16 and of the number of machines @xmath17 .",
    "the processing time @xmath6 of job @xmath18 and machine @xmath19 is generated randomly , according to a uniform distribution @xmath20)$ ] .",
    "for each problem size ( @xmath21 ) , ten instances are available .",
    "note that , as mentioned on the taillard s website , very few instances with @xmath22 machines have been solved to optimality . for @xmath23- and @xmath24-machine instances , optimal solutions have been found , requiring for some of them a very long computational time .",
    "hence , the number of machines seems to be very determinant in the problem difficulty .",
    "that is the reason why the results of the paper will be exposed separately for each number of machines .",
    "the design of local search metaheuristics requires a proper definition of a neighborhood structure for the problem under consideration .",
    "a _ neighborhood structure _ is a mapping function @xmath25 that assigns a set of solutions @xmath26 to any feasible solution @xmath27 .",
    "@xmath28 is called the _ neighborhood _ of @xmath29 , and a solution @xmath30 is called a _ neighbor _ of @xmath29 . a neighbor results of the application of a _ move operator _ performing a small perturbation to solution @xmath29 .",
    "this neighborhood operator is a key issue for the local search efficiency .    for the fsp",
    ", we will consider the _",
    "insertion operator_. this operator is known to be one of the best neighborhood structure for the fsp  @xcite .",
    "it can be defined as follows .",
    "a job located at position @xmath31 is inserted at position  @xmath32 .",
    "the jobs located between positions  @xmath31 and  @xmath33 are shifted , as illustrated in figure  [ fig : neighborhood ] .",
    "the number of neighbors per solution is @xmath34 , where @xmath0 stands for the size of the permutation ( and corresponds to the number of jobs ) .",
    "is inserted at position @xmath33 , all the jobs located between @xmath31 and @xmath33 are shifted to the left.,width=144 ]        in order to study the typology of problems , the fitness landscape notion has been introduced @xcite . a landscape is a triplet @xmath35 where @xmath36 is a set of admissible solutions ( _ i.e. _ a search space ) , @xmath37 , a neighborhood operator , is a function that assigns to every @xmath27 a set of neighbors @xmath38 , and @xmath39 is a fitness function that can be pictured as the _ height _ of the corresponding solutions . in our study , the search space is composed of permutations of size @xmath0 so that its size is @xmath40 .",
    "[ [ neutral - neighbor . ] ] neutral neighbor",
    ". + + + + + + + + + + + + + + + + +    a neutral neighbor of @xmath29 is a neighbor solution @xmath41 with the same fitness value @xmath42 .",
    "given a solution @xmath27 , its set of neutral neighbors is defined by : @xmath43 the neutral degree of a solution is the number of its neutral neighbors .",
    "a fitness landscape is said to be neutral if there are many solutions with a high neutral degree @xmath44 .",
    "the landscape is then composed of several sub - graphs of solutions with the same fitness value . sometimes , another definition of neutral neighbor is used in which the fitness values are allowed to differ by a small amount . here",
    "we stick to the strict definition given above as the fitness of flowshop ( makespan ) is discretized ( it is an integer value ) .",
    "[ [ neutral - network . ] ] neutral network .",
    "+ + + + + + + + + + + + + + + +    a neutral network , denoted as nn , is a connected sub - graph whose vertices are solutions with the same fitness value . two vertices in a nn are connected if they are neutral neighbors . with the insertion operator , for all solutions @xmath45 and @xmath46 ,",
    "if @xmath47 then @xmath48 . so in this case , the neutral networks are the equivalent classes of the relation @xmath49 iff ( @xmath47 and @xmath50 ) . we denote the neutral network of a solution @xmath29 by @xmath51 .",
    "portal _ in a nn is a solution which has at least one neighbor with a better fitness , _",
    "i.e. _ a lower fitness value in a minimization context .",
    "[ [ local - optimum . ] ] local optimum .",
    "+ + + + + + + + + + + + + +    a solution @xmath52 is a local optimum iff no neighbor has a better fitness value : @xmath53 , @xmath54 .",
    "when all solutions on a neutral network are local optima , the nn is a local optima neutral network .",
    "the average or the distribution of neutral degrees over the landscape is used to test the level of neutrality of the problem .",
    "this measure plays an important role in the dynamics of metaheuristics @xcite .",
    "when the fitness landscape is neutral , the main features of the landscape can be described by its neutral networks . due to the number and the size of neutral networks , they are sampled by _",
    "neutral walks_. a neutral walk @xmath55 from @xmath29 to @xmath56 is a sequence of solutions belonging to @xmath36 where @xmath57 and @xmath58 and for all @xmath59 $ ] , @xmath60 is a neighbor of @xmath61 and @xmath62 .    a way to describe neutral networks",
    "nn is given by the _ autocorrelation of neutral degree _ along a neutral random walk @xcite .",
    "from neutral degrees collected along this neutral walk , we computed its autocorrelation function @xmath63 @xcite , that is the correlation coefficient of the neutral degree between the solutions @xmath61 and @xmath64 for all possible @xmath31 .",
    "the autocorrelation measures the correlation structure of a nn . if the first correlation coefficient @xmath65 is close to 1 , the variation of neutral degree is low ; and so , there are some areas in nn of solutions which have close neutral degrees , which shows that nn are not random graphs .    another interesting information to determine if a local search could find a better solution on a neutral network , is the position of portals .",
    "the number of steps before finding a portal during a neutral random walk is a good indicator of the probability to find better solution(s ) according to the computational cost to find it , _",
    "i.e. _ the number of evaluations .    moreover , to design a local search which explores the neutral networks in an efficient way , we need to find some information around the nn where , _ a priori _ , there is a lack of information .",
    "_ evolvability _ is defined by altenberg @xcite as `` the ability of random variations to sometimes produce improvement '' .",
    "the concept of evolvability could be difficult to define in combinatorial optimization .",
    "for example , the evolvability could be the minimum fitness which can be reached in the neighborhood .",
    "in this work , we choose to define the evolvability of a solution as the average fitness in its neighborhood .",
    "it gives the expectation of fitness reachable after a random move .",
    "the _ autocorrelation of evolvability _",
    "@xcite allows to measure the information around neutral networks .",
    "this autocorrelation is the autocorrelation function of a evolvability measure collected during a neutral random walk . when this correlation is large , the solutions which are close from each other on a neutral network have evolvabilities which are close too",
    "so , the evolvability could guide the search on neutral networks such as the fitness guides the search in the landscape where the autocorrelation of fitness values is large  @xcite .",
    "to analyze neutral networks , for each instance of taillard s benchmarks , 30 different neutral walks were performed .",
    "the neutral walks all start from a local optimum .",
    "it has been obtained by a steepest descent algorithm initialized with a random solution .",
    "the length of each neutral walk depends on the length of the descents which lead to local optima .",
    "we consider 10 times the maximal length found on the 30 descents . in the following ,",
    "the results are presented according to the number of jobs  ( @xmath0 ) and the number of machines ( @xmath2 ) . for each problem size , an average value and the corresponding standard deviation are represented . by the term size , we mean both the number of jobs ( @xmath0 ) and the number of machines ( @xmath2 ) .",
    "this average value is computed from the means obtained from the 10 instances of the same size , themselves calculated from the values given by the 30 neutral walks .",
    "computed between @xmath66 and @xmath60 of the neutral degree according to the number of jobs . ]    in this section , we first measure the neutral degree of the fsp .",
    "then , we describe the structure of the neutral networks ( nn ) .",
    "figure  [ neutraldegtonghsizeplot ] shows the average neutral degree to the size of the neighborhood @xmath34 , collected along the 30 neutral walks .",
    "whatever the number of machines , the neutral degree ratio increases when the number of jobs increases .",
    "this ratio is higher for small number of machines . for @xmath23-machine , and for @xmath67- or @xmath68-job and @xmath24-machine instances , the neutral degree is huge , higher than @xmath69 . for @xmath67- or @xmath68-job and @xmath22-machine instances , the ratio seems to be very low ( @xmath70 ) , but the number of neighbors with same fitness value is significant ( about @xmath71 and @xmath72 neutral neighbors for @xmath67 and @xmath68 jobs , respectively ) .",
    "there is no local optimum without a neighbor with the same fitness value , which means that each local optimum belongs to a local optima neutral network .",
    "the neutral degree is high enough to describe the fitness landscape with neutral networks .",
    "a neutral walk corresponds to a sequence of neighbor solutions on a nn of the fitness landscape , where all solutions share the same fitness value . during those neutral walks ,",
    "we compute the autocorrelation of the neutral degree ( see section [ measureneutralfit ] ) . figure  [ neutraldegreeplot ] shows the first autocorrelation coefficient for @xmath23 , @xmath24 and @xmath22 machines with respect to the number of jobs . in order to prove that those correlations are significative , we compare them to a null model .",
    "it consists of shuffling the same values of neutral degrees collected during the neutral walks .",
    "then , the autocorrelation of this model is compared to the original one .",
    "for all sizes , the first autocorrelation coefficient of the null model is below @xmath73 .",
    "therefore , we can conclude that the autocorrelation is a consequence of the succession of solutions encountered during the walk .",
    "obviously , for @xmath74 , @xmath67 and @xmath68 jobs , the neutral degree is highly correlated ( higher than @xmath75 ) .",
    "moreover , the standard deviations are very low , which indicates that the average values reflect properly this property on instances of same size",
    ". for @xmath22-job and @xmath23- or @xmath24-machine instances , the standard deviation gets higher .",
    "this can possibly be explained by a higher correlation .",
    "nevertheless , these values allow us to conclude that the neutral degree of a solution is partially linked to the one of its neighbor solutions .",
    "let us remark that the correlation for @xmath22-job @xmath22-machine instances is very low , due to the small average value of the neutral degree for this size .",
    "the first conclusions of this analysis is that ( @xmath31 ) there exists a high neutrality over the fitness landscape , particularly for large - size instances ( @xmath76 ) the neutral networks , defined as the graphs of neighbor solutions with the same fitness value , are not random . as a consequence",
    ", we should not expect to explore the neutral networks efficiently with a random walk .",
    "hence , heuristic methods should exploit the information available in the neighborhood of the solutions .",
    "a metaheuristic such as ils visits several local optima . in the previous section , we have seen that the local optima often belong to a nn .",
    "a natural question arises when the metaheuristic reaches a nn : is it possible to escape from this nn ? in this section , we classify the local optima nn in three different types , and we analyze their size .",
    "three types of nn typologies may exist ( see figure  [ plateaugeometry ] ) :    1 .",
    "the local optimum is the single solution on the nn ( type t1 ) , _ i.e. _ it has no neighbor with the same fitness value , we call it a degenerated nn .",
    "the neutral walk from the local optimum did not show any neighbors with a better fitness values for all the solutions encountered along the neutral walk  ( type t2 ) .",
    "of course , as the whole nn has not been enumerated , we can not decide if it is possible to escape from them .",
    "at least one solution having a neighbor with better fitness value than the local optimum fitness is found along the neutral walk ( type t3 ) .",
    "+            figures [ percentt1 ] , [ percentt23 ] and [ percentt45 ] show the proportion of nn of each type ( t1 , t2 or t3 ) counted along the neutral walks . for @xmath74- , @xmath67- and @xmath68-job instances ,",
    "the neutral walks show only nn of types t2 and t3 .",
    "no local optimum solution is alone on the nn . for @xmath22-job instances ,",
    "the number of type ( t1 ) is also small , except for 20 machines ( @xmath77 of type t1 ) .",
    "hence , the neutrality is important to keep in mind while solving such instances .",
    "the number of nn without any escaping solutions found ( t2 ) is significative only for @xmath23-machine instances ( higher than @xmath78 ) and stays very low for @xmath24- an @xmath22-machine instances ( lower than @xmath79 ) .",
    "the @xmath22-machine instances , which are known to be the hardest to solve optimally , are the ones where the probability to escape from local optimum by neutral exploration of the nn is close to one .",
    "when the neutral networks size is very small , the number of visited solutions is very small .",
    "indeed , a nn of type t2 or t3 could contain very few solutions and , the neutral walk could loop on some solutions .",
    "these situations have to be considered with attention .",
    "figure  [ dist0 ] shows the average percentage of solutions visited more than once during the neutral walk . for the @xmath74- , @xmath67- and @xmath68-job instances",
    ", there is no re - visited solutions during the neutral walks . for @xmath22-job and @xmath22-machine instances ,",
    "the number of re - visited solutions is approximatively @xmath80 during neutral walks on nn of type t2 or t3 .",
    "this result points out two remarks .",
    "first , the nn of local optima seems to be large for most instances .",
    "second , the number of re - visited solutions is low , which means that the probability to escape the nn of type t2 is below the inverse of the size of the neutral walk .    in conclusion , for most instances",
    ", a metaheuristic could escape the local optimum by exploring the nn .",
    "the next section will show some hints on how to guide a metaheuristic on neutral networks .",
    "in the previous section , we proposed to use neutral exploration to escape from local optimum , as there exists solutions having neighbor(s ) with a better fitness value around neutral networks .",
    "we called those solutions , portals .",
    "an efficient metaheuristic has to find such portal with a minimum number of evaluations .",
    "first , we study the number of steps to reach a portal , and then we propose an insight to get information to find them quickly .          as shown on figure  [ percentt45 ] at least @xmath81 of neutral random walks for fsp with 50 , 100 and 200 jobs can reach a portal ( more than @xmath82 for 10 and 20 machines ) .",
    "the performance of a metaheuristic which explores neutral networks highly depends on the probability to find a portal .",
    "indeed , it could become more time consuming to consider a neutral walk than applying a smart restart .",
    "figure  [ portestepnb ] gives the average number of steps to reach the first portal during the 30 neutral walks .",
    "the larger the number of machines , the less the number of steps is required by the neutral walk to reach a portal . for @xmath22-machine instances ,",
    "the neutral random walks need around @xmath83 steps to reach a portal , which is very small compared to the length of the descents ( 19 , 40 , 64 , 101 respectively for 20 , 50 , 100 , and 200 jobs ) . for @xmath23-machine instances , the length of the neutral walks",
    "is around the length of the descents .",
    "hence , it is probably more advantageous to perform a neutral random exploration than a random restart .",
    "moreover , the fitness value obtained after the neutral walk is better than after the descent . consequently , if an _ a priori _ study highlights that a portal is supposed to be encountered quickly , a metaheuristic that takes into account information on the neutral walk should move on the nn , and then finally find an improving solution .      in the previous section ,",
    "the role of neutrality was demonstrated by the correlation of the neutral degree between the neutral walk neighbors and the high frequency of neutral networks .",
    "neutral networks lead , with very few steps , to a portal .",
    "the neutrality could give interesting information about the landscape in order to guide the search .",
    "however , since the neutral network is large , the search has to be guided to find quickly a portal and not to stagnate on the nn .",
    "thus , proper information has to be collected and interpreted along the neutral walk to help the metaheuristic to take good decision : is it more interesting to continue the neutral walk until a portal is reached or to restart ? as suggested in section [ measureneutralfit ] , we compute the evolvability of a solution as the average fitness values of its neighbors for all visited solutions .",
    "we analyze the evolvability of solutions on neutral networks and we give some results about the correlation of evolvability and portals on a neutral network .",
    "this allows us to propose new ideas for the design of a metaheuristic .     of the average fitness values of neighbors solutions between @xmath66 and @xmath60 according to the number of jobs .",
    "]    during those neutral walks , we compute the evolvability of each solution along the neutral walk , and then its autocorrelation ( see section [ measureneutralfit ] ) . figure  [ correlmeanfitnghplot ] shows the first autocorrelation coefficient @xmath84 for @xmath23 , @xmath24 and @xmath22 machines with respect to the number of jobs . in order to show that those correlations are significative , as in section [ sectionneutraldegree ] , we compare them to a null model .",
    "for all sizes , the first autocorrelation coefficient of the null model is below @xmath73 .",
    "therefore , we can conclude that the autocorrelation is a consequence of the succession of solutions encountered during the walk .",
    "the average fitness values of the neighbors are not distributed randomly : they can then be exploited by a metaheuristic .",
    "the neutral networks present evolvability and portals .",
    "so , we can wonder if the evolvability would be able to guide a metaheuristic quickly to a portal . to test this hypothesis , along the neutral walks ,",
    "we compute the correlation between the average fitness values in the neighborhood and the number of steps required to reach the closer portal of the walk .",
    "this is presented in figure  [ correlmeanfitnbimpngh ] .",
    "the larger the number of machines , the higher ( in absolute value ) the negative correlation . for @xmath24- or @xmath22-machine instances",
    ", this correlation belongs to @xmath85 $ ] , so that it is significant for a metaheuristic to use such an information .",
    "the lower the average fitness values in the neighborhood , the closer a portal is .",
    "consequently , we propose to design a metaheuristic that takes into account the neutrality by allowing the exploration of solutions along the neutral walk .",
    "starting from a local optimum , it would choose the next neutral solution with the lower average fitness values of its neighbors .",
    "this would increase the probability to find a portal quickly , and then to continue the search process .",
    "in this work , we studied the neutrality of the fsp on a set of benchmark instances originally proposed by taillard .",
    "most of the instances have a high neutral degree : for a solution , the number of its neighbors with the same fitness value is significant in comparison to the neighborhood size . starting from local optima ,",
    "neutral walks have been performed .",
    "each walk moves from a solution to another with the same fitness value and defines a neutral network that is shown to be structured . indeed , the graph of neighbor solutions is not random and so a solution shares information with its neighbors .",
    "we show that a neutral walk leads easily to portals , solutions of the neutral network having a neighbor with a better fitness value .",
    "furthermore , the evolvability , defined in this study as the average fitness values of the neighbors , is highly autocorrelated .",
    "it proves that this information is not random between the neighbor solutions and so it could be helpful to take it into account .",
    "besides , improving the evolvability during the neutral walk often leads to a portal .",
    "this work completes the knowledge of fsp fitness landscape , and in particular , about its neutrality . here",
    ", the neutrality has been shown for the fsp taillard instances where the durations of jobs are integer values from @xmath86 $ ] .",
    "this is a specific choice which could have an impact on the difficulty of instances .",
    "future works will consider other instance generators , and study the neutrality according to the instance parameters .",
    "this work also helps to understand some experimental results on the efficiency of metaheuristics . in a study of iterated local search to solve the fsp @xcite , sttzle designs several efficient ils , called ils - s - pfsp and compares them to local search algorithms .",
    "he writes : `` experimentally , we found that rather small modifications [ of the solution ] are sufficient to yield very good performance '' . in section [ reachportals ] , we show that improving solutions can be reached very quickly applying _ insertion _ operator on a neutral network .",
    "so , sttzle s remark can be explained by the neutrality and the high probability on the neutral networks to move on a solution with an improving neighbor .",
    "moreover , this works supports the experimentations on ils design for @xmath22-machine instances .",
    "the study of neutral walks highlights features that explain the efficient design of the ils - s - pfsp .",
    "indeed , remember that the ils - s - pfsp , initialized with a random solution , applies a local search based on _",
    "insertion_-neighborhood mapping to get a local optimum , and then applies iteratively the steps ( @xmath31 ) perturbation , ( @xmath76 ) local search , and ( @xmath87 ) acceptance criterion , until a termination condition is met .",
    "all acceptance criteria tested in ils - s - pfsp are based on the metropolis condition : they always accept a solution with equal fitness value .",
    "so the neutral moves are always accepted .",
    "besides , sttzle work shows that the perturbation based on the application of several _ swap _ operators ( also called _ transpose _ operators ) is efficient . and , the _ swap _ neighborhood is included in the _ insertion _ neighborhood as the job @xmath31 can be inserted at the positions @xmath88 or @xmath89 .",
    "so , applying the _ swap _ operator several times could correspond to a walk on a neutral network defined by _",
    "insertion_-neighborhood relation .",
    "thus , steps ( @xmath31 ) and ( @xmath87 ) allow the ils - s - pfsp to move on the neutral network that could be frequent for those fsp instances .",
    "moreover , we show that the distance is small between a local optimum and a portal .",
    "so , such an ils - s - pfsp is able to quickly improve the current best solution , which could explain its performances .",
    "furthermore , our work proposes to consider the neutrality to guide a metaheuristic on the search space .",
    "the fsp instances shows neutrality , it is easy to encounter portals along a neutral walk and the evolvability leads quickly to them . with such information , a metaheuristic is proposed : first a local search is performed from a random solution , and then iteratively ( @xmath31 ) the evolvability on the neutral network is optimized until a portal is found and ( @xmath76 ) the local search is applied to move to an other local optimum .",
    "the metaheuristic finishes when the termination criterion is met .",
    "similar ideas have been ever tested on other problems with neutrality such as max - sat and nk - landscapes with neutrality  @xcite . a first attempt for developing such a strategy leads to the proposition of nils @xcite that has been successfully tested on flowshop problems .",
    "erel , s. , collard , p. , clergue , m. : easuring the evolvability landscape to study neutrality . in keijzer ,",
    "m. , et  al .",
    ": poster at genetic and evolutionary computation  gecco-2006 genetic and evolutionary computation  gecco-2006 , seattle , wa united states , acm press ( 07 2006 ) 613614 tea team .",
    "erel , s. , collard , p. , clergue , m. : cuba search : when selection meets innovation . in : evolutionary computation , 2004 .",
    "cec2004 evolutionary computation , 2004 .",
    "cec2004 , portland ( oregon ) united states , ieee press ( 06 2004 ) 924  931    marmion , m.e . ,",
    "dhaenens , c. , jourdan , l. , liefooghe , a. , verel , s. : : a neutrality - based iterated local search and its application to flowshop scheduling . in : 11th european conference on evolutionary computation in combinatorial optimisation(evocop11 ) .",
    "lncs , springer - verlag ( 2011 )"
  ],
  "abstract_text": [
    "<S> solving efficiently complex problems using metaheuristics , and in particular local search algorithms , requires incorporating knowledge about the problem to solve . in this paper , </S>",
    "<S> the permutation flowshop problem is studied . </S>",
    "<S> it is well known that in such problems , several solutions may have the same fitness value . as </S>",
    "<S> this neutrality property is an important issue , it should be taken into account during the design of search methods . </S>",
    "<S> then , in the context of the permutation flowshop , a deep landscape analysis focused on the neutrality property is driven and propositions on the way to use this neutrality in order to guide the search efficiently are given . </S>"
  ]
}
{
  "article_text": [
    "at present , one of main problems facing scientists in the field of artificial intelligence ( ai ) is the development of intelligent information systems ( iis ) to solve problems arising in different ai fields .",
    "the solution of such a problem is often reduced to heuristic programming that can yield good results , but , in this case , the complex solution of the problem is not provided .",
    "systems based on knowledge representation models ( krms ) belong to largest classes of iiss . to date , the following models are well - known and actively used : semantic networks , conceptual graphs , frames , scripts , logical and production models , ontologies , etc .",
    "but , despite the use of some krm or other as the base for an iis , an implemented system consists of at least two levels , namely , the krm level and level of its practical implementation .",
    "an implementation of a krm often creates definite problems and complexities connected with interacting different levels of the system . in this connection ,",
    "an object - oriented knowledge representation model was proposed in @xcite , which can be integrated into object - oriented programming languages and thereby to unite the krm itself and the language used for its implementation .",
    "this approach will allow one to get rid of some levels of abstraction and to partly simplify the structure of the system being developed and , hence , the development process itself .",
    "the present article describes main ideas that form the basis for constructing fuzzy object - oriented dynamic networks , in particular , fuzzy objects and classes that allow one to structurally represent knowledge about objects that are unfuzzily specified , are fuzzy , or are incompletely defined and , at the same time , to classify them .",
    "operations over fuzzy objects and classes of fuzzy objects are also considered with the help of which sets and new classes of fuzzy objects can be constructed and , thereby , new knowledge can be obtained .",
    "objects can be considered to be both arbitrary things from our real life and results of using our imagination . in other words ,",
    "an object is every thing that can be perceived in some way or other , i.e. , can be sensed or imagined .",
    "it is obvious that each object ( irrespective of its nature ) has definite properties that are characteristic for it .",
    "for example , let us consider a natural number .",
    "it is obvious that it must be integer and larger than zero .",
    "it is these characteristic properties of natural numbers that allow one to distinguish them from other objects .",
    "in fact , in order to reveal whether the numbers @xmath0 , @xmath1 , and @xmath2 are natural , it is necessary to check their properties , in particular , to check whether these numbers possess the same properties as natural numbers . as a result of verification ,",
    "it becomes obvious that @xmath0 and @xmath1 are not natural numbers . from this",
    "it is possible to draw the conclusion that a natural number is a crisply defined object .",
    "but , in addition to crisp objects , there also are other objects such as fuzzy and approximately or incompletely described objects .",
    "they arise in trying to recollect something , in describing our desires or fancies , in searching for something about which we know very little , etc .",
    "they mentally arise when we want to formalize some intuitive guess whose whole nature is fuzzy from the viewpoint of logic or mathematics .",
    "l.  a.  zadeh was the first to propose a formalistic approach to the description of such objects @xcite . with time , this approach was transformed into a theory , and many results were obtained within the framework of this theory , in particular , in the field of constructing information systems that operate with fuzzy concepts . taking into account the flexibility and efficiency of the approach proposed by l. zadeh , we use here some of his ideas for formal definition of fuzzy objects .",
    "in addition to the aforesaid concerning objects and their properties , we will pay attention to the following important point : properties of an object and the object itself are closely interconnected and can not exist separately .",
    "properties do not exist in themselves without an object since some object is their manifestation , and properties can not be seen , understood , and even described without it . in turn , an object can not exist without properties since their absence makes the construction or even a representation of the object impossible .",
    "it is obvious that this takes place for both crisp and fuzzy objects .",
    "therefore , a formal definition of the concept of an object can not be formulated if its properties are not formally defined and vice versa , it is impossible to define properties without knowing an object . in this connection ,",
    "we first define properties of an object and then the object itself with allowance made for their interrelations .    before considering properties of an object ,",
    "note that they are subdivided into quantitative and qualitative ones .",
    "a fuzzy quantitative property of an object @xmath3 is a tuple of the form @xmath4 , where @xmath5 is a fuzzy set describing the quantitative value of the property @xmath6 and @xmath7 are its measurement units .",
    "* example 1 * let us consider an object , for example , an apple ; one of its properties is its mass .",
    "after weighing it , we obtain its exact mass , and this will determine the value of its crisp quantitative property described in @xcite .",
    "but if it is impossible to approximately or exactly weigh an apple and thereby determine its mass , then we can represent it using a fuzzy set @xmath8 .",
    "if we take an apple and , based on our sensation , reveal that its mass is about @xmath9 , then this mass can be represented in the form @xmath10    let us define the equivalence of two fuzzy quantitative properties of objects to provide the possibility of comparing them .",
    "two fuzzy quantitative properties @xmath6 and @xmath11 are equivalent , i.e. , @xmath12 , if and only if the following conditions are fulfilled :    1 .   @xmath13 ; 2 .",
    "@xmath14 , @xmath15 , @xmath16 ; 3 .",
    "@xmath17 , @xmath18 , @xmath19 .",
    "a fuzzy qualitative property of an object @xmath3 is a verification function @xmath20 $ ] that reflects the degree ( measure ) of truth ( presence ) of a property @xmath6 for the object @xmath3 .",
    "* example 2 * let us consider an object such as a water - melon and its property such as its ( geometrical ) form",
    ". the form of a water - melon can be described in different ways , but it is necessary to proceed from the fact that its form resembles a sphere .",
    "it is obvious that each concrete water - melon will have a unique form of a flat sphere .",
    "but an advantage of this approach is that a sphere is a crisply defined geometric object and , hence , the geometrical form of a water - melon , namely , the degree of its sphericity , can be represented as a function of verification of its sphericity , i.e. , @xmath21 $ ] @xmath22 .",
    "let us define the equivalence of two fuzzy qualitative properties of objects to provide the possibility of comparing them .",
    "two fuzzy qualitative properties @xmath23 and @xmath24 are equivalent , i.e. , @xmath25 , if and only if the following condition is fulfilled : @xmath26    since one object can have several properties that are quantitative and qualitative , it makes sense to define the concept of a fuzzy object specification .    a specification of a fuzzy object @xmath3 is a vector of the form @xmath27 , where @xmath28 , @xmath15 , is a quantitative or qualitative property of the object @xmath3 .    in other words , the specification of a fuzzy object can consist of crisply specified and fuzzy properties",
    ". moreover , qualitative properties are special cases of fuzzy qualitative properties .",
    "next , using the concept of a fuzzy object specification , the concept itself of a fuzzy object can be directly defined .",
    "a fuzzy object is a pair of the form @xmath29 , where @xmath3 is the object identifier and @xmath30 is its specification .",
    "* example 3 * we consider an object , namely , a water - melon that has , as is well known , a spherical form and assume that its weight is about @xmath31 . using the definition of a fuzzy object , it is possible to formally represent this water - melon as @xmath32 , where @xmath33 , @xmath34 , and @xmath35    it is obvious that the specification of the object w can have a larger number of properties , which depends on the level of detail to be taken into account in considering the object .",
    "in addition to object properties , methods ( operations ) that can be applied to them should be taken into account , which makes it possible to operate with these objects to a certain degree . from this",
    "it makes sense to define the concept of a method of an object .",
    "an operation ( method ) of a fuzzy object @xmath3 is a function @xmath36 that can be applied to the object with allowance for distinctive features of its specification .",
    "depending on the nature of an action on an object , methods can be divided into the following two types : modifiers , i.e. , functions that can change the object , in particular , values of its properties , and exploiters , i.e. , functions using objects as unchangeable parameters .    * example 4 * consider a fuzzy object , namely , a square @xmath3 that is introduced by its specification @xmath37 , where @xmath38 is the number of its sides , @xmath39 is the number of its angles , @xmath40 is the size of its sides , and @xmath41 is the degree measure of its angles .",
    "an example of an exploiter for the square @xmath3 is the function for computing its area , i.e. , @xmath42 , where @xmath43 . as a result",
    ", we obtain @xmath44 in this case , an example of a modifier can be the following function of increasing a square whose application promotes the increase in the size of its sides : @xmath45 , where @xmath46 is some natural number . as a result , we obtain @xmath47 since several methods can be applied to the same object , it makes sense to define the concept of the signature of a fuzzy object .",
    "a signature of a fuzzy object @xmath3 is a vector of the form @xmath48 , where @xmath49 , @xmath50 , is a method of the object @xmath3 .",
    "next , for purposes of comparison , we will define the equivalence of two fuzzy objects .",
    "two fuzzy objects @xmath3 and @xmath51 are considered to be of the same type if and only if they have equivalent specifications and the same methods can be applied to them , i.e. , @xmath52 and @xmath53 .    it is obvious that each object , regardless of its nature , belongs to at least one class . in this connection , we will define the concept of a class of fuzzy objects .",
    "a class of fuzzy objects is a tuple of the form @xmath54 , where @xmath55 is a specification when several fuzzy objects are described and @xmath56 is their signature .    by a class of fuzzy objects we understand properties of objects and methods that can be applied to them . in other words ,",
    "a class of fuzzy objects is a generalized form of consideration of a number of fuzzy objects without the objects themselves . analyzing the definition of a class of fuzzy objects",
    ", one can draw the following conclusion : in creating objects of this class , all fuzzy quantitative properties can be represented in the form of fuzzy sets of the second type @xcite .    as well as in the case of classes of crisply specified objects , classes of fuzzy objects",
    "can be divided into two types , namely , homogeneous and heterogeneous .",
    "reasons for this partition , distinctive features , and examples of these types of classes of objects are described in detail in @xcite , @xcite .",
    "therefore , we pass directly to the definitions of the concepts of homogeneous and heterogeneous classes of fuzzy objects .",
    "a homogeneous class of fuzzy objects is a fuzzy class of objects that describes only fuzzy objectsthe same type .",
    "* example 5 * any classes of convex polygons such as those of squares , rectangles , triangles , etc .",
    "are homogeneous classes of fuzzy objects @xmath22 .",
    "a heterogeneous class of fuzzy objects is a tuple of the form @xmath57 , where @xmath58 is the core of the class of objects @xmath59 that consists of only the properties and methods that are common to specifications @xmath60 and signatures @xmath61 , respectively ; @xmath62 , @xmath15 , are the projections of objects consisting of only the properties and methods that are peculiar to only fuzzy objects @xmath63 .",
    "* example 6 * classes of all convex polygons , classes of all cars with the same brand name , the class of all tvs of one producer , etc .",
    "are heterogeneous classes of fuzzy objects @xmath22 .",
    "a distinctive feature of all the methods mentioned above , irrespective of the class in which they are defined , is that all of them are local , i.e. , are closed under the class in which they are defined .",
    "the reason is that methods of objects are intrinsically defined with allowance for specifications of objects , i.e. , proceeding from properties .",
    "there are methods that are defined in one class of fuzzy objects but , at the same time , can be applied to other classes of fuzzy objects , i.e. , they are polymorphous within certain limits . for implementing polymorphism",
    ", some object - oriented programming languages use the mechanism called operator overloading @xcite .    in @xcite ,",
    "operations such as union , intersection , difference , symmetric difference , and cloning are considered that can be applied to any objects and classes of objects ; at the same time , they do not require overloading and are rather universal .",
    "important distinctive features of these methods are their set - theoretic ( object - based ) character and the possibility of obtaining new objects and classes of objects with their help .",
    "this is directly related to the important task rcg ( runtime class generation ) , i.e. , the generation of classes during program execution .",
    "despite the fact that all these operations were defined for crisply specified objects and classes of objects , they also can be applied to fuzzy objects and classes of fuzzy objects . here",
    ", we will not define the operations themselves since they are similar for the case of fuzzy objects and classes of fuzzy objects .",
    "let us consider an example of their practical application .",
    "* example 7 * consider geometric figures , for example , a square @xmath3 and a rhombus @xmath51 .",
    "it is obvious that they are representatives of different classes of convex polygons .",
    "we define their classes as follows : @xmath64 where @xmath65 and @xmath66 are the numbers of sides and @xmath67 and @xmath68 are the sizes of sides , @xmath69 @xmath70 and @xmath71 are the numbers of angles of the figures ; @xmath72 and @xmath73 are the grade measures of angles ; @xmath74 and @xmath75 signify the equality of all sides ; @xmath76 and @xmath77 signify the equality of all angles ; @xmath78 and @xmath79 are methods for computing a perimeter ; @xmath80 and @xmath81 are methods for computing an area .    analyzing the classes @xmath82 and @xmath83 , one can state that they are classes of fuzzy squares and rhombuses , respectively , since their specifications contain fuzzy quantitative and qualitative properties",
    ".    then we will define the following specifications and signatures of the fuzzy objects @xmath3 and b using the specifications and signatures of their classes : @xmath84    using the fuzzy square @xmath3 and fuzzy rhombus @xmath51 as arguments , we will consider the operations of union , intersection , difference , symmetric difference , and cloning .    _ union operation _",
    "@xmath85 .    as a result ,",
    "a set of fuzzy objects @xmath86 and a new class of fuzzy objects @xmath87 are obtained .",
    "here , @xmath88 where @xmath89 is the number of sides ; @xmath90 is the number of angles , @xmath91 signifies the equality of all sides , and @xmath92 signifies a method for computing perimeters ; @xmath93 this allows us to draw the conclusion that @xmath86 is the set of fuzzy squares of type @xmath82 and fuzzy rhombuses of type @xmath83 and that the class @xmath94 is a heterogeneous class of fuzzy objects and simultaneously describes two types of figures , namely , @xmath82 and @xmath83 .",
    "_ intersection operation _ @xmath95 .    as a result ,",
    "a new class of fuzzy objects @xmath96 is obtained , where @xmath97 all the properties contained in @xmath98 coincide with the properties from the core of the class @xmath99 obtained as a result of union of the fuzzy objects @xmath3 and @xmath51 . an analysis of the result does not allow one to exactly determine the type of geometric figures that describes the class of fuzzy objects @xmath100 but , in this case , it may be said that it is homogeneous and consists of properties that are common to fuzzy squares of the class @xmath82 and fuzzy rhombuses of the class @xmath83 .",
    "_ difference operation _",
    "@xmath101 .    as a result",
    ", we obtain a new class of fuzzy objects @xmath102 all properties of this class are exactly repeated in the projection of the object @xmath3 that is obtained as a result of union of the fuzzy objects @xmath3 and @xmath51 , i.e. , @xmath103 it is obvious from the analysis of the result that , in contrast to the previous case , the homogeneous class of fuzzy objects @xmath104 describes a fuzzy rhombus and uses a smaller specification in this case .",
    "_ operation of symmetric difference _",
    "@xmath105 .    as a result",
    ", we obtain a new class of fuzzy objects @xmath106 , where the projections @xmath107 are similar to the projections obtained as a result of union of fuzzy objects @xmath3 and @xmath51 . analyzing the result",
    ", one can draw the conclusion that the heterogeneous class of fuzzy objects @xmath108 describes two types of geometric figures one of which can be a fuzzy rhombus and the second can be a fuzzy square or a rectangle .    _ cloning operation _ @xmath109 .    as a result , a new numbered copy of the fuzzy object @xmath3 is obtained @xmath22 .",
    "it is obvious from example 7 that all the considered operations over fuzzy objects are exploiters since they do not change the fuzzy objects @xmath3 and @xmath51 but only use them as parameters . in this connection",
    ", we pass to the consideration of another type of operations over fuzzy objects , namely , modifiers .",
    "a detailed definition of a modifier of objects is given in @xcite , @xcite where five types of modifiers ( complete , partial , generating , destroying , and replacing ) are considered and the principle of construction of combined modifiers on their basis is shown .",
    "in @xcite , the structures of objects and classes of objects are analyzed and also structural interrelations between properties of objects and classes of objects within the framework of their specifications are shown .",
    "these interrelations play an important role since they can be violated in the case of a modification and , as a result , the model does not necessarily correspond to real objects whose changes should be modeled . in @xcite , this phenomenon is called the principle of reflection according to which changes in some property are rather frequently impossible in nature without a definite action on other properties that are connected with the former one .",
    "example 7 partially demonstrates this principle since the properties @xmath110 and @xmath111 directly depend on values of the properties @xmath112 and @xmath113 , respectively .",
    "it follows from this that a modification of the properties @xmath112 and @xmath113 sometimes stipulates a change in the properties @xmath110 and @xmath111 since , otherwise , this model will cease to describe the process being considered ; moreover , the model becomes inconsistent .",
    "assume that we modify the property @xmath112 by specifying different lengths of figure sides .",
    "if we do not modify the property @xmath110 in this case , then inconsistency will be obtained .",
    "processes of modification of crisply specified and fuzzy objects or classes of objects are underlain by the same principle , and a distinction lies only in the crispness or fuzziness of a specification . in this connection",
    ", we will give an example of modifications of a fuzzy object .",
    "* example 8 * we consider the fuzzy square @xmath3 from the previous example and modify it so that , as a result , a fuzzy rhombus is obtained . to this end",
    ", we will construct a partial modifier @xmath114 . here ,",
    "@xmath115 @xmath116 , and @xmath117 are functions of modification of the properties @xmath112 , @xmath113 , and @xmath111 , respectively .",
    "thus , the fuzzy object @xmath3 is transformed into a fuzzy rhombus @xmath118 under the action of the modifier @xmath119 .",
    "it should be noted that this modification of the object @xmath3 also leads to a change in the signature of its class since the method @xmath120 is incorrect for the fuzzy object @xmath118 and , therefore , the method @xmath121 becomes undefined . analyzing the result of this modification , one can draw the conclusion that a modification of objects and classes of objects stipulates the creation of new classes of objects , which also is directly related to rcg @xmath22 .",
    "this example demonstrates only some of many aspects of the process of modification of objects and classes of objects .",
    "note that all well - known operations over fuzzy sets can be used as functions for modifying fuzzy properties of objects .",
    "let us consider the corresponding example .",
    "* example 9 * as an object , we use the fuzzy rhombus @xmath51 from example 7 . consider the following partial modifiers : @xmath122 where @xmath123 are functions for modifying the property @xmath124 and @xmath125 and @xmath126 are natural numbers . in this case , the modifiers @xmath127 and @xmath128 are operations of dilution and concentration of fuzzy sets @xcite @xmath22 .",
    "this article formulates definitions of a fuzzy object and a class of fuzzy objects that can underlie structural descriptions of fuzzy objects and , at the same time , allow for their classification .",
    "two types of operations over fuzzy objects and classes of fuzzy objects ( exploiters and modifiers ) are also considered with the help of which sets and new classes of objects can be created and also changes in structures of objects and their properties can be modeled , in particular , under the influence of external factors .",
    "this approach allows one to model some capabilities of human intelligence , in particular , mechanisms of analysis , classification , search , and recognition of objects and classes of objects on the basis of their features .",
    "the results obtained allow us to testify that fuzzy object - oriented dynamic networks are constructed as models for the representation of knowledge on fuzzy objects , classes , and concepts .",
    "terletskyi , d.o . ,",
    "provotar , o.i . : object - oriented dynamic networks . in : setlak , g. , markov , k. ( eds . ) computational models for business and engineering domains .",
    "ibs isc , vol .",
    "30 , pp . 123136 .",
    "ithea ( 2014 )      terletskyi , d.a . ,",
    "provotar , o.i . : mathematical foundations for designing and development of intelligent systems of information analysis .",
    "scientific journal `` problems in programming '' .",
    "15 , 233241 ( 2014 )        terletskyi , d.o .",
    ", provotar , o.i . :",
    "class and object modifiers : in proc .",
    "xiith all - ukrainian .",
    "sci .- pract . conf . of students , graduate students , and young scientists `` theoretical and applied problems of physics , mathematics , and informatics '' [ in ukrainian ] , vpivpk `` politekhnika '' , kyiv , 8587 ( 2014 )"
  ],
  "abstract_text": [
    "<S> the concepts of fuzzy objects and their classes are described that make it possible to structurally represent knowledge about fuzzy and partially - defined objects and their classes . </S>",
    "<S> operations over such objects and classes are also proposed that make it possible to obtain sets and new classes of fuzzy objects and also to model variations in object structures under the influence of external factors . </S>"
  ]
}
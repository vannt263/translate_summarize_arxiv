{
  "article_text": [
    "the simplest parabolic equation is the canonical diffusion equation , @xmath0 with some initial condition @xmath1 .",
    "the conventional , forward , weighted monte - carlo solution to eq .",
    "( [ eq : canonical_diffusion ] ) is given by @xmath2 where the stochastic variables @xmath3 are found by following the stochastic trajectories given by the forward monte - carlo difference equation of motion : @xmath4 where @xmath5 , @xmath6 , and @xmath7 is a zero - mean , unit - variance gaussian random number , @xmath8 .",
    "the points where the particles are launched , @xmath9 , must be chosen so that @xmath10 , as given by eq .",
    "( [ eq : forward_solution ] ) , approximates @xmath11 .",
    "the algorithm is illustrated in fig .",
    "[ fig : forward ] below .    ) .,width=453 ]    the recently introduced _",
    "backward _ monte - carlo method  @xcite is both strikingly similar and fundamentally different from its older , forward sibling .",
    "the backward solution to eq .  ( [ eq : canonical_diffusion ] ) is @xmath12 where the stochastic variables @xmath13 are found by following the stochastic trajectories given by the _",
    "backward _ monte - carlo difference equation of motion : @xmath14    ) .,width=453 ]    comparing the forward and backward solutions , eqs .",
    "( [ eq : forward_solution ] ) and ( [ eq : backward_solution ] ) , respectively , the appearance of @xmath15-functions in the forward solution is the most striking difference . to understand why the backward method produces a smooth solution , i.e.  without @xmath15-functions , we have to go back to its derivation  @xcite , which relies heavily on the feynman - kac formula  @xcite .",
    "in fact , eq .  ( [ eq : backward_solution ] ) , supplemented by eq .",
    "( [ eq : backward_motion ] ) , is just the numerical approximation of the stochastic feynman - kac representation of eq .",
    "( [ eq : canonical_diffusion ] ) .",
    "the feynman - kac formula relates a parabolic equation to its _ naturally associated stochastic differential equation _",
    "this sde governs microscopic motion going _ backward _ in time , and eq .",
    "( [ eq : backward_motion ] ) is its difference approximation . as a consequence of time running in different directions in the macroscopic and microscopic world , we get the natural initial condition , @xmath16 in eq .",
    "( [ eq : backward_motion ] ) ; i.e.  we launch the particles from the point in extended phase space where we want to know the solution to the parabolic equation and let them work their way backward in time to sample from the initial condition @xmath17 [ see fig .  [",
    "fig : backward ] above ] .",
    "as is shown in appendix  [ app : fmc ] , the forward monte - carlo method can be derived by forcing the naturally associated sde to govern microscopic motion going _ forward _ in time .",
    "this coercion is responsible for both the @xmath15-functions in the forward monte - carlo solution , eq .  ( [ eq : forward_solution ] ) , and the `` fuzzy initial condition '' , @xmath18 , imposed on the forward monte - carlo equation of motion , eq .  ( [ eq : forward_motion ] ) [ see appendix  [ app : fmc ] for details ] .",
    "+ however , the backward algorithm was not developed for esthetic reasons .",
    "the motivation originally came from the frustration over the extremely inefficient use of test particles of the forward method in cases where only the solution in a small part of phase space contributes significantly to the physics of interest .",
    "an example of this type of problem is the heating of fusion plasmas by cyclotron - resonance absorption on ions , where only the high - energy tail of the solution is of relevance ; but most test particles are wasted on the almost maxwellian bulk , which has been simulated with e.g.  the fido forward monte - carlo code  @xcite .",
    "earlier claims  @xcite that the backward method is vastly superior in these cases will be substantiated in section  [ sec : model ] .",
    "+ before that , the sources of numerical error , for both the forward and the backward method , will be identified and briefly discussed in the next section below . in section  [ sec : model ] we will compare the forward and backward monte - carlo solutions to a simple model equation . in section  [ sec : higher ]",
    ", it will be shown how a minor modification of the backward monte - carlo difference equation of motion , eq .",
    "( [ eq : backward_motion ] ) , leads to improved time convergence of the backward solution , eq .",
    "( [ eq : backward_solution ] ) .",
    "finally , a summary of the main findings of this article follows in section  [ sec : summary ] .",
    "the greatest disadvantage of the monte - carlo method is the unavoidable statistical error caused by the use of random numbers . with the conventional , forward monte - carlo method , the @xmath15-functions in the solution [ see eq .",
    "( [ eq : forward_solution ] ) ] make binning of the particles necessary . with the number of particles in each bin proportional to @xmath19 , the statistical error becomes @xmath20 with obvious notations .",
    "backing out the solution by linear interpolation between the bins introduces an error @xmath21 .",
    "+ as was mentioned previously , the backward method was developed for cases where the solution is of interest only in a point or small part of phase space . in such situations",
    "it reduces the statistical error to @xmath22 . even in cases where the backward method is used to calculate global solutions , and",
    "the statistical error becomes @xmath20 , it does not have a finite - bin - size error because the absence of @xmath15-functions in the solution [ see eq .",
    "( [ eq : backward_solution ] ) ] makes binning superfluous .",
    "+ the finite time step , @xmath23 , also introduces an error term .",
    "an analysis of this time - step error requires some care ; some mathematical subtleties are involved .",
    "there are two ways through which the time - step error can enter the numerical solution . + first , directly through the numerical approximation of the feynman - kac formula itself .",
    "i.e , even if we knew the _ exact _ stochastic variables @xmath24 , the backward solution , eq .",
    "( [ eq : backward_solution ] ) , would have an error due to the finite time step . to estimate the magnitude of this error",
    ", we need to go back to the derivation of it s formula in appendix  a of ref .",
    "@xcite where terms of order @xmath25 and higher were neglected .",
    "however , in the same way that the @xmath26-term , which was kept , becomes zero after averaging , so does the @xmath25-term .",
    "so , even if the @xmath13 were known to all orders , @xmath27 , the backward solution eq .",
    "( [ eq : backward_solution ] ) , would have an error @xmath28 .",
    "the error of the forward solution , eq .",
    "( [ eq : backward_solution ] ) would of course be of the same order .",
    "+ the other way in which the finite time step introduces an error into the solution is through an error in @xmath13 . again , going back to ref .",
    "@xcite , we see that the drift term , @xmath29 , on the right - hand side of the backward monte - carlo equation of motion , eq .",
    "( [ eq : backward_motion ] ) , has an error @xmath25 , and the diffusive term , @xmath30 , has an error @xmath31 .",
    "the different character of these two error terms should be noted ; the @xmath25-term is deterministic whereas the @xmath31-term is stochastic . it can be shown ( see e.g.  ref .",
    "@xcite ) that after averaging over all the @xmath13 , the approximation eq .  ( [ eq : backward_motion ] ) introduces an @xmath31 error into the backward solution .",
    "again , the situation is equivalent for the forward method .",
    "+ in section  [ sec : higher ] we will discuss how the time - step error of the backward solution can be reduced .",
    "but before that , we will study the backward and forward solutions to a simple model equation in the next section .",
    "to validate and benchmark the backward method and to compare it to the conventional forward method , we will solve a simple model equation that has an analytic solution .",
    "we have chosen the lorentz equation that has been used to model pitch - angle scattering in plasmas  @xcite : @xmath32 where the diffusion coefficient @xmath33 and the initial condition is @xmath34 , where @xmath35 is the legendre polynomial .",
    "the analytic solution is @xmath36 .",
    "+ in the following we will use the parameters : @xmath37 , @xmath38 , and @xmath39 ; while @xmath40 , @xmath41 , and @xmath23 will be varied so that their impact on the error can be studied .",
    "before we get into a detailed analysis of accuracy and convergence , we show the solutions ( with @xmath42 , @xmath43 , and @xmath44 ) to the lorentz equation  ( [ eq : lorentz ] ) in fig .",
    "[ fig : bulk+tail ] below .    solving for @xmath45 over the whole interval @xmath46 , both the backward , @xmath47 , and the forward , @xmath48 monte - carlo solutions are indistinguishable from the exact solution .",
    "however , solving only in the subinterval @xmath49 , the backward solution is a much better approximation of the exact solution due to its much smaller statistical error . note especially that the forward solution drops to zero for @xmath50",
    "because not a single particle finds its way into the last few bins [ compare also with the sketch in fig .",
    "[ fig : forward ] ] . the ability to focus in on a small subinterval and calculate efficiently ( i.e.  without wasting the vast majority of the particles ) the local solution is one of the main strengths of the backward monte - carlo method .",
    "+ for a detailed error analysis we need a well - defined measure of the error .",
    "we will use the local relative error @xmath51 . in the following we will plot the logarithm of the error against the logarithm of one of the parameters @xmath40 , @xmath41 , and @xmath23 , while keeping the other two parameters fixed .",
    "first we compare the statistical error of the forward and the backward solutions .",
    "to single out the statistical error from the finite bin - size and time - step errors we make the latter two small by choosing @xmath52 , and @xmath53 . with @xmath40 spanning six decades ( @xmath54 ) , we plot the error in the left frame of fig .",
    "[ fig : n - scaling ] below .",
    "the dotted lines are least - square fits whose slopes approximate the exponents that determine the scaling of the error . with the forward method ,",
    "the bins adjacent to @xmath55 are empty for small @xmath40 ( @xmath56 ) . as a result ,",
    "@xmath57 for these values of @xmath40 , and the slope becomes flat .",
    "the low-@xmath40 data points have thus been excluded from the least - square fit to @xmath58 . as can be seen , the statistical error [ @xmath22 with @xmath41 fixed ] then scales as predicted .",
    "the exponents -0.43 and -0.41 are as close to the theoretical value of -1/2 as could be expected , given the fact that the other small but non - zero error terms always tend to flatten the slope .",
    "the forward and backward methods thus converge at the same rate as @xmath40 is increased , but the forward method needs @xmath41 times more particles to achieve the same accuracy as the backward method .",
    "this can easily translate into orders of magnitude in terms of execution time . + next , we study the bin - size error ( and the statistical error ) by varying @xmath41 over four decades ( @xmath59 ) while keeping fixed @xmath60 and @xmath53 .",
    "the result is shown in the right frame of fig .",
    "[ fig : n - scaling ] above .",
    "the first observation is that the backward solution is completely unaffected by the bin size ; @xmath61 is constant and the slope is zero .",
    "the error in the forward solution , @xmath62 , exhibits a more interesting behavior with different scalings for small and large @xmath41 . with few bins",
    "there are many particles in each bin , so the statistical error is small .",
    "the bin - size error , @xmath21 , caused by backing out the solution by linear interpolation between these huge bins , however , becomes large . for small @xmath41 ,",
    "the slope of @xmath58 is -1.90 , in excellent agreement with the theoretical value of -2 . with many bins ,",
    "the bin - size error becomes small , but with few particles in each bin , the statistical error [ @xmath63 with @xmath40 fixed ] becomes dominant as is evidenced by the slope ( @xmath64 ) for large @xmath41 .",
    "the shape of the @xmath58 graph illustrates the conflict between resolution and statistics that is inherent for the forward monte - carlo method .",
    "the backward solution , however , can be calculated in two points arbitrarily close without affecting the statistical error .",
    "this is yet another of the main strengths of the backward method",
    ". + turning now to the time - step error , we fix @xmath42 and @xmath52 and vary @xmath65 . as can be seen in fig .  [ fig : t - low ] below ,    ) with the forward ( blue ) and backward ( red ) methods . ]",
    "both the forward and the backward methods converge as predicted ( the respective slopes are @xmath66 ) down to a time step @xmath67 . at this point",
    "the statistical error becomes dominant .",
    "as was discussed in section  [ sec : errors ] , the dominant @xmath31 time - step error in the monte - carlo equations of motion , eqs .",
    "( [ eq : forward_motion ] ) and  ( [ eq : backward_motion ] ) , comes from the diffusive term @xmath30 .",
    "there is thus reason to suspect that a higher - order diffusive term might result in better overall time convergence , by reducing the time - step error to @xmath25 . in appendix  [ app : trapezoidal ]",
    "it is shown that the next - higher - order monte - carlo equation of motion is @xmath68 in the left frame of fig .",
    "[ fig : t - high ] below the time - convergence study presented in fig .",
    "[ fig : t - low ] above is repeated using the higher - order approximation of eq .",
    "( [ eq : backward_motion_higher ] ) . in the right frame",
    "exactly the same experiment is repeated with ten times more particles to further reduce the statistical error .",
    "somewhat surprisingly , the forward solution does not converge at all .",
    "the backward solution , however , exhibits the faster time convergence we had hoped for ( the slope is @xmath69 ) .",
    "+ milshtein , who was not explicitly concerned with solving parabolic equations , did investigate the scaling of the error of expectation values similar to the ones of interest here  @xcite .",
    "his results are consistent with the @xmath31 error of the forward and backward lower - order solutions . however , for the higher - order methods introduced in this section , milshtein s results would still indicate a @xmath31 error for both the forward and backward solutions , in clear disagreement with the scalings of fig .",
    "[ fig : t - high ] .",
    "we hope to be able to resolve the discrepancies in future work .",
    "we have shown that the backward monte - carlo method works as expected , i.e.  it dramatically reduces the statistical error in situations where the solution is sought only in a small part of phase space . furthermore , even in cases where we solve for the global solution , the backward method removes the conflict between resolution and statistics .",
    "this has great practical significance e.g.  when the gradient of the solution is of interest .",
    "+ we have also shown how a remarkably simple modification of the backward monte - carlo equation of motion leads to improved time convergence .",
    "[ sec : summary ]    this research was sponsored by the oak ridge national laboratory , managed by ut ",
    "battelle , llc , for the u.s .",
    "department of energy undercontract de  ac0500or22725 .",
    "research was supported in part by anappointment to the ornl postdoctoral research associates program , administered jointly by oak ridge national laboratory and the oak ridge institute for science and education .",
    "+ the author wishes to thank his colleagues in the fusion energy division radiofrequency theory group ( don batchelor , lee berry , mark carter , and fred jaeger ) for helpful comments during the work on this article .",
    "the aim of this appendix is to derive the conventional , forward , weighted monte - carlo method in the same manner as the backward method was derived  @xcite .",
    "the starting point is the _ forward _ sde : @xmath70 solving this sde is trivial ; following exactly the same procedure as for the backward sde , we get @xmath71 where @xmath7 is a zero - mean , unit - variance gaussian random number , @xmath8 . when the sde is backward , the obvious initial condition is @xmath72 . for the forward sde  ( [ eq : forward_sde ] ) ,",
    "we simply do not know which initial condition to impose ; we will have to leave @xmath73 undefined for now .",
    "+ as before  @xcite , we use the it formula to differentiate @xmath74 and obtain @xmath75 where again we have identified @xmath5 , @xmath6 , and used@xmath76 [ eq .  ( [ eq : canonical_diffusion ] ) ] @xmath77 . using the macroscopic initial condition , @xmath1",
    ", we get @xmath78 at this stage of the derivation of the _ backward _ method , we used the microscopic initial condition and found that the equivalent of the lhs of eq .",
    "( [ eq : proto2 ] ) was in fact a solution to eq .",
    "( [ eq : canonical_diffusion ] ) : @xmath79 [ @xmath72 ] @xmath81 . but here , in the forward derivation , we can not do that because @xmath82 ! going forward in time , @xmath83 is an unknown ; we could use the monte - carlo equation of motion , eq .",
    "( [ eq : proto0 ] ) , to find @xmath83 , but we do not have an initial condition !",
    "so , is there any way to get @xmath45 from eq.([eq : forward_sde ] ) ?",
    "the answer is yes ; there is a ( rather contrived ) way .",
    "+ if we let @xmath45 be a distribution , we can write it as @xmath84 \\ . \\label{eq : proto3}\\ ] ] substituting eq .",
    "( [ eq : proto2 ] ) into eq .",
    "( [ eq : proto3 ] ) , we get : @xmath85 \\ .",
    "\\label{eq : proto4}\\ ] ] the numerical approximation of this expectation value is the forward weighted monte - carlo solution : @xmath86 now , we still need to know what the microscopic initial condition on @xmath9 should be .",
    "the best we can do is to make sure that @xmath87 .",
    "note that `` approximately equal '' must be given a very liberal definition because @xmath10 is a jagged sum of @xmath15-functions , whereas @xmath11 is in general a smooth function .",
    "the stochastic variables @xmath9 can now be found by following the stochastic trajectories given by the forward monte - carlo equation of motion , eq .",
    "( [ eq : proto0 ] ) , with the `` fuzzy initial condition '' : @xmath88",
    "the diffusive term @xmath89 of the monte - carlo equations of motion , eqs .",
    "( [ eq : forward_motion ] ) and  ( [ eq : backward_motion ] ) , is an approximation of the it integral @xmath90 where @xmath91 is the stochastic process that solves the sde @xmath92 where @xmath93 is a wiener process , and we impose the initial condition @xmath94 . the approximation eq .",
    "( [ eq : sigma_integral_low ] ) replaces @xmath95 with its zero - order taylor expansion , @xmath96 . to reduce the error in eq .",
    "( [ eq : backward_motion ] ) to @xmath97 we taylor expand @xmath95 to first order , @xmath98 and approximate the solution to eq .",
    "( [ eq : sde ] ) with @xmath99 \\ .",
    "\\label{eq : x_approx}\\ ] ] the it integral over @xmath100 becomes : @xmath101 \\right \\ }",
    "dw(s ) + \\mathcal{o}(\\delta{}t^{3/2 } ) = \\nonumber \\\\ & \\sigma&(x_{t } ) \\int_{t}^{t + \\delta{}t}\\!dw(s ) + \\sigma{}(x_{t } ) \\ , \\sigma{}'(x_{t } ) \\int_{t}^{t + \\delta{}t } [ w(s ) - w(t ) ] \\ ,",
    "dw(s ) + \\mathcal{o}(\\delta{}t^{3/2 } ) \\ , \\nonumber \\\\ { }",
    "\\label{eq : sigma_integral_high}\\end{aligned}\\ ] ] where @xmath102 is @xmath25 and hence was neglected . the first term on the rhs of eq .",
    "( [ eq : sigma_integral_high ] ) is just the low - order approximation eq .",
    "( [ eq : sigma_integral_low ] ) .",
    "the second term is the next - order correction . to calculate this correction term ,",
    "we first need some intermediate results . + following bjrk  @xcite",
    ", we introduce the stochastic variables @xmath103   \\ , \\label{eq : i_n}\\ ] ] and @xmath104   \\ , \\label{eq : b_n}\\ ] ] where @xmath105 .",
    "it trivially follows that @xmath106 [ w(t_{k+1 } ) - w(t_{k } ) ] = w^{2}(t ) \\",
    ", \\label{eq : b+i}\\ ] ] and @xmath107^{2 } = s_{n}(t ) \\ .",
    "\\label{eq : b - i}\\ ] ] in appendix  a of ref .",
    "@xcite we showed that @xmath108 subtracting eq .",
    "( [ eq : b - i ] ) from eq .",
    "( [ eq : b+i ] ) and taking the limit @xmath109 , we obtain @xmath110 \\ .",
    "\\label{eq : w_integral}\\ ] ]    applying eq .",
    "( [ eq : w_integral ] ) to eq .",
    "( [ eq : sigma_integral_high ] ) we get @xmath111 + \\nonumber \\\\ & \\half & \\sigma{}(x(t ) ) \\ , \\sigma{}'(x(t ) ) \\ ,",
    "\\{[w(t + \\delta{}t ) - w(t)]^{2 } - \\delta{}t \\ } + \\mathcal{o}(\\delta{}t^{3/2 } ) \\ . \\nonumber \\\\ { } \\label{eq : sigma_integral_high_eval}\\end{aligned}\\ ] ] in the absence of advection , as is the case for eq .",
    "( [ eq : canonical_diffusion ] ) , @xmath112 , and the higher - order monte - carlo equations of motion become @xmath113 where we have used the fact that @xmath114 ; @xmath7 is a zero - mean , unit - variance gaussian random number ; @xmath8 ; and @xmath115 and @xmath116 . + in ref .",
    "@xcite milshtein derived eq .",
    "( [ eq : sigma_integral_high_eval ] ) by introducing @xmath117 + c_{3 } [ w(t + \\delta{}t ) - w(t)]^{2 }   \\ , \\nonumber\\ ] ] and finding the @xmath118 , @xmath119 and @xmath120 that minimize @xmath121 $ ] .",
    "j.  carlsson , t.  hellsten , and l .- g .",
    "eriksson , in _ theory of fusion plasmas _ , e.  sindoni , f.  troyon , and j.  vaclavik , eds .",
    ", editrice compositori , bologna , 1994 , pp .",
    "351356 ; t.  hellsten , j.  carlsson , and l .- g .",
    "eriksson , phys .",
    "* 74 * ( 1995 ) 36123615 ; j.  carlsson , l .- g .",
    "eriksson , and t.  hellsten , nucl .",
    "fusion * 37 * ( 1997 ) 719723 ; j.  hedin , j.  carlsson , t.  hellsten , and a.  jaun , plasma phys .",
    "fusion * 40 * ( 1998 ) 10851095 ; j.  carlsson , t.  hellsten , and j.  hedin , phys .",
    "plasmas * 5 * ( 1998 ) 28852892 ; l .- g .",
    "eriksson , m.  mantsinen , d.  borba , a.  fasoli , r.  heeter , s.  sharapov , d.  f.  h.  start , j.  carlsson , a.  gondhalekar , t.  hellsten , and a.  korotkov , phys .",
    "* 81 * ( 1998 ) 12311234 ."
  ],
  "abstract_text": [
    "<S> the recently introduced backward monte - carlo method  [ johan carlsson,`arxiv : math.na/0010118 ` ] is validated , benchmarked , and compared to the conventional , forward monte - carlo method by analyzing the error in the monte - carlo solutions to a simple model equation . in particular , it is shown how the backward method reduces the statistical error in the common case where the solution is of interest in only a small part of phase space . </S>",
    "<S> the forward method requires binning of particles , and linear interpolation between the bins introduces an additional error . reducing this error by decreasing the bin size increases the statistical error . </S>",
    "<S> the backward method is not afflicted by this conflict . </S>",
    "<S> finally , it is shown how the poor time convergence can be improved for the backward method by a minor modification of the monte - carlo equation of motion that governs the stochastic particle trajectories . </S>",
    "<S> this scheme does not work for the conventional , forward method . </S>",
    "<S> + _ pacs : _ 02.70.lq ; 02.60.lj +    linear parabolic partial differential equation ; monte - carlo method ; time convergence </S>"
  ]
}
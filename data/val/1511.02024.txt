{
  "article_text": [
    "distributional semantic models  @xcite , also called _ count models _",
    "@xcite have been popular in the computational linguistics literature for several decades . in the last few years , however , _",
    "predict models _ such as the skip - gram model and continuous bag - of - words model have become the de facto standard for word modeling  @xcite .",
    "these methods have origins in neural language modeling  @xcite , where the goal was to improve classic language models .",
    "a recent evaluation study  @xcite suggested that the predict models are superior to the count models on a range of word similarity tasks .",
    "newer work , however , attributes a large amount of the differences in performance between count and predict models to a lack of proper hyperparameter optimization  @xcite . this has prompted the need for understanding the differences between the two types of models .    to this end , levy and goldberg  @xcite made an interesting connection between two key models : a traditional count model based on pointwise mutual information ( pmi ) and a predict model , namely the skip - gram model with negative sampling ( sgns ) .",
    "the key result is that the sgns model is equivalent to a shifted version of the pmi method , where all values get shifted by a factor of @xmath0 .",
    "however , the proof assumes that the input and output dimensions are the same ; hence the word vectors will still be of the size of the vocabulary .",
    "as we show in our analysis , this assumption has important implications for subsequent steps , such as dimensionality reduction methods like singular value decomposition ( svd ) .",
    "the aim of this paper is to analyze connections between count and predict models in a more detailed fashion . in particular , we investigate the differences between sgns and pmi methods more deeply .",
    "we make several observations that help this understanding .",
    "the first useful result is that the shifted pmi model comes out as an explicit version of sgns in which the context word vectors are fixed at their one - hot representations .",
    "we point out two differences between the shifted pmi model and the sgns model from an optimization perspective .",
    "first , sgns usually works in lower dimensions , making it possible for all word vectors two interact .",
    "second , as count models have usually more parameters , this might cause them to overfit on the data .",
    "we use the insight from our analysis to propose several interesting extensions to classic word embedding models .",
    "for example , our analysis allows regularization to be added into pmi methods in a systematic way .",
    "we also propose a new convex word vector model based on cbow which offers interpretability and a well - defined training objective . in short ,",
    "we draw connections between existing count and prediction models and augment them in several ways .",
    "however , in order to fully understand the factors that differentiate various methods , a comprehensive set of experiments is needed .",
    "we plan to carry out these experiments as part of future work .",
    "consider a corpus @xmath1 that is a sequence of words over a vocabulary @xmath2 .",
    "we will use @xmath3 when referring to the index of a target word and @xmath4 when referring to the index of a context word .",
    "we define the exact notion of context in section  [ sec : context ] .",
    "note that @xmath3 and @xmath4 are integers taking values from @xmath5 to @xmath6 .",
    "each word and context word has a vectorial representation .",
    "we will use @xmath7 and @xmath8 to denote the word vector and context vector corresponding to word @xmath3 and context word @xmath4 . for vector @xmath9",
    ", @xmath10 will denote the @xmath11-th component of @xmath9 .",
    "let @xmath12 and @xmath13 denote the set of all word and context word vectors .",
    "one can also think of @xmath12 and @xmath13 as matrices @xmath14 and @xmath15 whose @xmath3-th and @xmath4-th rows are given by @xmath16 and @xmath17 respectively .",
    "we will use @xmath14 and @xmath15 to synonymously refer to @xmath12 and @xmath13 .",
    "let us use # to denote a count and weighting function . in the simplest case , for example ,",
    "# @xmath18 could denote the number of occurrences of the ( word , context word ) pair @xmath18 in corpus @xmath19 .",
    "let us define @xmath20 and @xmath21 , the total counts for word @xmath3 and context vector @xmath4 .",
    "an important design choice in count models is the definition of _ context_. the definition of context determines which co - occurrences get considered when creating a model , along with the importance of single co - occurrences . a common way of defining context is based on choosing a window around each occurrence of a word @xmath3 in @xmath19 .",
    "there are many options to customize this window ; for example , it can either be symmetric or asymmetric around @xmath3",
    ". there could also exist weights ( e.g. , dependent on the relative positions of @xmath3 and @xmath4 ) associated with each @xmath18 occurrence in @xmath19 .",
    "one may also include down - weighting of common words , possibly for both for the current word @xmath3 as well as for the context words @xmath4 .",
    "all these choices determine the value of # @xmath18 .",
    "note that since the weightings can be real , # @xmath18 , @xmath22 and @xmath23 can take non - negative real values in general .",
    "if the window is symmetric around @xmath3 and as well as the weighting functions are symmetric , then    1 .",
    "@xmath24 is symmetric , i.e. , @xmath25 and 2 .",
    "@xmath26 if @xmath3 and @xmath4 denote the same word    we will refer to this as the _ symmetry condition_. in section  [ subsec : symm ] we will revisit this condition and see that it helps our understanding of non - uniqueness and interchangeability of word vectors and context word vectors .    * example .",
    "* consider an asymmetric window @xmath27 that includes @xmath28 words to the left and @xmath29 words to the right of a word @xmath3 .",
    "in other words , @xmath30 take one ( word , context word ) pair @xmath31 , where @xmath32 .",
    "let @xmath33 be the probability with which word @xmath34 is chosen for inclusion into the training set .",
    "for example , mikolov et al  @xcite suggest the following down - sampling probability : @xmath35 where @xmath36 is the frequency of word @xmath34 in the corpus @xmath19 , and @xmath37 is a threshold . let @xmath38 be the weight associated with @xmath39 as context word . here",
    "again we may want to down - sample frequent words similar to  ( [ downsamp ] ) .",
    "let @xmath40 be the weight associated with the position of the context word @xmath39 in the context window . using all these individual weights we can define the overall weight for the @xmath31 pair : @xmath41 accumulating all this info over the entire corpus gives us the total value for ( word , context word ) pairs : @xmath42 now # @xmath43 and # @xmath44 can be formed using # @xmath18 as described in the beginning of this section .",
    "remember that the goal of this paper is to investigate the differences between count and prediction models . to do this , we start by summarizing two special instances of count and prediction models .",
    "we first introduce pmi models as representatives of count models in section  [ sec : pmi ] , and then discuss the skip - gram model with negative sampling ( sgns ) in section  [ sec : sgns ] .",
    "pmi models have been used extensively in distributional semantic models  @xcite to compute similarities between words .",
    "as the name implies , the key quantity in these models is _ pointwise mutual information ( pmi)_. its definition and mle estimate from data are given by @xmath45 where @xmath24 is the simple count function . for a given word @xmath3 , pmi represents @xmath3 by forming a vector whose components are @xmath46 for all @xmath47 .    note that pmi is not defined when @xmath48 . to circumvent this problem , positive pmi ( ppmi ) replaces all negative values , i.e. , @xmath49    more recently , levy and goldberg  @xcite have defined shifted variants of pmi and the ppmi metrics . shifted pmi ( spmi )",
    "is just defined as @xmath50 , and shifted positive pmi ( sppmi ) is defined as @xmath51 where @xmath52 is some positive integer .",
    "pmi and ppmi are , respectively , special cases of shifted pmi and shifted ppmi , with @xmath52 set to @xmath5 .",
    "we will return to shifted pmi and shifted ppmi in the next section , where we talk about the equivalence of certain methods .    as all vectors produced by pmi have the vocabulary size as the dimensionality",
    ", dimensionality reduction techniques are often applied to the original matrix to decrease the memory and computational requirements .",
    "sgns  @xcite is a popular predict model that aims to predict which word @xmath3 occurs with a context word @xmath4 .",
    "one can derive the sgns  @xcite model from a binary classification setting where the target variable @xmath53 specifies whether a word @xmath3 occurs with context word @xmath4 .",
    "sgns tries to solve this task with the logistic loss applied to the input score @xmath54 .",
    "remember that our corpus @xmath19 is a sequence of words , @xmath1 . to make notation easier , here we assume that the context is defined by all the words within a window @xmath55 around each word @xmath34 .",
    "let the corresponding sequence of sets of context words be @xmath56 . to construct the training set for the sgns model , one forms one training example for each @xmath57 and each context word @xmath58 . for each @xmath59 , a set of @xmath52 negative context words ,",
    "@xmath60 is chosen at random and , the logistic loss function @xmath61 is applied .",
    "this loss is the aggregation of losses for one positive example and @xmath52 negative examples .",
    "more formally , the loss of one training example @xmath62 is : @xmath63 where @xmath64 is the logistic loss corresponding to the word - context pair @xmath18 and target @xmath65 .",
    "the loss over the entire corpus is then the sum of all individual losses : @xmath66    let us refer to this way of writing the training objective ( sum over occurrences in the corpus ) as the _ corpus format_.    levy and goldberg  @xcite showed that , by accumulating data over co - occurrences of words and context words , the objective function in ( [ corpusform ] ) can be rewritten as here and the one in  @xcite are negatives of each other . ] : @xmath67 let us refer to this ( equivalent ) way of writing the training objective as the _ co - occurrence format_. note that in the co - occurrence format , we do not compute losses for each token individually , but instead compute a loss for each unique @xmath18 pair .    in",
    "we will from now on also consider other loss functions @xmath68 apart from the logistic loss like in the original formulation .",
    "we consider general loss functions , @xmath68 ( here @xmath65 is the target variable ) with the logistic loss being a special case .",
    "this generalization allows us to define custom loss functions that can incorporate domain knowledge or other side information .",
    "table  [ tab : losslist ] lists a set of popular loss functions .",
    "[ sec : sgns ]    .a list of popular loss functions , @xmath69 . [ cols=\"^,^\",options=\"header \" , ]     [ obs : xalosses ] for building semantic representations that are used for computing similarity , it is often not desirable to have negative components in the word vectors .",
    "poscondition in the last column of table  [ tab : losses ] checks when this case occurs .",
    "this condition turns out to be the same for all losses , which is interesting .",
    "there is no difference between squared loss , squared hinge loss and huber loss .",
    "this is because , in the interval @xmath70 $ ] , all these losses have identical @xmath71 and the minimizer of @xmath72 always occurs in @xmath73 $ ] .",
    "these three losses have an expression for @xmath74 that is quite different from that for the logistic loss .",
    "hinge loss prefers to set @xmath74 at the extremes : @xmath5 or @xmath75 .",
    "one of the key results of levy and goldberg  @xcite is that the vectors created by shifted pmi are a solution to the sgns objective .",
    "we use the quadratic analysis of section  [ quadratic ] to say this more cleanly .",
    "let @xmath76 denote the unit vector in @xmath77 whose @xmath11-th component is @xmath5 and all other components are zero .",
    "suppose we use a one - hot representation for context vectors , i.e. , we fix @xmath78 for all @xmath4 .",
    "thus , we are fixing @xmath15 .",
    "[ ob : minpmi ] suppose we fix each context vector to the one - hot representation given above .",
    "then , only @xmath14 remains as the set of variables , and the following hold .    1 .",
    "the minimizer @xmath79 of ( [ ellwc ] ) is given by @xmath80 @xmath81 , where @xmath82 is a vector with @xmath83 as components .",
    "@xmath74 is the shifted pmi representation as defined in section  [ sec : pmi ] .",
    ", @xmath84 together form an optimal solution of sgns .    in other words",
    ", we have a closed - form solution for sgns ( assuming @xmath85 ) . though levy and goldberg  @xcite",
    "do not mention the above construction , this is a simple observation that easily follows from their analysis .",
    "* proof of observation  [ ob : minpmi ] .",
    "* let s take one @xmath4 .",
    "by the way we defined @xmath17 , we have @xmath86 . in @xmath87",
    "given by ( [ ellall ] ) , the variable @xmath88 occurs only in the term @xmath89 .",
    "therefore , @xmath90 , which proves part ( a ) of observation  [ ob : minpmi ] .",
    "part ( c ) follows from the fact that , the pair , @xmath84 is such that @xmath89 is minimized for every @xmath18 pair and it is not possible to do better than that .",
    "empirically , there seems to be evidence that predict and count models perform differently ( e.g. , @xcite ) .",
    "this is interesting since they all consider the same input data  namely the co - occurrences of words in text .",
    "what are the reasons for this ? although the previous section pointed out a strong connection between sgns and pmi methods ( with observation  [ ob : minpmi ] even indicating a near equivalence ) , we believe there are two main differences between the two methods pertaining ( a ) the dimension of the embeddings , and ( b ) @xmath15 being fixed as the one - hot representation .",
    "let us now expand on the two factors .",
    "[ obs : dim ] * dimension of embeddings . * as already mentioned in observation  [ obs : blowup ] , the small embedding dimension used by sgns for words can be crucial for learning good word vectors .",
    "for example , co - occurring words can influence each other .",
    "the full dimension used by pmi methods does not allow this to happen ; the full dimension also has the disadvantage of suffering from overfitting due to an excessive number of variables .",
    "[ obs : onehot ] * one - hot representation for @xmath15 . *",
    "similar to the previous observation , there is a difference in which variables are optimized .",
    "sgns operates with both , @xmath14 and @xmath15 as variables .",
    "as shown in subsection  [ subsec : connectsgns ] , pmi methods , on the other hand , correspond to using a fixed one - hot representation for @xmath15 .",
    "an important consequence of such a representation is that it does not allow close context words to influence each other .",
    "future work should empirically investigate the role of this factor .",
    "recall that the solution for sgns given by shifted pmi is unusable in practice , since we have entries that are @xmath91 .",
    "also , the shifted pmi solution has a high number of dimensions , and this might not be useful in practice .",
    "levy and goldberg present two heuristics remedy these problems .",
    "first , they propose omitting negative terms in the objective function to make a solution feasible .",
    "second , they suggest a subsequent svd step to reduce the dimensionality of the shifted ppmi matrix . we below",
    "discuss each of these heuristics and their consequences in more detail .      since in practice",
    ", we can not work with vectors that have @xmath91 entries , goldberg and levy propose shifted ppmi instead of shifted pmi to remedy this problem .",
    "shifted ppmi corresponds to leaving out all @xmath18 terms from ( [ ellall ] ) that have negative shifted pmi values .",
    "this is equivalent to a modified sgns method in which during negative sampling examples not satisfying the poscondition , i.e. , those with @xmath92 are left out .",
    "there is two issues with the above approach .",
    "first , we no longer can guarantee optimality for this solution .",
    "second , this also seems inconsistent with the main idea behind negative sampling , which is to sample from unobserved @xmath18 pairs . levy and goldberg",
    "@xcite make the following statement in the second paragraph of section 5.1 of their paper :  we observe that shifted ppmi is indeed a near - perfect approximation of the optimal solution , even though it discards a lot of information when considering only positive cells .",
    "\" however , this does not explain the role of the discarded terms .",
    "in particular , when training sgns with a low number of embedding dimensions , discarding those terms could be of real importance .      levy and goldberg also propose to apply svd to the sppmi matrix in order to obtain low - dimensional embeddings . if we follow this step , we loose again some of the optimality we had with the shifted pmi solution .",
    "more formally , consider a sppmi matrix @xmath93 whose @xmath18th term is @xmath94 . to form word vectors of dimension @xmath95 lower than @xmath6 ,",
    "goldberg and levy suggest to apply svd to the matrix @xmath93 .",
    "let @xmath96 denote the svd .",
    "if one is interested in an embedding of dimension @xmath97 , the best rank @xmath95 approximation of @xmath93 , @xmath98 is used . to form word vectors",
    ", one can use either @xmath99 or the  symmetric version \" , @xmath100 .",
    "[ obs : svd ] levy and goldberg  @xcite propose that svd is done on @xmath93 or one of its variants .",
    "however , if remaining faithful to sgns is the aim , ( [ tsg ] ) indicates that the weighting term @xmath101 also be included and that we solve @xmath102 it is non - trivial to solve this problem ; an svd based approach will not work .",
    "let us now look at the limiting full case , i.e. , @xmath103 , to point out some relations and differences within the methods in the pmi class .",
    "[ obs : fullsvd ] we can use the full svd of @xmath93 and define word vectors @xmath104 and @xmath105 . note that these word vectors are not the same as shifted ppmi which uses @xmath93 itself as word vectors .",
    "however , because @xmath106 , the dot products between any two word vectors is identical for @xmath107 ( i.e. , @xmath93 ) and @xmath108 . on the other hand , in general , @xmath109 .",
    "what this means is that svd is consistent with shifted ppmi , but symmetric svd is not consistent with shifted ppmi .",
    "levy and goldberg  @xcite recommend shifted ppmi and refer to the spectral word vectors for it as _ svd _ and _ symmetric svd_. their experiments showed the symmetric version to yield better results than sgns .",
    "the above subsections went into various ways of connecting sgns and pmi methods and also brought out various differences .",
    "figure  [ fig : diffs ] gives a rough and quick view of the various morphings of sgns into different pmi methods .",
    "the use of a small embedding dimension by sgns as opposed to the full dimensional one hot representation used by pmi methods is probably the most important difference .",
    "the discarding of certain negative examples , the approximation of the original non - linear objective by a quadratic , and the leaving out of the @xmath101 factors from the quadratic objective , are additional differences .",
    "carefully designed experiments are needed to understand the individual effects of each difference on the quality of the resulting word vectors .",
    "the various differences also imply that , even though the methods at the two left ends of the figure involve low dimensional embeddings , they could be vastly different due to the various reasons given in this section .",
    "in the following two subsections , we propose two extensions to the basic pmi model .",
    "first , we show how to add regularization to pmi models and give explicit solutions for @xmath110 and @xmath111 regularization .",
    "we hope that regularization will help improve issues with data sparsity . after that",
    ", we propose a new convex model for word embeddings that is not only easy to learn , but also yields intuitive word vectors since each dimension corresponds exactly to one context word .",
    "let us continue with the formulation of section  [ quadratic ] and add regularization . if overfitting is one of the causes of the inferior performance of pmi methods compared to sgns , then regularization should help improve performance .",
    "consider the decoupled determination of @xmath112 .",
    "our modified objective is now @xmath113 where @xmath114 is the regularization term . as we argued in section  [ quadratic",
    "] , each @xmath88 is decoupled from other variables .",
    "hence , we can solve each one - dimensional optimization problem in isolation  even with regularization added .",
    "we now derive closed - form solutions for @xmath110 and @xmath111 regularization .",
    "regularized solution .",
    "note that , even though @xmath116 is a nonlinear function , the straight line from a to b approximates that part of the curve well . ]    we can down - weigh frequently occurring words and context words and add a standard @xmath110 regularizer as follows : @xmath117 we will discuss @xmath111 regularizer @xmath118 later .",
    "let us also focus only on the logistic loss .",
    "dividing by @xmath119 we get @xmath120 setting the derivative of the objective to zero and simplifying , we get @xmath121 to be the solution of @xmath122 the line from @xmath123 to @xmath124 in figure  [ fig : l2reg ] approximates @xmath116 nicely in the region where the optimal @xmath125 lies . the equation of this line is given by @xmath126 solve for @xmath127 to get the optimal @xmath125 as @xmath128      similarly , it is easy to work out closed form expressions for @xmath121 for @xmath111 regularization . in this case",
    ", many of the optimal values go to zero : the larger the value of @xmath130 , more is the number of zeros .",
    "there are three cases to consider . for @xmath111 regularization , the value , @xmath131 plays a key role",
    ".    * case 1 . * @xmath132 . for this case",
    "it is easy to check that , at @xmath133 , the left hand side derivative of the objective in ( [ wcstar ] ) is non - positive , and the right hand side derivative is non - negative .",
    "hence @xmath134 is the optimal solution .",
    "* case 2 . * @xmath135 . for this case ,",
    "the right hand side derivative at @xmath133 is negative and so the optimum value is positive .",
    "the optimum is found by solving @xmath136 , which yields @xmath137    * case 3 . *",
    "for this case , the left hand side derivative at @xmath133 is positive and so the optimum value is negative .",
    "the optimum is found by solving @xmath139 , which yields @xmath140      adding regularization to count models has two benefits .",
    "first , while the non - regularized solution ( see table  [ tab : losses ] ; same as spmi ) is unusable because @xmath74 goes to extreme values when @xmath48 , regularized solutions are always well - defined .",
    "second , we expect regularization to help if overfitting is degrading performance with pmi models .",
    "future work is needed to empirically study and validate the usefulness of regularization in count models .      motivated by the analysis in section  [ quadratic ]",
    ", we develop a new and simple convex formulation for determining word vectors .",
    "similar to the skip - gram model , we phrase our model as the task of predicting a word conditioned on context .",
    "however , instead of learning representations for both words and their context words , we fix the context vectors to a one - hot representation .",
    "this makes our objective function _ convex_.",
    "another advantage is that this results in _ intelligible _ models  each vector entry refers to a weight given to a context word . also , to obtain compact representations , we instead use @xmath111 regularization on the word vectors instead of learning embeddings in lower - dimensional spaces like traditional predict models .",
    "let us describe the formulation in some more detail .",
    "let @xmath141 denote the dimension of the vector representation of context .",
    "depending on the context modeling employed , @xmath141 can be one to several times of @xmath6 .",
    "let @xmath142 denote the context representation .",
    "@xmath143 is a function of the context , @xmath144 , written as @xmath145 .",
    "the weight vectors @xmath12 are also points in @xmath146 .",
    "the score of a positive example is @xmath147 .",
    "remember that the input corpus @xmath19 is a sequence of words , @xmath148 .",
    "let the corresponding sequence of contexts be @xmath56 .",
    "we solve the following minimization problem .",
    "@xmath149 in the above , @xmath150 is a regularization constant dependent on @xmath3 , for example , make @xmath151 dependent on the number of context words to which word @xmath3 is attached . ] which can be tuned to balance sparsity of @xmath14 and performance ; @xmath152 includes the effect of positive as well as negative examples .",
    "other forms of regularization are also possible , for example a combination of @xmath111 and @xmath110 regularization ( generalized elastic net ) .    *",
    "* we can define context in several ways . here",
    "are a few possibilities :    1 .",
    "a simple way is to have a context @xmath153 , with each dimension corresponding to one word in the vocabulary @xmath154 .",
    "similar to the sgns model , we only assume _ individual _ interactions between words and context pairs , i.e. , each @xmath143 will exactly contain one non - zero entry .",
    "this way , we can rewrite the objective in the co - occurrence form and obtain all vectors in closed form by accumulating the statistics for each ( word , context word ) pair .",
    "we can do better than option 1 above and pair a word with a window of context words _ simultaneously _",
    ", i.e. , @xmath143 can now have multiple non - zero entries .",
    "a bag - of - words representation @xmath155 can be used to represent the context input using the context words .",
    "for example , we can set @xmath156 if @xmath4 occurs in the context window and zero otherwise , where @xmath157 is some weighting that is a function of how far @xmath4 is from @xmath3 .",
    "3 .   if we want to make use of word order , we can define @xmath158 context inputs where @xmath69 is the length of the context window and one block of @xmath6 inputs is used for each context word , and blocks concatenated in the proper order of occurrence in the window .",
    "4 .   depending on the purpose for which the word vectors are developed we can also use dependency - tree based context features  @xcite .",
    "again , we can use one - hot representations of these features .    *",
    "* except option 1 , aggregating at the individual @xmath18 level ( to convert the objective into the co - occurrence form  ( [ ellall ] ) ) as well as forming a closed form solution , is in general infeasible .",
    "this means we have to train our model using the objective in _ corpus format_. to do the training , we can choose from various optimization strategies .",
    "we can employ : ( a ) proper softmax over all words ; ( b ) hierarchical softmax  @xcite ; ( c ) noise - contrastive estimation ( nce )  @xcite ; or , ( d ) negative sampling like in sgns  @xcite .",
    "we now present examples for two of the four optimization strategies mentioned above . with softmax ,",
    "our objective is @xmath159 let us now consider optimization via negative sampling .",
    "let @xmath160 denote a randomly sampled set of negative examples .",
    "then @xmath161 where @xmath162 .",
    "[ obs : interp ] one of the advantages of the convex formulation described above is interpretability . if the @xmath163 component of some @xmath16 is large and positive , it can be directly translated to the role played by the @xmath163 context term of @xmath145 .",
    "this direct interpretability also means that domain knowledge may be easy to infuse into the formulation by specification of constraints and extra regularization on the weights .",
    "[ highorder ] the model developed in this section is in between conventional low - dimensional word embeddings ( no interpretability , allows for higher - order effects ) and distributional word representations ( full interpretability , no higher - order effects ) . here",
    ", the term  higher - order effects \" refers to the effects ( influences ) that occur during the joint optimization of context and word representations , e.g , two words can be made similar because they occur in contexts that are also similar .",
    "in this report , we showed how to explicitly solve the sgns objective for a broad range of loss functions .",
    "this step allowed us to connect shifted pmi models to sgns models under general loss functions .",
    "furthermore , we pointed out two important differences between the shifted pmi model and sgns model .",
    "first , in the sgns model , far fewer embeddings are used in practice , making the sgns model less prone to overfitting .",
    "second , in the pmi model , the context vectors are fixed ; hence , there is also no interaction between context vectors and word vectors .    finally , we proposed two extensions to existing models .",
    "first , we showed how we can incorporate regularization into pmi models to alleviate overfitting .",
    "second , we presented a new embedding model that not only has a convex objective , but also results in intelligible embeddings .",
    "future work is needed to empirically validate our proposed methods and extensions ."
  ],
  "abstract_text": [
    "<S> in a recent paper , levy and goldberg  @xcite pointed out an interesting connection between prediction - based word embedding models and count models based on pointwise mutual information . under certain conditions </S>",
    "<S> , they showed that both models end up optimizing equivalent objective functions . </S>",
    "<S> this paper explores this connection in more detail and lays out the factors leading to differences between these models . </S>",
    "<S> we find that the most relevant differences from an optimization perspective are ( i ) predict models work in a low dimensional space where embedding vectors can interact heavily ; ( ii ) since predict models have fewer parameters , they are less prone to overfitting .    motivated by the insight of our analysis , we show how count models can be regularized in a principled manner and provide closed - form solutions for l1 and l2 regularization . finally , we propose a new embedding model with a convex objective and the additional benefit of being intelligible .    </S>"
  ]
}
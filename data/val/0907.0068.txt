{
  "article_text": [
    "since the identification of the first multiply - imaged quasar @xcite , gravitational lensing has been used to probe the distribution of matter on many astrophysical scales , such as planets @xcite , individual galaxies ( e.g. * ? ? ?",
    "* ; * ? ? ?",
    "* ) , clusters ( e.g. * ? ? ?",
    "* ; * ? ? ?",
    "* ) , and large - scale structure ( e.g. * ? ? ?",
    "* ; * ? ? ?",
    "soon after the discovery of the first gravitational lens , it was realised that individual stars within a lensing galaxy would themselves act as lenses @xcite , and while the separation of the resulting images would be too small to be resolved , this microlensing can significantly magnify the background source .",
    "furthermore , given the density of compact objects within galaxies ( such as stars and possible dark matter ) , it was clear that many objects will influence the path of a beam of light as it traverses a galaxy , and beyond considering only a couple of lensing masses , the study of microlensing becomes analytically intractable and must be tackled numerically @xcite .",
    "the first observations of microlensing were made in 1989 @xcite , in 2237 + 0305 , a distant quasar ( z = 1.695 ) lensed into four images by a nearby spiral galaxy @xcite ; it has been photometrically monitored for two decades @xcite , revealing exquisite light curves for each of the images , clearly revealing the presence of gravitational microlensing .",
    "furthermore , the number of potentially microlensed quasars has steadily increased @xcite and hence an efficient means of theoretically understanding gravitational microlensing is required .",
    "this paper does not intend to derive the basic gravitational lensing equations , the reader is directed towards the excellent textbook by @xcite and thesis by @xcite . for microlensing calculations a normalized lens equation in the following form",
    "is used to map the ray from the observer , through the lens , and into the source : @xmath0 here , @xmath1 and @xmath2 are the location of a light ray in the lens and source plane respectively , @xmath3 and @xmath4 are the mass and co - ordinates of the _ _ i__th microlensing star . for the remaining terms in this expression",
    ", @xmath5 represents the local density of smooth matter in the galaxy , whereas @xmath6 , known as the shear , encapsulates the large scale asymmetry in the galaxy mass distribution . the surface density of compact objects ( assumed to be uniform ) ,",
    "is also used in modelling and simulations and is given by @xmath7 .",
    "the distance scale used in lensing is the einstein radius ( er ) , the radius of a ring produced by lensing of a source that is directly behind a point lens in a line from lens to observer .",
    "einstein radii are used to refer to the extent of observed images on the sky , and are derived from the mass of the lens and the distances to the lens and source .    ) , randomly distributed , with mass parameters @xmath7 = 0.39 , @xmath6 = 0.10 .",
    "the viewing window is 8 er in width .",
    "light shading corresponds to regions of high magnification , whereas darker regions represent demagnification.,width=219,height=219 ]      clearly , eqn  [ microlenseqn ] represents a mapping from a source location , @xmath2 , to a number of image ( or observed ) positions @xmath1 .",
    "however , it is apparent that this mapping is one - to - many , with a single source resulting in a number of images ( dependent upon the number of microlensing masses @xmath8 ) .",
    "however , reversing the mapping from the image plane back to the source is one - to - one and hence an `` inverse ray - tracing '' mechanism @xcite is typically employed in the study of microlensing . with this",
    ", the observer sends out a large number of rays into the image plane . for each ray",
    ", the deflection angle is calculated through eqn  [ microlenseqn ] and the ray is mapped into the source plane and collected on a grid .",
    "after all the rays are followed , the density of rays in the binned - up map of their source positions is directly proportional to the magnification of a source at that location ; fig  [ star_sims ] presents an example of such a map , where light regions correspond to a high density of collected rays ( i.e. strong magnification ) whereas dark regions correspond to the opposite situation .",
    "a deeper examination of eqn  [ microlenseqn ] reveals that the computationally intensive aspect of undertaking such ray tracing is the sum over the microlensing masses when calculating the deflection angles ; in typical simulations , there could be @xmath9 masses , with the tracing of @xmath10rays required to achieve sufficient density in the source plane . following the seminal work by",
    ", @xcite implemented an inverse ray - tracing approach which has become the `` industry standard '' , utilizing a tree - algorithm to ease the sum over the microlensing deflection angles .",
    "the advent of this approach has allowed the analysis of the magnification patterns of microlensed quasars @xcite , the structure of quasar broad line emission regions @xcite , chromatic effects in microlensing @xcite , the nature of dark matter in lensing galaxies @xcite , and the effect of source size on microlensing @xcite , among others .",
    "several quasar systems appear to possess anomalous flux ratios @xcite , meaning that the observed image brightnesses differ significantly from predictions drawn from gravitational lens models possessing mass distributions that are smooth on galactic scales .",
    "two key hypotheses have been put forward to explain these observations ; either these anomalous ratios are due to millilensing by @xmath11 clumps of dark matter in the halo of the lensing galaxy @xcite , or the quasars are microlensed by stars embedded in an overall smooth dark matter distribution @xcite .",
    "the former proposal is attractive as it may provide the first direct measurement of the missing substructure expected from galactic build - up in cold dark matter formation scenarios .",
    "the latter proposal is also important , potentially probing the fundamental nature of dark matter , as will be explained below .",
    "the original proposal by @xcite considered a smooth dark matter component which actually suppresses the image flux for long periods , leading to the apparently anomalous flux ratios .",
    "however , @xcite questioned this hypothesis , suggesting that the dark matter could in fact be composed of substellar compact objects , and that the existence of such a compact component could imprint itself on the resulting gravitational lens statistics . in studying the microlensing hypothesis ,",
    "a number of of numerical simulations were undertaken by @xcite using the backwards ray shooting approach , and figure [ mag_maps ] illustrates several examples of the parameters employed .",
    "figure [ mag_maps](a ) simulates a galaxy of a few thousand stars all of one solar mass ( m@xmath12 ) , with @xmath7 = 0.475 and @xmath6 = 0.425 .",
    "figures [ mag_maps](b ) and ( c ) use the same parameters but two different masses for @xmath7 : 2% of the mass is in stars of mass m@xmath12 , and the rest is contained in small compact objects , 0.01m@xmath12 in ( b ) and 0.001m@xmath12 objects in ( c ) .",
    "the final panel , figure [ mag_maps](d ) , presents the case of a smooth dark matter component ( @xmath7 = 0.0095 , @xmath5 = 0.4655 , @xmath6 = 0.425 ) ; as shown in @xcite , when the mass of the compact dark matter component is made smaller , the general scale of caustic structure is reduced , although large scale caustic features , due to the presence of the solar mass stars in the simulations , remain . in comparing the lower two panels in figure  [ mag_maps ] ,",
    "the large scale caustic structure is the same in the small compact and smooth dark matter cases , but the smaller scale structure is quite different ( in fact , it is non - existent in the smooth matter case ) .",
    "@xcite went on to show that , even though the large scale caustic structure is similar , the presence of the small scale caustics imprints itself on the statistical properties of the microlensing , with the lower panels possessing quite different magnification probability distributions .",
    "however , convolving these maps with a finite source radius washes out the small scale caustic structure , and for large enough sources the convolved compact mass and smooth mass magnification maps become statistically indistinguishable .",
    "this implies that there is a source scale size below which any compact matter component would appear as compact , and above which it would appear smooth , and hence observations of such systems at differing wavelengths ( corresponding to differing source sizes ) would probe the fundamental properties of dark matter .",
    "however , the simulations undertaken to date have been limited by the computational power and memory of available computers ; anomalous flux quasars are those that typically have been strongly magnified , requiring ray shooting through a large area to be statistically meaningful .",
    "furthermore , these limitations place constraints on the number of dark matter lenses that can be considered , effectively placing a limit on the mass scale that can be simulated - around 10 ^ 7^ objects of mass 0.001 m@xmath13 .",
    "hence , it was decided that a supercomputer implementation of the ray - shooting approach was required to tackle these physically interesting regimes .",
    "the numerical ray - shooting approach employs several approximations that have little impact on the accuracy but allow a significant improvement in performance .",
    "an examination of equation  [ microlenseqn ] reveals that a @xmath14 calculation is required for each lensing mass , the total deflection requiring a sum over all of these individual masses ; of course , the calculation of the distance , @xmath15 , involves the square roots , significantly adding to the computational load .",
    "the ray - tracing approach as adopted by @xcite reduces this load by use of a multipole expansion of the gravitational interaction for lensing masses far from the passage of the ray through the field of masses . for this , a cell tree is constructed by subdividing the distribution of lensing masses , with a constant regular subdivision until each cell holds a maximum of a single lensing mass .",
    "an opening angle criteria is then applied to distinguish between employing nearby masses as individual lenses , whereas more distant lens masses are grouped and a multipole expansion of their distribution is used to approximate their gravitational influences .",
    "the use of the cell - tree substantially improves simulation run - time but substantially increases the amount of data required to run a simulation .",
    "all data is held in computer memory , and consists of :    * a 2-d array for the pixel map . *",
    "an array of `` stars '' , each element containing the mass and location of a star in the galaxy . we will use the term `` stars '' to refer to all objects constituting the lens . * an array for the cell tree , each element containing information about a cell and its location within the tree .",
    "a typical simulation on a desktop computer may contain a pixel array of 2000@xmath162000 pixels and of order a million stars .",
    "this corresponds to 15 mb for the pixel array , 38 mb for the stars array , and 89 mb for the cell tree .",
    "the rays have no data existence ; the result of shooting a ray is a pixel hit which is added to that pixel s hit count . in the following ,",
    "we outline the basic operation of the standard microlensing approach and the changes required to employ it in a supercomputer environment , successfully handling the significant computational and storage requirements to push the application of microlensing into a new scientific regime ( see section  [ results ] ) .",
    "the starting point is to understand the operation of the standard ray shooting approach of @xcite ; this is expressed in the following pseudo - code    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ -- // * setup phase *    generate the stars , using a random distribution of locations and masses , within certain parameters    sort the stars by encoding indexes    generate the cell tree from the stars    sort the cell tree by encoding indexes    // * shooting phase *    loop    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ shoot a ray + increment the pixel hit array where necessary + move to a new location in the lens plane _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    until the whole lens plane has been covered    -- _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    the sorting operations of the stars and cell tree are required because during the shooting of the rays , searches are performed to determine the break between the employment of individual masses and expanded cells that are to be used for a particular ray , with the configuration changing as we consider rays traversing differing locations in the field of stars .    as noted in section  [ challenge ] , we wish to increase the number of stars under consideration . immediately",
    ", this significantly impacts the undertaking of microlensing simulations by desktop computers ( which are limited by virtual memory to @xmath17 million stars ) , increasing the storage required for the masses and locations , as well as the tree structure .",
    "furthermore , we additionally require an increase of the number of rays fired ; as can be seen in figure  [ mag_maps ] , the inclusion of small masses induces small scale structure in the magnification map , and to fully resolve this it is essential to increase the number of pixels covering the source , and the number of rays traced , to ensure we are not limited by counting statistics in the final map . in moving to a supercomputer environment , the following changes are required :    * adapt the algorithmic approach of @xcite . *",
    "parallelize the approach so it can exploit current multiprocessor computers ; ray tracing is inherently parallelizable , as the rays are usually independent of each other .",
    "there are typically billions of rays in a microlensing simulation , which can be distributed in some appropriate way across many processors and shot concurrently .",
    "* increase the number of stars that can be considered , into the billions .",
    "this is an increase of a hundred - fold , and it is unlikely the data can be held in ram with any reasonable architecture .",
    "other strategies will be required to store the massive amounts of data that will be used . *",
    "change to an object - oriented paradigm ; the approach of @xcite was originally implemented in fortran 77 with procedural code and global data .",
    "it was decided that the supercomputer implementation would employ c++ as some objects such as the stars and cells naturally lend themselves to implementation as c++ class objects .",
    "re - implementing in c++ will provide a sound basis for future work .    as the reimplementation in c++ is a design and development process we will describe it only briefly here .",
    "data elements , such as stars and cells , were identified and reimplemented as c++ class types .",
    "the fortran lensing algorithms were rewritten in c++ and combined with the c++ classes , producing a working program .",
    "the arrays that store the stars and cells were replaced with a c++ module that implements arrays as disk files ( described later ) , but with a similar interface .",
    "then the implementation was parallelized by sharing out the generation of stars , and the ray - shooting , to different processors ( this is described later ) .",
    "the rest of the paper focuses on the strategies used to parallelize our approach and increase the size of lenses available for microlensing research .      for the supercomputer implementation ,",
    "the rays that are shot need to be distributed across the available processors .",
    "there are many ways of parallelizing ray - tracing @xcite but little experience with this in gravitational lensing simulations .",
    "it does not matter which ray is executed on which processor , or in what order , as they are completely independent .",
    "we consider only static assignment of rays to processors , as dynamic assignment for load - balancing purposes is much more complicated and static assignment should be tried first .",
    "dynamic load balancing is a model where job tasks ( in this case rays ) are assigned to processors at run - time based on the load on each processor as the simulation proceeds - idle processors get the next jobs , much like a multiprocessor operating system running user programs .",
    "much more time and effort is required to implement dynamic load balancing compared to static load balancing .",
    "static load balancing means that when the program runs , some algorithm at startup determines which ray is assigned to which process , and that is fixed for the duration of the simulation .",
    "therefore we are looking for a mapping @xmath18 which maps rays to processors for that run . there is a value for _ assign _ which is optimal for a particular simulation , but it is unknown , so some heuristic is required .",
    "mapping an equal number of rays to each processor is sufficient if there are many more rays than processors and each ray takes the same time .",
    "the latter is probably not going to be the case since the stars in the lens may not be not distributed evenly , and rays close to a lot of mass will take longer to process .",
    "we have adopted an interlaced ray distribution model : take a 2-d element _ da _ of the lens plane and distribute the rays in that element across all processors , and do the same for all other elements .",
    "this means that every processor simulates lensing over the entire lens plane , but only some rays at each point of the lens plane .",
    "we hope that this will even out the load without the need for load balancing .    to implement parallelization",
    "we could employ either a multithreading or multiprocess model .",
    "multiprocessing means that several parallel processes are created by the computer operating system and they must access shared data outside the program , for example on disk . in multithreading there is only a single process with parallel threads of execution running inside it , and all global data in the program is automatically shared between threads .",
    "multithreading is usually more efficient but also more error - prone in development , so for a first implementation we opted for multiprocessing .    in the setup",
    "phase the generation of the stars can be parallelized by distributing the load evenly across all processes .",
    "the generation of the cells from the stars is a sequential process based on sophisticated location and tree indexing which can not be easily parallelized .",
    "the sorting steps could be parallelized but have not been ; this will be discussed in the next section .",
    "the shooting phase can be distributed across all processors .      pushing into the regime of @xmath19billion stars in a lens",
    "requires a stars array and cell tree of order 200 gb ; the following are possible ways of storing this data :    1 .   on a 64-bit computer with 200 gb ram",
    "it could be stored in memory as it previously has been .",
    "if simulations are to be run on many computers at the same time , and the computers collectively have enough memory , distribute the data in the memory of those machines .",
    "3 .   put the data in files on a shared disk , not in ram .",
    "option 1 is possible and requires no modification of the data storage , although clearly requires a particular computer architecture not available in typical ( i.e. beowulf ) clusters .",
    "option 2 is possible if enough machines are used with enough ram ; then data could be spread amongst them and fetched across the network .",
    "option 3 can be used anywhere there is sufficient disk space , even on desktop computers . in our new implementation",
    "all three options were combined , as huge amounts of disk space are now common ( more than large ram machines ) , the simulation data is placed on disk , but partially cached in memory so that all the available ram is used .",
    "the stars array and cell tree were each replaced with a binary file , but still accessed like arrays , so that any object at any part of the file could be requested with an index .",
    "naturally this means that file i / o will dramatically slow down the simulation , although it is envisaged that caching strategies and parallelizing the ray - shooting may compensate for this . since shared files are trivial on modern networks , multiple processes can read data from a single set of shared files .",
    "when starting a simulation , several processes can create the files and the others wait until they are ready , or , each process can generate its own version of the files , which is very wasteful of disk space but means some processes may be able to start earlier .",
    "the sorting of stars and cells is inherent in the algorithms in the set - up phase that code the stars and cells for indexing and searching ; it can not be avoided without significant redesign of the cell tree usage . in the original implementation where data is in ram , a heap - sort algorithm",
    "is used @xcite .",
    "a heap sort swaps elements from the end of an array to the beginning , gradually building a sorted array in place of the original values .",
    "when the stars and cell tree were placed in files the sorting steps became extremely slow - as expected .",
    "a run of one billion stars would take an intolerably long time and be unworkable .",
    "in fact , when the data was initially placed in files and a simulation of one billion attempted , the sort was still running after two days and we gave up on it .",
    "the best way to process files is sequentially , and best way to sort files is with a merge sort @xcite .",
    "we implemented a folding merge - sort algorithm for the sorting steps .",
    "in the original implementation the stars and cell tree were sorted after they were generated ; a folding merge - sort does the sorting _ while _ the data is generated .",
    "the algorithm is as follows ; as stars are generated they are placed in a memory cache .",
    "when the cache is full , it is sorted using a heap - sort and written to the stars file .",
    "this is the first instance of the file .",
    "further stars are generated , and placed in the cache .",
    "when the cache is full it is heap - sorted and then merge - sorted into the file , producing a new instance of the file .",
    "the process continues until all stars are in the file , and the file is always sorted .",
    "the same process is done for the cell tree .",
    "this mechanism substantially improved the run - time of the sorting phases .",
    "there are however disadvantages :    * the space required for a merge - sort is double the data size , due to the fact that a new version of the file is being created as the existing one is being read * as the file gets bigger the merge gets slower    nevertheless this method has provided us with a usable implementation .      the memory cache used for merge - sorting is only required during the setup phase ; after that the memory is available for shooting .",
    "as rays are shot , a per - ray stars and cell configuration is used to calculate the deflection , and analysis of the usage patterns in the sequential version showed that around 66% of stars and cells used for one ray are used again for the next , as the rays are close together in space ( assuming a large number of them ) .    based on this information we implemented a shooting memory cache that allows re - use of stars and cells , from one ray to the next .",
    "unfortunately this scheme interacts with the interlaced ray distribution scheme , in that the scheme means each process is executing rays that are slightly further apart on the lens plane than they normally would be .",
    "this degrades the performance of the shooting cache slightly .",
    "the amount of memory needed for the stars / cell configuration for a ray is not much ( a few mb ) , leaving plenty of ram free .",
    "this ram could be used as a more general memory cache for storing some stars and cells that are otherwise on disk , making them faster to access .",
    "implementing a general cache of file data requires an analysis of the usage patterns of the stars and cell data files , and at a first - order approximation there are two patterns operating : depth first traversals of the cell tree and binary searches in both the stars and cell arrays .",
    "a depth first traversal will follow a single branch of the cell tree from the root down to a `` leaf '' , traversing the file in a sequential fashion ; a binary search will jump around from one end of the file to the other .",
    "these conflict , and make it difficult to generate heuristics for anticipating what portions of the files to load into memory , so we have chosen a simple scheme to begin with : cache the first levels of the cell tree and the first records of the stars file , as many as possible . the root of the cell tree is heavily accessed and caching it proved useful .",
    "we discuss the performance of our new method and then give some preliminary results of its application to microlensing .",
    "the following performance statistics were obtained from simulations using 10 ^ 7^ stars with a pixel map of 2000x2000 .",
    "the number of rays to shoot are based on these and other parameters , in this case it is 1.3x10 ^ 9^. the performance depends greatly on the amount of ram available for caching . for the test runs reported here , we fixed the size of the cache per parallel process to be about 1/8th the size of the stars data , because this is the ratio for a simulation of 10 ^ 9^ stars run on a common 32-bit desktop machine , something we may consider as a `` standard '' for comparisons .",
    ".run times ( hours ) for different versions of the new approach , single process [ cols=\"<,^,^,^,^ \" , ]     table [ program times ] shows run - times for different versions of the new tool , beginning with the original fortran ( v1 ) and progressing through some c++ versions to the final version ( v6 ) .",
    "all times are in hours .",
    "the first c++ version that was generated ( v3 , v4 ) was a straight copy of the fortran ( v1 , v2 ) .",
    "the run - times for both languages are similar . of note",
    "is the fact that both run 2.5 - 2.8 times faster when full compiler optimizations are used , due to the algorithms being computationally intensive and these versions having no i / o operations .",
    "the c++ is slightly computationally faster when unoptimized , the fortran slightly faster when optimized , but they are close , so we have not lost much in the move to c++ . the same compilers ( gnu c++ and gnu fortran 95 from fsf ) were used for both languages , but since there are overheads in c++ due to the use of object - oriented classes , it is not surprising that c++ is slightly slower in the best - case scenario .",
    "we have not investigated the relative performance when both are unoptimized .",
    "different compilers with different optimization strategies can always produce a faster ( or slower ) program , so our comparisons do not constitute a formal benchmarch , merely the performance for commonly - used compilers ( i.e gnu ) .",
    "further investigation can be made in the future to determine the compiler that is best suited for this program .",
    "after taking the arrays out of memory and placing them on disk the performance , as expected , degrades considerably ( v5 ) .",
    "the run is 10 times slower .",
    "although the stars and cells are generated in a sequential fashion , they are then heap - sorted , which is very inefficient inside files . using the folding merge - sort ( v6 ) avoids inefficiencies because it scans and merges file sections sequentially . in v5",
    "when shooting begins there is no file caching ; star data and cell data is loaded from all over the files , and the i / o and spread - out file access makes shooting very slow . in v6 the shooting cache and file cache are implemented and they improve performance time by reducing the access to the star and cell data files .",
    "the techniques used to improve performance in the files version ( v6 ) bring the run - time down so that is is comparable to the unoptimized in - memory version - a good result .",
    "versions 4 and 6 are able to run in parallel mode , dividing work between processes . version 4 maintains data in memory and is can be used when the number of stars is up to 10 ^ 7^ ; version 6 uses files and must be used for simulations of more than 10 ^ 7^ stars .",
    "figure [ speedup ] shows the speedup obtained for these versions using the new method .",
    "version 4 ( solid line ) uses parallelism during ray - shooting .",
    "it achieves a perfect speedup during ray shooting , showing that all the theoretical parallelism that is available can be extracted in practice by the right implementation and in the right circumstances : i.e. each ray is completely independent of the others , there are far many more rays than processes , our simple ray distribution scheme is achieving a good load balance , and the data is in memory and can be accessed concurrently .    using our new implementation we can push down the mass size of the compact masses in bi - modal simulations , while at the same time increasing their number .",
    "figure [ mag_maps_big ] shows simulations of quasar microlensing models that go down to 0.000025 m@xmath12 for small compact mass objects ; this is about 10 times earth mass .",
    "future simulations will go to smaller masses and possibly up to 3 billion stars .",
    "of most interest is what happens to the magnification map as the masses become smaller .",
    "figure [ mag_maps_big ] begins at case ( c ) of figure [ mag_maps ] and reduces the mass to 0.000025 m@xmath12 , increasing the number of stars to over a billion . with these small masses",
    "the large - scale caustics are becoming clearer and the fine - structure in - between the caustics is becoming smoother .",
    "initial analysis indicates that as the small masses become smaller and more numerous the magnification distribution will tend to that of the smooth - matter case ( d ) , but the size of the source will be important .",
    "results of more complete investigations will be reported in forthcoming papers .",
    "our new approach is of interest in itself , and can be studied as an instance of a large , parallel , computationally intensive implementation . although our current aims excluded modifying the physics code , that can still be done at some later time",
    ".      the following could be worthwhile scientific research projects based around our implementation :    * optimum distribution of rays to processors .",
    "* do rays that are close to clumps of matter really take longer to process than those that are nt ? and by how much ? how close to optimal is our simple static load - distribution scheme ?    * dynamic load balancing*. instead of fixing the allocation of rays to processors , the allocation could be varied at run - time , so that rays are moved from heavily loaded processors to lightly loaded processors .",
    "we could implement microtasking where each ray could be a task , with a scheduler pulling jobs off a run - queue and assigning them to processors for execution .",
    "we have not investigated whether the load on processors varies enough to warrant the overhead of dynamic load - balancing ; our impressions are that it does not , for very large runs .",
    "* distributed memory . *",
    "a simulation of billions of stars generates hundreds of gigabytes of data , and this data has to go somewhere . if there are enough processes available with enough total memory , the data can be distributed amongst them and fetched across a network .",
    "* `` pre - set '' stars .",
    "* it would useful to generate stars and cells that can be saved and re - used , thus skipping the initialization phase altogether .",
    "a standard for the storing of lens / cell data could be developed by the lensing community , so that stars and cells can be stored and then simulated , modified , and re - used as necessary .",
    "* multithreaded version . *",
    "the new implementation has been built with this in mind .",
    "there is little data specific to a process that would have to be made specific to a thread ; the significant shared data is external and can be accessed just the same by multiple threads or processes . therefore a multithreaded version could be generated .",
    "* use a commercial database for cells and stars . *",
    "the assumption is that a commercial database will be more efficient at general file caching and perhaps can be tuned to the usage patterns of our simulations .    *",
    "file compression . * compressing the stars and cell files on the fly will not make a simulation run faster , in fact it will run slower , but the data compresses to about 63% of its original size . this would be useful if we run short of disk space or go to bigger simulations , but particularly it could be useful for a distributed - memory version .      beyond computer engineering ,",
    "there are the scientific aspects of simulating microlensing on computers , for example with the use of a cell tree .",
    "the cell tree is one reason why the original method executed so speedily , but it is also the reason for the huge amount of data generated . instead of using a tree",
    "it may be possible to use other more recent models such as adaptive meshes that are used in n - body simulations @xcite .",
    "there are also enhancements that can be made that add more physics to the implementation , such as implementing moving sources and moving stars .",
    "it is clear that both the source and the lens and the objects that make up the lens , if it is complex , are moving ; and the gravitational potential and light curves are changing over time . the ability to simulate time - changing lensing events would be a significant advance over all current approaches .",
    "we have generated a new version of a ray - shooting microlensing simulation tool that can be used to run huge simulations and continue research in quasar dark matter microlensing .",
    "we have discovered that the ray - shooting is easily parallelizable and simple load - balancing works well ; parallelizing the stars and cell generation is not so easy , and memory caching could be improved with more research into the patterns of how the data is accessed .",
    "our new approach will now be used to continue research in microlensing ; based on its performance and usefulness we can determine what modifications to pursue for the future .",
    "we thank the anonymous reviewer for comments that improved the quality of this paper .",
    "eigenbrod , a. , courbin , f. , dye , s. , meylan , g. , sluse , d. , vuissoz , c. , magain , p. , 2006 .",
    "cosmograil : the cosmological monitoring of gravitational lenses .",
    "ii . sdss j0924 + 0219 : the redshift of the lensing galaxy , the quasar spectral variability and the einstein rings .",
    "aa 451 , 747 - 757 .",
    "keeton , c. r. , burles , s. , schechter , p. l. , wambsganss , j. , 2006 .",
    "differential microlensing of the continuum and broad emission lines in sdss j0924 + 0219 , the most anomalous lensed quasar .",
    "apj , 639 , 1 - 6 .",
    "sand , d.  j. , treu , t. , ellis , r.  s. , smith , g.  p. , & kneib , j .-",
    "p . ,  2008 .",
    "separating baryons and dark matter in cluster cores : a full two - dimensional lensing and dynamic analysis of abell 383 and ms 2137 - 23 .",
    "apj 674 , 711 - 727 .",
    "verd , i. , gimnez , d. & torres , j. c. , 1996 .",
    "ray tracing for natural scenes in parallel processors , in : liddell , h. m. , colbrook , a. , hertzberger , b. , sloot , p. ( eds . ) , proc .",
    "conf . high - performance computing and networking .",
    "springer , italy , pp .",
    "297 - 305 ."
  ],
  "abstract_text": [
    "<S> gravitational lensing allows us to probe the structure of matter on a broad range of astronomical scales , and as light from a distant source traverses an intervening galaxy , compact matter such as planets , stars , and black holes act as individual lenses . the magnification from such microlensing results in rapid brightness fluctuations which reveal not only the properties of the lensing masses , but also the surface brightness distribution in the source </S>",
    "<S> however , while the combination of deflections due to individual stars is linear , the resulting magnifications are highly non - linear , leading to significant computational challenges which currently limit the range of problems which can be tackled . </S>",
    "<S> this paper presents a new and novel implementation of a numerical approach to gravitational microlensing , increasing the scale of the problems that can be tackled by more than two orders of magnitude , opening up a new regime of astrophysically interesting problems .    gravitational lensing  microlensing  </S>",
    "<S> dark matter  quasars  </S>",
    "<S> ray tracing  supercomputing    _ pacs : _ </S>",
    "<S> 82.20.wt , 95.75.de , 98.54.-h , 98.62.sb . </S>"
  ]
}
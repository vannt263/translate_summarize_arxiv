{
  "article_text": [
    "leader election is one of the fundamental problems in distributed computing , first stated in @xcite .",
    "every node of a network has a boolean variable initialized to 0 and , after the election , exactly one node , called the _ leader _ , should change this value to 1 .",
    "all other nodes should know which node is the leader .",
    "if nodes of the network have distinct labels , then leader election is always possible ( e.g. , the node with the largest label can become a leader ) .",
    "however , nodes may refrain from revealing their identities , e.g. , for security or privacy reasons .",
    "hence it is desirable to have leader election algorithms that do not rely on node identities but exploit asymmetries of the network due to its topology and to port labelings . with unlabeled nodes ,",
    "leader election is impossible in symmetric networks  @xcite .",
    "a network is modeled as an undirected connected graph .",
    "we assume that nodes are unlabeled , but ports at each node have arbitrary fixed labelings @xmath4 @xmath5 , where @xmath6 is the degree of the node . throughout the paper",
    ", we will use the term `` graph '' to mean a graph with the above properties .",
    "we do not assume any coherence between port labelings at various nodes .",
    "nodes can read the port numbers . when sending a message through port @xmath7",
    ", a node adds this information to the message , and when receiving a message through port @xmath8 , a node is aware that this message came through this port .",
    "the topology of the network is unknown to the nodes , but depending on the specification of the problem , nodes may know some numerical parameters of the network , such as the number @xmath2 of nodes ( size ) , and/or the diameter @xmath1 .",
    "we consider two versions of the leader election problem ( le ) : _ strong le _ and _ weak le_. in strong le one leader has to be elected whenever this is possible , while all nodes must terminate declaring that leader election is impossible otherwise .",
    "weak le differs from strong le in that no requirement on the behavior of nodes is imposed , if leader election is impossible . in both cases , upon election of the leader , every non - leader is required to know a path ( coded as a sequence of ports ) from it to the leader .    in this paper",
    "we investigate the time of leader election in the extensively studied @xmath0 model @xcite . in this model ,",
    "communication proceeds in synchronous + rounds and all nodes start simultaneously . in each round",
    "each node can exchange arbitrary messages with all its neighbors and perform arbitrary local computations .",
    "the time of completing a task is the number of rounds it takes . in particular ,",
    "the time of weak le is the number of rounds required by the last node to elect a leader if leader election is possible , and the time of strong le is the number of rounds required by the last node to elect a leader if this is possible , and to terminate by declaring that this is impossible , otherwise .",
    "it should be observed that the synchronous process of the @xmath0 model can be simulated in an asynchronous network , by defining for each node separately its asynchronous round @xmath9 in which it performs local computations , then sends messages stamped @xmath9 to all neighbors , and waits until getting messages stamped @xmath9 from all neighbors . ( to make this work , every node is required to send a message with all consecutive stamps , until termination , possibly empty messages for some stamps . )",
    "all our results concerning time can be translated for asynchronous networks by replacing `` time of completing a task '' by `` the maximum number of asynchronous rounds to complete it , taken over all nodes '' .",
    "if nodes have distinct labels , then time @xmath1 in the @xmath0 model is enough to solve any problem solvable on a given network , as after this time all nodes have an exact copy of the network .",
    "by contrast , in our scenario of unlabeled nodes , time @xmath1 is often not enough , for example to elect a leader , even if this task is feasible .",
    "this is due to the fact that after time @xmath10 each node learns only all paths of length @xmath10 originating at it and coded as sequences of port numbers .",
    "this is far less information than having a picture of the radius @xmath10 neighborhood .",
    "a node @xmath11 may not know if two paths originating at it have the same other endpoint or not .",
    "it turns out that these ambiguities may force time much larger than @xmath1 to accomplish leader election .",
    "we show that the time of leader election depends on three parameters of the network : its diameter @xmath1 , its size @xmath2 , and its _ level of symmetry _ @xmath3 .",
    "the latter parameter is defined for any network ( see section 2 for the formal definition ) and , if leader election is feasible , this is the smallest depth at which some node has a unique view of the network .",
    "the view at depth @xmath10 from a node ( formally defined in section 2 ) is the tree of all paths of length @xmath10 originating at this node , coded as sequences of port numbers on these paths .",
    "it is the maximal information a node can gain after @xmath10 rounds of communication in the @xmath0 model .",
    "it turns out that the time of leader election also crucially depends on the _ knowledge _ of parameters @xmath2 and/or @xmath1 by the nodes .",
    "on the other hand , it does not depend on _ knowing _ @xmath3 , although it often depends on this parameter as well .",
    "optimal time of weak le is shown to be @xmath12 , if either @xmath1 or @xmath2 is known to the nodes .",
    "more precisely , we give two algorithms , one working for the class of networks of given diameter @xmath1 and the other for the class of networks of given size @xmath2 , that elect a leader in time @xmath13 on networks with diameter @xmath1 and level of symmetry @xmath3 , whenever election is possible .",
    "moreover , we prove that this complexity can not be improved .",
    "we show , for any values @xmath1 and @xmath3 , a network of diameter @xmath1 and level of symmetry @xmath3 on which leader election is possible but takes time at least @xmath14 , even when @xmath1 , @xmath2 and @xmath3 are known .",
    "if neither @xmath1 nor @xmath2 is known , then even weak le is impossible @xcite .",
    "cccccc & & & & & + & &    & + & & &    & & & & + & & & & +   +    for strong le , we show that knowing only @xmath1 is insufficient to perform it .",
    "then we prove that , if only @xmath2 is known , then optimal time is @xmath15 .",
    "we give an algorithm working for the class of networks of given size @xmath2 , which performs strong le in time @xmath16 and we show , for arbitrarily large @xmath2 , a network @xmath17 of size @xmath2 , diameter @xmath18 and level of symmetry 0 , such that any algorithm performing correctly strong le on all networks of size @xmath2 must take time @xmath19 on @xmath17 .",
    "finally , if both @xmath2 and @xmath1 are known , then optimal time is @xmath12 .",
    "here we give an algorithm , working for the class of networks of given size @xmath2 and given diameter @xmath1 which performs strong le in time @xmath13 on networks with level of symmetry @xmath3 . in this case",
    "the matching lower bound carries over from our result for weak le .",
    "table  [ summary ] gives a summary of our results .",
    "the main difficulty of this study is to prove lower bounds on the time of leader election , showing that the complexity of the proposed algorithms can not be improved for any of the considered scenarios .",
    "the comparison of our results for various scenarios shows two exponential gaps .",
    "the first is between the time of strong and weak le .",
    "when only the size @xmath2 is known , strong le takes time @xmath19 on some graphs of logarithmic diameter and level of symmetry 0 , while weak le is accomplished in time @xmath18 for such graphs .",
    "the second exponential gap is for the time of strong le , depending on the knowledge provided .",
    "while knowledge of the diameter alone does not help to accomplish strong le , when this knowledge is added to the knowledge of the size , it may exponentially decrease the time of strong le .",
    "indeed , strong le with the knowledge of @xmath2 alone takes time @xmath19 on some graphs of logarithmic diameter and level of symmetry 0 , while strong le with the knowledge of @xmath2 and @xmath1 is accomplished in time @xmath18 , for such graphs .",
    "leader election was first studied for rings , under the assumption that all labels are distinct . a synchronous algorithm , based on comparisons of labels , and using @xmath20 messages was given in @xcite .",
    "it was proved in @xcite that this complexity is optimal for comparison - based algorithms . on the other hand",
    ", the authors showed an algorithm using a linear number of messages but requiring very large running time .",
    "an asynchronous algorithm using @xmath20 messages was given , e.g. , in @xcite and the optimality of this message complexity was shown in @xcite .",
    "deterministic leader election in radio networks has been studied , e.g. , in @xcite and randomized leader election , e.g. , in @xcite .",
    "many authors @xcite studied various computing problems in anonymous networks .",
    "in particular , @xcite characterize networks in which leader election can be achieved when nodes are anonymous . in @xcite",
    "the authors study the problem of leader election in general networks , under the assumption that labels are not unique .",
    "they characterize networks in which this can be done and give an algorithm which performs election when it is feasible .",
    "they assume that the number of nodes of the network is known to all nodes .",
    "in @xcite the authors study feasibility and message complexity of sorting and leader election in rings with nonunique labels , while in @xcite the authors provide algorithms for the generalized leader election problem in rings with arbitrary labels , unknown ( and arbitrary ) size of the ring and for both synchronous and asynchronous communication . in @xcite the leader election problem is approached in a model based on mobile agents . characterizations of feasible instances for leader election and naming problems have been provided in  @xcite .",
    "memory needed for leader election in unlabeled networks has been studied in @xcite .",
    "to the best of our knowledge , the problem of time of leader election in arbitrary unlabeled networks has never been studied before .",
    "we say that leader election is _ possible _ for a given graph , or that this graph is a _ solvable graph _ , if there exists an algorithm which performs le for this graph .",
    "we consider two versions of the leader election task for a class @xmath21 of graphs : + @xmath22 weak le .",
    "let @xmath23 be any graph in class @xmath21 .",
    "if leader election is possible for the graph @xmath23 , then it is accomplished .",
    "+ @xmath22 strong le .",
    "let @xmath23 be any graph in class @xmath21 .",
    "if leader election is possible for the graph @xmath23 , then it is accomplished .",
    "otherwise , all nodes eventually declare that the graph is not solvable and stop .",
    "hence weak le differs from strong le in that , in the case of impossibility of leader election , no restriction on the behavior of nodes is imposed : they can , e.g. , elect different leaders , or no leader at all , or the algorithm may never stop .",
    "we will use the following notion from @xcite .",
    "let @xmath23 be a graph and @xmath11 a node of @xmath23 .    the _ view",
    "_ from @xmath11 is the infinite rooted tree @xmath24 with labeled ports , defined recursively as follows .",
    "@xmath24 has the root @xmath25 corresponding to @xmath11 . for every node @xmath26 , @xmath27 , adjacent to @xmath11 , there is a neighbor @xmath28 in @xmath24 such that the port number at @xmath11 corresponding to edge @xmath29 is the same as the port number at @xmath25 corresponding to edge @xmath30 , and the port number at @xmath26 corresponding to edge @xmath29 is the same as the port number at @xmath28 corresponding to edge @xmath30 .",
    "node @xmath28 , for @xmath27 , is now the root of the view from @xmath26 .",
    "see fig .",
    "[ fig.view ] for an example of a view .",
    "the following proposition directly follows from @xcite and expresses the feasibility of leader election in terms of views .",
    "[ possible ] let @xmath23 be a graph .",
    "the following conditions are equivalent : + 1 .",
    "leader election is possible in @xmath23 ; + 2 .",
    "views of all nodes",
    "are different ; + 3 .",
    "there exists a node with a unique view .",
    "in particular , the impossibility of deterministic leader election , when there are two nodes with identical views , is implied by proposition 4 from  @xcite , while corollary  1 from  @xcite implies that one node has a unique view if and only if all views of the nodes are different .    by @xmath31",
    "we denote the view @xmath24 truncated to depth @xmath10 .",
    "we call it the view of @xmath11 at depth @xmath10 .",
    "in particular , @xmath32 consists of the node @xmath11 , together with its degree .",
    "the following proposition was proved in @xcite .",
    "[ trunc ] for a @xmath2-node graph , @xmath33 , if and only if @xmath34 .    for graphs of sublinear diameter",
    "a better bound than that of proposition  [ trunc ] has been proved by hendrickx  @xcite after the publication of the conference version of this paper ; for an @xmath2-node graph of diameter @xmath6 , @xmath33 , if and only if @xmath35 , where @xmath36 .",
    "define the following equivalence relations on the set of nodes of a graph .",
    "@xmath37 if and only if @xmath33 , and @xmath38 if and only if @xmath39 .",
    "let @xmath40 be the partition of all nodes into equivalence classes of @xmath41 , and @xmath42 the corresponding partition for @xmath43 .",
    "it was proved in @xcite ( corollary  1 ) that all equivalence classes in @xmath40 are of equal size @xmath44 . in view of proposition [ trunc",
    "] this is also the case for @xmath42 , where @xmath45 . on the other hand , for smaller @xmath10 , equivalence classes in @xmath42 may be of different sizes .",
    "every equivalence class in @xmath42 is a union of some equivalence classes in @xmath46 , for @xmath47 .",
    "the following result was proved in @xcite ( lemma  1 ) .",
    "it says that if the sequence of partitions @xmath42 stops changing at some point , it will never change again .    [ stop ] if @xmath48 , then @xmath49 .    for a set @xmath50 ,",
    "let @xmath51 denote its size . by definition of partitions @xmath42",
    ", if @xmath52 then @xmath48 .",
    "hence in order to see when partitions stabilize , it is enough to check when their sizes stabilize .",
    "this allows us to modify proposition  [ stop ] and obtain proposition  [ stopbysize ] below , which we will use in some of our algorithms .",
    "[ stopbysize ] if @xmath52 , then @xmath49 .    for any graph @xmath23",
    "we define its _ level of symmetry _ @xmath3 as the smallest integer @xmath10 , for which there exists a node @xmath11 satisfying the condition @xmath53 .    by proposition",
    "[ possible ] , for solvable graphs , the level of symmetry is the smallest @xmath10 for which there is a node with a unique view at depth @xmath10 . in general",
    ", the level of symmetry is the smallest integer @xmath10 for which some equivalence class in @xmath42 has size @xmath44 .",
    "define @xmath54 to be the smallest integer @xmath10 for which @xmath48 .",
    "we have    [ lambda ] @xmath55 .",
    "it is enough to show that if @xmath56 , for some nodes @xmath57 and @xmath58 , then @xmath59 .",
    "let @xmath11 be a node for which @xmath60 .",
    "consider nodes @xmath57 and @xmath58 for which @xmath56 .",
    "let @xmath7 be a shortest path ( coded as a sequence of ports ) from @xmath57 to @xmath11 .",
    "let @xmath61 be the node at the end of the same path @xmath7 starting at @xmath58 .",
    "@xmath62 is included in @xmath63 and @xmath64 is included in @xmath65 .",
    "it follows that @xmath66 and hence @xmath67 .",
    "suppose for contradiction that @xmath68 .",
    "let @xmath8 and @xmath69 be paths in views @xmath70 and @xmath71 witnessing to their difference .",
    "let @xmath72 be the reverse of path @xmath7 .",
    "then the concatenations @xmath73 and @xmath74 are paths witnessing to the difference of @xmath24 and @xmath75 , which gives a contradiction",
    ".    we fix a canonical linear order on all finite rooted trees with unlabeled nodes and labeled ports , e.g. , as the lexicographic order of dfs traversals of these trees , starting from the root and exploring children of a node in increasing order of ports . for any subset of this class",
    ", the term `` smallest '' refers to this order .",
    "since views at a depth @xmath10 are such trees , we will elect as leader a node whose view at some depth is the smallest in some class of views .",
    "the difficulty is to establish when views at some depth are already unique for a solvable graph , and to decide fast if the graph is solvable , in the case of strong le .",
    "all our algorithms are written for a node @xmath76 of the graph .",
    "in this section we show that the optimal time of weak leader election is @xmath12 , if either the diameter @xmath1 of the graph or its size @xmath2 is known to the nodes .",
    "we first give two algorithms , one working for the class of graphs of given diameter @xmath1 and the other for the class of graphs of given size @xmath2 , that elect a leader in time @xmath13 on graphs with diameter @xmath1 and level of symmetry @xmath3 , whenever election is possible .",
    "our algorithms use the subroutine @xmath77 to exchange views at different depths with their neighbors .",
    "this subroutine is detailed in algorithm  [ alg : com ] .",
    "* let * @xmath78 be the view of node @xmath76 at depth @xmath9 + * send * @xmath78 to all neighbors ; + * foreach * neighbor @xmath11 of @xmath76 + @xmath79 from @xmath11    algorithm  [ alg : knowndiameter ] works for the class of graphs of given diameter @xmath1 .    * for * @xmath80 * to * @xmath81 * do * @xmath82 + compute @xmath83 ; @xmath84 + * repeat * + @xmath85 ; @xmath86 ; compute @xmath87 + * until * @xmath88 + @xmath89 the set of nodes @xmath11 in @xmath90 having the smallest @xmath91 + elect as leader the node in @xmath92 having the lexicographically smallest path from @xmath76    [ weak - known - diam ] algorithm  [ alg : knowndiameter ] - wle - known - diameter(@xmath1 ) - elects a leader in every solvable graph of diameter @xmath1 , in time @xmath13 , where @xmath3 is the level of symmetry of the graph .",
    "all nodes of the graph find @xmath83 ( i.e. , the number of different node degrees in the graph ) after @xmath1 rounds , and then they find sizes of consecutive partitions @xmath93 , for @xmath94 ( by counting the number of distinct views at depth @xmath95 ) . at this time",
    "the exit condition of the `` repeat '' loop is satisfied .",
    "all nodes stop simultaneously and elect a leader . since the graph is solvable , by the definition of @xmath54 and in view of propositions [ possible ] and [ stopbysize ] , all elements of the partition @xmath96 are singletons ( recall that equivalence classes in @xmath40 , and thus in @xmath96 , are of equal size @xmath44 , and @xmath97 in solvable graphs ) .",
    "hence all nodes in @xmath92 correspond to the same node in the graph and consequently all nodes elect as leader the same node .",
    "all nodes stop in round @xmath98 , which is at most @xmath99 by proposition [ lambda ] .",
    "algorithm  [ alg : knownsize ] works for the class of graphs of given size @xmath2 .",
    "@xmath80 ; @xmath100 ; + * while * @xmath101 * do * + @xmath82 ; @xmath102 + @xmath84 * to * @xmath9 * do * + @xmath103 the set of nodes in @xmath104 at distance at most @xmath95 from @xmath76 ( including @xmath76 ) + @xmath105 the number of nodes in @xmath106 with distinct views at depth @xmath107 + @xmath108 max @xmath109 + compute @xmath54 and @xmath1 + @xmath89 the set of nodes @xmath11 in @xmath104 having the smallest @xmath110 + elect as leader the node in @xmath92 having the lexicographically smallest path from @xmath76 + * while * @xmath111 * do * + @xmath82 ; @xmath102 //allow late nodes to terminate their protocol !    [ weak - known - size ] algorithm  [ alg : knownsize ] - wle - known - size@xmath112 - elects a leader in every solvable graph of size @xmath2 , in time @xmath13 , where @xmath3 is the level of symmetry of the graph .    consider a node @xmath76 .",
    "after @xmath113 rounds , node @xmath76 gets a view @xmath104 that contains views @xmath114 , for all nodes @xmath11 . since the graph is solvable , all views @xmath114",
    "are different , and hence @xmath76 exits the first `` while '' loop after seeing @xmath2 different views at this depth . at this point @xmath76",
    "can reconstruct an isomorphic copy of the graph and hence compute @xmath1 and @xmath54 .",
    "the election rule is as in algorithm  [ alg : knowndiameter ] .",
    "the second `` while '' loop guarantees that every node @xmath11 will be able to get @xmath115 and hence will exit the first while loop and elect the same leader .    in order to show that algorithm  [ alg : knowndiameter ] is optimal for the class of graphs of diameter @xmath1 and algorithm",
    "[ alg : knownsize ] is optimal for the class of graphs of size @xmath2 we prove the following theorem .",
    "it shows a stronger property : both above algorithms have optimal complexity even among weak le algorithms working only when all three parameters @xmath2 , @xmath1 and @xmath3 are known .",
    "[ lower - weak ] for any @xmath116 and any @xmath117 , with @xmath118 , there exists an integer @xmath2 and a solvable graph @xmath23 of size @xmath2 , diameter @xmath1 and level of symmetry @xmath3 , such that every algorithm for weak le working for the class of graphs of size @xmath2 , diameter @xmath1 and level of symmetry @xmath3 takes time at least @xmath14 on the graph @xmath23 and @xmath119 , because the latter condition , for solvable graphs , means that there is a node of a unique degree , contradicting the requirement @xmath120 , i.e. , having a clique of at least 2 nodes . ]    before proving theorem  [ lower - weak ] we present a construction of a family @xmath121 of complete graphs ( cliques ) that will be used in the proof of our lower bound .",
    "the construction consists in assigning port numbers . in order to facilitate subsequent analysis",
    "we also assign labels to nodes of the constructed cliques .",
    "we will use induction to describe the construction of @xmath121 .",
    "cc ( a ) &     +   +   + ( b ) & +   +   + ( c ) & +   +   + ( d ) &    @xmath122 is the single node graph .",
    "@xmath123 is a 4-node clique with port numbers defined as follows . for a node @xmath76",
    ", we say that edge @xmath124 is _ incident _ to @xmath76 , if the edge corresponding to port @xmath9 at node @xmath76 corresponds to port @xmath95 at some node @xmath11 .",
    "nodes in @xmath123 are uniquely identifiable by the set of their incident edges . below",
    "we assign distinct labels to the four nodes of the clique depending on the sets of their incident edges ( see fig .",
    "[ fig.q2q3].a ) :    * set of edges @xmath125 , @xmath126 , @xmath127  corresponding to label @xmath128 ; * set of edges @xmath125 , @xmath126 , @xmath129  corresponding to label @xmath130 ; * set of edges @xmath131 , @xmath126 , @xmath129  corresponding to label @xmath132 ; * set of edges @xmath131 , @xmath126 , @xmath127  corresponding to label @xmath6 .",
    "we additionally assign colors 0 , 1 , and 2 to edges of @xmath123 as follows : edges @xmath133 and @xmath134 get color 0 , edges @xmath135 and @xmath136 get color 1 , and edges @xmath137 and @xmath138 get color 2 .",
    "@xmath139 is constructed starting from two disjoint copies of clique @xmath123 as follows .",
    "denote by @xmath123 one of the copies and by @xmath140 the other one .    for each node @xmath141 in @xmath123",
    ", we denote by @xmath142 its corresponding node in @xmath140 .",
    "ports 3 , 4 , 5 , and 6 are used to connect each node in @xmath123 to all nodes in @xmath140 to construct an 8-node clique .",
    "we will use two types of edges .",
    "_ monochromatic edges",
    "_   will have port 3 or 4 at both endpoints , while _ skew edges _ will have port 5 at one endpoint and port 6 at the other endpoint .",
    "for monochromatic edges we call _ color _ the port number at both their endpoints .",
    "we will also consider as monochromatic the edges in @xmath123 .",
    "more precisely , edges of color 3 connect nodes @xmath143 , @xmath144 , @xmath145 , and @xmath146 . edges of color 4 connect nodes @xmath147 , @xmath148 , @xmath149 , and @xmath150 .    notice that until now , this construction results in a graph for which each node has exactly one other node with the same view , e.g. , @xmath128 and @xmath151 have the same view .",
    "uniqueness of all views at depth 2 is guaranteed in clique @xmath139 by the definitions of the skew edges .",
    "in particular , skew edges connect nodes :    * @xmath152 , @xmath153 , @xmath154 , and @xmath155 with port 6 at nodes @xmath156 , and @xmath6 and port 5 at nodes @xmath157 , and @xmath158 ; * @xmath159 , @xmath160 , @xmath161 , and @xmath162 with port 6 at nodes @xmath157 , and @xmath158 and port 5 at nodes @xmath156 , and @xmath6 .",
    "this concludes the construction of @xmath139 ( see fig .  [",
    "fig.q2q3].b ) .    a node @xmath141 in @xmath139 whose outgoing port 6 leads to a node @xmath163 receives as its label the concatenation of the labels of nodes @xmath141 and @xmath163 in their respective copies of @xmath123 ( removing all overlines ) .",
    "the complete labeling of nodes in @xmath139 is : @xmath164 , @xmath165 , @xmath166 , @xmath167 , @xmath168 , @xmath169 , @xmath170 , and @xmath171 .    for @xmath172 , the clique @xmath173 is produced starting from disjoint copies @xmath121 and @xmath174 of clique @xmath121 as follows .",
    "the set of nodes of the clique @xmath173 is the union of the sets of nodes of @xmath121 and @xmath174 .",
    "the skew edges connecting nodes of @xmath121 and @xmath174 will have port numbers @xmath175 , while the monochromatic edges will use the same port @xmath9 , for @xmath176 $ ] , on both endpoints .",
    "we denote by @xmath177 a string of length @xmath178 over the alphabet @xmath179 . for @xmath180",
    ", @xmath181 is the prefix of length @xmath182 of string @xmath183 .",
    "we assign port numbers to the edges according to the following two rules .    1 .",
    "* skew edges : * the edge that has port @xmath184 at a node @xmath185 , has port @xmath186 at its other endpoint @xmath187 ; the edge that has port @xmath184 at a node @xmath187 , has port @xmath186 at its other endpoint @xmath188 ( where @xmath189 .",
    "* monochromatic edges : * let node @xmath185 and node @xmath190 be connected by a monochromatic edge of color @xmath9 ; then node @xmath187 and node + @xmath191 are connected by a monochromatic edge of color @xmath9 .",
    "moreover , for each @xmath192 $ ] , any node @xmath193 is connected to some node @xmath194 by a monochromatic edge of color @xmath9 .",
    "the label of a node @xmath11 in @xmath173 is given by the concatenation of the labels of the node in @xmath121 ( respectively in @xmath174 ) corresponding to @xmath11 and its neighbor in @xmath174 ( respectively @xmath121 ) connected by the skew edge @xmath195 incident to @xmath11 .",
    "while rule 1 is constructive , rule 2 is not .",
    "however , a port assignment for monochromatic edges of @xmath173 that fulfills rule 2 , can be obtained , for @xmath196 , by exploiting the already defined edges of @xmath121 as follows .",
    "if there is a monochromatic edge with color @xmath9 between nodes @xmath197 in @xmath121 , then nodes @xmath198 and nodes @xmath199 are connected by a monochromatic edge with color @xmath200 . if @xmath201 are connected by the skew edge @xmath202 incident to @xmath76 , then nodes @xmath198 and nodes @xmath199 are connected by monochromatic edges of color @xmath203 .",
    "now consider the skew edges from previous steps of the construction i.e. , skew edges with port numbers @xmath204 of graph @xmath205 , with @xmath206 ) .",
    "let @xmath207 be four nodes connected by these edges , where @xmath201 are nodes from copy @xmath208 in the construction of @xmath205 , and nodes @xmath209 are the corresponding nodes in copy @xmath210 .",
    "more precisely , let :    * edge @xmath204 incident to @xmath76 connect nodes @xmath76 and @xmath211 ; * edge @xmath204 incident to @xmath11 connect nodes @xmath11 and @xmath212 ; * edge @xmath204 incident to @xmath211 connect nodes @xmath211 and @xmath11 ; * edge @xmath204 incident to @xmath212 connect nodes @xmath212 and @xmath76 .",
    "finally , let @xmath211 and @xmath212 from @xmath205 correspond to nodes @xmath57 and @xmath213 , respectively , in copy @xmath121 of the construction of @xmath173 .",
    "then nodes @xmath214 , @xmath215 , @xmath216 , @xmath217 are connected by monochromatic edges of color @xmath218 ; nodes @xmath219 , @xmath220 , @xmath221 , @xmath222 are connected by monochromatic edges of color @xmath223 .",
    "this concludes the definition of monochromatic edges of @xmath173 , and thus completes its construction .",
    "extracts from graph @xmath224 are depicted in fig .",
    "[ fig.q2q3].c and  [ fig.q2q3].d .",
    "a node of the clique @xmath121 is said to be of _ type _",
    "@xmath128 , @xmath130 , @xmath132 , or @xmath6 if it is obtained from a node with label @xmath128 , @xmath130 , @xmath132 , or @xmath6 ( respectively ) in a copy of @xmath123 in the construction of @xmath121 .",
    "notice that the type of a node corresponds to the first letter of its label .",
    "consider a path @xmath7 defined as a sequence of consecutive monochromatic and skew edges ( i.e. , @xmath7 is uniquely defined by the sequence of outgoing port numbers ) .",
    "if a skew edge @xmath225 is traversed from node @xmath76 to @xmath11 by @xmath7 , then the _ color _ of @xmath225 in @xmath7 is given by its port number at @xmath76 .",
    "we call @xmath7 a _ distinguishing _ path for nodes @xmath141 and @xmath163 in @xmath121 , if it yields two different sequences of node types @xmath128 , @xmath130 , @xmath132 , and @xmath6 traversed proceeding along @xmath7 , depending on whether the origin of @xmath7 is @xmath141 or @xmath163 .",
    "[ clique ] the clique @xmath173 has level of symmetry @xmath226 .    we will prove a stronger statement . we will show that , for @xmath227 , if @xmath228 $ ] and two nodes @xmath76 and @xmath11 in @xmath173 are such that their labels have a common prefix @xmath183 but no common prefix @xmath229 , then the views of @xmath76 and @xmath11 are identical up to depth @xmath230 and differ at depth @xmath231 .",
    "the base step of the inductive proof is for @xmath232 .",
    "indeed , node @xmath164 in @xmath139 has the same view as node @xmath165 at depth @xmath233 , while their views differ at depth @xmath234 .",
    "the same happens for the views of nodes @xmath166 and @xmath167 , @xmath168 and @xmath169 , @xmath170 and @xmath171 .",
    "the views of any other pair of nodes are different at depth 1 .",
    "consider the construction of clique @xmath173 .",
    "let @xmath235 $ ] and consider two nodes @xmath76 and @xmath11 whose labels have a common prefix @xmath183 but no common prefix @xmath229 .",
    "let @xmath236 $ ] , and consider the neighbors @xmath237 and @xmath61 ( of @xmath76 and @xmath11 respectively ) that are the other endpoints of the edges having port @xmath9 at @xmath76 and @xmath11 .",
    "the labels of @xmath237 and @xmath61 have a common prefix @xmath238 .",
    "indeed , if port @xmath9 is a port number of a monochromatic edge , rule 2 immediately implies that @xmath237 and @xmath61 have a common prefix @xmath238 . on the other hand ,",
    "if @xmath9 is a port number of a skew edge then the first half of the label of @xmath237 must coincide with that of @xmath76 , and the first half of the label of @xmath61 with that of @xmath11 in graph @xmath121 , which in turn implies that @xmath237 and @xmath61 have a common prefix @xmath239 in graph @xmath173 .",
    "it follows that edges with colors in @xmath240 $ ] can not appear in any distinguishing path of minimal length between two nodes @xmath76 and @xmath11 whose labels have a common prefix of length up to @xmath241 , and therefore the depth at which views of such nodes differ in @xmath173 is the same as that of their corresponding nodes in @xmath121 .",
    "it remains to consider the case of nodes @xmath242 and @xmath243 , sharing a label prefix @xmath244 in @xmath173 . for any such pair of nodes , if @xmath245 $ ] is the color of a monochromatic edge connecting @xmath76 to @xmath212 , then another monochromatic edge of color @xmath9 connects @xmath211 to @xmath11 .",
    "any pair of such nodes have the same view ( at any depth ) in @xmath121 . on the other hand ,",
    "the skew edge @xmath175 incident to @xmath76 and that incident to @xmath211 lead , by rule 1 , to two nodes having a common label prefix of length @xmath246 , but no common prefix @xmath244 ( the same reasoning applies to the skew edges @xmath247 incident to @xmath211 and @xmath76 ) .",
    "these nodes have identical views up to depth @xmath248 in @xmath121 , but distinct at depth @xmath249 , by the inductive hypothesis .",
    "hence @xmath76 and @xmath211 have the same view up to depth @xmath249 and distinct views at depth @xmath226 in @xmath173 , which concludes the proof .",
    "after the publication of the conference version of this paper a more general version of lemma  [ clique ] has been proved in @xcite : for any @xmath250 there exists a @xmath15-node graph of diameter @xmath251 with level of symmetry @xmath252 .",
    "we will also use the following family of cliques @xmath253 .",
    "@xmath254 is the clique on 2 nodes , with port number 0 .",
    "@xmath255 is a clique on 4 nodes , where all nodes have the same set of incident edges @xmath256 . for @xmath257 ,",
    "@xmath258 is a clique obtained from two disjoint copies of @xmath259 .",
    "the construction of @xmath258 mimics the construction of @xmath173 for all edges but the skew edges between nodes in @xmath121 and @xmath174 , that are replaced by monochromatic edges with port number @xmath184 at both endpoints , connecting nodes @xmath76 and @xmath211 , and by monochromatic edges with port number @xmath186 at both endpoints , connecting nodes @xmath260 and @xmath187 and nodes @xmath261 and @xmath185 .",
    "notice that , in graph @xmath253 , nodes @xmath141 and @xmath142 have identical views . nevertheless , in order to describe our construction , we artificially assign to nodes @xmath141 and @xmath142 the label they would respectively receive in the construction of graph @xmath259 .",
    "we finally define a family of graphs that allow us to prove theorem  [ lower - weak ] . for any pair of integers @xmath262 , with @xmath263 and @xmath264 , the graph @xmath265",
    "is obtained using one copy of graph @xmath266 and @xmath267 copies of graph @xmath268 . the construction of graph @xmath265 proceeds as follows .",
    "arrange @xmath267 disjoint copies of @xmath268 and one copy of @xmath266 in a cyclic order .",
    "connect each node in a clique with all nodes in the subsequent clique .",
    "let @xmath269 be two nodes in @xmath270 and let @xmath9 be the color that would be assigned to edge edge @xmath271 in the construction of @xmath272 .",
    "assign port numbers @xmath273 to the edge connecting node @xmath274 in some clique to node @xmath275 in the subsequent clique , where @xmath274 has label @xmath141 and @xmath275 has label @xmath163 .",
    "a distinguishing path in @xmath265 is defined in the same way as in @xmath270 , which is possible , since in both graphs each node has type @xmath128 , @xmath130 , @xmath132 , or @xmath6 .    [ ring ]",
    "let @xmath276 and @xmath263 .",
    "let @xmath141 and @xmath163 be two nodes in @xmath266 and let @xmath277 be the maximum depth at which views of @xmath141 and @xmath163 in @xmath266 are identical .",
    "then the views at depth @xmath278 of nodes @xmath141 and @xmath163 belonging to the copy of @xmath270 in @xmath279 are identical .",
    "it follows from the definition that the length of a shortest distinguishing path for nodes @xmath141 and @xmath163 in @xmath270 is @xmath278 . by construction of @xmath266 , nodes @xmath141 and @xmath163 have labels with an identical prefix of length @xmath280 .",
    "suppose , for contradiction , that views of @xmath141 and @xmath163 at depth @xmath278 are different in @xmath279 .",
    "hence a shortest distinguishing path for these nodes has length @xmath281 in @xmath279 .",
    "let @xmath7 be a distinguishing path of length @xmath10 in @xmath279 for nodes @xmath141 and @xmath163 .",
    "we will show how to construct a distinguishing path @xmath282 of length at most @xmath10 in @xmath266 , which will give a contradiction .",
    "edge colors @xmath283 inside each clique @xmath284 are assigned according to the rules used for cliques @xmath270 .",
    "monochromatic edges with port number @xmath9 at both endpoints get color @xmath9 . for edges connecting nodes from different cliques in @xmath265 we assign as color the smaller of their port numbers .",
    "( notice that edges connecting nodes with the same label in their cliques will get the same color @xmath285 but these edges will be subsequently deleted in the construction of the distinguishing path . ) for the remaining edges ( i.e. , skew edges in the construction of a graph @xmath121 , for some @xmath286 ) , the color is defined by the outgoing port number , according to path @xmath7 .",
    "the distinguishing path @xmath282 is constructed as follows . consider all edges @xmath225 in @xmath7 , in reverse order .",
    "if @xmath225 has color @xmath287 then we remove it ; if @xmath225 has color @xmath288 such that @xmath289 then we replace it with an edge with color @xmath290 .",
    "this corresponds to replacing edges going from one copy of @xmath284 or from @xmath266 to another copy of @xmath284 or to @xmath291 with internal edges of some clique @xmath284 or of @xmath270 .",
    "deleted edges are those going to corresponding nodes of different cliques , hence their deletion corresponds to removing self loops .",
    "we show that path @xmath282 is distinguishing for nodes @xmath141 and @xmath163 in @xmath270 .    indeed , the only edge replacements that could modify the sequence of @xmath128 , @xmath130 , @xmath132 , and @xmath6 types yielded by paths @xmath7 and @xmath282 , when starting from nodes @xmath141 and @xmath163 , are those of edges with color and @xmath292 , as these edges may be replaced by skew edges of the last step of the construction of the clique @xmath270 , that are defined differently in cliques @xmath268 . for each such edge leading to a node with label @xmath293 ,",
    "the corresponding skew edge in @xmath270 leads to a node with label @xmath294 .",
    "hence , views in @xmath270 of nodes @xmath293 and @xmath294 are identical up to depth @xmath295 , as shown in the proof of lemma  [ clique ] , and thus the path @xmath282 , of length at most @xmath10 , is distinguishing for @xmath141 and @xmath163 in @xmath270 , contradiction .",
    "* proof of theorem  [ lower - weak ] : * lemma [ small ] below proves the theorem if either @xmath1 or @xmath3 are less than 2 . here",
    "we give the general argument for @xmath296 .",
    "consider the clique @xmath297 antipodal to the clique @xmath270 in graph @xmath265 .",
    "consider nodes @xmath141 and @xmath142 from this clique .",
    "any distinguishing path for nodes @xmath141 and @xmath142 in @xmath265 must contain a node from @xmath270 .",
    "let @xmath8 be a minimum length distinguishing path for nodes @xmath141 and @xmath142 and assume without loss of generality that @xmath163 and @xmath298 are the first nodes from @xmath266 found along path @xmath8 , if starting from @xmath141 and @xmath142 , respectively . by lemmas [ clique ] and [ ring ] ,",
    "nodes @xmath163 and @xmath298 have the same views at depth @xmath295 and different views at depth @xmath3 in the graph @xmath265 .",
    "thus the minimum length distinguishing path in @xmath265 for @xmath163 and @xmath298 has length @xmath299 . since nodes @xmath163 and @xmath298 are at distance @xmath1 from @xmath141 and @xmath142 , respectively , the views at depth @xmath300 of @xmath141 and @xmath142 are identical .",
    "the following lemma proves theorem [ lower - weak ] in the case when either @xmath1 or @xmath3 are small , thus concluding the proof of theorem  [ lower - weak ] .",
    "[ small ] for @xmath120 and any @xmath301 , and for any @xmath302 and @xmath303 , there exists an integer @xmath2 and a solvable graph @xmath23 of size @xmath2 , diameter @xmath1 and level of symmetry @xmath3 , such that every algorithm for weak le , working for the class of graphs of size @xmath2 , diameter @xmath1 and level of symmetry @xmath3 , takes time at least @xmath14 on the graph @xmath23 .",
    "consider the following cases .",
    "@xmath304 and @xmath302 .",
    "the required graph @xmath23 is depicted in fig .  [ fig.lambda0 ] .",
    "the lower bound @xmath1 on the time of weak le is straightforward .",
    "@xmath305 and @xmath302 .",
    "the construction of the graph @xmath23 is analogous to the general construction of @xmath265 .",
    "we take one copy of clique @xmath123 and @xmath267 copies of clique @xmath255 in circular order . in copies of cliques",
    "@xmath255 we arbitrarily assign labels @xmath128 , @xmath130 , @xmath132 , and @xmath6 to nodes .",
    "the argument remains the same as in the general case .",
    "@xmath301 and @xmath306 .",
    "consider the clique constructed from cliques @xmath270 and @xmath297 by connecting each node with label @xmath141 in @xmath270 to each node with label @xmath163 in @xmath297 by an edge having the color that would be assigned to edge @xmath271 in the construction of @xmath307 .",
    "the obtained clique requires time @xmath308 for weak le .",
    "for strong leader election more knowledge is required to accomplish it , and even more knowledge is needed to perform it fast .",
    "we first prove that knowledge of the diameter @xmath1 is not sufficient for this task .",
    "the idea is to show , for sufficiently large @xmath1 , one solvable and one non - solvable graph of diameter @xmath1 , such that both graphs have the same sets of views .",
    "[ impos ] for any @xmath309 there is no strong le algorithm working for all graphs of diameter  @xmath1 .",
    "cc ( a ) & +   +   + ( b ) &    let @xmath310 .",
    "we will use the following family of graphs @xmath311 ( see also fig .",
    "[ fig.t - k].a ) .",
    "consider a @xmath312 torus @xmath313 .",
    "let @xmath314 and @xmath315 be the two rings of size @xmath316 in @xmath313 .",
    "for each node @xmath317 , let @xmath237 be its unique neighbor from @xmath315 in @xmath313 .",
    "the graph @xmath311 is obtained by connecting each node @xmath317 with nodes @xmath61 and @xmath58 in @xmath315 , where @xmath11 and @xmath57 are the two neighbors of @xmath76 in @xmath314 .",
    "an additional node @xmath213 of degree 2 , connected to a pair of nodes @xmath76 , @xmath237 , completes the construction of @xmath311 .",
    "the assignment of port numbers can be performed arbitrarily and is thus omitted in the construction .",
    "consider the following family @xmath318 of graphs ( see also fig .",
    "[ fig.t - k].b ) .",
    "the graph @xmath318 is obtained from two copies of the graph @xmath311 .",
    "let us call @xmath311 one copy , and @xmath319 , the other .",
    "similarly we call @xmath211 the copy in @xmath319 of node @xmath320 .",
    "the graph @xmath318 is obtained by removing all edges @xmath321 and @xmath322 from @xmath311 and @xmath319 , and replacing them with edges @xmath323 and @xmath324 , maintaining the same port numbers .    since the graph @xmath311 has exactly one node of degree 2 , it is solvable for any assignment of port numbers . by the construction of graph @xmath318 , each node",
    "@xmath76 from one copy of @xmath311 has the same view as the corresponding node @xmath211 from the other copy .",
    "it follows that graph @xmath318 is not solvable . to prove the theorem ,",
    "it is thus enough to show that graphs @xmath311 and @xmath318 have the same diameter .",
    "indeed , this will imply that no algorithm knowing only the diameter can tell apart some solvable graph from an unsolvable one .",
    "the diameter of graph @xmath311 is @xmath325 .",
    "indeed , @xmath325 is the distance from the unique node @xmath213 of degree two to the two nodes in rings @xmath314 and @xmath315 that are antipodal to the neighbors of @xmath213 .",
    "all other pairs of nodes are at distance at most @xmath226 .",
    "consider the graph @xmath318 .",
    "since no edge from the original torus in the copies of @xmath311 is modified in the construction of @xmath318 , we have that all pairs of nodes from the copy @xmath311 , as well as all pairs from the copy @xmath319 are within distance @xmath325 from each other . by using one edge @xmath326",
    "each node @xmath317 can reach any node @xmath327 in @xmath328 within @xmath226 steps ( similarly for @xmath329 ) .",
    "nodes @xmath317 and @xmath330 are at distance 3 in @xmath318 , for any @xmath310 .",
    "the two copies of the node of degree two are at distance 4 in @xmath318 , for any @xmath331 .",
    "hence , for any @xmath331 , all pairs of nodes in @xmath318 are within distance @xmath325 from each other . on the other hand , the distance in @xmath318 from a node @xmath76 in @xmath314 and a node @xmath142 in @xmath332 , where @xmath141 is the antipodal node of @xmath76 in @xmath314 , is equal to @xmath325 .",
    "hence the diameter of @xmath318 is @xmath325 , which concludes the proof .",
    "by contrast , knowledge of the size @xmath2 alone is enough to accomplish strong leader election , but ( unlike for weak le ) , it may be slow .",
    "we will show that optimal time for strong le is @xmath15 in this case .",
    "we first show algorithm  [ alg : sleknownsize ] , working in time @xmath16 .    * for * @xmath80 * to * @xmath333 * do * @xmath82 + @xmath334 the set of nodes in @xmath335 at distance at most @xmath336 from @xmath76 ( including @xmath76 ) + @xmath337 the number of nodes in @xmath338 with distinct views at depth @xmath336 + * if * @xmath339 * then * report `` le impossible '' + * else * + @xmath89 the set of nodes @xmath11 in @xmath335 having the smallest @xmath340 + elect as leader the node in @xmath92 having the lexicographically smallest path from @xmath76    [ strong - size ] algorithm  [ alg : sleknownsize ] - sle - known - size@xmath112 - performs strong le in the class of graphs of size @xmath2 , in time @xmath16 .",
    "after @xmath341 rounds of communication every node @xmath76 has view @xmath335 , which contains views @xmath340 of all nodes @xmath11 .",
    "a copy of each node appears in the set @xmath338 . by propositions",
    "[ possible ] and [ trunc ] the graph is solvable if and only if there are exactly @xmath2 different views @xmath340 of nodes in @xmath338 .",
    "hence the report `` le impossible '' is correct when @xmath339 . if le is possible , the election rule is the same as in the weak le algorithms .",
    "hence all nodes elect the same leader in this case .",
    "our next result shows that algorithm  [ alg : sleknownsize ] is optimal if only @xmath2 is known .",
    "compared to theorem [ weak - known - size ] it shows that the optimal time of strong le with known size can be exponentially slower than that of weak le with known size .",
    "indeed , it shows that strong le may take time @xmath19 on some graphs of diameter logarithmic in their size and having level of symmetry 0 , while weak le takes time @xmath18 , on any solvable graph of diameter @xmath18 and level of symmetry 0 .",
    "the high - level idea of proving that algorithm  [ alg : sleknownsize ] is optimal if only @xmath2 is known is the following .",
    "for arbitrarily large @xmath2 , we show one solvable and one non - solvable graph of size @xmath2 , such that there are nodes in one graph having the same view at depth @xmath19 as some nodes of the other .",
    "[ lower - strong ] for arbitrarily large @xmath2 there exist graphs @xmath342 of size @xmath2 , level of symmetry 0 and diameter @xmath18 , such that every strong le algorithm working for the class of graphs of size @xmath2 takes time @xmath19 on graph @xmath342 .",
    "consider the following family of graphs @xmath343 , for @xmath344 .",
    "the construction of graph @xmath343 starts from a ring with @xmath345 nodes , where all edges have port numbers 0 and 1 at the endpoints .",
    "all nodes in @xmath343 will have degree 3 at the end of the construction .",
    "hence all edges that do not belong to the original ring will have port number 2 at both endpoints .",
    "pick an edge @xmath197 of the ring and call @xmath76 its first node .",
    "consider the whole ring as a segment @xmath346 of @xmath347 edges having edge @xmath197 as its first and last edge ( hence nodes @xmath76 and @xmath11 appear twice in @xmath346 ) .",
    "cc ( a ) & +   +   + ( b ) & +    let @xmath348 be the central edge of segment @xmath346 , where @xmath141 precedes @xmath163 in @xmath346 .",
    "connect the second endpoint of the first edge of @xmath346 ( i.e. , node @xmath11 ) to @xmath141 .",
    "connect the first endpoint of the last edge of @xmath346 ( i.e. , node @xmath76 ) to @xmath163 .",
    "let @xmath349 be the segment obtained from @xmath346 by removing the first edge , edge @xmath348 and all subsequent edges .",
    "let @xmath350 be the segment obtained from @xmath346 by removing all edges preceding edge @xmath348 ( included ) and the last edge .",
    "if @xmath351 and @xmath350 have length larger than 2 , proceed recursively on both segments .",
    "if @xmath351 and @xmath350 have length 2 , connect their central nodes .",
    "this concludes the construction of graph @xmath343 ( see fig .",
    "[ fig.g2].a for an example ) .",
    "for @xmath352 we define @xmath353 .",
    "since the length of a segment @xmath354 is given by @xmath355 and @xmath356 , we get the formula @xmath357 .",
    "hence every segment @xmath354 has a central edge if @xmath358 . the diameter of graph",
    "@xmath343 is at most @xmath359 . indeed , starting from node @xmath76 it is possible to reach any other node in @xmath343 using at most @xmath360 edges .",
    "views of all nodes in @xmath343 are identical , hence leader election in graph @xmath343 is impossible .",
    "consider the family of graphs @xmath361 , obtained , for any @xmath344 , from a ring with @xmath362 nodes , where all edges have port numbers 0 and 1 at the endpoints , as follows .",
    "add a new node @xmath11 and connect it to some node @xmath76 in the ring ; divide the remaining @xmath363 nodes of the ring into @xmath364 groups of 4 consecutive nodes and connect the first node of each group with the third one of the same group , as well as the second with the fourth . again , new edges joining nodes of the original ring have port number 2 at both endpoints .",
    "leave the remaining 2 consecutive nodes unchanged ( see fig .",
    "[ fig.g2].b for an example ) .",
    "suppose , for contradiction , that some algorithm @xmath50 correctly solves strong le for all graphs of known size @xmath365 , where @xmath366 , in time at most @xmath367 .",
    "in particular , for any @xmath368 , algorithm @xmath50 must report `` le impossible '' in graph @xmath343 in time at most @xmath369 . however , any node @xmath57 at distance at least @xmath370 from the unique node of degree 1 in graph @xmath361 has the same view , up to depth @xmath369 , as nodes in @xmath343 .",
    "thus node @xmath57 would report `` le impossible '' in graph @xmath361 and algorithm @xmath50 would fail to elect a leader in the solvable graph @xmath361 , contradicting the assumption that @xmath50 solves strong le for all graphs of known size @xmath2 , for @xmath365 .",
    "this contradiction implies that every algorithm solving strong le with known size @xmath2 must take time @xmath19 on graphs @xmath342 which have diameter @xmath18 and level of symmetry 0 .    * for * @xmath80 * to * @xmath81 * do * @xmath82 + compute @xmath83 ; @xmath84 + * repeat * + @xmath85 ; @xmath86 ; construct @xmath93 + * until * @xmath88 + * if * @xmath371 * then * report `` le impossible '' + * else * + @xmath89 the set of nodes @xmath11 in @xmath90 having the smallest @xmath91 + elect as leader the node in @xmath92 having the lexicographically smallest path from @xmath76    we finally show that if both @xmath1 and @xmath2 are known , then the optimal time of strong le is @xmath12 , for graphs with level of symmetry @xmath3 .",
    "the upper bound is given by algorithm  [ alg : sleknownsizeanddiameter ] - sle - known - size - and - diameter @xmath372 .",
    "the algorithm is a variation of algorithm  [ alg : knowndiameter ] - wle - known - diameter@xmath373 - with an added test on the size of the partition @xmath93 after exiting the `` repeat '' loop .. the following result says that algorithm sle - known - size - and - diameter@xmath372 is fast .",
    "in fact , compared to theorems [ impos ] and [ lower - strong ] , it shows that while knowledge of the diameter alone does not help to accomplish strong le , when this knowledge is added to the knowledge of the size , it may exponentially decrease the time of strong le .",
    "[ all ] algorithm sle - known - size - and - diameter@xmath372 performs strong le in the class of graphs of size @xmath2 and diameter @xmath1 , in time @xmath13 , for graphs with level of symmetry @xmath3 .",
    "the time complexity @xmath13 of algorithm sle - known - size - and - diameter@xmath372 on solvable graphs follows directly from the analysis of algorithm  [ alg : knowndiameter ] .",
    "the test on the number of sets in partition @xmath93 correctly identifies solvable and non - solvable graphs .",
    "indeed , in view of proposition  [ stop ] , @xmath374 and it is a direct consequence of proposition  [ possible ] that leader election is possible on an @xmath2-node graph , if and only if , @xmath40 contains @xmath2 sets .",
    "proposition  [ lambda ] guarantees completion time @xmath13 on non - solvable graphs , while uniqueness of the elected leader on solvable graphs follows from the analysis of algorithm  [ alg : knowndiameter ] .",
    "this concludes the proof .",
    "since the lower bound in theorem [ lower - weak ] was formulated for known @xmath2 , @xmath1 and @xmath3 , it implies a matching lower bound for the optimal time of strong le with known @xmath2 and @xmath1 , showing that this time is indeed @xmath12 for graphs with level of symmetry @xmath3 .",
    "we established the optimal time of weak and strong leader election , depending on the knowledge of the size @xmath2 and of the diameter @xmath1 of the graph . for each scenario",
    "the upper bounds were shown by proposing an algorithm , and matching lower bounds were proved .",
    "the optimal time turned out to depend on the knowledge of one or both of the parameters @xmath2 and @xmath1 .",
    "notice that the comparison of assumptions for our matching upper and lower bounds in various scenarios of weak and strong leader election shows that , while the level of symmetry may significantly influence optimal election time , the _ knowledge _ of this level is not important .",
    "indeed , for each task and for various combinations of knowledge of the size @xmath2 and/or the diameter @xmath1 , adding the knowledge of the symmetry level @xmath3 does not help .",
    "more precisely , weak le is impossible knowing neither @xmath2 nor @xmath1 , even if knowledge of @xmath3 , e.g. , @xmath304 is added , cf . @xcite . on the other hand , theorems [ weak - known - diam ] , [ weak - known - size ] , and [ lower - weak ]",
    "show that with known @xmath1 or @xmath2 , optimal time of weak le is @xmath12 , regardless of whether @xmath3 is known or not ( but the time itself depends on both @xmath1 and @xmath3 ) .",
    "the same is true for strong le .",
    "indeed , the impossibility result in theorem [ impos ] and the lower bound from theorem [ lower - strong ] hold even for known @xmath304 , while the upper bound from theorem [ strong - size ] does not require the knowledge of @xmath3 . for",
    "known @xmath1 and @xmath2 , the upper bound @xmath13 holds without knowing @xmath3 by theorem [ all ] , while the lower bound carried over from theorem [ lower - weak ] holds even when @xmath3 is known",
    ".    it would be interesting to investigate other complexity measures of the leader election problem , such as the bit or message complexity of communication needed to accomplish it , in relation to the knowledge of the three parameters of the network used in our present study .",
    "p. boldi , s. shammah , s. vigna , b. codenotti , p. gemmell , and j. simon , symmetry breaking in anonymous networks : characterizations .",
    "4th israel symposium on theory of computing and systems , ( istcs 1996 _ ) , 1626 .                          m.a .",
    "haddar , a.h .",
    "kacem , y. mtivier , m. mosbah , and m. jmaiel , electing a leader in the local computation model using mobile agents .",
    "6th acs / ieee international conference on computer systems and applications ( aiccsa 2008 _ ) , 473480 ."
  ],
  "abstract_text": [
    "<S> we study the time needed for deterministic leader election in the @xmath0 model , where in every round a node can exchange any messages with its neighbors and perform any local computations . </S>",
    "<S> the topology of the network is unknown and nodes are unlabeled , but ports at each node have arbitrary fixed labelings which , together with the topology of the network , can create asymmetries to be exploited in leader election . </S>",
    "<S> we consider two versions of the leader election problem : strong le in which exactly one leader has to be elected , if this is possible , while all nodes must terminate declaring that leader election is impossible otherwise , and weak le , which differs from strong le in that no requirement on the behavior of nodes is imposed , if leader election is impossible . </S>",
    "<S> we show that the time of leader election depends on three parameters of the network : its diameter @xmath1 , its size @xmath2 , and its _ level of symmetry _ </S>",
    "<S> @xmath3 , which , when leader election is feasible , is the smallest depth at which some node has a unique view of the network . </S>",
    "<S> it also depends on the knowledge by the nodes , or lack of it , of parameters @xmath1 and @xmath2 . </S>",
    "<S> * keywords : * leader election , anonymous network , level of symmetry    [ section ] [ section ] [ section ] [ section ] [ section ] [ section ] [ section ] [ section ]    [ section ] </S>"
  ]
}
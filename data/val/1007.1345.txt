{
  "article_text": [
    "packing items of variable sizes into a given space is a fundamental problem of combinatorial optimization .",
    "this problem dates back to the origin of operations research .",
    "the packing problem and it s multidimensional variants have vital practical applications in diverse domains including the cutting , packaging and other industries . in this paper , we consider a type of packing problem called the vector bin packing ( vector packing ) problem and propose a better bound for the multidimensional version of the problem . the items of variable sizes are packed into containers called bins with fixed size along all dimensions .",
    "multidimensionality plays an important role in capturing incomparable characteristics of the objects that are to be packed .",
    "for example , the memory requirements and bandwidth requirements in a distributed computing environment are incomparable .",
    "multidimensionality also suffices the different costs that may be associated with each of these requirements . in this paper , we provide a method which is applicable to any dimension _",
    "d_.      we now formulate the optimization problem that we are addressing .",
    "+   + * vector bin packing problem * ( vbp ) + _ given a set s of n d - dimensional vectors @xmath6 , @xmath7 ,  , @xmath8 from [ 0,1]@xmath9 , find a packing ( partition ) of s into @xmath10 , @xmath11 , ",
    ", @xmath12 such that @xmath13 @xmath14 ( @xmath15 denotes the projection of vector p along  kth dimension ) .",
    "the objective is minimize the value of m , the number of partitions . _",
    "+ when @xmath16 , the problem is an instance of the classical bin packing problem ( bp ) .",
    "one dimensional bin packing problem has been studied extensively .",
    "fernandez de la vega and lueker  @xcite gave the first asymptotic polynomial - time approximation scheme ( aptas ) .",
    "they put forward a rounding technique that allowed them to reduce the problem of packing large items to finding an optimum packing of just a constant number of items ( at a cost of @xmath17 times opt ) .",
    "their algorithm was later improved by karmarkar and karp  @xcite , to a ( 1+@xmath18)-opt bound .",
    "for 2-dimensional vector bin packing , woeginger  @xcite proved that there is no aptas . for higher dimensions ,",
    "fernandez de la vega and lueker  @xcite proposed a simple ( @xmath19)-opt algorithm , which extends the idea of 1-dimensional bin packing .",
    "chekuri and khanna  @xcite showed an @xmath20(log @xmath5)-approximation algorithm that runs in polynomial time for fixed d. bansal et al .",
    "@xcite improved this result , showing an ( ln @xmath5 + 1 + @xmath17)-approximation algorithm for any @xmath21 .",
    "karger et al .",
    "@xcite have recently proposed a polynomial approximation scheme for randomized instances of the multidimensional vector bin packing using smoothing techniques .",
    "patt - shamir et al .",
    "@xcite have recently explored the vector bin packing problem with bins of varying sizes and propose a ( ln @xmath22 + 1 + @xmath17)-approximation algorithm for any @xmath21 .      in this paper",
    ", we provide an improved approximation bound for the vector bin packing problem of any dimension .",
    "we provide a @xmath4 approximation guarantee for certain set of inputs for any dimension @xmath5 . in more specific settings ,",
    "we provide a 2-opt guarantee for large inputs irrespective of the dimension @xmath5 .",
    "this is a notable improvement over the previously known guarantee of @xmath1 @xmath2 for higher dimensions ( @xmath23 ) .",
    "the rest of the paper is organized as follows .",
    "section [ probform ] gives the linear program ( lp ) formulation of the problem . in section [ algo ] ,",
    "we provide the approximation algorithm and prove the bounds .",
    "we formulate the problem as an integer program in [ ilpform ] .",
    "the integer constraints are relaxed and we formulate it s dual ( [ dualform ] ) .",
    "the solution of the relaxed integer program gives a thoughtful insight about the optimal number of bins .",
    "the vector bin packing problem ( vbp ) can be formulated as an integer program .",
    "we use two binary variables @xmath24 and @xmath25 .",
    "the binary variable @xmath24 indicates if vector @xmath26 is assigned to bin j and the binary variable @xmath25 indicates whether bin j is in use or not .",
    "our objective is to minimize the number of bins used .",
    "the number of bins @xmath27 can initially be set to a sufficiently large value arrived at by any heuristic ( example - de la vega and leuker  @xcite give a @xmath28-opt bound on the number of bins ) .",
    "then , we formulate the integer program ( ilp ) as follows -    @xmath29    the constraints of the ilp are as follows -    *  constraint ( 2 ) states that every vector is packed in a bin .",
    "*  constraint ( 3 ) ensures that the packed vectors do not exceed the bin dimensions . *",
    " constraint ( 4 ) tells whether a bin is used or not . *",
    " constraint ( 5 ) ensures that a vector is either packed entirely in a bin or not .",
    "[ [ section ] ]    constraint ( 5 ) can be relaxed as follows to obtain a linear program ( lp ) .",
    "@xmath30 we can obtain a feasible solution for the lp using any standard method  @xcite . using binary search technique",
    ", we can also find the least value of @xmath27 , @xmath31 for the relaxed ilp for which a feasible solution exists .",
    "the value of @xmath32 thus obtained will be less than the optimal solution for the integer program i.e. ( @xmath33 opt ) .",
    "however , the solution obtained is usually not integral . to tackle this problem",
    ", we formulate a dual - maximization problem for the above relaxed ilp .",
    "@xcite [ th:1 ] any basic feasible solution to the relaxed lp defined by equations [ lp1 ] , [ lp2 ] , and [ lp3 ] has at most @xmath34 vectors that are fractionally assigned to more than one bin .",
    "we introduce several new variables @xmath35 to formulate the dual .",
    "the dual - maximization problem formulation is given in the appendix [ appendix ] .",
    "we arrive at the following set of equations and constraints - + @xmath36    this is a nonlinear program ( nlp ) as the objective function is nonlinear .",
    "hereafter , we shall refer to it as nlp .",
    "the value of the objective function of the nonlinear program ( nlp ) lies between 1 and @xmath27 .    proof . + * lower bound * : let @xmath37 .",
    "then , the objective function becomes - @xmath38 * upper bound * : the value of the objective function is upper bounded as follows - @xmath39 thus , the range of values the objective function will assume is between @xmath40 and @xmath27 .    ' '' ''    -1000    the actual range of values that @xmath41 ( given the constraints ) is @xmath42 to @xmath27 .",
    "the objective function gives us a hint about the utility of the bins .",
    "intuitively , if the value of the objective function is k , we can assume that the expected utility of each bin is @xmath43 .    in the optimal solution to the nonlinear program ( nlp ) ,",
    "if any values of @xmath24 s are 0 , the corresponding values of @xmath35 s are 0 .    proof",
    "let @xmath44 = 0 for some value of ( @xmath45 ) . from constraint ( [ cons9 ] ) of the nonlinear program , we have - @xmath46 atleast one vector @xmath47",
    "is packed in bin @xmath48 ( i.e. @xmath49 ) . for this vector @xmath50 , the value of @xmath51 in the optimal solution .",
    "the term @xmath52 is maximized iff the value of @xmath53 is redistributed among other @xmath54 values where @xmath55 .",
    "hence , the value of @xmath53 must be 0 .    ' '' ''",
    "-1000    [ th:4 ] given a sufficiently large value of @xmath56 , the solution ( value of @xmath24 ) returned by the nonlinear program nlp will be integral , given that @xmath35 is non - zero whenever @xmath57 .",
    "proof.consider @xmath58 vectors which are to be packed .",
    "assume that the the optimal packing can be done with 2 bins ( i.e. opt=2 ) .",
    "without loss of generality , let us assume that the vectors @xmath59 @xmath60 be packed in bin 1 , and vectors @xmath61 be packed in bin 2 in the optimal solution opt .",
    "+ that is , let @xmath62 .",
    "the maximum value of the objective function in this case will be - @xmath63 now , let us assume that the vector @xmath64 be fractionally packable in bin 1 and bin 2 .",
    "let the fraction that can be packed be @xmath65 in bin 1 and @xmath66 in bin 2 .",
    "the objective function in this case can be shown to be - @xmath67    similarly , we can extend the same argument when more than 1 vectors from bin 2 are fractionally packed in bin 1 .",
    "the objective function strictly decreases as follows - @xmath68 where @xmath69 and ( 1-@xmath69 ) are the fractional packings of vector @xmath50 in bin 1 & 2 respectively .    by induction",
    ", the same proof can be extended when the number of required bins is more than 2 ( i.e. opt @xmath70 2 ) .",
    "thus , the maximum value of the objective function occurs when the variables @xmath24 are integral .    ' '' ''",
    "-1000    [ th:5 ] for the solution to be ( near- ) optimal and integral , the value of @xmath35 should be a function of @xmath24 .",
    "proof.the integral part follows from theorem [ th:4 ] .",
    "let us look into the optimality of the solution obtained .",
    "+ from the jensen s inequality , we have that if @xmath71 is a convex function ( `` concave - up '' ) on an interval @xmath72 and @xmath73 then for weights @xmath74 summing to 1 - @xmath75 we can apply jensen s inequality with @xmath74 and @xmath76 corresponding to @xmath24 and @xmath35 , respectively .",
    "the modified set of equations in this case is as follows - @xmath77 from the property of convex functions , we have - @xmath78 from ( [ eq : a ] ) and ( [ eq : b ] ) , we have - @xmath79 since @xmath80 is a convex function , any value which maximizes @xmath81 also maximizes @xmath80 and vice - versa .",
    "hence , from the inequality ( [ eq : c ] ) , we have that the term @xmath82 should be maximized for the objective function to be maximized .",
    "indirectly , @xmath35 has to be maximized relative to the values of @xmath24 .",
    "the value of @xmath35 is constrained by the constraint ( [ cons9 ] ) , and hence we come up with the following function for @xmath35 - @xmath83 thus , from ( [ eq:11 ] ) , the objective function is as follows - @xmath84 from the rms ( root mean square ) , arithmetic mean and standard deviation relation , we have - @xmath85 on simplifying ( [ eq:12 ] ) , ( [ eq:13 ] ) , ( [ eq:14 ] ) and ( [ eq:15 ] ) , we have - @xmath86 from constraint ( [ lp1 ] ) , we have @xmath87 and theorem [ th:1 ] states that there exists at least @xmath88 elements having @xmath89 ( i.e. on an average @xmath90 per bin ) .",
    "+ thus , @xmath91 @xmath92 hence , the value of the objective function ( @xmath93 ) is close to it s upper bound ( @xmath94 ) indicating the near optimal usage of the bins",
    ". any basic feasible solution would provide a near optimal packing when @xmath95    ' '' ''    -1000    [ cor : mean ] for a fixed value of @xmath96 , the minimum value of @xmath97 occurs when all @xmath24 s are equal . also , the minimum value is equal to @xmath24 .",
    "proof.from equations ( [ eq:12 ] ) , ( [ eq:13 ] ) , ( [ eq:14 ] ) and ( [ eq:15 ] ) , we have - @xmath98 the equality holds only when all the @xmath24 s are equal    ' '' ''    -1000    any basic feasible solution for the relaxed lp will not necessarily be integral .",
    "however , from theorem [ th:5 ] , we have seen that any such solution will be close to the optimal integer solution .",
    "we now present an algorithm which will provide the near optimal integer solution .",
    "an set of vectors @xmath99 ; @xmath100 .",
    "@xmath101 @xmath102 @xmath103 @xmath104    algorithm 1 provides a @xmath4-optimal guarantee to the vector bin packing problem ( vbp ) .",
    "proof.from the solution of the relaxed lp , the packing problem is classified into 3 cases- + * case 1 :* @xmath105 the optimal solution for an integer program is a feasible solution for the corresponding relaxed linear program .",
    "thus , the optimal solution for a linear program is lesser than the optimal solution for an integer program ( in a minimization problem ) .",
    "thus , we have that - @xmath106 combining the above , we get - @xmath107 since the total number of bins can not exceed the number of vectors @xmath58 , any first fit algorithm in the worst case can have an approximation factor of 2 .",
    "+   + * case 2 :* @xmath108 + since @xmath108 , we have that - @xmath109 let @xmath110 for some value of @xmath111 .",
    "the equation ( [ eq:15a ] ) in theorem [ th:5 ] is then - @xmath112 if @xmath113 , the equation then becomes - @xmath114 thus , the value of objective function is @xmath115 , indicating a ( near-)optimal utility of each bin .",
    "we use this knowledge and apply a greedy heuristic as given in algorithm 2 .",
    "an set of vectors @xmath99 ; @xmath100 and a set of @xmath24 values @xmath116 .",
    "@xmath117 @xmath118 remove the top element @xmath24 in @xmath119 @xmath120 @xmath121 @xmath122 @xmath123    from theorem [ th:1 ] , the algorithm completely packs a majority of the vectors into the bins ( i.e. @xmath124 for @xmath125 ) .",
    "less than half of the vectors remain to be packed by the repeated iteration .",
    "hence , the required bins @xmath126 2-opt .    * case 3 :* @xmath127 +    an set of vectors @xmath99 ; @xmath100 and a set of @xmath24 values @xmath116 .",
    "@xmath117 @xmath128 @xmath129 @xmath130 @xmath131 @xmath132 @xmath123    we find all the instances where @xmath133 . from corollary [ cor :",
    "mean ] , @xmath133 happens only when more than half of the non - zero values of @xmath24 s are greater than @xmath134 or the standard deviation is fairly high .",
    "also , the utility of the bin is more than @xmath134 .",
    "only those bins whose utility exceeds half are chosen , and the values of @xmath24 s are sorted in descending order .",
    "the values of @xmath24 s less than half are ignored ( less than half the number of non - zero @xmath24 s ) .",
    "the value of standard deviation can also be high in which case , we have achieved our objective of increasing the gap between the values of @xmath24 .",
    "we now proceed to packing the vectors into their respective bins . since the number of @xmath24 s thrown away are less than half and the remaining values of @xmath24 s are @xmath135 .",
    "atmost twice the number of bins are used to pack these vectors with @xmath136 .",
    "the remaining vectors are deferred to the next iteration .",
    "thus , in each stage of the algorithm , the number of bins used is atmost twice the optimal since we are packing vectors with @xmath136 .",
    "hence , we have proved that the number of bins used is atmost 2-opt .    ' '' ''    -1000    99    nikhil  bansal and alberto  caprara and maxim  sviridenko .",
    "improved approximation algorithms for multidimensional bin packing problems .",
    "_ focs 06 : proceedings of the 47th annual ieee symposium on foundations of computer science _ ,",
    "ieee computer society , washington , dc , usa ( 2006 ) 697708    nikhil  bansal and jos r.  correa and claire  kenyon and maxim  sviridenko .",
    "bin packing in multiple dimensions : inapproximability results and approximation schemes . _",
    "res . _ * 31*(1 ) , ( 2006 ) 3149    alberto  caprara . packing 2-dimensional bins in harmony .",
    "_ focs 02 : proceedings of the 43rd symposium on foundations of computer science _ , ieee computer society , washington , dc , usa ( 2002 ) 490499    alberto  caprara and paola  toth .",
    "lower bounds and algorithms for the 2-dimensional vector packing problem . _ discrete appl .",
    "math . _ * 111*(3 ) , ( 2001 ) 231262    chandra  chekuri and sanjeev  khanna . on multi - dimensional packing problems . _",
    "soda 99 : proceedings of the tenth annual acm - siam symposium on discrete algorithms _ , society for industrial and applied mathematics , baltimore , maryland , usa ( 1999 ) 185194    george bernard  dantzig and mukund narain  thapa .",
    "_ linear programming : theory and extensions _",
    ", springer - verlag ( 2003 ) .",
    "wenceslas  fernandez de la vega and george s.  lueker .",
    "bin packing can be solved within 1+epsilon in linear time .",
    "_ combinatorica _ * 1*(4 ) , ( 1981 ) 349355    david  karger and krzysztof  onak .",
    "polynomial approximation schemes for smoothed and random instances of multidimensional packing problems . _ soda 07 : proceedings of the eighteenth annual acm - siam symposium on discrete algorithms _ ,",
    "society for industrial and applied mathematics , philadelphia , pa , usa ( 2007 ) 12071216    narendra  karmarkar and richard m.  karp .",
    "an efficient approximation scheme for the one - dimensional bin - packing problem .",
    "_ sfcs 82 : proceedings of the 23rd annual symposium on foundations of computer science _ , ieee computer society , washington , dc , usa ( 1982 ) 312320    hans  kellerer and vladimir  kotov .",
    "an approximation algorithm with absolute worst - case performance ratio 2 for two - dimensional vector packing . _ operations research letters _ * 31*(1 ) , ( 2003 ) 3541    boaz  patt - shamir and dror  rawitz .",
    "vector bin packing with multiple - choice . _",
    "corr _ * abs/0910.5599 * , ( 2009 ) http://arxiv.org/abs/0910.559    gerhard j.  woeginger .",
    "there is no asymptotic ptas for two - dimensional vector packing . _",
    "information processing letters _ * 64*(6 ) , ( 1997 ) 293297",
    "multiply constraint ( [ neq:4 ] ) by positive multipliers @xmath35 corresponding to @xmath24 s . adding all such constraints , we obtain - @xmath138 further , we have - @xmath139 thus , the minimization problem can be reframed as a maximization problem with the constaint ( [ 1newcons ] ) and objective function being - @xmath140 adding the new constraints and relaxing constraint ( [ 1intgr ] ) , the dual problem is as follows - @xmath141"
  ],
  "abstract_text": [
    "<S> in this paper we propose an improved approximation scheme for the vector bin packing problem ( vbp ) , based on the combination of ( near-)optimal solution of the linear programming ( lp ) relaxation and a greedy ( modified first - fit ) heuristic . </S>",
    "<S> the vector bin packing problem of higher dimension @xmath0 is not known to have asymptotic polynomial - time approximation schemes ( unless p = np ) . </S>",
    "<S> + our algorithm improves over the previously - known guarantee of @xmath1 @xmath2 by bansal et al .  </S>",
    "<S> @xcite for higher dimensions @xmath3 . </S>",
    "<S> we provide a @xmath4 approximation scheme for certain set of inputs for any dimension @xmath5 . </S>",
    "<S> more precisely , we provide a 2-opt algorithm , a result which is irrespective of the number of dimensions @xmath5 . </S>"
  ]
}
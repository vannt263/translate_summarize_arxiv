{
  "article_text": [
    "to use the limited communication network resources efficiently , the event - triggered control ( etc ) method has been introduced in the field of networked control system ( ncs ) , where a system samples its output and sends the sampled value to the controller based on the occurrences of a well - defined event .",
    "therefore , this control method can adjust the sampling rate adaptively according to what is happening within the controlled system and may reduce unnecessary communications .",
    "because of this advantage , fruitful results on event - triggered controlled systems have been reported in the literature ( see @xcite and reference therein ) .    in the framework of input - to - state stability ,",
    "the stabilization problem of nonlinear ncss was investigated by utilizing centralized and decentralized etc methods in @xcite and @xcite , respectively .",
    "the output decentralized etc for linear ncs was studied via impulsive system theory in @xcite . to enlarge inter - execution intervals ,",
    "the model - based etc was proposed also for a linear ncs in @xcite .",
    "in addition , decentralized / distributed etc for interconnected systems was developed in @xcite and @xcite by using the small gain theory for large - scale systems .    on the other hand , synchronization of dynamical networks , or interconnected systems , and the related problem of consensus of multi - agent systems ,",
    "have attracted a great deal of attention due to their extensive applications in various fields ( see recent papers and a monograph @xcite for details ) .",
    "motivated by the fact that connected nodes in some real - world networks share information over a digital platform , the problem of synchronization of dynamical networks and its related topic  consensus of multi - agent systems  have also been investigated under the circumstance that nodes or agents communicate to their neighbours only at certain discrete - time instants that are based on occurrences of a well - defined event ( @xcite to name a few ) .",
    "under such a circumstance , each node can only get limited information ( e.g. , its own state , the sampled states of its neighbours and only at certain discrete - time instants ) .",
    "then , the main issue is how to use these limited information to design an event - triggering rule ( etr ) for each node under which the entire network achieves synchronization asymptotically .",
    "moreover , a system with an event - triggered controller may have zeno behaviours , which is due to the continuous / discrete - time hybrid nature of the event - triggered controller .",
    "it is known that the zeno behaviour , in which consecutive execution times approach arbitrarily closely resulting in an accumulation point , is undesirable in practice ( @xcite ) .",
    "therefore , how to prevent the occurrence of such a behaviour is another key issue in the study of synchronization for dynamical networks with etrs .",
    "these issues stimulate the study of synchronization for networks with event - based communication . in @xcite",
    ", a distributed etc mechanism was developed to investigate asymptotic consensus of a multi - agent system , which was further extended to studying @xmath0 gain stability of the system with additive disturbances in @xcite .",
    "to prevent the occurrence of zeno behaviour , a decentralized etr with a time - varying threshold that is exponentially decreasing in time was introduced to achieve asymptotic consensus in @xcite .",
    "self - triggered strategies were proposed in @xcite and shown to be robust to skews of the local clocks , delays , and limited precision in the communication .",
    "all abovementioned works only focused on dynamical networks or multi - agent systems with simple node dynamics ( single - integrators or double - integrators ) , which do not appear to extend in a straightforward way to networks with more general node dynamics .",
    "few results studied networks with nodes that are generalized linear dynamical systems , and most of these results only studied bounded synchronization in order to exclude zeno behaviour theoretically ( @xcite ) . for example , in @xcite , @xmath1 estimators ( @xmath2 is the number of node @xmath3 s neighbours ) were introduced into each node , and were used to design a decentralized etr with a fixed threshold to achieve bounded synchronization .",
    "recently , a new distributed event - triggered control method was introduced in @xcite to study asymptotic synchronization of networks with generalized linear node dynamics . however , this new etr is inadequate to exclude zeno behaviours . in @xcite",
    ", the authors adopted the same @xmath1 estimators as in @xcite and modified the distributed etr proposed in @xcite by introducing the exponential term used in @xcite .",
    "the design distributed event - triggered controller synchronizes the network asymptotically with no zeno behaviours .",
    "this result was also extended to output synchronization of heterogeneous networks in @xcite .",
    "however , for networks with large node degrees , this control method needs a large number of estimators .    to overcome the abovementioned issue",
    ", we introduce a new sampling mechanism with which only two estimators for each node are needed to synchronize the network .",
    "one of the estimators is used to estimate its own state , and the other is used to estimate the average state of the node s neighbours .",
    "then , a distributed etr for each node is designed based on the two estimators .",
    "moreover , inspired by the method proposed in @xcite , we replace the exponential term used in @xcite by a dwell - time ( a concept that has been extensively used in switched systems , see @xcite for example ) , which will simplify the implementation of the designed etr in practice .",
    "we will show that the network with the designed distributed etr achieves synchronization asymptotically and excludes zeno behaviour successfully .",
    "we also extend the obtained results to networks with logarithmic quantizers .",
    "our contribution is to propose a control law that for the first time has the the four essential and desirable properties as follows .",
    "i ) . by introducing estimators into each nodes and the dwell - time into the designed distributed etr , the proposed distributed event - triggered controller can guarantee asymptotic synchronization of dynamical networks with generalized linear dynamics , and moreover , we can guarantee no zeno behaviour occurs theoretically ; whereas most of the existing results sacrifice synchronization performance and only study bounded synchronization in order to exclude zeno behaviour .",
    "ii ) . by introducing a new sampling mechanism ,",
    "we reduce the number of estimators needed for each node to two , whereas existing results need @xmath1 estimators .",
    "thus , the proposed control method can be implemented easily , in particular for networks with large node degrees .",
    "most importantly , it can be implemented in a decentralized way .",
    "iii ) . the proposed method can deal with networks which synchronize to a time - varying solution rather than to an equilibrium point .",
    "this also thanks to the two estimators introduced into each node .",
    "we also consider the quantization effects . because of the new sampling mechanism and the logarithmic quantizer",
    ", we can still guarantee asymptotic synchronization of the network under the proposed distributed etr .",
    "the rest of the paper is organized as follows .",
    "section [ sec_model ] introduces the network model and a new sampling mechanism under which two estimators are designed for each node in the network .",
    "section [ sec_sync ] studies asymptotic synchronization of the network by designing event - triggered controllers where both centralized and distributed etr are discussed .",
    "section [ sec_quan ] considers the quantization effects and extends the results proposed in section [ sec_sync ] to networks with logarithmic quantizers .",
    "section [ sec_exam ] gives two numerical examples to illustrate the obtained results .",
    "conclusions are drawn in section [ sec_con ] .",
    "_ notation _ : we denote by @xmath4 , @xmath5 , @xmath6 and @xmath7 the set of real numbers , non - negative real numbers , integers and non - negative integers , respectively ; by @xmath8 and @xmath9 the set of @xmath10-dimensional real vector and @xmath11 real matrix .",
    "@xmath12 , @xmath13 and @xmath14 are the @xmath10-dimensional identity matrix , @xmath10-dimensional vector with all entries being @xmath15 and @xmath11 matrix also with all entries being @xmath15 , respectively .",
    "we use @xmath16 to represent the euclidean norm of a vector @xmath17 and also the induced norm of a matrix @xmath18 .",
    " @xmath19 \" is the transpose of a vector or a matrix ,  @xmath20 \" is the inverse of a nonsingular matrix , and `` @xmath21 '' is the kronecker product of two matrices .",
    "@xmath22 ( @xmath23 ) is the time right after ( right before ) @xmath24 . for a single @xmath25 , @xmath26 and @xmath27 .",
    "let @xmath28 be an undirected graph consisting of a node set @xmath29 and a link set @xmath30 .",
    "if there is a link @xmath31 between nodes @xmath3 and @xmath32 , then we say the two nodes @xmath3 and @xmath32 are adjacent , or that node @xmath32 is a neighbour of node @xmath3 and vice versa .",
    "let @xmath33 be the adjacency matrix of @xmath28 with @xmath34 , where @xmath35 and @xmath36 if node @xmath3 and node @xmath32 are adjacent , otherwise @xmath37 .",
    "if @xmath38 , then we say graph @xmath28 is unweighted , otherwise the graph is weighted .",
    "the laplacian matrix @xmath39 is defined by @xmath40    consider a network of linear dynamical systems whose state equation is given as follows @xmath41 where @xmath42 is the state of node @xmath3 .",
    "the constant matrix @xmath43 describes the node dynamics .",
    "@xmath44 is the input matrix , and @xmath45 is the control input to be designed .",
    "generally , continuous communications between adjacent nodes are assumed in the literature , i.e. , @xmath46 .",
    "this yields the following network with continuous interconnections @xmath47 in this paper , we assume that connections in the network are realized via discrete communications , i.e. , each node in the network only gets access to information from its neighbours at certain discrete - time instants .",
    "we will present an event - triggered version of the network , and study how to design an etr for each node such that the network achieves synchronization asymptotically .",
    "we suppose that the topological structure of the network is fixed , undirected and connected .",
    "the graph topology is represented by the adjacency matrix @xmath18 or the laplacian matrix @xmath48 . for simplicity ,",
    "we only consider unweighted networks , i.e. , @xmath38 ; but the obtained results can be extended to weighted networks directly .    in order to achieve synchronization of such a network ,",
    "we introduce two estimators @xmath49 and @xmath50 into each node @xmath3 , and adopt the following control input @xmath51 where @xmath52 is the control gain to be designed , and @xmath53 and @xmath54 are states of the two estimators @xmath49 and @xmath50 , respectively , with state equations given by @xmath55 for each node @xmath3 , the estimator @xmath49 is used to estimate its own state , and the estimator @xmath50 is used to estimate the average state of all its neighbours .",
    "the increasing time sequences @xmath56 and @xmath57 , @xmath58 represent time instants that node @xmath3 sends information to its neighbours and time instants that it receives updated information from one or more of its neighbours , respectively .",
    "the mapping @xmath59 is the index set of node @xmath3 s neighbours from which node @xmath3 receives updated information at @xmath60 , where @xmath61 is the index set of the neighbours for node @xmath3 .",
    "the error vector @xmath62 represents the state deviation between the estimator @xmath49 and node @xmath3 .",
    "we assumes that    a1 .",
    ": :    there is no time delay for computation and execution , i.e. , the time    @xmath63 represents both the @xmath64th sampling    time instant and the @xmath64th time when node    @xmath3 broadcasts the updated information to its neighbours ; a2 . : :    the communication network is under an ideal circumstance , i.e. , there    are no time delays or data dropouts in communication .    with these assumptions , @xmath65 becomes @xmath66    the time sequence @xmath56 is decided by an event - triggering function @xmath67 to be designed , i.e. , @xmath68 for @xmath69 , if the inequality in is satisfied at @xmath70 , then node @xmath3 samples",
    "its state @xmath71 and the state of the estimator @xmath49 @xmath72 , calculates @xmath73 , sends @xmath74 to its neighbours , and then , reinitialize the estimator @xmath49 at @xmath75 by using @xmath76 ( @xmath77 ) . on the other hand",
    ", node @xmath3 will reinitialize the estimator @xmath50 by @xmath78 at each time instant when it receives updated information from its neighbours .",
    "we assume the network is well initialized at @xmath79 , i.e. , @xmath80 and each node samples its state and sends @xmath81 to its neighbours .",
    "therefore , we have @xmath82 , @xmath83 and @xmath84 for all @xmath85 .",
    "figure [ two_estimators ] .",
    "gives an illustration of node @xmath3 and the two estimators .     and its estimators .",
    "]    the problem to be considered is with the given network topology , to determine the time sequence @xmath56 , @xmath86 when node @xmath3 should communicate to its neighbours ( i.e. , samples the states and sends updated information to its neighbours ) by designing an etr , such that network can achieve synchronization asymptotically .",
    "moreover , the zeno behaviour which is undesirable in practice may occur in the network due to the hybrid nature of the network with event - triggered controller .",
    "thus , it is important to exclude the occurrence of such a behaviour by designing a proper event - triggering function for each node , which is another main purpose of the paper .    even though the network topology is symmetric , the information flow in the corresponding communication network is usually _ asymmetric _ because each node has its own event - triggering function and decides by itself when it should communicate to its neighbours , i.e. , @xmath87 , for @xmath88 .",
    "it should be pointed out that in most of existing works , each node in the network samples its state and sends the sampled state to its neighbours .",
    "but in our paper , each node samples both its own state and the state of its estimator @xmath89 , calculates the error @xmath90 and then sends this sampled error to its neighbours .",
    "thanks to this new sampling mechanism , we only need two estimators for the design and control purpose .    to simplify the analysis , we will show that the network with , and is equivalent to the following system    [ nm_ob ] @xmath91    defining @xmath92 gives @xmath93 which has the same dynamics as @xmath94 defined in .",
    "moreover , at @xmath60 , we have @xmath95 thus , we have @xmath96 for all @xmath97 .",
    "then , controller becomes @xmath98 the last equality follows from the definition of the laplacian matrix @xmath48 in . substituting into gives that the network with , and is equivalent to .",
    "moreover , let @xmath99 , we have @xmath100",
    ". then , the etr can be reformulated as @xmath101    in this paper , we will use the model and the etr for analysis purpose .",
    "but the obtained results can be implemented by using the controller with the two estimators @xmath89 , @xmath102 and the etr .    in @xcite , a similar controller with @xmath1 estimators",
    "is used to achieve synchronization , where @xmath2 is the number of neighbours ( or the degree ) of node @xmath3 . with assumptions",
    "a1 and a2 , it can be shown that the two controllers are equivalent theoretically .",
    "however , the controller used in this paper only needs two estimators @xmath89 and @xmath102 .",
    "therefore , the advantage of controller , in particular for a large - scale network which has large node degrees , is obvious in practice .",
    "to finish this section , we give the definition of asymptotic synchronisation based on the network model .",
    "[ sync ] let @xmath103 and @xmath104 be a solution to the network with the initial condition @xmath105 @xmath106 and @xmath107 . then",
    ", the network is said to achieve _",
    "synchronization asymptotically _ , if @xmath108 and @xmath109 exist for all @xmath110 , and further if for every initial condition @xmath111",
    "@xmath112    of course , when the communication network is not ideal , network model with and the two estimators @xmath89 , @xmath102 can not be simplified to any more .",
    "then , the problem becomes more complicated , deserving more attention .",
    "in order to achieve the goal of the paper , denote @xmath113 with @xmath62 .",
    "then , the network model can be rewritten by@xmath114    because the laplacian matrix @xmath115 has the zero - row sum property , at least one of its eigenvalues equals to zero .",
    "the network is undirected and connected , so @xmath48 is irreducible and symmetric ; and there always exists an orthogonal matrix @xmath116 with @xmath117 and @xmath118 such that @xmath119 where @xmath120 , and @xmath121 with algebraic multiplicity one .",
    "furthermore , we can choose @xmath122 for @xmath121 , and therefore we have @xmath123 for all @xmath124 , which leads to @xmath125 with @xmath126 .",
    "let @xmath127 , @xmath128 and @xmath129 .",
    "defining @xmath130 gives @xmath131 where we use properties @xmath132 and @xmath133 for any @xmath134 , which are supported by the fact @xmath135 and .",
    "denote @xmath136 , and @xmath137 .",
    "then , the system can be simplified to @xmath138 by calculation , we have @xmath139 where @xmath140 .",
    "the last equality in follows from @xmath141 which leads to @xmath142 .",
    "therefore , if @xmath143 , then @xmath144 as @xmath145 , i.e. , the network achieves synchronization asymptotically according to definition [ sync ] .",
    "this result is summarized in the following lemma .",
    "[ lem2 ] if the system is asymptotically stable , i.e. , @xmath143 , then the network achieves synchronization asymptotically .",
    "it is shown in @xcite that a necessary and sufficient condition for asymptotic synchronization of a dynamical network whose nodes interact with their neighbours continuously with respect to time @xmath24 is that    a3 .",
    ": :    there exist positive definite matrices    @xmath146 such that    @xmath147    hence , for the network with event - triggered controller , it is reasonable to require that a3 holds , which is also a fundamental requirement for the design of the etr .",
    "so in the rest of the paper , we use a3 as another basic assumption and always assume that matrix solutions @xmath148 to lyapunov equations exist .    with the help of lemma [ lem2 ] and",
    "assumption a3 , now we can discuss how to achieve synchronization for the network by designing a proper etr . under the circumstance that all information of the network is available for the design purpose , we give a centralized etr in the following theorem .",
    "[ lem3 ] the network achieves synchronization asymptotically under the sampling time sequence @xmath149 determined by the centralized event - triggering function @xmath150 , i.e. , @xmath151 where @xmath152 and @xmath153 .",
    "moreover , no zeno behaviour occurs in , and the inter - execution intervals @xmath154 , @xmath155 satisfies @xmath156 where @xmath157 and @xmath158 , @xmath159 , @xmath160 and @xmath161 .",
    "first , we show that under etr , @xmath162 , @xmath163 , i.e. , no zeno behaviour will occur . then , we show the asymptotic synchronization of the network under .",
    "to prove the first part , we calculate the derivative of @xmath164 , which gives @xmath165 by the definition of @xmath166 , we have @xmath167 with the same procedure used in and , we have @xmath168 from which we can get an upper bound on @xmath169 , i.e. , @xmath170 similarly , from we get an upper bound on @xmath171 @xmath172 combining with and yields @xmath173 considering the differential equation @xmath174 and based on the comparison theory ( @xcite ) , we have @xmath175 where @xmath176 is the solution to ordinary differential equation with the initial condition @xmath177 . therefore , the inter - execution intervals @xmath178 can be lower bounded by the positive time constant @xmath179 during which @xmath180 evolves from @xmath181 to @xmath182 , i.e. , @xmath183 .",
    "solving gives @xmath179 in .",
    "the positiveness of @xmath179 follows from @xmath184 with @xmath185 and @xmath186 .",
    "thus , no zeno behaviour occurs in network under the etr .",
    "now , select the following lyapunov function candidate @xmath187 where @xmath188 and @xmath148 , @xmath124 are positive definite matrix solutions to . then along the trajectory of the system , we have @xmath189 moreover , the etr guarantees that @xmath190 this together with yields @xmath191 therefore , the equilibrium point @xmath192 of the system is asymptotically stable , i.e. , @xmath143 .",
    "applying lemma [ lem2 ] proves the result .",
    "@xmath193    in practice , a centralized etr is hard to implement .",
    "for one thing , it may be costly and time consuming to gather global information for the design purpose .",
    "for another , each node usually can only get limited information from its neighbours  the sampled value from its neighbours , which can only be received at certain discrete - time instants , rather than @xmath108 for all @xmath110 .",
    "therefore , a distributed etr for each node which only relies on the information that the node can get is desirable .",
    "next , we will design such a distributed etr for each node @xmath3 by only using information of the node itself and its estimators , i.e. , @xmath194 , @xmath195 , and @xmath196 , @xmath197 .",
    "[ them_ndw ] assume that for all @xmath198 there exists a minimum inter - execution interval @xmath199 for each @xmath85 , i.e. , @xmath200 for all @xmath86 , then the network achieves synchronization asymptotically under the distributed etr @xmath201 where @xmath202 ; @xmath203 ; @xmath204 ; @xmath205 is the largest eigenvalue of @xmath48 ; @xmath206 and @xmath207 are defined the same as in theorem [ lem3 ] .    with the assumption of the existence of @xmath208",
    ", no zeno behaviour will occur .",
    "therefore , we only need to pay attention to the asymptotic synchronization of the network under the etr .    to do this ,",
    "we first claim that the following inequality holds for any @xmath97 @xmath209 where @xmath210 . by the definition of @xmath211 , we have @xmath212 where @xmath213 with @xmath214 , and the last equality comes from @xmath215 .",
    "let @xmath216 , then for any symmetric laplacian matrix @xmath48 , we have @xmath217 , i.e. , @xmath48 and @xmath218 can be diagonalized simultaneously .",
    "furthermore , we have @xmath219 and @xmath220 , where @xmath221 and @xmath222 , @xmath124 are the eigenvalues of @xmath218 .",
    "let @xmath223 , @xmath224 be the eigenvalues of the matrix @xmath225 .",
    "then with @xmath226 , we have @xmath227 and @xmath228 , @xmath124 , which leads to @xmath229 .",
    "therefore , @xmath230 combining with gives the inequality .",
    "now with , we can show the asymptotic synchronization of the network .",
    "since @xmath231 for all @xmath97 , @xmath232 with @xmath233 , inequality is equivalent to @xmath234 moreover , we have @xmath235 with @xmath236 , which leads to @xmath237 select the lyapunov function @xmath238 with @xmath239 . then , the derivative of @xmath240 along the system satisfies @xmath241 therefore , the equilibrium point @xmath192 of system is asymptotically stable , and thus the network achieves synchronization asymptotically .",
    "@xmath193    in proposition [ them_ndw ] , we assume the existence of such a @xmath208 for each node @xmath3 in order to exclude zeno behaviour . in particular , for a network with two nodes , we can show that the network has no zeno behaviours under etr ( due to space limitation , it is omitted here ) .",
    "however , it is not clear yet if this result can be extended to networks with more than 2 nodes .",
    "if the answer is negative , then a further question is under what condition such a @xmath199 exists for the etr .",
    "these questions deserve more attention in the future study .",
    "to overcome the abovementioned issue , we give an alternative distributed etr by introducing a dwell - time into a modified etr , which will be addressed in theorem [ them5 ] .",
    "but first we give a useful lemma which will be used to prove theorem [ them5 ] .    [",
    "lemma_centr_dwell ] suppose an etr guarantees that @xmath242 for all @xmath24 with no zeno behaviours",
    ". then the system asymptotically synchronizes . in particular ,",
    "if we use the etr @xmath243 the system asymptotically synchronizes , and the inter - execution interval @xmath244 for each node satisfies @xmath245 where @xmath246 and @xmath247 .",
    "suppose an etr guarantees @xmath248 for all @xmath97 , and there is no zeno behaviour happens . since @xmath249 for all @xmath97 , this together with leads to @xmath250 .",
    "therefore , the asymptotic synchronization follows directly .    to show the existence of a positive inter - execution interval under etr",
    ", we calculate @xmath251 and have @xmath252 where we use to get the last inequality . since for all @xmath97 , @xmath248 which leads to @xmath253 .",
    "therefore the above inequality becomes @xmath254 solving the ordinary differential equation @xmath255 with @xmath256 and @xmath257 gives the lower bound @xmath258 on the inter - execution interval .",
    "@xmath193    [ them5 ]",
    "the network achieves synchronization asymptotically under the distributed etr @xmath259 where @xmath260 ; @xmath261 @xmath262 ; @xmath258 is given by . moreover",
    ", no zeno behaviour occurs in .",
    "the existence of the inter - execution interval for each node under the etr is guaranteed by @xmath258 automatically .",
    "therefore , the only thing left is to show the asymptotic synchronization of the network with the designed etr .    according to the proof of lemma [ lemma_centr_dwell ] , for @xmath263",
    ", we have @xmath248 .",
    "so if we can show that @xmath248 also holds for @xmath264 , then asymptotic synchronisation of the network follows from lemma [ lemma_centr_dwell ] .    under the etr , for any @xmath265",
    ", we have @xmath266 which follows from .",
    "now we claim that @xmath267 to show this , let @xmath268 and @xmath269 for any @xmath97 . obviously , @xmath270",
    ". then , based on the etr , we have @xmath248 if @xmath271 , and @xmath272 if @xmath273 .",
    "therefore , @xmath274 since @xmath275 with @xmath276 , the above inequality is equivalent to inequality .    substituting into yields @xmath277 therefore",
    ", @xmath278 applying lemma [ lemma_centr_dwell ] completes the proof .",
    "@xmath193    [ rem_last ] according to lemma [ lemma_centr_dwell ] , the network can also achieve asymptotic synchronization if each node samples its values periodically with period @xmath258 given by .",
    "compared with the periodic sampling mechanism , etr can reduce the sampling times significantly .",
    "see example 2 in section [ sec_exam ] for instance .    in @xcite ,",
    "the following control input was adopted @xmath279 a distributed etr @xmath280 was used , where @xmath281 and @xmath282 .",
    "it turns out that @xmath283 and @xmath284 in etr are insufficient for the design purpose , in particular for networks whose nodes synchronize to a time - varying trajectory .",
    "suppose the network achieves asymptotic synchronization under to a time - varying trajectory .",
    "as @xmath194 and @xmath285 converge to each other , @xmath284 may converge to zero as well .",
    "however , @xmath283 will not converge to zero ( see figure [ rem ] for an example ) . according to",
    ", this makes @xmath286 close to zero and may lead to zeno behaviour ( see the example in @xcite for instance where inter - execution interval decreases as time @xmath24 increases ) .    .",
    "]    therefore , etr may not exclude zeno behaviour effectively .",
    "this is the reason that we introduce estimators into each nodes . by doing so",
    ", @xmath287 will approach zero , which may exclude zeno behaviours at each node .",
    "@xmath1 estimators were used to design a decentralized etr with a fixed threshold in @xcite , but only bounded synchronization was achieved , i.e. , the synchronization errors is less than a pre - given constant , rather than converges to zero asymptotically . in @xcite",
    ", we use the same @xmath1 estimators and combine the distributed etr proposed in @xcite with the time - dependence etr used in @xcite to design a new distributed etr .",
    "it shows that this new etr can guarantee asymptotic synchronization of the network and prevent the occurrence of the zeno behaviour as well .",
    "however , this control method needs @xmath1 estimators for each node , it will have implementation issues , in particular for networks with a large number of nodes and large node degrees . in theorem [ them5 ] , we reduce the number of the estimators to two , and further remove the exponential term used in @xcite by using a dwell - time term in the designed etr which can be implemented easily in practice .",
    "the etr in theorem [ them5 ] can be implemented by @xmath288 where @xmath289 .",
    "in the previous section , we assume that the communication network is ideal , and in this section , we consider the quantization effects , i.e. , the sampled valued is quantized before sending to the neighbours .    in order to achieve asymptotic synchronization",
    ", we only consider the logarithmic quantizer .",
    "let @xmath290 , @xmath291 be fixed , and let @xmath292 and @xmath293 .",
    "let @xmath294 .",
    "then , the quantization function @xmath295 is given as follows ( @xcite ) @xmath296 figure [ quantizer ] gives an illustration of the quantization function @xmath297 . for a vector @xmath17 , we also use @xmath298 for simplicity which is defined point - wise as @xmath299 .",
    "for such a function , we have the following property @xmath300        a natural way to implement quantization in each node is to quantize @xmath301 of each node and send @xmath302 to its neighbours , and then the neighbours use @xmath302 to reinitialize the corresponding estimator .",
    "the problem of doing this is that the error between @xmath194 and its estimators @xmath303 , @xmath304 , will not go to zero due to the quantization effect and the fact that @xmath194 is time - varying and normally does not go to the origin or a constant vector for most of the synchronization problems .",
    "thus , this method can not lead to asymptotic synchronization for the network even with the logarithmic quantizer .",
    "thanks to the new sampling mechanism proposed in the previous section , we do not have the abovementioned issue . instead of quantizing @xmath301 , we quantize the error @xmath305 between @xmath306 and @xmath307 at each sampling time @xmath308 , send @xmath309 to its neighbours , and reinitialize the estimator @xmath89 by @xmath310 .",
    "by doing so , we have @xmath311 goes to zero as long as @xmath312 goes to zero .",
    "this makes asymptotic synchronization of the network with the logarithmic quantizer possible .",
    "correspondingly , node @xmath3 will reinitialize the estimator @xmath102 as soon as it receives the updated information from its neighbours by @xmath313 .",
    "the estimators @xmath89 in and @xmath102 in become @xmath314 @xmath315 figure [ nodes_qetc ] gives an illustration of node @xmath3 with the two estimators and quantizers .     with estimators and quantizers . ]    here , we assume the network is properly initialized at @xmath79 , i.e. , @xmath80 and each nodes sends @xmath316 to its neighbours . therefore , we have @xmath84 , @xmath317 and @xmath318 .",
    "we further assume that @xmath319 . then with assumptions a1 and a2 ,",
    "the network with , and can be simplified to    [ nm_obquan ] @xmath320    for the centralized etr with logarithmic quantizers , we have the following result .",
    "[ cent - quan ] the network achieves synchronization asymptotically under the centralized etr @xmath321 where @xmath322 , @xmath207 and @xmath206 are defined in theorem [ lem3 ] .",
    "moreover , no zeno behaviour occurs in , and the inter - execution interval @xmath178 satisfies @xmath323 where @xmath324 , @xmath325 , @xmath326 are given in theorem [ lem3 ] and @xmath327 .    according to",
    ", we have @xmath328 at each @xmath329 , with the assumption that @xmath330 , we have @xmath331 since @xmath332 , and @xmath333 as there is no jump in @xmath334 , we have @xmath335 then , the proof of the existence of a positive inter - execution interval is the same as that in theorem [ lem3 ] except that the solution @xmath336 to the differential equation evolves from @xmath337 to @xmath182 rather than from @xmath181 to @xmath182 .",
    "thus , by solving , we can get the lower bound @xmath338 on the inter - execution interval .    from the etr",
    ", we have @xmath339 for @xmath340 . with , we have @xmath341 selecting the lyapunov function @xmath342 , we have @xmath343 along the trajectory of system .",
    "this completes the proof .",
    "@xmath193    to discuss the distributed etr with a dwell - time and logarithmic quantizers , we need the following lemma .    [ lemma_centr_quant ] the network achieves synchronization asymptotically under the distributed etr @xmath344 where @xmath345 .",
    "moreover , no zeno behaviour occurs in , and the inter - execution interval @xmath346 for each node satisfies @xmath347 whose parameters are given in lemma [ lemma_centr_dwell ] .",
    "similar to the proof of theorem [ cent - quan ] , the lower bound @xmath348 on @xmath346 can be obtained from with @xmath349 and @xmath257 .    the asymptotic synchronization of the network can be proved by combining the proof of lemma [ lemma_centr_dwell ] with the proof of theorem [ cent - quan ] .",
    "thus it is omitted here .",
    "@xmath193    with lemma [ lemma_centr_quant ] , we have the following result for the distributed etr with dwell - time to synchronize the network .",
    "[ them6 ] the network achieves synchronization asymptotically under the distributed etr @xmath350 where @xmath260 ; @xmath351 is given in theorem [ them5 ] ; @xmath352 is given by .",
    "moreover , no zeno behaviour occurs in .",
    "combining the proofs of lemma [ lemma_centr_dwell ] with lemma [ lemma_centr_quant ] gives the proof .",
    "@xmath193    [ rem_last1 ] similar to remark [ rem_last ] , the network with logarithmic quantizers can also achieve asymptotic synchronization if each node samples its values periodically with period @xmath352 given by .",
    "again , etr can reduce the sampling times significantly compared with this periodic sampling mechanism ( see example 2 in section [ sec_exam ] for instance ) .",
    "this section gives a network consisting of 10 nodes to show the effectiveness of the proposed results .",
    "here , we suppose the network has the following parameters @xmath353 we adopt the two - nearest - neighbour graph to describe the network topology , i.e. , @xmath354 , @xmath355 . if @xmath356 and @xmath357 , then @xmath358 . if @xmath356 and @xmath359 , then @xmath360",
    ".    since @xmath361 has two eigenvalues on the imaginary axis of the complex plane , the network can not asymptotically synchronize to its equilibrium point , but to a stable time - varying solution depending on its initial condition .",
    "we will simulate the network with the centralized etr in example 1 and the distributed etr with a dwell - time ( ddt ) as well as the distributed etr with a dwell - time and quantizers ( ddtq ) in example 2 .",
    "* example 1 * ( centralized etr ) figure [ fig_centralized ] gives the simulation results under the designed centralized etr with @xmath362 and @xmath363 , which shows that the network achieves synchronization asymptotically .",
    "the minimum inter - execution interval is @xmath364s for @xmath24 from 0s to 18s , which is larger than the theoretical one @xmath365 obtained by .",
    "* example 2 * ( ddt @xmath366 ddtq ) we select the same @xmath206 and @xmath207 as in example 1 , and select @xmath367 and @xmath368 for ddtq .",
    "figure [ fig_ddt ] and figure [ fig_ddqt ] give the simulation results of the network with ddt and ddtq , respectively , which shows the effectiveness of the proposed results ( theorem [ them5 ] and theorem [ them6 ] ) . for both of the cases ,",
    "we only show the sampling time instants of each node in the first 2 seconds for clarity .",
    "table [ table_ddt_mie ] and table [ table_ddt_sam ] gives the minimum inter - execution interval and sampling times of each node for ddt and ddtq during the simulation time from 0s to 18s , respectively .    according to remark [ rem_last ] and remark [ rem_last1 ]",
    ", the network can also achieve synchronization asymptotically if each node samples its states periodically with a period @xmath369s for the case without quantizers and a period @xmath370s for the case with quantirzers .",
    "for these two periodic sampling mechanisms , each node in the network will sample @xmath371 times for the first case and @xmath372 times for the second case during the same simulation time .",
    "compared with table [ table_ddt_sam ] , the proposed distributed etrs reduce sampling times for each node significantly .",
    ".the minimum inter - execution interval ( ddt v.s .",
    "ddqt ) [ cols=\"^,^,^,^,^,^,^,^,^,^,^ \" , ]     [ table_ddt_sam ]",
    "this paper has investigated the asymptotic synchronization problem of a dynamical network by using the distributed etc method . with the help of the introduced estimators , distributed etrs for each node",
    "have been explored , which only rely on the state of the node and the states of the introduced estimators .",
    "it has been shown that the network achieves synchronization asymptotically with the proposed etrs , and no zeno behaviour occurs during the whole evolution of the network .",
    "quantization effect has also been discussed .",
    "it is worth pointing out that time - delay and data packet dropout are common phenomena which definitely affects the synchronization of a network with event - based communication .",
    "thus , it appears that the synchronization of such networks with imperfect communication is an important issue to pursue further for both theoretical interest and practical consideration ."
  ],
  "abstract_text": [
    "<S> this paper studies the synchronization problem of a dynamical network with event - based communication , where each node communicates to its neighbours only when an event - triggering condition is fulfilled . </S>",
    "<S> firstly , two estimators are introduced into each node , one to estimate its own state , and the other to estimate the average state of its neighbours . </S>",
    "<S> then , with the assistance of the two estimators , a distributed event - triggering rule with a dwell - time is designed such that the network achieves synchronization asymptotically , and meanwhile no zeno behaviour occurs . </S>",
    "<S> the designed event - triggering rule only depends on the information that each node can obtain , and thus can be implemented in a decentralized way . </S>",
    "<S> the quantization effects are also considered , and the logarithmic quantizer is used to achieve asymptotic synchronization . </S>",
    "<S> finally , numerical examples are given to show the effectiveness of the proposed results .    distributed event - triggered control , asymptotic synchronization , dynamical networks , logarithmic quantizer . </S>"
  ]
}
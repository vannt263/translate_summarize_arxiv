{
  "article_text": [
    "hash table is a common data structure used in large set of data storage and retrieval .",
    "it has an o(1 ) lookup time on average , but the worst case lookup time can be as bad as o(@xmath1)(@xmath1 is the size of the hash table )",
    ". such a time variation is essentially caused by possibly many collisions during keys hashing . in this paper",
    ", we present a set of hash table schemes called cascade hash tables which consist of several levels(@xmath2 ) of hash tables with different size .",
    "after constant probes , if an item ca nt find a free  cell\"(slot ) in the first level table , it will try to find a cell in the second level , or subsequent lower levels . with this simple strategy",
    ", these hash tables will have descendent load factors , therefore descendent collision probabilities .",
    "so finally the probability that the item can not find an empty cell in any hash table is slight .",
    "this enables the whole hash table to reach a high load factor with constant probes in random generated test set , before a _",
    "crisis_(the situation that when an item comes , we can not find a free slot in limited probes in any hash table ) happens .",
    "a hash table is a data structure that associates keys with values .",
    "the primary operation it supports efficiently is a _",
    "lookup _ : given a key ( e.g. a person s name ) , find the corresponding value ( e.g. that person s telephone number ) .",
    "it works by transforming the key using a _ hash function _ into a hash  a number that the hash table uses to locate the desired value .",
    "a hash function is a many - to - one mapping , which maps keys in a large domain to hashes in a relative small range . so collisions among keys which are mapped to the same hash are inevitable .",
    "differences among hash table schemes lie in hash function and collision resolution strategy .",
    "generally a string type key is hashed into an integer by a hash function , then mapped into an index not bigger than the table size(a common method is to compute the hash value modulo the table size .",
    "there are various hash functions on strings , such as crc , _",
    "lookup2 _ and md5 . as to integer type keys ,",
    "they are directly mapped into indices .      if two keys hash to the same index , the corresponding records can not be stored in the same location .",
    "so , if it s already occupied , we must find another location to store the new record , and do it so that we can find it when we look it up later on .",
    "the most popular collision resolution techniques are _ chaining _ and _ open addressing_.    in the chained hash table technique , each slot in the array references a linked list of inserted records that collide to the same slot .",
    "insertion requires finding the correct slot , and appending to either end of the list in that slot ; deletion requires searching the list and removal .",
    "this technique is intuitive and the performance degrades gracefully when the load factor increases .",
    "but if the record size is small , the overhead of the linked list is significant .",
    "additionally , traversing a linked list has poor cache performance .",
    "some popular hash table implementations , such as stl , use this technique .",
    "open addressing hash tables store the colliding records directly within the array .",
    "a hash collision is resolved by probing through alternate locations in the array(the probe sequence ) until either the target record is found , or an unused array slot is found , which indicates that there is no such key in the table .",
    "well known probe sequences include : linear probing , in which the interval between probes is fixed  often at 1 ; quadratic probing , in which the interval between probes increases linearly ( hence , the indices are described by a quadratic function ) ; double hashing , in which the interval between probes is fixed for each record but is computed by another hash function .",
    "any of these methods may probe indefinite number of locations , even as many as @xmath1 in the worst case !",
    "we call these methods _ unlimited_. a method is _ limited _ , if the number of probes can not exceed some limit .",
    "in the implementation of @xmath3-level cascade hash table , we have @xmath3 hash tables , and use limited double hashing in every level of table . in turn , the hash table size is half of its preceding hash table(the proportion @xmath4 is chosen empirically ) .",
    "we limit the total number of probes to @xmath5 .",
    "thus in every level , the probe number is @xmath6 . here",
    "@xmath3 is a factor of @xmath5 , so @xmath7 . if an item ca nt find a free cell in level @xmath8 in @xmath9 probes , it will probe in level 2 , and if still with bad luck , it turns to search lower levels .",
    "if a crisis happens , the hash table will be enlarged and rehashed .",
    "the lookup procedure is similar to the insertion procedure .",
    "it also takes not more than @xmath5 steps .    clearly , insertion and",
    "lookup both take at most @xmath5 probes , so the time complexity of cascade hash table is o(1 ) .    specially , when @xmath10 , it s the ordinary ( limited ) double - hashing scheme . when @xmath11(one probe every level )",
    ", it s the  multilevel adaptive hashing \" scheme presented by paper@xcite .",
    "experiments show that it is not the best configuration .",
    "are all occupied ) ]",
    "by experiments on random data sets , we get the result as in table [ result1 ] , [ result2 ] and [ result3 ] .    .experiment result 1 [ cols=\"<,^,^,^,^,^,^ \" , ]     from these tables , we can see that in a certain level of a multiple level hash table , the load factor decreases drastically .",
    "take three - level hash table for example , when hash tables are  full\"(not really full , but we can not insert the coming new item into it in limited probes ) , @xmath12 is around @xmath13 , @xmath14 is @xmath15 , but @xmath16 is only around @xmath17 .",
    "so if a new item comes , the _ crisis rate_(the probability that the item ca nt find an empty room in any hash table ) is not bigger than @xmath18 .",
    "given a one level hash table , assume it has a load factor of @xmath19 , then it will take at least @xmath20 probes on average to obtain the same small crisis rate(which ensures a high load factor ) as 3-level cascade hash table .",
    "but cascade hash table just makes @xmath5 probes meanwhile .    to our surprise",
    ", the space efficiency of @xmath3-level hash table does nt increase monotonically with @xmath3 . at @xmath21 ,",
    "the space efficiency hits the climax , then falls down at @xmath11 .",
    "in this paper , we introduce a series of hash table schemes  cascade hash tables .",
    "it uses @xmath3 levels of hash tables ; in every level , we use limited double hashing to make probes .",
    "smaller hash tables work as fail - safes of bigger hash tables . roughly speaking ,",
    "different tables are similar with sieves with holes in different shapes .",
    "we hope no object escape through these sieves . with more sieves ,",
    "the chance that an object is screened in some level is bigger .",
    "the idea is simple , but its performance exceeds the ordinary one level hash table dramatically when there are more than @xmath22 levels . by choosing @xmath21 , it s much better than the hash scheme proposed in paper@xcite .",
    "obviously , if we permit a larger total probe count , we can achieve higher load factor .",
    "but the average speed will be slower .",
    "so a user can choose an appropriate configuration which balances best between speed and space efficiency to him .",
    "12 andrei z. broder , anna r. karlin .",
    "multilevel adaptive hashing . in proceedings of the 1st acm - siam symposium on discrete algorithms ( soda ) , pp .",
    "43 - 53 , 1990 .",
    "bill mcquain .",
    "hashing , slides for class cs 2604 .",
    "http://courses.cs.vt.edu/~cs2604/summerii_2005/notes/c10.hashing.pdf thomas h. cormen , charles e. leiserson , ronald l. rivest and clifford stein .",
    "introduction to algorithms , second edition . the mit press ",
    "hash table \" entry in wikipedia ."
  ],
  "abstract_text": [
    "<S> in this paper , the author proposes a series of multilevel double hashing schemes called cascade hash tables . </S>",
    "<S> they use several levels of hash tables . in each table </S>",
    "<S> , we use the common double hashing scheme . </S>",
    "<S> higher level hash tables work as fail - safes of lower level hash tables . by this strategy </S>",
    "<S> , it could effectively reduce collisions in hash insertion . </S>",
    "<S> thus it gains a constant worst case lookup time with a relatively high load factor(@xmath0 ) in random experiments . </S>",
    "<S> different parameters of cascade hash tables are tested . </S>"
  ]
}
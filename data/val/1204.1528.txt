{
  "article_text": [
    "with the affordable prices of gps - enabled mobile devices and the success of social networks , location - based social media has become increasingly popular in recent years .",
    "users can upload content , e.g. , photos , videos , and text , and annotate that content with geographical identification metadata , typically known as _",
    "geotags_. geotags act as geographic indexes helping users to organize and retrieve location - specific information .",
    "foursquare , as an example , is a location - based service where users endorse and share tips about visited points of interest ( poi ) .",
    "it reached 725 thousand registered users and 22 million check - ins ( i.e. endorsed pois ) in 2010 .",
    "recommender systems ( rs ) are among the best known techniques for helping users filter out and discover relevant information in large data sets . in the typical scenario , rs algorithms exploit user - item matrices representing user preferences for items , e.g. , the rating history of purchased books in amazon , with the aim of recommending the items most likely to be relevant to the user . while most of the rs work to date has ignored the locations where users demonstrated interest for an item , there are many scenarios in which the geographic context of an item has a direct influence on the preferences of the user for that item .",
    "mao et al .",
    "@xcite , for example , showed that foursquare users prefer pois that are nearby the pois they already visited in the past , while @xcite showed that panoramio users who took pictures in nearby locations in the past , tend to share similar preferences of geographic regions in the future .",
    "efficient extraction and representation of location - specific user preferences are thus essential to decide on what item to recommend .",
    "location - aware recommender systems suggest relevant geotagged items for a given user within a declared geographic area .",
    "relevance here can assume different notions , depending on the geographic constraints imposed by the user .",
    "for example , a user may be interested in objects nearby his previous , current , or future location within a given radius .",
    "for example , a first time user visiting the stanford university campus in palo alto , us , might be interested to know what is worth visiting inside the campus , while a second time visitor may want to know what else is worth visiting . each of these scenarios can lead to various definitions of user preference , hence it is important to know which definition works best for each scenario .",
    "the literature concerning location - aware recommender system is still sparse , where the methods are ad - hoc and can not be easily changed to meet the different recommendation scenarios outlined above ( e.g.  @xcite ) .    in this paper",
    "we propose a relational graph for capturing the geographic context of users that suits all the aforementioned recommendation scenarios .",
    "we introduce several strategies to represent location - specific user preferences in the graph and show how to derive many recommendation algorithms , including ensembles of them , by only changing the definition of the edge weights .",
    "our contributions are as follows :",
    "1 .   we propose a new model for geotagged data that is able to capture both the geographic context of users and their preferences for objects within the declared geographic context .",
    "we introduce new similarity measures that take into account the spatial decisions of users .",
    "we propose a recommendation algorithm based on a relational neighbor graph , that derive many recommendation algorithms and ensembles of them , as special cases , by only requiring changes in the definition of the edge weights .",
    "4 .   finally , we conduct experiments using two datasets in various recommendation scenarios , including cold - start ones , and provide empirical evidence that many of the proposed algorithms outperform existing location - aware recommender algorithms .",
    "the rest of the paper is organized as follows .",
    "section  [ sec : problem ] introduces the problem setting .",
    "section  [ sec : approach ] presents our relational graph representation of the data , weighting schemes for capturing user geographic preferences , and a recommendation algorithm based on relational neighbors",
    ". section  [ sec : experiments ] presents the experimental setting and evaluation .",
    "section  [ sec : related_work ] describes related work , and section  [ sec : conclusions ] concludes the paper and discusses future work .",
    "the recommendation scenario is as follows .",
    "a user specifies the geographic region of interest , e.g. , a city or a region in that city , and the recommender engine suggests items within the declared geographic region that are likely to be relevant to the user .",
    "so , let @xmath0 be the set of users , @xmath1 the set of regions denoting geographic contexts , and @xmath2 the set of geotagged items . notice that what is meant by a region is application dependent since regions can assume different geographic shapes , such as point coordinates , circles , lines , and polygons . in this paper we only consider implicit feedback data , i.e. , the set @xmath3 of ternary relations between users , geographic contexts , and geotagged items .",
    "the task is then to find a prediction scoring function @xmath4 that predicts a preference score for items within certain geographic regions , given a target user .",
    "now , for a given user @xmath5 , and a given geographic context @xmath6 , the topn recommendations can be computed by @xmath7 where @xmath8 denotes the topn items to be recommended and @xmath9 the set of items within the geographic context @xmath10 . for convenience ,",
    "we also define @xmath11 as the set of items of user @xmath5 in a given geographic context @xmath6 .",
    "relational classification refers to an active area of machine learning where classifiers usually consider , additionally to the typical attribute - value data of objects , relational information .",
    "a scientific paper , for example , can be connected to another paper that has been written by the same author or because they share common citations .",
    "it has been shown that in many classification problems , relational classifiers outperform purely attribute - based classifiers  @xcite .",
    "in particular , macskassy and provost  @xcite showed that simple relational neighbor - based techniques , besides requiring low computational costs , perform competitively to , and in some cases even outperforms , more complex relational methods such as probabilistic relational models and relational probability trees .",
    "the basic idea is that the classification of a target instance solely depends on the class labels of related instances of the same type .",
    "since geotagging data is inherently relational , we propose to capture the geographic context of users and items by a relational graph , which , as a side effect , gives us many tools from relational classification that can be directly applied to the location - aware recommendation problem .    in order to easily use neighborhood - based classification methods , similarly to  @xcite",
    ", we adopt a homogenous view of the relations in the data . in a homogeneous view",
    "we have only one entity type , such that , there is a set of target entities @xmath12 and relations @xmath13 between them .",
    "however , as we saw in section  [ sec : problem ] , geotagging data forms a set @xmath14 of ternary relations between three different types of entities .",
    "therefore , we first need to convert these ternary relations into the desired homogeneous relations .",
    "we do this as follows  .",
    "first let @xmath15 denote the set of all distinct user / geographic context combinations in @xmath14 .",
    "we now propose to interpret @xmath14 as a graph @xmath16 , where @xmath17 is the set of vertices and @xmath18 the set of edges .",
    "we assume that there is an edge between two vertices if they share the same geographic context , i.e. , @xmath19 for convenience , let @xmath20 and @xmath21 denote the geographic context and the user of node @xmath22 respectively . in other words , we assume that users who share the same geographic region are related to some extent .",
    "now suppose that john is a first time visitor in rio de janeiro , brazil , and wants to know from other people who already have been in rio which places are worth visiting there .",
    "to continue our example , we denote the pair john / rio by a colored node in the graph of figure  [ fig : graph ] , i.e. , the target node for which we want to compute recommendations .",
    "john is denoted as @xmath23 and rio as @xmath24 respectively , and the other nodes connected to it contain the users who already have been in rio . for computing recommendations ,",
    "we just need to go through the items of the neighbors and define some selection criterion on which items to recommend .",
    "this idea assumes that entities related to each other , in this case users sharing the same geographic context , are similar and tend to select the same items .",
    "notice that the strength of the similarity depends on the size of the geographic region being considered .",
    "if the declared geographic context is a small region , say the copacabana beach in rio de janeiro , then it is more likely that users within this area will be more strongly related to each other than users sharing larger geographic contexts , such as the whole country of brazil .",
    "we can alleviate these effects by defining appropriate weights to each relation , as we will see next .          in this section we present several weighting strategies for the edges of the relational graph .",
    "and as we will see in the next section , each weighting scheme leads to a specific recommendation algorithm , without , however , the need to change the overall algorithm .",
    "[ [ uniform - weighting ] ] uniform weighting + + + + + + + + + + + + + + + + +    here the same weight value is assigned to each edge ( @xmath25 in our case ) , denoting that each neighbor is of the same importance to the target user .",
    "therefore , the weight @xmath26 for any edge @xmath27 , is defined as @xmath28 .",
    "the computational cost for assigning uniform weights to the relations of a target node @xmath29 is in the order of @xmath30 , i.e. , a linear scan in the neighbors of @xmath29 , here denoted by @xmath31 .",
    "[ [ correlation - weighting ] ] correlation weighting + + + + + + + + + + + + + + + + + + + + +    for two nodes @xmath32 , we can represent @xmath29 and @xmath33 as profile vectors , where each component of the vector is a geotagged item and the values denote the preference of a user for an item , i.e. , @xmath34 we can either construct this vector solely based on the items of the geographic context of interest , or we could consider the items of all geographic contexts .",
    "the assumption is that users who have selected the same items within the same geographic contexts are more similar than users who did not .",
    "if a user declared interest for some geographic context for which he has not yet selected any item , it will not be possible to compute any correlation similarity with other users , unless we build the profile vectors considering the items of other geographic contexts .",
    "the edge weight between two nodes is finally computed by applying a correlation metric between the desired nodes profile vectors , which in our case , is the cosine similarity : @xmath35    the computational cost for assigning cosine similarities to the relations of a target node @xmath29 is in the order of @xmath36 since we need to compute @xmath37 similarities , each requiring @xmath38 operations .",
    "[ [ geographic - similarity ] ] geographic similarity + + + + + + + + + + + + + + + + + + + + +    we can use the geographic distances between users items to define the strength of their relation .",
    "the assumption is that users who select items nearby the items of other users should be closely related .",
    "therefore , for defining the weight between two nodes @xmath32 through geographic similarity , we first calculate the geographic centroids of the set of items of users @xmath39 and @xmath40 . for computing the geographic centroid of a given user @xmath5",
    ", we sum up the coordinates of each geotagged item of user @xmath41 within the declared geographic context @xmath10 , i.e. , the items in the set @xmath42 , and divide the resulting sum by the number of items in the set @xmath43 where @xmath44 returns the latitude / longitude coordinate used to geotag item @xmath45 .",
    "now , the geographic distance between @xmath46 and @xmath47 centroids is given by any of the many existing functions for calculating geodetic distances between latitude / longitude coordinates , e.g. the haversine formula .",
    "here we denote such a function by @xmath48 where @xmath49 and @xmath50 are two coordinates . finally , we only need to turn the distance into a similarity and bound it to the range @xmath51 $ ] , which is done as follows @xmath52 where @xmath53 is the maximal possible distance between any points in the region of interest and @xmath54 is the geographic centroid of the set of items of user @xmath41 .",
    "in other words , when the distance between the items of two users is small , their similarity tend to @xmath25 , and is @xmath55 when the distance equals @xmath56 .",
    "figure  [ fig : geo_sim ] illustrates this idea .",
    "noticed that for this to work , we are assuming that users tend to form geographic clusters among the selected items .",
    "this was empirically observed in  @xcite by showing that foursquare users tend to check - in to pois that are nearby the pois they have already visited .",
    "the computational cost of this weighting scheme is in the same order as the _ correlation weighting _ above .    , @xmath57 , @xmath58",
    "are represented by triangles , circles and rectangles respectively .",
    "centroids are represented by `` x '' and distances by dashed lines .",
    "thus , @xmath58 would be regarded as more similar to @xmath23 than @xmath57 . ]",
    "[ [ partonomy - based - similarity ] ] partonomy - based similarity + + + + + + + + + + + + + + + + + + + + + + + + + +    the different granularities between geographic contexts can be represented by a hierarchical _ partonomy _ , i.e. , a graph @xmath59 where vertices are represented by geographic contexts and each edge @xmath60 represents a part - of relation between two geographic regions  @xcite . for example , a poi is a part of a city , a city is a part of a state , a state is a part of a country , etc .",
    "matyas et al .",
    "@xcite proposed several similarity measures for capturing user similarities with respect to specific levels of a weighted geographic partonomy .",
    "the idea is that if two users are not found to be similar in a lower level of the hierarchy , they may , eventually , be found to be similar in a higher level .",
    "for example , even if two users did not visit the same places in some city , they still can be considered to be similar since they have visited the same city .",
    "we can use these measures , together with a partonomy , to weigh the relations in our relational graph .",
    "here we just present the best performing measure reported in  @xcite .",
    "the similarity of two users @xmath61 with respect to node @xmath10 is calculated as follows    @xmath62    where @xmath63 and @xmath64 denote the sets of children nodes of @xmath10 in which user @xmath41 and @xmath65 selected items respectively .",
    "the similarity is weighted by the function _ information _ , which can be seen as the inverse of the popularity of a node .",
    "the assumption is that users sharing less popular nodes are more similar than users sharing more popular ones  @xcite .    now , for computing the similarity of two users @xmath61 with respect to a certain partonomy layer @xmath66 ,",
    "the following formula is used @xmath67 where @xmath68 is the set of nodes in the @xmath66-th layer of the partonomy .",
    "this measure was named _",
    "two - layer similarity _ in  @xcite because when computing the similarity of two users in a certain layer , the measure uses the layer immediately below .    returning the discussion to the weighting of the edges in our relational graph",
    ", we can now define the weight of a certain edge @xmath32 in terms of the _ two - layer similarity _",
    ", i.e. , @xmath69    this similarity can be quite expensive to compute , given all the necessary steps described above for weighting the partonomy . even assuming that the weighted partonomy is given , the complexity for computing the weight between @xmath29 and all its neighbors is still higher than for the other similarities .",
    "the computational cost is in the order of @xmath70 where @xmath71 is the set of children nodes of the @xmath66-th layer , since for each neighbor , we need to go through all the locations @xmath10 in the @xmath66-th layer of the partonomy , for each location go through all its children , and finally for each child we need to perform @xmath38 operations .",
    "now , we have all the components for deriving a location - aware recommendation procedure .",
    "algorithm  [ algo : location ] describes the overall recommendation process .",
    "it receives as input a weighted graph @xmath72 , a user / geographic context pair denoted by @xmath29 , for which we want to generate recommendations , and the number @xmath8 of recommendations to be returned .",
    "the algorithm iterates through the neighbors of @xmath29 ( line 3 ) , denoted by @xmath31 , and for each neighbor , it iterates through the items within the geographic context of interest ( line 4 ) and accumulates weights in the array _ scores _ , that is indexed by items .",
    "finally , it sorts the scores in descending order of weights and presents the top-@xmath8 geotagged items that the target user has not already selected .",
    "note that if we define all weights to 1 , we end up recommending the most popular items within the geographic context of interest . or if we decide to weigh edges according to the similarities presented in section  [ sec : weight ] , we end up with many flavors of collaborative filtering - based algorithms . assuming that the weighted relational graph is given , the complexity of this algorithm only depends on the computation of a weighted sum of geotagged items , which means @xmath37 passes in the set of items @xmath2 .",
    "hence , the complexity is given by @xmath73 .",
    "* input : * @xmath74 , @xmath22 , @xmath8 + * output : * list of topn recommendations + @xmath75\\leftarrow \\textit{scores}[i ] + w(v , v')$ ] + @xmath76 $ ] +    [ algo : location ]",
    "in this section we describe our two datasets , geotagged photos from panoramio , and print jobs from the hp eprint mobile print location service ; the evaluation protocol adopted ; and the results for each dataset .",
    "we considered three different recommendation scenarios .    in the first scenario ,",
    "we hide all the geotagged items of each test user in a geographic context , and use the remaining data for trying to predict the removed items .",
    "this corresponds to a cold - start scenario where a user has not selected any item in the geographic context of interest .",
    "we will refer to this scenario as _ leave - all - out_.    in the second scenario , we remove some geotagged items for each test user , 4 photos in panoramio and 1 printer provider in eprint , and use the remaining data for predicting the removed items .",
    "this scenario represents those users who already selected some items in a given location but want to know what other items are worth selecting in this location .",
    "we will refer to this scenario as _ leave - some - out _    in the third scenario , we have a mix of both scenarios , i.e. , some fraction of the users are first time users and the other fraction already have selected some items in the location of interest .",
    "this corresponds to a more realistic scenario , and to the best of our knowledge , this is the first time location - aware algorithms are evaluated in this kind of scenario .",
    "we will refer to this scenario as _ leave - some / all - out _      panoramio is a photo - sharing website from google where users can upload , geotag , and retrieve photos of landmarks .",
    "each photo in panoramio is georeferenced using latitude and longitude information .",
    "similarly to  @xcite , we assume that if a user takes a picture in a specific location , then he has some interest in that location . as geographic context of interest",
    "we have chosen the city of rio de janeiro , which is one of the top touristic places in brazil , so , it has a large set of photos .",
    "[ [ data - collection - and - preparation ] ] data collection and preparation + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    in order to retrieve the set of photos taken in rio , we did a spatial search for photos inside the bounding box of rio using the data access api of panoramio .",
    "we then iterated through each photo in the result set , and retrieved the users who took these photos . for each of these users",
    ", we then retrieved the other locations where they took photos , as well as the users and photos in those locations .",
    "then we removed the cities with too little activity from users who also visited rio .",
    "approximately the top three cities in all the crawled states were kept in the evaluation set .",
    "we used the gazetteer of hp gloe to obtain the place names .    in order to use the _ two - layer - similarity _ weighting scheme presented in section  [ sec : weight ]",
    ", we built a geographic partonomy , and similarly to  @xcite , we worked with three countries ( brazil , chile , and usa ) as high level nodes , states and cities as intermediary nodes , and geographic clusters as leaf nodes . our data set contains 35,920 photos ( 4,906 from rio ) and 7,048 users in total .",
    "in panoramio the geographic items are represented by latitude and longitude coordinates , hence , it is very difficult for two users to take a picture in the exact same location .",
    "therefore , we adopted the same approach as in  @xcite , where the authors used geographic clusters to represent geographic items .",
    "so , instead of recommending individual point coordinates , we recommend regions where users may be interested in taking photos . for computing the clusters , we used the dbscan  @xcite algorithm with the following parameters : @xmath77 km and @xmath78 .",
    "the @xmath79 parameter was set to 1 km , as we assume that a radius of 1 km from a given photo is sufficient to establish a geographic similarity between photos , e.g. , photos taken at the university of stanford campus .",
    "we tested to set @xmath80 meters without any significant differences in performance , so we do not show those results here . also , the minimum number of points to form a cluster was set to 3 , in order to establish popularity of a given poi .",
    "we computed 1,187 clusters , 221 of which are in rio .",
    "[ [ evaluation - protocol ] ] evaluation protocol + + + + + + + + + + + + + + + + + + +    for testing the algorithms , we considered the dense part of the data , i.e. , only the users who have taken at least 5 photos in rio ( see table  [ tab : dataset ] ) .",
    "for the _ leave - some - out _ and _ leave - some / all - out _ scenarios , we generated 5 random splits of training / test sets and took the average precision and recall on top-@xmath81 recommendation lists over all splits .",
    "we have a hit every time a hidden photo is found to belong to some of the recommended geographic clusters .",
    "whenever cf is not able to fill the recommendation list up to 10 , we fill up the list with the most popular items that are not already in the recommendation list .    .panoramio",
    "data for rio de janeiro [ cols=\">,>,>\",options=\"header \" , ]     [ [ algorithms ] ] algorithms + + + + + + + + + +    we have used several weighting schemes for our relational graph , which resulted in the following recommendation algorithms :    * * most popular ( mp ) : * recommends the most popular geographic clusters in rio . for doing that",
    ", we just apply uniform weighting ( see section  [ sec : weight ] ) to the graph in algorithm  [ algo : location ] . *",
    "* intra - cluster ( ic ) : * uses the geographic similarity defined in section  [ sec : weight ] for defining intra - cluster similarities between users .",
    "the idea is as follows .",
    "the weight of any edge @xmath32 is now calculated by summing up @xmath82 for all clusters where @xmath39 and @xmath40 have photos , and dividing the resulting sum by the total number of clusters .",
    "after that , we again just need to plug the weighted graph into algorithm  [ algo : location ] for computing recommendations . * * collaborative filtering ( cf ) : * this is the geographic version of the classic user - based collaborative filtering algorithm .",
    "we use the correlation weighting scheme defined in section  [ sec : weight ] where profile vectors components are the geographic clusters where users took pictures , within and out of the context of interest . *",
    "* two - layer ( tl ) : * this is the algorithm originally introduced in  @xcite .",
    "we weigh the relational graph with the _ two - layer similarity _ and plug it into the recommendation algorithm . * * correlation + two - layer ( cf - tl ) * : we found empirically that tl works best for cold - start scenarios , while cf outperforms the other algorithms for non cold - start scenarios ( see figures  [ fig : some_out ] and  [ fig : all_out ] ) .",
    "this gave us the insight to propose a weighting combination strategy where we weigh each relation differently according to the case presented .",
    "if the target user is a cold - start user , we weigh his relations with the _ two - layer similarity _ , if not , we use the _ correlation weighting_. the flexibility for combining different weighting schemes in such an easy way is one of the main advantages of our approach .",
    "[ [ results ] ] results + + + + + + +    figure  [ fig : some_out ] depicts the results for the _ leave - some - out _ scenario .",
    "notice that when there is enough data available , cf outperforms all the other methods .",
    "the intra - cluster recommender , although worse than cf and tl , is better than mp in all cases .",
    "this indicates that the geographic similarity indeed is able to capture some preferences of the user , under the assumption that users tend to like the items of other users that are nearby the items they have selected in the past .",
    "figure  [ fig : all_out ] shows the results for the _ leave - all - out_. notice that tl is the winner in this scenario .",
    "this is in line with the results of  @xcite , where they showed that geographic partonomies can help to improve the recommendations in cold - start scenarios .",
    "notice that since we remove all the photos of all test users in the context of interest , we just have one possible split of training / test , and thus can not compute standard deviations and plot error bars .            in figure",
    "[ fig : mix_05 ] we show the results of the _ leave - some / all - out _ scenario when 50% of the test users are cold - start users . in this case , the combination method cf - tl is slightly better , both in precision and recall , than the other methods .",
    "but when 70% of ther users are cold - start users ( see figure  [ fig : mix_07 ] ) the superiority of cf - tl becomes more evident .",
    "we also evaluated this scenario when 30% of the users are cold - start users , but since there was no significant differences in performance in comparison to 50% of cold - start users , we do not show those results here .",
    "the hp eprint mobile print location ( mpl )   service allows smartphone users to print documents , photos , web pages and emails directly to public print providers , such as business centers at hotels and airports , and dedicated copy and print service stores .",
    "users can query for providers near their current location and then submit a print job upon which a pickup code is generated .",
    "this code can then be used in the store to obtain the printout .    [ [ data - preparation ] ] data preparation + + + + + + + + + + + + + + + +    our dataset contains a 5-month trace of all print jobs sent through the service . to protect business sensitive information",
    "the users as well as providers were anonymized .",
    "furthermore , the volume was obfuscated using a bootstrap inspired sampling algorithm that takes uniform random samples with replacement of print jobs from the original dataset and replays them with the original timestamp randomly modified up to one week from the original job submission .",
    "we sampled 100k print jobs in this way , and then extracted all the entries that occurred in manhattan ( about 2,580 ) .",
    "each entry comprises the user i d of the user submitting the print job , the provider i d of the provider receiving the print job , the timestamp of the print job and the latitude and longitude of the print provider location .",
    "[ [ evaluation - protocol-1 ] ] evaluation protocol + + + + + + + + + + + + + + + + + + +    here the geographic items are print providers and in contrast to panoramio , the pois are well defined , and therefore we do not need to compute geographic clusters .",
    "we chose manhattan as the geographic context of interest because of its large volume of printing activity .",
    "here we used the _ leave - one - out _ protocol , i.e. , for each user we randomly removed one of the items and used the rest for computing recommendations .",
    "we considered all the users who have used at least one print provider , i.e. , all users in manhattan , for our test set . due to the nature of the data set",
    ", we only evaluate the _ leave - some / all - out _ scenario , where some users are cold - start users and others not .",
    "furthermore , we ignore users for which the recommendation list is empty .",
    "since we only hide one photo , we do not compute precision , because this would be the same as recall up to a multiplicative constant .",
    "thus , we only compute the average recall over ten random splits of training / test . again , due to the nature of this dataset we only evaluated the mp and cf algorithms for top-@xmath81 recommendations . whenever cf is not able to fill the recommendation list up to 10 , we fill up the list with the most popular items that are not already in the recommended list .",
    "[ [ results-1 ] ] results + + + + + + +    figure  [ fig : eprint_results ] shows the results for mp and cf in eprint .",
    "the error bars represent one standard deviation .",
    "we can see that the most popular item algorithm outperforms the collaborative filtering algorithm consistently , in particular for long recommendation lists . given the relative short period this service has been on the market it is dangerous to draw too many conclusions from this behavior , but there are two lessons to be learned from this result .",
    "first , we could easily adapt our algorithm to generate useful recommendations for a use case vastly different than the panoramio application , by just simply applying a different weighting scheme .",
    "second , a very simple popularity - based recommendation engine can do very well , and deploying sophisticated collaborative filtering techniques may not always be the best choice .",
    "related work falls into three broad categories : relational classification and similarity measures , location - aware methods , and methods focusing on improving the computational scalability of the model building and execution phases .",
    "[ [ relational - classification - and - similarity - measures ] ] relational classification and similarity measures + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    relational classification has been applied to areas where entities are linked in an explicit manner , like hypertext documents , such that the class of a target instance only depends on the class of its related instances  @xcite . in  @xcite we presented a relational neighbor classification approach in the ecml / pkdd discovery challenge 2009 , which was about tag recommendations . similarly to that work , in this paper we formulate the recommendation problem in a relational neighbor framework where geographic contexts link entities represented by user / location pairs .    in  @xcite a new similarity measure for computing location recommendations based on a non - overlapping hierarchical taxonomy of locations",
    "is presented .",
    "the key idea is that co - activity in locations can be better captured if you zoom out to larger and larger locations .",
    "similar to our work they use a panoramio data set to evaluate their algorithm .",
    "however , their model assumes a cold - start user is making the query , i.e. a user who has no trace in the geographic context of the query .",
    "the reliance on a place taxonomy is also more restricting than our general model .",
    "jeh and widom define simrank in  @xcite .",
    "the simrank similarity measure is as the name suggests highly influenced by the more famous pagerank  @xcite algorithm .",
    "the general idea is that `` two objects are similar if they are referenced by similar objects ''  @xcite .",
    "this definition recursively propagates similarity through a relational graph to leverage structural context in addition to the more traditional use of object content and attribute information . in our work",
    "akin to the model used in  @xcite , we also have a recursive , relation - based definition of similarity but in the form of hierarchical geographic contexts . for faster computation",
    "we simplify the similarity model to not be recursive between leaf - nodes within the same geographic context in our graph .",
    "our evaluations show that this can be done without any loss of accuracy if the user who requested the recommendation already has an activity trace within the geographic context for which the recommendation is sought .",
    "minkov and cohen  @xcite also explore relational properties among objects to compute similarity scores .",
    "they focus on the problem of effectively searching in graphs comprised of interrelated objects of various types .",
    "they propose effective random - walk based procedures to evaluate the personal pagerank measure  @xcite , a measure that takes into account the scope of the query in addition to the well - known random surfer assumption of the original pagerank algorithm .",
    "[ [ location - aware - methods ] ] location - aware methods + + + + + + + + + + + + + + + + + + + + + +    in  @xcite a standard user - based collaborative filtering approach is extended with a novel mechanism of geographic influence based on a statistical model of how likely a user is to check - in to two places based on their distance .",
    "the geographic model is a distributional assumption ( power law ) fitted to real data sets from two popular check - in services .",
    "a number of studies have looked at timestamped gps traces to predict future locations within very restricted geographic regions  @xcite .",
    "markov models and tensor factorization models are fit to the data and non - personalized predictions of the most likely next location or the most likely activity given a location and time are produced .",
    "there is a lot of novel work on automatically detecting geographic context in these papers but the general approach can not be replicated easily in our scenario since we do not have the same luxury of rich traces as we mainly focus on implicit feedback as input . relying on gps traces is furthermore a privacy concern and has scalability and power consumption implications .",
    "we produce more personalized recommendations given user - user similarities as opposed to just looking at the most popular or most frequent behavior .",
    "furthermore large markov models and tensor factorization algorithms tend to be very costly to compute , which would therefore need to be done in an off - line setting whereas we also target real - time recommendations .",
    "bayesian networks have also been studied to model and learn patterns in location , time and weather contexts for individual users in  @xcite .",
    "however , compared to our model these models tend to be complex and require expert human knowledge to construct , and furthermore they are not tractable .",
    "@xcite applies a center of mass model to detect and recommend locations and pois .",
    "this work was before the check - in systems era so now we could just more easily query the check - in services for this information . in  @xcite user - user based cf with location pre - filtering",
    "is employed in an explicit voting scenario .",
    "the cold start problem is solved by generating random recommendations using pseudo users .",
    "we address the problem by incorporating out - of geo context similarities for in - context recommendations which is less ad - hoc .    in our previous work in  @xcite we studied popularity inferred recommendations based on location , friends and tag prefiltering using both explicit and implicit feedback .",
    "in this work we extend that model to provide personalized recommendations similar to the work in  @xcite but with a new model that incorporates location , and distance metrics directly in the evaluation graph as opposed to relying on ad - hoc and costly pre and post filtering .",
    "the geofolk system  @xcite was designed to take both geographic context and text features into account for various information retrieval tasks such as tag recommendation , content classification and clustering .",
    "experiments show that combining both textual and geographic relevance leads to more accurate results than using the two factors in isolation .",
    "although our methods and use case targets are quite different from this work , the empirical evidence of the influence geographic context has on information retrieval is promising and serves as motivation for our work .    [ [ computational - scalability ] ] computational scalability + + + + + + + + + + + + + + + + + + + + + + + + +    popular and accurate recommender system methods such as those based on matrix factorization can incure very high model building as well as execution overhead , in particular as more contextual factors beyond users and items are taken into account . as a result",
    "there have been many attempts at improving the computational scalability of pre - existing methods .    in  @xcite the general issue of complex and high - latency model building and execution for location - based recommendations is addressed . to achieve real - time performance  @xcite and  @xcite pre - filter based on location and  @xcite pre - filters based on friends to reduce the complexity of the models .",
    "as opposed to pre- or post - filtering context we make contextual paramaters an inherent part of our graph model to allow interesting combinations of various types of context in an efficient way .    in",
    "@xcite a fast context - aware recommendation algorithm is proposed that maintains the features of state - of - the - art multi - tensor matrix factorization while bringing down the complexity of the previously known algorithms from exponential to linear growth in problem size .",
    "the main idea is to solve the least - squares optimization problem for each model parameter separately .",
    "our method in contrast achieves scalability by not utilizing any complex matrix factorization .",
    "in this paper we introduced a relational graph for capturing the geographic preferences of users with the purpose of generating personalized recommendations in services with geotagged content .",
    "we also presented several weighting schemes for representing different types of user preferences in the proposed graph .",
    "furthermore , we propose a recommendation algorithm template that is sufficiently generic to derive many traditional and new location - aware recommendation algorithms , including combinations of them , by only requiring changes in the definition of the edge weights . assuming the graph is given , the algorithm requires modest computational effort since it runs linearly in the number of neighbors .",
    "we have tested the proposed algorithms with two real - world datasets , geotagged photos from panoramio and print jobs from the hp eprint mobile print location service , and showed how our model easily suits many different recommendation scenarios .",
    "we also gained insights about which notion of similarity works best for a set of scenarios .",
    "in cold - start scenarios a geographic partonomy seems to be a good alternative , whereas when there is enough data available the plain location - aware collaborative filtering algorithm yields the best result . in response to this finding , we proposed to combine a partonomy - based similarity measure with the cosine similarity by weighting individual relations in the graph according to the type of the user , i.e. , cold - start versus non cold - start . by doing this , we achieved better recall and precision in particular in scenarios where there are many cold - start users .",
    "as future work , we plan to incorporate temporal aspects in the model , such that the items to be recommended match the temporal context of the user .",
    "for example , it may not make as much sense to recommend ski resorts in new york during the summer as it would to make the same recommendation during the peak winter season .",
    "another natural extension of our work would be to assign the weights in our graph based on the strength of the social ties between the users , e.g. based on their declared or implied social networks .",
    "finally , we plan to investigate machine learning approaches for learning optimal weights based on the location - aware recommendation task at hand .",
    "this work was supported by a cooperation with hewlett - packard brasil ltda . using incentives of brazilian informatics law ( law no .",
    "8.2.48 of 1991 ) .",
    "we would also like to thank christina aperjis , sitaram asur and mao ye for insightful comments on our work .",
    "s.  brin and l.  page .",
    "the anatomy of a large - scale hypertextual web search engine . in _ proceedings of the seventh international conference on world wide web 7 _ , www7 ,",
    "pages 107117 , amsterdam , the netherlands , the netherlands , 1998 .",
    "elsevier science publishers b. v.    m.  brunato and r.  battiti .",
    "pilgrim : a location broker and mobility - aware recommendation system . in _",
    "percom 03 : proc .",
    "of the first ieee international conference on pervasive computing and communications _ , pages 265. ieee computer society , 2003 .",
    "i.  burbey and t.  l. martin .",
    "predicting future locations using prediction - by - partial - match . in _",
    "melt 08 : proc .",
    "of the first acm international workshop on mobile entity localization and tracking in gps - less environments _ , pages 16 .",
    "acm , 2008 .",
    "t.  horozov , n.  narasimhan , and v.  vasudevan .",
    "using location for personalized poi recommendations in mobile environments . in _ proc .",
    "of the international symposium on applications on internet _ , pages 124129 .",
    "ieee computer society , 2006 .",
    "g.  jeh and j.  widom .",
    "simrank : a measure of structural - context similarity . in _ proceedings of the eighth acm",
    "sigkdd international conference on knowledge discovery and data mining _ , kdd 02 , pages 538543 , new york , ny , usa , 2002 .",
    "q.  lu and l.  getoor .",
    "link - based classification using labeled and unlabeled data . in _ proceedings of the icml workshop on the continuum from labeled to unlabeled data in machine learning and data mining _ , 2003 .",
    "c.  matyas and c.  schlieder . a spatial user similarity measure for geographic recommender systems . in k.  janowicz , m.  raubal , and s.  levashkin , editors , _ geospatial semantics _ , volume 5892 of _ lecture notes in computer science _ ,",
    "pages 122139 .",
    "springer berlin / heidelberg , 2009 .",
    "s.  rendle , z.  gantner , c.  freudenthaler , and l.  schmidt - thieme .",
    "fast context - aware recommendations with factorization machines . in _ proceedings of the 34th international acm sigir conference on research and development in information _ , sigir 11 , pages 635644 , new york , ny , usa , 2011 .",
    "t.  sandholm and h.  ung .",
    "real - time location - aware collaborative filtering of web content . in _",
    "carr 11 : proc . of the 2011 workshop on context - awareness in retrieval and recommendation",
    "_ , pages 1418 .",
    "acm , 2011 .",
    "s.  sizov .",
    "geofolk : latent spatial semantics in web 2.0 social media . in _ proceedings of the third acm international conference on web search and data mining _ , wsdm 10 , pages 281290 , new york , ny , usa , 2010 .",
    "m.  ye , p.",
    "yi , w .- c .",
    "lee , and d .-",
    "exploiting geographical influence for collaborative point - of - interests recommendation . in _",
    "sigir 11 : proc . of the 34th acm sigir conference_. acm , 2011 .",
    "( to appear ) ."
  ],
  "abstract_text": [
    "<S> with the increasing popularity of location - based social media applications and devices that automatically tag generated content with locations , large repositories of collaborative geo - referenced data are appearing on - line . efficiently extracting user preferences from these data to determine what information to recommend is challenging because of the sheer volume of data as well as the frequency of updates . </S>",
    "<S> traditional recommender systems focus on the interplay between users and items , but ignore contextual parameters such as location . in this paper </S>",
    "<S> we take a geospatial approach to determine locational preferences and similarities between users . </S>",
    "<S> we propose to capture the geographic context of user preferences for items using a relational graph , through which we are able to derive many new and state - of - the - art recommendation algorithms , including combinations of them , requiring changes only in the definition of the edge weights . </S>",
    "<S> furthermore , we discuss several solutions for cold - start scenarios . </S>",
    "<S> finally , we conduct experiments using two real - world datasets and provide empirical evidence that many of the proposed algorithms outperform existing location - aware recommender algorithms . </S>"
  ]
}
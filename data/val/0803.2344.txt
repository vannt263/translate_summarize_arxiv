{
  "article_text": [
    "modern methods in data analysis for high energy physics ( hep ) usually rely on learning algorithms such as neural networks .",
    "the popularity of the latter has led to many out of the box solutions that are easy to use and widely employed in the physics community ( e.g. the root based package tmva @xcite ) .",
    "however , it is often ignored that even the most advanced algorithms strongly depend on the quality of the input .",
    "if the input is poorly prepared , the performance will suffer as well .",
    "this lecture will present some basic means to prepare the input and evaluate the value of a feature .",
    "when the input is well prepared good classification results with simple classification schemes can often be achieved , some of which will be introduced here such as bayesian schemes and rule based classification .",
    "the advantages of using a simple algorithm is , that the resulting functions are easy to interpret , compared with complex schemes like neural networks or support vector machines .",
    "for example results of a rule based classification can be used and interpreted as a normal cut based analysis .",
    "this lecture will also present overtraining and performance evaluation as points that are common to all classification tasks .",
    "all of these are done with a special regard to the specifics of problems that are encountered in particle physics : outliers in the data caused by noise , training data not readily available and produced by simulations which are not always accurate . for further reading @xcite and @xcite are recommended .",
    "a typical problem at the track level in particle physics where statistical learning schemes are nowadays routinely employed consists of the classification of particles .",
    "the input to a classification algorithm is made up of an ordered set of attributes which characterize the event that should be classified .",
    "the terms feature and attribute may be used interchangeably .",
    "the features in particle classification problems usually consist of measurable quantities like energy loss and particle momentum .",
    "in addition features that incorporate prior knowledge about the process are important .",
    "this information usually follows from constraints given by the laws of physics .",
    "since the processes under consideration are governed by the laws of physics there is usually a lot of background knowledge , i.e. that the features can not have unphysical values .",
    "incorporating this kind of knowledge into a classification scheme is very difficult , but often improves a classifier considerably .",
    "it can be used to exclude noisy events . an easy way to incorporate prior knowledge",
    "is often to include the output of existing algorithms as a feature so that only corrections have to be learned . in this way experience",
    "already acquired can be used in a new approach , and combined with state of the art learning algorithms .      after the identification of the set of features @xmath0 that contains information about the class membership , the so called feature vector ( fv ) @xmath1 can be formed by ordering the features .",
    "the fvs of the instances of the classification problem exist in the feature space @xmath2 , a vector space of dimension @xmath3 , @xmath3 being the number of features .",
    "the output of a classification algorithm is 1 or -1 if the task is a two class problem . in that way",
    "it is a function @xmath4 , that maps the feature space onto @xmath5 .",
    "@xmath6 . this function defines a border in feature space .",
    "depending on the side of the border the instances are , the classifier assigns a class .",
    "the easiest kind of classification is of course linear classification where the borders are straight lines .",
    "this is the case of a cut based analysis .",
    "the advantage here is that the cuts are easy to interpret .",
    "every algorithm that can separate two classes can readily be used for multiple classes by building one classifier for each class . that is done by training the algorithm on the training set . if the algorithm has several parameters which have to be tuned , additionally the so called validation set is used , and the performance is tested on the test set ( see sect [ overtrainingsect ] ) .",
    "fig . [ fvlayout ] illustrates , that it is desirable to process the data such that the layout in feature space ( fs ) is reasonable .",
    "i.e. the topology in fs is simple .",
    "usually it is easy to improve the separability of the data by preprocessing , which often renders the use of a complex algorithm for classification superfluous .",
    "the following sections describe several simple actions which should be taken as a first step .",
    "an instance can only be classified or used for training of a classification algorithm , if it is an element of the feature space . therefore missing values , that would reduce the dimensionality of the feature vector have to be filled .",
    "an intuitive choice is to use values at the borders of the range of values .",
    "maintaining the view of a border in feature space that is defined by the algorithm , it is obvious that this is not necessarily appropriate . by choosing extreme values during training",
    "the problem occurs , that an algorithm tries to place the border such that this instance is correctly classified .",
    "especially if the border is a smooth function this can have many undesirable effects , in particular , since the knowledge of the unphysical nature of the value is available beforehand . during classification",
    "an extreme value can place the feature vector in a part of the feature space with few training examples which makes a correct classification harder .",
    "thus it is desirable to place fvs in densely populated part of the fs , such that the other features can determine the class , for example by using the mean value for the missing value .",
    "this is obviously the simplest choice .",
    "there exist more elaborate ways , e.g. estimating the value from the distribution of the rest of the fv by the expectation - maximization algorithm @xcite or taking the mean of the nearest neighbors in fs where the distance is measured by the other attributes .",
    "an introduction can be found in @xcite .",
    "many well - known data classification algorithms require discrete data .",
    "this includes trees but also rule finders and ultimately cut based analysis .",
    "given data that take on values from a continuous range , the question imposes itself , what the optimal way of discretization is , e.g. by trying different cuts . the straightforward way is to choose equal steps . if the data is not distributed equally in the given range , it is better to use a spacing such that the number of data points in each bin is similar .",
    "but since these cuts should be used in the end to distinguish one class of data from another it is advisable to choose the cuts in such a way that it is still possible to decide on the class membership given the discretized attribute .",
    "ideally that would mean , that in each bin there are instances of only one class .",
    "this might , however , generate too many possible divisions .",
    "common modern algorithms thus employ a strategy where the the data is sorted , the possible cut - points are determined , the data is divided at the optimal cut - point given a specific criterion and the discretization is halted if a stopping criterion is fulfilled .",
    "possible cut - points are the points between label changes , the optimality criteria can be similar to the feature selection criteria entropy and information gain that will be talked about later in this lecture , because the choice of discretization steps implies the choice of new features .",
    "the stopping criterion is often mdl ( minimal description length ) . for details on popular algorithms",
    "see : @xcite , @xcite .",
    "data normalization can be achieved simply by scaling the data to a specific range , e.g. [ -1,1 ] , or fixing variance to one and the mean to zero for each feature .",
    "another way is to use the softmax algorithms @xcite which scales data close to its mean value almost linearly , but includes a smooth nonlinearity further away .",
    "data normalization simplifies the search for optimal parameters during classification .",
    "widely different ranges for different features can lead to numerical instabilities during computation and different weights for different features .",
    "outliers are a problem often encountered in physics measurements .",
    "they can be caused , for example , by electronics noise or mislabeling .",
    "many outliers can significantly degrade the performance of classifiers , so treatment of those should be taken seriously . if an algorithm is used which scales the data automatically , the presence of outliers can concentrate the meaningful training examples in a small range of the allowed values .",
    "some strategies can be found in @xcite , however , it should be kept in mind that outlier treatment also depends on the problem at hand .",
    "this section will deal with some basic aspects in feature selection .",
    "the first topic that will be introduced is decorrelation for which the motivation is twofold .",
    "firstly , the assumption of statistical independence facilitates the classification task at hand .",
    "after decorrelation it is possible to consider each feature independently . simple bayesian schemes in principle even require independent features .",
    "secondly , strongly correlated features can be combined , which leads to a reduction of the dimensionality of the feature space . having this dimensionality as low as possible is very important , since the volume of the feature space grows exponentially with each dimension , which in turn means that the density of training examples reduces exponentially .",
    "of course this makes discrimination harder .",
    "in addition the computing time of algorithms grows strongly with the number of dimensions .",
    "this is called the curse of dimensionality . in this part of the lecture",
    "it will be shown how after decorrelation the variance of a feature can be used as a measure for the importance .",
    "other measures are the information gain and significance of a feature by @xmath7 which will also be introduced .",
    "the problem of reducing the dimensionality of the feature vector by making a minimal error is of interest for many applications .",
    "consequently , solutions for this problem have been developed .",
    "the most widely known is the principal component analysis or karhunen - loeve - transformation ( klt ) .",
    "@xcite the idea of",
    "the klt is that for the removal of a dimension with the minimal error , it is necessary to remove the directions in which the data has the minimal variance .",
    "if only linear transformations of the fs are allowed , the solution is unique .",
    "an example is shown in the data distribution in fig .",
    "[ kltpic ] . there",
    "the information is mainly contained in one direction . describing a two dimensional vector only with the component in the direction of the maximum variance leads to the smallest expected error which can be achieved with a linear transformation :    a feature vector is denoted by @xmath8 $ ] , the correlation matrix of the feature vectors by @xmath9 .",
    "then the unitary transformation @xmath10 is constructed such that the feature vector after application of the transformation becomes @xmath11 and the correlation matrix is given by @xmath12 .",
    "thus the feature vectors @xmath13 are now uncorrelated .    assuming that the eigenvalues are ordered according to their size",
    ", the klt has some desirable features ( proof given in @xcite ) :    * @xmath10 consists of eigenvectors of @xmath14 , * it can be shown that the expected error is @xmath15 , where the @xmath16 first dimensions , corresponding to the variances and eigenvalues of @xmath17 @xmath18 are omitted , * the projection onto a subspace spanned by the first @xmath16 eigenvectors is optimal , * the sum of the eigenvalues , which are the variances in the direction of the corresponding eigenvector , can be used as a measure of the information contained in this feature ,    and some undesirable :    * it is data dependent , since the covariance matrix has to be estimated from data . also , there has to be enough data to be able to invert the matrix , * there exists no fast algorithm , * it is not optimized for class separability , this is incorporated into fishers linear discriminant @xcite , which will not be discussed here .",
    "since the klt is not optimized for class separability it is ad hoc problematic to identify the direction of maximal variance with the direction of maximal importance .",
    "possibly the direction for optimal separability is one of small variance . however , even if the full dimensionality is kept , the decorrelation is already of importance for many tasks .",
    "for example maximum likelihood methods assume that the data is not correlated .",
    "but the klt is only one transformation that can make the feature space more amiable for classification .",
    "depending on the application , other representations may be useful .",
    "popular examples are the fourier transform or the haar transform which leads to robustness against transformations of the data by integration over these .",
    "the best feature for classification is obviously one that already determines the class membership of the example .",
    "then the information gained by knowing the correct classification equals zero , since the outcome is already known , whereas without knowing the value of the feature the information gain was big , since the outcome was completely uncertain .",
    "this is an extreme example , and in most of the cases finding a feature like this is impossible but the generalization demonstrates that the better the feature is , the more the outcome of the classification is fixed .",
    "the actual classification will not be surprising , if the probability of a specific outcome is already 99% after the knowledge of a certain attribute .",
    "this means that the quality of the attribute can be measured in a way by the uncertainty of the outcome after knowing the attribute compared to the one before knowing it . to put this in a less colloquial language , the significance of an attribute for classification can be measured by computing the information gained from the knowledge of the value of the attribute , the so called information gain .",
    "in information theory the information contained in the outcome of a random draw is defined as @xmath19 if there are @xmath3 possible outcomes @xmath20 , each with a probability @xmath21 . the unit of information is a bit . during classification a feature vector",
    "is randomly drawn and the class membership is to be determined .",
    "assuming there are only two different classes with equal probability ( @xmath22 ) the information contained in the outcome is thus @xmath23 this could be for example the toss of a fair coin .",
    "the information contained in the outcome is 1 bit , as expected .",
    "if the coin is not fair , and it is known for example that the outcome will be in 99% of the cases heads , the information contained in the outcome will be less @xmath24 and the information gain in bit of this knowledge will be @xmath25 .",
    "[ difffsdivides ] illustrates how the knowledge of one discrete attribute devides the feature space in different partitions in a classification problem .",
    "each of the partitions has a different probability for the two classes . before , without knowing anything , the information contained in the outcome of the classification of one of the examples was 1 bit , assuming that there are the same number of examples for both classes . with the prior knowledge of a feature , the partition of the feature space in which the example that is to be classified lies is known .",
    "depending on the distribution of classes in this partition the classification provides significantly less information . if the partition contains only one class , the information gained from knowing the class label in addition to the partition is even zero .    to compute the information left after knowing in which partition the example lies ( by knowing the attribute a )",
    ", the information still needed to determine the classification in each partition weighted by relative number of examples in this partition can be computed : @xmath26 for a set containing @xmath27 positive and @xmath3 negative examples the computation of the information is straightforward : @xmath28 thus the information gain of @xmath10 is @xmath29 .",
    "information gain is a popular measure for the significance of an attribute for classification , the higher the value the better the attribute .",
    "given a set of possible attributes , meaningless attributes can be excluded by computing the information gain for each .",
    "this value can also be used to order the attributes in the nodes of decision trees .",
    "another ansatz for the determination of the significance of an attribute is the question if the probability distribution function ( pdf ) changes significantly in one of the partitions of fig .",
    "[ difffsdivides ] . for the difference between the expected number of positive and negative examples",
    "given the pdf can be computed with the actual number of positive and negative examples .",
    "this is done by computing the @xmath30 between the null hypothesis , the feature is irrelevant and the pdf will be unchanged , and the hypothesis that the feature is relevant and the pdf is changed . if the impact of the attribute on the pdf is big , the @xmath30 will also be big .",
    "thus the significance of the attribute can be deduced from the @xmath30 that can be computed in a straightforward way if the attribute splits the set of examples l - fold .",
    "first the expectation values for the number of positive and negative examples in set @xmath31 ( @xmath32 ) is computed : @xmath33 if the attribute is irrelevant the deviation @xmath34 should follow a @xmath30 distribution : @xmath35 the significance of the attribute then follows from the actual @xmath30 .",
    "this section introduces some basic classification schemes which follow from basic statistics .",
    "the problem to be solved is illustrated in fig .",
    "[ diffclassifications ] . given the feature space with the training examples the task is to find the partition of the space that minimizes the classification error .",
    "usually the more general concept of classification cost is used .",
    "the definition of an appropriate cost function then allows to weight different errors by their importance . in basic classification",
    "usually the cost @xmath36 is defined as the fraction of misclassified examples : @xmath37 where @xmath4 is the classification function giving the assigned classlabel @xmath38 or @xmath39 for the test examples @xmath40 .",
    "this is not always appropriate for physics problems , since here the goal is often to maximize a figure of merit . if @xmath41 is taken as the signal and @xmath42 the background this has for example the form @xmath43 .",
    "more problems with the use of basic cost function occur if the number of training examples in each class is not weighted correctly . therefore statistical learning toolboxes usually give the user the choice of the cost function for example in the form of a matrix assigning a different cost for each possible confusion .      often , when classifying physics data , it is a problem to find appropriate training examples .",
    "either the examples are from simulated ( mc ) data , or from real data , but then the labeling is most of the time not 100% perfect . in both cases , it is advisable to study the effects of this on the performance of the classifier . if it performs good on the training data but gets worse if there are some training examples with the wrong label or are a little bit shifted in feature space , one can not expect a good performance on real data",
    ". most classifiers also have parameters that control the generalizing power .",
    "this is done to avoid overtraining ( see section [ overtrainingsect ] ) .",
    "for example rule based classifiers or decision trees have a pruning stage .",
    "the algorithm should be used in a way that maximizes its ability for generalization .",
    "the most basic , and optimal , classifier tries to maximize the probability for correct classification .",
    "it thus chooses the class @xmath44 according to @xmath45 this is the so called maximum a posteriori ( map ) classifier .",
    "given evidence , it gives the probability of each possible classification .",
    "however , to evaluate this expression the conditional probability distribution @xmath46 has to be known for each possible feature vector @xmath47 which is usually impossible .",
    "therefore the formulation is recast with the help of bayes theorem .",
    "this says it is possible to express the a posteriori probability in terms of the probability of the values for the feature vectors given the class @xmath48 and the a priori probabilities for each class @xmath49 and the probability for the specific feature vector @xmath50 as : @xmath51 the standard example for this theorem , given in the following , comes from medicine .",
    "given certain symptoms , the map classifier gives the probability for an illness .",
    "after the reformulation with the help of bayes theorem it can be seen that this depends heavily on the a priori probability for having the illness .",
    "given a rare illness that only occurs once in ten thousand cases , its probability can be computed after a positive test .",
    "given that the test is correct 98 % of the time , so for a rare illness approximately for 2 % percent of all cases it gives a positive result , the probability for the illness even after positive test is , @xmath52 .    by using the bayes theorem surprisingly good results",
    "can be achieved on many datasets .",
    "the classification question is reduced to the question @xmath53        for actual classification it is necessary to make certain assumptions regarding the occurring probability distributions .",
    "the natural choice for the conditional pdfs is that the features given a class are normally distributed around the mean value for that feature given the class .",
    "[ twogaussians ] shows the one - dimensional case . here",
    "the classification is done by simply evaluating each pdf at the value of the feature and choosing the class that has the higher probability there .",
    "the a priori probability of the classes can in principle be computed by sampling .",
    "but it is also possible to use the assumption of equal probabilities @xmath49 for all classes and uncorrelated features , which can be achieved by the application of the klt , each distributed with the same variance @xmath54 , if this is reasonable for a given problem .",
    "the resulting classifier is called maximum likelihood estimator ( mle ) . under the assumption of uncorrelated entries in the feature vector ,",
    "the probability @xmath50 is just given by the product of the probabilities of the entries , which have a gaussian distribution around the mean value of the given class @xmath44 , @xmath55 thus : @xmath56 so the classification is reduced to the computation of the euclidean distance of the feature vector to the mean of the class . in a two dimensional feature space the lines of equal probability are circles . if the covariance matrix is known and if it is not equal unity it is possible to use a different metric , the mahalanobis distance .",
    "this incorporates the covariance matrix @xmath57 by using @xmath58 where @xmath59 is the expectation value and @xmath60 is the mean of @xmath47 .",
    "the distance induced by this is the so called mahalanobis distance @xmath61 , the distance between two points @xmath47 , @xmath13 in a vector space can thus be computed by @xmath62 and with this notation @xmath63 as illustrated in figure [ figwitheuklidmahaldist ] , the lines of equal probability in a two dimensional space are now elliptic .          in this section",
    "automated cut finding with the ripper algorithm is introduced , which was not included in the original lecture .",
    "many statistical learning tools also incorporate rule based classification , which can easily translated into a cut based approach .",
    "the advantages are of course that simple rules can be interpreted more easily , interpretation of the data is facilitated and most people have more confidence in cuts than in black box algorithms like neural network .",
    "the ripper algorithm was introduced by william w. cohen @xcite . and has been known for a long time in the machine learning community . a similar approach is realized by decision trees which are not discussed here . in general ,",
    "rule based algorithm need discretized attributes .",
    "thus they have to be combined with one of the strategies for discretization .",
    "examples were covered in section [ sectionwithdiscretization ] .",
    "the ripper algorithm builds a ruleset @xmath64 for classification .",
    "the ruleset is initialized with the empty set in the beginning , @xmath65 .",
    "the goal of the algorithm is to grow rules by adding conditions ( connected by the logical and ) so each rule covers a convex space in feature space .",
    "an example is positively classified if any rule matches . thereafter comes the building stage .",
    "this consists of repeatedly executing the following steps until a stopping criterion is reached :    * grow phase - grow one rule by greedily adding new conditions according to the highest information gain of the attribute until the rule is perfect .",
    "i.e. it covers all positive examples and no negative . *",
    "prune phase - tune the rules to the training set , since they are 100% perfect .",
    "this is the problem of overtraining ( see section [ overtrainingsect ] ) .",
    "it is thus necessary to prune the set .",
    "all finite sequences of conditions are considered , if a sequence covers @xmath27 positive and @xmath3 negative examples , and the value @xmath66 is below a certain threshold , it is pruned .",
    "this makes sure that the rules are not customized to single examples .",
    "the threshold can be chosen according to variance in the data .",
    "the algorithm stops if the rule lengths are too different or all positive examples are covered or the error rate is too high . in the end ,",
    "the initial ruleset is optimized .",
    "the set of rules obtained in this way can then be easily translated in cuts .",
    "experience shows that taking care during the discretization step is very important , because measurements are not spread evenly over the allowed range of values and if the discretization is too coarse in regions where they are dense and small differences matter , the best algorithm can not achieve a good performance .",
    "the performance of an algorithm on a training set is not necessarily a good indicator of its performance on real data .",
    "a perfect performance often comes from a specialization on the given training data .",
    "this leads to a loss of generality and thus most of the time to a poor performance on real data .",
    "this problem is known as    overtraining    and is always an issue in machine learning and consequently all algorithms have measures to control the generalization capability .",
    "support vector machines ( svms @xcite ) have a solid theoretic background by which , in principle , the generalization ability can be computed .",
    "other algorithms have more ad - hoc parameters , trees and rule finders use pruning , neural networks often use weight decay .",
    "the principle is that of occam s razor .",
    "this states that it is always advisable to use the simplest theory that describes the data . especially with little training data or with data that is uncertain , as it is often the case with physics data ,",
    "a simple model should be used .",
    "this follows also from a kind of bayesian reasoning : a complex theory , a theory that takes a lot of bits to describe , is more unlikely , so more evidence is needed to support it .",
    "see for example fig .",
    "[ figwithoverfit ] . here",
    "the training performance of a linear function is worse , but looking at the data it seems to be the correct description , especially if expected scattering of the data is considered .",
    "there exists an elaborate theory that connects the predictive power of a function and the training error to the expected error , the vapnik - chervonenkis theory , and svms @xcite are build according to this principle , but to explain this would be too much detail .",
    "it is enough to keep this problem in mind , especially in physics , and evaluate the performance in a way that includes the generalization ability .",
    "for this an independent test set is needed , that had nothing to do with the training of the algorithm . if the algorithm has also meta parameters , which have to be determined in an optimal way , in principle three sets are necessary .",
    "one for training the algorithm with a specific set of parameters , one to determine the optimal parameters , the so called validation set , and one to evaluate the whole algorithm with the chosen parameters .",
    "otherwise there is also the risk that parameters are tuned to the training set .",
    "it is also advisable to incorporate a bit of scattering in the training examples to see how the algorithm performs . to compute the expected error , it is common practice to either just split the data 3 ways or do the so called    n - fold cross - validation    . here",
    "the data is split in @xmath3 folds , then the training is performed on @xmath67 sets and the remaining set is used for testing .",
    "this is done * n * times and the expected error is computed as the mean error .",
    "it can be shown that the higher @xmath3 , the better the estimation is .",
    "the most extreme case being the leave - one - out ( loo ) error , where the sets only have one element @xcite .",
    "getting to know existing tools is very important for two reasons .",
    "firstly , of course , it is not necessary to invent anything that has already been implemented and there are a lot of existing toolboxes which can be used .",
    "the second reason is , that toolboxes provide the opportunity to try many different strategies which enables the user to get a feeling what might work for a given problem .",
    "this is one of the most important things that one has to do while implementing a successful strategy for solving a classification task .",
    "therefore two toolboxes are presented in this section that make it possible , even for a rather unexperienced user , to try out different algorithms for data normalization , preparation and classification , the weka toolbox @xcite and the toolkit for multivariate analysis ( tmva : @xcite ) .",
    "the weka tool has the advantage of implementing almost every popular algorithm and combining this in a unified graphical user interface , providing a workplace where different algorithms can be combined and tested .",
    "in particular , all algorithms presented so far are implemented , so that it is possible to try them right away . on the other hand tmva developed using the root software ,",
    "is particularly aimed at analyzing particle physics data .",
    "for example it allows the definition of the signal significance @xmath68 as the figure of merit to be optimized and is fully integrated in the root environment . as of this writting ,",
    "tmva is still under heavy development but stable and usable .",
    "it is part of root , but since its development cycles are currently faster , it should be downloaded separately .",
    "easy to use graphical user interfaces allow to choose optimal working points , inspect the data and compare the performance of different classifiers .",
    "it contains a scripting as well as a c++ interface .",
    "there is also a complete users guide available .",
    "10 http://tmva.sourceforge.net r. duda , p. hart , d. stork , _ pattern classification _",
    "( wiley , new york , ny , 2000 ) s. theodoridis and k. koutroumbas , _ pattern recognition _",
    "( academic press , 1999 ) z. ghahramani and m. i. jordan , supervised learning from incomplete data via an em approach , _ advances in neural information processing systems _ , * 6 * , ( 1994 ) 120 .",
    "fayyad and k.b .",
    "irani , multi interval discretization of continuous - valued attributes for classification learning , proc . of the 13th int .",
    "joint conf . on artificial intelligence , ( morgan kaufmann 1993 ) , p. 1022 .",
    "igor kononenko , the minimum description length based decision tree pruning , proc . of the 5th pacific rim international conf . on artificial intelligence , topics in artificial intelligence , ( springer - verlag , london 1998 ) lecture notes in computer science , vol .",
    "1531 , p. 228 . p.",
    "j. huber , _ robust statistics _ ( wiley , new york , ny , 1981 ) . r.a .",
    "fisher , the use of multiple measurements in taxonomic problems , _ annals of eugenics _ ( 1936 ) , vol . 7 , part ii , p. 179 .",
    "william w. cohen , fast effective rule induction , proc .",
    "twelfth int .",
    "conf . on machine learning , 1995 ( morgan kaufman 1995 ) , p. 115 . b. schlkopf and a.j .",
    "smola , _ learning with kernels _ , ( mit press , cambridge , ma , 2002 ) .",
    "this report , chapter : support vector machines o. chapelle , v. vapnik , o. bousquet and s. mukherjee . choosing multiple parameters for support vector machines , _",
    "machine learning _ ,",
    "* 46 * ( 2002 ) , 1 - 3 , 131 .",
    "ian h. witten and eibe frank ( 2005 ) _ data mining : practical machine learning tools and techniques , 2nd edition _ ( morgan kaufmann , san francisco , 2005 ) ."
  ],
  "abstract_text": [
    "<S> this document introduces basics in data preparation , feature selection and learning basics for high energy physics tasks . </S>",
    "<S> the emphasis is on feature selection by principal component analysis , information gain and significance measures for features . as examples for basic statistical learning algorithms , </S>",
    "<S> the maximum a posteriori and maximum likelihood classifiers are shown . </S>",
    "<S> furthermore , a simple rule based classification as a means for automated cut finding is introduced . </S>",
    "<S> finally two toolboxes for the application of statistical learning techniques are introduced . </S>"
  ]
}
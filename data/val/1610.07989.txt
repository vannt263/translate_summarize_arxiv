{
  "article_text": [
    "process mining is a recently emerging discipline that links data analysis with process management .",
    "one of the central tasks of process mining is * process discovery * , where knowledge is extracted from event logs ( readily available in today s information systems ) in order to discover real processes @xcite .",
    "several tools , techniques , and algorithms have been proposed to discover business process models from event logs .",
    "the quality of discovered models and the efficiency of discovery techniques vary according to several criteria including : fitness , precision , generalization and simplicity .",
    "this document is our submission to the process discovery contest organized by the ieee cis task force on process mining , and which is collocated with the bpm conference in rio de janeiro in september 2016 .",
    "the contest is dedicated to the assessment of tools and techniques that discover business process models from event logs .",
    "the objective is to compare the efficiency of techniques to discover process models that provide a proper balance between  overfitting \" and  underfitting \" .",
    "a process model is overfitting ( the event log ) if it is too restrictive , disallowing behavior which is part of the underlying process .",
    "conversely , it is underfitting ( the reality ) if it is not restrictive enough , allowing behavior which is not part of the underlying process . within the process - discovery contest ,",
    "10 event logs are provided to the contestants as a training set .",
    "these event logs are generated from business process models that show different behavioral characteristics .",
    "the process models are not disclosed to the contestants .",
    "the contestants should use the training event logs to discover process models that are the closest to the original process models , in term of balancing between  overfitting \" and  underfitting \" . to assess this balance",
    ", the contest has a classification perspective where a test event log will be used .",
    "the test event log contains traces representing real process behavior and traces representing behavior not related to the process .",
    "a model is as good in balancing  overfitting \" and  underfitting \" as it is able to correctly classify the traces in the  test \" event log :    * given a trace representing real process behavior , the model should classify it as allowed . *",
    "given a trace representing a behavior not related to the process , the model should classify it as disallowed .    with a classification view",
    ", the winner is the contestant who can classify correct the largest number of traces in all the test event logs .",
    "moreover , in order to help the contestants tune their discovered models , two  validation \" sets are made available in april and may 2016 .    in our submission to the contest , we discovered process models using two techniques : inductive miner @xcite and decomposition based discovery @xcite .",
    "we chose these techniques because they guarantee rediscoverability ; that is , models discovered using those techniques _",
    "( generate ) all the traces in their original training event logs .",
    "we used prom tool ( http://www.promtools.org/ ) to apply those techniques in discovering our submitted models .    in the reminder of this report",
    ", we first show in section [ sec:2 ] how do we use two discovery techniques , namely : _ inductive miner _ and _ decomposition _ , to discover process models from the training set using prom tool .",
    "second , we present in section [ sec:3 ] how we _ replay _ an event log on a process model . then , we show how we use replay results :    1 .   to check the rediscoverability of models ( section [ sec:31 ] ) , and 2 .   to classify unseen traces ( in validation and/or test logs ) as fitting or not ( section [ sec : class ] )",
    "section [ sec : discussion ] is dedicated for a discussion about the classification results of april and may validation logs , the complexity of discovered models , and how these two points affect our selection of models for submission . in the end of the report , we show the pictures of our submitted models .",
    "we used two well known discovery techniques : inductive miner @xcite and decomposed process mining @xcite .",
    "we used those techniques to discover process models for each one of the 10 training event logs .",
    "however , since only one process model should be submitted for every event log , we decided to include in our submission a mix of those models .",
    "rationally , we have chosen those techniques because they guarantee a level of _ * rediscoverability * _ , namely the ability of discovering again the models used to generate the traces of the event log .",
    "we consider that * rediscoverability * property is essential to accomplish the task of correctly classify new unseen traces .    the models for processes 1 , 2 , 4 , 8 and 9 are discovered using * inductive miner*. we used prom lite for this group of models .",
    "other models - for processes 3 , 5 , 6 , 7 , and 10 - are discovered using * decomposition * technique .",
    "we used prom 6.5.1 for this group of models .",
    "the justification of this selection of process models is given in section [ sec : discussion ] .    in the reminder of this section",
    ", we describe the step - by - step procedure to discover process models using the above mentioned techniques",
    ".      inductive miner @xcite is a discovery approach to construct a process tree for a given log .",
    "the main advantages of this approach are :    * all discovered models correspond to sound , block - structured workflow ( wf ) net systems .",
    "* the model always fits , i.e. , the model can generate the traces in the log .",
    "the approach works recursively with _ divide and conquer _ strategy : split log , construct part of process tree , and proceed with handling split parts of log separately .",
    "a process tree can be directly transformed into a petri net . however , prom has a plugin that can mine a petri net directly using inductive miner technique .    to discover a model ( petri net ) from an event log with inductive miner technique , we used prom lite and followed the following steps :    1 .",
    "first , the log ( in * xes * format ) is loaded onto prom and used .",
    "then , in _ actions",
    "_ window , the plugin  * mine petri net with inductive miner * \" by leemans is selected ( see figure [ fig : discv_induc_1 ] ) .",
    "a settings page appears then ( figure [ fig : discv_induc_2 ] ) . for * variant * , we select _ inductive miner_. for * event classifier * , we select _ event name_. +    3 .   finally , we get a petri net discovered using inductive miner .",
    "the discovered model can be visualized using _",
    "graphviz petri net visualization _",
    "( figure [ fig : discv_induc_3 ] ) . +      decomposition @xcite is a process mining technique that discovers an accepting petri net from a log using decomposition .",
    "first , the log will be split into a number of sublogs .",
    "second , a subnet will be discovered ( using the given discovery algorithm ) for every sublog .",
    "third , these subnets will be merged into a single accepting petri net .",
    "fourth , known reduction techniques will be applied on this accepting petri net , and the result is returned .    to discover a model from an event log using decomposition technique , we used prom 6.5.1 ( this technique is not available in prom lite ) .    1 .   first",
    ", the log ( in * xes * format ) is loaded onto prom and used .",
    "then , in _ actions _ window , the plugin  * discovery using decomposition * \" is selected ( see figure [ fig : discv_decomp_1 ] ) .",
    "actually , there are two available plugins in prom 6.5.1 for discovery using decomposition : an * interactive * plugin that allows for custom settings , and a * batch * one that uses some _ default _ settings .",
    "we used the * batch * plugin , hence default settings are used ; for instance , the underlying discovery algorithm is ilp miner @xcite@xcite .",
    "we get an accepting petri net discovered using decomposition .",
    "it can be visualized using different visualizations such as _ visualize accepting petri net ( dot ) _",
    "( figure [ fig : discv_decomp_2 ] ) .",
    "+    3 .   finally",
    ", we convert the discovered accepting petri net into a ` regular ' petri net using * unpack accepting petri net * plugin .",
    "our models are all regular petri nets that are exported as pnml files .",
    "to replay an event log on a process model , we used the prom plugin * replay a log on petri net for conformance analysis * ( available in both prom lite and prom 6.5.1 , with identical results obtained ) .",
    "we need * replay * for two tasks :    1 .",
    "verify that the discovered model can generate its originating event log ( rediscoverability ) .",
    "2 .   classify new unseen traces ( in validation and test datasets ) as fitting or not - fitting with respect to the discovered models .    to replay a log on a process model :    1 .",
    "first , in _ workspace _ page , both the log and the model ( petri net ) are selected and used .",
    "2 .   second , in _ actions _ page , the plugin * replay a log on petri net for conformance analysis * is selected ( figure [ fig : replay_1 ] ) .",
    "then , a dialog appears that allow for mapping between the transitions of the petri net and the event classes of the log ( figure [ fig : replay_2 ] ) .",
    "we need only to choose * event name * as classifier ; thus each transition is matched with the event class having the same name .",
    "the next dialog allows us to select a replay algorithm .",
    "we use the following settings ( as shown in figure [ fig : replay_4 ] ) : * * the purpose of replay *  measuring fitness . * * penalize improper completion * : yes . * * suggested algorithm *  a * cost - based fitness express , assuming at most 32767 tokens in each place .",
    "the last page of the dialog is for selecting the costs of particular deviation ( figure [ fig : replay_5 ] ) .",
    "again , we keep the defaults : the cost is always 1 except for _ tau _ transitions where the cost is 0",
    ". +     those are the required steps to replay a log on a process model .",
    "as mentioned above , we use those steps for rediscoverability checking and for classifying unseen traces .",
    "our choice of discovery techniques is mainly based on the rediscoverability property .",
    "that is , we chose inductive miner and decomposition techniques because they both guarantee this property .",
    "therefore , once we discover a model using one of those techniques , as discussed in section [ sec:2 ] , we replay the originating / training event log on the discovered model to make sure that all the traces in the log * fit * properly in the model .    to do so",
    ", we follow the replay steps mentioned above using the training log and the discovered model .",
    "the result of the replay can be visualized in different ways .",
    "for instance , using * model projected with alignments * choice , the model can be visualized with alignments on top of it , as shown in figure [ fig : replay_6 ] .        in this visualization",
    ", we can take a look at the * _ global statistics _ * within the inspector window . among the displayed statistics ,",
    "we are mainly interested in three statistics : * trace * fitness , * move - model * fitness , and * move - log * fitness .",
    "the values of those statistics give an indicator about the rediscoverability property .",
    "when those global statistics are all equal to 1 , this means that all the traces fit in the model ; thus the model is able to rediscover the event log .",
    "otherwise , if anyone of those statistics has a value less than 1 , then there are some traces in the log that do nt fit in the model .    in our submission , all the models perfectly satisfy the rediscoverability property .      in the context of the process discovery contest",
    ", process discovery is turned into a classification task with a training set and a test set .",
    "moreover , two validation sets are made available to the contestants to allow them tune their discovered models .",
    "a process model needs to decide whether traces are fitting or not .    for this classification task",
    ", a test or validation log is replayed on the discovered model .",
    "again , we used the prom plugin * replay a log on petri net for conformance analysis * according to the steps mentioned earlier .",
    "when the replay results are obtained , we visualize them using * project alignment to log * choice .",
    "this will display log - model alignments for each case / trace , as shown in figure [ fig : replay_results ] .",
    "for each trace , a table of statistics is shown to the left ; and a colored picture of the trace alignment is shown to the right .",
    "the meaning of colors is illustrated in a legend shown on the right - top of the screen ( figure [ fig : legend ] ) .    among the displayed statistics , we are interested in : trace fitness , move - log fitness , and move - model fitness ; and we use them in the classification task .",
    "we classify each trace as _ fitting _ if , and only if , those three values are perfect ( equal to 1 ) .",
    "otherwise , when anyone of those values is less than 1 , then we classify the trace as _ not - fitting_.    for example , table [ tab : replay1 ] shows those values for replaying log-1 of april validation dataset over our model-1 ( discovered using inductive miner ) .",
    "1|l * 20|y| case i d & 1 & 2 & 3 & 4 & 5 & 6 & 7 & 8 & 9 & 10 & 11 & 12 & 13 & 14 & 15 & 16 & 17 & 18 & 19 & 20 + move - model & 1 & 1 & .73 & 1 & .85 & .64 & .83 & 1 & .75 & .92 & 1 & .67 & .82 & 1 & .92 & 1 & 1 & .79 & 1 & 1 + trace & 1 & 1 & .73 & 1 & .87 & .67 & .83 & 1 & .74 & .79 & 1 & .65 & .82 & 1 & .88 & 1 & 1 & .63 & 1 & 1 + move - log & 1 & 1 & .73 & 1 & .92 & .70 & .83 & 1 & .75 & .71 & 1 & .67 & .82 & 1 & .85 & 1 & 1 & .58 & 1 & 1 + classification & @xmath0 & @xmath0 & @xmath1 & @xmath0 & @xmath1 & @xmath1 & @xmath1 & @xmath0 & @xmath1 & @xmath1 & @xmath0 & @xmath1 & @xmath1 & @xmath0 & @xmath1 & @xmath0 & @xmath0 & @xmath1 & @xmath0 & @xmath0 +    in the same sense , the colored picture of the trace alignment can be also used to determine fitness .",
    "if the picture consists of * green * and * gray * alignments * only * , then the trace is classified as _",
    "fitting_. otherwise ,",
    "if the picture also contains other colors ( like pink and/or yellow ) , then the trace is classified as _ not - fitting_.",
    "in our solution to the process discovery contest , we used inductive miner and decomposition techniques - as presented in section [ sec:2 ] - to discover process models from the 10 _ training _ logs .",
    "both groups of models are then used to replay again the training logs - as presented in section [ sec:31]- to ensure _",
    "rediscoverability_. we found that all our process models _ satisfy the rediscoverability _ property .",
    "then , we replayed april and may _ validation _ event logs over both groups of process models - processes discovered using inductive miner and processes discovered using decomposition .",
    "the replay results are then used to classify the traces of the validation logs as fitting or non - fitting - as presented in section [ sec : class ] .",
    "we communicated the obtained classifications with the contest organizers , who replied by indicating how many traces have been correctly classified for each one of the 10 logs .",
    "table [ tab : april_results ] shows the classification results of april validation logs using the two groups of process models : inductive miner and decomposition .",
    "analogue classification results of may logs are shown in table [ tab : may_results ] .",
    "l3.4cm|yyyyyyyyyy|y log @xmath2 & 1 & 2 & 3 & 4 & 5 & 6 & 7 & 8 & 9 & 10 & +   + true positive & 10 & 10 & 10 & 10 & 10 & 10 & 10 & 10 & 10 & 10 & + false positive & 0 & 0 & 8 & 0 & 1 & 3 & 0 & 5 & 0 & 0 & + true negative & 10 & 10 & 2 & 10 & 9 & 7 & 10 & 5 & 10 & 10 & + false negative & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & + correctly classified & 20 & 20 & 12 & 20 & 19 & 17 & 20 & 15 & 20 & 20 & * 183 * +   + true positive & 10 & 10 & 10 & 10 & 10 & 10 & 10 & 10 & 10 & 10 & + false positive & 0 & 0 & 1 & 0 & 0 & 1 & 0 & 6 & 0 & 0 & + true negative & 10 & 10 & 9 & 10 & 10 & 9 & 10 & 4 & 10 & 10 & + false negative & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & + correctly classified & 20 & 20 & 19 & 20 & 20 & 19 & 20 & 14 & 20 & 20 & * 192 * +     l3.4cm|yyyyyyyyyy|y log @xmath2 & 1 & 2 & 3 & 4 & 5 & 6 & 7 & 8 & 9 & 10 & +   + true positive & 10 & 10 & 10 & 10 & 10 & 10 & 10 & 10 & 10 & 10 & + false positive & 0 & 0 & 9 & 0 & 1 & 4 & 3 & 2 & 0 & 2 & + true negative & 10 & 10 & 1 & 10 & 9 & 6 & 7 & 8 & 10 & 8 & + false negative & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & + correctly classified & 20 & 20 & 11 & 20 & 19 & 16 & 17 & 18 & 20 & 18 & * 179 * +   + true positive & 10 & 10 & 10 & 10 & 10 & 10 & 10 & 10 & 10 & 10 & + false positive & 0 & 0 & 0 & 0 & 1 & 0 & 1 & 4 & 0 & 0 & + true negative & 10 & 10 & 10 & 10 & 9 & 10 & 9 & 6 & 10 & 10 & + false negative & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & + correctly classified & 20 & 20 & 20 & 20 & 19 & 20 & 19 & 16 & 20 & 20 & * 194 * +    a quick look at these classification results tells that decomposition models classify better than inductive miner models .",
    "that is , out of 200 traces in april logs , 192 are correctly classified using decomposition models versus 183 using inductive miner models .",
    "similarly , in may logs , 194 are correctly classified using decomposition models versus 179 using inductive miner models    however , with a more careful examination of the classification results , we made the following observations :    * logs 1 , 2 , 4 , and 9 are always classified correctly : 20 out of 20 traces are classified correctly .",
    "* log 8 has a better classification using inductive miner model than using decomposition model ( april : @xmath3 , may : @xmath4 ) . * other logs - namely 3 , 5 , 6 , 7 , and 10 - has a better classification using decomposition models than using inductive miner models .",
    "now , based on these observations , we should decide which models shall we include in our submission to the contest . from the second and third observation , we can easily decide to consider inductive miner model for log : 8 , and decomposition models for logs : 3 , 5 , 6 , 7 and 10 .",
    "however , the first observation tells us that neither one of the two groups of process models has a preference over the other with respect to the classification of logs : 1 , 2 , 4 and 9 .",
    "therefore , we have to consider another quality criteria of process models , namely : _",
    "simplicity_.    actually , the inductive miner models are generally more _ simple _ than decomposition ones .",
    "one can clearly see this by looking at the pictures of both groups of models ( see appendix [ apx : models ] ) .",
    "however , in order to prove this claim we computed different complexity metrics of process models @xcite . table",
    "[ tab : metrics ] shows the complexity metrics for both inductive miner and decomposition process models .",
    "these metrics are : _ ecam _ : extended cardoso metric , _ ecym _ : extended cyclomatic metric , @xmath5 and @xmath6 : number of edges and nodes in the reachability graph , @xmath7 , @xmath8 and @xmath9 : number of arcs , places , and transitions in the net , and _ sm _ : structuredness metric .    based on the values listed in table [ tab : metrics ]",
    "we can see that the inductive miner models are , in general , _ simpler _ than decomposition ones .",
    "for instance , the average structuredness of decomposition models is roughly one order of magnitude higher than for inductive miner models .    c|c|c|c|cc|ccc|c model & density & _ ecam _ & _ ecym _ & @xmath5 & @xmath6 & @xmath7 & @xmath8 & @xmath9 & _ sm _ +   + 1 & 0.0387 & 35 & 177 & 185 & 78 & 72 & 31 & 30 & 293 + 2 & 0.0589 & 20 & 67 & 85 & 27 & 70 & 18 & 33 & 6180 + 3 & 0.0795 & 18 & 51 & 65 & 20 & 62 & 13 & 30 & 1550 + 4 & 0.0376 & 31 & 174 & 174 & 77 & 70 & 31 & 30 & 212 + 5 & 0.0499 & 24 & 215 & 247 & 50 & 90 & 22 & 41 & 29205 + 6 & 0.1038 & 12 & 23 & 31 & 10 & 54 & 10 & 26 & @xmath10 + 7 & 0.0586 & 22 & 3730 & 4082 & 482 & 82 & 20 & 35 & 4160 + 8 & 0.0536 & 24 & 159 & 183 & 56 & 72 & 21 & 32 & 740 + 9 & 0.034 & 35 & 142 & 142 & 72 & 74 & 34 & 32 & 242 + 10 & 0.0322 & 45 & 9418 & 10001 & 1852 & 98 & 39 & 39 & 16435 + avg . &",
    "0.0547 & 26.6 & 1415.6 & 1519.5 & 272.4 & 74.4 & 23.9 & 32.8 & 6557.44 +   + 1 & 0.0722 & 39 & 129 & 133 & 57 & 78 & 27 & 20 & 32000 + 2 & 0.2325 & 120 & @xmath11&@xmath11&@xmath11 & 266 & 26 & 22 & 72270 + 3 & 0.2167 & 156 & @xmath11&@xmath11&@xmath11 & 312 & 30 & 24 & 93240 + 4 & 0.0745 & 40 & 862 & 900 & 282 & 93 & 26 & 24 & 79200 + 5 & 0.088 & 80 & @xmath11&@xmath11&@xmath11 & 169 & 32 & 30 & 48600 + 6 & 0.262 & 133 & @xmath11&@xmath11&@xmath11 & 283 & 27 & 20 & 23700 + 7 & 0.0821 & 58 & 9501 & 10003 & 2140 & 128 & 26 & 30 & 65700 + 8 & 0.5132 & 149 & @xmath11&@xmath11&@xmath11 & 349 & 17 & 20 & 31300 + 9 & 0.0741 & 41 & 403 & 418 & 154 & 88 & 27 & 22 & 13455 + 10 & 0.1705 & 94 & @xmath11&@xmath11&@xmath11 & 180 & 24 & 22 & 89100 + avg . &",
    "0.1786 & 91 & 2723.75 & 2863.5 & 658.25 & 194.6 & 26.2 & 23.4 & 54856.5 +    now , given that for logs : 1 , 2 , 4 and 9 , there is no preference of a particular group of models based on classification results ; and given that inductive miner models are simpler than decomposition models , we decided to consider inductive miner models for these logs , based on _",
    "occam s razor _ principle ,    in summary , our submitted models to the contest are : models 1 , 2 , 4 , 8 and 9 of inductive miner models , and models 3 , 5 , 6 , 7 and 10 of decomposition models .",
    "the pictures of these process models are depicted in appendix [ apx : models ]    based on this selection of process models , the contest organizers replayed the _ june _ test logs .",
    "the reported classifications are shown in table [ tab : juneresults ] , whereas the classification results are shown in table [ tab : juneresults2 ] .",
    "our selection of models correctly classified 192 out of 200 traces .",
    "the organizers confirmed later that this submission gave us the * second * place in the contest among 14 participant teams .",
    "l1cm|yy|yyyyyyyyyyyyyyyyyyyy & & & + log @xmath12 & + & - & 1 & 2 & 3 & 4 & 5 & 6 & 7 & 8 & 9 & 10 & 11 & 12 & 13 & 14 & 15 & 16 & 17 & 18 & 19 & 20 + 1 & 10 & 10 & @xmath0 & - & + & + & - & + & - & - & + & + & - & + & + & - & + & - & + & - & - & - + 2 & 12 & 8 & - & - & + & + & - & + & + & + & - & + & + & - & + & + & - & - & + & + & + & - + 3 & 9 & 11 & + & - & + & - & - & - & + & + & + & + & + & - & - & - & - & - & + & - & + & - + 4 & 10 & 10 & - & + & - & + & + & + & - & + & - & - & + & + & - & - & - & + & + & - & + & - + 5 & 10 & 10 & - & + & - & - & - & - & - & - & + & - & + & + & + & - & + & + & + & + & - & + + 6 & 12 & 8 & - & + & - & + & + & + & + & + & - & - & - & + & + & - & + & - & + & + & + & - + 7 & 10 & 10 & + & + & - & - & - & + & - & + & + & + & - & + & - & - & - & - & + & + & + & - + 8 & 13 & 7 & + & - & + & + & + & - & + & + & + & + & + & + & - & + & - & + & - & - & + & - + 9 & 10 & 10 & + & + & + & + & + & - & - & + & - & + & - & + & - & - & - & + & - & - & - & + + 10 & 10 & 10 & + & + & - & - & - & + & - & + & + & + & + & - & + & + & - & - & + & - & - & - +     l3.4cm|yyyyyyyyyy|y log @xmath2 & 1 & 2 & 3 & 4 & 5 & 6 & 7 & 8 & 9 & 10 & + true positive & 10 & 10 & 9 & 10 & 10 & 10 & 10 & 10 & 10 & 10 & + false positive & 0 & 2 & 0 & 0 & 0 & 2 & 0 & 3 & 0 & 0 & + true negative & 10 & 8 & 10 & 10 & 10 & 8 & 10 & 7 & 10 & 10 & + false negative & 0 & 0 & 1 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & + correctly classified & 20 & 18 & 19 & 20 & 20 & 18 & 20 & 17 & 20 & 20 & * 192 * +    5    carmona , j. , de leoni , m. , depair , b. , jouck , t. : process discovery contest @ bpm 2016 , https://www.win.tue.nl/ieeetfpm/doku.php?id=shared:process_discovery_contest    van der aalst , w.m.p . : .",
    "process mining : discovery , conformance and enhancement of business processes .",
    "springer - verlag , berlin , 2011 .",
    "leemans , s. , fahland , d. , van der aalst , w. : discovering block - structured process models from event logs - a constructive approach . in : petri nets 2013 .",
    "lncs , vol . 7927 , pp .",
    "springer , 2013 .",
    "hompes , b.f.a . : on decomposed process discovery , master thesis .",
    "eindhoven , 2014 .",
    "verbeek , h.m.w .",
    ", van der aalst , w.m.p . :",
    "decomposed process mining : the ilp case . in : bpi 2014 workshop , haifa , israel , 2014 .",
    "verbeek , h.m.w . : decomposed process mining with divideandconquer .",
    "proceedings of the bpm demo sessions 2014 , 15 , 2014 .",
    "werf , j.m.e.m.v.d . ,",
    "dongen , b.f.v . ,",
    "hurkens , c.a.j . ,",
    "serebrenik , a. : process discovery using integer linear programming .",
    "fundamenta informaticae , volume 94 issue 3 - 4 , pp . 387412 , 2009 .",
    "lassen , k.b . , van der aalst , w.m.p . : complexity metrics for workflow nets .",
    "information and software technology , volume 51 , issue 3 , pp . 610626 , 2009 .",
    "blum , f. rojas : metrics in process discovery .",
    "technical report tr / dcc-2015 - 6 , computer science department , university of chile , 2015 ."
  ],
  "abstract_text": [
    "<S> this report presents a submission to the process discovery contest @xcite . the contest is dedicated to the assessment of tools and techniques that discover business process models from event logs . </S>",
    "<S> the objective is to compare the efficiency of techniques to discover process models that provide a proper balance between  overfitting \" and  underfitting \" . in the context of the process discovery contest </S>",
    "<S> , process discovery is turned into a classification task with a training set and a test set ; where a process model needs to decide whether traces are fitting or not .    in this report </S>",
    "<S> , we first show how we use two discovery techniques , namely : _ inductive miner _ and _ decomposition _ , to discover process models from the training set using prom tool . </S>",
    "<S> second , we show how we use replay results to 1 ) check the rediscoverability of models , and to 2 ) classify unseen traces ( in test logs ) as fitting or not . </S>",
    "<S> then , we discuss the classification results of validation logs , and the complexity of discovered models , and their impact on the selection of models for submission . </S>",
    "<S> the report ends with the pictures of the submitted process models . </S>"
  ]
}
{
  "article_text": [
    "* probabilistic automata and decision problems .",
    "* probabilistic automata for finite words were introduced in the seminal work of rabin  @xcite , and have been extensively studied ( see the book by  @xcite on probabilistic automata and the survey of  @xcite ) .",
    "probabilistic automata on infinite words have been studied recently in the context of verification  @xcite .",
    "we consider probabilistic automata on infinite words with acceptance defined by safety , reachability , bchi , cobchi , and limit - average conditions .",
    "we consider the _ quantitative _ and _ qualitative _ decision problems  @xcite .",
    "the quantitative decision problems ask , given a rational @xmath0 , whether ( a ) _ ( equality ) _ there is a word with acceptance probability exactly @xmath1 ; ( b ) _ ( existence ) _ there is a word with acceptance probability greater than @xmath1 ; and ( c ) _",
    "( value ) _ for all @xmath2 , there is a word with acceptance probability greater than @xmath3 .",
    "the qualitative decision problems are the special cases of the quantitative problems with @xmath4 .",
    "the qualitative and quantitative decision problems for probabilistic automata are the generalization of the emptiness and universality problem for deterministic automata .",
    "* known results for probabilistic automata on infinite words . *",
    "the decision problems for probabilistic automata on finite words have been extensively studied  @xcite . for probabilistic automata on infinite words",
    "it follows from the results of  @xcite that for the cobchi acceptance condition , the qualitative equality problem is undecidable and the qualitative existence problem is decidable ( in exptime ) , whereas for the bchi acceptance condition , the qualitative equality problem is decidable ( in exptime ) and the qualitative existence problem is undecidable .",
    "the qualitative equality and existence problems for safety conditions were shown to be pspace - complete in  @xcite , and the qualitative equality problem for bchi conditions and qualitative existence problem for cobchi conditions were shown to be pspace - complete in  @xcite .",
    "the arithmetic hierarchy characterization of the the undecidable problems was established in   @xcite .",
    "* our results : quantitative decision problems .",
    "* in  @xcite a simple and elegant proof for the undecidability of the quantitative decision problems for probabilistic _",
    "finite _ automata was given . in section  3",
    "we show that the proof of  @xcite can be extended to show that the quantitative decision problems are undecidable for safety , reachability , bchi , cobchi , and limit - average conditions .",
    "in particular we show the undecidability of the quantitative equality problem for the special classes of absorbing probabilistic automata with safety and reachability acceptance conditions .",
    "the other undecidability results for quantitative decision problems are obtained by simple extensions of the result for quantitative equality .    * our results : qualitative decision problems . * in section  4 we show that all qualitative decision problems are decidable for probabilistic safety automata .",
    "we present a simple adaptation of a proof of  @xcite to give the precise characterization of the decidability and undecidability frontier for all qualitative decision problems for probabilistic reachability , bchi , and cobchi automata . concerning probabilistic limit - average automata",
    ", we show that the qualitative value problem is undecidable .",
    "we use the results of @xcite to prove that the qualitative equality is also undecidable , and that the qualitative existence is decidable .",
    "in this section we present definitions for probabilistic automata , notions of acceptance for infinite words , and the decision problems .",
    "* probabilistic automata . * a _ probabilistic automaton _",
    "@xmath5 is a tuple @xmath6 that consists of the following components :    1 .   a finite set @xmath7 of states and an initial state @xmath8 ; 2 .   a finite alphabet @xmath9 ; 3 .   a set @xmath10 of transition probability matrices @xmath11 ; i.e. , for @xmath12 we have @xmath11 is a transition probability matrix . in other words , for all @xmath12 the following conditions hold : ( a ) for all @xmath13 we have @xmath14 ; and ( b ) for all @xmath15 we have @xmath16 .",
    "* infinite paths and words . * given a probabilistic automaton @xmath5 , an infinite path @xmath17 is an infinite sequence of states such that for all @xmath18 , there exists @xmath12 such that @xmath19 .",
    "we denote by @xmath20 a path in @xmath5 , and by @xmath21 the set of all paths . for a path @xmath20",
    ", we denote by @xmath22 the set of states that appear infinitely often in @xmath20 .",
    "an infinite ( resp .",
    "finite ) word is an infinite ( resp .",
    "finite ) sequence of letters from @xmath9 . for a finite word @xmath23",
    "we denote by @xmath24 the length of @xmath23 . given a finite or an infinite word @xmath23 ,",
    "we denote @xmath25 as the @xmath26-th letter of the word ( for a finite word @xmath23 we assume @xmath27 ) .",
    "* cones and probability measure . *",
    "given a probabilistic automaton @xmath5 and a finite sequence @xmath28 of states , the set @xmath29 consists of the set of paths @xmath20 with prefix @xmath30 . given a word @xmath31 ,",
    "we first define a measure @xmath32 on cones as follows :    1 .",
    "@xmath33 and for @xmath34 we have @xmath35 ; 2 .   for a sequence @xmath36 we have @xmath37    the probability measure @xmath38 is the unique extension of the measure @xmath32 to the set of all measurable paths in @xmath5 .      * probabilistic automata on finite words . * a probabilistic _ finite _ automaton consists of a probabilistic automaton and a set @xmath39 of final states .",
    "the automaton runs over finite words @xmath40 and for a finite word @xmath41 it defines a probability distribution over @xmath7 as follows : let @xmath42 and for @xmath18 we have @xmath43 .",
    "the acceptance probability for the word @xmath23 , denoted as @xmath44 , is @xmath45 .    * acceptance for infinite words .",
    "* let @xmath5 be a probabilistic automaton and let @xmath46 be a set of accepting ( or target ) states .",
    "then we consider the following functions to assign values to paths .    1 .   _ safety condition .",
    "_ the safety condition @xmath47 defines the set of paths in @xmath5 that only visits states in @xmath39 ; i.e. , @xmath48 .",
    "reachability condition .",
    "_ the reachability condition @xmath49 defines the set of paths in @xmath5 that visits states in @xmath39 at least once ; i.e. , @xmath50 .",
    "bchi condition .",
    "_ the bchi condition @xmath51 defines the set of paths in @xmath5 that visits states in @xmath39 infinitely often ; i.e. , @xmath52 .",
    "cobchi condition .",
    "_ the cobchi condition @xmath53 defines the set of paths in @xmath5 that visits states outside @xmath39 finitely often ; i.e. , @xmath54 .",
    "limit - average condition .",
    "_ the limit - average condition is a function @xmath55 that assigns to a path the long - run average frequency of the accepting states .",
    "formally , for a state @xmath15 , let @xmath56 if @xmath57 and @xmath58 otherwise , then for a path @xmath59 we have @xmath60    in sequel , we will consider @xmath61 and @xmath62 as functions from @xmath21 to @xmath63 .",
    "other than @xmath62 , all the other functions only returns boolean values ( 0 or  1 ) . given an condition @xmath64 , a probabilistic automaton @xmath5 and a word @xmath23 , we denote by @xmath65 the expectation of the function @xmath66 under the probability measure @xmath38 . given a probabilistic automaton @xmath5 and a condition @xmath66 , we use the following notation : @xmath67 , and if the condition @xmath66 is clear from the context we simply write @xmath68 . if @xmath66 is boolean , then @xmath69 is the acceptance probability for the word @xmath23 for the condition @xmath66 in @xmath5 .",
    "we now consider the quantitative and qualitative decision problems .    *",
    "quantitative decision problems . * given a probabilistic automaton @xmath5 , a condition @xmath66 , and a rational number @xmath70 , we consider the following questions :    1 .   _",
    "quantitative equality problem .",
    "_ does there exist a word @xmath23 such that @xmath71 .",
    "if @xmath66 is boolean , then the question is whether there exists a word @xmath23 such that @xmath72 .",
    "quantitative existence problem .",
    "_ does there exist a word @xmath23 such that @xmath73 .",
    "if @xmath66 is boolean , then the question is whether there exists a word @xmath23 such that @xmath74 .",
    "this question is related to emptiness of probabilistic automata : let @xmath75 be the set of words with acceptance probability greater than @xmath1 ; then the set is non - empty iff the answer to the quantitative existence problem is yes .",
    "quantitative value problem .",
    "_ whether the supremum of the values for all words is greater than @xmath1 , i.e. , @xmath76 .",
    "if @xmath66 is boolean , this question is equivalent to whether for all @xmath2 , does there exist a word @xmath23 such that @xmath77 .",
    "* qualitative decision problems . * given a probabilistic automaton @xmath5 , a condition @xmath66 , we consider the following questions :    1 .",
    "_ almost problem .",
    "_ does there exist a word @xmath23 such that @xmath78 .",
    "positive problem .",
    "_ does there exist a word @xmath23 such that @xmath79 .",
    "limit problem .",
    "_ for all @xmath2 , does there exist a word @xmath23 such that @xmath80 .",
    "if @xmath66 is boolean , then in all the above questions @xmath81 is replaced by @xmath82 .",
    "in this section we study the computability of the quantitative decision problems .",
    "we show undecidability results for special classes of probabilistic automata for safety and reachability conditions , and all other results are derived from the results on these special classes .",
    "the special classes are related to the notion of absorption in probabilistic automata .",
    "we will consider several special cases with absorption condition and consider some simple equivalences .",
    "* absorbing states . *",
    "given a probabilistic automaton @xmath5 , a state @xmath83 is _ absorbing _ if for all @xmath12 we have @xmath84 ( hence for all @xmath85 we have @xmath86 ) .",
    "* acceptance absorbing automata . * given a probabilistic automaton @xmath5 let @xmath39 be the set of accepting states .",
    "the automaton is _ acceptance - absorbing _ if all states in @xmath39 are absorbing . given an acceptance - absorbing automaton , the following equivalence hold : @xmath87 .",
    "hence our goal would be to show hardness ( undecidability ) for acceptance - absorbing automata with reachability condition , and the results will follow for bchi , cobchi and limit - average conditions .    * absorbing automata .",
    "* a probabilistic automaton @xmath5 is absorbing if the following condition holds : let @xmath88 be the set of absorbing states in @xmath5 , then for all @xmath12 and for all @xmath89 we have @xmath90 for some @xmath91 . in sequel we will use @xmath88 for absorbing states in a probabilistic automaton .",
    "in sequel we write automata ( resp .",
    "automaton ) to denote probabilistic automata ( resp .",
    "probabilistic automaton ) unless mentioned otherwise .",
    "we now prove some simple properties of absorbing automata with safety condition .",
    "let @xmath5 be an absorbing automaton with @xmath88 as the set of absorbing states .",
    "then for all words @xmath31 we have @xmath92 .",
    "let @xmath93 be the minimum transition probability to absorbing states .",
    "since @xmath5 is absorbing we have @xmath94 .",
    "hence for any word @xmath23 , the probability to reach @xmath88 after @xmath95 steps is at least @xmath96 . since @xmath94 , as @xmath97 we have @xmath98 , and hence the result follows .",
    "* complementation of absorbing safety automata .",
    "* let @xmath5 be an absorbing automaton , with the set @xmath39 as accepting states , and we consider the safety condition @xmath47 . without loss of generality",
    "we assume that every state in @xmath99 is absorbing .",
    "otherwise , if a state in @xmath100 is non - absorbing , we transform it to an absorbing state and obtain an automaton @xmath101 .",
    "it is easy to show that for the safety condition @xmath47 the automata @xmath5 and @xmath101 coincide ( i.e. , for all words @xmath23 we have @xmath102 ) .",
    "hence we consider an absorbing safety automaton such that all states in @xmath103 are absorbing : it follows that every non - absorbing state is an accepting state , i.e. , @xmath104 .",
    "we claim that for all words @xmath23 we have @xmath105 since every state in @xmath104 and all states in @xmath88 are absorbing , it follows that @xmath106 . since @xmath5 is absorbing , for all words @xmath23 we have @xmath92 and",
    "hence it follows that @xmath107 the complement automaton @xmath108 is obtained from @xmath5 by changing the set of accepting states as follows : the set of accepting states @xmath109 in @xmath108 is @xmath110 , i.e. , all non - absorbing states are accepting states , and for absorbing states the accepting states are switched .",
    "since @xmath108 is also absorbing it follows that for all words @xmath23 we have @xmath111 . since @xmath108 is absorbing , it follows that for all words we have @xmath112 and hence @xmath113 .",
    "it follows that for all words @xmath23 we have @xmath114 , i.e. , @xmath108 is the complement of @xmath5 .",
    "it follows from above that an absorbing automaton with safety condition can be transformed to an acceptance - absorbing automaton with reachability condition .",
    "so any hardness result for absorbing safety automata also gives a hardness result for acceptance - absorbing reachability automata ( and hence also for bchi , cobchi , limit - average automata ) .",
    "our first goal is to show that the quantitative equality problem is undecidable for safety and acceptance - absorbing reachability automata .",
    "the reduction is from the post correspondence problem ( pcp ) .",
    "our proof is inspired by and is an extension of a simple elegant proof of undecidability for probabilistic finite automata  @xcite .",
    "we first define the pcp and some related notations .",
    "* let @xmath115 , and extended naturally to @xmath116 ( where @xmath117 ) .",
    "the pcp asks whether there is a word @xmath40 such that @xmath118 .",
    "the pcp is undecidable  @xcite .",
    "_ notations .",
    "_ let @xmath119 $ ] be the function defined as : @xmath120 for @xmath121 , let @xmath122 $ ] .",
    "we first prove a property of @xmath123 , that can be derived from the results of  @xcite .",
    "[ lemm : bert ] for a finite word @xmath40 and a letter @xmath12 we have @xmath124 where @xmath125 .",
    "let @xmath126 , and let @xmath127 and @xmath128 .",
    "then we have @xmath129   & = &   \\displaystyle   \\psi ( b_1 b_2 \\ldots b_m a_1 a_2 \\ldots a_\\ell ) \\\\[1ex ]   & = &   \\displaystyle   \\frac{a_\\ell}{k } + \\cdots + \\frac{a_1}{k^\\ell } +   \\frac{b_m}{k^{\\ell+1 } } + \\cdots + \\frac{b_1}{k^{\\ell+m } } \\\\[1ex ]   & = &   \\displaystyle   \\bigg(\\frac{a_\\ell}{k } + \\cdots + \\frac{a_1}{k^\\ell}\\bigg ) +   \\frac{1}{k^\\ell } \\cdot \\bigg(\\frac{b_m}{k } + \\cdots + \\frac{b_1}{k^{m } } \\bigg ) \\\\[1ex ] & = &   \\displaystyle   \\psi \\circ \\varphi_i(\\sigma ) + \\frac{1}{k^\\ell } \\cdot ( \\psi\\circ \\varphi_i(w ) ) \\\\[1ex ] & = & \\theta_i(\\sigma ) + \\theta_i(w ) \\cdot k_i(\\sigma ) .",
    "\\end{array}\\ ] ] the result follows .",
    "( 25,25)(0,-20 ) ( a1)(-10,0)@xmath130 ( a1)@xmath131 ( a2)(40,0)@xmath132 ( a2)@xmath133 ( a3)(-10,-20)@xmath134 ( a4)(40,-20)@xmath135 ( a3 ) ( a4 ) ( a1,a2)@xmath136 ( a2,a1)@xmath137 ( a2,a3)@xmath138 ( a2,a4)@xmath139 ( a1,a3)@xmath140    * the absorbing safety automata from pcp instances . * given an instance of the pcp problem we create two safety automata @xmath141 , for @xmath121 as follows ( we assume @xmath142 ) :    1 .   _ ( set of states and initial state ) .",
    "_ @xmath143 and @xmath144 ; 2 .   _",
    "( accepting states ) .",
    "_ @xmath145 ; 3 .   _",
    "( transition matrices ) . _",
    "the set of transition matrices is as follows : 1 .",
    "the states @xmath134 and @xmath135 are absorbing ; 2 .",
    "@xmath146 and @xmath147 ; 3 .   for all @xmath12 we have 1 .",
    "@xmath148 ; 2 .",
    "@xmath149 ; @xmath150 ; 3 .",
    "@xmath151 ; @xmath152 ;    a pictorial description is shown in fig  [ fig : safe ] .",
    "we will use the following notations : ( a )  we use @xmath153 for @xmath154 ; ( b )  for a word @xmath155 if the word contains a @xmath156 , then we denote by @xmath157 the prefix @xmath158 of @xmath23 that does not contain a @xmath156 and the first @xmath156 in @xmath23 occurs immediately after @xmath158 ( i.e. , @xmath159 is a prefix of @xmath23 ) .",
    "we now prove some properties of the automata @xmath160 .    1 .",
    "the automata @xmath160 is absorbing : since for every state and every letter the transition probability to the set @xmath161 is at least @xmath162 ; and @xmath134 and @xmath135 are absorbing .",
    "2 .   consider a word @xmath155 .",
    "if the word contains no @xmath156 , then the state @xmath134 is reached with probability  1 ( as every round there is at least probability @xmath162 to reach @xmath134 ) .",
    "if the word @xmath23 contains a @xmath156 , then as soon as the input letter is @xmath156 , then the set @xmath161 is reached with probability  1 .",
    "hence the following assertion holds : the probability @xmath163 is the probability that after the word @xmath164 the current state is @xmath132 .",
    "[ lemm : theta ] for all words @xmath40 , the probability that in the automaton @xmath160 after reading @xmath23 ( a )  the current state is @xmath132 is equal to @xmath165 ; ( b )  the current state is @xmath130 is equal to @xmath166 ; and ( c )  the current state is @xmath134 is equal to @xmath167 .",
    "the result follows from induction on length of @xmath23 , and the base case is trivial .",
    "we prove the inductive case .",
    "consider a word @xmath168 : by inductive hypothesis the probability that after reading @xmath23 the current state is @xmath130 is @xmath169 and the current state is @xmath132 is @xmath170 , and the current state is @xmath134 with probability @xmath171 .",
    "after reading @xmath172 , if the current state is @xmath130 or @xmath132 , with probability @xmath162 a transition to @xmath134 is made .",
    "hence the probability to be at @xmath134 after @xmath168 is @xmath173 and the rest of the probability is to be at either @xmath130 and @xmath132 .",
    "the probability to be at @xmath132 is @xmath174 the first equality follows by rearranging and the second equality follows from lemma  [ lemm : bert ] . hence the result follows .",
    "the following lemma is an easy consequence .",
    "[ lemm : theta_val ] for @xmath121 , for a word @xmath155 , ( a )  if @xmath23 contains no @xmath156 , then @xmath175 ; ( b )  if @xmath23 contains a @xmath156 , let @xmath164 , then @xmath176 .    * constant automata and random choice automata .",
    "* for any rational constant @xmath177 it is easy to construct an absorbing safety automaton @xmath5 that assigns value @xmath177 to all words . given two absorbing safety automata @xmath178 and @xmath179 , and two non - negative rational numbers @xmath180 such that @xmath181 , it is easy to construct an automaton @xmath5 ( by adding an initial state with initial randomization ) such that for all words @xmath23 we have @xmath182 .",
    "we will use the notation @xmath183 for the automaton @xmath5 .",
    "( 25 , 10)(0,-5 ) ( a1)(0,0)@xmath130 ( a1)@xmath9 ( a2)(25,0)@xmath132 ( a2)@xmath153 ( a1,a2)@xmath156    * safety automaton @xmath184 .",
    "* we consider a safety automaton @xmath184 on the alphabet @xmath153 as follows : ( a )  for a word @xmath23 without any @xmath156 the acceptance probability is  1 ; ( b )  for a word with a @xmath156 the acceptance probability is  0 .",
    "the automaton is shown in fig  [ fig : aut3 ] and the only accepting state is @xmath130 .",
    "consider the acceptance - absorbing reachability automaton @xmath185 as follows : the automaton is same as in fig  [ fig : aut3 ] with accepting state as @xmath132 : the automaton accepts a word with a @xmath156 with probability  1 , and for words with no @xmath156 the acceptance probability is  0 .",
    "[ thrm1 ] the quantitative equality problem is undecidable for probabilistic safety and acceptance - absorbing reachability automata .",
    "consider an automaton @xmath186 ( since @xmath179 is absorbing we can complement @xmath179 and obtain an automaton for @xmath187 ) .",
    "we show that the quantitative equality problem for @xmath5 with @xmath188 is yes iff the answer to the pcp problem instance is yes .",
    "we prove the following two cases .    1 .",
    "suppose there is a finite word @xmath23 such that @xmath118 .",
    "consider the infinite word @xmath189 where @xmath158 is an arbitrary infinite word .",
    "then the acceptance probability of @xmath190 in @xmath184 is  0 ( since it contains a @xmath156 ) .",
    "since @xmath190 contains a @xmath156 and @xmath191 , by lemma  [ lemm : theta_val ] the acceptance probability of @xmath190 in @xmath5 is @xmath192 .",
    "since @xmath118 it follows that @xmath193 .",
    "it follows that the acceptance probability of @xmath190 in @xmath5 is @xmath194 .",
    "2 .   consider an infinite word @xmath23 .",
    "if the word contains no @xmath156 , then the acceptance probability of @xmath23 in @xmath178 and @xmath179 is  0 , and the acceptance probability in @xmath184 is  1 . hence @xmath5 accepts @xmath23 with probability @xmath195 .",
    "if the word @xmath23 contains a @xmath156 , then @xmath184 accepts @xmath23 with probability  0 .",
    "the difference of acceptance probability of @xmath23 in @xmath178 and @xmath179 is @xmath196 , where @xmath164 .",
    "hence the acceptance probability of @xmath23 in @xmath5 is @xmath194 iff @xmath197 .",
    "hence @xmath158 is a witness that @xmath198 .",
    "it follows that there exists a finite word @xmath23 that is a witness to the pcp instance iff there exists an infinite word @xmath190 in @xmath5 with acceptance probability equal to @xmath194 .",
    "for acceptance - absorbing reachability automata : consider the same construction as above with @xmath184 being replaced by @xmath185 , and the equality question for @xmath199 .",
    "since @xmath200 , it follows that any witness word must contain a @xmath156 , and then the proof is similar as above .",
    "the result for acceptance - absorbing reachability automata also follows easily from @xcite .",
    "* quantitative existence and value problems .",
    "* we will now show that the quantitative existence and the quantitative value problems are undecidable for probabilistic absorbing safety automata .",
    "we start with a technical lemma .",
    "[ lemm : tech ] let us consider a pcp instance .",
    "let @xmath201 .",
    "for a finite word @xmath23 , if @xmath202 , then @xmath203 .    given the word @xmath23 , we have @xmath204 , for @xmath121 .",
    "it follows that @xmath205 can be expressed as a rational number @xmath206 , where @xmath207 .",
    "it follows that if @xmath208 , then @xmath209 . the result follows .",
    "( 25 , 15)(-10,-5 ) ( a1)(0,0)@xmath130 ( a1)@xmath210 ( a2)(25,0)@xmath132 ( a2)@xmath153 ( a1,a2)@xmath156 ( a3)(-25,0)@xmath134 ( a3)@xmath153 ( a1,a3)@xmath211    * automaton @xmath212 . *",
    "consider the automaton shown in fig  [ fig : aut5 ] : the accepting states are @xmath130 and @xmath132 .",
    "for any input letter in @xmath9 , from the initial state @xmath130 the next state is itself with probability @xmath213 , and the rest of the probability is to goto @xmath134 . for input letter",
    "@xmath156 the next state is @xmath132 with probability  1 .",
    "the states @xmath132 and @xmath134 are absorbing . given a word @xmath23 ,",
    "if there is no @xmath156 in @xmath23 , then the acceptance probability is  0 ; otherwise the acceptance probability is @xmath214 , where @xmath164 .",
    "also note that the automaton @xmath212 is absorbing .",
    "[ thrm2 ] the quantitative existence and value problems are undecidable for probabilistic absorbing safety automata .",
    "let us first consider the following automata : @xmath215 and @xmath216 .",
    "the cartesian product of @xmath217 and @xmath218 gives us the automaton @xmath219 . finally , let us consider the automaton @xmath220 .",
    "the automaton @xmath221 can be obtained as an absorbing safety automaton .",
    "we show that there exists a word ( or the sup value of words ) is greater than @xmath222 iff the answer to pcp is yes .    1 .",
    "if the answer to pcp problem is yes , consider the witness finite word @xmath23 such that @xmath118 .",
    "we construct an infinite word @xmath190 for @xmath221 as follows : @xmath189 where @xmath158 is an arbitrary infinite word . since the word @xmath190 contains a @xmath156 by lemma  [ lemm : theta_val ] we have the difference in acceptance probability of @xmath190 in @xmath178 and @xmath179 is @xmath223 .",
    "since @xmath118 , it follows that @xmath224 .",
    "hence we have @xmath225 .",
    "we now show that if there is an infinite word with acceptance probability greater than @xmath222 ( or the sup over the infinite words of the acceptance probability is greater than @xmath222 ) in @xmath221 , then the answer to the pcp problem is yes . consider an infinite word @xmath23 for @xmath221 .",
    "if @xmath23 contains no @xmath156 , then @xmath178 , @xmath179 , and @xmath212 accepts @xmath23 with probability  0 , and hence the acceptance probability in @xmath221 is @xmath222 .",
    "consider an infinite word @xmath23 that contains a @xmath156 .",
    "let @xmath164 .",
    "if @xmath226 , then by lemma  [ lemm : theta_val ] and lemma  [ lemm : tech ] we have @xmath227 . since @xmath228 , it follows that @xmath229 . if @xmath197 ( which implies @xmath198 ) , then @xmath230 .",
    "it follows from above that the quantitative existence and the quantitative value problems are undecidable for absorbing safety ( and hence also for acceptance - absorbing reachability ) automata .",
    "given any rational @xmath231 , the quantitative equality , existence , and value problems are undecidable for probabilistic absorbing safety and acceptance - absorbing reachability automata .",
    "we have shown in theorem  [ thrm1 ] and theorem  [ thrm2 ] that the problems are undecidable for specific constants ( e.g. , @xmath232 etc . ) .",
    "we show below given the problem is undecidable for a constant @xmath233 , the problem is also undecidable for any given rational @xmath70 . given an automaton @xmath221 we consider two cases :    1 .",
    "if @xmath234 , then consider the automaton @xmath235 .",
    "the quantitative decision problems for constant @xmath236 in @xmath221 is exactly same as the quantitative decision problems for @xmath5 with @xmath1 .",
    "2 .   if @xmath237 , then consider the automaton @xmath238 . the quantitative decision problems for @xmath236 in @xmath221 is exactly same as the quantitative decision problems for @xmath5 with @xmath1 .    the desired result follows .",
    "the result for acceptance - absorbing reachability automata also follows from @xcite .",
    "given any rational @xmath231 , the quantitative equality , existence and value problems are undecidable for probabilistic safety , reachability , bchi , cobchi and limit - average automata .",
    "in this section we show that the qualitative decision problems are decidable for safety automata , and the limit problem is undecidable for reachability , bchi , cobchi and limit - average automata . the result is inspired from the proof of  @xcite that shows that the limit problem is undecidable for finite automata .",
    "if the finite automata construction of  @xcite were acceptance absorbing , the result would have followed for acceptance - absorbing reachability automata ( and hence also for bchi , cobchi and limit - average automata ) . however , the undecidability proof of  @xcite for finite automata constructs automata that are not acceptance - absorbing .",
    "simply changing the accepting states of the automata constructed in  @xcite to absorbing states does not yield the undecidability for accepting absorbing automata .",
    "we show that the construction of  @xcite can be adapted to prove undecidability of the limit problem for acceptance - absorbing automata with reachability condition .",
    "we first present a simple proof that for safety condition the almost and limit problem coincide .",
    "if the answer to the almost problem is yes , then trivially the answer to the limit problem is yes ( since a witness for almost problem is a witness for all @xmath2 for the limit problem ) .",
    "we now show the converse is true .",
    "consider an automaton @xmath5 with @xmath239 states , and let @xmath94 be the minimum non - zero transition probability in @xmath5 .",
    "we assume that the answer to the limit problem is yes and show that the answer to the almost problem is also yes .",
    "consider @xmath240 , and let @xmath23 be a word such that @xmath241 .",
    "for a position @xmath26 of @xmath23 let @xmath242 be the set of states that have positive probability in the distribution of states after reading the prefix of length @xmath26 of @xmath23 .",
    "if a path in @xmath5 leaves the set @xmath39 of accepting states within @xmath243 steps , then it leaves with probability at least @xmath244 . since @xmath23 ensures the safety condition with probability at least",
    "@xmath245 it follows that for all @xmath246 we have @xmath247 ( i.e. , each @xmath248 upto @xmath249 is a subset of the accepting states ) .",
    "there must exist @xmath250 such that @xmath251 .",
    "consider the word @xmath252 .",
    "the word @xmath190 ensures the following : let @xmath253 , then for all @xmath254 we have @xmath255 , and for all @xmath256 we have @xmath257 .",
    "it follows that for all @xmath18 we have @xmath258 and hence @xmath259 . the result follows .",
    "* qualitative decision problems for safety conditions .",
    "* the above lemma shows that for safety condition the answers to the almost and the limit problem coincide .",
    "the almost and positive problems for safety condition are pspace - complete  @xcite .",
    "it follows that the qualitative decision problems are decidable for safety condition .",
    "( 25,45)(20,-25 ) ( a1)(0,0)@xmath132 ( a1)@xmath260 ( a2)(20,0)@xmath134 ( a2)@xmath261 ( a3)(0,-16)@xmath135 ( a4)(20,-16)@xmath262 ( a3)@xmath263 ( a4)@xmath263 ( a1,a2)@xmath264 ( a2,a1)@xmath265 ( a1,a4)@xmath156 ( a2,a4)@xmath156 ( a1,a3)@xmath265    ( a5)(40,0)@xmath266 ( a5)@xmath264 ( a6)(60,0)@xmath267 ( a6)@xmath261 ( a7)(40,-16)@xmath268 ( a8)(60,-16)@xmath269 ( a7)@xmath263 ( a8)@xmath263 ( a5,a6)@xmath260 ( a6,a5)@xmath265 ( a5,a8)@xmath156 ( a6,a8)@xmath156 ( a5,a7)@xmath265    [ lemm : limit_lemma ] consider the acceptance - absorbing automaton @xmath270 , where @xmath178 and @xmath179 are shown in fig  [ fig : limit ] .",
    "the following assertion hold : for all @xmath2 , there exists a word @xmath23 such that @xmath241 iff @xmath271 .    given @xmath2 , a word @xmath23 to be accepted with probability",
    "at least @xmath272 both @xmath178 and @xmath179 must accept it with probability at least @xmath273 .",
    "conversely , given a word @xmath23 if it is accepted by @xmath178 and @xmath179 with probability at least @xmath273 , then @xmath5 accepts it with probability at least @xmath273 .",
    "hence we show that for all @xmath2 there exist words @xmath23 such that both @xmath274 and @xmath275 iff @xmath276 .",
    "we first observe that a word @xmath23 to be accepted in @xmath178 can have a @xmath156 only after having reached its absorbing accepting state ( since for all other states the input letter @xmath156 leads to the non - accepting absorbing state @xmath262 ) .",
    "a word @xmath23 to be accepted in @xmath179 must have a @xmath156 , and the @xmath156 must occur when the current state is either @xmath266 or @xmath267 .",
    "a word to be accepted in @xmath178 must contain a @xmath265 and the @xmath265 must occur when the current state is @xmath132 . hence it suffices to consider words of the form @xmath277 , where @xmath158 is an arbitrary infinite word and @xmath23 is a finite word of the form @xmath278 . consider a word @xmath279 , for @xmath280 : the probability to reach the state @xmath135 from @xmath132 is @xmath281 , and the probability to reach the absorbing non - accepting state @xmath268 from @xmath266 is @xmath282 .",
    "consider a word @xmath283 : ( a )  the probability of reaching @xmath135 from @xmath132 in @xmath178 is @xmath284 ; ( b )  the probability of reaching @xmath268 from @xmath266 in @xmath179 is @xmath285 & = & 1-\\prod_{k=0}^i(1-(1-x)^{n_i } ) .",
    "\\end{array}\\ ] ] if @xmath286 , then @xmath287 , and hence @xmath288 .",
    "it follows that the acceptance probability of @xmath23 in @xmath178 is less than the rejection probability in @xmath179 , hence @xmath289 .",
    "it follows that if @xmath290 , then for all words @xmath23 we have @xmath289 .    to complete the proof",
    "we show that if @xmath276 , then for all @xmath2 , there exist words @xmath23 such that both @xmath274 and @xmath275 .",
    "our witness words @xmath190 will be of the following form : let @xmath291 and we will have @xmath292 . our witness construction closely follows the result of  @xcite . given the word @xmath23 , the probability to reach @xmath135 from @xmath132 is @xmath293 hence @xmath178 accepts @xmath190 with probability @xmath294 .",
    "given the word @xmath23 , since the last letter is a @xmath265 , with probability  1 the current state is either @xmath268 or @xmath266 .",
    "the probability to reach @xmath268 from @xmath266 for @xmath23 is given by @xmath295 & \\leq & \\sum_{k=0}^i(1-x)^{n_i } \\qquad \\text { since }   \\prod_{k=0}^{j}(1-(1-x)^{n_k } ) \\leq 1 \\text { for all } j \\leq i. \\end{array}\\ ] ] thus the acceptance probability for @xmath23 in @xmath179 is at least @xmath296 .",
    "hence given @xmath2 , our goal is to construct a sequence @xmath297 such that @xmath298 and @xmath299 . for @xmath2 , it suffices to construct an infinite sequence @xmath300 such that @xmath301 then we can construct a finite sequence @xmath302 of numbers such that we have both @xmath303 as desired . since @xmath304 iff @xmath305",
    ", we construct sequence @xmath300 such that @xmath305 , and @xmath306 .",
    "let @xmath300 be a sequence such that @xmath307 , where @xmath308 is a suitable constant ( to be chosen later and depends on @xmath309 and @xmath310 ) .",
    "then we have @xmath311 on the other hand , we have @xmath312 since @xmath313 we have @xmath314 , i.e. , there exists @xmath315 such that @xmath316 .",
    "hence @xmath317 since the above series converges , for all @xmath2 , there exists a @xmath308 such that @xmath318 .",
    "this completes the proof .    *",
    "almost and limit problem do not coincide .",
    "* in contrast to probabilistic safety automata where the almost and limit question coincide , the answers are different for probabilistic acceptance - absorbing reachability automata . in the automaton @xmath5 above if @xmath313 , the answer to the limit question is yes .",
    "it follows from the proof above that if @xmath319 , then though the answer to the limit question is yes , the answer to the almost question is no .",
    "the almost and positive problem for reachability automata is decidable by reduction to pomdps with reachability objective .",
    "we show that the limit question is undecidable .",
    "the proof uses the above lemma and the reduction technique of  @xcite .    *",
    "reduction for undecidability . * given an acceptance - absorbing reachability automaton @xmath221 , we construct an automaton as shown in fig  [ fig : limitundec ] : we assume that @xmath320 does not belong to the alphabet of @xmath221 , and in the picture the dashed transitions from @xmath221 on @xmath320 are from accepting states , and the solid transitions are from non - accepting states .",
    "we call the automaton as @xmath321 .",
    "we claim the following : the answer to the limit problem for the automaton @xmath321 is yes iff there exists a word @xmath23 that is accepted in @xmath221 with probability greater than @xmath162 .    1 .",
    "suppose there is a word @xmath190 such that @xmath322 .",
    "let @xmath323 .",
    "there is a finite prefix @xmath23 of @xmath190 such that the probability to reach an accepting state in @xmath221 given @xmath23 is @xmath324 . given @xmath2 and @xmath310 as defined @xmath325",
    ", we have @xmath276 , and hence by lemma  [ lemm : limit_lemma ] there exists a sequence @xmath326 such that @xmath327 is accepted in @xmath5 with probability at least @xmath273 .",
    "it follows that the automaton @xmath321 accepts @xmath328 with probability at least @xmath273 .",
    "it follows that the answer to the limit problem is yes .",
    "if for all words @xmath23 we have @xmath329 , then we show that the answer to the limit problem is no .",
    "let @xmath330 .",
    "consider a word @xmath331 : given this word the probability to reach @xmath135 in @xmath132 given @xmath332 is at most @xmath333 and the probability to reach @xmath268 from @xmath266 given @xmath332 is at least @xmath334 & = & \\displaystyle 1-\\prod_{k=0}^i(1-(1-x)^{n_i } ) .",
    "\\end{array}\\ ] ] the argument is similar to the proof of lemma  [ lemm : limit_lemma ] .",
    "it follows from the argument of lemma  [ lemm : limit_lemma ] that the word is accepted with probability at most @xmath162 in @xmath321 .",
    "thus it follows that for all words @xmath23 we have @xmath335 .",
    "since the quantitative existence problem is undecidable for acceptance absorbing reachability automata ( theorem  [ thrm2 ] ) , it follows that the limit problem is also undecidable .",
    "( 25,50)(20,-30 ) ( a1)(0,0)@xmath132 ( a2)(30,0)@xmath134 ( a2)@xmath261 ( a3)(0,-20)@xmath135 ( a4)(30,-20)@xmath262 ( b1)(15,5)@xmath221 ( a3)@xmath263 ( a4)@xmath263 ( a1,b1)@xmath261 ( b1,a2)@xmath320 ( b1,a1)@xmath320 ( a2,a1)@xmath265 ( a1,a4)@xmath156 ( a2,a4)@xmath156 ( a1,a3)@xmath265    ( a5)(40,0)@xmath266 ( a6)(70,0)@xmath267 ( a6)@xmath261 ( a7)(40,-20)@xmath268 ( a8)(70,-20)@xmath269 ( b2)(55,5)@xmath221 ( a7)@xmath263 ( a8)@xmath263 ( a5,b2)@xmath261 ( b2,a6)@xmath320 ( b2,a5)@xmath320 ( a6,a5)@xmath265 ( a5,a8)@xmath156 ( a6,a8)@xmath156 ( a5,a7)@xmath265        * the case of limit - average automata . *",
    "the proofs for the decidability and undecidability results concerning limit - average conditions differ from the other conditions .",
    "we present how to use the results of @xcite and @xcite to prove that the positive problem for limit - average automata is pspace - complete , and the almost problem for limit - average automata is undecidable . given @xmath336 , the authors of @xcite define : @xmath337 in paper @xcite and @xcite are considered the following decision problems :    * * positive strong recurrence problem : * given a pa @xmath338 , decide whether there exists @xmath339 such that @xmath340>0 $ ] . *",
    "* almost sure strong co - recurrence problem : * given a pa @xmath338 , decide whether there exists @xmath339 such that @xmath341=1 $ ] .        by definition , for any pa @xmath338 and any @xmath342 , for all @xmath336",
    ", we have @xmath343 iff @xmath344 . also , for any pa @xmath338 and any @xmath342 , for all @xmath336 , we have that @xmath345 iff @xmath346 , iff @xmath347 .",
    "finally , we get :    * the following problem is pspace complete : given a pa @xmath338 , decide whether there exist @xmath339 such that @xmath348>0 $ ] .",
    "* the following problem is undecidable : given a pa @xmath338 , decide whether there exist @xmath339 such that @xmath349=1 $ ] .",
    "concerning the first point , a standard result of probability theory says that on a probability space @xmath350 , given a function @xmath351 , we have : @xmath352>0\\ \\mathrm{iff}\\ \\mu(\\lbrace \\pi\\in\\omega\\ s.t.\\ f(x)>0\\rbrace)>0\\ ] ] given @xmath342 , taking @xmath353 the set of paths @xmath354 , @xmath355 as the @xmath172-algebra generated by cones on @xmath353 , @xmath356 as @xmath357 and @xmath358 as the @xmath359 function , we get that : @xmath360>0\\ \\mathrm{iff}\\ \\mathbb{p}^w_\\mathcal{a}[\\lbrace \\pi\\in\\pi\\ s.t.\\ \\mathrm{limitavg}(\\pi)>0\\rbrace]>0\\ ] ] hence the positive limit - average problem is equivalent to the positive strong recurrence problem , which is pspace - complete .",
    "let us now consider the second point .",
    "let @xmath361 be such that for all @xmath336 we have @xmath362 .",
    "by the same argument as before , given @xmath339 , we have : @xmath363>0\\ \\mathrm{iff}\\ \\mathbb{p}^w_\\mathcal{a}[\\lbrace \\pi\\in\\pi\\ s.t.\\ \\overline{\\mathrm{limitavg}}(\\pi)>0\\rbrace]>0\\ ] ]    now , @xmath364=1-\\mathbb{e}^w_\\mathcal{a}[\\mathrm{limitavg}]$ ] . as a consequence",
    ", we have that @xmath365=1 $ ] iff @xmath364=0 $ ] , hence by equation [ e - first ] @xmath366=1\\ \\mathrm{iff}\\   \\mathbb{p}^w_\\mathcal{a}[\\lbrace \\pi\\in\\pi\\ s.t.\\ \\overline{\\mathrm{limitavg}}(\\pi)>0\\rbrace]=0\\ ] ] which is also equivalent to @xmath367=1 $ ] , and to @xmath368=1 $ ] . the remark after theorem [ t - res rec ] complete then the proof .",
    "this gives us the theorem  [ thrm3 ] .",
    "for other qualitative questions the results are as follows : ( a ) we argued that for safety condition that almost and limit problem coincide , and the decision problems are pspace - complete  @xcite .",
    "( b ) for reachability condition the almost and positive problem can be answered through pomdps ( @xcite ) , and the almost problem was shown to be pspace - complete  @xcite .",
    "( c ) for bchi condition it was shown in  @xcite that the positive problem is undecidable and the almost problem is decidable in exptime .",
    "the almost problem was later shown to be pspace - complete  @xcite .",
    "( d ) for cobchi condition it was shown in  @xcite that the almost problem is undecidable and the positive problem is decidable through solution of pomdps with cobchi condition in exptime  @xcite .",
    "the positive problem was later shown to be pspace - complete in  @xcite .",
    "( e ) for limit - average condition the results follow from the last paragraph . for the exact arithmetic hierarchy characterization of the undecidable problems of @xcite see @xcite .",
    "the results are summarized in table  [ tab2 ] ( the results for quantitative existence and quantitative value problem is the same as for quantitative equality problem ) .",
    "[ thrm3 ] the following assertions hold : ( a )  the positive problem is decidable for probabilistic safety , reachability , cobchi and limit - average automata , and is undecidable for probabilistic bchi automata ; ( b )  the almost problem is decidable for probabilistic safety , reachability , and bchi automata , and is undecidable for probabilistic cobchi and limit - average automata ; and ( c )  the limit problem is decidable for probabilistic safety automata and is undecidable for probabilistic reachability , bchi , cobchi and limit - average automata ."
  ],
  "abstract_text": [
    "<S> we consider probabilistic automata on infinite words with acceptance defined by safety , reachability , bchi , cobchi , and limit - average conditions . </S>",
    "<S> we consider quantitative and qualitative decision problems . </S>",
    "<S> we present extensions and adaptations of proofs for probabilistic finite automata and present a complete characterization of the decidability and undecidability frontier of the quantitative and qualitative decision problems for probabilistic automata on infinite words . </S>"
  ]
}
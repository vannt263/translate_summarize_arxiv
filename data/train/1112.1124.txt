{
  "article_text": [
    "[ sec : sec : intro ]    let @xmath0 be a set of @xmath10 points in @xmath2 , @xmath11 .",
    "a convex body @xmath12 is _ empty _ if its interior is disjoint from @xmath0 .",
    "a _ convex partition _ of @xmath0 is a partition of the convex hull @xmath3 into empty convex bodies ( called _ tiles _ ) such that the vertices of the tiles are in @xmath0 . in a _",
    "steiner convex partition _ of @xmath0 the vertices of the tiles are arbitrary : they can be points in @xmath0 or _",
    "steiner points_. for instance , any triangulation of @xmath0 is a convex partitions of @xmath0 , where the convex bodies are simplices , and so @xmath3 can be always partitioned into @xmath13 empty convex tiles  @xcite .    in this paper , we study the minimum number of tiles that a steiner convex partition of every @xmath1 points in @xmath2 admits , and the maximum volume of a single tile for a given point set . the research is motivated by a longstanding open problem by danzer and rogers  @xcite : what is the maximum volume of an empty convex body @xmath14^d$ ] that can be found amidst any set @xmath15^d$ ] of @xmath1 points in a unit cube ?",
    "the current best bounds are @xmath16 and @xmath17 , respectively ( for a fixed @xmath4 ) .",
    "the lower bound comes from decomposing the unit cube by @xmath1 parallel hyperplanes , each containing at least one point , into at most @xmath18 empty convex bodies .",
    "the upper bound is tight apart from constant factors for @xmath1 uniformly distributed random points in the unit cube .",
    "it is suspected that the largest volume is larger than @xmath16 , , it is @xmath19 in any dimension @xmath11 .",
    "[ [ minimum - number - of - tiles - in - a - convex - partition . ] ] minimum number of tiles in a convex partition .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    a _ minimum convex partition _ of @xmath0 is a convex partition of @xmath0 with a minimum number of tiles .",
    "denote this number by @xmath20 .",
    "further define ( by slightly abusing notation ) @xmath21 similarly define a _ minimum steiner convex partition _ of @xmath0 as one with a minimum number of tiles and let @xmath22 denote this number .",
    "we also define @xmath23    there has been substantial work on estimating @xmath24 , and computing @xmath25 for a given set @xmath0 in the plane .",
    "it has been shown successively that @xmath26 by neumann - lara  @xcite , @xmath27 by knauer and spillner  @xcite , and @xmath28 for @xmath29 by sakai and urrutia  @xcite . from the other direction ,",
    "garca - lpez and nicols  @xcite proved that @xmath30 , for @xmath31 , thereby improving an earlier lower bound @xmath32 by aichholzer and krasser  @xcite .",
    "knauer and spillner  @xcite have also obtained a @xmath33-factor approximation algorithm for computing a minimum convex partition for a given set @xmath34 , no three of which are collinear .",
    "there are also a few exact algorithms , including three fixed - parameter algorithms  @xcite .",
    "the state of affairs is much different in regard to steiner convex partitions .",
    "as pointed out in  @xcite , no corresponding results are known for the variant with steiner points . here",
    "we take the first steps in this direction , and obtain the following results .",
    "[ theo : t1 ] for @xmath10 , we have @xmath35 . for @xmath36 ,",
    "this bound is the best possible , that is , @xmath37 ; and for every fixed @xmath38 , we have @xmath39 .",
    "we say that a set of points in @xmath2 is in _ general position _ if every @xmath40-dimensional affine subspace contains at most @xmath41 points for @xmath42 . we show that in the plane every steiner convex partition for @xmath1 points in general position , @xmath43 of which lie in the interior of the convex hull ,",
    "has at least @xmath44 tiles .",
    "this leads to a simple constant - factor approximation algorithm .",
    "[ theo : t2 ] given a set @xmath0 of @xmath1 points in general position in the plane , a ratio @xmath45 approximation of a minimum steiner convex partition of @xmath0 can be computed in @xmath46 time .",
    "the _ average _ volume of a tile in a steiner convex partition of @xmath1 points in the unit cube @xmath9^d$ ] is an obvious lower bound for the maximum possible volume of a tile , and for the maximum volume of any empty convex body @xmath14^d$ ] .",
    "the lower bound @xmath47 in theorem  [ theo : t1 ] shows that the average volume of a tile is @xmath48 in some instances , where the constant of proportionality depends only on the dimension .",
    "this implies that a simple `` averaging '' argument is not a viable avenue for finding a solution to the problem of danzer and rogers .",
    "[ [ maximum - empty - polytope - among - n - points - in - a - unit - cube . ] ] maximum empty polytope among @xmath1 points in a unit cube .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    in the second part of the paper , we consider the following problem : given a set of @xmath1 points in rectangular box @xmath49 in @xmath2 , find a maximum - volume empty convex body @xmath50 .",
    "since the ratio between volumes is invariant under affine transformations , we may assume without loss of generality that @xmath51^d$ ] .",
    "we therefore have the problem of computing a maximum volume empty convex body @xmath14^d$ ] for a set of @xmath1 points in @xmath9^d$ ] .",
    "it can be argued that the maximum volume empty convex body is a polytope , however , the ( number and ) location of its vertices is unknown and this represents the main difficulty .",
    "for @xmath36 there is a polynomial - time exact algorithm ( see  section  [ sec : sec : conclusion ] ) while for @xmath52 we are not aware of any exact algorithm .",
    "thus the problem of finding faster approximations naturally suggests itself .",
    "there exist exact algorithms for some related problems .",
    "eppstein  @xcite find the maximum area empty convex @xmath40-gon with vertices among @xmath1 points in @xmath53 time , if it exists . as a byproduct",
    ", a maximum area empty convex polygon with vertices among @xmath1 given points can be computed exactly in @xmath54 time with their dynamic programming algorithm .    by john",
    "s ellipsoid theorem  @xcite , the maximum volume empty ellipsoid in @xmath9^d$ ] gives a @xmath55-approximation .",
    "here we present a @xmath8-approximation for the maximum volume empty convex body @xmath56 by first guessing a good approximation of the bounding hyperrectangle of @xmath56 of minimum volume , and then finding a sufficiently close approximation of @xmath56 inside it .",
    "we obtain the following two approximation algorithms .",
    "the planar algorithm runs in near - quadratic time in @xmath1 , however , the running time degrades with the dimension .",
    "[ theo : algorithm:2d ] given a set @xmath57 of @xmath1 points in @xmath9 ^ 2 $ ] and parameter @xmath58 , one can compute an empty convex body @xmath59 ^ 2 $ ] , such that @xmath60 .",
    "the running time of the algorithm is @xmath61 .",
    "[ theo : empty ] given a set @xmath57 of @xmath1 points in @xmath9^d$ ] , @xmath6 , and a parameter @xmath58 , one can compute an empty convex body @xmath59^d$ ] , such that @xmath60 .",
    "the running time of the algorithm is @xmath62    as far as the problem of danzer and rogers is concerned , one need not consider convex sets  it suffices to consider triangles  and for triangles the problems considered are much simpler . specifically , the largest area triangle amidst @xmath1 points in the unit square @xmath63 yields a constant - factor approximation of the largest area convex body ( polygon ) amidst the same @xmath1 points .",
    "that is , the asymptotic dependencies on @xmath1 of the areas of the largest empty triangle and convex body are the same . even in higher dimensions , if @xmath4 is fixed , the asymptotic dependencies on @xmath1 of the volumes of the largest empty simplex and convex body are the same . for @xmath36",
    "there is a polynomial - time exact algorithm for computing the largest empty triangle contained in @xmath63 ( see  section  [ sec : sec : conclusion ] ) while for @xmath52 we are not aware of any exact algorithm .",
    "[ [ related - work . ] ] related work .",
    "+ + + + + + + + + + + + +    decomposing polygonal domains into convex sub - polygons has been also studied extensively .",
    "we refer to the article by keil  @xcite for a survey of results up to the year 2000 . for instance ,",
    "when the polygon may contain holes , obtaining a minimum convex partition is np - hard , regardless of whether steiner points are allowed . for polygons without holes , chazelle and",
    "dobkin  @xcite obtained an @xmath64 time algorithm for the problem of decomposing a polygon with @xmath1 vertices , @xmath65 of which are reflex , into convex parts , with steiner points permitted .",
    "keil  @xcite notes that although there are an infinite number of possible locations for the steiner points , a dynamic programming approach is amenable to obtain an exact ( optimal ) solution ; see also  @xcite .",
    "fevens  @xcite designed a polynomial time algorithm for computing a minimum convex partition for a given set of @xmath1 points in the plane if the points are arranged on a constant number of convex layers . the problem of minimizing the total euclidean length of the edges of a convex partition has been also considered .",
    "grantson and levcopoulos  @xcite , and spillner  @xcite proved that the shortest convex partition and steiner convex partition problems are fixed parameter tractable , where the parameter is the number of points of @xmath66 lying in the interior of @xmath67 .",
    "dumitrescu and tth  @xcite proved that every set of @xmath1 points in @xmath68 admits a steiner convex partition which is at most @xmath69 times longer than the minimum spanning tree , and this bound can not be improved . without steiner points , the best upper bound for the ratio of the minimum length of a convex partition and the length of a minimum spanning tree ( mst ) is @xmath70  @xcite .",
    "a largest area convex polygon contained in a given ( non - convex ) polygon with @xmath1 vertices can be found by the algorithm of chang and yap  @xcite in @xmath71 time .",
    "the problem is known as the _ potato - peeling problem_. on the other hand , a largest area triangle contained in a simple polygon with @xmath1 vertices , can be found by the algorithm of melissaratos and souvaine  @xcite in @xmath54 time .",
    "hall - holt  @xcite compute a constant approximation in time @xmath46 .",
    "the same authors show how to compute a @xmath8-approximation of the largest _ fat _ triangle inside a simple polygon ( if it exists ) in time @xmath70 . given a triangulated polygon ( with possible holes ) with @xmath1 vertices , aronov  @xcite compute the largest area convex polygon respecting the triangulation edges in @xmath72 time .",
    "for finding a maximum volume empty axis - parallel box amidst @xmath1 points in @xmath9^d$ ] , backer and keil  @xcite reported an algorithm with worst - case running time of @xmath73 .",
    "an empty axis - aligned box whose volume is at least @xmath8 of the maximum can be computed in @xmath74 time by the algorithm of dumitrescu and jiang  @xcite .",
    "lawrence and morris  @xcite studied the minimum integer @xmath75 such that the complement @xmath76 of any @xmath1-element set @xmath77 , not all in a hyperplane , can be _ covered _ by @xmath75 convex sets .",
    "they prove @xmath78 .",
    "it is known that covering the complement of @xmath1 uniformly distributed points in @xmath9^d$ ] requires at least @xmath79 convex sets , which follows from the upper bound in the problem of danzer and rogers .",
    "[ sec : sec : bounds ]    in this section we prove theorem  [ theo : t1 ] .",
    "we start with the upper bound .",
    "the following simple algorithm returns a steiner convex partition with at most @xmath5 tiles for any @xmath1 points in @xmath2 .",
    "algorithm * a1 * :    1 .",
    "compute the convex hull @xmath80 of @xmath0 .",
    "let @xmath81 be the set of hull vertices , and let @xmath82 denote the remaining points . 2 .",
    "compute @xmath83 , and let @xmath84 be the supporting hyperplane of an arbitrary @xmath85-dimensional face of @xmath83 .",
    "denote by @xmath86 the halfspace that contains @xmath49 , and @xmath87 .",
    "the hyperplane @xmath84 contains @xmath4 points of @xmath49 , and it decomposes @xmath88 into two convex bodies : @xmath89 is empty and @xmath90 contains all points in @xmath91 .",
    "update @xmath92 and @xmath93 .",
    "repeat step 2 with the new values of @xmath88 and @xmath49 until @xmath49 is the empty set .",
    "( if @xmath94 , then any supporting hyperplane of @xmath49 completes the partition . )",
    "= 6.1 in    [ fig : f1 ]    it is obvious that the algorithm generates a steiner convex partition of @xmath0 .",
    "an illustration of algorithm * a1 * on a small planar example appears in figure  [ fig : f1 ]  ( right ) .",
    "let @xmath95 and @xmath43 denote the number of hull and interior points of @xmath0 , respectively , so that @xmath96 .",
    "each hyperplane used by the algorithm removes @xmath4 interior points of @xmath0 ( with the possible exception of the last round if @xmath43 is not a multiple of @xmath4 ) .",
    "hence the number of convex tiles is @xmath97 , and we have @xmath98 , as required .    [",
    "[ lower - bound - in - the - plane . ] ] lower bound in the plane .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + +    a matching lower bound in the plane is given by the following construction .",
    "for @xmath99 , let @xmath100 , where @xmath101 is a set of 3 non - collinear points in the plane , and @xmath49 is a set of @xmath102 points that form a regular @xmath103-gon in the interior of @xmath104 , so that @xmath105 is a triangle .",
    "if @xmath106 , then @xmath3 is an empty triangle , and @xmath107 .",
    "if @xmath108 , @xmath0 is not in convex position , and so @xmath109 .",
    "suppose now that @xmath29 .",
    "consider an arbitrary convex partition of @xmath0 .",
    "let @xmath110 be a point in the interior of @xmath83 such that the lines @xmath111 , @xmath112 , do not contain any edges of the tiles .",
    "refer to figure  [ fig : lower - bound ]  ( left ) . for each point @xmath113 , choose a _ reference point _",
    "@xmath114 on the ray @xmath115 in @xmath116 sufficiently close to point @xmath117 , and lying in the interior of a tile .",
    "note that the convex tile containing @xmath110 can not contain any reference points .",
    "we claim that any tile contains at most 2 reference points .",
    "this immediately implies @xmath118 .",
    "suppose , to the contrary , that a tile @xmath119 contains 3 reference points @xmath120 , corresponding to the points @xmath121 .",
    "refer to figure  [ fig : lower - bound ] .",
    "[ htb ]    [ fig : lower - bound ]    note that @xmath110 can not be in the interior of @xmath119 , otherwise @xmath119 would contain all points @xmath121 in its interior . hence @xmath122 is a quadrilateral , and @xmath123 is also a quadrilateral , since the reference points are sufficiently close to the corresponding points in @xmath49 .",
    "we may assume w.l.o.g . that vertices of @xmath122 are @xmath110 , @xmath124 , @xmath125 , @xmath126 in counterclockwise order .",
    "then @xmath125 lies in the interior of @xmath123 .",
    "we conclude that every tile @xmath119 contains at most 2 reference points , as required .",
    "[ [ lower - bounds - for - dgeq-3 . ] ] lower bounds for @xmath6 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    a similar construction works in for any @xmath38 , but the lower bound no longer matches the upper bound @xmath127 for @xmath52 .",
    "recall that a _ horton set _",
    "@xcite is a set @xmath0 of @xmath1 points in the plane such that the convex hull of any 7 points is non - empty .",
    "valtr  @xcite generalized horton sets to @xmath2 . for every @xmath128",
    ", there exists a minimal integer @xmath129 with the property that for every @xmath130 there is a set @xmath0 of @xmath1 points in general position in @xmath2 such that the convex hull of any @xmath131 points in @xmath0 is non - empty .",
    "it is known that @xmath132 , and valtr proved that @xmath133 , and in general that @xmath134 , where @xmath135 is the product of the first @xmath40 primes .",
    "we construct a set @xmath0 of @xmath10 points in @xmath2 as follows .",
    "let @xmath100 , where @xmath101 is a set of @xmath136 points in general position in @xmath2 , and @xmath49 is a generalized horton set of @xmath137 points in the interior of @xmath104 , such that the interior of any @xmath131 points from @xmath49 contains some point in @xmath49 .",
    "consider an arbitrary steiner convex partition of @xmath0 .",
    "every point @xmath138 is in the interior of @xmath3 , and so it lies on the boundary of at least 2 convex tiles . for each @xmath138 ,",
    "place two _ reference points _ in the interiors of 2 distinct tiles incident to @xmath139 .",
    "every tile contains at most @xmath129 reference points . indeed , if a tile contains @xmath131 reference points , then it is incident to @xmath131 points in @xmath49 , and some point of @xmath49 lies in the interior of the convex hull of these points , a contradiction .",
    "we have @xmath140 reference points , and every tile contains at most @xmath129 of them .",
    "so the number of tiles is at least @xmath141 .",
    "[ sec : sec : steiner ]    in this section we prove  theorem  [ theo : t2 ] by showing that our simple - minded algorithm * a1 * from section  [ sec : sec : bounds ] achieves a constant - factor approximation in the plane if the points in @xmath0 are in general position .    [ [ approximation - ratio . ] ] approximation ratio .",
    "+ + + + + + + + + + + + + + + + + + + +    recall that algorithm * a1 * computes a steiner convex partition of @xmath3 into at most @xmath142 parts , where @xmath43 stands for the number of interior points of @xmath0 .    if @xmath143 , the algorithm computes an optimal partition , , @xmath144 .",
    "assume now that @xmath145 .",
    "consider an optimal steiner convex partition @xmath146 of @xmath0 with @xmath147 tiles .",
    "we construct a planar multigraph @xmath148 as follows .",
    "the _ faces _ of @xmath149 are the convex tiles and the exterior of @xmath3 ( the outer face ) .",
    "the _ vertices _ @xmath150 are the points in the plane incident to at least 3 faces ( counting the outer face as well ) .",
    "since @xmath145 , @xmath149 is non - empty and we have @xmath151 . each _ edge _ in @xmath152 is a jordan arc on the common boundary of two faces .",
    "an edge between two bounded faces is a straight line segment , and so it contains at most two interior points of @xmath0 .",
    "an edge between the outer face and a bounded face is a convex arc , containing hull points from @xmath0 .",
    "double edges are possible if two vertices of the outer face are connected by a straight line edge and a curve edge along the boundary  in this case these two parallel edges bound a convex face .",
    "no loops are possible in @xmath149 .",
    "since @xmath146 is a convex partition , @xmath149 is connected .",
    "let @xmath153 , @xmath154 , and @xmath155 , respectively , denote the number of vertices , edges , and bounded ( convex ) faces of @xmath149 ; in particular , @xmath156 . by euler",
    "s formula for planar multigraphs , we have @xmath157 , that is , @xmath158 . by construction , each vertex of @xmath149 is incident to at least 3 edges , and every edge is incident to two vertices .",
    "therefore , @xmath159 , or @xmath160 . consequently , @xmath161 .",
    "since @xmath0 is in general position , each straight - line edge of @xmath149 contains at most 2 interior points from @xmath0 .",
    "curve edges along the boundary do not contain interior points . hence each edge in @xmath152 is incident to at most two interior points in @xmath0 , thus @xmath162 . substituting this into the previous inequality on @xmath155 yields @xmath163 . comparing this lower bound with the upper bound @xmath164",
    ", we conclude that @xmath165 and the approximation ratio of 3 follows .",
    "[ [ tightness - of - the - approximation - ratio . ] ] tightness of the approximation ratio .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we first show that the above ratio @xmath45 is tight for algorithm * a1*. we construct a planar point set @xmath0 as follows . consider a large ( say , hexagonal ) section of a hexagonal lattice .",
    "place steiner vertices at the lattice points , and place two points in @xmath0 on each lattice edge . slightly perturb the lattice , and add a few more points in @xmath0 near the boundary , and a few more steiner points , so as to obtain a steiner convex partition of @xmath0 with no three points collinear . denote by @xmath153 , @xmath154 , and @xmath155 , the elements of the planar multigraph @xmath149 as before .",
    "since we consider a large lattice section , we have @xmath166 .",
    "we write @xmath167 , whenever @xmath168 . as before , we have @xmath169 , and",
    "since each non - boundary edge is shared by two convex faces , we have @xmath170 . by construction ,",
    "@xmath171 , hence @xmath172 .",
    "therefore the convex partition constructed above has @xmath172 , while algorithm * a1 * constructs one with about @xmath173 faces .",
    "letting @xmath174 , then @xmath175 , and the ratio @xmath176 approaches @xmath45 in the limit : @xmath177 .",
    "[ [ time - analysis . ] ] time analysis .",
    "+ + + + + + + + + + + + + +    it is easy to show that algorithm * a1 * runs in @xmath178 time for a set @xmath0 of @xmath1 points in the plane .",
    "we employ the semi - dynamic ( delete only ) convex hull data structure of hershberger and suri  @xcite .",
    "this data structure supports point deletion in @xmath179 time , and uses @xmath70 space and @xmath180 preprocessing time .",
    "we maintain the boundary of a convex polygon @xmath88 in a binary search tree , a set @xmath181 of points lying in the interior of @xmath88 , and the convex hull @xmath83 with the above semi - dynamic data structure  @xcite .",
    "initially , @xmath182 , which can be computed in @xmath180 time ; and @xmath181 is the set of interior points . in each round of the algorithm , consider the supporting line @xmath84 of an arbitrary edge @xmath154 of @xmath83 such that @xmath49 lies in the halfplane @xmath86 .",
    "the two intersection points of @xmath84 with the boundary of @xmath88 can be computed in @xmath179 time . at the end of the round ,",
    "we can update @xmath183 and @xmath83 in @xmath184 time , where @xmath40 is the number of points removed from @xmath49 ; and we can update @xmath185 in @xmath179 time . every point is removed from @xmath49 exactly once , and the number of rounds is at most @xmath186 , so the total update time is @xmath180 throughout the algorithm .    [ [ remark . ] ] remark .",
    "+ + + + + + +    interestingly enough , in dimensions 3 and higher , algorithm * a1 * does not give a constant - factor approximation .",
    "for every integer @xmath1 , one can construct a set @xmath0 of @xmath1 points in general position in @xmath187 such that @xmath188 of them lie in the interior of @xmath3 , but the minimum steiner convex partition has only @xmath189 tiles .",
    "in contrast , algorithm * a1 * computes a steiner partition with @xmath190 convex tiles .",
    "we first construct the convex tiles , and then describe the point set @xmath0 .",
    "specifically , @xmath0 consists of 4 points of a large tetrahedron , and 3 points in general position on the common boundary of certain pairs of adjacent tiles .",
    "let @xmath191 .",
    "place @xmath192 steiner points @xmath193 on the saddle surface @xmath194 for pairs of integers @xmath195 , @xmath196 .",
    "the four points @xmath197 form a parallelogram for every @xmath195 , @xmath198 .",
    "refer to figure  [ fig : lower - bound ]  ( right ) .",
    "these parallelograms form a terrain over the region @xmath199 .",
    "note that no two parallelograms are coplanar .",
    "subdivide the space _ below _ this terrain by vertical planes @xmath200 , @xmath201 . similarly , subdivide the space _ above _ this terrain by planes @xmath202",
    ", @xmath203 . we obtain @xmath204 interior - disjoint convex regions , @xmath40 above and @xmath40 below the terrain , such that the common boundary of a region above and a region below is a parallelogram of the terrain .",
    "the points in @xmath187 that do not lie above or below the terrain can be covered by 4 convex wedges .",
    "enclose the terrain in a sufficiently large tetrahedron @xmath205 .",
    "clip the @xmath204 convex regions and the 4 wedges into the interior of @xmath205 .",
    "these @xmath206 convex bodies tile @xmath205 .",
    "choose 3 noncollinear points of @xmath0 in each of the @xmath207 parallelograms , such that no 4 points are coplanar and no 2 are collinear with vertices of @xmath205 .",
    "let the point set @xmath0 be the set of 4 vertices of the large tetrahedron @xmath205 and the @xmath208 points selected from the parallelograms .",
    "[ sec : sec : body ]    let @xmath57 be a set of points in the unit cube @xmath9^d \\subseteq { \\mathbb{r}}^d$ ] .",
    "our task is to approximate the largest convex body @xmath209^d$ ] that contains no points of @xmath57 in its interior .",
    "let @xmath210 denote this body , and let @xmath211 denote its volume .      in the following ,",
    "assume that @xmath212 is some integer , and consider the grid point set @xmath213{0cm}{0.4cm}}\\right . } } \\right\\}}.\\ ] ] let @xmath214^d$ ] be a point set , and let @xmath56 be the corresponding largest empty convex body in @xmath9^d$ ] .",
    "given a grid @xmath215 , we call @xmath216 the _ discrete hull _ of @xmath56  @xcite . we need the following easy lemma .",
    "[ lemma : discrete : hull][discrete : hull ] let @xmath217^d$ ] be a convex body and @xmath218 .",
    "then we have @xmath219 , where the constant of proportionality depends only on @xmath4 .",
    "consider a point @xmath220 .",
    "consider the set of @xmath221 points @xmath222 , where @xmath223 is the unit vector having one in the @xmath43thcoordinate , and @xmath224 everywhere else .",
    "if one of the points of @xmath225 is outside @xmath12 , then the distance from @xmath226 to the boundary of @xmath12 is at most @xmath227 .",
    "otherwise , the cube @xmath228^d / m$ ] is contained in the `` diamond '' @xmath229 , which is in turn contained in @xmath12 .",
    "but then , the grid points of the grid cell of @xmath230 containing @xmath226 are in @xmath12 , and @xmath226 can not be outside @xmath231 .",
    "we reached a contradiction .",
    "it follows that all the points in the corridor @xmath232 are at distance at most @xmath233 from the boundary of @xmath12 .",
    "the volume of the boundary of @xmath12 is bounded by the volume of the boundary of the unit cube , namely @xmath221 .",
    "as such , the volume of this corridor is @xmath234 . for a fixed @xmath4 ,",
    "this is @xmath235 , as claimed .",
    "lemma  [ lemma : discrete : hull ] implies that if @xmath236 , in order to obtain a @xmath237)-approximation , we can concentrate our search on convex polytopes that have their vertices at grid points in @xmath230 , where @xmath238 .",
    "if @xmath239 is a constant , then the maximum volume empty lattice polytope in @xmath230 with @xmath240 is an @xmath8-approximation for @xmath56 .",
    "however , for arbitrary @xmath241 , a much finer grid would be necessary to achieve this approximation .      in this section",
    "we present approximation algorithms relying on lemma  [ lemma : discrete : hull ] alone , approximating the maximum volume empty polytope by a lattice polytope in a sufficiently fine lattice ( grid ) .",
    "we shall refine our technique in subsections  [ ssec : refine ] and  [ ssec : refine : d ] .    for the plane , we take advantage of the existence of an efficient solution for a related search problem in the spirit of those considered by eppstein  @xcite .    [",
    "lemma:2:d : compute : empty][2:d : compute : empty ] given a set @xmath57 of @xmath1 points and a set @xmath242 of @xmath243 points in the plane , one can compute a convex polygon of the largest area with vertices in @xmath57 that does not contain any point of @xmath242 in its interior in @xmath244 time .",
    "the algorithm has the same running time if @xmath242 is a set of @xmath243 forbidden rectangles .",
    "the algorithm works by dynamic programming .",
    "first , we compute for all triangles with vertices from @xmath57 whether they contain a forbidden point inside them ; trivially this can be done in @xmath245 time .",
    "we then build a directed graph @xmath149 on the allowable triangles , connecting two triangles @xmath246 and @xmath247 if they share their left endpoint , are interior disjoint , share an edge , and their union forms a convex quadrilateral .",
    "we orient the edge from the triangle that is most counterclockwise ( around the common vertex ) to the other triangle .",
    "all edges are oriented `` upwards '' , so @xmath149 is a directed acyclic graph ( dag ) .",
    "observe that @xmath149 has @xmath248 vertices ( allowable triangles ) and the maximum out - degree in @xmath149 is bounded from above by @xmath1 .",
    "the weight of a vertex corresponding to a triangle is equal to its area .",
    "clearly , a convex polygon corresponds to a path in @xmath149 , namely the triangulation of the polygon from its leftmost vertex , and its weight is the area of the polygon . finding the maximum weight path",
    "can be done in linear time in the size of the dag ; see ,  ( * ? ? ?",
    "* section 4.7 ) .",
    "@xmath149 has @xmath248 vertices and @xmath54 edges , and as such the overall running time is @xmath249 .    the combination of lemmas  [ discrete : hull ] and [ 2:d : compute : empty ] readily yields an approximation algorithm for the plane , whose running time depends on @xmath250 .",
    "[ lemma : brute : force ] [ brute : force ] given a set @xmath214 ^ 2 $ ] of @xmath1 points , such that @xmath236 , and a parameter @xmath58 , one can compute an empty convex body @xmath59 ^ 2 $ ] such that @xmath251 .",
    "the running time of the algorithm is @xmath252 .",
    "consider the grid @xmath230 with @xmath238 . by lemma  [ lemma :",
    "discrete : hull ] we can restrict our search to a grid polygon . going a step further ,",
    "we mark all the grid cells containing points of @xmath57 as forbidden . arguing as in lemma  [ lemma : discrete : hull ] , one can show that the area of the largest convex grid polygon avoiding the forbidden cells is at least @xmath253 , where @xmath254 is a constant .",
    "we now restrict our attention to the task of finding a largest polygon .",
    "we have a set @xmath242 of @xmath255 grid points that might be used as vertices of the grid polygon , and a set of @xmath255 grid cells that can not intersect the interior of the computed polygon . by lemma  [ lemma:2:d :",
    "compute : empty ] , a largest empty polygon can be found in @xmath256 time .",
    "setting @xmath238 , we get an algorithm with overall running time @xmath252 .    in dimensions",
    "@xmath6 , we are not aware of any analogue of the dynamic programming algorithm in lemma  [ lemma:2:d : compute : empty ]",
    ". instead , we fall back on a brute force approach that enumerates all feasible subsets of a sufficiently fine grid .",
    "[ lemma : brute : force : h : dim ] [ brute : force : h : dim ] given a set @xmath214^d$ ] of @xmath1 points , such that @xmath236 , and a parameter @xmath58 , one can compute an empty convex body @xmath59^d$ ] , such that @xmath251 .",
    "the running time of the algorithm is @xmath257 , where @xmath238 and @xmath4 is fixed .",
    "consider the grid @xmath230 with @xmath238 .",
    "let @xmath225 be the set of vertices of all grid cells of @xmath230 that contain some point from @xmath57 ( , @xmath258 vertices per cell ) .",
    "note that @xmath259 .",
    "andrews  @xcite proved that a convex lattice polytope of volume @xmath150 has @xmath260 vertices .",
    "hence a convex lattice polytope in @xmath230 has @xmath261 vertices . by the well - known inequality @xmath262 ,",
    "the number of subsets of size @xmath261 from @xmath230 is @xmath263 for each such candidate subset @xmath149 of size @xmath261 , test whether @xmath264 is empty of points from @xmath225 . for each point in @xmath225 ,",
    "the containment test reduces to a linear program that can be solved in time polynomial in @xmath243 . returning the subset with the largest hull volume found yields the desired approximation .",
    "the runtime of the algorithm is @xmath265    brany and vershik  @xcite proved that there are @xmath266 convex lattice polytopes in @xmath230 .",
    "if the polytopes can also be enumerated in this time ( as in the planar case  @xcite ) , then the runtime in lemma  [ lemma : brute : force : h : dim ] reduces accordingly .",
    "if @xmath56 is long and skinny ( e.g. , @xmath239 is close to @xmath267 ) , then the uniform grid @xmath230 we used in lemmas  [ brute : force ] and [ brute : force : h : dim ] is unsuitable for finding a @xmath8-approximation efficiently .",
    "instead , we employ a rotated and stretched grid ( an affine copy of @xmath230 ) that has similar orientation and aspect ratio as @xmath56 .",
    "this overcomes one of the main difficulties in obtaining a good approximation . since we do not know the shape and orientation of @xmath56 ,",
    "we guess these parameters via the minimum area rectangle containing @xmath56 .",
    "[ lemma : algorithm:2d ] given a set @xmath214 ^ 2 $ ] of @xmath1 points with @xmath236 and a parameter @xmath58 , one can compute an empty convex body @xmath59 ^ 2 $ ] such that @xmath251 .",
    "the running time of the algorithm is @xmath268 .",
    "the intuitive idea is now to guess a rectangle @xmath88 that contains @xmath56 such that its area , @xmath250 , is at least a constant fraction of the area of @xmath88 , namely @xmath269 ; and then apply lemma  [ lemma : brute : force ] to the rectangle @xmath88 ( as the unit square ) to get the desired approximation .",
    "let @xmath270 be the minimum area rectangle ( or arbitrary orientation ) that contains @xmath56 ; see figure  [ fig : boundingbox ]  ( left ) .",
    "we guess an approximate copy of @xmath270 .",
    "in particular , we guess the lengths of the two sides of @xmath270 ( up to a factor of @xmath271 ) and the orientation of @xmath270 ( up to an angle of @xmath48 ) , and then try to position a scaled copy of the guessed rectangle so that that it fully contains @xmath56 .",
    "[ htb ]    = 4.9 in    [ fig : boundingbox ]    assume for convenience that @xmath272 .",
    "denote by @xmath273 and @xmath139 the lengths of the two sides of rectangle @xmath270 , where @xmath274 .",
    "it is clear that @xmath275 , the diameter of the unit square .",
    "we now show that @xmath276 . from theorem  [ theo : t1 ]",
    ", we have @xmath277 , for @xmath272 . from the other direction , @xmath278 . comparing these bounds yields @xmath276 .",
    "it follows that if we want to guess the side lengths of @xmath270 up to a factor of two , we need to consider only @xmath279 possibilities .",
    "indeed , we consider the _",
    "canonical lengths _",
    "@xmath280 , for @xmath281 .",
    "let @xmath282 be a minimum area rectangle with canonical side lengths and the same orientation as @xmath270 , so that @xmath283 .    the _ orientation _ of a rectangle",
    "is given by the angle between one side and the @xmath284-axis .",
    "we approximate the orientation of @xmath270 by the @xmath1 _ canonical orientations _",
    "@xmath285 , for @xmath286 .",
    "let @xmath287 be a congruent copy of @xmath282 rotated clockwise to the nearest canonical orientation about the center of @xmath282 .",
    "we show that @xmath288 , , a scaled copy of @xmath287 contains @xmath282 .",
    "let @xmath289 be the minimum scale factor such that @xmath290 .",
    "refer to figure  [ fig : boundingbox ]  ( right ) .",
    "denote by @xmath110 the common center of @xmath282 and @xmath287 , let @xmath284 be a vertex of @xmath282 on the boundary of @xmath291 , and let @xmath292 be the corresponding vertex of @xmath291 .",
    "clearly , @xmath293 since we rotate by at most @xmath294 .",
    "we also have @xmath295 , since @xmath296 is the ratio between a side of @xmath291 and its diameter ( and this ratio is the same for @xmath270 ) . the law of sines yields @xmath297 ; and we have @xmath298 by the triangle inequality .",
    "if follows that @xmath299 , and so @xmath300 suffices .",
    "so far we have guessed the canonical side lengths and orientation of @xmath287 , however , we do not know its location in the plane .",
    "if a translated copy @xmath301 of @xmath287 intersects @xmath56 , then @xmath302 contains it , since @xmath303 .",
    "consider an arbitrary tiling of the plane with translates of @xmath287 . by a packing argument",
    ", only @xmath304 translates intersect the unit square @xmath9 ^ 2 $ ] .",
    "one of these translates , say @xmath301 , intersects @xmath56 , and hence the rectangle @xmath305 contains @xmath56",
    ".    we can apply lemma  [ lemma : brute : force ] to the rectangle @xmath88 ( as the unit square ) to get the desired approximation .",
    "specifically , let @xmath306 be an affine transformation that maps @xmath88 into the unit square @xmath9 ^ 2 $ ] , and apply lemma  [ lemma : brute : force ] for the point set @xmath307 and @xmath308 ^ 2)$ ] .",
    "the grid @xmath230 clipped in @xmath308 ^ 2)$ ] corresponds to a stretched and rotated grid in @xmath88 ; each grid cell of @xmath230 is stretched to a rectangle with the same aspect ratio as @xmath88 .",
    "the convex polygon @xmath56 occupies a constant fraction of the area of @xmath88 , and so the resulting running time is @xmath309 .",
    "note that the algorithm of lemma  [ lemma : brute : force ] partitions @xmath88 into a grid with @xmath310 cells .",
    "the approximation algorithm only cares about which cells are empty and which are not .",
    "since we have to repeat this for all possible side lengths , orientations , and positions of @xmath88 , the overall running time is @xmath311 since @xmath312 , the above expression is bounded by @xmath313 , as claimed",
    ".    * remark . * if @xmath314 the running time of this planar algorithm is near linear in @xmath1 .    by doing an exponentially decreasing search for @xmath239 ,",
    "the running time increases only by a constant factor ( this is a geometrically decreasing series , hence the term with the last value of @xmath239 dominates the whole running time ) .",
    "we summarize our result for the plane in the following .",
    "* theorem  [ theo : algorithm:2d ] . * _ given a set @xmath57 of @xmath1 points in @xmath9 ^ 2 $ ] and a parameter @xmath58 , one can compute an empty convex body @xmath59 ^ 2 $ ] , such that @xmath60 .",
    "the running time of the algorithm is @xmath61 . _",
    "given a set @xmath214^d$ ] of @xmath1 points and a parameter @xmath58 , we compute an empty convex body @xmath59 ^ 2 $ ] such that @xmath251 . similarly to the algorithm in subsection  [ ssec : refine ] , we guess a hyperrectangle @xmath88 that contains @xmath56 such that @xmath250 is at least a constant fraction of @xmath269 ; and then apply lemma  [ lemma : brute : force : h : dim ] to @xmath88 ( as the hypercube ) to obtain the desired approximation .",
    "consider a hyperrectangle @xmath270 of minimum volume ( and arbitrary orientation ) that contains @xmath56 .",
    "the @xmath4 edges incident to a vertex of a hyperrectangle @xmath49 are pairwise orthogonal .",
    "we call these @xmath4 directions the _ axes _ of @xmath49 ; and the _ orientation _ of @xmath49 is the set of its axes .",
    "we next enumerate all possible discretized hyperrectangles of volume @xmath16 , guessing the lengths of their axes , their orientations , and their locations as follows :    guess the length of every axis up to a factor of 2 .",
    "since the minimum length of an axis in our case is @xmath16 and the maximum is @xmath315 , the number of possible lengths to be considered is @xmath316 .",
    "let @xmath282 be a hyperrectangle of minimum volume with canonical side lengths and the same orientation as @xmath270 such that @xmath317 .",
    "we can discretize the orientation of a hyperrectangle as follows .",
    "we spread a dense set of points on the sphere of directions , with angular distance @xmath48 between any point on the sphere and its closest point in the chosen set .",
    "@xmath318 points suffice for this purpose .",
    "we try each point as the direction of the first axis of the hyperrectangle , and then generate the directions of the remaining axes analogously in the orthogonal hyperplane for the chosen direction .",
    "overall , this generates @xmath319 possibilities .    successively replace each axis of @xmath282 by an approximate axis that makes an angle at most @xmath320 with its corresponding axis , where @xmath321 is a constant depending on @xmath4",
    "let @xmath287 be a congruent copy of @xmath282 obtained in this way .",
    "if @xmath321 is sufficiently small , then @xmath322 .",
    "consider a tiling of @xmath2 with translates of @xmath287 .",
    "note that only @xmath323 translates intersect the unit cube @xmath9^d$ ] .",
    "one of these translates @xmath301 intersects @xmath56 , and then the hyperrectangle @xmath305 contains @xmath56 .",
    "since @xmath324 takes a constant fraction of the volume of @xmath88 , we can deploy lemma  [ lemma : brute : force : h : dim ] in this case , and get the desired @xmath8-approximation in @xmath325 time . putting everything together ,",
    "we obtain the following .    * theorem  [ theo : empty ] * _ given a set @xmath57 of @xmath1 points in @xmath9^d$ ] , @xmath6 , and a parameter @xmath58",
    ", one can compute an empty convex body @xmath59^d$ ] , such that @xmath60 .",
    "the running time of the algorithm is @xmath62 _    [ [ remark.-1 ] ] remark .",
    "+ + + + + + +    consider a set @xmath0 of @xmath1 points in @xmath2 .",
    "the approximation algorithm we have presented can be modified to approximate the largest empty tile , , the largest empty convex body contained in @xmath3 , rather than @xmath9^d$ ] .",
    "the running time is slightly worse , since we need to take the boundary of @xmath3 into account .",
    "we omit the details .",
    "[ sec : sec : conclusion ]    in this section we briefly outline two exact algorithms for finding the largest area empty convex polygon and the largest area empty triangle amidst @xmath1 points in the unit square .",
    "at the end we list a few open problems .",
    "let @xmath326 ^ 2 $ ] , where @xmath327 .",
    "let @xmath205 be the set of four vertices of @xmath63 .",
    "observe that the boundary of an optimal convex body , @xmath56 , contains at least two points from @xmath328 . by convexity ,",
    "the midpoint of one of these @xmath72 segments lies in @xmath56 . for each such midpoint @xmath243 , create a weakly simple polygon @xmath329 by connecting each point @xmath330 to the boundary of the square along the ray @xmath331 .",
    "the polygon @xmath329 has @xmath70 vertices and is empty of points from @xmath0 in its interior .",
    "then apply the algorithm of chang and yap  @xcite for the potato - peeling problem ( mentioned in  section  [ sec : sec : intro ] ) in these @xmath72 weakly simple polygons .",
    "the algorithm computes a largest area empty convex polygon contained in a given ( non - convex ) polygon with @xmath1 vertices in @xmath71 time .",
    "finally , return the largest convex polygon obtained this way .",
    "the overall running time is @xmath332 .",
    "the running time can be reduced to @xmath333 as follows . instead of considering the @xmath72 midpoints ,",
    "compute a set @xmath66 of @xmath334 points so that every convex set of area at least @xmath335 contains at least one of these points .",
    "in particular , @xmath56 contains a point from @xmath66 .",
    "the set @xmath66 can be computed by starting with a @xmath336 grid , and then computing an @xmath337-net for it , where @xmath338 , using discrepancy  @xcite .",
    "the running time of this deterministic procedure is roughly @xmath72 , and the running time of the overall algorithm improves to @xmath339 .",
    "the same reduction can be used for finding largest area empty triangle contained in @xmath63 , resulting in @xmath72 weakly simple polygons @xmath329 .",
    "then the algorithm of melissaratos and souvaine  @xcite for finding a largest area triangle contained in a polygon is applied to each of these @xmath72 polygons .",
    "the algorithm computes such a triangle in @xmath54 time , given a polygon with @xmath1 vertices .",
    "finally , return the largest convex polygon obtained this way .",
    "the overall running time is @xmath340 . via the @xmath337-net approach ( from the previous paragraph )",
    "the running time of the algorithm improves to @xmath341 .",
    "interesting questions remain open regarding the structure of optimal steiner convex partitions and the computational complexity of computing such partitions .",
    "other questions relate to the problem of finding the largest empty convex body in the presence of points .",
    "we list some of them :    * is there a polynomial - time algorithm for computing a minimum steiner convex partition of a given set of @xmath1 points in @xmath2",
    "? is there one for points in the plane ?",
    "* is there a constant - factor approximation algorithm for the minimum steiner convex partition of an arbitrary point set in @xmath2 ( without the general position restriction ) ?",
    "is there one for points in the plane ? * for @xmath342 ,",
    "the running time of our approximation algorithm for the maximum empty polytope has a factor of the form @xmath343 .",
    "it seems natural to conjecture that this term can be reduced to @xmath344 .",
    "another issue of interest is extending lemma  [ 2:d : compute : empty ] to higher dimensions for a faster overall algorithm .",
    "* given @xmath1 points in @xmath9^d$ ] , the problem of finding the largest convex body in @xmath9^d$ ] that contains up to @xmath40 ( outlier ) points naturally suggests itself and appears to be also quite challenging .",
    "the authors thank joe mitchell for helpful discussions regarding the exact algorithms in  section  [ sec : sec : conclusion ] , in particular for suggesting the reduction of the maximum - area - empty - convex - body problem to the potato - peeling problem .            j. backer and m. keil , the mono- and bichromatic empty rectangle and square problems in all dimensions , in _ proc .",
    "9th latin american sympos . on theoretical informatics _ ,",
    "6034 of lncs , springer , 2010 , pp .  1425 .",
    "a. dumitrescu and m. jiang , on the largest empty axis - parallel box amidst @xmath1 points , _ algorithmica _ , to appear .",
    "online first , march 2012 ; ` doi 10.1007/s00453 - 012 - 9635 - 5 ` .",
    "a. dumitrescu and cs .",
    "d. tth , minimum weight convex steiner partitions , _ algorithmica _ * 60(3 ) * ( 2011 ) , 627652 .",
    "z. fredi and j. pach , traces of finite sets : extremal problems and geometric applications , in _ extremal problems for finite sets ( p. frankl , z. fredi , g. katona , d. mikls , editors ) _ , vol .  3 of bolyai society mathematical studies , budapest , 1994 , pp .",
    "251282 .",
    "m. grantson and c. levcopoulos , a fixed - parameter algorithm for the minimum number convex partition problem , in _ proc .",
    "japanese conf . on discrete comput .",
    "_ , vol .",
    "3742 of lncs , springer , 2005 , pp .",
    "8394 .",
    "t. shermer , recent results in art galleries , _ proceedings of the ieee _ * 80(9 ) * ( 1992 ) , 13841399 .",
    "a. spillner , a fixed parameter algorithm for optimal convex partitions , _ j. discrete algorithms _ * 6(4 ) * ( 2008 ) , 561569 .",
    "p. valtr , sets in @xmath2 with no large empty convex subsets , _ discrete mathematics _",
    "* 108(1 - 3 ) * ( 1992 ) , 115124 ."
  ],
  "abstract_text": [
    "<S> let @xmath0 be a set of @xmath1 points in @xmath2 . </S>",
    "<S> a steiner convex partition is a tiling of @xmath3 with empty convex bodies . for every integer @xmath4 </S>",
    "<S> , we show that @xmath0 admits a steiner convex partition with at most @xmath5 tiles . </S>",
    "<S> this bound is the best possible for points in general position in the plane , and it is best possible apart from constant factors in every fixed dimension @xmath6 . </S>",
    "<S> we also give the first constant - factor approximation algorithm for computing a minimum steiner convex partition of a planar point set in general position .    establishing a tight lower bound for the maximum volume of a tile in a steiner convex partition of any @xmath1 points in the unit cube is equivalent to a famous problem of danzer and rogers . </S>",
    "<S> it is conjectured that the volume of the largest tile is @xmath7 . here </S>",
    "<S> we give a @xmath8-approximation algorithm for computing the maximum volume of an empty convex body amidst @xmath1 given points in the @xmath4-dimensional unit box @xmath9^d$ ] .    </S>",
    "<S> * keywords * : steiner convex partition , horton set , epsilon - net , lattice polytope , approximation algorithm . </S>"
  ]
}
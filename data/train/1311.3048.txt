{
  "article_text": [
    "this paper considers the problem of constructing random partitioning schemes for minor - free graphs . loosely speaking",
    ", the goal is to find a partition of the graph vertices so that each part ( called a cluster ) has small diameter , and the probability of any local neighborhood being cut ( and not lying within some cluster ) is small .",
    "there is a natural tradeoff between these two parameters ( the diameter , and the probability of being cut ) .",
    "such random partitions have found numerous applications in algorithm design , including : flow / cut gaps , metric embeddings , and recently as core primitives for several near linear time algorithms . therefore improving the parameters of the partitions",
    "is a research program of considerable interest .",
    "while tight parameters for such partitions are known in several settings , for the case of graphs that exclude some given graph @xmath10 as a minor , the problem of finding the optimal tradeoff remains open .",
    "progress was made in the seminal work of klein , plotkin and rao @xcite , and improved by fakcharoenphol and talwar @xcite . despite attracting the attention of several researchers ( see , e.g. , @xcite ) , the kpr framework remained the only known approach to this problem for over 20 years .    in this paper we make progress on this question and improve known parameters . equally importantly , we also introduce techniques and structural insights that we hope will be useful for further improvements on this and related problems . in particular , we observe that a result of andreae  @xcite can be reinterpreted as a _ structure theorem _ for graphs excluding a fixed minor . , say @xmath0 . ]",
    "his result constructively gives us a _ cop decomposition _ of a graph , which is a lot like a tree decomposition except that instead of @xmath11 vertices per bag , we have @xmath11 shortest - paths ( in some induced subgraph ) in each bag . while such a cop decomposition may give less insight into the graph structure than the deep work of robertson and seymour  @xcite , it has the benefit of a significantly better dependence on @xmath11 .",
    "we extend this cop decomposition framework to produce probabilistic partitions , and we believe that this high level approach may be useful in getting better algorithms for other problems involving excluded - minor graphs .    to formally state our results , let us recall some notation . for",
    "an undirected weighted graph @xmath12 and a subset @xmath13 , denote by @xmath14 $ ] the induced subgraph on @xmath15 .",
    "let @xmath16 denote the shortest path metric on @xmath17 .",
    "the _ ( weak ) diameter _ of a set @xmath18 is @xmath19 , whereas the _ strong diameter _ of the set @xmath20 is @xmath21}(x , y)$]note that the latter distance is being measured in the induced subgraph .",
    "a partition @xmath22 is",
    "_ @xmath1-bounded _ if for all @xmath23 , the weak - diameter @xmath24 .",
    "partition @xmath25 is _ strong - diameter @xmath1-bounded _ if the strong diameter @xmath26)\\le    \\delta$ ] for all @xmath23 .",
    "given a partition @xmath22 of @xmath27 , let @xmath28 denote the unique cluster containing @xmath29 .",
    "a distribution @xmath30 over @xmath1-bounded partitions is _",
    "@xmath31-padded _ if for any @xmath32 and any @xmath33 ,",
    "@xmath34\\ge 2^{-\\beta \\gamma } ~.\\ ] ] we call @xmath30 _ @xmath35-padded _ if it is",
    "_ @xmath31-padded _ where @xmath36 is a universal constant that does not depend on @xmath35 , and efficient if it can be sampled in polynomial time .",
    "our main result is the following .",
    "[ thm : main - weak ] every @xmath0-minor - free graph @xmath17 admits an efficient @xmath4-padded partition scheme .",
    "it has long been known that for arbitrary graphs the best possible padding parameter is @xmath37 . for special cases better bounds",
    "are known , e.g. , for metrics of doubling constant @xmath38 , the padding parameter is @xmath39 @xcite . for graphs that can be drawn on a surface of genus @xmath9 ,",
    "ideas developed in a recent sequence of papers  @xcite have culminated in the optimal padding parameter of @xmath40  @xcite .",
    "the first bounds for @xmath0-minor - free graphs were due to the influential work of klein , plotkin , and rao  @xcite , who gave @xmath41-padded partition scheme .",
    "fakcharoenphol and talwar @xcite improved this to an @xmath42-padded partition scheme . in this work ,",
    "we improve the padding parameter from @xmath5 to @xmath4 ; moreover , we provide padding guarantees to larger balls ",
    "the previous guarantees give padding only for balls of diameter @xmath43 , compared to @xmath44 for our result . the partitioning scheme in  @xcite",
    "was motivated by bounding the maximum - multicommodity - flow / sparsest - cut gap for @xmath0-free graphs .",
    "subsequently , it found applications to metric embeddings  @xcite with its natural connections to edge - cut problems  @xcite and also to vertex - cut problems  @xcite , to bounding higher eigenvalues and higher - order cheeger inequalities for graphs  @xcite , to metric extension problems and approximation algorithms  @xcite , and others .",
    "the quantitative improvements given by our results thus give improvement in all these settings .",
    "above gives us a weak - diameter guarantee .",
    "however , our techniques are versatile , and can be extended to give strong - diameter partitions  in particular , we obtain the following results .",
    "[ thm : stong - list ] let @xmath45 be an undirected weighted graph .    1 .",
    "if @xmath17 is a @xmath0-free graph then it admits an efficient @xmath46-padded strong - diameter decomposition scheme .",
    "if @xmath17 is a treewidth @xmath11 graph then @xmath17 admits an efficient @xmath47-padded strong - diameter decomposition scheme .",
    "if @xmath17 is a genus @xmath9 graph then @xmath17 admits an efficient @xmath8-padded strong - diameter decomposition scheme .",
    "the first result in is an exponential improvement over the strong - diameter partitions of @xcite .",
    "the third result strengthens the result of @xcite by providing the same asymptotic padding guarantees while ensuring that clusters have a strong - diameter .",
    "how does one prove a property for a graph that does not contain a @xmath0 minor ?",
    "one approach relies on the deep results of robertson and seymour that turn this `` negative '' property ( namely , that of not having a certain minor ) into a `` positive '' constructive one , by giving a complete structural characterization of how such graphs can be built from simple building blocks by applying simple rules to them .",
    "this structure theorem allows one to prove properties of excluded - minor graphs by structural induction on this construction procedure . unfortunately",
    ", this approach typically inherits the rather bad dependence on @xmath11 from the robertson - seymour structure theorem  @xcite .",
    "nevertheless , this approach has been highly successful and used to prove several results for excluded - minor graphs .",
    "the other approach is to work more directly and design an algorithm establishing the property we want to prove , with the guarantee that the failure of the algorithm constructs @xmath0 as a minor .",
    "this approach is usually problem - specific but usually leads to better dependence on @xmath11 .",
    "examples of this approach include the work of andreae  @xcite for the cops - and - robbers game , results of alon , seymour and thomas  @xcite on separators , and the aforementioned work of klein , plotkin and rao @xcite .",
    "this is the approach we take .",
    "let us now give a high - level description of some of the ideas and techniques used to prove and .",
    "[ [ the - bounded - threatener - program . ] ] the bounded threatener program .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    a natural approach to obtain @xmath1-bounded @xmath35-padded probabilistic partitions is to find a set of `` suitable '' centers @xmath20 , and iteratively build balls around the points in @xmath20 with radii drawn from a truncated exponential distribution in the range @xmath48 $ ] with rate @xmath35 .",
    "the memoryless property of the exponential distribution ensures that balls of radius @xmath49 avoid being cut with constant probability , conditioned on the exponential distribution not being truncated .",
    "to handle the truncation , we need to bound the number of centers at distance at most @xmath50 from some vertex @xmath29 .",
    "we will call such centers the _ threateners _ of @xmath29 .",
    "if the number of threateners is bounded by @xmath51 then a trivial union bound implies that with constant probability none of them will reach diameter @xmath52 and intersect the ball @xmath53 .",
    "a contribution of this work is in extending the bounded threatener program and showing how a bound on the _ expected _ number of threateners suffices .",
    "[ [ cop - decompositions . ] ] cop decompositions .",
    "+ + + + + + + + + + + + + + + + + + +    andreae  @xcite considered the following game , a set of cops plays against a robber . at each round",
    "the robber can move across one edge and then each one of the cops can move across one edge .",
    "the cops win if they land on the same vertex as the robber .",
    "andreae showed that if @xmath17 is @xmath0-free then @xmath5 cops have a winning strategy .",
    "the cop strategy is simple : each cop can control one shortest path and together they try to build a @xmath0 minor .",
    "the shortest paths controlled by the cops induce a set of supernodes ( disjoint connected subsets ) and edges containing a minor that is a subgraph of @xmath0 . at each round",
    "one can fix a center for a new supernode and use free cops to connect the center to all previous supernodes via shortest paths . the new center and each new shortest path is fully contained in the component containing the robber that is induced by removing the supernodes from @xmath17 ( hence this new path is disjoint from all previous supernodes ) .",
    "we can interpret andreae s result as constructing a _ cop - decomposition _ of width @xmath11 , which is similar to a tree - decomposition ; the difference being that in a tree - decomposition each bag @xmath54 contains at most _ _ width__+1 vertices while in a cop - decomposition each bag @xmath54 contains a tree with at most _ _ width__+1 leaves and each root - leaf path @xmath55 is a shortest path in the subgraph induced by the bag @xmath54 and its subtree in the cop - decomposition .",
    "[ [ from - cop - decompositions - to - padded - partitions - via - skeletons . ] ] from cop decompositions to padded partitions via skeletons .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the cop decomposition induces a partition of the vertices of the graph into trees .",
    "note that the number of vertices in each tree in a cop decomposition may be large , and depend on @xmath56 .",
    "why are these trees useful ?",
    "since each tree contains at most @xmath11 shortest paths in the induced subgraph , one can choose a `` net '' of centers along each path so that each node in the graph is threatened by @xmath4 centers from any one tree .",
    "hence it now suffices to bound the number of trees that get close enough to a vertex @xmath29 so that some centers from this tree may threaten @xmath29 .",
    "( we call such a tree a _ `` threatening skeleton '' _ for  @xmath29 . )",
    "as mentioned above , we do not bound the worst - case number of such threatening skeletons ; we prove it suffices to bound their expected number .",
    "[ [ bounding - the - expected - number - of - threateners . ] ] bounding the expected number of threateners .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    how to bound the expected number of threatening skeletons for some node @xmath57 ?",
    "we need a notion of progress .",
    "the cop - decomposition ensures that in any given moment there are at most @xmath11 trees ( a.k.a.threatening skeletons ) that @xmath29 can see on the boundaries of its component , where each tree consists of at most @xmath11 paths .",
    "we observe the following property of the distances from @xmath29 to these trees : if constructing a new tree @xmath58 in the induced subgraph containing @xmath29 causes some current tree @xmath59 to become farther from @xmath29 ( or even to be disconnected from @xmath29 ) because it cuts off some short path from @xmath29 to @xmath59 , the distance from @xmath29 to @xmath58 is strictly less than the distance from @xmath29 to @xmath59 . indeed ,",
    "if this distance were to miraculously decrease ( deterministically ) by @xmath60 then one can prove a bound of @xmath61 on the number of threateners .",
    "but why should such a large decrease happen ?",
    "it does nt , but _ we force this to happen_. we change the above construction and build a `` buffer '' of some random radius around each skeleton we build .",
    "note that the supernodes did not have to be trees in the above arguments , and hence `` fattening '' them by growing buffers around the trees would not change any of the preceding arguments .",
    "now by choosing the buffer radius from a truncated exponential with rate @xmath4 , we may navely hope to decrease the distance by @xmath62 with constant probability ( assuming no truncation ) .",
    "the proof is much more subtle , and requires to overcome the truncation of the buffer .",
    "we use a potential function with delicately chosen parameters , such that for each new tree , this potential increases in expectation by @xmath63 .",
    "the potential starts at @xmath64 and once it reaches @xmath11 , it means that @xmath29 is at distance @xmath64 from some buffered tree and will not be threatened again .",
    "finally , the optional stopping theorem helps us bound the expected number of threateners by @xmath65 .",
    "[ [ bounding - expected - drift - in - potential . ] ] bounding expected drift in potential .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    in order to bound the number of threateners for @xmath29 , the potential function we use is a sum of exponentials @xmath66 for some parameter @xmath67 ; the sum is over those buffered trees that the node @xmath29 can see .",
    "the main challenge is that in the worst case , one new buffered tree can cause all the other current buffered trees to be disconnected from the component containing @xmath29 , hence losing @xmath11 summands of the potential . to overcome this we need to guarantee that the expected gain from the new tree is @xmath4 times more than the expected loss of any single current tree , which is one of the technical cores of the analysis .",
    "we note that obtaining any deterministic bound on the number of threateners using a cop decomposition remains an open question .      the ideas of either finding a `` good '' decomposition or else building a @xmath0-minor used by  @xcite also appear in `` shallow - minor theorems '' of alon , seymour , and thomas  @xcite , plotkin , rao , and smith  @xcite , and others . the parameters and run - times of these constructions",
    "have been considerably improved , see the paper of wulff - nilsen  @xcite and the references therein .",
    "busch , lafortune , and tirthapura  @xcite first suggested the idea of decomposing a graph into paths and building balls around these paths ; they considered this in the context of strong - diameter covers .",
    "they give the best constants for covers of planar graphs ; for @xmath0-free graphs , they give @xmath68-padding and @xmath69-overlap , where @xmath70 depends on the robertson - seymour structure theorem .",
    "in contrast to the weak - diameter partitions of  @xcite , the previously best _ strong - diameter _ partitions are due to  @xcite , who guarantee strong diameter @xmath1 and probability of an edge @xmath71 being separated is @xmath72 .",
    "@xcite also present _ sparse covers _ with strong - diameter @xmath1 , padding of @xmath5 and overlap of @xmath73 .    the papers  @xcite give algorithms to probabilistically embed genus-@xmath9 graphs into planar graphs with @xmath74 , @xmath75 and @xmath8 distortion respectively .",
    "the ideas developed in this line of work lead to an asymptotically optimal padding parameter of @xmath8 for genus-@xmath9 graphs  @xcite .    for general graphs , the decomposition schemes in ,",
    "e.g. ,  @xcite give asymptotically optimal @xmath76 padding .",
    "the best result known for treewidth-@xmath11 graphs was the same as for @xmath0-free graphs , i.e. , @xmath5-padding partitions .",
    "after a few preliminary definitions , we provide in a bound on the expected number of threateners for a wide range of partition algorithms .",
    "we then show how to use this to bound the padding probability .",
    "our main result is proved is .",
    "the three assertions of are then proven in sections  [ sec : strong - diam ] ,  [ sec : tree ] and  [ sec : genus ] .",
    "[ [ graphs . ] ] graphs . + + + + + + +    we assume familiarity with graph - theoretic notions ; see , e.g. ,  @xcite for background . here",
    "are some definitions we will use . given a graph @xmath12 , a ball around @xmath77 of radius @xmath78 is @xmath79 , and similarly for a subset @xmath80 , @xmath81 . also let @xmath82 . for subsets @xmath83 define a relation @xmath84 where @xmath85 iff @xmath86 , that is",
    ", iff there is an edge between @xmath87 and @xmath54 .",
    "a _ minor _ of @xmath17 is a graph @xmath88 obtained by deleting and contracting edges .",
    "equivalently , @xmath88 is a minor of @xmath17 if there exists a map @xmath89 such that ( a )   for each @xmath90 the `` supernode '' @xmath91 is connected in @xmath17 , and ( b )  for every edge @xmath92 , there is at least one edge between @xmath91 and @xmath93 in @xmath94 .",
    "a graph @xmath17 is _ @xmath10-free _ ( or _ excludes an @xmath10-minor _ ) if @xmath17 does not contain a subgraph isomorphic to @xmath10 as a minor . as is well - known , planar graphs are exactly the graphs excluding @xmath95 and @xmath96 as minors .",
    "in fact , robertson and seymour proved that every graph family closed under taking minors is characterized by a set of excluded minors .",
    "many one - way implications are also known : if we can show that a class @xmath97 of graphs is closed under taking minors , and @xmath98 , then @xmath97 contains only @xmath10-free - graphs .",
    "hence , graphs with treewidth at most @xmath11 are @xmath99-free ( since treewidth of a clique is one smaller than its size , and the treewidth of a graph does not increase under edge deletions and contractions ) ; graphs with genus @xmath9 exclude @xmath0 as a minor for some @xmath100 , since the genus of @xmath0 is @xmath101 .",
    "[ [ truncated - exponential - distributions . ] ] truncated exponential distributions .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we will extensively use the following probability distribution over positive reals .",
    "@xmath102$]-truncated exponential distribution _ with parameter @xmath103 is denoted by @xmath104}(b)$ ] , and has the probability density function : @xmath105.\\ ] ] for the _ @xmath106$]-truncated exponential distribution _ we drop the subscripts and denote it by @xmath107 ; the density function is @xmath108.\\ ] ]    note that if @xmath109 then @xmath110}(b / u)$ ] .",
    "our algorithms induce an iterative process that creates `` skeletons '' ( e.g. , trees , paths , or vertices ) and remove their neighborhoods ( a buffer ) , defined according to some truncated exponential distribution , from the graph .",
    "once we have these skeletons , our algorithms define a second iterative process that creates clusters from the skeletons .",
    "let us abstract out the properties needed from our first and second processes .",
    "[ def : pro][skeleton - process ] given a graph @xmath17 , parameters @xmath111 and @xmath112 , any process which generates a sequence of graphs @xmath113 , skeletons @xmath114 and vertex sets @xmath115 , that satisfies the following property is a _ skeleton - process _ :    * for any @xmath116 we are given some @xmath117 , and define @xmath118 , where @xmath119}(b/(u - l))$ ] .",
    "the process is _ threatening _ if the graph sequence satisfies @xmath120 , and the process is _ cutting _ if the graph sequence satisfies @xmath121 .",
    "the first process is a threatening process which creates buffers around the trees of the cop - decomposition .",
    "the second process is a cutting process that creates the actual clusters centered at net - points of the trees . for the strong - diameter results",
    ", we will have a single process that satisfies both definitions .",
    "a crucial property of all of our algorithms is that any point @xmath29 can `` see '' at most @xmath122 buffers ( the @xmath123 sets ) at any time , for some parameter @xmath122 ( in the weak - diameter partition we will have @xmath124 ) . by this",
    "we mean that for any connected component @xmath15 in one of the remaining graphs ( after some buffers were removed ) , there are at most @xmath122 buffers that are connected to @xmath15 by an edge .",
    "this property will enable us to prove that any vertex @xmath29 is expected to be `` threatened '' by a small number of skeletons , that is , we expect a few skeletons that are sufficiently close to cut a certain ball around @xmath29 .    consider a threatening skeleton - process with parameters @xmath125 , @xmath126 $ ] and @xmath127 .",
    "we prove a bound on the expected number of threateners for a ball around any vertex @xmath128 with padding parameter @xmath129 .",
    "let @xmath130 be the set of vertex sets whose subset @xmath123 may intersect @xmath131 .",
    "observe that once @xmath132 for some integer @xmath133 then it is removed from the graph , and @xmath134 can not increase anymore . for a connected component @xmath135 let @xmath136 .",
    "( recall that @xmath137 if there exists an edge from a node in @xmath87 to some node in @xmath54 . )",
    "[ lem : threat ] suppose that in a threatening skeleton - process we have the property that for every @xmath138 and every connected component @xmath135 , we are guaranteed that @xmath139 , then @xmath140\\le 3e^{(2s+1)\\cdot(1+\\gamma / u)}~.\\ ] ]    we defer the proof to .      in this section we give a bound on the probability that a ball is cut by a cutting skeleton - process , which depends on the _ expected _ number of threateners .",
    "consider a cutting skeleton - process as in with parameters @xmath111 , @xmath112 .",
    "fix @xmath128 , a parameter @xmath129 and set @xmath131 .",
    "let @xmath141 be the set of vertex sets whose subset @xmath123 may intersect @xmath142 .",
    "let @xmath143 be a random variable with @xmath144 $ ] .",
    "we say that @xmath142 is _ cut _ by the skeleton - process if it intersects more than a single @xmath123 .",
    "[ lem : cut ] for @xmath145 , the probability that @xmath131 is cut by a cutting skeleton - process with the property that @xmath146 $ ] , is at most @xmath147    we defer the proof to .",
    "in this section , we show how to construct a weak - diameter partition for @xmath148-free graphs which is @xmath4-padded ( with constant @xmath149 ) .",
    "the ideas here will later extend to the case of strong - diameter partitions with a weaker @xmath46-padding .      at a high level ,",
    "the algorithm works as follows : in each step , pick a connected component of the remaining graph , and find ( in a specific way ) a shortest - path tree @xmath150 in this component .",
    "delete a random neighborhood of @xmath150 from the graph , and recurse on each connected component of the graph , if any .",
    "we then construct a net of points on each tree , and from these net points grow `` balls '' of random radius to form the small - diameter regions of the partition . a key property to ensure",
    "the padding guarantee is that each node is expected to be close to few of these paths .",
    "we show that this property holds , otherwise we can construct a @xmath148-minor in @xmath17 .    more specifically , the algorithm maintains a set of trees @xmath151 and supernodes @xmath152 that will be used in the construction , each tree and supernode have a `` center '' vertex associated with them .",
    "let us describe a generic @xmath23-th iteration of the algorithm .",
    "let @xmath153 be the set containing all the supernodes created so far , initially this will be empty .",
    "let @xmath15 be a connected component in the graph @xmath154 , where @xmath155 is the set of all vertices lying in the supernodes in @xmath156 , initially this will be the entire graph .",
    "let @xmath157 be the set of supernodes that have a neighbor in component @xmath15 .",
    "say @xmath158 , and consider the nodes @xmath159 for each supernode , which are vertices in @xmath15 neighbors of these `` adjacent '' supernodes .",
    "( these @xmath160 s may intersect . )",
    "we pick an arbitrary vertex @xmath161 from @xmath15 and build a tree @xmath151 rooted at @xmath161 , which is comprised of shortest paths from @xmath161 to each of the sets @xmath160 . define the next supernode @xmath162 where @xmath163}(16r)$ ] .",
    "( recall the definition of the truncated exponential distribution from . )    in order to create the random partition , choose a @xmath164-net @xmath165 over @xmath151 , and enumerate @xmath166 . for each @xmath167 , create a cluster @xmath168 ( where @xmath169 is the set of points which have no cluster yet ) , where each @xmath170}(20r)$ ] .",
    "this completes the description of the algorithm ; it is also given as algorithm  1 and  2 .",
    "[ alg : a ]    let @xmath171 , @xmath172 .",
    "let @xmath173 .",
    "let @xmath174 .",
    "let @xmath175 be a connected component of @xmath176 .",
    "pick @xmath177 .",
    "let @xmath151 be a tree rooted at @xmath161 that consists of shortest paths ( in @xmath176 ) from @xmath161 to the closest vertex of @xmath178 for each supernode @xmath179 .",
    "let @xmath180 be a random variable drawn independently from the distribution @xmath181}(16r)$ ] .",
    "let @xmath182 be a neighborhood of @xmath151 .",
    "add @xmath152 to @xmath183 .",
    "add @xmath151 to @xmath184 .",
    "@xmath185 . @xmath186 . `",
    "create - balls`(@xmath17,@xmath187,@xmath1,@xmath11 ) .",
    "[ alg : b ]    @xmath188 .",
    "let @xmath166 be a @xmath164-net of @xmath151 .",
    "let @xmath189 be a random variable drawn independently from the distribution @xmath190}(20r)$ ] add @xmath191 as a cluster to the partition @xmath25 . @xmath25 .",
    "the following invariant holds for each time step @xmath23 :    [ inv : sim1 ] for every @xmath116 , every connected component @xmath15 of @xmath192 satisfies that if @xmath193 then @xmath194 .",
    "the proof is by induction ; the base case is trivial as there are no supernodes in @xmath195 .",
    "now by induction , assume that the invariant holds in @xmath192 .",
    "let @xmath196 and @xmath197 be the tree and supernode constructed in step @xmath23 in the component @xmath198 .",
    "let @xmath15 be some connected component of @xmath199 , and @xmath193 . if @xmath200 then @xmath15 is a component of @xmath192 as well ; moreover , as @xmath201 it must be that @xmath202 so neither of @xmath203 can be @xmath152 , and hence we can use the induction hypothesis to infer that @xmath194 . on the other hand , suppose that @xmath204 .",
    "there are two cases : if @xmath205 we have @xmath194 by the induction hypothesis on @xmath198 . on the other hand ,",
    "suppose @xmath206 ( w.l.o.g . ) .",
    "recall that @xmath196 was chosen so that it contains a neighbor of every supernode in @xmath207 and @xmath208 , we have that @xmath209 .",
    "implies that for each connected component @xmath15 , contracting the supernodes of @xmath210 yields a @xmath211 minor , so we obtain the following corollary .",
    "[ cor : ler1 ] if @xmath17 excludes @xmath148 as a minor , then for every time step @xmath23 , the connected component @xmath198 has @xmath212 .",
    "in particular , the tree @xmath151 is made up of at most @xmath11 shortest paths in @xmath176 .",
    "[ clm : weak - diam ] the algorithm above generates a @xmath1-bounded partition of @xmath17 .    first we prove that we generate a partition .",
    "indeed , we delete supernodes from the graph , and recurse on the remaining components , so we need to show that vertices within the supernodes are contained in some cluster . consider a vertex @xmath213 in supernode @xmath152 . by definition , @xmath214 . since @xmath165 is a @xmath164-net in @xmath151 , some net point @xmath215 satisfies @xmath216 . and",
    "since @xmath217 , the ball @xmath218 contains @xmath213 .",
    "hence each node within the deleted supernode is contained in some cluster , and we get a partition of @xmath17 .",
    "moreover , each cluster is a ball of radius at most @xmath219 ( and hence diameter at most @xmath1 ) in @xmath176 .",
    "finally , distances in @xmath176 are no smaller than those in @xmath17 .",
    "[ lem : weak - cut - prob ] for @xmath220 , and any @xmath221 , the probability that a ball @xmath142 of radius @xmath222 is cut by the above process is @xmath223 \\leq 1 - e^{-80r\\gamma}.\\ ] ]    first observe that the process defined in algorithm 1 . is a threatening skeleton - process , with the sequence of graphs @xmath224 as defined in the algorithm and with @xmath225 , @xmath226 , @xmath227 , @xmath124 and @xmath127 .",
    "recall that @xmath131 and @xmath228 .",
    "by we get that for all @xmath138 , @xmath229 , so by ( using that @xmath221 ) , @xmath230\\le 3e^{(2r+1)\\cdot(1+\\gamma / u)}\\le 10e^{5r/2}~.\\ ] ] for each @xmath23 such that @xmath231 , let @xmath232 be the net points in @xmath165 that are sufficiently close to threaten @xmath142 , and denote @xmath233 . by , @xmath151 is comprised of at most @xmath11 shortest paths , and we claim that on each shortest path there can be at most @xmath234 points that are in @xmath235 .",
    "this is because the distance between any two consecutive net points on a path is at least @xmath164 , and if there are @xmath236 points , because this is a shortest path , the distance from the first point to the last is at least @xmath237 .",
    "the triangle inequality implies that it ca nt be that both are within @xmath238 from @xmath29 .",
    "we conclude that for all @xmath23 ( with @xmath231 ) we have @xmath239 , thus by @xmath240\\le 10r\\cdot 10e^{5r/2}=100r\\cdot e^{5r/2}~.\\ ] ] next , we show that our ` create - balls ` algorithm generates a cutting skeleton - process",
    ". simply take the sequence @xmath241 , where each @xmath176 is taken @xmath242 times .",
    "then the skeleton sets @xmath87 are in fact singletons : for each @xmath23 we will take @xmath242 sets - the points of @xmath165 , to be these singletons .",
    "the parameters for the exponential distribution are @xmath243 , @xmath244 and @xmath245 . to see the cutting property of , note that once we move from the graph @xmath176 to @xmath199 , @xmath199 will contain all the points yet uncovered by clusters , because we already observed in that once all the points of @xmath165 create a cluster , the supernode @xmath152 is completely covered ( recall @xmath246 ) . finally , applying",
    ", we obtain that the probability that @xmath142 is cut is at most @xmath247 the expression @xmath248 for @xmath249 , and this completes the proof as @xmath250 using that @xmath221 .",
    "in the previous section , we saw how to get a weak - diameter partition for minor - free graphs . in this section , we give a strong - diameter guarantee with a slightly weaker padding parameter of @xmath46 instead of @xmath4 .",
    "however , this is still an exponential improvement over the best previous padding for such strong - diameter partitions of minor - free graphs .",
    "the algorithm for strong - diameter partitions is similar in spirit to that of for weak - diameter partitions , but there are some crucial differences that we highlight here .    at a high level ,",
    "the algorithm works as follows : in each step , pick a connected component of the remaining graph , and find ( in a specific way ) a shortest path @xmath25 in this component .",
    "delete a random neighborhood of @xmath25 from the graph , and recurse on each connected component of the graph , if any .",
    "each such random neighborhood is decomposed into small diameter regions using cones centered at some of @xmath25 s points . a key property to ensure",
    "the padding guarantee is that each node is expected to be close to few of these paths .",
    "we show that this property holds , otherwise we can construct a @xmath148-minor in @xmath17 .",
    "the algorithm again maintains a set of paths ( instead of trees ) , and associated supernodes that will be used in the construction . these will be denoted as @xmath251 and @xmath197 respectively , and",
    "supernode @xmath152 will consist of the union of neighborhoods of the paths @xmath251 .",
    "the main difference from the weak - diameter construction is that instead of building a shortest - path tree all at once , we build a `` tree '' one path at a time , and remove a neighborhood of the path from the graph before constructing the subsequent paths .",
    "let us describe the @xmath23-th iteration of the algorithm .",
    "let @xmath252 be the set containing all the supernodes created so far .",
    "let @xmath175 be a connected component in the graph @xmath154 .",
    "let @xmath253 be the set of supernodes that have a neighbor in component @xmath175 .",
    "we pick an arbitrary vertex @xmath161 from @xmath175 and build a supernode @xmath152 .",
    "again , the intuition behind the construction is that we wish for the new supernode to `` touch '' every supernode @xmath254 ( i.e. , @xmath255 ) .",
    "however , this is done slightly differently from , one path at a time . at the first iteration ( @xmath256 ) we create a shortest path @xmath251 from @xmath161 to some supernode @xmath257 , and",
    "remove a random neighborhood @xmath258 from the graph to obtain @xmath259 .",
    "this neighborhood @xmath258 is defined as all the vertices within distance @xmath260 of @xmath251 ( in the current component @xmath261 ) , where @xmath262}(8(r^2+r))$ ] .",
    "we increase the iteration counter @xmath263 and continue in this manner on every connected component of @xmath264 that is contained in @xmath175 , until the new supernode @xmath265 touches every supernode @xmath266 for every connected component @xmath267 in the remaining graph @xmath264 .",
    "finally , each such neighborhood @xmath258 is partitioned to `` cones '' .",
    "each cone @xmath54 , centered at some ( yet uncovered ) point @xmath268 , consists of the ( yet uncovered ) points in @xmath258 whose distance to @xmath269 is not `` much larger '' than their distance to @xmath251 .",
    "the notion of being `` much larger '' is determined by a random variable @xmath67 drawn independently and uniformly from @xmath270 $ ] .",
    "the algorithms are formally presented as algorithms  3 and  4 respectively .",
    "observe that the subroutine ` create - cones ` is invoked in line  13 of ` strong - random - partition ` .",
    "[ alg : a ]    let @xmath171 , @xmath172 .",
    "let @xmath173 .",
    "let @xmath271 .",
    "select a connected component @xmath175 of @xmath176 , and pick @xmath272 .",
    "let @xmath273 .",
    "let @xmath256 and @xmath274 .",
    "choose @xmath275 .",
    "let @xmath251 be a shortest path ( in @xmath264 ) from @xmath276 to @xmath178 .",
    "let @xmath277 be a random variable drawn independently from the distribution @xmath278}(8(r^2+r))$ ] .",
    "let @xmath279 be a neighborhood of @xmath251 . `",
    "create - cones`(@xmath258,@xmath251 ) .",
    "@xmath282 . set @xmath283 , and add @xmath152 to @xmath153 .",
    "@xmath186 .",
    "[ alg : cone ]    choose @xmath284 .",
    "choose @xmath285 $ ] uniformly at random .",
    "let @xmath286 .",
    "add @xmath54 to @xmath287 .",
    "set @xmath288 .",
    "set @xmath289 .",
    "we begin by arguing that the algorithm creates a partition @xmath290 with strong diameter @xmath1 .",
    "the following properties will be useful .",
    "[ prop : cone ] for any @xmath20 and @xmath25 obtained during the run of the algorithm ` create - cones ` :    * if @xmath291 are such that a shortest path from @xmath276 to @xmath25 contains @xmath292 , and @xmath293 for a cone @xmath54 , then also @xmath294 . *",
    "if @xmath291 are such that a shortest path from @xmath276 to @xmath269 contains @xmath292 , and @xmath294 for a cone @xmath54 centered at @xmath269 , then also @xmath293 .",
    "let @xmath284 be the center of the cone @xmath54 .",
    "we begin by proving the first item : since @xmath293 we have that @xmath295 . since @xmath292 is on the shortest path from @xmath276 to @xmath25 , @xmath296 and",
    "thus @xmath297 which implies that @xmath294",
    ".    the second item is proved in a similar manner : since @xmath294 we have that @xmath298 . since @xmath292 is on the shortest path from @xmath276 to @xmath269 , @xmath299 and",
    "thus @xmath300 which implies that @xmath293 .",
    "[ lem : strong ] each cone @xmath54 created in the algorithm has @xmath301)\\le\\delta$ ] .    recall that each neighborhood @xmath20 of a shortest path @xmath25 contains points within distance at most @xmath302 from @xmath25 .",
    "let @xmath20 be the remaining part after some cones have been created , and @xmath25 is the remaining path . the first property in implies that the shortest path from any @xmath303 to @xmath25 is fully contained in @xmath20 , and",
    "thus @xmath304 consider a certain cone @xmath54 centered at @xmath284 , and by definition of @xmath54 , for each @xmath294 , @xmath305 by the second property of , if @xmath294 then surely any @xmath306 on the shortest path from @xmath276 to @xmath269 will also be in @xmath54 , so @xmath307 as well , and thus @xmath301)\\le\\delta$ ] .",
    "finally , it remains to see that ` cut - cones ` is indeed a partition of @xmath20 ( i.e. that it covers @xmath20 ) , and this can be verified by the first property of . if for @xmath303 there is a shortest path from @xmath276 to @xmath25 ending at @xmath308 , then whenever @xmath292 is covered by a cone , @xmath276 must be covered as well ( the algorithm does not stop until @xmath188 ) .    for a time step @xmath23 , we say that @xmath309 is the _ working supernode _ , and at the end of this step it will become the supernode @xmath152 .",
    "note that @xmath309 induces a connected subgraph , because we always choose a node @xmath276 in @xmath310 to be a start of the next path .",
    "we denote by @xmath311 .",
    "the following invariant holds for each time step @xmath23 :    [ inv : sim ] for every @xmath312 , every connected component @xmath15 of @xmath264 satisfies that if @xmath193 then @xmath194 .",
    "assume inductively that the invariant holds until time step @xmath23 at iteration @xmath263 .",
    "first consider the case @xmath313 , then as @xmath264 is obtained from @xmath314 by removing some vertices , and the set of supernodes remains unchanged , the invariant will still hold : every connected component @xmath15 of @xmath264 is a subset of a connected component @xmath315 of @xmath314 , in particular @xmath316 , and so any pair of supernodes @xmath193 is also in @xmath317 and thus @xmath194 .    for the case",
    "@xmath318 , a new supernode @xmath319 was just introduced , but the termination condition of line 9 . guarantees that for any connected component @xmath15 in @xmath176 , any supernode @xmath266 must have @xmath320 .",
    "[ cor : ler ] if @xmath17 excludes @xmath148 as a minor , then for every time step @xmath23 and iteration @xmath263 , the connected component @xmath261 has @xmath321 .",
    "moreover , fix some @xmath322 . if @xmath323 are the shortest paths chosen while creating @xmath152 in the components containing @xmath29 , then @xmath324 .    if @xmath325 , then using , contracting each supernode in @xmath326 will yield a @xmath327 minor , so it must be that @xmath328 . to see the second part of the assertion , note that each @xmath251 will connect the component containing @xmath29 with some supernode @xmath329 , so that @xmath330 . finally , as @xmath321",
    ", there can be at most @xmath11 such paths .",
    "[ lem : strong - cut - prob ] for @xmath331 , the probability that a ball @xmath142 of radius @xmath222 is cut by the above process is @xmath223 \\leq o(\\gamma r^2)~.\\ ] ]    first observe that our algorithm is a threatening skeleton - process with parameters @xmath125 , @xmath332 , @xmath333 , @xmath127 and the @xmath176 ( respectively @xmath334 , @xmath123 ) are the @xmath264 ( resp .",
    "@xmath251 , @xmath258 ) ordered lexicographically . by we get that for all @xmath335 , @xmath336 . by",
    ", each of these supernodes @xmath337 can have at most @xmath11 paths that were built in a component containing @xmath261 , so it may contribute at most @xmath11 to the number of sets in @xmath338 , to a total of @xmath339 .",
    "we must also add in the ( at most ) @xmath11 paths of the current working supernode , to obtain that @xmath340 .",
    "recall that @xmath341 , and let @xmath146 $ ] . with this",
    "we may apply to infer that @xmath342 next , we show that our process is also a cutting skeleton - process , with the graph sequence @xmath264 and the skeletons are the @xmath251 , ordered lexicographically .",
    "the parameters are the same as before : @xmath125 , @xmath332 and @xmath127 ( this is the exact same process , after all ) .",
    "the condition that the graph sequence contains every uncovered point is trivial by definition of @xmath264 . by",
    "we obtain that the probability that @xmath142 is cut is at most @xmath343 where the last equality follows as @xmath331 . in what follows we bound the probability of event @xmath344 , which is the event that the ball @xmath142 is cut in the ` cut - cones ` procedure , while conditioning that it was not cut while creating the @xmath258 .",
    "let @xmath345 be the set that contains @xmath142 , which was built around the path @xmath346 .",
    "let @xmath347 be the centers chosen in ` cut - cones`(@xmath20,@xmath25 ) .",
    "we claim that there can be at most @xmath348 of them that may cut @xmath142 . to see this , observe that each cone contains a ball of radius at least @xmath164 , and since @xmath25 is a shortest path , in any set of 10 centers there are two centers @xmath349 such that @xmath350 . by the triangle inequality",
    "it must be that at least one of them is more than @xmath238 away from @xmath29 .",
    "finally , by any cone centered at @xmath269 may only contain points at distance at most @xmath351 from @xmath269 ( see ) , so it may not be the first to cut @xmath142 .",
    "as @xmath67 is chosen uniformly from an interval of size @xmath164 , the probability that a ball of radius @xmath222 will be cut is at most @xmath352 . by a simple union bound , @xmath353 < 144\\gamma~,\\ ] ] which is dominated by ,",
    "thus the final bound is @xmath354\\le o(\\gamma r^2)~.\\ ] ]",
    "since graphs of treewidth @xmath11 are @xmath99-free , the result of already implies a ( weak diameter ) probabilistic partition which is @xmath4-padded .",
    "the purpose of this section is to show a _",
    "strong diameter _ @xmath47-padded partition for graphs of bounded treewidth .",
    "we will use the same framework as the previous sections , and exploit the special structure of bounded treewidth graphs .",
    "a graph @xmath12 has treewidth @xmath11 if there exists a collection of sets @xmath355 with each @xmath356 , and a tree @xmath357 , such that the following conditions hold :    * @xmath358}x_i = v$ ] , * for all @xmath359 $ ] , @xmath360 , * for all @xmath361 , there exists @xmath359 $ ] such that @xmath362 , * for all @xmath363 , the tree nodes containing @xmath276 form a connected subtree of @xmath150 .",
    "[ cor : width ] let @xmath364 be a bag in the tree decomposition @xmath357 of @xmath12",
    ". then if @xmath365 lie in different connected components of @xmath366 , and @xmath367 , @xmath368 , then @xmath369 are in different connected components of @xmath370 .",
    "let @xmath12 be a graph of treewidth @xmath371 , and let @xmath150 be its tree decomposition , where @xmath150 has an arbitrary root @xmath372 .",
    "the height of a tree node @xmath364 , @xmath373 , is its distance in @xmath150 from the root @xmath372 . for a vertex @xmath363",
    "let @xmath374 denote the minimal height of a tree node @xmath364 containing @xmath276 , and denote by @xmath375 the node achieving this minimum .",
    "order the vertices of the graph @xmath376 such that for all @xmath377 , @xmath378 . in the @xmath23-th iteration of the algorithm",
    "we will have a graph @xmath176 ( initially @xmath379 ) , and if @xmath380 we shall create a cluster @xmath381 , where @xmath382}(8r)$ ] . then set @xmath383 and",
    "if @xmath384 then we do nothing in this iteration .",
    "[ alg : tree ]    let @xmath385 .",
    "let @xmath386 .",
    "let @xmath382}(8r)$ ] .",
    "let @xmath381.set @xmath387 . set @xmath388 .",
    "fix some @xmath322 , @xmath389 and @xmath131 .",
    "let @xmath390 be the tree node containing @xmath29 such that @xmath391 .",
    "the first observation is that when analyzing the probability that @xmath142 is cut , we may restrict our attention to vertices @xmath77 whose @xmath392 lies on the path from @xmath372 to @xmath364 in @xmath150 .",
    "the reason is that if @xmath393 is not on this path , then if @xmath394 is the least common ancestor of @xmath364 and @xmath393 in @xmath150 , we claim that @xmath176 does not contain any vertex from @xmath15 . to see this",
    ", note that by the choice of ordering all vertices in @xmath15 appear before @xmath395 , and thus either created a cluster or were removed from the graph .",
    "by @xmath29 and @xmath395 are in different component of @xmath176 , so @xmath152 can not be the first to cut @xmath142 .",
    "consider then the process restricted to the vertices contained in bags on the path from @xmath372 to @xmath364 ( we may assume w.l.o.g that these appear first in the ordering ) . for any @xmath396",
    "$ ] , denote by @xmath175 the connected component in @xmath176 that contains @xmath29 , and let @xmath397 .",
    "[ claim : fef ] for any @xmath396 $ ] , @xmath398 .",
    "let @xmath399 be the sequence of bags from the root to @xmath364 in the tree decomposition .",
    "for any @xmath400 $ ] , let @xmath401 $ ] be the minimal such that @xmath402 .",
    "we prove that @xmath403 , by noting that there are at most @xmath11 supernodes that can intersect @xmath169 ( as @xmath404 ) .",
    "if a supernode @xmath405 does not intersect @xmath169 , then since this supernode is not centered at some vertex of @xmath406 for @xmath407 ( using the ordering and the minimality of @xmath408 ) , then by there is no path from @xmath29 to @xmath409 in @xmath410 .",
    "since there are at most @xmath11 new supernodes created between time @xmath408 to @xmath411 ( as each bag is covered after at most @xmath11 clusters are formed ) , the claim follows .",
    "observe that the algorithm generates a threatening skeleton - process with the sequence @xmath412 , the skeletons are @xmath413 , @xmath226 , @xmath125 , @xmath244 , @xmath414 and @xmath415 .",
    "let @xmath416 .",
    "by we may apply and obtain that @xmath417 finally , as our process can also be made to be a cutting skeleton - process , as long as we omit the steps in which @xmath384 ( note that the next @xmath23 for which @xmath380 may depend on previous random choices of @xmath418 for @xmath419 , but this is allowed ) , and with @xmath125 , @xmath244 and @xmath415 . applying , we obtain that the probability that @xmath142 is cut is at most @xmath420 using that @xmath421 .",
    "for @xmath422 , a graph @xmath12 has genus at most @xmath9 if it can be drawn on the surface of a sphere with @xmath9 `` handles '' without any edges crossing .",
    "the following result is folklore ( see , e.g. , @xcite )    [ lem : genus ] if @xmath17 is a genus @xmath9 graph , there exists a cycle @xmath87 comprised of two shortest paths emanating at a common root , such that @xmath423 has genus at most @xmath424 .",
    "this fits nicely in the bounded threateners program : our algorithm will iteratively take such a cycle @xmath87 , create a random buffer @xmath20 around it , and recurse on the connected components of @xmath425 .",
    "the base case is when the component is planar , then we may apply our strong - diameter padding algorithm . formally , in iteration @xmath23 take a connected component @xmath175 in @xmath176 , if @xmath175 is not planar , find a cycle @xmath334 as in .",
    "let @xmath426 where @xmath427}(8\\log g)$ ] , set @xmath383 .",
    "each @xmath152 is partitioned to clusters by iteratively taking cones centered at some of the points of @xmath334 . if @xmath175 is planar , invoke the decomposition scheme of .",
    "[ alg : genus ]    let @xmath171 , @xmath428 .",
    "let @xmath429 .",
    "let @xmath175 be a connected component of @xmath176 .",
    "let @xmath430 be a partition obtained by invoking ` strong - random - partition`(@xmath431 ) .",
    "add the clusters of @xmath430 to @xmath25 .",
    "set @xmath432 .",
    "let @xmath334 be cycle as in .",
    "let @xmath427}(8\\log g)$ ] .",
    "add @xmath426 as a cluster to @xmath25 . `",
    "create - cones`(@xmath433 ) .",
    "add the resulting clusters to @xmath25 .",
    "set @xmath387 . @xmath186 .",
    "we now turn to analyzing the algorithm .",
    "the fact that the resulting partition is strong - diameter @xmath1-bounded follows from the fact that ` strong - random - partition ` generates strong - diameter @xmath1-bounded clusters , and by , the cones are also strong - diameter @xmath1-bounded ( the proof of that lemma never used that @xmath25 is a shortest path , we only need that any point in @xmath152 is within distance @xmath302 from @xmath334 ) .",
    "fix some @xmath322 , @xmath434 for sufficiently small constant @xmath36 ( which is independent of @xmath9 ) , and set @xmath131 .",
    "[ lem : genus - cut - prob ] the probability that the ball @xmath142 is cut by the above process is @xmath223 \\leq 1 - e^{-o(\\gamma\\log g)}~.\\ ] ]    let @xmath435 be the event that @xmath142 is first cut by some set @xmath152 . divide the event @xmath436 into @xmath437 and @xmath438 .",
    "let @xmath439 be the event that @xmath440 holds and also @xmath142 is first cut by a cone in the ` create - cones`(@xmath433 ) , and finally let @xmath441 be the event that @xmath442 holds and also @xmath142 is cut while calling ` strong - random - partition ` on a planar component containing @xmath142 .",
    "we will bound each of the @xmath443 events separately .",
    "assume w.l.o.g that non - planar components are chosen first , then the process until time @xmath150 ( where all components are planar ) is a cutting skeleton - process , with the graph sequence @xmath412 , the skeletons @xmath334 and @xmath226 , the parameters are @xmath125 , @xmath244 and @xmath444 .",
    "let @xmath445,~d_{g_i}(a_i , z)\\le(1/2+\\gamma)\\delta\\}$ ] .",
    "note that by there can be at most @xmath9 iterations ( on components containing @xmath29 ) in which @xmath29 lies in a non - planar component , so @xmath446 .",
    "by @xmath447\\le ( 1-e^{-8\\gamma\\log g})\\cdot(1+g/(e^{2\\log g}-1))\\le 1-e^{-16\\gamma\\log g}~,\\ ] ] using that @xmath448 , say . if @xmath449=p$ ] , then @xmath450 and if @xmath451 $ ] and @xmath452 $ ] then @xmath453 by the first assertion of , there is a large constant @xmath15 such that @xmath454= p_{\\text{planar}}\\cdot o(\\gamma)=p_{\\text{planar}}(1-e^{-c\\gamma})~,\\ ] ] since @xmath455 is sufficiently small .    finally , we bound the probability of event @xmath439 .",
    "conditioning on @xmath456 for some @xmath23 , we use a similar argument as in the proof of , here we claim that there can be at most @xmath457 centers whose cone may intersect @xmath142 . this is because if there are more , at least @xmath234 of them lie on one of the two shortest path @xmath334 is comprised of , and using the argument appearing in the proof of , it can not be that all of them threaten @xmath142 .",
    "since @xmath67 is chosen uniformly from an interval of length @xmath164 , the probability that any cone cuts @xmath142 is at most @xmath458 , thus by a union bound , using that @xmath15 is large enough , @xmath459= p_{\\text{cone}}\\cdot o(\\gamma)=p_{\\text{cone}}(1-e^{-c\\gamma})~.\\ ] ]    combining the three bounds , we obtain that the probability that @xmath142 is cut is at most    @xmath460+\\pr[{\\cal e}_{\\text{cone}}]+\\pr[{\\cal e}_{\\text{planar}}]&\\le&1-p+p_{\\text{cone}}(1-e^{-c\\gamma})+p_{\\text{planar}}(1-e^{-c\\gamma})\\\\ & \\stackrel{\\eqref{eq : p}}{=}&1-p\\cdot e^{-c\\gamma}\\\\ & \\le&1-e^{-16\\gamma\\log g}\\cdot e^{-c\\gamma}\\\\ & = & 1-e^{-o(\\gamma\\log g)}~.\\end{aligned}\\ ] ]    we note that this result can also be extended to generate a sparse cover with strong diameter @xmath1 , such that for each vertex , its ball of radius @xmath44 is contained in some cluster and each node belongs to at most @xmath8 clusters .",
    "we are grateful to alex andoni and daniel berend for fruitful discussions .",
    "a.  gupta thanks microsoft research svc for their kind hospitality .",
    "fix any @xmath138 . w.l.o.g .",
    ", we may assume that the process always picks the set @xmath334 in the connected component @xmath175 of @xmath176 that contains @xmath29 .",
    "let @xmath461 be a vector of the `` normalized distances '' from @xmath29 to @xmath462 .",
    "more formally , if @xmath463 ( with @xmath464 by the assumption of the lemma ) , then for @xmath465 $ ] define @xmath466 .",
    "intuitively , @xmath467 should have been the distance from @xmath29 to @xmath468 , normalized by @xmath469 .",
    "observe that @xmath470 .",
    "we would like to analyze the change to @xmath473 over time .",
    "assume w.l.o.g that @xmath474 .",
    "let @xmath475 be the normalized distance of @xmath29 from the set @xmath334 , and let @xmath476 .",
    "observe that if @xmath477 then the shortest path from @xmath468 to @xmath29 is completely disjoint from @xmath123 ; indeed , if there was an intersection , then the distance from @xmath29 to @xmath123 would be smaller , a contradiction .",
    "we get that if @xmath478 is the maximal index such that @xmath479 , then the first @xmath478 entries of @xmath473 will not change . the new set",
    "@xmath123 will always be in @xmath480 ( recall that @xmath481 is the component containing @xmath29 in @xmath120 ) , so we have that the @xmath482 entry in @xmath483 will be @xmath484 . for @xmath485 , it could be the case that @xmath123 intersects the shortest path from @xmath468 to @xmath29 , in which case the distance may increase or @xmath468 can even be disconnected from @xmath29 .",
    "note that if @xmath486 , then it must be that at least one @xmath468 is disconnected from @xmath29 , because we assume that @xmath487 .",
    "next we attempt to bound the expected change to the potential function @xmath488 in any single step . to this end , it suffices to consider the worst scenario , in which all the @xmath468 for @xmath485 become disconnected from @xmath29 by @xmath123 ( in such a case the potential decreases the most ) . to this end , define the `` filtered subsequence '' @xmath489 to be the sequence obtained by dropping all the coordinates of @xmath473 which are strictly larger than @xmath490 , and adding in @xmath490 .. ]    [ thm : pot - gen ] let @xmath488 be a function defined as in .",
    "fix any non - decreasing sequence @xmath473 of length at most @xmath122 , and a random variable @xmath491 as in .",
    "then for any @xmath492 : @xmath493 \\geq    \\frac{s(e-2 ) \\cdot    e^{-(2s+1)h}}{1 - e^{-2s}}.\\ ] ]    let @xmath127 and @xmath494 .",
    "the increase of the potential due to the new coordinate @xmath495 is @xmath496 , so the expected gain is @xmath497 = e^{ah}\\cdot\\int_{0}^1 e^{-aw}\\ , f_{texp;b}(w)\\ , dw =      e^{ah}\\cdot\\int_{0}^1 \\frac{b}{1 - e^{-b}}\\ , e^{-(a+b)w}\\ , dw =      \\frac{b(e-1)\\cdot e^{ah}}{1 - e^{-b}}. \\label{eq : gain1 }    \\end{gathered}\\ ] ]    next we analyze the loss in @xmath488 for the coordinates @xmath467 that are dropped .",
    "recall that a coordinate @xmath467 is dropped exactly when @xmath498 . since @xmath499 $ ] the only interesting case is when @xmath500 for some @xmath501 $ ] , which is dropped when @xmath502 , so the maximum loss is @xmath503 } e^{a(h-\\gamma ) } \\pr [ y > \\gamma ] & = &      e^{ah}\\cdot\\max_{\\gamma \\in [ 0,1 ] } e^{-a\\gamma}\\int_{\\gamma}^1      f_{texp;b}(w)\\ , dw\\\\      & = & e^{ah}\\cdot\\max_{\\gamma \\in [ 0,1 ] } e^{-a\\gamma}\\ , \\frac{e^{-b\\gamma } -        e^{-b}}{1 - e^{-b}}\\\\      & = & \\frac{e^{ah}}{1-e^{-b}}\\cdot\\max_{\\gamma\\in [ 0,1]}e^\\gamma - e^{-a\\gamma - b}\\\\      & \\le &   \\frac{e^{ah}}{1-e^{-b}}\\cdot e~.    \\end{aligned}\\ ] ]    since @xmath473 has only @xmath122 coordinates , the total expected loss incurred on @xmath488 is thus at most @xmath504 finally using and we see that @xmath505 & \\geq &   \\frac{b(e-1)\\cdot        e^{ah}}{1 - e^{-b } } - \\frac{s\\cdot        e^{ah+1}}{1-e^{-b}}\\nonumber\\\\      & = & \\frac{(e(b - s)-b)\\cdot e^{-(b+1)h}}{1-e^{-b}}. \\nonumber    \\end{aligned}\\ ] ]          we claim that still holds for @xmath510 .",
    "this is because it is the same as @xmath488 as long as @xmath511 , and if @xmath483 is the first to have a non - positive coordinate , then @xmath512 and @xmath513 , but since @xmath492 the claimed expected increase in is never more than @xmath122 .",
    "denote by @xmath514 .",
    "recall that for every @xmath515 we have that @xmath516 and thus @xmath517 .",
    "observe that the expectation of is taken only over the current choice of @xmath518 , and since @xmath518 is chosen independently we can condition on any other event that depends on previous steps , and obtain the same bound .",
    "in particular , for @xmath515 , @xmath519\\ge \\phi_i+2s\\cdot e^{-(2s+1)h}/3\\ge   \\phi_i+2s\\cdot e^{-(2s+1)\\cdot(1+\\gamma / u)}/3~,\\ ] ] and define @xmath520 . also note that the bound of is always positive , so even if @xmath521 we still have @xmath522\\ge   \\phi_i~.\\ ] ] for @xmath523 let @xmath524 be the number of time steps until @xmath133 in which @xmath29 is threatened .",
    "we claim that the process @xmath525 where @xmath526 , is a submartingale .",
    "to prove this consider two cases : if @xmath527 then @xmath528 , and by we get @xmath529\\ge\\phi_t+\\zeta$ ] , and so @xmath530={\\mathbb{e}}[\\phi_{t+1}-\\zeta\\cdot j_{t+1}\\mid \\phi_t , j_t]\\ge \\phi_t+\\zeta-\\zeta\\cdot j_{t+1 } = \\phi_t+\\zeta-\\zeta\\cdot ( j_t+1 ) = \\phi_t-\\zeta\\cdot j_t~.\\ ] ] if it is the case that @xmath531 , then @xmath532 and @xmath533\\ge \\phi_t-\\zeta\\cdot j_t~.\\ ] ]    the stopping time of a ( sub)martingale @xmath525 is a random variable @xmath534 that has support in @xmath535 , and such that the event @xmath536 depends only on @xmath537 .",
    "define @xmath534 as the first time in which @xmath538 .",
    "observe that if @xmath133 is the time where @xmath132 , then it must be that @xmath539 , and so we get a non - positive coordinate in @xmath540 which implies that @xmath536 . since the stopping time is bounded by @xmath541 ( there can be at most @xmath541 rounds , because at least one vertex is removed every round ) , we can apply doob s optional stopping time theorem ( * ? ? ?",
    "* section  12.5 ) and obtain that @xmath542-\\zeta\\cdot{\\mathbb{e}}[j_\\tau]={\\mathbb{e}}[x_\\tau]\\ge{\\mathbb{e}}[x_0]=0~.\\ ] ] finally , as @xmath538 , we obtain that @xmath140={\\mathbb{e}}[j_\\tau]\\le 2s/\\zeta = 3e^{(2s+1)\\cdot(1+\\gamma / u)}~.\\ ] ] this completes the proof .",
    "denote by @xmath544 the event @xmath545 , so that @xmath546 .",
    "denote by @xmath547 the complement of @xmath548 .",
    "observe that @xmath549 ( respectively @xmath547 ) implies that @xmath550 , so @xmath551=\\pr[{{\\ensuremath{\\mathcal{c}}}}_i\\wedge i\\in{{\\ensuremath{\\mathcal{t}}}}_z]=\\pr[i\\in{{\\ensuremath{\\mathcal{t}}}}_z]\\cdot\\pr[{{\\ensuremath{\\mathcal{c}}}}_i\\mid i\\in{{\\ensuremath{\\mathcal{t}}}}_z]~,\\\\\\label{eq : full2 } \\pr[{{\\ensuremath{\\overline{\\mathcal{f}}}}}_i]=\\pr[i\\in{{\\ensuremath{\\mathcal{t}}}}_z]\\cdot\\pr[{{\\ensuremath{\\overline{\\mathcal{f}}}}}_i\\mid i\\in{{\\ensuremath{\\mathcal{t}}}}_z]~.\\end{aligned}\\ ] ] and the same holds also when conditioning on any other event .",
    "we have the following claim :    [ claim : cut ] for each @xmath138 , @xmath552\\le ( 1-\\delta)\\cdot\\left(\\pr[{{\\ensuremath{\\overline{\\mathcal{f}}}}}_i\\mid { { \\ensuremath{\\mathcal{f}}}}_{(<i)},i\\in { { \\ensuremath{\\mathcal{t}}}}_z]+\\frac{1}{e^b-1}\\right)~.\\ ] ]    fix any graph @xmath176 and any set @xmath117 that agree with the conditioning on @xmath553 and so that @xmath554 .",
    "denote by @xmath555 , @xmath556 , and let @xmath557 . recall that @xmath180 is chosen independently , so @xmath558&=&\\int_m^u\\frac{\\bar{b } e^{-\\bar{b}y}}{e^{-\\bar{b}l}-e^{-\\bar{b}u}}dy\\\\ & = & \\frac{e^{-\\bar{b}m}-e^{-\\bar{b}u}}{e^{-\\bar{b}l}-e^{-\\bar{b}u}}~.\\end{aligned}\\ ] ] since @xmath559 occurred and @xmath560 , we have that @xmath561 .",
    "now if @xmath562 then by the triangle inequality @xmath563 , and the ball is `` saved '' .",
    "this bounds the cut probability thus : @xmath564&\\le&\\int_m^{\\rho+2\\gamma}\\frac{\\bar{b } e^{-\\bar{b}y}}{e^{-\\bar{b}l}-e^{-\\bar{b}u}}dy\\\\ & \\le&\\frac{e^{-\\bar{b}m}-e^{-\\bar{b}(m+2\\gamma)}}{e^{-\\bar{b}l}-e^{-\\bar{b}u}}\\\\ & = & \\frac{e^{-\\bar{b}m}(1-\\delta)}{e^{-\\bar{b}l}-e^{-\\bar{b}u}}\\\\ & = & ( 1-\\delta)\\cdot\\pr[{{\\ensuremath{\\overline{\\mathcal{f}}}}}_i\\mid { { \\ensuremath{\\mathcal{f}}}}_{(<i)},i\\in { { \\ensuremath{\\mathcal{t}}}}_z , a_i]+(1-\\delta)\\frac{e^{-\\bar{b}u}}{e^{-\\bar{b}l}-e^{-\\bar{b}u}}\\\\ & = & ( 1-\\delta)\\cdot\\left(\\pr[{{\\ensuremath{\\overline{\\mathcal{f}}}}}_i\\mid { { \\ensuremath{\\mathcal{f}}}}_{(<i)},i\\in { { \\ensuremath{\\mathcal{t}}}}_z , a_i]+\\frac{1}{e^b-1}\\right)~.\\end{aligned}\\ ] ] finally , because the bound holds for any @xmath334 , it holds without conditioning on it .",
    "observe that for each @xmath565 $ ] , the events @xmath566 are pairwise disjoint ( this is the event that @xmath142 is either cut or contained in @xmath123 for the first time ) , thus by the law of total probability , @xmath567\\le 1~.\\ ] ] also , by linearity of expectation @xmath568~.\\ ] ] to bound the probability of the ball being cut , we start off with the trivial union bound : @xmath569&\\le \\sum_i\\pr[{{\\ensuremath{\\mathcal{e}}}}_i ] = \\sum_i\\pr\\left[{{\\ensuremath{\\mathcal{c}}}}_i\\wedge{{\\ensuremath{\\mathcal{f}}}}_{(<i)}\\right]\\\\ & = \\sum_i\\pr[{{\\ensuremath{\\mathcal{c}}}}_i\\mid { { \\ensuremath{\\mathcal{f}}}}_{(<i ) } ] \\cdot \\pr[{{\\ensuremath{\\mathcal{f}}}}_{(<i ) } ] \\\\ & \\stackrel{\\eqref{eq : full1}}{= }    \\sum_i \\pr[{{\\ensuremath{\\mathcal{c}}}}_i \\mid { { \\ensuremath{\\mathcal{f}}}}_{(<i ) } , i\\in{{\\ensuremath{\\mathcal{t}}}}_z ]    \\cdot \\pr[i\\in{{\\ensuremath{\\mathcal{t}}}}_z\\mid { { \\ensuremath{\\mathcal{f}}}}_{(<i ) } ]    \\cdot \\pr[{{\\ensuremath{\\mathcal{f}}}}_{(<i ) } ] \\\\ & \\stackrel{\\text{\\footnotesize { { \\hyperref[claim : cut]{claim~\\ref*{claim : cut}}}}}}{\\leq }    \\sum_i ( 1-\\delta)\\left(\\pr[{{\\ensuremath{\\overline{\\mathcal{f}}}}}_i\\mid { { \\ensuremath{\\mathcal{f}}}}_{(<i)},i\\in{{\\ensuremath{\\mathcal{t}}}}_z]+\\frac{1}{e^b-1}\\right )    \\cdot \\pr[i\\in{{\\ensuremath{\\mathcal{t}}}}_z\\mid { { \\ensuremath{\\mathcal{f}}}}_{(<i ) } ]    \\cdot \\pr[{{\\ensuremath{\\mathcal{f}}}}_{(<i ) } ] \\\\   & \\stackrel{\\eqref{eq : full2}}{= } ( 1-\\delta)\\cdot\\sum_i\\pr\\left[{{\\ensuremath{\\overline{\\mathcal{f}}}}}_i\\wedge{{\\ensuremath{\\mathcal{f}}}}_{(<i)}\\right]+\\sum_i\\pr\\left[i\\in{{\\ensuremath{\\mathcal{t}}}}_z\\wedge{{\\ensuremath{\\mathcal{f}}}}_{(<i)}\\right]\\cdot\\frac{1-\\delta}{e^b-1}\\\\   & \\stackrel{\\eqref{eq : gq}}{\\le}(1-\\delta)+\\frac{1-\\delta}{e^b-1}\\cdot\\sum_i\\pr[i\\in{{\\ensuremath{\\mathcal{t}}}}_z]\\\\   & \\stackrel{\\eqref{eq : lin}}{=}(1-\\delta)\\left(1+\\frac{\\tau}{e^b-1}\\right)~.\\end{aligned}\\ ] ] this completes the proof ."
  ],
  "abstract_text": [
    "<S> we prove that any graph excluding @xmath0 as a minor has can be partitioned into clusters of diameter at most @xmath1 while removing at most @xmath2 fraction of the edges . </S>",
    "<S> this improves over the results of fakcharoenphol and talwar , who building on the work of klein , plotkin and rao gave a partitioning that required to remove @xmath3 fraction of the edges .    </S>",
    "<S> our result is obtained by a new approach to relate the topological properties ( excluding a minor ) of a graph to its geometric properties ( the induced shortest path metric ) . </S>",
    "<S> specifically , we show that techniques used by andreae in his investigation of the cops - and - robbers game on excluded - minor graphs can be used to construct padded decompositions of the metrics induced by such graphs . </S>",
    "<S> in particular , we get probabilistic partitions with padding parameter @xmath4 and strong - diameter partitions with padding parameter @xmath5 for @xmath0-free graphs , padding @xmath6 for graphs with treewidth @xmath7 , and padding @xmath8 for graphs with genus @xmath9 . </S>"
  ]
}
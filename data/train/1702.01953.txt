{
  "article_text": [
    "[ theo : main ] anke wins the parity game iff she wins the statistics games .",
    "since statistics games are determined , the direct implication follows from :    [ lem : boris ] if boris wins the statistics games , he wins the parity game .",
    "every play won by boris in the statistics game is won by boris in the parity game because @xmath30 is odd in every sequence of statistics updates @xmath31 such that @xmath32 , the proof of which follows .",
    "an easy case is when the sequence of statistics is ultimately constant equal to some @xmath15 then @xmath33 thus @xmath20 is odd because an update by an even priority always performs an insertion . in the opposite case",
    "define @xmath34 the maximal pair ( for the dichotomic order ) inserted infinitely often .",
    "since @xmath35 is inserted infinitely often then @xmath36 . and @xmath37 otherwise @xmath20 would be inserted infinitely often at an index @xmath38 which would contradict the maximality of @xmath34 .",
    "since @xmath23 is inserted infinitely often then it is removed infinitely often , let @xmath39 be a pair used infinitely often to remove @xmath23 . since @xmath23 is removed by the insertion of @xmath39 then @xmath40 hence @xmath41 by maximality of @xmath21 . since @xmath42 then @xmath43 by maximality of @xmath20 .",
    "since @xmath23 is removed by the insertion of @xmath39 and @xmath43 then this insertion is necessarily performed by a type i update and since @xmath41 then @xmath20 is odd otherwise the insertion would occur at a higher index .    the converse implication ( corollary  [ cor : direct ] ) relies on several crucial properties of statistics .    with every statistic @xmath15",
    "is associated its _ counter value _",
    "@xmath44    in the sequel we fix a sequence @xmath45 of statistics updates",
    ". we will first give two lemmas that gives information on what can be said when an update of type 1 and 2 , respectively , is used on a date .",
    "[ lem : rule1 ] for all @xmath46 if @xmath47 is a type 1 update , then @xmath48    let @xmath21 be the entry of the insertion in update @xmath47 .",
    "then , @xmath49 can not be defined and even , because otherwise @xmath50 could also be chosen . also , @xmath51 is @xmath52 and thus even . on the other hand ,",
    "since @xmath47 is a type 1 update , we have for @xmath53 that @xmath54 is defined and even and @xmath55 is not defined .",
    "no index @xmath56 changes on an insertion on index @xmath21 . hence , @xmath57 .",
    "next , the lemma about type 2 updates .",
    "[ lem : rule2 ] for all @xmath46 if there is an update of type 2 on @xmath23 at date @xmath46 , then there is a @xmath58 such that    1 .   the update on date @xmath59 is of type 1 2 .",
    "the statistics @xmath60 is equal to @xmath61 except that @xmath62 and @xmath63 is even ( implying that @xmath64 if @xmath20 is even and @xmath65 if @xmath20 is odd ) 3 .",
    "there are no insertions at index @xmath66 for any @xmath67 between date @xmath59 and @xmath46 .    also , @xmath58 is the last date such that there is a type 1 update at that date on index @xmath21 .",
    "let @xmath58 be the largest date such that there is a type 1 update at that date on index @xmath21 .",
    "this is well - defined , since initially , @xmath24 and for the smallest @xmath68 , such that @xmath69 , we must have that the update at date @xmath68 is a type 1 update ( by definition ) .",
    "we see that both @xmath70 and @xmath71 are undefined for @xmath72 because of the updates on date @xmath46 and @xmath59 respectively .",
    "also , for all @xmath73 such that @xmath71 or @xmath70 is defined , we have that both are defined and @xmath74 .",
    "this is because , if an insertion @xmath75 is performed for @xmath67 on a date @xmath68 between @xmath76 and @xmath46 , we have that @xmath77 becomes undefined and hence , there must be a date @xmath78 such that @xmath21 is inserted again , which would use rule 1 and thus contradict the choice of @xmath59 .",
    "thus , the statistics match except that @xmath79 ( because each later time we change index @xmath21 we use rule 2 and the entry thus increases ) . also , @xmath63 is even because the update on date @xmath59 is of type 1 .",
    "we also give a corollary .",
    "[ cor : firstrule1 ] fix a number @xmath80 . consider the smallest date @xmath81 such that @xmath82 .",
    "then the update on date @xmath81 is of type 1 and @xmath83    by minimality of @xmath81 we get that @xmath84 ( because @xmath85 ) .",
    "by lemma  [ lem : rule2 ] , the update on date @xmath81 has type 1 . by lemma  [ lem : rule1 ]",
    ", we thus get that @xmath86 .",
    "next , we define even factorization and then show that a long even factorization implies that anke wins the parity game .",
    "an _ even factorization _ of length @xmath87 is a sequence @xmath88 such that for every @xmath89 , the maximum of @xmath90 is even .",
    "we next show that long even sequences exists .",
    "[ lem : factor ] for all @xmath46 , there is an even factorization of length at least @xmath91 .",
    "[ cor : direct ] if anke wins the statistics game then she wins the parity game .    by definition of the statistics game",
    ", anke can enforce the play to reach a statistic @xmath61 such that @xmath92 .",
    "if @xmath46 is chosen minimal then @xmath93 is an update of type 1 by corollary  [ cor : firstrule1 ] on entry @xmath13 .",
    "hence , @xmath61 is defined on @xmath13 and @xmath94 is even .",
    "this implies that @xmath95 . according to lemma  [ lem : factor ]",
    ", such a play has an even factorization @xmath96 of length @xmath95 . since @xmath14 is @xmath97 than twice the number of vertices , the play loops on the same vertex at some dates @xmath98 and @xmath99 , while having the same current player , with @xmath100 . by definition of even factorizations ,",
    "the maximal priority on this loop is even .",
    "thus boris has no positional winning strategy in the parity game ( because if he had followed it , no loop can have even maximal priority ) , and since parity games are positional  @xcite , boris has no winning strategy at all in the parity game .    consider a fixed @xmath46 .",
    "let @xmath101 .",
    "we will show that the following sequence @xmath102 is an even factorization .    for ease of notation ,",
    "let @xmath103 ( note that @xmath104 is not part of the even factorization ) . for all @xmath105 , let @xmath106 be the last date @xmath81 using rule 1 such that @xmath107 .",
    "* sequence is well - defined . *",
    "this sequence is well - defined because ( 1 )  on the first date @xmath81 where @xmath108 we use rule 1 and @xmath109 , by corollary  [ cor : firstrule1 ] ; and ( 2 )  @xmath110 ( and hence a date @xmath111 exists where @xmath108 ) , which is true for @xmath112 by definition of @xmath104 and otherwise follows from lemma  [ lem : rule1 ] because we use rule 1 on date @xmath113 for @xmath114 .    *",
    "sequence is an even factorization .",
    "* consider some fixed @xmath115 .",
    "we will argue that the maximum priority @xmath20 in @xmath90 is even .",
    "we will do so using contradiction , so assume that @xmath20 is odd .",
    "let @xmath116 be the smallest date such that @xmath20 is seen on that date and let @xmath21 be the index changed on that date .",
    "note that @xmath117 , since we use rule 1 on date @xmath98 which requires an even number .",
    "[ cla : ell ] the number @xmath21 is well - defined and @xmath118 .",
    "let @xmath66 be the index inserted at date @xmath98 .",
    "let @xmath119 be the largest index inserted at a date in @xmath120 . by definition of @xmath119",
    ", we have that @xmath121 is defined and by definition of @xmath81 and @xmath20 we have that @xmath122 .",
    "thus , we can perform a type 2 insertion of @xmath20 at @xmath119 and hence @xmath21 is well - defined .",
    "thus , @xmath123 is odd or undefined for @xmath124 , and @xmath125 because no such entry has changed between those two dates . on the other hand @xmath126 is even since a rule 1 update was used on that index on that date .",
    "let @xmath127 be the first date such that @xmath128 .",
    "this is well - defined because we have that @xmath129 by lemma  [ lem : rule1 ] ( since we use rule 1 on date @xmath130 ) .",
    "clearly @xmath131 since @xmath132 by claim  [ cla : ell ] .",
    "this also implies that @xmath133 .",
    "we must thus make an update on date @xmath134 .",
    "we can not make an update of type 1 on date @xmath134 , because @xmath135 would then imply that @xmath136 by lemma  [ lem : rule1 ] , which contradicts the choice of @xmath98 ( since @xmath137 as noted ) .",
    "we next argue that the update on date @xmath134 can not be of type 2 either which contradicts that an update have either type 1 or 2 , shows that @xmath20 must be even and thus completes the proof of the lemma .",
    "[ cla : rule1t ] the update on date @xmath134 is not of type 2    assuming towards contradiction that rule 2 is used on date @xmath134 .",
    "let @xmath39 be the update performed on date @xmath134 .",
    "since @xmath135 , we have that @xmath138 is even .",
    "we will argue that there can be no such @xmath66 .",
    "let @xmath119 be the largest index changed between date @xmath81 and date @xmath134 , both included .",
    "we thus have that @xmath139 .",
    "we can apply lemma  [ lem : rule2 ] and see that there is @xmath59 such that @xmath140 and such that @xmath141 , because @xmath138 is even .",
    "we thus just need to argue that @xmath142 to contradict that @xmath134 is the first date in @xmath143 where @xmath128 .    * if @xmath144 . *",
    "note that this is especially the case if @xmath145 .",
    "we see that @xmath142 because there is no insertion between date @xmath59 and @xmath134 at a higher index than @xmath66 by lemma  [ lem : rule2 ] .",
    "this contradicts the choice of @xmath134 .",
    "* otherwise , if @xmath146 . * in this case @xmath147 is either not defined or at least @xmath20 .",
    "this is because if @xmath148 was defined and smaller than @xmath20 , then it would be changed on date @xmath81 .",
    "we have that @xmath149 is defined and @xmath150 because otherwise we could not use rule 2 on date @xmath134 and insert into @xmath66 .",
    "consider the first date @xmath151 such that @xmath152 is defined and @xmath27 .",
    "hence @xmath153 . to lower an entry or make it defined we must use rule 1 on that entry and thus , we use rule 1 on date @xmath68 on entry @xmath66 .",
    "hence @xmath154 ( because we use rule 2 on date @xmath134 ) and thus @xmath155 . but then @xmath156 because @xmath140 is the last date on which rule 1 was used on index @xmath66 by lemma  [ lem : rule2 ] .",
    "this contradicts the choice of @xmath134 .",
    "[ [ reachability - games ] ] reachability games + + + + + + + + + + + + + + + + + +    a reachability game @xmath157 is a tuple @xmath158 , where @xmath159 is a set of @xmath5 vertices and @xmath160 is a set of @xmath6 edges .",
    "the vertex @xmath161 is a the target vertex .",
    "the play starts in some initial vertex @xmath162 , player 1 and 2 alternatively select a vertex @xmath163 .",
    "the play then continues to @xmath164 .",
    "if the play is ever in @xmath8 , the game ends and player 1 wins , otherwise player 2 wins .",
    "if player @xmath165 has a strategy to ensure a win from some vertex @xmath162 , then @xmath162 is called a winning vertex .",
    "the classical algorithm for reachability games @xmath157 is called backward induction and computes in time @xmath166 the set of winning vertices .      given a parity game @xmath167 , with @xmath168 priorities , @xmath5 vertices and @xmath6 edges , let @xmath169 be the maximum index in the corresponding statistics game .",
    "denote @xmath170 the set of statistics with @xmath168 priorities and @xmath171 being the highest possible index .",
    "the corresponding statistics game is the reachability game with vertices @xmath172 . for every edge @xmath173 and statistic update @xmath174 with @xmath175",
    ", there is an edge from @xmath176 to @xmath177 if @xmath178 or to @xmath8 if @xmath179 .",
    "the statistics game has @xmath181 vertices and @xmath182 edges and there is a nave @xmath183 upper bound on @xmath184 .",
    "this gives a first straightforward upper bound on the complexity of solving parity games : @xmath185          each increasing function @xmath189 has a 1-to-1 correspondence with subsets of size @xmath191 of @xmath192 as follows : let @xmath193 be the set @xmath194 .",
    "observe that since @xmath15 is increasing , @xmath195 for all @xmath171 .",
    "thus @xmath193 has exactly @xmath191 elements . on the other hand ,",
    "every set @xmath196 corresponds to the function @xmath197 .",
    "the function @xmath198 is increasing because @xmath199 for all @xmath171 .",
    "there are @xmath190 subsets of size @xmath191 of @xmath192 .",
    "a partial increasing function is a increasing function in its domain . for a fixed @xmath171 ,",
    "there are @xmath202 domains of size @xmath171 .",
    "since each domain of size @xmath171 corresponds to the domain @xmath203 we can apply lemma  [ lem : inc_func ] and see that there are @xmath204 increasing functions for a fixed domain of size @xmath171 .",
    "thus , there are @xmath205 increasing partial functions @xmath200 in total .",
    "we first consider the case where @xmath224 for some constant @xmath209 .",
    "observe that @xmath225 is a factor @xmath226 of @xmath227 for this choice of @xmath168 .",
    "also , for @xmath217 we have that @xmath228 .",
    "thus , @xmath229 is decreasing geometrically ( with a constant factor of at most @xmath230 ) for @xmath231 and increasing below that .",
    "but , @xmath230 is a constant and thus , @xmath232 is @xmath233 . hence , the time complexity is @xmath234 in this case .",
    "note that the above argument basically finds the maximum of @xmath241 and @xmath242 independently , i.e. without using that it is the same @xmath171 .",
    "thus , one can give better bounds for especially specific values of @xmath168 as a function of @xmath13 .",
    "we see that @xmath229 keeps increasing until @xmath243 .",
    "let @xmath244 be the smallest such @xmath171 .",
    "@xmath245      thus , for instance , for @xmath249 , we have that @xmath250 .",
    "inserting this into @xmath251 we get that @xmath252 where we used stirling s approximation for the inequality .",
    "we next consider the exponent of @xmath253 .",
    "@xmath254 inserting it back into the earlier expression , we get that the time complexity is @xmath255      c.  s. calude ,",
    "s.  jain , b.  khoussainov , w.  li , and f.  stephan .",
    "deciding parity games in quasipolynomial time .",
    "technical report , cdmtcs , october 2016 .",
    "url : https://www.cs.auckland.ac.nz/research/groups/cdmtcs/researchreports/index.php?download&paper_file=631 .",
    "e.  zermelo .",
    "uber eine anwendung der mengenlehre auf die theorie des schachspiels . in _ proc .",
    "of the fifth international congress of mathematicians _ , volume  ii , pages 501504 .",
    "cambridge university press , 1913 ."
  ],
  "abstract_text": [
    "<S> recently cristian s. calude , sanjay jain , bakhadyr khoussainov , wei li and frank stephan proposed a quasi - polynomial time algorithm for parity games  @xcite . </S>",
    "<S> these notes provide a short proof of correctness of their algorithm .    </S>",
    "<S> [ [ parity - games ] ] parity games + + + + + + + + + + + +    a parity game is given by a directed graph @xmath0 , a starting node @xmath1 , a function which attaches to each @xmath2 a priority @xmath3 from a set @xmath4 ; the main parameter of the game is @xmath5 , the number of nodes , and the second parameter is @xmath6 . </S>",
    "<S> two players anke and boris move alternately in the graph with anke moving first . </S>",
    "<S> a move from a node @xmath7 to another node @xmath8 is valid if @xmath9 is an edge in the graph ; furthermore , it is required that from every node one can make at least one valid move . </S>",
    "<S> the alternate moves by anke and boris define an infinite sequence of nodes which is called a play . </S>",
    "<S> anke wins a play through nodes @xmath10 iff @xmath11 is even , otherwise boris wins the play .    </S>",
    "<S> we say that a player _ wins the parity game _ if she has a strategy which guarantees the play to be winning for her . </S>",
    "<S> parity games are determined  @xcite thus either anke or boris wins the parity game .    </S>",
    "<S> [ [ statistics ] ] statistics + + + + + + + + + +    the core of the algorithm of calude et al . is to keep track of statistics about the game , in the form of _ partial _ functions @xmath12 the integer @xmath13 is chosen such that @xmath14 is strictly larger than twice the number of vertices . </S>",
    "<S> the domain of @xmath15 is denoted @xmath16 and its image @xmath17 . </S>",
    "<S> we also let @xmath18 . </S>",
    "<S> statistics are assumed to be _ increasing _ , </S>",
    "<S> i.e. @xmath19 . </S>",
    "<S> a statistic @xmath15 can be modified by _ inserting _ a priority @xmath20 at an index @xmath21 , which results in removing all pairs of index @xmath22 from @xmath15 and adding the pair @xmath23 .    </S>",
    "<S> the initial statistic is the empty statistic @xmath24 , which is updated successively by all the priorities visited during the play , thus producing a sequence of statistics . </S>",
    "<S> the update of a statistic @xmath15 by a priority @xmath20 is performed by applying successively the following two rules .    * </S>",
    "<S> * type i update : * if @xmath20 is even then it is inserted at the highest index @xmath25 such that @xmath15 is defined and even on @xmath26 . * </S>",
    "<S> * type ii update : * if @xmath17 contains at least one value @xmath27 then @xmath20 is inserted at the highest index @xmath28 such that @xmath29 .    applying both rules in succession </S>",
    "<S> ensures that the update of an increasing statistic is increasing . </S>",
    "<S> if rule ii triggers an insertion then we say the update is a type ii update . </S>",
    "<S> notice that in this case , applying or not rule i in the first place does not change the result . </S>",
    "<S> if rule i triggers an insertion but rule ii does not then we say the update is a type i update .    </S>",
    "<S> anke ( resp . </S>",
    "<S> boris ) _ wins the statistics game _ if she ( resp . </S>",
    "<S> he ) has a strategy to enforce ( resp . to avoid ) a visit to a statistic whose domain contains @xmath13 . </S>",
    "<S> similarly to the game of chess , statistics games are determined : either anke or boris has a winning strategy  @xcite . </S>"
  ]
}
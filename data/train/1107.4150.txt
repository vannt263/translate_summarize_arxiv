{
  "article_text": [
    "in the real world , there are many np - hard problems , including packing problem @xcite , sat problem @xcite , scheduling problem , etc . and",
    "many of them are related to the utilization of space and time , such as computer memory allocation , database storage allocation and cookies baking . at present , researchers usually regard time as a geometric dimension , present such problems as a typical np - hard problem , the packing problem , and then design feasible yet not very efficient solutions .",
    "relevant researches have been on the space scheduling problem @xcite , the assembly line problem @xcite , the multiprocessor scheduling problem @xcite , the four - dimensional rectangular packing problem @xcite , and the high - dimensional packing problem with arbitrary - shaped items @xcite .",
    "in fact , however , the items need to be baked for some time or the data should be survival in a certain period could change their locations or orientations in their storage area , and such change could make more fully utilization on space and time . therefore , this paper will study the optimal scheduling of cuboids packing in a four - dimensional space - time , which has three dimensions of space and one dimension of time .",
    "we call it the four - dimensional space - time packing and scheduling problem for short",
    ".    differs from the packing problem , here items could change their positions or orientations after being placed into the container and before being taken out .",
    "hence this problem is a promotion and extension of the traditional packing problem .",
    "we can greatly enhance the flexibility of how to utilize the space and time , and improve the container s space - time utilization ratio by this new model .",
    "its applications include the manufacturing process in large - scale factories , the memory space allocation on computers , the parallel task scheduling on hypercubes @xcite , etc . in accordance with this new model",
    ", we presented an intuitive instance of baking biscuits @xcite , in which the entire working time of the oven was saved by a third .",
    "based on this new mathematical model , it is expected to achieve a schedule that is both good and fast . in this way , relevant applications will be more rapid , economic and success .",
    "so , the potential economic and social benefits are noticeable .",
    "a lot of valuable work has been done on the two- or three - dimensional packing problems , including the work of beasley @xcite , parreno @xcite , bortfeldt @xcite , etc . to the best of our knowledge",
    ", however , there is little work on the four - dimensional space - time packing and scheduling problem heretofore . even for a simplified and preliminary version of this problem , the high - dimensional packing problem ,",
    "there is only a handful of exploring work published in the literature .",
    "the reason is that it is not easy to find a corresponding image for the four- and higher - dimensional packing problems in the three - dimensional space that we live in , and the computational complexity increases violently with the growth of the dimension .",
    "concentrating on the high - dimensional packing problems , huang et al .",
    "@xcite proposed in 1991 that the space scheduling problem could be regarded as a four - dimensional packing problem , and a quasi - physical method could be obtained after a proper extension of the quasi - physical method @xcite for solving the three - dimensional packing problems .",
    "another early discussion on high - dimensional packing problems was presented by barnes in 1995@xcite , in which he analyzed a case of packing @xmath0 rods .",
    "later on , fekete et al . discussed a general case of the @xmath1-dimensional packing problem @xcite . by using a graph - theoretical characterization of feasible packings , they proposed a branch - and - bound framework with new classes of lower bounds , and developed a two - level tree search algorithm for solving the high - dimensional packing problem to optimality .",
    "fekete et al . also reported their computational results on two- and three - dimensional benchmarks .",
    "however , they did not calculate the four- or higher - dimensional case .",
    "also , there are only two- and three - dimensional benchmarks in the or - library@xcite and packlib2 @xcite .",
    "fortunately , increasing work on high - dimensional packings could be found in the last few years . in 2009 , harren @xcite proposed two approximate schemes for the general @xmath2-dimensional hypercube packing problem . and in 2010 , li et al .",
    "@xcite proposed a greedy heuristic for the four - dimensional rectangular packing problem .",
    "also generated several test instances for the four - dimensional case .",
    "the two - dimensional rectangular packing problem has been proven to be strongly np - hard @xcite .",
    "this four - dimensional space - time packing and scheduling problem is developed basing on its extension , the three - dimensional cuboid packing problem @xcite , which has a higher computational complexity .",
    "and we need to consider the participation of time , a continuous parameter , for the computation .",
    "therefore , whether this problem is computable is a difficult problem .",
    "besides , we further consider a general and natural case where the parameters are all real numbers . in recent decades",
    ", some researchers have studied the computability and the computational complexity of real numbers and real functions @xcite .",
    "if there is a universal machine that could represent real numbers and do unit arithmetic or logical operation on them in finite time@xcite , then , again , if we can prove that there exists a deterministic algorithm that could solve the problem by finite arithmetic or logical operations on the real parameters , we may say this problem is weak computable .",
    "based on our previous work on the three - dimensional rectangular packing problem @xcite , we conducted a preliminary study on this four - dimensional space - time packing and scheduling problem in @xcite . in this paper , we will present a formal mathematical description for this problem , and prove that there exists a deterministic algorithm that could solve this problem to optimality by finite operations .",
    "this section presents a formal description of the four - dimensional space - time packing and scheduling problem and the main idea of its weak computability proof .",
    "the four - dimensional space - time packing and scheduling problem can be defined as follows . in a three - dimensional euclidean space ,",
    "given a cuboid container with fixed length @xmath3 , width @xmath4 and height @xmath5 , and given @xmath6 ( @xmath7 ) cuboid items with each item @xmath8 in size ( @xmath9 , @xmath10 , @xmath11 ) , the time length @xmath12 for each item to be processed ( e.g. to be baked ) is given too ( here all parameters are positive real numbers ) .",
    "the problem asks to provide a scheduling scheme to determine the following variables :    the starting time @xmath13 for item @xmath8 being placed into the container ( then the ending time of being taken out is @xmath13 + @xmath12 ) ;    the position and orientation of item @xmath8 at every instant of the time interval [ @xmath13 , @xmath13 + @xmath12),which is called the survival period of item @xmath8 . an item is called survival if it is in the container at the current time .    the goal is to minimize the time that the last item being taken out from the container , namely , to minimize the makespan    max(@xmath14 + @xmath15 , @xmath16 + @xmath17 , ... ,",
    "@xmath18 + @xmath19 ) - min(@xmath14 , @xmath16 , ... , @xmath18 )    at any time of the schedule , every survival item should be located orthogonally and without protruding from the container , and there is no overlapping between any two survival items .",
    "if there exists an optimal schedule for the four - dimensional space - time packing and scheduling problem , then naturally there must have an order for the items to be baked successively in this schedule .",
    "therefore , by enumerating all permutations of the items , and by proving that the optimal solution can be found by a greedy strategy for each baking order , we can prove that the solution with the shortest makespan among all solutions for different permutations is optimal for the original problem .",
    "we prove the weak computability of this problem in three steps .",
    "first , we design an exact algorithm a@xmath20 for the cuboid packing decision problem p@xmath20 . then , by using a@xmath20 as a core subprocedure , we design an exact algorithm a@xmath21 for problem p@xmath21 , the four - dimensional packing and scheduling problem with order constraints .",
    "last , by using a@xmath21 as a core subprocedure , we design an exact algorithm a@xmath22 for problem p@xmath22 , the original four - dimensional packing and scheduling problem .",
    "the cuboid packing decision problem p@xmath20 can be defined as follows . in a three - dimensional euclidean space ,",
    "given a cuboid container with fixed length @xmath3 , width @xmath4 and height @xmath5 , and given @xmath6 ( @xmath7 ) cuboid items with each item @xmath8 in size ( @xmath9 , @xmath10 , @xmath11 ) ( here all parameters are positive real numbers ) .",
    "the problem asks whether there is a feasible placement that could place all the items into the container .",
    "if so , then output the detailed layout .",
    "a placement is called feasible if each item in the container is located orthogonally ( constraint 1 ) and without protruding ( constraint 2 ) , and there is no overlapping between any two items ( constraint 3 ) .    therefore , any @xmath23 positive real numbers @xmath24 @xmath25 can uniquely identify a general and natural cuboid packing decision problem .",
    "it is reported in many recent literatures that the cuboid packing decision problem is np - hard .",
    "however , they usually refer to a special case that all parameters are integers . to the best of our knowledge , for the general and natural case that all parameters are real numbers",
    ", there is no computability proof formally published thus far .",
    "consider the container be embedded into a three - dimensional cartesian reference frame , in such a way that the lower - left - near corner coincides with the origin and the upper - right - far corner coincides with point @xmath26 .",
    "follows are conceptions will be used in the follow - up proof .",
    "object @xmath8 @xmath27 object 0 is constructed by all the points on the wall of the container and outside the container .",
    "let item @xmath28 be object @xmath8 .",
    "orientation @xmath29 .",
    "there are six possible orientations @xmath30 for object @xmath28 , with its dimensions on x- , y- , z - axes being @xmath31,@xmath32 , @xmath33,@xmath34,@xmath35 or @xmath36 , respectively .    configuration .",
    "define @xmath37 @xmath38 @xmath39 as a configuration , with @xmath40 being the coordinate of the lower - left - near vertex of object @xmath8 and @xmath41 being its orientation @xmath42 .",
    "owing to the limits of the orientation , any configuration satisfies the first constraint of problem p@xmath20 .",
    "valid configuration . at the current configuration ,",
    "define @xmath43 as the intersection volume between object @xmath8 and @xmath44 .",
    "a configuration is called valid if @xmath45 , namely , there is no intersection between any two of the @xmath46 objects .    for any given configuration , the value of @xmath47 is a definite real number .",
    "so @xmath47 is a function of @xmath48 , whose domain is @xmath49 @xmath50 and range@xmath51 .",
    "constraint 2 is satisfied when there is no intersection between object @xmath52 and any other object .",
    "constraint 3 is satisfied when there is no intersection between any two objects in @xmath53 .",
    "therefore , a configuration whose @xmath54 is a valid configuration that satisfies all the three constraints of problem p@xmath20 .",
    "if there exists a feasible layout for problem p@xmath20 , then the position and orientation of each item is determined for this layout .",
    "therefore , if we can enumerate the six different orientations for each item , that is to enumerate the @xmath55 different orientation settings for the @xmath1 items , and answer whether there exist a feasible layout for each of the @xmath55 orientation settings , then we can exactly solve problem p@xmath20 .",
    "so in this subsection , we first discuss the computability over a degeneration of p@xmath20 . the degenerated problem , namely p@xmath56 , has an additional constraint that the orientation of each item is fixed beforehand .",
    "[ lemma1 ] if the partial difference quotient of a multi - variable function @xmath57 @xmath58 is bounded(@xmath59 ) , then @xmath60 is a continuous function . here",
    "the partial difference quotient @xmath61 is defined as    @xmath62    @xmath63 @xmath64    @xmath65    @xmath66    @xmath67 @xmath68    @xmath69    @xmath70    @xmath71    @xmath72    @xmath73 @xmath74    @xmath69    @xmath75    @xmath76    @xmath77    as @xmath78 is the distance between point @xmath79 and point @xmath80 , the absolute difference between the functions of the two points is less than or equal to a constant multiplying the distance between the two points .",
    "so , function @xmath60 is continuous .",
    "lemma [ lemma1 ] is proved .",
    "[ lemma2 ] if the orientation of each item is fixed beforehand , then @xmath47 is a continuous function of @xmath81 , and it is everywhere continuous on its entire domain @xmath82 .    let us consider a two - dimensional degeneration of problem p@xmath56 .",
    "define @xmath83 as the intersection area between object @xmath8 and @xmath44 , and @xmath84 .",
    "now we prove that @xmath85 is everywhere continuous on its entire domain @xmath86 .",
    "consider @xmath87 .",
    "let item @xmath88 holds still and item @xmath89 only does the translation movement in the @xmath90 direction(fig .",
    "[ fig1 ] illustrates two positions for item @xmath89 during its translation process ) . that is to say ,",
    "let the values of @xmath91 remain unchanged and the value of @xmath92 varies within the scope of @xmath93 .     and variable @xmath92 . ]    as shown in fig .",
    "[ fig1 ] , the absolute value of the partial difference quotient    @xmath94 @xmath95    is everywhere less than or equal to @xmath96 . here",
    "@xmath97 is a difference between any given real numbers @xmath98 and @xmath99 ( @xmath100 ) .",
    "so , @xmath101 .",
    "@xmath102 ,    @xmath103 for any @xmath104 .",
    "similarly , @xmath105 , @xmath106,@xmath107 .",
    "@xmath108 are all dummy variables for @xmath109 ,    @xmath110,@xmath111 , ... , @xmath112,@xmath113 are all equal to 0 , and so are less than or equal to @xmath114 .",
    "therefore , for any point at the @xmath115-dimensional euclidean space @xmath86 , the absolute value of the partial difference quotient for @xmath116 on any of its variables is less than or equal to @xmath114 .",
    "then , according to lemma  [ lemma1 ] , function @xmath116 is everywhere continuous on its entire domain @xmath86 .",
    "similarly , @xmath117 ( @xmath118 ) is everywhere continuous on its entire domain @xmath86 .",
    "so , @xmath119 is everywhere continuous on its entire domain @xmath86 .",
    "similarly , an analogical reasoning can prove that @xmath120 is everywhere continuous on its entire domain @xmath82 .",
    "lemma [ lemma2 ] is proved .",
    "feasible point set @xmath121 .",
    "suppose @xmath81 is a point in a @xmath122-dimensional euclidean space . if the orientation of each item is fixed beforehand , then the feasible point set @xmath121 @xmath123 @xmath124 @xmath125 .    for simplicity , let s take a look at a degeneration of p@xmath56 , the two - dimensional rectangular packing decision problem @xmath126 .",
    "suppose the side of @xmath9 is limited to the @xmath90 direction for each item , and @xmath127,@xmath128 .",
    "if @xmath129 or @xmath130 , then there is no solution for the problem , @xmath131 ; if @xmath132 and @xmath133 , then there is a unique solution , @xmath134 ; if @xmath135 and @xmath136 , then there are infinite solutions , the feasible point set @xmath137 .",
    "then , we have the following speculation and the corresponding proof .    [ th1 ]",
    "if there exists a feasible solution for problem p@xmath138 @xmath139 , then the corresponding feasible point set @xmath121 is a nonempty , closed and bounded set in a @xmath122-dimensional euclidean space .",
    "non - emptiness : according to the assumption that there exists a feasible solution to the problem , @xmath121 is not empty .",
    "boundedness : because any item should be placed into the container completely , for any feasible point @xmath81 , @xmath140 , @xmath141 , namely , @xmath121 is bounded .",
    "closedness :    let @xmath142 be a sequence of points in set @xmath121 , and @xmath143 .",
    "according to lemma [ lemma2 ] , @xmath47 is a continuous function of @xmath81 .    and",
    "according to a property of the continuous function , the limit of the function sequence equals the function of the sequence limit @xcite .",
    "so , @xmath144.@xmath145    @xmath146 @xmath147,@xmath148 is a feasible point , namely @xmath149 ,    @xmath150 , @xmath151    according to eq .",
    "( 1 ) and ( 2 ) ,    @xmath152 .",
    "@xmath153 @xmath154 is a feasible point , @xmath155 .",
    "@xmath153 set @xmath121 is closed in limit operation .",
    "@xmath153 @xmath121 a closed set@xcite .    in summary , if there exists a feasible solution for problem p@xmath156 under the constraint that the orientation of each item is fixed , then @xmath121 is a nonempty , closed and bounded set in a @xmath122-dimensional euclidean space .",
    "theorem [ th1 ] is proved .",
    "[ th2 ] if there exists a feasible solution for problem p@xmath138 @xmath139 , then there is a feasible point @xmath154 in @xmath121 , and in the corresponding layout of @xmath154 , each item occupies a lower - left - near corner formed by other objects .",
    "define a potential energy function @xmath157 , whose domain is @xmath121 and range@xmath51 .",
    "note that @xmath158 is a continuous function",
    ".    as there must exist a global minimum point for a continuous function defined on a nonempty , closed and bounded set @xcite , and according to theorem [ th1 ] , so there must exist a global minimum point @xmath154 for @xmath158 defined on @xmath121 .",
    "consider a configuration @xmath159 corresponding to point @xmath154 , and consider @xmath160 for any item @xmath161 . at the current time , @xmath160 can no longer have smaller values independently and feasibly , or else it would be contradict with the conclusion that @xmath154 is a global minimum point for the potential energy @xmath158 .",
    "@xmath160 can no longer have smaller values independently and feasibly , indicating that item @xmath162 has occupied a lower - left - near corner formed by other objects .",
    "theorem [ th2 ] is proved .",
    "[ th3 ] problem p@xmath163 is weak computable .    according to theorem [ th2 ] , if there exists a feasible solution for the problem , then there is a feasible point @xmath154 in @xmath121 , and each item occupies a lower - left - near corner formed by other objects at the corresponding layout of @xmath154 .",
    "thus for any item @xmath8 of this layout , it must paste with another item @xmath164 on its bottom , and @xmath164 must paste with another item @xmath165 on its bottom , ... , and @xmath166 must paste with the x - axis surface of object @xmath52 on its bottom .",
    "the relationships of @xmath8 , @xmath167 and object @xmath52 are as shown in fig .",
    "[ fig2 ] .",
    "@xmath103 the value of coordinate @xmath168 for point @xmath154 is :    @xmath169 or @xmath170 or @xmath171    @xmath172 or @xmath170 or @xmath173 or @xmath174 or @xmath175    @xmath176    @xmath177 or @xmath170 or @xmath178 or @xmath179 or @xmath180    @xmath181 @xmath182    @xmath103 @xmath183 or @xmath184 or @xmath185 or @xmath186 @xmath187 @xmath188 or @xmath189 or @xmath190 or @xmath191    @xmath192 or @xmath193 or @xmath185 or @xmath186 @xmath187 @xmath188 or @xmath194 or @xmath190 or @xmath191    @xmath103 ( the number for different @xmath168 ) @xmath195",
    "@xmath196    coordinate of item @xmath8 for the feasible point @xmath154 . ]",
    "similarly , the number for different @xmath197 or @xmath198 both @xmath195 @xmath196    @xmath103 the number for different @xmath81 @xmath199 for solution @xmath154 .",
    "@xmath103 by enumerating the @xmath200 different layouts and by checking their feasibility one by one , we can exactly solve problem p@xmath56 by finite arithmetic or logical operations .",
    "so , p@xmath56 is weak computable .",
    "theorem [ th3 ] is proved .",
    "[ th4 ] the cuboid packing decision problem p@xmath156 is weak computable .",
    "design an enumeration algorithm a@xmath20 for the cuboid packing decision problem basing on the following strategies .    for problem p@xmath201",
    ", there are a total of @xmath1 cuboid items , and there are six orientations for each item , so there are a total of @xmath55 set of orientation configurations .    according to theorem [ th3 ] , for each set of orientation configuration",
    ", we can exactly solve the problem by enumerating the @xmath200 different layouts .",
    "therefore , we can exactly solve problem p@xmath20 in @xmath202 iteration of computations .",
    "so , p@xmath156 is weak computable .",
    "theorem [ th4 ] is proved .",
    "in this section , we discuss problem p@xmath21 , the four - dimensional packing and scheduling problem with order constraints .",
    "the container can be regarded as a cuboid oven .",
    "problem p@xmath21 is a degeneration of the original problem p@xmath22 , and p@xmath21 has an additional constraint that the items should be baked in the ascending order of their serial number . in p@xmath21 ,",
    "the starting time @xmath203 of item @xmath8 should be less than or equal to the starting time @xmath204 of item @xmath205 @xmath206 . in this section ,",
    "we first present a greedy scheduling algorithm a@xmath21 for problem p@xmath21 , and then prove its optimality .      without loss of generality , we assume that any single item could be completely placed into the oven ( larger items can be deleted from the baking sequence beforehand ) . for a p@xmath21 instance",
    ", algorithm a@xmath21 first finds a positive integer @xmath162 such that the first @xmath162 items can be all placed into the oven by algorithm a@xmath207 but the first @xmath208 items can not .",
    "then it places the first @xmath162 items into the oven by a@xmath20 and bake them continuously until at least one of the items completes its baking work .",
    "next , take out the completed one or more items , and move the remaining items in the oven to the baking sequence with their left baking time and in the original order . now the problem transforms into a new instance of problem p@xmath21 again . above procedure",
    "is call an iteration , and such kind of iterations repeat until all the items complete their baking work",
    ".    * algorithm a@xmath21 . *    0.initialization :    @xmath209,the cuboid oven ;    @xmath210,the cuboid item sequence ;    @xmath211,the remaining baking time ;    @xmath212,the time number ;    @xmath213,the initial time ;    @xmath214,items already in the container at the current time ;    @xmath215,the maximum number of items already baked or are baking .",
    "\\1 . at time @xmath216",
    ": 1.1 find the maximum @xmath217 set :    do\\ {    @xmath218 ;    @xmath219 the @xmath162-th item in @xmath220 ;    pseudo place all the items in @xmath217 by algorithm a@xmath20 ( note that there    is no constraints for the placing order ) ;    } until the items in @xmath217 can no longer be all placed into the container    or @xmath221 .",
    "1.2 if the items in @xmath217 can not be all placed into the container by a@xmath20 \\ {    @xmath222 the @xmath162-th item in @xmath220 ;    @xmath223 ;    place the items in @xmath217 into the container by a@xmath20 and bake them ;    the time length for the continuous bake @xmath224 .    } else \\ { //@xmath221,indicating that there is no items left    place the items in @xmath217 into the container by a@xmath20 and bake them ;    denote the latest time of the items being taken out by @xmath225 ;    exit .    }    \\2 .",
    "preparations for time @xmath226 :    update the remaining baking time for the items in @xmath217 :    for each @xmath227,@xmath228 ;    update the @xmath217 set :    take out items whose remaining baking time is 0    from the container , and remove them from @xmath217 ;    update the time number : @xmath229 ;    return 1 .",
    "the corresponding greedy scheduling process is as shown in fig .",
    "[ fig3 ] . here",
    "@xmath230 corresponds to the entering time of the @xmath44-th batch of items , @xmath216 to @xmath231 corresponds to beat @xmath44 , and the time length of this beat is @xmath232 . at time",
    "@xmath233 , all the remaining outside items have been placed into the oven , and we just keep taking out items that reach their baking time until all the items have completed their baking work . we represent the leaving time for the last takeout item by @xmath225 , then the total time length for the whole baking process is @xmath234 .",
    "this subsection combines two methods , the principle of mathematical induction and the reductio ad absurdum , to do the computability proof for problem p@xmath21 .",
    "[ th5 ] for problem p@xmath21 , suppose in the scheduling @xmath235 achieved by algorithm a@xmath21 , the starting times of the items in the baking sequence are @xmath236 , then for any feasible scheduling @xmath237 that @xmath238 , there must be @xmath239 .    the proof is mainly based on the principle of mathematical induction :    for @xmath162=1 , @xmath240,@xmath241 , so @xmath242 .",
    "suppose for any given @xmath162 @xmath243 , @xmath244 , and we need to prove @xmath245 .",
    "now we prove it by contradiction and assume @xmath246 .",
    "@xmath181 @xmath247,@xmath248    @xmath103 for both @xmath235 and @xmath237 , any item in @xmath249 has been baked or is baking in the container at time @xmath250 .",
    "@xmath181 @xmath251    @xmath103 @xmath252    that is to say , for any item @xmath8 @xmath253 , its leaving time in @xmath235 is less than or equal to that in @xmath237 .",
    "@xmath103 at time @xmath250 , the remaining items of @xmath254 in the container for @xmath235 are also the remaining items of @xmath254 in the container for @xmath237 .",
    "@xmath103 at time @xmath250 , for items @xmath254 , the remaining item set @xmath158 for @xmath235 , is a subset of the remaining item set @xmath255 for @xmath237 .    according to the assumption , at time",
    "@xmath250 , item @xmath208 is placed into the container in @xmath237 , but it can not be placed into the container in @xmath235 .",
    "it indicates that , at time @xmath250 , another schedule can place @xmath256 into the container while a@xmath21 can not place @xmath257 into the container , and @xmath258 .",
    "this is contradict with theorem [ th4 ] that a@xmath20 can solve problem p@xmath20 to optimality by finite operations .",
    "@xmath259 .",
    "according to ( 1 ) and ( 2 ) , @xmath239 .",
    "theorem [ th5 ] is proved .",
    "[ th6 ] the scheduling result achieved by algorithm a@xmath21 is an optimal solution for problem p@xmath260 .    for any feasible schedule @xmath238",
    ", we may assume @xmath261 , or else we can delete @xmath262 to get a shorter schedule .    according to theorem [ th5 ] ,",
    "for the schedule @xmath236 achieved by a@xmath21 and any feasible schedule @xmath238 , there must be @xmath239 .",
    "@xmath103 @xmath263 .",
    "@xmath103 max(@xmath264)@xmath265 max(@xmath266 )    @xmath181 min(@xmath267,@xmath268, ... ,@xmath269)=min(@xmath270,@xmath271, ... ,@xmath272)=0    @xmath103 the makespan achieved by a@xmath21 is less than or equal to that of any feasible schedule .",
    "so the schedule achieved by a@xmath21 is optimal .",
    "theorem [ th6 ] is proved .",
    "[ th7 ] the four - dimensional packing and scheduling problem with order constraints , problem p@xmath273 , is weak computable .",
    "first , we prove that algorithm a@xmath274 can finish the computation in finite steps :    the scheduling process of a@xmath21 is as shown in fig .",
    "[ fig3 ] . at the end of each beat",
    ", at least one item will complete its baking work . as the number of items to be baked is finite",
    ", algorithm a@xmath21 can reach @xmath233 in finite beats .    for each time @xmath216 in @xmath275",
    ", a@xmath21 has a maximum @xmath217 set and the corresponding layout by calling a@xmath20 finitely . and",
    "according to theorem [ th4 ] , a@xmath20 can exactly solve p@xmath20 by finite operations .",
    "so , the computation for each time @xmath216 can finish by finite operations .",
    "therefore , algorithm a@xmath274 can reach @xmath233 by finite operations .    at time @xmath233 , the remaining items in the container is finite , @xmath276 can be obtained by finite operations .    in summary ,",
    "algorithm a@xmath21 can finish its computation by finite operations .    then according to theorem [ th6 ]",
    ", algorithm a@xmath21 can exactly solve problem p@xmath21 by finite operations .",
    "so , problem p@xmath21 is weak computable .",
    "theorem [ th7 ] is proved .",
    "based on above proofs , we can prove the weak computability of the original problem p@xmath22 in this section .",
    "[ th8 ] the original four - dimensional packing and scheduling problem , problem p@xmath277 , is weak computable .",
    "first , design algorithm a@xmath22 as follows :    enumerate all the permutations of the items . and",
    "for each permutation , start from time 0 and solve problem p@xmath21 by a@xmath21 .",
    "according to theorem [ th7 ] , we can achieve an optimal schedule for the current permutation in finite operations . then , output the one with the minimum makespan among all solutions for different permutations .",
    "second , prove that the scheduling result obtained by a@xmath22 is optimal :    let @xmath278 be the scheduling result obtained by a@xmath22 , and let @xmath279 be any feasible schedule for p@xmath22 .    as naturally there exists a baking sequence for @xmath279 , and a@xmath280",
    "has enumerated the corresponding sequence and has obtained an optimal schedule @xmath281 for this sequence , so the makespan of @xmath281 @xmath282 the makespan of @xmath279 .    as @xmath278 has the minimum makespan among all permutations , so the makespan of @xmath278@xmath282 the makespan of @xmath281 .    in summary ,",
    "the makespan of @xmath278 @xmath282 the makespan of @xmath279 .",
    "therefore , the scheduling result obtained by a@xmath22 is optimal .    as the number of all different permutations for finite items is finite",
    ", a@xmath22 can complete the computation in finite operations and obtain an optimal schedule for problem p@xmath22 .",
    "therefore , problem p@xmath22 is weak computable .",
    "theorem [ th8 ] is proved .",
    "we present a four - dimensional packing and scheduling problem in this paper , which has a significant scientific value and finds many practical applications .",
    "it is neither a three - dimensional packing problem nor a four - dimensional packing problem , but an a valuable expansion of the packing problem .",
    "we further discuss a natural and general case of this problem that all parameters are real numbers , and prove its weak computability .",
    "first , we prove that the cuboid packing decision problem with real parameters is weak computable . based on the proof",
    ", we then prove that the four - dimensional packing and scheduling problem is weak computable , indicating that there exists an exact and deterministic algorithm that could solve the problem by finite operations .",
    "although this algorithm has too high complexity to be practical , it builds a firm footstone for the future work on approximate approaches .                  , _ online scheduling of parallel jobs on hypercubes : maximizing the throughput _ , in proceedings of the parallel processing and applied mathematics ( ppam09 ) , part ii , springer , lncs 6068 , 2010 , pp . 5261 .",
    ", _ on a theory of computation and complexity over the real numbers : np - completeness , recursive functions and universal machines _ , bulletin ( new series ) of the american mathematical society , 21(1989 ) , pp ."
  ],
  "abstract_text": [
    "<S> this paper formally proposes a problem about the efficient utilization of the four dimensional space - time . </S>",
    "<S> given a cuboid container , a finite number of rigid cuboid items , and the time length that each item should be continuous baked in the container , the problem asks to arrange the starting time for each item being placed into the container and to arrange the position and orientation for each item at each instant during its continuous baking period such that the total time length the container be utilized is as short as possible . here </S>",
    "<S> all side dimensions of the container and of the items are positive real numbers arbitrarily given </S>",
    "<S> . differs from the classical packing problems , the position and orientation of each item in the container could be changed over time . </S>",
    "<S> therefore , according to above mathematical model , the four - dimensional space - time can be utilized more truly and more fully . </S>",
    "<S> this paper then proves that there exists an exact algorithm that could solve the problem by finite operations , so we say this problem is weak computable . based on the understanding of this computability proof , it is expected to design effective approximate algorithms in the near future . </S>",
    "<S> a piggyback work completed is a strict proof on the weak computability over general and natural case of the three - dimensional cuboid packing decision problem that all parameters are positive real numbers .    </S>",
    "<S> rectangle packing , four - dimensional space - time , scheduling , computability , real numbers    03d15 , 03d78,52c17,90b35 </S>"
  ]
}
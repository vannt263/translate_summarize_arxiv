{
  "article_text": [
    "the idea to build a device capable `` to compute all that can be computed '' had emerged a long time .",
    "one can remember blaise pascal s arithmetic machine , gottfried wilhelm leibniz s stepped reckoner , charles babbage s difference engine and his analytical engine @xcite . but",
    "only in the thirties of last century , alonzo church @xcite , alan mathison turing @xcite , and emil leon post @xcite built mathematical models of the computational processes .",
    "although these models have different shapes each of them describes inherently the same class of processes .",
    "the equivalence of the turing s model and the church s model , for example , was proved by a.m. turing in 1937 @xcite . in the late forties , hardware implementations of a universal computational system",
    "were developed and began to be used .",
    "they are known now as computers .",
    "the practice of using computers to solve real problems showed that besides answering the question `` can the problem be solved using computer ? '' , an answer to the question `` do we have enough computational resources to solve the problem ? '' is important too .",
    "searches for methods to evaluate computational resources for computer - assisted problem solving led to the special scientific area which is called theory of computational complexity ( the brief historical overview one can see in @xcite ) .",
    "unfortunately , most important computational problems are complex ones . in compliance with the generally accepted propositions of theoretical computing science the application field of classical computers , i.e. hardware implementations of the universal turing machine concept , is physically challenged by problems which have polynomial computational complexity .    however , modern science , technique , and technology are in need of methods to solve problems whose complexity is higher than polynomial .",
    "this situation stimulates research of non - classical approaches to computing , and quantum computing is one of these .",
    "the idea to use quantum systems as computing devices appeared in the early eighties of the twentieth century .",
    "the idea s authors considered it as a way to overcome computational complexity . in the context yuri ivanovitch manin s monograph @xcite and richard phillips feynman s paper @xcite should be noted .",
    "considering the possibility of using quantum machines for solving complex problems of simulation yu.i .",
    "manin wrote ( cited by @xcite ) : ``  we need a mathematical theory of quantum automata .",
    "such a theory would provide us with mathematical models of deterministic processes with quite unusual properties .",
    "one reason for this is that the quantum state space has far greater capacity then the classical one : for a classical system with @xmath0 states , its quantum version allowing superposition ( entanglement ) accommodates @xmath1 states '' . in @xcite , yu.i .",
    "manin also sets requirements to the mathematical theory of quantum automata : `` the first difficulty we must overcome is the choice of the correct balance between the mathematical and the physical principles .",
    "the quantum automaton has to be an abstract one : its mathematical model must appeal only to the general principles of quantum physics , without prescribing a physical implementation",
    ". then the model of evolution is the unitary rotation in a finite dimensional hilbert space , and the decomposition of the system into its virtual parts corresponds to the tensor product decomposition of the state space ( ' ' quantum entanglement `` ) .",
    "somewhere in this picture we must accommodate interaction , which is described by density matrices and probabilities '' .",
    "feynman had a similar opinion @xcite .",
    "this paper is an attempt to construct a mathematical model of quantum automata that fulfils requirements formulated by yu.i .",
    "in this section a mathematical model of a classical computational system is considered .",
    "the approach was proposed by a.n .",
    "kolmogorov and v.a .",
    "uspensky @xcite .",
    "theory of abstract state machine ( asm ) is the further development of the approach @xcite .",
    "[ dfn::algorithm ] let @xmath2 denotes an * algorithm*. it is determined by    * a set @xmath3 of states ; * a subset @xmath4 of @xmath3 which elements are called * initial * states ; * a subset @xmath5 of @xmath3 which elements are called * terminal * states ; * a map @xmath6 which defines one step of the computational process ;    and the next condition @xmath7    note that elements of the set @xmath3 correspond to complete state descriptions of the computational process which is defined by the algorithm @xmath2 .",
    "[ dfn::run ] let @xmath2 be an algorithm then a partial map @xmath8 and @xmath9 by @xmath10 a partial map from @xmath11 into @xmath9 is denoted . for @xmath12 by @xmath13 the clause `` @xmath14",
    "is defined '' is denoted . ]",
    "is called a * run * of the algorithm if it satisfies the following conditions    * @xmath15 * if @xmath16 for some @xmath17 then @xmath18 for all @xmath19 such that @xmath20 * if @xmath21 for some @xmath17 then @xmath22 ; * if @xmath23 then @xmath24 .    from this definition",
    "it follows immediately that the domain of an arbitrary run is the set @xmath25 or some set @xmath26 , where @xmath27 is a non - negative integer .    in the first case",
    "the algorithm * diverges * on the initial state @xmath28 ( this is denoted by @xmath29 ) .    in the second case",
    "the algorithm * converges * on the initial state @xmath28 to @xmath30(this is denoted by @xmath31 ) .",
    "let s refine the definition [ dfn::algorithm ] and definition [ dfn::run ] for such algorithms that have sets of states with some special structure .",
    "let s start refining with the following auxiliary definitions .",
    "let @xmath32 and @xmath33 be finite sets of nodes and arcs respectively , @xmath34 and @xmath35 be a maps that associate with arcs their initial and terminal nodes respectively , then the tuple @xmath36 is called a * directed multigraph*.    let @xmath37 be a directed multigraph , then an alternating sequence @xmath38 of nodes and arcs , beginning and ending with a node , is called a * walk * if for all @xmath39 the next condition holds : @xmath40 and @xmath41 .    in this case we shall use the notation : @xmath42 .",
    "let @xmath43 be a walk in the directed multigraph @xmath37 and @xmath44 be its node , then we shall say that    * @xmath44 is the * initial node * of @xmath45 ( it is denoted by @xmath46 ) if @xmath47 ; * @xmath44 is the * terminal node * of @xmath45 ( it is denoted by @xmath48 ) if @xmath49 ; * @xmath45 * traverses * @xmath44 if for some @xmath50 the equality @xmath51 holds .",
    "let @xmath52 be a tuple such that the tuple@xmath36 is a directed multigraph , @xmath53 is a fixed node ( it is called the initial node ) , @xmath54 is a fixed subset of nodes(its elements are called terminal nodes ) .",
    "the tuple is called a * control graph * if the next conditions hold :    * @xmath55 ; * for each @xmath56 there is no arc with initial node equals @xmath44 ; * for each node @xmath44 there is a walk such that its initial node equals @xmath53 , its terminal node belongs to @xmath54 , and it traverses @xmath44 .    note that for the control graph @xmath52 and each @xmath57 the set @xmath58 is not empty .    let s assume that for an arbitrary algorithm @xmath2 the set of states has the next structure @xmath59 where @xmath60 is the nodes set of some control graph @xmath61 and @xmath62 is some set of memory snapshots .",
    "in this case suppose that the set of initial states is the next set @xmath63 and the set of terminal states is the following set @xmath64 .",
    "this supposition leads us to the next representation of the map @xmath65 : @xmath66    suppose now that the map @xmath67 has property of locality .",
    "it means that for each @xmath68 there exists a map @xmath69 and for each @xmath70 is denoted the set of arcs for the control graph @xmath61 .",
    "] there exists a map @xmath71 such that the following equalities are true : @xmath72    from ( [ eqn::tau1 ] ) , ( [ eqn::sigma ] ) , and ( [ eqn::gamma ] ) it follows @xmath73    therefore , we can consider the computational process which is determined by the algorithm @xmath2 as a sequence of steps .",
    "each step begins when the current state is described by some control graph node @xmath44 and a memory snapshot @xmath74 .",
    "then the map @xmath75 chooses the arc @xmath76 outgoing from the node @xmath44 depending on the snapshot @xmath74 . finally , using the selected arc and the memory snapshot the new control graph node and the new memory snapshot are determined in compliance with ( [ eqn::tau2 ] ) .",
    "let s modify the computational model by rejecting the assumption about determinacy for the choosing process .",
    "definition [ dfn::asmr ] describes this modification formally .",
    "[ dfn::asmr ] let @xmath77 be a control graph , @xmath78 be some set of memory snapshots , @xmath79 be a family of probability distributions on @xmath33 , and @xmath80 be a family of maps from @xmath78 into itself then the tuple @xmath81 is called an * abstract state machine with stochastic behaviour * if the following condition holds @xmath82    dynamics of such machines is determined by the next definition .",
    "[ dfn::rrun ] let @xmath81 be an abstract state machine with stochastic behaviour , @xmath77 be its control graph then a partial map @xmath83 is called a * run * of the machine if it satisfies the following conditions    * @xmath84 ; * if @xmath16 for some @xmath17 then @xmath18 for all @xmath19 such that @xmath85 ; * if @xmath86 for some @xmath17 and @xmath87 then there exists @xmath88 such that @xmath89 , @xmath90 , and @xmath91 ; * if @xmath92 for @xmath56 and @xmath93 then @xmath24 .    below such machines",
    "will be generalised for the quantum case .",
    "in the section the model of quantum systems with finite quantity of levels ( finite - level quantum systems ) is described .",
    "it is based on the approaches set forth in the works @xcite .",
    "the postulates of finite - level quantum systems fix basic notions which are used to construct mathematical models for the systems .",
    "* postulate 1 : * an @xmath44-dimensional hilbert space @xmath94 is associated to any quantum physical system with @xmath44 levels .",
    "this space is known as the state space of the system .",
    "the system is completely described by its pure state , which is a one - dimensional subspace of the state space .",
    "this subspace is uniquely represented by the ortho - projector @xmath95 on a vector @xmath96 which generates the subspace .",
    "in contrast to pure states mixed states are used to describe quantum systems whose state is not completely known .",
    "rather more detailed suppose we know that a quantum system is in one of a number of states @xmath97 with respective probabilities @xmath98 .",
    "we shall call @xmath99 an ensemble of pure states .",
    "the density operator for the system is defined by the equation @xmath100    we identify mixed states with density operators . is denoted by @xmath101 evidently , that each density operator is a non - negative defined operator which trace is equal to unit .",
    "it is known that the inverse statement is true : a non - negative defined operator , which trace is equal to unit , is a density operator @xcite .",
    "of course , a one - dimensional ortho - projector is a density operator .",
    "the set of all density operators is convex and its subset of one - dimensional ortho - projectors is the subset of its extreme points @xcite .",
    "this allows to consider pure states as indecomposable states .",
    "* postulate 2 : * the state space of a composite physical system is the tensor product of the state spaces of the component physical systems .",
    "moreover , if we have systems indexed by @xmath102 , and the state of the system with number @xmath103 is described by the density operator @xmath104 , then the joint state of the total system before any interactions is @xmath105 .",
    "* postulate 3 : * the evolution of a closed quantum system is described by a unitary transformation .",
    "that is , the state @xmath95 of the system at time @xmath106 is related to the state @xmath107 of the system at time @xmath108 by a unitary operator @xmath109 which depends only on the times @xmath106 and @xmath108 , @xmath110    if we have an ensemble of pure states of the system which is described by the density operator @xmath111 at time @xmath106 then the density operator @xmath112 of the system at time @xmath108 can be calculated by the formula @xmath113    * postulate 4 : * quantum measurements are described by an indexed finite family @xmath114 of kraus operators , where @xmath115 is a finite set .",
    "these are operators acting on the state space of the system being measured .",
    "the index @xmath116 refers to the measurement outcome that may occur in the experiment .",
    "if the state of the quantum system is described by the density operator @xmath111 immediately before the measurement then the probability that result @xmath116 occurs is given by the following formula the usual operator trace is denoted ] @xmath117 and the state of the system immediately after the measurement is described by the density operator @xmath118}=\\frac{k(x)\\rho k(x)^\\ast}{{\\mathrm{tr}(\\rho k(x)^\\ast k(x))}}\\ ] ] any kraus family @xmath114 satisfies the * completeness condition * @xmath119 which ensures correctness of the definitions given by formulas ( [ frm::prob ] ) and ( [ frm::effect ] ) .",
    "postulate 3 and postulate 4 describe two different ways of changing a system state .",
    "it looks non - naturally .",
    "hence , we can set the problem : find a unified description for evolutions and measurements of a finite - level quantum system .    to solve the problem",
    "let s introduce for a state space @xmath94 of an @xmath44-level quantum system and a finite set @xmath115 operators @xmath120 by the formula @xmath121 where @xmath122 such that @xmath123 .",
    "properties of operators from the family @xmath124 are established by the next proposition , which is proved by the direct calculation .",
    "let @xmath94 be a state space of an @xmath44-level quantum system and @xmath115 be a finite set , then the operators family @xmath124 defined by formula ( [ eqn::jop ] ) satisfies the next identities @xmath125    now using a kraus family @xmath114 for some measurement let s define an operator @xmath126 by the formula @xmath127    [ prp::kraus2iso ] let @xmath114 be a kraus family , and @xmath128 be the operator that is built by the formula ( [ eqn::iso ] ) , then @xmath128 is an isometric operator and the next identities hold for all @xmath129 : @xmath130    let @xmath131 be some orthonormal basis in @xmath94 , then for any @xmath132 from ( [ eqn::iso ] ) we have @xmath133 hence , @xmath134 and @xmath135 therefore , @xmath136 using the completeness condition one can obtain that @xmath137 the last equation ensures that @xmath128 is an isometric operator .",
    "+ equation ( [ eqn::krestore ] ) is proved by the direct calculation : @xmath138 proof is complete    using proposition [ prp::kraus2iso ] one can rewrite formulae ( [ frm::prob ] ) and ( [ frm::effect ] ) in the following way : @xmath139}=\\frac{j(x)^\\ast",
    "w_\\mathcal{k}\\rho w_\\mathcal{k}^\\ast j(x ) }      { { \\mathrm{tr}(\\rho w_\\mathcal{k}^\\ast({\\mathbf{1}}\\otimes{| x\\rangle}{\\langle x |})w_\\mathcal{k } ) } }          \\tag{\\ref{frm::effect}$'$}\\label{frm::eff_bis}\\end{aligned}\\ ] ]    now we claim that this construction can be inverted .    really , let @xmath94 be a state space for an @xmath44-level quantum system , @xmath115 be a finite set of outcomes , and @xmath140 be an isometric operator .",
    "let s define a family @xmath114 of operators on the space @xmath94 by the formula @xmath141    [ prp::iso2kraus ] let @xmath94 be a state space for an @xmath44-level quantum system , @xmath115 be a finite set of outcomes , @xmath140 be an isometric operator , and @xmath114 be the family of operators which is defined by formula ( [ frm::kraus ] ) ; then    1 .",
    "@xmath142 satisfies the completeness condition and , therefore , it is a kraus family ; 2 .",
    "@xmath143 .    to prove the completeness condition let s calculate the left side of ( [ frm::comp ] ) using ( [ frm::prjdelta ] ) and the isometry property @xmath144 to prove the second statement let s calculate using ( [ frm::prjdelta ] ) @xmath145 proof is complete    proposition [ prp::kraus2iso ] and [ prp::iso2kraus ] , formulae ( [ frm::prob_bis ] ) and ( [ frm::eff_bis ] ) substantiate replacing the kraus families by the corresponding isometric operators under studying the interaction of quantum systems with classical systems .",
    "this replacing leads us to unification of postulate 3 and postulate 4 . to stress such unification",
    "we will say that an isomeric operator describes the quantum operation by formulae ( [ frm::prob_bis ] ) and ( [ frm::eff_bis ] ) .",
    "let @xmath94 be a state space of an @xmath44-level quantum system , @xmath115 be a finite set of outcomes , then isometric operators @xmath146 are called equivalent if for all @xmath129 and for any density operator @xmath111 the following equalities are true @xmath147    classes of this equivalence will be called * quantum operations * with a set of outcomes @xmath115 .    easy to see that isometric operators @xmath146 describe the same quantum operation if @xmath148 for any @xmath149 .",
    "we claim that the inverse statement is true too .",
    "[ thr::eqv ] let @xmath94 be a state space of an @xmath44-level quantum system , @xmath115 be a finite set of outcomes , @xmath146 be equivalent isometric operators then @xmath148 for some @xmath149 .",
    "it is evident , that each isometric operator @xmath150 , where @xmath151 , can be represented by the formula @xmath152 where @xmath153 is an orthonormal basis in @xmath94 and @xmath154 for @xmath132 and @xmath129 .",
    "using representation ( [ frm::isovrep ] ) we calculate @xmath155 for @xmath156 where @xmath151 .",
    "@xmath157 using this and identity ( [ frm::probinv ] ) one can derive that for all @xmath132 and @xmath129 the next equality holds @xmath158    let @xmath159 for each @xmath129 and @xmath160 . from ( [ frm::normeqv ] )",
    "it follows that @xmath161 , hence , we can denote this set by @xmath162 .",
    "from ( [ frm::effinv ] ) one can derive that for all @xmath129 and @xmath163 @xmath164 the next equality is obtained by multiplying equality ( [ eqv::temp ] ) from left by @xmath165 and from right by @xmath166 and using equality ( [ frm::normeqv ] ) : @xmath167 ) and ( [ frm::normeqv ] ) it follows that for all @xmath129 and @xmath163 @xmath168    further , from ( [ frm::effinv ] ) it follows that for all @xmath129 and @xmath169 the next equality is true : @xmath170 therefore , @xmath171 and @xmath172 .    in summary",
    ", we obtain the next equality for all @xmath129 and @xmath163 @xmath173 using ( [ eqv::temp2 ] ) for @xmath129 , @xmath163 and the equality @xmath174 for @xmath175 one can get that equality ( [ eqv::temp2 ] ) is true for all @xmath176 .",
    "therefore , @xmath148 for some @xmath149    two isometric operators @xmath146 define the same quantum operation if and only if for some @xmath149 the following equality holds @xmath177",
    "now we describe some class of mathematical models for quantum information processes . this class we call the class of abstract quantum automata .",
    "let @xmath178 be a state space of an @xmath179-level quantum system , and let @xmath77 be a control graph .",
    "suppose that each non - terminal node @xmath44 of the graph @xmath180 is connected with a quantum operation for which @xmath181 is the state space , @xmath182 is the outcomes set , and @xmath183 is an isometric operator describing the operation",
    ". then the tuple @xmath184 is called an * abstract quantum automaton*.    the next definition describes the set of runs for an abstract quantum automaton similarly to definition [ dfn::rrun ] .",
    "let @xmath185 be an abstract quantum automaton where the control graph @xmath180 is equal to @xmath52 .",
    "then a partial map @xmath186 is called a * run * of the automaton if it satisfies the following conditions    * @xmath187 ; * if @xmath16 for some @xmath17 then @xmath18 for all @xmath19 such that @xmath85 ; * if @xmath188 for some @xmath17 and @xmath189 then there exists @xmath88 such that @xmath190 , @xmath90 , and @xmath191}=\\dfrac{j(a)^\\ast w_n\\rho w_n^\\ast j(a)}{{\\mathrm{pr}(a~|~n,\\rho)}}$ ] ; * if @xmath192 for @xmath56 and @xmath193 then @xmath24 .",
    "let s consider a quantum information process which sets a qubit ( 2-level quantum system ) into the state @xmath194 .",
    "evidently , that this problem can not be solved by any unitary transformation .",
    "we shall specify an abstract quantum automaton that does it .",
    "the control graph of the automaton is shown in fig .",
    "[ fig::qucleaner ] .        as one can see @xmath195 .",
    "let s define @xmath196 by the formula @xmath197 further , @xmath198 is a singleton hence @xmath199 .",
    "let s define @xmath200 easy to see that for an arbitrary initial state of a qubit its state after handling by the automaton is equal to @xmath194 .",
    "therefore , we have built the abstract quantum automaton that specifies the process of cleaning a qubit .",
    "this example deals with preparing an entangled pair of qubits .",
    "we shall specify an abstract quantum automaton that does it .",
    "the control graph of the automaton is shown in fig .",
    "[ fig::entanglement ] .",
    "let s define @xmath201 by the formulae @xmath202 and define @xmath203 by the formulae @xmath204 easy to see that for an arbitrary initial state of a qubit pair its state after handling by the automaton is equal to @xmath205 .",
    "these examples demonstrate that modelling of quantum information processes by abstract quantum automata allows to describe processes of initial preparation of a quantum memory for quantum computing devices .      to complete the paper let s consider the quantum teleportation process and let s show that it can be described by an abstract quantum automaton .",
    "quantum teleportation is a process by which a qubit state can be transmitted exactly from one location to another , without the qubit being transmitted through the intervening space .",
    "this phenomenon has been confirmed experimentally @xcite .",
    "the control graph of the automaton is shown in fig .",
    "[ fig::teleportation ] .",
    "let s define @xmath206 , where the first qubit is alice s qubit , the second and the third qubits are the first and the second qubits of the entangled pair respectively , by the formulae @xmath207 further , @xmath208 and the corresponding isometric operator is defined by formulae @xmath209 by direct calculation one can prove that the initial state @xmath210 for an arbitrary @xmath211 is transformed by the automaton into the state @xmath212 .",
    "summarising the above we can conclude :    * our attempt to solve the yu .",
    "manin s problem led us towards the notion of an abstract quantum automaton ; * this notion is based on a computational model known as a machine of a. kolmogorov and v. uspensky ; * abstract quantum automata can be used for formal specification of quantum information processes including non - invertible processes like qubit cleaning , entangled pair preparing and quantum teleportation .",
    "boschi , d. , branca , s. , de martini , f. , hardy , l. , popescu , s. : experimental realization of teleporting an unknown pure quantum state via dual classical and einstein  podolsky  rosen channel .",
    "lett . , 80 , 1121  1125 ( 1998 )"
  ],
  "abstract_text": [
    "<S> the main goal of this paper is to give a rigorous mathematical description of systems for processing quantum information . </S>",
    "<S> to do it authors consider abstract state machines as models of classical computational systems . </S>",
    "<S> this class of machines is refined by introducing constrains on a state structure , namely , it is assumed that state of computational process has two components : a control unit state and a memory state . </S>",
    "<S> then authors modify the class of models by substituting the deterministic evolutionary mechanism for a stochastic evolutionary mechanism . </S>",
    "<S> this approach can be generalized to the quantum case : one can replace transformations of a classical memory with quantum operations on a quantum memory . </S>",
    "<S> hence the authors come to the need to construct a mathematical model of an operation on the quantum memory . </S>",
    "<S> it leads them to the notion of an abstract quantum automaton . </S>",
    "<S> further the authors demonstrate that a quantum teleportation process is described as evolutionary process for some abstract quantum automaton . </S>"
  ]
}
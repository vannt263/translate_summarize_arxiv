{
  "article_text": [
    "the h1 experiment analysed electron - proton data from the hera machine at desy , hamburg . during the luminosity",
    "upgrade at the turn of the millennium , h1 decided to change their analysis framework to an object - oriented paradigm , concentrating on the data storage model  @xcite .",
    "figure @xmath0 shows the old data analysis model of h1 .",
    "the data summary tape ( dst ) fortran data storage format was processed privately by private ntuple production code to produce the analysis data format .",
    "this was usually the hbook format , and physics analysis was performed using paw .",
    "the scope for sharing analysis information was fairly limited , as the variable definitions depended on the privately maintained ntuple production code which varied from group to group .",
    "meanwhile , the private production of ntuples was usually quite inefficient , resulting in many copies of essentially the same data , wasting resources .",
    "the old data analysis model.,scaledwidth=70.0% ]      figure @xmath1 shows the object - oriented data analysis model .",
    "the aim was to centrally produce the analysis data storage format , replacing the custom ntuples used previously .",
    "private ntuple production was not prohibited and was used by some individuals , but the vast majority of the collaboration enjoyed and still enjoys central production of their analysis data format .",
    "the dst remains the source of all derived analysis formats .",
    "the object - oriented data format consists of several layers , and all data storage layers are encapsulated in the h1tree interface .",
    "this object provides smart access to the data , such that the user does nt need to know which layer is accessed .",
    "the object data storage ( ods ) layer is entirely equivalent to the dst , but now track and cluster classes are used for the data representation .",
    "object - oriented bank classes also exist , providing dst , pot and raw data access if and as necessary .",
    "the ods was generally not used for analysis , as the content of the two derived layers described next was usually found to be sufficient . however , it can be produced and stored if necessary ( if the ods content will be repeatedly analysed ) , or created on - the - fly from dst ( more performant for rare access ) .",
    "the new data storage model of h1.,scaledwidth=70.0% ]    particle finders , shown in figure @xmath2 , are used to produce the content stored in the next object - oriented layer , the micro - ods or mods .",
    "the particle - finding algorithms used are the best knowledge of h1 by definition , and thus all analyses use this best knowledge .",
    "event summary information is stored in the third layer , the h1 analysis tag or hat .",
    "together , the mods and hat layers are the analysis data format , centrally produced , for the vast majority of h1 analyses .    a fourth and final optional layer , the usertree , allows ultimate flexibility by allowing a user - defined storage layer . if this layer was found to be useful for several groups , it entered the central production framework and was also centrally maintained .",
    "it s worth noting that there are currently three usertree packages in the core h1oo framework , suggesting that this flexibility was both necessary and useful .",
    "the particle finder model.,scaledwidth=70.0% ]",
    "the original h1oo concept concentrated on unifying the data analysis format and optimising resource usage for it s production , and this was very successful .",
    "however , there were one or two limitations to this model .",
    "chief among these was the lack of treatment of transient data , i.e. quantities calculated or re - calculated at run time .",
    "this was found to be particularly relevant for the evaluation of systematic uncertainties , where derived quantities need to be re - calculated based on a systematically shifted base quantity .",
    "it was also relevant when analysts wanted to apply the latest calibrations on - the - fly , rather than wait for a full - scale production of data and monte carlo .      to address these problems ,",
    "a transient data interface called the h1calculator was designed and implemented  @xcite , as shown in figure @xmath3 .",
    "this reads the persistent data provided by the h1tree , and stores transient derived quantities .",
    "the latest calibration can then be applied easily , and systematic uncertainty evaluation simply requires recalculating the derived quantities .",
    "all data access in user analysis code goes through this interface , guaranteeing a consistent treatment of the data .",
    "the transient data interface , h1calculator.,scaledwidth=70.0% ]    in practice , the scope for derived quantities for all h1 analyses is very large , and the h1calculator is composed of several smaller , themed calculator classes which deal with specific quantities , e.g. one for electron quantities , another for event kinematics .",
    "a generic interface to the data provides access to variables by type ( integer , tlorentzvector , etc . ) , which then allows user classes to be decoupled from the details of this structure .",
    "the main h1calculator class itself then provides a simple interface to variables by integer i d ( the generic interface ) as well as switches to apply calibrations and systematic shifts , as shown in figure @xmath4 .    a more detailed view of the transient data interface.,scaledwidth=70.0% ]",
    "following the generic interface to the transient data , more end - user classes could be defined .",
    "one particular highlight are the event selector classes  @xcite , composed of lists of cut objects .",
    "a cut object returns a boolean answer based either on a variable read from the transient data interface or on a logical combination of other cut objects .",
    "this simple but very useful set of classes is shown in figure @xmath5 .",
    "they also provide detailed debugging information and cutflow statistics .",
    "these classes could be passed from analyst to analyst to apply particular event selections , together with other simple classes responsible for histogram management  @xcite , i.e. classes which book and fill sets of ( related ) histograms .",
    "these simple organisational aides proved to be very useful , not least in the context of data quality and software validation , as well as in physics analysis .",
    "the event selector classes.,scaledwidth=80.0% ]      figure @xmath6 shows a flow diagram of a simplified physics analysis . identifying the h1calculator as `` the event '' , the selector and histogram manager objects are also evident .",
    "two other organisational structures can also be seen , namely at the level of looping over one set of data or monte carlo , where we used the term `` chain '' from paw , and finally the analysis level itself .",
    "flow diagram of physics analysis.,scaledwidth=65.0% ]    correspondingly , analysis and analysischain objects also proved to be useful organisational classes  @xcite . an analysis object is composed of several analysischains , which each contain one or more histogram managers . the event selector is an object defined at the analysis level .",
    "data access goes through the h1calculator .",
    "this simple model is shown in figure @xmath7 and allows a common framework for nearly all stages of a physics analysis .",
    "this in turn allowed better collaboration between physics groups , and the easy exchange of high - level analysis code .",
    "analysis object model.,scaledwidth=60.0% ]",
    "during the luminosity upgrade at the turn of the millennium , h1 decided to change their analysis framework to an object - oriented paradigm , concentrating on the data storage model .",
    "this move was very successful in unifying the data storage model and analysis formats of h1 .",
    "the flexibility to have a user defined data storage layer proved crucial in several analyses .",
    "the development of a transient data interface improved physics analysis in many cases , especially those where access to the latest calibrations was critical and/or complicated systematic effects had to be evaluated .",
    "it paved the way for further developments which allowed for a more efficient exchange of higher - level physics analysis tools , up to and including entire analyses .",
    "the material presented here is the culmination of many years of work by members of the h1 collaboration .",
    "i d like to thank all of those who worked on the h1oo project and in particular my friend and collaborator dave south .",
    "9    u.  berthon , t.  benisch , r.  gerhards , c.  grab , t.  hadig and p.  van mechelen , `` new data analysis environment in h1 , '' t.  benisch , u.  berthon , r.  gerhards , c.  grab and t.  hadig , _",
    "prepared for international conference on computing in high - energy physics and nuclear physics ( chep 2000 ) , padova , italy , 7 - 11 feb 2000 _"
  ],
  "abstract_text": [
    "<S> over a decade ago , the h1 collaboration decided to embrace the object - oriented paradigm and completely redesign its data analysis model and data storage format . </S>",
    "<S> the event data model , based on the root framework , consists of three layers - tracks and calorimeter clusters , identified particles and finally event summary data - with a singleton class providing unified access . </S>",
    "<S> this original solution was then augmented with a fourth layer containing user - defined objects .    </S>",
    "<S> this contribution will summarise the history of the solutions used , from modifications to the original design , to the evolution of the high - level end - user analysis object framework which is used by h1 today . </S>",
    "<S> several important issues are addressed - the portability of expert knowledge to increase the efficiency of data analysis , the flexibility of the framework to incorporate new analyses , the performance and ease of use , and lessons learned for future projects . </S>"
  ]
}
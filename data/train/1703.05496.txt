{
  "article_text": [
    "the use of commodity mobile robots is increasingly replacing human labor in various coordinated tasks .",
    "one of the fundamental problems that need to be addressed for further advancing in this process , is the delivery of data from one location to another . with the density of energy storage being still",
    "perhaps the main technological bottleneck in mobile robots development , the need for energy - efficient operations is a key factor that makes tasks such as data - delivery far from trivial .    in this paper",
    "we deal with the problem of delivering data from a source @xmath2 to a target @xmath3 , by using a set \\{1 , 2 ,  , k } of mobile agents ( robots ) that lie initially at position @xmath5 respectively .",
    "the data are picked up by some agent that arrives to @xmath6 and carried for some distance before being handed over to another agent etc , until some agent with the data reach @xmath3 .",
    "the space where the agents move is modeled by an edge - weighted graph ( whose vertices include @xmath7 ) . a mobile agent can pass from a location ( represented by a vertex ) @xmath8 to a neighboring location @xmath9 , only if it has energy greater than or equal to the amount it will consume to traverse the edge with endpoints @xmath8 and @xmath9 , which is the weight of that edge .",
    "initially , each robot @xmath10 has energy @xmath11 .",
    "we further assume that @xmath12 all agents are of the same type and in particular , all the @xmath13 are equal , @xmath14 each agent is simple - built so that it can be over - handed data at most once and @xmath15 data can travel only on a pre - specified @xmath4 `` secure '' path @xmath16 of the graph @xcite . in this setting , we seek a schedule for agents of minimum initial energy @xmath17 , that deliver the data from @xmath2 to @xmath3 following @xmath16 , where each agent used is being handed data only once .",
    "we refer to this problem as min - range uniform data delivery over a path ( min - ripdd ) ; it is shown np - hard in @xcite . in this paper , we prove a 3-approximation polynomial time algorithm for min - ridd ; to our knowledge this is the first approximation algorithm for this problem",
    ".    * related work : * energy - aware task performing by mobile agents is an emerging research area , in particular with respect to algorithm - theoretical problematics ; see for instance @xcite where self - deployment of agents is investigated in this context . on the contrary ,",
    "problems dealing with minimizing of the total distance run by unlimited ( ie always sufficient ) energy - powered robots are well - studied @xcite .",
    "anaya et al .",
    "@xcite tackle the so - called _ convergecast _ problem , which is a specific variant of aggregation of data initially partitioned into pieces detained by different agents : the latter move over an edge - weighted graph , consuming energy ( within the limit of their initial identical budgets ) equal to the weight of an edge each time they transverse it ; each time they meet , they exchange data , the objective being to have at some point at least one agent disposing all data .",
    "this problem is polynomial for path graphs , but becomes np - hard for trees .",
    "the first results on data delivery for energy - aware mobile agents are shown by chalopin et al . in @xcite",
    "; they give a first formal setting of the problem , they characterize the complexity status for several variants of it and they prove a 2-approximation algorithm for the case of identical energy budgets . in @xcite",
    "the authors they show the np - completeness for the feasibility of data delivery when the graph is a path ; they also prove a pseudo - quasipolynomial algorithm for deciding it .",
    "finally , in a recent paper @xcite batschi et al .",
    "show a polynomial algorithm for data delivery in the case where the agents have to return to their respective initial positions and the underlying graph is a tree .",
    "the paper is organized as follows . in section 2",
    "we give some definitions and notations necessary to introduce a formal setting for data delivery problems , which are presented in section 3 .",
    "section 4 is devoted to the presentation of our results .",
    "finally , the last section outlines some interesting question for future work in this vein .",
    "let @xmath18 be a simple finite graph without loops with vertex set @xmath19 and edge set @xmath20 ( denoted also by @xmath21 and @xmath22 , respectively ) .",
    "we denote @xmath23 by @xmath24 and @xmath25 by @xmath26 . an edge from @xmath27 to @xmath28",
    "will be denoted by @xmath29 ; if @xmath1 is non - directed , @xmath29 and @xmath30 will be used without distinction to denote the edge between @xmath27 and @xmath28 . for @xmath31 , @xmath32 and @xmath33 ; the subgraph of @xmath1 induced by @xmath34 ie @xmath35 will be denoted by @xmath36 $ ] .",
    "+ we use the standard convention of denoting vectors of any kind by characters in boldface .",
    "let @xmath37 and @xmath38 be vectors of @xmath39 components . then",
    ": @xmath40 is obtained by replacing in @xmath41 the component @xmath42 by @xmath43 ; we also write @xmath44 whenever @xmath45 it is @xmath46 .",
    "a data delivery model @xmath47 is a tuple @xmath48 where + -@xmath1 is a non - directed simple graph , + -@xmath49 is a function @xmath50 with @xmath51 , + -@xmath52 , + -@xmath0 is a positive integer @xmath53 and + -@xmath54 .",
    "[ feasibility ] we say that a data delivery model @xmath55 is _ feasible _ iff there is a feasibility suite , ie a suite @xmath56 such that + -@xmath57 + -for @xmath58 it is @xmath59 + -@xmath60 belong to the same connected component in @xmath61 $ ] and + -@xmath62 +    a data delivery model can be interpreted intuitively as a situation where @xmath0 agents @xmath63 that can move over the vertex set of a graph @xmath1 through its edges , are initially located at vertices @xmath64 , respectively . they have to collect data from the locations ( vertices ) of @xmath65 and transfer them to the ones of @xmath66 .",
    "they have an initial energy budget @xmath67 , respectively .",
    "whenever an agent traverses an edge @xmath29 , it consumes energy equal to @xmath68 ; thus , any agent in order to be able to move over an edge , must have adequate energy and if it lies in a position @xmath27 having no more energy enough to traverse any edge @xmath29 , then it s left `` dead '' on @xmath27 .",
    "agents move in a synchronous mode by steps from a set of positions ( vertices ) to a neighboring and attainable one ( given their respective energies ) , and they can exchange data with eachother whenever they are on a same position @xmath27 during some step",
    ". non - weighted data delivery models , ie with @xmath69 can be used to model a relaxation of the above - described situation , namely the case where agents can also partially traverse edges ( to the extend allowed by their available energy budgets ) and meet along edges .",
    "indeed , to do so one has to transform @xmath70 in the following manner : first , contract all edges @xmath71 for which @xmath72 ; then , replace any edge @xmath30 with @xmath73 by a @xmath74 path of @xmath75 edges .",
    "finally , put @xmath76 for all edges @xmath77 in the newly obtained graph @xmath78 .",
    "in this section we further refine the formal models introduced above .",
    "the data delivery ( dd ) problem is to decide , given a @xmath47 , whether it is feasible .",
    "in the sequel , we deal with the case where @xmath65 and @xmath66 are singletons ( noted by @xmath2 and @xmath3 , respectively ) . under this assumption",
    ", we study variants of the data delivery problem defined below :    let @xmath79 be a data delivery model with @xmath80 . the min - range uniform data delivery ( min - rudd ) problem is to find the least @xmath81 for which @xmath82 becomes feasible .",
    "+ the min - range identical data delivery ( min - ridd ) problem is the special case of min - rudd where @xmath83 .",
    "a data delivery model is _ feasible over a fixed @xmath84 path @xmath16 _ iff it is feasible and @xmath61 $ ] contains @xmath16 .",
    "we define then , in a similar way as previously done , the following problems :    given @xmath79 and @xmath16 an @xmath4path on @xmath1 , the + data delivery over a path ( pdd ) problem is to decide whether @xmath85 is feasible over @xmath86 .",
    "+ if @xmath80 , the min - range uniform data delivery over a path + ( min - rupdd ) is to find the least @xmath81 for which @xmath82 becomes feasible over @xmath86 ( the special case of @xmath83 is called min - range identical data delivery over a path ( min - ripdd ) problem ) .    for the sake of completeness we mention the following important theorem :    @xcite + 1.dd and pdd are @xmath87complete .",
    "min - ripdd is @xmath87hard .",
    "the min - ripdd problem with at most one hand - over per agent may also be defined in a more straight - forward manner : + let @xmath18 be a weighted connected graph , @xmath16 an @xmath4 path in @xmath1 , @xmath88 . find paths @xmath89 in @xmath1 such that :    * every @xmath90 has an endpoint in @xmath91 ; * @xmath92 contain @xmath16 and every @xmath90 contains at most one connected component of @xmath16 ; * the length of the longest @xmath90 is minimum .    for this problem , the first intuitive idea may be the following nave algorithm .",
    "* input : * @xmath93 as above . + * output : * a feasible range @xmath94 .",
    "vertex spoint ; robot crobot ; set of agents @xmath95 ; array of integers indexed by @xmath96 $ ] ; + spoint@xmath97 ; @xmath98 ; @xmath99\\leftarrow 0 $ ] ; + @xmath100 * do *  @xmath101crobot@xmath102\\right\\ } $ ] ;    @xmath103 ;    @xmath104\\leftarrow r[\\text{crobot}]+p+1 $ ] ;    @xmath105 ;    @xmath101spoint@xmath106 the next vertex on @xmath16 ; ;    @xmath107 $ ] .",
    "greedy@xmath108 has approximation ratio @xmath109    * proof . *",
    "consider the instance of the figure [ bigr1 ] below :    assume that @xmath110 .",
    "let @xmath111 be the total weight of @xmath16 .",
    "greedy@xmath108 will fetch agent @xmath112 to @xmath113 , for @xmath114 , leaving @xmath115 to walk through the remaining @xmath116 edges of @xmath16 to reach @xmath3 .",
    "the optimal will take @xmath112 at @xmath117 , with consecutive @xmath117s being distant @xmath118 to eachother .",
    "so the ratio would be , by this case , @xmath119 , which tends to @xmath120 for @xmath121 and large @xmath111 .",
    "taking @xmath122 in an unweighted graph , would give + ratio @xmath123 which is greater than but tends asymptotically to @xmath124 .",
    "@xmath125      greedy@xmath108 can be further generalized to the following algorithm :    * input : * integer @xmath126 where @xmath111 is @xmath16 s length , and @xmath93 as above . + * output : * a feasible range @xmath94 .",
    "vertex spoint ; robot crobot ; set of robots @xmath95 ; array of integers indexed by @xmath96 $ ] ; + spoint@xmath97 ; @xmath98 ; @xmath99\\leftarrow 0 $ ] ; + @xmath100 * do *    @xmath101crobot@xmath102\\right\\ } $ ] ;    @xmath103 ;    * if * ( spoint@xmath127 and @xmath128 ) * then * @xmath129 * else * @xmath130 ;    @xmath104\\leftarrow r[\\text{crobot}]+p+b$ ] ;    @xmath105 ;    @xmath101spoint@xmath106 the vertex reached after having walked @xmath9 on @xmath16 ; ; + @xmath107 $ ] .",
    "greedy@xmath131 has approximation ratio @xmath132    * proof . *",
    "consider the instance of the figure [ bigr2 ] below .",
    "we assume that @xmath111 is the total weight of @xmath16,@xmath133 and @xmath0 odd , which is slightly more complicated .",
    "the optimal solution is to fetch agent @xmath134 to @xmath135 , then for @xmath136 agent @xmath137 to selection point @xmath113 , agent @xmath138 to @xmath138 , and finally for @xmath139 agent @xmath140 ; this gives @xmath141 .",
    "+ greedy@xmath131 could fetch @xmath142 to @xmath135 ( since ties break arbitrarily ) .",
    "for all @xmath143 , agent @xmath144 reaches @xmath113 and at this point @xmath112 could be chosen as a best candidate .",
    "notice now that , from @xmath145 to @xmath0 , for @xmath146 is the best candidate but with an augmenting overhead that achieves its maximum at the last part of the path ; thus greedy@xmath131 would return @xmath147 which bounds the ratio from below to @xmath148 as claimed.@xmath149    notice that for @xmath121 , greedy@xmath131 does not seem to perform significantly better than greedy@xmath108 .      given that the reason for greedy@xmath150 s not yieldig",
    "a constant ratio seems to be the short - sighted way a best candidate is chosen to be fetched at each selection point , a natural idea would be to improve this by assigning best candidates through a best matching between robots and selection points .",
    "indeed , one can form a complete weighted bipartite graph @xmath151 as follows :    * @xmath152 , * @xmath153 for some @xmath154 with + @xmath155-distant from @xmath135 and for @xmath156-distant from @xmath157 , * @xmath158 the length of a shortest path @xmath159 in @xmath1 .",
    "then a maximal matching @xmath160 of minimum maximum weight edge in @xmath151 can be computed easily at the cost of @xmath161 matchings , by repeatedly searching for a maximal matching in @xmath151 after removal of the maximum weight edges",
    ".    such a preprocessing would provide with a best candidate to fetch at each @xmath113 and the algorithm * matching@xmath162 * would be like greedy@xmath150 , except for the line    * crobot @xmath163\\right\\ } $ ] ; * that should be replaced by * crobot@xmath164\\right\\ } $ ] .",
    "finally , the algorithm * matching * could return the best of solutions of all * matching*@xmath162 , having tried all @xmath165s .",
    "then , the following theorem holds :    * matching * is a @xmath166 approximation algorithm for min - ripdd .",
    "* proof * let the optimal solution , of value @xmath167 , be the solution that fetches @xmath168 to the selection points @xmath169 , respectively .",
    "let @xmath170 and @xmath171 .",
    "obviously , we have :    @xmath172    consider now the selection points @xmath173 of the solution provided by * matching*@xmath174 .",
    "as a direct consequence of the dirichlet s box principle , there is at least one selection point of the optimal in the vertices of each part @xmath175 of @xmath16 with endpoints @xmath176 and the vertex before @xmath177 for @xmath178 ( plus the last part with endpoints @xmath179 ) .",
    "let @xmath180 be the selection point of the optimal of the smallest index that belongs to the vertices of @xmath175 , and let @xmath181 be the agent that the optimal fetches to this selection point",
    ". then @xmath182 ( [ eq3 ] ) holds also for the @xmath10 that maximizes @xmath183 ; but this value is greater than or equal to the maximum value of @xmath184 , @xmath185 .",
    "thus , @xmath186 notice finally , that the value @xmath94 of the solution returned by the algorithm * matching * is greater than or equal to the one of * matching*@xmath187 , ie @xmath188 so , @xmath189 @xmath149",
    "in this paper we have shown the first - to our knowledge - polynomial time approximation algorithm for the data delivery problem over a fixed path in a graph performed by mobile agents with identical initial energy budgets and allowing single data hand - overs .",
    "our algorithm generalizes to the case where multiple data hand - overs are allowed , ie whenever an agent that has already carried the data over a part of the path is allowed to hop ( following an alternative route ) and re - reach the path to carry again the data for a second part of it ( given that it still has the energy needed to do so ) .",
    "devising exact polynomial algorithms for special graph topologies like the grid is also an interesting open problem ; we believe that this variant of data delivery remains difficult for some intuitive special cases of the latter .",
    "a. bartschi , j. chalopin , s. das , y. disser , b. geissmann , d. graf , a. labourel , m. mihalak .",
    "_ collaborative delivery with energy - constrained mobile robots .",
    "_ proceeding of the 233rd international colloquium , sirocco 2016 , helsinki , finland , july 19 - 21 , 2016 .",
    "lncs 9988 , pp .",
    "258 - 274 , ( 2016 )    j. chalopin , r. jacob , m. mihalk , p. widmayer .",
    "_ data delivery by energy - constrained mobile agents on a line .",
    "_ in the 41st international colloquium , icalp 2014 , copenhagen denmark , jully 8 - 11 , 2014 .",
    "proceedings , part ii .",
    "lncs 8573 , pp .",
    "423 - 434 , springer ( 2014 )    j. chalopin , s. das , m. mihalk , p. penna , p. widmayer .",
    "_ data delivery by energy - constrained mobile agents .",
    "_ algosensor 2013 , sophia antipolis , france , september 5 - 6 , 2013 , .",
    "lncs 8243 , pp .",
    "423 - 434 , springer ( 2014 )"
  ],
  "abstract_text": [
    "<S> we consider @xmath0 mobile agents of limited energy that are initially located at vertices of an edge - weighted graph @xmath1 and have to collectively deliver data from a source vertex @xmath2 to a target vertex @xmath3 . </S>",
    "<S> the data are to be collected by an agent reaching @xmath2 , who can carry and then hand them over another agent etc . </S>",
    "<S> , until some agent with the data reaches @xmath3 . </S>",
    "<S> the data can be carried only over a fixed @xmath4 path of @xmath1 ; each agent has an initial energy budget and each time it passes an edge , it consumes the edge s weight in energy units and stalls if its energy is not anymore sufficient to move . </S>",
    "<S> the main result of this paper is a 3-approximation polynomial time algorithm for the data delivery problem over a fixed @xmath4 path in the graph , for identical initial energy budgets and at most one allowed data hand - over per agent .    </S>",
    "<S> mobile agents and robots , data delivery , energy - awareness , approximation algorithms </S>"
  ]
}
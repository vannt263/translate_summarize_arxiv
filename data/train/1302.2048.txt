{
  "article_text": [
    "steganography is the art of transmitting information in secret , so that even the existence of communication is hidden .",
    "it is realized by embedding the messages to be protected into innocuous cover objects such as digital images . in order to minimize the possibility of being detected by third parties ,",
    "the number of embedding changes in the cover must be small enough .",
    "consequently , to obtain a high payload , steganographers should design stegosystems able to embed as much information as possible per cover change .",
    "in other words , we seek for embedding methods giving high embedding efficiency .",
    "+ given a cover image and a secret message , we first select the placement and intensity of allowed embedding changes in the cover .",
    "this is done by means of a _",
    "selection rule_. after this step the cover is transformed into a finite sequence @xmath0 of symbols from an alphabet @xmath1 ( usually @xmath2 ) .",
    "we refer to this sequence as the _ cover vector _ @xmath3 . the secret message will be also a vector @xmath4 .",
    "the algorithms used for embedding the information @xmath5 into @xmath6 and later recovering @xmath5 from @xmath7)form the _ stegoscheme _ associated to the stegosystem .",
    "+ crandall first noted that error correcting codes can be used to construct stegoschemes of high embedding efficiency . from this discovering many stegoschemes have been proposed using different types of codes .",
    "relations between codes and stegoschemes will be treated in more detail in section [ codsteg ] . in general , in code based steganography ( also called _ matrix embedding _ ) , given a code @xmath8 ( or a family of such codes , as explained below ) , the embedding is realized by using a decoding map of @xmath8 .",
    "it turns out that every decoding map of @xmath8 provides a realization of it as a stegoscheme .",
    "this nice idea encountered in practice a serious problem : the absence of effective complete decoding methods .",
    "indeed , for nearly all currently known decoding algorithms , most errors are impossible to decode , which means that when using these algorithms , the majority of times the embedding process fails .",
    "in contrast , complete decoding algorithms , for which this problem does not occur , are computationally infeasible , so their practical applications are reduced to either perfect codes or codes of small length , which offer low embedding efficiency .",
    "+ in this paper we propose a novel method to ensure embedding success , in principle for using any code .",
    "it is based on puncturing the original code as many times as necessary to get a new code whose covering radius equals to the correction capability of the original one .",
    "as we shall see , this method may also improve the embedding efficiency so that it guaranties embedding success and may give high embedding efficiency .",
    "+ the organization of the paper is as follows . in section [ codsteg ]",
    "we recall the connection between coding theory and steganography , as well as we point the above mentioned drawback of stegoschemes obtained by this method , concerning decoding maps .",
    "our method is exposed in detail in section 3 .",
    "finally section 4 deals to the parameters of the new stegoschemes .",
    "some numerical experiments concerning bch codes are reported .",
    "let @xmath9 be a finite alphabet with @xmath10 elements and let @xmath11 be two positive integers .",
    "the purpose of a stegoscheme @xmath12 is to embed a message @xmath13 into a cover vector @xmath14 , making as few changes as possible in @xmath6 , and later extract the information hidden in the modified vector .",
    "formally , a @xmath15-stegoscheme @xmath12 is defined as a couple of functions @xmath16 @xmath17 such that @xmath18 , for all @xmath19 .",
    "this condition guarantees that we always retrieve the right message @xmath5 from the stego vector @xmath7 .",
    "the stegoscheme is called _ proper _ if @xmath20 for all @xmath21 such that @xmath22 , where @xmath23 stands for the hamming distance .",
    "this means that the number of embedding changes is the minimum possible allowed by the extracting map .",
    "+ the first stegoscheme based on coding theory was proposed by crandall in 1998 , by using the family of binary hamming codes , see  @xcite . let @xmath24 be a positive integer and let @xmath25 be a parity check matrix of the binary hamming code of length @xmath26 .",
    "the embedding and extracting functions are as follows @xmath27 @xmath28 where @xmath29 stands for a _",
    "coset leader _ of @xmath30 .",
    "that is an element of minimum hamming weight among those @xmath31 verifying @xmath32 .",
    "the fact that @xmath18 is straightforward . +",
    "this stegoscheme is so efficient that westfeld developed the famous software f5 based on it  @xcite .",
    "the notion of _ efficiency _ , which is the main subject of this paper , will be detailed in section  [ ssec : efficiency ] .",
    "after crandall s discovery , other authors proposed the same model of stegoscheme , based on different types of codes : bch  @xcite , reed - solomon  @xcite , trellis codes  @xcite , etc . + more generally , in  @xcite it is shown that a @xmath15-stegoscheme is equivalent to a family @xmath33 where the @xmath34 s are nonempty disjoint codes in @xmath35 ( not necessarily linear ) , @xmath36 is a decoding map for @xmath34 and @xmath37 .",
    "let us remember that a _ decoding map _ for a code @xmath38 is just a map @xmath39 .",
    "if @xmath40 then the decoding is said to be _ complete _ ( as every received vector can be decoded ) .",
    "if @xmath41 verifies the additional property that @xmath42 for all @xmath43 , then @xmath41 is called _ minimum distance decoding_. given such a family , the corresponding stegoscheme has embedding and extracting functions @xmath44 if @xmath41 is a minimum distance decoding , then the obtained stegoscheme is proper .",
    "this method allows us to construct a large amount of stegoschemes , to which we collectively refer as _ code - based _ stegoschemes .",
    "if @xmath9 is a field , @xmath45 , and @xmath46 is @xmath47 $ ] linear , it is natural to consider the partition of @xmath48 given by the translates of @xmath46 ( or equivalently , the cosets of @xmath49 ) .",
    "note that given a decoding map @xmath50 of @xmath46 , the function @xmath51 is a decoding map for the translate @xmath52 . by using the systematic writing of @xmath53 , say in the first @xmath54 positions",
    ", we can avoid the need of computing coset leaders in the embedding process ( unless they are required by @xmath55 ) , as @xmath56 , see  @xcite .",
    "the same idea can be applied if @xmath46 is a group ( nonlinear ) code or a general systematic code .",
    "+ therefore , given a linear code @xmath8 , each decoding map of @xmath8 provides a _ realization _ of @xmath8 as stegoscheme .",
    "recall that there is a universal decoding method for linear codes , the so - called _ syndrome - leader decoding _",
    ", based on pre - computing all syndromes and leaders . for example , crandall s stegoscheme is obtained from hamming codes by using syndrome - leader decoding .",
    "the behavior of a stegoscheme , and subsequently the comparison of two of them , is based on its parameters .",
    "let @xmath57 be a @xmath15-stegoscheme which embeds a message of @xmath58 in a vector of @xmath35 with @xmath59 modifications at most and @xmath60 modifications in average .",
    "the _ relative payload , change rate _ and _ average change rate _ of @xmath57 are respectively defined as @xmath61 the _ embedding efficiency _ and _ average embedding efficiency _ of @xmath57 are defined as @xmath62 recall that when @xmath57 is arising from a linear or systematic code @xmath8 ( by the method above explained ) , then @xmath63 is the redundancy of @xmath8 , and @xmath64 are the covering and average radii of @xmath8 , see for example  @xcite",
    ". + let @xmath65 and @xmath66 be two stegoschemes defined over the same alphabet @xmath9 .",
    "if they have the same relative payload , then both embed as much information by using the same quantity of cover - medium .",
    "thus @xmath65 is better than @xmath66 if and only if it produces less distortion in the cover , that is , if and only if the embedding efficiency of @xmath65 is greater than the embedding efficiency of @xmath66 .",
    "so we look for stegoschemes with the biggest embedding efficiency for a fixed relative payload .",
    "there exists an upper on the embedding efficiency for a fixed relative payload as follows .",
    "let @xmath57 be a @xmath10-ary stegoscheme with relative payload @xmath67 and embedding efficiency @xmath68 .",
    "then @xmath69 where @xmath70 is the inverse function of the @xmath10-ary entropy @xmath71",
    ".    see ( * ? ? ?",
    "12 , page 454 ) .",
    "the same result holds asymptotically for the average embedding efficiency .",
    "let @xmath8 be a @xmath72 $ ] linear code over @xmath45 .",
    "as seen in the previous section , each decoding map @xmath41 of @xmath8 provides a realization of @xmath8 as a @xmath15 stegoscheme , @xmath73 .",
    "all of them are different although they share the same theoretical parameters : @xmath74 is the redundancy of @xmath8 , @xmath75 is the covering radius of @xmath8 and @xmath76 is the average radius of @xmath8 .",
    "this method of making stegoschemes has , in practice , a serious difficulty : the dramatic absence of computationally efficient complete decoding maps for a given code .",
    "as already mentioned above , there is a universal complete decoding method for linear codes , namely syndrome - leader decoding . for binary codes we can also use gradient decoding , based on minimal codewords",
    "however , these two methods require the use ( computation and storage ) of tables , usually of a very large size , so they have mainly a theoretical interest , being their practical applications restricted to the case of perfect codes or codes of small length @xmath77 .",
    "note that stegoschemes of high efficiency have large @xmath77 .",
    "algebraic decoding methods ( not based on using tables ) may be computationally efficient , but they are far to be complete ; usually they decode up to the packing radius @xmath78 , where @xmath23 is the minimum distance , or even less .",
    "for example , berlekamp - massey algorithm for decoding for bch codes , decodes errors of weight up to one half of the designed minimum distance . for bch two - error correcting codes ( which are quasi - perfect )",
    "a complete decoding method is available in @xcite by using small tables and these codes have been proposed as good candidates for stegoschemes , see @xcite . for other codes",
    "most vectors can not be decoded . consequently",
    ", most vectors of @xmath35 can not be used as a cover vectors for embedding . remark that when using codes for error - correction , error patterns of low weight are more probable while for embedding purposes all vectors are , in principle , equally likely as covers .",
    "[ exbch ] let @xmath79 be the primitive binary triple error correcting bch code of length @xmath26 .",
    "suppose first we want to decode @xmath8 by using syndrome - leader decoding . to that end",
    "we need a table containing all syndromes and leaders .",
    "since the total number of cosets is @xmath80 , the size of this table , in megabits , is the given in the following table 1 .",
    "@xmath81    it is clear that we need other decoding methods even for small values of @xmath24 .",
    "let us consider the minimum distance decoding map @xmath41 obtained by means of berlekamp - massey algorithm .",
    "it corrects up to 3 errors . since the covering radius of this code is @xmath82 ,",
    "see @xcite , error patterns of weight @xmath83 can occur .",
    "let @xmath84 denote the number of cosets having leaders of weight @xmath85 . since every vector of weight @xmath86 is a coset leader and there are @xmath80 cosets , then the number of cosets whose vectors can not be decoded by @xmath41 is @xmath87 since the leading coefficient of the numerator is @xmath82 , asymptotically @xmath88 of error patterns can not be decoded .",
    "consequently , the stegoscheme based on @xmath89 and @xmath41 , successfully embeds a message into a random cover vector with probability close to @xmath90 .",
    "let us note , however , that it is known a computationally efficient decoding algorithm for @xmath8 , see @xcite .",
    "in fact bch(2 ) and bch(3 ) are the only codes in the family of bch codes for which such a complete decoding is available .    given a @xmath15 stegoscheme @xmath91 ,",
    "the previous considerations allow us to define the _ embedding probability _",
    "@xmath92 of @xmath57 as the probability that @xmath7 can be computed over all possible pairs @xmath93 ( considered as equally likely ) .",
    "we define also the _ embedding efficiency of @xmath57 relative to the embedding probability _",
    "@xmath92 ( resp .",
    "_ average embedding efficiency of @xmath57 relative to the embedding probability _ ) as @xmath94    ( example [ exbch ] continued ) .",
    "let @xmath57 be the stegoscheme obtained from @xmath79 .",
    "the parameters of @xmath57 can be obtained from the parameters of @xmath8 . in particular , @xmath26 , @xmath95 ( the redundancy of @xmath8 ) and @xmath96 ( the covering radius of @xmath8 ) . in the same way",
    ", we can obtain the average change rate @xmath60 of @xmath57 as the average radius of @xmath8 , @xmath97 since the values of @xmath98 and @xmath99 are not known in general , we can not compute exactly this number .",
    "we have the following bounds @xcite @xmath100 @xmath101 the embedding probability can be deduced from our computations in example [ exbch ] , as @xmath102 the following table 2 collects the efficiency and relative efficiency of these stegoschemes for some small values of @xmath24 .    @xmath103",
    "as we highlighted in the previous section , it is important to have a stegoscheme with an embedding probability as close to one as possible . in this section ,",
    "we propose to modify the stegoscheme arising from a given code in order to ensure success ( or at least to improve its probability ) .",
    "let @xmath8 be a @xmath104 $ ] code of covering radius @xmath105 .",
    "let @xmath41 be a decoding map of @xmath8 , which can decode up to @xmath106 errors .",
    "the main idea of our method is to imitate , in a sense , the behavior of perfect codes . to that end",
    ", we will puncture @xmath8 as many times as necessary to obtain a code @xmath107 with covering radius @xmath108 .",
    "then we can use @xmath41 to deduce a decoding map for @xmath107 , as explained in the next paragraph .",
    "let us remember that given a code @xmath8 , _ puncturing _ @xmath8 at a position @xmath109 is to delete the @xmath109-th coordinate in each codeword .",
    "if @xmath110 is a generator matrix for @xmath8 , then a generator matrix for the punctured code is obtained from @xmath110 by deleting column @xmath109 ( and dependent rows if necessary ) , see ( * ? ? ?",
    "1.5.1 ) .",
    "let @xmath8 be a binary linear code and @xmath107 be the code obtained from @xmath8 by puncturing at a set of positions @xmath111 .",
    "let @xmath112 , @xmath113 be the projection on the coordinates of @xmath114 and @xmath41 a decoding map for @xmath8 .",
    "the following algorithm provides a decoding map for @xmath107 .",
    "+    @xmath115 ; + // for @xmath116 elements +    [ prop : correctnesscomplexity ]",
    "the algorithm  [ algo : deccpunct ] is correct and runs in @xmath117 , where @xmath118 is the complexity of @xmath41 the decoding map of @xmath8 .",
    "let @xmath119 and @xmath120 be a codeword such that @xmath121 .",
    "then there exist @xmath122 such that @xmath123 .",
    "let us to note that @xmath124 such that @xmath125 and @xmath126 .",
    "then @xmath127 is in the returned list .",
    "the statement of the complexity is obvious .",
    "if @xmath41 corrects up to @xmath106 errors , the previous algorithm provides a decoding map for @xmath107 correcting @xmath106 errors as well : as the returned list is nonempty , simply take one of the vectors closest to @xmath128 .",
    "note that the statement about complexity in proposition [ prop : correctnesscomplexity ] has been computed considering the worst case . in following ,",
    "we propose a little improvement for the average case .",
    "+ let @xmath119 , @xmath129 , be the vector to be decoded and let @xmath130 be the closest codeword of @xmath128 .",
    "then @xmath131 . let @xmath132 be such that @xmath133 , hence @xmath134 .",
    "there exists a `` prefix '' vector @xmath135 such that @xmath136 , with @xmath137 and @xmath138 .",
    "finally , let @xmath139 such that @xmath140 . as stated before ,",
    "algorithm 1 works by considering all possible prefixes .",
    "however , since @xmath141 , and hence @xmath142 , this algorithm can be slightly changed to avoid unnecessary iterations .",
    "in fact , the minimum number of iterations depends on @xmath143 .",
    "it is simple to see that the number of iterations needed to decode is @xmath144 furthermore , all this iterations should be parallelized to speed up the algorithm . of course , the value @xmath143 is not known a priori , but for each codeword @xmath145 , then distance @xmath146 gives an upper bound to the distance between @xmath147 and the closest codeword @xmath148 .",
    "( continued from previous examples ) .",
    "consider the code bch@xmath149 of parameters @xmath150 $ ] . here",
    "@xmath151 and , as we can see in table  [ tab : pc3bch ] , we get @xmath152 .    .[tab : vect3 ] all binary vectors of length 3 sorted by weights .",
    "[ cols=\"^,^,^,^ \" , ]     let @xmath8 be the binary bch@xmath149 code , @xmath153 be a punctured set and @xmath107 be the punctured code of @xmath8 at the position given by @xmath154 .",
    "we propose to decode on @xmath107 , @xmath155 the received word .",
    "we obtain @xmath156 by the decoding of @xmath157 .",
    "we deduce that @xmath158 is a codeword of @xmath107 .",
    "since @xmath159 , then only @xmath160 decoding calls is needed .",
    "let @xmath161 be the second , and last , virtual received word of @xmath8 . note that the prefix used in this case , @xmath162 , is the farthest from the previous one , that is @xmath163 .",
    "the decoding on @xmath8 gives us @xmath164 , which allows us to compute @xmath165 .",
    "since @xmath166 , we deduce that the closest codeword is @xmath167 . +",
    "another way to see our trick on this example , is after the computation of @xmath168 , we observe that @xmath169 , then the closest codeword from @xmath128 is at most at distance 2 .",
    "since the decoding algorithm on @xmath8 can correct 3 errors , there is an extra error for the prefix set , see table  [ tab : vect3 ] .",
    "thus the decoding with prefix @xmath163 manage the prefix vectors of weight 0 and 1 .",
    "moreover , the decoding with prefix @xmath162 manage the prefix vectors of weight 2 and 3 , so all prefix vectors are managed only by these 2 decodings .",
    "+ with this trick , we need only 2 decoding processes whereas our previous algorithm needs 8 .",
    "since the decoding complexity of the punctured code @xmath107 is exponential on the number of punctured positions , we want to minimize this quantity .",
    "to that end we introduce some new notation . for",
    "a given integer @xmath170 , let @xmath171    [ prop : crpuncturedcode ] let @xmath85 be a positive integer and let @xmath172 be the code obtained by puncturing @xmath8 at the positions of @xmath173 .",
    "the covering radius of @xmath172 satisfies @xmath174    assume there exists @xmath175 such that @xmath176 .",
    "let @xmath177 such that and @xmath178 .",
    "then there exist @xmath179 and @xmath180 such that @xmath181 and @xmath182 since @xmath183 , we have @xmath184 and so @xmath185 , which is impossible by the definition of covering radius .    therefore , greater @xmath85 implies smaller @xmath186 but also greater @xmath187 . for steganographic purposes we must puncture to obtain a code @xmath107 with a covering radius equal to the correction capacity of the decoding map of @xmath8 .",
    "since puncturing @xmath188 times leads to a code of covering radius 0 , this is always possible .",
    "+    @xmath189 ; + @xmath190 ; +    the main drawback of this algorithm is that it could be very expensive in time and memory complexities , since it requires the computation of the whole set of the coset leaders .",
    "note however , that this computation must be done just once for code ( as for any other parameter of @xmath8 ) .",
    "let @xmath8 be a code of covering radius @xmath105 and @xmath41 a decoding map correcting @xmath106 errors .",
    "assume we know the set @xmath154 of positions to obtain @xmath107 , the punctured code of covering radius @xmath106 , which can be computed by using algorithm  [ algo : puncset ] .",
    "moreover let @xmath191 be a decoding map for @xmath107 obtained from algorithm  [ algo : deccpunct ] .",
    "finally , let @xmath192 be a parity check matrix of @xmath107 .",
    "it can be easily obtained from a generator matrix @xmath193 which , in turn , can be easily obtained from a generator matrix @xmath110 of @xmath8 .",
    "we have all the ingredients to define a stegoscheme @xmath194 based on the matrix embedding principle with the punctured code @xmath107 .",
    "let @xmath195 and @xmath196 be , respectively , the length and redundancy of @xmath107 .",
    "the embedding map of @xmath194 is @xmath197 where @xmath147 is an element of @xmath198 such that @xmath199 .",
    "recall that when @xmath107 is in systematic form , then one can simply take @xmath200 .",
    "the extracting map is @xmath201 it is simple to check that @xmath202 so that couple @xmath203 defines a true stegoscheme @xmath194 .      in previous sections",
    "we have suggested the use of puncturing up to ensuring embedding success .",
    "however , since complete decoding is known to be an np - hard problem @xcite , in specific situations this goal may be too ambitious .    indeed , we can simply use the puncturation principle to increase the embedding probability , but not necessarily up to one .",
    "for example , the sender could have a target embedding probability @xmath204 , which is not reachable by the original stegoscheme .",
    "then we can stop the puncturation process when the target embedding probability is reached .",
    "analogously , since the complexity of the decoding algorithm for punctured codes is exponential in the number of the punctured positions , the steganographer may also limit this number to a preset maximum , according to available computing resources . in short ,",
    "the proposed method is totally versatile to be modified according to the requirements of the sender . in the rest of this article",
    ", we puncture up to have an embedding probability @xmath205 .",
    "keeping notations as in the previous section , let @xmath8 be a code for which there exists an efficient algorithm capable of correcting @xmath106 errors .",
    "let @xmath107 be its punctured of covering radius @xmath106 , and let @xmath206 be the stegoschemes obtained from @xmath8 and @xmath107 respectively .",
    "the parameters of @xmath194 are @xmath207 where @xmath208 is the average covering radius of @xmath107 .",
    "it is not easy to obtain general closed formulas for these parameters , since they depend on the number and location of punctured positions , which in turn depend on the code @xmath8 and the number @xmath106 .",
    "however , except for perfect codes ( for which @xmath106 is just the covering radius of @xmath8 and we do not need to puncture ) we have @xmath209 , @xmath210 , @xmath211 and @xmath212 , @xmath213 .",
    "the embedding efficiency of @xmath194 may be larger or smaller than the embedding efficiency of @xmath57 , for a relative payload fixed .          ' '' ''    & @xmath77 & @xmath63 & @xmath67 & @xmath76 & @xmath68 & @xmath214 & @xmath195 & @xmath215 & @xmath216 & @xmath217 & @xmath218 & @xmath219 +    4 & 15 & 8 & 0.533 & 0.164 & 2.67 & 3.25 & 11 & 4 & 0.363 & 1.375 & 2 & 2.909 + 5 & 31 & 10 & 0.323 & 0.0801 & 3.33 & 4.03 & 28 & 7 & 0.250 & 1.766 & 3.5 & 3.965 + 6 & 63 & 12 & 0.190 & 0.0396 & 4 & 4.81 & 59 & 8 & 0.135 & 1.777 & 4 & 4.501 + 7 & 127 & 14 & 0.110 & 0.0197 & 4.66 & 5.61 & 123 & 10 & 0.081 & 1.879 & 5 & 5.322 + 8 & 255 & 16 & 0.0627 & 0.0098 & 5.34 & 6.41 & 251 & 12 & 0.047 & 1.939 & 6 & 6.189 + 9 & 511 & 18 & 0.0352 & 0.00489 & 6 & 7.2 & 507 & 14 & 0.027 & 1.969 & 7 & 7.110 + 10 & 1023 & 20 & 0.196 & 0.00244 & 6.66 & 8 & 1018 & 15 & 0.014 & 1.969 & 7.5 & 7.617 + 11 & 2047 & 22 & 0.0107 & 0.00122 & 7.34 & 8.80 & 2042 & 17 & 0.008 & 1.984 & 8.5 & 8.566 +        ' '' ''    & @xmath77 & @xmath63 & @xmath67 & @xmath76 & @xmath68 & @xmath214 & @xmath195 & @xmath215 & @xmath216 & @xmath217 & @xmath218 & @xmath219 + 4 & 15 & 10 & 0.667 & 0.222 & 2 & 3 & 12 & 7 & 0.583 & 0.191 & 2.33 & 3.05 + 5 & 31 & 15 & 0.484 & 0.138 & 3 & 3.5 & 25 & 9 & 0.36 & 0.0985 & 3 & 3.65 + 6 & 63 & 18 & 0.286 & 0.0645 & 3.6 & 4.43 & 56 & 11 & 0.197 & 0.0434 & 3.67 & 4.52 + 7 & 127 & 21 & 0.165 & 0.0303 & 4.2 & 5.45 & 121 & 15 & 0.124 & 0.0230 & 5 & 5.38 + 8 & 255 & 24 & 0.0941 & 0.0151 & 4.8 & 6.25 & 248 & 17 & 0.0686 & 0.0112 & 5.66 & 6.11 + 9 & 511 & 27 & 0.0529 & 0.00751 & 5.4 & 7.03 & 504 & 20 & 0.0397 & 0.00572 & 6.66 & 6.94 +     comparison between stegoschemes based on the binary @xmath220 and their punctured associated codes.,width=302 ]     comparison between stegoschemes based on the binary @xmath221 and their punctured associated codes.,width=302 ]    in order to see some concrete results showing the performance of our method , we list some numerical results obtained for primitive two and three error correcting binary bch codes , taking the number @xmath106 given by the bch bound ( that is , allowing efficient decoding by means of berlekamp - massey algorithm , as usual ) .",
    "these codes have been studied by many authors@xcite and proposed as good candidates for constructing stegoschemes .",
    "it is well known that they have covering radii 3 and 5 respectively , and that @xmath222 is quasi - perfect . by using algorithm  [ algo : puncset ] , we have determined the couple @xmath223 for some two and three error - correcting binary bch codes and subsequently computed the parameters of the corresponding stegoschemes .",
    "the obtained results are listed in tables  [ tab : pc2bch ] ( two - error - correcting , @xmath224 ) and  [ tab : pc3bch ] ( three - error - correcting , @xmath151 ) . notations in these tables are same used throughout this article . in both cases we puncture bch codes to get other codes whose covering radii are equal to the correction capabilities of bch codes .",
    "then @xmath225 for two - error - correcting and @xmath226 for three - error - correcting bch codes .",
    "we do not include the probability of embedding success for punctured codes , since in all cases such probability is exactly 1 .",
    "for a better understanding of these results , and a comparison with stegoschemes coming from original bch codes , we also include a graphical representation in figures  [ fig : bch2_vs_pbch2 ] and  [ fig : bch3_vs_pbch3 ] .",
    "as we see , the new stegoschemes may have a better performance in terms of embedding efficiency .",
    "for example , in table  [ tab : pc2bch ] , we can see how the stegosystem based on @xmath227 has the same embedding efficiency as the stegoscheme based on @xmath228 , but with a smaller relative payload .",
    "thus we conclude that the stegoschemes based on punctured codes may be better than the original ones _ in the worst case _ , although they do not appear to be better in terms of _ average _ embedding efficiency .",
    "all computations have been performed by using the system magma @xcite , where bch codes are managed in systematic form .",
    "we remark that all punctured positions have resulted to be among the first @xmath54 ( systematic ) positions . given our limited computer resources ,",
    "we have not used algorithm  [ algo : puncset ] in full to obtain the puncturing of @xmath229 and @xmath230 .",
    "instead we have punctured these codes just at the first positions , up to obtain a code with covering radius @xmath231 equal to @xmath151 ( and then true results may be somewhat better than those shown in table  [ tab : pc3bch ] ) .",
    "we have proposed a method to ensure or increase the probability of embedding success for stegoschemes arising from error correcting codes .",
    "this method is based on puncturing codes .",
    "as we have seen , the use of these punctured codes can also increase the embedding efficiency of the obtained stegoschemes .",
    "dagmar schnfeld and antje winkler .",
    "embedding with syndrome coding based on bch codes . in _ proceedings of the 8th workshop on multimedia and security _ , mm&sec 06 , pages 214223 , new york , ny , usa , 2006 .",
    "andreas westfeld .",
    "f5 - a steganographic algorithm . in ira moskowitz , editor ,",
    "_ information hiding _ ,",
    "volume 2137 of _ lecture notes in computer science _",
    ", pages 289302 .",
    "springer berlin / heidelberg , 2001 .",
    "rongyue zhang , vasiliy sachnev , and hyoung kim .",
    "fast bch syndrome coding for steganography . in stefan katzenbeisser and ahmad - reza sadeghi ,",
    "editors , _ information hiding _ , volume 5806 of _ lecture notes in computer science _ , pages 4858 .",
    "springer berlin / heidelberg , 2009 ."
  ],
  "abstract_text": [
    "<S> for stegoschemes arising from error correcting codes , embedding depends on a decoding map for the corresponding code . </S>",
    "<S> as decoding maps are usually not complete , embedding can fail . </S>",
    "<S> we propose a method to ensure or increase the probability of embedding success for these stegoschemes . </S>",
    "<S> this method is based on puncturing codes . </S>",
    "<S> we show how the use of punctured codes may also increase the embedding efficiency of the obtained stegoschemes . </S>"
  ]
}
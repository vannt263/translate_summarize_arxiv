{
  "article_text": [
    "recently , there has been a growing interest in declarative probabilistic modeling which has led to the development of several software systems for probabilistic modeling and bayesian inference such as stan  @xcite , factorie  @xcite , infer.net  @xcite , or prism  @xcite .",
    "many of these systems provide a declarative modeling language for the definition of probabilistic models , which allows to define random variables and their relations in a way similar to computer programs .",
    "thus , the term _ probabilistic programming _ is frequently used to refer to the implementation of probabilistic models in such systems .",
    "the common idea is to implement the probabilistic model declaratively , without specifying how inference should be performed in the model .",
    "instead the underlying inference engine is responsible for the execution of an appropriate inference algorithm and can potentially adapt the inference procedure to specific models ( e.g. , to improve accuracy of efficiency ) .",
    "this approach to probabilistic modeling is not a recent idea ; bugs  @xcite , a software system for bayesian modeling and inference using gibbs sampling , is already more than twenty years old @xcite and has become the de facto standard for probabilistic programming .",
    "bugs defines its own modeling language , and relies on the fact , that gibbs sampling is a very general markov - chain monte carlo ( mcmc ) method and allows inference in a large class of probabilistic models .",
    "thus , bugs imposes almost no constraints on models and supports a large set of models , including analytically intractable models with non - conjugate or improper priors .",
    "however , mcmc methods often suffer from slow convergence especially for high - dimensional models or strongly correlated parameters .",
    "this drawback of gibbs sampling has been a limiting factor for probabilistic programming with bugs .",
    "however , recent research results have led to several new and improved methods for approximate inference in probabilistic models , such as expectation propagation  ( ep )  @xcite , variational message passing  ( vmp )  @xcite , and improved sampling techniques including hamiltonian monte carlo  @xcite and nuts  @xcite .",
    "several software systems have been developed , which incorporate these improved methods and can be used instead of bugs .    in this contribution",
    "we discuss a bayesian model for an idealized formulation of the dark matter localization problem , and show how this model can be implemented using bugs and infer.net .",
    "the aim is to highlight and discuss the differences between bugs and infer.net on the basis of a moderately complex model .",
    "a summary of the different capabilities of bugs and infer.net , as well as a comparison of inference results , have also been given in @xcite .",
    "a large fraction of the total mass in the universe is made up of so - called dark matter .",
    "dark matter does not emit or absorb light but can be detected indirectly through its gravitational field .",
    "the existence and substance of dark matter is one of the unanswered questions of astrophysics , and a lot of effort is spent on improving methods to detect dark matter , and on studying its distribution in the universe .",
    "for instance in a recent publication a map of the distribution of dark mapper in the universe is discussed  @xcite",
    ".    dark matter can be detected through the gravitational lensing effect @xcite , which occurs because the gravitational force of large masses has a bending effect on light .",
    "because of the gravitational lensing effect , objects behind a mass appear displaced to an observer and even multiple images of the same object might appear .",
    "additionally , the apparent shape of larger objects such as galaxies is altered by the gravitational lensing effect .",
    "the main aim of this contribution is to show , how a moderately complex probabilistic model , such as the dark matter localization model , can be implemented using software systems for probabilistic programming , in order to highlight and discuss the capabilities of such systems .",
    "we do not aim to derive a model that can be actually used for dark matter localization .",
    "however , it should be noted that e.g. , lenstool , a software system which has actually been used for calculating mass distribution profiles based on real images , also implements a bayesian model and mcmc sampling @xcite .",
    "we use a synthetic data set for the experiments presented in this contribution as we do not aim to improve on established models for dark matter localization .",
    "the data set has been generated for the `` observing dark worlds '' competition hosted on kaggle by simulating dark matter halos , galaxies and the gravitational lensing effect .",
    "distortions that would occur in real images e.g. , through atmospheric effects or telescopic lenses , are ignored . for the purpose of the competition , real image data could not be used as it is necessary to compare solutions for dark matter halo locations .",
    "the data set is composed of 300 simulated skies and either one , two , or three dark matter halos .",
    "the data for each sky contains locations and ellipticities of between 300 and 740 galaxies .",
    "the ellipticity is specified using two components : the ellipticity along the x - axis @xmath0 , and the ellipticity along a 45-degree angle to the x - axis @xmath1 .",
    "in the following we describe the probabilistic graphical model for bayesian inference of dark matter halo locations and masses from the observed locations and ellipticities of galaxies as specified in the synthetic data set .",
    "it should be noted , that the model described below is the model that has been used by the author for the dark worlds competition .",
    "this model is very similar to the model used by the competition winner , but differs in relevant details . in particular",
    ", the model below uses different priors .",
    "the goal in the dark matter localization problem is to determine probability distributions for halo locations @xmath2 given observed galaxy locations @xmath3 and ellipticities @xmath4 .",
    "using bayes theorem we can derive the posterior distribution of halo locations from the likelihood of observed locations and ellipticities times the prior .",
    "the mass of a halo determines the strength of the gravitational lensing effect .",
    "therefore , the halo mass has to be included in the model as latent variable .",
    "this leads to the following model @xmath5    there is no prior information about the locations of halos , so a flat uniform prior @xmath6 is used . for the halo mass",
    "a broad gamma prior is used : @xmath7 .",
    "we assume that the galaxy locations are independent from halo locations and masses so the likelihood can be transformed : @xmath8    the ellipticity is given as a vector with two components @xmath9 which are independent , and the empirical distribution of ellipticities is very close to a zero mean normal distribution with variance @xmath10 .",
    "therefore , the likelihood function for observed ellipticities @xmath11 can be expressed as a normal likelihood with the mean given by the strength of the lensing effect and a constant variance @xmath12 .",
    "@xmath13 we assume that the strength of the lensing effect can be modeled using a simple function , which increases linearly with the mass of the halo and inversely with the distance to the halo center . @xmath14",
    "the final model is shown as a probabilistic graphical model in figure [ fig : prob_graph_1 ] , using plate notation to represent @xmath15 galaxies and @xmath16 halos . in the graphical representation several details that are necessary for the implementation , such as the distance of galaxies from halos and the angle of the force vector ,",
    "are not shown .",
    "probabilistic graphical model for the gravitational lensing effect that can be used to infer dark matter locations and masses .",
    "the strength of the lensing effect @xmath17 is a result of the masses and locations of @xmath16 halos and effects the observed ellipticities of @xmath15 galaxies . ]    for the implementation of the model the total force has to be allocated to the two components of ellipticity , which describe the elongation of the galaxy in the x - direction ( @xmath0 ) and the elongation along a @xmath18 angle .",
    "the gravitational lensing effect leads to tangential elongation of the ellipticity .",
    "thus , we map the tangential force to the two components by multiplying with @xmath19 and @xmath20 , respectively .",
    "@xmath21 is the angle of the vector from the halo to the galaxy .",
    "@xmath22      it is rather straightforward to transform the probabilistic model to bugs syntax .",
    "the model can be defined as follows :    .... model {    for ( i in 1 : g ) {      for ( h in 1 : h ) {        dx[i , h ]     < - gx[i ] - loc[h , 1 ]        dy[i , h ]     < - gy[i ] - loc[h , 2 ]        dist[i , h ]   < - sqrt(dx[i , h ] * dx[i , h ] +                              dy[i , h ] * dy[i , h ] )        phi[i , h ]    < - atan2(dy[i , h ] , dx[i , h ] )        idist[i , h ] < - 1.0 / dist[i , h ]        f[i , h ]      < - mass[h ] * idist[i , h ]        f1[i , h ]     < - -f[i , h ] * cos(2 * phi[i , h ] )        f2[i , h ]     < - -f[i , h ] * sin(2 * phi[i , h ] )      }      mu1[i ] < - sum(f1[i , ] )      mu2[i ] < - sum(f2[i , ] )      e1[i ] ~ dnorm(mu1[i ] , 0.05 )      e2[i ] ~ dnorm(mu2[i ] , 0.05 )    }    for ( h in 1 : h ) {      mass[h ]     ~ dgamma(0.001 , 0.001 )      loc[h , 1 ] ~ dunif(0 , 4200 )      loc[h , 2 ] ~ dunif(0 , 4200 )    } } ....    the only additional steps that are necessary to infer @xmath23 and @xmath24 are loading initial values for all unobserved variables and loading the data for galaxy ellipticities @xmath9 and locations @xmath25 . however , convergence is very slow when sampling this model within bugs .",
    "additionally , bugs does not support the @xmath26 function in models .",
    "fortunately , the source code of bugs is available , so it is possible to add support for this function rather easily .",
    "infer.net  @xcite allows declarative specification of probabilistic models and provides ep  @xcite and vmp  @xcite for approximate inference .",
    "probabilistic models can be implemented directly in c#. the model is transformed transparently by the infer.net compiler to c # source code , which is then compiled to clr byte code using the c # compiler .",
    "compared to bugs , it is much easier to use such models from existing code , as long as the application is based on the .net platform .",
    "additionally , inference is fast because the code for model inference is compiled .",
    "the model can be implemented in the following way :    .... // not shown : variable declarations //",
    "[ ... ] sigma = variable.new<double > ( ) ; evidence = variable.bernoulli(0.5 ) ;    ifblock block = variable.if(evidence ) ; using ( variable.foreach(g ) ) {    using ( variable.foreach(h ) ) {      //",
    "factors for the following are not implemented      //",
    "dx[g][h].setto(g_x[g ] - loc_x[h ] ) ;      //",
    "dy[g][h].setto(g_y[g ] - loc_y[h ] ) ;      // phi.setto(variable.atan2(dy[g][h ] , dx[g][h ] ) ) ;      // cos2phi[g][h].setto(variable.cos(2 * phi[g][h ] ) ) ;      // sin2phi[g][h].setto(variable.sin(2 * phi[g][h ] ) ) ;      //",
    "invdist[g][h].setto(1.0 / variable.sqrt(dx[g][h ] * dx[g][h ] +       //                                          dy[g][h ] * dy[g][h ] ) ) ;      f1[g][h].setto(-(mass[h ] * invdist[g][h ] * cos2phi[g][h ] ) ) ;      f2[g][h].setto(-(mass[h ] * invdist[g][h ] * sin2phi[g][h ] ) ) ;    }    e1[g].setto (     variable.gaussianfrommeanandprecision(variable.sum(f1[g ] ) , 20 ) ) ;    e2[g].setto (     variable.gaussianfrommeanandprecision(variable.sum(f2[g ] ) , 20 ) ) ; } block.closeblock ( ) ; ....    similarly to the bugs implementation , arrays of random variables are used for galaxy locations and ellipticities , as well as for halo locations and masses .",
    "looping over ranges can be accomplished with the ` variable.foreach ` factor ; in the example two variants to handle blocks in infer.net are shown .",
    "either the block is manually opened and closed , as shown for the ` ifblock ` , or the ` using`-syntax is used to manage blocks .",
    "ep and vmp are able to exploit regularities in the model , so that inference can be performed much faster than would be possible with mcmc techniques .",
    "ep and vmp allow inference also for large scale models , such as document topic modeling with latent dirichlet allocation .",
    "the drawback of both methods is that they are much less general than e.g. , gibbs sampling .",
    "thus , the set of probabilistic models that can be used in infer.net is rather constrained @xcite .",
    "however , in contrast to bugs , infer.net also supports conditional blocks .",
    "even tough ep can potentially also be used to infer marginals when the factors are non - conjugate , this is in general not very efficient .",
    "so , infer.net typically does not contain such factors .",
    "implementing custom factors for ep inference is rather difficult .",
    "the model uses mainly non - conjugate factors .",
    "thus , it is not possible to perform inference using the original model with the standard installation of infer.net .",
    "it would be necessary to implement new distribution types , factors and message operators to support inference for this model .",
    "instead , the model is simplified , so that it basically represents a simple likelihood function .",
    "infer.net is only used to infer the likelihood ( ` evidence ` ) .",
    "the parameters of the model , @xmath23 and @xmath24 are optimized w.r.t .",
    "likelihood using the cma - es optimization algorithm  @xcite .",
    "figure [ fig : likelihood ] shows locations and shapes of galaxies and the actual location of the dark matter halos for two skies .",
    "the predicted halo locations are marked with a green circle .",
    "two simulated skies showing galaxies and the actual ( red cross ) and predicted ( green circle ) center location of the dark matter halos.,title=\"fig:\",width=188 ] two simulated skies showing galaxies and the actual ( red cross ) and predicted ( green circle ) center location of the dark matter halos.,title=\"fig:\",width=188 ]",
    "in this contribution a bayesian model for gravitational lensing is described that the author used for the `` observing dark worlds '' competition .",
    "the model is similar to the winning model but uses e.g. , different priors .",
    "the gravitational lensing model can be easily implemented in bugs . only the @xmath27 function is missing , however , it is easy to add support for this function to the open - source version of bugs .",
    "sampling converges only slowly for this model in bugs .",
    "infer.net uses ep or vmp for approximate inference , and the models can be implemented directly e.g. , in c#. inference with ep and vmp is very efficient for certain types of models , but in general less flexible than e.g. , gibbs sampling . because of these restrictions , it would be necessary to implement custom factors and distributions , to implement the full gravitational lensing model using infer.net .",
    "instead , we performed simple ml optimization of dark halo locations and masses , based on a simplified implementation of the model in infer.net , using cma - es as optimization algorithm .",
    "the results are competitive , taking a spot in the top 10% of submitted solutions .    in this contribution",
    "we have only discussed the implementation of the model using bugs and infer.net . however",
    ", several other software systems for probabilistic programming , e.g. stan or factorie , can also be used instead .",
    "it would certainly be interesting to implement the model also in these systems , and to compare the results and performance .",
    "additionally , it would be interesting to discuss the implementation of factors , which are necessary for inference with ep , in more detail .",
    "massey , r. , rhodes , j. , ellis , r. , scoville , n. , leauthaud , a. , finoguenov , a. , capak , p. , bacon , d. , aussel , h. , kneib , j.p . , koekemoer , a. , mccracken , h. , mobasher , b. , pires , s. , refregier , a. , sasaki , s. , starck , j.l . ,",
    "taniguchi , y. , taylor , a. , taylor , j. : dark matter maps reveal cosmic scaffolding .",
    "nature 445 , 286290 ( 2007 )        minka , t.p . :",
    "expectation propagation for approximate bayesian inference . in : proceedings of the seventeenth conference on uncertainty in artificial intelligence .",
    ". 362369 .",
    "morgan kaufmann publishers inc .",
    "( 2001 )      sato , t. , kameya , y. : new advances in logic - based probabilistic modeling by prism . in : raedt , l. , frasconi , p. ,",
    "kersting , k. , muggleton , s. ( eds . ) probabilistic inductive logic programming , lecture notes in computer science , vol .",
    "4911 , pp .",
    "springer berlin heidelberg ( 2008 )"
  ],
  "abstract_text": [
    "<S> probabilistic programming allows specification of probabilistic models in a declarative manner . </S>",
    "<S> recently , several new software systems and languages for probabilistic programming have been developed on the basis of newly developed and improved methods for approximate inference in probabilistic models . in this contribution a probabilistic model for an idealized dark matter localization problem is described . </S>",
    "<S> we first derive the probabilistic model for the inference of dark matter locations and masses , and then show how this model can be implemented using bugs and infer.net , two software systems for probabilistic programming . </S>",
    "<S> finally , the different capabilities of both systems are discussed . </S>",
    "<S> the presented dark matter model includes mainly non - conjugate factors , thus , it is difficult to implement this model with infer.net .    </S>",
    "<S> models , probabilistic programming , bayesian inference , dark matter localization </S>"
  ]
}
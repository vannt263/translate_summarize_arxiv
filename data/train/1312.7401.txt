{
  "article_text": [
    "autonomy , size and weight are very important issues in the design of mobile systems .",
    "one possibility to reduce the power consumption of signal processing systems is the reduction of the number of samples .",
    "non uniform sampling is a way to have few samples for a large class of signals , especially sporadic signals , while still describing correctly the active parts of the signal .",
    "this leads to a smaller number of samples compared to nyquist sampling @xcite .",
    "specific system architectures , such as event - driven architectures , allow the implementation of this specific sampling .",
    "these architectures take samples each time some specific event occurs , e.g. specific voltage levels are crossed .",
    "simple , low power , analog circuits can be designed to acquire information , possibly at high speed .    in this paper",
    "we want to relate the signal regularity to the number of non uniform samples obtained _ via _ a level crossing technique .",
    "indeed , intuitively , the more the signal is oscillating the more often the signal is sampled .",
    "this is of course a local property : the number of samples at the neighborhood of some point may then be related to the local smoothness of the signal , or more precisely to its hlder regularity .",
    "this relationship will be tested on signals whose smoothness properties are perfectly known at each point",
    ". this can be useful to predict the processing complexity of e.g. biological signals such as eeg signals or fmri data which are well - known to be both highly irregular and non stationary .",
    "we introduce here an algorithm which is slightly different from the usual level crossing technique . in @xcite",
    "the amplitudes are selected thanks a @xmath0-bit asynchronous analog - to - digital converter ( aadc ) that corresponds to @xmath1 predefined levels in the voltage range .",
    "level crossing sampling consists in taking a sample each time the predefined levels are crossed .",
    "each amplitude has to be associated to a time .",
    "more precisely we store a delay elapsed since the last sample was taken , the local clock that enables this is then reset to zero and ready to measure the next delay . in figure",
    "[ fig : aadc ] we display the case when the captured time is that of the next clock tick .",
    "the sample is displayed with disks , and the value of the signal at the capture times with circles ( figure [ fig : aadc ] , left ) .",
    "this leads to a few number of samples , especially for sporadic signals .",
    "this procedure is refined decimating the samples by keeping only the last one when a level has been crossed many times successively ( figure [ fig : aadc ] , right ) .",
    "cc    ( 0,0 )  ( 10,0 ) ; ( 0,0 )  ( 0,6 ) ; ( 0,2 ) .. controls ( 2,5 ) and ( 3,7 ) .. ( 5,3 ) .. controls ( 5,3 ) and ( 8,-3 ) .. ( 10,3 ) ; in .5,1,1.5,2,2.5,3,3.5,4,4.5,5,5.5,6,6.5,7,7.5,8,8.5,9,9.5 ( , 0 )  + ( 0,6 ) ; ( 0,0 ) ",
    "( 10,0 ) ; ( 0,1 ) ",
    "( 10,1 ) ; ( 0,2 ) ",
    "( 10,2 ) ; ( 0,3 ) ",
    "( 10,3 ) ; ( 0,4 ) ",
    "( 10,4 ) ; ( 0,5 ) ",
    "( 10,5 ) ; ( .5,2.75 ) circle ( 3pt ) ; ( 1,3.5 ) circle ( 3pt ) ; ( 1,3 ) circle ( 3pt ) ; ( 1.5,4.2 ) circle ( 3pt ) ; ( 1.5,4 ) circle ( 3pt ) ; ( 2,4.75 ) circle ( 3pt ) ; ( 2.5,5.1 ) circle ( 3pt ) ; ( 2.5,5 ) circle ( 3pt ) ; ( 3,5.2 ) circle ( 3pt ) ; ( 3.5,5.05 ) circle ( 3pt ) ; ( 4,4.6 ) circle ( 3pt ) ; ( 4,5 ) circle ( 3pt ) ; ( 4.5,3.9 ) circle ( 3pt ) ; ( 4.5,4 ) circle ( 3pt ) ; ( 5,3 ) circle ( 3pt ) ; ( 5,3 ) circle ( 3pt ) ; ( 5.5,2.1 ) circle ( 3pt ) ; ( 6,1.45 ) circle ( 3pt ) ; ( 6,2 ) circle ( 3pt ) ; ( 6.5,.95 ) circle ( 3pt ) ; ( 6.5,1 ) circle ( 3pt ) ; ( 7,.6 ) circle ( 3pt ) ; ( 7.5,.35 ) circle ( 3pt ) ; ( 8,.35 ) circle ( 3pt ) ; ( 8.5,.5 ) circle ( 3pt ) ; ( 9,.95 ) circle ( 3pt ) ; ( 9.5,1.8 ) circle ( 3pt ) ; ( 9.5,1 ) circle ( 3pt ) ;    ( 0,0 ) ",
    "( 10,0 ) ; ( 0,0 ) ",
    "( 0,6 ) ; ( 0,2 ) .. controls ( 2,5 ) and ( 3,7 ) .. ( 5,3 ) .. controls ( 5,3 ) and ( 8,-3 ) .. ( 10,3 ) ; in .5,1,1.5,2,2.5,3,3.5,4,4.5,5,5.5,6,6.5,7,7.5,8,8.5,9,9.5 ( , 0 ) ",
    "+ ( 0,6 ) ; ( 0,0 )  ( 10,0 ) ; ( 0,1 )  ( 10,1 ) ; ( 0,2 )  ( 10,2 ) ; ( 0,3 )  ( 10,3 ) ; ( 0,4 )  ( 10,4 ) ; ( 0,5 )  ( 10,5 ) ; ( .5,2.75 ) circle ( 3pt ) ; ( 1,3.5 ) circle ( 3pt ) ; ( 1,3 ) circle ( 3pt ) ; ( 1.5,4.2 ) circle ( 3pt ) ; ( 1.5,4 ) circle ( 3pt ) ; ( 2,4.75 ) circle ( 3pt ) ; ( 2.5,5.1 ) circle ( 3pt ) ; ( 3,5.2 ) circle ( 3pt ) ; ( 3.5,5.05 ) circle ( 3pt ) ; ( 4,4.6 ) circle ( 3pt ) ; ( 4,5 ) circle ( 3pt ) ; ( 4.5,3.9 ) circle ( 3pt ) ; ( 4.5,4 ) circle ( 3pt ) ; ( 5,3 ) circle ( 3pt ) ; ( 5,3 ) circle ( 3pt ) ; ( 5.5,2.1 ) circle ( 3pt ) ; ( 6,1.45 ) circle ( 3pt ) ; ( 6,2 ) circle ( 3pt ) ; ( 6.5,.95 ) circle ( 3pt ) ; ( 7,.6 ) circle ( 3pt ) ; ( 7.5,.35 ) circle ( 3pt ) ; ( 8,.35 ) circle ( 3pt ) ; ( 8.5,.5 ) circle ( 3pt ) ; ( 9,.95 ) circle ( 3pt ) ; ( 9.5,1.8 ) circle ( 3pt ) ; ( 9.5,1 ) circle ( 3pt ) ;    our goal here is not to study the approximation of the signal but the number of non uniform samples , given the regularity of the signal , the clock precision and the level quantum .",
    "we introduce another sampling algorithm which is slightly different from the aadc , but easier to analyze mathematically , and which yields essentially the same number of samples . in section [ sec : algo ] , we describe this sampling algorithm and rephrase it in mathematical terms . in section [ sec : holder ] we define the functions that we will use in the numerical experiments of section 4 .",
    "these functions are chosen because we are able to control exactly their hlder regularity .",
    "even in event - driven systems , where the signal is not sampled at each clock tick , there are clocks that measure time , and specifically the time elapsed since the last event .",
    "these clocks have a certain precision , and all measured times are multiples of some basis time @xmath2 . up to some re - scaling of time",
    "we suppose that @xmath3 , for some @xmath4 .",
    "we never have a complete knowledge of the original signal @xmath5 , but only its samples @xmath6 , for all @xmath7 ( figure [ fig : step1 ] ) .",
    "( 10,0 ) ; ( 0,0 ) ",
    "( 0,6 ) ; ( 0,2 ) .. controls ( 2,5 ) and ( 3,7 ) .. ( 5,3 ) .. controls ( 5,3 ) and ( 8,-3 ) .. ( 10,3 ) ; in .5,1,1.5,2,2.5,3,3.5,4,4.5,5,5.5,6,6.5,7,7.5,8,8.5,9,9.5 ( , 0 ) ",
    "+ ( 0,6 ) ; ( .5,2.75 ) circle ( 3pt ) ; ( 1,3.5 ) circle ( 3pt ) ; ( 1.5,4.2 ) circle ( 3pt ) ; ( 2,4.75 ) circle ( 3pt ) ; ( 2.5,5.1 ) circle ( 3pt ) ; ( 3,5.2 ) circle ( 3pt ) ; ( 3.5,5.05 ) circle ( 3pt ) ; ( 4,4.6 ) circle ( 3pt ) ; ( 4.5,3.9 ) circle ( 3pt ) ; ( 5,3 ) circle ( 3pt ) ; ( 5.5,2.1 ) circle ( 3pt ) ; ( 6,1.45 ) circle ( 3pt ) ; ( 6.5,.95 ) circle ( 3pt ) ; ( 7,.6 ) circle ( 3pt ) ; ( 7.5,.35 ) circle ( 3pt ) ; ( 8,.35 ) circle ( 3pt ) ; ( 8.5,.5 ) circle ( 3pt ) ; ( 9,.95 ) circle ( 3pt ) ; ( 9.5,1.8 ) circle ( 3pt ) ;    let @xmath8 be the space of continuous functions , which are linear on intervals @xmath9 the faber  schauder hierarchical basis , defined in @xcite , yields a natural basis of @xmath8 .",
    "let @xmath10 .",
    "the functions @xmath11 , for all @xmath7 , form the faber ",
    "schauder basis .",
    "we can uniquely define the linear interpolation @xmath12 of @xmath13 at scale @xmath14 by imposing @xmath15 , for all @xmath7 , and @xmath16 in the sequel we suppose that @xmath13 is compactly supported in @xmath17 $ ] and therefore @xmath18 in equation .",
    "we consider that levels are uniformly spaced by some quantum @xmath19 . in applications where the range of the signal is @xmath17 $ ] , the sample can then be stored with a @xmath0-bit register .",
    "the second step consists in approximating the samples @xmath20 by the nearest level below ( figure [ fig : step2 ] ) .",
    "( 10,0 ) ; ( 0,0 ) ",
    "( 0,6 ) ; ( 0,2 ) .. controls ( 2,5 ) and ( 3,7 ) .. ( 5,3 ) .. controls ( 5,3 ) and ( 8,-3 ) .. ( 10,3 ) ; ( 0,0 ) ",
    "( 10,0 ) ; ( 0,1 ) ",
    "( 10,1 ) ; ( 0,2 ) ",
    "( 10,2 ) ; ( 0,3 ) ",
    "( 10,3 ) ; ( 0,4 ) ",
    "( 10,4 ) ; ( 0,5 ) ",
    "( 10,5 ) ; ( .5,2.75 ) circle ( 3pt ) ; ( .5,2 ) circle ( 3pt ) ; ( 1,3.5 ) circle ( 3pt ) ; ( 1,3 ) circle ( 3pt ) ; ( 1.5,4.2 ) circle ( 3pt ) ; ( 1.5,4 ) circle ( 3pt ) ; ( 2,4.75 ) circle ( 3pt ) ; ( 2,4 ) circle ( 3pt ) ; ( 2.5,5.1 ) circle ( 3pt ) ; ( 2.5,5 ) circle ( 3pt ) ; ( 3,5.2 ) circle ( 3pt ) ; ( 3,5 ) circle ( 3pt ) ; ( 3.5,5.05 ) circle ( 3pt ) ; ( 3.5,5 ) circle ( 3pt ) ; ( 4,4.6 ) circle ( 3pt ) ; ( 4,4 ) circle ( 3pt ) ; ( 4.5,3.9 ) circle ( 3pt ) ; ( 4.5,3 ) circle ( 3pt ) ; ( 5,3 ) circle ( 3pt ) ; ( 5,3 ) circle ( 3pt ) ; ( 5.5,2.1 ) circle ( 3pt ) ; ( 5.5,2 ) circle ( 3pt ) ; ( 6,1.45 ) circle ( 3pt ) ; ( 6,1 ) circle ( 3pt ) ; ( 6.5,.95 ) circle ( 3pt ) ; ( 6.5,0 ) circle ( 3pt ) ; ( 7,.6 ) circle ( 3pt ) ; ( 7,0 ) circle ( 3pt ) ; ( 7.5,.35 ) circle ( 3pt ) ; ( 7.5,0 ) circle ( 3pt ) ; ( 8,.35 ) circle ( 3pt ) ; ( 8,0 ) circle ( 3pt ) ; ( 8.5,.5 ) circle ( 3pt ) ; ( 8.5,0 ) circle ( 3pt ) ; ( 9,.95 ) circle ( 3pt ) ; ( 9,0 ) circle ( 3pt ) ; ( 9.5,1.8 ) circle ( 3pt ) ; ( 9.5,1 ) circle ( 3pt ) ;    we denote @xmath21 the integer part of @xmath22 , namely @xmath23 .",
    "the function @xmath24 which coincides with the new samples is uniquely defined by @xmath25      next , we decimate the samples so as to keep only one sample when consecutive samples have the same amplitude .",
    "we choose to keep the last sample to be compatible with the causality principle ( figure [ fig : step3 ] ) .",
    "( 10,0 ) ; ( 0,0 ) ",
    "( 0,6 ) ; ( 0,2 ) .. controls ( 2,5 ) and ( 3,7 ) .. ( 5,3 ) .. controls ( 5,3 ) and ( 8,-3 ) .. ( 10,3 ) ; ( 0,0 ) ",
    "( 10,0 ) ; ( 0,1 ) ",
    "( 10,1 ) ; ( 0,2 ) ",
    "( 10,2 ) ; ( 0,3 ) ",
    "( 10,3 ) ; ( 0,4 ) ",
    "( 10,4 ) ; ( 0,5 ) ",
    "( 10,5 ) ; ( .5,2 ) circle ( 3pt ) ; ( 1,3 ) circle ( 3pt ) ; ( 1.5,4 ) circle ( 3pt ) ; ( 2,4 ) circle ( 3pt ) ; ( 2.5,5 ) circle ( 3pt ) ; ( 3,5 ) circle ( 3pt ) ; ( 3.5,5 ) circle ( 3pt ) ; ( 4,4 ) circle ( 3pt ) ; ( 4.5,3 ) circle ( 3pt ) ; ( 5,3 ) circle ( 3pt ) ; ( 5.5,2 ) circle ( 3pt ) ; ( 6,1 ) circle ( 3pt ) ; ( 6.5,0 ) circle ( 3pt ) ; ( 7,0 ) circle ( 3pt ) ; ( 7.5,0 ) circle ( 3pt ) ; ( 8,0 ) circle ( 3pt ) ; ( 8.5,0 ) circle ( 3pt ) ; ( 9,0 ) circle ( 3pt ) ; ( 9.5,1 ) circle ( 3pt ) ;    we are interested in the number of samples after the three steps . comparing figures [ fig : aadc ] ( right ) and [ fig :",
    "step3 ] , we notice that the number of final samples ( the disks in both figures ) are comparable .",
    "this is a generic situation .",
    "in fact the differences are mainly due to the extreme upper and lower levels .    from the mathematical point of view",
    ", decimation consists in keeping a subsequence of @xmath18 , defined by induction : @xmath26 and @xmath27 we only store the couples @xmath28 where @xmath29 , @xmath30 is the delay since the last sample , and @xmath31 is the amplitude of the sample .",
    "step 3 leads to a reduction of the number of samples , but does not introduce any approximation .",
    "our goal is to relate the number of non uniform samples to the regularity of the signal . in particular",
    ", we address the hlderian regularity .      before introducing the hlderian regularity , we first recall a few definitions .",
    "they allow a weaker definition of pointwise smoothness .",
    "the final goal is to define strongly monohlderian functions , a notion that formalizes the idea of a function which has the as uniformly as possible regularity .",
    "let @xmath32 and @xmath33 , for all @xmath34 we define @xmath35\\subset b(x_0,r)\\},\\ ] ] where @xmath36 is the ball of center @xmath37 and radius @xmath38 , and denote , as usual , the oscillation of a function @xmath39 at @xmath37 on the ball @xmath36 as @xmath40    let @xmath39 be a locally bounded function , let @xmath32 and @xmath41 .",
    "the function @xmath13 is hlderian of exponent @xmath42 at @xmath37 ( @xmath43 ) if there exist @xmath44 and @xmath45 such that @xmath46 a function @xmath13 is uniformly hlderian of exponent @xmath42 ( @xmath47 ) if @xmath44 and @xmath48 in equation ( [ eq : strong holder - fd ] ) are uniform in @xmath32 .",
    "the irregularity of a function can be studied through the notion of anti - hlderianity .",
    "let @xmath39 be a locally bounded function , let @xmath32 and @xmath41 .",
    "the function @xmath13 is anti - hlderian of exponent @xmath42 at @xmath37 ( @xmath49 ) if there exist @xmath44 and @xmath45 such that @xmath50    let us notice that the statement ( [ eq : anti - holder ] ) is stronger than just negating the hlderian regularity . indeed",
    "such a negation only yields the existence , for any @xmath51 , of a subsequence @xmath52 ( depending on @xmath44 ) for which @xmath53 strongly monohlderian functions naturally arise in the study of the regularity of mappings such as weierstrass - type or random processes ( see e.g.  @xcite ) .",
    "indeed , many results only hold for such mappings .",
    "let @xmath41 .",
    "a function @xmath39 is strongly monohlderian of exponent @xmath42 ( @xmath54 ) if @xmath55 , i.e.  if there exists @xmath44 and @xmath45 such that , for any @xmath32 , @xmath56      as already mentioned , only steps 1 and 2 lead to approximations .",
    "to state our approximation results , we need some preliminary definitions . according to our application",
    ", we now restrict to functions defined on @xmath17 $ ] . for any continuous function @xmath13 on @xmath17 $ ]",
    ", we define its uniform regularity modulus by @xmath57\\subset ( 0,1)}|f(x+h)-f(x)|.\\ ] ] the function @xmath58 is _ a modulus of continuity _ in the sense that @xmath59 and that there exists some @xmath51 such that @xmath60 ( see  @xcite ) .    in what follows",
    "we need the notion of _ strong modulus of continuity _ introduced in  @xcite .",
    "the modulus of continuity @xmath61 is said to be strong if there exists @xmath51 such that for any positive integer @xmath62 one has @xmath63 it is well - known @xcite that if there exists some strong modulus of continuity @xmath61 such that @xmath64 then @xmath65 where @xmath66 is defined by equation . in particular if @xmath67 there exists some @xmath51 such that for any @xmath68 @xmath64 with @xmath69 , and then there exists a constant @xmath44 ( which depends on @xmath13 but not on the scale @xmath70 ) such that @xmath71 assume now that in addition @xmath72 then , following @xcite , there exists a constant @xmath44 and @xmath73 ( which depend on @xmath13 but not on the scale @xmath70 ) such that@xmath74 in particular , applying these results with the strong modulus of continuity @xmath75 , we deduce that if the function @xmath13 is assumed to be uniformly monohlderian with exponent @xmath42 there exist some @xmath51 and @xmath73 such that @xmath76 this yields estimates on the error due to step 1 .",
    "the approximation made at step 2 clearly does not depend on the regularity of function @xmath13 , and we have @xmath77      if @xmath13 is a monohlderian function with exponent @xmath42 , by definition there exists @xmath78 and for any scale @xmath68 and @xmath79 @xmath80\\subset\\left[\\frac k{2^j},\\frac{k+1}{2^j}\\right]}|f(x+h)-f(x)|\\leq c_2 2^{-j\\alpha}.\\end{aligned}\\ ] ] if the function is additionally supposed to be monotonous , we further have exactly @xmath81\\subset\\left[\\frac k{2^j},\\frac{k+1}{2^j}\\right]}|f(x+h)-f(x)| = \\left|f\\left(\\frac{k+1}{2^j}\\right)-f\\left(\\frac{k}{2^j}\\right)\\right|.\\ ] ] hence @xmath82 a monohlderian signal crosses equi - spaced levels with quantum @xmath19 at most @xmath83 times .",
    "the worst case is that of monotonous signals .    besides , initial sampling ( step 1 ) takes exactly @xmath84 samples",
    "this is hence the first natural upper bound for the number of samples .",
    "together with monohlderianity we know that the number of samples is less than the minimum of these two bounds . for large values of @xmath0 ( or small values of @xmath42 )",
    ", we indeed keep almost all of the @xmath84 samples .",
    "otherwise we can expect some reduction of the number of samples .",
    "for @xmath85 , the threshold is @xmath86 .",
    "observe that the proof is based on the fact , that in the monotonous case , we can estimate in a very simple way the oscillations @xmath81\\subset\\left[\\frac k{2^j},\\frac{k+1}{2^j}\\right]}|f(x+h)-f(x)|\\ ] ] of the function .",
    "of course in the general case , the situation can be much more complicated .",
    "nevertheless , generic results in the sense of prevalence as stated in @xcite are expected to hold . in what follows",
    ", we illustrate through numerical simulations what happens in two cases .",
    "we test level crossing on two toy models : sample paths of fractional brownian motion @xmath87 and the weierstrass function @xmath88 , which are indexed by the hurst index @xmath89 .",
    "the choice of these two cases is guided by the fact that their smoothness properties are related to the hurst index .",
    "the * fractional brownian motion * ( fbm ) @xmath87 is the unique gaussian @xmath90-self - similar process with stationary increments .",
    "it is defined from its covariance function @xmath91=\\tfrac{1}{2 } \\left(|x|^{2h}+|y|^{2h}-|x - y|^{2h}\\right)\\ ] ] for all @xmath92 ^ 2 $ ] .",
    "the classical brownian motion corresponds to @xmath93 .",
    "the sample paths of fbm are well - known to be almost surely continuous .",
    "further , its hurst index @xmath90 is directly related to the roughness of its sample paths .",
    "more precisely the classical law of the iterated logarithm ensures that @xmath94)\\cap i^{h+\\varepsilon}([0,1 ] ) \\text { almost surely}.\\ ] ] roughly speaking , a.s .",
    "for all @xmath92 ^ 2 $ ] , @xmath95 ^ 2}|b_h(u)-b_h(v)|\\sim|x - y|^h.\\ ] ] figure [ fig : fbm ] presents three realizations of sample paths of fractional brownian motions for @xmath96 , @xmath97 , @xmath98 , and @xmath99 ( @xmath100 samples ) .",
    "three realizations of fractional brownian motions for @xmath96 , @xmath97 , and @xmath98 ( from left to right).,height=151 ]    the * weierstrass function * @xmath88 is a classical example of monohlderian function with exponent @xmath90 as proved in  @xcite . it is defined as @xmath101 and , for all @xmath92 ^ 2 $ ] , @xmath95 ^ 2}|w_h(u)-w_h(v)|\\sim|x - y|^h.\\ ] ] figure [ fig : weierstrass ] presents the graphs of the weierstrass functions for @xmath96 , @xmath97 , @xmath98 , and @xmath99 ( @xmath100 samples ) .    the weierstrass function for @xmath96 , @xmath97 , and @xmath98 ( from left to right).,height=151 ]      the tests are performed within the spass matlab toolbox @xcite ( signal processing for asynchronous systems toolbox ) .",
    "it has been originally designed to treat non uniform signals produced by asynchronous systems , but can be used for a large variety of signals . to generate fractional brownian motions , we make use of the ` genfbmjfc.m ` function @xcite .",
    "we use two values of @xmath70 ( 10 and 13 ) and two values of @xmath0 ( 4 and 5 ) .",
    "these small values of @xmath0 are sufficient for most mobile applications .",
    "our output is the number of samples after decimation ( step 3 ) . for the fractional brownian motion , we perform 1000 realizations and average the number of samples obtained for each realization to obtain an average number @xmath102 .",
    "we perform the same tests on the weierstrass function ( deterministic function , only one realization ) .",
    "we perform this for values of the hurst number @xmath90 in the @xmath103 range and obtain the plots ( in semi - log scale , with log - basis 2 ) in figures [ fig : complexity_10 ] and [ fig : complexity_13 ] for @xmath99 and 13 respectively .",
    "we also plot the number of samples computed in the worst case ( monotonous function i.e. maximum total variation ) for @xmath85 : @xmath104 .",
    "number @xmath102 of samples in terms of the hurst number in the log scale for @xmath99 , and @xmath105 ( left ) and @xmath106 ( right ) .",
    "solid lines correspond to the averaged number for the fractional brownian motion , the dashed lines to the weierstrass function , and the dotted lines to the worst case @xmath107.,height=151 ]    number @xmath102 of samples in terms of the hurst number in the log scale for @xmath108 , and @xmath105 ( left ) and @xmath106 ( right ) .",
    "same plotting conventions as figure [ fig : complexity_10].,height=151 ]    we distinguish two regimes : below some value of the hurst number @xmath109 the algorithm more or less keeps all the original samples , above this value the decimation is efficient and yields a significant reduction of the number of samples . for the different curves these `` critical '' values of @xmath90 are given in table [ tab : critical ] .",
    ".[tab : critical]``critical '' values of the hurst number . [ cols=\"^,^,^\",options=\"header \" , ]     the plots associated to fbm are much more regular than those associated to the weierstrass function because they are obtained by an averaging procedure . besides , for the weierstrass function ,",
    "the constant involved in equation   is _ a priori _ not equal to @xmath110 and indeed depends on @xmath90 .",
    "it can be explained using the range of the fractional derivative of order @xmath90 of weierstrass function @xmath88 which is not reduced to a constant and depends on @xmath90 ( @xcite for more details ) .",
    "we have predicted for monohlderian functions and shown numerically that there is a strong relationship between the smoothness properties of a signal and the number of samples that can be obtained by the crossing level algorithm presented in this paper .",
    "this is rigorously proved in the case of monotonous monohlderian functions .",
    "the next step , which will be the purpose of a forthcoming paper , will then be to consider signals whose regularity may change from point to point such as multifractional or multifractal signals .",
    "ljk is partner of the labex persyval - lab ( anr11-labx-0025 - 01 ) funded by the french program investissement davenir and this work has been partially supported by the mathstic project oasis of the grenoble university .",
    "the authors wish to thank jean - franois coeurjolly for fruitful discussions .",
    "e. allier , g. sicard , l. fesquet , and m. renaudin , _ asynchronous level crossing analog to digital converters , _ measurement , * 37*(4 ) , 296309 , 2005 . special issue on adc modelling and testing , edited by p. carbone and p. daponte .",
    "k. guan and a.c .",
    "opportunistic sampling by level - crossing , _ in ieee international conference on acoustics , speech and signal processing ( icassp 2007 ) , pages 15131516 , honolulu , hawaii , usa , april 2007 .",
    "ieee , 2007 ."
  ],
  "abstract_text": [
    "<S> the reduction of the number of samples is a key issue in signal processing for mobile applications . </S>",
    "<S> we investigate the link between the smoothness properties of a signal and the number of samples that can be obtained through a level crossing sampling procedure . the algorithm is analyzed and an upper bound of the number of samples is obtained in the worst case . </S>",
    "<S> the theoretical results are illustrated with applications to fractional brownian motions and the weierstrass function . </S>",
    "<S> + _ key words and phrases _ : level crossing sampling , oscillations , monohlderian functions . </S>",
    "<S> + _ 2000 ams mathematics subject classification _  26a16 , 60g15 , 60g18 , 94a12 . </S>"
  ]
}
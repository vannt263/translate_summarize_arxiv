{
  "article_text": [
    "in many scientific and technical contexts one encounters phenomena that may be modeled by fluxes transferring population between sources and sinks for various species .",
    "examples include kinetic processes that modify abundances and transfer energy in atomic , molecular , and nuclear systems ; geochemical , climate , and other environmental systems ; electrical circuits ; economic models ; and population dynamics .",
    "terminology varies but let us refer generically to these sources and sinks as _",
    "boxes , _ and term the resulting systems of boxes connected by fluxes _ reaction networks .",
    "_ such systems are commonly modeled by a coupled set of differential equations that describe a continuous flow of population through the boxes .    the reaction network is often classified as a _ stiff system _ , which we shall define to be a system of equations containing multiple timescales ranging over many orders of magnitude @xcite .",
    "most physical systems involve important processes operating on very different timescales , so realistic problems tend to be at least moderately stiff .",
    "some , such as those encountered in many astrophysics applications , are extremely stiff , with fastest and slowest timescales in the problem differing by as much as 1020 orders of magnitude . in stiff systems the timestep constraints are set by numerical stability requirements rather than accuracy considerations .",
    "hence , explicit numerical integration of stiff systems is usually impractical because the maximum stable timestep is far too small for efficient solutions ( see , for example , refs .",
    "this is commonly addressed by employing implicit or semi - implicit stiff solvers that are stable , but that require time - consuming iterative matrix solutions .",
    "a given box in a reaction network often is connected strongly only to a few other boxes .",
    "for example , the explosive burning conditions encountered in astrophysical novae , x - ray bursts , or supernovae may require reaction networks with hundreds to thousands of nuclear isotopes . yet individual isotopes are typically connected directly to other isotopes through ( at most ) @xmath010 reactions of consequence , and under many conditions no more than 23 reactions are important for a given isotope .",
    "such restrictions on the direct box reaction coupling imply that the matrices appearing in the iterative implicit solution are _ sparse .",
    "_ although various methods are available to deal with sparse matrices , in practice many codes for solving large reaction networks have not exploited sparseness in particularly effective ways .",
    "for example , in astrophysical calculations with implicit solvers in large networks ( say @xmath1 species or more ) , one finds often that greater than 90% of the processor time is consumed in matrix operations @xcite .",
    "efficient algorithms exist for the required matrix algebra ( with incremental improvements in them over time ) , but the matrix nature of the core problem implies that the time required for implicit solution grows non - linearly with the size of the network .",
    "in typical working codes for large - scale applications , increasing the size of the network increases the time for solution , often quadratically , sometimes as much as cubically , until there are enough boxes in the network to justify the overhead of sparse - matrix methods with more favorable scaling . in applications in thermonuclear networks , for example",
    ", it is often found that the overhead required to implement sparse - matrix iterative solutions is not justified until there are several hundred boxes in the network .",
    "thus , many present implicit stiff - network algorithms do not scale very gracefully to larger networks .",
    "we are primarily interested in the most ambitious applications of large networks , where the reaction network is only a portion of a larger problem .",
    "let us take as representative astrophysical thermonuclear reaction networks , where a proper description of the overall problem typically requires multi - dimensional hydrodynamics or radiation hydrodynamics coupled tightly to a large thermonuclear reaction network .",
    "the hydrodynamical evolution controls the conditions in the network such as temperature and density , and the network influences the hydrodynamic evolution strongly through energy production and modification of composition variables . as a consequence of the limitations discussed in the preceding paragraphs , the solution of large networks by the usual approaches is time - consuming and few calculations have attempted to couple the element and energy production strongly to the hydrodynamics with a network of realistic complexity .",
    "the most ambitious approaches use very small networks , perhaps tuned empirically to get critical quantities like energy production correct on average , coupled to the hydrodynamical simulation . in many calculations",
    "even this is not done and the network is replaced entirely by parameterization . then a more complete network is run in a separate `` post - processing '' step , where fixed hydrodynamical profiles computed in the hydrodynamical simulation with the small network are used to specify the variation of thermodynamic variables such as temperature and density with time .",
    "astrophysical thermonuclear networks have been used for illustration , but many problems of scientific and technical interest exhibit similar complexity .",
    "examples include astrochemical kinetics , where one must model large chemical evolution networks in contracting molecular clouds , or combustion chemistry , where chemical burning networks are strongly coupled to simulations of the dynamics of the air and fuel mixture .",
    "physically - realistic networks in such contexts would often be quite large . in combustion of larger hydrocarbon molecules or studies of soot formation , hundreds to thousands of reacting species undergoing as many as 10,000 reactions",
    "may be encountered @xcite , and in supernova explosions hundreds to thousands of nuclear isotopes with tens of thousands of reaction couplings make non - zero contributions @xcite . for such cases one finds that current techniques do not allow for a coupling of realistic reaction networks to the full dynamics of the problem and often severely truncated or highly schematic reaction networks have been used in even the most realistic simulations .",
    "to be definite , we shall assume that the coupling of reaction networks is done using operator splitting , where the hydrodynamical solver is evolved for a numerical timestep holding network parameters constant , and then the network is evolved over the time corresponding to the hydrodynamical timestep holding the new hydrodynamical variables constant .",
    "this places two basic constraints on methods :    1 .   at the end of each hydrodynamical",
    "timestep the network must be advanced with new initial conditions .",
    "thus , algorithms must be capable of rapid initialization and must not depend in a complex way on conditions from previous time intervals",
    ". 2 .   with modern processors ,",
    "existing algorithms are reasonably adequate for many post - processing calculations .",
    "in contrast , for the operator - split , parallel processing environment that is our interest here , solution of the network over a hydrodynamic timestep must be fast enough that it does not require time substantially larger than that for the hydrodynamical solution .",
    "let us elaborate further on this second point .",
    "if a single processor were used to calculate both the hydrodynamical evolution and the network evolution in one hydrodynamical zone , the network evolution over a hydrodynamical timestep interval must be fast enough to not slow the calculation by too much relative to the hydrodynamical evolution alone .",
    "if we take the point of view that we are willing to tolerate longer compute times in the interest of a much more realistic calculation , but not longer by orders of magnitude , we estimate that the network must be capable of evolving over the time interval corresponding to the hydrodynamical timestep in roughly a second or less wall clock time .",
    "we take the multidimensional , adaptive - mesh , explicit hydrodynamical flash code [ 9 ] applied to type ia supernova simulations on large parallel systems as representative .",
    "the explicit hydrodynamical timestep will be limited overall by the courant time ( roughly , because stability requires a hydrodynamical timestep not larger than the sound - crossing time for the zone ) , and more stringently in zones of rapid burning where temperature and density may be changing rapidly . in current type ia supernova simulations the courant time would typically be @xmath2 s or smaller over most of the grid for the timescale relevant for the main part of the explosion , with rapid nuclear burning and associated temperature changes limiting the hydrodynamical timestep to @xmath3@xmath4 s for some ranges of times . for qualitative estimates ,",
    "let us take as representative that a typical network integration for a single hydrodynamical timestep will be over an interval @xmath5 s during the time of strong burning and @xmath6 s over much of the approach to equilibration after strong burning .    in flash",
    ", many spatial zones will be assigned to a single mpi rank on a parallel system .",
    "therefore , in the absence of node - level parallelism ( for example , with openmp ) , the network must be capable of calculating a number of hydrodynamic time intervals in a second or less if we wish to calculate an independent network for each zone .",
    "let us take for estimation purposed that we wish to be able to reliably integrate 1000 independent networks over a time interval of say @xmath7 seconds on a single processor in one second wall clock time , with each network containing several hundred isotopes .",
    "this places extremely strong startup and speed constraints on the required network .",
    "the explicit algorithms discussed here are capable of perhaps @xmath8 network timesteps per second on a single processor with present technology for a network with @xmath9 isotopes , so our goals require a network algorithm that can integrate a time interval of order @xmath7 seconds in no more than @xmath10 timesteps , implying average stable and accurate timesteps at least as large as @xmath11 times the elapsed integration time for the corresponding hydrodynamical evolution .",
    "figure [ fig : dthydro ] illustrates .     k and initial mass density of @xmath12 .",
    "the shaded region between the two curves represents the range of timesteps an explicit network calculation must take to be able to integrate 100 - 1000 zones on a single processor over one operator - split hydrodynamical timestep in less than about one second elapsed time on modern processors .",
    "the hydrodynamical timestep lies roughly in the range @xmath13@xmath14 , where @xmath15 is the elapsed time , over most of the range of integration . to maintain network timesteps within the band for each operator - split hydrodynamical timestep",
    ", we see that the algorithm must be capable of taking stable and accurate network timesteps approximately in the range @xmath16@xmath17 over the entire range of hydrodynamical integration . ]",
    "[ fig : dthydro ]    such large timesteps are often possible with implicit and semi - implicit algorithms , but those methods are inefficient at computing each timestep ; explicit methods can compute a timestep efficiently , but timesteps this large are unthinkable with a normal explicit algorithm because they would be unstable in most realistic situations . in this and the other two papers @xcite of this series we shall demonstrate stabilization methods for explicit integration that realize such competitive integration timesteps in a variety of examples .",
    "thus we shall reopen the discussion of whether explicit methods , with their faster computation of timesteps and more favorable scaling with network size , are practical for large , stiff networks .",
    "the general task is to solve efficiently @xmath18 coupled ordinary differential equations @xmath19 subject to appropriate boundary conditions . in this expression ,",
    "the @xmath20 describe the dependent variables ( typically measures of abundance ) , @xmath15 is the independent variable ( the time in our examples ) , the fluxes between species @xmath21 and @xmath22 are denoted by @xmath23 , and @xmath24 is the effective rate for all processes depleting the species @xmath21 .",
    "the sum for each variable @xmath21 is over all species @xmath22 coupled to @xmath21 by a non - zero flux @xmath23 , and for later convenience we have decomposed the flux into a component @xmath25 that increases the abundance of @xmath26 and a component @xmath27 that depletes it . for an @xmath18-species network",
    "there will be @xmath18 such equations in the population variables @xmath26 , generally coupled to each other because of the dependence of the fluxes on the different @xmath28 .",
    "( for notational simplicity we will not always display the @xmath21 index explicitly on the right side in our equations ) . the variables @xmath26 are typically proportional to a number density for the species @xmath21 . to keep the discussion general the variable @xmath29 will be used in most of our equations , but for the specific astrophysical examples that follow we shall replace the generic population variables @xmath26 with the mass fraction @xmath30 , which satisfies @xmath31 where @xmath32 is avogadro s number , @xmath33 is the total mass density , and @xmath34 is the atomic mass number and @xmath35 the number density for the species @xmath21",
    "the carbon  nitrogen  oxygen ( cno ) cycle that powers main - sequence stars more massive than the sun provides a graphic illustration of stiffness in a relatively simple system of large physical significance .",
    "the cno cycle is displayed in fig .",
    "[ fig : cnocycle ] .",
    "[ fig : cnocycle ]    we shall illustrate by considering the primary part of the cno cycle illustrated on the right side of the figure . if the thermonuclear network corresponding to the main part of the cno cycle is integrated under typical cno cycle temperature and density conditions by explicit forward euler methods using standard rates @xcite for the reactions and constant timesteps , the integration is stable for timesteps less than or equal to 285.7 seconds , but becomes catastrophically unstable for a timestep of 285.8 seconds or more .",
    "this instability threshold is _ precisely two over the fastest rate _ for the transitions in the network , which corresponds to the @xmath36-decay of o to produce n.    we now show that this instability for forward differencing of the cno cycles arises because rapidly - decreasing small populations can become negative in an explicit integration if the timestep is too large .",
    "these negative populations export unphysical negative population that can destabilize the system because they can lead to exponentially growing solutions in small components that ultimately couple to the larger components .",
    "let us elaborate through the use of a simple model illustrated in figs.[fig : negprob][fig : o15logabsolutediverge ] , which will generalize a discussion that may be found in ref .",
    "@xcite .",
    "is presumed to be sufficiently short that the large , slow components remain essentially unchanged over a time equal to many times @xmath37 .",
    "the explicit integration for the small , fast component diverges if @xmath38 , such that @xmath39 lies in the shaded region .",
    "this divergence is exponential for longer times and quickly propagates to the larger slow components , destabilizing the entire network .",
    "the illustration of the slow components is schematic ; in typical stiff systems their timescales may be many orders of magnitude longer than those for fast components and often they are larger in value by many orders of magnitude . ]",
    "[ fig : negprob ]      in fig .",
    "[ fig : negprob ] we assume a coupled system in which there are many components varying on a relatively long timescale ( illustrated schematically by the curves at the top ) and a single component that is small and exponentially decreasing on a much faster timescale , with a typical behavior @xmath40 so that @xmath41 .",
    "let us consider timesteps that remain small compared with the larger timescales in the system ( so that for a single step we are in an approximately adiabatic situation and the populations varying on long timescales may be considered frozen ) , but comparable to or larger than the timescale set by @xmath42 .    to advance the solution for the fast component from @xmath43 to @xmath44 by the explicit euler method , we take a timestep @xmath37 and extrapolate the solution using the derivative @xmath45 evaluated at @xmath46 .",
    "the triangle of height @xmath47 in fig .",
    "[ fig : negprob ] summarizes , where @xmath48 represents the numerical solution and @xmath49 is the exact solution . from this construction",
    "we see that @xcite    1 .   for @xmath50 , the forward euler approximant for step @xmath51 will yield a value of @xmath39 that lies between 0 and @xmath52 , so that @xmath53 .",
    "2 .   for @xmath54",
    ", the sign of @xmath39 will be negative but again @xmath55 .",
    "3 .   for @xmath56 the sign of @xmath39 will be negative and @xmath57 .",
    "but for the forward euler approximation to @xmath58 we have @xmath59 , so that by iterating for @xmath60 successive steps of fixed size @xmath37 ( with @xmath61 still considerably less than the longer timescales in the system , so that the adiabatic approximation remains valid ) , we obtain @xmath62 this converges toward the correct value of zero at larger times only if the product @xmath63 lies between zero and two , implying that the maximum value of @xmath37 that yields a convergent solution is bounded by @xmath64 .",
    "thus , in fig.[fig : negprob ] the maximum stable value of @xmath37 is less than @xmath65 and any point @xmath48 extrapolated by forward euler integration that lies in the shaded zone ( that is , @xmath66 ) will be unstable under the iteration ( [ negative1.2 ] ) , diverging to infinity rather than converging to the correct value of zero . because the small , fast components are coupled to the other components of the network , this divergence will quickly destabilize the entire network .",
    "let us illustrate with a concrete example .",
    "figure [ fig : compositeconvergenceabridged ]     with @xmath67 for increasing explicit timesteps @xmath37 .",
    "generally for @xmath68 the solution converges to the correct value of zero but for @xmath69 the solution diverges to @xmath70 under successive iterations .",
    "note that the vertical scale has been increased by a factor of 10 in the rightmost figure . ]",
    "[ fig : compositeconvergenceabridged ]    corresponds to forward euler solution of @xmath71 with @xmath67 and timesteps ranging between @xmath72 and 0.03 . in this example",
    ", we see that    1 .   for @xmath68",
    ", the solution converges to zero . 2 .   for @xmath73",
    ", the solution oscillates between positive and negative values of the same absolute value and neither converges nor diverges .",
    "3 .   for @xmath69 , the solution diverges to @xmath70 under successive iterations , with the divergence exhibiting exponential behavior for larger times .",
    "figure [ fig : o15logabsolutediverge ]    o , which normally is of order @xmath4 or smaller under the conditions assumed here , can become negative .",
    "this unphysical condition is unstable and triggers an exponential runaway that quickly crashes the entire network . on the left side ,",
    "the _ absolute value _ of the envelope of the oscillating solution is plotted on a log scale , with the sign indicated adjacent to different parts of the curves .",
    "the right side shows a blowup of the region where the mass fraction begins to oscillate into negative values , now plotted on a linear scale to show clearly the envelope of the diverging oscillating solution .",
    "this figure is a generalization of fig .",
    "[ fig : negprob ] to a more complex network . ]",
    "[ fig : o15logabsolutediverge ]    applies the preceding model of the origin of the stiffness instability to the cno cycle . as noted earlier , ( for the parameters assumed ) ordinary explicit euler integration is highly unstable for a timestep larger than 285.7 seconds .",
    "this critical timestep is exactly two divided by the fastest rate parameter in the system , which is that for the @xmath36-decay of @xmath74o to @xmath75n .",
    "expressing the network in matrix form and diagonalizing indicates that the origin of this instability lies in eigenvalues that exceed unity in absolute value if @xmath76 .",
    "generalizing the discussion associated with eq.([negative1.2 ] ) , for a coupled set of equations a finite - difference iteration for @xmath60 steps entails a matrix raised to the power @xmath60 applied to the original @xmath77 vector .",
    "this is guaranteed to converge only if no eigenvalue of the matrix exceeds unity in magnitude .",
    "less abstractly , fig .",
    "[ fig : o15logabsolutediverge ] indicates that the origin of this instability for standard explicit integration is the tendency of the @xmath74o population to become negative for large explicit timesteps .",
    "this is a more complex system than the previous simple decaying - exponential example because the @xmath74o population is depleted by the @xmath36-decay but also replenished by the @xmath78 proton capture reaction on @xmath79n ( see fig.[fig : cnocycle ] and the inset diagram on the left side of fig.[fig : o15logabsolutediverge ] ) .",
    "nevertheless , we see that the origin of the stiffness instability is very similar to that illustrated in the preceding simple example : a small box population becomes unphysically negative because of taking too large a timestep , so in the next timestep the offending box exports an unphysical flux of negative population , triggering a divergence that rapidly compromises the entire network .",
    "motivated by the properties of stiffness illustrated in the previous examples , we first introduce a rather crude approximation for stabilizing explicit integration in stiff networks .",
    "although we shall discuss much better algorithms after that , it is instructive that even this simple approximation , by removing a primary source of stiffness , leads to an explicit algorithm that is usable in large , realistic , extremely - stiff networks .",
    "the results of the previous section indicate that one form of stiffness instability is generated by box populations that become very slightly negative and that these destabilize the network when they are exported as fluxes to other boxes ( effectively because this anomalous sign for the box population turns what should be exponential decay into exponential growth ) .",
    "thus , we invoke a simple flux - limiting prescription that if the population of a box becomes negative we do not change the population itself ( which would quickly violate conservation of probability ) but we suppress all export of that negative population to other boxes .",
    "thus , in the course of a calculation no flux is permitted out of boxes that have negative populations until their populations again become positive because of flux into them .",
    "formally , we require for all computed outgoing fluxes that @xmath80 . in shorthand",
    ", we refer to this as _ suppression of negative flux , _ and refer to the resulting algorithm as the _ flux - limited forward difference ( flfd ) algorithm . _ in its simplest implementation , which we shall illustrate here , we use the ( explicit ) forward euler method supplemented by the flux - limiting prescription , but the same approach can be applied to higher - order forward differencing .    because we do not alter populations but only restrict their flow by this algorithm , it conserves probability .",
    "we may expect that some populations in the network will now be in error because of the flux - suppression criterion .",
    "however , such effects tend to involve the smallest populations ( because they are the ones most easily made negative by the numerical error ) , so we may expect that this approximation could be a good one for the larger populations , with the error concentrated in the smallest populations . for large networks coupled to hydrodynamical evolution",
    "it is the changes in the larger populations that dominate energy production and concentration changes , so errors in the smaller populations are largely irrelevant .",
    "therefore , an algorithm that removes stiffness by preferentially concentrating errors in the smallest populations may be a very usable one . in the next section we test this idea on a realistic thermonuclear network .",
    "we illustrate the flux - limited forward difference algorithm by application to astrophysical thermonuclear networks under nova conditions .",
    "some representative isotopic abundances under nova ( hot cno cycle ) conditions calculated using the flfd algorithm are shown in fig .  [",
    "fig : compare ] .",
    "k and constant density @xmath81 were assumed .",
    "the explicit network contained 145 isotopes , with 924 non - zero couplings .",
    "( b )  rates and timescales characteristic of a flfd nova simulation .",
    "conditions as for part ( a ) but with a larger reaction library : 896 isotopes with 8260 couplings were included ( though only several hundred isotopes were populated significantly ) .",
    "extremal rates plotted are restricted to those involving non - zero fluxes .",
    "( c )  comparison of maximum stable timestep [ @xmath82 from part ( b ) ] possible for a standard explicit integration with much larger stable timesteps @xmath83 and @xmath84 for some representative explicit flfd integrations . ]",
    "[ fig : compare ]    an initial isotopic abundance distribution enriched in heavy elements has been assumed @xcite , and reaction rates from the reaclib library @xcite have been used .",
    "figure  [ fig : compare](a ) displays some representative populations , with the results of a standard implicit calculation  @xcite shown as dashed lines and flfd calculations shown as symbols . an adaptive timestep was used in the flfd integration , with the timestep adjusted to keep the populations transferred between boxes in a timestep for some key populations within a prescribed range .",
    "this timestep is _ much _ larger than would be stable in a standard explicit integration , as we shall discuss further in  [ ss : stiffness ] .",
    "note the very good agreement between implicit and explicit flux - limited methods over six orders of magnitude in the mass fractions in fig .",
    "[ fig : compare](a ) . in a realistic coupling of such a network to hydrodynamics in a nova simulation , isotopes with mass fractions smaller than @xmath85@xmath86 would likely be not very important to the hydrodynamical evolution .",
    "figure  [ fig : compare](b ) displays the fastest and slowest rates entering a representative flfd nova simulation as a function of time .",
    "the difference of some 18 orders of magnitude between the fastest and slowest rates at any timestep is an indication that this is an extremely stiff system . for standard explicit algorithms ,",
    "the largest timestep permitted by stiffness stability criteria generally is of order the inverse of the fastest rate in the network ( see the discussion in  [ ss : simplemod ] and in ch .",
    "16 of ref.@xcite ) . for the calculations illustrated in fig .",
    "[ fig : compare](b ) , the inverse of the fastest rate gives the lower curve in fig .",
    "[ fig : compare](c ) . thus a normal explicit algorithm would be restricted by stability requirements to timesteps lying approximately in the shaded region below this curve ( @xmath87 seconds or less ) .",
    "in contrast , fig .  [",
    "fig : compare](c ) displays two curves for stable flfd integration timesteps lying far above this region .",
    "the curve marked @xmath83 is for a timestep small enough to give accuracy comparable to fig .",
    "[ fig : compare](a ) .",
    "this timestep is seen to be about @xmath88 times larger than would be stable for a normal explicit integration .",
    "the curve marked @xmath84 is for a much larger flfd algorithm timestep that compromises accuracy for the weaker transitions but remains stable and calculates the stronger transitions correctly .",
    "the timestep @xmath84 @xmath0 100 seconds is about @xmath89 times larger than would be stable for a standard explicit algorithm . since @xmath84 already is comparable to the characteristic timescale of a nova explosion",
    ", this example exhibits a stable explicit integration timestep for a realistic , extremely stiff system that is effectively arbitrarily large with respect to the usual upper limit for explicit integration .",
    "the picture that emerges from the present results is that the flfd method is susceptible to stiffness instability , just as for any other explicit method .",
    "however , the effect of the instability can be confined to controlled errors in small populations for a range of timesteps far beyond the normal onset of stiffness instability simply by imposing a flux limiter .",
    "this flux limiter does not prohibit negative populations but prevents their export between boxes in the network and thus prevents them from growing in uncontrolled fashion .",
    "the results of the preceding section indicate that even a relatively crude limit on propagation of negative population can remove large amounts of stiffness and leads to an algorithm useful in realistic applications , even for the extremely stiff networks common in astrophysics .",
    "but we now will demonstrate that one can do much better than that , by exploiting the algebraic structure of the differential equations to make a better approximation than just constraining the sign of propagating populations .",
    "the first step is that we must look more deeply at the stiffness instability . as we now discuss , for the sort of large and very stiff networks that we are addressing here there are several fundamentally different sources of stiffness instability that are often not clearly distinguished in the literature .",
    "the examples discussed to this point ( and in many textbooks ) emphasize the type of instability associated with small quantities that should strictly be non - negative becoming negative because of an overly ambitious numerical integration step .",
    "the discussion of the flux - limited forward difference algorithm in ",
    "[ sh : flfdalgorithm ] illustrates that this type of instability can be removed by approximations that do not permit unphysical negative quantities to influence the rest of the network . however , there are other stiffness instabilities that may be initiated even when no population variables become negative in an integration step . in this kind of instability",
    "we end up having to take the difference of large numbers to obtain a result very near zero .",
    "the numerical errors that ensue in a standard explicit approach can then accumulate rapidly and destabilize the network , even before any abundances become negative .",
    "this may still be viewed as a stiffness instability because it results from a numerical integration trying to deal with very different timescales , but the origin of these timescales is different from that discussed above . in this case",
    "the disparate timescales are the very rapid reactions driving the system to equilibrium contrasted with the very slow timescale associated with equilibrium itself ( which tends to infinity ) .",
    "as we now consider , this distinction is essential to what follows because these stiffness instabilities have essentially different solutions .",
    "furthermore , we shall find that the second kind of instability can be divided into two subclasses requiring different stabilizing approximations , and that the approximations that we shall introduce in these cases will also take care naturally of the first class of stiffness instabilities because they will as a matter of course prevent the occurrence of negative probabilities in the network .",
    "we shall use `` equilibrium '' in a broad sense to mean a condition where the populations in a network are being strongly influenced by competition between terms of opposite sign on the right sides of the differential equations governing their evolution . how do we measure the degree of equilibration in a large , stiff network ? in terms of the coupled set of differential equations describing the network ,",
    "we may distinguish two qualitatively different conditions :    1 .   a macroscopic equilibration that acts at the level of individual differential equations .",
    "2 .   a microscopic equilibration that acts at the level of individual terms within a given differential equation .    let us consider each of these cases in turn .",
    "the differential equations that we must solve take the general form of eq .",
    "( [ eq1.1 ] ) , @xmath90 , where the total flux has been decomposed into a component @xmath25 increasing the population @xmath26 and a component @xmath91 depleting the population @xmath26 in a given timestep .",
    "one class of approximations that we will investigate depends upon assuming that @xmath92 ( asymptotic approximations ) or @xmath93 constant ( steady - state approximations ) .",
    "we shall refer to these conditions as a macroscopic equilibration , since they involve the entire right side of a differential equation in eq .",
    "( [ eq1.1 ] ) tending to zero or a finite constant",
    ". we shall introduce approximations exploiting this whereby whole differential equations are removed from the numerical integration for a network timestep in favor of a algebraic approximate solutions for that timestep .",
    "such approximations do nt reduce the number of equations to integrate , but they reduce the number of equations integrated _ numerically by forward difference_. they reduce stiffness for any remaining equations that are integrated numerically in the timestep because removing the equations satisfying these conditions tends to reduce the disparity in timescales for the remaining equations .      in eq .",
    "( [ eq1.1 ] ) , @xmath25 and @xmath91 for a given species @xmath21 generally each consist of a number of terms depending on the other populations in the network , @xmath94 at the more microscopic level , groups of individual terms on the right side of eq .",
    "( [ equildecomposition ] ) may come approximately into equilibrium ( the sum of their fluxes tends to zero ) , even if macroscopic equilibration conditions are not satisfied .",
    "the simplest possibility for this _ microscopic equilibration _ is that forward ",
    "reverse reaction pairs such as @xmath95 , which will contribute flux terms with opposing signs on the right sides of differential equations in which they participate , come approximately into equilibrium .",
    "then we may consider an algebraic approximation that removes groups of such terms from the numerical integration , replacing their sum of fluxes identically with zero .",
    "this will not generally reduce the number of equations to be integrated numerically in a network timestep , but it can reduce dramatically the stiffness of those equations by removing terms with fast rates from the equations , thereby reducing the disparity between the fastest and slowest timescales in the system .",
    "such considerations will be the basis of the partial equilibrium methods that will be discussed in depth in the third paper in this series @xcite .",
    "there we shall also demonstrate two important general conclusions : ( 1 )  approximations based on microscopic equilibration are much more efficient at removing stiffness than those based on macroscopic equilibration , because they target more precisely the sources of stiffness in the network .",
    "( 2 )  the most powerful approach will be to use macroscopic and microscopic approximations simultaneously in the same set of equations , because they can complement each other in removing stiffness from the equations to be integrated numerically .",
    "the preceding section suggests that when microscopic equilibration becomes important in a network , the methods for dealing explicitly with stiffness are different from those used to deal with macroscopic equilibration .",
    "therefore , it is important to establish a quantitative measure of how much microscopic equilibration is present in the network .",
    "we shall introduce the simplest possibility : that the amount of microscopic equilibration in the network is measured by the fraction of reaction pairs such as @xmath96 that are judged to be in equilibrium ( with each reaction pair considered in isolation from the rest of the network for purposes of this determination ) .",
    "the full machinery to carry this out will be described in the third paper of this series @xcite , but our essential approach will be to extend the formalism introduced by mott @xcite to derive conditions on the populations for equilibrium in a reaction pair , and to determine whether the pair is in equilibrium by comparing the actual populations computed from the preceding network timestep with the theoretical equilibrium populations .",
    "the general result that we shall obtain is that for a forward  reverse reaction pair of the form @xmath97 , the equilibrium abundance @xmath98 of each species is given by @xmath99 where @xmath100 , the parameters @xmath101 , @xmath102 , and @xmath103 are known functions of the current rate parameters and the populations at the beginning of the timestep , and the approach to equilibrium for the reaction pair is governed by a single timescale @xmath104 .",
    "we may then estimate whether a given reaction is near equilibrium at time @xmath15 by requiring @xmath105 for each species @xmath21 involved in the reaction , where @xmath29 is the actual abundance , @xmath98 is the equilibrium abundance determined by eq .",
    "( [ 2body1.6 ] ) , and @xmath106 is a user - specified tolerance that we shall choose typically to be of order @xmath85 . alternatively , we may use the equilibration timescale @xmath107 compared with the numerical timestep being taken as a measure of microscopic equilibration .",
    "we shall term a network _ strongly ( microscopically ) equilibrated _ if a significant fraction of its reaction pairs satisfy the condition ( [ 2body1.8b ] ) or its equilibration timescale @xmath107 is much less than than the current integration timestep , and _ weakly ( microscopically ) equilibrated _ if at most a few percent of its reaction pairs satisfy eq.([2body1.8b ] ) or have values of @xmath107 considerably larger than the integration timestep",
    ". the remainder of this paper will deal with methods based on asymptotic approximations to stabilize explicit integration for networks that are at most weakly equilibrated , and a second paper will deal with methods based on quasi - steady - state approximations to stabilize weakly - equilibrated systems @xcite .",
    "the corresponding stabilization of networks near microscopic equilibrium will be discussed in the third paper of this series @xcite .",
    "the flux - limited forward difference approximation described in  [ sh : novaexample ] illustrates the basic principle that explicit integration in non - equilibrium situations can be stabilized by forbidding the propagation of negative flux .",
    "however , the flfd algorithm represents only a zero - order solution to this problem ( a yes / no decision on whether flux components are allowed to propagate ) that can be improved substantially by exploiting the structure of the coupled equations to replace the numerical solution with an algebraic approximation that is strictly non - negative .",
    "although the approximations that we now discuss have been implemented in some form in earlier literature @xcite , we shall find that our implementation appears to be much more successful than previous applications to large , extremely stiff networks , and we shall reach different conclusions about these methods than those reached in earlier publications .      the differential equations that we must solve take the form given by eq .",
    "( [ eq1.1 ] ) .",
    "generally , @xmath25 and @xmath91 for a given species @xmath21 each consist of a number of terms depending on the other populations in the network . the depletion flux for the population of species",
    "@xmath21 will be proportional to @xmath26 , @xmath108 where the @xmath109 are rate parameters ( in units of time@xmath110 ) for each of the @xmath60 processes that can deplete @xmath26 , which may depend on the populations @xmath28 and on hydrodynamical variables such as temperature and density .",
    "the characteristic timescales @xmath111 will differ by many orders of magnitude in the systems of interest , implying that the equations are stiff . from eq .",
    "( [ eq1.2 ] ) we may define the effective total depletion rate @xmath112 for @xmath26 at a given time , and a corresponding timescale @xmath113 as @xmath114 permitting eq .",
    "( [ eq1.1 ] ) to be written as @xmath115 thus , in a finite - difference approximation at timestep @xmath43 we have @xmath116 we now define the _ asymptotic limit _ for the species @xmath21 to be @xmath117 , implying from eq .",
    "( [ eq1.1 ] ) that @xmath118 . in this limit",
    "( [ eq1.5 ] ) gives a first approximation @xmath119 and local error @xmath120 , respectively , for @xmath121 as @xmath122 for small @xmath123 we may then get a correction term by writing the derivative term in eq .",
    "( [ eq1.5 ] ) as @xmath124 where @xmath125 denotes order of @xmath126 .",
    "if we retain only the first term and approximate @xmath127 by @xmath128 , we obtain @xmath129 therefore , the estimate for @xmath77 is improved to @xmath130 where we now employ compact index notation @xmath131 , and so on , and have dropped the species index @xmath21 to avoid notational clutter .",
    "because we are approximating the derivative term , we expect that eq .",
    "( [ asysimple ] ) is valid only if the second term is small , implying that our approximation becomes more valid if @xmath132 is large .",
    "the preceding discussion implements an asymptotic approximation in a very simple way .",
    "other more sophisticated asymptotic approximations may be derived .",
    "for example , if we retain the full expression for the derivative in eq .",
    "( [ derivative ] ) and substitute in eq .",
    "( [ eq1.5 ] ) , we obtain @xmath133 setting @xmath134 and solving for @xmath135 gives @xmath136 where a term of order @xmath137 has been discarded .",
    "another approach is to use a predictor  corrector scheme @xcite .",
    "we may solve eq .",
    "( [ eq1.1 ] ) by finite difference , replacing quantities on the right side of eq .",
    "( [ eq1.1 ] ) with averaged quantities : @xmath138 where for notational convenience we have traded the rate parameters @xmath139 for the corresponding timescales @xmath140 . solving this equation for @xmath52 gives @xmath141 which is not easy to use because the @xmath142 and @xmath143 are implicit functions of the @xmath52 that we seek .",
    "we obtain a usable explicit algorithm by solving an approximate form of eq .",
    "( [ soln1 ] ) to get a first guess @xmath144 for @xmath52 ( the predictor step ) , using that approximate result to estimate values of @xmath142 and @xmath143 , and then using these values obtained from the predictor step to solve eq .",
    "( [ soln1 ] ) ( the corrector step ) .",
    "specifically ,    * the predictor estimate @xmath144 is obtained by setting @xmath145 and @xmath146 in eq .",
    "( [ soln1 ] ) . *",
    "the corrector value @xmath147 is obtained by substituting @xmath148 for @xmath143 , and @xmath149 for @xmath142 in eq .",
    "( [ soln1 ] ) .",
    "this yields a predictor and corrector @xcite @xmath150 where `` 0 '' denotes initial quantities and `` p '' denotes quantities computed using the results of the predictor step .",
    "we shall test the asymptotic approximations ( [ asysimple ] ) , ( [ asysophia ] ) , and ( [ asyob ] ) in examples below .",
    "the mathematical and numerical properties of asymptotic approximations have been explored in refs .",
    "@xcite and we only summarize them here .    1 .",
    "the preceding asymptotic formulas are explicit , since only quantities already known are required to advance a timestep .",
    "2 .   asymptotic methods do not need to compute jacobians or invert matrices .",
    "asymptotic methods are a - stable @xcite on linear problems .",
    "explicit asymptotic methods should scale linearly with network size .",
    "asymptotic methods require initial values from only one timestep ( self - starting ) .    a more extensive discussion may be found in oran and boris @xcite and in mott @xcite .",
    "we now use the preceding formalism to define an explicit asymptotic flux - limiting integration algorithm .",
    "since the asymptotic approximation specified above is expected to be valid if @xmath132 is large , we define a critical value @xmath151 of @xmath132 and at each timestep cycle through all network populations and compute the product @xmath152 for each species @xmath21 using eq .",
    "( [ eq1.3 ] ) and the proposed timestep @xmath153 .",
    "then , for each population species @xmath21    1 .",
    "if @xmath154 , we update the population numerically using the standard flux - limiting explicit algorithm discussed in ",
    "[ sh : flfdalgorithm ] .",
    "2 .   otherwise ,",
    "for @xmath155 , we update the population algebraically using one of the asymptotic approximations given in eqs.([asysimple ] ) , ( [ asysophia ] ) , or ( [ asyob ] ) .    from considerations such as those in  [ sh : large - stiff ] we expect an explicit integration to be stable if @xmath156 and to potentially be unstable if @xmath157 , a possible choice is @xmath158 .",
    "for the networks discussed in this paper , we have found this value of @xmath151 to work well and have adopted it .",
    "for that specific choice of @xmath151 , explicit numerical integration should be stable for those cases where it is applied , so we expect that at each timestep all abundances will remain positive and the flux - limiting prescription for the explicit numerical integration may be dropped .",
    "notice that at each timestep some species may be updated by explicit forward difference and some by the asymptotic approximation , and that the division of species between these two categories could change at each timestep since the product @xmath152 is time - dependent .",
    "implementing the preceding algorithm requires an adaptive timestepper .",
    "we take the point of view that the present task is to establish whether explicit methods can even compete with implicit methods for stiff networks .",
    "since previous studies have generally found that explicit methods fail by many orders of magnitude to attain the speeds of implicit methods in highly - stiff networks , our timestepper need not be highly optimized at this point to answer that question .",
    "the first consideration is a standard one that limits the population change at each timestep .",
    "however , the preceding algorithm does not guarantee that total population is conserved , so in setting an adaptive timestep one should make a check that ensures conservation of population at the desired level .",
    "generally , if population conservation does not satisfy the required tolerance at a given timestep , making the timestep small enough is guaranteed to improve conservation of population because it will reduce @xmath152 and therefore will tend to decrease the number of isotopes being treated asymptotically . to ensure conservation of particle number at a desired level in the overall calculation , we may limit the deviation in any one timestep to a small amount .",
    "thus , we adopt a simple timestepper with two stages :    1 .",
    "after the rates and fluxes are computed at the beginning of a new timestep , compute a trial timestep based on limiting the change in populations that would result from that timestep to some specified tolerance . use the minimum of this trial timestep and the timestep that was taken in the previous integration timestep to update the populations by the explicit asymptotic algorithm .",
    "2 .   check for conservation of population .",
    "if the conservation law is satisfied within the desired tolerance for this timestep , proceed . if it is not , or is satisfied too well , decrease or increase the timestep as appropriate by a small factor and repeat the calculation of populations with the new timestep but original fluxes .",
    "we then accept this timestep , without further check .",
    "one could also iterate to ensure that the conservation condition is satisfied at each step , but this did not significantly improve the results in our tests .",
    "far - removed from equilibrium the limitation in population changes determines the timestep with this algorithm , but in the approach to equilibrium the timestep becomes dominated by the probability conservation criterion . though it is likely not very optimized , we have found this simple timestepper to be stable and accurate for the varied astrophysical thermonuclear networks that we have tested , and thus adequate for our task here .",
    "this should be contrasted with previous attempts to apply asymptotic methods to thermonuclear networks , which failed to produce accurate results and were abandoned as unsuitable for such stiff networks @xcite .",
    "we shall be comparing explicit and implicit methods using codes that are at very different stages of development and optimization .",
    "we assume that for codes at similar levels of optimization the primary difference between explicit and implicit methods would be in the extra time spent in implicit - method matrix operations . hence , if the fraction of time spent on linear algebra is @xmath159 for an implicit code , we assume that an explicit code at a similar level of optimization could compute a timestep a factor of @xmath160 faster . in table [ tb : explicitspeedup ] we display factors @xmath161    @lll network & isotopes & speedup @xmath161 + pp & 6 & @xmath162     + alpha & 16 & 3     + nova & 134 & 7     + 150-isotope & 150 & 7.5     + 365-isotope & 365 & @xmath163     +    based on data obtained by feger @xcite using the implicit , backward - euler code xnet @xcite with both dense and sparse solvers .",
    "then we may compare roughly the speed of explicit versus implicit codes ( possibly at different levels of optimization ) by multiplying @xmath161 by the ratio of implicit to explicit integration steps required for a given problem .",
    "this procedure has obvious uncertainties , and likely underestimates the speed of an optimized explicit versus optimized implicit code @xcite , but will give a useful lower limit on how fast the explicit calculation can be .",
    "first we shall establish that the asymptotic algorithm is capable of correct integration of coupled sets of extremely stiff equations .",
    "we have tested this for a variety of calculations in two ways :    1 .",
    "comparisons with results from standard implicit codes , and 2 .   for some smaller networks where the corresponding integration time is not prohibitive , comparison with explicit forward euler calculations made with timesteps short enough to be stable .",
    "our general finding is that the asymptotic algorithm outlined above gives the same results as standard implicit and explicit codes , even for the stiffest networks found in astrophysics applications , provided that the numerical timesteps are limited sufficiently to ensure conservation of overall probability in the network at the desired level of precision .",
    "figure [ fig : compareasyexplicitt9_7rho1e8 ]     comparison of the asymptotic approximation ( [ asysimple ] ) with a forward euler integration that used timesteps short enough to be stable for an alpha network at constant temperature @xmath164 and density of @xmath165 .",
    "initial abundances corresponded to equal mass fractions of and , and rates from the reaclib library @xcite were used .",
    "the left figure compares mass fractions ; the right figure compares differential and integrated energy production .",
    "solid lines are explicit forward - euler integration with a timestep constrained to be less than the inverse of the fastest rate in the system so that it is stable ; dashed lines are the corresponding asymptotic approximation using eq .",
    "( [ asysimple ] ) .",
    "the value of @xmath166 oscillates between positive and negative values so the log of the absolute value of @xmath166 is plotted , with the sign of @xmath166 indicated in each region . ]",
    "illustrates an asymptotic approximation calculation that gives results essentially identical to results from exact numerical integration . in this example the sum of the mass fractions was constrained to deviate from unity by not more than 1% over the entire range of the calculation by requiring that if it deviates by more than @xmath3 from unity in any one timestep , the timestep is reduced in size .",
    "we shall generally use this global 1% criterion for examples presented in this paper .",
    "higher precision may be obtained by tightening this constraint , but this is typically already more conservative than justified since input parameter uncertainties in realistic large thermonuclear networks and uncertainties in the coupled hydrodynamics may each be considerably larger than 1% .",
    "having established that explicit asymptotic approximations can give correct results even for extremely stiff networks , we now turn to the question of their efficiency ( and further tests of accuracy ) by examining calculations of various astrophysical thermonuclear networks using this approximation . in this section",
    "we shall use the simplest asymptotic approximation , corresponding to eq.([asysimple ] ) . in  [ sh : asysophisticated ] we shall test the alternative asymptotic approximations of eqs .",
    "( [ asysophia ] ) and ( [ asyob ] ) .",
    "[ ppasy ]    the solar pp - chains provide a striking example of stiffness in a simple network . in fig .",
    "[ fig : ppchains ]     integration of the pp - chains under constant temperature and density characteristic of the core of the present sun : @xmath167 and a density of @xmath168 , assuming solar initial abundances .",
    "reaction rates were taken from the reaclib library @xcite .",
    "( a )  mass fractions for the asymptotic method of eq .",
    "( [ asysimple ] ) ( dotted curves ) and for the standard implicit code xnet @xcite ( solid curves ) .",
    "( b )  integration timesteps for the asymptotic method ( dotted magenta ) and the implicit method ( solid green ) .",
    "the expected maximum stable fully - explicit timestep is indicated by the dashed blue curve . ]",
    "we illustrate integration of the pp - chains at a constant temperature and density characteristic of the core in the present sun , using the asymptotic method and the implicit backward - euler code xnet @xcite .",
    "we see that the explicit asymptotic integration gives results for the mass fractions in rather good agreement with the implicit code over 20 orders of magnitude , and is generally taking timesteps @xmath169 that are comparable to those for the implicit code over the entire range of integration .",
    "( the asymptotic method required 333 total integration steps versus 176 steps for the implicit code . )    as shown in ",
    "[ sh : large - stiff ] , the maximum stable timestep for a standard explicit integration method may be estimated as the inverse of the fastest rate contributing to the network .",
    "this is illustrated by the dashed blue curve in fig .",
    "[ fig : ppchains](b ) . at late times",
    "the explicit integration timesteps are @xmath170 times larger than the maximum stable timestep for a normal explicit integration .",
    "the calculation illustrated in fig .",
    "[ fig : ppchains ] takes less than a second on a 3 ghz processor with the explicit asymptotic method ( as does the implicit solver ) .",
    "in contrast , from fig .",
    "[ fig : ppchains](b ) we estimate that a standard explicit method taking the largest stable fully - explicit timestep would require a time about 1000 times longer than the age of the universe ( @xmath171 of processor time ) to compute the pp - chains to hydrogen depletion .",
    "[ asynovaconditions ]    the preceding example entailed an exceedingly stiff but rather small network .",
    "let us now turn to an example that is highly stiff and involves hundreds of isotopes . in fig .",
    "[ fig : nova125d_xplushydroprofile](a )     ( a )  mass fractions for a network under nova conditions , corresponding to the hydrodynamical profile shown in ( b ) .",
    "the calculation used the explicit asymptotic method corresponding to eq .",
    "( [ asysimple ] ) and a network containing 134 isotopes coupled by 1531 reactions , with rates taken from the reaclib library @xcite and initial abundances enriched in heavy elements @xcite . ]",
    "we illustrate a calculation using the explicit asymptotic algorithm and a hydrodynamical profile shown in fig .",
    "[ fig : nova125d_xplushydroprofile](b ) that is characteristic of hot - cno burning in a nova outburst .",
    "the explicit asymptotic timesteps are displayed in fig .",
    "[ fig : nova125d_dtplusfraction](a ) .",
    "( a )  timesteps for integration of fig .",
    "[ fig : nova125d_xplushydroprofile ] .",
    "the solid red curve is from the asymptotic calculation .",
    "the dotted green curve is from an implicit integration using the backward - euler code xnet @xcite .",
    "the dashed blue curve estimates the largest stable fully explicit timestep as the inverse of the fastest rate in the system .",
    "( b )  fraction of isotopes that become asymptotic and fraction of reactions that reach partial equilibrium in the asymptotic - method calculation . ]    in these simulations we see that the asymptotic network takes stable and accurate timesteps corresponding to @xmath169 over most of the time integration , except in the region of sharp temperature rise and strong burning , where @xmath172 . over most of the range of integration after burning commences , the asymptotic solver timesteps ( solid red curve in fig .",
    "[ fig : nova125d_dtplusfraction](a ) ) are a million or more times larger than the maximum stable timestep for a purely explicit method ( dashed blue curve in fig .",
    "[ fig : nova125d_dtplusfraction](a ) ) ; at late times this disparity increases and by the end of the calculation the asymptotic timesteps are approximately @xmath173 times larger than would be possible for a normal explicit integration .    the generally large explicit asymptotic timesteps over the entire integration range illustrated in fig .",
    "[ fig : nova125d_dtplusfraction](a ) are greater than or equal to those for a typical implicit code , as may be seen by comparing with the implicit ( backward euler ) calculation timestepping curve shown in dotted green . in this calculation",
    "the implicit method required 1335 integration steps while the explicit asymptotic calculation required only 935 steps , and furthermore we expect that the explicit timesteps can be computed more quickly than the implicit timesteps . for a network with 134 isotopes ,",
    "an optimized explicit code should calculate a timestep perhaps 7 times faster than typical implicit codes ( table [ tb : explicitspeedup ] ) .",
    "these large explicit timesteps are possible because during the simulation many isotopes become asymptotic but few reactions reach partial equilibrium , as illustrated in fig .",
    "[ fig : nova125d_dtplusfraction](b ) .",
    "similar results for nova simulations were obtained with the asymptotic method in refs .",
    "@xcite using a different nova hydrodynamical profile and a different reaction library .",
    "we conclude that the explicit asymptotic method may intrinsically be an order of magnitude faster than a state - of - the art implicit code for simulations under nova conditions .",
    "[ asytidalconditions ]    the mass fractions as a function of time for a thermonuclear supernova event induced by tidal interaction in a white - dwarf @xcite are illustrated in fig .",
    "[ fig : tidalalpha_xplushydroprofile](a )     ( a )  mass fractions for an alpha network under tidal supernova conditions with an initial abundance of pure .",
    "the network contained 16 isotopes coupled by 46 reactions , with rates from reaclib @xcite .",
    "dotted curves calculated in asymptotic approximation using eq .",
    "( [ asysimple ] ) .",
    "solid curves calculated using the fully implicit code xnet @xcite .",
    "( b )  the corresponding hydrodynamical profile @xcite . ]    for an alpha network and the hydrodynamical profile is illustrated in fig .",
    "[ fig : tidalalpha_xplushydroprofile](b ) .",
    "dotted curves correspond to the explicit asymptotic calculation and solid curves correspond to a fully - implicit , backward - euler calculation using xnet @xcite .",
    "the mass fractions for the two calculations are almost indistinguishable .",
    "the timestepping is compared for the asymptotic calculation and xnet in fig .",
    "[ fig : tidalalpha_dtplusfraction](a ) .     ( a )",
    "asymptotic integration timesteps ( dotted red ) , integration steps for the implicit code xnet @xcite ( solid green ) and maximum stable purely explicit step ( dashed blue ) for the calculation in fig .  [ fig : tidalalpha_xplushydroprofile ] .",
    "( b )  fraction of isotopes that become asymptotic and fraction of reactions equilibrated in the network . ]",
    "we see that the timestepping for the asymptotic calculation is somewhat better than for the implicit code ( 480 total integration steps for the asymptotic calculation versus 2136 total integration steps for the implicit calculation ) . estimating that a fully - optimized explicit solver can calculate a timestep about 3 times faster than an implicit code like xnet in a 16-isotope network ( table [ tb : explicitspeedup ] )",
    ", we surmise that the asymptotic method is capable of doing the integration for fig .",
    "[ fig : tidalalpha_dtplusfraction ] perhaps 10 times faster than a current implicit code .",
    "the relatively good timestepping for the asymptotic method in this case is because essentially no reactions in the network come into equilibrium , as illustrated in fig .",
    "[ fig : tidalalpha_dtplusfraction](b ) .",
    "the flat mass fraction curves at late times in fig .",
    "[ fig : tidalalpha_xplushydroprofile](a ) are not a result of equilibrium but rather of reaction freezeout caused by the temperature and density dropping quickly at late times as the system expands ( fig .",
    "[ fig : tidalalpha_xplushydroprofile](b ) ) .    a calculation for the hydrodynamical profile illustrated in fig .",
    "[ fig : tidalalpha_xplushydroprofile](b ) but for a 150-isotope network is illustrated in fig .",
    "[ fig : tidal150xdt ] .     ( a )",
    "mass fractions for a 150-element network with 1563 reaction couplings under tidal supernova conditions , corresponding to the hydrodynamical profile shown in fig .",
    "[ fig : tidalalpha_xplushydroprofile](b ) .",
    "initially the abundance was pure and rates were taken from reaclib @xcite .",
    "the mass fractions were calculated in asymptotic approximation using eq .",
    "( [ asysimple ] ) .",
    "( b )  the corresponding integration timesteps for the asymptotic method ( dashed red ) and the implicit code xnet @xcite ( solid green ) .",
    "the maximum stable explicit timestep is estimated by the dashed blue curve . ]",
    "we note that in this example the asymptotic approximation permits timesteps that are typically 89 orders of magnitude larger than the maximum stable explicit timestep ( indicated by the dashed blue line ) .",
    "these timesteps are again competitive with those of a standard implicit code ( shown as the solid green curve in fig .  [ fig : tidal150xdt](b ) ) . in this case",
    "the implicit code took 2425 timesteps to complete the integration while the asymptotic method took 5593 integration steps , but this factor of about two fewer implicit timesteps would be more than offset by the significantly faster computation of each integration step expected for an optimized explicit asymptotic code integrating a network this large . for a 150-isotope network",
    "we expect that an optimized explicit code would be more than 7 times faster computing a timestep than an implicit code ( table [ tb : explicitspeedup ] ) , so a fully - optimized asymptotic method is probably capable of doing the integration in fig .  [",
    "fig : tidal150xdt ] several times faster than a current implicit code .    a calculation for the hydrodynamical profile illustrated in fig .",
    "[ fig : tidalalpha_xplushydroprofile](b ) for a 365-isotope network is illustrated in fig .",
    "[ fig : tidal365xdt ] .     ( a )  mass fractions calculated in asymptotic approximation using eq .",
    "( [ asysimple ] ) for a 365-element network with 4325 reaction couplings under tidal supernova conditions , corresponding to the hydrodynamical profile shown in fig .",
    "[ fig : tidalalpha_xplushydroprofile](b ) . initially the abundance was pure and rates were taken from reaclib @xcite .",
    "( b )  the corresponding integration timesteps for the asymptotic method ( dashed red curve ) and the implicit code xnet @xcite ( solid green curve ) .",
    "the maximum stable explicit timestep is indicated by the dashed blue curve . ]",
    "we note that in this example the asymptotic approximation permits timesteps that are as much as @xmath173 times larger than the maximum stable explicit timestep ( dotted blue curve ) .",
    "this timestep is again competitive with that of an implicit calculation ( solid green curve in fig .",
    "[ fig : tidal365xdt](b ) ) .",
    "the implicit calculation required 2707 integration steps , compared with 5778 steps for the asymptotic calculation .",
    "but as noted above , this factor of two advantage of the implicit calculation should be more than offset by the much more efficient computation of each timestep in an optimized asymptotic code .",
    "for this 365-isotope network we may assume from table [ tb : explicitspeedup ] that the explicit code can calculate each timestep @xmath163 times faster than the implicit code , so an optimized asymptotic code should be capable of performing the integration in fig .",
    "[ fig : tidal365xdt ] perhaps 10 times faster than a state - of - the - art implicit code .",
    "similar results for networks under tidal supernova conditions have been found in refs .",
    "although a different set of reaction network rates was used in these references , the explicit asymptotic method was again found to be highly competitive with standard implicit methods for the tidal supernova problem .      in fig .",
    "[ fig : scalingnetworksizenovasimulation ]     linear scaling of wall clock time per integration step with number of isotopes in the network for the explicit asymptotic approximation .",
    "( a )  the nova simulation of fig .",
    "[ fig : nova125d_xplushydroprofile ] .",
    "( b )  the tidal supernova simulation of figs .",
    "[ fig : tidalalpha_xplushydroprofile][fig : tidal365xdt ] .",
    "the dashed lines are drawn only to guide the eye . ]",
    "we illustrate scaling of integration time with network size for the nova simulation of fig .",
    "[ fig : nova125d_xplushydroprofile ] and the tidal supernova simulation of figs .",
    "[ fig : tidalalpha_xplushydroprofile][fig : tidal365xdt ] .",
    "the behavior is seen to be approximately linear , as expected for an explicit algorithm since no matrix inversions are required .",
    "all results presented to this point have used the simplest asymptotic formula defined in eq .",
    "( [ asysimple ] ) .",
    "this section compares results from eq.([asysimple ] ) to those obtained with the more sophisticated formulas ( [ asysophia ] ) , and ( [ asyob ] ) , for the case of an alpha network with constant @xmath174 and @xmath175 . in fig .  [ fig : xasycompositet9_5rho1e8 ]     comparison of mass fractions ( a ) and timesteps ( b ) using different asymptotic approximations for an alpha network with constant @xmath174 and @xmath176 .",
    "the network contained 16 isotopes coupled by 46 reactions , with rates taken from reaclib @xcite .",
    "initial abundances corresponded to equal mass fractions of and .",
    "simple refers to eq .",
    "( [ asysimple ] ) , he to eq .",
    "( [ asysophia ] ) , and o  b to eq .",
    "( [ asyob ] ) . ]",
    "we display a composite of the computed mass fractions and the timestepping for the asymptotic approximations corresponding to these three formulas .",
    "we find that the more sophisticated asymptotic approximations in eqs.([asysophia ] ) and ( [ asyob ] ) give results for abundances that are very similar to those from eq .",
    "( [ asysimple ] ) , but can in some cases give more favorable timestepping by factors of several .",
    "these results are representative of tests on a variety of networks and we conclude that for typical thermonuclear networks eqs .",
    "( [ asysimple ] ) , ( [ asysophia ] ) , and ( [ asyob ] ) yield similar results , except for possible differences by factors of up to 23 in computational speed .",
    "in previous sections evidence has been presented that , well - removed from equilibrium , asymptotic methods can provide stable and accurate integration of the stiffest large networks with timesteps that are comparable to those employed in standard implicit and semi - implicit stiff solvers . in practice , for astrophysical thermonuclear networks",
    "this means that timesteps are typically from @xmath177 to @xmath178 of the current time over most of the integration range , except for brief time periods where very strong fluxes are being produced and timesteps may need to be shorter to maintain accuracy . since explicit methods can generally compute each timestep substantially faster than for implicit methods , this suggests that such methods offer a viable alternative to implicit solvers under those conditions",
    ".    however , the preceding statements are no longer true when substantial numbers of reaction pairs in the network begin to satisfy microscopic equilibrium conditions ( according to the criteria given in  [ ss : measureequil ] ) .",
    "then the typical behavior for asymptotic approximations is for the timestep to become constant or only slowly increasing with integration time .",
    "( indeed , we have already seen an indication of this behavior at late times in fig .",
    "[ fig : xasycompositet9_5rho1e8](b ) ) .",
    "figure [ fig : dthydro_withband_withnetwork_withequilfraccomposite ]    . ]",
    "[ fig : dthydro_withband_withnetwork_withequilfraccomposite ]    illustrates for two different networks coupled to a single - zone hydrodynamical simulation .",
    "we see that the 19-isotope network is able only marginally to keep up with the hydrodynamical timesteps , while the 150-isotope network lags orders of magnitude behind for hydrodynamical integration times later than about @xmath179 s.    the reason for this loss of timestepping efficiency for the asymptotic method is the approach to equilibrium at late times ; this is documented in the inset plots for fig .",
    "[ fig : dthydro_withband_withnetwork_withequilfraccomposite ] , which show the fraction of reactions in the respective networks that satisfy equilibrium conditions .",
    "the reason that the 19-isotope network is able to keep up much better than the 150-isotope network is also clear from the inset plots : the 19-isotope network slowly approaches 3040% equilibration in this region , but the 150-isotope network , with much faster reactions because it includes fast proton and neutron reactions not found in the 19-isotope network , quickly reaches 70% equilibration . since in most applications for extremely stiff astrophysical networks",
    "the physical phenomena require integration over many decades of time , this lag of the asymptotic timestepping as equilibrium is approached is disastrous for such approximations and they quickly lose out to implicit methods , which can continue to take large integration steps even nearing equilibrium ( though they are inefficient at computing each timestep ) .",
    "another example of the failure of the asymptotic approximation to generate competitive timesteps is illustrated in fig .",
    "[ fig : viktorextended2alphacomposite ]",
    ".     indicates approximately the maximum stable timestep for a purely explicit method ( corresponding to the inverse of the fastest rate in the network ) .",
    "( c )  the hydrodynamic profile .",
    "( d )  fraction of isotopes that become asymptotic and the fraction of network reactions that become equilibrated in the course of the explosion . ]",
    "[ fig : viktorextended2alphacomposite ]    the asymptotic mass fractions calculated in fig .",
    "[ fig : viktorextended2alphacomposite](a ) are quite accurate in comparison with the results from standard implicit codes , but the timestepping illustrated in fig .",
    "[ fig : viktorextended2alphacomposite](b ) is not competitive with implicit methods at late times . for @xmath180 , the asymptotic integration timesteps are only of order @xmath3 seconds ,",
    "whereas the implicit code is taking timesteps larger than @xmath86 seconds at this point .",
    "the reason for this failure of the asymptotic approximation can be seen clearly in fig .  [",
    "fig : viktorextended2alphacomposite](b ) and ( d ) . in the region of rapid temperature rise illustrated in fig .",
    "[ fig : viktorextended2alphacomposite](c ) , the rates in the network increase dramatically and this causes the maximum stable explicit timestep to become much smaller , as illustrated in fig .",
    "[ fig : viktorextended2alphacomposite](b ) by the dashed blue curve .",
    "the steadily increasing explicit timestep ( solid green curve ) intersects this maximum stable explicit timestep curve near @xmath181 .",
    "but from fig .",
    "[ fig : viktorextended2alphacomposite](d ) we see that essentially no isotopes in the network satisfy the asymptotic condition at this point . thus the integration is forced to use a standard explicit method and the timestep must ( to maintain stability ) follow the decreasing dashed blue curve until around @xmath182 , when significant numbers of isotopes finally begin to satisfy the asymptotic condition and the explicit asymptotic algorithm is able begin to take timesteps larger than the explicit limit .",
    "however , at this point the asymptotic timesteps are already orders of magnitude smaller than those an implicit method would use , and the asymptotic method is able to increase the timestep by only about two orders of magnitude before the system reaches equilibrium .",
    "thus , for the entire time range from @xmath183 until @xmath180 the explicit asymptotic method computes the network accurately but its timesteps lag many orders of magnitude behind those from standard implicit methods .    as we shall explain in considerable detail in the third paper of this series @xcite ,",
    "the reason for the loss of efficiency for asymptotic methods as equilibrium is approached is that the asymptotic approximation removes a large amount of stiffness associated with macroscopic equilibration , but near ( microscopic ) equilibrium a fundamentally new source of stiffness begins to play a role and it is not generally removed by the asymptotic approximation .",
    "indeed , we see clearly from fig .  [",
    "fig : viktorextended2alphacomposite](d ) that the fraction of reactions in the network that satisfy equilibrium conditions increases rapidly beginning at @xmath184 and reaches unity by @xmath185 . in this third paper",
    "we shall describe a new implementation of _ partial equilibrium methods _ that can be used in conjunction with asymptotic methods to turn equilibrium from a liability into an asset and increase the explicit timestepping by orders of magnitude in the approach to equilibrium . in that paper",
    "we will give examples suggesting that these methods are capable of giving timestepping competitive with that of implicit methods across the entire range of interesting physical integration times for a variety of extremely stiff reaction networks .",
    "explicit numerical integration can compute a timestep faster then implicit methods , and the time to compute a network explicitly scales linearly and therefore more favorably with network size than for implicit codes .",
    "nevertheless , previous discussions of numerical integration for very stiff systems have concluded rather uniformly that explicit methods are not competitive with implicit methods for stiff networks because they are unable to take large enough stable timesteps . to quote _ numerical recipes _",
    "@xcite , `` for stiff problems we _ must _ use an implicit method if we want to avoid having tiny stepsizes . ''",
    "improvements in explicit methods based on using asymptotic and steady - state limiting solutions to remove stiffness from the network have had some success for systems of moderate stiffness such as various chemical kinetics problems .",
    "however , it has been concluded in the previous literature that such methods are not competitive , failing even to give correct results , with timesteps that are far too short to be useful even if they gave correct results , for extremely stiff networks such as those encountered commonly in astrophysical thermonuclear networks @xcite .",
    "this paper has presented evidence strongly challenging all of these conclusions .",
    "1 .   situations where small populations can become negative if the explicit timestep is too large , with the propagation of this anomalous negative population leading to exponentially growing terms that destabilize the network .",
    "situations where the right sides of the differential equations expressed as @xmath186 approach a constant derived from the difference of two large numbers ( the total flux in @xmath187 and total flux out @xmath188 ) , and numerical errors in taking this difference destabilize the network if the timestep is too large .",
    "3 .   situations where on the right sides of the differential equations expressed in the form of eq .",
    "( [ equildecomposition ] ) the net flux in specific forward - reverse reaction pairs @xmath189 tends to zero as the system approaches equilibrium , leading to large errors if the timestep is too large because the net flux is derived from the difference of two large numbers and the timescale equilibrating the populations is short compared with the desired numerical timestep .      using the extremely stiff systems characteristic of astrophysical thermonuclear networks as a stringent test",
    ", we have shown that asymptotic methods are very successful at removing the first two types of stiffness , and give correct results , even for the stiffest of thermonuclear networks , provided that adequate attention is paid to conservation of probability in the network .",
    "furthermore , we have shown various examples of stable and accurate timestepping with these methods in extremely stiff systems that are competitive with that of standard implicit codes , demonstrating in some simple but physically - important networks timesteps that are as much as 20 orders of magnitude larger than the maximum timestep that would be stable in a standard explicit method .",
    "asymptotic methods are adept at removing the first two types of stiffness listed above , permitting explicit numerical timesteps that are competitive with implicit methods even in the stiffest networks . however , we have also shown that such methods give correct results but fail to exhibit competitive timestepping when the system approaches microscopic equilibrium and the third type of stiffness instability begins to dominate . in a following paper @xcite",
    ", we shall provide evidence for competitive timestepping , even in the approach to equilibrium , if the explicit asymptotic method is supplemented by partial equilibrium approximations designed specifically to deal with the third type of stiffness instability .",
    "taken together , this paper and the following ones on quasi - steady - state methods @xcite and partial equilibrium methods @xcite present compelling evidence that algebraically - stabilized explicit integration methods are capable of timesteps competitive with implicit integration methods for a variety of highly - stiff reaction networks . since explicit methods can execute a timestep faster than an implicit method in a large network , our results suggest that algebraically - stabilized explicit algorithms may be capable of performing as well as , or even substantially outperforming , implicit integration in a variety of moderate to extremely stiff applications . because of the highly - favorable linear scaling for explicit methods , this fundamentally new view of the efficacy of explicit integration for stiff equations may be particularly important for applications in any field where it is imperative that more realistic  and therefore much larger  networks be used in complex physical simulations .",
    "we thank tony mezzacappa for useful discussions , austin harris for help with some of the calculations , eric lingerfelt for programming assistance , and christian cardall for a careful reading of the manuscript .",
    "research was sponsored by the office of nuclear physics , u.s .",
    "department of energy .",
    "fryxell b , olson k , ricker p , timmes f x , zingale m , lamb d q , macneice p , rosner r , truran j and tufo h 2000 flash : an adaptive mesh hydrodynamics code for modeling astrophysical thermonuclear flashes _ astrophys .",
    "j. suppl . _",
    "* 131 * 273 - 334"
  ],
  "abstract_text": [
    "<S> we show that , even for extremely stiff systems , explicit integration may compete in both accuracy and speed with implicit methods if algebraic methods are used to stabilize the numerical integration . </S>",
    "<S> the required stabilizing algebra depends on whether the system is well - removed from equilibrium or near equilibrium . </S>",
    "<S> this paper introduces a quantitative distinction between these two regimes and addresses the former case in depth , presenting explicit asymptotic methods appropriate when the system is extremely stiff but only weakly equilibrated . a second paper </S>",
    "<S> @xcite examines quasi - steady - state methods as an alternative to asymptotic methods in systems well away from equilibrium and a third paper @xcite extends these methods to equilibrium conditions in extremely stiff systems using partial equilibrium methods . </S>",
    "<S> all three papers present systematic evidence for timesteps competitive with implicit methods . because an explicit method can execute a timestep faster than an implicit method </S>",
    "<S> , algebraically - stabilized explicit algorithms might permit integration of larger networks than have been feasible before in various disciplines .    </S>",
    "<S> _ keywords _ : ordinary differential equations , reaction networks , stiffness , reactive flows , nucleosynthesis , combustion </S>"
  ]
}
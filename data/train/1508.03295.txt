{
  "article_text": [
    "in the last years , we have seen increased efforts of statistical physicists to tackle stochastic dynamical processes in networks in order to study various phenomena @xcite such as ordering processes , the spreading of epidemics and opinions , synchronization , collective behavior in social networks , stability under perturbations , or avalanche dynamics .",
    "a drastic simplification can be achieved when short cycles in the network , defined by interaction terms , are very rare .",
    "this is the case for locally tree - like graphs such as random regular graphs , erds - rny graphs , and gilbert graphs . for such random graphs with @xmath0 vertices , almost all cycles have length @xmath1 such that their effect is negligible in the thermodynamic limit @xcite .",
    "for static problems , this has been exploited in the so - called cavity method @xcite , where conditional nearest - neighbor probabilities are computed iteratively within the bethe - peierls approximation .",
    "the method was very successfully applied to study for example equilibrium properties of spin glasses @xcite , computationally hard satisfiability problems @xcite , and random matrix ensembles @xcite .",
    "this big success has motivated the generalization of the cavity method to dynamical problems @xcite , which is known as the dynamic cavity method or dynamic belief propagation .",
    "as the number of possible trajectories and , hence , the computational complexity increase exponentially in time , applications have however been quite restricted to either very short times @xcite , oriented graphs @xcite , or unidirectional dynamics with local absorbing states @xcite . in the latter case , one can exploit that vertex trajectories can be parametrized by a few switching times .",
    "another idea has been to neglect temporal correlations completely as in the one - step method @xcite or to retain only some @xmath2 correlations as in the 1-step markov ansatz @xcite . while this works well sometimes for stationary states at high temperatures , such approximations are usually quite severe for short to intermediate times or low temperatures .    in this paper , we present an efficient novel algorithm for the solution of the parallel dynamic cavity equations for generic ( locally tree - like ) graphs and generic bidirectional dynamics . the central objects in the dynamic cavity method are conditional probabilities for vertex trajectories of nearest neighbors  the so - called edge messages .",
    "as temporal correlations are decaying in time and/or time difference @xmath3 , we can approximate each edge message by a matrix product , i.e. , there is one matrix for every edge , edge state , and time step , encoding the temporal correlations in the corresponding part of the evolution .",
    "it turns out that the dimensions of these matrices do not have to be increased exponentially in time .",
    "one can obtain quasi - exact results with much smaller matrix dimensions .",
    "computation costs and precision can be tuned by controlling the dimensions in truncations .",
    "the idea of exploiting the decay of temporal correlations to approximate edge messages in matrix product form is in analogy with the use of matrix product states @xcite for the simulation of strongly correlated , mostly one - dimensional , quantum many - body systems .",
    "these have been used very successfully in algorithms like the density - matrix renormalization group @xcite to compute for example quantum ground - state properties , often with machine precision @xcite . besides lifting the restrictions of the aforementioned approaches , the matrix product edge - message ( mpem ) algorithm can also outperform monte carlo simulations ( mc ) of the dynamics in important respects . in particular , besides allowing for the simulation of single instances , alternatively , one can work directly in the thermodynamic limit .",
    "perhaps more importantly , it has a favorable error scaling .",
    "while statistical errors in mc decay very slowly with the number of samples @xmath4 as @xmath5 , mpem yields also observables with absolutely small expectation values with very good precision which is essential for the study of decay processes and temporal correlations .",
    "[ fig : msgsubgraph ] .,title=\"fig : \" ]    let @xmath6 denote the state of vertex @xmath7 at time step @xmath8 , and @xmath9 the state of the full system at time @xmath8 . given the state probabilities @xmath10 for time @xmath8 , we evolve to the next time step , @xmath11 , by applying the stochastic transition matrix @xmath12 . as vertex @xmath7 interacts only with its nearest neighbors @xmath13 , the probability for @xmath14 only depends on the states @xmath15 of these vertices at the previous time step such that the global transition matrix @xmath12 is a product of local transition matrices @xmath16 , @xmath17 here @xmath18 , and @xmath19 is the state of the nearest neighbors of vertex @xmath7 at time @xmath8 . in the cavity method @xcite , one neglects cycles of the ( locally tree - like ) graph according to the bethe - peierls approximation to reduce this computationally complex evolution to the dynamic cavity equation @xcite @xmath20\\\\        \\times \\big[\\prod_{k\\in\\partial i\\setminus\\{j\\ } } \\mu_{k\\to i}({\\bar{\\sigma}}_k^{t}|{\\bar{\\sigma}}_i^{t-1})\\big]\\end{gathered}\\ ] ] which only involves the so - called edge messages @xmath21 for the edges of a single vertex @xmath7 . for simplicity",
    ", we have assumed that vertices are uncorrelated in the initial state such that @xmath22 .",
    "the edge messages @xmath23 in the dynamic cavity equation are conditional probabilities for the trajectories @xmath24 and @xmath25 on edge @xmath26 .",
    "specifically , if we consider a tree graph and cut off everything `` right '' of vertex @xmath27 as indicated in figure  [ fig : msgsubgraph ] by the dashed line , @xmath23 denotes the conditional probability of a trajectory @xmath28 on vertex @xmath7 , given the trajectory @xmath29 on vertex @xmath27 .",
    ".   constructs @xmath30 out of the edge messages @xmath31 of the previous time step .",
    "this is exact for tree graphs and covers locally tree - like graphs in the bethe - peierls approximation .",
    "although we have gained a lot in the sense that the computational complexity is now linear in the system size , it is still exponential in time @xmath8 , if we were to encode the edge messages without any approximation .",
    "to circumvent this exponential increase of computation costs , we can exploit the decay of temporal correlations and approximate the exact edge message by a matrix product @xmath32\\\\      \\times a^{(t)}_{i\\to j}(\\sigma_i^{t-1})a^{(t+1)}_{i\\to j}(\\sigma_i^{t}).\\end{gathered}\\ ] ] the particular choice of assigning vertex variables @xmath33 and @xmath34 to the @xmath35 matrices @xmath36 occurring in the matrix product , is advantageous for the implementation of the recursion relation for mpems as will become clear in the following . in order for the matrix product to yield a scalar ,",
    "we set @xmath37 .",
    "[ fig : mpem ]     the time - evolution starts at @xmath38 with @xmath39 . using the dynamic cavity equation , we iteratively build matrix product approximations for edge messages for time @xmath40 from those for time @xmath8 .",
    "it is simple to insert the matrix product ansatz for the edge messages in the dynamic cavity equation , but not trivial to bring the resulting edge message again into the canonical mpem form as required for the subsequent evolution step . the specific assignment of the vertex variables to matrices in eq .",
    "has been chosen such that all contractions ( products and sums over vertex variables ) occurring in the cavity equation are time - local in the sense that , given mpems @xmath31 in canonical form for all neighbors @xmath41 , the resulting @xmath42 can be written in ( non - canonical ) matrix product form as @xmath43.\\ ] ] as depicted in figure  [ fig : mpem]b , the tensors @xmath44 for @xmath45 are obtained by contracting a local transition matrix @xmath46 with tensors @xmath47 from the time-@xmath8 mpems .",
    "this contraction entails a sum over the @xmath48 common indices @xmath49 , where @xmath50 is the vertex degree .",
    "assuming for the simplicity of notation that the matrix dimensions @xmath51 for all time-@xmath8 mpems are identical , the resulting matrices @xmath52 $ ] have left and right indices of dimensions @xmath53 and @xmath54 , respectively .",
    "the contraction for tensor @xmath55 is very similar and @xmath56 $ ] .",
    "in preparation for the next time step , we now need to bring the evolved edge message back into canonical form .",
    "furthermore , we need to introduce a controlled approximation that reduces the matrix dimensions because they would otherwise grow exponentially in time . both , a reordering of the vertex variables @xmath57 and @xmath58 in the matrix product and a controlled truncation of matrix dimensions can be achieved by sweeping through the matrix product and doing certain singular value decompositions ( svd ) @xcite of the tensors .",
    "let us shortly explain the notion of truncations at the example of a matrix product @xmath59 , where @xmath60 is an @xmath35 matrix and @xmath61 . in order to reduce in a controlled way , e.g. , the left matrix dimension @xmath62 of @xmath63",
    ", we suggest to do an svd of the matrix product such that @xmath64 where we have grouped the variables to @xmath65 and @xmath66 . @xmath67 and @xmath68 are isometric matrices ; @xmath69 and @xmath70 .",
    "now , truncating some of the singular values @xmath71 , such that only the @xmath72 largest are retained , we obtain the controlled approximation @xmath73 note that this truncation scheme guarantees the minimum possible two - norm loss @xmath74 for the given new matrix dimension @xmath72 .",
    "while it seems very desirable to discard unimportant information and control the growth of computation cost through such truncations , the svd appears to be an insurmountable task . assuming that each variable @xmath75 can take @xmath76 different values and that @xmath77 , the cost for the svd would scale exponentially in time like @xmath78 @xcite .",
    "however , the beauty of matrix products is that such an svd can in fact be done sequentially with linear costs of order @xmath79 ( @xmath80 ) as follows .",
    "first , we do an exact transformation of the matrix product to bring it to the form @xmath81 , where tensors @xmath82 and @xmath83 obey the left and right orthonormality constraints @xmath84 respectively .",
    "this is achieved through a sequence of svds .",
    "it starts with the svd @xmath85 , where @xmath86 is a diagonal matrix of singular values , @xmath87 is isometric according to @xmath88 and @xmath89 obeys eq .  .",
    "the sweep continues with the svd @xmath90 and so on until the computation of @xmath91 .",
    "analogously , we do a second sequence of svds starting from the right and ending with @xmath92 and , finally , define the central tensor as @xmath93 .",
    "after this somewhat laborious preparation , we can do the actual truncation , based on the svd @xmath94 with the same singular values @xmath95 as in eq .  .",
    "with the @xmath96 matrix @xmath97_{kk'}:=\\delta_{kk'}\\lambda_k$ ] , the truncated matrix product takes the form @xmath98    [ fig : glauber ]     with this tool in hand , we can now truncate the evolved edge message and bring it back into canonical form . in a first sweep from right ( @xmath99 ) to left ( @xmath100 ) , using svds , we can sequentially impose the right orthonormality constraints [ see eq .  ] on the @xmath101-tensors . in a subsequent sweep from left to right , again based on svds , we can now truncate the tensors to decrease bond dimensions from @xmath102 to something smaller .",
    "what is left , is to reorder the indices @xmath103 and @xmath104 of the vertex variables . in a sweep from right to left",
    ", we go from the variable assignment @xmath105 in the truncated and orthonormalized version @xmath106 of the mpem to the assignment @xmath107 in the matrix product @xmath108 d^{(t+1)}_{i\\to j}(\\sigma_i^{t+1}).\\ ] ] at the right boundary , we start with an svd and controlled truncation @xmath109 , and continue with @xmath110 and so on until ending at @xmath100 . in an analogous final sweep from left to right , we change to the canonical variable assignment @xmath111 as in eq .  .",
    "after executing these steps for all edge messages , the next evolution step from @xmath40 to @xmath112 can follow .",
    "the joint probability of trajectories @xmath113 and @xmath29 for the vertices of an edge @xmath26 is given by the product of the two corresponding edge messages .",
    "after marginalization , one obtains for example the probability for the edge state @xmath114 at time @xmath8 as @xmath115 in the mpem approach , this can be evaluated efficiently , as indicated in figure  [ fig : mpem]c , by executing the contractions sequentially from left ( @xmath100 ) to right ( @xmath116 ) .",
    "similarly , one can for example also compute temporal correlators @xmath117 from probabilities @xmath118 .",
    "figure  [ fig : glauber ] compares the simulation of glauber dynamics @xcite using our mpem algorithm to mc simulations and to the 1-step markov approximation @xcite .",
    "specifically , we have ising spins interacting ferromagnetically on @xmath119 random regular graphs , with local transition matrices @xmath120 . in the initial state ,",
    "all spins have magnetization @xmath121 , i.e. , @xmath122 .",
    "besides being applicable for single instances of finite graphs , the mpem approach gives also direct access to the thermodynamic limit .",
    "for disordered systems this can be done in a population dynamics scheme . the homogeneous case , considered here , is particularly simple as all edges of the graph are equivalent in the thermodynamic limit .",
    "hence , one can work with a single mpem .",
    "figure  [ fig : glauber]a shows the evolution of the magnetization . in the ferromagnetic phase ( @xmath123 ) , it approaches a finite equilibrium value , whereas it decays to zero in the paramagnetic phase ( @xmath124 ) . as shown for @xmath123 , mc simulations contain finite size effects which become small for the system with @xmath125 sites .",
    "mc errors decrease slowly when increasing the number of samples @xmath4 as @xmath5 .",
    "this is problematic for observables with small absolute values where cancellation effects make it difficult to get a precise estimate .",
    "this is , e.g. , apparent in the magnetization decay for @xmath124 which , in contrast , is very precisely captured with mpem . in these simulations",
    ", we control the mpem precision by keeping only singular values @xmath126 above a threshold , specified by @xmath127 .",
    "decreasing @xmath128 , increases precision and computation costs .",
    "the 1-step markov approximation @xcite is not suited to handle temporal correlations . at long times it performs well for @xmath124 and fairly good for @xmath123 , but deviates rather strongly at earlier times .",
    "figure  [ fig : glauber]a shows the connected temporal correlation function @xmath129 for @xmath123 as a function of @xmath130 for several times .",
    "its decay behavior can be difficult to impossible to capture with mc . in the example , mc deviations are often orders of magnitude above those of the numerically cheaper mpem simulations .",
    "the novel mpem algorithm , based on matrix product approximations of edge messages allows for an efficient and precise solution of the dynamic cavity equations .",
    "besides lifting restrictions of earlier approaches , mentioned in the introduction , it gives direct access to the thermodynamic limit , and its error scaling is favorable to that of mc simulations .",
    "we think that it is a very valuable tool , particularly , as it yields temporal correlations and other decaying observables with unprecedented precision and gives access to low - probability events .",
    "this opens a new door for the study of diverse dynamic processes and inference or dynamic optimization problems for physical , technological , biological , and social networks ."
  ],
  "abstract_text": [
    "<S> we describe and demonstrate an algorithm for the efficient simulation of generic stochastic dynamics of classical degrees of freedom defined on the vertices of a locally tree - like graph . </S>",
    "<S> networks with cycles are treated in the framework of the cavity method . </S>",
    "<S> such models correspond for example to spin - glass systems , boolean networks , neural networks , or other technological , biological , and social networks . </S>",
    "<S> building upon ideas from quantum many - body theory , the algorithm is based on a matrix product approximation of the so - called edge messages  conditional probabilities of vertex variable trajectories . </S>",
    "<S> the matrix product edge messages ( mpem ) are constructed recursively . </S>",
    "<S> computation costs and precision can be tuned by controlling the matrix dimensions of the mpem in truncations . </S>",
    "<S> in contrast to monte carlo simulations , the approach has a better error scaling and works for both , single instances as well as the thermodynamic limit . as we demonstrate at the example of glauber dynamics , due to the absence of cancellation effects , observables with small expectation values can be evaluated reliably , allowing for the study of decay processes and temporal correlations . </S>"
  ]
}
{
  "article_text": [
    "twenty - first century life depends on the reliability of critical infrastructure networks . typically , these networks operate close to the unstable region : an increase in flow leads to network congestion or even shut - down  @xcite . without properly designed congestion control ,",
    "the consequences can be catastrophic , as in the congestion collapse on the internet  @xcite . in 1986 , the internet ( then arpanet ) was a slow ( 56 kbps ) and small network with a large number of hosts ( 5,089 )  @xcite .",
    "in october that year , the link between university of california , berkeley and lawrence berkeley national laboratory ( 360 m long ) suffered a drop in flow rate by three orders of magnitude from 32kbps to 40 bps .",
    "the reason for the collapse can be traced to the control mechanism implemented at the time , which focused on congestion at the receiver .",
    "the network , however , became the bottleneck .",
    "two years later , van jacobson redesigned the tcp congestion control algorithm  @xcite , enabling the internet to expand in size and speed .",
    "the recent interest in controlling networks , revives the problem of congestion control , and uncovers a new range of problems of network design at the interface between physics , engineering and the social sciences  @xcite .",
    "a network is at the onset of congestion when at least one edge is carrying traffic at its capacity  @xcite .",
    "when there is an attempt to increase traffic on that edge beyond its capacity , the network becomes congested and the throughput at that edge does not increase any further , even if the traffic load presented to the edge increases .",
    "although much work has been done to characterise congestion control mechanisms  @xcite and the topology of large random networks  @xcite , little is known about the interplay between the control algorithms and network structure  @xcite .",
    "furthermore , while congestion control methods have been in operation in communication networks since the 1980s , the relative performance of these algorithms on large random networks remains illusive .    in modelling congested complex networks ,",
    "researchers typically look for the value of a control parameter for which the network reaches the onset of congestion and derive results , such as the onset of congestion as a function of network topology and parameters  @xcite , optimal topologies for local search with congestion  @xcite , scaling of fluctuations in a model of an @xmath0 queueing system  @xcite , improved routing protocols  @xcite , the impact of community structure on the transport of information  @xcite , an edge weighting rule to lower costs with node capacity and increase the packet generation rate at the onset of congestion  @xcite , and the emergence of extreme events in interdependent networks  @xcite .",
    "these studies have the serious limitation that researchers have focused on gaining insights into congested networks assuming no controller , but only a parameter that is the rate at which each source node generates packets .",
    "while not controlling the system is a first approximation to the modelling , flows in most real - world networks are a consequence of closed - loop control . without control mechanisms , incoming flows at the sources",
    "do not have upper bounds , and limited network capacity may shut down congested networks , leading to congestion collapse ( see methods , section ` avoiding congestion collapse on the ring lattice ' ) .",
    "moreover , the lack of a controller implies that the sending frequency of packets is uniform on the network , with the transition from free flow to congestion determined by the nodes with the smallest ratio between capacity and the number of incident paths .",
    "because all rates are uniform , only one , or a small number of nodes are fully utilized at the onset of congestion and thus this method seriously underestimates the flow that can be transported on congested networks .",
    "while traditionally network flows are modelled by maximizing the network throughput ( max - flow ) or minimizing the costs ( minimum - cost ) , such efficient allocations can leave some users with zero flow , an unfair solution from the user point of view .",
    "congestion control algorithms solve this problem by achieving cost - effective and scalable network protocols that share the network capacity among users in a fair way .",
    "these algorithms allocate path flows to paths connecting source to sink nodes ( see methods , section ` the mathematics of congestion control ' ) . in doing so , they capture fairness by a family of user utility functions , called @xmath1-_fair _",
    "@xcite : @xmath2{ll } \\frac{f_j^{1-\\alpha}}{1-\\alpha } & \\text{for } \\alpha\\geq 0,\\",
    "\\alpha\\neq 1\\\\ \\log(f_j ) & \\text{for } \\alpha=1 , \\end{array } \\right .",
    "\\label{eq : alpha_fairness}\\ ] ] where @xmath3 is a path ( or user ) , and @xmath4 is the path flow assigned to path @xmath5 . the algorithms maximise the aggregate utility @xmath6 , under the constraint that the path flows are feasible ( i.e. ,  all path flows are non - negative and no edge flow exceeds edge capacity ) .    for @xmath7 , we recover the _ max - flow _ allocation that maximises the network throughput  @xcite @xmath8 . for @xmath9",
    ", we find the _ proportional fairness _ ( pf ) allocation ( see methods , section ` the mathematics of congestion control ' ) , an algorithm that manages congestion via lagrange multipliers , which can be interpreted as an edge price .",
    "the proportional fairness optimisation problem is convex , with the implication that its primal and dual formulations are equivalent .",
    "the primal problem is solved for the path flows , whereas the dual is solved for the lagrange multipliers , or shadow prices .",
    "both the primal and the dual problems can be posed as decentralised optimisation problems and solved as a system of coupled odes  @xcite , which is much more efficient in large real - world networks than centralized control .",
    "algorithmically , in the primal problem , source nodes ramp up the path flow additively , but decrease it multiplicatively if at least one edge on the path is used close to capacity .",
    "the size of the system of coupled odes in the primal is determined by the number of paths in the network ; in contrast , the number of odes in the dual is given by the number of network edges , and is thus only dependent on network topology .",
    "hence , if the number of paths is much larger than the number of network edges it is preferable to solve the dual instead of the primal  @xcite .",
    "the _ max - min fairness _ allocation is defined by @xmath10 in eq .",
    "( [ eq : alpha_fairness ] ) ; it is typically found , however , with a more efficient algorithm that maximises the use of network resources by users with the minimum allocation . once these poor  users get the largest possible allocation , the process repeats iteratively for the next less well - off users  @xcite .",
    "intuitively , a set of path flows is max - min fair if the wealthy can only get wealthier by making the poor even poorer .",
    "the _ uniform - flow _ problem is determined by the maximisation of the aggregate utility @xmath11 for any @xmath12 , with the added constraint that all path flows are the same , which implies the optimum is independent of @xmath1 .",
    "the @xmath1-fairness utility function provides a social planner with a way to understand the trade - off between efficiency ( @xmath7 ) and a continuum of models of fairness , such as proportional fairness ( @xmath9 ) and max - min fairness ( @xmath10 )  @xcite .",
    "the proportional fairness allocation is especial , because the system and the users simultaneously maximise their utility functions , and because it is implemented in communication networks  @xcite .    to gain insights on how varying @xmath1 ( i.e. ,  the congestion control algorithm ) and the network topology affect network throughput , fairness and the location of bottleneck edges , we ask several questions .",
    "first , can the throughput of proportional fairness ( @xmath9 ) converge to that of max - flow ( @xmath7 ) or max - min fairness ( @xmath10 ) depending on network topology and path layout ?",
    "second , what is the effect in network throughput of not controlling ( max - flow and uniform - flow ) versus controlling ( proportional fairness and max - min fairness ) path flows ?",
    "this question is relevant , since most of the literature on complex networks analyses congestion with uniform flows  @xcite , or uses field - specific network simulators  @xcite .",
    "third , what is the relation between the degradation of network throughput and the gain in fairness as we independently increase the number @xmath13 of shortest paths , the fairness @xmath1 of the algorithm , and the skewness of network degree ( from er to sf ) ?",
    "finally , how does the location of bottleneck edges vary with network topology as @xmath1 grows ?",
    "to illustrate the phenomenon of congestion collapse , we first analyse the network throughput on a ring lattice , under a simple protocol that distributes edge capacity proportionally to flows on the paths that pass through an edge .",
    "individual users may increase the flow they inject on the network with the aim of raising their edge capacity quota , queues then build up at the nodes and the lattice becomes congested .",
    "surprisingly , as the injected flow grows , the network throughput does not converge to an upper bound as intuitively expected , but to zero .",
    "this collapse , however , can be avoided if we control congestion with the @xmath1-fair family of algorithms of eq .",
    "( [ eq : alpha_fairness ] ) ( see methods , section ` avoiding congestion collapse on the ring lattice ' ) . intuitively , network throughput should decrease with an increase in @xmath1 , so that it is larger or equal for max - flow than for proportional fairness , larger or equal for proportional fairness than for max - min fairness , and in turn larger or equal for max - min fairness than for uniform - flow . in other words",
    ": we expect that the price to pay for increasing fairness is a decrease in throughput , such that the proportional fairness allocation is a trade - off between efficiency ( max - flow ) and fairness ( max - min fairness , and uniform - flow ) .",
    "our intuition is right for small ring lattices , but as the number of nodes in the ring grows , the number of paths also grows and throughput in the proportionally fair and max - flow allocations converge .",
    "indeed , proportional fairness penalises long paths because these use more network resources than short paths .",
    "as the size of the ring grows , the long path gets less and less flow , and proportional fairness converges to max - flow .",
    "in contrast , max - min fairness yields a lower throughput than these two protocols because it assigns the same allocation to all paths ( see methods , section avoiding congestion collapse on the ring lattice ) .",
    "hence , the ring lattice illustrates the counter - intuitive phenomena of congestion collapse , as well as , in the presence of congestion control , the surprising converge of proportional fairness to max - flow as the ring size grows .",
    "these observations made on a regular network topology with a regular structure of paths , are in sharp contrast with our findings on random networks .     as a function of the number @xmath13 of shortest paths , for max - flow , proportional fairness , max - min fairness , and the uniform - flow .",
    "we average over 200 randomly generated sf and er networks with @xmath14 nodes .",
    "the 95% confidence intervals are smaller than the symbols .",
    "we observe similar results for @xmath15 ( see fig .",
    "[ fig : si1 ] of the supplementary information).,scaledwidth=60.0% ]    we now study the effect of controlling congestion on undirected , unweighted ( unit edge capacity , i.e. ,  c=1 ) networks with a poisson degree distribution , via the erds - rnyi ( er ) model , and with a scale - free degree distribution ( sf ) .",
    "we regard each random network as a substrate , and draw @xmath13 shortest paths with uniform probability from the set of all possible shortest paths on the network .",
    "we next study the congestion control algorithms on the transport overlay network  @xcite determined by the nodes and edges of the substrate network that are crossed by at least one path   ( see methods , section ` network models ' ) .",
    "in contrast to a large ring lattice , where the throughput of proportional fairness approaches that of the efficient ( max - flow ) allocation , on a large er or sf network proportional fairness approaches the equitable ( max - min fair ) throughput ( see fig .  [",
    "fig : fig1 ] ) .",
    "the convergence of proportional and max - min fairness is due to the randomness of network topology , which breaks down the very specific pattern of path intersections that we analysed in the ring lattice , i.e. ,  long paths crossed only by short paths .",
    "hence , a network operator can choose to implement proportional fairness instead of max - min fairness , with little sacrifice in throughput .",
    "this is important in real - world networks , because proportional fairness can be implemented with decentralised algorithms  @xcite .    in networks with a large number of paths , fig .",
    "[ fig : fig1 ] clearly illustrates the major limitations of an analysis of congestion based exclusively on uniform - flow .",
    "first , the uniform - flow assignment leaves these networks severely under - utilised .",
    "indeed , the uniform - flow throughput in networks with @xmath16 paths is 5.92% ( 29.71% ) of the max - min fairness throughput , and only 4.03% ( 15.59% ) of max - flow in sf ( er ) networks .",
    "second , er networks with a large number @xmath13 of paths have higher throughput than sf networks with the same @xmath13 in the uniform - flow allocation . following the uniform - flow based literature@xcite",
    ", we would conclude that er perform better than sf networks at the onset of congestion .",
    "in contrast , throughput is higher in sf than in the er networks for all other congestion control algorithms . taken together",
    ", these results suggest that uniform - flow yield poor measures of the network throughput in complex networks , and may lead to misleading conclusions regarding the performance of congested networks , highlighting a major short fall with the current line of work  @xcite .     as a function of the number @xmath13 of shortest paths .",
    "we average over @xmath17 randomly generated sf and er networks with @xmath14 nodes .",
    "whiskers show the @xmath18 confidence interval .",
    "the gini coefficient is zero for uniform - flow , independently of the number @xmath13 of shortest paths .",
    "we observe similar results for @xmath15 ( see fig .",
    "[ fig : si3 ] of the supplementary information).,scaledwidth=60.0% ]    as the number @xmath13 of shortest paths grows , the solutions of max - flow share edge capacity on min - cuts among a relatively small number of paths , leaving most paths with zero flow ( see  fig .",
    "[ fig : si2 ] of the supplementary information ) and , thus , creating a large inequality in the assignment of path flows .",
    "although max - flow is an extreme case , inequality is present in all congestion control algorithms . to quantify inequality , fig .",
    "[ fig : fig2 ] shows the gini coefficient estimator of path flows for max - flow , proportional and max - min fairness ( see methods , section ` gini coefficient ' ) , showing the allocation of path flows becomes more unfair for all algorithms with the growth of the number @xmath13 of paths .",
    "we start by analysing the effect of network topology in the inequality of path flows .",
    "we observe no significant difference between the inequality of er and sf networks in max - flow .",
    "in contrast , for proportional fairness and max - min fairness , inequality is determined by the network topology , with sf networks being remarkably more unequal than er . taken together , figs .",
    "[ fig : fig1 ] and [ fig : fig2 ] illustrate how to adjust the trade - off between throughput and fairness .",
    "first , as the number @xmath13 of shortest paths increases , network throughput also increases , but the network becomes less fair , with only a few paths allocated high path flows .",
    "second , as @xmath1 increases , the network becomes fairer , but throughput decreases . finally , increasing the skewness in network degree from er to sf networks increases the throughput in max - min fairness and proportional fairness , but decreases the equity of path flow allocations .",
    "random realizations of er and sf networks with @xmath19 nodes and average node degree @xmath20 ( panels a and b ) .",
    "the insets show the corresponding values of the standard deviation , illustrating that the predictability of bottleneck location improves with the increase in edge betweenness .",
    "panels c and d ( er networks ) , as well as e and f ( sf networks ) show histograms of edge betweenness centrality , where the shaded area of each bin is the proportion of bottleneck edges in the bin .",
    "bottlenecks are saturated edges , that is edges for which @xmath21.,scaledwidth=100.0% ]    the relation between network topology and the location of congested edges is crucial for both network designers and operators .",
    "network designers wish to anticipate the location of bottlenecks during the design stage , so as to avoid weak links in the areas with the highest expected traffic , and to place the sensor and communication network infrastructure so as to minimize expenses with the overlaid control network .",
    "likewise , network operators wish to determine the links that require a capacity upgrade if routing changes .",
    "hence , predicting the location of bottleneck edges with purely topological measures , such as betweenness centrality , may be important in real - world networks that implement congestion control algorithms ( e.g. ,   the tcp / ip internet congestion control protocol implements proportional fairness ) .    to explore",
    "whether the position of bottleneck edges can be characterized by the pattern of path intersections , we first study average edge flow as a function of edge betweenness centrality  . figure  [ fig : fig3]a and b shows that , if the number of paths is sufficiently large , edges with high betweenness are used up to capacity , with negligible standard deviation of edge flow across the ensemble ; in other words : high betweenness edges are bottlenecks . to further relate network topology with the location of bottleneck edges",
    ", we study the percentage of bottleneck and non - bottleneck edges on the histograms of betweenness centrality in figure  [ fig : fig3]c to f. the shaded areas indicate the percentage of bottleneck edges that fall within each bin .",
    "an analysis of this shaded area on the tail of the exponential ( er ) and power - law ( sf ) distribution for large networks provides further insights into the relationship between high betweenness edges and bottlenecks . indeed , for @xmath22 , a large percentage of edges with betweenness in the exponential ( er ) and power - law ( sf ) tail of the distribution are bottlenecks , suggesting that , for large @xmath13 , the tail of the betweennness distribution identifies bottlenecks edges .",
    "for example , if we take the 5% of edges with the largest betweenness in sf ( er ) networks for @xmath22 , we find that 97.4% ( 99.7% ) of these are bottlenecks , representing 9.1% ( 8.9% ) of all bottleneck edges .",
    "thus , a network designer or operator that selects edges with high betweenness on a large network identifies only a small percentage of bottlenecks , but makes few mistakes as most edges with high betweenness are bottlenecks .",
    "hence , a network designer constrained by a tight budget has a simple way to increase both throughput and fairness : increase the capacity of edges with high betweenness .",
    "finally , bottlenecks with high betweenness contribute disproportionately to the inequality of path flows , because a large number of shortest paths pass through , and thus the path flow of each of these paths is considerably lower than the average path flow .",
    "in summary , we analysed the behaviour of the main congestion control algorithms as a function of network topology .",
    "we found that the network throughput in proportional fairness converges to that of max - flow on a regular ring lattice as the size of the ring increases .",
    "proportional fairness is often described as a trade - off between efficiency and fairness .",
    "our results show , however , that on large random networks a network operator can implement the trade - off ( proportional fairness ) instead of the fair allocation ( max - min fairness ) with little sacrifice in throughput .",
    "researchers in complex networks have approached the problem of network congestion with the formalism of uniform - flow . here , we illustrate how the uniform - flow approach leaves networks severely underutilised in comparison with congestion control algorithms , and how uniform - flow can ( erroneously ) lead to the conclusion that er networks are more efficient than sf at the onset of congestion .",
    "we next analysed the relation between network topology and the inequality of path flows .",
    "although this relation was not detectable in max - flow , for proportional fairness and max - min fairness we found that sf networks are more unequal than er .",
    "we analysed several ways to adjust the trade - off between efficiency and fairness , showing how a network designer or operator could make the network more efficient or fairer by manipulating the number @xmath13 of shortest paths , the fairness parameter @xmath1 ( i.e. ,  the congestion control algorithm ) , or the skewness of network degree ( i.e. ,  network topology ) .",
    "finally , we found that links with high edge betweenness centrality are good candidates to bottleneck edges .",
    "we characterised this pattern by analysing the average edge throughput as a function of edge betweenness and the percentage of bottleneck / non - bottleneck edges on the histograms of betweenness .",
    "congestion control protocols such as max - min fairness or proportional fairness avert congestion by allocating path flows that are determined as an outcome of an optimization procedure .",
    "although , the result is a higher level of inequality than in uniform - flow , these protocols significantly increase the network throughput and thus can be considered as superior to uniform - flow , which is often assumed in the analyses of congested complex networks  @xcite .",
    "the price to pay for congestion control is that the rate @xmath23 of packet production becomes source node dependent , and the critical rate is no longer given analytically",
    ". it would be hard to argue , however , that these are important factors in the modelling of real - world congested networks .",
    "previous work on congested complex networks with uniform flow  @xcite identified congestion with the most congested bottlenecks , as determined by max - min fairness . here",
    "we showed that congestion control algorithms can load complex networks further than uniform flow .",
    "indeed , the bottlenecks detected by uniform - flow are located on the edges with the highest betweenness , but this is only a first approximation : congestion on complex networks depends not only on the most central edges , but on a larger set of edges with high centrality .",
    "let @xmath24 be an undirected and connected graph , with node - set @xmath25 and edge - set @xmath26 , such that edge @xmath27 has capacity @xmath28 .",
    "the network has @xmath29 nodes and @xmath30 edges , and a set of @xmath13 source and sink pairs @xmath31 with @xmath32 for @xmath33 . each source and sink pair @xmath31 is connected by a path @xmath34 , such that @xmath35 is the set of all source to sink paths on the network .",
    "the relationship between edges and paths is given by the _ edge - path incidence matrix _",
    "@xmath36 , such that @xmath37 if edge @xmath38 belongs to path @xmath34 , and @xmath39 otherwise .",
    "matrix @xmath36 has dimensions @xmath40 , and maps paths to the edges contained in these paths .",
    "all edges of a path @xmath34 transport the same _ path flow _ @xmath4 .",
    "the flow @xmath41 on edge @xmath38 is then the sum of path flows over all paths that cross the edge : @xmath42    a vector @xmath43 of path flows is _ feasible _ if @xmath44 and @xmath45 for @xmath46 , where @xmath47 is the vector of edge capacities .",
    "an edge is a _ bottleneck _ if the flow passing through it is equal to the edge capacity .",
    "we define the network congestion control problem  @xcite : @xmath48 where @xmath49 is a parameter and @xmath50 is defined by eq.([eq : alpha_fairness ] ) .    in max - flow ( @xmath51 ) ,",
    "to increase a path flow by @xmath52 , we have to decrease a set of other power path flows , such that the sum of the decreases is larger or equal to @xmath52 .",
    "in contrast , in max - min fairness ( @xmath10 ) , to increase a path flow by @xmath52 , we have to decrease at least by @xmath52 a set of other path flows that are less or equal to the former .",
    "finally , to increase a path flow by a percentage @xmath52 in proportional fairness ( @xmath53 ) , we have to decrease a set of other power path flows , such that the sum of the percentage decreases is larger or equal to @xmath52  @xcite .",
    "formally , a vector @xmath43 of path flows is max - min fair , if it is feasible and if for any other feasible vector @xmath54 of path flows , there exists a path @xmath55 implies that there exists another path @xmath56 and @xmath57  @xcite .",
    "the max - min fairness allocation is the solution of problem ( [ eq : flow_problem ] ) for @xmath58 .",
    "the allocation is typically found , however , with an iterative algorithm  @xcite that locates the bottleneck edges .",
    "the algorithm first increases all path flows uniformly from zero until it maximizes the smallest path flows , that is until it finds the first bottleneck edges .",
    "the path flows on paths that pass through these bottlenecks can not be increased because the edges are used to their full capacity , and hence the algorithm fixes these path flows , and updates the residual capacity still available to other paths .",
    "next , the process is repeated for the paths that do not have yet a fixed path flow . to describe the algorithm formally ,",
    "we define @xmath59 to be the set of paths on the network at iteration @xmath60 , and @xmath61 to be the subset of paths in @xmath59 that pass through edge @xmath38 .",
    "before we start the algorithm , we assign @xmath62 and @xmath63 for all edges , and a path flow @xmath64 to each path @xmath65 .",
    "next , we initialise the iteration counter @xmath66 . in the first step of the mmf algorithm , for each edge @xmath38 with non - zero capacity that belongs to at least one path , we define the edge capacity divided equally among all paths that pass through the edge at iteration @xmath60 of the algorithm as : @xmath67 for all @xmath68 .",
    "we then find the minimum of @xmath69 , given by @xmath70 in the second step of the mmf algorithm , we increase all path flows of paths in @xmath59 by @xmath71 , such that @xmath72{ll } f_j^{(m-1)}+\\delta f^{(m ) } & \\text{if } r_j\\in \\mathcal{r}^{(m)}\\\\ f_j^{(m-1 ) } & \\text{if } r_j\\in \\mathcal{r}\\backslash \\mathcal{r}^{(m)}\\end{array } \\right .   .\\",
    "] ] the effect is to saturate the set of bottleneck edges @xmath73 , and consequently also to saturate the set of paths that contain at least one bottleneck edge .",
    "next , we create a residual network , by subtracting the capacity used by the path flows , @xmath74 note that all bottleneck edges will be saturated , that is each will have @xmath75 after this step .",
    "we also say that all paths that contain at least one bottleneck edge are saturated paths , to mean that their path flow will not be increased in subsequent iterations of the mmf algorithm .",
    "we say that @xmath76 is the set of augmenting paths because the path flows of paths in @xmath76 can still be increased in subsequent iterations of the algorithm , and update it following : @xmath77 finally , if @xmath76 is not empty , we increase the iteration counter @xmath78 , and go back to the first step , otherwise we stop .",
    "a vector of path flows @xmath79 is _ proportionally fair _ if it is feasible and if for any other feasible vector of path flows @xmath80 , the sum of proportional changes in the path flows is non - positive  @xcite : @xmath81 the proportionally fair allocation is found from problem ( [ eq : flow_problem ] ) with the utility function in eq .",
    "( [ eq : alpha_fairness ] ) for @xmath9 , and we refer to this problem as the primal  @xcite .",
    "the optimisation problem is convex because the aggregate utility @xmath82 is concave and the inequality constraints are convex .",
    "thus , any locally optimal point is also a global optimum , and we can use results from the theory of convex optimisation to find the proportional fair flow allocation ( see  @xcite and  @xcite for a brief introduction to lagrange multipliers , and  @xcite on convex optimisation ) .",
    "the lagrangian is given by  @xcite : @xmath83 where @xmath84 is a vector of lagrange multipliers .",
    "the lagrange dual function  @xcite is then given by @xmath85 , which is easily determined analytically by @xmath86 as @xmath87 and thus @xmath88 after removing the constant term in equation  ( [ eq : lagrange_dual_final ] ) and converting to a maximisation problem , we obtain the dual problem  @xcite @xmath89 where @xmath84 is a vector of dual variables .",
    "the primal problem is convex and the inequality constraints are affine .",
    "hence , slater s condition is verified and thus strong duality holds .",
    "this means that the _ duality gap _ , i.e. ,  the difference between the optimal of the primal problem  ( [ eq : flow_problem ] ) and the optimal of the dual problem  ( [ eq : dual ] ) , is zero  @xcite .",
    "the primal objective function depends on @xmath13 variables ( the path flows ) and is constrained by an affine system of equations , whereas the dual objective function depends on @xmath30 variables ( the edges ) and is constrained only by the condition that the dual variables are non - negative .",
    "thus , the dual problem  ( [ eq : dual ] ) is more efficient to solve than the primal when the number of paths exceeds number of network edges .",
    "the optimal path flows can then be recovered from the optimal lagrange multipliers with eq .",
    "( [ eq : lagrange_dual ] ) .",
    "the decentralized implementation of proportional fairness relies on a feed - back mechanism on path flows  @xcite : multiplicatively decrease path flows of paths that pass through bottlenecks and additively increase all other path flows .",
    "the combination of the fast correction ( multiplicative decrease ) and slow ramp - up ( additive increase ) is the mechanism behind the tcp internet congestion control protocol .",
    "crucially , this mechanism requires each bottleneck to send a feedback signal to the sender of each path , with the information that the path flow should be additively increased or multiplicatively decreased .",
    "knowledge of where to place sensors and where to connect to the communication network that sends the feedback signals is thus important for the network designer and operator .      the uniform - flow allocation can be found for any @xmath12 from problem ( [ eq : flow_problem ] ) and eq .",
    "( [ eq : alpha_fairness ] ) , with an additional set of constraints ensuring that path flows are uniform : @xmath90 the optimal uniform - flow allocation is @xmath1-invariant , because @xmath50 is a monotonically increasing function of @xmath4 for any @xmath49 .",
    "algorithmically , the uniform - flow allocation can also be found as the solution to the first iteration ( @xmath66 ) of the max - min fairness algorithm , since the algorithm maximises the minimum path flow allocation , and all path flows are the same at the end of the first iteration .",
    "the onset of congestion in complex networks is often determined by the uniform - flow allocation  @xcite . at each time step",
    ", source node @xmath91 generates a packet with probability @xmath23 and sends it towards the sink node along a shortest path .",
    "the expected number of packets in the network at each time step is @xmath92 , where @xmath93 is the average shortest path length .",
    "moreover , the probability that a packet will pass through a node @xmath94 with the largest betweenness is @xmath95 ( here , the betweenness centrality @xmath96 of a node @xmath91 equals the number of shortest paths between all pairs of nodes in the network going through node  @xmath91  @xcite ) .",
    "the average number of packets that node @xmath94 receives at each time step is thus @xmath97 , where we used the simplification that the sum of the betweenness values of all nodes is the number of pairs of nodes on the network multiplied by the average path length , @xmath98 . at each time step",
    ", the node with the highest betweenness can deliver @xmath99 packets , and hence the onset of congestion is given by @xmath100 , that is @xmath101 this deduction considers a network of capacitated nodes , but we can have capacity constraints on the links instead , and packets may queue at the nodes for service .",
    "congestion control algorithms are similar for node and link capacity , and here we analyse random networks with link capacity , because this is the standard in the modelling of communication networks  @xcite .",
    "the reasoning leading to eq  ( [ eq : lambda ] ) assumes that the number @xmath102 of packets injected into the network per path at each time step is the same for all paths , and that it is determined by the ratio between the node capacity @xmath103 and the number of paths @xmath104 passing through node @xmath94 . the obvious drawback of this approach is that the estimate of @xmath105 in eq .",
    "( [ eq : lambda ] ) considers only the first bottleneck to appear in the network , and thus underestimates the load typically present in congested networks .",
    "nodes and edges , such that each edge has capacity @xmath47 , with paths and nodes indexed clockwise from the top .",
    "short paths inject a flow @xmath106 at each node and use the network for two edges before exiting , and a long path injects a flow @xmath107 at node @xmath108 and uses all edges of the network .",
    "if we distribute edge capacity proportionally to flows entering the edge , the network throughput goes to zero as the flow injected at each node increases , because queues of increasing length build up at each node . ]",
    "consider a ring lattice of @xmath29 nodes , each connected to its nearest neighbours by an edge with finite capacity @xmath47 , as illustrated in figure  [ fig : fig4 ] .",
    "we relax the constraint that all edges of path @xmath34 transport the same path flow @xmath4 , allow instead queues to build up at the nodes , and thus edge flows to differ on edges along a path .",
    "user @xmath5 injects a flow @xmath106 into the network at node @xmath109 on a _ short _ path @xmath5 ; the flow @xmath110 passes from node @xmath5 to node @xmath111 ; the flow @xmath112 passes from node @xmath111 to node @xmath113 and exits the network .",
    "consider also that node @xmath108 is a source and sink of a _ long _ path , user @xmath114 , that passes through all nodes , with flow @xmath115 on the edge linking node @xmath5 to node @xmath111 .",
    "the subscript @xmath5 identifies the short path , as well as its first node .",
    "the superscripts @xmath116 and @xmath117 index the edges the short paths pass through , and superscript @xmath118 indexes edges the long path cross .    to illustrate the mechanism of congestion collapse , we assume a simple congestion control scheme that distributes the total flow @xmath119 at node @xmath5 proportionally to the paths that pass through the node :    @xmath120    the network is not congested for @xmath121 , and in this case the throughput is @xmath122 . if the network is congested , flows decrease along a path , that is @xmath123 , and queues build up at each node .",
    "the proportional allocation of edge capacities may motivate individual users to increase @xmath106 in order to receive a larger share of network capacity .",
    "however , as the flow @xmath106 injected at each short path grows , the length of queues at the nodes also grow and the network throughput decreases .",
    "congestion collapse _ is a consequence of the collapse of throughput both for short and long paths . indeed , in the limit @xmath124 , the system of eqs .",
    "( [ eq_f_1]-[eq_f_3 ] ) yields @xmath125 , @xmath126 for @xmath127 and @xmath128 for all short paths ; and @xmath129 , and @xmath130 for @xmath127 on the long path .",
    "hence , @xmath131 .",
    "let us now assume the more restrictive condition that @xmath132 paths carry a path flow , and consider the effect of controlling congestion .",
    "because the path flow is constant on all edges along a path , we have a path flow @xmath43 for every short path , and a path flow @xmath133 for the long path , such that @xmath134 at every edge , and thus @xmath135 one max - flow allocation is @xmath136 and @xmath137 , leaving user @xmath114 with no access to the network , with a network throughput of @xmath138 .",
    "the max - min fair solution is @xmath139 , with a network throughput of @xmath140 .",
    "the proportionally fair solution is found by maximizing @xmath141 over @xmath133 , yielding the path flow on the long path : @xmath142 combining eqs .",
    "[ eq : pf_modified_parking_lot ] and [ eq : f_pf_long ] yields the proportionally fair path flow on the short paths : @xmath143 hence , the proportional fair network throughput is @xmath144 . as the size of the network increases ,",
    "the proportional fair allocation approaches the max - flow solution , leaving the long path with ever smaller flow .",
    "in contrast , the max - min fair protocol assigns the same allocation to all paths independently of network size , at the expense of having a lower throughput than proportional fairness and max - flow .",
    "thus , this example shows that proportional fairness and max - flow generate the same throughput on an infinitely size ring lattice , and that this is higher than the throughput provided by max - min fairness .      to create erds - rnyi ( er ) graphs , we start with @xmath29 nodes and connect them such that each possible edge is realized with probability @xmath145 , with the parameter selected so as to meet the average node degrees @xmath15 and @xmath146 .",
    "we generate scale - free ( sf ) networks with the configuration model  @xcite , and cap node degree at @xmath147 ( we draw a new random number if this value is exceeded ) .",
    "we also fix the minimum average node degree @xmath148 , and adjust the exponent @xmath149 to reach the average node degrees @xmath15 and @xmath146 .",
    "we generate an ensemble of @xmath17 sf and er substrate networks with @xmath14 nodes , and select only the largest connected component so that there is at least one path between all node pairs .",
    "we then chose @xmath13 shortest paths with uniform probability from the set of all shortest paths , and extract the transport overlay network composed of the edges that are crossed by at least one path .",
    "this transport overlay network  @xcite is the union of all @xmath13 shortest paths , and is the infrastructure part of the substrate network which we use here .      to characterise inequalities in the flow allocations ,",
    "we analyse the gini coefficient of path flows .",
    "the gini coefficient is defined as  @xcite @xmath150=\\frac{1}{2\\nu}\\int_{0}^{\\infty}\\int_{0}^{\\infty}\\left\\vert u - v\\right\\vert g(u)g(v)\\ du\\ dv , \\label{eq : gini_coefficient_continuous}\\ ] ] where @xmath151 and @xmath152 are independent identically distributed random variables with probability density @xmath153 and mean @xmath154 .",
    "in other words , the gini coefficient is one half of the mean difference in units of the mean .",
    "the difference between the two variables receives a small weight in the tail of the distribution , where @xmath155 is small , but a relatively large weight near the mode .",
    "hence , @xmath156 is more sensitive to changes near the mode than to changes in the tails . for a random sample ( @xmath157 , @xmath158 ) , the empirical gini coefficient ,  @xmath159 , may be estimated by a sample mean @xmath160 the gini coefficient is used as a measure of inequality , because a sample where the only non - zero value is @xmath161 has @xmath162 and hence @xmath163 as  @xmath164 , whereas @xmath165 if all data points have the same value .    10 url # 1`#1`urlprefix[2]#2 [ 2][]#2    . _ _ * * , ( ) .",
    "_ et  al . _",
    "( , ) .    & .",
    "_ _ * * , ( ) .    , , & .",
    "_ _ * * , ( ) .    & _ _ ( , ) .    _",
    "_ , vol .",
    "( , ) .    .",
    "in _ _ , ( , ) .    , & . _ _ * * , ( ) .    , , & . _ _ * * , ( ) .    & . _ _ * * , ( ) .    , & . _ _ * * , ( ) .",
    "_ et  al . _ . _",
    "_ * * , ( ) .    , & _ _ ( , ) .    & _ _ ( , ) .    & _ _ ( , ) .    _ _ ( , , ) .",
    "_ _ * * , ( ) .    , , , & .",
    "_ _ * * , ( ) .",
    "_ _ ( , , ) .    & _ _ ( , , ) .    _ _ ( , , ) .    , , , & .",
    "_ _ * * , ( ) .    , , & .",
    "_ _ * * , ( ) .    , , , & .",
    "_ _ * * , ( ) .    , , & .",
    "_ _ * * , ( ) .    , , & .",
    "_ _ * * , ( ) .    & .",
    "_ _ * * , ( ) .    , , , & .",
    "_ _ * * , ( ) .    , & .",
    "_ _ * * , ( ) .    , , & .",
    "_ _ * * , ( ) .",
    "_ et  al . _ . _",
    "_ * * , ( ) .    & .",
    "_ _ * * , ( ) .    , & _ _ ( , ) .    , & .",
    "_ _ * * , ( ) .    & .",
    "_ _ * * , ( ) .    & .",
    "_ _ * * , .    , & .",
    "_ _ * * , ( ) .    & .",
    "_ _ * * , ( ) .    & .",
    "_ _ * * , ( ) .    , & .",
    "_ _ * * , ( ) .",
    "thesis , ( ) .    &",
    "_ _ , vol .",
    "( , ) .    . in ( ed",
    "_ , chap . ,",
    "( , , ) .    & _ _ ( , , ) .    & _ _ ( , , ) .",
    "we thank matej cebecauer for conducting numerical experiments and analysing results in early versions of the manuscript .",
    "we thank dirk helbing for granting access to the ethz brutus high - performance cluster .",
    "this work was supported by the engineering and physical sciences research council under grant number ep / i016023/1 , by vega ( project 1/0463/16 ) and by fp 7 ( project eradiate 621386 ) .",
    "and r.c conceived the experiment(s ) , l.b .",
    "and r.c wrote the manuscript .",
    "competing financial interests : the authors declare no competing financial interests .",
    "as a function of the number @xmath13 of shortest paths , for max - flow , proportional fairness , max - min fairness , and uniform - flow .",
    "we average over 200 randomly generated sf and er networks with @xmath14 nodes .",
    "the 95% confidence intervals are smaller than the symbols.,scaledwidth=65.0% ]       as a function of the number @xmath13 of shortest paths .",
    "we average over 200 randomly generated sf and er networks with @xmath14 nodes .",
    "whiskers show the @xmath18 confidence interval.,scaledwidth=65.0% ]     random realizations of er and sf networks with @xmath19 nodes and average node degree @xmath166 ( panels a and b ) .",
    "the insets show the corresponding values of the standard deviation , illustrating that the predictability of bottleneck location improves with the increase in edge betweenness .",
    "panels c to f show histograms of edge betweenness centrality , where the shaded area of each bin is the proportion of bottleneck edges in the bin .",
    "bottlenecks are saturated edges , that is edges for which @xmath21.,scaledwidth=90.0% ]"
  ],
  "abstract_text": [
    "<S> from the internet to road networks and the power grid , modern life depends on controlling flows on critical infrastructure networks that often operate in a congested state . yet , we have a limited understanding of the relative performance of the control mechanisms available to manage congestion and of the interplay between network topology , path layout and congestion control algorithms . here , we consider two flow algorithms ( max - flow and uniform - flow ) , and two more realistic congestion control schemes ( max - min fairness and proportional fairness ) . </S>",
    "<S> we analyse how the algorithms and network topology affect throughput , fairness and the location of bottleneck edges . </S>",
    "<S> our results show that on large random networks a network operator can implement the trade - off ( proportional fairness ) instead of the fair allocation ( max - min fairness ) with little sacrifice in throughput . </S>",
    "<S> we illustrate how the previously studied uniform - flow approach leaves networks severely underutilised in comparison with congestion control algorithms , and how uniform - flow can ( erroneously ) lead to the conclusion that er networks are more efficient than sf at the onset of congestion . for proportional fairness and max - min fairness </S>",
    "<S> , we found that sf networks are more unequal than er . </S>",
    "<S> finally , we found that links with high edge betweenness centrality are good candidates for bottleneck edges . </S>"
  ]
}
{
  "article_text": [
    "indexed grammars @xcite are a natural generalization of context - free grammars , where variables keep stacks of indices . despite being all context - sensitive languages , the languages are still quite general as they can generate non - semi - linear languages @xcite .",
    "several restrictions have been studied that have desirable computational properties .",
    "linear indexed grammars were first created , restricting the number of variables on the right hand side to be at most one @xcite .",
    "other restrictions include another system named exactly linear indexed grammars @xcite ( see also @xcite ) , which are different than the first formalisms , although both are sufficiently restricted to only generate semi - linear languages . in this paper",
    ", we only examine the first formalism of linear indexed grammars .",
    "we study indexed grammars that are restricted to be finite - index , which is a generalization of linear indexed grammars @xcite .",
    "grammar systems that are _",
    "@xmath1-index _ are restricted so that , for every word generated by the grammar , there is some successful derivation where at most @xmath1 variables ( or nonterminals ) appear in every sentential form of the derivation @xcite .",
    "a system is finite - index if it is @xmath1-index for some @xmath1 .",
    "it has been found that that when restricting many different types of grammar systems to be finite - index , their languages coincide .",
    "this is the case for finite - index @xmath2 , @xmath3 , context - free programmed grammars , ordered grammars , and matrix grammars .",
    "we introduce the family , @xmath4 , of languages generated by finite - index indexed grammars and study a sub - family , @xmath5 , of languages generated by uncontrolled finite - index indexed grammars , where every successful derivation has to be finite - index .",
    "these have been very recently studied under the name _ breadth - bounded grammars _ , where it was shown that this family is a semilinear full trio .",
    "we also study a special case of the latter , called @xmath6 that restricts branching productions .",
    "we then show the following :    1 .",
    "all families are semilinear full trios .",
    "2 .   the following conditions are equivalent for a bounded language @xmath7 : * @xmath8 , * @xmath9 , * @xmath7 is bounded semilinear , * @xmath7 can be generated by a finite - index @xmath2 system , * @xmath7 can be accepted by a dfa augmented with reversal - bounded counters , 3 .",
    "every finite - index @xmath2 language is in @xmath4 .",
    "4 .   @xmath10 .",
    "5 .   containment and equality are decidable for bounded languages in @xmath0 and @xmath5 .",
    "we assume a basic background in formal languages and automata theory @xcite .",
    "let @xmath11 be the additive free commutative monoid of non negative integers .",
    "if @xmath12 is a subset of @xmath11 , @xmath13 denotes the submonoid of @xmath11 generated by @xmath12 .",
    "an _ alphabet _ is a finite set of symbols , and given an alphabet @xmath14 , @xmath15 is the free monoid generated by @xmath14 .",
    "an element @xmath16 is called a _ word _ , the empty word is denoted by @xmath17 , and any @xmath18 is a _",
    "language_. the _ length _ of a word @xmath19 is denoted by @xmath20 , and the number of @xmath21 s , @xmath22 , in @xmath23 is denoted by @xmath24 , extended to subsets @xmath25 of @xmath14 by @xmath26 .",
    "let @xmath27 be an alphabet of @xmath28 letters , and let @xmath29 be the corresponding _ parikh morphism _",
    "defined by @xmath30 extended to languages @xmath31 .",
    "a set @xmath32 is a _ linear set _ if there exists vectors @xmath33 of @xmath11 such that @xmath34 further , @xmath12 is called a _ semi - linear set _ if @xmath35 for linear sets @xmath36 .",
    "a language @xmath18 is said to be _ semi - linear _ if the parikh morphism applied to @xmath7 gives a semi - linear set .",
    "a language family is said to be semi - linear if all languages in the family are semi - linear .",
    "many known families are semi - linear , such as the regular languages , context - free ( denoted by @xmath37 , see @xcite ) , and finite - index @xmath2 languages ( @xmath38 , see @xcite )",
    ".    a language @xmath7 is termed _ bounded _ if there exist non - empty words @xmath39 , with @xmath40 , such that @xmath41 .",
    "let @xmath42 be the map defined as : for every tuple @xmath43 , @xmath44 the map @xmath45 is called the _ ginsburg map_.    [ + ] a bounded language @xmath46 is said to be _ bounded ginsburg semi - linear _ if there exists a semi - linear set @xmath12 of @xmath11 such that @xmath47",
    ".    in the literature , bounded ginsburg semi - linear has also been called just bounded semi - linear , but we will use the terminology bounded ginsburg semi - linear henceforth in this paper .    a _ full trio _ is a language family closed under morphism , inverse morphism , and intersection with regular languages @xcite",
    ".    we will also relate our results to the languages accepted by one - way nondeterministic reversal - bounded multicounter machines ( denoted by @xmath48 ) , and to one - way deterministic reversal - bounded multicounter machines ( denoted by @xmath49 .",
    "these are nfas ( dfas ) augmented by a set of counters that can switch between increasing and decreasing a fixed number of times @xcite ) .",
    "we first recall the definition of indexed grammar introduced in @xcite by following @xcite , section 14.3 ( see also @xcite for a reference book for grammars ) .",
    "[ def0 ] an indexed grammar is a 5-tuple @xmath50 , where    * @xmath51 are finite pairwise disjoint sets : the set of variables , terminals , and indices , respectively ; * @xmath52 is a finite set of productions of the forms @xmath53 where @xmath54 @xmath55 and @xmath56 ; * @xmath57 is the start variable .",
    "let us now define the derivation relation @xmath58 of @xmath59 .",
    "let @xmath60 be an arbitrary sentential form of @xmath59 , @xmath61 with @xmath62 for a sentential form @xmath63 , we set @xmath64 if one of the following three conditions holds :     1 ) : :    in @xmath52 , there exists a production of the form ( 1 )    @xmath65 ,    @xmath66 , such that in the sentential form @xmath60 , for    some @xmath67 with @xmath68 one has    @xmath69 and    @xmath70   2 ) : :    in @xmath52 , there exists a production of the form ( 2 )    @xmath71 such that in the sentential form    @xmath60 , for some @xmath67 with    @xmath68 one has @xmath69 and    @xmath72   3 ) : :    in @xmath52 , there exists a production of the form ( 3 )    @xmath73 ,    @xmath66 , such that in the sentential form @xmath60 , for    some @xmath67 with @xmath68 one has    @xmath69 ,    @xmath74 , and    @xmath75    in this case , one says that the index @xmath76 is consumed .    for every @xmath77 , @xmath78 stands for the @xmath79-fold product of @xmath58 and @xmath80 stands for the reflexive and transitive closure of @xmath58 .",
    "the language @xmath81 generated by @xmath59 is the set @xmath82    * notation and convention . *",
    "_ in the sequel we will adopt the following notation and conventions for an indexed grammar @xmath59 .",
    "_    * if no ambiguity arises , the relations @xmath83 @xmath84 , and @xmath80 will be simply denoted by @xmath85 , @xmath86 , and @xmath87 , respectively . * capital letters as @xmath88 will denote variables of @xmath59 . *",
    "the small letters @xmath89 , as well as @xmath90 , will be used to denote indices while @xmath91 , @xmath92 and @xmath93 , as well as its indexed version ( as for instance @xmath94 ) , will denote arbitrary words over @xmath95 .",
    "* small letters as @xmath96 ( as well as its indexed version ) will denote letters of @xmath97 and small letters as @xmath98 ( as well as its indexed version ) will denote words over @xmath97 . * @xmath60 and @xmath99 , as well as @xmath100 and @xmath101 , will denote arbitrary sentential forms of @xmath59 . * in order to shorten the notation , according to definition [ def0 ] , if @xmath102 is a production of @xmath59 of the form ( 1 ) or ( 3 ) , we will simply write @xmath103 where it is understood that if @xmath104 , the production @xmath102 has form ( 1 ) and if @xmath55 , the production @xmath102 has form ( 3 ) . * if @xmath105 @xmath106 is a string of productions of @xmath59 , then @xmath107 denotes a derivation of @xmath59 of the form @xmath108",
    ".    the following set of definitions defines the main objects studied in this draft .",
    "let @xmath59 be an indexed grammar and let @xmath81 be the language generated by @xmath59 .",
    "the first definition is from @xcite .",
    "[ eq - def-1 ] we say that @xmath59 is _ linear _ if the right side component of every production of @xmath59 has at most one variable .",
    "a language @xmath7 is said to be _ linear indexed _ if there exists a linear indexed grammar @xmath59 such that @xmath109 .",
    "[ eq - def-2 ] given an integer @xmath40 , a derivation @xmath110 of @xmath111 , is said to be of _",
    "index-@xmath1 _ if @xmath112 , for all @xmath67 , @xmath113 .",
    "[ eq - def-3 ] given an integer @xmath40 , @xmath59 is said to be _ of index-@xmath1 _ if , for every word @xmath114 , there exists a derivation of @xmath115 in @xmath59 of index-@xmath1 .",
    "a language @xmath7 is said to be an _ indexed language of index-@xmath1 _ if there exists an indexed grammar @xmath59 of index-@xmath1 such that @xmath109 .",
    "an indexed language @xmath7 is said to be _ of finite - index _ if @xmath7 is of index-@xmath1 , for some @xmath1 .",
    "[ eq - def-4 ] an indexed grammar @xmath59 is said to be _ uncontrolled _",
    "index-@xmath1 if , for every derivation @xmath116 generating @xmath117 , for all @xmath67 , @xmath113 .",
    "@xmath59 is uncontrolled finite - index if @xmath59 is uncontrolled index-@xmath1 , for some @xmath1 .",
    "a language @xmath7 is said to be an _ uncontrolled finite - index indexed language _ if there exists an uncontrolled finite - index grammar @xmath59 such that @xmath109 .",
    "it is worth noticing that , according to definition [ eq - def-4 ] , if @xmath59 is a grammar of index-@xmath118 , then @xmath59 is a grammar of index-@xmath119 , for every integer @xmath120 .",
    "it is interesting to observe that definition [ eq - def-4 ] corresponds , in the case of context - free grammars , to the definition of nonterminal bounded grammar ( cf @xcite , section 5.7 ) .",
    "we recall that nonterminal bounded grammars are equivalent to ultralinear grammars and thus provide a characterisations of the family of languages that are accepted by finite - turn pushdown automata .",
    "finally let us denote by    * @xmath0 the family of linear indexed languages @xcite ; * @xmath5 the family of uncontrolled finite - index indexed languages ; * @xmath4 the family of finite - index indexed languages .    a reminder that uncontrolled finite - index corresponds to breadth - bounded indexed grammars @xcite .",
    "therefore , the following is implied .",
    "@xcite @xmath5 is a semilinear full trio .",
    "the family @xmath0 has been introduced in @xcite where results of algebraic and combinatorial nature characterize the structure of its languages .",
    "recall that a linear indexed grammar @xmath59 is said to be _",
    "right linear indexed _ if , according to definition [ def0 ] , in every production @xmath102 of @xmath59 of the form ( 1 ) or ( 3 ) , the right hand component @xmath60 of @xmath102 has the form @xmath121 , or @xmath122 , where @xmath123 . in @xcite",
    "( see also @xcite ) , the following theorem has been proved :    @xcite [ thm - a ] if @xmath7 is an arbitrary language , @xmath7 is context - free if and only if there exists a right linear indexed grammar @xmath59 such that @xmath109 .    from this",
    ", the following is evident .",
    "[ initialhierarchy ] @xmath124    indeed theorem [ thm - a ] provides the inclusion @xmath125 .",
    "the inclusions @xmath126 come immediately from the definitions of the corresponding families .",
    "now , for every @xmath40 , let @xmath127 it is easy to construct a linear indexed grammar that generates @xmath128 so that @xmath129 ( cf , for instance , @xcite )",
    ". moreover it is proved that @xmath130 ( see @xcite , theorem 3.8 ) . on the other hand",
    ", it is easily shown that @xmath131 .",
    "also , in @xcite , it is shown that for an alphabet @xmath97 , @xmath132 , and @xmath133 , if @xmath134 is a linear indexed language , then @xmath14 or @xmath12 is a context - free language .",
    "then , let @xmath135 , @xmath136 , and @xmath137",
    ". then @xmath138 .",
    "but since both @xmath14 and @xmath12 are not context - free , then @xmath7 must not be linear indexed .",
    "next , closure under union is addressed with a straightforward adaptation of the first part of the proof of theorem 6.1 of @xcite .",
    "[ lm-0 ] the families @xmath4 and @xmath5 are closed under union .",
    "let us prove the claim for the family @xmath4 , the proof for @xmath5 being similar .",
    "let @xmath139 and @xmath128 be indexed languages of indices @xmath118 and @xmath119 respectively , and let @xmath140 and @xmath141 be grammars @xmath142 such that @xmath143 and @xmath144 . since we may rename variables and indices without changing the language generated , we assume that @xmath145 .",
    "moreover let @xmath146 be a new variable not in @xmath147 .",
    "construct a new grammar @xmath50 , where @xmath148 , @xmath149 , and @xmath52 is equal to @xmath150 , plus the two productions @xmath151 and @xmath152 .",
    "it is easily checked that @xmath153 and @xmath59 is of index @xmath154 .",
    "next , we show that @xmath4 is a full trio , and the result also holds for @xmath5 as well ( shown in @xcite )",
    ". we will prove the more general fact that they are closed under rational transductions .",
    "the proof is structured using a chain of lemmas .",
    "[ lm:1 ] @xmath5 and @xmath4 are closed under morphisms .",
    "we will demonstrate the proof for @xmath5 with the proof for @xmath4 following similarly .",
    "let @xmath155 and let @xmath50 be an uncontrolled @xmath1-index indexed grammar such that @xmath109 .",
    "let @xmath156 be a morphism where @xmath97 and @xmath157 are two alphabets .",
    "construct a new grammar @xmath158 by replacing each production of @xmath59 of the form @xmath159 where @xmath160 by the production @xmath161 it is easily verified that the resulting grammar @xmath158 satisfies @xmath162 and @xmath158 is an uncontrolled grammar .",
    "[ lm:3 ] @xmath5 and @xmath4 are closed under intersection with regular languages .",
    "we will show the result for uncontrolled grammars , and the other result follows similarly .    in order to prove that @xmath5 is closed under intersection with regular sets , the following claim is needed .",
    "* claim . *",
    "_ let @xmath50 be a finite - index ( resp .",
    "uncontrolled finite - index ) indexed grammar and let @xmath109 .",
    "then there exists a finite - index ( resp .",
    "uncontrolled finite - index ) indexed grammar @xmath163 generating @xmath7 such that @xmath164 and the productions of @xmath165 are of the form : @xmath166 where @xmath167 @xmath168 and @xmath169 is a word of the form @xmath170 _    * proof of the claim . *",
    "let first assume that @xmath59 has a sole production @xmath102 of the form @xmath171 define the following list of productions :    1 .",
    "@xmath172 2 .   for every @xmath173 3 .",
    "@xmath174    where @xmath175 , are new variables not in @xmath176 .",
    "remove the production ( [ eq : reducedgramm ] ) from @xmath52 , add to @xmath52 the list of productions defined at ( i)-(ii)-(iii ) above , and add to @xmath176 the corresponding list of variables @xmath177 s .",
    "finally call @xmath158 the grammar obtained from @xmath59 by using the previous transformation .",
    "we now observe that the unique derivation of @xmath158 where the productions defined above appear is the one that simulates @xmath102 : @xmath178 moreover such derivation has index not larger than that of @xmath59 .",
    "> from the latter remark , it is easily checked , by induction on the length of the derivations of @xmath158 , that @xmath158 has the same index of @xmath59 and that @xmath179 .    the case of productions @xmath180 is similarly treated .",
    "if @xmath59 has two or more productions of the form previously considered , the claim is obtained by iterating the previous argument .",
    "let @xmath182 be an uncontrolled finite - index indexed grammar in the form given by the previous claim .",
    "let @xmath183 be a finite deterministic automaton accepting @xmath184 , where @xmath185 is the set of states of @xmath186 , @xmath187 is its transition function , @xmath188 is its unique initial state while @xmath189 is the set of final states of @xmath186 . in the sequel , for the sake of simplicity ,",
    "the extension of the function @xmath17 to the set @xmath190 will be still denoted by @xmath17 .",
    "we proceed to construct a new uncontrolled finite - index grammar @xmath158 such that @xmath191 and @xmath192 .",
    "the set @xmath193 of variables of @xmath158 will be of the form @xmath194 , where @xmath102 and @xmath195 are in @xmath185 and @xmath25 is in @xmath176 , together with a new symbol @xmath196 , denoting the start variable of @xmath158 .",
    "the set @xmath197 of indices of @xmath158 is a copy of @xmath95 disjoint with it . for every index @xmath76 of @xmath95",
    ", we will denote by @xmath198 the corresponding copy of @xmath76 in @xmath197 .",
    "the set @xmath165 of productions of @xmath158 is defined as follows .    1 .",
    "if @xmath199 is in @xmath52 , where @xmath200 , and @xmath201 , then @xmath165 contains the set of productions @xmath202 , for all @xmath203 .",
    "if @xmath71 is in @xmath52 , where @xmath55 , then @xmath165 contains the set of productions @xmath204 where @xmath205 are two arbitrary states of @xmath185 .",
    "if @xmath206 is in @xmath52 , where @xmath207 , then @xmath165 contains , for all @xmath208 , the set of productions @xmath209 provided that @xmath210 , and @xmath211 .",
    "if @xmath212 is in @xmath52 , where @xmath213 , then @xmath165 contains , for all @xmath214 , the set of productions @xmath215 provided that @xmath216 .",
    "finally @xmath165 contains the production @xmath217 , for all @xmath218 .    no other productions different from the form specified in the list above",
    "is in @xmath165 .",
    "the first task is to show that @xmath219 . for this purpose , we first show that : @xmath220 with @xmath221 , @xmath222 , if and only if @xmath223 and @xmath201 . indeed , from this statement , we get @xmath224 , for some @xmath225 , if and only if @xmath226 and @xmath227 , which is sufficient to complete the proof .",
    "let us first prove that : @xmath228 ( * ) is easily checked to be true for derivations of length @xmath229 .",
    "now suppose that ( * ) is true for all @xmath230 with @xmath231 and let @xmath232 be a derivation of @xmath158 of length @xmath233 .",
    "such a derivation can be of one of the following forms .",
    "( i ) : :    @xmath234    +    that is , the first production of the derivation has the form    @xmath235 . by the inductive hypothesis , we then have    @xmath236 and    @xmath237 , which yields    @xmath238    and @xmath237 .",
    "( ii ) : :    @xmath239    +    that is , the first production of the derivation has the form    @xmath240 .",
    "set @xmath241 . from the latter , we get    @xmath242    so that , by the inductive hypothesis ,    @xmath243 and    @xmath244 . on the other hand , we know that    @xmath245    thus yielding    @xmath246 .    furthermore , @xmath247 ,    @xmath248 which gives    @xmath237 .   ( iii ) : :    @xmath249 +    @xmath250    +    that is , the first production of the derivation has the form    @xmath251 .",
    "set @xmath252 , with    @xmath253 . from the second sentential form , we get    @xmath254    where @xmath255 with    @xmath256 . by the inductive    hypothesis ,",
    "we have    @xmath257    together with    @xmath258    thus yielding    +    @xmath259    +    @xmath260    +    finally , from ( [ eq : lm:3 ] ) and @xmath261 , we    get @xmath237 .",
    "( iv ) : :    @xmath262    +    that is , the first production of the derivation has the form    @xmath263 . in this case , @xmath264    and @xmath265 so that the claim is trivially proved .",
    "since the latter cases represent all the possible ways an arbitrary derivation can start , ( * ) is proved .",
    "similarly , one proves by induction on the length of a derivation in @xmath59 that if @xmath266 is a derivation of @xmath59 of length @xmath267 and @xmath201 then @xmath268 . by the previous remark",
    ", this implies that @xmath269 .",
    "+ finally it is checked that the grammars @xmath59 and @xmath158 have the same index so that @xmath270 belongs to the family @xmath5 .",
    "this concludes the proof .",
    "next , we show closure under a inverse morphisms of a specific type .",
    "let @xmath97 and @xmath157 be two alphabets with @xmath271 and let @xmath272 be the projection of @xmath273 onto @xmath274 , that is the epi - morphism from @xmath273 onto @xmath274 generated by the mapping @xmath275 @xmath276 in the sequel , for the sake of simplicity , we denote the projection @xmath277 by @xmath278 .",
    "it is useful to remark that , for every @xmath279 and @xmath280 , with @xmath281 , @xmath282    [ lm:2 ] if @xmath283 ( resp .",
    "@xmath4 ) with @xmath284 , then @xmath285 ( resp .  @xmath4 ) .",
    "let @xmath50 be an uncontrolled finite - index indexed grammar generating @xmath7 .",
    "we construct a new uncontrolled finite - index grammar @xmath158 generating @xmath286 .    for this purpose ,",
    "let @xmath287 , with @xmath288 , and @xmath289 , be a production of @xmath59 of the form ( 1 ) or ( 3 ) ( according to definition [ def0 ] ) .",
    "then @xmath102 has the form @xmath290 where @xmath291 with @xmath292 and , for every @xmath293 , @xmath294 let us associate with @xmath102 , the following set of productions :    * @xmath295 * @xmath296 * @xmath297 * @xmath298 * @xmath299 * @xmath300    where , for all @xmath301 , with @xmath302 and @xmath303 @xmath304 are new variables not in @xmath176 .",
    "now remove the production @xmath102 from @xmath52 and add respectively to @xmath52 and @xmath176 the productions defined above together with the corresponding set of new variables .    by applying the previous argument to every production @xmath102 of the latter form",
    ", we will get a new grammar @xmath305 where @xmath164 , @xmath306 and the sets @xmath193 and @xmath165 are obtained from @xmath176 and @xmath52 respectively by iterating the latter combinatorial transformation .",
    "it is useful now to remark that , in correspondence of every production @xmath307 , of @xmath59 of the form ( 1 ) or ( 3 ) , there exists a derivation of @xmath158 such that @xmath308 where , for all @xmath309 , @xmath310 and @xmath311 , for all @xmath67 .",
    "taking into account the latter argument and eq .",
    "( [ eqproj ] ) , by induction on the length of the derivations of @xmath59 and @xmath158 respectively , one proves the following two claims :    * for every @xmath312 , @xmath313 if and only if there exists a derivation of @xmath59 such that @xmath314 , with @xmath279 , and @xmath315 . *",
    "if a non negative integer bounds the index of an arbitrary derivation of @xmath59 the same does for @xmath158 .",
    "this implies that @xmath158 is an uncontrolled finite - index grammar .",
    "this concludes the proof .",
    "next , it is possible to show closure under rational transductions .",
    "[ lm:2-trans ] let @xmath97 and @xmath157 be two alphabets .",
    "let @xmath316 be a rational transduction from @xmath274 into @xmath273 . if @xmath7 is a language of @xmath274 in the family @xmath5 ( resp .",
    "@xmath4 ) , then @xmath317 ( resp .",
    ".    we will show it for @xmath5 .",
    "let us first assume that @xmath318 . by a well known theorem for the representation of rational transductions ( see @xcite , ch .",
    "iii , thm 4.1 , see also @xcite ) , there exists a regular set @xmath184 over the alphabet @xmath319 such that @xmath320 where @xmath321 and @xmath322 are the projections of @xmath323 onto @xmath274 and @xmath324 respectively .    from the latter , one has that , for every @xmath222 , @xmath325 so that @xmath326 since , by hypothesis , @xmath9 , the claim follows from ( [ eq1:lm:2 ] ) , by applying lemma [ lm:1 ] , [ lm:3 ] , and [ lm:2 ] .",
    "let us finally treat the case where @xmath97 and @xmath157 are not disjoint .",
    "let @xmath327 be a copy of @xmath97 with @xmath328 and let @xmath329 be the corresponding copying iso - morphism from @xmath273 onto @xmath330 . by applying the latter argument to the rational transduction @xmath331 , one has @xmath332 .",
    "since @xmath333 , then the claim follows from the latter by applying lemma [ lm:1 ] .",
    "then the following is immediate :    [ lm - cor ] @xmath5 and @xmath4 are closed under inverse morphisms .    by lemma [ lm:1 ] , lemma [ lm:3 ] , and corollary [ lm - cor ]",
    ", we obtain :    the families @xmath4 and @xmath5 are full trios . [ trios ]",
    "we now prove a result which extends the semi - linearity of a family of languages to a bigger family .",
    "if @xmath334 is a full trio of semilinear languages and @xmath335 is the family of languages accepted by ncms , let @xmath336 .",
    "[ prop-3 ] every language in @xmath337 has a semilinear parikh map .",
    "let @xmath14 and @xmath12 be disjoint alphabets . define a homomorphism @xmath338 by @xmath339 for each @xmath340 , and @xmath341 for each @xmath342 . if @xmath7 is a language over @xmath15 , then @xmath343 .",
    "let @xmath344 and @xmath345 be in @xmath334 .",
    "then @xmath346 is also in @xmath334 , since @xmath334 is closed under inverse homomorphism .",
    "note that the parikh map of @xmath139 , @xmath347 , is semi - linear since @xmath334 is a semi - linear family .",
    "now let @xmath348 be a language accepted by an @xmath349 .",
    "clearly , any @xmath349 can be simulated by an @xmath349 @xmath350 whose counters are @xmath229-reversal .",
    "we may assume that a string is accepted by @xmath350 if and only if it enters a unique halting state @xmath76 with all counters zero .",
    "let @xmath350 have @xmath1 @xmath229-reveral counters .",
    "let @xmath351 be new symbols disjoint from @xmath14 .",
    "construct an nfa @xmath352 which when given a string @xmath23 in @xmath353 simulates @xmath350 , but whenever counter @xmath354 increments , @xmath352 reads @xmath355 when @xmath350 decrements counter @xmath354 , @xmath352 reads @xmath356 .",
    "( note that after the first @xmath356 is read , no @xmath357 should appear on the remaining input symbols . )",
    "@xmath352 guesses when each counter @xmath354 becomes zero ( this may be different time for each @xmath67 ) , after which , @xmath352 should no longer read @xmath356 . at some point , @xmath352 guesses that all counters are zero .",
    "it continues the simulation and when @xmath350 accepts in state @xmath76 , @xmath352 accepts . clearly , a string @xmath358 in @xmath15 is accepted by @xmath350 if and only if there is a string @xmath23 in @xmath353 accepted by @xmath352 such that :    \\(1 ) @xmath359 + ( 2 ) @xmath360 for each @xmath361 .",
    "let @xmath362 be the regular set accepted by @xmath352 . since @xmath334 is a full trio : @xmath363 hence the parikh map of @xmath364 is a semi - linear set @xmath365    now @xmath344 and @xmath366 .",
    "define the semi - linear set @xmath367 .",
    "( note that the first @xmath79 coordinates refer to the counts corresponding to symbols @xmath368 and the last @xmath369 coordinates refer to the counts corresponding to symbols @xmath370 . )",
    "then @xmath371 is semi - linear , since semi - linear sets are closed under intersection .",
    "now @xmath372 coincides with the projection of @xmath373 on the first @xmath79 coordinates .",
    "hence @xmath374 is semi - linear , since semi - linear sets are closed under projections .",
    "note that the above proposition does not depend on how the languages in @xmath334 are specified .",
    "it extends the semi - linearity of languages in @xmath334 to a bigger family that can do some `` counting '' .",
    "the proposition applies to all well - known full trios of semilinear languages , in particular , to @xmath375 .",
    "let @xmath334 be a full trio whose closures under homomorphism , inverse homomorphism and intersection with regular sets are effective .",
    "moreover , assume that for each @xmath7 in @xmath376 , @xmath377 can effectively be constructed .",
    "then @xmath337 has a decidable emptiness problem .",
    "note that @xmath335 is also a full trio of semilinear languages .",
    "it is easy to see that the proposition is not true if @xmath335 is an arbitrary full trio of semilinear languages .",
    "for example suppose @xmath378 is the family of languages accepted by 1-reversal npdas (= linear context - free languages ) .",
    "let @xmath379 @xmath380    clearly , @xmath139 and @xmath128 can be accepted by 1-reversal npdas .",
    "but @xmath381 is @xmath382 and it is not semilinear .",
    "similarly , it is easy to show that the proposition does not hold when @xmath378 is the family of languages accepted by nfas with one unrestricted counter ( i.e. , npdas with a unary stack alphabet in addition to a distinct bottom of the stack symbol which is never altered ) .",
    "finally , let @xmath383 and @xmath384 be any full trios of semilinear languages .",
    "it is clear that @xmath385 is a semilinear family .",
    "one can also show that @xmath386 is a semilinear family .",
    "the purpose of this section is to demonstrate that all bounded ginsburg semi - linear languages are in @xmath5 ( thus implying they are in @xmath4 as well ) , but not @xmath0 .",
    "notice that the language @xmath7 from proposition [ initialhierarchy ] is a bounded ginsburg semi - linear language .",
    "thus , the following is true :    [ linearbounded ] there are bounded ginsburg semi - linear languages that are not in @xmath0 .",
    "furthermore , it has been shown that in every semi - linear full trio , all bounded languages in the family are bounded ginsburg semi - linear @xcite .",
    "further , @xmath0 is a semi - linear full trio @xcite .",
    "therefore , the bounded languages in @xmath0 are strictly contained in the bounded languages contained in any family containing all bounded ginsburg semi - linear languages .",
    "we only mention here three of the many such families mentioned in @xcite .    the bounded languages in @xmath0 are strictly contained in the bounded languages from @xmath387 .    [ boundedginsburg ]",
    "@xmath5 contains all bounded ginsburg semi - linear languages .",
    "we now prove that if @xmath7 is a bounded ginsburg semi - linear language , with @xmath388 , then @xmath283 .",
    "since @xmath5 is closed under union by lemma [ lm-0 ] , it is enough to show it for a linear set @xmath12 .",
    "let @xmath12 be a set of the form @xmath389 where @xmath390 are vectors of @xmath11 . by denoting the arbitrary vector @xmath391 as @xmath392",
    ", we write @xmath12 as @xmath393 so that the language @xmath394 becomes    @xmath395    where @xmath396 .",
    "let us now define an indexed grammar @xmath59 such that @xmath109 .",
    "let @xmath397 , where @xmath398 and the set @xmath52 of productions is the following :    1 .",
    "@xmath399 2 .   for every @xmath400 @xmath401 3 .",
    "@xmath402 4 .   for every @xmath403 and",
    "for every @xmath404 @xmath405    let us finally prove that @xmath109 and @xmath59 is an uncontrolled grammar .",
    "let us first show that @xmath406 .",
    "let @xmath407 . by ( [ eq - l-1 ] ) , there exist @xmath408 such that @xmath409 consider the derivation defined by the word over the alphabet @xmath52 : @xmath410 where , for every @xmath411 , @xmath412 it is easily checked that @xmath413 .",
    "indeed , + @xmath414 + @xmath415 + @xmath416    so that @xmath417 .",
    "similarly , it can be shown that @xmath418 .    since it is known that in any semi - linear full trio , all bounded languages in the family are bounded ginsburg semi - linear , the bounded languages in @xmath5 coincide with several other families , including a deterministic machine model @xcite .",
    "the bounded languages in @xmath5 coincides with the bounded ginsburg semi - linear languages , which coincides with the bounded languages in @xmath387 ( and several other families listed in @xcite ) .",
    "also , since @xmath0 does not contain all bounded ginsburg semi - linear languages by proposition [ linearbounded ] , but @xmath5 does , the following is immediate :    @xmath419 .",
    "next , a restriction of @xmath5 is studied and compared to the other families . and indeed",
    ", this family is quite general as it contains all bounded ginsburg semilinear languages in addition to some languages that are not in @xmath420 .",
    "now let @xmath421 , with @xmath422 , be a production",
    ". then @xmath102 is called _ special _ if the number of occurrences of variables of @xmath176 in @xmath60 is at least @xmath423 , and _ linear _ , otherwise .",
    "denote by @xmath424 and @xmath425 the sets of special and linear productions of @xmath52 respectively . by definition [ eq - def-4 ] ,",
    "a grammar @xmath59 is uncontrolled finite - index if and only if the number of times special productions appear in every successful derivation of @xmath59 is upper bounded by a given fixed integer .",
    "next , we will deal with uncontrolled grammars such that in every successful derivation of @xmath59 , at most one special production occurs .",
    "the languages generated by such grammars form a family denoted @xmath6 .",
    "it is worth noticing that a careful rereading of the proof of theorem [ trios ] and lemma [ lm-0 ] shows that they hold for @xmath6 as well .",
    "further , it is clear that only one special production is used in every derivation of a word in the proof of proposition [ boundedginsburg ] .",
    "therefore , the following holds :    [ trio - restrict ] the family @xmath6 is a union - closed full trio and it contains all bounded ginsburg semilinear languages .",
    "it is immediate from the definitions that @xmath426 .",
    "further , since @xmath6 contains all bounded ginsburg semilinear languages by proposition [ trio - restrict ] , but the linear indexed languages do not , by proposition [ linearbounded ] , the following holds :    @xmath427 .",
    "then the following is true from @xcite .",
    "@xmath6 is a semilinear full trio containing all bounded ginsburg semilinear languages .",
    "further , the bounded languages in @xmath6 coincides with the bounded languages in @xmath428 , and several others listed in @xcite .",
    "we start this section by giving an example that clarifies previous results .",
    "let @xmath429 . if @xmath430 , then @xmath431 , where @xmath432 , with @xmath433 and @xmath434 .",
    "it is worth noticing that , by the discussion preceding proposition [ linearbounded ] , @xmath7 is not a linear indexed grammar .",
    "we define an uncontrolled finite - index grammar @xmath50 where @xmath435 @xmath436 , @xmath437 @xmath438 and the set @xmath52 of productions is : @xmath439 @xmath440 in general + @xmath441 + @xmath442 + as the only freedom in derivations of @xmath59 consists of how many times the rule @xmath52 is applied and of trivial variations in order to perform the rules @xmath443 , it should be clear that @xmath444 .",
    "lastly , it is known that @xmath420 can not generate some context - free languages @xcite , but all context - free languages can be generated by indexed linear grammars by theorem [ thm - a ] , which are all in @xmath6 .",
    "[ ex:1 ] we construct a grammar of index @xmath445 , which is not uncontrolled , that generates the language @xmath446 .",
    "let @xmath50 be the grammar where @xmath447 , @xmath448 , @xmath449 , and the set of productions of @xmath59 are defined as :                      let @xmath455 be a @xmath1-index @xmath2 system .",
    "we can assume without loss of generality that @xmath59 is in so - called active - normal form , so that the set of active symbols of @xmath176 ( those that can be changed by some production table ) is equal to @xmath456 .",
    "let @xmath457 be the set of production tables .",
    "then create an indexed grammar @xmath458 where @xmath459 , @xmath196 is a new variable , @xmath460 , and @xmath52 contains the following productions :        we will show by induction on @xmath67 , @xmath469 , that @xmath470 .",
    "indeed , @xmath471 , by using productions of type 1 followed by 2 . assume the inductive hypothesis is true for some @xmath67 , @xmath472",
    ". then @xmath470 .",
    "then the next index on every variable of @xmath466 is @xmath473 . applying the corresponding productions used in the derivation @xmath474 in table @xmath473 on each variable of @xmath466 one at a time from left - to - right created in step 3 ,",
    "@xmath475 is obtained .",
    "it is also clear that if the original derivation is of index-@xmath1 , then the resulting derivation is of index-@xmath369 ( since the derivation of the indexed grammar proceeds sequentially instead of in parallel , the number of variables of the indexed grammar could potentially be more than @xmath1 , but it is always less than the number of variables in the sentential form of the @xmath2 system plus the next sentential form ) .",
    "let @xmath476 .",
    "thus , @xmath477 , where @xmath478 and @xmath479 .",
    "it should also be clear that we can assume without loss of generality that this derivation proceeds by rewriting variables in a `` sweeping left - to - right '' manner .",
    "that is , if @xmath480 derives @xmath481 by rewriting variable @xmath12 , then @xmath481 derives @xmath482 by rewriting the first variable of @xmath483 if it exists , and if not , the first variable of @xmath481 .",
    "then one `` sweep '' of the variables by rewriting each variable is similar to one rewriting step of an @xmath2 system .",
    "by the construction , there exists @xmath484 such that @xmath485 are productions created in step 1 , @xmath486 is created in step 2 , and @xmath487 are created in step 3 .",
    "let @xmath488 be such that @xmath489 , and the derivation from @xmath490 is the start of the @xmath67th `` sweep '' from left - to - right , and let @xmath491 . for @xmath492 , let @xmath493 be obtained from @xmath490 by removing all indices ( so @xmath494 ) .",
    "we will show by induction that for all @xmath67 , @xmath492 , then @xmath495 , and all variables in @xmath490 are followed by the same index sequence .",
    "indeed , @xmath496 for some @xmath497 , @xmath498 , and @xmath499 .",
    "assume that the inductive hypothesis holds for some @xmath67 , @xmath500 .",
    "then in @xmath490 , all variables are followed by the same index sequence .",
    "let @xmath76 be the first index following every variable .",
    "then in the subderivation @xmath501 , because all productions applied were created in step 3 , they must all pop the first index , and since they all start with the same index , they must all have be created from productions in the same table @xmath76 .",
    "it is clear that @xmath502 using production table @xmath76 .",
    "it is also immediate that all variables in @xmath503 are followed by the same sequence of indices .",
    "the proof follows .",
    "it is an open question though as to how @xmath420 compares to @xmath5 . for finite - index @xmath2 , uncontrolled systems ,",
    "defined similarly to our definition of uncontrolled , does not restrict languages accepted .",
    "furthermore , it is known that @xmath420 is closed under kleene-@xmath504 @xcite and therefore contains @xmath505 .",
    "but we conjecture that this language is not in @xmath5 despite being in @xmath4 by the proposition above .",
    "this would imply that @xmath5 is incomparable with @xmath420 by corollary [ notetol ] .",
    "ibarra and i. mcquillan , on bounded semilinear languages , counter machines , and finite - index et0l . in : y. han and k. salomaa ( eds . ) , lecture notes in computer science , 21st international conference on implementation and application of automata , ciaa 2016 , seoul , south korea , vol .",
    "9705 , pp .",
    "138149 , ( 2016 ) .",
    "ibarra and i. mcquillan , on families of full trios containing counter machine languages . in : s. brlek and",
    "c. reutenauer ( eds . ) , lecture notes in computer science , 20th international conference on developments in language theory , dlt 2016 , montreal , canada , vol . 9840 ,",
    "216228 , ( 2016 ) .",
    "g. zetzsche , an approach to computing downward closures . in : m.m .",
    "halldrsson and k. iwama and n. kobayashi and b. speckmann ( eds . ) , automata , languages , and programming : 42nd international colloquium , icalp 2015 , kyoto , japan , july 6 - 10 , 2015 , proceedings , part ii , pp .",
    "440451 , ( 2015 ) ."
  ],
  "abstract_text": [
    "<S> the family , @xmath0 , of languages generated by linear indexed grammars has been studied in the literature . </S>",
    "<S> it is known that the parikh image of every language in @xmath0 is semi - linear . </S>",
    "<S> however , there are bounded semi - linear languages that are not in @xmath0 . here </S>",
    "<S> , we look at larger families of ( restricted ) indexed languages and study their properties , their relationships , and their decidability properties . </S>"
  ]
}
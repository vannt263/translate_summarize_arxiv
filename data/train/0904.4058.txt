{
  "article_text": [
    "today , os vendors and other computer security groups track and publish security impact information to `` provide a simple way to judge the severity of security updates ''  @xcite",
    ". os vendors use this information internally in order to determine which updates should be sent to customers in a timely manner .",
    "system administrators rely on this information `` to better schedule upgrades to their systems ''  @xcite  in other words , to decide whether an upgrade needs to happen immediately or whether it can be delayed for weeks or even months until the next `` important '' upgrade comes along .    in this paper",
    ", we argue that this general approach to os security  specifically , tracking security updates separately from other bug - fix updates so that security updates can be applied long before the average update  is counter - productive to os security .",
    "we show that the security implications of os bugs can easily elude developers , so that the true security implications of bugs are commonly not discovered until weeks or months after the bugs have been publicly disclosed . during this period",
    ", the patch for correcting a bug can remain widely unused since the bug has no known security impact .",
    "we present evidence that finding dangerous high - impact attacks for these disclosed `` low - impact '' bugs is much easier than finding new previously - unknown problems .",
    "every disclosed bug that is classified as having low impact is therefore potentially an invaluable blueprint for attackers to achieve their goals .",
    "tracking , classifying , and prioritizing security updates to the detriment of other updates is therefore a major security liability for operating systems .",
    "we argue that , counter - intuitively , the most security - conscious approach to os security is for vendors to ignore the expected security impact of updates . in other words ,",
    "security updates should not be regarded as a special kind of bug - fix update ; instead , in core os software , security bugs and normal bugs should be treated as indistinguishable for most practical purposes .",
    "instead of focusing on security updates , we argue that os vendors and security groups should seek update technologies that make it feasible to distribute updates for all disclosed os bugs in a timely manner .",
    "for example , _ hot update _",
    "technology allows a running software system , such as an os kernel , to be updated with a minimal amount of disruption .",
    "the rest of this paper is organized as follows : the next section describes two notable historical events and what they can teach us about security impact predictions .",
    "section  [ evaluation ] presents evidence that depending on security impact predictions is risky .",
    "section  [ hot - updates ] discusses how hot updates present a superior alternative to focusing on security impact predictions .",
    "section  [ related - work ] discusses related work , and section  [ conclusion ] concludes .",
    "the unix program ` sudo ` allows specified users to run specified commands with elevated privileges , according to a security policy defined in advance by the system administrator . on february 19 , 2001 , version 1.6.3p6 of ` sudo `",
    "was released , correcting a bug in the program s `",
    "do_syslog ` function that could cause it to perform an out - of - bounds read operation and thus crash with a segmentation fault .",
    "the bug causes ` sudo ` to send inappropriate areas of the heap to the unix system log function , ` syslog ` .",
    "this bug leads only to out - of - bounds read operations from memory , apart from a single nul byte written to memory before each call to ` syslog`and immediately thereafter restored to the byte s previous value .",
    "the crash occurs on a read operation when this process reaches the end of the heap .",
    "the narrow reach of this bug led many people to conclude that it did not threaten security .",
    "surely if ever there were a bug that could not be exploited , a bug that replaces a single byte with nul , only to immediately restore it , would be a leading candidate .",
    "security expert florian weimer called an exploit `` highly unlikely '' after a detailed analysis of the bug  @xcite .",
    "nevertheless , the bug can be exploited to achieve arbitrary execution . in november 2001 ,",
    "an exploit became public  @xcite . with a thorough understanding of the internal operation of ` malloc ` memory allocation",
    ", even this most narrowly circumscribed bug can be successfully exploited to gain full administrator privileges .",
    "this case exemplifies the difficulty of accurately dismissing any bug in core os software , even a seemingly mild one , as not posing a security issue .",
    "debian is one of the oldest and largest linux distributions ; it was started in august 1993 , and leading estimates indicate that roughly 35%  @xcite of linux machines run debian or one of the distributions built on top of debian , such as ubuntu .",
    "the debian project has had two security compromises of its server infrastructure in its 15-year history , on november 19 , 2003  @xcite and july 12 , 2006  @xcite .",
    "the 2003 incident was only possible because of a false reliance on security impact predictions .",
    "the 2003 compromise took advantage of a bug for which a patch was available on september 24 , eight weeks before the attack  @xcite .",
    "the bug had not been widely fixed by the time of the attack because no one knew that it could be exploited ; it was not classified as a security bug .",
    "the attack was only discovered because the attackers left behind unusual log messages , which were noticed by a debian system administrator  @xcite .",
    "the debian security team was then able to shut down the machines , locate the exploit code , disassemble it , and identify the nature of the exploit .",
    "had the attackers rootkit been more subtle , had they removed the exploit code before the machines were shut down , or had debian not possessed the expertise required to disassemble and reverse - engineer the exploit , the attackers could have gone on to the next compromise without having alerted anyone to the bug s security implications .",
    "the attackers quite likely did so with softer targets during the previous eight weeks .",
    "if the debian system administrators had applied all linux kernel bug fixes promptly , instead of only the bug fixes known to have security implications , then the attackers would have failed . with hot update technology , described in section  [ hot - updates ] , this update policy can potentially be practiced with minimal disruption .",
    "we examine two aspects of contemporary security impact information .",
    "we use the linux kernel for this evaluation due to its transparent development processes and widespread use .    in section  [ delays ] , we look at how commonly bugs are discovered to have security implications long after the bug and its corresponding patch have been publicly disclosed .    in section  [ completeness ] , we look at how commonly the security consequences of bugs are never known to those individuals and organizations who track security impact information . in particular , we look at whether it is advisable to treat the leading security vulnerability list , the common vulnerabilities and exposures ( cve )  @xcite list , as a complete list of the disclosed bugs that have severe security implications .      the purpose of this study was to investigate how often initially - inaccurate security impact information results in bugs with security consequences being overlooked .      we define the _ impact delay _ of a bug to be the period of time between when the bug was disclosed ( in this study , via a linux patch ) and when its security implications were identified ( i.e. , the bug was assigned a cve number ) .    in this study , we identified instances of linux kernel vulnerabilities with large impact delay .",
    "we generated our impact delay data using the following process :    first , we created a list of all of the linux kernel vulnerabilities added to the common vulnerabilities and exposures list during a three year period , from january 2006 to december 2008 .",
    "we then found the linux kernel patch corresponding to each of these vulnerabilities and looked at the date that each patch was finalized for inclusion into the linux kernel .    by comparing the date of the bug patch with the date that the bug cve was assigned",
    ", we found bugs whose security consequences were not recognized until many weeks after the bugs were initially disclosed .    requesting a cve number for a new vulnerability normally takes less than one business day , but we ignore vulnerabilities with less than two weeks of impact delay in our analysis , in order to be conservative .      of the 218 linux kernel cves from the studied interval , 25.7% ( 56 )",
    "had more than two weeks of impact delay .",
    "17.4% ( 38 ) of the cves had more than four weeks of impact delay , and 14.2% ( 31 ) had more than eight weeks of impact delay .",
    "see figure  [ fig : histograph ] for the distribution of cves with more than two weeks of impact delay .",
    "the raw data is available online  @xcite .    ]",
    "these results indicate that many linux bugs that pose a security risk are only denoted as having security impact several weeks after the bugs have been publicly disclosed .    to demonstrate that os vendors commonly delay fixing bugs not identified as having security impact , we studied the response of a leading vendor , red hat , to the 30 bugs with the longest impact delays , eight weeks or more .",
    "of these 30 bugs , 24 affected kernels distributed by red hat .",
    "we confirmed that none of these 24 bugs were fixed by red hat until after their security consequences had been discovered .",
    "we also considered how many bugs , at any given time , had _",
    "hidden impact_that is , had been disclosed as of that time , had no known security impact at that time , but were found to have security impact sometime before the end of 2008 .    on each day in 2006 , there were between 4 and 11 bugs with hidden impact . on each day in 2007 , there were between 6 and 16 bugs with hidden impact .",
    "see figure  [ fig : vuln - window ] .",
    "note that , by our definition of hidden impact , the number of bugs with hidden impact must go to zero by the end of 2008 ; if we had cve data for 2009 , this strong downward trend would presumably not occur .",
    "together these results show that bug disclosures , as commonly found in the form of os bug - fix updates , provide a rich vein of vulnerabilities not publicly identified as such and consequently not widely patched . in the next subsection , we explore how difficult it would be for an attacker to tap this vein .          the purpose of this study was to investigate how easy it is to find serious security bugs which have been disclosed , but not fixed even on `` fully - updated '' end - user machines , because of incorrect security impact predictions .",
    "we reviewed bug - fix patches affecting linux kernel version 2.6.24 .",
    "we selected this version simply because it was the first linux kernel release of 2008 .",
    "we looked at patches with no known security consequences to determine whether any of them actually have severe security consequences  in particular , whether any of them enable an attacker to achieve arbitrary code execution with administrator privileges .      within a few hours of review of the bug - fix patches affecting linux kernel version 2.6.24 , we identified a commit from february 2008 with serious security consequences ( git i d 7e3c396 , commit subject `` sys_remap_file_pages : fix ->vm_file accounting '' ) . at the time that we conducted this review ,",
    "this bug and its corresponding patch had been disclosed for more than 10 months , yet it had no associated cve number or record of any security consequences .",
    "we developed a privilege escalation exploit for this bug in a few hours ; doing so did not require any innovative techniques or extensive expertise .",
    "the exploit allows any user on a vulnerable system to gain full administrator privileges on the system .    since vendors use security impact predictions to determine which bug - fix patches to distribute , the patch for this bug was not widely distributed , even though other bug - fix patches from the same period were widely deployed .",
    "fedora 7 , for example , is affected by this bug but never received an update for it , which means that all fedora 7 systems remained vulnerable to this exploit through fedora 7 s end - of - life in june 2008 .",
    "we reported the security consequences of this bug in january 2009 , and it was assigned cve-2009 - 0024 at that time .",
    "we studied nearly year - old bug fixes to make our task more difficult ; as figure  [ fig : histograph ] shows , many more bugs have impact delays of two weeks or four weeks than ten months . yet even on bugs where no vulnerability had been identified nearly a year after disclosure , we succeeded with little effort in identifying and exploiting a vulnerability .",
    "an attacker seeking to exploit unidentified vulnerabilities in linux bug - fix disclosures would have , as figure  [ fig : vuln - window ] shows , between 4 and 16 bugs with hidden impact waiting for him or her at any time in the last three years .",
    "in this paper , we argue that os vendors should not attempt to treat security updates differently from other bug fix updates . unfortunately , distributing all updates with equal priority increases the quantity of updates that system administrators are expected to apply in a timely manner .    applying more os updates",
    "is problematic because of a long - standing problem with how software updates are typically performed : currently , a program must be restarted in order for it to be updated , which is disruptive .",
    "this problem is particularly severe for core os software , such as the kernel itself , that can not normally be updated without rebooting the operating system .",
    "frequent os reboots are costly since , in addition to any service availability concerns , many system administrators want to monitor their systems during the disruptive reboot process , in order to deal with any complications that arise .",
    "hot update techniques  @xcite make it possible to correct bugs in a running program without restarting the program or interfering with its operation .",
    "the ksplice hot update system  @xcite has recently shown that it is possible to transform many historical security patches into hot updates with little or no programmer involvement .",
    "if this progress can be extended , a hot update system could potentially generate hot updates for all core os bug - fix patches with little programmer involvement .",
    "achieving this goal would make it possible to stop relying on security impact predictions , which would , as we have argued , improve security .",
    "security researchers have surveyed known vulnerabilities , computing statistics involving various dates , such as dates of first disclosure and of exploit availability .",
    "rescorla  @xcite analyzed vulnerability disclosure rates to suggest that popular software contains many more vulnerabilities than have been discovered so far .",
    "frei et al .",
    "@xcite found that about 90% of vulnerabilities have exploits available within days after disclosure , while fewer than 20% have exploits available before disclosure .",
    "these results are consistent with our argument that hot update technology  or more generally , the ability to apply updates for newly - discovered bugs promptly  is important for improving security .    like linux vendors , microsoft",
    "s windows update service  @xcite classifies updates into categories based on the perceived impact of the updates , in order to encourage end - users and system administrators to install high - priority updates more rapidly than low - priority updates .",
    "we have shown that , following the disclosure of many core os bugs , weeks or months lapse before they are identified as security bugs . based on historical lessons and our own exploit investigation ,",
    "we conclude that disclosed bugs present a significant security risk until they are fixed with an update , regardless of their perceived security impact .",
    "treating some disclosed bugs as being the only bugs with high security impact , without conclusive proof , weakens os security by engendering a false sense of security while providing attackers with the information and time that they need to compromise systems .",
    "research into improved update technology , such as hot updates , has the potential to eliminate reliance on security impact predictions , which would be a notable security improvement .",
    "we thank frans kaashoek for helpful comments ."
  ],
  "abstract_text": [
    "<S> in this paper , we question the common practice of assigning security impact ratings to os updates . specifically , we present evidence that ranking updates by their perceived security importance , in order to defer applying some updates , exposes systems to significant risk .    </S>",
    "<S> we argue that os vendors and security groups should not focus on security updates to the detriment of other updates , but should instead seek update technologies that make it feasible to distribute updates for all disclosed os bugs in a timely manner . </S>"
  ]
}
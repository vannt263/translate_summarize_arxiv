{
  "article_text": [
    "the solution of families of shifted linear systems is a problem that occurs in many areas of scientific computing including partial differential equations @xcite , control theory @xcite , and quantum field theory @xcite . in the latter case ,",
    "this problem is of particular importance in the simulation of the strong coupling dynamics of gauge theories with non - abelian symmetry groups .",
    "considerable computational effort has been devoted to this problem , with particular emphasis on lattice studies of quantum chromodynamics ( qcd ) , the theory that describes the forces that bind atomic nuclei together . in all such studies , the inclusion of dynamical fermions results in a drastic increase in the cost of computation , but is key to achieving physically meaningful results .",
    "the rational hybrid monte carlo ( rhmc ) algorithm @xcite is the most efficient way of treating dynamical fermions in computer simulation .",
    "this method approximates the pfaffian or determinant , depending on the theory in question , which arises through formal path integration over the fermionic fields , with a related quadratic bosonic path integral that is diagonalized by solving a set of shifted linear systems . hence the main computational effort in simulating",
    "strongly coupled non - abelian gauge theories is in solving a family of sparse linear systems .",
    "the most common technique for solving shifted families of sparse linear systems is to use krylov subspace methods ( see section [ sec : krylov ] ) .",
    "the fact that krylov subspace techniques can be used to simultaneously solve shifted families of linear equations is a result of the simple fact that the krylov subspace of a matrix is not altered by shifting the matrix by some multiple of the identity .",
    "it has been shown that a clever reuse of the iteration constants can generate a whole family of shifted solutions without the need for additional matrix - vector multiplications @xcite .",
    "all solutions can therefore be generated at the cost of generating the solution for which the linear problem is least well conditioned .",
    "simulations , however , remain expensive and it is of great importance to find methods for delivering results more quickly and cheaply .",
    "the advent of general purpose computing using graphics processing units has led to the disruptive acceleration of many areas of scientific computing .",
    "examples abound , from molecular dynamics @xcite to atmospheric physics @xcite , in which the use of gpus to accelerate computation has allowed commodity desktop hardware to rival the performance of conventional clusters with many cpu cores .",
    "it seems is useful , then , to exploit this technology for the solution of shifted linear systems .    in the case of simulations of qcd",
    ", considerable effort has been devoted to developing techniques for delivering high performance simulations , including methods for simulation using graphics processing units ( gpus ) @xcite .",
    "however , the problem of the simultaneous solution of shifted linear systems is the key step in the simulation of a whole class of quantum field theories , of which qcd is but one important member .",
    "moreover , for the study of theories other than qcd using code developed specifically for that theory is prohibatively difficult .",
    "this represents an important problem , now that high energy physics has entered the lhc era , there is the possibility that interesting strongly coupled physics could turn out to be present at the tev scale .",
    "were this to be the case , it would be important to have code that would allow one to simulate candidate theories cheaply . also , the simulation of supersymmetric field theories is of great interest ( see the review @xcite ) , not only because of the possibility that supersymmetry could be revealed as a symmetry of nature .",
    "supersymmetric theories are of intrinsic interest themselves because of their rich mathematical structure .",
    "they are also important for the testing and understanding of the conjectured duality between certain gauge theories and gravity theories motivated by considerations from string theory @xcite .",
    "reducing the costs of both sorts of simulations requires the development of flexible tools that can handle the bulk of the computational expense , and that can be easily incorporated into the simulation of new theories as they become of interest .",
    "though existing gpu codes for qcd achieve remarkable performance , they are designed specifically for studying that theory .",
    "it is therefore highly desirable to have code that allows the solution of generic families of shifted linear systems .",
    "moreover , since this problem also occurs in partial differential equations @xcite , and in control theory @xcite , the existence of stand - alone methods of sufficient genericity may be of use in those fields as well .",
    "in this paper we will describe a freely available open source code that can be used to solve shifted families of sparse linear systems using nvidia gpus .",
    "though this code is written in cuda , its use does not require users to write cuda code directly .",
    "instead they may simply call the routines without the necessity of understanding how the code will be run on the gpu .",
    "the code provides gpu implementations of the two most commonly used algorithms in lattice gauge theory for simulating dynamical fermions : the multimass conjugate gradient ( cg - m ) and multimass biconjugate gradient stabilized ( bicgstab - m ) methods .",
    "we find that our gpu solver can deliver the solution of a family of linear systems with 15 shifts in less than 1/12@xmath0 the time it takes to deliver the solution the same system with no shifts on a single cpu core , using our test hardware .    in section [ sec : krylov ]",
    "we discuss the mathematical problem we wish to solve , situating it in the context of simulations of quantum field theories with dynamical fermions .",
    "we also review the key aspects of the iterative methods used to solve problems of this class . in section",
    "[ sec : gpu ] we describe the the computational considerations that arise in solving problems in this class , and describe how our implementation of the solution algorithm on the gpu handles them . in section",
    "[ sec : perf ] we describe the performance our programs . in section [ sec : disc ]",
    "we conclude with discussions for directions for future work .",
    "in the simulation of quantum field theories with fermions the bulk of the computational expense involves performing the path integral over the fermions . in a wide class of theories of interest ,",
    "operators that occur in the lagrangian of the theory are quadratic in the fermions , meaning that they can be formally integrated out , at the expense of leaving a purely bosonic path integral that includes the pfaffian or determinant of some operator whose precise form is differs by theory .",
    "the calculation of the pfaffian / determinant normally proceeds by using a chain of identities in linear algebra and bosonic path integration to covert the calculation into a quadratic path integral over a set of bosonic fields , conventionally termed pseudofermions .",
    "the quadratic bosonic action is difficult to write in a form that is suitable for doing simulations , i.e.  in diagonal form , because it involves the operator that appeared in the original fermionic action , but now raised to some inverse fractional power . to diagonalize the operator that appears in the quadratic pseudofermion action ,",
    "the standard practice is to approximate it by means of a series of rational functions of the fermionic operator .",
    "this approximate form can be diagonalized directly by solving a set of shifted linear systems .    at its essence",
    "the main computational hurdle in the simulation of quantum field theories with dynamical fermions can be reduced to solving a set of linear equations @xmath1 in this expression @xmath2 is a matrix that is related to fermion operator in the field theory , @xmath3 is the identity matrix , @xmath4 are constants that come from the rational approximation of the pseudofermion operator , @xmath5 is the pseudofermion field , and @xmath6 are sought - after unknowns that contribute to diagonalized form of the pseudofermion operator . in general , this system of equations can get quite large . at the absolute lowest end , a recent study of a one dimensional supersymmetric theory required the solution of complex linear systems that were @xmath7 @xcite .",
    "most applications , however , require the solution of much larger systems . reasonable simulations of maximally supersymmetric yang - mills theory in four spacetime dimensions , for example , require linear systems with sizes on the order @xmath8 to study the theory with gauge group @xmath9 @xcite . moreover , this system must be solved repeatedly throughout the simulation as new monte carlo moves are generated .",
    "fortunately , in most applications the matrix @xmath2 is sparse , which means that iterative methods can be used , greatly reducing the computational expense .",
    "there is a vast literature on iterative methods for the solution of sparse linear systems ; a nice review with references to key papers is given in @xcite .",
    "these methods are of pivotal importance in , for instance , the solution of discrete approximations of partial differential equations .",
    "a common feature of many of them is that the solution makes use of the krylov subspace of the matrix @xmath2 .",
    "given some matrix @xmath2 , and a vector @xmath5 ( so chosen because they will be precisely the quantities that appear in our problem ) the krylov subspace of order @xmath10 of the matrix @xmath2 is given by @xmath11 the iterative solution of linear problems proceeds by getting better approximations to the exact solution by a carefully chosing the approximate solution from successively higher order krylov subspaces .",
    "in non - pathological systems this converges to a unique solution .",
    "the @xmath12 order solution can , in general , be written as @xmath13 where @xmath14 is some polynomial in the matrix @xmath2 whose coefficients are different for different methods .",
    "a key feature of these methods is that the most computationally expensive step is matrix - vector multiplication , which is significantly less expensive than directly inverting the matrix .",
    "for our purposes , we are interested in solving a family of related linear problems that are all related by constant shifts . _",
    "a priori _ it might seem that we would be forced to solve each problem independently in turn .",
    "however , one can notice from that @xmath15 this equivalence of the krylov subspaces for the shifted and unshifted systems suggests that it might be possible to simultaneously generate the solution of the whole family of shifted solutions , provided one can construct shifted versions of the polynomials appearing in .",
    "indeed , this has been done explicitly in @xcite for common solution algorithms .",
    "the cost of producing the whole family of shifted solutions is determined by the cost of solving the system that is least well conditioned @xcite . in typical applications , the shifts @xmath4 are positive , meaning the shifted systems are more well - conditioned then the unshifted one , and therefore the whole family can be solved for the price of the solution of the unshifted system . for illustrative purposes we present the cg - m algorithm [ alg : cgm ] .",
    "@xmath16 @xmath17 @xmath18 @xmath19 @xmath20 @xmath21 @xmath22 @xmath23 @xmath24 @xmath25 @xmath26 @xmath27 @xmath28 @xmath29 @xmath30 @xmath31 @xmath32 @xmath33 @xmath34 @xmath35 @xmath36 @xmath37 @xmath38 @xmath39 @xmath40 @xmath41 @xmath42 @xmath43 @xmath44 @xmath45    in this algorithm , variables indexed by @xmath46 are arrays of values for each of the desired shifts in the system of interest . lines 2 through 14 initialize the system . the variable @xmath47 is a vector that stores the residual for the unshifted system defined by @xmath48 in which @xmath49 is the iterative solution of the unshifted system . directly . ]",
    "the criteria for halting the iteration in line 15 , are that the residual satisfies some error tolerance , and that some iteration limit is not exceeded .",
    "the iterative procedure is given in lines 16 through 32 .",
    "a number of steps simply involve reshuffling constants between iterations .",
    "lines 22 , 23 and 26 are responsible for computing the iteration parameters for the shifted system in terms of those of the unshifted system .",
    "the most expensive computational step is in line 18 , where a matrix - vector product is computed .",
    "lines 28 and 29 are key steps in which the set of solutions of the shifted system are computed .",
    "for the iterative solution of linear systems the most expensive part of the computation is sparse matrix - vector multiplication ( spmv ) . achieving high performance spmv on",
    "the gpu was the focus of @xcite and the authors of that paper have produced open source code implementing the ideas developed therein @xcite .",
    "although it was found that the spmv routines did not saturate the computing bound of the gpu , the authors were still able to see drastically reduced wall - times for their code compared to a cpu implementation .",
    "the aim of this paper is to develop routines to solve the family of problems efficiently on the gpu .",
    "the key considerations affecting the design of our implementation are : the code should be able to be called simply by users who wish to incorporate the solver into existing code , or to incorporate it into code used for studying new theories ; the code should be written in a programming language that would allow users to call it from a variety of applications ; users should have the option of having minimal knowledge of how the computation is performed on the gpu ; users should have the option of developing highly optimized versions for specific problems if desired . as a result of these considerations",
    "we were led to develop our solver using the cusp libraries @xcite .",
    "cusp is the aforementioned set of spmv routines developed by the authors of @xcite .",
    "these routines are , in turn , largely based on thrust @xcite a template library , much like the c++ standard template library , but one which uses the gpu .",
    "these libraries provide a means by which we could write a linear solver without requiring users to write any cuda code , let alone device kernels , directly . indeed , much of the complication that arises in gpu programming , including the allocation of memory on the gpu , and distribution of parallel threads is handled by the library",
    ". moreover , cusp contains basic sparse matrix and array containers that are can be easily incorporated into existing code and filled with necessary data .",
    "finally , it also allows the flexibility to define custom linear operator kernels if specific applications warrant the investment of time to develop highly optimized code .",
    "the development of the solver was substantially aided by the existence of efficient spmv routines provided by cusp , which we used to perform the matrix - vector multiplication in line 18 of the algorithm [ alg : cgm ] .",
    "the key remaining performance consideration was to construct the rest of the solver in such a way as to take advantage of the existing spmv performance .",
    "the two main issues requiring attention in this regard are the distribution of computation between the cpu and gpu , and the construction of appropriate kernels to perform computation on the gpu .",
    "regarding the distribution of computation betwen cpu and gpu , at various points in the solution algorithm presented in section [ sec : krylov ] part of the iteration requires the computation of arrays of iteration constants , e.g.  in lines 22 and 23 of the algorithm [ alg : cgm ] .",
    "the size of these arrays is determined by the number of shifts , which for a typical application is on the order of 10 . because the gpu exposes such a high degree of parallelism , such computations represent a serial bottleneck . this does not , however , suggest that one should those computations on the cpu . in general , copying memory between the cpu and the gpu constitutes a substantial overhead , and it is preferable to perform what is , in essence , a serial computation on the gpu .",
    "we are led , therefore to implement the entire solution on the gpu .",
    "to do so requires the construction of custom kernels to implement the various calculations required during the iteration , of particular concern are the kernels to implement the operations in lines 28 and 29 of the algorithm [ alg : cgm ] , which are the next most computationally expensive after the spmv operation .",
    "some of these kernels are essentially the vectorization of level one blas type operations , but others are more complicated . given the expectation that the routine would be memory - bandwidth limited , a key design consideration for the kernels was the use of registers to store the data contained in array elements that are used in multiple floating point operations .",
    "we have implemented cg - m and bicgstab - m solvers satisfying all of these design criteria , which have been incorporated into the open - source cusp project , and are currently available online @xcite .",
    "an example program is shown in figure [ fig : code ] .",
    "in this code , line 3 includes the library containing the solver .",
    "lines 6 through 16 set the quantities that define the linear system . in this case ,",
    "line 15 loads a pre - defined matrix that is part of the cusp library .",
    "line 18 defines a matrix in device memory , and copies the corresponding matrix in host memory to it .",
    "line 20 is the call to the solver .",
    "line 22 allocates memory for the solution on the host , and copies the solution on the device to it .",
    "notice that this code does not involve explicit calls to cuda functions , rather they are hidden in the libraries that define the constructs cusp::device_memory .",
    "to test the performance of our code we used a gpu equipped machine at the fermi national accelerator laboratory ( fermilab ) .",
    "this machine has an intel nehalem processor clocked at 2.67 ghz and 12 gb of ram , and an nvidia tesla s1070 card with 4 t10 gpus . as a simple test of our method",
    ", we solved the poisson equation in two - dimesions simultaneously for a set of 15 shifts on the gpu , and compared the peformance to the solution of a single unshifted system on a single cpu core .",
    "we believe this provides a very conservative estimate of the performance of our routine .",
    "the single unshifted solver we used for comparison was the one from the cusp library , and was written by others .",
    "this ensures that any performance gains we report do not stem from us poorly implementing the unshifted solver .    a test problem that has the virtue both of simplicity , and of demonstrating that our routines are in no way specific to applications in high energy theory , is to solve the poisson equation in two - dimensions .",
    "we solve the 2d poisson equation by using a finite difference scheme in which the laplacian is represented with a five - point stencil on a @xmath50 grid .",
    "this system size is also near the system sizes of interest for applications in high energy theory .    in table",
    "[ tab : stencilperf ] we summarize the performance of our gpu implementation of the cg - m algortithm compared to gpu and single - core cpu implementations of the unshifted cg algorithm .",
    "we see considerable peformance improvements of the shifted solver on the gpu compared with the unshifted solver on a single cpu core . in double precision",
    "we see that our shifted solver can produce the solution for a family of 15 shifts on the gpu in less than @xmath51 the time it takes to produce the solution for a single shift on a cpu core .",
    "therefore , even by this conservative measure our solver is performing well .",
    "note however that the unshifted solver on the gpu is faster than our shifted solver by a factor of a few .",
    "this is not unexpected and occurs also for implementations on the cpu . in typical applications",
    "there are at least a few shifts that do not lead to a significantly better conditioned system , and so it remains computationally more feasible to use the cg - m routine once , rather than the cg routine repeatedly .",
    "[ tab : stencilperf ]    .performance of unshifted cg solver on a single cpu core , and on the gpu @xcite , compared with the cg - m routine developed in this paper .",
    "[ cols=\"<,<,<\",options=\"header \" , ]",
    "we have presented results of an implementation of shifted krylov subspace solvers on the gpu .",
    "we demonstrated significant performance improvements over similar solvers on the cpu . with an eye to future work in high energy physics ,",
    "the design of our solver stressed ease of incorporation into routines that would allow the simulation of many different quantum field theories with minimal modifications to existing code .",
    "we believe that our solvers constitute a valuable tool as physicists contemplate the possibility of interesting strongly coupled phenomena at the large hadron collider , or attempt to recover black hole thermodynamics from various strongly coupled supersymmetric gauge theories , along the lines set out in @xcite .",
    "our shifted solvers cg - m and bicgstab - m are available through the open - source cusp project .",
    "as we mentioned in the introduction , shifted linear systems are not only of interest to quantum field theorists . indeed , though they crop up in other areas of scientific computing , they are a special case of a broader class of problems.one can imagine situations in which it would be desirable to solve a class of linear problems given by @xmath52 i.e.  those similar to , but with a different right - hand side for each shift . _ a priori _ , this would appear problematic , since the usual initial choice of solution would put @xmath53 , and therefore the residuals @xmath54 would , in general be linearly independent .",
    "this would mean that the resulting krylov subspaces would differ between shifts .",
    "it was pointed out in @xcite , however , that a judicious choice of initial guesses can deliver the same initial residual for each of the linear systems .",
    "this implies , in turn , that the same krylov subspace method could be used to solve this family of systems as well .",
    "the method for the generation of initial guesses in @xcite involves a number of spmv operations , and so it seems worthwhile to develop a routine capable of producing these intial guesses using the gpu , after which our solver could finish the solution of the family of systems .",
    "we would like to thank s.  catterall and s.  glotzer for helpful discussions , and n.  bell , j.  hoberock , and d.  holmgren for helpful communication , j.   anderson for comments on the manuscript , and m.  van anders for collaboration at the beginning of this work .",
    "this work is supported in part by the us department of energy under grant de - fg02 - 95er40899 .",
    "tests were performed using usqcd resources at fermilab .",
    "e.  gallopoulos , y.  saad , efficient parallel solution of parabolic equations : implicit methods on the cedar multicluster , in : j.  dongarra , p.  messina , d.  c. sorensen , r.  g. voigt ( eds . ) , ppsc , siam , 1989 , pp .",
    "251256 .",
    "b.  n. datta , y.  saad , arnoldi methods for large sylvester - like observer matrix equations , and an associated algorithm for partial spectrum assignment , linear algebra and its applications 154 - 156 ( 1991 ) 225  244 .",
    "http://dx.doi.org/10.1016/0024-3795(91)90378-a [ ] .",
    "j.  a. anderson , c.  d. lorenz , a.  travesset , general purpose molecular dynamics simulations fully implemented on graphics processing units , journal of computational physics 227  ( 10 ) ( 2008 ) 5342  5359 . http://dx.doi.org/10.1016/j.jcp.2008.01.047 [ ] .    f.  molnr , t.  szakly , r.  mszros , i.  lagzi , air pollution modelling using a graphics processing unit with cuda , computer physics communications 181  ( 1 ) ( 2010 ) 105  112 . http://dx.doi.org/10.1016/j.cpc.2009.09.008 [ ] .",
    "g.  i. egri , z.  fodor , c.  hoelbling , s.  d. katz , d.  nogradi , k.  k. szabo , lattice qcd as a video game , comput . phys . commun . 177 ( 2007 ) 631639 . http://arxiv.org/abs/hep-lat/0611022 [ ] , http://dx.doi.org/10.1016/j.cpc.2007.06.005 [ ] .",
    "m.  a. clark , r.  babich , k.  barros , r.  c. brower , c.  rebbi , solving lattice qcd systems of equations using mixed precision solvers on gpus , comput .",
    "commun . 181",
    "( 2010 ) 15171528 .",
    "[ ] , http://dx.doi.org/10.1016/j.cpc.2010.05.002 [ ] .              n.  bell , m.  garland , implementing sparse matrix - vector multiplication on throughput - oriented processors , in : sc 09 : proceedings of the conference on high performance computing networking , storage and analysis , acm , new york , ny , usa , 2009 , pp .",
    "http://dx.doi.org/10.1145/1654059.1654078 [ ] .",
    "s.  catterall , t.  wiseman , towards lattice simulation of the gauge theory duals to black holes and hot strings , jhep 12 ( 2007 ) 104 .",
    "http://arxiv.org/abs/0706.3518 [ ] , http://dx.doi.org/10.1088/1126-6708/2007/12/104 [ ] ."
  ],
  "abstract_text": [
    "<S> we describe the gpu implementation of shifted or multimass iterative solvers for sparse linear systems of the sort encountered in lattice gauge theory . </S>",
    "<S> we provide a generic tool that can be used by those without gpu programming experience to accelerate the simulation of a wide array of theories . </S>",
    "<S> we stress genericity , which is important to allow the simulation of candidate theories for new physics at lhc , and for the study of various supersymmetric theories . </S>",
    "<S> we find significant speed ups , which we conservatively bound below at at least twelve times , that promise to put a variety of research questions within practical reach .    </S>",
    "<S> cuda , gpu , gpgpu , krylov subspace methods , lattice gauge theory </S>"
  ]
}
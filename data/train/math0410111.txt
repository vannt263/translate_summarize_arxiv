{
  "article_text": [
    "mixed integer non - linear programs combine the hardness of combinatorial explosion with the non - convexity of non - linear functions .",
    "for example , the well - known optimality conditions developed for differentiable objective functions have no meaning when the variables are discrete .",
    "thus , it is perhaps not surprising that already linear integer programming with general quadratic constraints is undecidable @xcite",
    ". nevertheless , when the number of variables is fixed discrete optimization problems often become tractable and efficient polynomial algorithms exist ( e.g.@xcite ) .",
    "it is thus natural to ask _ what is the complexity of integer non - linear optimization assuming that the number of variables is fixed ? _ we study the problem @xmath0 here @xmath1 are polynomials with integral coefficients .",
    "note that all throughout the paper we assume that the number of variables is fixed . here",
    "are our two contributions to the theory :    _ ( 1 ) _ we give a classification of the computational complexity of problem ( [ model ] ) according to special cases .",
    "section [ bounds ] of this article presents the details , but the reader can see the classification in table [ gogo ] .",
    "new results are marked with letters , known results are marked with asterisks , arrows indicate implications :    cc@ c@ c@ c@ c & + & & & convex & & arbitrary + type of constraints & linear & & polynomial & & polynomial + linear constraints , integer variables & polytime ( @xmath2 ) & @xmath3 & polytime ( @xmath4 ) & & np - hard ( a ) + & @xmath5 & & @xmath5 & & @xmath6 + convex semialgebraic constraints , integer variables & polytime ( @xmath4 ) & @xmath3 & polytime ( @xmath4 ) & & np - hard ( c ) +   + arbitrary polynomial constraints , integer variables & undecidable ( b ) & @xmath7 & undecidable ( d ) & @xmath7 & undecidable ( e ) +    _ ( 2 ) _ for problem @xmath8 , that of optimizing an arbitrary integral polynomial over the lattice points of a convex rational polytope with fixed number of variables , we present an algorithm to compute a sequence of upper and lower bounds for its optimal value .",
    "our bounds can be used , for instance , in a branch - and - bound search for the optimum .",
    "we use barvinok s algebraic encoding of the lattice points of polytopes via rational functions @xcite . in section [ algo ]",
    "we prove :    [ main ] let the number of variables @xmath9 be fixed .",
    "let @xmath10 be a polynomial of maximum total degree @xmath11 with integer coefficients , and let @xmath12 be a convex rational polytope defined by linear inequalities in @xmath9 variables .",
    "we obtain an increasing sequence of lower bounds @xmath13 and a decreasing sequence of upper bounds @xmath14 to the optimal value @xmath15 the bounds @xmath16 , @xmath17 can be computed in time polynomial in  @xmath18 , the input size of @xmath12 and @xmath19 , and the maximum total degree  @xmath11 and they satisfy the inequality @xmath20{|p      \\cap { \\mathbb z}^d|}-1).$ ]    more strongly , if @xmath19 is non - negative over the polytope ( i.e. @xmath21 for all @xmath22 ) , there exists a fully polynomial - time approximation scheme ( fptas ) for the optimization problem  .",
    "we conclude with examples and a brief look at the mixed integer problem .",
    "all the results we present refer to the complexity model where the number of operations is given in terms of the input size measured in the standard binary encoding .",
    "the results of h.  w. lenstra jr . @xcite",
    "imply the entry of table [ gogo ] marked with @xmath23 , i.e. solving linear integer programming problems with a fixed number of variables can be done in time polynomial in the size of the input .",
    "more recently , khachiyan and porkolab @xcite have proved that in fixed dimension , the problem of minimizing a convex polynomial objective function over the integers , subject to polynomial constraints that define a convex body , can be solved in polynomial time in the encoding length of the input .",
    "thus , they settled all entries marked by @xmath24 . by the natural containment exhibited by these complexity classes , to show the validity of the remaining entries of table [ gogo ] is enough to prove the following lemma :    1 .",
    "the problem of minimizing a degree four polynomial over the lattice points of a convex polygon is np - hard ( entry @xmath8 in table [ gogo ] ) .",
    "the problem of minimizing a linear form over polynomial constraints in at most 10 integer variables is not computable by a recursive function ( entry @xmath25 in table [ gogo ] ) .",
    "\\(1 ) we use the np - complete problem an1 on page 249 of @xcite .",
    "this problem states it is np - complete to decide whether , given three positive integers @xmath26 , there exists a positive integer @xmath27 such that @xmath28 is congruent with @xmath29 modulo @xmath30 .",
    "this problem is clearly equivalent to asking whether the minimum of the quartic polynomial function @xmath31 over the lattice points of the rectangle @xmath32 is zero or not .",
    "this settles part ( 1 ) .",
    "\\(2 ) in 1973 jeroslow @xcite proved a similar result without fixing the number of variables .",
    "we follow his idea , but resorting to a stronger lemma .",
    "more precisely our proof relies on a 1982 result @xcite which states that there is no recursive function that , given an integer polynomial @xmath19 with _ nine _ variables , can determine whether @xmath19 has a non - negative integer zero , in the sense that it finds an explicit zero or returns null otherwise .",
    "jones paper is a strengthening of the original solution of hilbert s tenth problem @xcite . now to each polynomial @xmath19 in @xmath33 $ ] associate the ten - dimensional minimization problem @xmath34 the minimum attained by @xmath35 is either zero or one depending on whether @xmath19 has an integer non - negative solution or not .",
    "thus part ( 2 ) is settled .",
    "consider now a polynomial function @xmath36 $ ] of maximum total degree @xmath11 and a convex polytope @xmath37 where @xmath38 is an @xmath39 integral matrix and @xmath30 is an integral @xmath40-vector .",
    "the purpose of this section is to present an algorithm to generate lower and upper bounds @xmath41 to the integer global optimum value of @xmath42 we should also remark that in our algorithm the polynomial objective function @xmath19 can be arbitrary ( e.g.  non - convex ) .",
    "as we have seen , the optimization problem is np - hard already for two integer variables and polynomials of degree four .",
    "nevertheless we will see that , in fixed dimension and when @xmath43 for all @xmath22 , the algorithm gives a fully polynomial time approximation scheme or fptas .",
    "this means that , in polynomial time on the input and @xmath44 , one can compute a @xmath45-approximation to the maximum .",
    "the algorithm we present is based on a. barvinok s theory for encoding all the lattice points of a polyhedron in terms of short rational functions .",
    "see @xcite for all details .",
    "lattice points are thought of as exponent vectors of monomials .",
    "for example , @xmath46 encodes the lattice point @xmath47 .",
    "the set of lattice points is represented by a laurent polynomial : @xmath48 from barvinok s theory this exponentially - large sum of monomials @xmath49 can instead be written as a polynomial - size sum of rational functions ( assuming the dimension @xmath9 is fixed ) of the form : @xmath50 where @xmath51 is a polynomial - size indexing set , and where @xmath52 and @xmath53 for all @xmath54 and @xmath55 .",
    "for details see @xcite .",
    "we need a way to encode via rational functions the values of the polynomial @xmath19 over all the lattice points in a polytope .",
    "the key idea , first introduced in lemma 9 of @xcite and generalized in @xcite , is that differential operators associated to @xmath19 can be used to compute a rational function representation of @xmath56 the following lemma recently appeared in @xcite :    [ operators ] let @xmath49 be the barvinok representation of the generating function of the lattice points of @xmath12 .",
    "let @xmath19 be a polynomial in @xmath57 $ ] of maximum total degree @xmath11 .",
    "we can compute , in time polynomial on @xmath11 and the size of the input data , a barvinok rational function representation @xmath58 for the generating function @xmath56    we give here the author s original proof the lemma for @xmath11 fixed . the first proof without this assumption",
    "was recently given by a. barvinok in @xcite .",
    "we begin assuming @xmath59 , the general case will follow from it : consider the action of the differential operator @xmath60 in the generating function @xmath49 and on its barvinok representation .",
    "on one hand , for the generating function @xmath61 on the other hand , by linearity of the operator , we have that in terms of rational functions @xmath62 thus it is enough to prove that the summands of the expression above can be written in terms of rational functions computable in polynomial time . the standard quotient rule for derivatives",
    "says that @xmath63 we can expand the numerator as a sum of no more than @xmath64 monomials .",
    "this is a constant number because @xmath9 , the number of variables , is assumed to be a constant .",
    "this argument completes the proof of our lemma when @xmath59 .    for the case when @xmath65 is a general monomial , i.e. @xmath66 , then we can compute again a rational function representation of @xmath58 by repeated application of basic differential operators : @xmath67 thus we require no more than @xmath68 repetitions of the single - variable case .",
    "finally , if we deal with a polynomial @xmath19 of many monomial terms , we compute and add up all such expressions that we get for each term of @xmath69 and obtain our desired short rational function representation for the generating function for @xmath70 note that only polynomially many steps are needed because @xmath9 is fixed and the largest number of possible monomials in @xmath19 of degree @xmath71 is @xmath72 , thus for fixed @xmath9 we will do no more than @xmath73 repetitions of the monomial case .",
    "now we are ready to present our algorithm to obtain bounds @xmath74 that reach the optimum .",
    "step 1 of preprocessing is necessary because we rely on the elementary fact that , for a collection @xmath75 of non - negative real numbers , @xmath76 equals @xmath77{\\sum_{j=1}^r s_j^k}.$ ]    * algorithm * [ algorithm ]    _ input : _ a rational convex polytope @xmath78 , a polynomial objective @xmath79 $ ] of maximum total degree @xmath11 .",
    "_ output : _ an increasing sequence of lower bounds @xmath16 , and a decreasing sequence of upper bounds @xmath17 reaching the maximal function value @xmath80 of @xmath19 over all lattice points of @xmath12 .    * step 1 . *",
    "if @xmath19 is known to be non - negative in all points of @xmath12 , then go directly to step 2 .",
    "else , solving @xmath81 linear programs over @xmath12 , we find lower and upper integer bounds for each of the variables @xmath82 .",
    "let @xmath83 be the maximum of the absolute values of these @xmath81 numbers .",
    "thus @xmath84 for all @xmath54 .",
    "let @xmath85 be the maximum of the absolute values of all coefficients , and @xmath86 be the number of monomials of @xmath69 .",
    "then @xmath87 as we can bound the absolute value of each monomial of @xmath69 by @xmath88 . replace @xmath19 by @xmath89 , a non - negative polynomial over @xmath12 . go to steps 2 , 3 ,",
    "etc .  and return the optimal value of @xmath90 trivially , if we find the optimal value of @xmath91 over @xmath12 we can extract the optimal value for @xmath19",
    ".    * step 2 .",
    "* via barvinok s algorithm ( see @xcite ) , compute a short rational function expression for the generating function @xmath92 . from @xmath49 compute the number @xmath93 of lattice points in @xmath12 in polynomial time .",
    "* step 3 . * from the rational function representation @xmath94 of the generating function @xmath95 compute the rational function representation of @xmath96 of @xmath97 in polynomial time by application of lemma [ operators ] .",
    "we define    @xmath98{g_{p , f^k}(1)/g_{p , f^0}(1)}\\;\\;\\;\\text{and}\\;\\;\\ ; u_k:=\\sqrt[k]{g_{p , f^k}(1)}.\\ ] ]    when @xmath99 stop and return @xmath100 as the optimal value .",
    "* end of algorithm*.    the algorithm is correct .    using the fact that the arithmetic mean of a finite set of nonnegative values is at most as big as the maximum value , which in turn is at most as big as the sum of all values",
    ", we obtain the sequences of lower and upper bounds , @xmath101 and @xmath102 , for the maximum : @xmath103{\\frac{\\sum\\limits_{\\alpha\\in p \\cap { \\mathbb z}^d } f(\\alpha)^{k}}{|p\\cap{\\mathbb z}^d| } } \\leq \\max\\{f(\\alpha):\\alpha\\in p\\cap{\\mathbb z}^d\\}\\leq \\sqrt[k]{\\sum\\limits_{\\alpha\\in p \\cap { \\mathbb z}^d } f(\\alpha)^{k}}=u_{k}.\\ ] ] note that as @xmath104 , @xmath101 and @xmath102 approach this maximum value monotonously ( from below and above , respectively ) . trivially , if the difference between ( rounded ) upper and lower bounds becomes strictly less than @xmath105 , we have determined the value @xmath106 .",
    "thus the algorithm terminates with the correct answer .",
    "theorem [ main ] will follow from the next lemma :    [ lemma : bounds ] let @xmath19 be a polynomial with integer coefficients and maximum total degree  @xmath11 .",
    "when the dimension @xmath9 is fixed ,    1 .",
    "the bounds @xmath16 , @xmath17 can be computed in time polynomial in @xmath18 , the input size of @xmath12 and @xmath19 , and the total degree  @xmath11 .",
    "the bounds satisfy the following inequality : @xmath107{|p \\cap { \\mathbb z}^d|}-1 \\right).\\ ] ] 2 .",
    "in addition , when @xmath19 is non - negative over @xmath12 ( i.e. @xmath21 for all @xmath22 ) , for @xmath108 , @xmath16 is a @xmath45-approximation to the optimal value @xmath80 and it can be computed in time polynomial in the input size , the total degree  @xmath11 , and @xmath109 .",
    "similarly , @xmath17 gives a @xmath110-approximation to @xmath80 .",
    "moreover , with the same complexity , one can also find a feasible lattice point that approximates an optimal solution with similar quality .",
    "part ( i ) . from lemma [ operators ] on fixed dimension @xmath9 ,",
    "we can compute @xmath111 as a rational function in time polynomial in @xmath11 , the total degree of @xmath19 , and the input size of @xmath12 .",
    "thus , because @xmath112 has total degree of  @xmath113 and the encoding length for the coefficients of @xmath112 is bounded by @xmath114 ( with @xmath85 the largest coefficient in @xmath19 ) , we can also compute @xmath115 in time polynomial in @xmath18 , the total degree  @xmath11 , and the input size of  @xmath12 .",
    "note that using residue techniques @xcite , we can evaluate @xmath116 in polynomial time . finally observe    @xmath117{\\sum_{\\alpha \\in p \\cap { \\mathbb z}^d }    f^k(\\alpha)}-\\sqrt[k]{\\frac{\\sum_{\\alpha \\in p \\cap { \\mathbb z}^d }    f^k(\\alpha)}{|p \\cap { \\mathbb z}^d| } } = \\sqrt[k]{\\frac{\\sum_{\\alpha \\in p    \\cap { \\mathbb z}^d } f^k(\\alpha)}{|p \\cap { \\mathbb z}^d| } } \\left ( \\sqrt[k]{|p \\cap    { \\mathbb z}^d|}-1 \\right ) \\\\ & = l_k \\left ( \\sqrt[k]{|p \\cap { \\mathbb z}^d|}-1 \\right ) \\leq f^ *    \\left(\\sqrt[k]{|p \\cap { \\mathbb z}^d|}-1 \\right ) .",
    "\\end{aligned}\\ ] ]    part ( ii ) .",
    "note that if @xmath118{|p \\cap { \\mathbb z}^d|}-1 \\right ) \\leq \\epsilon$ ] then @xmath16 is indeed a @xmath45-approximation because @xmath119{|p \\cap      { \\mathbb z}^d|}-1 \\right ) \\leq l_k + f^ * \\epsilon.\\ ] ]    observe that @xmath120 is an increasing function for @xmath121 and @xmath122 , thus @xmath123 for @xmath124 .",
    "hence , for all @xmath125 we have indeed @xmath118{|p \\cap { \\mathbb z}^d|}-1 \\right ) \\leq \\epsilon.$ ] finally , from lemma [ operators ] , the calculation of @xmath16 for @xmath126 would require a number of steps polynomial in the input size and @xmath109 .",
    "a very similar argument can be written for @xmath17 but we omit it here .    to complete the proof of part ( ii ) it remains to show that not only we approximate the optimal value @xmath80 but we can also efficiently find a lattice point @xmath127 with @xmath128 giving that quality approximation of @xmath80 . let @xmath129 , thus , by the above discussion , @xmath16 is an @xmath45-approximation to  @xmath80 .",
    "let @xmath130^d$ ] denote the box computed in step  1 of the algorithm such that @xmath131 . by bisecting @xmath132",
    ", we obtain two boxes @xmath133 and @xmath134 . by applying the algorithm separately to the polyhedra @xmath135 and @xmath136 ,",
    "we compute lower bounds @xmath137 and @xmath138 for the optimization problems restricted to @xmath133 and @xmath134 , respectively . because @xmath139 is the arithmetic mean of @xmath140 for @xmath141 ,",
    "clearly @xmath142 without loss of generality , let @xmath143 .",
    "we now apply the bisection procedure iteratively on @xmath144 .",
    "after @xmath145 bisection steps , we obtain a box @xmath144 that contains a single lattice point @xmath146 , which has an objective value @xmath147 .",
    "we remark that if we need to apply the construction of step  1 of the algorithm because @xmath19 takes negative values on  @xmath12 , then we can only obtain an @xmath45-approximation ( and @xmath110-approximation , respectively ) for the modified function @xmath148 in polynomial time , but not the original function @xmath19 .",
    "we also emphasize that , although our algorithm requires the computation of @xmath149 for different powers of @xmath19 , these numbers are obtained without explicitly listing all lattice points ( a hard task ) , nor we assume any knowledge of the individual values @xmath128 .",
    "we can access the power means @xmath150 indirectly via rational functions . here",
    "are two small examples :    [ [ example-1-monomial - optimization - over - a - quadrilateral ] ] example 1 , monomial optimization over a quadrilateral : + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the problem we consider is that of maximizing the value of the monomial @xmath151 over the lattice points of the quadrilateral @xmath152 it contains only 2 lattice points .",
    "the sum of rational functions encoding the lattice points is @xmath153 in the first iteration @xmath154 while @xmath155 .",
    "after thirty iterations , we see @xmath156 while @xmath157 , the true optimal value .",
    "[ [ example-2-nvs04-from - minlplib ] ] example 2 , nvs04 from minlplib : + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    a somewhat more complicated example , from a well - known library of test examples ( see http://www.gamsworld.org/minlp/ ) , is the problem given by @xmath158 \\cap { \\mathbb z}.    \\end{aligned}\\ ] ] its optimal solution as given in minlplib is @xmath159 , @xmath160 with an objective value of  @xmath161 . clearly , to apply our algorithm from page",
    "literally , the objective function needs to be multiplied by a factor of @xmath162 to obtain an integer valued polynomial .    using the bounds on @xmath163 and @xmath164 we obtain an upper bound of @xmath165 for the objective function , which allows us to convert the problem into an equivalent maximization problem , where all feasible points have a non - negative objective value .",
    "the new optimal objective value is @xmath166 expanding the new objective function and translating it into a differential operator yields @xmath167 the short generating function can be written as @xmath168    in this example , the number of lattice points is @xmath169 the first bounds are @xmath170 , @xmath171 .",
    "after 30 iterations the bounds become @xmath172 and @xmath173",
    "now , we wish to discuss extensions of theorem [ main ] to the mixed integer scenario .",
    "if some of the variables are allowed to be continuous then we can describe the task as @xmath174 consider the sequence of integer polynomial optimization problems @xmath175 where each of the subproblems is equivalent to optimizing a polynomial over a `` semi - dilated '' polytope ( in some coordinate directions but not others ) . as @xmath176 goes to infinity",
    ", the sequence of optimal solution values can have several limit points .",
    "nevertheless , it is still possible to construct a subsequence of problems whose optimal values approximate the mixed integer optimum to arbitrary precision :    [ mip ] with the hypotheses of theorem [ main ] , we can construct a sequence of integer polynomial programming problems , over finer and finer grids , whose optimal values converge to the optimal value of the mixed integer program @xmath177 by applying the algorithm of theorem  [ main ] to the subproblems , we can approximate the optimum to arbitrary precision .",
    "when all variables are continuous , the original polytope @xmath12 is actually dilated uniformly in all directions by a parameter @xmath176 , or equivalently , the integer grid is refined .",
    "define @xmath178 for each power @xmath179 and dilation factor @xmath176 .",
    "note that for fixed @xmath179 , then we can easily see that the sum @xmath180 is essentially an approximation to the riemann integral of @xmath181 ; thus @xmath182 as @xmath183 grow , the values @xmath184{r(q , n)}$ ] approximate the sequence @xmath184{\\int_p f^q(\\bar{x } ) d\\bar{x}}$ ] which converges to @xmath185 .",
    "this is related to recent work ( see @xcite and references therein ) where the global optimum of a polynomial over a compact domain is investigated as the result of a grid refinement and properties of sums of squares ."
  ],
  "abstract_text": [
    "<S> we classify , according to their computational complexity , integer optimization problems whose constraints and objective functions are polynomials with integer coefficients and the number of variables is fixed . for the optimization of an integer polynomial over the lattice points of a convex polytope , we show an algorithm to compute lower and upper bounds for the optimal value . for polynomials that are non - negative over the polytope , </S>",
    "<S> these sequences of bounds lead to a fully polynomial - time approximation scheme for the optimization problem . </S>"
  ]
}
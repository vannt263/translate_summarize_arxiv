{
  "article_text": [
    "graphs are used to model infrastructure networks , the world wide web , computer traffic , molecular interactions , ecological systems , epidemics , citations , and social interactions , among others . despite the differences in the motivating applications ,",
    "some topological structures have emerged to be important across all these domains .",
    "triangles , which can be explained by homophily ( people become friends with those similar to themselves ) and transitivity ( friends of friends become friends ) .",
    "this abundance of triangles , along with the information they reveal , motivates metrics such as the _ clustering coefficient _ and the _ _",
    "ratio__s  @xcite .",
    "the triangle structure of a graph is commonly used in the social sciences for positing various theses on behavior  @xcite .",
    "triangles have also been used in graph mining applications such as spam detection and finding common topics on the www  @xcite .",
    "the authors earlier work used distribution of degree - wise clustering coefficients as the driving force for a new generative model , blocked two - level erds - rnyi  @xcite . the authors have also observed that relationships among degrees of triangle vertices can be a descriptor of the underlying graph  @xcite .",
    "the information about triangles is usually summarized in terms of _ clustering coefficients_. let @xmath0 be a simple undirected graph with @xmath1 vertices and @xmath2 edges .",
    "let @xmath3 denote the number of triangles in the graph and @xmath4 be the number of _ wedges _ ( a path of length @xmath5 ) .",
    "the most common measure is the _ global clustering coefficient",
    "_ @xmath6 , which measures how often friends of friends are also friends .",
    "we show that we can achieve speed - ups of up to four orders of magnitude with extremely small errors ; see and .",
    "our approach is not limited to clustering coefficients , however .",
    "a per - vertex clustering coefficient , @xmath7 , is defined as the fraction of wedges centered at @xmath8 that participate in triangles .",
    "the mean value of @xmath7 is called the _ local clustering coefficient _ , @xmath9 . a more nuanced view of triangles is given by the _ degree - wise clustering coefficients_. this is a set of values @xmath10 indexed by degree , where @xmath11 is the average clustering coefficient of degree @xmath12 vertices . in addition to degree distribution ,",
    "many graphs are characterized by plotting the clustering coefficients , i.e. , @xmath11 versus @xmath12 .",
    "we summarize our notation and give formal definitions in .",
    "@lx@ & number of vertices + @xmath13 & number of vertices of degree @xmath12 + @xmath2 & number of edges + @xmath14 & degree of vertex @xmath8 + @xmath15 & set of degree-@xmath12 vertices + @xmath4 & total number of wedges + @xmath16 & number of wedges centered at vertex @xmath8 + @xmath3 & total number of triangles + @xmath17 & number of triangles incident to vertex @xmath8 + @xmath18 & number of triangles incident to a degree @xmath12 vertex +    @lx@ @xmath6 & global clustering coefficient + @xmath19 & clustering coefficient of vertex @xmath8 + @xmath20 & local clustering coefficient + @xmath21 & degree - wise clustering coefficient +      there has been significant work on enumeration of all triangles  @xcite .",
    "recent work by cohen  @xcite and suri and vassilvitskii  @xcite give parallel implementations of these algorithms .",
    "arifuzzaman et al .",
    "@xcite give a massively parallel algorithm for computing clustering coefficients .",
    "enumeration algorithms however , can be very expensive , since graphs even of moderate size ( millions of vertices ) can have an extremely large number of triangles ( see e.g. , ) .",
    "eigenvalue / trace based methods have been used by tsourakakis  @xcite and avron  @xcite to compute estimates of the total and per - degree number of triangles .",
    "however , computing eigenvalues ( even just a few of them ) is a compute - intensive task and quickly becomes intractable on large graphs .",
    "most relevant to our work are sampling mechanisms .",
    "tsourakakis et al .",
    "@xcite started the use of sparsification methods , the most important of which is doulion  @xcite .",
    "this method sparsifies the graph by keeping each edge with probability @xmath22 ; counts the triangles in the sparsified graph ; and multiplies this count by @xmath23 to predict the number of triangles in the original graph .",
    "various theoretical analyses of this algorithm ( and its variants ) have been proposed  @xcite .",
    "one of the main benefits of doulion is that it reduces large graphs to smaller ones that can be loaded into memory . however",
    ", their estimate can suffer from high variance  @xcite .",
    "alternative sampling mechanisms have been proposed for streaming and semi - streaming algorithms @xcite .    yet",
    ", all these fast sampling methods only estimate the number of triangles and give no information about other triadic measures .      in this paper",
    ", we introduce the simple yet powerful technique of _ wedge sampling _ for counting triangles .",
    "wedge sampling is really an algorithmic template , as opposed to a single algorithm , as various algorithms can be obtained from the same basic structure .",
    "some of the salient features of this method are :    * versatility of wedge sampling : * we show how to use wedge sampling to approximate the various clustering coefficients : @xmath24 , @xmath9 , and @xmath10 . from these",
    ", we can estimate the numbers of triangles : @xmath3 and @xmath25 .",
    "moreover , our techniques can even be extended to find uniform random triangles , which is useful for computing triadic statistics .",
    "other sampling methods are usually geared towards only @xmath3 and @xmath24 .",
    "* provably good results with precise bounds : * the mathematical analysis of this method is a direct consequence of standard chernoff - hoeffding bounds .",
    "we obtain explicit time - error - accuracy tradeoffs . in other words , if we want an estimate for @xmath24 with error at most 10% with probability",
    "at least 99.9% ( say ) , we know we need only 380 wedge samples .",
    "this estimate is _ independent of the size of the graph _",
    ", though the preprocessing required by our method is linear in the number of edges ( to obtain the degree distribution ) .    *",
    "fast and scalable : * our estimates converge rapidly , well within the theoretical bounds provided .",
    "although there is no other method that competes directly with wedge sampling , we compare with doulion  @xcite .",
    "our experimental studies show that our wedge sampling algorithm is far faster , when the variances of the two methods are similar ( see in the appendix ) .",
    "we do not compare to eigenvalue - based approaches since they are much more expensive for larger graphs .",
    "we present the general method of wedge sampling for estimating clustering coefficients . in later sections",
    ", we instantiate this for different algorithms .    we say a wedge is _ closed _ if it is part of a triangle ; otherwise , we say the wedge is _",
    "open_. thus , in , -- is an open wedge , while -- is a closed wedge .",
    "the middle vertex of a wedge is called its _ center _ , i.e. , wedges -- and -- are centered at .",
    "wedge sampling is best understood in terms of the following thought experiment .",
    "fix some distribution over wedges and let @xmath26 be a random wedge .",
    "let @xmath27 be the indicator random variable that is @xmath28 if @xmath26 is closed and @xmath29 otherwise .",
    "denote @xmath30 $ ] .",
    "suppose we wish to estimate @xmath31 .",
    "we simply generate @xmath32 independent random wedges @xmath33 , with associated random variables @xmath34 .",
    "define @xmath35 as our estimate .",
    "the chernoff - hoeffding bounds give guarantees on @xmath36 , as follows .",
    "[ thm : hoeffding ] let @xmath37 be independent random variables with @xmath38 for all @xmath39 . define @xmath40 .",
    "let @xmath41 $ ] .",
    "then for @xmath42 , we have @xmath43    hence , if we set @xmath44 , then @xmath45 < \\delta$ ] . in other words , with confidence at least @xmath46 , the error in our estimate is at most @xmath47 .",
    "shows the number of samples needed for different error rates .",
    "we show three different curves for difference confidence levels . increasing the confidence has minimal impact on the number of samples .",
    "the number of samples is fairly low for error rates of 0.1 or 0.01 , but it increases with the inverse square of the desired error .",
    "& & & & & & & ( secs ) + amazon0312 & 401k & 2350k & 69 m & 3686k & 0.160 & 0.421 & 0.261 + amazon0505 & 410k & 2439k & 73 m & 3951k & 0.162 & 0.427 & 0.269 + amazon0601 & 403k & 2443k & 72 m & 3987k & 0.166 & 0.430 & 0.268 + as - skitter & 1696k & 11095k & 16022 m & 28770k & 0.005 & 0.296 & 90.897 + cit - patents & 3775k & 16519k & 336 m & 7515k & 0.067 & 0.092 & 3.764 + roadnet - ca & 1965k & 2767k & 6 m & 121k & 0.060 & 0.055 & 0.095 + web - berkstan & 685k & 6649k & 27983 m & 64691k & 0.007 & 0.634 & 54.777 + web - google & 876k & 4322k & 727",
    "m & 13392k & 0.055 & 0.624 & 0.894 + web - stanford & 282k & 1993k & 3944 m & 11329k & 0.009 & 0.629 & 6.987 + wiki - talk & 2394k & 4660k & 12594 m & 9204k & 0.002 & 0.201 & 20.572 + youtube & 1158k & 2990k & 1474",
    "m & 3057k & 0.006 & 0.128 & 2.740 + flickr & 1861k & 15555k & 14670 m & 548659k & 0.112 & 0.375 & 567.160 + livejournal & 5284k & 48710k & 7519",
    "m & 310877k & 0.124 & 0.345 & 102.142 +    we use the wedge sampling scheme to estimate the global clustering coefficient , @xmath24 . consider the uniform distribution on wedges .",
    "we can interpret @xmath48 $ ] as the probability that a uniform random wedge is closed or , alternately , the fraction of closed wedges .    to generate a uniform random wedge , note that the number of wedges centered at vertex @xmath8 is @xmath49 and @xmath50 .",
    "we set @xmath51 to get a distribution over the vertices .",
    "note that the probability of picking @xmath8 is proportional to the number of wedges centered at @xmath8 .",
    "a uniform random wedge centered at @xmath8 can be generated by choosing two random neighbors of @xmath8 ( without replacement ) .",
    "[ clm : random ] suppose we choose vertex @xmath8 with probability @xmath52 and take a uniform random pair of neighbors of @xmath8 .",
    "this generates a uniform random wedge .",
    "consider some wedge @xmath26 centered at vertex @xmath8 .",
    "the probability that @xmath8 is selected is @xmath53 .",
    "the random pair has probability of @xmath54 .",
    "hence , the net probability of @xmath26 is @xmath55 .",
    "@xmath56    compute @xmath52 for all vertices select @xmath32 random vertices ( with replacement ) according to probability distribution defined by @xmath57 .",
    "for each selected vertex @xmath8 , choose a uniform random pair of neighbors of @xmath8 to generate a wedge .",
    "output fraction of closed wedges as estimate of @xmath24 .    shows the randomized algorithm @xmath58-wedge sampler for estimating @xmath24 in a graph @xmath0 . combining the bound of with",
    ", we get the following theorem .",
    "[ thm : kappa ] set @xmath44 .",
    "the algorithm @xmath58-wedge sampler outputs an estimate @xmath36 for the clustering coefficient @xmath24 such that @xmath59 with probability greater than @xmath60 .",
    "note that the number of samples required is _ independent of the graph size _ , but computing @xmath52 does depend on the number of edges , @xmath2 .    to get an estimate on @xmath3 , the number of triangles , we output @xmath61 , which is guaranteed to be within @xmath62 of @xmath3 with probability greater than @xmath46 .",
    "we implemented our algorithms in c and ran our experiments on a computer equipped with a 2.3ghz intel core i7 processor with 4  cores and 256 kb l2 cache ( per core ) , 8 mb l3 cache , and an 8 gb memory .",
    "we performed our experiments on 13 graphs from snap  @xcite and per private communication with the authors of  @xcite . in all cases ,",
    "directionality is ignored , and repeated and self - edges are omitted .",
    "the properties of these matrices are presented in , where @xmath1 , @xmath2 , @xmath4 , and @xmath3 are the numbers of vertices , edges , wedges , and triangles , respectively .",
    "and @xmath24 and @xmath9 correspond to the global and local clustering coefficients .",
    "the last column reports the times for the enumeration algorithm .",
    "our enumeration algorithm is based on the principles of @xcite , such that each edge is assigned to its vertex with a smaller degree ( using the vertex numbering as a tie - breaker ) , and then vertices only check wedges formed by edges assigned to them for closure . as seen in wedge sampling",
    "works orders of magnitude faster than the enumeration algorithm .",
    "detailed results on times can be seen in in the appendix .",
    "the timing results show tremendous savings ; for instance , wedge sampling only takes 0.015 seconds on ` as - skitter ` while full enumeration takes 90 seconds .",
    "show the accuracy of the wedge sampling algorithm .",
    "again detailed results on times can be seen in in the appendix . at 99.9% confidence ( @xmath63 ) , the upper bound on the error we expect for 2k , 8k , and 32k samples is .043 , .022 , and .011 , respectively .",
    "most of the errors are much less than the bounds would suggest .",
    "for instance , the maximum error for 2k samples is .007 , much less than that 0.43 given by the upper bound . shows the fast convergence of the clustering coefficient estimate ( for the graph amazon0505 ) as the number of samples increases .",
    "the dashed line shows the error bars at 99.9% confidence . in all our experiments ,",
    "the real error is always much smaller than what is indicated by .",
    "we now demonstrate how a small change to the underlying distribution on wedges allows us to compute the local clustering coefficient , @xmath9 .",
    "shows the procedure @xmath9-wedge sampler .",
    "the only difference between @xmath9-wedge sampler and @xmath58-wedge sampler is in picking random vertex centers .",
    "vertices are picked uniformly instead of from the distribution @xmath57 .",
    "pick @xmath32 uniform random vertices . for each selected vertex @xmath8 , choose a uniform random pair of neighbors of @xmath8 to generate a wedge .",
    "output the fraction of closed wedges as an estimate for @xmath9 .",
    "[ thm : lcc ] set @xmath44 .",
    "the algorithm @xmath9-wedge sampler outputs an estimate @xmath36 for the clustering coefficient @xmath9 such that @xmath64 with probability greater than @xmath60 .",
    "let us consider a single sampled wedge @xmath26 , and let @xmath65 be the indicator random variable for the wedge being closed .",
    "let @xmath66 be the uniform distribution on wedges .",
    "for any vertex @xmath8 , let @xmath67 be the uniform distribution on pairs of neighbors of @xmath8 . observe that @xmath68 }",
    "= \\pr_{v \\sim { { \\cal v}}}[\\pr_{(u , u ' ) \\sim { { \\cal n}}_v}[\\textrm{wedge $ \\{(u , v),(u',v)\\}$ is closed}]]\\ ] ] we will show that this is exactly @xmath9 .",
    "@xmath69 \\\\ & = & { \\hbox{\\bf e}}_{v \\sim { { \\cal v } } } [ \\textrm{frac . of closed wedges centered at $ v$ } ] \\\\ & = & { \\hbox{\\bf e}}_{v \\sim { { \\cal v } } } [ { \\hbox{\\bf e}}_{(u , u ' ) \\sim { { \\cal n}}_v}[x(\\{(u , v),(u',v)\\ } ) ] ] \\\\ & = & \\pr_{v \\sim { { \\cal v}}}[\\pr_{(u , u ' ) \\sim { { \\cal n}}_v}[\\textrm{$\\{(u , v),(u',v)\\}$ is closed } ] ] \\\\ & = & { \\hbox{\\bf e}}[x]\\end{aligned}\\ ] ] for a single sample , the probability that the wedge is closed is exactly @xmath9 .",
    "the bound of completes the proof .",
    "@xmath56    and present the results of our experiments for computing the local clustering coefficients .",
    "more detailed results can be found in the appendix . experimental setup and",
    "the notation are the same as in .",
    "the results again show that wedge sampling provides accurate estimations with tremendous improvements in runtime . in this case , we come closer to the theoretical error bounds . for instance , the largest different in the 2k sample case is 0.017 , which is much closer to the theoretical error bound of 0.043 .",
    "we demonstrate the power of wedge sampling by estimating the degree - wise clustering coefficients @xmath10 . we also provide a sampling algorithm to estimate @xmath18 , the number of triangles incident to degree-@xmath12 vertices .",
    "shows procedure @xmath11-wedge sampler .",
    "pick @xmath32 uniform random vertices of degree @xmath12 . for each",
    "selected vertex @xmath8 , choose a uniform random pair of neighbors of @xmath8 to generate a wedge .",
    "output the fraction of closed wedges as an estimate for @xmath11 .",
    "[ thm : dcc ] set @xmath44 .",
    "the algorithm @xmath11-wedge sampler outputs an estimate @xmath36 for the clustering coefficient @xmath11 such that @xmath70 with probability greater than @xmath60 .",
    "the proof of the following is similar to that of .",
    "since @xmath11 is the average clustering coefficient of a degree @xmath12 vertex , we can apply the same arguments as in .",
    "@xmath56    by modifying the template given in , we can also get estimates for @xmath18 .",
    "now , instead of simply counting the fraction of closed wedges , we take a weighted sum .",
    "describes the procedure @xmath18-wedge sampler .",
    "we let @xmath71 denote the total number of wedges centered at degree @xmath12 vertices .",
    "pick @xmath32 uniform random vertices of degree @xmath12 . for each",
    "selected vertex @xmath8 , choose a uniform random pair of neighbors of @xmath8 to generate a wedge . for each wedge",
    "@xmath72 generated , let @xmath73 be the associated random variable such that @xmath74 @xmath75 .",
    "output @xmath76 as the estimate for @xmath18 .",
    "[ thm : dcc2 ] set @xmath44 .",
    "the algorithm @xmath18-wedge sampleroutputs an estimate @xmath77 for the @xmath18 with the following guarantee : @xmath78 with probability greater than @xmath46 .    for a single sampled wedge @xmath72",
    ", we define @xmath73 .",
    "we will argue that the expected value of @xmath79 $ ] is exactly @xmath80 below .",
    "once we have that , an application of the hoeffding bound of shows that @xmath81 with probability greater than @xmath46 . multiplying this inequality by @xmath82 , we get @xmath78 , completing the proof .    to show @xmath79 = t_d / w_d$ ] , partition the set @xmath83 of wedges centered on degree @xmath12 vertices into four sets @xmath84 .",
    "the set @xmath85 ( @xmath86 ) contains all closed wedges containing exactly @xmath87 degree-@xmath12 vertices .",
    "the remaining open wedges go into @xmath88 . for a sampled wedge @xmath26 , if @xmath89 , then @xmath90 . if @xmath91 , then nothing is added .",
    "the wedge @xmath26 is a uniform random wedge from those centered on degree-@xmath12 vertices .",
    "hence , @xmath79 = |s|^{-1}(|s_1| + |s_2|/2 + |s_3|/3)$ ] .",
    "now partition the set of triangles involving degree @xmath12 vertices into three sets @xmath92 , where @xmath93 is the set of triangles with @xmath87 degree @xmath12 vertices .",
    "observe that @xmath94 .",
    "if a triangle has @xmath87 vertices of degree @xmath12 , then there are exactly @xmath87 wedges centered in degree @xmath12 vertices ( in that triangle ) .",
    "so , @xmath95 @xmath96 @xmath97",
    ". therefore , @xmath79 = t_d / w_d$ ] .",
    "@xmath56      algorithms in the previous section present how to compute the clustering coefficient of vertices of a given degree . in practice",
    ", it may be sufficient to compute clustering coefficients over bins of degrees .",
    "wedge sampling algorithms can still be extended for bins of degrees by a small adjustment of the sampling procedure . within each bin , we weight each vertex according to the number of wedges it produces .",
    "this guarantees that each wedge in the bin is equally likely to be selected",
    ".      shows results on three graphs for clustering coefficients ; the remaining figures are shown in the in the appendix .",
    "the data is grouped in logarithmic bins of degrees , i.e. , @xmath98 .",
    "in other words , @xmath99 form the @xmath87-th bin .",
    "we show the estimates with increasing number of samples . at 8k samples ,",
    "the error is expected to be less than 0.02 , which is apparent in the plots .",
    "observe that even 500 samples yields a reasonable estimate in terms of the differences by degree .",
    "shows the time to calculate all @xmath100 values , showing a tremendous savings in runtime as a result of using wedge sampling . in this figure , runtimes are normalized with respect to the runtimes of full enumeration .",
    "as the figure shows , wedge sampling takes only a tiny fraction of the time of full enumeration especially for large graphs .",
    "while most triadic measures focus on the number of triangles and their distribution , the triangles themselves , not only their count , can reveal a lot of information about the graph .",
    "the authors recent work  @xcite has looked at the relations among the degrees of the vertices of triangles . in these experiments ,",
    "a full enumeration of the triangles was used , which limited the sizes of the graphs we could use . to avoid this computational burden , a uniform sampling of the triangles can be used . _",
    "wedge sampling provides a uniform sampling the triangles of a graph_. consider the uniform wedge sampling of .",
    "some of these wedges will be closed , so we generate a random set of triangles .",
    "each such triangle is an independent , uniform random triangle .",
    "this is because wedges are chosen from the uniform distribution , and every triangles contains exactly @xmath101 closed wedges .",
    "presents the results using triangle sampling to estimate the percentage of triangles where the maximum to minimum degree ratio is @xmath102 , which is motivated by an experiment in  @xcite .",
    "the figure shows that accurate results can be achieved by using only 500 triangles and that wedge sampling provides an unbiased selection of triangles .",
    "the expected number of wedges to be sampled to generate @xmath103 triangles is @xmath104 , which means the method will be effective unless the clustering coefficient is extremely small .",
    "doulion  @xcite is an alternative sampling mechanism for estimating the number of triangles in a graph .",
    "it has a single parameter @xmath22 .",
    "each edge is chosen independently at random with probability @xmath22 , leading to a subgraph of expected size @xmath105 ( @xmath2 is the total number of edges ) .",
    "we count the number of triangles @xmath106 in this subgraph , and estimate the total number of triangles by @xmath107 .",
    "it is not hard to verify that this is correct in expectation , but bounding the variance requires a lot more work .",
    "some concentration bounds for this estimate are known @xcite , but they depend on the maximum number of triangles incident to an edge in the graph .",
    "so they do not have the direct form of .",
    "some bad examples for doulion have been observed  @xcite .",
    "doulion is extremely elegant and simple , and leads to an overall reduction in graph size ( so a massive graph can now fit into memory ) .",
    "common values of @xmath22 used are @xmath108 and @xmath109 .    we show that wedge sampling performs at least as good as doulion in terms of accuracy , and has better runtimes .",
    "we run wedge sampling with 32k samples .",
    "we start with setting the doulion parameter @xmath110 , which has been used in the literature .",
    "note that the size of the doulion sample is @xmath111 , which is much larger than 32k .",
    "( for amazon0312 , one of the smaller graphs we consider , @xmath112 . )",
    "we run each algorithm 100 times .",
    "the ( average ) runtimes are compared in , where we see that wedge sampling is always competitive .",
    "the accuracy of the estimate is comparable for both algorithms . in in the appendix",
    ", we present the minimum , maximum , and standard deviation for the 100 runs .",
    "this also shows the good convergence properties of both algorithms , since even the minimum and maximum values are fairly close to the true clustering coefficient .",
    "we also try @xmath113 and note that wedge sampling with 32k samples is still faster in terms of runtime while offering somewhat better accuracy . by setting @xmath114 ,",
    "the sample size of doulion becomes comparable to 32k , but doulion is quite inaccurate ( the range between the maximum and the minimum is large ) .    in of the appendix , we also compare results for the local clustering coefficient .",
    "we have proposed a series of wedge - based algorithms for computing various triadic measures on graphs .",
    "our algorithms come with theoretical guarantees in the form of specific error and confidence bounds .",
    "we want to stress that the number of samples required to achieve a specified error and confidence bound is independent of the graph size .",
    "for instance , 38,000 samples guarantees and error less than 0.1% with 99.9% confidence _ for any graph _ , which gives our algorithms an incredible potential for scalability .",
    "the limiting factors have to do with determining the sampling proportions ; for instance , we need to know the degree of each vertex and the overall degree distribution to compute the global clustering coefficient .",
    "the flexibility of wedge sampling along with the hard error bounds essentially redefines what is feasible in terms of graph analysis .",
    "the very expensive computation of clustering coefficient is now much faster ( enabling more near - real - time analysis of networks ) and we can consider much larger graphs than before . in an extension of this work , we are pursuing a mapreduce implementation of this method that scales to o(100 m ) nodes and o(1b ) edges , needing only a few minutes of compute time ( based on preliminary results ) .    with triadic analysis",
    "no long being a computational burden , we can extend our horizons into new territories and look at directed triangles , attributed triangles ( e.g. , we might compare the clustering coefficient for `` male '' and `` female '' nodes in a social network ) , evolution of triadic connections , higher - order structures such a 4-cycles and 4-cliques , and so on .",
    "10    , _ patric : a parallel algorithm for counting triangles and computing clustering coefficients in massive networks _ , tech .",
    "report 12 - 042 , ndssl , 2012 .",
    ", _ counting triangles in large graphs using randomized matrix trace estimation _ , in kdd - ldmta10 , 2010 .",
    ", http://dl.acm.org/citation.cfm?id=545381.545464[_reductions in streaming algorithms , with an application to counting triangles in graphs _ ] , in soda02 , 2002 , pp .  623632 .    , http://dx.doi.org/10.1145/1401890.1401898[_efficient semi - streaming algorithms for local triangle counting in massive graphs _ ] , in kdd08 , 2008 , pp .  1624 .    , http://ngc.sandia.gov/assets/documents/berry-soda11_sand2010-4474c.pdf [ _ listing triangles in expected linear time on power law graphs with exponent at least @xmath115 _ ] , tech .",
    "report sand2010 - 4474c , sandia national laboratories , 2011 .    , http://dx.doi.org/10.1145/1142351.1142388[_counting triangles in data streams _ ] , in pods06 , 2006 , pp .  253262 .    , http://www.jstor.org/stable/10.1086/421787 [ _ structural holes and good ideas _ ] , american journal of sociology , 110 ( 2004 ) , pp .",
    "349399 .    , http://dx.doi.org/10.1137/0214017 [ _ arboricity and subgraph listing algorithms _ ] , siam j. comput . , 14 ( 1985 ) ,",
    "210223 .    ,",
    "_ triangle listing in massive networks and its applications _ , in kdd11 , 2011 , pp .  672680 .",
    ", http://dx.doi.org/10.1109/mcse.2009.120[_graph twiddling in a mapreduce world _ ] , computing in science & engineering , 11 ( 2009 ) , pp .",
    "2941 .    , http://www.jstor.org/stable/2780243[_social capital in the creation of human capital _ ] , american journal of sociology , 94 ( 1988 ) , pp .",
    "s95s120 .    ,",
    "_ degree relations of triangles in real - world networks and graph models _ , in cikm12 , 2012 .",
    ", http://dx.doi.org/10.1073/pnas.032093399[_curvature of co - links uncovers hidden thematic layers in the world wide web _ ] , pnas , 99 ( 2002 ) , pp .",
    "58255829 .",
    ", http://dx.doi.org/10.1145/1753846.1754097[_is a friend a friend ?",
    ": investigating the structure of friendship networks in virtual worlds _ ] , in chi - ea10 , 2010 , pp .  40274032 .    , http://www.jstor.org/stable/2282952[_probability inequalities for sums of bounded random variables _ ] , j. american statistical association , 58 ( 1963 ) , pp",
    ".  1330 .    , _ new streaming algorithms for counting triangles in graphs _ , in cocoon05 , 2005",
    ", pp .  710716 .    , _ efficient triangle counting in large graphs via degree - based vertex partitioning _ , in waw10 , 2010 .    , http://dx.doi.org/10.1016/j.tcs.2008.07.017 [ _ main - memory triangle computations for very large ( sparse ( power - law ) ) graphs _ ] , theoretical computer science , 407 ( 2008 ) , pp",
    ".  458473 .    , http://dx.doi.org/10.1145/1298306.1298311[_measurement and analysis of online social networks _ ] , in imc07 , acm , 2007 , pp .",
    "2942 .    , _ colorful triangle counting and a mapreduce implementation _ , information processing letters , 112 ( 2012 ) , pp",
    "277281 .    , http://dx.doi.org/10.1146/annurev.soc.24.1.1 [ _ social capital : its origins and applications in modern sociology _",
    "] , annual review of sociology , 24 ( 1998 ) , pp .  124 .    , http://dx.doi.org/10.1007/11427186_54[_finding , counting and listing all triangles in large graphs , an experimental study _ ] , in experimental and efficient algorithms , springer berlin / heidelberg , 2005 , pp .  606609 .    , http://dx.doi.org/10.1103/physreve.85.056109[_community structure and scale - free collections of erds - rnyi graphs _ ] , physical review e , 85 ( 2012 ) , p.  056109 .    , http://dx.doi.org/10.1145/1963405.1963491[_counting triangles and the curse of the last reducer _ ] , in www11 , 2011 , pp .",
    "607614 .    , http://dx.doi.org/10.1109/icdm.2008.72[_fast counting of triangles in large real networks without counting : algorithms and laws _ ] , in icdm08 , 2008 , pp .",
    "608617 .    ,",
    "_ spectral counting of triangles in power - law networks via element - wise sparsification _",
    ", in asonam09 , 2009 , pp .  6671 .    , _ triangle sparsifiers _ , j. graph algorithms and applications , 15 ( 2011 ) , pp .",
    "703726 .    , http://dx.doi.org/10.1145/1557019.1557111[_doulion : counting triangles in massive graphs with a coin _ ] , in kdd 09 , 2009 , pp .",
    "837846 .    ,",
    "_ social network analysis : methods and applications _ , cambridge university press , 1994 .",
    ", http://dx.doi.org/10.1038/30918 [ _ collective dynamics of ` small - world ' networks _ ] , nature , 393 ( 1998 ) , pp .",
    "440442 .    , http://dx.doi.org/10.1007/978-3-642-24082-9_83[_improved sampling for triangle counting with mapreduce _ ] , in convergence and hybrid information technology , g.  lee , d.  howard , and d.  slezak , eds .",
    "6935 of lecture notes in computer science , springer berlin / heidelberg , 2011 , pp .  685689 .    .",
    "available at http://snap.stanford.edu/.",
    "various detailed results are shown in the appendix .",
    "we present the runtime results for global clustering coefficient computations in .",
    "as mentioned earlier , we perform 100 runs of each algorithm and show the minimum , maximum , and standard deviations of the output estimates .",
    "we also show the relative speedup of wedge sampling over doulion with @xmath113 .",
    "we also used doulion to compute the local clustering coefficient . for this purpose",
    ", we predicted the number of triangles incident to a vertex by counting the triangles in the sparsified graph and then dividing this number by @xmath116 .",
    "the results of our experiments are presented in , which shows that doulion fails in accuracy even for @xmath117 .",
    "this is because local clustering coefficient is a finer level statistic , which becomes a challenge for doulion .",
    "wedge sampling on the other hand , keeps its accurate estimations with low variance .     & & & & & & & & & & & & + amazon0312 & 401k & 2350k & 69 m & 3686k & 0.160 & 0.163 & 0.161 & 0.160 & 0.261 & 0.004 & 0.007 & 0.016 + amazon0505 & 410k & 2439k & 73 m & 3951k & 0.162 & 0.158 & 0.165 & 0.163 & 0.269 & 0.005 & 0.007 & 0.016 + amazon0601 & 403k & 2443k & 72 m & 3987k & 0.166 & 0.161 & 0.164 & 0.167 & 0.268 & 0.004 & 0.007 & 0.017 + as - skitter & 1696k & 11095k & 16022 m & 28770k & 0.005 & 0.006 & 0.006 & 0.006 & 90.897 & 0.015 & 0.019 & 0.026 + cit - patents & 3775k & 16519k & 336 m & 7515k & 0.067 & 0.064 & 0.067 & 0.068 & 3.764 & 0.035 & 0.040 & 0.056 + roadnet - ca & 1965k & 2767k & 6 m & 121k & 0.060 & 0.061 & 0.058 & 0.058 & 0.095 & 0.018 & 0.022 & 0.037 + web - berkstan & 685k & 6649k & 27983 m & 64691k & 0.007 & 0.005 & 0.006 & 0.007 & 54.777 & 0.007 & 0.009 & 0.016 + web - google & 876k & 4322k & 727",
    "m & 13392k & 0.055 & 0.055 & 0.054 & 0.056 & 0.894 & 0.009 & 0.011 & 0.020 + web - stanford & 282k & 1993k & 3944 m & 11329k & 0.009 & 0.013 & 0.008 & 0.009 & 6.987 & 0.003 & 0.005 & 0.011 + wiki - talk & 2394k & 4660k & 12594 m & 9204k & 0.002 & 0.004 & 0.003 & 0.002 & 20.572 & 0.021 & 0.024 & 0.033 + youtube & 1158k & 2990k & 1474 m & 3057k & 0.006 & 0.005 & 0.006&0.006 & 2.740 & 0.011 & 0.013 & 0.021 + flickr & 1861k & 15555k & 14670 m & 548659k & 0.112 & 0.110 & 0.113 & 0.112 & 567.160&0.019 & 0.026 & 0.051 + livejournal & 5284k & 48710k & 7519 m & 310877k & 0.124 & 0.127 & 0.126 & 0.124 & 102.142 & 0.048 & 0.051 & 0.073 +     & & & & & & & & + amazon0312 & 0.421 & 0.427 & 0.417 & 0.420 & 0.301 & 0.001 & 0.002 & 0.008 + amazon0505 & 0.427 & 0.422 & 0.423 & 0.426 & 0.310 & 0.001 & 0.002 & 0.008 + amazon0601 & 0.430 & 0.435 & 0.421 & 0.430 & 0.314 & 0.001 & 0.002 & 0.007 + as - skitter & 0.296 & 0.280 & 0.288 & 0.297 & 88.290 & 0.002 & 0.009 & 0.036 + cit - patents & 0.092 & 0.089 & 0.094 & 0.091 & 4.081 & 0.001 & 0.003 & 0.012 + roadnet - ca & 0.055 & 0.049 & 0.059 & 0.054 & 0.112 & 0.000 & 0.002 & 0.006 + web - berkstan & 0.634 & 0.629 & 0.639 & 0.633 & 53.892 & 0.006 & 0.021 &",
    "0.085 + web - google & 0.624 & 0.624 & 0.619 & 0.628 & 0.996 & 0.001 & 0.004 & 0.013 + web - stanford & 0.629 & 0.612 & 0.635 & 0.633 & 6.868 & 0.002 & 0.010 & 0.038 + wiki - talk & 0.201 & 0.199 & 0.194 & 0.199 & 20.254 & 0.007 & 0.028 & 0.108 + youtube & 0.128 & 0.130&0.132 & 0.131&18.948 & 0.002&0.008 & 0.031 + flickr & 0.375 & 0.369 & 0.371 & 0.377 & 575.493 & 0.001 & 0.006 & 0.021 + livejournal & 0.345 & 0.338 & 0.348 & 0.345 & 102.142 & 0.001 & 0.004&0.015 +       & & & & & & & & & & & & & & + amaz0312 & .160 & .155 & .166 & .002 & .",
    ".137 & .188 & .011 & .093 & .234 & .031 & .000 & .392 & .080 & 7.06 + amaz0505 & .162 & .159 & .167 & .002 & .133 & .193 & .011 & .098 & .241 & .028 & .000 & .370 & .081 & 7.37 + amaz0601 & .166 & .162 & .172 & .002 & .140 & .193 & .010 & .088 & .260 & .028 & .000 & .457 & .078 & 7.30 + skitter & .005 & .005 & .007 & .000 & .005 & .006 & .000 & .004 & .007 & .001 & .002 & .008 & .001 & 17.80 + cit - pat & .067 & .064 & .071 & .001 & .060 & .077 & .003 & .042 & .099 & .010 & .027 & .116 & .022 & 15.76 + road - ca & .060 & .058 & .065 & .001 & .000 & .133 & .023 & .000 & .250 & .062 & .000 & 1.001 & .193 & 5.84 + w - bersta & .007 & .006 & .008 & .001 & .006 & .008 & .000 & .006 & .008 & .000 & .004 & .011 & .001 & 16.28 + w - google & .055 & .052 & .059 & .001 & .051 & .060 & .002 & .044 & .071 & .005 & .021 & .107 & .016 & 1.20 + w - stan & .009 & .007 & .010 & .001 & .007 & .010 & .001 & .006 & .012 & .001 & .003 & .018 & .003 & 7.18 + wiki - t & .002 & .002 & .003 & .000 & .002 & .002 & .000 & .002 & .003 & .000 & .001 & .004 & .001 & 8.52 + youtube & .006 & .005 & .007 & .000 & .005 & .007 & .001 & .004 & .010 & .001 & .000 & .018 & .004 & 7.55 + flickr & .112 & .108 & .117 & .002 & .110 & .115 & .001 & .107 & .118 & .002 & .098 & .125 & .005 & 11.38 + livejour & .124 & .120 & .128 & .002 & .121 & .128 & .001 & .116 & .130 & .003 & .105 & .143 & .007 & 3.49 +     & & & & & & & & & & & & & + amaz0312 & .421 & .415 & .426 & .003 & .395 & .463 & .014 & .318 & .558 & .047 & .195 & .869 & .140 + amaz0505 & .427 & .421 & .432 & .003 & .395 & .463 & .014 & .338 & .568 & .056 & .195 & .869 & .140 + amaz0601 & .430 & .423 & .437 & .003 & .403 & .466 & .013 & .329 & .633 & .058 & .239 & .819 & .120 + skitter & .296 & .288 & .303 & .003 & .272 & .322 & .011 & .206 & .384 & .039 & .122 & .667 & .105 + cit - pat & .092 & .088 & .096 & .002 & .085 & .099 & .003 & .066 & .126 & .011 & .028 & .199 & .035 + road - ca & .055 & .052 & .058 & .001 & .038 & .071 & .006 & .000 & .118 & .022 & .000 & .279 & .062 + w - bersta & .634 & .627 & .641 & .003 & .586 & .700 & .024 & .532 & .808 & .057 & .339 & 1.273 & .165 + w - google & .624 & .615 & .630 & .003 & .580 & .688 & .021 & .471 & .772 & .063 & .335 & 1.276 & .183 + w - stan & .629 & .622 & .636 & .003 & .532 & .737 & .038 & .441 & .982 & .109 & .218 & 1.218 & .230 + wiki - t & .201 & .195 & .206 & .002 & .171 & .240 & .015 & .055 & .379 & .067 & .006 & .609 & .160 + youtube & .128 & .167 & .179 & .002 & .128 & .218 & .015 & .055 & .294 & .057 & .007 & .767 & .182 + flickr & .375 & .368 & .381 & .003 & .316 & .411 & .016 & .212 & .553 & .066 & .086 & .774 & .154 + livejour & .345 & .337 & .355 & .003 & .330 & .359 & .006 & .296 & .401 & .023 & .214 & .500 & .060 +"
  ],
  "abstract_text": [
    "<S> graphs are used to model interactions in a variety of contexts , and there is a growing need to quickly assess the structure of a graph . </S>",
    "<S> some of the most useful graph metrics , especially those measuring social cohesion , are based on _ </S>",
    "<S> triangles_. despite the importance of these triadic measures , associated algorithms can be extremely expensive . </S>",
    "<S> we propose a new method based on _ </S>",
    "<S> wedge sampling_. this versatile technique allows for the fast and accurate approximation of all current variants of clustering coefficients and enables rapid uniform sampling of the triangles of a graph . </S>",
    "<S> our methods come with _ </S>",
    "<S> provable _ and practical time - approximation tradeoffs for all computations . </S>",
    "<S> we provide extensive results that show our methods are orders of magnitude faster than the state - of - the - art , while providing nearly the accuracy of full enumeration . </S>",
    "<S> our results will enable more wide - scale adoption of triadic measures for analysis of extremely large graphs , as demonstrated on several real - world examples . </S>"
  ]
}
{
  "article_text": [
    "similar to the approach of _ stochastic _ optimization , robust optimization deals with models in which the exact data is unknown , but bounded by a set of possible realizations ( or scenarios ) .",
    "contrary to the former approach , in robust optimization , one typically refrains from assuming a given probability distribution over the scenarios . while the first steps in robust optimization trace back to the work of soyster @xcite , it has not emerged as a field of research in its own right before the late 90s with the seminal works of ben - tal , nemirovski , and co - authors ( see @xcite , and many more ) .    in this section ,",
    "we first describe the general setting of robust optimization in more detail , and then discuss the algorithm engineering methodology and its application , which gives a natural structure for the remainder of the paper .",
    "[ [ uncertain - optimization - problems . ] ] uncertain optimization problems .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    nearly every optimization problem suffers from uncertainty to some degree , even if this does not seem to be the case at first sight . generally speaking",
    ", we may distinguish two types of uncertainty : _ microscopic _ uncertainty , such as numerical errors and measurement errors ; and _ macroscopic _ uncertainty , such as forecast errors , disturbances or other conditions changing the environment where a solution is implemented .    in `` classic '' optimization",
    ", one would define a so - called _ nominal scenario _ , which describes the expected or `` most typical '' behavior of the uncertain data . depending on the uncertainty type ,",
    "this scenario may be , e.g. , the coefficient of the given precision for numerical errors , the measured value for measurement errors , the most likely forecast for forecast errors , or an average environment for long - term solutions . depending on the application ,",
    "computing such a scenario may be a non - trivial process , see , e.g. , @xcite .    in this paper",
    "we consider optimization problems that can be written in the form @xmath0 where @xmath1 describes the @xmath2 problem constraints , @xmath3 is the objective function , and @xmath4 is the variable space . in real - world applications , both the constraints and",
    "the objective may depend on parameters which are uncertain . in order to accommodate such uncertainties , instead of @xmath5 , the following parameterized _ family _ of problems",
    "is considered : @xmath6 where @xmath7 and @xmath8 for any fixed @xmath9 .",
    "every @xmath10 describes a _ scenario _ that may occur .",
    "although it is in practice often not known exactly which values such a scenario @xmath10 may take for an optimization problem @xmath11 , we assume that it is known that @xmath10 lies within a given _ uncertainty set _ @xmath12 . such an uncertainty set represents the scenarios which are likely enough to be considered .    the _ uncertain optimization problem _ corresponding to @xmath11 is then denoted as @xmath13    note that the uncertain optimization problem in fact consists of a whole set of parameterized problems , that is often even infinitely large .",
    "the purpose of robust optimization concepts is to transform this family of problems back into a single problem , which is called the _",
    "robust counterpart_. the choice of the uncertainty set is of major impact not only for the respective application , but also for the computational complexity of the resulting robust counterpart .",
    "it hence has to be chosen carefully by the modeler .    for a given uncertain optimization problem @xmath14 ,",
    "we denote by @xmath15 the feasible set of scenario @xmath16 .",
    "furthermore , if there exists a nominal scenario , it is denoted by @xmath17 .",
    "[ nominalscen ] the optimal objective value for a single scenario @xmath18 is denoted by @xmath19 .",
    "we say that an uncertain optimization problem @xmath14 has convex ( quasiconvex , affine , linear ) uncertainty , when both functions , @xmath20 and @xmath21 are convex ( quasiconvex , affine , linear ) in @xmath10 for every fixed @xmath22 .",
    "[ [ common - uncertainty - sets . ] ] common uncertainty sets .",
    "+ + + + + + + + + + + + + + + + + + + + + + + +    there are some types of uncertainty sets that are frequently used in current literature .",
    "these include :    1 .",
    "finite uncertainty @xmath23 2 .",
    "interval - based uncertainty @xmath24 \\times \\ldots \\times [ \\underline{\\xi}_m,\\overline{\\xi}_m]$ ] 3 .",
    "polytopic uncertainty @xmath25 4 .",
    "norm - based uncertainty @xmath26 for some parameter  @xmath27 5 .",
    "ellipsoidal uncertainty @xmath28 for some parameter @xmath29 6 .",
    "constraint - wise uncertainty @xmath30 , where @xmath31 only affects constraint @xmath32    where @xmath33 denotes the convex hull of a set of points .",
    "note that this classification is not exclusive , i.e. , a given uncertainty set can belong to multiple types at the same time .",
    "[ [ the - algorithm - engineering - methodology - and - the - structure - of - this - paper . ] ] the algorithm engineering methodology , and the structure of this paper .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    in the algorithm engineering approach , a feedback cycle between _ design _ , _ analysis _ , _ implementations _ , and _ experiments _ is used ( see @xcite for a detailed discussion ) .",
    "we reproduce this cycle for robust optimization in figure  [ ae - cycle ] .        while this approach usually focuses on the design and analysis of _ algorithms",
    "_ , one needs to consider the important role that different _ concepts _ play in robust optimization .",
    "moreover , as is also discussed later , there is a thin line between what is to be considered a robustness concept , and an algorithm ",
    "e.g. , the usage of a simplified model for a robustness concept could be considered as a new concept , but also as a heuristic algorithm for the original concept .",
    "we will therefore consider the design and analysis of both , concepts and algorithms .    the algorithm engineering approach has been successfully applied to many problems and often achieved impressive speed - ups ( as in routing algorithms , see , e.g. @xcite and the book @xcite ) .",
    "even though this aspect has not been sufficiently acknowledged in the robust optimization community , the algorithm engineering paradigm fits very well in the line of research done in this area : in algorithm engineering it is of particular importance that the single steps in the depicted cycle are not considered individually , but that special structure occurring in typical instances is identified and used in the development and analysis of concepts and algorithms .",
    "as we will show in the following sections these links to real - world applications and to the structure of the uncertain data are of special importance in particular in robust optimization . various applications with different understandings of what defines a robust solution triggered the development of the different robustness concepts ( see section  [ sec : design ] ) while the particular structure of the uncertainty set led to adapted algorithms ( see section  [ sec - reformulations ] ) .    moreover , the algorithm engineering cycle is well - suited to detect the _ missing _ research links to push the developed methods further into practice .",
    "a key aspect of this paper hence is to draw further attention to the potential of algorithm engineering for robust optimization .",
    "we structure the paper along the algorithm engineering cycle , where we discuss each step separately , providing a few exemplarily papers dealing with the respective matters . missing links to trigger further research in this areas",
    "are pointed out .",
    "specifically , we consider    * design of robustness concepts in section  [ sec : design ] , * analysis of robustness concepts in section  [ sec : analysis ] , * design and analysis of algorithms in section  [ sec : algorithms ] , and * implementations and experiments in section  [ sec : experiments ] .",
    "applications of robust optimization are various , and strongly influenced the design of robustness concepts while the design of algorithms was rather driven by an analysis of the respective uncertainty sets .",
    "some of these relations are mentioned in the respective sections .",
    "the paper is concluded in section  [ sec : conclusion ] where we also demonstrate on some examples how the previously mentioned results can be interpreted in the light of the algorithm engineering methodology .",
    "robust optimization started with rather conservative concepts hedging against everything that is considered as being likely enough to happen . driven by various other situations and applications calling for `` robust '' solutions these concepts were further developed . in this section",
    "we give an overview on the most important older and some recent concepts .",
    "we put special emphasis on the impact applications with uncertain data have on the design of robustness concepts ( as depicted in in figure  [ ae - cycle ] ) , and how real - world requirements influence the development of robustness models .",
    "this approach , which is sometimes also known as classic robust optimization , one - stage robustness , min - max optimization , absolute deviation , or simply _ robust optimization _ , can be seen as the pivotal starting point in the field of robustness .",
    "a solution @xmath22 to the uncertain problem @xmath34 is called _ strictly robust _ if it is feasible for all scenarios in @xmath35 , i.e. if @xmath36 for all @xmath16 .",
    "the objective usually follows the pessimistic view of minimizing the worst - case over all scenarios . denoting the set of strictly robust solutions with respect to the uncertainty set @xmath35 by @xmath37 the strictly robust counterpart of the uncertain optimization problem",
    "is given as @xmath38 the first to consider this type of problems from the perspective of _ generalized linear programs _ was soyster @xcite for uncertainty sets @xmath35 of type @xmath39 where the set @xmath40 contains possible column vectors @xmath41 of the coefficient matrix  @xmath42 .",
    "subsequent works on this topic include @xcite and @xcite",
    ".    however , building this approach into a strong theoretic framework is due to a series of papers by ben - tal , nemirovski , el ghaoui and co - workers @xcite .",
    "a summary of their results can be found in the book @xcite .",
    "their basic underlying idea is to hedge against all scenarios that may occur .",
    "as they argue , such an approach makes sense in many settings , e.g. , when constructing a bridge which must be stable , no matter which traffic scenario occurs , or for airplanes or nuclear power plants .",
    "however , this high degree of conservatism of strict robustness is not applicable to all situations which call for robust solutions .",
    "an example for this is timetabling in public transportation : being strictly robust for a timetable means that all announced arrival and departure times have to be met , no matter what happens .",
    "this may mean to add high buffer times , depending on the uncertainty set used , and thus would not result in a practically applicable timetable .",
    "such applications triggered research in robust optimization on ways to relax the concept .",
    "we now describe some of these approaches .      one possibility to overcome",
    "the conservatism of strict robustness is to shrink the uncertainty set @xmath35 .",
    "this has been conceptually introduced by bertsimas and sim in @xcite for linear programming problems . due to this reason ,",
    "this concept is sometimes also known as `` the approach of bertsimas and sim '' , sometimes also under the name `` @xmath43-robustness '' . analyzing the structure of uncertainty sets in typical applications",
    ", they observed that it is unlikely that all coefficients of one constraint change simultaneously to their worst - case values .",
    "instead they propose to hedge only against scenarios in which at most @xmath43 uncertain parameters per constraint change to their worst - case values , i.e. , they restrict the number of coefficients which are allowed to change leading to the concept of _ cardinality constrained robustness_. considering a constraint of the form @xmath44 with an uncertainty @xmath45 , i=1,\\ldots , n\\}$ ] , their robustness concept requires a solution @xmath46 to satisfy @xmath47 for a given parameter @xmath48 .",
    "any solution @xmath46 to this model hence hedges against all scenarios in which at most @xmath43 many uncertain coefficients may deviate from their nominal values at the same time .",
    "it can be shown that cardinality constrained robustness can also be considered as strict robustness using the convex hull of the _ cardinality - constrained uncertainty set _",
    "@xmath49    since @xmath50 is a polyhedral set , results on strict robustness with respect to polyhedral uncertainty can also be applied to cardinality constrained robustness .",
    "note that this approach also extends to fractional values of @xmath43 .",
    "their concept has been extended to uncertainty sets under general norms in @xcite .",
    "the approach to combinatorial optimization problems has been generalized in @xcite and @xcite .      in @xcite a completely different observation of instances occurring in real - world problems with uncertain data",
    "is used : often the variables can be decomposed into two sets .",
    "the values for the _ here - and - now variables _ have to be found by the robust optimization algorithm in advance , while the decision about the _ wait - and - see variables _ can wait until the actual scenario @xmath16 becomes known .",
    "note that this is similar to two - stage programming in stochastic optimization .",
    "we therefore assume that the variables @xmath51 are splitted into @xmath52 and @xmath53 with @xmath54 , where the variables @xmath55 need to be determined before the scenario @xmath16 becomes known , while the variables @xmath56 may be determined after @xmath10 has been realized .",
    "thus , we may also write @xmath57 to emphasize the dependence of @xmath56 on the scenarios . the uncertain optimization problem @xmath34 is rewritten as @xmath58 when fixing the here - and - now variables , one has to make sure that for any possible scenario @xmath16 there exists @xmath59 such that @xmath60 is feasible for @xmath10 .",
    "the set of adjustable robust solutions is therefore given by @xmath61 where @xmath62 denotes the projection of @xmath63 on @xmath64 .",
    "the worst case objective for some @xmath65 is given as @xmath66 the adjustable robust counterpart is then given as @xmath67    note that this setting is also useful for another type of problem instances , namely , if auxiliary variables are used that do not represent decisions , e.g. , additional variables to model the absolute value of a variable .",
    "there are several variations of the concept of adjustable robustness . instead of two stages ,",
    "multiple stages are possible . in the approach of finitely adaptable solutions @xcite , instead of computing a new solution for each scenario , a set of possible static solutions",
    "is computed , such that at least one of them is feasible in each stage .",
    "furthermore , the development of adjustable robustness was preceded by the similar approach of mulvey et al @xcite .",
    "they considered an uncertain linear optimization problem of the form @xmath68 where @xmath55 represents a vector of _ design _ variables that can not be adjusted , and @xmath56 a vector of _ control _ variables that can be adjusted when the realized scenario becomes known . for a finite uncertainty set @xmath69 ,",
    "their robust counterpart is given as @xmath70 the variables @xmath71 are introduced to measure the infeasibility in every scenario , i.e. , the deviation from the right - hand side .",
    "the function @xmath72 represents the _ solution robustness_. it can be modeled as a worst - case function of the nominal objective @xmath73 or , when probabilities @xmath74 are known , as an expected nominal objective .",
    "the function @xmath75 on the other hand represents the _ model robustness _ and depends on the infeasibility of the uncertain constraints .",
    "possible penalty functions are @xmath76 as ( mul ) is actually a bicriteria model , @xmath77 is used as a scalarization factor to combine both objectives .",
    "the lightly robust counterpart of an uncertain optimization problem , as developed in @xcite and generalized in @xcite is again application driven .",
    "originally developed for timetabling , the idea of light robustness is that a solution must not be too bad in the nominal case .",
    "for example , the printed timetable should have short travel times if everything runs smoothly and without disturbances ; or a planned schedule should have a small makespan . in this sense",
    "a certain nominal quality is fixed . among all solutions satisfying this standard",
    ", the concept asks for the most `` reliable '' one with respect to constraint violation .",
    "specifically , the general lightly robust counterpart as defined in @xcite is of the following form : @xmath78 where @xmath79 models a penalty weight for the violation of constraint @xmath32 and @xmath75 determines the required nominal quality .",
    "we denote by @xmath80 the nominal scenario , as introduced on page  .",
    "this approach was in its first application in @xcite used as a further development of the concept of cardinality constrained robustness ( see section  [ current - bs ] ) .",
    "note that a constraint of the form @xmath81 is equivalent to a constraint @xmath82 for any @xmath83 ; therefore , the coefficients @xmath79 play an important role in balancing the allowed violation of the given constraints .",
    "similar to adjustable robustness , _ recoverable robustness _ is again a two - stage concept .",
    "it has been developed in @xcite and has independently also been used in @xcite .",
    "its basic idea is to allow a class of _ recovery algorithms _ @xmath84 that can be used in case of a disturbance .",
    "a solution @xmath46 is called _ recovery robust _ with respect to @xmath84 if for any possible scenario @xmath16 there exists an algorithm @xmath85 such that @xmath42 applied to the solution @xmath46 and the scenario @xmath10 constructs a solution @xmath86 , i.e. , a solution which is feasible for the current scenario .",
    "the recovery robust counterpart according to @xcite is the following : @xmath87 it can be extended by including the recovery costs of a solution @xmath46 : let @xmath88 be a possible vector - valued function that measures the costs of the recovery , and let @xmath89 be a limit on the recovery costs , i.e. , @xmath90 for all @xmath18 .",
    "assume that there is some cost function @xmath91 associated with @xmath92 .",
    "setting @xmath93 gives the recovery robust counterpart with limited recovery costs : @xmath94    due to the generality of this robustness concept , the computational tractability heavily depends on the problem , the recovery algorithms and the uncertainty under consideration . in @xcite , the concept of recoverable robustness has been considered under the usage of metrics to measure recovery costs .",
    "the aim is to minimize the costs when recovering , where they differ between recovering to a feasible solution ( `` recovery - to - feasibility '' ) , and recovering to an optimal solution ( `` recovery - to - optimality '' ) in the realized scenario .",
    "the concept of regret robustness differs from the other presented robustness concepts insofar it usually only considers uncertainty in the objective function . instead of minimizing the worst - case performance of a solution",
    ", it minimizes the difference to the objective function of the best solution that would have been possible in a scenario . in some publications ,",
    "it is also called _",
    "deviation robustness_.    let @xmath19 denote the best objective value in scenario @xmath18 .",
    "the min - max regret counterpart of an uncertain optimization problem with uncertainty in the objective is then given by @xmath95 regret robustness is a concept with a vast amount of applications , e.g. , in location theory or in scheduling . for a survey on this concept , see @xcite and @xcite . in a similar spirit",
    ", the concept of lexicographic @xmath96-robustness has been recently proposed @xcite .",
    "its basic idea is to evaluate a fixed solution by reordering the set of scenarios according to the performance of the solution .",
    "this performance curve is then compared to an ideal curve , where the optimization problem is solved separately for every scenario .",
    "[ [ reliability . ] ] reliability .",
    "+ + + + + + + + + + + +    another approach to robust optimization is to relax the constraints of strict robustness .",
    "this leads to the concept of _ reliability _ [ reliable ] of ben - tal and nemirovski @xcite , in which the constraints @xmath36 are replaced by @xmath97 for some @xmath98 . a solution @xmath46 which satisfies @xmath99 is called _ reliable with respect to @xmath100_. the goal is to find a reliable solution which minimizes the original objective function in the worst case .",
    "similar to light robustness , one has to be careful that the representation of the constraints does not affect the reliability of the solution , otherwise one may obtain the counter - intuitive result that , although the constraints @xmath36 can also be written as @xmath101 for any increasing @xmath102 with @xmath103 what is understood by a robust solution may be different if one models the constraints with @xmath104 or with @xmath105 .    [ [ soft - robustness . ] ] soft robustness .",
    "+ + + + + + + + + + + + + + + +    the basic idea of _ soft robustness _ as introduced in @xcite is to handle the conservatism of the strict robust approach by considering a nested family of uncertainty sets , and allowing more deviation in the constraints for larger uncertainties .",
    "specifically , instead of an uncertainty set @xmath106 , a family of uncertainties @xmath107 with @xmath108 for all @xmath109 is used .",
    "the set of soft robust solutions is then given as @xmath110 note that strict robustness is a special case with @xmath111 for all @xmath112 .",
    "in @xcite , the authors show that a solution to the softly robust counterpart ",
    "i.e. , the optimization over @xmath113 with a worst - case objective  can be found by solving a sequence of strictly robust counterparts using a bisection approach over @xmath114 , and analyze the numerical performance on a bond portfolio and an asset allocation problem .    [",
    "[ comprehensive - robustness . ] ] comprehensive robustness .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + +    while the adjustable robust approach relaxes the assumption that all decisions have to be made before the realized scenario becomes known , the approach of comprehensively robust counterparts @xcite also removes the assumption that only scenarios defined in the uncertainty set @xmath35 need to be considered . instead , using a distance measure @xmath115 in the space of scenarios , and a distance measure @xmath116 in the solution space , they assume that the further away a scenario is from the uncertainty set , the further away the corresponding solution is allowed to be from the set of feasible solutions . as in adjustable robustness , the dependence of @xmath46 on the scenario @xmath10 is allowed , and we may write @xmath57 .",
    "the adjustable robust counterpart is extended to the following problem : @xmath117 where @xmath118 denote sensitivity parameters .",
    "this formulation needs further formal specification , which is provided in @xcite .    [",
    "[ uncertainty - feature - optimization . ] ] uncertainty feature optimization .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    instead of assuming that an explicit uncertainty set is given , which may be hard to model for real - world problems , the uncertainty feature optimization ( ufo ) approach @xcite rather assumes that the robustness of a solution is given by an explicit function . for an uncertain optimization problem @xmath119 ,",
    "let @xmath120 be a measure for @xmath121 robustness features .",
    "the ufo - counterpart of the uncertain problem is then given by @xmath122 where @xmath123 denotes the best objective value to the nominal problem .",
    "the authors show that this approach generalizes both stochastic optimization and the concept of cardinality constrained robustness of bertsimas and sim .",
    "as this section shows , we can not actually speak of one concept or point - of - view to be `` robust optimization '' ; instead , we should see it as a vast collection of different robustness concepts , each providing their unique advantages and disadvantages",
    ". generally speaking , there is usually a trade - off between the degree of freedom a concept gives to react to disruptions ( including what is considered as being a disruption , i.e. , the choice of the uncertainty set ) , and its computational complexity . from an algorithm engineering point of view , the size of this `` toolbox '' of different concepts significantly helps with finding a suitable robustness concept for a given problem .",
    "however , as these concepts are usually application - driven , they lack a generalizing systematics : applications tend to develop `` their own approach '' to robustness instead of making use of the existing body of literature , and develop their own notation and names along the way .",
    "in fact , the very same concepts are known under plenty of names .",
    "summaries as @xcite usually avoid this babylonian `` zoo '' of robustness concepts and nomenclature by focusing only on the mainstream concepts .",
    "thus , we suggest the following pointer to further research :    robust optimization needs a unified classification scheme .",
    "not only the development of robustness concepts , but also their analysis is data - driven .",
    "this becomes in particular clear when looking at the structure of the underlying uncertainty set .",
    "a large amount of research in the analysis of robustness concepts is devoted to finding equivalent problem formulations that are better tractable , using the structure of the uncertainty set .    in this section",
    "we first review this line of research , and then briefly point out exemplarily which other types of structure or ideas have been used in the analysis of concepts .",
    "[ [ finite - uncertainty - set . ] ] finite uncertainty set .",
    "+ + + + + + + + + + + + + + + + + + + + + + +    if the uncertainty set @xmath124 is a finite set containing not too many scenarios , most of the robustness concepts can be formulated as mathematical programs by just adding the constraints for each of the scenarios explicitly .",
    "this can straightforwardly been done for strict robustness yielding @xmath125 as the strictly robust counterpart .",
    "reliability and light robustness can be treated analogously . in all three cases ,",
    "the robust counterpart keeps many properties of the original ( non - robust ) problem formulation : if the original formulation was e.g. , a linear program , also its robust counterpart is .",
    "the same holds for differentiability , convexity , and many other properties .    for regret robustness one needs to precompute the best objective function value for each scenario",
    "@xmath126 in order to receive again a straightforward reformulation .",
    "also in adjustable and recoverable robustness mathematical programming formulations can be derived by adding a wait and see variable , or a group of recovery variables for _ each _ of the scenarios .",
    "this usually leads to a high number of additional variables but is ( at least for linear programming ) often still solvable .",
    "note that the concept of cardinality constrained robustness does not make much sense for a finite set of scenarios since it concerns the restriction _ which _ scenarios might occur .",
    "for a finite set , scenarios in which too many parameters change can be removed beforehand .",
    "[ [ polytopic - uncertainty . ] ] polytopic uncertainty .",
    "+ + + + + + + + + + + + + + + + + + + + + +    let @xmath127 and @xmath128 be quasiconvex in @xmath10 for any fixed @xmath129 .",
    "then there are robustness concepts in which the following _ reduction result _ holds : the robust counterpart w.r.t . an uncertainty set",
    "@xmath130 is equivalent to the robust counterpart w.r.t .",
    "@xmath131 . in such cases the robust counterpart w.r.t . a polytopic uncertainty set @xmath132 is equivalent to the robust counterpart w.r.t . the finite uncertainty set @xmath133 , hence the formulations for finite uncertainty sets can be used to treat polytopic uncertainties .",
    "we now review for which robustness concepts the reduction result holds .",
    "first of all , this is true for strict robustness , for affine and convex uncertainty this was mentioned in @xcite ; the generalization to quasiconvex uncertainty is straightforward .",
    "one of the direct consequences , namely that the robust counterpart of an uncertain linear program under these conditions is again a linear program was mentioned in @xcite .",
    "the same result holds for reliability since the reliable robust counterpart can be transformed to a strictly convex counterpart by defining @xmath134 . for light robustness , the result is also true , see @xcite . for the case of adjustable robustness , @xcite showed that the result holds for problems with fixed recourse .",
    "otherwise , counterexamples can be constructed . the generalization to nonlinear two - stage problems and",
    "quasiconvex uncertainty is due to @xcite . for recoverable robustness there",
    "exist special cases in which the recovery robust counterpart is equivalent to an adjustable robust counterpart with fixed recourse . in these cases ,",
    "the result of @xcite may be applied . however , in general , recoverable robustness does not allow this property .",
    "this also holds for recovery - to - optimality .",
    "[ [ interval - based - uncertainty . ] ] interval - based uncertainty .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + +    interval - based uncertainty can be interpreted as a special case of polytopic uncertainty where the polytope is a box @xmath24 \\times \\ldots \\times [ \\underline{\\xi}_m,\\overline{\\xi}_m]$ ] with @xmath135 extreme points @xmath136 , where @xmath137 .",
    "hence , all the results for polytopic uncertainty apply . they can often be simplified by observing that not all extreme points are needed since the respective constraints often dominate each other , yielding a drastic speed - up when solving the robust counterpart .    for their concept of cardinality",
    "constrained robustness , bertsimas and sim @xcite considered interval - based uncertainty sets for linear programs . this can be interpreted as strict robustness with a new uncertainty set @xmath130 only allowing scenarios in which not more than @xmath43 uncertain parameters per constraint change their values ( see also @xcite ) .",
    "this uncertainty set @xmath130 is a polytope , hence the robust counterpart for cardinality constrained robustness stays a linear program for interval - based uncertainty .",
    "[ [ ellipsoidal - uncertainty . ] ] ellipsoidal uncertainty .",
    "+ + + + + + + + + + + + + + + + + + + + + + + +    the case of ellipsoidal uncertainty is studied extensively for strict robustness and for adjustable robustness in @xcite .",
    "it could be shown that often the constraint @xmath138 can be replaced by a finite number of constraints for ellipsoidal uncertainty sets .",
    "however , it has been shown in @xcite that for ellipsoidal uncertainty , the structure of the strictly robust counterpart gets more complicated .",
    "for example ( see @xcite ) the strictly robust counterpart of a linear program is a conic quadratic program , the strictly robust counterpart of a quadratic constrained quadratic program is a semidefinite program , the strictly robust counterpart of a second order cone program is a semidefinite program , and the strictly robust counterpart of a semidefinite program is np - hard . as mentioned before ,",
    "all these results can be transferred to reliability .    for light robustness , it has been shown in @xcite that the lightly robust counterpart of a linear program with ellipsoidal uncertainty becomes a quadratic program .",
    "ellipsoidal uncertainty could receive more attention also for other robustness concepts ( e.g. , for regret robustness , which usually only considers finite or interval - based uncertainty , see @xcite ) , or for adjustable robustness , see @xcite .",
    "duality in uncertain programs has been considered as early as 1980 , see @xcite . in @xcite , it is shown that `` the primal worst equals the dual best '' , i.e. , under quite general constraints , the dual of a strictly robust counterpart ( a min - max problem ) amounts to optimization under the best case instead of the worst - case ( a max - min problem ) . since then , duality in robust optimization has been a vivid field of research , see , e.g. , @xcite and @xcite . in the following , we highlight two applications of duality for robust optimization : one for constraints , and one for objectives .      duality is a useful tool for the reformulation of robust constraints .",
    "we exemplarily demonstrate this using two applications .    in @xcite ,",
    "the authors show that the cardinality constrained robust counterpart can be linearized by using the dual of the inner maximization problem .",
    "this yields @xmath139    note that a general , robust constraint of the form @xmath140 can be rewritten as @xmath141 this is used in @xcite . with a concave function @xmath127 and an uncertainty set @xmath142 with a nonempty , convex and compact set @xmath143 , applying duality yields @xmath144 where @xmath145 is the support function , @xmath146 is a conjugate function , and other technical requirements are met .",
    "this gives a very general tool to compute robust counterparts ; e.g. , a linear constraint of the form @xmath147 and @xmath148 yields the counterpart @xmath149 .      in many papers",
    ", duality is used to change the typical min - max objective of a robust counterpart into a min min objective by using the dual formulation of the inner maximization problem .",
    "this method was first applied to the spanning tree problem @xcite , and later extended to the general case of optimization problems with zero duality gap in @xcite .",
    "let an uncertain optimization problem of the form @xmath150 with interval - based uncertainty in @xmath151 be given ; i.e. , @xmath152 $ ] . then we may write @xmath153 where @xmath154 denotes the regret worst - case for @xmath46 , given as @xmath155 if @xmath156 , and @xmath157 if @xmath158 . using that the duality gap is zero",
    ", we can insert the dual to the inner optimization problem , and get the following equivalent problem : @xmath159 this reformulation can then be solved using , e.g. , a branch and bound approach .",
    "concerning the design and analysis of algorithms we concentrate on the most mature concept , namely on algorithms for strict robustness .",
    "many approaches , often based on similar ideas , also exist for regret optimization ",
    "e.g. , cutting plane approaches @xcite , or preprocessing considerations @xcite . for the other concepts",
    ", approaches are currently still being developed .",
    "the robust counterpart per se is a semi - infinite program ; thus , all methods that apply to semi - infinite programming @xcite can be used here as well .",
    "however , the special min - max structure of the robust counterpart allows improved algorithms over the general case , in particular for the reformulations based on special uncertainty sets as mentioned in section  [ sec - reformulations ] .    in the following , we discuss algorithms that are generically applicable to strictly robust optimization problems .",
    "the case we consider here is that @xmath124 is a finite set ; i.e. , the strictly robust counterpart ( sr ) can be rewritten as @xmath160 due to the lack of structure in the uncertainty set , these instances can be hard so solve , even though they have a similar structure as the nominal problem .",
    "the following approach was introduced by @xcite for discrete optimization problems with uncertainty only in the objective : for any vector @xmath161 , the surrogate relaxation src(@xmath162 ) of ( sr ) with uncertain objective function is given by @xmath163    note that the structure of the nominal problem is preserved , which allows the usage of specialized algorithms already known .",
    "furthermore , the optimal objective value src@xmath164(@xmath162 ) of this problem is a lower bound on the optimal objective value @xmath165 of the strictly robust counterpart ; and as the set of feasible solutions is the same , also an upper bound is provided by solving src(@xmath162 ) .",
    "this approach is further extended by solving the problem @xmath166 i.e. , by finding the multiplier @xmath162 that yields the strongest lower bound .",
    "this can be done using a sub - gradient method .",
    "the lower and upper bounds generated by the surrogate relaxation are then used within a branch and bound framework on the @xmath46 variables .",
    "the approach was further improved for the knapsack problem in @xcite .      in @xcite ,",
    "a local search - based algorithm for the knapsack problem with uncertain objective function is developed .",
    "we briefly list the main aspects .",
    "it makes use of two different search procedures : given a feasible solution @xmath46 and a list of local neighborhood moves @xmath167 , let @xmath168 ( the generalized search ) determine the worst - case objective value of every move , and return the best move along with its objective value .",
    "furthermore , let @xmath169 ( the restricted search ) perform a random search using the moves @xmath167 with at most @xmath170 steps .",
    "the _ cooperative local search _ algorithm ( cls ) works as follows : it first constructs a heuristic starting solution , e.g. , by a greedy approach . in every iteration",
    ", a set of moves @xmath167 is constructed using either the generalized search for sets with small cardinality , or the restricted search for sets with large cardinality .",
    "when a maximum number of iterations is reached , the best feasible solution found so far is returned .",
    "a discussion of approximation algorithms for strict robustness with finitely many scenarios is given , e.g. , in @xcite , where it is shown that there is an fptas for the shortest path , the spanning tree , and the knapsack problem when the number of scenarios is constant ; but the shortest path problem is not @xmath171-approximable , the spanning tree problem is not @xmath172-approximable , and the knapsack problem is not approximable at all when the number of scenarios is considered as a non - constant input .",
    "the basic idea for their results is to use the relationship between the strictly robust counterpart ( sr ) and multi - objective optimization : at least one optimal solution for ( sr ) is also an efficient solution in the multi - objective problem where every scenario is an objective .",
    "thus , if the multi - objective problem has a polynomial - time @xmath96-approximation algorithm , then also ( sr ) has a polynomial - time @xmath96-approximation .",
    "there exist many more approximation algorithms for specific problems . for example , in @xcite , robust set covering problems are considered with implicitly given , exponentially many scenarios . for a similar setting of exponentially many , implicitly given scenarios for robust network design problems ( e.g. , steiner tree ) , @xcite presents approximation results .",
    "approximation results using finite scenario sets for two - stage robust covering problems , min - cut and shortest path can be found in @xcite and @xcite .",
    "when we can not make use of the structure of @xmath35 ( i.e. , when the reformulation approaches from section  [ sec : analysis ] can not be applied , or when we do not have a closed description of the set available ) , we can still solve ( sr ) heuristically using a finite subset of scenarios ( given that we have some sampling method available ) .",
    "the resulting problem can be solved using the algorithms described in section  [ 1-rc - finite ] .    in a series of paper @xcite , the probability of a solution calculated by a sampled scenario subset being feasible for all scenarios is considered .",
    "it is shown that for a convex uncertain optimization problem , the probability of the _ violation event _ @xmath173 can be bounded by @xmath174 where @xmath175 is the sample size , @xmath176 is an optimal solution with respect to the sampled scenarios , and @xmath177 is ( as before ) the dimension of the decision space .",
    "note that the left - hand side is the probability of a probability ; this is due to fact that @xmath178 is a random variable in the sampled scenarios . in other words ,",
    "if a desired probability of infeasibility @xmath179 is given , the accordingly required sample size can be determined .",
    "this result holds under the assumption that every subset of scenarios is feasible , and is independent of the probability distribution which is used for sampling over @xmath35 .",
    "as the number of scenarios sampled this way may be large , the sequential optimization approach @xcite uses sampled scenarios one by one . using the above probability estimates",
    ", a solution generated by this method is feasible for ( sr ) only within a certain probability .",
    "the basic idea is the following : we consider the set @xmath180 of feasible solutions with respect to a given quality level @xmath100 , i.e. , @xmath181 where @xmath182 using a subgradient on @xmath183 , the current solution is updated in every iteration using the sampled scenario @xmath10 .",
    "lower bounds on the number of required iterations are given to reach a desired level of solution quality and probability of feasibility .",
    "for this type of algorithm , the general idea is to iteratively a ) solve a robust optimization problem with a finite subset of scenarios , and b ) use a worst - case oracle that optimizes over the uncertainty set @xmath35 for a given solution @xmath46 .",
    "these steps can be done either exactly or approximately .",
    "algorithms of this type have often been used , see , e.g. , @xcite ; sometimes even without knowledge that such an approach already exists ( see also the lacking unification in robust optimization mentioned in section  [ unified ] ) .    the following general results should be mentioned .",
    "@xcite show that this method converges under certain assumptions , and present further variations that improve the numerical performance of the algorithm .",
    "cutting - plane methods are compared to compact formulations on general problem benchmarks in  @xcite . in @xcite ,",
    "the implementation is considered in more detail : a distributed algorithm version is presented , in which each processor starts with a single uncertain constraint , and generated cutting planes are communicated .",
    "the goal of this section is to show how much one can benefit by using the structure a specific problem might have . to this end",
    ", we exemplarily chose three specialized algorithms : the first solves an np - hard problem in pseudo - polynomial time , the second is a heuristic for another np - hard problem , and the third is a polynomial - time solution approach . note that many more such algorithms have been developed .    in @xcite ,",
    "a dynamic programming algorithm is developed for the robust knapsack problem with cardinality constrained uncertainty in the weights . extending the classic dynamic programming scheme to also include the number of items that are on their upper bounds , they are able to show a @xmath184 time complexity , where @xmath177 is the number of items , and @xmath151 is the knapsack budget ( note that this is not a polynomial algorithm ) . the key idea of the dynamic program is an easy feasibility check of a solution , which is achieved by using an item sorting based on the upper weight bound @xmath185 . in computational experiments , instances with up to 5000 items can be solved in reasonable time .",
    "the problem of min - max regret shortest paths with interval uncertainty is considered in @xcite .",
    "the general idea is based on path ranking , and the conjecture that a path that ranks good on the worst - case scenario , may also rank good with respect to regret .",
    "considering paths with respect to their worst - case performance order , they formulate a stopping criterion when the regret of a path may not improve anymore .",
    "note that the regret of a single path can in this case easily be computed by assuming the worst - case length for all edges in the path , and the best - case length for all other edges .",
    "experiments show a strong correlation between computation times and length of the optimal path .    while the former two problems are np - hard ( for regret shortest path , see @xcite ) , a polynomial - time algorithm for the min - max regret 1-center on a tree with uncertain edge lengths and node weights is presented in @xcite .",
    "a 1-center is a point on any edge of the tree for which the maximal weighted distance to all nodes is minimized .",
    "the algorithm runs in @xmath186 time , which can be reduced to @xmath187 for the unweighted case .",
    "it is based on the observation that an edge that contains an optimal solution can be found in @xmath187 time ; however , determining its exact location for the weighted case is more complicated .",
    "further algorithms to be mentioned here are the polynomial algorithm for min - max regret flow - shop scheduling with two jobs from @xcite ; the polynomial algorithm for the min - max regret location - allocation problem from @xcite ; the heuristic for regret spanning arborescences from @xcite ; the polynomial algorithm for the min - max regret gradual covering location problem from @xcite ; and the ptas for two - machine flow shop scheduling with discrete scenarios from @xcite .",
    "we now discuss performance guarantees in robust optimization . measuring the performance of a robust solution or algorithm",
    "can be either done by developing guarantees regarding the performance of an algorithm or of a heuristic solution ; but also by developing performance guarantees that compare the solutions generated by different robustness concepts .    on the algorithmic side , standard measures like the approximation ratio ( i.e.",
    ", the ratio between the robust objective value of the heuristic and the optimal robust solution ) can be applied .",
    "there are simple , yet very general approximation algorithms presented in @xcite for strict robustness and regret robustness : if the original problem is polynomially solvable , there is an @xmath175-approximation algorithm for finite uncertainty sets , where @xmath175 is the number of scenarios .",
    "furthermore , there is a @xmath188-approximation algorithm for regret robustness with interval - based uncertainty @xcite by using the mid - point scenario .",
    "these results have been extended in @xcite , see also the approximability survey @xcite on strict and regret robustness .",
    "we do not know of approximation algorithms for other robustness concepts , which would provide interesting insight in the structural differences between the robust counterparts .",
    "regarding the comparison between solutions generated by different concepts , an interesting approach is to consider the quality of a strictly robust solution when used in an adjustable setting , as done in @xcite .",
    "the authors are able to develop performance guarantees solely based on the degree of symmetry of the uncertainty set .",
    "concerning the evaluation of a robust solution ( and not the algorithm to compute it ) , there is no general consent how to proceed , and surprisingly little systematic research can be found regarding this field .",
    "the so - called _ robustness gap _ as considered in @xcite is defined as the difference between the worst - case objective of the robust solution , and the worst optimal objective value over all scenarios , i.e. , as @xmath189 , where @xmath165 denotes the optimal value of ( sr ) .",
    "they show that in the case of constraint - wise affine uncertainty , a compact set @xmath190 , and some technical assumptions , this gap equals zero .",
    "however , the most widely used approach is computing the so - called _ price of robustness _",
    "@xcite , which is usually defined as the ratio between the robust solution value and the nominal solution value , i.e. , as @xmath191 as an example , @xcite presents the analytical calculation of the price of robustness for knapsack problems . using an interval - based uncertainty set on the weights ( i.e.",
    ", the weight of item @xmath32 is in @xmath192 $ ] ) and a cardinality constrained robustness approach , they show that the price of robustness equals @xmath193 for @xmath194 and @xmath195 . for @xmath196 , the price of robustness becomes @xmath197 .",
    "note that this is a rather pessimistic view on robustness , as it only concentrates on the additional _ costs _ of a robust solution compared to the nominal objective function value of an optimal solution for the nominal case .",
    "however , if the application under consideration is affected by uncertainty , the nominal solution will not necessarily find nominal conditions , hence the robust solution may actually _ save _ costs compared to the nominal solution ( which easily may be even infeasible ) .",
    "there is no general `` golden rule '' that would provide a fair evaluation for the performance of a robust solution .",
    "note that such a bound is not the kind of performance guarantee that was actually considered in @xcite .",
    "rather , they developed probability bounds for the feasibility of a solution to the cardinality constrained approach depending on @xmath43 . using such bounds they argue that the nominal performance of a solution can be considerably increased without decreasing the probability of being feasible too much",
    ".    summarizing the above remarks",
    ", we claim that :    performance guarantees are not sufficiently researched in robust optimization .",
    "in the following , we present some libraries that are designed for robust optimization . a related overview can also be found in @xcite .    [ [ aimms - for - robust - optimization . ] ] aimms for robust optimization .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    aimms @xcite , which stands for `` advanced interactive multidimensional modeling system '' , is a proprietary software that contains an algebraic modeling language ( aml ) for optimization problems .",
    "aimms supports most well - known solvers , including cplex , xpress and gurobi .",
    "since 2010 , aimms has offered a robust optimization add - on , which was developed in a partnership with a. ben - tal .",
    "the extension only considers the concepts of strict and adjustable robustness as introduced in sections  [ current - strict ] and [ current - adjustable ] . as uncertainty sets , interval - based uncertainty sets , polytopic uncertainty sets , or ellipsoidal uncertainty sets",
    "are supported and transformed to mathematical programs as described in section  [ sec - reformulations ] .",
    "the respective transformations are automatically done when the model is translated from the algebraic modeling language to the solver .",
    "[ [ rome . ] ] rome .",
    "+ + + + +    while aimms focuses on the work of ben - tal and co - workers , rome @xcite ( `` robust optimization made easy '' ) takes its origins in the work of bertsimas , sim and co - workers .",
    "rome is built in the matlab environment , which makes it on the one hand intuitive to use for matlab - users , but on the other hand lacks the versatility of an aml . as a research project , rome is free to use .",
    "it currently supports cplex , xpress and sdpt3 as solver engines .",
    "rome considers polytopic and ellipsoidal uncertainty sets , that can be further specified using the mean support , the covariance matrix , or directional deviations . assuming an affine dependence of the wait - and - see variables",
    ", it then transforms the uncertain optimization problem to an adjustable robust counterpart .",
    "the strictly robust counterpart is included as a special case .",
    "[ [ yalmip . ] ] yalmip .",
    "+ + + + + + +    similar to rome , yalmip @xcite is a layer between matlab and a solver that allows the modeling of optimization problems under uncertainty .",
    "nearly all well - known solvers are supported , including cplex , gurobi and xpress .",
    "yalmip considers strict robustness . in order to obtain the strict robust counterpart of an uncertain optimization problems so - called _ filters _",
    "are used : when presented a model with uncertainty , the software checks if one of these filters applies to generate the strictly robust counterpart .",
    "currently , five of these automatic transformations are implemented . a duality filter ( which adds dual variables according to section  [ sec - dual ] ) ,",
    "an enumeration filter for finite and polytopic scenario sets ( which simply lists all relvant constraints ) , an explicit maximization filter ( where a worst - case scenario is used ) , the plya filter ( which is based on an inner approximation of the set of feasible solutions ) , and an elimination filter ( which sets variables affected by uncertainty to 0 and is used as a last resort ) .    [ [ ropi . ] ] ropi .",
    "+ + + + +    the robust optimization programming interface ( ropi ) @xcite is a c++ library that provides wrapper mip classes to support a range of solvers . using these generic classes , a robust counterpart is automatically generated given the desired robustness concept and uncertainty set .",
    "contrary to the previous libraries , a wider choice of robustness concepts is provided : these include strict robustness , adjustable robustness , light robustness , and different versions of recoverable robustness .",
    "even though a user can pick and choose between multiple robust optimization libraries , there is to the best of our knowledge no library of robust optimization _",
    "algorithms _ available .",
    "all of the above implementations are based on reformulation approaches , which makes it possible to draw upon existing solvers .",
    "however , as described in section  [ sec : algorithms ] , there are plenty of specifically designed algorithms for robust optimization available . making them",
    "readily - implemented available to the user should be a significant concern for future work in robust optimization .",
    "there is no robust optimization library available with specifically designed algorithms other than reformulation approaches .",
    "as already stated , robust optimization has been application - driven ; thus , there are abundant papers dealing with applications of some robustness approach to real - world or at least realistic problems .",
    "presenting an exhaustive list would go far beyond the scope of this paper ; examples include circuit design @xcite , emergency logistics @xcite , and load planning @xcite for adjustable robustness ; supply chain optimization @xcite and furniture planning @xcite for cardinality constrained robustness ; inventory control for comprehensive robustness @xcite ; timetabling @xcite , and timetable information @xcite for light robustness ; shunting @xcite , timetabling @xcite , and railway rolling stock planning @xcite for recoverable robustness ; and airline scheduling for ufo @xcite .",
    "hence , we can state :    robust optimization is application - driven .      in this section",
    "we consider research that either compares two robustness concepts to the same problem , or two algorithms for the same problem and robustness concept .",
    "we present a list of papers on the former aspect in table  [ exp - table ] , and a list of papers on the latter aspect in table  [ exp - table2 ] .",
    "we do not claim completeness for these tables ; rather , they should be considered as giving a general impression on recent directions of research .    [ cols= \"",
    "> , > , > , < , < , < , < , < \" , ]",
    "what becomes immediately obvious is that these limits are much smaller than for their nominal problem counterparts , which can go easily into the millions .",
    "we exemplarily show how experimental results can be used to design better algorithms for robust optimization ; thus , we highlight the potential that lies in following the algorithm engineering cycle . to this end",
    ", we consider the regret shortest path problem : given a set of scenarios consisting of arc lengths in a graph , find a path from a fixed source node to a fixed sink node which minimizes the worst - case length difference to an optimal path for each scenario .    from a theoretical perspective ,",
    "the problem complexity is well - understood . for",
    "discrete uncertainty sets ( and already for only two scenarios ) , the problem was shown to be np - hard in the seminal monograph @xcite .",
    "for interval - based uncertainty , @xcite showed its np - hardness .",
    "furthermore , it is known that the regret shortest path problem with a finite , but unbounded set of scenarios is not approximable within @xmath198 . for the interval - case ,",
    "a very simple 2-approximation algorithm ( see @xcite ) is known : all one needs to do is to compute the shortest path with respect to the midpoint scenario , i.e. , the arc lengths which are the midpoint of the respective intervals .    to solve the interval regret problem exactly",
    ", a branch - and - bound method has been proposed @xcite , which branches along the worst - case path in the graph .",
    "however , computational experience shows that the midpoint solution  despite being `` only '' a 2-approximation  is already an optimal , or close - to - optimal solution for many of the randomly generated benchmark instances .    examining this aspect in more detail",
    ", @xcite developed an instance - dependent approximation guarantee for the midpoint solution , which is always less or equal to 2 , but usually lies around @xmath199 .    using these two ingredients  the strong observed performance of the midpoint solution , and its instance - dependent lower bound  the branch - and - bound algorithm of @xcite can be easily adapted , by using a midpoint - path - based branching strategy instead of the worst - case path , and by using the improved guarantee as a lower bound .",
    "the resulting algorithm considerably outperforms the previous version , with computation times two orders of magnitude better for some instance classes .",
    "these modifications were possible by studying experimental results , improving thereupon the theoretical analysis , and feeding this analysis back to an algorithm .",
    "it is an example for the successful traversal of an algorithm engineering cycle , and we believe that many more such algorithmic improvements can be achieved this way .",
    "in this paper we propose to use the algorithm engineering methodology to better understand the open problems and challenges in robust optimization .",
    "doing so , we were able to point out links between algorithm engineering and robust optimization , and we presented an overview on the state - of - the - art from this perspective .    in order to further stress the usefulness of the algorithm engineering methodology , we finally present three examples . each of them is composed of a series of papers , which together follow the algorithm engineering cycle in robust optimization .",
    "@xcite introduced the concept of strict robustness .",
    "this concept was illustrated in several examples ( e.g. from linear programming , see @xcite or for a cantilever arm as in @xcite ) and analyzed for these examples in a mathematical way .",
    "the analysis in these papers showed that the problem complexity increases then introducing robustness ( e.g. , the robust counterpart of an uncertain linear program with ellipsoidal uncertainty is an explicit conic quadratic program ) .",
    "moreover , the authors recognized that the concept is rather conservative introducing an approximate robust counterpart with a more moderate level of conservatism .",
    "these ideas were taken up @xcite to start the next run through the algorithm engineering cycle by introducing their new concept of cardinality constrained robustness , which is less conservative and computationally better tractable , but may be applied only to easier uncertainty sets . applying this concept to train timetabling and performing experiments with it was the starting point of @xcite who relaxed the constraints further and developed the concept of light robustness which was then later generalized to arbitrary uncertainty sets by @xcite .",
    "recognizing that the concept of strict robustness is too conservative , @xcite proposed the first two - stage robustness approach by introducing their concept of adjustable robustness . when applying this concept to several application of railway planning within the arrival project ( see @xcite ) , @xcite noted that the actions allowed to adjust a timetable do not fit the practical needs .",
    "this motivated them to integrate recovery actions in robust planning yielding the concept of recoverable robustness .",
    "unfortunately , recovery robust solutions are hard to obtain .",
    "research on developing practical algorithms is still ongoing .",
    "recent examples are a column - generation based approach for robust knapsack problems and shortest path problems with uncertain demand @xcite , an approach using bender s decomposition for railway rolling stock planning @xcite , and the idea of replacing the recovery algorithm by a metric @xcite .",
    "the following example shows the application of the algorithm engineering cycle on a specific application , namely constructing robust timetable information systems .",
    "suppose that a passenger wants to travel from an origin to some destination by public transportation .",
    "the passenger can use a timetable information system which will provide routes with small traveling time .",
    "however , since delays are a matter of fact in public transportation , a robust route would be more valuable than just having a shortest route .",
    "in @xcite this problem was considered for strictly robust routes : the model was set up , analyzed ( showing that it is np - complete ) , and an algorithm for its solution was designed .",
    "the experimental evaluation on real - world data showed that strictly robust routes are useless in practice : their traveling time is much too long .",
    "based on these experiments , light robust passenger information system was considered .",
    "the light robust model was designed and analyzed ; algorithms based on the strictly robust procedures could be developed .",
    "the experiments showed that this model is much better applicable in practice .",
    "however , the model was still not satisfactory , since it was assumed that a passenger stays on his / her route whatever happens .",
    "this drawback motivated to start the algorithm engineering cycle again in @xcite where now recoverable robust timetables are investigated .",
    "considering the cycle of design , analysis , implementation , and experiments , we were also able to identify pointers for further research .",
    "we summarize our results by reproducing the most significant messages :    1 .",
    "_ robust optimization is application - driven .",
    "_ from the beginning , robust optimization was intended as an optimization approach which generates solutions that perform well in a realistic environment . as such ,",
    "it is highly appealing to practitioners , who would rather sacrifice some nominal solution quality if the solution stability can be increased .",
    "2 .   _ robust optimization needs a unified classification scheme .",
    "_ while the strong connection to applications is a beneficial driver of research , it also carries problems .",
    "one striking observation is a lack of unification in robust optimization .",
    "this begins with simple nomenclature : the names for strict robustness , or the uncertainty set considered by bertsimas and sim are plenty .",
    "it extends to the frequent re - development of algorithmic ideas ( as iterative scenario generation ) , and the reinvention of robustness concepts from scratch for specific applications .",
    "this lack of organization is in fact unscientific , and endangers the successful perpetuation of research . as related problems ,",
    "some journals do nt even offer `` robust optimization '' as a subject classification ( even though publishing papers on robust optimization ) ; solutions generated by some fashion that is somehow related to uncertainty call themselves `` robust '' ; and students that are new to the field have a hard time to identify the state - of - the - art .",
    "_ performance guarantees are not sufficiently researched in robust optimization .",
    "_ also this point can be regarded as related to robust optimization being application - driven and non - unified .",
    "performance guarantees are of special importance when comparing algorithms ; hence , with a lack of comparison , there also comes a lack of performance guarantees .",
    "this includes the comparison of robust optimization concepts , of robust optimization algorithms , and even the general evaluation of a robust solution compared to a non - robust solution .",
    "there is no robust optimization library available with specifically designed algorithms other than reformulation approaches .",
    "_ while libraries for robust optimization exist , they concentrate on the modeling aspects of uncertainty , and less on different algorithmic approaches .",
    "having such a library available would prove extremely helpful not only for practitioners , but also for researches that develop new algorithms and try to compare them to the state - of - the - art .",
    "_ there are too few comparative studies in robust optimization .",
    "_ all the above points culminate in the lack of comparative studies ; however , we argue that here also lies a chance to tackle these problems .",
    "this paper is a humble step to motivate such research , and we hope for many more publications to come .",
    "bouman , j.m .",
    "akker , and j.a .",
    "van  den hoogeveen .",
    "recoverable robustness by column generation . in _",
    "european symposium on algorithms _ , volume 6942 of _ lecture notes in computer science _ , pages 215226 .",
    "springer , 2011 .                  c.  bsing , a.m.c.a .",
    "koster , and m.  kutschka .",
    "recoverable robust knapsacks : @xmath43-scenarios . in j.",
    "pahl , t.  reiners , and s.  vo , editors , _ network optimization _ ,",
    "volume 6701 of _ lecture notes in computer science _ ,",
    "pages 583588 .",
    "springer berlin heidelberg , 2011 .",
    "s.  cicerone , g.  dangelo , g.  di stefano , d.  frigioni , a.  navarra , m.  schachtebeck , and a.  schbel .",
    "recoverable robustness in shunting and timetabling . in _ robust and online large - scale optimization _ , number 5868 in lecture notes in computer science , pages 2860 .",
    "springer , 2009 .",
    "g.  dangelo , g.  di stefano , and a.  navarra .",
    "recoverable - robust timetables for trains on single - line corridors . in _ proceedings of the 3rd international seminar on railway operations modelling and analysis - engineering and optimisation approaches ( railzurich2009 ) _ , 2009 .",
    "k.  dhamdhere , v.  goyal , r.  ravi , and m.  singh . how to pay , come what may : approximation algorithms for demand - robust covering problems . in _",
    "foundations of computer science , 2005 .",
    "focs 2005 .",
    "46th annual ieee symposium on _ , pages 367376 .",
    "ieee , 2005 .",
    "d.  delling , p.  sanders , d.  schultes , and d.  wagner .",
    "engineering route planning algorithms . in j.  lerner , d.  wagner , and k.  a. zweig , editors , _ algorithmics of large and complex networks _ ,",
    "volume 5515 of _ lecture notes in computer science _ , pages 117139 .",
    "springer berlin heidelberg , 2009 .",
    "m.  fischetti and m.  monaci .",
    "light robustness . in r.",
    "k. ahuja , r.h .",
    "mhring , and c.d .",
    "zaroliagis , editors , _ robust and online large - scale optimization _ , volume 5868 of _ lecture note on computer science _ , pages 6184 .",
    "springer , 2009 .          y.  fujisaki and t.  wada .",
    "robust optimization via probabilistic cutting plane technique . in _ proceedings of the 40th iscie international symposium on stochastic systems theory and its applications _ , pages 137142 , 2009 .",
    "m.  goerigk , s.  hee , m.  mller - hannemann , m.  schmidt , and a.  schbel . .",
    "in d.  frigioni and s.  stiller , editors , _",
    "13th workshop on algorithmic approaches for transportation modelling , optimization , and systems _",
    ", volume  33 of _ openaccess series in informatics ( oasics ) _ , pages 114 , dagstuhl , germany , 2013 .",
    " leibniz - zentrum fuer informatik .",
    "m.  goerigk , m.  knoth , m.  mller - hannemann , m.  schmidt , and a.  schbel . . in a.",
    "caprara and s.  kontogiannis , editors , _ 11th workshop on algorithmic approaches for transportation modelling , optimization , and systems _ , volume  20 of _ openaccess series in informatics ( oasics ) _ , pages 7687 , dagstuhl , germany , 2011 .",
    " leibniz - zentrum fuer informatik .",
    "m.  goerigk and a.  schbel . .",
    "in t.  erlebach and m.  lbbecke , editors , _",
    "10th workshop on algorithmic approaches for transportation modelling , optimization , and systems ( atmos10 ) _ , volume  14 of _ openaccess series in informatics ( oasics ) _ , pages 100113 , dagstuhl , germany , 2010 .",
    " leibniz - zentrum fuer informatik .",
    "m.  goerigk and a.  schbel . a scenario - based approach for robust linear optimization . in _ proceedings of the first international icst conference on theory and practice of algorithms in ( computer ) systems",
    "_ , tapas11 , pages 139150 , berlin , heidelberg , 2011 .",
    "springer - verlag .",
    "goetzmann , s.  stiller , and c.  telha .",
    "optimization over integers with robustness in cost and few constraints . in r.",
    "solis - oba and g.  persiano , editors , _ approximation and online algorithms ( waoa 2011 ) _ , volume 7164 of _ lecture notes in computer science _ , pages 89101 .",
    "springer berlin / heidelberg , 2012 .                          c.  liebchen , m.  lbbecke , r.  h. mhring , and s.  stiller .",
    "the concept of recoverable robustness , linear programming recovery , and railway applications . in r.",
    "k. ahuja , r.h .",
    "mhring , and c.d .",
    "zaroliagis , editors , _ robust and online large - scale optimization _ ,",
    "volume 5868 of _ lecture note on computer science _ , pages 127 .",
    "springer , 2009 .",
    "m.  mani , a.  k. sing , and m.  orshansky .",
    "joint design - time and post - silicon minimization of parametric yield loss using adjustable robust optimization . in _ proceedings of the 2006 ieee / acm international conference on computer - aided design",
    "_ , iccad 06 , pages 1926 , new york , ny , usa , 2006 ."
  ],
  "abstract_text": [
    "<S> robust optimization is a young and emerging field of research having received a considerable increase of interest over the last decade . in this paper </S>",
    "<S> , we argue that the the algorithm engineering methodology fits very well to the field of robust optimization and yields a rewarding new perspective on both the current state of research and open research directions .    to this end </S>",
    "<S> we go through the algorithm engineering cycle of design and analysis of concepts , development and implementation of algorithms , and theoretical and experimental evaluation . </S>",
    "<S> we show that many ideas of algorithm engineering have already been applied in publications on robust optimization . </S>",
    "<S> most work on robust optimization is devoted to analysis of the concepts and the development of algorithms , some papers deal with the evaluation of a particular concept in case studies , and work on comparison of concepts just starts . </S>",
    "<S> what is still a drawback in many papers on robustness is the missing link to include the results of the experiments again in the design . </S>"
  ]
}
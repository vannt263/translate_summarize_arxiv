{
  "article_text": [
    "a set of @xmath0 mobile agents with ( possibly distinct ) maximum speeds @xmath3 ( @xmath4 ) are in charge of _ guarding _ or in other words _ patrolling _ a given region of interest . patrolling problems find applications in the field of robotics where surveillance of a region is necessary .",
    "an interesting one - dimensional variant have been introduced by czyzowicz  et  al .",
    "@xcite , where the agents move along a rectifiable jordan curve representing a _",
    "fence_. the fence is either a _ closed _ curve ( the boundary of a compact region in the plane ) , or an _ open _ curve ( the boundary between two regions ) . for simplicity ( and without loss of generality ) it can be assumed that the open curve is a line segment and the closed curve is a circle .",
    "the movement of the agents over the time interval @xmath5 is described by a _ patrolling schedule _",
    ", where the speed of the @xmath6th agent , @xmath7 ( @xmath4 ) , may vary between zero and its maximum value @xmath3 in any of the two moving directions ( left or right )",
    ".    given a closed or open fence of length @xmath8 and maximum speeds @xmath9 of @xmath0 agents , the goal is to find a _ patrolling schedule _ that minimizes the _ idle time _",
    "@xmath10 , defined as the longest time interval in @xmath5 during which a point on the fence remains unvisited , taken over all points . a straightforward volume argument  @xcite yields the lower bound @xmath11 for an ( open or closed ) fence of length  @xmath8 .",
    "a _ patrolling algorithm _ computes a _ patrolling schedule _ for a given fence and set of speeds @xmath9 .    for an open fence ( line segment ) ,",
    "czyzowicz  et  al .",
    "@xcite proposed a simple partitioning strategy , algorithm @xmath12 , where each agent moves back and forth perpetually in a segment whose length is proportional with its speed .",
    "specifically , for a segment of length @xmath8 and @xmath0 agents with maximum speeds @xmath13 , algorithm @xmath12 partitions the segment into @xmath0 pieces of lengths @xmath14 , and schedules the @xmath6th agent to patrol the @xmath6th interval with speed @xmath3 .",
    "algorithm @xmath12 has been proved to be optimal for uniform speeds  @xcite , i.e. , when all maximum speeds are equal .",
    "algorithm @xmath12 achieves an idle time @xmath15 on a segment of length @xmath8 , and so @xmath12 is a 2-approximation algorithm for the shortest idle time .",
    "it has been conjectured  ( * ? ? ? *",
    "conjecture  1 ) that @xmath12 is optimal for arbitrary speeds , however this was disproved by kawamura and kobayashi  @xcite : they selected speeds @xmath16 and constructed a schedule for @xmath17 agents that achieves an idle time of @xmath18 .",
    "a patrolling algorithm @xmath19 is _ universal _ if it can be executed with any number of agents @xmath0 and any speed setting @xmath9 for the agents .",
    "for example , @xmath12 above is universal , however certain algorithms ( e.g. , algorithm @xmath20 in section  [ sec:2/3 ] or the algorithm in section  [ sec:24/25 ] ) can only be executed with certain speed settings or number of agents , i.e. , they are not universal .    for the closed fence ( circle ) , no universal algorithm has been proposed to be optimal . for uniform speeds ( i.e. , @xmath21 ) , it is not difficult to see that placing the agents uniformly around the circle and letting them move in the same direction yields the shortest idle time .",
    "indeed , the idle time in this case is @xmath22 , matching the lower bound mentioned earlier .    for the variant in which all agents are _ required _ to move in the same direction along a circle of unit length ( say clockwise ) , czyzowicz  et  al .",
    "* conjecture  2 ) conjectured that the following algorithm @xmath2 always yields an optimal schedule .",
    "label the agents so that @xmath23 .",
    "let @xmath24 , @xmath25 , be an index such that @xmath26 .",
    "place the agents at equal distances of @xmath27 around the circle , so that each moves clockwise at the same speed @xmath28 .",
    "discard the remaining agents , if any .",
    "since all agents move in the same direction , we also refer to @xmath2 as the `` runners '' algorithm .",
    "it achieves an idle time of @xmath29  ( * ? ? ?",
    "* theorem  2 ) . observe that @xmath2 is also universal .",
    "[ [ historical - perspective . ] ] historical perspective .",
    "+ + + + + + + + + + + + + + + + + + + + + + +    multi - agent patrolling is a variation of the fundamental problem of multi - robot coverage  @xcite , studied extensively in the robotics community .",
    "a variety of models has been considered for patrolling , including deterministic and randomized , as well as centralized and distributed strategies , under various objectives  @xcite .",
    "_ idleness _ , as a measure of efficiency for a patrolling strategy , was introduced by machado  et  al .",
    "@xcite in a graph setting ; see also the article by chevaleyre  @xcite .    the closed fence patrolling problem is reminiscent of the classical _ lonely runners conjecture _ , introduced by wills  @xcite and cusick  @xcite , independently , in number theory and discrete geometry .",
    "assume that @xmath0 agents run clockwise along a circle of length @xmath30 , starting from the same point at time @xmath31 .",
    "they have distinct but constant speeds ( the speeds can not vary , unlike in the model considered in this paper ) .",
    "a runner is called _ lonely _ when he / she is at distance of at least @xmath32 from any other runner ( along the circle ) .",
    "the conjecture asserts that each runner @xmath7 is lonely at some time @xmath33 .",
    "the conjecture has only been confirmed for up to @xmath34 runners  @xcite .",
    "[ [ notation - and - terminology . ] ] notation and terminology .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + +    a _ unit _ circle is a circle of unit length .",
    "we parameterize a line segment and a circle of length @xmath8 by the interval @xmath35 $ ] .",
    "a _ schedule _ of @xmath0 agents consists of @xmath0 functions @xmath36 \\rightarrow [ 0,\\ell]$ ] , for @xmath37 , where @xmath38 is the position of agent @xmath6 at time @xmath39 .",
    "each function @xmath40 is continuous ( for a closed fence , the endpoints of the interval @xmath35 $ ] are identified ) , it is piecewise differentiable , and its derivative ( speed ) is bounded by @xmath41 .",
    "a schedule is called _ periodic _ with _ period",
    "_ @xmath42 if @xmath43 for all @xmath37 and @xmath44 . the _",
    "idle time _",
    "@xmath10 of a schedule is the length of the maximum ( open ) time interval @xmath45 such that there is a point @xmath46 $ ] where @xmath47 for all @xmath37 and @xmath48 . for a given fence ( closed or open ) of length @xmath8 and",
    "given maximum speeds @xmath1 , @xmath49 denotes the idle time of a schedule produced by algorithm @xmath19 .",
    "we use _ position - time diagrams _ to plot the agent trajectories with respect to time .",
    "one axis represents the position @xmath38 of the agents along the fence and the other axis represents time . in fig .",
    "[ fig : dtd ] , for instance , the horizontal axis represents the position of the agents along the fence and the vertical axis represents time . in fig .",
    "[ fig : circle ] , however , the vertical axis represents the position and the vertical axis represents time . a schedule with idle time @xmath10 is equivalent to a covering problem in such a diagram ( see fig .",
    "[ fig : dtd ] ) . for a straight - line ( i.e. , constant speed ) trajectory between points @xmath50 and @xmath51 in the diagram , construct a shaded parallelogram with vertices , @xmath50 , @xmath52 , @xmath51 , @xmath53 , where @xmath10 denotes the desired idle time and the shaded region represents the covered region . in particular , if an agent stays put in a time - interval , the parallelogram degenerates to a vertical segment .",
    "a schedule for the agents ensures idle time @xmath10 if and only if the entire area of the diagram in the time interval @xmath54 is covered .",
    "to evaluate the efficiency of a patrolling algorithm @xmath19 , we use the ratio @xmath55 between the idle times of @xmath19 and the partition - based algorithm @xmath12 .",
    "lower values of @xmath56 indicate better ( more efficient ) algorithms .",
    "recall however that certain algorithms can only be executed with certain speed settings or number of agents .",
    "we write @xmath57 for the @xmath58th _ harmonic number_.     from @xmath59 to @xmath60 , waiting at @xmath60 for time @xmath61 and then moving from @xmath60 to @xmath62 with speed @xmath63.,scaledwidth=25.0% ]    [ [ our - results . ] ] our results .",
    "+ + + + + + + + + + + +    1 .",
    "consider the unidirectional unit circle ( where all agents are required to move in the same direction ) .",
    "+ \\(i ) we disprove a conjecture by czyzowicz  et  al .",
    "* conjecture  2 ) regarding the optimality of algorithm  @xmath2 . specifically",
    ", we construct a schedule for @xmath64 agents with harmonic speeds @xmath65 , @xmath66 , that has an idle time strictly less than @xmath30 .",
    "in contrast , algorithm  @xmath2 yields a unit idle time for harmonic speeds ( @xmath67 ) , hence it is suboptimal",
    ". see theorem  [ thm : counter ] , section  [ sec : uni ] .",
    "+ \\(ii ) for every @xmath68 $ ] and @xmath69 , there exists a positive integer @xmath70 and a schedule for the system of @xmath0 agents with harmonic speeds @xmath65 , @xmath4 , that ensures an idle time at most @xmath71 during the time interval @xmath72 $ ]",
    ". see theorem  [ thm : tau ] , section  [ sec : uni ] .",
    "2 .   consider the open fence patrolling .",
    "for every integer @xmath73 , there exist @xmath74 agents with @xmath75 and a guarding schedule for a segment of length @xmath76 .",
    "alternatively , for every integer @xmath73 there exist @xmath74 agents with suitable speeds @xmath1 , and a guarding schedule for a unit segment that achieves idle time at most @xmath77 .",
    "in particular , for every @xmath78 , there exist @xmath0 agents with suitable speeds @xmath1 , and a guarding schedule for a unit segment that achieves idle time at most @xmath79 .",
    "this improves the previous bound of @xmath80 by kawamura and kobayashi  @xcite .",
    "see theorem  [ thm:24/25 ] , section  [ sec:24/25 ] .",
    "3 .   consider the bidirectional unit circle .",
    "+ \\(i ) for every @xmath81 , there exist maximum speeds @xmath82 and a new patrolling algorithm @xmath20 that yields an idle time better than that achieved by both @xmath12 and @xmath2 .",
    "in particular , for large @xmath0 , the idle time of @xmath20 with these speeds is about @xmath83 of that achieved by @xmath12 and @xmath2 .",
    "see proposition  [ prop:2/3 ] , section  [ sec:2/3 ] .",
    "+ \\(ii ) for every @xmath84 , there exist maximum speeds @xmath82 so that there exists an optimal schedule ( patrolling algorithm ) for the circle that does not use up to @xmath85 of the agents @xmath86 .",
    "in contrast , for a segment , any optimal schedule must use all agents . see proposition  [ prop : useless ] , section  [ sec:2/3 ] .",
    "+ \\(iii ) there exist settings in which if all @xmath0 agents are used by a patrolling algorithm , then some agent(s ) need overtake ( pass ) other agent(s ) .",
    "this partially answers a question left open by czyzowicz  et  al .",
    "* section  3 ) .",
    "see the remark at the end of section  [ sec:2/3 ] .",
    "[ [ a - counterexample - for - the - optimality - of - algorithm - a_2 . ] ] a counterexample for the optimality of algorithm @xmath2 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we show that algorithm  @xmath2 by czyzowicz  et  al .",
    "@xcite for unidirectional circle patrolling is not always optimal .",
    "we consider agents with _ harmonic speeds _",
    "@xmath65 , @xmath87 .",
    "obviously , for this setting we have @xmath88 , which is already achieved by the agent @xmath89 with the highest ( here unit ) speed .",
    "we design a periodic schedule ( patrolling algorithm ) for @xmath90 agents with idle time @xmath91 . in this schedule , agent @xmath89 moves continuously with unit speed , and it remains to schedule agents @xmath92 such that every point is visited at least one more time in the unit length open time interval between two consecutive visits of @xmath89 . we start with a weaker claim , for _ closed _ intervals but using only @xmath17 agents .",
    "[ lem : counter ] consider the unit circle , where all agents are required to move in the same direction . for k=6 agents of harmonic speeds @xmath65 , @xmath93 ,",
    "there is a schedule where agent @xmath89 moves continuously with speed @xmath30 , and every point on the circle is visited by some other agent in every closed unit length time interval between two consecutive visits of @xmath89 .",
    "agents of speeds @xmath94 , @xmath95 , on a unit circle with period @xmath96 .",
    "agent @xmath89 moves continuously with speed @xmath30 .",
    "each point is visited by one of the agents @xmath97 between any two consecutive visits of agent @xmath89.,scaledwidth=98.0% ]    our proof is constructive .",
    "we construct a periodic schedule for the @xmath17 agents with period @xmath96 ; refer to fig .",
    "[ fig : circle ] .",
    "agents @xmath89 , @xmath98 and @xmath99 continuously move with maximum speed , while agents @xmath100 , @xmath101 and @xmath102 each stop at certain times in their movements .",
    "their schedule in one period @xmath103 $ ] is given by the following piecewise linear functions .",
    "@xmath104 @xmath105\\cup [ 7.5,8]\\\\ 0.5            &   \\mbox{\\rm for } t\\in [ 2.5,3.5]\\cup [ 6.5,7.5]\\\\ ( t-2)/3 \\mod 1 & \\mbox{\\rm for } t\\in [ 3.5,6.5]\\\\ t/3 \\mod 1 & \\mbox{\\rm for } t\\in [ 7.5,8 ] .",
    "\\end{array}\\right.\\ ] ] @xmath106\\\\ ( t-2)/5 \\mod 1 & \\mbox{\\rm for } t\\in [ 2,4.5]\\\\ 0.5             &   \\mbox{\\rm for } t\\in [ 4.5,5.5]\\\\ ( t-3)/5 \\mod 1 &   \\mbox{\\rm for } t\\in [ 5.5,8 ] . \\end{array}\\right.\\",
    "] ] @xmath107\\\\ 0.5             &   \\mbox{\\rm for } t\\in [ 0.5,1.5]\\\\ ( t-4.5)/6 \\mod 1 &   \\mbox{\\rm for } t\\in [ 1.5,4.5]\\\\ 1             &   \\mbox{\\rm for } t\\in [ 4.5,5.5]\\\\ ( t-5.5)/6 \\mod 1 &   \\mbox{\\rm for } t\\in [ 5.5,8 ] .",
    "\\end{array}\\right.\\ ] ]    [ thm : counter ] consider the unit circle , where all agents are required to move in the same direction . for @xmath64 agents of harmonic speeds @xmath65 , @xmath108 ,",
    "there is a periodic schedule with idle time strictly less than @xmath30 .",
    "agents @xmath109 follow the periodic schedule described in lemma  [ lem : counter ] .",
    "a time - position pair @xmath110 is a _",
    "critical point _ in the time - position diagram if point @xmath111 on the fence is _ not _ traversed by any agent in the open time interval @xmath112 .",
    "there are exactly @xmath113 critical points in the schedule in fig .",
    "[ fig : circle ] .",
    "specifically , these points are @xmath114 for @xmath115 ; and @xmath116 for @xmath117 .    for each critical point @xmath118",
    ", we assign one , two , or four agents such that they jointly traverse a small neighborhood of the critical point in each period in the periodic schedule .",
    "we schedule agents @xmath119 and @xmath120 to move continuously with speed @xmath121 , as follows .",
    "@xmath122 agent @xmath119 traverses the unit intervals of the critical points @xmath123 and @xmath124 ; and agent @xmath120 traverses the unit intervals of the critical points @xmath125 and @xmath126 .",
    "we are left with @xmath96 critical points , which will be taken care of by agents @xmath127 .",
    "agents @xmath128 are scheduled to move with constant speed @xmath129 .",
    "these @xmath96 agents form @xmath130 pairs , where each pair is responsible to visit the neighborhood of a critical point in each period of length @xmath96 ( each agent in a pair returns to the same critical point after @xmath131 units of time ) .",
    "finally , agents @xmath132 move with constant speed @xmath133 .",
    "these @xmath131 agents form 4 quadruples , where each quadruple is responsible to visit the neighborhood of a critical point in each period of @xmath96 ( each agent in a quadruple returns after @xmath64 units of time ) .",
    "this schedule ensures that every point on the fence within a small neighborhood of the @xmath113 critical points is visited by some agent within every time interval of length @xmath134 , where @xmath78 is a sufficiently small constant .",
    "apart from these neighborhoods , the first @xmath17 agents already visit every point within every time interval of length @xmath134 if @xmath78 is sufficiently small .",
    "[ [ remark . ] ] remark .",
    "+ + + + + + +    in theorem  [ thm : counter ] , we required that all agents move in the same direction ( clockwise ) along the unit circle , but we allowed agents to stop ( i.e. , have zero speed ) . if all agents are required to maintain a _ strictly _ positive speed , the proof of theorem  [ thm : counter ] would still go through : in this case , agents @xmath100 , @xmath101 and @xmath102 could move at an extremely slow but positive speed instead of stopping . as a result",
    ", some points at the neighborhoods of the @xmath113 critical points would remain unvisited for 1 unit of time ( this frequency is maintained by agent @xmath89 alone ) .",
    "however , agents @xmath135 would still ensure that every point in these neighborhoods is also visited within every time interval of length @xmath134 .    [ [ finite - time - patrolling . ] ] finite time patrolling .",
    "+ + + + + + + + + + + + + + + + + + + + + + +    interestingly enough , we can achieve any prescribed idle time below @xmath30 for an arbitrarily long time in this setting , provided we choose the number of agents @xmath0 large enough .",
    "[ thm : tau ] consider the unit circle , where all agents are required to move in the same direction .",
    "for every @xmath136 and @xmath69 , there exists @xmath70 and a schedule for the system of @xmath0 agents with maximum speeds @xmath65 , @xmath4 , that ensures an idle time @xmath137 during the time interval @xmath72 $ ] .",
    "we construct a schedule with an idle time at most @xmath71 .",
    "let agent @xmath89 start at time @xmath138 and move clockwise at maximum ( unit ) speed , i.e. , @xmath139 denotes the position on the unit circle of agent @xmath89 at time @xmath39 . assume without loss of generality that @xmath39 is a multiple of @xmath71 , i.e. , @xmath140 , where @xmath141 is a natural number .",
    "divide the time interval @xmath72 $ ] into @xmath142 subintervals of length @xmath143 . for @xmath144 ,",
    "@xmath145 $ ] is the @xmath146th interval .    for each @xmath146 , cover the unit circle @xmath62 so that every point of @xmath62 is visited at least once by some agent .",
    "this ensures that each point of the circle is visited at least once in the time interval @xmath147 $ ] and no two consecutive visits to any one point are separated in time by more than @xmath71 thereafter until time @xmath39 , as required .    to achieve the covering condition in each interval @xmath146",
    ", we use the first agent ( @xmath89 , of unit speed ) , and as many other unused agents as needed .",
    "the ` origin ' on @xmath62 is reset to the current position of @xmath89 at time @xmath148 , i.e. , the beginning of the current time interval .",
    "so the fastest agent is used ( continuously ) in all @xmath142 time intervals .",
    "agent @xmath89 can cover a distance of @xmath143 during one interval . from its endpoint , at time @xmath148 ,",
    "start the unused agent with the smallest index , say @xmath149 ; this agent can cover a distance of @xmath150 during the interval .",
    "continue in the same way using new agents , all starting at time @xmath148 , until the entire circle @xmath62 is covered ; let the index of the last agent used be @xmath151 .",
    "the covering condition can be written as : @xmath152 for example , if @xmath153 : @xmath154 requires agents @xmath89 through @xmath155 , since @xmath156 , but @xmath157 ; @xmath158 requires agents @xmath89 and agents @xmath159 through @xmath160 , since @xmath161 , but @xmath162 .",
    "we now bound from above the total number @xmath0 of distinct agents used i.e. , with speeds @xmath94 , for @xmath4 .",
    "observe that the covering condition   may lead to overshooting the target . because the harmonic series has decreasing terms , the overshooting error can not exceed the term @xmath163 for @xmath164 , namely @xmath165 ( the overshooting for @xmath164 is only @xmath166 ) .",
    "so inequality   becomes @xmath167 recall that @xmath168 . by adding inequality   over all @xmath142 time intervals yields ( in equivalent forms ) @xmath169 for @xmath69 we have @xmath170 .",
    "since @xmath171 , it follows from   that @xmath172 as required .",
    "[ [ a - new - schedule - for - closed - fence - patrolling . ] ] a new schedule for closed fence patrolling .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    czyzowicz  et  al .",
    "* theorem 5 ) showed that for @xmath173 there exist maximum speeds @xmath174 and a schedule that achieves a shorter idle time than both algorithm @xmath12 and @xmath2 , namely @xmath175 versus @xmath176 and @xmath30 .",
    "we extend this result for all @xmath81 .",
    "we propose a new algorithm , @xmath20 for maximum speeds @xmath23 , and then show that @xmath20 outperforms both @xmath12 and @xmath2 for some speed settings for all @xmath177 .",
    "we will need @xmath178 in this algorithm .",
    "place the @xmath85 agents @xmath86 at equal distances , @xmath111 on the unit circle , and let them move all clockwise perpetually at the same speed @xmath179 ; we say that @xmath86 make a `` train '' .",
    "let @xmath89 move back and forth ( i.e. , clockwise and counterclockwise ) perpetually on the moving arc of length @xmath180 , i.e. , between the start and the end of the train .",
    "refer to fig .",
    "[ fig : train ] .     moving unidirectionally with speed @xmath179 and the bidirectional agent @xmath89 with speed @xmath181 . ]",
    "[ prop:2/3 ] for every @xmath81 , there exist maximum speeds @xmath182 such that algorithm @xmath20 achieves a shorter idle time than @xmath12 and @xmath2 .",
    "in particular , for large @xmath0 , the idle time achieved by the train algorithm is about @xmath83 of those achieved by @xmath12 and @xmath2 .",
    "consider the speed setting @xmath183 , @xmath184 , where @xmath185 , and @xmath186 ( i.e. , @xmath187 ) .",
    "put @xmath188 . to determine the idle time , @xmath189 , write : @xmath190 \\left(\\frac{1}{a - b } + \\frac{1}{a+b } \\right ) = \\frac{x}{b } , \\textup { or equivalently ,   } \\frac{2ay}{a^2-b^2 } = \\frac{1-y}{(k-2)b}.\\ ] ] solving for @xmath189 yields @xmath191 for our speed setting , we also have @xmath192 write @xmath193 .",
    "it can be checked that for @xmath81 , @xmath194 and @xmath195 when @xmath196 , i.e. , @xmath197 . in particular , for @xmath198 , and @xmath199 ( note that @xmath187 ) , we have @xmath200 while @xmath201    [ [ useless - agents - for - circle - patrolling . ] ] useless agents for circle patrolling .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    czyzowicz  et  al .",
    "@xcite showed that for @xmath202 there are maximum speeds for which an optimal schedule does not use one of the agents . here",
    "we extend this result for all @xmath84 :    [ prop : useless ] ( i ) for every @xmath84 , there exist maximum speeds @xmath23 and an optimal schedule for the circle with these speeds that does not use up to @xmath85 of the agents @xmath86 .",
    "\\(ii ) in contrast , for a segment , any optimal schedule must use all agents .",
    "\\(i ) let @xmath203 and @xmath204 , for a small positive @xmath205 , and @xmath62 be a unit circle . obviously by using agent @xmath89 alone ( moving perpetually clockwise ) we can achieve unit idle time .",
    "assume for contradiction that there exists a schedule achieving an idle time less than @xmath30 .",
    "let @xmath139 denote the position of agent @xmath89 at time @xmath39 .",
    "assume without loss of generality that @xmath206 and consider the time interval @xmath207 $ ] . for @xmath208 ,",
    "let @xmath209 be the interval of points visited by agent @xmath7 during the time interval @xmath207 $ ] , and put @xmath210 .",
    "we have @xmath211 , thus @xmath212 .",
    "we make the following observations :    1 .   @xmath213 $ ] .",
    "indeed , if @xmath214 $ ] , then either some point in @xmath215 $ ] is not visited by any agent during the time interval @xmath216 $ ] , or some point in @xmath217 $ ] is not visited by any agent during the time interval @xmath216 $ ] .",
    "@xmath89 has done almost a complete ( say , clockwise ) rotation along @xmath62 during the time interval @xmath216 $ ] , i.e. , it starts at @xmath218 $ ] and ends in @xmath215 $ ] , otherwise some point in @xmath217 $ ] is not visited during the time interval @xmath216 $ ] .",
    "3 .   @xmath219 $ ] , by a similar argument .",
    "@xmath89 has done almost a complete rotation along @xmath62 during the time interval @xmath220 $ ] , i.e. , it starts in @xmath215 $ ] and ends in @xmath221 $ ] .",
    "moreover this rotation must be in the same clockwise sense as the previous one , since otherwise there would exist points not visited for at least one unit of time .",
    "pick three points @xmath222 close to @xmath223 , @xmath224 , and @xmath225 , respectively , i.e. , @xmath226 , for @xmath227 . by observations 2 and 4 ,",
    "these three points must be visited by @xmath89 in the first two rotations during the time interval @xmath207 $ ] in the order @xmath228 . since @xmath89 has unit speed , successive visits to @xmath229",
    "are separated in time by at least one time unit , contradicting the assumption that the idle time of the schedule is less than @xmath30 .",
    "\\(ii ) given @xmath230 , assume for contradiction that there is an optimal guarding schedule with unit idle time for a segment @xmath63 of maximum length that does not use agent @xmath231 ( with maximum speed @xmath232 ) , for some @xmath233 .",
    "extend @xmath63 at one end by a subsegment of length @xmath234 and assign @xmath231 to this subsegment to move back and forth from one end to the other , perpetually .",
    "we now have a guarding schedule with unit idle time for a segment longer than @xmath63 , which is a contradiction .    [",
    "[ overtaking - other - agents . ] ] overtaking other agents .",
    "+ + + + + + + + + + + + + + + + + + + + + + + +    consider an optimal schedule for circle patrolling ( with unit idle time ) for the agents in the proof of proposition  [ prop : useless ] , with @xmath203 and @xmath204 , in which all agents move clockwise at their maximum speeds .",
    "obviously @xmath89 will overtake all other agents during the time interval @xmath207 $ ] . thus there",
    "exist settings in which if all @xmath0 agents are used by a patrolling algorithm , then some agent(s ) need to overtake ( pass ) other agent(s ) .",
    "observe however that overtaking can be easily avoided in this setting by not making use of any of the agents @xmath86 .",
    "kawamura and kobayashi  @xcite showed that algorithm @xmath12 by czyzowicz  et  al .",
    "@xcite does not always produce an optimal schedule for open fence patrolling .",
    "they presented two counterexamples : their first example uses @xmath17 agents and achieves an idle time of @xmath235 ; their second example uses @xmath236 agents and achieves an idle time of @xmath237 . by replicating the strategy from the second example with a number of agents larger than @xmath236 , i.e. , iteratively using blocks of agents , we improve the ratio to @xmath238 for any @xmath78 . we need two technical lemmas to verify this claim .",
    "[ lem:1 ] consider a segment of length @xmath242 such that three agents @xmath243 are patrolling perpetually each with speed of @xmath240 and generating an alternating sequence of uncovered triangles @xmath244 , as shown in the position - time diagram in fig .",
    "[ fig : lemmadiagram1 ] . denote the vertical distances between consecutive occurrences of @xmath245 and @xmath246 by @xmath247 and between consecutive occurrences of @xmath246 and @xmath245 by @xmath248 .",
    "denote the bases of @xmath245 and @xmath246 by @xmath249 and @xmath250 respectively , and the heights of @xmath245 and @xmath246 by @xmath251 and @xmath252 respectively .",
    "then      \\(i ) observe that @xmath89 , @xmath98 and @xmath100 reach the left endpoint of the segment at times @xmath257 , @xmath258 , and @xmath259 , respectively . during the time interval",
    "@xmath260 $ ] , each agent traverses the distance @xmath261 and the positions and directions of the agents at time @xmath262 are the same as those at time @xmath31 .",
    "hence @xmath263 is a period for their schedule .",
    "\\(ii ) since @xmath264 and @xmath265 , we have @xmath266 .",
    "since @xmath267 is the midpoint of @xmath268 , we have @xmath269 , thus @xmath270 .",
    "since all the agents have same speed , @xmath240 , all the trajectory line segments in the position - time diagram have the same slope , @xmath165 .",
    "hence @xmath271 .",
    "thus , @xmath245 is similar to @xmath246 . since @xmath266 , @xmath245 is congruent to @xmath246 , and consequently @xmath272 .",
    "put @xmath273 , @xmath274 , and @xmath275 .",
    "recall from ( i ) that @xmath276 . by construction",
    ", we have @xmath277 , thus @xmath278 .",
    "we also have @xmath279 , thus @xmath280 .",
    "since @xmath267 is the midpoint of @xmath268 , we have @xmath281 , thus @xmath282 .",
    "let @xmath283 denote the @xmath111-coordinate of point @xmath284 ; then @xmath285 . to compute @xmath283 we compute the intersection of the two segments @xmath286 and @xmath287 .",
    "we have @xmath288 , @xmath289 , @xmath290 , and @xmath291 .",
    "the equations of @xmath286 and @xmath287 are @xmath286  :  @xmath292 and @xmath287  :  @xmath293 , and solving for @xmath111 yields @xmath294 , and consequently @xmath295 .        [ lem:2 ] ( i )",
    "let @xmath297 be the speed of an agent needed to cover an uncovered isosceles triangle @xmath298 ; refer to fig .",
    "[ fig : lemmadiagram2 ]  ( left )",
    ". then @xmath299 , where @xmath300 and @xmath301 are the base and height of @xmath298 , respectively .",
    "\\(ii ) let @xmath302 be the speed of an agent needed to cover an alternate sequence of congruent isosceles triangles @xmath296 with bases on same vertical line ; refer to fig .",
    "[ fig : lemmadiagram2 ]  ( right ) .",
    "then @xmath303 where @xmath304 is the vertical distance between the triangles , @xmath300 is the base and @xmath301 is the height of the congruent triangles .",
    "blocks ; each block has three agents with speed @xmath240 . middle : six agents with speed @xmath30 . bottom : patrolling strategy for @xmath240 blocks using @xmath313 agents for two time periods ( starting at @xmath314 relative to fig .  [",
    "fig : lemmadiagram1 ] ) ; the block length is @xmath239 and the time period is @xmath263.,title=\"fig : \" ]   blocks ; each block has three agents with speed @xmath240 .",
    "middle : six agents with speed @xmath30 . bottom : patrolling strategy for @xmath240 blocks using @xmath313 agents for two time periods ( starting at @xmath314 relative to fig .",
    "[ fig : lemmadiagram1 ] ) ; the block length is @xmath239 and the time period is @xmath263.,title=\"fig : \" ]    [ thm:24/25 ] for every integer @xmath73 , there exist @xmath74 agents with @xmath75 and a guarding schedule for a segment of length @xmath76 .",
    "alternatively , for every integer @xmath73 there exist @xmath74 agents with suitable speeds @xmath1 , and a guarding schedule for a unit segment that achieves idle time at most @xmath77 .",
    "in particular , for every @xmath78 , there exist @xmath0 agents with suitable speeds @xmath1 , and a guarding schedule for a unit segment that achieves idle time at most @xmath79 .",
    "refer to fig .",
    "[ fig:24/25 ] .",
    "we use a long fence divided into @xmath111 blocks ; each block is of length @xmath239 .",
    "each block has 3 agents each of speed 5 running in zig - zag fashion .",
    "consecutive blocks share one agent of speed @xmath30 which covers the uncovered triangles from the trajectories of the zig - zag agents in the position - time diagram . the first and the last block use two agents of speed @xmath30",
    "not shared by any other block .",
    "the setting of these speeds is explained below .    from lemma  [ lem:1](ii ) , we conclude that all the uncovered triangles generated by the agents of speed 5 are congruent and their base is @xmath315 and their height is @xmath316 . by lemma  [ lem:2](i ) , we can set the speeds of the agents not shared by consecutive blocks to @xmath317 . also , in our strategy , lemma  [ lem:1](ii ) yields @xmath318 .",
    "hence , by lemma  [ lem:2](ii ) , we can set the speeds of the agents shared by consecutive blocks to @xmath319 .    in our strategy",
    ", we have 3 types of agents : agents running with speed  5 as in fig .  [ fig:24/25 ]  ( top ) ,",
    "unit speed agents not shared by 2 consecutive blocks and unit speed agents shared by two consecutive blocks as in fig .",
    "[ fig:24/25 ]  ( middle ) . by lemma  [ lem:1](i ) ,",
    "the agents of first type have period @xmath263 . in fig .  [ fig:24/25 ]  ( middle ) , there are two agents of second type and both have a similar trajectory .",
    "thus , it is enough to verify for the leftmost unit speed agent .",
    "it takes @xmath320 time from @xmath59 to @xmath60 and again @xmath320 time from @xmath60 to @xmath62 .",
    "next , it waits for @xmath321 time at @xmath62 .",
    "hence after @xmath322 time , its position and direction at @xmath323 is same as that at @xmath59 .",
    "hence , its time period is @xmath263 . for the agents of third type ,",
    "refer to fig .",
    "[ fig:24/25 ]  ( middle ) : it takes @xmath324 time from @xmath325 to @xmath326 and @xmath324 time from @xmath326 to @xmath327 .",
    "thus , arguing as above , its time period is @xmath263 .",
    "hence , overall , the time period of the strategy is @xmath263 .    for @xmath111 blocks",
    ", we use @xmath328 agents .",
    "the sum of all speeds is @xmath329 and the total fence length is @xmath330 .",
    "the resulting ratio is @xmath331 .",
    "for example , when @xmath332 we reobtain the bound of kawamura and kobayashi  @xcite ( from their 2nd example ) , when @xmath333 and further on , @xmath334 .",
    "thus an idle time of at most @xmath79 can be achieved for every given @xmath78 , as required .",
    "we sincerely thank akitoshi kawamura for generously sharing some technical details concerning their patrolling algorithms .",
    "we also express our satisfaction with the software package _",
    "jsxgraph , dynamic mathematics with javascript _ , used in our experiments .",
    "n.  agmon , s.  kraus , and g.  a. kaminka , multi - robot perimeter patrol in adversarial settings , in _ proc . international conference on robotics and automation ( icra 2008 ) _ , ieee , 2008 , pp .",
    "j. barajas and o. serra , the lonely runner with seven runners , _ electronic journal of combinatorics _ * 15 * ( 2008 ) , r48 .",
    "y. chevaleyre , theoretical analysis of the multi - agent patrolling problem , in _ proc .",
    "international conference on intelligent agent technology ( iat 2004 ) _ , ieee , 2004 , pp .",
    "h. choset , coverage for robotics  a survey of recent results , _ annals of mathematics and artificial intelligence _ * 31 * ( 2001 ) , 113126 .      j. czyzowicz , l. gasieniec , a. kosowski , and e. kranakis , boundary patrolling by mobile agents with distinct maximal speeds , in _ proc .",
    "19th european symposium on algorithms ( esa 2011 ) _ , lncs 6942 , springer , 2011 , pp .  701712 .",
    "y. elmaliach , n. agmon , and g. a. kaminka , multi - robot area patrol under frequency constraints , in _ proc .",
    "international conference on robotics and automation ( icra 2007 ) _ , ieee , 2007 , pp .",
    "a. kawamura and y. kobayashi , fence patrolling by mobile agents with distinct speeds , in _ proc .",
    "23rd international symposium on algorithms and computation ( isaac 2012 ) _ , lncs 7676 , springer , 2012 , pp .",
    "598608 .",
    "a.  machado , g.  ramalho , j.  d.  zucker , and a.  drogoul , multi - agent patrolling : an empirical analysis of alternative architectures , _",
    "3rd international workshop on multi - agent - based simulation _ , springer , 2002 , pp ."
  ],
  "abstract_text": [
    "<S> suppose that a fence needs to be protected ( perpetually ) by @xmath0 mobile agents with maximum speeds @xmath1 so that no point on the fence is left unattended for more than a given amount of time . </S>",
    "<S> the problem is to determine if this requirement can be met , and if so , to design a suitable patrolling schedule for the agents . </S>",
    "<S> alternatively , one would like to find a schedule that minimizes the _ idle time _ </S>",
    "<S> , that is , the longest time interval during which some point is not visited by any agent . </S>",
    "<S> we revisit this problem , introduced by czyzowicz et al .  </S>",
    "<S> ( 2011 ) , and discuss several strategies for the cases where the fence is an open and a closed curve , respectively .    </S>",
    "<S> in particular : ( i ) we disprove a conjecture by czyzowicz et al . regarding the optimality of their algorithm  @xmath2 for unidirectional patrolling of a closed fence ; ( ii ) we present an algorithm with a lower idle time for patrolling an open fence , improving an earlier result of kawamura and kobayashi .    </S>",
    "<S> * keywords * : mobile agents , fence patrolling , idle time , approximation algorithm . </S>"
  ]
}
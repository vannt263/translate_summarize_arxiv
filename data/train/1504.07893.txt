{
  "article_text": [
    "graph theory finds many applications in the representation and analysis of complex networked systems  @xcite . in most cases ,",
    "the utility of the graph abstraction comes from its inherent ability to represent binary transitive relations  ( i.e. transitive relations between two objects ) , which due to the transitivity property gives raise to key concepts , such as walks , paths , and connectivity .",
    "this graph conceptual framework allowed the emergence of basic algorithms , such as breadth first search  ( bfs ) and depth first search  ( dfs )  @xcite .",
    "these basic graph algorithms , in their turn , made possible the development of more sophisticated algorithms for the analysis of specific properties of complex networks , such as network centrality or network robustness  @xcite , and also the analysis of dynamic processes in complex networks , such as network generative processes or information diffusion  @xcite .",
    "several generalizations of the basic graph concept have been proposed for modelling complex systems that can be represented by layers of distinct networks  @xcite and also complex systems in which the network itself evolves with time  @xcite .    in our previous work  @xcite ,",
    "we formalize the multiaspect graph  ( mag ) structure , while also stating and proving its main properties .",
    "the adopted adjacency concept in mags is similar to the one found in simple directed graphs , where the adjacency is expressed between two vertices , leading to a structure in which an edge represents a binary relation between two composite objects .",
    "moreover , in  @xcite , we show that mags are closely related to simple directed graphs , as we prove that each mag has a simple directed graph , which is isomorphic to it .",
    "this isomorphism relation between mags and directed graphs is a consequence of the fact that both mags and directed graphs share a similar adjacency relation .",
    "mags find application in the representation and analysis of dynamic complex networks , such as multilayer or time - varying networks ; or even networks that are both multilayer and time - varying as well as higher - order networks  @xcite .",
    "examples of such networks include face - to - face in - person contact networks  @xcite , mobile phone networks  @xcite , gene regulatory networks  @xcite , urban transportation networks  @xcite , brain networks  @xcite , social networks  @xcite , among many others .",
    "in particular , we have previously applied the mag abstraction from  @xcite to different purposes , such as modeling time - varying graphs  @xcite , studying time centrality in dynamic complex networks  @xcite , and investigating social events based on mobile phone networks  @xcite . to illustrate the mag concept in more details in this paper ,",
    "we present in section  [ sec : alg_rep ] an example of modeling a simple illustrative multimodal urban transportation network .    in this paper",
    ", we build upon the basic mag properties presented in  @xcite and show that mags can be represented by matrices in a form similar to those used for simple directed graphs  ( i.e. , those with no multiple edges ) .",
    "moreover , we here show that any algorithm  ( function ) on a mag can be obtained from its matrix representation .",
    "this is an important theoretical result since it paves the way for adapting well - known graph algorithms for application in mags , thus easing the effort to develop the analysis and application of mags for modelling complex networked systems .",
    "we then present the most common matrix representations that can be applied to mags , although we do not detail all the properties of these matrices , since they are well established in the literature  @xcite .",
    "further , we introduce in detail the construction of mag algorithms for computing degree , bfs , and dfs to exemplify how mag algorithms can be derived from traditional graph algorithms , thus providing an illustrative guideline for developing other more sophisticated mag algorithms in a similar way . as a further contribution",
    ", we also make available python implementations of all the algorithms presented in this paper at the following url :  http://github.com/wehmuthklaus/mag_algorithms .",
    "this paper is organized as follows . section  [ sec : mag ] briefly presents the basic mag definitions and properties derived from  @xcite in order to allow enough background of the current paper .",
    "section  [ sec : mag ] also presents illustrative examples of mags and its adjacency notion .",
    "section  [ sec : alg_rep ] shows the representation of mags by means of algebraic structures , such as matrices .",
    "emphasis is given to matrix representations , which are derived from the isomorphism relation between mags and simple directed graphs . in particular , we also introduce in section  [ sec : comptuple ] the companion tuple , which is a complement to the mag matrix representations . in section",
    "[ sec : alg_algth ] , we present basic mag algorithms which are derived from well - known simple graph algorithms . further , in section  [ subsec : univ ] , we show that any algorithm ( function ) that can be defined for a mag can be also obtained from its adjacency matrix and companion tuple , establishing the theoretical basis for deriving mag algorithms from well - known simple graph algorithms .",
    "finally , section  [ sec : fin ] presents our final remarks and perspectives for future work .",
    "in this section , we present a formal definition of a mag , as well as some key properties , which are formally stated and proved in  @xcite .",
    "we define a mag as @xmath0 , where @xmath1 is a set of edges and @xmath2 is a finite list of _ aspects_. each aspect @xmath3 is a finite set , and the number of aspects @xmath4 is called the order of @xmath5 .",
    "each edge @xmath6 is a tuple with @xmath7 elements .",
    "all edges are constructed so that they are of the form @xmath8 , where @xmath9 are elements of the first aspect of @xmath5 , @xmath10 are elements of the second aspect of @xmath5 , and so on , until @xmath11 which are elements of the @xmath12-th aspect of @xmath5 .",
    "note that the ordered tuple that represents each mag edge is constructed so that their elements are divided into two distinct groups , each having exactly one element of each aspect , in the same order as the aspects are defined on the list @xmath2 .    as a matter of notation",
    ", we say that @xmath13 is the aspect list of @xmath5 and @xmath14 is the edge set of  @xmath5 .",
    "further , @xmath15 $ ] is the @xmath16-th aspect in @xmath13 , @xmath17| = \\tau_n$ ] is the number of elements in @xmath15 $ ] , and @xmath18 is the order of @xmath5 .",
    "in addition to the former definition , we define the following two sets constructed from the cartesian products of aspects of an order @xmath12 mag : @xmath19,\\ ] ] the cartesian product of all the aspects of the mag  @xmath5 , and @xmath20,\\ ] ] which is the set of all possible edges in the mag  @xmath5 , so that @xmath21 .",
    "we call @xmath22 a _ composite vertex _ of mag  @xmath5 . as a matter of notation ,",
    "a composite vertex is always represented as a bold lowercase letter , as in @xmath23 , for instance . from the properties stated for the mag edge in our definition",
    ", it follows that an mag edge is closely related to an ordered pair of composite vertices . for any given mag  @xmath5",
    ", every mag edge @xmath24 has the form @xmath8 , so that @xmath25 and @xmath26 are composite vertices of this given mag  @xmath5 . from this",
    ", we can define two functions @xmath27 and @xmath28 we call @xmath29 the origin composite vertex of @xmath30 and @xmath31 the destination composite vertex of @xmath30 .",
    "moreover , we can define the function @xmath32 from which we can construct a directed graph @xmath33 . in  @xcite",
    ", we demonstrate that the directed graph @xmath33 is isomorphic to the mag  @xmath5 from which it was originated . at this point",
    ", we can therefore define the function @xmath34 which maps every mag  @xmath5 to its isomorphic directed graph @xmath35 .",
    "further , we define the set of functions @xmath36 \\\\ ( a_1,a_2,\\dots , a_p ) & \\mapsto a_i , \\notag\\end{aligned}\\ ] ] which extracts the @xmath16-th element of a composite vertex tuple .      the sub - determination is a generalization of the aggregation concept applied to multilayer or time - varying graphs , in which all layers can be aggregated , resulting in a traditional graph .",
    "since a mag can have more than 2 aspects , the sub - determination can be done in more ways than the aggregation .",
    "a given mag @xmath5 of order @xmath12 , can be sub - determined in @xmath37 ways .",
    "for each of these @xmath37 ways , we have a list @xmath38 of the aspects used to determine an equivalence class .",
    "note that in a mag of order @xmath39 ( _ i.e. _ a traditional graph ) , a vertex can not be sub - determined , since @xmath40 .",
    "let @xmath41 , with @xmath42 , be an index for one of the possible ways to construct a proper nonempty sublist of aspects . from this , we can define a canonical representation of the sub - determination directly defined by @xmath41 . for any given @xmath41",
    ", we consider the @xmath12-bit binary expansion of @xmath41 that is used as an indicator showing which aspects of the original mag are present on the sub - determination .",
    "more specifically , the least significant bit indicates the presence or absence of the first aspect and the most significant bit indicates the presence or absence of the last aspect . by this convention ,",
    "in a mag with @xmath43 aspects , we have that @xmath44 corresponds to the sub - determination where only the first aspect is present , @xmath45 corresponds to the sub - determination where only the second aspect is present , @xmath46 corresponds to the sub - determination where both the first and the third aspects are present , and so on . by using this convention",
    ", we can directly associate a given @xmath41 to its corresponding aspect sublist .",
    "therefore , for each @xmath41 , we have a unique sublist @xmath47 of aspects , such that @xmath48 is the order of the sub - determination @xmath41 .",
    "we now define the set @xmath49,\\ ] ] where @xmath50 is the cartesian product of all the aspects in the sublist @xmath47 of aspects , according to the index @xmath41 .",
    "we call @xmath51 a sub - determined vertex , according to the sub - determination @xmath41",
    ".    we can now define the function @xmath52 where @xmath53 .",
    "@xmath54 maps a composite vertex @xmath22 to the corresponding sub - determined composite vertex @xmath51 , according to the sub - determination @xmath41 . as @xmath55 @xmath56 @xmath57",
    ", it follows that @xmath58 , \\dots , a_{\\zeta_m}\\in a_{\\zeta}(h)[m]$ ] . from the definition",
    ", it can be seen that the function @xmath54 is not injective .",
    "hence , the function @xmath54 for a given sub - determination can be used to define a equivalence relation @xmath59 in @xmath60 , where for any given composite vertices @xmath61 , we have that @xmath62 if and only if @xmath63 .      from the sub - determination @xmath41 of order @xmath64 , we can also construct the set @xmath65,\\ ] ] where @xmath66 is the order of the sub - determination @xmath41 , and @xmath67 is the set of all possible sub - determined edges according to @xmath41 .",
    "we then define the function @xmath68 where @xmath53 and @xmath69 , a_{\\zeta_2},2_{\\zeta_2 } \\in a_{\\zeta}(h)[2 ] , \\dots , a_{\\zeta_m},b_{\\zeta_m } \\in a_{\\zeta}(h)[m]$ ] .",
    "this function takes an edge to its sub - determined form according to @xmath41 in a similar way as defined above for composite vertices .",
    "in general , the function @xmath70 is not injective .",
    "consider two distinct edges @xmath71 , such that @xmath72 and @xmath73 differ only in aspects which are not in @xmath47 .",
    "since @xmath74 only contains values for aspects present in @xmath47 , it follows that @xmath75 , and therefore @xmath70 is not injective .",
    "further , consider an edge @xmath24 and its sub - determined edge @xmath76 , such that @xmath77 , _ i.e. _ @xmath78 is a self - loop .",
    "since self - loops are not allowed to be present on a mag , it follows that @xmath79 . as consequence",
    ", we have that @xmath80 .      for a given sub - determination @xmath41 we have the sublist @xmath47 of considered aspects and also the sub - determined edges obtained from @xmath41 .",
    "based on them , we can now obtain a sub - determined mag . for a given sub - determination @xmath41",
    "we define the function @xmath81 since @xmath47 is the sublist of aspects of @xmath5 prescribed by @xmath41 and @xmath82 is the set of all sub - determined edges according to the sub - determination @xmath41 , it follows that @xmath83 is a mag obtained from @xmath5 according to the sub - determination @xmath41 . as @xmath84 , it follows that the order of @xmath85 is lower than the order of @xmath5 .",
    "further , since self - loops may be created by edge sub - determination and discarded , and also since @xmath70 is not injective , it follows that @xmath80 .",
    "two composite vertices are considered adjacent if they share the same mag edge , i.e. given two composite vertices @xmath61 are adjacent if and only if there is a mag edge @xmath24 such that @xmath86 .",
    "similarly , two mag edges are considered adjacent if and only if they share a same composite vertex , i.e. two given edges @xmath87 are adjacent if and only if there is a composite vertex @xmath22 such that @xmath88 and @xmath89 .",
    "figure  [ fig : mag_edges ] shows an illustrative example of three mag edges .",
    "the figure depicts a four aspects mag , where each set of colored circles represents one aspect , and each edge has two elements of each aspect .",
    "the isolated edge @xmath90 on the leftmost side of figure  [ fig : mag_edges ] exemplifies the composite vertex adjacency concept . in this case",
    "the composite vertices @xmath91 and @xmath92 are adjacent .",
    "the two edges @xmath93 and @xmath94 exemplify a case of edge adjacency .",
    "since the composite vertex @xmath95 @xmath96 is shared by both edges , they are adjacent .",
    "although the structure of a mag edge is similar to an even uniform hypergraph edge , the adjacency definition used on mags is not the usual one adopted on hypergraphs .",
    "the adjacency concept found on a mag is close to the one associated with traditional directed graphs , where a mag edge can be seen as a relation between two composite vertices , which are composite objects constructed from aspect elements .",
    "therefore , a mag edge expresses a relationship between two ( composite ) objects in the same way as a directed graph edge .",
    "this concept leads to the isomorphism between mags and directed graphs , as well as the close relation between walks , trails , and paths on mags and directed graphs .      in order to define mag isomorphism",
    "it is necessary to define the concept an aspect list bijection .",
    "given two mags @xmath5 and @xmath97 , both with @xmath12 aspects , an aspect list bijection @xmath98 is defined as a set of @xmath12 bijective functions , @xmath99 , such that each aspect of the mag @xmath5 is the domain of exactly one of these functions and each aspect of mag @xmath97 is the codomain of exactly one of these functions .",
    "it follows from this definition that given a composite vertex @xmath22 , the aspect list bijection @xmath100 takes @xmath23 to a composite vertex @xmath101 .",
    "two mags of order @xmath12 , @xmath5 and @xmath97 , are isomorphic if there is an aspect list bijection @xmath98 such that an edge @xmath24 if and only if the edge @xmath102 .",
    "there is a close relation between walks , trails , and paths on a mag and their counterparts in the isomorphic directed graph @xmath35 .",
    "a walk on a mag  @xmath5 is defined as an alternating sequence @xmath103 @xmath104 $ ] of composite vertices @xmath105 and edges @xmath106 , such that @xmath107 and @xmath108 for @xmath109 .",
    "it follows from this definition that in a walk , consecutive composite vertices as well as consecutive mag edges are adjacent .",
    "we show in @xcite that an alternating sequence @xmath110 of composite vertices and edges in a mag  @xmath5 is a walk on @xmath5 if and only if there is a corresponding walk @xmath111 in the composite vertices representation of  @xmath5 .",
    "this means that a walk on a mag  @xmath5 has a isomorphic walk on the directed graph @xmath35 .",
    "since trails and paths also are walks , we also show that the same isomorphism concept extends to them as well .",
    "figure  [ fig : mag_edges ] can also exemplify a mag path .",
    "the two edges @xmath112 @xmath113 and @xmath95 @xmath114 can also be seen as part of the alternating sequence @xmath115 @xmath116 , which characterizes a two - hops path from the composite vertex @xmath117 to the composite vertex @xmath118 .",
    "from the concept that walks , trails , and paths on a mag have a isomorphism relation to their counterparts on the directed graph @xmath35 , it follows that analysis and algorithms based on walks , trails , and paths can be formulated on the directed graph @xmath35 .",
    "these properties will be extensively used in the current work .",
    "in this section , we discuss ways to represent mags  @xcite by means of algebraic structures . as a consequence to the isomorphism between mags and traditional directed graphs , it is straightforward to construct matrix - based representations of mags .",
    "this section addresses these representations , using the mag depicted in figure  [ fig : mag_ex1 ] as an illustrative example .     of a simple urban transit system.,scaledwidth=75.0% ]",
    "figure  [ fig : mag_ex1 ] shows an example of a three aspect mag  @xmath119 .",
    "it can be seen as the representation of a time - varying multilayer network , showing a small and simplified section of an urban transit system .",
    "more specifically , figure  [ fig : mag_ex1 ] depicts the mag  @xmath119 in its composite vertices representation , @xmath120 , which is the directed graph defined in expression  ( [ func : iso ] ) .    aligned with this view , the aspects of mag  @xmath119 can be interpreted in the following way : the first aspect represents three distinct locations , labeled 1 , 2 and  3 .",
    "specifically , location 1 represents a subway station , location 2 a subway station with a bus stop , and location 3 a bus stop .",
    "the second aspect represents two distinct urban transit modes depicted as layers , namely bus and subway . finally , the third aspect represents three time instants .",
    "the mag edges can be seen with the following meaning : location 1 has no edges on the bus transit mode , since it is a subway station .",
    "similarly , location 3 has no edges on the subway mode , since it is a bus stop .",
    "the eight black edges represent bus and subway trips between locations . as a simplification",
    "all trips are assumed to have the same duration .",
    "the red ( dotted ) edges represent the possibility of staying at a bus stop or subway station and not taking a transit .",
    "the six blue ( dashed ) edges show that it is possible to change between bus and subway layers at all times at location  2 . as a simplification",
    ", the connection between the bus and subway layers is assumed to take no time .",
    "we recognize that the decision of making these edges with @xmath121 time length generates cycles of length @xmath121 in instances of location  @xmath122 . in real network analysis ,",
    "@xmath121 length cycles ( and also negative length cycles ) can cause problems .",
    "however , we choose to let these cycles present in this toy example since they will cause no harm for the analysis conducted in this thesis , and also , they make the toy example more compact and readable .",
    "further , we remark that if desired , these @xmath121 length cycles could be broken by adding new composite vertices , or by making the subway / bus transition to have the same length as a subway / bus trip .    in this model ,",
    "walks represent the ways the urban transit system can be used to travel from one location to another .",
    "for instance , starting at location 1 on the subway layer at time t1 , it is possible to reach location 3 on the bus layer at time t3 .",
    "it can be done by taking a subway trip to location 2 at time t2 , switching from subway to bus layer at location 2 , time t2 and finally taking a bus trip from location 2 bus layer arriving at location 3 on the bus layer at time t3 .",
    "the presence of unconnected occurrences of location 1 at bus layer and location 3 at subway layer can be viewed as artefacts of the mag construction .",
    "we call these vertices trivial components of the mag . this subject will be further addressed in this section .",
    "we remark that a python implementation of all the algorithms presented in this section is available at the following url :  http://github.com/wehmuthklaus/mag_algorithms .",
    "although we show that every mag  @xmath5 is isomorphic to a directed graph designated @xmath35 , it is important to note that the set of vertices of this graph is @xmath60 , as shown in expression  ( [ func : iso ] ) .",
    "since the set @xmath60 is the cartesian product of all the aspects in the mag @xmath5 , it is possible to reconstruct the mag s aspect list from @xmath60 , which is a step necessary to obtain the mag @xmath5 from the directed graph @xmath35 .",
    "when the vertices of the directed graph @xmath123 associated with a given mag @xmath5 are not the composite vertices themselves , it is necessary to provide a mechanism to link each vertex of the directed graph to its corresponding composite vertex on the mag .",
    "this mechanism can be , for instance , a bijective function between @xmath60 and @xmath124 .    in the current work ,",
    "we construct representations for @xmath35 , such as matrices , which do not directly carry the tuples that characterize the mag s composite vertices . in this kind of representation ,",
    "a vertex is associated with a row or column of a matrix .",
    "therefore , additional information has to be provided in order to properly link each row ( column ) of a matrix to its corresponding composite vertex on the mag represented by this matrix .",
    "this is done by a bijective function @xmath125 , defined in section  [ sec : asp_vt_ord ] , where @xmath125 takes a composite vertex to a natural number , which is the row ( column ) number in the matrix .",
    "the implementation of @xmath125 presented in this work is based on the concept of a _ companion tuple _ , which complements the matrix representation of a given mag .",
    "for a mag  @xmath5 with @xmath12 aspects , its companion tuple has the form @xmath126|$ ] , @xmath127| , \\dots,$ ] @xmath128|)$ ] , so that the number of elements on it equals the order of @xmath5 and each element represents the number of elements of an aspect of @xmath5 . as a matter of notation",
    ", we represent the companion tuple of a given mag  @xmath5 as @xmath129| , |a(h)[2]| , \\dots , |a(h)[p]|),\\ ] ] where @xmath12 is the order of @xmath5 .",
    "when there is no ambiguity in relation to which mag we are referring to , we may use the notation @xmath130 instead of @xmath131 .",
    "for instance , the companion tuple of the mag @xmath119 shown in figure  [ fig : mag_ex1 ] is @xmath132 , since @xmath119 has @xmath133 aspects , of which the first has @xmath133 elements , the second @xmath122 elements , and the third @xmath133 elements .",
    "algorithm  [ alg : tau ] shows the building of the companion tuple for a given mag  @xmath5 . assuming that the size of the aspect list @xmath13 and the size of each of the aspect sets contained in @xmath13 are known from the computational representation of @xmath13 , the time complexity for building the companion tuple is @xmath134 , where @xmath12 is the number of aspects on mag  @xmath5 . if , however , these sizes are unknown , then the time complexity is @xmath135 , where @xmath136|$ ] , since each element of each aspect has to be counted .",
    "we remark that , in either case , the time complexity for building the companion tuple is less than @xmath137 , which is the order of the set of composite vertices of the mag .    for a given mag  @xmath5 and a sub - determination @xmath41",
    ", we also define the sub - determined companion tuple @xmath138 , which is obtained by multiplying each entry of the original companion tuple by the equivalent entry of the tuple representation of @xmath41 , as shown in algorithm  [ alg : tauzeta ] .",
    "the sub - determined companion tuple has the same value as the original companion tuple for the aspects that have value @xmath139 in @xmath41 and @xmath121 otherwise .      in general",
    ", the order of the composite vertices and aspects on a mag is not relevant . that is , changing the order in which the aspects or their elements are presented does not affect the result of any algorithm or analysis performed on a mag , since the mag obtained by such changes is isomorphic to the original one .",
    "the definition of the mag isomorphism adopted in this work can be found in section  [ subsec : magiso ] .",
    "however , in order to show the mag s algebraic representation in a consistent way , it is necessary to link the mag s composite vertices to rows and columns of matrices , which is achieved by the bijective function @xmath125 , defined in this section at equation  ( [ eq : cn_cv ] ) .",
    "we now show the preliminary steps necessary for the definition of function @xmath125 , as implemented in this work .",
    "the aspect order is adopted as the same in which the aspects are placed on the mag s companion tuple . for the ordering of composite vertices , we define the numerical representation of each composite vertex from its tuple . in order to obtain the composite vertex numerical representation , we first translate the composite vertex into a numerical tuple .",
    "this is done by applying a family of indices , one for each aspect on the composite vertex , where for every aspect @xmath140 the corresponding index ranges from @xmath121 to @xmath141 , where @xmath142 is the number of elements on the @xmath140-th aspect of the mag .",
    "since this is a simple index substitution , we do not use a distinct notation for the composite vertex on its numerical tuple form .",
    "we , however , reserve the notation @xmath143 $ ] to express the @xmath140-th element of the composite vertex on its numerical form .    to calculate the numerical representation of a composite vertex",
    ", we define the weight of each position on the composite vertex tuple of a mag  @xmath5 with @xmath12 aspects as @xmath144 where @xmath140 is the position in the tuple varying from @xmath139 to @xmath12 , @xmath130 is the mag s companion tuple , and @xmath145 is the @xmath146-th element of the mag s companion tuple .",
    "note that @xmath147 meaning that the length of the companion tuple is the order of the mag , i.e. the number of its aspects .",
    "finally , we define the composite vertex numerical representation as @xmath148,\\ ] ] where @xmath147 is the mag s order , and @xmath149 $ ] is the @xmath140-th component of the composite vertex .",
    "figure  [ fig : mag_ex1_ids ] shows the mag  @xmath119 with its composite vertices , and their numerical representations ranging from @xmath150 to @xmath151 . in order to illustrate how the numerical representations are obtained , we show examples based on the mag  @xmath119 .     with composite vertices numerical representations.,scaledwidth=75.0% ]    for this representation , we adopt aspect indices such that for aspect @xmath139 we have @xmath152 and @xmath153 . for aspect @xmath122",
    ", we have @xmath154 and @xmath155 , while for aspect @xmath133 , @xmath156 and @xmath157 .",
    "since the companion tuple of mag  @xmath119 is @xmath158 , the weights are @xmath159 , @xmath160 and @xmath161 . therefore , the composite vertex @xmath162 has numerical representation @xmath163 , while @xmath164 and @xmath165 .",
    "algorithm  [ alg : d ] determines the numerical representation of a composite vertex @xmath166 represented by its numerical tuple .",
    "the presented implementation extends the concepts presented in equations  ( [ eq : weight_cv ] )  and  ( [ eq : cn_cv ] ) , so that this algorithm can also be used to determine the numerical representation of sub - determined composite vertices . in order to determine the numerical representation of a sub - determined vertex , function @xmath125",
    "shown in algorithm  [ alg : d ] receives the full composite vertex tuple ( not sub - determined ) and the sub - determined companion tuple .",
    "the @xmath167 seen at line  @xmath168 of algorithm  [ alg : d ] makes that the @xmath121 entries found in a sub - determined companion tuple are discarded for the construction of the sub - determined numerical representation of the composite vertex .",
    "the time complexity for this algorithm is @xmath134 , where @xmath12 is the number of aspects on the mag in question .",
    "given the numerical representation of any composite vertex , it is possible to reconstruct its tuple . in order to do this",
    ", we calculate the numerical value of the index of each element on the tuple , as @xmath169 where @xmath170 is the composite numerical representation , @xmath140 is the position of the composite vertex tuple to be calculated , @xmath130 is the mag s companion tuple , @xmath171 is the modulus ( division remainder ) operation and @xmath172 is the floor operator , which for any @xmath173 corresponds to the largest integer @xmath174 such that @xmath175 . note that for calculating @xmath176 for a mag with @xmath12 aspects , it is necessary to calculate @xmath177 . considering the definition of @xmath110 from equation  ( [ eq : weight_cv ] ) , it follows that @xmath178 , the number of composite vertices on the mag .    for instance",
    ", taking the composite vertex with numerical representation @xmath179 of the mag  @xmath119 , we have that @xmath180 we can therefore define the inverse of function @xmath125 as @xmath181 which reconstructs the composite vertex tuple in its numerical form . from this , we can see that , for instance , @xmath182 , which corresponds to the composite vertex @xmath183 . algorithm  [ alg : invd ] shows the implementation of @xmath184 .",
    "the relation between the composite vertex numerical representation and its tuple can also be seen as a consequence of the natural isomorphism between the mag  @xmath5 and its composite vertices representation , @xmath35 .",
    "the role of this relation will become clear in sections  [ sec : adj_mat ] to  [ sec : lap_mats ] , where the matrix forms of the mag are presented .",
    "in the mag  @xmath119 shown in figure  [ fig : mag_ex1_ids ] the composite vertices of numerical representation @xmath185 and @xmath151 are trivial components ( i.e. unconnected composite vertices ) .",
    "they are created in consequence of the regularity needed on the mag @xmath5 to build the set @xmath60 .",
    "this type of padding is not necessary in a directed graph and its algebraic representation .",
    "therefore , it is possible to remove the trivial components from the composite vertices representation and its associated matrices .",
    "however , it is important to bear in mind that the graph resulting from this transformation may no longer be isomorphic to the mag and neither are the matrices associated with it .",
    "the only case in which the isomorphism is preserved is when there are no trivial components on the mag and nothing is removed .",
    "nevertheless , this kind of transformation can be helpful for application , by reducing the number of composite vertices present on the graph and so simplifying its construction and manipulation .",
    "the same sort of padding is discussed in  @xcite , where authors suggest that this padding may cause problems in the computing of some metrics , such as mean degree or clustering coefficients , unless one accounts for the padding scheme in an appropriate way . in this subsection , we show that the padding with the trivial components may be eliminated , if desired . anyway ,",
    "if needed , it suffices to be cautious in computing the metrics of interest on mags by considering the existence of the padding scheme , as suggested by  @xcite . in particular , the mag algorithms we discuss in section  [ sec : alg_algth ] remain unaffected by this padding issue .    for a given mag  @xmath5 , we define its main components graph @xmath186 as the mag s composite vertices representation with all its trivial components removed .",
    "figure  [ fig : main_ex1 ] shows the main components graph @xmath187 for the mag  @xmath119 .",
    "it is worth noting that numerical representations are not defined for @xmath187 .     of the example",
    "mag  @xmath119,scaledwidth=75.0% ]    this can be achieved algebraically for any mag  @xmath5 with the help of a matrix @xmath188 constructed from the identity @xmath189 , where @xmath190 is the number of composite vertices on the mag .",
    "the matrix @xmath188 is obtained from this @xmath191 identity by removing the columns which match the numerical representations of the trivial components of the mag . therefore , assuming that the mag  @xmath5 has @xmath192 trivial components , the matrix @xmath193 has @xmath16 rows and @xmath194 columns .",
    "in particular , in the cases where the mag  @xmath5 has no trivial components , we have that @xmath195 .",
    "it is also worth noting that the matrix @xmath196 is a matrix akin to the identity @xmath189 , but the diagonal entries corresponding to the trivial components ( removed in @xmath188 ) have value @xmath121 .",
    "therefore , multiplying a @xmath191 matrix by @xmath197 to the left has the effect of turning all entries on the rows corresponding to the trivial components to @xmath121s .",
    "similarly , multiplying by @xmath197 to the right has the effect of turning the entries of the columns corresponding to the trivial elements to @xmath121s .    as an example",
    ", we show the matrix @xmath198 , @xmath199 which is obtained from the @xmath200 identity matrix by removing the columns @xmath201 and @xmath202 that correspond to the trivial components of the mag  @xmath119 .      as a direct consequence of the isomorphism between mags and traditional directed graphs , it is expected that a mag can be represented in matrix form .",
    "in fact , such representations can be achieved directly by the composite vertices representation of mags , presented in section  [ subsec : magdef ] . since for any given mag",
    "@xmath5 its composite vertices representation is a traditional directed graph , it can be represented in matrix form .",
    "one of such representations is the mag s adjacency matrix .",
    "this matrix is obtained from the mag s composite vertices representation , @xmath35 , and its companion tuple @xmath131 .",
    "in fact , the mag s adjacency matrix is the adjacency matrix of the composite vertices representation , where the order of the rows and columns is given by the numerical representation of the composite vertices of @xmath35 .    since the set @xmath60 of composite vertices of a given mag  @xmath5 is obtained by the cartesian product of all aspects of the mag ( as shown in expression  ( [ eq : comp_verts ] ) )",
    ", it follows that the number of composite vertices on a given mag  @xmath5 with @xmath12 aspects is @xmath203 where @xmath142 is the @xmath140-th element of the mag s companion tuple , i.e. the number of elements on the mag s @xmath140-th aspect .    the general form of any entry of the matrix @xmath204 is given by @xmath205 where @xmath206 means that @xmath207 is an edge on the composite vertices representation @xmath35 of the mag  @xmath5 , so that @xmath208 are composite vertices of @xmath5 .",
    "it follows from the definition of @xmath35 and its natural isomorphism to @xmath5 , that @xmath206 if and only if there is an edge @xmath24 such that @xmath209 and @xmath210 .",
    "it is important to note , however , that the notation @xmath211 is in fact a shorthand for @xmath212 , where @xmath213 is the row number and @xmath214 the column number of the matrix entry .",
    "this ties the construction of the adjacency matrix of a mag with its companion tuple , since it is used in the determination of the numerical representation of a composite vertex ( @xmath213 ) .",
    "therefore , the adjacency matrix of any given mag is always presented with its companion tuple .",
    "the adjacency matrix of a given mag  @xmath5 is constructed by algorithm  [ alg : j_h ] , where @xmath215 is the number of composite vertices in @xmath5 , which can be calculated using equation  ( [ eq : nro_comp_verts ] ) , @xmath216 and @xmath217 are the numerical representation of the origin and destination composite vertices of edge @xmath24 , respectively , as defined in section  [ sec : asp_vt_ord ] .    considering that a sparse matrix with all entries @xmath121 can be created in constant time , and that both functions @xmath218 and @xmath125 ( see  algorithm  [ alg : tau ] and algorithm  [ alg : d ] ) have time complexity @xmath134 , we conclude that algorithm  [ alg : j_h ] has time complexity @xmath219 , where @xmath12 is the number of aspects of mag  @xmath5 and @xmath220 the number of edges .    as an example",
    ", the adjacency matrix of the mag  @xmath119 is shown in expression  ( [ eq : j(t ) ] ) .",
    "this adjacency matrix @xmath221 has @xmath222 entries , of which just @xmath223 are non - zero .",
    "@xmath224\\ ] ]    it is important to note that the order of the columns and rows of @xmath225 is given by the numerical representation of the composite vertices .",
    "thus , for instance , the @xmath139 at row 2 , column 8 represents the edge between the composite vertices with numerical representations @xmath122 and @xmath226 , witch in turn represents the edge @xmath227 of the mag  @xmath119 . in this way , although @xmath225 is presented in matrix form , together with the companion tuple @xmath228 , it fully represents the mag @xmath119 , carrying the proper adjacency notion used to define transitive constructions , such as walks and paths on the mag .    for an arbitrary mag  @xmath5 ,",
    "its main components graph @xmath186 is obtained by removing the mag s trivial components , as stated in section  [ sec : triv_comp_elim ] .",
    "the matrix @xmath229 is then obtained with the use of the matrix @xmath188 , presented in section  [ sec : triv_comp_elim ] .",
    "@xmath229 is obtained as @xmath230 where @xmath231 is the adjacency matrix containing only the main components of the mag .",
    "it is also possible to obtain the adjacency matrix @xmath204 from @xmath229 .",
    "this follows from the fact that on the adjacency matrix @xmath204 the rows and columns corresponding to trivial components are already zero . therefore ,    @xmath232    where @xmath233 .",
    "then , we have that @xmath234    expression  ( [ eq : j(m(t ) ) ] ) shows @xmath235 , the adjacency matrix of @xmath187 .",
    "this matrix is obtained from the adjacency matrix @xmath225 by removing the rows and columns which represent the trivial components of the mag  @xmath119 . in this case , the trivial components are the composite vertices with numerical representations @xmath201 and @xmath202 .",
    "this matrix is calculated as @xmath236 , so that @xmath237 .\\ ] ]    in general , the adjacency matrices associated with a mag are sparse , meaning that for an @xmath191 adjacency matrix the number of non - zero entries of the matrix is of the order @xmath238 .",
    "since the non - zero entries on the mag adjacency matrix corresponds to the edges present on the mag , the adjacency matrix being sparse means that the number of edges @xmath239 on the mag is of the same order of the number of composite vertices @xmath16 , i.e. @xmath239 is of order @xmath238 .",
    "therefore , these matrices can be stored efficiently using sparse matrices representations , such as compressed sparse column  ( csc ) or compressed sparse row  ( csr )  @xcite . assuming that the number of edges is larger than the number of composite vertices , these representations provide a space complexity of @xmath240 for storing the mag s adjacency matrices .",
    "further , they also provide efficient matrix operations , which will be explored in the algorithms presented in section  [ sec : alg_algth ] .",
    "given that every mag is isomorphic to a directed graph , it follows that it can be represented by an incidence matrix ( and its companion tuple ) . for any given mag  @xmath5",
    ", this matrix is constructed from the composite vertices @xmath35 and the companion tuple @xmath131 , adopting the vertex order induced by the numerical representation presented in section  [ sec : asp_vt_ord ] .",
    "the mag s incidence matrix @xmath241 , where @xmath242 is the number of edges in the mag and @xmath190 is the number of composite vertices on the mag , is defined then as @xmath243 where @xmath244 is an edge in mag  @xmath5 and @xmath22 is a composite vertex in mag  @xmath5 . here",
    ", the notation @xmath245 is a shorthand for @xmath246 , where @xmath247 is an numerical index for each edge and @xmath213 is the numerical representation of the composite vertex @xmath23 .",
    "note that the use of the composite vertex numerical representation ties the incidence matrix to the mag s companion tuple .",
    "although the order of the composite vertices is defined by each composite vertex numerical representation , the order used to represent the mag edges in the incidence matrix is not relevant .",
    "the incidence matrix of a directed graph has several well - known properties  @xcite , among which , the property that the incidence matrix of a directed graph with @xmath248 connected components has rank @xmath249 , where @xmath16 is the number of vertices of the graph .",
    "this property is useful for defining other matrices based on the incidence matrix .    for a given mag  @xmath5 ,",
    "the incidence matrix @xmath250 is built by algorithm  [ alg : c_h ] , where @xmath251 and @xmath252 are the numerical representation of the origin and destination composite vertices of edge @xmath24 , respectively , as defined in section  [ sec : asp_vt_ord ] , and @xmath247 is a unique numerical index for the edge @xmath24 , ranging from @xmath139 to @xmath239 . considering that a sparse matrix with all entries @xmath121 can be created in constant time , and that both functions @xmath218 and @xmath125 ( see  algorithm  [ alg : tau ] and algorithm  [ alg : d ] ) have time complexity of @xmath134 , we conclude that algorithm  [ alg : c_h ] has time complexity of @xmath219 , where @xmath12 is the number of aspects of mag  @xmath5 and @xmath220 the number of edges .    given the incidence matrix @xmath250 of a mag  @xmath5 , it is possible to obtain the incidence matrix of the main components graph @xmath253 using the matrix @xmath193 defined in section  [ sec : adj_mat ] .",
    "the incidence matrix of @xmath186 is given by @xmath254    further , given the incidence matrix of the mag s main components graph and the matrix @xmath188 , it is possible to recover the mag s incidence matrix , as @xmath255 this is only possible because the columns of @xmath250 , which are forced to @xmath256 by the multiplication by @xmath197 , were already @xmath256 , as the composite vertices represented by them have no edges incident to them .",
    "the incidence matrix @xmath257 of the example mag  @xmath119 is shown in expression  ( [ eq : c(t ) ] ) .",
    "the vertices ( columns ) order is determined by the vertices numerical representation , while the edge order remains unconstrained .",
    "the trivial components correspond to columns @xmath201 and @xmath202 , which have all entries with value @xmath121 .",
    "@xmath258\\ ] ]    the main components incidence matrix @xmath259 is depicted in expression  ( [ eq : c(m(t ) ) ] ) .",
    "it is obtained from the matrix @xmath257 by removing the trivial components , as shown in expression  ( [ eq : ct_from_cm ] ) .",
    "@xmath260\\ ] ]    in general , the incidence matrices related to mags are sparse , and therefore can be efficiently stored using sparse matrices representations , such as csc or csr  @xcite . assuming that the number of edges on the mag is larger than the number of composite vertices , the use of these representation lead to a memory complexity of @xmath240 , where @xmath242 is the number of edges on the mag  @xmath5 .",
    "we construct the combinational laplacian matrix of a given mag  @xmath5 from its incidence matrix @xmath250 , as @xmath261 since @xmath250 is an @xmath262 matrix , it follows from this construction that , as expected , the laplacian @xmath263 is a positive semidefinite @xmath191 matrix .",
    "further , since the rank of @xmath250 is @xmath264 , where @xmath248 is the number of connected components of @xmath5 , it follows that the rank of @xmath263 is also @xmath264 .",
    "consequently , the dimension of the nullspace of @xmath263 is @xmath248 , the number of connected components on the mag  @xmath5 , a well - known property of the laplacian matrix .    in the case of the laplacian @xmath263 , each one of the trivial components of the mag counts as a distinct connected component",
    "therefore , for a mag with @xmath265 trivial components , we have that @xmath266 , the equality happening in the case where the mag only has trivial components , i.e. when the mag has no edges .",
    "the laplacian @xmath267 of the example mag  @xmath119 is given by @xmath268 \\cdot\\ ] ]    since the sum of all columns of @xmath267 is @xmath256 and six of the columns are @xmath256 , it follows that the dimension of the nullspace of @xmath267 is @xmath168 , which is the expected value , as the mag  @xmath119 has @xmath269 trivial components and a single main component .",
    "the entries with value @xmath270 reflect the fact that in this directed graph there are pairs of opposing directed edges , which can be interpreted as a bi - directional connection . as is shown in section  [ subsec : wei_lap ] , this can also be seen as the weight associated with this connection .",
    "the laplacian can also be constructed for the main components of a given mag  @xmath5 . in this case , the laplacian is constructed as @xmath271 or @xmath272    the main component laplacian for the mag  @xmath119 is @xmath273.\\ ] ] since the six trivial components were eliminated , the dimension of the nullspace of @xmath274 is @xmath139 .",
    "the weighted laplacian matrix of a mag  @xmath5 is obtained in a similar way to the combinational laplacian . however",
    ", an additional diagonal weights matrix is used to associate a weight to each of the edges of @xmath5 .",
    "we denote a weights matrix for a given mag  @xmath5 as @xmath275 , where @xmath242 is the number of edges in @xmath5 . given a mag  @xmath5 and a weights matrix @xmath276 , the weighted laplacian is defined as @xmath277    in general , the entries on the main diagonal of a weights matrix @xmath276 are positive real values . in this case",
    ", @xmath276 is a symmetric positive - definite matrix and , therefore , @xmath278 is symmetric positive - semidefinite .",
    "hence , the rank of @xmath278 is the same as the rank of @xmath250 , so that the nullspace of @xmath278 has the same dimension as the nullspace of @xmath263 .",
    "it can be seen that this matrix represents the same object as the supra - laplacian described in  @xcite .",
    "nevertheless , here it is obtained directly from the mag s representation by matrices and further , distinct weights can be directly assigned to each edge if the application needs it .    as an example of weighted laplacian for the mag  @xmath119 ,",
    "consider a weight matrix @xmath279 , where the values of the entries on the main diagonal are given by @xmath280.\\ ] ] this weights matrix assigns weight 0.5 to all six edges that form the bidirectional connection between layers on the example mag  @xmath119 .",
    "this effectively converts this edge pairs into a undirected edge . by doing this ,",
    "the obtained weighted laplacian matrix has the more familiar structure associated with the laplacian of undirected graphs . for this weights matrix",
    ", we have @xmath281 \\cdot\\ ] ]    if considering only the main components @xmath186 of a given mag  @xmath5 , we have @xmath282    for the case of the example mag  @xmath119 and the weights matrix described by equation  ( [ eq : diagw ] ) , @xmath283 \\cdot\\ ] ]      another form of applying weights to the laplacian matrix on a given mag  @xmath5 leads to the equivalent of the normalized laplacian matrix  @xcite . in this case",
    ", the weights are applied to the composite vertices instead of the edges , as in the weighted laplacian . in order to obtain the normalized laplacian ,",
    "weights are applied to the non - zero columns of the incidence matrix @xmath250 , which correspond to the composite vertices of @xmath5 that are not trivial components ( i.e. unconnected composite vertices ) .",
    "the weights applied to the non - zero columns are such that the vector represented by each column becomes an unitary vector .",
    "this leads to a diagonal weights matrix @xmath284 , where @xmath190 , for which @xmath285 where @xmath286 is the @xmath140-th column of the incidence matrix @xmath250 and @xmath287 is the euclidean norm of @xmath286 .",
    "the normalized laplacian is then obtained by @xmath288 since @xmath289 , where @xmath290 is the degree of the composite vertex corresponding to column @xmath286 , it follows that the formulation for @xmath291 shown in equation  ( [ eq : normlap ] ) coincides with the one proposed in  @xcite .    as with the other kinds of laplacian matrices ,",
    "the trivial components of @xmath291 can be eliminated using the matrix @xmath188 as @xmath292",
    "the mag algorithms covered in this section are based on the mag s adjacency matrix or on its adjacency list . since in general",
    "we expect the adjacency matrix to be represented using sparse csr ou csc formats  @xcite , it follows , due to the structure of the csr and csc formats , that the adjacency matrix and adjacency list can be seen as very closely related representations .",
    "the algorithms used in mags are directly derived from the basic well - known algorithms used with directed graphs @xcite . in this sense ,",
    "the purpose of this section is not to propose new algorithms , but to show how known algorithms may be adapted for application in mags .",
    "we remark that a python implementation of all the algorithms presented in this section is available at the following url :  http://github.com/wehmuthklaus/mag_algorithms .",
    "when operating upon a matrix representation , a few auxiliary matrices and vectors are necessary to express the desired operations .",
    "we now define these vectors , which are used on the remainder of this section :    1 .   all 0s +",
    "we denote @xmath256 the column vector with all entries equal to @xmath121 .",
    "usually we assume that @xmath256 has the right dimension ( i.e. number of rows ) for the indicated operation .",
    "when necessary to improve readability , we indicate the dimension by sub - script as in @xmath293 .",
    "all 1s + we denote @xmath294 the column vector with all entries equal to @xmath139 .",
    "usually we assume that @xmath294 has the right dimension ( i.e. number of rows ) for the indicated operation .",
    "when necessary to improve readability , we indicate the dimension by sub - script as in @xmath295 .    in all cases , we assume the vectors have the dimension necessary for the operation where they is applied",
    ".    moreover , specially constructed matrices are used to build sub - determined algebraic algorithms for mags .",
    "these matrices provide reduction / aggregation operations needed for sub - determined algorithms .",
    "although these matrices are specially constructed for the mag and the sub - determination in question , they have distinct properties and can be constructed by a general algorithm .",
    "in fact , the construction of sub - determined algorithms relies on the use of functions to aggregate / reduce results according to the applied sub - determination . in some cases , this function can be as simple as just summing up values obtained in composite vertices , which are reduced to the same sub - determined vertex .",
    "however , depending on the algorithm being constructed , this aggregation may need a more elaborate function , which may not be expressed in terms of matrix multiplications .    given a mag  @xmath5 and a sub - determination @xmath41 , the sub - determination matrix @xmath296 @xmath297 is a rectangular matrix , where @xmath190 is the number of composite vertices of @xmath5 and @xmath298 is the number of composite vertices of the sub - determination @xmath41 applied to the mag  @xmath5 .",
    "since a sub - determination is a ( proper ) subset of the aspects of a mag , it follows that @xmath299 , i.e. the number of composite vertices of a mag is a multiple of the number of composite vertices in any of its sub - determinations .",
    "further , @xmath296 has the property of having exactly one non - zero entry in each column , and the position of this entry is determined by the numerical value of the sub - determined composite vertex .",
    "algorithm  [ alg : m_zeta ] shows the construction of the sub - determination matrix @xmath296 for a given mag  @xmath5 and sub - determination @xmath41 . the function @xmath125 takes a composite vertex to its numerical representation and",
    "the function @xmath54 takes a composite vertex to its sub - determined form , i.e. it drops the aspects not present in the sub - determination . to determine the time complexity of algorithm  [ alg : m_zeta ]",
    ", we consider that the count of composite vertices in line  @xmath133 is @xmath300 , the same is the case for the count on line  @xmath301 , the construction of companion tuple at line  @xmath122 is @xmath134 , the construction of an empty sparse matrix at line  @xmath302 is @xmath303 , and , finally , the * for * loop initiated at line  @xmath269 is also @xmath300 .",
    "since the number of aspects @xmath304 , we conclude that the time complexity of algorithm  [ alg : m_zeta ] is @xmath300 .    )    for instance , consider the example mag  @xmath119 and a sub - determination @xmath305 , which drops the third aspect of @xmath119 .",
    "the aspect dropped is the aspect of time instants and , therefore , the two aspects present in @xmath306 are location and transit layers . since in @xmath119 there are 3 locations and 2 transit layers , it follows that @xmath307 .",
    "hence , @xmath308 constructed according to algorithm  [ alg : m_zeta ] is given by @xmath309.\\ ] ]    as a further example , consider the mag  @xmath119 and a sub - determination @xmath310 , which drops the location and transit layer aspects , leaving only the time instants aspects . since there are @xmath133 time instants in @xmath119 , it follows that @xmath311 is @xmath312.\\ ] ] note that in these cases the multiplication by the sub - determination matrices performs the sum of the distinct composite vertices that are reduced to a same sub - determined vertex .",
    "for instance , given the sub - determination @xmath305 , the matrix @xmath313 is used to aggregate values found in @xmath133 composite vertices into a single sub - determined vertex .",
    "the aggregation function in this case is a simple sum .",
    "the same is done by the matrix @xmath314 for the sub - determination @xmath310 , where in this case each sub - determined result is the sum of values obtained for @xmath269 composite vertices .      in this section ,",
    "we show that every function that can be obtained from a mag to a given co - domain set can also be obtained from a matrix representation of the mag . here",
    "the set @xmath315 is the quotient set of finite mags under isomorphism defined in section  [ subsec : magdef ] .",
    "note that a permutation @xmath316 of a given adjacency matrix @xmath204 , together with the function @xmath317 , represents the same mag @xmath5 as @xmath204 , so that permutations of adjacency matrices are isomorphic .",
    "thus , we have the set @xmath318 , which is a quotient set of pairs @xmath319 of adjacency matrices and association functions @xmath125 , under adjacency matrix permutations .",
    "therefore , an element of @xmath318 is an equivalence class of adjacency matrices and @xmath125 functions .",
    "since we consider the pair @xmath320 as the canonical adjacency matrix representation of the mag @xmath5 , we assign this pair as the class representative of the mag @xmath5 in @xmath318 .",
    "the adjacency matrix @xmath204 and companion tuple @xmath131 obtained from the mag @xmath5 by algorithm  [ alg : j_h ] are isomorphic to the mag h. [ theo : j ]    we show that algorithm  [ alg : j_h ] can be seen as a function that takes a given mag @xmath5 to its adjacency matrix and companion tuple , and that this function preserves the adjacency structure of the original mag .",
    "further , we show that , from the adjacency matrix @xmath204 and companion tuple @xmath131 , we can construct a mag @xmath321 that is isomorphic to mag @xmath5 .",
    "* @xmath322 + given the sets @xmath315 and @xmath318 , algorithm  [ alg : j_h ] can be seen as a function @xmath323 considering the loop depicted at lines 5 to 9 in algorithm  [ alg : j_h ] , it can be seen that every edge @xmath24 is converted in a pair of composite vertices ( @xmath23 and @xmath324 ) and then represented as an edge on the adjacency matrix @xmath204 .",
    "therefore , if the composite vertices @xmath23 and @xmath324 are adjacent in mag @xmath5 , then a entry @xmath139 is present at the intersection of row @xmath325 and column @xmath326 of @xmath204 , indicating the corresponding adjacency in the matrix . hence , the adjacency structure of the mag @xmath5 is preserved by the function @xmath327 .",
    "* @xmath328 + given the adjacency matrix @xmath204 and companion tuple @xmath131 , we construct mag @xmath321 , which we then show to be isomorphic to the mag @xmath5 .",
    "we obtain @xmath329 from @xmath131 by constructing a list @xmath329 with @xmath330 elements , in which every element @xmath140 of this list is a set such that @xmath331| = \\tau[i]$ ] . without loss of generality , we can assume that the elements of each aspect @xmath332 $ ] are natural numbers ranging from @xmath139 to @xmath333 $ ] .",
    "we then construct the edge set @xmath334 , by starting with an empty set and then inserting an edge for each entry with value @xmath139 in @xmath204 . for constructing each of these edges ,",
    "we take an entry of value @xmath139 , make @xmath192 equal to its row number , and @xmath335 equal to its column number .",
    "we then build the edge @xmath336 , which is a tuple of length @xmath337 , where the first @xmath12 entries correspond to the origin composite vertex and the last @xmath12 entries correspond to the destination composite vertex of the edge .",
    "note that function @xmath184 simply retrieves the original composite vertex entries from the row and column numbers of the adjacency matrix .",
    "further , we construct the set @xmath338 of composite vertices , which is the cartesian product of the sets in @xmath329 , so that @xmath339,\\ ] ] where @xmath330 is the number of aspects in the mag @xmath5 .",
    "+ we now show that the mag @xmath321 , constructed from @xmath204 and @xmath131 , is isomorphic to the original mag @xmath5 .",
    "note that by construction of @xmath321 we have that @xmath340 ; @xmath341 ; for @xmath342| = |a(h)[i]|$ ] ; @xmath343 ; and @xmath344 .",
    "+ since @xmath345 , we know that there is a bijective function from @xmath338 to @xmath60 .",
    "further , we also have the bijective function @xmath125 , which takes a composite vertex into a natural number , assigning a unique and distinct natural number to each element of @xmath60 and @xmath338 .",
    "moreover , since @xmath344 and by construction of @xmath125 , we have that the range of @xmath125 for @xmath60 and @xmath338 is the same , i.e. @xmath346 . from this",
    ", we conclude that , for every composite vertex @xmath22 , there is one unique composite vertex @xmath347 such that @xmath348 .",
    "we thus define the bijective function @xmath349 + as the function @xmath350 is bijective , for every edge @xmath351 , we have an edge @xmath352 @xmath353 , and also , for every edge @xmath24 , we have the corresponding edge @xmath354 .",
    "this fulfils the conditions for isomorphism between @xmath321 and @xmath5 .",
    "+ since @xmath315 is a quotient set under the mag isomorphism relation and @xmath321 is isomorphic to @xmath5 , it follows that @xmath321 and @xmath5 correspond to the same element in @xmath315 , making the function @xmath327 bijective . also ,",
    "since each entry with value @xmath139 in the adjacency matrix @xmath204 corresponds to an edge in the mag @xmath5 , it follows that @xmath355 also preserves the mags adjacency structure , establishing the isomorphism relation as desired .",
    "every function that can be obtained from a mag to a given co - domain set can also be obtained from a matrix representation of the mag .",
    "[ theo : univ ]    consider the diagram depicted in figure  [ fig : diag ] . in this figure",
    ", @xmath315 is the set of all mags ( up to isomorphism ) , @xmath318 is the set of pairs of adjacency matrices and companion tuples ( up to permutation ) , @xmath100 is an arbitrary function from @xmath315 to @xmath356 , where @xmath356 is a codomain consistent with the definition of function @xmath100 , and @xmath357 is the identity function in @xmath356 .",
    "since the function @xmath100 is arbitrary , it can represent any function or algorithm , such as searches or centrality computations , which take mags to a result expected from this function .",
    "\\(m ) [ matrix of math nodes , row sep=3em , column sep=4em , minimum width=2em ] & + & + ; ( m-1 - 1 ) edge node [ left ] @xmath327 ( m-2 - 1 ) edge node [ below ] @xmath100 ( m-1 - 2 ) ( m-2-1.east|-m-2-2 ) edge node [ below ] @xmath358 node [ above ] @xmath359 ( m-2 - 2 ) ( m-1 - 2 ) edge node [ right ] @xmath357 ( m-2 - 2 ) ;    as both functions @xmath327 ( equation  ( [ func : upsilon ] ) in  theorem  [ theo : j ] ) and @xmath357 represent isomorphisms , it follows that the depicted diagram commutes , so that for every function @xmath360 there is a function @xmath361 , which produces the same result .    as a consequence of theorem  [ theo : univ ] , it follows that , from the adjacency matrix and companion tuple of a mag , one can obtain any possible outcome that can be obtained from a mag or from any other representation equivalent to it , such as high order tensors , as those presented in recent related works  @xcite .",
    "the definition of degree in a traditional graph stems from the number of edges incident to a given vertex .",
    "this concept can be generalized for mags , so that degrees can be defined for composite vertices , sub - determinations , or elements of a given aspect .",
    "further , since mag edges are considered to be directed , the degrees are also divided into out - degree and in - degree . in this section ,",
    "we present algorithms for calculating these distinct degree definitions .",
    "the degree of composite vertices of a given mag  @xmath5 can be obtained directly from its composite vertices representation , @xmath35 .",
    "since the composite vertices representation is a traditional directed graph isomorphic to the mag  @xmath5 , it follows that the degree determination is done with the traditional algorithm for directed graphs with minor changes . for a given mag  @xmath5 and its companion tuple @xmath131 ,",
    "the degrees of the composite vertices can be determined by algorithm  [ alg : comp_dg ] , where @xmath362 and @xmath363 stand for the numerical representation of the origin and destination composite vertices of edge @xmath24 , as defined in section  [ sec : asp_vt_ord ] .",
    "another way for calculating the degrees of the composite vertices is computing it algebraically from the adjacency matrix of the mag , as given by    @xmath364    and    @xmath365    further , the total degree of the composite vertices can be obtained by summing up their indegrees and outdegrees .    to determine the time complexity of algorithm  [ alg : comp_dg ]",
    ", we consider that lines  @xmath122 , @xmath301 ,  and  @xmath302 have each time complexity @xmath300 , the determination of the companion tuple at line  @xmath133 has complexity @xmath134 , where @xmath12 is the number of aspects of the mag , so that @xmath304 . finally ,",
    "since the determination of the numerical representation of vertices has complexity @xmath134 , we have that the * for * loop initiated at line  @xmath269 has complexity @xmath219 , so that the time complexity of algorithm  [ alg : comp_dg ] is @xmath366 .",
    "if we consider that in a given case the order of the mag does not vary , so that @xmath12 is a constant , then the algorithm s time complexity is @xmath367 .    in the case of the example mag  @xmath119  ( figure  [ fig : mag_ex1_ids ] ) ,",
    "whose companion tuple is @xmath368 , it can be seen that the composite vertex @xmath369 has outdegree @xmath133 and indegree @xmath139 , while the composite vertex @xmath370 has outdegree @xmath122 and indegree @xmath122 . since @xmath371 and @xmath372",
    ", it follows that @xmath373 = 1 $ ] , @xmath374 = 3 $ ] , @xmath375 = 2 $ ] and @xmath376 = 2 $ ] .      we can determine the degree for sub - determined composite vertices in a similar way to the degree of composite vertices . given a mag  @xmath5 and a sub - determination @xmath41 , the degree of the sub - determined composite vertices can be obtained by algorithm  [ alg : subcomp_dg ] , where @xmath377 is the number of @xmath41 sub - determined composite vertices on mag  @xmath5 , @xmath54 is the function that takes a composite vertex to its sub - determined form , and @xmath378 is the function that takes the sub - determined composite vertex to its numerical representation . it can be seen that the time complexity of algorithm  [ alg : subcomp_dg ] is the same as the time complexity of algorithm  [ alg : comp_dg ] .",
    "it is important to note that two distinct composite vertices may have the same sub - determined form .",
    "this happens when the two composite vertices differ only on aspects which are dropped by the sub - determination . in this case",
    ", the degree of each of these composite vertices is summed for obtain the sub - determined degree . from this",
    ", it can also be seen that some edges in the sub - determined form may become self - loops .",
    "the degrees calculated by algorithm  [ alg : subcomp_dg ] include the self - loop edges .",
    "this algorithm can be modified to count the self - loops separately , as shown in algorithm  [ alg : subcomp_sep_dg ] .",
    "this algorithm is similar to algorithm  [ alg : comp_dg ] and has the same time complexity .",
    "the sub - determined composite vertices degree can also be determined algebraically with    @xmath379    and    @xmath380    where @xmath296 is the sub - determination matrix and @xmath294 is the all @xmath139s column vector , both defined in section  [ sec : auxvect ] .",
    "note that the multiplication by @xmath296 adds the degrees of the composite vertices that are collapsed to the same sub - determined vertex .",
    "the degrees calculated by equations  ( [ eq : subcompindg ] )  and  ( [ eq : subcompoutdg ] ) include the self - loop edges . to obtain the separate self - loop degrees , first note that @xmath381 this follows from the fact that @xmath382 since @xmath383 is a @xmath384 rectangular matrix and",
    "has the property that each row has exactly one non - zero entry of value @xmath139 .",
    "furthermore , note that the matrix @xmath385 is the adjacency matrix of the sub - determined mag @xmath386 .",
    "since the composite vertices representation of a sub - determined mag is a multigraph , each non - zero entry shows the number of superposed edges in the sub - determination .",
    "therefore , the main diagonal of @xmath385 has the self - loop degree of each vertex .",
    "hence , @xmath387    for example , consider the example mag  @xmath119  ( figure  [ fig : mag_ex1_ids ] ) and the sub - determination @xmath305 defined in section  [ sec : auxvect ] .",
    "we have that @xmath388,\\ ] ]    @xmath389,\\ ] ]    @xmath390,\\ ] ]    and @xmath391.\\ ] ]    this means that , for instance , the sub - determined composite vertex @xmath392 has outdegree @xmath168 , indegree @xmath168 , and @xmath122 self - loops .",
    "this sub - determination corresponds to the aggregation of all @xmath133 time instants , which means that the edges in which only the time instant changes become self - loops .",
    "these edges are shown in red ( dotted ) in figure  [ fig : mag_ex1_ids ] .",
    "note that @xmath393 , so that @xmath394 , making it correspond to the second element of the degree column vector .",
    "the single aspect degree is a particular case of sub - determined degree in which the sub - determination applied is such that only a single aspect remains .",
    "therefore , the determination of single aspect degrees is done in the same way presented in section  [ subsec : subdegree ] .",
    "we , however , present an additional example illustrating the time instant degree , which is obtained by the sub - determination @xmath310 defined in section  [ sec : auxvect ] .",
    "this sub - determination has only the third aspect of the mag  @xmath119  ( figure  [ fig : mag_ex1_ids ] ) , which corresponds to the three time instants present on mag  @xmath119 . in this case",
    ", we have that @xmath395,\\ ] ]    @xmath396,\\ ] ]    @xmath397,\\ ] ]    and @xmath398.\\ ] ] therefore , we have that @xmath399 , so that @xmath400 , @xmath401 , and @xmath402 @xmath403 . considering the composite vertices representation of mag  @xmath119 , depicted in figure  [ fig : mag_ex1_ids ]",
    ", it can be seen that each time instant has @xmath122 self - loop edges ( in blue - dashed ) , which is consistent with equation  ( [ eq : dm_zetat(t ) ] ) .",
    "further , there are @xmath226 edges from @xmath404 to @xmath405 ( in red - dotted and black ) and @xmath226 edges from @xmath405 to @xmath406 .",
    "this is consistent with the adjacency matrix shown in equation  ( [ eq : m_zetat(t ) ] ) .",
    "further , the indegrees and outdegrees of each time instant are consistent with equations  ( [ eq : subindgzt ] )  and  ( [ eq : suboutdgzt ] ) .",
    "the breadth - first search ( bfs ) is an important graph algorithm that can be seen as a primitive for building many other algorithms  @xcite .",
    "the goal of this section is to illustrate how the bfs algorithm can be adapted for being used in mags , both in its full composite vertices representation and in its sub - determined forms . in the not sub - determined form ,",
    "the adaptation is very simple , since the composite vertices representation of a mag is a directed graph . in this case , all that is needed is to convert the composite vertices representation from its tuple to numerical form , and then apply the traditional bfs algorithm .",
    "the adaptation to the sub - determined forms also does not require major changes on the algorithm .",
    "as with many graph algorithms , bfs can be expressed in combinational or in algebraic forms , which are presented in the following related subsections .",
    "the non sub - determined bfs in its combinational form is constructed directly upon the mag s adjacency matrix , @xmath204 .",
    "considering algorithm  [ alg : cvbfs ] and the standard form of the bfs algorithm encountered in  @xcite , it can be seen that the difference is that the starting composite vertex @xmath407 has to be transformed from its tuple representation to its numerical representation , as shown in lines 8,9 and 10 of algorithm  [ alg : cvbfs ] .",
    "therefore , from the analysis provided in  @xcite , we can conclude that the time complexity of algorithm  [ alg : cvbfs ] is @xmath408 .",
    "bfs is also closely related to matrix multiplication .",
    "this stems from the well - known property of the powers of the adjacency matrix , in which the @xmath409 entry of the @xmath16-th power of the adjacency matrix shows the number of existing walks of length @xmath16 from vertex @xmath140 to vertex @xmath146  @xcite . from this",
    ", we could think that for a given mag  @xmath5 , the series @xmath410 would produce a matrix @xmath411 , such that the entry @xmath412 indicates the number of walks of any length from vertex @xmath140 to vertex @xmath146 .",
    "this is indeed the case when @xmath5 happens to be an acyclic mag , making @xmath204 a nilpotent matrix .",
    "the existence of cycles in @xmath5 makes that , for some vertices , there will exist walks of arbitrary length connecting them  ( namely , the cycles ) , making the series of equation  ( [ eq : bfs_non_conv ] ) divergent .",
    "however , since the objective is not to know the number of walks between each pair of vertices , but simply to know which vertices are reachable from each other ( i.e. there is at least a path between them ) , this technical problem can be solved by multiplying the adjacency matrix @xmath204 by a scalar @xmath413 , such that @xmath414 where @xmath415 is the spectral radius of the matrix @xmath416 .",
    "this leads to the matrix @xmath417 so that the spectral radius of the matrix @xmath418 .",
    "this results that equation  ( [ eq : bfs_non_conv ] ) constructed with the matrix @xmath419 converges .",
    "since the convergence of the series is assured , equation  ( [ eq : bfs_non_conv ] ) can be re - expressed as @xmath420    the matrix @xmath411 defined in equation  ( [ eq : bfs_conv ] ) has the property that , for any given composite vertex @xmath421 , the row @xmath422 of @xmath411 has non - zero entries in every column that corresponds to a composite vertex @xmath22 , such that @xmath23 is reachable from  @xmath324 .",
    "hence , for a given composite vertex @xmath324 , the row @xmath422 corresponds to the result of a bfs started at that composite vertex .",
    "although the matrix @xmath411 carries the bfs of all composite vertices of the mag  @xmath5 , it is important to note that this matrix may not be sparse , which for large mags can lead to difficulties in memory allocation . in order to avoid such difficulties ,",
    "it is also possible to express a bfs for a single composite vertex @xmath324 as @xmath423 where @xmath424 is the row vector with @xmath16 entries for which all entries except @xmath214 are @xmath121 and the entry @xmath214 is @xmath139 .",
    "considering the example mag  @xmath119 , shown in figure  [ fig : mag_ex1_ids ] , the result of the bfs using algorithm  [ alg : cvbfs ] for the composite vertex @xmath425 , whose numerical representation is @xmath426 , is @xmath427 \\\\ \\notag distances & =   [ \\infty , 0 , \\infty,\\infty , 1 , \\infty , \\infty , 1 , 1 , 2 , 2 , \\infty , \\infty , 2 , 2 , 3 , 3 , \\infty]\\\\ \\notag pred          & =   [ nil , nil , nil , nil , 2 , nil , nil , 2 , 2 , 5 , 5 , nil , nil , 8 , 8 , 10 , 10 , nil ] , \\\\",
    "\\notag\\end{aligned}\\ ] ] where the list @xmath428 shows the composite vertices accessible from @xmath425 , which in this example represent all locations , transit modals , and time instants reachable from this initial point .",
    "the list @xmath429 carries the distances in hops from the initial composite vertex @xmath425 to all possible destinations  ( with @xmath430 meaning that a destination is not reachable ) .",
    "the list @xmath431 shows the predecessors of each composite vertex , making possible to construct a bfs tree .",
    "it is possible to obtain a sub - determined form of the bfs algorithm for mags .",
    "it is important , however , to realize that this sub - determined bfs algorithm is not equivalent to applying the bfs algorithms presented in section  [ subsec : compbfs ] to a sub - determined mag .",
    "a sub - determination is a generalization of the idea of aggregating multilayer and time - varying graphs , as shown in section  [ subsec : magsub ] . as with the aggregation process",
    ", the sub - determination of a mag can cause the presence of paths and walks on the sub - determined mag that do not actually exist on the original mag . to illustrate this",
    ", we present figures  [ fig : mag_ex2_ids ]  and  [ fig : mag_ex2_sub_ids ] , which show a small two aspects mag and its sub - determined form , obtained by the sub - determination @xmath432 .",
    "first , note that , in the mag @xmath433 shown in figure  [ fig : mag_ex2_ids ] , there is no path originating from the composite vertices @xmath434 or @xmath435 to the composite vertices @xmath436 or @xmath437 .",
    "nevertheless , in figure  [ fig : mag_ex2_sub_ids ] , there is a path connecting the sub - determined vertex @xmath150 to the sub - determined vertex @xmath438 , even though such connection is not possible on the original mag shown in figure  [ fig : mag_ex2_ids ] .",
    "therefore , in order to obtain the proper result , the sub - determined bfs should not be evaluated directly using the sub - determined mag .",
    "[ fig : mag_r2 ]    0.4   and its sub - determined form.,title=\"fig : \" ]    0.33   and its sub - determined form.,title=\"fig : \" ]    such a case can be seen algebraically by noting that given a mag  @xmath5 and a sub - determination @xmath41 , in general @xmath439 to see that the inequality  ( [ eq : subdif ] ) holds , note that an arbitrary power of the matrix @xmath440 @xmath441 is given by @xmath442 where @xmath443 is multiplied @xmath16 times .",
    "note , however , that @xmath444 since @xmath445 is a retangular matrix and @xmath446 , so that the rank of the matrix @xmath447 is less or equal to @xmath239 , while the rank of the identity @xmath448 is @xmath449 . since inequality  ( [ eq : neqmz ] ) holds , so does the inequality  ( [ eq : subdif ] ) .    here , the left hand side of the inequality  ( [ eq : subdif ] ) corresponds to the sub - determination of the bfs calculated for the mag  @xmath5 , while the right hand side corresponds to the bfs calculated for the sub - determined mag @xmath386 .    in the case of the mag @xmath433 , shown in figure  [ fig : mag_ex2_ids ]",
    ", we have that the sub - determination is given by @xmath450 and the adjacency and sub - determination matrices are @xmath451,\\ ] ]    @xmath452,\\ ] ]    and @xmath453.\\ ] ] therefore , we have that @xmath454,\\ ] ] while @xmath455\\ ] ] and @xmath456.\\ ] ] remembering that the entries of the matrices in equations  ( [ eq : bfsr ] ) , ( [ eq : bfsr1 ] ) ,  and  ( [ eq : bfsr2 ] ) are to be considered only as zero or non - zero , it can be seen that the matrix at equation  ( [ eq : bfsr ] ) has a @xmath121 at entry @xmath457 , while the matrices at equations  ( [ eq : bfsr1 ] )  and  ( [ eq : bfsr2 ] ) have a non - zero entry at this same position .",
    "this illustrates the situation in which a bfs is done on the sub - determined ( aggregated ) mag , as in equations  ( [ eq : bfsr1 ] )  and  ( [ eq : bfsr2 ] ) , i.e. paths that are not present on the original mag can appear on the sub - determined form , potentially altering the results obtained by algorithms applied to it .    for instance , considering the mag  @xmath119 , depicted in figure  [ fig : mag_ex1_ids ] , for a sub - determination @xmath458 , which drops the time aspect , and considering @xmath459 so that @xmath460 , we have that @xmath461.\\ ] ]    algorithm  [ alg : subbfs ] shows a combinational version of the sub - determined bfs .",
    "this procedure ensures that only paths present on the original mag are considered on the sub - determined bfs .",
    "the sub - determination of the results obtained from the bfs is done in the internal * if * , comprising lines @xmath462 to @xmath463 of algorithm  [ alg : subbfs ] .    after applying algorithm  [ alg : subbfs ] to the mag @xmath433 with initial vertex @xmath464 and sub - detemination @xmath450 , the obtained result is @xmath465 \\\\ \\notag distances & =   [ 0 , 1 , \\infty]\\\\ \\notag pred          & =   [ nil , 1 , nil ] , \\\\ \\notag\\end{aligned}\\ ] ] which is consistent with the result obtained by equation  ( [ eq : bfsr ] ) .",
    "further , applying algorithm  [ alg : subbfs ] to mag  @xmath119 , shown in figure  [ fig : mag_ex1_ids ] , with starting composite vertex @xmath466 and applying the sub - determination @xmath458 , which drops the time aspect , the obtained result is @xmath467 \\\\ \\notag distances & =   [ \\infty , 0 , 1 , 2 , 1 , \\infty]\\\\ \\notag pred          & =   [ nil , nil , 2 , 5 , 2 , nil ]",
    ". \\\\ \\notag\\end{aligned}\\ ] ] considering that @xmath468 and @xmath469 , @xmath470 , and @xmath471 , this means that disregarding time , starting from @xmath472 it is possible to reach @xmath473 in @xmath139 step , @xmath474 in @xmath122 steps , and @xmath475 in @xmath139 step .",
    "it is not possible to reach @xmath476 because there is no bus stop at location @xmath139 , neither @xmath477 because there is no subway station at location @xmath133 . from the predecessor list ( @xmath431 )",
    "it is possible to build a bfs tree , where @xmath472 is the root , @xmath473 and @xmath478 are children of @xmath472 , and @xmath479 is a child of @xmath392 .",
    "note that @xmath479 and @xmath478 are leaves .",
    "it can be seen that the result obtained in equation  ( [ eq : bfssubz ] ) is consistent with the results obtained by algorithm  [ alg : subbfs ] . comparing algorithm  [ alg : subbfs ] to algorithm  [ alg : cvbfs ]",
    ", it can be seen that the main difference is the additional * for * loop at line  @xmath480 of algorithm  [ alg : subbfs ] . since the time complexity of this loop is @xmath300",
    ", we then conclude that the time complexity of algorithm  [ alg : subbfs ] is @xmath367 .",
    "the single aspect bfs is a special case of the sub - determined bfs . as such",
    ", it is evaluated using the same algorithms presented in section  [ subsec : subbfs ] for the sub - determined case .",
    "considering the example mag  @xmath119  ( figure  [ fig : mag_ex1_ids ] ) , a sub - determination @xmath481 , which drops the time and transit mode aspects ( thus leaving only the locations aspect ) , and making @xmath459 so that @xmath460 , we have that @xmath482,\\ ] ] indicating that disregarding the aspects of time instants and transit modes , all locations can be reached from any location .    applying algorithm  [ alg : subbfs ] to the mag  @xmath119 , with starting composite vertex @xmath483 and employing the sub - determination @xmath481 , which drops the aspects of the transit mode and time instants , the obtained result is @xmath484 \\\\ \\notag distances & =   [ 0 , 1 , 2]\\\\ \\notag pred          & =   [ nil , 1 , 2 ] , \\\\ \\notag\\end{aligned}\\ ] ] which is consistent with the result obtained by equation  ( [ eq : bfssubz ] ) .      in this section ,",
    "we show the adaptation of the depth - first search ( dfs ) algorithm for use with mags .",
    "the dfs algorithm exposes many properties of the mag structure and can be used as a primitive for the construction of many other algorithms  @xcite .",
    "we present dfs algorithms for both the full composite vertices representation of the mag as well as for the sub - determined form .",
    "we remark that in the sub - determined algorithm the full information of the mag is used , in the sense of preventing the use of paths that may exist in the sub - determined form of the mag , while not actually existing in the original mag .",
    "the composite vertices implementation is constructed using the mag s adjacency matrix @xmath204 and companion tuple @xmath131 .",
    "the implementation shown is very similar to the traditional implementation presented in  @xcite , which is expected since the composite vertices representation of the mag is indeed a directed graph , so that the original algorithm applies .",
    "the proposed implementation can be seen in algorithm  [ alg : dfs_cv ] is similar to the original implementation .",
    "therefore , considering the analysis provided in  @xcite , we conclude that the time complexity of algorithm  [ alg : dfs_cv ] is @xmath367 .    when applied to mag  @xmath119 , shown in figure",
    "[ fig : mag_ex1_ids ] , the dfs algorithm generates the result @xmath485 \\\\ \\notag f & =   [ 1 , 21 , 23 , 25 , 18 , 27 , 29 , 16 , 20 , 11 , 17 , 31 , 33 , 9 , 15 , 6 , 10 , 35 ] \\\\",
    "\\notag pred    & =   [ nil , nil , nil , nil , 2 , nil , nil , 11 , 2 , 5 , 5 , nil , nil , 17 , 8 , 10 , 10 , nil ] , \\\\ \\notag\\end{aligned}\\ ] ] where the list @xmath170 carries the discovery time of each composite vertex , the list @xmath350 the respective finish time of each composite vertex , and @xmath431 the predecessor list of each composite vertex .",
    "the sub - determined dfs algorithm is presented in algorithm  [ alg : dfs_sub ] and is similar to the non sub - determined one .",
    "the main differences are at the procedure visit - dfs - sub and the call to a sub - determined bfs at line  15 of the dfs - sub function .",
    "this version for a sub - determined bfs is considered in order to determine reachability of sub - determined vertices from the root of each sub - determined dfs tree .",
    "this is necessary to prevent including vertices not reachable from the tree root in the non sub - determined mag into the dfs trees constructed by procedure visit - dfs - sub .",
    "an example of this is provided in equation  ( [ eq : res_dfs_subr ] ) .",
    "the difference in procedure visit - dfs - sub is that in addition to the root vertex for the dfs tree it also receives the reachability vector produced by the bfs .",
    "this reachability vector has one entry for each sub - determined vertex .",
    "this entry has value @xmath139 when corresponding to a reachable vertex , while entries corresponding to unreachable vertices carry value @xmath121 .    in order to determine the time complexity of algorithm  [ alg : dfs_sub ] , we consider that the sub - determined bfs executed at line  15 of function dfs - sub is done once for the root vertex of each sub - determined dfs tree .",
    "since it is executed only once for each dfs tree , we conclude that the total time expended in the sub - determined bfs algorithm is @xmath367 . since the reachability check included in function visit - dfs - sub",
    "is done by verifying the content of one entry of the reachability vector , it is done in @xmath303 and therefore does not affect the overall time complexity of the visit - dfs - sub function .",
    "therefore , since the dfs is run upon the sub - determined mag , it follows that the time complexity of doing the dfs part of the algorithm is @xmath486 . since @xmath487 and @xmath488",
    ", we conclude that the time complexity is dominated by the bfs used for the reachability determination , making the overall time complexity of algorithm  [ alg : dfs_sub ] to be @xmath367 .",
    "when applying the sub - determined dfs algorithm to the example mag  @xmath119 shown in figure  [ fig : mag_ex1_ids ] with a sub - determination @xmath458 , which drops the time aspect , the obtained result is @xmath489 \\\\ \\notag f & =    [ 1 , 9 , 4 , 7 , 8 , 11 ] \\\\",
    "\\notag pred    & = [ nil , nil , 2 , 5 , 2 , nil ] , \\\\ \\notag\\end{aligned}\\ ] ] where the list @xmath170 carries the discovery time of each sub - determined composite vertex , the list @xmath350 its finish time and @xmath431 its predecessor .    considering the mag @xmath433 shown in figure  [ fig : mag_ex2_ids ] with a sub - determination @xmath450 ,",
    "the result obtained by algorithm  [ alg : dfs_sub ] is @xmath490 \\\\",
    "\\notag f & =    [ 3 , 2 , 5 ] \\\\",
    "\\notag pred    & = [ nil , 1 , nil ] .\\end{aligned}\\ ] ] it can be seen that even though in the mag @xmath433 sub - determined by @xmath450  ( see figure  [ fig : mag_ex2_sub_ids ] ) there is a path from vertex @xmath139 to @xmath133 , vertex @xmath133 is not in the same dfs tree as vertices @xmath139 and @xmath122 , even with the dfs starting at vertex @xmath139 , as can be seen in @xmath491 $ ] .",
    "this occurs because in mag @xmath433 ( with no sub - determination ) there is no path connecting the composite vertex @xmath139 to the composite vertex  @xmath133 .",
    "the single aspect dfs is a special case of the sub - determined dfs . as such",
    ", it is evaluated using the same algorithms presented for the sub - determined case in section  [ subsec : subdfs ] .",
    "applying algorithm  [ alg : dfs_sub ] to mag  @xmath119 ( figure  [ fig : mag_ex1_ids ] ) , and employing the sub - determination @xmath481 , which drops the aspects of transit modes and time instants , the obtained result is @xmath492 \\\\ \\notag f & =    [ 5 , 4 , 3 ] \\\\",
    "\\notag pred    & = [ nil , 1 , 2 ] , \\\\",
    "\\notag\\end{aligned}\\ ] ] where the list @xmath170 carries the discovery time of each sub - determined composite vertex , the list @xmath350 its finish time , and @xmath431 its predecessor .",
    "in this paper , we have presented the algebraic representation and basic algorithms of multiaspect graphs  ( mags ) .",
    "the key contribution has been to show that models based on the mag abstraction ( formally defined in  @xcite ) can be represented by a matrix and a companion tuple .",
    "furthermore , we have also shown that any possible mag function  ( algorithm ) can be obtained from this matrix - based representation .",
    "this is an important theoretical result because it paves the way for adapting well - known graph algorithms for application in mags . in this sense , we have presented the adaptation for the mag context of basic graph algorithms , such as computing degree , bfs , and dfs . in particular , we have also presented the sub - determined versions of the same basic algorithms , showing that such versions disregard spurious paths that usually result from the sub - determination process , thus avoiding the pollution of the results with the consideration of such paths .    as future work",
    ", we intend to build upon the results here obtained for the algebraic representation and basic algorithms of mags to analyze mag properties , such as the centrality of edges , composite vertices , and aspects .",
    "we also intend to consider the dynamics encountered in these properties in the cases where one of the mag aspects represents time .",
    "finally , we are also targeting the application of the mag concept for the better understanding , modeling , and analysis of different complex networked systems found in real - world applications .",
    "this work was partially funded by the brazilian funding agencies capes ( stic - amsud program ) , cnpq , finep , and faperj as well as the brazilian ministry of science , technology , innovations , and communications  ( mctic ) .",
    "k.  wehmuth and a.  ziviani , `` distributed location of the critical nodes to network robustness based on spectral analysis , '' in _ proc . of the latin american network operations and management symposium ( lanoms ) _ , pp .  18 , ieee , oct .",
    "2011 .",
    "a.  guimares , a.  b. vieira , a.  p.  c. da  silva , and a.  ziviani , `` fast centrality - driven diffusion in dynamic networks , '' in _ proc . of the workshop on simplifying complex networks for practitioners ( simplex ) , www 2013 _ , pp .  821828 , acm , may 2013 .",
    "j.  leskovec , j.  kleinberg , and c.  faloutsos , `` graphs over time : densification laws , shrinking diameters and possible explanations , '' in _ proc . of the acm sigkdd int .",
    "conf . on knowledge discovery in data mining ( kdd )",
    "177187 , acm , aug .",
    "2005 .",
    "i.  scholtes , n.  wider , and a.  garas , `` higher - order aggregate networks in the analysis of temporal networks : path structures and centralities , '' _ the european physical journal b _ , vol .",
    "89 , pp .  115 , mar .",
    "2016 .",
    "j.  c. lucet , c.  laouenan , g.  chelius , n.  veziris , d.  lepelletier , a.  friggeri , d.  abiteboul , e.  bouvet , f.  mentre , and e.  fleury , `` electronic sensors for assessing interactions between healthcare workers and patients under airborne precautions , '' _ plos one _ , vol .  7 , p.  e37893 , may 2012",
    ".    f.  h.  z. xavier , l.  m. silveira , j.  m. almeida , a.  ziviani , c.  h.  s. malab , and h.  t. marques - neto , `` analyzing the workload dynamics of a mobile phone network in large scale events , '' in _ proc .",
    "of the first workshop on urban networking ( urbane ) , acm conext _ , pp .  3742 , acm , dec .",
    "2012 .",
    "m.  szell , r.  lambiotte , and s.  thurner , `` multirelational organization of large - scale social networks in an online world , '' _ proceedings of the national academy of sciences ( pnas ) _ , vol .",
    "107 , pp .  1363613641 , aug .",
    "2010 .        c.  sarraute , j.  brea , j.  burroni , k.  wehmuth , a.  ziviani , and j.  i. alvarez - hamelin , `` social events in a time - varying mobile phone graph , '' in _ proc . of the int .",
    "conf . on the scientific analysis of mobile phone datasets ( netmob ) _ , ( cambridge , ma , usa ) , apr .",
    "2015 .",
    "a.  sol - ribalta , m.  de domenico , n.  e. kouvaris , a.  daz - guilera , s.  gmez , and a.  arenas , `` spectral properties of the laplacian of multiplex networks , '' _ physical review e _ ,",
    "88 , p.  032807",
    ", sept . 2013",
    ".      m.  de domenico , a.  sol - ribalta , e.  cozzo , m.  kivel , y.  moreno , m.  porter , s.  gmez , and a.  arenas , `` mathematical formulation of multilayer networks , '' _ physical review x _ , vol .  3 , p.  041022",
    "m.  d. domenico , c.  granell , m.  a. porter , and a.  arenas , `` the physics of spreading processes in multilayer networks , '' _ nature physics _ , aug .",
    "article in press , doi : http://doi.org/10.1038/nphys3865 ."
  ],
  "abstract_text": [
    "<S> we present the algebraic representation and basic algorithms for multiaspect graphs  ( mags ) . </S>",
    "<S> a mag is a structure capable of representing multilayer and time - varying networks , as well as higher - order networks , while also having the property of being isomorphic to a directed graph . in particular , we show that , as a consequence of the properties associated with the mag structure , a mag can be represented in matrix form . </S>",
    "<S> moreover , we also show that any possible mag function ( algorithm ) can be obtained from this matrix - based representation . </S>",
    "<S> this is an important theoretical result since it paves the way for adapting well - known graph algorithms for application in mags . </S>",
    "<S> we present a set of basic mag algorithms , constructed from well - known graph algorithms , such as degree computing , breadth first search ( bfs ) , and depth first search ( dfs ) . </S>",
    "<S> these algorithms adapted to the mag context can be used as primitives for building other more sophisticated mag algorithms . </S>",
    "<S> therefore , such examples can be seen as guidelines on how to properly derive mag algorithms from basic algorithms on directed graph . </S>",
    "<S> we also make available python implementations of all the algorithms presented in this paper . </S>"
  ]
}
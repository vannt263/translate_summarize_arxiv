{
  "article_text": [
    "convex and concave functions appear naturally in many disciplines of science such as physics , biology , medicine , or economics , and they constitute an important part of mathematics , naturally putting forth the question of how these functions can be approximated numerically .",
    "particularly interesting instances are optimization problems where the feasible solutions are a family of convex functions . for example , let @xmath0 denote the usual sobolev space of @xmath1 functions having all weak derivatives of order up to @xmath2 in @xmath1 , and suppose @xmath3 is a convex domain . we may be interested in finding the projection of a given @xmath4 onto the set @xmath5 of convex functions in @xmath6 , @xmath7    or , given @xmath8 , we may be interested in minimizing the dirichlet functional @xmath9 over the set of convex functions @xmath10 defined in @xmath11 with @xmath12 .",
    "often the convexity requirement in applications comes from a reasonable shape assumption on the model , which could be replaced by or added to other shape constraints such as radial symmetry , harmonicity or upper and lower bounds .",
    "this is the case , for instance , of newton s problem of minimal resistance  @xcite .    more surprisingly perhaps",
    ", the convexity may be a consequence of the model , as in some mechanism design problems in economics .",
    "for example , rochet and chon  @xcite and manelli and vincent  @xcite ( among others ) study what we will call the _ monopolist problem _ , in which the functional to be maximized is the seller s expected revenue , @xmath13 where @xmath14^d$ ] is the @xmath15-dimensional unit cube , @xmath16 is a non - negative constant , @xmath17 is a probability density function on @xmath18 , and @xmath5 is the set of convex functions @xmath10 satisfying @xmath19 and @xmath20 ( component - wise ) . in this problem ,",
    "the convexity restriction comes from the requirement of incentive compatibility .",
    "we refer the interested reader to  @xcite and the references therein for further details on the model .    from a theoretical point of view , carlier and",
    "lachand - robert  @xcite obtained the @xmath21 regularity of a variant of the monopolist problem  , under some restrictions on the domain @xmath11 and the density @xmath17 .",
    "they obtained also @xmath21 regularity for convex minimizers of functionals similar to that in  , with the condition @xmath22 substituted for @xmath23 in @xmath24 .    from a numerical point of view , carlier ,",
    "lachand - robert and maury  @xcite proposed a finite element scheme for minimizers in @xmath6 or @xmath1 of functionals encompassing  , and  . in a two dimensional setting , they consider finite element functions which are the interpolants of convex functions , and show that this definition is equivalent to an intrinsic one , stated only in terms of the value of the function at the grid points . in a way , they consider ( weak ) second order pure derivatives in every possible direction allowed by the underlying grid .",
    "the problem with this description is that it is non - local , and the number of constraints needed in two dimensions ( after pruning ) reportedly grows approximately as @xmath25 , where @xmath26 is the number of nodes in the grid .",
    "moreover , their approach is very difficult to extend in practice to higher dimensions .    the work of carlier et al .",
    "@xcite includes the problem of finding @xmath27 for given @xmath28 , i.e. , a @xmath29-norm projection , and  as they point out  this problem is equivalent to that of finding the convex envelope @xmath30 of @xmath17 .",
    "thus , minimizing over convex functions and finding the convex hull of the epigraph of a function are two quite related tasks .",
    "being a central problems in computational geometry , there are a number of well established codes for finding the convex hull of a set of points in @xmath31 , which are very efficient in low dimensions .",
    "hence , it is natural to try to use these codes to approximate convex functions , an approach which lachand - robert and oudet  @xcite applied to several problems .",
    "there is a large literature on convex functions in a continuous setting , well represented by the book by rockafellar  @xcite .",
    "also the discrete mathematics community has produced quite a few definitions for convexity of functions defined on lattices ( see , e.g. , the article by murota and shioura  @xcite and the references therein ) .",
    "but in either case , the definitions are usually of a non - local nature .",
    "one of the main difficulties in obtaining discrete approximations to convex functions in dimensions higher than one , lies in giving a local and finite description of them .",
    "though this could be done for smooth functions of continuous variables by asking the hessian matrix to be positive semidefinite at all points , we know of no similar characterizations for finite element functions on meshes .",
    "this article builds on our previous work  @xcite , where we gave a theoretical framework for approximating convex functions using a finite difference discretization of the hessian matrix and semidefinite programs .",
    "let us recall that a semidefinite program is an optimization problem of the form @xmath32 where @xmath33 , @xmath34 are symmetric @xmath35 matrices , and @xmath36 indicates that the symmetric matrix @xmath37 is positive semidefinite . by letting the matrices",
    "@xmath38 be diagonal , we see that the program   is a generalization of linear programming ( and includes it strictly ) .",
    "thus , in a semidefinite program the constraints can be a mixture of linear inequalities and positive semidefinite requirements .",
    "we refer the reader to the article by vandenberghe and boyd  @xcite for further properties of semidefinite programs .    in this article",
    "we carry over the framework in  @xcite into the approximation with finite elements .",
    "we do so through a weak definition of a finite element ( fe ) hessian and corresponding definition of fe - convex functions . being the definition very natural and straightforward , the main goal of this article is to provide a solid theoretical foundation of this approach and to illustrate its applicability to a broad range of models .",
    "in contrast to finite differences , it is now very easy to adaptively refine the meshes and reduce drastically the computational effort , especially taking into account the fact that the time needed by the semidefinite programs is more than quadratic on the number of nodes .",
    "although not linear , our approach seems very natural and has many advantages .",
    "being of a local nature , the number of constraints grows only linearly with the number of nodes , and it works for any dimension of the underlying space .    the rest of this paper is organized as follows .    in section  [ sec : hessian ]",
    "we introduce the fe - hessian and fe - convex functions , discussing several related issues . we give examples and counter - examples showing how fe - convex functions relate to usual convex functions and the finite element version given by carlier et al .  @xcite",
    ".    in section  [ sec : limits ] we prove the main results of the paper .",
    "we show that , under appropriate assumptions and norm , every convex function , even if not smooth , can be approximated by a sequence of fe - convex functions , and that the limit of every convergent sequence of fe - convex functions ( with space discretization parameter going to zero ) is a convex function .",
    "we also show some compactness results , such as that a ( norm ) bounded sequence of fe - convex functions has a convergent subsequence ( to a convex function ) .    in section  [ sec : approximating ] we show how the previous results may be used to approximate many optimization problems , providing a general framework for the numerical treatment of optimization problems over convex functions , and prove some theoretical results supporting the potential applicability to a broad range of concrete problems .",
    "we do not focus here on a specific problem , and thus our convergence results will not provide convergence rates , since these depend on the regularity properties of the exact solutions , and other features of the particular problem at hand .",
    "in section  [ sec : numerical ] we discuss the actual numerical implementation , and give concrete examples of the monopolist problem  , and the dirichlet integral  .",
    "we conclude by summing up and commenting on the results we found .",
    "there are two main issues when defining the set of discrete approximants to be used :    it must be rich enough to approximate every convex function , and    it must be not too large , to avoid convergence to non - convex functions .",
    "the first point is very natural , and necessary to be able to approximate the solution of the problem .",
    "the second point looks artificial at first sight , but if it did not hold , a sequence of functions in this kind of sets could converge to a non - convex function .    on one hand , as noted by p. chon in his ph.d .",
    "thesis  @xcite , the affine lagrange interpolant of a convex function need not be convex .",
    "consider for instance a regular diagonal mesh as shown to the left in figure  [ fig : diagonal ] , and suppose @xmath39 .",
    "the interpolant on this mesh of the quadratic convex function @xmath40 , shown to the right of that figure , is clearly not convex .",
    "+ ( a ) regular diagonal mesh .",
    "+ ( b ) interpolant of @xmath40 .    on the other hand , if we consider a convergent sequence of convex piecewise linear functions on a sequence of meshes like those of figure  [ fig : diagonal ] , with mesh size tending to zero , then the limit will satisfy @xmath41 this is a consequence of proposition  1 in  @xcite , which was first proved in  @xcite .",
    "it clearly indicates that not all convex functions can be approximated by discrete functions that are convex in the usual sense , i.e. , the definition of the discrete approximants to convex functions needs to be more involved .    in order to proceed ,",
    "we briefly review some concepts and set some notation .",
    "if @xmath11 is a bounded open convex set in @xmath31 ( @xmath42 ) , @xmath43 and @xmath44 , the hessian @xmath45 is defined as the matrix whose @xmath46 entry is the second order partial derivative of @xmath10 in the directions @xmath47 and @xmath48 , @xmath49 as is well known , @xmath43 is convex if and only if @xmath50 is positive semidefinite everywhere in @xmath11 , in symbols @xmath51    when @xmath10 is not smooth enough , we may nevertheless consider the hessian in the distribution sense .",
    "in other words , we may define @xmath50 as a matrix of distributions such that for every @xmath52 , @xmath53 is the matrix of numbers @xmath54    in 1971 , dudley  @xcite proved that if @xmath10 is a distribution on @xmath11 such that @xmath55 then @xmath10 belongs to the ( lebesgue ) equivalence class of a continuous convex function in @xmath11 .",
    "conversely , if @xmath10 is a convex continuous function then   holds ( in the distribution sense ) .    by allowing some smoothness on @xmath10 ,",
    "say @xmath56 , we may rewrite   and interpret @xmath50 as a matrix of distributions @xmath57 satisfying @xmath58 in this case , the equality in   also holds for all @xmath59 , and dudley s results imply that given @xmath56 , @xmath10 is a continuous convex function in @xmath11 if and only if @xmath60 where for convenience , for @xmath56 and @xmath61 , we have denoted by @xmath62 the matrix whose @xmath46 entry is @xmath63    it is then natural to define a discrete hessian in the finite element setting along these lines .",
    "to do so , it will be convenient to use two different families of finite element basis functions .",
    "the first one , @xmath64 indexed by @xmath65 , will be used for approximations , and the second one , @xmath66 indexed by @xmath67 , will be used as test functions , and we will assume that @xmath68    @xmath69 and @xmath70 will denote the ( real ) linear spaces spanned by @xmath64 and @xmath71 , respectively , and again for simplicity we will assume @xmath72 and @xmath73 .",
    "@xmath74 will denote , as usual , a discretization parameter , equivalent to the maximum diameter of the elements of the underlying grid .    for @xmath75 and each @xmath67",
    ", we define the _ fe - hessian ( of @xmath10 with respect to @xmath76 ) _ , @xmath77 , by @xmath78 and in particular , if @xmath79 , we define @xmath80 so that @xmath81    we are now in a position to state the following    [ def : discrete ] we will say that @xmath75 is _ fe - convex ( with respect to @xmath64 and @xmath71 ) _ if @xmath82    if @xmath75 is convex in the usual sense , and the conditions   hold , by dudley s results in the form  , @xmath83 for all @xmath67 .",
    "therefore , convex functions in @xmath69 are fe - convex .    as was shown in the example of figure  [ fig : diagonal ] , the interpolant of a continuous convex function need not be convex . however , as we will see next , in that example the interpolant is fe - convex , and therefore in general fe - convexity does not imply convexity .",
    "[ example : diagonal]let us consider a regular diagonal mesh in @xmath84 , as shown in figure  [ fig : diagonal ] , let @xmath74 be the length of the shorter sides of the triangles , and let @xmath69 and @xmath70 consist of piecewise linear functions .",
    "a simple calculation shows that , if @xmath85 and @xmath86 is the function which equals @xmath87 on the interior node with coordinates @xmath88 and vanishes in the other mesh nodes , then @xmath89 where @xmath90    if @xmath91 is the lagrange interpolant of the quadratic function @xmath92 , another simple calculation shows that @xmath93 so that @xmath91 is fe - convex but it is not convex as we know from figure  [ fig : diagonal ] .",
    "it is worth noticing that , in general , it is not true that the interpolant of a convex function is fe - convex , even for some highly regular meshes . in order to illustrate this ,",
    "we have sketched some common patterns of regular meshes in figure  [ fig : mesh : other ] .",
    "it can be readily seen that the example  [ example : diagonal ] for the diagonal mesh in figure  [ fig : diagonal](a ) can be carried over to the `` chevron '' or `` alternating '' mesh . however , the behavior is quite different for the `` crisscross '' and `` union jack '' patterns .     + ( a ) chevron or alternating .",
    "+ ( b ) crisscross .",
    "+ ( c ) union jack    [ example : unionjack:1]consider as in the previous example @xmath84 , but now a regular `` union jack '' mesh in @xmath11 as shown in figure  [ fig : mesh : other](c ) .",
    "as before , let @xmath74 be the length of the shorter sides of the triangles , and let @xmath69 and @xmath70 consist of piecewise linear functions .    in this mesh , the nodes inside @xmath11 can have either @xmath94 or @xmath95 neighbors .",
    "if @xmath88 is a mesh node having @xmath94 neighbors and @xmath76 is the corresponding nodal basis function , for @xmath85 we now have @xmath89 where @xmath96    if @xmath91 is the interpolant of the quadratic function @xmath97 , we see that @xmath98 so that @xmath91 is _ not _ fe - convex .",
    "similar examples can be constructed for the `` crisscross '' meshes since these are essentially @xmath99 rotations of `` union jack '' meshes .",
    "we conclude from these examples that our concept of fe - convex functions neither contains nor is contained in that of  @xcite .",
    "however , as we show in the next section , these concepts have many common features .",
    "having defined fe - convexity through a discrete hessian , we would like to see how these concepts may be used to approximate convex functions .",
    "the first decision we have to make is in what sense the approximation will be done . by the very definition of the fe - hessian in  ,",
    "it is natural to consider the approximation in the @xmath100 sense , and this is what we will do , but of course other spaces could be used . in particular , even when working with approximations in @xmath6 , we will make use of the spaces @xmath101 consisting of the functions having at least @xmath2 weak derivatives in @xmath102 .    on the other hand",
    ", it will be convenient to work with a sequence of finer and finer meshes , @xmath103 , with @xmath104 as @xmath105 .",
    "however , so as not to clutter the notation , we will drop the index @xmath106 , and we will also assume @xmath107 .",
    "we are confronted now with several tasks :    suppose @xmath108 is a sequence , @xmath109 , of fe - convex functions @xmath110 , and suppose that , as @xmath109 , @xmath91 has a @xmath6 weak limit @xmath56 .",
    "is @xmath10 convex ?    given a bounded sequence @xmath111 with @xmath91 fe - convex in @xmath69 .",
    "is there a convergent subsequence ?    recalling chon s observations and the example in figure  [ fig : diagonal ] , can _ any _ convex function in @xmath6 be approximated as much as desired ( in that space ) by fe - convex functions ( for appropriate @xmath69 and @xmath70 ) ?    the first two issues will be covered by theorem  [ theorem : fem:1 ] and corollary  [ coro : fem:1 ] . the last issue will be covered by theorem  [ theorem : fem:2 ] , but it is somewhat different in flavor from the previous results , since we will need some properties of the approximating spaces @xmath69 .",
    "these will depend on the choice of the finite element families , which can vary widely .",
    "since it is not our purpose in this paper to present the results under the most general conditions , for simplicity we will restrict our attention to @xmath112 lagrange elements , hoping that the interested reader will be able to adapt the proof of theorem  [ theorem : fem:2 ] to other families .",
    "we start by observing that if @xmath11 is any convex domain , then the convex functions in @xmath6 may be approximated by smooth convex functions :    [ lemma : cinfty ] suppose @xmath11 is a bounded convex open subset of @xmath31 . if @xmath10 is a convex function in @xmath6 , for any @xmath113 there exists a convex @xmath114 such that @xmath115    let @xmath116 , @xmath117 , with support inside @xmath118 and @xmath119 , and for @xmath120 consider the mollifier @xmath121 which is well defined in @xmath122 where @xmath123 is the distance from @xmath124 to the set @xmath37 .",
    "as is well known , @xmath125 , and since @xmath10 is convex and @xmath126 is an average with non - negative weights , @xmath126 is convex in @xmath127 . for @xmath128",
    "fixed , @xmath126 converges to @xmath10 in @xmath129 as @xmath130 , and moreover @xmath131 if @xmath132 .",
    "thus the result is true for @xmath133 for every @xmath128 .    given its geometry , it is easy to obtain the result for @xmath11 by using suitable dilations .",
    "for instance , pick @xmath134 and consider for @xmath135 , the set @xmath136 , and for @xmath10 defined on @xmath11 consider @xmath137 defined on @xmath138 by @xmath139 .",
    "then @xmath138 is convex , @xmath140 as @xmath141 , and if @xmath10 is convex in @xmath11 then @xmath137 is convex in @xmath138 .",
    "thus , fixing first @xmath142 so that @xmath143 then @xmath128 so that @xmath144 and finally @xmath120 so that @xmath145 we have @xmath146    from now on we will assume that we have a sequence of meshes @xmath147 , with @xmath109 , each consisting of a family @xmath148 of non - overlapping closed @xmath15-dimensional simplices such that for each @xmath74 , @xmath149 .",
    "this implies that @xmath11 is the interior of a polyhedron ( intersection of finitely many half - spaces ) .",
    "recalling that we are thinking of a hierarchical sequence of meshes and we require the non - negativity condition  , we now make some additional assumptions on the meshes and discrete spaces we will work with , following chapter  4 of the book by brenner and scott  @xcite .",
    "[ assumptions ] we will denote by @xmath150 the lebesgue measure of @xmath37 , and indicate by @xmath151 that for some positive constants @xmath152 and @xmath153 ( independent of @xmath74 and @xmath10 ) we have @xmath154 ,    1 .   for all @xmath155 , @xmath156 and @xmath157 .",
    "[ assumption : vh : interp ] there exists a linear operator @xmath158 with values in @xmath69 ( the _ interpolant _ ) , an integer @xmath159 , and a constant @xmath160 independent of @xmath10 and @xmath74 , such that @xmath161 + in particular , @xmath162 is dense in @xmath6 .",
    "[ assumption : wh:0 ] condition   holds , i.e. @xmath163 4 .",
    "[ assumption : wh:1 ] given @xmath164 and @xmath165 , for every @xmath166 there exist coefficients @xmath167 such that @xmath168 5 .",
    "[ assumption : wh:2 ] given @xmath52 , @xmath169 , there exists a sequence @xmath170 converging to @xmath171 in @xmath172 such that @xmath173 with @xmath174 for all @xmath74 in the sequence and @xmath67 .",
    "+ in particular , @xmath175 is dense in @xmath176 .",
    "[ assumption : wh:3 ] for all @xmath74 , @xmath177    these conditions will be satisfied for quasi - uniform families , taking @xmath112 lagrange elements with polynomials of degree less than @xmath178 for the trial space @xmath69 , and piecewise linear elements for the test space @xmath70 .",
    "the assumptions also hold choosing @xmath70 as the finite element space of continuous piecewise polynomial functions of any fixed degree .",
    "assumption  [ assumptions].[assumption : wh:2 ] is guaranteed because @xmath70 will always contain the piecewise linear finite element functions .",
    "the only detail to take into account is the choice of the basis functions in order to fulfill assumption  [ assumptions].[assumption : wh:0 ] . if the degree is bigger than one , we can not use as @xmath179 the canonical nodal basis functions of @xmath70 , because some of them change sign .",
    "the construction is still possible though ( see section  [ sec : implementation ] for details ) .",
    "the following is one of the main results of the paper .",
    "[ theorem : fem:1 ] let @xmath180 be a sequence converging weakly in @xmath6 to @xmath10 as @xmath109 , such that for each @xmath74 , @xmath110 and @xmath181    then @xmath10 is convex .    by assumption  [ assumptions].[assumption : wh:1 ] , for arbitrary but fixed @xmath164 and @xmath182 , and any @xmath183 we may find coefficients @xmath174 so that @xmath184 .    therefore ,",
    "since @xmath185 for every @xmath67 , setting @xmath186 we obtain @xmath187    given that @xmath91 converges weakly in @xmath6 to @xmath10 , we now have @xmath188 and finally , by assumption  [ assumptions].[assumption : wh:2 ] , @xmath189 for all non - negative @xmath52 , and the theorem follows by dudley s results  .",
    "since the unit ball in @xmath6 is weakly compact , we have :    [ coro : fem:1 ] let @xmath111 be a bounded sequence in @xmath6 such that for every @xmath74 the function @xmath85 is fe - convex .",
    "then there exists a subsequence that converges weakly in @xmath6 to some function @xmath56 , and this function is necessarily convex .",
    "this theorem and its corollary answer the first two issued raised at the beginning of this section . in order to proceed further , and answer the last one",
    ", we will need the following result by hoffman and wielandt  @xcite :    [ theorem : h - w ] there exists a positive constant @xmath190 , depending only on the dimension @xmath15 , such that if @xmath191 $ ] and @xmath192 $ ] are symmetric @xmath193 matrices , and @xmath194 and @xmath195 are their minimum eigenvalues , then @xmath196    the following is the second main result and responds the third issue raised at the beginning of this section .    [",
    "theorem : fem:2 ] if @xmath197 , given @xmath56 , @xmath10 convex and @xmath113 , there exist @xmath198 and @xmath199 such that @xmath200 and @xmath201    by lemma  [ lemma : cinfty ] , it will be enough to assume that @xmath10 is a @xmath202 convex function .    in the sequel",
    "we will denote by @xmath160 , @xmath203 or @xmath204 , positive constants which may vary from one occurrence to another , even in the same line , which may depend on @xmath10 ( which we consider fixed from now on ) , @xmath11 , the dimension @xmath15 and the regularity degree @xmath178 , but are independent of @xmath74 .",
    "for instance , we write @xmath205    let us consider the auxiliary function @xmath206 which is a convex @xmath207 function .",
    "the regular hessian of @xmath208 , @xmath209 , is @xmath210 and therefore , for any @xmath211 , @xmath212 and in particular , @xmath213    for @xmath214 and @xmath74 positive and small , let @xmath215 where @xmath158 denotes the interpolant considered in assumption  [ assumptions].[assumption : vh : interp ] .",
    "we notice that since the third derivatives of @xmath208 vanish , @xmath74 is bounded and @xmath216 , @xmath217 and @xmath218    thus , if @xmath219 is small enough ( depending on @xmath220 ) , we obtain the first inequality of the theorem .    in order to see that @xmath221 , we first look at the eigenvalues of @xmath222 for @xmath67 . if @xmath223 , using that @xmath10 is convex and smooth , equation  , and the bounds in assumption  [ assumptions].[assumption : wh:3 ] , we obtain @xmath224 and therefore the eigenvalues of @xmath222 are bounded below by @xmath225    in order to compare the entries of @xmath226 and @xmath227 , we use assumptions  [ assumptions].[assumption : wh:3 ] and  [ assumptions].[assumption : vh : interp ] to obtain @xmath228 thus we may use theorem  [ theorem : h - w ] and the bounds   and   to obtain that the eigenvalues of @xmath227 are bounded below by @xmath229    the theorem follows now by taking @xmath230 if @xmath197 , and at the same time @xmath231 small .",
    "the condition @xmath197 in theorem  [ theorem : fem:2 ] implies that the functions in @xmath69 will have to be piecewise polynomials of degree at least @xmath232 , meaning that the result may not hold for linear finite elements .",
    "this does not seem quite satisfactory , and we need to elaborate on the necessity of this condition .",
    "as we have seen in example  [ example : diagonal ] , for meshes such as those of figure  [ fig : diagonal](a ) or figure  [ fig : mesh : other](a ) , if we use piecewise linear functions for the space @xmath69 ( @xmath233 ) , the discrete hessian becomes a finite difference scheme ( except for a factor of @xmath234 ) which is exact for quadratic functions .",
    "the results presented in  @xcite can be adapted to show that in this case theorem  [ theorem : fem:2 ] also holds for @xmath235 .    on the other hand ,",
    "as we have seen in example  [ example : unionjack:1 ] , the discrete hessian with piecewise linear functions for very regular meshes such as those in figure  [ fig : mesh : other](b ) or ( c ) is not exact for quadratic functions , which means that we may not be able to get good approximations .",
    "in the following example we report numerical evidence supporting the necessity of assuming @xmath236 in theorem  [ theorem : fem:2 ] .",
    "[ example : unionjack:2]we compute the @xmath237-projection of the smooth convex function @xmath238 onto the set of continuous piecewise linear functions that are fe - convex over criss - cross meshes , as those obtained using longest - edge or newest - vertex bisection .",
    "since @xmath10 is convex , the projections @xmath91 should converge to @xmath10 as @xmath239 , but this is not the case in this example .    in figure",
    "[ fig : noconv ] we can observe a sequence of meshes and the level curves of the @xmath29-projection of @xmath10 into the set of fe - convex piecewise linear functions on each mesh .",
    "the level curves of the exact function @xmath10 , which is convex , are straight lines parallel to the line @xmath240 .",
    "nevertheless , the level curves of the approximants converge to ellipses which do not straighten up by refinement .",
    "this is a clear indication that @xmath241 does not converge to @xmath10 as @xmath242 .",
    "we remark that the same behavior is observed when projecting in @xmath100 , @xmath243 and @xmath244 , and even when imposing boundary values .",
    "summing up : although there is some sort of super - convergence for some meshes , for general meshes  even highly regular  fe - convex piecewise _ linear _ functions may not suffice to approximate convex functions .",
    "-projection into fe - convex piecewise linear functions ( bottom ) .",
    "the level curves of the projected function  which is already convex and should be the limit of the discrete ones  are straight lines , which are not reproduced by the approximants .",
    "the meshes have 256 , 1024 , and 4096 elements.,title=\"fig:\"]-projection into fe - convex piecewise linear functions ( bottom ) .",
    "the level curves of the projected function  which is already convex and should be the limit of the discrete ones  are straight lines , which are not reproduced by the approximants .",
    "the meshes have 256 , 1024 , and 4096 elements.,title=\"fig:\"]-projection into fe - convex piecewise linear functions ( bottom ) .",
    "the level curves of the projected function  which is already convex and should be the limit of the discrete ones  are straight lines , which are not reproduced by the approximants .",
    "the meshes have 256 , 1024 , and 4096 elements.,title=\"fig : \" ] + -projection into fe - convex piecewise linear functions ( bottom ) .",
    "the level curves of the projected function  which is already convex and should be the limit of the discrete ones  are straight lines , which are not reproduced by the approximants .",
    "the meshes have 256 , 1024 , and 4096 elements.,title=\"fig:\"]-projection into fe - convex piecewise linear functions ( bottom ) .",
    "the level curves of the projected function  which is already convex and should be the limit of the discrete ones  are straight lines , which are not reproduced by the approximants .",
    "the meshes have 256 , 1024 , and 4096 elements.,title=\"fig:\"]-projection into fe - convex piecewise linear functions ( bottom ) .",
    "the level curves of the projected function  which is already convex and should be the limit of the discrete ones  are straight lines , which are not reproduced by the approximants .",
    "the meshes have 256 , 1024 , and 4096 elements.,title=\"fig : \" ]",
    "we are now in position to apply finite element approximations to a wide class of optimization problems on convex functions .",
    "let us describe this technique by assuming , for instance , that the functional @xmath245 is defined and continuous on @xmath6 , and we are interested in the optimization problem @xmath246 where @xmath5 is a family of convex functions , @xmath247 .",
    "using theorem  [ theorem : fem:2 ] , it may be not too difficult to define for each @xmath198 a family @xmath248 , and a functional @xmath249 defined on @xmath250 , such that :    @xmath251 for all @xmath252 and @xmath253 ,    for any @xmath254 and any @xmath113 , there exists @xmath198 and @xmath255 such that @xmath256 .    under the previous conditions , it is easy to prove that ( cf .",
    "@xcite ) @xmath257    as a concrete example , suppose that @xmath5 is the set of all convex functions in @xmath6 with a given mean value , or some prescribed boundary values , @xmath4 , and the continuous problem consists in finding @xmath258 such that @xmath259 i.e. , minimizing @xmath260 over @xmath5 .    in order to compute an approximation of @xmath10 we may thus consider @xmath250 as the set of discrete functions @xmath261 with @xmath262 for all @xmath67 , which also satisfy the integral or boundary constraints .    assuming exact integration we can set @xmath263 , or otherwise , @xmath264 may result from some fixed quadrature rule on the elements of the mesh . in both cases",
    "it is easy to see that the previous assumptions hold , and thus the discrete minimizers @xmath265 provide a convergent ( sub)sequence to the exact solution @xmath10 .",
    "the numerical examples were implemented using the finite element toolbox  @xcite for assembling the optimization problem , and csdp  @xcite for solving the corresponding semidefinite programs .",
    "the experiments were run on a desktop pc with a 2.8  ghz intel pentium iv processor and 2 gb of ram .    in our experiments we used lagrange finite elements of polynomial degree @xmath232 for both @xmath69 and @xmath70 , over simplicial meshes , but",
    "the right choice might depend on the precise problem at hand .",
    "regarding the implementation in , we had to introduce some modified basis functions when using quadratic finite elements as test functions in @xmath70 .",
    "the canonical nodal basis functions associated with the vertices of the elements change sign , and the theory requires that the test functions be non - negative . to do this , we considered the usual piecewise _ linear _ nodal basis functions for the vertices , whereas for the nodes that correspond to the midpoints of the edges we used the usual quadratic bubbles , which are obtained as the product of the two linear basis functions that correspond to the vertices of the edge .    in the initial experiments we observed some oscillations at the boundary , but they ceased to appear when we incorporated into the test space the basis functions corresponding to the boundary nodes , enlarging @xmath70 so that it is no longer a subset of @xmath172 . in this case ,",
    "formula   was transformed into @xmath266 where @xmath267 denotes the @xmath268-th component of the outward unit normal to @xmath269 .",
    "this slight modification still leads to the same theoretical results of the previous sections .",
    "we decided to present them assuming zero boundary values for the test functions , in order to keep the presentation clearer .      in the examples that follow",
    ", we always considered the minimization of functionals of the form @xmath270 where @xmath271 , @xmath272 , @xmath273 , @xmath274 , @xmath275 , and @xmath17 are given functions on @xmath11 .",
    "appropriate choices of these functions lead to functionals whose minima are the @xmath1- or the @xmath6-projection of a function , or the solutions to problems  , or  . the approximate functional @xmath264 results from applying some fixed quadrature rule on the elements of the mesh .    in order to model this problem as a semidefinite program on each given mesh",
    ", we used a fixed quadrature rule ( exact for polynomials of degree @xmath276 ) over the elements of the mesh and approximated the functional by @xmath277,\\end{gathered}\\ ] ] where @xmath47 , @xmath278 , @xmath279 are the quadrature points and weights , respectively .",
    "the minimization of @xmath249 was then modeled by adding @xmath280 auxiliary variables",
    "@xmath281 , @xmath282 , @xmath279 , @xmath283 , as @xmath284\\ ] ] subject to @xmath285 for @xmath279 , and @xmath283 , plus the convexity constraints . in turn , the constraints involving squares are modeled , respectively , by @xmath286   \\succeq 0\\ ] ] and @xmath287   \\succeq 0.\\ ] ]      in order to take full advantage of the flexibility of finite elements , we included some adaptivity into our algorithms , which was implemented as a loop of the form  @xcite @xmath288 the step solve consisted in solving the resulting semi - definite programs using csdp .",
    "having computed the discrete solution @xmath91 , the step estimate consisted in estimating the error distribution over the triangulation @xmath148 in the following way : we defined for each @xmath289 the quantity @xmath290",
    "\\|_{l^2(\\partial t)}$ ] , where @xmath291_{|s}$ ] denotes the jump of @xmath292 over the inter - element sides @xmath293 and is defined as zero at boundary sides .",
    "this quantity @xmath294 is the dominating part of the residual - type a posteriori error estimator for poisson s problem , and we used it as a heuristic indicator of the error .",
    "further studies are necessary in order to develop rigorous upper and lower bounds for the error in this type of problems , an open question which is out of the scope of this article ; we introduced a heuristic error estimator here just to show the power of finite elements and the great improvement in performance that adaptivity can provide .",
    "the step mark , consisted in marking ( selecting for refinement ) all the elements whose indicators satisfied @xmath295 , where @xmath296 .",
    "the step refine was implemented using the standard routines of , which perform newest - vertex bisection , guaranteeing a uniform shape - regularity constant .",
    "[ example : monopolist]in this example we apply our algorithm to solve the monopolist problem  , for @xmath297 , @xmath298 and @xmath299 . in this case",
    "the exact solution is known to be @xmath300 where @xmath301 and @xmath302 , and allows us to compute the true error .",
    "the method is applied using quadratic elements both in the trial and test spaces . in figure",
    "[ fig : monopolist ] we show a sequence of solutions using adaptive meshes , and in table  [ tab : monopolist ] we can observe the error . in figure  [ fig : monopolist - final ] we show the final mesh , approximate and exact solution , after 6 iterations . in order to illustrate the performance of the adaptive method",
    ", we also include in table  [ tab : monopolist - unif ] the errors and cpu - times obtained with uniform meshes .",
    "the reported cpu - times correspond to the time taken by csdp to find the minimum of the functional on the given mesh . to be fair in the comparison",
    ", we should look at the cumulative sum of the cpu - times , since the whole adaptive process is necessary in order to arrive at the graded meshes .",
    "+     -error between the approximate and exact solution is @xmath303 . to obtain a similar error with uniform",
    "meshes , more than 4096 elements and 8321 dofs are needed , which forces csdp to work more than 7000 seconds ( see table  [ tab : monopolist - unif]).,title=\"fig:\"]-error between the approximate and exact solution is @xmath303 . to obtain a similar error with uniform meshes , more than 4096 elements and 8321 dofs are needed , which forces csdp to work more than 7000 seconds ( see table  [ tab : monopolist - unif]).,title=\"fig:\"]-error between the approximate and exact solution is @xmath303 . to obtain a similar error with uniform meshes , more than 4096 elements and 8321 dofs are needed , which forces csdp to work more than 7000 seconds ( see table  [ tab : monopolist - unif]).,title=\"fig : \" ]        ' '' ''    elements & dofs & cpu - time & @xmath29-error & @xmath243-error +    ' '' ''    16 & 41 & 0.00 & 0.06371 & 0.11168 + 54 & 123 & 1.00 & 0.01597 & 0.06214 + 140 & 299 & 11.00 & 0.00935 & 0.02589 + 248 & 519 & 25.00 & 0.01075 & 0.01553 + 388 & 799 & 59.00 & 0.01023 & 0.01633 + 542 & 1117 & 94.00 & 0.01085 & 0.01529 + 802 & 1641 & 211.00 & 0.00192 & 0.00846 +     + ( a ) +        ' '' ''    elements & dofs & cpu - time & @xmath29-error & @xmath243-error +    ' '' ''    16 & 41 & 1 & 0.06371 & 0.11168 + 64 & 145 & 2 & 0.01644 & 0.06250 + 256 & 545 & 22 & 0.01202 & 0.02347 + 1024 & 2113 & 343 & 0.01091 & 0.01780 + 4096 & 8321 & 7211 & 0.01270 & 0.03508 +     + ( b )    [ tab : monopolist - unif ]    [ example : caffa]in this example",
    "we apply our algorithm to minimize the functional defined in   over the set of convex functions in @xmath304 ( cf .",
    "we consider @xmath305 and    @xmath306        in figure  [ fig : caffa ] we show the outcome of our method using adaptivity .",
    "we can observe that the solution _ tries _ to satisfy @xmath307 in places where @xmath308 , and it continues to be convex outside that region , minimizing @xmath309 . in the lower part of the domain ( around the point @xmath310 ) , the solution @xmath10 satisfies @xmath307 and on the boundary , the natural homogeneous neumann boundary conditions @xmath311 are satisfied .",
    "this can be seen by the fact that the level curves are perpendicular to the boundary in that part of @xmath312 . in the upper part of the domain",
    "the solution is just linear ( ruled surface ) , which is a consequence of the fact that the laplacian of @xmath10 has to be non - negative and as close to @xmath313 as possible , keeping @xmath10 convex over the whole domain .",
    "( left ) , @xmath314 ( middle ) , and @xmath315 ( right).,title=\"fig : \" ] ( left ) , @xmath314 ( middle ) , and @xmath315 ( right).,title=\"fig : \" ] ( left ) , @xmath314 ( middle ) , and @xmath315 ( right).,title=\"fig : \" ] +   ( left ) , @xmath314 ( middle ) , and @xmath315 ( right).,title=\"fig : \" ] ( left ) , @xmath314 ( middle ) , and @xmath315 ( right).,title=\"fig : \" ] ( left ) , @xmath314 ( middle ) , and @xmath315 ( right).,title=\"fig : \" ]    the adaptive method correctly captures the region where @xmath10 is flat , representing the solution with a minimal number of elements .",
    "we have proposed a novel way of imposing convexity on finite element functions , and proved that this new definition solves the two issues necessary for the approximation of optimization problems over convex functions :      our definition takes advantage of the existence of efficient codes for solving semidefinite programs , and uses a new definition of discrete hessians , which is based upon a weak hessian for @xmath100 functions .",
    "one interesting aspect is that the definition is intrinsic , i.e. , it only uses the values of the discrete functions at the nodes , and _ local _ , leading to a set of constraints with cardinality of order @xmath316 , @xmath26 being the number of vertices or nodes of the mesh .",
    "furthermore , it is very simple to program in any space dimension .",
    "another interesting  and puzzling ",
    "issue is the fact that , in general , except for some particular very regular meshes , the discrete functions need to have an approximation order higher than the one provided by linears .",
    "our proof requires this assumption , and we found numerical evidence that this is necessary , but a better explanation / understanding of this issue is still pending .    numerical experiments show a competitive performance , specially through the use of adaptivity , which , in turn , is easy to implement for finite elements .",
    "our preliminary computations using a heuristic error indicator are promising , but a lot needs to be done in this direction , namely , to find a posteriori error indicators which are reliable and efficient , and once this is established , to prove convergence , and optimality .",
    "these are difficult open questions that will be subject of future research .",
    "k. murota , a. shioura : relationship of m-/l - convex functions with discrete convex functions by miller and by favati - tardella .",
    "_ discrete appl .",
    "_ * 115 * ( 2001 ) 151176 .",
    "rochet , p. chon : ironing , sweeping and multidimensional screening .",
    "_ econometrica _ * 66 * ( 1998 ) 783826 ."
  ],
  "abstract_text": [
    "<S> many problems of theoretical and practical interest involve finding a convex or concave function . </S>",
    "<S> for instance , optimization problems such as finding the projection on the convex functions in @xmath0 , or some problems in economics .    in the continuous setting and assuming smoothness , the convexity constraints may be given locally by asking the hessian matrix to be positive semidefinite , but in making discrete approximations two difficulties arise : the continuous solutions may be not smooth , and an adequate discrete version of the hessian must be given . in this paper </S>",
    "<S> we propose a finite element description of the hessian , and prove convergence under very general conditions , even when the continuous solution is not smooth , working on any dimension , and requiring a linear number of constraints in the number of nodes .    </S>",
    "<S> using semidefinite programming codes , we show concrete examples of approximations to optimization problems .    </S>",
    "<S> finite element method , optimization problems , convex functions , adaptive meshes .    65k10 , 65n30 . </S>"
  ]
}
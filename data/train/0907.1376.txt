{
  "article_text": [
    "a _ latin bitrade _ @xmath0 is a pair of partial latin squares which are disjoint , occupy the same set of non - empty cells , and whose corresponding rows and columns contain the same set of entries .",
    "one of the earliest studies of latin bitrades appeared in  @xcite , where they are referred to as _ exchangeable partial groupoids_. latin bitrades are prominent in the study of _ critical sets _ , which are minimal defining sets of latin squares ( @xcite,@xcite,@xcite ) and the intersections between latin squares ( @xcite ) .",
    "a genus may be associated to a latin bitrade , and those of genus zero are known as _",
    "spherical _ latin bitrades . in this paper",
    "we report on the enumeration of the number of @xmath2-isomorphism classes of spherical latin bitrades up to size @xmath3 .    for completeness",
    "we note that separated spherical latin bitrades are equivalent to cubic @xmath4-connected bipartite planar graphs  @xcite",
    ". our enumeration method does not consider equivalences where rows , columns , and symbols change their roles ( this corresponds to changing the @xmath4-colouring of the related cubic 3-connected bipartite graph ) , nor does it consider equivalences where @xmath0 and @xmath5 are equivalent ( this corresponds to changing the @xmath6-colouring of the related cubic 3-connected bipartite graph ) . thus our enumeration method counts a larger class of combinatorial objects compared to the method in  @xcite .",
    "a _ partial latin square _ @xmath7 of order @xmath8 is an @xmath9 array where each @xmath10 appears at most once in each row , and at most once in each column .",
    "a _ latin square _ @xmath11 of order @xmath8 is an @xmath9 array where each @xmath10 appears exactly once in each row , and exactly once in each column .",
    "it is convenient to use setwise notation to refer to entries of a ( partial ) latin square , and we write @xmath12 if and only if symbol @xmath13 appears in the intersection of row @xmath14 and column @xmath15 of @xmath7 . in this manner , @xmath16 for finite sets @xmath17 , each of size @xmath18 .",
    "it is also convenient to interpret a ( partial ) latin square as a multiplication table for a ( partial ) binary operator @xmath19 , writing @xmath20 if and only if @xmath21 .    [ defnbitradea123 ] let @xmath22 , @xmath23 be two partial latin squares . then @xmath0 is a _ bitrade _ if the following three conditions are satisfied :    * @xmath24 ; * for all @xmath25 and all @xmath26 , @xmath27 , @xmath28 , there exists a unique @xmath29 such that @xmath30 and @xmath31 ; * for all @xmath32 and all @xmath26 , @xmath27 , @xmath28 , there exists a unique @xmath33 such that @xmath30 and @xmath31 .    conditions  ( r2)and ( r3)imply that each row ( column ) of @xmath22 contains the same subset of @xmath34 as the corresponding row ( column ) of @xmath35 .",
    "a bitrade @xmath0 is _ indecomposable _ if whenever @xmath36 is a bitrade such that @xmath37 and @xmath38 , then @xmath39 .",
    "bijections @xmath40 , for @xmath41 , @xmath6 , @xmath4 , give an _ isotopic _ bitrade , and permuting each @xmath17 gives an _",
    "autotopism_. we refer to the bijections @xmath42 , @xmath43 , @xmath44 as an _",
    "isotopism_.    in  @xcite there is a representation of bitrades in terms of three permutations @xmath45 acting on a finite set ( see also  @xcite for another proof ) . for @xmath46 , define the map @xmath47 where @xmath48 if and only if @xmath49 and @xmath50 for @xmath51 . by definition  [ defnbitradea123 ] each @xmath52 is a bijection . then @xmath53 are defined by @xmath54 we refer to @xmath55 $ ] as the @xmath45 _",
    "representation_. we write @xmath56 for the set of points that the ( finite ) permutation @xmath57 acts on .",
    "generally we will assume that a bitrade is _ separated _ , that is , each row , column , and symbol is in bijection with a cycle of @xmath58 , @xmath59 , and @xmath60 , respectively .",
    "[ defnt1234 ] let @xmath58 , @xmath59 , @xmath60 be ( finite ) permutations and let @xmath61 .",
    "define four properties :    1 .",
    "@xmath62 ; 2 .",
    "if @xmath63 is a cycle of @xmath45 and @xmath64 is a cycle of @xmath65 then @xmath66 , for any @xmath67 ; 3 .",
    "each @xmath45 is fixed - point - free ; 4 .",
    "the group @xmath68 is transitive on @xmath69 .    by letting @xmath17",
    "be the set of cycles of @xmath45 , we have the following theorem , which relates definition  [ defnbitradea123 ] and  [ defnt1234 ] .    [ theoremdrapaltaustructure ] a separated bitrade",
    "@xmath0 is equivalent ( up to isotopism ) to three permutations @xmath58 , @xmath59 , @xmath60 acting on a set @xmath69 satisfying ( t1 ) , ( t2 ) , and ( t3 ) .",
    "if ( t4)is also satisfied then the bitrade is indecomposable .    to construct the @xmath45 representation for a bitrade we simply evaluate equation  . in the reverse direction we have the following construction :    [ constructiontautobitrade ]",
    "let @xmath58 , @xmath59 , @xmath60 be permutations satisfying condition  ( t1 ) , ( t2 ) , and ( t3 ) .",
    "let @xmath61 .",
    "define @xmath70 for @xmath41 , @xmath6 , @xmath4 .",
    "now define two arrays @xmath22 , @xmath35 : @xmath71 by theorem  [ theoremdrapaltaustructure ] @xmath0 is a bitrade .    [ exampleintercalaterep ] the smallest bitrade @xmath0 is the _ intercalate _ , which has four entries .",
    "the bitrade is shown below : @xmath72 the @xmath45 representation is @xmath73 , @xmath74 , @xmath75 , where we have written @xmath76 for @xmath77 to make the presentation of the @xmath45 permutations clearer . by construction  [ constructiontautobitrade ] with @xmath78 we can convert the @xmath45 representation to a bitrade @xmath79 : @xmath80 in this way we see that row @xmath81 of @xmath22 corresponds to row @xmath82 of @xmath83 , which is the cycle @xmath84 of @xmath58 , and so on for the columns and symbols .",
    "[ exspherical ] the following bitrade is spherical : @xmath85 here , the @xmath45 representation is @xmath86    if @xmath87 $ ] then the inverse is denoted by @xmath88 $ ] .",
    "this is equivalent to exchanging @xmath0 for @xmath89 and relabelling entries as the following lemma shows :    let @xmath0 be a separated bitrade with representation @xmath87 $ ] . then the inverse bitrade @xmath5 has representation , denoted @xmath90 .",
    "this representation is isomorphic to @xmath91 $ ] .    observe that definition  [ defnbitradea123 ] does not specify the order of the two partial latin squares in a bitrade so the bitrade @xmath5 is well - defined . for this bitrade",
    "we have permutation representation @xmath92 $ ] .",
    "using equation   we find that @xmath93 and @xmath94 .",
    "taking the conjugate of @xmath95 by @xmath96 gives us a representation that acts on the set @xmath22 .",
    "in particular , @xmath97 and @xmath98 .",
    "this shows that the representation @xmath92 $ ] is isomorphic to @xmath91 $ ] .",
    "let @xmath99 be the graph with vertices @xmath69 and directed edges @xmath100 where @xmath101 for some @xmath14 .",
    "a rotation scheme can be imposed on this graph , by ordering the edges as shown in figure  [ figdrapalrotationscheme ] .",
    "this turns @xmath99 into an oriented combinatorial surface .",
    "is a cycle of @xmath45 .",
    "the vertex in the centre is @xmath102 . ]",
    "define @xmath103 , the total number of cycles , and @xmath104 . by some basic counting arguments we find that there are @xmath105 vertices , @xmath106 edges , and @xmath107 faces .",
    "then euler s formula @xmath108 gives @xmath109 where @xmath110 is the genus of the combinatorial surface .",
    "we say that the bitrade @xmath111 has genus @xmath110 .",
    "if @xmath112 then we say that the bitrade is _",
    "let @xmath55 $ ] be a spherical bitrade on the set @xmath69 .",
    "choose some @xmath113 and fix a direction @xmath114 .",
    "set @xmath115 and @xmath116 ( calculating modulo  @xmath4 ) .",
    "suppose that ( 1 ) the @xmath15-cycle at @xmath102 has length at least  @xmath4 and ( 2 ) the @xmath13-cycle through @xmath102 and the @xmath117-cycle through @xmath118 do not meet in any common point .",
    "then the _ slide expansion _ at @xmath113 in direction",
    "@xmath15 is the following augmentation of the cycles of @xmath58 , @xmath59 , and @xmath60 by a new point @xmath119 : @xmath120 we denote the result of the slide expansion on @xmath121 $ ] at vertex @xmath102 in direction @xmath15 by @xmath122 .",
    "a separated bitrade @xmath55 $ ] is _ bicyclic _ if there exists @xmath15 such that @xmath65 consists of only two cycles .",
    "these bicyclic bitrades form the root nodes of our enumeration procedure due to the following result :    let @xmath87 $ ] be a spherical bitrade .",
    "then there exists a sequence @xmath123 , @xmath124 ,  , @xmath125 where @xmath123 is a bicyclic bitrade and @xmath126 is the result of a slide expansion on either @xmath127 or @xmath128 , for @xmath129 .",
    "the opposite of a slide expansion is a _",
    "slide contraction_. for a spherical bitrade @xmath55 $ ] on the set @xmath69 , choose some @xmath130 and fix a direction @xmath114 . set @xmath115 and @xmath116 ( calculating modulo  @xmath4 ) .",
    "the slide contraction at @xmath131 in direction @xmath15 modifies the cycles of @xmath58 , @xmath59 , and @xmath60 as follows : @xmath132 a necessary condition for a slide contraction to be valid is that the @xmath131-cycle in @xmath133 and @xmath134 has length at least @xmath4 ( this avoids the creation of a fixed point when @xmath131 is removed ) . in general it is necessary to check the bitrade conditions ( t1 ) , ( t2 ) , and ( t3)to ensure that a slide contraction is valid .",
    "to enumerate separated spherical bitrades we must fix the notion of @xmath2-isomorphism .",
    "two bitrades @xmath55 $ ] and @xmath92 $ ] on the same set @xmath69 are @xmath2-isomorphic if there is a permutation @xmath135 such that @xmath136 for all @xmath137 .",
    "a @xmath2-automorphism of a bitrade is defined similarly .",
    "we follow the presentation in  @xcite . in the context of an algorithm for enumerating combinatorial objects ,",
    "the _ domain _ of a search is the finite set @xmath138 that contains all objects considered by the search .",
    "the search space is conveniently modelled by a rooted tree , with nodes corresponding to elements of @xmath138 , and nodes joined by an edge if they are related by one search step .",
    "the root node is the starting node of the search .",
    "we write @xmath139 for the set of all child nodes of @xmath140 , and @xmath141 for the parent node of @xmath140 .    to reduce the search time we use the method of _ canonical augmentation _",
    "@xcite , following the presentation in  @xcite . in terms of the search tree ,",
    "the ordered pair @xmath142 characterises the augmentation used to generate @xmath140 from the node @xmath141 during the search . in our case , this augmentation @xmath142 is the result of a slide expansion on @xmath141 .",
    "the goal of the canonical augmentation algorithm is to choose one of the possible parents of @xmath140 to be the canonical parent .",
    "formally , for any nonroot node @xmath140 , the _ canonical parent _",
    "@xmath143 must satisfy :    1 .   for all nonroot objects @xmath140 ,",
    "@xmath144 it holds that @xmath145 implies @xmath146 .",
    "the next property captures the canonical augmentations in the search tree :    1 .",
    "a node @xmath147 occurring in the search tree is generated by canonical augmentation if @xmath148 .",
    "algorithm  [ alg1 ] gives pseudo - code for the general canonical augmentation search algorithm .",
    "algorithm  [ alg2 ] is a more explicit version for enumerating separated spherical latin bitrades .",
    "the correctness of algorithm  [ alg1 ] relies on two properties :    1 .   for all nodes",
    "@xmath140 , @xmath144 it holds that if @xmath145 , then for every @xmath149 there exists a @xmath150 such that @xmath151 .",
    "2 .   for every nonroot node @xmath140",
    ", there exists a node @xmath144 such that @xmath145 and @xmath152 .",
    "condition ( i1)says that isomorphic nodes have isomorphic children . condition ( i2)says that every nonroot node is generated by some canonical augmentation .",
    "report @xmath140 ( if applicable ) select any @xmath153 canaug - traverse(@xmath147 )    report @xmath140 ( if applicable ) select any @xmath153 canaug - spherical(@xmath147 ) canaug - spherical(@xmath90 ) canaug - spherical(@xmath147 )    when implemented on a search tree satisfying ( i1)and ( i2 ) , the algorithm canaug - traverse reports exactly one node from every isomorphism class of nodes .",
    "the canonical form @xmath154 is a relabelling of @xmath147 such that @xmath155 if and only if @xmath156 .",
    "we need to be able to efficiently compute the canonical form in order to construct the canonical parent of a bitrade .    to compute the canonical form of a bitrade",
    "@xmath157 $ ] , we fix a starting point @xmath113 .",
    "we then perform a breadth - first traversal of the bitrade s underlying directed graph .",
    "vertices are labelled from the set @xmath158 in the order that they are visited . at a vertex @xmath159",
    "we first visit the @xmath58 cycle at @xmath159 , then the @xmath59 cycle at @xmath159 , and then the @xmath60 cycle at @xmath159 ( only if the cycle has not been visited before ) .",
    "as we traverse a cycle we label unseen vertices and append the cycle ( using the new vertex labels ) to an array @xmath160 . after traversing a cycle",
    "we append a marker ( here , @xmath161 ) to denote the end of the cycle .",
    "while traversing a @xmath45 cycle at the vertex @xmath159 , we check if the neighbouring @xmath162 and @xmath163 cycle at @xmath159 has been visited ( @xmath15 , @xmath164 ) .",
    "if it has not , we push @xmath165 and @xmath166 onto the queue , making sure that @xmath167 .",
    "the lexicographically least @xmath168 is the canonical form @xmath154 of @xmath147 .",
    "since @xmath154 encodes just the cycle structure of the @xmath45 permutations , it follows that @xmath169 if and only if @xmath170 .    the canonical parent @xmath171 is now computed as follows . first we find the canonical form @xmath154 of @xmath147 .",
    "in our case , we choose the lexicographically maximal pair @xmath172 such that a slide contraction may be performed on @xmath154 at @xmath131 in direction @xmath15 .",
    "let @xmath173 be the result of this contraction .",
    "then @xmath174 where @xmath175 is the canonical relabelling map .",
    "condition ( i1)holds since a slide expansion @xmath122 is equivalent to @xmath176 where @xmath145 and @xmath177 is the image of @xmath102 under the isomorphism .",
    "in other words , the slide expansion relies only on the cycle structure of the bitrade , not its specific labelling .",
    "condition ( i2)holds because the canonical parent @xmath171 is chosen only based on the canonical form of @xmath147 and so is independent of isomorphism .",
    "algorithm  [ alg2 ] produces bicyclic bitrades at each step where even - sized bitrades are being generated .",
    "the following lemma and corollary are necessary to show that no @xmath2-isomorphism class of bicyclic bitrades is produced more than once .",
    "[ bicyclic_structure ] let @xmath55 $ ] be a bitrade such that @xmath65 , for some @xmath178 , consists of exactly two cycles .",
    "let one of the cycles be @xmath179 .",
    "then the other cycle of @xmath65 can be expressed as @xmath180 in such a way that @xmath181 consists of cycles @xmath182 and @xmath183 consists of cycles @xmath184 , for @xmath185 .",
    "[ corbicyclic ] let @xmath147 be a bicyclic bitrade .",
    "then there is no @xmath140 such that @xmath186 or @xmath187 for any @xmath102 , @xmath15 .",
    "the slide contraction shortens the cycle at some point @xmath131 in @xmath181 and @xmath183 . by lemma  [ bicyclic_structure ] at least one of the cycles in @xmath181 or @xmath183 has length @xmath6 , so the slide contraction would introduce a fixed point , contradicting ( t3 ) .    it can be shown that for any bicyclic bitrade @xmath147 we have @xmath188 .",
    "corollary  [ corbicyclic ] shows that lines 1115 of algorithm  [ alg2 ] are correct .",
    "see @xcite for c++ computer code . the mpi library is used to allow parallel processing of the search tree on a linux cluster .",
    "the size of the automorphism group @xmath189 is bounded by the size of @xmath69 .",
    "further , the number of homogeneous bitrades is quite small , so usually the automorphism group is even smaller .",
    "we just compute the elements of @xmath189 explicitly .",
    "cavenagh and lisonek  @xcite showed that spherical bitrades are equivalent to planar eulerian triangulations . to verify our results ( for small @xmath18 )",
    "we used plantri  @xcite to generate planar eulerian triangulations .",
    "we then applied a simultaneous vertex @xmath4-colouring and face @xmath6-colouring , giving a bitrade @xmath190 .",
    "then each conjugate of @xmath0 was produced , and finally isomorphic copies removed .",
    "the third column is the value @xmath192 , which is the number of isomorphism classes of eulerian plane triangulations with connectivity at least @xmath4 ( see table  6 in @xcite for values @xmath193 in their first column and also  @xcite ) .",
    "the enumeration resulting in @xmath192 considers isomorphic any two graphs that are related by a permutation of the face 2-colouring , changing the orientation of the permutations , and permuting the cyclic ordering .",
    "so for large values of @xmath18 there will be at most @xmath194 ways to relabel one of their graphs to obtain one of our bitrades .",
    "for example , with @xmath195 we have @xmath196 and @xmath197 .",
    "also , wanless  @xcite enumerated spherical bitrades up to size @xmath198 , under various various equivalences , but not @xmath2-isomorphism as studied in this paper ."
  ],
  "abstract_text": [
    "<S> a _ latin bitrade _ @xmath0 is a pair of partial latin squares which are disjoint , occupy the same set of non - empty cells , and whose corresponding rows and columns contain the same set of entries . </S>",
    "<S> a genus may be associated to a latin bitrade by constructing an embedding of the underlying graph in an oriented surface . </S>",
    "<S> we report computational enumeration results on the number of spherical ( genus  0 ) latin bitrades up to size @xmath1 . </S>"
  ]
}
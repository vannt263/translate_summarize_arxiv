{
  "article_text": [
    "in order to design and analyze monitoring and control algorithms for a networked dynamic system ( nds ) using model based approaches , system identifiability is an important question , i.e. , whether the dynamic model of the network can be identified uniquely using available input - output data .",
    "this is particularly true for safety - critical networks such as aerospace systems @xcite and power systems @xcite , where model parameters change due to changes in operating conditions , loads , traffic congestion , and network topologies .",
    "consequently , the network model needs to be identified on suitable time scales so that control decisions can be made based on the relevant model .",
    "for example , as shown in @xcite , operators of large power systems typically prefer updating their system models every ten to twenty minutes so that they can predict and control the oscillations in the power - flows with highest accuracy .",
    "clearly , model identification depends on input - output data which in turn depends on the placement of sensors in the network . a key question therefore , is - on which nodes in the network should one place sensors so that the resulting measurements can guarantee identifiability of the network model ?",
    "each edge of the network graph @xmath0 is defined by a constant positive parameter , referred to as the _ weight _ of the edge , while each node is defined by a scalar state whose dynamics evolve as the weighted linear combination of its difference with the states of its neighboring nodes .",
    "our goal is to find a set of outputs from which the edge weights of @xmath1 can be identified uniquely . using the classical notion of identifiability",
    ", we frame the problem in terms of relating these edge weights with the markov parameters of the model , or equivalently , with its transfer function .",
    "thereafter , we propose a sensor placement algorithm that guarantees global identifiability of the edge weights from the resulting input - output measurements .",
    "we also derive an expression for the number of sensors needed to uniquely identify a complete set of edge weights .",
    "we wish to emphasize that our objective is not to derive network identification algorithms such as those in @xcite . rather , our goal is to find a sufficient set of nodes in a consensus graph where sensors should be placed so that the measurements available from these sensors may allow one to identify the edge weights of a graph uniquely .",
    "analysis of identifiabilty is the first step in identification process before selection of a specific identification algorithm . to illustrate the fact that this is non - trivial , consider two line graphs shown in figs .",
    "[ fig01 ] and [ fig02 ] .",
    "the graphs have different edge weights but their input - output transfer functions are both equal to :    @xmath2     +    therefore , regardless of the specific identification algorithm , it is impossible to distinguish these two graphs from each other from the input - output data . our objective is to develop a sensor placement strategy that guarantees this distinguishability globally over all admissible parameter values defining the edge weights of tree graphs such as those in networks 1 and 2 .",
    "identifiability of linear - time invariant ( lti ) systems has been studied for the last several decades @xcite and many standard textbooks on the topic are available .",
    "however , not many of these results have been translated to identifiablity of a network , and even less so from a graph - theoretic point of view .",
    "this is because the conventional tests of identifiability , which are mostly formulated as rank tests of jacobian matrices , quickly become intractable when one attempts to interpret them in terms of the properties of a graph .",
    "some important research efforts have been made in the recent work of @xcite , which provide necessary and sufficient conditions for identifiability of consensus networks with unweighted digraphs .",
    "extensions of these necessary conditions have been presented in @xcite for graphs with random processes .",
    "relationships between the transfer function of an unweighted graph and its structural properties ( such as the number of the spanning trees ) have been presented in @xcite .",
    "another interesting result is presented in @xcite , where the objective is to _ detect _ the loss of an edge in a graph using statistical estimation methods such as maximum a posteriori estimation .",
    "in contrast to these results , in this paper we present a sufficient condition on identifiability of weighted graphs from a completely geometric point of view . specifically , we derive an explicit functional relationship between the markov parameters and the graph laplacian matrix , and show how the laplacian structure relates to the mapping between the markov parameters and the edge weights .",
    "the remainder of the paper is organized as follows : section  [ sec2 ] introduces some preliminaries and notations from graph theory used throughout the paper .",
    "sections [ s3 ] and [ s4 ] provide the main results including the proposed sensor placement algorithm with supporting lemmas .",
    "section [ sec_ex ] provides some examples .",
    "section [ sec_star ] provides a note on star graphs .",
    "section [ con ] concludes the paper .",
    "a _ weighted undirected graph _ @xmath1 consists of three sets : a vertex ( node ) set @xmath3 , an edge set @xmath4 , and an edge - weight set denoted by @xmath5 which assigns a real positive number @xmath6 to all @xmath7 , where @xmath7 is a notational convention for @xmath8 .",
    "@xmath9 denotes the set of all nodes neighboring node @xmath10 .",
    "the edge joining two nodes @xmath11 and @xmath10 is said to be _ incident _ on them , and is denoted as @xmath12 .",
    "the weight of this edge is denoted as @xmath13 .",
    "a _ walk _ from @xmath11 to @xmath10 is a sequence of vertices starting from @xmath11 and ending to @xmath10 in which any two consecutive vertices are adjacent .",
    "a _ path _ from @xmath11 to @xmath10 is a walk in which no vertex is repeated .",
    "the _ weight _ of the path @xmath14 denoted by @xmath15 is equal to the product of its edge weights .",
    "a _ cycle _ in a graph is a walk with no repeated vertex other than the beginning and the end .",
    "a graph @xmath1 is called _ connected _ if there exists a path between any two arbitrary nodes .",
    "the _ distance _ between nodes @xmath11 and @xmath10 denoted by @xmath16 is the number of the edges of the minimum path connecting @xmath11 and @xmath10 .",
    "@xmath17 is a connected graph with no cycle .",
    "a _ rooted graph _ is a graph with a special node labeled as _ root _ and all other nodes are ordered with respect to the root .",
    "a _ leaf _ in a tree is a vertex which has only one neighbor .",
    "the _ weighted laplacian matrix _ of graph @xmath1 denoted by @xmath18 is defined as    @xmath19_{i , j}=\\left\\{\\begin{matrix } -w_{i , j } ~ & i \\sim j \\\\   \\sum_{k \\in \\mathcal{n}_i }",
    "w_{i , k } & i = j\\\\ 0 & \\mathrm{otherwise } \\end{matrix}\\right . .",
    "\\label{1}\\end{aligned}\\ ] ]    where @xmath20_{i , j}$ ] denote the @xmath21 element of a matrix .",
    "it can be verified that the matrix @xmath18 is symmetric for undirected graphs  @xcite .",
    "consider a single - input linear consensus network model of the form    @xmath22    where @xmath23 is the state , @xmath24 is the input , @xmath25 is the output , the state matrix @xmath26 , where @xmath27 is the symmetric graph laplacian of a network with a given topology @xmath1 but unknown edge - weights @xmath28 .",
    "let the input node be labeled arbitrarily as node 1 , i.e. , @xmath29 , where @xmath30 denote the indicator unit vector whose @xmath31 element is 1 and the remaining elements are 0 , and @xmath32 , where the rows of @xmath33 are indicator vectors implying that the outputs are a set of specific states . our objective is to find the matrix @xmath33 such that , for any given @xmath1 , we can uniquely identify the parameter vector @xmath5 from the available state measurements .",
    "we develop a node selection algorithm such that if sensors are placed at these selected nodes , then @xmath5 is uniquely identifiable .",
    "we first state the basic definition of identifiability in terms of parameter indistinguishability introduced in @xcite as the starting step for our objective .    *",
    "definition 1 : * _ indistinguishability and identifiability _ @xcite consider two consensus models ( [ eq1 ] ) for two parameter vectors @xmath5 and @xmath34 , let @xmath11 and @xmath35 denote the inputs , and let @xmath36 and @xmath37 denote the outputs of these two systems .",
    "these two paraemeter sets are called _ indistinguishable _ if for all @xmath38 , @xmath39 .",
    "if @xmath5 and @xmath34 are not indistinguishable , they are simply referred to as _ distinguishable_. a parameter vector @xmath5 is said to be _ globally identifiable _ if for all @xmath40 , @xmath5 and @xmath34 are distinguishable .",
    "a necessary and sufficient condition for indistinguishability is as follows @xcite : the parameter vectors @xmath5 and @xmath34 are indistinguishable if and only if @xmath41 a parameter vector @xmath5 is said to be _ globally identifiable _ if ( [ eq_w ] ) implies @xmath42 @xcite .    in the following section we derive an algorithm to design the output matrix @xmath33 in ( [ eq1 ] ) that guarantees global identifiability of @xmath5 following from definition 1 .",
    "we start by assuming that @xmath1 in ( [ eq1 ] ) is a rooted tree graph @xmath17 with the root node labeled as 1 .",
    "this root node is also assumed to be the node where the input @xmath43 enters .",
    "let @xmath44 denote the length of the longest path from any node of @xmath17 to the root .",
    "one can then define generations @xmath45 as subsets of @xmath46 such that @xmath47 if @xmath48 and @xmath49 and @xmath50 is a neighbor of @xmath51 , then @xmath51 is referred to as _ the parent _ of @xmath50 , and @xmath50 a _ child _ of @xmath51 . if multiple nodes have a common parent , then they are referred to as _ siblings_.",
    "it can be shown that @xmath52 can be partitioned into @xmath53 sets of nodes that are siblings , where @xmath54 denotes the number of elements of a set .",
    "@xmath55 denotes the set of nodes in @xmath52 that are the children of the node @xmath56 .",
    "for example , for the @xmath17 shown in fig .",
    "[ fig_1b ] , @xmath57 .",
    "also , node @xmath58 is the parent of node @xmath59 , node @xmath59 is the only child of node @xmath58 , and nodes @xmath60 and @xmath61 are siblings .    using these definitions , we next state the following two lemmas to construct the proposed sensor placement algorithm .",
    "for all the results from this point onward , we will use @xmath62_{i , j}=[\\mathcal{l}]_{j , i}=w_{i , j}=w_{j , i}$ ] interchangeably following from ( [ 1 ] ) and the definition of @xmath63 . also , we will drop the argument of @xmath64 and",
    "simply denote it as @xmath63 .",
    "[ lemma2 ] if @xmath65 in ( [ eq1 ] ) , where @xmath17 is a rooted tree , then the following relationship holds : @xmath66_{i,1}=\\left\\{\\begin{matrix } 0 & 0 \\leq k \\leq d(i,1)-1\\\\",
    "\\mathcal{w}(p_{i,1 } ) & k = d(i,1 )   \\end{matrix}\\right.\\end{aligned}\\ ] ] where @xmath67 is the unique path of length @xmath68 connecting nodes @xmath69 and @xmath58 .    the proof follows from the induction on @xmath70 .",
    "* @xmath71 : if @xmath72 , that is , nodes @xmath69 and @xmath58 are not neighbors , then @xmath73_{i,1}=0 $ ] . if @xmath74 , that is , nodes @xmath69 and @xmath58 are neighbors , then @xmath73_{i,1}=w_{i,1}=\\mathcal{w}(p_{i,1})$ ] . *",
    "@xmath75 where @xmath76 is an integer : by induction we assume that @xmath77_{i,1}=0 $ ] for all nodes @xmath69 where @xmath78 . also , we assume @xmath77_{l,1}=\\mathcal{w}(p_{l,1})$ ] for all nodes @xmath79 where @xmath80 .",
    "* @xmath81 : we next consider an arbitrary node @xmath82 where @xmath83 .",
    "following the definition of matrix product @xmath84 , one can write the following relationship for any arbitrary node @xmath85 @xmath86_{v,1}=[\\mathcal{l}]_{v , v}[\\mathcal{l}^{k-1}]_{v,1}+\\sum_{\\ell \\in \\mathcal{n}_v}[\\mathcal{l}]_{v,\\ell}[\\mathcal{l}^{k-1}]_{\\ell,1}. \\label{eq_im}\\end{aligned}\\ ] ] therefore , using ( [ eq_im ] ) , we can write the following relation for node @xmath82 @xmath87_{j,1}=&[\\mathcal{l}]_{j , q}[\\mathcal{l}^{n}]_{q,1}+[\\mathcal{l}]_{j , j}[\\mathcal{l}^{n}]_{j,1}\\nonumber \\\\ & + \\sum_{\\ell \\in s^j_c } [ \\mathcal{l}]_{j,\\ell}[\\mathcal{l}^{n}]_{\\ell,1},\\end{aligned}\\ ] ] where @xmath88 is the parent of @xmath82 , and @xmath89 is the set of the children of node @xmath82 . since @xmath90 , @xmath83 , and @xmath91 for @xmath92 , due to the induction assumption we conclude @xmath93_{q,1}=0 $ ] , @xmath93_{j,1}=0 $ ] , and @xmath93_{\\ell,1}=0 $ ] , respectively",
    ". therefore , @xmath94_{j,1}=0 $ ] . *",
    "we next consider node @xmath95 where @xmath96 . using ( [ eq_im ] ) we can write @xmath87_{m,1}=&[\\mathcal{l}]_{m , q'}[\\mathcal{l}^{n}]_{q',1}+[\\mathcal{l}]_{m , m}[\\mathcal{l}^{n}]_{m,1}\\nonumber \\\\ & + \\sum_{\\ell \\in s^m_c } [ \\mathcal{l}]_{m,\\ell}[\\mathcal{l}^{n}]_{\\ell,1},\\end{aligned}\\]]where @xmath97 is the parent of @xmath95 , and @xmath98 is the set of the children of @xmath95 .",
    "since @xmath77_{m,1}=[\\mathcal{l}^n]_{\\ell,1}=0 $ ] for @xmath99 , and @xmath77_{q',1}=\\mathcal{w}(p_{q',1})$ ] from the induction assumption , it can be concluded that @xmath94_{m,1}=w_{m , q'}\\mathcal{w}(p_{q',1})=\\mathcal{w}(p_{m,1})$ ] .",
    "@xmath100    [ lemma5 ] consider a node indexed as @xmath10 in a weighted graph @xmath1 and its neighboring nodes denoted by @xmath101 through @xmath102 .",
    "let @xmath103 be a subgraph of @xmath1 induced by the set of all edges incident to @xmath10 as illustrated in fig .",
    "[ fig_lemma5 ] .",
    "let @xmath104 , where @xmath18 is the weighted laplacian matrix of @xmath1 .",
    "defined in lemma [ lemma5 ] ]    noting that ( [ eq_im ] ) holds for @xmath63 belonging to any type of graphs ( cyclic and acyclic ) , we can write :    @xmath105_{v,1}&=[\\mathcal{l}]_{v , v}[\\mathcal{l}^{i}]_{v,1}+ [ \\mathcal{l}]_{v , v_1}[\\mathcal{l}^{i}]_{v_1,1}+\\cdots+[\\mathcal{l}]_{v , v_s}[\\mathcal{l}^{i}]_{v_s,1}.\\end{aligned}\\ ] ]    therefore , @xmath106_{v_s,1}&=\\frac{n_1}{[\\mathcal{l}]_{v , v_s } } , \\label{eq_thir2}\\end{aligned}\\ ] ] where @xmath107_{v,1}-[\\mathcal{l}]_{v , v}[\\mathcal{l}^{i}]_{v,1}-([\\mathcal{l}]_{v , v_1}[\\mathcal{l}^{i}]_{v_1,1}+\\cdots+[\\mathcal{l}]_{v , v_{s-1}}[\\mathcal{l}^{i}]_{v_{s-1},1})$ ] .",
    "@xmath108    * note : * for node @xmath102 , @xmath109_{v_s,1}$ ] @xmath110 is uniquely identifiable if @xmath111_{m,1}$ ] , ( @xmath112 ) and @xmath113 is identifiable .",
    "such nodes , from this point onward , will be referred to as _",
    "available _ nodes . this definition of _ availability _ will be used as a critical argument for the forthcoming proofs . using lemmas [ lemma2 ] and [ lemma5 ] ,",
    "we next propose a simple hierarchical algorithm to design the output matrix @xmath33 in ( [ eq1 ] ) that guarantees global identifiability of @xmath5 .",
    "partition @xmath46 into sets of @xmath114 to @xmath115 .",
    "start with @xmath114 and place a sensor at this node . choose any @xmath116 nodes belonging to @xmath117 and + place sensors at them .",
    "the sensor placement steps of algorithm [ al1 ] are illustrated through an example shown in fig .",
    "[ fig_2 ] .",
    "the different steps of the placement are shown in figs .",
    "[ fig2_1 ] to [ fig2_4 ] .",
    "circles around nodes indicate that a sensor is placed there .",
    "step 1 puts a sensor at node 1 ( input node ) . in step 2",
    ", we do not need to put any sensor at node 2 because @xmath118 . in step 3 , we put one sensor in either node 3 or node 5 since @xmath119 .",
    "say , we choose node 3 . in the final step",
    "we put a sensor in either node 4 or node 6 since @xmath120 .",
    "say , we choose node 6 .",
    "our claim is that the state measurements from these three sensors are sufficient to guarantee unique identifiability of the edge weights of @xmath121 .",
    "we next state theorem [ theorem1 ] to justify this claim for any rooted tree graph @xmath17 .",
    "[ theorem1 ] consider the consensus model ( [ eq1 ] ) with @xmath65 .",
    "let @xmath122 be a set of sensor nodes determined by algorithm [ al1 ] , @xmath123 be the corresponding output measured by @xmath124 , and @xmath125 be the transfer function from @xmath43 to @xmath123 .",
    "then , the mapping from the @xmath5 to @xmath125 is one - to - one .",
    "let us partition @xmath5 into sets @xmath126 , @xmath127 through @xmath128 where@xmath129 let @xmath130 through @xmath131 denote the markov parameters of ( [ eq1 ] ) defined as @xmath132 we show by strong induction that the mapping from @xmath133 to @xmath134 is one - to - one if sensors are placed in @xmath17 following algorithm [ al1 ] .    ]",
    "we first show that the mapping from @xmath126 to @xmath135 is one - to - one . for this ,",
    "let us consider @xmath136 , where @xmath137_{k,1}$ ] , and @xmath70 is the index of the measured nodes in @xmath138 .",
    "for example , assume that the nodes in @xmath139 are indexed as @xmath140 , where @xmath141 as shown in fig .",
    "then @xmath142 , and @xmath143_{1,1 } \\\\ \\left [ \\mathcal{l } \\right ] _ { v_1,1}\\\\ \\vdots \\\\ \\left [ \\mathcal{l } \\right ] _ { v_{m-1},1 } \\end{bmatrix}=\\begin{bmatrix } -(w_{1,v_1}+\\cdots+w_{1,v_{m}})\\\\ w_{1,v_1 }",
    "\\\\ \\vdots \\\\",
    "w_{1,v_{m-1 } } \\end{bmatrix}. \\label{eq_7}\\end{aligned}\\ ] ] from ( [ eq_7 ] ) , it can be easily seen that the mapping from @xmath126 to @xmath144 is one - to - one .",
    "also , based on lemma [ lemma5 ] and considering the subgraph induced by @xmath126 , the term @xmath111_{v_{m},1}$ ] @xmath145 is uniquely identifiable . in other words , @xmath146 is an _ available _ node . @xmath147",
    "* step 2 : * let us assume by strong induction that @xmath148 for @xmath149 ( for some @xmath150 ) , and all non - sensor nodes @xmath151 are _ available _ nodes .",
    "note that , this also implies that @xmath152 for all nodes @xmath153 is identifiable .",
    "we next prove that @xmath154 will be uniquely identifiable from @xmath134 .",
    "let us consider the sibling set @xmath155 as shown in fig .",
    "[ fig_3 ] .",
    "the elements of this sibling group are indexed as @xmath156 .    , the set of children of node @xmath157    * step 2.1 : * first , the identifiablity of @xmath158 through @xmath159 will be proved .",
    "let us consider @xmath160 as @xmath161=@xmath162 for @xmath163 .",
    "we can write    @xmath164_{q'_1,1}\\\\ \\vdots \\\\ \\left [ \\mathcal{l}^{k+1 } \\right ] _ { q'_{s-1},1 } \\end{bmatrix } \\nonumber \\\\ & \\overset{\\textrm{lemma \\ref{lemma2}}}{=}\\begin{bmatrix } \\mathcal{w}(p_{1,q'_1})\\\\ \\vdots \\\\",
    "\\mathcal{w}(p_{1,q'_{s-1 } } ) \\end{bmatrix}=\\mathcal{w}(p_{1,q'})\\begin{bmatrix } w_{q',q'_1}\\\\ \\vdots \\\\w_{q',q'_{s-1 } } \\end{bmatrix}. \\label{eq_72}\\end{aligned}\\ ] ]    since @xmath165 is uniquely identifiable from the induction assumption , from ( [ eq_72 ] ) we conclude that @xmath158 through @xmath159 are uniquely identifiable .",
    "* step 2.2 : * we next prove the identifiability of @xmath166 . this will be done by considering the term @xmath167_{q',1}$ ] . if node @xmath97 has a sensor , then @xmath167_{q',1}$ ] is a subset of @xmath168 .",
    "if it does not have a sensor , then based on the induction assumption it is an _ available _ node , and @xmath167_{q',1}$ ] is uniquely identifiable from @xmath134 .",
    "we recall ( [ eq_im ] ) as @xmath169_{q',1}=&[\\mathcal{l}]_{q',q}[\\mathcal{l}^{k}]_{q,1}+[\\mathcal{l}]_{q',q'}[\\mathcal{l}^{k}]_{q',1}\\nonumber \\\\ & + \\sum_{\\ell \\in s^{q'}_{k+1 } } [ \\mathcal{l}]_{q',\\ell}[\\mathcal{l}^{k}]_{\\ell,1}. \\label{14}\\end{aligned}\\ ] ] based on lemma [ lemma2 ] , @xmath170_{\\ell,1}=0 $ ] for @xmath171 .",
    "thus , considering @xmath62_{q',q'}=-\\sum_{\\ell \\in \\mathcal{n}_{q ' } } w_{q',\\ell}$ ] , we can rewrite ( [ 14 ] ) as    @xmath172_{q',1}-[\\mathcal{l}]_{q',q}[\\mathcal{l}^{k}]_{q,1}}{[\\mathcal{l}^{k}]_{q',1 } } , \\label{eq_13}\\end{aligned}\\ ] ]    where @xmath170_{q',1 } = \\mathcal{w}(p_{q',1})\\neq 0 $ ] from lemma [ lemma2 ] .",
    "the terms @xmath170_{q',1}$ ] and @xmath167_{q',1}$ ] are either the markov parameters of the system , if a sensor is placed at node @xmath97 , or identifiable from the markov parameters by the induction assumption ( @xmath97 is available ) .",
    "the same argument is applicable to @xmath170_{q,1}$ ] .",
    "the term @xmath62_{q',q } = w_{q',q}$ ] and other edge weights in the rhs of ( [ eq_13 ] ) are also identifiable from the induction assumption and step 2.1 .",
    "thus , @xmath166 is identifiable .",
    "* step 2.3 : * the final step is to show that node @xmath173 is an _ available _ node .",
    "this follows directly from lemma [ lemma5 ] by considering the subgraph induced by the edges incident to  @xmath97 .",
    "steps 2.1 , 2.2 , 2.3 can be generalized to all sets of siblings belonging to @xmath174 , which concludes the proof for the induction . since the mapping from the edge weights to markov parameters",
    "are shown to be one - to - one , then the mapping from the edge weights to the transfer function from @xmath43 to @xmath123 is also one - to - one .",
    "this statement is equivalent to saying that the edge - weights are identifiable from the input - output data .",
    "@xmath100      [ pro2 ]",
    "if algorithm [ al1 ] is applied to a rooted - tree @xmath17 then the number of placed sensors is equal to @xmath175 .",
    "the proof follows from the induction on @xmath176 , the number of nodes of @xmath17 .",
    "step 1 ( @xmath177 ) : in this case @xmath178 .",
    "also , from algorithm [ al1 ] it is clear that only one sensor is needed , that being at the input node .",
    "step 2 ( @xmath179 where @xmath180 is an integer ) : let us assume that the number of required sensors is equal to @xmath175 , and prove the same is true when one more node is added to @xmath17 . for this , let us form the tree @xmath181 by adding a new vertex @xmath182 and its incident edge @xmath183 to @xmath17 .",
    "two further cases can arise :    \\1 .",
    "if @xmath182 is a neighbor of @xmath10 , a non - input leaf of @xmath17 , then @xmath10 will not be a non - input leaf of @xmath181 anymore but @xmath182 will be a new non - input leaf , and therefore @xmath184 . in this case",
    ", no extra sensor is required to be added to satisfy identifiability of @xmath185 based on algorithm [ al1 ] .",
    "if @xmath182 is a neighbor of @xmath186 ( an internal vertex of @xmath17 or the input node ) , then @xmath182 will be a new non - input leaf of @xmath181 and @xmath187 .",
    "also , for this case algorithm [ al1 ] stipulates addition of a new sensor at @xmath182 .",
    "steps 1 and 2 verify that algorithm [ al1 ] results in a sensor placement scheme with @xmath175 number of sensors .",
    "@xmath100 +      in the example of fig .",
    "[ fig_2 ] , @xmath17 has three non - input leaves , namely , nodes 3 , 4 , and 6 .",
    "the number of sensors needed by algorithm [ al1 ] is also 3 .",
    "however , the choice of the sensors is not unique .",
    "for example , any of the sets @xmath188 , @xmath189 , @xmath190 , and @xmath191 will guarantee identifiability of the edge sets for @xmath17 of fig .",
    "[ fig_2 ] .",
    "further examples will be shown in section [ sec_ex ] .",
    "let us assume a sensor is placed at any arbitrary node @xmath192 , @xmath193 be the corresponding measured output , and @xmath194 be the transfer function from @xmath43 to @xmath193 .",
    "the question is what combinations ( or functions ) of the edge - weights will be identifiable .",
    "assuming that ( [ eq1 ] ) is controllable and observable with @xmath195 and @xmath196 , then @xmath197 can be rewritten as    @xmath198    from ( * ? ? ?",
    "* theorem 2.1 ) , @xmath199 .",
    "thus , the mapping from the @xmath200 to @xmath194 is one - to - one . also , recalling the results of lemma [ lemma2 ] , @xmath201_{i,1}=\\mathcal{w}(p_{i,1})$ ] if @xmath202 .",
    "since @xmath201_{i,1}$ ] is a markov parameter of the system corresponding to @xmath193 , the mapping from @xmath203 to @xmath194 is one - to - one .",
    "thus , we are able to find at least two functions of @xmath5 that are identifiable from @xmath125 . however , investigating the identifiability of the individual edge weights may not be possible from a single sensor for any general network .",
    "[ cols=\"^,^ , < , < \" , ]",
    "table [ tab1 ] shows three examples to illustrate how our proposed sensor placement algorithm provide one - to - one mapping from the edge weights to the markov parameters .",
    "we also show that depending on the graph topology , our algorithm may become necessary and not just sufficient for identifiability .",
    "let us consider three acyclic networks shown in table [ tab1 ] .",
    "the first compartment of table [ tab1 ] shows the network .",
    "the second compartment shows @xmath204 , the number of the sensors that are placed in each network .",
    "the third compartment lists the respective markov parameters following from algorithm [ al1 ] that are needed to prove the identifiability for each example .",
    "the sequence in which the markov parameters are listed is important . from all of these lists",
    ", we can see that every line item introduces exactly one unknown .",
    "this means that the markov parameters may be nonlinear functions of the edge weights , but the mapping between the two is one - to - one .",
    "we next show that depending on the topology of a tree graph , algorithm [ al1 ] may be either sufficient , or both necessary and sufficient for identifiability .",
    "for example , we consider two acyclic graphs , networks 2 and 3 cited in table [ tab1 ] .",
    "based on algorithm [ al1 ] , network 2 only requires a single sensor to be identifiable , which is clearly the minimum possible number of sensors .",
    "therefore , algorithm [ al1 ] in this case is clearly both necessary and sufficient . for network 3 , however , algorithm [ al1 ] is only sufficient but is not necessary .",
    "we can check this by removing the sensor placed at node 1 .",
    "it can be shown that @xmath205 , @xmath206 , and @xmath207 are still identifiable in this situation .",
    "for example , consider the following three markov parameters , @xmath62_{2,1}=a$ ] , @xmath62_{3,1}=b$ ] , and @xmath208_{2,1}=- 2a^2 - ab - ac$ ] that show that the mapping from the parameters @xmath209 to the markov parameters is one - to - one .",
    "clearly , algorithm [ al1 ] in this case places one extra sensor than necessary .",
    "however , that does not mean that one can remove any one arbitrary sensor from network 3 of table [ tab1 ] , and still preserve the identifiability property .",
    "for example , if a careless user removes the sensor from node 3 , the network will still have the minimum number of the sensors needed to be identifiable , but will not be identifiable anymore .",
    "the unidentifiability of the edge - weights , in this case , can be shown by considering another set of weights for network 3 , i.e. , @xmath210 , @xmath211 @xmath212 that produces the same output and markov parameters as network 3 with edge - weights shown in table [ tab1 ] .",
    "this small example nicely illustrates that the location of the sensor nodes in identifiability is equally important as the number of sensors .",
    "]    [ prop_star ] if the system ( [ eq1 ] ) is defined over the star graph @xmath17 of fig .",
    "[ fig_star ] , then the minimum number of sensors to identify this network is @xmath213 .",
    "we first prove that with @xmath214 sensors , the edge weights of @xmath17 are not identifiable .",
    "the @xmath214 sensors can be placed in either of the following cases :    case 1 .",
    "suppose sensors are placed in all nodes other than three nodes chosen from the set @xmath215 .",
    "say we choose the nodes @xmath216 . in this case",
    "the following edge - weights are not identifiable : @xmath217 , @xmath218 , and @xmath219 .",
    "to show unidentifiability we can easily show that the following two edge - weight parameters :    @xmath220    are not distinguishable .",
    "suppose sensors are placed in all nodes other than node 1 and two nodes chosen from the set @xmath215 .",
    "say we choose the nodes @xmath221 . in this case",
    "the following edge - weights are not identifiable : @xmath217 , @xmath218 as shown by the inditinguishability of the following two edge - weight parameters :    @xmath222    so far we have proved @xmath214 sensors are not sufficient for identifiability of the edge - weights of @xmath17 , we next prove that @xmath213 sensors are sufficient for identifiability of the edge weights of @xmath17 .",
    "assume @xmath213 sensors are placed at all nodes of @xmath17 excluding node 1 ( the input node ) and any other nodes of the graph ( say node @xmath223 ) , then it can be shown that all edges of the network are identifiable .",
    "for this , it suffices to consider the following set of markov parameters :      which proves the one - to - one mapping from the edge weights to this markov parameter set . @xmath100",
    "in this paper , we developed a sensor placement algorithm to ensure global identifiability of weighted consensus networks with first - order dynamics and tree structures .",
    "we showed that the proposed algorithm provide a sufficient condition for identifiability of the edge weights of acyclic network graphs by proving a one - to - one mapping from the edge weights to the markov parameters of the system .",
    "the method , however , becomes intractable for any generic cyclic graph .",
    "we also derive the number of the sensors needed for identifiability , and show that depending on the graph topology , this number may be more than necessary for certain graphs .",
    "our algorithm provide simple yet sufficient ways of placing sensors in large consensus networks for accurate , real - time identification .",
    "our future direction of research is to generalize these findings for networks with arbitrary cyclic structures and for consensus networks with differential - algebraic models .",
    "a. chakrabortty , j. h. chow , and a. salazar ,  interarea model estimation for radial power systems transfer paths with intermediate voltage control using synchronized phasor measurements \" _ ieee transactions on power systems , _ vol .",
    "24(3 ) , pp . 13181326 , 2009 .",
    "g. s. chavan _",
    "_ , _ wide - area monitoring and control of wecc transfer paths using real - time digital simulations _",
    ", technical report , ece department , ncsu , 2013 , available at _ http://people.engr.ncsu.edu / achakra2/scereport.pdf_.          m. nabi - abdolyousefi and m. mesbahi ,  network identification via node knock - outs , \" _ ieee transactions on automatic control , _ vol .",
    "57(12 ) , pp . 32143219 , 2012 .",
    "r. bellman and k. j. strm ,  on structural identifiability , \" _ mathematical biosciences _ ,",
    "vol . 7 , pp . 329339 , 1970 .",
    "d. materassi and m. v. salapaka ,  network reconstruction of dynamical polytrees with unobserved nodes , \" _ in proceedings of the @xmath225 ieee conference in decision and control ( cdc ) _ , pp . 46294634 , maui , hi , dec ."
  ],
  "abstract_text": [
    "<S> in this paper we present a sufficient condition that guarantees identifiability of linear network dynamic systems exhibiting continuous - time weighted consensus protocols with acyclic structure . </S>",
    "<S> each edge of the underlying network graph @xmath0 of the system is defined by a constant parameter , referred to as the _ weight _ of the edge , while each node is defined by a scalar state whose dynamics evolve as the weighted linear combination of its difference with the states of its neighboring nodes . following the classical definitions of _ identifiability and indistinguishability _ , we first derive a condition that ensure the identifiability of the edge weights of @xmath0 in terms of the associated transfer function . using this characterization , </S>",
    "<S> we propose a sensor placement algorithm that guarantees identifiability of the edge weights . </S>",
    "<S> we describe our results using several illustrative examples .    * _ index terms_ identifiability , consensus networks , markov parameters , graph theory , parameter estimation * </S>"
  ]
}
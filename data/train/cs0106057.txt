{
  "article_text": [
    "the open archives initiative ( oai )  @xcite announced the oai metadata harvesting protocol ( oaimh ) v1.0",
    "@xcite on 21 january 2001 after a period of pre - release testing .",
    "it is intended that the protocol will not be changed until 12 - 18 months have elapsed from the initial release .",
    "this period of stability is designed to allow time for thorough evaluation without the cost of multiple rewrites for early implementers .",
    "the oaimh protocol was designed as a simple , low - barrier way to achieve interoperability through metadata harvesting .",
    "it is still an open question as to exactly how useful metadata sharing will be .",
    "however , there is certainly considerable interest in oai and experience with early oaimh implementations is encouraging .",
    "this tutorial is organized in four main sections . in section  [ sec : not ] , i hope to clear up some common misconceptions about what oaimh is . in section  [ sec",
    ": concepts ] , i review some of the concepts and assumptions that underly the oaimh protocol . then , in the remaining two sections , sections  [ sec : dp ] and  [ sec : sp ] , i consider implementation of the _ data - provider _ and _ service - provider _ sides of the oaimh protocol .",
    "perl code examples are given to implement bare - bones versions of these two interfaces .",
    "it is not my intention to offer a complete description of the oaimh protocol but instead to describe its use in very practical terms , and to highlight common practice among implementers .",
    "a copy of the oaimh protocol specification @xcite should be at hand while reading this tutorial .",
    "i will refer to sections within the protocol specification as  2.1 ( for section 2.1 ) .",
    "the most common misconception of oaimh , as it currently stands , is that it provides mechanisms to expose and harvest full - content ( documents , images ,  ) .",
    "this is not true , oaimh is a protocol for the exchange of _ metadata _ only .",
    "however , it may be that a future oai protocol will provide facilities for the exchange of full - content .",
    "oaimh is not about direct interoperability between archives .",
    "it is based on a model which puts a very clean divide between data - providers ( entities which expose metadata ) and service - providers ( entities which harvest metadata , presumably with the intention of providing some service ) .",
    "while the model has a clear divide between data - providers and service - providers , there is nothing to say that one entity can not be both ; cite base  @xcite is one example .",
    "the model has an obvious scalability problem if every service - provider is expected to harvest data from every data - provider .",
    "it may be that is is not an issue if service - providers are specific to a particular community and thus harvest only from a subset of data - providers .",
    "we may also see the creation of aggregators which harvest from a number of data - providers and the re - export this data .",
    "oaimh is not limited to dublin core ( dc )  @xcite metadata . however , since oai aims to promote interoperability , dc metadata has been adopted as a lowest common - denominator metadata format which all data - providers should support .",
    "it is not intended that the requirement to export dc metadata should preclude the use of other metadata sets that may be more appropriate within particular communities .",
    "the oai encourages the development of community specific standards that provide the functionalities required by specific communities .",
    "service - providers make requests to data - providers ; there is no support for data - provider driven interaction .",
    "all requests and replies occur using the http protocol  @xcite",
    ". requests may be made using either the http get or post methods .",
    "all successful replies are encoded in xml  @xcite , and all exception and flow - control replies are indicated by http status codes .",
    "oaimh protocol requests are made using one of six verbs : identify , getrecord , listidentifiers , listrecords , listsets , and listmetadataformats .",
    "some of these verbs accept or require additional parameters to completely specify the request . the verb and any parameters",
    "are specified as key = value pairs   3.1.1 either in the url ( if the get method is used ) , or in the body of the message ( if the post method is used ) .",
    "the oaimh protocol is based on a model of repositories that hold metadata about _ items _   2 .",
    "the nature of the items is outside the scope of the protocol ; they might be electronic documents , artifacts in a museum , people , or almost anything else .",
    "the requirement for oai compliance is that the repository be able to disseminate metadata for these items in one or more formats including dublin core ( dc ) .",
    "metadata is disseminated via the getrecord and listrecords verbs .",
    "these requests result in zero or more _ records _ being returned .",
    "a record consists of 2 or 3 parts : a @xmath0header@xmath1 container , a @xmath0metadata@xmath1 container , and possibly an @xmath0about@xmath1 container   2.2 .",
    "the metadata for each item has a unique identifier which , when combined with the metadataprefix , acts as a key to extract a metadata record .",
    "note that although all metadata types for an item share the same identifier , the identifier is explicitly _ not _ an identifier for the item   2.3 .",
    "identifiers may be any valid uri  @xcite but an optional oai identifier syntax ",
    "a2 has been adopted widely .",
    "the oai identifier syntax divides the identifier into three parts separated by colons ( :) , e.g. oai : arxiv : hep - lat/0008015 where ` oai ' is the scheme , ` arxiv ' identifies the repository , and ` hep - lat/0008015 ' is the identifier within the particular repository .",
    "the metadata for an item ( considered as a whole , not as individual formats ) has a datestamp which is the date of last modification .",
    "the purpose of the datestamp is to support date - selective harvesting and incremental harvesting in particular .",
    "datestamps are returned in the records returned by a data - provider and may be used as optional arguments to the listidentifiers and listrecords requests .",
    "the datestamps have the granularity of a day , they are in yyyy - mm - dd format and no time is specified .",
    "this simple date format actually creates some additional complexity because the service - provider and data - provider may not be in the same time - zones .",
    "this is considered further in section  [ sec : incharvest ] .",
    "typically , a service - provider would initially harvest all metadata records from a repository by issuing a listrecords request without from or until restrictions .",
    "subsequently , the service - provider would issue listrecords requests with a from parameter equal to the date of the last harvest .",
    "sets are provided as an _ optional _ construct for grouping items to support selective harvesting  2.5 .",
    "it is not intended that they should provide a mechanism by which a search is implemented , and there is no controlled vocabulary for set names so automated interpretation of set structure is not supported .",
    "it should be noted that sets are optional both from the point of view of the data - provider  which may or may not implement sets ; and the service - provider  which may ignore any set structure that is exposed .",
    "it is not clear whether sets will be widely used and i shall not consider them further in this tutorial .",
    "the oaimh protocol supports _ multiple parallel metadata formats_. dublin core ( dc ) is mandated for lowest common denominator interoperability .",
    "the use of other formats within particular communities or for special purposes is encouraged . within a particular repository ,",
    "metadata formats are identified by a metadataprefix .",
    "each metadataprefix is associated with the url of the schema which may be used to validate the metadata records ; the url has cross repository scope .",
    "the only globally meaningful metadataprefix is oai_dc ( for dc ) , which is associated with the schema at http://www.openarchives.org/oai/dc.xsd .",
    "the listmetadataformats request will return the metadataprefix , schema , and optionally a metadatanamespace , for either a particular record or for the whole repository ( if no identifier is specified ) . in the case of the whole repository ,",
    "all metadata formats supported by the repository are returned .",
    "it is not implied that all records are available in all formats .",
    "the oaimh protocol has very simple exception handling : syntax errors result in http status code 400 replies , and parameters that are invalid or have values that do not match records in the repository result in empty replies .",
    "for example , a listrecords request for a date range when there were no changes , or for a metadata format not supported , will result in a reply with header information but no @xmath0record@xmath1 elements .",
    "flow control is supported with the http retry - after status code 503 .",
    "this allows a server ( data - provider ) to tell the harvesting agent ( service - provider ) to try the request again after some interval .",
    "it is left entirely up to the server implementer to determine the conditions under which such a response will be given .",
    "the server could base the response on current machine load or limit the frequency requests will be serviced from any given ip address .",
    "the retry - after response may also be used to handle temporary outages without simple taking the server off - line .    in an environment where one of a set of servers may handle a request ,",
    "the server may dynamically redirect a request using the http 302 response .",
    "to date this has been implemented only by the naca repository  @xcite .",
    "to expose metadata within the oai , one must implement the data - provider site of the oaimh protocol .",
    "this provides a small set of functions which can be used to extract information about and metadata from the underlying repository .",
    "the perl files oai1.pl , oaiserver.pm and database.pm implement a bare - bones data - provider interface .",
    "the file oai1.pl handles http requests and must be associated with a url in the web server configuration file ; for the apache  @xcite web server , the configuration line is scriptalias /oai1 /some",
    "/ directory / oai1.pl if the code is in /some / directory .",
    "it is also possible to run oai1.pl from the command line , the request is specified with the -r flag , e.g. ./oai1.pl",
    "-r verb = identify.    the algorithm for oai1.pl is simply :    .... read get , post or command line request check syntax of request if syntax correct     return xml reply to request else    return http 400 error code and message   ....    an example of an invalid request is :    .... simeon@fff>./oai1.pl -r ' bad - request ' status : 400 malformed request content - type : text / plain    no verb specified ! ....",
    "exports two subroutines , one ( oaicheckrequest ) to check the request against a grammar stored in a data structure , and another ( oaisatisfyrequest ) which calls the appropriate routine to implement the required oai verb .",
    "i will consider each verb in turn .",
    "database.pm is a dummy database interface with a ` database ' of three records : record1 , record2 and record3 .",
    "metadata for record1 and record2 is available in dc format ; metadata for record1 is also available in another format with the metadataprefix ` wibble ' ; and record3 is a ` deleted ' record so no metadata is available .",
    "this verb takes no arguments and returns information about a repository   4.2 .",
    "the example code implements identify by simply writing out information from configuration variables .",
    "the protocol allows for additional @xmath0description@xmath1 blocks which may contain community - specific information .",
    "examples include @xmath0oai - identifier@xmath1 which specifies a particular identifier syntax , and @xmath0eprints@xmath1 which includes additional information appropriate for the e - print community   a2 .",
    "this verb takes no arguments and returns the set structure of the repository   4.6 .",
    "the example code does not implement any sets so the response is an empty list .",
    "this verb may be used either with a identifier argument or without any arguments   4.4 .",
    "if an identifier is specified then the verb returns the metadata formats available for that record . in many cases",
    "a repository may be able to disseminate metadata for all records in the same format or formats . in this case",
    "the response will be the same if there is no identifier argument or if the identifier argument specifies any record that exists .",
    "the example code implements the general case by calling a routine in the database.pm module to ask what formats are available , and then formats the reply appropriately . for each metadata format",
    ", the reply must include a @xmath0metadataprefix@xmath1 ( used to specify that format in other requests ) , and a @xmath0schema@xmath1 url .",
    "a @xmath0metadatanamespace@xmath1 element may optionally be returned but is not implemented in the example code .",
    "an example request and response is :    .... simeon@fff>./oai1.pl -r ' verb = listmetadataformats&identifier = record1 ' content - type : text / xml    < ?",
    "xml version=\"1.0 \" encoding=\"utf-8 \" ?",
    ">    < listmetadataformats xmlns=\"http://www.openarchives.org / oai / oai_listmetadataformats \"      xsi : schemalocation=\"http://www.openarchives.org / oai/1.0/oai_listmetadataformats                          http://www.openarchives.org/oai/1.0/oai_listmetadataformats.xsd \" >   < responsedate>2001 - 05 - 05t12:27:36 - 06:00</responsedate >   < requesturl > http://localhost / oai1?verb = listmetadataformats&amp ;               identifier = record1&amp;verb = listmetadataformats</requesturl >   < metadataformat >    < metadataprefix > wibble</metadataprefix >",
    "< schema > http://wibble.org / wibble.xsd</schema >   < /metadataformat",
    ">   < metadataformat >",
    "< metadataprefix > oai_dc</metadataprefix >    <",
    "schema > http://www.openarchives.org / oai / dc.xsd</schema >   < /metadataformat",
    "< /listmetadataformats > ....    the response indicates that the record record1 may be disseminated in either oai_dc or wibble formats .",
    "this verb requests metadata for a particular record in a particular format   4.1 .",
    "the example code implements this as a call to a subroutine disseminate ( shared with listrecords ) after checking that the record exists .",
    "the record returned consists of two parts if the record is not deleted ; a @xmath0header@xmath1 block which contains the identifier and the datestamp ( the information required for harvesting ) and a @xmath0metadata@xmath1 block which contains the xml metadata record in the requested format .",
    "the @xmath0metadata@xmath1 block will be missing if the record is deleted or if the requested metadata format is not available .",
    "for example , a request for oai_dc for record2 would be :    .... simeon@fff>./oai1.pl -r ' verb = getrecord&identifier = record2&metadataprefix = oai_dc ' content - type : text / xml    < ?",
    "xml version=\"1.0 \" encoding=\"utf-8 \" ?",
    ">    < getrecord xmlns=\"http://www.openarchives.org / oai / oai_getrecord \"    xsi : schemalocation=\"http://www.openarchives.org / oai/1.0/oai_getrecord                        http://www.openarchives.org/oai/1.0/oai_getrecord.xsd \" >   < responsedate>2001 - 05 - 05t12:50:23 - 06:00</responsedate >   < requesturl > http://localhost / oai1?verb = getrecord&amp;identifier = record2&amp ;               metadataprefix = oai_dc&amp;verb = getrecord</requesturl >   <",
    "record >    < header >     <",
    "identifier > record2</identifier >     < datestamp>1999 - 02 - 12</datestamp >",
    "< /header >    < metadata >",
    "< oai_dc xsi : schemalocation=\"http://purl.org / dc / elements/1.1/                                 http://www.openarchives.org/oai/dc.xsd \"         xmlns : xsi=\"http://www.w3.org/2000/10/xmlschema - instance \"         xmlns=\"http://purl.org / dc / elements/1.1/ \" >      < title > item 2</title >",
    "< creator > a n other</creator >     < /oai_dc",
    ">    < /metadata",
    ">   < /record > < /getrecord > ....    but a request for the unavailable format wibble would be :    .... simeon@fff>./oai1.pl -r ' verb = getrecord&identifier = record2&metadataprefix = wibble ' content - type : text / xml    < ?",
    "xml version=\"1.0 \" encoding=\"utf-8 \" ?",
    ">    < getrecord xmlns=\"http://www.openarchives.org / oai / oai_getrecord \"   xsi : schemalocation=\"http://www.openarchives.org / oai/1.0/oai_getrecord                       http://www.openarchives.org/oai/1.0/oai_getrecord.xsd \" >   < responsedate>2001 - 05 - 05t12:52:13 - 06:00</responsedate >   < requesturl > http://localhost / oai1?verb = getrecord&amp ;     identifier = record2&amp;metadataprefix = wibble&amp;verb = getrecord</requesturl >   < record >    < header >     < identifier > record2</identifier >     <",
    "datestamp>1999 - 02 - 12</datestamp >    < /header >",
    "< /record > < /getrecord > ....    which includes a @xmath0header@xmath1 block but no @xmath0metadata@xmath1 block .",
    "the protocol also permits the addition of an @xmath0about@xmath1 container   2.2 for each record this is provided as a hook for additional information such as rights or terms information .",
    "it is not currently used by any of the registered oai data - providers and is not implemented in the example code .",
    "listidentifiers   4.3 and listrecords   4.5 both implement a search by date , the difference is whether they return a list of identifiers or complete metadata records in the specified format .",
    "the example code implements both of these verbs using the subroutine listeither which calls a search by date ( getidsbydate ) in database.pm .    in the case of listidentifiers",
    "the output consists of @xmath0identifier@xmath1 elements which may include the attribute status=``deleted '' if the record is deleted .",
    "an example request without date restriction is :    .... simeon@fff>./oai1.pl -r ' verb = listidentifiers ' content - type : text / xml    < ?",
    "xml version=\"1.0 \" encoding=\"utf-8 \" ?",
    ">    < listidentifiers xmlns=\"http://www.openarchives.org / oai / oai_listidentifiers \"    xsi : schemalocation=\"http://www.openarchives.org / oai/1.0/oai_listidentifiers                        http://www.openarchives.org/oai/1.0/oai_listidentifiers.xsd \" >   < responsedate>2001 - 05 - 05t12:59:30 - 06:00</responsedate >   < requesturl > http://localhost / oai1?verb = listidentifiers&amp;verb = listidentifiers</requesturl >   < identifier > record1</identifier >",
    "< identifier > record2</identifier >   < identifier status=\"deleted\" > record3</identifier > < /listidentifiers > ....    the response lists the identifiers of the three records in the repository and indicates that record3 is deleted .",
    "if the parameter until=2000 - 01 - 01 were added then only the first two identifiers would be returned since the datestamp of record3 is 2000 - 03 - 13 .    in the case of listrecords",
    "the output consists of @xmath0record@xmath1 blocks similar to those obtained from getrecord requests .",
    "listrecords requests must include a metadataprefix parameter .      the oaimh protocol allows for partial responses   3.4 for all of the list verbs ( listidentifiers , listsets , listmetadataformats and listrecords ) .",
    "this feature has been implemented by most of the larger registered oai repositories for the listidentifiers and listrecords verbs .",
    "the example code does not implement this feature .",
    "to harvest metadata within the oai , one must implement the service - provider site of the oaimh protocol .",
    "i will consider the implementation of a harvester that performs two functions : firstly , harvest all metadata in a particular format , and secondly , harvest all metadata in a particular format that has changed since a given date .",
    "these functions are the basis of a system that can create and maintain an up to date copy of the metadata from an oai compliant repository .    as one of the maintainers of a heavily used archive i am painfully aware of the importance of avoiding inadvertent denial - of - service attacks created by badly written harvesting software .",
    "automated agents should always include a useful user - agent string and a valid e - mail contact address in their http requests .",
    "the flow - control elements of the protocol must be respected and careful testing is essential .",
    "i will assume that the goal is to create software which will run on some schedule so that the local copy of metadata from some set of repositories is kept updated without manual intervention .",
    "however , it would be reckless to assume that the details of repositories will not change over time . in order to avoid the need for manual polling to detect such changes",
    ", we should ask how they can be detected automatically .    to detect changes other than the addition and deletion of records which are part of normal repository operation",
    ", one can compare the response to oai requests that describe the repository between successive harvests .",
    "these requests are identify and probably listsets and listmetadataformats ( for the whole repository as opposed to any single record ) .",
    "for all of the requests we expect the @xmath0responsedate@xmath1 to change with each request but for these requests we expect the rest of the response to be unchanged .",
    "note that to do the test correctly one should compare the xml data in such a way that valid transformations , say re - ordering elements , are ignored . however , in practice it is likely to be sufficient ( if over sensitive ) to do a string comparison of the responses so long as changes in the @xmath0responsedate@xmath1 are ignored .    in the example harvester",
    "i have included the facility to specify a file containing the identify response from the previous harvest .",
    "this is used both to extract the date of the last harvest and to check for changes in that response .",
    "i have not implemented a test for changes in the listsets and listmetadataformats responses .",
    "the oaimh protocol was designed to facilitate incremental harvesting .",
    "the idea is that a service - provider will maintain an up to date copy of the metadata from a repository by periodically harvesting ` changed ' records .",
    "this is why all records have a datestamp , the date of last modification , associated with them .",
    "the 1 day granularity of the datestamp and the possibility of data - providers and service - providers being in different time zones means that there must be some overlap between the date ranges of successive requests  @xcite .",
    "if the service - provider and data - provider share the same time - zone then a 1  day overlap is sufficient to ensure that updates are not missed ; records might be updated after the harvest on the day of the last harvest , but provided records that have changed on that day are reharvested then no changes will be missed . to cope with different time zones",
    "it is necessary to extend this to a 2  day overlap if the harvester works with dates local to itself .",
    "an alternative strategy , which i prefer , is to use only the dates returned by the repository and thus , by working in the local time zone of the repository , reduce the required overlap to 1  day .    in the example harvester",
    "i implement this last strategy by taking the date of the last harvest from the @xmath0responsedate@xmath1 of the stored identity response ( the @xmath0responsedate@xmath1 must be specified in the local time zone of the repository   3.1.2.1 .",
    "this date may then be used as the from date ( inclusive ) for the next listrecords or listidentifiers request .",
    "the module oaiget.pm examines the http reply for status codes 302 ( redirect ) and 503 ( retry - after ) .",
    "both replies are handled automatically , a default retry period is assumed if the 503 response does not specify a time ( though this is an error on the part of the data - provider ) .",
    "messages are printed if the verbose option is selected .",
    "oaimh protocol replies are designed to be self contained , in part to allow off - line processing thereby separating the harvesting and database - update processes . however , in order to deal with partial responses the harvesting software must be able to parse the responses to all the list requests ( listidentifiers , listsets , listmetadataformats and listrecords ) sufficiently to extract any resumptiontoken   3.4 . to date , none of the registered oai compliant repositories give partial responses for listsets and listmetadataformats requests , but several do for listidentifiers and listrecords requests .",
    "perhaps the neatest way to implement a harvester would be to have it recombine partial responses into a complete reply .",
    "the example code does not do this but does parse all list requests to look for a @xmath0resumptiontoken@xmath1 so that further requests can be used to complete the original request .",
    "the files oaiharvest.pl , oaiget.pm and oaiparser.pm implement a simple harvester that illustrates the points mentioned above .",
    "oaiharvest.pl is the executable and accepts a variety of flags , these can be displayed by executing oaiharvest.pl -h .",
    "the algorithm is :    .... read command line arguments check options and parameters issue identify request compare response with previous identify response if given extract ` from ' date from command line , previous identify response or do complete harvest loop :    issue listrecords or listidentifiers request    check for resumptiontoken , loop if present ....    the subroutine oaiget in oaiget.pm is used to issue the oaimh requests and this handles any retry - after or redirect replies .",
    "xml parsing is handled by the oaiparser.pm module which extends xml - parser , which itself is based on the expat parser .",
    "let us take as an example , harvesting metadata from the example data - provider code which has be set up at the url http://localhost / oai1 .",
    "first we would issue a harvest command without any time restriction ( to harvest all records ) . in the examples ,",
    "i harvest just the identifiers using listidentifiers requests , the flags -r and -m metadataprefix can be used to instruct oaiharvest.pl to issue listrecords requests and to specify a metadataprefix other than oai_dc .    ....",
    "simeon@fff > mkdir harvest1 simeon@fff>./oaiharvest.pl -d harvest1 http://localhost / oai1    oaiharvest.pl : harvest from http://localhost / oai1 using post oaiget : doing post to http://localhost / oai1 args : verb = identify oaiget : got 200 ok ( 479bytes ) oaiharvest.pl : doing complete harvest .",
    "oaiget : doing post to http://localhost / oai1 args : verb = listidentifiers oaiget : got 200 ok ( 537bytes ) oaiharvest.pl : got 3 identifiers ( running total : 3 ) oaiharvest.pl : no resumptiontoken , request complete . oaiharvest.pl : done .",
    "simeon@fff > ls harvest1 identify   listidentifiers.1 ....    if we then do an incremental harvest specifying the file name of the last identify response , harvest1/identify , the harvester checks against this response for changes ( none except date ) and extracts the date of the last harvest ( 2001 - 06 - 05 ) to be used as the from date for the new harvest .    ....",
    "simeon@fff > mkdir harvest2 simeon@fff>./oaiharvest.pl -d harvest2 -i harvest1/identify   http://localhost / oai1    oaiharvest.pl : harvest from http://localhost / oai1 using post oaiget : doing post to http://localhost / oai1 args : verb = identify oaiget : got 200 ok ( 479bytes ) oaiharvest.pl : identify response unchanged from reference ( except date ) oaiharvest.pl : reading harvest1/identify to get from date oaiharvest.pl : incremental harvest from 2001 - 06 - 05 ( from harvest1/identify ) oaiget : doing post to http://localhost / oai1 args : from=2001 - 06 - 05&verb = listidentifiers oaiget : got 200 ok ( 444bytes ) oaiharvest.pl : got 0 identifiers ( running total : 0 ) oaiharvest.pl : no resumptiontoken , request complete .",
    "oaiharvest.pl : done .",
    "....    since there have been no changes in the database this harvest results in no identifiers being returned .    to extend this example",
    ", i then edited the database ( database.pm ) to add a new record ( record4 ) with datestamp 2001 - 06 - 05 which simulates the addition of a record after the last harvest but on the same day .",
    "i then ran another harvest command .",
    "simeon@fff > diff database.pm~ database.pm 24c24,26 <    ' record3 ' = > [ ' 2000 - 03 - 13 ' , undef ]   # deleted --- >    ' record3 ' = > [ ' 2000 - 03 - 13 ' , undef ] ,   # deleted >    ' record4 ' = > [ ' 2001 - 06 - 05 ' , { >      ' oai_dc ' = > [ ' title','item 4 ' , ' creator','someone else ' ] } ]     simeon@fff > mkdir harvest3 simeon@fff>./oaiharvest.pl -d harvest3 -i",
    "harvest2/identify http://localhost / oai1    oaiharvest.pl : harvest from http://localhost / oai1 using post oaiget : doing post to http://localhost / oai1 args : verb = identify oaiget : got 200 ok ( 479bytes ) oaiharvest.pl : identify response unchanged from reference ( except date ) oaiharvest.pl : reading harvest2/identify to get from date oaiharvest.pl : incremental harvest from 2001 - 06 - 05 ( from harvest2/identify ) oaiget : doing post to http://localhost / oai1 args : from=2001 - 06 - 05&verb = listidentifiers oaiget : got 200 ok ( 478bytes ) oaiharvest.pl : got 1 identifiers ( running total : 1 ) oaiharvest.pl : no resumptiontoken , request complete .",
    "oaiharvest.pl : done .",
    "....    this harvest results in one additional identifier , record4 , being returned as expected .",
    "below are two excerpts from harvests from real repositories which illustrate the flow - control features of the protocol .",
    "the first is from arxiv which uses 503 retry - after replies to enforce a delay between requests .",
    "the second if from naca which uses 302 redirect replies to demonstrate a load - sharing scheme .    .... ... oaiget : doing post to http://arxiv.org/oai1 args : verb = listidentifiers oaiget : got 503 , sleeping for 60 seconds ... oaiget : woken again , retrying ... oaiget : got 200 ok ( 27398bytes ) oaiharvest.pl : got 502 identifiers ( running total : 502 ) oaiharvest.pl : got resumptiontoken : ` 1997 - 02 - 10 _ _ _ ' oaiget : doing post to http://arxiv.org/oai1 args : resumptiontoken=1997 - 02 - 10___&verb = listidentifiers oaiget : got 503 , sleeping for 60 seconds ... oaiget : woken again , retrying ... oaiget : got 200 ok ( 28330bytes ) oaiharvest.pl : got 520 identifiers ( running total : 1022 ) oaiharvest.pl : got resumptiontoken : ` 1997 - 03 - 06 _ _ _ ' ...    ... oaiget : doing post to http://naca.larc.nasa.gov/oai/ args : verb = listidentifiers oaiget : got 302 , redirecting to http://buckets.dsi.internet2.edu/naca/oai/ ? ... oaiget : doing post to http://buckets.dsi.internet2.edu/naca/oai/ args : verb = listidentifiers oaiget : got 200 ok ( 336705bytes ) oaiharvest.pl : got 6352 identifiers ( running total : 6352 ) ... ....    i hope the examples above provide a useful demonstration of some of the features of the oaimh metadata harvesting .",
    "be sure to exercise caution and restraint when running tests against registered repositories .",
    "there is some cost in associated with answering oaimh requests , and recklessly downloading large amounts of data for no good reason is not helpful .",
    "the oaimh protocol has been public for 5 months now and experience shows that it is adequate for its intended purpose .",
    "there are now 30 registered repositories which together expose over 600,000 metadata records .",
    "while there are currently just two registered service providers , ` arc '  @xcite and the repository explorer  @xcite , there is an increasing number of tools and libraries available to assist in the development of harvesting applications .",
    "publicly available tools and libraries are listed on the oai web site  @xcite .",
    "this includes tim brody s",
    "@xcite perl library which is considerably more extensive than the examples presented here .",
    "the uptake of oai is very encouraging and it is feedback from the current implementers which will shape the next version of the oaimh protocol .",
    "anyone implementing , or interested in implementing , either side of the oaimh protocol should subscribe to the oai - implementers  @xcite mailing list .",
    "it is a helpful and friendly forum .",
    "the example programs are :    * oai1.pl and oaiserver.pm for the server ; and * oaiharvest.pl , oaiget.pm and oaiparser.pm for the harvester .",
    "these files are included with this paper , please download the source .    in order to run the example programs",
    ", you will require perl 5.004 or later and the following modules ( the precise version i used is given in parenthesis ) .",
    "for the the server :    * xml - writer ( xml - writer-0.4 )    and for the harvester :    * mime - base64 ( mime - base64 - 2.11 ) * uri ( uri-1.09 ) * html - tagset ( html - tagset-3.02 ) * html - parser ( html - parser-3.11 ) * libnet ( libnet-1.0703 ) * digest::md5 ( digest - md5 - 2.11 ) * lwp ( libwww - perl-5.48 ) * expat library ( expat-1.95.1 ) * xml - parser ( xml - parser-2.30 )    all of the above except for expat are available from cpan ( http://www.cpan.org/ ) and can be installed with the standard perl makefile.pl ; make ; make test ; make install sequence .",
    "there should not be any dependency problems if the modules are installed in the order listed .",
    "the expat xml parsing library upon which xml - parser relies , is available from source forge ( http://sourceforge.net/projects/expat/ ) .",
    "before running oaiharvest.pl you should first edit the line that defines the variable $ contact and insert your e - mail address .",
    "this will then be specified as the contact address for all http requests and will enable the server maintainer to contact you if there are problems .",
    "the example code has been tested only on a linux system and with the apache server . while i hope that it will work on other systems this has not been verified .",
    "simeon warner is one of the maintainers and developers of the arxiv e - print archive .",
    "he has been actively involved with the development and implementation of the oai since its inception .",
    "cite base at the university of southampton , a prototype open archives federating service which extracts and re - exports citation information in addition to providing a search facility , http://cite-base.ecs.soton.ac.uk/                    the oai repository explorer , an interface to interactively test archives for compliance with the oaimh protocol , hussein suleman ( digital libraries research laboratory , virginia tech . ) , http://rocky.dlib.vt.edu/~oai/cgi-bin/explorer/oai1.0/testoai      perl class library that allow the rapid deployment of an oai compatible interface to an existing web server / database for oai server and harvester implementation , http://www.ecs.soton.ac.uk/~tdb198/oai/frontend.html"
  ],
  "abstract_text": [
    "<S> in this article i outline the ideas behind the open archives initiative metadata harvesting protocol ( oaimh ) , and attempt to clarify some common misconceptions . </S>",
    "<S> i then consider how the oaimh protocol can be used to expose and harvest metadata . </S>",
    "<S> perl code examples are given as practical illustration .    </S>",
    "<S> _ high energy physics libraries webzine _ , issue 4 , june 2001 +   http://library.cern.ch/heplw/4/papers/3/ </S>"
  ]
}
{
  "article_text": [
    "since the introduction of the first iphone by apple in june 2007 , touch based mobile devices have become ubiquitous .",
    "for instance , the volume of the smartphone market has already surpassed that of the pc market in 2011  @xcite .",
    "users often store a large amount of sensitive data on mobile devices .",
    "moreover , with the advent of internet - of - things ( iot ) devices such as smartwatches , fitness trackers , the nest thermostat  @xcite , and medical devices like bee  @xcite , smartphones have gradually become the hub of iot .",
    "specifically , a user could use a smartphone to control her smartwatch , adjust home temperature via remotely controlling the nest thermostat , and view the user s insulin injection data and glucose levels from bee .",
    "access control on mobile devices is important because having access to a user s mobile device allows an attacker to 1 ) access the user s personal data , and 2 ) control the user s other connected iot devices and access sensitive data on them . for instance , an attacker that obtains access to a smartphone can access the user s sensitive sms messages , emails , and apps , as well as manipulate the user s home temperature by remotely controlling the connected nest thermostat .",
    "the most popular method to address such threats is to authenticate a user via _ password _ before allowing her to use the device , i.e. , the user logs in the device with a correct password .",
    "however , users might turn off password authentication because it is tedious and inconvenient  @xcite . for instance , egelman et al .",
    "@xcite showed that 42% of users do not lock their smartphones , and 34% of them do so because locking is  too much of a hassle \" .",
    "moreover , it is well known that conventional biometrics such as face , fingerprint , and voice are vulnerable to forgery attacks  @xcite .",
    "for instance , fingerprint readers can be tricked by taking an image of the fingerprint , forming a mold , and using wood glue to make a fake finger  @xcite .",
    "therefore , it is urgent to design secure and usable authentication methods .    a number of recent studies have raised the possibility of using low level interactions such as how a user touches the screen as a biometric signature for authentication in mobile devices  @xcite . the key idea for such authentication mechanisms",
    "is that users produce touch data all the time when using the device so that authentication can be _ passive _ , i.e. , without requiring the user to carry out any action dedicated to authentication .",
    "however , this touch - based authentication mechanism , like conventional biometrics , is also vulnerable to forgery attacks .",
    "for instance , an attacker ( e.g. , a ` friend ' or the spouse of the targeted user ) can collect the targeted user s touch data via convincing her to use the attacker s mobile devices and recording her touch data .",
    "later , the attacker can program a lego robot to replay the collected touch data on the targeted mobile device , which can compromise the authentication system with a high probability  @xcite .    * our work : *   in this work ,",
    "we demonstrate a defense against forgery attacks to touch - based biometrics .",
    "in particular , we defend against forgery attacks by leveraging the impact of screen settings ( serving as a random  secret \" ) on a user s touch behavior .",
    "the sensors on the screen of a mobile device record where , when , how fast , and how heavily a user s finger touches the screen .",
    "before the recorded raw data is sent to applications on the mobile device , our approach transforms the data as it passes through the operating system according to a _",
    "screen setting_. for instance , a screen setting of 0.8 horizontal distortion means that a 1.0 cm long horizontal line starting at a certain location on the screen is received by the application as a 0.8 cm long horizontal line starting at the same location . due to such modifications ,",
    "the running applications react differently to the actions of the user . as a consequence",
    ", the user will adapt her touch behavior ( i.e. , raw touch data recorded by screen sensors ) in order to achieve the desired application behavior .",
    "ideally , the adaptation is performed subconsciously , i.e. , the user does not explicitly notice that the screen settings have changed but still adapts the touch behavior to compensate for this change .",
    "we investigate the impact of screen settings on a user s touch behavior and their applications to defend against forgery attacks .",
    "first , we find that , when screen settings are discretized properly , a user s touch behavior in two different screen settings is _ stable _ , meaning that the behavior difference between two different users in the same setting is larger than that between two different settings for the same user .",
    "stability guarantees that we can distinguish a user s touch behavior from other users. unfortunately , stability implies that if we learn a model to distinguish a user s touch behavior from other users using only a single setting , then forgery attacks that replay the targeted user s data collected in other settings succeed with a high probability . extending stability , we find that a user s touch behavior in different screen settings is also _ sensitive _ , meaning that they have a high degree of separability in the feature space .",
    "sensitivity guarantees that one can learn a model to distinguish touch behavior of a user in two different screen settings , serving as a basis for a sufficient defense against forgery attacks .",
    "figure  [ sta - sen ] shows the concepts of stability and sensitivity .",
    "second , based on our findings , we propose a novel continuous authentication mechanism called _ adaptive touch - based continuous authentication_. our system consists of a _ registration phase _ and an _ authentication phase_. in the registration phase , we sample a set of screen settings in which a user s touch behavior is both stable and sensitive .",
    "then we train a model for each setting @xmath0 to distinguish the behavior of the user in @xmath0 from the behavior of the same user in other settings and those of other users in all considered settings . in the authentication phase , we randomly sample a predefined setting and use the corresponding model to continuously authenticate the user in each time interval .",
    "our authentication system can significantly decrease the success rate of an attacker who knows the targeted user s touch data in _ all _ settings .",
    "this is because the attacker can not know the setting used by our system at the time of attacks and replaying touch data collected in a different setting fails to pass the authentication with high probability .",
    "third , we evaluate our system via collecting data from 25 subjects in five different settings along the x axis and five different settings along the y axis .",
    "we find that users can subconsciously adapt their touch behavior to different screen settings , i.e. , the transitions between two settings do not interrupt users nor affect user experiences .",
    "moreover , our system achieves 0.02 to 0.09 smaller mean equal error rates ( eer ) than previous work for random forgery attacks and 0.17 to 0.18 smaller mean eers than previous work for targeted forgery attacks ; the registration phase of our authentication system takes a short period of time , i.e. , touch data collected within two minutes are enough to train a model for a setting ; and our system achieves smaller eers with more screen settings .    in summary ,",
    "our key contributions are as follows :    we demonstrate the stability and sensitivity of touch behavior to screen settings .",
    "we propose a new touch - based continuous authentication mechanism , which builds on the stability and sensitivity properties of behavioral touch patterns to achieve forgery - resistant touch signatures .",
    "we evaluate our authentication system via collecting touch data from 25 subjects in five screen settings along the x axis and five screen settings along the y axis .",
    "we demonstrate that our system significantly outperforms previous work at defending against forgery attacks .",
    "* screen settings : *   users interact with a mobile device via swiping , clicking , or zooming on the screen .",
    "for instance , users often slide over the screen horizontally ( e.g. , navigate to the next page of icons in the main screen or browse through photos ) and vertically ( e.g. , read webpages , social media updates , or emails ) , which result in horizontal swipes and vertical swipes , respectively .",
    "a swipe is also called a _ stroke _ , and we will use them interchangeably in the paper . the sensors on the screen record the location , timing , pressure , and covering area of interactions .",
    "more specifically , an interaction is a sequence of touch points ( @xmath1,@xmath2,@xmath3,@xmath4,@xmath5 ) , where @xmath1 is the timestamp , @xmath2 is the horizontal location , @xmath3 is the vertical location , @xmath4 is the pressure , and @xmath5 is the covering area of the @xmath6th touch point",
    ". then these touch points are transformed by the operating system to higher - level primitives such as clicks , swipes , and zooms .",
    "applications on the mobile device access the transformed primitives through the operating system . in the following , _",
    "_ refers to the raw touch data recorded by the screen sensors .    a _ screen setting _ controls how the sensed raw data is transformed to the primitives that are used by applications .",
    "for instance , screen settings can independently distort the x ( i.e. , horizontal ) axis or the y ( i.e. , vertical ) axis .",
    "note that transformation is only applied to a sequence of touch points and the first touch point of any interaction is not transformed .",
    "therefore , one - touch operations like clicking a button on an application will not be affected by different screen settings . moreover , since screen settings are transparent to applications , application developers do not need to change their applications when the screen settings are modified .",
    "suppose a user draws a line from position ( 10,10 ) to position ( 110,110 ) on the screen .",
    "under a screen setting of 0.8 y - distortion the application would see a line from position ( 10,10 ) to position ( 110,90 ) . under a screen setting of 1.2 x - distortion",
    "the application would see a line from position ( 10 , 10 ) to position ( 130 , 110 ) . to account for such transformations ,",
    "the user will adapt her touch behavior to achieve the desired application behavior .",
    "* touch - based continuous authentication : *   touch - based authentication has been proposed first in @xcite and @xcite . however , both methods require the user to carry out a specific secret gesture at a defined point of time ( unlock challenge ) and then analyze _ how _ the gesture is carried out .",
    "more recently , leveraging a user s touch interactions obtained when the user interacts with the device to continuously and implicitly monitor the user has attracted increasing attentions .",
    "complex interactions such as zooming are too infrequently used to be appropriate for continuous monitoring and clicks exhibit too few features to be discriminative for users .",
    "therefore , most previous work focus on swiping interactions ( i.e. , strokes ) , which were demonstrated to contain a behavioral biometric signature that may be used to continuously authenticate the user  @xcite .",
    "for instance , frank et al .",
    "@xcite extracted 31 features from each stroke and trained a classifier for a user to distinguish her touch behavior from other users. these features include the direction of the end - to - end line , average velocity , start locations , and end locations of a stroke .",
    "for a complete list of the features , please refer to frank et al .",
    "more recently , sae - bae et al .",
    "@xcite studied a canonical set of 22 multitouch gestures for authentication on mobile devices , and they found a desirable alignment of usability and security , i.e. , gestures that are more secure are rated by users as more usable .",
    "sherman et al .",
    "@xcite proposed to use free gestures as a static authenticator to unlock mobile devices and they further studied the memorability of user generated gestures .",
    "xu et al .",
    "@xcite verified that touch - based authentication is a promising authenticator via conducting experiments with around 30 users for one month in the wild .",
    "however , all these touch - based authentication mechanisms consider a _",
    "universal screen setting ( e.g. , the default screen setting ) for all users , making them vulnerable to _ forgery attacks _ which collect a user s touch strokes in the screen setting and program a robot to replay them to attack the authentication system ( please see more details in section  [ sec : exp ] ) .",
    "our work also focuses on users strokes , but we leverage multiple , randomly chosen screen settings .    *",
    "common - behavior attacks : *   serwadda and phoha  @xcite showed that a lego robot can be programmed to swipe the screen of a mobile device , and the stroke recorded by the screen sensors is as desired .",
    "the attacker needs to know the defining parameters ( e.g. , start and stop locations ) of the stroke that is to be forged .",
    "moreover , they proposed that the attacker can simply program the robot to replay the common touch behavior of a large population onto the targeted user s mobile device , and they showed that such _ common - behavior attacks _ can significantly increase the eers .",
    "however , they also showed that their common - behavior attacks have limited success rates for users whose behaviors are relatively far from the common , and there are about 20 - 40% of such users .",
    "this means that touch - based authentication is appropriate to these users . in practice",
    ", touch - based authentication systems can compare a user s touch behavior to those of a large population and recommend if the behavior is far enough from the common behaviors so that it is resilient to common - behavior attacks .    in this work ,",
    "we consider stronger forgery attacks in which the attacker could obtain the targeted user s touch data .",
    "the authentication system is available to the attacker . the attacker can read and analyze the implementation details of the authentication system offline",
    "therefore , if the authentication system uses a universal screen setting ( e.g. , the default screen setting ) for all users , the attacker can obtain this setting via offline code analysis .",
    "however , we assume that the attacker can not obtain the dynamic behaviors of the authentication system that runs on the targeted user s mobile device .",
    "for instance , the attacker can not know the current setting used by the authentication system if it is randomly sampled in random time intervals .",
    "this is because reading out the current settings at runtime requires high privileges ( e.g. , root access to the operating system ) and an attacker that has already obtained such high privileges already compromised the system .",
    "we assume the attacker has a commercialized programmable robot ( e.g. , a lego robot ) , which can be used to forge touch strokes and play them on mobile devices .",
    "for instance , serwadda and phoha  @xcite showed how to program a lego robot to forge touch strokes to have desired features .",
    "we note that an intelligent robot which is equipped with specialized sensors could potentially detect the current screen setting used by our authentication system using advanced computer vision algorithms .",
    "however , the attacker might not have such a specialized robot , and thus , in this work , we consider _ state - of - the - art commercialized _ robots , with which the attacker can not infer the current screen setting .",
    "we consider two general forgery attacks depending on whether the attacker obtains touch strokes of the targeted user or not .",
    "we will discuss more advanced targeted attacks such as training a human attacker in section  [ discussion ] .",
    "* random attacks : *   in this scenario , the attacker does not obtain touch strokes of the targeted user .",
    "for instance , this could be the case in which the targeted user lost the device and it is found by a random attacker , who does not know the targeted user and does not have its touch strokes .",
    "however , the attacker could obtain touch strokes of a set of other users .",
    "this is reasonable because 1 ) the attacker can retrieve touch strokes from publicly accessible data sets  @xcite , and 2 ) it is possible that users ( intentionally or unintentionally ) install an application ( e.g. , this application is a fun game application and does not appear to be malicious ) that is developed by the attacker on their mobile devices and the application records users touch strokes .",
    "after obtaining touch strokes from a set of users in different screen settings , the attacker randomly selects touch strokes , programs a lego robot to forge them  @xcite , and uses the programmed robot to touch the mobile device .",
    "* targeted attacks : *   in this case , the attacker obtains touch strokes of the targeted user . for instance",
    ", the attacker could be a `` friend '' of the targeted user or the targeted user s curious spouse , who wants to access the messages sent by the targeted user or know whom the targeted user has called , and the attacker convinces the targeted user to use his / her mobile devices to record the targeted user s touch strokes .    again , the attacker programs a robot using the collected strokes to attack the targeted user .",
    "intuitively , if the authentication system uses an universal screen setting , the attacker can obtain the targeted user s strokes in this universal setting , which results in attacks with very high success rates ( see section  [ sec : exp ] ) .",
    "our new authentication mechanism uses multiple screen settings in which a user s touch behavior is different , and we randomly sample one of the screen settings in each time interval .",
    "given enough settings , our system can significantly decrease the success rates of targeted attacks even if the attacker obtains the targeted user s touch strokes in _ all _ screen settings .",
    "this is because the attacker can not know the screen setting used by our authentication system at the time of attack , and thus the attacker does not know which strokes should be used to program the robot .",
    "therefore , the attack is reduced to randomly guessing a setting @xmath0 , but replaying strokes collected in @xmath0 passes the authentication with much lower probabilities if @xmath0 is not the current setting used by our authentication system .",
    "we note that we do not consider attacks with advanced robots to automatically infer the screen setting in this work .",
    "before introducing our adaptive touch - based continuous authentication system , we introduce two key observations that inspire the design of our authentication system .",
    "* stability and sensitivity : *   a user s touch behaviors in two screen settings are said to be _ stable _ if the touch behaviors of the user in one setting are closer to those of the user in the other setting than those of other users in both settings .",
    "moreover , a user s touch behaviors in two settings are said to be _ sensitive _ if they have a high degree of separability in the feature space .",
    "figure  [ sta - sen ] illustrates the possible outcomes for two settings @xmath7 and @xmath8 .",
    "intuitively , a user s touch behaviors in two settings become more stable and less sensitive when the two settings are closer .",
    "we find that there exists screen settings across which a user s touch behaviors are both stable and sensitive .",
    "for instance , in our experiments ( see section  [ sec : exp ] ) , two of the screen settings we consider are 0.8 y - distortion and 1.2 y - distortion , respectively .",
    "figure  [ stroke ] shows vertical touch strokes of three users in the two settings ; it is visually noticeable that their behaviors are stable .",
    "note that a vertical stroke could be an _ up _ stroke or a _ down _ stroke , which corresponds to scrolling up or scrolling down , respectively . figure  [ sensitive ] contrasts the start locations ( i.e. , start @xmath9 ) and stop locations ( i.e. , stop @xmath9 ) in the vertical direction ( i.e. , y axis ) of up strokes .",
    "we find that their touch behavior are also sensitive .",
    "user a ( or b ) starts touch strokes at similarly low @xmath9 locations in both settings .",
    "however , in the screen setting of 0.8 y - distortion , the strokes interpreted by the application are shorter than the strokes inputed by the user on the screen , and thus the user automatically stops the touch strokes at higher ( i.e. , larger ) @xmath9 locations , which makes the strokes on the screen longer .",
    "user c might subliminally notice the different screen settings , and she tends to start and stop the touch strokes at higher @xmath9 locations with 0.8 y - distortion .",
    "* implications : *   on one hand , stability implies that models trained in any setting of one user will always be distinguishable from models trained for other users , clearly separating individual users with high probabilities .",
    "this property is needed to successfully authenticate a specific user .",
    "on the other hand , if we learn a model to distinguish a user s touch behaviors from other users in a single setting , then forgery attacks that replay the targeted user s strokes collected in other settings can still succeed with high probabilities .",
    "sensitivity implies that we can train a model to distinguish a single user s touch behaviors in one setting from those in other settings , which makes it possible to defend against targeted attacks .",
    "specifically , when our authentication system uses a setting @xmath0 , the attacker would fail to pass the authentication with much higher probability if the attacker forges attacks using the targeted user s strokes collected in settings other than @xmath0 .",
    "our touch - based authentication system consists of two phases : the _ registration phase _ and the _ authentication phase_. the authentication system learns user characteristics during the registration phase and enforces these learned characteristics during the authentication phase .",
    "figure  [ registration ] illustrates the registration phase .",
    "suppose @xmath10 is a new user .",
    "first , we sample @xmath11 screen settings across which @xmath10 s touch behaviors are both stable and sensitive . in practice",
    ", we can evenly divide the range of possible screen settings into @xmath12 bins , and choose the centers of the @xmath11 bins that are randomly sampled .",
    "we denote the set of sampled settings as @xmath13 .",
    "we distinguish two types of strokes : _ horizontal _ and _ vertical _ , which correspond to scrolling horizontally and scrolling vertically , respectively .",
    "the two types of strokes have different features , e.g. , the directions of the end - to - end lines corresponding to the strokes .",
    "this categorization could enable us to enhance the performance of the system .",
    "for each setting @xmath14 , we collect a set of touch strokes for each type @xmath15 ( denoted as @xmath16 ) from @xmath10 via fixing the screen setting to be @xmath0 .",
    "then we extract a set of features from each stroke .",
    "we adopt the features that are proposed by frank et al .",
    "the extracted features are subsequently sent to the server .",
    "we send features to the server instead of the raw strokes to mitigate the loss from a server compromise .",
    "in particular , if we send raw strokes to the server and it is compromised , the raw strokes are easily available to attackers .",
    "this is similar to the scenario where passwords are available to attackers when a password database is compromised  @xcite . however , even if the server is compromised and the features are available to attackers , it is unclear how to forge touch strokes that have these features .",
    "second , we leverage machine learning techniques to train a classifier for each setting and each stroke type .",
    "specifically , for each setting @xmath14 and a stroke type @xmath15 , we take the features of the corresponding strokes collected in the setting @xmath0 ( i.e. , @xmath16 ) as positive examples , and features of type-@xmath15 strokes collected in all other settings ( i.e. , @xmath17 for all @xmath18 ) and features of type-@xmath15 strokes of all users that have already adopted the system as negative examples . then we learn a classifier @xmath19 to distinguish these positive and negative examples .",
    "therefore , we obtain @xmath20 classifiers for the user",
    ". the model parameters of these classifiers are then sent back to the user .",
    "our adaptive continuous authentication method works on discrete time intervals . in each time interval , we sample a setting @xmath0 from @xmath13 uniformly at random and change the screen setting to be @xmath0 .",
    "if the user inputs a stroke with type @xmath15 , we authenticate the stroke using the classifier @xmath21 .",
    "intuitively , our authentication method can significantly decrease the success rates of targeted attacks . in the worst case",
    ", the attacker obtains a set of touch strokes of the user in _ all _ settings in @xmath13 and can replay these touch strokes via programming a robot .",
    "however , the attacker can not know which setting is randomly sampled in a given time interval , and thus the attack is reduced to randomly guess a setting and program a robot to replay strokes collected in the setting .",
    "due to the sensitivity of users touch behaviors , these forged strokes will be rejected with high probabilities .",
    "note that previous work  @xcite uses a fixed universal setting for all users , and thus their authentication systems can be breached if the attacker obtains the targeted user s touch strokes in this hard - coded setting .",
    "moreover , we show ( in section  [ sec : exp ] ) that even replaying the touch strokes of the targeted user collected in a different setting can still breach their authentication system with high success rates because of the stability of users touch behaviors .",
    "a user s behavior is relatively stable over time .",
    "for instance , frank et al .",
    "@xcite showed that the median eer increases by only 4% when their classifiers are used one week after the registration phase .",
    "however , in practice , to account for behavior variety in a longer period of time , we could periodically ( e.g. , each month or quarter ) execute a registration phase to update classifiers .",
    "this is feasible since the registration phase takes a short period of time as we will show in our experiments .",
    "we evaluate the security of our new touch - based authentication system against forgery attacks and compare it with previous touch - based authentication systems .",
    ".notations of the five screen settings , which are distortions along either the x axis or the y axis . [ cols=\"^,^,^,^,^\",options=\"header \" , ]     [ attacks ]    as we expect , same - setting targeted attacks achieve higher eers than diff - setting targeted attacks for both c - baseline classifiers and our c - atca classifiers .",
    "this is because users touch behaviors are sensitive .",
    "for instance , for horizontal strokes , eers of diff - setting targeted attacks are 13%-34% smaller than those of same - setting targeted attacks for our c - atca classifiers depending on which setting is used to collect the targeted attacks data .    moreover , when the difference between the screen setting used to collect the targeted attacks data and the screen setting of the classifier increases , the eer of the corresponding diff - setting attacks decreases . for instance , for horizontal strokes , the eer of the diff - setting targeted attack ta-@xmath22 is 12% smaller than that of the diff - setting targeted attack ta-@xmath23 for our c - atca classifiers .",
    "our observations imply that users touch behaviors are more sensitive when the differences between screen settings are larger .",
    "* c - baseline vs. c - atca : *   our classifiers perform significantly better than c - baseline classifiers at defending against diff - setting attacks .",
    "specifically , eers of diff - setting random attacks to our classifiers are 1% to 8% smaller than those of the c - baseline classifiers .",
    "for instance , with horizontal strokes , the eer of the diff - setting random attacks ra-@xmath22 is 9% for the c - baseline-@xmath24 classifier .",
    "however , the eer of ra-@xmath22 is 3% for our classifier c - atca-@xmath24 , which is 6% smaller than the c - baseline-@xmath24 classifier .",
    "moreover , eers of diff - setting targeted attacks to our classifiers are 6% to 22% smaller than those of the c - baseline classifiers .",
    "for instance , with horizontal strokes , the eer of the diff - setting targeted attacks ta-@xmath22 is 39% for the c - baseline-@xmath24 classifier .",
    "however , the eer of ta-@xmath22 is 21% for our classifier c - atca-@xmath24 , which is 18% smaller than the c - baseline-@xmath24 classifier .",
    "this is because a user s touch behaviors in the five screen settings are both stable and sensitive , which results in high eers for the c - baseline classifiers and explains the low eers for our classifiers , respectively .    for same - setting random attacks , the eers of our classifiers are slightly larger than those of the c - baseline classifiers in some cases",
    "this is because our classifiers in a setting @xmath0 use more negative examples other than the strokes of other users collected in @xmath0 , which somehow makes their decision boundaries move towards the strokes of other users collected in @xmath0 , and thus same - setting random attacks achieve slightly higher eers .",
    "as we expect , same - setting targeted attacks achieve high eers for all classifiers .",
    "specifically , eers of our classifiers and the c - baseline classifiers are all close to 50% for same - setting targeted attacks .",
    "this means that , for each stroke , the classifier makes a random decision , i.e. , it accepts or rejects it with the same probability of 0.5 .",
    "we first introduce possible attacks to the considered authentication systems and then show comparison results .",
    "* attacks : *   suppose the attacker already knows the set of settings @xmath25 that _ could _ be used by the authentication systems . moreover , for a targeted user , we assume the attacker obtains touch strokes of the targeted user or other users in all the five settings .",
    "this means that the attacker can perform targeted attacks or random attacks using strokes collected in any of the five settings .",
    "recall that ra-@xmath26 ( or ta-@xmath26 ) denotes the random attacks ( or targeted attacks ) that use strokes collected in the setting @xmath27 to authentication systems that use the setting @xmath28 , where @xmath29 .",
    "note that the attacker does not know which setting ( or classifier ) is currently used by our authentication system at a given time point .    to attack the baseline authentication system that uses the setting @xmath28 ( i.e. , s - baseline-@xmath30 ) , the attacker can choose to perform the best random attacks ( i.e. , @xmath31 @xmath32 for @xmath33 ) or same - setting targeted attacks ( i.e. , ta-@xmath34 ) that achieve the highest eers , where @xmath35 .",
    "this is because the attacker can know the used screen setting .    to attack s - baseline - improved or s - atca ,",
    "the attacker does not know the setting of the authentication system and thus it randomly selects a setting and replays strokes collected in the selected setting . as a result ,",
    "the 25 possible attacks ra-@xmath26 for @xmath36 are performed with an equal probability of @xmath37 in the random attacks , and ta-@xmath26 for @xmath36 are performed with an equal probability of @xmath37 in the targeted attacks .",
    "table  [ attacks ] summarizes the possible attacks to different authentication systems .",
    "[ result - auth ]    * eer of authentication systems : *   for an authentication system and an attack scenario ( e.g. , random attacks or targeted attacks ) , we compute an eer via averaging the eers of the possible attacks to the authentication system , and this average eer is used to measure the resilience of the authentication system to the attacks .",
    "* results : *   table  [ result - auth ] shows the mean eers over all subjects for each authentication system and attack scenario for horizontal strokes and vertical strokes .",
    "overall , we find that our adaptive authentication system achieves the smallest eers for both random attacks and targeted attacks .",
    "specifically , the eer of adaptive authentication system is 2% to 9% smaller than those of the baseline and improved baseline authentication systems for random attacks . for targeted attacks , our improved baseline authentication system ( i.e.",
    ", s - baseline - improved ) is 5% to 6% smaller than that of the baseline authentication systems , and our adaptive authentication system further decreases the eer by 12% for both horizontal and vertical strokes .      we show that the eers of our authentication system decrease when we use more appropriate screen settings . towards this goal , we vary the number of screen settings and compare the corresponding eers .",
    "considering the influence of the difference between two screen settings , we consider two scenarios , in which the number of screen settings increases in different fashions .",
    "the two scenarios are :    * scenario i : * the new screen settings are out of the range that is covered by the existing screen settings . specifically , we consider two screen settings consist of @xmath38 , three settings consist of @xmath39 , four settings consist of @xmath40 , and five settings consist of @xmath41 .",
    "* scenario ii : * the new screen settings are in the range that is covered by the existing screen settings . specifically , we consider that two screen settings consist of @xmath42 , three settings consist of @xmath43 , four settings consist of @xmath44 , , and we found that the two four - screen - settings achieve similar eers . ] and five settings consist of @xmath41 .    since eers of random attacks are all small , we focus on targeted attacks .",
    "figure  [ impact - settings ] shows eers of targeted attacks to our system for different number of screen settings .",
    "we observe that our authentication system achieves smaller eers as the number of settings increases for both horizontal strokes and vertical strokes and for both scenarios .",
    "this is because , with less screen settings , the performance of our authentication system is dominated by the same - setting targeted attacks whose eers are high .",
    "however , with more settings , the impact of same - setting targeted attacks is smaller , and the performance of our authentication system gets improved .",
    "in fact , the probability of same - setting targeted attacks is @xmath45 , where @xmath11 is the number of settings used .      to learn our classifiers for a user , we need to collect his / her touch strokes . to study the effect of time spent on collecting training strokes from a new user on the performance of our classifiers , we sample a user and one of the five trials / folds . in the selected trial",
    ", we keep the test dataset and attack datasets the same while increasing the positive training dataset ( the negative training dataset is fixed ) .",
    "figure  [ learning ] shows the eers of various attacks as a function of time spent on collecting positive training horizontal strokes .",
    "the classifier is c - atca - e .",
    "eers of the targeted attacks using strokes collected in the setting @xmath46 ( i.e. , ` ta , @xmath46 ' ) are all close to 50% , and thus are ignored to better contrast the differences of other eers .",
    "we find that eers converge very fast .",
    "in particular , after 2 minutes ( around 30 strokes ) , eers are stable or slightly fluctuate . moreover , after collecting strokes , training a classifier is finished within 1 second .",
    "our observations can be summarized as follows :    users can subconsciously adapt their behavior to different screen settings , i.e. , transitions between settings do not affect user experiences .",
    "our authentication mechanism achieves much smaller eers than previous work for both random attacks and targeted attacks .",
    "our authentication system achieves smaller eers with more screen settings .",
    "learning our classifiers is fast , i.e. , strokes collected within two minutes are enough to stabilize eers .",
    "* training human attackers : *   to mimic the targeted user s touch behavior , a human attacker needs to be trained to produce touch strokes whose features are close to those of the targeted user .",
    "we note that meng et al .",
    "@xcite proposed an interactive system to train a human attacker to reproduce _ keystroke dynamics _ of the targeted user for a _ given short password_. specifically , they consider features of keystroke dynamics are constructed from 2-grams , and thus changing the keystroke timing of a character only influences features of the local two 2-grams .",
    "for instance , suppose we have a password with three characters abc , changing the keystroke timing of b only influences the features of ab and bc .",
    "thus , it is possible to train a human attacker to reproduce the keystroke dynamics of a given short password via greedily changing the keystroke timings of characters one by one .",
    "however , reproducing touch strokes could be much harder than reproducing keystroke dynamics .",
    "this is because 1 ) we have around 30 touch features , 2 ) changing one touch point could result in changes of a few features , and 3 ) the human attacker needs to learn how the targeted user would adapt to different screen settings .",
    "nevertheless , it is an interesting future work to explore the possibility / impossibility of training human attackers to mimic a targeted user .",
    "* fixing one screen setting to perform targeted attacks : *   a robot can keep replaying touch data collected in a fixed screen setting to attack our authentication system .",
    "the expected number of tries until the robot is using the correct screen setting would then be the total number of screen settings .",
    "once the robot gets the correct setting , the robot can use the mobile device for a time interval during which the setting is unchanged .",
    "however , this attack can be blocked with a high probability by combing our touch - based authentication with pins .",
    "specifically , once we detect suspicious touch data , we ask the user to type in the backup pin . * detecting screen settings with specialized intelligent robots : *   an intelligent robot that is equipped with specialized sensors could potentially detect the screen settings using some artificial intelligence ( ai ) algorithms , and detecting the screen settings could enable the attacker ( e.g. , a friend or spouse of the targeted user ) to perform better targeted attacks .",
    "for instance , a robot with a camera could possibly detect the screen settings by using computer vision algorithms to compare its raw touch data ( collected via the camera ) on the screen and the movements ( again , collected via the camera ) of the running application .",
    "however , the robot still needs to generate a few touch strokes ( these strokes may be from a screen setting that is different from the one used by our authentication system ) before the screen setting is detected , during which our authentication scheme might already successfully reject the attacker .",
    "moreover , it might not be easy for the attacker to get such a specialized robot , which is true at least for now , given the current state of ai .",
    "therefore , we focus on robots that are commercialized and easy to get .",
    "* leveraging sloppiness and jitter : *   screen settings could also adjust sloppiness and jitter other than the distortions along the x axis and the y axis studied in this paper . sloppiness controls how far the user has to move the finger on the screen to send a movement to the applications and jitter controls what distortions from a straight line on the screen are still considered as a movement by the applications .",
    "it is an interesting future work to explore the impact of sloppiness and jitter on the performance of defending against forgery attacks in our authentication system .",
    "in this work , we design a new touch - based continuous authentication system to defend against forgery attacks by leveraging the impact of screen settings on a user s touch behaviors .",
    "first , we find that , when screen settings are discretized properly , a user s touch behaviors in two different settings are both _ stable _ and _",
    "sensitive_. second , based on these findings , we design a new authentication system called _ adaptive touch - based continuous authentication_. the key idea is to randomly sample a predefined screen setting in each time interval .",
    "the attacker can not know the screen setting at the time of attacks .",
    "third , we evaluate our system by collecting data from 25 subjects in five screen settings .",
    "we find that users can subconsciously adapt their touch behavior to different screen settings , i.e. , transitions between settings do not interrupt users nor affect user experiences .",
    "moreover , we observe that our system significantly outperforms previous work at defending against both random forgery attacks and targeted forgery attacks , the registration phase of our system takes a short period of time , and our system can better defend against forgery attacks with more screen settings .",
    "future work includes performing a large - scale study about our authentication system in the wild , investigating more types of screen settings , and exploring more advanced attacks to touch - based authentication systems ."
  ],
  "abstract_text": [
    "<S> mobile devices store a diverse set of private user data and have gradually become a hub to control users other personal internet - of - things devices . </S>",
    "<S> access control on mobile devices is therefore highly important . </S>",
    "<S> the widely accepted solution is to protect access by asking for a password . </S>",
    "<S> however , password authentication is tedious , e.g. , a user needs to input a password every time she wants to use the device . </S>",
    "<S> moreover , existing biometrics such as face , fingerprint , and touch behaviors are vulnerable to forgery attacks .    </S>",
    "<S> we propose a new touch - based biometric authentication system that is passive and secure against forgery attacks . in our touch - based authentication , </S>",
    "<S> a user s touch behaviors are a function of some random `` secret '' . </S>",
    "<S> the user can subconsciously know the secret while touching the device s screen . however , an attacker can not know the secret at the time of attack , which makes it challenging to perform forgery attacks even if the attacker has already obtained the user s touch behaviors . </S>",
    "<S> we evaluate our touch - based authentication system by collecting data from 25 subjects . </S>",
    "<S> results are promising : the random secrets do not influence user experience and , for targeted forgery attacks , our system achieves 0.18 smaller equal error rates ( eers ) than previous touch - based authentication . </S>"
  ]
}
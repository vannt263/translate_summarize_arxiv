{
  "article_text": [
    "data collection is the mainstream application scenario in wireless sensor networks  ( wsns ) , where sensor nodes collect and forward data to a base station for further processing and analysis .",
    "since the nodes are usually battery - powered , energy efficiency is a major requirement for long - term data collection .",
    "while latency plays only a minor role in data collection , a data yield close to 100@xmath0% is typically expected .    in this paper ,",
    "we analyze two different approaches for energy - efficient data collection in wsns : push and pull . using the _ push _ approach",
    ", nodes immediately transmit the sensed data to the sink .",
    "this requires the nodes to be continuously active to maintain up - to - date routing paths .",
    "approach instead operates in two alternating phases , as illustrated in figure  [ fig : pull ] . during regular sleep phases the nodes",
    "do not transmit sensed data but store these in the local flash memory . at the beginning of each data collection phase , the sink wakes up the network , whereupon the nodes transmit all data backlogged in the preceding sleep phase .",
    "afterwards , the sink puts the network back to sleep .",
    "the major advantage of push is the lower latency .",
    "its downside is the energy overhead to maintain up - to - date routing paths .",
    "this is not required in the pull approach , which allows the nodes to limit their activity to a minimum in the sleep phase to save energy .",
    "these savings are paid by i )  control overhead incurred by the central administration , ii )  energy overhead due to flash data storage and routing path initialization before each data collection phase , and iii )  higher latency as determined by the pull interval @xmath1 .",
    "most data collection applications use push , even though the application requirements would allow for pull ( e.g.,no latency requirement ) .",
    "dutta  et  al .",
    "@xcite present first insights into a pull - based approach .",
    "we build on these promising results by comparing the energy consumptions of push and pull based on testbed experiments .",
    "we also show how one can modify an existing , push - based data collection protocol to make it work like a pull - based one .",
    "these modifications are applicable to any push - based protocol running on top of any medium access control  ( mac ) protocol based on low power listening .",
    "we demonstrate the feasibility of our techniques with a basic implementation of the collection tree protocol  ( ctp )  @xcite running on top of the x - mac  @xcite protocol .",
    "to transform a push - based data collection protocol such as ctp into a pull - based one , we start by splitting its operation in two distinct phases : a sleep phase and a data collection phase . these phases must satisfy the following conditions :    * sleep phase : nodes do not communicate while waiting for the sink to initiate the data collection phase .",
    "sensed data is stored locally in flash memory . *",
    "data collection phase : nodes first initialize the routing paths as done when starting the push - based data collection . as soon as routing paths are available ,",
    "nodes start to transmit backlogged data .    in a second step , we leverage the beacons periodically broadcast by the routing protocol to exchange routing information for the central administration of pull",
    ". specifically , we extend these beacons with phase ids to distinguish the two protocol phases . to trigger a phase change , the sink sets the appropriate phase i d in its beacons .",
    "the energy consumption in the sleep phase is heavily dictated by the idle listening of the mac protocol . while a long mac wake - up interval @xmath2 saves energy in the sleep phase , it limits the available bandwidth in the data collection phase . to overcome this limitation , we propose to use two different wake - up intervals : @xmath3 in the sleep phase and @xmath4 in the data collection phase .",
    "the longer @xmath3 saves energy by achieving a low duty cycle in the sleep phase .",
    "the shorter @xmath4 provides sufficient bandwidth in the data collection phase .    for a fair comparison between push and pull with respect to energy ,",
    "we perform two additional modifications to achieve close to 100@xmath0% data yield for both approaches :    * a data packet is only deleted from the sender s buffer after the reception of a data packet acknowledgment . *",
    "if the receiver s forwarding buffer  @xcite is full , it replies with an explicit `` not acknowledged '' message .",
    "this forces the sender to back off before sending the data packet again , and hence works as a back - pressure flow - control mechanism .",
    "we compare the power consumptions ( i.e.,microcontroller , radio transceiver , and flash ) of push and pull on a 35-node testbed .",
    "the nodes are tmote sky  @xcite devices distributed in several offices on one floor , running the contiki operating system  @xcite .",
    "nodes generate data with a sampling interval of 45  seconds .",
    "one node acts as an always - listening sink , i.e.,its radio is always on .",
    "we do not consider the power consumption of the sink as it has an unlimited energy supply .",
    "we receive with both approaches in all experiments 100@xmath0% of the generated packets , due to the reliability modifications described in section  [ sec : approach ] .",
    "we first analyze the power consumption of pull for intervals @xmath1 ranging from 100  seconds to 60  minutes and compare these with push .",
    "this is shown in figure  [ fig : pull_int ] .",
    "we look at the average and maximum power consumption .",
    "average denotes the average power consumption of all nodes and maximum is the maximum power consumption among all nodes .",
    "every data collection phase incurs an energy overhead for waking up the network and putting it back to sleep .",
    "the fewer data collection phases are performed , i.e. , the longer the pull interval , the lower the total energy consumption .",
    "pull uses less energy than push with pull intervals above 5  minutes .",
    "for example , with a pull interval of 60  minutes , the average and the maximum power consumptions of pull are 50@xmath0% and 40@xmath0% below those of push .",
    "the distribution of power consumption for the pull approach with a pull interval of 60  minutes is depicted in figure  [ fig : pull_power_bar ] .",
    "it shows the average power consumptions of the microcontroller  ( mcu ) , the radio ( for idle listening and data transmission ) , and the flash in the two phases .",
    "nodes consume 90@xmath0% less power in the sleep phase compared to the data collection phase , because there is no data transmission and especially due to the longer mac wake - up interval .",
    "notably , the power used by the flash is negligible in both phases .",
    "even using a simple pull approach achieves an energy gain of almost a factor of two .",
    "the energy overhead due to recurring initialization phases is amortized if the pull interval is above a couple of minutes .",
    "this is because the energy saved in the sleep phases is much larger . with respect to energy consumption",
    "it is favorable to have as few collection phases as possible .",
    "the maximum pull interval is bounded by the latency requirement and the available flash storage .",
    "the increasing amount of available flash storage relaxes the storage requirement .",
    "for example , having just 1  mb flash storage and sampling 100 bytes of data once per minute would require to collect data only once a week .",
    "furthermore , the pull approach provides a wide range of power optimization opportunities  @xcite , such as efficient data stream transmissions and effective data compression due to the large amount of available data .",
    "the work presented here was supported by the national competence center in research on mobile information and communication systems ( nccr - mics ) , a center supported by the swiss national science foundation under grant number 5005 - 67322 ."
  ],
  "abstract_text": [
    "<S> we analyze push and pull for data collection in wireless sensor networks . </S>",
    "<S> most applications to date use the traditional push approach , where nodes transmit sensed data immediately to the sink . using a pull approach , </S>",
    "<S> nodes store the data in their local flash memory , and only engage in communication during dedicated collection phases . </S>",
    "<S> we show how one can transform an existing push - based collection protocol into a pull - based one , and compare the power consumption of both approaches on a 35-node testbed . </S>",
    "<S> our results show that substantial energy gains are possible with pull , provided that the application can tolerate a long latency . </S>"
  ]
}
{
  "article_text": [
    "the well - known gibbard - satterthwaite @xcite impossibility theorem in mechanism design asserts that in unrestricted domains , every implementable social choice function which has at least three alternatives in its range , must be dictatorial .",
    "a crucial aspect of the unrestricted domain assumption is that monetary transfers are not permitted .",
    "however , models where monetary transfers are admissible are very important .",
    "both the auction setting and the standard public good model assume that agents can receive monetary transfers ( either positive or negative ) and that the underlying utility function of every agent is quasi - linear in money .",
    "this paper is a contribution to the literature which investigates the structure of social choice functions which can be implemented in dominant strategies in these settings .",
    "@xcite showed that efficient social choice functions can be implemented by a unique family of transfer rules , now popularly known as vickrey - clarke - groves ( vcg ) transfer schemes .",
    "remarkably , when the domain is unrestricted ( as in the gibbard - satterthwaite setup ) and the range of the mechanism contains at least three alternatives , the only ( dominant strategy ) implementable social choice functions are _ affine maximizers_. these social choice functions are generalizations of weighted efficiency rules .",
    "this result was proved by @xcite in a seminal paper .",
    "it can be seen as the counterpart to the gibbard - satterthwaite theorem for quasi - linear utility environments .    as in the literature without money ,",
    "the literature with quasi - linear utility has since tried to relax various assumptions in roberts theorem .",
    "@xcite shows that a certain _ cycle monotonicity _",
    "property characterizes dominant strategy implementable social choice functions .",
    "though this characterization is very general - works for any domains and any set of alternatives ( finite or infinite ) - it is not as useful as the roberts theorem since it does not give a functional form of the class of implementable social choice functions . along the lines of @xcite , @xcite and @xcite",
    "have shown that a _ weak monotonicity _ property characterizes implementable social choice functions in auction settings , a severely restricted domain , when the set of alternatives is finite and the type space is convex  .",
    "again , the precise functional form of the implementable social choice functions are missing in these characterizations .",
    "a fundamental open question is the following : + _ what subdomains allow for a functional form of implementable social choice functions ? _ + several attempts have been made recently to simplify , refine , and extend roberts theorem . using almost the same structure and approach , @xcite reduced the complexity of roberts original proof .",
    "@xcite also provide an alternate ( modular ) proof of roberts theorem for unrestricted domain .",
    "building on the technique of @xcite , @xcite extend roberts theorem to _ continuous _ domains .",
    "other proofs of roberts theorem can be found in ( for unrestricted domains ) @xcite and @xcite .",
    "our paper contributes to the literature in two ways .",
    "first , we characterize restricted domains where the affine maximizer theorem holds in the presence of an additional assumption on social choice functions , that of _ neutrality_. neutrality requires the social choice function to treat all alternatives symmetrically .",
    "it is a familiar axiom in social choice theory and we discuss it at greater length in section [ subsection : neutrality ] . our main result states that every implementable social choice function is a weighted welfare maximizer if the type space of every agent is an @xmath0-dimensional open interval , where @xmath0 is the number of alternatives . for the unrestricted domain ,",
    "our result implies roberts result in the special case where attention is restricted to neutral social choice functions .",
    "we demonstrate that the neutrality assumption is essential for our domain characterization result in the following sense : there exist ( open interval ) domains over which an implementable non - affine - maximizer social choice function exists but over which all neutral implementable social choice functions are weighted welfare maximizers .    our second contribution is methodological and conceptual .",
    "our proof technique differs significantly from existing ones .",
    "it can be summarized in three steps .    * we show that an implementable and neutral social choice function induces an ordering on the domain .",
    "* this ordering satisfies three key properties : _ weak pareto , invariance , and continuity_. * we then prove a result on the representation of any ordering which satisfies these properties . for unrestricted domains",
    "this result is familiar in the literature - see for instance , @xcite , @xcite , @xcite , @xcite and @xcite .",
    "we show that any ordering on an open and convex set which satisfies the axioms specified in s2 can be represented by a weighted welfare maximizer .",
    "the key feature of our approach is to transform the problem of characterizing incentive - compatible social choice functions over a domain into a particular problem of characterizing orderings of vectors in that domain .",
    "the problem of characterizing orderings satisfying properties such as weak pareto , invariance , continuity etc ( over the unrestricted domain ) , is a classical one in social choice theory .",
    "it arose from the recognition that a natural way to escape the negative conclusions of the arrow impossibility theorem was to enrich the informational basis of arrovian social welfare functions from individual preference orderings to utility functions .",
    "if a social welfare function satisfies the ( standard ) axioms of independence of irrelevant alternatives and pareto indifference , then it is `` equivalent '' to an ordering over @xmath1 where @xmath2 is the number of individuals . the aggregation problem in this environment",
    "can therefore be reduced to the problem of determining an appropriate ordering of the vectors in @xmath1 .",
    "there is an extensive literature which investigates exactly this question ( see @xcite for a comprehensive survey ) .",
    "it has been known that there is a deep connection between two seemingly unrelated problems in social choice - the strategic problem with the goal of characterizing incentive - compatible social choice functions and the aggregation problem with the objective of characterizing social welfare functions satisfying the arrovian axioms .",
    "for instance in the case of the unrestricted domain consisting of all preference orderings , the arrow theorem can be used to prove the gibbard - satterthwaite theorem and vice - versa ( for a unified approach to both problems see @xcite ) .",
    "our proof serves to highlight this connection further by demonstrating the equivalence of a strategic problem in a quasi - linear domain with an aggregation problem involving utility functions .",
    "we also remark that though the representation result in step s3 is well - known for unrestricted domains , and our extension to open and convex domain may be of some independent interest .    finally , we show how roberts affine maximizer theorem cab be proved using roberts theorem with neutrality .",
    "this proof is contained in section [ sec : gen ] .",
    "let @xmath3 be a finite set of alternatives or allocations .",
    "suppose @xmath4 .",
    "let @xmath5 be a finite set of agents .",
    "the type of agent @xmath6 is a vector in @xmath7 .",
    "denote by @xmath8 the type ( vector ) of agent @xmath9 , where for every @xmath10 , @xmath11 denotes the _ value _ of agent @xmath6 for alternative @xmath12 when his type is @xmath8 .",
    "a type profile will be denoted by @xmath13 , and consists of @xmath2 vectors in @xmath7 .",
    "alternately , one can view a type profile @xmath13 to be an @xmath14 matrix , where every row represents a type vector of an agent .",
    "the column vectors are vectors in @xmath1 .",
    "we refer to a column vector generated by a type profile to be a utility vector .",
    "hence , @xmath15 represents the utility vector corresponding to allocation @xmath12 in type profile @xmath13 and @xmath16 will denote the utility vectors in type profile @xmath13 except @xmath15 .",
    "let @xmath17 be the type space ( the set of all type vectors ) of agent @xmath6 .",
    "we assume @xmath18 where @xmath19 , @xmath20 , and @xmath21 .",
    "we call such a type space an * @xmath0-dimensional open interval domain*. the set of all type profiles is denoted by @xmath22",
    ".    let the set of all utility vectors for every alternative in @xmath23 be @xmath24 , which is an open rectangle in @xmath1 .",
    "hence , the set of type profiles can alternatively written as @xmath25 . throughout",
    ", we will require different mathematical properties of @xmath26 which are satisfied by @xmath17 for every @xmath6 if it is an @xmath0-dimensional open interval domain .",
    "in particular , note the following two properties which hold if the type space is an @xmath0-dimensional open interval :    1 .",
    "if we have a type profile @xmath13 in our domain and permute two utility vectors @xmath15 and @xmath27 in this type profile , then we will get a valid type profile in our domain .",
    "2 .   for every type profile @xmath13 in our domain and",
    "every @xmath10 , there exists @xmath28  , we say that @xmath29 if and only if @xmath30 is greater than @xmath31 in every component .",
    "] such that if we increase the utility vector @xmath15 by @xmath32 , then we get a valid type profile in our domain .",
    "the first property follows from the interval assumption and the second property follows from the openness assumption .",
    "we use these two properties extensively in our proofs .",
    "we use the standard notation of @xmath33 to denote a type profile of agents in @xmath34 and @xmath35 to denote the type spaces of agents in @xmath34 .",
    "a social choice function is a mapping @xmath36 .",
    "a payment function is a mapping @xmath37 .",
    "the payment of agent @xmath6 at type profile @xmath13 is denoted by @xmath38 .",
    "a social choice function @xmath39 is implementable ( in dominant stragies ) if there exists a payment function @xmath40 such that for every @xmath9 and every @xmath33 , we have @xmath41 in this case , we say that @xmath40 implements @xmath39 .",
    "every social choice function satisfies certain properties if it is implementable .",
    "below , we give one such useful property .    a social choice function @xmath39 satisfies * positive association of differences ( pad ) * if for every @xmath42",
    "such that @xmath43 with @xmath44 for all @xmath45 , we have @xmath46 .",
    "every implementable social choice function satisfies pad .",
    "a natural question to ask is what social choice functions are implementable . in an important result",
    ", @xcite characterized the set of all social choice functions when the type space is unrestricted and when the social choice function satisfies a condition called _ non - imposition_.    a social choice function @xmath39 satisfies * non - imposition * if for every @xmath10 , there exists @xmath47 such that @xmath43 .    using pad and non - imposition",
    ", roberts proved the following theorem .",
    "[ theo : roberts ] suppose @xmath48 for all @xmath9 .",
    "if @xmath39 is an implementable social choice function and satisfies non - imposition , then there exists weights @xmath49 and a deterministic real - valued function @xmath50 such that for all @xmath47 , @xmath51\\end{aligned}\\ ] ]    this family of social choice functions are called * affine maximizer social choice functions*.      here , we give an example to illustrate that theorem [ theo : roberts ] does not hold in bounded domains .",
    "the example is due to @xcite .",
    "[ ex : ex1 ]    let @xmath52 and @xmath53",
    ". suppose @xmath54 ( alternatively , suppose @xmath55 ) .",
    "consider the following allocation rule @xmath39 .",
    "let @xmath56 then , @xmath57 it can be verified that @xmath39 satisfies non - imposition .",
    "further , the following payment rule @xmath40 implements @xmath39 .",
    "@xmath58 @xmath59 however , one can verify that @xmath39 is not an affine maximizer .",
    "in the example above , it is essential to assume that there are at least two agents .",
    "roberts theorem holds in any bounded domain if there is only a single agent @xcite .",
    "@xcite refer to this characterization as _ pseudo - efficiency_.      we restrict attention to neutral social choice functions which we now describe .",
    "neutrality roughly requires that the mechanism designer should treat all allocations in @xmath23 symmetrically . given a social choice function @xmath39 we define the following set .",
    "for every @xmath47 , the * choice set * at @xmath13 is defined as : @xmath60    we first show that choice sets are non - empty under our assumptions of the domain ( @xmath0-dimensional open intervals ) .",
    "[ lem : new1 ] let @xmath39 be an implementable social choice function . then , for every @xmath47 , @xmath61 .",
    "consider @xmath47 , and let @xmath43 .",
    "let @xmath62 for some @xmath28 such that @xmath63 .",
    "by pad , @xmath46 .",
    "hence , @xmath64 .    using the notion of a choice set",
    ", we define a neutral social choice function . in appendix b , we discuss an alternate ( but more standard ) notion of neutrality , which we call _ scf - neutrality _ , defined directly on the social choice function , and show that scf - neutrality on implementable social choice functions implies the following notion of neutrality .",
    "a social choice function @xmath39 is * neutral * if for every type profile @xmath47 , every permutation @xmath65 of @xmath23 and type profile @xmath66 induced by permutation @xmath65   of @xmath23 and a type profile @xmath13 , the type profile induced by permutation @xmath65 is the profile obtained from @xmath13 by relabeling the columns based on permutation @xmath65 . ] , we have @xmath67",
    ".    a neutral social choice function does not discriminate between social alternatives by their names . in many settings",
    "this is a natural assumption .",
    "for instance , consider a city planner who has the following options to improve public facilities in the city : ( a ) to build an opera house , ( b ) to build a public school , ( c ) to build a park .",
    "although residents of the city can have different ( private ) valuations over these alternatives , it is perfectly reasonable to assume that the city planner has no preferences over them .",
    "non - imposition is implied by neutrality in @xmath0-dimensional open interval domains .",
    "[ lem : ni ] suppose @xmath39 is an implementable social choice function .",
    "if @xmath39 is neutral then it satisfies non - imposition .",
    "fix an alternative @xmath10 .",
    "consider any arbitrary type profile @xmath13 such that @xmath68 . by lemma [ lem : new1 ] , @xmath69 .",
    "now , construct another type profile @xmath70 . by neutrality , @xmath71 .",
    "now , let @xmath72 for some @xmath73 . since @xmath71 , we have that @xmath74 . hence , @xmath39 satisfies non - imposition .    under neutrality ,",
    "roberts theorem is modified straightforwardly as follows ( see @xcite ) .",
    "[ theo : nroberts ] suppose @xmath48 for all @xmath9 . if @xmath39 is an implementable social choice function and satisfies neutrality , then there exists weights @xmath49 such that for all @xmath47 , @xmath75    a striking aspect of this theorem is that it gives a precise functional form of the neutral social choice functions that can be implemented .",
    "this family of social choice functions is called the * weighted welfare maximizer social choice functions*. if all the weights ( @xmath76s ) are equal in a weighted welfare maximizer social choice function , then we get the * efficient social choice function*.",
    "in the aggregation theory literature , an axiom called  binary independence \" is extensively used - see @xcite .",
    "roughly , it says that the comparision between two alternatives @xmath12 and @xmath77 should only depend on the utility ( column ) vectors corresponding to @xmath12 and @xmath77 .",
    "we prove a counterpart of this axiom for our choice set for @xmath0-dimensional open interval domains .",
    "[ lem : new3 ] let @xmath39 be an implementable social choice function . consider two type profiles @xmath78 .",
    "* suppose @xmath79 . then , @xmath71 if and only if @xmath80 .",
    "* suppose @xmath64 but @xmath81 . then @xmath82 .",
    "suppose @xmath79 .",
    "now , consider a type profile @xmath83 , where @xmath84 for all @xmath85 and for all @xmath86 .",
    "note that since @xmath26 is an open rectangle in @xmath1 , @xmath87 .",
    "* suppose @xmath79 .",
    "we will first show that @xmath88 .",
    "choose an @xmath28 .",
    "since @xmath64 , we know that @xmath89 . by pad , @xmath90 . hence , @xmath91 . using an analogous argument , @xmath92 .",
    "+ now , suppose that @xmath71 and assume for contradiction @xmath82 .",
    "choose an @xmath28 and arbitrarily close to zero .",
    "we show that @xmath93 .",
    "assume for contradiction , @xmath94 .",
    "by pad , @xmath95 .",
    "since @xmath32 can be made arbitrarily small , this implies that @xmath80 . this is a contradiction .",
    "+ next , we show that @xmath96 for any @xmath86 . assume for contradiction @xmath97 for some @xmath86 .",
    "by pad , @xmath98 . also , since @xmath71 , we know that @xmath99 . by pad , @xmath100 .",
    "this is a contradiction .",
    "+ hence , @xmath101 . by pad , @xmath102 .",
    "we show that @xmath103 for all @xmath104 .",
    "assume for contradiction @xmath105 for some @xmath104 .",
    "by pad , @xmath106 .",
    "this is a contradiction .",
    "hence , @xmath103 for some @xmath107 .",
    "this implies that @xmath108 , which is a contradiction .",
    "hence , @xmath71 implies that @xmath80 .",
    "+ now , suppose that @xmath109 .",
    "assume for contradiction @xmath80 .",
    "exchanging the role of @xmath12 and @xmath77 above , we get that @xmath71 .",
    "this is a contradiction .",
    "hence , if @xmath109 then @xmath82 .",
    "this implies that either @xmath110 or @xmath111 .",
    "* suppose @xmath64 but @xmath81 .",
    "as in part ( a ) , @xmath91 . now , assume for contradiction , @xmath80 .",
    "if @xmath109 , then exchanging the role of @xmath12 and @xmath77 in the second half of ( a ) , we get that @xmath112 .",
    "this is a contradiction . if @xmath71 , then we have @xmath113 but @xmath64 . by part ( a ) ,",
    "this is a contradiction .",
    "we will define an ordering on @xmath26 induced by an implementable social choice function .",
    "in general , we will refer to an arbitrary ordering @xmath114 on @xmath26 .",
    "the symmetric component of an ordering @xmath114 will be denoted as @xmath115 and the anti - symmetric component will be denoted as @xmath116 .",
    "note that a social choice function @xmath39 is a mapping @xmath36 .",
    "hence , for every type profile @xmath13 , a social choice function can be thought of as picking a column vector ( which belongs to @xmath26 ) in @xmath13 .",
    "we will show that in the process of picking these column vectors in @xmath26 in an ",
    "implementable manner \" , a neutral social choice function induces a social welfare ordering .",
    "the following is a useful lemma that we will use in the proofs .",
    "[ lem : permute2 ] suppose @xmath39 is an implementable and neutral social choice function .",
    "consider a type profile @xmath47 such that @xmath117 for some @xmath118 .",
    "then , @xmath64 if and only if @xmath69",
    ".    this follows from the fact that permuting columns @xmath12 and @xmath77 in @xmath13 produces @xmath13 again .",
    "hence , by neutrality , @xmath64 if and only if @xmath69 .    a * social welfare ordering * @xmath119 induced by a social choice function @xmath39 is a relation on @xmath26 defined as follows .",
    "the symmetric component of @xmath119 is denoted by @xmath120 and the antisymmetric component of @xmath119 is denoted by @xmath121 .",
    "pick @xmath122 .",
    "we say @xmath123 if and only if there exists a profile @xmath13 with @xmath124 and @xmath125 for some @xmath118 such that @xmath64 but @xmath81 .",
    "we say @xmath126 if and only if there exists a profile @xmath13 with @xmath124 and @xmath125 for some @xmath118 such that @xmath79 .",
    "[ prop : order ] suppose @xmath39 is an implementable and neutral social choice function .",
    "then , the relation @xmath119 induced by @xmath39 on @xmath26 is an ordering .",
    "we first show that @xmath119 is well - defined .",
    "pick @xmath122 .",
    "we consider two cases .",
    "+ case 1 : suppose @xmath123 .",
    "then there exists a type profile @xmath13 and some @xmath118 with @xmath124 and @xmath125 such that @xmath64 but @xmath81 .",
    "consider any other type profile @xmath66 such that @xmath127 and @xmath128 . by proposition [ lem : new3 ] , @xmath82 .",
    "consider any other profile @xmath129 and @xmath130 such that @xmath131 and @xmath132 .",
    "we can permute @xmath129 to get another profile @xmath133 such that @xmath134 and @xmath135 . by proposition [ lem : new3 ] , @xmath136 . by neutrality , @xmath137 .",
    "hence , the choice of @xmath12 and @xmath77 is without loss of generality , i.e. , for any @xmath118 and any @xmath47 with @xmath124 and @xmath125 , we have @xmath81 .",
    "so , @xmath121 is well - defined .",
    "+ case 2 : suppose @xmath126 .",
    "then there exists a type profile @xmath13 and some @xmath118 such that @xmath79 .",
    "consider any other type profile @xmath66 such that @xmath127 and @xmath128 . by proposition [ lem :",
    "new3 ] , @xmath71 if and only if @xmath80 . by neutrality ( as in case 1 ) , the choice of @xmath12 and @xmath77 is without loss of generality .",
    "this shows that @xmath120 is well - defined .",
    "+ we next show that @xmath119 is reflexive .",
    "consider @xmath138 and the profile where @xmath124 for all @xmath10 . by lemma [ lem : permute2 ] , @xmath139 .",
    "hence , @xmath140 .",
    "next , we show that @xmath119 is complete",
    ". choose @xmath122 .",
    "consider a type profile @xmath13 where each column vector is either @xmath30 or @xmath31 with at least one column vector being @xmath30 and at least one column vector being @xmath31 .",
    "suppose @xmath43 .",
    "then either @xmath124 or @xmath141 . without loss of generality ,",
    "let @xmath43 and @xmath124 . by lemma [ lem : permute2 ]",
    ", there are two cases to consider .",
    "+ case 1 : for all @xmath77 with @xmath125 we have @xmath69 .",
    "hence , @xmath126 .",
    "+ case 2 : for all @xmath77 with @xmath125 we have @xmath81 .",
    "then , we get @xmath123 .",
    "+ this completes the argument that @xmath119 is complete , and hence , a binary relation .",
    "now , we prove that @xmath119 is transitive .",
    "consider @xmath142 .",
    "consider a type profile @xmath13 , where each column has value in @xmath143 with at least one column having value @xmath30 , at least one column having value @xmath31 , and at least one column having value @xmath144 ( this is possible since @xmath4 ) .",
    "due to proposition [ lem : new3 ] and neutrality , without loss of generality let @xmath145 .",
    "we prove transitivity of @xmath121 and @xmath120 , and this implies transitivity of @xmath119 .",
    "+ transitivity of @xmath121 : suppose @xmath123 and @xmath146 .",
    "this implies that @xmath64 but @xmath81 .",
    "since @xmath146 , we get that @xmath147 . since @xmath147 , we have @xmath148 .",
    "+ transitivity of @xmath120 : suppose @xmath126 and @xmath149 .",
    "this implies that @xmath79 . but",
    "@xmath149 implies that @xmath150 too .",
    "this implies that @xmath151 .",
    "in this section , we fix an implementable neutral social choice function @xmath39 .",
    "we then prove that the social welfare ordering @xmath119 defined in the last section satisfies three specific properties .",
    "an ordering @xmath114 on @xmath26 satisfies * weak pareto * if for all @xmath122 with @xmath29 we have @xmath152 .",
    "an ordering @xmath114 on @xmath26 satisfies * invariance * if for all @xmath122 and all @xmath153 such that @xmath154 we have @xmath152 implies @xmath155 and @xmath156 implies @xmath157 .",
    "an ordering @xmath114 on @xmath26 satisfies * continuity * if for all @xmath138 , the sets @xmath158 and @xmath159 are closed in @xmath26 .",
    "[ prop : axioms ] suppose @xmath39 is an implementable and neutral social choice function . then the social welfare ordering @xmath119 induced by @xmath39 on @xmath26 satisfies weak pareto , invariance , and continuity .",
    "we show that @xmath119 satisfies each of the properties .",
    "+ weak pareto : choose @xmath122 such that @xmath29 .",
    "start with a profile @xmath13 where @xmath141 for all @xmath10 .",
    "suppose @xmath160 .",
    "consider another profile @xmath161 ( i.e. column vector corresponding to @xmath77 is changed from @xmath31 to @xmath30 ) . by pad , @xmath162 and hence @xmath80 .",
    "we show that for any @xmath163 we have @xmath109",
    ". choose @xmath28 but @xmath164 .",
    "by pad , @xmath165 .",
    "hence , @xmath109 .",
    "this shows that @xmath80 but @xmath109 .",
    "hence , by proposition [ prop : order ] , @xmath123 . + invariance : choose @xmath122 and @xmath153 such that @xmath154 .",
    "we consider two cases .",
    "+ case 1 : suppose @xmath123 .",
    "we show that @xmath166 .",
    "since @xmath123 , there exists a profile @xmath167 such that @xmath64 but @xmath81",
    ". consider the profile @xmath66 , where @xmath168 for all @xmath169 .",
    "fix @xmath28 . since @xmath64 , @xmath89 .",
    "hence , by pad @xmath170 .",
    "this shows that @xmath71 . since @xmath81",
    ", there is some @xmath28 such that @xmath171 .",
    "we show that @xmath172 .",
    "assume for contradiction @xmath173 .",
    "by pad , @xmath174 .",
    "this is a contradiction .",
    "hence , @xmath172 .",
    "this implies that @xmath82 . using proposition [ prop : order ] , @xmath166 .",
    "+ case 2 : suppose @xmath126 .",
    "we show that @xmath175 .",
    "then , there exists a profile @xmath167 such that @xmath79 .",
    "consider the profile @xmath66 , where @xmath168 for all @xmath169 .",
    "fix @xmath28 . since @xmath64 , @xmath89 .",
    "hence , by pad @xmath170 .",
    "this shows that @xmath71 . using an analogous argument , @xmath80 .",
    "hence , by proposition [ prop : order ] , @xmath175 .",
    "+ continuity : fix @xmath138 .",
    "we show that the set @xmath176 is closed .",
    "take an infinite sequence @xmath177 such that every point @xmath178 in this sequence satisfies @xmath179 .",
    "let this sequence converge to @xmath180 .",
    "assume for contradiction @xmath148 .",
    "consider a type profile @xmath13 such that @xmath124 and @xmath181 for all @xmath182 . since @xmath148",
    ", we have @xmath147 for all @xmath182 .",
    "hence , @xmath183 .",
    "consider @xmath45 . since @xmath81",
    ", we know that there exists @xmath28 and @xmath32 arbitrarily close to the zero vector such that @xmath171 . we show that @xmath184 for all @xmath86 .",
    "assume for contradiction @xmath185 for some @xmath86 .",
    "then , by pad , @xmath186 for all @xmath187 .",
    "this implies that @xmath150 , which is a contradiction .",
    "hence , @xmath188 .",
    "this implies that @xmath189 .",
    "since the sequence converges to @xmath144 , there is a point @xmath190 arbitrarily close to @xmath144 such that @xmath191 . since @xmath144 is arbitrarily close to @xmath192 , by weak pareto , @xmath193 . using @xmath191",
    ", we get @xmath194 .",
    "this is a contradiction to the fact that @xmath195 .    to show @xmath196 is closed , take an infinite sequence @xmath177 such that every point @xmath178 in this sequence satisfies @xmath197",
    "let this sequence converge to @xmath144 .",
    "assume for contradiction @xmath198 .",
    "interchanging the role of @xmath30 and @xmath144 in the previous argument , we will get @xmath199 for some @xmath28 .",
    "since the sequence converges to @xmath144 , there is a point @xmath190 arbitrarily close to @xmath144 such that @xmath200 . since @xmath192 is arbitrarily close to @xmath144 , @xmath201 by weak pareto .",
    "this is a contradiction to the fact that @xmath199 .",
    "in this section , we prove the main result . in particular , we prove a proposition related to linear utility representation on open and convex sets .",
    "[ prop : reporder ] suppose an ordering @xmath114 on @xmath26 satisfies weak pareto , invariance , and continuity . if @xmath26 is open and convex , then there exists weights @xmath49 and for all @xmath122 @xmath202    fix any @xmath180 .",
    "denote @xmath203 , @xmath204 , @xmath205 , and @xmath206 .",
    "+ step 1 : we first show that the sets @xmath207 , and @xmath208 are convex .",
    "we make use of the following fact here .",
    "[ fact : f1 ] consider a set @xmath209 and let @xmath210 satisfy the property that if @xmath211 then @xmath212 . if @xmath210 is open in @xmath26 or closed in @xmath26 , then @xmath210 is convex .",
    "the proof of this fact is given in the appendix a. by continuity , each of the sets @xmath213 , and @xmath214 are either open or closed in @xmath26 .",
    "hence , by fact [ fact : f1 ] , we only need to verify that these sets are closed under the midpoint operation .",
    "consider @xmath215 .",
    "now , let @xmath122 such that @xmath216 and @xmath217 .",
    "we will show that @xmath218 .",
    "note that @xmath219 because @xmath26 is convex .",
    "now , assume for contradiction that @xmath220 .",
    "this implies that @xmath221 and @xmath222 . by invariance ,",
    "hence , @xmath224 .",
    "this is a contradiction .",
    "hence , the set @xmath215 is convex .",
    "similar arguments show that @xmath225 , @xmath208 , and @xmath226 are convex .",
    "+ step 2 : we now show that @xmath144 is a boundary point of @xmath215 .",
    "let @xmath227 , where @xmath228 .",
    "since @xmath26 is open , there exists @xmath28 such that @xmath229 and , by weak pareto , @xmath230 .",
    "further , since @xmath26 is open , @xmath32 can be chosen such that @xmath231 , and by weak pareto , @xmath232 .",
    "hence , for every @xmath233 , there exists a point in @xmath234 which is in @xmath215 and another point which is not in @xmath215 .",
    "this shows that @xmath144 is a boundary point of @xmath215 .",
    "+ step 3 : by the supporting hyperplane theorem , there exists a hyperplane through @xmath144 supporting the set @xmath215 , i.e. , there exists a non - zero vector @xmath235 such that for all @xmath236 , @xmath237 denote the intersection of this hyperplane with the set @xmath26 as @xmath238 .",
    "+ step 4 : we next show that @xmath49 . assume for contradiction @xmath239 for some @xmath240 . since @xmath26 is open there exists @xmath28 such that @xmath241 .",
    "moreover , we can choose @xmath32 such that @xmath242 by weak pareto @xmath230 .",
    "hence , @xmath243 .",
    "thus , @xmath244 this implies that @xmath245 this is a contradiction .",
    "hence , @xmath246 for all @xmath9 .",
    "+ step 5 : now , consider @xmath138 such that @xmath247 we will show that @xmath248 . assume for contradiction @xmath249 .",
    "we consider two cases .",
    "+ case 1 : suppose @xmath250 .",
    "since @xmath26 is open , there exists a point @xmath192 in @xmath234 for some @xmath228 such that    1 .",
    "@xmath144 lies on the line segment joining @xmath192 and @xmath30 and 2 .",
    "@xmath30 and @xmath192 lies on opposite sides of the hyperplane @xmath251 , i.e. , @xmath252    by ( b ) and using step 3 , @xmath253 . by our assumption @xmath250 .",
    "hence , @xmath254 . by step 1 , @xmath226 is convex .",
    "since @xmath144 is in the convex hull of @xmath30 and @xmath192 , we get that @xmath255 .",
    "this is a contradiction .",
    "+ case 2 : suppose @xmath256 .",
    "since @xmath26 is open , there exists @xmath257 for some @xmath28 such that @xmath258 by weak pareto @xmath259 .",
    "hence , @xmath260 . by case 1 ,",
    "this is not possible .",
    "this is a contradiction .",
    "+ hence , in both cases we reach a contradiction , and conclude that @xmath248 .",
    "+ step 6 : now , consider @xmath138 such that @xmath261 we will show that @xmath262 .",
    "suppose not .",
    "there are two cases to consider .",
    "+ case 1 : assume for contradiction @xmath248 . by continuity , the set @xmath263 is open in @xmath26 .",
    "since @xmath26 is open in @xmath1 , we get that @xmath263 is open in @xmath1 .",
    "hence , there exists @xmath228 such that for every point in @xmath264 we have @xmath265 .",
    "choose @xmath28 such that for @xmath266 we have @xmath267 .",
    "hence , @xmath268 . by step 4 , @xmath49 .",
    "hence , we get @xmath269 but this is a contradiction since @xmath268 implies @xmath270 , which in turn implies that @xmath271    case 2 : assume for contradiction @xmath250 . by continuity , the set @xmath272 is open in @xmath26 . hence , there exists @xmath228 such that for every point in @xmath264 we have @xmath260 .",
    "choose @xmath28 such that for @xmath273 we have @xmath267 .",
    "hence , @xmath274 . by step 4 , @xmath49 .",
    "hence , we get @xmath275 by step 5 , this implies that @xmath268 .",
    "this is a contradiction .",
    "this shows that for any @xmath144 , there exists @xmath49 such that for all @xmath138 , we have @xmath276    in other words , @xmath238 contains all the points in @xmath26 which are indifferent to @xmath144 under @xmath114 .",
    "moreover , on one side of @xmath238 we have points in @xmath26 which are better than @xmath144 under @xmath114 and on the other side , we have points which are worse than @xmath144 under @xmath114 .",
    "finally , pick any two points @xmath30 and @xmath31 in @xmath26 .",
    "since @xmath26 is open and convex , we can connect @xmath30 and @xmath31 by a series of intersecting open balls along the convex hull of @xmath30 and @xmath31 , with each of these open balls contained in @xmath26 .",
    "by invariance , for any two points @xmath277 and @xmath278 in such an open ball , @xmath279 and @xmath280 have to be parallel to each other .",
    "since such open balls intersect each other , the hyperplanes @xmath281 and @xmath282 are parallel to each other .",
    "this completes the proof .    when @xmath283 , this result is well known due to @xcite ( see also recent proofs in the utility representation literature - @xcite , @xcite , @xcite , and @xcite ) .",
    "we are now ready to state our main result .",
    "[ theo : newroberts ] suppose @xmath39 is a neutral social choice function and for every @xmath9 , @xmath17 is an @xmath0-dimensional open interval .",
    "the social choice function @xmath39 is implementable if and only if there exists weights @xmath49 such that for all @xmath47 , @xmath284",
    "suppose @xmath39 is neutral and implementable .",
    "note that since for every @xmath9 , @xmath17 is an open interval domain , then @xmath26 must be convex and open in @xmath1 - indeed , @xmath26 is an open rectangle in @xmath1 .",
    "hence , by proposition [ prop : order ] , a neutral and implementable scf @xmath39 induces a social welfare ordering @xmath119 on @xmath26 . by proposition [ prop :",
    "axioms ] , @xmath119 satisfies continuity , weak pareto , and invariance . by proposition",
    "[ prop : reporder ] ( since @xmath26 is open and convex ) , there exists weights @xmath49 such that for every @xmath122 we have @xmath285 finally , by lemma [ lem : new1 ] for all @xmath286 , @xmath61 . hence , @xmath287 for all @xmath288 and for all @xmath286 .    it is well known that if @xmath39 is a weighted welfare maximizer with weights @xmath49 , then the following payment function @xmath37 makes the social choice function implementable . for all @xmath9 with @xmath289 , @xmath290 for all @xmath47 . for all @xmath9 with @xmath291 , @xmath292 - h_i(t_{-i } ) \\qquad \\forall~t \\in \\mathbb{t}^n.\\end{aligned}\\ ] ] where @xmath293   is connected for all @xmath9 , revenue equivalence holds in this setting @xcite .",
    "hence , these are the _ only _ payment functions which makes @xmath39 implementable . ] .",
    "this proves the theorem .      in this section",
    ", we make several observations relating to our results .",
    "+ affine maximizer and weighted welfare maximizer domains .",
    "a plausible conjecture is that every domain where neutral and implementable social choice functions are weighted welfare maximizers are also domains where implementable social choice functions are affine maximizers .",
    "this conjecture is false . to see this ,",
    "observe that the domain in example [ ex : ex1 ] .",
    "the domain in this example , @xmath294 is a 2-dimensional open interval domain .",
    "however we have already seen that it admits implementable social choice functions that are non - affine - maximizers ( of course , these social choice functions are not neutral ) .",
    "this observation emphasizes the fact that neutrality plays a critical role in our result .",
    "+ auction domains are not covered .",
    "it is well known that in auction domains , there are social choice functions other than affine maximizers which are implementable @xcite .",
    "these social choice functions are also neutral .",
    "hence , in auction domains , there are neutral social choice functions which are implementable , but not weighted welfare maximizers .",
    "it can be reconciled with our result in several ways .",
    "first , auction domains are restricted domains which are not necessarily open ( or even full dimensional ) .",
    "for example , consider the sale of two objects to two buyers .",
    "the set of allocations can be @xmath295 , where @xmath12 denotes buyer 1 gets both the objects , @xmath77 denotes buyer 2 gets both the objects , @xmath296 denotes buyer 1 gets object 1 and buyer 2 gets object 2 , and @xmath297 denotes buyer 1 gets object 2 and buyer 2 gets object 1 .",
    "note here that in every utility vector @xmath15 for allocation @xmath12 buyer 2 will have zero valuation .",
    "similarly , in every utility vector @xmath27 for allocation @xmath77 buyer 1 will have zero valuation .",
    "hence , this domain is not open .",
    "second , our open interval domain assumption is not usually satisfied in auction domains .",
    "this is because , agents usually have a partial order on the set of alternatives ( see @xcite ) .",
    "we do not allow any such partial order in our model .",
    "finally , neutrality is an unacceptably restrictive assumption in auction domains .",
    "however , as we have noted in section [ subsection : neutrality ] , there are settings where our domain and neutrality assumptions are plausible . + no ordering without neutrality .",
    "if we drop neutrality and replace it with non - imposition , then roberts theorem says that affine maximizers ( as in theorem [ theo : roberts ] ) are the only implementable social choice functions .",
    "but affine maximizers do not necessarily induce the ordering we discussed .",
    "this is because of the @xmath298 terms in the affine maximizers .",
    "for example , consider a type profile @xmath167 .",
    "suppose @xmath64 but @xmath81 . here , the @xmath299 term may be higher than @xmath300 such that when we permute the columns of @xmath12 and @xmath77 and get the new type profile @xmath301 , we still have @xmath71 and @xmath82 . thus , our social welfare ordering is not induced here .",
    "+ anonymity gives efficiency .",
    "consider the following additional condition on every social choice function .",
    "a social choice function @xmath39 is * anonymous * if for every @xmath47 and every permutation @xmath302 on the row vectors ( agents ) of @xmath13 , we have @xmath303 .",
    "an ordering @xmath114 on @xmath26 satisfies * anonymity * if for every @xmath122 and every permutation @xmath302 on agents we have @xmath156 if @xmath304 .",
    "[ lem : anon ] suppose @xmath39 is implementable and anonymous .",
    "then , @xmath119 satisfies anonymity .",
    "let @xmath302 be a permutation of the set of agents .",
    "for any vector @xmath138 , we write @xmath305 to denote the permutation of vector @xmath30 induced by the permutation @xmath302 on sets of agents .",
    "consider @xmath122 such that @xmath306 .",
    "assume for contradiction @xmath123 .",
    "consider a type profile @xmath13 such that @xmath124 and @xmath125 for all @xmath45 .",
    "hence , @xmath307 . let @xmath66 be the type profile such that @xmath308 for all @xmath169 . since @xmath39 is anonymous @xmath46 .",
    "hence , @xmath309 , which futher implies that @xmath310 . repeating this argument again , we will get @xmath311 .",
    "hence , @xmath312 .",
    "clearly , after repeating this procedure some finite number of times , we will be able to conclude @xmath313 , which is a contradiction .",
    "it is straightforward to show using theorem [ theo : newroberts ] that every implementable , neutral , and anonymous social choice function in an open interval domain is the efficient social choice function . here",
    ", we show that this result holds for some other domains too .",
    "the proof is an adaptation of an elegant proof by @xcite ( see also theorem 4.4 in @xcite ) .",
    "we give the proof in appendix a.    [ theo : efficiency ] suppose @xmath39 is implementable , neutral , and anonymous .",
    "if @xmath314 , where @xmath315 , then @xmath39 is the efficient social choice function .",
    "note here that the domain in theorem [ theo : efficiency ] always includes the origin ( this is crucial for the proof ) and is not open from  left \" .",
    "hence , this result is not a corollary to theorem [ theo : newroberts ] .",
    "in this section , we show how the general version of roberts theorem using version of roberts theorem with neutrality , which we have proved earlier . we assume throughout that the domain is * unrestricted * , i.e. , @xmath316 .",
    "although our proof of the general roberts theorem uses elements developed in earlier proofs , we believe nonetheless that it offers some new insights into the result . the main idea behind our proof is to transform an arbitrary implementable social choice function to a neutral implementable social choice function .",
    "then , we can readily use roberts theorem with neutrality on the new social choice function to get the roberts theorem .    consider a mapping @xmath317 .",
    "denote @xmath318 as the vector of @xmath319 s in @xmath1 .",
    "let @xmath320 be the profile of @xmath0 such vectors , each corresponding to an allocation in @xmath23 .",
    "for any social choice function @xmath39 , define @xmath321 as follows . for every @xmath47 ,",
    "let @xmath322 be such that @xmath323 for all @xmath10 .",
    "for every @xmath47 , let @xmath324 since @xmath319 is finite for all @xmath10 , the social choice function @xmath321 is well - defined .",
    "[ prop : unr1 ] for every @xmath317 , if @xmath39 is implementable , then @xmath321 is implementable .",
    "since @xmath39 is implementable , there exists a payment function @xmath40 which implements it .",
    "we define another payment function @xmath325 as follows . for every @xmath47 and every @xmath9 , @xmath326",
    "we will show that @xmath325 implements @xmath321 . to see this , fix an agent @xmath9 and @xmath327 .",
    "let @xmath328 and note the following .",
    "@xmath329 where the inequality followed from the implementability of @xmath39 by @xmath40 . hence ,",
    "@xmath325 implements @xmath321 .",
    "our next step is to find a mapping @xmath330 such that @xmath321 is neutral .",
    "we will need the following property of choice sets .",
    "[ lem : ch1 ] suppose @xmath39 is implementable and satisfies non - imposition .",
    "let @xmath13 be a type profile such that @xmath183 for some @xmath10 .",
    "then , for some @xmath73 , @xmath71 , where @xmath331 and @xmath332 for all @xmath45 .    since @xmath183 , we have @xmath43 ( by lemma [ lem : new1 ] ) .",
    "choose some @xmath45 .",
    "since @xmath81 , there exists @xmath333 such that @xmath108 , where @xmath334 and @xmath335 for all @xmath336 .",
    "indeed , by proposition [ lem : new3 ] , @xmath337 .",
    "now , consider the type profile @xmath133 such that @xmath338 for all @xmath182 and @xmath339 .",
    "we will show that @xmath340 .    to show this",
    ", we go from @xmath13 to @xmath133 in @xmath341 steps . in the first step ,",
    "we choose an arbitrary allocation @xmath45 , and consider a type profile @xmath30 , where @xmath342 and @xmath343 for all @xmath336 . by definition of @xmath344 , we have @xmath345 .",
    "next , we choose another allocation @xmath86 , and consider a type profile @xmath31 such that @xmath346 if @xmath347 and @xmath348 otherwise .",
    "we first show that @xmath349 .",
    "assume for contradiction , @xmath350 , then by pad , @xmath351 .",
    "this is a contradiction .",
    "hence , @xmath349 , and by proposition [ lem : new3 ] , @xmath352 .",
    "we now repeat this procedure by choosing @xmath353 and considering a type profile @xmath144 where utility vector of @xmath144 is increased to @xmath354 and every other utility vector remains at @xmath31 . after a finite steps",
    ", we will reach the type profile @xmath133 with @xmath340 .",
    "now , choose @xmath355 .",
    "consider a type profile @xmath66 such that @xmath332 for all @xmath45 and @xmath331 . by pad ( from @xmath133 to @xmath66 ) ,",
    "@xmath71 .",
    "now , we define a set which can also be found in roberts original proof ( see also @xcite ) . for every @xmath356 and every social choice function @xmath39 define the @xmath116-set as @xmath357    @xcite and @xcite define the @xmath116-set slightly differently .",
    "they let @xmath358 .",
    "our notion of @xmath116-set is the interior of the @xmath116-set they define .",
    "the @xmath116-sets are non - empty if the social choice function satisfies non - imposition . to see this , choose @xmath118 and a social choice function @xmath39 . by non - imposition , there must exist a @xmath47 such that @xmath43 , which implies that @xmath64 and @xmath359 .",
    "we want to characterize a neutral social choice function by the properties of its @xmath116-sets .",
    "here is a necessary and sufficient condition .",
    "[ prop : neu1 ] suppose @xmath39 is an implementable social choice function . the social choice function @xmath39 is neutral if and only if @xmath360 for all @xmath361 .",
    "suppose @xmath39 is implementable and neutral .",
    "let @xmath362 .",
    "so , for some type profile @xmath13 , we have @xmath64 and @xmath363 .",
    "now , permuting @xmath364 respectively with @xmath365 , we get a new type profile @xmath66 with @xmath366 . by neutrality , @xmath367 and @xmath368 .",
    "so , @xmath369 . exchanging the role of @xmath370 and @xmath371 in this argument",
    ", we get that @xmath369 implies @xmath362 .",
    "thus , @xmath360 .    now",
    ", suppose that @xmath39 is implementable and @xmath360 for all @xmath361 .",
    "consider a permutation @xmath65 of @xmath23 . without loss of generality , assume that @xmath65 is a transposition , i.e. , for some @xmath118 we have @xmath372 , and @xmath373 for all @xmath86 .",
    "consider a type profile @xmath47 and let @xmath66 be the type profile induced by permutation @xmath65 on @xmath13 , i.e. , @xmath374 , and @xmath375 .",
    "we show @xmath39 is neutral in several steps .",
    "+ step 1 : suppose @xmath376 .",
    "we show that @xmath82 .",
    "assume for contradiction @xmath80 .",
    "let @xmath150 .",
    "such a @xmath296 exists since @xmath377 is non - empty .",
    "note that @xmath182 .",
    "there are two cases to consider .",
    "+ case 1 : suppose @xmath378 .",
    "because , @xmath80 , we get that @xmath379 .",
    "+ case 2 : suppose @xmath86 . again , because @xmath80 , we get that @xmath380 .",
    "+ so , we get @xmath381 in both the cases .",
    "then for some @xmath382 and some type profile @xmath383 , we have @xmath384 . consider the type profile @xmath129 such that @xmath385 , and @xmath386 for all @xmath387 . by pad , @xmath91 .",
    "but , in both @xmath13 and @xmath129 , the utility vectors corresponding to @xmath12 and @xmath296 are respectively @xmath15 and @xmath388 . since @xmath376 and @xmath150 , by proposition [ lem : new3 ] , @xmath112 .",
    "this is a contradiction .",
    "+ step 2 : suppose @xmath64 .",
    "we show that @xmath80 .",
    "assume for contradiction @xmath82 .",
    "by step 1 , @xmath376 . this is a contradiction .",
    "+ step 3 : suppose @xmath150 , where @xmath86 .",
    "we show that @xmath367 .",
    "since @xmath150 , we have @xmath389 .",
    "assume for contradiction @xmath390 .",
    "then , for some @xmath347 , we have @xmath391 .",
    "there are two cases to consider .",
    "+ case 1 : suppose @xmath353 . in that case , by proposition [ lem : new3 ] ( applied to @xmath66 and @xmath13 ) , @xmath147 .",
    "this is a contradiction .",
    "+ case 2 : suppose @xmath392 . without loss of generality ,",
    "let @xmath393 .",
    "so , @xmath71 but @xmath390 .",
    "now , since @xmath394 , there exists a type profile @xmath395 such that @xmath396 . by pad , @xmath397 , where @xmath398 , and @xmath399 for all @xmath387 . by proposition [ lem : new3 ] , we get that if @xmath390 , then @xmath109 .",
    "this is a contradiction .",
    "+ step 4 : suppose @xmath147 .",
    "assume for contradiction @xmath367 .",
    "exchanging the role of @xmath66 and @xmath13 in step 3 , we get that @xmath150 .",
    "this is a contradiction .",
    "+ combining all the steps , we get that @xmath400 , i.e. , @xmath39 is neutral .",
    "we begin by noting two properties of the @xmath116-sets .",
    "identical properties have been established in @xcite for their version of @xmath116-sets .",
    "we give proofs which are also more direct .",
    "[ lem : psetlavi1 ] suppose @xmath39 is implementable and satisfies non - imposition .",
    "the following statements are true for every @xmath401 .    1 .",
    "if @xmath402 for some @xmath403 and some @xmath73 , then @xmath404 .",
    "2 .   if @xmath405 and @xmath406 , then @xmath407 .    fix @xmath401",
    ". + proof of ( 1 ) : suppose @xmath408 for some @xmath403 and some @xmath73 .",
    "assume for contradiction that @xmath409 .",
    "so , there exists some type profile @xmath13 such that @xmath69 and @xmath410 .",
    "consider the type profile @xmath66 such that @xmath331 and @xmath411 for all @xmath182 .",
    "note that @xmath412 . we first show that @xmath71 .",
    "since @xmath408 , there is some profile @xmath413 , where @xmath414 , such that @xmath91 . by pad , there is a profile @xmath415 such that @xmath384 .",
    "we consider two cases .",
    "+ case 1 : suppose @xmath136 . then , by proposition [ lem : new3 ] , @xmath82 . by pad , @xmath81 , which is a contradiction .",
    "+ case 1 : suppose @xmath416 . then , by proposition [ lem : new3 ] , @xmath71 if and only if @xmath80 .",
    "if @xmath82 , as in case 1 , we have a contradiction due to pad",
    ". hence , @xmath113 .",
    "consider the type profile @xmath30 such that @xmath417 , @xmath418 , and @xmath343 for all @xmath86 . by pad , @xmath419 .",
    "hence , @xmath81 .",
    "this is a contradiction .",
    "+ proof of ( 2 ) : suppose @xmath405 and @xmath406",
    ". then , there must exist @xmath47 such that @xmath64 and @xmath410 .",
    "now , consider a type profile @xmath66 such that @xmath420 , @xmath332 , @xmath421 , and @xmath422 is sufficiently low for all @xmath353 .",
    "we show that for all @xmath353 , we have @xmath423 . assume for contradiction @xmath391 .",
    "then , by pad , @xmath376 , which is a contradiction .",
    "so , @xmath424 .",
    "we show that @xmath71 .",
    "assume for contradiction @xmath109 .",
    "then , by proposition [ lem : new3 ] , @xmath82 .",
    "this implies that @xmath425 ( by lemma [ lem : new1 ] ) . by lemma [ lem : ch1 ] , @xmath426 . by ( 1 ) ,",
    "this is a contradiction .",
    "this implies that @xmath71 , and hence , @xmath428 . but",
    "@xmath429 implies that @xmath407 .",
    "we are now ready to define the mapping that will make any social choice function neutral .",
    "define the following mapping @xmath50 as follows .",
    "for all @xmath430   denotes the type profile , where every agent s type is the @xmath0-dimensional zero vector .",
    "] , let @xmath431 .",
    "for all @xmath432 , define @xmath299 as follows .",
    "denote a type vector @xmath13 as @xmath433 , where all utility ( column ) vectors except one , say @xmath27 , is zero vector and @xmath434 for some @xmath435 .",
    "for all @xmath432 , @xmath436    our first claim is that for all @xmath10 , @xmath437 exists .",
    "[ lem : finitekappa ] suppose @xmath39 is implementable and satisfies non - imposition .",
    "then , for all @xmath10 , @xmath437 and is unique .",
    "moreover , @xmath438 .    for all @xmath430 , @xmath431 , and hence",
    ", the lemma is true .",
    "consider @xmath432 .",
    "if @xmath299 exists , by pad , it is unique .",
    "we show that @xmath299 exists .",
    "we do this in two steps .",
    "+ step 1 : we show that there exists an @xmath439 such that @xmath440 . by non - imposition",
    ", there exists a type profile @xmath13 such that @xmath43 . by pad",
    ", there exists an @xmath435 such that @xmath440 .",
    "moreover @xmath441 since @xmath432 .",
    "+ step 2 : we now prove the lemma . define @xmath442 by step 1 , @xmath299 exists .",
    "we show that @xmath443 .",
    "consider @xmath444 . by pad , if @xmath445 , then @xmath446 , which is a contradiction .",
    "hence , @xmath447 .",
    "next , by proposition [ lem : new3 ] , we can conclude that either @xmath443 or @xmath448 .",
    "assume for contradiction @xmath449 .",
    "then , by lemma [ lem : ch1 ] , there exists @xmath73 such that @xmath450 .",
    "this is a contradiction by the definition of @xmath299 .",
    "this shows that @xmath443 .",
    "we now prove a critical lemma .",
    "[ lem : zero ] suppose @xmath39 is implementable and satisfies non - imposition .",
    "let @xmath13 be a type profile such that @xmath451 for all @xmath10 .",
    "then , @xmath139 .",
    "we start from the type profile @xmath452 and move to @xmath13 in finite number of steps . consider a set @xmath453 .",
    "initially , @xmath454 .",
    "now , choose @xmath455 , and consider @xmath456 . by definition of @xmath299 , @xmath457 .",
    "now , set @xmath458 , and choose @xmath459 .",
    "we now define a type profile @xmath66 such that @xmath460 and @xmath461 but @xmath462 for all @xmath86 . by proposition [ lem : new3 ] , either @xmath463 or @xmath464 .",
    "the latter case is not possible by lemma [ lem : ch1 ] since it will imply @xmath465 for some @xmath73 , which will violate the definition of @xmath300 .",
    "hence , @xmath463 .",
    "now , we set @xmath466 , and repeat . since @xmath23 is finite , this process will terminate with type profile @xmath13 such that @xmath139 .",
    "we now have all ingredients for proving the roberts theorem .",
    "[ theo : robertsnewproof ] suppose @xmath316 .",
    "if @xmath39 is an implementable social choice function and satisfies non - imposition , then there exists weights @xmath49 and a deterministic real - valued function @xmath50 such that for all @xmath47 , @xmath51\\end{aligned}\\ ] ]    since @xmath39 is implementable and satisfies non - imposition , by lemma [ lem : finitekappa ] , there exists a mapping @xmath50 satisfying properties stated in lemmas [ lem : finitekappa ] and [ lem : zero ] . now , consider the social choice function @xmath467 . by proposition",
    "[ prop : unr1 ] , @xmath467 is implementable . by definition ,",
    "@xmath468 . by lemma [ lem : zero ] ,",
    "this implies that @xmath470 for all @xmath118 .",
    "now , pick @xmath361 and let @xmath471 .",
    "but @xmath472 .",
    "by lemma [ lem : psetlavi1 ] , @xmath473 .",
    "now , using @xmath474 , and applying lemma [ lem : psetlavi1 ] again , we get @xmath475 . by proposition",
    "[ prop : neu1 ] , @xmath467 is neutral . by theorem [ theo : newroberts ] , @xmath467 is a weighted welfare maximizer .",
    "this implies that there exists @xmath476 such that for every @xmath47 , @xmath477 but this implies that , for every @xmath47 , @xmath478 this in turn implies that , for every @xmath47 , @xmath479\\big]\\end{aligned}\\ ] ]    since we can assume without loss of generality that @xmath480 $ ] for all @xmath9 , we can immediately infer roberts theorem .    to summarize , roberts theorem can be proved using roberts theorem with neutrality by transforming any social choice function to a neutral social choice function as given by proposition [ prop : neu1 ] .",
    "this transformation seems to require that the domain be unrestricted .",
    "we have provided a characterization of domains over which every implementable and neutral social choice function is a weighted welfare maximizer .",
    "our proof technique reduces the problem of characterizing such social choice functions to the problem of characterizing orderings over euclidean space , a problem which has been studied at length in social choice theory .",
    "finally , we show how roberts theorem ( the general version ) can be proved using roberts theorem with neutrality .",
    "this proof requires transforming any implementable social choice function into a neutral and implementable social choice function . to our knowledge , this transformation seems to require the unrestricted domain .",
    "we summarize our main contribution in figure [ fig : contr ] .",
    "the arrows in this figure indicate implications .",
    "as the figure shows , our results can be thought to be equivalence of the pad condition and implementability in the presence of neutrality in open interval domains .",
    "it will be interesting to investigate this equivalence in the absence of neutrality .",
    "10    itai ashlagi , mark braverman , avinatan hassidim , and dov monderer . .",
    "working paper , harvard business school , http://www.people.hbs.edu/iashlagi/ , 2009 .",
    "s.  bikhchandani , s.  chatterji , r.  lavi , a.  mualem , n.  nisan , and a.  sen .",
    "weak monotonicity characterizes deterministic dominant strategy implementation .",
    ", 74:11091132 , 2006 .",
    "charles blackorby , david donaldson , and john  a. weymark .",
    "social choice with interpersonal utility comparisons : a diagrammatic introduction .",
    ", 25:327356 , 1984 .",
    "d.  blackwell and m.  a. grishick . .",
    "wiley , new york , 1954 .",
    "juan  carlos carbajal and rabee tourky . characterizing dominant strategy implementation in continuous domains .",
    "working paper , university of queensland , http://www.uq.edu.au/economics/carbajal/home.html , 2009 .",
    "kim - sau chung and jeffrey  c. ely .",
    "ex - post incentive compatible mechanism design .",
    "working paper , university of minnesota , http://sites.google.com/site/kimsauchung/researchpapers , 2006 .",
    "kim - sau chung and wojciech olszewski .",
    "a non - differentiable approach to revenue equivalence .",
    ", 2:119 , 2007 .",
    "e.  clarke .",
    "multipart pricing of public goods .",
    ", 11:1733 , 1971 .    c.  daspremont and l.  gevers .",
    "equity and the informational basis of collective choice .",
    ", 44:199209 , 1977 .    c.  daspremont and l.  gevers .",
    ", chapter social welfare functionals and interpersonal comparability ( chapter 10 ) , pages 459541 .",
    "elsevier , amsterdam , 2002 .",
    "ediors : kenneth j. arrow , amartya k. sen , and k. suzumura .",
    "s.  dobzinski and n.  nisan . a modular approach to roberts theorem . in _ in proceedings of the 2nd international symposium on algorithmic game theory ( sagt 2009)_. springer ( lecture notes in computer science ) , 2009 .",
    "a.  gibbard .",
    "manipulation of voting schemes : a general result .",
    ", 41:587602 , 1973 .",
    "t.  groves .",
    "incentives in teams .",
    ", 41:617631 , 1973 .",
    "b.  heydenreich , rudolf muller , m.  uetz , and r.  v. vohra .",
    "characterization of revenue equivalence .",
    ", 77:307316 , 2009 .",
    "philippe jehiel , moritz  meyer ter vehn , and benny moldovanu .",
    "ex - post implementation and preference aggregation via potentials .",
    ", 37:469490 , 2008 .    r.  lavi , a.  mualem , and n.  nisan .",
    "two simplified proofs of roberts theorem . , 32:407423 , 2009 .",
    ", chapter computationally - efficient approximate mechanisms , pages 301330 .",
    "cambridge university press , 2007 .",
    "ediors : noam nisan and tim roughgarden and eva tardos and vijay vazirani .",
    "ron lavi , ahuva mualem , and noam nisan . towards a characterization of truthful combinatorial auctions . in _ proceedings of the 44th annual ieee symposium on foundations of computer science ( focs03)_. ieee press , 2003 .",
    "moritz meyer - ter - vehn and benny moldovanu .",
    "ex post implementation with interdependent valuations .",
    "mimeo , 2003 .",
    "j.  milnor .",
    ", chapter games against nature , pages 4459 .",
    "wiley , new york , 1954 .",
    "ediors : r.m .",
    "thrall , c.h .",
    "coombs , and r.l .",
    "dov monderer . .",
    "in _ proceedings of @xmath481 acm conference on electronic commerce_. acm press , 2008 .",
    "arrow s theorem and the gibbard - satterthwaite theorem : a unified approach .",
    ", 70:99105 , 2001 .",
    "k.  roberts . , chapter aggregation and revelation of preferences , pages 321348 .",
    "north holland publishing , 1979 .",
    "editor : j - j . laffont .",
    "j.  c. rochet .",
    "a necessary and sufficient condition for rationalizability in a quasi - linear context .",
    ", 16:191200 , 1987 .    m.  e. saks and l.  yu . . in _ proceedings of @xmath482 acm conference on electronic commerce _ ,",
    "pages 286293 .",
    "acm press , 2005 .",
    "m.  satterthwaite .",
    "strategy - proofness and arrow s conditions : existence and correspondence theorems for voting procedures and social welfare functions .",
    ", 10:187217 , 1975 .",
    "w.  trockel .",
    "an alternate proof for the linear utility representation theorem .",
    ", 2:298302 , 1992 .",
    "w.  vickrey .",
    "counterspeculation , auctions , and competitive sealed tenders . , 16:837 , 1961 .",
    "rakesh  v. vohra .",
    "paths , cycles and mechanism design . manuscript ,",
    "kellogg school of management , northwestern university , 2008 .",
    "proof of fact [ fact : f1 ]    let @xmath211 and @xmath483 for some @xmath484 .",
    "we consider two possible cases . + case 1",
    ": suppose @xmath210 is closed in @xmath26 .",
    "assume for contradiction that @xmath485 . since @xmath486 is convex , @xmath487 .",
    "since @xmath210 is closed in @xmath26 , the set @xmath488 is open in @xmath26 .",
    "hence , @xmath488 is open in @xmath1 .",
    "this means , there exists an @xmath2-dimensional open ball @xmath489 of radius @xmath490 such that every @xmath491 belongs to @xmath488 .",
    "now , consider an iterative procedure as follows .",
    "let @xmath492 be two variables in @xmath1 .",
    "initially , set @xmath493 and @xmath494 . in every step ,    * if @xmath144 is in the convex hull of @xmath495 and @xmath496 then set @xmath497 , * else set @xmath498 .    if @xmath499 , stop .",
    "else , repeat the step .",
    "since @xmath500 strictly decreases in every step , the procedure will terminate .",
    "moreover , @xmath495 and @xmath501 at the end of the procedures are two points in @xmath210 .",
    "hence , @xmath496 is in @xmath210 and lies in the ball @xmath234 .",
    "this is a contradiction   is closed , we are done . ] .",
    "+ case 2 : suppose @xmath210 is open in @xmath26 . then @xmath210 is open in @xmath1 .",
    "this implies that there exists an open ball @xmath502 around @xmath30 of radius @xmath503 and an open ball @xmath504 around @xmath31 of radius @xmath505 such that each of these balls are contained in @xmath210 .",
    "let @xmath506 .",
    "using the fact that for every @xmath507 and every @xmath508 we have @xmath509 , we get that every @xmath510 lies in @xmath210 .",
    "now , we can repeat the procedure of case 1 to conclude that @xmath511 .",
    "proof of theorem [ theo : efficiency ] +    note that @xmath26 is open from above ( i.e. , for every @xmath512 , there exists an @xmath73 such that @xmath513 ) and a meet - semilattice ( i.e. , if @xmath514 , then @xmath515 ) .",
    "we can verify that propositions [ prop : order ] and [ prop : axioms ] are true as long as @xmath26 is open from above and a meet - semilattice .",
    "hence , by proposition [ prop : order ] , @xmath119 is an ordering . by proposition [ prop : axioms ] and",
    "lemma [ lem : anon ] , @xmath39 satisfies weak pareto , invariance , and anonymity ( we do not need continuity for this proof ) . also , note that for any @xmath138 , any permutation of the elements of @xmath30 results in a vector in @xmath26",
    "now , choose @xmath122 such that @xmath516 . by anonymity , we can rearrange @xmath30 and @xmath31 in non - decreasing order but mutually ranked the same way as @xmath30 and @xmath31 . considering successively , in these new vectors ,",
    "each pair of corresponding components and subtracting from each the minimal one , we get again two new vectors which are ranked the same way as @xmath30 and @xmath31 by invariance ( note here that these two new vectors belong to @xmath517 ) . repeating these two operations at most @xmath2 times",
    ", we will reach two zero vectors ( since @xmath518 ) . hence , @xmath126 .",
    "next , we show that if @xmath519 then @xmath123 .",
    "let @xmath520 $ ] .",
    "consider the vector @xmath144 defined as @xmath521 for all @xmath9 . by weak pareto @xmath522 .",
    "further @xmath523 .",
    "hence , @xmath151 .",
    "hence , @xmath123 .    by lemma [ lem : new1 ] , for every @xmath47",
    ", we have @xmath61 . hence , @xmath524 for all @xmath10",
    "hence , @xmath39 is the efficient social choice function .",
    "in this appendix , we show that a stronger , but natural definition of neutrality implies our definition of neutrality .",
    "a social choice function @xmath39 is * scf - neutral * if for every @xmath47 , every permutation @xmath65 of @xmath23 and type profile @xmath66 induced by permutation @xmath65 on @xmath13 , we have @xmath525 if @xmath526 .",
    "since @xmath39 is implementable , it satisfies pad .",
    "fix a type profile @xmath13 and a permutation @xmath65 of @xmath23 , and let @xmath66 be the type profile induced by @xmath65 on @xmath13 .",
    "consider @xmath64 and a type profile @xmath527 for some @xmath73 .",
    "hence , @xmath74 .",
    "now , let @xmath133 be the type profile induced by permutation @xmath65 on @xmath129 . by scf - neutrality @xmath528 ( @xmath32 can be chosen arbitrarily small so that @xmath529 ) . by pad , @xmath530"
  ],
  "abstract_text": [
    "<S> we consider dominant strategy implementation in private values settings , when agents have multi - dimensional types , the set of alternatives is finite , monetary transfers are allowed , and agents have quasi - linear utilities . </S>",
    "<S> we show that any implementable and neutral social choice function must be a weighted welfare maximizer if the type space of every agent is an @xmath0-dimensional open interval , where @xmath0 is the number of alternatives . </S>",
    "<S> when the type space of every agent is unrestricted , roberts theorem with neutrality @xcite becomes a corollary to our result . </S>",
    "<S> our proof technique uses a _ social welfare ordering _ approach , commonly used in aggregation literature in social choice theory . </S>",
    "<S> we also prove the general ( affine maximizer ) version of roberts theorem for unrestricted type spaces of agents using this approach .    </S>",
    "<S> keywords : dominant strategy mechanism design ; roberts theorem ; affine maximizers ; social welfare ordering + jel classification : d44 . </S>"
  ]
}
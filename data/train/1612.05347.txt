{
  "article_text": [
    "directed networks are formed by nodes and arcs ( i.e. , directed links ) pointing from one node to another .",
    "they are ubiquitous in biological and technological systems ; for instance , neurons in the brain rely on directed synaptic connections to form an information - processing network @xcite , and cell regulatory networks contain directed interactions between genes , proteins and other small molecules @xcite .",
    "structural properties of directed networks at different scales have been studied in the literature for many years , especially on network small motifs @xcite , mesoscopic communities @xcite , strongly connected components @xcite , and network hierarchical structure @xcite .",
    "a directed network can easily be decomposed into a set of strongly connected components ( sccs ) and at this coarse - grained level is a directed acyclic feedforward graph of sccs , with clear - cut hierarchical structure as directed cycle is absent @xcite .",
    "each scc is itself a maximal subnetwork formed by some nodes and the arcs between them , and any node can reach and be reached by any another node of the same scc through at least one directed path .",
    "directed cycles are usually abundant in the large sccs ( each of which contains many nodes and arcs ) , and they cause strong feedback effect and make the information - processing dynamics in the network highly complex @xcite .    the hierarchical structures within large sccs of directed networks have not yet been fully investigated except for a few earlier efforts ( e.g. , @xcite ) . due to the cyclic nature of a scc",
    ", it appears at first sight to be quite ambiguous or even meaningless to order its nodes in a particular way and to define an intrinsic flow direction @xcite .",
    "however in this paper we show that the arcs that are most vital for feedback interactions can be idenified by collectively considering all the directed cycles of the network .",
    "we take an optimization approach based on the so - called principle of minimum feedback @xcite , which defines the minimum feedback arc set problem .",
    "an integer hierarchical level is assigned to each node of the input network and the resulting level configuration of all the nodes is called a node hierarchy . the node levels in this hierarchy",
    "are optimized by two efficient physics - inspired algorithms , sa and bpd , which minimize the total number of feedback arcs ( defined as those pointing from lower - level nodes to higher - level nodes ) .",
    "given a real - world directed network , we can construct many near - minimum feedback arc sets by repeatedly running the sa or bpd algorithm .",
    "the sizes of these constructed sets are very close to each other and are much smaller than the total number of arcs in the network .",
    "we also find that , while most of the arcs of the network never appear in any of these feedback arc sets , a few of them appear in almost all of them . as a concrete example , for the florida food web @xcite formed by @xmath0 node and @xmath1 arcs , only six of the arcs need to be classified as feedbacks ( fig .  [",
    "fig : florida ] ) , which is much lower than the expected number of @xmath2 feedback arcs in a direction - randomized network .",
    "our algorithms reveal that two arcs of the food - web network are present in all the minimum feedback arc sets .",
    "similar results are obtained for other real - world networks .    by distinguishing feedforward arcs and feedback arcs for a real - world directed network , our work help to reveal the hidden principle direction of flows in the network and the hierarchical organization of the nodes within the strongly connected network components . for biological networks",
    ", the identified most important feedback arcs might serve as optimal targets of intervening the system @xcite .",
    "our algorithms are also useful for network visualization @xcite",
    ". the source codes of these algorithms will be publicly available to facilitate analyzing and visualizing biological , technological , and social networks .     an optimal node hierarchy for the florida food web @xcite and the corresponding feedback arcs .",
    "the whole network has @xmath0 nodes and @xmath1 arcs , and its largest strongly connected component contains @xmath3 nodes and @xmath4 arcs ( for clarity only this component is shown ) . the nodes ( black dots )",
    "are arranged to @xmath5 hierarchical levels starting from level @xmath6 at the bottom .",
    "gray solid lines are feedforward arcs ( pointing from higher - level nodes to lower - level nodes ) , red dashed lines are feedback arcs ( pointing from lower - level nodes to higher - level nodes ) .",
    "each blue dotted line represents a pair of opposite arcs between two nodes . ]",
    "given a directed network @xmath7 of @xmath8 nodes and @xmath9 arcs , with arc density @xmath10 , we introduce a node hierarchy @xmath11 to partially order the @xmath8 nodes @xmath12 .",
    "the level of each node @xmath13 takes a nonnegative integer value @xmath14 , and level @xmath6 is the lowest .",
    "a node @xmath15 at positive level @xmath16 must have at least one outgoing arc @xmath17 to a node @xmath18 at one level below ( i.e. , @xmath19 ) to justify its level . under these level constraints ,",
    "our goal is to construct an optimal node hierarchy which agrees with most of the arcs , i.e. , the total number of arcs from higher - level nodes to lower - level nodes reaches the global maximum value .",
    "the node hierarchy problem is essentially equivalent to the feedback arc set problem , a fundamental and famous non - deterministic polynomial hard ( np - hard ) problem in computer science @xcite ( appendix  [ sec : appmap ] ) .",
    "we can treat the node hierarchy problem as a statistical mechanical system .",
    "let us define the energy of an arc @xmath20 as @xmath21 for @xmath22 and @xmath23 for @xmath24 .",
    "the total energy of hierarchy @xmath25 is then the sum of arc energies , @xmath26 we write down the following equilibrium partition function @xmath27 to combine the effects of energy and level constraints : @xmath28 here @xmath29 is the boltzmann factor of node @xmath13 due to its level constraint : @xmath30 if @xmath31 or @xmath13 has an outgoing arc @xmath20 to a node @xmath15 at level @xmath32 ; otherwise @xmath33 .",
    "the boltzmann factor of arc @xmath17 is @xmath34 if its energy is zero ( @xmath35 ) ; otherwise @xmath36 with the inverse temperature @xmath37 being an adjustable parameter .",
    "notice that each node hierarchy @xmath25 contributes a weight @xmath38 to @xmath27 .",
    "at sufficiently large values of @xmath37 , the node hierarchies with the global minimum energy value ( i.e. , the optimal node hierarchies ) will have overwhelming contributions to the partition function @xmath27 .",
    "we have solved model ( [ eq : modelr ] ) by the replica - symmetric ( rs ) cavity method developed in the spin glass research field @xcite ( appendix  [ sec : appmodelr ] ) . due to the strong level constraints the mean - field equations of this rs theory are very complicated and are computationally inefficient .",
    "a set @xmath39 of arcs is regarded as a feedback arc set ( fas ) if it intersects with every directed cycle of the network .",
    "notice that if all the arcs of a fas are deleted the remaining network contains no directed cycle .",
    "a fas is a minimal one if any of its proper subset is no longer a fas ; and it is a minimum one if its cardinality is the smallest among all the feedback arc sets . given a node hierarchy @xmath25 of network @xmath7 , the set formed by all the arcs @xmath20 with @xmath24 is a fas . on the other hand , a unique node hierarchy can be constructed for any fas by first deleting all the arcs of this set from the network and assigning the lowest level @xmath6 to all the nodes which have no outgoing arc , followed by iteratively assigning the level @xmath40 to all the remaining nodes which have outgoing arcs only to nodes at lower levels .",
    "indeed there is a one - to - one correspondence between node hierarchies and the so - called _ neat _ feedback arc sets ( appendix  [ sec : appmap ] ) .",
    "all the minimal and minimum feedback arc sets ( and some special non - minimal ones ) are neat , and therefore an optimal node hierarchy is equivalent to a minimum fas .",
    "this equivalence means that we can obtain a near - optimal node hierarchy by first constructing a near - minimum fas . for the latter task the level constraints of eq .",
    "( [ eq : modelr ] ) are not necessary , so we can drop them by setting the boltzmann factors of all the nodes @xmath13 to be @xmath41 .",
    "the rs mean - field theory for this relaxed model is much more convenient for numerical treatment ( appendix  [ sec : appmodele ] ) .",
    "this simplified theory estimates the probability @xmath42 of arc @xmath20 being a feedback arc to be @xmath43 where the integer @xmath44 restricts the level of each node @xmath13 to be @xmath45 to compensate for the removed level constraints ; the function @xmath46 denotes the probability that node @xmath15 will be at level @xmath16 if node @xmath47 is absent .",
    "the self - consistent belief propagation ( bp ) equation for this cavity probability is @xmath48 \\times     \\nonumber \\\\    &     \\prod\\limits_{k\\in c(j)\\backslash j^\\prime } \\bigl [      1-(1-e^{-\\beta})\\sum\\limits_{h_k = h_j}^{d-1 }      q_{k\\rightarrow j}^{h_k } \\bigr ]    \\ ; , \\end{aligned}\\ ] ] where @xmath49 and @xmath50 ; and @xmath51 is the subset of @xmath52 with @xmath47 being excluded , similarly for @xmath53 .",
    "we can iterate the bp equation ( [ eq : bp ] ) on the network @xmath7 at a fixed large value of @xmath44 ( e.g. , @xmath54 ) and different values of @xmath37 and then estimate the mean fraction @xmath55 of feedback arcs as @xmath56 based on eqs .",
    "( [ eq : rhoarc ] ) and ( [ eq : bp ] ) , a belief - propagation  guided decimation ( bpd ) algorithm is also implemented to construct near - minimum feedback sets ( appendix  [ sec : appbpd ] ) .",
    "briefly speaking , at each decimation step a tiny fraction of arcs @xmath20 with the largest estimated @xmath42 values are deleted from the network @xmath7 ; then @xmath7 is further simplified by deleting all the nodes which have no incoming or outgoing arc ; then eq .",
    "( [ eq : bp ] ) is iterated a small number of times and the value of @xmath57 for each remaining arc @xmath58 is updated .",
    "let us represent an @xmath8-node permutation as a column vector @xmath59 with @xmath60 and @xmath61 if @xmath62 . another way of simplifying the level constraints of eq .",
    "( [ eq : modelr ] ) is to set the level @xmath63 of each node @xmath13 to be its vertical position in @xmath64 . a most convenient way of permutating the nodes to reduce the total arc energy is simulated annealing ( sa ) @xcite .",
    "this method has been successfully applied on the directed and undirected feedback vertex set problems @xcite . for the present fas problem",
    "we follow the simple recipe of @xcite ( appendix  [ sec : appsa ] ) . starting from an initial random permutation and an initial low inverse temperature @xmath37 , at each time step",
    "two rejection - free updating processes are performed : ( 1 ) an upward arc @xmath20 with @xmath65 is chosen among all such arcs with probability proportional to @xmath66 $ ] and node @xmath13 is moved to be immediately above node @xmath15 in permutation @xmath64 , where @xmath67 is the increase in the number of upward arcs caused by this move ; and ( 2 ) an upward arc @xmath68 is chosen among all such arcs with probability proportional to @xmath69 $ ] and @xmath47 is moved to be immediately below node @xmath70 in @xmath64 , where again @xmath71 is the increase in the number of upward arcs caused by this move .",
    "after @xmath72 such time steps ( e.g. , @xmath73 or even larger ) the inverse temperature is increased to @xmath74 ( e.g. , @xmath75 ) .",
    "the search process terminates at a sufficiently large value of @xmath37 .",
    "we first test the bpd and sa algorithms on directed erds - rnyi ( er ) , directed regular random ( rr ) and directed scale - free ( sf ) random networks @xcite . both er and rr networks are homogenous , while sf networks are quite heterogeneous in that some nodes have a lot of attached arcs ( appendix  [ sec : appnetwork ] ) . as the arc directions are completely random",
    ", no intrinsic flow direction should exist in these artificial networks .",
    "our goal here is to check whether near - minimum feedback arc sets can be achieved by bpd and sa .",
    "we find that bpd and sa perform almost equally good on all the heterogeneous ( sf ) random networks and on the homogeneous ( er and rr ) networks of arc density @xmath76 ; the fractions @xmath55 of feedback arcs in the constructed fas solutions are very close to the predicted values by the rs mean - field theory , indicating that nearly optimal solutions are indeed achieved ( fig .",
    "[ fig : fasrandom ] ) .",
    "bpd and sa greatly outperform the local degree - based heuristic ( dh ) which recursively deletes the arc @xmath20 with the highest value of @xmath77 from the network to destroy all directed cycles @xcite , with the in - degree @xmath78 and out - degree @xmath79 being , respectively , the number of incoming and outgoing arcs of node @xmath13 .",
    "the sa algorithm slightly outperforms bpd for directed er and rr networks of arc density @xmath80 . for er networks of arc density @xmath81 ,",
    "the typical fraction @xmath55 of feedback arcs in solutions constructed by sa has the value @xmath82 , while the corresponding value for the bpd - obtained solutions is @xmath83 .",
    "we can improve the performance of bpd to a small extent by choosing a larger value @xmath44 of level upper - bound , but the computation cost increases linearly with @xmath44 .",
    "it appears that , to further boost the performance of the bpd algorithm and beat the sa algorithm , we need to design a better statistical physics model for the feedback arc set problem .",
    "we plan to explore this challenging issue in a future paper .",
    "as a demonstration of practical applications , we now apply bpd and sa on a small set of representative real - world directed networks ( table  [ tab : real ] ) :    * regulatory*. this is the epidermal growth factor receptor ( egfr ) signal transduction network @xcite , with @xmath84 nodes and @xmath85 arcs .",
    "each node represents a molecular species such as kinases , phosphatase , and ions ; each arc represents a directed regulatory interaction between two molecular species .    * food web*. this is the florida bay ecosystem network @xcite , containing @xmath86 nodes and @xmath87 arcs .",
    "each node represents a species ( such as bacteria , zooplankton , shrimp ) or a molecular type such as particular organic carbon , and each directed arc represents transfer of biomass between two kinds of species or molecules .",
    "* neural*. this is the neural network of the nematode _ c. elegans _",
    "@xcite , containing @xmath88 nodes and @xmath89 arcs .",
    "each node represents a neural cell and each arc represents a directed connection between two neurons .    * circuit*. this is the electronic sequential logic circuit network ec - s838 @xcite , containing @xmath90 nodes and @xmath91 directed connections .",
    "* metabolic*. this is the metabolic network of the nematode _ c. elegans _",
    "@xcite , with @xmath92 nodes and @xmath93 arcs .",
    "each node represents a chemical molecule or an enzyme , and each arc means that a given molecule participates in a particular enzyme - catalyzed reaction or is produced by this reaction .    *",
    "wiki - vote*. this is the network of who - votes - on - whom among the wikipedia administrators @xcite , containing @xmath94 nodes and @xmath95 arcs .",
    "* p2p - share*. this is the gnutella peer - to - peer file sharing network @xcite , containing @xmath96 nodes and @xmath97 arcs .",
    "each node represents a computer server and each arc represents directed file transfer between two servers .    .",
    "[ tab : real ] solving the node hierarchy problem for real - world networks .",
    "@xmath8 , node number ; @xmath9 , arc number ; @xmath98 , number of simple arcs ( which have no opposite counterpart ) ; @xmath99 , number of simple feedback arcs ; @xmath100 and @xmath101 , expected number of simple feedback arcs in a direction - randomized network and its standard deviation ; @xmath102 , scarcity extent of feedback arcs .",
    "simulation results are all obtained by the sa algorithm . [ cols=\"<,>,>,>,>,>,>,>\",options=\"header \" , ]         for these real - world network instances we again find that the feedback arc sets contructed by bpd and sa are of very similar sizes .",
    "it s very likely that near - optimal fas solutions have been achieved by these two algorithms .",
    "the sa algorithm and bpd perform equally good on the four small network instances , but sa slightly outperforms bpd on the three large network instances ( metabolic , wiki - vote , p2p - share ) .",
    "we list in table  [ tab : real ] the results obtained by a single running of the sa algorithm on the examined real networks , where @xmath98 and @xmath99 respectively denote the total number of simple arcs and simple feedback arcs ( excluding all the bi - directional arcs ) .    for each examined real - world network",
    "we also generate @xmath103 replicas with the same connectivity pattern but completely randomized directions of all the simple arcs , and apply sa on them to obtain the expected number @xmath100 of simple feedback arcs and its standard deviation @xmath101 .",
    "the scarcity @xmath102 of feedback arcs in the original network is then quantified as @xmath104 this quantity has a clear statistical meaning .",
    "a large positive value of @xmath102 suggests that the number @xmath99 of feedback arcs in the original network is significantly lower than the expected number @xmath100 of feedback arcs in a direction - randomized network .",
    "similarly , a highly negative @xmath102 value suggests that feedback arcs are significantly more abundant in the original network than in a direction - randomized network .    as table  [ tab : real ] reveals",
    ", feedback arcs are very rare in the florida food web @xcite , the _ c. elegans _ neural network @xcite , and social networks wiki - vote @xcite and p2p - share @xcite , which all have very large positive @xmath102 values .",
    "reducing the number of feedback connections might enhance the efficiency of information processing in neural and social networks .",
    "on the other hand , feedback arcs are strongly enriched in the _ c. elegans _ metabolic network @xcite , which has a highly negative @xmath102 value .",
    "it may be necessary to have an abundant number of feedback connections to finely regulate the concentrations of cellular molecules .",
    "when we repeatedly run the sa or bpd algorithm on the same real - world network instance , we find that the output feedback arc sets are usually not identical although their sizes are almost equal .",
    "most importantly , we find that most of the arcs in the network never appear in any of these constructed feedback arc sets , but some arcs are present in almost all these sets ( fig .  [",
    "fig : fasreal ] ) .",
    "these results strongly indicate that the arcs in a real - world network have very different significance in terms of the feedback role , and our sa and bpd algorithms can identify a small set of most important feedback arcs .    after the feedback probability @xmath42 for every arc @xmath20 of a real - world network has been computed ( through repeatedly running sa or bpd or , more efficiently , through employing eq .",
    "( [ eq : rhoarc ] ) and bp iteration ) , the feedforward part ( the backbone @xcite ) of the network can easily be constructed by checking every arc of the network in increasing order of the feedback probability and adding it to the backbone if no directed cycle will be formed .",
    "in this paper , we introduced the optimal node hierarchy problem , which is essentially equivalent to the minimum feedback arc set problem , and presented two physics - based algorithms to efficiently solve this problem for random and real - world directed networks . our bpd and sa algorithms are capable of revealing the hidden hierarchical structure and the principal flow direction of a real - world directed network .",
    "our methods can also be used to discover a small number of arcs which are involved most significantly in feedback interactions .",
    "we found that feedback interactions are extremely supressed in some real - world networks .",
    "the methods of this work may have wide practical applications in studies of biological , technological , and social networks and in network engineering .",
    "for example , after the intrinsic flow direction in the network has been determined , it may become much more easier to design efficient arc - deletion or arc - addition strategies to improve the functionality of the network and to make it more robust against random failures or intentional attacks .",
    "the key feedback arcs identified by our algorithms may serve as optimal targets of intervening the dynamical processes on the network .",
    "a natural extension of the present work is to consider optimal ways of cutting long directed arcs to dismantle a directed network .",
    "similar to the proposal of optimally dismantling an undirected network @xcite , we may iteratively delete the arcs that are predicted to be most important for long - range feedback interactions to break the original directed network down into many small strongly connected components .",
    "detailed numerical study on this important network optimization problem will be reported in a separate paper .",
    "directed cycles are large - scale structural aspects of a directed network .",
    "they cause complicated global constraints to the node hierarchy and fas problems .",
    "further efforts are needed to improve the theoretical models and the bpd algorithm of this paper .",
    "indeed the two spin glass models of the present paper still have major shortcomings .",
    "firstly , each node @xmath13 of the network can take many different level states @xmath63 , which considerably slows down the numerical computation .",
    "secondly , the predicted minimum cardinalities of feedback arc sets by the two models differ noticably with each other and with the algorithmic results of bpd and sa .",
    "thirdly , the associated bpd algorithms of the two models perform worse than the sa algorithm on homogeneous random networks of relative large arc densities .",
    "we hope these issues will be overcome in the near future by a refined statistical physics model of the minimum feedback arc set problem .",
    "this research was partially supported by the national basic research program of china ( grant number 2013cb932804 ) and by the national natural science foundations of china ( grant number 11121403 and 11225526 ) .",
    "10 url # 1`#1`urlprefix[2]#2 [ 2][]#2    , , & .",
    "_ _ * * , ( ) .    , , , & .",
    "_ _ * * , ( ) .    , , & .",
    "_ _ * * , ( ) .    .",
    "_ _ * * , ( )",
    ".    _ et  al . _ .",
    "_ _ * * , ( ) .    & .",
    "_ _ * * , ( ) .    .",
    "_ _ * * , ( ) .    .",
    "_ _ * * , ( ) .    , & .",
    "_ _ * * , ( ) .    , , , & .",
    "_ _ * * , ( ) .    , , , & .",
    "_ _ * * , ( ) .    & .",
    "_ _ * * , ( ) .    , , & .",
    "_ _ * * , ( ) .    , & .",
    "_ _ * * , ( ) .    , , & .",
    "_ _ * * , ( ) .    & .",
    "_ _ * * , ( ) .    , & . ,",
    "( ) .    & .",
    "_ _ * * , ( ) .    & .",
    "_ _ * * , ( ) .    & _ _ ( , , ) .    & _ _ ( , , ) .    &",
    ". _ _ * * , ( ) .",
    "_ et  al . _ . _",
    "_ * * , ( ) .    , , & .",
    "_ _ ( ) .    & .",
    "_ _ * * , ( ) .    .",
    "_ _ ( ) .    , & .",
    "_ _ * * , ( ) .    , & .",
    "_ _ * * , ( ) .",
    "_ * * , ( ) .    & .",
    "_ _ * * , ( ) .    , & .",
    "_ _ * * , ( ) .    , & .",
    "_ _ * * , ( ) .    , & .",
    "in _ _ , ( , , ) .    , & . _ _ * * , ( ) .    & . _ _ * * , ( ) .    , , & . _ _ * * , ( ) .     * feedback arcs and node hierarchy in directed networks *    jin - hua zhao and hai - jun zhou    0.2 cm    appendices    0.5 cm    we describe in the following appendices the technical details of the replica - symmetric ( rs ) mean - field theories , the belief - propagation  guided decimation ( bpd ) algorithms and the simulated annealing ( sa ) algorithm .",
    "some technical details on generating random directed network instances and on visualizing directed networks are also given .",
    "the source codes of the bpd and sa algorithms will be made publicly available at http://power.itp.ac.cn/@xmath105zhouhj/codes.html .",
    "a directed network @xmath7 is composed of @xmath8 nodes and @xmath9 arcs , each of which is a directed link pointing from one node ( say @xmath13 ) to another node ( say @xmath15 ) and is denoted as @xmath20 .",
    "the arc density is denoted as @xmath106 .",
    "given an arc @xmath20 , we say that node @xmath15 is a downstream neighbor ( child ) of @xmath13 and node @xmath13 an upstream neighbor ( parent ) of @xmath15 .",
    "let us denote by @xmath107 the set of downstream neighbors ( childrens ) of node @xmath15 , and similarly denote by @xmath108 the set of upstream neighbors ( parents ) of node @xmath15 .",
    "the in - degree @xmath109 of node @xmath15 is then the cardinality of set @xmath52 , that is @xmath110 , and the out - degree of node @xmath15 is @xmath111 .",
    "an arc @xmath20 from node @xmath13 to node @xmath15 is referred to as a simple arc if ( and only if ) the oppositely directed arc @xmath112 from node @xmath15 to node @xmath13 is absent",
    ". if both @xmath20 and @xmath112 are present in the network , a trivial directed cycle involving nodes @xmath13 and @xmath15 will be formed , and one of these two arcs will be a feedforward arc and the other one will be a feedback arc . because of this reason , in the present work we only consider simple arcs and neglect all the pairs of oppositely directed arcs .",
    "a node hierarchy @xmath113 is a hierarchy level configuration involving all the nodes of network @xmath7 .",
    "a node hierarchy @xmath25 must satisfy the following two sets of constraints : ( 1 ) the level of each node @xmath13 must be a non - negative integer , namely @xmath114 ; ( 2 ) a node @xmath15 at positive level @xmath115 must have outgoing arc(s ) to node(s ) at one level below ( in other words , there must be at least one arc @xmath17 from @xmath15 to a node @xmath18 at level @xmath19 ) .",
    "a feedback arc set ( fas ) is a set @xmath39 of arcs with the property that if all the arcs in @xmath39 are deleted from network @xmath7 , the remaining subnetwork will be free of any directed cycle .",
    "two feedback arc sets for a small network are shown in fig .",
    "[ fig : hierarchy2fas ] as examples .",
    "a minimal fas is a fas @xmath39 of minimal cardinality , meaning that any proper subset of @xmath39 is no longer a fas .",
    "a minimum fas is a special minimal fas whose cardinality is the smallest among all the feedback arc sets .",
    "the concept of node hierarchy is closely related to the concept of feedback arc set . given a fas @xmath39 ,",
    "a _ unique _",
    "node hierarchy @xmath25 can be constructed through the following iteration process :    1 .",
    "all the arcs of set @xmath39 are deleted from network @xmath7 , resulting in a directed acyclic subnetwork @xmath116 .",
    "2 .   some of the nodes must have no outgoing arc in subnetwork @xmath116 , and they are all assigned the lowest hierarchy level @xmath6 .",
    "then the level parameter @xmath117 is set to be @xmath118 .",
    "3 .   if some nodes were not assigned a level during the preceding step(s ) , then some of these remaining nodes must only have outgoing arcs in @xmath116 to the assigned nodes ( whose levels are surely less than @xmath117 ) , and all such nodes are assigned the hierarchy level @xmath117",
    ". then @xmath117 is increased by one ( @xmath119 ) .",
    "4 .   return to step ( c ) as long as some nodes are still not yet assigned a hierarchy level .",
    "the resulting hierarchy level configuration @xmath113 of the @xmath8 nodes must be a node hierarchy , as each node @xmath13 has integer level @xmath120 and each node @xmath15 of positive level @xmath16 has at least one outgoing arc @xmath17 to a node @xmath18 of level @xmath19 .",
    "we have therefore proved that every fas can be mapped to a unique node hierarchy .",
    "let us denote by @xmath121 the mapped node hierarchy of the fas @xmath39 .",
    "because of the one - to - one mapping from @xmath39 to @xmath121 , the node hierarchy @xmath121 contains all the information of @xmath39 .     one - to - many mapping between node hierarchies and feedback arc sets .",
    "( a ) a node hierarchy for a small directed network with @xmath122 nodes and @xmath123 arcs : the number of nodes at level @xmath6 , @xmath124 , and @xmath125 is one , while the number of nodes at level @xmath126 is two .",
    "( b ) the two dashed arcs form a feedback arc set .",
    "( c ) the three dashed arcs form another feedback arc set .",
    ", scaledwidth=50.0% ]    in this work we regard a feedback arc set @xmath39 as _ neat _ if , and only if , for each arc @xmath127 the level of the upstream node @xmath13 does not exceed that of the downstream node @xmath15 ( namely , @xmath24 ) in the uniquely determined node hierarchy @xmath121 . notice that a neat fas of network @xmath7 is not necessarily a minimal fas of @xmath7 .",
    "( for example , the arc set containing all the arcs of the network is a neat fas , but it is not a minimal fas . ) on the other hand , every minimal fas must be a neat fas . as a corollary ,",
    "every minimum fas is a neat fas .",
    "the concept of neat fas can be understood as a natural extension of the concept of minimal fas .",
    "we now prove that there is a one - to - one correspondence between a neat fas @xmath39 and a node hierarchy @xmath25 , which means that the @xmath128function ",
    "@xmath129 is invertible if @xmath39 is restricted to be a neat fas .",
    "first , let us emphasize that , although there is a one - to - one mapping from fas to node hierarchy , the mapping from node hierarchy to fas is not one - to - one but instead many - to - one .",
    "in other words , many different feedback arc sets are compatible with the same node hierarchy @xmath25 .",
    "figure  [ fig : hierarchy2fas ] gives a clear demonstration of this important fact .",
    "however , given a node hierarchy , say @xmath130 , a unique and neat fas ( denoted as @xmath131 ) can be constructed through the following simple process , starting from @xmath132 : for each arc @xmath133 we add it to @xmath131 if and only if @xmath134 .",
    "it is straightforward to check that the resulting set @xmath131 must be unique , it must be a fas , and it must be neat . if one applies on @xmath131 the above - mentioned mapping of fas to node hierarchy , the resulting node hierarchy @xmath135 will be identical to @xmath136 .",
    "this last statement can be verified by the following iterative reasoning :    1 .",
    "if a node @xmath13 has level @xmath137 in node hierarchy @xmath136 , then all its outgoing arcs must belong to the neat fas @xmath131 and therefore it will be assigned the hierarchy level @xmath138 when @xmath131 is mapped back to a node hierarchy . therefore @xmath139 is identical to @xmath136 at hierarchy level @xmath6 .",
    "if a node @xmath15 has level @xmath140 in node hierarchy @xmath136 , then at least one of its outgoing arc , say @xmath17 , points to a node @xmath18 of level @xmath141 and therefore does not belong to @xmath131 ; on the other hand , if node @xmath15 has an outgoing arc , say @xmath142 , to a node @xmath143 of level @xmath144 , this arc must belong to @xmath131 .",
    "because of these two properties , node @xmath15 will be assigned the hierarchy level @xmath145 in the mapping @xmath139 .",
    "this means that @xmath139 is identical to @xmath136 also at hierarchy level @xmath126 .",
    "the reasoning of the preceding step ( 2 ) can be applied to nodes at the hierarchy level @xmath146 of @xmath136 to confirm that @xmath139 is identical to @xmath136 at all these hierarchy levels .",
    "we have therefore completed the proof of one - to - one correspondence between a node hierarchy @xmath25 and a neat fas @xmath39 . in this work",
    "we regard a node hierarchy @xmath25 as minimal if , and only if , its corresponding neat fas @xmath39 is a minimal fas .",
    "a node hierarchy @xmath25 is referred to as an optimal ( or minimum ) node hierarchy if and only if the corresponding neat fas @xmath39 is a minimum fas .",
    "since every minimal fas is a neat fas , the nice property of one - to - one correspondence between node hierarchy and neat fas means that , the problem of constructing an optimal ( or nearly optimal ) node hierarchy is essentially equivalent to the problem of constructing a minimum ( or nearly minimum ) fas .",
    "because the fas problem is a np - complete combinatorial optimization problem , the node hierarchy problem must also be np - complete .",
    "a bipartite - graph representation of the strongly constrained model ( [ eq : modelrb ] ) , showing the neighborhood structure of a node @xmath15 . in the original directed network @xmath7 ,",
    "node @xmath15 has three downstream neighbors ( @xmath147 and @xmath148 ) and two upstream neighbors ( @xmath149 and @xmath150 ) .",
    "the circles represent node @xmath15 and its three downstream nodes @xmath18 , @xmath143 , and @xmath151 .",
    "the squares represent the level constraints @xmath152 , [ i ] , [ i^\\prime]$ ] associated with nodes @xmath15 and all its upstream neighbors .",
    "the square for constraint @xmath152 $ ] is connected to node @xmath15 by a dashed line and to the nodes in set @xmath153 by solid lines .",
    ", scaledwidth=17.5% ]    let us refer to the strongly constrained statistical physics system ( [ eq : modelr ] ) as model - r ( the `` restricted '' model ) . according to this model , each node @xmath15 of the directed network @xmath7 has a hierarchical level @xmath154 , and",
    "the level constraint associated with node @xmath15 is : if @xmath15 is at a positive level ( @xmath155 ) then it must have at least one outgoing arc to a node at one level below ( i.e. , it must have an outgoing arc @xmath17 to a node @xmath18 at level @xmath19 ) .",
    "the partition function of model - r at inverse temperature @xmath37 is @xmath156 \\prod\\limits_{(k , l)\\in g } \\psi_{k l}(h_k , h_l )      \\ ; ,      \\label{eq : modelrb}\\ ] ] where the kronecker symbol @xmath157 for @xmath158 and @xmath159 for @xmath160 ; the boltzmann factor @xmath161 for @xmath162 and @xmath163 for @xmath164 .",
    "equation ( [ eq : modelrb ] ) is identical to eq .",
    "( [ eq : modelr ] ) of the main text .",
    "the integer adjustable parameter @xmath44 is a level upper - bound introduced for computational convenience . in principle we should set the level upper - bound @xmath44 to be @xmath165 ; but it turns out that the theoretical results are not sensitive to the precise value of @xmath44 ( see fig .  [",
    "fig : rrra5 ] ) , and actually too large a value of @xmath44 will deteriorate the performance of the associated bpd message - passing algorithm ( see fig .",
    "[ fig : rrra5bpdmodelb ] ) .    in the following discussions ,",
    "let us denote by @xmath152 $ ] the level constraint associated with node @xmath15 .",
    "this constraint induces many - body interactions among @xmath15 and all its downstream neighbors in the set @xmath153",
    ". we can represent model ( [ eq : modelrb ] ) by a bipartite graph involving constraint nodes ( squares ) and variable nodes ( circles ) and the edges between the squares and circles , see fig .",
    "[ fig : bipartiter ] .",
    "let us denote by @xmath166\\rightarrow j}^{h_j}$ ] the probability that node @xmath15 will be at level @xmath16 if it is _ only _ constrained by the constraint @xmath152 $ ] .",
    "similarly , for each downstream neighbor @xmath18 of node @xmath15 , we denote by @xmath166\\rightarrow k}^{h_k}$ ] the probability that @xmath18 will be at level @xmath167 if it is _ only _ constrained by the constraint @xmath152 $ ] . if node @xmath15 has no downstream neighbor ( i.e. , its out - degree @xmath168 ) , then @xmath166\\rightarrow j}^{h_j } = \\delta_{0}^{h_j}$ ] . in the general case of @xmath169 , if we assume that all the nodes attached to the constraint @xmath152 $ ] ( see fig .",
    "[ fig : bipartiter ] ) are mutually independent in the absence of this constraint , we can write down the following set of belief propagation ( bp ) equations @xcite    [ eq : bpp1 ] @xmath170\\rightarrow j}^{h_j } & =   \\frac{1}{z_{[j]\\rightarrow j } }        \\sum\\limits_{\\{h_k\\,:\\,k\\in c(j)\\ } } \\bigl [          1-(1-\\delta_{0}^{h_j})\\prod\\limits_{k\\in c(j ) }           ( 1-\\delta_{h_k+1}^{h_j})\\bigr ]        \\prod\\limits_{k\\in c(j ) } \\bigl [ e^{-\\beta e_{j k } }          q_{k\\rightarrow [ j]}^{h_k}\\bigr ] \\ ; ,   \\\\        p_{[j]\\rightarrow k}^{h_k } & = \\frac{1}{z_{[j]\\rightarrow k } }        \\sum\\limits_{h_j } e^{-\\beta e_{j k } } q_{j\\rightarrow [ j]}^{h_j }        \\sum\\limits_{\\ { h_{k^\\prime}\\,:\\ , k^\\prime \\in c(j)\\backslash k\\ } }        \\bigl[1-(1-\\delta_{0}^{h_j } ) \\prod\\limits_{k^\\prime \\in c(j ) }          ( 1-\\delta_{h_{k^\\prime}+1}^{h_j})\\bigr ]        \\prod\\limits_{k^\\prime \\in c(j)\\backslash k } \\bigl[e^{-\\beta e_{j k^\\prime } }          q_{k^\\prime \\rightarrow [ j]}^{h_{k^\\prime}}\\bigr ] \\ ; ,      \\end{aligned}\\ ] ]    where @xmath171\\rightarrow k}$ ] and @xmath171\\rightarrow j}$ ] are two probability normalization constants ; @xmath172 means the subset of @xmath153 with node @xmath18 being excluded ; @xmath173 is the energy of arc @xmath17 which is @xmath174 for @xmath175 and @xmath176 for @xmath177 ; and @xmath178}^{h_j } \\equiv        \\prod\\limits_{i\\in p(j ) } p_{[i]\\rightarrow j}^{h_j }      \\ ; ,",
    "\\quad \\quad       q_{k\\rightarrow [ j]}^{h_k }   \\equiv       p_{[k]\\rightarrow k}^{h_k } \\prod\\limits _ { j^\\prime \\in p(k)\\backslash j }      p_{[j^\\prime]\\rightarrow k}^{h_k }      \\ ; , \\ ] ] with @xmath179 being the subset of @xmath180 with node @xmath15 being excluded .",
    "the quantity @xmath181}^{h_j}$ ] actually is proportional to the probability that node @xmath15 will be at level @xmath16 if it is _ not _ constrained by the constraint @xmath152 $ ] ; similarly , @xmath182}^{h_k}$ ] is proportional to the probability that node @xmath18 will be at level @xmath167 if it is not constrained by the constraint @xmath152 $ ] .",
    "the bp equation ( [ eq : bpp1 ] ) can be rewritten in the following equivalent form which is more convenient for numerical implementation :    @xmath170\\rightarrow j}^{h_j } & \\propto         \\prod\\limits_{k\\in c(i ) }   \\bigl [          \\sum\\limits_{h_k } e^{-\\beta e_{j k } }           q_{k\\rightarrow [ j]}^{h_k } \\bigr ]        - ( 1-\\delta_{0}^{h_j } ) \\prod\\limits_{k\\in c(j ) } \\bigl [          \\sum\\limits_{h_k }   e^{-\\beta e_{j k } }          q_{k\\rightarrow [ j]}^{h_k }          - q_{k\\rightarrow [ j]}^{h_j-1 } \\bigr ]        \\ ; ,         \\\\",
    "p_{[j]\\rightarrow k}^{h_k } & \\propto \\sum\\limits_{h_j } e^{-\\beta e_{j k } }        q_{j\\rightarrow [ j]}^{h_j } \\biggl\\ { \\prod\\limits_{k^\\prime \\in c(j)\\backslash k }        \\bigl[\\sum\\limits_{h_{k^\\prime } } e^{-\\beta e_{j k^\\prime } }          q_{k^\\prime \\rightarrow [ j]}^{h_{k^\\prime } } \\bigr ] -(1-\\delta_{0}^{h_j } )        ( 1-\\delta_{h_k+1}^{h_j } ) \\prod\\limits_{k^\\prime \\in c(j)\\backslash k }        \\bigl [ \\sum\\limits_{h_{k^\\prime } } e^{-\\beta e_{j k^\\prime } }          q_{k^\\prime\\rightarrow [ j]}^{h_{k^\\prime } } - q_{k^\\prime \\rightarrow [ j]}^{h_j-1}\\bigr ]        \\biggr\\}\\ ; .",
    "\\end{aligned}\\ ] ]      the probability @xmath183 of arc @xmath184 being a feedback arc is equal to the probability of @xmath177 .",
    "according to the rs mean - field theory ( i.e. , assuming that all the attached nodes of the constraint @xmath152 $ ] in fig .",
    "[ fig : bipartiter ] are mutually independent in the absence of this constraint ) , we have @xmath185}^{h_j }      \\bigl[\\sum\\limits_{h_k \\geq h_j }   q_{k\\rightarrow [ j]}^{h_k }    \\bigr ]      \\biggl\\ {   \\prod\\limits_{k^\\prime \\in c(j)\\backslash k }       \\bigl [ \\sum\\limits_{h_{k^\\prime } }        e^{-\\beta e_{j k^\\prime } } q_{k^\\prime \\rightarrow [ j]}^{h_{k^\\prime } } \\bigr ]      - ( 1-\\delta_{0}^{h_j } ) \\prod\\limits_{k^\\prime \\in c(j)\\backslash k }      \\bigl [ \\sum\\limits_{h_{k^\\prime } } e^{-\\beta e_{j k^\\prime } }        q_{k^\\prime\\rightarrow [ j]}^{h_{k^\\prime } } -q_{k^\\prime \\rightarrow [ j]}^{h_j-1}\\bigr ]      \\biggr\\ } \\ ; , \\ ] ] where @xmath186 is expressed as @xmath187}^{h_j }      \\biggl\\ {      \\prod\\limits_{k^\\prime \\in c(j ) } \\bigl [        \\sum\\limits_{h_{k^\\prime } }        e^{-\\beta e_{j k^\\prime } } q_{k^\\prime \\rightarrow [ j]}^{h_{k^\\prime } } \\bigr ]      - ( 1-\\delta_{0}^{h_j } )      \\prod\\limits_{k^\\prime \\in c(j ) }      \\bigl [ \\sum\\limits_{h_{k^\\prime } } e^{-\\beta e_{j k^\\prime } }        q_{k^\\prime\\rightarrow [ j]}^{h_{k^\\prime } }        -q_{k^\\prime \\rightarrow [ j]}^{h_j-1}\\bigr ]      \\biggr\\ } \\ ; .\\ ] ] the mean fraction @xmath188 of feedback arcs is then obtained through @xmath189 the free energy @xmath190 of the whole system is computed through @xcite @xmath191}- d_{j}^{in } f_{j } \\bigr ]      \\ ; , \\ ] ] where @xmath192}$ ] is the free energy contribution of constraint @xmath152 $ ] , and @xmath193 is the free energy contribution of node @xmath15 .",
    "the expressions for these two free energy contributions are , respectively ,    @xmath194\\rightarrow j}^{h_j }         q_{j\\rightarrow [ j]}^{h_j } \\biggr\\ }        \\ ; ,        \\\\        f_{[j ] } & = -\\frac{1}{\\beta } \\ln \\biggl\\ {        \\sum\\limits_{h_j } q_{j\\rightarrow [ j]}^{h_j }        \\sum\\limits_{\\{h_k\\,:\\,k\\in c(j)\\ } }        \\bigl[1- ( 1-\\delta_0^{h_j } ) \\prod\\limits_{k\\in c(j ) }          ( 1-\\delta_{h_k + 1}^{h_j } ) \\bigr ]         \\prod\\limits_{k\\in c(j ) } \\bigl[e^{-\\beta e_{j k } }          q_{k\\rightarrow [ j]}^{h_k } \\bigr ] \\biggr\\ } \\nonumber \\\\        & = -\\frac{1}{\\beta } \\ln \\biggl\\ {        \\sum\\limits_{h_j } q_{j\\rightarrow [ j]}^{h_j }        \\bigl[\\prod\\limits_{k\\in c(j ) }           \\bigl[\\sum\\limits_{h_k } e^{-\\beta e_{j k } }             q_{k\\rightarrow [ j]}^{h_k } \\bigr ]          - ( 1-\\delta_{0}^{h_j } ) \\prod\\limits_{k\\in c(j ) } \\bigl [            \\sum\\limits_{h_k }   e^{-\\beta e_{j k } }            q_{k\\rightarrow [ j]}^{h_k }            - q_{k\\rightarrow [ j]}^{h_j-1 } \\bigr ]          \\bigr ]        \\biggr\\ }        \\ ; .",
    "\\end{aligned}\\ ] ]    the free energy density is then @xmath195 . notice that the free energy contribution @xmath192}$ ] of a constraint @xmath152 $ ] also contains the contributions of node @xmath15 and all its downstream neighbors ( see fig .  [",
    "fig : bipartiter ] ) , therefore the free energy contribution @xmath193 of a node @xmath15 has been considered @xmath196 times in the first summation of eq .",
    "( [ eq : fmodelr ] ) .",
    "the second summation of eq .",
    "( [ eq : fmodelr ] ) corrects this over - counting .",
    "the entropy density @xmath197 of the system is then @xmath198 this expression can be understood from the relationship that @xmath199 .",
    "replica - symmetric mean field results ( based on model - r ) for a special type of regular random directed networks .",
    "each node in the random network has @xmath200 incoming arcs and @xmath200 outgoing arcs .",
    "the level upper - bound @xmath44 ranges from @xmath201 to @xmath202 in the mean - field computations .",
    "@xmath203 , entropy density ; @xmath55 , fraction of feedback arcs .",
    ", scaledwidth=50.0% ]    due to the many - body nature of the node level constraints , the above - mentioned rs mean field theory is computationally quite inefficient . as a first test of this theory",
    ", we apply it to a special kind of regular random directed networks , namely random directed networks in which each node has the same number @xmath204 of incoming arcs and the same number @xmath204 of outgoing arcs .",
    "the connectivity pattern of such a random network is otherwise completely random . such a network may be referred to as a balanced random regular ( brr ) network . for this brr network ensemble",
    "we can assume that the cavity probability distributions @xmath166\\rightarrow j}^{h}$ ] are independent of the node @xmath15 and are all equal to the same distribution @xmath205 , and similarly all the cavity probability distributions @xmath166\\rightarrow k}^{h}$ ] are independent of the node @xmath15 and the downstream neighbor @xmath18 but are equal to the same distribution @xmath206 .",
    "under these two additional assumptions the bp equation ( [ eq : bpp1 ] ) can be simplified and a fixed - point solution can be obtained by numerical iterations .",
    "figure  [ fig : rrra5 ] shows the theoretically predicted relationship between entropy density and feedback arc fraction at @xmath200 . as long as the level upper - bound @xmath207 , the rs theoretical results are almost independent of @xmath44 . at feedback arc fraction",
    "@xmath208 the entropy density changes from being positive to being negative .",
    "therefore this mean field theory predicts the minimum fraction of feedback arcs to be @xmath209 .",
    "results obtained by the bpd algorithm ( based on model - r ) for two balanced regular random directed network instances ( one of size @xmath210 and the other of size @xmath211 ) , in which each node has @xmath200 incoming arcs and @xmath200 outgoing arcs . each data point",
    "is averaged over @xmath212 independent runs of the bpd algorithm ( the level upper - bound is fixed to @xmath213 or @xmath214 ) .",
    "@xmath55 , fraction of feedback arcs in the constructed solutions ; @xmath37 , the inverse temperature of the bpd algorithm .",
    ", scaledwidth=50.0% ]    we can implement a bpd message - passing algorithm based on the bp equation ( [ eq : bpp1 ] ) to construct feedback arc sets for single brr network instances ( see appendix  [ sec : appbpd ] ) .",
    "we have applied this bpd algorithm to two single network instances , one with @xmath210 nodes and the other with @xmath211 nodes ( @xmath200 in both cases ) .",
    "figure  [ fig : rrra5bpdmodelb ] shows the averaged results over @xmath212 independent runs of the bpd algorithm at various different values of the inverse temperature @xmath37 .",
    "we notice that the bpd results obtained at @xmath213 are slightly better than those obtained at @xmath214 ; we also notice that the bpd algorithm is not sensitive to the value of the inverse temperature @xmath37 as long as @xmath215 .",
    "most strikingly , we find that the mean fraction @xmath216 of feedback arcs in solutions obtained by the bpd algorithm is noticeably less than the predicted minimum fraction @xmath217 by the rs mean field theory of model - r . indeed for the studied network instance of size @xmath211 ,",
    "the feedback arc fraction @xmath55 in the best solution obtained by bpd is @xmath218 .",
    "the associated bpd algorithm of the relaxed model ( model - e , see appendix  [ sec : appmodele ] ) gives very close results ( @xmath219 ) for this network instance , while the sa algorithm ( see appendix  [ sec : appsa ] ) achieves even better solutions with @xmath220 .",
    "the fact that the theoretically predicted minimum feedback arc fraction being higher than the results obtained by the bpd and sa algorithms indicates that the level constraints of model - r are too strong for the feedback arc set problem .",
    "let us refer to the relaxed model as model - e ( the `` easy '' model ) .",
    "there is essentially no constraint in this model except that the hierarchical level @xmath63 of each node @xmath13 should be an integer in the range @xmath221 $ ] .",
    "each directed arc @xmath17 causes a two - body interaction between node @xmath15 and node @xmath18 , and the partition function of model - e is @xmath222 where @xmath223 for @xmath35 and @xmath224 for @xmath177 .",
    "the rs mean - field theory for this partition function has already been briefly described in the main text , here we add some more technical explanations .      for an arc @xmath225 from node @xmath13 to node @xmath15 ,",
    "its probability of being a feedback arc is @xmath226 where @xmath227 denotes the cavity probability that node @xmath13 will be at level @xmath63 if node @xmath15 is absent ; similarly @xmath228 is the cavity probability that node @xmath15 will be at level @xmath16 if node @xmath13 is absent .",
    "notice that in eq .",
    "( [ eq : rhoije ] ) the product @xmath229 is the joint probability of @xmath63 and @xmath16 when the arc @xmath20 is absent ( assuming that node @xmath13 and node @xmath15 are then independent ) ; and the term @xmath230 is then the total probability that @xmath24 in the absence of the arc @xmath20 . the belief - propagation equation for the cavity probabilities are expressed as @xcite    [ eq : bpmodele ] @xmath231         \\prod\\limits_{k^\\prime \\in c(j)\\backslash k } \\bigl[e^{-\\beta } + ( 1-e^{-\\beta } )           \\sum\\limits_{h_{k^\\prime } = 0}^{h_j } q_{k^\\prime \\rightarrow j}^{h_{k^\\prime } }           \\bigr ] \\ ; ,        \\label{eq : bpmodele : a } \\\\        q_{j \\rightarrow i}^{h_j } & =   \\frac{1}{z_{j\\rightarrow i } }        \\prod\\limits_{i^\\prime \\in p(j)\\backslash i } \\bigl [          e^{- \\beta } + ( 1- e^{- \\beta } ) \\sum\\limits_{h_{i^\\prime}= h_j+1}^{d-1 }          q_{i^\\prime \\rightarrow j}^{h_{i^\\prime } } \\bigr ]   \\prod\\limits_{k \\in c(j ) }        \\bigl[e^{- \\beta}+(1-e^{-\\beta})\\sum\\limits_{h_k = 0}^{h_j }          q_{k \\rightarrow j}^{h_k }          \\bigr ] \\ ; , \\label{eq : bpmodele : b }      \\end{aligned}\\ ] ]    where node @xmath18 in eq .",
    "( [ eq : bpmodele : a ] ) belongs to set @xmath153 and node @xmath13 in eq .",
    "( [ eq : bpmodele : b ] ) belongs to set @xmath52 ; @xmath232 and @xmath233 are two probability normalization constants . notice that eq .",
    "( [ eq : bpmodele ] ) is equivalent to eq .",
    "( [ eq : bp ] ) of the main text .      at a given value of the inverse temperature @xmath37",
    ", we can compute the mean fraction of feedback arcs as @xmath234 the total free energy of model - e , defined by @xmath235 , can be expressed as @xcite @xmath236 where @xmath193 and @xmath237 are , respectively , the node and arc contribution to the free energy :    [ eq : fvandarc ] @xmath238",
    "\\prod\\limits_{k \\in c(j ) }        \\bigl[1-(1-e^{-\\beta } ) \\sum\\limits_{h_k = h_j}^{d-1 }   q_{k \\rightarrow j}^{h_k }          \\bigr ] \\biggr\\ } \\ ; ,         \\\\",
    "f_{k l } & = -\\frac{1}{\\beta } \\ln \\biggl\\ { 1- ( 1 - e^{-\\beta } )      \\sum\\limits_{h_k = 0}^{d-1 } \\sum\\limits_{h_l = h_k}^{d-1 } q_{k\\rightarrow l}^{h_k }      q_{l\\rightarrow k}^{h_l } \\biggr\\ } \\ ; .",
    "\\end{aligned}\\ ] ]    to understand eq .",
    "( [ eq : fmodele ] ) in an intuitive way , we notice that the free energy contribution @xmath193 of each node @xmath15 includes the contributions from all the attached outgoing and incoming arcs , therefore the contribution of an arc @xmath17 is considered twice ( in @xmath193 and @xmath239 ) ; such an over - counting is corrected by the second summation of eq .",
    "( [ eq : fmodele ] ) .",
    "the free energy density is simply @xmath240 . and the entropy density @xmath241 at a given value of @xmath37",
    "is then evaluated as @xmath242 \\ ; , \\ ] ] where @xmath243 is the arc density .",
    "equation ( [ eq : entropye ] ) is justified by the fact that @xmath244 .",
    "the rs mean - field theory can be applied on single instances of directed networks .",
    "given a directed network @xmath7 , we first iterate the bp equation ( [ eq : bpmodele ] ) on all the directed arcs a number @xmath245 ( e.g. , @xmath246 ) of times to reach a fixed point or to bring the set of all the cavity probability distributions @xmath247 close to a steady state",
    ". then we repeat the bp iteration an additional number @xmath248 ( e.g. , @xmath249 ) of times , at each time step we compute all the node free energy contributions @xmath193 , all the arc free energy contributions @xmath237 and probabilities @xmath57 to evaluate the values of @xmath250 , @xmath251 and @xmath241 .",
    "the averaged results of @xmath250 , @xmath251 , and @xmath241 over these @xmath248 iterations are then reported as the free energy density , the mean fraction of feedback arcs , and the entropy density , respectively .",
    "some bp simulation results obtained on erds - rnyi ( er ) random directed networks of arc density @xmath81 are shown fig .",
    "[ fig : fas_er_bp ] .    we can also obtain ensemble - averaged results for random directed networks which have no any correlation in the connectivity pattern . for such networks ,",
    "let us denote by @xmath252 the joint probability that a randomly chosen node has @xmath253 incoming arcs and @xmath254 outgoing arcs .",
    "we construct two large sets @xmath255 and @xmath256 , with @xmath255 storing many ( e.g. , @xmath257 ) cavity probability distributions @xmath227 and @xmath256 storing many cavity probability distributions @xmath228 for different arcs @xmath20 .",
    "we then update these two sets a large number of times ( e.g. , @xmath258 ) to drive these two sets to a steady state and to evaluate the ensemble - averaged values of the thermodynamic quantities . at each updating process , two non - negative integers @xmath253 and @xmath254",
    "are drawn from the joint distribution @xmath252 and assigned to a node ( say @xmath15 ) as its in - degree and out - degree , respectively .",
    "the @xmath253 cavity probability distributions @xmath227 from the incoming arcs @xmath20 are then drawn from the set @xmath255 uniformly at random and with replacement ; similarly the @xmath254 cavity probability distributions @xmath259 from the outgoing arcs @xmath17 are drawn from the set @xmath256 uniformly at random and with replacement .",
    "then @xmath253 new cavity probability distributions @xmath228 and @xmath254 new cavity probability distributions @xmath260 are computed according to eq .",
    "( [ eq : bpmodele ] ) , and they replace @xmath253 randomly chosen elements of set @xmath256 and @xmath254 randomly chosen elements of set @xmath255 , respectively .",
    "the values of @xmath261 ( for node @xmath15 ) and @xmath262 and @xmath263 and @xmath183 and @xmath42 for all the attached arcs of node @xmath15 are computed during this process .    as demonstrated in fig .",
    "[ fig : fas_er_bp ] , the results obtained by this rs population dynamics simulation are in complete agreement with the bp results obtained on single network instances .",
    "we have implemented two versions of the bpd algorithm based on the strongly constrained model - r ( appendix  [ sec : appmodelr ] ) and on the relaxed model - e ( appendix  [ sec : appmodele ] ) , respectively .",
    "these two versions of the bpd algorithm have the same algorithmic design and the same overall structure except for the differences in the adopted bp equations . here",
    "we describe some technical details of the algorithm .    given an input directed network @xmath7 , we first simplify it by recursively removing all the nodes which have no outgoing or incoming arcs .",
    "the arcs attached to these removed nodes are also deleted from the network .",
    "then every node in the remaining subnetwork must have both incoming and outgoing arcs .",
    "the bpd search process is then applied on this subnetwork .",
    "starting from an initially empty feedback arc set @xmath39 , in each decimation step of the bpd algorithm : ( 1 ) the bp equation is iterated on all the remaining arcs of the network @xmath7 for a number @xmath264 of times ( e.g. , @xmath265 ) ; ( 2 ) then the probability @xmath42 for each remaining arc @xmath20 to be a feedback arc is estimated based on the rs mean - field formula ; ( 3 ) then a tiny fraction @xmath266 of the remaining arcs ( e.g. , @xmath267 or @xmath268 ) which have the largest estimated feedback probabilities are deleted from the network and are added to the set @xmath39 ; ( 4 ) then the network is further simplified by recursively deleting all the nodes which have no outgoing arc or have no incoming arc .    when there is no directed cycle in the remaining network , the bpd process will terminate .",
    "then we check every arc @xmath20 in the set @xmath39 in a random order and delete it from @xmath39 if and only if the reduced set @xmath39 is still a feedback arc set .",
    "the final set @xmath39 is then reported .    for random directed networks",
    ", our empirical results suggest that the bpd algorithm based on the relaxed model - e is much faster and also achieves slightly better solutions when compared with the bpd algorithm based on the strongly restricted model - r .",
    "to perform simulated annealing on an input directed network @xmath7 , we need to initialize the node permutation @xmath269 in a proper way . for this purpose , we first find all the strongly connected components ( sccs ) of this network ; and then we construct an initial node permutation @xmath64 in the following iterative way : ( 1 ) randomly choose a scc which receives no incoming arcs from other sccs ( there must be at least one such scc ) ; ( 2 ) put the nodes of this scc to the not - yet occupied top positions of @xmath64 in a random order ; ( 3 ) then delete this scc and all its outgoing arcs to other sccs ; ( 4 ) repeat the preceding three steps on another remaining scc as long as the directed graph is not yet empty .",
    "we illustrate in fig .",
    "[ fig : sa ] the two basic updating rules of the sa algorithm , which were inspired by the earlier work of @xcite .",
    "this figure complements the descriptions in the main text . in our actual implementation of the sa algorithm , to select a feedback arc most efficiently for the action shown in fig .",
    "[ fig : sa](b ) , we store all the feeback arcs in different lists : the feedback arcs @xmath20 whose associated energy changes @xmath270 are all stored in the list @xmath271 ; the feedback arcs @xmath20 whose associated energy changes @xmath272 ( @xmath273 ) are all stored in the list @xmath274 . to perform the updating shown in fig .",
    "[ fig : sa](b ) , we first choose an integer value @xmath275 according to the probability @xmath276 where @xmath277 denotes the length of the list @xmath274 ; then we choose an arc @xmath225 in the list @xmath274 uniformly at random and move node @xmath13 to be immediately above node @xmath15 in the permutation @xmath64 .",
    "similarly , to speed up the downward updating shown in fig .",
    "[ fig : sa](c ) , we also store all the feedback arcs in another set of lists : the feedback arcs @xmath20 whose associated energy changes @xmath278 are all stored in the list @xmath279 ; the feedback arcs @xmath20 whose associated energy changes @xmath280 ( @xmath273 ) are all stored in the list @xmath281 . an downward updating is achieved in two steps : first , an integer value @xmath275 is chosen according to the probability @xmath282 where @xmath283 denotes the length of the list @xmath281 ; second , an arc @xmath20 in the list @xmath281 is randomly chosen and node @xmath15 is moved to be immediately below node @xmath13 in the permutation @xmath64 .     changing the vertical positions of the nodes by simulated annealing to reduce the number of feedback ( upward ) arcs . in this example , node @xmath13 has two outgoing arcs @xmath225 and @xmath284 and one incoming arc @xmath285 , while node @xmath15 has two outgoing arcs @xmath17 and @xmath286 and two incoming arcs @xmath225 and @xmath287 .",
    "( a ) the node order before updating ( only the nodes @xmath13 , @xmath15 and their incoming and outgoing neighbors are shown here for clarity ) .",
    "( b ) node @xmath13 is moved to the position immediately above node @xmath15 ; the change in the number of feedback arcs is @xmath288 , since now @xmath20 and @xmath289 both become feedforward ( downward ) arcs and @xmath290 changes to be a feedback arc .",
    "( c ) node @xmath15 is moved to the position immediately below node @xmath13 ; the change in the number of feedback arcs is @xmath291 , since now @xmath20 and @xmath292 change to be feedforward arcs and @xmath17 and @xmath293 change to be feedback arcs . ,",
    "scaledwidth=45.0% ]    notice that , after each elementary updating of the node order , the lists @xmath271 , @xmath294 , @xmath295 , @xmath279 , @xmath296 , @xmath295 should be updated if necessary .",
    "these can be done very efficiently , since only the attached incoming and outgoing arcs of the nodes @xmath13 and @xmath15 of the chosen arc @xmath20 need to be considered .",
    "at each inverse temperature @xmath37 , a total number of @xmath297 elementary updates are carried out , with one half of them being the upward movements shown in fig .",
    "[ fig : sa](b ) and the other half being the downward movements shown in fig .",
    "[ fig : sa](c ) .",
    "the parameter @xmath298 is chosen in the range @xmath299 $ ] ( the default value is @xmath73 ) .",
    "larger values of @xmath298 usually lead to slightly improved solutions , but the simulation times are longer .",
    "the inverse temperature @xmath37 then increases by a factor of @xmath300 ( @xmath301 is set to be @xmath302 in the present work ) after @xmath297 elementary updates have been carried out .",
    "if at @xmath303 consecutive values of @xmath37 ( with @xmath304 ) the sa search process fails to find a node permutation whose corresponding number of feedback ( upward ) arcs is smaller than that of any previously visited node permutation , the search is then terminated and the best solution reached during the whole sa process is reported .",
    "we generate directed random networks following conventional methods in the literature .    to generate a directed random erds - rnyi ( er ) network @xmath7 , we start from an empty network containing @xmath8 nodes and then add arcs to the network one by one until the total number of added arcs reaches the specified value @xmath9 . the two end nodes @xmath13 and @xmath15 of each candidate arc @xmath20 are chosen uniformly at random from the @xmath8 nodes , and this candidate arc is accepted if it has yet been added to the network and @xmath305 .    on the other hand , to generate a directed regular random ( rr ) network of arc density @xmath243 , we first assign to each node @xmath306 half - edges ( @xmath307 must be an integer ) , and then repeat the process of glueing two randomly chosen half - edges into a complete edge between two nodes and then assigning a random direction to this edge ( self - connections and multiple arcs between the same pair of nodes are not allowed ) .    to generate a directed random scale - free network according to the configurational model ( i.e. , a sfc network ) ,",
    "we first assign to each node @xmath13 @xmath78 incoming half - arcs and @xmath79 outgoing half - arcs , with @xmath78 and @xmath79 being independent random integers generated according to the in - degree power - law distribution @xmath308 and out - degree power - law distribution @xmath309 , respectively .",
    "the expressions for these two degree distributions are    @xmath310    where @xmath311 is the in - degree decay exponent and @xmath312 is the out - degree decay exponent ; the parameter @xmath313 is the minimum value of degree , and @xmath314 is the maximum value of degree .",
    "we set @xmath315 and @xmath316 in this study .",
    "after the in- and out - degree for each node are assigned , if the sum @xmath317 is larger ( respectively , smaller ) than the sum @xmath318 , we then change @xmath319 randomly chosen incoming ( respectively , outgoing ) half - arcs into outgoing ( respectively , incoming ) half - arcs to make @xmath320 .",
    "finally we repeat the process of glueing one randomly chosen outgoing half - arc with one randomly chosen incoming half - arc to form a complete arc ( self - connections and multiple arcs between the same pair of nodes are not allowed ) .    to generate a directed random scale - free network according to the static model ( i.e. , a sfs network @xcite ) , we proceed as follows : ( 1 ) randomly permute the @xmath8 nodes and then assign the @xmath264-th node ( say node @xmath13 ) in this permutation the weight @xmath321 ; ( 2 ) repeatedly add an incoming half - arc to the network and attach it to a node @xmath13 with probability proportional to its assigned weight @xmath322 ; ( 3 ) randomly permute the @xmath8 nodes again and then assign the @xmath264-th node ( say node @xmath70 ) in this new permutation the weight @xmath323;(4 ) repeatedly add an outgoing half - arc to the network and attach it to a node @xmath15 with probability proportional to its assigned weight @xmath324 ; ( 5 ) repeatedly glueing one randomly chosen outgoing half - arc with a randomly chosen incoming half - arc to form a full arc ( self - connections and multiple arcs between the same pair of nodes are not allowed ) .",
    "after this directed network is generated , the probability that a randomly chosen node to have @xmath307 incoming arcs is @xmath325 for large values of @xmath307 , and the probability that a randomly chosen node to have @xmath307 outgoing arcs is @xmath326 for large values of @xmath307 @xcite .",
    "let us denote by @xmath327 a strongly connected component of a network @xmath7 and assume that this component has @xmath328 nodes . to visualize this strongly connected component",
    ", we need to specify for each node a two - dimensional coordinate @xmath329 .",
    "our recipe for this task proceeds as follows :    1 .",
    "run the sa algorithm or the bpd algorithm on @xmath327 to obtain a near - minimum feedback arc set @xmath39 .",
    "2 .   then construct a node hierarchy based on set @xmath39 according to the simple procedure of appendix  [ sec : appmap ] ; set the @xmath330-coordinate @xmath331 of each node @xmath13 to be identical to its hierarchical level @xmath63 .",
    "3 .   then randomly permute the @xmath328 nodes and assign the @xmath264-th node ( say @xmath13 ) in this permutation the @xmath332-coordinate @xmath333 .",
    "4 .   then try to exchange the @xmath332-coordinates of the @xmath328 nodes to minimize the total `` connection cost '' @xmath334 defined by @xmath335 we can simply use simulated annealing to minimize this connection cost : in each elementary updating step , a proposal is made to exchange the @xmath332-coordinates of two nodes ; if the change in the connection cost @xmath336 is zero or negative , this proposal is accepted , otherwise it is accepted with probability @xmath337 , with the parameter @xmath338 ( the `` temperature '' ) being a slowly decreasing quantity .",
    "after a near - minimum @xmath332-coordinate solution has been obtained for the connection cost @xmath339 , then draw the nodes and arcs of the strongly connected component @xmath327 according to the determined @xmath329 coordinates of all the @xmath328 nodes .    the motivation for us to minimize the connection cost ( [ eq : cost ] ) is simple : we want to make the densely connected nodes to form clusters along the horizontal ( @xmath332 ) direction , so that possible community structures with the strongly connected network component can be clearly visualized , besides the hierarchical structure along the vertical ( @xmath330 ) direction .",
    "figure  [ fig : florida ] of the main text was drawn by the above - mentioned method .",
    "notice that our method can also be applied on the whole directed network @xmath7 : we can first work on the individual strongly connected components and then combine all these components to form a two - dimensional plot for the whole directed network ."
  ],
  "abstract_text": [
    "<S> directed networks such as gene regulation networks and neural networks are connected by arcs ( directed links ) . </S>",
    "<S> the nodes in a directed network are often strongly interwound by a huge number of directed cycles , which lead to complex information - processing dynamics in the network and make it highly challenging to infer the intrinsic direction of information flow . in this theoretical paper , based on the principle of minimum - feedback </S>",
    "<S> , we explore the node hierarchy of directed networks and distinguish feedforward and feedback arcs . </S>",
    "<S> nearly optimal node hierarchy solutions , which minimize the number of feedback arcs from lower - level nodes to higher - level nodes , are constructed by belief - propagation and simulated - annealing methods . for real - world networks , we quantify the extent of feedback scarcity by comparison with the ensemble of direction - randomized networks and identify the most important feedback arcs . </S>",
    "<S> our methods are also useful for visualizing directed networks . </S>"
  ]
}
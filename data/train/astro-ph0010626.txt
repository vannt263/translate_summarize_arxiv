{
  "article_text": [
    "many problems in the numerical simulation of hydrodynamic flows require the use of a high grid resolution in order to describe the evolution of the system properly . in turn",
    ", the use of large numerical grids implies high computational costs in terms of both , memory and cpu time .",
    "however , in many cases the most important flow features occupy only a small fraction of the computational domain .",
    "those structures are usually flow discontinuities like shock waves or contact surfaces .",
    "the addition of physical processes may lead to the formation of qualitatively new features which , similarly to flow discontinuities , can occupy only a small fraction of the total volume . a proper description of the additional physics may also require a resolution of time scales which might be much smaller than the hydrodynamic time scale .    for some problems it is resolution in mass rather than in space or time which determines the quality of a numerical solution",
    ". here methods exploiting the lagrangian rather than eulerian description of the flow might be more suitable",
    ". however , the lagrangian approach encounters severe difficulties in multidimensional problems due to large grid distortions typical for shearing flows .",
    "sophisticated grid rezoning algorithms @xcite did not gain much popularity except perhaps for one - dimensional problems @xcite .",
    "alternatively , the notion of a grid might be avoided completely leading to a meshless code .",
    "the smoothed particle hydrodynamics method @xcite is a practical example of the realization of this idea . in passing we",
    "note , that in case of discontinuous flows with shocks the use of artificial viscosity prevents the sph method from reproducing the quality of the solutions obtained with modern shock - capturing advection schemes implemented in the majority of eulerian codes @xcite .",
    "one may also consider a cartesian method in which the grid zones are consecutively refined to increase the resolution where it is desired from the point of view of numerical accuracy . in this approach",
    "the grid refinement is done on the basis of single cells resulting in a grid which usually has to be described using a complicated data structure @xcite .",
    "when only one isolated region of the volume has to be refined , an approach with fully nested grids of increased resolution , similar to multigrid methods with local refinements for elliptic @xcite or parabolic problems @xcite , might be used @xcite .    in  we",
    "adopt a block - structured approach to grid refinement in which the refined grid cells are clustered together to form larger rectangular regions , or mesh patches , overlying parent level grids .",
    "the refinement process is recursively applied to newly created fine mesh patches in order to increase the resolution even further . in this way",
    ", the final data structure can be seen as a hierarchy of mesh patches ( fig .",
    "[ f : grids ] )    located at different levels and integrated with individual time steps .",
    "each single mesh patch has a logical structure identical to the original numerical grid .",
    "this scheme is commonly called adaptive mesh refinement , amr , and has been originally proposed by berger and her collaborators @xcite .",
    "in our description of  we will give an overview of the three basic components of the code : the library of amr modules which orchestrates the execution of the code , the user interface which serves as a problem independent communication tool between the amr driver and the third component of the code  the partial differential equations solver ( fig .",
    "[ f : flow ] ) .    we will also briefly describe the way in which physical processes are included in our code  those which have strictly local character ( radiative losses and nuclear burning ) and those which couple different regions of the computational domain ( self - gravity and thermal diffusion , photoionization ) .",
    "we will conclude our description with comments on code implementation and code performance on shared memory parallel machines .",
    "our implementation of the amr algorithm in  closely follows the description given by berger and colella @xcite .",
    "the code is written in standard fortran  77  and runs on several different architectures without any modifications .",
    "portability across different platforms is achieved by defining a set of architecture dependent unix preprocessor directives .",
    "compiler options are automatically set by a configuration script written in unix bourne shell , and passed down to the compiler system .",
    "offers the possibility to couple existing partial differential equation solvers via a user interface to the amr modules and its design is not limited to problems specific for hydrodynamics .",
    "all solvers are supplemented with procedures which handle the communication with the amr driver ( user interfaces ) and a set of subroutines defining initial conditions for a variety of problems .",
    "the role of the amr driver ( module in fig .",
    "[ f : flow ] ) is to initialize and adapt the grid structure during the simulation and to synchronize the integration process . at the beginning of the run",
    "the user has to specify the ( maximum ) number of grid levels and patches for the current run . since fortran  77",
    "does not allow for dynamic memory allocation , ultimate upper limits for the number of levels and patches are defined during the configuration step . in practice",
    "both limits are imposed by the available system memory .",
    "the user also has to define the number of buffer zones ( zones with open circles in fig .",
    "[ f : flags ] )    to be added around any zone flagged for refinement ( zones with crosses in fig .",
    "[ f : flags ] ) , the minimum filling factor ( fraction of flagged zones ) of newly created boxes which become patches the zones inside the boxes are assigned data .",
    "in addition the user has to specify the order of the conservative multidimensional interpolation of the state variables at the patch boundaries and from parent patches to the interiors of boxes created during the adaption step ( see sect .",
    "[ s : adapt ] ) .",
    "first , second and third order accurate interpolation can be used .",
    "the dimensionality of the problem and the type of geometry are defined next",
    ".  handles three basic types of coordinate systems ( cartesian , cylindrical , and spherical ) in one , two and three dimensions .",
    "the frequency at which the grid adaption procedure is to be used is given as a multiple number of parent level steps .",
    "if this parameter is set to zero the hierarchy of levels will remain static after its initial creation .",
    "the mesh refinement ratios are specified for each grid level and for each spatial dimension separately .",
    "refinement ratios might be different in every coordinate direction , can take arbitrary integer values greater than zero , and must remain constant during the whole run .",
    "additional temporal refinement can be specified separately for each level . in this case",
    "the integrator subcycles over the nominal time step .",
    "finally , the order of the spatial accuracy of the solver ( or type of the solver ) can also be specified separately for each level .",
    "execution of the code begins with the initialization of various counters and system dependent constants followed by opening files describing actual control parameters of the simulation .",
    "immediately after reading input parameters , the code checks for their consistency with the code configuration ( e.g. , internal dimensioning of arrays ) .",
    "next the initial hierarchy of levels is created starting from the base level until the maximum number of levels is reached or when all of the refinement criteria are fulfilled .",
    "the initial model is printed out and the execution enters the main integration loop .    during a time step , grid levels are integrated recursively ( module in fig .",
    "[ f : flow ] ) in a way which resembles a v - cycle of a multigrid solver .",
    "the execution sequence is presented in fig .",
    "[ f : cycle ] .",
    "starting at the base level the equations are integrated for a full time step ( modules , , and in fig .",
    "[ f : flow ] ) . on fine levels",
    "the solution is advanced for a single step ( if there are still finer levels ) or for a number of steps necessary to reach the evolutionary time of the parent level .",
    "the sequence of operations during integration of a single patch is as follows : just prior to a patch integration its current state is saved in order to preserve the data required for the temporal interpolation of the state on the child patches at their fine - coarse boundaries ( see sect .",
    "[ s : adapt ] ) . also , the source terms and the boundary fluxes to be summed over a time step ( see below ) are initialized .",
    "the latter operation is necessary only at the boundaries with child patches and , therefore , it is not required for patches located on the finest level .",
    "next boundary data is provided for each patch , and patches are integrated until the time of the parent level is reached .",
    "after integration of the patch is completed , fluxes are fixed up ( `` f '' operator in fig .  [",
    "f : cycle ] ) .",
    "the fixup step is necessary to account for the difference between the flow across the boundary between the child patch and the corresponding zone interface of the parent patch ( fine - coarse boundary in fig .",
    "[ f : bounds ] ) .",
    "this is to ensure global conservation of the advection process ( see @xcite for details ) .",
    "finally , the solution obtained on a fine patch is projected up to its parent patches . if desired , an adaption step ( `` a '' operator in fig .",
    "[ f : cycle ] ) can follow .",
    "the above procedure is repeated until the finest level is advanced to the time of the base level , i.e. until all grid levels are synchronized .",
    "the size for the next time step is calculated as follows .",
    "firstly , the limiting time step is computed for each level by taking the global minimum over all patches located on that level .",
    "next , these level - dependent time steps are appropriately scaled to account for the change in spatial resolution between levels .",
    "the time step is then given by the minimum of these scaled level - dependent time steps .",
    "eventually code execution is terminated with a call to subroutine ( see fig .  [",
    "f : flow ] ) which prints statistics about the cpu time used by different parts of the code , the number of zones evolved on each level and the estimated speedup .",
    "it also dumps a restart file and ensures proper closing of output files opened during run .",
    "the execution of  can be modified during runtime using `` messages '' which are read from file",
    ". a single line of this file contains blank - separated three character strings : , and .",
    "here is a unique string of characters recognized by the code ( command ) and the single character can be ( command is activated ) or ( command is deactivated ) .",
    "commands allow to observe the current code progress tracing most important ( integration , adaption ) subroutine calls , dumping restart or checkpoint ( with an only partially synchronized state between levels ) files , and stopping ( after full time step ) or smoothly terminating ( after level integration ) code execution .",
    "independently of the above mechanism , minimal images of the code memory ( required for restart ) are written in predefined intervals of wall - clock time throughout code execution .",
    "the creation of patches comprises four independent stages ( module in fig .",
    "[ f : flow ] ) :    flagging : : :    identification of regions on the current ( coarse ) level which need to    be resolved at higher resolution ( fine level ) ; clustering : : :    definition of boxes in a way that their set completely covers all    regions identified in the previous stage ; optimization : : :    merging or splitting of boxes aimed at obtaining better code    performance ; data assignment : : :    filling the boxes obtained in the optimization step with necessary    data .",
    "[ [ s : flag ] ] flagging for refinement + + + + + + + + + + + + + + + + + + + + + + +    offers three independent ways to identify ( flag ) regions which have to be refined .",
    "an estimate of the local truncation error of the solver can be obtained by comparing solutions obtained at the nominal and at a twofold lower resolution ( for which the data is obtained by taking an appropriate average over the state on the original patch ) after evolving both states for two nominal time steps @xcite .",
    "zones are flagged for refinement once the estimate obtained that way exceeds a certain threshold , .",
    "no truncation error can be estimated when one of the refinement ratios is odd .",
    "a much simpler method of `` error forecasting '' ( which is also much cheaper since it does not require additional calls to the solver ) is based on the local relative change of the values of selected quantities ( e.g. , the gas density or the pressure ) .",
    "the justification for this approach relies on the observation that most of the local variation of the function is contained in its first derivative ( first order term in taylor expansion ) .",
    "one can modify this approach by introducing additional resolution - dependent scaling @xcite .",
    "since a small value of the second derivative does not guarantee that the gradient is small , for solvers based on higher order schemes one may supplement ( rather than replace ) the above procedure by introducing non - dimensional error indicators based on the first and second spatial derivatives of the state variables @xcite . finally ,  allows for direct modification of error flags by the user through the user interface ( see sect .  [",
    "s : ui ] ) .",
    "the mesh generation algorithm uses integer flags which are set by the flagging module .",
    "buffer zones are added around regions flagged for refinement in order to prevent discontinuities from escaping from fine patches during the following integration process ( zones with open circles in fig .",
    "[ f : flags ] ) .",
    "in addition , regions which separate flagged or buffer zones and which are smaller than half the buffer length are also marked for refinement ( zone with a filled circle in fig .",
    "[ f : flags ] ) . finally , proper nesting is ensured by flagging zones in the regions occupied by patches on the next but one finer level .",
    "we note that the use of integer instead of logical flags is necessary to distinguish `` error '' and `` buffer '' regions in those cases where the continuity of the grid hierarchy is essential ( e.g. , when using periodic boundary conditions ) .    [ [ s : cluster ] ] clustering + + + + + + + + + +    the clustering procedure returns a set of boxes ( i.e. , unfilled patches ) identified by the positions of their corners in physical space ( rectangles drawn with thick lines in fig .  [ f : flags ] ) .",
    "the complete set of boxes totally covers the flagged zones subject to two constraints : 1 ) the ratio of flagged to total box volume ( box efficiency ) must not be smaller than some specified threshold ( e.g. , 60% ) ; 2 ) the set needs to be completely embedded in coarse patches .",
    "an initial distribution of boxes is created either by using a simple method of bisection @xcite or with a more advanced point clustering algorithm @xcite .",
    "for the example shown in fig .",
    "[ f : flags ] two boxes are created by the clustering procedure , because the filling factor of the single rectangle embodying all flagged zones and buffer zones ( 63/120 ) is too small , if a filling factor larger than 60% is required .",
    "[ [ s : optim ] ] optimization of grid hierarchy + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the distribution of boxes resulting from the clustering stage can be optimized by an optional merging / splitting step ( this step may create partially overlapping sibling patches ) .",
    "this additional optimization is aimed at reducing the overall execution time and exploits information about the current computer architecture ( see sect .  [",
    "s : parallel ] ) and the instantaneous ( i.e. , for the present hierarchy of grids ) amr overhead due to the inter - grid - level operations .",
    "[ [ s : dassign ] ] data assignment + + + + + + + + + + + + + + +    during the final stage of the adaption step , free memory entries are identified and reserved for new patches .",
    "existing patches may eventually be shifted up or down in the running patch index space in order to keep the memory contiguously filled .",
    "the geometry of new patches is defined by the geometry of the boxes which were created during the clustering step and the relationships between patches and their neighbours and parents are determined .",
    "the initial state for the patch interior is provided by a simple copy operation of existing fine data , or by conservative interpolation from parent patches .",
    "boundary ( ghost ) zones can be tagged as external ( located outside the computational domain ) , fine - fine ( overlapped by the interior zones of a sibling patch ) , or fine - coarse ( overlapped by the interior of a coarse , not necessarily parent , patch ) .",
    "these three types of boundary zones are depicted in fig .",
    "[ f : bounds ] .",
    "data for ghost zones tagged as fine - coarse is obtained by conservative interpolation @xcite .",
    "notice that the boundary type is characteristic of the individual ghost zone as it may change along the patch boundary ( see upper boundary of the lower right mesh located on the second level in fig .",
    "[ f : bounds ] ) .",
    "since  is exclusively written in fortran  77  the data structure is static in nature , with the maximum number of patches and their sizes being determined during the compilation step .",
    "it has to be noted , that the static memory assignment used in  does not necessarily imply a severe waste of memory since the clustering procedure guarantees that patches are always densely filled with flagged zones ( see sect .",
    "[ s : adapt ] ) .    the data structure of  consists of three different parts : the main data block used for storing the hydrodynamic state and the source terms , a set of pointers describing the grid structure , and an additional workspace used by  for mesh generation .",
    "the hydrodynamic state and the source terms are kept in two 5-dimensional arrays : and .",
    "the triple of indices ( ) corresponds to the spatial location of the zone within the patch , ( ) denotes state variables ( source terms ) , and is the patch index .",
    "there are two additional 5-d arrays which contain the solution and sources obtained at the previous time step . if necessary , these can be used for temporal interpolation of boundary data or extrapolation of source terms .    for each corner of each patch",
    "a pointer is used for the inter - patch communication .",
    "the value of the pointer identifies the zone on the sibling or parent patch overlapping the corner zone .",
    "each patch has additional attributes like the level on which the patch is located , the number of parent and child patches , and a set of pointers to the parents and offsprings .",
    "grid levels have attributes , too .",
    "they are required for performing global operations on patches , levels , or the whole domain .",
    "the attributes are the number of mesh patches occupying the level and a pointer to the last patch on the given level .",
    "finally , since the code provides an option for mesh flagging with the truncation error estimation procedure ,  uses temporary work storage to preserve the original state of the patch for which the truncation error is currently estimated .    in other fortran",
    "77  implementations of amr a memory buffer is allocated with a size equal to the maximum memory partition available on a specific system .",
    "this approach has been used by quirk @xcite and berger and leveque @xcite in . however , using a memory buffer , i.e. a linear address space , adds a certain complexity to the code since each access to a specific portion of the data has to be calculated explicitly . in the approach adopted by macneice @xcite in  ( which provides amr functionality also for the  code @xcite ) and by ziegler in @xcite patches are of a fixed size in each coordinate direction ( 8 zones in case of  and 4 zones in ) .",
    "small patch sizes have the advantage of making the adaption process very flexible and effective ( patches are always densely filled with flagged zones ) but are disadvantageous when higher order schemes , which require long stencils , are used . in this case",
    ", the number of ghost zones might become comparable to the number of active zones.% ( ) or @xmath0% ( ) of the allocated memory would be effectively used by the solver .",
    "] on the other hand , a patch of small size requires larger amount of operations at its boundaries relative to the integration of the equations . finally , fine grained computations diminish code performance especially on machines with vector architecture ( see sect .  [",
    "s : parallel ] ) .",
    "the usage of computer memory by  is defined at the level of patch creation .",
    "table  [ t : mscaling ]    lrrr|lrrr & + patch size & & & memory & patch size & & & memory + & & & [ mbytes ] & & & & [ mbytes ] + @xmath1 & 1 & 1 & 3 & @xmath2 & 1 & 1 & 3 + @xmath1 & 1 & 100 & 109 & @xmath2 & 1 & 100 & 105 + @xmath1 & 2 & 100 & 124 & @xmath2 & 2 & 100 & 118 + @xmath1 & 1 & 1000 & 1091 & @xmath2 & 1 & 1000 & 1037 + @xmath1 & 2 & 1000 & 1355 & @xmath2 & 2 & 1000 & 1296 + @xmath1 & 10 & 1000 & 1355 & @xmath2 & 10 & 1000 & 1296 + @xmath3 & 10 & 100 & 425 & @xmath4 & 1 & 100 & 335 + @xmath3 & 10 & 500 & 2117 & @xmath4 & 2 & 100 & 381 + @xmath3 & 10 & 1000 & 4308 & @xmath4 & 10 & 100 & 381 + & & & & @xmath4 & 10 & 500 & 1902 + & & & & @xmath4 & 10 & 1000 & 3879 +    presents the actual memory required by  for different maximum number of levels ( ) and patches ( ) in two and three dimensions .",
    "it can be seen that the memory usage scales almost linearly with the number of patches , and that it does not depend on the number of levels ; neither does the linear dependence of memory size on the number of patches change with patch size . comparing memory use for single level ( non - amr ) and two - level ( with the support for amr compiled in ) configurations we estimate that the memory overhead caused by amr varies between @xmath5% ( for @xmath6 ) to about @xmath7% ( @xmath8 ) .",
    "the design of the user interface is crucial for the ease with which a new problem can be set up .",
    "the number of places which have to be modified for a new problem should be minimized and all portions of the code independent of the problem have to be well separated . the amr data structure , the grid generator , the interpolation of boundary data , and the recursive process of integration , are all handled by the amr modules .",
    "these and the major part of the user interface do not need to be modified for a new problem .",
    "the user interface consists of several subroutines which allow for proper communication and data flow between the amr modules and the partial differential equations ( pde ) solver .",
    "the primary role of the user interface is to perform the necessary data copy operations from and to amr data storage ( modules and in fig .",
    "[ f : flow ] ) and to provide external boundary conditions .",
    "the user interface contains fully implemented reflecting , transmitting , and periodic boundary conditions for the hydrodynamic state , and boundary conditions for the gravitational potential . also , the user interface is responsible for keeping a record of numerical fluxes calculated by the solver , which are stored in flux counters and used later during flux fixup step ( modules and in fig .",
    "[ f : flow ] ) .",
    "in addition , the user interface contains a subroutine which allows for a direct modification of the flags used during the adaption step ( see sect .  [",
    "s : adapt ] ) .",
    "the extent of the base level can also be modified by adding or removing patches provided that the state on all levels is synchronized in time .",
    "special care must be paid to save all problem dependent quantities which have to be restored upon restart .",
    "it is also possible to replace any standard output routine provided with  to create customized output .",
    "several standard equations of state can be selected during the configuration step : ideal or isothermal gas , a fully ionized plasma of arbitrary chemical composition , a mixture of boltzmann gases with radiation , or a nuclear equation of state .",
    "although  can be used for any numerical problem which requires discretization of the underlying equations , so far it has been used only for the solution of hyperbolic partial differential equations ( pde ) specific for hydrodynamics and in application to astrophysical problems .",
    "the current version of  includes two implementations of the ppm method @xcite , the  @xcite and  @xcite codes , the special relativistic solver  @xcite and its modern version  @xcite .",
    "the pde solver ( module in fig .",
    "[ f : flow ] ) is a workhorse for , and much effort has been put into linking existing user codes to the amr part as easy as possible .",
    "usually , the adaption of a new solver begins with the removal of unnecessary output operations which are completely handled by amr modules or the user interface .",
    "problem dependent modules have to be separated and , if necessary , any custom or defined boundary condition have to be moved to the user interface . the existing main program has to be converted into a stand - alone subroutine which has to solve the evolutionary equations for a single time step and to return the boundary fluxes . finally , care has to be taken as to remove any assumed dependencies between zone numbering and their physical coordinates .",
    "the  solver is based on , a multidimensional implementation of the direct eulerian piecewise parabolic method of colella and woodward @xcite , originally developed by fryxell , mller and arnett @xcite . with respect to ,",
    "differs in details of the calculation of the effective states , the solution of the riemann problem , the dissipation mechanisms ( flattening and artificial viscosity modules ) , conservative angular momentum transport , and adaption to a rotating frame of reference with conservative treatment of the coriolis force @xcite .",
    "a more substantial modification is the inclusion of the cma method @xcite for multifluid advection .",
    "the physics already included in ( self - gravity , nuclear burning , realistic equation of state @xcite ) has been extended by radiative cooling , thermal diffusion and conduction , and photoionization . for parallel implementation on shared memory machines ,",
    "most of the solver memory has been declared as private with the exception of the input configuration parameters required by . finally , the poor performance of  on small grids on machines with vector architecture resulted in its complete rewrite and creation of the  solver .",
    "we defer a detailed description of this new solver to a forthcoming publication @xcite ( see also sect .  [",
    "s : perfopt ] ) .    for problems involving relativistic flows we adapted the  solver and the  solver . since both codes use a multi - staged ( second or third order )",
    "runge - kutta integrator for advancing the solution in time , intermediate fluxes have to be stored for each patch in amr memory .",
    "these are updated with partial fluxes after each stage of the integrator , and are passed to amr after the last stage of the integration process .",
    "except for this , the coupling of  and  to amr library required similar modifications as in the case of .",
    "initial conditions are defined with the help of a set of subroutines stored in a single file .",
    "the basic configuration of  ( maximum number of levels and patches , output type ) and the configuration of the solver ( solver type , problem code name , maximum patch size , external boundary conditions , number of fluids , type of equation of state , physics options ) are defined by a set of unix preprocessor directives declared in a problem configuration file .",
    "table  [ t : problem ]    ll definition & comment + & + & + & + & + & + & + & + & + & + & + & + & + & + & + & + & +    shows a problem configuration file for the hawley - zabusky test ( see sect .  [ s : hz ] ) .",
    "additional unix system targets defined in the main help saving and restoring particular problem set - up and input files required during runtime .",
    "the subroutine in which the initial state is defined takes as its argument the patch level and the patch number , and calculates geometrical terms for the given geometry type and patch extent in physical space .",
    "the initial state is defined by assigning data directly to the amr arrays .",
    "if the multifluid option is used , the total density is calculated as the sum over partial densities . in the multifluid case care",
    "also has to be taken to advect individual species consistently with the total density @xcite .",
    "the set - up of the hydrodynamic state is complete after a call to the equation of state .",
    "physical processes are treated in  with the help of the operator splitting technique . in this approach",
    "it is assumed that different processes can be treated independently from each another . in other words",
    ", it is implicitly assumed that a coupling between a given physical process and the advection occurs on a time scale which is shorter than the hydrodynamic time scale , and special care must be taken in cases when both time scales become comparable .",
    "a typical example of such a situation is heat diffusion ( e.g. , by thermal conduction or radiation ) for which the time scale depends on the inverse square of the zone width",
    ". it can easily be much shorter than the limit imposed on the time step by the courant - friedrichs - lewy @xcite condition . in this case an implicit scheme for the calculation of thermal energy transport should be used .",
    "however , this guarantees only that the diffusion process itself will be calculated correctly ( that is , the problem of coupling between the advection and energy diffusion processes still persists ) . in passing we",
    "note that the order in which processes are executed in the sequence of operators is not arbitrary in the stiff case , and in order to minimize errors arising from the operator splitting the stiffest operators should be applied last @xcite .",
    "[ [ s : cooling ] ] radiative cooling + + + + + + + + + + + + + + + + +    radiative cooling for an optically thin plasma is calculated explicitly for each zone with integration over hydro - timestep done in small substeps whose length is constrained by the maximum allowed change in the gas energy @xcite .",
    "we note that this approach is suitable for an arbitrary ( i.e. , also nonmonotonic ) dependence of the emissivity on temperature .",
    "the code can be configured to calculate the plasma emissivity assuming equilibrium conditions for solar metallicity @xcite or with additional metallicity dependence (  90.01 , @xcite ) .",
    "in addition two nonequilibrium cooling curves for several ( * ? ? ? * raymond and smith code ) or only solar @xcite metallicity are available . the radiative cooling module is called after the advection step and is followed by an optional call to the photoionization module ( see below ) .    [ [ s : burning ] ] nuclear burning + + + + + + + + + + + + + + +    similarly to radiative cooling nuclear burning is a purely local process leading to a modification of the chemical composition ( and energy release ) in sufficiently dense and hot regions of the computational domain abundant in nuclear fuel .",
    "although  allows for simultaneous conservative transport of an arbitrary number of fluids representing different nuclear species the use of relatively large ( number of species @xmath9 ) nuclear reaction networks ( especially in multidimensional calculations ) still appears to be beyond the reach of current computer installations . for stellar applications , e.g. nova outbursts @xcite or the early phases of the shock propagation during a supernova explosion @xcite ) , small networks give adequately accurate results with uncertain reaction rates , numerical diffusion @xcite , or even inadequate refinement criteria used in amr simulations @xcite being the dominant sources of errors in the final chemical composition .    in the present implementation @xcite",
    "the burning module ( module in fig .",
    "[ f : flow ] ) solves an @xmath10-network with 27 reactions .",
    "the reactions couple 13 nuclei ( , , , , , , , , , , , , ) .",
    "a solution of the coupled nonlinear system of equations describing the simultaneous evolution of composition and temperature is obtained implicitly with a newton - raphson iteration @xcite .",
    "the energy released during nucleosynthesis is accounted for in the energy equation .",
    "note that since each chemical element is treated as a separate state variable , it requires allocation of additional memory .",
    "for the present case of 13 nuclei entries in table  [ t : mscaling ] should be multiplied by a factor @xmath11    [ [ s : viscosity ] ] physical viscosity + + + + + + + + + + + + + + + + + +    the viscous stress tensor and divergence components required for the viscosity terms @xcite are calculated at the beginning of the time step ( at the beginning of the first sweep if directional splitting is used ) . in the ppm method",
    "viscous forces contribute to the effective states ( * ? ? ?",
    "* eq .  3.7 ) and are also included in the acceleration part of the advection step ( * ? ? ?",
    "* eq .  3.8 ) . in passing we note",
    "that since updating momenta in the acceleration step of ppm requires knowledge of the forces at the end of the time step , the consistent implementation of viscous forces would make the scheme implicit .",
    "[ [ s : transport ] ] thermal energy transport + + + + + + + + + + + + + + + + + + + + + + + +    energy transport in  includes the processes of thermal conduction @xcite and diffusion .",
    "both processes can be treated explicitly , the energy transport being included in the advection step .",
    "the time step has to be globally reduced if the energy change due to diffusion exceeds some threshold in valid ( not further refined ) regions .    in case",
    "the thermal diffusion time scale becomes much shorter than the hydrodynamic time scale an implicit approach must be used .",
    "the equations are discretized on a `` transport grid '' which has a resolution equal to the finest resolution in the simulation . at the beginning of each base level time step , conservative multidimensional interpolation (",
    "also used in the amr part ) of appropriate state quantities ( density , chemical or nuclear composition , internal energy ) is used to provide data on the transport grid . an implicit solution to the nonlinear diffusion equation",
    "is obtained with the help of the fractional steps method @xcite .",
    "subsequently the internal energy is mapped back to each patch .",
    "[ [ s : photo ] ] photoionization + + + + + + + + + + + + + + +    photoionization consists of calculating the local strmgren radius along the radial direction from the source of photoionizing photons .",
    "photoionization is included in 1- and 2-d versions of the code .",
    "the central time - dependent source of photoionizing photons can be specified .",
    "calculation of the hydrogen column density is done on the transport grid . in",
    "spherical geometry the calculation is straightforward , while in cylindrical geometry ray - tracing is used .",
    "the photoionization procedure returns a map ( i.e. , a 1-d or 2-d array depending on the dimensionality of the problem ) of ionized regions which is interpolated for each patch .",
    "this information is used later by the radiative cooling module to modify the gas temperature .    [",
    "[ s : gravity ] ] gravitational forces + + + + + + + + + + + + + + + + + + + +    the simplest source of gravitational acceleration in  are time - dependent point - like sources arbitrarily distributed in space .",
    "self - gravity of the gas is calculated with the transport grid approach .",
    "the solution of the poisson equation ( module in fig .",
    "[ f : flow ] ) is obtained by a direct summation of the contributions of the gas shells ( if a spherically symmetric distribution is assumed ) or with help of the  fft library @xcite . in the approach exploiting the transport grid , the accuracy of the solution is improved by a linear extrapolation of the potential obtained at the two most recent epochs of the grid synchronization . however , since the above approach is inefficient in terms of memory consumption and as the temporal accuracy of the solution does not allow for studying self - gravitating systems with adequate accuracy , we plan on implementing a method based on fast direct solvers @xcite or a multigrid solver @xcite",
    ".      for storing the results of the simulations ,  provides three independent data formats : , , and .    in one dimension",
    "the relatively small size of data allows for all output to be written in ascii format .",
    "files in format contain the geometry and the state for all patches and include ghost zones .",
    "files contain the same data but only for valid regions ( i.e. , those regions which are not further refined ) .",
    "there is no provision for output in one dimension , but in case of need for special output the user has an option for providing a suitable subroutine .",
    "two- and three - dimensional data come in variety of formats depending on visualization tools available for data analysis . in case of multidimensional simulations data",
    "is always stored in binary format . on some systems conversion between different internal representations of data ( little and big endian )",
    "is done via compiler ( portland group compilers under linux ) or preprocessor ( cray and sgi ) options with calls to the appropriate system subroutines .",
    "files in format are best suited for a quick preview of the simulation progress .",
    "these are images ( or voxels in three dimensions ) covering a part or the whole computational domain with a resolution predefined during the configuration step .",
    "files can be written in a format suitable for postprocessing with tools like idl @xcite or avs / express @xcite , and contain all the information about the hydrodynamic state and the current grid structure . if more frequent output is required , selected variables can be written in format ( native binary format ) or using the hdf library @xcite .",
    "optionally , any of the  output subroutines can be replaced by appropriate calls to user supplied subroutines .",
    "in addition , the code distribution contains stand - alone programs and scripts helping to start with data processing or visualization : converts files to a format suitable for visualization with avs / express ( visa application @xcite or library of modules @xcite ) ; converts files to files ; is a small library of idl subprograms used for visualization of files .      in its current version",
    "can be executed in parallel on shared memory systems with vendor - specific autotasking directives or the openmp standard @xcite .",
    "the code has been used with success on cray parallel vector processor ( pvp ) systems ( y - mp , j90 and sv1 models ) , sgi powerchallenge and origin systems , sun enterprise , and ibm f50 and h70 multiprocessor servers .",
    "parallelization has been achieved through a careful separation of the code memory into private ( task local ) and shared portions .",
    "whenever possible fortran loops have been parallelized over mesh patches which are the entities requiring the largest amount of work . the most time consuming parts of the adaption step and patch integration are all parallelized following the above practice ( grey shaded region in fig .",
    "[ f : flow ] ) . further allows performing calculations with the base level only .",
    "in such a `` non - adaptive '' mode , the adaptive mesh modules of effectively serve as a domain decomposition tool allowing to partition the whole computational domain into smaller blocks . from that point of view",
    ", the amr modules of  offer a very quick and efficient way for parallelization of the existing hydrocodes . in what follows , however , we focus solely on the parallel efficiency of the fully - adaptive code",
    ".      reports of the parallel performance of  obtained with the atexpert utility on cray pvp systems showed that for sufficiently large ( @xmath12 mwords ) problems the code typically achieves @xmath13% of parallelism . according to amdahl s law @xcite",
    "such a degree of parallelism should offer a theoretical maximum speedup of about 7 and 12 on 8 and 16 cpus , respectively . to verify this prediction we performed several  runs for the hawley - zabusky test ( see sect .",
    "[ s : hz ] ) with a patch size of @xmath14 .",
    "we used a cray j916 system running unicos 9.0 and cray cf90 compiler version 2.0.3.1 in non - dedicated mode under very low system load conditions .",
    "the ratio between cpu times for parallel and sequential runs is shown in fig .",
    "[ f : speeduphz ]    with open circles for a problem of small size ( patch size @xmath14 , effective resolution @xmath15 , average memory use @xmath16 mwords ) .",
    "the obtained speedup corresponds to @xmath17% of parallelism .",
    "a similar result has been obtained for a 4 times larger problem ( patch size @xmath18 ; shown with filled circles in fig .",
    "[ f : speeduphz ] ) indicating that within the measurement errors the parallel performance of the code does not dependent on the problem size .",
    "the actual speedup ( symbols in fig .  [",
    "f : speeduphz ] ) is significantly smaller than the average number of concurrent processors used during runtime ( processor load ; dashed lines in fig .  [",
    "f : speeduphz ] ) as reported by the cray hardware performance monitor .",
    "[ f : tconnhz ]    shows the fraction of wall - clock time executed using a certain number of processors .",
    "in all runs the code uses the maximum number of processors most of the time indicating a sufficiently large problem size . hence , fig .",
    "[ f : speeduphz ] and [ f : tconnhz ] imply that the large discrepancy between speedup and processor load is due to a large parallel overhead and a load imbalance rather than due to the presence of sequential code .",
    "the solution to this problem could be a scheduling scheme for execution which uses subsets of several patches rather than individual patches , where each subset requires comparable work . solvers which use the directional splitting method",
    "need additional communication between sweeps to exchange boundary information between siblings at the fine - fine boundaries .",
    "this requires frequent synchronization during single level integration increasing the overall parallel overhead .",
    "parallel overhead and load imbalance are not the only factors which determine the performance of . as we have already mentioned in sect .",
    "[ s : data ] , the use of extremely small patches might be disastrous for code performance on machines with a vector architecture , and may require additional modifications to the solver ( or its complete rewrite ) in order to achieve a reasonable performance .",
    "a small patch size significantly increases the amr overhead due to the relative increase in the number of operations required at the patch boundaries ( interpolation and conservative fixup of fluxes ) .",
    "these operations are likely to limit the code performance on vector machines since they involve fine grained computations and require indirect remote addressing .    in order to demonstrate that the optimization of the box sizes is crucial for achieving reasonable code performance , ) . ] on scalar machines and especially on machines with vector architecture , we compared the relative performance for an operation which is typical for the hydrodynamic advection step .",
    "it has the form @xmath19 . here",
    "@xmath20 and @xmath21 are @xmath22 matrices ( because the number of advected conserved hydrodynamic quantities in 3-d is 5 ) matrices and @xmath23 and @xmath24 are vectors of length @xmath25 . the results are presented in fig .  [",
    "f : vperf ] .    in this test",
    "all superscalar architectures achieve ( at least ) 50% of their peak performance for @xmath26 and 75% for @xmath27 . on vector machines",
    "the performance scales almost linearly with the number of vector elements up to the vector length register ( 64 for cray sv1 and 256 for nec sx-5 ) . for this reason the performance loss is not as severe on the sv1 as on the sx-5 . a performance level of 50%",
    "is achieved for vectors not shorter than @xmath28 and @xmath29 on the sv1 and the sx-5 , respectively .",
    "these results are used by the adaption module ( during the optimization step ) in form of a cost function for vector operations which favours merging of small patches .",
    "in the following we present results of the application of  to several selected one- and two - dimensional flow problems .      the colliding blast waves problem @xcite is one of the most demanding tests of hydrodynamic codes and now widely accepted as a benchmark for newly developed hydrodynamic schemes and their implementations .",
    "the initial conditions for this test are two hot regions of unequal pressures inside the interval @xmath30 , @xmath31 and @xmath32 separated by a low - pressure cavity , @xmath33 the initial data leads to the formation of two shock waves of unequal strengths which after collision form a weak contact discontinuity . fig .  [",
    "f : bwsingle ]    shows the density distribution of a `` converged '' ( 6400 zones ) single - level run at time @xmath34 .",
    "two contact discontinuities that formed at the beginning of the evolution are visible at @xmath35 and @xmath36 , respectively .",
    "another weak contact discontinuity is visible at @xmath37.it formed during collision of the shock waves propagating to the left ( @xmath38 ) and right ( @xmath39 ) , respectively .",
    "we performed further  runs with an effective resolution equal to that of the single - level run but using different criteria for flagging .",
    "firstly , we used the method based on truncation error estimation with the truncation error threshold , , equal to 0.1 , 0.01 , 0.001 , and 0.0001 , respectively . from a comparison of the final models ( fig .",
    "[ f : bwte ] )    we see that the most important flow features are captured at a truncation error threshold @xmath40 ( fig .",
    "[ f : bwte]c ) although the right contact discontinuity was temporarily lost during the earlier phases of the evolution and was only recaptured later by additional refinements . using a still smaller value of ( 0.0001 , fig .",
    "[ f : bwte]d ) helps in resolving all flow features as accurately as in the single level run .",
    "it can be noted that the solution for @xmath41 does not differ much from the result obtained with @xmath40 .",
    "this might be an indication that this solution has been obtained at a level of accuracy comparable to the truncation error of the  itself .",
    "on the other hand , the use of equal to 0.01 or greater degrades the quality of the solution significantly and the weak contact discontinuity is only barely resolved .    finally , we performed two additional  runs using thresholds for the relative changes of hydrodynamic variables , , as the only refinement criteria .",
    "the results obtained with density and pressure as indicator variables with @xmath42 and @xmath43 are shown in fig .",
    "[ f : bwj ] .    in both cases",
    "the quality of the solution is comparable to the converged single - level solution .",
    "all dominant discontinuities are well resolved .",
    "the only apparent differences occur in the post - shock region of the left shock .",
    "this flow structure is formed during early phases of the evolution when the rarefaction propagating initially to the left is reflected at the left grid boundary and interacts with the post - shock region of the shock propagating towards the right .",
    "table  [ t : bwperf ]    llrr code & model & cpu time [ s ] & speedup + & single level & 4585 & + & @xmath44 & 70 & 65 + & @xmath45 & 170 & 27 + & @xmath40 & 241 & 19 + & @xmath41 & 706 & 7 + & @xmath46 & 157 & 29 + & @xmath47 & 492 & 9 +    presents a summary of the performance data ( cpu time has been measured for additional runs with minimal i / o ) for the blast waves problem . for this test problem",
    "offers a speedup between 7 and 19 when -based flagging gave acceptable results .",
    "the speedup is even larger ( between 9 and 29 ) when only the relative changes in density and pressure are used for flagging .",
    "our first astrophysically relevant problem involves two shock waves formed due to the interaction between the material ejected by a supernova explosion and a dense circumstellar medium of constant density @xcite . as a result of this interaction",
    "a forward and reverse shock are formed .",
    "the shocked material separating the two shock waves is allowed to cool assuming optically thin conditions .",
    "the radiative losses are calculated explicitly with an equilibrium cooling function @xcite .    the density profile obtained with a single - level grid at a resolution of 38400 zones",
    "is shown in fig .",
    "[ f : csnrsdens ] .",
    "early in the evolution the supernova ejecta drive a forward shock into the ambient medium while the reverse shock propagates into the unshocked ejecta ( fig .",
    "[ f : csnrsdens]a ) . after approximately one cooling time",
    "the loss of pressure due to cooling in the post - forward - shock region becomes significant leading to the formation of pressure gradients which slowly accelerate the gas towards the low pressure region .",
    "once the gas temperature in this region drops below @xmath48k the emissivity of the gas begins to rise with decreasing temperature eventually resulting in a `` catastrophic cooling '' @xcite followed by a relatively short phase of rapid mass accumulation in a dense shell .",
    "[ f : csnrsdens]b shows the density structure soon after catastrophic cooling occurred .",
    "a similar sequence of events also takes place behind the reverse shock ( fig .",
    "[ f : csnrsdens]c ) where catastrophic cooling occurs at a later time ( @xmath49 yr ) due to the lower densities in this region .",
    "the formation of the forward shell is accompanied by a rapid increase of the total luminosity around time @xmath50 yr ( fig .",
    "[ f : csnrslum ] ) ,    while the formation of the reverse shell manifests itself as a change of slope of the light curve around @xmath51 yr .",
    "since the minimum temperature of the gas allowed in our simulation ( @xmath52 k ) is typically 3 to 4 orders of magnitude lower than the post - shock temperature , the cold shell appears as a very thin structure which is extremely difficult to resolve on a single grid .",
    "we found that in order to resolve the shell a resolution of at least @xmath53 equidistant zones has to be used @xcite .",
    "such a simulation would be prohibitively expensive .",
    "also , since the most important structures ( the two shocks and their dense shells ) occupy only a small fraction of the total volume , very high speedups ( several hundred ) are to be expected applying adaptive grid techniques .    in our  test run",
    "we kept the refinement criteria fixed while the number of levels , i.e. the effective resolution , has been increased between the runs .",
    "we used truncation error estimation with @xmath45 , flagging relative changes in density ( @xmath54 ) and total energy ( @xmath55 ) .",
    "shocks were flagged with @xmath56 and contact discontinuities with @xmath57 .",
    "in addition , we decided to unflag ( coarsen ) the inner part of the computational grid from the center out to the ( time - dependent ) radius of the reverse shock .",
    "we used three , four and five grid levels with an effective resolution of 9600 , 38400 , and 153600 zones , respectively .",
    "therefore , the medium resolution  run had an effective resolution equal to that of the single - level run . fig .",
    "[ f : csnrdens ]    shows the density profiles at @xmath58 yr obtained with .",
    "in all three cases the result closely resembles that obtained with a single grid ( fig .  [",
    "f : csnrsdens ] ) .",
    "the density decreases from the center through the unshocked ejecta up to the reverse shock at @xmath59 pc . the density spike located right behind the reverse shock marks the position at which a secondary shell is just forming .",
    "adjacent to the density spike is region of hot gas with linearly decreasing density which is further reheated by a weak secondary shock near its rightmost end .",
    "the density in the primary shell ( @xmath60 pc ) is equal to @xmath61@xmath62 , except for the lowest resolution  model .",
    "the post - shock region of the forward supernova shock located just outside the primary shell remains unresolved in all but the highest resolution  run . only then which the resolution is sufficiently high to observe the oscillatory instability of the cooling shock @xcite .",
    "comparing cpu times of the single - grid and amr run obtained at the same effective resolution ( table  [ t : csnrperf ] )    lrrc model & resolution & cpu time [ s ] & speedup +  1 level & 9600 & 23260 & +  1 level & 38400 & 430300 & +  3 levels & 9600 & 851 & 27 +  4 levels & 38400 & 3571 & 120 +  5 levels & 153600 & 22690 & 233@xmath63 +    estimated .",
    "indicates a speedup of about 27 and 120 for 3 and 4 level amr runs , respectively . from the total number of zones to be updated during the single grid run and from the execution speed measured in number of zones updated per second",
    ", we estimate that at a resolution of 153600 zones the speedup would exceed 200 .",
    "hawley and zabusky @xcite studied numerically the interaction between an oblique shock and a contact discontinuity . at the beginning of the evolution a shock tube is filled with a gas at rest containing a contact discontinuity inclined at a small angle ( 30@xmath64 ) with respect to the front of a mach 1.2 planar shock wave .",
    "vorticity deposition which occurs during the passage of the shock wave through the contact discontinuity leads to the formation of vortices which interact and subsequently merge .",
    "the amount of vorticity deposited at the contact discontinuity sensitively depends on the numerical resolution and internal dissipation of the advection scheme . at late times",
    "the rollup of vortices is additionally affected by the `` far field '' produced by sound waves generated during the early interaction of the shock wave with the contact discontinuity and to some degree also by weak waves reflected from both ends of the shock tube . for these reasons no numerically `` converged ''",
    "solution can be obtained .",
    "the final structure ( location and number of vortices ) changes with grid resolution , and is extremely sensitive to inaccuracies introduced by any numerical scheme .",
    "[ f : hzsdens ]    shows a sequence of images obtained on a single grid with a resolution of @xmath15 zones .",
    "the integrated vorticity reaches an absolute maximum ( solid line in fig .",
    "[ f : hzvort ] )    at @xmath65 when the shock wave passes the full horizontal extent of the contact discontinuity ( fig .",
    "[ f : hzsdens]a ) . during the following evolution vortices first grow at the smallest resolved scales ( @xmath66 , fig .",
    "[ f : hzsdens]b ) .",
    "later they interact and merge with only a few large vortices remaining at the final time ( @xmath67 , fig .",
    "[ f : hzsdens]c ) .",
    "simulations have been performed at the same effective resolution but changing the truncation error threshold for zone flagging .",
    "to keep the initial discontinuities fully resolved we also used @xmath54 and @xmath68 .",
    "the former criterion helps in resolving the contact discontinuity while the latter ensures creation of the finest level patches near the shock front .",
    "models at the final time obtained with  equal to 0.1 , 0.01 , and 0.001 are shown in the upper , middle , and lower part in fig .",
    "[ f : hzdens ] ,    respectively .",
    "it can be seen that vortices are progressively more diffused with increasing .",
    "this indicates that the  criterion can be used to control the amount of numerical diffusion present in  simulations .    the temporal evolution of the integrated vorticity is shown in fig .  [ f : hzvort ] with thin solid , dotted , and dashed lines for equal to 0.1 , 0.01 , and 0.001 , respectively . in all cases low amplitude wiggles ( clearly visible at maximum and around @xmath69 in model @xmath40 ) or sudden erratic changes ( visible for @xmath40 around @xmath70 and @xmath71 ) in the integrated vorticity can be observed .",
    "in addition , large amplitude variations of the total vorticity are observed with a net variation close to zero .",
    "we identify the former phenomenon with the destruction and subsequent recreation of patches in localized regions of the computational domain which contain substantial amount of vorticity .",
    "a remedy for this problem might be a delayed patch destruction @xcite or the direct introduction of a temporal smoothing into the flagging procedure .    finally ,",
    "following quirk @xcite , we note that any amr patch corner acts as a potential obstacle for the flow and becomes a source of spurious vorticity once the flow is not exactly aligned with one of the coordinate directions .",
    "this observation may explain why the vorticity seems to differ slightly from that of the single - grid run already prior to reaching its maximum ( although until this moment both the shock front and the contact discontinuity are always covered with finest level patches ) .",
    "the amount of spurious vorticity is likely to be higher in simulations performed with larger refinement ratios .",
    "these issues should be taken into account when performing amr simulations for problems involving convection or turbulence ( see @xcite for a discussion of problems related to modelling turbulent flows in the framework of large eddy simulations ) .    table  [ t : hzperf ]    llll code & model & cpu time [ s ] & speedup +  1 level & @xmath15 & 53070 & + & @xmath44 & 14540 & 3.6 + & @xmath45 & 16890 & 3.1 + & @xmath40 & 24890 & 2.1 +    summarizes the performance data for the hawley - zabusky problem .",
    "the obtained speedups are rather disappointing ranging from 2 to less than 4 .",
    "this result follows from the fact that a relatively large fraction of the computational domain is occupied by discontinuities and has to be resolved at the finest level ( fig .",
    "[ f : hz3lev ] ) .",
    "this fraction starts growing soon after the shock begins to interact with the contact discontinuity . at @xmath72 ( fig .",
    "[ f : hz3lev]a ) the second and third level occupy about 45% and 23% of the domain , respectively .",
    "this trend continues through the middle of the evolution and at @xmath73 ( fig .",
    "[ f : hz3lev]b ) the filling factor for the second and third level @xmath74% and @xmath75% , respectively . since the shock is the only discontinuity escaping the grid the situation does not change much for a better near the end of the evolution ( fig .",
    "[ f : hz3lev]c ) when the second and third level still cover @xmath76% and @xmath77% of the domain , respectively .",
    "we may define the maximum speedup as the ratio of the number of zones to be updated on the finest level ( assuming no overlap between sibling patches ) to that in the single grid run . for the hawley - zabusky test and with @xmath40",
    "this number is equal to @xmath78 which has to be compared to the measured speedup of 2.1 .",
    "the difference between the two numbers accounts for the cpu time spent integrating all coarser levels , the overhead due to additional data motion , grid adaption including error estimation , and operations at the patch boundaries .",
    "these steps account for 3% , 2% , 6% and 17% of the cpu time in the  run on a sgi origin200 system .",
    "the problem of the supernova shock propagation through the atmosphere of the stellar progenitor has been the subject of several detailed numerical studies ( * ? ? ? * and references therein ) following observational evidence for mixing that must have occurred during the explosion of supernova sn  1987a ( for a review see @xcite ) .    in our  study",
    "we used the initial model of mller , fryxell and arnett @xcite .",
    "calculations have been performed assuming spherical symmetry on a grid extending from @xmath79 cm to @xmath80 cm in radius and from @xmath81 to @xmath82 in polar angle .",
    "the base level consisted of 4 patches of @xmath83 zones allowing for free outflow along the outer radial grid boundary ; at all other boundaries we imposed reflecting boundary conditions .",
    "we used three levels of refinement with a twofold increase in resolution on the second level in each direction , and refinement ratios of 4 and 2 in radius and angle for the remaining two levels .",
    "this set - up results in an effective resolution of @xmath84 zones .",
    "we used @xmath40 and @xmath54 as refinement criteria .",
    "a simple ideal gas equation of state with @xmath85 has been used .",
    "the simulation has been started 300 seconds after the explosion and was followed up to @xmath86 seconds .",
    "[ f : ersdens ]    presents the distribution of the gas density between @xmath87s and the final time . during that period instabilities associated with the hydrogen - helium ( outermost family of mushrooms ) and helium - carbon composition interfaces",
    "( more dense mushrooms visible near the middle of the strongly mixed layer ) are already well developed .",
    "this result is in qualitative agreement with the result obtained by mller  ( * ? ? ?",
    "4 ) although  predicts the instability to develop from a shorter ( by a factor of @xmath88 ) wavelength .",
    "moreover , there is also a third instability visible in  developing in a region traversed by the reverse shock at the base of the expanding envelope .",
    "most of these differences can be attributed to the higher ( by a factor of @xmath89 ) angular resolution offered by  during the initial stages of the instability growth . in both models , however , the instability is strong and produces a `` mixed '' layer of similar average thickness and density ( compare fig .",
    "[ f : ersmixl ]    and fig .  6 of mller ) .    since the finest level occupies a constantly growing fraction of the total volume ( fig .",
    "[ f : erslev ] ) ,    the speedup obtained in  is largest during early times ( @xmath90 for @xmath91 ) with an average value for the whole run of @xmath92 .",
    "however , we note that in our  run it was possible to allow the code to run at much ( @xmath93 ) larger time steps by decreasing the resolution in the innermost 10% of the grid , that is , in the region which imposes the stringent limits on the time step . in the  run this region",
    "is covered only by the base level for @xmath94 . to allow for similarly large time steps in a run with uniform grid one would need to removed the inner part of the star .",
    "the implementation details of a newly developed adaptive mesh refinement code , , have been presented together with one- and two - dimensional tests cases .",
    "our experience shows that for a given resolution the amr technique offers savings in terms of computer time as long as the average ( over the whole computation ) fraction of the computational domain to be resolved at the finest level ( filling factor ) does not exceed about one half of the total volume .",
    "this statement is valid for simple purely hydrodynamic problems .",
    "more substantial savings might be expected for problems involving computationally expensive source terms .",
    "although the fractional volume occupied by the finest level is the major factor determining the overall efficiency of , speedups obtained for the same problem show a strong dependence on processor architecture ( risc / cache , vector ) .",
    "our experience on shared memory parallel systems indicates that the parallel overhead ( communication , synchronization ) is significant , and its reduction is likely to be even more important on systems with distributed memory .",
    "care has to be taken when simulating flows for which rotation and shear are important since patch corners effectively act as a source of spurious vorticity especially when the change of resolution between levels is substantial .",
    "finally , we note that the amr approach is not suitable for problems which require uniform high - resolution .",
    "these include simulations of convective or turbulent flows .",
    "we thank micha ryczka for his ongoing support and interest in this project .",
    "konstantinos kifonidis and pawe ciecielag made an enormous contribution to this work by sharing with us their impressions following `` real world '' applications of   we thank them warmly for being patient with us ! the work of tp was partly supported by the grants 2 - 1213 - 91 - 01 , 2.p304.017.07 , 2.p03d.004.13 , and 2.p03d.014.19 from the polish committee for scientific research , and eso grant a-01 - 063 .",
    "the simulations have been performed on the cray sv1 - 1a at the interdisciplinary centre for computational modelling in warsaw , the sgi origin200 at the nicolaus copernicus astronomical center , warsaw , and the cray j916/512 at the rechenzentrum garching .",
    "00 j. adams , r. schwarztrauber , r. sweet , fishpak , a package of fortran subprograms for the solution of separable elliptic partial differential equations , version 3.2 ( ncar , boulder , 1988 ) .",
    "m. a. aloy , j. m , j. m , e. mller , apjs 122 ( 1999 ) 151 .",
    "g. m. amdahl , american federation of information processing societies conference proceedings : spring joint computing conference , 30 ( thompson books , washington , 1967 ) , p. 483 .",
    "r. t. barton , in : numerical astrophysics , j. m. centrella , j. m. leblanc , r. l. bowers ( eds . ) ( jones and bartlett , boston , 1985 ) p. 482 .",
    "j. bell , m. j. berger , j. saltzman , m. welcome , siam j. sci .",
    "comput . 15",
    "( 1994 ) 127 .",
    "m. j. berger , p. colella ,  82 ( 1989 ) 64 .",
    "m. j. berger , r. j. leveque , siam j. numer .",
    "35 ( 1998 ) 2298",
    ". m. j. berger , j. oliger ,  53 ( 1984 ) 484 .",
    "m. j. berger , i. rigoutsos , ieee transactions on systems , man and cybernetics 21 ( 1991 ) 1278 .",
    "j. g. blom , j. g. verwer , acm trans .",
    "softw . 22 ( 1996 ) 329 .",
    "a. brandt , math .",
    "comput . 31",
    "( 1977 ) 333 .",
    "a. brandt , multigrid techniques : 1984 guide , with applications to fluid dynamics , gmd - studien nr .",
    "85 ( german national research center for information technology ( gmd ) , sankt augustin , 1984 ) .",
    "a. brandt , d. bai , siam j. sci .",
    "( 1987 ) 109 .",
    "r. a. chevalier , j. n. imamura , apj 261 ( 1982 ) 543 .",
    "p. ciecielag , t. plewa , m. ryczka , astron .",
    "321 ( 2000 ) 171 .",
    "m. ciment , r. a. sweet ,  12 ( 1973 ) 513 .",
    "p. colella , h. m. glaz ,  59 ( 1985 ) 264 .",
    "p. colella , p. r. woodward ,  54 ( 1984 ) 174 . a. w. cook ,  154 ( 1999 ) 117 .",
    "r. courant , k. o. friedrichs , h. lewy , ibm j. res .",
    "11 ( 1967 ) 215 .",
    "d. de zeeuw , k. g. powell ,  104 ( 1993 ) 56 .",
    "e. a. dorfi , l. oc .",
    "drury ,  69 ( 1987 ) 175 .",
    "s. a. e. g. falle , mnras 195 ( 1981 ) 1011 .",
    "s. a. e. g. falle , j. r. giddings , in : numerical methods for fluid dynamics 4 , k. w. morton , m. j. baines ( eds . ) ( clarendon press , oxford , 1993 ) .",
    "s. a. e. g. falle , a. c. raga , mnras 261 ( 1993 ) 573 . j. m. favre , r. walder , d. follini , in : proceedings , 40th cray user group conference , june 1998 , stuttgart , germany ( cray user group , incorporated , 1998 ) . g. j. ferland , hazy , a brief introduction to cloudy , university of kentucky department of physics and astronomy internal report ( 1993 )",
    ". b. a. fryxell , e. mller , w. d. arnett , garching : max - planck - institut fr astrophysik , preprint 449 ( 1989 ) .",
    "b. fryxell , k. olson , p. ricker , f. x. timmes , m. zingale , d. q. lamb , p. macneice , r. rosner , j. w. truran , h. tufo , apjs ( 2000 ) in press .",
    "m. gehmeyr , d. mihalas , physica d 77 ( 1994 ) 320 .",
    "r. a. gingold , j. j. monaghan , mnras 181 ( 1977 ) 375 .",
    "j. f. hawley , n. j. zabusky , phys .",
    "63 ( 1989 ) 1241 .",
    "hdf , hierarchical data format , the national center for supercomputing applications , university of illinois at urbana - champaign www : http://hdf.ncsa.uiuc.edu/index.html .",
    "j. huang , l. greengard , siam j. sci .",
    "21 ( 2000 ) 1551 .",
    "a. kercek , w. hillebrandt , j. w. truran ,   337 ( 1998 ) 379 .",
    "a. m. khokhlov ,  143 ( 1998 ) 519 .",
    "k. kifonidis , t. plewa , e. mller , in : proceedings of the 9th workshop on nuclear astrophysics , w. hillebrandt , e. mller ( eds . ) ( max - planck - institut fr astrophysik , garching , 1998 ) p. 25 .",
    "k. kifonidis , t. plewa , h .- th .",
    "janka , e. mller , apj 531 ( 2000 ) l131 .",
    "w. kley ,   338 ( 1998 ) l37 .",
    "w. kley , mnras 303 ( 1999 ) 696 .",
    "r. lhner , eng .",
    "50 ( 1995 ) 819 .",
    "l. b. lucy , aj 82 ( 1977 ) 1013 .",
    "p. macneice , k. m. olson , c. mobarry , r. de  fainchtein , c. packer ,  126 ( 2000 ) 330 .",
    "j. m , e. mller , j. a. font , j. m , a. marquina , apj 479 ( 1997 ) 151 .",
    "d. f. martin , k. l. cartwright , technical report ucb / erl m96/66 , ( university of california , berkeley , 1996 ) .",
    "d. f. martin , p. colella ,  163 ( 2000 ) 271 .",
    "j. j. monaghan , ara&a 30 ( 1992 ) 543 .",
    "j. p. morris , j. j. monaghan ,  136 ( 1997 ) 41 .",
    "e. mller ,   162 ( 1986 ) 103 .",
    "e. mller , in : computational methods for astrophysical fluid flow , 27th saas - fee advanced course lecture notes , o. steiner , a. gautschy ( eds . ) ( springer , berlin , 1998 ) p. 371 .",
    "e. mller , b. a. fryxell , d. arnett ,   251 ( 1991 ) 505 .",
    "j. oliger , x. zhu , appl .",
    "( 1996 ) 407 .",
    "openmp fortran application program interface , version 1.1 , ( the openmp architecture review board , 1999 ) .",
    "t. plewa , acta astr .  43 ( 1993 ) 235 .",
    "t. plewa , mnras 275 ( 1995 ) 143 .",
    "t. plewa , e. mller ,   342 ( 1999 ) 179 .",
    "t. plewa , e. mller , k. kifonidis , ( 2000 ) in preparation .",
    "t. plewa , m. ryczka , in : 1st guillermo haro conference on astrophysics : starburst activity in galaxies , j. franco , r. terlevich , a. serrano ( eds . ) rev .",
    "conference series 6 ( 1997 ) p. 232 .",
    "j. j. quirk , an adaptive grid algorithm for computational shock hydrodynamics .",
    "ph.d .  thesis , ( college of aeronautics , cranfield institute of technology , 1991 ) .",
    "m. ruffert ,   265 ( 1992 ) 82 .",
    "r. shelton , private communication .",
    "r. l. shelton , d. p. cox , w. maciejewski , r. l. smith , t. plewa , a. pawl , m. ryczka , apj 524 ( 1999 ) 192 .",
    "b. sportisse ,  161 ( 2000 ) 140 .",
    "m. steinmetz , e. mller ,   268 ( 1993 ) 391 .",
    "r. s. sutherland , m. a. dopita , apjs 88 ( 1993 ) 253 .",
    "r. terlevich , g. tenorio - tagle , j. franco , j. melnick , mnras 255 ( 1992 ) 713 .",
    "r. walder , d. folini ,   315 ( 1996 ) 265 .",
    "p. r. woodward , in : parallel computations , g. rodrigue ( ed . )",
    "( academic press , new york , 1982 ) .",
    "p. r. woodward , p. colella ,  54 ( 1984 ) 115 .",
    "n. n. yanenko , the method of fractional steps : the solution of problems of mathematical physics in several variables .",
    "m. holt ( ed . ) ( springer - verlag , new york , 1971 ) .",
    "u. ziegler ,  116 ( 1999 ) 65 .",
    "u. ziegler , h. w. yorke ,  101 ( 1997 ) 54 ."
  ],
  "abstract_text": [
    "<S> implementation details and test cases of a newly developed hydrodynamic code , , are presented . </S>",
    "<S> the numerical scheme exploits the adaptive mesh refinement technique coupled to modern high - resolution schemes which are suitable for relativistic and non - relativistic flows . </S>",
    "<S> various physical processes are incorporated using the operator splitting approach , and include self - gravity , nuclear burning , physical viscosity , implicit and explicit schemes for conductive transport , simplified photoionization , and radiative losses from an optically thin plasma . </S>",
    "<S> several aspects related to the accuracy and stability of the scheme are discussed in the context of hydrodynamic and astrophysical flows .    </S>",
    "<S> numerical methods , adaptive mesh refinement , numerical hydrodynamics , numerical astrophysics , parallel computing </S>"
  ]
}
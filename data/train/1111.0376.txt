{
  "article_text": [
    "although the laboratory methods that generate genetic sequence data have advanced remarkably since their initial use in the human genome project @xcite , the algorithms behind the computational methods have not advanced as dramatically .",
    "sajjadian et al .",
    "@xcite describes the present time as `` watershed moment in genomics '' pointing to computational genomics as the bottleneck of the sequencing process . in this paper",
    ", we revisit an essential problem arising in genome sequencing , reformulate this problem to better model noisy data , and show how studying approximability and parameterized complexity of this problem leads to surprising theoretical insights and algorithmic techniques that may assist in genome sequencing .    since the discovery of dna as the basic unit of heredity , significant effort has been focused on automated determination of the sequence of nucleotides corresponding to a sample of dna , a process referred to as _ genome sequencing_. the key technology this process relies on is the sequencing platform that accepts a collection of biological ( dna ) samples and produces _ reads _ from the samples .",
    "a read is a string from the alphabet @xmath20`a ` , ` c ` , ` g ` , ` t`@xmath21 that represents the sequence of nucleotides in a sample .",
    "sequencing platforms are extremely limited in that they can not process the entire dna sample at once but rather , they handle very small pieces of the dna at a time . the resulting problem for an average - size genome of length 4 million is that @xmath2220 million reads of length 50 must be assembled into one contiguous piece .",
    "this computational process of building the contiguous string from reads is referred to as _ fragment assembly _ , and is especially challenging  if not , impossible  for complex genomes with higher repeat and duplication content . while the current generation of sequencing platforms can produce a large amount of reads in a relatively short period of time , the reads they produce are greatly error prone , increasing the computational difficulty of fragment assembly .",
    "error correction , which is vital in genome assembly , aims to identify and correct any mistakes made by the sequencing platform and thus , reduces the computational demands of the fragment assembly algorithms @xcite .",
    "contamination of the dna sample and erroneous runs of the sequencing platforms are frequent occurrences that lead to many reads having a large fraction of errors and hence , deviate quite dramatically from the rest of the data .",
    "ideally , these `` outlier '' strings should be detected and removed from the input prior to assembly .",
    "although , problem formulations with outliers have been previously proposed and studied in different contexts  including machine learning @xcite , network design problems @xcite , and bioinformatics @xcite  it has not been considered or proposed in error correction of genome sequencing data .",
    "present error correction methods do not account for the possibility of outliers , and hence , are required to be highly liberal in the elimination of data .",
    "therefore , they remove a large number of reads that could have been used for assembly . we introduce the following formulation of error correction that also captures the existence of outliers in the data . + _ consensus string with outliers _",
    "+ _ input : _ a set of @xmath0 length-@xmath1 strings @xmath23 over a finite alphabet @xmath3 and nonnegative integers @xmath5 and @xmath4 .",
    "+ _ question : _ find a length-@xmath1 string @xmath9 and subset @xmath6 of @xmath7 of size @xmath8 , where @xmath24 .",
    "+ we restrict interest to hamming distance and denote @xmath11 to be the hamming distance between the length-@xmath1 strings @xmath12 and @xmath13 .",
    "the following are natural optimization versions of _ consensus string with outliers _ that we will consider :    * _ consensus string with max non - outliers _ : given @xmath0 length-@xmath1 strings @xmath23 over a finite alphabet @xmath3 and nonnegative integer @xmath4 , the aim is to find a consensus string @xmath9 and subset of @xmath25 , where @xmath26 is maximal and @xmath27 . * _ min - distance consensus string with outliers _ : given @xmath0 length-@xmath1 strings @xmath23 over a finite alphabet @xmath3 and nonnegative integer @xmath5 , the aim is to find a consensus string @xmath9 and subset of @xmath25 , where @xmath28 and @xmath29 is minimal .",
    "[ [ our - results . ] ] our results .",
    "+ + + + + + + + + + + +    the problems considered are np - hard in general , however , they turn out to be amenable to approximation and parameterized algorithms .",
    "a _ polynomial - time approximation scheme _ ( ptas ) for a minimization problem is an algorithm which takes an instance of the problem and a parameter @xmath30 and , in polynomial time , produces a solution that is within a factor @xmath31 of being optimal .",
    "if the exponent of the polynomial in the running time of the algorithm is independent of @xmath32 then the ptas is said to be an _ efficient ptas _ ( eptas ) .",
    "we present several results on the ability to efficiently solve and approximate the above optimization problems within arbitrarily small factors , and demonstrate the tightness of these results . specifically , we prove the following :    * there exists a deterministic ptas for _ min - distance consensus string with outliers _ and _ consensus string with max non - outliers_. * for instances where @xmath33 and fixed @xmath16 , the ptas for _ min - distance consensus string with outliers _ can be improved to a randomized eptas . * in the general case , both _ min - distance consensus string with outliers _ and _ consensus string with max non - outliers _ do not admit an eptas , unless fpt = w[1 ] .",
    "thus , the requirement that @xmath33 is necessary to improve the ptas for _ min - distance consensus string with outliers _ to an eptas . * _ consensus string with outliers _ can be solved to in time @xmath34 , where @xmath35 .    for a parameter @xmath36 , an algorithm with running time @xmath37",
    "is called a _ fixed parameter tractable _",
    "( fpt ) algorithm for the problem parameterized by @xmath36 .",
    "parameterized problems that admit such algorithms are said to be fpt .",
    "hence our algorithm for _ consensus string with outliers _ proves that the problem is fpt parameterized by @xmath36 .",
    "our approximation schemes are based on random sampling .",
    "if the number of outliers is small , then with reasonably high probability a small random subset of the input strings will not contain any outliers .",
    "if the random sample does not contain outliers then the sample can be used to estimate the optimal consensus string .",
    "we show that if the size of the sample and the number of repetitions of the experiment are chosen appropriately then there exists a good bound on the quality of the output of this natural heuristic . for inputs",
    "where the noise does not completely overwhelm the data , i.e.  when @xmath38 for @xmath16 , the dependence on the running time of our approximation scheme for _ min - distance consensus string with outliers _ is good ; more specifically , it is an eptas .",
    "the difference in running time of a ptas and an eptas can be quite dramatic .",
    "for instance , running a @xmath39-time algorithm is reasonable for @xmath40 and @xmath41 , whereas running a @xmath42-time algorithm is infeasible .",
    "hence , considerable effort has been devoted to improving ptass to eptass , and showing that such an improvement is unlikely for some problems .",
    "for example , arora  @xcite gave a @xmath43-time ptas for _ euclidean tsp _",
    ", which was then improve to a @xmath44-time algorithm in the journal version of the paper  @xcite . on the other hand _",
    "independent set _ admits a ptas on unit disk graphs  @xcite but marx  @xcite showed that , unless fpt = w[1 ] , it does not admit an eptas",
    ". many more examples of ptass that have been improved to eptass , and problems for which a ptas exists but for which an eptas has been ruled out under the assumption that fpt@xmath45w[1 ] can be found in the survey of marx  @xcite .",
    "an interesting question is whether the requirement that @xmath38 for @xmath16 is necessary in order to improve the ptas for _ min - distance consensus string with outliers _ to an eptas .",
    "can an eptas be obtained for this problem without the requirement ?",
    "a useful observation in this regard is that an eptas for an optimization problem automatically yields a fpt algorithm for the corresponding decision problem parameterized by the value of the objective function  @xcite .",
    "more specifically , if we set @xmath46 , where @xmath47 is the value of the objective function , then a @xmath17-approximation algorithm would distinguish between `` yes '' and `` no '' instances of the problem .",
    "hence , an eptas could be used to solve the problem in @xmath48-time .",
    "this observation is frequently used to rule out the existence of an eptas . if a problem does not admit a fpt algorithm parameterized by the value of the objective function unless fpt = w[1 ]",
    ", then the corresponding optimization problem does not admit an eptas unless fpt = w[1 ] .    to the best of our knowledge _ all _ known results ruling out eptass for problems for which a ptas is known use this approach .",
    "unfortunately , it can not be used to rule out an eptas for _ min - distance consensus string with outliers _ because _ consensus string with outliers",
    "_ parameterized by @xmath4 is fpt .",
    "in particular , we show there is an algorithm for _ consensus string with outliers _ with running time @xmath34 , where @xmath35 , and since @xmath36 is always at most @xmath4and much smaller than @xmath4 for most inputs  this algorithm runs in @xmath49-time .",
    "our fpt algorithm is an adaptation of the algorithm by marx  @xcite for the _ consensus patterns _ problem .    in his survey ,",
    "marx  @xcite introduces a hybrid of fpt reductions and gap preserving reductions and argues that it is conceivable that such reductions could be used to prove that a problem that has a ptas and is fpt parameterized by the value of the objective function does not admit an eptas unless fpt = w[1 ] .",
    "we show that _ min - distance consensus string with outliers _ does not admit an eptas unless fpt = w[1 ] , giving the first example of this phenomenon . at the core of our reduction",
    "is an analysis of one - dimensional random walks where some of the steps are `` double steps '' that are taken in the same direction . the results on random walks could turn out useful in other hardness proofs , and thus , might be of independent interest .",
    "parameterized hardness results for a few other parameterizations of _ consensus string with outliers _ follow as simple corollaries of our construction .",
    "the problems considered in this paper belong to the more general class of stringology problems where a set of strings is given and the aim is to determine a single string that is representative for the set .",
    "the exact definition of what being a good representative means may vary and different definitions lead to abstractions of various problems in bioinformatics @xcite .",
    "the _ consensus patterns _ problem is quite similar to our problem , however , in this context the aim is to find a substring in each of the input strings and consensus string so that the sum of the hamming distances is minimized .",
    "li et al .",
    "@xcite gave a ptas for this problem and there has been a significant effort in attempting on proving tighter bounds on the running time of the ptas @xcite .",
    "closest string _",
    "problem is another related problem where the goal is to find a string that minimizes the maximum hamming distance to any string .",
    "this problem also admits a ptas but no eptas @xcite .",
    "both problems have been investigated in the framework of parameterized complexity by several authors , however , the parameterization of _ consensus patterns _ with respect to the distance appeared to be very challenging . in 2005 , marx @xcite showed _ consensus patterns _ is fpt when parameterized by @xmath50 and bounded alphabet size .",
    "the general approach to large - scale sequencing is as follows : first the dna is extracted from the cell and copied multiple times , then the dna is cut into smaller fragments , each fragment is sequenced by a sequencing platform to produce a read , and finally the reads are assembled into large segments of the genome .",
    "figure [ fig : error_rate ] illustrates this process .",
    "one important point is that sequencing platforms can produce many hundreds of thousands , or even millions of reads in a short time ( on the order of a day ) , but can only handle small segments of dna at a time and produce relatively short reads .",
    "the copying step ensures that a position of the genome is sequenced multiple times and the reads overlap by an adequate amount .",
    "this overlap is what allows for the assembly of the reads into large contiguous strings .",
    "developing novel algorithms and tools for the fragment assembly process is , at present , a very active area of research in bioinformatics .",
    "current assembly tools are efficient , however , their accuracy is substantially diminished by repeated regions in the genome sequence and sequencing errors .",
    "as previously mentioned , error correction of the reads is an important step in genome sequencing , however , present algorithms are still unable to handle outliers in the data .",
    "the majority of sequencing errors occur when the nucleotide found in a read deviates from the actual nucleotide in the dna sample ( _ i.e. _  a read has the symbol ` a ` at a position where it should be a ` c ` ) , making hamming distance the most reasonable metric to use . in a read , for the first 50 positions the error rate is quite small but for subsequent positions the error probability increases exponentially @xcite .",
    "see figure [ fig : error_rate ] . this is why the length of the reads is at most @xmath51-@xmath52 . due to this change in the error probability and technical details related to fragment assembly",
    ", error correction begins by computing the set of all consecutive , length-@xmath1 substrings from each read , where @xmath1 is an input parameter .",
    "hence , error correction is implicitly performed on the set for all length-@xmath1 contiguous substrings of reads rather than the full reads .",
    "the majority of error correction algorithms consider the first 50 positions in a read and ignore remaining positions @xcite , eliminating a large portion of the data .",
    "this is unsatisfactory since acquiring the data is both expensive and time consuming , and any loss of data will affect the accuracy of the assembly .",
    "due to the change in the error probability in the reads , some of the length-@xmath1 strings will have a significant but tolerable number of errors ( i.e.  up to 15% of positions being erroneous ) that can be error corrected and thus , used in fragment assembly . on the other hand ,",
    "the length-@xmath1 strings that stem from contaminated data or bad runs of the sequencing platform should be detected and removed .",
    "a maximization problem admits a ptas if there is an algorithm @xmath53 such that , for any @xmath30 and any instance @xmath54 of @xmath55 outputs a @xmath56-approximate solution in time @xmath57 for some function @xmath58 .",
    "a ptas for a minimization problem finds a @xmath59-approximate solution in time @xmath57 .",
    "an approximation scheme where the exponent of @xmath60 in the running time is independent of @xmath32 is called an _",
    "efficient _ polynomial time approximation scheme ( eptas ) .",
    "formally , an eptas is a ptas whose running time is @xmath61 .    we give a brief introduction to paramterized complexity . a problem @xmath62 is said to be _ fixed parameter tractable _ with respect to parameter @xmath5 if there exists an algorithm that solves @xmath62 in @xmath63 time , where @xmath58 is a function of @xmath5 that is independent of @xmath0 @xcite . the class of all fixed parameter tractable problems is denoted by fpt .",
    "the class w[1 ] of parameterized problems is the basic class for fixed parameter intractability , fpt @xmath64 w[1 ] and the containment is believed to be proper . a parameterized problem @xmath65 with the property that an fpt algorithm for @xmath65 would imply that fpt = w[1 ] is called w[1]-hard .",
    "downey and fellows @xcite define _ fpt - reductions _ , which preserve w[1]-hardness .",
    "let @xmath66 be two parameterized problems .",
    "we say that @xmath67 _ fpt - reduces _ to @xmath68 if there are functions @xmath69 and an algorithm that given an instance @xmath70 runs in time @xmath71 and outputs an instance @xmath72 such that @xmath73 and @xmath74 .",
    "these reductions work as expected ; if @xmath67 fpt - reduces to @xmath68 and @xmath68 is fpt then so is @xmath68 .",
    "furthermore , if @xmath67 fpt - reduces to @xmath68 and @xmath67 is w[1]-hard then so is @xmath68 .",
    "we refer the reader to the textbooks  @xcite for a more thorough discussion of parameterized complexity .",
    "let @xmath9 be a string over the alphabet @xmath3 .",
    "we denote the length of @xmath9 as @xmath75 , and the @xmath76th character of @xmath9 as @xmath77 $ ] .",
    "hence , @xmath78s[2]\\ldots s[|s|]$ ] . for a set @xmath7 of strings of the same length",
    "we denote by @xmath79 $ ] as @xmath80~:~s \\in s\\}$ ] .",
    "that is , if the same character appears at position @xmath81 in several strings it is counted several times in @xmath79 $ ] . for an interval @xmath82 of integers , define @xmath83 $ ] to be the substring @xmath84s[i+1]\\ldots s[j]$ ] of @xmath9 . for a set @xmath7 of strings and interval @xmath85 define @xmath86 $ ] to be the ( multi)set @xmath87~:~s \\in s\\}$ ] . for a set @xmath7 of length-@xmath1 strings the consensus string of @xmath7 , denoted as @xmath88 ,",
    "is such that @xmath89 $ ] is the most - frequent character in @xmath79 $ ] for all @xmath90 .",
    "ties are broken by selecting the lexicographically first such character , however , we note that the tie - breaking will not affect our arguments .",
    "we denote the sum hamming distance between a string , @xmath9 , and a set of strings , @xmath7 , as @xmath91 .",
    "observe that the consensus string @xmath88 minimizes @xmath92that is no other string @xmath12 is closer to @xmath7 than @xmath88 .",
    "however , some @xmath93 could achieve @xmath94 and we refer to such strings as _ majority strings _ because they are obtained by picking a most - frequent character at every position with ties broken arbitrarily .",
    "consensus string with outliers _ problem can now be succinctly stated as follows : given a set @xmath7 of strings and integers @xmath5 and @xmath4 , the objective is to find a subset @xmath95 of size @xmath96 such that @xmath97 , if it exists .",
    "given a subset @xmath95 we can compute @xmath98 in polynomial time by choosing a majority string for @xmath98 . if we are given @xmath98 for the optimal solution @xmath6 ( but not given @xmath6 itself ) then we can recover @xmath6 from @xmath98 and @xmath7 in polynomial - time since @xmath6 is the @xmath8 strings in @xmath7 that are closest to @xmath98 .",
    "similarly , given any string @xmath12 , we denote @xmath99 as the subset of @xmath7 containing the @xmath100 strings closest to @xmath12 . by construction @xmath99",
    "satisfies the following inequality : @xmath101 for any subset @xmath102 of @xmath7 of size @xmath100 .",
    "we prove the existence of a ptas for the _ min - distance consensus string with outliers _ problem .",
    "our algorithm is based on random sampling . for a given value of @xmath32",
    ", the algorithm selects a value for the parameter @xmath103 based on @xmath32 , picks @xmath103 strings @xmath104 from @xmath7 uniformly at random ( with replacement ) , and returns the consensus string corresponding to @xmath102 .",
    "the next lemma shows that if @xmath102 was taken from a ( unknown ) optimal solution @xmath6 , rather than from the entire input set @xmath7 , then in expectation @xmath105 is almost as good the consensus string for the set @xmath6 .",
    "our arguments rely on well - known concentration bounds for sums of independent random variables .",
    "we use the following variant of the hoeffding s bound  @xcite given by grimmett and stirzaker @xcite .",
    "[ prop : hoeff ] * ( hoeffding s bound ) * let @xmath106 be independent random variables such that @xmath107 for all @xmath81 .",
    "let @xmath108 and the expected value of @xmath109 be @xmath110 $ ] then it follows that : @xmath111 \\geq t ] \\leq \\exp\\left(\\frac{-2t^2}{\\sigma_{i=1}^n \\left(b_i - a_i\\right)^2}\\right).\\ ] ]    [ lem : min_d ] for all @xmath30 and @xmath112 , there exists a value of @xmath103 such that the following holds : if @xmath7 is a set of length-@xmath1 strings over the alphabet @xmath3 , where @xmath113 , and @xmath102 is a subset of @xmath7 of size @xmath103 , @xmath114 , chosen uniformly at random , then @xmath115 \\leq ( 1 + \\epsilon)d(s , c(s))$ ] .",
    "we prove that there exists a @xmath103 such that @xmath115 \\leq ( 1 + 2\\epsilon)d(s , c(s))$ ] . applying this weaker inequality with @xmath116",
    "then proves the statement of the lemma .",
    "we assume , without loss of generality , that @xmath88 is equal to @xmath117 , @xmath118 , and @xmath119 . we restrict interest to column @xmath81 of @xmath7 , where @xmath120 , let @xmath121 be the number of nonzero symbols in column @xmath81 and let @xmath122 .",
    "observe that @xmath123 is equal to the sum over @xmath81 of the number of strings @xmath124 such that @xmath84 \\neq c(s')[i]$ ] .",
    "by linearity of expectation it is sufficient to prove that for every @xmath81 we have @xmath125 , c(s')[i ] ) ] \\leq ( 1 + 2\\epsilon)d_i$ ] .",
    "first , we assume @xmath121 is at most @xmath126 .",
    "let @xmath127 be the probability that @xmath128 \\neq 0 $ ] .",
    "it follows that @xmath125 , c(s')[i])]$ ] is at most @xmath129 .",
    "we determine an upper bound on the probability @xmath127 as follows : @xmath130 since @xmath131 , we get : @xmath132 it follows from the last inequality , and that @xmath119 , that @xmath133 .",
    "hence , we obtain the following bound on @xmath125 , c(s')[i])]$ ] :    @xmath134 , c(s')[i ] ) ]   \\leq d_i(1 - q ) + qn                                 \\leq d_i + 2 \\left ( \\frac{d_i}{n}\\right)^2 n                                \\leq ( 1 + 2 \\epsilon)d_i\\ ] ]    next , we assume that @xmath135 .",
    "we say that a symbol @xmath136 is a _ good _ symbol if there are at least @xmath137 strings in @xmath7 that have the symbol @xmath47 at column @xmath81 ; any symbol that is not good is _",
    "bad_. if @xmath128 $ ] is a good symbol then @xmath138 , c(s')[i])$ ] is at most @xmath139 and hence , is at most @xmath140 since @xmath135 .",
    "let @xmath141 be the probability that @xmath128 $ ] is a bad symbol then , @xmath125 , c(s')[i])]$ ] is upper bounded by @xmath142 .",
    "lastly , we determine an upper bound on @xmath141 to complete the proof .",
    "let @xmath47 be a bad symbol and @xmath143 be the probability that @xmath128 $ ] is equal to @xmath47 .",
    "we note that in order for @xmath128 $ ] to be @xmath47 , there has to be more positions equal to @xmath47 than @xmath144 in @xmath145 $ ] .",
    "let @xmath109 be the difference between the number of positions equal to @xmath47 and the number of positions equal to @xmath144 in @xmath145 $ ] .",
    "it follows that @xmath146 $ ] .",
    "let @xmath147 be an indicator variable which is @xmath148 if @xmath149 $ ] is equal to @xmath47 , -1 if it is equal to @xmath144 , and @xmath144 otherwise . since @xmath47 is a bad symbol , there are at least @xmath150 more positions equal to @xmath144 than positions equal to @xmath47 in @xmath145 $ ] and therefore , @xmath151 = \\pr[s'_j[i ] = 0 ] - \\pr[s'_j[i ] = \\alpha ] \\leq - \\epsilon^2 $ ] . by linearity of expectation ,",
    "we obtain @xmath110 = \\sigma_{j=1}^r e[x_j ] \\leq - r\\epsilon^2 $ ] . using this inequality",
    ", we get @xmath152 \\leq \\pr[x - e[x ] \\geq r\\epsilon^2]$ ] .",
    "since the @xmath147 variables are independent and difference between the upper and lower bound of @xmath147 is @xmath153 , we can use hoeffding s inequality to obtain the following bound .",
    "@xmath111 \\geq r\\epsilon^2 ] \\leq \\exp \\left ( \\frac{-2 r^2 \\epsilon^4}{r 2 ^ 2 } \\right)= \\exp \\left ( \\frac{r \\epsilon^4}{2}\\right)\\ ] ] by choosing @xmath154 , we get @xmath155 .",
    "finally , we bound @xmath141 as follows : @xmath156 .",
    "we can now use the upper bound on @xmath141 and our assumption that @xmath135 to bound @xmath125 , c(s')[i])]$ ] : @xmath134 , c(s')[i ] ) ]        \\leq ( 1-p)(1+\\epsilon)d_i + pn   \\leq ( 1 + \\epsilon)d_i + \\epsilon^2n   \\leq ( 1 + 2\\epsilon)d_i.\\ ] ] this concludes the proof .",
    "lemma  [ lem : min_d ] gives a simple , deterministic ptas for _ min - distance consensus string with outliers_.    [ lem : min_d_det ] there exists a ptas for min - distance consensus string with outliers .",
    "it follows from lemma  [ lem : min_d ] that there exists an integer @xmath103 such that @xmath157 \\leq ( 1+\\epsilon)d(s^ * , c(s^*))$ ] if @xmath102 , the set of @xmath103 of strings chosen from @xmath7 , is from an ( unknown ) optimal solution @xmath6 .",
    "some subset @xmath102 of @xmath6 must achieve expectation .",
    "the algorithm guesses this set @xmath102 by trying all possible @xmath158 subset of @xmath7 of size @xmath103 .",
    "let @xmath159 .",
    "the algorithm returns the set @xmath99 of the @xmath100 strings closest to @xmath12 .",
    "this set satisfies @xmath160 , concluding the proof .",
    "if the number of outliers @xmath5 is small compared to @xmath0 , i.e.  @xmath161 , then with probability @xmath162 a random subset @xmath102 of @xmath103 strings is a subset of an optimal solution @xmath6 .",
    "we use this to give a randomized eptas for _ min - distance consensus string with outliers_.    [ lem : min_d_rand ] there exists a randomized eptas for min - distance consensus string with outliers for inputs when @xmath38 for @xmath16 .",
    "the algorithm runs in time @xmath163 and outputs a @xmath17-approximate solution with probability @xmath164 .    we give a polynomial - time algorithm that returns a @xmath17-approximate solution with probability @xmath165 . repeating this algorithm @xmath166 times then yields the statement of the theorem .",
    "the algorithm selects a value for @xmath103 such that for a random subset @xmath102 of the unknown optimal solution @xmath6 the inequality @xmath157 \\leq ( 1+\\frac{\\epsilon}{3})d(s^ * , c(s^*))$ ] holds .",
    "it follows from lemma  [ lem : min_d ] that this can be done so that @xmath103 only depends on @xmath32 .",
    "next , @xmath103 strings from @xmath7 are selected uniformly at random ( with replacement ) to form a subset @xmath102 .",
    "let @xmath167 .",
    "the algorithm then returns the set @xmath99 of the @xmath100 strings closest to @xmath12 .",
    "it remains to find a sufficient lower bound of the probability that the returned set is a @xmath17-approximation .",
    "since @xmath38 , it follows that the probability that @xmath102 is taken from an ( unknown ) optimal solution @xmath6 is at least @xmath168 .",
    "if @xmath102 is taken from @xmath6 then by lemma  [ lem : min_d ] we have that @xmath157 \\leq ( 1+\\frac{\\epsilon}{3})d(s^ * , c(s^*))$ ] .",
    "next , we assume otherwise . by markov s inequality @xcite the probability that @xmath169 exceeds expectation by a factor at least @xmath170 is at most @xmath171 .",
    "hence , with probability @xmath172 for some function @xmath58 of @xmath32 we have that : @xmath173 which is at most @xmath174 when @xmath175 . in particular , this holds if @xmath176 , concluding the proof .",
    "the best way to view theorem  [ lem : min_d_rand ] is as a performance guarantee on a natural heuristic for the problem when the parameter @xmath103 is chosen appropriately .",
    "we note that one would expect natural inputs to contain substantially fewer outliers than @xmath177 , and that markov s inequality is a very pessimistic bound for the probability of achieving expectation .",
    "hence , it is likely that for reasonable inputs the above algorithm will perform much better in practise than the proved bounds .",
    "we now show that the ptas for the _ min - distance consensus string with outliers _ problem can be extended to obtain a ptas for the _ consensus string with max non - outliers _ problem .",
    "we recall that for this optimization problem , we are given @xmath7 and an integer @xmath4 and asked to find a set @xmath95 that maximizes @xmath26 and satisfies the constraint @xmath178 .",
    "[ thm : max_n_star ] there exists a ptas for consensus string with max non - outliers .",
    "we give a @xmath179-approximation algorithm that runs in @xmath180-time .",
    "we denote an ( unknown ) optimal solution as @xmath6 , and let @xmath181 .",
    "a subset @xmath182 is said to be _ feasible _ if @xmath183 .",
    "first , the algorithm enumerates all subsets of @xmath7 of size at most @xmath184 and keeps the largest feasible set .",
    "next , the algorithm guesses @xmath100 ( by trying all possibilities ) and applies the algorithm from theorem  [ lem : min_d_det ] to find a set @xmath99 of size @xmath100 and a string @xmath12 such that @xmath185 .",
    "it then constructs @xmath186 by removing the @xmath187 strings furthest away from @xmath12 from @xmath99 .",
    "since @xmath188 it follows that @xmath186 is feasible .",
    "the algorithm returns either @xmath186 or the largest feasible set found in the first phase , which ever is largest .",
    "the running time is clearly bounded by @xmath189 , so it remains to prove that the returned set is in fact a @xmath190-approximation of @xmath6 . if @xmath191 the algorithm finds and returns @xmath6 .",
    "next , if @xmath192 it follows that @xmath193 , concluding the proof .",
    "for reasonable instances of the _ min - distance consensus string with outliers _ problem , we expect the number of non - outliers to be greater than the number of outliers .",
    "as we have seen , theorem  [ lem : min_d_rand ] gives an eptas for most instances of the _ min - distance consensus string with outliers _ problem  namely those where @xmath38 for @xmath16 .",
    "when @xmath5 can not be upper bounded in this manner then the noise is much stronger than the signal , and there is little hope for accurate error correction .",
    "further , _ min - distance consensus string with outliers _ should not be seen as an error correction problem when @xmath5 is almost equal to @xmath0 , but rather the problem of finding the `` densest possible '' cluster of points in hamming space .",
    "determining whether the requirement that @xmath38 for @xmath16 is necessary in order to improve the ptas from theorem  [ lem : min_d_det ] to an eptas warrants further investigation .",
    "now , we prove this requirement is unavoidable since the general version of _ min - distance consensus string with outliers _ does not admit an eptas unless fpt = w[1 ] .",
    "[ thm_no_eptas ] there exists no eptas for _ min - distance consensus string with outliers _ , unless fpt = w[1 ] .",
    "the proof of theorem  [ thm_no_eptas ] is by reduction from the _ multicolored clique ( mcc ) _ problem . here",
    "input is a graph @xmath194 , an integer @xmath5 and a partition of @xmath195 into @xmath196 such that for each @xmath81 , @xmath197 $ ] is an independent set .",
    "the task is to determine whether @xmath194 contains a clique @xmath198 of size @xmath5 .",
    "observe that such a clique must contain exactly one vertex from each @xmath199 , since for each @xmath81 we have @xmath200 .",
    "it is known that mcc can not be solved in time @xmath201 , unless fpt = w[1 ]  @xcite .",
    "given an instance @xmath202 of mcc we produce in time @xmath201 an instance @xmath203 of _ min - distance consensus string with outliers _ with the following property .",
    "if @xmath194 has a @xmath5-clique then there exists an @xmath204 of size @xmath100 such that @xmath205 , whereas if no @xmath5-clique exists in @xmath194 then for each @xmath204 of size @xmath100 we have @xmath206 .",
    "the values of @xmath207 and @xmath208 will be chosen later in the proof , but the crux of the construction is that @xmath209 .",
    "hence , one could use the reduction together with an eptas for _ min - distance consensus string with outliers _ setting @xmath210 to solve the mcc problem in time @xmath211 .",
    "this reduction is a parameterized , gap - creating reduction where the size of gap decreases as @xmath5 increases but the decrease is a function of @xmath5 only .",
    "[ [ construction . ] ] construction .",
    "+ + + + + + + + + + + + +    we describe how the instance @xmath203 is constructed from @xmath202 .",
    "our construction is randomized , and will succeed with probability @xmath212 . to prove theorem  [ thm_no_eptas ] we have to change the construction to make it deterministic but for now let us not worry about that .",
    "we start by considering the instance @xmath202 and let @xmath213 .",
    "we partition the edge set @xmath214 into sets @xmath215 where @xmath216 as follows ;",
    "@xmath217 if @xmath218 , @xmath219 and @xmath220 .    edges of @xmath194 are unordered pairs @xmath221 of vertices of @xmath194 .",
    "an _ edge endpoint _",
    "@xmath222 is an _ ordered _ pair @xmath223 of vertices of @xmath194 such that @xmath221 is an edge of @xmath194 .",
    "we denote the set of all edge endpoints of @xmath194 by @xmath224 .",
    "there are two edge endpoints that correspond to the same edge . for two edge endpoints @xmath225 and @xmath226 that both correspond to the edge @xmath227 we say that @xmath228 , @xmath229 and that @xmath230 .",
    "for every @xmath231 define the set @xmath232 .    based on @xmath194 and @xmath5 ,",
    "we select two integers @xmath233 and @xmath234 , that satisfy the following proerties ; @xmath235 , @xmath236 for some @xmath237 and @xmath238 that depend only on @xmath5 .",
    "the exact value of @xmath233 and @xmath234 will be discussed later in the proof .",
    "we construct a set @xmath239 of strings , @xmath240 will act as a `` pool of random bits '' in our construction . for each endpoint",
    "@xmath241 we make a string @xmath242 as follows .",
    "@xmath243 for every @xmath141 , @xmath244 is a random binary string of length @xmath233 . for every @xmath141 and @xmath127 , @xmath245 is a random binary string of length @xmath234 . for each @xmath141 and vertex @xmath219",
    "we make an identification string @xmath246 of length @xmath233 .",
    "let @xmath81 be the smallest integer such that the edge endpoint @xmath247 is @xmath223 for some @xmath248 .",
    "we set @xmath249 .",
    "similarly , for every pair of integers @xmath250 and each edge @xmath251 make an identification string @xmath252 of length @xmath234 .",
    "let @xmath81 be the smallest integer such that @xmath253 .",
    "we set @xmath254 .",
    "we now make the set @xmath7 of strings in our instance . for each endpoint",
    "@xmath241 we make a string @xmath255 as follows .",
    "@xmath256 here @xmath257 if @xmath258 and @xmath259 otherwise . also ,",
    "@xmath260 if @xmath261 , @xmath219 and @xmath220 .",
    "otherwise @xmath262 .",
    "we refer to @xmath263 through @xmath264 as the _ vertex blocks _ of @xmath255 and the @xmath265 s are the _ edge blocks _ of @xmath255 .",
    "we refer to @xmath266s as the pth vertex block and to the the @xmath265s as the @xmath267th edge block .",
    "we set @xmath268 , @xmath269 , and @xmath270 , this concludes the construction . recall that @xmath100 is the size of the solution @xmath6 sought for and observe that @xmath67 is the length of the constructed strings in @xmath7",
    "we consider the constructed strings @xmath255 as random variables , and for every @xmath76 the character @xmath271 $ ] is also a random variable which takes value @xmath148 with probability @xmath164 and @xmath144 with probability @xmath164 .",
    "observe that for @xmath272 and any @xmath81 and @xmath273 the random variables @xmath271 $ ] and @xmath274 $ ] are independent . on the other hand",
    "@xmath271 $ ] and @xmath275 $ ] could be dependent .",
    "however , if @xmath271 $ ] and @xmath275 $ ] are dependent then , by construction @xmath271 = s_{i'}[j]$ ] .",
    "let @xmath25 such that @xmath276 .",
    "here we consider @xmath6 as a set of random string variables , rather than a set of strings .",
    "we are interested in studying @xmath277 for different choices of the set @xmath6 .",
    "we can write out @xmath277 as @xmath278 , c(s^*)[p])$ ] and so @xmath277 is the sum of @xmath67 independent random variables , each taking values from @xmath144 to @xmath100 .",
    "thus , when @xmath67 is large enough @xmath277 is sharply concentrated around @xmath279 $ ] .",
    "we turn our attention to @xmath279 $ ] for different choices of @xmath6 .",
    "the two main cases that we distinguish between is whether @xmath6 corresponds to the set of edge endpoints of a clique in @xmath194 or not . before proceeding to these cases , we need some additional definitions .",
    "let @xmath280 be a vector of positive integers .",
    "we define the random variable @xmath281 where @xmath282 is a random vector with same dimension as @xmath280 , such that each coordinate of @xmath282 is drawn from @xmath283 uniformly at random .",
    "the variable @xmath284 is interpreted as follows : start a one - dimensional random walk at @xmath144 , in each step of the walk we go left or right with probability @xmath164 .",
    "however , the length of the different steps varies , in step @xmath81 the walk jumps @xmath285 $ ] to the left or right .",
    "the value of @xmath284 is the offset from the origin at the end of the walk .",
    "the total _",
    "length _ of the random walk is @xmath286 $ ] whereas the _ number of steps _ of the walk is the dimension of @xmath280    let @xmath76 be a position in an edge block .",
    "what we mean by this is that @xmath271 $ ] is a character in @xmath287 .",
    "suppose no two strings of @xmath6 correspond to edge endpoints of the same edge .",
    "then @xmath288 , c(s^*[j]))$ ] is distributed as @xmath289 where @xmath280 is a @xmath100-dimensional vector of @xmath148s . specifically for all @xmath290 the @xmath271$]s",
    "are independent so @xmath291)$ ] is the majority character out of @xmath100 characters independently drawn from @xmath292 , and @xmath293 , s^*[j]))$ ] is the number of occurrences of the minority character .",
    "this is distributed as @xmath289 .",
    "again , let @xmath76 be a position in the @xmath267-edge block , but now suppose that @xmath6 contains @xmath294 pairs of edge endpoints that correspond to the same edge in @xmath215",
    ". @xmath6 can also contain single endpoints of edges from @xmath215 or both endpoints of edges in @xmath295 for @xmath296 but we do not count these . from the construction of the @xmath267-edge",
    "block it follows that @xmath288 , c(s^*[j]))$ ] is distributed as @xmath289 where @xmath280 is a @xmath297 dimensional vector with @xmath294 entries of value @xmath153 and @xmath298 entries with value @xmath148 .",
    "we define the random variable @xmath299 where @xmath248 is a vector with @xmath300 entries that are @xmath148 and @xmath294 entries that are @xmath153 .",
    "intuitively @xmath301 is the offset from @xmath144 of a random walk starting at @xmath81 of length @xmath103 , with @xmath294 steps of length @xmath153 and the remaining steps of length @xmath148 .",
    "we set @xmath302 $ ] .",
    "finally , we define @xmath303 as @xmath304    [ lem : expyes ] let @xmath6 be a subset of @xmath7 of size @xmath100 that corresponds to the set of edge endpoints of a @xmath5-clique in @xmath194 . then @xmath279 = e_{yes}$ ] .    for each position",
    "@xmath76 in a vertex block , consider the distribution of @xmath288 , c(s^*)[j])$ ] .",
    "there are @xmath305 edge endpoints in @xmath6 which are all incident to the same vertex @xmath248 , so the strings corresponding to these endpoints all have the same character at position @xmath76 .",
    "the remaining strings all have random characters at this position .",
    "hence @xmath288 , c(s^*)[j])$ ] is distributed as @xmath289 where @xmath280 is a @xmath306 dimensional vector with @xmath307 entries of value @xmath148 and one entry with value @xmath305 .",
    "it is easy to see that @xmath308 is in fact distributed as @xmath309 since we can make the step corresponding to the entry of value @xmath305 first , and this step will take the random walk to position @xmath305 or @xmath310 , but with respect to distance from @xmath144 these positions are symmetric .",
    "since there are @xmath311 positions in vertex blocks this accounts for the first term of the equation .    for each position",
    "@xmath76 in an edge block @xmath267 there are two strings in @xmath6 that correspond to edge endpoints of the same edge in @xmath215 .",
    "these two strings have the same character at position @xmath76 .",
    "all the other strings in @xmath6 correspond to edge endpoints of strings in @xmath295 where @xmath312 or @xmath313 .",
    "the characters at position @xmath76 for these strings are drawn independently .",
    "hence @xmath288 , c(s^*)[j])$ ] is distributed as @xmath314 $ ] .",
    "since there are @xmath315 positions in edge blocks this accounts for the second term of the equation .",
    "we now proceed to show that for any set @xmath6 that does not correspond to a set of edge endpoints of a @xmath5-clique in @xmath194 , @xmath279 $ ] is at least factor @xmath32 greater than @xmath303 , where @xmath32 depends only on @xmath5 .",
    "let @xmath316 be the set of edge endpoints corresponding to @xmath6 . define @xmath317 to be the set of edges @xmath318 such that @xmath319 and @xmath320 . clearly , @xmath321 , hence if @xmath322 for every @xmath141 , @xmath127 then @xmath323 for every @xmath141,@xmath127 .",
    "we start by proving that if there exists a @xmath141 , @xmath127 such that @xmath324 then @xmath279 $ ] is big .",
    "this proof is based on `` differentiating '' @xmath325 with respect to @xmath294 . in particular for integers @xmath81 , @xmath103 , @xmath294",
    "such that @xmath326 and @xmath327 define @xmath328 .",
    "[ clm : randwalk ] @xmath329 . if @xmath100 is divisible by @xmath330 then @xmath331 for all @xmath332 .",
    "furthermore , for every @xmath81,@xmath294 and @xmath103 we can compute @xmath333 in time polynomial in @xmath81 and @xmath103 .",
    "the intuition of claim  [ clm : randwalk ] is as follows .",
    "a random walk with double steps is just the sum of independent random variables , with variables corresponding to single steps taking values from @xmath334 and variables corresponding to double steps taking values from @xmath335 .",
    "a double step has higher variance than the sum of two single steps .",
    "hence , if we do a random walk starting from @xmath144 of total length @xmath100 with @xmath294 double steps , then the expected distance from @xmath144 should increase as @xmath294 increases .",
    "furthermore , as @xmath294 increases the variance of the random walk increses linearly , so the standard deviation increases less and less with each increment of @xmath294 .",
    "thus it is natural to expect that as @xmath294 increases , each successive step increases the expected offset from @xmath144 less and less .",
    "quite surprisingly this does not hold in general ( we do not prove this , as it is not important for our results ) .",
    "however , when the length of the random walk is a multiple of @xmath330 , the claim does hold .",
    "recall that @xmath336 $ ] where @xmath301 is a random variable denoting the final position of a random walk of length @xmath103 , with @xmath294 double steps , starting at @xmath81 . here",
    "@xmath81 is an integer and might be negative .",
    "conditional expectation yields the following recurrence for @xmath333 , @xmath337 .",
    "@xmath338 it is easy to see that one of the three cases must apply when @xmath337 - and @xmath333 is only defined for these values .",
    "observe that if @xmath339 and @xmath340 then both the second and the third case apply .",
    "the recurrence above also yields a polynomial time algorithm to compute @xmath333 .",
    "the recurrence above together with definition of @xmath341 yields the following recurrence for @xmath341 , for @xmath342 and @xmath340 . @xmath343 a straightforward induction using this recurrence shows that @xmath344 for all @xmath345 , proving that @xmath329 .",
    "define @xmath346 .",
    "observe that @xmath347 is only well defined when @xmath342 and @xmath327 . inserting the recurrence for @xmath341 into the definition of @xmath347 yields the following recurrence for @xmath347 .",
    "@xmath348 we prove that if @xmath103 is divisible by @xmath330 then @xmath349 and for all @xmath350 we have @xmath351 .",
    "these two facts prove that for @xmath327 we have @xmath352 which is precisely the last statement of the claim .    for integers",
    "@xmath81 , @xmath345 , @xmath294 such that @xmath342 define @xmath353 to be the number of one dimensional walks of length @xmath103 with @xmath294 double steps and @xmath300 unit steps that start in @xmath144 and end in @xmath81 .",
    "observe that @xmath354 .",
    "for even @xmath355 , expanding equation  [ eqn : delta2 ] for @xmath356 exhaustively yields the following expression . @xmath357 } \\big{/ } 2^{r-4 } = \\big{[}-w^0_{r-4,t-2 } + w^2_{r-4,t-2}\\big { ] } \\big{/ } 2^{r-3}.\\end{aligned}\\ ] ] hence to prove the statement of the claim it suffices to show that if @xmath103 is divisible by @xmath330 then @xmath358 and @xmath359 for @xmath340 . for non - negative @xmath81 , the number of walks satisfies the following recurrence .",
    "the number of walks satisfies the following recurrence . @xmath360",
    "it is easy to see that when @xmath103 is even , @xmath361 . since @xmath362 when @xmath363 it follows that @xmath364 equation  [ eqn : walksnodouble ] directly implies @xmath358 .",
    "it remains to prove that if @xmath103 is divisible by @xmath330 then @xmath365 .",
    "for the case that @xmath366 , expanding equation  [ eqn : walks ] exhaustively yields the following expression .",
    "@xmath367 most importantly , if @xmath368 and @xmath369 is non - zero , then @xmath370 .",
    "we now prove that when @xmath300 is an even , positive integer and @xmath371 then @xmath372 .",
    "a special case of this inequality is that when @xmath103 is divisible by @xmath330 then @xmath365 .",
    "observe that when @xmath373 the inequality follows by equation  [ eqn : walksnodouble ] .",
    "we prove the inequality by induction on @xmath374 .",
    "observe that when @xmath103 decreases by @xmath153 while @xmath294 decreases by @xmath148 , @xmath374 decreases .",
    "hence for @xmath340 and @xmath375 we have @xmath376 now , for @xmath340 and @xmath377 we have that @xmath378 and @xmath379 . hence to prove that @xmath359 it suffices to prove @xmath380 . if @xmath381 then by equation  [ eqn : walksonlydouble ] we have that either @xmath382 or @xmath380 . in both cases",
    "this implies @xmath359 .",
    "finally , if @xmath383 then the induction hypothesis yields @xmath384 hence , when @xmath103 is divisible by @xmath330 then @xmath365 , concluding the proof of the claim .    set @xmath385 . by claim  [ clm : randwalk ] , @xmath386 .",
    "define @xmath387 observe that if @xmath388 then @xmath389 . selecting @xmath234 slightly larger than this",
    "will ensure the desired gap between @xmath390 and @xmath303 , so we set @xmath391 observe that the ratio between @xmath234 and @xmath233 is a function of @xmath5 .",
    "[ lem : goodset1 ] let @xmath6 be a subset of @xmath7 of size @xmath100 , where the corrresponding edge set @xmath317 has the property that @xmath392 for at least one pair @xmath393",
    ". then @xmath279 \\geq e_{no}^1 $ ] .",
    "for any position @xmath76 in an edge block number @xmath141 , @xmath127 , @xmath288 , c(s^*)[j])$ ] is distributed as @xmath394}$ ] where @xmath395 $ ] is the number of edges @xmath396 in @xmath215 such that for both endpoints of @xmath396 the strings corresponding to them are in @xmath6 .",
    "it follows that @xmath279 \\geq \\ell_2 \\cdot\\sum_{p , q } x^0_{n^*,t[p , q]}$ ] since here we are just counting the contribution of the edge block positions to the expectation . since @xmath397 it follows that @xmath398 } \\leq { k \\choose 2}$ ] .",
    "we can now use claim  [ clm : randwalk ] to lower bound the expectation of @xmath277 .",
    "in particular , we have that @xmath399 & \\geq \\sum_{p , q}\\big{(}\\ell_2 \\cdot ( n^*/2 - x^0_{n^*,t[p , q ] } ) \\big { ) }    = \\sum_{p , q}\\big{(}\\ell_2 \\cdot ( n^*/2 - x^0_{n^*,1 } + x^0_{n^*,1 } - x^0_{n^*,t[p , q ] } ) \\big { ) } \\\\ & = { k \\choose 2 } \\cdot \\ell_2 \\cdot ( n^*/2 - x^0_{n^*,1 } ) + \\ell_2 \\cdot ( { k \\choose 2 } x^0_{n^*,1 } - \\sum_{p , q}x^0_{n^*,t[p , q ] } ) \\\\ & = { k \\choose 2 } \\cdot \\ell_2 \\cdot ( n^*/2 - x^0_{n^*,1 } ) + \\ell_2 \\cdot \\big{(}{k \\choose 2 } x^0_{n^*,1 } - { k \\choose 2 } x^0_{n^*,0 } - \\sum_{p , q}\\sum_{t=1}^{t[p , q ] } \\delta x^0_{n^*,t}\\big { ) } \\\\ & = { k \\choose 2 } \\cdot \\ell_2 \\cdot ( n^*/2 - x^0_{n^*,1 } ) + \\ell_2 \\cdot \\big{(}{k \\choose 2 } \\delta x^0_{n^*,1 } - \\sum_{p , q}\\sum_{t=1}^{t[p , q ] } \\delta x^0_{n^*,t}\\big{)}\\end{aligned}\\ ] ] observe that if @xmath395=1 $ ] for all @xmath141 , @xmath127 then @xmath400 } \\delta x^0_{n^*,t } = { k \\choose 2 } \\delta x^0_{n^*,1}\\ ] ] and the second term of the last equation cancels .",
    "however this is not the case , since @xmath6 is assumed _ not _ to correspond to the set of endpoints of a set of edges that intersects with every @xmath215 .",
    "it follows that @xmath400 } \\delta x^0_{n^*,t } \\leq { k \\choose 2 } \\delta x^0_{n^*,1 } - \\delta\\ ] ] which in turn implies that @xmath401 \\geq { k \\choose 2 } \\cdot \\ell_2 \\cdot ( n^*/2 - x^0_{n^*,1 } ) + \\ell_2\\delta = e_{no}^1\\ ] ]    by lemma  [ lem : goodset1 ] we know that any set @xmath6 such that @xmath279 < e_{no}^1 $ ] corresponds to all the endpoints of an edge set @xmath317 such that for every @xmath393 we have @xmath402 .",
    "it remains to prove that if @xmath317 does not correspond to the edge set of a @xmath5-clique in @xmath194 then @xmath279 \\geq e_{no}^2 $ ] for an integer @xmath403 which is sufficiently large compared to @xmath303 .",
    "observe that for each @xmath231 there are exactly @xmath305 edges in @xmath317 that are incident to vertices of @xmath199 .",
    "what we prove is that if @xmath279 < e_{no}^2 $ ] then for every @xmath81 , the set of edges in @xmath317 that have an endpoint in @xmath199 all come from the same vertex . just as for the proof of lemma  [ lem : goodset1 ] we need a preliminary claim about the properties of certain random walks .",
    "let @xmath404 be the set of all vectors with all positive integer entries such that the sum of the entries is exactly @xmath100 and the sum of all the entries that are not @xmath148 is at most @xmath305 .",
    "let @xmath405 where @xmath406 is the vector in @xmath404 with one entry equal to @xmath305 .",
    "observe that for this choice of @xmath406 , @xmath407= x^{k-1}_{n^*-k+1,0}$ ] .",
    "set @xmath408 $ ]    [ clm : randomwalk2 ] for every @xmath409 , @xmath410 > 0 $ ] .",
    "hence @xmath411 is positive .",
    "furthermore , @xmath411 can be computed in time @xmath412 for some function @xmath58 .    to see that @xmath411",
    "can be computed in time @xmath412 for some function @xmath58 it is sufficient to observe that the size of the sample space of any variable @xmath413 is bounded by a function of @xmath5 and that @xmath414 is upper bounded by a function of @xmath5 as well .",
    "we now prove that @xmath411 is positive .",
    "consider a vector @xmath415 and let @xmath416 be a vector that contains all the entries of @xmath280 that are greater than @xmath148 , and possibly some entries that are @xmath148 such that the sum of the entries in @xmath416 is exactly @xmath305 .",
    "conditional expectation yields : @xmath417 = \\sum_{i =- k+1}^{k-1 } p[x_{\\vec{v } ' } = i ] \\cdot x^i_{n^*-k+1,0}.\\ ] ] observe that for every @xmath81 whose parity is not the same as @xmath305 we have that @xmath418 = 0 $ ] since every entry of @xmath416 is either added or subtracted to get @xmath419 and @xmath420 .",
    "furthermore , a simple induction ( see below ) shows that for every non - negative @xmath273 such that @xmath421 , @xmath422 .",
    "together these two facts imply that for all @xmath423 for which @xmath418 $ ] is non - zero we have @xmath424 .",
    "since such an @xmath81 must exist for any @xmath409 we have that @xmath410 > 0 $ ] .    finally , we have to prove that for every non - negative @xmath425 , @xmath422 .",
    "we do this by induction on @xmath103 . for @xmath426",
    "this clearly holds as @xmath427 . for @xmath326",
    "conditional expectation yields that @xmath428 if @xmath429 and @xmath430 if @xmath431 .",
    "this concludes the proof .",
    "we are now ready to prove the last part of the reduction .",
    "let @xmath432    [ lem : nocliqueexp ] let @xmath6 be a subset of @xmath7 of size @xmath100 that corresponds to all edge endpoints of a set @xmath317 of edges such that for every @xmath393 we have @xmath433 . if there exist two distinct vertices @xmath434 such that @xmath317 contains edges incident to both @xmath435 and @xmath436 then @xmath279 \\geq e_{no}^2 $ ] .",
    "consider a set @xmath6 satisfying the conditions of the lemma .",
    "the contribution to @xmath279 $ ] of the edge blocks is exactly @xmath437 .",
    "now , consider a vertex block @xmath81 such that there is exactly one vertex @xmath438 that is incident to edges of @xmath317 .",
    "this block contributes exactly @xmath439 to @xmath279 $ ] .",
    "finally , consider a block @xmath81 such that there are two distinct vertices @xmath434 such that @xmath317 contains edges incident to both @xmath435 and @xmath436 .",
    "let @xmath280 be a vector that for each vertex @xmath440 which is incident to at least one edge in @xmath317 , contains an entry which is exactly the number of edges in @xmath317 that @xmath248 is incident to .",
    "for each edge which is not incident to any vertices in @xmath199 the vector @xmath280 contains a entry with value @xmath148 .",
    "hence the sum of the entries of @xmath280 is @xmath100 , the sum of all entries in @xmath280 that are greater than @xmath148 is at most @xmath305 , and @xmath280 contains no entry which is @xmath305 .",
    "this is because exactly @xmath305 edges are incident to vertices in @xmath199 and two such edges are incident to distinct vertices .",
    "hence @xmath409 .",
    "now , observe that the vertex block @xmath81 contributes exactly @xmath441)$ ] to @xmath279 $ ] . by claim  [ clm : randomwalk2 ] ,",
    "@xmath442 \\leq x^{k-1}_{n^*-k+1,0 } - \\delta_2 $ ] .",
    "thus , @xmath401 \\geq { k \\choose 2 } \\cdot \\ell_2 \\cdot ( n^*/2 - x^0_{n^*,1 } ) +   k \\cdot \\ell_1 \\cdot ( n^*/2 - x^{k-1}_{n^*-k+1,0 } ) + \\ell_1\\delta_2 = e_{no}^2\\ ] ]    set @xmath443 . from equations  [ eqn",
    ": eyes ] , [ eqn : eno1 ] , [ eqn : eno2 ] and [ eqn : l2froml1 ] we conclude that there exist constants @xmath444 , @xmath445 and @xmath446 depending only on @xmath5 such that @xmath447 , @xmath448 and @xmath449 .",
    "furthermore , @xmath450 and the value of @xmath444 , @xmath445 and @xmath446 can be computed in time @xmath412 for some function @xmath58 .",
    "set @xmath451 and @xmath452 .",
    "then @xmath453 .",
    "we set @xmath454 and @xmath455 .",
    "[ [ a - randomized - analogue - of - theoremthm_no_eptas . ] ] a randomized analogue of theorem  [ thm_no_eptas ] .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    before proving theorem  [ thm_no_eptas ] we argue that the randomized construction works .",
    "specifically , we show that if _ min - distance consensus string with outliers _ has an eptas then _ mcc _ has a randomized fpt algorithm , implying that w[1 ] @xmath64 randomized fpt .",
    "the results proved in this section are not used in the proof of theorem  [ thm_no_eptas ] , but they provide useful insights on how the deterministic construction works .    [ lem : noeptas : concentration ] for any @xmath25 such that @xmath397 , @xmath456| > x \\cdot \\ell_1\\big { ] } \\leq 2\\exp\\left(-2\\frac{x^2}{\\kappa_l ( n^*)^2 } \\ell_1\\right).\\end{aligned}\\ ] ]    we have that @xmath457 , c(s^*)[p])$ ] . the @xmath458 , c(s^*)[p])$ ] s are independent random variables taking values from @xmath144 to @xmath100 . since @xmath459 it follows that @xmath460| > x \\cdot \\ell_1 ] = p[|d(s^ * , c(s^*))-e[d(s^ * , c(s^*))]| > \\frac{x}{\\kappa_l } \\cdot l]$ ] . by hoeffding s inequality ( proposition  [ prop : hoeff ] )",
    "it follows that @xmath461| > \\frac{x}{\\kappa_l } \\cdot l\\right ] & \\leq 2 \\exp\\left(-2\\left(\\frac{x}{\\kappa_ln^{*}}\\right)^2l\\right ) \\\\   & = 2\\exp\\left(-2\\frac{x^2}{\\kappa_l ( n^*)^2 } \\ell_1\\right)\\end{aligned}\\ ] ]    we now define @xmath233 .",
    "this value for @xmath233 is only valid for the randomized construction , and a different value for @xmath233 is used in the proof of theorem  [ thm_no_eptas ] . @xmath462",
    "recall that @xmath463 is the number of edges in the graph @xmath194 , so @xmath464 and hence @xmath465 for some @xmath58 depending only on @xmath5 .",
    "[ lem : randconstr ] if @xmath194 has a @xmath5-clique @xmath198 , let @xmath6 be the set of strings corresponding to edge endpoints of edges in @xmath198",
    ". then @xmath466 \\leq \\frac{1}{10(2m)^{n^*}}$ ] .",
    "if @xmath194 does not contain a @xmath5-clique , then the probability that @xmath7 contains a subset @xmath6 of size @xmath100 such that @xmath467 is at most @xmath468 .",
    "if @xmath194 has a @xmath5-clique @xmath198 , let @xmath6 be the set of strings corresponding to edge endpoints of edges in @xmath198 . then by lemma  [ lem : expyes ] , @xmath279 = d_{yes}$ ] .",
    "now , @xmath469 and hence , by lemma  [ lem : noeptas : concentration ] , @xmath470 \\leq p[|d(s^ * , c(s^*))-e_{yes}| > ( \\kappa_{yes } ' - \\kappa_{yes})\\ell_1 ] \\leq \\frac{1}{10(2m)^{n^*}}.\\ ] ] on the other hand , consider a set @xmath6 of size @xmath100 that does not correspond to the edge endpoints of a clique . if @xmath6 does not correspond to a set @xmath317 of edges such that @xmath433 for every @xmath141,@xmath127 , then @xmath279 \\geq e_{no}^1 > e_{no}$ ] .",
    "if @xmath6 corresponds to a set @xmath317 of edges such that @xmath433 , but @xmath317 is not the edge set of a clique in @xmath194 then there exists an @xmath81 and @xmath435 , @xmath471 such that @xmath472 contains edges incident to @xmath435 and to @xmath436 . in this case",
    "lemma  [ lem : nocliqueexp ] yields that @xmath279 \\geq e_{no}^2 = e_{no}$ ] . hence @xmath279",
    "\\geq e_{no}$ ] .",
    "finally , @xmath473 and @xmath474 and hence , by lemma  [ lem : noeptas : concentration ] , @xmath475 = p[e_{no}-d(s^ * , c(s^ * ) ) > ( \\kappa_{yes } ' - \\kappa_{yes})\\ell_1 ] \\leq \\frac{1}{10(2m)^{n^*}}.\\ ] ] thus , if @xmath194 does not contain a clique of size @xmath5 , the union bound yields that the probability that @xmath7 contains a subset @xmath6 of size @xmath100 such that @xmath467 is at most @xmath468 .",
    "we now prove a randomized analogue of theorem  [ thm_no_eptas ] .",
    "[ lem : randnoeptas ] if _ min - distance consensus string with outliers _ has an eptas then w[1 ] @xmath64 randomized fpt .",
    "assiming that _ min - distance consensus string with outliers _ has an eptas we give a randomized fixed parameter tractable algorithm for _ mcc _ with two sided error .",
    "we construct the instance to _ min - distance consensus string with outliers _ as described and run the eptas with @xmath476 .",
    "if the eptas returns a set @xmath6 such that @xmath477 the algorithm returns that the input graph @xmath194 contains a @xmath5-clique , otherwise we return that @xmath194 has no @xmath5-clique .",
    "the construction takes time @xmath478 for some function @xmath58 , and @xmath32 depends only on @xmath5 .",
    "hence the eptas runs in time @xmath479 for some function @xmath480 .",
    "thus the algorithm terminates in fpt time .",
    "if @xmath194 contains a @xmath5-clique , then by lemma  [ lem : randconstr ] , with probability at least @xmath481 there is a set @xmath6 of size @xmath100 such that @xmath482 .",
    "if this event occurs , the eptas will find a solution @xmath102 such that @xmath483 and hence the algorithm will correctly return `` yes '' .",
    "hence the probability of false negatives is at most @xmath484 .    if @xmath194 does not contain a @xmath5-clique , then by lemma  [ lem : randconstr ] , with probability at least @xmath485 for every set @xmath6 of size @xmath100 we hae @xmath486 .",
    "if this event occurs the algorithm correctly returns `` no '' and hence the probability if false positives is at most @xmath468 .",
    "this implies that there is a randomized fixed parameter tractable algorithm for _ mcc _ , which in turn shows that w[1 ] @xmath64 randomized fpt .",
    "[ [ a - deterministic - construction - and - proof - of - theoremthm_no_eptas . ] ] a deterministic construction and proof of theorem  [ thm_no_eptas ] .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    in order to prove theorem  [ thm_no_eptas ] we need to make the construction deterministic .",
    "we only used randomness to construct the set @xmath240 , all other steps are deterministic .",
    "we now show how @xmath240 can be computed deterministically instead of being selected at random , preserving the properties of the reduction . for this , we need the concept of near @xmath141-wise independence defined by naor and naor  @xcite .",
    "the original definition of near @xmath141-wise independence is in terms of sample spaces , we define near @xmath141-wise independence in terms of collections of binary strings .",
    "this is only a notational difference , and one may freely translate between the two variants .",
    "a set @xmath487 of length @xmath1 binary strings is @xmath488-independent if for any subset @xmath489 of @xmath198 of size @xmath141 , if a position @xmath490 is selected uniformly at random , then @xmath491 = \\alpha ] - 2^{-p}| \\leq \\epsilon.\\ ] ]    naor and naor  @xcite and alon et al .  @xcite",
    "give determinsitic constructions of small nearly @xmath5-wise independent sample spaces .",
    "reformulated in our terminology , alon et al .",
    "prove a slightly stronger version of the following theorem .",
    "[ thm : nearlyindep ] for every @xmath294 , @xmath141 , and @xmath32 there is a @xmath488-independent set @xmath487 of binary strings of length @xmath1 , where @xmath492 .",
    "furthermore , @xmath198 can be computed in time @xmath493 .",
    "we use theorem  [ thm : nearlyindep ] to construct the set @xmath240 .",
    "we set @xmath494 and construct an @xmath495-independent set @xmath198 of @xmath496 strings .",
    "these strings have length @xmath497 for some @xmath58 depending only on @xmath5 , and @xmath198 can be constructed in time @xmath498 for some @xmath480 depending only on @xmath5 .",
    "we set @xmath499 .",
    "observe that since @xmath234 is an integer multiple of @xmath233 , the length of the strings in @xmath240 is an integer multiple of @xmath233 .",
    "for every @xmath81 we set @xmath500 , where we used @xmath501 copies of @xmath502 such that @xmath242 is a string of length @xmath67 .",
    "the remaining part of the construction , i.e the construction of @xmath7 from @xmath240 remains unchanged . to distinguish between the deterministically",
    "constructed @xmath7 and the randomized construction , we refer to the deterministically constructed @xmath7 as @xmath503 .",
    "we now prove that for every @xmath504 of size @xmath100 , if @xmath6 is the set of strings in the randomized construction that corresponds to the same edge endpoints as @xmath505 , then @xmath506 is almost equal to @xmath279 $ ] .    for a subset @xmath507 of @xmath508 define @xmath509 and @xmath510 . for every @xmath511 ,",
    "define @xmath512 .",
    "hence for every @xmath81 and @xmath76 , @xmath513 = c_i$ ] .",
    "the construction of @xmath503 ( and @xmath7 ) from @xmath240 implies that for every @xmath76 , the substring there exists a function @xmath514 such that for any @xmath515 , @xmath516 = z_{f(i)}[p_j]$ ] . for any @xmath517 and @xmath518",
    "we define @xmath519 .",
    "this means that for a subset @xmath517 of size @xmath100 , the set @xmath520 is the set of @xmath100 strings in @xmath240 which @xmath521 $ ] and @xmath522 $ ] depend on . for every set @xmath517 of size @xmath100 and integer @xmath518 define @xmath523 to be a function such that for any @xmath524 , if @xmath525 then @xmath526,c(s^*(i)[p ] ) ) = d_j^i(\\alpha)$ ] and @xmath527,c(s_{det}^*(i)[p ] ) ) = d_j^i(\\alpha)$ ] .",
    "since @xmath528 $ ] depends in exactly the same way on @xmath529 $ ] for all @xmath524 the function @xmath530 is well defined . for every set @xmath517 of size @xmath100 and integer @xmath518 we have the following expression for @xmath531,c(s^*(i)_{det}[p_j]))$ ] .",
    "@xmath532,c(s^*_{det}(i)[p_j])\\right ) = \\ell_1 \\cdot \\sum_{\\alpha \\in \\{0,1\\}^{n^ * } } p[z^*(i)[p ] = \\alpha ] \\cdot d_j^i(\\alpha)\\end{aligned}\\ ] ] here the probability @xmath533 = \\alpha]$ ] is taken when @xmath141 is selected from @xmath534 uniformly at random .",
    "for the randomized construction we have that @xmath533 = \\alpha ] =   \\frac{1}{2^{n^*}}$ ] , which yields the following expression .",
    "@xmath535,c(s^*(i)[p_j])\\right)\\right ] = \\ell_1 \\cdot \\sum_{\\alpha \\in \\{0,1\\}^{n^ * } } \\frac{1}{2^{n^ * } } \\cdot d_j^i(\\alpha)\\end{aligned}\\ ] ] combining equations  [ eqn : derand1 ] and  [ eqn : derand2 ] yields the following bound .",
    "@xmath536,c(s^*_{det}(i)[p_j])\\right ) & - e[d(s^*(i)[p_j ] , c(s^*(i)[p_j]))]\\big{| } \\\\ & = \\ell_1 \\cdot \\left|\\sum_{\\alpha \\in \\{0,1\\}^{n^ * } } \\left(p[z^*(i)[p ] = \\alpha ] - \\frac{1}{2^{n^*}}\\right)\\cdot d_j^i(\\alpha)\\right|\\\\ \\nonumber & \\leq \\ell_1 \\cdot \\sum_{\\alpha \\in \\{0,1\\}^{n^ * } } \\left|\\left(p[z^*(i)[p ] = \\alpha ] - \\frac{1}{2^{n^*}}\\right)\\right|\\cdot n^ * \\\\ \\nonumber & \\leq \\ell_1 \\cdot \\epsilon \\cdot n^*\\end{aligned}\\ ] ] summing equation  [ eqn : derand3 ] over @xmath537 yields the desired bound for every @xmath517 of size @xmath100 .",
    "@xmath538\\big{| } \\leq \\ell_1 \\cdot \\kappa_l \\cdot \\epsilon \\cdot n^ * \\leq \\ell_1 \\cdot ( \\kappa_{yes'}-\\kappa_{yes})\\end{aligned}\\ ] ] equation  [ eqn : derand4 ] allows us to finish the proof of theorem  [ thm_no_eptas ] .",
    "for any set @xmath6 of size @xmath100 that corresponds to a clique in @xmath194 , we have that @xmath539 = e_{yes } = \\ell_1\\kappa_{yes}$ ] , and so by equation  [ eqn : derand4 ] , @xmath540 .",
    "for any set @xmath6 of size @xmath100 that does not correspond to a clique in @xmath194 , we have that @xmath539 \\geq e_{no } = \\ell_1\\kappa_{no}$ ] , and so by equation  [ eqn : derand4 ] , @xmath541 .",
    "since @xmath542 for some @xmath36 depending only on @xmath5 , an eptas for _ min - distance consensus string with outliers _ can be used to distinguish between images of `` yes '' instances of _ mcc _ and images of `` no '' instances of _ mcc _ in time @xmath201 for some function @xmath58 . hence _",
    "min - distance consensus string with outliers _ does not have an eptas unless fpt = w[1 ] , concluding the proof of theorem  [ thm_no_eptas ] .",
    "from theorem  [ thm_no_eptas ] we can extract intractability results for various parameterizations of _ consensus string with outliers_. in the proof of theorem  [ thm_no_eptas ] we reduced instances of _ mcc _ to an instance of _ consensus string with outliers _ where the size @xmath100 of the solution sought for is @xmath544 . here",
    "@xmath5 is the size of the clique sought for in the _ mcc _ instance .",
    "thus a fpt algorithm for _ consensus string with outliers",
    "_ parameterized by @xmath100 would give an fpt algorithm for _",
    "mcc_. this proves the following theorem .",
    "[ cor : n_star_w1 ] consensus string with outliers is w[1]-hard when parameterized by @xmath100 , even when @xmath545 .",
    "since an eptas for a problem implies an fpt algorithm for the problem parameterized by the value objective function  @xcite , theorem  [ cor : n_star_w1 ] immediately implies that _ consensus string with max non - outliers _ does not admit an eptas unless fpt = w[1 ] .",
    "this means that in some sense the ptas provided in theorem  [ thm : max_n_star ] is the best we can hope for .    in the context of error correction for dna fragment assembly , we expect the number @xmath5 of outliers to be reasonably small . a simple brute force algorithm for _ consensus string with outliers _ that tries all @xmath546 subsets of @xmath7 of size @xmath100 works in @xmath547 time .",
    "it is interesting whether we can significantly improve over this algorithm , in particular whether _ consensus string with outliers _ is fpt when parameterized by @xmath5 . using theorem  [ cor : n_star_w1 ] as a starting point , we show that _ consensus string with outliers _ parameterized by @xmath5 is w[1]-hard , even when the alphabet is binary",
    ".    it will be convenient to consider a set of strings @xmath548 of @xmath0 length-@xmath1 strings as a @xmath549 matrix , then , the @xmath81th _ column _ of @xmath7 is the vector @xmath550 , \\ldots , s_n[i]]^t$ ] .",
    "an instance of _ consensus string with outliers _ is given by a set @xmath7 of @xmath0 length-@xmath1 strings with input parameters @xmath5 and @xmath4 .",
    "we assume @xmath551 and @xmath552 since @xmath553 and @xmath554 produce trivial cases .",
    "we describe how to generate a _ consensus string with outliers _ instance with a set @xmath102 of @xmath555 strings of length @xmath556 and parameters @xmath557 and @xmath558 , where there exists a subset @xmath559 of @xmath100 outlier strings such that @xmath560 if and only if there exists a subset @xmath6 of @xmath100 non - outlier strings to the original instance such that @xmath178 .",
    "let @xmath561 , @xmath562 , @xmath563 and @xmath564 .",
    "the @xmath565 strings are generated as follows :",
    "1 .   for each string",
    "@xmath566 there exists a @xmath567-length string @xmath568 , where the first @xmath1 symbols of @xmath569 are equal to @xmath255 and the remaining @xmath570 symbols of @xmath569 are equal to 1 .",
    "we denote these subset of strings of @xmath102 as @xmath571 2 .",
    "the remaining @xmath572 length-@xmath567 strings are constructed so that each of the first @xmath1 columns of @xmath102 contain an equal number of positions equal to 0 and positions equal to 1 .",
    "the last @xmath570 positions are equal to 0 .",
    "[ direction_one_lemma ] for a consensus string with outliers instance containing a subset @xmath6 of @xmath100 non - outlier strings that satisfy @xmath178 , the previous construction produces an instance with a set @xmath559 of @xmath558 outlier strings that satisfy @xmath573 .    without loss of generality ,",
    "assume @xmath98 is equal to @xmath117 .",
    "let @xmath559 be the @xmath100 strings of @xmath571 corresponding to @xmath6 .",
    "then we claim @xmath574 .",
    "since there exists @xmath572 strings equal to 0 , and @xmath0 strings equal to 1 at the last @xmath575 positions , it follows that @xmath576 = 0 $ ] for all @xmath577 . by our assumption that @xmath559 is equal to @xmath6 it follows that the contribution of these @xmath575 positions to @xmath578 is @xmath579 .",
    "now consider the first @xmath1 positions , which we remind the reader that they contain an equal number of 0 s and 1 s .",
    "since we eliminate @xmath100 strings from @xmath102 the contribution to @xmath578 is at most @xmath580 , concluding the proof .    for the reverse direction ,",
    "we need to prove that the existence a subset @xmath559 of @xmath100 outlier strings in @xmath102 that satisfy the constraint @xmath581 , implies the existence of subset @xmath6 of @xmath100 strings in @xmath7 that satisfy the constraint @xmath582 .",
    "[ direction_two_lemma ] the @xmath558 outlier strings in @xmath102 correspond to a subset @xmath6 of @xmath100 non - outlier strings in @xmath7 where @xmath582 .",
    "let @xmath559 be a set of @xmath100 outlier strings in @xmath102 that correspond to the minimum distance , _",
    "@xmath583 for any subset @xmath584 that is not equal to @xmath559 .",
    "since there are @xmath572 strings of @xmath102 that are equal to 0 in the last @xmath575 positions , and @xmath0 strings of @xmath102 that are nonzero at these positions , it follows that @xmath576 = 0 $ ] for all @xmath577 .",
    "we argue that @xmath559 is contained in @xmath571 . from the pigeonhole principle",
    "it follows that there exists at least one string , say @xmath585 , that is not in @xmath559 but is contained @xmath571 . for contradiction ,",
    "we assume there exists a string , say @xmath586 , that is contained in @xmath559 but not contained in @xmath571 .",
    "note that @xmath587 because at the last @xmath570 positions we have : @xmath588 equal to 0 , @xmath589 equal to 1 , and @xmath590 equal to 0 .",
    "let @xmath591 . by definition of @xmath592 ,",
    "we have @xmath593 , which can be bounded as follows :    @xmath594    we contradict the fact that @xmath595 is a minimal solution solution and all outlier strings in @xmath559 are contained in @xmath592 .",
    "the last @xmath570 positions will have at least @xmath596 mismatches with @xmath588 and it follows that the bound @xmath597 is achieved when @xmath598 .",
    "our main theorem follows direction from lemma [ direction_one_lemma ] and lemma [ direction_two_lemma ] .",
    "[ cor : k_w1 ] consensus string with outliers is w[1]-hard when parameterized by @xmath5 , even when @xmath545 .",
    "in this section , we prove _ consensus string with outliers _ is fixed - parameter tractable with respect to the parameter @xmath599 when the alphabet size is bounded by a constant . for the remainder of this section",
    ", we make the assumption that @xmath600 ; otherwise _ consensus string with outliers _ can trivially be solved in polynomial time .",
    "the algorithm and analysis are nearly identical to that demonstrating _ consensus patterns _ is fixed - parameter tractable with respect to the parameterization @xmath50 and bounded alphabet size @xcite , where @xmath36 is the average error between the consensus string and the length-@xmath1 substrings @xmath569 .",
    "first , we define some terms and notation that will be used in this section .",
    "a _ hypergraph _",
    "@xmath601 consists of a set of vertices @xmath602 and a collection of edges @xmath603 , where each edge is a subset of @xmath602 .",
    "given two hypergraphs , @xmath604 and @xmath601 , we say @xmath605 appears at @xmath606 as a _ partial hypergraph _ if there is a bijection @xmath607 between the elements of @xmath608 and @xmath609 such that for every edge @xmath610 there exists and edge @xmath611 ( where the mapping @xmath607 is extended to the edges the obvious way ) .",
    "for example , if @xmath605 has the edges @xmath612 , @xmath613 , and @xmath194 has the edges @xmath614 , @xmath615 , @xmath616 , then @xmath605 appears as a partial hypergraph at @xmath617 and at @xmath618 . given two hypergraphs , @xmath604 and @xmath601",
    ", we say that @xmath605 appears at @xmath606 as _ subhypergraph _ if there is such a bijection @xmath607 where for every edge @xmath619 , there is an edge @xmath620 with @xmath621 .",
    "for example , let the edges of @xmath605 be @xmath612 , @xmath613 , and let the edges of @xmath194 be @xmath622 , @xmath618 .",
    "an _ edge cover _ of @xmath605 is a subset @xmath623 such that each vertex of @xmath608 is contained in at least one edge of @xmath624 .",
    "the edge cover number @xmath625 is the size of the smallest edge cover in @xmath605 .",
    "fractional edge cover _ is an assignment @xmath626 $ ] such that @xmath627 for every vertex @xmath248 .",
    "the _ fractional cover number _ , denoted as @xmath628 , is the minimum of @xmath629 taken over all fractional edge covers @xmath630 .",
    "marx @xcite demonstrated _ consensus patterns _ can be solved in @xmath631 by constructing a hypergraph @xmath194 from the _ consensus patterns _ instance , defining a combinatorial characterization of a solution to the instance with respect to the hypergraph respresentation , and enumerating ( efficiently ) over all subhypergraphs in @xmath194 with the defined combinatorial characterization .",
    "it is shown that hypergraphs having at most @xmath36 vertices and at most @xmath632 edges need to be considered ( proposition 6.3 in @xcite ) , and that any edge of size greater than @xmath633 can be removed from @xmath194 and all subhypergraph corresponding to a solution to the original _ consensus patterns _ instance can be retained , if they exist .",
    "the enumeration step is completed by considering all possible hypergraph with at most @xmath36 vertices and at most @xmath632 edges , and for each such hypergraph , @xmath634 , determining every place where @xmath634 appears in @xmath194 as a subhypergraph .",
    "this paradigm for solving the _ consensus patterns _ problem makes use of an efficient algorithm for finding all the places @xmath606 in @xmath194 where @xmath605 appears as hypergraph for two given hypergraphs @xmath604 and @xmath601 .",
    "the result of marx @xcite , which proves a tight upper bound on the time required to perform this enumeration step , is essential .",
    "the following result by friedgut and kahn @xcite gives a bound on the maximum number of times a hypergraph @xmath604 can appear as partial hypergraph in a hypergraph @xmath194 with @xmath463 edges , i.e.  the maximum number of different subsets @xmath606 where @xmath605 can appear in @xmath194 .",
    "[ thm : fk ] @xcite let @xmath605 be a hypergraph with fractional cover number @xmath628 , and let @xmath194 be a hypergraph with @xmath463 edges .",
    "there are at most @xmath635 different subsets @xmath606 such that @xmath605 appears in @xmath194 at @xmath609 as partial hypergraph .",
    "furthermore , for every @xmath605 and sufficiently large @xmath463 , there is a hypergraph with @xmath463 edges where @xmath605 appears @xmath636 times .",
    "marx @xcite extended this theorem by giving a bound on the running time required to enumerate through all possible partial hypergraphs of a given hypergraph @xmath194 .",
    "in particular , if @xmath605 is a hypergraph with fractional cover number @xmath628 , and @xmath194 is a hypergraph with @xmath463 edges and the size of each edge is at most @xmath1 then hypergraph @xmath605 can appear in @xmath194 as subhypergraph at most @xmath637 times . given hypergraphs @xmath638 and @xmath601 , if there are @xmath294 places in @xmath194 where @xmath605 appears as subhypergraph then obviously we can not enumerate all of them in less than @xmath294 steps , however , there exists an algorithm that performs this enumeration in time that is polynomial in the upper bound @xmath637 .",
    "we refer to this algorithm as _ find - subhypergraph_.    [ thm4 ] @xcite let @xmath639 be a hypergraph with fractional cover number @xmath628 , and let @xmath640 be a hypergraph where each edge has size at most @xmath1 .",
    "there is an algorithm that enumerates in time @xmath641 every subset @xmath606 where @xmath605 appears in @xmath194 as a subhypergraph .    given a _ consensus string with outliers _ instance with a set @xmath7 of @xmath0 length-@xmath1 strings and integer @xmath100",
    ", we define a minimal solution for this instance as a set @xmath642 and length-@xmath1 string @xmath643 , where @xmath644 is minimal .    [",
    "thm : d_fpt ] consensus string with outliers can be solved in time @xmath645    let @xmath646 be an instance of _ consensus string with outliers _ with solution @xmath6 and @xmath9 denote the consensus string corresponding to @xmath6 . clearly , @xmath647 for at least one @xmath648 and thus ,",
    "if there exists a solution to a consensus string for @xmath6 then it can be found by considering all @xmath649 and checking if any string that has distance at most @xmath36 from @xmath650 is a consensus string for some subset of strings of @xmath7 of size @xmath100 .",
    "next , we show how to perform this analysis for one particular string @xmath649 .",
    "it follows that since there are at most @xmath0 possibilities for choosing @xmath650 , the running time of our algorithm for _ consensus string with outliers _ will be the running time of the following algorithm multiplied by a factor of @xmath0 .",
    "given @xmath649 , we construct a hypergraph @xmath651 , where @xmath652 and the edge set describes the possible strings in the set of non - outlier strings of @xmath7 . for each @xmath566",
    ", there exists an edge @xmath653 if and only if the symbol at the position @xmath5 of @xmath650 is not equal to the symbol at the position @xmath5 of @xmath255 .",
    "clearly , @xmath194 has at most @xmath0 edges .",
    "suppose @xmath6 is a solution to the original instance then we denote @xmath604 as the partial hypergraph in @xmath194 that contains the @xmath100 edges corresponding to the strings in @xmath6 .",
    "let @xmath642 and @xmath643 be a minimal solution to our original instance .",
    "denote @xmath85 as the set of positions where @xmath643 and @xmath650 differ and let @xmath634 be the subhypergraph of @xmath605 induced by @xmath85 , i.e.  the vertex set of @xmath634 is equal to the vertices corresponding to the positions in @xmath85 , and for each edge @xmath654 there is an edge @xmath655 in @xmath634 . since @xmath634 is a subhypergraph of @xmath605 and @xmath605",
    "is a partial hypergraph of @xmath194 , it follows that @xmath634 appears in @xmath194 at @xmath85 as a subhypergraph .",
    "the following proposition shows the fractional cover number of @xmath634 is at most 5/2 since the definition of a minimal solution to _ consensus patterns _ is identical to our definition of a minimal solution to _ consensus string with outliers_.    [ prop : frac_cover_no ] @xcite let @xmath656 be a minimal solution to a consensus patterns instance , then the hypergraph @xmath657 corresponding to @xmath656 has fractional cover number at most @xmath658",
    ".    we can find all possible places @xmath85 by enumerating every suitable hypergraph @xmath634 and using theorem [ thm4 ] to find all places where @xmath634 appears in @xmath194 as a subhypergraph . in order to adequately bound on the running time",
    "indured by using the algorithm corresponding to theorem [ thm4 ] , a bound on the size of the edges in @xmath194 is required .",
    "it follows from the work of marx @xcite that we can remove every edge of size greater than @xmath659 from @xmath194 ( and @xmath605 respectively ) .",
    "let @xmath660 ( and @xmath661 respectively ) be the resulting hypergraph and @xmath662 be the subhypergraph of @xmath661 induced by @xmath85 . since @xmath662 is subhypergraph of @xmath660 and the fractional edge cover number can be bounded by a constant ( proposition [ prop : frac_cover_no ] ) , we can find all the possible places @xmath85 by enumerating every hypergraph @xmath657 on @xmath36 vertices having fractional cover number at most @xmath658 and finding every place in @xmath660 where @xmath657 appears .",
    "the following proposition demonstrates that we only need to consider hypergraphs that have @xmath663 edges , further restricting the hypergraphs that need consideration .",
    "[ prop:6_3 ] @xcite let @xmath656 be a minimal solution to a consensus string with outliers instance , and @xmath657 is the corresponding hypergraph , then it is possible to select @xmath632 edges of @xmath662 in such a way that if we delete all other edges , then the resulting hypergraph @xmath664 has fractional cover number at most 5 .    1 :",
    "for each string @xmath649 : 2 : construct the hypergraph @xmath660 on @xmath665 .",
    "3 : for each hypergraph @xmath664 having @xmath666 vertices and @xmath667 edges : 4 : if every vertex of @xmath664 is covered by at least 1/5 part of the edges then : 5 : for every place @xmath85 where @xmath664 appears in @xmath660 as a subhypergraph : 6 : for every string @xmath9 that differs from @xmath650 at the positions corresponding to @xmath85 : 7 : let @xmath25 of size @xmath100 , where @xmath668 , @xmath669 , @xmath670 . 8 : if @xmath671 , for all @xmath672 then : 9 : return @xmath650 and @xmath6",
    ". 10 : return `` no solution '' and halt .",
    "there are @xmath0 possible choices for @xmath650 in the first step and the remainder of the algorithm checks whether there is a consensus string that differs from @xmath650 in at most @xmath36 positions .",
    "constructing the hypergraph @xmath660 can be done in @xmath673 time .",
    "since the aim is to find strings @xmath9 where @xmath674 , we can assume that @xmath664 has at most @xmath36 vertices ; there are at most @xmath675 unique hypergraphs with at most @xmath36 vertices and at most @xmath632 edges since there are at most @xmath676 possibilities for each edge .",
    "therefore , step 3 enumerates through at most @xmath677 hypergraphs .",
    "the test in step 4 is trivial .",
    "step 5 is performed using the _ find - subhypergraph _ corresponding to theorem [ thm4 ] .",
    "it follows from the fact that the fractional cover number of @xmath678 is at most 5 and every edge of @xmath660 has size at most @xmath659 , that step 5 takes @xmath679 time .",
    "if @xmath678 appears at @xmath85 in @xmath660 as subhypergraph , then step 6 considers at most @xmath680 possible strings and testing each string takes @xmath673 time .",
    "therefore , the total running time is @xmath681 .",
    "we presented the _ consensus string with outliers _ problem with the aim to model error correction of genomic data , and demonstrated that studying its parameterized complexity and approximability leads to surprising theoretical results .",
    "we studied the complexity of _ consensus string with outliers _ with respect to different parameterizations , table [ tab : results ] summarizes these results .",
    "majority of these results are proved using standard parameterized reductions and hence , we leave them to the appendix .",
    "the most notable of these results demonstrates that _ consensus string with outliers _ parameterized by @xmath19 is fpt .",
    ".an overview of the fixed parameter tractability and intractability of the _ consensus string with outliers_. [ cols=\"<,^,^\",options=\"header \" , ]     [ tab : results ]    our results rule out the possibility of a @xmath17 approximation algorithm that has running time @xmath682 , while our ptas has running time @xmath683 .",
    "hence there is still a significant gap between known upper and lower bounds for the running time of approximation schemes for the problem . obtaining tighter bounds warrants further investigation .",
    "another problem that is fpt parameterized by objective function value , admits a ptas but is not known to admit an eptas is the _ consensus patterns _",
    "problem @xcite , which seems to be closely related to _ consensus string with outliers_. it is quite possible that our results on random walks , and hardness proofs could be useful to rule out an eptas for _ consensus patterns _ , which would answer an open problem given by fellows et al .",
    "@xcite , and for other problems as well .    99    p.k .",
    "agarwal and j.m .  phillips .",
    "an efficient algorithm for 2d euclidean 2-center with outliers .",
    ", pages 6475 , 2008 .",
    "n.  alon , o.  goldreich , j.  hstad and r.  peralta , simple construction of almost @xmath5-wise independent random variables . , 3(3 ) : 289304 , 1992 .",
    "a.  anagnostopoulos , f.  grandoni , s.  leonardi , and p.  sankowski .",
    "online network design with outliers .",
    ", pages 114126 , 2010 .",
    "a.  andoni , p.  indyk , and m.  patrascu .",
    "on the optimality of the dimensionality reduction method . , pages 449456 , 2006 .",
    "s.  arora .",
    "polynomial time approximation schemes for euclidean tsp and other geometric problems . , pages 2 - 11 , 1996 .",
    "s.  arora , polynomial time approximation schemes for euclidean traveling salesman and other geometric problems . , 45 , 5:753782 , 1998 .    b.  brejov , d.g .  brown , i.m",
    ".  harrower , and t.  vinar .",
    "new bounds for motif finding in strong instances . , pages 94105 , 2006 .",
    "b.  brejov , d.g .",
    "brown , i.m .",
    "harrower , a.  lpez - ortiz and t.  vinar .",
    "sharper upper and lower bounds for an approximation scheme for consensus - pattern . , pages 110 , 2005 .    c.  boucher and b.  ma .",
    "closest string with outliers .",
    ", 12(suppl 1):s55 , 2011 .",
    "m.  charikar , s.  khuller , d.m .",
    "mount , and g.  narasimhan .",
    "algorithms for facility location problems with outliers .",
    ", pages 642651 , 2001 .",
    "k.  chen .",
    "a constant factor approximation algorithm for @xmath5-median clustering with outliers . , pages 826235 , 2008 .",
    "downey , and m.r .",
    "parameterized complexity . , 1999 .",
    "y.  erlich , p.p .",
    "mitra , m.  delabastide , w.r .",
    "mccombie , and g.j .",
    "alta - cyclic : a self - optimizing base caller for next - generation sequencing . , 5:679682 , 2008    m.r .",
    "fellows , j.  gramm , and r.  niedermeier . on the parameterized intractability of motif search problems .",
    ", 26:141167 , 2006 .",
    "fellows , d.  hermelin , f.a .",
    "rosamond , and s.  vialette . on the parameterized complexity of multiple - interval graph problems . , 410(1):5361 , 2009    j.  flum , and m.  grohe .",
    "parameterized complexity theory . , 2006 .",
    "e.  friedgut , and j.  kahn . on the number of copies of one hypergraph in another .",
    ", 105:251-256 , 1998 .",
    "n.  garg . saving an epsilon : a 2-approximation for the @xmath5-mst problem in graphs . ,",
    "pages 396402 , 2005 .",
    "goemans , and d.p .",
    "williamson . a general approximation technique for constrained forest problems .",
    ", 24:296317 , 1995 .",
    "f.  grimmett , and d.  stirzaker .",
    "probability and random processes . , 3 edition , 2001 .    s.  har - peled , and y.  wang .",
    "shape fitting with outliers .",
    ", 33(2):269285 , 2004 .",
    "v.  hautamki , s.  cherednichenko , i.  krkkinen , t.  kinnunen , and p.  frnti . improving @xmath5-means by outlier removal . ,",
    "pages 978987 , 2005 .",
    "w.  hoeffding .",
    "probability inequalities for sums of bounded random variables . , 58(301 ) : 1330 , 1963 .",
    "hunt iii , m.v .",
    "marathe , v.  radhakrishnan , s.s .",
    "ravi , d.j .",
    "rosenkrantz , and r.e .",
    "stearns , nc - approximation schemes for np- and pspace - hard problems for geometric graphs . , 26(2):238274 , 1998    w.c .",
    "kao , and a.h .",
    "chan , and y.s .  song . : a reference - free short - read error correction algorithm .",
    "lanctot , m.  li , b.  ma , s.  wang , and l.  zhang . distinguishing string selection problems .",
    ", 185(1):4155 , 2003 .",
    "m.  li , b.  ma , and l.  wang , on the closest string and substring problems .",
    ", 49:157 - 171 , 2002 .",
    "m.  li , b.  ma , and l.  wang .",
    "finding similar regions in many sequences .",
    ", 65(1):7396 , 2002 .",
    "d.  marx .",
    "closest substring problems with small distances . , 38(4):12831410 , 2008 .",
    "d.  marx .",
    "efficient approximation schemes for geometric problems ? , 51(1 ) : 448459 , 2005 .",
    "d.  marx .",
    "parameterized complexity and approximation algorithms . , 51(1 ) : 6078 , 2008 .",
    "j.  naor and m.  naor .",
    "small - bias probability spaces : efficient constructions and applications . , 22(4 ) : 838856 , 1993 .",
    "r.  niedermeier .",
    "invitation to fixed - parameter algorithms . , 2006 .",
    "pevzner , h.  tang , and m.s .",
    "an eulerian path approach to dna fragment assembly .",
    ", 98:97489753 , 2001 .",
    "s.  sajjadian , c.  alkan , and e.  eichler . limitations of next - generation genome sequence assembly . , 8(1):6165 , 2011 .",
    "l.  salmela and j.  schrder . correcting errors in short reads by multiple alignments .",
    "venter et al . the sequence of the human genome . , 291:13041351 , 2001 .",
    "x.  yang , s.  aluru , and k.s .",
    "repeat - aware modeling and correction of short read errors . 12:s52 , 2011 .",
    "we prove that when the alphabet size is unbounded _ consensus string with outliers _ is w[1]-hard for every combination of the parameters @xmath1 , @xmath4 , and @xmath100 .",
    "we define an instance of _ clique _ by an undirected graph @xmath684 with a set @xmath685 of @xmath0 vertices , a set @xmath686 of @xmath463 edges , and a positive integer @xmath294 denoting the size of the desired clique .",
    "we generate a set @xmath7 of @xmath687 strings such that @xmath194 has a clique of size @xmath294 if and only if there is a subset of @xmath7 of size @xmath688 , denoted as @xmath6 , where there exists a string @xmath12 such that @xmath689 .",
    "we let @xmath690 and @xmath691 .",
    "we assume that @xmath350 since @xmath692 produces trivial cases .",
    "we construct a set of @xmath687 strings @xmath698 @xmath699 .",
    "every string has length @xmath294 and will encode one edge of the input graph .",
    "there will be @xmath700 corresponding for each edge , however , encode the edges in different positions . for string",
    "@xmath701 we encode edge @xmath702 , where @xmath703 , but letting position @xmath81 equal to @xmath704 and position @xmath76 equal to @xmath705 and the remaining positions equal to @xmath706 .",
    "hence , a string is given by @xmath707^{i - 1 } v_r [ c_{i , j , m } ] ^{j - i - 1 } v_s [ c_{i , j , m } ] ^{m - j}.\\ ] ]    to clarify our reduction , we give an example .",
    "let @xmath708 be an undirected graph with @xmath709 and edges @xmath710 and let our _ clique _ instance have @xmath194 and @xmath711 . using @xmath194 , we exhibit the above construction of @xmath712 strings , which we denote as @xmath7 .",
    "we claim that there exists a clique of size 3 if and only if there exists a string @xmath713 of length @xmath714 and subset @xmath6 of @xmath7 of size @xmath715 where @xmath178 .",
    "first , we show that for a graph with a clique of size @xmath294 , the above construction produces an instance of _ consensus string with outliers _ with a set @xmath6 , consensus string @xmath98 of length @xmath1 such that @xmath178 .",
    "let the input graph have a clique of size @xmath294 .",
    "let @xmath716 be the vertices in the clique @xmath198 of size @xmath294 and without loss of generality , assume @xmath717 .",
    "then we claim that the there exists a subset of @xmath718 vertices that have distance at exactly @xmath719 from the string @xmath720 .",
    "consider the first edge of the clique @xmath721 of the clique then it follows that the string @xmath722^{t - 2}$ ] , where edge @xmath103 has endpoints @xmath723 @xmath724 , is contained in the set of strings @xmath725 . clearly , @xmath726 . for each edge in @xmath198",
    "we have we have a string in @xmath7 that has distance @xmath719 from @xmath9 and our lemma follows from this construction .    for the reverse direction ,",
    "we need to prove that the existence a subset @xmath6 of size @xmath700 , where @xmath727 implies the existence of a clique in @xmath194 with @xmath294 vertices .",
    "let @xmath6 be the subset of @xmath7 of size @xmath728 such that @xmath9 has distance @xmath729 from each string in @xmath6 .",
    "since @xmath690 , @xmath730 , @xmath731 and he symbol @xmath706 occurs in only a single string in @xmath7 for all @xmath732 , @xmath733 and @xmath734 , it follows from the pigeonhole principle that the consensus string only contains symbols from the set @xmath694 . without loss of generality",
    "assume the consensus string is equal to @xmath735 for @xmath736",
    ". consider any pair @xmath737 , @xmath738 for @xmath739 and the set of strings @xmath740 . recall that @xmath741 contains a string corresponding to each edge @xmath742 in @xmath686 which has @xmath704 at the @xmath81th position and @xmath705 at the @xmath76th position and @xmath706 at all remaining positions .",
    "therefore , we can only find a string in @xmath741 that has distance @xmath719 from @xmath9 if @xmath743 is at the @xmath81th position and @xmath744 is at the @xmath76th position ; and such a string exists if and only if there is an edge in @xmath194 connecting @xmath743 to @xmath744 .",
    "hence , the consensus string @xmath9 implies there exists an edge between any pair of vertices in @xmath194 in the set @xmath745 and by definition the vertices form a clique .",
    "@xmath543    our main theorem follows directly from lemma [ direction_one_lemma ] and lemma [ direction_two_lemma ] .",
    "we note that the hardness for the combination of all three parameters also implies the hardness for each subset of the three ."
  ],
  "abstract_text": [
    "<S> a major impediment in the development of efficient full genome sequencing is the large portion of erroneous reads produced by sequencing platforms . </S>",
    "<S> error correction is the computational process that attempts to identify and correct these mistakes . </S>",
    "<S> several classical stringology problems , including the _ consensus string _ problem , are used to model error correction . however </S>",
    "<S> , a significant shortcoming of using these formulations is that they do not account for a few of the reads being too erroneous to correct ; these outlier strings potentially have great effect on the solution , and should be detected and removed . </S>",
    "<S> we formalize the problem of error correction with outlier detection by defining the _ consensus string with outliers _ problem . given @xmath0 length-@xmath1 strings @xmath2 over a constant size alphabet @xmath3 together with parameters @xmath4 and @xmath5 , the objective in the _ consensus string with outliers _ </S>",
    "<S> problem is to find a subset @xmath6 of @xmath7 of size @xmath8 and a string @xmath9 such that @xmath10 . here </S>",
    "<S> @xmath11 denotes the hamming distance between the two strings @xmath12 and @xmath13 . </S>",
    "<S> we prove the following results :    * a variant of _ consensus string with outliers _ where the number of outliers @xmath5 is fixed and the objective is to minimize the total distance @xmath14 admits a simple ptas . our ptas can easily be modified to also handle the variant of the problem where a hard upper bound @xmath4 on the total distance is given as input , and the size of @xmath6 is to be maximized . </S>",
    "<S> the approximation schemes are simple enough that our results are best viewed as a performance guarantee on natural heuristics for the problem when the parameters of the heuristic are chosen appropriately . </S>",
    "<S> * under the natural assumption that the number of outliers @xmath5 is small , the ptas for the distance minimization version of _ consensus string with outliers _ performs well . </S>",
    "<S> in particular , as long as @xmath15 for a fixed constant @xmath16 , the algorithm provides a @xmath17-approximate solution in time @xmath18 and thus , is an eptas . * in order to improve the ptas for _ consensus string with outliers _ to an eptas , the assumption that @xmath5 is small is necessary . </S>",
    "<S> specifically , when @xmath5 is allowed to be arbitrary the _ consensus string with outliers _ problem does not admit an eptas unless fpt = w[1 ] . </S>",
    "<S> this hardness result holds even for binary alphabets . * the decision version of _ consensus string with outliers _ </S>",
    "<S> is fixed parameter tractable when parameterized by @xmath19 . and </S>",
    "<S> thus , also when parameterized by just @xmath4 .    to the best of our knowledge , </S>",
    "<S> _ consensus string with outliers _ is the first problem that admits a ptas , and is fixed parameter tractable when parameterized by the value of the objective function but does not admit an eptas under plausible complexity assumptions . hence , the proof of our hardness of approximation result combines parameterized reductions and gap preserving reductions in a novel manner . </S>"
  ]
}
{
  "article_text": [
    "sensor networks are systems made of many small and simple sensors deployed over an area in an attempt to sense events of interest within that particular area . in general , the sensors have limited capacities in terms of say range , precision , etc .",
    "the ultimate information level for a sensor is a binary one , referring to its output .",
    "however , it is important to make a distinction according to the nature of this binary information .",
    "actually , it can be related to a @xmath0 information ( non - detection or detection ) or to relative @xmath1 motion information .",
    "for example , if the sensors are getting sound levels , instead of using the real sound level ( which may cause confusion between loud near objects and quieter close objects ) , the sensor may simply report whether the doppler frequency is suddenly changing , which can be easily translated in whether the target is getting closer or moving away . moreover",
    ", low - power sensors with limited computation and communication capabilities can only perform binary detection .",
    "we could also cite video sensors , with the intuitive reasoning : the target is getting closer if its size is increasing .",
    "the need to use that kind of sensor networks leads to the development of a model for target tracking in binary sensor networks . + we consider a sensor network , made with @xmath2 sensors ( e.g. video),with ( known ) positions .",
    "each sensor can only gives us a binary @xmath1 information @xcite , i.e. whether the target - sensor distance is decreasing ( @xmath3 ) or increasing ( @xmath4 ) .",
    "this `` choice '' can result from severe communication requirements or from the difficulties from fusing inhomogeneous data .",
    "even if many important works deal with proximity sensors @xcite , @xcite , we decide here to focus on the binary @xmath1 information @xcite . here",
    ", the aim is to estimate the parameters defining the target trajectory .",
    "even if our methods can be rather easily extended to more complex models of target motion , we decide to focus here on a constant velocity movement .",
    "actually , this framework is sufficiently general to present the main problems we have to face , as well as the foundations of the methods we have to develop for dealing with these binary data .",
    "[ sensorsh ] for an example .",
    "+    [ sensorsh ]    in a first time , the observability requirements are considered .",
    "then , we turn toward the development of specific estimation methods . especially , the new concept of the velocity plane is introduced as an exhaustive representation of the spatio - temporal sequence of binary data .",
    "it is then used both in a separation - oriented framework ( svm ) and in a projection pursuit regression ( ppr ) one .",
    "the corresponding methods are carefully presented and analyzed .    in the following part we release the assumption of ( piecewise ) constant velocity motion , and we try to follow both position and velocity in real time .",
    "in particular , it is shown that it is the trajectory `` diversity '' which renders this possible .",
    "+ obviously , tracking a diffusive markovian target widely differs from the ( batch ) estimation of deterministic parameters .",
    "however , both problems present strong similarities .",
    "indeed , the geometrical properties remains the same at each instant .",
    "once the target motion model has been introduced , the most important properties we used to perform the tracking are presented .",
    "then , the method which allows us to perform adapted corrections for tracking the target is presented .",
    "it is the main contribution of this part of the paper .",
    "simulation results illustrate the behavior of the estimators , as well as the performances of the tracking algorithm .",
    "we conclude on further works about the tracking in binary sensor networks .",
    "let us denote @xmath5 a sensor whose position is represented by the the vector @xmath6 similarly , the vector @xmath7 represents the position vector of the target at the time - period @xmath8 .",
    "let us denote @xmath9 the ( time - varying ) distance from sensor @xmath5 to the target at time @xmath8 .",
    "then , we have that : @xmath10 where @xmath11 is the instantaneous target velocity .",
    "we thus have the following lemma .",
    "let @xmath5 ( resp .",
    "@xmath12 ) a sensor whose the target distance is decreasing ( resp . increasing ) at the time - period @xmath8 , then we have : @xmath13 [ + -lem ]    if we restrict to binary motion information , we consider that the output @xmath14 of a sensor ( at time @xmath8 ) is @xmath15 or @xmath16 according to the distance @xmath9 is decreasing or increasing , so that we have : @xmath17 let us denote @xmath18 the subset of sensor whose output is @xmath15 and @xmath19 the subset of sensors whose output is @xmath16 , i.e. @xmath20 and @xmath21 and @xmath22 and @xmath23 their convex hulls , then we have @xcite :    @xmath24 and @xmath25 .",
    "* proof : * the proof is quite simple is reproduced here only for the sake of completeness .",
    "first assume that @xmath26 , this means that there exists an element of @xmath23 , lying in @xmath22 .",
    "let @xmath27 be this element ( and @xmath28 its associated position ) , then we have ( @xmath29 ) : @xmath30 thus a contradiction which shows that @xmath24 .",
    "for the second part , we have simply to assume that @xmath31 (  @xmath32 ) , which yields : @xmath33 which is clearly a contradiction , idem if @xmath34 .",
    "+ @xmath35 + so , @xmath22 and @xmath23 being two disjoint convex subsets , we know that there exists an hyperplane ( here a line ) separating them .",
    "then , let @xmath36 be a generic sensor , we can write @xmath37 , so that : @xmath38 this means that the line spanned by the vector @xmath39 separates @xmath22 and @xmath23 . without considering the translation and considering again the @xmath40 basis",
    ", we have : @xmath41 thus in the basis @xmath42 , the line passing by the point @xmath43 and whose direction is given by @xmath39 is separating @xmath22 and @xmath23 .",
    "we have now to turn toward the indistinguishability conditions for two trajectories .",
    "two trajectories are said indistinguishable if they induce the same outputs from the sensor network .",
    "we have then the following property @xcite .",
    "assume that the sensor network is _ dense _ , then two target trajectories ( say @xmath7 and @xmath44 ) are indistinguishable iff the following conditions hold true : @xmath45 [ inftysens ]    * proof :  *  first , we shall consider the implications of the indistinguishability .",
    "actually , the two trajectories are indistinguishable iff the following condition holds : @xmath46 we then _ choose _ @xmath47 ( i.e. @xmath6 and @xmath48 both belongs to the line separating @xmath18 and @xmath19 ) and consider the following decomposition of the @xmath49 vector : @xmath50 so that we have : @xmath51 now , it is always possible to choose a scalar @xmath52 of the same sign than @xmath53 .",
    "so , we conclude that the scalar @xmath53 is necessarily equal to zero . thus , if the trajectories @xmath7 and @xmath44 are indistinguishable we have necessarily : @xmath54 furthermore , the scalar @xmath55 is necessarily positive ( see eq .",
    "[ titj ] ) .",
    "then , the lemma [ + -lem ] inequalities yield : @xmath56 choosing once again @xmath47 , we deduce from eq .",
    "[ ineq ] the second part of prop .",
    "[ inftysens ] , i.e. @xmath57 .",
    "considering now the distance between the two indistinguishable trajectories , we have ( @xmath58 ) : @xmath59 so that we have @xmath60 .",
    "+ reciprocally , assume that the two conditions @xmath61 and @xmath62 hold true @xmath63 , are the two trajectories then indistinguishable ?",
    "it is sufficient to remark that : @xmath64 since the scalar @xmath55 is positive this ends the proof . + @xmath35 + let us now consider the practical applications of the above general results .",
    "admitting now that the target motions are rectilinear and uniform ( i.e. @xmath65 ) .",
    "then prop .",
    "[ inftysens ] yields @xmath66   ( @xmath67 ) and : @xmath68 then , from eq",
    ". [ toute ] we deduce that @xmath69 and @xmath70 . so that , the target velocity is fully observable while the position is uniquely determined modulo a @xmath71 translation .",
    "consider now a leg - by - leg trajectory modeling .",
    "for a @xmath72-leg one , we have for two indistinguishable trajectories : @xmath73 where @xmath74 is the velocity of the @xmath75 trajectory on the @xmath76-th leg and @xmath77 is the epoch of maneuver .",
    "furthermore , we can assume that @xmath78 .",
    "considering the implications of prop .",
    "[ inftysens ] both for @xmath79 and for @xmath80 , we know that if the trajectories are indistinguishable we must have : @xmath81 so , our objective is now to prove that we have also @xmath82 .",
    "considering prop .",
    "[ inftysens ] , we thus have the following system of equations : @xmath83 now , on the @xmath84-st leg we have also @xmath85 ( see prop . [ inftysens ] for @xmath86 ) , so that eqs   [ leg - leg3]a , b yield : @xmath87 this means that @xmath88 and @xmath89 are both orthogonal to the same vector ( @xmath90 ) , so they are collinear , and we straightforwardly deduce from eq .",
    "[ leg - leg4 ] that @xmath91 .",
    "finally , it has thus been proved that @xmath82 and this reasoning can be extended to any leg number .",
    "the observability requirements having been considered , we turn now toward the development of the algorithmic approaches .",
    "let us first introduce the following functional .",
    "our fist aim is to estimate the target velocity , within a batch processing framework .",
    "we assume that @xmath2 binary ( @xmath92 sensors are uniformly distributed on the field of interest ( see fig .",
    "[ network1 ] ) . +         each sensor will be coupled with a counter , that will be increased by a _ unity _",
    "each time - period the sensor gives us a @xmath93 , an will keep its value each time the sensor gives us a @xmath94 . then , at the end of the trajectory , each sensor has a entire value representing the number of periods the target was approaching . within a given batch , the outputs of the sensor counters can be represented by a stairwise functional ( see fig .",
    "[ stair1 ] ) .",
    "+ then , once this stair is built , we can define what we call the velocity plane .",
    "this plane is the tangent plane of the stairwise functional , which means that its direction gives the direction of the stair , while its angle @xmath95 gives the slope .",
    "the direction of the plane gives us the target heading , while the target speed @xmath96 is given by : @xmath97         thus , estimating the velocity is equivalent to estimating the velocity plane parameters . mathematical justifications",
    "are then presented .",
    "the target moves with a constant velocity @xmath98 .",
    "considering the results of section [ obs ] , its starting position is given by the following equation : @xmath99 this means that at each time period @xmath100 , the possible positions @xmath101 define a ( moving ) straight line , whose direction is @xmath102 .",
    "let us consider now the scalar product @xmath103 , then we have : @xmath104 this is clearly constant , which means that the surface is a plane .",
    "the conclusion follows : the stairwise plane is an exhaustive information for the velocity vector .",
    "we provide in the next section two solutions to estimate the velocity plane from the observed data , and give some asymptotic results about the estimation .",
    "we showed that estimating the velocity plane allows us to estimate the velocity vector .",
    "wile there exists several methods to do that , we shall focus on two of them .      as seen previously , the problem we have to face is to optimally separate the two classes of sensors ( i.e. the @xmath4 and @xmath3 ) .",
    "so , we can use the general framework of svm , widely used in the classification context .",
    "the set of labeled patterns @xmath105 ( @xmath106 and @xmath107 sensor positions ) is said to be linearly separable if there exists a vector @xmath108 and a scalar @xmath109 such that the following inequalities hold true : @xmath110 let @xmath111 ( @xmath108 : normal vector ) be this optimal separation plane . and",
    "define the margin ( @xmath112 ) as the distance of the closest point @xmath107 to @xmath113 , then it is easily seen that @xmath114 .",
    "thus , maximizing the margin lead to consider the following problem : @xmath115 denoting @xmath116 the vector of lagrange multipliers , dualization of eq .",
    "[ svm2 ] leads to consider again a quadratic problem , but with more explicit constraints @xcite , i.e. : @xmath117 where @xmath118 is a vector made of @xmath84 and @xmath119 is the @xmath120-dimensional vector of labels , and @xmath121 is the gram matrix : @xmath122 the dualized problem can be efficiently solved by classical quadratic programming methods .",
    "the less - perfect case consider the case when data can not be separated without errors and lead to replace the constraints of eq .",
    "[ svm2 ] by the following ones : @xmath123 consider now a multiperiod extension of the previous analysis .",
    "let us restrict first to a two - period analysis , we shall consider two separating hyperplanes ( say @xmath124 ) defined by : @xmath125 it is also assumed that these two separating planes are associated with time periods @xmath126 and @xmath127 , @xmath128 known .",
    "it is easily seen that the margin for the separating plane @xmath129 is @xmath130 , while for the plane @xmath131 it is @xmath132 .",
    "thus , the problem we have to solve reads : @xmath133\\;,\\\\ \\mbox{s.t .",
    ": } \\;y_{l}^{1}\\;\\left(\\langle { \\bf w},x_{l}^{1}\\rangle + b_{1}\\right ) \\geq c_{1}\\;,\\;y_{l}^{2}\\;\\left(\\langle { \\bf w},x_{l}^{2}\\rangle + b_{2}\\right ) \\geq c_{2}\\ ; \\forall l. \\end{array } \\right . \\label{svm8}\\ ] ] at a first glance , this problem appears as very complicated .",
    "but , without restricting generality , we can assume that @xmath134 .",
    "this means that @xmath135 . making the changes @xmath136 and",
    "@xmath137 then leads to consider the classical problem : @xmath138 let @xmath139 be the ( unique ) solution of eq .",
    "[ svm9 ] , then a straightforward calculation yields the distance @xmath140 between the two separating planes , i.e. : @xmath141 finally , we deduce that the estimated velocity vector @xmath142 is given by : @xmath143 the previous analysis can be easily extended to an arbitrary number of periods , as long as the target trajectory remains rectilinear .",
    "another definite advantage is that it can be easily extended to multitarget tracking .",
    "we can also mix the svm ideas with that of section [ stairwise ] .",
    "indeed , instead of focusing on a 2-d dataset , we can consider a 3-dimensional dataset ( sensor coordinates and values of the sensor counters ) .",
    "the second 3-d dataset is the same , but the value of the counter is increased with _",
    "unity_. so , the separation plane is 2-d , and will be as closed to the velocity plane as the sensor number can allow .",
    "[ stair_svm ] for a more explicit understanding .",
    "the results of the svm estimation of the velocity plane are discussed in the simulation results section .",
    "the projection pursuit methods have first been introduced by friedman and tuckey @xcite .",
    "then , they have been developed for regression with the projection pursuit regression ( ppr ) by friedman and stuetzle @xcite .",
    "ppr is mainly a non - parametric method to estimate a regression , with however a certain particularity .",
    "indeed , instead of estimating a function @xmath144 such as @xmath145 , where @xmath146 and @xmath147 are known , and @xmath148 assuming to follow a certain law , ppr estimates g such as @xmath149 .",
    "the first step of the algorithm is to estimate the direction @xmath150 , and then @xmath151 . in our specific case",
    ", @xmath150 will represent the direction of the target , and @xmath151 will give us the value of the velocity .",
    "let @xmath147 be the value of the @xmath76-th sensor counter .",
    "@xmath146 are the sensor coordinates .",
    "if @xmath152 is the value of the counter i at the end of the track , and @xmath153 the probability to have the right @xmath154 decision , we then have ( @xmath155 : binomial ) : @xmath156 assuming in a first time that @xmath157 , the two parameters we would like to estimate are the @xmath150 parameter and the @xmath158 function .",
    "we have some additional constraints on @xmath158 .",
    "first of all , it only takes integer values .",
    "then , it is an increasing function ( because @xmath157 ) .",
    "the optimization problem we have to solve is the following : @xmath159 where @xmath160 is calculated in a quite special way .",
    "first , we define a non parametric estimation of a function f , via : @xmath161 then , we sort @xmath162 into a vector @xmath163 from the smallest to the biggest .",
    "after which we define @xmath164 via : @xmath165 sometimes , due to the integer value of the estimated @xmath158 function , we have to deal with many possible values of @xmath166 .",
    "then , in this case , we choose the mean value of @xmath150 . due to the specific behavior of our target and our modeling , we know in addition that the general form of n ( say @xmath167 ) is given by : @xmath168}(u)\\;.\\end{aligned}\\ ] ] the next step is then to estimate @xmath96 .",
    "such an estimation is given by the following optimization program : @xmath169      we will study if the estimation is good with an infinite number @xmath2 of sensors . assuming we have an infinite number of sensors in a closed space , this means that each point of the space gives us an information @xmath154 .",
    "we then will have the exact parameters of the stairwise functional .",
    "to that aim , we will show in the following paragraph that the probability of having a sensor arbitrary close to the limits of each stair steps is @xmath84 .",
    "we assume that the sensor positions are randomly distributed , following an uniform law .",
    "then , @xmath170 being fixed : @xmath171}\\end{aligned}\\ ] ] if the velocity vector @xmath98 is denoted with @xmath172 $ ] , then : @xmath173 where @xmath174 only depends on @xmath98 and @xmath175 , which means that they are deterministic , and independent from @xmath176 .",
    "it is quite obvious that @xmath177 represents the smaller @xmath178-limit of a step , when @xmath179 represents its higher @xmath178-limit .",
    "then , considering the velocity plane , @xmath177 and @xmath179 both belong to the plane .",
    "denote @xmath180 , then : @xmath181 where we note @xmath182 . we know that : @xmath183 $ } \\;,\\\\ 1 & \\textrm{if $ t > b_{\\sup}$ } \\;. \\end{array } \\right.\\ ] ]",
    "then , we have the following probability calculations : @xmath184}((\\varepsilon + b_{\\inf } ) ) \\ ; , \\nonumber\\\\ { } & = & \\left \\ {   \\begin{array}{ll } 0 & \\textrm{if $ \\varepsilon \\leq 0$}\\\\ 1 - (",
    "1-\\frac{\\varepsilon}{b_{\\sup}-b_{\\inf}})^n & \\textrm{if $ \\epsilon \\in ] 0;b_{\\sup}-b_{\\inf}]$ } \\\\ 1 & \\textrm{if $ \\varepsilon > b_{\\sup}-b_{\\inf}$ } \\;. \\end{array } \\right.\\end{aligned}\\ ] ] given the above equation , @xmath185 is smaller than one , which means that @xmath186 converges to @xmath187 as @xmath2 increases to infinity .",
    "thus , we have finally : @xmath188 ending the proof .",
    "the target is assumed to evolve with a markov motion , given by : @xmath189 for @xmath190 where @xmath191 is a gaussian distribution with mean @xmath192 and variance @xmath193 .",
    "the starting position is assumed to be unknown .      at each time period , each sensor gives us a @xmath154 information , meaning that the target is getting closer or moving away .",
    "given all the sensors reports at the time - period @xmath8 , we can easily define a space where the target is assumed to be at this time - period .",
    "this is the fundamental uncertainty we have at @xmath8 , and the area of this domain is , of course , directly related to the network parameters ( sensor number , network geometry , etc . ) .",
    "we can estimate the direction of the target based on the simple information given by the sensors . obviously , that estimator will only be precise if the number of sensors is significantly great . to perform that estimation",
    ", we can use several methods , such as the projection pursuit regression method , or the support vector machine method .",
    "the svm method chosen for our algorithm as a most common method , and is presented in the next paragraphs .      to illustrate the effect of velocity change for estimating the target position ,",
    "let us consider a very simple example .",
    "assume that the target motion is uniformly accelerated , i.e. : @xmath194 we have now to deal with the following question : is the target trajectory fully observable ? to that aim , we first recall the following result . considering a dense binary network , two target trajectories",
    "are said indistinguishable iff they provide the same ( binary ) information which is equivalent to the following conditions : @xmath195 expliciting the second condition of eq [ acc2 ] , with the target motion model [ acc1 ] , we obtain that the following condition holds ( @xmath63 ) : @xmath196 thus , @xmath197 is a zero polynomial , which means that all its coefficients are zero . for the @xmath198 coefficients we obtain the condition @xmath199 . similarly with the @xmath200 , we obtain @xmath201 .",
    "subtracting these two equalities yield @xmath202 , or @xmath203 . + quite similarly , we obtain the equality @xmath204 and the last equality : @xmath205 assuming that the couple @xmath206 spans the sensor space then we deduce that @xmath207 .",
    "so , it has been shown that it was the target acceleration which render the problem fully observable .",
    "this reasoning can be extended to a wide variety of target modeling .",
    "the main issue with the svm estimation is that it only provides us the general direction of the target within a deterministic framework .",
    "moreover , it is highly desirable to develop a reliable algorithm for target tracking ( velocity and position ) . to solve this problem",
    ", we build a two - step algorithm . in the first step",
    ", we perform a correction through the estimated unitary velocity vector at each time - period @xmath8 , called @xmath208 .",
    "then , in a second time , we perform a correction through the orthogonal - estimated ( unitary ) velocity vector , also at each time - period , called @xmath209 .",
    "these two corrections give us a better estimation of both the velocity and the position of the target .",
    "we refer to fig .",
    "[ schema_correction ] for the presentation of the rationale of the two correction factors .      to build that correction factor , we started with a very simple assumption . at each period @xmath8 ,",
    "the sensors provide binary motion information .",
    "thanks to the first part of this article , we know that the target is in the ( special ) set lying between the two same - sign - sensors set . then , starting from the previous estimated position of the target , we move the estimated target through the estimated velocity vector direction until it stands in that special set .",
    "we now define this operator in a mathematical way : + let @xmath211 the estimated normalized velocity vector at time @xmath8 .",
    "+ moreover , let @xmath212 ( respectively @xmath213 ) the coordinates of the sensors ( @xmath214 ) giving a @xmath94 ( respectively a @xmath93 ) at time @xmath8 .",
    "+ we sort @xmath215 ( respectively @xmath216 ) .",
    "then , following a very simple geometrical reasoning , we note that @xmath217 should be between @xmath218 and @xmath219 . to ensure that property ,",
    "we define the following correction factor : @xmath220 to calculate this factor , we consider the projection equality : @xmath221 which means that the projection of the corrected value is equal to the mean value of the projection .",
    "geometrically , this means that the position of the target is estimated to be in the center of the special set defined by the sensors . the value of the correction factor @xmath55 ( see eq .",
    "[ correct1 ] ) is then straightforwardly deduced from eq .",
    "[ correct2 ] .",
    "similarly , the target position is updated via : @xmath222 here the correction factor @xmath55 has been calculated via the average value of the projection .",
    "this is an arbitrary choice and we can consider the lower or the upper bound of the projection with no significant difference on the results of the algorithm .",
    "+ obviously , if the estimation of the position is not very good , the estimated velocity value ( clearly based on @xmath208 ) will be quite different from the real value of the velocity .",
    "the next correction factor is based on the assumption that the target velocity changes are upper and lower bounded .",
    "we assume that the velocity of the target has bounded acceleration .",
    "then , if the velocity estimated at a certain time @xmath8 is too different from the velocity estimated at time @xmath223 , this means that the estimated position of the target is far from the right one .",
    "then , in that precise case , we consider an orthogonal correction , through @xmath224 .",
    "+ for that deterministic algorithm we decided to perform a very simple modeling of the velocity .",
    "indeed , we take as a right value for the velocity the simple mean of the @xmath225 previous values of the estimated velocity ( @xmath226 ) .",
    "we calculate in addition the variance ( @xmath227 ) , and the factor @xmath209 can be non - zero iff the estimated value of the velocity at time @xmath8 is not in the interval given by @xmath228 $ ] .",
    "we then look for @xmath209 such that : @xmath229    the previous equation needs some explanation . given that @xmath230 is the estimated target position at time @xmath8 , we would like to correct the value to be closer to the right position .",
    "the only way we can deal with it , is to correct the estimated value of the velocity .",
    "@xmath231 is the previous calculated correction .",
    "if the difference between that estimation and the value @xmath226 is too important , we try to reduce that difference with a translation of the positions at time periods @xmath8 and @xmath223 . as we want the positions to stay in the special set defined by the sensors , the direction of that translation is given by @xmath232 for the position at time @xmath8 , and @xmath233 for the position at time @xmath223 .",
    "+ performing straightforward calculation , leads to consider the following correction factor : @xmath234    obviously , as we could expect when presenting the method , if the target motion is rectilinear and uniform , no correction factor can be calculated .",
    "then , the final estimated position is given by : @xmath235      noticeably the most important step of the algorithm , i.e. the @xmath95 correction factor , is based on the estimation of the velocity change . indeed , the best the estimation of the velocity is , the best we can estimate the position . then , our aim is to perform a better analysis of the target motion . considering that from time to time ,",
    "the estimation of the position increases in quality , a promising way should be to perform a feedback of the newest corrector to the oldest position estimation .",
    "we denote @xmath236 the updated estimated position of the target at time @xmath8 .",
    "then , according to the previous paragraph , the estimated position is updated via : @xmath237    with this new estimator we will be able to perform a better analysis of the target motion ( position and velocity ) .      with the definition of the correction factors ,",
    "the theoretical part of the algorithm is finished .",
    "then , it is presented as follows , at time period @xmath8 : +    1 .",
    "get the binary information of each sensor , and then the target position set .",
    "+ 2 .   estimate the velocity direction at time @xmath8 via a svm method + 3 .",
    "perform the @xmath210 calculation , and add that correction to the estimated velocity at time @xmath223 .",
    "the time-@xmath8-position is then updated .",
    "check if the estimated velocity at time @xmath223 is too different from the modeled value , and in this case , calculate @xmath209 .",
    "update the position at time @xmath8 , and in this case , the velocity at time @xmath223 with the correction @xmath95 .",
    "step 2 and 3 can be inverted with no damage in the process .",
    "this is the main part of the algorithm .",
    "however , there is no mention in that enumeration of the initialization .",
    "there are two main state vectors that have to be initialized .",
    "the position and the velocity . the position is assumed to be unknown , but thanks to the sensors",
    ", we can have a space where the target is assumed to be at first .",
    "we use here a uniform law for the initialization , given that we have no further information about where the target can start .",
    "+ the initialization of the velocity is not far from that solution . indeed , with the binary information",
    ", we can provide a convenient estimate of the velocity direction . even if we do nt have a precise idea of the speed value",
    ", we can then start the algorithm .",
    "we shall now investigate the previous developments via simulations . the first figure ( fig.[simulation_stair ] )",
    "will show the stair built by the previously explained method ( @xmath2 : fixed ) .",
    "the position of the sensors are considered random , following a uniform law on the surveillance set .    _ , title=\"fig:\",width=340,height=302",
    "] _ , title=\"fig:\",width=340,height=302 ]    to evaluate the performance of our methods , we decided to calculate the mean square error of the two estimated parameters , which are the velocity value and the velocity direction .",
    "[ sim_conv ] shows the two mses values for both direction and velocity values , assuming the sensor number is growing from @xmath238 to @xmath239 , and the velocity vector is the @xmath240 $ ] vector ( @xmath241 ) . +        providing 2000 simulations",
    ", the mses seems to be unstable .",
    "however , the two parameter estimation methods leads to a very different conclusion . in the case of the direction estimation ,",
    "the ppr method works highly better than the svm method , and seems quite stable as the sensor number @xmath2 grows . on the other side ,",
    "the svm method is more erratic.one possible explanation is that the ppr method has been first developed for the particular case of direction estimation , while the svm method is more focused on the margins maximization , which means in our case a simultaneous estimation of both parameters .",
    "the conclusions we can make on the velocity value estimation are rather opposite . the mse becomes reasonable only for the svm method , and for a number of sensors up to 60 .",
    "indeed , we have a @xmath242 @xmath241 error on a velocity value estimation for a theoretical value of @xmath243 . as erratic as the svm s mse was in the direction estimation , it was however less erratic than the result we have for the ppr value .",
    "+ one answer to the mse erratic value for the ppr could be to find a best way to estimate the velocity value .",
    "indeed , in our case , we choose for estimating functional a sum of indicators functions .",
    "however , it is not clear that this optimization gives a single minimum solution .",
    "there could be a finest functional that could lead to a most robust optimization solution , and this would be the subject of future works .",
    "we will present in that section the results of the tracking algorithm .",
    "we consider here that the target starts from the @xmath244 $ ] position and that its initial velocity vector is the @xmath245 $ ] vector .",
    "the number of sensors is equal to @xmath246 , in a quite wide space ( 300mx300 m ) .",
    "the variance of the target motion is not very important , and the tracking duration is @xmath247 seconds .",
    "+ one simulation is presented in figure [ traj_est ] . in red",
    "is represented the real target trajectory , quite diffusive , and in green the estimated successive positions .",
    "the initialization is not very bad because the number of sensors is quite important , which means the uniform set is not too large .",
    "after the first step , the estimation seems to hang the real trajectory , and follows the target well ( less than @xmath238 meter error ) .",
    "however , when the target turns right , we loose some precision , mainly because the correction factors seemed to be `` lost '' .",
    "the reason for that behavior is that the svm method provides us a bad estimation of the velocity vector .",
    "then , the algorithm provides a correction in a bad direction , which moves away from the real trajectory . during a few seconds",
    ", the estimation works quite bad , before hanging again the target direction , and then performing a quite good estimation of the velocity .",
    "unfortunately , there is no evidence in that example that increasing indefinitely the tracking duration results in an estimated position closer and closer to the real target position .",
    "this is precisely the aim of the two next figures in [ mse_state ] .",
    "the first one shows the mean square error of the estimated position of the target through the trajectory .",
    "the total time is @xmath247 seconds , and we can see an amazing and remarkable decrease of that mse in the first seconds .",
    "it seems however that there is a limit to that decrease .",
    "indeed , the mse will not converge to a zero value , even if we could perform a long - time tracking . clearly , the limitation is due to the binary information at first , and certainly to the number of sensors in a second time .",
    "some further work could certainly exhibits a strong link between the number of sensors and the mse of the position .",
    "+         in the same way , the velocity estimation has some acceptable mse through the tracking process .",
    "despite the clearly strong decrease at the beginning , the curve then stands to an acceptable but non zero value .",
    "the effect is more obvious than in the position case , surely because of the velocity modelling we make in the algorithm , which forces the velocity estimation to very bad evolution",
    ". a clue could be to perform a most sophisticated modelling of the velocity , but given the binary information , this wo nt be easy .",
    "this is another work in progress for the evolution of our algorithm .",
    "in this paper , we chose to focus on the use of the @xmath1 at the level of information processing for a sensor network .",
    "though this information is rather poor , it has been shown that it can provide very interesting results about the target velocity estimation .",
    "the theoretical aspects of our methods have been thoroughly investigated , and it has been shown that the ppr method leads to the right velocity plane if the number of sensors increase to infinity . the feasibility of the new concept ( `` velocity plane '' ) for estimating the target trajectory parameters has been put in evidence .",
    "the proposed methods seem to be sufficiently general and versatile to explore numerous extensions like : target tracking and dealing with multiple targets within the same binary context .      a new method for tracking both position and velocity of a moving target via binary data has been developed .",
    "though the instantaneous data are poorly informative , our algorithm takes benefit of the network extent and density via specific spatio - temporal analysis .",
    "this is remarkable since the assumptions we made about target motion are not restrictive .",
    "noticeably also , our algorithm is quite fast and reliable .",
    "furthermore , it is clear that performance can be greatly improved if we can consider that the acquisition frequency is ( far ) greater than the maneuver frequency . in particular",
    ", we can mix the present method with the one we developed in @xcite .",
    "+ however , some important questions remain .",
    "the first one concerns the velocity modeling .",
    "we focused on this paper on the adaptability of the different correction factors , but we did nt pay much attention to that modeling , which can definitely improve the estimation quality . moreover , our tracking algorithm is basically deterministic even if the target motion modeling is basically probabilistic .",
    "thus , it should be worth to calculate the first correction factor ( @xmath210 ) via a likelihood , such that @xmath248 does not always stays in the mean of the special set .",
    "moreover , that likelihood should be related to all the sources of sensor uncertainty . in addition , the present algorithm gives a slow response to sudden target maneuver .",
    "a remedy should be to incorporate a stochastic modeling of such event in our algorithm .",
    "+ the second correction factor ( @xmath95 ) may also be improved via a stochastic approach . instead of considering a correction only related to the estimated velocity estimated",
    ", we could immerse this correction within a stochastic framework involving both @xmath249 and @xmath95 .",
    "these observations are part of our next work on that very constrained but also quite exciting tracking framework .",
    "the last important point is multiple target tracking .",
    "even if our work in this area is quite preliminary , it is our strong belief that our spatio - temporal separation based algorithm should be the natural way to overcome the association problems .",
    "a. ickowicz , j .-",
    "le cadre , a new method for target trajectory estimation within a binary sensor network .",
    "_ proc . of the 10th european conference on computer vision : multi - camera and multi - modal sensor fusion algorithms and applications workshop _ , oct 2008 .",
    "j. aslam , z. butler , f. constantin , v. crespi , g. cybenko , d. rus , tracking a moving object with a binary sensor network .",
    "_ proc . of the 1st international conference on embedded networked sensor systems",
    "_ , nov 2005 , pp .  150161 .",
    "c. cortes , v. vapnik , support - vector networks .",
    "machine learning , * 20 * , 1995 , pp .  273297 ."
  ],
  "abstract_text": [
    "<S> we focus in this paper in the estimation of a target trajectory defined by whether a time constant parameter in a simple stochastic process or a random walk with binary observations . </S>",
    "<S> the binary observation comes from binary derivative sensors , that is , the target is getting closer or moving away . </S>",
    "<S> such a binary obervation has a time property that will be used to ensure the quality of a max - likelihood estimation , through single index model or classification for the constant velocity movement . in the second part of this paper we present a new algorithm for target tracking within a binary sensor network when the target trajectory is assumed to be modeled by a random walk . for a given target , </S>",
    "<S> this algorithm provides an estimation of its velocity and its position . </S>",
    "<S> the greatest improvements are made through a position correction and velocity analysis . </S>"
  ]
}
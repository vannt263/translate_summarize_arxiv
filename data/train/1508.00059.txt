{
  "article_text": [
    "[ sec : intro ] robots collaborating with humans in complex domains receive far more raw sensor data than can be processed in real - time . the information extracted from the sensor inputs",
    "can be represented probabilistically to quantitatively model the associated uncertainty ( `` @xmath0 certain i saw the book on the shelf '' ) .",
    "robots also receive useful commonsense knowledge that is difficult to represent quantitatively ( `` books are usually in the library '' ) , and human participants may not have the time and expertise to provide elaborate and accurate feedback . to collaborate with humans ,",
    "these robots thus need to represent knowledge and reason at both the cognitive level and the sensorimotor level .",
    "this objective maps to fundamental research challenges in knowledge representation and reasoning .",
    "the architecture described in this paper exploits the complementary strengths of non - monotonic logical reasoning and probabilistic belief revision as a significant step towards addressing these challenges .",
    "specifically , the commonsense logical reasoning capabilities of answer set prolog ( asp ) , a declarative language , is coupled with probabilistic belief updates , to support the following key features :    an asp program represents incomplete domain knowledge , including information that holds in all but a few exceptional situations . the _ answer set _ obtained by solving the asp program",
    "is used for planning and jointly ( a ) explaining unexpected action outcomes by reasoning about exogenous actions ; and ( b ) identifying object occurrences that best explain partial scene descriptions obtained from sensor inputs .    for any given task ,",
    "each action in the plan created by inference in the asp program is executed probabilistically .",
    "the relevant subset of the domain ( for this action ) is identified automatically , and the sensor observations perform incremental bayesian updates to a belief distribution defined over this subset of the domain , committing highly probability beliefs as statements to the asp program .",
    "the architecture thus enables robots to represent and reason with qualitative and quantitative descriptions of knowledge and degrees of belief . in this paper ,",
    "the architecture s capabilities are demonstrated in simulation and on a mobile robot , in the context of a robot waiter operating in the dining room of a restaurant .",
    "[ sec : relwork ] knowledge representation , planning and explanation generation are well - researched areas in robotics and artificial intelligence .",
    "logic - based representations and probabilistic graphical models have been used to plan sensing , navigation and interaction for robots and agents .",
    "formulations based on probabilistic representations ( by themselves ) make it difficult to perform commonsense reasoning , while classical planning algorithms and logic programming tend to require considerable prior knowledge of the domain and the agent s capabilities , and make it difficult to merge new , unreliable information with an existing knowledge base .",
    "for instance , the non - monotonic logical reasoning capabilities of asp  @xcite have been used for tasks such as reasoning by simulated robot housekeepers  @xcite and coordination of robot teams  @xcite .",
    "however , asp does not support probabilistic analysis of uncertainty , whereas a lot of information extracted from sensors and actuators on robots is represented probabilistically .",
    "approaches for generating explanations ( e.g. , through abductive inference or plan diagnosis ) use the systems description and observations of system behavior to explain unexpected symptoms  @xcite , or use weaker system descriptions and depend on heuristic representation of intuition and past experience  @xcite .",
    "probabilistic and first - order logic - based representations have been combined for better abductive inference  @xcite .",
    "researchers have also designed architectures for robots that combine deterministic and probabilistic algorithms for task and motion planning  @xcite , combine declarative programming and continuous - time planners for path planning in robot teams  @xcite , or combine a probabilistic extension of asp with partially observable markov decision processes ( pomdps ) for human - robot dialog  @xcite .",
    "some principled algorithms that combine logical and probabilistic reasoning include markov logic network  @xcite , bayesian logic  @xcite , and probabilistic extensions to asp  @xcite .",
    "however , algorithms based on first - order logic do not provide the desired expressiveness for modeling uncertainty , e.g. , it is not always possible to express degrees of belief quantitatively .",
    "algorithms based on logic programming do not support one or more of the desired capabilities such as incremental revision of ( probabilistic ) information ; reasoning as in causal bayesian networks ; and reasoning with large probabilistic components . towards addressing these challenges ,",
    "our prior work developed architectures that couple declarative programming and probabilistic graphical models for logical inference , deterministic and probabilistic planning on robots  @xcite .",
    "this paper retains the coupling between logical and probabilistic reasoning but significantly expands the capabilities of these architectures to support : ( 1 ) explanation of unexpected action outcomes and the partial descriptions extracted from sensor inputs ; and ( 2 ) representation and reasoning at a higher resolution using asp , making the probabilistic reasoning more computationally efficient .",
    "[ sec : arch ] figure  [ fig : arch - overview ] is an overview of the mixed architecture .",
    "the symbolic representation is translated to an answer set prolog ( asp ) program used for non - monotonic logical inference and planning a sequence of actions for any given task . for each action",
    ", the relevant subset of the domain is defined automatically .",
    "sensor observations perform incremental bayesian updates to a probability distribution over this domain subset , committing high probability beliefs ( action outcomes , observation of object attributes ) as statements to the asp program .",
    "observed unexpected action outcomes are explained by reasoning about exogenous actions , and objects are identified to best explain the partial descriptions extracted from visual cues .",
    "asp - based representation and reasoning is performed at a resolution that provides high reliability while also simplifying the ( coupled ) probabilistic reasoning and tailoring it to specific actions .",
    "the syntax , semantics and representation of the transition diagrams of the architecture s domain representation are described in an _ action language _",
    "al  @xcite .",
    "al has a sorted signature containing three _ sorts _ : @xmath1 , @xmath2 and @xmath3 .",
    "statics are domain properties whose truth values can not be changed by actions , fluents are properties whose values are changed by actions , and actions are elementary actions that can be executed in parallel .",
    "al allows three types of statements : @xmath4 where @xmath5 is an action , @xmath6 is a literal , @xmath7 is a basic fluent ( also called inertial fluent ) literal , and @xmath8 are domain literals ( any domain property or its negation ) .",
    "a collection of statements of al forms a system description .    as an illustrative example used in this paper , consider a robot waiter that greets and seats people at tables in a restaurant , and delivers orders .",
    "the sorts of the domain are arranged hierarchically , e.g. , @xmath9 and @xmath10 are subsorts of @xmath11 ; @xmath12 and @xmath13 are subsorts of @xmath10 ; @xmath14 and @xmath15 are subsorts of @xmath12 ; @xmath16 is a subsort of @xmath13 ; and @xmath17 , @xmath18 , @xmath19 , and @xmath20 are subsorts of @xmath9 .",
    "we include specific rooms , e.g. , @xmath21 and @xmath22 , and consider objects of sorts such as @xmath23 , @xmath24 and @xmath25 , to be characterized by attributes @xmath26 , @xmath27 , @xmath28 , and @xmath9 .",
    "the sort @xmath29 is included for temporal reasoning .",
    "[ [ asp - domain - representation ] ] * asp domain representation : * + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the asp program is based on a domain representation that includes a system description @xmath30 and a history with defaults @xmath31 .",
    "@xmath30 has a sorted signature @xmath32 that defines the names of objects , functions , and predicates available for use , and axioms that describe a transition diagram @xmath33 .",
    "fluents are defined in terms of the sorts of their arguments , e.g. , @xmath34 @xmath35 , @xmath36 , and @xmath37 . the first three are _ basic fluents _",
    "that obey the laws of inertia and can be changed directly by actions ; the last one is a _ defined fluent _ that is not subject to inertia and can not be changed directly by an action .",
    "statics such as @xmath38 and @xmath39 specify connections between locations , relation @xmath40 implies a specific fluent holds at a specific timestep , and @xmath41 ( hypothesizes ) that a specific action occurs at a specific timestep .",
    "we include _ actions _",
    ", e.g. , @xmath42 , @xmath43 , @xmath44 , @xmath45 , @xmath46 , and define domain dynamics using causal laws such as : @xmath47 state constraints such as : @xmath48 and executability conditions such as : @xmath49 since robots frequently receive _ default _ domain knowledge that is true in all but a few exceptional situations , the domain history @xmath31 , in addition to @xmath50 and @xmath51 , the occurrence of specific actions and the observation of specific fluents at specific time steps , contains prioritized defaults describing the values of fluents in their initial states .",
    "for instance , it may be initially believed that dishes to be delivered are typically on a table between the kitchen and the dining room  if they are not there , they are still in the kitchen",
    ". existing definitions of entailment and consistency are used to reason with such histories , and any observed exceptions  @xcite .",
    "the domain representation is translated into a program @xmath52 in cr - prolog that incorporates consistency restoring rules in asp  @xcite .",
    "@xmath53 includes the causal laws of @xmath30 , inertia axioms , closed world assumption for actions and defined fluents , reality checks , and records of observations , actions and defaults from @xmath31 .",
    "every default is turned into an asp rule and a consistency - restoring ( cr ) rule that allows us to assume the default s conclusion is false to restore @xmath53 s consistency .",
    "asp is based on stable model semantics , introduces concepts such as default negation and epistemic disjunction , and represents recursive definitions , defaults , causal relations , and language constructs that are difficult to express in classical logic formalisms .",
    "the ground literals in an _ answer set _ obtained by solving @xmath53 represent beliefs of an agent associated with @xmath53statements that hold in all such answer sets are program consequences .",
    "inference and planning can be reduced to computing answer sets of program @xmath53 by adding a goal , a constraint stating that the goal must be achieved , and a rule generating possible future actions .",
    "our architecture supports reasoning about exogenous actions to explain the unexpected ( observed ) outcomes of actions .",
    "for instance , to reason about a door between the kitchen and the dining room being locked by a human , and to reason about a person moving away from a known location , we introduce exogenous actions @xmath54 and @xmath55 respectively , and suitably add ( or revise ) axioms : @xmath56 where a door is considered _ abnormal _ if it has been locked , say by a human .",
    "we also introduce an _ explanation generation _ rule and a new relation @xmath57 : @xmath58 where @xmath57 holds if an exogenous action is hypothesized but there is no matching record in the history .",
    "we also include _ awareness _ axioms and _ reality check _ axioms : @xmath59 the reality check axioms cause a contradiction when observations do not match expectations , and the explanation for such unexpected symptoms can be extracted from the answer set of the corresponding program  @xcite .",
    "the new knowledge is included and used to generate the subsequent plans .",
    "this approach provides _ all _ explanations of an unexpected symptom  using a cr rule instead of the explanation generation rule ( in statement  [ eqn : expl ] ) provides the minimal explanation ( see below ) .    a robot processing sensor inputs ( e.g. , camera images )",
    "is typically able to extract partial descriptions of scene objects .",
    "the proposed architecture also identifies object occurrences that best explain these partial descriptions . in our illustrative example",
    ", we introduce static relations to establish object class membership is applied recursively in a class hierarchy , @xmath60 denotes an instance of a specific class , and @xmath61 holds for any object whose class label is known . ] and introduce relations to capture ideal ( and default ) definitions of object attributes , e.g. , for a table : @xmath62 where tables usually have wheels except in the kitchen .",
    "similarly , for a chair : @xmath63 other objects and object attributes are encoded similarly .",
    "as before , a reality check axiom causes an inconsistency when an object does not have a class label due to incomplete information , and a cr rule restores consistency by assigning class labels : @xmath64 this assignment of a class label to an object is based on the smallest number of rules that need to be relaxed to support the assignment .",
    "this information is also added to the asp program and be used for subsequent reasoning . however , both planning and object recognition are based on processing sensor inputs and moving to specific locations  these tasks are accomplished using probabilistic algorithms , as described below .    [",
    "[ probabilistic - domain - representation ] ] * probabilistic domain representation : * + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    our previous work created the asp - based representation at a coarser resolution ( e.g. , rooms and places ) , and _ refined _ it by adding suitable actions , fluents and sorts ( e.g. , cells in rooms ) to define a transition diagram and create its probabilistic version that was modeled as a pomdp  @xcite . the proposed architecture models the domain at a higher resolution using asp .",
    "for any given task , the asp - based plan consists of primitive actions that can be executed by the robot .",
    "each such action is executed probabilistically , with the robot maintaining a probability ( belief ) distribution over the relevant subset of the domain that is identified automatically based on the set of related fluents , e.g. , for moving between two tables , the robot only needs to reason about its own location in a subset of areas .",
    "the belief distribution is revised incrementally by sensor observations using bayesian updates .",
    "for instance , to update the belief about the location of a specific dish in the dining room : @xmath65 where @xmath66 is the event the dish was observed in area @xmath67 , @xmath68 is the event the dish exists in area @xmath67 , making @xmath69 and @xmath70 are the observation likelihood and the posterior probability of existence of the dish in each area in the dining room .",
    "the initial knowledge ( i.e. , prior : @xmath71 is based on domain knowledge or statistics collected in an initial training phase ( see section  [ sec : expres ] ) .",
    "a bayesian state estimation approach is used by the robot to estimate its own position ( e.g. , _ particle filters _ ) , navigate , and to process sensor inputs to extract information about objects being observed .    in summary , for any given task , asp planning provides a plan with deterministic effects . the first action in the plan and relevant information ( from asp inference ) identify the subset of the domain to be represented probabilistically , and set the initial ( probabilistic ) belief distribution .",
    "the action is executed probabilistically , updating the belief distribution until a high belief indicates action completion or a time limit is exceeded , and adding relevant statements to the asp program . any unexpected action outcomes and partial scene descriptions",
    "are explained by reasoning about exogenous actions and possible objects . once these explanations restore consistency , either the next action ( in the plan )",
    "is selected for execution or a new plan is created . in what follows ,",
    "we refer to the proposed architecture as the `` mixed architecture '' , and compare it with two algorithms : ( 1 ) asp - based reasoning for completing the assigned tasks ; and ( 2 ) a ( greedy ) probabilistic approach that maintains a probabilistic belief distribution and heuristically selects actions ( and makes decisions ) based on the most likely state .",
    "the mixed architecture raises some subtle issues .",
    "first , committing probabilistic beliefs above a specific threshold ( e.g. , @xmath72 ) as fully certain statements to the asp program may introduce errors , but the non - monotonic reasoning capability of asp helps the robot recover .",
    "second , with previous work that reasoned at a coarser resolution with asp and used pomdps for probabilistic planning ( a ) computing pomdp policies for each asp action is computationally expensive ; and ( b ) there may be improper reuse of information if the probabilistic belief distribution is not reset between trials  @xcite .",
    "third , the mixed architecture presents an interesting trade - off between the resolution of symbolic representation and probabilistic representation .",
    "moving most of the reasoning to a symbolic representation can reduce accuracy and also be computationally expensive  the mixed architecture is a good trade - off of accuracy and efficiency .",
    "[ sec : expres ] experiments were conducted in simulation and on a mobile robot in scenarios that mimic a robot waiter in a restaurant . the robot s tasks include finding , greeting and seating people at tables , and delivering orders appropriately .",
    "[ sec : expres - setup ] the experimental trials used existing implementations of relevant control and sensor input processing algorithms . in an initial training phase ,",
    "the robot collected statistics of executing these algorithms to compute the motion error models and observation likelihood models .",
    "these models were also used to make the simulation trials more realistic .",
    "the experimental trials considered three hypotheses , evaluating that the mixed architecture : ( h1 ) generates plans for different tasks , and explains unexpected outcomes and partial descriptions extracted from sensor inputs ; ( h2 ) significantly improves the task completion accuracy and provides similar task completion time in comparison with just asp - based reasoning ; and ( h3 ) significantly improves task completion time and provides similar accuracy in comparison with the purely probabilistic approach .",
    "we provide both qualitative and quantitative results in simulation and on a mobile robot .",
    "[ sec : expres - results ] the following execution traces demonstrate the planning and diagnosis capabilities .    [",
    "ex : plan - expl][explain unexpected action outcome ] +    the task is to return dish @xmath73 to the kitchen from the dining room , e.g. , from @xmath74 to area @xmath75 in figure  [ fig : domain - map ] .",
    "unknown to the robot , the door @xmath76 has been locked .",
    "the robot is in the dining room with the dish in hand : + @xmath77 + @xmath78 + the initial plan obtained by computing the answer set is : @xmath79    each step in this plan , starting with the first one , is executed probabilistically .",
    "unfortunately , the robot s attempt to open door @xmath76 does not produce the expected observation ",
    "instead , @xmath80 is added to the history .",
    "diagnosis provides the explanation @xmath81 , which invokes statement  [ eqn : expl - ab ] to restore consistency .",
    "the robot seeks human help to unlock the door , before creating a new plan to successfully return the dish to the kitchen .",
    "[ ex : scene - expl][explain partial scene description ] +    the robot delivering a dish sees a medium - sized white object from a distance , but is unable to assign a class label in the absence of any further information .",
    "then initial knowledge consists of : + @xmath82    two possible interpretations are generated by statements  [ eqn : chair],[eqn : desk ] as an explanation : + @xmath83 or @xmath84 .    as the robot gets closer , it observes : @xmath85 , i.e. , the object has wheels and is in the dining room .",
    "statements  [ eqn : chair],[eqn : desk ] provide the interpretation : @xmath83 .    [",
    "[ simulation - experiments ] ] * simulation experiments : * + + + + + + + + + + + + + + + + + + + + + + + + +    the robot in the simulator had to find and move ( seat ) dishes ( people ) to specific locations .",
    "table  [ tab : simulation_exp ] summarizes the results  each entry is the average of @xmath86 trials .",
    "the task , initial position of the robot , and position of objects , were different between the trials , and paired trials were used to establish statistical significance . in each paired trial , for each approach being compared , the initial location of the robot and the location of domain objects are the same .",
    "the statistically significant results show that the mixed architecture ( a ) significantly improves the accuracy and provides similar task completion time in comparison with asp - based reasoning ; and ( b ) significantly improves task completion time and provides similar accuracy in comparison with the probabilistic approach .",
    "furthermore , the planning and execution time are significantly reduced in comparison with approaches that combined asp with probabilistic graphical models  @xcite , while providing comparable accuracy  analysis in other domains may help automate the choice of resolution for symbolic and probabilistic representations for a given task and domain .",
    ".task completion accuracy and time using only asp , and using a probabilistic approach , expressed as a factor of the values provided by the mixed architecture .",
    "the proposed mixed architecture _ significantly _ reduces the task completion time while improving the accuracy . [ cols=\"^,^,^ \" , ]     [ tab : simulation_exp ]    [ [ robot - experiments ] ] * robot experiments : * + + + + + + + + + + + + + + + + + + + +    trials were conducted on a _ turtlebot _ ( figure  [ fig : robot ] ) equipped with a kinect ( rgb - d ) sensor , range sensors , and an on - board processor running ubuntu linux .",
    "our architecture and algorithms were implemented using the robot operating system ( ros ) .",
    "trials included instances of the domain introduced in section  [ sec : arch ] , each with one or more tables , people and other objects , e.g. , figure  [ fig : domain - map ] .",
    "the robot was equipped with probabilistic algorithms to determine the attribute values of objects ( e.g. , color and shape ) from camera images , revise the map of the domain , and determine its location in the map .",
    "the robot was able to use the mixed architecture to successfully complete the assigned tasks in all such scenarios , with results of paired trials being similar to those obtained in simulation .",
    "a video of an experimental trial showing planning and diagnosis can be viewed online : https://vimeo.com/130279856",
    "[ sec : conclusion ] this paper described an architecture that mixes the complementary strengths of declarative programming and probabilistic belief updates .",
    "plans created using asp - based non - monotonic logical reasoning are implemented probabilistically , with high probability observations and action outcomes adding statements to the asp program .",
    "the architecture enables a robot to explain unexpected action outcomes by reasoning about exogenous actions , and to identify objects that best explain partial scene descriptions .",
    "these capabilities have been demonstrated through experimental trials in simulation and on a mobile robot in scenarios that mimic a robot waiter in a restaurant s dining room .",
    "future work will further investigate the tight coupling and transfer of control between the logical and probabilistic representations , with the long - term objective of enabling robots to collaborate with humans in complex application domains .",
    "the authors thank michael gelfond and rashmica gupta for discussions that contributed to the development of the architecture described in this paper . this work was supported in part by the us office of naval research science of autonomy award n00014 - 13 - 1 - 0766 .",
    "all opinions and conclusions described in this paper are those of the authors ."
  ],
  "abstract_text": [
    "<S> robots assisting humans in complex domains have to represent knowledge and reason at both the sensorimotor level and the social level . </S>",
    "<S> the architecture described in this paper couples the non - monotonic logical reasoning capabilities of a declarative language with probabilistic belief revision , enabling robots to represent and reason with qualitative and quantitative descriptions of knowledge and degrees of belief . </S>",
    "<S> specifically , incomplete domain knowledge , including information that holds in all but a few exceptional situations , is represented as a answer set prolog ( asp ) program . </S>",
    "<S> the answer set obtained by solving this program is used for inference , planning , and for jointly explaining ( a ) unexpected action outcomes due to exogenous actions and ( b ) partial scene descriptions extracted from sensor input . </S>",
    "<S> for any given task , each action in the plan contained in the answer set is executed probabilistically . </S>",
    "<S> the subset of the domain relevant to the action is identified automatically , and observations extracted from sensor inputs perform incremental bayesian updates to a belief distribution defined over this domain subset , with highly probable beliefs being committed to the asp program . </S>",
    "<S> the architecture s capabilities are illustrated in simulation and on a mobile robot in the context of a robot waiter operating in the dining room of a restaurant . </S>"
  ]
}
{
  "article_text": [
    "interacting with the local human user is the weak point in client - server communications . while machines can employ cryptographical mechanisms to ensure authenticity , integrity , and confidentiality of communication , humans are not capable of this .",
    "they rely on their local computer to present data and transmit their input to a server reliably .    today",
    "s operating systems provide protection against unauthorized modification of operating system components and offer mechanisms like discretionary access control and process separation to users and processes .",
    "often , all processes of the same user operate with the same privileges . malicious software ( malware ) can exploit this fact to read input destined for other processes ( e.g. a keylogger ) or modify the output displayed to the user ( e.g. local phishing attack ) .",
    "some banks in south korea already  including , e.g. , korea exchange bank and woori bank  use activex - based tools to prevent the successful use of keyloggers during internet banking , apparently after large - scale keylogging attacks in internet cafs some years ago .",
    "a server application needs a trusted path to the user at a network node .",
    "this concept is not new and exists in operating systems .",
    "the secure attention sequence ctrl+alt+del in microsoft windows is an example of how the user can invoke a trusted path to the operating system to log on .",
    "output of a trusted path can not be manipulated by other processes and input can not be read .",
    "the process using a trusted path can be sure that input and output are shared only with the user .",
    "this authenticity is important when using all kinds of transaction systems , e.g. creating electronic signatures or online voting .",
    "we present related work in the next section , followed by an analysis of the entities involved in secure client - server communication .",
    "we then outline secure output and secure input in sections [ section : output ] and [ section : input ] .",
    "security of the implementation is discussed in detail in section [ section : security ] .",
    "we conclude by examining mechanisms aimed to improve protection against malware in windows vista and by taking a look at other platforms .",
    "user interface security has always been an issue .",
    "security evaluation criteria like the tcsec @xcite , ctcpec @xcite or the common criteria @xcite require a trusted path to establish a secure communication between the user and the operating system .",
    "the tcsec defines it as follows : _ ` trusted path  a mechanism by which a person at a terminal can communicate directly with the trusted computing base .",
    "this mechanism can only be activated by the person or the trusted computing base and can not be imitated by untrusted software . ' _ ( p. 113 )",
    "a proposal for a user interface for _ smite _ prevents trojan horses from tampering with application output .",
    "@xcite kernelizing the graphics server and delegating window manager tasks to the application level is a prototypical solution in @xcite .",
    "however , it is not compatible with the windows platform used on the vast majority of existing client computers .    in the microsoft windows operating system ,",
    "applications typically receive information about user actions by messages .",
    "since these can be sent by malicious programs as well , they are a convenient attack vector .",
    "it is a vulnerability by design ",
    "windows treats all processes equally that run on the same desktop . if one needs an undisturbed interface , a separate _ desktop _ attached to the interactive _ window station",
    "_ should be assigned .",
    "that approach is pursued by @xcite .",
    "however , managing separate desktops can be cumbersome for software developers .",
    "so most of today s software that interacts with a local user runs in a single desktop shared by benign and malign programs .",
    "this problem is encountered by local security applications such as electronic signature software @xcite , virus scanners , personal fire walls etc . in @xcite a dilemma is pointed out when notifying users about security events .",
    "users are notified about presence of a possibly malicious program that could hide that very notification immediately . some improvements to dialog - based security",
    "are shown in @xcite .",
    "application output should be defended against hiding .",
    "actions should be delayed so that users could interfere when a program is controlled by simulated input or scripting .",
    "_ directx _ can be used to achieve undisturbed output instead of the co - operative windows gdi .",
    "@xcite , @xcite , @xcite modifying the web browser to convey meta - information to the user about which window can be trusted is advocated by @xcite .",
    "window messages in event - driven systems in general are discussed in @xcite and @xcite where a lack of authentication is lamented .",
    "rigorous filtering of messages is proposed .",
    "a straight - forward alternative , outlined by @xcite , is to add an authenticated origin to messages .",
    "it requires changes in the decade - old backwards - compatible messaging system and is hence unlikely to be adopted by microsoft . in the x - windows system ,",
    "a radical approach is pursued , allowing to disable transmission of messages by the _ sendevents _ function .",
    "there may be occasions , like computer - based training , in which remote control of another application or parts of it is desired .",
    "only some applications expose an interface by which they can be automated explicitly ( e.g. , via the microsoft accessibility api ) .",
    "consequently , simulating user input is a quick and convenient way for small helper applications .",
    "a reminder that messages can be sent between processes running in different security contexts provide @xcite and @xcite : _ ` in the windows user interface , the desktop is the security boundary , and any application running on the interactive desktop can interact with any window on the interactive desktop , even if that window is invisible .",
    "this is true regardless of the security context of the application that creates the window and the security context of the application . '",
    "_ directx can ameliorate problems with forged messages .",
    "@xcite we found one company reporting to use ssl to encrypt input between the input device and the application .",
    "they claimed they were using patented technology from korea , but were unwilling or unable to provide any patent number or technical information on their product .",
    "@xcite    digital rights management ( drm ) techniques also intend to preserve integrity and confidentiality of displayed information .",
    "however , the threat scenario is different .",
    "drm has to protect content also against the local user , we need protection of the user against malware actions .",
    "as is often the case , the problem could be solved by using a separate hardware device to display data and receive user input . it would be just a physical representation of restricted access to resources and processes .",
    "unfortunately , hardware incurs additional costs and does not lend itself to fast and massive roll - out to a large user base .",
    "a number of applications today are structured after the client - server pattern : internet banking , contract signing , e.g. in e - government , or online voting . here",
    ", the main application is run on highly protected servers .",
    "users connect to the server from their local machine .",
    "the machine acts as a smart terminal , collecting user input , transmitting it to the server , receiving server data and displaying server output .",
    "the local user initiates and completes transactions with the server application .",
    "this is depicted in figure [ figure : clientserver ] .",
    "the server application does not interface directly with the user .",
    "it connects to a client application ; probably it is an application ( e.g. a web page , java applet , or activex control ) that was sent by the server in advance .",
    "this client application runs alongside other processes .",
    "most of these are benign processes which do not interfere with the client - server interaction , while some might have a malicious purpose",
    ".    processes are separated from each other by the client operating system .",
    "they share resources , most notably files , memory , and the user interface .",
    "often , they are executed in the same security context so that access control can not be used to distinguish different privileges .",
    "see figure [ figure : localapps ] .",
    "the user interacts with a local application via the local user interface .",
    "some problems immediately arise :    1 .   how do user and application know which server they are talking to ? 2 .",
    "how does the server know which application it is talking to ?",
    "how does the user know which application input is directed to ?",
    "how does the user know which application produces the output ?",
    "how does the application know that user received the output ? 6 .",
    "how does the application know where input comes from ?",
    "the first two problems can be solved by using a cryptographic protocol that offers secure authentication of the communicating parties and integrity of the communication , e.g. ssl .",
    "the strength of the cryptographic algorithm relies on access of the adversary to encrypted data and on it being computationally infeasible to decrypt the data or forge a digital signature .",
    "the remaining four questions demand a _ trusted path _ between the local application and the user .",
    "the local user interface is the weak link in the interaction of the user with the server application .",
    "an adversary is much more likely to attack here than spending resources on breaking a cryptographic algorithm  breaking cryptography is typically either a formidable mathematical challenge or requires a large amount of computing resources .",
    "attacks on the server are another option . however , a server is usually easier to protect than a large number of clients .",
    "server protection is outside the scope of this article .",
    "malware may act completely autonomous or may have a communication channel to a human agent .",
    "the human agent could remotely control the malicious process or assist it in analysing the situation in real time .",
    "an adversary could launch a man - in - the - middle attack , trying to open a session with the server and then mimicking the server towards the client application .",
    "it could also try to simulate user input , capture user input used for authentication , manipulate the output to mislead the user or cover up input manipulation .",
    "in our analysis we focus on microsoft windows  xp/2000 and present an implementation of our local trusted path .",
    "windows  xp is the system most likely in use at most clients .",
    "we cover the successor of windows  xp  vista  and also look at alternative platforms .",
    "we assume that the user works as a standard user and is not running malware processes under an administrative account . in that case",
    "we would not have to worry about a trusted path , since the malicious process would find more attractive targets exploiting its administrative rights .",
    "security of output to a window on a shared microsoft windows desktop is limited .",
    "there is no confidentiality ; all processes attached to the desktop can capture the desktop s content and that of all windows on the desktop .",
    "there is no integrity ; all processes can modify the desktop s content and that of all windows . @xcite",
    "it is a limitation by design as all processes sharing a desktop are assumed to behave cooperatively .",
    "if no cooperation can be vouched for , then separate desktops are generally recommended to solve this problem .",
    "the limitation described applies only when the gdi ( graphics device interface ) is used .",
    "another option is to use microsoft _ directx _ as explained in @xcite and @xcite .",
    "microsoft directx is a group of technologies designed by microsoft for running games .",
    "it is an integral part of windows  xp ( since windows  98 ) .",
    "directx gives software developers a consistent set of apis that give improved access to hardware .",
    "these apis control low - level functions , including graphics memory management and support for input devices .",
    "of the various components , directdraw / direct3d is responsible for output devices , directinput addresses input devices .",
    "directdraw allows to access the display hardware in exclusive full screen mode , keeping other programs from distorting the information presented to the user .",
    "directdraw works with surfaces on which processes can draw .",
    "one such surface is the gdi surface that is shared with the other processes in the current desktop .",
    "surfaces can exist in system or video memory . for increased security , video memory should be used .",
    "screen grabber software can read from system memory , but not from video memory . to avoid transfer of the content to system memory when",
    "there is not enough video memory available , we use an overlay surface .",
    "overlay surfaces are merged with the primary surface representing the screen s content .",
    "the overlay surface s content is shown at all places on the primary surface where the color key is used ",
    "one of the colors in the surface s palette of available colors .",
    "pixels in the color key s color are replaced with pixels from the overlay surface , as shown in figure [ figure : overlay ] .",
    "this does not modify the primary surface in any way .",
    "a screen grabber program that might gain read access to surfaces in system memory can only capture the primary surface s content .",
    "the user meanwhile sees the content of the overlay surface that only exists in video memory .",
    "combination of the surfaces is done internally by the video graphics adapter and , hence , can not be tampered with .",
    "we achieve integrity and confidentiality of screen output .        now that we have integrity , we need our control to authenticate to the user . in principle",
    "every process is capable of requesting fullscreen exclusive access to the screen .",
    "we need to show the user a secret that only the server - provided process and the user share .",
    "this technique is known as _",
    "window personalisation_.    as a shared secret we use what we call an _ application hologram_. it is basically a sequence of related images shown in an animation .",
    "it could also be a single image , but an animation is more likely to get the user s attention .",
    "the user is also more likely to notice its absence .",
    "the hologram is made known to the user upon registering with the service .",
    "here , the same process can be used that also distributes a pin code , a list of transaction numbers , or a security token to the user .",
    "the hologram could also be selected or uploaded by the user .",
    "the hologram is transferred by the server to the activex control .",
    "for this purpose , an ssl connection is used .",
    "the control uses a client key provided by the server when the control was downloaded in the web browser . in this way",
    "the server can verify that the hologram is requested by the recently downloaded control instead of malware running on the same host .",
    "the control is protected against accesses from other processes by the process separation techniques of the operating system .",
    "hence , the client key and the hologram are only known to the activex control .",
    "hence , we can show arbitrary data in exclusive fullscreen mode to the user .",
    "it can not be modified or captured by other processes .",
    "the user can determine the data s origin by verifying that the correct application hologram is present .",
    "we look at authenticity / integrity and confidentiality of user input .",
    "input is affected by window messages , directinput , sendinput , and low - level hooks .",
    "microsoft windows uses an internal messaging model to control windows applications .",
    "messages are generated whenever an event , e.g. a key press or a mouse move , occurs .",
    "however , not just user actions induce messages .",
    "malicious software can construct and send messages , thereby simulating user input to dialog components .",
    "it is not possible for a program to distinguish between messages placed in the queue by the operating system and messages placed by another application .",
    "_ directinput _ retrieves information before it is distilled by the operating system to windows messages .",
    "hence , input synthesized by placing a forged message in a program s message queue can be detected and ignored .",
    "the _ getasynckeystate _ function provides a similar way to verify if a key has been pressed / released or if only a message has been sent .",
    "if messages are not forged , input can be simulated by the _ sendinput",
    "_ function .",
    "key presses / releases and mouse movements can be placed in the raw input queue .",
    "this queue is used by both getasynckeystate and directinput .",
    "input simulated this way appears in the same way as genuine input .",
    "low - level keyboard hooks have access to the raw input queue . here",
    ", simulated input is marked with an `` injected '' flag .",
    "an application using this type of hook can thus detect and discard simulated input .",
    "there are two drawbacks : low - level keyboard hooks can be used to capture input to other processes , e.g. by a keylogger , and other processes can install these hooks and remove the flag . a method to counter",
    "this is to renew the hook permanently .",
    "the newest hook is placed first in the hook chain and gets to process the input data before it can be tampered with .",
    "it may be possible to distinguish users and untrustworthy programs by observing their input behaviour , e.g. programs simulating input much faster than an ordinary user could type .",
    "this rather falls in the field of behavioral biometrics .",
    "@xcite    our solution uses _ directinput _ or the win32 api function _ getasynckeystate _ ( two implementation variants ) to cope with forged window messages .",
    "defeating sendinput and low - level keyboard hooks requires fast renewal of our own low - level keyboard hook , e.g. , every 100  ms .",
    "hooks are troublesome for another reason .",
    "a system - wide hook is called by all processes in the same desktop .",
    "an attacker could use a hook not only to process events , but also to execute code of their choosing in the address space of another process .",
    "hooks can be disabled for a desktop session , but then we also lack the possibility to detect simulated input .",
    "we found a solution for this in combination with undisturbed output .",
    "as @xcite shows , trusted output plus a single bit of trusted input is equivalent to trusted input .",
    "user input  genuine or simulated  is collected by our activex control and sent to the server .",
    "the server stores the data in preparation of the next transaction and echoes it back to our control , adding a unique random value .",
    "the control shows the data on its secure surface , together with its application hologram and the random value .",
    "it then asks the user for confirmation .",
    "the user checks whether the data for the transaction are correct and if the application hologram is present . in the positive case ,",
    "the user inputs a one time password based on the random value . in the negative case ,",
    "the user closes the session or otherwise aborts communication with the control and the server  a single bit of trusted input .",
    "the one time password based on the random value can be implemented in various ways .",
    "we use a simple list with transaction numbers ( similar to those used by some banks for their online banking ) where the user looks up the transaction number associated with the random value .",
    "it could also be computed by a token that shows a confirmation number upon entering a challenge .",
    "the token then basically stores or computes a list with transaction numbers and outputs only the number associated with the given random value .    hence , we can not prevent malware from simulating user input , but we can prevent simulated user input from having an effect on the transaction .",
    "[ [ operating - system - integrity ] ] operating system integrity ",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + +    the security of our implementation of a trusted path for an application relies on the integrity of the operating system .",
    "we have analysed which operating system modules are needed to download and execute our activex control , and which are involved in using directx .",
    "the operating system is responsible for the integrity of its components .",
    "windows employs discretionary access control ( dac ) and integrity monitoring and restore of system files ( wfp ) .",
    "use of file protection mechanisms is shown in table [ table : fileprotection ] .",
    "most files reside in the _ windows _ or _ program files _ folder ( or subfolders ) .",
    "all are protected by access control entries preventing modification by processes executing under a standard user account .",
    "some files enjoy protection by the windows file protection service in addition .",
    "none of the files used by internet explorer or directx is unprotected against malware in a standard user account .",
    ".[table : fileprotection ] used files and their protection mechanisms .",
    "[ cols=\"<,>,>,>,>\",options=\"header \" , ]     [ [ non - developer - system ] ] non - developer system ",
    "+ + + + + + + + + + + + + + + + + + + + + +    directx comes in a run - time version used on most systems and in a developer version .",
    "while in the run - time version exclusive access provides confidentiality of output , the developer version opens for screen capture by malicious software .",
    "hence , we recommend installing the non - developer version of directx when using our solution .",
    "integrity is preserved in both variants .",
    "availability of the screen for output is handled on a first - come first - served basis .",
    "security - sensitive applications are advised to request access in full screen mode early and use application holograms to prove their authenticity to the user .    [",
    "[ screen - capture - software ] ] screen capture software  + +",
    "+ + + + + + + + + + + + + + + + + + + + + + +    programs that are able to capture directdraw surfaces do so by api hooking from an injected dll . using reverse engineering",
    ", we found that a dll was injected in running processes to capture calls to the directdraw api .",
    "once the adversarial code gets hold of the com interface pointer , it can access the surfaces from the injected dll and transfer screen contents to the capture software .",
    "similar methods could be used by malware .",
    "it is imperative that other processes be prevented from injecting code .",
    "hooking can be prevented by several means .",
    "the straight - forward approach is to disable systemwide hooks for the desktop object .",
    "this could be achieved during login .",
    "another approach is to employ api hooking to restrict calls to the setwindowshookex function .",
    "both techniques can not be used from a server - provided activex control .",
    "however , hooks need to be prevented anyway",
    ". a malicious process being able to execute code in the address space of another process can affect the system s security performance adversely .",
    "there are more attractive targets than performing ( non - trivial ) api hooking and screen capture .",
    "analysing and modifying a surface reliably and undetected in real time poses a high bar for an attacker .",
    "[ [ man - in - the - middle - attack - mitm ] ] man - in - the - middle - attack ( mitm )  + +",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    mitm attacks involving a spoofed server can be detected by use of the ssl protocol .",
    "the user can check the certificate of the server connected to .",
    "[ [ user - interface - remote - control ] ] user interface remote control ",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    with the user interface not being visible to malware , the attacker has to guess how to simulate user actions . by observing mouse movements or key strokes it might be possible for the attacker to learn about the user interface straucture .",
    "we could vary the interface slightly from time to time .",
    "however , the attacker might as well simulate ",
    "the server collects the ( manipulated ) data , sends it back and displays the data via the trusted output , then asks for confirmation .",
    "if the data was manipulated , the user can cancel the transaction .",
    "if the information is correct , the user enters a one - time usable transaction number .",
    "the number is bound to the data received .",
    "we could also request the user to solve a captcha ( completely automatic public turing test to tell computers and humans apart ) before entering confirmation .",
    "@xcite malware would not be able to solve it and hence , premature confirmation of faked data could be detected and rejected .",
    "our solution hence bears the following security properties :    1 .",
    "we can prevent user interface modification ( directdraw ) 2 .",
    "we can detect user interface spoofing when it happens ( application hologram , ssl certificate ) 3 .",
    "we can protect user interface confidentiality ( overlay surface ) 4 .",
    "we can detect user interface remote control after it has happened ( window messages , transaction number list / token ) 5 .",
    "we _ can not _ prevent malware from denying service    our focus is on a sound design of how protection mechanisms are used .",
    "if there are flaws owing to errors in the implementation of the platform , they have to be covered by other means .",
    "if one sees the windows platform as an insecure platform because of implementation flaws , one should refrain from using any security - relevant software on it .",
    "however , with the current market share , we have to offer practical solutions that help users who do not want to install a different operating system .",
    "vista  the new microsoft windows operating system version  proposes some interesting techniques to improve malware resistance .",
    "it is not yet clear if all the functionality currently present in the beta version will be in the final product .",
    "documentation is still incomplete at best ; it is mostly provided as short - lived weblog communication . for our purposes of achieving an unmanipulated user interface , _ mic _ ( mandatory integrity control ) ,",
    "_ uipi _ ( user interface privilege isolation ) , _ uac _ ( user account control ) , internet explorer 7 protected mode , and the _ desktop window manager _",
    "are relevant .    with _ mandatory integrity control",
    "_ every process and every securable object are assigned an integrity level : _ low _ , _ medium _ , _ high _ , _ system_. the level of the process must dominate the level of the object to be able to modify the object .",
    "mic is applied before dac ( discretionary access control ) permissions .",
    "it especially protects operating system files from modification .",
    "mic in combination with _",
    "user interface privilege isolation _ this prevents processes at a lower level to send window messages to processes at a higher level .",
    "in addition , it prevents hooks created by lower level processes to be called by higher level processes .",
    "processes started by the shell usually run at _ medium _ integrity level .",
    "if our activex control could be elevated to run at e.g. _ high _ level , it would be protected from forged windows messages and message hooks . however , _",
    "high _ level might require running the control with administrative privileges , something we want to avoid .",
    "_ user account control _ helps to run processes with few privileges .",
    "processes will execute with a restricted standard user access token .",
    "if an action requires more privileges , the operating system asks the user to provide proper credentials to complete the task .",
    "malware is hence restricted in its action under all accounts .",
    "the operating system switches to the logon desktop to show the elevation prompt using the trusted path to the user .",
    "however , malware could pretend to show an elevation prompt since the user does not use a secure attention sequence and the prompt can not prove its origin .",
    "internet explorer 7 will run in so - called _ protected mode_. it is basically a process running at _ low _ integrity level under a user account of its own .",
    "it has write access only to a small number of folders and registry locations .",
    "if internet explorer gets compromised , malware can not spread to other locations in the system and is executed only under the restricted account .",
    "the output model is going to change .",
    "windows on the desktop are managed by the _ desktop window manager _ ( dwm ) .",
    "when we acquire a device context for our directdraw surface to draw on , directdraw locks the surface .",
    "this causes the dwm to enter a compatibility mode and disable some of the fancy effects of the new user interface .",
    "the system is still functional , though .",
    "the biggest improvement as regards a trusted path for applications will be _ user interface privilege isolation _",
    ", limiting the use of system - wide hooks .",
    "[ [ java ] ] java + + + +    offers fullscreen exclusive mode access to the screen starting with version 1.4 .",
    "@xcite this functionality is procided by the class java.awt.graphicdevice .",
    "methods are very similar to the directdraw api .",
    "in fact , java uses directdraw if it is available on the platform . otherwise , fullscreen mode is simulated with a top - level window filling the whole gdi surface . on unix platforms ,",
    "java may use _ x11_. no api is provided to check for the authenticity of input .",
    "it is not possible to use overlay surfaces that always are stored in video memory .",
    "conventional surfaces used for drawing can be placed in system memory by the video driver .",
    "the java native interface allows access to platform - dependent code . in principle , a java application could also use directdraw and directinput via this interface .",
    "if java was used as a replacement for _ activex _ , the client security requirements would have to include securing the _ java virtual machine _ against manipulation by untrustworthy processes .",
    "[ [ qt ] ] qt + +    is a cross - platform development framework for windows , mac , and x11 .",
    "@xcite if consists of more than 400 classes , many of which can be used for user interface construction .",
    "_ qt _ can also be used in conjunction with activex .",
    "however , qt renders to the primary gdi surface under windows and leaves its output vulnerable to modification by other processes . it might be possible to subclass or wrap the qt widgets to use directx instead .",
    "the single advantage we see with qt widgets is their independence of window messages .",
    "malware can not simply modify or influence the user interface by sending window messages .",
    "[ [ opengl ] ] opengl + + + + + +    is an industry standard api for 2d and 3d graphics programming .",
    "@xcite it is used to render graphical objects to a frame buffer .",
    "access to the buffer is controlled by the cooperative window manager .",
    "opengl can hence not guarantee exclusive access .",
    "[ [ gtk ] ] gtk+ + + + +    is a multi - platform toolkit for creating graphical user interfaces .",
    "@xcite like _ qt _ or _ opengl _ it executes on top of the operating system and can not assure exclusive access to user interface hardware .",
    "[ [ simple - directmedia - layer - sdl ] ] simple directmedia layer ( sdl ) + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    is a cross - platform multimedia library designed to provide low level access to input and output hardware .",
    "@xcite multiple platforms are supported , including windows , linux , and mac .",
    "_ sdl _ does not establish direct access by its own means , but leverages the capabilities of the operating system . under windows ,",
    "directx is used if driver support is available .",
    "there exist implementations that use _ sdl _ with _ directfb _ on the linux platform .",
    "[ [ linux ] ] linux + + + + +    offers neither _ activex _ nor _ directx_. access to the screen is possible using the fbdev frame buffer device .",
    "it is hardware - independent and provides screen access from the console .",
    "the frame buffer device is used by the api layers introduced by _",
    "gtk+ _ or _",
    "sdl_. the _ directfb _ project @xcite seems to offer more control over frame buffer access .",
    "however , it has not yet reached a 1.0 version number , and it remains unclear what has to be installed before a server - provided local application can use the api .",
    "if applications run under the x - windows server , the x - window windowing system is used .",
    "it manages cooperatively how windows are drawn on the screen .",
    "it is possible to restrict the use of the _ sendevents _ function to simulate user input .",
    "communicating with the local human user is the weak link in client - server interaction .",
    "we have presented a method to ensure the integrity and authenticity of client - server communication from end to end .",
    "our approach makes use of existing technology , i.e. ssl and activex to deliver an application to the user s machine , and directx to securely present information .",
    "no modification of the operating system is needed and no expensive hardware is employed .",
    "installation can be done on - the - fly and , hence , can be centrally managed and supported .",
    "instant delivery also ensures that the process can bear a server - implanted secret to authenticate to the server .",
    "we provide components that application developers can use in their own projects .",
    "they can be used to retrofit existing activex controls with exclusive screen access and process authentication .",
    "they can also be an example for developers including this technology in their applications from the ground up .",
    "further research should include how the new version of microsoft windows impacts the techniques and how other operating systems could be upgraded to provide secure local interaction .",
    "how to prevent denial - of - user - interface - access by local malware is also an open question .",
    "a.  spalka and h.  langweg .",
    "notes on program - orientated access control . in _ proceedings of international workshop on trust and privacy in digital business ( trustbus 2002 ) held in conjunction with 13th international workshop on database and expert systems applications ( dexa 2002 ) _ , pages 451455 .",
    "ieee computer society , 2002 .",
    "l.  von ahn , m.  blum , n.  hopper , and j.  langford . : telling humans and computers apart . in e.",
    "biham , editor , _ advances in cryptology ",
    "eurocrypt 2003 : international conference on the theory and applications of cryptographic techniques , warsaw , poland , may 4 - 8 , 2003 , lncs 2656 _ , pages 294311 .",
    "springer , 2003 ."
  ],
  "abstract_text": [
    "<S> we present a method to secure the complete path between a server and the local human user at a network node . </S>",
    "<S> this is useful for scenarios like internet banking , electronic signatures , or online voting . </S>",
    "<S> protection of input authenticity and output integrity and authenticity is accomplished by a combination of traditional and novel technologies , e.g. , ssl , activex , and directx . </S>",
    "<S> our approach does not require administrative privileges to deploy and is hence suitable for consumer applications . </S>",
    "<S> results are based on the implementation of a proof - of - concept application for the windows platform . </S>"
  ]
}
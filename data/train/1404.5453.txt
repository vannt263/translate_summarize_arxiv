{
  "article_text": [
    "* games on graphs .",
    "* games played on graphs are central in several important problems in computer science , such as reactive synthesis  @xcite , verification of open systems  @xcite , and many others .",
    "the game is played by several players on a finite - state graph , with a set of angelic ( existential ) players and a set of demonic ( universal ) players as follows : the game starts at an initial state , and given the current state , the successor state is determined by the choice of moves of the players .",
    "the outcome of the game is a",
    "_ play _ , which is an infinite sequence of states in the graph .",
    "a _ strategy _ is a transducer to resolve choices in a game for a player that given a finite prefix of the play specifies the next move .",
    "given an objective ( the desired set of behaviors or plays ) , the goal of the existential players is to ensure the play belongs to the objective irrespective of the strategies of the universal players . in verification and control of reactive systems",
    "an objective is typically an @xmath2-regular set of paths .",
    "the class of @xmath2-regular languages , that extends classical regular languages to infinite strings , provides a robust specification language to express all commonly used specifications , and parity objectives are a canonical way to define such @xmath2-regular specifications  @xcite .",
    "thus games on graphs with parity objectives provide a general framework for analysis of reactive systems",
    ".    * perfect vs partial observation . *",
    "many results about games on graphs make the hypothesis of _ perfect observation _",
    "( i.e. , players have perfect or complete observation about the state of the game ) . in this",
    "setting , due to determinacy ( or switching of the strategy quantifiers for existential and universal players )  @xcite , the questions expressed by an arbitrary alternation of quantifiers reduce to a single alternation , and thus are equivalent to solving two - player games ( all the existential players against all the universal players ) .",
    "however , the assumption of perfect observation is often not realistic in practice .",
    "for example in the control of physical systems , digital sensors with finite precision provide partial information to the controller about the system state  @xcite .",
    "similarly , in a concurrent system the modules expose partial interfaces and have access to the public variables of the other processes , but not to their private variables  @xcite .",
    "such situations are better modeled in the more general framework of _ partial - observation _ games  @xcite .    * partial - observation games . * since partial - observation games are not determined , unlike the perfect - observation setting , the multi - player games problems do not reduce to the case of two - player games . typically , multi - player partial - observation games are studied in the following setting : a set of partial - observation existential players , against a perfect - observation universal player , such as for distributed synthesis  @xcite .",
    "the problem of deciding if the existential players can ensure a reachability ( or a safety ) objective is undecidable in general , even for two existential players  @xcite .",
    "however , if the information of the existential players form a chain ( i.e. , existential player  1 more informed than existential player  2 , existential player  2 more informed than existential player  3 , and so on ) , then the problem is decidable  @xcite .",
    "* games with a weak adversary .",
    "* one aspect of multi - player games that has been largely ignored is the presence of weaker universal players that do not have perfect observation .",
    "however , it is natural in the analysis of composite reactive systems that some universal players represent components that do not have access to all variables of the system . in this work",
    "we consider games where adversarial players can have partial observation . if there are two existential ( resp .",
    ", two universal ) players with incomparable partial observation , then the undecidability results follows from  @xcite ; and if the information of the existential ( resp . ,",
    "universal ) players form a chain , then they can be reduced to one partial - observation existential ( resp . ,",
    "universal ) player .",
    "we consider the following case of partial - observation games : one partial - observation existential player ( player  1 ) , one partial - observation universal player ( player  2 ) , one perfect - observation existential player ( player  3 ) , and one perfect - observation universal player ( player  4 ) .",
    "roughly , having more partial - observation players in general leads to undecidability , and having more perfect - observation players reduces to two perfect - observation players .",
    "we first present our results and then discuss two applications of our model .",
    "* results . *",
    "our main results are as follows :    _ player  1 less informed .",
    "_ we first consider the case when player  1 is less informed than player  2 .",
    "we establish the following results : @xmath3  a 2-exptime upper bound for parity objectives and a 2-exptime lower bound for reachability objectives ( i.e. , we establish 2-exptime - completeness ) ; @xmath4  an expspace upper bound for parity objectives when player  1 is blind ( has only one observation ) , and expspace lower bound for reachability objectives even when both player  1 and player  2 are blind . in all these cases , if the objective can be ensured then the upper bound on memory requirement of winning strategies is at most doubly exponential .",
    "_ player  1 is more informed .",
    "_ we consider the case when player  1 can be more informed as compared to player  2 , and show that even when player  1 has perfect observation there is a non - elementary lower bound on the memory required by winning strategies .",
    "this result is also in sharp contrast to distributed games , where if only one player has partial observation then the upper bound on memory of winning strategies is exponential .",
    "* applications . *",
    "we discuss two applications of our results : the sequential synthesis problem , and new complexity results for partial - observation _",
    "stochastic _ games .",
    "the sequential synthesis problem consists of a set of partially implemented modules , where first a set of modules needs to be refined , followed by a refinement of some modules by an external source , and then the remaining modules are refined so that the composite open reactive system satisfies a specification .",
    "given the first two refinements can not access all private variables , we have a four - player game where the first refinement corresponds to player  1 , the second refinement to player  2 , the third refinement to player  3 , and player  4 is the environment .    in partial - observation stochastic games ,",
    "there are two partial - observation players ( one existential and one universal ) playing in the presence of uncertainty in the transition function ( i.e. , stochastic transition function ) .",
    "the qualitative analysis question is to decide the existence of a strategy for the existential player to ensure the parity objective with probability  1 ( or with positive probability ) against all strategies of the universal player .",
    "the witness strategy can be randomized or deterministic ( pure ) .",
    "while the qualitative problem is undecidable , the practically relevant restriction to finite - memory pure strategies reduces to the four - player game problem .",
    "moreover , for finite - memory strategies , the decision problem for randomized strategies reduces to the pure strategy question  @xcite . by the results we establish in this paper , new decidability and complexity results",
    "are obtained for the qualitative analysis of partial - observation stochastic games with player  @xmath1 partially informed but more informed than player  @xmath0 .",
    "the complexity results for almost - sure winning are summarized in table  [ tab : complexity ] .",
    "surprisingly for reachability objectives , whether player  2 is perfectly informed or more informed than player  1 does not change the complexity for randomized strategies , but it results in an exponential increase in the complexity for pure strategies .    * organization of the paper . * in section",
    "[ sec : definitions ] we present the definitions of three - player games , and other related models ( such as partial - observation stochastic games ) . in section  [ sec : player - one - less ] we establish the results for three - player games with player  1 less informed , and in section  [ sec : player - one - perfect ] we show hardness of three - player games with perfect observation for player  1 ( which is a special case of player  1 more informed ) .",
    "finally , in section  [ sec : more - than - three ] we show how our upper bounds for three - player games from section  [ sec : player - one - less ] extend to four - player games , and we discuss multi - player games .",
    "we conclude with the applications in section  [ sec : applications ] .",
    "we first consider three - player games with parity objectives and we establish new complexity results in section  [ sec : player - one - less ] that we later extend to four - player games in section  [ sec : more - than - three ] . in this section , we also present the related models of alternating tree automata that provide useful technical results , and two - player stochastic games for which our contribution implies new complexity results .      [ [ games ] ] games + + + + +    given alphabets @xmath5 of actions for player  @xmath6 ( @xmath7 ) , a _ three - player game _ is a tuple @xmath8 where :    @xmath9 is a finite set of states with @xmath10 the initial state ; and    @xmath11 is a deterministic transition function that , given a current state @xmath12 , and actions @xmath13 , @xmath14 , @xmath15 of the players , gives the successor state @xmath16 .",
    "the games we consider are sometimes called _ concurrent _ because all three players need to choose simultaneously an action to determine a successor state . the special class of _",
    "turn - based _",
    "games corresponds to the case where in every state , one player has the turn and his sole action determines the successor state . in our framework , a turn - based state for player  @xmath0 is a state @xmath17 such that @xmath18 for all @xmath13 , @xmath19 , and @xmath20 .",
    "we define analogously turn - based states for player  @xmath1 and player  @xmath21 .",
    "a game is turn - based if every state of @xmath22 is turn - based ( for some player ) .",
    "the class of two - player games is obtained when @xmath23 is a singleton . in a game  @xmath22 ,",
    "given @xmath24 , @xmath13 , @xmath14 , let @xmath25 .",
    "[ [ observations ] ] observations + + + + + + + + + + + +    for @xmath7 , a set @xmath26 of _ observations _ ( for player  @xmath6 ) is a partition of @xmath9 ( i.e. , @xmath27 is a set of non - empty and non - overlapping subsets of @xmath9 , and their union covers @xmath9 ) .",
    "let @xmath28 be the function that assigns to each state @xmath17 the ( unique ) observation for player  @xmath6 that contains @xmath12 , i.e. such that @xmath29 .",
    "the functions @xmath30 are extended to sequences @xmath31 of states in the natural way , namely @xmath32 .",
    "we say that player  @xmath6 is _ blind _ if @xmath33 , that is player  @xmath6 has only one observation ; player  @xmath6 has _ perfect information _",
    "if @xmath34 , that is player  @xmath6 can distinguish each state ; and player  @xmath0 is _ less informed _ than player  @xmath1 ( we also say player  2 is more informed ) if for all @xmath35 , there exists @xmath36 such that @xmath37 .",
    "[ [ strategies ] ] strategies + + + + + + + + + +    for @xmath7 , let @xmath38 be the set of _ strategies _ @xmath39 of player  @xmath6 that , given a sequence of past observations , give an action for player  @xmath6 .",
    "equivalently , we sometimes view a strategy of player  @xmath6 as a function @xmath40 satisfying @xmath41 for all @xmath42 such that @xmath43 , and say that @xmath44 is _ observation - based_.    [ [ outcome ] ] outcome + + + + + + +    given strategies @xmath45 ( @xmath7 ) in @xmath22 , the _ outcome play _ from a state @xmath46 is the infinite sequence @xmath47 such that for all @xmath48 , we have @xmath49 where @xmath50 ( for @xmath7 ) .    [ [ objectives ] ] objectives + + + + + + + + + +    an _ objective _ is a set @xmath51 of infinite sequences of states .",
    "a play @xmath52 _ satisfies _ the objective @xmath53 if @xmath54 .",
    "an objective @xmath53 is _ visible _ for player @xmath6 if for all @xmath55 , if @xmath54 and @xmath43 , then @xmath56 . we consider the following objectives :    _ reachability_. given a set @xmath57 of target states , the _ reachability _ objective @xmath58 requires that a state in @xmath59 be visited at least once , that is , @xmath60 .    _",
    "safety_. given a set @xmath57 of target states , the _ safety _ objective @xmath61 requires that only states in @xmath59 be visited , that is , @xmath62 .    _",
    "parity_. for a play @xmath63 we denote by @xmath64 the set of states that occur infinitely often in @xmath52 , that is , @xmath65 . for @xmath66 , let @xmath67 be a priority function , which maps each state to a nonnegative integer priority .",
    "the parity objective @xmath68 requires that the minimum priority occurring infinitely often be even .",
    "formally , @xmath69 .",
    "parity objectives are a canonical way to express @xmath2-regular objectives  @xcite . if the priority function is constant over observations of player  @xmath6 , that is for all observations @xmath70 we have @xmath71 for all",
    "@xmath72 , then the parity objective @xmath68 is visible for player  @xmath6 .    [ [ decision - problem ] ] decision problem + +",
    "+ + + + + + + + + + + + + +    given a game @xmath8 and an objective @xmath73 , the _ three - player decision problem _ is to decide if @xmath74 .",
    "the results for the three - player decision problem have tight connections and implications for decision problems on alternating tree automata and partial - observation stochastic games that we formally define below .    [",
    "[ trees ] ] trees + + + + +    an @xmath75-labeled tree @xmath76 consists of a prefix - closed set @xmath77 ( i.e. , if @xmath78 with @xmath79 and @xmath66 , then @xmath80 ) , and a mapping @xmath81 that assigns to each node of @xmath82 a letter in @xmath75 . given @xmath79 and @xmath66 such that @xmath83 , we call @xmath84 the _ successor _ in direction @xmath85 of @xmath86 .",
    "the node  @xmath87 is the _ root _ of the tree",
    "infinite path _ in @xmath82 is an infinite sequence @xmath88 of directions @xmath89 such that every finite prefix of @xmath90 is a node in  @xmath82 .",
    "[ [ alternating - tree - automata ] ] alternating tree automata + + + + + + + + + + + + + + + + + + + + + + + + +    given a parameter @xmath91 , we consider input trees of rank @xmath92 , i.e. trees in which every node has at most @xmath92 successors .",
    "let @xmath93 = \\{0,\\dots , k-1\\}$ ] , and given a finite set @xmath94 , let @xmath95 be the set of positive boolean formulas over @xmath94 , that is formulas built from elements in @xmath96 using the boolean connectives @xmath97 and @xmath98 . an _ alternating tree automaton _ over alphabet @xmath75 is a tuple @xmath99 where :    @xmath100 is a finite set of states with @xmath101 the initial state ; and    @xmath102)$ ] is a transition function .",
    "intuitively , the automaton is executed from the initial state @xmath103 and reads the input tree in a top - down fashion starting from the root  @xmath87 . in state @xmath104 ,",
    "if @xmath105 is the letter that labels the current node @xmath86 of the input tree , the behavior of the automaton is given by the formulas @xmath106 .",
    "the automaton chooses a _ satisfying assignment _ of @xmath107 , i.e. a set @xmath108 $ ] such that the formula @xmath107 is satisfied when the elements of @xmath109 are replaced by @xmath110 , and the elements of @xmath111 ) \\setminus z$ ] are replaced by @xmath112 .",
    "then , for each @xmath113 a copy of the automaton is spawned in state @xmath114 , and proceeds to the node @xmath115 of the input tree .",
    "in particular , it requires that @xmath115 belongs to the input tree .",
    "for example , if @xmath116 , then the automaton should either spawn two copies that process the successor of  @xmath86 in direction  @xmath117  ( i.e. , the node @xmath118 ) and that enter the states  @xmath114 and  @xmath119 respectively , or spawn three copies of which one processes @xmath118 and enters state  @xmath120 , and the other two process @xmath121 and enter the states  @xmath122 and  @xmath123 respectively .",
    "[ [ language - and - emptiness - problem ] ] language and emptiness problem + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    a run of @xmath124 over a @xmath75-labeled input tree @xmath76 is a tree @xmath125 labeled by elements of @xmath126 , where a node of @xmath127 labeled by @xmath128 corresponds to a copy of the automaton processing the node  @xmath86 of the input tree in state @xmath104 . formally , a _ run _ of @xmath124 over an input tree @xmath76 is a @xmath129-labeled tree @xmath125 such that @xmath130 and for all @xmath131 , if @xmath132 , then the set @xmath133 is a satisfying assignment for @xmath134 .",
    "hence we require that , given a node @xmath135 in @xmath127 labeled by @xmath128 , there is a satisfying assignment @xmath108 $ ] for the formula @xmath136 where @xmath137 is the letter labeling the current node @xmath86 of the input tree , and for all states @xmath138 there is a ( successor ) node @xmath139 in @xmath127 labeled by @xmath140 .",
    "given an accepting condition @xmath141 , we say that a run @xmath125 is _ accepting _ if for all infinite paths @xmath142 of @xmath127 , the sequence @xmath143 such that @xmath144 for all @xmath145 is in @xmath107 .",
    "the _ language _ of @xmath124 is the set @xmath146 of all input trees of rank @xmath92 over which there exists an accepting run of @xmath124 .",
    "the emptiness problem for alternating tree automata is to decide , given @xmath124 and parameter @xmath92 , whether @xmath147 . for details related to alternating tree automata and the emptiness problem",
    "see  @xcite .",
    "[ [ two - player - partial - observation - stochastic - games ] ] two - player partial - observation stochastic games + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    given alphabet @xmath5 of actions , and set @xmath27 of observations ( for player  @xmath148 ) , a _ two - player partial - observation stochastic game _ ( for brevity , two - player stochastic game ) is a tuple @xmath149 where @xmath9 is a finite set of states , @xmath10 is the initial state , and @xmath150 is a probabilistic transition where @xmath151 is the set of probability distributions @xmath152 $ ] on @xmath9 , such that @xmath153 . given a current state @xmath12 and actions  @xmath154 for the players , the transition probability to a successor state  @xmath155 is @xmath156 .",
    "observation - based strategies are defined as for three - player games .",
    "outcome play _ from a state @xmath46 under strategies @xmath157 is an infinite sequence @xmath158 such that @xmath159 , @xmath160 , and @xmath161 for all @xmath162 .",
    "[ [ qualitative - analysis ] ] qualitative analysis + + + + + + + + + + + + + + + + + + + +    given an objective @xmath53 that is borel measurable ( all borel sets in the cantor topology and all objectives considered in this paper are measurable  @xcite ) , a strategy @xmath163 for player  @xmath0 is _ almost - sure winning _ ( resp . , _ positive winning _ ) for the objective @xmath53 from @xmath46 if for all observation - based strategies @xmath164 for player  @xmath1 , we have @xmath165 ( resp .",
    ", @xmath166 ) where @xmath167 is the unique probability measure induced by the natural probability measure on finite prefixes of plays ( i.e. , the product of the transition probabilities in the prefix ) .",
    "we consider the three - player ( non - stochastic ) games defined in section  [ sec : three - players ] .",
    "we show that for reachability and parity objectives the three - player decision problem is decidable when player  @xmath0 is less informed than player  @xmath1 .",
    "the problem is expspace - complete when player  @xmath0 is blind , and 2-exptime - complete in general .",
    "[ rem : final - player ] observe that for three - player ( non - stochastic ) games , once the strategies of the first two players are fixed we obtain a graph , and in graphs perfect - information coincides with blind for construction of a path ( see  ( * ? ? ?",
    "* lemma  2 ) that counting strategies that count the number of steps are sufficient which can be ensured by a player with no information ) .",
    "hence without loss of generality we consider that player  3 has perfect observation , and drop the observation for player  3 .",
    "our results for upper bounds are obtained by a reduction of the three - player game problem to an equivalent exponential - size partial - observation game with only two players , which is known to be solvable in exptime for parity objectives , and in psapce when player  @xmath0 is blind  @xcite .",
    "our reduction preserves the number of observations of player  @xmath0 ( thus if player  @xmath0 is blind in the three - player game , then player  @xmath0 is also blind in the constructed two - player game ) .",
    "hence , the 2-exptime and expspace bounds follow from this reduction .",
    "[ theo : one - less - informed - upper - bound ] given a three - player game @xmath8 with player  @xmath0 less informed than player  @xmath1 and a parity objective @xmath53 , the problem of deciding whether @xmath74 can be solved in 2-exptime .",
    "if player  @xmath0 is blind , then the problem can be solved in expspace .",
    "the proof is by a reduction of the decision problem for three - player games to a decision problem for partial - observation two - player games with the same objective .",
    "we present the reduction for parity objectives that are visible for player  @xmath1 ( defined by priority functions that are constant over observations of player  @xmath1 ) . the general case of not necessarily visible parity objectives",
    "can be solved using a reduction to visible objectives , as in  ( * ? ? ?",
    "* section 3 ) .    given a three - player game @xmath8 over alphabet of actions @xmath5 ( @xmath7 ) , and observations @xmath168 for player  @xmath0 and player  @xmath1 , with player  @xmath0 less informed than player  @xmath1",
    ", we construct a two - player game @xmath169 over alphabet of actions @xmath170 ( @xmath171 ) , and observations @xmath172 and perfect observation for player  2 , where ( intuitive explanations follow ) :    @xmath173 ;    @xmath174 , and @xmath175 ;    @xmath176 , and let @xmath177 be the corresponding observation function ;    @xmath178 .    intuitively , the state space @xmath179 is the set of knowledges of player  @xmath1 about the current state in @xmath22 , i.e. , the sets of states compatible with an observation of player  @xmath1 . along a play in @xmath180 ,",
    "the knowledge of player  @xmath1 is updated to represent the set of possible current states in which the game  @xmath22 can be . in  @xmath180 player  @xmath1",
    "has perfect observation and the role of player  @xmath0 in the game @xmath180 is to simulate the actions of both player  @xmath0 and player  @xmath21 in @xmath22 . since player  @xmath1 fixes his strategy before player  @xmath21 in @xmath22 , the simulation should not let player  @xmath1 know action , but only the observation that player  @xmath1 will actually see while playing the game .",
    "the actions of player  @xmath0 in @xmath180 are pairs @xmath181 where @xmath182 is a simple action of player  @xmath0 in @xmath22 , and @xmath183 gives the observation @xmath184 received by player  @xmath1 after the response of player  @xmath21 to the action @xmath185 of player  @xmath1 when the knowledge of player  @xmath1 is  @xmath104 . in  @xmath180 ,",
    "player  @xmath0 has partial observation , as he can not distinguish knowledges of player  @xmath1 that belong to the same observation of player  @xmath0 in @xmath22 .",
    "the transition relation updates the knowledges of player  @xmath1 as expected .",
    "note that @xmath186 , and therefore if player  @xmath0 is blind in @xmath22 then he is blind in  @xmath180 as well .    given a visible parity objective @xmath187 where @xmath67 is constant over observations of player  @xmath1 , let @xmath188 where @xmath189 for all @xmath190 and @xmath191 .",
    "note that the function @xmath192 is well defined since @xmath104 is a subset of an observation of player  @xmath1 and thus @xmath71 for all @xmath193 .",
    "however , the parity objective @xmath188 may not be visible to player  @xmath0 in @xmath22 .",
    "we show that given a witness strategy in @xmath22 we can construct a witness strategy in @xmath180 and vice - versa .",
    "let @xmath38 be the set of observation - based strategies of player  @xmath6 ( @xmath7 ) in @xmath22 , and let @xmath194 be the set of observation - based strategies of player  @xmath6 ( @xmath171 ) in @xmath180 .",
    "we claim that the following statements are equivalent :    * in @xmath22 , @xmath74 . * in @xmath180 , @xmath195 .",
    "the 2-exptime result of the theorem follows from this equivalence because the game @xmath180 is at most exponentially larger than the game @xmath22 , and two - player partial - observation games with a parity objective can be solved in exptime , and when player  @xmath0 is blind they can be solved in pspace  @xcite .",
    "observe that when player  @xmath1 has perfect information , his observations are singletons and @xmath180 is no bigger than @xmath22 , and an exptime bound follows in that case .    to show that @xmath196 implies @xmath197 ,",
    "let @xmath198 be a strategy for player  @xmath0 such that for all strategies @xmath199 , there is a strategy @xmath200 such that @xmath201 . from @xmath163",
    ", we construct an ( infinite ) dag over state space @xmath202 with edges labeled by elements of @xmath203 defined as follows .",
    "the root is @xmath204 .",
    "there is an edge labeled by @xmath205 from @xmath206 to @xmath207 if @xmath208 where @xmath209 , and @xmath210 where @xmath36 is the ( unique ) observation of player  @xmath0 such that @xmath37 .",
    "note that for every node @xmath211 in the dag , for all states @xmath190 , for all @xmath212 , there is a successor @xmath213 of @xmath214 such that @xmath215 where @xmath209 .",
    "consider a perfect - information turn - based game played over this dag , between player  @xmath1 choosing actions @xmath216 and player  @xmath21 choosing observations @xmath35 , resulting in an infinite path @xmath217 in the dag as expected , and that is defined to be winning for player  @xmath21 if the sequence @xmath218 satisfies @xmath219 . we show that in this game , for all strategies of player  @xmath1 ( which naturally define functions @xmath199 ) , there exists a strategy of player  @xmath21 ( a function @xmath220 ) to ensure that the resulting play satisfies @xmath219 .",
    "the argument is based on @xmath196 saying that given the strategy @xmath163 is fixed , for all strategies @xmath199 , there is a strategy @xmath200 such that @xmath201 .",
    "given a strategy for player  @xmath1 in the game over the dag , we use @xmath221 to choose observations @xmath35 as follows .",
    "we define a labelling function @xmath222 over the dag in a top - down fashion such that @xmath223 .",
    "first , let @xmath224 , and given @xmath225 with an edge labeled by @xmath226 to @xmath207 , let @xmath227 where @xmath209 and @xmath228 .",
    "note that indeed @xmath215 .",
    "now we define a strategy for player  @xmath21 that , in a node @xmath229 of the dag , chooses the observation @xmath230 where @xmath231 , @xmath209 , @xmath232 is the action chosen by player  @xmath1 at that node ( remember we fixed a strategy for player  @xmath1 ) , and @xmath228 . since @xmath223",
    ", it follows that the resulting play satisfies @xmath219 since @xmath233 satisfies @xmath53 .    by determinacy of perfect - information turn - based games  @xcite , in the game over the dag there",
    "exists a strategy @xmath234 for player  @xmath21 such that for all player-@xmath1 strategies , the outcome play satisfies @xmath219 .",
    "using @xmath234 , we construct a strategy @xmath235 for player  @xmath0 in @xmath180 as follows .",
    "first , by a slight abuse of notation , we identify the observations @xmath236 with the observation @xmath36 such that @xmath237 for all @xmath238 . for",
    "all @xmath239 , let @xmath240 where @xmath209 and @xmath183 is defined by @xmath241 . by construction of the dag and of the strategy @xmath235 , for all strategies of player  @xmath1 in @xmath180 the outcome play @xmath218 satisfies the parity objective @xmath219 , and thus @xmath235 is a winning observation - based strategy in @xmath180 .    to show that @xmath197 implies @xmath196 , let @xmath235 be a winning observation - based strategy for the objective @xmath219 in @xmath180 .",
    "consider the dag over state space @xmath202 with edges labeled by elements of @xmath242 defined as follows .",
    "the root is @xmath204 .",
    "for all nodes @xmath206 , for all @xmath216 , there is an edge labeled by @xmath232 from @xmath206 to @xmath207 if @xmath243 and @xmath210 where @xmath244 and @xmath245 , and @xmath36 is the ( unique ) observation of player  @xmath0 such that @xmath37 .",
    "we say that @xmath207 is the @xmath232-successor of @xmath206 .",
    "note that for all @xmath246 , there exists @xmath190 and @xmath247 such that @xmath248 .",
    "this dag mimics the unraveling of @xmath180 under @xmath235 , and since @xmath235 is a winning strategy , for all infinite paths @xmath217 of the dag , the sequence @xmath218 satisfies @xmath219 .",
    "define the strategy @xmath163 such that @xmath249 if @xmath240 ( again identifying the observations in @xmath250 and @xmath251 ) . to show that @xmath196 holds , fix an arbitrary observation - based strategy @xmath164 for player  @xmath1 .",
    "the outcome play of @xmath163 and @xmath164 in @xmath180 is the sequence @xmath252 where @xmath253 is the root , and such that for all @xmath254 , the node @xmath255 is the @xmath232-successor of @xmath256 where @xmath257 ( where @xmath258 is naturally defined as the unique observation @xmath35 such that @xmath259 ) . from this path in the dag , we construct an infinite path @xmath260 in @xmath22 using knig s lemma  @xcite as follows .",
    "first , it is easy to show by induction ( on @xmath92 ) that for every finite prefix @xmath261 and for every @xmath262 there exists a path @xmath263 in @xmath22 such that @xmath264 for all @xmath265 .",
    "note that @xmath266 since @xmath267 and that by definition of the dag , for each @xmath268 ( @xmath269 ) , there exist @xmath270 , @xmath216 , and @xmath35 such that @xmath271 .",
    "hence , given @xmath272 , there exist @xmath273 and @xmath274 such that @xmath275 .    arranging all these finite paths in a tree",
    ", we obtain an infinite finitely - branching tree which by knig s lemma  @xcite contains an infinite branch @xmath276 that is a path in @xmath22 and such that @xmath277 for all @xmath162 .",
    "now we can construct the strategy @xmath221 such that @xmath278 .",
    "since @xmath218 satisfies @xmath219 , it follows that @xmath279 satisfies @xmath53 , which completes the proof .",
    "[ theo : one - less - informed - lower - bound ] given a three - player game @xmath8 with player  @xmath0 less informed than player  @xmath1 and a reachability objective @xmath53 , the problem of deciding whether @xmath74 is 2-exptime - hard . if player  @xmath0 is blind ( and even when player  2 is also blind ) , then the problem is expspace - hard .",
    "the proof of 2-exptime - hardness is obtained by a polynomial - time reduction of the membership problem for exponential - space _ alternating _ turing machines to the three - player problem . the same reduction for the special case of exponential - space _ nondeterministic _",
    "turing machines shows expspace - hardness when player  @xmath0 is blind ( because our reduction yields a game in which player  @xmath0 is blind when we start from a nondeterministic turing machine ) .",
    "the membership problem for turing machines is to decide , given a turing machine @xmath280 and a finite word @xmath281 , whether @xmath280 accepts @xmath281 .",
    "the membership problem is 2-exptime - complete for exponential - space alternating turing machines , and expspace - complete for exponential - space nondeterministic turing machines  @xcite .",
    "an alternating turing machine is a tuple @xmath282 where the state space @xmath283 consists of the set @xmath284 of or - states , and the set @xmath285 of and - states .",
    "the input alphabet is @xmath286 , the tape alphabet is @xmath287 where @xmath288 is the blank symbol .",
    "the initial state is @xmath46 , the accepting state is @xmath289 , and the rejecting state is @xmath290 .",
    "the transition relation is @xmath291 , where a transition @xmath292 intuitively means that , given the machine is in state @xmath12 , and the symbol under the tape head is @xmath293 , the machine can move to state @xmath155 , replace the symbol under the tape head by @xmath294 , and move the tape head to the neighbor cell in direction  @xmath85 .",
    "a configuration  @xmath295 of  @xmath280 is a sequence @xmath296 with exactly one symbol in @xmath297 , which indicates the current state of the machine and the position of the tape head .",
    "the initial configuration of @xmath280 on @xmath298 is @xmath299 .",
    "given the initial configuration of @xmath280 on @xmath281 , it is routine to define the execution trees of @xmath280 where at least one successor of each configuration in an or - state , and all successors of the configurations in an and - state are present ( and we assume that all branches reach either @xmath289 or @xmath290 ) , and to say that @xmath280 accepts @xmath281 if all branches of some execution tree reach @xmath289 . note that @xmath300 for nondeterministic turing machines , and in that case the execution tree reduces to a single path .",
    "a turing machine @xmath280 uses exponential space if for all words @xmath281 , all configurations in the execution of @xmath280 on @xmath281 contain at most @xmath301 non - blank symbols .",
    "we present the key steps of our reduction from alternating turing machines .",
    "given a turing machine @xmath280 and a word @xmath281 , we construct a three - player game with reachability objective in which player  @xmath0 and player  @xmath1 have to simulate the execution of @xmath280 on @xmath281 , and player  @xmath0 has to announce the successive configurations and transitions of the machine along the execution .",
    "player  @xmath0 announces configurations one symbol at a time , thus the alphabet of player  @xmath0 is @xmath302 . in an initialization phase , the transition relation of the game forces player  @xmath0 to announce the initial configuration @xmath303 ( this can be done with @xmath304 states in the game , where @xmath305 ) .",
    "then , the game proceeds to a loop where player  @xmath0 keeps announcing symbols of configurations . at all times along the execution",
    ", some finite information is stored in the finite state space of the game : a window of the last three symbols @xmath306 announced by player  @xmath0 , as well as the last symbol @xmath307 announced by player  @xmath0 ( that indicates the current machine state and the position of the tape head ) .",
    "after the initialization phase , we should have @xmath308 and @xmath309 .",
    "when player  @xmath0 has announced a full configuration , he moves to a state of the game where either player  @xmath0 or player  @xmath1 has to announce a transition of the machine : for @xmath310 , if @xmath311 , then player  @xmath0 chooses the next transition , and if @xmath312 , then player  @xmath1 chooses .",
    "note that the transitions chosen by player  @xmath1 are visible to player  @xmath0 and this is the only information that player  @xmath0 observes .",
    "hence player  @xmath0 is less informed than player  @xmath1 , and both player  @xmath0 and player  @xmath1 are blind when the machine is nondeterministic . if a transition @xmath313 is chosen by player  @xmath6 , and either @xmath314 or @xmath315 , then player  @xmath6 loses ( i.e. , a sink state is reached to let player  @xmath0 lose , and the target state of the reachability objective is reached to let player  @xmath1 lose ) .",
    "if at some point player  @xmath0 announces a symbol @xmath316 with @xmath317 , then player  @xmath0 wins the game .",
    "the role of player  @xmath1 is to check that player  @xmath0 faithfully simulates the execution of the turing machine , and correctly announces the configurations . after every announcement of a symbol by player  @xmath0 , the game offers the possibility to player  @xmath1 to compare this symbol with the symbol at the same position in the next configuration .",
    "we say that player  @xmath1 _ checks _ ( and whether player  @xmath1 checks or not is not visible to player  @xmath0 ) , and the checked symbol is stored as @xmath318 .",
    "note that player  @xmath1 can be blind to check because player  @xmath1 fixes his strategy after player  @xmath0 .",
    "the window @xmath306 stored in the state space of the game provides enough information to update the middle cell @xmath318 in the next configuration , and it allows the game to verify the check of player  @xmath1 . however , the distance ( in number of steps ) between the same position in two consecutive configurations is exponential ( say @xmath319 for simplicity ) , and the state space of the game is not large enough to check that such a distance exists between the two symbols compared by player  @xmath1 .",
    "we use player  @xmath21 to check that player  @xmath1 makes a comparison at the correct position . when player  @xmath1 decides to check , he has to count from @xmath117 to @xmath319 by announcing after every symbol of player  @xmath0 a sequence of @xmath214 bits , initially all zeros ( again , this can be enforced by the structure of the game with @xmath304 states ) .",
    "it is then the responsibility of player  @xmath21 to check that player  @xmath1 counts correctly . to check this",
    ", player  @xmath21 can at any time choose a bit position @xmath320 and store the bit value  @xmath321 announced by player  @xmath1 at position  @xmath322 .",
    "the value of @xmath321 and @xmath322 is not visible to player  @xmath1 .",
    "while player  @xmath1 announces the bits @xmath323 at position @xmath324 , the finite state of the game is used to flip the value of @xmath321 if all bits @xmath323 are equal to @xmath0 , hence updating @xmath321 to the value of the @xmath322-th bit in what should be the next announcement of player  @xmath1 . in the next bit sequence announced by player  @xmath1 , the @xmath322-th bit is compared with  @xmath321 . if they match , then the game goes to a sink state ( as player  @xmath1 has faithfully counted ) , and if they differ then the game goes to the target state ( as player  @xmath1 is caught cheating ) .",
    "it can be shown that this can be enforced by the structure of the game with @xmath325 states , that is @xmath304 states for each value of @xmath322 .",
    "as before , whether player  @xmath21 checks or not is not visible to player  @xmath1 .",
    "note that the checks of player  @xmath1 and player  @xmath21 are one - shot : the game will be over ( either in a sink or target state ) when the check is finished .",
    "this is enough to ensure a faithful simulation by player  @xmath0 , and a faithful counting by player  @xmath1 , because @xmath196 partial observation allows to hide to a player the time when a check occurs , and @xmath197 player  @xmath1 fixes his strategy after player  @xmath0 ( and player  @xmath21 after player  @xmath1 ) , thus they can decide to run a check exactly when player  @xmath0 ( or player  @xmath1 ) is not faithful .",
    "this ensures that player  @xmath0 does not win if he does not simulate the execution of @xmath280 on @xmath281 , and that player  @xmath1 does not win if he does not count correctly .",
    "hence this reduction ensures that @xmath280 accepts @xmath281 if and only if the answer to the three - player game problem is yes , where the reachability objective is satisfied if player  @xmath0 eventually announces that the machine has reached @xmath289 ( that is if @xmath280 accepts @xmath281 ) , or if player  @xmath1 cheats in counting , which can be detected by player  @xmath21 .",
    "when player 2 is less informed than player 1 , we show that three - player games get much more complicated ( even in the special case where player  @xmath0 has perfect information ) .",
    "we note that for reachability objectives , the three - player decision problem is equivalent to the qualitative analysis of positive winning in two - player stochastic games , and we show that the techniques developed in the analysis of two - player stochastic games can be extended to solve the three - player decision problem with safety objectives as well .    for reachability objectives , the three - player decision problem is equivalent to the problem of positive winning in two - player stochastic games where the third player is replaced by a probabilistic choice over the action set with uniform probability .",
    "intuitively , after player  @xmath0 and player  @xmath1 fixes their strategy , the fact that player  @xmath21 can construct a ( finite ) path to the target set is equivalent to the fact that such a path has positive probability when the choices of player  @xmath21 are replaced by uniform probabilistic transitions . given a three - player game @xmath8 , let @xmath326 be the two - player partial - observation _",
    "stochastic _ game ( with same state space , action sets , and observations for player  @xmath0 and player  @xmath1 ) where @xmath327 for all @xmath13 , @xmath14 , and @xmath328 .",
    "formally , the equivalence result is presented in lemma  [ lem : uniform ] , and the equivalence holds for all three - player games ( not restricted to three - player games where player  1 has perfect information ) .",
    "however , we will use lemma  [ lem : uniform ] to establish results for three - player games where player  1 has perfect information .",
    "[ lem : uniform ] given a three - player game @xmath22 and a reachability objective @xmath53 , the answer to the three - player decision problem for @xmath329 is yes if and only if player  @xmath0 is positive winning for @xmath53 in the two - player partial - observation stochastic game @xmath330 .    [ [ reachability - objectives . ] ] reachability objectives .",
    "+ + + + + + + + + + + + + + + + + + + + + + + +    even in the special case where player  @xmath0 has perfect information , and for reachability objectives , non - elementary memory is necessary in general for player  @xmath0 to win in three - player games .",
    "this result follows from lemma  [ lem : uniform ] and from the result of  ( * ? ? ?",
    "* example 4.2 journal version ) showing that non - elementary memory is necessary to win with positive probability in two - player stochastic games .",
    "it also follows from lemma  [ lem : uniform ] and the result of  ( * ? ? ?",
    "* corollary 4.9 journal version ) that the three - player decision problem for reachability games is decidable in non - elementary time .",
    "[ [ safety - objectives . ] ] safety objectives .",
    "+ + + + + + + + + + + + + + + + + +    we show that the three - player decision problem can be solved for games with a safety objective when player  @xmath0 has perfect information .",
    "the proof is using the _ counting abstraction _ of  ( * ? ? ?",
    "* section 4.2 journal version ) and shows that the answer to the three - player decision problem for safety objective @xmath61 is yes if and only if there exists a winning strategy in the two - player counting - abstraction game with the safety objective to visit only counting functions ( i.e. , essentially tuples of natural numbers ) with support contained in the target states @xmath59 . intuitively , the counting abstraction is as follows : with every knowledge of player  2 we store a tuple of counters , one for each state in the knowledge .",
    "the counters denote the number of possible distinct paths to the states of the knowledge , and the abstraction treats large enough values as infinite ( value @xmath2 ) .",
    "the counting - abstraction game is monotone with regards to the natural partial order over counting functions , and therefore it is well - structured and can be solved by constructing a self - covering unraveling tree , i.e. a tree in which the successors of a node are constructed only if this node has no greater ancestor .",
    "the properties of well - structured systems ( well - quasi - ordering and knig s lemma ) ensure that this tree is finite , and that there exists a strategy to ensure only supports contained in the target states @xmath59 are visited if and only if there exists a winning strategy in the counting - abstraction game ( in a leaf of the tree , one can copy the strategy played in a greater ancestor ) .",
    "it follows that the three - player decision problem for safety games is equivalent the problem of solving a safety game over this finite tree .",
    "[ theo : player - one - perfect ] when player 1 has perfect information , the three - player decision problem is decidable for both reachability and safety games , and for reachability games memory of size non - elementary is necessary in general for player  @xmath0 .",
    "we show that the results presented for three - player games extend to games with four players ( the fourth player is universal and perfectly informed ) .",
    "the definition of four - player games and related notions is a straightforward extension of section  [ sec : three - players ] .    in a four - player game with player",
    "@xmath0 less informed than player  @xmath1 , and perfect information for both player  @xmath21 and player  @xmath331 , consider the _ four - player decision problem _ which is to decide if @xmath332 for a parity objective @xmath53 . since player  @xmath21 and player  @xmath331 have perfect information , we assume without loss of generality that the game is turn - based for them , that is there is a partition of the state space @xmath9 into two sets @xmath333 and @xmath334 ( where @xmath335 ) such that the transition function is the union of @xmath336 and @xmath337 .",
    "strategies and outcomes are defined analogously to three - player games .",
    "a strategy of player  @xmath338 is of the form @xmath339 .    by determinacy of perfect - information turn - based games with countable state space  @xcite",
    ", the negation of the four - player decision problem is equivalent to @xmath340 .",
    "once the strategies @xmath163 and @xmath164 are fixed , the condition @xmath341 can be viewed as the membership problem for a tree @xmath342 in the language of an alternating parity tree automaton  @xcite with state space  @xmath9 where @xmath342 is the @xmath343-labeled tree @xmath76 where @xmath344 and @xmath345 for all @xmath346 .    by the results of  @xcite , if there exists an accepting @xmath347-labeled run tree @xmath348 for an input tree @xmath342 in an alternating parity tree automaton",
    ", then there exists a _",
    "memoryless _ accepting run tree , that is such that for all nodes @xmath349 such that @xmath350 and @xmath351 , the subtrees of @xmath127 rooted at @xmath86 and @xmath135 are isomorphic . since the membership problem is equivalent to a two - player parity game played on the structure of the alternating automaton , a memoryless accepting run tree can be viewed as a winning strategy @xmath352 , or equivalently @xmath353 such that for all strategies @xmath354 , the resulting infinite branch in the tree @xmath127 satisfies the parity objective @xmath53 .",
    "it follows from this that the ( negation of the ) original question @xmath340 is equivalent to @xmath355 where @xmath356 is the set of strategies of a player ( call it player 24 ) with observations @xmath357 and action set @xmath358 , and the outcome @xmath359 is defined as expected in a three - player game ( played by player  @xmath0 , player  @xmath360 , and player  @xmath21 ) with transition function @xmath361 defined by @xmath362 .",
    "hence the original question ( and its negation ) for four - player games reduces in polynomial time to solving a three - player game with the first player less informed than the second player .",
    "hardness follows from the special case of three - player games .",
    "[ theo : player - four ] the four - player decision problem with player  @xmath0 less informed than player  @xmath1 , and perfect information for both player  @xmath21 and player  @xmath331 is 2-exptime - complete for parity objectives .",
    "we now discuss the various possibilities of strategy quantifiers and information of the players in multi - player games .",
    "first , if there are two existential ( resp . ,",
    "universal ) players with incomparable information , then the decision question is undecidable  @xcite ; and if there is a sequence of existential ( resp . , universal ) quantification over strategies players such that the information of the players form a chain ( i.e. , in the sequence of quantification over the players , let the players be  @xmath363 such that @xmath364 is more informed than @xmath365 , @xmath365 more informed than @xmath366 and so on ) , then with repeated subset construction , the sequence can be reduced to one quantification  @xcite .",
    "note however that if there is a quantifier alternation between existential and universal , then even if the information may form a chain , subset construction might not be sufficient : for example , if player  1 is perfect and player  2 has partial - information , non - elementary memory might be necessary ( as shown in section  [ sec : player - one - perfect ] ) .",
    "we now discuss the various possibilities of strategy quantification in four - player games . without loss of generality",
    "we consider that the first strategy quantifier is existential .",
    "the above argument for sequence of quantifiers ( either undecidability with incomparable information or the sequence reduces to one ) shows that we only need to consider the following strategy quantification : @xmath367 , where the subscripts denote the quantification over strategies for the respective player .",
    "first , note that once the strategies of the first three players are fixed we obtain a graph , and similar to remark  [ rem : final - player ] without loss of generality we consider that player  4 has perfect observation .",
    "we now consider the possible cases for player  3 in presence of player  4 .",
    "_ perfect observation .",
    "_ the case when player  3 has perfect observation has been solved in the main paper ( results of section  [ sec : more - than - three ] ) .",
    "_ partial observation .",
    "_ we now consider the case when player  3 has partial observation . if player  2 is less informed than player  1 , then the problem is at least as hard as the problem considered in section  [ sec : player - one - perfect ] .",
    "if player  3 is less informed than player  2 , then even in the absence of player  1 , the problem is as hard as the negation of the question considered in section  [ sec : player - one - perfect ] ( where first a more informed player plays , followed by a less informed player , just the strategy quantifiers are @xmath368 as compared to @xmath369 considered in section  [ sec : player - one - perfect ] ) .",
    "finally , if player  1 is less informed than player  2 , and player  2 is less informed than player  3 , then we apply our construction of section  [ sec : player - one - less ] twice and obtain a double exponential size two - player partial - observation game which can be solved in 3-exptime . recall that in absence of player  4 , by remark  [ rem : final - player ] whether player  3 has partial or perfect information does not matter and we obtain a 2-exptime upper bound ; whereas in presence of player  4",
    ", we obtain a 3-exptime upper bound if player  3 has partial information ( but more informed than player  @xmath1 ) , and a 2-exptime upper bound if player  3 has perfect information ( theorem  [ theo : player - four ] ) .",
    "we now discuss applications of our results in the context of synthesis and qualitative analysis of two - player partial - observation stochastic games .",
    "* sequential synthesis .",
    "* the _ sequential synthesis _",
    "problem consists of an open system of partially implemented modules ( with possible non - determinism or choices ) @xmath370 that need to be refined ( i.e. , the choices determined by strategies ) such that the composite system after refinement satisfy a specification .",
    "the system is open in the sense that after the refinement the composite system is reactive and interact with an environment .",
    "consider the problem where first a set @xmath371 of modules are refined , then a set @xmath372 are refined by an external implementor , and finally the remaining set of modules are refined .",
    "in other words , the modules are refined sequentially : first a set of modules whose refinement can be controlled , then a set of modules whose refinement can not be controlled as they are implemented externally , and finally the remaining set of modules . if the refinements of modules @xmath373 do not have access to private variables of the remaining modules we obtain a partial - observation game with four players : the first ( existential ) player corresponds to the refinement of modules @xmath374 , the second ( universal ) player corresponds to the refinement of modules @xmath375 , the third ( existential ) player corresponds to the refinement of the remaining modules , and the fourth ( adversarial ) player is the environment . if the second player has access to all the variables visible to the first player , then player  1 is less informed .",
    "* two - player partial - observation stochastic games . * our results for",
    "four - player games imply new complexity results for two - player stochastic games .",
    "for qualitative analysis ( positive and almost - sure winning ) under finite - memory strategies for the players the following reduction has been established in  ( * ? ? ?",
    "* lemma  1 ) ( see lemma  2.1 of the arxiv version ) : the probabilistic transition function can be replaced by a turn - based gadget consisting of two perfect - observation players , one angelic ( existential ) and one demonic ( universal ) .",
    "the turn - based gadget is the same as used for perfect - observation stochastic games  @xcite . in  @xcite ,",
    "only the special case of perfect observation for player  2 was considered , and hence the problem reduced to three - player games where only player  1 has partial observation and the other two players have perfect observation . in case where player  2 has partial observation ,",
    "the reduction of  @xcite requires two perfect - observation players , and gives the problem of four - player games ( with perfect observation for player  3 and player  4 ) .",
    "hence when player  1 is less informed , we obtain a 2-exptime upper bound from theorem  [ theo : player - four ] , and obtain a 2-exptime lower bound from theorem  [ theo : one - less - informed - lower - bound ] since the three - player games problem with player  1 less informed for reachability objectives coincides with _ positive _ winning for two - player partial - observation stochastic games ( lemma  [ lem : uniform ] ) .    for _ almost - sure _ winning ,",
    "a 2-exptime lower bound can also be obtained by an adaptation of the proof of theorem  [ theo : one - less - informed - lower - bound ] .",
    "we use the same reduction from exponential - space alternating turing machines , with the following changes : @xmath3 the third player is replaced by a uniform probability distribution over player-@xmath21 s moves , thus the reduction is now to two - player partial - observation stochastic games ; @xmath4 instead of reaching a sink state when player  @xmath1 detects a mistake in the sequence of configurations announced by player  @xmath0 , the game restarts in the initial state ; thus the target state of the reachability objective is not reached , but player  @xmath0 gets another chance to faithfully simulate the turing machine .",
    "it follows that if the turing machine accepts , then player  @xmath0 has an almost - sure winning strategy by faithfully simulating the execution .",
    "indeed , either @xmath376 player  @xmath1 never checks , or checks and counts correctly , and then player  @xmath0 wins since no mistake is detected , or @xmath377 player  @xmath1 checks and cheats counting , and then player  @xmath1 is caught with positive probability ( player  @xmath0 wins ) , and with probability smaller than  @xmath0 the counting cheat is not detected and thus possibly a ( fake ) mismatch in the symbol announced by player  @xmath0 is detected",
    ". then the game restarts .",
    "hence in all cases after finitely many steps , either player  @xmath0 wins with ( fixed ) positive probability , or the game restarts .",
    "it follows that player  @xmath0 wins the game with probability  @xmath0 .",
    "if the turing machine rejects , then player  @xmath0 can not win by a faithful simulation of the execution , and thus he should cheat .",
    "the strategy of player  @xmath1 is then to check and to count correctly , ensuring that the target state of the reachability objective is not reached , and the game restarts .",
    "hence for all strategies of player  @xmath0 , there is a strategy of player  @xmath1 to always avoid the target state ( with probability  @xmath0 ) , and thus player  @xmath0 can not win almost - surely ( he wins with probability  @xmath117 ) .",
    "this completes the proof of the reduction for almost - sure winning .",
    "[ theo : stochastic - games ] the qualitative analysis problems ( almost - sure and positive winning ) for two - player partial - observation stochastic parity games where player  1 is less informed than player  2 , under finite - memory strategies for both players , are 2-exptime - complete .",
    "note that the lower bounds for theorem  [ theo : stochastic - games ] are established for reachability objectives .",
    "moreover , it was shown in  ( * ? ? ?",
    "* section  5 ) that for qualitative analysis of two - player partial - observation stochastic games with reachability objectives , finite - memory strategies suffice , i.e. , if there is a strategy to ensure almost - sure ( resp .",
    "positive ) winning , then there is a finite - memory strategy .",
    "thus the results of theorem  [ theo : stochastic - games ] hold for reachability objectives even without the restriction of finite - memory strategies ."
  ],
  "abstract_text": [
    "<S> we consider multi - player graph games with partial - observation and parity objective . while the decision problem for three - player games with a coalition of the first and second players against the third player is undecidable in general , we present a decidability result for partial - observation games where the first and third player are in a coalition against the second player , thus where the second player is adversarial but weaker due to partial - observation . </S>",
    "<S> we establish tight complexity bounds in the case where player  @xmath0 is less informed than player  @xmath1 , namely 2-exptime - completeness for parity objectives . </S>",
    "<S> the symmetric case of player  @xmath0 more informed than player  @xmath1 is much more complicated , and we show that already in the case where player  @xmath0 has perfect observation , memory of size non - elementary is necessary in general for reachability objectives , and the problem is decidable for safety and reachability objectives . </S>",
    "<S> our results have tight connections with partial - observation stochastic games for which we derive new complexity results . </S>"
  ]
}
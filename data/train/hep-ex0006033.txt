{
  "article_text": [
    "scintillation detectors are today widely used in nuclear and particle physics experiments for detection of ionizing charged particles as well as photons and neutrons .",
    "these detectors are also often used in medical instrumentation , process control devices , waste management , personal protection and nuclear safeguarding  @xcite .    in the simplest design ,",
    "the scintillation detector consists of a scintillator assembly ( a solid crystal , liquid or gaseous scintillator volume ) and an optional lightguide or waveshifting guide viewed by a light - sensitive amplifying device such as a photomultiplier tube ( pmt )  @xcite . the fraction of energy deposited in the scintillator material by penetrating ionizing particles is absorbed and re - emitted within several nanoseconds in the form of visible or ultraviolet light , so - called fluorescent radiation",
    ". the scintillator material itself can be an organic crystal , plastics or liquid , inorganic crystal , scintillating gas or glass silicate  @xcite .",
    "scintillation light propagates through the scintillator medium and bounces off its surfaces . a fraction of the light eventually reaches the photosensitive area of the light - sensitive device where it is converted into an electrical signal .",
    "the generated current pulse is typically discriminated in a user - designed electronics circuit and integrated for a large number of events to produce the pulse - height energy spectrum .",
    "the main considerations in particle detector design are the total light output and the detector timing response , with both factors influencing the energy resolution of the detector .",
    "the amount of scintillation light reaching the photosensitive surface should be maximized and should ideally be independent of the position and linearly dependent on the magnitude of the energy deposition .",
    "the timing response is determined by the decay constants of scintillating excitation and the size and geometry of the detector itself , as well as the characteristics of the photo - sensitive device .",
    "the light output of a scintillator primarily depends on the conversion efficiency of the deposited ionizing energy to scintillation photons .",
    "the light collected by the photosensitive surface is also dependent on the surface area , the efficiency of the light transport and the scintillator transparency to its own scintillation light .",
    "the match between spectral response of the photomultiplier , the scintillation light and the quantum efficiency of the photocathode are additional controlling factors determining photoelectron statistics .",
    "the magnitude and linearity of the pulse - heights and timing resolution of the scintillator signal can be optimized by tuning the light transfer to the photosensitive surface .",
    "the optimization is executed by the appropriate optical treatment of the detector surfaces and by specific choices of shapes and dimensions of the scintillator / lightguide assembly and different wrapping reflectors .",
    "the analytical solution of the light transfer and collection process can be obtained easily for only a few relatively simple geometries .",
    "if the shapes of detectors and lightguides are complex or irregular , or if the number of the detector modules is large , the monte carlo solution of the problem is the most practical and sometimes the only feasible calculational technique  @xcite .    in order to facilitate the detector design several simple computer programs were developed in the past twenty - five years and were used to study photon transport through the elements of the scintillation detectors  @xcite .",
    "these studies focused on the possibilities of improving the light collection and the uniformity of light response along the main detector axes . refs .",
    "@xcite compared the measurements of pulse - height spectra of the cosmic muons and radioactive sources that were moved along the detector surfaces with the simulation results .",
    "the measurements of the scintillator spatial light output nonuniformities are reported in refs .",
    "@xcite without comparisons to any matching simulations .    to our knowledge",
    "all published photon transport programs to date have treated the properties of rotationally symmetric or regular parallelepipedic detector shapes .",
    "the only publicly available monte carlo photon transport program that is flexible enough to treat a larger variety of detector shapes is the cern program library guide7 code  @xcite .",
    "we initially developed the optics library of subroutines to study the light transport in simple cylindrical and trapezoidal scintillator detectors  @xcite .",
    "as our need to understand the realistic photon propagation in the more complicated detector geometries increased , we expanded the code to handle a wider range of detector shapes and included more realistic photon  detector boundary interactions .    in section  [ sec : geo ] we show how the optics subroutines define the detector geometry .",
    "we explain our method of specifying the physical regions , region boundaries , intersections of photon trajectories with the region interfaces and calculation of the normal vectors at the points of photon  surface interactions .",
    "section  [ sec : inter ] touches upon the problem of calculating the intersection coordinates between the directed lines and the planar , cylindrical , spherical , conical and parabolical surfaces .",
    "section  [ sec : track ] presents our algorithm for the photon transport through the detector volume .",
    "the overall program structure , including the required and optional input parameters and a user - controlled output format is described in sec .",
    "[ sec : stru ] .",
    "the four progressively more complicated examples of the program applications are given in sec .",
    "[ sec : ex ] .",
    "an example of using the optics program in conjunction with the standard geant code that simulates energy depositions caused by ionizing radiation in particle detectors is demonstrated in sec .",
    "[ sec : geant ] . as an illustration of the physics calculation ,",
    "we show how to simulate the pulse - height spectra of monoenergetic electrons and photons in a pure cesium iodide ( csi ) calorimeter  @xcite . finally , the instructions for users outlining the required steps in the program installation are given in sec .",
    "[ sec : instal ] .",
    "we define a three - dimensional region by specifying the boundaries of the region and a point x0(3 ) inside the region .",
    "a convenient way of storing the region definitions is a fortran record structure .",
    "while originally a record structure was a vax fortran extension to the ansi standard , nowadays almost all fortran compilers provide these extensions  @xcite .",
    "the record structure of a three - dimensional region is defined in the file region_structure.txt :    .... c        module region_structure    c        ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||| c                record structure for 3-dimensional regions .",
    "c        |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||            parameter        ( max_surf = 100 )            structure /material_structure/           real*4          refractive_index           real*4          attenuation_length           real*4          scattering_length          end structure            structure /region_structure/              real*4",
    "x0(3 )             integer*4       nplane           integer*4       ncone           integer*4       nsphere           integer*4       nparaboloid             record /plane_structure/",
    "plane(max_surf )           record /cone_structure/",
    "cone(max_surf )           record /sphere_structure/",
    "sphere(max_surf )           record /paraboloid_structure/",
    "paraboloid(max_surf )             record /material_structure/     material            end structure    c        |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||    c        end module region_structure .",
    "....    the maximum number of surfaces of a specific type is declared in the user parameter max_surf , while the actual number of surfaces of each type bounding a region is specified by the integer variables nplane , ncone , nsphere or nparaboloid .",
    "the medium filling the region is indexed by an integer variable material .",
    "for example , the assignments refractive_index(1)=1.54 , refractive_index(2)=1.00 describe a scintillator medium in region 1 and air in region 2 , respectively . a database of 17 different materials commonly encountered in scintillation detector design is kept in the file material_properties.txt . presently defined media properties are the light attenuation length , scattering length , refractive index , atomic number , atomic weight , and the material volume density .",
    "a user can add additional materials and media properties or change the default values of the database entries .",
    "once the record structure of a region is defined , any number of variables having this structure format can be declared .",
    "arrays of regions can be defined with the statement record /region_structure/ region(100 ) that creates an array of 100 records , each with the structure format defined by the module region_structure above .",
    "the items in the structure of an individual region are referred to as `` record.item '' .",
    "the material of the region number 12 would therefore be referred to as `` region(12).material '' while the @xmath3-coordinate of a point internal to the region 3 could be accessed through a variable region(3).x0(2 ) .",
    "specific two - dimensional and three - dimensional shapes are defined as record structures in the file geometry_structures.txt .",
    "this module defines the structures for a point , line , circle , plane , cylinder , cone , paraboloid , and sphere , as well as a general polygon structure specified by a set of vertices .",
    "the comments in the file explain the parameters defining each shape .",
    "a cylindrical volume is , for example , defined by the following piece of code :    ....          structure /cylinder_structure/",
    "real*4 x0 ( 3 )   !",
    "point on axis of cylinder .",
    "real*4 a   ( 3 )   ! unit vector in direction of axis .",
    "real*4 radius   ! radius of cylinder .",
    "integer*4       type     ! type of surface .",
    "record /surface_properties_structure/ physical          end structure ....    again , the user can add new geometrical shapes by defining additional structures conforming to the above format .",
    "the program begins with a call to the subroutine define_regions where the parameters of the problem are either defined or read in from a user data file .",
    "an example input format for a cylindrical scintillator could be :    .... c read in the geometry parameters   !",
    "diameter of the front and back face         read(6 , * ) front_d1 , back_d1 ! of region 1          read(6 , * ) z1                 !",
    "z - extent of region 1    c define material types of regions         region(1).material=2 ! scintillator         region(2).material=1 !",
    "air    c define interior points of regions         region(1).x0(3)=z1/2.0         region(2).x0(3)=z1 + 2.0    c define boundary surfaces of regions         region(1).nplane=2         region(1).ncone=1    c detector surfaces         region(1).plane(1).type=1         region(1).plane(1).n(3)=-1.0         region(1).plane(1).x0(3)=0.0           region(1).plane(2).type=1         region(1).plane(2).n(3)=1.0         region(1).plane(2).x0(3)=z1           region(1).cone(1).type=1         region(1).cone(1).a(3)=1",
    "region(1).cone(1).slope=(back_d1-front_d1)/(2.0*z1 )    c last volume defined contains all the others         region(2).nsphere.=1         region(2).sphere(1).type=-2         region(2).sphere(1).radius=2.0*z1 ....    this piece of code defines a cylindrical scintillator with a z1 cm long @xmath4-axis and front and back face diameters front_d1 and front_d2 , respectively . the detector is contained inside a spherical volume filled with air .",
    "the different surface types are described in sec .",
    "[ sec : type ] .",
    "the irregular polygonal volume can be described by a set of vertices stored in the point_structure record :    ....          structure /polygon_structure/",
    "record /point_structure/ vertex(100 )    ! set of vertices .",
    "end structure ....    this format gives the number of vertices of the front and back detector face in the first input line , and the @xmath5 coordinates of the front ( @xmath6 ) and back detector face vertices in the second and third lines , respectively .",
    "for example , the truncated pentagonal detector geometry can be defined with a three - line entry :    .... 5 2.45 3.37   0.20 3.55 0.0   0.52 7.11 0.0   0.52   8.21 3.37   0.20 5.33   5.46   0.0 0.00 6.24 22.02 2.04 0.0 22.61 8.63 0.0 22.61 10.66 6.24 22.02 5.33 10.09 21.66      ....    the above input file describes a 22@xmath7 cm long truncated pentagonal pyramid with the front ( back ) face side 3.56 ( 6.59)@xmath7 cm long .",
    "the recognized types of detector surfaces are distinguished by the integer variable type .",
    "this parameter allows a user to specify the physical properties of the surface .",
    "the predefined surface types are perfectly transparent , perfectly reflecting , and perfectly absorbing interfaces as well as the `` realistic '' dielectric surface .",
    "these idealized surfaces are distinguished in the transport code by the parameter type that is assigned 0 , -1 , -2 or positive integer values .",
    "a user should also set the optical properties of a surface through the structure surface_properties_structure :    ....          structure /surface_properties_structure/",
    "real*4 roughness            !",
    "number describing roughness .",
    "real*4 reflectivity         !",
    "fraction of incident light reflected .",
    "real*4 diffuse_fraction",
    "! diffuse_reflection / total_reflection .",
    "end structure ....",
    "the reflectivity values could range from 0.0 ( a perfect absorber ) to 1.0 ( a perfect reflector ) .",
    "the diffuse_fraction coefficient determines the ratio between the specular reflection ( diffuse_fraction=0.0 ) and the diffuse scattering processes ( diffuse_fraction=1.0 , see sec .",
    "[ sec : diff ] ) .",
    "the roughness parameter describes the deviation of the detector sides from an ideal flat surface behavior ( sec .",
    "[ sec : rough ] ) .",
    "it is important to note that a pair of adjacent regions that are not nested is always separated by the two surfaces .",
    "this arrangement allows for a boundary between two regions to be of a different type , depending on the region side from which a photon is approaching the interface .",
    "an example is a `` two - way mirror '' between two regions that could be created by making the surface of one region perfectly reflecting and the adjacent surface of the neighboring region completely transparent .",
    "the four different detector geometries are described as examples in more detail in sec .",
    "[ sec : ex ] and shown in fig .  [ shapes ] .",
    "the parameters of four geometries are specified in table  [ tab1 ] .",
    "these shapes represent the real detectors whose light responses we studied both in monte carlo simulations and in calibration measurements using cosmic muons , monoenergetic tagged positron and photon beams , and laser pulses .",
    "the geometries are as varied as irregular truncated pyramids made of pure cesium iodide , plastic veto scintillator staves , a cylindrical plastic target , and a rectangular plexiglas monitoring plate , respectively .",
    "a straight line in three - dimensional space can be represented by the parametric equation : @xmath8 where @xmath9 is a point on the line , @xmath10 is a unit vector in the direction of the line , and the parameter @xmath11 specifies the distance from a fixed point @xmath9 to a point @xmath12 .",
    "the parametric equations of the plane , spherical , and cylindrical surfaces are given by @xmath13 \\vert & = & 0 , \\text { cylinder , } \\end{aligned}\\ ] ] where @xmath14 is a normal vector to the plane , @xmath15 and @xmath16 are the center and the radius of the sphere , and @xmath17 , @xmath18 are the point on the cylinder axis and a unit vector in the direction of the detector @xmath4 axis , respectively .",
    "intersections of a straight line with these surfaces are found in , for example , ref .",
    "the formulas for the intersection coordinates are implemented in the optics subroutine subroutine find_line_region_intersection(line , i_region , x1,x2,intersect , region , n_regions ) .",
    "the relevant regions should first be defined with calls to subroutine define_regions_crystal(region , n_regions ) .",
    "the line variable is specified by the three - dimensional array line.x0 and by the three cosines of directions line.v that could be calculated from the polar and azimuthal angles ( @xmath19,@xmath20 ) : @xmath21 the variable i_region is an index of a region that takes values from 1 to n_regions , while the region variable is the fortran record structure described in sec .",
    "[ sec : reg ] .",
    "intersect is a logical variable that is .true . if at least one intersection point is found and .false . if there are no intersections between the line and user defined surfaces .",
    "the arguments x1 and x2 are three element arrays that contain the calculated coordinates of the intersection points .    in fig .",
    "[ hexa1 ] we show the intersections of reconstructed cosmic muon trajectories with the surfaces of a cesium iodide scintillation crystal .",
    "the crystal s geometrical shape is a truncated irregular hexagon labeled hex  a ( fig .",
    "[ shapes].i ) .",
    "[ plastic1 ] illustrates the cosmic muon trajectories intersecting three vertically stacked rectangular scintillator bars ( fig .",
    "[ shapes].ii ) . in both cases",
    "the intersection coordinates have been calculated using the find_line_region_intersection subroutine .",
    "the reflection and refraction of light from a perfect dielectric interface can described by the laws of geometrical optics if the scintillation photons are unpolarized .",
    "if the angles between the directions of the incident , reflected and transmitted photon with respect to the surface normal are denoted with @xmath22 , @xmath23 and @xmath24 , respectively , the law of reflection states that @xmath25 while the law of refraction ( snell s law ) on the other hand requires that @xmath26 where @xmath27 and @xmath28 are the indices of refraction of the media in regions 1 and 2 , respectively .",
    "the user can change the program so that the full polarization of the propagating photon is taken into account .",
    "the reflection and transmission phenomena would then be described by the fresnel formulas ( see , for example ,  @xcite ) .",
    "a perfectly diffuse reflector is defined by the uniform scattering probability @xmath29 into a unit solid angle @xmath30 , where @xmath19 denotes the angle between the direction of a reflected photon and the normal vector to the surface .",
    "the angular distribution of the scattered radiation is then isotropic . if",
    "the reflecting surface is a plane , the resulting distribution is often called the lambert s ( or cosine ) law  @xcite : @xmath31      a rough surface can be modeled by introducing a set of small plane surfaces tangent to the original surface at suitable points .",
    "this description goes under the name of the facet model and is described in more detail in ref .",
    "@xcite where the model predictions are also compared with the experimental measurements .    in the simplest version of the facet model a rough surface",
    "is characterized by a single roughness parameter @xmath16 .",
    "this parameter is zero for smooth scintillator surfaces with a perfect finish . for real detectors with uneven boundaries",
    "@xmath16 value is a positive number between 0.0 and 1.0 .",
    "polished rough surfaces with height variations of the order of a micron have the roughness coefficient on the order of 0.1 .    the subroutine perturb_unit_vector ( v_in , roughness , v_out ) calculates a random perturbation to the direction of an incident photon unit vector v_in following the reflection from a rough surface .",
    "the scalar product of the perturbed vector v_out and the unperturbed photon direction @xmath32 is equal to @xmath33 , where @xmath34 has a gaussian distribution , centered at zero , with the width given by the roughness parameter @xmath16 .",
    "the media properties are described by two parameters , scattering_length and attenuation_length .",
    "the code simplifies photon transport by assuming that the scattering length and the absorption length do not depend on the wavelength of the propagating light .",
    "the dispersion effects are neglected .",
    "if a user wants to consider dispersion effects , the changes should be made in the file optics.f .",
    "the program starts with the subroutine define_regions that reads a data file specifying the parameters of the detector .",
    "the call to that subroutine defines the record structures in the array region .",
    "a starting position of a scintillation photon is accepted next .",
    "the coordinate values can be read in from the data file photons.dat or , alternatively , a user can select one of the predefined distributions :    1 .   a single point source , fixed @xmath5 ; 2 .   a through - going particle , range of @xmath35 , fixed @xmath4 , @xmath36 ; 3 .   a range of light sources on the detector axis , range of @xmath4 , @xmath37 ; 4 .   a uniform light distribution throughout detector volume , range of @xmath5 ; 5 .   a uniformly distributed light sources in the center plane , range of @xmath38 , @xmath36 ; 6 .",
    "an aimed `` pencil '' of scintillating radiation , fixed @xmath5 , and fixed directional cosines @xmath39 ; 7 .   a uniform distribution in the first half ( first half - sector ) of the detector , range of @xmath5 .",
    "all input parameters defining the detector and the scintillating light distribution , as well as the desired output format can also be entered from the tkoptics window if one is using the gui version of the program ( see fig .",
    "[ fig : tkoptics ] ) .",
    "the initial region number is found next by calling the routine find_region_number .",
    "the program then steps through the following levels :    \\1 .",
    "find the next intersection of a photon trajectory with the predefined surface .",
    "test to see if a photon is absorbed or rescattered in transit .",
    "2.1 if absorption or rescattering occurred , look at the current region number .",
    "2.1.1 if a photon is in the wavelength shifter , find the point at which it is absorbed , generate a new random direction , and continue .",
    "2.1.2 if a photon is not in the wavelength shifter , count it as absorbed and get a new particle .",
    "2.2 if a photon is not absorbed , continue .",
    "propagate a photon to the next intersection .",
    "look into the next region to find its region number .",
    "4.1 if the next region number is the same as the current region number , continue the photon transport and return to ( 1 ) .",
    "4.2 if we are dealing with a different region , continue to ( 5 ) .",
    "look at the type of the surface a photon encounters .",
    "5.1 if the surface is transparent , continue to the next intersection .",
    "5.2 if the surface is reflecting , stay in the current region while changing the photon s direction .",
    "5.3 if the surface is absorbing , stop the photon propagation , count it as absorbed , and generate a new photon ab initio and return to step ( 1 ) .",
    "5.4 when an interface is a real surface , use the snell s law to determine if the photon undergoes reflection or refraction , change the direction appropriately , and step into the next region if a photon is refracted .    5.5 for the watch points , call the watchpoint subroutine , then do ( 5.1 ) .",
    "5.6 for the detectors , call the detector subroutine , count a photon as detected , then do ( 5.3 ) .",
    ". return to ( 1 ) .",
    "this algorithm is represented by a box diagram in fig .  [",
    "fig : algorithm ] .",
    "the following is the list of subroutines used in the photon propagation :    .... subroutine initialize ( region , n_regions ) subroutine write_stats ( region , n_regions ) subroutine generate_photon ( line , region , n_regions ) subroutine log_photon_generation ( line ) subroutine log_intersection ( line , region , n_regions , n_current ,                                 r , x , outward_normal , class , isurf , type ) subroutine log_reflection ( line , region , n_regions , n_current ,                              r , x , outward_normal , class , isurf , type ) subroutine log_refraction ( line , region , n_regions , n_current ,                               r , x , outward_normal , class , isurf , type ) subroutine log_absorption ( line , region , n_regions , n_current ,                               r , x , outward_normal , class , isurf , type ) subroutine log_attenuation ( region , n_current , line , x ) subroutine define_region_half_sector ( filename ,   subroutine define_regions ( region , n_regions ) subroutine define_regions_pyramid ( region , n_regions ) subroutine define_regions_cone ( region , n_regions ) subroutine detector ( type , line , range , time ) subroutine watchpoint ( type , line , range , time ) subroutine terminate ( region , n_regions ) ....    the functions these subroutines perform are described in sec .",
    "[ sec : track ] .",
    "the listing of the program input for the graphical user interface ( gui ) version of the code is printed by default at the program termination :    ....   enter geometry type : 1      0 = truncated cone      1 = pi - beta csi crystal   enter pyramid type : 0      1    = pentagon      2    = hexagon - a      3    = hexagon - b      4    = hexagon - c      5    = hexagon - d      6    = half hexagon - d ( # 1 )      7    = half hexagon - d ( # 2 )      0    = user defined ( will prompt for file name )   enter file name : /fs24/users / emil / tomo / tkoptics / hh1-d - mc.dat   enter refractive index of pyramid material : 2.10   enter attenuation length of pyramid material ( cm ) : 200.0   enter scattering length of pyramid material ( cm ) : 200.0   enter surface type for sides of pyramid : -1       1   = normal dielectric      -1   = imperfect specular reflector      -2   = perfect absorber      -3   = imperfect diffuse reflector   enter reflectivity of this surface ( 0 - 1 ) : 0.975   enter roughness of this surface ( 0 - 1 ) : 0.0   enter diffuse fraction for this surface ( 0 - 1 ) : 0.0    enter surface type for front face of pyramid : -1       1   = normal dielectric      -1   = imperfect specular reflector      -2   = perfect absorber      -3   = imperfect diffuse reflector   enter reflectivity of this surface ( 0 - 1 ) : 0.975   enter roughness of this surface ( 0 - 1 ) : 0.0   enter diffuse fraction for this surface ( 0 - 1 ) : 0.0    enter refractive index of air gap material : 1.000273   enter attenuation length of air gap material ( cm ) : 1.0e+3   enter scattering length of air gap material ( cm ) : 1.0e+3   enter surface type for pyramid wrapper : -3       1   = normal dielectric      -1   = imperfect specular reflector      -2   = perfect absorber      -3   = imperfect diffuse reflector   enter reflectivity of this surface ( 0 - 1 ) : 0.9   enter roughness of this surface ( 0 - 1 ) : 0.0   enter diffuse fraction for this surface ( 0 - 1 ) : 1.0    enter surface type for front face of wrapper : -3       1   = normal dielectric      -1   = imperfect specular reflector      -2   = perfect absorber      -3   = imperfect diffuse reflector   enter reflectivity of this surface ( 0 - 1 ) : 0.2   enter roughness of this surface ( 0 - 1 ) : 0.0   enter diffuse fraction for this surface ( 0 - 1 ) : 1.0    enter refractive index of optical joint material : 1.58   enter attenuation length of optical joint material ( cm ) : 200.0   enter scattering length of optical joint material ( cm ) : 200.0   enter refractive index of pmt window material : 1.458   enter attenuation length of pmt window material ( cm ) : 100.0   enter scattering length of pmt window material ( cm ) : 100.0   * * * * * * * * * xfront =    6.790000        2.865000        22.19750       * * * * * * * * * axis =   0.0000000e+00   0.1182974       0.9929782       * * * * * * * * * vector =   8.4076812e-03 -5.3805402e-03 -6.0056243e-04   * * * * * * * * * vector =   0.0000000e+00   1.1829736e-02   9.9297822e-02   * * * * * * * * * xfront =    6.790000        2.876830        22.29680       enter output data type : 3     0 = no output      1 = endpoint data     2 = tracks     3 = statistics   enter output file name : /fs24/users / emil / tomo / tkoptics / tkoptics.rz   enter numbers of bins : ( nxbins nybins nzbins ) 14 12 24   enter x limits of container volume : ( min max ) 0 14   enter y limits of container volume : ( min max ) 0 12   enter z limits of container volume : ( min max ) 0 24   enter starting distribution : 3        0 = single point ( fixed x , y , z )        1 = through - going particle ( range of x ; fixed z ; y=0 )        2 = range of points along axis",
    "( range of z ; x = y=0 )        3 = uniform throughout volume ( range of x , y , z )        4 = uniform in center plane ( range of x , z ; y=0 )        5 = aimed ( fixed x , y , z ; fixed vx , vy , vz )        6 = uniform in first half - sector ( range of x , y , z )   enter number of photons : 5000000   number of photons processed =       5000000      number of photons attenuated =       1467024   number of photons absorbed =       2197182   number of photons overbounced =       169244      number of photons detected =      1166550      (       489568 started backward )      (       676982 started forward ) ....",
    "this output is an example of the optics simulation of a half - hexagonal csi detector , fig .",
    "[ shapes].i .",
    "the user can choose three different output formats .",
    "in the endpoints format for each detected scintillation photon a record is written to an ascii output file documenting :    1 .",
    "@xmath40 , the starting coordinates of a generated photon ; 2 .",
    "@xmath41 , the components of the initial directional vector of the photon ; 3 .",
    "@xmath42 , a point at which the photon hit the photosensitive surface ; 4 .",
    "@xmath43 , the components of the photon s direction vector when it hit the photosensitive surface ; 5 .",
    "@xmath44 , the time elapsed from the photon creation to the moment of its detection ; 6 .",
    "@xmath14 , the number of times a photon was reflected from the detector surfaces .",
    "the program terminates by printing the photon transport statistics summary .",
    "the summary includes the number of detected photons , as well as fractions of attenuated , absorbed and `` overbounced '' photons ( see the tail of sec .",
    "[ inp ] listing ) .",
    "the limit to the number of photon bounces is set by a user .",
    "the default limit is 200 reflections .",
    "events exceeding that limit are counted as overbounced and the propagation resumes with a new photon at the starting position .",
    "the cernlib paw macro program titled tkpawread.kumac can be used to read in the ascii file produced by the optics code and make an hbook4 rz file containing a summary ntuple  @xcite .",
    "the usage syntax is exec tkpawread _",
    "infile outfile_. the structure of the generated ntuple is given in an example below :    ....            * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *            * ntuple id=    10   entries= 233209    endpoint data      *            * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *            *   var numb   *    name     *     lower      *     upper      *            * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *            *       1      * xstart     * 0.180037e+00 * 0.138114e+02 *            *       2      * ystart     * 0.146866e-03 * 0.585641e+01 *            *       3      * zstart     * 0.561714e-02 * 0.225345e+02 *            *       4      * vxstart    * -.999965e+00 * 0.999996e+00 *            *       5      * vystart    * -.999988e+00 * 0.999991e+00 *            *       6      * vzstart    * -.999990e+00 * 0.999998e+00 *            *       7      * xstop      * 0.314337e+01 * 0.115353e+02 *            *       8      * ystop      * 0.238158e+00 * 0.541021e+01 *            *       9      * zstop      * 0.220957e+02 * 0.227119e+02 *            *      10      * vxstop     * -.999665e+00 * 0.998784e+00 *            *      11      * vystop     * -.990139e+00 * 0.999993e+00 *            *      12      * vzstop     * -.994538e+00 * 0.999994e+00 *            *      13      * time       * 0.976813e-02 * 0.302494e+02 *            *      14      * bounces    * 0.000000e+00 * 0.109000e+03 *            * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * ....    the variable names correspond to the ascii file variables .",
    "the number of ntuple entries in this case is equal to the number of generated photons .",
    "if a user wants to calculate the three - dimensional light collection probability function the statistics output format is more appropriate .",
    "the variables written to an ascii file and into the resulting ntuple are :    1 .",
    "x , y , z , the coordinates of the centers of the elementary cells into which the detector volume is subdivided ; 2 .",
    "counts , the number of detected photons originating from a given elementary cell ; 3 .",
    "edge , the flag indicating if an elementary cell is fully contained inside the detector volume ( edge@xmath451 ) , or is partly outside the detector ( edge@xmath450 ) ; 4 .",
    "thrown , the number of the generated photons having the origins within a given elementary cell ; 5 .",
    "time , the average time - of - flight of the photon ( time elapsed between the generation and detection moment ) .    ....            * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *            * ntuple id=    10   entries=    4032    statistics         *            * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *            *   var numb   *    name     *     lower      *     upper      *            * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *            *       1      * x          * 0.500000e+00 * 0.135000e+02 *            *       2      * y          * 0.500000e+00 * 0.115000e+02 *            *       3      * z          * 0.500000e+00 * 0.235000e+02 *            *       4      * counts     * 0.000000e+00 * 0.957900e+04 *            *       5      * edge       * 0.000000e+00 * 0.100000e+01 *            *       6      * thrown     * 0.000000e+00 * 0.407280e+05 *            *       7      * time       * 0.000000e+00 * 0.463954e+01 *            * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * ....    the number of the ntuple entries represents the number of elementary cells , and in the case above corresponds to the 14@xmath012@xmath024@xmath7@xmath46 subdivision .",
    "the simulated detector was irregular trapezoidal pyramid shown in fig .",
    "[ shapes].i .",
    "the resulting histograms of the number of photon reflections as well as the distribution of the photon time - of - flight times are shown in fig .",
    "[ trans ] . converting the later histogram into a cumulative representation we get the intrinsic contribution of the photon arrival times to the timing lineshape of the detector system , fig .",
    "[ times ] .",
    "finally , the information on the individual photon trajectories could be captured with the track output format :    ....   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   * ntuple i d = 10      entries = 53424      track data   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   * var numb * type * packing *     range      *   block    *   name            *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *       1    * i*4   *          * [ 0,200 ]       * track     * ntrack           *   *       2    * i*4   *          *               * track     * itrack(ntrack )   *   *       3    * r*4   *          *               * track     * xtrack(ntrack )   *   *       4    * r*4   *          *               * track     * ytrack(ntrack )   *   *       5    * r*4   *          *               * track     * ztrack(ntrack )   *   *       6    * r*4   *          *               * track     * vxtrack(ntrack ) *   *       7    * r*4   *          *               * track     * vytrack(ntrack ) *   *       8    * r*4   *          *               * track     * vztrack(ntrack ) *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   *   block    *   entries   * unpacked * packed *    packing factor            *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   * track     *   53424     * 5604      * var .",
    "*     variable                 *   * total     *     ---     * 5604      * var .    *     variable                 *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *   * blocks = 1             variables = 8        max .",
    "columns = 1401          *   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * ....    the track number , starting and endpoint coordinates and the initial track direction of a photon are recorded in this file .",
    "figure  [ pmt ] illustrates the uniform distribution of the detected photons on the surface of a photocathode .",
    "the simulated detector was again the hex - d1/2 shape shown in fig .",
    "[ shapes].i .",
    "the coordinate system is always defined with the @xmath4 axis pointing along the detector axis and the origin is placed at the front detector face . if the detector shape is polygonal , one vertex of the front detector face should always lie on the positive @xmath35 axis .",
    "all detector surfaces in examples below are normal dielectric interfaces .",
    "some surfaces are wrapped in the specularly reflecting layer of aluminized mylar or multiple layers of teflon sheet .",
    "user - defined geometrical shapes are included in an encompassing sphere filled with air .",
    "the rectangular subvolume of the sphere is divided into a number of elementary cells with side lengths @xmath47 , usually @xmath481@xmath7 cm .",
    "the coordinate system is as follows : the @xmath4 direction points along the axis of the crystal , with @xmath6 at the smaller ( front ) face , and @xmath49 at the larger ( back ) face .",
    "one vertex of the front face and one of the back face lie on the positive @xmath35 axis .",
    "the coordinates of the vertices for each crystal type are stored in the text data files .",
    "the nine different scintillator shapes are examined : four irregular hexagonal truncated pyramids ( we label them hex  a , hex ",
    "b , hex  c , and hex ",
    "d ) , one regular pentagonal ( pent ) and two irregular half - hexagonal truncated pyramids ( hex  d1 and hex ",
    "d2 ) , and two trapezohedrons ( vet1 , vet2 )  @xcite . the volumes of studied csi crystals varied from 797@xmath7@xmath46 ( hex ",
    "d1/2 ) to 1718@xmath7@xmath46 ( hex  c ) , see fig .",
    "[ shapes].i .",
    "the size of the elementary cell was 1@xmath7@xmath46 .",
    "the geometry of the simulation is simple .",
    "the csi scintillator crystal is wrapped in a layer of aluminized mylar and attached via a 0.2@xmath7 mm thick optical joint to a 1@xmath7 mm thick photomultiplier window . behind this window",
    "is a photocathode .",
    "the diameter of the photosensitive surface is 46@xmath7 mm ( hex  d and vet ) or 67@xmath7 mm inches ( pent and hex ) .",
    "the entire detector is enclosed in a large absorbing sphere filled with air .",
    "the program output is written to a binary rz file .",
    "the results of the calculation are the three - dimensional light collection probability functions illustrated on figs .",
    "[ fig : hexa_9 ] and [ fig : hh1d_9 ] .",
    "the percentage probability that photons generated within two - dimensional @xmath35@xmath4 bins will generate a photoelectron on the pmt cathode is shown on top panels .",
    "the bottom panels are tomography measurements of the corresponding light responses for two representative hex  a and hex  d1 detectors .",
    "the cylindrical plastic hodoscope of the pibeta detector  @xcite used in charged particle tracking consists of 20 rectangular staves , fig  [ shapes].ii .",
    "the individual sections are optically isolated from each other by one layer of aluminized mylar wrapping and are viewed by one inch phototubes coupled via lightguides on both ends .",
    "the simulated light response of the individual pmts as a function of the axial position along the plastic stave is an example of the calculation of physical interest .",
    "a plastic scintillator cylindrical target is used in the center of the pibeta detector  @xcite to stop a pion beam ( fig .",
    "[ shapes].iii ) .",
    "the positrons from pion and muon decays emanating from the target center are detected subsequently in the plastic veto hodoscope and the csi calorimeter .",
    "a typical optics calculation of the photon transport predicts the light response of the target as a function of the polar angle of the exiting positron .",
    "the lead glass calorimeter monitor for the radphi experiment e94 - 026 at jlab  @xcite is a laser - based calorimeter monitoring system .",
    "the nitrogen laser excites a cylindrical plastic scintillator and a generated light is distributed via six fiber optics cables to the 1.2@xmath7 cm thick plexiglas sheet  @xcite facing the lead glass wall in a light - tight enclosure ( fig  [ shapes].iv ) .",
    "the sheet is oversized at 152@xmath7cm@xmath0152@xmath7 cm to minimize the optical nonuniformities .",
    "the two - dimensional response of the smaller prototype system predicted with the optics code , as viewed through lead glass modules is displayed on fig .",
    "[ monitor ] . the maximum predicted variation in the light output of the plate as a function of the position of an individual lead glass detector is @xmath4830@xmath7% .",
    "the program optics can be used to calculate the light collection probability function @xmath51 , where @xmath52 are integers and @xmath47 the step size , on a user - defined three - dimensional grid .    starting from this three - dimensional probability function",
    "the code can calculate for an arbitrary point source of light @xmath53 inside the detector volume the light fraction reaching the photosensitive device .",
    "this is accomplished by means of a series of simple one - dimensional interpolations .",
    "our method of choice is the _ bilinear interpolation _ on an elementary grid square .",
    "the accuracy will be improved if one uses not only the light output values but also the gradients and the cross derivatives of the light output probability changes .",
    "these higher order methods that result in a smoother behavior of our function go under the names of the _ bi - cubic interpolations _ or _ bi - cubic splines_. numerical recipes for these methods are given as fortran subroutines and c functions in ref .",
    "@xcite .",
    "the three - dimensional distribution of energy deposited in the detector volumes by ionizing charged particles was calculated by the standard code geant  @xcite .",
    "we considered monoenergetic positrons and photons of 70@xmath7mev total energy incident on the pibeta calorimeter made of pure csi pyramids . in the user - written subroutine",
    "the energy deposited in every step was multiplied by the normalized value of the light collection nonuniformity function to yield the detected energy deposition .",
    "sums are kept of both the total deposited energy and total detected light .",
    "examples of predicted energy deposition lineshapes in the calorimeter are shown in fig .",
    "[ lineshapes ] .",
    "four different simulations are plotted .",
    "the top panel shows a pulse - height spectrum for @xmath54 simulated photons incident on the csi calorimeter from its center .",
    "the responses of both idealized uniform detector and the detector characterized with the optics - calculated nonuniformity functions are displayed .",
    "the bottom panel shows the difference in the response for the 70@xmath7mev positron showers .",
    "the computer code described in this paper is distributed in the form of uuencoded compressed tar archives named optics.uu ( 229 kb ) and tkoptics.uu ( 2.4 mb ) .",
    "these two files can be obtained via transfers from the url http://pibeta.phys.virginia.edu/public_html/optics .",
    "same files can also be obtained directly from the authors .",
    "the unix utilities for the tar archive processing can be copied from the official gnu site at http://www.gnu.ai.mit.edu .",
    "installation of the optics software on a computer running the unix operating system is straightforward .",
    "execution of the csh script uudecode taking optics or tkoptics as a parameter creates a compressed tar archive file with an extension tar.gz .",
    "the archive can be unpacked with the command gunzip .",
    "the unpacked optics library files should be placed under the /common / local / optics subdirectory .",
    "the extracted tkoptics files should be copied to the optics subdirectory on the user s disk . if the user prefers the gui version of the program , the installation of cernlib libraries , as well as of the tk and tcl libraries  @xcite is required .",
    "the publicly available distributions can be accessed , for example , at ftp://ftp.scriptics.com / pub / tcl/. the parameter file .tkoptics defining the input parameters echoed in the default optics window should be placed in the login directory .",
    "the tk and tcl software should be installed under /common / local / tk and /common / local / tcl areas , respectively .",
    "the most recent cern program library release containing subroutines used in the tkoptics program is available at the site ftp://asisftp.cern.ch .",
    "the working area can be now named by the project s title and should contain the required input files , like the optics.dat and tkoptics.dat . to verify that the program executes properly the user should remake the executable code by compiling and linking the source code with the make optics command . the makefile file is included in the distribution .",
    "the program can then be started with the tkoptics command invoking a gui interface window or it can be run in batch mode with the optics command .",
    "the authors wish to thank micheal sadler of the abilene christian university for the loan of the drift chamber tomography apparatus .",
    "stefan ritt and penelope slocum of the university of virginia and david lawrence of the arizona state university have helped with the cosmic muon tomography measurements . their help is gratefully acknowledged .",
    "e. frle , i. supek , s. ritt , k. a. assamagan , ch .",
    "brnnimann , th .",
    "flgel , b. krause , d. mzavia , d. poani , d. renker , p. l. slocum , n. soi , _ cosmic muon tomography of pure cesium iodide calorimeter crystals _ , nucl .",
    "instr . and meth .",
    "a440 ( 1999 ) 57 .",
    "d. poani , k. a. assamagan , ch .",
    "brnnimann , t. flgel , e. frle , j. e. koglin , b. krause , d. w. lawrence , r. c. minehart , d. renker , b. g. ritchie , s. ritt , p. l. slocum , and i. supek , psi r-89.01 experiment progress report ( university of virginia , charlottesville , 1995 ) .",
    ".sample ranges of input optical parameters for optics simulations of various detectors .",
    "we simulated the response of the hexagonal and half - hexagonal pure csi scintillators , a plastic scintillator stave , a cylindrical active plastic target , and a plexiglas light distribution plate .",
    "[ cols= \" < , < , < , < , < \" , ]"
  ],
  "abstract_text": [
    "<S> we present the program optics that simulates the light response of an arbitrarily shaped scintillation particle detector . predicted light responses of pure csi polygonal detectors , plastic scintillator staves , cylindrical plastic target scintillators and a plexiglas light - distribution plate </S>",
    "<S> are illustrated . </S>",
    "<S> we demonstrate how different bulk and surface optical properties of a scintillator lead to specific volume and temporal light collection probability distributions . </S>",
    "<S> high - statistics optics simulations are calibrated against the detector responses measured in a custom - made cosmic muon tomography apparatus . </S>",
    "<S> the presented code can also be used to track particles intersecting complex geometrical objects .    </S>",
    "<S> pacs codes : 07.05.tp ; 24.10.lx ; 29.40.mc ; 87.59.f    _ keywords : _ computer modeling and simulation ; monte carlo simulation of scintillator response ; scintillation detectors ; computed tomography    psfig.sty    = 0.2 cm    * program summary *    _ title of program _ : optics    _ catalogue identifier _ : adxx    _ program summary url : _ </S>",
    "<S> http://www.cpc.cs.qub.ac.uk/cpc.summaries/adxx    </S>",
    "<S> _ program obtainable from _ : cpc program library , queen s university of belfast , n. ireland , also at http://pibeta.phys.virginia.edu/public_html/optics or the authors .    </S>",
    "<S> _ licensing provisions _ : none    _ computers _ : tested on microvax 3100 and decstation 5000/200 . </S>",
    "<S> program should be easily portable to any unix workstation .    </S>",
    "<S> _ operating system under which the program has been tested _ : dec vms v5.5 system in a batch mode and the dec osf/1 v1.3a unix environment in both a batch mode and with a graphical user interface running in a batch or interactive mode    _ programming languages used _ </S>",
    "<S> : fortran and tk / tcl toolkit    _ program libraries used _ : cernlib programs in packlib library and kernlib fortran callable libraries ( optional )    _ memory required to execute with typical data set _ : up to 1 mb with a gui interface    _ number of bits in a word _ : 32 ( cmos cpu ) or 64 ( alpha axp cpu processor )    _ peripherals used _ : standard input , standard output , hard disk , x - terminal ( optional ) , postscript printer for graphics ( optional , preferably color printer )    _ number of lines in the distributed programs , including test data files and help files _ : 26162    _ program structure _ : code consists of 65 individual files containing the subroutines , data files and command files . </S>",
    "<S> a user can modify or expand the photon transport code as well as database files specifying default optical properties of the detector surfaces and the bulk media .    </S>",
    "<S> _ distribution format _ : uuencoded and compressed tar file or , alternatively , compressed tar file    _ keywords _ : computer modeling and simulation ; monte carlo simulation of scintillator response ; scintillation detectors ; computed tomography    _ nature of physical problem _ : simulation of the volume and temporal light collection probability distributions given the geometrical shape plus bulk and surface optical properties of a scintillation detector .    </S>",
    "<S> _ method of solution _ : the code recognizes cylindrical , spherical , and parabolical as well as arbitrary polygonal scintillator shapes ( and optional wrapping reflectors ) that could couple via lightguides or wavelength shifters to photosensitive surfaces . </S>",
    "<S> the light - generating volume can be subdivided into the elementary cells . </S>",
    "<S> the photons generated within each cell are tracked through the scintillating volume taking into account specular , diffuse and rough surface reflections from lateral detector surfaces and wrapping reflectors , and the bulk attenuation and scattering effects from detector defects  @xcite .    </S>",
    "<S> _ restriction on the complexity of the problem _ : the statistical uncertainties of the simulated light collection probability distribution are limited by the practically tolerable running time ( see below ) .    _ typical running time _ : the running time depends on the number of elementary volume cells chosen and the number of scintillating photons generated per cell and is therefore problem - dependent . for example , assuming a small - step volume subdivision into a 15@xmath015@xmath030 matrix with 6750 elements and aiming for better than 2% average uncertainty in the three - dimensional light nonuniformity function typically requires 10@xmath1 photon statistics per cell and running time of @xmath224 hours on a 200 mhz computer .    </S>",
    "<S> _ references _ : [ 1 ] b. k. wright , program optics ( university of virginia , charlottesville , 1992 ) .    [ 2 ] b. k. wright , program tkoptics ( university of virginia , charlottesville , 1994 ) .    </S>",
    "<S> * long write - up * </S>"
  ]
}
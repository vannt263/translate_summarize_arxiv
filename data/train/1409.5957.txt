{
  "article_text": [
    "jigsaw puzzles @xcite , dating back to the 1760s , are among the most popular single - player puzzles .",
    "the edge - matching puzzle , introduced in the 1890s , is a variation of the jigsaw puzzle in which the goal is to arrange a given collection of tiles with colored edges so that the colors match up along the edges of adjacent tiles .",
    "an example of an edge - matching puzzle with 36 square pieces is shown in figure  [ fig : example_6x6 ] .",
    "edge - matching puzzles are challenging compared to standard jigsaw puzzles as only an entire solution guarantees the correctness of any local part of the solution .    despite recent breakthroughs in algorithmic solutions for pictorial puzzles @xcite , in which one aims to reorganize a scrambled image ,",
    "relatively little attention had been given to apictorial edge - matching puzzles .",
    "this np - hard problem  @xcite sparked a lot of interest following the launch of the eternity puzzle challenges .",
    "the challenge posed in the _ ",
    "eternity i \" _ puzzle was to tile a large dodecagon with 209 irregularly shaped smaller polygonal pieces ; it was marketed as being practically unsolvable , but was solved within a year , for a prize of 1 million pounds . for the _ ",
    "eternity ii \" _ puzzle one must correctly place 256 square pieces , whose edges are marked with different patterns , into a 16@xmath016 grid .",
    "the puzzle was launched in 2007 and to date remains unsolved .",
    "a prize of 2 million dollars was on offer up until december 2010 .    0.49     0.49     in this paper we propose a novel representation for apictorial edge - matching puzzle games in terms of algebraic varieties , _",
    "i.e. _ , as solutions of systems of polynomial equations derived from the pieces of the puzzle .",
    "we explain how to generate systems of polynomial equations which are satisfied by puzzle solutions .",
    "we refer to systems for which the converse also holds , that is , any solution of the system is a solution of the puzzle , as _ complete _ representations .",
    "we characterize and prove the completeness of representations for 2-dimensional translation only puzzles ( _ i.e._puzzles with 2-dimensional pieces which can be translated but not rotated ) .    using our algebraic representation",
    "we devise new algorithms for solving edge - matching puzzles .",
    "we show that approximate solutions can be generated by solving a sequence of _ continuous _ and _ global _ convex optimization problems .",
    "our motivation for seeking a global solution strategy is the unique characteristic of edge - matching puzzle problems : only an entire ( global ) solution provides a certificate of correctness for any local part of the solution .",
    "convergence to a global solution of the original non - convex problem , which corresponds to a solution of the puzzle , is achieved for some interesting puzzle instances .    specifically , we propose two types of convex relaxations for 2-dimensional translation only edge - matching puzzles . for puzzles",
    "where we know in advance that pieces may only be placed in a finite set of predetermined locations , we propose a _",
    "vandermonde formulation _ where a solution to the puzzle is attained by approximately solving a constrained optimization problem over the manifold of vandermonde matrices using linear programming . for the more general setting ,",
    "we propose a _",
    "rank one formulation _ where we approximate a solution to a constrained optimization over rank one matrices using semidefinite programming .",
    "finally , we show how our computational framework and algorithms can be extended to various interesting variants of edge - matching puzzles including higher - dimensional puzzles , puzzles in which the pieces have irregular shapes ( _ e.g. _ , see figure  [ fig : example_tangram_b ] ) and puzzles for which not only the location but also the orientation of the pieces is unknown ( _ e.g. _ , see figure  [ fig : example_rotations ] ) .",
    "effective representations and algorithms for solving puzzle games have applications beyond mere theoretical interest",
    ". computational solutions of puzzles are used in computer aided reconstruction in archaeology @xcite , the recovery of shredded documents @xcite or photos @xcite , and in image editing @xcite .",
    "they are also relevant to speech descrambling @xcite , machine translation of text @xcite and even biology ( dna sequence reconstruction can be viewed as a jigsaw puzzle ) @xcite and chemistry ( determination of molecular conformation ) @xcite .",
    "early work , beginning with freeman and gardner @xcite from 1964 , develops algorithmic solutions for jigsaw puzzle games based solely on their geometry , a detailed review can be found in @xcite .",
    "subsequent algorithms combine shape with the image content of the pieces @xcite .",
    "a number of methods for solving pictorial puzzles with square pieces have been proposed .",
    "cho et al .",
    "@xcite present a probabilistic framework based on the patch transform proposed in @xcite , which synthesizes an image from a set of image patches .",
    "approximate puzzle reconstruction is achieved via loopy belief propagation on a suitable graphical model .",
    "more recently , pomerantz et al .",
    "@xcite and gallagher @xcite proposed greedy algorithms that solve puzzles comprising thousands of pieces .",
    "while @xcite solves only for translations in the plane , @xcite and @xcite allow pieces to rotate and solve for their orientations as well .",
    "methods based on non - convex constrained quadratic programming @xcite as well as genetic algorithms @xcite have shown competitive results .",
    "all of these approaches however , rely on the statistics of natural images ( either explicitly or implicitly ) .",
    "therefore , they are not expected to perform well if directly applied to apictorial edge - matching puzzles , in which there is no image content .",
    "specific puzzles have also been studied : deutsch and hayes @xcite suggest a heuristic approach for solving the tangram puzzle . a connectionist approach to solving the same puzzle",
    "was proposed by oflazer @xcite .",
    "dattorro @xcite proposed an interesting convex semidefinite programming approach for attempting to solve the eternity ii puzzle .",
    "demaine and hearn @xcite and demaine and demaine @xcite studied jigsaw puzzles from the perspective of combinatorial game theory . in the latter , the decision problems corresponding to jigsaw puzzles and edge - matching puzzles",
    "( _ i.e. _ ,  does this puzzle have a solution \" ) are shown to be np - complete .",
    "in this work , we focus on _ ideal edge - matching framed _ puzzles . that is , apictorial geometric puzzles , in which a set of pieces of known shapes and edge colors is given .",
    "the puzzle is bounded by a frame and each edge must perfectly match ( in its location , color and orientation ) an edge of either another piece or the frame .",
    "we start by considering simple polygonal 2-dimensional puzzles , where puzzle pieces are equilateral polygons with unit - length colored edges .",
    "furthermore , we will assume that puzzle pieces may only be translated ( _ i.e. _ , the rules of the game allow shifting the pieces but not rotating them ) .",
    "the goal of the game is then to place all pieces within the given bounding frame , such that all edges pair with matching edges .",
    "this , in turn , implies that the puzzle pieces cover its frame ( for a properly designed puzzle ) , see figure  [ fig : problem_statement ] .",
    "next , we formally present an algebraic representation for these types of puzzles . in section  [",
    "sect : extensions ] we show how to extend our framework to cases in which the above assumptions do not hold such as puzzles with irregularly shaped pieces , higher - dimensional puzzles and puzzles in which rotating the pieces is also allowed .      consider a 2-dimensional polygonal puzzle with @xmath1 pieces .",
    "as illustrated in figure  [ fig : two_matching_edges ] , we describe the @xmath2th piece by the location @xmath3 of its center and its set of edge elements @xmath4 ( polygon sides ) .",
    "each edge @xmath5 is described by the relative location of its center @xmath6 with respect to the piece center , its color @xmath7 and its orientation @xmath8 .",
    "therefore , the absolute location of the @xmath9th edge of the @xmath2th piece is given by the sum @xmath10 .",
    "we shall consider puzzles with a bounding frame , which can be seen as another puzzle piece , with the exception of being static .",
    "we denote the piece corresponding to the puzzle frame by @xmath11 and the properties of its edge elements by @xmath12 , @xmath13 and @xmath14 .    under the assumption that",
    "puzzle pieces may _ only be translated _ , the goal of the game amounts to finding @xmath15 for which all edge elements pair with matching edge elements in their spatial locations , colors and orientations ( see figure  [ fig : problem_statement ] ) .",
    "we shall refer to a configuration @xmath15 that satisfies this criterion as a _ solution _ of the puzzle .",
    "in this section , we derive an algebraic representation of a puzzle .",
    "we show how , given a puzzle , one can construct an algebraic system of equations that characterizes the puzzle .",
    "furthermore , we prove that this representation is complete , in the sense that it encapsulates all the information available in the given puzzle and its solutions are exactly the solutions of the puzzle .",
    "suppose @xmath15 is a solution of the puzzle . by definition ,",
    "every edge is paired with a matching edge .",
    "consider such a pair of matching edges , edge @xmath9 of the @xmath2th piece and edge @xmath16 of the @xmath17th piece . by definition",
    ", these edges must spatially coincide , _",
    "i.e. _ , @xmath18 they must have the same color @xmath19 and they must face opposite directions @xmath20 see figure  [ fig : two_matching_edges ] for an illustration .",
    "in particular , notice that   linearly constrains the relative locations of the two pieces .",
    "for simplicity of notation we will omit the congruent modulo notation for angles with the understanding that @xmath21 is shorthand for @xmath22 .    in general , however , we do not know in advance which edges pair with each other .",
    "nevertheless , we notice that all edges of a certain color and orientation @xmath23 must pair with complementary edges of the same color and opposite orientation @xmath24 .",
    "therefore , for every @xmath23 we have an equality of sets @xmath25 clearly , equation   holds for all @xmath23 if and only if @xmath15 is a solution of the puzzle .    if we define the signed indicator function w.r.t .",
    "@xmath23 by @xmath26 then , by construction we have derived the following result :    if @xmath15 is a solution of the puzzle then @xmath27 for every @xmath23 and every real valued function @xmath28 . [ proposition : basic_condition ]    note that   is an algebraic constraint on @xmath15 .",
    "this allows us to construct an algebraic _ system _ of constraints by taking all admissible @xmath23 s and different @xmath29 s .",
    "different choices of a function @xmath29 establish systems with possibly different properties .      a particular choice of @xmath29 is @xmath30 for any @xmath31 .",
    "this choice yields a linear representation of the puzzle .",
    "namely , equations of the form @xmath32 for all @xmath23 define a _ linear system of equations _ in @xmath15 .",
    "clearly , every solution of the puzzle must satisfy this system of equations .",
    "usually , however , the converse does not hold , and this linear system does not determine the solutions of the puzzle .",
    "in the rest of the paper , we use functions @xmath29 which belong to a family of _ exponential _ functions . for a given @xmath33",
    ", we define @xmath34 .",
    "equation   then becomes @xmath35 to simplify notations we change variables @xmath36 ( element - wise exponentiation ) to obtain @xmath37 where @xmath38 , and @xmath39 is defined according to the multi - index notation @xmath40    note that   is simply a polynomial in ( the entries of ) @xmath41 .",
    "collecting many equations of the form   for all @xmath23 and various choices of @xmath42 establishes a _ polynomial system of equations _ in @xmath41 .    according to proposition  [ proposition : basic_condition ] , if @xmath15 is a solution of the puzzle then @xmath41 is a solution of any such polynomial system of equations .",
    "next , we discuss the conditions under which the converse holds , so that every solution of the polynomial system corresponds to a valid solution of the puzzle . in",
    "what follows , we identify @xmath15 with @xmath41 , and thus refer to the latter as a solution of the puzzle as well .",
    "naturally , we seek a complete representation , one that encapsulates all the information available in the given puzzle and exactly characterizes the solutions of the puzzle .",
    "we consider the polynomial system constructed by collecting equations of the form   for different @xmath23 and various @xmath42 values .",
    "intuitively , if additional equations provide additional independent constraints then we can hope that collecting many such equations will sufficiently constrain the unknown variables , exactly determining the solutions of the puzzle .",
    "indeed , we can show that a system of sufficiently many such polynomial equations establishes an equivalent representation , in which @xmath41 is a solution of the puzzle if and only if it is a root of this system .",
    "more formally , consider the polynomial system @xmath43 constructed by collecting equations as follows : for every possible type of edge @xmath23 add @xmath44 equations of the form  : @xmath45 for distinct values of @xmath42 , where @xmath46 is an integer which depends on the edge type @xmath23 .",
    "this construction is well defined since , by our assumption of polygonal puzzle pieces , there exist finitely many distinct edge types @xmath23 .    by construction ,",
    "every solution of the puzzle is a solution of @xmath43 .",
    "the proposition below suggests that the converse also holds , provided that @xmath43 is defined by sufficiently many equations .",
    "in particular , appendix  [ section : proof_equivalence ] provides a _ constructive _ proof which shows that the number of equations required for each type of edge @xmath23 is exactly the number of puzzle edges of this type .",
    "[ proposition : equivalent_representation ] there exists ( constructively ) a polynomial system @xmath43 with @xmath47 equations for each edge type @xmath23 that satisfies that @xmath41 is a solution of @xmath43 if and only if it is a solution of the puzzle .",
    "the proof relies on the following observation .",
    "consider _ independently _ all @xmath48 edges of type @xmath23 .",
    "any pairing of these edges with corresponding opposite edges satisfies polynomial equations of the form   for any order @xmath42 .",
    "there are exactly @xmath49 such pairings , as the number of permutations of @xmath50 elements . on the other hand ,",
    "using bzout s theorem @xcite we can show that a polynomial system of equations of the form   of orders @xmath51 has no more than @xmath49 distinct solutions .",
    "thus , such a system exactly characterizes all possible independent pairings of @xmath23 edges , in the sense that any subset of its equations is insufficient whereas additional higher - order polynomials are redundant .",
    "the full proof ( given in appendix  [ section : proof_equivalence ] ) follows by generalizing this observation to the intersection of multiple similar systems , each corresponding to edges of a different type @xmath23 , and the addition of constraints accounting for the geometry of the puzzle pieces .",
    "in previous sections we have shown that a puzzle problem can be faithfully represented as a system of polynomial equations @xmath52 in the unknowns @xmath41 .",
    "next , we discuss several approaches for determining a solution @xmath41 of this system , either directly or by approximation .",
    "once such a solution is found , one may recover the piece locations @xmath15 using the relation @xmath53 . assuming the conditions for proposition  [ proposition : equivalent_representation ] hold ,",
    "these locations are guaranteed to solve the puzzle .    to simplify notations we present the derivations for 1-dimensional puzzles ( with coordinates over @xmath54 ) .",
    "extending the results to the case of 2-dimensional puzzles , discussed so far , ( or in fact arbitrary dimension ) is straightforward , see appendix  [ section : solution_2d_techincal ] for the technical details .",
    "solving polynomial systems of equations is an important problem which is covered in a large body of literature , for example see @xcite and the references therein .",
    "existing methods for solving generic systems may be coarsely classified into two categories : symbolic ( exact ) and numerical methods .",
    "grbner algorithms @xcite are typical representatives of the class of symbolic methods .",
    "these algorithms seek to simplify a given polynomial system , to enable the extraction of its roots .",
    "this can be seen as a multivariate , non - linear generalization of the euclidean algorithm ( for computation of univariate gcd ) and gaussian elimination for linear systems .",
    "however , the complexity of methods for calculating grbner bases may be extremely high .",
    "a popular approach in the class of numerical methods is homotopy continuation .",
    "such methods rely on bertini s theorem which introduces a continuous deformation between the polynomial system whose solution we seek and a simpler polynomial system whose solutions are known , see @xcite for more details . keeping track of the roots during this deformation",
    "can provide a solution to the system .",
    "however , a good initialization ( _ i.e. _ , an initial polynomial system with known solutions ) is crucial to the success of the algorithm .",
    "unfortunately , the combinatorial nature of the polynomial systems we are concerned with typically makes it hard to find a good initialization .",
    "our attempts to solve very simple puzzles using generic polynomial system solvers met with limited success .",
    "therefore , in what follows we describe a reformulation and optimization algorithms which try to take advantage of the unique properties of systems of the form  .",
    "note that the polynomial system   has a special structure : each one of its equations includes only @xmath42th degree monomials in the unknown @xmath55 s .",
    "we exploit this structure in order to restate the problem of solving puzzles as a linear system of equations over a ( non - linear ) manifold of matrices .",
    "we discuss two alternative reformulations , relying on either vandermonde or rank one matrices .",
    "we further discuss convex relaxations of the resulting problems , which can be used to solve certain types of puzzles .",
    "any polynomial system of equations can always be replaced with a linear system of equations of a higher dimension , by considering each monomial as a variable , and adding simple polynomial constraints coupling the new variables . in the case of our polynomial systems , this can be conveniently stated using vandermonde matrices . recall that a matrix of the form @xmath56 is known as a _ vandermonde _ matrix .",
    "it is straightforward to see that the problem of solving   can be equivalently reformulated as @xmath57 } \\\\",
    "\\operatorname{subject\\ to } & x \\text{\\ is vandermonde of size $ n \\times k$ }   \\\\ & \\sum_{i } \\alpha_i^{(k , c,\\theta)}x_{ij } = 0 \\qquad \\forall j , c,\\theta .",
    "\\\\ \\end{array } \\label{eqn : eq_equiv_problem_vandermonde}\\ ] ] to ensure that @xmath58 contains the monomials necessary for a complete polynomial representation as in proposition  [ proposition : equivalent_representation ] we choose @xmath59",
    ". formulation  [ eqn : eq_equiv_problem_vandermonde ] amounts to solving a linear system over the manifold of vandermonde matrices .",
    "of course this new problem is as hard to solve as the original problem itself .",
    "we will now show how to derive an approximation under an additional assumption .",
    "[ [ preset - locations ] ] preset locations + + + + + + + + + + + + + + + +    in many puzzles , pieces may only be placed at a finite number of preset locations .",
    "this is the case , for example , in square tiling puzzles ( _ e.g. _ , see figure  [ fig : example_6x6 ] ) .",
    "this additional information can be incorporated into the formulation  .",
    "suppose that piece locations @xmath15 must belong to a finite _ known _ set of feasible locations @xmath60 .",
    "this assumption can be formally stated by    @xmath61    for some permutation matrix @xmath62 . in turn , since @xmath53 , this implies that @xmath63 where @xmath64 .",
    "we use the known preset piece locations to define the vandermonde matrix @xmath65 by @xmath66 then , implies that any solution of problem must satisfy @xmath67    notice that @xmath68 defines a vandermonde matrix for any choice of _ permutation _ matrix @xmath62 .",
    "therefore , problem can be replaced with the following equivalent problem @xmath69 \\\\",
    "\\operatorname{subject\\ to } & p \\text { is a permutation } \\\\ & x = { \\left [ x_{ij}\\right ] } = py \\\\ &",
    "\\sum_{i } \\alpha_i^{(k , c,\\theta)}x_{i , j } = 0 \\qquad \\forall j , c,\\theta .",
    "\\\\ \\end{array } \\label{eqn : eq_equiv_problem_permutation}\\ ] ] thus , we have replaced the vandermonde constraint with the restriction of the search space to the set of permutation matrices , which in turn corresponds to the set of feasible piece locations .",
    "[ [ convex - relaxation ] ] convex relaxation + + + + + + + + + + + + + + + + +    problem is a non - convex feasibility problem .",
    "nevertheless , we next show that it can be restated as a linearly constrained quadratic maximization problem , and then _ relaxed _ into a sequence of linear programs .",
    "the birkhoff - von neumann theorem @xcite asserts that permutations are the extremal points of the set of bi - stochastic matrices .",
    "moreover , the frobenius norm of matrices in this set is maximized by permutations . using this ,",
    "can be replaced with the following equivalent optimization problem : @xmath70 } = py \\\\ & \\sum_{i } \\alpha_i^{(k , c,\\theta)}x_{i , j } = 0 \\qquad \\forall j , c,\\theta \\\\",
    "\\end{array } \\label{eqn : eq_reformulate_problem_permutation}\\ ] ] where @xmath71 is the all one vector .",
    "this is again a non - convex optimization , as it maximizes norm .",
    "we generate approximate solutions to by linearizing its quadratic objective term and applying an iterative algorithm , in similar spirit to reweighted optimization approaches ( _ e.g. _ , reweighted @xmath72 minimization @xcite ) .",
    "note that @xmath73 , where @xmath74 is the standard matrix inner product .",
    "suppose that @xmath75 is an approximate guess of @xmath62 .",
    "we linearly approximate the quadratic objective as @xmath76 and iterate solving the following _ linear program _ ( lp ) : @xmath77 } = py \\\\ & \\sum_{i } \\alpha_i^{(k , c,\\theta)}x_{i , j } = 0 \\qquad \\forall j , c,\\theta \\\\ \\end{array } \\label{eqn : eq_relax_problem_permutation}\\ ] ] where @xmath78 is the optimizer of the previous iteration .",
    "the algorithm is outlined in algorithm  [ alg : solve_approx_lp ] .",
    "note that a global optimizer of is a fixed point of .",
    "we initialize with @xmath79 . with this initialization",
    "is equivalent to the standard lp relaxation of the feasibility problem over the convex hull of permutations .",
    "this sequence of optimization problems attains a bounded and monotonically non - decreasing objective .",
    "however , convergence to a permutation is not guaranteed .",
    "initialize @xmath80 [ alg : solve_approx_lp ]    [ [ examples ] ] examples + + + + + + + +    we demonstrate the proposed approach by solving examples of edge - matching puzzles .",
    "specifically , we generate 2-dimensional square tiling puzzles of various sizes whose edge colors are drawn at random , see figures  [ fig : example_6x6 ] and  figure  [ fig : example_8x8 ] .",
    "we use the polynomial representation described in section  [ section : poly_representation ] to calculate the coefficients of a corresponding polynomial system of equations and apply algorithm  [ alg : solve_approx_lp ] .",
    "figure  [ fig : example_6x6 ] shows the method applied to a @xmath81 puzzle .",
    "only 2 iterations of were required to attain a permutation , that corresponds to the sole solution of the puzzle .",
    "figure  [ fig : example_8x8 ] depicts the method applied to an @xmath82 puzzle .",
    "6 iterations of , shown at the bottom of the figure , were required to attain a permutation . in this case",
    ", the algorithm collapses into one of the two solutions of this puzzle .",
    "0.49   puzzle using our method.,title=\"fig : \" ]    0.49   puzzle using our method.,title=\"fig : \" ]     +    1   puzzle using our method.,title=\"fig : \" ]      for certain types of puzzles the set of valid locations of the pieces in a solution is not known in advance .",
    "one such example , where due to the irregularity of piece shapes their possible locations can not be predetermined , is the _ tangram _ puzzle ( figures  [ fig : example_tangram_a ] and [ fig : example_tangram_b ] ) in this section we propose an alternative reformulation of   as an optimization over rank one matrices .",
    "optimization subject to rank one constraints , or more generally low rank optimization , has recently received substantial interest ( _ e.g. _ , @xcite ) .",
    "we suggest a convex relaxation algorithm for generating approximate solutions to our rank one formulation , which does not require the piece locations to be known in advance .",
    "define @xmath1 _ hankel _ matrices @xmath83 of the form @xmath84 we state the following problem @xmath85 it is clear that if @xmath41 is a solution of the puzzle then the assignment @xmath86 is a solution of problem . to show that is in fact equivalent to the problem of solving the polynomial system",
    "we must show that any solution to is also a solution of the polynomial system .",
    "towards this end , we use the following simple lemma :    @xmath87 and @xmath88 if and only if @xmath89 for all @xmath9 .",
    "the lemma follows immediately by noticing that @xmath90 must be an outer product of its first column with itself .",
    "this implies that , under the constraints of problem , the matrix @xmath90 is simply the outer product of the @xmath2th row of the vandermonde matrix with itself .",
    "thus , every solution of the low - rank problem is a solution of the vandermonde problem , and in turn of the original polynomial system .",
    "therefore , is an alternative formulation to the problem of solving puzzles .",
    "it can be interpreted as finding a solution of a linear system over non - linear manifolds of rank one matrices .",
    "[ [ convex - relaxation-1 ] ] convex relaxation + + + + + + + + + + + + + + + + +    problem is a non - convex feasibility problem .",
    "note that its constraints @xmath87 and @xmath88 imply that @xmath90 is a positive semidefinite matrix , which we denote by @xmath91 .",
    "namely , since @xmath90 is a symmetric rank one matrix , it admits a rank one eigendecomposition of the form @xmath92 for some vector @xmath93 .",
    "having non - negative entries implies that @xmath94 , and in turn that @xmath91 .",
    "dattorro @xcite discusses a semidefinite programming ( sdp ) heuristic for rank - constrained optimization .",
    "inspired by his work , we propose an iterative approximate procedure . intuitively , the idea is that a rank one symmetric positive semidefinite matrix can be characterized as one that minimizes the sum of all eigenvalues but the largest .",
    "thus , a feasibility problem of the form can be cast as an eigenvalue minimization problem . since the resulting problem is not convex we generate approximate solutions by employing local linearization and solving a sequence of optimization problems .",
    "we iteratively solve the following sdp : @xmath95 where @xmath96 are fixed matrices , updated at each iteration according to @xmath97 and @xmath98 is the eigendecomposition of @xmath99 , the optimizer of the previous iteration , with eigenvalues sorted in descending order .    note that the functional of is non - negative , as @xmath100 and @xmath101 are all positive semidefinite .",
    "moreover , it vanishes if and only if the rank of each of the matrices @xmath90 is at most one .",
    "therefore , it is easy to see that a solution of is a global optimizer of , as well as a fixed point of the suggested iterative procedure ( see @xcite for additional details ) .",
    "we initialize the iterative procedure with @xmath102 , which reduces to a standard sdp relaxation for the rank one feasibility problem .",
    "the algorithm is outlined in algorithm  [ alg : solve_approx_sdp ] . as in section  [ section : reformulation_vandermonde ] , convergence to a global minimum is not guaranteed .",
    "initialize @xmath103 [ alg : solve_approx_sdp ]    [ [ examples-1 ] ] examples + + + + + + + +    to demonstrate the proposed approach , we applied the iterative algorithm to the problem of solving _ tangram _ puzzles .",
    "figures  [ fig : example_tangram_a ] and  [ fig : example_tangram_b ] show two instances of tangram puzzles . in these puzzles",
    "one aims to tile a given shape ( b ) with the puzzle pieces ( a ) .",
    "thus , it can be seen as an edge - matching problem in which all edges share the same color . in the figures , we color each piece in a different color for visualization only .",
    "the coefficients of a corresponding polynomial system of equations were calculated as described in section  [ section : poly_representation ] .",
    "( the calculations were slightly adapted to allow for non - equilateral polygonal pieces , see section  [ sect : extensions_piece_shape ] for additional technical details . ) then , the solution ( c ) was obtained by applying algorithm  [ alg : solve_approx_sdp ] .",
    "( d ) shows the iterations of the algorithm until convergence .",
    "note that no assumptions on the locations of the puzzle pieces were made , in contrast to the algorithm derived in section  [ section : reformulation_vandermonde ] , which constrains puzzle pieces to preset locations .",
    "0.4     0.26     0.26      +    1     0.28     0.35     0.35      +    1       algorithms [ alg : solve_approx_lp ] and [ alg : solve_approx_sdp ] were both implemented in matlab .",
    "yalmip was used for the modeling of the linear program   and semidefinite program  .",
    "gurobi  @xcite and mosek  @xcite , correspondingly , were used for their optimization .    in theory both lps and sdps",
    "are solvable in polynomial time . in practice ,",
    "algorithm 1 scales moderately well with the number of pieces .",
    "we have successfully solved instances of @xmath104 puzzles .",
    "we havent had as much success with larger problems , such as the _  eternity ii \" _ puzzle , which pose a considerable combinatorial challenge .",
    "algorithm 2 has limited scalability , which is dominated by the number and dimension of the positive definite constraints in sdp  .",
    "these , in turn , depend on the number of puzzle pieces and edge colors respectively .",
    "current leading sdp optimization engines employ second order interior - point algorithms which limit the applicability of this approach to larger problems .",
    "in this section we describe extensions of our framework to ( i ) higher - dimensional puzzles , ( ii ) general polygonal pieces and ( iii ) puzzles in which pieces can be rotated to one of a finite set of discrete orientations .      thus far we restricted our attention to 2-dimensional puzzles .",
    "we can extend our framework to dimensions @xmath105 as follows .",
    "consider coordinates @xmath106 and real valued functions @xmath107 .",
    "proposition  [ proposition : basic_condition ] continues to hold , implying as in the 2-dimensional case that if @xmath15 is a solution of the puzzle then @xmath108 for every @xmath23 and every function @xmath29 .",
    "the polynomial representation proposed in section  [ proposition : equivalent_representation ] takes exactly the same form , now by taking @xmath109 where @xmath42 is a @xmath110-tuple determining the degree of the resulting multivariate polynomial .    the rest of the derivations introduced in the paper follow in the exact same manner with the exception of proposition  [ proposition : equivalent_representation ] , whose proof is restricted to the 2-dimensional case ( as it relies on identifying @xmath111 with @xmath112 . ) .",
    "we conjecture that a similar result holds in arbitrary dimension as well .",
    "so far we have assumed puzzle pieces to be _ equilateral _ polygons .",
    "this assumption can be relaxed to the case of general polygons , with arbitrary edge length , by introducing path integrals over the boundary of pieces .",
    "when puzzle pieces are not equilateral , proposition  [ proposition : basic_condition ] may no longer hold since for example puzzle edges are no longer restricted to pair as a whole with a single other edge .",
    "that is , in the solution to the puzzle one edge may be paired with multiple edges or even parts of edges .",
    "nevertheless , an analogous proposition holds provided that is replaced with @xmath113 where @xmath114 is the path corresponding to the @xmath9th edge of @xmath2th piece .",
    "the derivations of sections  [ section : probem_statement ] and  [ section : alg_representation ] follow by making the appropriate adaptations .",
    "note that the tangram examples shown in figures  [ fig : example_tangram_a ] and  [ fig : example_tangram_b ] involve non equilateral polygons .",
    "indeed the algebraic representation which we used to solve them was computed by calculating the path integrals of  .",
    "often one wishes to solve a puzzle for which the orientation of the pieces is also unknown .",
    "we now show how the proposed framework can be extended to address this case , under the assumption that finitely many orientations are admissible .    for simplicity , we focus on the 2-dimensional case .",
    "let @xmath115 denote the unknown orientation of the @xmath2th piece .",
    "suppose that each orientation @xmath115 belongs to a finite cyclic group of @xmath116 rotations , namely @xmath117 .",
    "this is a reasonable assumption for many puzzles ( _ e.g. _ , @xmath118 rotations are sufficient for square puzzles , @xmath119 rotations for hexagonal puzzles , etc ) .",
    "denote by @xmath120 the rotation matrix @xmath121 next , we prove a claim that allows to establish an algebraic representation in the presence of unknown orientations .",
    "the intuitive interpretation is that we duplicate the entire puzzle ( frame and pieces ) @xmath116 times , rotated in each of the orientations @xmath122 .",
    "then , all @xmath116 puzzles are simultaneously solved as a single augmented translation only puzzle , with the location @xmath123 of the @xmath124-rotated @xmath2th piece linearly constrained by @xmath125 .",
    "a solution of this augmented puzzle , under the assumption that pieces may only translate , implies a solution of the original puzzle ( with unknown orientations ) .",
    "namely , a claim analogous to proposition  [ proposition : equivalent_representation ] holds , by summing over @xmath116 rotated copies of the puzzle :    suppose that a given puzzle is solved by placing the pieces at the locations @xmath126 rotated by @xmath127 .",
    "then , @xmath128 for every @xmath23 and every function @xmath29 , with @xmath129 .",
    "[ proposition : basic_condition_rotations ]    note that equation  [ eqn : eq_basic_condition_wrotation ] yields a representation of the puzzle which is invariant to rotations of the pieces .",
    "the solution will consist of @xmath116 copies of the puzzle .",
    "each piece is associated with a possibly different rotation angle according to the copy of the puzzle to which it is translated as illustrated in figure  [ fig : example_rotations ] .",
    "proposition  [ proposition : equivalent_representation ] implies that if the puzzle is solved by placing the pieces at the locations @xmath126 rotated by @xmath127 then for every @xmath23 and every function @xmath29 we have @xmath130 set @xmath129 to yield @xmath131 next , sum over all admissible rotations @xmath132 this equation can be understood as the summation over @xmath116 rotated copies of the puzzle ( as illustrated in figure  [ fig : example_rotations ] ) .",
    "the proposition follows by noticing that since @xmath117 , all terms @xmath115 may be omitted .",
    "proposition  [ proposition : basic_condition_rotations ] provides a construction which enables us to apply the algorithms developed in sections  [ section : alg_representation ] and  [ section : solving ] to solve puzzles with an unknown discrete set of orientations . in figure",
    "[ fig : example_rotations ] we show an example where we use this construction to solve a puzzle where pieces can be rotated into one of four different orientations .    0.3         0.69",
    "in this paper , we propose a novel representation for apictorial edge - matching puzzles .",
    "we explain how to generate systems of polynomial equations which are satisfied by puzzle solutions .",
    "we further show how to construct systems which are _ complete _ representations for 2-dimensional translation only puzzles .",
    "we prove that for these systems the converse also holds , _",
    "i.e. _ , any solution of the system is a solution of the puzzle .    using this representation ,",
    "we devise two algorithms for approximating solutions of edge - matching puzzles .",
    "both algorithms rely on solving a sequence of _ continuous _ and _ global _ convex relaxations . an iterative algorithm based on linear programming relaxation",
    "is proposed for the case where we know in advance that pieces may only be placed in a finite set of predetermined locations . for the more general setting ,",
    "we propose an iterative algorithm based on semidefinite programming relaxation .",
    "finally , we extend our computational framework and algorithms to various interesting variants of edge - matching puzzles including higher - dimensional puzzles , puzzles in which the pieces have irregular shapes and puzzles in which pieces can be rotated to one of a finite set of discrete orientations .",
    "[ [ acknowledgements ] ] acknowledgements + + + + + + + + + + + + + + + +    research was supported in part by the israel science foundation grants numbers 764/10 and 1265/14 and by the minerva foundation .",
    "the vision group at the weizmann institute is supported in part by the moross laboratory for vision research and robotics .",
    "we prove the proposition in three main steps : we ( i ) consider each edge type @xmath23 separately and construct a polynomial system @xmath133 that determines all admissible edge pairings ; ( ii ) add constraints accounting for the geometry of puzzle pieces , thus achieving a polynomial system @xmath134 which exactly determines the puzzle solutions ; and ( iii ) show that @xmath135 , the polynomial representation of proposition  [ proposition : equivalent_representation ] , is equivalent to @xmath134 , and is therefore a complete representation of the puzzle .    to prove the proposition we shall use complex numbers to represent 2-dimensional coordinates , that is , we consider piece locations @xmath136 .",
    "this will both simplify notations and facilitate our derivations .",
    "we begin by proving a simple lemma .",
    "fix @xmath137 and consider the polynomial system @xmath138 in the variables @xmath139 .",
    "[ lemma : bezout ] for @xmath140 , the polynomial system has exactly @xmath141 solutions : @xmath142 for all permutations @xmath143 of @xmath144 .",
    "denote by @xmath145 the set of solutions of . by construction , @xmath146 for any permutation @xmath143 , therefore , @xmath147 .    on the other hand ,",
    "if we assume that @xmath148 then bzout s theorem @xcite asserts that @xmath149 this bound clearly holds for @xmath150 , thus concluding the proof .",
    "we shall refer to a system of the form which satisfies the conditions of lemma  [ lemma : bezout ] as a _ bipartite system _",
    ", since it encodes all possible perfect matchings in the complete bipartite graph @xmath151 whose vertices are the @xmath93 s and @xmath152 s , see figure  [ fig : bipartite_match ] .        consider the global coordinate @xmath153 of every edge element _ independently _ , correspondingly , consider the exponential coordinates @xmath154    we first treat each edge type @xmath23 separately .",
    "let @xmath155 be the set of indices of @xmath23-edges , and @xmath156 be the set of indices of their complimentary @xmath24-edges .",
    "consider the set of polynomial equations @xmath157 of degrees @xmath158 .",
    "the sets @xmath159 and @xmath160 are disjoint and @xmath161 , otherwise the puzzle is unsolvable . as such",
    ", we may consider the rhs of fixed and employ lemma  [ lemma : bezout ] .",
    "namely , for sufficiently many polynomials , specifically , @xmath162 the polynomial system is a bipartite system , hence solutions of are exactly the valid pairings of edges in @xmath159 and @xmath160 .",
    "next , we take the union of all such systems , over all types of edges , with @xmath46 chosen according to : @xmath163 this is a polynomial system of equations , in variables @xmath164 , in particular _ every edge _ of the puzzle is constrained to satisfy the bipartite relation of the system it belongs to . that is , all edge elements of the puzzle are paired with appropriate edges .    however , employing independent coordinates for edge elements @xmath164 is insufficient . since the internal geometry of a puzzle piece is not taken into account , a solution of @xmath133 may imply an invalid puzzle assignment ( _ e.g. _ , two edge elements of the same piece can pair ) .",
    "this , however , may be easily resolved by relating the coordinates of an edge to the piece it belongs to , namely , by adding the constraints @xmath165 for all pieces .",
    "therefore , generating the augmented system @xmath166 the solutions of @xmath134 must therefore satisfy both the bipartite relations and the internal geometry of each piece , that is , a solution of @xmath134 is a solution of the puzzle .",
    "lastly , we directly employ these linear constraints and substitute @xmath165 into to obtain the polynomial system @xmath167 using the notation @xmath168 of section  [ section : poly_representation ] , this can be equivalently written as @xmath169 again , taking the union over all types of edges yield the polynomial system @xmath170 with @xmath46 s chosen as before .    notice that by construction the polynomial systems @xmath135 and @xmath134 are equivalent .",
    "therefore , it is guaranteed that a solution of @xmath135 corresponds to a valid solution of the puzzle .",
    "the presentation in section  [ section : solving ] was simplified for notational purposes by considering 1-dimensional puzzles ( _ i.e. _ , coordinates over @xmath54 ) .",
    "we now provide the technical details required for adapting these results to the case of 2-dimensional puzzles .",
    "similar modifications can be applied to address puzzles of arbitrary dimension , thereby completing the discussion of section  [ sect : extensions_highdim ] regarding puzzles in higher dimensions .    in section  [ section : reformulation_vandermonde ]",
    "the requirement that @xmath58 is a vandermonde matrix needs to be replaced with a multivariate analogue . recall that in the 2-dimensional case the variable associated with the @xmath2th piece is a 2-vector @xmath171^{t}$ ] .",
    "correspondingly , @xmath58 in the optimization problem should be of the form @xmath172 that is , a matrix whose @xmath2th row entries are all the monomials in @xmath55 of total degree up to @xmath50 .    similarly , in section  [ section : reformulation_rank_one ] the requirement that each matrix @xmath90 is a hankel matrix is replaced by constraining @xmath90 to be of the form corresponding to the outer product of all univariate monomials in the entries of @xmath55 of degree up to @xmath50 , namely , each @xmath90 should be of the form @xmath173 1 \\cr\\- t_{ix } \\cr \\vdots \\cr t_{ix}^k \\cr\\-       t_{iy } \\cr \\vdots \\cr t_{iy}^k \\cr \\end{pmat } \\begin{pmat } [ { } ] 1 \\cr\\- t_{ix } \\cr \\vdots \\cr t_{ix}^k \\cr\\-       t_{iy } \\cr \\vdots \\cr t_{iy}^k \\cr",
    "\\end{pmat}^t = \\begin{pmat}[{| .. | } ] 1 & t_{ix } & \\cdots & t_{ix}^k &      t_{iy } & \\cdots & t_{iy}^k \\cr\\- t_{ix } & t_{ix}^2 & & t_{ix}^{k+1 } & t_{ix}t_{iy } & \\cdots & t_{ix}t_{iy}^k \\cr \\vdots &   &   \\iddots & & \\vdots &   &   \\vdots \\cr t_{ix}^{k } & t_{ix}^{k+1 } & \\cdots   & t_{ix}^{2k } & t_{ix}^kt_{iy } & \\cdots & t_{ix}^kt_{iy}^k \\cr\\- t_{iy } & t_{ix}t_{iy } & & t_{ix}^kt_{iy } & t_{iy}^2 & \\cdots & t_{iy}^{k+1 } \\cr \\vdots &   &   \\iddots & & \\vdots &   &   \\vdots \\cr t_{iy}^{k } & t_{ix}t_{iy}^k & \\cdots   & t_{ix}^kt_{iy}^k & t_{iy}^{k+1 } & \\cdots & t_{iy}^{2k } \\cr \\end{pmat}. \\label{eqn : eq_hankel_matrix_2d_ts}\\ ] ] note that the main diagonal blocks of @xmath90 are now hankel matrices , however , the entire matrix @xmath90 is no longer hankel ."
  ],
  "abstract_text": [
    "<S> we consider apictorial edge - matching puzzles , in which the goal is to arrange a collection of puzzle pieces with colored edges so that the colors match along the edges of adjacent pieces . </S>",
    "<S> we devise an algebraic representation for this problem and provide conditions under which it exactly characterizes a puzzle . using the new representation , we recast the combinatorial , discrete problem of solving puzzles as a global , polynomial system of equations with continuous variables . </S>",
    "<S> we further propose new algorithms for generating approximate solutions to the continuous problem by solving a sequence of convex relaxations .    </S>",
    "<S> edge - matching puzzles , convex optimization , relaxation , polynomial systems </S>"
  ]
}
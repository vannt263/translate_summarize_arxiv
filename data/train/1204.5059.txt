{
  "article_text": [
    "the problem of computing a function from distributed information arises in many different contexts ranging from auctions and financial trading to sensor networks . in order to compute the desired target function , communication between the distributed users",
    "is required .",
    "if this communication takes place over a shared medium , such as in a wireless setting , the channel introduces interactions between the transmitted signals .",
    "this suggests the possibility to harness these signal interactions to facilitate the task of computing the desired target function .",
    "a fundamental question is therefore whether by jointly designing encoders and decoders for communication and computation , we can improve the efficiency of distributed computation .      in this paper",
    ", we explore this question by considering computation of a function over a two - user multiple - access channel ( mac ) . in order to focus on the impact of the structural mismatch between the target and channel functions on the efficiency of computation , we ignore channel noise and consider only _ deterministic _ macs here .",
    "more formally , the setting consists of two transmitters observing a ( random ) variable @xmath0 and @xmath1 , respectively , and a receiver aiming to compute the function @xmath2 of these variables .",
    "the two transmitters are connected to the destination through a deterministic mac with inputs @xmath3 and output @xmath4 , where @xmath5 describes the actions of the channel .",
    "a straightforward achievable scheme for this problem is to separate the tasks of communication and computation : the transmitters communicate the values of @xmath6 and @xmath7 to the destination , which then uses these values to compute the desired target function @xmath8 .",
    "this requires the receiver to decode @xmath9 message bits .",
    "however , the mac itself also computes a function @xmath10 of the two inputs @xmath11 , creating the opportunity of taking advantage of the structure of @xmath5 to calculate @xmath12 .",
    "this is trivially possible when @xmath5 and @xmath12 are _ matched _",
    ", i.e. , compute the same function on their inputs . in such cases , performing the tasks of communication and computation jointly results in significantly fewer bits to be communicated . indeed , in the matched case only the @xmath13 bits describing the function value are recovered at the receiver .",
    "this could be considerably less than the @xmath9 bits resulting from the separation approach .",
    "naturally , in most cases the channel @xmath5 and the target function @xmath12 are _ mismatched_. the question is thus whether we can still obtain performance gains over separation in this mismatched situation . in other words , we ask if in general the natural computation done by the channel can be harnessed to help with the computation of the desired target function .",
    "we consider two cases : i ) _ one - shot communication _",
    ", where the mac is used only once , but the channel input alphabet @xmath14 and output alphabet @xmath15 are allowed to vary as a function of the domain @xmath16 of the target function . in this case ,",
    "performance is measured in terms of the scaling needed for the channel alphabets with respect to the computation alphabets , i.e. , how @xmath17 grow with @xmath18 .",
    "this is closer to the formulation in the computer science literature .",
    "ii ) _ multi - shot communication _ , where the channel alphabets @xmath19 are of fixed size , but the channel can be used several times . in this case , performance is measured in terms of computation rate , i.e. , how many channel uses are needed to compute the target function .",
    "this is closer to the formulation considered in information theory .    as the main result of this paper",
    ", we show that separation between computation and communication is essentially optimal for most with given domain @xmath16 and range @xmath20 , and all channel functions @xmath21 with given input alphabet @xmath14 and output alphabet @xmath15 , separation is optimal except for at most an exponentially small ( in domain size @xmath18 ) fraction of pairs . ]",
    "pairs @xmath22 of target and channel functions .",
    "in other words , the structural mismatch between the functions @xmath12 and @xmath5 is in general too strong for joint computation and communication designs to yield any performance gains .",
    "we illustrate this with an example for one - shot communication .",
    "assume that the variables @xmath23 at the transmitters take on a large range of values , say @xmath24 , and the receiver is only interested in knowing if @xmath25 , i.e. , in a binary target function .",
    "then for most macs and one - shot communication , a consequence , it follows from the proofs that for a given domain @xmath16 the statements hold for all but an exponentially small ( in @xmath18 ) fraction of channel functions . ] of theorems  [ thm : identityoneuse ] and  [ thm : balanced ] in section [",
    "sec : main ] ( illustrated in example  [ eg : greater ] ) is that the transmitters need to convey the _",
    "entire _ values of @xmath23 to the destination , which then simply compares them .",
    "thus , even though the destination is interested in only a _ single _",
    "bit about @xmath26 , it is still necessary to transmit @xmath27 bits over the channel .",
    "more generally , theorems [ thm : identityoneuse ] and [ thm : balanced ] in section  [ sec : main ] together demonstrate that for most target functions separation of communication and computation is asymptotically optimal for most macs .",
    "example  [ eg : equality ] illustrates that only for special functions like an equality check ( i.e. , checking whether @xmath28 ) can we significantly improve upon the simple separation scheme . intuitively , this is because the structural mismatch between most target and channel functions is too large to allow for any possibility of direct computation of the target function value without resorting to recovering the user messages first .",
    "the technical ideas that enable these observations are based on a connection with results in extremal graph theory such as existence of complete subgraphs and matchings of a given size in a bipartite graph .",
    "these connections might be of independent interest .    similarly , for multi - shot communication , where we repeatedly use a fixed channel , theorem  [ thm : converse_n ] in section  [ sec :",
    "main ] shows that for most functions , the computation rate is necessarily as small as that for the identity target function describing the entire variables @xmath23 at the destination . in other words ,",
    "separation of communication and computation is again optimal for most target and channel functions . to prove this result",
    ", the usual approach using cut - set bound arguments is not tight enough .",
    "indeed , example  [ eg : n ] shows that the ratio between the upper bound on the computation rate obtained from the cut - set bound and the correct scaling derived in theorem  [ thm : converse_n ] can be unbounded .",
    "rather , the structures of the target and channel functions have to be analyzed jointly .",
    "these results show that , in general , there is little or no benefit in joint designs : computation - communication separation is optimal for most cases .",
    "we thus advocate in this paper that separation of computation and communication for multiple - access channels is not just an attractive option from an implementation point of view , but , except for special cases , actually entails little loss in efficiency .",
    "the problem of distributed function computation has a rich history and has been studied in many different contexts . in computer science , it has been studied under the branch of communication complexity , for example see @xcite and references therein .",
    "early seminal work by yao @xcite considered interactive communication between two parties . among several other important results ,",
    "the paper showed that the number of exchanged bits required to compute most target functions is as large as for the identity function . in the context of information theory ,",
    "distributed function computation has been studied as an extension of distributed source coding in @xcite .",
    "for example , krner and marton @xcite showed that for the computation of the finite - field sum of correlated sources linear codes can outperform random codes .",
    "this was extended to large networks represented as graphs in @xcite and references therein .",
    "randomized gossip algorithms @xcite have been proposed as practical schemes for information dissemination in large unreliable networks and were studied in the context of distributed computation in @xcite among several others .    in most of these works , communication channels are represented as orthogonal point - to - point links .",
    "when the channel itself introduces signal interaction , as is the case for a mac , there can be a benefit from jointly handling the communication and computation tasks as illustrated in @xcite .",
    "function computation over macs has been studied in @xcite and references therein .",
    "there is some work touching on the aspect of structural mismatch between the target and the channel functions . in @xcite ,",
    "an example was given in which the mismatch between a linear target function with integer coefficients and a linear channel function with real coefficients can significantly reduce efficiency . in @xcite ,",
    "it was conjectured that , for computation of finite - field addition over a real - addition channel , there could be a gap between the cut - set bound and the computation rate . in @xcite , mismatched computation when the network performs linear finite - field operations was studied . to the best of our knowledge ,",
    "a systematic study of channel and computation mismatch is initiated in this work .",
    "the paper is organized as follows . in section  [ sec : problem ] , we formally introduce the questions studied in this paper .",
    "we present the main results along with illustrative examples in section  [ sec : main ] .",
    "most of the proofs are given in section  [ sec : proofs ] .",
    "throughout this paper , we use sans - serif font for random variables , e.g. , @xmath29 .",
    "we use bold font lower and upper case to denote vectors and matrices , e.g. , @xmath30 and @xmath31 .",
    "all sets are typeset in calligraphic font , e.g. , @xmath14 .",
    "we denote by @xmath32 and @xmath33 the logarithms to the base @xmath34 and @xmath35 , respectively .    a discrete , memoryless , deterministic two - user mac consists of two _ input alphabets _ @xmath36 and @xmath37 , an _ output alphabet _ @xmath15 , and a deterministic _ channel function _ @xmath38 .",
    "given channel inputs @xmath39 , the output of the mac is @xmath40 each transmitter @xmath41 has access to an independent and uniformly distributed _ message _ @xmath42 .",
    "the objective of the receiver is to compute a _",
    "target function _",
    "@xmath43 of the user messages , see fig .",
    "[ fig : mac ] .    formally , each transmitter @xmath44",
    "consists of an _ encoder _ @xmath45 mapping the message @xmath46 into the channel input @xmath47 the receiver consists of a _ decoder _ @xmath48 mapping the channel output @xmath49 into an _ estimate _ @xmath50 of the target function @xmath8 .",
    "the _ probability of error _ is @xmath51    we point out that this differs from the ordinary communication setting , in which the decoder aims to recover both messages @xmath26 . instead , in the setting here , the decoder is not interested in @xmath26 , but only in the value @xmath8 of the target function .    in the following",
    ", it will often be convenient to represent the target function @xmath12 and the channel @xmath5 by their corresponding matrices @xmath52 and @xmath53 , respectively .",
    "in other words , @xmath54 for @xmath55 , denote by @xmath56 the @xmath57-fold use of the same channel matrix @xmath31 .",
    "in other words , the matrix @xmath56 describes the actions of the ( memoryless ) channel @xmath31 on the sequence @xmath58,x_2[1 ] ) ,       ( x_1[2],x_2[2 ] ) ,       \\ldots ,      ( x_1[n],x_2[n ] )      \\bigr)\\ ] ] of length @xmath57 of channel inputs .",
    "a pair @xmath59 of target and channel functions is _",
    "@xmath60-feasible _ , if there exist encoders @xmath61 and a decoder @xmath62 computing the target function @xmath63 over @xmath31 with probability of error at most @xmath60 .",
    "we will often consider pairs @xmath64 , in which case the definition of @xmath60-feasibility allows for coding over @xmath57 uses of the channel @xmath31 .    without loss of generality ,",
    "we assume that the target function @xmath63 has no two identical rows or two identical columns , since we could otherwise simply eliminate one of them . for ease of exposition , we will focus on the case",
    "@xmath65 to simplify notation , we assume without loss of generality that @xmath66 finally , to avoid trivial cases , we assume that all cardinalities are strictly bigger than one , and that @xmath67 .",
    "we denote by @xmath68 the collection of all target functions @xmath69 .",
    "similarly , we denote by @xmath70 the collection of all channels @xmath71 .",
    "the next example introduces several target functions @xmath63 and channels @xmath31 that will be used to illustrate results in the remainder of the paper .",
    "[ eg : fnmac ] we start by introducing four target functions @xmath12 .    *",
    "let @xmath72 .",
    "the _ identity _",
    "target function is @xmath73 for all @xmath74 . since we will refer to the identity target function repeatedly",
    ", we will denote it by the symbol @xmath75 .",
    "* let @xmath76 .",
    "the _ equality _",
    "target function is @xmath77 for all @xmath78 .",
    "* let @xmath79 .",
    "greater - than _ target function is @xmath80 for all @xmath78 .",
    "* a _ random _ target function corresponds to the matrix @xmath81 being a random variable , with each entry chosen independently and uniformly over @xmath20 .",
    "the matrix @xmath81 is generated before communication begins and is known at both the transmitters and at the receiver .",
    "we now introduce three channels @xmath5 .",
    "* let @xmath82 and @xmath83 . the _ binary adder _",
    "mac is given by @xmath84 for all @xmath85 , and where @xmath86 denotes ordinary addition .",
    "* let @xmath82 and @xmath87 .",
    "boolean @xmath88 _ or _ boolean or _",
    "mac is @xmath89 for all @xmath85 . *",
    "a _ random _ channel corresponds to the matrix @xmath90 being a random variable , with each entry chosen independently and uniformly over @xmath15 .",
    "the matrix @xmath90 is generated before communication begins and is known at both the transmitters and at the receiver .",
    "the emphasis in this paper is on the asymptotic behavior for large function domains , i.e. , as @xmath91 .",
    "we allow the other cardinalities @xmath92 , @xmath93 and @xmath94 to scale as a function of @xmath95 .",
    "we use the notation @xmath96 for the relation @xmath97 and analogously for @xmath98 .",
    "similarly , we use @xmath99 for the relation @xmath100 and analogously for @xmath101 . finally , @xmath102 is short hand for @xmath103 for example , @xmath104 is equivalent is @xmath105 as @xmath91 stands for @xmath106 . ] to @xmath107 as @xmath91 . with slight abuse of notation , we will write @xmath108 to mean that @xmath109 for _ some _ finite @xmath110 .    throughout this paper , we are interested in efficient computation of the target function @xmath12 over the channel @xmath5 . in theorems  [ thm : identityoneuse ] and",
    "[ thm : balanced ] only a single use of the channel is permitted , and efficiency is expressed in terms of the required cardinalities @xmath92 and @xmath93 of the channel alphabets as a function of @xmath95 . in theorems [ thm : identitymultipleuse ] and [",
    "thm : converse_n ] , multiple uses of the channel are allowed , and efficiency is then naturally expressed in terms of the number of required channel uses @xmath111 as a function of @xmath95 .",
    "finally , all results are stated in terms of the fraction of channels ( in theorems [ thm : identityoneuse ] and [ thm : balanced ] ) or target functions ( in theorem [ thm : converse_n ] ) for which successful computation is possible .",
    "the proofs of all the theorems are based on probabilistic methods by using a uniform distribution over choices of channel @xmath5 or target functions @xmath12 .",
    "let @xmath112 be the identity target function introduced in example  [ eg : fnmac ] , and let @xmath31 be an arbitrary channel matrix . consider any other target function @xmath113 over the same domain @xmath114 , but with possibly different range @xmath20 .",
    "assume @xmath115 is @xmath60-feasible .",
    "then @xmath116 is also @xmath60-feasible , since we can first compute @xmath75 ( and hence @xmath117 and @xmath118 ) over the channel @xmath31 and then simply apply the function @xmath63 to the recovered messages @xmath117 and @xmath118 . this architecture , separating the computation task from the communication task , is illustrated in fig .",
    "[ fig : separation ] .    as a concrete example , let @xmath63 be the greater - than target function introduced in example  [ eg : fnmac ] . the range @xmath119 of @xmath63 has cardinality two . on the other hand ,",
    "the identity function @xmath75 has range @xmath114 of cardinality @xmath120 .",
    "in other words , for large @xmath95 , the identity target function is considerably more complicated than the greater - than target function . as a result",
    ", one might expect that the separation - based architecture in fig .",
    "[ fig : separation ] is highly suboptimal in terms of the computation efficiency as described in section [ sec : problem ] . as the main result of this paper ,",
    "we prove that this intuition is wrong in most cases . instead",
    ", we show that for most pairs @xmath116 of target function and mac , separation of computation and communication is close to optimal .",
    "we discuss the single channel - use case in section  [ sec : main_single ] , and the @xmath57 channel - uses case in section  [ sec : main_multiple ] .      in this section",
    ", we will focus on the case where the target function needs to be computed using just one use of the channel .",
    "the natural value of the upper bound on the probability of error is @xmath122 in this case . in other words",
    ", we will be interested in @xmath123-feasibility .",
    "we start by deriving conditions under which computation of the identity target function over a mac is feasible .",
    "equivalently , these conditions guarantee that _ any _ target function with same domain cardinality @xmath95 can be computed over a mac by separating communication and computation as discussed above .    [",
    "thm : identityoneuse ] let @xmath112 be the identity target function , and assume    [ eq : identity1 ] @xmath124    then , @xmath125    the proof of theorem  [ thm : identityoneuse ] is reported in section  [ sec : proofs_identity ] .",
    "recall that @xmath70 is the collection of all channels @xmath31 of dimension @xmath126 and range of cardinality @xmath127 .",
    "theorem  [ thm : identityoneuse ] ( together with the separation approach discussed earlier ) thus roughly implies that any target function with a domain of cardinality @xmath95 can be computed over most macs of input cardinality @xmath92 of order at least @xmath95 and output cardinality @xmath93 of order at least @xmath128 .",
    "the precise meaning of `` most '' is that the fraction of channels @xmath31 in @xmath70 for which the statement holds goes to one as @xmath91 .",
    "a look at the proof of the theorem shows that the convergence to this limit is , in fact , exponentially fast . in other words ,",
    "the fraction of channels for which the theorem fails to hold is exponentially small in the domain cardinality @xmath95 .",
    "since the achievable scheme is separation based , this conclusion holds regardless of the cardinality @xmath94 of the range of the target function .",
    "similarly , since it is clear that the channel input has to have at least cardinality @xmath92 of order @xmath95 for successful computation , we see that the condition on @xmath92 in theorem  [ thm : identityoneuse ] is not a significant restriction . what is significant , however , is the restriction that @xmath93 is at least of order @xmath128 .",
    "the next result shows that this restriction on @xmath93 is essentially also necessary .",
    "before we state the theorem , we need to introduce one more concept .",
    "consider a target function @xmath129 .",
    "for a set @xmath130 , consider @xmath131 for @xmath132 $ ] , the target function @xmath12 is said to be _",
    "@xmath133-balanced _ if there exist a partition @xmath134 of @xmath20 such that @xmath135 for all @xmath41 .",
    "most functions are @xmath133-balanced for any @xmath136 and @xmath94 as long as @xmath95 is large enough .",
    "indeed , choosing @xmath137 and @xmath138 shows that @xmath139 where we recall that @xmath68 denotes the collection of all target functions @xmath63 of dimension @xmath140 and range of cardinality @xmath141 .",
    "in fact , the convergence in is again exponentially fast in @xmath95 .",
    "moreover , many functions of specific interest are balanced .",
    "[ eg : balanced ] consider the target functions introduced in example  [ eg : fnmac ] .    *",
    "the identity and the greater - than target functions are @xmath133-balanced for any constant @xmath142 and @xmath95 large enough . *",
    "the equality target function is _ not _",
    "@xmath133-balanced for any constant @xmath143 as @xmath91 . indeed , since @xmath144 in this case , the only choice ( up to labeling ) is to set @xmath145 and @xmath146",
    ". then @xmath147 and @xmath148 , which is not @xmath133-balanced for any constant @xmath143 as @xmath91 .",
    "we have the following converse result to theorem  [ thm : identityoneuse ] for balanced target functions .",
    "[ thm : balanced ] fix a constant @xmath149 $ ] independent of @xmath95 .",
    "assume @xmath150 and    [ eq : balanced0 ] @xmath151    let @xmath152 be any @xmath133-balanced target function .",
    "then @xmath153    the proof of theorem  [ thm : balanced ] is reported in section  [ sec : proofs_balanced ] .",
    "recall that the notation @xmath154 is used to indicate that @xmath92 grows at most polynomially in @xmath95an assumption that is quite mild .",
    "thus , theorem  [ thm : balanced ] roughly states that regardless of the value of @xmath94 , if the cardinality @xmath93 of the channel output is order - wise less than @xmath128 , then any balanced target function with a range of cardinality @xmath94 can not be computed over most macs . here the precise meaning of `` most '' is again that the fraction of channel matrices with at most @xmath93 channel outputs for which successful computation is possible converges to zero , and a look at the proof reveals again that this convergence is , in fact , exponentially fast in @xmath95 .",
    "comparing this to theorem  [ thm : identityoneuse ] , we see that the same scaling of @xmath93 allows computation of a target function using a separation based scheme ( i.e. , by first recovering the two messages @xmath155 and then applying the target function to compute the estimate @xmath156 ) .",
    "thus , for the computation of a given balanced function over most macs , separation of computation and communication is essentially optimal .",
    "moreover , since most functions are balanced by , the same also holds for most pairs @xmath116 of target and channel functions .",
    "[ eg : greater ] let @xmath63 be the greater - than target function of domain @xmath157 introduced in example  [ eg : fnmac ] .",
    "note that this target function has range of cardinality @xmath144 , i.e. , @xmath63 is binary .",
    "from example  [ eg : balanced ] , we know that @xmath63 is balanced for any constant @xmath158 and @xmath95 large enough",
    ". thus theorem  [ thm : balanced ] applies , showing that , for large @xmath95 and most macs @xmath31 , separation of computation and communication is essentially optimal .",
    "observe that the receiver is interested in only a _",
    "single _ bit of information about @xmath26 .",
    "nevertheless , the structure of the greater - than target function is complicated enough that , in order to recover this single bit , the decoder is essentially forced to learn @xmath26 itself . in other words , in order to compute the single desired bit , communication of @xmath159 message bits is essentially necessary .",
    "theorem  [ thm : balanced ] is restricted to balanced functions . even though only a vanishingly small fraction of target functions is not balanced , it is important to understand this restriction .",
    "we illustrate this through the following example .",
    "[ eg : equality ] assume @xmath144 and    [ eq : equality0 ] @xmath160    let @xmath161 be the equality target function introduced in example  [ eg : fnmac ] .",
    "then @xmath162    the proof of the above statement is reported in section  [ sec : proofs_equality ] .",
    "this result shows that the equality function can be computed over a large fraction of macs with output cardinality @xmath93 of order at least @xmath95 .",
    "this contrasts with output cardinality @xmath93 of order @xmath128 that is required for successful computation of balanced functions in theorem  [ thm : balanced ] .",
    "recall from example  [ eg : balanced ] that the equality target function is _ not _",
    "@xmath133-balanced for any @xmath143 and @xmath95 large enough .",
    "thus , does not contradict theorem  [ thm : balanced ] .",
    "it does , however , show that for unbalanced functions separation of communication and computation can be suboptimal .",
    "in this section , we allow multiple uses of the mac .",
    "our emphasis will again be on the asymptotic behavior for large function domains @xmath91 .",
    "however , in this section we keep the mac @xmath164 , and hence also the cardinalities of the channel domain @xmath14 and channel range @xmath15 , fixed .",
    "instead , we characterize the minimum number @xmath165 of channel uses required to compute the target function .",
    "we begin by stating a result for the identity target function introduced in example  [ eg : fnmac ] .",
    "equivalently , this result applies to _ any _ target function ( with same domain cardinality @xmath95 ) by using a scheme separating communication and computation .",
    "let @xmath166 denote the entropy of a random variable @xmath167 .",
    "[ thm : identitymultipleuse ] fix a constant @xmath168 independent of @xmath95 , and assume that @xmath169 and @xmath127 are constant . let @xmath112 be the identity target function , and let @xmath170 be any mac .",
    "consider any joint distribution of the form @xmath171 , where @xmath172 is specified by the channel function @xmath31 .",
    "then , for any @xmath111 satisfying    [ eq : identityconstraints ] @xmath173    @xmath174 is @xmath60-feasible for @xmath95 large enough .",
    "the result follows directly from the characterization of the achievable rate region for ordinary communication over the mac , see for example ( * ? ? ?",
    "* theorem  14.3.3 ) .",
    "using separation , theorem  [ thm : identitymultipleuse ] implies that , for large enough @xmath95 , any target function of domain cardinality @xmath95 can be reliably computed over @xmath111 uses of an mac @xmath31 as long as it satisfies the constraints in .",
    "the next result states that for most functions these restrictions on @xmath111 are essentially also necessary .",
    "[ thm : converse_n ] assume that as @xmath91 stands for @xmath175 . ] @xmath176 as @xmath91 , that @xmath177 , and that @xmath169 and @xmath127 are constant .",
    "let @xmath170 be any mac .",
    "then , for any @xmath111 satisfying @xmath178 we must have @xmath179 for some joint distribution of the form @xmath180 , where @xmath172 is specified by the channel function @xmath31 .",
    "the proof of theorem  [ thm : converse_n ] is presented in section  [ sec : proofs_n ] .",
    "recall that @xmath68 denotes the collection of all target functions @xmath63 of dimension @xmath140 and range of cardinality @xmath141 .",
    "together , theorems  [ thm : identitymultipleuse ] and [ thm : converse_n ] thus show that , for any deterministic mac and most target functions , the smallest number of channel uses @xmath181 that enables reliable computation is of the same order as that needed for the identity function .",
    "moreover , they show that for most such pairs , separation of communication and computation is essentially optimal even if we allow multiple uses of the channel and nonzero error probability . here",
    "the precise meaning of `` most '' is that the statement holds for all but a vanishing fraction of functions .",
    "moreover , the proof of the theorem shows again that this fraction is , in fact , exponentially small in @xmath95 .",
    "[ eg : n ] let @xmath31 be the binary adder mac introduced in example  [ eg : fnmac ] .",
    "define @xmath182 where the maximization is over all independent random variables @xmath183 taking values in the channel input alphabet @xmath14 .",
    "@xmath184 denotes the maximum entropy that can be induced at the channel output . for the binary adder mac @xmath31",
    ", it follows from in theorem  [ thm : identitymultipleuse ] that the identity function can be reliably computed over @xmath31 if the number of channel uses @xmath185 .",
    "on the other hand , theorem  [ thm : converse_n ] shows that for most functions @xmath63 of domain @xmath140 and range cardinality @xmath186 , the smallest number of channel uses @xmath181 required for reliable computation is of order @xmath187 .",
    "thus , near - optimal performance can be achieved by separating computation and communication .",
    "in other words , even though the receiver is only interested in @xmath188 function bits , it is essentially forced to learn the @xmath159 message bits as well .",
    "this example also illustrates that the usual way of proving converse results based on the cut - set bound is not tight for most @xmath116 pairs .",
    "for example , ( * ? ? ?",
    "* lemma  13 ) shows that for reliable computation we need to have @xmath189 where @xmath190 denotes entropy .",
    "since @xmath63 has range of cardinality @xmath94 , we have @xmath191 for @xmath192 and @xmath193 as considered here , the tightest bound that can in the _ best case _ be derived via the cut - set approach is thus @xmath194 however , we know that the correct scaling for @xmath181 is @xmath187 . hence , the cut - set bound is loose by an unbounded factor as @xmath91 .",
    "we now prove the main results .",
    "the proofs of theorems  [ thm : identityoneuse ] and [ thm : balanced ] are reported in sections  [ sec : proofs_identity ] and [ sec : proofs_balanced ] respectively .",
    "the proof of in example  [ eg : equality ] is presented in section  [ sec : proofs_equality ] .",
    "finally , the proof of theorem  [ thm : identitymultipleuse ] is covered in section  [ sec : proofs_n ] .",
    "we start by presenting some preliminary observations in section  [ sec : proofs_preliminaries ] .",
    "recall our assumption that no two rows or two columns of the target function @xmath63 are identical . as a result",
    ", @xmath63 can be computed over the channel @xmath31 with zero error , i.e. , @xmath116 is @xmath123-feasible , if and only if there exists a @xmath195 submatrix ( with ordered rows and columns ) @xmath196 of @xmath31 such that any two entries @xmath197 and @xmath198 with @xmath199 satisfy @xmath200 , see fig .  [",
    "fig : scheme ] .    on the other hand",
    ", this is not necessary if a probability of error @xmath168 can be tolerated .",
    "as an example , consider the equality function . for any positive @xmath60 , a trivial decoder that always outputs",
    "@xmath123 computes the equality function with probability of error @xmath201 .",
    "as @xmath91 , the probability of error is eventually less than @xmath60 .",
    "this motivates the following definition .",
    "given a target function @xmath202 , a function @xmath203 with @xmath204 is said to be a _",
    "@xmath60-approximation _ of @xmath12 if there exist two mappings @xmath205 and @xmath206 such that @xmath207 in words , the target function @xmath12 is equal to the approximation function @xmath208 for at least a @xmath209 fraction of all message pairs . as before , a @xmath60-approximation function @xmath210 can be represented by a @xmath211 matrix @xmath212 .",
    "we have the following straightforward relation .",
    "[ lemma : translation ] consider a target function @xmath63 and mac @xmath31 .",
    "if @xmath116 is @xmath60-feasible , then there exists a @xmath60-approximation @xmath212 of @xmath63 such that @xmath213 is @xmath123-feasible .",
    "let @xmath214 and @xmath62 be the encoders and the decoder achieving probability of error at most @xmath60 for @xmath116 .",
    "let @xmath215 be the range of @xmath216 , and set @xmath217 for all @xmath218 .",
    "then @xmath219 is a @xmath60-approximation of @xmath12 , and @xmath220 is @xmath123-feasible .",
    "we will make frequent use of the chernoff bound , which we recall here for future reference .",
    "let @xmath221 be independent random variables , and let @xmath222 by markov s inequality , @xmath223 assume furthermore that each @xmath224 takes value in @xmath225 , and set @xmath226 then , for any @xmath227 , @xmath228 see for example ( * ? ? ?",
    "* theorem  4.1 , theorem  4.2 ) .",
    "a scheme can compute the identity target function with zero error if and only if the channel output corresponding to any two distinct pairs of user messages is different . in",
    "what follows , we will show that such a scheme for computing the identity target function over _ any _ mac",
    "@xmath31 exists whenever the elements of @xmath31 take at least @xmath229 distinct values in @xmath15 .",
    "we then argue that , if the assumptions on @xmath92 and @xmath93 in are satisfied , a _ random _",
    "mac @xmath90 ( as introduced in example  [ eg : fnmac ] ) of dimension @xmath230 has at least @xmath229 distinct entries with high probability as @xmath91 .",
    "together , this will prove the theorem .",
    "note that implies that @xmath231 and @xmath232 for @xmath95 large enough .",
    "we will prove the result under these two weaker assumptions on @xmath92 and @xmath93 . since we can always choose to ignore part of the channel inputs",
    ", we may assume without loss of generality that @xmath233 . in order to simplify notation",
    ", we suppress the dependence of @xmath234 and @xmath235 on @xmath95 in the remainder of this and all other proofs .",
    "given an arbitrary mac @xmath31 , create a bipartite graph @xmath236 as follows ( see fig .",
    "[ fig : identity ] ) .",
    "let the vertices of @xmath236 on each of the two sides of the bipartite graph be @xmath14 .",
    "now , consider a value @xmath237 appearing in @xmath31 .",
    "this @xmath238 corresponds to a collection of vertex pairs @xmath239 such that @xmath240 .",
    "pick exactly one arbitrary such vertex pair @xmath239 and add it as an edge to @xmath236 .",
    "repeat this procedure for all values of @xmath238 appearing in @xmath31 .",
    "thus , the total number of edges in the graph @xmath236 is equal to the number of distinct entries in the channel matrix @xmath31 .",
    "observe that any complete @xmath195 bipartite subgraph @xmath241 of the bipartite graph @xmath236 corresponds to a computation scheme for the identity function . indeed , by construction each edge in @xmath236 corresponds to a different channel output .",
    "hence by encoding @xmath242 and @xmath243 as the left and right vertices , respectively , of the subgraph @xmath241 , we can uniquely recover @xmath244 from the channel output @xmath245 .",
    "this problem of finding a bipartite subgraph @xmath241 in the bipartite graph @xmath236 is closely related to the zarankiewicz problem , see for example ( * ? ? ?",
    "* chapter vi ) .",
    "formally , the aim in the zarankiewicz problem is to characterize @xmath246 , the smallest integer @xmath247 such that every bipartite graph with @xmath57 vertices on each side and @xmath247 edges contains a subgraph isomorphic to @xmath248 . the kvri - ss - turn theorem ,",
    "see for example ( * ? ? ?",
    "* theorem  vi.2.2 ) , states that @xmath249    using , we now argue that the bipartite graph @xmath236 defined above contains a complete @xmath195 bipartite subgraph @xmath241 if the number of edges in @xmath236 is at least @xmath250 . by definition",
    ", @xmath236 contains @xmath241 if there are at least @xmath251 edges in @xmath236 . by  , @xmath252 using the inequality @xmath253 for @xmath254 $ ] and that @xmath255 by assumption , we have @xmath256 combining this with shows that @xmath257    thus we have shown that the identity target function can be computed over _ any _ channel @xmath31 with @xmath255 if it has at least @xmath258 distinct entries .",
    "consider now a _",
    "channel @xmath90 .",
    "the next lemma shows that @xmath90 satisfies this condition with high probability as @xmath259 .",
    "[ lemma : distinctentries ] let @xmath260 be the number of distinct entries in the random channel matrix @xmath90 , and assume @xmath261 .",
    "then @xmath262 for @xmath169 large enough .",
    "the proof of lemma  [ lemma : distinctentries ] is reported in appendix  [ sec : appendix_distinct ] .",
    "lemma  [ lemma : distinctentries ] shows that with probability at least @xmath263 the identity target function can be computed with zero error over the random mac @xmath90 . since @xmath264 so that @xmath259 as @xmath91 , the statement of the theorem follows .",
    "let @xmath265 and @xmath266 be the two sets in the definition of a balanced function . for a mac @xmath31 , a @xmath195 ordered submatrix @xmath196 corresponds to a valid code for computing @xmath63 with zero error only if there are no common values between the entries in @xmath196 corresponding to @xmath267 and @xmath268 .",
    "consider then a random @xmath90 ( as introduced in example  [ eg : fnmac ] ) and one such ordered submatrix @xmath269 .",
    "observe that the selection of rows and columns of @xmath90 in @xmath269 is fixed  the matrix @xmath269 is random because its entries are derived from the random matrix @xmath90 .",
    "let @xmath270 denote the number of distinct values among the entries corresponding to @xmath267 in @xmath269 .",
    "we have the following bound on @xmath270 .",
    "[ lemma : distinctentries2 ] assume @xmath271 , and set @xmath272 then @xmath273    the proof of lemma  [ lemma : distinctentries2 ] is reported in appendix  [ sec : appendix_distinct2 ] .",
    "the submatrix @xmath269 corresponds to a valid code for computing the target function @xmath63 only if all the entries corresponding to @xmath268 take values from the @xmath274 channel outputs not present in the entries corresponding to @xmath267 .",
    "thus the probability of the submatrix @xmath269 being a valid code for computing the target function @xmath63 is at most @xmath275 where @xmath276 follows from lemma  [ lemma : distinctentries2 ] and @xmath277 , @xmath278 follows since @xmath63 is @xmath133-balanced , and @xmath279 follows from the definition of @xmath280 .",
    "the pair @xmath281 is @xmath123-feasible if and only if there exists some valid ordered submatrix @xmath269 with dimension @xmath282 of the @xmath283 channel matrix @xmath90 .",
    "there are at most @xmath284 ways to choose the rows and columns of this submatrix .",
    "hence , from the union bound and  , the probability that @xmath281 is @xmath123-feasible is at most @xmath285 now , implies that @xmath286 and @xmath287 for some finite positive @xmath247 and @xmath95 large enough .",
    "hence , @xmath288 as needed to be shown",
    ".      a scheme computes the equality target function @xmath289 with zero error if and only if the channel outputs corresponding to the set of message pairs @xmath290 are all distinct from those corresponding to the message pairs @xmath291 . in what follows",
    ", we will first show that this is guaranteed if the channel matrix @xmath31 satisfies certain properties .",
    "we then argue that a random channel matrix @xmath90 ( as introduced in example  [ eg : fnmac ] ) satisfies these properties with high probability .    from",
    ", we can assume that @xmath292 and @xmath293 for @xmath95 large enough .",
    "we will prove the result under these two weaker conditions .",
    "since the encoders can always choose to ignore some of the channel inputs , we can assume without loss of generality that @xmath294 .",
    "throughout this proof , we denote by @xmath295 the largest integer such that @xmath296 .",
    "note that this implies @xmath297    given an arbitrary mac @xmath31 , create a bipartite graph @xmath236 as follows .",
    "let the vertices on the two sides of the bipartite graph correspond to the @xmath169 different row and column indices of the channel matrix @xmath31 .",
    "fix an arbitrary subset @xmath298 of cardinality @xmath295 of @xmath15 .",
    "place an edge in the bipartite graph @xmath236 between a node @xmath299 on the left and a node @xmath300 on the right if @xmath301 , see fig .",
    "[ fig : equality ] .",
    "an _ induced matching _",
    "@xmath302 in a bipartite graph @xmath236 is a subset of edges such that i ) no pair of edges in @xmath302 share a common endpoint and ii ) no pair of edges in @xmath302 are joined by an edge in @xmath236 .",
    "note that an induced matching @xmath302 of size @xmath95 in @xmath236 corresponds to a zero - error computation scheme for the equality function @xmath289 .",
    "this follows from the observation that the induced matching provides a subset of channel inputs @xmath303 and @xmath304 such that the only pairs of channel inputs for which the channel output is in @xmath298 are given by @xmath305 .",
    "the decoder thus simply maps all channel outputs in @xmath298 to @xmath306 and all other channel outputs to @xmath123 .",
    "a _ strong edge - coloring _ of a graph @xmath236 is an edge - coloring in which every color class is an induced matching , i.e. , any two vertices belonging to distinct edges with the same color are not adjacent .",
    "the strong chromatic index @xmath307 is the minimum number of colors in a strong edge - coloring of @xmath236 .",
    "a simple argument in @xcite shows that for any graph @xmath236 , @xmath308 where @xmath309 is the maximum degree of @xmath236 .",
    "thus , a graph @xmath236 contains an induced matching of size at least @xmath310 where @xmath311 denotes the number of edges in @xmath236 .",
    "consider again the bipartite graph @xmath236 constructed from @xmath31 for some fixed subset @xmath298 . from and the above discussion , we see that @xmath312 is @xmath123-feasible if @xmath313 we now show that this holds with high probability for a random channel matrix @xmath90 . since we consider a random @xmath90 , the graph @xmath314 is itself also random .",
    "we start by deriving a lower bound on the number of edges @xmath315 in @xmath314 .",
    "the event that a particular pair of vertices has an edge in @xmath314 is equivalent to the corresponding entry in the channel matrix @xmath90 being an element of @xmath298 , which happens with probability @xmath316 .",
    "since the @xmath317 entries of @xmath90 are independent , this implies that the number of edges @xmath315 is given by a binomial random variable with mean @xmath318 .",
    "thus , using the chernoff bound  , that @xmath319 by assumption , and that @xmath320 by  , @xmath321 which converges to zero as @xmath91 .",
    "we continue by deriving an upper bound on the maximum degree @xmath322 of @xmath314 .",
    "let @xmath323 and @xmath324 denote the maximum degree among the left - side and right - side vertices , respectively .",
    "note that @xmath323 and @xmath324 are identically distributed , as the maximum value among @xmath169 independent binomial random variables with mean @xmath325 .",
    "let @xmath326 be one such binomial random variable . using the chernoff bound , @xmath327 by the union bound , and using that @xmath328 by assumption , that @xmath320 by  , and that @xmath329 , we have @xmath330 which converges to zero as @xmath91 . using @xmath296 by   and the union bound , @xmath331 which , by and , converges to one as @xmath91 .",
    "combined with , this shows that @xmath332 thus proving the claim .",
    "consider an arbitrary target function @xmath63 and an arbitrary channel function @xmath31 .",
    "recall the definition of a @xmath60-approximation function in  . from lemma  [ lemma :",
    "translation ] , @xmath64 is @xmath60-feasible only if there exists some @xmath60-approximation @xmath333 of @xmath63 such that @xmath334 and @xmath335 is @xmath123-feasible . from the construction in lemma  [ lemma :",
    "translation ] , we can assume without loss of generality that @xmath336 . furthermore , we can assume without loss of generality that no two rows and no two columns of @xmath337 are identical .",
    "hence , @xmath338 is @xmath123-feasible only if there exists a @xmath339 ordered submatrix @xmath196 of @xmath340 computing @xmath337 , as described in section  [ sec : proofs_preliminaries ] . in the following ,",
    "denote by @xmath341 the mapping corresponding to @xmath196 .",
    "consider now such a @xmath211 ordered submatrix @xmath196 of @xmath56 .",
    "for any @xmath342 , let @xmath343 denote the range of @xmath344 , with the arguments restricted to the subset @xmath345 .",
    "let @xmath346 and @xmath347 be independent random variables uniformly distributed over @xmath348 and @xmath349 , respectively .",
    "consider the random vector @xmath350 & \\cdots & \\msf{y}[n ]      \\end{pmatrix }      \\defeq s(\\bm{\\msf{v}}_1,\\bm{\\msf{v}}_2).\\ ] ] then , for any @xmath351 , we have @xmath352 and let @xmath353 denote the corresponding entropy of the random vector @xmath354 .",
    "the next result proves the existence of a `` typical '' set .",
    "[ lemma : typical ] let @xmath196 be a @xmath339-dimensional ordered submatrix of @xmath56 , and let @xmath341 be the corresponding mapping . for any @xmath355",
    ", there exists a set @xmath356 such that    [ eqn : typical ] @xmath357    the proof of lemma  [ lemma : typical ] is presented in section  [ sec : proofs_n_typical ] .",
    "consider now the event that @xmath358 is @xmath60-feasible for the random target function @xmath81 ( as introduced in example  [ eg : fnmac ] ) . as we have seen before , this implies the existence of a @xmath60-approximation @xmath359 of @xmath81 such that @xmath360 is @xmath123-feasible .",
    "let @xmath196 be the corresponding ordered submatrix of @xmath56 specifying the encoders , and let @xmath62 be the corresponding decoder .",
    "for fixed @xmath361 , let @xmath362 be the typical set associated with @xmath196 , as guaranteed by lemma  [ lemma : typical ] .",
    "since @xmath62 correctly computes @xmath363 for all elements of @xmath364 , it does so in particular for all elements of @xmath345 .",
    "more formally , @xmath365 for all @xmath366 .",
    "fix an ordered submatrix @xmath196 of @xmath56 of dimension @xmath339 .",
    "let @xmath345 be the typical set corresponding to @xmath196 .",
    "consider a random @xmath81 , and let @xmath367 be the event that there exists a @xmath60-approximation @xmath359 of dimension @xmath368 and a mapping @xmath369 such that @xmath365 for all @xmath366 . from the discussion in the last paragraph , we have @xmath370    we continue by upper bounding the probability of the event @xmath367 .",
    "fix a mapping @xmath62 and let @xmath371 denote the set of distinct @xmath211 matrices @xmath337 with entries in @xmath20 such that @xmath372 for all @xmath373 . using the union bound",
    ", we have @xmath374    the number of matrices in @xmath371 is at most @xmath375 where the second inequality follows from in lemma  [ lemma : typical ] .",
    "since there are at most @xmath376 mappings @xmath62 from @xmath377 to @xmath20 , we have @xmath378 where the last inequality follows from in lemma  [ lemma : typical ] .",
    "consider then a fixed matrix @xmath337 .",
    "the next lemma upper bounds the probability that this fixed @xmath337 is , in fact , a @xmath60-approximation of the random target function @xmath81 .",
    "[ lemma : approximationmatrix ] fix @xmath379 and an arbitrary matrix @xmath337 of dimension @xmath339 with @xmath380 and range of cardinality @xmath141 .",
    "let @xmath81 be the random target function of dimension @xmath140 and range of cardinality @xmath141 .",
    "then @xmath381 with @xmath382    the proof of lemma  [ lemma : approximationmatrix ] is presented in section  [ sec : proofs_n_approximation ] . combining  , , and lemma  [ lemma : approximationmatrix ] shows that for any @xmath196 , @xmath383    substituting the above into , we have @xmath384 where the last inequality follows by noting that there are at most @xmath385 ordered submatrices @xmath196 of @xmath56 of dimension at most @xmath140 .",
    "now , set @xmath386 and note that @xmath387 as @xmath91 since @xmath388 as @xmath91 .",
    "recall that @xmath389 by assumption .",
    "this implies that @xmath390 hence , the right - hand side of converges to zero as @xmath391 if the following two conditions hold , @xmath392 in particular , since @xmath393 without loss of generality , and since @xmath394 as @xmath395 , this is the case whenever @xmath396 thus , if @xmath397 then either    @xmath398    or there must exist a submatrix @xmath196 of of @xmath56 of dimension at most @xmath140 such that @xmath399    assume that the latter is true . let @xmath400 denote independent random variables corresponding to the channel inputs of the two users , as specified by the submatrix @xmath196",
    ". then we have @xmath401 which implies that @xmath402 similarly , we have @xmath403 from , , , it follows that there exists a joint distribution on @xmath404 of the form",
    "@xmath405 | v_1[i ] , v_2[i])\\ ] ] which satisfies @xmath406 ) } , \\nonumber\\\\      u & \\dotleq 2^ { h(\\bm{\\msf{y } } | \\bm{\\msf{v}}_1 ) } \\leq 2^{\\sum_{i=1}^{n } h(\\msf{y}[i ] | \\msf{v}_1[i ] ) } , \\nonumber\\\\      u & \\dotleq 2^ { h(\\bm{\\msf{y } } | \\bm{\\msf{v}}_2 ) } \\leq 2^{\\sum_{i=1}^{n } h(\\msf{y}[i ] | \\msf{v}_2[i])}.\\end{aligned}\\ ] ]    we can then single - letterize the right - hand side of the above inequalities in the usual way , see for example the proof of ( * ? ? ?",
    "* theorem  14.3.3 ) .",
    "then it follows that there exists a joint distribution of the form @xmath407 such that @xmath408 thus , if holds , then the above inequalities provide a list of necessary conditions for @xmath409 to be @xmath60-feasible with positive probability .",
    "it follows easily that the conditions above are also implied if the alternate condition in holds , thus concluding the proof .",
    "it remains to prove lemmas  [ lemma : typical ] and [ lemma : approximationmatrix ] .",
    "consider a variable - length binary huffman code for the random variable @xmath354 distributed according to  , and let @xmath410 be the length of the codeword associated with @xmath354 . by",
    "* theorem  5.4.1 ) , the expected length @xmath411 of the code satisfies @xmath412    let @xmath413 denote the set of @xmath30 such that @xmath414 for some @xmath355 , and define @xmath415 as the elements in @xmath416 that are mapped into @xmath417 .",
    "we have @xmath418 where @xmath276 follows since there are at most @xmath419 binary sequences of length at most @xmath420 and each of them can correspond to at most one value @xmath421 , and @xmath278 follows from .    on the other hand",
    ", we have @xmath422 where @xmath276 follows from and @xmath278 follows from markov s inequality . together",
    ", this shows the existence of a set @xmath345 with the desired properties .",
    "fix an arbitrary function @xmath423 with @xmath424 , and fix arbitrary maps @xmath425 and @xmath426 .",
    "denote by @xmath427 the indicator variable of the event @xmath428 in words , @xmath429 if the target function @xmath430 is correctly approximated by @xmath208 at @xmath244 .",
    "since the entries of @xmath81 are uniformly distributed over @xmath20 , we have @xmath431    since the entries of @xmath81 are independent , the number of message pairs for which the target function @xmath432 is correctly computed using the approximation function @xmath208 is then described by a binomial random variable @xmath433 with mean @xmath434 .",
    "thus the probability that for fixed maps @xmath435 , the function @xmath208 is a @xmath60-approximation of the random target function @xmath432 is given by @xmath436 where @xmath276 follows from the chernoff bound and @xmath278 from the definition of @xmath437 .",
    "the number of possible maps @xmath61 are at most @xmath438 and @xmath439 , respectively . by the union bound ,",
    "the probability that the function @xmath208 is a @xmath60-approximation of the random target function @xmath432 is then at most @xmath440 thus concluding the proof .",
    "we prove this result by posing it in the framework of the coupon - collector problem , see , e.g. , ( * ? ? ?",
    "* chapter 3.6 ) . in each round ,",
    "a collector obtains a coupon uniformly at random from a collection of @xmath127 coupons .",
    "let @xmath326 denote the number of rounds that are needed until the first time @xmath258 distinct coupons are obtained .",
    "then the event that @xmath326 is at most @xmath317 is equivalent to the number of distinct entries in the @xmath283 random channel matrix @xmath90 being at least @xmath258 .",
    "let @xmath441 for the coupon collector problem , the minimum number of rounds @xmath326 needed to collect @xmath280 distinct coupons can be written as @xmath442 where the @xmath224 s are independent random variables and @xmath443 represents the geometric distribution with parameter @xmath444 .",
    "observe that @xmath445 .    from the chernoff bound , @xmath446 we have @xmath447 for @xmath448 .",
    "since the right - hand side is decreasing in @xmath444 , we have @xmath449 for every @xmath450 .",
    "this implies that @xmath451    since @xmath261 by assumption , we have @xmath452 from .",
    "assume that this is the case in the following , and set @xmath453 in .",
    "then @xmath454 now , since @xmath455 , we have @xmath456 , and thus @xmath457 here , the last inequality follows by setting @xmath458 in the inequality @xmath459$},\\end{aligned}\\ ] ] which follows from the observation that the left - hand side evaluates to zero at @xmath460 and is monotonically increasing for @xmath461 $ ] .    substituting into and using the definition of @xmath280 yields @xmath462 thus concluding the proof .",
    "consider again the coupon collector problem as in appendix  [ sec : appendix_distinct ] , and let @xmath326 denote the number of rounds required to collect @xmath280 distinct coupons .",
    "then the event that @xmath326 is at least @xmath463 is equivalent to @xmath270 being at most @xmath280 . following the proof of lemma  [ lemma : distinctentries ] , we have from the chernoff bound   that @xmath464 where the last inequality follows since @xmath465 by assumption , and with @xmath466                                    m.  p. wilson , k.  narayanan , h.  d. pfister , and a.  sprintson , `` joint physical layer coding and network coding for bidirectional relaying , '' _ ieee trans .",
    "inf . theory _ ,",
    "56 , no .  11 , pp . 56415654 , nov ."
  ],
  "abstract_text": [
    "<S> we consider the problem of distributed computation of a target function over a two - user deterministic multiple - access channel . </S>",
    "<S> if the target and channel functions are matched ( i.e. , compute the same function ) , significant performance gains can be obtained by jointly designing the communication and computation tasks . however , in most situations there is mismatch between these two functions . in this work , </S>",
    "<S> we analyze the impact of this mismatch on the performance gains achievable with joint communication and computation designs over separation - based designs . </S>",
    "<S> we show that for most pairs of target and channel functions there is no such gain , and separation of communication and computation is optimal . </S>"
  ]
}
{
  "article_text": [
    "in quantum mechanics a lot of phenomena occur under the influence of an external electromagnetic field .",
    "typical examples include the zeeman effect , landau levels and superconductivity .",
    "so , quite a few problems in computational solid state physics and quantum chemistry require the solution of the schrdinger equation in the presence of an electromagnetic field @xmath0 here , the unknown @xmath1 is the quantum mechanical wave function , @xmath2 is the scalar potential and @xmath3 is the vector potential . in addition @xmath4 $ ] denotes the small semi - classical parameter which is the scaled planck constant . the equation is considered subject to vanishing boundary conditions , i.e. , @xmath5 .",
    "we recall that mass is a conserved quantity of this equation .",
    "exponential splitting schemes constitute a well - established class of methods for the numerical solution of schrdinger equations ( see , e.g. , @xcite ) . in this approach ,",
    "the kinetic part is solved in fourier space , which gives spectral accuracy in space , whereas the multiplicative potential is integrated pointwise in physical space .",
    "the transformation between fourier and physical space is carried out using the fast fourier transform , which results in an overall fast algorithm . in our situation , however , when the vector potential depends on the position , we get an additional advection term , which can not be handled efficiently with fourier techniques .",
    "thus , the structure of problem suggests to split the equation into three subproblems : a potential step which collects the scalar terms of the potentials ( which are pointwise multiplications ) , a kinetic step which involves the laplacian , and an advection step which results from the vector potential . for carrying out a time step , each of these steps is solved separately and",
    "their solutions are recombined to define the numerical approximation .",
    "this is the underlying idea of exponential splitting schemes ( see @xcite ) . in this paper",
    "we analyse a first - order method , the so - called lie splitting .",
    "note , however , that higher - order methods can be analysed in exactly the same way , if the underlying problem has enough spatial smoothness , see  @xcite .    splitting the magnetic schrdinger equation for the purpose of its numerical solution into three subproblems is not a new idea . in their recent paper @xcite , jin and zhou proposed such a scheme .",
    "for the solution of the advection step , they considered a semi - lagrangian approach .",
    "such an approach has been used in many other fields as well ( see , e.g. , @xcite ) .    our present paper differs from  @xcite mainly in the following aspects : we give a framework for carrying out an abstract convergence proof for exponential splitting methods applied to , and we give a detailed error analysis for the lie splitting scheme by identifying the required smoothness assumptions on the data .",
    "moreover , we address conservation properties of the scheme and identify an alternative to lagrange interpolation , as the latter does not conserve mass .",
    "the outline of this paper is as follows .",
    "we start in section [ convergence ] with an abstract convergence result for splitting into three subproblems .",
    "guided by the properties of the magnetic schrdinger equation , we present an analytic framework that allows us to prove convergence for exponential splitting schemes .",
    "we exemplify this by proving that lie splitting applied to has order of convergence one , as expected .",
    "in section [ description ] we apply a gauge transformation to the magnetic schrdinger equation to obtain the equivalent formulation with a divergence - free vector potential .",
    "this formulation is used in to define the employed splitting . in the following section",
    "we show how to compute the solution of the kinetic step in spectral space and that of the potential step in physical space . for the advection step",
    "we use the method of characteristics .",
    "however , since the characteristic curves do not cut the previous time horizon at grid points , in general , special care has to be taken .",
    "we compare three different possibilities , namely discrete fourier series evaluation , local polynomial interpolation and fourier series evaluation by a nonequispaced fast fourier transform ( nfft ) , see  @xcite .",
    "the latter allows us to evaluate a fourier series at an arbitrary set of points in a fast way . to our knowledge , this transform was not yet applied in the present context .",
    "in section [ numerical ] we present some numerical results .",
    "our main goal is the comparison of the different approximations used in the advection step . in particular , we study how well the considered numerical algorithms preserve mass , and how they compare in terms of computational efficiency .",
    "for the numerical solution of , we propose a splitting approach . motivated by the particular form of the vector field , which is the sum of a kinetic , a potential and an advective part",
    ", we consider a splitting into three terms .",
    "for this purpose , we formulate as an abstract initial value problem @xmath6 in a banach space @xmath7 with norm @xmath8 .",
    "below , we will state an analytic framework for these operators @xmath9 , @xmath10 and @xmath11 that , on the one hand , is sufficiently general to include the magnetic schrdinger equation as an example and , on the other hand , allows us to carry out an abstract convergence proof for ( exponential ) splitting methods .",
    "we will illustrate our approach by analysing in detail the lie splitting scheme will denote the exact solution at time @xmath12 of the abstract ( linear ) differential equation @xmath13 with initial value @xmath14 . ]",
    "@xmath15 where @xmath12 denotes the step size and @xmath16 is the numerical approximation to the true solution @xmath17 at time @xmath18",
    ". we will show below that the lie splitting scheme is first - order convergent .",
    "let us stress , however , that exactly the same ideas can be used to analyse exponential splitting methods of higher order .    in a first step , we will study the local error @xmath19 of lie splitting along the exact solution .",
    "for this purpose , we employ the following assumption .",
    "[ hp ] let @xmath10 be a bounded operator , and let @xmath9 , @xmath11 , and @xmath20 generate strongly continuous semigroups @xmath21 , @xmath22 , and @xmath23 on @xmath7 . we assume that the following bounds hold for @xmath24 along the exact solution    @xmath25{\\mathrm{e}}^{s{\\mathcal{a } } } u(t ) \\vert & \\leq c_1,\\label{hp1}\\\\ \\vert { \\mathcal{c}}{\\mathrm{e}}^{s{\\mathcal{a } } } { \\mathcal{b}}u(t ) \\vert & \\leq c_2,\\label{hp5}\\\\ \\vert { \\mathcal{c}}^2 { \\mathrm{e}}^{s{\\mathcal{a } } } u(t ) \\vert & \\leq c_3,\\label{hp2}\\\\ \\vert { \\mathcal{c}}{\\mathrm{e}}^{\\sigma{\\mathcal{a}}}{\\mathcal{c}}{\\mathrm{e}}^{s({\\mathcal{a}}+{\\mathcal{c } } ) } u(t ) \\vert & \\leq c_4,\\label{hp3}\\\\ \\vert [ { \\mathcal{a}}+{\\mathcal{c}},{\\mathcal{b } } ] { \\mathrm{e}}^{s({\\mathcal{a}}+{\\mathcal{c } } ) } u(t)\\vert & \\leq c_5\\label{hp4}\\end{aligned}\\ ] ]    with some constants @xmath26 , @xmath27 , @xmath28 , @xmath29 , and @xmath30 that do not depend on @xmath31 .",
    "next , we recall the definition of the @xmath32 functions , which play some role in our analysis . for complex @xmath33 and integer @xmath34 , we set @xmath35 these functions",
    "are uniformly bounded in the complex half - plane @xmath36 and analytic in @xmath37 .",
    "let @xmath38 be the generator of a strongly continuous semigroup .",
    "then , for all @xmath39 , the following identity holds in the domain of @xmath40 @xmath41 we are now in the position to state the local error bound .    under assumption [ hp ] ,",
    "the following bound for the local error holds @xmath42\\ ] ] with a constant @xmath43 that does not depend on @xmath44 and @xmath12 .",
    "our proof uses ideas developed in @xcite .",
    "since @xmath10 is bounded , the numerical solution can be expanded in the following way @xmath45 the exact solution , on the other hand , is expanded with the help of the variation - of - constants formula . applying",
    "this formula twice yields the representation @xmath46 collecting all the terms , we can rewrite the local error as @xmath47 where @xmath48 and @xmath49 .    for expanding @xmath50",
    "we employ the @xmath51 function ( see ) to get @xmath52 using the variation - of - constants formula twice , we can rewrite @xmath53 as @xmath54 thus , to bound @xmath55 , we need first to estimate @xmath56 and then to bound the remaining terms",
    ". let @xmath57 .",
    "then , the expression becomes @xmath58 and can be bounded with assumption @xmath59{\\mathrm{e}}^{(\\tau-\\sigma){\\mathcal{a } } } u(t ) { \\mathrm{d}}\\sigma { \\mathrm{d}}s \\bigg\\vert \\leq c\\tau^2.\\ ] ] furthermore , by employing assumptions and , the remaining terms in @xmath55 can be estimated as @xmath60 and @xmath61 taking all together , we have shown that @xmath62 .",
    "as regards @xmath63 , by setting @xmath64 and proceeding in the same way as for we obtain @xmath65 { \\mathrm{e}}^{(\\tau-\\sigma)({\\mathcal{a}}+{\\mathcal{c}})}u(t)\\,{\\mathrm{d}}\\sigma { \\mathrm{d}}s .",
    "\\end{aligned}\\ ] ] the double integral is bounded with the help of assumption by @xmath66 . for the remaining two terms",
    ", we use that @xmath67 and employ once more the variation - of - constants formula @xmath68 assumption shows that their difference is again bounded by @xmath66 . from this",
    "we conclude the assertion .",
    "assumption  [ hp ] guarantees that the semigroups , generated by @xmath9 , @xmath10 , and @xmath11 satisfy the bounds @xmath69 for some constants @xmath70 , @xmath71 , @xmath72 , @xmath73 , and @xmath74 .",
    "moreover , it is possible to choose an equivalent norm @xmath75 on @xmath7 such that @xmath76 .",
    "unfortunately , this is still not enough to prove stability , in general .",
    "therefore , we impose an additional assumption .",
    "[ hpstab ] there is a constant @xmath77 such that @xmath78 for all @xmath79 .    under this additional assumption , it is easy to show stability .    [ stability ] under assumptions",
    "[ hp ] and [ hpstab ] , lie splitting is stable , i.e. , there is a constant @xmath43 such that @xmath80 for all @xmath81 and @xmath82 satisfying @xmath83 .",
    "our assumptions imply that @xmath84 from which the assertion follows .    from consistency and stability ,",
    "convergence follows in a standard way .",
    "[ thm : convergence ] under assumptions [ hp ] and [ hpstab ] , the lie splitting discretization of the initial value problem is convergent of order  1 , i.e. , there exists a constant @xmath43 such that @xmath85 for all @xmath86 and @xmath87 satisfying @xmath88 .",
    "we express the global error with the help of a telescopic sum @xmath89 and use the estimates and .",
    "the electromagnetic field in @xmath90 is the combination of the electric field @xmath91 and the magnetic field @xmath92 .",
    "both fields depend on time and space , in general .",
    "mathematically , they are given by a scalar potential @xmath93 and a vector potential @xmath94 , respectively @xmath95 making use of the fact that we can impose conditions on the potentials as long as we do not affect the resulting fields , we will apply the following transformations @xmath96 one natural choice is to impose a so - called coulomb gauge , i.e. , to select @xmath97 in such a way that @xmath98 .",
    "consequently , this gauge @xmath97 has to satisfy the poisson equation @xmath99 .    applying to the schrdinger equation and dropping right away the tildes , we obtain the following problem @xmath100,\\\\ u(0,x)&=u_0(x ) \\end{aligned}\\ ] ] with a divergence - free vector potential @xmath94 .",
    "we are now in the position to give a precise formulation of the three subproblems that are used in our splitting .",
    "henceforth , they will be called potential , kinetic and advection step , respectively :    [ eq : steps ] @xmath101    the kinetic step can be handled analytically in fourier space , whereas the potential step is easily performed in physical space .",
    "for the advection step we will present three modifications of a semi - lagrangian method in section [ sec : adv ] below .    an important feature of and is the conservation of mass @xmath102 , i.e. , @xmath103",
    "the split step solution based on is mass conserving as well .",
    "indeed , the kinetic step preserves the @xmath104 norm due to parseval s identity .",
    "the modulus of the solution of the potential step is preserved , and we are also able to show that the advection step conserves the mass .",
    "this is seen by multiplying by @xmath105 @xmath106 and adding this equation to its complex conjugate , which results in @xmath107 integrating this last equation by parts shows @xmath108 where the last identity follows from the coulomb gauge .",
    "henceforth , we consider and on the hyperrectangle @xmath109 , subject to periodic boundary conditions .",
    "in particular , the potentials @xmath93 and @xmath94 are assumed to be periodic functions on @xmath110 . then , all what has been said in this section remains valid .",
    "we finally remark that our splitting approach also works if @xmath94 is not divergence - free . in this case",
    "the potential operator is given by @xmath111 whereas the other two operators stay the same .",
    "however , in this case , we will lose the conservation of mass for the potential step .",
    "we discretize the hyperrectangle @xmath112 by a regular grid . for @xmath113 ,",
    "let @xmath114 be an even integer and let @xmath115 for @xmath116 we consider the grid points @xmath117 with components @xmath118 for performing the potential step , we solve the ordinary differential equation   at each grid point @xmath117 .",
    "more precisely , starting with an initial value @xmath119 at time @xmath120 , we solve @xmath121 to obtain @xmath122 if the potentials @xmath94 and @xmath93 are time - independent , the analytic solution is readily available .",
    "otherwise , a quadrature method ( up to machine precision ) can be employed .",
    "the kinetic step is approximated in fourier space . for a given function @xmath123 let @xmath124 denote its fourier coefficients , i.e. @xmath125 where @xmath126 .",
    "further , let @xmath127 the fourier coefficients of @xmath128 are then given by @xmath129 .",
    "the transformation between physical and fourier space is usually carried out with the fast fourier transform .",
    "in this section we describe the solution of the advection step @xmath130,\\\\ v(0,x)&=v_0(x ) .",
    "\\end{aligned}\\right.\\ ] ] our approach is based on the method of characteristics , i.e. , we make use of the curves @xmath131 satisfying the @xmath132-dimensional system of ordinary differential equations @xmath133 since the solution of the advection equation is constant along characteristics , we have @xmath134 for each grid point @xmath117 , @xmath135 , where @xmath136 denotes the solution of @xmath137,\\\\ x^j(\\tau)&=x^j \\end{aligned } \\right.\\ ] ] at @xmath138 .",
    "this system can be solved once and for all for each grid point with an explicit method at high precision , if the time step @xmath12 is kept constant . however , since @xmath136 is not a grid point , in general , the value @xmath139 has to be recovered .",
    "we describe here three different procedures for achieving the evaluation of @xmath140 at the set of @xmath141 points @xmath142 . for the sake of simplicity",
    ", we only describe the one - dimensional case in detail .",
    "however , we also report the overall computational cost for the general @xmath132-dimensional case .",
    "we remark that the same approach can be used for time dependent potentials @xmath143 .",
    "instead of one has to solve the non - autonomous problem @xmath144,\\\\ x^j(\\tau)&=x^j .",
    "\\end{aligned } \\right.\\ ] ] its numerical solution at @xmath138 is again used to define the sought - after approximation @xmath145 .",
    "since the initial value @xmath146 of the advection step is the result of the solution of the kinetic step , the function @xmath147 is known through its fourier coefficients @xmath148 .",
    "it is therefore possible to directly evaluate @xmath149 in the @xmath132-dimensional case , the @xmath150 values @xmath151 can be precomputed once and for all , if the time step @xmath12 is constant . the evaluation cost of   at the point set @xmath152 is then @xmath153 at each time step .",
    "another possibility ( see , for instance , @xcite ) is local polynomial interpolation .",
    "it is possible to evaluate @xmath146 at the grid points @xmath154 with an inverse fast fourier transform of cost @xmath155 .",
    "an approximation of the values @xmath156 can then be obtained by local polynomial interpolation @xmath157 here @xmath158 is the set of the @xmath159 grid points , @xmath159 even , satisfying @xmath160 and @xmath161 denotes the elementary lagrange polynomial of degree @xmath162 that takes the value one at @xmath163 and zero at all the other @xmath162 points .",
    "of course , the points @xmath163 and the corresponding values @xmath164 have to be taken by periodicity if necessary .    in the @xmath132-dimensional case , for a constant time step @xmath12",
    "it is possible to precompute once and for all the elementary lagrange polynomials at the points @xmath152 ( for a total amount of @xmath165 values ) .",
    "then , the evaluation of at each time step requires @xmath166 operations .",
    "the third explored possibility is the evaluation of   by means of an approximate fast fourier transform . among others , we tested the nonequispaced fast fourier transform ( nfft ) by keiner , kunis and potts  @xcite .",
    "the computational cost of such an approach is @xmath167 , where @xmath168 is the desired accuracy .    for the readers convenience , we briefly sketch the nfft algorithm in one dimension , using the original notation of  @xcite .",
    "given some coefficients @xmath169 , @xmath170 even , and a set of _ arbitrary _ points @xmath171 , the aim is a fast evaluation of the one - periodic trigonometric polynomial @xmath172 at the points @xmath154 . in the first step",
    ", @xmath173 is replaced with the ansatz @xmath174 where @xmath175 are some coefficients to be defined later and @xmath176 is the one - periodic version of a _ window _ function @xmath177 .",
    "the window function @xmath178 is chosen in such a way that @xmath179 has a uniformly convergent fourier series @xmath180 the default window function used by nfft is the so called _ keiser  bessel function _",
    "@xmath181 with the _ shape _ parameter @xmath182 .",
    "the value of @xmath183 depends on the desired accuracy @xmath168 and is chosen @xmath184 for double precision .",
    "the _ oversampling _ factor @xmath185 is defined by @xmath186 that is , @xmath187 is the smallest power of two with @xmath188 .",
    "now we plug the fourier series expansion of @xmath189 into @xmath190 in order to get @xmath191 and apply a cutoff in the frequency domain @xmath192 comparing now equations   and , we see that the coefficients @xmath193 are simply given by @xmath194 and the values @xmath175 can be recovered by a fast fourier transform of length @xmath195 .",
    "the parameter @xmath183 is then used as a _",
    "cutoff _ to approximate in practice the window function @xmath196 with @xmath197}(x).\\ ] ] in this way , @xmath190 is further approximated by @xmath198 now we use that @xmath199 vanishes outside of @xmath200 .",
    "thus , for fixed @xmath117 , the above sum contains at most @xmath201 terms different from zero .",
    "finally , @xmath202 is evaluated at the set @xmath154 , providing the desired approximation of @xmath203 .",
    "in this section we exemplify the assumptions of theorem  [ thm : convergence ] for the magnetic schrdinger equation . for this purpose , we choose @xmath204 with @xmath205 and assume that the potentials @xmath94 and @xmath93 are sufficiently smooth .",
    "note that the potential operator @xmath10 is bounded , whereas the kinetic operator @xmath9 and the advection operator @xmath11 are both unbounded .",
    "we start with the verification of assumption [ hp ] .",
    "* condition : since @xmath206 is the exact solution of the problem @xmath207 , @xmath208 , it preserves the smoothness of the initial data .",
    "further , the commutator @xmath209 $ ] is a second - order differential operator @xmath210 u & = \\frac{{\\mathrm{i}}\\varepsilon}{2}[\\delta , a\\cdot \\nabla]u\\\\ & = \\frac{{\\mathrm{i}}\\varepsilon}{2 } \\bigl(\\delta(a\\cdot \\nabla u)-a\\cdot \\nabla(\\delta u ) \\bigr).\\end{aligned}\\ ] ] so , we need to assume that the initial data are twice differentiable .",
    "* conditions , , and : as @xmath11 is a first - order differential operator , it is again sufficient to require that the initial data are twice differentiable . *",
    "condition : the commutator is a second - order differential operator @xmath211u = \\left[\\frac{{\\mathrm{i}}\\varepsilon}{2 } \\delta + a \\cdot \\nabla , -\\frac{{\\mathrm{i}}}{\\varepsilon}\\left(\\frac{1}{2}\\lvert a \\rvert^2+v\\right)\\right]u,\\ ] ] so the same smoothness as before is required .    stability is easily verified . from the conservation of mass discussed at the end of section [ description ] , we get @xmath212 and @xmath213 .",
    "note that the above bound for the advection semigroup only holds in the coulomb gauge setting .",
    "however , by the method of characteristics , the solution of the advection step is of the form @xmath214 , where @xmath215 setting @xmath216 , we have @xmath217 under the assumption that the partial derivatives of @xmath94 are bounded , we have @xmath218 which is exactly the weaker bound required in assumption [ hpstab ] .",
    "the first numerical example is a variation of  ( * ? ? ?",
    "* example 2 ) . the vector potential is chosen as @xmath219 and the scalar potential as @xmath220 .",
    "the initial value is @xmath221 , where @xmath222 note that this initial value is not periodic .",
    "however , due to the exponential decay of @xmath223 , the problem can be solved numerically up to time @xmath224 in the space interval @xmath225 $ ] by assuming periodic boundary conditions .",
    "the coulomb gauge transformation yields @xmath226        in figure  [ fig : order1d ] we plot the global errors of lie splitting at the final time @xmath224 for various time steps and @xmath227 spatial discretization points .",
    "the reference solution was obtained with 512 time steps .",
    "we include in this figure the error behavior of strang splitting , defined by @xmath228 in this double logarithmic diagram , the errors of a method lie on a straight line of slope @xmath229 , where @xmath229 denotes the order of the method .",
    "both , lie and strang splitting show their expected orders of convergence .",
    "lie splitting has order one , as proved in theorem  [ thm : convergence ] , whereas strang splitting converges with order two .",
    "note that the computationally most expensive task in the employed splitting approach is the advection step .",
    "therefore , we order the steps in in such a way that the advection equation is solved only once in each time step . in this way , strang splitting provides much more accuracy without being significantly more expensive than lie splitting .",
    "next , we compare the three different numerical realizations of the advection step , namely by local interpolation , by direct fourier series evaluation ( dft ) and by nfft . in table  [ tab : massconservation1d ] we report the error in mass conservation and the required cpu time for various values of @xmath170 .",
    "the number of time steps is fixed to @xmath230 .",
    "the error in mass conservation is measured as the maximum deviation from the initial mass on the discrete level ( @xmath231 in space and @xmath232 in time ) .",
    "@xmath170 & & @xmath233 & @xmath234 & @xmath235 & @xmath236 & dft & nfft + 128 & mass & 1.4e-01 & 1.8e-02 & 2.1e-03 & 2.8e-04 & 2.8e-15 & 8.6e-14 + & cpu & 0.13 & 0.12 & 0.12 & 0.12 & 0.10 & 0.16 + 256 & mass & 9.4e-02 & 2.7e-03 & 7.2e-05 & 2.5e-06 & 2.0e-15 & 1.0e-14 + & cpu & 0.13 & 0.13 & 0.13 & 0.14 & 0.19 & 0.17 + 512 & mass & 5.2e-02 & 2.9e-04 & 2.0e-06 & 1.8e-08 & 3.6e-15 & 1.7e-14 + & cpu & 0.16 & 0.19 & 0.17 & 0.16 & 0.27 & 0.19 + 1024 & mass & 1.6e-02 & 1.8e-05 & 3.0e-08 & 9.6e-11 & 4.0e-15 & 5.5e-14 + & cpu & 0.22 & 0.23 & 0.23 & 0.24 & 0.56 & 0.23 + 2048 & mass & 4.2e-03 & 1.1e-06 & 4.9e-10 & 3.8e-12 & 3.3e-15 & 1.3e-14 + & cpu & 0.36 & 0.37 & 0.37 & 0.37 & 1.42 & 0.33 +    due to the compressive behavior of @xmath237 , which acts as an initial velocity , the evolution develops caustics and the numerical solution requires a sufficiently large number @xmath170 of fourier modes in order to reproduce accurate physical observables . while dft and nfft always preserve the mass almost up to machine precision , the polynomial methods become comparable only with the largest tested value of @xmath170 and at polynomial degree 7 . for this degree , they are slightly more expensive than the nfft approach .",
    "the second numerical experiment is set in the two - dimensional domain @xmath238 ^ 2 $ ] with @xmath239 and initial value @xmath240 the semi - classical parameter is chosen @xmath241 , the final time @xmath242 and the number of time steps @xmath243 . in table  [ tab : massconservation2d ] we compare the three methods that only differ in the treatment of the advection step . in particular , we compare the behavior of tensor interpolation at @xmath244 and @xmath245 points with direct fourier series evaluation and nfft with the default value @xmath184 and the smaller values @xmath246 and @xmath247 , respectively .     & & & & + @xmath248 & & @xmath234 & @xmath235 & dft & @xmath184 & @xmath246 & @xmath247 + 128 & mass & 1.0e-01 & 2.5e-03 & 9.9e-11 & 1.0e-10 & 2.4e-10 & 2.2e-07 + & cpu & 25.2 & 33.5 & 174.3 & 23.7 & 22.8 & 20.6 + 256 & mass & 6.9e-03 & 3.9e-05 & 1.3e-08 & 1.3e-08 & 2.0e-08 & 2.5e-02 + & cpu & 101.7 & 117.9 & 2254 & 99.6 & 85.6 & 87.7 + 512 & mass & 4.3e-04 & 6.2e-07 & * & 9.7e-11 & 2.5e-10 & 2.0e-07 + & cpu & 412.7 & 506.8 & * & 435.7 & 401.4 &",
    "400.4 + 1024 & mass & 2.7e-05 & 9.6e-09 & * & 9.7e-11 & 2.5e-10 & 1.9e-07 + & cpu & 1796 & 2139 & * & 1948 & 1840 & 1709 +    we observe that , for this long - term simulation , the mass is always well conserved by the direct fourier series evaluation and by nfft with the default value @xmath184 . on the other hand ,",
    "if @xmath183 is halved , there is a significant degradation , especially with @xmath249 .",
    "the direct fourier series evaluation is much more expensive than the other methods , being impracticable for @xmath250 .",
    "the interpolation methods roughly cost as much as the nfft approach , but their mass preservation is by far worse .    the final numerical example is a three - dimensional variation of the previous one . in the domain",
    "@xmath238 ^ 3 $ ] , with @xmath241 , we chose @xmath251 and the initial value @xmath252",
    ".error in mass conservation and cpu time ( in seconds ) for the three - dimensional example .",
    "[ cols=\"^,^,^,^ \" , ]     with this example , we also tested the option ` pre_full_psi ` of nfft ( see  @xcite ) . at the price of a full precomputation of the window functions , which requires a storage of @xmath253 double precision numbers ,",
    "this option should allow an overall faster execution . in table",
    "[ tab : massconservation3d ] we display the error of mass conservation and the cpu time for simulations up to @xmath254 with 100 time steps . as expected , there is no difference in the mass conservation property between the two schemes .",
    "however , we never succeeded in getting the ` pre_full_psi ` version faster than the default one ( named ` pre_psi ` ) . for @xmath255",
    ", it was even not possible to store the precomputed values in the ram ( 8 gb ) . nevertheless , the default implementation of nfft , which requires a storage of @xmath256 for the window functions , works without any problem .",
    "in this paper we considered the numerical solution of the linear schrdinger equation with a vector potential .",
    "the structure of the problem suggested to use a splitting method involving three different parts , namely a multiplicative term coming from scalar potentials , the laplacian , and the advective term due to the vector potential . after establishing convergence of lie splitting for an abstract problem , we analysed the required assumptions in the specific case of the magnetic schrdinger equation . for the advection step ,",
    "the solution along the characteristic curves was approximated by a nonequispaced fast fourier transform .",
    "it turned out to be as fast as local polynomial interpolation and as accurate as direct fourier series evaluation in the mass conservation at discrete level .",
    "therefore , it can be considered as a competitive tool in the solution of advection equations with the method of characteristics ."
  ],
  "abstract_text": [
    "<S> the schrdinger equation in the presence of an external electromagnetic field is an important problem in computational quantum mechanics . </S>",
    "<S> it also provides a nice example of a differential equation whose flow can be split with benefit into three parts . after presenting a splitting approach for three operators with two of them being unbounded , </S>",
    "<S> we exemplarily prove first - order convergence of lie splitting in this framework . </S>",
    "<S> the result is then applied to the magnetic schrdinger equation , which is split into its potential , kinetic and advective parts . </S>",
    "<S> the latter requires special treatment in order not to lose the conservation properties of the scheme . </S>",
    "<S> we discuss several options . </S>",
    "<S> numerical examples in one , two and three space dimensions show that the method of characteristics coupled with a nonequispaced fast fourier transform ( nfft ) provides a fast and reliable technique for achieving mass conservation at the discrete level .    magnetic schrdinger equation , exponential splitting methods , convergence , fourier techniques , nonequispaced fast fourier transform </S>"
  ]
}
{
  "article_text": [
    "denial of service ( dos ) attacks are recognized as one of the most challenging threats to internet security .",
    "any organization or enterprise that is dependent on the internet can be subject to a dos attack , causing its service to be severely disrupted , if not fail completely .",
    "the attacker typically uses a worm to create an `` army '' of zombies , which she orchestrates to flood the victim s site with malicious traffic .",
    "this malicious traffic exhausts the victim s resources , thereby seriously affecting the victim s ability to respond to normal traffic .",
    "a network layer solution is required because the end - user or end - organization has no way to protect its tail circuit from being congested by an attack , causing the disruption sought by the attacker .",
    "for example , if an enterprise has a @xmath0 mbps connection to the internet , an attacker can command its zombies to send traffic far exceeding this @xmath0 mbps rate to this enterprise , completely congesting the downstream link to the enterprise and causing normal traffic to be dropped .",
    "network operators use conventional router filtering capabilities to respond to dos attacks .",
    "typically , an operator of a site under attack identifies the nature of the packets being used in the attack by some packet collection facility , installs a filter in its firewall / edge router to block these packets and then requests its isp to install comparable filters in its routers to remove this traffic from the tail circuit to the site .",
    "each isp can further communicate with its peering isps to block this unwanted traffic as well , if it so desires .",
    "currently , this propagation of filters is manual : the operator on each site determines the necessary filters and adds them to each router configuration . in several attacks , the operators of different networks",
    "have been forced to communicate by telephone given that the network connection , and thus email , was inoperable because of the attack .",
    "as dos attacks become increasingly sophisticated , manual filter propagation becomes unacceptably slow or even infeasible .",
    "for example , an attack can switch from one protocol to another , move between source networks as well as oscillate between on and off far faster than any human can respond .",
    "in general , network operators are confronting an `` arms race '' in which any defense , such as manually installed filters , is viewed as a challenge by the community of attacker - types to defeat . exploiting a weakness such as human speeds of filter configuration is an obvious direction for an attacker to pursue .",
    "the concept of automatic filter propagation has already been introduced in @xcite : a router is configured with a filter to drop ( or rate - limit ) certain traffic ; if it continues to drop a significant amount of this traffic , it requests that the upstream router take over and block the traffic .",
    "however , the crucial issues associated with automatic filter propagation are still unaddressed .",
    "the real problem is how to efficiently manage the bounded number of filters available to a network operator to provide this filtering support .",
    "an attacker can change protocols , source addresses , port numbers , etc . requiring a very large number of filters .",
    "however , a sophisticated hardware router has a fixed maximum number of wire - speed filters that can block traffic with no degradation in router performance .",
    "the maximum is determined by hardware table sizes and is typically limited to several thousand .",
    "a software router is typically less constrained by table space , but incurs a processing overhead for each additional filter .",
    "this usually limits the practical number of filters to even less than a hardware router .",
    "moreover , there is a processing cost at each router for installing each new filter , removing the old filters and sending and receiving filter propagation protocol messages .",
    "given the restricted amount of filtering resources available to each router , hop - by - hop filter propagation towards the attacker s site clearly does not scale : internet backbone routers would quickly become the `` filtering bottleneck '' having to satisfy filtering requests coming from all the corners of the internet .",
    "fortunately , traceback @xcite @xcite makes it possible to identify a router close to the attacker and send it a filtering request directly . however , any filter propagation mechanism other than hop - by - hop raises a serious security issue : once a router starts accepting filtering requests from unknown sources , how can it trust that these requests are not forged by malicious nodes seeking to disrupt normal communication between other nodes ?    in this paper we propose a new filter propagation protocol called aitf ( active internet traffic filtering ) : the victim sends a filtering request to its network gateway .",
    "the victim s gateway temporarily blocks the undesired traffic , while it propagates the request to the attacker s gateway .",
    "as we will see , the protocol both motivates and assists the attacker s gateway to block the attack .",
    "moreover , a router receiving a filtering request satisfies it only if it determines that the requestor is on the same path with the specified undesired traffic .",
    "thus , the filter can not affect any nodes in the internet other than those already operating at the mercy of the requestor .",
    "the novel aspect of aitf is that it enables each participating service provider to guarantee to its clients a _ specific , significant amount of protection against dos attacks _ , while it requires only a _ bounded credible amount of resources_. at the same time it is _ secure _ i.e. , it can not be abused by a malicious node to harm ( e.g. block legitimate traffic to ) other nodes . finally , it",
    "_ scales with internet size _",
    "i.e. , it keeps its efficiency in the face of continued internet growth .",
    "a _ flow label _ is a set of values that captures the common characteristics of a traffic flow ",
    "e.g. , `` all packets with ip source address @xmath1 and ip destination address @xmath2 '' .    a _ filtering request _ is a request to block a flow of packets  all packets matching a specific wildcarded flow label  for the next @xmath3 time units .",
    "a _ filtering contract _ between networks @xmath4 and @xmath5 specifies :    1 .",
    "the filtering request rate @xmath6 at which @xmath4 accepts filtering requests to block certain traffic to @xmath5 .",
    "2 .   the filtering request rate @xmath7 at which @xmath4 can send filtering requests to get @xmath5 to block certain traffic from coming into @xmath4 .",
    "an _ aitf network _ is an autonomous domain which has a filtering contract with each of its end - hosts and each neighbor autonomous domain directly connected to it .",
    "aitf node _ is either an end - host or a border router in an aitf network .    finally , we define the following terms with respect to an undesired flow : the _ attack path _ is the set of aitf nodes the undesired flow goes through .",
    "the _ attacker _",
    "is the origin of the undesired flow .",
    "the _ victim _ is the target of the undesired flow .",
    "attacker s gateway _ is the aitf node closest to the attacker along the attack path .",
    "similarly , the _ victim s gateway _ is the aitf node closest to the victim along the attack path .",
    "the aitf protocol enables a service provider to protect a client against @xmath8 undesired flows , by using only @xmath9 filters and a dram cache of size @xmath10 .",
    "the motivation is that each router can afford gigabytes of dram but only a limited number of filters .    in an aitf world , each autonomous domain ( ad ) is an aitf network i.e. , it has filtering contracts with all its end - hosts and peering ads .",
    "these contracts limit the rates by which the ad can send / receive filtering requests to / from its end - hosts and peering ads .",
    "the limited rates allow the receiving router to police the requests to the specified rates and indiscriminately drop requests when the rate is in excess of the agreed rate .",
    "thus , the router can limit the cpu cycles used to process filtering requests as well as the number of filters it requires .",
    "an aitf filtering request is initially sent from the victim to the victim s gateway ; the victim s gateway propagates it to the attacker s gateway ; finally , the attacker s gateway propagates it to the attacker .",
    "both the victim s gateway and the attacker s gateway install filters to block the undesired flow .",
    "the victim s gateway installs a filter only temporarily , to immediately protect the victim , while it waits for the attacker s gateway to take responsibility .",
    "the attacker s gateway is expected to install a filter and block the undesired flow for @xmath3 time units .",
    "if the undesired flow stops within some grace period , the victim s gateway interprets this as a hint that the attacker s gateway has taken over and removes its temporary filter .",
    "this leaves the door open to `` on - off '' undesired flows . in order to detect and block such",
    "`` on - off '' flows , the victim s gateway needs to remember each filtering request for at least @xmath3 time units .",
    "thus , the victim s gateway , installs a filter for @xmath11 time units , but keeps a `` shadow '' of the filter in dram for @xmath3 time units .",
    "time units is very expensive  doing so would defeat the whole purpose of pushing filtering to the attacker s gateway . ]",
    "the attacker s gateway expects the attacker to stop the undesired flow within a grace period .",
    "otherwise , it holds the right to disconnect from her .",
    "this fact encourages the attacker to stop the undesired flow .",
    "similarly , the victim s gateway expects the attacker s gateway to block the undesired flow within a grace period .",
    "otherwise , the mechanism _ escalates _ : the victim s gateway now plays the role of the victim ( i.e. , it sends a filtering request to its own gateway ) and the attacker s gateway plays the role of the attacker ( i.e. , it is asked to stop the undesired flow or risk disconnection ) .",
    "the escalation process should become clear with the example in [ example ] .",
    "thus , the mechanism proceeds in _",
    "rounds_. at each round , only four nodes are involved . in the first round , the mechanism tries to push filtering of undesired traffic back to the aitf node closest to the attacker . if that fails , it tries the second closest aitf node to the attacker and so on .",
    "the aitf protocol involves only one type of message : a _ filtering request_. a filtering request contains a _ flow label _ and a _ type _ field .",
    "the latter specifies whether this request is addressed to the victim s gateway , the attacker s gateway or the attacker .",
    "the only nodes in an aitf network that speak the aitf protocol are end - hosts and border routers .",
    "internal routers do not participate .",
    "aitf node @xmath12 sends a filtering request to aitf node @xmath13 , when @xmath12 wants a certain traffic flow coming through @xmath13 to be blocked for @xmath3 time units .",
    "when aitf node @xmath13 receives a filtering request , it checks which end - host or peering network the request is received from / through .",
    "if that end - host or peering network has exceeded its allowed rate , the request is dropped . if not",
    ", @xmath13 looks at the specified undesired flow label and takes certain actions :    * if @xmath13 is the victim s gateway : 1 .",
    "it installs a _ temporary _ filter to block the undesired flow for @xmath11 time units . 2 .",
    "it logs the filtering request in dram for @xmath3 time units .",
    "it propagates the filtering request to the attacker s gateway .",
    "if the attacker s gateway does not block the flow within @xmath14 time units , @xmath13 propagates the filtering request to its own gateway . *",
    "if @xmath13 is the attacker s gateway : 1 .",
    "it installs a filter to block the undesired flow for @xmath3 time units .",
    "it propagates the filtering request to the attacker .",
    "if the attacker does not stop the flow within a grace period , @xmath13 disconnects from her . *",
    "if @xmath13 itself is the attacker , it stops the flow ( to avoid disconnection ) .",
    "we should note that the behavior described above is that of a non - compromised , non - malicious node .",
    "neither the attacker not even the attacker s gateway are expected to always conform to this behavior .",
    "aitf operation does not rely on their cooperation .      in figure [ filterfig ] @xmath15  which stands for `` good host ''  is an end - host residing in enterprise network @xmath16 , which is connected to local isp @xmath17 through router @xmath18 .",
    "@xmath17 runs a regional network that connects through its backbone router @xmath19 to a wide - area isp @xmath20 .",
    "similarly , @xmath21  which stands for `` bad host ''  is an end - host residing in enterprise network @xmath22 etc .",
    "@xmath21 starts sending an undesired flow to @xmath15 .",
    "@xmath15 sends a filtering request to @xmath18 against @xmath21 . upon reception of @xmath15 s request",
    ", @xmath18 temporarily blocks the undesired flow but also propagates the request to @xmath23 .    on the other side , upon reception of @xmath18 s request",
    ", @xmath23 immediately blocks the undesired flow , but also propagates the filtering request to @xmath21 .",
    "@xmath21 either stops the undesired flow or risks being disconnected .",
    "thus , if @xmath23 cooperates , by the end of the first round , filtering of the undesired flow has been successfully pushed to the aitf node closest to the attacker ( @xmath23 ) .",
    "of course , @xmath23 may decide not to cooperate and ignore the filtering request .",
    "then , the mechanism escalates : @xmath18 propagates the filtering request to @xmath19 .",
    "@xmath19 temporarily blocks all undesired traffic , but also propagates the filtering request to @xmath24 and so on .",
    "thus , if @xmath24 cooperates , by the end of the second round , filtering of the undesired flow has been successfully pushed to the second closest to the attacker aitf node ( @xmath24 ) .    in the worst - case scenario",
    ", even @xmath25 refuses to cooperate . as a result",
    ", @xmath26 disconnects from @xmath25 .      in a network architecture where source address spoofing is allowed ,",
    "compromised node @xmath27 can maliciously request the blocking of traffic from @xmath4 to @xmath28 thereby disrupting their communication . to avoid this",
    ", we add a simple extension to the basic protocol .",
    "the extension introduces two more messages : a _ verification query _ and",
    "a _ verification reply_. both types include a _ flow label _ and a _ nonce _",
    "( i.e. , a random number ) .    when router @xmath13 receives a filtering request , which asks for the blocking of a traffic flow from attacker @xmath4 to victim @xmath28 , @xmath13 verifies that the request is real before taking any action to satisfy it .",
    "if @xmath13 is the victim s gateway , this verification is trivial with appropriate ingress filtering .",
    "if @xmath13 is the attacker s gateway , verification is accomplished through the following `` 3-way handshake '' :    1 .",
    "router @xmath13 receives a filtering request , asking for the blocking of a traffic flow from attacker @xmath4 to victim @xmath28 .",
    "2 .   @xmath13 sends a verification query to @xmath28 , asking `` do you really not want this traffic flow ? ''",
    "@xmath28 responds to @xmath13 with a verification reply .",
    "the reply must include the same flow label and nonce included in the query .",
    "if the nonce on @xmath28 s reply is the same with the nonce on @xmath13 s query , @xmath13 accepts the request as real and proceeds to satisfy it .",
    "the `` 3-way handshake '' is further discussed in [ secure ] .",
    "aitf operation assumes that the victim s gateway can determine    * who is the attacker s gateway ( in order to propagate the request ) . * who is the next aitf node on the attack path ( in order to escalate , if necessary ) .",
    "these assumptions are met , if an efficient traceback technique as those described in @xcite @xcite is available .",
    "also aitf assumes that off - path traffic monitoring is not possible i.e. , if node @xmath27 is not located on the path from node @xmath4 to node @xmath28 , then @xmath27 can not monitor traffic sent on that path ( this assumption is necessary for the `` 3-way handshake '' ) .",
    "the basic idea of aitf is to push filtering of undesired traffic to the network closest to the attacker .",
    "that is , hold a service provider responsible for providing connectivity to a misbehaving client and have it do the dirty job .",
    "the question is , why would the attacker s service provider accept ( or at least be encouraged ) to do that ?",
    "if the attacker s service provider does not cooperate , it risks being disconnected by its own service provider .",
    "this makes sense for both of them : if @xmath22 in figure [ filterfig ] refuses to block its misbehaving client , the filtering burden falls on @xmath29 .",
    "thus , it makes sense for @xmath29 to consider @xmath22 a bad client and disconnect from it . on the other hand",
    ", this offers an incentive to @xmath22 to cooperate and block the undesired flow . otherwise , it will be disconnected by @xmath29 , which will result in all of its clients being dissatisfied",
    ".    moreover , aitf offers an economic incentive to providers to protect their network from the inside by employing appropriate ingress filtering .",
    "if a provider pro - actively prevents spoofed flows from exiting its network , it lowers the probability of an attack being launched from its own network , thus reducing the number of expected filtering requests it will later have to satisfy to avoid disconnection .    in short",
    ", aitf creates a cost vs quality trade - off for service providers : either they pay the cost to block the undesired flows generated by their few bad clients , or they run the risk of dissatisfying their legitimate clients , which are the vast majority .",
    "thus , the quality of a provider s service is now related to its capability to filter its own misbehaving clients .",
    "the greatest challenge with automatic filtering mechanisms is that compromised node @xmath27 may maliciously request the blocking of traffic from @xmath4 to @xmath28 , thereby disrupting their communication .",
    "aitf prevents this through the `` 3-way handshake '' described in [ handshake ] .",
    "the `` 3-way handshake '' does not exactly verify the authenticity of a filtering request .",
    "it only enables @xmath4 s gateway to verify that a request to block traffic from @xmath4 to @xmath28 has been sent by a node located on the path from @xmath4 to @xmath28 .",
    "a compromised router located on this path can naturally forge and snoop handshake messages to disrupt @xmath4-@xmath28 communication .",
    "however , such a compromised router can disrupt @xmath4-@xmath28 communication anyway , by simply dropping the corresponding packets .    in short ,",
    "aitf can not be abused by a compromised node to cause interruption of a legitimate traffic flow , unless that compromised node is responsible for routing the flow , in which case it can interrupt the flow anyway .      aitf scales with internet size , because it pushes filtering of undesired traffic to the leaves of the internet , where filtering capacity follows internet growth .    in most cases",
    ", aitf pushes filtering of undesired traffic to the provider(s ) of the attacker(s ) .",
    "thus , the amount of filtering requests a provider is asked to satisfy grows proportionally to the number of the provider s ( misbehaving ) clients .",
    "however , intuitively , a provider s filtering capacity also grows proportionally to the number of its clients . in short ,",
    "a provider s filtering capacity follows the provider s filtering workload .",
    "if the attacker s provider is itself compromised , aitf naturally fails to push filtering to it . instead , filtering is performed by another network , closer to the internet core .",
    "if this situation occurred often , then the scalability argument stated above would be false .",
    "fortunately , compromised routers are a very small percentage of the internet infrastructure .",
    "thus , aitf fails to push filtering to the attacker s provider with a very small probability .",
    "in this section we provide simple formulas that describe aitf performance . for lack of space and given that our formulas are very simple and intuitive , we defer any details to @xcite .",
    "aitf significantly reduces the _ effective bandwidth _ of an undesired flow ",
    "i.e. , the bandwidth of the undesired flow actually experienced by the victim .",
    "specifically , it can be shown that aitf reduces the effective bandwidth of an undesired flow by a factor of @xmath30 where @xmath31 is the number of non - cooperating time units . ]",
    "aitf nodes on the attack path , @xmath32 is attack detection time and @xmath33 is the one - way delay from the victim to its gateway .",
    "@xmath3 is the timeout associated with all filtering requests i.e. each filtering request asks for the blocking of a flow for @xmath3 time units .",
    "for example , if the only non - cooperating node on the attack path is the attacker , and if the one - way delay from the victim to its gateway is @xmath34 msec , for @xmath35 min , an aitf node can reduce the effective bandwidth of an undesired flow by a factor @xmath36 .",
    "may be significant the first time the undesired flow is detected .",
    "here , we ignore that initial overhead .",
    "detecting a reappearing undesired flow could be as fast as matching a received packet header to a logged undesired flow label i.e. , insignificant compared to the one - way delay to the victim s gateway . ]    here we only demonstrate this result for @xmath37 i.e. , when the only non - cooperating node on the attack path is the attacker : at time @xmath38 the attacker starts the undesired flow ; at time @xmath32 the victim detects it and sends a filtering request ; at time @xmath39 the victim s gateway temporarily blocks the flow and the victim stops receiving it ; the flow is eventually blocked by the attacker s gateway and released after time @xmath3 .",
    "thus , if the original bandwidth of the undesired flow is @xmath5 , its effective bandwidth is @xmath40 .",
    "when @xmath41 i.e. , when @xmath42 or more aitf routers close to the attacker are non - cooperating , the attacker can play `` on - off '' games : pretend to stop the undesired flow to trick the victim s gateway into removing its filter , then resume the flow etc .",
    "the victim s gateway detects and blocks such attackers by using its dram cache .",
    "an aitf node is guaranteed protection against a specific number of undesired flows , which depends on its contract with its service provider .",
    "specifically , it can be shown that if a client is allowed to send @xmath6 filtering requests per time unit to the provider , then the client is protected against @xmath43 simultaneous undesired flows . for example , for @xmath44 filtering requests per second and @xmath35 min ,",
    "the client is protected against @xmath45 simultaneous undesired flows .",
    "aitf enables a service provider to protect a client against @xmath46 undesired flows by using only @xmath47 filters .",
    "specifically , it can be shown that if a client is allowed to send @xmath6 filtering requests per time unit to the provider , the provider needs @xmath48 filters and a dram cache that can fit @xmath49 filtering requests in order to satisfy all the requests , where @xmath50 @xmath14 is the amount of time that elapses from the moment the victim s gateway installs a temporary filter until it removes it .",
    "the purpose of the temporary filter is to block the undesired flow until the attacker s gateway takes over .",
    "therefore , @xmath14 should be large enough to allow the traceback from the victim s gateway to the attacker s gateway plus the 3-way handshake .",
    "for example , suppose we use an architecture like @xcite , where traceback is automatically provided inside each packet .",
    "then traceback time is @xmath38 .",
    "if the 3-way handshake between the two gateways takes @xmath51 msec , for @xmath44 filtering requests per second and @xmath35 min , the service provider needs @xmath52 filters to protect a client against @xmath45 undesired flows .",
    "aitf requires a bounded amount of resources from the attacker s service provider .",
    "specifically , if a service provider is allowed to send @xmath7 filtering requests per time unit to a client , then the provider needs @xmath53 filters in order to ensure that the client satisfies all the requests . given these resources , the provider can filter @xmath54 simultaneous undesired flows generated by the client .",
    "for example , for @xmath55 filtering request per second and @xmath35 min , the provider needs @xmath56 filters for the client .",
    "this filtering request rate allows the provider to filter up to @xmath57 simultaneous undesired flows generated by the client .",
    "we have defined an attacker as the source of an undesired flow . by this definition ,",
    "an attacker is not necessarily a malicious / compromised node ; it is simply a node being asked to stop sending a certain flow .",
    "a legitimate aitf node must be provisioned to stop sending undesired flows when requested , in order to avoid disconnection .",
    "aitf requires a bounded amount of resources from the attacker as well .",
    "specifically , if a service provider is allowed to send @xmath7 filtering requests per time unit to a client , the client needs @xmath53 filters ( as many as the provider ) in order to satisfy all the requests .",
    "for example , for @xmath55 filtering request per second and @xmath35 min , the client needs @xmath56 filters .",
    "in @xcite mahajan _ et al . _ propose mechanisms for detecting and controlling high bandwidth traffic aggregates .",
    "one part of their work discusses how a node determines whether it is congested and how it identifies the aggregate(s ) responsible for the congestion .",
    "in contrast , we start from the point where the node has identified the undesired flow(s ) . in that sense ,",
    "their work and our work are complementary .",
    "another part of their work discusses how much to rate - limit an annoying aggregate due to a dos attack or a flash crowd .",
    "in contrast , our mechanism focuses on dos attack traffic and attempts to limit it to rate @xmath38 .",
    "the part of their work most related to ours proposes a cooperative _ pushback _ mechanism : a congested node attempts to rate - limit an aggregate by dropping a portion of its packets .",
    "if the drop rate remains high for several seconds , the node considers that it has failed to rate - limit the aggregate and asks its adjacent upstream routers to do it .",
    "if the recipient routers also fail to rate - limit the aggregate , they recursively propagate pushback further upstream .",
    "a pushback request is propagated hop by hop by the victim towards the attacker .",
    "in contrast , the propagation of an aitf filtering request involves only @xmath58 nodes : the victim , the victim s gateway , the attacker s gateway and the attacker  we claim that this allows aitf to scale with internet size .",
    "a pushback request does not force the recipient router to rate - limit the problematic aggregate ; it relies on its good will to cooperate .",
    "in contrast , aitf forces the attacker to discontinue the undesired flow and the attacker s service provider to filter the attacker or else risk disconnection  we claim that this makes aitf deployable .    in @xcite park and lee",
    "propose dpf ( distributed packet filtering ) , a distributed ingress - filtering mechanism for pro - actively blocking spoofed flows .",
    "in contrast , aitf aims at blocking _ all _ undesired  including spoofed  flows as close as possible to their sources .",
    "thus , it can not be replaced by dpf .",
    "on the other hand , dpf blocks most spoofed flows _ before _ they reach their destination i.e. , dpf is proactive , whereas aitf is reactive . in that sense , dpf and aitf",
    "are complementary .    in @xcite keromytis",
    "_ propose sos ( secure overlay services ) , an architecture for pro - actively protecting against dos attacks the communication between a pre - determined location and a specific set of users who have authorized access to communicate with that location .",
    "in contrast , aitf addresses the more general problem of protecting against dos attacks any location accessible to all internet users .",
    "finally , @xcite and @xcite propose traceback solutions i.e. , mechanisms that enable a victim to reconstruct the path followed by attack packets in the face of source address spoofing .",
    "as already mentioned , an efficient traceback mechanism is necessary to aitf operation .",
    "we presented aitf , an automatic filter propagation mechanism , according to which each autonomous domain ( ad ) has a filtering contract with each of its end - hosts and neighbor ads . a filtering contract with a neighbor",
    "provides a guaranteed , significant level of protection against dos attacks coming through that neighbor in exchange for a reasonable , bounded amount of router resources .      * given a filtering contract between a client and a service provider , which allows the client to send @xmath59 filtering requests per time unit to the provider , the provider can protect the client against a large number of undesired flows @xmath60 , by significantly limiting the effective bandwidth of each undesired flow .",
    "the provider achieves this by using only a modest number of filters @xmath61 . *",
    "given a filtering contract between a client and a service provider , which allows the provider to send @xmath62 filtering requests per time unit to the client , both the client and the provider need a bounded number of filters @xmath63 to honor their contract .",
    "we argued that aitf successfully deals with the biggest challenge to automatic filtering mechanisms : source address spoofing .",
    "namely , we argued that it is not possible for any malicious / compromised node to abuse aitf in order to interrupt a legitimate traffic flow , unless the compromised node is responsible for routing that flow , in which case it can interrupt the flow anyway .",
    "finally , we argued that aitf scales with internet size , because it pushes filtering of undesired traffic to the service providers of the attackers , unless the service providers are themselves compromised .",
    "fortunately , compromised routers are a very small percentage of internet infrastructure .",
    "thus , in the vast majority of cases , aitf pushes filtering of undesired traffic to the leaves of the internet , where filtering capacity follows internet growth .              kihong park and heejo lee . on the effectiveness of route - based packet filtering for",
    "distributed dos attack prevention in power law internets . in _ proceedigns of acm sigcomm 2001 _ , san diego , california , usa , august 2001 .",
    "alex  c. snoeren , craig partridge , luis  a. sanchez , christine  e. jones , fabrice tchakountio , stephen  t. kent , and w.  timothy strayer .",
    "hash - based ip traceback . in _ proceedigns of acm sigcomm 2001 _ , san diego , california , usa , august 2001 ."
  ],
  "abstract_text": [
    "<S> denial of service ( dos ) attacks are one of the most challenging threats to internet security . </S>",
    "<S> an attacker typically compromises a large number of vulnerable hosts and uses them to flood the victim s site with malicious traffic , clogging its tail circuit and interfering with normal traffic . at present </S>",
    "<S> , the network operator of a site under attack has no other resolution but to respond manually by inserting filters in the appropriate edge routers to drop attack traffic . </S>",
    "<S> however , as dos attacks become increasingly sophisticated , manual filter propagation becomes unacceptably slow or even infeasible .    in this paper , we present _ active internet traffic filtering _ </S>",
    "<S> , a new automatic filter propagation protocol . </S>",
    "<S> we argue that this system provides a guaranteed , significant level of protection against dos attacks in exchange for a reasonable , bounded amount of router resources . </S>",
    "<S> we also argue that the proposed system can not be abused by a malicious node to interfere with normal internet operation . </S>",
    "<S> finally , we argue that it retains its efficiency in the face of continued internet growth . </S>"
  ]
}
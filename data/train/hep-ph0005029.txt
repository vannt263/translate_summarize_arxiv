{
  "article_text": [
    "the precision of experimental data achieved at present colliders has in many cases reached or exceeded the per cent level .",
    "obviously a comparable accuracy on the theoretical side is needed in order to draw significant conclusions from such precise measurements . for many observables",
    "this means that a one - loop calculation is the lowest acceptable approximation .",
    "doing one - loop calculations by hand is laborious and error - prone and in some cases simply impossible .",
    "so for some time already , software packages have been developed to automate these calculations ( e.g.  @xcite ) .",
    "incidentally , full automation is possible only up to one loop since no algorithms generic enough for the computation of arbitrary multi - loop feynman diagrams are known at present .",
    "one remaining obstacle is that the existing packages generally tackle only part of the problem , and one still has to spend considerable effort adapting conventions etc .  to make them work together .    in this paper the three _ mathematica _",
    "packages _ feynarts _ , _ formcalc _ , and _ looptools _  are presented which work hand in hand .",
    "the user has to supply only small driver programs whose main purpose is to specify the necessary input parameters .",
    "this makes the whole system very `` open '' in the sense that the results are returned as _",
    "_  expressions which can easily be manipulated , e.g.  to select or modify terms .",
    "@xmath0 create the topologies width 0pt height 2.5ex depth 0pt + @xmath0 insert fields + @xmath0 apply the feynman rules + @xmath0 paint the diagrams & +   +   + @xmath0 contract indices width 0pt height 2.5ex depth 0pt + @xmath0 calculate traces + @xmath0 reduce tensor integrals + @xmath0 introduce abbreviations & +   +   + @xmath0 convert _ mathematica _ width 0pt height 2.5ex depth 0pt + output to fortran code + @xmath0 supply a driver program + @xmath0 library of loop integrals & @xmath1 _ looptools _",
    "+    -10bp    since one - loop calculations can range anywhere from a handful to several hundreds of diagrams ( particularly so in models with many particles like the mssm ) , speed is an issue , too .",
    "_ formcalc _ , the program which does the algebraic simplification , therefore uses _ form _",
    "@xcite for the time - consuming parts of the calculation . owing to _ form _",
    "s speed , _ formcalc _  can process , for example , the 1000-odd one - loop diagrams of w  w scattering in the standard model @xcite in about 5 minutes on an ordinary pentium pc .",
    "the following sections describe the main functions of each program .",
    "furthermore , the _ formcalc _  package contains two sample calculations in the electroweak standard model , @xmath2 @xcite and @xmath3 @xcite , which demonstrate how the programs are used together .",
    "_ feynarts _  is a _ mathematica",
    "_  package for the generation and visualization of feynman diagrams and amplitudes .",
    "the current version 2.2 is a much - expanded version of _ feynarts _  1 @xcite .",
    "the two most important new features are the generation of counter - term diagrams and the ability to deal with supersymmetric theories ( cf .  sect .",
    "[ sect : susy ] ) .",
    "( 190,275)(35,16 ) ( 150,411)(150,380 ) ( 150,335)(150,308 ) ( 150,251)(150,222 ) ( 150,175)(150,148 ) ( 150,101)(150,72 )    ( 200,50)(280,50 ) ( 279,50)(280,50 ) ( 180,32.8)[lb]further ( 180,28.8)[lt]processing    ( 210,260)(100,90,27 ) ( 210,300)(100,-90,-27 )    ( 62,410)(238,488).9 ( 90,280.8)[b]find all distinct ways ( 90,270.4)[b]of connecting incoming ( 90,260)[b]and outgoing lines ( 90,257.6)[t](createtopologies ) ( 150,360)(25,65)(0)1 ( 90,215.2)[]topologies ( 65,250)(235,310).9 ( 90,174.4)[b]determine all allowed ( 90,164)[b]combinations of fields ( 90,161.6)[t](insertfields ) ( 248,250)(377,310).9 ( 187,169.6)[b]draw the results ( 187,165.6)[t](paint ) ( 150,200)(25,65)(0)1 ( 90,119.2)[]diagrams ( 55,100)(245,150).9 ( 90,76.8)[b]apply the feynman rules ( 90,72.8)[t](createfeynamp ) ( 150,50)(25,65)(0)1 ( 90,29.6)[]amplitudes    -15bp    _ feynarts _  works in three basic steps , sketched in fig .",
    "[ fig : feynarts ] .",
    "the first step is to create all different topologies for a given number of loops and external legs .",
    "for example , to create all one - loop topologies for a @xmath4 process , the following call to createtopologies is used :    ....    top = createtopologies[1 , 1 - > 2 ] ....    in the second step , the actual particles in the model have to be distributed over the topologies in all allowed ways .",
    "e.g.  the diagrams for @xmath5 are produced with    `  ins  =  insertfields [  top , ` + `  v[2 ]  - >  f[4,3 ] ,  -f[4,3 ]  ] `    where f[4,3 ] is the @xmath6-quark , -f[4,3 ] its antiparticle , and ` v[2 ] ` the @xmath7 boson .",
    "the fields , their propagators , and their couplings are defined in a special file , the model file , which the user can supply or modify .",
    "the following model files are included in _",
    "feynarts _ : the electroweak standard model ( sm.mod ) @xcite , the same including qcd ( smqcd.mod ) , and in the background - field formulation ( smbgf.mod ) .",
    "these model files all include the full set of one - loop counter terms . a model file for the mssm is in preparation .",
    "the diagrams can be drawn with ` paint[ins ] ` , depending on the options either on screen , or in a postscript or latex  file .",
    "finally , the analytic expressions for the diagrams are obtained by    ....",
    "amp = createfeynamp[ins ] ....    an important feature of _ feynarts _  is that it distinguishes three levels of fields :     _ generic level _ , e.g.  the fermion f ,     _ classes level _ ,",
    "e.g.  the down - type quark f[4 ] ,     _ particles level _ , e.g.  the @xmath6-quark f[4,3 ] .",
    "this is useful for two reasons :    the kinematic structure of a coupling is fixed once the generic fields are specified .",
    "for example , all fermion  fermion ",
    "scalar couplings are of the form @xmath8 where @xmath9 are the chirality projectors .",
    "this means that most algebraic simplifications like the tensor reduction need to be carried out on the generic - level amplitude only .",
    "furthermore , it is more economic to perform index summations ( e.g.  over the fermion - generation index ) in a loop over classes - level amplitudes instead of generating many particles - level diagrams .",
    "_ feynarts _  produces very symbolic output which can not straightforwardly be implemented in a numerical program .",
    "its evaluation proceeds instead in two steps : first , algebraic simplification in _ mathematica _ ; then , translation into a fortran program which computes the squared matrix element and from this the desired quantities ( cross - sections , decay rates , asymmetries , etc . ) .",
    "the symbolic expressions for the diagrams are simplified algebraically with _",
    "formcalc _  which returns the results in a form well suited for numerical evaluation . specifically , _",
    "_  performs the following simplifications :     indices are contracted as far as possible ,     fermion traces are evaluated ,     open fermion chains are simplified using the + dirac equation ,     colour structures are simplified using the + su(@xmath10 ) algebra ,     the tensor reduction is done ,     the results are partially factored ,     abbreviations are introduced .    the internal structure of _ formcalc _  is simple : it prepares the symbolic expressions of the diagrams in an input file for _ form _ , runs _ form _ , and retrieves the results via the _ mathlink _ interface ( see fig .",
    "[ fig : fc ] ) .",
    "this is done completely without intervention by the user , i.e.  the user does not see the _ form _  code .",
    "_ formcalc _  thus combines the speed of _ form _  with the powerful instruction set of _ mathematica _  and the latter greatly facilitates further processing of the results .",
    "( 212,210)(-30,0 ) ( 0,165)(260,300).9 ( 10,225)(250,290 ) ( 91,193.2)[]_mathematica _ ( 32,172)[br]pro : ( 35.5,172)[bl]user friendly ( 32,160.3)[br]con : ( 35.5,160.3)[bl]slow on large expressions    ( 10,175)(95,215 ) ( 36.75,141.4)[]_feynarts _ ( 36.75,129.5)[]amplitudes    ( 165,175)(250,215 ) ( 145.25,141.4)[]_formcalc _ ( 145.25,129.5)[]results    ( 0,0)(260,110).9 ( 10,10)(250,76 ) ( 91,42.7)[]_form _ ( 32,21.7)[br]pro : ( 35.5,21.7)[bl]very fast for certain operations ( 32,9.8)[br]con : ( 35.5,9.8)[bl]not so user friendly    ( -40,156)(260,156)4 ( -40,300)(-3,300)4 ( -40,0)(-3,0)4    ( 95,192)(111,198)whitewhite ( 105,86)(111,198)whitewhite ( 149,192)(170,198)whitewhite ( 149,86)(155,198)whitewhite ( 105,86)(155,92)whitewhite    ( 90,198)(111,198 ) ( 111,198)(111,92 ) ( 111,92)(149,92 ) ( 149,92)(149,198 ) ( 149,198)(170,198 ) ( 170,198)(173,195 ) ( 173,195)(170,192 ) ( 170,192)(155,192 ) ( 155,192)(155,86 ) ( 155,86)(105,86 ) ( 105,86)(105,192 ) ( 105,192)(90,192 ) ( 90,192)(93,195 ) ( 93,195)(90,198 )    ( 61,128)(124,146 ) ( 65.1,95.2)[]input file    ( 136,128)(199,146 ) ( 116.9,95.2)[]_mathlink _    ( -20,255)(-20,296 ) ( -20,295)(-20,296 ) ( -20,202)(-20,162 ) ( -20,163)(-20,160 )    ( -5,170.8)[r]_formcalc _ ( -5,158.9)[r]user ( -5,148.4)[r]interface    ( -20,104)(-20,150 ) ( -20,149)(-20,152 ) ( -20,52)(-20,6 ) ( -20,7)(-20,4 )    ( -5,65.8)[r]internal ( -5,54.6)[r]_formcalc _ ( -5,43.4)[r]functions    -10bp    the main function in _ formcalc _  is oneloop ( the name is not strictly correct since it works also with tree graphs ) .",
    "it is used like this :    ....    <",
    "< formcalc `    amps = < < myamps.m    result = oneloop[amps ] ....    where it is assumed that the file myamps.m contains amplitudes generated by _ feynarts_. note that oneloop needs no declarations of the kinematics of the underlying process ; it uses the information _ feynarts _  hands down .",
    "even more comprehensive than oneloop , the function processfile can process entire files .",
    "it collects the diagrams into blocks such that index summations ( e.g.  over fermion generations ) can later be carried out easily , i.e.  only diagrams which are summed over the same indices are put in one block .",
    "this nicely complements the generation of classes - level diagrams in _ feynarts _ , which leaves the index summations to the numerical evaluation in order to reduce the number of diagrams .",
    "processfile is invoked e.g.  as    ....    processfile[\"vertex.amp \" , \" vertex \" ] ....    which reads the _ feynarts _  amplitudes from the input file vertex.amp and produces output files of the form vertex_id_.m , where _ i d _ is some identifier for a particular block .",
    "the output of oneloop or processfile is in general a linear combination of loop integrals with prefactors that contain model parameters , kinematic variables , and abbreviations introduced by _",
    "formcalc_. such abbreviations are introduced for spinor chains , scalar products of vectors , and epsilon tensors contracted with vectors",
    ". a term in the output could for instance look like    ` c0i[cc0 ,  mw2 ,  mw2 ,  s ,  mw2 ,  mz2 ,  mw2 ]  ` + `  (  -4  alfa2  cw2  mw2/sw2  s  abbsum16  + ` + `  32  alfa2  cw2/sw2  s`@xmath11 `  abbsum28  + ` + `  4  alfa2  cw2/sw2  s`@xmath11 `  abbsum30  - ` + `  8  alfa2  cw2/sw2  s`@xmath11 `  abbsum7  + ` + `  alfa2  cw2/sw2  s(t - u )  abb1  + ` + `  8  alfa2  cw2/sw2  s(t - u )  abbsum29  ) `    the first line represents the one - loop integral @xmath12 , which is multiplied with a linear combination of abbreviations like abb1 or abbsum29 with certain coefficients .",
    "these coefficients contain kinematical variables like the mandelstam variables s , t , and u and model parameters , e.g.  @xmath13 .",
    "the automatic introduction of abbreviations is a very important feature which can drastically reduce the size of an amplitude , particularly so because the abbreviations are nested in three levels .",
    "here is an example :    ( 200,60)(5,10 ) ( 0,60)[bl ]  abbsum29 = abb2 + abb22 + abb23 + abb3 ( 97,56)(128,70 ) ( 97,56)(45,46 ) ( 45,46)(45,34 ) ( 128,56)(180,46 ) ( 180,46)(180,34 )    ( 113,36)[b]abb22 = pair1 pair3 pair6 ( 118,32)(149,46 ) ( 118,32)(70,22 ) ( 70,22)(70,10 ) ( 149,32)(197,22 ) ( 197,22)(197,10 )    ( 134,11)[b]pair3 = pair[e[3],k[1 ] ]    the definitions of the abbreviations can be retrieved by abbreviations [ ] which returns a list of rules such that result//.abbreviations [ ] gives the full , unabbreviated expression .      for numerical evaluation , the _ mathematica _  expressions produced by _",
    "formcalc _  need to be translated into a fortran program .",
    "( they could , in principle , be evaluated in _ mathematica _  directly , but this becomes rather slow for large amplitudes . ) the translation is done by the program _",
    "numprep _ , which is part of the _ formcalc _  package .",
    "the philosophy of _ numprep _  is that the user should not have to modify the generated code .",
    "this means that the code has to be encapsulated ( i.e.  no loose ends the user has to bother with ) , and that all necessary subsidiary files ( include files , makefile ) have to be produced , too .    from the point of view of the fortran programmer who wants to use the generated code in his program ,",
    "the output of _ numprep _  is a single subroutine called    squaredme(@xmath14 )    which takes as input the external momenta , polarization vectors , and helicities , and returns the squared matrix element . to obtain actual numerical results from the generated code",
    ", one needs in addition a driver program whose task is to initialize the model parameters , set up the kinematics , invoke the squaredme subroutine , perform necessary phase - space integrations , and finally write the results to a file .",
    "a sample driver program for @xmath15 processes is included in _",
    "formcalc_.    finally , the generated code has to be linked with the _ looptools _  library which provides the one - loop functions .",
    "_ looptools _  supplies the actual numerical implementations of the one - loop integrals needed for programs made from the _ formcalc _  output .",
    "it is based on the reliable package _ ff _ @xcite and provides in addition to the scalar integrals of _ ff _ also the tensor coefficients in the conventions of @xcite . _",
    "_  offers three interfaces : fortran , c++ , and _ mathematica _ , so most programming tastes should be served .",
    "using the _ looptools _  functions in fortran and c++ is very similar . in fortran",
    "it is necessary to include the file looptools.h in every function or subroutine ( for the common blocks ) . in c++",
    ", clooptools.h must be included once . before using any _ looptools _  function ,",
    "ffini must be called and at the end of the calculation ffexi may be called to obtain a summary of errors .",
    "it is of course possible to change parameters like the scale @xmath16 from dimensional regularization ; this is described in detail in the manual @xcite",
    ".    a very simple fortran program would for instance be    ....         program simple    # include \" looptools.h \"         call ffini         print * , b0(1000d0,50d0,80d0 )         call ffexi         end ....    the c++-version of this program is    ....    # include \" clooptools.h \" ....    ....    main ( )    {      ffini ( ) ;      cout < < b0(1000.,50.,80 . ) < < \" \\n \" ;      ffexi ( ) ;    } ....    the _ mathematica _  interface is even simpler to use :    ....    in[1]:= install[\"looptools \" ] ....    ....",
    "in[2]:= b0[1000 , 50 , 80 ] ....    ....",
    "out[2]= -4.40593 + 2.70414 i ....",
    "special emphasis has been placed on the possibility to do calculations in supersymmetric models with _ feynarts _  and _ formcalc_. in particular the following two fundamental problems become relevant in supersymmetric theories :    susy theories in general contain majorana fermions and hence fermion - number - violating couplings ( e.g.  quark  squark  gluino ) .",
    "the textbook prescription of ordering the dirac matrices opposite to their occurrence along the arrows on fermionic lines obviously breaks down in this case since one can not define a fermion - number flow .",
    "( put differently , majorana - fermion lines have no arrow . )    _ feynarts _  uses the `` flipping - rule '' algorithm @xcite : instead of traversing the fermion lines along the fermion - number flow imposed from the outside , it _ chooses _ a particular direction for each fermion chain .",
    "if it later turns out that , for a dirac fermion , the chosen direction is opposite to the actual fermion flow , it applies a so - called flipping rule .",
    "dimensional regularization , the default regularization scheme employed by _ formcalc _ , is known to break supersymmetry @xcite .",
    "_ formcalc _",
    "has two regularization schemes built in which are chosen with the variable $ dimension .",
    "the default is $ dimension = d which corresponds to dimensional regularization .",
    "putting $ dimension = 4 switches to constrained differential renormalization @xcite .",
    "the latter technique is equivalent at the one - loop level to regularization by dimensional reduction @xcite and is hence suited for calculations in susy models .",
    "all three packages require _ mathematica _  2.2 or above ; _ formcalc _",
    "needs in addition _ form _ , preferably version 2 or above ; _ looptools _  needs a fortran compiler and gcc / g++ .",
    "the packages should compile and run without change on any unix platform .",
    "they are specifically known to work under dec unix , hp - ux , linux , solaris , and aix . a comprehensive manual which explains installation and usage is included in each package .",
    "all three packages are open - source programs and stand under the gnu library general public license .",
    "they are available from"
  ],
  "abstract_text": [
    "<S> this article describes three _ mathematica _  </S>",
    "<S> packages for the automatic calculation of one - loop feynman diagrams : the diagrams are generated with _ </S>",
    "<S> feynarts _ , algebraically simplified with _ formcalc _ , and finally evaluated numerically using the _ looptools _  package . </S>",
    "<S> the calculations are performed analytically as far as possible , with results given in a form well suited for numerical evaluation . </S>",
    "<S> the latter is straightforward with the utility programs provided by _ formcalc _  ( e.g.  for translation into fortran code ) and the implementations of the one - loop integrals in _ </S>",
    "<S> looptools_. the programs are also equipped for calculations in supersymmetric models . </S>"
  ]
}
{
  "article_text": [
    "the present paper is dedicated to the description of algorithms for fast arithmetics in skew polynomial rings .",
    "since they were first introduced by ore , skew polynomials and their variants have been widely studied in several areas of mathematics .",
    "in particular , skew polynomials over finite fields have various applications in coding theory  @xcite , cryptography  see @xcite , for @xmath0-adic galois representations  @xcite .",
    "fast arithmetics for manipulating these objects is useful for such applications , and has been improved over time since the first breakthrough paper on computational skew polynomials over finite fields , due to giesbrecht @xcite .",
    "let @xmath1 be a field and let @xmath2 be a finite extension of @xmath1 , endowed with the endomorphism @xmath3 .",
    "we assume that @xmath3 has order @xmath4 and that @xmath5 .",
    "we consider the ring @xmath6 $ ] of skew polynomials with coefficients in @xmath2 .",
    "this is a non commutative ring where the relation @xmath7 holds for all @xmath8 ( for more detail about the definitions , see section [ subs : defi ] ) .",
    "the main problem addressed in this paper is the fast multiplication of elements of @xmath6 $ ] .",
    "the complexity of algorithms is described in terms of the number of elementary operations in @xmath1 with respect to the degree @xmath9 of the skew polynomials to be multiplied , and the degree @xmath10 of @xmath2 over @xmath1 .",
    "* state of the art . *",
    "the nave method for multiplication of skew polynomials of degree @xmath11 yields an algorithm that has complexity @xmath12 operations in @xmath1 . in @xcite ,",
    "this complexity is improved to @xmath13 .",
    "let @xmath14 denote the exponent of matrix multiplication .",
    "the authors of the present paper gave several algorithms for multiplication in @xcite , with best complexity @xmath15 achieved for @xmath16 .",
    "the most recent results by puchinger and wachter - zeh @xcite give a bound of @xmath17 operations in @xmath1 for multiplication in @xmath6 $ ] , which improves on the previous results @xcite when @xmath18 , which is the most relevant case for applications in coding theory ( see @xcite ,  4.2 ) . in the context of differential operators ( which share many similarities with skew polynomials ) , benoit , bostan and van der hoeven have obtained a complexity of @xmath19 ( see @xcite , theorem 1 ) for multiplication in @xmath20\\langle\\partial\\rangle$ ] .",
    "we expect that this complexity should be doable in @xmath6 $ ] as well , but we have only achieved it for @xmath21 .    *",
    "contributions of the paper .",
    "* this paper s main algorithm improves the complexity of the best known algorithms for multiplication in @xmath6 $ ] to @xmath15 when @xmath21 . for @xmath18 ,",
    "this gives a complexity of @xmath22 operations in @xmath1 .",
    "this is quasi - optimal in the sense that matrix multiplication can be reduced to skew polynomial multiplication ( this is for example a consequence of proposition  [ prop : evalbasis ] below ) , so that any improvement on the exponent of skew polynomial multiplication would lead to a similar improvement for matrix multiplication .",
    "we also design a new algorithm for multiplication of polynomials of small degree @xmath23 in @xmath6 $ ] , whose complexity is @xmath24 .    we also show that our method can be used to improve the best known complexities of various related problems , such as multi - point evaluation , minimal subspace polynomial , and interpolation which are studied in @xcite .",
    "we also improve the complexities for greatest common divisors and least common multiples .",
    "* organization of the paper .",
    "* the first section of the paper focuses on elementary operations for skew polynomials with normal bases : evaluation and interpolation .",
    "more precisely , if @xmath25 $ ] , then @xmath26 is an endomorphism of the @xmath1-algebra @xmath2 , and the map @xmath27 is a morphism of @xmath1-algebras . in this section ,",
    "we describe how we can compute efficiently @xmath26 using a normal basis and , conversely , how to recover @xmath28 ( the reduction modulo @xmath29 of ) @xmath28 from the datum of @xmath26 ( see proposition [ prop : evalbasis ] ) .",
    "we also look into more detail how the can solve the same evaluation / interpolation problems with @xmath28 of small degree @xmath30 at only the first @xmath30 elements of a normal basis .    in the second section ,",
    "we present our algorithm for fast multiplication of skew polynomials .",
    "first , we study how the multiplication can be done efficiently modulo @xmath29 through evaluation / interpolation on a normal basis and matrix multiplication .",
    "we generalize this study to multiplication modulo @xmath31 for any irreducible polynomial @xmath32 $ ] .",
    "this allows us to give an algorithm for multiplication of skew polynomials of degree @xmath9 that works in @xmath33 operations in @xmath1 ( where @xmath34 denotes the complexity of multiplication of square matrices of size @xmath10 ) .    in the third section ,",
    "we give several applications to fast arithmetics for skew polynomials .",
    "we show how we can perform general multi - point evaluation , minimal subspace polynomial , and interpolation , as well as usual operations on skew polynomials such as ( extended ) euclidean division , greatest common divisor , least common multiple .",
    "in this section , we present the notion of skew polynomials , and we study the problems of their evaluation and interpolation using normal bases .",
    "let @xmath1 be a field and let @xmath2 be an tale @xmath1-algebra ( since @xmath1 is a field , this just means that @xmath2 is isomorphic to a product of field extensions of @xmath1 ) .",
    "let @xmath3 be an automorphism of @xmath2 .",
    "we assume that @xmath3 has finite order @xmath10 and that @xmath5 .",
    "the ring @xmath6 $ ] of skew polynomials with coefficients in @xmath1 is the ring whose underlying group is @xmath35 $ ] and whose multiplication is determined by the relation @xmath36 the ring @xmath6 $ ] is not commutative unless @xmath37 .",
    "* examples . *",
    "the following situations are examples of the general setting that we are considering :    * @xmath38 , and @xmath3 is the shift operator @xmath39 , * ( extensions of finite fields ) @xmath40 , @xmath41 and @xmath42 is the frobenius endomorphism of @xmath2 , * ( cyclotomic extensions ) @xmath43 and @xmath44 where @xmath45 is a primitive @xmath46-th root of unity and @xmath0 is prime ; @xmath3 is a generator of the galois group @xmath47 ( which is the cyclic group @xmath48 ) . *",
    "( kummer extensions ) @xmath1 contains a primitive @xmath10-th root @xmath49 of @xmath50 , @xmath51 a)$ ] for some suitable @xmath52 and @xmath3 takes @xmath53 a$ ] to @xmath54 a$ ] .",
    "the two last examples are addressed in  @xcite and have applications to space - time codes .",
    "usually , @xmath2 is assumed to be a field extension of @xmath1 .",
    "we are considering the more general context of an tale @xmath1-algebra because it is stable under base change : if @xmath55 is tale and @xmath56 is an extension of @xmath1 , then @xmath57 is tale over @xmath56 ( but it is not a field in general , even if @xmath2 is ) .",
    "this feature is used mostly in section [ subs : modmultz ] , and does not make the classical results any more difficult to prove .",
    "a _ normal basis _ of @xmath55 is a basis @xmath58 of @xmath2 over @xmath1 such that @xmath59 ( the indices being taken modulo @xmath10 ) .",
    "assuming @xmath3 has order @xmath10 and @xmath5 , @xmath2 has a normal basis .",
    "the problem of the construction of normal bases has been widely studied , see for example @xcite for the case of finite fields , and @xcite for the case of number fields . in both cases of cyclotomic extensions and kummer extensions ,",
    "it is easy to exhibit a normal basis : in the cyclotomic case , the basis starting with @xmath60 does the job while in the kummer case , one can take : @xmath61{a } +   \\sqrt[r]{a^2 } + \\cdots + \\sqrt[r]{a^{r-1 } } = \\frac{a-1}{\\sqrt[r]{a}-1}.\\ ] ] from now on , we assume that we have fixed a normal basis @xmath62 of @xmath2 together with a working basis in which the elements of @xmath2 are represented .",
    "let @xmath63 be the matrix of change of basis from the working basis to the normal basis .",
    "we assume that the multiplication in @xmath2 and the application of @xmath3 can be both performed in @xmath64 operations in @xmath1 in the working basis .",
    "we introduce a relation between polynomials that allows to evaluate the linear map associated to a skew polynomial at the elements of the normal basis @xmath58 .",
    "[ lem : iso1 ] the map : @xmath65 & \\rightarrow & { \\text{\\rm end}}_k(l)\\\\ a = \\sum_{i\\geq 0}a_ix^i & \\mapsto & a(\\sigma ) = \\sum_{i \\geq 0 } a_i \\sigma^i \\end{array}\\ ] ] is a homomorphism of @xmath1-algebras .",
    "it induces an isomorphism of @xmath1-algebras : @xmath66/(x^r { - } 1 ) \\simeq { \\text{\\rm end}}_k(l).\\ ] ]    the first map is a homomorphism because for all @xmath8 , @xmath67 in @xmath68 $ ] . since @xmath3 has order @xmath10 , @xmath29 lies in the kernel of this map , so @xmath69 is well - defined . both @xmath6/(x^r { - } 1)$ ] and @xmath70",
    "are @xmath1-vector spaces of dimension @xmath71 , hence it suffices to prove injectivity . by artin",
    "s lemma on independence of characters , @xmath72 is a linearly independent family over @xmath2 , so that if @xmath73 for some @xmath74 $ ] of degree @xmath75 , then @xmath76 .    lemma [ lem : iso1 ] shows that multiplication of skew polynomials modulo @xmath29 is essentially the same as multiplication of @xmath77 matrices over @xmath1 , assuming that the isomorphism @xmath69 can be computed efficiently ( in both ways ) .",
    "we now address this question .    throughout this paper",
    ", we will denote @xmath78 for @xmath79 if @xmath25 $ ] and @xmath80 .",
    "let @xmath81 be a new ( commutative ) variable and consider the classical polynomial ring @xmath82 $ ] .",
    "let @xmath83 $ ] be the polynomial whose coefficients are the elements of the normal basis .",
    "[ prop : evalbasis ] let @xmath84 $ ] and let @xmath85 $ ] .",
    "let @xmath86 and let @xmath87 . then @xmath88    by linearity , it is enough to check that the relation holds when @xmath89 for @xmath90 .",
    "let @xmath90 .",
    "we have @xmath91 , where indices are taken modulo @xmath10 .",
    "+ on the other hand , doing the calculations modulo @xmath92 , @xmath93 .",
    "proposition [ prop : evalbasis ] , although elementary , shows that the isomorphism @xmath69 of lemma [ lem : iso1 ] can be computed efficiently .",
    "moreover , it also shows how the inverse isomorphism can be computed .",
    "more precisely :    [ cor : complexity_mod1 ] multiplication in @xmath6/(x^r { - } 1)$ ] can be performed in @xmath94 operations in @xmath1 .",
    "let @xmath95/(x^r { - } 1)$ ] .",
    "let @xmath96 $ ] be the commutative polynomials with the same coefficients as @xmath97 respectively .",
    "let @xmath98/(t^r { - } 1)$ ] and @xmath99/(t^r { - }   1)$ ] .",
    "both @xmath100 and @xmath101 can be computed in @xmath102 operations in @xmath1 .",
    "now let @xmath103 ( resp .",
    "@xmath104 ) be the matrix whose @xmath105-th column is the decomposition of the @xmath105-th coefficient of @xmath100 ( resp .",
    "@xmath101 ) in the working basis . by proposition [ prop : evalbasis ] ,",
    "@xmath103 ( resp @xmath104 ) is the matrix of @xmath106 ( resp .",
    "@xmath107 ) where the codomain in endowed with the normal basis and the codomain is endowed with the working basis .",
    "set @xmath108 ; this product can be computed within @xmath94 operations in @xmath1 .",
    "we know that @xmath109 is the matrix of @xmath110 where again the codomain in endowed with the normal basis and the codomain is endowed with the working basis .",
    "let @xmath111 and compute @xmath112 , which can also be computed in @xmath102 operations in @xmath1 .",
    "then , again by proposition [ prop : evalbasis ] , @xmath113 .",
    "this shows that the global complexity of this computation is @xmath94 .    in section [ sec : fastmult ]",
    ", we will generalize this algorithm and show how it yields a fast multiplication algorithm for skew polynomials ( not only in the modular case ) .",
    "[ subs : interp_small ]    * evaluation . * we shall see later how we can compute the product of two skew polynomials of small degree @xmath9 by determining how their product acts on @xmath114 elements of a normal basis . with this motivation in mind ,",
    "let us describe how we can compute efficiently the image of the first few elements of a normal basis under the action of the skew polynomial @xmath115 $ ] . recall that , using proposition [ prop : evalbasis ] with @xmath116 , and writing @xmath117 , we know that @xmath118 where @xmath119 .",
    "let @xmath120 , and let @xmath121 $ ] of degree @xmath30 .",
    "we are interested in computing only @xmath122 for @xmath123 .",
    "[ lem : firstcoeffs ] let @xmath121 $ ] of degree @xmath30 and let @xmath124 for @xmath123 .",
    "let @xmath125 and @xmath126 . then , for @xmath127 : @xmath128 where @xmath129 and @xmath130 ( the products being taken modulo @xmath92 ) .",
    "since @xmath131 , and @xmath132 for @xmath133 , we are left with the formula : @xmath134 and both sums correspond precisely to the coefficients of @xmath135 and @xmath136 respectively .",
    "[ cor : eval_small ] let @xmath121 $ ] of degree @xmath137 , then the collection of @xmath138 can be computed in @xmath139 operations in @xmath1 .    by lemma [ lem : firstcoeffs ]",
    ", the evaluation of @xmath140 at @xmath141 can be obtained by two multiplications of ( classical ) polynomials of degree @xmath30 with coefficients in @xmath2 , hence with complexity @xmath142 operations in @xmath1 .",
    "* interpolation . *",
    "still bearing in mind the aim of multiplying two skew polynomials by composing the corresponding linear maps , we are interested in the following question of interpolation : given @xmath30 values @xmath143 , find @xmath121 $ ] of degree @xmath30 such that @xmath144 for all @xmath145 .",
    "let us explain first how the solution to this problem can be computed when @xmath146 . in this case ,",
    "the skew polynomial we are looking for is the so - called _ minimal subspace polynomial _ corresponding to the span @xmath147 .",
    "a generic fast algorithm for solving this problem has been proposed by puchinger and wachter - zeh in  @xcite , theorem 26 ; it has complexity @xmath148 operations in @xmath1 . in the special case we are considering",
    ", we shall see that this can be improved to @xmath142 .",
    "let @xmath149 , so that @xmath150 .",
    "if @xmath140 is such that @xmath151 for @xmath123 , then there exists @xmath152 $ ] of degree @xmath153 such that @xmath154 .",
    "of course , the converse is also true , and this equation is equivalent to : @xmath155 with @xmath156 and @xmath157 . the latter equation can be solved thanks to the extended euclidean algorithm . indeed , computing the gcd of @xmath92 and @xmath158 and stopping after the first remainder of degree @xmath159 , we get a relation of the form : @xmath160 with @xmath161 and @xmath162 , which yields a solution to the problem when @xmath163 .",
    "this computation can be done in @xmath164 operations in @xmath1 thanks to the half - gcd algorithm ( see @xcite , theorem 11.5 ) .    in the general case ,",
    "let @xmath165 , and let @xmath166 .",
    "we are looking for @xmath167 $ ] with degree @xmath137 and @xmath152 $ ] with degree @xmath168 such that @xmath169 .",
    "this equation is equivalent to @xmath170 .",
    "[ lem : normalsequence ] let @xmath171 , @xmath172 and for @xmath173 , let @xmath174 be the remainder of the euclidean division of @xmath175 by @xmath176 . then for @xmath177 , @xmath178 .",
    "consider the map @xmath179_{<i } \\times l[t ] _ { < i-1 } & \\longrightarrow & l[t]_{<r + i -1}/l[t ] _ {",
    "< r- i}\\\\ ( u , v ) & \\mapsto & ur_1 + v r_0 \\end{array}\\ ] ] it is well - defined , linear , and both sides have the same dimension over @xmath2 . moreover ,",
    "the determinant of this map is nonzero if and only if @xmath178 ( see @xcite ,  4.1 ) .",
    "therefore , it is sufficient to prove that @xmath180 is injective .",
    "let us consider @xmath181 in the kernel of @xmath180 . by definition , @xmath182",
    ", so that @xmath183 , where @xmath184 . by proposition [ prop : evalbasis ] ,",
    "the skew polynomial @xmath185 ( whose coefficients are the coefficients of @xmath186 ) evaluates to @xmath187 at @xmath188 .",
    "hence , it is a left multiple of the minimal subspace polynomial @xmath109 of @xmath189 .",
    "since @xmath190 is linearly independent over @xmath1 , @xmath109 has degree @xmath191 ( it is a generator of the kernel of the @xmath1-linear map @xmath68 \\rightarrow l^i$ ] mapping @xmath28 to @xmath192 ) .",
    "in particular , since @xmath193 , @xmath194 , so @xmath195 and @xmath180 is injective",
    ". hence @xmath196 and @xmath174 has the required degree .",
    "[ thm : interp_small ] let @xmath197 and @xmath165",
    ". then there exists @xmath198 $ ] , with @xmath199 , @xmath200 and @xmath201 such that @xmath202 moreover , algorithm outputs @xmath186 and @xmath203 for a cost of @xmath204 operations in @xmath1 .",
    "the result follows from the correctness of algorithm [ algo : interp_small ] , but is also a theoretical consequence of lemma [ lem : normalsequence ] .",
    "indeed , this lemma shows that there exists a linear combination of @xmath205 , @xmath206 whose higher degree terms have coefficients @xmath207 , and the bounds on the degrees follow from the fact that for @xmath208 , @xmath209 with @xmath210 , @xmath211 .",
    "algorithm [ algo : interp_small ] is an adaptation of the half - gcd algorithm , which computes simultaneously the sequence of the remainders in the extended euclidean division or @xmath212 and @xmath213 , and the combination of @xmath213 and @xmath212 that has the given higher degree terms .",
    "[ algo : interp_small ] @xmath214 + @xmath215 , @xmath216 +",
    "@xmath217 + @xmath218 + make the euclidean divisions : + @xmath219 + @xmath220 + @xmath221 +    thanks to corollary [ cor : eval_small ] , theorem [ thm : interp_small ] and algorithm [ algo : interp_small ] , we can solve the problem of evaluation and interpolation at the first @xmath30 elements of an incomplete normal basis in @xmath164 operations in @xmath1 .",
    "in this section , we study the problem of multiplying efficiently two elements @xmath222 $ ] both of degree @xmath11 .",
    "the complexity is the number of operations in @xmath1 , given as a function of @xmath9 and @xmath223 .",
    "we consider the ring @xmath6 $ ] .",
    "let @xmath225 , and let @xmath226 .",
    "we are now going to describe an algorithm for multiplication in @xmath6 $ ] modulo @xmath227 .    [",
    "prop : modmulta ] the map @xmath65 & \\longrightarrow & l[x,\\sigma]/(x^r { - } 1)\\\\ a(x ) = \\sum a_i x^i & \\mapsto & a(\\lambda x ) = \\sum_{i } \\lambda\\sigma(\\lambda)\\cdots \\sigma^{i-1}(\\lambda ) a_ix^i \\end{array}\\ ] ] factors as an isomorphism @xmath6/(x^r { - } a ) \\simeq l[x,\\sigma]/(x^r { - } 1)$ ] .",
    "this maps @xmath228 to @xmath229 , thus mapping @xmath227 to @xmath230 .",
    "[ cor : modmulta ] multiplication in @xmath6/(x^r { - } a)$ ] can be performed in @xmath94 operations in @xmath1 .    by proposition [ prop : modmulta ] and proposition [ prop :",
    "evalbasis ] , it is enough to show that for @xmath121/(x^r { - } a)$ ] , @xmath231 can be computed in @xmath94 operations in @xmath1 . for this",
    "we write @xmath232 and remark that the @xmath233 s ( @xmath234 ) can be all computed within @xmath102 operations in @xmath1 thanks to the recurrence formula @xmath235 . now evaluating the formula @xmath236",
    "allows us to compute @xmath231 in @xmath102 operations in @xmath1 .",
    "we could use the proof of corollary [ cor : modmulta ] directly to design an algorithm for multiplication modulo @xmath227 .",
    "such an algorithm would require computing @xmath237 and @xmath238 each time we use it to compute @xmath239 .",
    "alternatively , we can slightly modify the basis on which we are evaluating the corresponding maps , which can provide a gain if there are many multiplications to do modulo @xmath227 .",
    "let @xmath225 , and let @xmath240 .",
    "let @xmath241 , and for @xmath242 , @xmath243 , such that @xmath244 is a basis of @xmath2 over @xmath1 . by construction",
    ", we have for @xmath245 , @xmath246 , and @xmath247 . for example",
    ", if @xmath248 is a normal basis of @xmath2 over @xmath1 , then @xmath249 and @xmath250 defines a suitable basis .",
    "now , let @xmath251 $ ] .",
    "[ prop : evalbasisa ] let @xmath84 $ ] and let @xmath252 .",
    "let @xmath85 $ ] .",
    "let @xmath253 .",
    "then @xmath254    the proof is similar to that of proposition [ prop : evalbasis ] . by linearity ,",
    "it is enough to check that the relation holds for @xmath89 for @xmath90 .",
    "let @xmath90 .",
    "we have : @xmath255 on the other hand , doing the calculations modulo @xmath256 : @xmath257 hence , @xmath258 for all @xmath90 , so @xmath259 for all @xmath121/(x^r { - } a)$ ] .",
    "algorithm ` modmult ` below makes precise the algorithmical content of proposition  [ prop : evalbasisa ] ; it uses a primitive @xmath260 that takes as input a tuple @xmath261 and outputs the @xmath262 matrix whose @xmath105-th column are the coordinates of @xmath263 is the working basis .",
    "[ algo : modmult ] @xmath226 + @xmath264 + @xmath249 + @xmath265 + @xmath266 + @xmath267 + @xmath268 + @xmath269 +    algorithm computes the product @xmath239 in @xmath68/(x^r{-}a)$ ] in @xmath94 operations in @xmath1 .",
    "multiplication of polynomials in @xmath2 modulo @xmath270 requires @xmath102 operations in @xmath1 .",
    "multiplication of matrices of size @xmath10 in @xmath1 requires @xmath94 operations in @xmath1 .",
    "hence the global complexity is @xmath94 operations in @xmath1 .",
    "let @xmath271 be a finite extension .",
    "define @xmath272 ; it is an tale @xmath56-algebra endowed with the endomorphism @xmath273 that extends @xmath3 and has order @xmath10 .",
    "the algebra @xmath274 is not necessarily a field ( for instance , when @xmath275 , it splits as a product @xmath276 ) .",
    "it is the reason why we needed to place this paper in the more general setting of tale algebras .",
    "let @xmath277 .",
    "set @xmath278 .",
    "we assume that @xmath279 .",
    "let @xmath32 $ ] be the minimal polynomial of @xmath280 .",
    "we want to generalize the results of  [ subs : fastmod ] to multiplication modulo @xmath31 ( in  [ subs : fastmod ] , we have @xmath281 , @xmath282 and @xmath225 )",
    ". note that if @xmath58 is a normal basis of @xmath55 , then @xmath283 is a normal basis of @xmath284 .",
    "[ lem : extension ] the canonical morphism @xmath285 : @xmath6 \\rightarrow l'[x,\\sigma]$ ] induces an isomorphism @xmath286/z(x^r)\\simeq   l'[x,\\sigma ' ] /(x^r",
    "{ - } a).\\ ] ]    first note that @xmath287 is a two - sided ideal of @xmath288 $ ] , and that the canonical morphism @xmath6 \\rightarrow l'[x,\\sigma]$ ] induces a morphism @xmath6 \\rightarrow l'[x,\\sigma]/(x^r { - } a)$ ] which maps @xmath228 to @xmath280 , hence the latter surjective .",
    "moreover , by @xmath1-linearity , @xmath31 lies in the kernel of this map .",
    "we then get a surjective morphism of @xmath1-algebras @xmath6/z(x^r ) \\rightarrow l'[x,\\sigma]/(x^r { - } a)$ ] . since both sides have dimension @xmath289 over @xmath1 , this morphism is an isomorphism .",
    "we are now back exactly in the situation of section [ subs : fastmod ] , where @xmath1 has been replaced by @xmath56 and @xmath2 by @xmath274 : all the computations can be carried out the same way , and passing back through the isomorphism of lemma [ lem : extension ] , we can perform fast multiplication modulo @xmath31 .",
    "the algorithm is as follows :    [ algo : modmultz ] write @xmath290 , @xmath291 + let @xmath292 , @xmath293 + compute @xmath294 using ` modmult ` in @xmath295/(x^r { - } a)$ ] endowed with the normal basis @xmath296 + write @xmath297 +    algorithm [ algo : modmultz ] computes the product @xmath239 in @xmath6/(z(x^r))$ ] with @xmath298 operations in @xmath1 .",
    "let @xmath222 $ ] be two skew polynomials .",
    "we recall that our aim is to design a fast algorithm for computing the product @xmath299 .",
    "we set @xmath300 .",
    "* multiplication in large degree . *",
    "we first assume that the polynomial @xmath301 has degree larger than @xmath10 . in this case , the idea is to evaluate the @xmath28 modulo various @xmath302 using algorithm ` modmultz ` and then to reconstruct the result using a non commutative version of the chinese remainder theorem .",
    "the precise result we need is given by the following proposition .",
    "[ prop : skew_crt ] let @xmath303 $ ] be pairwise coprime polynomials , and let @xmath304 .",
    "then the natural map : @xmath286/z(x^r ) \\rightarrow",
    "l[x,\\sigma]/z_1(x^r ) \\times \\cdots \\times l[x,\\sigma]/z_m(x^r)\\ ] ] is an isomorphism of @xmath1-algebras .",
    "since the domain and the codomain have the same dimension over @xmath1 , it is enough to prove the surjectivity .",
    "for @xmath191 between @xmath50 and @xmath305 , consider @xmath306/z_i(x^r)$ ] and write it : @xmath307 where the @xmath308 s are polynomials with coefficients in @xmath2 .",
    "for a fixed @xmath309 , let @xmath310 $ ] be a polynomial such that the congruence @xmath311 holds in the _ commutative _ ring @xmath312 .",
    "we can therefore write @xmath313 for some polynomials @xmath314 $ ] . noting that the inclusion @xmath82 \\to l[x,\\sigma]$ ] , @xmath315 is a ring homomorphism ( _ i.e. _ the multiplication on @xmath82 $ ] agrees with that on @xmath6 $ ] ) , we deduce that the equality @xmath316 holds in @xmath6 $ ] . multiplying it by @xmath317 on the right and summing up over @xmath105",
    ", we end up with @xmath318 for all @xmath191 .",
    "surjectivity is proved .",
    "[ rmq : skew_crt ] the above proof is constructive .",
    "more precisely it shows that solving the chinese remainder problem of degree @xmath9 in @xmath6 $ ] with _ central moduli _ reduces to solving @xmath10 independant chinese remainder problems of degree @xmath319 in the _ commutative _ ring @xmath320 $ ] and therefore can be achieved for a cost of @xmath321 operations in @xmath2 , corresponding to @xmath322 operations in @xmath1 ( see  @xcite ,  10.3 ) .",
    "it remains now to explain how the moduli @xmath302 s can be constructed .",
    "we will do it in two different concrete contexts : first , the case of finite fields and second , the case of number fields .    _",
    "the case of finite fields .",
    "we assume that @xmath1 and @xmath2 are finite fields and write @xmath323 for the cardinality of @xmath1 .",
    "we consider an auxiliary finite extension @xmath56 of @xmath1 of degree @xmath30 and build the compositum @xmath324 .",
    "we endow @xmath274 with the uniform measure .",
    "we assume that @xmath30 is chosen sufficiently large so that : @xmath325 asymptotically the latest condition is fulfiled as soon as @xmath30 grows at least as fast as @xmath326 .",
    "[ lem : proba ] let @xmath327 be an integer such that @xmath328 .",
    "let @xmath329 be random independant elements of @xmath274 .",
    "then the @xmath330 s all generate @xmath56 over @xmath1 and are pairwise non - conjugate over @xmath1 with probability at least @xmath331 .",
    "the tale algebra @xmath274 splits as a product @xmath332 where @xmath333 is a finite extension of @xmath56 of degree @xmath334 and @xmath335 is a positive integer .",
    "moreover if @xmath336 decomposes as @xmath337 , we have : @xmath338 observe that the norm map @xmath339 takes the value @xmath187 only at @xmath187 .",
    "hence the probability that @xmath339 vanishes is @xmath340 .",
    "therefore @xmath341 vanishes with probability @xmath342 . as for the nonzero values of @xmath56",
    ", they are reached by @xmath341 with uniform probability because @xmath341 is a surjective group homomorphism , _",
    "i.e. _ @xmath343 = \\left(1 - \\frac 1{q^{nf}}\\right)^g   \\cdot \\frac 1 { q^n - 1}\\ ] ] for all @xmath344 , @xmath345 .",
    "let @xmath346 be the number of elements of @xmath56 that generate @xmath56 over @xmath1 .",
    "the probability that a fixed @xmath347 satisfy the requirement @xmath348 is then @xmath349 . assuming that this occurs , the probability that the @xmath330 s are pairwise non - conjugate is : @xmath350 putting all together , we find the probability of success : @xmath351 which is at least : @xmath352 clearly @xmath353 is the cardinality of the union of all strict subextensions of @xmath56 . therefore :",
    "@xmath354 the latter inequality coming from the fact that @xmath30 has at most @xmath355 divisors . from",
    ", we derive @xmath356 . on the other hand",
    ", it follows from our assumptions that @xmath357 and @xmath358 . combining with , we find that the probability of success is at least @xmath331 .",
    "[ algo : globalmult ] choose @xmath30 and @xmath56 such that eq",
    ".   holds and @xmath359 + set @xmath360 + pick @xmath361 at random + compute @xmath28 such that @xmath362 and @xmath363[line : crt ]",
    "// _ use proposition [ prop : skew_crt ] _",
    "+    let @xmath222 $ ] of degree @xmath21 .",
    "then algorithm computes the product @xmath239 within @xmath33 operations in @xmath1 with probability of success at least @xmath331 .",
    "observe first that @xmath30 can be chosen such that @xmath364 .",
    "computing the product in @xmath6/z_i(x^r)$ ] requires @xmath365 operations in @xmath1 .",
    "moreover by remark  [ rmq : skew_crt ] , the reconstruction ( line [ line : crt ] ) can be done for a cost of @xmath366 operations in @xmath1 .",
    "the overall cost of ` mult ` is then @xmath15 as announced .",
    "the fact that the probability of success is at least @xmath331 follows from lemma [ lem : proba ] .    _ the case of number fields .",
    "_ we assume that @xmath1 and @xmath2 are number fields . it is then known that the image of the norm map @xmath367 has index @xmath10 in @xmath368 .",
    "more precisely , class field theory teaches us that @xmath369 is canonically isomorphic to the galois group of the abelian extension @xmath55 , _ i.e. _ to @xmath370 .",
    "in particular , the image of @xmath371 is infinite meaning that if we take a finite set of random elements @xmath372 , it is likely that the norm of the @xmath373 s will be pairwise distinct .",
    "we can then reapply the strategy used in the case of finite field without having to work with an auxiliary extension @xmath56 .",
    "we end up this way with a probabilistic las vegas algorithm whose complexity is @xmath374 operations in @xmath1 and whose probability of success is high .",
    "* multiplication in small degree .",
    "* the idea for fast multiplication in small degree is that if a skew polynomial has degree @xmath23 , it is determined by its values on @xmath375 linearly independent elements of @xmath2 .",
    "hence , starting with two skew polynomials @xmath376 whose degrees add up to @xmath9 , we should be able to compute their product by composing of two @xmath1-linear maps over vector spaces of dimension @xmath375 .",
    "however , we know some efficient algorithm for evaluating @xmath377 only on a subspace of @xmath2 which is spanned by the first vectors of a normal basis . for this reason , it order to compute @xmath378 , we shall need to know the whole of the linear map @xmath379 ( because @xmath380 are in general nothing to do with a truncated normal basis ) .",
    "[ algo : smalldegmult ] set @xmath381 + compute @xmath382 //",
    "_ use corollary  [ cor : eval_small ] _ + compute the matrix of @xmath26 // _ use proposition  [ prop : evalbasis ] _ + compute @xmath383 //",
    "_ matrix multiplication of sizes @xmath384 by @xmath385 _",
    "+ compute @xmath25 $ ] s.t .",
    "@xmath386 and @xmath387 .",
    "// _ use algorithm _ +    the complexity of the above algorithm is given by the next theorem",
    "whose proof is straightforward after what we have already done ( the bottleneck comes from the matrix multiplication step ) .",
    "let @xmath97 such that @xmath388 .",
    "then algorithm [ algo : smalldegmult ] computes the product @xmath239 with @xmath389 operations in @xmath1 .    * conclusion .",
    "* as a conclusion , several algorithms with different complexities are available for the multiplication of skew polynomials . precisely , we have designed in this paper one algorithm of complexity @xmath390 when @xmath21 and an another algorithm of complexity @xmath391 when @xmath392 .",
    "apart from that , wachter - zeh s algorithm @xcite performs the same computation with complexity @xmath393 without any assumption on @xmath9 .",
    "the corresponding complexity curves are represented on figure  [ fig : complexity ] .",
    "( 0.25,1.4 ) rectangle ( 1.37,2.9 ) ; ( 0.4,1.6)(1.3,1.6 ) ; ( 0.35,1.6)(0.35,2.8 ) ; at ( 1.31,1.6 ) @xmath9 ; at ( 0.35,2.83 ) cost ;    ( 0.4,1.5 ) rectangle ( 1.3,2.8 ) ; ( 0,1)(0.8,2.4 ) ; ( 0.8,2.4)(2,4.5 ) ; ( 0,2)(0.8,2.4 ) ; ( 0.8,2.4)(1,2.5)(1.3,2.8 ) ; at ( 1,2.5 ) @xmath394 ; ( 0.8,2.4)(1.2,2.8 ) ;    at ( 0.58,2.04 ) @xmath395 ; ( 0.35,2.5)(1,2.5)(1,1.6 ) ; ( 0.8,2.4)(0.8,1.6 ) ; at ( 1,1.6 ) @xmath396 ; at ( 0.8,1.6 ) @xmath397 ; at ( 0.35,2.5 ) @xmath34 ; at ( 1,2.38 ) @xmath398 ; at ( 1.2,2.67 ) @xmath399 ; at ( 1.05,2.7 ) @xmath400 ;    putting all together , we find that the product in @xmath6 $ ] can be performed within @xmath401 operations in @xmath1 where : @xmath402 as already discussed in the introduction , we expect to lower the complexity to @xmath403 in the range @xmath392 and , until now , we have not succeeded in doing so .",
    "classically , fast multiplication algorithms can be used to speed up many other computations .",
    "this general philosophy works for skew polynomials as well and was concretized in @xcite ,  3.2 .",
    "below , we analyze briefly the impact of the algorithms designed above in this paper .    in order to state our complexity results more elegantly , we introduce the function @xmath404 defined by : @xmath405 a direct computation shows that : @xmath406 the function @xmath404 ( viewed as a function of the variable @xmath9 ) is the smallest function above @xmath407 whose `` log - log slope '' is always at least @xmath50 ( see figure  [ fig : complexity ] ) .",
    "the notation comes from this interpretation",
    ".      * euclidean division . *",
    "an algorithm that performs ( right ) euclidean divisions in @xmath6 $ ] and takes advantage of fast multiplication algorithm is depicted in @xcite ,  3.2.1 ( algorithm ` reuclideandivision ` ) .",
    "proposition 3.2.3 of _ loc .",
    "_ extends readily to the settings of this paper and shows that the aforementioned algorithm has a complexity cost of @xmath412 operations in @xmath1 .",
    "* gcd and lcm computation . *",
    "the classical half - gcd algorithm that we already mentioned above ( see  [ subs : interp_small ] and @xcite ,  11 ) works in the same way to compute left and right gcd s of skew polynomials .",
    "the precision corresponding algorithm is written in @xcite ,  3.2.2 ( algorithm ` fastextendedrgcd ` )",
    ".      a careful look at the algorithm ` fastextendedrgcd ` shows that its complexity in operations in @xmath1 is bounded by @xmath413 where @xmath413 satisfies the recurrence relation : @xmath414 by induction , it follows that for @xmath415 , @xmath416 taking @xmath417 , we get @xmath418 as expected .      *",
    "minimal subspace polynomial .",
    "* let @xmath419 be a family of elements of @xmath2 which is free over @xmath1 .",
    "we are interesting in computing the unique monic polynomial @xmath420 $ ] of degree @xmath9 such that @xmath421 for all @xmath422 .",
    "lemma [ lem : evalrem ] shows that the polynomial @xmath28 we are looking for is nothing but the left - lcm of the polynomials @xmath426 . as a consequence",
    ", @xmath28 can be computed for a cost of @xmath427 operations in @xmath1 using fast algorithms for lcm computation together with a `` tree division strategy '' @xcite ,  10.1 .",
    "* general multievaluation .",
    "* we consider again a free family @xmath419 of elements of @xmath1 .",
    "the general multievaluation problem consists in evaluating a given polynomial @xmath428 $ ] of degree @xmath9 at the @xmath429 s .",
    "thanks to lemma  [ lem : evalrem ] , the value @xmath430 agrees with @xmath429 times the remainder of the right division of @xmath28 by we are then reduced to compute the reduction of a given polynomials modulo some given moduli .",
    "this can be done efficiently using the strategy of @xcite ,  10.1 for a cost of @xmath412 operations in @xmath1 .",
    "if @xmath9 are @xmath10 have the same order of magnitude , one can preferably compute the matrix of @xmath26 using the formula of proposition [ prop : evalbasis ] and derive from it the values of the @xmath430 s thanks to a single matrix multiplication .",
    "the cost of the resulting algorithm is @xmath94 .      *",
    "general interpolation .",
    "* we keep the family @xmath419 and consider in addition some values @xmath431 . we address the question of computing a polynomial @xmath28 of degree at most @xmath432 such that @xmath433 for all @xmath191 .",
    "thanks to lemma  [ lem : evalrem ] , the above problem reduces to solve the following chinese remainder system : @xmath434 which again can be done for a cost of @xmath412 operations in @xmath1",
    ".      * gabulin codes . *",
    "the solution sketched above to the general multievaluation problem allows us to encode messages in the framework of ( generalized ) gabidulin codes @xcite in complexity @xmath435 where @xmath30 is the length of the code .",
    "( better complexities are possible when the dimension of the code is much smaller than its length . ) in the similar fashion , efficient decoding is also possible using the key equation together with the half - gcd algorithm .",
    "the resulting algorithms run in @xmath436 operations in @xmath1 where @xmath30 and @xmath437 denotes the length and the dimension of the gabidulin code respectively ."
  ],
  "abstract_text": [
    "<S> we describe an algorithm for fast multiplication of skew polynomials . it is based on fast modular multiplication of such skew polynomials , for which we give an algorithm relying on evaluation and interpolation on normal bases . </S>",
    "<S> our algorithms improve the best known complexity for these problems , and reach the optimal asymptotic complexity bound for large degree . </S>",
    "<S> we also give an adaptation of our algorithm for polynomials of small degree . </S>",
    "<S> finally , we use our methods to improve on the best known complexities for various arithmetics problems . </S>"
  ]
}
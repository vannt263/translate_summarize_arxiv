{
  "article_text": [
    "finite element method is one of the popular numerical methods for solving the partial differential equations numerically on digital computers .",
    "the standard finite element method is well - suited to solve elliptic partial differential equations efficiently @xcite . but this method produces oscillations for hyperbolic partial differential equations ; for example , governing equations of convection dominated flows require additional stabilization for the standard finite element based discretization . for such flows , many stabilized finite element methods are available in the literature like streamline - upwind petrov galerkin ( supg ) , discontinuous - galerkin method , taylor galerkin method , galerkin least - squares method etc .",
    "the detailed discussion about these methods are given in @xcite . among them , supg method is one of the popular stabilized finite element methods used to solve high speed compressible flows governed by euler equations @xcite .",
    "this method introduces diffusion along the streamline direction of the flow which makes it stable .",
    "apart from diffusion requirement along the streamline , supg method needs additional diffusion across the high gradient regions especially for multidimensional case .",
    "this diffusion can be controlled by using a shock capturing parameter which senses the shock region and adds the diffusion appropriately .",
    "many nonlinear discontinuity capturing terms are available in the literature @xcite ) .    in the finite volume methods , kinetic schemes ( also known as boltzmann scheme )",
    "are interesting alternatives for the popular riemann solvers .",
    "development of these schemes are based on the fact that one can recover the euler equations by applying a suitable moment method strategy to the boltzmann equation .",
    "the boltzmann equation is given by @xmath0 where @xmath1 and @xmath2 are velocity distribution function and molecular velocity respectively .",
    "the right hand side is the collision term and left hand side consists of an unsteady term and a convection term .",
    "the well - known bgk model simplifies the collision term and converts the otherwise integro - differential equation to a partial differential equation with a relaxation source term @xcite . using an operator splitting strategy by which the solution of the boltzmann equation is split into a convection step and a collision step and further employing an instantaneous relaxation to equilibrium in the collision step leads to a simplification which is often used in boltzmann schemes .",
    "the moments of the resulting boltzmann equation then leads to euler equations of gas dynamics , with the equilibrium distribution @xmath3 being a maxwellian .",
    "the euler equations can then be written in the following moment form .",
    "@xmath4 here @xmath5 is an appropriate moment and @xmath6 is the moment function vector .",
    "one can also obtain the burgers equation using same procedure stated above by defining an appropriate equilibrium distribution function .",
    "the advantage of this procedure is , instead of dealing with a nonlinear hyperbolic system of equations ( euler equations ) we are dealing with a linear scalar equation ( boltzmann equation without collision term ) .",
    "there are many kinetic schemes available in the literature like beam scheme of sanders & prendergast @xcite , the method of rietz @xcite , the equilibrium flux method of pullin @xcite , kinetic flux vector splitting ( kfvs ) method of deshpande @xcite , the compactly supported distribution based methods of kaniel @xcite and perthame @xcite , the peculiar velocity based upwind ( pvu ) method of raghurama rao & deshpande @xcite and the bgk scheme of prendergast & xu @xcite .",
    "these methods were developed in the framework of finite difference or finite volume methods .",
    "the application of finite element methods in the framework of kinetic schemes is of currently ongoing interest , with some of the works in this category being due to deshpande & pironneau @xcite and deshpande @xcite , yu & dai @xcite , khobalatte & leyland @xcite , tang & warnecke @xcite , liu ans xu @xcite , ren _",
    "@xcite , gassner @xcite .    in this paper",
    "an attempt has been made to take advantage of the strategy of kinetic schemes for developing an efficient supg scheme in the framework of boltzmann schemes . along with this novel scheme ( ksupg ) , we have also developed a simple shock capturing parameter which senses the jump inside the element for 2d euler equations . however , unlike the traditional supg method , the shock capturing parameter is needed only for 2d euler equations ( not in one dimension ) and not even for 2d burgers equation .",
    "constructing the stabilization parameter @xmath7 ( which is the intrinsic time scale ) in mutidimensional supg framework is not a trivial task .",
    "many methods are available in the literature @xcite .",
    "but , in the proposed ksupg scheme @xmath7 is defined for both scalar and vector equations simply from the linear scalar formulation .",
    "the efficiency of the new scheme is demonstrated by solving various test cases .",
    "this paper is arranged as follows . in section 2",
    "governing equations for high speed flows ( euler equations ) and scalar burgers equation are given .",
    "section 3 and 4 give the 1d and 2d explicit ksupg weak formulation for both burgers equation and euler equations .",
    "in section 5 , a simple shock capturing parameter is introduced .",
    "section 6 explains the spectral stability analysis for explicit ksupg scheme .",
    "an implicit ksupg formulation for 1d and 2d euler equations is given in section 7 followed by section 8 where various numerical test cases for both explicit and implicit formulation are solved . before ending section 8 , comparison for explicit and implicit ksupg schemes",
    "is made based on the number of iterations required to bring down the residue below the specified tolerance limit , the computational cost and the sparsity pattern of the coefficient matrix of global system of equations .",
    "the governing equations are for the inviscid compressible flows , given by euler equations as @xmath8\\ ] ] where @xmath9^t$ ] is the conserved variable vector and @xmath10^t$ ] is the inviscid flux vector .",
    "@xmath11 are density , velocity components in @xmath12 and @xmath13 directions , total energy and pressure respectively and @xmath14 is a kronecker delta .",
    "total energy is given by @xmath15 note that @xmath16 is an inviscid flux jacobian matrix for the domain @xmath17 ( where @xmath18 is the spatial dimension ) with boundary @xmath19 and final time is given by @xmath20 .",
    "as the eigenvalues of @xmath21 are real and eigenvectors are linearly independent , the system of equations is hyperbolic . beyond being hyperbolic ,",
    "these equations are nonlinear and produce shock waves , expansion waves and contact discontinuities which need to be resolved in numerical simulations .",
    "we also consider a scalar hyperbolic conservation law as @xmath22\\ ] ] where @xmath23 is the conserved variable .",
    "the fluxes @xmath24 can be linear or nonlinear .",
    "one example is the inviscid burgers equation in the the fluxes are nonlinear and produce shock waves and expansion waves .",
    "the standard galerkin finite element approximation for molecular velocity distribution function is @xmath25 where the domain is divided into @xmath26 elements . @xmath27 defining the appropriate test and trial functions spaces as @xmath28 and @xmath29 where @xmath30 is the dirichlet boundary , the weak formulation is written as , find @xmath31 such that @xmath32 @xmath33 where @xmath34 .",
    "the global system of equations are obtained as @xmath35 where basis functions @xmath36 .",
    "it is important to note that , the test function is enriched with additional term which is multiplied only with the convection term .",
    "that gives a required diffusion term .    in matrix form , @xmath37 where mass matrix @xmath38 , convection matrix @xmath39 , diffuion matrix @xmath40 and neumann boundary condition @xmath41 are given by @xmath42 all the integrals",
    "are evaluated with full gauss - quadrature integration .",
    "taking moments with the suitable moment function vector @xmath6 @xmath43 equation is the semi - discrete weak formulation .",
    "the 1d burgers equation is given by    @xmath44\\ ] ]    for the sake of convenience , we write the flux @xmath45 as @xmath46 with @xmath47 . in case of one dimensional burgers equation @xmath48 and maxwellian distribution function to recover the burgers equation as a moment from the boltzmann equation is given by @xmath49 where @xmath50 is constant to recover the linear convection equation and is a function of @xmath23 , _",
    "i.e. _ , @xmath51 to recover the inviscid burgers equation .",
    "for one dimensional problem @xmath52 .",
    "let us now evaluate the terms for the case of one dimensional burgers equation .",
    "@xmath53    @xmath54    @xmath55    where @xmath56 and @xmath57 .",
    "note that , since no energy equation is involved ( no pressure and temperature terms ) so , @xmath58 is just a constant value calculated from the standard maxwellian distribution function .",
    "moments of last expression lead to the neumann boundary condition in macroscopic variable @xmath23 .    substituting these values in equation ,",
    "we get @xmath59 where @xmath60 is the neumann boundary condition in macroscopic variable .      in this work finite difference approach",
    "is adopted for temporal discretization using @xmath61 method as @xmath62    \\right ) \\nonumber \\\\ & + \\theta \\left ( cc^nu^n    + \\frac{h}{2 } d \\left [ c^{n+1}u^{n+1}\\,\\text{erf}(s ) + \\frac{u^{n+1}}{\\sqrt{\\pi \\beta } } e^{-s^2 }   \\right ]   \\right ) + u_n = 0\\end{aligned}\\ ] ] thus , @xmath63 gives an explicit method and @xmath64 gives an implicit method .",
    "semi - implicit methods can be obtained with @xmath65 .",
    "for example , @xmath66 gives crank - nicolson method .",
    "the 1d euler equations are given by @xmath67 where @xmath68 are the solution vector and the flux vector respectively .",
    "for recovering the 1d euler equations as moments of the boltzmann equation , the maxwellian distribution function is given by @xmath69 where @xmath2 is the molecular velocity , @xmath70 is the internal energy variable corresponding to the non - translational degrees of freedom and @xmath71 is the average internal energy corresponding to the non - translational degrees of freedom which is given by @xmath72 and @xmath73 is the ratio of specific heats .    for 1d euler equations , moment function vector @xmath6",
    "is defined as @xmath74 with the maxwellian @xmath75 the other terms in weak formulation given by equation can be obtained as @xmath76 @xmath77    @xmath78    taking the first integral term @xmath79 similarly , second integral term can be evaluated as @xmath80 where @xmath81 here , @xmath82 , @xmath83 . substituting these values in equation and then simplifying we get @xmath84 substituting these values in we get @xmath85      temporal discretization",
    "is done using @xmath61 method with @xmath63 as @xmath86 in the above discretized form the flux vector @xmath87 is written as @xmath88 where @xmath89 is the flux jacobian matrix given by @xmath90\\ ] ]      the global nonlinear fully discretized equation of the form @xmath91 can be linearized by using picard iteration technique as @xmath92 then , the linearized system of equations is solved using bi - conjugate gradient stabilized method .",
    "the standard galerkin finite element approximation for molecular velocity distribution function is @xmath25 where the domain is divided into @xmath26 elements . @xmath27",
    "defining the test and trial functions spaces as @xmath93 and @xmath29 where @xmath30 is the dirichlet boundary , the weak formulation is written as , find @xmath31 such that @xmath32 @xmath94   \\right )   \\ , d\\omega_i   = 0\\end{aligned}\\ ] ] where @xmath95 and @xmath96 .",
    "the global system of equations are obtained as @xmath97    \\right )   \\ , d\\omega    = 0\\ ] ] or @xmath98 where basis functions @xmath36 .",
    "again , the enriched terms present in the test function are multiplied only with convective terms which gives diffusion terms in @xmath99 , @xmath100 directions and cross - diffusion terms in @xmath101 directions .",
    "+ in matrix form , @xmath102 where @xmath103 @xmath104 all integrals are evaluated using full gauss - quadrature integration .",
    "taking moments @xmath105 now lets evaluate these moments for 2d burgers equation and 2d euler equations .",
    "the 2d burgers equation is given by @xmath106 is written as @xmath107 where @xmath108 and @xmath109 can be functions of @xmath23 for obtaining nonlinearity or can be constants for keeping them as linear .",
    "maxwellian distribution function for recovering the 2d burgers equation as a moment of the boltzmann equation is given by @xmath110 here , @xmath48 and value of @xmath58 is fixed as unity .",
    "for 2d burgers equation one can evaluate the integrals as @xmath111 @xmath112 @xmath113 @xmath114 @xmath115      \\\\",
    "< \\psi , \\text{sign}(v_2)\\ , v_2 f^m > & = \\int_{-\\infty}^{\\infty}\\int_{-\\infty}^{\\infty } \\text{sign}(v_2)\\,v_2 f^m \\ , dv_1   dv_2 \\nonumber \\\\ & = \\sqrt{\\frac{\\beta}{\\pi } } u \\left [ \\frac{e^{-s_2 ^ 2}}{\\pi } + c_2\\text{erf}(s_2 )   \\right ]   \\\\",
    "< \\psi , \\text{sign}(v_2)\\,v_1 f^m >   & = \\int_{-\\infty}^{\\infty}\\int_{-\\infty}^{\\infty } \\text{sign}(v_2)\\,v_1 f^m \\ , dv_1   dv_2 \\nonumber \\\\",
    "& = \\sqrt{\\frac{\\beta}{\\pi } } uc_1 \\text{erf}(s_2 )   \\\\ < \\psi ,",
    "\\text{sign}(v_1)\\,v_2 f^m >   & = \\int_{-\\infty}^{\\infty}\\int_{-\\infty}^{\\infty } \\text{sign}(v_1)\\,v_2 f^m \\ , dv_1   dv_2 \\nonumber \\\\ & =    \\sqrt{\\frac{\\beta}{\\pi } } uc_2 \\text{erf}(s_1 ) \\end{aligned}\\ ] ]      the 2d euler equations are given by @xmath116 where @xmath117 are the solution vector and the flux vectors in @xmath99 and @xmath100 directions resptively .    in case of 2d euler equations , the maxwellian distribution function is given as @xmath118 where @xmath119 and @xmath120 are molecular velocities in @xmath99 and @xmath100 directions and @xmath71 is defined as @xmath121 the vector @xmath6 is defined as @xmath122 and @xmath123 .",
    "integrals are evaluated as @xmath124 @xmath125 flux vector @xmath126 is further decompose by using homogenity property @xmath127 where @xmath128   \\nonumber\\ ] ] @xmath129 similarly , flux vector @xmath130 is further decompose by usign homogenity property @xmath131 where @xmath132   \\nonumber\\ ] ]    @xmath133    @xmath134    @xmath135    @xmath136+\\frac{2u_1}{\\beta } e^{-s_1 ^ 2 } + \\frac{u_1 ^ 2}{\\sqrt{\\beta } } \\text{erf}(s_1 ) \\sqrt{\\pi } \\right )   \\\\ \\end{array } \\right   \\}\\end{aligned}\\ ] ]    similarly , @xmath137+\\frac{2u_2}{\\beta } e^{-s_2 ^ 2 } + \\frac{u_2 ^ 2}{\\sqrt{\\beta } } \\text{erf}(s_2 ) \\sqrt{\\pi } \\right ) \\end{array } \\right   \\}\\end{aligned}\\ ] ]    as usual temporal discretization is done by using @xmath61 method with @xmath138 for explicit ksupg scheme .",
    "the nonlinear system of equations is linearized using picard iteration technique and is solved by using bi - conjugate gradient stabilized method .",
    "in case of multidimensional ksupg method , diffusion along streamline direction is not sufficient to suppress the oscillations near high gradient region .",
    "hence additional diffusion terms with a shock capturing parameter is required which can sense these high gradient regions and adds additional diffusion .",
    "there are many shock capturing parameters available in the literature @xcite . in this work we present a simple gradient based shock capturing parameter as follows .",
    "we define a simple element - wise gradient based shock capturing parameter @xmath139 which introduces diffusion along high gradient directions .",
    "figure  [ fig:4nq ] ( a ) shows a typical four node quadrilateral element . as shown in figure , the maximum change in @xmath6 ( where @xmath6 could be density , temperature or even pressure ; in present work , density is used for all numerical test cases because density is the only primitive variable which jumps across all the three waves : shocks , expansion waves and contact disctonintuies ) occurs across node 1 and 3 .",
    "the element based shock capturing parameter is then defined for node 1 and 3 as    [ h ! ]     @xmath140    where subscripts 1 and 3 represent node numbers . for nodes 2 and 4 ,",
    "it is defined as @xmath141 here @xmath142 . for most of the test cases",
    "@xmath143 works fine . at element level matrix form",
    ", the shock capturing parameter is given by    @xmath144\\ ] ]    the upper and lower bound on the value @xmath145 is given by @xmath146 it is important to note that , the addition of extra shock capturing term in the weak formulation makes the formulation inconsistent with the original equation .",
    "thus , we define @xmath139 such that as @xmath147 , @xmath139 should disappear .",
    "this condition is achieved by including @xmath148 in the numerator , which vanishes as we refine the mesh .",
    "similarly , one can define such a delta parameter for triangular elements shown in figure  [ fig:4nq ] ( b ) .",
    "the additional diffusion term along with the shock capturing parameter is then given by @xmath149 where @xmath150 is the global matrix obtained by assembly and @xmath151 are the diffusion matrices in @xmath12 direction respectively .",
    "these diffusion matrices are defined in 2d euler ksupg formulation .",
    "stability analysis of a numerical scheme gives the acceptable value of time step @xmath152 within which the scheme is stable . in other words , error does not grow with time .",
    "unlike von neumann stability analysis , spectral stability analysis includes the boundary points too . in the following analysis",
    ", we consider the 2d weak formulation of a linear equation .",
    "the global system of equation can be written as @xmath153 where @xmath154 is amplification matrix and @xmath155 , @xmath156 are the numerical solution at time level @xmath157 and @xmath158 respectively .",
    "let @xmath159 be the exact solution , then the error @xmath160 is given by @xmath161 substituting this in equation one can obtain @xmath162 @xmath163 rearranging , we get @xmath164 for stable solution @xmath165 which gives @xmath166 .",
    "we use the following relation @xmath167 is the spectral radius of amplification matrix .    thus , error @xmath168 remains bounded when the maximum eigenvalue of amplification matrix @xmath154 is less than or equal to unity . to find @xmath154 matrix , we use explicit weak formulation for 2d scalar linear problem which is given by @xmath169   u^n   \\right .",
    "\\nonumber \\\\ &   \\left .",
    "+ d_{xy } ( c_2 \\text{erf}(s_1)+ c_1 \\text{erf}(s_2 ) )   u^n    +   d_y \\left [ \\frac{e^{-s_2 ^ 2}}{\\pi } + c_2\\text{erf}(s_2 )   \\right ]   u^n \\right\\ } = 0    \\nonumber\\end{aligned}\\ ] ] here @xmath108 and @xmath109 are constants . rearranging above equation",
    ", we get @xmath170   \\right .",
    "\\right.\\nonumber \\\\ &   \\left .",
    "\\left . + d_{xy }    ( c_2 \\text{erf}(s_1)+ c_1 \\text{erf}(s_2 ) ) + d_y   \\left [ \\frac{e^{-s_2 ^ 2}}{\\pi } + c_2\\text{erf}(s_2 )   \\right ]   \\right\\ } \\right ) u^n   \\nonumber\\end{aligned}\\ ] ] which gives matrix @xmath154 as @xmath171    \\right .",
    "\\nonumber \\\\ &   \\left . \\left .",
    "\\left.+ d_{xy }   ( c_2 \\text{erf}(s_1)+ c_1 \\text{erf}(s_2 ) ) + d_y \\left [ \\frac{e^{-s_2 ^ 2}}{\\pi } + c_2\\text{erf}(s_2 )   \\right ] \\right\\ } \\right ) \\right\\ } / m   \\nonumber\\end{aligned}\\ ] ]    using the stability condition given by equation , we get @xmath172 where @xmath173   +    d_{xy } ( c_2 \\text{erf}(s_1)+ c_1 \\text{erf}(s_2 ) ) + d_y \\left [ \\frac{e^{-s_2 ^ 2}}{\\pi } + c_2\\text{erf}(s_2 )   \\right]\\ ] ]    the maximum eigenvalue @xmath174 ( which is the absolute maximum of all eigenvalues ) is computed numerically using rayleigh quotient over a @xmath175 grid for 2d linear convection equation with unity wavespeeds in both directions .",
    "the initial condition is a cosine pulse convecting diagonally in a square domain @xmath176 \\times [ 0,1]$ ] .",
    "[ h ! ]   at different time steps @xmath152.,title=\"fig : \" ]    figure  [ fig : stm ] shows the spectral radii of amplification matrix @xmath154 at different time steps @xmath152 .",
    "it shows the solution become unstable after @xmath177 .",
    "explicit schemes are slow because of the small values of time - steps used based on the conditional stability limits .",
    "cfl condition puts time step restriction on such schemes .",
    "therefore , solving problems like vector conservation laws ( _ e.g. _ , euler equations ) using explicit schemes are computationally very expensive .",
    "an alternative is to use implicit schemes which are unconditionally stable without any restriction on time step . but",
    "this advantage comes with extra liability . in this case",
    "the coefficient matrix of the solution which needs to be inverted is quite complicated , hence require utmost care .    in this section ,",
    "an implicit formulation of the ksupg scheme is derived which is computationally very efficient .",
    "this formulation is derived for 1d as well as for 2d euler equations .      using @xmath61 method for temporial discretization of 1d euler equations @xmath178 for @xmath179",
    ", we get @xmath180 where @xmath181 @xmath182\\ ] ]      again , using @xmath61 method for 2d euler equations @xmath183 for implicit method @xmath179 , which gives @xmath184 decomposing vectors @xmath127 ,   @xmath131 ,  @xmath185 , @xmath186 ,  @xmath187 ,   and @xmath188 , where @xmath189 , @xmath190 are jacobian matrixes defined previously and @xmath191\\ ] ] @xmath192\\ ] ] @xmath193\\ ] ] @xmath194\\ ] ] with @xmath195 @xmath196 @xmath197+\\frac{2u_1}{\\beta }   ( e^{-s_1 ^ 2 } - 1)+\\frac{u_1 ^ 2}{\\sqrt{\\beta } } \\text{erf}(s_1 ) \\sqrt{\\pi } \\right ) \\right\\ } \\nonumber \\\\ & /(\\rho e ) \\nonumber\\end{aligned}\\ ] ] @xmath198+\\frac{2u_2}{\\beta }   ( e^{-s_2 ^ 2 } - 1)+\\frac{u_2 ^ 2}{\\sqrt{\\beta } } \\text{erf}(s_2 ) \\sqrt{\\pi } \\right)\\right\\ } \\nonumber \\\\ & /(\\rho e ) \\nonumber\\end{aligned}\\ ] ] the final implicit equation is written as @xmath199 \\right ) \\mathbf{u}^{n+1 } = 0\\nonumber\\end{aligned}\\ ] ]",
    "in this section various test cases are solved for inviscid burgers as well as euler equations to demonstrate the accuracy , efficiency and robustness of the proposed scheme .",
    "these codes are run on 3.10 ghz desktop machine .",
    "consider the inviscid burgers equation in 1-d @xmath200 with initial conditions representing a square wave given by @xmath201 note that @xmath51 for this equation .",
    "[ h ]     in this test case , the jump from -1 to 1 at @xmath202 creates an expansion fan whereas the jump from 1 to -1 creates a steady shock wave .",
    "the solution at time @xmath203 contains a sonic point ( where velocity @xmath204 ) in the expansion fan .",
    "many schemes generate unphysical solutions at sonic points due to insufficient numerical diffusion .",
    "figure  [ fig : ge43 ] shows the numerical solution obtained with 50 grid points using cfl number 0.3 .",
    "the proposed method does not encounter any sonic point problem .",
    "this scheme captures the shock with just two grid points .      for 1d euler equations we shall solve the following test cases .",
    "sod s shock tube problem consists of a left rarefaction , a right shock wave and a contact discontinuity which separates the rarefaction and shock wave .",
    "the initial conditions are given by @xmath205 the number of node points are 100 and cfl number is 0.15 . final time is t = 0.01 .",
    "figure  [ fig : kge1 ] shows the density , velocity , pressure and mach number plots . here",
    ", all the essential features like expansion wave , contact discontinuity and shock wave are captured reasonably well .    [ h ! ]      the initial conditions for the shock tube problem of lax are @xmath206 the number of node points are 100 and cfl number is 0.1 .",
    "final time is t=0.13 .",
    "figure  [ fig : ksla ] shows the density , velocity , pressure and internal energy plots .    [ h ! ]      the initial conditions for the riemann problem are @xmath207 in this test case a near vacuum state is reached .",
    "many popular schemes like linearized riemann solver fails to predict the correct pressure and density and typically give negative pressure and density .",
    "the number of node points are 200 and cfl number is 0.1 .",
    "final time is t=0.15 .",
    "figure  [ fig : ksrr ] shows the density , pressure and velocity plots .",
    "[ h ! ]      two dimensional burgers equations is given by @xmath208 the boundary conditions are : @xmath209 and @xmath210 exact solution is given in @xcite .    here , @xmath211 and @xmath212 .",
    "figures  [ fig : k2p3aq ] and  [ fig : k2p3at ] show the contour and surface plots of steady state solution on @xmath213 q4 and t3 meshes respectively .",
    "the normal shock wave is captured quite accurately using such a coarse grid .",
    "figure  [ fig : resolp ] shows the residue plot for q4 mesh where residue is given by @xmath214    [ h ! ]      [ h ! ]      [ h ! ]     [ h ! ]   q4 mesh.,title=\"fig : \" ]   q4 mesh.,title=\"fig : \" ]      the comparison has been done with the standard supg method with shock capturing parameter used in @xcite with the proposed ksupg scheme .",
    "figure  [ fig : kqr34 ] shows the result of 2d burgers equation over @xmath175 q4 element grid .",
    "accuracy of the solution is more in the proposed scheme even without using shock capturing parameter .      unlike in the case of 2d burgers equation ,",
    "additional diffusion is required for simulating 2d euler equations and thus the shock capturing parameter given by equation is added in both explicit and implicit ksupg formulation for 2d euler equations .      the domain is square @xmath215 \\times [ 0,\\,1]$ ] , the left boundary is the inlet with mach 2 at an angle of @xmath216 to the bottom boundary .",
    "bottom boundary is the wall from where oblique shock wave is generated which makes an angle of @xmath217 with the wall .",
    "the dirichlet boundary conditions on left and top boundaries are @xmath218 . at the wall ,",
    "no - slip condition is applied , _",
    "i.e. _ , @xmath219 where @xmath220 is a velocity vector in two dimensions and at right boundary where the flow is supersonic all primitive variables @xmath221 , @xmath222 , @xmath2 and @xmath223 are extrapolated with first order approximation .",
    "[ h ]   q4 elements .",
    ", title=\"fig : \" ]    figure  [ fig : osi312 ] shows the pressure contours using @xmath224 q4 mesh .",
    "in this test case @xcite the domain is rectangular @xmath225 \\times [ 0,\\,\\,1]$ ] .",
    "the boundary conditions are    1 .   inflow ( left boundary ) : @xmath226 2 .   post shock condition ( top boundary ) : @xmath227 3 .",
    "bottom boundary is a solid wall where slip boundary condition is applied , _",
    "i.e. _ , @xmath219 .",
    "4 .   at right boundary where the flow is supersonic all primitive variables",
    "@xmath221 , @xmath222 , @xmath2 and @xmath223 are extrapolated with first order approximation .",
    "pressure plots for @xmath228 , @xmath229 and @xmath230 quadrilateral mesh are given in figure  [ fig : srq4 ] .",
    "the comparison of residue plots are given in figure  [ fig : rs123q ] .",
    "[ h ! ] , @xmath229 and @xmath230 , title=\"fig : \" ]    for triangular unstructured mesh ( number of nodes : 2437 and number of triangles : 4680 ) the pressure contours are given in figure  [ fig : unsq34 ] and residue plot is shown in figure  [ fig : unsqres ] .    [ h ! ]    [ h ! ]     the incident and reflected shocks are captured quite accurately at correct positions .",
    "two supersonic test cases with inflow mach numbers 2 and 3 are tested on a half cylinder @xcite .",
    "the domain is half circular , the left outer circle is inflow boundary .",
    "small circle inside the domain is a cylinder wall and the straight edges on right sides are supersonic outflow boundaries .",
    "[ h ! ]    pressue plots ( see figure  [ fig : halfcyl ] ) show that the bow shock in front of the half - cylinder is captured accurately at the right position in each case which are compared with existing results @xcite .",
    "all previously solved 1d test cases are again solved for implicit ksupg method .",
    "the number of node points are 100 and cfl number is 0.6 .",
    "final time is t = 0.01 .",
    "figure  [ fig : kge1ii ] shows the density , velocity , pressure and mach number plots .",
    "[ h ! ]      the number of node points are 100 and cfl number is 0.6 .",
    "final time is t=0.13 .",
    "figure  [ fig : kslaii ] shows the density , velocity , pressure and internal energy plots .",
    "[ h ! ]      the number of node points are 200 and cfl number is 0.6 .",
    "final time is t=0.15 .",
    "figure  [ fig : ksrrii ] shows the density , pressure and velocity plots .",
    "[ h ! ]      in case of implicit ksupg scheme , 2d euler test cases are solved using cfl = 1 . for the comparison of explicit and implicit ksupg schemes shock reflection test case is solved using different grids .",
    "figure  [ fig : srimk ] shows the pressure contour plot on @xmath229 q4 grid and the residue vs number of iterations .    [ h ! ]   mesh and the residue plot.,title=\"fig : \" ]    iteration speed - up ratio is defined as the ratio of number of iterations required for the residue to drop below a predefined tolerance value for an explicit method to that of an implicit method . similarly , one can define the computational speed - up ratio which is the ratio of total computational time required for explicit method to that of implicit method .",
    "following tables shows comparison of computational cost and number of iterations taken for explicit and implicit ksupg schemes for oblique shock reflection test case .    [ cols=\"^,^,^,^ \" , ]",
    "in this paper we presented a novel explicit as well as implicit kinetic theory based streamline upwind petrov galerkin scheme ( ksupg scheme ) in finite element framework for both scalar case ( inviscid burgers equation in 1d and 2d ) and vector case ( 1d and 2d euler equations of gas dynamics ) .",
    "the proposed numerical scheme is simple and easy to implement .",
    "the important advantage in using a kinetic scheme in finite element framework is that , instead of dealing with nonlinear hyperbolic conservation laws , one needs to deal with a simple linear convection equation . in comparison with the standard supg scheme ,",
    "the advantage of the proposed scheme is that , it does not contain any complicated expression for @xmath7 ( which is the intrinsic time scale ) especially for vector equations .",
    "also , for the multidimensional burgers equation , standard supg scheme requires additional diffusion term ( shock capturing parameter ) which is not required in the proposed scheme .",
    "the accuracy and robustness of the scheme is demonstrated by solving various test cases for burgers equation and euler equations .",
    "spectral stability analysis is done for 2d linear equation which gives an implicit expression of stable time step .",
    "finally , comparison between explicit and implicit versions of ksupg scheme is done with respect to the number of iterations , computational cost , sparsity pattern and the condition number of a global system of equations .",
    "tezduyar te , huges tjr , .finite element formulation of convected dominated flows with particular emphasis on the compressible euler equations . in : proceedings of aiaa 21st aerospace sciences meeting .",
    "aiaa paper 83 - 0125 , reno , nevada ( 1982 ) .",
    "le beau gj , tezduyar te , finite element computation of compressible flows with the supg formaltion . in : advances in finite element analysis in fluid dynamics , fed - vol .",
    "123 , asme , new york , pp 21 - 27 ( 1991 ) .",
    "x. yu and q. dai , rkdg finite element schemes combined with a gas - kinetic method in one - dimensional compressible euler equations , current trends in scientific computing , z. chen , r. glowinski and k. li ( eds . ) , american mathematical society , pp .",
    "355 - 364 , 2002 .",
    "yee , r.f.warming and a. harten , a high - resolution numerical technique for inviscid gas - dynamics problems with weak solutions , proceedings in eight international conference on numerical methods in fluid dynamics , lecture notes in physics , vol .",
    "170 , springer , new york / berkin , pp .",
    "546 - 552 , 1982 ."
  ],
  "abstract_text": [
    "<S> a novel explicit and implicit kinetic streamlined - upwind petrov galerkin ( ksupg ) scheme is presented for hyperbolic equations such as burgers equation and compressible euler equations . the proposed scheme performs better than the original supg stabilized method in multi - dimensions . to demonstrate the numerical accuracy of the scheme , </S>",
    "<S> various numerical experiments have been carried out for 1d and 2d burgers equation as well as for 1d and 2d euler equations using q4 and t3 elements . </S>",
    "<S> furthermore , spectral stability analysis is done for the explicit 2d formulation . </S>",
    "<S> finally , a comparison is made between explicit and implicit versions of the ksupg scheme .    </S>",
    "<S> kinetic streamlined - upwind petrov galerkin scheme , hyperbolic partial differential equations , burgers equation , euler equations . </S>"
  ]
}
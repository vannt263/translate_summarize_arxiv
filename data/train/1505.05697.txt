{
  "article_text": [
    "* 1.1 network - decompositions + * in the distributed message - passing model a communication network is represented by an @xmath17-vertex graph @xmath1 .",
    "the vertices of the graph host processors that communicate over the edges .",
    "each vertex has a unique identity number ( i d ) from the range @xmath18 .",
    "we consider a synchronous setting in which computation proceeds in rounds , and each message sent over an edge arrives by the beginning of the next round .",
    "the running time of an algorithm is the number of rounds from the beginning until all vertices terminate .",
    "local computation is free .    a _ strong _ ( respectively , _ weak _ ) _ diameter _ of a cluster @xmath19 is the maximum distance @xmath20 ( resp .",
    ", @xmath21 ) between a pair of vertices @xmath22 , measured in the induced subgraph @xmath23 of @xmath24 ( resp . , in @xmath25 ) . a partition @xmath0 of @xmath1 into clusters of strong ( resp . ,",
    "weak ) diameter @xmath2 , such that the supergraph @xmath26 , @xmath27 , @xmath28 obtained by contracting each @xmath3 is @xmath4-colorable is called a _ strong _ ( resp . , _ weak _ ) _ @xmath29-network - decomposition_.    network - decompositions were introduced in a seminal paper by awerbuch et al . @xcite .",
    "the authors of this paper showed that strong @xmath30 @xmath31-network - decompositions can be computed in distributed deterministic @xmath32 time .",
    "even more importantly they demonstrated that many pivotal problems in the distributed message passing model can be efficiently solved if one can efficiently compute @xmath5-network - decompositions with sufficiently small parameters .",
    "in particular , this is the case for maximal independent set , maximal matching , and @xmath33-vertex - coloring .",
    "the result of @xcite was improved a few years later by panconesi and srinivasan @xcite who devised a deterministic algorithm for computing strong @xmath34 @xmath35-network - decompositions in @xmath10 time .",
    "awerbuch et al .",
    "@xcite devised a deterministic algorithm for computing strong @xmath11-network - decomposition in time @xmath10 . around the same time linial and saks @xcite devised a randomized algorithm for computing weak @xmath11-network - decompositions in @xmath12 time . more generally , the algorithm of @xcite can compute weak @xmath36-network - decompositions or weak @xmath37-network - decompositions in time @xmath38 .",
    "observe , however , that all these algorithms @xcite require super - logarithmic time , for all choices of parameters . in icalp12",
    "the first - named author of the current paper @xcite devised a randomized algorithm for computing strong @xmath39-network - decomposition in @xmath40 time .",
    "unlike the algorithms of @xcite , the algorithm of @xcite requires _ constant _ time .",
    "its drawback however is its very high parameter @xmath41 . in the current paper",
    "we alleviate this drawback , and devise a randomized algorithm for computing strong @xmath42-network - decomposition in time @xmath43 .",
    "in other words , the parameter @xmath44 of our new decompositions can be made @xmath45 , for an arbitrarily small constant @xmath46 , while the running time is still _ constant _ ( specifically , @xmath47 ) . + * 1.2 constant - time distributed algorithms * + in their seminal paper titled `` what can be computed locally ? ''",
    "@xcite naor and stockmeyer posed the following question : which distributed tasks can be solved in _ constant _ time ?",
    "this question is appealing both from theoretical and practical perspectives . from the latter viewpoint",
    "it is justified by the emergence of huge networks .",
    "the number of vertices in the latter networks may be so large that even mildest dependence of the running time on @xmath17 may make the algorithm prohibitively slow .",
    "naor and stockmeyer themselves @xcite showed that certain types of weak colorings can be computed in constant time . a major breakthrough in the study of distributed constant time algorithms",
    "was achieved though a decade after the paper of @xcite by kuhn and wattenhofer @xcite .",
    "specifically , kuhn and wattenhofer @xcite showed that an @xmath48-approximate minimum dominating set can be computed in @xmath49 randomized time . here",
    "@xmath50 is the maximum degree of the input graph @xmath25 , and @xmath51 is a positive possibly constant parameter .",
    "an approximation algorithm for another fundamental optimization problem , specifically , for the _ minimum coloring _ problem , was devised by barenboim @xcite as an application of his aforementioned algorithm for computing network - decompositions .",
    "specifically , it is shown in @xcite that an @xmath14-approximation for the minimum coloring problem can be computed in @xmath40 randomized time .",
    "( in the minimum coloring problem one wishes to color the vertices of the graph properly with as few colors as possible . )",
    "observe that since approximating the minimum coloring problem up to a factor of @xmath52 is np - hard @xcite , the algorithm of @xcite inevitably has to employ very heavy local computations .    in the current paper",
    "we employ our improved network - decomposition procedure to come up with a significantly improved constant - time approximation algorithm for the minimum coloring problem .",
    "specifically , our randomized algorithm provides an @xmath16-approximation for the minimum coloring problem in @xmath53 time , for an arbitrarily small constant @xmath46 .",
    "we also devise a randomized @xmath16-approximation algorithm for the _ minimum @xmath54-spanner _ problem with running time @xmath55 , for any arbitarily small constant @xmath46 .",
    "( a subgraph @xmath56 of a graph @xmath1 , @xmath57 , is a _",
    "@xmath54-spanner _ of @xmath25 if for every @xmath58 , @xmath59 . in the _ minimum @xmath54-spanner _ problem the objective is to compute a @xmath54-spanner of the input graph @xmath25 with as few edges as possible .",
    ")    ajtai et al .",
    "@xcite showed that triangle - free @xmath17-vertex graphs admit an @xmath60-coloring .",
    "this existential bound was shown to be tight by kim @xcite .",
    "we devise a randomized @xmath14-coloring algorithm for triangle - free graphs with running time @xmath61 .",
    "more generally , we devise a randomized @xmath62-coloring algorithm for graphs of girth greater than @xmath63 , with running time @xmath64 .",
    "both results apply for any arbitrarily small @xmath46 , and , in particular , they show that such graph can be colored with a reasonably small number of colors in constant time .",
    "together with our drastically improved constant - time approximation algorithm for the minimum coloring problem , these results significantly expand the set of distributed problems solvable in constant time .",
    "most our algorithms for constructing network - decompositions use only short messages ( i.e. , messages of size @xmath65 bits ) , and employ only polynomially - bounded local computations .",
    "although in general graphs our algorithms for @xmath66-approximate minimum coloring require large messages , our @xmath14-coloring and @xmath62-coloring algorithms for triangle - free graphs and graphs of large girth employ short messages .",
    "hence the latter coloring algorithms are suitable to serve as building blocks for various tasks . despite that the number of colors is superconstant , in many tasks",
    "it does not affect the overall running time , so the entire task can be performed very quickly .",
    "for example , if the colors are used for frequency assignment or code assignment tasks , the running time will not be affected by the number of colors .",
    "instead , the range of frequencies or codes will be affected .",
    "however , this is unavoidable in the worst case , in view of the lower bounds on the chromatic number of triangle free graphs and graph of large girth . +",
    "* 1.3 the minimum dominating set problem + * the mds problem is one of the most fundamental classical problems of distributed graph algorithms .",
    "jia et al .",
    "@xcite devised the first efficient randomized @xmath67-approximation algorithm for the mds problem with running time @xmath68 .",
    "their result was improved and generalized by kuhn and wattenhofer @xcite who devised an @xmath49-time randomized @xmath48-approximation algorithm for the problem .",
    "the results of @xcite spectacularly advanced our understanding of the distributed complexity of the mds problem .",
    "however , both these algorithms @xcite are randomized , and no efficient deterministic distributed algorithms with a non - trivial approximation guarantee for general graphs are currently known .",
    "lenzen and wattenhofer @xcite devised such algorithms for graphs with bounded arboricity .",
    "below we provide a quote from their paper : + _ `` to the best of our knowledge , the deterministic distributed complexity of mds approximation on general graphs is more or less a blind spot , as so far neither fast ( polylogarithmic time ) algorithms nor stronger lower bounds are known''_.    in this paper we address this blind spot and devise a deterministic @xmath69-approximation algorithm for the mds problem with time @xmath70 . similarly to our approximation algorithms for the minimum coloring and the minimum @xmath54-spanner problems , this algorithm is also a consequence of our algorithms for constructing network - decompositions .",
    "however , for the mds we use a deterministic version of these algorithms , while for the minimum coloring and minimum @xmath54-spanner problems we use a randomized version . also , we present a variant of our mds approximation algorithm that employs only polynomially - bounded local computations , requires @xmath70 time , and provides an @xmath71 approximation . +",
    "* 1.4 additional results + * we also use our algorithms for computing network - decompositions for devising algorithms for computing _ low - intersecting partitions_. low - intersecting partitions were introduced by busch et al .",
    "@xcite in a paper on universal steiner trees .",
    "a _ low - intersecting @xmath72-partition _",
    "@xmath73 of a graph @xmath25 is the partition of the vertex set @xmath74 such that : ( 1 ) every cluster @xmath24 in @xmath73 has strong diameter at most @xmath75 .",
    "+ ( 2 ) for every vertex @xmath76 , a ball @xmath77 of radius @xmath78 around @xmath79 intersects at most @xmath80 clusters of @xmath73 .",
    "busch et al . showed that given a hierarchy of low - intersecting partitions with certain properties ( see @xcite for details ) one can construct a universal steiner tree .",
    "( see @xcite for the definition of universal steiner tree . )",
    "also , vice versa , given universal steiner tree they showed that one can construct a low - intersecting partition .",
    "they constructed a low - intersecting partition with @xmath81 , and arbitrary @xmath78 .",
    "we devise a distributed randomized algorithm that constructs low - intersecting @xmath82-partitions in time @xmath83 in general graphs and in @xmath84 time in graphs of girth @xmath85 .",
    "this algorithm employs only short messages and polynomially - bounded local computations .    comparing this result with the algorithm of busch et al .",
    "@xcite we note that the partition of @xcite has smaller radius .",
    "( it is @xmath86 instead of @xmath87 in our case . ) on the other hand , the intersection parameter @xmath80 of our partitions is smaller .",
    "( it is @xmath88 instead of @xmath89 . ) in particular , the intersection parameter in the construction of @xcite is always @xmath90 , while ours can be as small as one wishes . finally , and perhaps most importantly",
    ", the algorithm of @xcite is not distributed , and seems inherently sequential .    *",
    "1.5 comparison of our and previous techniques + * basically , our algorithms for computing network - decompositions can be viewed as a randomized variant of the deterministic algorithm of awerbuch et al . @xcite .",
    "the algorithm of awerbuch et al .",
    "@xcite computes iteratively ruling sets for subsets of high - degree vertices in a number of supergraphs .",
    "these supergraphs are induced by certain graph partitions which are computed during the algorithm .",
    "( a subset @xmath91 of vertices is called an @xmath92-ruling set if any two distinct vertices @xmath93 are at distance at least @xmath94 one from another , and every @xmath95 not in a ruling set has a `` ruler '' @xmath96 at distance at most @xmath80 from @xmath79 . ) as a result of the computation the algorithm of @xcite constructs a partition into clusters of diameter at most @xmath94 , such that the supergraph induced by this partition has arboricity at most @xmath80 .",
    "the algorithm of @xcite then colors this partition with @xmath97 colors in time @xmath98 .",
    "( the running time of the algorithm is @xmath99 when running on an ordinary graph .",
    "the running time is multiplied by a factor of @xmath100 , because the coloring algorithm is simulated on a supergraph whose vertices are clusters of diameter @xmath100 . )",
    "the fact that the running time in the result of @xcite is ( roughly speaking ) the product @xmath101 of the parameters of the resulting network - decomposition is the reason that awerbuch et al @xcite made an effort to balance these parameters , and set both of them to be equal to @xmath102 .",
    "the algorithm of panconesi and srinivasan @xcite is closely related to that of @xcite except that it invokes a sophisticated doubly - recursive scheme for computing ruling sets via network - decompositions , and vice versa .",
    "this ingenious idea enables @xcite to balance the parameters and running time better . specifically , they are all equal to @xmath103 .",
    "our algorithm is different from @xcite in two respects .",
    "first , we replace a quite slow ( it requires @xmath65 time ) deterministic procedure for computing ruling sets by a constant - time randomized one .",
    "note that _ generally _ computing @xmath104-ruling sets requires @xmath105 time @xcite , but we only need to compute them for _ high - degree vertices _ of certain supergraphs .",
    "this can be easily done in randomized constant time .",
    "second , instead of coloring the resulting partition with @xmath97 colors in @xmath98 time , we color it in @xmath106 colors in @xmath107 time by a simple randomized procedure , or in @xmath108 colors in @xmath109 time , for a parameter @xmath110 , by a deterministic algorithm arb - linial @xcite .",
    "hence the number of colors is somewhat greater than in @xcite , but the running time is constant .",
    "the algorithm of linial and saks @xcite is inherently different from both @xcite and from our algorithm .",
    "it runs for @xmath65 phases , each of which constructs a collection of clusters of diameter @xmath65 at pairwise distance at least @xmath111 which covers at least half of all remaining vertices .",
    "the running time of the algorithm of @xcite , similarly to @xcite and @xcite , is the product of the number of phases and clusters diameter .",
    "hence the approach of @xcite appears to be inherently incapable to give rise to a constant time algorithm .",
    "our deterministic variant of the network - decomposition procedure is the basis for our deterministic approximation algorithm for mds .",
    "our deterministic variant is closer to the algorithm of @xcite than our randomized one .",
    "the main difference between our deterministic variant and the algorithm of @xcite is that we use a different much faster coloring procedure for the supergraph induced by the ultimate partition .    *",
    "1.6 related work + * network - decompositions for general graphs were studied in @xcite .",
    "dubhashi et al .",
    "@xcite used network decompositions for constructing low - stretch dominating sets .",
    "recently , kutten et al .",
    "@xcite extended linial - saks network - decompositions to hypergraphs .",
    "many authors @xcite studied network - decompositions for graphs with bounded growth . distributed approximation algorithms is a vivid research area .",
    "see , e.g. , @xcite and the references therein .",
    "distributed graph coloring is also a very active research area .",
    "see a recent monograph @xcite , and the references therein .",
    "schneider et al .",
    "@xcite devised a distributed coloring algorithm whose performance depends on the chromatic number of the input graph .",
    "however , the algorithm of @xcite provides no non - trivial approximation guarantee . to the best of our knowledge",
    "there are no known distributed approximation algorithms for the minimum @xmath54-spanner problem .",
    "efficient distributed algorithms for constructing sparse undirected spanners can be found in @xcite . for centralized approximation algorithms for the minimum @xmath54-spanner problem ,",
    "see @xcite .",
    "for a subset @xmath112 , the graph @xmath113 denotes the subgraph of @xmath25 induced by @xmath114 . the _ degree _ of a vertex @xmath79 in a graph @xmath1 , denoted _",
    "@xmath115 _ , is the number of edges incident on @xmath79 .",
    "a vertex @xmath116 such that @xmath117 is called a _",
    "neighbor _ of @xmath79 in @xmath25 .",
    "the _ neighborhood _ of @xmath79 in @xmath25 , denoted @xmath118 , is the set of neighbors of @xmath79 in @xmath25 .",
    "if the graph @xmath25 can be understood from context , then we omit the underscript @xmath119 . for a vertex @xmath76",
    ", the set @xmath120 is denoted by @xmath121 . for a set @xmath122 ,",
    "we denote by @xmath123 the set @xmath124 .",
    "the _ distance _ between a pair of vertices @xmath58 , denoted @xmath21 , is the length of the shortest path between @xmath116 and @xmath79 in @xmath25 .",
    "the _ diameter _ of @xmath25 is the maximum distance between a pair of vertices in @xmath25 .",
    "the _ chromatic number _",
    "@xmath125 of a graph @xmath25 is the minimum number of colors that can be used in a proper coloring of the vertices of @xmath25 .",
    "in this section we devise an algorithm for computing an @xmath126-network - decomposition in @xmath127 rounds , for an arbitrarily small constant @xmath46 . more generally , our algorithm computes a @xmath128-network - decomposition @xmath129 in @xmath130 rounds , for any positive parameter @xmath131 , along with an @xmath132-coloring @xmath133 of the supergraph induced by @xmath129 .",
    "( the @xmath134 term can be eliminated from the running time at the expense of increasing the number of colors used by @xmath133 by a multiplicative factor of @xmath135 , for an arbitrarily large constant @xmath54 .",
    "we will later show that the multiplicative factor of @xmath51 in the second parameter of the network decomposition can also be eliminated without affecting other parameters . )",
    "the algorithm is called _",
    "procedure decompose_. the procedure runs on some supergraph @xmath136 of the original graph @xmath25 .",
    "each vertex @xmath137 is a cluster ( i.e. , a subset of vertices ) of the original graph @xmath1 , and different clusters are disjoint .",
    "observe that generally it may happen that @xmath138 .",
    "the procedure accepts as input the supergraph @xmath139 , the number of vertices @xmath17 of @xmath25 , the parameter @xmath51 , and an upper bound @xmath140 on the number of vertices of the supergraph @xmath139 .",
    "it also accepts as input two numerical parameters @xmath141 and @xmath54 .",
    "the parameter @xmath46 is a sufficiently small positive constant and @xmath142 is a sufficiently large integer constant .",
    "initially the supergraph is @xmath25 itself , with each vertex @xmath79 forming a singleton cluster @xmath143 .",
    "hence initially it holds that @xmath144 .",
    "the procedure is invoked recursively .",
    "after each invocation the current supergraph @xmath145 is replaced with a supergraph on fewer vertices , and @xmath140 is updated accordingly .",
    "the parameter @xmath17 , however , remains unchanged throughout the entire execution . ) as a result of an execution of procedure decompose every vertex @xmath79 in @xmath145 is assigned a label @xmath146 .",
    "the value of @xmath146 is equal to the color @xmath147 of the cluster @xmath148 of @xmath129 which contains @xmath79 .",
    "procedure decompose partitions the graph @xmath145 into two vertex - disjoint subgraphs with certain helpful properties .",
    "specifically , one of the subgraphs has a sufficiently small maximum degree that allows us to compute a network decomposition in it directly and efficiently .",
    "the other subgraph can be partitioned into a sufficiently small number of clusters with bounded diameter .",
    "the latter property is used to construct a supergraph whose vertices are formed from the clusters . since the number of clusters is sufficiently small , the number of vertices of the supergraph is small as well .",
    "then our algorithm proceeds recursively to compute a network decomposition of the new supergraph , using fresh labels that have not been used yet .",
    "the recursion continues for @xmath51 levels .",
    "then each vertex is assigned the label of the supernode it belongs to .",
    "( supernodes of distinct recursion levels may be nested one inside the other . in this case",
    "an inner supernode receives the label of an outer supernode .",
    "a vertex of the original graph @xmath25 receives the ( same ) label of all supernodes it belongs to .",
    "notice that a vertex belongs to exactly one supernode in each recursion level . )",
    "this completes the description of the algorithm .",
    "its pseudocode is provided below .",
    "( see algorithm [ proced : decompose ] . )",
    "the algorithm employs two auxiliary procedures that we describe in detail in section [ sc : pr ] .",
    "the procedures succeed with high probability , i.e. , with probability @xmath149 , for an arbitrarily large constant @xmath150 .",
    "the first procedure is called _ procedure dec - small_. it accepts a graph @xmath25 with at most @xmath17 vertices and maximum degree at most @xmath2 .",
    "procedure dec - small accepts also as input two numerical parameters , @xmath141 and @xmath54 , which are relayed to it from procedure decompose .",
    "recall that @xmath46 is a sufficiently small constant and @xmath54 is a sufficiently large integer constant .",
    "the procedure computes an @xmath151-coloring of @xmath25 in @xmath152 time .",
    "( the time is @xmath127 if @xmath153 .",
    "another variant of this procedure computes an @xmath154-coloring in @xmath155 time , for an arbitrarily large positive integer @xmath54 . )",
    "observe that for any integer @xmath156 , a proper @xmath157-coloring of a graph @xmath25 is also a @xmath158-network - decomposition of @xmath25 .",
    "( there are @xmath157 labels , and each cluster consists of a single vertex .",
    "thus the diameter of the decomposition is @xmath159 . )",
    "procedure dec - small returns a @xmath158-network - decomposition @xmath160 on line 5 .",
    "it also returns a labeling function @xmath161 for vertices of a subset @xmath162 .",
    "( we will soon describe how this subset is obtained . )",
    "the labeling @xmath161 also serves as a proper coloring for the supergraph induced by @xmath160 .    the second procedure which is invoked by our algorithm",
    "is called _",
    "procedure partition_. this randomized procedure accepts as input an @xmath140-vertex supergraph @xmath163 and a parameter @xmath164 , and partitions @xmath165 into two subsets @xmath162 and @xmath166 , such that @xmath167 and @xmath168 have the following properties .",
    "the subgraph @xmath167 has maximum degree @xmath169 .",
    "the subgraph @xmath168 consists of @xmath170 clusters of diameter at most @xmath111 with respect to @xmath145 .",
    "the procedure contracts each such cluster into a supernode .",
    "let @xmath171 denote the resulting set of supernodes and @xmath172 the resulting supergraph . specifically , the vertex set of @xmath173 is @xmath171 , and its edge set is @xmath174 procedure partition returns the subset @xmath175 and the set of supernodes @xmath171 .",
    "the clusters in @xmath166 are obtained by computing a dominating set @xmath176 of @xmath166 of size @xmath177 .",
    "each vertex in @xmath176 becomes a leader of a distinct cluster .",
    "each vertex in @xmath178 selects an arbitrary neighbor in @xmath176 and joins the cluster of this neighbor .",
    "consequently , in all clusters all vertices are at distance at most @xmath179 from the leader of their cluster .",
    "hence all clusters have diameter at most @xmath111 .",
    "initially , each vertex of @xmath74 joins the set @xmath176 with probability @xmath180 .",
    "then the set @xmath166 is formed by the vertices of @xmath176 and their neighbors .",
    "finally , the set @xmath162 is formed by the remaining vertices , i.e. , @xmath181 . in this stage the procedure returns the set of nodes @xmath162 and the set of supernodes @xmath171 which is obtained from @xmath166 , and terminates .",
    "this completes the description of procedure partition .",
    "return dec - small(@xmath182 )    / * compute directly a @xmath183-network - decomposition of @xmath145 .",
    "( see section [ sc : pr ] . )",
    "* /    @xmath184 : = partition(@xmath185 )    / * partition @xmath145 into @xmath162 and @xmath171 .",
    "( see section [ sc : pr ] . )",
    "the maximum degree of @xmath167 is @xmath186.*/    @xmath187 : = dec - small(@xmath188 , @xmath141 , @xmath54 )    / * compute directly a @xmath189-network - decomposition of @xmath167 .",
    "( see section [ sc : pr ] . ) * /    @xmath190 decompose(@xmath191 )    / * a recursive invocation on the supergraph @xmath173 that contains at most @xmath192 supernodes .",
    "* /    @xmath193    @xmath194    / * @xmath195 , where @xmath78 is a sufficiently large constant to be determined later .",
    "* /    / * the labeling function @xmath196 on @xmath197 is defined by : for a cluster @xmath198 ( respectively , @xmath199 ) it applies to it the function @xmath200 ( resp . , @xmath201 ) .",
    "* /    return @xmath202    the recursive invocation of procedure decompose on line 6 returns a network decomposition @xmath203 for the supergraph @xmath204 .",
    "the for - loop ( lines 7 - 13 ) adds ( in parallel ) @xmath205 to the color of each cluster of the network decomposition @xmath206 of @xmath204 , where @xmath78 is a sufficiently large constant to be determined later .",
    "since the number of colors used in each recursive level is at most @xmath207 , this loop guarantees that colors used for clusters created on different recursion levels are different .",
    "this is because the labeling returned by procedure dec - small on line 5 for clusters of @xmath160 employs the palette @xmath208 $ ] while the labeling computed in lines 10 - 12 for clusters of @xmath203 employs labels which are greater than @xmath207 .",
    "the termination condition of the procedure is the case @xmath209 , i.e. , when the number @xmath140 of vertices in the supergraph @xmath145 is already small . at this point",
    "the maximum degree of @xmath145 is small as well ( at most @xmath210 ) , and so coloring the supergraph ( by procedure dec - small ) results in a sufficiently good network decomposition .    observe that our main algorithm will invoke the procedure on the original graph @xmath25 .",
    "hence in the first level of the recursion @xmath211 , and each supernode is actually a node of @xmath25 . in the second recursion level",
    "it is executed on the supernodes of nodes of the original graph @xmath25 . in the third level",
    "it is executed on supernodes of supernodes , etc .",
    "consequently , starting from the second recursion level supernodes have to be simulated using original nodes of the network .",
    "to this end each cluster that forms a supernode selects a leader which is used for simulating the supernodes .",
    "moreover , the leader is used to simulate all nested supernodes to which it belongs .",
    "our supernodes are obtained by at most @xmath51 levels of nesting . in each level of nesting a supernode",
    "is a cluster of diameter at most @xmath111 in a graph whose nodes are lower - level supernodes .",
    "hence a simulation of a single round on such a supergraph will require up to @xmath212 rounds .",
    "next we provide several lemmas that will be used for the analysis of the algorithm .",
    "we leave the parameters @xmath141 and @xmath54 unspecified in all lemmas in this section , because they have no effect on the analysis .",
    "[ decomposelevl ] consider an invocation of procedure decompose on the original graph @xmath1 with parameters @xmath213 , @xmath51 , and @xmath214 , for @xmath215 .",
    "the number of recursion levels in the execution of this procedure ( i.e. , decompose(@xmath216 ) ) is @xmath51 .",
    "in recursion level @xmath217 , @xmath218 , the parameter @xmath140 is equal to @xmath219 .",
    "hence , in recursion level @xmath51 the parameter @xmath140 is equal to @xmath88 , and the recursion reaches the termination condition .",
    "( see lines 1 - 2 of algorithm [ proced : decompose ] . )",
    "[ numoflabels ] the number of labels used in the invocation of procedure decompose(@xmath220 ) is @xmath221 .",
    "we show that the number of labels is @xmath222 , where @xmath78 is a sufficiently large constant .",
    "specifically , the constant @xmath78 needs to be larger than the constants hidden by the @xmath223-notation in comments on lines 2 and 5 of the algorithm .",
    "( recall that line 2 computes a @xmath224-network - decomposition , and line 5 computes a @xmath225-network - decomposition .",
    "the constant @xmath78 appears in line 11 of algorithm [ proced : decompose ] . )",
    "the proof is by induction on @xmath226 , where @xmath217 is the recursion level . in other words , this is an inverse recursion on the number of recursion levels . for each index",
    "@xmath227 $ ] , denote by @xmath228 the supergraph on which procedure decompose is invoked on the @xmath217th level of the recursion .",
    "note that at this point @xmath229 .",
    "the inductive claim is that the @xmath217th level invocation of procedure decompose ( on the supergraph @xmath228 ) employs at most @xmath230 labels . + * base ( @xmath231 , i.e. , @xmath232 ) * : in this case @xmath233 , the termination condition of the recursion holds , and thus the number of labels used in the decomposition is @xmath234 .",
    "( see line 2 of algorithm [ proced : decompose ] . ) by the choice of @xmath78 , the number of labels is at most @xmath235 . + * step * : suppose that the invocation has returned from level @xmath236 of the recursion , and it is now at level @xmath217 . by the induction hypothesis ,",
    "line 6 of algorithm [ proced : decompose ] returns a labeling with @xmath237 labels .",
    "once line 11 is executed , the number of labels becomes @xmath238 .",
    "this proves the inductive claim .    in the end of recursion level",
    "@xmath239 the algorithm terminates ( after returning from all recursive invocations ) . in this stage",
    "it holds that @xmath240 , and the claim follows .",
    "[ dec ] each cluster created by the invocation above has diameter at most @xmath241 .",
    "we prove by induction on @xmath242 , where @xmath217 is the recursion level , that level-@xmath217 clusters have diameter at most @xmath243 . + * base ( @xmath244 , i.e. , @xmath232 ) * : in this case a @xmath183-network - decomposition is computed directly , and thus the diameter of all clusters in the graph @xmath145 on which it is executed is @xmath159 .",
    "( recall that the argument @xmath145 in the level-@xmath51 invocation is a supergraph of the original input graph @xmath145 . ) + * step : * first , observe that a @xmath189-network - decomposition of @xmath167 is computed directly in line 5 of algorithm [ proced : decompose ] .",
    "hence @xmath160 consists of clusters of diameter @xmath159 ( with respect to supernodes of the supergraph @xmath145 of the current recursion level ) .",
    "next , we analyze the diameter of clusters in @xmath203 . by the induction hypothesis ,",
    "line 6 of algorithm [ proced : decompose ] ( i.e. , the recursive invocation of procedure decompose ) returns a network decomposition in which all clusters have diameter at most @xmath245 .",
    "this is a decomposition of the supergraph @xmath173 .",
    "consider a cluster @xmath246 of diameter at most @xmath247 in @xmath173 .",
    "let @xmath248 be a pair of vertices of @xmath145 that belong to supernodes in @xmath246 .",
    "let @xmath249 be these two supernodes ( clusters ) , such that @xmath250 , @xmath251 . since the diameter of @xmath246 in @xmath173 is at most @xmath247 , there exist clusters @xmath252 , such that @xmath253 , and the following holds .",
    "there exist edges @xmath254 , such that for every @xmath255 , u_i \\in c_i$ ] , and for every @xmath256 $ ] , @xmath257 .",
    "( see figure [ clustersvertices ] for an illustration . ) by construction , each of the clusters @xmath258 has diameter at most @xmath111 .",
    "hence for @xmath259 $ ] , it holds that @xmath260 .",
    "therefore , @xmath261 since @xmath262 , it follows that @xmath263 .",
    "therefore , the diameter of @xmath246 in @xmath145 is at most @xmath243 .",
    "hence all clusters in @xmath197 have diameter at most @xmath264 in @xmath145 .",
    "since the number of recursion levels is @xmath51 , the claim follows .",
    "[ clustersvertices ] the clusters @xmath265 .",
    "[ lemmac ] suppose that all invocations of auxiliary procedures of procedure decompose have succeeded",
    ". then the invocation computes a @xmath266-network - decomposition .",
    "consider a pair of distinct adjacent clusters @xmath267 .",
    "if @xmath198 and @xmath268 then @xmath269 $ ] , while @xmath270 .",
    "hence @xmath271 .",
    "if @xmath272 then since procedure dec - small returns on line 5 a network decomposition with a proper labeling @xmath273 , it follows that @xmath274 , and so @xmath271 .    finally , if @xmath275 then inductively we conclude that @xmath276 , and thus @xmath271 too .",
    "( the induction base is the recursion level @xmath51 , where the correctness follows from the correctness of procedure dec - small invoked on line 2 of algorithm [ proced : decompose ] . )",
    "hence procedure decompose returns a partition @xmath197 into clusters of diameter at most @xmath277 ( by lemma [ dec ] ) , and a proper labeling @xmath278 of this partition . by lemma [ numoflabels ] ,",
    "the number of labels used by the labeling @xmath278 is @xmath132 .",
    "hence @xmath197 is a @xmath266-network - decomposition for @xmath25 , and @xmath278 is a proper labeling for the network decomposition @xmath197 .",
    "recall that the auxiliary procedures dec - small and partition succeed with probability @xmath149 , for an arbitrarily large constant @xmath150 .",
    "each of these procedures is invoked at most @xmath279 times during the execution of procedure decompose .",
    "therefore , the probability that all executions of procedure dec - small and procedure partition succeed is at least @xmath280 .",
    "since @xmath150 is an arbitrarily large constant , all executions of the auxiliary procedures succeed , with high probability .",
    "hence procedure decompose computes a @xmath128-network - decomposition , with high probability .",
    "the next lemma analyzes the running time of the algorithm .",
    "[ dectime ] let @xmath281 ( respectively , @xmath282 ) denote the running time of procedure partition invoked with parameters @xmath17 and @xmath283 ( resp .",
    ", procedure dec - small invoked with parameters @xmath17 and @xmath2 ) .",
    "we will assume that both these running times are monotone non - decreasing in both parameters .",
    "then the running time of procedure decompose is @xmath284 .    during the execution of procedure",
    "decompose the procedure dec - small is executed @xmath51 times , and procedure partition is executed @xmath285 times . for @xmath286 , in recursion level @xmath217 both procedures are executed on supergraphs whose supernodes constitute subgraphs of diameter at most @xmath287 of the original graph .",
    "thus , the number of rounds required in level @xmath217 is the product of the number of steps required to execute the procedure on the supergraph and the maximum diameter of supernodes .",
    "this running time is at most @xmath288 .",
    "the running time of the last recursion level @xmath51 in which the termination condition holds is @xmath289 .",
    "therefore , the overall running time is + @xmath290 .",
    "procedure dec - small and procedure partition are provided and analyzed in section [ sc : pr ] .",
    "next we state the main results obtained by plugging these procedures into procedure decompose .",
    "see section [ sc : pr ] for the proofs .",
    "[ dlarge ] for any parameter @xmath291 , procedure decompose computes a @xmath128-network - decomposition along with the corresponding @xmath132-labeling function in time @xmath130 , with high probability .",
    "alternatively , one can also have the second parameter equal to @xmath292 and the running time @xmath293 .",
    "it follows that , an @xmath294-network - decomposition of an arbitrary @xmath17-vertex graph along with a proper @xmath295-labeling for it can be computed by a randomized algorithm , in @xmath127 time , with high probability .",
    "see section [ sc : refine ] .",
    "we start with the description of procedure dec - small .",
    "this procedure accepts a graph @xmath25 with at most @xmath17 vertices and maximum degree at most @xmath2 , and computes an @xmath151-coloring of @xmath25 , where @xmath141 is a fixed arbitrarily small positive constant . in other words , if @xmath296 then an @xmath297-coloring is computed , and otherwise an @xmath298-coloring is computed . for computing an @xmath297-coloring ,",
    "procedure dec - small employs the deterministic algorithm of linial @xcite that computes an @xmath299-coloring of graphs with maximum degree @xmath300 within @xmath152 time . for computing an @xmath298-coloring ,",
    "procedure dec - small employs the randomized algorithm of barenboim @xcite that computes , with high probability , an @xmath301-coloring in @xmath40 time , for an arbitrarily small @xmath46 .",
    "we henceforth refer to this algorithm as _ procedure random - color_. this completes the description of procedure dec - small .",
    "its pseudocode is provided below . for completeness",
    ", we provide a high - level description of the algorithm of linial @xcite and the algorithm of barenboim @xcite .",
    "the algorithm of linial @xcite starts with a legal @xmath17-coloring of the input graph obtained from the ids of the vertices .",
    "it proceeds in phases , each of which reduces the number of colors while preserving the legality of the coloring . in each round",
    "the number of colors is reduced from @xmath157 to @xmath302 , where @xmath157 is the number of colors in the beginning of a round .",
    "( initially @xmath303 . ) in the last round the number of colors is reduced from @xmath304 to @xmath299 .",
    "each phase requires just a single round , and the overall running time of the algorithm of linial is @xmath152 .",
    "( it is actually @xmath305 , but this precision is immaterial for our purposes . )    observe also that one can run linial s algorithm for just @xmath54 rounds , for some positive integer parameter @xmath54 , and obtain an @xmath306-coloring . for a single phase of linial s algorithm it employs",
    "@xmath300-union free set systems from the paper by erdos , frankel and furedi @xcite .",
    "a family @xmath307 of sets over a given ground - set @xmath308 is said to be @xmath300-union - free if for every @xmath309 sets @xmath310 , it holds that @xmath311 .",
    "erdos et al",
    ". showed that for any positive integers @xmath157 and @xmath300 , @xmath312 , there exists a @xmath300-union - free family @xmath307 of @xmath157 subsets over a ground - set @xmath308 of size @xmath313 .",
    "let @xmath133 be a proper @xmath157-coloring of @xmath25 in the beginning of a phase of linial s algorithm .",
    "the algorithm associates a set @xmath314 from @xmath307 with each color @xmath150 of @xmath133 .",
    "every vertex @xmath79 that runs the algorithm computes a new color @xmath315 .",
    "such a color exists since @xmath307 is a @xmath300-union - free family , and @xmath316 for every @xmath317 . )",
    "the vertex @xmath79 sets its new color @xmath318 by @xmath319 .",
    "since @xmath320 , @xmath313 , it follows that @xmath321 is an @xmath322-coloring . also , consider a pair of neighbors @xmath79 and @xmath116 .",
    "observe that @xmath323 , while @xmath324 .",
    "hence @xmath325 , and thus @xmath326 is a proper coloring .",
    "see @xcite or @xcite chapter 3.10 for more details .    the algorithm of barenboim @xcite ( procedure random - color ) proceeds in phases as well , however , each phase consists of a randomized procedure . in this procedure",
    "each vertex either succeeds in selecting a final color , or fails and continues to the next phase .",
    "each vertex selects a color from the range @xmath327 $ ] uniformly at random , where @xmath46 is an arbitrarily small constant .",
    "a vertex succeeds if and only if it selects a color that has not been selected by any of its neighbors ( either in the current round , or as a final color in a previous round )",
    ". otherwise , it fails , discards its color , and continues to the next phase .",
    "hence , the probability that a vertex @xmath79 fails to select a color that is different from the colors of its neighbors is at most @xmath328 .",
    "if we run this procedure for @xmath329 rounds , for a sufficiently large constant @xmath150 , then the probability that a given vertex @xmath79 fails on all these rounds is at most @xmath330 .",
    "hence , by union bound , after @xmath329 rounds all vertices succeed with probability at least @xmath331 , i.e. , with high probability .",
    "compute an @xmath297-coloring of @xmath25 using the algorithm of linial @xcite    / * alternatively , one can compute here an @xmath154-coloring in @xmath155 time * /    compute an @xmath298-coloring of @xmath25 using procedure random - color    observe that if @xmath332 then @xmath296 and an @xmath297-coloring is computed .",
    "otherwise , @xmath333 , and an @xmath298-coloring is computed .",
    "therefore , the number of colors is @xmath334 .",
    "recall also that the running time of the algorithm of linial @xcite is @xmath152 , and the running time of procedure random - color is @xmath127 .",
    "thus we obtain the following lemma .",
    "[ dsmall ] procedure dec - small invoked on a graph @xmath25 with maximum degree at most @xmath2 computes , with high probability , an @xmath334-coloring , which is a @xmath335-network - decomposition . if @xmath296 , the running time of procedure dec - small is @xmath152 .",
    "otherwise , it is @xmath127 .",
    "another variant of the procedure dec - small checks if @xmath336 , and if it is the case it invokes the @xmath54-round version of linial s algorithm .",
    "otherwise it invokes line 4 of algorithm [ proced : dec - small ] ( i.e. , the algorithm from @xcite ) .",
    "this modified procedure always requires constant time .",
    "( assuming that @xmath337 . )",
    "if @xmath338 , it computes an @xmath339-coloring .",
    "otherwise ( in this case @xmath340 ) it computes a @xmath341-coloring . to summarize :    a modified variant of procedure dec - small computes an @xmath342-coloring in @xmath155 time , with high probability .",
    "in particular , the running time is constant if @xmath337 .",
    "next , we describe procedure partition .",
    "procedure partition accepts as input a graph @xmath343 and a positive parameter @xmath283 , and partitions @xmath74 into two subsets @xmath162 and @xmath166 , such that @xmath344 and @xmath345 have the following properties .",
    "the subgraph @xmath344 has maximum degree @xmath169 .",
    "the subgraph @xmath345 consists of @xmath346 clusters of diameter at most @xmath111 .",
    "the procedure contracts the clusters of @xmath166 into supernodes , which form the supergraph @xmath173 .",
    "the clusters in @xmath166 are obtained by computing a dominating set @xmath176 of @xmath166 of size @xmath177 .",
    "each vertex in @xmath176 becomes a leader of a distinct cluster .",
    "each vertex in @xmath178 selects an arbitrary neighbor in @xmath176 and joins the cluster of this neighbor .",
    "consequently , in all clusters all vertices are at distance at most @xmath179 from the leader of their cluster .",
    "hence all clusters have diameter at most @xmath111 .",
    "initially , each vertex of @xmath74 joins the set @xmath176 with probability @xmath180 .",
    "then the set @xmath166 is formed by the vertices of @xmath176 and their neighbors .",
    "finally , the set @xmath162 is formed by the remaining vertices , i.e. , @xmath181 . in this stage the procedure returns the set of nodes @xmath162 and the set of supernodes @xmath171 which is obtained from @xmath166 , and terminates .",
    "this completes the description of the procedure .",
    "its pseudocode is provided below .",
    "an algorithm for each vertex @xmath76 .",
    "@xmath79 joins @xmath176 with probability @xmath180 and informs its neighbors    @xmath79 joins @xmath166    @xmath79 joins @xmath162    @xmath79 initializes a singleton cluster @xmath148 , becomes the leader of @xmath148 , and sends @xmath347 to all neighbors in @xmath166    @xmath79 joins a cluster of an arbitrary neighbor in @xmath176    @xmath348 the set of supernodes obtained by contracting all clusters @xmath349    return @xmath184    note that the sets @xmath162 and @xmath171 are returned in a distributed manner . in other words",
    ", each vertex knows whether it belongs to @xmath162 or to @xmath166 .",
    "if it belongs to @xmath166 , then it knows the identity of the leader of its cluster .",
    "the leaders of the clusters represent the supernodes formed by the clusters .",
    "thus , when we say that a supernode performs some action , it is actually performed by the leader of the cluster that forms the supernode .",
    "( for nested supernodes the operations are performed by the leaders of the innermost clusters , which are vertices in the original input graph @xmath25 . )    in the next lemmas we prove that algorithm [ proced : partitin ] computes a partition with the properties described above .",
    "suppose that procedure partition is invoked on a graph @xmath1 and a positive parameter @xmath283 .",
    "then the subgraph @xmath344 induced by the set @xmath162 which is returned by the procedure has maximum degree @xmath350 , with high probability .    consider a vertex @xmath76 such that @xmath79 has at least @xmath351 neighbors in @xmath25 , for a sufficiently large constant @xmath150 .",
    "denote @xmath352 .",
    "let @xmath353 denote the neighbors of @xmath79 in @xmath25 , and let @xmath354 .",
    "the probability that none of these neighbors join @xmath176 is @xmath355 hence , by union bound , the probability that at least one vertex @xmath79 with at least @xmath351 neighbors does not have a neighbor in @xmath176 is at most @xmath356 .",
    "hence with probability at least @xmath357 , all high - degree vertices ( vertices with @xmath358 ) end up in @xmath166 .",
    "hence , with high probability , the maximum degree of a vertex in @xmath181 is @xmath169 .",
    "the next lemma analyzes the number of supernodes and their diameters .",
    "[ partitnscnd ] suppose that procedure partition is invoked on a graph @xmath1 and a parameter @xmath359 , for some constant @xmath360 .",
    "then the set @xmath171 returned by the procedure has the following properties . with high probability , @xmath171 consists of @xmath177 supernodes .",
    "all supernodes of @xmath171 are clusters of diameter at most @xmath111 in @xmath25 .",
    "recall that the set @xmath171 is created by contracting the clusters of @xmath166 into supernodes .",
    "first , we prove that all clusters of @xmath166 have diameter at most @xmath111 .",
    "let @xmath24 be a cluster of @xmath166 .",
    "let @xmath22 be any pair of vertices in the cluster .",
    "then either one of these vertices is the leader of the cluster and @xmath361 or both @xmath116 and @xmath79 are connected to the same leader , and so @xmath362 .",
    "( since @xmath116 and @xmath79 belong to @xmath166 they must have a leader neighbor , unless they are leaders themselves . since @xmath116 and @xmath79 belong to the same cluster , and there is exactly one leader in each cluster , if @xmath116 and @xmath79 are not the leaders , they are connected to the same leader . )",
    "next , we prove that @xmath171 consists of @xmath177 supernodes .",
    "note that the number of supernodes in @xmath171 is equal to the number of vertices in @xmath176 , since each vertex in @xmath176 becomes a leader of a cluster ( i.e. , of a supernode ) .",
    "let @xmath308 denote a random variable that counts the number of vertices in @xmath176 .",
    "since each vertex in @xmath74 joins @xmath176 with probability @xmath180 independently of other vertices , it holds that @xmath363 . by chernoff bound for upper tails ( see , e.g. , @xcite , chapter 4 ) , + @xmath364 = pr[x > 2 \\expect(x ) ] \\leq ( e/4)^{\\expect(x ) } = ( e/4)^{|v|/q } \\leq ( e/4)^{2c \\cdot \\log n } \\leq 1/n^c.$ ]    finally ,",
    "note that each line of procedure partition is either performed locally , or involves sending messages to neighbors .",
    "the latter requires one time unit .",
    "therefore , the running time of procedure partition is @xmath127 .",
    "[ prptimecns ] procedure partition requires @xmath127 time .    combining lemmas [ dec ] - [ dectime ] with lemmas [ dsmall ] - [ partitnscnd ]",
    "imply the following results .    for any parameter @xmath291",
    ", procedure decompose computes a @xmath128-network - decomposition along with the corresponding @xmath132-labeling function in time @xmath130 , with high probability .",
    "consider now a variant of algorithm [ proced : decompose ] ( procedure decompose ) in which in procedure dec - small we always invoke procedure random - color with a parameter @xmath141 .",
    "( as opposed to algorithm [ proced : dec - small ] where we do it only when @xmath296 . ) also , in algorithm [ proced : decompose ] we now set @xmath365 .    then , by the previous argument , this modified variant of procedure decompose computes a @xmath366-network - decomposition along with a legal @xmath367-labeling function in time @xmath368 . by substituting @xmath369",
    "we conclude :    a @xmath370-network - decomposition along with the appropriate proper ( with respect to this decomposition ) @xmath292-labeling can be computed in @xmath371 time , with high probability .",
    "in particular , by setting @xmath51 to be an arbitrarily large constant we obtain an @xmath294-network - decomposition along with a proper @xmath295-coloring for it in randomized constant time , for an arbitrarily small constant @xmath372 .",
    "an @xmath294-network - decomposition of an arbitrary @xmath17-vertex graph along with a proper @xmath295-labeling for it can be computed by a randomized algorithm , in @xmath127 time , with high probability .",
    "a yet another variant of procedure decompose ( algorithm [ proced : decompose ] ) is obtained if in proc dec - small we always invoke the @xmath54-round variant of linial s algorithm @xcite , for some positive integer parameter @xmath54 .",
    "( again we do it regardless of the value of @xmath2 . ) also , for this variant we set @xmath373 , where @xmath374 is a sufficiently large constant .",
    "( specifically , the @xmath54-round variant of linial s algorithm computes an @xmath375-coloring of the input @xmath17-vertex graph with maximum degree @xmath300 .",
    "the constant @xmath78 should be larger than the constant hidden by the @xmath223-notation in @xmath376 . )",
    "the resulting algorithm computes a @xmath377-network - decomposition with a proper @xmath378-labeling for it , in @xmath379 time .    for any @xmath17-vertex graph @xmath25 and parameters @xmath380",
    ", one can compute a @xmath381-network - decomposition ( respectively , @xmath377-network - decomposition ) with an appropriate labeling function in @xmath382 ( resp .",
    ", @xmath379 ) randomized time ,",
    "in this section we argue that one can save a factor of @xmath51 in the number of labels , and compute a @xmath383-network - decomposition ( and a @xmath384-network - decomposition ) with an appropriate labeling in @xmath382 ( resp .",
    ", in @xmath379 ) time .",
    "while this improvement is negligible when @xmath51 is small , it becomes significant when @xmath51 is superconstant .",
    "we remark , however , that in the context of the current paper we are mainly interested in the regime of small @xmath51 .    to describe this improvement we need the notions of arboricity and @xmath385-partition .",
    "( we refer the reader to @xcite and @xcite for a more elaborate discussion on this topic . )",
    "the _ arboricity _ @xmath386 of a graph @xmath1 is the minimum number @xmath54 of edge - disjoint forests @xmath387 , such that @xmath388 .",
    "@xmath389 of @xmath1 with degree at most @xmath162 , for some number @xmath162 , is a partition of the vertex set @xmath74 of @xmath25 into vertex disjoint subsets @xmath390 , @xmath391 for every pair of distinct indices @xmath392 , @xmath393 $ ] , such that for every index @xmath394 $ ] and every vertex @xmath395 , the number of neighbors @xmath396 that @xmath79 has in @xmath385-sets @xmath397 with an index @xmath398 is at most @xmath162 .    consider again procedure decompose .",
    "( see algorithm [ proced : decompose ] . ) for @xmath399 , let @xmath228 denote the supergraph on which the procedure is invoked in the @xmath217th level of recursion . in particular , @xmath400 is the original graph .",
    "also , in all levels @xmath401 the procedure enters lines 4 - 15 , and in the last level @xmath232 it enters the termination condition ( line 2 ) . in the former case procedure",
    "decompose invokes procedure dec - small ( in line 5 ) , which returns the collection @xmath160 of clusters .",
    "( it also returns the labeling function that is immaterial for the current discussion . ) for @xmath286 , let @xmath402 denote the set of clusters returned by procedure dec - small on line 5 of the @xmath217th level recursive invocation of procedure decompose .",
    "finally , in level @xmath51 of the recursion procedure dec - small is invoked in line 2 .",
    "denote by @xmath403 the decomposition that it returns .",
    "[ sets ] @xmath404 is the network decomposition that procedure decompose returns ( in line 14 of the first level recursive invocation ) .",
    "moreover , for any index @xmath217 , @xmath405 , @xmath406 is the network decomposition that the @xmath217th level recursive invocation of procedure decompose returns .",
    "the proof is by induction on @xmath217 . + * base ( @xmath232 ) * : in this case procedure decompose returns the output @xmath403 of an invocation of procedure dec - small ( on line 2 of algorithm [ proced : decompose ] ) . + * step * : consider some @xmath407",
    ". the @xmath217th level recursive invocation returns @xmath197 in line 14 .",
    "recall that @xmath408 is a network decomposition for @xmath167 computed in line 5 of algorithm [ proced : decompose ] .",
    "( in all levels except the first one @xmath160 is actually equals to @xmath162 . in the first level @xmath409 . ) also , @xmath203 ( computed by the @xmath410st level recursive invocation of procedure decompose ; see line 6 of algorithm [ proced : decompose ] ) is a network decomposition for @xmath173 . by induction hypothesis",
    "the latter is @xmath411 .",
    "hence @xmath412 , as required .    in the next lemma",
    "we show that @xmath413 is an @xmath385-partition with relatively small degree of the supergraph @xmath414 induced by the network decomposition @xmath404 .",
    "[ partitions ] @xmath413 is an @xmath385-partition with degree @xmath186 of the supergraph @xmath414 .    again , by an induction on @xmath217 , @xmath405",
    ", we show that @xmath415 is an @xmath385-partition of @xmath414 with maximum degree @xmath186 . + * base ( @xmath232 ) * : in this case we need to show that the maximum degree in @xmath416 is @xmath186 . by the termination condition of algorithm [ proced",
    ": decompose ] ( line 1 ) , @xmath417 , and thus the same upper bound applies to its maximum degree . +",
    "* step * : for some @xmath217 , @xmath418 , we argue that for any cluster @xmath419 its degree in @xmath420 is @xmath186 . by lemma [",
    "sets ] , @xmath421 is the network decomposition for @xmath420 that the @xmath217th level recursive invocation of procedure decompose returns . by construction , @xmath402 is the set of clusters with degree at most @xmath186 in the supergraph @xmath228 .",
    "since clusters of @xmath411 are obtained by merging clusters of @xmath228 , it follows that the degree of @xmath24 in @xmath406 is no greater that its degree in @xmath228 , i.e. , at most @xmath186 .",
    "to recap , lemma [ partitions ] shows that in addition to computing a network decomposition @xmath129 of its input graph @xmath25 , procedure decompose also computes a low - degree @xmath385-partition of the induced supergraph @xmath422 .",
    "( here q = @xmath423 , and the @xmath385-partition is @xmath413 .",
    "the degree of the partition is @xmath186 . )    for the variant of procedure decompose that we describe in this section we do not actually need to explicitly compute the labeling function during the execution of the procedure . as a result procedure dec - small can be greatly simplified .",
    "specifically , if it is invoked on a supergraph @xmath424 , then it returns @xmath165 as its output partition .",
    "if it is invoked on a subgraph @xmath425 of the original graph @xmath25 , then it returns a partition of @xmath426 into singleton clusters , i.e. , @xmath427 .",
    "observe that in this simplified form procedure dec - small requires @xmath127 time . as a result",
    "the overall running time of procedure decompose becomes @xmath428 rather than @xmath368 or @xmath379 .",
    "next , we utilize the @xmath385-partition @xmath413 of @xmath422 for computing an @xmath429-coloring of @xmath430 in @xmath379 time , or alternatively , an @xmath431-coloring of @xmath432 in @xmath433 time . such colorings can be viewed as labelings of the network decomposition @xmath434 .",
    "( for every vertex @xmath76 , its label will be equal to the color of the cluster @xmath435 that contains it . )    to simplify presentation , consider an @xmath17-vertex graph @xmath436 and an @xmath385-partition @xmath413 for @xmath437 with degree @xmath438 .",
    "we will argue that @xmath437 can be efficiently colored . to implement this coloring in a supergraph @xmath430",
    ", we will need to multiply the running time by the maximum diameter of a cluster in @xmath129 , i.e. , by @xmath428 .",
    "we start with arguing that @xmath437 can be colored in @xmath439 colors in @xmath155 time , by a deterministic algorithm .",
    "( this algorithm is closely related to algorithm arb - linial from @xcite , based on linial s algorithm @xcite .",
    "the current algorithm is however more general than algorithm arb - linial . )",
    "the algorithm starts by orienting all edges @xmath440 in the following way : let @xmath441 ( respectively , @xmath442 ) be the index of the set @xmath443 ( resp . , @xmath444 ) which contains @xmath116 ( resp . , @xmath79 ) . if @xmath445 then the edge is oriented towards @xmath79 .",
    "if the opposite holds than it is oriented towards @xmath116 . if @xmath446 then the edge is oriented towards the endpoint with a greater @xmath447 .",
    "observe that under this orientation each vertex @xmath79 has at most @xmath162 outgoing edges incident on it .",
    "the opposite endpoints of these edges will be referred to as the _ parents _ of @xmath79 .",
    "let @xmath448 denote the set of parents of @xmath79 .",
    "let @xmath133 be a proper @xmath157-coloring of @xmath437 .",
    "we argue that a legal @xmath449-coloring @xmath326 of @xmath437 can be computed within one single round . to this end",
    "we again employ an @xmath162-union - free family @xmath307 of @xmath157 sets ( due to @xcite , see also section [ sc : pr ] of this paper ) .",
    "each color class @xmath150 of @xmath133 is associated with a set @xmath450 .",
    "a vertex @xmath79 computes a color @xmath318 which belongs to @xmath451 .",
    "such a color necessarily exists , because @xmath307 is an @xmath162-union - free family .",
    "also , for an edge @xmath452 , suppose without loss of generality that @xmath453 .",
    "then @xmath454 , while @xmath455 , and so @xmath325 .",
    "by @xcite , a family @xmath307 over a ground - set of size @xmath449 exists ( and can be efficiently constructed ) .",
    "thus , @xmath326 is a proper @xmath449-coloring . by repeating this recoloring step for @xmath54 times ,",
    "we obtain an @xmath439-coloring in @xmath155 rounds .",
    "( we start with an initial @xmath17-coloring of @xmath437 .",
    "specifically , each vertex uses its @xmath447 as its initial color . )    an @xmath429-coloring of @xmath430 can be computed in @xmath379 time , for any @xmath456 .",
    "observe that this argument shows in fact that the arboricity of @xmath430 is @xmath457 , and thus @xmath129 is a @xmath458-network - decomposition .",
    "we summarize these results in the following corollary .",
    "[ partdec ] procedure decompose , invoked on an @xmath17-vertex graph @xmath1 with a parameter @xmath459 , computes a @xmath460-network - decomposition @xmath129 and an @xmath385-partition @xmath461 of degree @xmath186 and length @xmath51 for @xmath430 in @xmath428 randomized time , with high probability .",
    "moreover , for a parameter @xmath456 , one can compute in @xmath462 time an @xmath463-labeling for @xmath129 .",
    "in particular , by setting @xmath464 one can get here time @xmath465 and labeling with @xmath466 labels .",
    "note that the @xmath439-coloring algorithm for @xmath437 that was described above does not require the fact that the @xmath385-partition @xmath413 has small number of sets .",
    "next we show that this @xmath385-partition can be used in a more explicit way to compute an @xmath467-coloring of @xmath437 in @xmath468 time .",
    "first , every vertex @xmath79 of @xmath403 tosses a color @xmath469 uniformly at random from the palette @xmath470 $ ] .",
    "it checks if its color is different from the colors of all its neighbors in @xmath403 .",
    "if it is the case , it finalizes its color .",
    "otherwise , it tosses its color from the same palette again .",
    "the process is repeated for @xmath471 rounds , for a sufficiently large constant @xmath150 . as we have already seen ( see lemma [ dsmall ] and the discussion preceding it ) , in @xmath61 rounds we will obtain a legal @xmath467-coloring @xmath472 for @xmath403 , with high probability .",
    "( recall that the maximum degree in @xmath403 is at most a. ) define also @xmath473 .",
    "suppose that we have already computed an @xmath467-coloring @xmath474 for @xmath475 , for some @xmath217 , @xmath476 .",
    "next we show how to extend this coloring into an @xmath467-coloring @xmath477 for @xmath478 . to this end",
    "every vertex @xmath479 tosses a color from @xmath470 $ ] uniformly at random , and checks if its color is different from the colors ( either tossed on this round , or finalized colors ) of its neighbors in @xmath480 .",
    "if it is different from them , then @xmath79 finalizes its color .",
    "otherwise , it continues to the next round .",
    "the entire process continues for @xmath61 rounds .",
    "the key observation required for the analysis is that @xmath481 has at most @xmath162 neighbors in @xmath482 thus , a legal @xmath483-coloring @xmath484 for @xmath485 will be computed , with high probability , within additional @xmath40 rounds .",
    "it is then combined in a trivial way with the coloring @xmath474 for @xmath406 to obtain the @xmath483-coloring @xmath477 for @xmath480 .",
    "[ arbc ] given an @xmath385-partition @xmath413 with degree at most @xmath162 for an @xmath17-vertex graph @xmath436 , and a parameter @xmath46 , an @xmath483-coloring of @xmath437 can be computed in @xmath468 rounds .    by invoking this algorithm on the network decomposition @xmath129",
    "we obtain :    using a @xmath486-network - decomposition @xmath129 of the input graph @xmath25 and an @xmath385-partition @xmath413 for @xmath129 with degree @xmath186 , one can compute an @xmath431-labeling for @xmath129 within @xmath487 randomized time .    by substituting @xmath369",
    "we get :    [ improvement ] a @xmath486-network - decomposition @xmath129 along with an @xmath488-labeling for it can be computed in @xmath489 randomized time .",
    "when @xmath51 is small the logarithmic factor in the number of labels ( @xmath488 ) of the network decomposition @xmath129 from corollary [ improvement ] is almost negligible .",
    "however , for large @xmath51 ( e.g. , @xmath490 ) this logarithmic factor becomes dominant . in this section",
    "we describe a modification of our algorithm that produces @xmath491-network - decomposition in @xmath492 time .",
    "( for graphs of girth at least 6 the running time of this algorithm is even better , specifically @xmath493 . )",
    "observe that for @xmath494 , the overhead factor of @xmath495 can be swallowed by the @xmath223-notation in @xmath496 .",
    "this version of our algorithm is closely related to the deterministic algorithm of awerbuch et al .",
    "@xcite ; in fact , our algorithms in this section can be viewed as a randomized version of their algorithm .",
    "their deterministic algorithm requires time @xmath497 , and so we essentially show here that their algorithm can be made faster by means of randomization .",
    "the difference between the new variant of our algorithm ( which we introduce here ; we will refer to it as procedure rs - decompose ) and the original version of our algorithm ( described in section [ sc : decompose ] ) is a different algorithm for procedure partition .",
    "( see algorithm [ proced : partitin ] . )",
    "the new variant of procedure partition which we will next describe will be called procedure rs - partition .",
    "( rs stands for the acronym of `` ruling set '' . )    in a graph @xmath1 for a vertex set @xmath91 and positive integer parameters @xmath498 a subset @xmath499 is called an _ @xmath500-ruling set _ for @xmath426 if the following two conditions hold : + ( a ) every pair of distinct vertices @xmath501 satisfy @xmath502 .",
    "+ ( b ) for every vertex @xmath96 there exists a `` ruling vertex '' ( also called `` ruler '' ) @xmath503 such that @xmath504 .",
    "+ observe that an mis is a @xmath505-ruling set . in the description of procedure rs - partition",
    "we will assume that we have an efficient distributed subroutine for computing @xmath500-ruling sets for @xmath506 and @xmath507 .",
    "we will later elaborate on this subroutine .",
    "procedure rs - partition starts with computing a @xmath508-ruling set @xmath509 for the set @xmath510 of high - degree vertices of @xmath25 .",
    "( recall that @xmath283 is an input parameter of procedure rs - partition . )",
    "then every vertex @xmath503 sends an exploration message to distance @xmath511 .",
    "every vertex @xmath76 that receives an exploration message from two distinct rulers @xmath512 assigns himself to the ruler @xmath513 which is closer to it .",
    "( ties are broken in an arbitrary but consistent manner by comparing rulers identities . )    as a result of these explorations clusters @xmath514 are formed .",
    "observe that these clusters all have strong radius at most @xmath511 , and that every @xmath96 ( i.e. , every high - degree vertex ) is assigned to some cluster .",
    "( this collection of clusters is often called a _",
    "ruling forest_. see , e.g. , @xcite . )",
    "procedure rs - partition now forms the set @xmath171 of supernodes by contracting these clusters @xmath515 , exactly as in line 13 of algorithm [ proced : partitin ] .",
    "further , it creates the set @xmath162 by setting @xmath516 , i.e. , every vertex @xmath79 which is not clustered is assigned to @xmath162 .",
    "observe that for every @xmath517 , it holds that @xmath518 .",
    "finally , procedure rs - partition returns the pair @xmath519 , exactly as in line 14 of algorithm [ proced : partitin ] .",
    "[ rprulin ] suppose that procedure rs - partition is invoked on a graph @xmath1 and a positive parameter @xmath283 .",
    "suppose further that it uses a subroutine for computing a @xmath508-ruling set , for a positive integer parameter @xmath511",
    ". the the subgraph @xmath344 has maximum degree smaller @xmath283 .",
    "moreover , @xmath171 consists of at most @xmath520 supernodes , each of which is a cluster of strong diameter at most @xmath521 .",
    "all the assertions of the lemma were already argued in the preceding discussion , except for the claim that @xmath522 .",
    "we next show this claim . recall that every supernode of @xmath171 originated from a cluster @xmath523 , @xmath503 , where @xmath509 is a @xmath508-ruling set for the set @xmath426 of vertices with degree at least @xmath283 .",
    "hence for two distinct clusters @xmath524 from the collection @xmath525 , it holds that @xmath526 , and @xmath527 .",
    "all ( immediate ) neighbors of @xmath513 ( respectively , @xmath528 ) are assigned to the cluster @xmath523 ( resp . , @xmath529 ) , and these sets of neighbors are disjoint .",
    "hence @xmath530 for every @xmath503 , and @xmath531 .",
    "we now use procedure rs - partition instead of procedure partition within procedure rs - decompose .",
    "the diameter of clusters in the modified procedure becomes @xmath532 instead of @xmath533 , but the factor @xmath534 is shaved from the bound on arboricity .",
    "( this is because the bound on @xmath535 for a returned by procedure rs - partition is @xmath283 instead of @xmath350 .",
    "hence as a result we obtain a @xmath536-network - decomposition @xmath129 and an @xmath385-partition @xmath413 of degree @xmath69 of length @xmath51 for @xmath422 .",
    "( see corollary [ partdec ] for a comparison . )    to analyze the running time we need to specify the black - box procedure for computing a @xmath508-ruling set @xmath509 for the set @xmath426 of high degree vertices .",
    "barenboim et al .",
    "@xcite ( based on @xcite and @xcite ) showed that @xmath537-ruling sets can be computed in @xmath538 randomized time in general graphs , and that @xmath539-ruling sets can be computed in graphs with girth at least @xmath540 in just @xmath541 time . by running their routine in @xmath542",
    "we guarantee that any two distinct vertices @xmath501 are at distance at least @xmath111 in @xmath542 , i.e. , at distance at least @xmath543 in @xmath25 . on the other hand",
    ", the domination parameter grows by a factor of @xmath111 , i.e. , we obtain a @xmath544-ruling set in @xmath538 time in general graphs , and a @xmath545-ruling set in @xmath546 time in graphs of girth at least @xmath540 .",
    "hence the running time of procedure rs - partition becomes now @xmath547 for general graphs and @xmath546 for graphs of girth at least @xmath540 , instead of the running time of @xmath127 for procedure partition .",
    "( see lemma [ prptimecns ] . ) hence by lemma [ dectime ] , the overall running time of procedure rs - decompose becomes @xmath548 for general graphs , and @xmath549 for graphs of girth at least @xmath540 .",
    "in the former case @xmath550 , while in the latter it is @xmath540 . to summarize , we have proved the following theorem .",
    "[ rsdecom ] procedure rs - decompose invoked on an @xmath17-vertex graph @xmath1 with a parameter @xmath551 computes an @xmath552-network - decomposition @xmath129 and an @xmath385-partition @xmath413 of degree @xmath553 of length @xmath51 for @xmath422 in @xmath554 randomized time for general graphs , and in @xmath555 time in graphs of girth at least @xmath540 .",
    "see corollary [ partdec ] for the comparison between the result here and the result that we have for the original variant of our algorithm .    also in a way analogous to corollary [ improvement ] , theorem [ rsdecom ]",
    "implies that we can also compute a labeling for the network - decomposition @xmath129 . the time required to compute an @xmath556-coloring for @xmath422 given an @xmath385-partition as above is , by theorem [ arbc ] , at most @xmath557 .",
    "the number of labels ( colors ) is @xmath558 .",
    "we summarize the properties of the network - decomposition @xmath129 in the next corollary .",
    "an @xmath559-network - decomposition @xmath129 along with an @xmath560-labeling for it can be computed in @xmath561 ( respectively , @xmath562 ) randomized time in general graphs ( resp .",
    ", in graphs of girth at least @xmath540 ) .",
    "observe that randomization was used by the modified variant of procedure decompose only for computing a ruling set and for computing the labeling .",
    "there is a deterministic algorithm for computing @xmath563-ruling sets in @xmath65 time due to @xcite .",
    "if we plug it in the above algorithm the diameter of @xmath129 grows from @xmath564 to @xmath565 , and consequently , the running grows to @xmath70 as well .",
    "( the most time - consuming step involves computing a @xmath563-ruling set in the last phase of the algorithm , i.e. , in a supergraph in which each cluster has diameter @xmath566 .",
    "this requires @xmath567 time . )",
    "hence we obtain the following result , which is a generalization of the network decomposition of @xcite .",
    "( they arrived to the same result with @xmath568 , i.e. , they obtained an @xmath569)-network - decomposition . )    [ polylgdecom ] an @xmath570-network - decomposition @xmath129 along with an @xmath385-partition @xmath413 of degree @xmath553 of length @xmath51 for @xmath422 can be computed in deterministic @xmath571 time in general graphs .",
    "this also gives rise to a construction of @xmath70-spanner with @xmath572 edges , in deterministic @xmath70 time , in the congest model .",
    "this is achieved by adding one edge for every pair of adjacent clusters of the decomposition of corollary [ polylgdecom ] . by setting @xmath573 , for a constant @xmath574",
    ", one can get @xmath575 time and @xmath576 edges .",
    "in particular , this results in a sparse skeleton ( with @xmath577 edges ) , in time @xmath16 , for an arbitrarily small constant @xmath46 , in the deterministic congest model .    using the @xmath385-decomposition of @xmath422 from corollary [ polylgdecom ] an @xmath578-labeling for it ( i.e. , @xmath579-coloring ) for @xmath422",
    "can be computed by algorithm arb - linial within additional @xmath580 deterministic time .",
    "( this is another point in which this deterministic routine is different from that of @xcite . to compute the coloring awerbuch et al .",
    "@xcite used here @xmath581 time , but the number of colors was only @xmath69 instead of @xmath560 .",
    "since we insist on having a deterministic polylogarithmic time , this modification is crucial . )",
    "[ polylogdecom ] for any positive integer @xmath51 , an @xmath582-network - decomposition @xmath129 along with an @xmath560-labeling of it can be computed in @xmath583 deterministic time .    by running a @xmath54-round version of algorithm arb - linial , for some positive integer constant @xmath54",
    ", one can also have here running time @xmath584 , but the number of colors ( labels ) becomes @xmath585 .",
    "the results described in the previous sections ( theroem [ dlarge ] ; see also corollary [ improvement ] ) imply an approximation algorithm for the optimization variant of the coloring problem . a distributed approximation algorithm for the graph coloring problem ( based on an @xmath586-network decomposition )",
    "was given in @xcite .",
    "we describe here a generalization of that algorithm which works with any network - decomposition .",
    "the algorithm starts by computing a @xmath587-network - decomposition @xmath129 with an @xmath488-labeling @xmath278 for it .",
    "see corollary [ improvement ] . then in each cluster",
    "@xmath24 the entire induced subgraph @xmath23 is collected into the leader vertex @xmath588 of @xmath24 .",
    "the leader vertex @xmath588 computes locally the optimum coloring @xmath589 for @xmath24 . finally , @xmath588 broadcasts ( a table representation of @xmath589 ) to all vertices of @xmath24 .",
    "each vertex @xmath116 that receives this broadcast computes its final color @xmath590 by @xmath591 .",
    "the running time of this algorithm is the sum of the time required to compute the decomposition @xmath129 ( i.e. , @xmath489 ) with the time required for the computation of the colorings @xmath589 .",
    "the latter is dominated by the diameter of @xmath129 , times a small constant .",
    "the overall running time is therefore @xmath489 .",
    "the next lemma shows that the coloring @xmath592 provides an @xmath488-approximation to the optimal coloring for @xmath25 .",
    "[ appcol ] @xmath592 is a proper @xmath593-coloring .",
    "consider an edge @xmath594 .",
    "if @xmath595 , for some cluster @xmath596 , then @xmath597 , and so @xmath598 . otherwise , let @xmath599 ( respectively , @xmath523 ) be the cluster that contains @xmath116 ( resp . , @xmath513 ) , and @xmath600 .",
    "the clusters @xmath599 and @xmath523 are adjacent in @xmath430 , and thus @xmath601 .",
    "hence @xmath602 , and so @xmath598 .",
    "note also that @xmath603 , for every vertex subset @xmath19 .",
    "the coloring @xmath592 employs @xmath604 colors , i.e. , @xmath605 .",
    "we proved the following theorem :    [ mincol ] for any @xmath17-vertex graph @xmath1 and an integer parameter @xmath459 , an @xmath488-approximation of the optimal coloring for @xmath25 can be computed in @xmath489 time .",
    "in particular , by setting the parameter @xmath51 to be an arbitrarily large constant we can get a distributed @xmath16-approximation algorithm for the coloring problem with a _ constant _ running time , for an arbitrarily small constant @xmath46 .",
    "( the running time is @xmath606 . )",
    "this greatly improves the current state - of - the - art constant - time distributed approximation algorithm for the coloring problem due to @xcite , which provides an approximation guarantee of @xmath14 . on the other hand ,",
    "the dependence of the running time on @xmath141 is only @xmath61 in the result of @xcite .",
    "note that the algorithm in theorem [ mincol ] requires very heavy ( exponential in @xmath17 ) local computations and large messages .",
    "the heavy computations are inevitable , because unless @xmath607 , the coloring problem can not be approximated up to a ratio of @xmath52 , for any constant @xmath46 @xcite .",
    "a result of ajtai et al @xcite shows that triangle - free @xmath17-vertex graphs @xmath25 admit an @xmath608-coloring .",
    "( this existential bound was shown to be tight by kim @xcite . ) here we show that one can construct an @xmath14-coloring of triangle - free graphs in distributed randomized @xmath40 time .",
    "moreover , unlike our algorithm from the previous section , this algorithm uses only _ short _ messages and does not rely on heavy local computations .",
    "the algorithm starts with invoking the algorithm from corollary [ partdec ] on its input @xmath17-vertex graph @xmath1 with the parameter @xmath609 .",
    "we obtain a @xmath610-network decomposition @xmath129 in @xmath127 time .",
    "moreover , the algorithm also constructs an @xmath385-partition @xmath611 of the vertex set @xmath74 of @xmath25 into two sets .",
    "the degree of this @xmath385-partition is @xmath612 .",
    "the clusters in @xmath613 are singleton clusters .",
    "( each such a cluster @xmath614 contains a single vertex @xmath615 such that @xmath616 . )",
    "each cluster @xmath617 is a star rooted at a center vertex @xmath618 .",
    "also , since the graph is triangle - free , neighbors of @xmath619 are not connected via edges one with another .",
    "centers of clusters of @xmath620 now toss a color for their cluster from @xmath470 $ ] .",
    "if a color tossed by the root @xmath619 of @xmath24 is different from the colors of clusters incident on @xmath24 in the supergraph @xmath430 , then @xmath619 stops .",
    "otherwise it continues .",
    "overall , as we have seen , after @xmath61 rounds , clusters of @xmath620 will be colored in @xmath621 colors .",
    "( the communication between centers of adjacent clusters can be executed efficiently using short messages .",
    "this requires some care .",
    "the root @xmath619 of each cluster informs all vertices of @xmath24 of its choice of color .",
    "then each vertex of @xmath24 ( including @xmath619 ) sends the root s color @xmath622 over inter - cluster edges incident on them",
    ". then every vertex @xmath615 checks if one of its neighboring clusters chose a color @xmath150 equal to @xmath622 .",
    "if it is the case , then it informs @xmath619 . in this case",
    "@xmath619 abandons its color ( and informs all vertices of @xmath24 about it ) , and continues to the next round of the randomized coloring procedure . )",
    "then clusters of @xmath613 toss colors for them from the same range .",
    "since each cluster of @xmath613 has only @xmath623 neighbors in @xmath624 , the coloring will be computed within additional @xmath61 rounds . finally within each cluster",
    "@xmath617 actually two colors are used .",
    "( one for the center , and another for its neighbors . )",
    "hence the overall number of colors is at most @xmath625 .",
    "the factor @xmath534 can be swallowed by slightly increasing the @xmath141 in the exponent .",
    "to summarize :    [ colortrianglefree ] an @xmath626-coloring of triangle - free @xmath17-vertex graph can be computed in @xmath61 distributed randomized time , using short messages and polynomially - bounded local computations .",
    "this result extends also to graphs with large girth .",
    "specifically , consider a graph @xmath25 with girth greater than @xmath627 , for some integer @xmath628 .",
    "the arboricity of @xmath25 is at most @xmath88 .",
    "( see , e.g. , @xcite .",
    "theorem 3.7 . ) by @xcite , an @xmath385-partition @xmath629 , @xmath630 , of @xmath25 with degree @xmath631 can be computed in constant time , for an arbitrarily small @xmath46 .",
    "hence , by theorem [ arbc ] , an @xmath632-coloring of @xmath25 can be computed in @xmath633 time . by scaling @xmath141",
    "we obtain the following result .",
    "[ colorlargegirth ] for a graph @xmath25 with girth greater than @xmath63 , and an arbitrarily small constant @xmath46 , an @xmath634-coloring can be computed in constant distributed randomized time ( specifically , @xmath64 ) , using short messages and polynomially - bounded local computations .",
    "note that the algorithm from theorem [ colorlargegirth ] does not employ a network decomposition .",
    "observe also that for @xmath609 ( i.e. , girth greater than @xmath635 ) the numbers of colors in theorems [ colortrianglefree ] and [ colorlargegirth ] are the same , and both are existentially tight up to a slack factor of @xmath45 . on the other hand ,",
    "their proofs are different .",
    "however , theorem [ colortrianglefree ] applies for @xmath636 too , while theorem [ colorlargegirth ] applies only for @xmath637 .",
    "so the result of theorem [ colorlargegirth ] is mainly of interest for @xmath638 ( i.e. , @xmath85 ) .      for the sake of some applications",
    "we need a stronger notion of network decompositions , called a _",
    "@xmath639-separated @xmath92-network - decomposition _ , for positive parameters @xmath639 , @xmath94 , and @xmath80 @xcite .",
    "an @xmath92-network - decomposition @xmath129 of a graph @xmath1 is called _ @xmath639-separated _ if the clusters of @xmath129 can be @xmath80-colored in such a way that every pair of clusters @xmath640 which are colored by the same color are at distance at least @xmath639 from one another , i.e. , @xmath641 .",
    "observe that an ordinary network decomposition is @xmath111-separated .",
    "it is very easy to convert any procedure that constructs an ordinary ( @xmath111-separated ) @xmath92-network - decomposition into a procedure that constructs a _ weak",
    "_ @xmath639-separated @xmath642-network - decomposition , for any parameter @xmath643 .",
    "( see section [ sc : preliminaries ] for the definition of weak decomposition . ) specifically , one just executes the procedure for computing an ordinary @xmath92-network - decomposition on the graph @xmath644 . as a result one obtains a partition @xmath129 of @xmath645 such that each cluster @xmath596 has diameter at most @xmath94 in @xmath645 , and thus weak diameter at most @xmath646 in @xmath25 .",
    "also , for any pair @xmath647 of distinct clusters in @xmath129 which are colored by the same color , the distance between them in @xmath645 is at least @xmath111 , and so the distance between them in @xmath25 is at least @xmath639 .",
    "hence @xmath129 is a weak @xmath639-separated @xmath642-network - decomposition of @xmath25 . simulating a distributed algorithm for @xmath645 in @xmath25 increases the running time by a factor of @xmath648 .",
    "( here we assume that message size is unbounded . ) therefore , corollary [ partdec ] implies the following result .",
    "[ sdecpr ] for a pair of positive integer parameters @xmath649 , a @xmath639-separated weak @xmath650-network - decomposition @xmath129 and an @xmath385 partition @xmath413 of length @xmath51 and degree @xmath186 for @xmath422 can be computed in randomized @xmath651 time , with high probability . moreover , for an integer parameter @xmath456 , one can compute an @xmath429-labeling for @xmath129 in @xmath652 time .",
    "we remark that this simple approach for converting network - decompositions into weak separated ones is not new .",
    "it was used , e.g. , by dubhashi et al .",
    "@xcite .",
    "next we show that our algorithm for constructing ordinary @xmath653-network - decompositions can be adapted to compute _ strong _",
    "@xmath639-separated @xmath654-network - decomposition in randomized time @xmath655 , for an arbitrary integer parameter @xmath656 .    in what follows",
    "we describe procedure sep - decompose which generalizes procedure decompose ( algorithm [ proced : decompose ] ) .",
    "it accepts as input all the parameters of procedure decompose , and also the separation parameter @xmath639 .",
    "consider again procedure decompose ( algorithm [ proced : decompose ] ) .",
    "the termination condition of the procedure ( lines 1 - 2 , the case when the size @xmath140 is small , i.e. , @xmath209 ) stays unchanged . in the general case ( the `` else '' case of the procedure , lines 3 - 15 ) procedure",
    "decompose starts with invoking procedure partition , which decomposes the input graph @xmath145 into @xmath162 and @xmath171 . in the original procedure",
    "the subgraph @xmath344 induced by @xmath162 has a small maximum degree ( at most @xmath169 , where @xmath657 is an input parameter of procedure partition . ) the generalized variant of the procedure ( procedure sep - decompose ) invokes instead a generalized variant of procedure partition , called _ procedure sep - partition_. the latter procedure accepts as input all the parameters of procedure partition , but also the separation parameter @xmath639 .",
    "it also decomposes the input graph @xmath145 into @xmath162 and @xmath171 , but @xmath162 has the property that @xmath658 has maximum degree @xmath659 , i.e. , for every vertex @xmath517 , there are at most @xmath169 other vertices of @xmath145 at distance at most @xmath648 from @xmath79 .",
    "( the distance is with respect to @xmath145 . ) similarly to procedure partition , in procedure sep - partition too the set @xmath171 is a collection of at most @xmath660 clusters of small diameter in @xmath145 .",
    "however , the diameter grows from @xmath543 in the case of procedure partition , to @xmath661 in procedure sep - partition .",
    "then procedure sep - decomposition invokes procedure dec - small .",
    "( see line 5 of algorithm [ proced : decompose ] . )",
    "procedure dec - small converts every vertex @xmath662 into a separate cluster .",
    "( if @xmath145 is the original graph @xmath25 then every vertex @xmath663 gives rise to a cluster @xmath664 .",
    "otherwise @xmath145 is a supergraph of the original graph @xmath25 , and a vertex @xmath662 is a cluster of @xmath25 . )",
    "the resulting set of clusters is denoted by @xmath160 .",
    "procedure dec - small also returns a labeling for clusters of @xmath160 , but similarly to the case of section [ sc : refine ] , this labeling is immaterial for our discussion .    on line 6 of algorithm [ proced : decompose ] procedure sep - decompose invokes itself recursively on the supergraph @xmath173 induced by the set @xmath171 of clusters .",
    "the rest of the procedure stays unchanged .    at this point",
    "we are interested in a version of procedure sep - decompose which only computes a separated network - decomposition without a labeling function for it .",
    "( see the beginning of section [ sc : refine ] . ) to recap , this procedure returns a network - decomposition @xmath665 , where @xmath413 is an @xmath385-partition of the supergraph @xmath422 induced by this decomposition .",
    "( see lemmas [ sets ] and [ partitions ] . )",
    "moreover , it is easy to verify that decompositions @xmath129 produced by procedure sep - decompose satisfy a stronger property than decompositions produced by procedure decompose .",
    "specifically , by construction , for every index @xmath399 , a cluster @xmath419 has at most @xmath659 other clusters @xmath666 at distance at most @xmath648 from it in @xmath145 .",
    "this fact is summarized in the next lemma .",
    "[ partitionofgraph ] @xmath413 is an @xmath385-partition with degree @xmath186 of the supergraph @xmath667 , where @xmath665 .    by invoking one of the algorithms from section [ sc : refine ] for coloring low - arboricity graphs ( for which a short low - degree @xmath385-partition is provided ) we can obtain an @xmath429-labeling for @xmath129 , which has the property that any two distinct clusters @xmath647 which receive the same label are at distance at least @xmath639 from one another in @xmath422 , and thus at distance at least @xmath639 from one another in @xmath25 .",
    "the running time of this step is @xmath668 .",
    "( see theorem [ partdec ] . )",
    "alternatively , one can have an @xmath488-labeling with this property in time @xmath669 .",
    "( see corollary [ improvement ] . )",
    "next we analyze @xmath670 . to do it",
    "we first describe procedure sep - partition .",
    "( see algorithm [ proced : partitin ] for procedure partition . )",
    "the procedure accepts the same parameters as procedure partition , but also the separation parameter @xmath639 .",
    "( in fact , procedure partition is a special case of procedure sep - partition , where @xmath671 . ) similarly to procedure partition , in procedure sep - partition every vertex @xmath79 selects itself ( joins @xmath176 ) independently at random with probability @xmath180 .",
    "then every selected vertex @xmath79 sends an exploration message to distance @xmath648 from it in @xmath145 . every vertex @xmath116 which is not selected ( @xmath672 ) and receives",
    "at least one exploration message joins the cluster centered by the closest originator of an exploration message received by @xmath116 .",
    "( ties are broken in an arbitrary but consistent way according to the identities of originators . if originators themselves are clusters , then each of them has its own leader whose identity serves as the identity of the cluster .",
    "the consistent rule for breaking ties may be , for example , to prefer an originator with a smaller identity . )",
    "other vertices join the set @xmath162 .",
    "the procedure returns the set @xmath162 and the set @xmath171 of clusters which are created in the way described above .",
    "observe that if @xmath145 is not the original graph but rather a supergraph of it then the algorithm is executed by clusters rather than by single vertices . in other words , in this case the center of each cluster simulates all the operations that need to be performed by the cluster .",
    "the next lemma shows that clusters created by procedure sep - partition are connected and have bounded diameter .",
    "[ invokepartition ] consider an invocation of procedure sep - partition(@xmath673 ) , where @xmath674 is a parameter and @xmath656 is an integer parameter .",
    "then each vertex @xmath517 has degree @xmath350 in @xmath675 , and each cluster @xmath676 has ( strong ) diameter at most @xmath677 in @xmath145 .    let @xmath150 be a sufficiently large fixed constant , and consider a vertex @xmath678 such that a @xmath679-neighborhood @xmath680 of @xmath79 in @xmath145 contains at least @xmath681 vertices .",
    "then with probability at least @xmath149 at least one of the vertices @xmath682 joins @xmath176 , and the vertex @xmath79 becomes clustered . hence with probability at least @xmath683 all vertices @xmath79 with @xmath684 become clustered , and so each unclustered vertex @xmath517 satisfies @xmath685 .",
    "consider a cluster @xmath676 .",
    "it is centered around an originator @xmath79 of an exploration message .",
    "( the vertex @xmath79 belongs to @xmath176 , i.e. , it is selected . )",
    "consider a vertex @xmath686 , and let @xmath687 be a shortest @xmath688 path in @xmath145 .",
    "let @xmath689 be a vertex on this path .",
    "( note that @xmath690 are vertices of @xmath145 , i.e. , they are possibly clusters themselves . )",
    "it follows that @xmath79 is the closest selected vertex to @xmath689 , and if there exists another selected vertex @xmath691 which satisfies @xmath692 , then @xmath79 has a smaller identity than @xmath693 .",
    "( as otherwise @xmath693 would rule @xmath116 as well . ) hence @xmath694 .",
    "consequently all vertices of @xmath687 are in @xmath24 , and the length of @xmath695 is at most @xmath648 .",
    "hence the cluster @xmath24 has strong radius at most @xmath648 , i.e. , strong diameter at most @xmath696 .",
    "observe also that by the same argument as in lemma [ partitnscnd ] , the number of clusters in @xmath171 is , with high probability , @xmath697 .",
    "we are now ready to analyze the diameter @xmath670 of the ultimate network - decomposition @xmath129 .",
    "the following lemma generalizes lemma [ dec ] .",
    "let @xmath698 be a @xmath639-separated network - decomposition produced by the invocation sep - decompose(@xmath699 ) on an input graph @xmath25 .",
    "then for each @xmath227 $ ] , @xmath700 .",
    "we prove by induction on @xmath217 that in the @xmath217th level recursive invocation of procedure sep - decompose each vertex @xmath79 of the input graph @xmath228 of this invocation is a cluster of the original graph @xmath25 with diameter at most @xmath701 .",
    "since for each @xmath227 $ ] , clusters of @xmath402 are vertices of @xmath702 the assertion of the lemma follows from the inductive claim . +",
    "* base : * @xmath703 . +",
    "* step : * consider an index @xmath704 . by lemma [ invokepartition ] , each cluster @xmath24 created by the @xmath217th level invocation of procedure sep - decompose has strong diameter at most @xmath677 in @xmath702 .",
    "it follows that @xmath705 by induction hypothesis it follows that @xmath706 since vertices @xmath79 of @xmath707 are clusters which were formed by the @xmath217th level invocation of procedure sep - decompose , the assertion of the lemma follows .",
    "we summarize this discussion with the following corollary .",
    "[ separatedcol ] consider an invocation of sep - decompose(@xmath708 ) , where @xmath709 are integer parameters .",
    "it produces a @xmath639-separated strong @xmath710-network - decomposition @xmath665 , along with an @xmath385-partition @xmath413 for @xmath667 .",
    "the running time of this invocation is @xmath711 .    as was discussed in the paragraph following lemma [ partitionofgraph ] , using this network - decomposition one can compute an @xmath429-labeling for @xmath129 within additional @xmath712 rounds , or alternatively , an @xmath488-labeling within additional @xmath713 rounds . in both cases the labeling satisfies that any two distinct clusters @xmath647 which receive the same label are at distance at least @xmath639 one from another in @xmath25 .",
    "one can also improve the parameters of the network - decomposition from corollary [ separatedcol ] from @xmath710 to @xmath714 at the expense of increasing the running time from @xmath715 to @xmath716 in general graphs , and @xmath717 in graphs with girth at least @xmath540 .",
    "this is done by introducing to procedure sep - decompose a modification analogous to the one that we introduced to procedure decompose in section [ sc : betterlabels ] .",
    "recall that the difference between procedure rs - decompose and procedure decompose is that the former invokes procedure rs - partition as a subroutine , while the latter invokes procedure partition .",
    "procedure rs - partition computes a @xmath508-ruling set @xmath509 for the set @xmath718 of high degree vertices of its input graph @xmath25 , for a parameter @xmath511 .",
    "the variant of this procedure that we are now describing , called procedure sep - rs - partition , accepts as input also the separation parameter @xmath639 , and computes a @xmath719-ruling set @xmath720 for the set @xmath721 of vertices that have at least @xmath283 vertices in their @xmath679-ball .",
    "the clusters @xmath722 are then created in the same way as in procedure rs - partition . in particular , their strong radii are still bounded by @xmath511 .",
    "also , every vertex @xmath723 is assigned to some cluster .",
    "the sets @xmath162 and @xmath171 are now formed as in procedure rs - partition .",
    "every vertex @xmath517 now satisfies @xmath724 .",
    "the following lemma is analogous to lemma [ rprulin ] , and its proof is very similar to that of lemma [ rprulin ] .",
    "[ rpinv ] suppose that procedure sep - rs - partition is invoked on a graph @xmath1 and positive parameters @xmath639 and @xmath283 .",
    "suppose further that it uses a subroutine for computing a @xmath719-ruling set , for a positive integer parameter @xmath639 .",
    "then in the subgraph @xmath344 every vertex @xmath517 satisfies @xmath724 .",
    "moreover , @xmath171 consists of at most @xmath520 supernodes , each of which is a cluster of strong diameter at most @xmath521 .",
    "it follows now that procedure sep - rs - decompose computes a @xmath639-separated @xmath536-network - decomposition @xmath129 . for the running time we need again to specify the running time required for computing a @xmath719-ruling set . by running the algorithms for computing a ruling set due to barenboim et al .",
    "@xcite and kothapalli and pemmaraju @xcite respectively in @xmath725 we obtain a @xmath726-ruling set in the case of general graphs , and a @xmath727-ruling set in the case of graphs of girth at least @xmath540 . in both cases @xmath728 , and the running time is @xmath729 in the former case and @xmath730 time in the latter . the rest of the analysis is identical , except that the overall running time of procedure sep - rs - decompose becomes @xmath731 and @xmath732 in the cases of general graphs and graphs of girth at least @xmath540 , respectively .",
    "procedure sep - rs - decompose invoked on an @xmath17-vertex graph @xmath1 with positive integer parameters @xmath51 and @xmath639 computes a @xmath639-separated strong @xmath733-network - decomposition @xmath129 in randomized time @xmath731 in general graphs and in @xmath734 randomized time in graphs of girth at least @xmath540 .",
    "one application of strong separated network - decomposition is _ low - intersecting partitions_. low - intersecting partitions were introduced by busch et al .",
    "@xcite , in their work on universal steiner trees .",
    "a _ low - intersecting @xmath72-partition _",
    "@xmath73 of a graph @xmath25 is the partition of the vertex set @xmath74 such that + ( 1 ) every cluster @xmath24 in @xmath73 has strong diameter at most @xmath75 .",
    "+ ( 2 ) for every vertex @xmath76 , a ball @xmath77 of radius @xmath78 around @xmath79 intersects at most @xmath80 clusters of @xmath73 . +",
    "busch et al . showed that given a hierarchy of low - intersecting partitions with certain properties ( see @xcite for details ) one can construct a universal steiner tree .",
    "( see @xcite for the definition of universal steiner tree . ) also , vice versa , given universal steiner tree they showed that one can construct a low - intersecting partition .",
    "they constructed a low - intersecting partition with @xmath81 , and arbitrary @xmath78 .",
    "we next argue that a @xmath735-separated strong @xmath736-network - decomposition @xmath129 is also a low - intersecting partition with parameters @xmath737 ) . indeed , every cluster @xmath24 of @xmath129 has strong diameter at most @xmath738 .",
    "moreover , consider a vertex @xmath79 and a ball @xmath77 of radius @xmath78 around @xmath79 .",
    "observe that for every color class @xmath739 $ ] of @xmath422 , the ball @xmath77 can intersect at most one cluster @xmath24 colored by @xmath217 .",
    "( this is because for every two @xmath217-colored clusters @xmath647 , it holds that @xmath740 . )",
    "hence altogether @xmath77 may intersect up to @xmath741 clusters of @xmath129 .",
    "this proves the claim .",
    "therefore , our distributed algorithm for computing a @xmath735-separated strong @xmath742-network - decomposition in distributed randomized time @xmath83 in general graphs and in + @xmath743 in graphs of girth at least @xmath540 provides also a distributed algorithm with the same running time for constructing a low - intersecting @xmath744-partition .",
    "we summarize :    for any pair of positive integer parameters @xmath745 , a low - intersecting @xmath744-partition can be constructed in @xmath83 randomized time in general graphs and in @xmath743 randomized time in graphs of girth at least @xmath540 .",
    "we remark that this construction can be implemented using short messages .",
    "+ comparing this result with the algorithm of busch et al .",
    "@xcite we note that the partition of @xcite has smaller radius .",
    "( it is @xmath86 instead of @xmath87 in our case . ) on the other hand , the intersection parameter @xmath80 of our partitions is smaller .",
    "( it is @xmath88 instead of @xmath89 . ) in particular , the intersection parameter in the construction of @xcite is always @xmath90 , while ours can be as small as one wishes .",
    "finally , the algorithm of busch et al .",
    "@xcite is not distributed , and seems inherently sequential .      in this section",
    "we employ our network - decomposition algorithm in order to derive approximation algorithms for the minimum dominating set and minimum @xmath54-spanner problems .",
    "suppose that we are given a @xmath543-separated @xmath29-network - decomposition @xmath129 of a graph @xmath25 .",
    "for each cluster @xmath596 , we compute in parallel a dominating set @xmath746 of @xmath24 , such that @xmath176 has minimum cardinality among all dominating sets @xmath747 of @xmath24 .",
    "the computation of @xmath176 is performed by collecting the topology of the clusters and their neighborhoods by the leaders of respective clusters , performing the computation locally using exhaustive search , and broadcasting the results to the vertices of the clusters and their neighbors .",
    "since the weak diameter of the clusters is at most @xmath2 , this requires @xmath748 rounds .",
    "we next show that the resulting set obtained by taking the union of the dominating sets in all clusters constitutes an @xmath4-approximate minimum dominating set of the input graph @xmath25 .",
    "[ dset ] for a @xmath543-separated @xmath29-network - decomposition @xmath129 , suppose that we have computed a minimum dominating set @xmath749 of @xmath24 , for each cluster @xmath596",
    ". then @xmath750 .    for @xmath751 ,",
    "let @xmath752 denote the set of all vertices with label @xmath217 in the network - decomposition @xmath129 .",
    "let @xmath753 .",
    "we claim that @xmath754 , where @xmath509 is a minimum dominating set of @xmath25 .",
    "( note that in the current proof the notation @xmath755 stands for a _ cluster _",
    "@xmath24 that belongs to @xmath756 , rather then just a subgraph of @xmath756 , since @xmath757 is defined only for clusters . )",
    "let @xmath758 be a cluster of label @xmath217 , @xmath751 . then @xmath759 .",
    "observe that @xmath760 is a dominating set of @xmath3 .",
    "( since @xmath509 is a dominating set of @xmath3 , and any vertex in @xmath761 does not dominate any vertex in @xmath3 . ) therefore , @xmath762 .",
    "note also that for any cluster @xmath763 of label @xmath217 it holds that @xmath764 .",
    "indeed , @xmath129 is a @xmath543-separated network - decomposition , and thus , for any @xmath765 it holds that @xmath766 .",
    "hence for any @xmath767 , it holds that @xmath768 , and thus @xmath769 .",
    "consequently , @xmath770 therefore , @xmath771 \\right \\ } | \\leq   \\sum_{i = 1}^{\\ell } |\\cup \\ { d_c \\ | \\ c \\subseteq u_i \\}|   \\leq \\ell \\cdot |mds(g)|.\\ ] ]    recall that by corollary [ polylgdecom ] , there is a routine that computes an @xmath772-network - decomposition in deterministic time @xmath567 , for any @xmath459 . as was discussed above , this routine can also be adapted to compute a weak @xmath543-separated network - decomposition with the same properties within the same running time .",
    "( see section [ sc : strongdecomp ] ; both the diameter parameter and the running time grow by a constant factor @xmath773 . ) also , similarly to corollary [ separatedcol ] , one can adapt this routine so that it will compute a strong network - decomposition with the same parameters and the same running time .",
    "( the diameter and the running time grow by a factor of @xmath774 , which is however swallowed by the notation @xmath567 . ) using this network - decomposition in conjunction with lemma [ dset ] we obtain the following theorem .    for an @xmath17-vertex graph @xmath25 , and",
    "a positive integer parameter @xmath51 an @xmath69-approximation for the minimum dominating set problem can be computed in deterministic time @xmath571 .",
    "another problem for which an efficient approximation algorithm can be obtained using network - decompositions is the _",
    "minimum @xmath54-spanner _ problem . given an ( unweighted ) graph @xmath1 and",
    "a positive integer parameter @xmath54 , a subgraph @xmath56 , @xmath57 , is a _",
    "@xmath54-spanner _ of @xmath25 if for every pair @xmath58 of vertices , @xmath59 . in the _",
    "minimum @xmath54-spanner _ problem the objective is to find a @xmath54-spanner of the input graph with as few edges as possible .",
    "suppose that we are given a @xmath775-separated @xmath5-network - decomposition @xmath129 of an input graph @xmath776 .",
    "let @xmath777 be a single color class of this labeling , i.e. , @xmath778 for each @xmath779 $ ] , and @xmath780 , for every pair of distinct indices @xmath392 , @xmath781 $ ] .",
    "let @xmath782 , for every @xmath779 $ ] .",
    "note that @xmath783 , for every pair of distinct indices @xmath392 .",
    "denote @xmath784 , and consider a minimum @xmath54-spanner @xmath785 for @xmath786 which is allowed to use edges from @xmath787 .",
    "let also @xmath788 be a minimum @xmath54-spanner for @xmath25 .",
    "[ tspan ] @xmath789 .",
    "observe that the restriction @xmath790 of @xmath788 to @xmath791 is a @xmath54-spanner for @xmath246 . indeed , consider an edge @xmath792 .",
    "let @xmath793 be the cluster such that @xmath794 .",
    "then @xmath788 contains a path of length at most @xmath54 between @xmath116 and @xmath513 , and so this path belongs to @xmath795 .",
    "the lemma now follows as @xmath785 is the minimum @xmath54-spanner for @xmath246 which is allowed to use edges from @xmath796 , while @xmath790 is a @xmath54-spanner for @xmath246 of this type .",
    "hence @xmath797 .",
    "denote also by @xmath798 the minimum @xmath54-spanner for @xmath799 which is allowed to use edges of @xmath800 .",
    "[ tspansetsmall ] @xmath801 .",
    "obviously , @xmath802 is a @xmath54-spanner for @xmath786 which uses only edges of @xmath787 . hence by optimality of @xmath785 , @xmath803 .    in the opposite direction , for every index",
    "@xmath779 $ ] , let @xmath804 .",
    "by optimality of @xmath798 , @xmath805 . also , for every pair of distinct indices @xmath781 $ ] , @xmath806 .",
    "( this is because @xmath807 . )",
    "hence @xmath808 ( the last inequation is , in fact , equality . )    in other words , to compute a minimum @xmath54-spanner @xmath785 for @xmath786 one can compute minimum @xmath54-spanners @xmath809 for @xmath810 ( which are allowed to use edges of @xmath811 , respectively ) , and take their union .",
    "our distributed algorithm will do precisely this . in each cluster @xmath24 of @xmath129",
    "it computes a minimum @xmath54-spanner for @xmath812 using edges of @xmath796 , @xmath813 .",
    "this computation is done by collecting the entire topology of @xmath814 into a vertex in @xmath24 , doing a local ( possibly very heavy ) computation , and informing all vertices of @xmath815 about the results of this computation .",
    "the union of all these @xmath54-spanners will be our ultimate spanner .",
    "hence the algorithm returns a spanner @xmath816 , where for each index @xmath817 $ ] , @xmath818 is a minimum @xmath54-spanner for @xmath819 , where @xmath820 is the set of all vertices labeled by @xmath821 in the network decomposition @xmath129 .",
    "( in other , words , they belong to clusters of color @xmath821 . note , however , that to execute the algorithm we do not need to know these colors / labels . ) since by lemma [ tspansetsmall ] , for every @xmath822 $ ] , @xmath823 , it follows that the algorithm returns an @xmath4-approximation .",
    "the running time of the algorithm is @xmath824 . to summarize :",
    "for any pair of positive integer parameters @xmath825 an @xmath69-approximation of the minimum @xmath54-spanner problem in @xmath17-vertex graphs can be computed in @xmath826 randomized time .",
    "observe that the same result applies to the @xmath54-spanner problem in _ directed _ graphs , by the same argument .",
    "note that even though the graph is directed , we assume that the communication over every edge is bidirectional .",
    "it is well known that an @xmath67-approximation of minimum dominating set can be computed in polynomial time in the sequential setting .",
    "( see , e.g. , @xcite . )",
    "however , this approach can not be applied directly to our algorithms since we compute minimum dominating sets @xmath757 of clusters @xmath24 , such that @xmath749 rather than @xmath827 . on the other hand",
    ", this problem reduces to the set cover problem with both the degree parameters ( i.e. , the maximum cardinality of a set and the maximum number of sets that share an element ) bounded by @xmath309 .",
    "hence this problem admits a polynomial - time @xmath67-approximation algorithm .",
    "( see , e.g. , @xcite . )",
    "one can also extend the classical centralized @xmath67-approximation algorithm for the mds problem directly to our slightly more general problem .",
    "this extension is described below .",
    "consequently , we can obtain a dominating set whose size is at most @xmath67 the size of the minimum dominating set of @xmath24 consisting of vertices of @xmath828 .",
    "this can be achieved in the following way .",
    "initially @xmath829 .",
    "we proceed in phases , each time selecting a vertex @xmath79 from @xmath24 such that @xmath830 is maximal , and adding @xmath79 to @xmath757 .",
    "( ties are broken by preferring vertices that belong to @xmath831 , and if this does not solve the tie , it is broken arbitrary . )",
    "once no uncovered vertex remains we are done .",
    "let @xmath832 be a minimum dominating set of @xmath24 .",
    "we claim that @xmath833 .",
    "the proof is by amortized analysis .",
    "each time a vertex @xmath79 is added to @xmath757 we assign a weight @xmath834 to each vertex of @xmath835 . observe that the sum of all weights assigned during this procedure is @xmath836 .",
    "next , ( for analysis ) let each vertex of @xmath24 select a single vertex from @xmath837 that dominates it .",
    "consider a vertex @xmath838 and the set @xmath509 of all neighbors of @xmath116 in @xmath24 that selected @xmath116 .",
    "next , we analyze the sum of weights of @xmath509 . for each @xmath503",
    "it is assigned a weight once a neighbor of @xmath513 ( or @xmath513 itself ) joins the dominating set @xmath757 . let @xmath217 be the number of the phase in which it happens , and @xmath839 denote the number of neighbors of @xmath116 in @xmath24 that are not covered in the beginning of phase @xmath217 .",
    "also , let @xmath840 denote the neighbor that dominates @xmath513 , for which @xmath513 obtained its weight . since in each phase a vertex @xmath79 with maximal @xmath841",
    "is selected , it holds that @xmath842 .",
    "consequently , @xmath513 is assigned a weight at most @xmath843 .",
    "therefore , the sum of weights of @xmath509 is at most @xmath844 .",
    "therefore , the sum of all weights in the graph is @xmath845 .",
    "this completes the proof .",
    "a similar idea can be applied in the case of the minimum @xmath54-spanner problem .",
    "again , we need a centralized polynomial - time approximation algorithm for the minimum @xmath54-spanner for edges of @xmath812 ( for a cluster @xmath24 ) , while the spanner is allowed to use edges of @xmath796 .",
    "this is an instance for the _ client - server @xmath54-spanner _ problem , and for the case @xmath846 it was devised in @xcite . by plugging it in our distributed algorithm for approximating spanners",
    "we obtain a distributed @xmath186-approximation algorithm with running time @xmath496 for the directed and undirected @xmath111-spanner problem .",
    "the latter algorithm only employs polynomially - bounded local computations . to the best of our knowledge ,",
    "there are no existing centralized algorithms with a non - trivial approximation guarantee for the client - server @xmath54-spanner problem for @xmath847 .",
    "it is however likely that the lp - based approaches to the minimum @xmath54-spanner problem ( such as @xcite ) extend to this more general problem .",
    "b.  awerbuch , a.  v. goldberg , m.  luby , and s.  plotkin . network decomposition and locality in distributed computation . in _ proc .",
    "of the 30th annual symposium on foundations of computer science _ , pages 364369 , 1989 .",
    "l.  barenboim , and m.  elkin .",
    "sublogarithmic distributed mis algorithm for sparse graphs using nash - williams decomposition . in _ proc . of the 27th acm symp . on principles of distributed computing _ ,",
    "pages 2534 , 2008 .",
    "p.  berman , a.  bhattacharyya , k.  makarychev , s.  raskhodnikova , and g.  yaroslavtsev .",
    "improved approximation for the directed spanner problem . in _ proc . of the 38th international colloquium on automata , languageas , and programming _ , pages 1 - 12 , 2011 .        c.  busch , c.  dutta , j.  radhakrishnan , r.  rajaraman , and s.  srinivasagopalan .",
    "split and join : strong partitions and universal steiner trees for graphs . in _ proc . of the 53rd annual ieee symposium on foundations of computer science _ , pages 81 - 90 , 2012 .",
    "b.  derbel , c.  gavoille , d.  peleg , and l.  viennot . on the locality of",
    "distributed sparse spanner construction . in _ proc . of the 27th acm symp . on principles of distributed computing _",
    ", pages 273 - 282 , 2008 .",
    "m.  elkin , and d.  peleg .",
    "the client - server 2-spanner problem with applications to network design . in _ proc . of the 8th international colloquium on structural information and communication complexity _",
    ", pages 117 - 132 , 2001 .",
    "u.  feige , and j.  kilian .",
    "zero knowledge and the chromatic number . 57:187199 , 1998 . b.  gfeller , and e.  vicari . a randomized distributed algorithm for the maximal independent set problem in growth - bounded graphs . in _ proc .",
    "of the 26th acm symp . on principles of distributed computing _ , pages 53 - 60 , 2007 .",
    "l.  jia , r.  rajaraman , and r.  suel .",
    "an efficient distributed algorithm for constructing small dominating sets . in _ proc . of the 20th acm symp . on principles of distributed computing _ , pages 33 - 42 , 2001 .",
    "k.  kothapalli , and s.  pemmaraju . super - fast @xmath543-ruling sets . in _ proc . of the @xmath854nd iarcs international conference on foundations of software technology and theoretical computer science _ , pages 136 - 147 , 2012 .            c.  lenzen , y.  oswald , and r.  wattenhofer",
    "what can be approximated locally ?",
    "case study : dominating sets in planar graphs . in _",
    "proc 20th acm symp . on parallelism in algorithms and architectures _ , pages 46 - 54 , 2008 .",
    "see also _ tik report number 331 _ , eth zurich , 2010 .",
    "j.  schneider , and r.  wattenhofer . a log - star distributed maximal independent set algorithm for growth bounded graphs . in _ proc . of the 27th acm symp . on principles of distributed computing _ ,",
    "pages 3544 , 2008 ."
  ],
  "abstract_text": [
    "<S> a partition @xmath0 of @xmath1 into clusters of strong ( respectively , weak ) diameter @xmath2 , such that the supergraph obtained by contracting each @xmath3 is @xmath4-colorable is called a strong ( resp . </S>",
    "<S> , weak ) @xmath5-network - decomposition . </S>",
    "<S> network - decompositions were introduced in a seminal paper by awerbuch , goldberg , luby and plotkin in 1989 . </S>",
    "<S> awerbuch et al </S>",
    "<S> . showed that strong @xmath6 , @xmath7-network - decompositions can be computed in distributed deterministic time @xmath8 . </S>",
    "<S> even more importantly , they demonstrated that network - decompositions can be used for a great variety of applications in the message - passing model of distributed computing .    </S>",
    "<S> the result of awerbuch et al . was improved by panconesi and srinivasan in 1992 : in the latter result @xmath9 , and the running time is @xmath10 as well . in another remarkable breakthrough linial and </S>",
    "<S> saks ( in 1992 ) showed that weak @xmath11-network - decompositions can be computed in distributed randomized time @xmath12 . much more recently </S>",
    "<S> barenboim ( 2012 ) devised a distributed randomized constant - time algorithm for computing strong network decompositions with @xmath13 . </S>",
    "<S> however , the parameter @xmath4 in his result is @xmath14 .    in this paper </S>",
    "<S> we drastically improve the result of barenboim and devise a distributed randomized constant - time algorithm for computing strong @xmath15-network - decompositions . as a corollary </S>",
    "<S> we derive a constant - time randomized @xmath16-approximation algorithm for the distributed minimum coloring problem , improving the previously best - known @xmath14 approximation guarantee . </S>",
    "<S> we also derive other improved distributed algorithms for a variety of problems .    </S>",
    "<S> most notably , for the extremely well - studied distributed minimum dominating set problem currently there is no known deterministic polylogarithmic - time algorithm . </S>",
    "<S> we devise a _ deterministic _ polylogarithmic - time approximation algorithm for this problem , addressing an open problem of lenzen and wattenhofer ( 2010 ) </S>",
    "<S> .    [ section ] [ section ] [ thm]lemma [ thm]corollary [ thm]fact [ figure]fig . </S>"
  ]
}
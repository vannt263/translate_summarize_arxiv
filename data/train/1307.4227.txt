{
  "article_text": [
    "representation theory is an essential tool in mathematical and physical research . to this end ,",
    "linear algebra , the theory of special functions , arithmetic and related combinatorics are its usual objectives . a particularly potent example illustrating the power of representation theory may be offered in the context of hecke - type algebras @xcite .    in this paper",
    "we define a hecke - type structure called the double affine @xmath0-dependent braid group and investigate its properties . among its quotient groups is the double affine hecke algebra ( daha ) which is of particular interest as its polynomial representations @xcite have close connections to macdonald and jack polynomials @xcite .",
    "furthermore , we have seen how some specific polynomials emerging from this algebra , when subject to special wheel conditions , yield interesting @xmath2-deformed laughlin and haldane - rezayi wave functions @xcite .",
    "these are believed to be excellent candidates for describing quantum hall effect ground states ; by adjusting the wheel condition parameters , one may fix the filling fraction of these wavefunctions .",
    "other polynomials directly obtained from the daha can , in a similar fashion , be used to describe the ground states of @xmath3 models @xcite .",
    "we provide an intuitive pictorial representation of a daha in this paper .",
    "it is difficult to overestimate the power of graphical representations in illustrating abstract concepts in pure mathematics . since the emergence of the intuitive pictorial representation of the braid group there has been a massive interest in its structure , greatly advancing the field .",
    "for example , when kauffman introduced diagrams @xcite to explain the jones polynomial @xcite in the context of hecke algebras , the subject became more accessible and widely - known .    before presenting our graphical representation which provides an interpretation of all dahas and their underlying parameters , we firstly establish the relation of dahas to other well known abstract algebraic structures . in particular we define and give readers a clear picture of the structure of a double affine @xmath0-dependent braid group ( @xmath4 ) .",
    "it is constructed by appending to the braid group a set of @xmath5 operators @xmath6 , before extending it to an affine @xmath0-dependent braid group .",
    "our interest in @xmath4 stems from its pole position with respect to other algebraic structures whose primary element is a braid group .",
    "in fact , appending to the double affine braid group a set of operators @xmath7 generalises the underlying braid group .",
    "it does so by turning braid group strands into ribbons and permitting @xmath8 twists .",
    "the original braid group then corresponds to @xmath9 , where @xmath10 is freely generated by the operators @xmath1 .",
    "thus the original braid group is in other words equivalent to @xmath11 where @xmath12 .",
    "similarly the affine braid group corresponds to @xmath13 .",
    "naturally the elliptic braid group @xcite is obtained from @xmath4 by ignoring the twists or equivalently by contracting ribbons to strands , i.e. @xmath14 .",
    "in addition , taking the quotient @xmath15 is equivalent to considering twists on different ribbons as identical . furthermore imposing the hecke relation and setting @xmath16 , where @xmath17 , we obtain the double affine hecke algebra ( of type a ) @xcite .",
    "these relations are illustrated in figure [ f1 ] .",
    "note that @xmath18 and @xmath19 .     with other algebraic structures",
    "whose primary element is a braid group.,title=\"fig : \" ] [ f1 ]    complementing the algebraic description of a double affine @xmath0-dependent braid group , we provide a pictorial representation .",
    "the graphical calculus is based on ribbons within cubes , where opposite vertical faces of the cube are identified ; a topologically equivalent presentation is given in terms of ribbons living inside a toroid .",
    "we clearly illustrate all of the defining relations of @xmath4 in our new cube - ribbon representation .",
    "it provides a concrete visual description of its structure , in particular we obtain a very straightforward interpretation of the action of the generators @xmath1 who create @xmath8 twists in the ribbons . in the quotient group @xmath15 , where we obtain the double affine hecke algebra ,",
    "we show that @xmath2 corresponds to the factor when replacing a ribbon with a twist by one with no twist at all .",
    "hence our cube - ribbon representation describes double affine hecke algebras for all values of @xmath2 . in @xmath14",
    "the ribbons are reduced to strands and twists are no longer possible , therefore our pictorial representation gives a toroidal description of the elliptic braid group .",
    "the layout of this paper is as follows : in sections 1 through 3 , we define the @xmath0-dependent braid group and introduce the affine @xmath0-dependent braid group .",
    "we give their defining relations  which depend on a set of operators @xmath7  and pictorially represent their generators .    in section 4 we present the complete construction of the double affine @xmath0-dependent braid group .",
    "we outline our method of graphically representing this group structure , which depends on the set of @xmath7 and obtain the main result of this paper : that is we show that each generator @xmath1 creates a twist in the ribbon .",
    "we also show that when @xmath20 our cube - ribbon representation describes the elliptic braid group .    in section 5 we indicate how to obtain the double affine hecke algebra from @xmath4 .",
    "we highlight that our graphical calculus is valid for all dahas , with no restriction on the parameter @xmath2 upon which this algebra depends .",
    "+ finally we conclude with some discussion as to how this pictorial representation could settle some unresolved issues , specifically regarding matrix and tangle representations , and outline some related future work .",
    "throughout this paper we follow the general approach of @xcite , namely , we present all of the algebraic relations in terms of multiplication rules for the elements of the algebra",
    ". one could adopt a much more rigourous approach via group quotients , etc .",
    "as in @xcite , but here we opt for this more `` physics '' approach .",
    "we begin by reviewing the the braid group and its @xmath0-dependent extension .",
    "these are essential to our construction of @xmath4 .",
    "similarly its well - established pictorial representation serves as a starting point for our cube - ribbon representation .",
    "the @xmath5-strand braid group @xmath21 is as follows @xcite : @xmath21 is the group generated by the @xmath22 invertible elements @xmath23 satisfying the relations @xmath24 ( the second of the above is referred to as the _",
    "braid relation_. )    it is indeed well known that this algebraic description can be incorporated into a pictorial one by defining @xmath25 and its inverse @xmath26 to correspond to the exchange of the @xmath27 and @xmath28 strands as illustrated below :        multiplication is then defined by stacking : ab is the braid obtained by stacking a on top of b and gluing the bottom ends of the strands in a to the top ends of those in b.    we now define the @xmath5-strand @xmath0-dependent braid group , @xmath11 , as follows : @xmath11 is the group generated by the invertible elements @xmath23 satisfying ( [ t1 ] ) and ( [ t2 ] ) , in addition to a set of commuting elements @xmath29 satisfying the relations @xmath30 these relations imply @xmath31 for all @xmath32 , that is the @xmath0s commute with all even powers of the @xmath33s but not with odd powers .",
    "the above relations may be familiar to many readers .",
    "they appear in the study of framed , or ribbon , braid groups , introduced in @xcite .",
    "a more in - depth and mathematically rigourous treatment of framed braids or ribbon braids can be found in @xcite , among others .",
    "we use this well - known structure as a starting point for establishing the proper context for our treatment of dahas .    as it stands , only the trivial braids ",
    "those whose strands go straight from top to bottom without crossing  can represent the @xmath0s in a way consistent with ( [ t3])-([t6 ] ) .",
    "we shall see later how to introduce nontrivial graphical representations for the @xmath0s .",
    "the @xmath0-dependent braid group @xmath11 can be extended to an affine braid group @xmath34 by appending to it @xmath5 invertible operators @xmath35 .",
    "these satisfy the relations @xmath36 the last of these relations implies that we need only one of the @xmath35 ( and all of the @xmath25 ) to generate the others .",
    "for example , ( [ y3 ] ) can be used to rewrite @xmath35 for @xmath37 as @xmath38    @xmath34 is thus fully generated by @xmath39 and the @xmath25 .",
    "a more elementary presentation @xcite is to write all the @xmath35 in terms of @xmath25 and an element @xmath40 defined as @xmath41 all of the @xmath35 can now be written in terms of @xmath40 and the @xmath25 using ( [ y3 ] ) : @xmath42 the other defining relations for @xmath34 , ( [ y1 ] ) and ( [ y2 ] ) , may be rewritten in terms of @xmath40 as @xmath43    also of interest is that the above relations imply that @xmath44 .",
    "this tells us that @xmath45 commutes with all the @xmath35 , and thus @xmath45 is central in @xmath34 .",
    "we could then label irreducible representations of @xmath34 with the eigenvalues of @xmath45 if necessary .      in a similar fashion to @xmath11 , we extend @xmath34 to an affine @xmath0-dependent braid group , @xmath46 , by defining how the set of elements @xmath29 interact with the affine generators @xmath35 .    therefore in addition to all of the defining relations of @xmath34",
    ", the generators of @xmath46 must also satisfy @xmath47    using the definition of @xmath40 , ( [ sigma ] ) , one can rewrite ( [ y4 ] ) , to obtain @xmath46 purely in terms of @xmath25 , @xmath40 and @xmath1 : @xmath48    these relations also imply that @xmath49 .",
    "having fully described our definition of an affine @xmath0-dependent braid group , @xmath46 , we now incorporate its algebraic structure into an intuitive graphical one .",
    "we have already seen that in the pictorial representation of the braid group @xmath21 , the braiding of the strands takes place in the strip in a strict top - to - bottom direction .",
    "now we turn the strip into a cylinder by identifying the left and right edges ; to highlight this point , we represent these edges with dashed lines .",
    "this means that we can now braid in a left - to - right ( or vice versa ) fashion by wrapping strands around the cylinder .",
    "this application of cyclic boundary conditions is what gives us a pictorial representation for the affine @xmath0-dependent braid group @xmath46 .",
    "( the braid group generators @xmath25 still braid top - to - bottom as they did before we identified the sides . )    to illustrate this , we define the pictorial representations of the @xmath46 generator @xmath35 and its inverse @xmath50 as follows :        so we see that @xmath35 takes the strand starting at point @xmath51 on the top edge and takes it to the same point on the bottom edge and leaves all other strands untouched , and does so such that it goes over all strands to the right ( @xmath52 ) and under all strands to the left ( @xmath53 ) . for example , in the @xmath54 case , @xmath39 is given by either of the two pictures below :        multiplication is now defined by stacking cylinders on top of one another , and so given @xmath39 and the @xmath25 , we can construct all other @xmath35 via ( [ y3 ] ) .",
    "looking at the @xmath54 case again , we can now construct @xmath55 and see that our pictorial representation is consistent :        recall , from ( [ sigma ] ) , that @xmath40 was defined in terms of @xmath39 : @xmath56 .",
    "therefore , for @xmath54 , we have @xmath57 , which looks like        @xmath40 has the same general form for all @xmath5 , namely , it acts as a kind of raising operator on the indices by taking point @xmath51 on the top to point @xmath58 on the bottom ( with the cylindrical topology identifying point @xmath59 with @xmath60 ) .",
    "therefore , we take this to be the pictorial definition of @xmath40 , and so together with the cylinders representing the @xmath25 , all of the defining relations of the @xmath46 follow suit .    at this point",
    "we have a complete pictorial representation for the @xmath61s . however , the @xmath0s are still only representable by trivial braids . despite this we can extend @xmath46 to a double affine @xmath0-dependent braid group by incorporating a whole new set of generators and their graphical representations , as we will now show .",
    "we can extend @xmath46 to a double affine @xmath0-dependent braid group @xmath62 @xcite by introducing a further @xmath5 invertible generators @xmath63 satisfying the relations @xmath64 together with the set of elements @xmath29 which commute with all the @xmath63 and appear explicitly in relations intertwining the @xmath35 and the @xmath63 @xcite : @xmath65    we can choose to eliminate the @xmath35 in favour of the cyclic operator @xmath40 , and then ( [ yzt ] ) and ( [ yz ] ) can be rewritten as @xmath66    using the above relations , one can quickly see that @xmath67 and this , in addition to the identity @xmath68 @xcite ( a proof of which we include in appendix a for the interested reader ) gives us ( [ zy ] ) .",
    "therefore it is not independent of the other relations .",
    "to summarise , we define a @xmath62 to be the group generated by @xmath25 , @xmath35 , @xmath63 and @xmath1 which satisfy equations ( [ t1])-([t6 ] ) , ( [ y1])-([y3 ] ) alongside ( [ y4 ] ) and ( [ z1])-([yz ] ) .",
    "we shall see shortly that the appearance of the operators @xmath1 in the last of these defining relations will strongly influence our choice of pictorial representation for @xmath62 .",
    "recall that we extended the standard pictorial representation of the braid group to that of an @xmath46 by identifying the two vertical edges and defining the action of the @xmath35 generators on the strands as wrapping around the resulting cylinder .",
    "we would now like to extend this @xmath46 representation to one for a @xmath62 by somehow incorporating the new generators @xmath63 into the picture .",
    "our method for doing so is motivated by the @xmath46 construction : the braid group generators do not wind strands at all ; they simply connect points on the top edge to ones on the bottom .",
    "the @xmath35 generators , however , do wind the strands `` perpendicular '' to the @xmath25 , namely , left - to - right ( or vice versa ) instead of top - to - bottom .",
    "the new @xmath63 generators have exactly the same relations between themselves and the @xmath33s as the @xmath61s do , so this suggests that we need a _",
    "third _ direction .",
    "this suggests that instead of a strip whose two vertical sides are identified , we now use a _ cube _ whose opposite vertical faces are identified .",
    "so the left and right faces of the cube are identified with the @xmath35 operators taking strands through them , while the front and back faces are identified with the @xmath63 generators taking strands through them .    to see this ,",
    "first consider drawing each braid group generator @xmath25 in a cube .",
    "the braiding now takes place within the cube from top to bottom :        multiplication is defined in the usual way , by stacking one cube onto another .",
    "this representation is essentially the same as that for the elliptic braid group on a torus @xcite , which is generated by @xmath25 , @xmath35 and @xmath63 but requires all the @xmath1 to be unity . in section",
    "[ 4.3 ] , we show that the @xmath1 are indeed @xmath69 for our representation , as expected .",
    "this is not a surprising result though as the elliptic braid group is simply @xmath62/@xmath10 .",
    "however , using three - dimensional cubes rather than a two - dimensional torus will allow us to generalise to values of @xmath1 other than unity , as we illustrate in section [ 4.3.2 ] .",
    "recall that the affine @xmath0-dependent braid group generators @xmath35 identified the left and right sides with each other to give braiding on a cylinder . in the cube representation",
    ", we identify the left and right faces of the cube with each other . in the figure below ,",
    "the turquoise arrows traverse the coloured blue planes and wrap the strand around the cube from one to the other .        the additional @xmath62 generators @xmath63 identify the front face of the cube with its back face .",
    "in the figure below , we use red tips to indicate that the strand passes out through the coloured front face of the cube , then wraps around until it meets the strand that passes out the back face .",
    "more specifically , for the @xmath54 case we define @xmath70 ( and its inverse ) as        having defined @xmath70 , we can now obtain all of the other @xmath63 for @xmath37 using @xmath71 .",
    "so , for example , @xmath72 :        one may proceed in this manner to construct @xmath63 for any @xmath51 , and we see that its action is to take the @xmath27 point on the top face , bring it out the front face of the cube , wrap around to come in the back face , and connect to the @xmath27 point on the bottom , with all other strands simply going straight from top to bottom .    at this point",
    ", we note that our cube is topologically equivalent to a hollowed - out toroid : identification of the opposing sides of any horizontal slice of the cube gives a @xmath73-torus , and the region between the top and bottom faces  a time interval @xmath74 if we view our strands as worldlines  gives the thickness .",
    "thus , each of our generators is represented as @xmath5 strands within the toroid @xmath75 .    to illustrate this further , define two angles , @xmath76 and @xmath77 .",
    "we let @xmath76 be the direction in which the @xmath35 generators wrap around the toroid and @xmath77 is the direction the @xmath63 wrap around the toroid .",
    "so , in effect , the @xmath46 generators @xmath35 encircle the torus within the toroid whereas the additional @xmath62 generators @xmath63 encircle the empty space bounded by the toroid , as illustrated below :        where @xmath78 is the time parameter . in this toroidal representation , one can now clearly see the distinct directions in which the different generators wrap .",
    "multiplication is defined by stuffing toroids inside each other : this is done such that the points on the inner boundary of the first ( in order of multiplication ) generator correspond to the points on the outer boundary of the second generator . in figure [ torusmult ]",
    "we illustrate the product @xmath79 : we stuff @xmath39 into @xmath80 such that the numbered points on the outer boundary of @xmath39 correspond to the points on the inner boundary of @xmath80 .    ]",
    "we must confirm that our cubic / toroidal representation works for all the @xmath62 axioms .",
    "we start by verifying ( [ yzt ] ) , i.e.  @xmath82 . from figure",
    "[ t_1 ^ 2=y_1z_2y_1z_2 ] , we see that this is satisfied by our cube representation .     in the cube representation .",
    "]    ( [ yz ] ) and ( [ zy ] ) must also hold in our representation , of course .",
    "these are the relations that depend explicitly on the elements @xmath1 .",
    "in fact , they give us various ways of writing the @xmath1 ; for example , in the @xmath54 case , we find @xmath83 .",
    "we have pictorial representations for all the generators on the right - hand side of this relation , so we may explicitly find the pictorial representation of @xmath84 . from figure [ q_3 ] , we see that @xmath84 acts only on the third strand while leaving the other two untouched . for clarity",
    ", we have indicated the twisting using arrows ; one must start form the top of the third strand and follow the arrows around all faces of the cube .    .",
    "pulling all strands tight yields the identity . ]",
    "this is the pictorial representation of @xmath84 . by pulling the strands tight , we find that this is precisely the operator which leaves the strands entirely alone : the identity @xmath69 , namely , the trivial braid .",
    "this result is not unique to @xmath84 ; we find that the graphical representation for each of the @xmath0s is simply the identity .",
    "although this cube representation is successful in describing the @xmath25 , @xmath35 and @xmath63 generators of @xmath62 , it still only allows the @xmath1 to be represented by trivial braids , and so is really only valid when @xmath81 .",
    "therefore , this is simply a representation of @xmath85 , i.e.  the elliptic braid group @xcite ( see figure [ f1 ] ) .",
    "however , if we wish to allow for values of @xmath1 _ other _ than unity , we need to modify our cube representation in some way , which we now describe .      to obtain a nontrivial pictorial representation which accommodates @xmath86 , we modify our cube representation by replacing the strands by ribbons .",
    "this modification is not unmotivated : in order to extend the @xmath46 representation to one for a @xmath62 , we increased the dimension of our space from two to three , and so it is reasonable to increase the dimension of our strands .",
    "doing so is precisely what we need in order for our representation to work for _ all _ @xmath62s , not just those where the @xmath81 .",
    "we therefore no longer braid one - dimensional strands , but do so instead with two - dimensional _",
    "ribbons_. this extra degree of freedom will enable us to completely describe a double affine @xmath0-dependent braid group for any @xmath1 .",
    "however , before we revisit the elements @xmath1 , we must verify that all of the previous @xmath62 axioms still hold when using ribbons within our cube representation .",
    "it is straightforward to show that they do ; to illustrate this point , we explicitly show ( [ yzt ] ) , as this relation contains all three types of generators , the @xmath25 , @xmath35 and @xmath63 .",
    "( for clarity , we have coloured the front and back of each ribbon respectively by black and green . )",
    "this example , illustrated in figure [ t_1 ^ 2=y_1z_2y_1z_2ribbon ] , also allows us to clearly lay out the braiding conventions that we use .",
    "when the ribbon wraps in a left / right direction ",
    "representing a @xmath35 operator  we use turquoise for the tips that are identified with each other .",
    "it is vital to stress that these link the left and right faces of the cube in a very particular fashion : the ribbon must pass through a left or right face of the cube oriented _",
    "vertically_. this condition ensures that the ribbon does nt twist while wrapping around the cube .    in a similar fashion ,",
    "the ribbons representing the @xmath63 generators are coloured so that when a red tip is visible , this implies that the ribbon passes through either the back or front face of the cube .",
    "we require that whenever such a ribbon intersects the front or back face of the cube , it does so oriented _",
    "these conventions give figure [ t_1 ^ 2=y_1z_2y_1z_2ribbon ] for @xmath87 , and pulling the ribbons tight we can clearly see that the relation holds .",
    "all of the other relations are satisfied in a similar manner .     using ribbons instead of strands .",
    "note the colour conventions . ]",
    "one of the major advantages of our cube - ribbon representation is that specific crossing rules are not required when one ribbon crosses another .",
    "this is due to the fact that , following the conventions outlined above , the ribbons can braid in three distinct orthogonal directions and hence no such rules are necessary . in contrast , for framed braids in an infinitely long strip as in @xcite more complicated crossing conditions are needed .",
    "we now revisit the relation @xmath88 which , when represented by 1-dimensional strands , was equivalent to the identity element . now using ribbons instead of strands , we construct the pictorial representation of @xmath84 .",
    "( for clarity , we show only the third ribbon , as this is the only one which behaves nontrivially . ) keeping with the colour convention defined earlier , we obtain @xmath84 , and , by pulling the ribbons tight , yields the key result we require : a twist in the ribbon is created ! this important result is illustrated in figure [ twistq ] below .",
    ", the creation of a twist in the third ribbon .",
    "the full anticlockwise twist makes clearly visible both front and back faces of the ribbon , coloured black and green respectively .",
    "note that we illustrate only the third ribbon . ]    as this is the most important feature of our ribbon representation , let us explain in detail how this comes about : in constructing @xmath89 , both the black and green faces of the ribbon are clearly visible . upon closer inspection , we see that the ribbon undergoes a _ full anticlockwise twist _ in going from the top face to the bottom one . first , the front black face of the ribbon is visible .",
    "then , having undergone half an anticlockwise twist , the back green face becomes visible until finally the full anticlockwise twist leaves the black face facing forwards .",
    "this significant result can be generalised .",
    "we have just shown that in our cube - ribbon representation @xmath84 creates a twist in the third ribbon .",
    "it is easily shown , following the construction of @xmath84 , that in our particular representation the action of @xmath1 is to create a single full anticlockwise twist in the @xmath90 ribbon .    as the creation of a full anticlockwise twist in the ribbon may be somewhat difficult to visualise",
    "we have included a more rigorous argument to convince the reader in appendix b.    other expressions could be used to determine @xmath1 ; for example , ( [ yz ] ) gives @xmath91 or we could use ( [ z - sigma ] ) : @xmath92 .",
    "for these and any other representation for @xmath1 , the result is the same , namely , @xmath1 creates a single full anticlockwise twist in the @xmath90 ribbon .",
    "we can also verify that an expression like @xmath93 , which the @xmath62 axioms require to be @xmath94 for @xmath54 , is indeed a full _ clockwise _ twist in the third ribbon , again totally consistent with our interpretation of @xmath1 .",
    "the interpretation of @xmath1 is now clear : it is the generator that creates a full anticlockwise twist in the @xmath90 ribbon .",
    "similarly @xmath95 creates a full clockwise twist in the @xmath90 ribbon .",
    "as these are no longer trivial actions on the ribbons , we have a pictorial representation for @xmath96 , and a full description for @xmath62 .",
    "in the previous section we highlighted the fact that the elliptic braid group is given by @xmath62/@xmath10 . similarly readers familiar with double affine hecke algebras @xcite may recognise that our definition of a @xmath62 closely resembles that of a double affine hecke algebra ( daha ) without the hecke relation .",
    "we will in fact show precisely how to obtain a daha given our construction of a double affine @xmath0-dependent braid group @xmath62 .",
    "consider the subgroup @xmath97 of the @xmath0-dependent braid group @xmath11 defined as @xmath98 it can easily be shown that @xmath97 is a normal subgroup of @xmath11 , and so we can construct the quotient @xmath99 , which is precisely the group we require to define a daha . within @xmath100 ,",
    "the @xmath1 are indistinguishable from one another ; therefore , we refer to each of their cosets @xmath101 $ ] as @xmath0 .",
    "most importantly , using ( [ t3])-([t6 ] ) , we see that @xmath0 now commutes with not only the squares of the braid group generators @xmath102 , but also with the @xmath25 themselves .",
    "we are now in a position to extend the quotient group @xmath100 to a hecke algebra .      before defining a daha",
    ", we must extend our quotient group @xmath100 to an algebra in which the @xmath25 generators satisfy a particular relation ; this defines the hecke algebra .",
    "associate with @xmath100 the hecke algebra @xmath103 .",
    "this is the group algebra of @xmath100 over a field @xmath104 parametrised by @xmath105 such that each generator @xmath25 satisfies the _ hecke relation _ @xmath106 it is worth noting that even though @xmath26 was assumed to exist in @xmath100 , this relation gives its form explicitly : @xmath107      to complete the daha construction we must firstly extend the hecke algebra @xmath103 to an affine hecke algebra @xmath109 .",
    "this is achieved with the introduction of @xmath5 invertible operators @xmath35 which satisfy ( [ y1])-([y3 ] ) .",
    "recall that the @xmath110 was fully generated by @xmath39 and the @xmath25 .",
    "it is perhaps worth pointing out that the affine hecke algebra is also fully generated by @xmath39 and the @xmath25 , and we can reorder them as necessary .",
    "this was not true for the @xmath46 as we need the full hecke algebraic structure in order to consistently order the operators .",
    "for example , @xmath111 and @xmath112 can be reordered as we like , but this is true for @xmath111 and @xmath113 only if we invoke the hecke relation : @xmath114\\\\ & = & y_2t_1-\\left(t^{1/2}-t^{-1/2}\\right)y_2.\\end{aligned}\\ ] ]    following @xcite we take a daha @xmath108 of type @xmath115 to be the algebra generated by @xmath25 , @xmath35 and @xmath63 which satisfy equations ( [ t1])-([t2 ] ) , the hecke relation ( [ hecke ] ) along with ( [ y1])-([y3 ] ) and ( [ z1])-([z3 ] ) .",
    "in addition to these the @xmath35 and @xmath63 obey the intertwining relations @xcite @xmath116 where @xmath117 .",
    "( as in the @xmath62 ( [ zy1 ] ) is not independent of the other relations , although it is often included in the literature as part of the definition of a daha . )",
    "one must note that unlike our definition of the @xmath62 where we have a set of elements @xmath1 , in the daha @xmath2 is simply a parameter .",
    "so a daha @xmath108 depends on the two variables @xmath118 .",
    "this is entirely consistent with our construction of a daha from @xmath62 via the quotient group @xmath100 if we set @xmath119 .",
    "we therefore have a representation of a daha in @xmath120 when we impose @xmath119 .    in terms of the cube representation we can replace a ribbon with a full anticlockwise twist by one with no twist at all , only if we multiply the resulting cube by a factor of @xmath2 .",
    "one may see this explicitly in figure [ twistq ] . as a result",
    ", one may view this twist as the first reidemeister move on a ribbon :        therefore the interpretation of @xmath2 is clear : it is the multiplicative factor in front of a daha element whenever we replace a ribbon with a full anticlockwise twist by one with no twist at all .",
    "furthermore since @xmath2 does not describe the actual position of the twist in the ribbon , one can have a factor of @xmath121 in front of a daha element corresponding to @xmath122 anticlockwise twists occurring _ anywhere _ in the cube .",
    "as there is no restriction on what value @xmath2 can take , we are not limited to the case @xmath2=1 and have a pictorial representation that fully describes any daha .",
    "in this paper we have defined and presented a graphical representation of the double affine @xmath0-dependent braid group . following the method of extending the pictorial representation of the @xmath0-dependent braid group to one for an @xmath46",
    ", we found that all of the relations not explicitly involving the operators @xmath1 could be satisfied by a @xmath62 depicted using @xmath60-dimensional strands embedded in a cube whose opposing vertical sides were identified , i.e.  a hollowed - out toroid .",
    "this representation was consistent only for a @xmath62 where all the @xmath81 ; that is , the elliptic braid group . however , by replacing the strands with ribbons , our cube representation allowed us to capture all aspects of a @xmath62 and gave us a nice interpretation of the action of any @xmath1 as a single full anticlockwise twist in the @xmath90 ribbons .",
    "we thus obtain an intuitive pictorial representation which clearly incorporates all of the structure of the more abstract @xmath62 .",
    "we showed that our new graphical representation is also valid for all dahas .",
    "our definition of a @xmath62 reduced to one of a double affine hecke algebra simply by attaching the hecke algebra to one of its quotient groups .",
    "the daha depends on two parameters @xmath123 and @xmath2 .",
    "we found that graphically , the parameter @xmath2 corresponds to a full anticlockwise twist in the ribbon .    by construction , our representation should be closely related to tangles and knot theory . using elementary tangles via reidemeister",
    "moves to describe this algebra appears quite possible ; in fact , the replacement of a full twist by a factor of @xmath2 is very much a reidemeister - like move .",
    "this would indicate a relation between our cube - ribbon representation and elementary tangle representations of affine hecke algebras ; we hope to look further into this suspected relationship .",
    "similarly , transforming this cube - ribbon representation to an equivalent matrix representation is an interesting challenge .",
    "we hope to use our new pictorial representation to bring this closer to reality .",
    "this work has been funded under the irish research council embark initiative postgraduate scheme .",
    "we would also like to acknowledge funding from science foundation ireland under the principal investigator award 10/in.1/i3013 .",
    "in this appendix , we show that @xmath68 .",
    "although this identity is already well - known @xcite , we present a proof for the interested reader .",
    "define the operator @xmath124 by @xmath125 we want to show by induction that this is equal to @xmath126 .    1 .   for @xmath127",
    ": @xmath128 so @xmath129 is indeed equal to @xmath130 , and the assertion is true for @xmath127 .",
    "2 .   now assume that our assertion is true for some @xmath104 , namely , @xmath131 if this holds , then @xmath132 is @xmath133 because all the @xmath35 commute . using @xmath134",
    ", we can rewrite this same expression as @xmath135\\\\ & & \\times \\left[t_{n - k}\\ldots t_{n-1}\\sigma t^{-1}_1\\ldots t^{-1}_{n - k-1}\\right]\\\\ & = & \\left[\\sigma^k\\left(t_1\\ldots t_k\\right)^{-1}\\left(t_2\\ldots t_{k+1 } \\right)^{-1}\\ldots\\left(t_{n - k-1}\\ldots t_{n-2}\\right)^{-1}\\right]\\\\ & & \\times \\left[\\sigma t^{-1}_1\\ldots t^{-1}_{n - k-1}\\right].\\end{aligned}\\ ] ] using @xmath136 , all @xmath40s can be moved to the left : @xmath137\\ldots\\\\ & & \\dots \\left[\\left(t_{n - k}\\ldots t_{n-1}\\right)^{-1 } t^{-1}_1\\ldots t^{-1}_{n - k-1}\\right].\\end{aligned}\\ ] ] @xmath25 commutes with all other @xmath33s except @xmath138 and @xmath139 , so we may pull the rightmost operators @xmath140 to @xmath141 as far as possible to the left : @xmath142 \\left[\\left(t_3\\ldots t_{k+2}\\right)^{-1}t_2^{-1}\\right]\\ldots\\\\ & & \\dots \\left[\\left(t_{n - k}\\ldots t_{n-1}\\right)^{-1}t^{-1}_{n - k-1}\\right]\\\\ & = & \\sigma^{k+1}\\left(t_1\\ldots t_{k+1}\\right)^{-1 } \\left(t_2\\ldots t_{k+2}\\right)^{-1}\\ldots \\left(t_{n - k-1}\\ldots t_{n-1}\\right)^{-1}.\\end{aligned}\\ ] ] but ( [ p ] ) tells us that this is precisely the definition of @xmath143 .",
    "thus , @xmath144 , so @xmath145 and our assertion holds for @xmath146 if it holds for @xmath104 .",
    "this therefore verifies that @xmath147 for all @xmath148 . for @xmath149 ,",
    "this gives @xmath150 but @xmath151 , so we find that @xmath152",
    "here we show that the twist in the ribbon generated by @xmath84 is precisely @xmath8 .",
    "we demonstrate this specifically for the case of @xmath153 as in figure ( [ twistq ] ) where , from top to bottom , a full anticlockwise twist in the third ribbon is obtained . for clarity",
    "we illustrate only the third ribbon as it is the only one that behaves non - trivially .",
    "firstly let @xmath154 denote the position of a point on the ribbon .",
    "then @xmath155 is the unit vector indicating the ribbon orientation and always lies on the surface of the ribbon .",
    "the direction of motion is given by the unit vector @xmath156 , where at all times @xmath157 .",
    "the vector @xmath158 defines the normal to the ribbon .",
    "+ so there is an orthogonal frame @xmath159 $ ] attached to each point on the ribbon as indicated in the diagram below .",
    "we now follow a point as it travels down the ribbon .",
    "attached to this point is the orthogonal frame @xmath160 .",
    "we impose that the ribbon can not twist around the direction of motion , that is ; @xmath161 where @xmath162 is the angular velocity of the frame @xmath160 .",
    "we measure the degree of rotation of @xmath160 , between the top and bottom of the ribbon , relative to a fixed frame .",
    "this yields the size of the twist in the ribbon .",
    "the figure [ rotation ] ( a ) below shows the frame @xmath160 at various points along the ribbon , from the top of the ribbon labelled point ( a ) , to the bottom of the ribbon ; point ( b ) . between these points",
    "we show that the moving frame @xmath160 undergoes a full @xmath8 rotation relative to the inertial reference frame ( @xmath163 ) .",
    "notice that between points ( a ) and ( 0 ) , the ribbon itself does not undergo any rotation .",
    "therefore without losing any information we can measure the twist starting from point ( 0 ) , which we now call time @xmath164 , as in figure [ rotation ] ( b ) .",
    "+ furthermore in figure [ rotation ] ( b ) , the bottom of the ribbon is redrawn in such a way that the extra turns do not contribute to the overall twist . then following @xmath160 from @xmath164 to @xmath165 , one can immediately see that @xmath156 rotates _ only _ in the @xmath166 plane .",
    "in fact it does exactly a @xmath8 clockwise rotation .",
    "so at any time @xmath123 , @xmath156 can be written as follows :        further inspection reveals that as @xmath156 rotates in the @xmath166 plane , the vectors @xmath155 and @xmath170 rotate in a clockwise fashion around @xmath156 .",
    "+ we introduce a frame @xmath171 $ ] , where @xmath172 and @xmath173 , @xmath174 are functions of @xmath155 and @xmath170 , to measure the rotation of @xmath155 and @xmath170 around @xmath156 .",
    "impose that at @xmath164 , @xmath175 and @xmath176 .",
    "it is important to note that @xmath172 at all times ; that is we have @xmath177 .",
    "+ therefore in terms of this frame @xmath171 $ ] we can write :                      one can clearly see that @xmath155 undergoes a full @xmath8 clockwise rotation from @xmath164 to @xmath165 .",
    "@xmath155 lies on the ribbon surface at all times , therefore requiring the ribbon to undergo the same rotation .",
    "this yields precisely the required result ; @xmath84 creates a full anticlockwise twist in the third ribbon .",
    "99 i.  cherednik , _",
    "double affine hecke algebras _ , cambridge university press ( 2005 ) i.  cherednik , `` nonsymmetric macdonald polynomials '' , _ int .",
    "not_.  * 10 * ( 1995 ) 483 t.  jolicoeur and j.  g.  luque , `` highest weight macdonald and jack polynomials '' , _ j.  phys .",
    "a : math .  theor_.  * 44 * ( 2011 ) 055204 m.  kasatani , `` subrepresentations in the polynomial representation of the double affine hecke algebra of type @xmath186 at @xmath187 '' , _ int .  math .",
    "not_.  * 28 * ( 2005 ) 1717 b.  feigin , m.  jimbo , t.  miwa and e.  mukhin , `` symmetric polynomials vanishing on the shifted diagonals and macdonald polynomials '' , _ int .",
    "not_.  * 18 * ( 2003 ) 1015 m.  kasatani and v.  pasquier , `` on polynomials interpolating between the stationary state of a @xmath3 model and a q.h.e .",
    "ground state '' _ commun .",
    "phys_.  * 276 * ( 2007 ) 397 l.  kauffman , `` state models and the jones polynomial '' , _ topology _ * 26 * ( 1987 ) 395 v.  f.  r.  jones , `` a polynomial invariant for knots via von neumann algebras '' , _ bull",
    ".  amer .",
    "soc_.   * 12 * ( 1985 ) 103 j.  birman , `` on braid groups '' , _ commun .",
    "pure appl .",
    "_ * 22 * ( 1969 ) 41 g.  p.  scott , `` braid groups and the group of homeomorphisms of a surface '' , _ proc .",
    "soc . _  * 68 * ( 1970 ) 605 d.  bernard , m.  gaudin , d.  haldane and v.  pasquier , `` yang - baxter equation in spin chains with long range interactions '' , _ j.  phys .  a _ * 26 * ( 1993 ) 5219 b.  ion , `` involutions of double affine hecke algebras '' , _ compositio math_.  * 139 * no .  1 ( 2003 ) 67 e.  artin , `` theory of braids '' , _ annals of mathematics _ * 48 * ( 1947 ) 101 k.  h.  ko and l.  smolinsky ,  the framed braid group and 3-manifolds \" , _ proc",
    ".  ams _ * 115 * no .  2 ( 1992 ) 541 n.  wahl , _ ribbon braids and related operads _",
    ", phd thesis , university of oxford ( 2001 ) v.  g.  turaev , _ quantum invariants of knots and 3-manifolds _ , de gruyter studies in mathematics , vol .",
    "18 ( 2010 )"
  ],
  "abstract_text": [
    "<S> we define a double affine @xmath0-dependent braid group . this group is constructed by appending to the braid group a set of operators @xmath1 , before extending it to an affine @xmath0-dependent braid group . </S>",
    "<S> we show specifically that the elliptic braid group and the double affine hecke algebra ( daha ) can be obtained as quotient groups . complementing this we present a pictorial representation of the double affine @xmath0-dependent braid group based on ribbons living in a toroid . </S>",
    "<S> we show that in this pictorial representation we can fully describe any daha . </S>",
    "<S> specifically , we graphically describe the parameter @xmath2 upon which this algebra is dependent and show that in this particular representation @xmath2 corresponds to a twist in the ribbon . </S>"
  ]
}
{
  "article_text": [
    "the concept of induced disjoint paths is recently introduced to characterize some non - interfering situation during data transmission in wireless networks @xcite .",
    "a set of paths in an undirected graph ( graph , for short ) are called induced disjoint paths if each one of them has no chords ( i.e. , is an induced path ) and any two of them have neither common nodes nor adjacent nodes . given a graph @xmath6 and a collection of @xmath2 source - sink pairs in @xmath6 ( @xmath2 as part of the input of the problem ) , the induced disjoint paths problem ( idpp ) is to connect the maximum number of these source - sink pairs via induced disjoint paths .",
    "zhang et al .",
    "@xcite have shown that for any @xmath4 , it is np - hard to approximate idpp to within @xmath3 on an arbitrary @xmath0-node @xmath1-edge graph , and there is a greedy algorithm with approximation ratio @xmath7 , matching the lower bound @xmath7 . in this paper , we will prove that for any @xmath8 , it is np - hard to approximate idpp to within @xmath5 on an arbitrary @xmath0-node graph .",
    "our method is based on a simple approximation - preserving reduction from the independent set problem to idpp , and an inapproximability result for finding maximum independent sets in general graphs .",
    "idpp is an extension of the node - disjoint paths problem ( dpp ) , one simple version of the disjoint paths problem that is one of the classic np - hard combinatorial optimization problems . in dpp , we are given a graph @xmath6 and a set of @xmath2 source - sink pairs in @xmath6 ( @xmath2 as part of the input of the problem ) , and the objective is to find a largest subset of the source - sink pairs that can be simultaneously connected in an node - disjoint manner .",
    "in fact , any instance of dpp can be reduced to an instance of idpp by subdividing every edge into two edges .",
    "thus , idpp is harder than dpp . as a comparison ,",
    "the best known approximation guarantee for dpp on an arbitrary @xmath0-node graph is @xmath9 @xcite .",
    "recently andrews et al .",
    "@xcite have shown that for any @xmath8 , dpp is hard to approximate within @xmath10 on an arbitrary @xmath0-node graph , unless np@xmath11zptime(@xmath12 )",
    ". this might be the best known inapproximability result for dpp on general graphs .",
    "an interesting open question is whether there exists an @xmath4 so that there is no polynomial time @xmath13-approximation algorithm for dpp on an arbitrary @xmath0-node graph , unless p = np @xcite .",
    "this section is devoted to the proof of a new approximation hardness result for idpp on general graphs .",
    "the main theorem is as follows .",
    "[ theorem-1 ] on an arbitrary @xmath0-node graph , there can be no polynomial time algorithm that approximates idpp to within @xmath5 for any @xmath4 , unless p = np .    for the purpose of clarification",
    ", we prove below two lemmas that together immediately lead to theorem [ theorem-1 ] .",
    "[ lemma-1 ] on an arbitrary @xmath0-node graph , if there exists a polynomial time algorithm for idpp with approximation ratio @xmath5 for a certain @xmath4 , then there exists a polynomial time algorithm for idpp with approximation ratio @xmath14 for some @xmath15 .",
    "assume that we have a polynomial time algorithm app - idpp with approximation ratio @xmath5 for a certain @xmath4 .",
    "we now describe a polynomial time algorithm and claim that the algorithm has approximation ratio @xmath14 for some @xmath15 .",
    "the algorithm uses as input an instance of idpp , and calls a procedure to solve the instance according to whether or not @xmath0 is smaller than @xmath16 .    * case 1 * ( @xmath17 ) : it calls a brute - force procedure to solve the instance .",
    "this can be done in a constant time that depends on @xmath18 .",
    "* case 2 * ( @xmath19 ) : it calls app - idpp to solve the instance .",
    "this can be done in polynomial time according to the above assumption .",
    "it is evident that the algorithm has a polynomial time complexity , and the solution yielded in case 1 is optimal .",
    "therefore , the approximation ratio of the algorithm relies on the solution yielded by app - idpp in case 2 . since app - idpp is an @xmath5-approximation algorithm ,",
    "so is the algorithm . in order to prove that the algorithm has the claimed approximation ratio , @xmath14 , it suffices to show that there exists @xmath15 such that @xmath20 . for this purpose , letting @xmath21 , we readily have from @xmath19 @xmath22 @xmath23",
    "@xmath24 this completes the proof .",
    "the complexity of approximating idpp can be related to that of finding maximum independent sets in graphs by a reduction from the independent set problem to idpp in the proof of lemma [ lemma-2 ] below . recall that an independent set of a graph is a set of nodes no two of which are connected by an edge , and the independent set problem is to find a maximum independent set in the graph .",
    "the independent set problem and the clique problem are complementary : a clique in @xmath6 is an independent set in the complement graph of @xmath6 and vice versa .",
    "it is known that on an arbitrary @xmath0-node graph , it is np - hard to approximate the maximum clique problem to within @xmath5 for any @xmath4 @xcite .",
    "this inapproximability result for the clique problem is applied equally well to the independent set problem .",
    "now we prove the following lemma .",
    "[ lemma-2 ] on an arbitrary @xmath0-node graph , there can be no polynomial time algorithm that approximates idpp to within @xmath25 for any @xmath4 , unless p = np .",
    "we consider a reduction from the independent set problem to idpp .",
    "given an instance of the independent set problem , a graph @xmath26 with @xmath27 nodes and @xmath28 edges , we below construct an instance of idpp , which contains a graph @xmath6 and @xmath2 pairs of nodes in @xmath6 .",
    "@xmath29 from the graph @xmath26 , we form the graph @xmath6 by adding @xmath27 pairs of nodes to @xmath26 , one pair for each node in @xmath26 , and adding @xmath30 edges to @xmath26 to join each pair of added nodes to the corresponding node in @xmath26 .",
    "the resulting graph @xmath6 has @xmath31 nodes and @xmath32 edges .",
    "@xmath29 letting @xmath33 , we form @xmath2 pairs of nodes in @xmath6 by selecting the @xmath27 pairs of added nodes .",
    "the above reduction can be done in polynomial time .",
    "moreover , it is obvious that the given instance has an independent set of size @xmath34 if and only if the constructed instance of idpp has @xmath34 induced disjoint paths .",
    "this implies that the reduction is an approximability - preserving one . by the above inapproximability result for the independent set problem on a general graph , unless p = np",
    ", there does not exist a polynomial time algorithm for approximating idpp to within a factor of @xmath25 of the optimal solution since @xmath6 has @xmath31 nodes .",
    "the proof is complete .",
    "a new result on hardness of approximation for idpp on general graphs has been proved in this paper .",
    "that is , on an arbitrary @xmath0-node @xmath1-edge graph , for all @xmath4 , approximating idpp to within @xmath5 is np - hard .",
    "the new result is distinct from the known one in the literature that states that for all @xmath4 , approximating idpp to within @xmath3 is np - hard .",
    "since @xmath35 always holds for any @xmath0-node @xmath1-edge graph , the new result yields a stronger lower bound on the best possible approximation guarantee for idpp than the known result can yield , namely , @xmath36 for any @xmath4 . on those graphs with @xmath37 for @xmath38 ( for example , sparse graphs ) ,",
    "the new result obviously can give such a tighter lower bound .",
    "this research is supported by the national natural science foundation of china ( no . 61370003 ) , and by the scientific research foundation for the returned overseas chinese scholars , state education ministry .",
    "00 k. kawarabayashi and y. kobayashi , the induced disjoint paths problem , lncs 5035 ( 2008 ) 47 - 61 .",
    "k. zhang , h. gao , and j. li , finding multiple induced disjoint paths in general graphs , information processing letters 111 ( 2011 ) 1022 - 1026 . c. chekuri , s. khanna , f.b .",
    "shepherd , an @xmath9 approximation and integrality gap for disjoint paths and unsplittable flow , theory of computing 2 ( 2006 ) 137 - 146 .",
    "t. nguyen , on the disjoint paths problem , operations research letters , 35 ( 2007 ) 10 - 16 .",
    "m. andrews , j. chuzhoy , v. guruswami , s. khanna , k. talwar , l. zhang , inapproximability of edge - disjoint paths and low congestion rounting on undirected graphs , combinatorica 30 ( 5 ) ( 2010 ) 485 - 520 .",
    "kleinberg , approximation algorithms for disjoint paths problems , ph.d.thesis , mit , cambridge , ma , 1996 .",
    "d. zuckerman , linear degree extractors and the inapproximability of max clique and chromatic number , theory of computing 3 ( 2007 ) 103 - 128 ."
  ],
  "abstract_text": [
    "<S> we study the inapproximability of the induced disjoint paths problem on an arbitrary @xmath0-node @xmath1-edge undirected graph , which is to connect the maximum number of the @xmath2 source - sink pairs given in the graph via induced disjoint paths . </S>",
    "<S> it is known that the problem is np - hard to approximate within @xmath3 for a general @xmath2 and any @xmath4 . in this paper , we prove that the problem is np - hard to approximate within @xmath5 for a general @xmath2 and any @xmath4 by giving a simple reduction from the independent set problem .    approximation algorithm , inapproximability , hardness of approximation , induced disjoint paths </S>"
  ]
}
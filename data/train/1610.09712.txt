{
  "article_text": [
    "at ( current page.south ) ;    image distortion correction is a fundamental task in several practical computer vision and image processing applications . among them , stereo vision is a very common scenario .",
    "many single - camera applications also require distortion correction .",
    "examples of such applications are : ego - motion estimation @xcite , metric measurements @xcite , food - portion size estimation @xcite , image stitching @xcite , and many more",
    ".    a large number of these applications are real - time and mobile - oriented , requiring therefore low latency and low - power image processing .",
    "implementing distortion correction algorithms on specialized or reconfigurable devices can be an optimal solution to reduce latency and power consumption , as well as to unload the cpu from this task .",
    "in particular , field programmable gate arrays ( fpgas ) are often the preferred choice when aiming at maximizing the performance / power - consumption ratio . moreover , analyzing a typical vision processing pipeline , image distortion correction is often performed immediately after image acquisition from raw sensor(s ) .",
    "since most common embedded systems target the entire vision pipeline or its portion on specialized or reconfigurable devices , it is implied that image distortion correction is almost mandatory to be implemented on such hardware rather than on a gpu in order to avoid ineffective transfers back and forth from the shared memory .",
    "nevertheless , porting image distortion correction algorithms to specialized hardware is not straightforward .",
    "even if locality is assumed in the distortion correction process , there are still parts of the algorithm which can not be ported naively from their software implementation counterpart . for instance",
    ", the distortion correction function which relates input and output images is computationally complex .",
    "while a look - up - table ( lut ) approach is the ideal solution in software implementations , it might be too demanding in terms of memory when it comes to fpga implementation .",
    "different solutions have been proposed in the literature in order to overcome this problem , but they are rarely compared among each others .",
    "therefore , in practical implementations , the decision of choosing one approach instead of the other is often made without considering the full spectrum of options .",
    "this may lead to over - sized , over - consuming , inefficient , expensive systems , which often provide results comparable to the ones enabled by more efficient but less popular alternatives .",
    "the scope of this paper is to clarify the current status of image distortion correction on fpga , by reviewing and evaluating different solutions in terms of image quality and hardware resources .",
    "in particular , we evaluate the robustness of state - of - the - art approaches with respect to increasing lens distortions as well as to their hardware footprint .",
    "both these factors have to be considered in order to determine the best trade - off between resources usage and output quality .",
    "in the first part of the paper , an overview of the image distortion correction algorithm is given and its standard software implementation is explained . in the second part , an appropriate hardware ( fpga ) design is described , with particular focus on the real - time output capability and memory usage optimization .",
    "the main hardware modules used within the design are described with a particular focus on the most critical component , _",
    "i.e. _ , the pixel - to - pixel _ remapping function _ module . concerning this task , we consider the de - facto standard distortion model proposed by @xcite and implemented in @xcite and in the opencv library @xcite , which accounts for both _",
    "radial _ and _ tangential _ distortion .",
    "similar reasoning can also be applied to more complex models , such as the _ rational _ one proposed by @xcite , which however is less commonly adopted .",
    "possible approximated versions of the standard software - implemented approach are defined in order to meet the hardware constraints , and compared by analyzing their geometric error according to the reference software map . along with hardware resources utilization estimates for each different approach , this study allows to determine which of these solutions could be the best choice in relation to different lenses and target fpga architectures .",
    "it is important to state that the proposed evaluation is built over the specific distortion model chosen @xcite , and conclusions might be different if simpler models are considered .",
    "this model has been selected since it is very commonly used and general purpose , covering most of the typical scenarios for both stereo vision and single camera image processing .",
    "distortion correction algorithms have been subject of several studies in the literature . in regards to the specific mathematical models for defining the distortion geometry ,",
    "different models have been introduced @xcite .",
    "determining the distortion of the particular lenses requires a calibration stage , in which the image information from the camera is used to estimate the parameters for the distortion model through different techniques @xcite .",
    "the distortion correction methodologies considered in this paper are agnostic to the calibration approach deployed .",
    "image distortion correction has been implemented in a wide variety of different contexts .",
    "the well - known opencv library @xcite includes probably one of the most popular software versions of the distortion correction algorithm @xcite .",
    "it has also been adopted within gpus @xcite and fpgas @xcite .",
    "focusing on fpga implementations , many alternatives have been designed for overcoming the problems mentioned earlier about the input / output mapping function complexity .",
    "several papers adopt a straightforward porting of the software look - up - table version @xcite . given the high amount of memory needed in these approaches , external dynamic memories are required , leading to bulky and expensive hardware systems when such memory is not required for other purposes .",
    "other approaches compute the mapping function _ on - the - fly _ by implementing the complete camera and distortion model functions @xcite on hardware @xcite .",
    "although this approach is very accurate , it may be expensive in terms of gates and also redundant or inefficient from the point of view of power consumption , since the same model computation is performed repeatedly , from scratch , for each point of each frame .",
    "another solution is based on a _ sub - sampled _ version of the full resolution lut method , using simple bilinear interpolation to get the specific pixel - to - pixel mapping value .",
    "this solution has been considered less frequently @xcite than other approaches , even though it provides an effective trade - off between resources and performance .",
    "the distortion correction algorithm takes a raw camera image as input , and produces as output a _ distortion - corrected _ version of the same image , according to the camera parameters estimated at calibration time .",
    "the image distortion correction algorithm warps the input image such that the lens distortion effects are compensated and it optionally performs a virtual rotation of the camera frame according to the specific usage needs .",
    "this latter transformation is needed for example in case of image rectification for stereo vision , where the images from the camera pair are required to appear aligned as if they were actually acquired by a perfectly aligned system .",
    "this setup is often referred to as _",
    "standard form_.    usually , a pixel - to - pixel mapping function is used to relate every pixel of the output ( distortion - corrected ) image to a pixel ( located with sub - pixel accuracy ) of the input distorted image , according to the specific correction to apply that is determined at camera calibration time .",
    "this design allows to easily compute each output pixel value by simply retrieving its corresponding pixel from the input image through the mapping function ; this specific part of the algorithm is called _",
    "image remapping_.      image distortion correction can be regarded as a particular version of a more generic algorithm , that is image remapping .",
    "the main idea behind image remapping consists in defining a coordinates relationship between the input ( ` src ` ) and the output ( ` dst ` ) pixels through two mapping functions ( _ i.e. _ , @xmath0 , @xmath1 ) : @xmath2 in which @xmath3 is the mapping function relative to the @xmath4-component and @xmath5 is the mapping function relative to the @xmath6-component .",
    "considering equation ( [ dst_src_mapping ] ) , and given a pre - defined mapping function ( @xmath7 ) , the output image ` dst ` can be computed according to the following two steps .",
    "first , for each output pixel @xmath8 , the value of @xmath9 and @xmath10 is retrieved according to an appropriate approach , with @xmath9 and @xmath10 generally encoded with floating point values .",
    "then , the algorithm gets the corresponding pixel value from the input image ` src ` , and stores it in the output pixel ` dst`@xmath8 .",
    "since the source image coordinates @xmath9 and @xmath10 are not necessarily integers , the desired source pixel is actually somewhere in between four source pixels , therefore it is required to perform a bilinear interpolation of these pixel values according to the map function .",
    "the important part of the image distortion correction algorithm , which characterizes it compared to a generic image remapping algorithm , is the specific mapping function @xmath7 .",
    "the @xmath0 and @xmath1 functions are computed according to the considered distortion model @xcite , such that the input image ",
    "after remapping  will actually appear distortion - corrected and possibly rotated .      in order to understand how the distortion correction algorithm works , and what are the main problems when it comes to its implementation on fpga , it is convenient first of all to analyze its software implementation . in this paper ,",
    "the opencv implementation is considered as a reference @xcite .",
    "the mapping function is usually defined according to a _",
    "pinhole _ camera model which includes radial and tangential lens distortion , along with a rotation operation for possible use when required . in this paper",
    ", we consider the commonly used model of @xcite , implemented in @xcite .",
    "the actual function is fully described in @xcite .    in the opencv implementation , this mapping function is computed beforehand  for each pixel @xmath8  and all of its values are stored in memory .",
    "the remapping method accesses the pre - computed map values at run time in a look - up - table fashion .",
    "although this is a very efficient solution in software , since the map function is computed only once at initialization time , this might be not feasible on a standard sized fpga without external memory due to the size of the full - resolution luts .",
    "this section provides a description of our distortion correction algorithm for fpga .",
    "this design is aimed at maximizing throughput and clock frequency through a deep datapath pipelining , and minimizing resources usage , both in terms of memory footprint and gates usage , through appropriate design techniques .",
    "both goals have been successfully achieved , allowing real - time distortion correction at a pixel clock frequency of 100 + mhz .",
    "this easily enables processing of 720p video streams at 60 + hz . in this section ,",
    "a detailed hardware description of the inverse mapping function for distortion correction ( _ map module _ in figure [ design - overview ] ) is omitted , since its adaptation from the standard software implementation is not straightforward and a further explanation is required .",
    "therefore , section [ fpga_remapping ] is focused on this specific problem analyzing in detail the constraints enforced by each examined solution to the underlining hardware design .",
    "the high level block diagram of this design is outlined in figure [ design - overview ] .",
    "incoming image data is written into a circular buffer , whose size is characterized by a pre - defined number of image rows .",
    "this amount of rows should be depending on the minimum and maximum _ relative vertical displacement _ values of the specific distortion correction map that is currently being used . on the",
    "_ read _ side of the buffer , with a delay  in number of lines , related to the input frame start  that corresponds at least to the maximum _ relative vertical displacement _ value , the output image generation begins using the same timing specs as the input one . in this way",
    ", the buffer always contains all the pixels of the input image that are required for remapping purposes . for the most important modules in figure [ design - overview ] we provide below a brief description of their functionality .    )",
    "in which that pixel is stored , width=132 ]      this module manages the writing mechanism that allows every input pixel to be written into one of the four different buffer memories , according to a strategy that makes possible to access anytime ( from the reading point of view ) , in the same clock cycle , four different pixels that are needed for an interpolation as depicted in figure [ buffer_pattern ] . for any interpolation quartet within the input image ,",
    "its four pixels can be accessed in parallel , since they are always stored in different buffers .",
    "this module combines the current _ buffer read address _ , generated by the address manager , with the remapping function coordinates that are related to that current output pixel , in order to compute the buffer addresses containing the input pixels that are needed to fill the current output pixel .",
    "specifically , the remap coordinates are provided by the map module as _ relative _ coordinates , meaning that they represent the relative position of the input distorted pixel with respect to the current output pixel : @xmath11      this module , given the four neighbor pixels that are coming from the buffers in parallel at the same clock cycle , computes their bilinear interpolation according to the sub - pixel map value .",
    "within our fpga design discussed in the previous section , the task of determining the input ( distorted ) coordinates from the output image coordinates is assigned to the _ map module _ depicted in figures [ design - overview ] and [ map - module ] .",
    "possible issues arise when implementing the distortion correction mapping function on fpga .",
    "the most challenging problem is that a conventional software implementation of the image distortion correction algorithm uses pre - computed full resolution maps that are entirely stored in memory as look - up - tables . even considering low resolution vga frames ,",
    "the complete map size is too big for being stored in static memories ( block ram / rom ) .",
    "therefore , if external memory devices ( e.g. , ddr , sram ) are not included in the hardware design , the methodology borrowed from the conventional software approach is not feasible for hardware implementation .",
    "moreover , this solution requires a significant amount of memory bandwidth .",
    "it is then required to find alternative solutions to the conventional look - up - table approach adopted for typical software implementations .",
    "different techniques can be used in order to achieve different goals , that include primarily : robustness to the lens distortion with accuracy comparable to the conventional approach , reduced fpga resource utilization and small memory footprint compatible with amounts available even in cheaper fpgas .      a first hardware - compatible approach that comes into mind by looking at the considered remapping function",
    "@xcite is the one of computing from scratch each @xmath12 value from the current @xmath8 coordinates .",
    "this approach , which avoids to store the full pre - computed map , is usually called _ on - the - fly _ map computation @xcite , completely avoids the need of memory , but has some drawbacks .",
    "first of all , for each input frame within the same stream session , these values are computed each time for scratch , even if they always have the same exact value for the same coordinates among frames .",
    "this introduces redundant computational costs , which are directly depending on the complexity of the distortion model .",
    "moreover , the floating point computation required by this approach might not be available or too demanding in terms of resource utilization and thus an approximated fixed point computation is mandatory in most cases .",
    "this strategy might result in an approximation error that is not negligible in comparison with the resolution of the standard software approach .",
    "therefore a further analysis , provided in the experimental results section , is needed in order to better understand how accurate the fixed point computation should be , in terms of fractional bits , in order to preserve the integrity of the mapping . despite these facts ,",
    "most of the image distortion correction approaches on fpga adopt this strategy .      as outlined before , the main problem that the standard software solution faces when it needs to be designed on hardware is the size of the full resolution look - up - table for the remapping function .",
    "different implementations within the current literature `` force '' to port this exact solution on hardware by using a complete software - like look - up - table @xcite .",
    "however , because of the size of such structure , an external memory is needed in order to store it , making the design more complex , expensive , and demanding in terms of memory bandwidth .",
    "an alternative approach , that comes to mind after this preface , is the one of using a size - reduced version of the look - up - table .",
    "the software computed pixel - to - pixel lut can be subsampled , generating a lower resolution version of it , by picking one value every @xmath13 values for both axes .",
    "bilinear interpolation of these samples can be used to reconstruct an approximation of the specific pixel s map value .",
    "the approximation error gets bigger when @xmath14 increases , _",
    "i.e. _ , when using less samples .    however , as reported in the next section , the subsampling factor @xmath14 can be significantly increased  making the actual sampled map very small  without compromising too much the quality of the map values .",
    "this approach is very convenient in terms of hardware resources since it requires only two simple bilinear interpolators ( one for the @xmath4 map coordinates , one for the @xmath6 ones ) , plus a small amount of internal memory to store the subsampled map .",
    "moreover , even if this approach could be often considered as the best trade - off for the hardware map function problem , it is much less frequently adopted compared to the on - the - fly computation one . in fact , only few papers about distortion correction or rectification on fpga rely on this strategy @xcite .",
    "the main goal of this paper is to highlight that , instead , the sampling approach is typically very accurate even with a small number of samples ( _ i.e. _ , large subsampling factor @xmath14 ) that require only a fraction of the whole lut size , making it compatible with the amount of memory available even in cheaper fpgas .    in the next section",
    "we thoroughly evaluate the performance , in terms of accuracy against increasing lens distortion , of each considered distortion correction approach providing a brief analysis of their resource utilization on fpga .",
    "in this section , the considered hardware solutions are analyzed in detail from two different perspectives :    1 .",
    "geometric error : the root mean square error ( rmse ) for each @xmath8 between the software generated map values and the fpga solutions is computed and plotted considering different increasing lens distortions corresponds to a minimal distortion , while distortion factor @xmath15 corresponds to the maximum distortion allowed by opencv 2.4 ( almost equivalent to the distortion introduced by the short focal length of gopro lenses ) .",
    "unfortunately , given the limited number of pages , we are not able to detail this matter exhaustively . ] 2 .",
    "resources estimation : an estimate of the needed hardware resources for implementing the specific approach is given .",
    "only the resources needed for the _ map module _ depicted in figure [ map - module ] are considered ( the other modules in figure [ design - overview ] are the same for all the considered approaches )      an important parameter to consider in this solution is the number of fixed point fractional digits that are exploited in the implementation of the _ on - the - fly _ computation operators on hardware .",
    "let us recall that a greater number of fractional digits leads on one hand to an improved accuracy of the final result , but on the other hand to a higher computational cost .",
    "this trade off is fundamental and therefore it required some further exploration . in particular , different values of fractional bits ( 12 , 16 , 20 ) have been considered and compared .        from this analysis , two very positive aspects of this approach are noticed .",
    "the first one is that , with the exception of the 12 bits fractional precision , the average rmse is quite low , which means that the fpga map is almost equivalent to the floating - point software one also when considering strong lens distortion ( figure [ chart_rmse_computation_480p ] ) .",
    "other than that , the geometric error is almost uniformly distributed within the frame ( figure [ computation_480p_lens2_20bits ] ) .    in order to understand the resource footprint of this solution , it is necessary to analyze the considered mapping function @xcite from an fpga perspective .",
    "the total hardware cost estimate is shown in figure [ number_of_operators ] and discussed in the remainder .",
    "an important parameter to consider when evaluating this approach is the subsampling factor @xmath14 , that is directly related to the total number of samples that are extracted from the original full resolution look - up - table : the bigger @xmath14 , the smaller the number of samples .",
    "sampling factors of 7 ( 128px ) , 6 ( 64px ) , and 5 ( 32px ) have been considered during this study .",
    "different aspects of this approach can be noticed .",
    "first of all , the error given by the bilinear interpolation of the samples causes a `` cushion '' effect ( figure [ sampling_480p_lens2_88samples ] ) .",
    "then , it can be noticed that the relationship between samples number and geometric error is inversely proportional : the more the used samples , the lower the error ( figure [ chart_rmse_sampling_480p ] ) .",
    "moreover , there is a strong dependency on the amount of distortion : an increment of the distortion leads to an increment of the error .",
    "nevertheless , a significant conclusion is that very good accuracy results are achieved even with a very small amount of samples ( _ i.e. _ , 336 for a vga resolution image ) , also in the case of lenses characterized by severe distortion .",
    "when analyzing the rmse reported in figure [ chart_rmse_sampling_480p ] , it is worth to consider that distortion correction maps estimated with camera calibration procedures are characterized by a accuracy that is in the range [ 0.1 - 0.5 ] px .",
    "therefore the approximation introduced by this method is comparable with the precision of the map itself , hence this procedure does not introduce a fundamental precision limitation .",
    "when considering the relative hardware costs , in this case it is not needed anymore to implement on hardware the map function , as a software pre - computed look - up - table of the function is used . since the map is now sampled for fitting into static memory within the chip , an hardware implementation of a bilinear interpolator is needed for interpolating the samples and obtaining an approximation of the specific pixel s map value .",
    "it can be easily proven that a bilinear interpolation module can be implemented by using 3 multipliers , that means 6 total multipliers are needed for two interpolation modules ( one for @xmath16 and another one for @xmath17 ) . along with some glue logic for address generation , an estimate of the needed resources",
    "is again shown in figure [ number_of_operators ] .",
    "a very important achievement is that , with this solution , the amount of needed hardware resources for computation decreases significantly ( if we also consider that dividers can be very expensive ) , and it is now independent on the mapping function complexity .",
    "moreover , a small amount of memory , _",
    "e.g. _ @xmath18 in case of vga resolution with sampling factor 5 ( 32 px ) , is now needed for storing the map samples compared to the @xmath19 of a full resolution lut .",
    "table [ table results ] reports the actual resources usage of our specific implementation for the xilinx artix-7 architecture .",
    "the report is relative to a single image distortion correction module , using an 8px subsampling factor ( very high accuracy ) on vga resolution ( 4941 total samples ) ; the image buffer size is 50 image lines .",
    "as theoretically analyzed before , this approach is definitely cheap in terms of hardware resources as well as in terms of memory footprint . the only significant hardware costs are related to the interpolation modules ( three of them needed in total : two for the lut values interpolation , one for the output pixel value computation ) .    finally , observing figure [ number_of_operators ]",
    ", we can notice again that the subsampling method completely avoids expensive dividers , and yields a significantly lower amount of multipliers and adders , which is not depending anymore on the distortion model function .",
    "moreover , by selecting appropriate parameters like the sampling factor , the subsampled approach leads to an accuracy that is suited for most practical applications .",
    "in this paper , we considered the image distortion correction problem for reconfigurable devices .",
    "although most approaches in the literature rely either on the external memory solution or on the on - the - fly computation one , our analysis and evaluation shows that a good trade - off between the two approaches is represented by the map subsampling strategy .",
    "moreover , compared to the on - the - fly solution , this approach decouples the hardware logic from the specific mapping function chosen , allowing flexibility in choosing different or more complex models with no need to change the architecture .",
    "a drawback of this approach is that , increasing the lens distortion factor , it might be not accurate enough in very particular setups including lenses with very short focal length ( _ i.e. _ , wide angle lenses ) .",
    "z. li , m. sun , h.c .",
    "chen , j. li , k. wang , w. jia .",
    "_ distortion correction in wide - angle images for picture - based food portion size estimation_. proc 38th annual northeast bioengineering conference ; philadelphia , pa . 2012 .",
    "d. claus , and a. fitzgibbon ( 2005 ) .",
    "_ a rational function lens distortion model for general cameras_. in ieee computer society conference on computer vision and pattern recognition ( cvpr 2005 ) , pages 213219 , san diego , ca .",
    "c. vancea and s. nedevschi .",
    "_ lut - based image rectification module implemented in fpga_. in ieee international conference on intelligent computer communication and processing , cluj - napoca , 2007 , pp .",
    "147 - 154 .",
    "a. kjr - nielsen , l. b. w. jensen , a. s. srensen and n. krger .",
    "_ a real - time embedded system for stereo vision preprocessing using an fpga_. in international conference on reconfigurable computing and fpgas ( reconfig ) , cancun , 2008 , pp ."
  ],
  "abstract_text": [
    "<S> image distortion correction is a critical pre - processing step for a variety of computer vision and image processing algorithms . </S>",
    "<S> standard real - time software implementations are generally not suited for direct hardware porting , so appropriated versions need to be designed in order to obtain implementations deployable on fpgas . in this paper , hardware - compatible techniques for image distortion correction </S>",
    "<S> are introduced and analyzed in details . </S>",
    "<S> the considered solutions are compared in terms of output quality by using a geometrical - error - based approach , with particular emphasis on robustness with respect to increasing lens distortion . </S>",
    "<S> the required amount of hardware resources is also estimated for each considered approach . </S>"
  ]
}
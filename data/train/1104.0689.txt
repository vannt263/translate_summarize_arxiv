{
  "article_text": [
    "the characteristic set method  @xcite of wu has freed ritt s decomposition from polynomial factorization , opening the door to a variety of discoveries in polynomial system solving . in the past two decades",
    "the work of wu has been extended to more powerful decomposition algorithms and applied to different types of polynomial systems or decompositions : differential systems  @xcite , difference systems  @xcite , real parametric systems  @xcite , primary decomposition  @xcite , cylindrical algebraic decomposition  @xcite . today",
    ", triangular decomposition algorithms provide back - engines for computer algebra system front - end solvers , such as maple s solve command",
    ".    algorithms computing triangular decompositions of polynomial systems can be classified in several ways .",
    "one can first consider the relation between the input system @xmath0 and the output triangular systems @xmath1 . from that perspective ,",
    "two types of decomposition are essentially different : those for which @xmath1 encode all the points of the zero set @xmath0 ( over the algebraic closure of the coefficient field of @xmath0 ) and those for which @xmath1 represent only the `` generic zeros '' of the irreducible components of @xmath0 .",
    "one can also classify triangular decomposition algorithms by the algorithmic principles on which they rely . from this other angle ,",
    "two types of algorithms are essentially different : those which proceed _ by variable elimination _ , that is , by reducing the solving of a system in @xmath2 unknowns to that of a system in @xmath3 unknowns and those which proceed _ incrementally _ , that is , by reducing the solving of a system in @xmath4 equations to that of a system in @xmath5 equations .",
    "the characteristic set method and the algorithm in  @xcite belong to the first type in each classification .",
    "algorithm  @xcite , which is an elimination method solving in the sense of the `` generic zeros '' , has brought efficient techniques , based on the concept of a _",
    "regular chain_. other works  @xcite on triangular decomposition algorithms focus on incremental solving .",
    "this principle is quite attractive , since it allows to control the properties and size of the intermediate computed objects .",
    "it is used in other areas of polynomial system solving such as the probabilistic algorithm of lecerf  @xcite based on lifting fibers and the numerical method of sommese , verschelde , wample  @xcite based on diagonal homotopy .",
    "incremental algorithms for triangular decomposition rely on a procedure for computing the intersection of an hypersurface and the quasi - component of a regular chain .",
    "thus , the input of this operation can be regarded as well - behaved geometrical objects .",
    "however , known algorithms , namely the one of lazard  @xcite and the one of the second author  @xcite are quite involved and difficult to analyze and optimize .    in this paper",
    ", we revisit this intersection operation .",
    "let @xmath6 $ ] be the ring of multivariate polynomials with coefficients in and ordered variables @xmath7 .",
    "given a polynomial @xmath8 and a regular chain @xmath9 $ ] , the function call @xmath10 returns regular chains @xmath11 $ ] such that we have : @xmath12 ( see section  [ sec : regularchains ] for the notion of a regular chain and related concepts and notations . ) we exhibit an algorithm for computing @xmath10 which is conceptually simpler and practically much more efficient than those of  @xcite .",
    "our improvements result mainly from two new ideas .    *",
    "weakened notion of polynomial gcds modulo regular chain .",
    "* modern algorithms for triangular decomposition rely implicitly or explicitly on a notion of gcd for univariate polynomials over an arbitrary commutative ring .",
    "a formal definition was proposed in  @xcite ( see definition  [ definition : regular - gcd ] ) and applied to residue class rings of the form @xmath13 / { \\mbox{{\\rm sat}$(t)$}}$ ] where @xmath14 is the saturated ideal of the regular chain @xmath15 . a modular algorithm for computing these gcds appears in  @xcite : if @xmath14 is known to be radical , the performance ( both in theory and practice ) of this algorithm are very satisfactory whereas if @xmath14 is not radical , the complexity of the algorithm increases substantially w.r.t . the radical case . in this paper ,",
    "the ring will be of the form @xmath16/\\sqrt{{\\mbox{{\\rm sat}$(t)$}}}$ ] while our algorithms will not need to compute a basis nor a characteristic set of @xmath17 .",
    "for the purpose of polynomial system solving ( when retaining the multiplicities of zeros is not required ) this weaker notion of a polynomial gcd is clearly sufficient .",
    "in addition , this leads us to a very simple procedure for computing such gcds , see theorem  [ theorem : regulargcd ] . to this end",
    ", we rely on the _ specialization property of subresultants_. appendix  [ app : subresultantchain ] reviews this property and provides corner cases for which we could not find a reference in the literature .    * extracting common work from similar computations . * up to technical details ,",
    "if @xmath15 consists of a single polynomial @xmath18 whose main variable is the same as @xmath19 , say @xmath20 , computing @xmath10 can be achieved by successively computing    * the resultant @xmath21 of @xmath19 and @xmath18 w.r.t .",
    "@xmath20 , * a regular gcd of @xmath19 and @xmath18 modulo the squarefree part of @xmath21 .",
    "observe that steps @xmath22 and @xmath23 reduce essentially to computing the subresultant chain of @xmath19 and @xmath18 w.r.t .",
    "@xmath20 . the algorithms of section  [ sec : incremental ] extend this simple observation for computing @xmath10 with an arbitrary regular chain . in broad terms , the intermediate polynomials computed during the `` elimination phasis '' of @xmath10 are recycled for performing the `` extension phasis '' at essentially no cost .",
    "the techniques developed for @xmath10 are applied to other key sub - algorithms , such as :    * the regularity test of a polynomial modulo the saturated of a regular chain , see section  [ sec : incremental ] , * the squarefree part of a regular chain , see appendix  [ sec : squarefree ] .",
    "the primary application of the operation intersect is to obtain triangular decomposition encoding all the points of the zero set of the input system .",
    "however , we also derive from it in section  [ sec : kalkbrener ] an algorithm computing triangular decompositions in the sense of kalkbrener .",
    "* experimental results . *",
    "we have implemented the algorithms presented in this paper within the regularchains library in maple , leading to a new implementation of the triangularize command . in section",
    "[ sec : implementation ] , we report on various benchmarks .",
    "this new version of triangularize outperforms the previous ones ( based on  @xcite ) by several orders of magnitude on sufficiently difficult problems .",
    "other maple commands or packages for solving polynomial systems ( the wsolve package , the groebner :- solve command and the groebner :- basis command for a lexicographical term order ) are also outperformed by the implementation of the algorithms presented in this paper both in terms of running time and , in the case of engines based on grbner bases , in terms of output size .",
    "we review hereafter the notion of a regular chain and its related concepts",
    ". then we state basic properties ( propositions  [ proposition : prem ] , [ proposition : equal - dim ] , [ proposition : radsatprem ] , [ proposition : equivalence ] , and corollaries [ corollary : sqrtsat ] , [ corollary : regular ] ) of regular chains , which are at the core of the proofs of the algorithms of section  [ sec : incremental ] .    throughout this paper",
    ", @xmath24 is a field , @xmath25 is the algebraic closure of @xmath24 and @xmath16 $ ] denotes the ring of polynomials over @xmath24 , with ordered variables @xmath26 . let @xmath27 $ ] .    * notations for polynomials . *",
    "if @xmath19 is not constant , then the greatest variable appearing in @xmath19 is called the _ main variable _ of @xmath19 , denoted by @xmath28 .",
    "furthermore , the leading coefficient , the degree , the leading monomial , the leading term and the reductum of @xmath19 , regarded as a univariate polynomial in @xmath28 , are called respectively the _ initial _ , the _ main degree _ , the _ rank _ , the _ head _ and the _ tail _ of @xmath19 ; they are denoted by @xmath29 , @xmath30 , @xmath31 , @xmath32 and @xmath33 respectively .",
    "let @xmath34 be another polynomial of @xmath16 $ ] .",
    "if @xmath34 is not constant , then we denote by @xmath35 and @xmath36 the pseudo - remainder and the pseudo - quotient of @xmath19 by @xmath34 as univariate polynomials in @xmath37 .",
    "we say that @xmath19 is less than q and write @xmath38 if either @xmath39 and @xmath40 or both are non - constant polynomials such that @xmath41 holds , or @xmath42 and @xmath43 both hold .",
    "we write @xmath44 if neither @xmath38 nor @xmath45 hold .",
    "* notations for polynomial sets .",
    "* let @xmath46.$ ] we denote by @xmath47 the ideal generated by @xmath48 in @xmath49 $ ] .",
    "for an ideal @xmath50 $ ] , we denote by @xmath51 its dimension .",
    "a polynomial is _ regular _ modulo @xmath52 if it is neither zero , nor a zerodivisor modulo @xmath53 denote by @xmath54 the _ zero set _ ( or algebraic variety ) of @xmath48 in @xmath55 let @xmath56.$ ] the _ saturated ideal _ of @xmath52 w.r.t .",
    "@xmath57 , denoted by @xmath58 , is the ideal @xmath59\\mid \\exists m\\in\\mathbb{n}\\text { s.t . }",
    "h^mq\\in { \\cal i}\\}$ ] .",
    "* triangular set .",
    "* let @xmath60 $ ] be a _ triangular set _",
    ", that is , a set of non - constant polynomials with pairwise distinct main variables .",
    "the set of main variables and the set of ranks of the polynomials in @xmath15 are denoted by @xmath61 and @xmath62 , respectively .",
    "a variable in @xmath63 is called _ algebraic _ w.r.t . @xmath15",
    "if it belongs to , otherwise it is said _ free _ w.r.t .",
    "@xmath15 . for @xmath64 ,",
    "denote by @xmath65 the polynomial in @xmath15 with main variable @xmath20 . for @xmath66 ,",
    "we denote by @xmath67 ( resp .",
    "@xmath68 ) the set of polynomials @xmath69 such that @xmath70 ( resp .",
    "@xmath71 ) holds .",
    "let @xmath72 be the product of the initials of the polynomials in @xmath15 .",
    "we denote by the _ saturated ideal _ of @xmath15 defined as follows : if @xmath15 is empty then is the trivial ideal @xmath73 , otherwise it is the ideal @xmath74 .",
    "the _ quasi - component _ @xmath75 of @xmath15 is defined as @xmath76 .",
    "denote @xmath77 as the zariski closure of @xmath75 . for @xmath46 $ ]",
    ", we write @xmath78 .",
    "* rank of a triangular set .",
    "* let @xmath79 $ ] be another triangular set .",
    "we say that @xmath15 has smaller rank than @xmath0 and we write @xmath80 if there exists @xmath64 such that @xmath81 holds and : @xmath82 either @xmath83 ; @xmath84 or @xmath85 and @xmath86 .",
    "we write @xmath87 if @xmath88 .",
    "* iterated resultant . *",
    "let @xmath89 $ ] .",
    "assume @xmath34 is nonconstant and let @xmath90 .",
    "we define @xmath91 as follows : if the degree @xmath92 of @xmath19 in @xmath20 is null , then @xmath93 ; otherwise @xmath91 is the resultant of @xmath19 and @xmath34 w.r.t .",
    "@xmath20 . let @xmath15 be a triangular set of @xmath16 $ ] .",
    "we define @xmath94 by induction :",
    "if @xmath95 , then @xmath96 ; otherwise let @xmath20 be greatest variable appearing in @xmath15 , then @xmath97 .    * regular chain . * a triangular set",
    "@xmath98 $ ] is a _ regular chain _ if : @xmath82 either @xmath15 is empty ; @xmath84 or @xmath99 is a regular chain , where @xmath100 is the polynomial in @xmath15 with maximum rank , and the initial of @xmath100 is regular w.r.t . . the empty regular chain is simply denoted by @xmath101 .    * triangular decomposition . *",
    "let @xmath46 $ ] be finite .",
    "let @xmath102 be a finite set of regular chains of @xmath16 $ ] .",
    "we call @xmath103 a _ kalkbrener triangular decomposition _ of @xmath54 if we have @xmath104 .",
    "we call @xmath103 a _ lazard - wu triangular decomposition _ of @xmath54 if we have @xmath105 .",
    "[ proposition : prem ] let @xmath19 and @xmath15 be respectively a polynomial and a regular chain of @xmath16 $ ] . then , @xmath106 holds if and only if @xmath107 holds .",
    "[ proposition : equal - dim ] let @xmath15 and @xmath108 be two regular chains of @xmath16 $ ] such that @xmath109 and @xmath110 hold .",
    "let @xmath111 $ ] such that @xmath19 is regular w.r.t . @xmath14 .",
    "then @xmath19 is also regular w.r.t . @xmath112 .",
    "[ proposition : radsatprem ] let @xmath111 $ ] and @xmath113 $ ] be a regular chain .",
    "let @xmath114 and @xmath115 such that @xmath116 holds .",
    "then , we have @xmath117 .    [",
    "corollary : sqrtsat ] let @xmath15 and @xmath108 be two regular chains of @xmath118 $ ] , where @xmath119 .",
    "let @xmath111 $ ] with @xmath120 such that @xmath29 is regular w.r.t .",
    "both @xmath14 and @xmath112 .",
    "assume that @xmath121 holds .",
    "then we also have @xmath122 .",
    "[ proposition : equivalence ] let @xmath111 $ ] .",
    "let @xmath113 $ ] be a regular chain .",
    "then the following statements are equivalent :    * the polynomial @xmath19 is regular w.r.t .",
    "@xmath14 , * for each prime ideal @xmath123 associated with @xmath14 , we have @xmath124 , * the iterated resultant @xmath94 is not zero .    [",
    "corollary : regular ] let @xmath111 $ ] and @xmath113 $ ] be a regular chain .",
    "let @xmath125 and @xmath126 .",
    "we have :    * the polynomial @xmath19 is regular w.r.t .",
    "@xmath14 if and only if @xmath21 is regular w.r.t . @xmath127 ; * if @xmath128 and @xmath29 is regular w.r.t .",
    "@xmath14 , then @xmath19 is regular w.r.t . @xmath14 .",
    "as mentioned before , definition  [ definition : regular - gcd ] was introduced in  @xcite as part of a formal framework for algorithms manipulating regular chains  @xcite . in the present paper ,",
    "the ring will always be of the form @xmath16/\\sqrt{{\\mbox{{\\rm sat}$(t)$}}}$ ] .",
    "thus , a regular gcd of @xmath129 in @xmath130 $ ] is also called a regular gcd of @xmath129 modulo @xmath131    [ definition : regular - gcd ] let be a commutative ring with unity .",
    "let @xmath132 $ ] with @xmath133 and @xmath134 .",
    "we say that @xmath135 $ ] is a _ regular gcd _ of @xmath136 if :    * the leading coefficient of @xmath137 in @xmath138 is a regular element ; * @xmath137 belongs to the ideal generated by @xmath19 and @xmath18 in @xmath139 $ ] ; * if @xmath140 , then @xmath137 pseudo - divides both @xmath19 and @xmath18 , that is , @xmath141 .",
    "[ proposition : regular - gcd ] for @xmath142 , let @xmath143 $ ] be a regular chain , possibly empty .",
    "let @xmath144 $ ] be polynomials with main variable @xmath145 .",
    "assume @xmath146 is a regular chain and @xmath137 is a regular gcd of @xmath19 and @xmath18 modulo @xmath17 .",
    "we have :    * if @xmath147 , then @xmath148 and @xmath149 both hold , * if @xmath150 , let @xmath151 , then @xmath152 is a regular chain and the following two relations hold : * * @xmath153 , * * @xmath154 * @xmath155 , * @xmath156 .",
    "we first establish a relation between @xmath19 , @xmath18 and @xmath137 . by definition of pseudo - division , there exist polynomials @xmath157 and a nonnegtive integer @xmath158 such that @xmath159 both hold . hence , there exists an integer @xmath160 such that : @xmath161 holds , which implies : @xmath162 .",
    "we first prove @xmath82 .",
    "since @xmath163 holds , we have @xmath164 $ ] , and thus we have @xmath165 . since @xmath166 and @xmath167 are regular modulo @xmath14 , the same property holds for @xmath34 .",
    "together with  ( [ eqs : tgq ] ) , we obtain @xmath168 .",
    "therefore @xmath148 .",
    "the inclusion relation in @xmath82 follows from  ( [ eqs : tgq0 ] ) .",
    "we prove @xmath84 .",
    "assume @xmath169 . with  (",
    "[ eqs : tgq0 ] ) and  ( [ eqs : tgq ] ) , this hypothesis implies that @xmath170 is a regular chain and @xmath171 holds .",
    "since @xmath162 also holds , @xmath172 is contained in @xmath173 .",
    "conversely , for any @xmath174 , there exists an integer @xmath175 and @xmath176 $ ] such that @xmath177 holds . with  ( [ eqs : tgq0 ] )",
    "we deduce that @xmath178 holds and so does @xmath179 . with  ( [ eqs : tgq0 ] )",
    ", we have @xmath180 holds .",
    "we prove @xmath181 and @xmath182 .",
    "definition  [ definition : regular - gcd ] implies : @xmath183 .",
    "thus @xmath184 holds , that is , @xmath185 , which implies @xmath181 . moreover , since @xmath186 , we have @xmath187 , so we deduce @xmath182 .",
    "let @xmath136 be two polynomials of @xmath188 $ ] , for @xmath189 .",
    "let @xmath190 , @xmath191 .",
    "assume that @xmath192 .",
    "let @xmath193 .",
    "let @xmath15 be a regular chain of @xmath194 $ ] .",
    "let @xmath195 $ ] and @xmath196 .",
    "let @xmath197 be the subresulant polynomials  @xcite of @xmath19 and @xmath18 w.r.t .",
    "@xmath198 in @xmath199 $ ] .",
    "let @xmath200 be the principle subresultant coefficient of @xmath201 , for @xmath202 . if @xmath203 , we define @xmath204 , @xmath205 , @xmath206 and @xmath207 . if @xmath208 , we define @xmath209 , @xmath210 , @xmath211 and @xmath212 .",
    "the following theorem provides sufficient conditions for @xmath213 ( with @xmath214 ) to be a regular gcd of @xmath19 and @xmath18 in @xmath215 $ ] .",
    "[ theorem : regulargcd ] let @xmath216 be an integer , with @xmath214 , such that @xmath217 is a regular element of @xmath218 and such that for any @xmath219 , we have @xmath220 in @xmath218 . then @xmath213 is a regular gcd of @xmath19 and @xmath18 in @xmath215 $ ] .    by definition  [ definition : regular - gcd ]",
    ", it suffices to prove that both @xmath221 and @xmath222 hold in @xmath218 . by symmetry",
    "we only prove the former equality .",
    "let @xmath123 be any prime ideal associated with @xmath14 .",
    "define @xmath223/{\\mathfrak{p}}$ ] and let @xmath224 be the fraction field of the integral domain @xmath225 .",
    "let @xmath226 be the homomorphism from @xmath227 to @xmath224 . by theorem  [ theorem : gcd ] of appendix",
    "[ app : subresultantchain ] , we know that @xmath228 is a gcd of @xmath229 and @xmath230 in @xmath231 $ ] .",
    "therefore there exists a polynomial @xmath34 of @xmath231 $ ] such that @xmath232 in @xmath231 $ ] , which implies that there exists a nonzero element @xmath233 of @xmath225 and a polynomial @xmath234 of @xmath235 $ ] such that @xmath236 in @xmath235 $ ] .",
    "therefore @xmath237 in @xmath235 $ ] , which implies that @xmath238 in @xmath235 $ ] .",
    "therefore @xmath239 belongs to @xmath240 and thus to @xmath17 .",
    "so @xmath221 in @xmath218 .",
    "in this section , we present an algorithm to compute lazard - wu triangular decompositions in an incremental manner .",
    "we recall the concepts of a _ process _ and a _ regular ( delayed ) split _ , which were introduced as definitions 9 and 11 in  @xcite . to serve our purpose , we modify the definitions as below .    [ definition : process ] a _ process _ of @xmath16 $ ] is a pair @xmath241 , where @xmath111 $ ] is a polynomial and @xmath242 $ ] is a regular chain . the process @xmath243 is also written as @xmath15 for short . given two processes @xmath241 and @xmath244 , let @xmath20 and @xmath245 be respectively the greatest variable appearing in @xmath241 and @xmath244 .",
    "we say @xmath246 if : @xmath82 either @xmath247 ; @xmath84 or @xmath248 and @xmath249 ; @xmath181 or @xmath248 , @xmath250 and @xmath251 ; @xmath182 or @xmath248 , @xmath250 , @xmath252 and @xmath253 .",
    "we write @xmath254 if neither @xmath246 nor @xmath255 hold . clearly any sequence of processes which is strictly decreasing w.r.t .",
    "@xmath256 is finite .",
    "[ definition : split ] let @xmath257 , @xmath258 , be regular chains of @xmath16 $ ] .",
    "let @xmath111 $ ] .",
    "we call @xmath259 a _ regular split _ of @xmath241 whenever we have    * @xmath260 * @xmath261 ( or equivalently @xmath262 ) * @xmath263    we write as @xmath264 .",
    "observe that the above three conditions are equivalent to the following relation .",
    "@xmath12 geometrically , this means that we may compute a little more than @xmath265 ; however , @xmath266 is a `` sharp '' approximation of the intersection of @xmath267 and @xmath75 .    next we list the specifications of our triangular decomposition algorithm and its subroutines .",
    "we denote by @xmath268 the polynomial ring @xmath16 $ ] , where @xmath269 .",
    "* * input : * @xmath48 , a finite set of polynomials of @xmath268 * * output : * a lazard - wu triangular decomposition of @xmath54 .    * * input : * @xmath19 , a polynomial of @xmath268 ; @xmath15 , a regular chain of @xmath268 * * output : * a set of regular chains @xmath270 such chat @xmath264 .    * * input : * @xmath19 , a polynomial of @xmath268 ; @xmath15 , a regular chain of @xmath268 . *",
    "* output : * a set of pairs @xmath271,\\ldots , [ p_e , t_e]\\}$ ] such that for each @xmath272 : @xmath273 @xmath257 is a regular chain ; @xmath274 @xmath275 ; @xmath276 if @xmath277 , then @xmath278 otherwise @xmath279 is regular modulo @xmath280 ; moreover we have @xmath281 .    * * input : * @xmath20 , a variable of @xmath282 ; @xmath19 and @xmath34 , polynomials of @xmath268 , whose main variables are both @xmath20 . * * output : * a list of polynomials @xmath283 , where @xmath284 , such that @xmath201 is the @xmath285-th subresultant of @xmath19 and @xmath34 w.r.t . @xmath20 .    * * input : * @xmath20 , a variable of @xmath282 , * * @xmath15 , a regular chain of @xmath268 such that @xmath286 , * * @xmath19 and @xmath34 , polynomials of @xmath268 with the same main variable @xmath20 such that : @xmath287 is regular modulo @xmath17 ; belongs to @xmath17 , * * @xmath0 , the subresultant chain of @xmath19 and @xmath34 w.r.t . @xmath20 . *",
    "* output : * a set of pairs @xmath288,\\ldots,[g_e , t_e]\\}$ ] such that @xmath281 and for each @xmath257 : if @xmath289 , then @xmath290 is a regular gcd of @xmath19 and @xmath34 modulo @xmath280 ; otherwise @xmath291 , which means undefined .    *",
    "* input : * @xmath292 , a variable of @xmath63 ; @xmath19 , a polynomial of @xmath268 with main variable @xmath292 ; @xmath293 , a regular chain of @xmath294 $ ] . * * output : * a set of regular chains @xmath270 such that @xmath295 .    * * input : * @xmath19 , a polynomial of @xmath268 with main variable @xmath292 , * * @xmath15 , a regular chain of @xmath268 , where @xmath296 , * * @xmath0 , the subresultant chain of @xmath19 and @xmath297 w.r.t .",
    "@xmath292 , * * @xmath293 , a regular chain of @xmath294 $ ] , such that : @xmath298 is regular modulo @xmath299 ; the resultant of @xmath19 and @xmath297 , which is @xmath300 , belongs to @xmath299 . *",
    "* output : * a set of regular chains @xmath259 such that @xmath301 .    * * input : * @xmath15 , a regular chain of @xmath268 ; @xmath293 , a regular chain of @xmath294 $ ] such that @xmath302 . * * output : * if @xmath303 , return @xmath293 ; otherwise return a set of regular chains @xmath270 such that @xmath298 is regular modulo each @xmath304 , @xmath305 and @xmath306 .    * * input : * @xmath293 , is a regular chain of @xmath294 $ ] .",
    "@xmath15 , a regular chain of @xmath268 such that @xmath302 . * * output : * a set of regular chains @xmath270 of @xmath268 such that @xmath307 and @xmath308 .",
    "algorithm subresultantchain is standard , see  @xcite .",
    "the algorithm triangularize is a _ principle algorithm _ which was first presented in  @xcite .",
    "we use the following conventions in our pseudo - code : the keyword * return * yields a result and terminates the current function call while the keyword * output * yields a result and keeps executing the current function call .    *",
    "if * @xmath309 * then * return @xmath310 @xmath39 * then * return @xmath311 @xmath312 ; @xmath313 ; @xmath314 @xmath315 ; @xmath316 ; @xmath317 return @xmath103    @xmath318    * if * @xmath39 * or * @xmath95 * then * return @xmath319 $ ] @xmath125    * if * @xmath320 * then * return @xmath293 let @xmath321 with greatest main variable ; @xmath322    * if * @xmath303 * or * @xmath323 * then * return @xmath293    * if * @xmath324 * then * return @xmath325 choose a polynomial @xmath326 with maximal rank",
    "[ figure : algorithm ]    all the algorithms in fig . 1 terminate .",
    "the key observation is that the flow graph of fig .",
    "1 can be transformed into an equivalent flow graph satisfying the following properties : ( 1 ) the algorithms intersect and regularize only call each other or themselves ; ( 2 ) all the other algorithms only call either intersect or regularize .",
    "therefore , it suffices to show that intersect and regularize terminate .",
    "note that the input of both functions is a process , say @xmath241 .",
    "one can check that , while executing a call with @xmath241 as input , any subsequent call to either functions intersect or regularize will take a process @xmath244 as input such that @xmath327 holds . since a descending chain of processes is necessarily finite , both algorithms terminate .    since all algorithms terminate , and following the flow graph of fig .",
    "1 , each call to one of our algorithms unfold to a finite dynamic acyclic graph ( dag ) where each vertex is a call to one of our algorithms . therefore",
    ", proving the correctness of these algorithms reduces to prove the following two points .    *",
    "_ base : _ each algorithm call , which makes no subsequent calls to another algorithm or to itself , is correct . * _ induction : _ each algorithm call , which makes subsequent calls to another algorithm or to itself , is correct , as soon as all subsequent calls are themselves correct .    for all algorithms in fig . 1",
    ", proving the base cases is straightforward .",
    "hence we focus on the induction steps .",
    "[ proposition : intersectfree ] @xmath328 satisfies its specification .",
    "we have the following two key observations :    * @xmath329 , where @xmath330 are the regular chains in the output of @xmath331 .",
    "* @xmath332    then it is not hard to conclude that @xmath333 .",
    "[ proposition : intersectalgebraic ] @xmath334 is correct .",
    "we need to prove : @xmath301 .",
    "let us prove @xmath335 now , that is , for each regular chain @xmath336 in the output , we have @xmath337 .",
    "first by the specifications of the called functions , we have @xmath338 , thus , @xmath339 by corollary  [ corollary : sqrtsat ] , since @xmath298 is regular modulo both @xmath340 and @xmath341 . secondly ,",
    "since @xmath137 is a regular gcd of @xmath19 and @xmath297 modulo @xmath342 , we have @xmath343 by corollaries  [ corollary : sqrtsat ] and proposition  [ proposition : regular - gcd ] .",
    "next we prove @xmath344 .",
    "it is enough to prove that @xmath345 holds .",
    "since @xmath137 is a regular gcd of @xmath19 and @xmath297 modulo @xmath342 , the conclusion follows from point @xmath181 of proposition  [ proposition : regular - gcd ] .",
    "finally we prove @xmath346 , that is @xmath347 .",
    "let @xmath348 be the regular chains returned from algorithm @xmath349 .",
    "we have @xmath329 , which implies @xmath350 .",
    "next since @xmath137 is a regular gcd of @xmath19 and @xmath297 modulo @xmath351 , the conclusion follows from point @xmath182 of proposition  [ proposition : regular - gcd ] .",
    "[ proposition : intersect ] @xmath352 satisfies its specification .    the first while loop can be seen as a projection process .",
    "we claim that it produces a nonempty triangular set @xmath353 such that @xmath354 .",
    "the claim holds before staring the while loop . for each iteration , let @xmath355 be the set of polynomials obtained at the previous iteration .",
    "we then compute a polynomial @xmath21 , which is the resultant of a polynomial in @xmath355 and a polynomial in @xmath15 .",
    "so @xmath356 .",
    "by induction , we have @xmath357 .",
    "so the claim holds .",
    "next , we claim that the elements in @xmath103 satisfy the following invariants : at the beginning of the @xmath285-th iteration of the second while loop , we have    * each @xmath358 is a regular chain ; if @xmath297 exists , then @xmath298 is regular modulo @xmath340 , * for each @xmath358 , we have @xmath359 , * for each @xmath358 , we have @xmath360 , * @xmath361    when @xmath362 , we then have @xmath363 , @xmath364 for each @xmath365 and @xmath366 so @xmath367 of definition  [ definition : split ] all hold .",
    "this concludes the correctness of the algorithm .",
    "now we prove the above claims @xmath273 , @xmath274 , @xmath276 , @xmath368 by induction . the claims clearly hold when @xmath369 since @xmath370 and @xmath354 .",
    "now assume that the loop invariants hold at the beginning of the @xmath285-th iteration .",
    "we need to prove that it still holds at the beginning of the @xmath371-th iteration .",
    "let @xmath365 be an element picked up at the beginning of @xmath285-th iteration and let @xmath372 be the set of the new elements of @xmath373 generated from @xmath293 .",
    "then for any @xmath374 , claim @xmath273 clearly holds by specification of @xmath375 .",
    "next we prove @xmath274 .    * if @xmath303 , then @xmath376 . by induction and specifications of called functions",
    ", we have @xmath377 * if @xmath296 , by induction we have @xmath378 and @xmath298 is regular modulo both @xmath340 and @xmath379 . by corollary  [ corollary : sqrtsat ]",
    "we have @xmath380    therefore @xmath274 holds .",
    "next we prove claim @xmath276 . by induction and",
    "the specifications of called functions , we have @xmath381 secondly , we have @xmath382",
    ". therefore @xmath383 , that is @xmath276 holds . finally , since @xmath384",
    ", we have @xmath385 which implies that @xmath368 holds .",
    "this completes the proof .",
    "@xmath331 satisfies its specification",
    ".    if @xmath128 , the conclusion follows directly from point @xmath274 of corollary  [ corollary : regular ] . from now",
    "on , assume @xmath64 . let @xmath386 be the set of pairs @xmath387 $ ] in the output .",
    "we aim to prove the following facts    * each @xmath108 is a regular chain , * if @xmath388 , then @xmath19 is zero modulo @xmath389 , otherwise @xmath19 is regular modulo @xmath14 , * we have @xmath109 , * we have @xmath390 .",
    "statement @xmath273 is due to proposition  [ proposition : equal - dim ] .",
    "next we prove @xmath274 .",
    "first , when there are recursive calls , the conclusion is obvious .",
    "let @xmath391 $ ] be a pair in the output of @xmath392 .",
    "if @xmath393 , the conclusion follows directly from point @xmath273 of corollary  [ corollary : regular ] . otherwise , let @xmath394 $ ] be a pair in the output of the algorithm @xmath395 .",
    "if @xmath396 , then by the algorithm of @xmath349 , @xmath397 .",
    "therefore we have @xmath398 , which implies that @xmath399 by proposition  [ proposition : radsatprem ] .",
    "next we prove @xmath276 .",
    "whenever extend is called , @xmath276 holds immediately .",
    "otherwise , let @xmath391 $ ] be a pair returned by @xmath392 .",
    "when @xmath400 , since @xmath401 holds , we conclude @xmath402 by corollary  [ corollary : sqrtsat ] .",
    "let @xmath394 \\in { { \\mbox{{\\sf regulargcd}$(p , t_v , v , src , c , r)$}}}$ ] .",
    "corollary  [ corollary : sqrtsat ] and point @xmath84 of proposition  [ proposition : regular - gcd ] imply that @xmath403 , @xmath404 together with @xmath405 hold . hence @xmath276 holds .    finally by point @xmath180 of proposition  [ proposition : regular - gcd ] , we have @xmath406 .",
    "so @xmath368 holds .",
    "extend satisfies its specification .",
    "it clearly holds when @xmath320 , which is the base case . by induction and the specification of",
    "regularize , we know that @xmath407 . since @xmath29 is regular modulo both @xmath112 and @xmath341 , by corollary  [ corollary : sqrtsat ] , we have @xmath408 . on the other hand , we have @xmath409 and @xmath410",
    ". therefore @xmath411 , where @xmath412 are the regular chains in the output .",
    "cleanchain satisfies its specification .",
    "it follows directly from proposition  [ proposition : equal - dim ] .",
    "regulargcd satisfies its specification .",
    "let @xmath413 $ ] , @xmath414 , be the output .",
    "first from the specification of regularize , we have @xmath281 . when @xmath415 , by proposition  [ proposition : equal - dim ] and theorem  [ theorem : regulargcd ] , @xmath290 is a regular gcd of @xmath19 and @xmath34 modulo @xmath17 .",
    "in this section , we adapt the algorithm triangularize ( algorithm  [ algo : triangularize ] ) , in order to compute efficiently a kalkbrener triangular decomposition .",
    "the basic technique we rely on follows from krull s principle ideal theorem .",
    "let @xmath416 $ ] be finite , with cardinality @xmath417 .",
    "assume @xmath48 generates a proper ideal of @xmath16 $ ] .",
    "then , for any minimal prime ideal @xmath123 associated with @xmath47 , the height of @xmath123 is less than or equal to @xmath417 .",
    "let @xmath103 be a kalkbrener triangular decomposition of @xmath54 .",
    "let @xmath15 be a regular chain of @xmath103 , the height of which is greater than @xmath417 .",
    "then @xmath418 is also a kalkbrener triangular decomposition of @xmath54 .",
    "based on this corollary , we prune the decomposition tree generated during the computation of a lazard - wu triangular decomposition and remove the computation branches in which the height of every generated regular chain is greater than the number of polynomials in @xmath48 .",
    "next we explain how to implement this tree pruning technique to the algorithms of section  [ sec : incremental ] . inside triangularize , define @xmath419 and pass it to every call to intersect in order to signal intersect to output only regular chains with height no greater than @xmath420 .",
    "next , in the second while loop of intersect , for the @xmath285-th iteration , we pass the height @xmath421 to cleanchain , intersectfree and intersectalgebraic .    in intersectfree , we pass its input height @xmath420 to every function call .",
    "besides , lines @xmath422 to @xmath423 are executed only if the height of @xmath424 is strictly less than @xmath420 , since otherwise we would obtain regular chains of height greater than @xmath420 . in other algorithms",
    ", we apply similar strategies as in intersect and intersectfree .",
    "part of the algorithms presented in this paper are implemented in maple14 while all of them are present in the current development version of maple .",
    "tables 1 and 2 report on our comparison between triangularize and other maple solvers .",
    "the notations used in these tables are defined below .",
    "* notation for triangularize .",
    "* we denote by tk and tl the latest implementation of triangularize for computing , respectively , kalkbrener and lazard - wu decompositions , in the current version of maple .",
    "denote by tk14 and tl14 the corresponding implementation in maple14 .",
    "denote by tk13 , tl13 the implementation based on the algorithm of  @xcite in maple13 .",
    "finally , stk and stl are versions of tk and tl respectively , enforcing that all computed regular chains are squarefree , by means of the algorithms in appendix  [ sec : squarefree ] .",
    "* notation for the other solvers . * denote by gl , gs , gd , respectively the function groebner :- basis ( plex order ) , groebner :- solve , groebner :- basis ( tdeg order ) in current beta version of maple .",
    "denote by ws the function wsolve of the package wsolve  @xcite , which decomposes a variety as a union of quasi - components of wu characteristic sets .",
    "the tests were launched on a machine with intel core 2 quad cpu ( 2.40ghz ) and 3.0 gb total memory .",
    "the time - out is set as @xmath425 seconds .",
    "the memory usage is limited to @xmath426 of total memory . in both table 1 and 2",
    ", the symbol `` - '' means either time or memory exceeds the limit we set .",
    "the examples are mainly in positive dimension since other triangular decomposition algorithms are specialized to dimension zero  @xcite .",
    "all examples are in characteristic zero .    in table 1",
    ", we provide characteristics of the input systems and the sizes of the output obtained by different solvers . for each polynomial system",
    "@xmath427 $ ] , the number of variables appearing in @xmath48 , the number of polynomials in @xmath48 , the maximum total degree of a polynomial in @xmath48 , the dimension of the algebraic variety @xmath54 are denoted respectively by @xmath428 , @xmath429 , @xmath430 , @xmath431 . for each solver , the size of its output is measured by the total number of characters in the output . to be precise ,",
    "let `` dec '' and `` gb '' be respectively the output of the triangularize and groebner functions .",
    "the maple command we use are length(convert(map(equations , dec , r ) , string ) ) and length(convert(gb , string ) ) . from table 1 , it is clear that triangularize produces much smaller output than commands based on grbner basis computations .",
    "tk , tl , gs , ws ( and , to some extent , gl ) can all be seen as polynomial system solvers in the sense of that they provide equidimensional decompositions where components are represented by triangular sets .",
    "moreover , they are implemented in maple ( with the support of efficient c code in the case of gs and gl ) .",
    "the specification of tk are close to those of gs while tl is related to ws , though the triangular sets returned by ws are not necessarily regular chains .    in table 2",
    ", we provide the timings of different versions of triangularize and other solvers . from this table , it is clear that the implementations of triangularize , based on the algorithms presented in this paper ( that is tk14 , tl14 , tk , tl ) outperform the previous versions ( tk13 , tl13 ) , based on  @xcite , by several orders of magnitude .",
    "we observe also that tk outperforms gs and gl while tl outperforms ws .",
    "* acknowledgments . *",
    "the authors would like to thank the support of maplesoft , mitacs and nserc of canada .",
    "10    p.  aubry , d.  lazard , and m.  moreno maza . on the theories of triangular sets . , 28(1 - 2):105124 , 1999 .",
    "f.  boulier , d.  lazard , f.  ollivier , and m.  petitot . .",
    "in _ proceedings of issac95 _ , pages 158166 , 1995 .",
    "c.  chen , o.  golubitsky , f.  lemaire , m.  moreno maza , and w.  pan . ,",
    "volume 4770 of _ lncs _ , pages 73101 .",
    "springer verlag , 2007 .",
    "c.  chen , m.  moreno maza , b.  xia , and l.  yang .",
    "computing cylindrical algebraic decomposition via triangular decomposition . in _ issac09 _ , pages 95102 , 2009 .",
    "chou and x.s .",
    "gao . solving parametric algebraic systems . in _ proc .",
    "issac92 _ ,",
    "pages 335341 , 1992 .",
    "x.  dahan , m.  moreno maza ,  .",
    "schost , w.  wu , and y.  xie .",
    "lifting techniques for triangular decompositions . in _ issac05 _ , pages 108115 .",
    "acm press , 2005 .",
    "j.  della dora , c.  dicrescenzo , and d.  duval . about a new method for computing in algebraic number fields . in _ proc .",
    "eurocal 85 vol . 2 _ , pages 289290 .",
    "springer - verlag , 1985 .",
    "l.  ducos .",
    "optimizations of the subresultant algorithm . , 145:149163 , 2000 .",
    "gao , j.  van der hoeven , y.  luo , and c.  yuan .",
    "characteristic set method for differential - difference polynomial systems .",
    ", 44:11371163 , 2009 .",
    "factorization free decomposition algorithms in differential algebra .",
    ", 29(4 - 5):641662 , 2000 .",
    "m.  kalkbrener . a generalized euclidean algorithm for computing triangular representations of algebraic varieties .",
    ", 15:143167 , 1993 .",
    "d.  lazard . a new method for solving algebraic systems of positive dimension .",
    ", 33:147160 , 1991 .",
    "g.  lecerf . computing the equidimensional decomposition of an algebraic closed set by means of lifting fibers .",
    ", 19(4):564596 , 2003 .",
    "x.  li , m.  moreno maza , and w.  pan .",
    "computations modulo regular chains . in _ proc .",
    "issac09 _ , pages 239246 , new york , ny , usa , 2009 .",
    "acm press .",
    "b.  mishra . .",
    "springer - verlag , new york , 1993 .",
    "m.  moreno maza . on triangular decompositions of algebraic varieties .",
    "technical report tr 4/99 , nag ltd , oxford , uk , 1999 .",
    "presented at the mega-2000 conference , bath , england .",
    "t.  shimoyama and k.  yokoyama .",
    "localization and primary decomposition of polynomial ideals .",
    ", 22(3):247277 , 1996 .",
    "sommese , j.  verschelde , and c.  w. wampler .",
    "solving polynomial systems equation by equation .",
    "in _ algorithms in algebraic geometry _ , pages 133152 .",
    "springer - verlag , 2008 .",
    "d.  k. wang .",
    "the wsolve package . .",
    "d.  m. wang . .",
    "springer , new york , 2000 .",
    "w.  t. wu . a zero structure theorem for polynomial equations solving .",
    ", 1:212 , 1987 .",
    "l.  yang , x.r .",
    "hou , and b.  xia . a complete algorithm for automated discovering of a class of inequality - type theorems .",
    ", 44(6):3349 , 2001 .",
    "l.  yang and j.  zhang . searching dependency between algebraic equations : an algorithm applied to automated reasoning .",
    "technical report ic/89/263 , international atomic energy agency , miramare , trieste , italy , 1991 .",
    "let @xmath218 be a commutative ring with identity and let @xmath432 be two positive integers .",
    "let @xmath433 be an @xmath434 matrix with coefficients in @xmath218 .",
    "let @xmath435 be the square submatrix of @xmath433 consisting of the first @xmath436 columns of @xmath433 and the @xmath437 column of @xmath433 , for @xmath438 .",
    "let @xmath439 be the determinant of @xmath435 .",
    "we denote by @xmath440 the element of @xmath441 $ ] , called the determinant polynomial of @xmath433 , given by @xmath442 let @xmath443 be a set of polynomials of @xmath441 $ ] .",
    "let @xmath444 .",
    "the matrix @xmath433 of @xmath445 is defined by @xmath446 .",
    "let @xmath447 , @xmath448 be two polynomials of @xmath441 $ ] with positive degrees @xmath4 and @xmath2 .",
    "let @xmath193 .",
    "for any @xmath449 , let @xmath433 be the matrix of the polynomials @xmath450 .",
    "we define the @xmath437 subresultant of @xmath451 and @xmath137 , denoted by @xmath452 , as @xmath453 note that @xmath454 is a polynomial in @xmath441 $ ] with degree at most @xmath285 .",
    "let @xmath455 and call it the principle subresultant coefficient of @xmath201 .",
    "let @xmath227 be a ufd .",
    "let @xmath226 be a homomorphism from @xmath218 to @xmath227 , which induces naturally also a homomorphism from @xmath441 $ ] to @xmath456 $ ] .",
    "let @xmath457 and @xmath458 .",
    "[ lemma : sk ] for any integer @xmath459 , if @xmath460 , then @xmath461 and @xmath462 does not vanish at the same time .",
    "moreover , we have both @xmath463 and @xmath464 .",
    "observe that @xmath465 therefore there exists @xmath466 such that @xmath467 and @xmath468 .",
    "the conclusion follows .",
    "[ lemma : smn ] assume that @xmath469 .",
    "then , if @xmath470 , we have    * if @xmath471 and @xmath472 , then @xmath473 * if @xmath474 and @xmath475 , then @xmath476    symmetrically , if @xmath477 , we have    * if @xmath475 and @xmath478 , then @xmath476 * if @xmath479 and @xmath471 , then @xmath473    we prove @xmath273 and @xmath274 , whose correctness implies @xmath276 and @xmath368 by symmetry .",
    "let @xmath480 , then we have @xmath481 therefore @xmath482 so from @xmath483 and @xmath484 , we conclude that @xmath485 . on the other hand , if @xmath474 and @xmath475 , then @xmath486 .",
    "now let consider @xmath487 .",
    "we have @xmath488 from @xmath485 , we conclude that @xmath489 . from @xmath486 , we conclude that @xmath490 .",
    "so on so forth , finally , if @xmath471 and @xmath483 , we deduce that @xmath491 , for all @xmath492 , which implies that @xmath473 ; if @xmath493 and @xmath475 , we deduce that @xmath494 , which implies that @xmath476 .",
    "[ lemma : dpol ] let @xmath285 be an integer such that @xmath495 .",
    "assume that @xmath471 .",
    "if @xmath496 , then we have @xmath497    if @xmath496 , then @xmath498 .",
    "therefore we have @xmath499 done .",
    "[ theorem : gcd ] we have the following relations between the subresultants and the gcd of @xmath500 and @xmath501 :    1 .",
    "let @xmath502 , @xmath503 , be an integer such that @xmath504 and for any @xmath285 , @xmath505 , @xmath506",
    ". then @xmath507 .",
    "2 .   assume that @xmath506 for all @xmath449 .",
    "we have the following cases 1 .   if @xmath470 and @xmath508 , then @xmath509 ; symmetrically , if @xmath477 and @xmath510 , then we have @xmath511 2 .   if @xmath470 and @xmath474 but @xmath510 , then we have @xmath511 ; symmetrically , if @xmath203 and @xmath479 but @xmath508 , then we have @xmath509 3 .",
    "if @xmath512 , then @xmath513    let us first prove @xmath273 .",
    "w.l.o.g , we assume @xmath471 . from lemma  [ lemma :",
    "sk ] , we know that @xmath514 . therefore for @xmath515 , we have @xmath496 . by lemma  [ lemma : dpol ] , @xmath516 if @xmath517 , we have @xmath518 .",
    "if @xmath519 , since @xmath520 , we have @xmath521 so for all @xmath522 , we have @xmath523 . if @xmath524 , we have @xmath525 .",
    "so @xmath526 . if @xmath527 , we have @xmath528",
    ". therefore @xmath529 .",
    "next we prove @xmath530 . by symmetry , we prove it when @xmath470 . if @xmath483 , it follows directy from lemma  [ lemma : smn ] .",
    "otherwise , we have @xmath531 . by lemma  [ lemma : dpol ] , for all @xmath520 we have @xmath532 that is @xmath518 .",
    "since @xmath506 , we deduce that @xmath533 .",
    "finally @xmath534 follows directly from lemma  [ lemma : smn ] and @xmath535 is obviouly true .",
    "throughout this section , we assume that the coefficient field @xmath24 is of characteristic zero .",
    "we propose two strategies for computing a squarefree triangular decomposition .",
    "the first one is a post - processing which applies algorithm  [ algo : squarefree ] to every regular chain returned by algorithm  [ algo : triangularize ] .",
    "the second consists of ensuring that , each output or intermediate regular chain generared during the execution of algorithm  [ algo : triangularize ] is squarefree .    to implement the second strategy ,",
    "we add an _ squarefree option _ to algorithm  [ algo : triangularize ] and each of its subalgorithms . if the option is set to _ true _ , this option requires that each output regular chain is squarefree .",
    "this is achieved by using algorithm  [ algo : squarefree - poly ] whenever we need to construct new regular chains from a previous regular chain @xmath15 and a polynomial @xmath19 such that @xmath536 is known to be a regular chain ."
  ],
  "abstract_text": [
    "<S> we propose new algorithms for computing triangular decompositions of polynomial systems incrementally . </S>",
    "<S> with respect to previous works , our improvements are based on a _ weakened _ notion of a polynomial gcd modulo a regular chain , which permits to greatly simplify and optimize the sub - algorithms . </S>",
    "<S> extracting common work from similar expensive computations is also a key feature of our algorithms . in our experimental results </S>",
    "<S> the implementation of our new algorithms , realized with the regularchains library in maple , outperforms solvers with similar specifications by several orders of magnitude on sufficiently difficult problems . </S>"
  ]
}
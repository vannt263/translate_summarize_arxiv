{
  "article_text": [
    "given a graph with edge weights , the graph partitioning problem is to partition the vertices into two sets satisfying specified size constraints , while minimizing the sum of the weights of the edges that connect the vertices in the two sets .",
    "graph partitioning problems arise in many areas including vlsi design , data mining , parallel computing , and sparse matrix factorizations @xcite .",
    "the graph partitioning problem is np - hard @xcite .",
    "there are two general classes of methods for the graph partitioning problem , exact methods which compute the optimal partition , and heuristic methods which try to quickly compute an approximate solution .",
    "heuristic methods include spectral methods @xcite , geometric methods @xcite , multilevel schemes @xcite , optimization - based methods @xcite , and methods that employ randomization techniques such as genetic algorithms @xcite .",
    "software which implements heuristic methods includes metis ( @xcite ) , chaco @xcite , party @xcite , patoh @xcite , scotch @xcite , jostle @xcite , zoltan @xcite , and hund @xcite .",
    "this paper develops an exact algorithm for the graph partitioning problem . in earlier work , brunetta , conforti , and",
    "rinaldi @xcite propose a branch - and - cut scheme based on a linear programming relaxation and subsequent cuts based on separation techniques .",
    "a column generation approach is developed by johnson , mehrotra , and nemhauser @xcite , while mitchell @xcite develops a polyhedral approach .",
    "karisch , rendl , and clausen @xcite develop a branch - and - bound method utilizing a semidefinite programming relaxation to obtain a lower bound .",
    "sensen @xcite develops a branch - and - bound method based on a lower bound obtained by solving a multicommodity flow problem . in this paper",
    ", we develop a branch - and - bound algorithm based on a quadratic programming ( qp ) formulation of the graph partitioning problem .",
    "the objective function of the qp is expressed as the sum of a convex and a concave function .",
    "we consider two different techniques for making this decomposition , one based on eigenvalues and the other based on semidefinite programming . in each case , we give an affine underestimate for the concave function , which leads to a tractable lower bound in the branch and bound algorithm .    the paper is organized as follows . in section [ continuousqp ]",
    "we review the continuous quadratic programming formulation of the graph partitioning problem developed in @xcite and we explain how to associate a solution of the continuous problem with the solution to the discrete problem . in section [ lowerbound ]",
    "we discuss approaches for decomposing the objective function for the qp into the sum of convex and a concave functions , and in each case , we show how to generate an affine lower bound for the concave part .",
    "section [ bb ] gives the branch - and - bound algorithm , while section [ ns ] provides necessary and sufficient conditions for a local minimizer .",
    "section [ numerics ] compares the performance of the new branch - and - bound algorithm to earlier results given in @xcite and @xcite",
    ".    * notation .",
    "* throughout the paper , @xmath0 denotes the euclidian norm .",
    "@xmath1 is the vector whose entries are all 1 .",
    "the dimension will be clear from context . if @xmath2 , @xmath3 means that @xmath4 is positive semidefinite .",
    "we let @xmath5 denote the @xmath6-th column of the identity matrix ; again , the dimension will be clear from context . if @xmath7 is a set , then @xmath8 is the number of elements in @xmath7 .",
    "the gradient @xmath9 is a row vector .",
    "let @xmath10 be a graph with @xmath11 vertices @xmath12 and let @xmath13 be a weight associated with the edge @xmath14 .",
    "when there is no edge between @xmath6 and @xmath15 , we set @xmath16 . for each @xmath6 and @xmath15",
    ", we assume that @xmath17 and @xmath18 ; in other words , we consider an undirected graph without self loops ( a simple , undirected graph ) .",
    "the sign of the weights is not restricted , and in fact , @xmath13 could be negative , as it would be in the max - cut problem . given integers @xmath19 and @xmath20 such that @xmath21 , we wish to partition the vertices into two disjoint sets , with between @xmath19 and @xmath20 vertices in one set , while minimizing the sum of the weights associated with edges connecting vertices in different sets .",
    "the edges connecting the two sets in the partition are referred to as the cut edges , and the optimal partition minimizes the sum of the weights of the cut edges .",
    "hence , the graph partitioning problem is also called the min - cut problem .    in @xcite",
    "we show that for a suitable choice of the diagonal matrix @xmath22 , the graph partitioning problem is equivalent to the following continuous quadratic programming problem : @xmath23 where @xmath4 is the matrix with elements @xmath13 .",
    "suppose @xmath24 is binary and let us define the sets @xmath25 it can be checked that @xmath26 is the sum of the weights of the cut edges associated with the partition ( [ part ] ) .",
    "hence , if we add the restriction that @xmath24 is binary , then ( [ q ] ) is exactly equivalent to finding the partition which minimizes the weight of the cut edges .",
    "note , though , that there are no binary constraints in ( [ q ] ) .",
    "the equivalence between ( [ q ] ) and the graph partitioning problem is as follows ( see ( * ? ? ?",
    "* thm . 2.1 ) ) :    [ q = gp ] if the diagonal matrix @xmath22 is chosen so that @xmath27 for each @xmath6 and @xmath15 , then @xmath28 has a binary solution @xmath24 and the partition given by @xmath29 is a min - cut .    the generalization of this result to multiset partitioning is given in @xcite .",
    "the condition ( [ d - condition ] ) is satisfied , for example , by the choice @xmath30 for each @xmath15 .",
    "the proof of theorem [ q = gp ] was based on showing that any solution to ( [ q ] ) could be transformed to a binary solution without changing the objective function value . with a modification of this idea",
    ", any feasible point can be transformed to a binary feasible point without increasing the objective function value .",
    "we now give a constructive proof of this result , which is used when we solve ( [ q ] ) .",
    "[ move_to_binary ] if @xmath24 is feasible in @xmath28 and the diagonal matrix @xmath22 satisfies @xmath31 , then there exists a binary @xmath32 with @xmath33 and @xmath34 whenever @xmath35 is binary .",
    "we first show how to find @xmath36 with the property that @xmath36 is feasible in ( [ q ] ) , @xmath37 , @xmath38 is integer , and the only components of @xmath36 and @xmath24 which differ are the fractional components of @xmath24 . if @xmath39 or @xmath40 , then we are done since @xmath19 and @xmath20 are integers ; hence , we assume that @xmath41 .",
    "if all components of @xmath24 are binary , then we are done , so suppose that there exists a nonbinary component @xmath35 .",
    "since @xmath17 , a taylor expansion of @xmath42 gives @xmath43 where @xmath5 is the @xmath6-th column of the identity matrix .",
    "the quadratic term in the expansion is nonpositive since @xmath44 .",
    "if the first derivative term is negative , then increase @xmath45 above 0 until either @xmath46 becomes 1 or @xmath47 is an integer . since the first derivative term is negative and @xmath48 , @xmath49 .",
    "if @xmath47 becomes an integer , then we are done .",
    "if @xmath46 becomes 1 , then we reach a point @xmath50 with one more binary component and with an objective function value no larger than @xmath26 .",
    "if the first derivative term is nonnegative , then decrease @xmath45 below 0 until either @xmath46 becomes 0 or @xmath47 is an integer .",
    "since the first derivative term is nonnegative and @xmath51 , @xmath52 . if @xmath47 becomes an integer , then we are done .",
    "if @xmath46 becomes 0 , then we reach a point @xmath50 with one more binary component and with a smaller value for the cost function . in this latter case ,",
    "we choose another nonbinary component of @xmath50 and repeat the process .",
    "hence , there is no loss of generality in assuming that @xmath53 is an integer .",
    "suppose that @xmath24 is not binary .",
    "since @xmath53 is an integer , @xmath24 must have at least two nonbinary components , say @xmath35 and @xmath54 .",
    "again , expanding @xmath42 is a taylor series gives @xmath55 by ( [ d - condition ] ) , the quadratic term is nonpositive for any choice of @xmath45",
    ". if the first derivative term is negative , then we increase @xmath45 above 0 until either @xmath46 reaches 1 or @xmath56 reach 0 . since the first derivative term is negative and @xmath48 , we have @xmath57 .",
    "if the first derivative term is nonnegative , then we decrease @xmath45 below 0 until either @xmath46 reaches 0 or @xmath56 reach 1 .",
    "since the first derivative term is nonnegative and @xmath51 , it follows that @xmath58 . in either case , the value of the cost function does not increase , and we reach a feasible point @xmath50 with @xmath59 integer and with at least one more binary component .",
    "if @xmath50 is not binary , then @xmath50 must have at least two nonbinary components ; hence , the adjustment process can be continued until all the components of @xmath24 are binary .",
    "these adjustments to @xmath24 do not increase the value of the cost function and we only alter the fractional components of @xmath24 .",
    "this completes the proof .",
    "we compute an exact solution to the continuous formulation ( [ q ] ) of graph partitioning problem using a branch and bound algorithm .",
    "the bounding process requires a lower bound for the objective function when restricted to the intersection of a box and two half spaces .",
    "this lower bound is obtained by writing the objective function as the sum of a convex and a concave function and by replacing the concave part by the best affine underestimate .",
    "two different strategies are given for decomposing the objective function .",
    "let us decompose the objective function @xmath60 in the following way : @xmath61 where @xmath62 is the maximum of 0 and the largest eigenvalue of @xmath63 .",
    "this represents a dc ( difference convex ) decomposition ( see @xcite ) since @xmath64 and @xmath65 are both convex .",
    "the concave term @xmath66 is underestimated by an affine function @xmath67 to obtain a convex underestimate @xmath68 of @xmath42 given by @xmath69 we now consider the problem of finding the best affine underestimate @xmath67 for the concave function @xmath70 over a given compact , convex set denoted @xmath71 .",
    "the set of affine underestimators for @xmath70 is given by @xmath72 the best affine underestimate is a solution of the problem @xmath73 the following result generalizes theorem 3.1 in @xcite where we determine the best affine underestimate for @xmath70 over an ellipsoid .",
    "[ undertheorem1 ] let @xmath74 be a compact , convex set and let @xmath75 be the center and @xmath76 be the radius of the smallest sphere containing @xmath71 .",
    "this smallest sphere is unique and a solution of @xmath77 is @xmath78 furthermore , @xmath79    to begin , we will show that the minimization in ( [ linearest ] ) can be restricted to a compact set . clearly , when carrying out the minimization in ( [ linearest ] ) , we should restrict our attention to those @xmath67 which touch the function @xmath80 at some point in @xmath71 .",
    "let @xmath81 denote the point of contact . since @xmath82 and @xmath83 , a lower bound for the error @xmath84 over @xmath85 is @xmath86 over @xmath71",
    ", then we have @xmath87 an upper bound for the minimum in ( [ linearest ] ) is obtained by the linear function @xmath88 which is constant on @xmath71 , with value equal to the minimum of @xmath89 over @xmath85 .",
    "if @xmath90 is a point where @xmath91 attains its minimum over @xmath71 , then we have @xmath92 let us restrict our attention to the linear functions @xmath67 which achieve an objective function value in ( [ linearest ] ) which is at least as small as that of @xmath88 . for these @xmath67 and for @xmath85",
    ", we have @xmath93 combining ( [ change ] ) and ( [ ell0 ] ) gives @xmath94 ) , we should restrict our attention to linear functions which touch @xmath91 at some point @xmath81 and with the change in @xmath67 across @xmath71 satisfying the bound ( [ 2 m ] ) for all @xmath95 .",
    "this tells us that the minimization in ( [ linearest ] ) can be restricted to a compact set , and that a minimizer must exist .",
    "suppose that @xmath67 attains the minimum in ( [ linearest ] ) .",
    "let @xmath36 be a point in @xmath71 where @xmath84 achieves its maximum .",
    "a taylor expansion around @xmath96 gives @xmath97 since @xmath98 , @xmath99 for all @xmath85 .",
    "it follows that @xmath100 since @xmath71 is convex , the first - order optimality conditions for @xmath36 give @xmath101 for all @xmath85 .",
    "it follows from ( [ flx ] ) that @xmath102 for all @xmath85 .",
    "there exists @xmath85 such that @xmath103 or else @xmath36 would be the center of a smaller sphere containing @xmath71 .",
    "hence , ( [ diameter ] ) implies that @xmath104 it follows that @xmath105 we now observe that for the specific linear function @xmath106 given in the statement of the theorem , ( [ l_lower ] ) becomes an equality , which implies the optimality of @xmath106 in ( [ linearest ] ) .",
    "expand @xmath91 in a taylor series around @xmath107 to obtain @xmath108 subtract @xmath109 from both sides to obtain @xmath110 if @xmath111 , then the maximum in ( [ h - l ] ) over @xmath85 is attained by @xmath107 for which @xmath112 consequently , ( [ l_lower ] ) becomes an equality for @xmath113 , which implies the optimality of @xmath106 in ( [ linearest ] ) .",
    "we can show that @xmath111 as follows : suppose @xmath114 .",
    "since @xmath71 is compact and convex , there exists a hyperplane @xmath115 strictly separating @xmath75 and @xmath71  see figure [ c_in_c ]    ]    if @xmath116 is the projection of @xmath75 onto @xmath115 , then @xmath117 let @xmath118 be the point which is farthest from @xmath116 and let @xmath85 be the point farthest from @xmath75 . hence , @xmath119 . by ( [ circle ] )",
    ", we have @xmath120 ; it follows that the sphere with center @xmath116 and radius @xmath121 contains @xmath71 and has radius smaller than @xmath76 .",
    "this contradicts the assumption that @xmath76 was the sphere of smallest radius containing @xmath71 .",
    "the uniqueness of the smallest sphere containing @xmath71 is as follows : suppose that there exist two different smallest spheres @xmath122 and @xmath123 containing @xmath71 .",
    "let @xmath124 be the smallest sphere containing @xmath125 .",
    "since the diameter of the intersection is strictly less than the diameter of @xmath122 or @xmath123 , we contradict the assumption that @xmath122 and @xmath123 were spheres of smallest radius containing @xmath71 .",
    "[ rem0 ] although the smallest sphere containing @xmath71 in theorem [ undertheorem1 ] is unique , the best linear underestimator of @xmath126 is not unique .",
    "for example , suppose @xmath127 and @xmath128 and @xmath71 is the line segment @xmath129 \\ } .\\ ] ] along this line segment , @xmath91 is a concave quadratic in one variable . the best affine underestimate along the line segment corresponds to the line connecting the ends of the quadratic restricted to the line segment .",
    "hence , in @xmath130 , any hyperplane which contains the points @xmath131 and @xmath132 leads to a best affine underestimate .",
    "[ rem1 ] let @xmath71 be the box @xmath133 the diameter of @xmath134 , the distance between the points in @xmath134 with greatest separation , is @xmath135 .",
    "hence , the smallest sphere containing @xmath134 has radius at least @xmath136 . if @xmath137 , then @xmath138 for every @xmath6 . consequently , @xmath139 and the sphere with center @xmath140 and radius @xmath141 contains @xmath134 .",
    "it follows that this is the smallest sphere containing @xmath134 since any other sphere must have radius at least @xmath136 .",
    "[ rem2 ] finding the smallest sphere containing @xmath71 may not be easy .",
    "however , the center and radius of any sphere containing @xmath71 yields an affine underestimate for @xmath142 over @xmath71 .",
    "that is , if @xmath7 is a sphere with @xmath143 , then the best affine underestimate for @xmath70 over @xmath7 is also an affine underestimate for @xmath70 over @xmath71 .",
    "a different dc decomposition of @xmath60 is the following : @xmath144 where @xmath145 is a diagonal matrix with @xmath6-th diagonal element @xmath146 .",
    "we would like to make the second term @xmath147 as small as possible while keeping the first term @xmath148 convex .",
    "this suggests the following semidefinite programming problem @xmath149 where @xmath150 is the diagonal of @xmath145 .",
    "if the diagonal of @xmath63 is nonnegative , then the inequality @xmath151 can be dropped since it is implied by the inequality @xmath152 .",
    "as before , we seek the best linear underestimate of the concave function @xmath153 over a compact , convex set @xmath71 .",
    "if any of the @xmath154 vanish , then reorder the components of @xmath24 so that @xmath155 where @xmath36 corresponds to the components of @xmath154 that vanish .",
    "let @xmath156 be the principal submatrix of @xmath145 corresponding to the positive diagonal elements , and define the set @xmath157 the problem of finding the best linear underestimate for @xmath153 over @xmath71 is essentially equivalent to finding the best linear underestimate for @xmath158 over the @xmath159 .",
    "hence , there is no loss of generality in assuming that the diagonal of @xmath145 is strictly positive . as a consequence of theorem [ undertheorem1 ]",
    ", we have    [ lambda_under ] suppose the diagonal of @xmath145 is strictly positive and let @xmath75 be the center and @xmath76 the radius of the unique smallest sphere containing the set @xmath160 the best linear underestimate of @xmath161 over the compact , convex set @xmath71 is @xmath162 furthermore , @xmath163 where @xmath164    with the change of variables @xmath165 , an affine function in @xmath24 is transformed to an affine function in @xmath32 and conversely , an affine function in @xmath32 is transformed to an affine function in @xmath24 .",
    "hence , the problem of finding the best affine underestimate for @xmath153 over @xmath71 is equivalent to the problem of finding the best affine underestimate for @xmath166 over @xmath167 .",
    "apply theorem [ undertheorem1 ] to the transformed problem in @xmath32 , and then transform back to @xmath24 .",
    "[ rem3 ] if @xmath71 is the box @xmath168 , then @xmath167 is also a box to which we can apply the observation in remark [ rem1 ] .",
    "in particular , we have @xmath169 hence , @xmath170 and we have @xmath171 .",
    "[ rem4 ] let us consider the set @xmath172 where @xmath173 .",
    "determining the smallest sphere containing @xmath167 may not be easy .",
    "however , as indicated in remark [ rem2 ] , any sphere containing @xmath174 yields an underestimate for @xmath147 .",
    "observe that @xmath175 as observed in remark [ rem3 ] , the center @xmath75 and radius @xmath76 of the smallest sphere @xmath7 containing the set @xmath176 are given in ( [ box_center ] ) .",
    "the intersection of this sphere with the hyperplane @xmath177 is a lower dimensional sphere @xmath178 whose center @xmath116 is the projection of @xmath75 onto the hyperplane .",
    "@xmath178 contains @xmath71 since @xmath71 is contained in both the original sphere @xmath7 and the hyperplane . with a little algebra ,",
    "we obtain @xmath179 by the pythagorean theorem , the radius @xmath180 of the lower dimensional sphere @xmath178 is @xmath181 hence , by corollary [ lambda_under ] , an underestimate of @xmath161 is given by @xmath182 since @xmath183 when @xmath85 , it can be shown , after some algebra , that @xmath184 ( all the constants in the affine function cancel ) . hence , the affine underestimate @xmath106 computed in remark [ rem3 ] for the unit box and the affine underestimate @xmath67 computed in this remark for the unit box intersect the hyperplane @xmath183 are the same .",
    "since the continuous quadratic program ( [ q ] ) has a binary solution , the branching process in the branch and bound algorithm is based on setting variables to 0 or 1 and reducing the problem dimension ( we do not employ bisections of the feasible region as in @xcite ) .",
    "we begin by constructing a linear ordering of the vertices of the graph according to an estimate for the difficulty in placing the vertex in the partition . for the numerical experiments ,",
    "the order was based on the total weight of the edges connecting a vertex to the adjacent vertices .",
    "if two vertices @xmath185 and @xmath186 have weights @xmath187 and @xmath188 respectively , then @xmath185 precedes @xmath186 if @xmath189 .",
    "let @xmath185 , @xmath186 , @xmath190 , @xmath191 denote the ordered vertices .",
    "level @xmath6 in the branch and bound tree corresponds to setting the @xmath192-th component of @xmath24 to the values 0 or 1 .",
    "each leaf at level @xmath6 represents a specific selection of 0 and 1 values for the @xmath185 through @xmath192-th components of @xmath24 .",
    "hence , a leaf at level @xmath6 has a label of the form @xmath193 corresponding to this leaf , the value of the @xmath194-th component of @xmath24 is @xmath195 for @xmath196",
    ".    let @xmath197 denote the branch and bound tree at iteration @xmath198 and let @xmath199 denote the leaves in the tree .",
    "suppose @xmath200 lies at level @xmath6 in @xmath197 as in ( [ leaf ] ) .",
    "let @xmath201 denote the vector gotten by removing components @xmath194 , @xmath196 , from @xmath24 .",
    "the @xmath194-th component of @xmath24 has the pre - assigned binary value @xmath195 for @xmath196 .",
    "after taking into account these assigned binary values , the quadratic problem reduces to a lower dimensional problem in the variable @xmath201 of the form @xmath202 where @xmath203 using the techniques developed in section [ lowerbound ] , we replace @xmath204 by a convex lower bound denoted @xmath205 and we consider the convex problem @xmath206 let @xmath207 denote the optimal objective function value for ( [ ltau ] ) . at iteration @xmath198 , the leaf @xmath200 for which @xmath207 is smallest is used to branch to the next level .",
    "if @xmath208 has the form ( [ leaf ] ) , then the branching processes generates the two new leaves @xmath209 an illustration involving a 3-level branch and bound tree appears in figure  [ bbtree ] .        during the branch and bound process",
    ", we must also compute an upper bound for the minimal objective function value in ( [ q ] ) .",
    "this upper bound is obtained using a heuristic technique based on the gradient projection algorithm and sphere approximations to the feasible set . these heuristics for generating an upper bound will be described in a separate paper .",
    "as pointed out earlier , many heuristic techniques are available ( for example , metis ( @xcite ) , chaco @xcite , and party @xcite ) .",
    "an advantage of our quadratic programming based heuristic is that we start at the solution to the lower bounding problem , a solution which typically has fractional entries and which is a feasible starting point for ( [ q ] ) .",
    "consequently , the upper bound is no larger than the objective function value associated with the optimal point in the lower - bound problem .    *",
    "* convex quadratic branch and bound ( cqb ) * * initialize @xmath210 and @xmath211 .",
    "evaluate both a lower bound for the solution to ( [ q ] ) and an upper denoted @xmath212 .",
    "* choose @xmath213 such that @xmath214 .",
    "if @xmath215 , then stop , an optimal solution of ( [ q ] ) has been found . * assuming that @xmath216 has the form ( [ leaf ] ) , let @xmath217 be the tree obtained by branching at @xmath216 and adding two new leaves as in ( [ bisect ] ) ; also see figure  [ bbtree ] .",
    "evaluate lower bounds for the quadratic programming problems ( [ ltau ] ) associated with the two new leaves , and evaluate an improved upper bound , denoted @xmath218 , by using solutions to the lower bound problems as starting guesses in a descent method applied to ( [ q ] ) . *",
    "replace @xmath198 by @xmath219 and return to step 2 .",
    "convergence is assured since there are a finite number of binary values for the components of @xmath24 . in the worst case , the branch and bound algorithm will build all @xmath220 nodes of the tree .",
    "we use the gradient projection algorithm to obtain an upper bound for a solution to ( [ q ] ) .",
    "since the gradient projection algorithm can terminate at a stationary point , we need to be able to distinguish between a stationary point and a local minimizer , and at a stationary point which is not a local minimizer , we need a fast way to compute a descent direction .",
    "we begin by stating the first - order optimality conditions . given a scalar @xmath221 ,",
    "define the vector @xmath222 and the set - valued maps @xmath223 and @xmath224 @xmath225 for any vector @xmath226 , @xmath227 is a vector of sets whose @xmath6-component is the set @xmath228 .",
    "the first - order optimality ( karush - kuhn - tucker ) conditions associated with a local minimizer @xmath24 of ( [ q ] ) can be written in the following way : for some scalar @xmath221 , we have @xmath229 the first and third conditions in ( [ kt ] ) are the constraints in ( [ q ] ) , while the remaining two conditions correspond to complementary slackness and stationarity of the lagrangian .",
    "in @xcite we give a necessary and sufficient optimality conditions for ( [ q ] ) , which we now review . given any @xmath24 that is feasible in ( [ q ] ) , let us define the sets @xmath230 we also introduce subsets @xmath231 and @xmath232 defined by @xmath233    [ opttheorem ] suppose that @xmath234 and @xmath22 is chosen so that @xmath235 for all @xmath6 and @xmath15 .",
    "a necessary and sufficient condition for @xmath24 to be a local minimizer in @xmath28 is that the following all hold :    * for some @xmath221 , the first - order conditions @xmath236 are satisfied at @xmath24 .",
    "* for each @xmath6 and @xmath237 , we have @xmath238 .",
    "* consider the three sets @xmath239 , @xmath240 , and @xmath241 .",
    "for each @xmath6 and @xmath15 in two different sets , we have @xmath238 .    in treating the situation @xmath242 , an additional condition concerning the dual multipliers @xmath221 and @xmath226 in the first - order optimality conditions ( [ kt ] ) enters into the statement of the result :    * _ if @xmath243 for some @xmath6 , then @xmath244 in any of the following three cases : _ * * @xmath41 . * * @xmath245 and @xmath39 . * * @xmath246 and @xmath40 .",
    "[ optcorollary ] suppose that @xmath242 and @xmath22 is chosen so that @xmath247 for all @xmath6 and @xmath15 .",
    "a necessary and sufficient condition for @xmath24 to be a local minimizer in @xmath28 is that ( p1)(p4 ) all hold .",
    "based on theorem [ opttheorem ] and corollary [ optcorollary ] , we can easily check whether a given stationary point is a local minimizer .",
    "this is in contrast to the general quadratic programming problem for which deciding whether a given point is a local minimizer is np - hard ( see @xcite ) .",
    "we now observe that when @xmath24 is a stationary point and when any of the conditions ( p2)(p4 ) are violated , then a descent direction is readily available .",
    "[ descent_direction ] suppose that @xmath24 is a stationary point for @xmath28 and @xmath248 holds .",
    "if either ( p2 ) or ( p3 ) is violated , then @xmath249 , with an appropriate choice of sign , is a descent direction . if @xmath242 , @xmath250 , and @xmath251 , then @xmath252 , with an appropriate choice of sign , is a descent direction in any of the cases ( a)(c ) of ( p4 ) .",
    "the lagrangian @xmath253 associated with ( [ q ] ) has the form @xmath254 where @xmath255 if @xmath256 , @xmath257 if @xmath258 , and @xmath226 stands for @xmath259 .",
    "the sets @xmath260 and @xmath261 denote @xmath262 and @xmath263 respectively . by the first - order optimality conditions ( [ kt ] ) , we have @xmath264 and @xmath265 . expanding the lagrangian around @xmath24",
    "gives @xmath266 we substitute for @xmath253 using ( [ lagrangian ] ) to obtain @xmath267 if ( p2 ) is violated , then there are indices @xmath6 and @xmath268 such that @xmath269 .",
    "we insert @xmath270 in ( [ t ] ) to obtain @xmath271 since the coefficient of @xmath272 is negative , @xmath249 is a descent direction for the objective function . since @xmath273 and @xmath274 ,",
    "feasibility is preserved for @xmath45 sufficiently small . in a similar manner ,",
    "if ( p3 ) is violated by indices @xmath6 and @xmath15 , then ( [ h53 ] ) again holds and @xmath275 is again a descent direction where the sign is chosen appropriately to preserve feasibility .",
    "for example , if @xmath276 and @xmath277 , then @xmath278 and @xmath279 .",
    "consequently , @xmath280 is feasible if @xmath48 is sufficiently small .",
    "finally , suppose that @xmath242 , @xmath250 , and @xmath251 .",
    "substituting @xmath281 in ( [ t ] ) yields @xmath282 since the coefficient @xmath283 of @xmath272 is positive , @xmath284 is a descent direction .",
    "moreover , in any of the cases ( a)(c ) of ( p4 ) , @xmath285 is feasible for some @xmath48 with an appropriate choice of the sign of @xmath286 .",
    "we now give a necessary and sufficient condition for a local minimizer to be strict .",
    "when a local minimizer is not strict , it may be possible to move to a neighboring point which has the same objective function value but which is not a local minimizer .",
    "[ strict_cor ] if @xmath24 is a local minimizer for @xmath28 and @xmath248 holds , then @xmath24 is a strict local minimizer if and only if the following conditions hold :    * @xmath241 is empty . *",
    "@xmath287 for every @xmath288 and @xmath289 . *",
    "if @xmath242 , the first - order optimality conditions @xmath236 hold for @xmath290 , and @xmath291 , then either * * @xmath39 and @xmath278 for all @xmath292 or * * @xmath40 and @xmath293 for all @xmath292 .    throughout the proof ,",
    "we let @xmath226 , @xmath294 , @xmath260 and @xmath261 denote @xmath259 , @xmath295 , @xmath262 , and @xmath263 respectively , where @xmath24 is a local minimizer for ( [ q ] ) and the pair @xmath296 satisfies the first - order optimality conditions ( [ kt ] ) . to begin ,",
    "suppose that @xmath24 is a strict local minimizer of ( [ q ] ) .",
    "that is , @xmath297 when @xmath32 is a feasible point near @xmath24 . if @xmath298 has at least two elements , then by ( p2 ) of theorem [ opttheorem ] , @xmath238 for each @xmath6 and @xmath299 .",
    "since the first - order optimality conditions ( [ kt ] ) hold at @xmath24 , it follows from ( [ h53 ] ) that @xmath300 for all @xmath45 .",
    "since this violates the assumption that @xmath24 is a strict local minimizer , we conclude that @xmath301 . if @xmath39 or @xmath40 , then since @xmath20 and @xmath19 are integers , it is not possible for @xmath24 to have just one fractional component .",
    "consequently , @xmath298 is empty . if @xmath41 , then by complementary slackness , @xmath290 .",
    "suppose that @xmath302 and @xmath303 . by ( p4 ) of corollary [ optcorollary ] , @xmath244 .",
    "again , by ( [ t ] ) it follows that @xmath304 for all @xmath45 .",
    "this violates the assumption that @xmath24 is a strict local minimizer of ( [ q ] ) .",
    "hence , @xmath294 is empty .    by the first - order conditions ( [ kt ] ) ,",
    "there exists @xmath221 such that @xmath305 for all @xmath306 and @xmath307 .",
    "if this inequality becomes an equality for some @xmath306 and @xmath307 , then @xmath308 , and by ( p3 ) of corollary [ optcorollary ] , we have @xmath238 .",
    "again , ( [ constant_f ] ) violates the assumption that @xmath24 is a strict local minimizer .",
    "hence , one of the inequalities in ( [ h84 ] ) is strict .",
    "the @xmath221 on each side of ( [ h84 ] ) is cancelled to obtain ( c2 ) .",
    "suppose that @xmath242 , @xmath290 , and @xmath291 .",
    "when @xmath290 , we have @xmath309 .",
    "hence , @xmath310 .",
    "it follows from ( p4 ) that in any of the cases ( a)(c ) , we have @xmath244 .",
    "in particular , if @xmath41 , then by ( [ t ] ) , we have @xmath311 for all @xmath45 .",
    "again , this violates the assumption that @xmath24 is a strict local minimum .",
    "similarly , if for some @xmath292 , either @xmath245 and @xmath39 or @xmath246 and @xmath40 , the identity @xmath311 implies that we violate the strict local optimality of @xmath24 .",
    "this establishes ( c3 ) .",
    "conversely , suppose that @xmath24 is a local minimizer and ( c1)(c3 ) hold .",
    "we will show that @xmath312 as a result , by the mean value theorem , @xmath313 when @xmath32 is sufficiently small .",
    "hence , @xmath24 is a strict local minimizer .",
    "when @xmath314 is feasible in ( [ q ] ) , we have @xmath315 by the first - order optimality condition ( [ kt ] ) , @xmath316 for all @xmath317 and @xmath318 for all @xmath319 .",
    "hence , we have @xmath320 we now consider three cases .",
    "first , suppose that @xmath321 and @xmath322 . by ( c1 )",
    "@xmath298 is empty and hence , by ( [ sign ] ) , @xmath323 for some @xmath317 and @xmath324 for some @xmath325 . after adding @xmath221 to each side in the inequality in ( c2 )",
    ", it follows that either @xmath326 or @xmath327 combining ( [ xyz ] ) , ( [ e1 ] ) , and ( [ e2 ] ) gives @xmath328 since either @xmath329 or @xmath330 , and @xmath331 .",
    "second , suppose that @xmath332 and @xmath333 . to be specific ,",
    "suppose that @xmath256 .",
    "by complementary slackness , @xmath39 . since @xmath314 is feasible in ( [ q ] ) and @xmath332 , we must have @xmath334 .",
    "hence , by ( [ xyz ] ) , @xmath335 .",
    "the case @xmath258 is similar .    finally , consider the case @xmath332 and @xmath290 . in this case",
    ", we must have @xmath242 .",
    "if the set @xmath336 in ( c3 ) is empty , then @xmath337 for all @xmath6 , and by ( [ xyz ] ) , @xmath335 .",
    "if @xmath338 , then by ( c3 ) , either @xmath39 and @xmath278 for all @xmath292 or @xmath40 and @xmath293 for all @xmath292 . to be specific ,",
    "suppose that @xmath39 and @xmath278 for all @xmath292 .",
    "again , since @xmath314 is feasible in ( [ q ] ) and @xmath332 , we have @xmath334 . if @xmath339 , then @xmath340 since @xmath341 .",
    "since @xmath334 , we contradict the feasibility of @xmath314 .",
    "hence , @xmath342 .",
    "since @xmath334 , there exists @xmath325 such that @xmath324 .",
    "since @xmath343 , it follows from ( [ e1 ] ) that @xmath330 . by ( [ xyz ] )",
    "the case @xmath40 and @xmath293 for all @xmath292 is similar .",
    "this completes the proof of ( [ st ] ) , and the corollary has been established .",
    "we investigate the performance of the branch and bound algorithm based on the lower bounds in section [ lowerbound ] using a series of test problems .",
    "the codes were written in c and the experiments were conducted on an intel xeon quad - core x5355 2.66 ghz computer using the linux operating system",
    ". only one of the 4 processors was used in the experiments . to evaluate the lower bound",
    ", we solve ( [ ltau ] ) by the gradient projection method with an exact linesearch and barzilai - borwein steplength @xcite .",
    "the stopping criterion in our experiments was @xmath345 where @xmath346 denotes the projection onto the feasible set and @xmath347 is the gradient of the objective function at @xmath348 .",
    "the solution of the semidefinite programming problem ( [ sdp ] ) was obtained using version 6.0.1 of the csdp code @xcite available at    @xmath349    we compare the performance of our algorithm with results reported by karisch , rendl , and clausen in @xcite and by sensen in @xcite .",
    "since these earlier results were obtained on different computers , we obtained estimates for the corresponding running time on our computer using the linpack benchmarks @xcite .",
    "since our computer is roughly 30 times faster than the hp  9000/735 used in @xcite and it is roughly 7 times faster than the sun ultrsparc - ii 400mhz machine used in @xcite , the earlier cpu times were divided by 30 and 7 respectively to obtain the estimated running time on our computer .",
    "note that the same interior - point algorithm that we use , which is the main routine in the csdp code , was used to solve the semidefinite relaxation in @xcite .",
    "the test problems were based on the graph bisection problem where @xmath350 .",
    "two different data sets were used for the @xmath4 matrices in the numerical experiments .",
    "most of the test problems came from the library of brunetta , conforti , and rinaldi @xcite which is available at    @xmath351 .",
    "some of the test matrices were from the uf sparse matrix library maintained by timothy davis :    @xmath352    since this second set of matrices is not directly connected with graph partitioning , we create an @xmath4 for graph partitioning as follows : if the matrix @xmath353 from the library was symmetric , then @xmath4 was the adjacency matrix defined as follows : the diagonal of @xmath4 is zero , @xmath354 if @xmath355 , and @xmath16 otherwise .",
    "if @xmath353 was not symmetric , then @xmath4 was the adjacency matrix of @xmath356 .",
    "our numerical study begins with a comparison of the lower bound of section [ mineig ] based on the minimum eigenvalue of @xmath357 and the best affine underestimate , and the lower bound of section [ sdp ] based on semidefinite programming .",
    "we label these two lower bounds @xmath358 and @xmath359 respectively . in table",
    "[ tab1 ] , the first 5 graphs correspond to matrices from the uf sparse matrix library , while the next 5 graphs were from the test set of brunetta , conforti , and rinaldi .",
    "the column labeled `` opt '' is the minimum cut and while @xmath11 is the problem dimension .",
    "the numerical results indicate that the lower bound @xmath359 based on semidefinite programming is generally better ( larger ) than @xmath358 . in table",
    "[ tab1 ] the best lower bound is highlighted in bold .",
    "based on these results , we use the semidefinite programming - based lower bound in the numerical experiments which follow .",
    "@xmath359 & opt + tina_discal & 11 & 0.31 & * 0.86 * & 12 + jg1009 & 9 & 1.55 & * 1.72 * & 16 + jg1011 & 11 & * 1.48 * & 0.94 & 24 + stranke94 & 10 & 1.76 & * 1.77 * & 24 + hamrle1 & 32 & -1.93 & * 1.12 * & 17 + 4x5 t & 20 & -21.71 & * 5.43 * & 28 + 8x5 t & 40 & -16.16 & * 2.91 * & 33 + t050 & 30 & 0.90 & * 18.54 * & 397 + 2x17 m & 34 & * 1.33 * & 1.27 & 316 + s090 & 60 & -9.84 & * 13.10 * & 238 +    [ tab1 ]      unless stated otherwise , the remaining test problems came from the library of brunetta , conforti , and rinaldi @xcite . table [ tab6 ] gives results for matrices associated with the finite element method @xcite .",
    "the three methods are labeled cqb ( our convex quadratic branch and bound algorithm ) , krc ( algorithm of karisch , rendl , and clausen @xcite ) , and sen ( algorithm of sensen @xcite ) .",
    "`` @xmath11 '' is the problem dimension , `` % '' is the percent of nonzeros in the matrix , and `` @xmath360  nodes '' is the number of nodes in the branch and bound tree . the cpu time is given in seconds .",
    "the best time is highlighted in bold . as can be seen in table [ tab6 ] , cqb was fastest in 6 out of the 10 problems even though the number of nodes in the branch and bound tree was much larger .",
    "thus both krc and sen provided much tighter relaxations , however , the time to solve their relaxed problems was much larger than the time to optimize our convex quadratics .",
    ".mesh instances [ cols=\"<,^,^ , > , > , > , > , > , > \" , ]     [ tab5 ]",
    "an exact algorithm is presented for solving the graph partitioning problem with upper and lower bounds on the size of each set in the partition .",
    "the algorithm is based on a continuous quadratic programming formulation of the discrete partitioning problem .",
    "we show how to transform a feasible @xmath24 for the graph partitioning qp ( [ q ] ) to a binary feasible point @xmath32 with an objective function value which satisfies @xmath33 .",
    "the binary feasible point corresponds to a partition of the graph vertices and @xmath361 is the weight of the cut edges . at any stationary point of ( [ q ] ) which is not a local minimizer , proposition [ descent_direction ] provides a descent direction that can be used to strictly improve the objective function value .    in the branch and bound algorithm ,",
    "the objective function is decomposed into the sum of a convex and a concave part .",
    "a lower bound for the objective function is achieved by replacing the concave part by an affine underestimate .",
    "two different decompositions were considered , one based on the minimum eigenvalue of the matrix in the objective function , and the other based on the solution to a semidefinite programming problem .",
    "the semidefinite programming approach generally led to much tighter lower bounds . in a series of numerical experiments ,",
    "the new algorithm cqb ( convex quadratic branch and bound ) was competitive with state - of - the - art partitioning methods ; the relative performance of cqb was better for sparse graphs than for dense graphs ."
  ],
  "abstract_text": [
    "<S> an exact algorithm is presented for solving edge weighted graph partitioning problems . </S>",
    "<S> the algorithm is based on a branch and bound method applied to a continuous quadratic programming formulation of the problem . </S>",
    "<S> lower bounds are obtained by decomposing the objective function into convex and concave parts and replacing the concave part by an affine underestimate . </S>",
    "<S> it is shown that the best affine underestimate can be expressed in terms of the center and the radius of the smallest sphere containing the feasible set . </S>",
    "<S> the concave term is obtained either by a constant diagonal shift associated with the smallest eigenvalue of the objective function hessian , or by a diagonal shift obtained by solving a semidefinite programming problem . </S>",
    "<S> numerical results show that the proposed algorithm is competitive with state - of - the - art graph partitioning codes .    90c35 , 90c20 , 90c27 , 90c46    graph partitioning , min - cut , quadratic programming , branch and bound , affine underestimate </S>"
  ]
}
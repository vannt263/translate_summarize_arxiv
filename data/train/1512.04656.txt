{
  "article_text": [
    "in large - scale industrial automation projects changing demands on collaboration between stakeholders are an important driver for innovation .",
    "these demands cover areas such as enterprise architecture over distributed sites , the provisioning of engineering services and software , testing , verification and monitoring and generally service support .",
    "mining and manufacturing often involve large supply chains with different stakeholders .",
    "efficient information exchange and interpretation is essential for cost savings , large - scale technology deployment , and business services .",
    "formal - methods and formal models can help to automate and filter some of the tasks occurring in operation , maintenance and commissioning of industrial automation facilities .",
    "formal methods can be integrated and used for decision problems to support collaboration .",
    "they can be used to analyse formal models such as checking required consistency properties .",
    "one , can combine formal methods with real - time information to decide on consequences and actions in an operating systems . for the software frameworks involved ,",
    "an important question is how to integrate formal models into them , e.g. , by means of a service bus .    here",
    ", we present a framework aiming at facilitating the exchange and interpretation of spatio - temporal data and knowledge for industrial automation .",
    "in particular , we are looking at our formal - methods based bespaced framework .",
    "bespaced allows the specification of spatio - temporal models and reasoning about them .",
    "we present the integration into projects .",
    "the models and bespaced based reasoning allow for an easier integration of multiple sites and facilitate collaboration between different stakeholders in industrial automation projects .",
    "the main new ideas highlighted in this report comprise :    * the description of formal modeling and reasoning challenges around remotely distributed industrial facilities and their bespaced - based modeling and reasoning . *",
    "an example used for describing the application of the use of our formal methods based bespaced framework in industrial automation projects .",
    "previously , we have described earlier ideas towards bespaced @xcite . here , we focus on the industrial automation domain and analyse an existing solution provided by us .",
    "our bespaced framework is described in section  [ sec : bespaced ] .",
    "an example model / case is given in section  [ sec : example ] .",
    "an application of bespaced and formal methods - based reasoning in the collaborative engineering framework is described in section  [ sec : colleng ] .",
    "we discuss related work on section  [ sec : relwork ] .",
    "finally , a conclusion is provided in section  [ sec : concl ] .",
    "bespaced @xcite is a constraint solving and non - classical model checking framework .",
    "it is organized as a library and specification language with a focus on spatio - temporal properties . in the industrial automation context discussed in this report",
    ", we use bespaced to specify industrial plant models and for dynamically and statically deciding on consequences of an event / alarm occurring in a system .",
    "we semantically  in the spatio - temporal context  interpret ( series ) of alarms occurring in the system and for retrieving and processing relevant information .",
    "the bespaced framework comprises ( i ) a modeling language focusing on space and time , and",
    "( ii ) a library to reason about models and their properties .",
    "library functions comprise , spatio - temporal decision procedures such as intersections , state - space exploration , abstraction and reduction .",
    "these are combined for checking properties of the models expressed in the bespaced modeling language and for deciding on actions and consequences .",
    "since bespaced based constraint solving can be done using and combining library functions , we are flexible in writing customized checking procedures . our bespaced modeling language allows the time or automata based behavioral description of entities .",
    "description integrate spatial ( coordinates or topological ) characteristics .",
    "typical descriptions include availability areas and schedules , capabilities , events and states .",
    "bespaced - based checking is done by using a series of steps where bespaced functions and language elements are combined .",
    "these steps comprise preprocessing , abstraction and derivation of verification conditions .",
    "verification conditions are checked by using tools like sat   and smt solvers ( a connection to z3  @xcite exists ) and specialized algorithms .",
    "the creation of verification conditions requires the encoding of spatio - temporal properties into smt - like formulas , e.g. , by specifying large conjunction of predicates each one indicating a spatio - temporal coordinate : ( x , y , z , time ) at a predefined resolution .",
    "furthermore , we have integrated to notion of ownership and over and underapproximation for reasoning about safety into these predicates @xcite .",
    "a small excerpt of our bespaced language definition is shown in figure  [ fig : scaladef ] to give a look and feel of the principal specification idea .",
    "constructors for abstract datatypes in scala can be combined to create a model .",
    "the excerpt shows constructors for logical operations , timepoints and intervals , events , probabilities , geometric elements , and topological elements",
    ".    .... case class or ( t1 : invariant , t2 : invariant ) extends invariant case class and ( t1 : invariant , t2 : invariant )   extends invariant case class not ( t : invariant ) extends invariant case class implies ( t1 : invariant , t2 : invariant )   extends invariant ... case class timepoint [ t ] ( timepoint : t ) extends atom   case class timeinterval [ t](timepoint1 : t , timepoint2 : t ) extends atom ... case class event[e ] ( event : e ) extends atom case class owner[o ] ( owner : o ) extends atom case class prob ( probability : double ) extends atom case class componentstate[s ] ( state : s ) extends atom ... case class occupypoint ( x : int , y : int ) extends atom case class occupybox ( x1 : int , y1 : int , x2 : int , y2 : int ) extends atom case class occupycircle ( x1 : int , y1 : int , radius : int ) extends atom   ... case class edge[n ] ( source : n , target : n ) extends atom   case class transition[n , e ] ( source : n , even : e , target : n ) extends atom   ... case class true ( ) extends atom case class false ( ) extends atom ....    different levels of abstraction can be distinguished : for example , geometric boxes can be broken down into sets of geometric points .",
    "bespaced models may be manually written directly using the bespaced modeling language .",
    "alternatively , generation of behavioral models from code is possible . here ,",
    "bespaced descriptions are created by executing customized code pieces .",
    "bespaced comprises a variety of functionality .",
    "important for this report are :    * abstraction functionality comprises ( i ) the aggregations of information for time points into time intervals which are safe - overapproximations , ( ii ) operations that support the safe over- and underapproximation of geometric objects .",
    "* verification goal generation supports ( i ) the breakdown of geometric objects associated with time and space into predicates characterizing time and space points and point sets , ( ii ) the generation of input for sat ( individual point predicates ) and smt ( point sets ) solvers and other specialized algorithms . *",
    "solving verification goals supports operations on spatio - temporal objects such as inclusion and intersection .",
    "* management of objects comprises assigning ownerships to spatio - temporal regions , topological objects and other structures .",
    "this also allows the management of aspects that require safe abstractions with respect to over- and underapproximation .",
    "furthermore , various search and model restructure operations are supported .",
    "safe overapproximations for time and geometric space are useful , for guaranteeing the absence of collisions , i.e. , the model suggests greater expansion of an object than its real physical properties . on the other hand , for ranges",
    ", we may use a safe underapproximation .",
    "both , under and over - approximations for geometric and topological information can be kept in the same model and are distinguished by the ownership predicate from figure  [ fig : scaladef ] .",
    "we present an example scenario in this section to give a better understanding of our industrial automation use - cases .",
    "we describe a static model , dynamic aspects , example properties and their verification .",
    "robots are deployed in a remote processing plant . the plant can be observed and reprogrammed via a remote service center .",
    "an overview on the physical setup is given in the left part of figure  [ fig : ex1 ] .",
    "three robots ( robot 1 , robot 2 , robot 3 ) can be distinguished operating on a conveyor belt . together with a store",
    ", they are forming the manufacturing site .",
    "the manufacturing site has communication links to two service centers : one for the company who commissioned the installation and one for the company operating the plant .",
    "the communication links within the manufacturing site follows a star - topology which can be described as a graph seen in the right part of figure  [ fig : ex1 ] .",
    "the communication hub does not appear as a physical component in the left part of figure  [ fig : ex1 ] .",
    "furthermore , communication between some robots , the conveyor belt and the communication hub is shut down in regular intervals for maintenance reasons .",
    "we include this as temporal aspects in our communication model for the manufacturing site as shown in figure  [ fig : ex3 ] .",
    "even in this part of the example , different levels of modeling have different characteristics :    1 .",
    "no physical interaction is possible between different sites , physical interactions at the site level is possible , but undefined ( may or may not occur ) at this modeling level .",
    "this is formally modeled using an empty graph .",
    "the fact that between different sites , communication is possible along the communication lines is modeled using a graph with three nodes ( one for each site : service center 1 , service center 2 , manufacturing site ) and two edges : ( service center 1 , manufacturing site ) , ( service center 2 , manufacturing site ) .",
    "2 .   another layer describes possible interactions between : robot 1 , robot 2 , conveyor belt , storage .",
    "each one is a node in the graph .",
    "communication is not shown in the figure 1 , but in figures 2 and 3 .",
    "for the physical influence graph , we have : ( robot 1 , conveyor belt ) , ( robot 2 , conveyor belt ) , ( robot 3 , conveyor belt ) , ( robot 1 , store ) .",
    "no physical interaction is possible in the absence of an edge .",
    "the physical influence graph indicates possible influences .",
    "the communication ( time and local communication included ) from figure  [ fig : ex3 ] is formalized in bespaced as shown in figure  [ fig : ex4 ] .",
    ".... def midlevelcommlinkgraph = implies(owner(\"midlevelcommgraph\"),bigand (       implies(timeinterval(tstandardgmtday(00,00,00),tstandardgmtday(23,30,59 ) ) ,         bigand(edge(\"comhub\",\"robot1\")::edge(\"comhub\",\"robot2 \" ) : :           edge(\"comhub\",\"robot3\")::edge(\"comhub\",\"store\")::edge(\"comhub\",\"convbelt \" ) : :               nil ) ) : :       implies(timeinterval(tstandardgmtday(23,31,00),tstandardgmtday(23,45,59 ) ) ,         bigand(edge(\"comhub\",\"robot1\")::edge(\"comhub\",\"robot2 \" ) : :           edge(\"comhub\",\"robot3\")::edge(\"comhub\",\"store\")::nil ) ) : :       implies(timeinterval(tstandardgmtday(23,46,00),tstandardgmtday(23,59,59 ) ) ,         bigand (          edge(\"comhub\",\"robot1\")::edge(\"comhub\",\"store\")::edge(\"comhub\",\"convbelt \" ) : :              nil))::nil ) ) ....    an additional modeling layer is available encapsulating fire and motion detection sensors and their ranges . we assume , that fire and motion detection sensors are deployed in a grid like fashion in the factory hall .",
    "the communications of this sensor network is done using wireless technology and thus does not depend on a physical link .",
    "each sensor is annotated with a detection range indicated by the circle .",
    "we also have geometric models , for fine grained interactions between different entities .",
    "figure  [ fig : ex3b ] shows an interaction sequence of robot 2 handling and modifying a work piece on the conveyor belt .",
    "the figure shows on overapproximation of occupied space for each step .",
    "this model encapsulates spatial impact of an action sequence performed by robot 2 on arrival of a work piece .",
    "actual arrival times of work pieces are not part of the static model and are dynamic information .",
    "furthermore , a scala code fragment generating the corresponding bespaced model with boxes that overapproximate the spatial occupation for the movement is shown in figure  [ fig : ex3d ] .",
    "the code makes use of the actual positioning functions of the objects : moverobot2 ( not shown ) and the linear conveyor belt movement moveworkpiece .",
    ".... def moveworkpiece ( time : int ) : ( int , int , int , int ) = {    if ( time < 1000 & & time > 0 ) {       return(moveobjonconvbelt(time),100,moveobjonconvbelt(time)+20,120 ) }     return ( 0,0,0,0 ) }    def mr2bespaced[e ] ( e : e , t : int , a : int , b : int , c : int , d : int ) :   invariant = { return ( implies(timestamp(tertp(e , t)),occupybox(a , b , c , d ) ) ) }           def createtrajectoryabstraction1 ( ) : invariant = {    var retinv1 : list[invariant ] = nil    var retinv2 : list[invariant ] = nil    for ( i : int < -   0 to 100 ) {       retinv1 : : = ( moverobot2(i ) match { case ( a , b , c , d ) = >            mr2bespaced(\"convact\",i , a , b , c , d ) } )       retinv2 : : = ( moveworkpiece(i ) match { case ( a , b , c , d ) = >            mr2bespaced(\"convact\",i , a , b , c , d ) } ) }    return(bigand(implies(owner(\"robot2_space\"),bigand ( retinv1 ) ) : :            implies(owner(\"workpiece_space\"),bigand ( retinv2))::nil ) ) } ....    different levels of modeling space are shown : ( i ) the course topological classification of sites ; ( ii ) the more fine - grained geometric formalization of the remote processing plant ; ( iii ) the even more fine - grained modeling of the space around the robot .",
    "an arbitrary number of different aspects can be distinguished for each level of modeling space .",
    "in the example we have the following aspects : ( i ) physical interaction , ( ii ) communication ( in the example , two disjunct aspects are provided ) ( iii ) detection ranges of sensors .",
    "in this section we describe the highlights of formal - methods based application of bespaced to the collaborative engineering project @xcite .",
    "our collaborative engineering project focuses on enabling the exchange of data and knowledge for remote plant operation , services and maintenance . at its core ,",
    "we use a bespaced based decision support framework , that provides relevant information to plant operators , engineers , other staff and stakeholders .",
    "it is focused around the handling of events and providing appropriate information . in industrial automation events",
    "comprise _ alarms_. these are typically issued by a control system such as a scada ( supervisory control and data acquisition ) system .",
    "for example , events can be based on sensor values deviating from a pre - defined range or manual triggering .",
    "our bespaced based decision support relies on formal models encapsulating the semantics of system components and related ontologies .",
    "figure  [ fig : insidemt ] gives on overview on the implemented collaboration support framework : from event generating devices to the display of information to stakeholders :    1 .",
    "events are collected from different devices , such as scada systems , robots and from webservices 2 .",
    "events are preprocessed , queued and sorted .",
    "the event specific handling is parallelised . based on spatio - temporal models ,",
    "we derive appropriate actions .",
    "the event specific code is also emitting the xml code for visualization .",
    "our event specific handlers comprise bespaced based reasoning . using models provided as .jar files and dynamic information from the events , we generate queries inside the event specific code to decide questions as described in the previous sections .",
    "based on this , appropriate information is selected for experts , collaborators , and other stakeholders .",
    "internally , event specific handlers share a global state . this state is used to share information between event specific code and for tracking the event history .",
    "the display of information is triggered by emitting xml code .",
    "the xml code is interpreted by a visualization manager for display of selected information in device specific ways .",
    "this can comprise mobile devices , workstations or our large screen visualization facilities ( cf .",
    "figure  [ fig : vxlab ] ) .",
    "our example use - case builds on the modeling techniques and the example model used in section  [ sec : example ] . to illustrate our framework in an event handling action",
    ", we are providing the following example scenario .",
    "the presented use - case is not part of the collaborative engineering project and is only used to exemplify the use of formal - methods in the framework , see also @xcite for a different use - case described from an industrial engineering point of view in remote surveillance that is a part of the collaborative engineering project .",
    "we describe our framework responding to an event , an alarm triggered by a malfunction such as a failure of a robot or a communication device provided in section  [ sec : example ] .",
    "our goal is to provide relevant information to staff , stakeholders , experts , and/or engineers .",
    "information needs to be provided in a concise way .",
    "we can face situations , where many alarms arrive in a short time .",
    "information for display has to be filtered so that humans are not overburdened .    1 .",
    "a sensor provides data indicating a malfunction of robot 2 in our example plant .",
    "we check the confidence by investigating historical data .",
    "if there is enough confidence , we generate an alarm this is provided as an event to our framework .",
    "3 .   using our bespaced based models of the plant and the reasoning functionality , we have implemented functions that find nearby machines and devices through the geometric and topological models .",
    "furthermore , we can use this information to decide whether additional actions need to be taken .",
    "for example , our collaboration platform can automatically match experts to the situation and offer resource conflict resolution .",
    "our semantic models also provide information on states of machinery .",
    "this may be used to identify additional possible dangers , possible interactions , physical locations , and possible effects on the surrounding area .",
    "in addition to our semantic models , the event specific code can take information from databases and rely on real - time information from streaming sources .",
    "4 .   in the next step ,",
    "we select incident relevant information for display to humans .",
    "we use an xml - based language to encode commands for triggering changes to display information on mobile , devices , normal workstations and large scale visualization screens .    in collaborative engineering ,",
    "the information displayed comprises profiles and other data stored in sharepoint as well as maps .",
    "the sharepoint - based data is displayed in browser windows managed by our framework .",
    "in addition to the industrial automation decision support usages discussed in the last section , we have applied bespaced in combination with other model checkers to a number of different projects . in @xcite and @xcite",
    ", we are also dealing with models that comprise a large amount of time and space based specifications for industrial automation .",
    "the focus is on verification of consistency conditions at design time of a system to avoid possible collisions and injuries using probabilistic and non - probabilistic models . in @xcite",
    "we have applied bespaced for assuring correct sensor ranges in factory hall scenarios . here , some dynamic aspects are integrated .",
    "different formal methods exist for supporting collaboration . in our case",
    ", we provide distinct functionality to support spatio - temporal decisions . in our case",
    ", we can map most problems to sat / smt and geometric inclusion problems .",
    "these can be solved by applying the appropriate tools or by state - space exploration . a library style framework as opposed to a tool in a tool chain",
    "allows the flexible combination of functionality . in our case studies we found the following cases :    *",
    "dividing a model into smaller units and keeping them in databases increases the lookup and update speed and thereby the decision speed . *",
    "combination of different functionality can be realized for all kinds of event specific code in the collaborative engineering project , which allows for adding new events and devices that were not present at the design time of the system .",
    "bespaced models can either be hand - written or generated out of code ( see e.g. , @xcite for an application ) .",
    "hand - writing is can be regarded as working with a domain specific language and requires some expertise .",
    "bespaced enables spatio - temporal reasoning .",
    "existing specification and reasoning techniques comprise process algebra like formalisms @xcite and @xcite .",
    "a type system in connection with this work has been introduced in @xcite .",
    "applications comprise concurrency and ressource control . another framework for describing hybrid programs with stochastic features",
    "is described in @xcite .",
    "a verification tool to check properties based on this formalism is described @xcite . in our work , we are more focused on a domain specific solution for industrial automation .",
    "we are more restrictive by concentrating on spatio - temporal properties with respect to geometry and topology and focus on tailoring our formalism and related decision techniques for industrial automation .",
    "highly specialised solutions for reasoning about geometric constraints are important in robot path planning .",
    "this has been studied for decades , e.g. , @xcite .",
    "in addition different kinds of spatial logics and means to reason about them have been studied ( e.g. , @xcite ) including work on decidability ( e.g. , see decidability results in @xcite ) . complementing the time and geometry focus on the reasoning side of our framework , a strong focus on topological models has advantages in areas such as security analysis @xcite .",
    "spatial types as classification elements for managing geometric objects are also important in databases @xcite and in geographic information systems @xcite .",
    "we have shown the application of our formal methods - based spatial reasoning framework bespaced in industrial automation .",
    "bespaced works on spatio - temporal models .",
    "analysis results are used in decision making .",
    "future work comprises more expressive modeling and shifting more functionality from use - cases into the bespaced library thereby generalizing the framework .",
    "ongoing work comprises various work around the analysis and checking of industrial automation models ( e.g. , @xcite ) .",
    "furthermore , a connection to our work on the specification of plc software for controlling machinery through behavioral types @xcite and complete semantical specifications @xcite is ongoing .",
    "b. bennett , a. g. cohn , f. wolter , m. zakharyaschev .",
    "multi - dimensional modal logic as a framework for spatio - temporal reasoning . applied intelligence , volume 17 , issue 3 , kluwer academic publishers , november 2002 .",
    "j.  o.  blech and h.  schmidt .",
    "bespaced : towards a tool framework and methodology for the specification and verification of spatial behavior of distributed software component systems . in _",
    "arxiv.org_ , http://arxiv.org/abs/1404.3537 , 2014 .",
    "j.  o.  blech , i.  peake , h.  schmidt , m.  kande , a.  rahman , s.  ramaswamy , sudarsan  sd .",
    ", and v.  narayanan .",
    "efficient incident handling in industrial automation through collaborative engineering . _",
    "emerging technologies and factory automation ( etfa ) _ , ieee , 2015 .",
    "l. caires and h. torres vieira .",
    "slmc : a tool for model checking concurrent systems against dynamical spatial logic specifications .",
    "tools and algorithms for the construction and analysis of systems .",
    "springer , 2012 .",
    "b. fernandez adiego , d. darvas , e. blanco vinuela , j - c .",
    "tournier , s. bliudze , j. o. blech , and v. m. gonzalez suarez . applying model checking to industrial - sized plc programs .",
    "ieee transactions on industrial informatics , vol .",
    "11 , no . 6 , december 2015 .",
    "b. fernandez adiego , d. darvas , e. blanco vinuela , j - c .",
    "tournier , v. m. gonzalez suarez , j. o. blech .",
    "modelling and formal verification of timing aspects in large plc programs .",
    "19th ifac world congress , cape town , 2014 .",
    "l. pasquale , c. ghezzi , c. menghi , ch .",
    "tsigkanos , and b. nuseibeh .",
    "topology aware adaptive security . in proceedings of the 9th international symposium on software engineering for adaptive and self - managing systems , pp .",
    "acm , 2014 ."
  ],
  "abstract_text": [
    "<S> we describe our formal methods - based spatial reasoning framework bespaced and its application in decision support for industrial automation . </S>",
    "<S> in particular we are supporting analysis and decisions based on formal models for industrial plant and mining operations . </S>",
    "<S> bespaced is a framework for deciding geometric and topological properties of spatio - temporal models . </S>",
    "<S> we present an example and report on our ongoing experience with applications in different projects around software and cyber - physical systems engineering . </S>",
    "<S> the example features abstracted aspects of a production plant model . using the example we motivate the use of our framework in the context of an existing software platform supporting monitoring , incident handling and maintenance of industrial automation facilities in remote locations . </S>"
  ]
}
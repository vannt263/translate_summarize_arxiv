{
  "article_text": [
    "difference image analysis ( dia ) aims to measure changes , from one image to another , in the objects that make up a scene . in astronomy ,",
    "the objects are typically point sources changing in brightness or moving on the sky .",
    "astronomical images are formed on a discrete detector array , after the sky scene suffers attenuation , geometrical distortion and blurring by the atmosphere and optics , superimposed on a sky background , and corrupted by detector noise .",
    "all of these effects are to different degrees non - uniform across the scene and variable on a variety of timescales .",
    "furthermore , pairs of images of the same scene may suffer small misalignments in position or scale , or gross rotational misalignments .",
    "the changes in object properties that we wish to measure are thus entangled with changes in the sky - to - detector , or scene - to - image , transformation . a residual difference image , formed by simple subtraction of one image from another , is generally dominated by changes in the transformation .",
    "to extract the astronomical information , we must accurately model the changes in astrometry , throughput , background , and blurring between the two images .",
    "we may then make corrections to match these effects from one image to another and subtract to form `` cleaner '' difference images , or we may model the original images including changes in both object properties and image transformations .",
    "while current dia techniques are based on the former approach , we advocate the latter .",
    "the model adopted to represent changes in the scene - to - image transformation must include the following differential ( or corrective ) components :    * a coordinate transformation between the coordinate systems of each image to correct for image misalignments and/or differences in distortion . * a photometric scaling that corrects for the changes in the attenuating effects of the atmosphere ( and possibly the telescope optics ) and differences in exposure time . *",
    "a background offset that corrects for changes in the sky background emission . * a convolution transformation that corrects for the changes in the image point - spread function ( psf ) as a result of changes in atmospheric conditions and/or the telescope optics ( e.g. focus changes ) .",
    "note that all of these components model differential corrections , not absolute values ( e.g. the convolution transformation models the _ change _ in psf shape between images , not the psf itself ) .",
    "the state of the art in dia includes the components for photometric scaling , sky background offsets , and psf convolution in the dia modelling process .",
    "recent developments ( @xcite , from now on b08 ) also include fractional pixel translations in the model .",
    "other image misalignments ( rotation , scale , shear , distortion ) are corrected by pre - registering the images before application of dia , usually involving image resampling .",
    "the framework for the current approach to dia was introduced by @xcite ( from now on a98 ) for matching a reference image to a target image .",
    "the convolution kernel ( including the photometric scaling ) to be applied to the reference image is decomposed into a set of basis functions , and the differential background offset is included as a polynomial of the image coordinates , which converts the problem of finding the corrective components to a standard linear least - squares formulation .",
    "a follow - up paper by @xcite ( from now on a00 ) showed how the spatial variation of the convolution kernel can be modelled by multiplying the kernel basis functions by polynomials of the image coordinates .",
    "the kernel basis functions chosen by a98 and a00 are gaussians of different widths , modified by polynomials of the kernel coordinates .",
    "the user must specify the number of gaussian basis functions to be employed , their associated widths , and the degrees of the modifying polynomials .",
    "however , the optimal choice of parameters for generating the kernel basis functions is not obvious , although some investigation into this matter has been performed ( @xcite ) .",
    "it is clearly desirable to find a set of kernel basis functions that are inherently simple , thereby being specified by a minimal parameter set , and yet that can model the kernel with sufficient flexibility .",
    "a step towards this paradigm was made by b08 with the proposed representation of the kernel as a discrete pixel array where the kernel pixel values are solved for directly .",
    "this approach limits the requirements on the user to specifying the kernel size ( and shape ) , and the kernel model is maximally flexible in modelling the most complicated convolution kernels ( e.g. telescope jumps ) .",
    "b08 show that the new formulation is capable of modelling fractional pixel translations as part of the convolution kernel , thereby relaxing the requirement on image registration such that images need only be aligned to the nearest pixel before application of dia .",
    "spatial variation of the kernel is handled by interpolation of kernel and differential background solutions on a grid .    soon after b08 , @xcite ( from now on m08 ) specified a set of kernel basis functions built from delta - functions centred at different kernel coordinates .",
    "this choice of basis functions leads to a solution that happens to be equivalent to the b08 solution ( see section  [ sec : delta_basis ] ) , but it is specified such that it fits into the a98 framework of equations .",
    "m08 also included a polynomial spatial variation of the delta - function coefficients to model the kernel spatial variation .",
    "@xcite `` rediscovered '' the m08 work , but failed to impose any control on the photometric scaling while also fixing the value of the central kernel pixel , leading to a sub - optimal kernel model that can not freely model fractional pixel translations .",
    "the choice of kernel basis functions in the a98 framework is fully down to the developer / user .",
    "while the delta - function basis ( or delta basis for short ) is very compelling , the number of free parameters grows quickly with the adopted kernel size .",
    "hence it makes sense to choose some coarser functions in the outer part of the kernel where there is little variation or signal / amplitude .",
    "@xcite introduce the idea of binned kernel pixels in the outer part of the kernel , which greatly reduces the number of kernel parameters , and @xcite introduce a bicubic @xmath0-splines basis .",
    "one of the assumptions in the a98 dia framework is that the photometric scaling between the reference image and the target image is characterised by a single number , which may be a reasonable assumption for images covering a small field - of - view ( fov ) , where spatial variations in atmospheric transparency and airmass are generally negligible .",
    "however , dia is now being applied in projects that generate images covering multiple square degrees each ( e.g. palomar transient factory - @xcite and @xcite , panstarrs - @xcite ) , where non - uniform transparency is common ( due to passing clouds ) and extinction varies from one edge of the image to another due to airmass gradients across the field .",
    "extension of the dia framework to a spatially varying photometric scale factor is therefore a necessary generalisation in the application of dia to these projects .    in section  [ sec : general_sol ] , we take the step of generalising dia to be able to cope with a spatially varying photometric scale factor , while simultaneously modelling the spatial variation of the kernel shape and differential background . in presenting this generalised formulation",
    ", we also take the opportunity to present a clear set of dia equations , with user - friendly notation , grouped in a logical way . the original dia formulations in the literature ( a98 ;",
    "a00 ) are not so transparent in this respect , and the m08 formulation where delta basis functions are introduced omits the consideration of pixel uncertainties , has difficult notation , and misses a number of important simplifications with respect to this kernel basis ( see section  [ sec : delta_basis ] ) .",
    "discussion of the most popular choices for the kernel basis functions and their implications with regard to the dia formulation is made in section  [ sec : choice_for_basis ] , where we also introduce the mixed - resolution delta basis functions . in section",
    "[ sec : test ] , we validate our algorithm using simulated data and we demonstrate it using some real data . section  [ sec : impl_and_opt ] has been written to provide some implementation and optimisation hints for the dia developer , and the methodology that we propose will help to make the dia algorithms more feasible with respect to the increasing data volume ( image sizes and numbers ) from the latest generation of time - series imaging projects .",
    "finally , we state our conclusions in section  [ sec : conclusions ] .",
    "in this section , we derive a general theoretical formulation of the difference image analysis problem from which all previously published formulations arise as special cases .",
    "this generalisation allows us to exercise control separately over the spatial variation of each kernel basis function , the photometric scale factor , and the differential sky background , as we show in sections  [ sec : target_im_model ]  &  [ sec : spatial_var_ps ] .",
    "we start as in b08 by considering a pair of registered images sampled on the same pixel grid , one being the reference image with pixel values @xmath1 , and the other the target image with pixel values @xmath2 , where @xmath3 and @xmath4 are pixel indices referring to the column @xmath3 and row @xmath4 of the image .",
    "we denote the spatial coordinate system in these images by @xmath5 , and the @xmath5 coordinates of the @xmath6th pixel by @xmath7 .",
    "exact image registration is not strictly necessary , since the best formulations for the kernel model include corrections for translational ( but not rotational or otherwise ) image misalignments , which has the advantage of avoiding problematic image interpolation in many cases .",
    "as first formulated by a98 , we construct the model @xmath8 for the target image as the reference image convolved with a spatially varying kernel @xmath9 ( where @xmath10 and @xmath11 are kernel coordinates ) plus a spatially varying differential background @xmath12 : @xmath13(x , y ) + b(x , y ) \\label{eqn : model}\\ ] ] we wish to determine the best - fit convolution kernel and differential background , and to do this we must first make further assumptions about their functional form .",
    "we note that since the reference image is part of the target image model , it may be desirable to also determine the reference image pixel values @xmath1 .",
    "however , finding a solution to this issue is outside the scope of this paper .",
    "a98 made the important step of decomposing the kernel into a set of basis functions thereby linearising the expression in equation  [ eqn : model ] .",
    "subsequently , a00 generalised the kernel decomposition to include the spatial variation of the basis function coefficients , which facilitated the modelling of the spatial variation of the kernel .",
    "we form the same kernel decomposition : @xmath14 where @xmath15 is the @xmath16th kernel basis function , @xmath17 is the @xmath16th spatially variable coefficient , and @xmath18 is the number of kernel basis functions .    a polynomial is a sensible choice of model for the spatial variation of the kernel basis function coefficients since it respects the linearity of the decomposition in equation  [ eqn : ker_decomp1 ] , and by specifying the polynomial degree , one may control the amount of spatial variation that is to be modelled .",
    "the polynomial form for @xmath17 was adopted by a00 with the same degree for each basis function coefficient .",
    "we generalise this further by modelling each coefficient as a polynomial with individual degree @xmath19 , providing a flexibility that we require later on : @xmath20 where the @xmath21 are polynomial coefficients for the @xmath16th kernel basis function .",
    "the coordinates @xmath22 are normalised spatial coordinates defined by : @xmath23 which follow from the taylor expansion of the spatial coordinates @xmath5 around the image centre @xmath24 for an image of size @xmath25 pixels .",
    "this coordinate conversion improves the orthogonality of the spatial polynomial terms ) . ] , and it prevents the significant polynomial coefficients from becoming progressively smaller for the higher order polynomial terms .    as in a98 , we also adopt a polynomial model of degree @xmath26 for the differential background : @xmath27 where the @xmath28 are the polynomial coefficients .",
    "we now have a model @xmath8 for the target image that is a linear combination of functions of @xmath29 and @xmath30 .",
    "this is easily shown by substituting equations  [ eqn : ker_decomp1 ] ,  [ eqn : ker_coeffs1 ]  &  [ eqn : back_coeffs1 ] into equation  [ eqn : model ] and using the fact that convolution is distributive : @xmath31(x , y ) \\sum_{m = 0}^{d_{q } } \\sum_{n = 0}^{d_{q } - m } a_{qmn } \\ , \\eta(x)^{m } \\",
    ", \\xi(y)^{n }           \\ , + \\sum_{k = 0}^{d_{\\mbox{\\tiny b } } } \\sum_{l = 0}^{d_{\\mbox{\\tiny b } } - k } b_{kl } \\ , \\eta(x)^{k } \\ , \\xi(y)^{l }",
    "\\label{eqn : model_lincomb}\\ ] ]    the target image is a discrete image of pixel values @xmath2 and therefore we wish to evaluate the model for the target image at the discrete pixel coordinates @xmath7 . let us use @xmath32 to represent the discrete model image @xmath33 and @xmath34 to represent the discrete coordinate array @xmath35 .",
    "then , using the fact that the convolution of the reference image @xmath1 with the continuous kernel basis function @xmath15 is equivalent to a discrete convolution ( see appendix  a ) , we have : @xmath36_{ij } \\sum_{m = 0}^{d_{q } } \\sum_{n = 0}^{d_{q } - m } a_{qmn } \\ , \\eta_{i}^{m } \\ , \\xi_{j}^{n }           \\ ,",
    "+ \\sum_{k = 0}^{d_{\\mbox{\\tiny b } } } \\sum_{l = 0}^{d_{\\mbox{\\tiny b } } - k } b_{kl } \\ , \\eta_{i}^{k } \\ , \\xi_{j}^{l } \\label{eqn : model_lincomb_discrete}\\ ] ] with : @xmath37_{ij } = \\sum_{rs } r_{(i+r)(j+s ) } \\kappa_{qrs } \\label{eqn : discrete_conv}\\ ] ] where @xmath38 and @xmath39 are pixel indices corresponding to the column @xmath38 and row @xmath39 of the discrete kernel basis function @xmath40 defined by : @xmath41    we refer to @xmath42_{ij}$ ] as a _ basis image _ since it is the linear combination of these basis images modified by spatial polynomials and combined with the differential background that constitutes the target image model .",
    "a basis image @xmath42_{ij}$ ] is calculated from the discrete convolution of the reference image @xmath1 with the corresponding discrete kernel basis function @xmath40 via equation  [ eqn : discrete_conv ] , which implies that the reference image @xmath1 must extend beyond the pixel domain of the target image @xmath2 . the discrete kernel basis function @xmath40 may be defined directly , or calculated by analytical or numerical integration of equation  [ eqn : discrete_ker_basis_func ] given a definition for @xmath15 .",
    "note that the terms for modelling the differential background in equation  [ eqn : model_lincomb_discrete ] can be thought of as multiplying a basis image that is set to unity at all pixels .",
    "all that is now required to fully define the model for the target image is to make a choice of suitable kernel basis functions , from which the corresponding basis images are derived .",
    "this is where different authors have made different choices ( e.g. the gaussian basis functions , the delta basis functions , etc . ) , and we leave the treatment of these choices to section  [ sec : choice_for_basis ] where we consider their implications in more detail .      assuming that we have a solution for the polynomial coefficients @xmath21 of the kernel basis functions , we would like to know how to construct the discrete kernel model @xmath43 at any pixel @xmath6 in the target image .",
    "this is achieved by defining : @xmath44 which , on substitution of equations  [ eqn : ker_decomp1 ] ,  [ eqn : ker_coeffs1 ]  &  [ eqn : discrete_ker_basis_func ] , reduces to : @xmath45      the kernel sum @xmath46 , which in general is a function of spatial pixel @xmath6 , defines the _ photometric scale factor _ between the reference image and the target ]    our current formulation of the dia problem in section  [ sec : target_im_model ] is such that @xmath47 will vary across the image as a polynomial of degree equal to the maximum of the set of degrees @xmath48 for the coefficients of the ( sub-)set of kernel basis functions that have a non - zero sum .",
    "this can be seen by swapping the summation order in equation  [ eqn : kernel_ps1 ] and combining the kernel basis function coefficients into a single set of coefficients @xmath49 : @xmath50 where :",
    "@xmath51    this behaviour may be undesirable if we wish to employ a different degree of spatial variation in the photometric scale factor to the degree of spatial variation of the shape of the convolution kernel .",
    "a00 noted that those kernel basis functions with zero sums do not contribute to the spatial variation of the photometric scale factor , regardless of the spatial variation of their coefficients , and that one may always construct a new set of kernel basis functions that are a linear combination of the original set of basis functions .",
    "we assume that our kernel basis functions have been normalised to a sum of unity , or have a zero sum , and that our first kernel basis function @xmath52 , without loss of generality , has a sum of unity .",
    "we then form a new set of kernel basis functions as follows : @xmath53 it follows that all of our new kernel basis functions @xmath54 have zero sums except for the first basis function @xmath55 which has a sum of unity .    adopting our new set of kernel basis functions and dropping the prime from our notation , the photometric scale factor @xmath47 reduces to : @xmath56 which is a polynomial in the spatial coordinates @xmath5 of degree @xmath57 .",
    "hence , by transforming the kernel basis functions as outlined above , one may specify a polynomial degree @xmath57 of spatial variation for the photometric scale factor , associated only with the coefficient of the first kernel basis function , and which we redefine as the degree @xmath58 .",
    "collectively , the spatial variation of the kernel basis functions describes the kernel shape variations , and therefore the polynomial degree of spatial variation for the kernel shape is set by the value of @xmath59 , which is always greater than or equal to @xmath58 .",
    "this is an important point to understand since if one wants to model the situation where the kernel shape is expected to spatially vary with a smaller degree than the photometric scale factor , then one should still fit a model with @xmath60 .",
    "for example , to model the situation where the kernel shape is spatially invariant between two images but the spatial transparency pattern varies linearly ( e.g. because of changes in airmass gradient ) , then one must adopt a linear spatial variation for all of the kernel basis functions .",
    "this enables the spatial variations of the zero - sum kernel basis functions to offset the spatial variations in kernel shape induced by the spatial variations of the unit - sum kernel basis function .    to summarise ,",
    "we have shown how to decouple the spatial variation of the photometric scale factor from the kernel shape variations ( with the aforementioned caveat ) , which leads to three natural types of spatial variation in the dia formulation ; namely , photometric scale factor variations , differential background variations , and kernel shape variations , characterised by the degrees @xmath58 , @xmath26 , and @xmath61 , respectively .      in order to fit the model in equation  [ eqn : model_lincomb_discrete ] to the target image",
    ", we construct the chi - squared : @xmath62 where the @xmath63 represent the target image pixel uncertainties .",
    "minimising the chi - squared in equation  [ eqn : chi_sqr ] falls into the class of general linear least - squares problems , since the model in equation  [ eqn : model_lincomb_discrete ] is linear with respect to the unknown coefficients @xmath21 and @xmath28 to be determined .",
    "this class of problems has a standard solution procedure by construction of the _",
    "normal equations_. we refer the reader to the treatment of this subject in numerical recipes ( @xcite ) for more details .",
    "the normal equations are most compactly represented by the matrix equation : @xmath64 where the square matrix @xmath65 is the least - squares matrix , the vector @xmath66 is the vector of model parameters , and @xmath67 is another vector .    for each kernel basis function , there are + @xmath68 polynomial coefficients @xmath21 , and for the differential background , there are @xmath69 polynomial coefficients @xmath28 , leading to a total of @xmath70 parameters to be determined .",
    "hence the least - squares matrix @xmath65 is of size @xmath71 by @xmath71 elements , and the vectors @xmath66 and @xmath67 are of length @xmath71 elements .",
    "if we take @xmath72 as a generalised index for all of the free parameters , then we are simply assigning a one - to - one correspondence @xmath73 that specifies which coefficient , @xmath21 or @xmath28 , corresponds to the current element @xmath74 of the vector of parameters @xmath66 .",
    "this mapping may order the parameters in an arbitrary way , but the ordering is only important for the efficient computation of @xmath65 and @xmath67 if one does not pre - calculate all of the necessary polynomial and basis images ( see sections  [ sec : memory ]  &  [ sec : lsm ] ) .",
    "following from the definition of the model for the target image in equation  [ eqn : model_lincomb_discrete ] , the elements of the least - squares matrix @xmath65 ( i.e. the coefficients in the normal equations ) and vector @xmath67 may now be written out explicitly in terms of the basis images : @xmath75_{ij } \\ ; [ r \\otimes \\kappa_{q^{\\,\\prime}}]_{ij } \\ , / \\",
    ", \\sigma^{2}_{ij } \\\\ \\;\\;\\ ; \\mbox{for $ \\alpha_{z } \\equiv a_{qmn}$ and $ \\alpha_{z^{\\,\\prime } } \\equiv a_{q^{\\,\\prime } m^{\\,\\prime } n^{\\,\\prime}}$ } \\\\ \\sum_{ij } \\",
    ", \\eta^{m + k^{\\,\\prime}}_{i } \\ , \\xi^{n + l^{\\,\\prime}}_{j } \\ , [ r \\otimes \\kappa_{q}]_{ij } \\ , / \\ ,",
    "\\sigma^{2}_{ij } \\\\ \\;\\;\\ ; \\mbox{for $ \\alpha_{z } \\equiv a_{qmn}$ and $ \\alpha_{z^{\\,\\prime } } \\equiv b_{k^{\\,\\prime } l^{\\,\\prime}}$ } \\\\",
    "\\sum_{ij } \\ , \\eta^{k + m^{\\,\\prime}}_{i } \\ ,",
    "\\xi^{l + n^{\\,\\prime}}_{j } \\ , [ r \\otimes \\kappa_{q^{\\,\\prime}}]_{ij } \\ , / \\ , \\sigma^{2}_{ij } \\\\    \\;\\;\\ ; \\mbox{for $ \\alpha_{z } \\equiv b_{kl}$ and $ \\alpha_{z^{\\,\\prime } } \\equiv a_{q^{\\,\\prime } m^{\\,\\prime } n^{\\,\\prime}}$ } \\\\",
    "\\sum_{ij } \\",
    ", \\eta^{k + k^{\\,\\prime}}_{i } \\ , \\xi^{l + l^{\\,\\prime}}_{j } \\ , / \\ , \\sigma^{2}_{ij } \\\\ \\;\\;\\ ; \\mbox{for $ \\alpha_{z } \\equiv b_{kl}$ and $ \\alpha_{z^{\\,\\prime } } \\equiv b_{k^{\\,\\prime } l^{\\,\\prime}}$ } \\\\ \\end{cases } \\label{eqn : least_squares_matrix}\\ ] ] @xmath76_{ij } \\ , / \\ , \\sigma^{2}_{ij } & \\mbox{for $ \\alpha_{z } \\equiv a_{qmn}$ } \\\\",
    "\\sum_{ij } \\ , \\eta^{k}_{i } \\ ; \\xi^{l}_{j } \\",
    "; i_{ij } \\ ; / \\ , \\sigma^{2}_{ij } & \\mbox{for $ \\alpha_{z } \\equiv b_{kl}$ } \\\\",
    "\\end{cases } \\label{eqn : least_squares_vector}\\ ] ]    cholesky factorisation of the symmetric and positive - definite matrix @xmath65 , followed by forward and back substitution is the most efficient and numerically stable method ( @xcite ) for obtaining the solution @xmath77 to the normal equations .",
    "explicit calculation of the matrix inverse @xmath78 is only strictly necessary if one requires the covariance matrix @xmath79 .",
    "we note that the calculation of the uncertainties in the elements of @xmath80 is one such case since the uncertainty @xmath81 in each @xmath82 is given by : @xmath83      the calculation of the least - squares matrix @xmath65 and vector @xmath67 requires the adoption of a suitable noise model for the target image pixel uncertainties @xmath63 .",
    "b08 specify one such model as : @xmath84 where @xmath85 is the ccd readout noise ( adu ) , @xmath86 is the ccd gain ( e@xmath87/adu ) , and @xmath88 is the master flat - field image .",
    "this model assumes that both the master flat - field image @xmath88 and the reference image @xmath1 are noiseless , which is a reasonable assumption for such typically high signal - to - noise ( s / n ) images .",
    "most importantly , we note that in this noise model , the uncertainties @xmath63 depend on the target image model @xmath32 and consequently , fitting @xmath32 as described in section  [ sec : fit_target_im_model ] becomes an iterative process depend on the target image model @xmath32 also implies that minimising @xmath89 is no longer equivalent to maximising the likelihood .",
    "the maximum likelihood estimator is obtained instead by minimising @xmath90 , which renders the fitting of the target image model as a non - linear problem . ] . in the first iteration , it is appropriate to approximate @xmath32 by using @xmath2 , which enables the calculation of the initial kernel and differential background solution . in subsequent iterations ,",
    "the current image model defined by equation  [ eqn : model_lincomb_discrete ] should be used to set the @xmath63 as per equation  [ eqn : noise_model ] . in appendix",
    "b , we use an example to demonstrate the bias that can be introduced into the model parameters if the iterative fitting procedure is not performed ( see also section  [ sec : simdata ] ) .",
    "it is also desirable to employ a @xmath91-sigma - clip algorithm in order to prevent outlier target image pixel values from influencing the solution , including those from variable objects and cosmic ray events .",
    "this may easily be achieved by calculating the normalised residuals @xmath92 and ignoring any pixels with @xmath93 in subsequent iterations .",
    "the reliability of the @xmath91-sigma - clip algorithm depends heavily on the accuracy of the adopted noise model , and since the initial @xmath63 values are calculated using an approximation to @xmath32 , we recommend that the sigma - clipping commences at the second iteration .",
    "our final note in this section is that the noise model in equation  [ eqn : noise_model ] could be improved , specifically by considering the noise introduced by the reference image , which is non - negligible when the s / n of the reference image is similar to that of the target image . a00 and b08 have previously considered such a noise model . here",
    ", we explicit a useful noise model for a target image and a combined reference image that have been registered to the nearest pixel ( i.e. avoiding image resampling ) : @xmath94 with : @xmath95 \\label{eqn : noise_model_ref}\\ ] ] where the @xmath96 represent the @xmath97 images that have been combined to create the reference image , and @xmath98 and @xmath99 are the master flat - field images corresponding to the target image and constituent images of the reference image , respectively .      ideally , _ every pixel _ in the target image should be used in the calculation of @xmath65 and @xmath67 , and therefore contribute to the kernel and differential background solution .",
    "however , due to the nature of the convolution process , the target image model is undefined in a border of width equal to half the kernel width around the image edges if the reference image is the same size as the target image , and therefore these target image pixels can not be used in the calculation of @xmath65 and @xmath67 .",
    "also , `` bad '' pixels ( e.g. bad columns / rows , hot pixels , saturated pixels , cosmic - ray events , etc . ) should be excluded from the calculations , which means that any target image pixel @xmath6 to be included in the calculation of @xmath65 and @xmath67 should be `` good '' in the target image , and that all reference image pixels to be used for calculating the target image model at @xmath6 should be `` good '' in the reference image .",
    "this implies that a bad pixel in the reference image can discount a set of pixels equal to the kernel area in the target image , and therefore , as suggested in b08 , bad pixels in the reference image should be kept to a minimum , and kernels with excessively large footprints should be avoided when there are bad pixels in the reference image ( e.g. see section  2.3 of @xcite ) .",
    "the areas of the target image which contain only sky background and no astronomical objects will only contribute information on the differential sky background coefficients in the target image model . hence , one may limit the set of target image pixels to be used in the calculation of @xmath65 and @xmath67 to a set of image sub - regions encompassing the higher s / n objects in the target image , which speeds the computations ( fewer pixel values to be included in the required summations ) while sacrificing some information .",
    "we note that contrary to the statements of some authors ( e.g. m08 ) , these sub - regions need not be centred on isolated stars .",
    "in fact , sub - regions of crowded high s / n objects ( psf - like or not ) are precisely the image regions that contain the most information on the convolution kernel and differential background , because each pixel contains psf and background information at a high s / n ratio .",
    "we briefly mention that the definition of a difference image @xmath100 is : @xmath101 this image of residuals consists of noise ( mainly poisson noise from photon counting ) and any differential flux from objects that have varied in brightness and/or position compared to the epoch of the reference image , since constant sources are fully subtracted during the dia process .",
    "however , if an inappropriate kernel and/or differential background model is chosen , then unwanted systematic errors will leave signatures in the difference image as large - amplitude high - spatial - frequency residuals at the positions of the brighter objects ( for inappropriate kernel models ) , and as lower - amplitude low - spatial - frequency deviations in the difference image background from zero ( for inappropriate differential background models ) .",
    "we note that if a reliable noise model exists , then the normalised difference image @xmath102 defined by : @xmath103 acts as a useful guide to the level of flux variation in any one pixel , since the pixel values in this image are in units of sigma - deviations .",
    "the purpose of producing a difference image is to enable accurate differential photometry to be performed in the absence of psf crowding for all objects of interest ( constant and variable ) .",
    "the object positions are presumed known from analysis of the reference image or from fitting of the differential flux on the difference image .",
    "in this section , we elucidate the common choices for the kernel basis functions . we stress that since the choice of basis functions is fully independent of the dia framework presented in the previous section , the generation of a set of basis functions may be implemented as code that is completely separate from the dia code .",
    "a98 introduced the _",
    "gaussian basis functions _ as a set of two - dimensional radially - symmetric gaussian functions of different widths , each one modified by a polynomial of the kernel coordinates of a certain degree .",
    "the justifications for this choice are that an instrumental psf is approximated by a gaussian to first order , the convolution of a gaussian by a gaussian is also a gaussian , and that a gaussian decays rapidly beyond a given distance .",
    "the user is required to specify the number of gaussian functions @xmath104 , and then for each gaussian function ( indexed by @xmath105 ) , the user must specify the width @xmath106 and the degree of the modifying polynomial @xmath107 .",
    "it follows that the definition of the @xmath16th kernel basis function corresponding to the @xmath105th gaussian with a modifying polynomial term of degree @xmath108 and degree @xmath109 in the @xmath10 and @xmath11 coordinates , respectively , is given by : @xmath110 where @xmath111 .",
    "the number of kernel basis functions @xmath18 in this prescription is given by : @xmath112    the gaussian basis functions need to be numerically integrated via equation  [ eqn : discrete_ker_basis_func ] to form the corresponding discrete kernel basis functions , and then subsequently they should be transformed as detailed in section  [ sec : spatial_var_ps ] to allow control over the spatial variation of the photometric scale factor .",
    "finally , we note that the adoption of a set of gaussian kernel basis functions does not provide any simplification in the calculation of the basis images @xmath42_{ij}$ ] via equation  [ eqn : discrete_conv ] .",
    "typical specifications for the gaussian basis functions in the literature usually include three gaussian functions , and the isis2.2 software developed by a98 and a00 adopts gaussian widths of 0.7 , 2.0 , and 4.0  pix with modifying polynomials of degrees 6 , 4 , and 3 , respectively , by default , resulting in 53 gaussian basis functions .",
    "@xcite investigated how the optimal choice of gaussian basis functions depends on the properties of the images for which dia is to be performed ( e.g. seeing , s / n , etc . ) , and although they manage to give some general recommendations , there seems to be no unique answer .",
    "it has also been noted by @xcite that the radial symmetry of the gaussian functions may not be appropriate for elliptical psfs , although it would be trivial to expand the gaussian basis function definition in equation  [ eqn : gauss_basis ] to include elliptical two - dimensional gaussians with an arbitrary centre and axis orientation .",
    "let us introduce the definition of the kronecker delta - function @xmath113 : @xmath114 let us also assume that there exists a one - to - one correspondence @xmath115 which associates the @xmath16th kernel basis function with the discrete kernel pixel coordinates @xmath116 such that , without loss of generality , @xmath117 .",
    "then we may directly define the @xmath16th discrete kernel basis function @xmath40 by : @xmath118 where we have already included the transformation as detailed in section  [ sec : spatial_var_ps ] to allow control over the spatial variation of the photometric scale factor .",
    "it is clear that when @xmath119 , @xmath52 obtains the value of 1 at @xmath120 and 0 elsewhere , and that when @xmath121 , @xmath40 obtains the value of 1 at @xmath122 , @xmath1231 at @xmath120 , and 0 elsewhere .",
    "thus @xmath52 adds flux to the psf core , and the other @xmath40 subtract flux from the core and add it back at displaced locations .",
    "we refer to this set of kernel basis functions as the _ delta basis functions_. the set of delta basis functions may be chosen to cover any discrete kernel domain ( e.g. circular - b08 , square - m08 , etc . ) by defining the number of kernel basis functions @xmath18 and the mapping @xmath124 appropriately .",
    "the basis images corresponding to the delta basis functions have a conveniently simple form that may be derived by substituting equation  [ eqn : delta_basis ] into equation  [ eqn : discrete_conv ] and including a product of delta - functions to combine the two cases into one expression : @xmath37_{ij } = r_{(i+\\mu)(j+\\nu ) } + ( \\delta_{\\mu 0 } \\ , \\delta_{\\nu 0 } - 1 ) \\",
    ", r_{ij } \\label{eqn : delta_basis_images}\\ ] ] hence , the first basis image is the reference image itself , and the remaining basis images are each formed by shifting the reference image by the appropriate integer - pixel shift , and then subtracting the non - shifted reference image .",
    "this has important speed and memory implications when implementing the calculation of the least - squares matrix and vector ( see section  [ sec : impl_and_opt ] ) .",
    "b08 introduced the idea of solving directly for the kernel pixel values @xmath125 of a spatially invariant kernel .",
    "we note that if we take @xmath126 for all @xmath16 as an alternative definition for the discrete kernel basis functions in equation  [ eqn : delta_basis ] , then the corresponding basis images are given by @xmath42_{ij } = r_{(i+\\mu)(j+\\nu)}$ ] .",
    "this definition ignores any control that we may wish to exercise over the photometric scale factor , but this is not an issue when considering a spatially invariant kernel ( as in b08 ) .",
    "substitution of this new result for the basis images into equations  [ eqn : least_squares_matrix ]  &  [ eqn : least_squares_vector ] , and assuming that the kernel and differential background are spatially invariant , leads directly to the least - squares matrix and vector derived by b08 from their direct solution approach .",
    "hence , adoption of the delta basis functions in the a98 dia framework is equivalent to solving directly for the kernel pixel values .",
    "a similar line of argument extends this conclusion to spatially variable kernels .",
    "the delta basis functions require minimal information from the user about the kernel shape and size for their specification .",
    "however , the dependence of the optimal kernel shape and size on the reference and target image properties has not yet been investigated , although it is clear that the greater the difference in psf width between the images , the larger the size of the convolution kernel that is required to match the psfs .",
    "the number of delta basis functions , and hence the number of coefficients @xmath21 , grows as the number of kernel pixels , which in turn grows as the square of the kernel radius .",
    "since the least - squares matrix is a square matrix of size @xmath71 by @xmath71 elements , the number of elements to be calculated in the least - squares matrix grows as the kernel radius to the fourth power .",
    "hence , the time taken to calculate the solution for the coefficients @xmath21 and @xmath28 increases considerably when solving for larger kernels .    to address this performance issue",
    ", @xcite introduced the idea of `` binned '' kernel pixels in the outer part of the kernel on the assumption that the kernel shows slower variations of smaller amplitude beyond a certain radius .",
    "specifically , they introduced 3@xmath1273 binned kernel pixels beyond a kernel radius of 7  pix to replace the single kernel pixels , which greatly reduces the number of parameters to be solved for while maintaining a sufficiently large kernel .",
    "for example , for a circular kernel of radius 13  pix , which fits in a square array of 27 by 27 pixels , there are 577 single kernel pixels . adopting the 3@xmath1273 binned kernel pixels beyond a radius of 7  pix results in 233 parameters , of which 177 are single kernel pixels and 56 are 3@xmath1273 binned kernel pixels . the number of elements to be calculated in the least - squares matrix is consequently reduced to @xmath12816% without compromising the extent of the kernel model .",
    "figure  [ fig : ker_pix ] shows the distribution of single ( red ) and 3@xmath1273 binned ( green ) kernel pixels for this example .",
    "we generalise the idea of a binned kernel pixel to that of an _ extended delta basis function _ defined by : @xmath129 where @xmath130 is the set of kernel pixels spanned by the extended delta basis function ( of any shape and spatial distribution ) , and @xmath131 is the number of elements in @xmath130 .",
    "note that we have assumed that the one - to - one correspondence @xmath115 is defined with @xmath117 .",
    "again , we have forced the sum of the extended delta basis function to be unity if it is the first kernel basis function ( @xmath132 ) , and to be zero if it is not ( @xmath121 ) , in order to be able to exercise control over the spatial variation of the photometric scale factor .",
    "the basis image corresponding to the extended delta basis function defined in equation  [ eqn : delta_basis_binned ] is easily derived by substitution into equation  [ eqn : discrete_conv ] : @xmath37_{ij } = \\frac{1}{n_{\\mbox{\\scriptsize pix},q } } \\left [ \\sum_{(r , s ) \\in s_{q } } r_{(i+r)(j+s ) } \\right ]                              + ( \\delta_{\\mu 0 } \\ , \\delta_{\\nu 0 } - 1 ) \\",
    ", r_{ij } \\label{eqn : delta_basis_binned_images}\\ ] ] therefore , this basis image is formed by averaging @xmath131 versions of the reference image with each one shifted by the appropriate integer - pixel shift , and then subtracting the non - shifted reference image ( except if this is the first basis image ) . again , this has important speed and memory implications when implementing the calculation of the least - squares matrix and vector ( see section  [ sec : impl_and_opt ] ) .",
    "we note that the basis images corresponding to the 3@xmath1273 binned kernel pixels from @xcite are formed from integer - pixel shifted versions of a box - car smoothed reference image .",
    "we refer to a set of basis functions as _ mixed - resolution _ if they include any combination of delta basis functions and extended delta basis functions , and we emphasise that extended delta basis functions need not be square and they may be of any shape ( e.g. circles , rectangles , rings , arcs , etc . ) .",
    "we also note that the delta basis function is a special case of the extended delta basis function , and that overlapping extended delta basis functions are acceptable in a set of kernel basis functions as long as none of the extended delta basis functions may be constructed as a linear combination of any of the other kernel basis functions .",
    "if this condition is not met , then the solution for the coefficients in the target image model is degenerate .",
    "finally , we mention that mixed - resolution delta basis functions have the potential to be used in kernels with an adaptive resolution , which is a subject that has not yet been investigated in terms of its application to dia .",
    "so far we have only examined the theory of our general dia formulation .",
    "we now proceed to validate the algorithm using simulated images .",
    "we also demonstrate the ability of the algorithm to correct for a spatially varying differential transparency across the image area using real data .",
    "our first task is to check that the algorithm can recover the exact model coefficients used to generate a set of simulated image data without any artificial noise added to the pixel values . by doing this we are validating our dia formulation by confirming that there are no degeneracies in the target image model that we did not foresee .",
    "we generate a reference image of size 1000@xmath1271000  pix with a constant sky level of 1000  adu and with 5000 stars .",
    "the stars are generated using a gaussian psf with a full - width half - maximum ( fwhm ) of 4  pix , pixel coordinates drawn from a uniform distribution over the detector area , and log - fluxes drawn from a uniform distribution between 2 and 5 ( i.e. stars have fluxes between 10@xmath133 and 10@xmath134  adu ) . the image parameters that we have chosen",
    "are actually not important , and the tests in the absence of artificial noise give the same results so long as there are at least a few stars spread out over the image .",
    "we then generate a set of target images from the reference image using equation  [ eqn : model_lincomb_discrete ] for various sets of kernel basis functions ( gaussian , delta , and mixed - resolution ) and values for the corresponding coefficients , and for all combinations of @xmath58 , @xmath26 , and @xmath135 ( defined in section  [ sec : spatial_var_ps ] ) taken from the set @xmath136 .",
    "we find that when we fit each target image with the model used to generate it , we can recover the exact input values ( to within numerical precision ) of the coefficients @xmath21 and @xmath28 in equation  [ eqn : model_lincomb_discrete ] for all cases .",
    "hence we confirm that our algorithm works and that there are no hidden degeneracies .",
    "next we generate a set of target images from the reference image by convolving the reference image with a spatially varying kernel of polynomial degree @xmath137 with the kernel normalised to a unit sum at each pixel .",
    "then we multiply the convolved reference image with a polynomial surface of degree @xmath138 representing the photometric scale factor and we add a polynomial surface of degree @xmath139 representing the differential background .",
    "we have done this for all combinations of @xmath138 , @xmath139 , and @xmath137 taken from the set @xmath140 . in this",
    "set up , the degree of spatial variation of the kernel shape is actually @xmath141 since the polynomial surface for the photometric scale factor multiplies the kernel pixel values which also spatially vary as a polynomial .",
    "therefore , the appropriate ( linear ) target image model has @xmath142 , @xmath143 , and @xmath144 , and when we adopt such a model we find that we can recover the exact values for the model coefficients ( again to within numerical precision ) .",
    "if we naively set @xmath142 , @xmath143 , and @xmath145 for our target image model , then the algorithm does not manage to perfectly fit the target image , leaving significant residuals .",
    "now we consider how the algorithm performs for simulated images with added artificial noise .",
    "we adopt the same reference image as before and we use delta basis functions with @xmath146 and @xmath147 for all @xmath121 .",
    "we define the kernel model to be a square array of 7@xmath1277 pixels .",
    "the target image model coefficients are arbitrarily chosen and specifically we set @xmath148 for @xmath149 . also , we define @xmath150 and set @xmath151 .",
    "we then use all of these definitions in equation  [ eqn : model_lincomb_discrete ] to generate a noiseless target image @xmath152 .    from the noiseless target image @xmath152",
    ", we generate 10@xmath153 noisy versions .",
    "each noisy target image @xmath2 is formed by generating a 1000@xmath1271000 pixel image @xmath154 of values drawn from a normal distribution with zero mean and unit @xmath155 , and then computing : @xmath156 where the coefficient of @xmath154 is derived from equation  [ eqn : noise_model ] for @xmath157  e@xmath87/adu and @xmath158 .",
    "we adopt a reasonable value for the readout noise of @xmath159  adu . for each noisy target image",
    ", we fit the same model used to generate the noiseless target image , employing the iterative scheme described in section  [ sec : uncert_and_iter ] ( but without sigma - clipping ) .    in the plots along the diagonal of figure  [ fig : parhist ] ,",
    "we show the distributions of the coefficients @xmath160 for @xmath149 and @xmath161 as derived from the fits to the 10@xmath153 noisy target images .",
    "the red and black histograms represent the coefficient distributions after the first and third iterations , respectively , and the reason for iterating the solution is clear ; namely , approximating @xmath32 with @xmath2 in the noise model in equation  [ eqn : noise_model ] in the first iteration introduces a significant bias into the fitted coefficients ( in this example @xmath161 is underestimated by @xmath1281  adu or @xmath1281% ; see also appendix  b ) .",
    "we also report in the plots the measured mean and standard deviation of each coefficient distribution after the third iteration .",
    "the measured means of the coefficient distributions are an excellent match to the input coefficient values ( no differences to at least 5 significant figures ) , and the measured standard deviations are an excellent match to the formal uncertainties in the coefficients reported by the algorithm ( calculated via equation  [ eqn : sol_uncertainties ] and displayed as `` sigma '' ) . for the coefficient distributions after the third iteration , we fit a gaussian with mean and sigma equal to the corresponding input coefficient value and the formal uncertainty in the coefficient , respectively , and we plot the gaussian fits as the blue curves .",
    "one can see that the coefficient distributions follow the gaussian distributions very well .    in the off - diagonal plots of figure  [ fig : parhist ]",
    ", we show scatter plots for all of the coefficient pairs that can be formed from @xmath162 , @xmath163 , @xmath164 , and @xmath161 using the results of the fits to the 10@xmath153 noisy target images .",
    "the red and black points represent the fitted coefficients after the first and third iterations , respectively . in each plot",
    "we also display the formal 1@xmath155-error ellipses ( blue curves ) as provided by the covariance matrix of the fit ( see section  [ sec : fit_target_im_model ] ) .",
    "it is encouraging to see that there are virtually no correlations between the target image model coefficients @xmath162 , @xmath163 , and @xmath164 associated with the spatial variation of the photometric scale factor , or between the differential background coefficient @xmath161 and @xmath163 or @xmath164 . also , as expected , there is a strong anti - correlation between the zeroth - order coefficients for the photometric scale factor and the differential background , @xmath162 and @xmath161 .",
    "the anti - correlation between @xmath162 and @xmath161 is a well - known feature of dia that occurs when the reference image includes a non - zero background level .",
    "the kernel basis functions with non - zero sums in the target image model ( equation  [ eqn : model_lincomb_discrete ] ) serve to blur _ and scale _ the reference image , including the background level , and hence the model terms for the differential background must compensate for this effect in the opposite sense .",
    "the consequence is that if the photometric scale is overestimated , then the differential background will be underestimated to compensate , and vice versa . to minimise the amplitude of this anti - correlation , we recommend subtracting the sky background from the reference image before applying dia ( as suggested by b08 in their section  2.2 ) , a procedure which could also include the subtraction of the spatially varying components of the background ( i.e. to flatten the background ) .",
    "the results of our investigations in this section lead us to conclude that our dia algorithm is working exactly as expected for simulated images with added artificial noise .      we demonstrate our dia algorithm using a pair of calibrated images from a commercial telescope ( celestron 8-inch schmidt - cassegrain @xmath165  mm ) and ccd camera ( kodak kaf-1603me ) with a pixel scale of @xmath1281.8  arcsec / pix , a fov of 0.26@xmath1270.26  degrees , and no filter .",
    "we designate one of the images as the reference image and the other as the target image .",
    "since both images are undersampled , it is necessary to pre - blur them before applying dia .",
    "we blur the reference and target images with gaussian convolution kernels of fwhms 3.5 and 4.0  pix , respectively .",
    "the target image was chosen specifically because it was taken through light clouds .",
    "we cropped the images appropriately in order to register them to the nearest pixel .",
    "we display the reference and target images in the top two panels of figure  [ fig : images ] with the same linear scale and dynamic range of 700  adu .",
    "the black regions are masked pixels that cover saturated stars .",
    "to the right of each image , we show three magnified image stamps corresponding to the red boxes marked in each image .",
    "these image stamps contain some of the brightest stars in the images which are most suitable for inspecting the quality of the difference images in the following tests .",
    "we proceed to fit the target image using the reference image and a set of delta basis functions representing a square kernel array of size 9@xmath1279  pixels . after some experimentation with different values for @xmath58 , @xmath26 , and @xmath135 , we find that the differential background is only satisfactorily modelled for @xmath166 .",
    "the resulting difference images for each combination of @xmath58 and @xmath135 taken from the set @xmath167 and with @xmath168 are displayed in the middle four panels of figure  [ fig : images ] , all with the same linear scale .",
    "the complicated residuals in the differential sky background are apparent in all cases .    for @xmath169 ,",
    "the dominant residuals at the star positions show an under - subtraction of the star fluxes towards the top - right of the difference image , and an over - subtraction of the star fluxes towards the bottom - left , which is clearly due to the presence of spatial transparency variations that are not modelled by the spatially invariant photometric scale factor .",
    "this is also the case for @xmath170 , but since the kernel model is allowed to vary in shape across the image area , the zero - sum delta basis functions try to mitigate the spatial transparency variations by moving flux from the reference image background to the star psf for those stars whose fluxes are under - subtracted , and by moving flux from the star psf to the reference image background for those stars whose fluxes are over - subtracted , resulting in smaller residuals at the star positions but with the residuals spread out over a larger area .",
    "this is most visible in the image stamps on the right which still show under- and over - subtraction of the star fluxes , but spread out over more pixels . setting @xmath171",
    "successfully removes the under- and over - subtraction of the star fluxes from the difference images , but instead leaves positive - negative residuals at each star position whose orientation is a function of position , which is a consequence of not modelling spatial variations in the kernel shape .",
    "adopting @xmath172 produces difference images where only the brightest stars can be seen to be mildly under- or over - subtracted , which is a much better result than what current dia algorithms are capable of producing ( i.e. the @xmath170 case ) .",
    "it is quite possible that further improvements in the difference image residuals may be obtained by adopting even higher polynomial degrees for @xmath58 , @xmath26 , and @xmath135 , but a full optimisation of the production of the difference image in our example is outside of the scope of this paper .    in the bottom two panels of figure  [ fig : images ] , we reproduce the fitted photometric scale factor and differential background as a function of position over the image area which show that the atmospheric transparency diminishes and the sky background brightens for the parts of the target image that are more affected by clouds .",
    "this result is to be expected since clouds attenuate the incoming light from outside the earth s atmosphere , but they also increase the local sky brightness by scattering ambient light ( e.g. light pollution , moon light , etc . ) back to the ground .",
    "however , to be absolutely sure that this observed anti - correlation is not an artefact of our modelling procedure , we performed the following test .",
    "we cut out ten well - distributed image stamps around bright stars from the reference image , and we also cut out the corresponding stamps from the target image . for each pair of image stamps",
    ", we proceeded to fit the target image stamp using the reference image stamp and the same kernel configuration that we used to model the full target image , and we adopted a spatially invariant kernel and differential background ( i.e. @xmath173 ) .",
    "we compared the photometric scale factor and the differential background derived from each fit , which represent robust local estimates of these quantities , to the predicted values of these quantities at the stamp coordinates from our model for the full target image , and we found a very good agreement ( to within @xmath1282 - 4 per cent ) .",
    "this confirms that the results from our new dia algorithm are fully consistent with the results that can be obtained using current dia algorithms .",
    "this real data example has served as a proof - of - concept where we have demonstrated that we can use our dia algorithm to successfully model a spatially varying photometric scale factor .",
    "we have also shown how the results of solving for a spatially invariant kernel and differential background for small image sub - regions ( stamps ) in different parts of the image can be used to perform consistency checks on the solution for the target image model from our dia algorithm .",
    "producing difference images is a very computationally intensive task , especially when modelling a spatially varying kernel as we have described in section  [ sec : general_sol ] .",
    "however , many applications of dia require quick ( within seconds or minutes ) processing of the target images ( e.g. robotic searches for anomalies in microlensing events towards the galactic bulge - robonet - ii - @xcite , supernovae searches - palomar transient factory - @xcite , etc . ) .",
    "hence the optimisation of the calculations required to produce the difference images is an important aspect of dia . in the following subsections ,",
    "we describe some useful optmisation tricks that may be used to obtain some substantial improvements in speed , and that have the potential to rival brute force dia implementations on graphical processing units ( gpus ; @xcite ) .",
    "firstly we consider what information needs to be stored in computer memory to enable the efficient calculation of the least - squares matrix @xmath65 and vector @xmath67 , and the target image model @xmath32 .",
    "we limit ourselves to considering arrays that are of the size of the target image , since the other information that needs to be stored in computer memory ( e.g. the discrete kernel basis functions @xmath40 ) takes up negligible space in comparison .    for efficiency ,",
    "we need to pre - calculate and store in computer memory those images that will be used more than once in the calculation of the difference image . in the general case , these images are the target image @xmath2 , the reference image @xmath1 , the inverse - variance image @xmath174 , the @xmath18 basis images @xmath42_{ij}$ ] , and the @xmath175 polynomial images of the spatial coordinates @xmath176 for @xmath177 .",
    "if @xmath178 is the maximum degree of the polynomial spatial variation of the kernel basis function coefficients and the differential background , then the maximum degree of the polynomial images of the spatial coordinates in the least - squares matrix @xmath65 is @xmath179 ( see equation  [ eqn : least_squares_matrix ] ) , which implies that : @xmath180 - 1 = d_{\\mbox{\\scriptsize max } } ( 2 d_{\\mbox{\\scriptsize max } } + 3 ) \\label{eqn : npoly}\\ ] ]    for the gaussian basis functions , with the typical choice of 53 such functions ( see section  [ sec : gauss_basis ] ) , it is perfectly feasible to store all of the corresponding basis images in computer memory ( e.g. 53 floating point 2000@xmath1272000 pixel images take up @xmath128831  mb of memory using idl ) .",
    "furthermore , the spatial variation of the kernel basis function coefficients is not usually modelled with a higher degree polynomial than a cubic polynomial , and a cubic polynomial variation requires @xmath181 .",
    "again , it is possible to store all of the required @xmath182 images in computer memory ( e.g. 83 floating point 2000@xmath1272000 pixel images take up @xmath1281280  mb of memory using idl ) .    for the delta basis functions , a typical circular kernel of radius 10  pix generates 349 basis images , which is a more problematic number of images to store in the computer memory ( especially for a 32-bit machine ) .",
    "however , the basis images for the delta basis functions may be generated without performing a computationally - costly convolution by simply subtracting the reference image from a shifted version of itself ( see equation  [ eqn : delta_basis_images ] ) .",
    "hence , if one is prepared to recalculate each basis image as needed , and assuming that up to 27 polynomial images are required , then only @xmath183 images need to be stored in computer memory .",
    "similarly , using the same approach for mixed - resolution delta basis functions with @xmath184 resolutions only requires the storage of @xmath184 versions of the reference image , each one produced by convolving the original reference image with a box - car of the shape of the relevant extended delta basis function .      by far",
    ", most of the arithmetic operations required to fit the target image model and produce a difference image are performed in the construction of the least - squares matrix @xmath65 and vector @xmath67 .",
    "in fact , assuming that the inverse - variance , basis , and polynomial images are pre - calculated , and that @xmath185 is the polynomial degree of spatial variation of each kernel basis function and the differential background , then there are @xmath186 coefficients to be determined , and brute force computation of @xmath65 requires the calculation of @xmath187 entries , where the vast majority of these entries require @xmath188 multiplications and @xmath189 additions ( note that @xmath190 is the number of target image pixels that are being modelled ) .",
    "furthermore , @xmath67 requires the computation of another @xmath71 entries , where again the vast majority of these entries require @xmath188 multiplications and @xmath189 additions .",
    "hence , the number of arithmetic operations @xmath191 for the brute force computation of @xmath65 and @xmath67 , normalised by @xmath190 , is given by : @xmath192    we have already mentioned in section  [ sec : input ] that limiting the target image pixels to be used in calculating @xmath65 and @xmath67 to a set of suitable image sub - regions minimises the number of required arithmetic operations for minimal loss of precision on the coefficients in the target image model .",
    "this clearly follows from the discussion in the previous paragraph .",
    "we have also noted in section  [ sec : fit_target_im_model ] that @xmath65 is symmetric .",
    "this means that in reality only @xmath193 entries in @xmath65 need to be calculated , and that the number of arithmetic operations reduces to : @xmath194    now we consider the order in which we may efficiently calculate the entries of @xmath65 and @xmath67 , and since @xmath65 has the much larger number of entries , our choice is driven by the structure of @xmath65 .",
    "note that in the following , we treat the differential background as having a corresponding basis image set to unity at all pixels ( see section  [ sec : target_im_model ] ) .",
    "inspection of equation  [ eqn : least_squares_matrix ] for @xmath65 reveals that one has the choice of either :    1 .   for each of the @xmath195 polynomial images , cycle through the @xmath196 pairs of basis images to calculate the corresponding @xmath196 and @xmath197 entries in @xmath65 and @xmath67 , respectively .",
    "2 .   for each of the @xmath196 pairs of basis images , cycle through the @xmath195",
    "polynomial images to calculate the corresponding @xmath198^{2}$ ] and @xmath199 entries in @xmath65 and @xmath67 , respectively .",
    "we note that to calculate each entry in @xmath65 , a pair of basis images needs to be multiplied together before performing the required summation , whereas the polynomial images are already pre - calculated from the coordinate images in computer memory , and therefore option  ( ii ) is the most efficient because it minimises the number of the image multiplications that are required .",
    "furthermore , in the case of the delta basis functions , the basis images are calculated as needed , and therefore option  ( ii ) also minimises the number of times that each basis image must be calculated .",
    "having justified the choice of option  ( ii ) for the order in which we should calculate the entries of @xmath65 and @xmath67 , we adopt a corresponding parameter ordering in the parameter vector @xmath66 that leads to the structure for @xmath65 that we illustrate in figure  [ fig : matrix_layout ] for @xmath200 ( artificially small for clarity ) and @xmath201 . the matrix @xmath65 is made up of @xmath196 square sub - matrices ( top panel of figure  [ fig : matrix_layout ] ) , where each sub - matrix corresponds to the product of a single basis image pair @xmath42_{ij } \\ , [ r \\otimes \\kappa_{q^{\\,\\prime}}]_{ij}$ ] .",
    "furthermore , each square sub - matrix has @xmath202^{2}$ ] entries , where each entry corresponds to a different polynomial image .",
    "however , within a single sub - matrix , there are only @xmath203 independent entries ( equation  [ eqn : npoly ] ; bottom panel of figure  [ fig : matrix_layout ] ) .",
    "in our specific example for @xmath201 , there are 15 independent entries out of 36 entries in each sub - matrix ( i.e. less than half of the entries need to be calculated ) .",
    "the discovery of this property of @xmath65 is exceptionally important because it greatly decreases the number of required calculations .",
    "neither m08 nor @xcite mention this optimisation , and a00 claim that the full modelling of the spatial variation of the kernel `` quickly becomes intractable '' , and that `` order 3 requires roughly 100 times more calculations than a constant kernel solution '' .",
    "we find that capitalising on the pattern in the sub - matrices of @xmath65 for a spatial variation of the kernel of degree 3 , one would only require @xmath204 times more calculations than for a constant kernel solution , which is a very significant improvement in the potential performance of the algorithm .",
    "we are now in a position to develop an optimised algorithm for computing @xmath65 and @xmath67 .",
    "we propose the following procedure :    1 .   for each row of square sub - matrices in @xmath65 , carry out steps ( ii)-(vii ) , and then finish .",
    "2 .   calculate @xmath42_{ij } \\ , / \\",
    ", \\sigma_{ij}^{2}$ ] and @xmath205_{ij } \\ , / \\ , \\sigma_{ij}^{2}$ ] for the current row , which requires @xmath206 multiplications .",
    "3 .   for each sub - matrix in the current row that lies on the diagonal or in the upper half of @xmath65 , carry out steps ( iv)-(v ) , and then move on to step ( vi ) .",
    "4 .   calculate @xmath42_{ij } \\ , [ r \\otimes \\kappa_{q^{\\,\\prime}}]_{ij } \\ , / \\ , \\sigma_{ij}^{2}$ ] for the current sub - matrix , which requires @xmath190 multiplications .",
    "5 .   for each pre - calculated polynomial image , calculate the expression @xmath207_{ij } \\ , [ r \\otimes \\kappa_{q^{\\,\\prime}}]_{ij } \\ , / \\ , \\sigma^{2}_{ij}$ ] , which requires @xmath190 multiplications ( except for @xmath208 ) and @xmath189 additions , and fill out the relevant entries of the current sub - matrix .",
    "fill out the entries of the sub - matrices in the current row that lie in the lower half of @xmath65 by using the fact that @xmath65 is symmetric , which takes a negligible number of operations",
    ". 7 .   for each relevant pre - calculated polynomial image , calculate the expression @xmath209_{ij } \\ , / \\ ,",
    "\\sigma^{2}_{ij}$ ] , which requires @xmath190 multiplications ( except for @xmath210 ) and @xmath189 additions , and fill out the corresponding entries in @xmath67 .",
    "we now attempt to estimate the number of arithmetic operations that are required to calculate @xmath65 and @xmath67 using our optimised algorithm .",
    "observe that step ( ii ) is repeated @xmath197 times , steps ( iv ) and ( v ) are each repeated @xmath211 times of which step ( v ) requires @xmath212 arithmetic operations , and step ( vii ) is repeated @xmath197 times and requires @xmath213 - n_{\\mbox{\\scriptsize pix}}$ ] arithmetic operations . using @xmath214 , then we derive the number of arithmetic operations in our optimised algorithm , normalised by @xmath190 , to be : @xmath215 \\label{eqn : nop_opt}\\ ] ]    in figure  [ fig : algo_perf ] , for @xmath2160 , 1 , 2 , and 3 , we plot in black the ratio of the expression in equation  [ eqn : nop_opt ] to the expression in equation  [ eqn : nop_brute ] as a function of the kernel radius ( pix ) for a set of delta basis functions representing a circular kernel .",
    "we see that for typical kernel radii of @xmath1288 - 12  pix , we expect that our optimised algorithm will reach an efficiency in the number of arithmetic operations of @xmath1280.251 , 0.167 , 0.104 , and 0.070 compared to the brute force computation for @xmath2160 , 1 , 2 , and 3 , respectively . also , in figure  [ fig : algo_perf ] , for @xmath2160 , 1 , 2 , and 3 , we plot in red the ratio of the expression in equation  [ eqn : nop_opt ] to the expression in equation  [ eqn : nop_sym ] as a function of the kernel radius ( pix ) for the same set of delta basis functions .",
    "we further conclude that our optimised algorithm will reach an efficiency in the number of arithmetic operations of @xmath1280.501 , 0.334 , 0.209 , and 0.140 compared to the brute force computation that capitalises on the symmetry in @xmath65 for @xmath2160 , 1 , 2 , and 3 , respectively .",
    "the general framework presented in this paper treats the problem of matching the psf , photometric scaling , and sky background between two images , where each of these components varies as a polynomial of the spatial coordinates . where this paper improves over previous works on dia are as follows :    *",
    "we demonstrate how to model a spatially varying photometric scale factor within our framework , which is a new concept that will be important for dia applied to wide - field imaging data that may suffer transparency and airmass variations across the field - of - view . *",
    "we show how to decouple the spatial variation of each kernel basis function , the photometric scale factor , and the differential background from each other , which allows more control over the level of spatial variation of each component in the target image model . * in section  [ sec : general_sol ] we develop what we hope is a clear notation and logical order for the dia equations and methodology aimed at aiding others in creating dia software implementations .",
    "* we prove the equivalence of adopting delta basis functions for the kernel model and solving directly for the kernel pixel values ( b08 ) .",
    "* we introduce the mixed - resolution delta basis functions with the aim of reducing the size of the least - squares problem to be solved when using delta basis functions , and we elucidate their properties and implications for dia .",
    "* we present some important optimisations in the calculation of the least - squares matrix which lead to a reduction in the number of arithmetic operations that need to be performed for typical kernel radii of @xmath1288 - 12  pix to @xmath12816.7% , @xmath12810.4% , and @xmath1287.0% compared to the brute force computation for linear , quadratic , and cubic spatial variations , respectively , of the target image model .",
    "dedicated to my three stars @xmath217 .",
    "the research leading to these results has received funding from the european union seventh framework programme ( fp7/2007 - 2013 ) under grant agreement numbers 229517 and 268421 .",
    "we thank the qatar foundation for support via qnrf grant nprp-09 - 476 - 1 - 78 .",
    "here we show that the convolution of the reference image @xmath1 with a continuous kernel basis function @xmath15 may be calculated as a discrete convolution .",
    "firstly , consider the definition of continuous convolution applied to the convolution of the reference ( x , y ) = \\int_{-\\infty}^{\\infty } \\int_{-\\infty}^{\\infty } \\ !",
    "r(x+u , y+v ) \\ , \\kappa_{q}(u , v ) \\,\\ , \\text{d}u \\,\\ , \\text{d}v \\label{eqn : append_a1}\\ ] ] where @xmath218 is a continuous representation of the reference image .    over",
    "the area of one pixel with coordinates @xmath7 , the value of the reference image is a constant , i.e. @xmath219 for + @xmath220 and @xmath221 , and therefore : @xmath37(x_{i},y_{j } ) = \\sum_{rs } r_{(i+r)(j+s ) }                        \\int_{s - \\frac{1}{2}}^{s + \\frac{1}{2 } } \\int_{r - \\frac{1}{2}}^{r + \\frac{1}{2 } } \\ ! \\kappa_{q}(u , v ) \\,\\ , \\text{d}u \\,\\ , \\text{d}v \\label{eqn : append_a2}\\ ] ] where @xmath38 and @xmath39 are integer indices varying over the domain where the kernel basis function achieves non - zero values .    adopting the notation @xmath42_{ij}$ ] for the image @xmath42(x_{i},y_{j})$ ] , then we may write : @xmath37_{ij } = \\sum_{rs } r_{(i+r)(j+s ) } \\ , \\kappa_{qrs } \\label{eqn : append_a3}\\ ] ] @xmath222 where @xmath38 and @xmath39 now represent the pixel indices corresponding to the column @xmath38 and row @xmath39 of the discrete kernel basis function @xmath40 .",
    "hence , the image @xmath42(x , y ) = [ r \\otimes \\kappa_{q}]_{ij}$ ] , which we refer to as a _ basis image _ , may be calculated via the discrete convolution defined in equation  [ eqn : append_a3 ] .",
    "we wish to briefly investigate the consequences of approximating @xmath32 with @xmath2 in the noise model in equation  [ eqn : noise_model ] as opposed to iterating the solution and using the current image model from equation  [ eqn : model_lincomb_discrete ] to update the noise model at each iteration . for this purpose",
    "we use the software developed in b08 for the case of a kernel and differential background that are both spatially invariant .    we create a 205@xmath127205  pixel noiseless reference image @xmath1 by setting a constant sky level of 1000  adu and adding in 100 objects , each of flux 10@xmath134  adu and with a two - dimensional gaussian profile of fwhm 4  pix , at random spatial coordinates drawn from a uniform distribution across the image area .",
    "we also create a 201@xmath127201  pixel noiseless target image @xmath152 by convolving the @xmath1 with a discrete 5@xmath1275  pixel kernel calculated via numerical integration of equation  [ eqn : discrete_ker_basis_func ] for a two - dimensional gaussian of fwhm 2  pix centred at the kernel centre and normalised to a sum of unity .      1 .",
    "we generate a 201@xmath127201  pixel image @xmath154 of values drawn from a normal distribution with zero mean and unit @xmath155 , and we construct a noisy target image @xmath2 via : @xmath156 where the coefficient of @xmath154 is derived from equation  [ eqn : noise_model ] for @xmath157  e@xmath87/adu and @xmath158 .",
    "2 .   we solve for a kernel and differential background that are both spatially invariant to match the reference image @xmath1 to the target image @xmath2 .",
    "for the kernel model , we adopt 25 delta basis functions covering a 5@xmath1275  pixel array to match the actual domain of the discrete pixel kernel used to generate @xmath152 from @xmath1 . for the target image noise model",
    "@xmath63 we use equation  [ eqn : noise_model ] with @xmath32 approximated by @xmath2 .",
    "3 .   we record the photometric scale factor @xmath223 and differential background @xmath224 of the solution obtained in step  ( ii ) .",
    "we iterate the solution for the spatially invariant kernel and differential background three times ( sufficient for convergence ) , each time using the current image model @xmath32 calculated via equation  [ eqn : model_lincomb_discrete ] to set the target image noise model @xmath63 via equation  [ eqn : noise_model ] . 5 .",
    "again we record the photometric scale factor @xmath225 and differential background @xmath226 of the solution obtained during the final iteration in step  ( iv ) .",
    "we repeat the above experiment 10@xmath134 times and calculate the mean and standard deviation of each of the quantities @xmath223 , @xmath224 , @xmath225 , and @xmath226 .",
    "we find that @xmath227 and @xmath228  adu , where the uncertainty in the mean is estimated from the standard deviation divided by @xmath229 .",
    "the correct solution in our experiment should have a photometric scale factor of unity and a differential background of zero .",
    "clearly , solving the dia problem using the data to estimate the uncertainties on the pixel values in the target image introduces a bias of @xmath1281  adu in the differential background ( and a very slight bias in the photometric scale factor ) .",
    "hence one can not assume that the background in the difference images produced using this method is zero , and aperture photometry on such difference images should include the computation and subtraction of a local background , and psf photometry should include the local background as a parameter in the fit . the bias in the differential background solution , which corresponds to an underestimated sky background in the target image model , is easily explained by the fact that the background pixels in the target image that randomly have smaller values than the true sky background are given more weight ( or smaller uncertainties ) in the fit than those background pixels that randomly have larger values than the true sky background .",
    "for the case where we iteratively solve the dia problem using the current image model to determine the uncertainties on the target image pixel values at each iteration , we find that @xmath230 and @xmath231  adu . therefore , at the precision of our experiment ( which is well beyond the photometric precision typically obtained for real data ) , we conclude that there is no bias in the derived photometric scale factor or differential background for this method , which validates the iterative method presented in section  [ sec : uncert_and_iter ] .",
    "finally we mention that even though we only report one particular experiment in this appendix , we actually performed a range of experiments on artificial noisy target images generated with different set - ups ( e.g. different convolution kernels ) and we found similar results in all cases ."
  ],
  "abstract_text": [
    "<S> we present a general framework for matching the point - spread function ( psf ) , photometric scaling , and sky background between two images , a subject which is commonly referred to as difference image analysis ( dia ) . </S>",
    "<S> we introduce the new concept of a spatially varying photometric scale factor which will be important for dia applied to wide - field imaging data in order to adapt to transparency and airmass variations across the field - of - view . </S>",
    "<S> furthermore , we demonstrate how to separately control the degree of spatial variation of each kernel basis function , the photometric scale factor , and the differential sky background . </S>",
    "<S> we discuss the common choices for kernel basis functions within our framework , and we introduce the mixed - resolution delta basis functions to address the problem of the size of the least - squares problem to be solved when using delta basis functions . </S>",
    "<S> we validate and demonstrate our algorithm on simulated and real data . </S>",
    "<S> we also describe a number of useful optimisations that may be capitalised on during the construction of the least - squares matrix and which have not been reported previously . </S>",
    "<S> we pay special attention to presenting a clear notation for the dia equations which are set out in a way that will hopefully encourage developers to tackle the implementation of dia software .    </S>",
    "<S> [ firstpage ]    methods : statistical - techniques : image processing - techniques : photometric </S>"
  ]
}
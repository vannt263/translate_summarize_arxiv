{
  "article_text": [
    "spike train distances are measures of the degree of synchrony between spike trains which yield low values for very similar and high values for very dissimilar spike trains .",
    "they are applied in two major scenarios : simultaneous and successive recordings .",
    "the first scenario is the _ simultaneous _ recording of a neuronal population , typically in a spatial multi - channel setup .",
    "if different neurons emit spikes at the same time , these spikes are truly ` synchronous ' ( greek : ` occurring at the same time ' ) .",
    "synchronization between individual neurons has been proven to be of high prevalence in many different neuronal circuits @xcite . as of now , many open questions remain regarding the spatial scale and the nature of interactions ( pairwise or higher order , see @xcite , @xcite ) as well as their functional significance for neuronal coding and information processing @xcite .    in the second scenario the neuronal spiking response is recorded in different time intervals . in order to allow a meaningful comparison there has to be a temporal reference point which is typically set by some kind of trigger ( e.g. , the onset of an external stimulation ) .",
    "there are two prominent applications for this _ successive _ trials scenario .",
    "repeated presentation of the same stimulus addresses the reliability of individual neurons @xcite , while different stimuli are used to investigate neuronal coding and to find the features of the response that provide the optimal discrimination ( e.g. , @xcite , @xcite , for a more general introduction to neural coding cf .",
    "@xcite , @xcite ) .",
    "these two applications are related since for a good clustering performance one needs both a pronounced discrimination between stimuli ( high inter - stimulus spike train distances ) and a high reliability for the same stimulus ( low intra - stimulus spike train distances ) .",
    "electrophysiology and other modern recording techniques are developing fast .",
    "for both simultaneous population and successive trial recordings they often provide more data than available methods of spike train analysis can handle .",
    "there is a lack of algorithms able to identify multiple spike train patterns across different spatial scales and with a high temporal resolution .",
    "this is noticeable in both scenarios . in epilepsy ,",
    "the analysis of the varying similarity patterns of _ simultaneously _ recorded ensembles of neurons can lead to a better understanding of the mechanisms of seizure generation , propagation , and termination @xcite . similarly , the analysis of neuronal responses to _ successive _ presentations of time - dependent stimuli will help to understand the relevance of synchronous firing in neural coding @xcite .",
    "moreover , in population recordings it would be even more advantageous to be able to monitor spike train synchrony in realtime .",
    "this would be a necessary condition for a prospective epileptic seizure prediction algorithm @xcite , but it could also be very useful for the rapid online decoding needed to control prosthetics @xcite .    in recent years",
    ", two such time - resolved measures have been proposed : the isi - distance @xcite and the spike - distance @xcite both rely on instantaneous estimates of spike train dissimilarity which makes it possible to track changes in instantaneous clustering , i.e. , time - localized patterns of ( dis)similarity among multiple spike trains .",
    "additionally , both measures are parameter - free and time - scale independent .",
    "furthermore , the spike - distance also comes in a causal variant @xcite which is defined such that the instantaneous values of dissimilarity are derived from past information only so that time - resolved spike train synchrony can be estimated in real - time .",
    "both measures have already been widely used in various contexts ( e.g. , for the most recent measure , the spike - distance : @xcite , @xcite ; @xcite , @xcite ; @xcite , @xcite ) . another time - scale independent and time - resolved method is event synchronization @xcite , a sophisticated coincidence detector which quantifies the level of synchrony from the number of quasi - simultaneous appearances of spikes .",
    "originally , it was proposed and used in a bivariate context only . in this paper",
    "it is adapted to the time - resolved spiky - framework and extended to the multivariate case . since this involves substantial changes of the original event synchronization , to avoid confusion we term the new , modified measure spike - synchronization .    with all of these measures",
    "spike trains can be analyzed on different spatial and temporal scales , accordingly there are several levels of information extraction @xcite . in the most detailed representation one instantaneous value",
    "is obtained for each pair of spike train .",
    "the most condensed representation successive temporal and spatial averaging leads to one single distance value that describes the overall level of synchrony for a group of spike trains over a given time interval . in between these two extremes",
    "are spatial averages ( dissimilarity profiles ) and temporal averages ( pairwise dissimilarity matrices ) .",
    "this variety of representations makes a straightforward implementation of the measures in one simple program / function unfeasible .",
    "other important goals are high computational speed , efficient memory management , and applicability to large datasets .",
    "what is needed is an intuitive and interactive tool for analyzing spike train data which is able to overcome all of these challenges .",
    "here we address this need and present the graphical user interface spiky . given a set of real or simulated spike train data ( importable from many different formats ) , spiky calculates the measures of choice and allows the user to switch between many different visualizations such as measure profiles , pairwise dissimilarity matrices , or hierarchical cluster trees .",
    "spiky also includes the possibility of generating movies which are very useful in order to track the varying patterns of ( dis)similarity .",
    "spiky has been optimized with respect to both computation speed ( by using mex - files , i.e. c - based matlab executables ) and memory demand ( by taking advantage of the piecewise linear nature of the dissimilarity profiles ) .",
    "finally , the spiky - package includes two complementary programs .",
    "the first program spiky_loop is meant to be used for the analysis of a large number of datasets .",
    "the second program spiky_loop_surro is designed to evaluate the statistical significance of the results obtained for the original dataset by comparing them against the results of spike train surrogates generated from that dataset .",
    "the remainder of this paper is organized as follows . in section [",
    "s : measures ] we present the different measures available in spiky and provide some details about their implementation .",
    "these measures include the isi - distance and the spike - distance as well as the latter s realtime variant , and , introduced here , its forward variant ( section [ ss : isi - spike - distance ] ) . for the spike - distance",
    "we propose a correction of the edge - effect ( spurious decrease to zero due to auxiliary spikes ) . in section [ ss : spike - synchronization ]",
    "we introduce spike - synchronization , the modified and extended variant of event synchronization .",
    "some improvements realized in the new implementation of the measures are presented in section [ ss : comparison ] . in the same section",
    "we also compare the performance of this new implementation with the one of previously published source codes . in section [",
    "s : information - extraction ] an overview of the different ways to extract information is given .",
    "spiky , our graphical user interface for monitoring spike train synchrony , is presented in section [ s : spiky ] . in section [ ss :",
    "access ] we explain how to get access to the gui and its documentation .",
    "subsequently , in section [ ss : structure ] we introduce the structure and the workflow of spiky , in particular we show how to input spike train data , how to change the layout of the figures and how to export results .",
    "the two complementary programs spiky_loop and spiky_loop_surro are introduced in sections [ ss : gui - vs - loop ] and [ ss : spike - train - surrogates ] , respectively . finally , in section [ s : discussion ] we summarize the methods and the program and present an outlook on future developments .",
    "spiky implements four time - resolved measures , one is multivariate and three are bivariate .",
    "the multivariate measure , included for comparison , is the standard peri - stimulus time histogram ( psth ) which measures the overall firing rate . in this section",
    "we give an overview over the three bivariate measures , for more detailed illustrations please refer to the original publications .",
    "the isi - distance @xcite , the spike - distance @xcite , and the here newly proposed spike - synchronization ( based on event synchronization , @xcite , @xcite ) share several properties , however , there are also a few conceptual differences between the isi- and the spike - distance on the one hand , and spike - synchronization on the other hand .",
    "all three measures rely on instantaneous values which are normalized between zero and one .",
    "the same holds true for the respective temporal averages , the distance values @xmath0 and @xmath1 and the spike - synchronization @xmath2 .",
    "however , while the two distances are measures of dissimilarity which yield the value zero for identical spike trains , spike - synchronization is a measure of similarity with high values denoting similar spike trains .    while all three measures are time - resolved , the isi - distance and the spike - distance even have a continuous domain since there exists a unique definition of an instantaneous value ( @xmath3 and @xmath4 , respectively ) for every single time instant .",
    "the resulting dissimilarity profiles are either piecewise constant ( isi - distance ) or piecewise linear ( spike - distance ) .",
    "spike - synchronization is time - resolved as well , however , its domain is discrete since instantaneous values @xmath5 are only defined at the times of the spikes .",
    "incidentally , the same distinction holds true regarding the range of values that can be obtained for the measures : it is continuous for the two distances and discrete for spike - synchronization .",
    "all three measures can also be applied to more than two spike trains ( spike train number @xmath6 ) . for the isi- and the spike - distance",
    "this extension is simply the average over all bivariate distances .",
    "extending spike - synchronization is even more straightforward .",
    "essentially , the same spike - based definition holds for both the bivariate and the multivariate case .",
    "the first step in the calculation of the isi- and the spike - distance is to transform the sequences of discrete spike times @xmath7 and @xmath8 ( with @xmath9 denoting the number of spikes for spike train @xmath10 with @xmath11 ) into dissimilarity profiles @xmath3 and @xmath4 , respectively . averaging over time yields the respective distance value .",
    "the multivariate extension is obtained as the average over all bivariate distances . since this average over all pairs of spike trains commutes with the average over time , it is possible to achieve the same kind of time - resolved visualization as in the bivariate case by first calculating the instantaneous average @xmath12 ( here for the spike - distance ) over all pairwise instantaneous values @xmath13 , @xmath14    the dissimilarity profiles of both measures are based on three piecewise constant quantities ( see fig . [",
    "fig : isi - spike - es - illustration]a ) .",
    "these are the time of the preceding spike @xmath15 the time of the following spike @xmath16 as well as the interspike interval @xmath17 the ambiguity regarding the definition of the very first and the very last interspike interval is resolved by placing for each spike train auxiliary leading spikes at time @xmath18 and auxiliary trailing spikes at time @xmath19 ( but see also section [ sss : spike - distance ] ) .",
    "the isi - distance , proposed as a bivariate measure in @xcite and extended to the multi spike train case in @xcite was the first spike train distance directly defined as the temporal average of an instantaneous dissimilarity profile .",
    "this profile is calculated as the absolute value of the instantaneous ratio between the interspike intervals @xmath20 and @xmath21 ( see fig .",
    "[ fig : isi - spike - es - illustration]a ) according to : @xmath22 since the isi - values only change at the times of spikes , the dissimilarity profile is piecewise constant ( with discontinuities at the spikes ) .",
    "the isi - ratio equals zero for identical interspike intervals in the two spike trains , and approaches one in intervals in which one spike train is much faster than the other .",
    "the isi - distance is defined as the temporal average of this absolute isi - ratio : @xmath23      the spike - distance ( see @xcite , @xcite , for the original proposal and @xcite , @xcite ; @xcite , @xcite , for the definite version presented here ) is the centerpiece of spiky .",
    "in contrast to the isi - distance , it considers the exact timing of the spikes .",
    "a. isi - distance .",
    "illustration of the local quantities used to define the dissimilarity profile @xmath3 for an arbitrary time instant @xmath24 .",
    "b. spike - distance .",
    "illustration of the additional local quantities needed for the calculation of the dissimilarity profile @xmath4 . c. spike - synchronization .",
    "illustration of the adaptive coincidence detection ( which was originally proposed for event synchronization ) .",
    "while in the first half the middle spikes @xmath25 and @xmath26,width=321 ]    are coincident , the middle spikes in the second half are not .",
    "the dissimilarity profile is calculated in two steps : first for each spike a spike time difference is calculated , then for each time instant the relevant spike time differences are selected , weighted , and normalized . here ` relevant ' means local ; each time instant is surrounded by four corner spikes : the preceding spike from the first spike train @xmath27 , the following spike from the first spike train @xmath28 , the preceding spike from the second spike train @xmath29 , and , finally , the following spike from the second spike train @xmath30 . to each of these corner spikes one",
    "assigns the distance to the nearest spike in the other spike train , for example , for the previous spike of the first spike train : @xmath31 and analogously for @xmath28 , @xmath29 , and @xmath30 ( see fig .",
    "[ fig : isi - spike - es - illustration]b ) .",
    "subsequently , for each spike train separately , a locally weighted average is employed such that the differences for the closer spike dominate ; for each spike train @xmath32 the weighting factors are the intervals to the previous and to the following spikes : @xmath33 and @xmath34 the local weighting for the spike time differences of the first spike train reads : @xmath35 and analogously @xmath36 is obtained for the second spike train . averaging over the two spike train contributions and normalizing by the mean interspike interval yields : @xmath37 this quantity sums the spike time differences for each spike train weighted according to the relative distance of the corner spike from the time instant under investigation .",
    "this way relative distances within each spike train are taken care of , while relative distances between spike trains are not . in order to get these ratios straight and to account for differences in firing rate , in a last step the two contributions from the two spike trains",
    "are locally weighted by their instantaneous interspike intervals .",
    "this leads to the definition of the dissimilarity profile : @xmath38 again , the overall distance value is defined as the temporal average of the dissimilarity profile : @xmath39    since the dissimilarity profile @xmath4 is obtained from a linear interpolation of piecewise constant quantities , it is piecewise linear ( with potential discontinuities at the spikes ) .",
    "both the dissimilarity profile @xmath4 and the spike - distance @xmath1 are bounded in the interval @xmath40 $ ] . the distance value @xmath41 is obtained for identical spike trains only .    due to the finite recording time",
    "there is an ambiguity regarding the definitions of the initial distance to the preceding spike , the final distance to the following spike , as well as the very first and the very last interspike intervals . in previous implementations of the spike - distance this ambiguity",
    "was resolved by adding to each spike train an auxiliary leading spike at time @xmath18 and an auxiliary trailing spike at time @xmath19 .",
    "this lead to spurious synchrony at the edges where by construction the dissimilarity profile reached the zero value . here",
    "we partly correct this edge effect by incorporating all the information that is available .",
    "we describe the correction only for the beginning of the recording , an analogous procedure is applied at the end of the recording .",
    "we count the auxiliary spikes as normal spikes which can be nearest neighbors to other spikes . but instead of calculating their spike time distance ( which is always zero ) we use the spike time difference of the first real spike .",
    "for the first interspike interval we know that it is at least the distance to the first spike @xmath42 but it could be longer .",
    "so to take the local firing rate into consideration we set @xmath43 where we use the length of the first known interspike interval @xmath44 as a lower limit . in case @xmath45 is smaller than @xmath44 we get at least a crude estimate of how much longer the first interspike interval could have been .",
    "in contrast to the dissimilarity profile @xmath4 of the regular spike - distance , the dissimilarity profile @xmath46 of the realtime spike - distance can be calculated online because it relies on past information only .",
    "from the perspective of an online measure , the information provided by the following spikes , both their position and the length of the interspike interval , is not yet available . like the profile of the regular spike - distance , this causal variant",
    "is also based on local spike time differences but now only two corner spikes are available , and the spikes of comparison are restricted to past spikes , e.g. , for the preceding spike of the first spike train : @xmath47 since there are no following spikes available , there is no local weighting .",
    "there is no interspike interval either , so the normalization is achieved by dividing the average corner spike difference by twice the average time interval to the preceding spikes ( eq . [ eq : prev - spike - dist ] ) .",
    "this yields a causal indicator of local spike train dissimilarity : @xmath48      the dissimilarity profile @xmath49 of the forward spike - distance is ` inverse ' to the profile of the realtime spike - distance .",
    "instead of relying on past information only it relies on forward information only .",
    "it can be used in triggered temporal averaging in order to evaluate the ( causal ) effect of certain spikes or of specific stimuli features on future spiking . again , for each time instant there are just two corner spikes and the potential nearest spikes in the other spike train are future spikes only .",
    "thus , the spike time difference for the following spike of the first spike train reads : @xmath50 and accordingly for the following spike of the second spike train . in analogy to eq .",
    "[ eq : bi - spike - diss - rt ] , an indicator of local spike train dissimilarity is obtained as follows : @xmath51      spike - synchronization quantifies the degree of synchrony from the relative number of quasi - simultaneous appearances of spikes . since it builds on the same bivariate and adaptive coincidence detection that was used for event synchronization ( @xcite , @xcite ; see also @xcite , @xcite ) , spike - synchronization is parameter- and scale - free as well .",
    "coincidence detection typically uses a coincidence window @xmath52 which denotes the time lag below which two spikes from two different spike trains , @xmath25 and @xmath26 , are considered to be coincident . for",
    "both event synchronization and spike synchronization this coincidence window is adapted to the local spike rates ( see fig . [",
    "fig : isi - spike - es - illustration]c ) : @xmath53 the coincidence criterion can be quantified by means of a coincidence indicator @xmath54 ( and analogously for @xmath55 ) which assigns to each spike either a one or a zero depending on whether it is part of a coincidence or not .",
    "the minimum function in eq .",
    "[ eq : spike - coincidence ] takes already into account that a spike can at most be coincident with one spike ( the nearest one ) in the other spike train .",
    "this is a consequence of the adaptive definition of @xmath52 in eq .",
    "[ eq : coincidence - maxdist ] and the ` @xmath56 ' in eq .",
    "[ eq : spike - coincidence ] ( which has been changed from the ` @xmath57 ' used in the original definition of event synchronization ) . in case",
    "a spike is right in the middle between two spikes from the other spike train there is no ambiguity any more since there is no coincidence .",
    "this way we have defined a coincidence indicator for each individual spike of the two spike trains . in order to obtain one combined similarity profile we pool the spikes of the two spike trains as well as their coincidence indicators by introducing one overall spike index @xmath58 . in case there",
    "exist exact matches ( pairs of perfectly coincident spikes ) @xmath58 counts over both spikes .",
    "this yields one unified set of coincidence indicators @xmath59 in which according to eqs .",
    "[ eq : coincidence - maxdist ] and [ eq : spike - coincidence ] each coincidence leads to a pair of consecutive ones .",
    "from this discrete set of coincidence indicators @xmath59 the spike - synchronization profile @xmath5 is obtained via @xmath60 . finally , spike - synchronization is defined as the average value of this profile @xmath61 with @xmath62 denoting the total number of spikes in the pooled spike train .",
    "the interpretation is very intuitive : @xmath2 quantifies the fraction of all spikes in the two spike trains that are coincident .",
    "it is zero for spike trains without any coincidences , and reaches one if and only if the two spike trains consist only of pairs of coincident spikes .",
    "the extension to the case of more than two spike trains ( @xmath6 ) is straightforward .",
    "first , bivariate coincidence detection is performed for each pair of spike trains @xmath63 . generalizing eq .",
    "[ eq : spike - coincidence ] gives the coincidence indicators @xmath64 where @xmath65 is defined as in eq .",
    "[ eq : coincidence - maxdist ] , but for arbitrary spike trains @xmath10 and @xmath66 .",
    "subsequently , for each spike of every spike train a normalized coincidence counter @xmath67 is obtained by averaging over all @xmath68 bivariate coincidence indicators involving the spike train @xmath10 .    as in the bivariate case , pooling leads to just one set of normalized coincidence counters @xmath59 each of which can obtain any one out of this finite set of values : @xmath69 .",
    "again , the multivariate spike - synchronization profile @xmath5 is obtained via @xmath60 and its average value yields the multivariate spike - synchronization @xmath70 where @xmath71 again denotes the overall number of spikes .",
    "note that eq .",
    "[ eq : multi - spike - synchronization ] is completely analogous to eq .",
    "[ eq : bi - spike - synchronization ] .",
    "moreover , setting @xmath72 , @xmath73 , and @xmath74 in eqs .",
    "[ eq : bi - spike - coincidence ] and [ eq : multi - spike - coincidence ] retrieves eq .",
    "[ eq : spike - coincidence ] .",
    "therefore , the bivariate equations are just a special case of the more general multivariate formulation .",
    "accordingly , the interpretation of spike synchronization as the overall fraction of potential coincidences that are actually realized is general and holds for both bivariate and multivariate datasets . spike - synchronization is zero if and only if the spike trains do not contain any coincidences , and reaches one if and only if each spike in every spike train has one matching spike in all the other spike trains .",
    "examples for both of these extreme cases can be found in subplots b and d of fig .",
    "[ fig : psth - es ] .",
    "comparison of psth and spike - synchronization . for the latter we added a dashed similarity profile which serves as a visual aid only .",
    "multivariate example with @xmath75 spike trains . in the first half within the noisy background",
    "there are @xmath76 regularly spaced spiking events with increasing jitter .",
    "the second half consists of @xmath77 spiking events with decreasing jitter but now without any noisy background . in the noisy first half psth and the smoothed spike - synchronization exhibit very similar profiles .",
    "the fact that the firing events become more distinct in the second half is indicated by the smoothed spike - synchronization as a gradual increase to synchronization . in the psth",
    "the peaks become more and more narrow .",
    "b - d . by construction",
    "the pooled spike train of these examples is identical consisting of @xmath77 evenly spaced bursts .",
    "the only difference is the distribution of the spikes among the individual spike trains which varies from low via intermediate to high synchrony .",
    "whereas the psth is the same for all three examples , spike - synchronization correctly indicates the increase in synchrony ( note that in subplot b spike - synchronization attains the value zero and in subplot d the value one over the whole time interval , see arrows ) .",
    "b. synfire chain of bursts . c. random distribution of spikes among spike trains .",
    "d. high reliability .",
    "each spike train contains one spike per firing event.,width=321 ]    in contrast to @xmath3 and @xmath4 , the time - resolved spike - synchronization @xmath5 is a measure of similarity .",
    "the peri - stimulus time histogram is oriented the same way so it makes sense to compare these two measures ( fig .",
    "[ fig : psth - es ] ) .",
    "the spike - synchronization profile @xmath5 is only defined at the times of the spikes but a better visualization can be achieved by connecting the individual dots . for larger spike train datasets ( here example a ) it also makes sense to smooth the profile with a moving average of appropriate order .",
    "[ fig : psth - es]a demonstrates the similarities and dissimilarities between the psth and spike - synchronization on a rather general example .",
    "[ fig : psth - es]b - d shows that spike - synchronization , in contrast to the psth , is a true measure of spike train synchrony ( see also @xcite , @xcite ) . since the psth is invariant to shuffling spikes among the spike trains , it yields the same value regardless of how spikes are distributed among the different spike trains .",
    "the very first all - in - one implementation of the isi- and the spike - distance was published online at the time of the publication of @xcite . in between this first and our current release ,",
    "several other source codes written in various languages and for different platforms have been made available .",
    "the most prominent examples are the python - implementation of the spike - distance courtesy of jeremy fix and available on his homepage , and the c++-implementation of both isi- and spike - distance courtesy of rzvan florian and hosted on github .",
    "the spike - distance was also implemented in the commercially distributed hrlanalysis@xmath78 software suite @xcite designed for the analysis of large - scale spiking neural data .",
    "note that all of these implementations are restricted to the dissimilarity profile and its temporal average ( the overall dissimilarity ) .",
    "in contrast , spiky also allows the user to interactively access all the other different ways to extract information that will be introduced in section [ s : information - extraction ] .",
    "all of these codes for calculating the isi- and the spike - distance rely on equidistantly sampled dissimilarity profiles , and the same holds true for codes of event synchronization .",
    "typically the precision is set to the sampling interval of the neuronal recording .",
    "since the dissimilarity profiles have to be calculated and stored for each pair of spike trains , one obtains , for each measure , a matrix of order ` number of sampled time instants ' @xmath79 ` number of spike train pairs ' ( i.e. , @xmath80 ) . for small sampling intervals and large numbers of spike trains this leads to memory problems .",
    "in spiky we use an optimized and more memory - efficient way of storing the results .",
    "we make use of the fact that the dissimilarity profile @xmath3 of the isi - distance is piecewise constant and the dissimilarity profile @xmath4 of the spike - distance is piecewise linear .",
    "each constant / linear interval runs from one spike of the pooled spike train to the next .",
    "thus , for each such interval ( and for each pair of spike trains ) we have to store only one value for the isi - dissimilarity and two values for the spike - dissimilarity , one at the beginning and one at the end of the interval ( see fig .",
    "[ fig : no - sampling ] ) .",
    "the memory gain is proportional to the number of sample points per interspike interval in the pooled spike train and is typically much larger than one .",
    "illustration of the memory efficient storage of the dissimilarity profile for both the isi- and the spike - distance.,width=321 ]    the dissimilarity profiles exhibit instantaneous jumps at the times of the spikes since this is where the lengths of the interspike intervals and the identity of the previous and the following spikes change abruptly or where a new coincidence is counted . for sampled dissimilarity profiles one has to ` cut the corners ' of these instantaneous jumps .",
    "this leads to an estimation error which increases with the sampling interval .",
    "in contrast , within the new implementation each spike marks both the end of the previous and the beginning of the next interval and it becomes possible to store two dissimilarity values for these points . this way the integration from one spike of the pooled spike train to the next",
    "can be performed over the full interval .",
    "thus , besides being far more memory - efficient , the new implementation also computes the exact distance values without any spurious dependence on the sampling interval .",
    "the third effect of the new implementation is a considerable speed - up . to show this ( and to provide relative computational costs for the different measures ) we here",
    "calculate the speed gain achieved by going from the old equidistantly sampled implementation to the new minimally sampled implementation of the isi- and the spike - distance .    as benchmark we use the comprehensive performance comparison carried out by @xcite . in this test",
    "the authors compared the performance of their newly proposed modulus - metric with the performance of previously proposed spike train distances including the isi- and the spike - distance .",
    "like them we used two random spike trains with different numbers of spikes .",
    "however , since we were also interested in applications to larger datasets , we extended the maximum number of spikes from @xmath81 to @xmath82 spikes .",
    "the firing rate is kept constant , hence the duration of the trial increases with the number of spikes . for a fair comparison we implemented all algorithms in c++ and ran them on an intel i7 - 4700mq cpu @ @xmath83 ghz .",
    "all speed gains were averaged over @xmath84 trials ( fig .",
    "[ fig : performance - comparison ] ) .    in a first step we replicated the results of @xcite who had calculated the isi- and spike - distances using dissimilarity profiles that were equidistantly sampled with a fixed time step of dt = @xmath85 ms .",
    "rerunning the same algorithms on our computer , we could reproduce their results ( for less than @xmath81 spikes ) within the same order of magnitude .",
    "subsequently , we measured the running times using minimally sampled dissimilarity profiles and found that for both the isi- and the spike - distance the new implementation was considerably faster than the old implementation .",
    "as expected , the speed gain depends critically on the sampling rate used for the old implementation and is particularly large for densely sampled data ( fig .",
    "[ fig : performance - comparison ] ) .",
    "apart from minimal sampling , spiky includes another improvement which strongly increases the overall performance .",
    "the source codes published along with @xcite were entirely written in matlab .",
    "in contrast , the new spiky - implementation uses c - based matlab executables ( mex)-files for the most time - consuming parts and this leads to another enormous performance boost ( typically by a factor between @xmath86 and @xmath87 ) .     speed gain achieved by the new ( minimally sampled ) implementation of a. isi - distance and b. spike - distance with respect to the old ( equidistantly sampled ) implementation in dependence on the number of spikes and on the time step used by the old implementation.,width=321 ]",
    "the isi- and the spike - distance combine a variety of properties that make them well suited for the application to real data . in particular , they are conceptually simple , computationally efficient , and easy to visualize in a time - resolved manner . by taking into account only the preceding and the following spike in each spike train ,",
    "these distances rely on local information only .",
    "they are also time - scale - adaptive since the information used is not contained within a window of fixed size but rather within a time frame whose size depends on the local rate of each spike train .",
    "moreover , the sensitivity to spike timing and the instantaneous reliability achieved by the spike - distance opens up many new possibilities in multi - neuron spike train analysis @xcite .",
    "these build upon the fact that there are several ways to extract information all of which we describe in the following . as an illustration we use the detailed analysis of an artificially generated spike train dataset with the spike - distance ( for the raster plot see upper part of fig .",
    "[ fig : spike - representations]a ) .    since the profile of spike - synchronization is only defined at the times of the spikes and not at any instantaneous instants , for this measure only a few of these levels",
    "apply , as we will detail below .",
    "the different levels of information extraction for the spike - distance .",
    "a. top : spike raster plot of @xmath88 artificially generated spike trains divided in @xmath76 spike train groups of @xmath89 spike trains each .",
    "the clustering behavior changes every @xmath81 ms .",
    "bottom : dissimilarity profiles of the spike - distance for the four spike train groups ( thin color - coded lines ) and for all spike trains ( thick black line ) .",
    "the overall dissimilarity is defined as the temporal average of the dissimilarity profile of all spike trains ( @xmath90 in this case ) and is marked by a dashed horizontal line .",
    "the green lines and symbols on top of the raster plot mark temporal instants and intervals results of which are detailed in the subplots below .",
    "matrices of pairwise instantaneous dissimilarity values for a single time instant ( mark 1 , subplot b ) , for two selective averages ( over non - consecutive intervals in mark 2 , subplot c , and over the whole interval in mark 3 , subplot d ) and for a triggered average ( mark 4 , subplot e ) .",
    "f - g . for the overall average ( mark 3 )",
    "we also show the matrices of overall pairwise instantaneous dissimilarity values for the @xmath76 spike train groups ( f ) and the corresponding dendrogram ( g ) .",
    "dendrogram of spike train matrices in d and e. note that in contrast to the overall average ( mark 3 , subplot h ) the triggered average ( mark 4 , subplot i ) captures the local similarity between @xmath89 of the spike trains.,width=321 ]      the starting point is the most detailed representation in which one instantaneous value is obtained for each pair of spike trains ( see eq .",
    "[ eq : bi - spike - diss - improved ] ) . this representation could be viewed as a movie of a symmetric pairwise dissimilarity matrix in which each frame corresponds to one time instant ( an example can be found in the supplementary material of @xcite , @xcite ) . for a movie of finite length",
    "the time axis necessarily has to be sampled but in principle this most detailed representation consists of an infinite number of values . however , since all dissimilarity profiles are piecewise linear there is a lot of redundancy .",
    "one step towards a more compact and memory - efficient representation is to store all pairwise dissimilarity profiles in a matrix of size ` number of interspike intervals in the pooled spike train ' @xmath79 ` number of spike train pairs ' ( @xmath91 for the spike - distance , see section [ ss : comparison ] ) .",
    "from this two - dimensional matrix it is possible to extract both kinds of cross sections . by selecting a pair of spike trains ,",
    "one obtains the bivariate dissimilarity profile @xmath4 for this pair of spike trains . selecting a time instant @xmath92 ( and using linear interpolation for time instants in between spikes ) yields an instantaneous matrix of pairwise spike train dissimilarities @xmath93 ( see fig .",
    "[ fig : spike - representations]b ) .",
    "this matrix can be used to divide the spike trains into instantaneous clusters , that is , groups of spike trains with low intra - group and high inter - group dissimilarity .    for spike - synchronization",
    "it is possible to select pairwise dissimilarity profiles but instantaneous matrices are not defined .",
    "another way to reduce the information of the dissimilarity matrix is averaging .",
    "there are two possibilities that commute : the spatial average over spike train pairs and the temporal average .",
    "since the spatial average over spike train pairs can be done locally it yields a dissimilarity profile for the whole population .",
    "examples for averages over four different spike train groups as well as over all spike trains are shown in the lower subplot of fig .",
    "[ fig : spike - representations]a .",
    "temporal averaging over certain intervals on the other hand leads to a bivariate distance matrix ( see fig . [",
    "fig : spike - representations]c and d for examples of non - continuous and continuous intervals ) . in real data , these temporal intervals could be chosen to correspond to different external conditions such as normal vs. pathological , asleep vs. awake , target vs. non - target stimulus , or presence / absence of a certain channel blocker .",
    "a combination of temporal and spatial averaging can be seen in fig .",
    "[ fig : spike - representations]f .",
    "this dissimilarity matrix is obtained from the overall temporal average shown in fig .",
    "[ fig : spike - representations]d by ( spatially ) averaging over the @xmath94 submatrices and thus depicts the pairwise spike train group dissimilarity ( @xmath95 instead of @xmath96 ) .",
    "[ fig : spike - representations]g shows the respective dendrogram . in applications to real data , these groups could be different neuronal populations or responses to different stimuli , depending on whether the spike trains were recorded simultaneously or successively . finally , successive application of spatial average over all spike train pairs and temporal average over the whole interval results in just one distance value that describes the overall level of dissimilarity for the entire dataset . in fig .",
    "[ fig : spike - representations]a this value is stated in the upper right of the lower subplot .",
    "both spatial and temporal averaging are well - defined for spike - synchronization , and so is the one overall value .",
    "the fact that there are no limits to the temporal resolution allows further analyses such as internally or externally triggered temporal averaging . here",
    ", the matrices are averaged over certain trigger time instants only .",
    "the idea is to check whether this triggered temporal average is significantly different from the global average since this would indicate that something peculiar is happening at these trigger instants .",
    "the trigger times can either be obtained from external influences ( such as the occurrence of certain features in a stimulus ) or from internal conditions ( such as the spike times of a certain spike train ) .",
    "external triggering is a standard tool to address questions of neural coding , for example , it can be used to evaluate the influence of localized stimulus features on the reliability of neurons under repeated stimulation . in multi - neuron data , internal triggering might help to uncover the connectivity in neural networks or to detect converging or diverging patterns of firing propagation .",
    "an example is shown in fig .",
    "[ fig : spike - representations]e . here",
    ", neurons @xmath97 , @xmath98 , @xmath99 , and @xmath100 follow the @xmath101-th neuron during the 2nd and the 4th @xmath81-ms subinterval .",
    "this can be revealed by triggering on the spike times of neuron @xmath101 during these subintervals .",
    "the difference between the dissimilarity matrix of the full interval in fig .",
    "[ fig : spike - representations]d and the triggered dissimilarity matrix of fig .",
    "[ fig : spike - representations]e can be best seen by comparing the respective dendrograms in fig .",
    "[ fig : spike - representations]h and [ fig : spike - representations]i .    since instantaneous values are not defined , triggered averaging does not make any sense for spike - synchronization",
    "spiky is a graphical user interface for monitoring synchrony between artificially simulated or experimentally recorded neuronal spike trains .",
    "it contains implementations of the isi - distance , the spike - distance , and spike - synchronization .",
    "moreover , spiky includes the forward variant of the spike - distance as well as a ` simulation ' of the realtime spike - distance .",
    "the latter calculates the values the realtime version would give but instead of going forward in real time it just calculates all values in parallel ( see also section [ ss : outlook ] ) .",
    "the source codes are written in matlab ( mathworks inc , natick , ma , usa ) with the most time - consuming loops coded in mex - files .",
    "consequently , spiky is not stand - alone but requires matlab to run .",
    "the following sections give a broad overview of the features of spiky .",
    "for a more detailed description of the specific procedures that realize these features please refer to the documentation and the webpages listed below .",
    "spiky is distributed under the bsd licence ( copyright ( c ) 2014 , thomas kreuz , nebojsa bozanic .",
    "all rights reserved . ) . a zip - package containing all the necessary files",
    "can be accessed for free on the download page .",
    "this package also contains a folder with documentation ( such as a faq - file and an introduction to all individual elements of spiky and all individual files of the spiky - package ) .",
    "further information and many demonstrations ( both images and movies ) can be found on the download page and on the spiky facebook - page .",
    "both of these pages are used to announce updates and distribute the latest information about new features .",
    "they also provide an opportunity to give feedback and ask questions .",
    "moreover , the facebook - page includes various screen recordings with voice - over in which the user is guided step by step through some of the most important features of spiky .",
    "all of these movies can also be viewed on the spiky youtube - channel .",
    "after downloading spiky the user has to first extract the zip - package which leaves all files in one folder named ` spiky ' .",
    "if the system has a suitable mex - compiler installed , the mex - files can be compiled from within this folder by running the m - file ` spiky_compile_mex ' .",
    "the program is started with the m - file ` spiky ' .",
    "when spiky is running , the user has the option to select to view short hints ( ` tooltips ' ) when hovering above individual elements of the graphical user interface .",
    "an overview of all the information contained in the hints can be found in the documentation file ` spiky - elements ' .",
    "furthermore , at each step the suggested element for the next user action is highlighted by a bold font .",
    "to get the user started quickly , spiky provides a few example datasets from previous publications .",
    "the most useful example is the ` clustering ' dataset which has already been used in several figures as well as in the supplementary movie of @xcite .",
    "the best way to get acquainted with spiky is to advance from panel to panel by pressing the highlighted button .",
    "when the end is reached the user can reset and run the same example again while changing some parameters in order to see the consequences .",
    "note that it is not necessary to set all the parameters each time when spiky is started .",
    "rather , it is possible to use the file ` spiky_f_user_interface ' to set and modify the spike train data as well as the parameters ( again , the dataset ` clustering ' provides an example ) .",
    "overall , spiky has a rather linear workflow , however , it is much more interactive than previous implementations of the measures and there are many potential shortcuts and loops along the way . as can be seen in the spiky - flowchart in fig .",
    "[ fig : spiky - flowchart ] , the general flow is clearly directed from the input of spike train data to the output of results .",
    "so the first step the user has to do is to give spiky spike train data ( i.e. sequences of spike times ) to work with .",
    "there are four possible ways to do this : one can make use of predefined examples , load data from a file or from the matlab workspace , detect discrete events from continuous data , or employ the spike train generator ( see section [ sss : input ] for more details on the spiky input ) .",
    "spiky - logo ( center ) and flowchart describing the workflow of spiky from the input of spike train data to the output of results . a typical",
    "spiky - session begins at the top with ` get data ' , then goes clockwise and ends on the left with ` get results ' . for clarity we omitted two possible actions which can be performed from multiple positions on the workflow circle :",
    "from any point it is possible to reset to the very beginning ( ` reset ' leads to the symbol @xmath102 ) , and from any later point it is possible to jump back before the measure calculation ( ` reset with the same data ' leads to the symbol @xmath103).,width=321 ]    once the full dataset is available , modification is still possible .",
    "the user can restrict the analysis to a specific subset , e.g. , select a smaller time window and/or a subset of spike trains .",
    "it is also possible to impose some external structure on the raster plot ( spike trains vs time ) .",
    "for that , spiky allows the definition of two types of time markers ( e.g. thick / thin markers for specific events such as seizure onset / offset in epilepsy , trigger onset / offset during stimulation etc . ) and two types of spike train separators ( e.g. a thick separator for neurons from the left vs. neurons from the right hemisphere and a thin separator for different regions within the two halves )",
    ". the user can also define spike train groups .",
    "depending on the setup these could be spike trains recorded in different brain regions or upon presentation of different stimuli .",
    "[ fig : movie - screenshot ] shows an example of a raster plot with annotations marking all these different elements .",
    "annotated screenshot from a movie .",
    "a. artificially generated spike trains .",
    "b. dissimilarity matrices obtained by averaging over two separate time intervals for both the regular and the real - time spike - distance as well as their averages over subgroups of spike trains ( denoted by @xmath104 ) . c. corresponding dendrograms.,width=321 ]    after updating all of these data parameters , the next step is to select the measures to be calculated .",
    "options include the peri - stimulus time histogram as well as all measures described in detail in section [ s : measures ] . in the same step",
    "the user can select successive frames for a temporal analysis of spike train patterns .",
    "these can be individual time instants for cross sections , temporal intervals for selective averages and sequences of time instants for triggered averages ( see section [ s : information - extraction ] ) .",
    "now the actual calculation of the measures takes place .",
    "for reasonably sized datasets this should take at most a few seconds .",
    "very large datasets ( typically datasets containing hundreds of spike trains and/or hundred thousands of spikes ) are divided in smaller subintervals and the calculation will be performed in a loop which might take longer . it is from this point on that spiky becomes truly interactive . now",
    "the user can switch between different representations of the results ( such as dissimilarity profiles , dissimilarity matrices and dendrograms ) .",
    "different matrices and dendrograms can be compared in the same figure or they can be viewed in sequence .",
    "the presentation can be restricted to smaller time windows and/or subsets of spike trains , and temporal and spatial averaging ( for example moving average and average over spike train groups ) can be performed .",
    "spike trains or spike train groups can also be sorted according to the number of spikes ( either within the whole spike train or within a certain interval ) or according to the spike latency with respect to a specific time instant .",
    "the order can even depend on the result of the clustering analysis , i.e. , spike trains belonging to the same cluster will appear next to each other .    furthermore",
    ", it is possible to add further figure elements such as spike number histograms , overall averages , or dissimilarity profiles for individual spike train groups . at this stage",
    "the user can also retrospectively change the appearance of all the individual elements of the figure ( see section [ sss : figure - layout ] for more details ) .",
    "finally , spiky allows to extract both data and results to the matlab workspace for further analysis , and it is also possible to save individual figures as postscript - file or a sequence of figures as an ` avi'-movie ( see section [ sss : output ] for more details on the spiky output ) .",
    "there are four different ways to input spike train data into spiky .",
    "the first option is to select one of the predefined examples which are generated using matlab - code .",
    "initially these are the examples used in @xcite but one can also define new examples .",
    "the second option is to load spike train data either from the matlab workspace or from a file .",
    "two different file formats are accepted , ` .mat ' and ` .txt ' ( ascii ) files . for the mat - files spiky",
    "currently allows three different kinds of input formats ( further formats can be added on demand ) :    * cell arrays ( ca ) with just the spike times .",
    "this is the preferred format used by spiky since it is most memory efficient .",
    "the two other formats will internally be converted into this format ; * rectangular matrices with each row being a spike train and zero padding ( zp ) in case of non - identical spike numbers ; * matrices representing time bins where each zero / one ( 01 ) indicates the absence / presence of a spike .    in case of a mat - file or of the workspace , spiky looks for a variable called ` spikes ' ; if it can not find it , the user has the chance to select the variable name ( or field name ) which contains the spikes via an input mask which provides a hierarchical structure tree of all the variables and fields contained in the mat - file or in the workspace .    in the text format spike times should be written as a matrix with each row being one spike train .",
    "the spiky - package contains one example file for all four formats ( ` testdata_ca.mat ' , ` testdata_zp.mat ' , ` testdata_01.mat ' and ` testdata.txt ' ) .",
    "the third option is to use the _ event detector _ in order to detect discrete events in continuous data .",
    "there are many different possibilities of defining an event . a variety of standard events ( such as local maxima and minima and threshold crossings ) with a number of parameters",
    "are already included .",
    "the fourth option is to create new spike train data via the _ spike train generator_. after setting some defining variables ( number of spike trains , start and end time , sampling interval ) the user can build spike trains from predefined spike train patterns ( such as periodic , splay , uniform or poisson ) and/or by manually adding , shifting and deleting individual spikes or groups of spikes .",
    "spiky is designed so that it can directly generate figures suitable for publication .",
    "the user is given control over the appearance of every individual element ( e.g. fonts , lines etc . ) in each type of figure .",
    "there are two ways to determine essential properties such as color , font size or line width .",
    "it is possible to change elements in the active figure while the program is already running .",
    "context menus let the user edit the properties of individual elements or of all elements of a certain type .",
    "conveniently , one can also use the file ` spiky_f_user_interface ' to define the standard values for all the parameters that describe the principal layout of the figure .",
    "if a figure contains more than one subplot ( besides the subplot containing the spike rasterplot and/or the dissimilarity profiles , these are typically subplots with dissimilarity matrices and dendrograms ) , it is possible to change their position and size",
    ". one can edit all position variables together or change the x - position , the y - position , the width and the height individually . in case",
    "there are several dissimilarity matrices / dendrograms this can be done either for an individual matrix / dendrogram or for all of them at once .      from within spiky it is possible to extract the spike trains and the results of the analysis ( measure profiles , matrices , dendrograms ) to the matlab workspace for further processing .",
    "results will be stored in variables such as ` spiky_spikes ' , ` spiky_profile_x_1 ' , ` spiky_profile_y_1 ' , ` spiky_profile_name_1 ' , ` spiky_matrix_1 ' and ` spiky_matrix_name_1 ' .",
    "in addition , the results obtained during an analysis will automatically be stored in the output structure ` spiky_results ' which will have one field for each measure selected .",
    "depending on the parameter selection within spiky , for each measure the structure can contain the following subfields that correspond to the different representations identified in section [ s : information - extraction ] :    * spiky_results.@xmath56measure@xmath105.name : name of selected measure * spiky_results.@xmath56measure@xmath105.distance : level of dissimilarity over all spike trains and the whole interval .",
    "this is just one value , obtained by averaging over both spike trains and time * spiky_results.@xmath56measure@xmath105.matrix : pairwise distance matrices , obtained by averaging over time * spiky_results.@xmath56measure@xmath105.time : time - values of overall dissimilarity profile * spiky_results.@xmath56measure@xmath105.profile : overall dissimilarity profile obtained by averaging over spike train pairs    note that the dissimilarity profiles are not equidistantly sampled .",
    "rather they are stored as memory - efficiently as possible which means just one value for each interval of the pooled spike train for the isi- and two values for the spike - distance .",
    "since this format can be more difficult to process , spiky includes three functions : ` spiky_f_selective_averaging ' for computing the selective average over time intervals , ` spiky_f_triggered_averaging ' for calculating the triggered average over time instants , and ` spiky_f_average_pi ' for averaging over many dissimilarity profiles .",
    "furthermore , for the isi - distance the function ` spiky_f_pico ' can be used to obtain the average value as well as the x- and y - vectors for plotting .",
    "besides the standard way to work with matlab - figures spiky also offers the opportunity to save each figure as a postscript - file . finally , it is possible to save a sequence of figures as an ` avi'-movie .",
    "spiky was mainly designed to facilitate the detailed analysis of one dataset .",
    "it enables the user to switch between different representations ( see section [ s : information - extraction ] ) and to zoom in on both spatial and temporal features of interest .",
    "however , spiky is less convenient for the analysis of many different datasets when e.g. the statistics of a certain quantity such as an average over a specific time interval should be evaluated over all available datasets ( e.g. over all trials of a stimulus setup or for recordings of all subjects etc . ) in some kind of loop . for these purposes",
    "the spiky - package contains a program called spiky_loop which is complementary to spiky .",
    "it is not a graphical user interface but it should be simple enough ( and plenty of examples are provided ) to allow everyone to run the same kind of analysis for many different datasets and to evaluate and compare their ` spiky_results ' .",
    "spiky_loop provides the full functionality of spiky and gives access to time instants , selective and triggered averages as well as averages over spike train groups .",
    "so by combining these two programs it is possible to first use spiky for a rather exploratory but detailed analysis of a limited number of individual datasets and then use spiky_loop and its output structure ` spiky_loop_results ' to verify whether any effect discovered on the example dataset is consistently present within all of the datasets .",
    "both spiky and spiky_loop require the storage of matrices of the order ` number of interspike intervals in the pooled spike train ' @xmath79 ` number of spike train pairs ' .",
    "for very large datasets with many spike trains and/or spikes this can lead to memory problems .",
    "we addressed this issue by making the calculation sequential , i.e. , by cutting the recording interval into smaller segments , and performing the averaging over all pairs of spike trains for each segment separately . in the end the dissimilarity profiles for the different segments ( already averaged over pairs of spike trains ) are concatenated , and its temporal average yields the distance value for the whole recording interval . during this sequential calculation",
    "spiky uses a waitbar ( which displays the % completed ) to continuously inform the user about the progress .",
    "this way , by trading memory against speed - running more loops with smaller matrices takes longer - spiky is able to deal with datasets containing more than one hundred spike trains and overall more than one million spikes .",
    "a very important issue that has not yet been addressed is statistical significance .",
    "given a certain value of the spike - distance how can one judge whether it reflects a significant decrease or increase in spike train synchrony and does not just lie within the range of values obtained for random fluctuations ?",
    "one answer to this question is the use of spike train surrogates @xcite .",
    "the idea is to compare the results for the original dataset with the results obtained for spike train surrogates generated from that dataset . if the value obtained for the original lies outside the range of values for the surrogates this value can be assumed to be significant to a level defined by the number of surrogates used ( e.g. @xmath106 for @xmath100 surrogates or @xmath107 for @xmath108 surrogates ) .",
    "the spiky - package contains a program ` spiky_loop_surro ' which was designed to evaluate significance .",
    "so far it includes four different types of spike train surrogates .",
    "they differ in the properties that are preserved and maintain either the individual spike numbers ( obtained by shuffling the spikes ) , the individual interspike interval distribution ( obtained by shuffling the interspike intervals ) , the pooled spike train ( obtained by shuffling spikes among the spike trains ) or the peri - stimulus time histogram ( psth ) . in the last case",
    "the spike train surrogates are obtained by means of inverse transform sampling , i.e. , by resampling from the psth using its cumulative distribution function ( cdf ) @xcite . other ways to calculate rate functions ( e.g. based on kernels with different bandwidths ) will be added in future releases .",
    "in this paper we presented spiky , a graphical user interface which facilitates the application of methods of spike train analysis to both simulated and real datasets .",
    "apart from the standard peri - stimulus time histogram , spiky contains three parameter - free and time - resolved measures ( see section [ s : information - extraction ] ) .",
    "these measures are complementary to each other since each one addresses a different specific aspect of spike train similarity . while the isi - distance quantifies local dissimilarities based on covariances of the neurons firing rate profiles , both the spike - distance and spike - synchronization capture the relative timing of local spikes . however , whereas the spike - distance weights and normalizes the differences between nearest neighbor spikes , spike - synchronization acts as a binary coincidence detector , i.e. there is a cutoff at the ( adaptive ) time lag relative to which two neighboring spikes are either considered coincident or not and all detailed information both within or outside this coincidence window is discarded .",
    "all of these measures yield instantaneous values for each pair of spike trains , and thus there are many different possible representations of the results ( see section [ s : information - extraction ] ) .",
    "often the most informative representation might depend on the amount and type of spike train data and spiky can be used to reveal it via some explorative and interactive analysis .",
    "spiky also allows to alter a given dataset before or after the actual analysis , e.g. , to interactively select subintervals or spike train subsets , to define time markers and spike train separators , and to divide the dataset into different spike train groups .",
    "in addition to the main gui designed for the detailed analysis of one dataset , the spiky - package also includes two complementary programs . while spiky_loop aims at the grand average analysis of large numbers of datasets , spiky_loop_surro allows the estimation of significance levels . in all of these programs we use mex - files , i.e. c - based matlab executables for the more time - consuming parts and we exploit the piecewise linearity of the dissimilarity profiles , thereby guaranteeing high computation speed and memory efficiency .",
    "one of the measures included in spiky is the realtime spike - distance .",
    "the present algorithm calculates its instantaneous dissimilarity values by making use of past information only but it does so in a speed - optimized and parallelized manner which would not be compatible with an actual realtime - implementation .",
    "however , such a realtime - implementation should actually be simpler and computationally ( speed and memory ) less problematic even for large numbers of neurons since the only information that would have to be stored at each time instant are the time stamps of the latest spikes of each spike train and their nearest neighbors in the other spike trains .",
    "spiky was primarily designed to analyze neuronal spike trains .",
    "but in principle it is also applicable to any other kind of discrete data which comes in the form of sequences of time stamps ( such as times of bouncing basketballs or time - coded social interactions in a psychological test ) .",
    "furthermore , in @xcite the spike - distance was already applied not only to discrete data but also to an example of continuous data ( eeg ) . to clear the way for such applications spiky includes an event detector which allows to bridge the gap between continuous data and our methods for discrete data .",
    "we chose to write spiky in matlab due to its popularity in the neuroscience community , ease of use , and the engaging visualization capabilities of its gui design .",
    "because of its high level parallelization , matlab provides a powerful tool for processing vectorized data , but it also includes a well - developed mex - interface for integrating c functions for performance enhancements .",
    "c functions do not only lead to an increase in performance , they can also easily be incorporated into other programming platforms .",
    "indeed , we have already ported all four measures ( the psth , the isi - distance , the spike - distance and spike synchronization ) as well as some of the additional spiky - functionality to python as part of the pyspike module , an open - source project hosted on github . as in spiky , in pyspike",
    "the computation intensive functions are implemented as c backends .",
    "another potential direction would be the extension of the methods used here from the quantification of synchrony within one population of two or more neurons to the quantification of synchrony between two ( or more ) neuronal populations .",
    "similar extensions have been done for two other spike train distances @xcite but both of these methods depend on not one but two parameters .",
    "so one particular challenge for a potential extension of our methods would be to make them parameter - free while maintaining their high temporal resolution .",
    "there are still many open questions regarding neuronal synchrony . among these questions are its role in dynamical diseases like epilepsy and its relevance for neural coding .",
    "while a thorough discussion of these issues is beyond the scope of this paper , we argue that spiky will be a very useful tool for investigation .",
    "if epileptic seizures and/or time - dependent stimulations lead to changes in spike train synchrony or spike train clustering , spiky should be able to detect them .",
    "tk , mm , and nb acknowledge funding support from the european commission through the marie curie initial training network ` neural engineering transformative technologies ( nett ) ' , project 289146 , and tk also through the european joint doctorate complex oscillatory systems : modeling and analysis ( cosmos) , project 642563 . tk acknowledges the italian ministry of foreign affairs regarding the activity of the joint italian - israeli laboratory on neuroscience and nb acknowledges the serbian ministry of youth and sports .",
    "tk thanks marcus kaiser and his group for hosting him at the university of newcastle , uk .",
    "nb thanks john van opstal and his group for hosting him at the radboud university , nijmegen , netherlands as well as joshua d berke and his group for hosting him at the university of michigan , ann arbor , mi , usa .    we thank ralph andrzejak , david angulo garcia , francesco battaglia , roman bauer , joshua d. berke , paolo bonifazi , emily caporello , daniel chicharro , michael farries , tim gentner , bon - mi gu , arif hamid , conor houghton , marcus kaiser , jutta kretzberg , tatjana loncar turukalo , stefano luccioli , jason maclean , gorana mijatovic , ali mohebi , florian mormann , leon paz , jeffrey pettibone , friederice pirschel , andreea sburlea , peter taylor , richard tomsett , alessandro torcini , jonathan victor , and yujiang wang for useful discussions .",
    "we also thank thomas alderson , mayte bonilla quintana , hamid charkhkar , didier desaintjan , mario dipoppa , andres espinal jimnez , mahboubeh etemadi , gabriel chew guojun , taekyung kang , marion najac , oren , robert rein , rodrigo salazar , andreea sburlea , michael schaub , eitan schechtman , jannetta steyn , matthew williams , yunguo yu , maja zorovic for user feedback and black square , conor houghton , eugenio piasini , matthew phillips , and sid visser for advice .",
    "bower mr , stead m , meyer fb , marsh wr , worrell ga .",
    "spatiotemporal neuronal correlates of seizure generation in focal epilepsy .",
    "epilepsia , 2012;53:807 - 16 .  m , gutkin bs .",
    "correlations in background activity control persistent state stability and allow execution of working memory tasks .",
    "front comp neurosci , 2013;7:139 .",
    "hochberg lr , serruya md , friehs gm , mukand ja , saleh m , caplan ah , branner a , chen d , penn rd , donoghue jp .",
    "neuronal ensemble control of prosthetic devices by a human with tetraplegia .",
    "nature , 2006;442:164 - 71 ."
  ],
  "abstract_text": [
    "<S> techniques for recording large - scale neuronal spiking activity are developing very fast . </S>",
    "<S> this leads to an increasing demand for algorithms capable of analyzing large amounts of experimental spike train data . </S>",
    "<S> one of the most crucial and demanding tasks is the identification of similarity patterns with a very high temporal resolution and across different spatial scales . to address this task , in recent years three time - resolved measures of spike train synchrony </S>",
    "<S> have been proposed , the isi - distance , the spike - distance , and event synchronization . </S>",
    "<S> the matlab source codes for calculating and visualizing these measures have been made publicly available . </S>",
    "<S> however , due to the many different possible representations of the results the use of these codes is rather complicated and their application requires some basic knowledge of matlab . </S>",
    "<S> thus it became desirable to provide a more user - friendly and interactive interface . </S>",
    "<S> here we address this need and present spiky , a graphical user interface which facilitates the application of time - resolved measures of spike train synchrony to both simulated and real data . </S>",
    "<S> spiky includes implementations of the isi - distance , the spike - distance and spike - synchronization ( an improved and simplified extension of event synchronization ) which have been optimized with respect to computation speed and memory demand . </S>",
    "<S> it also comprises a spike train generator and an event detector which makes it capable of analyzing continuous data . </S>",
    "<S> finally , the spiky package includes additional complementary programs aimed at the analysis of large numbers of datasets and the estimation of significance levels .    ,    and </S>"
  ]
}
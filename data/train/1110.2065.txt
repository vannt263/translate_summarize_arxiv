{
  "article_text": [
    "constraint satisfaction problems ( csp ) are problems in which a set of variables , which can take values in a specified domain , have to satisfy a number of constraints .",
    "each constraint usually restricts the values that a subset of the variables can take .",
    "the problem then is to find an assignment of the variables that satisfies all the constraints . the k - satisfiablity problem ( k - sat ) is an important example of a csp . in this problem ,",
    "the variables are considered boolean , taking values true or false , and each constraint is in the form of a clause , which restricts the values of @xmath1 variables at a time , disallowing @xmath5 out of the @xmath6 possible values that these @xmath1 variables can take together .",
    "satisfiablity has been a fundamental problem for almost forty years in computer science .",
    "it is known that as soon as there are clauses which restrict the values of @xmath7 variables , this problem is np -complete @xcite , _",
    "i.e. _ , potential solutions can be verified easily for correctness , but finding a solution can take exponential time in the worst case .",
    "in addition , being np - complete , should a polynomial - time algorithm be found for solving sat , it is also possible to adapt it to solve in polynomial - time all problems in np .",
    "the version of the k - sat that we are interested in , in this paper is the random k - sat , which has been very well investigated in the past few years . in the random k - sat one looks at the ensemble of randomly generated logical expressions , where each logical expression or formula is an and of m clauses .",
    "each clause consists of an or of @xmath1 boolean literals ( a literal being one of the @xmath8 variables or its negation ) , chosen randomly from a set of @xmath8 boolean variables .",
    "as the ratio @xmath9 increases it becomes harder to find satisfiable assignments for all the @xmath8 variables that can satisfy the logical expression of @xmath10 clauses .",
    "one of the questions of interest is hence if there exist a @xmath11 , beyond which in the limit of @xmath12 and @xmath13 , no satisfying assignments exist .",
    "numerical experiments have shown in the past that if one studies the probability that a randomly chosen formula having @xmath14 clauses is satisfiable , the probability approaches @xmath5 for @xmath15 and vanishes for @xmath16 when @xmath17 @xcite .",
    "the existence of a sharp transition ( the solvability transition ) is intrinsic to the problem and not an artifact of any particular algorithm ( in @xcite the existence of a possibly @xmath8-dependent transition is proved for any @xmath1 ) , but its location has not been determined rigorously with the exception of @xmath18 @xcite .",
    "there are however several rigorous bounds on @xmath19 , both upper and lower ( see @xcite for a review of these ) .",
    "in addition , powerful methods from statistical physics , taking advantage of the connection of this problem to the theory of mean field spin glasses , have been used to conjecture values for the threshold that seem to be very accurate numerically @xcite .",
    "the above problems are all originally defined on random graphs , where the presence of large loops makes the problem hard to solve exactly . hence solving the problem on trees or locally tree - like graphs",
    "has played an important role in elucidating the nature of the solvability transition as well as other phase transitions present in the problem .",
    "infact the methods from statistical physics assume the absence of correlations between some random variables , which is equivalent to solving the k - sat problem on a locally tree - like graph .",
    "in addition , it has also been shown that certain problems on a tree , in particular the tree - reconstruction problem @xcite , become equivalent to the spin glass problem on a random graph .    in this paper",
    "we study the k - sat problem on a regular @xmath0-ary rooted tree in which every vertex ( except the leaves ) has exactly @xmath0 descendents .",
    "the values that the surface nodes ( or leaves ) take on the tree , are fixed .",
    "for a given assignment of the surface nodes , and a given realization of clauses on the tree , one can ask how many assignments of the variables on the tree are solutions .",
    "for such a tree graph , we can exactly calculate the moments of this quantity averaged over all realizations .",
    "the behaviour of the moments is similar to that on the random graph , and we find that there is a different `` critical '' point associated with each moment as in the random energy model considered by derrida @xcite .",
    "we also calculate exactly the fraction of realizations that have solutions , for a tree of any size .",
    "this property too shows a similarity to the behaviour of the model on a random graph , since there is a value of @xmath0 above which the fraction of realizations that have solutions @xmath20 as @xmath13 .",
    "we also look at this quantity in the interior of an infinite tree , and show that a different transition takes place in this limit .",
    "the plan of the paper is as follows : in section [ sec : model ] we introduce the model . in sections",
    "[ sec:2satmom ] , [ sec:3satmom ] and [ sec : ksatmom ] we calculate the moments of the number of assignments that are solutions averaged over all realizations for a randomly fixed boundary , for 2-sat , 3-sat and arbitrary @xmath1 respectively . in section [ sec : rec_prob ] , we calculate the probability that a given realization has at least one solution ( or equivalently the fraction of realizations that have solutions ) , as a function of the depth of the tree . in section",
    "[ sec : fp ] , we carry out the fixed - point analysis relevant for the interior of an infinite tree .",
    "we end with a summary and discussion in section [ sec : summary ] .",
    "and @xmath21 .",
    "only the clauses neighboring the root are labelled .",
    "the surface variables are depicted by a @xmath22 . dashed / full lines between a variable and a clause",
    "indicate that it is negated / un - negated . ]",
    "we define the k - sat problem on a tree as follows .",
    "consider a regular @xmath0-ary tree @xmath23 in which every vertex has exactly @xmath0 descendents .",
    "the root of the tree @xmath24 has degree @xmath0 and its @xmath0 edges are connected to function nodes @xmath25 .",
    "each function node has degree @xmath1 , and each of its @xmath26 descendents @xmath27 is the root of an independent tree ( see fig .",
    "[ fig : sat ] ) .",
    "hence the root has a degree @xmath0 while all the other vertices on the tree ( except the leaves which have a degree @xmath28 ) have a degree @xmath29 .",
    "each function node is associated independently with a clause @xmath30 , where the vertices @xmath31 are the neighboring vertices of the function node , joined to the function node by a dashed or solid edge indicating whether the corresponding vertex is negated or not in the clause .",
    "we consider only the case where the vertices can take one of two values @xmath3 or @xmath5 and the case when every function node is given by @xmath32 . here",
    "@xmath33 is one of the two literals @xmath34 or @xmath35 , depending on whether @xmath34 is joined to the function node by a dashed or a solid line ( fig .",
    "[ fig : sat ] ) .",
    "an assignment @xmath36 of all the variables on the tree ( barring the surface variables which take fixed values , see below ) is a solution iff @xmath37 for all the clauses on the tree .",
    "one configuration of dashed and solid lines on the tree defines a realization @xmath38 .    for a random k - sat problem ,",
    "i.e. a k - sat problem on a random graph , the variable @xmath39 where @xmath10 is the total number of clauses and @xmath8 is the total number of variables ( vertices ) , is a meaningful quantity .",
    "as a function of this one can ask , for example , how the moments of the _ total _ number of solutions ( averaged over all realizations ) scale with @xmath8 .    to ask the same question meaningfully here on a tree , it is usual to fix the values of the variables on the surface of the tree .",
    "if we consider the surface variables to have depth @xmath3 , then we can denote this condition by @xmath40 , where @xmath41 is the assignment of the variables at the @xmath42 depth and @xmath43 signifies a particular assignment for the variables at this depth .",
    "variables removed from the surface by one function node ( or one level ) are at depth @xmath5 and so on .",
    "the tree is said to have a depth @xmath44 if the root is @xmath44 levels away from the surface .",
    "if the surface variables are fixed , then its easy to check that @xmath45 , where @xmath46 and @xmath47 are respectively , the total number of clauses for a tree of depth @xmath44 and the total number of vertices ( @xmath48 if the surface variables are left free ) .",
    "so @xmath49 is the equivalent of @xmath0 on a tree with fixed boundary conditions .",
    "let us denote the total number of solutions ( a sum over all @xmath36 which are solutions ) for a particular realization of a tree of depth @xmath44 and a specific boundary condition @xmath43 as @xmath50 .",
    "this is a stochastic variable which varies from realization to realization as well as from one boundary condition to another .",
    "the first moment of this quantity , averaged over all realizations ( for a fixed boundary condition ) , is trivially computed and is equal to @xmath51 ( we derive this later in section [ sec:2satmom ] ) . in this case , if @xmath52 , then the number of solutions grows as the tree gets bigger and if @xmath53 , then the number of solutions decreases as the number of variables grows .",
    "critical _ point of the first moment is therefore at @xmath54 .",
    "this gives @xmath55 .",
    "note that , from simple considerations , it is easy to see that even the random k - sat has the same expression for the first moment as on the tree , with @xmath0 replaced by @xmath49 .",
    "this expression for the first moment gives an annealed approximation for @xmath56 .",
    "we are henceforth interested in also estimating the higher moments for @xmath50 . before writing down the recursions for this quantity on the tree however , we introduce a little more notation . by @xmath57",
    "we denote all the clauses which are neighbours of variable @xmath34 and are satisfied by it .",
    "similarly , by @xmath58 we denote all the clauses which are neighbours of variable @xmath34 but are not satisfied by it .",
    "let @xmath59 and @xmath60 denote the number of solutions for a tree of depth @xmath44 ( for a given realization and boundary condition @xmath43 ) in which the root takes the value @xmath3 and @xmath5 respectively .",
    "we can write the exact recursion equations on the tree for the stochastic variable @xmath50 .",
    "we first look at the form of these recursions for 2-sat . for ease of notation",
    "we henceforth omit the @xmath43 in the argument .",
    "a _ rooted _ tree of depth @xmath44 is generated by taking a root of degree @xmath0 , then picking , for all edges connecting the root to the function node , independently the type of edge ( dashed or solid ) and finally attaching trees of depth @xmath61 to the other end of the function node ( again via edges that are independently chosen to be dashed or solid ) , see fig .",
    "[ fig : treeschema ] .",
    "- the root of a tree of depth @xmath44- is connected through clauses @xmath62 , @xmath63 and @xmath64 to variables @xmath65 , @xmath66 and @xmath67 respectively , each of which is in turn the root of a tree of depth @xmath61 . ]",
    "let @xmath68 be the cardinality of the set @xmath69 , when vertex @xmath24 takes value @xmath3 .",
    "then the vertices along the other edge of these clauses can only take on the specific value satisfying the clause , for any realization of the edge connecting them to the clause .",
    "for those clauses satisfied by @xmath24 ( @xmath70 of them ; @xmath70 is just the cardinality of the set @xmath71 ) , the vertex at the other edge of the clause is free to take any value .",
    "so the number of solutions for the tree of depth @xmath44 , with root node taking value @xmath72 , for this specific realization ( and boundary condition ) , is the product of the number of solutions of @xmath0 sub - trees of depth @xmath61 .",
    "the recursion relation for @xmath73 is hence : f_r(n ) = _ i=1^d - d_1 z_r_i(n-1 ) _ i = d - d_1 + 1^d ( f_r_i(n-1 ) _",
    "i + g_r_i(n-1 ) ( 1-_i ) ) [ eq : f2sat ] where @xmath74 denotes the realization of each of the sub trees rooted in the descendents of @xmath24 and @xmath75 is a stochastic variable which is equally likely to take the value @xmath3 or @xmath5 , depending on whether the edge joining the variable at depth @xmath61 to its clause is dashed or solid . similarly ,",
    "g_r(n ) = _ i = d - d_1 + 1^d z_r_i(n-1 ) _ i=1^d - d_1 ( f_r_i(n-1 ) _",
    "i + g_r_i(n-1)(1-_i ) ) [ eq : g2sat ] and , z_r(n ) = g_r(n ) + f_r(n ) [ eq : z2sat ]    we can define , @xmath76 as the fraction of solutions in which the root @xmath24 takes the value @xmath3 for a given realization @xmath38 and a fixed but arbitrary boundary condition @xmath43 .",
    "note then that if , for a given @xmath38 , we selectively sum over those boundary conditions which result in a certain @xmath77 , this gives the recursion for the residual distribution at the root derived earlier in the context of tree reconstruction in @xcite .",
    "our interest here however is to calculate the moments of @xmath78 from the above recursion relations _ by averaging over all _ realizations , for an arbitrary boundary condition @xmath43 .",
    "hence by @xmath79 , we will denote an average over all realizations @xmath38 for a tree of depth @xmath44 .",
    "it is easy to see that such an average is achieved at the root , by averaging over all possible @xmath68 s for a given @xmath0 , where the probability that there are @xmath68 clauses unsatisfied by the root is given by the binomial distribution @xmath80 .",
    "also note that since different branches of the tree are independent of each other , we have , f_r_i(n ) f_r_j(n)= f_r_i(n)f_r_j(n)= f_r(n ) ^2 where @xmath81 and @xmath82 are variables along different branches .",
    "in addition , f_r_i(n ) = g_r_i(n ) [ eq : symm ] by symmetry .",
    "infact this is true for any moment of @xmath83 ( or @xmath84 ) .",
    "it is also easy to see that _",
    "i = 0.5 _ i ( 1-_i ) = 0 and _ i _ j = _ i _ j= 0.25    using the above equations , we can now solve eq .",
    "[ eq : f2sat ] to obtain the different moments .",
    "the average number of solutions as discussed earlier , can be obtained by just looking at the probability of satisfying individual clauses . in this section",
    "we average eq .",
    "[ eq : f2sat ] and make use of eq .",
    "[ eq : symm ] to obtain ( after removing subscripts for ease of notation ) : z(n ) = 2 f(n ) and f(n ) = ( z(n-1 ) + f(n-1 ) ) ^d    f(n ) = ( ) ^d ( z(n-1 ) ) ^d    which implies z(n ) = 2 ( ) ^d ( z(n-1 ) ) ^d [ eq : av2sat ] this is a simple recursion relation which we can solve easily for any boundary condition .",
    "the recursion relation at the boundary is z(1 ) = 2()^d [ eq : bc2sat ] and , f(1 ) = ( ) ^d eq .",
    "[ eq : bc2sat ] follows from eq .",
    "[ eq : av2sat ] by noting that @xmath85 . using the boundary condition eq .",
    "[ eq : bc2sat ] , we can solve the recursion relation eq .",
    "[ eq : av2sat ] to get the same result for the average number of solutions as mentioned in section [ sec : model ] .      to get the second moment ,",
    "note z^2(n ) = 2 f^2(n)+ 2 f(n)g(n ) from the recursion eq .",
    "[ eq : f2sat ] for the stochastic variable @xmath86 , we have , f^2_r(n ) = _ i=1^d - d_1 z^2_r(n-1 ) _ i = d - d_1 + 1^d ( f_r(n-1)_i+ g_r(n-1)(1-_i))^2 this gives ( again getting rid of subscripts ) , f^2(n ) & = & ( z^2(n-1 ) + f^2(n-1 ) ) ^d + & = & ( 2 f^2(n-1 ) + 2 f(n-1)g(n-1 ) + f^2(n-1 ) ) ^d + & = & ( ( 3/2 ) f^2(n-1 ) + f(n-1)g(n-1 ) ) ^d similarly the equation for @xmath87 is : f(n ) g(n ) = ( f^2(n-1)+ f(n-1)g(n-1))^d these two coupled equations need to be solved to get the second moment .",
    "the boundary conditions are , f^2(1 ) = ( ) ^d which we get by noting that @xmath88 and @xmath89 .",
    "similarly , f(1)g(1 ) = ( ) ^d . to solve the coupled recursion equations ,",
    "let us define the ratio r_n then we have the following equation for @xmath90 .",
    "r_n = with boundary condition @xmath91 .    for large @xmath44 , @xmath90 reaches a fixed point and in that limit we can solve for the fixed point of this equation to get @xmath92 .",
    "if we now approximate the equation for f^2(n ) ~f^2(n-1 ) ^d ( 3/2 + r^(d))^d we can solve this to get ( for @xmath93 ) , f^2(n ) ~^d^n if the term in the brackets is @xmath94 , the second moment decreases with system size .",
    "if it is @xmath95 , then the second moment increases with system size .",
    "the `` critical '' value lies between @xmath96 and @xmath97 . to get the value of this threshold",
    "more precisely , we need to solve the equation f^2(n ) ~f^2(n-1 ) ^d ( 3/2 + r_n-1(d))^d exactly . solving it",
    "numerically we get the critical value of @xmath0 to lie between @xmath98 and @xmath99 .",
    "we can follow this procedure for any moment though the number of coupled recursions that have to be solved simultaneously , increase with the order of the moment .",
    "the recursion relations for higher @xmath1 though slightly more complicated , follow the same logic as for @xmath18 .",
    "we carry out the computation for @xmath100 here . now",
    "the recursion relation for @xmath86 is : & f_r ( n ) & = _ i=1^d - d_1 z_r_i1 z_r_i2 + & _ i = d - d_1 + 1^d & [ eq : f3sat ] where we have removed the dependence on @xmath61 in the lhs for ease of presentation . we can also write a similar equation for @xmath84 .",
    "the @xmath101 s are the same as appear earlier .",
    "the @xmath102 and @xmath103 s signify the two variables at the end of the same clause , ( see fig [ fig : sat ] ) .",
    "since they belong to two different branches , their averages still decouple .",
    "the second term is the counterpart of the term appearing in 2-sat along the branches where the root was not satisfying the clause ( or link in 2-sat ) . in the case of 3sat , if the root does not satisfy one of it clauses , the other two variables are _ collectively _ constrained to not take @xmath5 out of the @xmath104 total assignments they could have had . which specific assignment is forbidden depends on the realization .      again removing subscripts ,",
    "f(n ) = ( z(n-1)^2 + z(n-1)^2 - f(n-1 ) ^2 ) ^d    f(n ) & = & ( 2z(n-1 ) ^2 - f(n-1 ) ^2 ) ^d + & = & ( ) ^d ( z(n-1 ) ) ^2d implying z(n ) = 2()^d ( z(n-1 ) ) ^2d [ eq : av3sat ] as before , we need to solve the recursion relations keeping the boundary conditions in mind , the recursion relation at the boundary is z(1 ) = 2 ( ) ^d and , f(1 ) = ( ) ^d we can now solve eq , [ eq : av3sat ] to get the result for the annealed average , already mentioned in section  [ sec : model ] .      squaring eq .",
    "[ eq : f3sat ] and taking averages , we get , f^2(n ) & = & _ i=1^d - d_1 z_i1 ^ 2(n-1 ) z_i2 ^ 2(n-1 ) + & _ i = d - d_1 + 1^d & ( z_i1 z_i2 - ( f ( n-1)_i1 + g(n-1)(1-_i1 ) ) ( f ( n-1)_i2 + g(n-1)(1-_i2 ) ) ) ^2    simplifying , we get ,    f^2(n ) & = & ( z^2(n-1 ) ^2 + z^2(n-1 ) ^2 + f^2(n-1 ) ^2 -2 f(n-1 ) z(n-1)^2 ) ^d + & = & ( 7 f^2(n-1 ) ^2 + 6 f(n-1)g(n-1 ) ^2 + 12 f(n-1)g(n-1 ) f^2(n-1 ) ) ^d similarly the equation for @xmath105 is f(n ) g(n ) = ( 3 f^2(n-1 ) ^2 + 3 f(n-1)g(n-1 ) ^2 + 6 f(n-1)g(n-1 ) f^2(n-1 ) ) ^d    again defining the ratio of @xmath105 to @xmath106 as @xmath90 , we get [ eq : fp3sat ] r_n+1 = ^d with @xmath107 .    going through the same procedure as before , we find that the second moment diverges for @xmath108 . in comparison ,",
    "the first moment diverges for @xmath109 .",
    "similarly , we can easily write the recursions for @xmath86 for any @xmath1 . skipping details , the equation for the @xmath90 s and for @xmath106 for arbitrary @xmath1 are : r_n+1 = ^d where g(r_n)= ( 2^k-1 - 1 ) _ i=0^k-2 (    c k-1 + i    ) r_n^k-1-i and f^2(n ) & = & f^2(n-1 ) ^(k-1)d ( ( 2^k-1 - 1/2 ) + g(r_n-1 ) ) ^d these expressions can be simplified a bit .",
    "we can write r_n+1 = ^d defining @xmath110    and f^2(n ) & = & f^2(n-1 ) ^(k-1)d ( 2^k-1 - 1)^(k-1)d(_k-1 +",
    "( 1+r_n-1)^k-1 ) ^d solving these numerically for different @xmath1 , we get the numbers in the third column of table [ tab : c ] .",
    ".the critical values of @xmath0 for the first and second moments on the rooted tree , determined by numerically solving the recursion relations derived in the text .",
    "the fourth column contains an estimate of the critical value from the expression for the second moment in eq .",
    "[ eq : overlap ] . [ cols=\"<,<,<,<\",options=\"header \" , ]",
    "in this paper , we have studied the k - sat problem on a rooted tree and have solved it exactly for several quantities .",
    "a lot of progress in understanding the k - sat problem has been made using the cavity method @xcite and a powerful heuristic , survey propagation(sp ) @xcite has been developed using these concepts .",
    "the sp equations , which are the basis for the algorithm , are a set of coupled equations for the cavity bias surveys messages sent from clauses to variables in terms of the probabilities of warnings received by the variable .",
    "the probability space over which these are computed is the space built by all sat assignments each given equal probability in a typical satisfiable instance .",
    "it is conjectured that this solution space , for @xmath111 , separates into many distant clusters , and hence the sp message along an edge gives the probability that a warning is sent in a randomly chosen cluster . under this assumption ,",
    "the sp equations lead to coupled integral equations with a non - trivial fixed point , known as the one step rsb solution .",
    "the same fixed point equations may also be obtained by different means , by considering a reconstruction problem on a tree @xcite .",
    "the difference between a rs ( replica - symmetric ) solution and a 1rsb solution in the tree case , is due to the absence or presence of a re - weighting factor in the fixed point equation @xcite .",
    "this re - weighting factor may be thought of as the term in eqns .",
    "[ eq : f2sat ] and [ eq : g2sat ] ( for e.g. ) , which involves the @xmath101 s . were we to replace the @xmath101 s simply by @xmath112 ( their average value ) , then the recursion would give the number of solutions at the next level of the tree as simply the product over the previous level .",
    "the presence of the @xmath101 s makes the recursion more non - trivial .",
    "the recursions in sections [ sec : rec_prob ] and [ sec : fp ] too , keep this re - weighting factor    another difference in our work from the cavity method or sp is that the marginal probabilities are calculated level by level , instead of for each variable separately .",
    "this simplifies analysis , but makes our treatment valid strictly only for trees , unlike sp which is used to solve the sat problem also on random graphs ( though there are no guarantees of convergence in this case ) .",
    "our model shows many of the non trivial features of the full random k - sat problem . to summarise",
    ", we find that different moments of the number of solutions start to decay at different values of @xmath0 .",
    "these values of @xmath0 are much larger than the value at which the solvability transition occurs .",
    "also the solvability transition in our model is continuous for @xmath18 and discontinuous for @xmath113 , as in random k - sat .",
    "in addition the fixed point equations predict for @xmath113 , a lower bound on the solvability transition in the interior of the tree .",
    "these numbers if converted to equivalent @xmath49 values on the random graph are very close to the values predicted for @xmath114 in the literature for random graphs with an average node - degree @xmath115 ( to make a more literal correspondence to our tree where every variable has the same degree , it would be interesting to compare with @xmath114 values predicted for regular random graphs ) .",
    "we should note though that the existence of @xmath114 is motivated in the literature by the structure of the space of solutions in random k - sat , while in this work , it arises as the point at which the recursions can have more than one solution , depending on boundary conditions . at this point ,",
    "the fraction of realizations in which a variable is constrained to take the same value in all sat assignments becomes non - zero .",
    "we can redo the computation of eqns .",
    "[ eq : ksatprob ] as well as the fixed point analysis , for other variations of the sat problem such as regular random k - sat , introduced in  @xcite and for which bounds on the threshold are derived in  @xcite .",
    "preliminary results from the fixed point analysis show that the fixed point equations have a similar behaviour as for k - sat , but predict smaller values of @xmath116 for the same @xmath1  @xcite , as indeed is also the numerical prediction for the solvability transition for this problem @xcite .",
    "it should also be possible to redo these calculations on a random tree ( where the degree of each vertex is poisson - distributed ) , though we do not expect the results to change qualitatively in this case .",
    "another interesting generalization of these calculations is to compute a more fine - grained quantity than @xmath117 , namely to compute the probability that , the root takes one of the two values a certain fraction @xmath118 of the times .",
    "it would be interesting to see if this quantity undergoes a transition in which @xmath118 changes from essentially taking the value @xmath112 to having a non - trivial distribution .",
    "note that a similar calculation for random tree ensembles , with however an average done over boundary conditions chosen uniformly over all satisfying assignments , is done in @xcite .",
    "we would like to thank satya majumdar for extremely useful discussions at the start of this project .",
    "we would also like to thank elitza maneva for a critical reading of the manuscript and guilhem semerjian and martin weigt for many insightful suggestions on the results as well as on the improvement of the presentation . during most of this work ,",
    "s.k was supported by the swedish research council .",
    "99 s. cook , proceedings of the 3rd anuual acm symposium on theory of computing , shaker heights , ohio , united states , ( acm press , new york , 1971 ) , p 151 .",
    "d. mitchell , b. selman and h. levesque , proc .",
    ", 459 ( 1992 ) .",
    "s. kirkpatrick and b. selman , science * 264 * , 1297 ( 1994 ) e. friedgut , j. am .",
    "* 12 * , 1017 ( 1999 ) .",
    "v. chvatal and b. reed , 33rd focs , 620 ( 1992 ) ; a. goerdt , j. comput . system .",
    ", * 53 * , 469 ( 1996 ) ; w. fernandez de la vega , theoret . comput .",
    "sci . * 265 * , 131 ( 2001 ) .",
    "d. achlioptas , theoret .",
    "* 265 * , 159 ( 2001 ) .",
    "m. mezard , g. parisi and r. zecchina , science * 297 * , 812 ( 2002 ) .",
    "s. mertens , m. mezard and r. zecchina , random structures and algorithms , * 28 * , 340 ( 2006 ) . m. mezard and a. montanari , j. stat . phys .",
    "* 124 * , 1317 ( 2006 )",
    ". b. derrida , phys .",
    "* 45 * , 79 ( 1980);b",
    ". derrida , phys .",
    "b * 24 * , 2613 ( 1981 ) .",
    "n. bhatnagar and e. maneva , to appear in siam j. on discreet math . , * 25 * , 854 ( 2011 ) l. troyansky and n. tishby , physcomp96 , extended abstract , may 1996 .",
    "d. achlioptas and c. moore , siam j comput . * 36 * , 740(2006 ) .",
    "d. achlioptas , a. naor and y. peres , nature * 435*,759(2005 ) .",
    "r. j baxter , exactly solvable models in statistical mechanics , academic press r. monasson and r. zecchina , phys .",
    "lett . * 76 * , 3881(1996 ) ; r. monasson and r. zecchina , phys .",
    "e * 56 * , 1357(1997 ) a. montanari , f. ricci - tersenghi and g. semerjian , j. stat mech .",
    ", p04004 ( 2008 ) .",
    "y. boufkhad , o. dubois , y. interian and b. selman , j. of autom . reasoning , * 35 * , 181 ( 2005 ) .",
    "v. rathi , e. aurell , l. k. rasmussen and m. skoglund , sat 2010 , 264 ( 2010 ) .",
    "g. semerjian , j. stat .",
    "phys.,*130 * , 251 ( 2008 ) a. braunstein , m. mezard and r. zecchina , random structures and algorithms , * 27 * , 201 ( 2005 ) .",
    "m. mezard and r. zecchina , phys .",
    "e , 66:056126 ( 2002 ) ."
  ],
  "abstract_text": [
    "<S> we consider the k - satisfiability problem on a regular @xmath0-ary rooted tree . for this model , </S>",
    "<S> we demonstrate how we can calculate in closed form , the moments of the total number of solutions as a function of @xmath0 and @xmath1 , where the average is over all realizations , for a fixed assignment of the surface variables . </S>",
    "<S> we find that different moments pick out different critical values of @xmath0 , below which they diverge as the total number of variables on the tree @xmath2 and above which they decay . </S>",
    "<S> we show that k - sat on the random graph also behaves similarly . </S>",
    "<S> we also calculate exactly the fraction of instances that have solutions for all @xmath1 . on the tree </S>",
    "<S> , this quantity decays to @xmath3 ( as the number of variables increases ) for any @xmath4 . </S>",
    "<S> however the recursion relations for this quantity have a non - trivial fixed - point solution which indicates the existence of a different transition in the interior of an infinite rooted tree . </S>"
  ]
}
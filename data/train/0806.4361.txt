{
  "article_text": [
    "the range reporting problem is to store a set of @xmath8-dimensional points @xmath11 in a data structure , so that for a query rectangle @xmath12 all points in @xmath13 can be reported . in this paper",
    "we significantly improve the space usage and pre - processing time of the fastest previously known static and semi - dynamic data structures for orthogonal range reporting with only a negligible increase in the query time .",
    "the range reporting is extensively studied at least since 1970s ; the history of this problem is rich with different trade - offs between query time and space usage .",
    "static range reporting queries can be answered in @xmath14 time and @xmath15 space using range trees  @xcite known since 1980 ; here and further @xmath16 denotes the number of points in @xmath11 and @xmath3 denotes the number of points from @xmath11 in the query rectangle .",
    "the query time can be reduced to @xmath17 time by applying the fractional cascading technique of chazelle and guibas  @xcite designed in 1985 . the space usage was further improved by chazelle  @xcite . in 90s ,",
    "subramanian and ramaswamy  @xcite and bozanis , kitsios , makris , and tsakalidis  @xcite showed that @xmath8-dimensional queries can be answered in @xmath18 time for a constant @xmath19 .",
    "] at a cost of higher space usage : their data structures use @xmath15 and @xmath20 space respectively .",
    "alstrup , brodal , and rauhe  @xcite designed a data structure that answers queries in @xmath18 time and uses @xmath21 space for an arbitrary constant @xmath22 .",
    "nekrich  @xcite reduced the query time by @xmath23 factor and presented a data structure that answers queries in @xmath24 time for @xmath25 .",
    "unfortunately , the data structure of  @xcite uses @xmath26 space .",
    "recently , afshani  @xcite reduced the space usage to @xmath27 ; however his data structure uses randomization ( during the preprocessing stage ) . in this paper",
    "we present a data structure that matches the space efficiency of  @xcite at a cost of increasing the query time by a negligible @xmath10 factor : our data structure supports queries in @xmath28 time and uses @xmath21 space for @xmath25 .",
    "see table  [ table : stat ] for a more precise comparison of different results .",
    "= 1000 our result for @xmath8-dimensional range reporting is obtained as a corollary of a three - dimensional data structure that supports queries in @xmath29 time and uses @xmath1 space , where @xmath2 is the size of the universe , i.e. all point coordinates are positive integers bounded by @xmath2 .",
    "our three - dimensional data structure is to be compared with the data structure of  @xcite that also uses @xmath1 space but answers queries in @xmath30 time and the data structure of  @xcite that answers queries in @xmath29 time but needs @xmath31 space .",
    "see table  [ table:3dim ] for a more extensive comparison with previous results .",
    "a corollary of our result is an efficient semi - dynamic data structure that supports three - dimensional queries in @xmath32 time and insertions in @xmath33 time .",
    "thus we improve the space usage and the update time of fastest previously known semi - dynamic data structure  @xcite that supports insertions in @xmath34 time .",
    "= 1500 if we are ready to pay penalties for each point in the answer , the space usage can be further reduced : we describe a data structure that uses @xmath35 space and answers queries in @xmath36 time .",
    "we can also use this data structure to answer emptiness queries ( to determine whether query rectangle @xmath12 contains points from @xmath11 ) and one - reporting queries ( i.e. to report an _ arbitrary _",
    "point from @xmath37 if @xmath38 ) .",
    "this is an @xmath23 factor improvement in query time over the data structure of alstrup et .",
    "al .  @xcite .",
    "other similar data structures are either slower or require higher penalties for each point in the answer .    throughout this paper",
    ", @xmath4 denotes an arbitrarily small constant , and @xmath2 denotes the size of the universe .",
    "if each point in the answer can be output in constant time , we will sometimes say that the query time is @xmath39 ( instead of @xmath40 ) .",
    "we let @xmath41 $ ] denote the set of integers @xmath42 ; the intervals @xmath43 and @xmath44}$ ] denote the same set as @xmath41 $ ] but without @xmath45 ( resp .  without @xmath46 ) .",
    "we denote by @xmath47 $ ] the set @xmath48 $ ] .    in section  [ sec:3d1 ]",
    "we describe a space efficient data structure for three - dimensional range reporting on a @xmath49\\times [ u]\\times [ u]$ ] grid , i.e. in the case when all point coordinates belong to @xmath49 $ ] . in section  [ sec:3d2 ]",
    "we describe a variant of our data structure that uses less space but needs @xmath10 time to output each point in the answer .",
    "all results of this paper are valid in the word ram computation model .",
    "we use the same notation as in  @xcite to denote the special cases of three - dimensional range reporting queries : a product of three half - open intervals will be called a ( 1,1,1)-sided query ; a product of a closed interval and two half - open intervals will be called a ( 2,1,1)-sided query ; a product of two closed intervals and one half - open interval ( resp .  three closed intervals ) will be called a ( 2,2,1)-sided ( resp .",
    "( 2,2,2)-sided ) query",
    ". clearly ( 1,1,1)-sided queries are equivalent to dominance reporting queries , and ( 2,2,2)-sided query is the general three - dimensional query .",
    "the following transformation is described in e.g.  @xcite and  @xcite .",
    "[ lemma : transf ] let @xmath50 for @xmath51 .",
    "a data structure that answers @xmath52 queries in @xmath53 time , uses @xmath54 space , and can be constructed in @xmath55 time can be transformed into a data structure that answers @xmath56 queries in @xmath53 time , uses @xmath57 space and can be constructed in @xmath58 time for @xmath59 .",
    "we say that a set @xmath11 is on a grid of size @xmath16 if all coordinates of all points in @xmath11 belong to an interval @xmath60 $ ] .",
    "we will need the following folklore result :    [ lemma : folk ] there exists a @xmath61 space data structure that supports range reporting queries on a @xmath8-dimensional grid of size @xmath16 for any constant @xmath8 in @xmath62 time .",
    "one dimensional range reporting queries on the @xmath60\\times [ n]\\times [ n]$ ] grid can be answered in @xmath62 time using a trie with node degree @xmath63 . using range trees  @xcite with node degree @xmath64",
    "we can transform a @xmath8-dimensional @xmath54 space data structure into a @xmath65-dimensional data structure that uses @xmath66 space and answers range reporting queries in @xmath67 time , where @xmath68 is the height of the range tree . since @xmath69 , @xmath70 .",
    "hence , the query time does not depend on dimension and the space usage increases by a factor @xmath71 with each dimension .",
    "we use lemma  [ lemma : folk ] to obtain a data structure that supports queries that are a product of a @xmath72-dimensional query on a universe of size @xmath73 and a half - open interval .",
    "we will show in the next lemma that such queries can be answered in @xmath74 space and @xmath75 time .",
    "[ lemma : muchspace ] there exists a @xmath74 space data structure that supports range reporting queries of the form @xmath76 in @xmath62 time , where @xmath77 is a @xmath72-dimensional query on @xmath78\\times [ u_2]\\times\\ldots\\times   [ u_{d-1}]$ ] and @xmath79 .",
    "there are @xmath80 possible projections of points onto the first @xmath81 coordinates .",
    "let @xmath82 denote the point with minimal @xmath8-th coordinate among all points whose first @xmath81 coordinates equal to @xmath83 .",
    "we store points @xmath82 for all @xmath84$],@xmath85$],@xmath86,@xmath87 $ ] in a data structure @xmath88 .",
    "since @xmath88 contains @xmath80 points , we can use lemma  [ lemma : folk ] and implement @xmath88 in @xmath74 space .",
    "for all possible @xmath84$],@xmath85$],@xmath86 , @xmath87 $ ] we also store a list @xmath89 of points whose first @xmath81 coordinates are @xmath90 ; points in @xmath89 are sorted by their @xmath8-th coordinates .",
    "given a query @xmath91 , we first answer @xmath12 using the data structure @xmath88 .",
    "since @xmath88 contains @xmath80 points , we can find all points in @xmath92 in @xmath93 time .",
    "then , for every point @xmath94 found with help of @xmath88 , we traverse the corresponding list @xmath95 and report all points in this list whose last coordinate does not exceed @xmath96 .    in several places of our proofs we will use the _ reduction to rank space _",
    "technique  @xcite .",
    "this technique allows us to replace coordinates of a point by its rank .",
    "let @xmath97 , @xmath98 , and @xmath99 be the sets of @xmath96 , @xmath100- , and @xmath101-coordinates of points from @xmath11 . for a point @xmath102 ,",
    "let @xmath103 , where @xmath104 is defined as the number of elements in @xmath105 that are smaller than or equal to @xmath106 .",
    "a point @xmath107 belongs to an interval @xmath41\\times [ c , d ] \\times [ e , f]$ ] if and only if a point @xmath108 belongs to an interval @xmath109\\times [ c',d ' ] \\times [ e',f']$ ] where @xmath110 , @xmath111 , @xmath112 , @xmath113 , @xmath114 , @xmath115 , and @xmath116 ( @xmath117 ) denotes the smallest ( largest ) element in s that is greater ( smaller ) than or equal to @xmath106 .",
    "reduction to rank space can be used to reduce range reporting queries to range reporting on the @xmath60\\times [ n]\\times [ n]$ ] grid : suppose we can find @xmath118 and @xmath116 for any @xmath106 , where @xmath105 is @xmath97 , @xmath98 , or @xmath99 , in time @xmath119 .",
    "suppose that range reporting queries on @xmath60\\times [ n]\\times [ n]$ ] grid can be answered in time @xmath120",
    ". then we can answer range reporting queries in @xmath121 time .",
    "following  @xcite , we can also use the reduction to rank space technique to reduce the space usage : if a data structure contains @xmath122 elements , reduction to rank space allows us to store each element in @xmath123 bits .",
    "in this section we describe a data structure that supports three - dimensional range reporting queries in @xmath124 time where @xmath2 is the universe size and uses @xmath1 space .",
    "our data structure combines the recursive divide - and - conquer approach introduced in  @xcite , the result of lemma  [ lemma : muchspace ] , and the transformation of @xmath52-queries into @xmath56-queries described in lemma  [ lemma : transf ] .",
    "we start with a description of a space efficient modification of the data structure for ( 1,1,1)-sided queries on the @xmath60\\times [ n]\\times [ n]$ ] grid .",
    "then , we obtain data structures for @xmath125-sided and @xmath126-sided queries on the @xmath60\\times [ n]\\times [ n]$ ] grid using the recursive divide - and - conquer and lemma  [ lemma : muchspace ] . finally , we obtain the data structure that supports arbitrary orthogonal queries on the @xmath60\\times [ n]\\times [ n]$ ] grid using lemma  [ lemma : transf ] .",
    "reduction to rank space technique described in section  [ sec : prelim ] allows us to transform a data structure on the @xmath60\\times [ n]\\times [ n]$ ] grid into a data structure on the @xmath49\\times [ u]\\times [ u]$ ] grid , so that the query time increases by an additive term @xmath127 and the space usage is not increased .",
    "[ lemma : tbound ]  @xcite given a set of three - dimensional points @xmath11 and a parameter @xmath128 , we can construct in @xmath129 time a @xmath74 space data structure @xmath130 that supports the following queries on a grid of size @xmath16 : + ( i ) for a given query point @xmath131 , @xmath130 determines in @xmath132 time whether @xmath131 is dominated by at most @xmath128 points of @xmath11 + ( ii ) if @xmath131 is dominated by at most @xmath128 points from @xmath11 , @xmath130 outputs in @xmath133 time a list @xmath134 of @xmath135 points such that @xmath134 contains all points of @xmath11 that dominate @xmath131 .",
    "as described in  @xcite , lemma  [ lemma : tbound ] allows us to answer ( 1,1,1)-sided queries in @xmath132 time and @xmath136 space .",
    "we can reduce the space usage to @xmath137 using an idea that is also used in  @xcite .",
    "[ lemma : domin ] there exists a data structure that answers ( 1,1,1)-sided queries on @xmath60\\times [ n]\\times [ n]$ ] grid in @xmath138 time , uses @xmath137 space , and can be constructed in @xmath139 time .    for each parameter @xmath140 , @xmath141 , @xmath142",
    ", we construct a data structure @xmath143 of lemma  [ lemma : tbound ] . given a query point @xmath131 , we examine data structures @xmath143 , @xmath144 until @xmath131 is dominated by at most @xmath145 points of @xmath11 or the last data structure @xmath143 is examined .",
    "thus we identify the index @xmath146 , such that @xmath131 is dominated by more than @xmath147 and less than @xmath148 points or determine that @xmath131 is dominated by at least @xmath149 points . if @xmath150 , then @xmath131 is dominated by @xmath132 points .",
    "we can generate in @xmath132 time a list @xmath134 of @xmath132 points that contains all points dominating @xmath131 .",
    "then , we examine all points in @xmath134 and output all points that dominate @xmath131 in @xmath132 time . if @xmath151 , we can examine data structures @xmath152 , @xmath153,@xmath86 , @xmath154 in @xmath155 time .",
    "then , we generate the list @xmath134 that contains all points that dominate @xmath131 in @xmath156 time .",
    "we can process @xmath134 and output all @xmath3 points that dominate @xmath131 in @xmath156 time . since @xmath157 , @xmath158 and @xmath159 .",
    "hence , the query is answered in @xmath62 time .",
    "if @xmath160 , then @xmath131 is dominated by @xmath161 points . in this case",
    "we can use a linear space data structure with @xmath162 query time , e.g. the data structure of chazelle and edelsbrunner  @xcite , to answer the query in @xmath163 time .",
    "since each data structure @xmath143 uses linear space , the space usage of the described data structure is @xmath137 .",
    "[ lemma : two11 ] there exists a data structure that answers ( 2,1,1)-sided queries on @xmath60\\times [ n]\\times [ n]$ ] grid in @xmath164 time , uses @xmath165 space , and can be constructed in @xmath166 time .",
    "we divide the grid into @xmath96-slices @xmath167\\times [ n]\\times    [ n]$ ] and @xmath100-slices @xmath168\\times [ y_{j-1},y_j]\\times [ n]$ ] , so that each @xmath96-slice contains @xmath169 points and each @xmath100-slice contains @xmath169 points ; the value of a constant @xmath170 will be specified below .",
    "the cell @xmath171 is the intersection of the @xmath172-th @xmath96-slice and the @xmath173-th @xmath100-slice , @xmath174 .",
    "the data structure @xmath175 contains a point @xmath176 for each point @xmath177 .",
    "since the first two coordinates of points in @xmath175 are bounded by @xmath178 , @xmath175 uses @xmath74 space and supports ( 2,1,1)-sided queries in constant time by lemma  [ lemma : muchspace ] . for each @xmath96-slice",
    "@xmath179 there are two data structures that support two types of ( 1,1,1)-sided queries , open in @xmath180 and in @xmath181 directions . for each @xmath100-slice @xmath182",
    ", there is a data structure that supports @xmath183-sided queries open in @xmath184 direction . for each @xmath100-slice @xmath182 and for each @xmath96-slice",
    "@xmath179 there are recursively defined data structures .",
    "recursive subdivision stops when the number of elements in a data structure is smaller than a predefined constant .",
    "hence , the number of recursion levels is @xmath185 for @xmath186 .",
    "essentially we apply the idea of  @xcite to three - dimensional @xmath125-sided queries .",
    "if a query spans more than one @xmath96-slab and more than one @xmath100-slab , then it can be answered by answering two @xmath183-sided queries , one special @xmath125-sided query that can be processed using the technique of lemma  [ lemma : muchspace ] , and one @xmath125-sided query to a data structure with @xmath169 points .",
    "if a query is contained in a slab , then it can be answered by a data structure that contains @xmath169 points .",
    "we will show below that the query time is @xmath187 .",
    "each point is stored in @xmath188 data structures on recursion level @xmath172 , but space usage can be reduced because the number of points in data structures quickly decreases with the recursion level",
    ". we will show below that every point in a data structure on recursion level @xmath172 can be stored with approximately @xmath189 bits for an arbitrarily small @xmath190 .",
    "* query time . * given a query @xmath191\\times{(-\\infty , c]}\\times { ( -\\infty , d]}$ ] we identify the indices @xmath192 ,",
    "@xmath193 , and @xmath194 such that projections of all cells @xmath171 , @xmath195 , @xmath196 , are entirely contained in @xmath41\\times{(-\\infty , c]}$ ] .",
    "let @xmath197 , @xmath198 , and @xmath199 .",
    "the query @xmath12 can be represented as @xmath200 , where @xmath201\\times { ( -\\infty , c_0]}\\times { ( -\\infty , d]}$ ] , @xmath202}\\times { ( -\\infty , d]}$ ] , @xmath203}\\times { ( -\\infty , c ] } \\times { ( -\\infty , d]}$ ] , and @xmath204\\times{(c_0,c]}\\times{(-\\infty , d]}$ ]",
    ". see fig .  [",
    "fig : exam211 ] for an example .",
    "query @xmath205 can be answered using @xmath175 .",
    "queries @xmath206 and @xmath207 can be represented as @xmath208}\\times { ( -\\infty , d]})\\cap x_{i_1}$ ] and @xmath209}\\times { ( -\\infty , c ] } \\times { ( -\\infty , d]})\\cap x_{i_2}$ ] ; hence , @xmath206 and @xmath207 are equivalent to @xmath183-sided queries on @xmath96-slices @xmath210 and @xmath211 .",
    "the query @xmath212 can be answered by a recursively defined data structure for the @xmath100-slice @xmath213 because @xmath214\\times{(-\\infty , c]}\\times{(-\\infty , d ] } ) \\cap y_{j_1}$ ] .",
    "if @xmath215 and the query @xmath12 is contained in one @xmath96-slice , then @xmath12 is processed by a recursively defined data structure for the corresponding @xmath96-slice .",
    "thus a query is reduced to one special case that can be processed in constant time , two @xmath183-sided queries , and one ( 2,1,1)-sided query answered by a data structure that contains @xmath169 elements .",
    "queries @xmath206 and @xmath207 can be answered in @xmath132 time , the query @xmath205 can be answered in constant time .",
    "the query @xmath212 is answered by a recursively defined data structure that contains @xmath216 elements . if @xmath215 or @xmath217 , i.e. if @xmath12 is entirely contained in one @xmath96-slice or one @xmath100-slice , then the query is answered by a data structure for the corresponding slice that contains @xmath216 elements .",
    "hence , the query time @xmath218 and @xmath219 .    * space usage . *",
    "the data structure consists of @xmath10 recursion levels .",
    "the total number of points in all data structures on the @xmath172-th recursion level is @xmath220 .",
    "hence all data structures on the @xmath172-th recursion level require @xmath221 bits of space .",
    "the space usage can be reduced by applying the reduction to rank space technique  @xcite .",
    "as explained in section  [ sec : prelim ] , reduction to rank space allows us to replace point coordinates by their ranks . hence ,",
    "if we use this technique with a data structure that contains @xmath122 elements , each point can be specified with @xmath123 bits .",
    "thus , we can reduce the space usage by replacing point coordinates by their ranks on certain recursion levels .",
    "we apply reduction to rank space on every @xmath222-th recursion level for @xmath223 .",
    "let @xmath224 be an arbitrary data structure on recursion level @xmath225 for @xmath226 .",
    "let @xmath227 be the set of points that belong to an @xmath96-slice or a @xmath100-slice of @xmath224 .",
    "we store a dictionary that enables us to find for each point @xmath102 from @xmath227 a point @xmath228 where @xmath229 , @xmath230 , @xmath231 , and @xmath232,@xmath233 , and @xmath234 are the sets of @xmath96- , @xmath100- , and @xmath101-coordinates of all points in @xmath227 .",
    "let @xmath235 be the set of all points @xmath108 .",
    "conversely there is also a dictionary that enables us to find for a point @xmath236 the corresponding @xmath237 .",
    "the data structure that answers queries on @xmath227 stores points in the rank space of @xmath227 . in general , all data structures on recursion levels @xmath238 obtained by subdivision of @xmath227 store points in rank space of @xmath227 .",
    "that is , point coordinates in all those data structures are integers bounded by @xmath239 .",
    "if such a data structure @xmath240 is used to answer a query @xmath12 , then for each point @xmath241 , we must find the corresponding point @xmath242 .",
    "since range reduction was applied @xmath75 time , we can find for any @xmath243 the corresponding @xmath242 in @xmath75 time .",
    "each data structure on level @xmath244 for @xmath245 and @xmath246 contains @xmath247 elements for @xmath248 .",
    "hence an arbitrary element of a data structure on level @xmath249 can be specified with @xmath250 bits .",
    "the total number of elements in all data structures on the @xmath249-th level is @xmath251 .",
    "hence all elements in all data structures on the @xmath249-th recursion level need @xmath252 bits .",
    "we choose @xmath170 so that @xmath253",
    ". then @xmath254 and @xmath255 .",
    "since @xmath256 , @xmath257 .",
    "therefore all data structures on level @xmath249 use @xmath258 bits of space or @xmath259 words of @xmath149 bits .",
    "the number of elements in all data structures on levels @xmath260 increases by a factor two in each level .",
    "hence , the total space ( measured in words ) needed for all data structures on all levels @xmath131 , @xmath261 , is @xmath262 because @xmath263 and @xmath264 .",
    "thus all data structures in a group of @xmath265 consecutive recursion levels use @xmath165 words of space .",
    "since there are @xmath266 such groups of levels , the total space usage is @xmath165 .",
    "* construction time . * the data structure on level 0 ( the topmost recursion level ) can be constructed in @xmath267 time .",
    "the total number of elements in all data structures on level @xmath268 is @xmath269 .",
    "but each data structure on the @xmath249-th recursion level contains at most @xmath270 elements and can be constructed in @xmath271 time where @xmath272 .",
    "hence , all data structure on the @xmath249-th recursion level can be constructed in @xmath273 time .",
    "we can assume that @xmath274 .",
    "since we chose @xmath170 so that @xmath275 , @xmath276 ; hence , @xmath277",
    ". then , all data structure on the @xmath249-th recursion level can be constructed in @xmath278 time .",
    "summing up by all @xmath249 , we see that all recursive data structures can be constructed in @xmath139 time .",
    "[ lemma : two21 ] there exists a data structure that answers ( 2,2,1)-sided queries on @xmath60\\times [ n]\\times [ n]$ ] grid in @xmath164 time , uses @xmath165 space , and can be constructed in @xmath166 time .",
    "the proof technique is the same as in lemma  [ lemma : two11 ] .",
    "the grid is divided into @xmath96-slices @xmath167\\times n\\times n$ ] and @xmath100-slices @xmath279\\times n$ ] in the same way as in the proof of lemma  [ lemma : two11 ] .",
    "each @xmath96-slice @xmath179 supports @xmath125-sided queries open in @xmath180 and @xmath181 direction ; each @xmath100-slice @xmath182 supports @xmath125-sided queries open in @xmath184 and @xmath280 direction .",
    "all points are also stored in a data structure @xmath175 that contains a point @xmath176 for each point @xmath281 .",
    "for every @xmath96-slice and @xmath100-slice there is a recursively defined data structure .",
    "the reduction to rank space technique is applied on every @xmath265-th level in the same way as in the lemma  [ lemma : two11 ] .    given a query @xmath191\\times [ c , d]\\times { ( -\\infty , e]}$ ] we identify indices @xmath282 such that all cells @xmath171 , @xmath283 and @xmath284",
    "are entirely contained in @xmath12 .",
    "then @xmath12 can be represented as a union of a query @xmath201\\times [ c_0,d_0]\\times{(-\\infty , e]}$ ] and four @xmath125-sided queries @xmath285\\times { ( -\\infty , e]}$ ] , @xmath286}\\times [ c , d]\\times{(-\\infty , e]}$ ] , @xmath204\\times { [ c , c_0)}\\times { ( -\\infty , e]}$ ] , and @xmath287\\times { ( d_0,d ] } \\times{(-\\infty , e]}$ ] , where @xmath197 , @xmath198 , @xmath288 , and @xmath289 .",
    "see fig .",
    "[ fig : exam221 ] for an example .",
    "the query @xmath205 can be answered in constant time , and queries @xmath290 , @xmath291 , can be answered using the corresponding @xmath96- and @xmath100-slices . since queries @xmath290 , @xmath292 , are equivalent to ( 2,1,1)-sided queries each of those queries can be answered in @xmath293 time .    if the query @xmath12 is entirely contained in one @xmath96-slice or one @xmath100-slice , then @xmath12 is processed by a data structure for the corresponding @xmath96-slice resp .  @xmath100-slice .",
    "since the data structure consists of at most @xmath294 recursion levels , the query can be transferred to a data structure for an @xmath96- or @xmath100-slice at most @xmath185 times for @xmath295 .",
    "hence , the total query time is @xmath296 .",
    "the space usage and construction time are estimated in the same way as in lemma  [ lemma : two11 ] .",
    "[ theor : threedim1 ] there exists a data structure that answers three - dimensional orthogonal range reporting queries on the @xmath49\\times [ u]\\times [ u]$ ] grid in @xmath297 time , uses @xmath1 space , and can be constructed in @xmath298 time .",
    "the result for the @xmath60\\times [ n]\\times [ n]$ ] grid directly follows from lemma  [ lemma : two21 ] and lemma  [ lemma : transf ] . we can obtain the result for the @xmath49\\times [ u]\\times [ u]$ ] grid by applying the reduction to rank space technique  @xcite",
    ": we can use the van emde boas data structure  @xcite to find @xmath117 and @xmath116 for any @xmath299 $ ] in @xmath127 time , where @xmath300 $ ] is @xmath97 , @xmath98 , or @xmath99 .",
    "hence , the query time is increased by an additive term @xmath127 and the space usage remains unchanged .",
    "furthermore , we also obtain the result for @xmath8-dimensional range reporting , @xmath9 .",
    "there exists a data structure that answers @xmath8-dimensional orthogonal range reporting queries in @xmath301 time , uses @xmath21 space , and can be constructed in @xmath26 time .",
    "we can obtain a @xmath8-dimensional data structure from a @xmath72-dimensional data structure using range trees with node degree @xmath302 .",
    "see e.g.  @xcite ,  @xcite for details .",
    "= 2000 using theorem  [ theor : threedim1 ] we can reduce the space usage and update time of the semi - dynamic data structure for three - dimensional range reporting queries .    [ cor : semidyn ] there exists a data structure that uses @xmath1 space , and supports three - dimensional orthogonal range reporting queries in @xmath303 time and insertions in @xmath304 time .",
    "we can obtain the semi - dynamic data structure from the static data structure using a variant of the logarithmic method  @xcite .",
    "a detailed description can be found in  @xcite .",
    "the space usage remains the same , the query time increases by a @xmath305 factor , and the amortized insertion time is @xmath306 , where @xmath307 is the construction time of the static data structure .",
    "the result of corollary  [ cor : semidyn ] can be also extended to @xmath25 dimensions using range trees .",
    "we can further reduce the space usage of the three - dimensional data structure if we allow @xmath10 penalties for each point in the answer .",
    "such a data structure can also be used to answer emptiness and one - reporting queries . as in the previous section ,",
    "we design space efficient data structures for @xmath125-sided and @xmath126-sided queries .",
    "the proof is quite similar to the data structure of section  [ sec:3d1 ] but some parameters must be chosen in a slightly different way .",
    "[ theor : penalty ] there exists a data structure that answers three - dimensional orthogonal range reporting queries on the @xmath49\\times [ u]\\times [ u]$ ] grid in @xmath308 time , uses @xmath309 space , and can be constructed in time @xmath298 .    for completeness",
    ", we provide the proof of theorem  [ theor : penalty ] in the appendix . using the standard range trees and reduction to rank space techniques we can obtain a @xmath8-dimensional data structure for @xmath25",
    "there exists a data structure that answers @xmath8-dimensional orthogonal range reporting queries for @xmath25 in @xmath310 time , uses @xmath35 space , and can be constructed in @xmath311 time .",
    "99 p. afshani _ on dominance reporting in 3d _ , proc .",
    "esa 2008 , 41 - 51 .",
    "s. alstrup , g.  s. brodal , t. rauhe , _ new data structures for orthogonal range searching _ , proc .",
    "focs 2000 , 198 - 207 .",
    "j. l. bentley , _ decomposable searching problems _ , information processing letters 8(5 ) , 244 - 251 ( 1979 ) .",
    "j. l. bentley , , commun .",
    "acm 23 , 214 - 229 , 1980 .",
    "p. bozanis , n. kitsios , c. makris and a. tsakalidis , _ new results on intersection query problems _ , the computer journal 40(1 ) , 22 - 29 , 1997",
    ". b. chazelle , _ a functional approach to data structures and its use in multidimensional searching _ , siam j. on computing 17 , 427 - 462 ( 1988 ) .",
    "see also focs85 .",
    "b. chazelle , h. edelsbrunner , _ linear space data structures for two types of range search _ , discrete & computational geometry 2 , 113 - 126 , 1987",
    ". b. chazelle , l.j .",
    "fractional cascading : i. a data structuring technique _ ,",
    "algorithmica 1 , 133 - 162 ( 1986 ) .",
    "see also icalp85 .",
    "p. van emde boas , , inf .",
    "6(3 ) , 80 - 82 ( 1977 ) .",
    "h. gabow , j.  l. bentley , r.  e. tarjan , _ scaling and related techniques for geometry problems _ proc .",
    "stoc 1984 , 135 - 143 .",
    "y. nekrich , _ space efficient dynamic orthogonal range reporting _ , algorithmica 49(2 ) , 94 - 108 ( 2007 ) y. nekrich , _ a data structure for multi - dimensional range reporting _ ,",
    "socg 2007 , 344 - 353 .",
    "s. subramanian , s. ramaswamy , _ the p - range tree : a new data structure for range searching in secondary memory _ , proc .",
    "soda 1995 , 378 - 387 .",
    "d.   e. vengroff , j.  s. vitter , _ efficient 3-d range searching in external memory _ , proc .",
    "stoc 1996 , 192 - 201 .",
    "[ lemma : empt211 ] there exists a data structure that answers ( 2,1,1)-sided queries on the @xmath60\\times [ n]\\times [ n]$ ] grid in @xmath312 time , uses @xmath313 space , and can be constructed in @xmath166 time .",
    "the data structure consists of the same components as the data structure of lemma  [ lemma : two11 ] .",
    "but the size of @xmath96-slices and @xmath100-slices is reduced , so that each @xmath96-slice and each @xmath100-slice contains @xmath314 points for a constant @xmath315 .",
    "the data structure @xmath175 contains a point @xmath316 for each cell @xmath174 , @xmath317 , such that @xmath318 is the minimal @xmath101-coordinate of a point in @xmath319 .",
    "the data structure @xmath175 can contain up to @xmath320 elements . combining the results of lemma  [ lemma : transf ] and lemma  [ lemma : domin ]",
    ", we can implement @xmath175 in @xmath321 space , so that queries are supported in @xmath138 time .",
    "a list @xmath322 contains all points in @xmath171 sorted by their @xmath101-coordinates . for each @xmath96-slice @xmath179",
    ", there are two data structures that support @xmath183-sided queries open in @xmath180 and @xmath181 direction . for each @xmath100-slice",
    "@xmath182 there is a data structure for @xmath183-sided queries open in @xmath184 direction . for each @xmath96-slice and @xmath100-slice , there is a recursively defined data structure . as shown in proposition  1 of  @xcite , the total number of elements in a data structure on the @xmath249-th recursion level can be estimated as @xmath323 . the recursive sub - division stops when a data structure contains no more than @xmath149 elements . in this case , the data structure is implemented using e.g. the data structure of  @xcite , so that queries are answered in @xmath10 time and @xmath324 space .    in the same way as in lemma  [ lemma : two11 ] , the query @xmath12 can be represented as a union of ( at most ) one ( 2,1,1)-sided query on @xmath175 , two ( 1,1,1)-sided queries on @xmath96-slices , and one ( 2,1,1)-sided query on a recursively defined data structure for a @xmath100-slice .",
    "hence , the query time is @xmath187 if we ignore the time we need to output points in the answer .    unlike the data structure of lemma  [ lemma : two11 ]",
    ", we apply range reduction on every recursion level .",
    "since the number of elements in a data structure on level @xmath249 is @xmath323 , every element in a data structure on level @xmath249 can be represented with @xmath325 bits .",
    "each data structure on level @xmath249 uses @xmath326 bits .",
    "the total number of elements in all data structures on level @xmath249 is @xmath327 .",
    "hence , all level @xmath249 data structures need @xmath328 bits . summing up by all recursion levels ,",
    "the total space usage is @xmath329 bits .",
    "the maximum recursion level @xmath330 for a constant @xmath331 .",
    "hence , the second term can be estimated as @xmath332 .",
    "if a data structure on the recursion level @xmath333 contains @xmath122 elements , then it uses @xmath334 words of space because @xmath335 .",
    "all data structures on level @xmath333 contain @xmath136 elements and use @xmath336 bits of space .",
    "thus the data structure uses @xmath337 words of @xmath149 bits in total .",
    "the drawback of applying reduction to rank space on each recursion level is that we must pay a ( higher than a constant ) penalty for each point in the answer .",
    "consider a data structure @xmath338 on the @xmath249-th level of recursion , and let @xmath339 be the set of points stored in @xmath338 .",
    "coordinates of any point stored in @xmath338 belong to the rank space of @xmath339 . to obtain the point @xmath242 that corresponds to a point @xmath340",
    "we need @xmath341 time .",
    "hence , our data structure answers queries in @xmath342 time .",
    "the data structure is the same as in lemma  [ lemma : empt211 ] but in each @xmath96-slice there are two data structures for @xmath125-sided queries open in @xmath180 and @xmath181 directions , and in each @xmath100-slice there are two data structures for @xmath125-sided queries open in @xmath184 and @xmath280 direction .    the query is processed in the same way as in lemma  [ lemma : two21 ] .",
    "the space usage can be analyzed in the same way as in lemma  [ lemma : empt211 ] .",
    "construction time can be estimated with the formula @xmath346 and @xmath344 .",
    "finally , we can apply lemma  [ lemma : transf ] and reduction to rank space and obtain the data structure for three - dimensional orthogonal range reporting queries on the @xmath49\\times [ u]\\times [ u]$ ] grid ."
  ],
  "abstract_text": [
    "<S> = 1000 we present a data structure that supports three - dimensional range reporting queries in @xmath0 time and uses @xmath1 space , where @xmath2 is the size of the universe , @xmath3 is the number of points in the answer , and @xmath4 is an arbitrary constant . </S>",
    "<S> this result improves over the data structure of alstrup , brodal , and rauhe ( focs 2000 ) that uses @xmath1 space and supports queries in @xmath5 time , the data structure of nekrich ( socg07 ) that uses @xmath6 space and supports queries in @xmath7 time , and the data structure of afshani ( esa08 ) that uses @xmath6 space and also supports queries in @xmath7 time but relies on randomization during the preprocessing stage . </S>",
    "<S> our result allows us to significantly reduce the space usage of the fastest previously known static and incremental @xmath8-dimensional data structures , @xmath9 , at a cost of increasing the query time by a negligible @xmath10 factor . </S>"
  ]
}
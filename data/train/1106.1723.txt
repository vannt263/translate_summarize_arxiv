{
  "article_text": [
    "we first recall some standard phylogenetic terminology ( for more details , the reader can consult @xcite ) . recall that a _ hierarchy _ @xmath2 on a finite set @xmath1 is a collection of sets with the property that the intersection of any two sets is either empty or equal to one of the two sets",
    "; we also assume that @xmath3 .",
    "a hierarchy is _ maximum _ if @xmath4 , which is the largest possible cardinality . in this case",
    "@xmath2 corresponds to the set of clusters @xmath5 of some rooted binary tree @xmath6 with leaf set @xmath1 ( a _ cluster _ of @xmath6 is the set of leaves that are separated from the root of the tree by any vertex ) .",
    "a maximum hierarchy necessarily contains @xmath7 for each @xmath8 , as well as @xmath1 itself ; we will refer to these @xmath9 sets as the _",
    "trivial clusters _ of @xmath1 .",
    "more generally , any hierarchy containing all the trivial clusters corresponds to the clusters @xmath5 of a rooted tree @xmath6 with leaf set @xmath1 ( examples of these concepts are illustrated in fig .",
    "[ fig1](a),(b ) ) .",
    "note that a hierarchy @xmath2 is maximum if and only if ( i ) @xmath2 contains all the trivial clusters , and ( ii ) each set @xmath10 of size",
    "greater than 1 can be written as a disjoint union @xmath11 , for two ( disjoint ) sets @xmath12 .",
    "we now introduce a new notion .",
    "* definition : * we say that a collection @xmath0 of subsets of a finite set @xmath1 is a _ bureaucracy _ if ( i ) @xmath13 and @xmath14 , and ( ii ) every hierarchy @xmath15 can be extended to a maximum hierarchy @xmath16 such that @xmath17 . in this case",
    ", we say that the collection is _",
    "bureaucratic_.    simple examples of bureaucracies include two extreme cases : the set of clusters of a binary tree , and the set @xmath18 of all non - empty subsets of @xmath1 .",
    "notice that @xmath19 and @xmath20 are both bureaucratic subsets of @xmath21 but their intersection , @xmath22 , is not . in particular , for an arbitrary subset @xmath23 of @xmath1 ( e.g. @xmath24 ) , there may not be a unique minimal bureaucratic subset of @xmath1 containing @xmath23 .    in the next section",
    "we describe a more extensive list of examples , but first we describe some properties and provide a characterization of bureaucracies . in the following lemma ,",
    "given two sets @xmath25 and @xmath26 from @xmath0 we say that @xmath26 _ covers _",
    "@xmath25 if @xmath27 and there is no set @xmath28 with @xmath29 .",
    "[ mainlem ] if @xmath0 is bureaucratic then :    * for any pair @xmath30 , if @xmath26 covers @xmath25 then @xmath31 . * for any @xmath28 with @xmath32 , we can write @xmath33 for ( disjoint ) sets @xmath30 .    for part ( i )",
    ", suppose that @xmath30 and that @xmath26 covers @xmath25 .",
    "let @xmath34 . then @xmath2 is a hierarchy that is contained within @xmath0 and so there exists a maximum hierarchy @xmath35 that contains @xmath2 .",
    "note that @xmath25 must be a maximal sub - cluster of @xmath26 in @xmath16 ( as otherwise @xmath26 does not cover @xmath25 ) which requires that @xmath36 is a cluster of @xmath16 and thereby an element of @xmath0 .    for part ( ii ) ,",
    "observe that the set @xmath37 is a hierarchy , and the assumption that @xmath0 is bureaucratic ensures the existence of a maximum hierarchy @xmath35 containing @xmath2 , and so @xmath16 contains the required sets @xmath38 .",
    "note that the conditions described in parts ( i ) and ( ii ) of lemma  [ mainlem ] , while they are necessary for @xmath0 to be a bureaucracy , are not sufficient .",
    "for example , let @xmath39 and let @xmath0 be the union of @xmath40 with the set of the seven trivial clusters",
    ". then @xmath0 satisfies parts ( i ) and ( ii ) of lemma  [ mainlem ] , yet @xmath0 is not bureaucratic since @xmath41 does not extend to a maximum hierarchy on @xmath1 using just elements from @xmath0 .",
    "[ mainthm ] a collection @xmath0 of subsets of @xmath1 is bureaucratic if and only if it satisfies the following two properties :    * ( p1 ) @xmath0 contains all trivial clusters of @xmath1 . *",
    "( p2)if @xmath42 are disjoint and have union @xmath43 in @xmath0 then there are distinct @xmath44 such that @xmath45 .",
    "first suppose that @xmath0 is bureaucratic .",
    "then @xmath0 contains a maximal hierarchy ; in particular , it contains all the trivial clusters , and so ( p1 ) holds . for ( p2 ) , suppose that @xmath46 is a collection of @xmath47 disjoint subsets of @xmath1 , each an element of @xmath0 , and @xmath48 .",
    "then @xmath49 is a hierarchy .",
    "let @xmath50 be a maximal hierarchy on @xmath1 that contains @xmath2 ( this exists , since @xmath0 is bureaucratic ) and let @xmath51 be a minimal subset of @xmath1 in @xmath16 that contains the union of at least two elements of @xmath46 . since @xmath16 is a binary hierarchy , and @xmath52 , @xmath51 is precisely the union of exactly two elements of @xmath46 ; since @xmath53 , this establishes ( p2 ) .",
    "conversely , suppose that a collection @xmath0 of subsets of @xmath1 satisfies ( p1 ) and ( p2 ) , and that @xmath15 is a maximal hierarchy which is contained within @xmath0 .",
    "suppose that @xmath2 is not maximum ( we will derive a contradiction ) .",
    "then @xmath2 contains a set @xmath51 that is the disjoint union of @xmath47 maximal proper subsets @xmath54 , each belonging to @xmath2 ( and thereby @xmath0 ) . applying ( p2 ) to @xmath55 ,",
    "there exists two sets , say @xmath56 for which @xmath57 so , if we let @xmath58 , then we obtain a larger hierarchy containing @xmath2 that is still contained within @xmath0 , which is a contradiction .",
    "this completes the proof .",
    "we have mentioned two extreme cases of bureaucracies , namely the set of clusters of a binary @xmath59tree and the full power set @xmath18 . here are some further examples .    1",
    ".   the set of intervals of @xmath60=\\{1,2,\\ldots , n\\}$ ] is a bureaucracy , where an _ interval _ is a set @xmath61 = \\{k : i\\leq k\\leq j\\}$ ] , @xmath62 .",
    "+ let @xmath0 be the set of intervals of @xmath60 $ ] .",
    "then @xmath0 contains the trivial clusters .",
    "also , a disjoint collection @xmath63 , @xmath64 of intervals has union an interval if and only if every element of @xmath60 $ ] between @xmath65 and @xmath66 lies in ( exactly ) one interval , in which case the union of any pair of consecutive intervals is an interval , so ( p2 ) holds . by theorem [ mainthm ]",
    ", @xmath0 is bureaucratic .",
    "+ similarly , if we order the elements of @xmath1 in any fashion , we can define the set of _ intervals on @xmath1 _ for that ordering by this construction ( associating @xmath67 with @xmath68 ) , and can thus obtain a bureaucracy . + a natural question at this point is the following : does the extension of intervals in a 1-dimensional lattice ( example 1 ) to rectangles in a 2-dimensional lattice also necessarily lead to bureaucracies ?",
    "the answer is ` no ' because condition ( p2 ) can be violated due to the existence of subdivisions of integral sized rectangles into @xmath64 disjoint squares of different integral sizes , the union of any two of which must therefore fail to be a rectangle ( see e.g. @xcite ) .",
    "2 .   let @xmath6 be a rooted tree ( generally not binary ) with leaf set @xmath1 and let @xmath0 be the set of all clusters compatible with all the clusters in @xmath5 .",
    "then @xmath0 is bureaucratic .",
    "+ we have @xmath69 @xmath0 is also the set of clusters that occur in at least one rooted phylogenetic @xmath59 tree that refines @xmath6 , that is : @xmath70 suppose that @xmath15 is a hierarchy on @xmath1 .",
    "then @xmath71 is also a hierarchy on @xmath1 since every element of @xmath2 is compatible with every element of @xmath5 .",
    "let @xmath16 be any maximal hierarchy on @xmath1 containing @xmath2 . then since @xmath72",
    ", we have @xmath35 , and so , by definition , @xmath0 is a bureaucracy .",
    "3 .   let @xmath0 be a collection of subsets of @xmath1 that includes the trivial clusters and which satisfies the condition : @xmath73 then @xmath0 is bureaucratic if and only if @xmath0 satisfies the covering condition in lemma [ mainlem](i ) . + condition ( [ closure ] ) is a weakening of the condition required for a ` patchwork ' set system on @xmath1 due to andreas dress and sebastian bcker ( see e.g. @xcite , where the covering condition of lemma [ mainlem](i ) leads to an ` ample patchwork ' ) .",
    "+ the ` only if ' part follows from lemma [ mainlem](i ) .",
    "conversely , suppose that ( [ closure ] ) holds for a set system @xmath0 that includes all the trivial clusters of @xmath1 and that satisfies the covering condition of lemma  [ mainlem](i ) .",
    "suppose that @xmath15 is a maximal hierarchy contained within @xmath0 .",
    "we show that @xmath2 is maximum .",
    "suppose that this is not the case  we will derive a contradiction ( by constructing a larger hierarchy @xmath16 containing @xmath2 but still lying within @xmath0 ) .",
    "the assumption that @xmath2 is not maximum implies that there exists a set @xmath74 which is the union of three or more disjoint sets @xmath75 , where @xmath76 ( since the rooted tree associated with @xmath2 has a vertex of degree @xmath47 ) .",
    "we consider two cases : * @xmath26 covers none of the sets from @xmath75 .",
    "* @xmath26 covers one of the sets from @xmath75 .",
    "+ we first show that case ( i ) can not arise under condition ( [ closure ] ) .",
    "suppose to the contrary case ( i ) arises .",
    "then for @xmath77 there exists a set @xmath78 that contains @xmath79 and which is covered by @xmath26 . for any pair @xmath44 with @xmath80 , if @xmath81 then @xmath82 . on the other hand , if @xmath83 then , by condition ( [ closure ] ) , @xmath84 , which means that @xmath85 ( otherwise @xmath86 an element of @xmath0 strictly containing @xmath87 and strictly contained by @xmath26 ) and so @xmath88 . thus case ( i )",
    "requires that either @xmath88 or @xmath82 , which implies ( again by the assumption that @xmath26 covers @xmath89 and @xmath26 covers @xmath87 ) that @xmath90 .",
    "since this identity holds for all distinct pairs @xmath44 it follows that @xmath91 are the same set @xmath51 and this set contains @xmath92 ( since @xmath93 ) .",
    "but then @xmath94 which contradicts the assumption that @xmath26 covers @xmath95 .",
    "+ thus only case ( ii ) can arise . in this case , suppose that @xmath26 covers @xmath79 . by assumption that @xmath0 satisfies the covering condition described in lemma [ mainlem](i ) ,",
    "@xmath96 holds , and so we can take @xmath97 which provides the required contradiction .",
    "4 .   let @xmath98 be a connected graph .",
    "let @xmath0 be the set of subsets @xmath99 such that @xmath100 $ ] is connected ( where @xmath100 $ ] is the subgraph formed by deleting vertices not in @xmath23 , together with their incident edges ) .",
    "then @xmath0 is bureaucratic .",
    "+ observe that taking @xmath101 to be a linear graph recovers example ( 1 ) .",
    "+ first note that @xmath0 satisfies ( p1 ) , since @xmath101 itself is connected , as is each vertex by itself .",
    "now suppose that @xmath102 , @xmath64 , are disjoint clusters in @xmath0 whose union , @xmath25 , is also in @xmath0 .",
    "as @xmath103 $ ] is connected , at least two clusters @xmath79 , @xmath104 must contain adjacent vertices , in which case @xmath105 $ ] is connected and @xmath106 .",
    "the result now follows by theorem [ mainthm ] .",
    "+ an alternative proof is to apply example ( 3 ) and note that @xmath0 satisfies condition ( [ closure ] ) and the covering condition of lemma [ mainlem](i ) .",
    "in general , the problem of finding the largest hierarchy contained within a set of clusters is np - hard @xcite .",
    "the problem becomes trivial in a bureaucratic collection since all maximal hierarchies are maximum .",
    "less obvious , however , is the fact that finding a hierarchy with maximum _ weight _ can also be solved in polynomial time .",
    "let @xmath0 be a bureaucratic collection of clusters on @xmath1 and let @xmath107 be a weight function on @xmath0 .",
    "the problem of finding the hierarchy @xmath15 such that @xmath108 is maximized can be solved in polynomial time .",
    "if there are any clusters @xmath109 with negative weight @xmath110 then set their weights to zero .",
    "it follows then that the weight of any maximum hierarchy @xmath15 equals the weight of the maximum weight hierarchy contained within @xmath2 .",
    "the ` hunting for trees ' algorithm of @xcite can now be used to recover the maximum hierarchy of maximum weight .",
    "consider a set @xmath0 of clusters on @xmath1 and let @xmath111 be a function that assigns each element @xmath112 a state @xmath113 in a finite set @xmath114 ( @xmath115 is referred to in phylogenetics as a ( discrete ) _ character _ ) .",
    "suppose we have a non - negative function @xmath116 on @xmath117 where @xmath118 assigns a penalty score for changing state @xmath119 to @xmath120 for each pair @xmath121 ( the default option is to to take @xmath122 for all @xmath123 and @xmath124 for all @xmath119 ) .",
    "given any rooted @xmath59tree @xmath6 , with vertex set @xmath125 and arc set @xmath126 , let @xmath127 denote the _ parsimony score _ of @xmath115 on @xmath6 relative to @xmath116 ; that is , @xmath128 in words , @xmath127 is the minimum sum of @xmath116-penalty scores that are required in order to extend @xmath115 to an assignment of states to all the vertices of @xmath6 .",
    "this quantity can be calculated for a given @xmath6 by well - known dynamic programming techniques ( see e.g. @xcite ) .",
    "let @xmath129 ( respectively , @xmath130 ) denote the minimal value of @xmath131 among all trees @xmath6 ( respectively , all _ binary _ trees ) that have their clusters in @xmath0 .",
    "then we have the following general result .    [ app3 ]",
    "suppose that @xmath0 is contained within a bureaucratic collection @xmath46 of subsets of @xmath1 and @xmath111 .",
    "there is an algorithm for computing @xmath129 with running time polynomial in @xmath132 and @xmath133 .",
    "moreover , the algorithm can be extended to construct a rooted phylogenetic @xmath59tree having all its clusters in @xmath0 and with parsimony score equal to @xmath129 in polynomial time .              for an element @xmath145 and @xmath146 ,",
    "let @xmath147 be the minimum value of @xmath148 across all binary trees @xmath6 having leaf set @xmath23 and clusters in @xmath46 , in which the root is assigned state @xmath119",
    ".    for @xmath149 , say @xmath150 , we have @xmath151 and for @xmath152 , we have @xmath153 now , @xmath154 notice that when one evaluates @xmath155 using the above recursion ( eqn .",
    "( [ eq : lform ] ) ) , it is sufficient to compute @xmath156 for just the sets @xmath146 rather than all subsets of @xmath1 .",
    "thus , in view of eqns .",
    "( [ firstidentity ] ) and ( [ seconddentity ] ) , one can compute @xmath129 in time polynomial in @xmath132 and @xmath133 . moreover , by suitable book - keeping along the way , one can construct a rooted binary phylogenetic @xmath59tree with clusters in @xmath46 and with a parsimony score equal to @xmath157 ; by collapsing all edges of this tree that have a @xmath116-score equal to 0 we obtain a rooted phylogenetic @xmath59tree with clusters in @xmath0 and with parsimony score equal to @xmath158 .",
    "we note that this result has been described in the particular case when @xmath0 is the bureaucracy described in example ( 2 ) above , and where @xmath115 maps to a set @xmath25 with only two elements @xcite .",
    "we provide a second application , to phylogenetic networks , based on example ( 1 ) above , of intervals as bureaucratic set systems .",
    "let @xmath159 be a rooted binary phylogenetic network on @xmath1 .",
    "we say that @xmath159 is _ planar _ if it can be drawn in the plane so that all the leaves and the root all lie on the outer face .",
    "let @xmath160 denote the set of ` soft - wired ' clusters in @xmath159 ( the union of the cluster sets of all trees embedded in @xmath159 ; see e.g. @xcite ) .",
    "a simple example is shown in fig .",
    "[ fig1](c ) .",
    "let @xmath164 be the ordering of @xmath1 given by their positions around the outer face in a planar embedding of @xmath159 , where @xmath165 and @xmath166 come immediately after and before the root .",
    "then any tree @xmath6 embedded in @xmath159 can be ordered so that the leaves are in order @xmath164 , implying that the clusters of @xmath6 are all of the form @xmath167 for some @xmath62 .",
    "it follows that the set @xmath160 is contained in the set of intervals of @xmath168 ( example 1 , above ) .",
    "the corollary now follows from theorem  [ app3 ] .        4 bryant , d. 1996 .",
    "hunting for trees in binary character sets .",
    "journal of computational biology 3(2 ) , 275 - 288 .",
    "brooks , r. l. ; smith , c. a. b. ; stone , a. h. ; and tutte , w. t. 1940 .",
    "the dissection of rectangles into squares , duke math .",
    "journal 7 , 312340 .",
    "day , w.h.e . and sankoff , d. 1986 .",
    "computational complexity of inferring phylogeny from compatibility .",
    "systematic zoology , 35 , 224 - 229 .",
    "huson , d. h. , rupp , r. and scornavacca , c. 2011 .",
    "phylogenetic networks : concepts , algorithms and applications .",
    "cambridge univ . press .",
    "huson , d. , steel , m. and whitfield , j. 2006 . reducing distortion in phylogenetic networks .",
    "proceedings of wabi ( workshop on algorithms in bioinformatics ) 2006 .",
    "p. buecher and bme moret ( eds ) .",
    "lecture notes in bioinformatics 475 , pp .",
    "150 - 161 .",
    "springer - verlag : berlin heidelberg .",
    "semple , c. and steel , m. 2003 .",
    "oxford university press ."
  ],
  "abstract_text": [
    "<S> we say that a collection @xmath0 of subsets of @xmath1 is _ bureaucratic _ if every maximal hierarchy on @xmath1 contained in @xmath0 is also maximum . </S>",
    "<S> we characterise bureaucratic set systems and show how they arise in phylogenetics . </S>",
    "<S> this framework has several useful algorithmic consequences : we generalize some earlier results and derive a polynomial - time algorithm for a parsimony problem arising in phylogenetic networks .    </S>",
    "<S> [ multiblock footnote omitted ] </S>"
  ]
}
{
  "article_text": [
    "interleavers for turbo codes  @xcite have been extensively investigated . however , the design of interleavers for turbo codes is complex enough and we believe there are still several relevant open questions .",
    "recently , sun and takeshita  @xcite suggested the algebraic approach of using permutation polynomial - based interleavers over integer rings . in this paper , we expand the theory in  @xcite by adding a geometric and group - theoretic perspective .",
    "several new results and important and interesting new questions arise with this framework .",
    "we believe that the approach in  @xcite has major advantages over any earlier interleaver constructions ( either pseudo - random or structured ) because it simultaneously provides :    * excellent error performance with practical code - lengths  @xcite . * completely algebraic structure with elegant and relevant properties  @xcite . * efficient implementation  @xcite with high - speed , low - power consumption , and little memory requirements .",
    "an interleaver is a device that permutes a sequence of @xmath0 symbols .",
    "let each symbol be indexed by an element in the set @xmath1 .",
    "then the interleaver can be represented by a one - to - one onto ( permutation ) function @xmath2 given by @xmath3 .",
    "permutation polynomials over @xmath4 are functions that belong to the ring @xmath5 $ ] , i.e. , polynomials of the form @xmath6 such that @xmath7 and @xmath8 is a permutation function . in earlier work",
    ", we only treated _ constant - free _ pps , i.e. , @xmath9 ; in this paper , we also consider @xmath10 .",
    "the set of permutation functions ( not necessarily permutation polynomials ) for a given interleaver length @xmath0 will be denoted by @xmath11 .",
    "the set @xmath11 is no longer a ring but its elements form a group under function composition .",
    "permutation polynomials over @xmath12 naturally generate interleavers where @xmath13 gets equipped with a finite ring structure @xmath12 , which is not necessary for the definition of an arbitrary interleaver but allows a useful algebraic treatment of pp interleavers .",
    "replacing @xmath13 by @xmath12 in the case of arbitrary interleavers brings no loss of generality , therefore from here on we will always use @xmath12 .",
    "the algebraic structure of pps over finite integer rings has already been proven very successful in producing turbo codes  @xcite and low density parity check ( ldpc ) codes  @xcite with excellent error performance compared with the best known constructions and similar parameters .",
    "conditions for the coefficients of a polynomial over @xmath4 to be a pp for an arbitrary integer @xmath0 were studied in  @xcite . however , the conditions are not the simplest for polynomials of degrees larger than two ; to the best of our knowledge , simple necessary and sufficient conditions for arbitrary degrees are only known when @xmath0 is a power of two  @xcite .",
    "if @xmath14 is of second degree and @xmath0 is arbitrary then a simple necessary and sufficient condition was proved in  @xcite and summarized in  @xcite .",
    "interleavers constructed using second degree or quadratic permutation polynomials will be called qpp interleavers , linear interleavers if the pp is of first degree , and pp interleavers for pps of arbitrary degrees .",
    "because the number of distinct permutations of length @xmath0 is @xmath15 , it is very important that effective interleaver measures for turbo codes are defined ; this considerably reduces the number of interleavers that still need to be filtered by costly analysis and computer simulations for a complex turbo codec system .",
    "the main drawback of the theory in  @xcite was that despite it provided some rules for choosing good permutation polynomials ( pp ) , the procedures were too complex when handling input weights larger than two . in this paper , we propose a new simple but effective measure @xmath16 for interleavers .",
    "two typical measures for interleavers in turbo coding are the spread factor @xmath17  @xcite and `` randomness . '' in this paper , the notion of `` randomness '' is replaced by a more principled concept of a degree of non - linearity @xmath18 of an interleaver .",
    "an interleaver is represented by what we call an _ interleaver - code _ , which is the geometric representation of an interleaver by pairs of coordinates @xmath19 forming _ points _ in @xmath20 .",
    "the degree of non - linearity @xmath18 measures the number of disjoint orbits ( a set of points ) of the action of an isometry group of the interleaver - code .",
    "the new measure is simply the product of the logarithm of the spread factor by the new non - linearity metric , i.e. , @xmath21 .",
    "the algebraic - geometric nature of pps allows a very efficient selection of pps that maximizes the new metric .",
    "drp interleavers  @xcite are among the best known interleavers for turbo codes with a combined excellent error rate performance ( exceeding that of @xmath22random interleavers  @xcite ) and simplicity but are not fully algebraic .",
    "the efficacy of the new metric is shown by simulation curves of several turbo codes using pp interleavers with impressive frame error rate performance , similar to the ones with drp interleavers . however , the selection of good pp interleavers ( particularly qpp interleavers ) is much simpler with the results presented this paper .",
    "the non - linearity metric @xmath18 is shown to be inversely related to the degree of shift - invariance @xmath23 of an interleaver . for qpp interleavers , the shift - invariance @xmath24 is computed in closed form as function of the second degree coefficient , which gives us a complete control of this parameter . when tail - biting codes are used as constituent codes ,",
    "turbo codes using qpp interleavers become quasi - cyclic ; for those codes , it is predicted that the multiplicity of many low - weight codewords is typically multiples of the shift - invariance @xmath24 .",
    "it is also shown that a lower bound on the spread factor @xmath17 constrained to points within an orbit of an interleaver - code has a closed form for qpp interleavers . an immediate tie between @xmath17 and @xmath18",
    "is then established for qpp interleavers where one would need to trade for either larger @xmath17 or @xmath18 .",
    "this paper is organized as follows . in section",
    "[ sec : ms ] , maximum - spread interleavers are investigated and a list of good permutation polynomials for turbo codes for several lengths that maximizes the spread factor @xmath17 is found in table  [ tab : maxqpp ] .",
    "a new metric for interleavers is developed in section  [ sec : qpp_nl_si ] ; we provide a table ( table  [ tab : maxomega ] ) of good permutation polynomials for turbo codes according to the new metric .",
    "numerical results are shown in section  [ sec : nr ] via the computation of the distance spectra and computer simulations for several codes .",
    "finally , conclusions and possible future directions are discussed in section  [ sec : conclusions ] .",
    "in this section , the spread factor of an interleaver is revisited .",
    "an infinite sequence of qpp interleavers achieving the upper bound on the spread factor is presented .",
    "further , a list of qpp interleavers with optimal spread factors for several interleaver lengths reported in the literature is provided .      in the algebraic - geometric treatment in this paper",
    ", it will be convenient to view an interleaver represented by a permutation function @xmath25 ( not necessarily a permutation polynomial ) as an interleaver - code @xmath26 ( not to be confused with a turbo code ) under the natural mapping @xmath27 given by @xmath28 , where @xmath29 .",
    "we will call a pair @xmath19 as a _ point _",
    "let a linear interleaver be given by the pp @xmath31 ; the corresponding interleaver - code @xmath32 is plotted in  fig .",
    "[ fig : ms512_0_31 ] .     viewed as an interleaver - code @xmath32 over @xmath33 . ]    the notion of _ distance _ or _",
    "metric _ between points in an interleaver - code @xmath26 will be of central role .",
    "we will mainly use two different metrics .",
    "let us define a distance @xmath35 in @xmath33 to form a metric space @xmath36 ,    @xmath37    i.e. , the metric is the @xmath34 or manhattan metric .",
    "let us define a distance @xmath38 in @xmath33 to form a metric space @xmath39 ,    @xmath40    where @xmath41 is the lee distance  @xcite between @xmath42 and @xmath43 modulo @xmath0 .",
    "therefore , @xmath38 is a two - dimensional lee metric .",
    "the spread factor  @xcite of an interleaver is a popular measure of merit in turbo coding applications .",
    "the spread factor of an interleaver @xmath25 over the metric space @xmath44 is defined as    @xmath45    the root of this measure is the early recognition in turbo coding that self - terminating information sequences of weight two create low - weight codewords  @xcite .",
    "divsalar and dolinar then proposed a construction of linear interleavers achieving spread factors @xmath46 equal to or close to @xmath47 . they have concluded that by using linear interleavers , the minimum distance of turbo codes conditioned to weight - two self - terminating information sequences grows roughly as @xmath47 .",
    "however , recent results show that the true minimum distance grows asymptotically only at most logarithmically  @xcite for all interleavers .",
    "if we use the metric space @xmath48 then the following definition of spread factor is also possible  @xcite :    @xmath49    the spread factor @xmath17 is mathematically more convenient because the metric space @xmath48 is `` isotropic '' ( in the sense of having no boundaries ) .",
    "it is also more suitable when designing turbo codes with tail - biting convolutional constituent codes  @xcite .",
    "an analytical proof on the upper bound @xmath50 of @xmath17 was recently shown to be @xmath47  @xcite .",
    "clearly @xmath51 by the definition of @xmath35 .",
    "we show @xmath52 is close to @xmath50 by computing a new upper bound @xmath52 .",
    "it is a constructive bound for certain values of @xmath0 .",
    "see appendix  [ sec : bound ] for a sketch of a proof .",
    "@xmath53    the difference @xmath54 goes to 1 as @xmath0 grows ( see fig .",
    "[ fig : ubounds ] ) .    .",
    "]    only one example was found ( for a limited search ) of an interleaver ( up to symmetries ) that has a spread factor @xmath46 exceeding @xmath55 . for @xmath56 , the interleaver @xmath57 defined by @xmath58 , @xmath59 , @xmath60 , and @xmath61",
    "has    @xmath62    our new bound ( [ eq : debound ] ) is not defined at @xmath56 but for this case clearly an upper bound is @xmath63 by inspection , i.e. , an upper bound on @xmath46 strictly larger than @xmath55 is achievable .",
    "the main message learned is that in practice considering @xmath17 is good enough . for the remaining of the paper",
    ", we will only use @xmath17 instead of @xmath46 , unless otherwise noted , because @xmath17 lets us use the algebra of @xmath12 .",
    "an interleaver of length @xmath0 is a _ maximum - spread _ interleaver if it achieves a spread factor @xmath17 equal to the upper bound .",
    "however , this will be of little relevance in this paper and we keep @xmath47 for simplicity , unless otherwise noted . ]",
    "@xmath47 .",
    "once more , dolinar and divsalar  @xcite have reported that linear interleavers either achieve or closely approximate a spread factor of @xmath47 for any @xmath0 . in particular ,",
    "if @xmath0 is twice of a perfect square    @xmath64    they have given _ all _ maximum - spread linear interleavers of the form @xmath65 by an explicit simple condition for @xmath66 . however , they pointed out that the resulting interleavers were not good for turbo coding because of their high regularity ( see fig .",
    "[ fig : ms512_0_31 ] , which corresponds to a plot of a maximum - spread linear interleaver ) .",
    "this fact is also theoretically addressed by the linear interleaver asymptote in  @xcite , which implied the existence of low - weight codewords of input - weight four and a high multiplicity , close to @xmath0 .",
    "therefore they proposed a semi - random interleaver construction algorithm  @xcite , generating the so - called @xmath67-random interleavers with a parameter @xmath67 , but the algorithm sacrificed the spread factor @xmath17 .",
    "the obtained spread factor is typically @xmath68 , i.e. , smaller than about 50% of the upper bound @xmath69 .",
    "an @xmath67-random interleaver yield turbo codes with very good error rate performances and became the typical benchmark interleaver .",
    "one of the main drawbacks of @xmath67-random interleavers is a costly storage of a sequence of @xmath0 integers needed to specify the interleaver . because the construction algorithm relies heavily on a pseudo - random number generator , the sequence has little margin for compression .",
    "this characteristic also makes more difficult for an accurate reproduction of the results by others because typically only the parameter @xmath67 is reported in the literature ; however , the repeatability problem is not so critical because in general , for a given parameter @xmath67 , instances of @xmath67-random interleavers perform similarly for error rates that are not extremely low , which also reflects a good minimum distance of the associated turbo code .",
    "crozier proposed two interleaver constructions  @xcite that attempt maximization of the spread factor @xmath17 but avoid or minimize the regularity of linear interleavers : the high - spread construction and the dithered - diagonal construction .",
    "the dithered - diagonal interleavers  @xcite are reported to be maximum - spread for interleaver sizes as in ( [ eq:2perfsq ] ) and have large spread factors for others .",
    "dithered - diagonal interleavers require @xmath70 integer parameters for their definition .",
    "an impressive error performance , exceeding the performance of @xmath67-random interleavers was shown for @xmath71  @xcite .",
    "this was a great progress in the field of interleaver constructions for turbo codes because it produced a large spread factor @xmath17 combined with sufficient irregularity to produce an excellent error performance and a much smaller number of integer parameters specifying the interleaver compared with @xmath67-random interleavers .",
    "subsequently , crozier and guinard proposed dithered relatively prime ( drp ) interleavers  @xcite .",
    "drp interleavers also perform very well but require a much smaller number of integer parameters for their specification .",
    "their typical choice for a good performance requires about 10 integers . ] for their dither parameters @xmath72 . for an excellent performance ,",
    "their dither parameters @xmath73 require about 18 integers .",
    "interleavers based on qpp require only 2 integers as parameters with the simplicity of only a simple quadratic congruence as the algorithm to generate the permutation sequence .",
    "in fact , qpp interleavers can be implemented in hardware with only additions and comparisons  @xcite . if we fix @xmath0 , what is the largest spread for a qpp interleaver ?",
    "an exhaustive search for the largest achievable spread @xmath74 for @xmath75 is shown in fig .",
    "[ fig : dmax ] . due to several algebraic and geometric properties of qpp interleavers explained in section  [ sec : qpp_nl_si ] , the exhaustive search is efficiently completed in a very short time on a regular personal computer using theorem  [ th : qpp_search ] .     with qpp interleavers for a given @xmath0 .",
    "]    a few of the polynomials for some commonly found interleaver lengths in the literature are reported in table  [ tab : maxqpp ] .",
    "some of the qpps in table  [ tab : maxqpp ] generate very good turbo codes , however , better qpps that do not simply attempt maximization of the spread factor are provided in section  [ sec : new_metric ] .",
    ".qpps with the largest spread factors @xmath74 .",
    "[ cols=\">,^,^,^,^,^\",options=\"header \" , ]     [ tab : maxomega ]      we have mentioned that while there are linear _ maximum - spread _",
    "interleavers for every @xmath76 , this is not true for quadratic permutation polynomials . for example , if @xmath77 there are no _ maximum - spread _ interleavers of second degree .",
    "however , the cubic permutation polynomial @xmath78 generates a _",
    "maximum - spread _ interleaver .",
    "further , interleaver lengths not admitting quadratic permutation polynomials at all may have permutation polynomials of larger degrees .",
    "for example , if @xmath79 , there are no quadratic permutation polynomials but @xmath80 is a cubic permutation polynomial of irreducible degree .",
    "this means maybe it is worth investigating polynomials of larger degrees because the complexity of evaluating the polynomials only grows linearly with the degree using horner s rule  @xcite .",
    "the cubic polynomial @xmath78 can be evaluated at every point @xmath81 with three multiplications and two additions using @xmath82 .",
    "further , it would be interesting if an efficient implementation that sequentially generates all evaluations @xmath83 that requires only additions and comparisons for arbitrary polynomial degrees , generalizing the idea in  @xcite , is possible . to determine the coefficients for a permutation polynomial of an arbitrary degree and an arbitrary @xmath0",
    ", there is an easy sufficient condition by using theorem  2.3 and corollary  2.5 in  @xcite .",
    "algorithms for computing the true distance spectra of turbo codes such as in  @xcite and  @xcite are very useful to help analysis . we used the algorithm in  @xcite to compute the first 20 smallest distances and respective multiplicities for a few turbo codes using interleavers in tables  [ tab : ms128]-[tab : ms512 ] .",
    "we constrained the search for input weights at most 10 .",
    "the turbo codes are parallel concatenated codes of nominal rate 1/3 .",
    "we used two types of constituent codes : the 8-state constituent convolutional code with generator matrix @xmath84 $ ] , also denoted in octal notation as ( 13,15 ) and the 16-state constituent convolutional code with generator matrix @xmath85 $ ] , also denoted in octal notation as ( 23,35 ) .",
    "the trellis termination method was the same as for the 3rd generation partnership project ( 3gpp ) standard  @xcite , i.e. , udt .     |c |c |c |c |c |c |c |c |c |c |c |c |c |c |c |c |c |c |c |c |c | +   + @xmath42 & * 0 * & 1 & 2 & 3 & * 4 * & 5 & 6 & 7 & 8 & 9 & 10 & 11 & 12 & 13 & 14 & 15 & 16 & 17 & 18 & 19 + @xmath86 & * 16 * & 18 & 19 & 20 & * 21 * & 22 & 23 & 24 & 25 & 26 & 27 & 28 & 29 & 30 & 31 & 32 & 33 & 34 & 35 & 36 + @xmath87 & * 1 * & 1 & 1 & 2 & * 55 * & 2 & 7 & 8 & 9 & 16 & 27 & 120 & 53 & 359 & 526 & 391 & 775 & 1368 & 1865 & 2542 +     + @xmath42 & * 0 * & 1 & 2 & 3 & 4 & 5 & 6 & 7 & * 8 * & 9 & 10 & 11 & 12 & 13 & 14 & 15 & 16 & 17 & 18 & 19 + @xmath86 & * 14 * & 15 & 16 & 18 & 19 & 20 & 21 & 22 & * 23 * & 24 & 25 & 26 & 27 & 28 & 29 & 30 & 31 & 32 & 33 & 34 + @xmath87 & * 2 * & 1 & 1 & 2 & 4 & 3 & 8 & 8 & * 33 * & 37 & 24 & 123 & 72 & 198 & 111 & 296 & 578 & 731 & 1240 & 1822 +     + @xmath42 & * 0 * & 1 & 2 & 3 & 4 & 5 & 6 & * 7 * & 8 & 9 & 10 & 11 & 12 & 13 & 14 & 15 & 16 & 17 & 18 & 19 + @xmath86 & * 12 * & 16 & 18 & 19 & 20 & 21 & 22 & * 23 * & 24 & 25 & 26 & 27 & 28 & 29 & 30 & 31 & 32 & 33 & 34 & 35 + @xmath87 & * 1 * & 1 & 3 & 2 & 1 & 7 & 8 & * 34 * & 32 & 15 & 117 & 61 & 184 & 119 & 289 & 532 & 651 & 1166 & 1731 & 3023 +     +   + @xmath42 & * 0 * & 1 & 2 & 3 & 4 & 5 & 6 & 7 & 8 & 9 & 10 & 11 & * 12 * & 13 & 14 & 15 & 16 & 17 & 18 & 19 + @xmath86 & * 17 * & 18 & 19 & 20 & 21 & 22 & 23 & 24 & 25 & 26 & 27 & 28 & * 29 * & 30 & 31 & 32 & 33 & 34 & 35 & 36 + @xmath87 & * 1 * & 3 & 2 & 3 & 1 & 1 & 3 & 1 & 6 & 9 & 14 & 13 & * 52 * & 28 & 199 & 78 & 79 & 154 & 235 & 422 +     + @xmath42 & * 0 * & 1 & 2 & 3 & 4 & 5 & * 6 * & 7 & 8 & 9 & 10 & 11 & 12 & 13 & 14 & 15 & 16 & 17 & 18 & 19 + @xmath86 & * 17 * & 21 & 23 & 24 & 25 & 26 & * 27 * & 28 & 29 & 30 & 31 & 32 & 33 & 34 & 35 & 36 & 37 & 38 & 39 & 40 + @xmath87 & * 1 * & 2 & 2 & 2 & 4 & 5 & * 31 * & 18 & 55 & 23 & 97 & 103 & 133 & 253 & 234 & 596 & 722 & 1261 & 1923 & 3119 +     + @xmath42 & * 0 * & 1 & 2 & 3 & * 4 * & 5 & 6 & 7 & 8 & 9 & 10 & 11 & 12 & 13 & 14 & 15 & 16 & 17 & 18 & 19 + @xmath86 & * 23 * & 24 & 25 & 26 & * 27 * & 28 & 29 & 30 & 31 & 32 & 33 & 34 & 35 & 36 & 37 & 38 & 39 & 40 & 41 & 42 + @xmath87 & * 3 * & 1 & 4 & 5 & * 31 * & 9 & 56 & 16 & 93 & 101 & 109 & 233 & 190 & 577 & 655 & 1099 & 1731 & 2920 & 4407 & 6408 +    [ tab : ms128 ]     |c |c |c |c |c |c |c |c |c |c |c |c |c |c |c |c |c |c |c |c |c | +   + @xmath42 & * 0 * & 1 & 2 & 3 & 4 & 5 & * 6 * & 7 & 8 & 9 & 10 & 11 & 12 & 13 & 14 & 15 & 16 & 17 & 18 & 19 + @xmath86 & * 27 * & 28 & 29 & 30 & 31 & 32 & * 33 * & 34 & 35 & 36 & 37 & 38 & 39 & 40 & 41 & 42 & 43 & 44 & 45 & 46 + @xmath87 & * 1 * & 2 & 5 & 1 & 8 & 3 & * 126 * & 4 & 14 & 14 & 17 & 960 & 1923 & 41 & 304 & 99 & 730 & 1113 & 539 & 406 +     + @xmath42 & * 0 * & 1 & 2 & 3 & 4 & 5 & 6 & 7 & 8 & 9 & 10 & 11 & 12 & 13 & 14 & 15 & * 16 * & 17 & 18 & 19 + @xmath86 & * 16 * & 21 & 22 & 24 & 25 & 26 & 27 & 28 & 29 & 30 & 31 & 32 & 33 & 34 & 35 & 36 & * 37 * & 38 & 39 & 40 + @xmath87 & * 1 * & 1 & 1 & 1 & 4 & 2 & 2 & 3 & 5 & 7 & 11 & 13 & 18 & 16 & 36 & 30 & * 114 * & 200 & 665 & 543 +     + @xmath42 & * 0 * & 1 & 2 & 3 & 4 & 5 & 6 & 7 & 8 & 9 & 10 & 11 & 12 & 13 & 14 & * 15 * & 16 & 17 & 18 & 19 + @xmath86 & * 20 * & 21 & 24 & 25 & 26 & 27 & 28 & 29 & 30 & 31 & 32 & 33 & 34 & 35 & 36 & * 37 * & 38 & 39 & 40 & 41 + @xmath87 & * 1 * & 1 & 1 & 5 & 2 & 1 & 2 & 5 & 9 & 15 & 9 & 13 & 22 & 27 & 34 & * 114 * & 196 & 669 & 530 & 430 +     + @xmath42 & * 0 * & 1 & 2 & 3 & 4 & 5 & 6 & 7 & 8 & * 9 * & 10 & 11 & 12 & 13 & 14 & 15 & 16 & 17 & 18 & 19 + @xmath86 & * 27 * & 28 & 29 & 30 & 31 & 32 & 33 & 34 & 35 & * 36 * & 37 & 38 & 39 & 40 & 41 & 42 & 43 & 44 & 45 & 46 + @xmath87 & * 2 * & 2 & 5 & 1 & 5 & 2 & 9 & 3 & 14 & * 246 * & 79 & 505 & 563 & 58 & 76 & 371 & 617 & 432 & 591 & 1324 +     +   + @xmath42 & * 0 * & 1 & 2 & 3 & 4 & 5 & 6 & 7 & 8 & 9 & 10 & 11 & 12 & 13 & 14 & 15 & 16 & 17 & * 18 * & 19 + @xmath86 & * 26 * & 27 & 29 & 31 & 33 & 34 & 35 & 36 & 37 & 38 & 39 & 40 & 41 & 42 & 43 & 44 & 45 & 46 & * 47 * & 48 + @xmath87 & * 2 * & 1 & 1 & 1 & 3 & 1 & 4 & 3 & 3 & 4 & 2 & 7 & 14 & 9 & 18 & 25 & 28 & 41 & * 151 * & 184 +     + @xmath42 & * 0 * & 1 & 2 & 3 & 4 & 5 & 6 & 7 & 8 & 9 & 10 & 11 & 12 & 13 & 14 & 15 & 16 & 17 & 18 & 19 + @xmath86 & * 17 * & 19 & 23 & 25 & 26 & 27 & 28 & 29 & 30 & 31 & 32 & 33 & 34 & 35 & 36 & 37 & 38 & 39 & 40 & 41 + @xmath87 & * 1 * & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 1 & 4 & 1 & 3 & 3 & 2 & 12 & 5 & 14 & 16 & 13 & 17 +     + @xmath42 & * 0 * & 1 & 2 & 3 & 4 & 5 & 6 & 7 & 8 & 9 & 10 & 11 & 12 & 13 & 14 & 15 & 16 & 17 & 18 & 19 + @xmath86 & * 18 * & 19 & 23 & 25 & 26 & 27 & 28 & 29 & 31 & 32 & 33 & 34 & 35 & 36 & 37 & 38 & 39 & 40 & 41 & 42 + @xmath87 & * 1 * & 1 & 1 & 1 & 1 & 2 & 1 & 1 & 4 & 1 & 6 & 2 & 3 & 7 & 6 & 14 & 19 & 11 & 16 & 16 +     + @xmath42 & * 0 * & 1 & 2 & 3 & 4 & 5 & * 6 * & 7 & 8 & 9 & 10 & 11 & 12 & 13 & 14 & 15 & 16 & 17 & 18 & 19 + @xmath86 & * 27 * & 28 & 29 & 30 & 31 & 33 & * 35 * & 36 & 37 & 38 & 39 & 40 & 41 & 42 & 43 & 44 & 45 & 46 & 47 & 48 + @xmath87 & * 2 * & 1 & 2 & 1 & 1 & 3 & * 63 * & 1 & 3 & 6 & 3 & 1 & 6 & 12 & 10 & 19 & 21 & 33 & 45 & 48 +    [ tab : ms512 ]    we make the following observations :    * improving the corner merit @xmath88 has mixed effects .",
    "it improves the minimum distance ( highlighted in the tables ) for certain cases but it degrades for others as commented in section  [ sec : cm ] .",
    "* the first spectral line with a high multiplicity has a multiplicity very close to the degree of shift invariance @xmath24 as predicted in section  [ sec : cm ] .",
    "* the @xmath89 interleavers appear in general to improve the first spectral line that has a high multiplicity . however , the comparison is not straightforward because the distance spectra is truncated to the first 20 lines .",
    "the error performances of turbo codes using the _ maximum - spread _ qpp interleavers in table  [ tab : msinterleavers ] as well as interleavers in tables  [ tab : maxqpp ] and  [ tab : maxomega ] are examined .",
    "the structure of the simulated turbo codes is the same as in the previous section .",
    "however , we simulated for both udt and idt .",
    "the true code - rates for 8-state constituent codes are @xmath90 and @xmath91 for udt and idt , respectively .",
    "the true code - rates for 16-state constituent codes are @xmath92 and @xmath93 for udt and idt , respectively .",
    "the true code - rate is used to compute the signal - to - noise ratio @xmath94 .",
    "we used bpsk modulation and assumed an additive white gaussian noise ( awgn ) channel .",
    "the decoding was performed with log - map decoding and simulated until at least 50 frame errors had been counted , unless otherwise noted .",
    "we compare first length @xmath71 pp interleavers under similar conditions with drp interleavers in  @xcite .",
    "the iterative decoding method used in  @xcite is simpler than log - map but worse by about 0.1db at lower snrs .",
    "the drp curves were obtained directly from  @xcite but adjusted in snr to the true code - rate .",
    "we used 16 log - map decoding iterations to match their number of iterations .",
    "the simulation curves are compared in fig .",
    "[ fig : drpvsqpp ] .",
    "pp interleavers compared with drp interleavers in turbo codes with 8-state constituent convolutional codes and 16 decoding iterations . ]",
    "there is a close match in performance with the drp interleaver with parameter @xmath95 at higher snrs .",
    "the similarity in performance is not quite surprising if we consider that both pp and drp constructions are based on number congruences .",
    "a deeper study of their resemblance is left for a future work , however , we provide a few insights of why qpp interleavers are expected to be close to drp interleavers with @xmath95 for this interleaver length of @xmath71 .    the parameter @xmath96 in a drp interleaver is the length of an arbitrary permutation of @xmath96 letters . explaining only the essence , a drp interleaver can be understood as a modification of a linear interleaver by using the permutation of @xmath96 letters .",
    "we show that pp and drp constructions are in general different , except when @xmath97 . when @xmath97 , drp interleavers are what we call linear interleavers , i.e. , pps of first degree because no modification of a linear interleaver is possible if @xmath97 .",
    "as @xmath96 grows , drp interleavers can become arbitrarily `` random '' in the sense that when @xmath98 , arbitrary interleaving functions are possible .",
    "the class of pp interleavers can not generate arbitrary interleaving functions regardless of the degree of the permutation polynomial .",
    "this is easily proven by counting arguments but also because _ all _ interleavers generated by pps are maximum contention - free  @xcite but an arbitrary interleaving function is generally not ( maximum ) contention - free  @xcite .",
    "factoring out the construction algorithm , which is similar in complexity and nature , one may characterize pp and drp interleavers by their input parameters ( two vectors of length @xmath96 for drp interleavers and the coefficients of the polynomials for pp interleavers ) .",
    "we propose to measure the `` randomness '' of drp interleavers by computing the entropy @xmath99 of the two input permutations of @xmath96 letters .",
    "considering that an arbitrary sequence of @xmath96 letters can be chosen , then the entropy is @xmath100 bits , which is independent of the interleaver length . for an interleaver length of @xmath0 ,",
    "the entropy of the coefficients in @xmath101 is @xmath102 bits assuming that @xmath0 is a power of 2 and @xmath103 s are either even or odd  @xcite . now observing the previous matching in fig .",
    "[ fig : drpvsqpp ] for drp @xmath104 and qpp , we have @xmath105 bits and @xmath106 bits with a perfect match .",
    "higher because it requires the specification of a base linear interleaver that includes a constant coefficient . ]",
    "would this be a coincidence ?",
    "the drp interleaver with @xmath107 has an entropy of @xmath108 bits , which would correspond to a degree-6 pp .",
    "we obtained a very close error performance with a degree six permutation polynomial .",
    "@xmath109    the polynomial in ( [ eq : sixth ] ) has a degree of non - linearity @xmath110 , a refined degree of non - linearity @xmath111 and the orbit size is @xmath112 .",
    "its spread factor is @xmath113 and has a refined product merit of @xmath114 .",
    "the corresponding performance curve is shown in fig .  [",
    "fig : drpvsqpp ] .",
    "we used interleaved dual termination ( idt )  @xcite for this code , which gave a small advantage over udt at high snrs ( it is not shown in the plot but about a factor of 2 at 2.0db ) .    in summary :",
    "* the maximum - spread interleaver ( @xmath115 ) is mostly indifferent to the termination methods and very similar in performance to the drp @xmath95 and idt . *",
    "the @xmath89 interleaver ( @xmath116 ) has a significant improvement with idt over udt and is a little better than the maximum - spread code . * the degree-6 interleaver with idt and drp @xmath107 interleaver",
    "have mostly the same performance .",
    "we plot next the fer curves for the first four _ maximum - spread _ interleavers in table  [ tab : msinterleavers ] using udt and the corresponding constant - free codes in table  [ tab : maxomega ] using idt for turbo codes using the 8-state ( 13,15 ) convolutional codes and eight decoding iterations .",
    "similarly as in  @xcite , excellent error performance is obtained down to at least an fer of @xmath117 .",
    "there is noticeable improvement in fer for codes using @xmath89 interleavers as the block length increases .",
    "also , a truncated union bound is plotted using the 20 first spectral lines for two of the codes using maximum - spread interleavers ( ms qpp @xmath118 and ms qpp @xmath71 ) .",
    "the refined product merit effectively avoids the selection of bad interleavers .",
    "for example ,",
    "the permutation polynomial    @xmath119    has a spread factor @xmath120 ( a maximum - spread interleaver ) , a degree of non - linearity @xmath110 , a simple product measure of @xmath121 but a refined degree of non - linearity @xmath122 , and a refined product measure of @xmath123 .",
    "the simulation performance at 1.75db ( not shown in plots ) gives an fer of @xmath124 , clearly inferior to the maximum - spread interleaver of second degree that has a larger @xmath125 .",
    "an impressive error performance  @xcite with fers around @xmath126 at an snr of 1.25db was demonstrated for a drp interleaver with @xmath107 in a turbo code using the ( 23,35 ) 16-state constituent code , idt , and 16 decoding iterations .",
    "we show that a similar result is obtained with the qpp interleaver @xmath127 in table  [ tab : maxomega ] with the same constituent code , udt , and 16 log - map decoding iterations .",
    "we have not simulated the constant - free case with idt but it should provide an even better error performance . other codes with interleavers in tables  [ tab : maxqpp ] ( ms ) and tables  [ tab : maxomega ] ( @xmath89 ) were also simulated .",
    "a genie stopper for the decoding iterations ( the iterations are stopped when the decoded information sequence completely agrees with the transmitted one ) was used when simulating points at very low fers . for the length @xmath128 @xmath89 qpp code , at 0.5db , close to 6 million frames",
    "were simulated with no frame errors with a regular turbo decoder ; additionally , almost 40 million frames were simulated with a genie stopper for the iterations , resulting in only three frame errors .",
    "similarly , other points at very low fers were simulated with the decoding parameters in table  [ tab : sim ] .",
    "& frames & frame errors + regular & 74,151,303 & 1 + genie & 657,736,347 & 7 + total & 731,887,650 & 8 +   + & frames & frame errors + regular & 56,273,401 & 10 + genie & 0 & 0 + total & 56,273,401 & 10 +     + & frames & frame errors + regular & 195,667,074 & 11 + genie & 0 & 0 + total & 195,667,074 & 11 +   + & frames & frame errors + regular & 25,603,477 & 1 + genie & 180,873,414 & 3 + total & 206,476,891 & 4 +   + & frames & frame errors + regular & 5,887,701 & 0 + genie & 39,323,725 & 3 + total & 45,211,426 & 3 +   + & frames & frame errors + regular & 4,299,436 & 0 + genie & 29,305,054 & 3 + total & 33,604,490 & 3 +    [ tab : sim ]        although there was an evident improvent by using @xmath89 polynomials for larger block lengths using 8-state constituent codes , there is not a clear difference for the length @xmath128 using 16-state constituent codes within the reach of simulations .",
    "in addition , we observe the following for length @xmath71 :    * codes using both the maximum - spread interleaver ( @xmath115 ) and the @xmath89 ( @xmath116 ) interleaver benefit significantly with idt . *",
    "the code with the maximum - spread interleaver and idt is better than the code with @xmath89 ( @xmath116 ) . *",
    "the code with the maximum - spread interleaver and idt has a performance very close to the best interleaver in  @xcite , a dithered diagonal interleaver with identical spread factor of @xmath120 .    in summary , for resource - constrained applications , the combination of 8-state constituent codes , a maximum of 8 decoding iterations and qpp interleavers give excellent performance down to fers around @xmath117 or smaller from short to medium information block sizes of up to 8192 bits .",
    "if 16-state constituent codes and a maximum of 16 decoding iterations are acceptable then qpp interleavers give impressive performance down to fers close to @xmath129 with little or no signs of error - floors .",
    "the recently proposed construction of pp interleavers  @xcite and the subclass of qpp interleavers yield very good error rate performance for turbo codes in a number of practical examples  @xcite .",
    "interesting properties of qpp interleavers have been studied earlier  @xcite ; however , their characterization is still in its infancy with many open questions . in this paper ,",
    "the spread factor of qpp interleavers was studied .",
    "an infinite sequence of qpp interleavers achieving the _ maximum - spread _ was given .",
    "moreover , several properties of pps and effective measures that are relevant for turbo coding were investigated .",
    "we proposed a new _ refined product measure _",
    "@xmath89 for pp interleavers that is easily and quickly computed ; a table of good interleavers according to the new measure is provided for several of the interleaver lengths reported in the literature .",
    "qpps are convenient because of their small footprint ; however , we provided some evidence that pps with larger degrees than two may be necessary for very low fers .",
    "although , turbo codes are limited by a logarithmic growth on the minimum distance  @xcite , that result is asymptotic : good codes at practical lengths achieving fers close to @xmath129 without signs of an error floor have been demonstrated earlier  @xcite using drp interleavers .",
    "similar results are demonstrated in this paper with qpp interleavers .    the work in  @xcite opened the doors to a class of interleavers for turbo coding that provides the combination of an excellent performance , elegant algebraic and geometric analysis , and simplicity of implementation ; to the best of our knowledge",
    ", there are no other interleavers sharing simultaneously these three characteristics to their fullest extent .",
    "many problems in turbo coding that were earlier treated empirically may now be recast to be solved systematically and rigorously : the design of multiple turbo codes  @xcite for an improved asymptotic minimum distance by classifying the properties of pp interleavers under function composition ; and puncturing of code bits for higher data rates using the @xmath130 theory  @xcite ( a stronger generalization of an even - odd interleaver  @xcite ) are only a couple of relevant examples .",
    "* appendix *",
    "a technique inspired from  @xcite is used to compute the upper bound @xmath52 .",
    "we use the same distance @xmath35 in section  [ sec : ms ] but over the space @xmath131 and forming the metric space @xmath132 . in this metric space , a sphere of radius @xmath133 has the shape of a square when projected over the euclidean metric space as shown in fig .",
    "[ fig : tspace ] . if two spheres of radii @xmath133 and @xmath134 touch each other then the distance between their centers is @xmath135 .    . ]    before proceeding with the upper bound , it is straightforward to realize that in the metric space @xmath136 there are only two types of densest packings for spheres with identical radius : aligned packing and unaligned packing as shown in fig .",
    "[ fig : tpacking ] .",
    "the unaligned packing is obtained by arbitrarily `` sliding '' stripes of the aligned packing .    .",
    "]    the upper bound on @xmath46 is constructive . given a square whose area is @xmath137 , we attempt to pack @xmath0 spheres of identical radii @xmath138 and maximize the radii of the spheres @xmath138 .",
    "we do so for values of @xmath0 for which clearly a subset of the aligned packing gives the densest packing as shown in fig .",
    "[ fig : tbound ] .",
    "we end up with 1 ) several points touching the boundaries of @xmath139 and 2 ) excess cover areas .    .",
    "]    there are two classes of values for @xmath0 .",
    "the cases @xmath140 and @xmath141 belong to    @xmath142    where @xmath143 is the number of points on the bottom edge .",
    "the upper bound is the distance between adjacent points , i.e. , @xmath144 .",
    "after some simple algebra , the upper bound @xmath52 is    @xmath145    the cases @xmath146 and @xmath147 belong to    @xmath148    the upper bound @xmath52 is    @xmath149",
    "although not explained in  @xcite , it is clear that many candidates for an interleaver length @xmath0 achieving maximum - spread @xmath47 are of the form @xmath76 because those allow the optimal packing in @xmath150 .",
    "this is illustrated in fig .",
    "[ fig : perfect ] for @xmath151 .",
    "the dots show the potential places that may be occupied by a point of the interleaver - code . without loss of generality ,",
    "we place first a point in @xmath152 .",
    "next , we place a point along the line @xmath153 and @xmath154 with the constraint that a linear curve that interpolates the first two points is a permutation polynomial",
    ". then we follow a similar but simpler technique as we do to prove theorem  [ th : sequence ] in appendix  [ sec : sequence ] .",
    "this leads to an alternate geometric construction for all maximum - spread linear interleavers ( up to symmetries ) .",
    "the authors of  @xcite explain the so - called dithered diagonal construction using the same geometric approach .",
    "the difference with linear interleavers is that the placement of a second point does not fix all the remaining points . therefore a different slide ( or dither )",
    "is allowed for the other stripes provided that an interleaver constraint is maintained .    .",
    "the set of linear curves @xmath155 is simply passing through the center of the stripes in either the aligned or an unaligned packing as show in fig .  [",
    "fig : perfect ] , i.e. , the smallest distance @xmath38 between two points that belong to any two disjoint curves is @xmath156 .",
    "if we show that the intersection of each of the curves @xmath157 with @xmath25 has @xmath158 solutions that are equally spaced by @xmath159 then we are done .",
    "we start by rewriting the infinite sequence ( [ eq : sequence ] ) as function of @xmath160 .",
    "@xmath161    the intersection of ( [ eq : n_form ] ) and a linear curve @xmath157 is the solution to    @xmath162    or    @xmath163    we then transform the quadratic congruence ( [ eq : change_var ] ) into a linear congruence    @xmath164    whose set of solutions is    @xmath165    i.e. , we have @xmath166 solutions that are equally spaced for ( [ eq : lin_reduction ] ) . to solve ( [ eq : change_var ] ) , we simply need to find the solution to    @xmath167    when @xmath42 and @xmath43 are fixed .",
    "observing that @xmath168 is a qpp , the solution for @xmath81 is unique .",
    "further , from the proof of the @xmath130 property of permutation polynomials  ( * ? ? ?",
    "* theorem 1 ) , we know that if @xmath96 divides @xmath0 then a set of @xmath96 equally spaced ( modulo @xmath0 ) values by @xmath169 is always mapped to an equally spaced set of values by a pp and also by its inverse pp . therefore we establish the desired result .",
    "if @xmath170 is an isometry of the interleaver - code @xmath171 then we must have @xmath172 . developing it we have                there are exactly @xmath179 distinct solutions , which means that each point in @xmath180 belongs to an orbit of size @xmath179 ,",
    "i.e. , the degree of shift - invariance is @xmath181 .",
    "hence , from proposition  [ prop : shift - nl ] , the degree of non - linearity for qpps is @xmath182 .",
    "a.  nimbalker , t.  k. blankenship , b.  classon , t.  e. fuja , and d.  j. costello , jr .",
    ", `` contention - free interleavers , '' in _ proc . 2004 ieee international symposium on information theory _ , chicago , il , 2004 , p.  54 .    c.  berrou , s.  k. y.  saouter , c.  douillard , and m.  jzquel , `` designing good permutations for turbo codes : towards a single model , '' in _ proc .",
    "international conference on communications _ , vol .  1 , paris , france , june 2004 , pp . 341345 .",
    "c.  j. corrada - bravo and i.  rubio , `` deterministic interleavers for turbo codes with random - like performance and simple implementation , '' in _ proc .",
    "3rd international symposium on turbo codes _ , brest , france , sept .",
    "a.  giulietti , l.  van der perre , and m.  strum , `` parallel turbo coding interleavers : avoiding collisions in access to storage elements , '' _ iee electronics letters _ , vol .",
    "38 , no .  5 , pp .",
    "232234 , feb .",
    "2002 .",
    "s.  crozier and p.  guinand , `` high - performance low - memory interleaver banks for turbo - codes , '' in _ proc .",
    "54th ieee vehicular technology conference ( vtc 2001 fall ) _ , atlantic city , new jersey , oct . 2001 , pp .",
    "23942398 .",
    "f.  daneshgaran and m.  mondin , `` design of interleavers for turbo codes : iterative interleaver growth algorithms of polynomial complexity , '' _ ieee trans .",
    "inform . theory _",
    "45 , no .  6 , pp . 18451859 , sept . 1999 .",
    "o.  y. takeshita and d.  j. costello , jr .",
    ", `` on deterministic linear interleavers for turbo - codes , '' in _ proc .",
    "35th annual allerton conference on communication , control , and computing _ , sept .",
    "1997 , pp . 711712 .        c.  berrou , a.  glavieux , and p.  thitimajshima , `` near shannon limit error - correcting coding and decoding : turbo - codes , '' in _ proc .",
    "conf . on commun .",
    "_ , geneve , switzerland , may 1993 , pp",
    ".    o.  y. takeshita , `` on maximum contention - free interleavers and permutation polynomials over integer rings , '' _ ieee trans .",
    "inform . theory _",
    "2006 , to be published .",
    "[ online ] .",
    "available : http://arxiv.org/abs/cs.it/0506093/    j.  ryu and o.  y. takeshita , `` on quadratic inverses for quadratic permutation polynomials over integer rings , '' _ ieee trans .",
    "inform . theory _",
    "2006 , to be published .",
    "[ online ] .",
    "available : http://arxiv.org/abs/cs.it/0511060/      o.  y. takeshita , `` a new construction for ldpc codes using permutation polynomials over integer rings , '' _ ieee trans .",
    "inform . theory _",
    ", submitted for publication .",
    "[ online ] .",
    "available : http://arxiv.org/abs/cs.it/0506091/                          r.  garello , p.  pierloni , and s.  benedetto , `` computing the free distance of turbo codes and serially concatenated codes with interleavers : algorithms and applications , '' _ ieee j. select .",
    "areas commun .",
    "_ , vol .  19 , no .  5 , pp .",
    "800812 , may 2001 .",
    "s.  crozier and p.  guinand , `` distance upper bounds and true minimum distance results for turbo - codes designed with drp interleavers , '' in _ proc .",
    "3rd international symposium on turbo codes & related topics _ , brest , france , sept .",
    "2003 , pp . 169172 ."
  ],
  "abstract_text": [
    "<S> an interleaver is a critical component for the channel coding performance of turbo codes . </S>",
    "<S> algebraic constructions are important because they admit analytical designs and simple , practical hardware implementation </S>",
    "<S> . the spread factor of an interleaver is a common measure for turbo coding applications . </S>",
    "<S> maximum - spread interleavers are interleavers whose spread factors achieve the upper bound . </S>",
    "<S> an infinite sequence of quadratic permutation polynomials over integer rings that generate maximum - spread interleavers is presented . </S>",
    "<S> new properties of permutation polynomial interleavers are investigated from an algebraic - geometric perspective resulting in a new non - linearity metric for interleavers . </S>",
    "<S> a new interleaver metric that is a function of both the non - linearity metric and the spread factor is proposed . </S>",
    "<S> it is numerically demonstrated that the spread factor has a diminishing importance with the block length . </S>",
    "<S> a table of good interleavers for a variety of interleaver lengths according to the new metric is listed . </S>",
    "<S> extensive computer simulation results with impressive frame error rates confirm the efficacy of the new metric . </S>",
    "<S> further , when tail - biting constituent codes are used , the resulting turbo codes are quasi - cyclic .    algebraic , geometry , interleaver , permutation polynomial , quadratic , quasi - cyclic , spread , turbo code . </S>"
  ]
}
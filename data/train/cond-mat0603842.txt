{
  "article_text": [
    "as yet pointed out in the introduction , the tensorial structure of the hilbert space of a composite system leads to an exponential growth of the resources needed for the simulation with the number of the system constituents .",
    "however , if one is interested in the ground state properties of a one - dimensional system , the number of parameters is limited for non critical systems or grows polynomially for a critical one.@xmath9 this implies that it is possible to rewrite the state of the system in a more efficient way , i.e. it can be described by using a number of coefficients which is much smaller than the dimension of the hilbert space .",
    "equivalently , a strategy to simulate ground state properties of a system is to consider only a relevant subset of states of the full hilbert space .",
    "this idea is at the heart of the so called `` real space blocking renormalizarion group '' which we briefly describe below , and is reminiscent of the renormalization group ( rg ) introduced by wilson.@xmath5    in the real space blocking rg procedure one typically begins with a small part of a quantum system ( a block @xmath18 of size @xmath19 , living on an @xmath20-dimensional hilbert space ) , and a hamiltonian which describes the interaction between two identical blocks .",
    "then one projects the composite 2-block system ( of size @xmath21 ) representation ( dimension @xmath22 ) onto the subspace spanned by the @xmath20 lowest - lying energy eigenstates , thus obtaining a new truncated representation for it .",
    "each operator is consequently projected onto the new @xmath20-dimensional basis .",
    "this procedure is then iteratively repeated , until the desired system size is reached .",
    "rg was successfully applied for the kondo problem , but fails in the description of strongly interacting systems .",
    "this failure is due to the procedure followed to increase the system size and to the criterion used to select the representative states of the renormalized block : indeed the decimation procedure of the hilbert space is based on the assumption that the ground state of the entire system will essentially be composed of energetically low - lying states living on smaller subsystems ( the forming blocks ) which is not always true .",
    "a simple counter - example is given by a free particle in a box : the ground state with length @xmath23 has no nodes , whereas any combination of two grounds in @xmath24 boxes will have a node in the middle , thus resulting in higher energy .    a convenient strategy to solve the rg breakdown is the following : before choosing the states to be retained for a finite - size block , it is first embedded in some environment that mimics the thermodynamic limit of the system",
    "this is the new key ingredient of the dmrg algorithm ; the price one has to pay is a slowdown of the system growth with the number of the algorithm s iterations : from the exponentially fast growth wilson s procedure to the dmrg linear growth ( very recently , in the context of real - space renormalization group methods , a new scheme which recovers the exponential growth has been proposed ; this is based upon a coarse - graining transformation that renormalizes the amount of entanglement of a block before its truncation@xmath25 ) . in the following , we introduce the working principles of the dmrg , and provide a detailed description to implement it in practice ( for a pedagogical introduction see for example refs .",
    "@xmath26 ) .      keeping in mind the main ideas of the dmrg depicted above",
    ", we now formulate the basis structure of the so called _ infinite - system _ dmrg for one - dimensional lattice systems.the typical scenario where dmrg can be used is the search for an approximate ground state of a 1d chain of neighbor interacting _ sites _ , each of them living in a hilbert space of dimension @xmath27 . as in wilson",
    "s rg , dmrg is an iterative procedure in which the system is progressively enlarged . in the infinite system algorithm",
    "we keep enlarging the system until the ground state properties we are interested in ( e.g. , the ground state energy per site ) have converged .",
    "the system hamiltonian is written as : @xmath28 where @xmath29 and @xmath30 are coupling constants , and @xmath31 , @xmath32 and @xmath33 are sets of operators acting on the @xmath34-th site .",
    "the index @xmath35 refers to the various elements of these sets .",
    "for example , in a magnetic chain these can be angular momentum operators .",
    "for simplicity we will not describe the case of position dependent couplings , since it can be easily reduced to the uniform case .",
    "the algorithm starts with a _ block _ composed of one site @xmath36 ( see fig .",
    "[ fig : blocks]a ) ; the arguments of @xmath37 refer to the number of sites it embodies , and to the number of states used to describe it . from the computational point of view ,",
    "a generic block @xmath38 is a portion of memory which contains all the information about the block : the block hamiltonian , its basis and other operators that we will introduce later .",
    "the block hamiltonian @xmath39 for @xmath38 includes only the local terms ( i.e. local and interaction terms where only sites belonging to the block are involved ) .",
    "the next step consists in building the so called left _",
    "enlarged block _ , by adding a site to the right of the previously created block .",
    "the corresponding hamiltonian @xmath40 is composed by the local hamiltonians of the block and the site , plus the interaction term : @xmath41 the enlarged block is then coupled to a similarly constructed right enlarged block .",
    "if the system has global reflection symmetry , the right enlarged block hamiltonian @xmath42 can be obtained just by reflecting the left enlarged block.@xmath43    by adding the interaction of the two enlarged blocks , a _ super - block _ hamiltonian @xmath44 is then built , which describes the global system : @xmath45 from now on , we refer to the sites @xmath46 and @xmath47 as the _",
    "free sites_. the matrix @xmath44 should finally be diagonalized in order to find the ground state @xmath48 , which can be rewritten in ket notation as : @xmath49 hereafter latin indexes refer to blocks , while greek indexes indicate free sites ; implicit summation convention is assumed . from @xmath50 one",
    "evaluates the reduced density matrix @xmath51 of the left enlarged block , by tracing out the right enlarged block : @xmath52 the core of the dmrg algorithm stands in the renormalization procedure of the enlarged block , which eventually consists in finding a representation in terms of a reduced basis with at most @xmath20 ( fixed _ a priori _ ) elements .",
    "this corresponds to a truncation of the hilbert space of the enlarged block , since @xmath53.@xmath54 these states are chosen to be the first @xmath55 eigenstates of @xmath56 , corresponding to the largest eigenvalues .",
    "this truncated change of basis is performed by using the @xmath57 rectangular matrix @xmath58 ( where the subscripts stand for the number of sites enclosed in the input block and in the output renormalized block ) , whose columns , in matrix representation , are the @xmath55 selected eigenstates . to simplify notations ,",
    "let us introduce the function @xmath59 , which acts on a block index @xmath60 and on the next free site index @xmath61 and gives an index of the enlarged block running from @xmath62 to @xmath63 .",
    "the output of the full renormalization procedure is a truncated enlarged block @xmath64 , which coincides with the new starting block for the next dmrg iteration .",
    "this consists in the new block hamiltonian : @xmath65 and in the local operators : @xmath66 written in the new basis .",
    "these are necessary in the next step , for the construction of the interaction between the rightmost block site and the free site .",
    "the output block @xmath67 includes also the matrix @xmath58 which identifies the basis states of the new block .",
    "it is worth to emphasize that we can increase the size of our system without increasing the number of states describing it , by iteratively operating the previously described procedure .     and adding one free site to it , the enlarged block @xmath68 is formed . here for simplicity we assume that the system is reflection - symmetric , thus the environmental right block is taken equal to the left block . then , after having created the super - block @xmath69 , a renormalization procedure is applied in order to get the new block for the next dmrg iteration . on the right part ( b ) the scheme of a complete finite - system dmrg sweep is depicted . ]",
    "we now summarize the key operations needed to perform a single dmrg step .",
    "for each dmrg step the dimension of the super - block hamiltonian goes from @xmath21 to @xmath70 , thus the simulated system size increases by @xmath71 sites .",
    "the infinite - system dmrg , with reflection symmetry , consists in iterating these operations :    1 .",
    "start from left block @xmath38 , and enlarge it by adding the interaction with a single site .",
    "2 .   reflect such enlarged block , in order to form the right enlarged block .",
    "3 .   build the super - block from the interaction of the two enlarged blocks .",
    "4 .   find the ground state of the super - block and the @xmath53 eigenstates of the reduced density matrix of the left enlarged block with largest eigenvalues .",
    "renormalize all the relevant operators with the matrix @xmath58 , thus obtaining @xmath67 .",
    "notice that at each dmrg step the ground state of a chain whose length grows by two sites is found .",
    "by contrast , the number of states describing a block is always @xmath20 , regardless of how many sites it includes .",
    "this means that the complexity of the problem is a priori fixed by @xmath20 and @xmath27 ( while @xmath27 is imposed by the structure of the simulated system , @xmath72 is a parameter which has to be appropriately set up by the user , in order to get the desired precision for the simulation ; see also sec .",
    "[ sec : examples ] ) . in sec .",
    "[ sec : techdmrg ] we will discuss how it is possible to extract the ground state of the super - block hamiltonian without finding its entire spectrum , by means of efficient numerical diagonalization methods , like davidson or lanczos algorithms.@xmath73 we stress that at each dmrg step a truncation error @xmath74 is introduced : @xmath75 where @xmath76 are the eigenvalues of the reduced density matrix @xmath56 in decreasing order .",
    "the error @xmath74 is the weight of the eigenstates of @xmath56 not selected for the new block basis . in order to perform a reliable dmrg simulation , the parameter @xmath20",
    "should be chosen such that @xmath74 remains small , as one further increases the system size . for critical 1d systems @xmath74",
    "decays as a function of @xmath20 with a power law , while for 1d systems away from criticality it decays exponentially , thus reflecting the entanglement properties of the system in the two regimes : a critical system is more entangled , therefore more states have to be taken into account .",
    "the output of the infinite - system algorithm described before is the ( approximate ) ground state of an `` infinite '' 1d chain .",
    "in other words , one increases the length of the chain by iterating dmrg steps , until a satisfactory convergence is reached .",
    "however , for many problems , infinite - system dmrg does not yield accurate results up to the wanted precision .",
    "for example , the strong physical effects of impurities or randomness in the hamiltonian can not be properly accounted for by infinite - system dmrg , as the total hamiltonian is not yet known at intermediate steps .",
    "moreover , in systems with strong magnetic fields , or close to a first order transition , one may be trapped in a metastable state favoured for small sizes ( e.g. , by edge effects ) .",
    "finite - system dmrg manages to eliminate such effects to a very large degree , and to reduce the error almost to the truncation error.@xmath77 the idea of the finite - system dmrg algorithm is to stop the infinite - system algorithm at some preselected super - block length @xmath78 , which is subsequently kept fixed . in the following dmrg steps one applies the steps of infinite - system dmrg , but only one block is increased in size while the other is shrunk , thus keeping the super - block size constant .",
    "reduced basis transformations are carried out only for the growing block .",
    "when the infinite - system algorithm reaches the desired system size , the system is formed by two blocks @xmath79 and two free sites , as shown in the first row of fig .",
    "[ fig : blocks]b .",
    "the convergence is then enhanced by the so called `` sweep procedure '' .",
    "this procedure is illustrated in the sequent rows of fig .",
    "[ fig : blocks]b",
    ". it consists in enlarging the left block with one site and reducing the right block correspondingly in order to keep the length fixed .",
    "in other words , after one finite - system step the system configuration is @xmath80 ( where @xmath81 represents the free site ) .",
    "while the left block is constructed by enlarging @xmath82 with the usual procedure , the right block is taken from memory , as it has been built in a previous step of the infinite procedure and saved .",
    "indeed , during the initial infinite - system algorithm one should save the matrices @xmath83 , the block hamiltonians @xmath84 and the interaction operators @xmath85 for @xmath86 .",
    "the finite - system procedure goes on increasing the size of the left block until the length @xmath87 is reached . at this stage a right block @xmath36 with one site is constructed from scratch and the left block @xmath88 is obtained through the renormalization procedure .",
    "then , the role of the left and right block are switched and the free sites start to sweep from right to left .",
    "notice that at each step the renormalized block @xmath89 has to be stored in memory . during these sweeps",
    "the length of the chain does not change , thus at each step the wavefunction of the previous one can be used as a good guess for the diagonalization procedure ( see subsec .  [",
    "subsec : guess ] for details ) . at each sweep",
    "the approximation of the ground state improves .",
    "usually two or three sweeps are sufficient to reach convergence in the energy output .    up to now",
    "we concentrated on a single quantum state , namely the ground state .",
    "it is also possible to find an approximation to a few number of states ( typically less than @xmath90 ) : for example , the ground state and some low - excited state.@xmath77 these states are called _",
    "target states_. at each dmrg step , after the diagonalization , for each target state @xmath91 one has to calculate the corresponding reduced density matrix @xmath92 , by tracing the right enlarged block .",
    "then a convex sum of these matrices with equal weights@xmath93 is performed : @xmath94 finally @xmath95 has to be diagonalized in order to find the eigenbasis and the transformation matrices @xmath96 . in this way",
    "the dmrg algorithm is capable of efficiently representing not only the hilbert space `` around '' the ground state , but also the surroundings of the other target states .",
    "it is worth noting that targeting many states reduces the efficiency of the algorithm because a larger @xmath20 has to be used for obtaining the same accuracy .",
    "an alternative way could be to run as many iterations of dmrg with a single target state as many states are required .      the dmrg algorithm , as it has been depicted above ,",
    "describes a system with open boundary conditions .",
    "however , from a physical point of view , periodic boundary conditions are normally highly preferable to the open ones , as surface effects are eliminated and finite - size extrapolation gives better results for smaller system sizes . in the presented form",
    ", the dmrg algorithm gives results much less precise in the case of periodic boundary conditions than for open boundary conditions.@xmath97 nonetheless , periodic boundary conditions can be implemented by using the super - block configuration @xmath98 .",
    "this configuration is preferred over @xmath99 because the two blocks are not contiguous , thus enhancing , for typical situations , the sparseness of the matrices one has to diagonalize and therefore maintaining the same computational speed of the algorithm for open boundary conditions.@xmath100 simulations with the standard infinite - system super - block configuration have also been performed in order to include twisted boundary conditions , thus allowing the possibility to study spin stiffness or phase sensitivity.@xmath101",
    "besides the energy , dmrg is also capable to extract other characteristic features of the target states , namely to measure the expectation values of a generic quantum observable @xmath102 .",
    "properties of the @xmath78-site system can be obtained from the wave functions @xmath103 of the super - block at any point of the algorithm , although the symmetric configuration ( with free sites at the center of the chain ) usually gives the most accurate results .",
    "the procedure is to use the wave function @xmath104 resulting from the diagonalization of the super - block ( see the scheme in sec.[ssec : infinitedmrg ] , step 4 ) , in order to evaluate expectation values .",
    "we first concentrate on local observables @xmath105 , living on one single site @xmath34 . if one is performing the finite - system dmrg algorithm , it is possible to measure the expectation value of @xmath105 at the particular step inside a sweep in which @xmath34 is one of the two free sites .",
    "the measure is then a simple average : @xmath106 where @xmath34 is the first free site . in the special cases in which the observables refer to the extreme sites ( @xmath107 or @xmath108 )",
    ", the measurement is performed when the shortest block is @xmath36 , following the same procedure .",
    "it is also possible to measure an observable expectation value while performing the infinite - system algorithm . in this case",
    "there are two possibilities : either @xmath34 is one of the two central free sites or not . in the former case",
    "the measurement is performed as before , while in the latter one should express @xmath102 in the truncated dmrg basis . at each dmrg iteration",
    "the operator @xmath105 must be updated in the new basis using the @xmath96 matrix , as in eq .  :",
    "the measurement is then computed as : @xmath110 if site @xmath34 belongs to the left block and analogously if @xmath34 belongs to the right block .    for non local observables , like a correlation function @xmath111 ,",
    "the evaluation of expectation values depends on whether @xmath34 and @xmath112 are on the same block or not .",
    "the most convenient way in order to perform such type of measurements is to use the finite - system algorithm .",
    "let us first consider the case of nearest neighbor observables @xmath113 and @xmath114 .",
    "we can measure the expectation value @xmath115 when @xmath34 and @xmath116 are the two free sites . in this case",
    "the dimensions of the matrices @xmath117 and @xmath118 are simply @xmath119 and we do not have to store these operators in block representation .",
    "the explicit calculation of this observable is then simply : @xmath120 in general , measures like @xmath121 ( where @xmath34 and @xmath112 are not nearest neighbor sites ) can also be evaluated .",
    "this task can be accomplished by firstly storing the block representation of @xmath113 and @xmath122 , and then by performing the measure when @xmath34 belongs to a block and @xmath112 is a free site or vice - versa .",
    "analogously , it is possible to evaluate measures in the case when @xmath34 belongs to the left block , while @xmath112 to the right one .",
    "what should be avoided is the measure of @xmath123 when @xmath34 and @xmath112 belong to the _ same _ block .",
    "indeed , in this case the block representation of @xmath124 evaluated through those of @xmath113 and @xmath122 separately is not correct , due to the truncation .",
    "instead , such type of operators have to be built up as a compound object : in order to measure them , one has also to keep track of the block representation of the product @xmath124 throughout all the calculation , consequently slowing down the algorithm.@xmath125    the standard dmrg algorithm works better with open boundary conditions ( see subsec .",
    "[ ssec : boundary ] ) ; this necessarily introduces boundary effects in the measure of observables .",
    "for example , in the case of spin @xmath126 chains , open boundaries cause a strong alternation in the local bond strength @xmath127 at the borders , which slowly decays when shifting to the center.@xmath100 in order to obtain a good description of the bulk system by using open boundary conditions , one generally has to simulate a larger system and then discard measurements on the outer sites ; the number of outer sites over which measurement outcomes strongly fluctuate depends on the simulated physical system .",
    "finally , we stress that usually the convergence of measurements is slower than that of energy , since more finite - system dmrg sweeps are required in order to have reliable measurement outcomes ( typically between five and ten ) . as an example , we quote the case of the one - dimensional spin 1 bose hubbard model,@xmath128 in which energies typically converge after 2 or 3 sweeps , while the measure of the dimerization order parameter requires at least five sweeps to converge ( the convergence gets even slower when the system approaches criticality ) .",
    "in this section we describe an extension of the static dmrg , which incorporates real time evolution into the algorithm .",
    "various different time - dependent simulation methods have been recently proposed,@xmath129 but here we restrict our attention to the algorithm introduced by white and feiguin.@xmath130    the aim of the time - dependent dmrg algorithm ( t - dmrg ) is to simulate the evolution of the ground state of a nearest - neighbor one dimensional system described by a hamiltonian @xmath131 , following the dynamics of a different hamiltonian @xmath132 . in few words ,",
    "the algorithm starts with a finite - system dmrg , in order to find an accurate approximation of the ground state @xmath50 of @xmath131 .",
    "then the time evolution of @xmath50 is implemented , by using a suzuki - trotter decomposition@xmath133 for the time evolution operator @xmath134 .",
    "the dmrg algorithm gives an approximation to the hilbert subspace that better describes the state of the system .",
    "however , during the evolution the wave function changes and explores different parts of the hilbert space .",
    "thus , the truncated basis chosen to represent the initial state will be eventually no more accurate .",
    "this problem is solved by updating the truncated bases during the evolution .",
    "the first effort , due to cazalilla and marston , consists in enlarging the effective hilbert space , by increasing @xmath20 , during the evolution.@xmath135 however , this method is not very efficient because if the state of the system travels sufficiently far from the initial subspace , its representation becomes not accurate , or @xmath20 grows too much to be handled .",
    "another solution has been proposed in ref .",
    "@xmath136 : the block basis should be updated at each temporal step , by adapting it to the instantaneous state .",
    "this can be done by repeating the dmrg renormalization procedure using the instantaneous state as the target state for the reduced density matrix .",
    "in order to approximately evaluate the evolution operator @xmath134 we use a suzuki - trotter decomposition.@xmath133 the first order expansion in time is given by the formula : @xmath137 where @xmath138 gives the discretization of time @xmath139 in small intervals @xmath140 , and @xmath141 is the interaction hamiltonian ( plus the local terms ) between site @xmath19 and @xmath142 .",
    "further decompositions at higher orders can be obtained by observing that the hamiltonian can be divided in two addends : the first , @xmath143 , containing only even bonds , and the second , @xmath144 , containing only odd bonds . since the terms in @xmath145 and @xmath146 commute ,",
    "an even - odd expansion can be performed : @xmath147 this coincides with a second order trotter expansion , in which the error is proportional to @xmath148 .",
    "of course , one can enhance the precision of the algorithm by using a fourth order expansion with error @xmath149:@xmath150 @xmath151 where all @xmath152 , except @xmath153 , corresponding to evolution backward in time .",
    "nonetheless , the most serious error in a t - dmrg program remains the truncation error .",
    "a nearly perfect time evolution with a negligible trotter error is completely worthless if the wave function is affected by a relevant truncation error .",
    "it is worth to mention that t - dmrg precision becomes poorer and poorer as time grows larger and larger , due to the accumulated truncation error at each dmrg step .",
    "this depends on @xmath78 , on the number of trotter steps and , of course , on @xmath20 . at a certain instant of time ,",
    "called the  _ runaway time _ , the t - dmrg precision decreases by several order of magnitude .",
    "the runaway time increases with @xmath20 , but decreases with the number of trotter steps and with @xmath78 . for a more detailed discussion on the t - dmrg errors and on the runaway time , see gobert _ et al_.@xmath154    the initial wave function @xmath50 can be chosen from a great variety of states . as an example , for a spin @xmath155 chain , a factorized state can be prepared by means of space dependent magnetic fields . in general",
    ", it is also possible to start with an initial state built up by transforming the ground state as @xmath156 , where @xmath157 are local operators .",
    "the state @xmath158 can be obtained by simply performing a preliminary sweep , just after the finite - system procedure , in which the operators @xmath157 are subsequently applied to the transforming wave function , when @xmath34 is a free site.@xmath130    in summary , the t - dmrg algorithm is composed by the following steps :    1 .",
    "run the finite - system algorithm , in order to obtain the ground state @xmath50 of @xmath131 .",
    "2 .   if applicable , perform an initial transformation in order to set up the initial state @xmath158 .",
    "3 .   keep on the finite - system procedure by performing sweeps in which at each step the operator @xmath159 is applied to the system state ( @xmath19 and @xmath142 are the two free sites for the current step ) .",
    "4 .   perform the renormalization , following the finite - system algorithm , and store the matrices @xmath96 for the following steps .",
    "5 .   at each step",
    "change the state representation to the new dmrg basis using white s state prediction transformation@xmath160 ( see below ) .",
    "repeat points 3 to 5 , until a complete @xmath140 time evolution has been computed .",
    "white s state prediction transformation@xmath160 has been firstly developed in the framework of the finite - system dmrg to provide a good guess for the davidson or lanczos diagonalization , thus enhancing the performance of the algorithm ( see subsec .",
    "[ subsec : guess ] for details ) . here",
    "we briefly recall how it works , and adapt it to the time - dependent part of the dmrg algorithm . at any dmrg step , one has the left block @xmath161 and right block @xmath162 description . to transform a quantum state @xmath104 of the system in the new basis for the next step ( corresponding to the blocks @xmath163 and @xmath164 ) one uses the matrices @xmath96 : @xmath165 and @xmath166 .",
    "the first matrix transforms a block of length @xmath167 in a block of length @xmath19 and it has been computed in the current renormalization .",
    "the second one transforms a block of length @xmath168 in a block of length @xmath169 ; this matrix is recovered from memory , since it has been computed at a previous step .",
    "the transformed wave function then reads : @xmath170 assuming this operation is already implemented , the t - dmrg algorithm introduces only a slight modification : at step @xmath19 ( i.e. when @xmath19 and @xmath142 are the two free sites ) , instead of the diagonalizing the super - block with the davidson or lanczos , one applies @xmath171 to the transformed wave function .    ; higher order expansions require more complicated schemes , with an increasing number of steps . ]    to compute the system time evolution using the first order trotter expansion of eq .",
    ", one should perform one half sweep for each time interval @xmath140 : at the @xmath112-th step one has to apply @xmath172 , forming the usual left - to - right sweep .",
    "when arriving at the end of the chain , the system has been evolved of a @xmath140 time ; one then goes on with the next time iteration , applying the corresponding evolution operators in a right - to - left sweep .",
    "attention must be paid for the border links : at the first step both @xmath173 and @xmath174 have to be applied ; an analogous situation happens at the last step .",
    "the procedure for one complete @xmath140 time evolution is depicted in fig .",
    "[ fig : trotter - block ] . notice that , since at each step the operator @xmath159 is computed on the two current free sites @xmath19 and @xmath142 ( or when the block is composed of just one site ) , its representation is given in terms of a @xmath175 matrix , and most remarkably it is exact . more generally , if the border block dimension is such that it can be treated exactly , it can be convenient to perform its evolution as a whole and then switch the sweep direction . as stated before , to increase the simulation precision",
    ", one can expand the time evolution operator to the second order trotter expansion , as in eq .  .",
    "the implementation of this expansion requires @xmath176 sweeps for each time interval @xmath140 : in the first @xmath177 is applied , in the second @xmath178 , finally a third half sweep is needed to apply @xmath177 again . in order to acquire",
    "further precision one may go to the fourth order ( see eq .  ) . in this case @xmath179",
    "are needed , thus the computational time is respectively five times or fifteen times longer than the one needed by using eq .   or eq .  .",
    "finally , we want to remark again that this algorithm for the time evolution is a small modification of the finite - system procedure : the main difference is the computation of a factor of the trotter expansion instead of performing the diagonalization procedure at each step .",
    "this means that a typical t - dmrg sweep is much less time consuming that a finite - system one .",
    "notice also that the measurements are performed in the same way as in the finite - system algorithm .    to conclude this section",
    ", we provide a simple and intuitive example which explains how the time - dependent algorithm works .",
    "we consider the time evolution of the on - site magnetization of an excited state for a spin-1 heisenberg chain.@xmath130 in order to study the dynamics of this excitation , first we run the finite - system dmrg algorithm , thus obtaining the ground state @xmath180 of a @xmath19-sites chain .",
    "we then perform a preliminary sweep to apply @xmath181 on @xmath180 for a single site @xmath112 located at the center of the chain , namely we choose @xmath182 . in this way we set up the initial state @xmath183 , that is a localized wave packet consisting of all wave vectors .",
    "we then perform the t - dmrg algorithm with @xmath132 being the heisenberg hamiltonian , and instantaneously measure the local magnetization @xmath184 for each site @xmath112 : @xmath185 .",
    "the initial wave packet @xmath183 spreads out as time progresses ; different components move with different speeds , given by the corresponding group velocity ( see fig .",
    "[ fig : magevol ] ) .     of a 200 sites",
    "spin-1 heisenberg chain , starting from the excited state obtained by applying @xmath186 to the ground state of the chain .",
    "here we used @xmath187 as a trotter slicing time , and a truncated hilbert space of dimension @xmath188 . ]",
    "in this section we report some numerical examples on the convergence of the dmrg outputs with respect to the user fixed parameters @xmath20 , and @xmath189 .",
    "let us first focus on the static dmrg algorithm .",
    "the main source of error is due to the step - by - step truncation of the hilbert space dimension of the system block from @xmath190 to @xmath20 .",
    "the parameter @xmath20 must be set up very carefully , since it represents the maximum number of states used to describe the system block .",
    "it is clear that , by increasing @xmath20 , the output becomes closer and closer to the exact solution , which is eventually reached in the limit of @xmath191 ( in that case the algorithm would no longer perform truncation , and the only source of error would be due to inevitable numerical roundoffs ) . as an example of the output convergence with @xmath20 , in fig .",
    "[ fig : conv - static ] we plotted the behavior of the ground state energy in the one - dimensional spin 1 bose - hubbard model as a function of @xmath20 ( see ref .",
    "@xmath192 for a detailed description of the physical system ) .",
    "the convergence is exponential with @xmath20 , as can be seen in the figure . in the inset",
    "the cpu - time dependence with @xmath20 is shown and the dashed line shows a power law fit of data , @xmath193 with @xmath194 .     as a function of @xmath20 .",
    "a 1d chain of @xmath195 sites has been simulated with a @xmath196-sweep finite - system algorithm .",
    "the dashed line is an exponential fit : @xmath197 with @xmath198 , @xmath199 , @xmath200 .",
    "inset : cpu - time dependence with @xmath20 ; dashed line shows a power law fit @xmath201 with @xmath194 . numerical simulation presented here and in the following figures have been performed on a @xmath202ghz powerpc 970 processor with @xmath203 gb ram memory.@xmath204",
    "we now present an example of convergence of the t - dmrg with @xmath20 and @xmath189 .",
    "we consider the dynamical evolution of the block entanglement entropy in a linear @xmath205 chain ( see ref .",
    "@xmath206 for more details ) .",
    "the state of the system at time @xmath207 is the anti - ferromagnetic state .",
    "the initial state evolves with the hamiltonian of the @xmath208 model from an initial product state to an entangled one .",
    "this entanglement can be measured by the von neumann entropy of the reduced density matrix of the block @xmath209 : @xmath210 in the example we calculate @xmath211 for a block of size @xmath212 in a chain of length @xmath213 .",
    "the time evolution has been calculated form @xmath207 to @xmath214 with a fixed trotter time step @xmath215 that ensures that the trotter error is negligible with respect to the truncation error .     for @xmath216 15 ( crosses ) , 30 ( stars ) , 50 ( triangles ) , 75 ( diamonds ) , 100 ( squares ) , 150 ( circles ) .",
    "the t - dmrg data are compared with the exact result ( solid line ) .",
    "inset : cpu - time dependence with @xmath20 ; dashed line shows a power law fit @xmath201 and @xmath217 . ]    since the @xmath208 model can be solved analytically , we are able to compare the exact results with the t - dmrg data . in fig .  [",
    "fig : conv - time1 ] we show @xmath211 as a function of time for various values of @xmath20 , from @xmath218 to @xmath219 , and compared with the exact data . in the inset we present the cpu - time as a function of @xmath20 , which behaves as a power - law @xmath220 with @xmath217 , confirming the estimate given in the inset of fig .",
    "[ fig : conv - static ] .",
    "the deviation @xmath221 as a function of @xmath20 and of time is shown in fig .  [",
    "fig : conv - time2 ] .",
    "the typical fast convergence of the dmrg result with @xmath20 is recovered only when @xmath20 is greater than a critical value @xmath222 ( two distinct regimes are clear in fig .",
    "[ fig : conv - time2 ] ) .",
    "this is due to the amount of entanglement present in the system : an estimate of the number of states needed for an accurate description is given by @xmath223 .",
    "thus , it is always convenient to keep track of entropy to have an initial guess for the number of states needed to describe the system.@xmath154 on the other hand , if @xmath20 is increased too much , the trotter error will dominate and smaller @xmath140 is needed to improve accuracy .     at time",
    "@xmath214 as a function of @xmath20 .",
    "inset : @xmath224 as a function of time for various values of @xmath20 : 15 ( crosses ) , 30 ( stars ) , 50 ( triangles ) , 75 ( diamonds ) , 100 ( squares ) , 150 ( circles ) . ]",
    "in this section we explain some technicalities regarding the implementation of dmrg and t - dmrg code . they are not essential in order to understand the algorithm , but they can be useful to anyone who wants to write a code from scratch , or to modify the existing ones . some of these parts can be differently implemented , in part or completely skipped , depending on the computational complexity of the physical system under investigation .",
    "the ground state of the hamiltonian is usually found by diagonalizing a matrix of dimensions @xmath225 .",
    "typically the dmrg algorithm is used when one is only interested in the ground state properties ( at most in few low - energy eigenstates ) .",
    "the diagonalization time can thus be greatly optimized by using lanczos or davidson methods : these are capable to give a small number ( @xmath226 ) of eigenstates close to a previously chosen target energy in much less time than exact diagonalization routines .",
    "moreover they are optimized for large sparse matrices , ( that is the case of typical super - block hamiltonians ) and they do not require as input the full matrix .",
    "what is needed is just the effect of it on a generic state @xmath104 , which lives in a @xmath227 dimensional hilbert space .",
    "the hamiltonian in eq .   can be written as : @xmath228 where @xmath229 and @xmath230 act respectively on the left and on the right enlarged block .",
    "thus , only this matrix multiplication has to be implemented : @xmath231 in this way it is possible to save a great amount of memory and number of operations , since the dimensions of @xmath229 and @xmath230 are @xmath232 , and not @xmath225 . as an example",
    ", a reasonable @xmath20 value for simulating the evolution of a @xmath233 spin @xmath155 chain ( @xmath234 ) is @xmath235 .",
    "this means that , in order to store all the @xmath236 complex numbers of @xmath44 in double precision , @xmath237 gbytes of ram is needed .",
    "instead , each of the two matrices @xmath238 and @xmath239 requires less than @xmath240 kbytes of ram .      even by using the tools described in the previous paragraph",
    ", the most time consuming part of a dmrg step remains the diagonalization procedure .",
    "the step - to - step wave function transformation required for the t - dmrg algorithm , which has been described in the previous section , can also be used in the finite - system dmrg , in order to speed up the super - block diagonalization.@xmath160 indeed the davidson or lanczos diagonalization methods are iterative algorithms which start from a generic wave function , and then recursively modify it , until the eigenstate closest to the target eigenvalue is reached ( up to some tolerance value , fixed from the user ) .",
    "if a very good initial guess is available for the diagonalization procedure , the number of steps required to converge to the solution can be drastically reduced and the time needed for the diagonalization can be reduced up to an order of magnitude .    in the finite - system algorithm",
    "the system is changing much less than in the infinite algorithm , and an excellent initial guess is found to be the final wave function from the previous dmrg step , after it has been written in the new basis for the current step .",
    "white s prediction is used in order to change the basis of the previous ground state with the correct operators @xmath96 , as in eq .  .",
    "it is also possible to speed up the diagonalization in the infinite - system algorithm , but here the search for a state prediction is slightly more complicated ( see , e.g. , refs .",
    "@xmath241 ) .      if the system has a global reflection symmetry , it is possible to take the environment block equal to the system block , in the infinite - system procedure .",
    "namely , the right enlarged block is simply the reflection of the left one . to avoid the complication of the reflection we can consider an alternative labelling of the sites , as shown in fig .  [ fig : reflection ] . in this case",
    "left and right enlarged blocks are represented by exactly the same matrix .",
    "if other symmetries hold , for example conservation of angular momentum or particle number , it is possible to take advantage of them , such to considerably reduce the cpu - time for diagonalization .",
    "the idea is to rewrite the total hamiltonian in a block diagonal form , and then separately diagonalize each of them .",
    "if one is interested in the ground state , he simply has to compare the ground state energies inside each block , in order to find the eigenstate corresponding to the lowest energy level .",
    "one may also be interested only in the ground state with given quantum numbers ( for example in the bose - hubbard model one can fix the number of particles ) ; in this case one has to diagonalize the block hamiltonian corresponding to the wanted symmetry values . in order to perform this task",
    ", it is sufficient to divide the operators for the left and right block into different symmetry sectors",
    ". then the multiplication will take into account only the sectors combination which preserves the total quantum number . when finding the reduced density matrix @xmath95 , its eigenstates have also to be symmetry - labelled .",
    "attention must be paid when truncating to the reduced basis : it is of crucial importance to retain whole blocks of eigenstates with the same weight , inside a region with given quantum numbers .",
    "this helps in avoiding unwanted artificial symmetry breaking , apart from numerical roundoff errors .",
    "operators typically involved in dmrg - like algorithms ( such as block hamiltonians , updating matrices , observables ) are usually represented by sparse matrices .",
    "a well written programming code takes advantage of this fact , thus saving large amounts of cpu - time and memory .",
    "namely , there are standard subroutines which list the position ( row and column ) and the value of each non null element for a given sparse matrix .",
    "both the static and the time dependent dmrg require to store a great number of operators : the block hamiltonian , the updating matrices , and if necessary the observables for each possible block length .",
    "one useful way to handle all these operators is to group each of them in a register , in which one index represents the length of the block .",
    "operatively , we store all these operators in the fast - access ram memory .",
    "however , for very large problems one can require more than the available ram , therefore it is necessary to store these data in the hard disk .",
    "the read / write operations from hard disk have to be carefully implemented , e.g. , by performing them asyncronously , since a non optimal implementation may dramatically slow down the program performance .",
    "figures  [ fig : schema]-[fig : schemat ] show a flow - chart schematic representation of dmrg and t - dmrg code .",
    "we thank j.j .",
    "garcia - ripoll and c. kollath for some technical comments while developing the dmrg code and for feedback .",
    "we also thank g.l.g .",
    "sleijpen@xmath73 for providing us with the fortran routine to find the ground state .",
    "this work has been performed within the `` quantum information '' research program of centro di ricerca matematica `` ennio de giorgi '' of scuola normale superiore and it has been partially supported by ibm 2005 scholars grants ",
    "linux on power and by nfs through a grant from the itamp at harvard university and the smithsonian astrophysical observatory .",
    "sm acknowledges support from the alexander von humboldt foundation .",
    "gdc acknowledges support from the european commission through the fp6-fet integrated project scala , ct-015714 .    ) .",
    "notations are the same as those used in the text . ]",
    "refers to the discretized time and @xmath138 . ]",
    "* 1 . * r. feynman , int .",
    "j. theor . phys .",
    "* 21 * , 467 ( 1982 ) .",
    "* 2 . * see , e.g. , _ a guide to monte carlo simulations in statistical physics _ , d.p . landau and k. binder , cambridge university press ( 2000 ) .",
    "a.w . sandvik and j. kurkijrvi , phys .",
    "b * 43 * , 5950 ( 1991 ) .",
    "* 3 . * h.a .",
    "van der vorst , _ computational methods for large eigenvalue problems _ , in p.g .",
    "ciarlet and j.l .",
    "lions ( eds ) , handbook of numerical analysis , volume viii , north - holland ( elsevier ) , amsterdam ( 2002 ) ."
  ],
  "abstract_text": [
    "<S> we describe the density matrix renormalization group algorithms for time dependent and time independent hamiltonians . </S>",
    "<S> this paper is a brief but comprehensive introduction to the subject for anyone willing to enter in the field or write the program source code from scratch . </S>",
    "<S> an open source version of the code can be found at : ` http://qti.sns.it/dmrg/phome.html ` .    </S>",
    "<S> the advent of information era has been opening the possibility to perform numerical simulations of quantum many - body systems , thus revealing completely new perspectives in the field of condensed matter theory . indeed , </S>",
    "<S> together with the analytic approaches , numerical techniques provide a lot of information and details otherwise inaccessible . </S>",
    "<S> however , the simulation of a quantum mechanical system is generally a very hard task ; one of the main reasons is related to the number of parameters required to represent a quantum state . </S>",
    "<S> this value usually grows exponentially with the number of constituents of the system,@xmath0 due to the corresponding exponential growth of the hilbert space . </S>",
    "<S> this exponential scaling drastically reduces the possibility of a direct simulation of many - body quantum systems . in order to overcome this limitation , </S>",
    "<S> many numerical tools have been developed , such as monte carlo techniques@xmath1 or efficient hamiltonian diagonalization methods , like lanczos and davidson procedures.@xmath2    the density matrix renormalization group ( dmrg ) method has been introduced by white in 1992.@xmath3 it was originally devised as a numerical algorithm useful for simulating ground state properties of one - dimensional quantum lattices , such as the heisenberg model or bose - hubbard models ; then it has also been adapted in order to simulate small two - dimensional systems.@xmath4 dmrg traces its roots to wilson s numerical renormalization group ( rg),@xmath5 which represents the simplest way to perform a real - space renormalization of hamiltonians . starting from a numerical representation of some microscopic hamiltonian in a particular basis , </S>",
    "<S> degrees of freedom are iteratively added , typically by increasing the size of the finite system . then less important ones are integrated out and accounted for by modifying the original hamiltonian . </S>",
    "<S> the new hamiltonian will thus exhibit modified as well as new couplings ; renormalization group approximations consist in physically motivated truncations of the set of couplings newly generated by the elimination of degrees of freedom . in this way one obtains a simplified effective hamiltonian that should catch the essential physics of the system under study . </S>",
    "<S> we point out that the dmrg can also be seen as a variational method under the matrix - product - form ansatz for trial wave functions : the ground state and elementary excited states in the thermodynamic limit can be simply expressed via an ansatz form which can be explored variationally , without referencing to the renormalization construction.@xmath6 very recently , influence from the quantum information community has led to a dmrg - like algorithm which is able to simulate the temporal evolution of one - dimensional quantum systems.@xmath7    quantum information theory has also allowed to clarify the situations in which this method can be applied efficiently . </S>",
    "<S> indeed , it has been shown@xmath8 that the efficiency in simulating a quantum many - body system is strictly connected to its entanglement behavior . more precisely , if the entanglement of a subsystem with respect to the whole is bounded ( or grows logarithmically with its size ) an efficient simulation with dmrg is possible . up to now </S>",
    "<S> , it is known that ground states of one dimensional lattices ( whether critical or not ) satisfy this requirement , whereas in higher dimensionality it is not fulfilled as the entanglement is subject to an area law.@xmath9 on the other hand , the simulation of the time evolution of critical systems may not be efficient even in one dimensional systems as the block entanglement can grow linearly with time and block size.@xmath10 in a different context , it has also been shown that in a quantum computer performing an efficient quantum algorithm ( shor s algorithm and the simulation of a quantum chaotic system ) the entanglement between qubits grows faster than logarithmically.@xmath11 thus , t - dmrg can not efficiently simulate every quantum one dimensional system ; nonetheless , its range of applicability is very broad and embraces very different subjects . </S>",
    "<S> indeed , dmrg can be used to study condensed matter problems and to simulate many quantum information applications in 1d quantum systems as , for example , simulations of quantum information transfer,@xmath12 quantum computations,@xmath13 the effects of decoherence on a qubit@xmath14 and the entanglement properties of one dimensional critical systems.@xmath15    the aim of this review is to introduce the reader to the last development of dmrg codes , briefly but in a comprehensive way . for the sake of briefness </S>",
    "<S> we do not review the vast literature of papers based on dmrg techniques and we refer the interested readers to refs .  </S>",
    "<S> @xmath16 and references therein . here </S>",
    "<S> we provide both the main ideas and the technicalities needed to reach a deep understanding of dmrg and allowing an interested reader to develop its own dmrg code or modify an existing one . </S>",
    "<S> we also provide some easy examples that can be used as testbeds for new dmrg codes .    in sec .  </S>",
    "<S> [ sec : staticdmrg ] we describe the basics of time independent dmrg algorithm , in sec .  </S>",
    "<S> [ sec : measdmrg ] we introduce the measurement procedure ( a more detailed exposition is given in ref .  @xmath17 and references therein ) . in sec .  </S>",
    "<S> [ sec : timedmrg ] the time dependent dmrg algorithm is explained . finally , in sec .  </S>",
    "<S> [ sec : examples ] we provide some numerical examples , and in sec .  </S>",
    "<S> [ sec : techdmrg ] we discuss some technical issues regarding the implementation of a dmrg program code . in the last section the reader can find the schemes of the dmrg algorithms , both for the static and time dependent case . </S>",
    "<S> further material can be found on our website ( ` http://qti.sns.it/dmrg/phome.html ` ) , where the t - dmrg code will be released with an open license . </S>"
  ]
}
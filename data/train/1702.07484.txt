{
  "article_text": [
    "a _ featured transition system _",
    "@xcite is a transition system in which the transitions are annotated with _ feature expressions _",
    ": boolean expressions involving a finite number of given features . depending on its feature expression ,",
    "each individual transition can be enabled when some features are present , and disabled for other sets of features .",
    "for any set of features , a given featured transition system _ projects _ to a transition system which contains precisely the transitions which are enabled for that set of features .",
    "standard problems such as reachability or safety can be posed for featured transition systems , where the interest now is to check these properties _ for all sets of features at once_. hence , for example for reachability , given a featured transition system and a set of accepting states , one wants to construct a feature expression @xmath0 such that an accepting state is reachable iff the set of features satisfies @xmath0 .    for _ quantitative _ properties of transition systems , the model of _",
    "( semiring- ) weighted automata _ has proven useful  @xcite .",
    "this provides a uniform framework to treat problems such as minimum reachability , maximum flow , energy problems  @xcite , and others .",
    "here we extend techniques from weighted automata to _ featured weighted automata _ , _",
    "i.e. , _  weighted automata in which the transitions are annotated with feature expressions .",
    "this extension makes it possible to check quantitative properties for all sets of features at once .",
    "to be precise , a featured transition system induces a ( projection ) function from sets of features to transition systems , mapping each set of features to the behavior under these features .",
    "similarly , we will define projections of featured weighted automata , mapping sets of features to weighted automata .",
    "_ values _ of weighted automata are an abstract encoding of their behavior ; we will see how to compute values of featured weighted automata as functions from feature expressions to behaviors .",
    "we also develop an application of our techniques to featured _",
    "energy problems_. energy problems are important in areas such as embedded systems or autonomous systems .",
    "they are concerned with the question whether a given system admits infinite schedules during which ( 1 ) certain tasks can be repeatedly accomplished and ( 2 ) the system never runs out of energy ( or other specified resources ) . starting with  @xcite , formal modeling and analysis of such problems",
    "has attracted some attention  @xcite . featured transition systems have applications in _ software product lines _",
    ", where they are used as abstract representations of the behaviors of variability models  @xcite .",
    "this representation allows one to analyze all behaviors of a software product line at once , as opposed to analyzing each product on its own .",
    "similarly , featured weighted automata can be used as abstract representations of quantitative behaviors of software product lines , and the present work enables analysis of quantitative behaviors of all products in a software product line at once .",
    "[ [ contributions - and - structure - of - the - paper . ] ] contributions and structure of the paper .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we start in sect .",
    "[ se : minreach ] by revisiting minimum reachability in featured transition systems with transitions weighted by real numbers .",
    "this has to some extent already been done in  @xcite , but we reformulate it in order to prepare for the generalization in the following sections .    in sect .",
    "[ se : fwa ] , we introduce featured weighted automata and show some first examples . instead of semirings , we will work with ( featured ) automata weighted in _",
    "@xmath1-continuous kleene algebras _ ; this is for convenience of presentation only , and all our work ( except for sect .",
    "[ se : energy ] ) can be extended to a more general ( for example non - idempotent ) setting . in sect .",
    "[ se : fba - fwa ] , we then show how methods and techniques from weighted automata can be transferred to featured weighted automata . in the last sect .",
    "[ se : energy ] , we extend our results to develop an application to featured energy problems .",
    "this is based on the recent result in  @xcite that energy problems can be stated as bchi problems in automata weighted in _",
    "@xmath1-continuous kleene @xmath2-algebras _ , which are certain types of semimodules over @xmath1-continuous kleene algebras ; hence we need to extend our results to such semimodules .",
    "the paper is followed by a separate appendix which contains some of the proofs of our results .",
    "a _ real - weighted automaton _ @xmath3 consists of a finite set @xmath4 of states , subsets @xmath5 of initial and accepting states , and a finite set @xmath6 of weighted transitions . here",
    "@xmath7 denotes the set of non - negative real numbers",
    ".    a _ finite path _ in such a real - weighted automaton @xmath8 is a finite alternating sequence @xmath9 of transitions @xmath10 .",
    "the _ weight _ of @xmath11 is the sum @xmath12 .",
    "a finite path @xmath11 as above is said to be _ accepting _ if @xmath13 and @xmath14 .",
    "the _ minimum reachability problem _ for real - weighted automata asks , given a real - weighted automaton @xmath8 as above , to compute the value @xmath15 that is , @xmath16 is the minimum weight of all finite paths from an initial to an accepting state in @xmath8 .",
    "this being a multi - source - multi - target shortest path problem , it can for example be solved using the floyd - warshall relaxation algorithm .",
    "let @xmath17 be a set of _ features _ and @xmath18 a set of _ products _ over @xmath17 .",
    "feature guard _ is a boolean expression over @xmath17 , and we denote the set of these by @xmath19 . we write @xmath20 if @xmath21 satisfies @xmath22 and @xmath23 .",
    "note that @xmath24 is a set of sets of features .    a _ real - weighted featured automaton _",
    "@xmath25 consists of a finite set @xmath4 of states , subsets @xmath5 of initial and accepting states , a finite set @xmath6 of weighted transitions , and a feature guard mapping @xmath26 .",
    "the _ projection _ of a real - weighted featured automaton @xmath27 @xmath25 to a product @xmath21 is the real - weighted automaton @xmath28 with @xmath29 .    for each product @xmath21 , we could solve the shortest path problem in @xmath30 by computing @xmath31 .",
    "instead , we develop an algorithm which computes all these values at the same time .",
    "its output will , thus , be a function @xmath32 , with the property that for every @xmath21 , @xmath33 .",
    "as a symbolic representation of functions @xmath34 , we use injective functions from _ guard partitions _ to @xmath7 . intuitively , a guard partition is a set of feature guards which partitions @xmath35 into classes such that within each class , @xmath36 has the same value for all products , and between different classes , @xmath36 has different values .",
    "a _ guard partition _ of @xmath35 is a set @xmath37 such that @xmath38 , @xmath39 for all @xmath40 , and @xmath41 for all @xmath42 with @xmath43 .",
    "the set of all guard partitions of @xmath35 is denoted @xmath44 .",
    "a guard partition is a logical analogue to a partition of the set of products @xmath35 : any guard partition induces a partition of @xmath35 , and any partition of @xmath35 can be obtained by a guard partition .",
    "in particular , for any guard partition @xmath45 and any product @xmath35 , there is precisely one @xmath40 for which @xmath46 .",
    "let @xmath47}=\\ { f : p\\to { { \\mathbbm{r } }",
    "_ { \\ge 0}}\\mid p\\in { \\textit{gp } } , \\forall \\gamma_1 , \\gamma_2\\in p : \\gamma_1\\ne \\gamma_2{\\rightarrow}f ( \\gamma_1)\\ne f ( \\gamma_2)\\}$ ] denote the set of injective functions from guard partitions to @xmath7 .",
    "we use _ injective _ functions @xmath48 as symbolic representations of functions @xmath34 , because they provide the most _ concise _ such representation . indeed , if a function @xmath49 is not injective , then there are feature guards @xmath42 for which @xmath50 , so we can obtain a more concise representation of @xmath36 by letting @xmath51 and @xmath52 be defined by @xmath53 for @xmath54 and @xmath55 .    * input : * real - weighted featured automaton @xmath56 with @xmath57 * output : * function @xmath58}$ ] * var * @xmath59}$ ] * var * @xmath45 , @xmath36 @xmath60 @xmath61 split(@xmath62 ) [ al : minreach.fw.start ] relax(@xmath63 ) [ al : minreach.fw.end ] @xmath64 ; @xmath65 [ al : minreach.findmin.start ] split(@xmath66 ) @xmath36",
    "[ al : minreach.relax.start ] [ al : minreach.relax.notempty ] split(@xmath67 ) [ al : minreach.relax.end ] [ al : minreach.split.start ] [ al : minreach.split.cond ] @xmath68",
    "[ al : minreach.split.nosplit.assign ] combine(@xmath69 )",
    "[ al : minreach.split.split ] @xmath70 @xmath71 @xmath72 @xmath73 combine(@xmath74 ) [ al : minreach.split.end ] @xmath75 [ al : minreach.combine.forall ] @xmath76 [ al : minreach.combine.join ] @xmath77 * break *    we show in fig .",
    "[ fi : alg - minreach ] an algorithm to compute a symbolic representation of @xmath78 .",
    "the algorithm performs , in lines  [ al : minreach.fw.start ] to  [ al : minreach.fw.end ] , a symbolic floyd - warshall relaxation to compute a matrix @xmath79 which as entries @xmath80 has functions in @xmath47}$ ] that for each product return the shortest path from state @xmath81 to state @xmath82 .",
    "the relaxation procedure relax(@xmath63 ) is performed by comparing @xmath80 to the sum @xmath83 and updating @xmath80 if the sum is smaller .",
    "the result of the comparison depends on the products for which the different paths are enabled , hence the comparison and update are done for each feature expression @xmath84 in the partition for @xmath80 and all feature expressions @xmath85 , @xmath86 in the partitions for @xmath87 and @xmath88 , respectively .",
    "the comparison has to be done only if these partitions overlap ( line  [ al : minreach.relax.notempty ] ) , and in case the sum is smaller , @xmath80 is updated in a call to a split - and - combine procedure .    using the procedure split , in lines  [ al : minreach.split.start ] to  [ al : minreach.split.end ] , @xmath80",
    "is updated at the @xmath89 part of its partition .",
    "if @xmath90 is not smaller than @xmath91 ( line  [ al : minreach.split.cond ] ) , then @xmath92 is set to its new value .",
    "afterwards , we need to call a combine procedure to see whether @xmath80 has the same value at any other part @xmath93 of its partition ( line",
    "[ al : minreach.combine.forall ] ) and , in the affirmative case , to update the partition of @xmath80 by joining the two parts ( line  [ al : minreach.combine.join]f ) .",
    "if the feature expression @xmath89 on which to update @xmath80 is a strict subset of @xmath84 ( line  [ al : minreach.split.split ] ) , then the @xmath84 part of the partition of @xmath80 needs to be split into two parts : @xmath89 , on which @xmath80 is to be updated , and @xmath94 , on which its value stays the same .",
    "again , we need to call the combine procedure afterwards to potentially combine feature expressions in the partition of @xmath80 .",
    "once relaxation has finished in line  [ al : minreach.findmin.start ] , we need to find @xmath95 . as this again depends on which features are present",
    ", we need to compute this minimum in a way similar to what we did in the relax procedure : for each feature expression in the partition @xmath45 of @xmath36 and each overlapping feature expression in the partition of @xmath80 , we compare the two values and use the split procedure to update @xmath36 if @xmath80 is smaller .    a variant of the algorithm in fig .",
    "[ fi : alg - minreach ] has been implemented in  @xcite , as part of an effort to compute minimum limit - average cost in real - weighted featured automata .",
    "several experiments in  @xcite show that our algorithm is significantly faster than an approach which separately solves the minimum reachability problem for each product .",
    "we proceed to introduce a generalization of the setting in the previous section . here",
    "@xmath7 is replaced by an abstract _",
    "@xmath1-continuous kleene algebra_. this allows us to develop an abstract setting for analysis of _ featured weighted automata _ , and to re - use our techniques developed in the previous section to solve quantitative problems in other concrete settings .",
    "recall that a _ semiring _  @xcite @xmath96 consists of a commutative monoid @xmath97 and a monoid @xmath98 such that the distributive and zero laws @xmath99 hold for all @xmath100 (",
    "here we have omitted the multiplication sign @xmath101 in some expressions , and we shall also do so in the future ) .",
    "it follows that the product distributes over all finite sums .    a ( finite ) _ weighted automaton _",
    "@xcite over a semiring @xmath102 ( or a _ @xmath102-weighted automaton _ for short ) is a tuple @xmath3 consisting of a finite set @xmath4 of states , a subset @xmath103 of initial states , a subset @xmath104 of accepting states , and a finite set @xmath105 of transitions",
    ".    a _ finite path _ in such a @xmath102-weighted automaton @xmath3 is a finite alternating sequence @xmath106 of transitions @xmath10 .",
    "the _ weight _ of  @xmath11 is the product @xmath107 .",
    "a finite path @xmath11 as above is said to be _ accepting _ if @xmath13 and @xmath14 .",
    "the _ reachability value _",
    "@xmath16 of @xmath8 is defined to be the sum of the weights of all its accepting finite paths : @xmath108 as the set of accepting finite paths generally will be infinite , one has to assume that such sums exist in @xmath102 for this definition to make sense .",
    "this is the subject of sect .",
    "[ se : scka ] below .",
    "the _ boolean semiring _ is @xmath109 , with disjunction as @xmath110 and conjunction as @xmath101 .",
    "a @xmath111-weighted automaton @xmath8 hence has its transitions annotated with @xmath112 or @xmath113 . for a finite path @xmath106 , we have @xmath114 iff all @xmath115 .",
    "hence @xmath116 iff there exists an accepting finite path in @xmath8 which involves only @xmath113-labeled transitions .",
    "that is , @xmath111-weighted automata are equivalent to ordinary ( unlabeled ) automata , where the equivalence consists in removing all @xmath112-labeled transitions .",
    "the _ tropical semiring _ is @xmath117 , where @xmath118 denotes the set of extended real numbers , with minimum as @xmath110 and addition as @xmath101 .",
    "the weight of a finite path is now the sum of its transition weights , and the reachability value of a @xmath119-weighted automaton is the minimum of all its accepting finite paths weights .",
    "hence @xmath119-weighted automata are precisely the real - weighted automata of sect .",
    "[ se : minreach ] , and to compute their reachability values is to solve the _ minimum reachability _ problem .    the _ fuzzy semiring _ is @xmath120 , with maximum as @xmath110 and minimum as @xmath101 . here",
    ", the weight of a finite path is the minimum of its transition weights , and the reachability value of an @xmath121-weighted automaton is the maximum of all its accepting finite paths weights .",
    "this value is hence the _ maximum flow _ in a weighted automaton : the maximum available capacity along any finite path from an initial to a accepting state .",
    "we now extend weighted automata with features , for modeling quantitative behavior of software product lines .",
    "let @xmath102 be a semiring and denote by @xmath122}=\\ { f : p\\to k\\mid p\\in { \\textit{gp } } , \\forall \\gamma_1 , \\gamma_2\\in p : \\gamma_1\\ne \\gamma_2{\\rightarrow}f ( \\gamma_1)\\ne f ( \\gamma_2)\\}$ ] the set of injective functions from guard partitions to @xmath102 .",
    "a _ featured weighted automaton _ over @xmath102 and @xmath35 is a tuple @xmath123 consisting of a finite set @xmath4 of states , subsets @xmath5 of initial and accepting states , and a finite set @xmath124}\\times s$ ] of transitions .",
    "similarly to what we did in sect .",
    "[ se : minreach ] , the transition labels in @xmath122}$ ] are to be seen as syntactic representations of functions from products to @xmath102 ; we will say more about this below .    for @xmath125 the boolean semiring , featured",
    "@xmath111-weighted automata are standard ( unlabeled ) featured automata : for any feature guard @xmath22 , @xmath126 is a guard partition of @xmath35 , moreover , for @xmath125 , any mapping in @xmath122}$ ] is equivalent to one from such a guard partition .",
    "hence transitions labeled with feature guards ( as in standard featured automata ) are the same as transitions labeled with functions from guard partitions to @xmath127 .    for @xmath128}$ ] and @xmath21 , let @xmath40 be the unique feature guard for which @xmath20 and define @xmath129 .",
    "this defines the _ semantic representation of @xmath36 _ as the function @xmath130 .",
    "let @xmath131 be a featured @xmath102-weighted automaton and @xmath21 .",
    "the _ projection _ of @xmath132 to @xmath133 is the @xmath102-weighted automaton @xmath28 , where @xmath134 .",
    "the behavior of a featured @xmath102-weighted automaton is hence given relative to products : given a featured @xmath102-weighted automaton @xmath132 and a product @xmath133 , @xmath31 , provided that it exists , will be the behavior of @xmath132 when restricted to the particular product @xmath133 .",
    "the purpose of this paper is to show how the values @xmath31 can be computed for all @xmath21 at once .",
    "we finish this section by introducing extra structure and properties into our semiring @xmath102 which will ensure that the infinite sums @xmath16 always exist .",
    "this is for convenience only , and all our work can be extended to a more general ( for example non - idempotent ) setting .",
    "recall that a semiring @xmath96 is _ idempotent _",
    "@xcite if @xmath135 for every @xmath136 .",
    "a _ @xmath1-continuous kleene algebra _",
    "@xcite is an idempotent semiring @xmath96 in which all infinite sums of the form @xmath137 , @xmath136 , exist , and such that @xmath138 for all @xmath100 .",
    "intuitively , automata weighted over a @xmath1-continuous kleene algebra allow for _ loop abstraction _ , in that the global effects of a loop ( right - hand side of  ) can be computed locally ( left - hand side of  ) . in any @xmath1-continuous kleene algebra @xmath102",
    "one can define a unary _ star _ operation @xmath139 by @xmath140 .",
    "for any semiring @xmath102 and @xmath141 , we can form the _ matrix semiring _ @xmath142 whose elements are @xmath143-by-@xmath143 matrices of elements of @xmath102 and whose sum and product are given as the usual matrix sum and product .",
    "it is known  @xcite that when @xmath102 is a @xmath1-continuous kleene algebra , then @xmath142 is also a @xmath1-continuous kleene algebra , with the @xmath1-operation defined by @xmath144 for all @xmath145 and @xmath146 . also , if @xmath147 and @xmath148 $ ] , where @xmath149 and @xmath150 are square matrices of dimension less than @xmath143 , then @xmath151    the _ matrix representation _  @xcite of a @xmath102-weighted automaton @xmath3 , with @xmath152 the number of states , is given by the triple @xmath153 , where @xmath154 is the _ initial vector _ , @xmath145 is the _ transition matrix _ , and @xmath155 .",
    "these are given as follows : order @xmath156 such that @xmath157 iff @xmath158 , _",
    "i.e. , _  such that the first @xmath159 states are accepting , and define @xmath160 and @xmath161 by @xmath162 iff @xmath163 and @xmath164 .",
    "it can be shown  @xcite that if @xmath8 is a weighted automaton over a @xmath1-continuous kleene algebra , then the reachability value of @xmath8 is defined and @xmath165 , where @xmath166 is the vector given by @xmath167 for @xmath158 and @xmath168 for @xmath169 .",
    "our example semirings @xmath111 , @xmath119 and @xmath121 share the property of being",
    "_ bounded_. in general terms , a semiring @xmath102 is said to be bounded  @xcite if @xmath170 for all @xmath136 .",
    "note that this implies idempotency : for all @xmath136 , @xmath171 . if @xmath102 is bounded , then @xmath172 for all @xmath136 , and @xmath102 is a @xmath1-continuous kleene algebra  @xcite .    in @xmath111 , @xmath173 ; in @xmath119 , @xmath174 ; and in @xmath121 , @xmath175 ; so these three semirings are indeed bounded .",
    "operationally , the fact that @xmath176 means that _ loops can be disregarded _ : for all @xmath100 , @xmath177 . in lieu of the examples in sect .",
    "[ se : examples ] , it is clear that this property holds for @xmath111- , @xmath119- and @xmath121-weighted automata : for reachability , loops are unimportant ; for minimum reachability , likewise ; and for maximum flow , taking a loop can only decrease the flow , hence would be disadvantageous .",
    "let @xmath102 be a @xmath1-continuous kleene algebra . in this section we take a closer look at the functions in @xmath122}$ ] and define semiring operations on them .",
    "we show that with these operations , @xmath122}$ ] itself is a @xmath1-continuous kleene algebra .",
    "this means that we can treat featured @xmath102-weighted automata as @xmath122}$]-weighted automata .",
    "we first need to define an operation on partitions which turns functions @xmath178 from a partition @xmath179 into _ injective _ functions , providing the most concise representation , by changing their domain . intuitively , this _ canonicalization _ of @xmath36 changes the partition @xmath45 into a coarser one by forming disjunctions of feature guards on which @xmath36 has the same value :    [ de : canon ] let @xmath179 and @xmath178 .",
    "introduce an equivalence relation @xmath180 by @xmath181 iff @xmath50 and let @xmath182 be the quotient .",
    "let @xmath183 , then @xmath184 .",
    "for every @xmath185 there is an equivalence class @xmath186 for which @xmath187 , and @xmath36 passes to these equivalence classes by definition , so we can define @xmath188 , the _ canonicalization _ of @xmath36 , by @xmath189 .    :",
    "@xmath122}$ ] * var * @xmath190 , @xmath191 @xmath192 pick and remove @xmath193 from @xmath45 @xmath75 @xmath194 @xmath195 @xmath196 @xmath197 @xmath188    we show an algorithm which implements canonicalization in fig .",
    "[ fi : alg - combine ] .",
    "the function @xmath102combine takes as input a function @xmath178 and builds its canonicalization @xmath188 by taking disjunctions of feature expressions in the partition @xmath45 .",
    "note the similarity of its inner loop to the combine procedure of fig .",
    "[ fi : alg - minreach ] : the procedure in fig .",
    "[ fi : alg - minreach ] only updates the partition of @xmath36 in one place , whereas @xmath102combine needs to check the whole partition .",
    "[ le : canon ] let @xmath179 , @xmath178 , and @xmath188 the canonicalization of @xmath36 .",
    "then @xmath190 is injective , hence @xmath198}$ ] .",
    "also , for any @xmath40 there is a unique element @xmath185 such that @xmath199 .",
    "[ de : gp - land ] let @xmath200 .",
    "the _ intersection _ of @xmath201 and @xmath202 is the partition @xmath203 given as @xmath204 .",
    "[ le : gp - land - unique ] let @xmath200 and @xmath205 .",
    "there are unique elements @xmath206 , @xmath207 such that @xmath208 .",
    "we can hence write the elements of @xmath209 as @xmath210 without ambiguity .",
    "we are ready to define operations @xmath110 , @xmath101 and @xmath1 on functions in @xmath122}$ ] .",
    "[ de : op_gpk ] let @xmath211}$ ] .",
    "define functions @xmath212 and @xmath213 by @xmath214 , @xmath215 , and @xmath216 .",
    "let @xmath217}$ ] be the canonicalizations of @xmath218 , @xmath219 and @xmath220 , respectively , then we define @xmath221 , @xmath222 , and @xmath223 .    :",
    "@xmath122}$ ] * var * @xmath224 , @xmath225 @xmath226 @xmath227 @xmath228 @xmath102combine(@xmath224 ) : @xmath122}$ ] * var * @xmath224 , @xmath225 @xmath226 @xmath227 @xmath229 @xmath102combine(@xmath224 ) : @xmath122}$ ] * var * @xmath224 @xmath230 @xmath102combine(@xmath224 )    figure  [ fi : alg - ops ] shows algorithms to compute these operations in @xmath122}$ ] .",
    "note how these are similar to the split procedure in fig .",
    "[ fi : alg - minreach ] .",
    "let @xmath231 be the functions given by @xmath232 and @xmath233 .",
    "then @xmath234}$ ] .",
    "[ le : semop ] let @xmath235}$ ] and @xmath21 .",
    "then @xmath236 , @xmath237 , and @xmath238 .",
    "[ le : semeq ] let @xmath235}$ ]",
    ". then @xmath239 iff @xmath240 .",
    "[ th : gpk - semiring ] the structure @xmath241 } , \\oplus , \\otimes , { \\mathbb{0 } } , { \\mathbb{1}})$ ] forms a @xmath1-continuous kleene algebra .",
    "[ le : sem_matrix ] for @xmath141 , @xmath242}^ { n\\times n}$ ] , and @xmath21 , @xmath243 .",
    "we are ready to give the central result of this paper , stating that for a given featured weighted automaton @xmath132 , computing @xmath78 suffices to obtain all projected values .",
    "[ th : comput-1 ] let @xmath132 be a featured weighted automaton over @xmath102 and @xmath21",
    ". then @xmath244 .",
    "we have @xmath245 by lemmas  [ le : semop ] and  [ le : sem_matrix ] .",
    "noting that the matrix representation of @xmath30 is @xmath246 , the proof is finished .",
    "in this final section we apply the theoretical results of this paper to featured energy problems .      the _ energy semiring _",
    "@xcite is the structure @xmath247 . here",
    "@xmath248 is the set of _ energy functions _ , which are partial functions @xmath249 on extended real numbers ( @xmath250 meaning that @xmath36 is undefined at @xmath251 ) with the property that @xmath252 these",
    "have been introduced in  @xcite as a general framework to handle formal energy problems as below .",
    "the operations in the semiring are ( pointwise ) maximum as @xmath110 and function composition as @xmath101 , and the neutral elements are the functions @xmath253 , @xmath254 given by @xmath255 and @xmath256 for all @xmath257 .",
    "an _ energy automaton _ is a tuple @xmath123 consisting of a finite set @xmath4 of states , subsets @xmath5 of initial and accepting states , and a finite set @xmath258 of transitions .",
    "hence the transition labels in energy automata are functions which proscribe how a real - valued variable evolves along a transition .",
    "an _ energy problem _ asks , then , whether some state is reachable when given a certain _ initial energy _ , or whether the automaton admits infinite accepting runs from some initial energy :    a _ global state _ of an energy automaton is a pair @xmath259 with @xmath260 and @xmath261 .",
    "a transition between global states is of the form @xmath262 such that @xmath263 and @xmath264 .",
    "a ( finite or infinite ) _ run _ of the automaton is a ( finite or infinite ) path in the graph of global states and transitions .",
    "as the input to a decision problem must be in some way finitely representable , we will state them for subclasses @xmath265 of _ computable _ energy functions ( but note that we give no technical meaning to the term `` computable '' other that `` finitely representable '' ) ; an @xmath266-automaton is an energy automaton @xmath123 with @xmath267 .",
    "[ pb : reach ] given a subset @xmath265 of computable functions , an @xmath266-automaton @xmath3 and a computable initial energy @xmath268 : do there exist @xmath13 and a finite run of @xmath8 from @xmath269 which ends in a state in @xmath270 ?",
    "[ pb : buchi ] given a subset @xmath265 of computable functions , an @xmath266-automaton @xmath3 and a computable initial energy @xmath268 : do there exist @xmath13 and an infinite run of @xmath8 from @xmath269 which visits @xmath270 infinitely often ?    as customary ,",
    "a run such as in the statements above is said to be accepting .",
    "we need a few algebraic notions connected to infinite runs in weighted automata before we can continue .",
    "idempotent semiring - semimodule pair _",
    "@xcite @xmath271 consists of an idempotent semiring @xmath96 and a commutative idempotent monoid @xmath272 which is equipped with a left @xmath102-action @xmath273 , @xmath274 , satisfying the following axioms for all @xmath275 and @xmath276 : @xmath277 also non - idempotent versions of these are in use , but we will only need the idempotent one here .    a",
    "_ generalized @xmath1-continuous kleene algebra _",
    "@xcite is an idempotent semiring - semimodule pair @xmath271 where @xmath102 is a @xmath1-continuous kleene algebra such that for all @xmath275 and for all @xmath278 , @xmath279    a _",
    "@xmath1-continuous kleene @xmath2-algebra _",
    "@xcite consists of a generalized @xmath1-continuous kleene algebra @xmath271 together with an _ infinite product _ operation",
    "@xmath280 which maps every infinite sequence @xmath281 in @xmath102 to an element @xmath282 of @xmath283 .",
    "the infinite product is subject to the following conditions :    * for all @xmath284 , @xmath285 .",
    "* let @xmath284 and @xmath286 a sequence which increases without a bound .",
    "let @xmath287 for all @xmath288",
    ". then @xmath289 . * for all @xmath290",
    ", we have @xmath291 .",
    "* for all @xmath292 , @xmath293 .    for any idempotent semiring - semimodule pair @xmath271 and @xmath141",
    ", we can form the matrix semiring - semimodule pair @xmath294 whose elements are @xmath295-matrices of elements of @xmath102 and @xmath143-dimensional ( column ) vectors of elements of @xmath283 , with the action of @xmath142 on @xmath296 given by the usual matrix - vector product .",
    "when @xmath271 is a @xmath1-continuous kleene @xmath2-algebra , then @xmath294 is a generalized @xmath1-continuous kleene algebra  @xcite . by  (",
    "* lemma  17 ) , there is an @xmath2-operation on @xmath142 defined by @xmath297 for all @xmath145 and @xmath298 . also , if @xmath147 and @xmath299 $ ] , where @xmath149 and @xmath150 are square matrices of dimension less than @xmath143 , then @xmath300    we also need another matrix-@xmath2-power below .",
    "let @xmath147 , @xmath301 and @xmath145 , and write @xmath299 $ ] as above , with @xmath302 top left @xmath159-by-@xmath159 part of @xmath161 .",
    "we define @xmath303    let @xmath271 be a @xmath1-continuous kleene @xmath2-algebra and @xmath3 a @xmath102-weighted automaton .",
    "an _ infinite path _ in @xmath8 is an infinite alternating sequence @xmath304 of transitions @xmath305 @xmath306 .",
    "the _ weight _ of @xmath11 is the infinite product @xmath307 .",
    "an infinite path @xmath308 in @xmath8 is said to be _ bchi accepting _ if @xmath13 and the set @xmath309 is infinite .",
    "the _ bchi value _",
    "@xmath310 of @xmath8 is defined to be the sum of the weights of all its bchi accepting infinite paths : @xmath311 let @xmath153 be the matrix representation of @xmath8 .",
    "it can be shown  @xcite that @xmath312      recall that @xmath248 denotes the set of energy functions : functions @xmath249 with the property   that whenever @xmath313 , then @xmath314 ; and that @xmath247 is the semiring of energy functions .",
    "@xmath315 is a @xmath1-continuous kleene algebra .",
    "let @xmath316 be the boolean lattice .",
    "we say that a function @xmath317 is _ @xmath318-continuous _ if @xmath319 or for all @xmath320 with @xmath321 , @xmath322 .",
    "let @xmath323 be the set of @xmath318-continuous functions @xmath317 . with operation @xmath324 defined by @xmath325 and",
    "unit @xmath253 given by @xmath326 for all @xmath257 , @xmath327 forms a commutative idempotent monoid .",
    "then @xmath328 is an idempotent semiring - semimodule pair .",
    "define an infinite product @xmath329 as follows : let @xmath330 be an infinite sequence and @xmath257 .",
    "let @xmath331 and , for each @xmath332 , @xmath333 .",
    "thus @xmath281 is the infinite sequence of values obtained by application of finite prefixes of the function sequence @xmath334 . then @xmath335 if there is an index @xmath159 for which @xmath336 and @xmath337 otherwise",
    ".    it can be shown  @xcite that @xmath338 is @xmath318-continuous for any infinite sequence @xmath330 , hence this defines indeed a mapping @xmath339 .",
    "@xmath328 is a @xmath1-continuous kleene @xmath2-algebra .",
    "hence the energy problems stated at the end of sect .",
    "[ se : energy.prob ] can be solved by computing reachability and bchi values of energy automata :    let @xmath3 be an energy automaton and @xmath268 .",
    "* there exist @xmath13 and a finite run of @xmath8 from @xmath269 which ends in a state in @xmath270 iff @xmath340 .",
    "* there exist @xmath13 and an infinite run of @xmath8 from @xmath269 which visits @xmath270 infinitely often iff @xmath341 .",
    "we now define energy problems for featured automata . recall that @xmath17 denotes a set of features and @xmath18 a set of products over @xmath17",
    ".    a _ featured energy automaton _ over @xmath35 is a tuple @xmath123 consisting of a finite set @xmath4 of states , subsets @xmath5 of initial and accepting states , and a finite set @xmath342}\\times s$ ] of transitions .",
    "hence transitions in featured energy automata are labeled with ( injective ) functions from guard partitions to energy functions .    [",
    "le : fomega - e ] for @xmath343 , @xmath344 is given by @xmath345    [ de : omega_gpe ] let @xmath346}$ ] and define @xmath347 by @xmath348 .",
    "let @xmath349}$ ] be the canonicalization of @xmath350 , then we define @xmath351 .",
    "[ le : sem_matrix - o ] for @xmath141 , @xmath301 , @xmath352}^ { n\\times n}$ ] , and @xmath21 , @xmath353 and @xmath354 .",
    "[ th : family - energy ] let @xmath132 be a featured energy automaton and @xmath21",
    ". then @xmath355 .",
    "we have @xmath356 by lemmas  [ le : semop ] and  [ le : sem_matrix - o ] .",
    "as the matrix representation of @xmath30 is @xmath357 , the result follows .",
    "we have introduced featured ( semiring- ) weighted automata and shown that , essentially , verification of their properties can be reduced to checking properties of weighted automata .",
    "this is because , from a mathematical point of view , a featured weighted automaton over a semiring @xmath102 is the same as a weighted automaton over the semiring of functions from products ( sets of features ) to @xmath102 .",
    "representing functions from products to @xmath102 as injective functions from partitions of the set of products to @xmath102 , we have exposed algorithms which will compute featured weighted reachability in case @xmath102 is a @xmath1-continuous kleene algebra .",
    "it is easy to see that these extend to the non - idempotent case of @xmath102 being a _",
    "conway semiring_. the essence in our approach does not lie in these technical details , but in the fact that we pass from @xmath102 to a semiring of functions into @xmath102 ; this typically preserves properties one is interested in .",
    "we have also seen that energy properties are preserved when passing from the weighted to the featured weighted setting ; generally , if @xmath271 is a @xmath1-continuous kleene @xmath2-algebra , then the semiring - semimodule pair of functions from products to @xmath102 and @xmath283 , respectively , will also be such .",
    "we are interested in extending the setting of this paper to other weighted structures beyond semirings , for example the valuation monoids of  @xcite .",
    "this will enable feature - based treatment of properties such as limit - average cost and will be useful for an extension to the timed setting of  @xcite . from a practical point of view",
    ", we have shown in  @xcite that efficient algorithms are available for the limit - average setting .",
    "10    s.  l. bloom and z.  sik . .",
    "eatcs monographs on theoretical computer science .",
    "springer , 1993 .",
    "p.  bouyer , u.  fahrenberg , k.  g. larsen , and n.  markey .",
    "timed automata with observers under energy constraints . in _",
    "acm , 2010 .",
    "p.  bouyer , u.  fahrenberg , k.  g. larsen , n.  markey , and j.  srba .",
    "infinite runs in weighted timed automata with energy constraints . in _ formats _ , vol .",
    "lncs_. springer , 2008 .",
    "p.  bouyer , k.  g. larsen , and n.  markey .",
    "lower - bound constrained runs in weighted timed automata . in _ qest_. ieee computer society , 2012 .",
    "k.  chatterjee and l.  doyen .",
    "energy parity games . in _",
    "icalp ( 2 ) _ , vol .",
    "lncs_. springer , 2010 .",
    "a.  classen , m.  cordy , p.  schobbens , p.  heymans , a.  legay , and j.  raskin . featured transition systems : foundations for verifying variability - intensive systems and their application to ltl model checking .",
    ", 39(8):10691089 , 2013 .",
    "m.  cordy , p.  schobbens , p.  heymans , and a.  legay .",
    "behavioural modelling and verification of real - time software product lines . in _",
    "acm , 2012 .",
    "m.  cordy , p.  schobbens , p.  heymans , and a.  legay . beyond boolean product - line model checking : dealing with feature attributes and multi - features .",
    "ieee / acm , 2013 .",
    "a.  degorre , l.  doyen , r.  gentilini , j .- f .",
    "raskin , and s.  torunczyk . energy and mean - payoff games with imperfect information . in _",
    "csl _ , 2010 .",
    "m.  droste , w.  kuich , and h.  vogler . . , 2009",
    "m.  droste and i.  meinecke .",
    "weighted automata and regular expressions over valuation monoids . , 22(8):18291844 , 2011 .",
    "z.  sik , u.  fahrenberg , and a.  legay .",
    "@xmath1-continuous kleene @xmath2-algebras . in _ dlt _ , vol .",
    "lncs_. springer , 2015 .",
    "z.  sik , u.  fahrenberg , and a.  legay .",
    "@xmath1-continuous kleene @xmath2-algebras for energy problems . in _ fics _ , vol .",
    "191 of _ eptcs _ , 2015 .",
    "z.  sik , u.  fahrenberg , a.  legay , and k.  quaas .",
    "leene algebras and semimodules for energy problems . in _ atva _ , vol .",
    "lncs_. springer , 2013 .",
    "z.  sik and w.  kuich .",
    "locally closed semirings . , 137(1):2129 , 2002 .",
    "z.  sik and w.  kuich .",
    "on iteration semiring - semimodule pairs . , 75:129159 , 2007 .",
    "z.  sik and w.  kuich .",
    "finite automata . in _ handbook of weighted automata _ @xcite .",
    "u.  fahrenberg , l.  juhl , k.  g. larsen , and j.  srba .",
    "energy games in multiweighted automata . in _ ictac _",
    "lncs_. springer , 2011 .",
    "d.  kozen .",
    "on kleene algebras and closed semirings . in _ mfcs _ , vol .",
    "452 of _ lncs_. springer , 1990 .",
    "d.  kozen . a completeness theorem for kleene algebras and the algebra of regular events .",
    ", 110(2):366390 , 1994 .",
    "r.  olaechea , u.  fahrenberg , j.  m. atlee , and a.  legay .",
    "long - term average cost in featured transition systems . in _",
    "splc_. acm , 2016 .",
    "k.  quaas . on the interval - bound problem for weighted timed automata . in _ lata",
    ". 6638 of _",
    "lncs_. springer , 2011 .",
    "t.  thm , s.  apel , c.  kstner , i.  schaefer , and g.  saake . a classification and survey of analysis strategies for software product lines .",
    ", 47(1):6:16:45 , 2014 .",
    "to see that @xmath190 is injective , let @xmath358 and assume @xmath359 .",
    "let @xmath360 such that @xmath361 and @xmath362 , then @xmath363 and hence @xmath364 , _",
    "i.e. , _  @xmath365 .    for the second claim ,",
    "let @xmath40 , then @xmath366 for some @xmath186 , hence @xmath367 . to see uniqueness ,",
    "let @xmath358 and assume @xmath368 and @xmath369 .",
    "as @xmath39 , this implies that @xmath370 , hence @xmath365 .",
    "existence of @xmath84 and @xmath85 is obvious by definition of @xmath209 . for uniqueness , assume that there is @xmath371 with @xmath372 and @xmath373",
    ". then @xmath374 , but as @xmath201 is a partition , @xmath375 , hence @xmath376 , a contradiction .",
    "we have @xmath383 , hence @xmath384 , so that @xmath385 . using the notation of def .",
    "[ de : op_gpk ] , @xmath386 .",
    "write @xmath387 and let @xmath388 be such that @xmath389 , _ cf . _  lemma  [ le : canon ] .",
    "then @xmath390 , hence @xmath391 . the proofs for @xmath101 and  @xmath1 are similar .",
    "let @xmath179 be the guard partition @xmath395 , and define functions @xmath396 by @xmath397 and @xmath398 . by definition",
    ", @xmath399 is the canonicalization of @xmath400 and @xmath401 the canonicalization of @xmath402 . by construction , @xmath403 implies @xmath404 , hence @xmath239 .",
    "we show that the set @xmath405 of functions from @xmath35 to @xmath102 forms a @xmath1-continuous kleene algebra ; the theorem is then clear from lemmas  [ le : semop ] and  [ le : semeq ] . for functions",
    "@xmath406 , define @xmath407 , @xmath408 and @xmath409 by @xmath410 , @xmath411 , and @xmath412 .",
    "let @xmath413 be the functions @xmath414 , @xmath415 .",
    "then @xmath416 forms an idempotent semiring .",
    "the formulas for @xmath432 and @xmath433 involve only additions , multiplications , stars , and @xmath2s . invoking lemmas  [ le : semop ] and  [ le : sem_matrix ] ,",
    "we see that the proof will be finished once we show that for @xmath434}$ ] , @xmath435 .",
    "write @xmath436 and let @xmath40 be the unique feature guard for which @xmath20 . then @xmath129 . using the notation of def .",
    "[ de : omega_gpe ] , @xmath437 .",
    "write @xmath438 and let @xmath439 be such that @xmath440 , _ cf . _  lemma  [ le : canon ] .",
    "then @xmath390 , hence @xmath441 ."
  ],
  "abstract_text": [
    "<S> a featured transition system is a transition system in which the transitions are annotated with feature expressions : boolean expressions on a finite number of given features . depending on its feature expression , </S>",
    "<S> each individual transition can be enabled when some features are present , and disabled for other sets of features . </S>",
    "<S> the behavior of a featured transition system hence depends on a given set of features . </S>",
    "<S> there are algorithms for featured transition systems which can check their properties for all sets of features at once , for example for ltl or ctl properties .    here </S>",
    "<S> we introduce a model of featured weighted automata which combines featured transition systems and ( semiring- ) weighted automata . </S>",
    "<S> we show that methods and techniques from weighted automata extend to featured weighted automata and devise algorithms to compute quantitative properties of featured weighted automata for all sets of features at once . </S>",
    "<S> we show applications to minimum reachability and to energy properties . </S>"
  ]
}
{
  "article_text": [
    "after many years of fruitful operation , the lep experiments have been closed down and the lep2 data analysis is approaching its final stage . in the area of @xmath2-pair physics",
    "the experimental precision is very high : in order to match it , theoretical calculations must include not only tree - level four - fermion born contributions , with the numerically leading higher - order effects ( mostly qed ) , but also the complete @xmath1 electroweak ( ew ) corrections to @xmath2-pair production @xcite .",
    "this applies not only to inclusive quantities such as the total cross section but also to various differential distributions , such as the angular or invariant mass ones . to date",
    "there is , however , no single monte carlo ( mc ) event generator that would include simultaneously the complete four - fermion background for massive fermions and the @xmath1 ew corrections to @xmath2-pair mediated processes in _ all _ possible @xmath2-pair decay channels .",
    "for example koralw @xcite can generate _ all _ four - fermion final states with the fully massive phase space and the complete born - level four - fermion massive matrix element generated by the grace2 package @xcite .",
    "apart from koralw there exists a number of other mc programs for all four - fermion processes at the born level @xcite .",
    "the complete @xmath1 corrections to the signal @xmath18 process are implemented only in two mc programs : yfsww3 @xcite and racoonww @xcite .",
    "yfsww3 includes the library of electroweak corrections from refs .",
    "@xcite . the racoonww program , in addition to @xmath1 corrections to the @xmath3 process ,",
    "can also calculate the four - fermion corrections in the massless fermion approximation and single , hard , non - collinear , real photon radiation in all four - fermion processes .",
    "the massless fermion approximation prevents racoonww from being fully exclusive .",
    "also , racoonww seems to still have some problem with providing constant - weight events in the full operational mode .",
    "concerning the efficient use of the koralw and yfsww3 mc event generators , the critical open question is : how is it possible to combine their results , so that for every interesting physical observable we get a prediction that includes the complete @xmath1 standard model ( sm ) corrections for the @xmath2-pair production and decay process , keeping sufficient control on the smaller contributions from the `` background diagrams '' ? before we answer this question ,",
    "let us mention important practical limitations and requirements .",
    "for the purpose of the lep2 data analysis it is of paramount importance that the results of yfsww3 and koralw are combined for the _ fully exclusive _ distributions , in other words on an _ event - per - event _ basis .",
    "it is not sufficient to combine the predictions of two separate mc runs of yfsww3 and koralw programs for _ inclusive _ observables such as an integrated cross section , asymmetries , single - dimensional angular or @xmath2-mass distributions .",
    "such a procedure is not sufficient for full detector simulations and for data analysis , in which the important sm parameter , the mass of the @xmath2 , is fitted to experimental data using a series of the ( fully exclusive ) mc events !",
    "apparently , we are asking whether the koralw and yfsww3 mc programs could be merged into a single new mc event generator , that is a single mc program with a single source code and a single executable object in the machine processor . in principle , this could be done , but not within the time left for the lep2 data analysis . nevertheless , the situation is not completely hopeless and there seem to be some sensible ways out .",
    "one possible solution is to combine koralw and yfsww3 into a single tool using events stored on the mass data storage , which we shall call a `` disk file '' or simply a `` disk '' .",
    "storing events is done routinely for the purpose of the data analysis anyway . in this scenario ,",
    "constant - weight events generated with koralw are stored on the disk and later on read by yfsww3 and finally corrected for the missing @xmath1 terms with the help of a special correction weight .",
    "the resulting events would be variable - weight ( weighted ) events .",
    "this kind of organization is not completely trivial and requires certain `` tuning '' of both programs ; see below for the details .",
    "note also that ; for the purpose of fitting the @xmath2 mass , the events generated by koralw and stored on the disk can be corrected in a similar way by koralw , with the weight corresponding to a change of the mass of @xmath2 , or due to any change of the other sm parameters ( any change of the input data of koralw ) .",
    "coming back to the above procedure of combining koralw and yfsww3 , we see two important disadvantages : ( i ) running two separate mc programs that communicate through a disk file is inconvenient and ( ii ) the correction weight of yfsww3 may have a long tail , so that it would be difficult or impossible to produce constant - weight ( unweighted ) events through a rejection technique .    in this article we present another solution to the above problems and the corresponding mc tool , based on the koralw and yfsww3 mc programs , which is able to provide constant - weight events , implements the @xmath1 corrections for @xmath2-pair production process and includes all of the background diagrams .",
    "the present new version 1.51 of the koralw program provides a programming framework for this new solution .",
    "contrary to the previous solution where koralw and yfsww3 were communicating through a disk file , here , variable - weight events from koralw are sent immediately , in real time , as an input to yfsww3 , using the `` named pipe '' of the fifo mechanism in the unix / linux operating system .",
    "yfsww3 calculates the @xmath1 correction weight and sends it back to koralw with the help of another `` named pipe '' of the fifo .",
    "afterward , koralw performs the final rejection according to the total mc weight and invokes hadronization , etc .",
    "the important advantage of the above method is that it provides the constant - weight events with the @xmath1 corrected @xmath2-pair process quite efficiently , including all the background diagrams , the higher - order isr corrections , the hadronization , etc . for the fifo - based solution ,",
    "as compared with the disk - mediated solution mentioned earlier , _ no _ additional modifications of the fortran source codes of both programs are necessary .",
    "since koralw and yfsww3 run as two separate , concurrent processes , which communicate with one another , we call this solution a `` concurrent monte carlo ( cmc ) koralw@xmath4yfsww3 '' . from the user s point of view",
    ", it acts like a single mc program . to our knowledge",
    ", this could be the first important practical application , albeit rather simple , of the concept of `` concurrency '' in the area of the high energy physics monte carlo event generators .",
    "we shall also discuss very briefly possible future extensions / improvements of the above technique .",
    "the modifications of the yfsww3 program necessary for this technique are discussed in detail in @xcite and in this paper we shall describe them only to a minimum necessary extent .",
    "the second group of modifications included in koralw version 1.51 is motivated by the use of koralw to study the background to two - fermion processes due to the emission of a second fermion pair . in short ,",
    "the modifications provide a number of approximate matrix elements , denoted according to ref .",
    "@xcite as isns , fsns , etc . , and a new `` extrapolation procedure '' better suited for the @xmath19-channel - dominated photonic radiation .",
    "the layout of the paper is as follows . in section 2 ,",
    "we discuss various ways of merging koralw with yfsww3 .",
    "in particular we show how to do it by means of the fifo ( `` named pipes '' ) mechanism and discuss how to reweight previously generated events from tapes . in the section 3 ,",
    "we provide some numerical tests of the cmc koralw@xmath4yfsww3 . in section 4 , we describe in detail all modifications of koralw version 1.51 related to the @xmath3 physics and the reweighting procedures , the two - fermion physics and miscellaneous topics , respectively . in section 5 , we explain how to install the version 1.51 of koralw and in section 6 we describe briefly the organization of the source code . in section 7 , we describe in detail various demo programs included in the package , with special emphasis on the practical use of the fifo ( `` named pipes '' ) mechanism and the construction of the concurrent monte carlo .",
    "we summarize the paper in section 8 . in an appendix",
    ", we describe new and modified program parameters .",
    "in this section we shall describe in detail the method of combining results of the mc event generators koralw and yfsww3 at the level of the _ fully exclusive _ differential distribution , such that the resulting distribution features the @xmath1 corrections for the @xmath3 signal process and the background graphs of the four - fermion process ( with the isr corrections ) .",
    "as already indicated , this can be done either by using a series of mc events stored on the disk or through the concurrent use of koralw and yfsww3 , which effectively act together as a single mc event generator . in both scenarios",
    "the underlying methodology of constructing mc correction weights is the same .",
    "it will be described in detail in the following .",
    "let us remind the reader that koralw is a dedicated mc event generator with a powerful four - fermion phase - space generator capable of generating every possible four - fermion final state in the complete phase space for massive fermions ( including electrons ) @xcite with the importance sampling due to all possible singularities in the feynman diagrams .",
    "koralw uses the exact massive born - level matrix element generated by the grace2 package @xcite .    on the other hand ,",
    "the yfsww3 mc event generator @xcite is the mc program dedicated to the @xmath2-pair production and decay process .",
    "it includes the complete @xmath1 ew library of real and virtual corrections to the @xmath2-pair production process of refs .",
    "@xcite , along with the multiple photon radiation from the @xmath2-pair ( wsr ) . in the following",
    "we will often use the notation non - leading ( nl ) @xmath1 corrections to denote the remaining part of the @xmath1 ew corrections after subtraction of the `` trivial '' leading universal corrections : initial state radiation ( isr ) and coulomb correction ( cc ) .",
    "certain features of koralw and yfsww3 are critical on the possibility of combining their results for fully exclusive differential distributions .",
    "the most important is that both programs do implement well - defined , fully exclusive , distributions for four final - state fermions and @xmath20 photons , normalized with respect to the standard lorentz - invariant phase space ( lips ) @xmath21 as defined in the pdg  @xcite .",
    "the four - momenta of the final - state fermions are @xmath22 and of the photons are @xmath23 , @xmath24 . in spite of the fact that both programs use the leading - logarithmic ( ll ) models for the higher - order isr and the final - state radiation ( fsr )",
    ", they do not employ an inclusive approach in which the collinear photon is irreversibly associated with the parent fermion ( structure - function approach ) .",
    "the massive kinematics of all fermions allows for full coverage of the phase space .",
    "it is also helpful that both programs implement the same cc03 matrix element in the t  hooft  feynman gauge , which coincides with the gauge - invariant leading pole approximation ( lpa ) of the complete four - fermion born - level matrix element and has , therefore , a well defined physical meaning , see @xcite for more discussion .",
    "the @xmath1 nl effect comes as a correction to the above cc03 distribution ; see below for more details .    even before the advent of the cmc koralw@xmath4yfsww3 , both programs ( in their unpublished versions ) gradually acquired the capability of writing the four - momenta of generated events , together with some auxiliary information , to an external device and reading them back in order to calculate the correction weight .",
    "the correction weight was that corresponding to the modification of the fully exclusive differential distribution : @xmath25 due to a change of the input parameters of the mc event generators .",
    "the most important change was due to a variation of the input @xmath2-mass and was instrumental in the fitting of the @xmath2-mass to the lep experimental data using a series of the mc events from koralw or yfsww3 .",
    "it is quite likely that this kind of facility will be a standard feature for any future mc event generator aimed at precision measurements in the future experiments .",
    "the analysis of the lep data points out in that direction for future developments .",
    "as indicated in the introduction , the next non - trivial step was to provide one of the programs , koralw or yfsww3 , with the capability of correcting the fully exclusive distributions using the correction weight calculated by another program . in practice ,",
    "it has turned out that correcting the events produced with koralw using the correction weight of yfsww3 leads to a lower rejection rate for the final mc weight than the other way around , i.e.  correcting the events of yfsww3 with the weight of koralw .",
    "the reason is that koralw has a better importance sampling for the background processes ( some of them dominated by the @xmath19-channel exchange ) .",
    "koralw does not have a sufficiently good importance sampling for wsr .",
    "however , this seems to matter less than the lack of importance sampling for the background processes , particularly the ones with electron(s ) in the final state .",
    "the main difficulty in developing the above cross - correcting capabilities of one mc program by another was to match correctly the relative normalizations of the fully exclusive differential distributions in both programs in order to define the correction weight properly ; see below .    finally , after both programs have evolved to acquire subprograms for reading and writing events on the external device and calculating the properly normalized correction weights for use by the same or other programs , it was a purely technical exercise to organize both programs in such a way that cross - correcting one program by another could be done `` in flight '' by running _",
    "simultaneously _ koralw and yfsww3 , as two independent concurrent processes .",
    "the communication between concurrent processes was organized under unix / linux quite easily with the help of the standard fifo facility of the `` named pipes '' , using the already existing subprograms for reading / writing on / from the external device . in this way ,",
    "a new solution has emerged , which we call the concurrent monte carlo ( cmc ) koralw@xmath4yfsww3 . from the users point of view",
    "it acts as a single monte carlo program with all its regular features .",
    "the main advantage of the cmc koralw@xmath4yfsww3 with respect to the previous solution ( with disk files ) is that it can produce efficiently the constant - weight mc events .",
    "these events can be fed into a detector mc simulation program and stored on the disk .",
    "there is no problem with applying to these events a correction weight due to a change of the @xmath2-mass or other sm parameters .    in the first part of this section",
    ", we shall discuss the theoretical foundations and requirements for this kind of a merge of two different programs .",
    "then , we shall go into the details of the technical realization of the cmc koralw@xmath4yfsww3 solution .",
    "the actual modifications of the koralw will be presented in detail in one of the later sections .      in the following",
    "we shall discuss the physics meaning of the correction weights . after introducing our basic notation and terminology",
    "we shall briefly characterize fully exclusive differential distributions in koralw and yfsww3 and define a common reference differential distribution with which we shall define correction weights in both programs .      in the following considerations we shall use the differentials @xmath26 , which we always understand as the fully exclusive differential distributions normalized to the @xmath27-particle lorentz - invariant phase space @xmath28    in the following we",
    "shall need a clearly defined terminology for the various contributions and ( perturbative ) corrections in @xmath26 .",
    "we shall often use objects like @xmath29 .",
    "what is the meaning of the symbols used as superscripts and subscripts ? here is the complete list , with explanations :    * @xmath30 and @xmath31 : denotes the origin from the mc program : koralw and yfsww3 , respectively .",
    "* cc03 : in yfsww3 , we implement the leading pole approximation ( lpa ) to define the double - resonant , @xmath3 , component of the @xmath32 process ; in particular cc03 denotes here the tree - level ( born ) part of lpa , which coincides with the cc03 matrix element in the t  hooft  feynman gauge",
    ". we shall sometimes use @xmath33 or cc03@xmath34 to underline that we use yfsww3 with the version lpa@xmath34 , see refs .",
    "* @xmath1 : denotes the lpa with the complete on - shell @xmath1 corrections for the @xmath35 process ; we understand that this includes the cc03 tree - level , one - loop @xmath1 virtual corrections and the exact qed matrix element for photon emission from @xmath3 ( wsr ) .",
    "the one - loop ew corrections to decays are included in the present version of yfsww3 as an overall factor and real photon emission is implemented using the approximate treatment of photos  @xcite . *",
    "@xmath36 : this means that we include the and qed isr correction ( which has not been already included through exponentiation ) ; it is always understood that it is done in the ll approximation ; a similar subscript like @xmath37 is self - explanatory ; in particular subscript @xmath38 means @xmath39 exponentiation ( the born - level matrix element convoluted with the photon emission in the soft - photon approximation ) .",
    "* @xmath40 : this means that , close to the @xmath3-threshold , we include properly the non - relativistic coulomb effect , which far from the threshold is matched correctly with the @xmath1 wsr .",
    "if not stated otherwise , we use a variant of @xmath40 with the `` screening '' of ref .",
    "@xcite , which incorporates the numerically leading part of the non - factorizable qed interference between two @xmath2 decays . *",
    "@xmath41 : this denotes the tree - level matrix element for @xmath32 ( the constant @xmath2 width , massive fermions ) , which can be split into the double - resonant cc03 part and the four - fermion - correction due to background diagrams .",
    "as already indicated , we can either correct @xmath42 of yfsww3 using the correction of koralw according to @xmath43 or correct @xmath44 of koralw using the correction of yfsww3 according to @xmath45 before we enter into more of the details of how the above is implemented in terms of the mc correction weight , let us briefly characterize the fully differential exclusive distributions generated by yfsww3 and koralw .",
    "let us now explicitly define the component distributions in eqs .",
    "( [ y / k ] ) and ( [ k / y ] ) . the fully exclusive differential distribution of koralw is given in should be replaced by @xmath46 . ] eq .",
    "( 4 ) of ref .",
    "@xcite : @xmath47 , \\end{split } \\label{master}\\ ] ] where @xmath48 for the definition of the yfs form factor @xmath49 , ir - finite @xmath50 s and other elements in the above distribution we refer the reader to ref .",
    "let us only mention that the tree - level four - fermion matrix element is hidden in @xmath51 .",
    "the analogous distribution for yfsww3 , see ref .",
    "@xcite , is more complicated not only because it features photon emission from @xmath2 s , but also because it includes summation over photon partitions , that is over photon associations to either isr or wsr .",
    "this trick is useful for efficient introduction of the ll corrections beyond . as we shall see later",
    ", it is relevant for the discussion of the reweighting procedures . for @xmath20 photons ,",
    "a single partition is represented by the vector @xmath52 , @xmath53 ( @xmath54 for isr and @xmath2 for wsr ) .",
    "the sum over partitions is weighted by the partition weight @xmath55 where @xmath56 is adjusted such that @xmath57 and @xmath58 for wsr is defined analogously to @xmath59 of eq .",
    "( [ eq;s - tilde - i ] ) .",
    "the exclusive differential distribution of yfsww3 reads as follows : @xmath60 where radiation from the @xmath2-pair is included in @xmath61 furthermore , @xmath62 and @xmath63 denote the four - momenta of the @xmath64 and @xmath65 , respectively .",
    "the yfs form factor @xmath66 also includes the wsr .",
    "the complete @xmath1 corrections for the @xmath2 pair production process reside in the @xmath67-functions . for the @xmath68 corrections ,",
    "the sum over real photons extends only over isr photons .",
    "see ref .",
    "@xcite for an explanation of the rest of the notation .",
    "the mc programs koralw and yfsww3 generate the events according to the distributions of eqs .",
    "( [ master])([master ] ) .",
    "in fact , both of these distributions come in several variants , with certain physical effects and higher - order radiative corrections switched on / off .",
    "it is therefore possible , in principle , to calculate separately any component in the distributions of eqs .",
    "( [ y / k ] ) and ( [ k / y ] ) .    in the real mc programs it is , however , difficult or impossible to find a single subprogram , that provides numerically the distributions @xmath69 exactly as defined by eqs .",
    "( [ master])([master ] ) , without any additional factor . in the typical mc program one always deals with the mc weights , which include not only expressions like eqs .",
    "( [ master])([master ] ) , but also some factors representing technicalities of the mc algorithm .",
    "the mc weight is @xmath70 , where @xmath71 is the `` target '' distribution defined by the physics model and @xmath72 is the multidifferential distribution actually generated in a given mc program using elementary ( primitive ) mc techniques .",
    "@xmath72 is different in koralw and yfsww3 and the mc weight @xmath73 can be different in two mc programs , even if @xmath71 is the same .    because of the above specific normalization properties of the mc weights , it is not trivial to construct the correcting weight , which is calculated in one mc program and used in another one .",
    "the basic practical methodology relies on introducing a certain `` reference '' differential density @xmath74 , which is identically the same for koralw and yfsww3 , and there is a mc weight in both programs representing @xmath74 .    in principle",
    "the @xmath74 is a dummy quantity that serves only the purpose of fixing the absolute normalization between the two programs . for",
    "@xmath74 understood like this , we could , of course , pick `` any '' distribution  even one that does not coincide with any meaningful physical model .",
    "however , we shall also need another auxiliary distribution , @xmath75 , which is the maximal common part of the best distributions of the two programs to be merged . in other words",
    ", the distribution @xmath75 should include all components / corrections that are present in both koralw and yfsww3 and should not include any correction that is present in only one of them .",
    "the simplest possible approach is to choose the reference distribution @xmath74 to be equal to @xmath75 .",
    "accordingly , our choice of @xmath74 is the following : @xmath76 as we remember , cc03 we understand in the gauge - invariant way in terms of the lpa .",
    "how is the common reference @xmath74 realized in koralw and yfsww3 ? in yfsww3 the starting point is the differential distribution of eq .",
    "( [ master ] )  in order to realize the universal @xmath74 , the radiation from the @xmath2-pair must be switched off .",
    "only one partition @xmath77 remains .",
    "also the perturbative series of the @xmath50-functions must be truncated to the cc03 matrix element with the isr up to third order in the ll approximation and the ( screened ) coulomb correction .",
    "for koralw @xmath74 is equal to the @xmath44 of eq .",
    "( [ master ] ) with the four - fermion born matrix element simplified to the cc03 level , i.e. @xmath78 .",
    "we also have to remove another possible source of the difference in @xmath74 as implemented in both programs .",
    "the function @xmath79 is really identical in both programs ( for any fermionic four - momenta ) only in the case without additional photon radiation .",
    "otherwise , in the presence of additional photons , attention has to be paid to the so - called `` extrapolation / reduction procedure '' .",
    "this procedure extrapolates @xmath79 from the 4-body ( four - fermion ) phase - space into the @xmath80-body phase - space ( with the additional @xmath20-photons ) .",
    "it is generally not unique and has been defined in a slightly different way in koralw-1.42 and in yfsww3 - 1.16 .",
    "this `` extrapolation / reduction procedure '' is marked in eqs .",
    "( [ master])([master ] ) by superscript @xmath81 .",
    "we have now modified it in koralw-1.51 to coincide ( optionally ) with that of yfsww3 - 1.16 . in this way",
    ", we removed the last source of discrepancy between the @xmath74 as implemented in the two programs .    after defining precisely the fully exclusive differential common reference distribution @xmath74 and implementing the corresponding mc weight in both programs , koralw and yfsww3 ,",
    "the next important step is to check _ numerically _ that the integrated cross section and one - dimensional distributions , such as the distributions of the @xmath2 invariant mass , of the @xmath2 production angle and of the photon energy are ( within statistical errors ) _ identically the same _",
    ", for the mc weights of @xmath74 .",
    "such tests were performed very extensively and they have shown the full agreement of the distributions and the cross sections from the two programs , see section [ sec : numeric ] .      having completed all the above preparatory steps , we can now precisely define the actual correction weights used in the cmc koralw@xmath4yfsww3 and other similar possible scenarios .",
    "equations ( [ y / k ] ) and ( [ k / y ] ) can be rewritten as @xmath82 where @xmath83 let us remind the reader that we have chosen @xmath84 identically the same for koralw and yfsww3 . in the mc realization , the bracket factor on the r.h.s .",
    "( [ + cc03])([k+y ] ) represents the correction weight in a given reweighting procedure ; for a more detailed discussion see the following section  [ sec : technics ] .",
    "the great practical advantage of introducing @xmath74 is now seen in the above definitions of the corrections @xmath85 and @xmath86 .",
    "they are expressed in eqs .",
    "( [ eq - cor4f ] ) and ( [ eq - coro1 ] ) as the mc - generator - independent ratios of @xmath26 s ; however , inside a given mc generator they will be calculated as a ratio of the generator - dependent mc weights ( they are the only available objects there ) .",
    "the generator dependence of the mc weights ( from @xmath72 ) cancels out in the ratio of the mc weights .",
    "there is also another , multiplicative , way of combining the @xmath1 and four - fermion corrections @xmath87 one can see immediately that it differs from the additive scheme of eqs .",
    "( [ y+k ] ) and ( [ k+y ] ) by the term @xmath88 , which is definitively a part of the higher - order corrections to the background ( non - cc03 ) graphs . as this latter correction has not been calculated so far",
    ", one does not know how close the above @xmath88 term is to the actual correction .",
    "it can , at best , be treated as a rough indication of the order of magnitude of the true correction .",
    "the same general scheme can be applied to reweighting due to any kind of available corrections .",
    "for example to correct the events generated with some old versions of koralw one has to define @xmath89 equal to the old setup @xmath90 , calculate the appropriate @xmath91 correction and construct the new distribution @xmath44 @xmath92      in the actual implementation , yfsww3 provides only an approximate version of the correction weight : @xmath93 where the differential distribution of yfsww3 is a simplified version of @xmath94 of eq .",
    "( [ master ] ) , in which the sum over partitions is restricted to one term , in which all photons belong to the isr @xmath95 with the partition weight set to 1 : @xmath96 .",
    "as we shall see in the numerical tests presented in the following section , the above approximation is good enough for all practical lep2 applications ; its precision is better than @xmath97 .",
    "it is interesting and instructive to look also at the actual form of the @xmath98-corrections in terms of the @xmath50-series and ultimately the feynman graphs for our definition of @xmath99 . for the background - graphs correction",
    "we have @xmath100_{\\rm cc03 }         } \\\\   & = \\frac{\\vert m_{}^{4f}(\\{p , q\\}^{{{\\cal r}}})\\vert^2 }           { \\vert m_{}^{\\rm cc03}(\\{p , q\\}^{{{\\cal r}}})\\vert^2}. \\end{aligned } \\label{nohot}\\ ] ] the last equation follows from the fact that the second- and third - order ll expressions for the isr @xmath101-functions are exactly the same in both @xmath102 and @xmath103 , and also because we have used the same extrapolation / reduction procedures in both distributions ( note that the extrapolation procedure is fixed by the requirement that @xmath74 is identical in koralw and yfsww3 ) .",
    "the factorization property of the ll ansatz used in the construction of the isr @xmath104 series , cf .  ref .",
    "@xcite , is , of course , essential . both distributions in the numerator and denominator of eq .",
    "( [ nohot ] ) are defined in koralw , that is the appropriate mc weights exist for them .",
    "the case of @xmath105 , provided by yfsww3 , can be analysed as follows : @xmath106_{\\rm cc03 } } \\right ) \\\\   = &   \\frac{\\vert m_{}^{{\\cal o}(\\alpha)}(\\{p , q\\}^{{{\\cal r}}})\\vert^2              + \\hbox{h.o.t .",
    "} }           { \\vert m_{}^{\\rm cc03}(\\{p , q\\}^{{{\\cal r}}})\\vert^2 + \\hbox{h.o.t . } } \\label{hot } \\end{aligned}\\ ] ] the additional higher - order terms ( h.o.t . ) in the denominator include the effects due to the isr .",
    "the numerator is the matrix element squared for the one - photon isr@xmath107wsr . in the presence of exponentiation ,",
    "this is true modulo terms , owing to the specific definition of the @xmath108 in the yfs exponentiation , which admits the presence of the virtual corrections , even for a hard photon . for two and more hard photons the biggest correction in the h.o.t",
    ". will be of .",
    "note that there is _ no _ sum over partitions in the above equation . if , however , we used the exact @xmath86 instead of the approximate @xmath105 the sum over partitions would reappear and the above formula ( and a relation to the feynman graphs ) would become even more complicated .      in the following section we shall discuss more practical aspects of combining the two programs into one . in particular we shall present , in detail , the idea of the `` concurrent monte carlo '' realized via the fifo mechanism .      the first , most natural way is to add the four - fermion and @xmath1 corrections at the level of the _ inclusive _ observables , that is for integrated cross sections and inclusive one- or two - dimensional distributions ( histograms ) . in this case",
    "both sides of eqs .",
    "( [ y / k ] ) and ( [ k / y ] ) are integrated either completely or almost completely , for instance leaving one or two variables unintegrated . the inclusive distributions or the integrated cross sections entering eqs .",
    "( [ y / k ] ) and ( [ k / y ] ) are calculated separately from the independent runs of the two programs and combined according to eqs .",
    "( [ y / k ] ) and ( [ k / y ] ) .",
    "the whole procedure is most convenient for the variable - weight events , mainly because one may use the differences of the weights .",
    "the application of this inclusive correcting scheme is quite straightforward .",
    "suppose that we want to calculate the @xmath2-mass distribution .",
    "using the first scheme @xmath109 of eq .",
    "( [ y / k ] ) , we proceed as follows :    1 .",
    "make the properly normalized histogram of @xmath110 with a sufficiently long run of the yfsww3 mc with the variable- or constant - weight events .",
    "make the properly normalized histogram of @xmath111 with koralw .",
    "this can be done by running koralw once ( twice ) with the variable - weight ( constant - weight ) events .",
    "add the two histograms .    using the second scheme @xmath112 of eq .",
    "( [ k / y ] ) , we proceed in the analogous way :    1 .",
    "make the properly normalized histogram of @xmath113 with the run of the koralw with the variable- or constant - weight events .",
    "make the properly normalized histogram of @xmath114 with the help of yfsww3 .",
    "this can be done by running yfsww3 once ( twice ) with the variable - weight ( constant - weight ) events .",
    "add the two histograms .",
    "both schemes must give the same results , but in practice it is reasonable to use the one that will require , in the given circumstances , the smaller @xmath115 correction and less fluctuations in the correcting weight .",
    "for example , in channels such as @xmath116 , the four - fermion correction turns out to be negligible for energies away from the @xmath2-threshold ; @xmath117 can therefore be completely neglected @xcite .",
    "the above inclusive approach has serious limitations .",
    "the most important is that it is not fully exclusive ( event per event ) .",
    "consequently it can not be used in a data analysis that takes the detector simulation properly into account . on the other hand",
    ", this approach can be useful for all kinds of theoretical studies .",
    "note that this method was used in ref .",
    "@xcite for combining the results of koralw and grc4f .",
    "the inclusive method of the previous subsection was not _",
    "event per event _ because the mc events of koralw and yfsww3 were at different random points of the full phase space .",
    "consequently , the mc weights of the events from these two generators were also not calculated at the same points of the phase space ; therefore , we could not take their ratios ( apply correcting weights ) .    in this section",
    ", we shall describe another , more sophisticated , method of combining fully exclusive differential distributions of koralw and yfsww3 , in which both programs work with _ the same _ events , that is the same random points in the @xmath80-dimensional phase space .",
    "one of the mc programs , the master mc , generates the event and the other one , the slave mc , instead of generating its own event , reads the event of the master mc and calculates the correction weight due to some missing effect , for instance the @xmath1 correction or the correction due to the missing background diagrams .",
    "the transfer of the events from one program to the other can be organized with the help of the external device ( disk or tape ) or `` in flight '' . in the first case , the master mc writes the events on the disk and the slave mc reprocesses the events read from the disk .",
    "writing the events on the disk is done routinely in the data analysis anyway . for the description of the second , `` in - flight '' method , see the next subsection .",
    "the above procedure of cross - correcting the distributions / events from one mc program with the help of the second mc is not the only one , and is not the simplest one either .",
    "a similar procedure is possible , even with a single mc , when the events are stored on the external device and later on , in a separate run , they are corrected by _ the same _ mc program with the correcting weight due to the change of the input parameters ( typically the @xmath2-mass ) .",
    "this is very useful for the data analysis , where the constant - weight mc events from a physics mc event generator , like koralw or yfsww3 , are processed through the detector simulation . in this way the cpu - time - consuming reprocessing of the detector simulation is avoided .",
    "it also allows fitting the sm parameters to experimental data ( typically the @xmath2-mass ) with full control of the effects due to the detector acceptance .",
    "one has to remember , however , that the above procedure provides us essentially with the variable - weight events .",
    "if the correction weight is fluctuating very mildly , then this is not a problem ; otherwise , the strongly fluctuating correction weight would lead to higher statistical errors in the calculated observables , and would inhibit the optional transformation of variable - weight events into constant - weight events .    as seen from the above discussion",
    ", it is essential that the mc event generators can write / read the events into / from disk files .",
    "the appropriate tools for reading the events from the disk and calculating the correction weight due to the change of the input parameters and the change of the scattering matrix element have been introduced in the version 1.51 of koralw program presented in this paper , as described in the next section , and in the yfsww3 program as well - physics data analysis .",
    "] , see ref .",
    "let us now describe , in more detail , the procedures of cross - correcting the distributions / events from one mc program with the help of the second .",
    "there are several scenarios for such a procedure following eqs .",
    "( [ + cc03])([k*y ] )  they differ in the choice of the master / slave mc ( koralw or yfsww3 ) and in the way the correction weight is constructed ( additive or multiplicative ) .",
    "let us look closer at the `` symmetric '' scheme of eq .",
    "( [ + cc03 ] ) .",
    "it consists of the following steps :    1 .",
    "generate the variable- or constant - weight events according to the fully exclusive distribution @xmath99 , using either koralw or yfsww3 , and store all events on the disk .",
    "2 .   calculate the correction @xmath85 of eq .",
    "( [ eq - cor4f ] ) using koralw and write it in the disk record for each event .",
    "3 .   calculate the correction @xmath86 of eq .",
    "( [ eq - coro1 ] ) using yfsww3 , construct the correction weight @xmath118 , and write it in the disk - record of each event .",
    "( in fact , we have to use the substitute @xmath105 of eq .",
    "( [ eq : deltanlapprox ] ) , since the @xmath86 is not provided by yfsww3 version 1.16 ) .",
    "optionally reject events according to @xmath119 .",
    "of course , it is not really necessary to reprocess the mc events twice ( total of three runs ) and one may follow the simpler `` asymmetric '' procedure @xmath109 in which yfsww3 is the master mc :    1 .",
    "generate the variable- or constant - weight events according to the fully exclusive distribution @xmath94 using yfsww3 . store each event on the disk , together with the value of @xmath86 .",
    "2 .   in the second run , for each event use koralw in order to calculate the correction weight , the bracketed expression in eq .",
    "( [ y+k ] ) .",
    "optionally , reject the events according to the correction weight .",
    "the analogous scenario @xmath112 in which koralw is the master mc looks as follows :    1 .",
    "generate the variable- or constant - weight events according to the fully exclusive distribution @xmath103 using koralw . store each event on the disk , together with the value of @xmath85 .",
    "2 .   in the second run , for each event use yfsww3 in order to calculate the correction weight , the bracketed expression in eq .",
    "( [ k+y ] ) .",
    "optionally , reject the events according to the correction weight .",
    "alternatively , one may follow the multiplicative schemes of eqs .",
    "( [ * cc03])([k*y ] ) .",
    "as indicated , the above methods provide , in principle , a sample of constant - weight events .",
    "however in practice , this is not convenient , as one would have to deal with millions of variable - weight events stored together with their weights , and then to be reprocessed again to include the second correction , and finally to undergo the final rejection . moreover , for the moment only koralw is capable of continuing the event construction ( rejection , decay libraries , etc . )",
    "based on the input events stored on the external device .",
    "yfsww3 version 1.16 can only provide the correction weight .",
    "consequently , the only practical option to provide constant - weight events is the one in which koralw is the master mc .",
    "the use of the variable - weight events from the master mc is , however , possible in the scenario in which the master and the slave programs exchange the events in - flight , without recording them in the ( large ) disk files , see the following subsection .",
    "one of the most important results of the modifications of koralw version 1.51 is the possibility of a direct inclusion of the @xmath1 nl corrections calculated by the yfsww3 - 1.16 program into the process of the event generation by koralw .",
    "this is not done , however , by simply compiling and linking them together into a single executable , because the source codes of yfsww3 and koralw share a number of subroutines , common blocks and libraries with the same names , but with different contents .",
    "it is therefore practically impossible ( without major rewriting of the two source codes ) to merge the two programs into one at the level of the fortran source code .",
    "such a merge might also obstruct a further independent development of the programs .",
    "once both programs have acquired capabilities of exchanging the events and reprocessing them using the disk file as an intermediate medium , we have noticed that one can follow another approach , avoiding major rewriting of both programs , based on the unix / linux standard facility called the `` names pipes '' or the fifo mechanism .",
    "it allows two _ independent _ processes to communicate `` in real time '' through the `` named pipe '' , into which one process writes and from which the other reads , in turn .    in our case ,",
    "the scheme is such that koralw generates an event and writes its four - momenta into the fifo special file .",
    "these four - vectors are then read by yfsww3 , which is running in parallel ( concurrently ) and calculates the correcting @xmath1 nl weight , or more precisely the @xmath86 quantity , and then writes it to another fifo special file . in the final step",
    ", koralw reads this weight from the fifo special file , includes it in the total weight and finishes the event construction .",
    "this concurrent monte carlo koralw@xmath4yfsww3 scheme is schematically depicted in fig .",
    "[ fig : flow1 ] .    as a result",
    ", koralw can now , for example , perform the rejection and provide the _ constant - weight _ events with both the four - fermion background correction @xmath85 and the @xmath1 nl correction @xmath86 to the @xmath2-pair production and decay process taken into account .",
    "another application of such a scheme is the reweighting of events with both the four - fermion and @xmath1 corrections included simultaneously in order to perform `` monte carlo fits '' .    to summarize it shortly : from the point of view of the user , the cmc program koralw@xmath4yfsww3 works as a single monte carlo generator with all its normal features .",
    "this might be , to our knowledge , the first practical working implementation of such a scheme to the problem of the mc event generation in particle physics .    remarkably , the efficiency of the cmc koralw@xmath4yfsww3 in generating the _ constant - weight _ events according to the four - fermion background and the @xmath1 nl corrected distributions is not bad . in principle",
    "one could worry that an additional yfsww3 weight of the order of a few tens would translate into a similar increase of the maximal weight for rejection and , consequently , into a similar increase of the cpu time needed for the event generation .",
    "surprisingly , however , this is not true ! in the additive mode of combining koralw and yfsww3 the increase of the maximal weight that we recorded on the @xmath120 sample of variable - weight events was @xmath121 , for example .",
    "overweighted events were of two topologies .",
    "the first topology was strongly @xmath3-like with multiple , i.e.  at least triple , soft bremsstrahlung and led to overweights below 2 ( in an extreme case with seven photons , we recorded an overweight of 4 ) .",
    "the other topology was very far from @xmath3-like ( small values of the @xmath64 , @xmath65 invariant masses ) and gave the highest over - weights ( @xmath122 ) . in the latter cases the use of the on - shell @xmath1 nl library is less justified anyway and these few events",
    "can simply be discarded , instead of increasing the maximal weight for the rejection . why was the overweighting so small ?",
    "because in koralw to cover the four - fermion - dominated configurations the maximal weights are adjusted higher than what is needed by the @xmath3-like configurations .",
    "this extra safety margin turns out to be sufficient to absorb fluctuations of the additional @xmath3-like @xmath1 nl weights .",
    "the situation is different for the multiplicative prescription . here",
    ", the big four - fermion weight is multiplied by the @xmath1 nl correction , on occasion leading to overweights of the expected order of a few tens .",
    "this happens , typically , for a very hard bremsstrahlung photon , with energy of the order of 40  gev .",
    "however , as we have explained earlier , the @xmath1 correction for the configurations far away from being @xmath3-like is less justified and the overweights provide merely another reason for using the additive scheme rather than the multiplicative one .",
    "let us add a few additional comments on the koralw@xmath4yfsww3 cmc :    1 .",
    "the corrections can be combined in an additive or multiplicative way , according to the discussion from the previous subsections .",
    "2 .   one may also wonder about other possible source of efficiency loss caused by running two programs at the same time on a single processor .",
    "our experience shows , however , that there is very little loss due to an alternate suspension of the programs , performed automatically by the operating system ( in the unix kernel ) .",
    "the big advantage of the fifo special files is that they are in practice done by the operating system `` in flight '' , in virtual memory .",
    "consequently , there is no need for a huge amount of disk space to store all the millions of generated events needed for generating the sample of the constant - weight events .",
    "4 .   in order to introduce the `` named pipes '' , there is _ no need to modify _ in the fortran source code of either of the programs .",
    "the only change is the replacement of regular input / output files by the special fifo files , done at the level of the operating system and not in the fortran source code .",
    "we give an example of such a procedure in the demo run of the cmc koralw@xmath4yfsww3 , which can be invoked through : make kandy ( kandy stands for `` k and y '' ) .",
    "it creates two special fifo files 4vect.data.special and wtext.data.special that will serve for transmitting the four - momenta and the weights between the programs .",
    "these special fifo files are then linked to the appropriate input / output file names for koralw and yfsww3 in their local working directories .",
    "finally , the two programs are executed with the _ common default data cards _ !",
    "they are modified later on by the user cards located in the local working directory .",
    "the proposed scheme of cmc koralw @xmath123 yfsww3 @xmath123 koralw is not the only possibility of realizing the four - fermion background and @xmath1 nl corrected events .",
    "alternatively , one can construct the cmc the other way around : yfsww3 @xmath123 koralw @xmath123 yfsww3 ( symbolically yfsww3@xmath4koralw ) .",
    "in general , this direction has a serious drawback ",
    "the four - fermion correction weight from koralw can be very high , especially for the final states with electrons , spoiling the convergence of the series .",
    "on the contrary , the yfsww3 weight for the @xmath1 nl correction is well behaved and for lep2 energies it seems not to exceed a few tens . however ,",
    "if the phase space for generation were restricted to @xmath3-like configurations the situation would be reversed ",
    "the four - fermion correction weight would be smaller than the @xmath1 nl one and the scheme yfsww3@xmath4koralw would be a good choice .    we conclude this section with two technical remarks on the fifo mechanism .",
    "they may prove useful in practical implementations of fifos .    1 .",
    "the fifo special files must be created ( by the command `` mkfifo _ file_name _ '' ) on a _ local _ disk of a computer on which the program will be executed .",
    "this means in particular that it can not be created directly on the afs file system or even on a mounted remote file system .",
    "the good location is , for example , the /tmp directory .",
    "after creation , however , the fifo special file can be symbolically linked to any location in the mounted or afs file systems .",
    "the fifo special file itself requires only 4 kb of disk space .",
    "2 .   in certain configurations of the data transfer through named pipes",
    ", it may be at some point necessary to flush the output buffers of the programs .",
    "the syntax of the fortran command for that operation is call flush(_unit_number _ ) .      our present modest application of the parallel processing to mc event generation",
    "is schematically depicted in fig .",
    "[ fig : flow1 ] .",
    "note that on a dual - processor machine , at a certain moment koralw is calculating the four - fermion matrix element while yfsww3 is _ simultaneously _ calculating the electroweak corrections . in the present form ,",
    "however , koralw@xmath4yfsww3 does not really allow us to profit fully from running on the multiprocessor machine .",
    "it is mainly because the calculation of the nl correction takes on average longer than the calculation of the four - fermion correction ; as a result the koralw process is sometimes waiting for yfsww3 before the final reprocessing of the event .",
    "also hadronization by jetset , which takes a substantial amount of cpu time and is independent from koralw and yfsww3 , is not delegated to a separate process , but included as a part of koralw .    in fig .",
    "[ fig : flow2 ] we show another possible future concurrent arrangement , which would work more efficiently on the multiprocessor installation . here",
    ", four independent processes work `` in the cascade '' , in such a way that when the last process ( pythia ) finishes to hadronize an event , the first process may have already started to construct the next event .",
    "a similar solution was proposed in ref .",
    "@xcite , however limited to a solution in which mc generators communicate through disk files ( database ) .",
    "of course , there are many other possible variants of such a scheme ",
    "the best one should be adapted to a particular mc generation problem and to available hardware .",
    "the important advantage of such a concurrent arrangement is that it provides `` encapsulation '' for the `` dusted deck programs '' , without the need of laboriously translating them to object - oriented c++ or another oo programming language .",
    "it also allows an easy combination of programs written in different programming languages .",
    "this may prove to be in practice a rather effective solution , before eventual emergence of the next generation of event generators , written from scratch in the oo environment .",
    "although the basic idea of reweighting mc events , produced either by the same mc event generator or the other one , is relatively simple , its actual implementation has to be tested very carefully .",
    "such tests are the principal aim of the present section .",
    "we shall concentrate on the reweighting of mc events produced by koralw using the correction weight produced by yfsww3 , that is on the `` asymmetric '' procedure @xmath112 described in subsection [ sec : merg - exclu ] . before the programming tools for such a scenario can be fully trusted , we have to perform certain important introductory numerical tests :    ( a ) : :    we are going to check numerically that the common reference    differential distributions @xmath74 generated by koralw    and yfsww3 are the same .",
    "( b ) : :    for the distribution    @xmath124    we are going to test the reweighting tools of koralw and yfsww3 :    +    ( b.1 ) ; ;      self - test of yfsww3 : we shall compare results from the standard run      of yfsww3 and from the run @xmath125 in which      @xmath126 is obtained by reweighting events      generated according to @xmath74 .",
    "( b.2 ) ; ;      calibration of @xmath109 using yfsww3 : we shall      compare results of @xmath109 ( in which events      generated according to @xmath74 by koralw are      reweighted with the help of yfsww3 ) with the direct results of      yfsww3 and with the results of the @xmath125 scheme .    in both kinds of tests , numerical results for the cross sections and the key distributions , for instance the distributions of the @xmath2 mass , @xmath2 scattering angle and photon energy , should agree within statistical errors .",
    "we shall use the approximate version of the correcting weight ( @xmath127 from yfsww3 ) .",
    "test ( b ) will provide the measure of the quality of the approximation .    in all numerical tests in this section , the input parameter set - up and the definitions of event acceptances are that of ref .",
    "@xcite , unless stated otherwise . for the convenience of the reader , let us recall briefly these acceptance conditions .      1 .",
    "we required that the polar angle of any charged final - state fermion with respect to the beams be @xmath128 .",
    "all photons within a cone of @xmath129 around the beams were treated as invisible , i.e. they were disregarded in the calculation of any observable .",
    "3 .   the invariant mass of a visible photon with each charged final - state fermion , @xmath130 , was calculated , and the minimum value @xmath131 was found .",
    "if @xmath132 or if the photon energy @xmath133gev , the photon was combined with the corresponding fermion , i.e. the photon four - momentum was added to the fermion four - momentum and the photon was discarded .",
    "this was repeated for all visible photons .",
    "+ in our numerical tests we used two values of the recombination cut : @xmath134 let us remark that we have changed here the labeling of these recombination cuts from the slightly misleading bare and calo names used in ref .  @xcite .",
    "this change allows us to reserve the bare name for a truly bare setup ( without any recombination ) .",
    "the integrated cross sections presented here were obtained without any cuts ( labeled in the tables `` no cuts '' ) or with the cut no .  1 from the above acceptance conditions ( labeled in the tables `` with cuts '' ) .       description & program & @xmath135[fb ] & @xmath136[fb ] to 0.4 cm & @xmath137 $ ] & @xmath138 $ ] & @xmath139 $ ] + & yfsww3 & @xmath140 & @xmath141 &  &  & @xmath142 + @xmath143 & koralw & @xmath144 & @xmath145 & @xmath146&@xmath147 &  + 200 gev & ( y@xmath148k)/y&@xmath149 & @xmath149 &  &  &  + & yfsww3 & @xmath150 & @xmath151 &  &  & @xmath152 + @xmath153 & koralw & @xmath154 & @xmath155 & @xmath156 & @xmath156 &  + 200 gev & ( y@xmath148k)/y&@xmath157 & @xmath158 &  &  &  + & yfsww3 & @xmath159 & @xmath160 &  &  & @xmath161 + @xmath162 & koralw & @xmath163 & @xmath164 & @xmath165 & @xmath166 &  + 200 gev & ( y@xmath148k)/y&@xmath157 & @xmath167 &  &  &  +   + & yfsww3 & @xmath168 & @xmath169 &  &  & @xmath170 + @xmath143 & koralw & @xmath171 & @xmath172 & @xmath146 & @xmath147 &  + 200 gev & ( y@xmath148k)/y&@xmath173 & @xmath174 &  &  &  + & yfsww3 & @xmath175 & @xmath176 &  &  & @xmath177 + @xmath153 & koralw & @xmath178 & @xmath179 & @xmath180 & @xmath180 &  + 200 gev & ( y@xmath148k)/y&@xmath173 & @xmath167 &  &  &  + & yfsww3 & @xmath181 & @xmath182 &  &  & @xmath183 + @xmath162 & koralw & @xmath184 & @xmath185 & @xmath186 & @xmath187 &  + 200 gev & ( y@xmath148k)/y & @xmath188&@xmath158 &  &  &  +    the first test of type ( a ) is presented in table  [ tab : yr - xtot - withcuts-200 ] , where we check whether the integrated reference cross section @xmath189 defined in the previous section is numerically the same when calculated by koralw and yfsww3 .",
    "it is done for three examples of the cc11 class process ( see ref .",
    "@xcite for its definition ) at the center - of - mass system ( cms ) energy @xmath190  gev .",
    "in addition to the standard @xmath189 of the previous section , we also show results for @xmath135 , which is a variant of @xmath189 in which the isr is switched off . as already indicated , it is the so - called cc03 process ( in the t  hooft  feynman gauge ) .",
    "as we see in table  [ tab : yr - xtot - withcuts-200 ] , the relative differences of the reference cross sections @xmath189 and @xmath135 of yfsww3 and koralw are below @xmath191 .",
    "this test indicates that the reference differential cross section @xmath74 is implemented correctly through the corresponding mc weight in both koralw and yfsww3 . in table",
    "[ tab : yr - xtot - withcuts-200 ] , we also indicate the size of the correction @xmath192 due to the background diagrams and @xmath193 due to the missing , which are defined as follows : @xmath194 note that in table  [ tab : yr - xtot - withcuts-200 ] the final - state qcd correction is excluded and @xmath195 .",
    "see also ref .",
    "@xcite for a description of the qcd correction . ] from @xmath192 ( i.e.  @xmath192 is divided by @xmath196 ) .",
    "note also that the coulomb correction is taken here without screening .     description & program & @xmath135[fb ] & @xmath197[fb ] to 0.4 cm & @xmath198 $ ] & @xmath138 $ ] & @xmath139 $ ] + & yfsww3 & @xmath199 & @xmath200 &  &  & @xmath201 + @xmath153 & koralw & @xmath202 & @xmath203 & @xmath204 & @xmath205 &  + 161 gev & ( y@xmath148k)/y & @xmath206 & @xmath207 &  &  &  +   + & yfsww3 & @xmath208 & @xmath209 &  &  & @xmath201 + @xmath153 & koralw & @xmath210 & @xmath211 & @xmath204 & @xmath205 &  + 161 gev & ( y@xmath148k)/y & @xmath212 & @xmath207 &  &  &  +   + & yfsww3 & @xmath213 & @xmath214 &  &  & @xmath215 + @xmath153 & koralw & @xmath216 & @xmath217 & @xmath218 & @xmath218 &  + 500 gev & ( y@xmath148k)/y & @xmath219 & @xmath220 &  &  &  + -like & koralw & @xmath216 & @xmath221 & @xmath218 & @xmath218 &  + extrapol . & ( y@xmath148k)/y & @xmath219 & @xmath220 &  &  &  +   + & yfsww3 & @xmath222 & @xmath223 &  &  & @xmath224 + @xmath153 & koralw & @xmath225 & @xmath226 & @xmath227 & @xmath228 &  + 500 gev & ( y@xmath148k)/y & @xmath219 & @xmath229 &  &  &  + -like & koralw & @xmath225 & @xmath230 & @xmath227 & @xmath228 &  + extrapol . & ( y@xmath148k)/y & @xmath219 & @xmath219 &  &  &  +    in table  [ tab : yr - xtot - withcuts-161 - 500 ] , we present the analogous ( a)-type test for the integrated cross sections as in table  [ tab : yr - xtot - withcuts-200 ] but for two other cms energies : close to the @xmath3-threshold , 161  gev , and at 500  gev , within the range of the future linear collider . as we see , the result of the test is again positive .",
    "the integrated reference cross section @xmath189 is again the same from both yfsww3 and koralw to within @xmath231 . in table",
    "[ tab : yr - xtot - withcuts-161 - 500 ] , we also show the effect of switching from the extrapolation / reduction procedure of koralw to that of yfsww3 ( which is the source of the largest discrepancy of @xmath232 ) .",
    "one can verify that the size of this effect is at the sub - per mille level and appears only in the case with imposed cuts .",
    "for the case without any cuts there is no difference in the total cross section , as expected .",
    "note that table [ tab : yr - xtot - withcuts-161 - 500 ] shows the case of @xmath233  gev . at @xmath190  gev , there is no difference between these two extrapolation procedures .              ( 1600,1480 ) ( 450,1430)(0,0)[cb]*cal05 * ( 1250,1430)(0,0)[cb]*cal25 * ( 850,1430)(0,0)[cb]@xmath234 ( 0,700)(0,0)[lb ] ( 0 , 0)(0,0)[lb ] ( 800,700)(0,0)[lb ] ( -300 , 620)(0,0)[l ] @xmath237 $ ] ( 800 , 0)(0,0)[lb ]    ( 1600,1480 ) ( 450,1430)(0,0)[cb]*cal05 * ( 1250,1430)(0,0)[cb]*cal25 * ( 850,1430)(0,0)[cb]@xmath234 ( 0,700)(0,0)[lb ] ( 0 , 0)(0,0)[lb ] ( 800,700)(0,0)[lb ] ( -300 , 620)(0,0)[l ] @xmath238 $ ] ( 800 , 0)(0,0)[lb ]        s. jadach _",
    "_ , the monte carlo event generator yfsww3 version 1.16 for w - pair production and decay at lep2/lc energies , preprint cern - th/2001 - 017 , uthep-01 - 0101 , january 2001 ; hep - ph/0103163 ; submitted to comput .  phys .",
    "commun .",
    "j. alberty _",
    "et  al . _ , in _",
    "perspectives for new detectors in future supercolliders , roceedings of the workshop of the infn eloisatron project , october 1989 , erice , italy _ , edited by l. cifarelli , r. wigmans , and t. ypsilantis ( world scientific , singapore , 1989 ) , p.  170 .",
    "d. bardin _",
    "_ , in _ proceedings of the zeuthen workshop on elementary particle theory - physics at lep200 and beyond , teuplitz , germany _ , edited by t. riemann and j. blmlein ( nucl .",
    "suppl . ) , * b37 * , 1994 ) ."
  ],
  "abstract_text": [
    "<S> the version 1.51 of the monte carlo ( mc ) program koralw for all @xmath0 processes is presented . </S>",
    "<S> the most important change from the previous version 1.42 is the facility for writing mc events on the mass storage device and reprocessing them later on . in the reprocessing parameters of the standard model </S>",
    "<S> may be modified in order to fit them to experimental data . </S>",
    "<S> another important new feature is the possibility of including complete @xmath1 corrections to double - resonant @xmath2-pair component - processes in addition to all background ( non-@xmath3 ) graphs . </S>",
    "<S> the inclusion is done with the help of the yfsww3 mc event generator for fully exclusive differential distributions ( event per event ) . </S>",
    "<S> technically , it is done in such a way that yfsww3 runs concurrently with koralw as a separate slave process , reading momenta of the mc event generated by koralw and returning the correction weight to koralw . </S>",
    "<S> the latter introduces the @xmath1 correction using this weight , and finishes processing the event ( rejection due to total mc weight , hadronization , etc . ) . the communication between koralw and yfsww3 </S>",
    "<S> is done with the help of the fifo facility of the unix / linux operating system . </S>",
    "<S> this does not require any modifications of the fortran source codes . from the user s point of view , the resulting concurrent mc event generator koralw@xmath4yfsww3 looks as a regular single mc event generator with all the standard features .    </S>",
    "<S> * cern - th/2001 - 040 + uthep-01 - 0102 *    the monte carlo program koralw version 1.51 and + the concurrent monte carlo koralw@xmath4yfsww3 + with all background graphs and + first - order corrections to @xmath2-pair production@xmath5    * s. jadach@xmath6 , * * w. paczek@xmath7 , * * m. skrzypek@xmath8 , * * b.f.l . </S>",
    "<S> ward@xmath9 * _ and _ * z. was@xmath8 * _ @xmath10cern , theory division , ch-1211 geneva 23 , switzerland , _ + _ @xmath11institute of nuclear physics , ul . </S>",
    "<S> kawiory 26a , 30 - 055 cracow , poland , _ + _ @xmath12department of physics and astronomy , + the university of tennessee , knoxville , tn 37996 - 1200 , usa _ + _ </S>",
    "<S> @xmath13slac , stanford university , stanford , ca 94309 , usa _ + _ @xmath14 institute of computer science , jagellonian university , + ul . nawojki 11 , cracow , poland _    </S>",
    "<S> _ to be submitted to computer physics communications _    </S>",
    "<S> * work supported in part by the polish government grant kbn 5p03b09320 , the us doe contracts de - fg05 - 91er40627 and de - ac03 - 76sf00515 , the european commission 5-th framework contract hprn - ct-2000 - 00149 , nato grant st.clg.977761 and the polish - french collaboration within in2p3 through lapp annecy .    * cern - th/2001 - 040 + </S>",
    "<S> april 2001 *    * new version summary *    _ title of the program : _ koralw , version 1.51 </S>",
    "<S> .    0.2 cm _ reference to original program : _ comput . </S>",
    "<S> . commun . </S>",
    "<S> * 94 * ( 1996 ) 215 ; * 119 * ( 1999 ) 272    0.2 cm _ computer : _ any computer with the fortran 77 compiler under unix or linux operating system    0.2 cm _ operating system : _ unix , linux version 6.x and 7.x    0.2 cm _ programming language used : _ fortran 77    0.2 cm _ high - speed storage required : _ </S>",
    "<S> @xmath15 25 mb    0.2 cm _ keywords : _ + radiative corrections , initial - state radiation ( isr ) , @xmath1 electroweak ( ew ) corrections , leading - logarithmic ( ll ) approximation , heavy boson @xmath2 , four - fermion processes , monte carlo ( mc ) simulation / generation , quantum electrodynamics ( qed ) , quantum chromodynamics ( qcd ) , yennie  frautschi  suura ( yfs ) exponentiation , standard model ( sm ) , lep2 , next - generation linear colliders ( lc ) .    0.2 cm _ nature of the physical problem : _ + the precise study of @xmath2-pair production and decay at lep2 requires both non - double - resonant and @xmath1 corrections . </S>",
    "<S> so far each of these corrections is available as a separate monte carlo program and there is no monte carlo that could simulate in a complete way both effects at the same time . </S>",
    "<S> such a mc event generator would be of importance for example for apparatus simulations or monte carlo based fits . </S>",
    "<S> the previous version of koralw @xcite included _ all _ non - double - resonant corrections to _ all _ double - resonant four - fermion processes in @xmath16 annihilation . </S>",
    "<S> the present version 1.51 allows , for the first time ever , the inclusion on an _ event - per - event basis _ of the respective @xmath17 corrections generated at the same time by the independently running monte carlo program yfsww3 @xcite , as well as a reweighting of any earlier generated events with modified parameter sets .    0.2 cm _ method of solution : _ + the monte carlo method used to simulate the all four - fermion final - state processes in the @xmath16 collisions in the presence of multiphoton initial - state radiation has not changed since version 1.42 @xcite . adding the @xmath17 corrections generated by yfsww3 </S>",
    "<S> is done at the level of the unix / linux operating system with the help of the fifo mechanism ( `` named pipes '' ) .    0.2 cm _ restrictions on the complexity of the problem : _ + for koralw as in version 1.42 @xcite ; for koralw@xmath4yfsww3 as in @xcite and @xcite .    0.2 cm _ typical running time : _ + approximate times on a pc pentium iii @ 800 mhz for cuts as described in this article : + 5 minutes per 1000 constant - weight ccall events ( koralw stand - alone ) + 50 minutes per 1000 constant - weight ccall events with the @xmath1 correction ( the cmc koralw@xmath4yfsww3 , max .  </S>",
    "<S> weight for rejection increased by a factor 2 ) . </S>"
  ]
}
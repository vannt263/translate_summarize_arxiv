{
  "article_text": [
    "we are going to consider two search tasks asking us to find formulas with certain properties ( and in section [ pairs ] we add one more ) .",
    "both are more complex than the mere task to construct hard tautologies for a given proof system that was discussed in the introduction . to motivate them",
    "we shall describe two thought situations in proof complexity ; the search tasks are then abstract ( and simplified ) versions of those .",
    "first assume that you can prove ( i.e. zfc can ) that @xmath28 and thus , in particular , super - polynomial lower bounds for all proof systems .",
    "for a proof system @xmath0 and a constant @xmath16 denote by @xmath29 the statement @xmath30\\ ] ] formalizing a polynomial lower bound for @xmath0 with degree @xmath31 .",
    "it is easy to see that for any decent proof system ( see section [ 5 ] for a formal definition of decency ) , as long as we can prove some specific polynomial lower bound we can also prove its soundness .",
    "the decency assumption allows to extend a proof of a falsifiable formula @xmath32 to a proof of @xmath33 and further to a proof of any @xmath12 , all in polynomial time .",
    "but by a simple application of gdel s theorem zfc is not able to prove the soundness of all proof systems .",
    "this suggests that we should be proving lower bounds conditioned upon the assumption that @xmath0 is indeed a cook - reckhow proof system .",
    "if @xmath0 were not complete we do not need to bother with lower bounds for it , so the interesting clause of the cook - reckhow definition is the soundness and we are lead to implications : @xmath34 where @xmath35 is a universal sentence ( in the language @xmath36 of section [ 2 ] ) formalizing that any formula with a @xmath0-proof must be a tautology .",
    "now we simplify the situation a bit more .",
    "let @xmath37 be a circuit in @xmath3 variables @xmath38 and @xmath39 variables @xmath40 which we interpret as the provability relation of a proof system restricted to formulas of size @xmath3 and proofs of size at most @xmath41 .",
    "this motivates the following * search task * @xmath42 defined for any constant @xmath16 :    * input : @xmath1 and a size @xmath43 circuit @xmath37 in @xmath3 variables @xmath38 and @xmath39 variables @xmath40 * required output : either a size @xmath3 falsifiable formula @xmath32 such that @xmath44 is satisfiable or a size @xmath3 tautology @xmath12 such that @xmath45 is unsatisfiable .",
    "the output of @xmath46 thus certifies that @xmath47 is not a non - deterministic circuit ( with input @xmath48 and non - deterministic variables @xmath49 ) that accepts @xmath5 . in other words ,",
    "the output either witnesses that @xmath47 does not correspond to a sound proof system or that the proof system admits a lower bound .",
    "the provability relation of a proof system restricted to size @xmath3 formulas and size @xmath41 proofs can be computed by circuits of size @xmath50 . in the formulation of the problem",
    "we have represented the @xmath51 constant by @xmath31 as well .",
    "in addition * cert * ignores the uniformity of such circuits corresponding to a particular proof system ( they can be constructed in log space from @xmath52 ) .",
    "this is in line with the prevailing approach in complexity theory to reduce uniform problems to non - uniform finite combinatorial problems .",
    "finally note that in our simplification we are taking the reflection principle just for the proof lengths corresponding to the lower bound we should witness ; this make sense due to the non - uniformity .",
    "the second search task we shall consider is motivated by another thought experiment .",
    "assume that you can prove that no optimal proof system exists and , in fact , that you have a uniform construction that from a proof system @xmath0 produces a stronger proof system @xmath53 ( i.e. not simulable by @xmath0 ) .",
    "for definiteness , assume that there is one oracle polynomial time machine that for all @xmath0 defines @xmath53 when having the oracle for @xmath0 .",
    "then we expect to be able to prove @xmath54 and , most importantly , that it is stronger @xmath55\\ ] ] where @xmath56 is a size @xmath57 tautology formalizing the soundness of @xmath53 w.r.t .",
    "all proof of size at most @xmath3 ( we assume for simplicity that a proof is always at least as long as the formula it proves so one parameter suffices ) . see a similar formula in ( [ m0 ] ) in the proof of lemma [ 5.3 ] .",
    "any decent proof system can simulate @xmath53 if it can use @xmath56 as extra axioms ( see section [ 5 ] ) . in the following problem",
    "@xmath6 represents a bit more adding @xmath6 is equivalent to adding the reflection principles for @xmath58 .",
    "] generally any extra axiom .",
    "let @xmath0 be a proof system and @xmath59 be constants .",
    "consider the following promise * computational task * @xmath60 :    * input : @xmath1 and a tautology @xmath6 such that @xmath61 * required output : any size @xmath3 tautology @xmath8 that has no proof in proof system @xmath62 , @xmath0 augmented by @xmath6 as an extra axiom scheme will be defined in section [ 5 ] . ] , of size less than @xmath9 .",
    "the requirement that the size of @xmath8 is exactly @xmath3 is just for a technical convenience ; we could allow any interval @xmath63 $ ] instead .",
    "let @xmath64 be an injective function such that @xmath65 and let @xmath66 be a boolean function .",
    "the * nisan - wigderson generator * @xmath67 is defined using the notion of a design .",
    "a @xmath68-design on @xmath69 $ ] is a set system @xmath70\\}_{i\\in [ m]}$ ] on @xmath69 = \\{1 , \\dots , n\\}$ ] such that :    * @xmath71 , for all @xmath72 , * @xmath73 , for all @xmath74 .    the @xmath72-th bit of @xmath75 is computed by @xmath76 from the @xmath41-bit string @xmath77 , where @xmath78 and @xmath79 is the restriction of @xmath80 to @xmath81 . in the future the parameter @xmath41 will be determined by @xmath82 and we shall denote the restriction @xmath80 as well .",
    "nisan and wigderson@xcite showed that there are such designs for a wide range of parameters @xmath83 and that one can construct them uniformly and feasibly . in particular , we can fix the parameters as follows : @xmath84 where @xmath85 is arbitrary .",
    "we shall thus assume that fixing @xmath82 and @xmath86 fixes the other parameters and also some set system @xmath87 constructed from @xmath88 in time @xmath89 and with parameters meeting the requirements .",
    "in fact , we need that @xmath90 the design from ( * ? ? ?",
    "* l.2.5 ) has this property .    in our construction",
    "the function @xmath80 will be @xmath91 . by this",
    "we mean that it is the characteristic function of a language in @xmath91 .",
    "hence @xmath80 is defined by two @xmath27 predicates @xmath92 with @xmath93 and @xmath94 polynomial - time relations and @xmath31 a constant such that @xmath95 for @xmath96 .",
    "any string @xmath49 witnessing the existential quantifier will be called a witness for @xmath97",
    ".    we shall use results from @xcite and those do assume that @xmath80 has unique witnesses , meaning that for each @xmath98 there is exactly one witness for @xmath97 .",
    "a natural source of @xmath91 functions with unique witnesses are hard bits of one - way permutations .",
    "that is , for a polynomial time ( and intended to be one - way ) permutation @xmath99 we have @xmath100 where @xmath101 is a hard bit predicate for @xmath102 .",
    "the hardness of one - way permutations is measured as follows .",
    "a polynomial time permutation @xmath102 is defined to be * @xmath103 one way with security parameter @xmath104 * iff for all @xmath41 and any circuit @xmath47 with @xmath41 inputs and of size at most @xmath104 it holds : @xmath105 \\ \\le \\ \\epsilon(\\ell)\\ .\\ ] ] using the goldreich - levin theorem we may assume that such a permutation @xmath102 has a hard bit function @xmath101 .",
    "the details can be found in goldreich @xcite .",
    "our construction needs to assume that @xmath80 is hard in the sense of nisan and wigderson @xcite .",
    "they define @xmath80 to be @xmath106-hard if for every @xmath41 and every circuit @xmath107 with @xmath41 inputs and of size at most @xmath108 it holds : @xmath109\\ < \\   1/2 + \\epsilon/2\\ .\\ ] ] they define then the * hardness of @xmath80 * , denoted * @xmath110 * , to be the maximal @xmath111 such that the function is @xmath112-hard .",
    "this simplification makes sense when @xmath113 has the rate about @xmath114 as in nisan and wigderson @xcite .    in the proof complexity situations studied in @xcite the parameter",
    "@xmath111 plays the main role , with @xmath113 being primarily of the rate @xmath115 .",
    "this corresponds to the fact that in applications of the original nisan - wigderson generators @xmath116 is usually exponentially large but for various purposes of proof complexity ( especially lengths - of - proofs lower bounds ) the best choice would be at the opposite end : @xmath117 .",
    "this lead in @xcite to keeping @xmath113 and @xmath111 separate and using the notion of the approximating hardness ( defined there ) in place of @xmath110 . in this paper , however , we shall use only those results from @xcite where @xmath116 is exponentially large as in ( [ e1 ] ) and thus using the measure @xmath110 suffices here .",
    "a one - way permutation @xmath102 with a hard bit @xmath118 is * exponentially hard * iff it is @xmath119 one - way with security parameter @xmath120 .",
    "the hardness @xmath110 of @xmath80 is then @xmath120 as well .",
    "details of these constructions can be found in goldreich @xcite .",
    "we will use in sections [ 4 ] and [ pairs ] the hypothesis that an exponentially hard one - way permutation exists instead of the presumably weaker assumption that an @xmath91 function @xmath80 with unique witnesses and with exponential hardness @xmath121 exists .",
    "the only reason is that the former hypothesis is more familiar than the latter one .",
    "although the formulation of the search tasks * cert * and * find * may not suggests so explicitly this investigation resulted from a research program in proof complexity about the so called proof complexity generators and we shall use some ideas from this theory",
    ".    we shall start with a proof complexity conjecture of razborov ( * ? ? ? * conjecture 2 ) .",
    "take an arbitrary string @xmath122 that is outside of the range @xmath123 of @xmath124 .",
    "the statement @xmath125 is a @xmath126 property of @xmath127 and can be expressed by a propositional formula @xmath128 in the sense that @xmath129 the construction of the propositional translation of the @xmath126 statement is analogous to the usual proof of the np - completeness of sat .",
    "the details can be found in any of @xcite ) .",
    "note that the size of the formulas is polynomial in @xmath116 .",
    "* razborov s conjecture * says that these tautologies are hard for extended frege system ef for @xmath124 defined as above , with @xmath130 and based on an @xmath91 function @xmath80 that is hard on average for @xmath131 .",
    "pich @xcite proved the conjecture for all proof systems admitting feasible interpolation in place of ef .    in @xcite",
    "we have considered a generalization of the conjecture .",
    "we shall recall only one part of that generalization dealing with exponentially large @xmath116 ; in the other parts @xmath132 and they use the notion of approximating hardness of a function mentioned in the previous section .",
    "[ 2.1 ]    assume @xmath80 is an @xmath133 function with unique witnesses that has an exponential nisan - wigderson hardness @xmath134 .",
    "then there is @xmath135 such that for @xmath136 and for any infinite @xmath27 set @xmath137 that has infinitely many elements whose length equals to @xmath138 for @xmath139 it holds : @xmath140    let us observe that conjecture [ 2.1 ] has a proof complexity corollary including razborov s conjecture .",
    "[ 2.2 ]    let @xmath0 be any proof system .",
    "assume that conjecture [ 2.1 ] holds and that the nisan - wigderson hardness @xmath110 of an @xmath91 function @xmath80 with unique witnesses is @xmath141 .",
    "then there exists @xmath135 such that for all @xmath16 , the size of @xmath0-proofs of formulas",
    "@xmath128 for all large enough @xmath82 and all @xmath125 of size @xmath142 is bigger than @xmath143 .",
    "note that the set @xmath137 of all @xmath127 of lengths @xmath138 for @xmath144 for which @xmath128 has a @xmath0-proof of size at most @xmath143 is in @xmath27 .",
    "now we recall ( a part of ) the consistency result from @xcite concerning conjecture [ 2.1 ] .",
    "its technical heart is a lower bound on complexity of functions solving a certain search task associated with @xmath124 and that would , in principle , suffice for our purposes here . using the consistency",
    "result itself , however , seems to decrease the number of technicalities one otherwise needs to discuss .",
    "we first recapitulate a few basic definitions .",
    "cook @xcite has defined a theory pv whose language @xmath36 has a name for every polynomial - time algorithm obtained from a few basic algorithms by the composition and by the limited recursion on notation , following cobham s @xcite characterization of polynomial time .",
    "the details of the definition of @xmath36 can be found in @xcite but are not important here .",
    "in fact , neither is the theory pv itself as we shall work with the true universal first - order theory of @xmath145 in the language @xmath36 .",
    "we shall denote this theory @xmath146 , as in @xcite .",
    "note that @xmath146 contains formulas expressing the soundness of all proof systems .",
    "let @xmath80 be an @xmath147 function defined as in ( [ i0 ] ) .",
    "let us abbreviate by @xmath148 the open @xmath36 formula @xmath149 where @xmath150 is from the set system @xmath87 ( polynomial time definable from @xmath151 and @xmath48 ) and @xmath93 , @xmath94 are from ( [ e3 ] ) .",
    "we do not have a symbol in @xmath36 for the function on @xmath152 computed for @xmath144 on @xmath153 by @xmath124 as it is not a polynomial time function , and the function has to be defined .",
    "one possible formalization of the statement @xmath154 for @xmath155 and @xmath156 is then @xmath157 \\exists y ( |y| \\le \\ell^c)\\ g(w , z , x , y)\\ ] ] with @xmath31 from ( [ e3 ] ) .",
    "now we are ready to state the result from @xcite we shall need .    [",
    "3.1 ]    assume @xmath80 is an @xmath133 function with unique witnesses having the nisan - wigderson hardness @xmath110 at least @xmath141 .",
    "then there is @xmath135 such that for any @xmath27 set @xmath137 that has infinitely many elements whose length equals to @xmath138 for @xmath139 and defined by @xmath36 formula @xmath158 , with @xmath159 open , theory @xmath146 does not prove the universal closure of the formula @xmath160 where @xmath161 is the formula with variables @xmath162 @xmath163 and @xmath118 is the formula @xmath164 \\forall y ( |y| \\le \\ell^c ) \\",
    "\\neg g(w , z , x , y)\\ .\\ ] ]    this statement is in @xcite derived from a bit finer model - theoretic result .",
    "the argument we shall use to derive the hardness of * cert * applies to a more general situation which we describe now .    by an @xmath165 * algorithm * we shall mean two polynomial time predicates @xmath166 and @xmath167 and a constant @xmath16 similarly as in ( [ e3 ] ) but now with an extra argument @xmath168 for the non - uniform advice , and a sequence of advice strings @xmath169 such that @xmath170 ( w.l.o.g . we use constant @xmath31 also in the bound to the length of advice strings ) .",
    "we shall assume that @xmath171 \\oplus [ \\exists y ( |y| \\le |x|^c ) f_1(x , y , z)]\\ ] ] is valid where @xmath172 is the exclusive disjunction .",
    "thus an @xmath173 algorithm is an @xmath91 set of pairs @xmath174 of appropriate lengths augmented by a sequence of advice strings substituted for @xmath168 . in our situation it is more natural to talk about algorithms than sets as we shall be looking for `` errors they make '' .",
    "we shall denote such an algorithm @xmath175 where @xmath176 is the triple @xmath177 from ( [ h1 ] ) .",
    "for @xmath178 a language let us denote by @xmath179 the truth table of the characteristic function of @xmath178 on @xmath180 .",
    "if @xmath181 then the set @xmath182 of such strings @xmath183 is in @xmath27 and can be defined by an @xmath36 formula as @xmath184 with @xmath185 an open formula .",
    "any @xmath186 witnessing the existential quantifier for @xmath168 will be called a witness for @xmath187 .",
    "note that @xmath188 .    for",
    "a language @xmath181 and a triple @xmath189 as in ( [ h1 ] ) define the * search task @xmath190 * as follows :    * input : @xmath1 , string @xmath179 and a witness @xmath186 for @xmath191 , and a string @xmath192 such that @xmath193 * required output : a string @xmath194 such that @xmath189 using @xmath192 as an advice string makes an error on @xmath48 : @xmath195\\ ] ]    [ 4.1 ] assume that an exponentially hard one - way permutation exists .",
    "let @xmath178 be a language such that @xmath181 .",
    "then there exists a triple @xmath176 as in ( [ h1 ] ) such that no deterministic polynomial time algorithm can solve @xmath196 on all inputs for all sufficiently large lengths @xmath3 .",
    "assume that language @xmath178 satisfies the hypothesis of the theorem and let @xmath189 be any triple as in ( [ h1 ] ) .",
    "assume that @xmath197 is a deterministic polynomial time algorithm that attempts to solve @xmath198 on all inputs for all @xmath199 , for some @xmath200 .",
    "we are going to define a universal @xmath36 sentence @xmath201 that is true iff @xmath197 solves @xmath198 for all inputs for all @xmath199 .",
    "the sentence @xmath202 is the universal closure of : @xmath203 where @xmath107 is the formula @xmath204 with @xmath197 represented by an @xmath36 function symbol , and @xmath47 is the formula @xmath205\\ .\\ ] ] the following should be obvious :    * claim 1 : * _ algorithm @xmath197 solves @xmath198 for all inputs for all @xmath199 iff the sentence @xmath202 is true . _    we are going now to define a specific @xmath173 triple @xmath176 as in ( [ h1 ] ) such that @xmath202 will be false for all @xmath181 , all polynomial time algorithms @xmath197 and all @xmath200 .",
    "let @xmath102 be an exponentially hard one - way permutation with a hard bit @xmath118 .",
    "hence the function @xmath80 from ( [ i0 ] ) has the exponential hardness @xmath206 .",
    "the existence of such @xmath102 and @xmath118 is guaranteed by the hypothesis of the theorem .",
    "take @xmath135 provided by theorem [ 3.1 ] and put @xmath207 . using @xmath208 define an @xmath173 triple @xmath209 as n ( [ h1 ] ) as follows : put @xmath210 and for @xmath194 , @xmath211 , @xmath192 of size @xmath212 and @xmath213 define : @xmath214\\ .\\ ] ] in other words , on input @xmath48",
    "the algorithm computes the @xmath48-th bit of @xmath215 .",
    "* claim 2 : * _ for no @xmath181 , no polynomial time algorithm @xmath197 and no @xmath200 is the sentence @xmath202 true . _    to see this note that by substituting term @xmath216 for @xmath48 in @xmath217 and quantifying it existentially @xmath218)$ ] allows to deduce from @xmath202 the universal closure of @xmath219 from theorem [ 3.1 ] .",
    "hence , by that theorem , @xmath202 can not be true .",
    "claims 1 and 2 imply the theorem .",
    "we remark that the argument can be actually extended to rule out a larger class of algorithms @xmath197 : the so called student - teacher interactive computations of @xcite ( see also @xcite ) .",
    "let @xmath175 be as above .",
    "define circuits @xmath220 to be ( some canonical ) circuits with @xmath3 inputs @xmath48 and @xmath221 inputs @xmath49 that outputs @xmath222 iff @xmath223 holds .",
    "we can choose @xmath16 large enough so that @xmath224 has size at most @xmath43 .",
    "given @xmath1 , a time @xmath10 algorithm can compute the string @xmath225 ( as well as the witness for @xmath226 required in the general formulation of the theorem ) .",
    "such an algorithm is then polynomial in the size of @xmath225 . if @xmath12 is a solution to @xmath42 on input @xmath224 then either @xmath227 and @xmath228 or @xmath229 and @xmath230 is satisfiable , in which case @xmath146 implies that @xmath231 .",
    "in other words , an algorithm solving @xmath42 solves @xmath232 too .",
    "this yields the following statement as a corollary to theorem [ 4.1 ] .",
    "assume that an exponentially hard one - way permutation exists .",
    "then there is @xmath16 such that no deterministic time @xmath10 algorithm can solve @xmath42 on all lengths @xmath233 .",
    "the task * find * was formulated using the provability in a proof system and in this section we develop a technical tool allowing us to move from @xmath173 algorithms to proof systems .",
    "we shall recall first the notion of a * proof system with advice * as introduced by cook - k .",
    "* def.6.1 ) .",
    "it is defined as the ordinary cook - reckhow proof system ( cf.the introduction ) except that the binary relation @xmath11 is decidable in polynomial time using an advice string that depends only on the length of @xmath48 ( the formula ) .",
    "we say that the advice is polynomial iff its length is @xmath234 .",
    "this concept has some interesting properties ; for example , in the classes of these proof systems - with varying bounds on the size of advice strings - there exists an optimal one .",
    "we refer the reader to ( * ? ? ?",
    "* sec.6 ) and to subsequent @xcite for further information .",
    "our aim in this section is to link proof systems with polynomial advice with proof systems with extra axioms , as defined below .",
    "a sequence of formulas @xmath235 will be called * p - bounded * iff @xmath236 for all @xmath3 .    [ 5.1 ] let @xmath11 be an ordinary cook - reckhow proof system .    1 .   for a tautology",
    "@xmath6 the proof system @xmath58 is defined as follows : + a string @xmath14 is a @xmath237-proof of formula @xmath12 iff @xmath14 is a @xmath0-proof of a disjunction of the form @xmath238 where @xmath239 are arbitrary substitution instances of @xmath6 obtained by substituting constants and variables for variables .",
    "2 .   for a p - bounded sequence @xmath235 of tautologies define a string @xmath14 to be an @xmath240-proof of formula @xmath12 iff it is a @xmath241-proof of @xmath12 for @xmath242 .",
    "we allow only substitutions of constants and variables in instances @xmath243 in part 1 as that makes sense for all proof systems ( e.g. we do not have to discuss various limitations on depth for constant depth frege systems ) and it suffices here .",
    "systems @xmath240 are not meant to genuinely formalize the informal notion of proof systems with extra axioms ; such systems should not pose restrictions on which extra axioms can be used in proofs of which formulas .",
    "we use them here only as a technical vehicle allowing us to move from proof systems with advice to ordinary proof systems .    note that while @xmath58 is a cook - reckhow proof system , @xmath244 is generally not .",
    "the following lemma is obvious as we can use the sequence @xmath235 as advice strings to recognize @xmath240 - proofs .",
    "[ 5.2 ] let @xmath0 be a cook - reckhow proof system . for every p - bounded sequence @xmath235 of tautologies @xmath244 is a proof system with polynomial advice in the sense of cook - k.@xcite .    in section [ tasks ]",
    "we used informally the notion of a decent proof system , meaning a proof system that can perform efficiently a few simple manipulations with proofs .",
    "we shall use the formalization of this notion from ( * ? ? ?",
    "* sec.2 ) .    in the following @xmath245",
    "are formulas for @xmath233 and suitable @xmath246 with @xmath247 , @xmath38 and @xmath248 such that for all @xmath249 it holds that :    * _ @xmath250 iff @xmath251 is a truth assignment satisfying formula @xmath32 .",
    "_    the extra variables @xmath186 are used to compute the truth value , as in the @xmath27-completeness of sat .    a proof system ( ordinary or with advice )",
    "@xmath0 is *",
    "decent * iff the following tasks can be performed by polynomial time algorithms :    1 .   from a @xmath0-proof @xmath14 of formula @xmath252 and a truth assignment @xmath251 to variables @xmath48",
    "construct a @xmath0-proof of @xmath253 .",
    "2 .   given a true sentence @xmath254 ( i.e. no variables ) construct its @xmath0-proof .",
    "3 .   given @xmath0-proofs @xmath255 of @xmath254 and @xmath256 of @xmath257",
    "construct a proof of @xmath258 .",
    "4 .   given a formula @xmath259 and a @xmath0-proof of formula @xmath260 with variables @xmath261",
    "construct a @xmath0-proof of @xmath32 .",
    "conditions d1 - 3 are easy to verify for many of the usual proof systems ( e.g. frege systems mentioned in the introduction or resolution ) .",
    "the algorithm for condition d4 is defined by induction on the number of connectives in @xmath32 , cf .",
    "* chpt.9 ) .",
    "[ 5.3 ] let @xmath26 be a proof system with polynomial advice and @xmath0 a decent cook - reckhow proof system . then for every constant @xmath16 there exists a p - bounded sequence @xmath235 of tautologies and @xmath262 such that :    any tautology @xmath12 having a @xmath26-proof of size @xmath263 has an @xmath240-proof of size @xmath264 .",
    "assume that @xmath26 uses polynomial size advice string @xmath265 for formulas of size @xmath3 .",
    "for @xmath233 denote by @xmath266 a propositional formula such that :    * @xmath267 has @xmath3 atoms @xmath268 for bits of a formula , @xmath221 atoms @xmath269 for bits of a @xmath26-proof , @xmath221 atoms @xmath270 for bits of an advice and @xmath57 atoms @xmath271 for bits of the computation of the truth value of @xmath272 with advice @xmath273 , * for size @xmath3 formula @xmath32 and a @xmath221 size strings @xmath14 and @xmath192 : @xmath274 iff @xmath275 with advice @xmath192 is true .",
    "then take for @xmath276 the formula with variables @xmath277 @xmath278 where @xmath265 is the string used by @xmath26 for size @xmath3 formulas .",
    "the formula expresses the soundness of @xmath26 and hence it is a tautology .",
    "its total size is @xmath279 .",
    "let @xmath32 be a size @xmath3 formula with variables among @xmath280 and having a size @xmath281 @xmath26-proof @xmath14 .",
    "let @xmath282 be bits of the computation of @xmath275 with advice @xmath265 .",
    "take the following substitution instance of @xmath276 : @xmath283    * claim : * _ for some @xmath262 depending only on @xmath16 and @xmath0 the formula @xmath32 has a @xmath241-proof of size @xmath284 .",
    "_    we shall use the decency of @xmath0 . by the choice of @xmath14 and @xmath282 the sentence @xmath285 is true and hence has , by d2 , a size @xmath279 @xmath0-proof .",
    "then , using d3 , use modus ponens to derive in size @xmath279 the formula @xmath286 d4 then allows to derive in @xmath0 the formula @xmath32 , in size @xmath57 .",
    "the total size of the @xmath0-proof is @xmath279 .",
    "note that we have not used the decency condition d1 explicitly ; it s role is replaced here by the definition of the system @xmath287 which takes as axioms all substitution instances of @xmath276 .",
    "formulas @xmath276 depend not only on @xmath3 and @xmath265 but also on the bound @xmath221 to the length of @xmath49 .",
    "this is the reason why we can not simply say that @xmath288 simulates @xmath26 ( it simulates only augmented by all such formulas @xmath276 , constructed for all @xmath3 , @xmath265 and all @xmath16 , does simulate @xmath26 as by the proof of the claim @xmath289 . ]",
    "@xmath26-proofs of size at most @xmath221 ) .",
    "we will need the following notion . for",
    "a complexity class @xmath290 and a language @xmath178 define the property that * @xmath178 is infinitely often in @xmath291 * , denoted @xmath292 , iff there exists @xmath293 such that @xmath294 for infinitely many lengths @xmath3 .",
    "recall the definition of the class @xmath173 at the beginning of section [ 4 ] .",
    "the following consequence of conjecture [ 2.1 ] was noted at the end of ( * ? ? ?",
    "* sec.30.2 ) and it uses an idea linking the output / input ratio of proof complexity generators with the unprovability of circuit lower bounds due to razborov @xcite , quite similar to the reasoning in razborov - rudich @xcite .    [ 2.3 ]    assume that conjecture [ 2.1 ] holds and that an exponentially hard one - way permutation exists .",
    "then for every @xmath181 : @xmath295 in particular , @xmath296 .",
    "take @xmath135 from conjecture [ 2.1 ] .",
    "put @xmath297 and think of a string @xmath122 as of the truth - table of the characteristic function of the language @xmath178 on inputs of length @xmath3 ; denote it @xmath179 as in section [ 4 ] .",
    "for any language @xmath178 in @xmath298 the set of strings @xmath183 is in @xmath27 : the @xmath27 witness can collect all @xmath299 @xmath300 witnesses for each variable setting - this will have size @xmath10 - and check their validity .    in particular , if some @xmath181 would determine the truth - tables @xmath179 for @xmath301 such that all but finitely many lie outside the range of @xmath124 we would get a contradiction with conjecture [ 2.1 ] .",
    "hence we get :    * claim : * _ for infinitely many @xmath82 , for @xmath301 and @xmath302 : @xmath303 _ for @xmath304 let @xmath305 be such that @xmath306",
    ". then computing @xmath178 on @xmath307 amounts to computing @xmath80 on @xmath308 .",
    "but by the requirement ( [ e2 ] ) posed on @xmath87 the set @xmath308 can be computed from @xmath72 and @xmath251 ( taken as the advice string ) in time polynomial in @xmath82 and @xmath80 is an @xmath147 function .",
    "this lemma has an immediate consequence for problem * cert*.    assume that conjecture [ 2.1 ] holds and that an exponentially hard one - way permutation exists .",
    "then for some @xmath16 the task @xmath42 is only partially defined for infinitely many lengths @xmath233 , i.e. there are inputs corresponding to @xmath3 for which the problem has no solution .",
    "we shall derive the same consequence for the task * find * using the results of section [ 5 ] .",
    "for a triple @xmath189 as in ( [ h1 ] ) define a proof system with polynomial advice @xmath272 by :    * either @xmath309 , * or @xmath192 is the empty word and @xmath49 is a frege proof of @xmath48 ,    thinking of @xmath192 as the advice . note that condition ( [ h1 ] ) does not guarantee that @xmath310 is a proof system for some @xmath192 but the second clause of the definition of @xmath272 allows us to fall back on a frege system by taking for the advice the empty word .",
    "now let @xmath169 such that @xmath170 be a sequence of advice words defining a proof system with advice @xmath26 ( there exists at least one such : the sequence of empty strings ) .",
    "let @xmath0 be any decent cook - reckhow proof system and let formulas @xmath276 and constant @xmath262 be those provided by lemma [ 5.3 ] for @xmath31 from @xmath189 .",
    "assume @xmath311 is such that @xmath312 and assume also w.l.o.g .",
    "that @xmath313 .",
    "consider the task @xmath314 .",
    "a solution for input @xmath1 and @xmath276 is a size @xmath3 tautology @xmath8 and by the choice of @xmath315 it must be that @xmath316 but conjecture [ 2.1 ] implies analogously as above that for the triple @xmath189 coming from @xmath124 there will be infinitely many lengths @xmath317 and strings @xmath265 for which @xmath276 is a tautology but no such @xmath8 exists .",
    "hence we have the following statement .",
    "assume that conjecture [ 2.1 ] holds and that an exponentially hard one - way permutation exists .",
    "then for all decent cook - reckhow proof systems @xmath0 there are constants @xmath59 such that the task @xmath318 has no solution for infinitely many lengths @xmath233 .",
    "let @xmath319 and @xmath320 be two pairs of disjoint subsets of @xmath152 .",
    "a * reduction * of @xmath320 to @xmath319 is a function @xmath66 such that for all @xmath98 : @xmath321 it is ( non - uniform ) * p - reduction * if @xmath80 is ( non - uniform ) p - time .",
    "disjoint @xmath27 pairs appear quite naturally in several places of proof complexity .",
    "most notably , the reflection principle for a proof system just asserts that two @xmath27 sets ( that of formulas with bounded size proofs and of falsifiable formulas ) are disjoint .",
    "a particularly elegant form of this observation was found by razborov @xcite in the notion of the canonical pair of a proof system .",
    "shadowing the relation of the provability of reflection principles to simulations , a similar one exists between the provability of disjointness of such pairs and simulations .",
    "we refer the reader to @xcite for more background .    given two pairs of disjoint sets @xmath319 and @xmath320 and a constant @xmath16 consider the * search task * @xmath322 :    * input : @xmath1 and a circuit @xmath107 with @xmath3 inputs , several outputs and of size at most @xmath221 * required output : a string @xmath323 such that @xmath324    in other words , the output string @xmath98 certifies that circuit @xmath107 is not a reduction of @xmath325 to @xmath319 on @xmath180 .    take a triple @xmath189 as in ( [ h1 ] ) and define @xmath326 and @xmath327 to be the sets of pairs @xmath328 such that @xmath329 and @xmath330 or @xmath331 , respectively .    for a disjoint pair @xmath332 of sets such that @xmath333 take for language @xmath178 on @xmath180 simply @xmath161 . for @xmath192 of size @xmath281 consider circuit @xmath334 that takes size @xmath3 input @xmath48 and outputs the pair @xmath335 ; note that @xmath336 for @xmath337 .",
    "then a solution to @xmath338 for input @xmath1 and @xmath334 is also a solution to @xmath196 .",
    "hence theorem [ 4.1 ] implies the following statement .",
    "assume that an exponentially hard one - way permutation exists .",
    "then there are two disjoint @xmath27 sets @xmath339 and @xmath16 such that for any pair @xmath332 of disjoint sets such that @xmath333 the task @xmath322 is not solvable by a deterministic time @xmath10 algorithm .",
    "the reader familiar with the canonical pairs of proof systems mentioned earlier may note that these sets are in @xmath340 and thus the theorem applies to them .",
    "the role of conjecture [ 2.1 ] is rather ambivalent : it implies that @xmath4 ( lemma [ 2.2 ] ) but also that @xmath341 ( lemma [ 2.3 ] ) .",
    "this is caused by the dual role of the nisan - wigderson generator ; it is a source of hard tautologies but also a strong proof system .",
    "the reader should consider , before dismissing conjecture [ 2.1 ] because of lemma [ 2.3 ] , how little contemporary complexity theory understands about the power of non - uniform advice .",
    "it would be interesting to have a variety of candidate combinatorial constructions @xmath53 of a proof system stronger than @xmath0 , as discussed in section [ tasks ] . at present only the construction of @xmath342 ,",
    "the implicit @xmath0 , from @xcite applies to all proof systems and it is consistent with the present knowledge that it indeed yields stronger proof systems .",
    "an indirect plausible construction of @xmath53 may use the relation between proof systems and first - order theories : take theory @xmath23 corresponding to @xmath0 , extend @xmath23 by @xmath343 ( or in some other gdelian fashion ) getting @xmath111 , and then take for @xmath53 the proof system simulating @xmath111 ( cf.@xcite about @xmath23 etc . ) .",
    "but it is hardly combinatorially transparent .",
    "the referee pointed out that problems @xmath344 and @xmath345 seem to be very close to each other and asked whether they could be , in fact , reduced to each other .",
    "one can reduce @xmath346 to @xmath46 for suitable @xmath31 : for @xmath233 and a tautology @xmath6 of size at most @xmath7 take for @xmath47 a circuit ( canonically constructed ) computing the provability relation for @xmath62 on formulas of size @xmath3 and proofs of size at most @xmath9 .",
    "the size of @xmath47 is polynomial in @xmath9 and so @xmath47 is a valid input to @xmath46 for some @xmath347 .",
    "a solution to @xmath46 can not certify that @xmath47 is unsound and so it has to be a size @xmath3 formula certifying the lower bound @xmath348 for @xmath47 and hence the @xmath9 lower bound for @xmath62 too .",
    "i do not know whether @xmath344 can be also reduced to @xmath345 but i suspect it can not be : valid inputs to @xmath344 are allowed either to fail to be a sound proof system or to fail to have short proofs while inputs to @xmath345 can not be unsound .        ,",
    "nondeterministic instance complexity and proof systems with advice , in : proc .",
    "3rd international conference on language and automata theory and applications ( lata ) , springer - verlag , lncs 5457 , ( 2009 ) , pp.164 - 175 .      , does advice help to prove propositional tautologies ?",
    ", in : proc .",
    "12th international conference on theory and applications of satisfiability testing ( sat ) , springer - verlag , lncs 5584 , ( 2009 ) , pp.65 - 72 .    , characterizing the existence of optimal proof systems and complete sets for promise classes . in : a.e.frid , a.morozov ,",
    "a.rybalchenko , k.w.wagner ( eds . ) , _ computer science - theory and applications _ , fourth international computer science symposium in russia , csr 2009 , novosibirsk , russia , ( august 18 - 23 , 2009 ) .",
    "lecture notes in computer science * 5675 * , springer .",
    "( 2009 ) , pp.47 - 58 .",
    ", on methods for proving lower bounds in propositional logic , in : _ logic and scientific methods _ eds . m. l. dalla chiara et al .",
    ", ( vol . 1 of proc .",
    "of the tenth international congress of logic , methodology and philosophy of science , florence ( august 19 - 25 , 1995 ) ) , synthese library , vol.259 , kluwer academic publ . , dordrecht , ( 1997 ) , pp.69 - 83 .",
    ", interactive computations of optimal solutions , in : b. rovan ( ed . ) : _ mathematical foundations of computer science _ ( b. bystrica , august 90 ) , lecture notes in computer science 452 , springer - verlag , ( 1990 ) , pp ."
  ],
  "abstract_text": [
    "<S> it is well - known ( cf . </S>",
    "<S> k .- </S>",
    "<S> pudlk@xcite ) that a polynomial time algorithm finding tautologies hard for a propositional proof system @xmath0 exists iff @xmath0 is not optimal . </S>",
    "<S> such an algorithm takes @xmath1 and outputs a tautology @xmath2 of size at least @xmath3 such that @xmath0 is not p - bounded on the set of all @xmath2 s .    </S>",
    "<S> we consider two more general search problems involving finding a hard formula , * cert * and * find * , motivated by two hypothetical situations : that one can prove that @xmath4 and that no optimal proof system exists . in * cert </S>",
    "<S> * one is asked to find a witness that a given non - deterministic circuit with @xmath3 inputs does not define @xmath5 . in * </S>",
    "<S> find * , given @xmath1 and a tautology @xmath6 of size at most @xmath7 , one should output a size @xmath3 tautology @xmath8 that has no size @xmath9 @xmath0-proof from substitution instances of @xmath6 .    </S>",
    "<S> we shall prove , assuming the existence of an exponentially hard one - way permutation , that * cert * can not be solved by a time @xmath10 algorithm . using a stronger hypothesis about the proof complexity of nisan - wigderson generator </S>",
    "<S> we show that both problems * cert * and * find * are actually only partially defined for infinitely many @xmath3 ( i.e. there are inputs corresponding to @xmath3 for which the problem has no solution ) . </S>",
    "<S> the results are based on interpreting the nisan - wigderson generator as a proof system .    a * propositional proof system * in the sense of cook and reckhow @xcite is a polynomial time relation @xmath11 such that for a binary string @xmath12 : @xmath13 where taut is the set of propositional tautologies ( in demorgan language for the definiteness ) . any string @xmath14 for which @xmath15 holds </S>",
    "<S> is called a * @xmath0-proof * of @xmath12 . a proof system </S>",
    "<S> ( tacitly propositional from now on ) is * p - bounded * iff there exists a constant @xmath16 such that the above holds even with the requirement that @xmath17 . </S>",
    "<S> cook and reckhow @xcite noted that a p - bounded proof system exists iff @xmath18 . hence proving that no p - bounded proof system exists would imply @xmath19 and thus also @xmath20 . </S>",
    "<S> this fact elevated the investigation of lengths of proofs into a fundamental topic of mathematical logic approach to computational complexity .    </S>",
    "<S> strong lower bounds were proved for a variety of proof systems and several different methods for this purpose were invented . </S>",
    "<S> examples of proof systems that appear to be outside of the scope of current methods are the so called * frege systems * : the usual text - book propositional calculi based on a finite number of axioms schemes and inference rules ( only quadratic lower bounds are known for them , cf.@xcite ) . </S>",
    "<S> this apparent failure could cause an uninformed reader to dismiss the whole area of proof complexity . </S>",
    "<S> however , although we may not be near proving that @xmath19 , the lower bounds for weaker proof systems proved so far do have consequences interesting in their own right . </S>",
    "<S> for example , a single lower bound for a proof system @xmath0 implies time lower bounds for a class @xmath21 of sat algorithms associated with @xmath0 and all commonly used sat algorithms belong to such a class for some @xmath0 for which we have an exponential lower bound ( cf.@xcite and references given there ) . </S>",
    "<S> another type of consequences can be found in bounded arithmetic : a lengths - of - proofs lower bound for @xmath0 often implies the unprovability of a true @xmath22 sentence in a first - order theory @xmath23 associated with @xmath0 . </S>",
    "<S> these unprovability arguments do not use gdel s theorem and the @xmath22 sentences involved have typically a clear combinatorial meaning . and last but not least , any super - polynomial lower bound for @xmath0 also implies that @xmath20 is consistent with @xmath23 . </S>",
    "<S> we shall not survey these proof complexity topics in detail here and instead refer the reader to expositions in @xcite or in ( * ? ? ? </S>",
    "<S> * chpt.27 ) .    </S>",
    "<S> in this paper we are interested in the question how hard it is - to be measured in terms of computational complexity here - to find tautologies hard ( i.e. requiring long proofs ) for a given proof system . proposing plausible candidates for tautologies </S>",
    "<S> hard for frege systems and for stronger proof systems turned out to be a quite delicate issue . </S>",
    "<S> the lack of a variety of good candidates is one of principal obstacles for proving lower bounds for strong systems . </S>",
    "<S> of course , in principle one would be happy to accept a suggestion for such a hard tautology from a friendly oracle . </S>",
    "<S> however , the experience with known lower bound proofs shows that it is essential to have explicit formulas with a transparent combinatorial meaning .    in particular , all first super - polynomial lower bounds for proof systems for which we have any such bounds were proved for some sequence of tautologies @xmath24 of size @xmath25 and constructible in polynomial time ( or even log space ) from @xmath1 . </S>",
    "<S> this type of sequences of hard tautologies has been considered in @xcite and ( * ? ? ? </S>",
    "<S> * chpt.14 ) and it exists for a proof system @xmath0 iff @xmath0 is not * optimal * , i.e. there exists a proof system @xmath26 that has a super - polynomial speed - up over @xmath0 ( w.r.t . </S>",
    "<S> lengths of proofs ) on an infinite set of formulas . </S>",
    "<S> it is consistent with the present knowledge , and indeed most researchers seem to conjecture that , that no optimal proof system exist and hence that for each @xmath0 a p - time constructible sequence of hard formulas exist . </S>",
    "<S> however , deriving the existence of hard formulas from the assumption of non - optimality is not very illuminating : it is a basic proof complexity result that @xmath0 can not admit polynomial size proofs of formulas expressing the soundness of a proof system @xmath26 ( these formulas are log space constructible ) if @xmath26 has a super - polynomial speed - up over @xmath0 on an infinite set of formulas ( cf . </S>",
    "<S> ( * ? ? ? </S>",
    "<S> * chpt.14 ) ) . </S>",
    "<S> hence , in a sense , deriving the existence of a polynomial time sequence of hard tautologies from the non - optimality assumption amounts just to restating the assumption in a different terminology . </S>",
    "<S> we refer the reader to beyersdorff - sadowski@xcite for further information and up - to - date references .    </S>",
    "<S> we shall consider in this paper two more general search problems in which the task includes a requirement to find a hard tautology . </S>",
    "<S> the two problems model in their ways two hypothetical situations : a situation when one can prove @xmath4 ( i.e. super - polynomial lower bounds for all proof systems ) and a situation when one can prove that no optimal proof system exists by having a uniform method how to construct from a given proof system a stronger one . </S>",
    "<S> these two tasks , * cert * and * find * , will be defined in section [ tasks ] ( in section [ pairs ] we add one more search task * pair * involving disjoint pairs of @xmath27 sets ) </S>",
    "<S> .    we will prove ( using the hypothesis of the existence of a hard one - way permutation ) that * cert * can not be solved by exponential time algorithms and ( using a stronger hypothesis about the proof complexity of the nisan - wigderson generator ) that both * cert * and * find * actually can not be solved at all on infinitely many input lengths . </S>",
    "<S> our primary motivation for this research is to understand what kind of consequences do various - both proven and conjectural - statements about the proof complexity of the nisan - wigderson generator have .    </S>",
    "<S> the paper is organized as follows . </S>",
    "<S> after the motivation and the definition of the search tasks * cert * and * find * in section [ tasks ] we review some complexity theory in section [ 1 ] and some proof complexity in section [ 2 ] . </S>",
    "<S> the hardness results are proved in sections [ 4 ] and [ 6 ] , respectively ( after a proof complexity interlude in section [ 5 ] ) . </S>",
    "<S> the paper is concluded by section [ pairs ] considering a related search task for disjoint pairs of sets and a few remarks in section [ rema ] .    </S>",
    "<S> we do assume only basic complexity theory and proof complexity ( e.g. the well - known relation between reflection principles and simulations ) . </S>",
    "<S> but the reader may still benefit from understanding a wider proof complexity context . </S>",
    "<S> in particular , ( * ? ? ? * chpt.27 ) overviews some fundamental problems of proof complexity and ( * ? ? ? * chpts.29 and 30 ) survey the theory proof complexity generators ( and list relevant literature ) . </S>"
  ]
}
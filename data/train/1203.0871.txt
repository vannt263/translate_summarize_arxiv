{
  "article_text": [
    "dependence logic @xcite is an extension of first - order logic which adds _ dependence atoms _ of the form @xmath0 to it , with the intended interpretation of `` the value of the term @xmath1 is a function of the values of the terms @xmath2 . ''",
    "the introduction of such atoms is roughly equivalent to the introduction of non - linear patterns of dependence and independence between variables of branching quantifier logic @xcite or independence friendly logic @xcite : for example , both the branching quantifier logic sentence @xmath3 and the independence friendly logic sentence @xmath4 correspond in dependence logic to @xmath5 in the sense that all of these expressions are equivalent to the skolem formula @xmath6 as this example illustrates , the main peculiarity of dependence logic compared to the others above - mentioned logics lies in the fact that , in dependence logic , the notion of _ dependence and independence between variables _ is explicitly separated from the notion of quantification .",
    "this makes it an eminently suitable formalism for the formal analysis of the properties of _ dependence itself _ in a first - order setting , and some recent papers ( @xcite ) explore the effects of replace dependence atoms with other similar primitives such as _ independence atoms _ @xcite , _ multivalued dependence atoms _",
    "@xcite , or _ inclusion _ or _",
    "atoms @xcite .",
    "branching quantifier logic , independence friendly logic and dependence logic , as well as their variants , are called _ logics of imperfect information _ : indeed , the truth conditions of their sentences can be obtained by defining , for every model @xmath7 and sentence @xmath8 , an imperfect - information _ semantic game _",
    "@xmath9 between a _ verifier _ ( also called eloise ) and a _ falsifier _ ( also called abelard ) , and then asserting that @xmath8 is true in @xmath7 if and only if the verifier has a winning strategy in @xmath9 . as an alternative of this ( non - compositional ) _ game - theoretic semantics _ , which is an imperfect - information variant of hintikka s game - theoretic semantics for first order logic @xcite , hodges introduced in @xcite _ team semantics _ ( also called _ trump semantics _ ) , a compositional semantics for logics of imperfect information which is equivalent to game - theoretic semantics over sentences and in which formulas are satisfied or not satisfied not by single assignments , but by _ sets _ of assignments ( called _ teams _ ) .    in this work",
    ", we will be mostly concerned with team semantics and some of its variants .",
    "we refer the reader to the relevant literature ( for example to @xcite and @xcite ) for further information regarding these logics : in the rest of this section , we will content ourselves with recalling the definitions and results which will be useful for the rest of this work .",
    "let @xmath7 be a first order model and let @xmath10 be a finite set of variables .",
    "then an _ assignment _ over @xmath7 with _ domain _ @xmath10 is a function @xmath11 from @xmath10 to the set @xmath12 of all elements of @xmath7 .",
    "furthermore , for any assignment @xmath11 over @xmath7 with domain @xmath10 , any element @xmath13 and any variable @xmath14 ( not necessarily in @xmath10 ) , we write @xmath15 $ ] for the assignment with domain @xmath16 such that @xmath17(w ) = \\left\\{\\begin{array}{l l }              m & \\mbox{if } w = v;\\\\              s(w ) & \\mbox{if } w \\in v \\backslash \\{v\\ }          \\end{array }      \\right.\\ ] ] for all @xmath18 .",
    "let @xmath7 be a first - order model and let @xmath10 be a finite set of variables .",
    "@xmath19 over @xmath7 with _ domain _ @xmath20 is a set of assignments from @xmath10 to @xmath7 .",
    "let @xmath19 be a team over @xmath7 , and let @xmath10 be a finite set of variables . and",
    "let @xmath21 be a finite tuple of variables in its domain .",
    "then @xmath22 is the relation @xmath23 .",
    "furthermore , we write @xmath24 for @xmath25 .    as is often the case for dependence logic , we will assume that all our formulas are in negation normal form :    let @xmath26 be a first - order signature .",
    "then the set of all dependence logic formula with signature @xmath26 is given by @xmath27 where @xmath28 ranges over all relation symbols , @xmath29 ranges over all tuples of terms of the appropriate arities , @xmath30 range over all terms and @xmath14 ranges over the set @xmath31 of all variables .",
    "the set @xmath32 of all _ free variables _ of a formula @xmath8 is defined precisely as in first order logic , with the additional condition that all variables occurring in a dependence atom are free with respect to it .",
    "[ dl - ts ] let @xmath7 be a first - order model , let @xmath19 be a team over it , and let @xmath8 be a dependence logic formula with the same signature of @xmath7 and with free variables in @xmath33 .",
    "then we say that @xmath19 _ satisfies _ @xmath8 in @xmath7 , and we write @xmath34 , if and only if    ts - lit : : :    @xmath8 is a first - order literal and    @xmath35 for all @xmath36 ; ts - dep : : :    @xmath8 is a dependence atom    @xmath37 and any two assignments    @xmath38 which assign the same values to    @xmath2 also assign the same value to    @xmath1 ; ts-@xmath39 : : :    @xmath8 is of the form @xmath40 and    there exist two teams @xmath41 and @xmath42 such    that @xmath43 ,    @xmath44 and    @xmath45 ; ts-@xmath46 : : :    @xmath8 is of the form @xmath47 ,    @xmath48 and @xmath49 ; ts-@xmath50 : : :    @xmath8 is of the form @xmath51 and    there exists a function    @xmath52 such that    @xmath53 } \\psi$ ] , where    @xmath54 = \\{s[f(s)/v ] : s \\in x\\}\\ ] ] ts-@xmath55 : : :    @xmath8 is of the form @xmath56 and    @xmath57 } \\psi$ ] , where    @xmath58 = \\{s[m / v ] : s \\in x , m \\in { \\texttt{dom}}(m)\\}.\\ ] ]    the disjunction of dependence logic does not behave like the classical disjunction : for example , it is easy to see that @xmath59 is not equivalent to @xmath60 , as the former holds for the team @xmath61 and the latter does not .",
    "however , it is possible to define the classical disjunction in terms of the other connectives :    [ defin : classic_or ] let @xmath62 and @xmath63 be two dependence logic formulas , and let @xmath64 and @xmath65 be two variables not occurring in them",
    ". then we write @xmath66 as a shorthand for @xmath67    [ propo : classic_or ] for all formulas @xmath62 and @xmath63 , all models @xmath7 with at least two elements whose signature contains that of @xmath62 and @xmath63 and all teams @xmath19 whose domain contains the free variables of @xmath62 and @xmath63 @xmath68    the following four proportions are from @xcite :    [ propo : emptyteam ] for all models @xmath7 and dependence logic formulas @xmath8 , @xmath69 .",
    "if @xmath34 and @xmath70 then @xmath71 .    if @xmath34 and @xmath72 then @xmath73 .    [ dltosigma ]",
    "let @xmath74 be a dependence logic formula with free variables in @xmath21 .",
    "then there exists a @xmath75 sentence @xmath76 such that @xmath77 for all suitable models @xmath7 and for all nonempty teams @xmath19 .",
    "furthermore , in @xmath76 the symbol @xmath28 occurs only negatively .    as proved in @xcite",
    ", there is also a converse for the last proposition :    [ sigmatodl ] let @xmath76 be a @xmath75 sentence in which @xmath28 occurs only negatively . then there exists a dependence logic formula @xmath74 , where @xmath78 is the arity of @xmath28 , such that @xmath77 for all suitable models @xmath7 and for all nonempty teams @xmath19 whose domain contains @xmath21 .",
    "because of this correspondence between dependence logic and existential second order logic , it is easy to see that dependence logic is closed under existential quantification : for all dependence logic formulas @xmath79 over the signature @xmath80 there exists a dependence logic formula @xmath81 over the signature @xmath26 such that @xmath82 for all models @xmath7 with domain @xmath26 and for all teams @xmath19 over the free variables of @xmath8 . therefore , in the rest of this work we will add second - order existential quantifiers to the language of dependence logic , and we will write @xmath81 as a shorthand for the corresponding dependence logic expression",
    ".      _ game logics _ are logical formalisms for reasoning about games and their properties in a very general setting . whereas the game theoretic",
    "semantics approach attempts to use game - theoretic techniques to _ interpret _ logical systems , game logics attempt to put logic to the service of game theory , by providing a high - level language for the study of games .",
    "they generally contain two different kinds of expressions :    1 .",
    "_ game terms _ , which are descriptions of games in terms of compositions of certain primitive _ atomic games _ , whose interpretation is presumed fixed for any given game model ; 2 .",
    "_ formulas _ , which , in general , correspond to assertions about the abilities of players in games .    in this subsection",
    ", we are going to summarize the definition of a variant of dynamic game logic @xcite . from our formalism .",
    "in this , we follow @xcite . ] then , in the next subsection , we will discuss a remarkable connection between first - order logic and dynamic game logic discovered by johan van benthem in @xcite .",
    "+ one of the fundamental semantic concepts of dynamic game logic is the notion of _ forcing relation : _",
    "let @xmath83 be a nonempty set of _ states_. a _ forcing relation _ over @xmath83 is a set @xmath84 , where @xmath85 is the powerset of @xmath83 .    in brief",
    ", a forcing relation specifies the abilities of a player in a perfect - information game : @xmath86 if and only if the player has a strategy that guarantees that , whenever the initial position of the game is @xmath11 , the terminal position of the game will be in @xmath19 .",
    "a ( two - player ) _ game _ is then defined as a pair of forcing relations satisfying some axioms :    let @xmath83 be a nonempty set of states .",
    "a _ game _ over @xmath83 is a pair @xmath87 of forcing relations over @xmath83 satisfying the following conditions for all @xmath88 , all @xmath89 and all @xmath90 :    monotonicity : : :    if @xmath91 and @xmath92    then @xmath93 ; consistency : : :    if @xmath94 and @xmath95    then @xmath96 ; non - triviality : : :    @xmath97 .",
    "determinacy : : :    if @xmath98 then    @xmath99 , where    @xmath100 .",
    ", this implies that the    other player can force it to belong to the complement of    @xmath19 . ]",
    "let @xmath83 be a nonempty set of states , let @xmath101 be a nonempty set of _ atomic propositions _ and let @xmath102 be a nonempty set of _ atomic game symbols_. then a _ game model _ over @xmath83 , @xmath101 and @xmath102 is a triple @xmath103 , where @xmath104 is a game over @xmath83 for all @xmath105 and where @xmath10 is a valutation function associating each @xmath106 to a subset @xmath107 .",
    "the language of dynamic game logic , as we already mentioned , consists of _ game terms _ , built up from atomic games , and of _ formulas _ , built up from atomic proposition .",
    "the connection between these two parts of the language is given by the _ test _",
    "operation @xmath108 , which turns any formula @xmath8 into a test game , and the _ diamond _ operation , which combines a game term @xmath109 and a formula @xmath8 into a new formula @xmath110 which asserts that agent @xmath111 can guarantee that the game @xmath109 will end in a state satisfying @xmath8 .",
    "let @xmath101 be a nonempty set of _ atomic propositions _ and let @xmath102 be a nonempty set of _ atomic game formulas_. then the sets of all game terms @xmath109 and formulas @xmath8 are defined as @xmath112 for @xmath113 ranging over @xmath101 , @xmath114 ranging over @xmath102 , and @xmath111 ranging over @xmath115 .",
    "we already mentioned the intended interpretations of the test connective @xmath108 and of the diamond connective @xmath110 .",
    "the interpretations of the other game connectives should be clear : @xmath116 is obtained by swapping the roles of the players in @xmath109 , @xmath117 is a game in which the existential player @xmath118 chooses whether to play @xmath119 or @xmath120 , and @xmath121 is the _ concatenation _ of the two games corresponding to @xmath119 and @xmath120 respectively .    let @xmath122 be a game model over @xmath83 , @xmath102 and @xmath101 .",
    "then for all game terms @xmath109 and all formulas @xmath8 of dynamic game logic over @xmath102 and @xmath101 we define a game @xmath123 and a set @xmath124 as follows :    dgl - atomic - game : : :    for all @xmath105 ,    @xmath125 ; dgl - test : : :    for all formulas @xmath8 ,    @xmath126 , where    +    * @xmath127 iff @xmath128 and    @xmath36 ; +    * @xmath129 iff @xmath130 or    @xmath36    +    for all @xmath89 and all @xmath19 with    @xmath131 ; dgl - concat : : :    for all game terms @xmath119 and @xmath120 ,    @xmath132 , where , for    all @xmath88 and for    @xmath133 ,    @xmath134 ,    +    * @xmath135 if and only if there exists a    @xmath136 such that @xmath137 and for each    @xmath138 there exists a set @xmath139 satisfying    @xmath140 such that    @xmath141 dgl-@xmath142 : : :    for all game terms @xmath119 and @xmath120 ,    @xmath143 , where    +    * @xmath127 if and only if @xmath144    or @xmath145 , and    * @xmath129 if and only if @xmath146    and @xmath147    +    where , as before , @xmath133    and    @xmath134;[multiblock footnote omitted ] dgl - dual : : :    if @xmath148 then    @xmath149 ; dgl-@xmath150 : : :    @xmath151 ; dgl - atomic - pr : : :    @xmath152 ; dgl-@xmath153 : : :    @xmath154 ; dgl-@xmath39 : : :    @xmath155 ; dgl-@xmath156 : : :    if @xmath148 then for all    @xmath8 ,    @xmath157    if @xmath128 , we say that @xmath8 is _ satisfied _ by @xmath11 in @xmath158 and we write @xmath35 .    we will not discuss here the properties of this logic , or the vast amount of variants and extensions of it which have been developed and studied .",
    "it is worth pointing out , however , that @xcite introduced a _ concurrent dynamic game logic _ that can be considered one of the main sources of inspiration for the transition logic that we will develop in subsection [ subsect : tdl ] .      in this subsection",
    ", we will briefly recall a remarkable result from @xcite which establishes a connection between dynamic game logic and first - order logic .    in brief , as the following two theorems demonstrate , either of these logics can be seen as a special case of the other , in the sense that models and formulas of the one can be uniformly translated into models of the other in a way which preserves satisfiability and truth :    [ theo : repfo1 ]",
    "let @xmath122 be any game model , let @xmath8 be any game formula for the same language , and let @xmath89 .",
    "then it is possible to uniformly construct a first - order model @xmath159 , a first - order formula @xmath160 and an assignment @xmath161 of @xmath159 such that @xmath162    [ theo : repfo2 ] let @xmath7 be any first order model , let @xmath8 be any first - order formula for the signature of @xmath7 , and let @xmath11 be an assignment of @xmath7 .",
    "then it is possible to uniformly construct a game model @xmath163 , a game formula @xmath164 and a state @xmath165 such that @xmath166    we will not discuss here the proofs of these two results .",
    "their _ significance _ , however , is something about which is necessary to spend a few words . in brief",
    ", what this back - and - forth representation between first order logic and dynamic game logic tells us is that it is possible to understand first order logic as a _ logic for reasoning about determined games _ !    in the next sections , we will attempt to develop a similar result for the case of dependence logic .",
    "we will now define a variant of dynamic game logic , which we will call _ transition logic_. it deviates from the basic framework of dynamic game logic in two fundamental ways :    1 .",
    "it considers _",
    "one - player _ games against nature , instead of _ two - player games _ as is usual in dynamic game logic ; 2 .",
    "it allows for _ uncertainty _ about the initial position of the game .",
    "hence , transition logic can be seen as a _ decision - theoretic logic _ , rather than a _ game - theoretic _ one : transition logic formulas , as we will see , correspond to assertions about the abilities of a single agent acting under uncertainty , instead of assertions about the abilities of agents interacting with each other .    in principle , it is certainly possible to generalize the approach discussed here to multiple agents acting in situations of imperfect information , and doing so might cause interesting phenomena to surface ; but for the time being , we will content ourselves with developing this formalism and discussing its connection with dependence logic .",
    "our first definition is a fairly straightforward generalization of the concept of forcing relation :    let @xmath83 be a nonempty set of _",
    "states_. a _ transition system _ over @xmath83 is a nonempty relation @xmath167 satisfying the following requirements :    downwards closure : : :    if @xmath168 and @xmath169    then @xmath170 ; monotonicity : : :    if @xmath168 and @xmath171    then @xmath172 ; non - creation : : :    @xmath173 for all    @xmath174 ; non - triviality : : :    if @xmath175 then    @xmath176 .    informally speaking , a transition system specifies the abilities of an agent : for all @xmath90 such that @xmath168 , the agent has a strategy which guarantees that the output of the transition will be in @xmath177 whenever the input of the transition is in @xmath19 .",
    "the four axioms which we gave capture precisely this intended meaning , as we will see :    a _ decision game _ is a triple @xmath178 , where @xmath83 is a nonempty set of _ states _ , @xmath118 is a nonempty set of possible _ decisions _ for our agent and @xmath179 is an _ outcome function _ from @xmath180 to @xmath85 .    if @xmath181 , we say that @xmath182 is a _ possible outcome _ of @xmath11 under @xmath183 ; if @xmath184 , we say that @xmath183 _ fails _ on input @xmath11 .",
    "let @xmath178 be a decision game , and let @xmath90 .",
    "then we say that @xmath102 _ allows _ the transition @xmath185 , and we write @xmath186 , if and only if there exists a @xmath187 such that @xmath188 for all @xmath36 ( that is , if and only if our agent can make a decision which guarantees that the outcome will be in @xmath177 whenever the input is in @xmath19 ) .",
    "a set @xmath167 is a transition system if and only if there exists a decision game @xmath178 such that @xmath189    let @xmath167 be any transition system , let us enumerate its elements @xmath190 , and let us consider the game @xmath191 , where @xmath192 suppose that @xmath168 .",
    "if @xmath193 , then @xmath194 follows at once by definition .",
    "if instead @xmath175 , by * non - triviality * we have that @xmath177 is nonempty too , and furthermore @xmath195 for some @xmath196 .",
    "then @xmath197 for all @xmath198 , as required .",
    "now suppose that @xmath186 .",
    "then there exists a @xmath196 such that @xmath199 for all @xmath36 . if @xmath175 , this implies that @xmath200 and @xmath201 .",
    "hence , by * monotonicity * and * downwards closure * , @xmath168 , as required .",
    "if instead @xmath193 , then by * non - creation * we have again that @xmath168 .    conversely , consider a decision game @xmath178 .",
    "then the set of its abilities satisfies our four axioms :    downwards closure : : :    suppose that @xmath202 and that    @xmath169 .",
    "by definition , there exists a    @xmath187 such that    @xmath188 for all    @xmath36 .",
    "but then the same holds for all    @xmath203 , and hence    @xmath204 .",
    "monotonicity : : :    suppose that @xmath202 and that    @xmath171 . by definition , there exists a    @xmath187 such that    @xmath188 for all    @xmath36 .",
    "but then , for all such @xmath11 ,    @xmath205 too , and hence    @xmath206",
    ". non - creation : : :    let @xmath174 and let @xmath187 be any    possible decision .",
    "then trivially    @xmath188 for all    @xmath207 , and hence    @xmath208 .",
    "non - triviality : : :    let @xmath209 , and suppose that    @xmath186 .",
    "then there exists a    @xmath183 such that    @xmath188 for all    @xmath36 , and hence in particular    @xmath210 .",
    "therefore ,    @xmath177 is nonempty .",
    "what this theorem tells us is that our notion of transition system is the correct one : it captures precisely the abilities of an agent making choices under imperfect information and attempting to guarantee that , if the initial state is in a set @xmath19 , the outcome will be in a set @xmath177 .",
    "let @xmath83 be a nonempty set of states .",
    "a _ trump _ over @xmath83 is a nonempty , downwards closed family of subsets of @xmath83 .    whereas a transition system describes the abilities of an agent to transition from a set of possible initial states to a set of possible terminal states , a trump describes the agent s abilities to reach _ some _ terminal state from a set of possible initial states :    let @xmath211 be a transition system and let @xmath212 .",
    "then @xmath213 forms a trump .",
    "conversely , for any trump @xmath214 over @xmath83 there exists a transition system @xmath211 such that @xmath215 for any nonempty @xmath174 .",
    "let @xmath211 be a transition system",
    ". then if @xmath168 and @xmath169 , by downwards closure we have at once that @xmath170 .",
    "furthermore , @xmath173 for any @xmath177 .",
    "hence , @xmath216 is a trump , as required .",
    "conversely , let @xmath217 be a trump , and let us enumerate its elements as @xmath218 .",
    "then define @xmath211 as @xmath219 it is easy to see that @xmath211 is a transition system ; and by construction , for @xmath220 we have that @xmath221 , where we used the fact that @xmath214 is downwards closed .",
    "we can now define the syntax and semantics of transition logic :    let @xmath101 be a set of _ atomic propositional symbols _ and let @xmath222 be a set of _ atomic transition symbols_. then a _ transition model _ is a tuple @xmath223 , where @xmath83 is a nonempty set of states , @xmath224 is a transition system over @xmath83 for any @xmath225 , and @xmath10 is a function sending each @xmath106 into a trump of @xmath83 .",
    "let @xmath101 be a set of atomic propositions and let @xmath222 be a set of atomic transitions .",
    "then the _ transition terms _ and _ formulas _ of our language are defined respectively as @xmath226 where @xmath227 ranges over @xmath222 and @xmath113 ranges over @xmath101 .",
    "let @xmath228 be a transition model , let @xmath229 be a transition term , and let @xmath90 .",
    "then we say that @xmath229 _ allows _ the transition from @xmath19 to @xmath177 , and we write @xmath230 , if and only if    tl - atomic - tr : : :    @xmath231 for some @xmath225 and    @xmath232 ; tl - test : : :    @xmath233 for some transition formula    @xmath8 such that @xmath234 in the    sense described later in this definition , and    @xmath92 ; tl-@xmath235 : : :    @xmath236 , and    @xmath237 for two @xmath238 and    @xmath239 such that    @xmath240 and    @xmath241 ; tl-@xmath242 : : :    @xmath243 ,    @xmath244 and    @xmath245 ; tl - concat : : :    @xmath246 and there exists a    @xmath247 such that    @xmath248 and    @xmath249 .",
    "analogously , let @xmath8 be a transition formula , and let @xmath250 .",
    "then we say that @xmath19 _ satisfies _ @xmath8 , and we write @xmath234 , if and only if    tl-@xmath251 : : :    @xmath252 ; tl - atomic - pr : : :    @xmath253 for some @xmath106 and    @xmath254 ; tl-@xmath39 : : :    @xmath255 and    @xmath256 or @xmath257 ; tl-@xmath46 : : :    @xmath258 ,    @xmath256 and @xmath257 ; tl-@xmath156 : : :    @xmath259 and there exists a    @xmath177 such that    @xmath230 and    @xmath260 .    for any transition model @xmath261 , transition term @xmath229 and transition formula @xmath8 ,",
    "the set @xmath262 is a transition system and the set @xmath263 is a trump .    by induction .",
    "we end this subsection with a few simple observations about this logic .",
    "first of all , we did not take the negation as one of the primitive connectives .",
    "indeed , transition logic , much like dependence logic , has an intrinsically _ existential _ character : it can be used to reason about which sets of possible states an agent _ may _ reach , but not to reason about which ones such an agent _ must _ reach .",
    "there is of course no reason , in principle , why a negation could not be added to the language , just as there is no reason why a negation can not be added to dependence logic , thus obtaining the far more powerful _ team logic _",
    "@xcite : however , this possible extension will not be studied in this work .",
    "the connectives of transition logic are , for the most part , very similar to those of dynamic game logic , and their interpretation should pose no difficulties . the exception is the _ tensor operator _ @xmath264 , which substitutes the game union operator @xmath117 and which , while sharing roughly the same informal meaning , behaves in a very different way from the semantic point of view ( for example , it is not in general idempotent ! )    the decision game corresponding to @xmath264 can be described as follows : first the agent chooses an index @xmath265 , then he or she picks a strategy for @xmath266 and plays accordingly .",
    "however , the choice of @xmath111 may be a function of the initial state : hence , the agent can guarantee that the output state will be in @xmath177 whenever the input state is in @xmath19 only if he or she can split @xmath19 into two subsets @xmath238 and @xmath239 and guarantee that the state in @xmath177 will be reached from any state in @xmath238 when @xmath267 is played , and from any state in @xmath239 when @xmath268 is played .",
    "it is also of course possible to introduce a `` true '' choice operator @xmath269 , with semantical condition    tl-@xmath142 : : :    @xmath270 iff    @xmath244 or    @xmath245 ;    but we will not explore this possibility any further in this work , nor we will consider any other possible connectives such as , for example , the iteration operator    tl-@xmath271 : : :    @xmath272 iff there exist    @xmath273 and @xmath274 such    that @xmath275 , @xmath276 and    @xmath277 for all    @xmath278 .",
    "this subsection contains the central result of this work , that is , the analogues of theorems [ theo : repfo1 ] and [ theo : repfo2 ] for dependence logic and transition logic .",
    "+ representing dependence logic models and formulas in transition logic is fairly simple :    [ defin : dl2tl - mod ] let @xmath7 be a first - order model .",
    "then @xmath279 is the transition model @xmath280 such that    * @xmath83 is the set of all teams over @xmath7 ; * the set of all atomic transition symbols is @xmath281 , and hence @xmath222 is @xmath282 ; * for any variable @xmath14 , @xmath283 \\subseteq y \\}$ ] and @xmath284 \\subseteq y\\}$ ] ; * for any first - order literal or dependence atom @xmath285 , @xmath286 .",
    "[ defin : dl2tl - form ] let @xmath8 be a dependence logic formula .",
    "then @xmath287 is the transition term defined as follows :    1 .",
    "if @xmath8 is a literal or a dependence atom , @xmath288 ; 2 .   if @xmath255 , @xmath289 ; 3 .   if @xmath258 , @xmath290 ; 4 .",
    "if @xmath291 , @xmath292 ; 5 .",
    "if @xmath293 , @xmath294 .",
    "[ theo : tl - rep1 ] for all first - order models @xmath7 , teams @xmath19 and formulas @xmath8 , the following are equivalent :    * @xmath34 ; * @xmath295 ; * @xmath296 ; * @xmath297 .",
    "we show , by structural induction on @xmath8 , that the first condition is equivalent to the last one .",
    "the equivalences between the last one and the second and third ones are then trivial .    1 .   if @xmath8 is a literal or a dependence atom , @xmath298 if and only if @xmath299 , that is , if and only if @xmath34 ; 2 .",
    "@xmath300 if and only if @xmath237 for two @xmath301 such that @xmath302 and @xmath303 . by induction hypothesis",
    ", this can be the case if and only if @xmath304 and @xmath305 , that is , if and only if @xmath306 .",
    "3 .   @xmath307 if and only if @xmath308 and @xmath309 , that is , by induction hypothesis , if and only if @xmath310 .",
    "4 .   @xmath311 if and only if there exists a @xmath177 such that @xmath312 $ ] for some @xmath313 and @xmath314 . by induction hypothesis and downwards closure",
    ", this can be the case if and only if @xmath53 } \\psi$ ] for some @xmath313 , that is , if and only if @xmath315 ; 5 .",
    "@xmath316 if and only if @xmath317 for some @xmath318 $ ] , that is , if and only if @xmath57 } \\psi$ ] , that is , if and only if @xmath319 .",
    "one interesting aspect of this representation result is that dependence logic _",
    "formulas _ correspond to transition logic _",
    "transitions _ , not to transition logic _",
    "formulas_. this can be thought of as one first hint of the fact that dependence logic can be thought of as a logic of transitions : and in the later sections , we will explore this idea more in depth .",
    "representing transition models , game terms and formulas in dependence logic is somewhat more complex :    let @xmath320 be a transition model .",
    "furthermore , for any @xmath225 , let @xmath321 , and , for any @xmath106 , let @xmath322 .",
    "then @xmath323 is the first - order model with domain for the _ disjoint union _ of the sets @xmath324 and @xmath325 . ]",
    "@xmath326 whose signature contains    * for every @xmath225 , a ternary relation @xmath327 whose interpretation is @xmath328 ; * for every @xmath106 , a binary relation @xmath329 whose interpretation is @xmath330 .    for any transition formula @xmath8 and variable @xmath331 ,",
    "the dependence logic formula @xmath332 is defined as    1 .",
    "@xmath333 is @xmath251 ; 2 .   for all @xmath106",
    ", @xmath334 is @xmath335 ; 3 .",
    "@xmath336 is @xmath337 , where @xmath338 is the classical disjunction introduced in definition [ defin : classic_or ] ; 4 .   @xmath339 is @xmath340 ; 5 .",
    "@xmath341 is @xmath342 ,    where for any transition term @xmath229 , variable @xmath331 and unary relation symbol @xmath343 , @xmath344 is defined as    1 .   for all @xmath225",
    ", @xmath345 is @xmath346 ; 2 .   for all formulas @xmath8 ,",
    "@xmath347 is @xmath348 ; 3 .",
    "@xmath349 ; 4 .",
    "@xmath350 ; 5 .",
    "@xmath351 for a new and unused variable @xmath352 .",
    "[ theo : tl - rep2 ] for all transition models @xmath320 , transition terms @xmath229 , transition formulas @xmath8 , variables @xmath331 , sets @xmath353 and teams @xmath19 over @xmath323 with @xmath354 , is a set of states of the transition model . ]",
    "@xmath355 and @xmath356    the proof is by structural induction on terms and formulas .",
    "let us first consider the cases corresponding to formulas :    1 .   for all teams @xmath19 , @xmath357 and @xmath358 , as required",
    "suppose that @xmath359 .",
    "then there exists a @xmath360 such that @xmath361 } v_p(j , x)$ ] .",
    "hence , we have that @xmath362 ; and , by downwards closure , this implies that @xmath363 , and hence that @xmath364 as required .",
    "+ conversely , suppose that @xmath364 .",
    "then @xmath363 , and hence @xmath365 for some @xmath366",
    ". then we have by definition that @xmath361 } v_p(j , x)$ ] , and finally that @xmath367 .",
    "3 .   by proposition",
    "[ propo : classic_or ] , @xmath368 if and only if @xmath369 or @xmath370 .",
    "by induction hypothesis , this is the case if and only if @xmath371 or @xmath372 , that is , if and only if @xmath373 .",
    "4 .   @xmath374 if and only if @xmath369 and @xmath375 , that is , by induction hypothesis , if and only if @xmath376 .",
    "@xmath377 if and only if there exists a @xmath343 such that @xmath378 and @xmath379 } \\lnot py \\vee ( \\psi)^{dl}_y$ ] . by induction hypothesis",
    ", the first condition holds if and only if @xmath380 . as for the second one",
    ", it holds if and only if @xmath381 = y_1 \\cup y_2 $ ] for two @xmath41 , @xmath42 such that @xmath382 and @xmath383 .",
    "but then we must have that @xmath384 and that @xmath385 ; therefore , by downwards closure , @xmath386 and finally @xmath387 .",
    "+ conversely , suppose that there exists a @xmath343 such that @xmath380 and @xmath388 ; then by induction hypothesis we have that @xmath389 and that @xmath379 } \\lnot py \\vee ( \\psi)^{dl}_x$ ] , and hence @xmath390 .",
    "now let us consider the cases corresponding to transition terms :    1 .",
    "suppose that @xmath391 .",
    "if @xmath193 then @xmath392 , and hence by * non - creation * we have that @xmath393 , as required",
    ". + let us assume instead that @xmath175 .",
    "then , by hypothesis , there exists a @xmath360 such that * there exists a @xmath313 such that @xmath394[f / y ] } r_t(i , x , y)$ ] ; * @xmath394[t^{dl}/y ] } \\lnot r_t(i , x , y ) \\vee py$ ] .",
    "+ from the first condition it follows that for every @xmath395 there exists a @xmath396 such that @xmath397 : therefore , by the definition of @xmath327 , every such @xmath113 must be in @xmath398 .",
    "+ from the second condition it follows that whenever @xmath397 and @xmath399 , @xmath400 ; and , since @xmath401 , this implies that @xmath402 by the definition of @xmath327 .",
    "+ hence , by * monotonicity * and * downwards closure * , we have that @xmath403 and that @xmath404 , as required .",
    "+ conversely , suppose that @xmath405 for some @xmath406 .",
    "if @xmath392 then @xmath193 , and hence by proposition [ propo : emptyteam ] we have that @xmath407 , as required . otherwise , by * non - triviality * , @xmath408",
    "let now @xmath409 be any of its elements and let @xmath410 for all @xmath411 $ ] : then @xmath412[f / y ] } r_t(i , x , y)$ ] , as any assignment of this team sends @xmath331 to some element of @xmath398 and @xmath352 to @xmath413 .",
    "furthermore , let @xmath414 , and let @xmath396 be such that @xmath415 : then @xmath416 , and hence @xmath412[t^{dl}/y ] } \\lnot r_t(i , x , y ) \\vee py$ ] .",
    "so , in conclusion , @xmath417 , as required .",
    "2 .   @xmath418 if and only if @xmath419 and @xmath420 , that is , if and only if @xmath421 .",
    "3 .   @xmath422 if and only if @xmath237 for two @xmath423 such that * @xmath237 , and therefore @xmath424 ; * @xmath425 , that is , by induction hypothesis , @xmath426 ; * @xmath427 , that is , by induction hypothesis , @xmath428 ; + hence , if @xmath429 then @xmath430 .",
    "+ conversely , if @xmath431 for two @xmath324 , @xmath325 such that @xmath432 and @xmath433 , let @xmath434 clearly @xmath237 , and furthermore by induction hypothesis @xmath425 and @xmath427 .",
    "hence , @xmath429 , as required .",
    "@xmath435 if and only if @xmath436 and @xmath437 , that is , by induction hypothesis , if and only if @xmath438 . 5 .",
    "@xmath439 if and only if there exists a @xmath440 such that @xmath441 and there exists a @xmath442 such that @xmath443 . by downwards closure , if this is the case then @xmath444 too , and hence @xmath445 , as required .",
    "+ conversely , suppose that there exists a @xmath440 such that @xmath441 and @xmath444 .",
    "then , by induction hypothesis @xmath446 ; and furthermore , @xmath381 $ ] can be split into @xmath447 : s(y ) \\not \\in q\\}\\ ] ] and @xmath448 : s(y ) \\in q\\}\\ ] ] it is trivial to see that @xmath449 ; and furthermore , since @xmath450 and @xmath444 , by induction hypothesis we have that @xmath451 . thus @xmath379 } \\forall y ( \\lnot qy \\vee ( \\tau_2)^{dl}_y(p))$ ] and finally @xmath452 , and this concludes the proof .",
    "hence , the relationship between transition logic and dependence logic is analogous to the one between dynamic game logic and first - order logic . in the next sections",
    ", we will develop variants of dependence logic which are syntactically closer to transition logic , while still being first - order : as we will see , the resulting frameworks are expressively equivalent to dependence logic on the level of satisfiability , but can be used to represent finer - grained phenomena of _ transitions _ between sets of assignments .",
    "now that we have established a connection between dependence logic and a variant of dynamic game logic , it is time to explore what this might imply for the further development of logics of imperfect information . if , as theorems [ theo : tl - rep1 ] and [ theo : tl - rep2 ] suggest , dependence logic can be thought of as a logic of imperfect - information decision problems , perhaps it could be possible to develop variants of dependence logic in which expressions can be interpreted directly as transition systems ?    in what follows , we will do exactly that , first with _ transition dependence logic _  a variant of dependence logic , expressively equivalent to it , which is also a quantified version of transition logic  and then with _ dynamic dependence logic _",
    ", in which _ all _ expressions are interpreted as transitions !    but why would we interested in such variants of dependence logic ?",
    "one possible answer , which we will discuss in this subsection , is that transitions between teams are _ already _ a central object of study in the field of dependence logic , albeit in a non - explicit manner : after all , the semantics of dependence logic interprets quantifiers in terms of transformations of teams , and disjunctions in terms of decompositions of teams into subteams .",
    "this intuition is central to the study of issues of interdefinability in dependence logic and its variants , like for example the ones discussed in @xcite . as a simple example , let us recall definition [ defin : classic_or ] : @xmath453 where @xmath64 and @xmath65 are new variables .    as we said in proposition",
    "[ propo : classic_or ] , @xmath454 if and only if @xmath48 or @xmath49 .",
    "we will now sketch the proof of this result , and  as we will see  this proof will hinge on the fact that the above expression can be read as a specification of the following algorithm :    1 .",
    "choose an element @xmath455 and extend the team @xmath19 by assigning @xmath456 as the value of @xmath64 for all assignments ; 2 .",
    "choose an element @xmath457 and further extend the team by assigning @xmath458 as the value of @xmath65 for all assignments ; 3 .",
    "split the resulting team into two subteams @xmath41 and @xmath42 such that 1 .",
    "@xmath62 holds in @xmath41 , and the values of @xmath64 and @xmath65 coincide for all assignments in it ; 2 .",
    "@xmath63 holds in @xmath42 , and the values of @xmath64 and @xmath65 differ for all assignments in it .    since the values of @xmath64 and @xmath65 are chosen to always be respectively @xmath456 and @xmath458 , one of @xmath41 and @xmath42 is empty and the other is of the form @xmath459 $ ] , and since @xmath64 and @xmath65 do not occur in @xmath62 or @xmath63 the above algorithm can succeed ( for some choice of @xmath456 and @xmath458 ) only if @xmath48 or @xmath49 .    as another , slightly more complicated example , let us consider the following problem . given four variables @xmath460 , @xmath461 , @xmath462 and @xmath463 ,",
    "let @xmath464 be an _ exclusion atom _ holding in a team @xmath19 if and only if for all @xmath38 , @xmath465  that is , if and only if the sets of the values taken by @xmath466 and by @xmath467 in @xmath19 are disjoint .",
    "by theorem [ sigmatodl ] , we can tell at once that there exists some dependence logic formula @xmath468 such that for all suitable @xmath7 and @xmath19 , @xmath469 if and only if @xmath470 ; but what about the converse ? for example , can we find an expression @xmath471 , in the language of first order logic augmented with these exclusion atoms ( but with no dependence atoms ) , such that for all suitable @xmath7 and @xmath19 @xmath472 if and only if @xmath473 ?",
    "as discussed in @xcite in a more general setting , the answer is positive , and one such @xmath471 is @xmath474 , where @xmath475 is some variable other than @xmath331 and @xmath352 . in the second disjunct can be removed , but for simplicity we will keep it . ] why is this the case ?",
    "well , let us consider any team @xmath19 with domain containing @xmath331 and @xmath352 , and let us evaluate @xmath476 over it .",
    "as shown graphically in figure [ fig : f1 ] , the transitions between teams occurring during the evaluation of the formula correspond to the following algorithm :    1 .",
    "first , assign all possible values to the variable @xmath475 for all assignments in @xmath331 , thus obtaining @xmath477 = \\{s[m / z ] : s \\in x , m \\in { { \\texttt{dom}}}(m)\\}$ ] ; 2 .   then , remove from @xmath477 $ ] all assignments @xmath11 for which @xmath478 , keeping only the ones for which @xmath479 ; 3 .   then , verify that for any possible fixed value of @xmath331 , the possible values of @xmath352 and @xmath475 are disjoint .",
    "this algorithm succeeds only if @xmath352 is a function of @xmath331 .",
    "indeed , suppose that instead there are two assignments @xmath38 such that @xmath480 , @xmath481 and @xmath482 for three @xmath483 with @xmath484 .",
    "now we have that @xmath485 , s[c / z ] , s'[b / z ] , s'[c / z]\\ } \\subseteq x[m / z]$ ] : and since @xmath484 , we have that the assignments @xmath486 $ ] and @xmath487 $ ] are not removed from the team in the second step of the proof .",
    "but then @xmath486(xz ) = a c = s'[b / z](xy)$ ] , and therefore it is not true that @xmath488 . and , conversely ,",
    "if in the team @xmath19 the value of @xmath352 is a function of the value of @xmath331 then by splitting @xmath477 $ ] into the two subteams @xmath489 : s \\in x , s(y ) = s(z)\\}$ ] and @xmath490 : s(y ) \\not = s(z)\\}$ ] we have that @xmath491 , @xmath492 and @xmath493 ( since for all @xmath494 , @xmath495 ) .    on the other hand ,",
    "one dependence logic expression corresponding to @xmath464 is @xmath496 where @xmath497 , @xmath498 , @xmath64 and @xmath65 are new variable .",
    "we encourage the interested reader to verify that this is the case by examining the transitions between teams corresponding to the formula : in brief , the intuition is that first we extend our team by picking all possible pairs of values for @xmath497 and @xmath498 , then for any such pair we flag  through our choice of @xmath64 and @xmath65  whether @xmath499 is different from @xmath466 or from @xmath467 .",
    "this implies that no such pair is equal to both @xmath466 and @xmath467 , or , in other words , that @xmath466 and @xmath467 have no value in common .",
    "more and more complex examples of definability results of this kind can be found in @xcite ; but what we want to emphasize here is that all these examples , like the one we discussed in depth here , have a natural interpretation in terms of algorithms which transform teams and apply simple tests to them , as the above one .",
    "hence , we hope that the development of variants of dependence logic in which these transitions are made explicit might prove itself useful for the further study of this interesting class of problems .",
    "as stated , we will now define a variant of dependence logic which can also be seen as a quantified variant of transition logic .",
    "we will then prove that the resulting transition dependence logic is expressively equivalent to dependence logic , in the sense that any dependence logic formula is equivalent to some transition dependence logic formula and vice versa .",
    "let @xmath26 be a first - order signature .",
    "then the sets of all _ transition terms _ and of all _ formulas _ of dependence transition logic are given by the rules @xmath500 where @xmath14 ranges over all variables in @xmath31 , @xmath28 ranges over all relation symbols of the signature , @xmath29 ranges over all tuples of terms of the required arities , @xmath501 ranges over @xmath502 and @xmath30 range over the terms of our signature .    let @xmath7 be a first - order model , let @xmath229 be a first - order transition term of the same signature , and let @xmath19 and @xmath177 be teams over @xmath7 .",
    "then we say that the transition @xmath503 is _ allowed _ by @xmath229 in @xmath7 , and we write @xmath504 , if and only if    tdl-@xmath50 : : :    @xmath229 is of the form @xmath505 for some    @xmath506 and there exists a @xmath313    such that @xmath507\\subseteq y$ ] ; tdl-@xmath55 : : :    @xmath229 is of the form @xmath508 for some    @xmath506 and    @xmath509 \\subseteq y$ ] ; tdl - test : : :    @xmath229 is of the form @xmath108 ,    @xmath34 in the sense given later in this    definition , and @xmath92 ; tdl-@xmath235 : : :    @xmath229 is of the form @xmath264    and @xmath237 for some @xmath238 and    @xmath239 such that    @xmath510 and    @xmath511 ; tdl-@xmath242 : : :    @xmath229 is of the form @xmath512 ,    @xmath513 and    @xmath514 ; tdl - concat : : :    @xmath229 is of the form @xmath515 and    there exists a team @xmath136 such that    @xmath516 and    @xmath517 .",
    "similarly , if @xmath8 is a formula and @xmath19 is a team with domain @xmath31",
    ". then we say that @xmath19 _ satisfies _ @xmath8 in @xmath7 , and we write @xmath34 , if and only if    tdl - lit : : :    @xmath8 is a first - order literal and    @xmath35 in the usual first - order sense for all    @xmath36 ; tdl - dep : : :    @xmath8 is a dependence atom    @xmath37 and any two    @xmath38 which assign the same values to    @xmath2 also assign the same value to    @xmath1 ; tdl-@xmath39 : : :    @xmath8 is of the form @xmath518 and    @xmath519 or @xmath520 ; tdl-@xmath46 : : :    @xmath8 is of the form @xmath521 ,    @xmath519 and @xmath520 ; tdl-@xmath156 : : :    @xmath8 is of the form    @xmath522 and there exists a    @xmath177 such that    @xmath504 and    @xmath71 .",
    "as the next theorem shows , in this semantics formulas and transitions are interpreted in terms of trumps and transition systems :    for all transition dependence logic formulas @xmath8 , all models @xmath7 and all teams @xmath19 and @xmath177 , we have that    downwards closure : : :    if @xmath34 and @xmath70 then    @xmath73 ; empty team property : : :    @xmath69 .",
    "furthermore , for all transition dependence logic transition terms @xmath229 , all models @xmath7 and all teams @xmath19 , @xmath177 and @xmath136 ,    downwards closure : : :    if @xmath504 and    @xmath523 then    @xmath524 ; monotonicity : : :    if @xmath504 and    @xmath525 then    @xmath526 ; non - creation : : :    for all @xmath177 ,    @xmath527 ; non - triviality : : :    if @xmath175 then    @xmath528 .    the proof is by structural induction over @xmath8 and @xmath229 , and presents no difficulties whatsoever .    also , it is not difficult to see , on the basis of the results of the previous section , that this new variant of dependence logic is equivalent to the usual one :    for every dependence logic formula @xmath8 there exists a transition dependence logic transition term @xmath529 such that @xmath530 for all first - order models @xmath7 and teams @xmath19 .",
    "@xmath529 is defined by structural induction on @xmath8 , as follows :",
    "1 .   if @xmath8 is a first - order literal or a dependence atom then @xmath531 ; 2 .   if @xmath8 is @xmath518 then @xmath532 ; 3 .   if @xmath8 is @xmath521 then @xmath533 ; 4 .",
    "if @xmath8 is @xmath51 then @xmath534 ; 5 .   if @xmath8 is @xmath56 then @xmath535",
    "it is then trivial to verify , again by induction on @xmath8 , that @xmath34 if and only if @xmath536 , as required .    this representation result associates dependence logic _ formulas _ to transition dependence logic _",
    "transition terms_. this fact highlights the dynamical nature of dependence logic operators , which we discussed in the previous subsection : in this framework , quantifiers describe _ transformations _ of teams , the dependence logic connectives are operations over games , and the literals are interpreted as tests .",
    "in fact , one might wonder what is the purpose of transition dependence logic formulas : could we do away with them altogether , and develop a variant of transition dependence logic in which _ all _ formulas are transitions ?",
    "later , we will explore this idea further ; but first , let us verify that transition dependence logic is no more expressive than dependence logic .    for every transition dependence logic formula @xmath8",
    "there exists a dependence logic formula @xmath537 such that @xmath538 for all first - order models @xmath7 and teams @xmath19 .",
    "furthermore , for every transition dependence logic transition term @xmath229 and dependence logic formula @xmath211 there is a dependence logic formula @xmath539 such that @xmath540 again for all first - order models @xmath7 and teams @xmath19 .",
    "we prove the two claims together , by structural induction over @xmath8 and @xmath229 .",
    "first , let us consider the cases corresponding to formulas :    1 .",
    "if @xmath8 is a first order literal or a dependence atom , let @xmath537 be @xmath8 itself .",
    "as the interpretation of these expressions is the same in dependence logic and in transition dependence logic , there is nothing to prove .",
    "2 .   if @xmath8 is of the form @xmath40 , let @xmath537 be @xmath541 .",
    "this expression holds in a team if and only if @xmath542 or @xmath543 hold , that is , by induction hypothesis , if and only if @xmath62 or @xmath63 do .",
    "if @xmath8 is of the form @xmath47 , let @xmath537 be @xmath544",
    ". then @xmath537 holds if and only if @xmath62 and @xmath63 do , that is , if and only if @xmath8 does .",
    "4 .   if @xmath8 is of the form @xmath522 , let @xmath21 be the tuple of all variables occurring in @xmath545 , let @xmath28 be a new @xmath78-ary relation , and let @xmath537 be @xmath546 . indeed , suppose that @xmath547 : then for some relation @xmath28 , there exists a @xmath177 such that @xmath504 and @xmath548 .",
    "furthermore , @xmath549 , and therefore for the set @xmath550 we have that @xmath551 .",
    "but then , by downwards closure and locality , @xmath552 , and therefore @xmath553",
    ". + conversely , suppose that @xmath554 : then there exists a @xmath177 such that @xmath504 and @xmath71 .",
    "now let @xmath28 be @xmath555 : clearly @xmath556 , since @xmath557 , and furthermore @xmath558 , by locality and by the fact that ( by induction hypothesis ) @xmath552 .",
    "now let us consider the cases corresponding to transitions :    1 .",
    "if @xmath229 is of the form @xmath505 for some variable @xmath14 , let @xmath559 be @xmath560 . indeed , suppose that @xmath561 : then @xmath53 } \\theta$ ] for some @xmath313 , and by choosing @xmath562 $ ] we have that @xmath563 and @xmath564 , as required .",
    "conversely , suppose that for some @xmath177 , @xmath563 and @xmath564 : then for some @xmath313 , @xmath507 \\subseteq y$ ] , and by downwards closure we have that @xmath53 } \\theta$ ] .",
    "2 .   if @xmath229 is of the form @xmath508 for some variable @xmath14 , let @xmath559 be @xmath565 . indeed , suppose that @xmath566 : then @xmath57 } \\theta$ ] , and if we choose @xmath567 $ ] we have at once that @xmath568 and @xmath564 .",
    "conversely , if for some @xmath177 @xmath568 and @xmath564 then @xmath509 \\subseteq y$ ] and , by downwards closure , @xmath57 } \\theta$ ] .",
    "3 .   if @xmath229 is of the form @xmath108 , let @xmath559 be @xmath569 . indeed , suppose that @xmath570 : then by induction hypothesis @xmath34 , and , for @xmath571 , we have that @xmath572",
    ". furthermore , @xmath564 , as required .",
    "conversely , suppose that for some @xmath177 , @xmath572 and @xmath564 .",
    "then @xmath34 , and therefore @xmath547 ; and furthermore @xmath92 , and hence by downwards closure @xmath573 .",
    "hence , @xmath574 .",
    "4 .   if @xmath229 is of the form @xmath264 and @xmath21 is the tuple of all free variables of @xmath211 then let @xmath559 be @xmath575 , where @xmath28 is a new @xmath576-ary relation symbol . indeed",
    ", suppose that @xmath577 : then there exists a relation @xmath28 and two subteams @xmath238 and @xmath239 of @xmath19 such that @xmath237 , @xmath578 and @xmath579 .",
    "hence , there are two teams @xmath41 and @xmath42 such that @xmath580 , @xmath581 , @xmath582 and @xmath583 .",
    "now , let @xmath177 be @xmath584 : by monotonicity , we have that @xmath510 and @xmath511 , and furthermore @xmath557 too ( that is , for all @xmath585 , @xmath586 is in @xmath28 ) .",
    "since @xmath587 , this implies that @xmath564 , by locality and downwards closure .",
    "+ conversely , suppose that there is a @xmath177 such that @xmath588 and @xmath564 .",
    "then let @xmath28 be @xmath589 .",
    "now @xmath237 for two @xmath238 and",
    "@xmath239 such that @xmath510 and @xmath511 , and by induction hypothesis we have that @xmath590 and @xmath591 .",
    "but then @xmath592 ; and furthermore , by locality we have that @xmath587 .",
    "hence , @xmath593 , as required .",
    "if @xmath229 is of the form @xmath512 and @xmath21 is the tuple of all variables of @xmath211 then let @xmath559 be @xmath594 . indeed , suppose that @xmath577 : then for some relation @xmath28 , by induction hypothesis , there exist teams @xmath41 and @xmath42 such that @xmath595 , @xmath596 , @xmath582 and @xmath583 .",
    "now let @xmath177 be @xmath584 : as before , by monotonicity we have that @xmath513 and @xmath597 , and hence @xmath598 . finally ,",
    "since @xmath587 we have that @xmath599 , as required .",
    "+ conversely , suppose that there is a @xmath177 such that @xmath598 and @xmath564 . since @xmath598 , @xmath513 and @xmath597 .",
    "now let @xmath28 be @xmath555 .",
    "by induction hypothesis , @xmath600 and @xmath601 ; and furthermore , since @xmath564 we have that @xmath587 .",
    "if @xmath229 is of the form @xmath515 let @xmath559 be @xmath602 .",
    "indeed , @xmath603 if and only if there is a @xmath177 such that @xmath604 and @xmath605 , that is , if and only if there are a @xmath177 and a @xmath136 such that @xmath513 , @xmath606 and @xmath607 .",
    "however , in a sense , transition dependence logic allows one to consider subtler distinctions than dependence logic does .",
    "the formula @xmath608 , for example , could be translated as any of    * @xmath609 ; * @xmath610 ; * @xmath611 ; * @xmath612 .",
    "the intended interpretations of these formulas are rather different , even though they happen to be satisfied by the same teams : and for this reason , transition dependence logic may be thought of as a proper refinement of dependence logic even though it has exactly the same expressive power .",
    "_ dynamic semantics _ is the name given to a family of semantical frameworks which subscribe to the following principle ( @xcite ) :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ the meaning of a sentence does not lie in its truth conditions , but rather in the way it changes ( the representation of ) the information of the interpreter . _",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    in various forms , this intuition can be found prefigured in some of the later work of ludwig wittgenstein , as well as in the research of philosophers of language such as austin , grice , searle , strawson and others ( @xcite ) ; but its formal development can be traced back to the work of groenendijk and stokhof about the proper treatment of pronouns in formal linguistics ( @xcite ) .",
    "+ we refer to @xcite for a comprehensive analysis of the linguistic issues which caused such a development , as well as for a description of the ways in which this framework was adapted in order to model presuppositions , questions / answers and other phenomena ; here we will only present a formulation of _ dynamic predicate semantics _ , the alternative semantics for first - order logic which was developed in the above mentioned paper by groenendijk and stokhof .",
    "let @xmath8 be a first - order formula , let @xmath7 be a suitable first - order model and let @xmath11 and @xmath182 be two assignments .",
    "then we say that the transition from @xmath11 to @xmath182 is _ allowed _ by @xmath8 in @xmath7 , and we write @xmath613 , if and only if    dpl - atom : : :    @xmath8 is an atomic formula , @xmath614 and    @xmath35 in the usual sense ; dpl-@xmath153 : : :    @xmath8 is of the form @xmath615 ,    @xmath616 and for all assignments @xmath617 ,    @xmath618 ; dpl-@xmath46 : : :    @xmath8 is of the form @xmath47    and there exists an @xmath617 such that    @xmath619 and    @xmath620 ; dpl-@xmath39 : : :    @xmath8 is of the form @xmath40 ,    @xmath614 and there exists an @xmath617 such that    @xmath619 or    @xmath621 ; dpl-@xmath622 : : :    @xmath8 is of the form    @xmath623 , @xmath614 and for    all @xmath617 it holds that    @xmath624 dpl-@xmath50 : : :    @xmath8 is of the form @xmath625 and    there exists an element @xmath626 such    that @xmath627 \\rightarrow s ' } \\psi$ ] ; dpl-@xmath55 : : :    @xmath8 is of the form @xmath628 ,    @xmath614 and for all elements    @xmath626 there exists an @xmath617    such that @xmath627 \\rightarrow h } \\psi$ ] .    a formula @xmath8 is _ satisfied _ by an assignment @xmath11 if and",
    "only if there exists an assignment @xmath182 such that @xmath613 ; in this case , we will write @xmath35 .    we will discuss neither the formal properties of this formalism nor its linguistic applications here .",
    "all that is relevant for our purposes is that , according to it , formulas are interpreted as _",
    "transitions _ from assignments to assignments , and furthermore that the rule for conjunction allows us to bind occurrences of a variable of the second conjunct to quantifiers occurring in the first one . : by the rules given , it is easy to see that @xmath629 if and only if @xmath630 , that is , if and only if @xmath631 , differently from the case of tarski s semantics . ]    the similarity between this semantics and our semantics for transition terms should be evident .",
    "hence , it seems natural to ask whether we can adopt , for a suitable variant of dependence logic , the following variant of groenendijk and stokhof s motto : +    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ the meaning of a formula does not lie in its satisfaction conditions , but rather in the team transitions it allows .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    from this point of view , _ transition terms _ are the fundamental objects of our syntax , and formulas can be removed altogether from the language  although , of course , the tests corresponding to literals and dependence formulas should still be available . as in groenendijk and stokhof s logic , satisfaction becomes then a derived concept : in brief , a team @xmath19 can be said to satisfy a term @xmath229 if and only if there exists a @xmath177 such that @xmath229 allows the transition from @xmath19 to @xmath177 , or , in other words , if and only if _ some _ set of non - losing outcomes can be reached from the set @xmath19 of initial positions in the game corresponding to @xmath229 .",
    "in the next section , we will make use of these intuitions to develop another , terser version of dependence logic ; and finally , we will discuss some implications of this new version for the further developments and for the possible applications of this interesting logical formalism .",
    "we will now develop a formula - free variant of transition dependence logic , along the lines of groenendijk and stockhof s dynamic predicate logic .",
    "let @xmath26 be a first - order signature .",
    "the set of all formulas of dynamic dependence logic over @xmath26 is given by the rules @xmath632 where , as usual , @xmath28 ranges over all relation symbols of our signature , @xmath29 ranges over all tuples of terms of the required lengths , @xmath501 ranges over @xmath502 , @xmath30 range over all terms , and @xmath14 ranges over @xmath31 .",
    "the semantical rules associated to this language are precisely as one would expect :    [ ddl - tts ] let @xmath7 be a first - order model , let @xmath229 be a dynamic dependence logic formula over the signature of @xmath7 , and let @xmath19 and @xmath177 be two teams over @xmath7 with domain @xmath31 .",
    "then we say that @xmath229 _ allows _ the transition @xmath185 in @xmath7 , and we write @xmath504 , if and only if    ddl - lit : : :    @xmath229 is a first - order literal ,    @xmath633 in the usual first - order sense for all    @xmath36 , and @xmath92 ; ddl - dep : : :    @xmath229 is a dependence atom    @xmath37 , @xmath92 ,    and any two assignments @xmath38 which coincide over    @xmath2 also coincide over @xmath1 ; ddl-@xmath50 : : :    @xmath229 is of the form @xmath505 for some    @xmath506 , and    @xmath507 \\subseteq y$ ] for some    @xmath52 ; ddl-@xmath55 : : :    @xmath229 is of the form @xmath508 for some    @xmath506 , and    @xmath509 \\subseteq y$ ] ; ddl-@xmath235 : : :    @xmath229 is of the form @xmath264    and @xmath237 for two teams @xmath238 and    @xmath239 such that    @xmath510 and    @xmath511 ; ddl-@xmath242 : : :    @xmath229 is of the form @xmath512 ,    @xmath513 and    @xmath597 ; ddl - concat : : :    @xmath229 is of the form @xmath515 , and    there exists a @xmath136 such that    @xmath516 and    @xmath517 .    a formula @xmath229 is said to be _ satisfied _ by a team @xmath19 in a model @xmath7 if and only if there exists a @xmath177 such that @xmath504 ; and if this is the case , we will write @xmath634 .",
    "it is not difficult to see that dynamic dependence logic is equivalent to transition dependence logic ( and , therefore , to dependence logic ) .",
    "let @xmath8 be a dependence logic formula .",
    "then there exists a dynamic dependence logic formula @xmath635 which is equivalent to it , in the sense that @xmath636 for all suitable teams @xmath19 and models @xmath7    we build @xmath635 by structural induction :    1 .   if @xmath8 is a literal or a dependence atom then @xmath637 ; 2 .   if @xmath8 is @xmath40 then @xmath638 ; 3 .   if @xmath8 is @xmath47 then @xmath639 ; 4 .   if @xmath8 is @xmath625 then @xmath640 ; 5 .   if @xmath8 is @xmath628 then @xmath641 .",
    "let @xmath229 be a dynamic dependence logic formula .",
    "then there exists a transition dependence logic transition term @xmath642 such that @xmath643 for all suitable @xmath19 , @xmath177 and @xmath7 , and such that hence @xmath644    build @xmath642 by structural induction :    1 .   if @xmath229 is a literal or dependence atom then @xmath645 ; 2 .   if @xmath229 is of the form @xmath505 or @xmath508 then @xmath646 ; 3 .   if @xmath229 is of the form @xmath264 then @xmath647 ; 4 .   if @xmath229 is of the form @xmath512 then @xmath648 ; 5 .   if @xmath229 is of the form @xmath515 then @xmath649 .",
    "dynamic dependence logic is equivalent to transition dependence logic and to dependence logic    follows from the two previous results and from the equivalence between dependence logic and transition dependence logic .",
    "in this work , we established a connection between a variant of dynamic game logic and dependence logic , and we used it as the basis for the development of variants of dependence logic in which it is possible to talk directly about transitions from teams to teams .",
    "this suggests a new perspective on dependence logic and team semantics , one which allow us to study them as a special kind of _ algebras of nondeterministic transitions between relations_. one of the main problems that is now open is whether it is possible to axiomatize these algebras , in the same sense in which , in @xcite , allen mann offers an axiomatization of the algebra of trumps corresponding to if logic ( or , equivalently , to dependence logic ) .",
    "furthermore , we might want to consider different choices of connectives , like for example ones related to the theory of database transactions .",
    "the investigation of the relationships between the resulting formalisms is a natural continuation of the currently ongoing work on the study of the relationship between various extensions of dependence logic , and promises of being of great utility for the further development of this fascinating line of research .",
    "the author wishes to thank johan van benthem and jouko vnnen for a number of useful suggestions and insights .",
    "furthermore , he wishes to thank the reviewers for a number of highly useful suggestions and comments .",
    "hintikka , j. and g. sandu : 1989 , ` informational independence as a semantic phenomenon ' . in : j. fenstad ,",
    "i. frolov , and r. hilpinen ( eds . ) : _ logic , methodology and philosophy of science_. elsevier , pp .",
    "571589 .",
    "kontinen , j. and v. nurmi : 2009 , ` team logic and second - order logic ' .",
    "in : h. ono , m. kanazawa , and r. de  queiroz ( eds . ) : _ logic , language , information and computation _ , vol .",
    "5514 of _ lecture notes in computer science_. springer berlin / heidelberg , pp .",
    "230241 .",
    "parikh , r. : 1985 , ` the logic of games and its applications ' . in : _ selected papers of the international conference on `` foundations of computation theory '' on topics in the theory of computation_. new york , ny , usa , pp .",
    "111139 .",
    "vnnen , j. : 2007b , ` team logic ' . in : j. van benthem , d. gabbay , and b. lwe ( eds . ) : _ interactive logic .",
    "selected papers from the 7th augustus de morgan workshop_. msterdam university press , pp ."
  ],
  "abstract_text": [
    "<S> we examine the relationship between dependence logic and game logics . </S>",
    "<S> a variant of dynamic game logic , called _ transition logic _ , is developed , and we show that its relationship with dependence logic is comparable to the one between first - order logic and dynamic game logic discussed by van benthem .    </S>",
    "<S> this suggests a new perspective on the interpretation of dependence logic formulas , in terms of assertions about _ reachability _ in games of imperfect information against nature . </S>",
    "<S> we then capitalize on this intuition by developing expressively equivalent variants of dependence logic in which this interpretation is taken to the foreground . </S>"
  ]
}
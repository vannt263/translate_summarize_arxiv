{
  "article_text": [
    "physical - layer network coding ( pnc ) , first proposed in @xcite , is a subfield of network coding @xcite that is attracting much attention recently .",
    "the simplest system in which pnc can be applied is the two - way relay channel ( twrc ) , where two end nodes exchange information with the help of a relay node in the middle , as illustrated in fig .",
    "[ fig : system](a ) .    compared with the conventional relay system ,",
    "pnc doubles the throughput of twrc by reducing the needed time slots from four to two . in pnc , in the first time slot , the two end nodes send signals simultaneously to the relay ; in the second phase , the relay processes the superimposed signals and maps them to network - coded information for broadcast back to the end nodes . from the network - coded information ,",
    "each end node then makes use of its self information to extract the information from the other end node .",
    "a key issue in pnc is how to deal with the asynchrony between signals transmitted by multiple transmitters .",
    "that is , symbols transmitted by different transmitters could arrive at the receiver with symbol misalignment as well as relative carrier - phase offset .",
    "many previous works ( _ e.g. _ , @xcite ) found that symbol misalignment and carrier - phase offset will result in appreciable performance penalties .",
    "for bpsk modulation , @xcite showed that the ber performance penalties due to the carrier phase asynchrony and symbol offset are both 3 db in the worst case .",
    "for qpsk modulation , the penalty can be as large as 6 db in the worst case when the carrier - phase offset is @xmath0 @xcite .",
    "these earlier investigations led to a common understanding that near - perfect symbol and carrier - phase synchronization are important for good performance in pnc .",
    "we believe that this is a misconception , and that asynchronous pnc can have good performance if we use the right methods to deal with the asynchrony .    the study of bpsk pnc in @xcite , for example , made use of suboptimal decoding methods at the relay for the asynchronous pnc case .",
    "furthermore , the joint effect of symbol and phase asynchronies was not investigated . in this paper",
    ", we propose an optimal maximum - likelihood ( ml ) decoding method making use of a belief propagation ( bp ) algorithm that addresses symbol and phase asynchronies jointly .",
    "we find that the ber performance penalty can be reduced from 3 db ( using the method in @xcite ) to less than 0.5 db ( using our method here ) for the worst case .    in qpsk pnc ,",
    "the penalty is larger than 6 db @xcite only when the symbols are perfectly aligned and when the phase offset is @xmath0 .",
    "we find that using our optimal bp decoding algorithm , when there is a 1/2 symbol misalignment , the penalty is less than 1 db ( compared with the case when symbol and phase are perfectly synchronized ) .",
    "additionally , an interesting result is that with the 1/2 symbol misalignment , the spread of penalties under various carrier - phase offsets is no more than 0.5 db .",
    "this means that symbol misalignment has the effect of desensitizing the performance of the system to carrier - phase offset .",
    "the practical implication is as follows :    in practice , it is easier to control symbol timing than carrier - phase offset because of the relative time scales involved .",
    "if we could control the symbol offset in pnc ( _ e.g. _ , @xcite presented a method to synchronize symbols from different sources ) , it would actually be advantageous to deliberately introduce symbol misalignment so that the system is robust against uncontrollable phase offsets .",
    "the remainder of this paper is organized as follows : section ii introduces the system model adopted by this paper .",
    "section iii classifies and defines synchronous pnc and asynchronous pnc .",
    "section iv presents our bp ml decoding method for dealing with asynchrony in pnc .",
    "numerical results are given in section v. finally , section vi concludes this paper .",
    "we study the two - way relay channel as shown in fig . [",
    "fig : system ] , in which nodes _ a _ and _ b _ exchange information with the help of relay node _ r_. we assume that all nodes are half - duplex , _",
    "i.e. _ , a node can not receive and transmit simultaneously .",
    "we also assume that there is no direct link between nodes _ a _ and _ b_.        we consider a two - phase transmission scheme consisting of an uplink phase and a downlink phase . in the uplink phase , nodes _",
    "a _ and _ b _ transmit packets to node _ r _ simultaneously . in the downlink phase ,",
    "based on the overlapped signals received from _ a _ and _ b _ , _ r _ constructs a network - coded packet and broadcast the packet to _ a _ and _ b_. upon receiving the network - coded packet , _ a _ ( _ b _ ) then attempts to recover the original packet transmitted by _",
    "b _ ( _ a _ ) in the uplink phase using self - information @xcite .    consider the uplink phase again , if only _ a _ transmitted , then the received complex baseband signal at _ r _ ( _ i.e. _ , the received signal after down - conversion from the carrier frequency and low - pass filtering ) would be @xmath1p(t - nt ) }   + w_r ( t ) , \\label{equ : apncsys1}\\end{aligned}\\ ] ] where @xmath2 is the received signal amplitude ; @xmath3)_{n = 1, ... ,n } $ ] are the symbols in the packet of _ a _ ; @xmath4 is the pulse shaping function for the baseband signal ; and @xmath5 is gaussian noise with double - sided power spectral density @xmath6 for both the real and imaginary components within the baseband of interest . in the pnc set - up , _ a _ and _ b _ transmit simultaneously . in this case , the received complex baseband signal at _",
    "r _ is @xmath7p(t - nt ) + h_b x_b [ n]p(t - \\delta   - nt ) } \\right\\}}\\nonumber\\\\   & + w_r ( t ) , \\label{equ : apncsys2}\\end{aligned}\\ ] ] where @xmath8 ( @xmath9 is the relative phase offset between the signals from _ a _ and _ b _ due to phase asynchrony in their carrier - frequency oscillators , and difference in the delays of the two uplink channels ) ; @xmath10)_{n = 1, ... ,n}$ ] are the symbols in the packet of _ b _ ; and @xmath11 is a time offset between the arrivals of the signals from _ a _ and _ b_. without loss of generality , we assume the signal of _ a _ arrives earlier than _ b_. furthermore , we assume @xmath11 is within one symbol period _ t_. thus , @xmath12 . is more than one symbol period , we could generalize our treatment here so that @xmath13 is larger than the number of symbols in a packet .",
    "the packets will only be partially overlapping , with non - overlapping symbols at the front end and tail end .",
    "essentially , our assumption of @xmath11 being within one symbol period implies that we are looking at the `` worst case '' with maximum overlapping between the two packets . when there are additional non - overlapping symbols at the front and tail ends , the decoding will have better error probability performance .",
    "] we refer to @xmath11 and @xmath9 as the symbol and phase offsets ( or misalignments ) at _ r _ , respectively .",
    "note that we have assumed a flat fading channel , and the channel gains stay constant within a packet duration .",
    "for simplicity , we assume power control so that @xmath14 . furthermore , for convenience , we assume time is expressed in unit of symbol duration , so that @xmath15 . then , we can rewrite ( [ equ : apncsys2 ] ) as @xmath16p(t - n ) + x_b [ n]p(t - \\delta   - n)e^{j\\phi } } \\right\\}}\\nonumber\\\\   & + w_r ( t ) .",
    "\\label{equ : apncsys3}\\end{aligned}\\ ] ]    in general , the pulse shaping function @xmath17 can take different forms . to bring out the essence of our results in the simplest manner , throughout this paper ,",
    "we assume the rectangular pulse shape : @xmath18 .",
    "a critical design issue is how node _",
    "r _ makes use of @xmath19 to construct a packet for broadcast to nodes _ a _ and _ b _ in the downlink phase . in this paper",
    ", we assume that _ r _ first oversamples @xmath20 to obtain @xmath21 signal samples .",
    "the @xmath21 signal samples will be used to construct an _",
    "n_-symbol packet for broadcast to _ a _ and _ b_. the oversampling procedure is similar to that in @xcite and described below . for @xmath22 @xmath23 & = \\frac{1}{\\delta}\\int_{(n - 1)}^{(n - 1 ) + \\delta } { ( { x_a [ n ] + x_b [ n - 1]e^{j\\phi }   + \\frac{w_r ( t)}{\\sqrt{p } } } ) d } t \\nonumber\\\\ & = x_a [ n ] + x_b [ n - 1]e^{j\\phi }   + w_r [ 2n - 1 ] , \\nonumber\\\\ y_r [ 2n ] & = \\frac{1}{{1 - \\delta } } \\int_{(n - 1 ) + \\delta } ^n { ( { x_a [ n ] + x_b [ n]e^{j\\phi }   + \\frac{w_r ( t)}{\\sqrt{p } } } ) d } t \\nonumber\\\\ & = x_a [ n ] + x_b [ n]e^{j\\phi }   + w_r [ 2n ] , \\label{equ : apncsys4 } \\\\",
    "\\text{and}\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ & \\",
    "\\nonumber\\\\ y_r [ 2n + 1 ] & = \\frac{1}{\\delta \\sqrt{p}}\\int_n^{n + \\delta } { \\left ( { x_b [ n]e^{j\\phi }   + w_r ( t)/\\sqrt{p } } \\right)d } t \\nonumber\\\\ & = x_b [ n]e^{j\\phi }   + w_r [ 2n + 1 ] , \\nonumber\\end{aligned}\\ ] ] where @xmath24 = 0 $ ] , and @xmath25 $ ] ( also @xmath26 $ ] ) and @xmath27 $ ] are a zero - mean complex gaussian noise with variance @xmath28 and @xmath29 , respectively , for both the real and imaginary components .    fig .",
    "[ fig : system](b ) is a schematic diagram of our system .",
    "this paper adopts the following notation :    * @xmath30,x_i [ 2], ... ,x_i [ n ] } \\right)$ ] denotes the source packet of node _ i _ , @xmath31 ; * @xmath32,y_r [ 2], ...",
    ",y_r [ n],y_r [ n + 1], ... ,y_r [ 2n + 1 ] } \\right)$ ] denotes the received packet ( with the aforementioned oversampling ) at relay node _ r _ ; * @xmath33,w_r [ 2], ... ,w_r [ n],w_r [ n + 1], ... ,\\\\w_r [ 2n + 1 ] } \\right)$ ] denotes the receiver noise at node _",
    "* @xmath34,x_r [ 2], ... ,x_r [ n ] } \\right)$ ] denotes the network - coded packet at relay node _",
    "r _ ; * @xmath35,y_i [ 2], ... ,y_i [ n ] } \\right)$ ] denotes the received pnc packet at node _ i _ , @xmath31 ; * @xmath36,w_i [ 2], ... ,w_i [ n ] } \\right)$ ] denotes the receiver noise at node _",
    "i _ , @xmath31 ; * @xmath37,\\hat x_i [ 2], ... ,\\hat x_i [ n ] } \\right)$ ] denotes the decoded source packet of node _ i _ , @xmath38 , at the other end node ;    where @xmath13 is the number of source symbols .",
    "in the above , for bpsk , @xmath39,\\hat x_i [ \\cdot ] , x_r [ \\cdot ] \\in \\{-1,1\\}$ ] ; for qpsk , @xmath39,\\hat x_i [ \\cdot ] , x_r [ \\cdot ] \\in \\ { { { ( 1 + j ) } \\mathord{\\left/ { \\vphantom { { ( 1 + j ) } { \\sqrt 2 } } } \\right .",
    "\\kern-\\nulldelimiterspace } { \\sqrt 2 } } , { { { \\rm { } } ( - 1 + j ) } \\mathord{\\left/ { \\vphantom { { { \\rm { } } ( - 1 + j ) } { \\sqrt 2 , } } } \\right .",
    "\\kern-\\nulldelimiterspace } { \\sqrt 2 , } } { \\rm { } } { { ( - 1 - j ) } \\mathord{\\left/ { \\vphantom { { ( - 1 - j ) } { \\sqrt 2 , } } } \\right .",
    "\\kern-\\nulldelimiterspace } { \\sqrt 2 , } } { \\rm { } } { { ( 1 - j ) } \\mathord{\\left/ { \\vphantom { { ( 1 - j ) } { \\sqrt 2 } } } \\right .",
    "\\kern-\\nulldelimiterspace } { \\sqrt 2 } } \\}$ ] .",
    "in addition , @xmath40,y_r [ \\cdot ] , w_i [ \\cdot ] , w_r [ \\cdot ] \\in \\mathbb{c}$ ] .",
    "table [ tab : class ] shows the four possible cases in pnc systems .",
    "case 1 is the perfectly synchronized case studied in @xcite ; case 2 , in @xcite ; and case 3 , in @xcite .",
    "this paper proposes a general scheme to tackle all four cases under one framework .",
    ".four cases of pnc systems [ cols=\"^,^,^ \" , ]     -10mm[tab : class ]      synchronous pnc is the case where the two end nodes transmit their packets @xmath41 and @xmath42 in a synchronous manner so that the relay node _",
    "r _ receives the combined signals with @xmath43 and @xmath44 . the received baseband packet at _",
    "r _ is @xmath45 with _ n _ symbols .",
    "node _ r _ then transforms @xmath46 into a network - coded packet @xmath47 for transmission in the downlink phase .    for this case , with reference to ( [ equ : apncsys4 ] ) , since @xmath44 ,",
    "the variance of the noise term @xmath48 $ ] is infinite , and the signal is contained only in the even terms @xmath49 $ ] .",
    "thus , we can write @xmath50 = x_a [ n ] + x_b [ n ] + w_r [ 2n ] , \\label{equ : apncbp1}\\end{aligned}\\ ] ] where @xmath51 , and @xmath27 $ ] is zero - mean gaussian noise with variance @xmath52 for both the real and imaginary components .    for bpsk , @xmath53 \\in \\{- 1,1\\}$ ] . only the real component of @xmath27 $ ] needs to be considered . for qpsk , since we are considering a synchronous system , the in - phase and quadrature - phase components in ( [ equ : apncbp1 ] ) are independent ; it can therefore be considered as two parallel bpsk systems . in the following , we assume bpsk .",
    "let us consider a particular _",
    "n _ , and omit the index _",
    "n _ in our notation for simplicity .",
    "the _ a posteriori _ probability of the combination @xmath54 is given by @xmath55 ^ 2 } } { { 2\\sigma ^2 } } } \\right\\}.\\end{aligned}\\ ] ]    let us use @xmath56 to represent bit 0 and @xmath57 to represent bit 1 .",
    "suppose that the downlink transmission also uses bpsk .",
    "for pnc output , @xmath58 , let us consider the _",
    "xor _ mapping : @xmath59 @xcite .",
    "then , @xmath60 if @xmath61 , and @xmath62 if @xmath63 .",
    "the following decision rule is used to map @xmath64 to @xmath58 : @xmath65      asynchronous pnc is the case where the two end nodes transmit their packets @xmath41 and @xmath42 in an asynchronous manner so that the relay node _",
    "r _ receives the combined signals with @xmath66 or @xmath67 . the received baseband packet at _",
    "r _ is @xmath45 with @xmath21 symbols .",
    "r _ then transforms @xmath46 into a network - coded packet @xmath47 for transmission in the downlink phase .",
    "the asynchronous case has been studied previously . however ,",
    "suboptimal pnc mappings @xmath47 were considered .",
    "@xcite and @xcite argued that the largest ber performance penalty is 3 db for bpsk modulation ( for both phase and symbol asynchronies ) .",
    "these results , however , are based on suboptimal decoding methods .",
    "@xcite mentioned that there is a maximum 6 db ber performance penalty for qpsk modulation when @xmath68 and @xmath66 . to the best of our knowledge ,",
    "no quantitative results and concrete explanation have been given for the qpsk case for general @xmath11 and @xmath9 .",
    "@xcite used an amplify - and - forward method in which the overlapped signals received at the relay are simply amplified and broadcasted back to the end nodes .",
    "this method does not require synchronization between the end nodes , but introduces some inefficiency , because the relay s noise is forwarded along with the signal to the end nodes .",
    "@xcite investigated systems in which symbols are aligned but phases are not .",
    "it uses qpsk for uplinks , but a higher order constellation map ( _ e.g. _ , 5qam ) for downlinks when the uplink phase offset is such that the use of qpsk will lead to poor performance . ref .",
    "@xcite investigated ofdm pnc .",
    "because of the long duration of ofdm symbols in the frequency domain , the symbols from two end nodes can be considered as `` almost aligned '' .",
    "however , the phase offset is not addressed .",
    "none of the prior methods attempt to look at the symbol and phase offset jointly .",
    "furthermore , they try to `` deal with '' asynchrony , rather than to `` exploit '' asynchrony to gain performance advantage .",
    "as will be shown in this paper , we can exploit symbol asynchrony to gain robustness of the system against phase asynchrony .",
    "this section presents a pnc decoding scheme based on belief propagation that deals with symbol and phase asynchronies jointly .",
    "we refer to the decoding method as bp - pnc .",
    "we make use of the oversampled symbols in ( [ equ : apncsys4 ] ) to construct a tanner graph @xcite as shown in fig .",
    "[ fig : tannerbppnc ] . in the tanner graph",
    ", @xmath46 denotes the evidence nodes , and there are @xmath21 such nodes ; @xmath69 denotes the constraint nodes ( also known as the compatibility or check nodes ) ; and _ x _ denotes the source ( or variable ) nodes .",
    "we aim to decode the combination @xmath70,x_b [ n ] } \\right)$ ] in @xmath71 . for simplicity",
    ", we use @xmath72 to denote @xmath73,x_b [ j ] } \\right)$ ] . note that the tanner graph has a tree structure .",
    "this means that bp can find the exact solution for the _ a posteriori _",
    "probability @xmath74 at each source node .",
    "furthermore , the solution can be found after only one iteration of the message - passing algorithm ( see @xcite ) . from the decoded @xmath75",
    ", we can then find the maximum _ a posteriori _ probability ( map ) _ xor _ value , @xmath76 = \\arg \\mathop { \\max } \\limits_{x_r [ n ] } \\sum\\limits_{x^{n , n } : \\",
    "x_a [ n ] \\oplus x_b [ n ] = x_r [ n ] } { \\pr \\left ( { x^{n , n } |y_r } \\right)}$ ] . in summary",
    ", bp can converge quickly and is map - optimal as far as the ber of @xmath77 \\oplus x_b [ n]$ ] is concerned .",
    "note that the map optimal scheme is also ml optimal because each of the possible symbol values for @xmath77 $ ] and @xmath78 $ ] are equally likely ( _ i.e. _ , @xmath79 = \\eta _ a } \\right ) = \\pr \\left ( { x_b [ n ] = \\eta _ b } \\right ) = \\frac{1}{{|\\chi |}}$ ] , where @xmath80 , and @xmath81 is the alphabet of modulated symbols . ) .",
    "let us now consider qpsk modulation , in particular , we define @xmath82 as the symbol set .",
    "with reference to ( [ equ : apncsys4 ] ) , we have @xmath77 = { a \\mathord{\\left/ { \\vphantom { a { \\sqrt 2 } } } \\right .",
    "\\kern-\\nulldelimiterspace } { \\sqrt 2 } } $ ] and @xmath78 = { b \\mathord{\\left/ { \\vphantom { b { \\sqrt 2 } } } \\right .",
    "\\kern-\\nulldelimiterspace } { \\sqrt 2}}$ ] , where @xmath83 .",
    "define @xmath84 = { a \\mathord{\\left/   { \\vphantom { a { \\sqrt 2 } } } \\right .",
    "\\kern-\\nulldelimiterspace } { \\sqrt 2 } } , x_b [ \\left\\lfloor { k/2 } \\right\\rfloor ] = { b \\mathord{\\left/   { \\vphantom { b { \\sqrt 2 } } } \\right .",
    "\\kern-\\nulldelimiterspace } { \\sqrt 2 } } |y_r [ k ] } \\right)$ ] .",
    "note that here , @xmath85 is computed based on @xmath86 $ ] only , and not on the whole @xmath87 . also , @xmath85 is fixed and does not change throughout the message passing algorithm in the tanner graph . @xmath88 and @xmath89 for @xmath90",
    "are given as follows : @xmath91 = \\frac{a}{{\\sqrt 2 } } , x_b [ n - 1 ] = \\frac{b}{{\\sqrt 2 } } \\bigg\\vert y_r [ 2n - 1 ] \\right ) \\nonumber\\\\ & = \\frac{1}{{2\\pi \\sigma ^2 /\\delta } } \\exp \\left\\ { { \\frac{{\\left ( { y_r^{{\\mathop{\\rm re}\\nolimits } } [ 2n - 1 ] - { { { \\mathop{\\rm re}\\nolimits } \\left ( { a + be^{j\\phi } } \\right ) } \\mathord{\\left/ { \\vphantom { { { \\mathop{\\rm re}\\nolimits } \\left ( { a + be^{j\\phi } }",
    "\\right ) } { \\sqrt 2 } } } \\right .",
    "\\kern-\\nulldelimiterspace } { \\sqrt 2 } } } \\right)^2 } } { { 2\\sigma ^2 /\\delta } } } \\right\\}\\cdot \\nonumber\\\\ & \\ \\ \\ \\",
    "\\exp \\left\\ { { \\frac{{\\left ( { y_r^{{\\mathop{\\rm im}\\nolimits } } [ 2n - 1 ] - { { { \\mathop{\\rm im}\\nolimits } \\left ( { a + be^{j\\phi } } \\right ) } \\mathord{\\left/ { \\vphantom { { { \\mathop{\\rm im}\\nolimits } \\left ( { a + be^{j\\phi } } \\right ) } { \\sqrt 2 } } } \\right .",
    "\\kern-\\nulldelimiterspace } { \\sqrt 2 } } } \\right)^2 } } { { 2\\sigma ^2 /\\delta } } } \\right\\ } , \\label{equ : apncbpini1}\\end{aligned}\\ ] ] @xmath92 = \\frac{a}{{\\sqrt 2 } } , x_b [ n ] = \\frac{b}{{\\sqrt 2 } } \\bigg\\vert y_r [ 2n ] \\right ) \\nonumber\\\\ & = \\frac{1}{{2\\pi \\sigma ^2 /(1 - \\delta ) } } \\exp \\left\\ { { \\frac{{\\left ( { y_r^{{\\mathop{\\rm re}\\nolimits } } [ 2n ] - { { { \\mathop{\\rm re}\\nolimits } \\left ( { a + be^{j\\phi } } \\right ) } \\mathord{\\left/ { \\vphantom { { { \\mathop{\\rm re}\\nolimits } \\left ( { a + be^{j\\phi } } \\right ) } { \\sqrt 2 } } } \\right .",
    "\\kern-\\nulldelimiterspace } { \\sqrt 2 } } } \\right)^2 } } { { 2\\sigma ^2 /(1 - \\delta ) } } } \\right\\}\\cdot \\nonumber\\\\ & \\ \\ \\ \\",
    "\\exp \\left\\ { { \\frac{{\\left ( { y_r^{{\\mathop{\\rm im}\\nolimits } } [ 2n ] - { { { \\mathop{\\rm im}\\nolimits } \\left ( { a + be^{j\\phi } } \\right ) } \\mathord{\\left/ { \\vphantom { { { \\mathop{\\rm im}\\nolimits } \\left ( { a + be^{j\\phi } } \\right ) } { \\sqrt 2 } } } \\right .",
    "\\kern-\\nulldelimiterspace } { \\sqrt 2 } } } \\right)^2 } } { { 2\\sigma ^2 /(1 - \\delta ) } } } \\right\\}. \\label{equ : apncbpini2}\\end{aligned}\\ ] ] note that except for the first and last symbols , each of @xmath93 and @xmath94 has 16 possible combinations ( 4 possibilities for @xmath95 and 4 possibilities for @xmath96 ) .",
    "the first and last symbols have 4 possibilities , as follows : @xmath97 = { a \\mathord{\\left/ { \\vphantom { a { \\sqrt 2 } } } \\right . \\kern-\\nulldelimiterspace } { \\sqrt 2 } } , x_b [ n ] = 0|y_r [ 1 ] ) = \\frac{1}{{2\\pi \\sigma ^2 /\\delta } } \\exp \\left\\ { { \\frac{{\\left ( { y_r^{{\\mathop{\\rm re}\\nolimits } } [ 1 ] - { \\mathop{\\rm re}\\nolimits } \\left ( { { a \\mathord{\\left/ { \\vphantom { a { \\sqrt 2 } } } \\right . \\kern-\\nulldelimiterspace } { \\sqrt 2 } } } \\right ) } \\right)^2 } } { { 2\\sigma ^2 /\\delta } } } \\right\\ } \\exp \\left\\ { { \\frac{{\\left ( { y_r^{{\\mathop{\\rm im}\\nolimits } } [ 1 ] - { \\mathop{\\rm im}\\nolimits } \\left ( { { a \\mathord{\\left/ { \\vphantom { a { \\sqrt 2 } } } \\right .",
    "\\kern-\\nulldelimiterspace } { \\sqrt 2 } } } \\right ) } \\right)^2 } } { { 2\\sigma ^2 /\\delta } } } \\right\\},$ ] and @xmath98 = 0,x_b [ n ] = { b \\mathord{\\left/ { \\vphantom { b { \\sqrt 2 } } } \\right",
    ". \\kern-\\nulldelimiterspace } { \\sqrt 2 } } |y_r [ 2n + 1 ] ) = \\frac{1}{{2\\pi \\sigma ^2 /\\delta } } \\exp \\left\\ { { \\frac{{\\left ( { y_r^{{\\mathop{\\rm re}\\nolimits } } [ 2n + 1 ] - { \\mathop{\\rm re}\\nolimits } \\left ( { { { be^{j\\phi } } \\mathord{\\left/ { \\vphantom { { be^{j\\phi } } { \\sqrt 2 } } } \\right .",
    "\\kern-\\nulldelimiterspace } { \\sqrt 2 } } } \\right ) } \\right)^2 } } { { 2\\sigma ^2 /\\delta } } } \\right\\}\\cdot\\\\ \\exp \\left\\ { { \\frac{{\\left ( { y_r^{{\\mathop{\\rm im}\\nolimits } } [ 2n + 1 ] - { \\mathop{\\rm im}\\nolimits } \\left ( { { { be^{j\\phi } } \\mathord{\\left/ { \\vphantom { { be^{j\\phi } } { \\sqrt 2 } } } \\right .",
    "\\kern-\\nulldelimiterspace } { \\sqrt 2 } } } \\right ) } \\right)^2 } } { { 2\\sigma ^2 /\\delta } } } \\right\\}.$ ]          given the evidence node values computed by ( [ equ : apncbpini1 ] ) and ( [ equ : apncbpini2 ] ) , we now derive the message update rules for bp - pnc . since the tanner graph ( in fig .",
    "[ fig : tannerbppnc ] ) for bp - pnc has a tree structure , the decoding of the joint probability can be done by passing the messages only once on each direction of an edge @xcite . as described below , we could consider the right - bound messages first followed by the left - bound messages .",
    "we represent messages on the edges with respect to the compatibility nodes @xmath69 in fig .",
    "[ fig : tannerbppnc ] by @xmath99 and @xmath100 .",
    "specifically , @xmath99 ( @xmath100 ) is the message connected to the right ( left ) of the _ k_-th compatibility node .",
    "@xmath101 is a @xmath102 probability vector , where each component @xmath85 is the joint conditional probability of @xmath103,x_b [ \\left\\lfloor { k/2 } \\right\\rfloor ] \\right)$ ] given @xmath86 $ ] of a particular @xmath104 combination .",
    "similarly , @xmath105 and @xmath106 are also @xmath102 probability vectors , where @xmath107 and @xmath108 are probabilities @xmath109 = { a \\mathord{\\left/ { \\vphantom { a { \\sqrt 2 } } } \\right . \\kern-\\nulldelimiterspace } { \\sqrt 2 } } , x_b [ \\left\\lfloor { k/2 } \\right\\rfloor ] = { b \\mathord{\\left/ { \\vphantom { b { \\sqrt 2 } } } \\right .",
    "\\kern-\\nulldelimiterspace } { \\sqrt 2 } } |y_r [ 1], ... ,y_r [ k - 1]\\right)$ ] and @xmath109 = { a \\mathord{\\left/ { \\vphantom { a { \\sqrt 2 } } } \\right .",
    "\\kern-\\nulldelimiterspace } { \\sqrt 2 } } , x_b [ \\left\\lfloor { k/2 } \\right\\rfloor ] = { b \\mathord{\\left/ { \\vphantom { b { \\sqrt 2 } } } \\right . \\kern-\\nulldelimiterspace } { \\sqrt 2 } } |y_r [ 1], ... ,y_r [ k ] \\right)$ ] , respectively , for the right - bound messages as shown in the * step 1 * ( note here , for the left - bound message @xmath107 and @xmath108 are probabilities @xmath110, ... ,y_r [ 2n + 1]\\right)$ ] and @xmath111, ...",
    ",y_r [ 2n + 1]\\right)$ ] correspondingly ) .",
    "we omit the index _ k _ to avoid cluttering in the following discussion of message - update rules .",
    "we follow the principles and assumptions of the bp algorithm to derive the update equations , _",
    "i.e. _ , the output of a node should be consistent with the inputs while adopting a ` sum of product ' format of the possible input combinations @xcite .",
    "+ * step 1 .",
    "update of right - bound messages *                    with reference to fig .",
    "[ fig : messagelefttoright](a ) , we derive the update equations for the right - bound message @xmath112 based on the right - bound message and the fixed message @xmath113 from the evidence node @xmath114 .",
    "based on the sum - product principle of the bp algorithm , we have @xmath115 for the input message into the leftmost compatibility node , however , we should modify ( [ equ : apncbpupdate1 ] ) with @xmath116 .    with reference to fig .",
    "[ fig : messagelefttoright](b ) we derive the update equations for the message @xmath117 based on the input message @xmath118 of the compatibility node .",
    "note that for @xmath119 and @xmath120 , the common symbol overlapping in two adjacent samples is @xmath78 $ ] , thus we have @xmath121 where @xmath122 and @xmath123 is a normalization factor to ensure that the sum of probabilities @xmath124 . if @xmath125 and @xmath126 , then the common symbol is @xmath127 $ ] .",
    "we have @xmath128 where @xmath129 and @xmath123 is a normalization factor to ensure that the sum of probabilities @xmath124 .",
    "we then update the next evidence node message @xmath130 based on the newly updated @xmath131 in fig .",
    "[ fig : messagelefttoright](b ) and @xmath132 in fig .",
    "[ fig : messagelefttoright](a ) , and so on and so forth , until we reach rightmost node . + * step 2 .",
    "update of left - bound messages *    with reference to fig .",
    "[ fig : messagerighttoleft](a ) and ( b ) , we use a similar procedure as in * step 1 * to update the left - bound messages .",
    "after steps 1 and 2 above , the values of the messages converge , thanks to the tree structure of the tanner graph .",
    "we then compute the 4-tuple .",
    "@xmath133 where @xmath83 .",
    "the maximum - likelihood @xmath134 \\oplus x_b [ n]}$ ] is given by the @xmath135 that yields the largest element among the four elements .",
    "note that we only use @xmath136,x_b [ n ] } | y_r \\right)$ ] , and not @xmath137,x_b [ n ] } | y_r \\right)$ ] , to obtain @xmath136 \\oplus x_b [ n ] } | y_r \\right)$ ] , because the information required to get @xmath136 \\oplus x_b [ n ] } | y_r \\right)$ ] is fully captured in @xmath136,x_b [ n ] } | y_r \\right)$ ] .",
    "this section presents simulation results for bp - pnc .",
    "we compare the performance of asynchronous pnc with that of the perfectly synchronized case @xcite , focusing on bpsk and qpsk modulations . for comparison purposes , the transmit amplitude per symbol in the qpsk case",
    "is made to be @xmath138 of that in the bpsk case so that they have the same energy per bit .",
    "in particular , @xmath139 is the energy per bit in the fig .",
    "[ fig : bppncsimulationqpsk ] .",
    "the ideal synchronous qpsk curve therefore overlaps with the synchronous bpsk curve ( because when symbols and phase are synchronized in qpsk , the system can be considered as two parallel bpsk systems ) .",
    "our simulations yield the following findings :    * for bpsk , the 3 db ber performance penalty due to phase or symbol asynchrony using the decoding methods in @xcite is reduced to less than 0.5 db with our method here . * for qpsk",
    ", the ber performance penalty due to phase asynchrony can be as high as 6 - 7 db when the symbols are aligned , as can be seen from fig .",
    "[ fig : bppncsimulationqpsk](a ) .",
    "however , with half symbol misalignment , our bp decoding algorithm can reduce the penalty to less than 1 db , thanks to a `` diversity and certainty propagation '' effect ( to be explained ) . *",
    "symbol misalignment makes the system more robust against phase asynchrony under our ml decoding method .",
    "[ fig : bppncsimulationbpsk ] and fig .",
    "[ fig : bppncsimulationqpsk ] show the simulation results for bpsk and qpsk modulations , respectively .",
    "x_-axis is the average per - bit snr of both end nodes , and the _ y_-axis is the average @xmath140 .    for each data point , we simulate 10,000 packets of 2,048 bits .",
    "we use the synchronous pnc as a benchmark to evaluate bp - pnc . as can be seen from fig .",
    "[ fig : bppncsimulationbpsk](a ) and ( b ) , the ber performance penalties due to phase and symbol asynchronies are less than 0.5 db for all snr regimes for bpsk .",
    "that is , for bpsk , bp - pnc reduces the ber performance penalty from 3db in @xcite to only 0.5 db . note that bp - pnc uses complex sampling that samples the 2-d information in the in - phase and quadrature - phase components of the signal , whereas the scheme in @xcite only samples in one dimension . for optimality , complex sampling is required in bpsk pnc because of the phase offset .    for qpsk with symbol synchrony but phase asynchrony , as can be seen from fig .",
    "[ fig : bppncsimulationqpsk](a ) , the ber performance penalty can be as large as 6 to 7 db .",
    "however , with half symbol misalignment , as can be seen from fig .",
    "[ fig : bppncsimulationqpsk](b ) , bp - pnc reduces the penalty to within 1 db ( compared with the benchmark case where symbol and phase are perfectly synchronized ) . in other words ,",
    "symbol asynchrony can ameliorate the penalty due to phase asynchrony .",
    "this can be explained by the `` diversity and certainty propagation '' effects elaborated in the next subsection .",
    "in addition , we note from fig . [",
    "fig : bppncsimulationqpsk](b ) that when there is a half symbol offset , the phase offset effect becomes much less significant .",
    "specifically , the spread of snrs for a fixed ber under different phase offsets is less than 0.5 db .      in qpsk , each symbol has four possible values .",
    "thus , the joint symbol from both sources has 16 possible values .",
    "the constellation map of the joint symbol varies according to the phase offset .",
    "[ fig : bppnccertprop ] shows the constellation map of a joint symbol when the phase offset is @xmath0 , where the 16 diamonds corresponding to the 16 possibilities .",
    "for example , a point with value @xmath141 corresponds to the joint symbol @xmath142 in fig .",
    "[ fig : constmapqpskapnc ] due to the phase shift ( _ i.e. _ , @xmath143 ) . in pnc ,",
    "the 16 possibilities need to be mapped to four _ xor _ possibilities for the pnc symbol . in fig .",
    "[ fig : constmapqpskapnc ] , the diamonds are grouped into groups of four different colors .",
    "the diamonds of the same color are to be mapped to the same _ xor _ pnc symbol according to @xmath144 . in this mapping process , some of the constellation points are more prone to errors than other constellation points , and the ber is dominated by these bad constellation points .",
    ".,scaledwidth=40.0% ]    with reference to fig .",
    "[ fig : constmapqpskapnc ] , the eight diamonds within the green circle are `` bad constellation points '' .",
    "adjacent points among the 8 points are mapped to different _ xor _ values , but the distances among two adjacent points are short . by contrast , the eight points outside the green circle are `` good constellation points '' because the distances among adjacent points are large .",
    "when symbols are synchronized ( _ i.e. _ , @xmath44 ) , there are altogether @xmath13 joint symbols . on average , half of them will be bad constellation points with high ber .",
    "now , consider what if there is symbol asynchrony , say @xmath145 .",
    "we have @xmath21 joint symbols , out of which about @xmath13 will be good constellation points . a symbol from a source",
    "is combined with two symbols from the other sources to form two joint symbols received at the relay .",
    "both the joint symbols have to be bad for poor performance .",
    "thus , the diversity itself may give some improvement .",
    "in addition , there is a certainty propagation effect , as explained below .",
    "consider a good constellation point , say @xmath146,x_b [ n ] } \\right)$ ] .",
    "for this point , we may be able to decode not just the _ xor _ , but the individual values of @xmath77 $ ] and @xmath78 $ ] with high certainty . now",
    ", suppose that the next joint symbol @xmath147,x_b [ n])$ ] is a bad constellation point .",
    "but since we have good certainty about @xmath78 $ ] from the previous good constellation point , the uncertainly in @xmath148 can be reduced by the certainty propagated from @xmath149 with the bp algorithm . in other words ,",
    "once @xmath78 $ ] is known , @xmath148 is not a bad constellation point anymore .",
    "certainty can propagate along successive symbols from left to right , as well as from right to left , as shown in fig .",
    "[ fig : bppnccertprop ] .",
    "certainty propagation significantly reduces ber .",
    ", respectively.,scaledwidth=35.0% ]",
    "this paper has proposed and investigated an optimal maximum likelihood ( ml ) decoding algorithm based on belief propagation , called bp - pnc , for asynchronous pnc .",
    "this method significantly improves the ber performance of the prior methods when there are symbol and phase asynchronies in the pnc system .",
    "in addition , we find that with symbol misalignment , bp - pnc desensitizes the ber performance to carrier - phase offset . in practice , it is relatively easier to control symbol timing than carrier - phase offset because of the relative time scales involved .",
    "our results suggest that if we could control the symbol offset in pnc ( e.g. , using the method in @xcite ) , it would actually be advantageous to deliberately introduce symbol misalignment so that the system is robust against uncontrollable phase offsets .",
    "prior to this work , it has often been thought that strict synchronization is needed for pnc .",
    "our work , however , suggests that the penalty due to asynchrony can be nullified to a large extent with the bp - pnc decoding method .",
    "our work is based on bpsk and qpsk modulations .",
    "we believe the same conclusion can be drawn for other modulations , particularly those with dense constellations .",
    "in addition , channel coding ( with or without symbol offset in the system ) also has the diversity and certainly propagation effects of symbol offset expounded in section [ certprop ] .",
    "thus , we believe that the incorporation of channel coding will also lessen the negative effect of asynchrony in pnc systems . these conjectures remain to be investigated in future work .",
    "t. koike - akino , p. popovski , and v. tarokh , `` optimized constellations for two - way wireless relaying with physical network coding , '' _ ieee j. on selected areas in comm .",
    "773 - 787 , june 2009 ."
  ],
  "abstract_text": [
    "<S> a key issue in physical - layer network coding ( pnc ) is how to deal with the asynchrony between signals transmitted by multiple transmitters . </S>",
    "<S> that is , symbols transmitted by different transmitters could arrive at the receiver with symbol misalignment as well as relative carrier - phase offset . in this paper , </S>",
    "<S> 1 ) we propose and investigate a general framework based on belief propagation ( bp ) that can effectively deal with symbol and phase asynchronies ; 2 ) we show that for bpsk and qpsk modulations , our bp method can significantly reduce the snr penalty due to asynchrony compared with prior methods ; 3 ) we find that symbol misalignment makes the system performance less sensitive and more robust against carrier - phase offset . </S>",
    "<S> observation 3 ) has the following practical implication . </S>",
    "<S> it is relatively easier to control symbol timing than carrier - phase offset . </S>",
    "<S> our results indicate that if we could control the symbol offset in pnc , it would actually be advantageous to deliberately introduce symbol misalignment to desensitize the system to phase offset .    physical - layer network coding , network coding , symbol synchronization , phase synchronization </S>"
  ]
}
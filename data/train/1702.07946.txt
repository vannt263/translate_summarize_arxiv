{
  "article_text": [
    "software defined networking ( sdn ) has emerged as a powerful architectural paradigm , enabling innovations in network virtualization , provisioning , verification , and security ( e.g. , @xcite ) . within the context of measurement , sdns are commonly instrumented to monitor network utilization and can quickly modify their forwarding behavior in response to dynamic workloads @xcite .",
    "in contrast to such passive measurements ( e.g. , packet or flow - level statistics , heavy - hitters , or anomaly detectors ) , this work considers the feasibility of performing _ active _ network measurement using sdns .",
    "intuitively , sdns provide the basic building blocks for facilitating programmable active measurement vantage points . via the standardized openflowprotocol @xcite",
    ", sdn controllers can generate any arbitrary packet ( e.g.,measurement probes ) and instruct a switch to emit the packet out a specified interface .",
    "similarly , controllers can instantiate fine - grained flow rules that match measurement probe responses .",
    "controllers may then perform arbitrary computation over probe responses as they arrive encapsulated in an openflowmessage from the switch . in this work",
    ", we introduce and advocate for an architecture using these primitives which we term `` sdn as active measurement infrastructure '' ( saami ) .",
    "while active measurements today are performed using end - hosts , we believe saamiprovides compelling advantages . first , tighter integration of active measurements within the network allows operators , administrators , and researchers to place measurements anywhere an sdn switch exists  without the traditional cost of configuring , certifying , securing , installing , powering , managing and maintaining a dedicated measurement host . often , installing a measurement host within the core or edge of the network presents an insurmountable administrative or policy hurdle , or is not physically possible ( due to space , availability and expense of consuming an interface on the router , etc ) . by leveraging existing production equipment , saamilowers deployment and vantage point diversity barriers .",
    "second , placing active measurements within sdn more closely couples the ability to programatically enable action to be taken in response to measurement results . in a similar fashion to using passive measurements to drive the behavior of the sdn data plane",
    ", active measurements can provide actionable information for network reconfiguration and adaptability .",
    "third , saamifollows the philosophy of inexpensive commodity hardware , centralized control , and compositional network architecture . saamiuses the standardized openflowapi to drive commodity switches , thereby removing the traditional need to develop , configure , and deploy custom apis for requesting measurement tasks and receiving measurement results .",
    "as we will show , using openflowprevents over - specialization of the measurement platform , making it easy to extend to new and unanticipated measurement tasks .    toward the goal of converging on a standards - based strategy for active measurement platforms for operators and researchers , we investigate the feasibility and limitations of saami .",
    "our primary contributions include :    1 .   the saamiarchitectural vision to converge active measurement facilities into commodity hardware using standardized protocols .",
    "2 .   a large - scale internet measurement study using saamito source active probes from commodity sdn switches , and a corresponding analysis of the resulting fidelity of round - trip latency measurements . 3 .   implementation of a new measurement protocol using the saami primitives as a demonstration of the ability to easily and rapidly innovate and deploy measurements within the saamiframework .",
    "a fundamentally different approach to internet measurement , in which core nodes ( in addition to edge systems ) participate as vantage points for active measurements , potentially in reaction to events in the traffic streams they observe .",
    "the remainder of this paper is organized as follows .",
    "section [ sec : implementation ] describes saami , while section [ sec : results ] details results and accuracy from using saamiin real - world large - scale internet measurement experiments .",
    "we discuss related work in section  [ sec : related ] , and conclude with a discussion of deployment scenarios and suggestions for future work in section  [ sec : conclusions ] .",
    "active measurement is widely used for network management and debugging .",
    "canonical examples include the ` ping`and ` traceroute`utilities that provide reachability , round - trip time , and forward path information .",
    "not only are such tools used for troubleshooting , they are integral to the operation of large providers , content distribution networks , and at - scale services .",
    "myriad other active measurement techniques and tools have been developed , for instance host and service fingerprinting @xcite , capacity and bandwidth estimation @xcite , censorship detection @xcite , network neutrality @xcite , residential broadband performance @xcite , and congestion localization @xcite , to name only a few .",
    "it is well - known that the accuracy and generality of inferences from these active measurements can depend strongly on where in the network the measurements are performed .",
    "for instance , censorship may only affect nodes behind a certain middlebox , congestion may affect only a single network , or a bgp hijack event may affect reachability for only a subset of vantage points . to this end , the research community has developed several active measurement platforms consisting of varying ( but relatively small ) numbers of nodes distributed ( in an ad - hoc fashion ) across the internet , e.g. , archipelago @xcite , bismark @xcite , dasu @xcite , and atlas @xcite to name a few .",
    "unfortunately , these platforms are frequently : i ) designed for a specialized task ; ii ) under - powered ( either in terms of compute , memory , or network abilities ) ; and iii ) lacking in network or geographic diversity .    rather than the current fractured environment of incompatible network measurement platforms , abilities , apis , and output formats",
    ", we consider the feasibility of performing active measurement using existing sdn standards and capabilities .",
    "our vision that by using sdn , the measurement and operational community can utilize a standard and open api to avoid over - specialization , lower deployment barriers , and facilitate vantage points otherwise not possible .",
    "while significant prior work utilizes the _ passive _ network measurement capabilities afforded by sdns , e.g. , @xcite and novel methods to gather measurements from sdns , e.g. , @xcite , our work seeks to understand the feasibility of sdn for _ active _ measurement  i.e. , where the sdn switch generates specialized measurement probes and gathers their responses .",
    "figure  [ fig : arch ] illustrates the high - level architectural view of saamiwithin an sdn .",
    "we envision saamico - existing with other applications on an sdn controller that is responsible for one or more sdn switches within a provider or enterprise network .",
    "our implementation is based on the popular open - source ryu  @xcite controller . in response to measurement tasks (  [ sec : api ] ) saamiinstructs the sdn controller to send various openflow  @xcite messages to the sdn switch(es ) in order to induce active ip measurement probes . in particular",
    ", we utilize the ` ofpacketout`message to instruct a switch to send a particular packet .",
    "further , saamiinstalls flow table rules such that it can receive and process measurement replies ; we rely on ` ofpacketin`messages from the switch that encapsulate data - plane probe packets matching particular criteria . in this fashion ,",
    "saamiacts as the abstraction layer between measurement tasks and the sdn .",
    "we note that many measurement tasks , including ` ping`and ` traceroute ` , require accurate timing information , e.g.,for round - trip time ( rtt ) latency estimation . saamimust thus address two timing challenges related to using commodity switches and the openflowprotocol : approximating the time at which measurement packets are sent and received . with respect to probe transmission , both the delay in sending the openflowinstruction ( the `` ` ofpacketout ` '' ) from the controller to the switch , and the switch s processing delay in executing that instruction , contribute potentially variable latency .",
    "further , while openflowprovides a mechanism to forward probe responses from the switch to the controller ( the `` ` ofpacketin ` '' ) , there is no standardized way to obtain the time when the packet was received at the switch .",
    "we must therefore estimate these values via an assessment of the rtt between the controller and the switch , and via empirical analysis of commodity sdn switch behavior . while it is possible to design specialized hardware and implement api changes to address these sources of inaccuracy , our goal in this work to determine the feasibility of _ current _ sdn hardware and software implementations to support saami .",
    "let @xmath0 be the time at which some packet @xmath1 is received at a switch port and @xmath2 be the time at which some packet @xmath1 is emitted from a switch port .",
    "* assume a switch receives a probe within a ` ofpacketout`at @xmath3 . to determine the switch s delay is emitting the probe , we compute : @xmath4 .",
    "* further , we wish to determine whether any output reordering occurs , i.e.,@xmath5 and @xmath6 . *",
    "assume a switch receives a response packet that matches a flow rule .",
    "the switch s delay in generating the ` ofpacketin`message is : @xmath7 .    to isolate sources of delay and calibrate our saamimeasurements , we create an isolated testbed using a linux machine with two physical ethernet interfaces as shown in figure  [ fig : calibration ] .",
    "one ethernet directly connects to the out - of - band management ( oobm ) port on a commodity commercial sdn switch , while the other ethernet is connected to one of the switch s data - plane interfaces . in our experiments , we use a commodity hp2920 commercial switch running openflow1.3 .",
    "we then perform a packet capture from the linux machine to time openflowpackets in relation to dataplane packets ( either generated or received ) . because the packet capture is performed on two interfaces of the same physical machine , time",
    "is synchronized . since the host and the sdn switch are directly connected via a @xmath8 meter cable ,",
    "propagation delay is a negligible component of the measured delay .",
    "we send 100 ` ofpacketout`messages to the switch , and measure the switch s delay in emitting the corresponding packet .",
    "figure  [ fig : calibpktout ] displays the cumulative fraction of delays @xmath9 over the 100 ` ofpacketout`requests .",
    "we see that 97% have a delay between 1.5 and 2.0ms .",
    "two ` ofpacketout`messages require @xmath10ms , while the switch took approximately 50ms before emitting one of the packets .",
    "overall , the delay is both small and tightly bounded .",
    "further , we observe no packet reordering .    similarly , we evaluate the switch s delay in emitting a ` ofpacketin`message in response to receiving a packet that matches a flow rule , @xmath11 .",
    "we see a qualitatively similarly shaped distribution in figure  [ fig : calibpktout ] , however 95% of the ` ofpacketin`messages are generated in 1.0ms or less .",
    "we observe instances of multiple ` ofpacketout`messages bundled into single tcp segments by the saamicontroller .",
    "such effects are due to operating systems and their corresponding tcp stack implementations . quantifying the effect that bundling has on time - sensitive measurements is therefore important for e.g.,rtt estimation .",
    "thus , we must assess the variation in time for packets to be emitted by an sdn switch , whether arriving at the switch as ` ofpacketout`messages in separate tcp segments , or bundled with other ` ofpacketout`messages in a single tcp segment .    in order to measure this effect , we use ` ofpacketout`messages to instruct the switch to emit icmp packets .",
    "we calculate the difference in time between an icmp echo request leaving the sdn switch and its corresponding ` ofpacketout`message arriving at the switch , accounting for ` ofpacketout`messages in individual segments and multiple ` ofpacketout`messages contained in a single segment separately .",
    "we sent 15,000 ` ofpacketout`probe requests with 5 probes apiece to a host running open vswitch@xcite acting as the sdn switch .",
    "of the 75,000 probes generated , only 61 probes are sent as ` ofpacketout`messages contained in a tcp segment with other ` ofpacketout`messages . the time difference between icmp echo requests exiting the switch and the time the ` ofpacketout`message entered the switch",
    "is characterized in figure  [ fig : blobswitchtimediffs ] .",
    "on average , the overall switch delay is approximately 10% higher for probes sent in multiple-`ofpacketout`-containing segments  a 206 @xmath12 delay was incurred by multipart messages , whereas individually sent ` ofpacketout`pings had only a 189 @xmath12 mean delay .",
    "the saamicontroller measures the rtt between controller and associated sdn switch by issuing and timestamping an ` ofechorequest ` message , a built - in openflowmessage type that is used by default as a `` heartbeat '' between the controller and switch .",
    "when the corresponding ` ofechoreply ` returns from the switch , the controller timestamps this reply , allowing for the calculation of the rtt between the controller and switch @xmath13 . for our openflowimplementations of `",
    "ping ` ( section  [ sec : ping ] ) and ` traceroute ` ( section  [ sec : traceroute ] ) we estimate @xmath13 for each target separately before generating probes . in order to account for isolated , drastic changes in controller - to - switch latencies ,",
    "we keep an exponential moving weighted average of @xmath13 times for use in true rtt estimation calculations .",
    "note that performing the controller to switch latency estimation _ within _ the openflowprotocol ,",
    "as opposed to , e.g. , using a simple icmp echo , provides a more reliable approximation of the delay ( and processing ) incurred by openflowmessages .      for experiments in which probes must eventually return to the switch that emitted them ( e.g.,`ping`and ` traceroute ` ) , these probes must use a source address that is routed to or through the switch that generated the probe . ] .",
    "thus , saamimust know what source ip address to use when generating ` ofpacketout`messages and installing flow rules . while this requires specific addressing information to be known ,",
    "such knowledge is integral to sdn controllers .    in our testing",
    ", we chose an unused address on a subnet that is routed to a network on which the sdn switch is connected . because it was not possible to assign an ip address to the commodity sdn switch port ,",
    "saamideliberately generates gratuitous arps .",
    "this allows the router to which our sdn switch is connected to pre - populate its arp cache and prevent any additional delay .",
    "we expect that generating these arps will not be necessary in other deployments where sdn switches act as layer-3 forwarders .",
    "thus , for correct operation , saamimust at a minimum be configured with : i ) the ip and mac addresses to use when sourcing measurement probes ; and ii ) the ip and mac address of the next hop such that the probe is properly forwarded . as is typical in sdn installations ,",
    "the switches are configured with the ip address of the controller , and saamilistens for incoming openflowconnections .",
    "following our general philosophy of leveraging existing protocols , saamiutilizes http and json as its measurement api with which the consumers of measurement tasks interface .",
    "in this way , saamiacts as the interface between high - level measurement tasks , and the marshaling of openflowmessages within the sdn plane .",
    "the saamicontroller therefore runs an http server that listens for incoming measurement instructions .",
    "we leverage http as a standard rpc - like mechanism with the ability to easily support encryption , integrity , and authentication .    as a concrete example , we detail here the rest api calls necessary for our ` ping`implementation described in section  [ sec : ping ] .",
    "many common measurement tasks may leverage or require the emission of icmp echo request packets , such as rtt estimation or to elicit responses containing ip identifier values . to enable these experiments",
    ", the saamicontroller has a defined `` probe url '' , a url that when requested with the required parameters included in a json array via an http put , will emit echo requests destined for a particular target . for instance , the controller uses url ` http://example.com:8080/ping/ ` as the echo request - emitting resource locator ( by default , ryu listens for api calls on port 8080 ) .",
    "our ` ping`implementation requires a json array be sent with the http put request containing three keywords extending the json schema : i ) ` tgt ` , the ip address of the target ; ii ) ` num ` , the number of echo requests to be emitted ; and iii ) ` payload ` , an optional payload for inclusion in the echo requests saamiemits from the sdn switch . upon receipt of the put request , the saamicontroller parses the json array and passes the fields to the method responsible for creating the icmp echo requests , encapsulating them in ip datagrams and ethernet frames , and delivering ` ofpacketout`messages to the sdn switch .",
    "switch for packet emission and output port selection are specified in ` ofpacketout`message data fields , ensuring the correct switch emits the packet from the proper output interface .",
    "the use of the rest api creates an extensible measurement framework  in our ` ping`example , it is trivial to add an additional optional source ip address parameter for echo request generation or to define a default ttl for the emitted datagrams  that is easily automated using scripts ( e.g.,with ` curl ` or ` wget ` ) . furthermore , the api enables the experimenter to operate independently from the measurement platform , without needing to log into the controller to start or stop measurements .",
    "experiment output is retrieved via rest api calls ; we obtain state maintained by the saamicontroller again through the use of http get requests to predefined urls .",
    "for example , an http get request to ` http://example.com:8080/ping/dump ` returns a json array containing the packet emission and arrival times associated with each icmp i d and sequence numbers sent in our ` ping`implementation , using the icmp i d as the json schema keyword .",
    "icmp echo requests that receive",
    "no corresponding echo reply simply contain a null entry in the response timestamp position in its corresponding field , allowing unresponsive destination hosts to be treated differently than responsive destination addresses .",
    "this raw data can then be manipulated by the experimenter according to their own needs .",
    "a practical application using this data ( estimating rtts ) is demonstrated in section  [ sec : ping ] .",
    "figure  [ fig : ping_arch ] is a high - level view of saami s ` ping`implementation .",
    "saamiimplements the ` ping`network utility through an http put message to the saamicontroller from a saamiclient .",
    "this put message includes a json array with target ip address , count and payload fields . in our implementation , the saamiclient is a trivial 12 line python program , illustrating the ease with which it is possible to develop within the saamiframework .    upon receipt of the `",
    "ping`request via the put , the controller first sends an arp reply to the router containing the mac and ip addresses of the controller s interface to the switch as described in  [ sec : arp ] .",
    "this gratuitous arp reply prevents any arp cache expiration ; without this gratuitous arp reply , we risk saamineeding to reply to arp requests and thereby negatively affecting time - sensitive rtt estimation .",
    "next , saamiinitiates rtt estimation to the switch as outlined in section  [ sec : c - sest ] .",
    "the controller then creates an icmp echo request destined for the target ip address , encapsulates it in an ethernet frame addressed to the next hop s mac address , and emits an ` ofpacketout`message to an sdn switch .",
    "concurrently , the controller creates a map between the icmp identifier field value used and target ip address to maintain state of in - flight probes .",
    "saamiinitially sets the icmp sequence number field to 0 for the first icmp echo request .",
    "the payload of our echo request is empty , but can be specified by the requester in the json array sent with the http put .",
    "saamitimestamps the packet and delivers a ` ofpacketout`message to the sdn switch , which emits the icmp echo request out of the switch port specified as an argument to the ` ofpactionoutput ( ) ` method .",
    "saamithen increments the icmp sequence number field value and repeats until the requested number of icmp echo requests have been delivered to the switch via ` ofpacketout`messages .",
    "for each subsequent ping target , saamiincrements the icmp identifier field value , establishing a linkage between icmp identifier values and ping destination ip addresses .",
    "concurrently , saamiis delivered icmp echo replies for the probes it has transmitted by the switch via ` ofpacketin`messages , due to the installation of a flow rule during saamiinitialization directing the switch to forward these to the controller . when a probe reply is received saaminotes the time the icmp echo replies were received by the controller and stores this value . for a given target @xmath14",
    ", we can therefore calculate @xmath15 , the total time elapsed between ` ofpacketout`transmission from saamito the switch and ` ofpacketin`messages received by saamifrom the switch for each icmp sequence number .",
    "@xmath16 then approximates the true rtt between the sdn switch and probe target .",
    "targets that do not respond to saamiprobes have no icmp echo reply timestamp and leave us unable to calculate the rtt ; we therefore discard any targets with no probe replies .",
    "a rest api call retrieves the timestamp values stored by saamifor analysis by the saamiclient . because the icmp i d field is 16 bits , this implementation allows for approximately 65 thousand ` ping ` targets before saami s state table is full .",
    "we work around this limitation by pulling the current state from saamivia a rest api call ; specifically a get request to a specific url returns a json array of saami s state table to the saamiexperimenter .",
    "another rest api call clears the state table and measurements can be resumed , thus allowing for a potentially unlimited number of ` ping ` targets .",
    "an alternative implementation might leverage the payload field of the icmp echos to maintain the state of ` ping ` targets ; we abstain from this approach in order to maintain consistency of sent packet sizes for all probes when conducting large - scale measurements .",
    "another common measurement task we implement in saamiis ` traceroute ` , initiated by a specific rest api call .",
    "the keywords contained in the json array of the http put message are the target , and number of probes per ttl .",
    "` traceroute`implementation operates by first determining @xmath13 as described in section  [ sec : calibration ] .",
    "saamithen creates icmp echo request messages with ttl values beginning at 1 , delivering these to the switch via ` ofpacketout`messages .",
    "initially , the icmp identifier value is set to 0 , as in our ` ping`implementation .",
    "saamimaintains ttl and target information for each probe by icmp identification and sequence numbers .",
    "when intermediate routers respond with icmp time exceeded messages , saamicorrelates the response with its corresponding probe by parsing the icmp quote , and thereby determines the ip address and rtt for each hop along the forward path .",
    "saamiincrements the ip ttl value after each user - specified number of probes at each ttl value , until one of two conditions occurs : i ) the ` traceroute`target is reached and responds with an icmp echo reply , or ii ) the ttl value reaches 30 without having reached the ` traceroute`target .",
    "the saamicontroller then increments the icmp identifier value used for correlating messages bound for the same ` traceroute`target together , as in our ` ping`implementation in section  [ sec : ping ] .",
    "our ` traceroute`implementation is asynchronous ; each successive icmp packet is sent to the switch in a ` ofpacketout`message to be emitted as soon as it is created by the controller .",
    "saamiis capable of handling these multiple packets in flight simultaneously due to the state table it maintains of icmp id / sequence number values . like our ` ping`implementation ,",
    "` traceroute`probes for which intermediate routers or destination addresses are unresponsive simply contain a null value as the return timestamp .",
    "a rest api call returns the saami`traceroute`state to the saamiexperimenter , who can then reproduce the path from source to destination from the ip addresses .",
    "in addition to performing existing active measurement tasks from within sdn ( e.g.,`ping`and ` traceroute`as previously described ) , saamifacilitates the creation and execution of new and novel measurements in the spirit of network innovation .",
    "as a proof - of - concept , we partially implement the `` router i d '' primitive from our nascent work in developing and using _ within _ protocol measurements  @xcite .    today s method for active router discovery has remained essentially unchanged for almost 30 years : ` traceroute`induces routers along the forward path to a destination to return icmp messages with one of the router s interface ip addresses as the source .",
    "unfortunately , ip addresses are a poor proxy for a router identifier . our reliance on ` traceroute`leads to the cumbersome and error - prone processes of : i ) alias resolution , to determine the set of ip addresses belonging to the same physical router ; and ii ) router ownership inference . in the case of alias resolution",
    ", the existing techniques require intensive active probing , only work for a subset of addresses , and can both produce false aliases and miss true aliases  @xcite . similarly , the navemethod of using the autonomous system ( as ) that originated the address space to which a router s interface belongs is often not indicative of the as that owns or maintains the router , due to delegated and off - path addresses  @xcite .",
    "our intent in implementing the router i d is not to perform exhaustive measurements , but rather to provide a concrete example of the types of measurement primitives that _ could _ be created with saami , and their immediate benefit to network management and diagnosis .    for debugging and management purposes",
    ", we imagine that a provider wishes to extend the functionality of their core networking devices such that they respond to an identification query with a unique router identifier and the as number to which the device belongs . using saami , we instantiate a rule in the switch to encapsulate and forward to the controller any icmp packets destined to the switch with type 200 and code 0 .",
    "the controller parses this router i d query message and creates a ` ofpacketout`response with the device s as and identifier .",
    "this trivial example highlights several important characteristics of saami .",
    "first , while any database , e.g.,the dns , could conceivably provide an identical functionality , doing so requires keeping different portions of the namespace consistently updated  a significant practical difficulty .",
    "instead , saamiprovides a much closer coupling where the control plane of the network device knows its as and router identifier .",
    "second , router i d demonstrates the ease with which a new protocol or protocol extension can be implemented to provide substantial measurement benefit . in this case , router i d effectively _ solves _ both the aliasing and ownership problems with an explicit mechanism , rather than the brittle and error - prone inferences the measurement community is currently forced to employ .",
    "we envision core network operators facilitating saamiexperiments by allowing researchers access to the saamiapplication running on their production controllers .",
    "this immediately introduces several implementation challenges .",
    "first , how might service providers arbitrate access to their saamiinstance ?",
    "ryu supports a robust pki - based authentication system , allowing network operators to permit saamiaccess to authorized users and specific switches via public key authentication .",
    "second , allowing saamiusers the ability to inject an arbitrary number of packets as quickly as the controller can generate them into their network is likely an unappealing prospect for service providers .",
    "but because saamiis a controller application , policies limiting maximum packet rates , connection rates , and bitrates can be specified and tailored to individual operators risk assessments .",
    "third , the potential exists for measurement experiments to install flow rules on sdn switches that conflict with production dataplane forwarding rules",
    ". this potential conflict can be overcome by assigning a lower priority to saamiuser - generated flow rules , which would then be ignored if a conflicting flow rule installed by the network operator exists , thereby preventing unintended and potentially harmful consequences ; openflowalready supports this type of flow rule prioritization .",
    "finally , saamishould support multiple experimenters concurrently ; because the controller is simply a production server , partitioning of multiple users is a benefit inherited from the deployment environment itself .",
    "conflicting flow rules generated by individual experimenters can be handled by assigning higher priority to certain experiments , in a first - come , first - served manner , or according to operator - specific instructions . finally , to mitigate risk assumed by network administrators running saamiinstances ,",
    "saamican be configured to only allow certain types of packets to be generated via its api .",
    "for instance , the ability to send icmp - based ` ping`or ` traceroute`probes at a low datarate , or packets to tcp port 80 might be enabled , while the emission of more unusual packets ( like those discussed in section  [ sec : custom ] ) could be restricted only to certain users or disabled entirely .",
    "in order to measure the accuracy of saami s ` ping`implementation , we capture traffic entering and leaving the sdn switch through a hub connected to the machine running saamiwith ` tcpdump ` . in this manner",
    ", we obtain ground truth for the times our saami - generated icmp echo requests and replies exit and enter the switch .",
    "we account for various hardware and software implementations , using both an hp 2920 sdn switch and a linux machine running open vswitch , as well as remote versus local controller scenarios .",
    "both the hp switch and machine running open vswitchare located in monterey , california , while the remote controller is located in boston , massachusetts .",
    "figure  [ fig : rtterrorcdf ] shows the cdf of absolute error ( between saami - recorded rtt and actual rtt ) using an hp 2920 series switch , as well as using the machine running saamias the switch itself with open vswitch(labeled as `` local controller hp2920 '' and `` local controller ovs '' , respectively ) .",
    "additionally , the software and hardware switches were controlled from a saamicontroller operating on the machine in boston , shown in the `` remote controller '' curves .",
    "all trials probed the same 15,000 ip addresses and received @xmath1711,000 replies each .",
    "our results show that the saamiinstance controlling the remote open vswitchsdn switch has the least amount of absolute error , with nearly 99% of errors at 10 @xmath18 or less .",
    "the lower bound is the remote saamiinstance controlling the hp switch , with only @xmath1770% of errors at the 10 @xmath18 of less mark .",
    "figure  [ fig : rtterrorfractioncdf ] is a cdf of the absolute error as a fraction of the total rtt . in our ` ping`implementation , the open vswitchimplementations consistently produce a lower @xmath19 value , with the locally controlled open vswitchtrial obtaining an error of @xmath20 of the total rtt for more than 95% of all probes .",
    "both hp switch implementations produce the most error in rtt measurement , with the remote controller architecture achieving the same error percentage for approximately @xmath21 fewer rtts .",
    "one method that can be used to reduce the absolute and relative rtt errors is simply to send more echo requests to the targets . in figure",
    "[ fig : rtterrormoreprobes ] , we show the saamierror relative to the actual rtt in two trials , one in which five echo requests were sent to the destination , and the other in which only one echo request was emitted . for the trial in which five echo requests were sent to the target , we record the mean rtt for all probes to each target .",
    "this strategy dramatically reduces the overall rtt error .",
    "zeng et al.first posited the notion of sdn controllers instructing switches to send test packets in the context of their automated test packet generation system in @xcite .",
    "we extend this idea to the variety of active measurements in use today , and implement such a system in real sdn hardware and software .",
    "our work relies on rtt measurements of probes to various network targets generated and received by a controller from sdn switches ; quantifying latencies in sdns is therefore fundamental to our work .",
    "rostos et al.develop the _ oflops _ platform to evaluate openflowswitch implementations in various use - cases @xcite .",
    "oflops examines processing delays in openflowswitches when performing specific actions such as forwarding and packet modification .",
    "our work also examines processing delays in both hardware and software openflowimplementations of modern devices . in @xcite",
    ", he et al.measure inbound ( switch to controller ) and outbound ( controller to switch ) latencies induced by ` ofpacketin`events and flow - modification rule insertions , deletions , and modifications , respectively .",
    "our timing analysis is impacted by delays caused by ` ofpacketin`events as well , which we similarly analyze on our devices using a passive tap . _",
    "@xcite , a tool used to monitor and estimate latencies in data centers , sends packets between sdn switches to estimate the latency along the path between them . _",
    "slam _ generates notifications to a controller via ` ofpacketin`notification messages sent by the first and last switches along a path when a probe is received . as in our work , in @xcite the authors account for controller to switch latency by continuously monitoring it via ` ofpechorequest ` messages .    the notion of using network devices to perform active measurements",
    "was first standardized in @xcite and @xcite , protocols for performing one and two - way active measurements of delay and loss .",
    "our work is broader , generalizes these protocols , and provides a means for such schemes to be implemented in network switches without explicit vendor support .",
    "most closely related to our own work is sdn traceroute @xcite , a technique to reveal the sequence of switches and ports that actual data - plane packets traverse in an sdn network .",
    "sdn traceroute relies on injecting measurement probes via ` ofpacketout`messages , and installing rules to match and retrieve tagged probe traffic via ` ofpacketin`messages . while sdn traceroute and saamirely on the same primitives , saamiis designed to provide a platform for existing measurements , e.g.,ip - level ping and traceroute , using sdns .",
    "we introduce saami , an active measurement application for sdns .",
    "saamienables active measurement experiments to be conducted wherever sdns are deployed , bringing measurement capability to the core of the network as opposed to traditional edge - based platforms .",
    "we implement two common active network measurement utilities  ` ping ` , to determine rtts from an sdn switch to network target , and an icmp - based ` traceroute ` . to validate our rtt measurements , we conduct multiple experiments to identify sources of error and quantify their effects when using saamias a measurement platform .",
    "we find that these effects vary significantly according to the location of the saamicontroller and between hardware and software sdn switches , but can be mitigated by sending several packets to each target , and using the mean rtt from all probes .",
    "finally , we demonstrate the ability to conduct custom measurements by designing a capability to perform active router discovery by querying routers for an imagined `` router i d '' value containing that device s asn and an identifying string . by sending an icmp packet with an unused icmp type and code value to a router supporting this capability ,",
    "saamiobtains topological data about a device directly , rather than via current , error - prone ` traceroute ` methods .      with saamiinstances deployed at the network core",
    ", we aim to understand forwarding behavior not accessible to measurement experiments performed at the network edge . for example , do ` traceroute`s initiated from the network edge follow the same terminal path to a destination as those initiated from a tier 1 as ?",
    "that is , do operator policies pertaining to source ip address affect the path selection in ways that are not discernible to edge - based vantage points ?",
    "additionally , as we note in section  [ sec : custom ] , sdn controllers are capable of arbitrary packet creation .",
    "these packets need not adhere to the constraints placed upon ordinary hosts ; for example , a saamicontroller may generate ip datagrams with any source ip address .",
    "if destined for another saamiswitch , these spoofed source address packets can reveal source address validation policies implemented by network operators unmeasurable by platforms at the edge of the internet .",
    "finally , saami s unique contribution of offering measurement vantage points from the core of the network affords the opportunity to conduct certain estimates , like bandwidth usage , closer to the quantity being measured .",
    "we envision using saami , or a similar system , to `` tag '' portions of the traffic flowing through vantage points to better understand traffic characteristics as it is routed through network operator - administered infrastructure .",
    "finally , while we focus on openflow - based sdns in this work due to the ubiquity of their real - world deployment , we note that the sdn space is rapidly evolving .",
    "for example , recent work on programmable network processors  @xcite promises a much richer set of abstractions and capabilities that saamican utilize if realized .",
    "we thank mark allman , steve bauer , and ethan katz - bassett for valuable early feedback .",
    "views and conclusions are those of the authors and should not be interpreted as representing the official policies or position of the u.s .  government ."
  ],
  "abstract_text": [
    "<S> active measurements are integral to the operation and management of networks , and invaluable to supporting empirical network research . unfortunately , it is often cost - prohibitive and logistically difficult to widely deploy measurement nodes , especially in the core . in this work , </S>",
    "<S> we consider the feasibility of tightly integrating measurement _ within _ the infrastructure by using software defined networks ( sdns ) . </S>",
    "<S> we introduce `` sdn as active measurement infrastructure '' ( saami ) to enable measurements to originate from any location where sdn is deployed , removing the need for dedicated measurement nodes and increasing vantage point diversity . </S>",
    "<S> we implement ` ping`and ` traceroute ` using saami , as well as a proof - of - concept custom measurement protocol to demonstrate the power and ease of saami s open framework . via a large - scale measurement campaign using sdn switches as vantage points , </S>",
    "<S> we show that saamiis accurate , scalable , and extensible . </S>"
  ]
}
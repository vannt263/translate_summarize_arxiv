{
  "article_text": [
    "inductive inference is a branch of theoretical computer science that studies the process of learning in a recursion - theoretic framework @xcite . within inductive inference",
    ", there has been much work on team learning ( see surveys in @xcite ) .",
    "probabilistic learning is closely related to team learning .",
    "any team of machines can be simulated by a single probabilistic machine with the same success ratio .",
    "the simulation of a probabilistic machine by a team of deterministic machines is often possible as well .    in this paper",
    ", we consider finite learning of total recursive functions ( abbreviated as fin ) .",
    "the object to be learned is a total recursive function @xmath4 .",
    "a learning machine reads the values of the function @xmath5 , @xmath6 , @xmath7 and produces a program computing @xmath4 after having seen a finite initial segment of @xmath4 .",
    "the learning machine is not allowed to change the program later .",
    "@xmath8 is supposed to be one of the simplest learning paradigms .",
    "however , if we consider probabilistic and team learning , the situation becomes very complex .",
    "probabilistic @xmath8-type learning has been studied since 1979 but we are still far from the complete understanding of this area .    the investigation of probabilistic finite learning was started by freivalds@xcite .",
    "he gave a complete description of the learning capabilities for probabilistic machines with probabilities of success above @xmath9 .",
    "these results were extended to team learning by daley et .",
    "al.@xcite .",
    "the further progress was very difficult .",
    "daley , kalyanasundaram and velauthapillai@xcite determined the capabilities for probabilistic learners with success probabilities in the interval @xmath10 $ ] .",
    "later , daley and kalyanasundaram@xcite extended that to the interval @xmath11 $ ] .",
    "proofs became more and more complicated .",
    "( the full version of @xcite is more than 100 pages long . )",
    "@xmath2 ( popperian @xmath8)-type learning is a simplified version of @xmath8-type learning . in a @xmath2-type learning , a learning machine is allowed to output only programs computing total recursive functions .",
    "many properties of probabilistic and team @xmath2-type learning are similar to @xmath8-type learning . yet , @xmath2-type learning is simpler and easier to analyse than unrestricted @xmath8-type learning .",
    "daley , kalyanasundaram and velauthapillai@xcite determined the capabilities of probabilistic @xmath2-type learners in the interval @xmath12 $ ] .",
    "however , even for @xmath2-type learning , the situation becomes more and more complicated for smaller probabilities of success . in this paper , we suggest another approach to @xmath2-type and @xmath8-type learning . instead of trying to determine the exact points at which the learning capabilities are different ( either single points or sequences of points generated by a formula),we investigate global properties of the probability structure .",
    "our main result is that the probability hierarchy for @xmath2-type learning is well - ordered in a decreasing ordering and has a constructive description similar to systems of notations for constructive ordinals .",
    "we use this result to construct a decision algorithm for the probability hierarchy . given two numbers @xmath13 $ ]",
    ", the decision algorithm answers whether the learning with probability @xmath0 is equivalent to the learning with probability @xmath1 .",
    "also , we construct a universal simulation algorithm receiving    * @xmath13 $ ] such that @xmath2-learning with these probabilities is equivalent and * @xmath2-learning machine @xmath14 with the probability of success @xmath0    and transforming @xmath14 into machine @xmath15 with the probability of success @xmath1 .",
    "all of these results make heavy use of the well - ordering and the system of notations . to our knowledge , this is the first application of well - orderings to a problem of this character .",
    "( they have been used in computational learning theory@xcite , but for entirely different purposes . )",
    "we also determine the exact ordering type of the probability hierarchy .",
    "it is order - isomorphic to @xmath3 , a quite large ordinal .",
    "is isomorphic to the set of all expressions possible in first - order arithmetic . ]",
    "the part of the hierarchy investigated before ( @xmath16 $ ] ) is order - isomorphic to the ordinal @xmath17 and is very simple compared to the entire probability hierarchy .",
    "thus , we can conclude that finding a more explicit description for the whole hierarchy is unlikely .",
    "( the previous research shows that , even for segments like @xmath18 $ ] with a simple topological structure , this task is difficult because of irregularities in the hierarchy@xcite . )",
    "our results also imply that any probabilistic @xmath2-type learning machine can be simulated by a team of deterministic machines with the same success ratio .",
    "we use the standard recursion theoretic notation@xcite .",
    "@xmath19 denotes @xmath20 , the set of natural numbers .",
    "@xmath21 denotes @xmath22 , the set of positive natural numbers , @xmath23 denotes the set of rational numbers and @xmath24 the set of real numbers . @xmath25 and @xmath26 denote a subset and a proper subset , respectively .",
    "let @xmath27 denote an arbitrary fixed _ acceptable programming system _",
    "_ gdel numbering _ ) of all partial recursive functions@xcite .",
    "@xmath28 denotes the @xmath29 program in system @xmath27 .",
    "a _ learning machine _ is an algorithmic device which reads values of a recursive function @xmath4 : @xmath5 , @xmath6 , @xmath7 .",
    "having seen finitely many values of the function it can output a conjecture . _",
    "the conjecture _ is a program in some fixed acceptable programming system .",
    "only one conjecture is allowed , i.e. the learning machine can not change its conjecture later .    a learning machine @xmath14 _ @xmath8-learns _ a function @xmath4 if , receiving @xmath30 as the input , it produces a program computing @xmath4 .",
    "@xmath14 @xmath8-learns a set of functions @xmath31 if it @xmath8-learns any @xmath32 .",
    "a set of functions @xmath31 is _",
    "@xmath8-learnable _ if there exists a learning machine that learns @xmath31 .",
    "the collection of all @xmath8-learnable sets is denoted @xmath8 .",
    "@xmath2-learning is a restricted form of @xmath8-learning .",
    "a learning machine @xmath14 _ @xmath2-learns _ @xmath31 if it @xmath8-learns @xmath31 and all conjectures ( even incorrect ones ) of @xmath14 on all inputs are programs computing total recursive functions .",
    "the collection of all @xmath2-learnable sets is denoted pfin .",
    "scientific discoveries are rarely done by one person . usually , a discovery is the result of collective effort . in the area of computational learning theory ,",
    "this observation has inspired the research on team learning .",
    "a team is just a set of learning machines : @xmath33 .",
    "the team @xmath14 @xmath34\\fin$]-learns a set of functions @xmath31 if , for every @xmath32 , at least @xmath35 of @xmath36 , @xmath7 , @xmath37 @xmath8-learn @xmath4 .",
    "the collection of all @xmath34\\fin$]-learnable sets is denoted @xmath34\\fin$ ] .",
    "we also consider learning by probabilistic machines .",
    "a probabilistic machine has an access to a fair coin and its output depends on both input and the outcomes of coin flips .",
    "let @xmath14 be a probabilistic learning machine .",
    "@xmath14 @xmath38-learns ( @xmath8-learns with probability @xmath39 ) a set of functions @xmath31 if , for any function @xmath32 , the probability that @xmath14 outputs a program computing @xmath4 , given @xmath5 , @xmath6 , @xmath7 as the input , is at least @xmath39 .",
    "@xmath40 denotes the collection of all @xmath40-learnable sets .",
    "probabilistic and team @xmath2-learning is defined by adding a requirement that all conjectures output by the probabilistic machine or any machine in the team must be programs computing total recursive functions .",
    "the probability hierarchy for @xmath8 is the set @xmath41 $ ] such that    1 .",
    "for any two different @xmath42 , @xmath43 i.e. , learning with probability of success @xmath0 is not equivalent to learning with probability of success @xmath1 .",
    "2 .   if @xmath44 , @xmath45 and @xmath46 does not contain any points belonging to @xmath47 , then @xmath48    essentially , the probability hierarchy is the set of those probabilities at which the learning capabilities of probabilistic machines are different .",
    "the probability hierarchy for @xmath2 is defined similarly .",
    "a linear ordering is a _",
    "well - ordering _ if it does not contain infinite descending sequences .",
    "_ ordinals_@xcite are standard representations of well - orderings .",
    "the ordinal 0 represents the ordering type of the empty set , the ordinal 1 represents the ordering type of any 1 element set , the ordinal 2 represents the ordering type of any 2 element set and so on .",
    "the ordinal @xmath49 represents the ordering type of the set @xmath50 .",
    "the ordinal @xmath51 represents the ordering type of @xmath50 followed by an element @xmath49 .",
    "the ordinal @xmath52 represents the ordering type @xmath53 followed by @xmath54 .",
    "greater ordinals can be defined similarly @xcite .",
    "we use arithmetic operations on ordinals defined in two different ways .",
    "@xcite [ def : ordaritm ] let @xmath47 and @xmath55 be two disjoint sets , @xmath56 be the ordering type of @xmath47 and @xmath57 be the ordering type of @xmath55 .    1 .",
    "@xmath58 is the ordering type of @xmath59 ordered so that @xmath60 for any @xmath44 , @xmath61 and order is the same within @xmath47 and @xmath55 .",
    "@xmath62 is the ordering type of @xmath63 ordered so that @xmath64 iff @xmath65 or @xmath66 and @xmath67 .",
    "we note that both the sum and the product of ordinals are non - commutative .",
    "for example , @xmath68 .",
    "@xcite [ def : substr ] @xmath69 ( the difference of @xmath56 and @xmath57 ) is an ordinal @xmath70 such that @xmath71 .",
    "@xmath69 always exists and is unique@xcite .",
    "we also use the natural sum and the natural product of ordinals .",
    "these operations use the representation of ordinals as exponential polynomials . in this paper",
    ", we consider only ordinals which are less than or equal to @xmath72 any ordinal @xmath73 can be uniquely expressed in the form @xmath74 where @xmath75 are smaller ordinals and @xmath76 , @xmath77 , @xmath7 , @xmath78 .",
    "@xcite [ def : ordaritm1 ] let @xmath74 @xmath79    1 .",
    "the natural sum of @xmath56 and @xmath57 is @xmath80 2 .",
    "@xmath81 , the natural product of @xmath56 and @xmath57 is the product of base @xmath49 representations as polynomials . @xmath82 and @xmath81 is the natural sum of @xmath83 for all @xmath84",
    ".    natural sum and natural product are commutative .",
    "they can be used to bound the ordering type of unions .",
    "[ lem : ord1 ] let @xmath85 be arbitrary subsets of a well - ordered set @xmath47 , @xmath86 , @xmath7 , @xmath87 be the ordering types of @xmath88 , @xmath7 , @xmath89 and @xmath56 be the ordering type of @xmath90 . then , @xmath91    the difference between this theorem and definition [ def : ordaritm ] is that definition [ def : ordaritm ] requires @xmath60 for all @xmath44 , @xmath61 but theorem [ lem : ord1 ] has no such requirement .",
    "next , we give a similar result for the natural product .",
    "[ lem : ord2 ] let @xmath85 and @xmath47 be well - ordered sets with ordering types @xmath86 , @xmath7 , @xmath87 and @xmath56 , respectively .",
    "assume that @xmath92 is a strictly increasing function onto @xmath47 , i.e. @xmath93 for all @xmath94 and @xmath95 .",
    "then @xmath96    both theorem [ lem : ord1 ] and [ lem : ord2 ] will be used in section [ relative ] .",
    "we will also use the _ transfinite induction _ , a generalization of the usual mathematical induction .",
    "* principle of transfinite induction ) let @xmath47 be a well - ordered set and @xmath97 be a predicate . if    1 .",
    "@xmath97 is true when @xmath98 is the smallest element of @xmath47 , and 2 .",
    "@xmath99 for all @xmath100 which are smaller than @xmath98 implies @xmath97 ,    then @xmath97 for all @xmath44 .",
    "in this paper we use subsets of @xmath101 $ ] that are well - ordered in decreasing ordering .",
    "a subset of @xmath23 is well - ordered in decreasing ordering if it does not contain an infinite monotonically increasing sequence .",
    "church and kleene@xcite introduced _",
    "systems of notations _ for constructive ordinals .",
    "intuitively , a system of notations is a way of assigning notations to ordinals which satisfies certain constraints and allows to extract certain information about the ordinal from its notation .",
    "below , we adapt the definition by church and kleene @xcite to well - ordered subsets of @xmath23 .",
    "let @xmath47 be a subset of @xmath23 which is well - ordered in decreasing ordering .",
    "all elements of @xmath47 can be classified as follows :    1 .",
    "the greatest element of the set @xmath47 .",
    "we call it the _ maximal _ element .",
    "elements @xmath98 which have an immediately preceding element in decreasing ordering ( i.e. an element @xmath102 such that @xmath60 and @xmath103 $ ] does not contain any points belonging to @xmath47 ) .",
    "such elements are called _ successor _ elements .",
    "all other elements @xmath44 .",
    "they are called _ limit _ elements .",
    "a system of notations for @xmath47 is a tuple of functions @xmath104 such that    1 .",
    "@xmath105 is equal to 1 .   0 ,",
    "if @xmath98 is the maximal element ; 2 .   1 ,",
    "if @xmath98 is a successor element ; 3 .   2 ,",
    "if @xmath98 is a limit element ; 4 .   3 ,",
    "if @xmath106 ; 2 .   if @xmath107 , then @xmath108 is defined and it is the element immediately preceding @xmath98 in descending ordering .",
    "3 .   if @xmath109 , then @xmath110 is defined and it is a program computing a monotonically decreasing sequence of elements of the set @xmath47 converging to @xmath98 .",
    "systems of notations are convenient for manipulating well - ordered sets in our proofs .",
    "possibly , a system of notation is the most appropriate way of describing the probability hierarchy for @xmath2 .",
    "the structure of this hierarchy is quite complicated ( section [ relative ] ) and it seems unlikely that more explicit descriptions exist .",
    "below , we give a useful property of systems of notations .",
    "[ findinterval ] let @xmath111 be a set which is well - ordered in descending ordering and has a system of notations @xmath112 .",
    "let @xmath113 be the largest number in @xmath47 such that @xmath114 and @xmath115 be the smallest number in @xmath47 such that @xmath116",
    ". then @xmath117 and @xmath118 are computable functions .",
    "* proof . *",
    "@xmath117 and @xmath118 are computed by the algorithm below :    1 .",
    "set @xmath98 equal to an arbitrary element of @xmath47 smaller than @xmath39 .",
    "[ iteration ] 1 .",
    "if @xmath119 , output : @xmath120 .",
    "2 .   if @xmath98 is a successor element and @xmath121 , then output : @xmath122 and @xmath123 . stop .",
    "3 .   if @xmath98 is a successor element and @xmath124 , set @xmath125 .",
    "4 .   if @xmath98 is a limit element and @xmath126 , take the sequence @xmath127 search for the smallest @xmath128 satisfying @xmath129 and set @xmath130 .",
    "( such @xmath128 exists because this sequence is monotonically decreasing and converges to @xmath98 and @xmath131 . )",
    "3 .   repeat step [ iteration ] .",
    "while this algorithm works , @xmath98 remains less or equal to @xmath39 .    from the definition of the system of notations",
    "it follows that the values of @xmath117 and @xmath118 output by the algorithm are correct .",
    "it remains to prove that algorithm always outputs @xmath113 and @xmath115 .    for a contradiction , assume that the algorithm does not output @xmath113 and @xmath115 for some @xmath132 .",
    "this can happen only if the algorithm goes into eternal loop , i.e. if step [ iteration ] is executed infinitely many times .",
    "each execution of step [ iteration ] increases the value of @xmath98 .",
    "let @xmath133 be the value of @xmath98 after the @xmath29 repetition of step [ iteration ] .",
    "then @xmath134 is an infinite monotonically increasing sequence .",
    "this contradicts the set @xmath47 being well - ordered in decreasing order .",
    "[ figure ]    ( 380,250 ) ( 20,20)(0,70)3(1,0)360 ( 20,18)(0,70)3(0,1)4 ( 380,18)(0,70)3(0,1)4 ( 20,35)(0,70)3(0,0)@xmath136 ( 380,35)(0,70)3(0,0)@xmath137 ( 20,18)(0,70)2(0,1)4 ( 270,35)(0,70)2(0,0)@xmath138 ( 270,18)(0,70)2(0,1)4 ( 246,35)(0,70)2(0,0)@xmath139 ( 246,18)(0,70)2(0,1)4 ( 234,18)(0,70)2(0,1)4 ( 229,18)(0,70)2(0,1)4 ( 226,18)(0,70)2(0,1)4 ( 223,18)(0,70)2(0,1)4 ( 220,18)(0,70)2(0,1)4 ( 218,18)(0,70)2(0,1)4 ( 216,18)(0,70)2(0,1)4 ( 214,18)(0,70)2(0,1)4 ( 212,18)(0,70)2(0,1)4 ( 210,18)(0,70)3(0,1)4 ( 210,35)(0,70)3(0,0)@xmath9 ( 225,35)(0,70)2(0,0)@xmath7 ( 200,88)(0,1)4 ( 200,105)(0,0)@xmath140 ( 196,88)(0,1)4 ( 192,88)(0,1)4 ( 188,88)(0,1)4 ( 184,88)(0,1)4 ( 182,88)(0,1)4 ( 180,88)(0,1)4 ( 178,88)(0,1)4 ( 176,88)(0,1)4 ( 175,88)(0,1)4 ( 175,105)(0,0)@xmath141 ( 188,105)(0,0)@xmath7 ( 100,105)(0,0 ) ? ( 175,18)(0,1)4 ( 168,18)(0,1)4 ( 163,18)(0,1)4 ( 159,18)(0,1)4 ( 157,18)(0,1)4 ( 155,18)(0,1)4 ( 153,18)(0,1)4 ( 151,18)(0,1)4 ( 150,18)(0,1)4 ( 150,35)(0,0)@xmath142 ( 165,35)(0,0)@xmath7 ( 140,18)(0,1)4 ( 135,18)(0,1)4 ( 132,18)(0,1)4 ( 130,18)(0,1)4 ( 128,18)(0,1)4 ( 126,18)(0,1)4 ( 125,18)(0,1)4 ( 125,35)(0,0)@xmath143 ( 138,35)(0,0)@xmath7 ( 75,35)(0,0 ) ? ( 100,158)(0,1)4 ( 100,175)(0,0)@xmath144 ( 80,158)(0,1)4 ( 80,175)(0,0)@xmath145 ( 68,158)(0,1)4 ( 62,158)(0,1)4 ( 57,158)(-4,0)3(0,1)4 ( 46,158)(-3,0)3(0,1)4 ( 37,158)(-2,0)5(0,1)4 ( 35,158)(-1,0)15(0,1)4 ( 35,175)(0,0 ) ",
    "( 50,65)(0,0)@xmath2 ( 42,135)(0,0)@xmath8 ( 37,205)(0,0)@xmath146    in figure 1 , we show the known parts of probability hierarchies for three learning criteria :    * @xmath146 ( learning in the limit , pitt and smith@xcite ) , * @xmath8 ( freivalds@xcite , daley , kalyanasundaram and velauthapillai@xcite ) , and * @xmath2 ( daley , kalyanasundaram and velauthapillai@xcite ) .",
    "we see that these probability hierarchies contain infinite decreasing sequences but none of them contains an infinite increasing sequence .",
    "known parts of these hierarchies are well - ordered in decreasing ordering .",
    "we will show that , for @xmath2-type learning , the entire hierarchy is well - ordered and will use this property to study its properties .",
    "the outline for this section is as follows .",
    "we start with describing a set @xmath147 in two equivalent forms in subsection [ subsection0 ] . then",
    ", in sections [ sub : technical ] and [ sec : treeprop ] , we show several technical lemmas about the set @xmath147 , including the equivalence of the two descriptions .",
    "then , we show that @xmath147 is the probability hierarchy for @xmath2 . the proof of that consists of two parts : diagonalization and simulation . the diagonalization part is shown in subsection [ subsection1 ] .",
    "the simulation argument is more complicated .",
    "first , in section [ subsection2 ] , we show that @xmath147 is well - ordered and has a system of notations .",
    "finally , in subsection [ subsection3 ] we use these technical results to construct a universal simulation argument .",
    "our diagonalization theorem uses methods from kummer s paper on @xmath2-teams@xcite but the simulation part uses new techniques and is far more complicated .",
    "our description has two equivalent forms .",
    "first , we describe it as a set of solutions to a particular optimization problem on trees .    similarly to @xcite",
    ", we define trees as finite nonempty subsets of @xmath148 which are closed under initial segments .",
    "the root of each tree is the empty string @xmath149 .",
    "a vertex @xmath150 is a child of a vertex @xmath151 if @xmath152 for some @xmath153 .",
    "next , we define labelings of trees by positive reals . the definition below is equivalent to one in @xcite , with some minor technical modifications .",
    "[ def : label ] let @xmath154 .",
    "an @xmath155-labeling of a tree @xmath156 is a pair of mappings @xmath157 such that    1 .",
    "[ ite : label1 ] @xmath158 and @xmath159 , 2 .",
    "[ ite : label2 ] if @xmath160 are all direct successors of @xmath161 , then instead of @xmath162 here . ] @xmath163 and @xmath164 for @xmath165 , 3 .",
    "[ ite : label3 ] for each branch the sum of the @xmath166-labels of all of its nodes is at most @xmath167 .",
    "labelings by natural numbers have an intuitive meaning .",
    "@xmath168 is the number of machines that have issued a conjecture consistent with the initial segment @xmath151 . in particular",
    ", @xmath169 is the number of machines that have issued such a conjecture on some prefix of @xmath151 and @xmath170 is the number of machines that have output it after seeing the whole segment @xmath151 .",
    "then , the requirements of definition have the following interpretation .",
    "@xmath171 means that , for every segment @xmath161 in the tree , there must be at least @xmath39 machines with conjectures consistent with @xmath161 .    the second requirement",
    ", @xmath163 has the following interpretation .",
    "@xmath172 is the number of machines which have issued a conjecture consistent with @xmath173 after reading a prefix of @xmath173 .",
    "a conjecture consistent with @xmath173 is also consistent with @xmath161 .",
    "a prefix of @xmath173 could be either @xmath161 or a prefix of @xmath161 .",
    "since a conjecture can be only consistent with one of segments @xmath173 , @xmath174 must be at most the total number of machines which have issued a conjecture consistent with @xmath161 after reading either @xmath161 or a prefix of @xmath161 .",
    "the number of such machines is @xmath162 .",
    "finally , the third requirement means that the total number of machines that issue conjectures on any branch is at most @xmath167 .",
    "an example of a labeling is shown in figure [ fig - tree ] .",
    "the first number near node is @xmath175 , the second number is @xmath176 .",
    "labelings with reals have a similar interpretation , with @xmath175 and @xmath176 being the probabilities that a probabilistic machine has output a conjecture consistent with @xmath161 .",
    "[ fig - tree ]    let @xmath177 denotes the largest number @xmath39 such that there is a @xmath178 labeling of @xmath156 .",
    "( for the tree in figure [ fig - tree ] , @xmath179 . )",
    "let @xmath180    the second description is algebraic , by a recurrence relation .",
    "let set @xmath181 defined by the following rules :    1 .",
    "@xmath182 ; 2 .",
    "[ rule ] if @xmath183 and @xmath184 $ ] is a number such that there exist @xmath185 $ ] satisfying 1 .",
    "@xmath186 ; 2 .",
    "@xmath187 for @xmath165 , + then @xmath188 ;    in section [ sec : treeprop ] , we will show that both definitions give the same set @xmath189 .",
    "after that , we will prove that @xmath147 is the probability hierarchy for @xmath2 .      in this subsection , we study the properties of the rule that generates the set @xmath181 .",
    "the results of this subsection are used in various parts of section [ sec : decidable ] .",
    "first , we show that the rule [ rule ] can be described without using variables @xmath190 .",
    "[ formula ] if there exist @xmath191 $ ] satisfying @xmath186 and @xmath187 for @xmath165 , then @xmath192    * proof .",
    "* @xmath193 is equivalent to @xmath194 .",
    "hence , @xmath195 @xmath196 @xmath197 @xmath135    we shall use both forms of the rule [ rule ] .",
    "the rule with @xmath190 is more natural in simulation and diagonalization arguments but is less convenient for algebraic manipulations .",
    "we also use a version of lemma [ formula1 ] where equality is replaced by inequality .",
    "[ formula1 ] if there exist @xmath191 $ ] satisfying @xmath186 and @xmath198 for @xmath165 , then @xmath199    * proof . * similar to the proof of lemma [ formula ] , with @xmath200 or @xmath201 instead of @xmath202 where necessary .",
    "@xmath135    lemma [ formula ] suggests that the rule [ rule ] can be considered as a function of @xmath203 .",
    "next lemmas show that this function is monotonic and continuous .",
    "[ monotonicity ] if    1 .",
    "@xmath188 follows from @xmath204 by rule [ rule ] ; 2 .",
    "@xmath205 follows from @xmath206 by rule [ rule ] ; 3 .",
    "@xmath207 ,    then @xmath208 . if @xmath209 for at least one @xmath128 , then @xmath210 .",
    "* by lemma [ formula ] @xmath211 from @xmath212 it follows that @xmath213 and @xmath214 @xmath215 if @xmath209 for some @xmath128 , then @xmath216 and all inequalities are strict .",
    "@xmath135    [ limits ] let @xmath217 and @xmath218 .",
    "if , for all @xmath219 , @xmath220 follows from @xmath221 by rule [ rule ] , then @xmath222 follows from @xmath223 by rule [ rule ] .",
    "*    @xmath224 @xmath225 @xmath135    the last result of this section relates the numbers generated by applications of the rule [ rule ] to @xmath226 , @xmath7 , @xmath227 and @xmath228 , @xmath7 , @xmath229 .",
    "[ lem : rule ] an application of the rule [ rule ] to @xmath230 , @xmath7 , @xmath231 generates @xmath188 if and only if an application of the rule [ rule ] to @xmath232 , @xmath7 , @xmath233 generates @xmath234 .    * proof . * assume that equation ( [ eq : rule ] ) is true for @xmath235 , @xmath7 , @xmath236 .",
    "then , @xmath237 @xmath238 this is precisely equation ( [ eq : rule ] ) for @xmath239 , @xmath7 , @xmath240 .    the opposite direction ( equation ( [ eq : rule ] ) for @xmath239 , @xmath7 , @xmath240 implies equation ( [ eq : rule ] ) is true for @xmath235 , @xmath7 , @xmath236 ) is similar .",
    "@xmath135      we start by showing that for a tree @xmath156 and its subtrees @xmath241 , @xmath177 and @xmath242 are related similarly to rule [ rule ] .    [",
    "lem : mult ] let @xmath243 and @xmath156 be a tree with @xmath155-labeling .",
    "then , there is a @xmath244-labeling for @xmath156 .",
    "* we multiply all labels by @xmath35 and obtain a @xmath244-labeling . @xmath135",
    "[ lem : existlabel ] let @xmath160 be all direct successors of the root in a tree @xmath156 and @xmath245 be the subtrees with roots @xmath246 .",
    "assume there are @xmath247 , @xmath7 , @xmath248 such that @xmath249 and @xmath250 for @xmath94 .",
    "then @xmath251 .    *",
    "first , we construct a @xmath178-labeling .",
    "let @xmath252 , @xmath253 be a @xmath254-labeling for @xmath241 .",
    "we define @xmath255 @xmath256 properties [ ite : label1 ] and [ ite : label2 ] can be checked directly from the definitions of @xmath166 and @xmath257 .",
    "we prove property [ ite : label3 ] .",
    "let @xmath150 be a direct successor of @xmath173 .",
    "then , the sum of @xmath252-labels on any branch starting at @xmath150 is at most @xmath258 .",
    "( by property [ ite : label3 ] of @xmath252 , it is at most @xmath137 for any branch starting at @xmath173 and @xmath259 . )",
    "hence , the sum of @xmath260-labels for such a branch is at most @xmath261 .",
    "a branch starting at @xmath149 consists of @xmath149 , @xmath173 and a branch starting at a direct descendant of @xmath173 .",
    "hence , the sum of all its @xmath166-labels is at most @xmath262 @xmath263    for a contradiction , assume that there is @xmath264 and a @xmath265-labeling @xmath266 for @xmath156 .",
    "let @xmath267 . if we restrict ourselves to the subtree @xmath241 and add @xmath268 to @xmath269",
    ", we obtain a @xmath270-labeling for @xmath241 . by lemma [ lem : mult ]",
    ", there is a @xmath271 labeling for @xmath241 .",
    "hence , @xmath272 @xmath273 @xmath274 we consider the sum of these expressions for all @xmath128 . @xmath275 @xmath276 and @xmath277 .",
    "contradiction , proving the lemma .",
    "@xmath135    by lemma [ formula ] , the relation between @xmath177 and @xmath278 , @xmath7 , @xmath279 is also expressed by the equation ( [ eq : rule ] ) .",
    "we can now show the equivalence of the two definitions .",
    "[ lem : treeequiv ] @xmath189 .    * proof .",
    "* by induction .",
    "if @xmath188 follows from @xmath280 by rule [ rule ] and @xmath281 for trees @xmath241 , we construct a tree @xmath156 consisting of the root , @xmath282 and make the roots of @xmath283 , @xmath284 , @xmath7 , @xmath285 children of @xmath156 s root . then , @xmath251 ( by lemma [ lem : existlabel ] ) . hence",
    ", for any @xmath188 , there is a tree @xmath156 with @xmath251 .",
    "this means @xmath286 .",
    "similarly , we can show that @xmath287 for any tree @xmath156 .",
    "@xmath135    next , we show that the @xmath288-labeling of lemma [ lem : existlabel ] uses only rational numbers and , hence , can be transformed into a labeling that uses only integers .",
    "[ lem : rational1 ] for any tree @xmath156 , @xmath289 .    * proof .",
    "* by induction over the depth of @xmath156 .",
    "for a tree consisting of root only , @xmath290",
    ".    otherwise , let @xmath160 be all direct successors of the root in @xmath156 and @xmath245 be the subtrees with roots @xmath246 .",
    "the depth of these subtrees is smaller than the depth of @xmath156 .",
    "hence , all @xmath242 are rationals . equation ( [ eq : rule ] ) implies that @xmath177 is rational , too .",
    "[ lem : rational2 ] @xmath288-labeling constructed in the proof of lemma [ lem : existlabel ] uses only rational numbers .",
    "* by induction over the depth of @xmath156 .",
    "again , the lemma is evident for the tree with the root only .    for other trees ,",
    "notice that all @xmath190 can expressed by @xmath39 and @xmath242 .",
    "hence , @xmath247 , @xmath7 , @xmath248 are rationals .",
    "label of the root is the rational number @xmath39 , labels of @xmath160 are rationals @xmath291 and labels of other nodes are @xmath292 .",
    "@xmath293 is a rational number because @xmath39 and @xmath190 are rationals and @xmath294 is a rational number because @xmath295 is a part of the @xmath254-labeling for a tree of smaller depth .",
    "[ lem : natural ] let @xmath156 be a tree . then there is @xmath153 such that @xmath156 has @xmath296-labeling with labels from @xmath19 .    * proof . * let @xmath297 be the least common denominator of all rational numbers in the @xmath288-labeling @xmath166 , @xmath257 of lemma [ lem : existlabel ] .",
    "then , @xmath298 is a @xmath296 labeling and uses only natural numbers .",
    "let @xmath299 denote a sequence of @xmath300 zeros and @xmath301 denote an infinite sequence of zeros .",
    "let @xmath302 be the halting set , i.e. the set of all @xmath128 such that program @xmath28 halts on input @xmath128 .",
    "let @xmath303 be the set of all @xmath128 such that @xmath28 halts on input @xmath128 in at most @xmath304 steps .",
    "for a set @xmath112 , let @xmath305 be the characteristic function of @xmath112 : @xmath306 if @xmath307 and @xmath308 otherwise .",
    "@xcite let @xmath156 be a tree of depth @xmath309 .",
    "@xmath310 is the set of all recursive functions @xmath4 such that the sequence of values @xmath5 , @xmath6 , @xmath7 is of the form @xmath311 where each @xmath312 is finite , @xmath313 , and either @xmath314 or @xmath315 is a leaf of @xmath156 .",
    "[ lem : ident ] @xcite if @xmath156 has an @xmath316-labeling by integers then @xmath317\\pfin.\\ ] ]    the next lemma is an extension of kummer s results to probabilistic learning .",
    "the proof is similar to theorem 16 in @xcite .",
    "we give it here for completeness .",
    "[ lem : nonidenta ] if @xmath318 $ ] and @xmath302 is not turing reducible to @xmath319 , then @xmath156 has a @xmath320 labeling for any @xmath321 .    *",
    "* let @xmath322 be the depth of @xmath156 .",
    "let @xmath14 denote an iim that identifies @xmath310 with the @xmath319-oracle . for arbitrary @xmath323 , we enumerate a set @xmath324 .",
    "define the event @xmath325 to be true iff @xmath326 and , for each @xmath327 and @xmath328 , the probability that @xmath329 outputs a program computing a function with an initial segment @xmath330 while reading @xmath331 is at least @xmath332 .",
    "the procedure for enumerating @xmath324 is as follows .",
    "_ initialization .",
    "_ let @xmath333 .    _ step l. _",
    "search for the smallest @xmath334 satisfying @xmath325 for some @xmath335 .",
    "if the search terminates , enumerate @xmath336 into @xmath324 , set @xmath337 , @xmath338 and go to step @xmath339 .",
    "@xmath340 .    * proof .",
    "* let @xmath341 .",
    "@xmath325 holds for all sufficiently large @xmath304 because @xmath329 infers all functions @xmath342 . after discovering it ,",
    "@xmath343 is enumerated into @xmath324 .",
    "@xmath135    @xmath344 for some @xmath323 .",
    "* proof . * if @xmath340 and @xmath345 for all @xmath323 , then , by fact 6 in @xcite , @xmath302 is turing - reducible to @xmath319 .",
    "@xmath135    hence , there exists @xmath323 and @xmath346 such that @xmath347 for @xmath348 .",
    "define the label @xmath349 of @xmath350 as the probability that :    1 .",
    "@xmath14 does not output a program while reading @xmath351 , where @xmath328 , and 2 .",
    "@xmath14 outputs a program computing a function with the initial segment @xmath352 while reading @xmath353 .    for @xmath354",
    ", there is no segment @xmath355 and @xmath356 is just the probability that @xmath329 outputs a program computing a function with the initial segment @xmath357 while reading @xmath358 .",
    "the label @xmath359 is @xmath136 for @xmath354 and the probability that @xmath329 outputs a program computing a function with the initial segment @xmath352 while reading @xmath351 for @xmath350 .",
    "next , we verify that all conditions of definition [ def : label ] are satisfied .",
    "property [ ite : label1 ] follows from the definitions of @xmath356 , @xmath360 and @xmath361 .    for property",
    "[ ite : label2 ] , notice that @xmath162 is the total probability that @xmath329 outputs a function consistent with @xmath352 while reading @xmath353 .",
    "@xmath362 are the probabilities that a particular continuation of @xmath352 is an initial segment of the function .",
    "these events are mutually exclusive .",
    "hence , @xmath363 .",
    "@xmath364 is true because @xmath329 outputs a program consistent with @xmath365 with a probability at least @xmath332 ( by the definition of @xmath325 ) .",
    "property [ ite : label3 ] is true because the sum of all @xmath166-labels on any branch is at most the probability that @xmath329 outputs a conjecture while reading @xmath366 and , hence , is at most 1 .",
    "@xmath135    if there is no oracle @xmath319 , we get    [ lem : nonident ] if @xmath367 , then @xmath156 has a @xmath320 labeling for any @xmath321 .",
    "[ lem : treesets ] for a tree @xmath156 , @xmath368 and @xmath369 for any @xmath321 .    * proof . *",
    "corollary [ lem : natural ] and lemma [ lem : ident ] imply that @xmath370\\pfin$ ] for appropriate @xmath297 .",
    "a @xmath371\\pfin$ ] team can be simulated by a @xmath372 probabilistic machine that chooses one of @xmath297 machines in the team equiprobably .",
    "if @xmath373 , then , there is a @xmath374 labeling of @xmath156 ( corollary [ lem : nonident ] ) .",
    "this is impossible because @xmath177 is the largest number such that there is a @xmath288 labeling of @xmath156 .",
    "@xmath135    [ part1 ] if @xmath375 and @xmath376 , then @xmath377 .",
    "* follows from corollary [ lem : treesets ] and lemma [ lem : treeequiv ] .",
    "@xmath135      it remains to prove that , for any probability @xmath39 , @xmath378-type learning is equivalent to @xmath379-type learning with some probability belonging to @xmath147 .",
    "our diagonalization technique was similar to @xcite .",
    "the simulation part is more complicated .",
    "simulation techniques in @xcite rely on fact that each team issues finitely many conjectures and , hence , there are finitely many possible behaviors of these conjectures",
    ". a probabilistic machine can issue infinitely many conjectures and these conjectures have infinitely many possible behaviors .",
    "this makes simulation far more complicated .",
    "we need an algorithmic structure for manipulating an infinite number of possibilities .",
    "we establish it by proving that @xmath147 is well - ordered and has a system of notations .",
    "[ basic ] the set @xmath147 is well - ordered in decreasing ordering and has a system of notations .",
    "* we construct a system of notations for the set @xmath147 inductively .",
    "first , we construct a system of notations for @xmath380 $ ] .",
    "then we extend it , obtaining system of notations for @xmath381 $ ] , @xmath382 $ ] and so on .",
    "freivalds@xcite proved @xmath383 =      \\left\\{\\frac{1}{2}\\right\\}\\cup\\left\\{\\frac{n}{2n-1 } |     n\\in\\bbbn \\ & n\\geq 1\\right\\}.\\ ] ] a system of notations for @xmath380 $ ] can be easily constructed from this description .",
    "below , we show how to construct a system of notations for @xmath384 $ ] using a system of notations for @xmath385 $ ] .",
    "an outline of our construction is as follows :    1 .   split the segment @xmath386 $ ] into smaller segments @xmath387 $ ] so that , if @xmath388 $ ] and @xmath389 follows from the rule [ rule ] , then @xmath390 .",
    "( this property allows us to obtain a system of notations for @xmath391 $ ] from a given system of notations for @xmath392 $ ] without using any knowledge about @xmath391 $ ] . )",
    "we give the splitting and prove its properties in subsection [ subsub : split ] .",
    "2 .   using transfinite induction over the segments @xmath387 $ ] , extend the system of notations for @xmath385 $ ] to larger and larger segments @xmath393 $ ] , finally obtaining a system of notations for @xmath384 $ ] .",
    "this part is described in subsections [ subsub : transfinite ] , [ subsub : distinguishing ] , [ subsub : xdminimal ] and [ subsub : system ] .",
    "the splitting consists of two steps .    1 .   first , we take @xmath394 for @xmath395 $ ] . by lemma",
    "[ lem : rule ] , all @xmath394 belong to the set @xmath147 .",
    "these points split @xmath386 $ ] into segments @xmath396 $ ] .",
    "2 .   each segment",
    "@xmath396 $ ] is split further by the sequence @xmath397 @xmath398 is a monotonically decreasing sequence converging to @xmath394 .",
    "it splits @xmath396 $ ] into segments @xmath399 $ ] , @xmath400 $ ] , @xmath7 .",
    "let @xmath401 denote the set consisting of all @xmath394 and @xmath402 for all segments @xmath396 $ ] .",
    "next , we prove several properties of the segments @xmath387 $ ] that will be used further .",
    "[ p1first ] let @xmath396 $ ] be a segment obtained in the first step of the splitting .",
    "if @xmath403 follows from @xmath404 by the rule [ rule ] and @xmath405 $ ] then @xmath406    * proof . * we have @xmath407 @xmath408 @xmath409 @xmath410 therefore , @xmath411 and @xmath412 .",
    "@xmath135    [ p1second ] let @xmath413 $ ] .",
    "if @xmath403 follows from @xmath404 by the rule [ rule ] , then @xmath414    * proof .",
    "* we prove @xmath415 only .",
    "( @xmath416 are proved similarly . )",
    "assume that @xmath387 $ ] was obtained by splitting @xmath396 $ ] .",
    "then , @xmath417 ( lemma [ p1first ] ) .    from @xmath418",
    "it follows that @xmath419 we have @xmath420 .",
    "hence , @xmath421",
    "@xmath422 @xmath423 from @xmath424 $ ] we have that @xmath425 and @xmath426 @xmath135    we have proved that all @xmath427 $ ] are generated by applications of the rule [ rule ] to @xmath428 $ ] . the next lemma bounds the number @xmath304 .    [ p1quantity ] let @xmath413 $ ] , with @xmath387 $ ] being a segment obtained by splitting @xmath396 $ ] .",
    "if @xmath403 follows from @xmath404 by the rule [ rule ] , then @xmath429    * proof . * from lemma [ p1first ] we have @xmath430 hence , @xmath431 @xmath432",
    "@xmath135      @xmath401 is well - ordered .",
    "* proof . * @xmath385 $ ] is well - ordered by inductive assumption .",
    "hence , @xmath433 $ ] is well - ordered , too .",
    "the set @xmath434\\}$ ] is order - isomorphic to @xmath433 $ ] .",
    "hence , it is well - ordered and the set of segments @xmath435 $ ] into which it splits @xmath386 $ ] is well - ordered , too .",
    "@xmath401 is obtained by replacing each segment @xmath396 $ ] with the sequence @xmath402 .",
    "each sequence is well - ordered .",
    "hence , the entire set @xmath401 is well - ordered .",
    "@xmath135    hence , we can use transfinite induction over this set .",
    "[ inductionstep ] @xmath436 $ ] is well - ordered in decreasing ordering .    *",
    "proof . * by transfinite induction over @xmath401 .",
    "_ base case .",
    "_ the set @xmath437 $ ] is well - ordered .",
    "_ inductive case .",
    "_ let @xmath438 .",
    "we assume that @xmath439 $ ] is well - ordered for all @xmath440 , @xmath441 and prove that @xmath442 $ ] is well - ordered , too .",
    "there are three cases :    1 .",
    "@xmath443 for @xmath444 $ ] and @xmath39 is a limit element .",
    "+ let @xmath39 be the limit of @xmath445 . then , @xmath394 is the limit of @xmath446 because the function @xmath447 is continuous . by inductive assumption ,",
    "each @xmath448 $ ] is well - ordered .",
    "hence , their union @xmath449 $ ] is well - ordered .",
    "2 .   @xmath443 for @xmath444 $ ] and @xmath39 is not a limit element .",
    "+ we take the segment @xmath396 $ ] obtained in the first step of the splitting and the corresponding sequence @xmath402 .",
    "@xmath394 is the limit of @xmath402 .",
    "@xmath449 $ ] is well - ordered because each @xmath450 $ ] is well - ordered .",
    "3 .   @xmath451 for any @xmath444 $ ] . then , @xmath452 because @xmath453 for @xmath454 $ ] .",
    "hence , @xmath455 for some @xmath456 .",
    "+ @xmath392 $ ] is well - ordered because @xmath457 .",
    "hence , it is enough to prove that @xmath391 $ ] is well - ordered .",
    "+ for a contradiction , assume that @xmath391 $ ] contains an infinite monotonically increasing sequence @xmath458 .",
    "+ [ monotonoussubsequence ] let @xmath459 $ ] , @xmath460 $ ] , @xmath7 .",
    "there is an @xmath461 and sequences @xmath462 and @xmath463 for @xmath464 such that 1 .",
    "@xmath462 is a subsequence of @xmath458 , 2 .",
    "@xmath465 follows from @xmath466 and the rule [ rule ] , and 3 .",
    "@xmath467 or @xmath468 for all @xmath464 .",
    "+ * proof . *",
    "denote @xmath469 consider the applications of the rule [ rule ] that prove @xmath470 . by lemma [ p1quantity ] , @xmath471 in each of these applications .",
    "hence , there exists an @xmath472 such that infinitely many of @xmath473 are generated by applications of the rule [ rule ] with @xmath474 .",
    "we denote this subsequence @xmath475 .",
    "+ next , we select @xmath476 , a subsequence of @xmath475 .",
    "then , we select @xmath477 , a subsequence of @xmath476 .",
    "we continue so until we obtain @xmath478 .",
    "+ the subsequence @xmath479 is generated from @xmath480 as follows : + let @xmath481 be the values of @xmath482 in the application of the rule [ rule ] that proves @xmath483 .",
    "we use the infinite version of dilworth s lemma .",
    "+ let @xmath484 be a sequence of real numbers",
    ". then @xmath485 , @xmath486 , @xmath7 contains * a subsequence @xmath487 such that @xmath488 , or * an infinite monotonically increasing subsequence , or * an infinite monotonically decreasing subsequence . + the sequence @xmath489 does not contain an infinite monotonically increasing subsequence because all elements of this sequence belong to @xmath490 $ ] and @xmath490 $ ] is well - ordered in decreasing ordering .",
    "hence , this sequence contains an infinite subsequence consisting of equal elements or an infinite monotonically decreasing subsequence .",
    "+ let this subsequence be @xmath491 , @xmath492 , @xmath7 .",
    "we choose @xmath493 as the sequence @xmath494 . + @xmath478 is the needed sequence @xmath462 .",
    "we have @xmath495 because such property holds for the sequence @xmath479 and @xmath496 , @xmath497 , @xmath7 is a subsequence of @xmath498 , @xmath499 , @xmath7 .",
    "@xmath135 + we have @xmath500 @xmath501 @xmath502 by lemma [ monotonicity ] , @xmath503 hence , @xmath458 contains an infinite non - increasing subsequence .",
    "@xmath135 + this is a contradiction with the assumption that @xmath504 , @xmath505 , @xmath7 is monotonically increasing .",
    "@xmath135    next , we construct a system of notations @xmath112 for @xmath436 $ ] .",
    "we start with technical results necessary for our construction . in section [ subsub : distinguishing ] , we show how to distinguish limit elements from successor elements . in section [ subsub :",
    "xdminimal ] , we define @xmath506-minimal sets and show that such sets can be computed algorithmically .",
    "finally , in section [ subsub : system ] , we use these results to construct a system of notations .",
    "the maximal element of the set @xmath147 is @xmath137 .",
    "it does not belong to @xmath391 $ ] .",
    "hence , @xmath391 $ ] does not contain the maximal element and , constructing a system of notations , we should distinguish numbers @xmath39 of three types :",
    "1 .   @xmath507 $ ] and @xmath39 is a successor . then @xmath508 .",
    "2 .   @xmath507 $ ] and @xmath39 is a limit element . then @xmath509 .",
    "3 .   @xmath510 $ ] . then @xmath511 .",
    "two lemmas below shows how to distinguish between limit and successor elements .",
    "[ limit ] let @xmath413 $ ] . then @xmath98 is a limit element if and only if it can be generated by rule [ rule ] so that at least one of @xmath203 is limit element .",
    "*    `` if '' part . assume that @xmath512 is a limit element .",
    "let @xmath463 be a monotonically decreasing sequence converging to @xmath512 and @xmath513 be the number generated by the application of the rule [ rule ] to @xmath0 , @xmath7 , @xmath514 , @xmath515 , @xmath516 , @xmath7 , @xmath517 .",
    "then , @xmath458 is a monotonically decreasing sequence converging to @xmath98 .",
    "hence , @xmath98 is a limit element .",
    "`` only if '' part . let @xmath98 be a limit element and @xmath458 be a monotonically decreasing sequence converging to @xmath98 .",
    "we apply claim [ monotonoussubsequence ] to @xmath458 and obtain a subsequence @xmath462 .",
    "we consider the sequences @xmath463 .",
    "let @xmath518 by lemma [ limits ] , @xmath98 can be generated from @xmath519 by an application of rule [ rule ] .",
    "we have @xmath520 for any @xmath521 . if @xmath522 for all @xmath300 , then , @xmath523 . a contradiction with the assumption that @xmath458 is monotonically decreasing .",
    "hence , @xmath524 for at least one @xmath300 and @xmath525 is a limit element .",
    "@xmath135    [ an ]",
    "let @xmath438 .",
    "then @xmath98 is a limit element .",
    "* we have three cases .",
    "1 .   @xmath443 for @xmath526 $ ] and @xmath39 is a limit element .",
    "+ let @xmath39 be the limit of @xmath445 . then , @xmath394 is the limit of @xmath446 because the function @xmath447 is continuous .",
    "2 .   @xmath443 for @xmath444 $ ] and @xmath39 is not a limit element .",
    "+ we take the segment @xmath396 $ ] obtained in the first step of the splitting and the corresponding sequence @xmath402 .",
    "@xmath394 is the limit of @xmath402 .",
    "3 .   @xmath451 for any @xmath444 $ ] .",
    "+ then , @xmath527 . we prove the lemma by induction over @xmath128 .",
    "+ _ base case .",
    "_ if @xmath528 , then @xmath529 and we already know that @xmath530 is a limit element",
    ". + _ inductive case .",
    "_ lemma [ formula ] and the definition of @xmath531 imply that @xmath532 follows from @xmath533 and @xmath389 by the rule [ rule ] . if @xmath534 is a limit element , then , by lemma [ limit ]",
    ", @xmath531 is a limit element , too .",
    "@xmath135      in the algorithms of subsection [ subsub : system ] , we will often need to compute the largest element of @xmath391 $ ] which is less than some given @xmath98 .",
    "this will be done by checking @xmath535 $ ] , @xmath536 $ ] , @xmath7 , @xmath537 $ ] that can generate @xmath403 by rule [ rule ] .",
    "there are infinitely many possible combinations of @xmath0 , @xmath7 , @xmath517 .",
    "hence , we need    * to prove that it is enough to check finitely many combinations @xmath535 $ ] , @xmath536 $ ] , @xmath7 , @xmath537 $ ] , and * to construct an algorithm finding the list of combinations @xmath535 $ ] , @xmath536 $ ] , @xmath7 , @xmath537 $ ] which must be checked when the functions @xmath538 are computed .",
    "we do it below .",
    "first , we give formal definitions .",
    "a tuple @xmath539 is said to be @xmath540-allowed if @xmath535 $ ] , @xmath7 , @xmath537 $ ] and @xmath541 .",
    "a tuple @xmath539 is said to be less than or equal to @xmath542 if @xmath543 , @xmath7 , @xmath544 .",
    "a set of tuples @xmath545 is said to be @xmath506-minimal if ,    1 .",
    "it contains only @xmath506-allowed tuples ; 2 .   for each @xmath506-allowed tuple @xmath546",
    "there is a tuple belonging to @xmath545 which is less than or equal to @xmath546    next three lemmas show why @xmath506-allowed tuples and @xmath506-minimal sets are important for our construction .",
    "[ allowedtuples ] @xmath539 is @xmath547-allowed if and only if the application of the rule [ rule ] to @xmath203 generates a number @xmath39 satisfying @xmath548 .    * proof .",
    "* let @xmath549 .",
    "@xmath539 is @xmath547-allowed if and only if @xmath550 .",
    "hence , it is enough to prove that @xmath550 if and only if @xmath45 .",
    "@xmath551 @xmath552 we have @xmath553 hence , if @xmath554,then @xmath555 and @xmath556 .",
    "if @xmath45 , then @xmath557 and @xmath558 . @xmath135    [ minimalsetlemma ] let @xmath545 be a @xmath547-minimal set .",
    "then , for any @xmath203 that generates @xmath548 by an application of the rule [ rule ] , there exists a tuple @xmath559 such that @xmath560 , @xmath7 , @xmath561 .",
    "* by lemma [ allowedtuples ] , @xmath539 is @xmath562-allowed . by the definition of @xmath562-minimal",
    "set , @xmath545 contains a tuple @xmath542 such that @xmath560 , @xmath7 , @xmath561 .",
    "@xmath135    [ exactcombination ] let @xmath545 be a @xmath547-minimal set , @xmath535 , \\ldots , p_s\\in { { \\cal a}}\\cap[r_i , 1]$ ] . if @xmath403 follows from @xmath404 and the rule [ rule ] , then @xmath563 .",
    "* by lemma [ allowedtuples ] , @xmath539 is @xmath547-allowed . hence , by lemma [ minimalsetlemma ] , there exists @xmath547-allowed @xmath564 such that @xmath565 .",
    "let @xmath566 be the number generated by an application of the rule [ rule ] to @xmath567 , @xmath7 , @xmath568 .",
    "if @xmath569 for some @xmath128 , then @xmath570 ( lemma [ monotonicity ] ) and @xmath542 is not @xmath547-allowed ( lemma [ allowedtuples ] ) .    however , @xmath547-allowed set contains only @xmath547-allowed tuples .",
    "hence , @xmath571 , i.e. @xmath563 .",
    "@xmath135    next lemma shows that @xmath506-minimal sets can be computed algorithmically .",
    "its proof also shows that a finite @xmath506-minimal set always exists .",
    "[ lem : xdminimal ] assume that a system of notations for @xmath490 $ ] is given .",
    "there is an algorithm @xmath572 which receives @xmath413 $ ] and @xmath573 $ ] and returns a @xmath506-minimal set .",
    "* we use an auxiliary procedure @xmath574 .",
    "it receives numbers @xmath575 and an @xmath506-minimal set @xmath545 and returns the smallest @xmath576 such that @xmath577 and @xmath578 for some @xmath404 .",
    "both @xmath579 and @xmath580 use a constant @xmath581 .",
    "@xmath581 is defined as the largest number in @xmath490 $ ] such that @xmath582 .",
    "equivalently , @xmath581 is the number in @xmath490 $ ] with the smallest @xmath583 such that @xmath582 .",
    "@xmath584 denotes @xmath585 .",
    "_ algorithm _",
    "@xmath574 :    1 .   let @xmath586 ; 2",
    ".   for each @xmath563 do : 1 .   for each @xmath464 : 1 .",
    "find @xmath587 \\mbox { and } p < p_j\\}$ ] , using the given system of notations for @xmath392 $ ] .",
    "2 .   @xmath588 .",
    "if @xmath589 , then @xmath590 .",
    "2 .   @xmath591 ; if @xmath592 , then @xmath593 .",
    "3 .   return @xmath576 as the result ;    _ algorithm _",
    "@xmath572    1 .   let @xmath594 ; 2 .",
    "if @xmath595 , return the empty set as the result ; 3 .   let @xmath102 be the smallest number in @xmath392 $ ] such that @xmath596 .",
    "4 .   while ( @xmath597 ) do : 1 .   @xmath598 ; 2 .",
    "@xmath599 ; 3 .",
    "if @xmath600 , add @xmath601 to @xmath545 .",
    "otherwise , for each @xmath602 , add @xmath603 to @xmath545 ; 4 .",
    "replace @xmath102 by a greater element of @xmath490 $ ] : 1 .",
    "if @xmath102 is a successor element , replace @xmath102 by @xmath604 , using the given system of notations for @xmath392 $ ] ; 2 .   if @xmath102 is a limit element , replace @xmath102 by @xmath605 where @xmath605 is the smallest element of @xmath490 $ ] such that @xmath606 5 .",
    "return @xmath545 .",
    "_ proof of correctness for @xmath572 .",
    "_ we prove the correctness by induction over @xmath607 .",
    "_ base case .",
    "_ @xmath608 .",
    "then , @xmath609 for any @xmath102 .",
    "hence , @xmath610 for any @xmath539 and there are no @xmath506-allowed tuples . in this case , the algorithm returns the empty set .",
    "hence , it works correctly .",
    "_ inductive case .",
    "_ we assume that the lemma holds for @xmath611 and prove it for @xmath612 .",
    "we use    [ recursivecall ] if @xmath572 calls @xmath613 , then @xmath614    * proof . * from the description of @xmath580 we have @xmath598 . by definition of @xmath581 and @xmath584 , @xmath609 and @xmath614 .",
    "@xmath135    hence , @xmath572 calls only @xmath613 with @xmath615 .",
    "the correctness @xmath613 for such values follows from the inductive assumption .",
    "first , we prove that the computation of @xmath572 always terminates .",
    "each @xmath613 called by @xmath572 terminates because @xmath613 is correct .",
    "hence , each while loop terminates and , if @xmath572 does not stop then while loop is executed infinitely many times .",
    "let @xmath616 be the value of @xmath102 during the @xmath617-th execution of while loop .",
    "@xmath102 is increased at the end of each while loop .",
    "hence , @xmath618 .",
    "@xmath619 , y_2\\in { { \\cal a}}\\cap [ r_i , 1 ] , \\ldots$ ] .",
    "if while loop is executed infinitely many times , then @xmath620 is an infinite monotonically increasing sequence .",
    "however , @xmath490 $ ] does not contain such sequences because it is well - ordered .    hence , while loop is executed finitely many times and @xmath572 terminates .",
    "let @xmath621 .",
    "next , we prove that @xmath545 is a @xmath506-minimal set .    for",
    "a contradiction , assume that it is not .",
    "then , there exists an @xmath506-allowed tuple @xmath539 such that @xmath545 does not contain any tuple that is less than or equal to @xmath539 .",
    "we assume that @xmath622 is not @xmath506-allowed for any @xmath623 $ ] satisfying @xmath624 .",
    "( otherwise , we can replace @xmath0 by the smallest @xmath623 $ ] such that @xmath622 is @xmath506-allowed . )",
    "consider two cases :    1 .   in @xmath572 , while loop is executed with @xmath625 .",
    "+ denote @xmath626 .",
    "the tuple @xmath627 is @xmath628-allowed .",
    "+ @xmath572 calls @xmath613 .",
    "@xmath613 works correctly , i.e. returns an @xmath628-minimal set @xmath629 .",
    "hence , @xmath629 contains a tuple @xmath630 that is less than or equal to @xmath627 .",
    "+ @xmath572 adds @xmath631 to @xmath545 because @xmath630 belongs to the set returned by @xmath613 .",
    "hence , @xmath545 contains the tuple @xmath631 that is less than or equal to @xmath632 . a contradiction .",
    "2 .   while loop is not executed with @xmath625 .",
    "+ let @xmath485 be the greatest number such that @xmath633 and while loop is executed with @xmath634 .",
    "let @xmath486 be the number by which @xmath486 is replaced in the end of while loop .",
    "+ @xmath67 because @xmath102 is always replaced by a greater number . by definition of @xmath485 , @xmath635 .",
    "( otherwise @xmath486 would have been instead of @xmath485 . ) 1 .",
    "@xmath485 is a successor element .",
    "+ then , @xmath485 , @xmath486 , @xmath0 all belong to @xmath147 and @xmath636 .",
    "when @xmath572 replaces @xmath485 by a greater element of @xmath147 , it chooses the smallest element of @xmath147 that is greater than @xmath485 .",
    "it can be @xmath0 or some number between @xmath485 and @xmath0 but not @xmath486 . a contradiction .",
    "2 .   @xmath485 is a limit element .",
    "+ we assumed that @xmath622 is not @xmath506-allowed for any @xmath623 $ ] satisfying @xmath624 .",
    "hence , @xmath637 is not @xmath506-allowed i.e. @xmath638 @xmath639 hence , @xmath640 where @xmath629 is the @xmath628-minimal set obtained by @xmath613 .",
    "however , @xmath641 because @xmath632 is @xmath506-allowed .",
    "hence , @xmath642 by the definition , @xmath486 is the smallest number such that @xmath643 this implies @xmath644 .",
    "a contradiction with @xmath635 .",
    "@xmath135      we show how to extend a system of notations @xmath112 from @xmath645 $ ] to @xmath646 $ ] .",
    "below , we give the algorithms computing @xmath105 , @xmath108 and @xmath110 for @xmath647 $ ] .",
    "these algorithms use the procedure @xmath572 defined in the previous subsection .",
    "they also use the system @xmath112 for @xmath645 $ ] .    _",
    "function @xmath105 .",
    "_    1 .   use the system for @xmath648 $ ] to find whether @xmath443 for some @xmath649 $ ] .",
    "if yes , then @xmath109 .",
    "2 .   otherwise , find the segments @xmath396 $ ] and @xmath387 $ ] containing @xmath98 . if @xmath455 or @xmath527 , then @xmath109 .",
    "3 .   otherwise , find an @xmath547-minimal set @xmath545 using @xmath650 .",
    "if there exists @xmath563 such that @xmath98 is generated by an application of the rule [ rule ] to @xmath203 and at least one of @xmath203 is a limit element , then @xmath109 .",
    "5 .   otherwise ,",
    "if there exists @xmath563 such that @xmath98 is generated by an application of the rule [ rule ] to @xmath203 , then @xmath107 . 6 .",
    "otherwise , @xmath651 .    _",
    "function @xmath108 . _    1 .   find the interval @xmath387 $ ] containing @xmath98 .",
    "execute @xmath650 and find a @xmath547-minimal set .",
    "2 .   let @xmath629 be the set consisting of all tuples @xmath539 such that 1 .",
    "@xmath563 or 2 .",
    "@xmath652 and @xmath653 for some @xmath464 or 3 .",
    "@xmath654 for some @xmath464 and @xmath655 $ ] .",
    "3 .   for each tuple @xmath602 find the number @xmath389 generated by an application of the rule [ rule ] to @xmath203 .",
    "+ @xmath108 is the smallest of those @xmath39 which are greater than @xmath98 .    _",
    "function @xmath110 . _    1 .",
    "if @xmath443 , @xmath649 $ ] and @xmath39 is a limit element , @xmath110 is a program computing @xmath656 , @xmath657 , @xmath7 .",
    "2 .   if @xmath443 , @xmath649 $ ] and @xmath39 is a successor element , find @xmath658 .",
    "@xmath110 is a program computing the sequence @xmath659 , @xmath660 , @xmath7 corresponding to @xmath396 $ ] .",
    "3 .   otherwise ,",
    "search the set @xmath545 returned by @xmath650 and find @xmath661 $ ] , @xmath7 , @xmath662 $ ] such that @xmath98 is generated by an application of the rule [ rule ] to @xmath203 and @xmath512 is a limit element .",
    "+ @xmath110 is a program computing the sequence @xmath504 , @xmath505 , @xmath7 where @xmath513 is generated by an application of the rule [ rule ] to @xmath0 , @xmath7 , @xmath514 , @xmath663 , @xmath516 , @xmath7 , @xmath517 .",
    "[ lem : system ] @xmath112 is a system of notations for @xmath664 $ ] .",
    "* by transfinite induction over @xmath401",
    ".    _ base case .",
    "_ @xmath112 is a correct system of notations for @xmath645 $ ] .",
    "_ inductive case .",
    "_ let @xmath665 .",
    "we assume that @xmath112 is correct for all @xmath666 $ ] with @xmath667 and @xmath668 and prove that it is correct for @xmath669 $ ] .",
    "we consider two cases :    1 .",
    "@xmath670 and @xmath649 $ ] .",
    "+ similarly to the proof of lemma [ an ] , @xmath102 is a limit of a sequence consisting of elements of @xmath401 .",
    "hence , if @xmath671 , then @xmath672 where @xmath605 is some element of this sequence .",
    "the functions @xmath105 , @xmath108 , @xmath110 are correct because @xmath112 is correct for @xmath666 $ ] ( by inductive assumption ) .",
    "it remains to prove the correctness of @xmath105 , @xmath108 , @xmath110 for @xmath673 .",
    "+ @xmath674 .",
    "this is correct because , by lemma [ an ] , @xmath102 is a limit element .",
    "the function @xmath108 is defined only for successor elements .",
    "hence , we do not need to check its correctness for the limit element @xmath102 .",
    "the correctness of the sequence computed by @xmath675 is proved in the proof of lemma [ an ] .",
    "2 .   @xmath676 for @xmath456 . in this case",
    ", we assume that @xmath112 is correct for @xmath490 $ ] and prove the correctness for @xmath677 $ ] .",
    "+ by lemma [ lem : xdminimal ] , @xmath572 returns an @xmath506-minimal set if it has access to a system of notations for @xmath490 $ ] .",
    "we know that @xmath112 is correct for @xmath490 $ ] .",
    "hence , the set @xmath545 returned by @xmath650 is @xmath547-minimal .",
    "1 .   proof of correctness for @xmath678 .",
    "+ if @xmath427 $ ] , then @xmath403 follows from @xmath679 and the rule [ rule ] , for some @xmath203 . by lemma [ p1second ] , @xmath680 , \\ldots , p_s\\in { { \\cal a}}\\cap[r_i,1]$ ] . by lemma [ exactcombination ]",
    ", @xmath539 belongs to @xmath545 .",
    "+ correctness of @xmath681 implies that , if @xmath403 , the algorithm computing @xmath678 finds @xmath203 such that @xmath389 follows from @xmath679 and the rule [ rule ] .",
    "hence , it distinguishes @xmath403 and @xmath682 correctly . by lemma [ limit ] , it distinguishes limit and successor elements correctly .",
    "2 .   proof of correctness for @xmath683 .",
    "+ we prove that @xmath108 returns the element of @xmath677 $ ] immediately preceding @xmath98 i.e. @xmath684)(x < z",
    "\\rightarrow p_s(x)\\leq z)$ ] . + let @xmath685 $ ] and @xmath686 .",
    "consider @xmath203 that generate @xmath687 by rule [ rule ] .",
    "+ @xmath545 contains a tuple @xmath542 such that @xmath565 ( lemma [ minimalsetlemma ] ) .",
    "an application of the rule [ rule ] to @xmath688 generates @xmath389 with @xmath548 ( lemma [ allowedtuples ] ) .",
    "consider two cases : 1 .",
    "+ the algorithm computing @xmath683 adds @xmath542 to the set @xmath629 .",
    "later , it sets @xmath108 equal to a number that is less or equal to @xmath39 .",
    "( this is true because @xmath690 and @xmath688 generates @xmath689 .",
    "the algorithm selects @xmath108 as the smallest of all @xmath39 satisfying these conditions . )",
    "+ by lemma [ monotonicity ] , @xmath691 .",
    "hence , @xmath692 .",
    "2 .   @xmath693 + if @xmath694 , @xmath7 , @xmath695 then @xmath696 .",
    "however , @xmath697 . hence , @xmath698 for some @xmath128 .",
    "let @xmath699 .",
    "we have @xmath700 because @xmath701 is the smallest element of @xmath147 that is greater than @xmath702 .",
    "let @xmath39 denote the number generated by the rule [ rule ] from @xmath703 , @xmath704 , @xmath705 .",
    "+ by lemma [ monotonicity ] , @xmath131 .",
    "hence , the algorithm for @xmath108 adds @xmath706 , @xmath704 , @xmath707 to the set @xmath629 and , then , checking tuples in @xmath629 , sets @xmath108 equal to a number which is greater than or equal to @xmath39 .",
    "this implies @xmath124 .",
    "+ from @xmath560 , @xmath7 , @xmath708 , @xmath700 , @xmath709 , @xmath7 , @xmath561 it follows that @xmath691 ( lemma [ monotonicity ] ) . hence , @xmath692 .",
    "+ so , in both cases @xmath108 is less than or equal to any @xmath687 satisfying @xmath686 . on the other hand , @xmath710 and @xmath711 .",
    "( it can be seen from the algorithm computing @xmath683 . ) + hence , @xmath108 is the smallest element of @xmath147 satisfying @xmath711 , i.e. the algorithm computes @xmath683 correctly .",
    "3 .   proof of correctness for @xmath712 .",
    "+ we already proved that , if there exist @xmath203 such that @xmath403 follows from @xmath679 , then such combination is found by @xmath650 ( see proof of correctness for @xmath678 ) .",
    "if there exists such a combination with one of @xmath203 being limit element , it is found .",
    "the algorithm computing @xmath712 generates a program computing required sequence from such combination correctly .",
    "the correctness of @xmath112 for @xmath713 $ ] follows by transfinite induction .",
    "@xmath135    by lemmas [ inductionstep ] and [ lem : system ] , @xmath713 $ ] is well - ordered and has a system of notations for any @xmath297 .",
    "hence , @xmath147 is well - ordered and has a system of notations .",
    "this completes the proof of theorem [ basic ] . @xmath135",
    "[ mainsimulation ] for any @xmath389 there exists @xmath322 such that @xmath714\\pfin$ ] for all @xmath98 which are greater than any @xmath715 .",
    "there exists an algorithm which receives a probabilistic machine @xmath14 and a probability @xmath98 and outputs a team @xmath716 which identifies the same set of functions .",
    "* by transfinite induction",
    ".    _ base case .",
    "_ for @xmath717 , the theorem follows from the results of @xcite .",
    "_ inductive case .",
    "_ we assume that the theorem is true for all @xmath389 such that @xmath718 and prove it for @xmath719 .",
    "let @xmath720 be the largest element of @xmath147 for which @xmath721 .",
    "@xmath720 is always a successor element .",
    "( if it was a limit element , let @xmath722 be a decreasing sequence that converges to @xmath720 .",
    "for some element @xmath190 in this sequence , @xmath723 , implying that @xmath720 is not the largest element with this property . )",
    "let @xmath724 be the predecessor of @xmath720 .",
    "let @xmath545 be a @xmath547-minimal set ( see section [ subsub : xdminimal ] ) .",
    "let @xmath725 be the set of all @xmath39 that appear in some tuple in the set @xmath545 .",
    "we define two functions @xmath726 and @xmath727 , for @xmath728 $ ] . to define @xmath726 ,",
    "let @xmath102 be the smallest element of @xmath147 which is at least @xmath729 .",
    "if @xmath730 , we define @xmath731",
    ". otherwise , let @xmath605 be the largest element of @xmath725 satisfying @xmath732 .",
    "let @xmath726 be the solution to @xmath733 .",
    "( equivalently , @xmath734 . )",
    "to define @xmath727 , let @xmath735 be the set of all tuples @xmath736 such that @xmath737 , @xmath738 .",
    "then , @xmath739    in the simulation algorithm for @xmath719 , we use several simulation algorithms for @xmath718 as subroutines .",
    "namely , we use :    1 .   a simulation algorithm for @xmath740 .",
    "simulation algorithms for all @xmath741 .",
    "the existence of these simulation algorithms is implied by the assumption that theorem [ mainsimulation ] holds for @xmath718 .",
    "a @xmath742\\pfin$]-team @xmath743 simulates a probabilistic @xmath744-machine @xmath14 as follows :",
    "@xmath716 read @xmath5 , @xmath6 , @xmath7 , simulate @xmath14 and wait until the probability that @xmath14 has issued a conjecture reaches @xmath98 . then @xmath745 machines ( @xmath746 )",
    "issue conjectures @xmath747 .",
    "2 .   the first values of the functions computed by @xmath748 , @xmath7 , @xmath749 are identical to the values of @xmath4 , i.e. @xmath750 for @xmath751 where @xmath752 is the last value of @xmath4 read by @xmath753 before issuing conjectures .",
    "the next values of these functions are computed as follows : + let @xmath754 .",
    "let @xmath755 .",
    "we repeat the following sequence of operations . for each segment @xmath756 in @xmath156",
    ": 1 .   find all conjectures of @xmath14 ( among ones issued until the probability reached @xmath98 ) that output @xmath757 .",
    "run each of those conjectures on input @xmath297 .",
    "let @xmath758 be the values that are output by at least one of conjectures .",
    "for @xmath94 , let @xmath534 be the total probability of @xmath14 s conjectures outputting @xmath759 .",
    "the programs @xmath747 output the next value as follows . out of those programs , which have output the segment @xmath760 , @xmath761 output @xmath762 , @xmath763 output @xmath764 and so on",
    ". if the number of programs that have output the segment @xmath765 is larger than @xmath766 , the remaining programs are not necessary for the further steps .",
    "make them output @xmath767 , to ensure that every program computes a total function .",
    "[ splitting ] the programs which have output @xmath759 then simulate the machine @xmath14 on input @xmath768 . if the total probability of @xmath14 issuing a conjecture consistent with @xmath768 reaches @xmath98 , invoke the simulation algorithm for simulating a probabilistic machine with the success probability @xmath769 by a team of @xmath770 machines , @xmath771 of which have to be successful .",
    "let @xmath772 of @xmath773 programs which have output @xmath768 simulate the simulate the first @xmath772 machines in this simulation . if @xmath774 , make the remaining @xmath775 programs output @xmath776 .",
    "3 .   otherwise ( if the probability of @xmath14 issuing a conjecture consistent with @xmath768 does not reach @xmath98 ) , add @xmath777 to the set @xmath156 .",
    "+ after the previous three steps have been done for every segment @xmath778 , increase @xmath297 by 1 and repeat .",
    "after @xmath779 have issued conjectures , all remaining machines in the team @xmath753 read the next values of the input function and simulate the conjectures issued by the probabilistic machine @xmath14 before conjectures of @xmath779 .",
    "they wait until the step [ splitting ] happens , for a segment @xmath768 consistent with the input .",
    "then , @xmath780 , @xmath7 , @xmath781 ( i.e. all machines which have not issued conjectures yet ) participate in one of two simulations : 1 .   [ large ] if @xmath782 , they , together with @xmath772 of programs @xmath783 , form an @xmath784 $ ] team .",
    "this team simulates a probabilistic machine @xmath15 according to the algorithm for @xmath785 .",
    "( note that , by the definition of @xmath786 , @xmath741 . )",
    "+ the machine @xmath15 is defined as follows .",
    "it reads @xmath5 , @xmath7 , @xmath787 and then simulates @xmath14 .",
    "if , while reading @xmath5 , @xmath7 , @xmath787 , @xmath14 outputs a conjecture inconsistent with the segment @xmath5 , @xmath7 , @xmath787 , @xmath15 restarts the simulation of @xmath14 . if @xmath14 outputs a conjecture consistent with @xmath5 , @xmath7 , @xmath787 , @xmath15 outputs this conjecture as well . if @xmath14 outputs no conjecture while reading @xmath5 , @xmath7 , @xmath787 , @xmath15 proceeds to read the next values of @xmath4 and keeps simulating @xmath14 .",
    "[ small ] if @xmath788 , they form an @xmath789 $ ] team and simulate the probabilistic machine @xmath15 , defined as above , according to the algorithm for @xmath740 .",
    "_ proof of correctness .",
    "_ we need to show two statements .    * when we use an @xmath784 $ ] or an @xmath789 $ ] team to simulate a probabilistic machine , the team is able to perform the simulation . * for a segment @xmath790 , the sum of numbers @xmath773 of programs @xmath747 asked to output various extensions @xmath791 of this segment is never more than the number of program which have output the segment @xmath792 .",
    "we start with the first statement .",
    "we consider two cases .",
    "1 .   case [ large ] .",
    "+ here , we use @xmath793 programs and @xmath794 machines @xmath780 , @xmath7 , @xmath795 to simulate @xmath14 on functions with the given @xmath768 according to the algorithm for @xmath796 .",
    "+ the success probability for @xmath15 is at least @xmath797 , since @xmath14 succeeds with probability at least @xmath98 and the probability that @xmath14 outputs a conjecture inconsistent with @xmath768 is @xmath798 .",
    "let @xmath102 and @xmath605 be as in the definition of @xmath799 .",
    "then , @xmath797 is greater than any @xmath800 .",
    "since @xmath801 , @xmath797 is also greater than any @xmath802 .",
    "therefore , by inductive assumption , it can be simulated by an @xmath803 $ ] team , for some @xmath804 . since @xmath805",
    ", a @xmath806 $ ] team can do this task , as long as @xmath322 is appropriately chosen .",
    "case [ small ] .",
    "+ here , we use @xmath794 machines @xmath780 , @xmath7 , @xmath795 to simulate @xmath14 on functions with the given @xmath768 according to the algorithm for @xmath740 .",
    "+ the success probability for @xmath15 is at least @xmath797 , by the same argument as before .",
    "since @xmath788 , this is more than any @xmath807 . by inductive assumption ,",
    "this means @xmath15 can be simulated by an @xmath808 $ ] team , for some @xmath804 .",
    "we will choose @xmath322 so that @xmath809",
    ". then , @xmath15 can be simulated by an @xmath810 $ ] team .",
    "it remains to prove that this simulation yields at least @xmath771 correct programs .",
    "this is equivalent to @xmath811 .",
    "+ if @xmath812 , then @xmath813 would belong to the interval @xmath814 , contradicting the assumption that this interval does not contain any elements of @xmath147 .",
    "therefore , @xmath815 and @xmath816 .",
    "next , we show that the programs output by @xmath817 , @xmath7 , @xmath818 are sufficient to conduct the necessary simulations .",
    "let @xmath819 be an initial segment , output by @xmath14 with probability @xmath35 and let @xmath820 be the probabilities of its possible extensions @xmath821 .",
    "then , the number of programs @xmath748 , @xmath7 , @xmath749 outputting the segment @xmath760 is @xmath745 if @xmath754 and @xmath822 if @xmath823 .",
    "the number of programs outputting its extensions @xmath824 is @xmath761 , @xmath7 , @xmath825 .    for the @xmath823 case",
    ", it suffices to show that @xmath826 , whenever @xmath827 .",
    "the @xmath754 case follows from the @xmath823 case , once we prove @xmath828 .",
    "we now proceed to show those two results .    if @xmath827 , then @xmath826 .    * proof . *",
    "immediate from the definition of @xmath829",
    ". @xmath135    @xmath828    * proof .",
    "* we need to prove that @xmath830 , whenever @xmath831 and @xmath832 .",
    "let @xmath833 be the value of @xmath605 in the calculation of @xmath799 .",
    "we claim that the tuple @xmath834 is @xmath547-allowed . to prove that , we need to show @xmath835 . this is true because , @xmath836 and , therefore @xmath837 implying @xmath838 .",
    "since the tuple is @xmath547 allowed , applying rule 2 to it generates @xmath548 .",
    "since @xmath581 is the smallest element of @xmath147 satisfying @xmath839 , this also means @xmath840 .    consider the application of rule 2 to @xmath841 .",
    "consider the values of @xmath842 in this application .",
    "we have @xmath843 which is equivalent to @xmath844 .",
    "since @xmath840 , we have @xmath845 summing over all @xmath128 gives @xmath846 since @xmath847 , we have @xmath848 and the equation above is at most @xmath849 .",
    "this proves the lemma .",
    "@xmath135    _ the size of @xmath753 .",
    "_ we show how to select the size of the team @xmath753 so that be it will able to perform all described simulations .",
    "two conditions must be satisfied :    1 .   when the machines of the team split , the amount of machines saying that @xmath850 must be integer for any @xmath851 i.e. , @xmath852 must be integer in all cases .",
    "2 .   when the simulation algorithm for the success ratio @xmath581 uses another simulation algorithm ( with the ratio of successful machines @xmath853 ) , a certain team size @xmath804 is required for simulation with @xmath854\\pfin$]-team .",
    "the amount of machines participating in this simulation ( when it is used as the subroutine of the simulation for the ratio @xmath581 ) must be multiple of @xmath804 .",
    "for the first condition , notice that @xmath822 is , by definition , a sum of @xmath855 for smaller @xmath35 .",
    "therefore , it suffices to choose @xmath322 so that @xmath855 is an integer . by definition , @xmath734 where @xmath605 is belongs to a finite set @xmath725 .",
    "since @xmath856 and @xmath147 is the subset of rational numbers ( section [ subsection1 ] ) , this means that @xmath322 must be chosen so that @xmath855 is an integer for finitely many rationals @xmath726 .",
    "each of those requirements is equivalent to requiring that the denominator of @xmath726 divides @xmath322 .",
    "the second condition is equivalent to :    1 .   for all @xmath857 , the team size @xmath858 must be a multiple of @xmath859 where @xmath859 is the size of the team with the success ratio @xmath860 .",
    "2 .   @xmath861 must be a multiple of @xmath862 , the size of the simulation team with the success ratio @xmath720 .",
    "overall , we have finitely many requirements .",
    "each of them requires that the team size is a multiple of some finite number of integers @xmath863 .",
    "if we select the size @xmath322 so , the simulation algorithm will be able to perform all required simulations .",
    "@xmath135    theorem [ mainsimulation ] implies    [ part2 ] let @xmath864 $ ] and @xmath60 .",
    "if there is no @xmath389 satisfying @xmath865 , then @xmath866    * proof . * any machine which succeeds with probability @xmath102 , succeeds with probability @xmath60 , too .",
    "hence , it suffices to prove that any machine with the probability of success @xmath98 can be simulated by a machine with the probability of success @xmath102 , i.e. @xmath867    let @xmath39 be the smallest element of @xmath147 which is greater than @xmath98 .",
    "theorem [ mainsimulation ] implies @xmath868 \\pfin \\subseteq \\pfin\\langle p\\rangle.\\ ] ] we have @xmath869 and , hence , @xmath870",
    "@xmath871 @xmath135    so , if theorem [ part1 ] does not prove that the power of learning machines with probabilities @xmath98 and @xmath102 is different , then these probabilities are equivalent . hence ,    [ capabilitytype ] @xmath147 is the probability hierarchy for probabilistic @xmath2-type learning in the range @xmath872 $ ] .",
    "* follows from theorem [ part1 ] and corollary [ part2 ] .",
    "@xmath135    theorem [ capabilitytype ] has a following important corollary .",
    "[ decidability ] probabilistic @xmath2-type learning probability structure is decidable i.e. there is an algorithm that receives as input two probabilities @xmath0 and @xmath1 and computes whether @xmath873 .",
    "* use the algorithm of lemma [ findinterval ] to find the intervals @xmath874 $ ] and @xmath875 $ ] . if these two intervals are equal , @xmath873 .",
    "otherwise , @xmath876 .",
    "from theorem [ basic ] we know that @xmath2-type probability hierarchy is well - ordered .",
    "a question appears : what is the ordering type of this hierarchy ? to what particular ordinal is it order - isomorphic ?",
    "we analyze the proof of theorem [ basic ] step by step .",
    "let @xmath877 denote the ordering type of @xmath878x , 1]$ ] for @xmath879 and the ordering type of @xmath880 $ ] for @xmath881 .",
    "if @xmath882 , then @xmath883 because @xmath878x , 1]\\subseteq { { \\cal a}}\\cap]y , 1]$ ] . we will often use this inequality .",
    "[ lem : relat0 ] @xmath884 .    * proof .",
    "* @xmath878\\frac{1}{2 } , 1]$ ] consists of a single sequence @xmath137 , @xmath885 , @xmath886 , @xmath7@xcite .",
    "@xmath135    first , we prove lower bounds on the ordering type of @xmath147 .",
    "@xmath887 is the largest ordinal @xmath56 such that there is an @xmath888-sequence in @xmath878p , 1]$ ] which converges to @xmath39 .",
    "we define @xmath889 if there is no such sequence for any @xmath56 .",
    "it is easy to see that @xmath890 .",
    "however , there may be a large gap between these two ordinals .",
    "for example , if @xmath878p , 1]$ ] has the ordering type @xmath891 , there is no infinite monotonic sequence converging to @xmath39 and @xmath889 .",
    "we use the function @xmath892 to prove lower bounds .",
    "[ lem : relat1 ] @xmath893    * proof . * transfinite induction over @xmath389 .    _ base case .",
    "_ let @xmath290 .",
    "the ordering type of @xmath894=\\{1 \\}$ ] is @xmath137 .",
    "the ordering type of @xmath8781/2 , 1]$ ] is @xmath49 and @xmath895 .",
    "_ inductive case .",
    "_ consider two cases :    1 .",
    "@xmath39 is a successor element .",
    "+ let @xmath896 $ ] .",
    "let @xmath35 denote the element immediately preceding @xmath39 .",
    "we have @xmath897 because @xmath39 is the only element of @xmath898 $ ] which does not belong to @xmath899 $ ] . by inductive assumption , @xmath900 .",
    "+ consider the splitting of @xmath386 $ ] in the proof of theorem [ basic ] ( subsection [ subsub : split ] ) .",
    "in the first step , one of segments is @xmath396 $ ] because @xmath901 $ ] does not contain other elements of @xmath147 .",
    "we consider the sequence @xmath659 , @xmath660 , @xmath7 corresponding to @xmath396 $ ] .",
    "+ [ lem : relat2 ] @xmath902 .",
    "+ * proof .",
    "* by induction",
    ". + _ base case . _",
    "let @xmath528 .",
    "then , @xmath453 and @xmath903 .",
    "+ _ inductive case . _",
    "we prove @xmath904 .",
    "then @xmath905 follows from @xmath906 .",
    "we use + [ lem : omegainitial ] if a set is obtained from @xmath888 by removing a proper initial segment , it still has ordering type @xmath888 . + * proof . *",
    "if we remove a segment with ordering type @xmath57 , we obtain the set with ordering type @xmath907 ( definition [ def : substr ] ) .",
    "we have @xmath908 for all @xmath909 .",
    "@xmath135 + let @xmath910 @xmath911 maps @xmath403 to the number generated from @xmath98 and @xmath39 by rule [ rule](lemma [ formula ] ) .",
    "let @xmath912 be such that @xmath913 .",
    "the function @xmath4 maps @xmath914 to @xmath915 .",
    "( @xmath916 by the definition of @xmath531 . )",
    "+ we take an @xmath917 sequence converging to @xmath534 and remove all @xmath918 from it .",
    "the ordering type of the remaining sequence is still @xmath917 ( claim [ lem : omegainitial ] ) . @xmath4",
    "maps it to a sequence converging to @xmath531 and preserves the ordering . hence , @xmath905 .",
    "@xmath135 + we take the union of @xmath917 sequences converging to @xmath659 , @xmath660 , @xmath7 and obtain a @xmath919 sequence converging to @xmath920 . hence , @xmath921 .",
    "2 .   @xmath39 is a limit element .",
    "+ let @xmath922 be a decreasing sequence converging to @xmath39 . then , @xmath923 .",
    "+ we take the union of @xmath924 sequences converging to @xmath925 .",
    "it has the ordering type @xmath926 and converges to @xmath394 .",
    "hence , @xmath927 .",
    "@xmath135    [ lem : relat1a ] @xmath928 .    * proof .",
    "* follows from lemma [ lem : relat1 ] and @xmath929 . @xmath135    the upper bound proof is more complicated .",
    "we prove a counterpart of lemma [ lem : relat1a ] .",
    "[ lem : upper1 ] @xmath930 .    * proof . * transfinite induction over @xmath389 .    _ base case .",
    "_ let @xmath290 .",
    "the ordering type of @xmath894 $ ] is @xmath137 and the ordering type of @xmath931 $ ] is @xmath49 .    _",
    "inductive case .",
    "_ consider two cases :    1 .",
    "@xmath39 is a successor element .",
    "+ let @xmath35 be the element immediately preceding @xmath39 .",
    "we split the interval @xmath396 $ ] into subintervals @xmath399 $ ] , @xmath400 $ ] , @xmath7 , as in section [ subsub : split ] .",
    "+ [ lem : upper2 ] @xmath932 for some @xmath933 . + * proof . * by induction .",
    "+ _ base case .",
    "_ if @xmath528 , @xmath453 and @xmath934 by inductive assumption .",
    "+ _ inductive case .",
    "_ let @xmath545 be a @xmath935-minimal set ( section [ subsub : xdminimal ] ) .",
    "let @xmath936 denote the set of all @xmath937r_{i+1 } , r_i]$ ] generated by applications of the rule [ rule ] to @xmath567 , @xmath7 , @xmath568 such that @xmath543 , @xmath7 , @xmath544 .",
    "@xmath938 denotes the ordering type of @xmath936 .",
    "+ [ lem : upperpart1 ] @xmath939 + * proof . * we have @xmath940r_{i+1 } , 1]=({{\\cal a}}\\cap]r_i , 1 ] ) \\cup \\bigcup_{\\langle p_1 , \\ldots , p_s\\rangle\\in p}a(p_1 , \\ldots , p_s ) .\\ ] ] by lemma [ lem : ord1 ] , the ordering type of @xmath878r_{i+1 } , 1]$ ] is less than or equal to the natural sum of the ordering types of @xmath878r_i , 1]$ ] and all @xmath936 . @xmath135",
    "+ next , we bound each @xmath938 .",
    "we start with an auxiliary lemma .",
    "+ [ lem : upperaux ] if @xmath389 follows from an application of the rule [ rule ] to @xmath941 , @xmath7 , @xmath942 , then @xmath943 + * proof .",
    "* without the loss of generality , we assume that @xmath944 .",
    "then , @xmath945 . we prove the lemma by transfinite induction over @xmath0 .",
    "+ _ base case .",
    "_ @xmath0 is the maximum element , i.e. @xmath946 . + then , @xmath947 .",
    "an application of the rule [ rule ] to @xmath0 , @xmath7 , @xmath517 generates @xmath948 .",
    "@xmath949= \\left\\{\\frac{s}{2s-1 } , \\frac{s-1}{2s-3 } , \\ldots , \\frac{2}{3 } , 1\\right\\}.\\ ] ] the ordering type of this set is @xmath304 , i.e. @xmath950 . on the other hand , @xmath951 and @xmath952 + _ inductive case .",
    "_ we have two possibilities : 1 .",
    "@xmath0 is a successor element .",
    "+ @xmath300 denotes the maximum number such that @xmath953 .",
    "let @xmath954 we have @xmath955 for @xmath956 and @xmath957 for @xmath958 .",
    "hence , @xmath959",
    "@xmath960 @xmath961 let @xmath912 be the number generated by an application of the rule [ rule ] to @xmath962 , @xmath7 , @xmath963 and @xmath133 , for @xmath964 , be the number generated by an application of the rule [ rule ] to @xmath0 , @xmath7 , @xmath965 , @xmath966 , @xmath7 , @xmath963 . by inductive assumption ,",
    "@xmath967 we have @xmath968 for @xmath956 . by lemma [ monotonicity ] , @xmath969 .",
    "hence , @xmath970 we have @xmath971 for @xmath958 . hence , @xmath972 and @xmath973 @xmath974 2 .",
    "@xmath0 is a limit element .",
    "+ again , @xmath300 is the maximum number such that @xmath953 .",
    "let @xmath975 be a monotonically decreasing sequence converging to @xmath0 . without the loss of generality",
    ", we can assume that all elements of @xmath975 are less than or equal to @xmath516 .",
    "( otherwise , just remove the elements that are larger than @xmath516 and use the sequence consisting of remaining elements . ) + let @xmath133 be the number generated by an application of the rule [ rule ] to @xmath976 , @xmath7 , @xmath976 , @xmath516 , @xmath7 , @xmath517 . by inductive assumption , @xmath977 we have @xmath978 . by lemma",
    "[ limits ] , @xmath979 .",
    "hence , if we take @xmath980 in ( [ eq:4.1 ] ) and apply the fact that @xmath981 is continuous , we get @xmath943 + @xmath135 + [ lem : upperpart2 ] let @xmath563 .",
    "then @xmath982 + * proof .",
    "* lemma [ lem : ord2 ] implies that @xmath938 is at most the natural product of @xmath983 , @xmath7 , @xmath984 .",
    "let @xmath985 be the largest ordinal such that @xmath986 .",
    "then , @xmath987 .",
    "( if there is no such @xmath988 , then @xmath989 and @xmath985 is not the largest ordinal with this property . ) hence , @xmath990 let @xmath702 be such that @xmath991 and @xmath992 .",
    "we have @xmath993 because @xmath994 where @xmath995 follows from @xmath996 .",
    "@xmath993 implies @xmath997 .",
    "therefore , both lemma [ lem : relat1 ] and lemma [ lem : upper1 ] are true for @xmath998 .",
    "this means that @xmath999 .",
    "hence , @xmath1000 because @xmath1001 .",
    "+ let @xmath860 be the number generated by an application of the rule [ rule ] to @xmath962 , @xmath7 , @xmath963 . by lemma [ lem : rule ] , @xmath1002 is generated by an application of the rule [ rule ] to @xmath1003 , @xmath7 , @xmath1004 .",
    "@xmath1002 is greater than or equal to the number generated by an application of rule [ rule ] to @xmath0 , @xmath7 , @xmath517 because @xmath1000 .",
    "this number is at least @xmath531 because the tuple @xmath539 belongs to the @xmath935-allowed set @xmath545 .",
    "hence , @xmath1005 .",
    "we have @xmath1006 because @xmath396 $ ] does not contain any points of type @xmath1002 with @xmath1007 .",
    "this implies @xmath1008 .",
    "+ by claim [ lem : upperaux ] , @xmath1009 this implies @xmath1010 @xmath1011 @xmath135 + now , we are ready to finish the proof of claim [ lem : upper2 ] . by claim [ lem :",
    "upperpart1 ] , @xmath1012 is less than or equal to the natural sum of @xmath1013 and @xmath938 .",
    "we have @xmath1014 by inductive assumption and @xmath1015 by claim [ lem : upperpart2 ] .",
    "hence , the natural sum of these ordinals is at most @xmath1016 , too .",
    "@xmath135 @xmath1017 2 .",
    "@xmath39 is a limit element .",
    "+ let @xmath922 be a decreasing sequence converging to @xmath39 . by inductive assumption , @xmath1018 .",
    "we have @xmath1019 @xmath135    [ lem : relat1b ] @xmath1020 .",
    "* follows from lemmas [ lem : relat1a ] and [ lem : upper1 ] . @xmath135    the ordering type of @xmath147 is at least @xmath3 .",
    "* proof . *",
    "the ordering type of @xmath1021 $ ] is @xmath49 ( lemma [ lem : relat0 ] ) .",
    "the ordering type of @xmath1022 $ ] is @xmath1023 ( lemma [ lem : relat1b ] with @xmath1024 ) , the ordering type of @xmath1025 $ ] @xmath1026 and so on .",
    "the ordering type of @xmath147 is the limit of this sequence , i.e. @xmath72 @xmath135    it is known that the ordinal @xmath3 expresses the set of all expressions possible in first - order arithmetic .",
    "we see that @xmath2 , a very simple learning criterion , generates a very complex probability hierarchy .",
    "the table below shows how the complexity of the hierarchy increases .",
    "all results in this table can be obtained using lemma [ lem : relat1b ] .    [",
    "cols=\"^,^\",options=\"header \" , ]     it shows that the known part of hierarchy ( @xmath18 $ ] ) is very simple compared to the entire hierarchy .    * notes . *",
    "the points of the probability hierarchy in the intervals @xmath1027 , [ \\frac{4}{9 } , 1]$ ] and @xmath18 $ ] were explicitly described in @xcite , @xcite and @xcite , respectively .    in @xcite ,",
    "an @xmath1028 sequence of points converging to @xmath1029 was presented and it was conjectured that this sequence forms the backbone of the learning capabilities in the interval @xmath1030 $ ] .",
    "for @xmath146-identification , there is a precise correspondence between probabilistic and team learners ( pitt s connection@xcite ) .",
    "any probabilistic learner can be simulated by any team with the ratio of successful machines equal to the probability of success for the probabilistic learner .",
    "however , the situation is more complicated for finite learning ( @xmath8 and @xmath2 ) .",
    "here , the learning power of a team depends not only on the ratio of successful machines .",
    "team size is also important .",
    "@xcite @xmath1031\\pfin \\subset [ 2 , 4]\\pfin$ ] .",
    "so , a team of 4 learning machines where 2 machines are required to be successful has more learning power than team of 2 learning machines where 1 must succeed .",
    "however , in both teams the ratio of successful machines to all machines is the same(@xmath9 ) .",
    "this phenomena is called _",
    "redundancy_. various redundancy types have been discovered for various ratios of successful machines @xcite .",
    "the theorem below is the example of infinite redundancy@xcite .",
    "[ infiniteredundancy ] @xcite it @xmath1032 , then @xmath1033\\pfin \\subset [ 8k , 20k]\\pfin .\\ ] ] in particular , @xmath1034\\pfin \\subset [ 8 , 20]\\pfin \\subset [ 32 , 80]\\pfin\\subset\\ldots.\\ ] ]    so , for the ratio of successful machines 2/5 there are infinitely many different team sizes with different learning power .",
    "however , even for @xmath2 , any probabilistic machine can be simulated by a team with the same ratio of success , if we choose the team size carefully .",
    "a simple corollary of theorem [ mainsimulation ] is    [ probabilisticteam ] if @xmath1035 , then there exists @xmath322 such that @xmath1036\\pfin .\\ ] ]    this shows that probabilistic @xmath2-learning and team @xmath2-learning are of the same power .    if @xmath1035 , then there exists @xmath322 such that @xmath1037\\pfin \\subseteq [ pk , qk]\\pfin\\ ] ] for any @xmath1038 .    * proof .",
    "* the team of @xmath1039 machines can be simulated by single probabilistic machine which equiprobably chooses one of machines in team and simulates it .",
    "hence , corollary [ probabilisticteam ] implies that @xmath1037\\pfin \\subseteq pfin\\langle \\frac{p}{q}\\rangle = [ pk , qk]\\pfin .\\ ] ] @xmath135    so , we see that redundancy structures can be very complicated but always there is the `` best '' team size such that team of this size can simulate any other team with the same ratio of successful machines .",
    "it exists even if there are infinitely many team sizes with different learning power ( like for ratio 2/5 , theorem [ infiniteredundancy ] ) .",
    "we have investigated the structure of probability hierarchy for @xmath2-type learning . instead of trying to determine the exact points at which the learning capabilities change , we focused on the structural properties of the hierarchy .    we have developed a universal diagonalization algorithm ( theorem [ part1 ] ) and a universal simulation algorithm ( theorem [ mainsimulation ] ) .",
    "these algorithms are very general forms of diagonalization and simulation arguments used for probabilistic @xmath2 @xcite .",
    "universal diagonalization theorem gives the method that can be used to obtain any possible diagonalization for probabilistic @xmath2 .",
    "universal simulation algorithm can be used for any possible simulation .",
    "this set is well - ordered in decreasing ordering .",
    "( this property is essential to the proof of theorem [ mainsimulation ] . )",
    "its structure is quite complicated .",
    "namely , its ordering type is @xmath3 , the ordering - type of the set of all expressions possible in first - order arithmetic .",
    "a simple corollary of our results is that the probabilistic and team @xmath2-type learning is of the same power , i.e. any probabilistic learning machine can be simulated by a team with the same success ratio .      1",
    ".   unrestricted finite learning(@xmath8 ) .",
    "+ the major open problem is the generalization of our results for other learning paradigms such as ( non - popperian ) @xmath8-type learning and language learning in the limit .",
    "+ theorem [ part1 ] can be proved for ( nonpopperian ) @xmath8-type learning , too . hence , if @xmath1040 then @xmath1041 so , the probability hierarchy of @xmath8 is at least as complicated as the probability hierarchy of @xmath2 . it is even more complicated because it is known@xcite that @xmath1042 but @xmath1043 + the simulation techniques for @xmath8 are much more complicated than simulation techniques for @xmath2 .",
    "however , we hope that some combination of our methods and other ideas ( e.g. @xcite ) can help to identify the set of all possible diagonalization methods for @xmath8 and to prove that no other diagonalization methods exists ( i.e. to construct universal simulation for @xmath8 ) . +",
    "a step in that direction was made in @xcite by proving that @xmath8-hierarchy is well - ordered and recursively enumerable .",
    "it still remains open whether it is decidable .",
    "the proof technique in @xcite is different from ours and uses capability trees@xcite .",
    "2 .   probabilistic language learning .",
    "+ the probability hierarchy of language learning in the limit@xcite has some similarities to @xmath8 and @xmath2-hierarchies . + it is an interesting open problem whether some analogues of our results can be obtained for language learning in the limit .",
    "3 .   what is the computational complexity of decision algorithms for @xmath2-hierarchy ?",
    "how dense is the probability hierarchy ?",
    "+ can we prove the result of the following type : + if @xmath1044 $ ] and @xmath1045 , then @xmath1046      * acknowledgments .",
    "* i would like to thank the referee for the valuable comments that helped to improve this paper .",
    "this research was done while the author was at the university of latvia and supported by latvian science council grants no.93.599 and no.96.0268 and fellowship `` swh izgltbai , zintnei un kultrai '' . extended abstract of this paper appeared on the 9th conference on computational learning theory , desenzano del garda , italy , 1996 .",
    "99 a. ambainis , _ the power of procrastination in inductive inference : how it depends on used ordinal notations .",
    "_ proceedings of the 2nd european conference on computational learning theory , lecture notes in computer science , 904:99 - 111 , 1995 .",
    "a. ambainis , probabilistic inductive inference : a survey .",
    "_ theoretical computer science _ , 264:155 - 167 , 2001 .",
    "a. ambainis , k. apstis , r. freivalds , c.h .",
    "smith , hierarchies of probabilistic and team fin - learning , _ theoretical computer science _ , 261:91 - 117 , 2001 . k.  apstis . .",
    "phd thesis , university of maryland , college park , 1998 .",
    "k. apstis , r. freivalds , c.h .",
    "smith , on duality in learning and the selection of learning teams . _ information and computation _ , 129:53 - 62 , 1996 .",
    "d. angluin , c.h .",
    "smith , inductive inference : theory and methods .",
    "computing surveys , 15:237 - 269 , 1983 .",
    "a. church , the constructive second number class .",
    "bulletin of american mathematical society , 44:224 - 232 , 1938 a. church , s. kleene , formal definitions in the theory of ordinal numbers .",
    ", 28:11 - 21 , 1937 r. daley , b. kalyanasundaram , _ use of reduction arguments in determining popperian fin - type learning capabilities .",
    "proceedings of the 4th international workshop on algorithmic learning theory , lecture notes in computer science , 744:173 - 186 , 1993 r. daley , b. kalyanasundaram , _ finite learning capabilities and their limits _ , proceedings of colt97 , pages 81 - 89 .",
    "full version available at http://www.cs.pitt.edu/  daley / fin / fin.html .",
    "r. daley , b. kalyanasundaram , m. velauthapillai , breaking the probability @xmath9 barrier in fin - type learning .",
    "journal of computer and system sciences , 25:574 - 599 , 1995 .",
    "r. daley , b. kalyanasundaram , m. velauthapillai , _ the power of probabilism in popperian finite learning .",
    "_ proceedings of the 3rd international workshop on analogical and inductive inference , lecture notes in computer science , 642:151 - 169 , 1992 .",
    "r. daley , l. pitt , m. velauthapillai , t. will _ relations between probabilistic and team one - shot learners . _",
    "proceedings of the 4th conference on computational learning theory , pp .",
    "228 - 239 , morgan - kaufmann , 1991 .",
    "r. freivalds , _ finite identification of general recursive functions by probabilistic strategies .",
    "_ proceedings of the conference on algebraic , arithmetic and categorical methods in computation theory , pp .",
    "138 - 145 .",
    "akademie - verlag , berlin , 1979 r. freivalds , c. h. smith , the role of procrastination in machine learning . _",
    "information and computation _",
    ", 107:237 - 271 , 1993 .",
    "e. m. gold , language identification in the limit .",
    "_ information and control _ , 10:447 - 477 , 1967 . s. jain , a.sharma , computational limits on team identification of languages . _ information and computation _ ,",
    "130:19 - 60 , 1996 . s. jain , a.sharma , on identification by teams and probabilistic machines .",
    "k. p. jantke , s. lange , ( eds . ) _ algorithmic learning for knowledge - based systems _ lecture notes in computer science , 961:108 - 145 , 1995 . s. jain , a. sharma , m. velauthapillai , finite identification of functions by teams with success ratio @xmath1047 and above , _ information and computation _",
    ", 121:201 - 213 , 1995 . m. kummer , _ the strength of noninclusions for teams of finite learners _ , proceedings of the 7th conference on computational learning theory , pp .",
    "268 - 277 , acm , 1994 .",
    "s. kleene , on notation for ordinal numbers .",
    "_ journal of symbolic logic _ , 3:150 - 155 , 1938 . k. kuratowski , a. mostowski , _ set theory .",
    "_ north - holland publishing company , amsterdam , 1967 .",
    "m. machtey , p. young , _ an introduction to the general theory of algorithms .",
    "_ north - holland , 1978 e.  minicozzi .",
    "some natural properties of strong identification in inductive inference . , pages 345360 , 1976 .",
    "d. osherson , m. stob , s. weinstein , _ systems that learn : an introduction to learning theory for cognitive and computer scientists . _ mit press , cambridge , ma , 1986 l. pitt , probabilistic inductive inference , _ journal of the acm _ , 36:383 - 433 , 1989 . l. pitt , c. h. smith , probability and plurality for aggregations of learning machines .",
    "_ information and computation _ , 77:77 - 92 , 1988 .",
    "h. rogers jr .",
    ", godel numberings of partial recursive functions .",
    "_ journal of symbolic logic _ , 23:331 - 341 , 1958 h. rogers jr .",
    ", _ theory of recursive functions and effective computability . _ mcgraw - hill , new - york , 1967 . reprinted , mit press , 1987 .",
    "w. sierpinski , _ cardinal and ordinal numbers . _ pwn - polish scientific publishers , 1965 c.h .",
    "smith , _ three decades of team learning . _ proceedings of the 5th international workshop on algorithmic learning theory , lecture notes in computer science , 872:211 - 228 , 1994 m. velauthapillai , _ inductive inference with bounded number of mind changes .",
    "_ proceedings of colt89 , pp .",
    "200 - 213 , 1989"
  ],
  "abstract_text": [
    "<S> we consider the probability hierarchy for popperian finite learning and study the general properties of this hierarchy . </S>",
    "<S> we prove that the probability hierarchy is decidable , i.e. there exists an algorithm that receives @xmath0 and @xmath1 and answers whether @xmath2-type learning with the probability of success @xmath0 is equivalent to @xmath2-type learning with the probability of success @xmath1 .    to prove our result , we analyze the topological structure of the probability hierarchy . </S>",
    "<S> we prove that it is well - ordered in descending ordering and order - equivalent to ordinal @xmath3 . </S>",
    "<S> this shows that the structure of the hierarchy is very complicated .    using similar methods </S>",
    "<S> , we also prove that , for @xmath2-type learning , team learning and probabilistic learning are of the same power .    </S>",
    "<S> epsf.sty    6.5 in 8.25 in -0.25 in    [ lemma ] </S>"
  ]
}
{
  "article_text": [
    "the problem of the minimal description of the behavior of a vector function f(x ) = ( f_1(x ) , f_2 ( x ) , ... , f_r ( x ) ) , r 1 , [ 1 ] over a hyperinterval @xmath2 can be stated in various ways under different assumptions regarding @xmath0 .",
    "the term ` minimal description ' means that we want to obtain a knowledge about @xmath0 by evaluating it in a minimal number of trial points @xmath3 .",
    "the problem has a number of important applications in numerous fields of mathematics such as optimization , number theory , numerical integration , geometric partitioning , and structural description ( see ref .  1 for discussion and references ) .",
    "usually , in real - life applications , the operation of evaluating @xmath0 requires much time and to obtain an acceptable solution of the minimal description problem it is necessary to execute a high number of such evaluations .",
    "numerous iterative processes proposed in literature ( see refs .  119 , etc . ) for solving this problem can be distinguished in dependence on the way they combine the following four features : ( i )  the strategy used for partition of the region @xmath4 ; ( ii )  the way to choose an element ( or elements ) for the next partition ; ( iii )  the number of points @xmath0 should be evaluated at the new subregions obtained after partition ; ( iv )  the location of these points within each of the new subregions .",
    "let us determine the place of our study with respect to the features ( i)(iv ) .",
    "first , one - point - based , diagonal , simplicial , etc .",
    "algorithms ( see , for example , refs .",
    "119 ) can be distinguished relatively to the feature ( i ) and ( iii ) .",
    "one - point - based algorithms subsequently subdivide the region @xmath4 in smaller hyperintervals and evaluate @xmath0 at one point within each sub - interval ( the terms ` cell ' and ` box ' will be also used ) .",
    "diagonal methods do the same but evaluate @xmath0 at two vertices of each box .",
    "simplicial algorithms partition the region in simplexes and evaluate the objective vector function at all their vertices .",
    "the current state - of - art in the field ( see refs .  2 , 7 , 11 , 15 ) does not allow us to say which of the approaches is worse or better for a given class of functions .",
    "this paper deals with popular one - point - based algorithms that have been extensively studied theoretically ( mainly from the feature ( ii ) point of view ( see refs .  6 , 8 , 11 , 12 , 14 , 15 , etc .",
    "they have also been successfully applied to solve numerous real - life problems .",
    "for example , interval analysis methods use mainly this strategy in their work ( see , for instance , refs .  7 , 10 , 11 ) . another important example of their usage comes from the direct optimization method introduced in ref .",
    "12 that also has been employed in a number of industrial applications ( see refs .  5 , 17 , 18 ) .",
    "peculiarity of this paper consists of the following : it does not discusses the feature ( ii ) .",
    "in contrast , its goal is to show ( as it has been already done for the diagonal methods in ref .",
    "1 ) that partition strategies themselves , independently of the feature ( ii ) , can influence significantly the number of function evaluations made by an algorithm .",
    "thus , we concentrate our attention on the features ( i ) and ( iv ) in the framework of one - point - based algorithms .",
    "let us analyze two partition strategies traditionally used in the one - point - based algorithms .",
    "in the first of them , the region @xmath4 is subdivided in a number of sub - intervals and @xmath0 is evaluated at an internal ( very often central ) point of each of the new sub - boxes .",
    "then a new sub - cell of @xmath4 is chosen for partitioning and the process is repeated . this simple and widely used strategy has the following drawback . if @xmath0 has been evaluated at a point @xmath5 within an interval @xmath6 only the interval @xmath6 uses the information obtained from evaluation of @xmath7 .",
    "the second traditional partition strategy overcomes this difficulty . an internal point ( indicated in fig .",
    "1a by the number @xmath8 ) is chosen within the region @xmath4 that is subdivided in @xmath9 sub - boxes by the hyperplanes orthogonal to coordinate axes and passing through this point . in this strategy ,",
    "the information obtained at every point is used by @xmath9 intervals .",
    "unfortunately , such a huge number of sub - boxes creates problems during managing the description information when the dimension of the problem , @xmath1 , increases .",
    "this strategy has also the second problem illustrated in fig .",
    "suppose that the interval shown by grey color in fig .",
    "1a has been chosen for the next subdivision .",
    "it can be seen from fig .",
    "1b that the partition executed within this interval at the point @xmath10 creates redundancy in the following sense .",
    "the one - point - based algorithms use only _ one _ point for description of @xmath0 over each interval @xmath6 . in spite of this ,",
    "the interval shown by grey color has _ two _ points where @xmath0 has been evaluated .",
    "one of them is redundant . in general , usage of this partition strategy",
    "leads to the following result describing the level of the obtained redundancy .",
    "* proposition 1.1 * every partition made by using the second strategy leads to creation of one or two sub - cells having @xmath0 evaluated at two vertices .",
    "* proof : * let us consider the situation where one interval having @xmath0 evaluated at two vertices is generated .",
    "this happens when an interval having @xmath0 evaluated at one of its vertices ( see fig .",
    "1a ) is subdivided .",
    "two intervals having redundant points are generated when an interval with @xmath0 evaluated at two of its vertices ( see the interval shown in grey in fig .",
    "1b ) is subdivided .    ' '' ''    the analysis given above shows that a desirable partition strategy should not generate too many sub - cells during every partition and should be able to avoid redundant evaluations of the vector function @xmath0 giving in the same moment to several intervals a possibility to use the information obtained from every single evaluation of @xmath0 .",
    "in this paper , a new partition strategy that can be used by one - point - based algorithms is proposed . it is based on an efficient partition strategy introduced recently in ref .  1 for solving the minimal description problem in the framework of diagonal algorithms ( see ref .",
    "these methods evaluate the vector function @xmath0 at two vertices @xmath11 and @xmath12 of each sub - box @xmath6 where @xmath13 = \\ { x : a(i ) \\le x \\le b(i ) \\}.\\ ] ] a high practical efficiency of the new strategy applied for solving global optimization problems has been shown in ref",
    ".  13 .    in order to proceed ,",
    "let us describe this partition strategy developed for diagonal algorithms .",
    "a cell @xmath14 $ ] chosen for subdivision among @xmath15 cells existing during an iteration @xmath16 is split into three equal sub - intervals by two hyperplanes orthogonal to the longest edge parallel to the @xmath17th coordinate axis and passing through the points u = ( a_1(t),a_2(t),  ,a_i-1(t ) , a_i(t)+2(b_i(t)-a_i(t))/3 , a_i+1(t ) ,  , a_n(t ) ) , [ 2 ] v = ( b_1(t),b_2(t),  ,b_i-1(t ) , b_i(t)+2(a_i(t)-b_i(t))/3 , b_i+1(t), ",
    ",b_n(t ) ) .",
    "[ 3 ] the cell @xmath18 is substituted by the new cells @xmath19 and @xmath20 determined by their vertices @xmath21 the function @xmath0 is ( eventually ) evaluated at the points @xmath22 and @xmath23 .",
    "it has been shown in ref .  1 that this strategy generates regular trial meshes in such a way that every cell has exactly two vertices where the function @xmath0 is evaluated .",
    "the introduced regularization allows to establish links between sub - cells generated during different iterations eliminating in this way possibility of the redundant trials generation and storage of the related information .    while using this strategy it becomes possible ( see ref .  1 )",
    "to reestablish information about vicinity of the cells generated during different iterations and , as the result , to eliminate redundant storage of the points @xmath24 and results of evaluations of the function @xmath0 at these points .",
    "particularly , it is shown that every vertex where @xmath0 is evaluated can belong to different ( up to @xmath9 ) cells .",
    "when we split an interval @xmath18 , we calculate the coordinates of the vertices corresponding to the three new sub - cells .",
    "particularly , we are interested in the vertices @xmath22 and @xmath23 , the only two vertices for the three cells from ( 4 ) where the function @xmath0 should be evaluated .    instead of an immediate evaluation of the values @xmath25 and @xmath26 , we verify the existence of these in the data base because @xmath25 and/or @xmath26 could have been already evaluated during previous iterations .",
    "it is important to mention that two numerations ( one for the boxes and another for the vertices where the function @xmath0 has been evaluated ) have been developed theoretically in ref .",
    "1 and successfully applied practically in ref .  13 .",
    "these numerations allow us to calculate the addresses of @xmath22 and @xmath23 in the data base of the vertices from the number of the box @xmath18 providing so a direct fast access to the values @xmath25 and @xmath26 .    if both of them have been already evaluated , we simply read these values from the data base .",
    "if only one of them has been evaluated , we read this value and create a new element in the data base for the absent ( say @xmath22 ) point , evaluate @xmath25 and record it in the element created . in the last case  both values are absent  these operations are executed for both points .",
    "thus , the description information is evaluated at every vertex only once and then we simply read it up to @xmath9 times instead of evaluating @xmath0 and saving the result of this evaluation and coordinates of the @xmath9 trial points @xmath9 times .    surprisingly , this strategy developed for the diagonal methods can be successfully applied for the one - point - based algorithms too .",
    "instead of evaluating @xmath0 at two vertices , @xmath22 and @xmath23 , it is proposed to do this initially for the vertex @xmath27 of the region @xmath4 and then at the vertex @xmath22 during every splitting ( the point @xmath23 is used just for partitioning goals ) .",
    "then , the operation of the verification whether the function @xmath0 has been already evaluated at this point is made by using the fast procedure developed in ref .  1 .    in order to illustrate the new strategy ,",
    "let us consider an example presented in fig .  2 .",
    "the first evaluation of the function @xmath0 is executed at the vertex @xmath27 ( see fig .",
    "the second evaluation is made at the point @xmath10 being the point @xmath22 from ( [ 2 ] ) .",
    "it can be seen from this figure that we have three sub - cells having exactly one vertex where @xmath0 has been evaluated .",
    "suppose that the interval shown in grey in fig .",
    "2a has been chosen for the next splitting ( see fig .",
    "the only evaluation made at the point @xmath28 gives us three new intervals .",
    "it seems that the interval chosen for the next partitioning ( and shown again in grey ) has a redundant point , i.e. , the point @xmath28 . in reality , this point is not a redundant one but is kept in the data base and can be used in the future .",
    "2c shows that the fourth point coincides with the point @xmath28 , thus , no evaluations are made , the description information is read from the data base and we obtain three new smaller intervals gratis .",
    "finally , fig .",
    "2d illustrates situation after eleven iterations .",
    "it can be seen from this figure that @xmath29 intervals have been generated and the function has been evaluated at seven points only .",
    "in this paper , the problem of the minimal description of a function @xmath0 over a hyperinterval @xmath4 has been considered in the framework of the one - point - based algorithms .",
    "an analysis of the traditional partitioning strategies used by these methods has been made .",
    "it has been shown that the meshes of the trial points generated by these strategies can generate redundant points and intervals .",
    "such a redundancy may lead to a significant increase of information to be stored in the computer memory and to the slowing down the description procedure .",
    "a new partition strategy has been introduced to overcome these difficulties .",
    "it generates regular trial meshes successfully responding to the requirements of the minimal description . during every partitioning",
    "it generates three intervals independently on the problem dimension . since every point where the function has been evaluated can belong up to @xmath9 intervals and",
    "it is possible to establish links between sub - cells generated during different iterations , the function is evaluated at every trial point only once and then the result of this evaluation is simply read from the data base many times . as a rule , this fact very often allows to obtain new partitions without any evaluation of the function .",
    "sergeyev , ya .",
    "d. , _ an efficient strategy for adaptive partition of n - dimensional intervals in the framework of diagonal algorithms _ , journal of optimization theory and applications , vol .",
    "145168 , 2000 .    \\2 .",
    "agarwal , p. k. , _ geometric partitioning and its applications _ , dimacs series in discrete mathematics and theoretical computer science , edited by j. e. goodman , r. pollack , and j. orourke , vol . 6 , pp . 137 , 1991 .",
    "cox , s. e. , haftka , r. t. , baker , c. , grossman , b. , mason , w. h. , and watson , l. t. , _ a comparison of global optimization methods for the design of a high - speed civil transport _ , journal of global optimization , vol .",
    "21 , pp . 415433 , 2001 .",
    "kvasov , d. e. , and sergeyev , ya .",
    "d. , _ multidimensional global optimization algorithm based on adaptive diagonal curves _ , computational mathematics and mathematical physics , vol .",
    "43 , pp . 4056 , 2003 .",
    "meewella , c. c. , and mayne , d. q. , _ efficient domain partitioning algorithms for global optimization of rational and lipschitz continuous functions _ , journal of optimization theory and applications , vol .",
    "61 , pp . 247270 , 1989 .",
    "verstak , a. , he , j. , watson , l. t , ramakrishnan , n. , shaffer , c. a. , rappaport , t. s. , anderson , c. r. , bae , k. , jiang , j. , and tranter , w. h. , _ s4w : globally optimized design of wireless communication systems _ , proceedings of the next generation software workshop : 16th international parallel and distributed processing symposium , ieee computer society press , fort lauderdale , florida , pp . 173180 , 2002 ."
  ],
  "abstract_text": [
    "<S> in this paper , the problem of the minimal description of the structure of a vector function @xmath0 over an @xmath1-dimensional interval is studied . </S>",
    "<S> methods adaptively subdividing the original interval in smaller subintervals and evaluating @xmath0 at only one point within each subinterval are considered . </S>",
    "<S> two partition strategies traditionally used for solving this problem are analyzed . a new partition strategy based on an efficient technique developed for diagonal algorithms </S>",
    "<S> is proposed and studied .    technical note     efficient partition of @xmath1-dimensional intervals in the framework of one - point - based algorithms    ya.d . </S>",
    "<S> sergeyev    communicated by g. di pillo    partitioning , minimal description , one - point - based algorithms , global optimization . </S>"
  ]
}
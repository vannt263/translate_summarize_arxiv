{
  "article_text": [
    "the theory of variable - length codes , one of the most studied areas of coding theory , continues to play an important role not only in the evolution of formal languages , but also in some applicative areas of computer science such as data compression .",
    "the aim of this paper is to continue developing and enriching this theory with new results , along with showing their effectiveness in concrete applications .",
    "specifically , we continue our study on _ adaptive codes _ , which have been recently presented in @xcite as a new class of non - standard variable - length codes .",
    "intuitively , an adaptive code of order @xmath3 associates a codeword to the symbol being encoded depending on the previous @xmath3 symbols in the input data string .",
    "generalized adaptive codes ( ga codes , for short ) have been also presented in @xcite not only as a new class of non - standard variable - length codes , but also as a natural generalization of adaptive codes of any order .",
    "both classes are described in detail in section 2 .",
    "then , we show that adaptive huffman encodings and lempel - ziv encodings are particular cases of encodings by ga codes ( sections 3 and 4 ) . in section 5",
    ", we show that any @xmath0 convolutional code satisfying a certain condition can be modelled as an adaptive code of order @xmath1 .",
    "this result is exploited further in section 6 , where an efficient cryptographic scheme based on convolutional codes is described .",
    "an insightful analysis of this cryptographic scheme is provided in the same section . in sections 7 and 8",
    ", we extend adaptive codes to @xmath2-adaptive codes , and present a new class of variable - length codes , called adaptive time - varying codes .    in the remainder of this introductory section , we recall some basic notions and notations used throughout the paper .",
    "we denote by @xmath4 the _ cardinality _ of the set @xmath5 ; if @xmath6 is a string of finite length , then @xmath7 denotes the length of @xmath6 .",
    "the _ empty string _ is denoted by @xmath8 .    for an alphabet @xmath9 ,",
    "we denote by @xmath10 the set @xmath11 and by @xmath12 the set @xmath13 , where @xmath14 is the set @xmath15 . also , we denote by @xmath16 the set @xmath17 and by @xmath18 the set @xmath19 .",
    "let us consider an alphabet @xmath20 , @xmath21 a finite and nonempty subset of @xmath22 , and @xmath23 .",
    "a _ decomposition of _ @xmath24 over @xmath21 is any sequence of strings @xmath25 with @xmath26 for all @xmath27 , @xmath28 , such that @xmath29 .",
    "a _ code _ over @xmath20 is any nonempty set @xmath30 such that each string @xmath23 has at most one decomposition over @xmath31 .",
    "prefix code _ over @xmath20 is any code @xmath31 over @xmath20 such that no string in @xmath31 is proper prefix of another string in @xmath31 .",
    "if @xmath32 is an algorithm and @xmath6 its input , then we denote by @xmath33 its output . also , we denote by @xmath34 the set of natural numbers , and by @xmath35 the set of nonzero natural numbers .    finally , let us fix some useful notations which will be used in the description of the algorithms .",
    "let @xmath36 be a @xmath37-tuple .",
    "we denote by @xmath38 the @xmath27-th component of @xmath39 , that is , @xmath40 for all @xmath41 .",
    "the @xmath42-tuple is denoted by @xmath43 .",
    "the length of a tuple @xmath39 is denoted by @xmath44 . if @xmath45 , @xmath46 , @xmath47 , and @xmath48 are tuples , and q is an element or a tuple",
    ", then we define @xmath49 , @xmath50 , @xmath51 , and @xmath52 by :    * @xmath53 , * @xmath54 , * @xmath55 , * @xmath56 ,    where @xmath57 are integers .",
    "the aim of this section is to briefly review some basic definitions , results , and notations related to adaptive codes and generalized adaptive codes @xcite .",
    "[ def : ac ] let @xmath9 and @xmath20 be two alphabets .",
    "a function @xmath58 , @xmath59 , is called _ adaptive code of order @xmath3 _ if its unique homomorphic extension @xmath60 , given by :    * @xmath61 , * @xmath62 @xmath63",
    "@xmath64 @xmath65 @xmath66 @xmath67 @xmath68 @xmath69 @xmath70 @xmath71    for all strings @xmath72 , is injective .",
    "as it is clearly specified in the definition above , an adaptive code of order @xmath3 associates a variable - length codeword to the symbol being encoded depending on the previous @xmath3 symbols in the input data string .",
    "let us take an example in order to better understand this mechanism .",
    "let @xmath73 and @xmath74 be two alphabets , and @xmath75 a function given as in the table below .",
    "one can verify that @xmath76 is injective , and according to definition [ def : ac ] , it follows that @xmath77 is an adaptive code of order one .",
    ".an adaptive code of order one . [ cols=\"^,^,^,^\",options=\"header \" , ]     let @xmath78 be an input data string . using the definition above , we encode @xmath6 by    @xmath79 .",
    "time - varying codes have been recently introduced in @xcite as a proper extension of l - codes @xcite . intuitively , a time - varying code associates a codeword to the symbol being encoded depending on its position in the input data string .",
    "the connection to gsm - codes and se - codes has been also discussed in @xcite .",
    "several characterizations results for time - varying codes can be found in @xcite .",
    "let us now give a formal definition .",
    "[ def : tvc ] let @xmath9 and @xmath20 be two alphabets .",
    "a function @xmath80 is called _ time - varying code _ if its unique homomorphic extension @xmath81 , given by :    * @xmath61 , * @xmath82    for all strings @xmath72 , is injective",
    ".    * motivation . * this section is intended to introduce a new class of variable - length codes , called _ adaptive time - varying codes_. combining adaptive codes with time - varying codes can be useful when the input string consists of substrings with different characteristics .",
    "let @xmath83 be an input string , where @xmath84 are substrings with different characteristics . instead of associating an adaptive code to @xmath6 , it is desirable to associate an adaptive code to each substring @xmath85 .",
    "for sure , this technique can be exploited further in data compression to improve the results .",
    "combining adaptive codes with time - varying codes leads to the following encoding mechanism : the codeword associated to the current symbol being encoded depends not only on the previous symbols in the input string , but also on the position of the current symbol in the input string .",
    "a formal definition is given below .",
    "[ def : tvac ] let @xmath9 and @xmath20 be alphabets",
    ". a function @xmath86 is called _ adaptive time - varying code of order @xmath3 _ if its unique homomorphic extension @xmath60 , given by :    * @xmath61 , * @xmath62 @xmath87 @xmath88 @xmath65 @xmath89 @xmath90 @xmath91 @xmath92 @xmath93 @xmath94    for all strings @xmath72 , is injective .",
    "let @xmath73 , @xmath74 be two alphabets , and let @xmath95 be a function given by : @xmath96 }                & \\textrm{if $ \\sigma={\\texttt{\\textup{a}}}$.}\\\\              { \\it one[i ] }                 & \\textrm{if $ \\sigma={\\texttt{\\textup{b}}}$. }          \\end{array }      \\right.\\ ] ] for all @xmath97 , where    * @xmath98}=\\underbrace{00\\ldots{0}}_{i}$ ] , * and @xmath99}=\\underbrace{11\\ldots{1}}_{i}$ ] .",
    "one can verify that @xmath76 is injective , and according to definition [ def : tvac ] , @xmath77 is an adaptive time - varying code of order two .",
    "for example , the string @xmath100 is encoded by @xmath101",
    "adaptive codes associate variable - length codewords to symbols being encoded depending on the previous symbols in the input data string .",
    "this class of codes has been presented in @xcite as a new class of non - standard variable - length codes .",
    "generalized adaptive codes ( ga codes , for short ) have been also presented in @xcite , not only as a new class of non - standard variable - length codes , but also as a natural generalization of adaptive codes of any order .    in this paper , we contributed the following results .",
    "first , we proved that adaptive huffman encodings and lempel - ziv encodings are particular cases of encodings by ga codes ( sections 3 and 4 ) . in section 5",
    ", we proved that any @xmath0 convolutional code satisfying a certain condition can be modelled as an adaptive code of order @xmath1 .",
    "this result was exploited further in section 6 , where an efficient cryptographic scheme based on convolutional codes is described .",
    "an insightful analysis of this cryptographic scheme was provided in the same section . in sections 7 and 8",
    ", we extended adaptive codes to @xmath2-adaptive codes , and presented a new class of variable - length codes , called adaptive time - varying codes .",
    "further work in this area is intended to establish new interesting connections between adaptive codes and other classes of codes , along with showing their effectiveness in concrete applications .",
    "future directions related to adaptive codes also include the data compression algorithms recently presented in @xcite .",
    "for example , combining the extensions described in sections 7 and 8 with the algorithms presented in @xcite may lead to better results .",
    "trinc , d. , towards new algorithms for data compression using adaptive codes , in _ proceedings of the 5th international conference on information technology : coding and computing _ , las vegas , nevada , usa , april 57 , 2004 , volume 1 , pages 767771 .",
    "ieee computer society press .",
    "trinc , d. , meta - eah : an adaptive encoder based on adaptive codes . moving between adaptive mechanisms , in _ proceedings of the 3rd international symposium on information and communication technologies _ , las vegas , nevada , usa , june 1618 , 2004 , pages 220225 .",
    "acm library ."
  ],
  "abstract_text": [
    "<S> adaptive ( variable - length ) codes associate variable - length codewords to symbols being encoded depending on the previous symbols in the input data string . </S>",
    "<S> this class of codes has been presented in @xcite as a new class of non - standard variable - length codes . </S>",
    "<S> generalized adaptive codes ( ga codes , for short ) have been also presented in @xcite not only as a new class of non - standard variable - length codes , but also as a natural generalization of adaptive codes of any order . </S>",
    "<S> this paper is intended to continue developing the theory of variable - length codes by establishing several interesting connections between adaptive codes and other classes of codes . </S>",
    "<S> the connections are discussed not only from a theoretical point of view ( by proving new results ) , but also from an applicative one ( by proposing several applications ) . </S>",
    "<S> first , we prove that adaptive huffman encodings and lempel - ziv encodings are particular cases of encodings by ga codes . </S>",
    "<S> second , we show that any @xmath0 convolutional code satisfying certain conditions can be modelled as an adaptive code of order @xmath1 . </S>",
    "<S> third , we describe a cryptographic scheme based on the connection between adaptive codes and convolutional codes , and present an insightful analysis of this scheme . </S>",
    "<S> finally , we conclude by generalizing adaptive codes to @xmath2-adaptive codes , and discussing connections between adaptive codes and time - varying codes .    adaptive codes , convolutional codes , error - correcting codes , generalized adaptive codes , prefix codes , time - varying codes , variable - length codes </S>"
  ]
}
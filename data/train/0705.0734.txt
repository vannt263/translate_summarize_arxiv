{
  "article_text": [
    "in the recent years there has been a growing interest in soft constraint satisfaction .",
    "various extensions of the classical constraint satisfaction problems ( csps ) @xcite have been introduced in the literature , e.g. , fuzzy csp @xcite , probabilistic csp @xcite , weighted csp @xcite , possibilistic csp @xcite , and valued csp @xcite .",
    "roughly speaking , these extensions are just like classical csps except that each assignment of values to variables in the constraints is associated to an element taken from a semiring .",
    "furthermore , nearly all of these extensions , as well as classical csps , can be cast by the semiring - based constraint solving framework , called scsp ( for _ semiring csp _ ) , proposed by bistarelli , montanari and rossi @xcite .    compared with classical csps ,",
    "scsps are usually more difficult to process and to solve .",
    "this is mainly resulted by the complexity of the underlying semiring structure .",
    "thus working on a simplified version of the given problem would be worthwhile . given a concrete scsp , the idea is to get an abstract one by changing the semiring values of the constraints without changing the structure of the problem .",
    "once the abstracted version of a given problem is available , one can first process the abstracted version and then bring back the information obtained to the original problem .",
    "the main objective is to find an optimal solution , or a reasonable estimation of it , for the original problem .",
    "the translation from a concrete problem to its abstracted version is established via a mapping between the two semirings . more concretely ,",
    "suppose @xmath1 is an scsp over @xmath2 , and @xmath6 is another semiring ( possibly simpler than @xmath2 ) .",
    "given a mapping @xmath7 , we can translate the concrete problem @xmath1 to another problem , @xmath4 , over @xmath6 in a natural way .",
    "we then ask when is an optimal solution of the concrete problem @xmath1 also optimal in the abstract problem @xmath4 ? and , given an optimal solution of @xmath4 , when and how can we find a reasonable estimation for an optimal solution of @xmath1 ?",
    "the answers to these questions will be helpful in deriving useful information on the abstract problem and then taking some useful information back to the concrete problem .",
    "this paper is devoted to the investigation of the above questions .",
    "these questions were first studied in bistarelli , codognet and rossi @xcite , where they established a galois insertion - based abstraction framework for soft constraint problems . in particular , they showed that ( * ? ? ?",
    "* theorem  27 ) if @xmath0 is an _ order - preserving _ galois insertion , then optimal solutions of the concrete problem are also optimal in the abstract problem .",
    "this sufficient condition , however , turns out to be equivalent to say @xmath0 is a semiring isomorphism ( see proposition  [ prop : op ] ) , hence too restrictive .",
    "theorem  29 of @xcite concerns computing bounds that approximate an optimal solution of the concrete problem .",
    "the statement of this theorem as given there is incorrect since a counter - example ( see soft problem  [ scsp : thm29 ] in this paper ) shows that the result holds conditionally .",
    "this paper shows that semiring homomorphism plays an important role in soft constraint abstraction .",
    "more precisely , we show that ( theorem  [ mythm27 ] ) a mapping preserves optimal solutions if and only if it is an order - reflecting semiring homomorphism , where a mapping @xmath7 is _ order - reflecting _ if for any two @xmath8 , we have @xmath9 from @xmath10 .",
    "moreover , for a semiring homomorphism @xmath0 and a problem @xmath1 over @xmath2 , if @xmath3 is optimal in @xmath4 , then there is an optimal solution @xmath5 of @xmath1 such that @xmath5 has the same value as @xmath3 in @xmath4 ( see theorem  [ mythm31 ] ) .",
    "this paper is organized as follows .",
    "first , in section  2 we give a summary of the theory of soft constraints .",
    "the notion of @xmath0-_translation _ of semiring csps is introduced in section  3 , where we show that @xmath0 preserves problem ordering if and only if @xmath0 is a semiring homomorphism .",
    "section  4 discusses when a translation @xmath0 preserves optimal solutions , i.e. when all optimal solutions of the concrete problem are also optimal in the abstract problem . in section  5 ,",
    "we discuss , given an optimal solution of the abstract problem , what we can say about optimal solutions of the concrete problem .",
    "conclusions are given in the final section .",
    "in this section we introduce several basic notions used in this paper . in particular , we give a brief summary of the theory of c - semiring based constraint satisfaction problem raised in @xcite ( bistarelli , montanari and rossi 1997 ) . the notion of semiring homomorphism",
    "is also introduced .",
    "a semiring is a tuple @xmath11 such that :    * @xmath2 is a set and @xmath12 ; * @xmath13 is commutative , associative and * 0 * is its unit element ; * @xmath14 is associative , distributive over @xmath13 , * 1 * is its unit element and * 0 * is its absorbing element .",
    "we call @xmath13 and @xmath14 , respectively , the _ sum _ and the _ product _ operation .",
    "a c - semiring is a semiring @xmath15 such that :    * @xmath13 is idempotent , * 1 * is its absorbing element , and @xmath14 is commutative .    consider the relation @xmath16 defined over @xmath2 such that @xmath17 iff @xmath18 .",
    "then it is possible to prove that @xcite :    * @xmath19 is a lattice , * 0 * is its bottom and * 1 * its top ; * @xmath13 is the  ( lowest upper bound ) operator @xmath20 in the lattice @xmath19 ; * @xmath14 is monotonic on @xmath16 ; * if @xmath14 is idempotent , that is @xmath21 for each @xmath22 , then @xmath19 is a distributive lattice and @xmath14 is its  ( greatest lower bound ) @xmath23 .    the above definition of c - semiring differs from the one given in @xcite simply in that a c - semiring , with the induced partial order , is not necessarily complete . for example ,",
    "suppose @xmath24 is the set of rational number and @xmath25\\cap{\\mathbb q}$ ] is the subalgebra of the fuzzy semiring @xmath26,\\vee,\\wedge,0,1\\rangle$ ] .",
    "then @xmath2 is a c - semiring but @xmath19 is not a complete lattice , where @xmath16 is the partial order induced by the semiring @xmath2 , which happens to be the usual total order on @xmath2 .      a mapping @xmath27 from semiring @xmath28 , * 0 * , * 1*@xmath29 to semiring @xmath30 is said to be a semiring _ homomorphism _ if for any @xmath8    * @xmath31 , @xmath32 ; and * @xmath33 ; and * @xmath34 .",
    "a semiring homomorphism @xmath27 is said to be a semiring _ isomorphism _ if @xmath27 is a bijection .",
    "note that a semiring isomorphism is also an order isomorphism w.r.t . the induced partial orders .",
    "we give some examples of semiring homomorphism .",
    "[ ex : tom ] let @xmath2 and @xmath6 be two c - semirings such that    * both @xmath16 and @xmath35 are totally ordered ; and * both @xmath14 and @xmath36 are idempotent , i.e. both are  operators .",
    "then a monotonic mapping @xmath7 is a homomorphism if and only if @xmath37 , and @xmath38 .",
    "recall that a congruence relation @xmath39 over a semiring @xmath2 is an equivalence relation that satisfies :    * if @xmath40 and @xmath41 , then @xmath42 , and @xmath43 .",
    "we write @xmath44 for the resulted quotient structure .",
    "[ ex : nat ] suppose @xmath2 is a ( c-)semiring and @xmath39 is a congruence relation over @xmath2",
    ". then @xmath44 is also a ( c-)semiring and the natural homomorphism @xmath45 is a semiring homomorphism .",
    "[ ex : proj ] let @xmath46 be the cartesian product of a set of ( c-)semirings . clearly , @xmath2 itself is also a ( c-)semiring . for each @xmath47 , the @xmath48-th projection @xmath49 is a semiring homomorphism .",
    "a _ constraint system _ is a tuple @xmath50 , where @xmath2 is a c - semiring , @xmath51 is a finite set , and @xmath52 is an ( possibly infinite ) ordered set of variables .    given a constraint system @xmath50 .",
    "type _ is a finite ordered subset of @xmath52 .",
    "we write @xmath53 for the set of types .    given a constraint system @xmath50 , where @xmath54 , a constraint over @xmath55 is a pair @xmath56 where    * @xmath57 is a finite subset of @xmath52 , called the _ type _ of the constraint ; * @xmath58 is called the _ value _ of the constraint , where @xmath59 is the cardinality of @xmath57 .    in the above definition ,",
    "if @xmath60 is the maximal constant function , namely @xmath61 for each @xmath62-tuple @xmath3 , we call @xmath63 the _ trivial _ constraint with type @xmath57 .",
    "[ def : cx ] for two constraints @xmath64 and @xmath65 with type @xmath57 over @xmath66 , we say @xmath67 is _ constraint below _ [ pagecx ] @xmath68 , noted as @xmath69 , if for all @xmath70-tuples @xmath3 , @xmath71 .",
    "this relation can be extended to sets of constraints in an obvious way .",
    "[ cx ] given two ( possibly infinite ) sets of constraints @xmath72 and @xmath73 , assuming that both contain no two constraints of the same type , we say @xmath72 is _ constraint below _",
    "@xmath73 , noted as @xmath74 , if for each type @xmath75 one of the following two conditions holds :    * there exist two constraints @xmath67 and @xmath68 with type @xmath57 in @xmath72 and @xmath73 respectively , such that @xmath69 ; * @xmath73 contains no constraints of type @xmath57 , or @xmath73 contains the trivial constraint of type @xmath57 .",
    "two sets of constraints @xmath72 and @xmath73 are called ( _ constraint _ ) _ equal _ , if @xmath74 and @xmath76 . in this case",
    ", we write @xmath77 .",
    "this definition is in accordance with the basic requirement that adding to a set of constraints @xmath78 a trivial constraint should not change the meaning of @xmath78 .    given a constraint system @xmath66 , a soft constraint satisfaction problem ( scsp ) over @xmath55 is a pair @xmath79 , where @xmath78 is a finite set of constraints , and @xmath57 , the type of the problem , is a finite subset of @xmath52 .",
    "we assume that no two constraints with the same type appear in @xmath78 .    naturally , given two scsps @xmath80 and @xmath81 ,",
    "we say @xmath82 is _ constraint below _",
    "@xmath83 , noted as @xmath84 , if @xmath74 .",
    "also , @xmath82 and @xmath83 are said to be ( _ constraint _ ) _ equal _ , if @xmath72 and @xmath73 are constraint equal . in this case",
    ", we also write @xmath85 .",
    "we call this the _ constraint ordering _ on sets of scsps with type @xmath57 over @xmath55",
    ". clearly , two scsps are constraint equal if and only if they differ only in trivial constraints .",
    "to give a formal description of the solution of an scsp , we need two additional concepts .    given a finite set of constraints @xmath86 , their _ combination _",
    "@xmath87 is the constraint @xmath63 defined by @xmath88 and @xmath89 , where by @xmath90 we mean the projection of tuple @xmath3 , which is defined over the set of variables @xmath91 , over the set of variables @xmath92 .",
    "given a constraint @xmath93 and a subset @xmath94 of @xmath52 , the _ projection _ of @xmath95 over @xmath94 , denoted by @xmath96 , is the constraint @xmath97 where @xmath98 and @xmath99 .",
    "particularly , if @xmath100 , then @xmath101 maps 0-tuple @xmath102 to @xmath103 , which is the sum of the values associated to all @xmath70-tuples .    now the concept of solution can be defined as the projection of the combination of all constraints over the type of the problem .",
    "the _ solution _ of an scsp @xmath104 is a constraint of type @xmath57 which is defined as : @xmath105 where @xmath106 is the maximal constraint with type @xmath57 .",
    "write @xmath107 , a @xmath70-tuple @xmath3 is an _ optimal solution _ of @xmath1 if @xmath108 is maximal , that is to say there is no @xmath109 such that @xmath110 .",
    "we write @xmath111 for the set of optimal solutions of @xmath1 . for any @xmath70-tuple @xmath3",
    ", we also write @xmath112 for @xmath113 .",
    "let @xmath114 and @xmath115 be two c - semirings and let @xmath116 be an arbitrary mapping from @xmath2 to @xmath6 .",
    "also let @xmath51 be a nonempty finite set and let @xmath52 be an ordered set of variables .",
    "fix a type @xmath75 .",
    "we now investigate the relation between problems over @xmath2 and those over @xmath6 .",
    "[ def : abs ] let @xmath104 be an scsp over @xmath2 where @xmath117 , @xmath118 , and @xmath119 . by applying @xmath0 to each constraints respectively , we get an scsp @xmath120 over @xmath6 , called the @xmath0-_translated problem _ of @xmath1 , which is defined by @xmath121 , @xmath122 , and @xmath123 . @xmath124 we write @xmath4 for the @xmath0-translated problem of @xmath1 .    without loss of generality , in what follows",
    "we assume @xmath125 , and @xmath126 .",
    "we say @xmath0 _ preserves problem ordering _ , if for any two scsps @xmath127 over @xmath2 , we have @xmath128 the following theorem then characterizes when @xmath0 preserves problem ordering .",
    "let @xmath0 be a mapping from c - semiring @xmath2 to c - semiring @xmath6 such that @xmath129 , @xmath126 .",
    "suppose @xmath51 contains more than two elements and @xmath130 .",
    "then @xmath0 preserves problem ordering if and only if @xmath0 is a semiring homomorphism , that is , for all @xmath8 , @xmath131 , @xmath132 .",
    "note that if @xmath0 preserves @xmath13 and @xmath14 , then @xmath0 commutes with operators @xmath133 and @xmath134 .",
    "clearly @xmath0 is also monotonic .",
    "hence , by definition of solution , @xmath0 preserves problem ordering .    on the other hand ,",
    "suppose @xmath0 preserves problem ordering .",
    "we first prove @xmath132 for @xmath8 .",
    "we show this by construction .",
    "[ scsp:+ ] suppose @xmath135 .",
    "take @xmath136 with @xmath137 ( i=1,2 ) , where @xmath138 , @xmath139 and @xmath140 set @xmath141 and @xmath142 .",
    "then for each @xmath62-tuple @xmath143 , @xmath144 , @xmath145 . by the assumption that @xmath0 preserves problem ordering , we have @xmath146    next , we prove @xmath131 for @xmath8 .",
    "we also show this by construction .",
    "[ scsp : times ] suppose @xmath135 .",
    "take @xmath147 , @xmath148 and @xmath149 , where @xmath150 and @xmath151 set @xmath152 and @xmath153 .",
    "then for each @xmath62-tuple @xmath143 , @xmath154 . by assumption , we have @xmath155    this ends the proof",
    ".    thus if @xmath0 is a semiring homomorphism , it preserves problem ordering .",
    "note that semiring homomorphism also preserves constraint ordering , i.e. for any two scsps @xmath127 over @xmath2 , we have @xmath156",
    "in this section we discuss when a translation preserves optimal solutions , i.e. when all optimal solutions of the concrete problem are also optimal in the abstract problem .",
    "let @xmath116 be a mapping between two c - semirings .",
    "we say @xmath0 preserves optimal solutions if @xmath157 holds for any scsp @xmath1 over @xmath2 .    the following order - reflecting property plays a key role .",
    "let @xmath158 and @xmath159 be two posets .",
    "a mapping @xmath160 is said to be _ order - reflecting _ if @xmath161    in the remainder of this section we show that @xmath0 preserves optimal solutions if and only if @xmath0 is an order - reflecting semiring homomorphism . to this end , we need several lemmas .",
    "recall that @xmath13 is idempotent and monotonic on @xmath16 for any c - semiring @xmath162 .",
    "the following lemma then identifies a necessary and sufficient condition for @xmath0 preserving optimal solutions .",
    "[ lem:1 ] let @xmath0 be a mapping from c - semiring @xmath2 to c - semiring @xmath6 such that @xmath163 .",
    "then @xmath0 preserves optimal solutions for all constraint systems if and only if the following condition holds for any two positive integers @xmath164 : @xmath165    suppose that @xmath0 satisfies the above equation  [ eq1 ]",
    ". given an scsp @xmath104 over @xmath2 with @xmath166 and @xmath136 .",
    "take a tuple @xmath3 that is optimal in @xmath1 .",
    "we now show @xmath3 is also optimal in @xmath4 .",
    "set @xmath167 .",
    "take @xmath168 .",
    "set @xmath169 and write @xmath170 .",
    "for each @xmath171 and each @xmath172 , set @xmath173 .",
    "then @xmath174 and @xmath175 suppose @xmath3 is not optimal in @xmath4 .",
    "then there exists some @xmath5 that has value @xmath176 in @xmath177 .",
    "notice that @xmath178 also has @xmath169 elements .",
    "similarly we can write @xmath179 for the value of @xmath5 in @xmath1 . now since @xmath180 entreating equation  [ eq1 ] , we have @xmath181 .",
    "this contradicts the assumption that @xmath3 is optimal in @xmath1 with value @xmath182 .    on the other hand ,",
    "suppose that @xmath0 preserves optimal solutions . by contradiction ,",
    "suppose equation  [ eq1 ] does nt hold .",
    "that is , we have some @xmath183 and @xmath184 such that @xmath185 our next example shows that this is impossible .",
    "take @xmath186 , @xmath187 , and @xmath188 . for @xmath172 ,",
    "set @xmath189 , and define @xmath190 as follows : @xmath191 set @xmath192 .",
    "consider now the scsp @xmath104 .",
    "then the two 1-tuples @xmath193 and @xmath194 have values @xmath183 and @xmath184 respectively in @xmath1 . applying @xmath0 to @xmath1 , we have an scsp @xmath4 over @xmath6 .",
    "recall @xmath129 . in the new problem , @xmath3 and @xmath109 have values @xmath195 and @xmath196 respectively . since @xmath3 is an optimal solution of @xmath1 , by the assumption that @xmath0 preserves optimal solutions , @xmath3 is also an optimal solution of @xmath4 . recall that @xmath197 .",
    "@xmath3 can not be optimal in @xmath4 .",
    "this gives a contradiction .    as a result ,",
    "@xmath0 preserves optimal solutions only if it satisfies equation  [ eq1 ] .",
    "it is easy to show that if @xmath0 preserves optimal solutions , then @xmath0 is order - reflecting .",
    "[ lem:2 ] let @xmath0 be a mapping from c - semiring @xmath2 to c - semiring @xmath6 such that @xmath163 .",
    "suppose @xmath7 preserves optimal solutions .",
    "then @xmath0 is order - reflecting , that is , for all @xmath198 , @xmath199 holds only if @xmath181 .    by lemma  [ lem:1 ] , we know @xmath0 satisfies equation  [ eq1 ] of lemma  [ lem:1 ] .",
    "taking @xmath200 , we know @xmath0 is order - reflecting .",
    "the next lemma shows that @xmath0 preserves optimal solutions only if it is a semiring homomorphism .",
    "[ lem:3 ] let @xmath0 be a mapping from c - semiring @xmath2 to c - semiring @xmath6 such that @xmath163 .",
    "suppose @xmath7 preserves optimal solutions .",
    "then @xmath0 is a semiring homomorphism .    by lemma  [ lem:1 ] , we know @xmath0 satisfies equation  [ eq1 ] .",
    "we first show that @xmath0 is monotonic .",
    "take @xmath198 , @xmath201 .",
    ". then @xmath203 .",
    "by equation  [ eq1 ] , we have @xmath204 .",
    "this is a contradiction , hence we have @xmath205 .",
    "next , for any @xmath198 , we show @xmath206 . since @xmath0 is monotonic , we have @xmath207 .",
    "suppose @xmath208 . by equation  [ eq1 ]",
    "again , we have @xmath209 , also a contradiction .    finally , for @xmath198 , we show @xmath210 .",
    "suppose not and set @xmath211 .",
    "then we have either @xmath212 or @xmath213 . since @xmath125 , @xmath126 ,",
    "these two inequalities can be rewritten respectively as @xmath214 and @xmath215 by equation  [ eq1 ] again , we have either @xmath216 or @xmath217 .",
    "both give rise to a contradiction .",
    "this ends the proof .",
    "we now achieve our main result :    [ mythm27 ] let @xmath0 be a mapping from c - semiring @xmath2 to c - semiring @xmath6 such that @xmath163 . then @xmath0 preserves optimal solutions for all constraint systems if and only if @xmath0 is an order - reflecting semiring homomorphism .",
    "the necessity part of the theorem follows from lemmas  [ lem:2 ] and [ lem:3 ] .",
    "as for the sufficiency part , we need only to show that , if @xmath0 is an order - reflecting semiring homomorphism , then @xmath0 satisfies equation  [ eq1 ] .",
    "suppose @xmath218 clearly we have @xmath219 since @xmath0 commutes with @xmath134 and @xmath133 . by order - reflecting , we have",
    "immediately @xmath220 this ends the proof .",
    "in the above section , we investigated conditions under which _ all _ optimal solutions of concrete problem can be related _ precisely _ to those of abstract problem .",
    "there are often situations where it suffices to find _ some _ optimal solutions or simply a good approximation of the concrete optimal solutions .",
    "this section shows that , even without the order - reflecting condition , semiring homomorphism can be used to find some optimal solutions of concrete problem using abstract ones .",
    "[ mythm31 ] let @xmath7 be a semiring homomorphism .",
    "given an scsp @xmath1 over @xmath2 , suppose @xmath221 has value @xmath222 in @xmath1 and value @xmath223 in @xmath4",
    ". then there exists @xmath224 with value @xmath225 in @xmath1 and value @xmath223 in @xmath4 .",
    "moreover , we have @xmath226 .",
    "suppose @xmath104 , @xmath166 and @xmath227 .",
    "set @xmath228 and @xmath229 .",
    "suppose @xmath3 is an optimal solution of @xmath4 , with semiring value @xmath223 in @xmath4 and @xmath222 in @xmath1 . by definition of solution , we have @xmath230 denote @xmath231 set @xmath169 , and write @xmath232 .",
    "for each @xmath171 and each @xmath233 , set @xmath234 .",
    "then @xmath235    since @xmath0 preserves sums and products , we have @xmath236 notice that if @xmath3 is also optimal in @xmath1 , then we can choose @xmath237 .",
    "suppose @xmath3 is not optimal in @xmath1 .",
    "then there is a tuple @xmath5 that is optimal in @xmath1 , say with value @xmath238 .",
    "denote @xmath239 clearly @xmath240 .",
    "write @xmath241 . for each @xmath242 and each @xmath172 , set @xmath243",
    ". then @xmath244 now we show @xmath245 .    by @xmath246",
    ", we have @xmath247 .",
    "then @xmath248 where the last term , @xmath249 , is the value of @xmath5 in @xmath4 .",
    "now since @xmath3 is optimal in @xmath4 , we have @xmath250 .",
    "that is , @xmath5 is also optimal in @xmath4 with value @xmath223 .    if our aim is to find some instead of all optimal solutions of the concrete problem @xmath1 , by theorem  [ mythm31 ] we could first find all optimal solutions of the abstract problem @xmath4 , and then compute their values in @xmath1 , tuples that have maximal values in @xmath1 are optimal solutions of @xmath1 . in this sense , this theorem is more desirable than theorem  [ mythm27 ] because we do not need the assumption that @xmath0 is order - reflecting .",
    "theorem  [ mythm31 ] can also be applied to find good approximations of the optimal solutions of @xmath1 .",
    "given an optimal solution @xmath251 with value @xmath252 , then by theorem  [ mythm31 ] there is an optimal solution @xmath253 with value in the set @xmath254 .",
    "note that theorem  [ mythm31 ] requires @xmath0 to be a semiring homomorphism .",
    "this condition is still a little restrictive .",
    "take the probabilistic semiring @xmath255,\\max,\\times,0,1\\rangle$ ] and the classical semiring @xmath256 as example , there are no nontrivial homomorphisms between @xmath257 and @xmath258 .",
    "this is because @xmath259 requires @xmath260 for any @xmath261 $ ] and any positive integer @xmath262 , which implies @xmath263 or @xmath264 .    in the remainder of this section",
    ", we relax this condition .    a mapping @xmath27 from semiring @xmath28 , * 0 * , * 1*@xmath29 to semiring @xmath30",
    "is said to be a _ quasi - homomorphism _ if for any @xmath8    * @xmath31 , @xmath32 ; and * @xmath33 ; and * @xmath265 .",
    "the last condition is exactly the _ locally correctness _ of @xmath266 w.r.t .",
    "@xmath14 @xcite .",
    "clearly , each monotonic surjective mapping between @xmath257 and @xmath258 is a quasi - homomorphism .",
    "the following theorem shows that a quasi - homomorphism is also useful .",
    "[ mythm31 + ] let @xmath7 be a quasi - semiring homomorphism .",
    "given an scsp @xmath1 over @xmath2 , suppose @xmath221 has value @xmath222 in @xmath1 and value @xmath223 in @xmath4 .",
    "then there exists an optimal solution @xmath5 of @xmath1 , say with value @xmath267 in @xmath1 , such that @xmath268 .",
    "the proof is straightforward .",
    "note that if @xmath6 is totally ordered , then the above conclusion can be rephrased as @xmath269 .",
    "but the following example shows this is not always true .",
    "[ scsp : thm29 ] take @xmath270 , @xmath271 , @xmath272 and @xmath273 .",
    "then @xmath274 and @xmath275 are two c - semirings , see figure [ fig : alpha1 ] .",
    "let @xmath7 be the mapping specified by @xmath276 , @xmath277 , @xmath278 , and @xmath279 .",
    "note that @xmath0 preserves s. moreover , since @xmath0 is monotonic , we have @xmath280 for any @xmath281 .",
    "therefore @xmath0 is a quasi - homomorphism .",
    "define @xmath282 ( @xmath283 ) as follows : @xmath284 @xmath285    consider the scsp @xmath286 with @xmath287 and @xmath288 for @xmath283 .",
    "then @xmath289 and @xmath290 set @xmath291 .",
    "clearly , @xmath3 is an optimal solution of @xmath4 with value @xmath292 in @xmath4 , and value @xmath293 in @xmath1 .",
    "notice that @xmath294 is the unique optimal solution of @xmath1 . since @xmath295",
    ", there is no optimal solution @xmath296 of @xmath1 such that @xmath297 .",
    "our abstraction framework is closely related to the work of bistarelli et al . @xcite and de givry et al .",
    "@xcite .",
    "bistarelli et al .",
    "@xcite proposed a galois insertion - based abstraction scheme for soft constraints .",
    "the questions investigated here were studied in @xcite . in particular , theorems  27 , 29 , 31 of @xcite correspond to our theorems  [ mythm27 ] , [ mythm31 + ] , and [ mythm31 ] , respectively .",
    "we recall some basic notions concerning abstractions used in @xcite .",
    "[ galois ] let @xmath158 and @xmath159 be two posets ( the concrete and the abstract domain ) .",
    "a _ galois connection _",
    "@xmath298 is a pair of monotonic mappings @xmath299 and @xmath300 such that @xmath301 in this case , we call @xmath302 the upper adjoint ( of @xmath0 ) , and @xmath0 the lower adjoint ( of @xmath302 )",
    ". a galois connection @xmath303 is called a _ galois insertion _ ( of @xmath304 in @xmath305 ) if @xmath306 .",
    "[ abstraction ] a mapping @xmath7 between two c - semirings is called an _ abstraction _",
    "if    * @xmath0 has an upper adjoint @xmath302 such that @xmath307 is a galois insertion * @xmath266 is _ locally correct _ with respect to @xmath14 , i.e. @xmath308 .    theorem  27 of @xcite gives a sufficient condition for a galois insertion preserving optimal solutions .",
    "this condition , called _ order - preserving _ , is defined as follows :    [ def : op ] given a galois insertion @xmath309 , @xmath0 is said to be _ order - preserving _ if for any two sets @xmath310 and @xmath311 , we have @xmath312    this notion plays an important role in @xcite .",
    "in fact , several results ( ( * ? ? ? * theorems  27 , 39 , 40 , 42 ) ) require this property . the next proposition , however , shows that this property is too restrictive , since an order - preserving galois insertion is indeed a semiring isomorphism .",
    "[ prop : op ] suppose @xmath309 is a galois insertion .",
    "then @xmath0 is order - preserving if and only if it is a semiring isomorphism .",
    "the sufficiency part is clear , and we now show the necessity part . notice that @xmath0 , as a galois connection , is monotonic . on the other hand ,",
    "given @xmath313 , suppose @xmath314 . by equation  [ eq2 ]",
    ", we have @xmath315 .",
    "that is to say , for any @xmath313 , @xmath314 if and only if @xmath316 . in particular , @xmath317 implies @xmath318 .",
    "this means that @xmath0 is injective .",
    "moreover , by definition of galois insertion , @xmath0 is also surjective .",
    "therefore @xmath0 is an order isomorphism . as a consequence , it preserves sums .",
    "we next show @xmath0 preserves products . for @xmath313 , since @xmath0 is surjective , we have some @xmath319 with @xmath320 . applying the order - preserving property",
    ", we have @xmath321 , hence @xmath322 , i.e. @xmath0 preserves products . in summary ,",
    "@xmath0 is a semiring isomorphism .",
    "theorem  29 of @xcite concerns that , given an optimal solution of the abstract problem , how to find a reasonable estimation for an optimal solution of the concrete problem .",
    "let @xmath7 be an abstraction .",
    "given an scsp @xmath1 over @xmath2 , suppose @xmath3 is an optimal solution of @xmath4 , with semiring value @xmath223 in @xmath4 and @xmath222 in @xmath1 .",
    "then ( * ? ?",
    "? * theorem  29 ) asserts that there exists an optimal solution @xmath5 of @xmath1 , say with value @xmath323 , such that @xmath324 .",
    "our soft problem [ scsp : thm29 ] , however , shows that ( * ? ? ?",
    "* theorem  29 ) is only conditionally true .",
    "this is because the quasi - homomorphism @xmath0 given there is also an abstraction . since each abstraction is also a quasi - homomorphism , theorem  [ mythm31 + ] holds for any abstraction .",
    "our theorem  [ mythm31 ] corresponds to theorem  31 of @xcite , where the authors consider abstractions between totally ordered semirings with idempotent multiplicative operations . by example",
    "[ ex : tom ] , we know such an abstraction must be a homomorphism .",
    "therefore our result is more general than ( * ? ? ?",
    "* theorem  31 ) .      there is another abstraction scheme @xcite for soft constraints that is closely related to ours ,",
    "where _ valued csps _",
    "@xcite are abstracted in order to produce good lower bounds for the optimal solutions .",
    "a translation @xmath7 between two totally ordered semirings is said to be _ aggregation compatible _",
    "if    * @xmath0 is monotonic and @xmath325 ; and * for any two sets @xmath310 and @xmath311 , we have we replace the two @xmath326 in definition  2 of @xcite with @xmath327 .",
    "this is because we should reverse the order of the valuation set @xmath2 such that the aggregation operator @xmath328 is a product operator . ]",
    "@xmath329    the next theorem shows that an aggregate compatible mapping must be a semiring homomorphism .",
    "let @xmath7 be a mapping between two totally ordered semirings .",
    "then @xmath0 is aggregate compatible if and only if @xmath0 is a semiring homomorphism .",
    "a semiring homomorphism is clearly aggregate compatible . on the other hand ,",
    "suppose @xmath0 is aggregate compatible . since it is monotonic , @xmath0 preserves sums .",
    "moreover , by equation  [ eq4 ] , for any @xmath8 , taking @xmath330 , @xmath331 , from @xmath332 we have @xmath333 .",
    "that is , @xmath0 also preserves products . hence @xmath0 is a semiring homomorphism .",
    "therefore our framework is also a generalization of that of de givry et al .",
    "more importantly , results obtained in sections 4 and 5 can be applied to valued csps .",
    "we first note that any monotonic mapping from a totally ordered set is order - reflecting .",
    "[ lemma : tom ] let @xmath158 be a totally ordered set , and @xmath159 a poset .",
    "suppose @xmath299 is monotonic mapping .",
    "then @xmath0 is order - reflecting .    by contradiction , suppose there are @xmath334 such that @xmath335 but @xmath336 .",
    "then since @xmath337 is a total order we know @xmath338 .",
    "but by the monotonicity of @xmath0 , we have @xmath339 .",
    "this contradicts the assumption that @xmath335 .",
    "therefore @xmath0 is order - reflecting .",
    "now , we have the following corollary of theorem  [ mythm27 ] , which was also obtained by de givry et al .",
    "@xcite for aggregation compatible mappings .",
    "[ cor1 ] let @xmath0 be a semiring homomorphism between two c - semirings @xmath2 and @xmath6 .",
    "suppose @xmath2 is a totally ordered c - semiring .",
    "then for any scsp @xmath1 over @xmath2 , it holds that @xmath157 .    by lemma",
    "[ lemma : tom ] , @xmath0 is order - reflecting .",
    "the conclusion then follows directly from theorem  [ mythm27 ] .",
    "in this paper we proposed a homomorphism based abstraction scheme for soft constraints .",
    "the intuition is that we first work in the abstract problem , finding all optimal solutions , and then use them to find optimal solutions of the concrete problem .",
    "surprisingly , our framework turns out to be a generalization of that of de givry et al .",
    "@xcite , where they consider totally ordered sets .    in detail",
    ", our theorem  [ mythm27 ] showed that a mapping preserves optimal solutions if and only if it is an order - reflecting semiring homomorphism ; and theorem  [ mythm31 ] showed that , for a semiring homomorphism @xmath0 and a problem @xmath1 over @xmath2 , if @xmath3 is an optimal solution of @xmath4 , then there is an optimal solution of @xmath1 , say @xmath5 , such that @xmath5 is also optimal in @xmath4 and has the same value as @xmath3 .",
    "these results greatly improved or generalized those obtained in bistarelli et al .",
    "@xcite .",
    "s. bistarelli , h. fargier , u. montanari , f. rossi , t. schiex , g. verfaillie , semiring - based csps and valued csps : basic properties and comparison , in : _ over - constrained systems , lecture notes in computer science , _",
    "vol.1106 , springer , berlin , 1996 , pp.111 - 150 .      s. de givry , g. verfaillie , t. schiex , bounding the optimum of constraint optimization problems , in : g. smolka ( ed . ) , _ proc .",
    "cp-97 , lecture notes in computer science _ , vol.1330 , springer , berlin , 1997 , pp.405 - 419 .",
    "d. dubois , h. fargier , h. prade , the calculus of fuzzy restrictions as a basis for flexible constraint satisfaction , in : _ proc .",
    "ieee international conference on fuzzy systems , ieee _ , 1993 ,",
    "1131 - 1136 .",
    "h. fargier , j. lang , uncertainty in constraint satisfaction problems : a probabilistic approach , in : _ proc .",
    "european conference on symbolic and qualitative approaches to reasoning and uncertainty ( ecsqaru ) , lecture notes in computer science _ ,",
    "747 , springer , berlin , 1993 , pp ."
  ],
  "abstract_text": [
    "<S> the semiring - based constraint satisfaction problems ( semiring csps ) , proposed by bistarelli , montanari and rossi @xcite , is a very general framework of soft constraints . in this paper </S>",
    "<S> we propose an abstraction scheme for soft constraints that uses semiring homomorphism . to find optimal solutions of the concrete problem , </S>",
    "<S> the idea is , first working in the abstract problem and finding its optimal solutions , then using them to solve the concrete problem .    </S>",
    "<S> in particular , we show that a mapping preserves optimal solutions if and only if it is an order - reflecting semiring homomorphism . </S>",
    "<S> moreover , for a semiring homomorphism @xmath0 and a problem @xmath1 over @xmath2 , if @xmath3 is optimal in @xmath4 , then there is an optimal solution @xmath5 of @xmath1 such that @xmath5 has the same value as @xmath3 in @xmath4 .    </S>",
    "<S> _ keywords _ : abstraction ; constraint solving ; soft constraint satisfaction ; semiring homomorphism ; order - reflecting .    </S>",
    "<S> [ section ] [ section ] [ section ] [ section ]    [ section ] [ section ] [ section ] [ section ] </S>"
  ]
}
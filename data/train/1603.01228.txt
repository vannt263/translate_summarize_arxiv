{
  "article_text": [
    "geogebra is an educational mathematics software tool , with millions of users . in 2005 , its founder markus hohenwarter broadened its software development into an open source project .",
    "geogebra s features ( including dynamic geometry , computer algebra , spreadsheets and function investigation ) primarily focus on facilitating student experiments in euclidean geometry , and not on formal reasoning . including automated deduction tools in geogebra s dynamic geometry system ( dgs ) could introduce a whole new range of learning and teaching scenarios .    since automated theorem proving ( atp ) in geometry has reached a rather mature stage , in 2010 some atp experts agreed on starting a project of incorporating and testing a number of different automated provers for geometry in geogebra .",
    "this collaboration was initiated by toms recio . since the initial kickstart this project reached the following milestones :    1 .",
    "a workshop for * theoretical planning * took place in santiago de compostela , spain , february 2011 .",
    "a second workshop for * implementation planning * took place in alcal de henares , spain , january 2012 .",
    "a * prototype * implementation was presented in alcal de henares in june 2012 by demonstrating 44 test cases using 5 different theorem prover methods @xcite .",
    "first public release * in geogebra 5.0 in october 2014 with 60 test cases @xcite .",
    "full * documentation * and fixing several issues according to users feedback in july 2015 in @xcite . 6 .   *",
    "extension * of the set of the translated dynamic geometry construction tools to cover 200 test cases .",
    "in this paper we report about the last milestone . in section [ overview ]",
    "we give a comprehensive overview about the first milestones .",
    "section [ symeqs ] summarizes our results by focusing on the general improvements in geogebra .",
    "section [ benchmarks ] shows some tables concerning our test results .",
    "section [ future ] sketches up our next planned steps for another milestone in the implementation .",
    "an interactive prover system designed mainly for secondary school students can differ from expert prover systems in some aspects . for example , _ gclc _ @xcite and _ opengeoprover _",
    "@xcite process a program code written in its special language and print the output as a precise report about the computation details .",
    "by contrast , a dgs tool should collect all pieces of information about the relationships of the objects purely by analyzing the construction being created by point - and - click edits and possibly some other input parameters for the prover commands ; finally the output is typically a yes / no answer and eventually some extra prescribed conditions to avoid degeneracy cases .",
    "there is a plenty of literature on reports on successful applications of dgs by extending one with an atp subsystem . among them , here we mention _ geoproof _ @xcite and _ laducation _",
    "@xcite which are open - sourced , and thus it is possible to continue their efforts by external researchers also .",
    "a publicly available variant of laducation was already able to import a geogebra construction and set up an equation system which was solved by an external computer algebra system ( cas ) .",
    "other systems including _ jgex _ @xcite and _ cinderella _ @xcite are not open - sourced , but built upon a similar approach : visualizations in the dgs must be supported by atp computations .",
    "our project harnessed geogebra s success in the classrooms and tried to address some problems of the existing dgs / atp prototypes including small distribution , being unmaintained or incomplete operation . in our solution in geogebra a user creates a dynamic geometry construction which contains free points and dependent points as usual .",
    "all dependent points are already determined by the free points , however , all free points can be dragged by the user as desired .",
    "when a free point is dragged , some dependent points will also be changed by following the definitions in the construction steps .",
    "in such a way geometric theorems can be visualized by experiment .",
    "this technique is well known in the world of dgs .",
    "going one step forward , an atp subsystem can give a more sound answer whether the visually obvious facts ( for example , if three dependent points in a given construction are always collinear ) generally hold .",
    "geogebra s command line interface with its * prove * and * provedetails * commands and the graphical _ relation tool _",
    "@xcite introduce a higher level interface to investigate the problem setting by using an atp subsystem .    proving euclidean elementary geometry theorems was introduced in geogebra with its version 5 in september 2014 .",
    "a report @xcite shows a benchmark about 60 theorems which can be directly checked with the * prove * and * provedetails * commands in geogebra .",
    "more details are shown in @xcite about how the prover subsystem is embedded to geogebra s user interface intuitively by using and extending the relation tool .",
    "there are several approaches to compute a proof internally by using geogebra s _ portfolio prover _ @xcite , including    * wu s method @xcite by using opengeoprover externally , and also * the area method @xcite ( via opengeoprover ) , moreover * recio s exact check method @xcite and * the grbner basis method @xcite .    in our present work we focused on the",
    "internally implemented _ grbner basis method _ which translates the geometric objects to algebraic equations directly and manipulates on the algebraic equation system by eliminating the dependent variables .",
    "our work could be however used for wu s method also , since we just defined a set of equations to translate geometric construction tools into an algebraic approach .",
    "we used complex algebraic geometry in our computations which is a standard way to set up a euclidean geometry question ( see @xcite ) .",
    "we report about our contributions to geogebra in two major areas :    1 .",
    "implementation of symbolic equations for various geometric tools ( section [ symeqs ] ) .",
    "2 .   creating a number of tests to extend the benchmarks ( section [ benchmarks ] ) .",
    "geogebra s geometry tools have been classified by @xcite as `` easy to use '' , `` middle '' and `` difficult to use '' .",
    "preiner defines two criteria for a tool to be easy ( p. 121 ) :    1 .",
    "the tool does not depend on already existing objects , or just requires existing points which can also be created ` on the fly ' by clicking on the drawing pad .",
    "the order of actions is irrelevant and no additional keyboard input is required .",
    "the tool directly affects only one type of existing object or all existing objects at the same time and requires just one action .",
    "again , the order of actions is irrelevant and no additional keyboard input is required .",
    "the basic concept in our work was to implement theorem proving features for the easier tools in geogebra .",
    "also it was important that the usually discussed classroom theorems can be quickly constructed by using the easier tools .",
    "the classroom theorems usually require points , segments , rays , lines and circles , and angles .",
    "for some more advanced topics tangents , parabolas , ellipses and hyperbolas may be needed .      implementing _ angles _ and _ conics _ may have theoretical difficulties in our approach . for _ angles _",
    ", we refer to the fact that it is not possible to define only the interior bisector of an angle : we always need to work together with internal and external angles at the same time ( cf .",
    "this is a consequence of handling angles : there is no way to check equality unless one computes the tangent of them , that is , instead of checking @xmath0 one verifies @xmath1 and these formulas are equivalent only if we set up some restrictions , say @xmath2 . in this sense we can not distinguish @xmath3 and @xmath4 .    for _ conics",
    "_ , ellipses and hyperbolas must also be handled as non - distinguishable objects , because using the synthetic approach we need to define them with their foci , and the defining relations are the same .",
    "more precisely , given foci @xmath5 and @xmath6 and conic point @xmath7 , another point @xmath8 is an element of the conic if and only if @xmath9 in the case of an ellipse and @xmath10 ( that is , @xmath11 ) in the case of a hyperbola . since the lengths in these equations are non - negative quantities , we either need to add constraints @xmath12 and @xmath13 ( which are not possible in complex algebraic geometry due to lack of inequalites ) , or we need to use the squared quantities @xmath14 , @xmath15 , @xmath16 and @xmath17 and express these equations exclusively by them . in this second case",
    "we need to eliminate the non - squared quantities from the equation . with the help of the following computer algebra command",
    "we learn that for both the ellipse and the hyperbola we get the same product of 8th degree ( here we used giac @xcite for computations ) :    .... > > factor(eliminate([ac+cb = ap+pb , ac^2=ac^2,cb^2=cb^2,ap^2=ap^2,pb^2=pb^2],[ac , cb , ap , pb ] ) ) ....    returns    .... [ ( ac - cb - ap - pb)*(ac - cb - ap+pb)*(ac - cb+ap - pb)*(ac - cb+ap+pb)*(ac+cb - ap - pb)*(ac+cb - ap+pb)*(ac+cb+ap - pb)*(ac+cb+ap+pb ) ] ....    which has the same result as for the input    .... > >",
    "factor(eliminate([(ac - cb)^2=(ap - pb)^2,ac^2=ac^2,cb^2=cb^2,ap^2=ap^2,pb^2=pb^2],[ac , cb , ap , pb ] ) ) ....    interpreting the result , it is only possible to define the set @xmath18 in the complex algebraic geometry sense which consists of 8 theoretical curves :    1 .",
    "@xmath9 , the ellipse , 2 .",
    "@xmath19 , which  according to the triangle inequality  is possible only in a degenerate case when @xmath5 , @xmath6 and @xmath7 ( and also @xmath8 ) are collinear , 3 .",
    "@xmath20 , similar to the previous collinear case , 4 .",
    "@xmath21 which is possible only in a degenerate case when @xmath22 , 5 .",
    "@xmath23 , similar to the former collinear cases , 6 .",
    "@xmath24 , one branch of the hyperbola , 7 .",
    "@xmath25 , the other branch of the hyperbola , 8 .",
    "@xmath26 , again similar to the former collinear cases .    that is , we indeed obtained that an ellipse and a hyperbola can not be distinguished in this model ( but all other non - degenerate curves can be distinguished from them ) .",
    "this issue will give some limitations to investigate special features of conics , but still enable investigating some common features of them .",
    "for example , the following generalization of pascal s hexagon theorem for conics holds ( see fig .",
    "[ pascal ] ) :        let @xmath27 be the union of an ellipse and a hyperbola , both defined with foci @xmath5 , @xmath6 and circumpoint @xmath7 .",
    "let @xmath28 denote line @xmath29 and let the perpendicular bisector of @xmath28 be @xmath30 .",
    "let @xmath31 be the reflection of @xmath7 to the line @xmath28 and @xmath32 to @xmath30 .",
    "also let us take an arbitrary point @xmath33 on @xmath27 and by reflection to @xmath28 and @xmath30 , respectively , obtain points @xmath34 and @xmath35 .",
    "now the intersections of @xmath36 and @xmath37 , @xmath38 and @xmath39 , moreover @xmath40 and @xmath41 will be collinear .    a consequence of this example that some _ formulas _ can also be difficult to distinguish , and may require further investigation by using elimination and factorization with the help of a cas .    in general , when a construction is given , it is important to identify geometrical _ hypotheses _ which are non - distinguishable from other geometrical hypotheses because they are translated with the same algebraic formula .",
    "when the prover _ disproves _ the respective statement in the algebraic translation , it should not be interpreted that the geometry statement was _",
    "this is the case when attempting to prove that the internal bisectors of a triangle are concurrent : the algebraic translation actually _ disproves _ that the union of the internal and external angle bisectors are concurrent .",
    "also it is important to identify geometrical _ theses _ which are non - distinguishable from other geometrical theses because they are translated with the same algebraic formula .",
    "when the prover _ proves _ the respective statement in the algebraic translation , it should not be interpreted that the geometry statement was _",
    "true_.      apart from considering these issues , we managed to handle many typical classroom situations , and we report that most `` easy '' tools are implemented , and also some other tools from the `` middle '' and `` difficult to use '' toolset .",
    "the following basic geometrical shapes are now implemented : segment , line , ray and vector , each defined by two points , circle defined with center and through point or through three points , angle , parabola with focus point and directrix , ellipse and hyperbola defined with two focus points .",
    "this table summarizes them , and also those tools which can operate on the basic geometrical shapes ( the latter ones printed in italicized description , underlined objects are new enhancements compared to @xcite ) :    > = .5x > = 1.2x > = .5x>=1.8x    tool & description & difficulty & implementation remarks + & point & easy & + & line & easy & + & segment & easy & + & circle through 3 points & easy & + & _ midpoint or center _ & easy & points and segments + & _ perpendicular bisector _ & easy & at line and segment + & & easy & + & & middle & + & & middle & + & & middle & + & circle with center through point & middle & + & & middle & + & _ intersect _ & middle & line with line ( can not decide properly for segments ) , with circle , , , ; circle with circle ( for other conics we can not decide properly ) + & _ perpendicular line _ & middle & at line through point + & _ parallel line _ & middle & with line through point + & & middle & + & & middle & + & & middle & + & & middle & + & & difficult & + & & difficult & + & &  & + & &  & + & &  & + & &  & +    the remaining , yet unimplemented `` easy '' tools in geogebra are : _ conic through 5 points _ and _ slope_. the former one is actually not widely used in the classroom , and the latter is a non - synthetic tool , that is , it is related to _ analytic geometry_. some other missing , but planned features are listed in section [ future ] .",
    "let @xmath27 be a circle with center @xmath5 and circumpoint @xmath6 .",
    "let @xmath28 be a line through @xmath6 and @xmath7 .",
    "now  not considering some degenerate cases  reflecting line @xmath28 about @xmath27 the image is a circle , that is , for arbitrary point @xmath42 its reflection @xmath34 about @xmath27 always lies on the same circle ( which is the circumcircle of points @xmath5 , @xmath43 and @xmath31 , where @xmath44 and @xmath31 are the mirror images of @xmath6 and @xmath7 about @xmath27 , respectively ) .    in other words ,",
    "_ an inversion translates lines to circles in general_. to use geogebra s relation tool ( see fig .",
    "[ gt - inv ] ) one needs to set up the construction as described in the algebra view on the left ( either by selecting tools from the top , or by using commands in the input bar on the bottom ) .",
    "finally one has to select the relation tool from the top and choose point @xmath34 and line @xmath45 ( or enter the command * relation[d , d ] * in the input bar ) .",
    "geogebra now numerically checks if @xmath46 , the answer is yes , and the user can request a symbolical check by clicking on `` more@xmath47 '' .",
    "finally geogebra concludes that  under some _ non - degeneracy _ conditions  the statement is generally true .        from the computational point of view , geogebra here uses the grbner basis method .",
    "thus it sets up the follwoing 6 equations in 13 variables , but point @xmath5 will be fixed to the origin ( so there are only 11 variables remaining ) .",
    "the following log information is printed only in debug mode in geogebra , including the timestamp in the first column :    .... 19:48:26.550 //",
    "free point a(v1,v2 ) 19:48:26.550 // free point b(v3,v4 ) 19:48:26.550 c = circle[a , b ] / * circle through b with center a * / 19:48:26.551 // free point c(v5,v6 ) 19:48:26.551 a = line[b , c ] / * line through b , c * / 19:48:26.551 d = point[a ] / * point on a * / 19:48:26.555 // constrained point d(v7,v8 ) 19:48:26.555 hypotheses : 19:48:26.555 1 . -1*v7*v6+v8*v5+v7*v4 + -1*v5*v4 + -1*v8*v3+v6*v3 19:48:26.556 c ' = mirror[c ,",
    "c ] / * c mirrored at c * / 19:48:26.560 // constrained point c'(v9,v10 ) 19:48:26.561 2 .",
    "-1*v9*v6 ^ 2 + -1*v9*v5 ^ 2+v5*v4 ^ 2+v5*v3 ^ 2 + 2*v9*v6*v2 + -2*v5*v4*v2 + -1*v9*v2 ^ 2+v5*v2 ^ 2+v6 ^ 2*v1 + 2*v9*v5*v1+v5 ^ 2*v1 + -1*v4 ^ 2*v1 + -2*v5*v3*v1 + -1*v3 ^ 2*v1 + -2*v6*v2*v1 + 2*v4*v2*v1 + -1*v9*v1 ^ 2 + -1*v5*v1 ^ 2 + 2*v3*v1 ^ 2 19:48:26.562 3 .",
    "-1*v10*v6 ^ 2 + -1*v10*v5 ^ 2+v6*v4 ^ 2+v6*v3 ^ 2 + 2*v10*v6*v2+v6 ^ 2*v2+v5 ^ 2*v2 + -2*v6*v4*v2 + -1*v4 ^ 2*v2 + -1*v3 ^ 2*v2 + -1*v10*v2 ^ 2 + -1*v6*v2 ^ 2 + 2*v4*v2 ^ 2 + 2*v10*v5*v1 + -2*v6*v3*v1 + -2*v5*v2*v1 + 2*v3*v2*v1 + -1*v10*v1 ^ 2+v6*v1 ^ 2",
    "19:48:26.562 d ' = mirror[d , c ] / * d mirrored at c * / 19:48:26.566 // constrained point d'(v11,v12 ) 19:48:26.567 4 .",
    "-1*v11*v8 ^ 2 + -1*v11*v7 ^ 2+v7*v4 ^ 2+v7*v3 ^ 2 + 2*v11*v8*v2 + -2*v7*v4*v2 + -1*v11*v2 ^",
    "2+v7*v2 ^ 2+v8 ^ 2*v1 + 2*v11*v7*v1+v7 ^ 2*v1 + -1*v4 ^ 2*v1 + -2*v7*v3*v1 + -1*v3 ^ 2*v1 + -2*v8*v2*v1 + 2*v4*v2*v1 + -1*v11*v1 ^ 2 + -1*v7*v1 ^ 2 + 2*v3*v1 ^ 2 19:48:26.568 5 .",
    "-1*v12*v8 ^ 2 + -1*v12*v7 ^ 2+v8*v4 ^ 2+v8*v3 ^ 2 + 2*v12*v8*v2+v8 ^ 2*v2+v7 ^ 2*v2 + -2*v8*v4*v2 + -1*v4 ^ 2*v2 + -1*v3 ^ 2*v2 + -1*v12*v2 ^ 2 + -1*v8*v2 ^ 2 + 2*v4*v2 ^ 2 + 2*v12*v7*v1 + -2*v8*v3*v1 + -2*v7*v2*v1 + 2*v3*v2*v1 + -1*v12*v1 ^",
    "2+v8*v1 ^ 2 19:48:26.568 hypotheses have been processed .",
    "19:48:26.574 substitutions : { v1=0 , v2=0 } 19:48:26.574 thesis reductio ad absurdum ( denied statement ) ...",
    "19:48:26.586 6 .",
    "-1 + -1*v13*v11*v10 ^ 2*v4+v13*v12 ^ 2*v9*v4+v13*v11 ^ 2*v9*v4 + -1*v13*v11*v9 ^ 2*v4+v13*v11*v10*v4 ^ 2 + -1*v13*v12*v9*v4 ^ 2 + -1*v13*v12 ^ 2*v10*v3 + -1*v13*v11 ^ 2*v10*v3+v13*v12*v10 ^ 2*v3+v13*v12*v9 ^ 2*v3+v13*v11*v10*v3 ^ 2 + -1*v13*v12*v9*v3 ^ 2+v13*v11*v10 ^ 2*v2 + -1*v13*v12 ^ 2*v9*v2 + -1*v13*v11 ^ 2*v9*v2+v13*v11*v9 ^ 2*v2 + -1*v13*v11*v4 ^ 2*v2+v13*v9*v4 ^ 2*v2+v13*v12 ^ 2*v3*v2+v13*v11 ^ 2*v3*v2 + -1*v13*v10 ^ 2*v3*v2 + -1*v13*v9 ^ 2*v3*v2 + -1*v13*v11*v3 ^ 2*v2+v13*v9*v3 ^ 2*v2 + -1*v13*v11*v10*v2 ^ 2+v13*v12*v9*v2 ^ 2+v13*v11*v4*v2 ^ 2 + -1*v13*v9*v4*v2 ^ 2 + -1*v13*v12*v3*v2 ^ 2+v13*v10*v3*v2 ^ 2+v13*v12 ^ 2*v10*v1+v13*v11 ^ 2*v10*v1 + -1*v13*v12*v10 ^ 2*v1 + -1*v13*v12*v9 ^ 2*v1 + -1*v13*v12 ^ 2*v4*v1 + -1*v13*v11 ^ 2*v4*v1+v13*v10 ^ 2*v4*v1+v13*v9 ^ 2*v4*v1+v13*v12*v4 ^ 2*v1 + -1*v13*v10*v4 ^ 2*v1+v13*v12*v3",
    "^ 2*v1 + -1*v13*v10*v3 ^ 2*v1 + -1*v13*v11*v10*v1 ^ 2+v13*v12*v9*v1 ^ 2+v13*v11*v4*v1 ^ 2 + -1*v13*v9*v4*v1 ^ 2 + -1*v13*v12*v3*v1 ^ 2+v13*v10*v3*v1 ^ 2 19:48:26.592 eliminating system in 11 variables ( 6 dependent ) ....    then the underlying cas ( here giac ) eliminates variables v8 , v9 , v10 , v11 , v12 and v13 to describe non - degeneracy conditions between the coordinates of the free points .",
    "the obtained equation system in factorized form is produced in the following output ( which is compatible with singular s arrays , cf .",
    "@xcite ) :    .... [ 1 ] :   [ 1 ] :    _ [ 1]=1    _ [ 2]=-v6 ^ 2-v5 ^ 2    _ [ 3]=v7   [ 2 ] : 1,1,1 [ 2 ] :   [ 1 ] :    _ [ 1]=1    _ [ 2]=v4 ^ 2+v3 ^ 2    _ [ 3]=v5    _ [ 4]=v7   [ 2 ] : 1,1,1,1 ... [ 12 ] :   [ 1 ] :    _ [ 1]=1    _ [ 2]=v4*v6*v7 ^ 3-v4*v6*v7 ^ 2*v3-v4*v6*v7*v5 ^ 2+v4*v6*v5 ^ 2*v3-v6 ^",
    "2*v5*v3 ^ 2+v7 ^ 3*v5*v3-v7 ^ 2*v5*v3 ^ 2-v7*v5 ^ 3*v3   [ 2 ] : 1,1 [ 13 ] :   [ 1 ] :    _ [ 1]=1    _ [ 2]=v4 ^ 2+v3 ^ 2    _ [ 3]=-v5*v4+v6*v3    _ [ 4]=-1   [ 2 ] : 2,2,1,1 ....    this is interpreted by geogebra as 13 possible sets of degeneracy conditions . here  because of its geometrical meaning , simplicity and being fully synthetic  the 13th set will be selected , which means : `` if ` ( v4 ^ 2+v3 ^ 2)^2*(-v5*v4+v6*v3 ) ` differs from @xmath48 , then the thesis will be true on all possible values of the coordinates of the free points '' . since @xmath49 , @xmath50 and @xmath51 , this clearly means that the two non - degeneracy conditions being shown are `` @xmath5 differs from @xmath6 '' ( that is , circle @xmath27 is non - degenerate ) and `` @xmath5 , @xmath6 and @xmath7 are not collinear '' ( that is , such a line must be chosen for @xmath28 which is not going through the center of @xmath27 ) .",
    "finally , geogebra concludes that    .... 19:48:26.714 statement is generally true 19:48:26.714 benchmarking : 487 ms 19:48:26.717 output for provedetails : null = { true , { \" arecollinear[a , b , c ] \" , \" areequal[a , b ] \" } } ....    this computation is done faster than half of a second .      technically speaking , geogebra is a java application . from the developer",
    "s point of view , the java public interface symbolicparametersbotanaalgo has to be implemented in geogebra s algo * classes by creating suitable algebraic equations ( and corresponding new variables ) to describe the symbolic background of a newly used tool .    to check the validity of a thesis ,",
    "the public interface symbolicparametersbotanaalgoare must be implemented .",
    "currently the following checks are implemented : collinearity , concurrency , concyclicity , congruency , equality , parallelism , perpendicularity , incidence , and formula checking ( to prove equations ) .      in our improvements",
    "the benchmark suite was extended by additional 140 theorems .",
    "57 of these extra tests were chosen from @xcite  these tests were computed in chou s book by using wu s @xcite characteristic method .    here",
    "we summarize our results by sharing a list of the recent benchmarking outputs .",
    "geogebra s prover benchmarking system is available as a command line tool in its source folder ` test / scripts / benchmark / prover/ ` .",
    "geogebra s desktop version runs as a java native application on the mostly used operating system platforms including windows , mac os x and linux . due to the internally used native giac cas each platform requires its own compiled version of the embedded computer algebra system .",
    "the following table is the output of the `` jar - paper '' scenario , launched by the command line ` xvfb - run ./runtests -s jar - paper -r ` in this folder .",
    "this scenario tests the * prove * command exclusively .",
    "see also @xcite .",
    "* the first column abbreviates the name of the test cases . *",
    "column e1 ( `` engine 1 '' ) refers to recio s exact check method programmed by simon weitzhofer .",
    "* column e2 ( `` engine 2 '' ) refers to the grbner basis method via singularws ( also known as botana s method ) programmed by the authors of this paper .",
    "( see @xcite for more on singularws . ) * column e2/giac refers to grbner basis method via the giac computer algebra tool ( instead of singularws ) programmed by bernard parisse and the authors of this paper .",
    "* column e3a ( `` engine 3a '' ) refers to opengeoprover s wu s method implementation programmed by ivan petrovi and predrag janii . * column e3b ( `` engine 3b '' ) refers to opengeoprover s area method programmed by damien desfontaines . *",
    "the auto approach refers to the automatic selection of methods which is already implemented in geogebra and it usually starts with `` engine 1 '' and then it continues with `` engine 2 '' ( either via singularws or giac : if singularws is available , then in singularws , otherwise in giac ) . if the grbner basis method is not conclusive , then `` engine 3a '' is tried .",
    "if it is not conclusive either , then opengeoprover s area method ( engine 3b ) is used .",
    "see @xcite for more details about the used methods .",
    "explanation of the used colors :    * green means that the test returns a correct yes / no answer .",
    "intensity of green means speed ( the lighter the slower ) .",
    "numbers are in milliseconds .",
    "* pink means that geogebra returns the wrong answer . *",
    "yellow means the output is not conclusive , thus using this method geogebra shows `` undefined '' , i.e. there is no error here . *",
    "the r. ( `` result '' ) column provides some extra information about the result , such as f ( `` false '' ) when the statement was false on purpose .",
    "the s. ( `` speed '' ) column shows the timing .",
    "highlighted entries are the best results , italicized entries are the slowest ( but working ) results in a row .",
    "the test cases are also available for download in geogebra s .ggb format from the geogebra online source code directly .    for testing we used a pc with 16 gb ram , 8 @xmath52 intel(r )",
    "core(tm ) i7 cpu 860 @ 2.80ghz , and linux mint 17.2 .",
    "we highlight that :    * our theorem corpus has a significant number of test cases .",
    ". @xcite . * the best performing theorem prover  when using our corpus  is the complex algebraic geometry prover via singular @xcite . here",
    "the ( * ? ? ?",
    "* ,  4 ) algorithm was used .",
    "timing is remarkably under one second in most test cases .",
    "* the table can be misleading when investigating other columns .",
    "actually , there is no implementation for intersections with conics in geogebra for recio s method .",
    "also e2/giac can use a different algorithm with better ( but slightly slower ) results .",
    "some geogebra commands are not yet implemented in the communication layer between geogebra and opengeoprover , that is , columns e3a and e3b show only a limited amount of positive test cases . * for the end user the significant case is the last column , since singular is disabled by default to ensure the same behavior on offline and online runs .",
    "the web version runs in a web browser .",
    "all major browsers including google chrome , mozilla firefox and internet explorer are supported .",
    "the following table was generated by using the command line ` xvfb - run ./runtest -p \" auto web \" -r ` in this folder .",
    "it compares the outputs of the * prove * command in the desktop version ( `` auto '' ) and the web version ( `` web '' ) .",
    "we highlight that :    * the web version does not return any incorrect output in any cases . *",
    "it is properly working in 125/200 cases ( 62.5% ) which is 86.2% of the performance ratio of the desktop version . *",
    "the web version is definitely slower than the desktop version by a ratio between 2 and 6 . * despite its limited availability and speed , the web version is already applicable in many classroom situations .",
    "the users only need a web browser which should be accessed not only on desktop computers and laptops , but also on tablets and mobile phones .      to sum up , we list some important theorems which are usually discussed in secondary schools .",
    "now they can be proven with geogebra s help , that is , at least a yes / no answer is provided for many theorems , including :    * . . .",
    "thales theorem .",
    "* concurrency of medians , bisectors , altitudes .",
    "euler line .",
    "the midline theorem , varignon s theorem . the nine points circle .",
    "simson s theorem .",
    "* basic properties of translations and . *   * , . desargues s theorem , pappus theorem . *",
    "the underlined theorems can be proven with the internal complex algebraic geometry prover in geogebra by using the enhancements implemented in the last milestone in our work .",
    "finally , we summarize the currently planned new features in the forthcoming versions of geogebra .",
    "c x x    geogebra tool & description & to implement + & _ area _ & of conics + & _ translate by vector _ & line , segment , ray , circle , parabola , ellipse , hyperbola , polygons + & _ reflect about line _ & ellipse , hyperbola + & _ reflect about circle _ & line + & _ rotate around point _ & general angles +    there is still room for further enhancements :    * improve formula handling by eliminating non - squared quantities automatically and identifying formulas for a correct decision about the truth of the statement . *",
    "currently it is not possible to mirror a line about a circle directly : in this case the implementation should handle that the object type is changing from line to circle in general . *",
    "the * showproof * command @xcite might be implemented in cases when a readable proof can be produced automatically . *",
    "allow proofs for 3d euclidean geometry ( cf .",
    "@xcite ) . *",
    "improve grbner bases computations in giac to implement transcendent coefficients ( see ( * ? ? ?",
    "* ,  4 ) ) .",
    "this would speed up computations in a number of cases which are currently infeasible : an indirect reduction of variables would be achieved in this way .",
    "* geogebra s * locusequation * command is capable of computing algebraic loci @xcite . it would be possible to unify the code base for the locus and the prover subsystem , and the unified system",
    "could be maintained and improved easier .",
    "also implementing conic sections for recio s exact check method would speed up geogebra s proofs significantly .",
    "the theorem proving subsystem in geogebra is a joint work with contributions from several researchers , programmers and teachers .",
    "we are especially thankful to bernard parisse for improving the giac cas to be competitive to singular and some commercial systems , making possible that geogebra has a robust embedded theorem prover also .",
    "we are grateful to toms recio , predrag janii , julien narboux and francisco botana for their useful hints to improve the text of this paper , and to markus hohenwarter and judit robu for supporting our work ."
  ],
  "abstract_text": [
    "<S> we report about significant enhancements of the complex algebraic geometry theorem proving subsystem in geogebra for automated proofs in euclidean geometry , concerning the extension of numerous geogebra tools with proof capabilities . as a result </S>",
    "<S> , a number of elementary theorems can be proven by using geogebra s intuitive user interface on various computer architectures including native java and web based systems with javascript . </S>",
    "<S> we also provide a test suite for benchmarking our results with 200 test cases .    </S>"
  ]
}
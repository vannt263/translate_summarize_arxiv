{
  "article_text": [
    "an important goal of nuclear structure theory is to develop the computational tools for a systematic description of nuclei across the chart of the nuclides .",
    "there is hardly any alternative to self - consistent mean - field ( scmf ) for the starting point of a global theory , but the scmf has to be extended by the generator coordinate method ( gcm ) or other means to calculate spectroscopic observables .",
    "there is a need for computational tools to carry out the scmf efficiently in the presence of the multiple constraints to be used for the gcm . besides particle number ,",
    "quantities that may be constrained include moments of the density , angular momentum , and in the hartree - fock - bogoliubov ( hfb ) theory , characteristics of the anomalous densities .",
    "the gradient method described by ring and schuck ( @xcite , section 7.3.3 ) is very suitable for this purpose : it is robust and easily deals with multiple constraints .",
    "however , the actual computational aspects of the method as applied to hfb have not been well documented in the literature .",
    "this is in contrast to methods based on diagonalizing the hfb matrix eigenvalue equation .",
    "here there are several codes available in the literature , eg .",
    "other , less used , methods to solve the hfb equation with multiple constraints can be found in the literature ; for example the method described in ref .",
    "@xcite is close in spirit to the one presented here .",
    "we note also that the computational issues for using the gradient method in nuclear hartree - fock theory have been discussed in detail in ref .",
    "that paper also contains references to related techniques such as the imaginary time step method .",
    "here we will describe an implementation of the gradient algorithm for hfb following the iterative method used by robledo and collaborators @xcite .",
    "the code presented here , hfb_shell , is available as supplementary material to this article ( see appendix ) .",
    "the code has separated out the parts that are basic to the gradient method and the parts that are specific to the details of the hamiltonian . as an example",
    ", the code here contains a module for application to the @xmath0-shell with a shell - model hamiltonian containing one - body and two - body terms .",
    "there is a long - term motivation for this application as well .",
    "the @xmath0-shell could be a good testing ground for the extensions of scmf such as the gcm and approximations derived from gcm .",
    "since one has a hamiltonian for the @xmath0-shell that describes the structure very well , one could test the approximations to introduce correlations , such as projection , the random - phase approximation , etc and compare them with the exact results from the shell model .",
    "preliminary results along this line are discussed in @xcite . as a first step in this program",
    ", one needs a robust scmf code that treats shell - model hamiltonians .",
    "extensions to other shell model configuration spaces are straightforward and only limited by the availability of computational resources .",
    "the code described here is more general than earlier published codes in that it can treat even or odd systems equally well . the formalism for the extension to odd systems and to a statistical density matrix",
    "will be presented elsewhere @xcite .",
    "we also mention that the present code ( with a different hamiltonian module ) has already been applied to investigate neutron - proton pairing in heavy nuclei@xcite .",
    "the fundamental numerical problem to be addressed is the minimization of a one- plus two - body hamiltonian under the set of bogoliubov transformations in a finite - dimensional fock space .",
    "we remind the reader of the most essential equations , using the notation of ring and schuck @xcite .",
    "the basic variables are the @xmath1 and @xmath2 matrices defining the bogoliubov transformation .",
    "the main physical variables are the one - body matrices for the density @xmath3 and the anomalous density @xmath4 , given by [ rk ] = v^*v^t ; = v^*u^t .",
    "the hamiltonian may be defined in the fock - space representation as [ h ] h = _",
    "12_12 c^_1 c_2 + 14 _ 1234 v_1234c^_1 c^_2 c_4 c_3 .",
    "the expectation value of the hamiltonian under a bogoliubov transformation of the vacuum is given by [ h00]h^00 h= ( + - ^ * ) . in terms of the fields for the ordinary potential @xmath5 and the pairing potential @xmath6 .",
    "these are defined as [ gamma ] _ 12 = _ 34 v_1423 _ 34 ; _ 12 = _ 34 v_1234 _ 34 .",
    "the gradient method makes extensive use of the quasiparticle representation for operators related to the ordinary and anomalous densities . for a single - particle operator @xmath7 we write [ fqp ] _",
    "ij f_ijc^_i c_jc^f c = f^00 + ^f^11 ^+ ( f^02 + ^f^20 ^ ) . where @xmath8 are quasiparticle annihilation and creation operators . the gradients will be constructed from the skew - symmetric matrix @xmath9 , which for a normal one - body operator is given by [ f20 ] f^20 = u^f v^ * - v^f^t u^*. the corresponding representation for an operator @xmath10 of the anomalous density is [ gqp ] ( c^g c^- c g^ * c ) = g^00 + ^g^11 + ( ^g^20 ^+ g^02 ) the skew - symmetric matrix @xmath11 is given by [ g20 ] g^20 = u^g u^ * - v^g^ * v^*. two operators that are particularly useful to characterize the hfb states are the axial quadrupole operator @xmath12 and the number fluctuation operator @xmath13 .",
    "we define @xmath14 as q_q = 2z^2-x^2-y^2 ; its expectation value distinguishes spherical and deformed minima .",
    "the number fluctuation is an indicator of the strength of pairing condensates and is zero in the absence of a condensate .",
    "it depends on the two - body operator @xmath15 , but like the hamiltonian can be expressed in terms of one - body densities .",
    "we define it as n^2n^2- n ^2 = ( n^20 n^02 ) = 2 ( ( 1-))= -2(^ * ) .    the full expansion of the hamiltonian in the quasiparticle basis is given in eqs .",
    "( e.20-e.25 ) of @xcite .",
    "here we will mainly need @xmath16 , given by [ h20 ] h^20= h^20 + ^20 = u^h v^ * - v^h^t u^ * - v^^ * v^ * + u^u^*. where @xmath17 . starting from any hfb configuration @xmath18 one can construct a new configuration @xmath19 by the generalized thouless transformation .",
    "the transformation is defined by a skew - symmetric matrix @xmath20 having the same dimensions as @xmath18 .",
    "one often assumes that the transformation preserves one or more symmetries such as parity or axial rotational symmetry .",
    "then the @xmath18 matrices are block diagonal and @xmath20 has the same block structure .",
    "otherwise the elements of @xmath20 are arbitrary and can be real or complex .",
    "the transformation is given by [ ztrans ] u = ( u + v^*z^*)(1-z z^*)^-1/2 = u + v^*z^ * + o ( z^2 ) @xmath21 the last factor , @xmath22 , ensures that the transformed set @xmath19 satisfies the required unitarity conditions for the bogoliubov transformation .",
    "we now ask how the expectation value of some bilinear operator @xmath23 changes when the thouless transformation is applied .",
    "the result is very simple , to linear order in @xmath20 : [ z2 ] q_new^00=q^00 - ( ( q^20z^*)+)+ o(z^2 ) .",
    "the same formula applies to the hamiltonian as well , [ hnew ] h_new^00=h^00 - ( ( h^20z^*)+)+o(z^2 ) . from these formulas",
    "it is apparent that the derivative of the expectation value with respect to the variables @xmath24 in @xmath25 is , ie . @xmath26 and @xmath27 , @xmath24",
    "are treated as independent variables . ]",
    "q^00 = q^20_ij . with a formula for the gradient of the quantity to be minimized",
    ", we have many numerical tools at our disposal to carry out the minimization .",
    "it is quite straightforward to introduce constraining fields in the minimization process . as seen in eq .",
    "( [ z2 ] ) the transformation @xmath20 will not change the expectation value of @xmath23 to linear order provided @xmath28 .",
    "thus , one can change the configuration without affecting the constraint ( to linear order ) by projecting @xmath20 to @xmath29 as @xmath30 with @xmath31 . with multiple constraints ,",
    "the projection has the form [ zprime ] z_c = z - _ _ q^20_. the parameters @xmath32 are determined by solving the system of linear equations , [ lambda ] _",
    "m _ _ = ( ( q^20_z^*)+ ) where @xmath33 .",
    "since we want to minimize the energy , an obvious choice for the unprojected @xmath20 is the gradient of the hamiltonian @xmath16 . in this case",
    "the constraining parameters @xmath34 are identical to the lagrange multipliers in the usual hfb equations .",
    "we will use the notation @xmath35 for the constrained hamiltonian h_c = h-__q_.      the most obvious way to apply the gradient method is to take the direction for the change from eq .",
    "( [ zprime],[lambda ] ) , and take the length of the step as an adjustable numerical parameter .",
    "we will call this the _ fixed gradient _ ( fg )",
    "it is implemented in the program as [ zeasy ] z_= h_c^20 .",
    "typically the starting @xmath18 configuration will not satisfy the constraints , and the @xmath20 transformations must also bring the expectation values of the operators to their target values @xmath36 .",
    "the error vector @xmath37 to be reduced to zero is given by q_=",
    "q^00_- q_. we apply eq .",
    "( [ z2 ] ) to first order to obtain the desired transformation @xmath38 , [ zdq ] z_q = - _ m^-1_q_q^20_. with these elements in hand , a new configuration is computed using the transformation [ zsum ] z = z_c + z_q .",
    "this process is continued until some criterion for convergence is achieved .",
    "we shall measure the convergence by the norm of the gradient @xmath39 .",
    "this is calculated as |h_c^20| = ( ) ^1/2 .",
    "an example using this method as given is shown in fig .",
    "[ conv - eta ] .",
    "the parameter @xmath40 is fixed to some value and the iterations are carried out until convergence or some upper limit is reached .",
    "the required number of iterations varies roughly inversely with @xmath40 , up to some point where the process is unable to find a minimum in a reasonable number of iterations .",
    "there are a number of ways to speed up the iteration process .",
    "if the constraints are satisfied , the parameter @xmath40 can be increased considerably .",
    "[ singlestep ] shows the change in @xmath41 from one iteration cycle as a function of @xmath40 using @xmath29 to update .    for small values of @xmath40 , the change in constrained energy",
    "is given by the taylor expansion eq .",
    "( [ hnew ] ) , @xmath42 .",
    "this function is shown as the straight line in the figure .",
    "the actual change is shown by the black circles .",
    "one sees that @xmath40 could be doubled or tripled from the maximum value permitted in fig .",
    "[ conv - eta ] .",
    "however , the constraints and other aspects of the new @xmath18 become degraded so that such steps are not permissible for many iterations @xcite . still , one can take advantage of the possible improvement by choosing @xmath40 at each iteration taking account of the relevant information from the previous iteration .",
    "this can be extracted from the ratio r= which is close to one for too - small @xmath40 values and close to @xmath43 at the value corresponding to the steepest - descent minimum .",
    "we call such methods _ variable gradient_. we note that updates with @xmath38 alone are relatively quick because there is no need to evaluation matrix elements of the hamiltonian .",
    "these considerations are implemented in the code of ref .",
    "@xcite by interspersing cycles of iteration by @xmath38 alone among the cycles with updates by eq .",
    "( [ zsum ] ) .",
    "the choice of the preconditioner is motivated by newton s method to find zeros of a function ( here @xmath46 ) based on knowledge of its derivative .",
    "this could be accessible from the second - order term in eq .",
    "( [ hnew ] ) , but unfortunately it can not be easily computed as it involves the hfb stability matrix .",
    "however a reasonable approximation to it can be obtained from @xmath47 , the one - quasiparticle hamiltonian that , when in diagonal form , is the dominant component of the diagonal of the stability matrix .",
    "one first transforms @xmath18 to a basis that diagonalizes @xmath47 .",
    "call the eigenvalues of the matrix @xmath48 and the transformation to diagonalize it @xmath49 .",
    "the @xmath18 are transformed to @xmath19 in the diagonal quasiparticle basis by u=uc ; v=vc in the new basis the preconditioner is given by p_ij = ( e_i + e_j , e_min ) where @xmath50 is a numerical parameter of the order of 1 - 2 mev .",
    "the main effect of the preconditioner is to damp away those components of the gradient with high curvatures ( i.e. second derivatives ) which correspond to two - quasiparticle excitations with large excitation energies .",
    "this is very important for hamiltonians that have a large range of single - particle energies , such as the ones derived from commonly used nuclear energy density functionals such as skyrme and gogny .",
    ".[speedup ] number of iterations to convergence @xmath51 with various treatments of the update .",
    "( [ zeasy ] ) with fixed and variable gradients is used for the top two lines and the preconditioned gradients eq .",
    "( [ pre ] ) are used for the lower two lines .",
    "the system is   as calculated in the top first entry in table ii . [",
    "cols=\"^,^,^,^,^\",options=\"header \" , ]     the output of hfb.py reports the expectation values of the hamiltonian and the single - particle operators @xmath52 and @xmath14 at each iteration step , together with the convergence parameter @xmath53 . after the final iteration ,",
    "the values are reported for the expectation values of constraining parameters @xmath34 and the number fluctuations @xmath54 .",
    "the final @xmath18 configuration is written to the file uv.out .",
    "thus additional iterations can be performed simply by specifying uv.out as the new input file .",
    "in addition , there is a set of functions collected in the module hfb_tools.py . these are useful for making input @xmath18 configurations and for analyzing the output @xmath18 configuration , but are not needed to run hfb.py .",
    "for example , a randomizing transformation can be applied to a @xmath18 configuration by the function randomize .",
    "another useful function is canonical , used to extract the eigenvalues of the @xmath3 operator needed for the canonical representation ."
  ],
  "abstract_text": [
    "<S> a computer code is presented for solving the equations of hartree - fock - bogoliubov ( hfb ) theory by the gradient method , motivated by the need for efficient and robust codes to calculate the configurations required by extensions of hfb such as the generator coordinate method . </S>",
    "<S> the code is organized with a separation between the parts that are specific to the details of the hamiltonian and the parts that are generic to the gradient method . </S>",
    "<S> this permits total flexibility in choosing the symmetries to be imposed on the hfb solutions . </S>",
    "<S> the code solves for both even and odd particle number ground states , the choice determined by the input data stream . </S>",
    "<S> application is made to the nuclei in the @xmath0-shell using the usdb shell - model hamiltonian . </S>"
  ]
}
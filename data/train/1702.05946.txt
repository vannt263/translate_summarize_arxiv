{
  "article_text": [
    "this note treats finite and infinite directed graphs with or without loops .",
    "it is shown that every connected , finite or infinite directed graph with at least one vertex without loop is uniquely representable as a cartesian or weak cartesian product of prime graphs , and that the factorization can be computed in linear time and space for finite graphs .",
    "the note extends and unifies results by boiko et al .",
    "@xcite about the cartesian product of finite undirected graphs with loops , and by crespelle and thierry  @xcite about finite directed graphs . for infinite graphs",
    "it generalises a result by miller @xcite and imrich @xcite about the weak cartesian product .",
    "let us briefly mention that unique prime factorization with respect to the cartesian product of connected finite graphs was first shown 1960 by sabidussi @xcite , and that sabidussi also introduced the weak cartesian product .",
    "sabidussi s proof is non - algorithmic . for undirected graphs",
    "the first factorization algorithm is due to feigenbaum , hershberger and schffer @xcite .",
    "its complexity is @xmath0 , where @xmath1 is the number of vertices of the graph .",
    "subsequently the complexity was further reduced by a number of authors . the latest improvement , imrich and peterin @xcite , is linear in time and space in the number of edges .    for directed graphs",
    "the first factorization algorithm is from feigenbaum @xcite and assumes the undirected decomposition provided by @xcite .",
    "crespelle and thierry @xcite also assume an undirected decomposition and then compute the prime factorization of the directed graph in linear time and space .",
    "here we present a considerably simpler algorithm of the same complexity and extend it to the case when loops are allowed .",
    "we use the same data structure as in @xcite and wish to remark that a slight variation of the algorithm in @xcite would also allow a direct computation of the prime factors of connected directed graphs ( with or without loops ) in linear time .",
    "a directed graph @xmath2 with loops consists of a set @xmath3 of vertices together with a subset @xmath4 of @xmath5 the elements of @xmath4 are called _ arcs _ and are ordered pairs of vertices . if @xmath6 is an arc , we call @xmath7 its _ origin _ , @xmath8 its _ terminus _ , and also refer to @xmath7 and @xmath8 as _",
    "we allow that @xmath7 equals @xmath9 in this case we speak of a _ loop _ at vertex @xmath7 and say the vertex @xmath7 is _",
    "looped_. notice that it is possible that @xmath4 contains both @xmath6 and @xmath10    to make the notation better readable we often write @xmath11 instead of @xmath12 , and @xmath13 instead of @xmath14 or @xmath15    we introduce the notation @xmath16 for the class of directed graphs with loops . to every graph @xmath17 we also define its _ shadow _ @xmath18 it has the same vertex set as @xmath2 and its set of edges @xmath19 consists of all unordered pairs @xmath20 of distinct vertices for which @xmath6 , @xmath21 or both are in @xmath22 to indicate that @xmath20 is an edge , we will use the notation @xmath23 $ ] , or simply @xmath6 .",
    "we say @xmath2 is _ connected _ if @xmath24 is connected , and set the _ distance _ @xmath25 between two vertices , and the _ degree _",
    "@xmath26 of a vertex , equal to @xmath27 , resp . @xmath28 .",
    "the minimum degree of @xmath2 is denoted by @xmath29 .",
    "we also use the notation @xmath30 for the class of simple graphs , @xmath31 for the class of simple graphs with loops , and @xmath32 for the class of directed graphs without loops .",
    "the _ cartesian product @xmath33 of graphs in _",
    "@xmath16 is defined on the cartesian product @xmath34 of the vertex sets of the factors .",
    "its set of arcs is @xmath35    if @xmath2 and @xmath36 have no loops , then this is also the case for @xmath37 to obtain the definition of the cartesian product of undirected graphs , one just replaces @xmath4 by @xmath15 hence , the new definition generalizes the definition of the cartesian product of simple graphs , directed graphs , and simple graphs with loops .",
    "note that @xmath38    clearly cartesian multiplication is commutative and the trivial graph @xmath39 is a unit .",
    "it is well known that it is associative in @xmath40 that it is associative in @xmath32 and @xmath31 was shown in @xcite , resp .",
    "@xcite , for finite graphs .",
    "we defer the proof that this also holds for finite graphs in @xmath41 to section [ sec : weak ] , where we show associativity in @xmath41 with respect to the cartesian and the weak cartesian product .",
    "a nontrivial , connected graph @xmath2 with at least one unlooped vertex is called _ irreducible _ or _ prime _ with respect to cartesian multiplication if , for every factorization @xmath42 , either @xmath43 or @xmath44 has only one vertex . every finite connected graph in @xmath41 with at least one unlooped vertex is uniquely representable as a cartesian product , up to the order and isomorphisms of the factors .",
    "again we defer the proof and show in section [ sec : unique ] that unique factorization holds for finite graphs with respect to the cartesian product and for infinite graphs with respect to the cartesian or the weak cartesian product .    for our proofs and",
    "algorithms projections and layers play an important role .",
    "the _ @xmath45 projection _",
    "@xmath46 of a product @xmath47 is defined by @xmath48 and the _ @xmath49-layer @xmath50 through a vertex _",
    "@xmath11 is the subgraph induced by the set @xmath51 sometimes we will also use the notation @xmath52 instead of @xmath53    for unlooped graphs the projections @xmath54 are isomorphism , but this does not hold for graphs with loops unless @xmath50 contains an unlooped vertex , see the left part of figure [ fig : looped ] .",
    "the other part of the figure shows that directed graphs with no unlooped vertex need not have unique prime factorizations .        often we color the edges or arcs of a graph and denote the color of @xmath55 by @xmath56 for example , we usually color a product @xmath47 by @xmath57 colors such that the edges of the @xmath49-layers are assigned color @xmath58    we also need the fact that layers are convex , where a subgraph @xmath36 of a graph @xmath2 is called _ convex _ if any shortest path @xmath59 in @xmath2 between two vertices of @xmath36 is already in @xmath60 another important property we formulate as a lemma .",
    "[ le : projection ] let @xmath61 be the product of two connected graphs in @xmath30 , and @xmath62 .",
    "then there exists a unique vertex @xmath63 of shortest distance from @xmath64 to @xmath65 , and to any vertex @xmath66 there is a shortest @xmath67-path that contains @xmath68    * proof * let @xmath69 and @xmath70 .",
    "then @xmath71 is the unique vertex of @xmath72 by the distance formula ( * ? ? ?",
    "* lemma 5.2 ) @xmath73 for any @xmath74 . because @xmath75 and @xmath76 we have @xmath77 therefore @xmath78 is on a shortest @xmath67-path for any @xmath79    this also means that every vertex @xmath66 that is different from @xmath78 must have larger distance from @xmath64 than @xmath68",
    "hence @xmath78 is the unique vertex of shortest distance from @xmath64 in @xmath80 @xmath81    it will be convenient to call the vertex @xmath78 of shortest distance from a vertex @xmath64 to a layer @xmath82 the _ projection _ of @xmath64 into @xmath82 and to denote it by @xmath83 . by the projection of an arc @xmath55 we mean @xmath84 , which may be an arc or not , and if it is an arc , the orientation is not necessarily the same as that of @xmath55 .",
    "if @xmath85 and if the restriction of the projection @xmath86 to @xmath87 and @xmath88 is not an isomorphism in @xmath2 , then we call the pair @xmath87 , @xmath88 _ inconsistently directed_.    if @xmath89 and @xmath90 are in different layers with respect to a factorization @xmath91 , say @xmath92 and @xmath93 , then the vertex @xmath94 . ] , together with @xmath95 induces a square @xmath96 without diagonals .",
    "it is the only square containing @xmath64 , @xmath97 , and @xmath98 and called _",
    "product square_. we call a product square @xmath96 in @xmath99 consistently oriented if the arc or arcs between @xmath64 and @xmath97 and between @xmath98 and @xmath78 have the same orientation as the ones between @xmath100 and @xmath101 , and similarly , the arc or arcs between @xmath64 and @xmath98 and between @xmath97 and @xmath78 have the same orientation as the ones between @xmath102 and @xmath103 .",
    "it means that opposite edges , say @xmath89 , @xmath104 , represent either arcs @xmath89 , @xmath104 , or arcs @xmath55 and @xmath105 , or arcs in both directions .",
    "in this section we present two algorithms .",
    "the first one computes the prime factorization of a connected graph @xmath106 from a given prime factorization of @xmath107@xmath108 , the second computes the prime factorization of a connected graph @xmath109 , where @xmath2 has at least one unlooped vertex , from a given prime factorization of @xmath110@xmath108 , where @xmath111 denotes the graph obtained from @xmath2 by the removal of the loops .",
    "both algorithms are linear in the number of arcs .",
    "the data structures that we use are incidence and adjacency lists .",
    "the _ incidence list _ of a graph in @xmath30 lists to every edge @xmath112 $ ] its endpoints , whereas the _ adjacency list _ consists of the lists of neighbors @xmath113 , @xmath114 . every edge @xmath112 $ ] appears in @xmath113 and @xmath115 . to both of these lists",
    "we add a pointer to the place of @xmath116 in the incidence list , and in the incidence list we add pointers to the place of @xmath116 in the lists @xmath113 and @xmath115 .    for graphs @xmath2 in @xmath32 we form the lists for @xmath24 and then indicate in the incidence list for every @xmath117 $ ] whether it is the shadow of @xmath55 , @xmath89 , or both @xmath55 and @xmath89 . for loops we make an entry in the adjacency list , because @xmath64 is a neighbor of itself if it is looped .",
    "clearly the space requirement is @xmath118 , resp .",
    "@xmath119 in the directed case .",
    "we also use a bfs-_ordering _ of the vertices of @xmath2 with respect to a root @xmath120 it consists of the sets @xmath121 that contain the vertices of distance @xmath122 from @xmath120 furthermore , the vertices of @xmath2 are enumerated by bfs-_numbers _ that satisfy the condition that bfs@xmath123 bfs@xmath124 if the distance from @xmath125 to @xmath64 is larger than the one from @xmath125 to @xmath97 .",
    "layers through @xmath125 are called _ unit - layers _ and vertices of unit - layers are called _ unit - layer vertices_.    if @xmath89 is an edge or an arc , then we call @xmath97 a _",
    "down- , cross- _ , or _ up - neighbor _ of @xmath64 if , respectively , @xmath97 is in a lower @xmath121-level than @xmath64 , in the same , or in a higher @xmath121-level . for a given bfs - ordering we also subdivide every list of neighbors of a vertex @xmath64 into lists of down- , cross- or up - neighbors . for graphs in @xmath30",
    "we refer to these lists as list of _",
    "down- , cross- _ or _ up - edges _ , and remark that we will not need the list of up - neighbors , resp .",
    "up - edges , in our algorithms .",
    "if @xmath126 we color the edges of @xmath24 as described before with @xmath122 colors and subdivide every list of down- or cross - neighbors of a vertex @xmath64 into sublists of different colors , according to the color of @xmath89 .",
    "furthermore , because for any subset of down- or cross - edges of a vertex @xmath64 with color @xmath127 the projection @xmath128 is a natural bijection into the set of down- , resp .",
    "cross - edges of @xmath128 in @xmath129 , we use the same order in both lists .    to describe an edge @xmath116",
    "we thus need a vertex @xmath64 of which it is a down- , or cross edge , the fact whether it is a down - or cross - edge , its color @xmath130 and its number in the sublist of color @xmath131 .",
    "given the place of @xmath64 in the adjacency list , the color of @xmath116 and its sublist number , we can then find the place of @xmath116 in the adjacency list in constant time .",
    "furthermore , if we know the coordinates of @xmath64 , then we can find the place of @xmath64 in the adjacency list in time proportional to the number of coordinates in which @xmath64 differs from @xmath125 .    by lemma [ le : projection ]",
    "the projection @xmath132 is always closer to @xmath125 than @xmath133 unless @xmath64 already is a vertex of @xmath134    let @xmath135 be the prime factorization of a nontrivial , connected graph @xmath136 then @xmath107@xmath137@xmath138 , where the factors @xmath107@xmath138 need not be prime .",
    "let @xmath139 be their prime factorizations .",
    "then @xmath140 is a representation of @xmath107@xmath108 as a cartesian product of prime graphs .",
    "because the prime factorization is unique , it is the prime factorization of @xmath24 , up to the order and isomorphisms of the factors . in other words , for any prime factorization @xmath141 of @xmath24",
    ", there is a partition @xmath142 such that @xmath143    to find this partition we begin with the partition where the @xmath144 are one - element sets .",
    "then we combine selected sets @xmath144 until we arrive at the desired _ final partition_.",
    "the other partitions are called _",
    "temporary partitions_.    to keep track of these operations , we create a _ pointer _",
    "@xmath145 with @xmath146 if @xmath147 .",
    "we begin with the trivial partition of @xmath148 into one - element sets .",
    "whenever we move from temporary partition @xmath149 of @xmath148 to a new one , say @xmath150 , by combining some of the @xmath144 , we update the pointers .",
    "we also assign the _",
    "temporary color @xmath151 _ to the edges in the @xmath152-layer of @xmath24 , where @xmath153 note that @xmath145 produces the temporary color of any edge in constant time .    to update @xmath145 when we combine two colors , at most @xmath154 pointers have to be reset , each at constant cost",
    ". because there are only @xmath154 colors , the total cost is @xmath155 .",
    "recall that @xmath154 is the original number of factors . because every vertex meets a layer of every one of the factors , we can not have more factors than the minimum degree @xmath29 of @xmath2 .",
    "so @xmath156    algorithm [ alg : directed ] specifies when colors are combined . we have prove the correctness of the algorithm and to investigate its complexity .    a connected graph @xmath2 in @xmath157 the prime factorization @xmath141 of @xmath24 with respect to the cartesian product a _",
    "bfs_-numbering of @xmath3 with root @xmath125 the preceding data structure the prime factors of @xmath49 of @xmath2 begin with the trivial partition of @xmath148 determine its temporary color @xmath122 consider the set @xmath144 of the current temporary partition of @xmath148 set @xmath158 project the edge @xmath89 into @xmath159 combine the temporary colors of all down edges of @xmath64 scan the next vertex using the new coloring compute the products @xmath160 of @xmath161 where @xmath162 is the last partition of @xmath148 compute the subgraphs of @xmath2 induced by the @xmath163 and denote them by @xmath49    * correctness of algorithm [ alg : directed ] * in @xmath164 all vertices are unit - layer vertices and all edges coincide with their projection into the unit - layers of their color . hence all pairs @xmath89 and @xmath165 , where @xmath166 and @xmath89 a down- or cross - edge , are consistently directed .",
    "let this be the case for all pairs @xmath89 and @xmath165 where @xmath64 is in @xmath167 .",
    "suppose @xmath168 and the algorithm detects a down- or cross - edge @xmath89 of @xmath64 of temporary color @xmath122 for which @xmath89 and its projection into @xmath158 are not consistently directed .",
    "let @xmath169 and @xmath59 be a shortest path from @xmath64 to @xmath170 .",
    "clearly @xmath171 and the temporary color of all edges of @xmath59 is different from that of @xmath89 .    let @xmath172 be the projection of @xmath59 into @xmath173 then the vertices of @xmath59 , together with those of @xmath172 , induce a subgraph @xmath174 of @xmath24 that is isomorphic to the product @xmath175 $ ] .",
    "we call it a _ ladder _ and the edges of @xmath174 that are not in @xmath176 _ rungs_. all rungs @xmath6 project into @xmath177 , and , with the exception of the pair @xmath178 , all pairs @xmath179 are consistently directed , because @xmath7 is in some @xmath180 with @xmath181 . if @xmath182 denotes the rung closest to @xmath89 , then @xmath183 is a product square , because @xmath89 and @xmath184 have different colors .",
    "but then @xmath183 is an inconsistently directed product square and we have to combine the colors of its edges .",
    "now , let @xmath185 be any down - edge of @xmath64 , whose temporary color @xmath186 .",
    "then there is a shortest path @xmath187 from @xmath64 to @xmath170 that contains @xmath188 , and hence the color of @xmath185 must be combined with that of @xmath89 .",
    "when the algorithm terminates , all projections are consistently oriented .",
    "we thus arrive a factorization of @xmath2 .    we still have to show that the @xmath49 are prime , that is , that we have not merged colors unnecessarily .",
    "notice that we have only merged colors of inconsistently oriented product squares .",
    "originally we had the product squares of the decomposition @xmath141 of @xmath24 . since our operations only combined colors of edges in inconsistently directed squares , every single combination of colors was forced .",
    "* complexity of algorithm [ alg : directed ] * the projection of a vertex @xmath64 into @xmath158 has at most @xmath189 coordinates in @xmath141 that are different form those of @xmath125 , hence @xmath170 can be computed in @xmath190 time . to find the edge @xmath177",
    "we then need its type ( down- or cross - edge ) , its color ( original color ) and its sublist number , which we inherit from @xmath89 .",
    "then we can find @xmath177 in constant time and check in constant time whether the pair @xmath89 , @xmath177 is consistently directed .",
    "since the number of down - edges is bounded by @xmath191 the time complexity for each @xmath64 is thus @xmath192 , and for all vertices together it requires @xmath193 time .",
    "for the complexity of keeping track of the colorings , let us recall that we have to combine colors at most @xmath154 times and that every merging operation of two colors costs @xmath194 time , hence the overall cost is @xmath155 , of which we already know that it is @xmath195 .",
    "let @xmath2 be a connected , directed graph . given a prime factorization of the shadow @xmath24 of @xmath2 with respect to the cartesian product , one can compute the prime factorization of @xmath2 with respect to the directed product in @xmath196 time .",
    "* proof * given the adjacency lists of the prime factors of @xmath24 we can compute the data structure that we need for algorithm [ alg : directed ] in time and space that is linear in the number of arcs . if the factors are given , say , via their adjacency matrices , we can still find their adjacency lists in linear time and then continue in linear time and space .",
    "if the factorization of @xmath24 is computed by the algorithm of imrich and peterin @xcite , then one can use the data structure provided by that algorithm .",
    "we continue with the prime factorization of connected , directed graphs with loops .    a connected graph @xmath2 in @xmath197 with an unlooped vertex the prime factorization @xmath141 of @xmath111 with respect to the cartesian product a",
    "_ bfs_-numbering of @xmath3 with root @xmath125 , which is unlooped the data structure from algorithm [ alg : directed ] the prime factors of @xmath49 of @xmath2 .",
    "begin with the trivial partition of @xmath148 compute the projection of @xmath64 into the unit - layers of the products @xmath198 , where @xmath162 is the current temporary partition of @xmath148 .",
    "continue with the next @xmath64 continue with the next @xmath64 continue with the next @xmath64 compute the products @xmath160 of @xmath161 where @xmath162 is the last partition of @xmath148 compute the subgraphs of @xmath2 induced by the @xmath163 and denote them by @xmath49    * correctness of algorithm [ alg : loops ] * if the projection of an unlooped vertex @xmath64 into a unit layer ( with respect to an unlooped root ) has a loop , then @xmath64 must be contained in that layer , and hence all shortest paths form @xmath64 to the projection of @xmath64 .",
    "as in the correctness argument of algorithm [ alg : directed ] this means that the colors of all down - edges of @xmath64 have to be combined .",
    "suppose all projections of a vertex with a loop are unlooped .",
    "consider all projections that are different from @xmath125 and the respective unit - layers , that is , the layers @xmath199 , where the @xmath144 correspond to the temporary colors of the down - edges of @xmath64 .",
    "let @xmath200 be the set of the indices of these @xmath144 and form , for any proper subset @xmath201 of @xmath200 , the product @xmath202 .",
    "then the projection of @xmath64 into @xmath203 is unlooped .",
    "this means , unless we combine all colors of the down - edges of @xmath64 we will only have unlooped projections .",
    "* complexity of algorithm [ alg : loops ] * the computation of the projection of a vertex @xmath64 into @xmath204 takes @xmath205 time .",
    "the cost of computing them all is thus @xmath206 , which gives a total of @xmath207 for all vertices together .",
    "the complexity of keeping track of the colorings is @xmath195 , as in algorithm [ alg : directed ] .",
    "we have thus shown the following theorem .",
    "let @xmath2 be a connected , directed graph with loops .",
    "given a prime factorization of @xmath111 with respect to the cartesian product , one can compute the prime factors of @xmath2 with respect to the cartesian product in @xmath196 time .",
    "we consider infinite graphs now and begin with the definition of the cartesian product of infinitely many factors .",
    "[ def : prod ] let @xmath208 , @xmath209 , be a collection of graphs in @xmath16",
    ". then the cartesian product @xmath210 has as its set of vertices @xmath3 all functions @xmath211 with the property that @xmath212 we call @xmath213 the @xmath214-coordinate of @xmath64 and also denote it by @xmath215    the set @xmath4 of arcs of @xmath2 consists of all ordered pairs @xmath55 for which there exists a @xmath216 such that @xmath217 and @xmath218 for all @xmath219    furthermore , @xmath12 has a loop if at least one @xmath220 , @xmath221 , has a loop in @xmath222    this definition is equivalent to the definition of the cartesian product for two factors as given in section [ sec : prelim ] . to see this ,",
    "observe that @xmath223 by the old definition .",
    "representing the ordered pairs @xmath224 by the set of functions @xmath225 , where @xmath226 and @xmath227 , it becomes clear that the definitions are equivalent .",
    "furthermore , let @xmath1 be a positive integer and @xmath149 is an arbitrary partition of the set of integers between 1 and @xmath1 , then there clearly is a natural isomorphism between @xmath228 , the product @xmath229 and the set of functions @xmath230 , where @xmath231 this means that cartesian multiplication of finitely many sets is associative .    for infinite @xmath232 and any of its partitions @xmath233 we only have the isomorphism between @xmath234 and the set of functions @xmath235 where @xmath236 but the cartesian product of infinitely many sets is still associative .",
    "the fact that the set of factors need not be ordered in definition [ def : prod ] reflects the fact that cartesian multiplication is commutative .",
    "cartesian multiplication of directed graphs with loops is associative .",
    "* proof * let @xmath208 , @xmath209 , be a collection of directed graphs with loops , @xmath237 , @xmath238 an arbitrary partition of @xmath232 and@xmath239 we have to show that @xmath240 to see this recall that there is a natural bijection between the vertices of @xmath2 and @xmath36 .",
    "we will thus use the same notation for the vertices of @xmath2 and @xmath60    consider an arc @xmath55 in @xmath241 all coordinates of @xmath97 and @xmath64 are identical , except for one , say @xmath242 , and @xmath243 let @xmath244 and let @xmath245 be the vertex in @xmath246 with the coordinates @xmath247 , where @xmath248 analogously we define the @xmath249 then @xmath250 for @xmath251 , and in this case @xmath252 this means that @xmath55 is an arc in @xmath36 if it is an arc in @xmath241    on the other hand , if we have an arc @xmath55 in @xmath36 , then @xmath250 for all @xmath253 , except for one , say @xmath254 , for which @xmath252 but then @xmath218 for all @xmath255 for @xmath256 , and in @xmath257 there is a @xmath216 such that @xmath217 and @xmath258 for @xmath259 , hence @xmath260 thus @xmath55 is an arc in @xmath2 if it is an arc in @xmath60    for the loops we observe that all @xmath2-coordinates of a vertex @xmath64 are unlooped if and only if all @xmath36-coordinates of @xmath64 are unlooped .",
    "hence a vertex has no loop in @xmath2 if and only if it has no loop in @xmath60 @xmath81    it is easily seen , and well known , that the cartesian product of finitely many factors is connected if and only if all factors are connected , but the product of infinitely many nontrivial graphs is always disconnected .",
    "the reason is that such products contain vertices that differ in infinitely many coordinates , but every arc ( which is not a loop ) connects vertices that differ in exactly one coordinate , which means that the coordinates of any two vertices that are connected by a path can differ in only finitely many coordinates .",
    "the connected components of the cartesian product @xmath261 of infinitely many connected factors are called _ weak cartesian products_. we will use the notation @xmath262 to indicate the component that contains the vertex @xmath263    for finite graphs , or for products of finitely many factors , the cartesian product and the weak cartesian product coincide .",
    "it is well known that simple , connected graphs have unique prime factorizations with respect to the weak cartesian product ; see @xcite .",
    "we complete this note by showing that this is also the case for directed graphs with loops .",
    "our proof is direct , it does not use the result for undirected graphs .",
    "* proof * let @xmath2 be a connected graph in @xmath16 and @xmath7 an unlooped vertex . consider all possible representations of @xmath2 as products of two factors @xmath264 , @xmath265 , and let @xmath116 be an arc incident with @xmath266 observe that , for any @xmath267 , exactly one of the layers @xmath268 , @xmath269 contains @xmath270 we denote it by @xmath271 and form @xmath272 clearly @xmath273 is convex in @xmath2 , because it is the intersection of convex subgraphs of @xmath241 also , if @xmath274 is another arc incident with @xmath7 , and if @xmath275 , then there exist @xmath267 such that @xmath276 then @xmath277 hence , any two distinct @xmath278 , @xmath279 have only the vertex @xmath7 in common .    we will show that @xmath280 is a factor of @xmath2 , or , to be more precise , a unit layer with basepoint @xmath7 of a factorization of @xmath2 , and that @xmath2 is the cartesian or weak cartesian product of all distinct @xmath273-s .",
    "note , if @xmath280 is a factor , then it must be prime , otherwise it would not be the intersection of all layers containing @xmath116 , and if @xmath59 is a prime factor of @xmath2 , and @xmath116 an arc incident with @xmath7 that projects to an arc of @xmath59 , then @xmath281    hence , if @xmath208 , @xmath209 , denotes the set of all distinct @xmath273-s , and if we can show that @xmath282 then this is the unique representation of @xmath2 as a cartesian or weak cartesian product .",
    "we now define the coordinates of a vertex @xmath64 of @xmath2 as the vertices of shortest distance in the @xmath273-s from @xmath283 so the @xmath273-coordinate of @xmath11 is the unique vertex of @xmath273 that is closest to @xmath64 .",
    "clearly all coordinates of @xmath7 are @xmath266    consider a vertex @xmath284 if @xmath64 is either in @xmath285 or in @xmath269 for all @xmath265 , then @xmath64 is in @xmath273 , where @xmath116 is an arc incident with @xmath7 on an arbitrary shortest path from @xmath7 to @xmath283 so it is identical to its coordinate in @xmath286 all other coordinates clearly are @xmath266 otherwise there must be a @xmath287 such that @xmath288 , for @xmath289 let @xmath290 be the projection of @xmath64 into @xmath291 , where @xmath292 is chosen from @xmath293 notice that @xmath294 if there is a @xmath295 such that @xmath296 , for @xmath297 , then we form @xmath298 as the projection of @xmath290 into @xmath299 , @xmath300 as before @xmath301 , hence this process can not continue indefinitely .",
    "it ends when , for some @xmath57 , @xmath302 , or when @xmath303 is either in @xmath285 or in @xmath269 for all @xmath265 , and hence , by the previous argument , in a @xmath273 , where @xmath116 is an arc incident with @xmath7 that is on a shortest path to @xmath304 notice that @xmath305 and that @xmath306 hence , by lemma [ le : projection ] , for any vertex @xmath307 there is a shortest @xmath308-path that passes through @xmath309 similarly , there is a shortest @xmath310-path through @xmath298 , and finally through @xmath304 hence , if @xmath78 is on a shortest path from @xmath273 to @xmath64 , then it must be equal to @xmath304    thus , @xmath303 is the unique vertex of shortest distance from @xmath273 to @xmath64 , and thus its @xmath273-coordinate .",
    "note that , by the construction of @xmath303 , every @xmath64 can have at most finitely many coordinates that are different from @xmath266    we still have to show that different vertices have different coordinates .",
    "let @xmath311 , where @xmath312 and @xmath116 is an arc incident with @xmath7 on a shortest @xmath313-path .",
    "suppose first that , for any @xmath265 , the vertices @xmath97 and @xmath64 are either both in @xmath314 , or both in @xmath315 then @xmath97 and @xmath64 are both in @xmath273 , and equal to their @xmath273 coordinates , which are different .",
    "if this is not the case , then there is a @xmath267 , such that the projections of @xmath97 and @xmath64 into at least one of @xmath314 or @xmath316 are distinct and different from @xmath317 , we call them @xmath318 we can continue this until both @xmath319 and @xmath303 are in the same @xmath286 but then the @xmath273-coordinate of @xmath64 is @xmath7 and different from the @xmath273-coordinate of @xmath320      first the arcs .",
    "let @xmath55 be an arc in @xmath241 if @xmath321 , then @xmath55 is equal to its projection into @xmath273 , and all the other projections , that is , coordinates , are @xmath266 otherwise we proceed as above , when we showed that different vertices have different coordinates .",
    "we just have to observe that @xmath55 is an arc if and only if @xmath322 is an arc , and , by induction , that @xmath55 is an arc if and only if the projections into @xmath273 are an arc .",
    "furthermore , there is always only one projection we can choose from such that the @xmath323 remain different .",
    "so , if we alter any of the sequences of projections that sends @xmath97 into @xmath273 , then @xmath97 , @xmath64 end up in the same vertex in some other @xmath278 , which means that they have the same @xmath278-coordinates .",
    "now the loops .",
    "observe , if @xmath64 is unlooped , then this is also the case of @xmath324 , but if @xmath64 has a loop then one or both of the projections into @xmath325 or @xmath326 have a loop .",
    "we choose for @xmath290 a projection with a loop and continue like this .",
    "then this process ends in a coordinate of @xmath64 that has a loop . in other words , @xmath64 is unlooped if and only if all projections are unlooped ."
  ],
  "abstract_text": [
    "<S> we show that every nontrivial finite or infinite connected directed graph with loops and at least one vertex without a loop is uniquely representable as a cartesian or weak cartesian product of prime graphs . for finite graphs </S>",
    "<S> the factorization can be computed in linear time and space .    </S>",
    "<S> * keywords : * directed graph with loops ; infinite graphs ; cartesian and weak cartesian products    * mathematics subject classifications * : 05c25 , 05c20 , </S>"
  ]
}
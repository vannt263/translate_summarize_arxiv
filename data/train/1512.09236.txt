{
  "article_text": [
    "the maximum traveling salesman problem ( max tsp ) is a classical variant of the famous traveling salesman problem . in the problem",
    "we are given a complete undirected graph @xmath6 with nonnegative weights on the edges and we wish to compute a traveling salesman tour of maximum weight .",
    "max tsp , also informally known as the `` taxicab ripoff problem '' is both of theoretical and practical interest .",
    "previous approximations of max tsp have found applications in combinatorics and computational biology : the problem is useful in understanding rna interactions  @xcite and providing algorithms for compressing the results of dna sequencing  @xcite .",
    "it has also been applied to a problem of finding a maximum weight triangle cover of the graph  @xcite and to a combinatorial problem called _ bandpass-2 _",
    "@xcite , where we are supposed to find the best permutation of rows in a boolean - valued matrix , so that the weighted sum of structures called _ bandpasses _ is maximised .",
    "* previous results . * the first approximation algorithms for max tsp were devised by fisher , nemhauser and wolsey @xcite .",
    "they showed several algorithms having approximation ratio @xmath7 and one having a guarantee of @xmath8 . in @xcite kosaraju , park and stein presented an improved algorithm having a ratio @xmath9 ( @xcite ) .",
    "this was in turn improved by hassin and rubinstein , who gave a @xmath10- approximation ( @xcite ) . in the meantime serdyukov @xcite presented ( in russian ) a simple and elegant @xmath11-approximation algorithm .",
    "the algorithm is deterministic and runs in @xmath12 , where @xmath13 denotes the number of vertices in the graph .",
    "afterwards , hassin and rubinstein ( @xcite ) gave a randomized algorithm having expected approximation ratio at least @xmath14 and running in @xmath15 , where @xmath16 is an arbitrarily small constant .",
    "the first deterministic approximation algorithm with the ratio better than @xmath11 was given in @xcite by chen , okamoto and wang .",
    "it is a @xmath17-approximation and a nontrivial derandomization of the algorithm from @xcite and runs in @xmath12 .",
    "the currently best known approximation has been given by paluch , mucha and madry @xcite and achieves the ratio of @xmath1 .",
    "its running time is also @xmath12 .",
    "* related work . *",
    "it is known that max - tsp is max - snp - hard @xcite , so there exists a constant @xmath18 , which is an upper bound on the approximation ratio of any algorithm for this problem .",
    "the geometric version of the problem , where all vertices are in @xmath19 and the weight of each edge is defined as the euclidean distance of its endpoints , was considered in @xcite .",
    "the algorithm presented in this paper solves the problem exactly in polynomial time , assuming that the number @xmath20 of dimensions is constant .",
    "moreover , it is quite fast for real - life instances , in which @xmath20 is small .",
    "regarding the path version of max tsp - max - tspp ( the maximum traveling salesman path problem ) , the approximation algorithms with ratios correspondingly @xmath21 and @xmath22 have been given in @xcite .",
    "the first one is for the case when both endpoints of the path are specified and the other for the case when only one endpoint is given .",
    "another related problem is called the maximum scatter tsp ( see @xcite ) . in it",
    "the goal is to find a tsp tour ( or a path ) which maximizes the weight of the minimum weight ( lightest ) edge selected in the solution .",
    "the problem is motivated by medical imaging and some manufacturing applications .",
    "in general there is no constant approximation for this problem , but if the weights of the edges obey the triangle inequality , then it is possible to give a @xmath23-approximation algorithm .",
    "the paper studies also the more general version of the maximum scatter tsp  the max - min-@xmath24-neighbour tsp . the improved approximation results for the max - min-@xmath25-neighbour problem have been given in @xcite .    in the maximum latency tsp problem we are given a complete undirected graph with vertices @xmath26 . our goal is to find a hamiltonian path starting at a fixed vertex @xmath27 , which maximizes the total latency of the vertices .",
    "if in a given path @xmath28 the weight of the @xmath29-th edge is @xmath30 , then the latency of the @xmath31-th vertex is @xmath32 and the total latency is defined as @xmath33 .",
    "a ratio @xmath23 approximation algorithm for this problem is presented in @xcite .",
    "* our approach and results .",
    "* we start with computing a maximum weight _ cycle cover _ @xmath34 of @xmath35 .",
    "a cycle cover of a graph @xmath35 is a collection of cycles such that each vertex belongs to exactly one of them .",
    "the weight of a maximum weight cycle cover @xmath34 is an upper bound on @xmath36 , where by @xmath36 we denote the weight of a maximum weight traveling salesman tour . by computing a maximum weight perfect matching @xmath37",
    "we get another , even simpler than @xmath34 , upper bound  on @xmath38 . from @xmath34 and @xmath37",
    "we build a multigraph @xmath39 which consists of two copies of @xmath34 and one copy of @xmath37 , i.e. , for each edge @xmath3 of @xmath35 the multigraph @xmath39 contains between zero and three copies of @xmath3 . thus the total weight of the edges of @xmath39 is at least @xmath40 .",
    "next we would like to _ path-@xmath41-color _ @xmath39 , that is to color the edges of @xmath39 with three colors , so that each color class contains only vertex - disjoint paths .",
    "the paths from the color class with maximum weight can then be patched in an arbitrary manner into a tour of weight at least @xmath42 .",
    "_ technique of eliminating difficult subgraphs via half - edges .",
    "_   however , not every multigraph @xmath39 can be path-3-colored .",
    "for example , a subgraph of @xmath39 obtained from a triangle @xmath43 of @xmath34 such that @xmath37 contains one of the edges of @xmath43 ( such triangle is called a _ @xmath41-kite ( of @xmath39 ) _ ) can not be path-3-colored as , clearly , it is impossible to color such seven edges with three colors and not create a monochromatic triangle .",
    "similarly , a subgraph of @xmath39 obtained from a square @xmath44 ( i.e. , a cycle of length four ) of @xmath34 such that @xmath37 contains two edges connecting vertices of @xmath44 ( such square is called a _ @xmath45-kite ( of @xmath39 ) _ ) is not path-3-colorable . to find a way around this difficulty , we compute another cycle cover @xmath46 _",
    "improving @xmath34 with respect to @xmath37 _ , which is a cycle cover that does not contain any @xmath41-kite or @xmath45-kite of @xmath39 and whose weight is also at least @xmath36 .",
    "an important feature of @xmath46 is that it may contain _ half - edges_. a half - edge of an edge @xmath3 is , informally speaking , a half of the edge @xmath3 that contains exactly one of its endpoints .",
    "half - edges have already been introduced in @xcite .",
    "computing @xmath46 is done via a novel reduction to a maximum weight perfect matching .",
    "it is , to some degree , similar to computing a directed cycle cover without length two cycles in @xcite , but for max tsp we need much more complex gadgets .    from one copy of @xmath46 and @xmath37",
    "we build another multigraph @xmath47 with weight at least @xmath48 .",
    "it turns out that @xmath47 can always be _",
    "path-@xmath25-colored_. the multigraph @xmath39 may be non - path-@xmath41-colorable - if it contains at least one kite .",
    "we notice , however , that if we remove one arbitrary edge from each kite , then @xmath39 becomes path-@xmath41-colorable .",
    "the edges removed from @xmath39 are added to @xmath47 . as a result",
    ", the modified @xmath47 may stop being path-@xmath25-colorable . to remedy this ,",
    "we in turn remove some edges from @xmath47 and add them to @xmath39 .",
    "in other words , we find two disjoint sets of edges - a set @xmath49 and a set @xmath50 , called _ exchange sets _ such that the multigraph @xmath51 is path-@xmath41-colorable and the multigraph @xmath52 is path-@xmath25-colorable .",
    "since @xmath39 and @xmath47 have the total weight at least @xmath53 , by path-@xmath41-coloring @xmath54 and path-@xmath25-coloring @xmath55 we obtain a @xmath0 - approximate solution to max tsp .    _ edge coloring . _ the presented algorithms for path-@xmath41-coloring and path-@xmath25-coloring",
    "are essentially based on a simple notion of a _ safe edge _ , i.e. , an edge colored in such a way that it is guaranteed not to belong to any monochromatic cycle , used in an inductive way . the adopted approach may appear simple and straightforward .",
    "for comparison , let us point out that the method of path-@xmath41-coloring the multigraph obtained from two directed cycle covers described in @xcite is rather convoluted .    generally , the new techniques are somewhat similar to the ones used for the directed version of the problem - max atsp in @xcite .",
    "we are convinced that they will prove useful for other problems related with tsp , cycle covers or matchings .",
    "the main result of the paper is    there exists a @xmath0-approximation algorithm for max tsp .",
    "its running time is @xmath12 .",
    "we compute a maximum weight cycle cover @xmath34 of a given complete undirected graph @xmath6 and a maximum weight perfect matching @xmath37 of @xmath35 .",
    "we are going to call cycles of length @xmath29 , i.e. , consisting of @xmath29 edges * _ @xmath29-cycles_*. also sometimes @xmath41-cycles will be called * _ triangles _ * and @xmath45-cycles  * _ squares_*. the multigraph @xmath39 consists of two copies of @xmath34 and one copy of @xmath37 .",
    "we want to color each edge of @xmath39 with one of three colors of @xmath56 so that each color class consists of vertex - disjoint paths .",
    "the _ graph _",
    "@xmath39 is a subgraph of the _ multigraph _ @xmath39 that contains an edge @xmath57 iff the multigraph @xmath39 contains an edge between @xmath4 and @xmath5 .",
    "the path-@xmath41-coloring of @xmath39 can be equivalently defined as coloring each edge of ( the graph ) @xmath39 with the number of colors equal to the number of copies contained in the multigraph @xmath39 . from this time on , unless stated otherwise , @xmath39 denotes a graph and not a multigraph .",
    "we say that a colored edge @xmath3 of @xmath39 is * _ safe _ * if no matter how we color the so far uncolored edges of @xmath39 @xmath3 is guaranteed not to belong to any monochromatic cycle of @xmath39 .",
    "an edge @xmath3 of @xmath37 is said to be * _ external _ * if its two endpoints belong to two different cycles of @xmath34 .",
    "otherwise , @xmath3 is * _ internal_*. we say that an edge @xmath3 is incident to a cycle @xmath58 if it is incident to at least one vertex of @xmath58 .",
    "we prove the following useful lemma .",
    "[ col ] consider a partial coloring of @xmath39 .",
    "let @xmath58 be any cycle of @xmath34 such that for each color @xmath59 there exists an edge of @xmath37 incident to @xmath58 that is colored @xmath60 .",
    "then we can color @xmath58 so that each edge of @xmath58 and each edge incident to one of the edges of @xmath58 is safe .",
    "* proof .",
    "*  the proposed procedure of coloring @xmath58 is as follows .",
    "if there exists an edge of @xmath58 that also belongs to @xmath37 , we color it with all three colors of @xmath61 . for each uncolored edge of @xmath37 incident to @xmath58 , we color it with an arbitrary color of @xmath61 .",
    "next , we orient the edges of @xmath58 ( in any of the two ways ) so that @xmath58 becomes a directed cycle @xmath58 .",
    "let @xmath2 be any uncolored edge of @xmath58 oriented from @xmath4 to @xmath5 .",
    "then , there exists an edge @xmath62 of @xmath37 incident to @xmath4 .",
    "if @xmath62 is contained in @xmath58 , then we color @xmath3 with any two colors of @xmath61 .",
    "otherwise @xmath62 is colored with some color @xmath60 of @xmath61",
    ". then we color @xmath3 with the two colors belonging to @xmath63 .",
    "first , no vertex of @xmath58 has three incident edges colored with the same color , as for each vertex its outgoing edge is colored with different colors than an incident matching edge .",
    "second , as for each color @xmath59 there is a matching edge incident to @xmath58 colored with @xmath60 , there exists an edge of @xmath58 that is not colored @xmath60 , thus @xmath58 does not belong to any color class , i.e. there exists no color @xmath59 such that each edge of @xmath58 is colored with @xmath60 . let us consider now any edge @xmath2 of @xmath37 incident to some edge of @xmath58 and not belonging to @xmath58 .",
    "the edge @xmath3 is colored with some color @xmath60 .",
    "suppose also that vertex @xmath4 belongs to @xmath58 ( @xmath5 may belong to @xmath58 or may not belong to @xmath58 . )",
    "let @xmath64 be any other vertex of @xmath58 such that some edge of @xmath65 colored @xmath60 is incident to it ( @xmath64 may be equal to @xmath5 if @xmath3 is internal ) . to show that @xmath3 is safe",
    ", it suffices to show that there exists no path consisting of edges of @xmath66 that connects @xmath4 and @xmath64 and whose every edge is colored @xmath60 .",
    "however , by the way we color edges of @xmath58 we know that the outgoing edges of @xmath4 and @xmath64 are not colored with @xmath60 because of the way we oriented the cycle , there is no path connecting @xmath4 and @xmath64 contained in @xmath58 that starts and ends with incoming edge .",
    "@xmath67 +    for each cycle @xmath58 of @xmath34 we define its * _ degree of flexibility _ * denoted as @xmath68 and its * _ colorfulness _ * , denoted as @xmath69 .",
    "the degree of flexibility of a cycle @xmath58 is the number of internal edges of @xmath37 incident to @xmath58 and the colorfulness of @xmath58 is the number of colors of @xmath61 that are used for coloring the external edges of @xmath37 incident to @xmath58",
    ".    from lemma [ col ] we can easily derive    [ cola ] if a cycle @xmath58 of @xmath34 is such that @xmath70 , then we can color @xmath58 so that each edge of @xmath58 and each edge incident to one of the edges of @xmath58 is safe .    sometimes , even if a cycle @xmath58 of @xmath34 is such that @xmath71 , we can color the edges of @xmath58 so that each of them is safe .",
    "for example , suppose that @xmath58 is a square consisting of edges @xmath72 and there are four external edges of @xmath37 incident to @xmath58 , all colored @xmath73 .",
    "suppose also that each external edge incident to @xmath58 is already safe .",
    "then we can color @xmath74 with @xmath73 and @xmath25 , @xmath75 with @xmath73 and @xmath41 and both @xmath76 and @xmath77 with @xmath25 and @xmath41 .",
    "we can notice that @xmath74 is guaranteed not to belong to a cycle colored @xmath73 because external edges incident to @xmath74 are colored @xmath73 and are safe .",
    "analogously , we can easily check that each other edge of @xmath58 is safe .",
    "however , for example , a triangle @xmath43 of @xmath34 that has three external edges of @xmath37 incident to it , all colored with the same color of @xmath61 , can not be colored in such a way that it does not contain a monochromatic cycle .",
    "consider a cycle @xmath58 of @xmath34 such that every external edge of @xmath37 incident to @xmath58 is colored .",
    "we say that @xmath58 is * _ non - blocked _ * if and only if ( 1 ) @xmath70 or ( 2 ) @xmath58 contains at least @xmath78 vertex - disjoint edges , each of which has the property that it has exactly two incident external edges of @xmath37 and the two external edges of @xmath37 incident to it are colored with the same color of @xmath61 or ( 3 ) @xmath58 is a square such that @xmath79 .",
    "otherwise we say that @xmath58 is * _ blocked_*. we can see that a cycle @xmath58 of @xmath34 is blocked if    * @xmath58 is a triangle and all external edges of @xmath37 incident to @xmath58 are colored with the same color of @xmath61 , * @xmath58 is a square with two internal edges of @xmath37 incident to it @xmath80 , * @xmath58 is a cycle of even length , @xmath81 and there exist two colors @xmath82 such that external edges of @xmath37 incident to @xmath58 are colored alternately with @xmath83 and @xmath84 .    among blocked cycles we distinguish kites .",
    "we say that a cycle @xmath58 is a * _ kite _ * if it is a triangle such that @xmath79 and then we call it a * _ @xmath41-kite _ * or it is a square such that @xmath85 - called a * _ @xmath45-kite_*. a cycle of @xmath34 which is not a kite is called *",
    "_ unproblematic_*.    now , we are ready to present the algorithm for path-@xmath41-coloring @xmath39 .",
    "+    @xmath58 @xmath86 an unproblematic uncolored cycle of @xmath34 with the fewest uncolored external edges incident to @xmath3    color uncolored external edges incident to @xmath58 so that no unproblematic cycle of @xmath34 becomes blocked and if possible ,    so that @xmath87    color @xmath58 using lemma [ coluzup ] and internal edges incident to it in such a way , that each edge incident to @xmath58 is safe    color @xmath58 and internal edges incident to it in such a way , that each edge incident to @xmath58 is safe    let @xmath58 be an unproblematic cycle of @xmath34 that at some step of algorithm color @xmath39 has the fewest uncolored external edges incident to it",
    ". then , it is always possible to color all uncolored external edges incident to @xmath58 so that no unproblematic cycle of @xmath34 becomes blocked .",
    "moreover , if @xmath58 has at least two uncolored ext .",
    "edges incident to @xmath58 then , additionally , it is always possible to do it in such a way that @xmath70 .",
    "if @xmath58 has exactly one uncolored external edge @xmath3 of @xmath37 incident to it , then we can color @xmath3 so that @xmath70 or so that @xmath3 is safe .",
    "* proof .",
    "* if @xmath58 has at least two uncolored external edges of @xmath37 incident to it , then we can use at least two different colors for coloring the edges .",
    "moreover if @xmath81 , then we can choose them in such a way that @xmath88 , i.e. so that for every color @xmath89 at least one external edge of @xmath37 incident to @xmath58 is colored with @xmath60 .",
    "at this stage , every other uncolored cycle @xmath90 of @xmath34 has also at least two uncolored external edges of @xmath37 incident to it .",
    "therefore @xmath90 is in danger of becoming blocked only if it has an even number of incident external edges of @xmath37 , all of them are colored with the same two colors , say @xmath83 and @xmath84 , in an alternate way and it has exactly two incident uncolored external edges @xmath74 , @xmath76 of @xmath37 .",
    "however , even if we would like to also use @xmath83 and @xmath84 for coloring the external edges of @xmath37 incident to @xmath58 , we can do it in such a way that @xmath90 does not become blocked , because , as one can easily see , one of the ways of coloring @xmath74 and @xmath76 with @xmath83 and @xmath84 does not make @xmath90 blocked .",
    "if @xmath58 has exactly one uncolored external edge @xmath3 of @xmath37 incident to it and @xmath58 is in danger of becoming blocked , then either @xmath58 is a triangle whose two other incident external edges are colored with the same color of @xmath61 or @xmath58 has even length and all of its incident external edges of @xmath37 are colored with the same two colors in an alternate way . in each of these cases",
    "we have a choice and can color @xmath3 with one of two colors so that @xmath58 does not become blocked .",
    "if @xmath3 is incident to a cycle @xmath90 that is also in danger of becoming blocked , then with respect to @xmath90 we can also color @xmath3 with one of two colors of @xmath61 so that it does not become blocked . as the intersection of two two - element subsets of @xmath61 is always nonempty",
    ", we can color @xmath3 , say with @xmath60 , so that no cycle of @xmath34 becomes blocked . as all other external edges of @xmath58 were safe , then @xmath3 is also safe . @xmath67",
    "+    from the above lemma we get    [ colsafe ] after all external edges are colored , each of them is incident to a cycle @xmath58 of @xmath34 such that @xmath70 or is safe .",
    "we say that a cycle @xmath58 of @xmath39 is * _ a subcycle _ * of cycle @xmath90 of @xmath34 if it goes only through vertices that belong to @xmath90 .",
    "[ coluzup ] let @xmath58 be an unproblematic and non - blocked cycle of @xmath34 whose all incident external edges of @xmath37 are already colored and safe .",
    "then it is always possible to color @xmath58 and internal edges incident to @xmath58 in such a way that each edge incident to @xmath58 is safe .",
    "* proof .  * if @xmath58 is such that @xmath70 , then by lemmas [ col ] and [ cola ] , the claim holds .",
    "now let us first prove that if @xmath58 is not blocked and @xmath71 , then it is always possible to color the edges of @xmath58 so that no color class contains all edges of any subcycle of @xmath58 .    * _ case 1 : _ * all edges of @xmath37 incident to @xmath58 are colored with the same color , say @xmath60 .",
    "+ we can then assume that all edges of @xmath37 incident to @xmath58 are external .",
    "( otherwise we would have colored internal edges of @xmath37 with a different color than @xmath60 . )",
    "@xmath58 must have length at least @xmath45 .",
    "( otherwise it would be blocked . )",
    "let @xmath91 denote the two colors of @xmath63 .",
    "we choose two nonadjacent edges of @xmath58 , color one of them with @xmath60 and @xmath83 and the other with @xmath60 and @xmath84 .",
    "the remaining edges of @xmath58 are colored with @xmath83 and @xmath84 .",
    "* _ case 2 : _ * all edges of @xmath37 incident to @xmath58 are colored with two colors , say @xmath83 and @xmath84 .",
    "+ we can assume that either ( 1 ) @xmath58 has no incident internal edges of @xmath37 or ( 2 ) that it has exactly one incident internal edge of @xmath37 and all external edges of @xmath37 incident to @xmath58 are colored in the same way .",
    "let @xmath60 denote the color belonging to @xmath92 and assume that @xmath58 goes through vertices @xmath93 in the given order .",
    "then let @xmath94 denote a vertex of @xmath58 such that edges of @xmath37 incident to @xmath95 and @xmath94 are colored in the same way , say with @xmath83 , and @xmath96 is colored with @xmath84 .",
    "then for each @xmath97 we color edge @xmath98 of @xmath58 with colors belonging to @xmath99 , where @xmath100 denotes the color used on an edge of @xmath37 incident to @xmath101 .",
    "edge @xmath102 is going to be colored with @xmath83 and @xmath84 .",
    "we colored the edges , so that there is no monochromatic cycle on edges of @xmath58 and internal matching edges .",
    "therefore , together with the safety of all external edges , it ensures the safety of all internal edges .",
    "since @xmath34 may contain kites , we may not be able to path-@xmath41-color @xmath39 .",
    "therefore , our next aim is to compute another cycle cover @xmath46 of @xmath35 such that it does not contain any cycle of @xmath34 which is problematic and whose weight is an upper bound on @xmath103 .",
    "since computing such @xmath46 may be hard , we relax the notion of a cycle cover and allow @xmath46 to contain * _ half - edges_*. a half - edge of the edge @xmath3 is informally speaking a half of the edge @xmath3 that contains exactly one of the endpoints of @xmath3 .",
    "let us also point out here that @xmath46 may contain kites which do not belong to @xmath34 . to be able to give a formal definition of such a relaxed cycle cover , we introduce a graph @xmath104 .",
    "we say that an edge @xmath57 is * _ problematic _ * if @xmath4 and @xmath5 belong to the same kite .",
    "an edge connecting vertices of a kite @xmath58 is also said to be a problematic edge of @xmath58 .",
    "a @xmath41-kite has no diagonals and a @xmath45-kite has two diagonals .",
    "@xmath105 is the graph obtained from @xmath35 by splitting each problematic edge @xmath57 with a vertex @xmath106 into two edges @xmath107 and @xmath108 , each with weight @xmath109 .",
    "each of the edges @xmath107 and @xmath108 of @xmath104 is said to be * _ a half - edge of the edge @xmath57 of @xmath35_*. in what follows , when we speak of an edge of a kite , we mean an edge of the original graph @xmath35 .",
    "[ relst ]    a * _ relaxed cycle cover improving @xmath34 with respect to @xmath37 _ * is a subset @xmath110 such that    * each vertex in @xmath111 has exactly two incident edges in @xmath112 ; * for each @xmath41-kite @xmath43 of @xmath34 the number of half - edges of the edges of @xmath43 contained in @xmath112 is even and not greater than four ; * for each @xmath45-kite @xmath44 of @xmath34 the number of half - edges of the edges or diagonals of @xmath44 contained in @xmath112 is even and not greater than six .    to compute a relaxed cycle cover @xmath46 improving @xmath34 with respect to @xmath37 we construct the following graph @xmath113 .",
    "the set of vertices @xmath114 is a superset of the set of verices @xmath111 of @xmath35 . for each problematic edge @xmath57 of",
    "@xmath35 we add two vertices @xmath115 to @xmath114 and edges @xmath116 to @xmath117 . for each problematic edge @xmath57 which is not a diagonal of a @xmath45-kite",
    "we add also an edge @xmath118 .",
    "the edge @xmath119 has weight @xmath120 in @xmath121 and each of the edges @xmath122 has weight @xmath123 .",
    "each of the vertices @xmath115 is called * _ a splitting vertex of the edge @xmath57_*. for each edge @xmath57 of @xmath35 which is not problematic we add an edge @xmath57 to @xmath117 with weight @xmath124 .",
    ".48    = [ draw = black!60,thin ] ( a ) at ( 1,0 ) ; ( b ) at ( 2,1.73 ) ; ( c ) at ( 0,1.73 ) ;    ( aab ) at ( 1.33,.57 ) ; ( abb ) at ( 1.67 , 1.15 ) ;    ( bbc ) at ( 1.33,1.73 ) ; ( bcc ) at ( .67,1.73 ) ;    ( acc ) at ( .33 , 1.15 ) ; ( aac ) at ( .67 , .57 ) ;    \\(a )  ( aab ) ; ( abb )  ( b ) ; ( b )  ( bbc ) ; ( bcc )  ( c ) ;",
    "( c )  ( acc ) ; ( aac )  ( a ) ;    ( aab )  ( abb ) ; ( bbc )  ( bcc ) ; ( acc )  ( aac ) ;    ( pa ) at ( 1.01 , .8 ) ; ( aab ) to [ out=180 , in=0 ] ( pa ) ; ( aac ) to [ out=0 , in=180 ] ( pa ) ; ( bbc ) to [ out=220 , in=30 ] ( pa ) ;    ( pc ) at ( .8,1.3 ) ; ( bcc ) to [ out=240 , in=60 ] ( pc ) ; ( acc ) to [ out=60 , in=240 ] ( pc ) ; ( abb ) to [ out=120 , in=300 ] ( pc ) ;       .48    = [ draw = black!60,thin ] ( a ) at ( -1 , -1 ) ; ( b ) at ( 1 , -1 ) ; ( c ) at ( 1 , 1 ) ; ( d ) at ( -1 , 1 ) ;    ( aab ) at ( -.33,-1 ) ; ( abb ) at ( .33 , -1 ) ;    ( bbc ) at ( 1 , -.33 ) ; ( bcc ) at ( 1 , .33 ) ;    ( ccd ) at ( .33 , 1 ) ; ( cdd ) at ( -.33 , 1 ) ;    ( add ) at ( -1 , .33 ) ; ( aad ) at ( -1 , -.33 ) ;    ( aac ) at ( -.7 , -.7 ) ; ( acc ) at ( .7 , .7 ) ; ( bbd ) at ( .7 , -.7 ) ; ( bdd ) at ( -.7 , .7 ) ;    \\(a )  ( aab ) ; ( abb )  ( b ) ; ( b )  ( bbc ) ; ( bcc )  ( c ) ; ( c )  ( ccd ) ; ( cdd )  ( d ) ; ( d )  ( add ) ; ( aad )  ( a ) ;    ( aab ) ",
    "( abb ) ; ( bbc )  ( bcc ) ; ( ccd )  ( cdd ) ; ( add )  ( aad ) ;    \\(a )  ( aac ) ; ( b )  ( bbd ) ; ( c )  ( acc ) ; ( d )  ( bdd ) ;    ( pu ) at ( -.3 , -.3 ) ; ( aab ) to [ out=135 , in=300 ] ( pu ) ; ( aac ) to [ out=0 , in=205 ] ( pu ) ; ( aad ) to [ out=345 , in=135 ] ( pu ) ;    ( pv ) at ( .3 , -.3 ) ; ( abb ) to [ out=45 , in=240 ] ( pv ) ; ( bbd ) to [ out=180 , in=335 ] ( pv ) ; ( bbc ) to [ out=195 , in=45 ] ( pv ) ;    ( pw ) at ( .3 , .3 ) ; ( bcc ) to [ out=165 , in=330 ] ( pw ) ; ( acc ) to [ out=180 , in=25 ] ( pw ) ; ( ccd ) to [ out=300 , in=135 ] ( pw ) ;    ( pz ) at ( -.3 , .3 ) ; ( add ) to [ out=15 , in=210 ] ( pz ) ; ( bdd ) to [ out=0 , in=155 ] ( pz ) ; ( cdd ) to [ out=240 , in=45 ] ( pz ) ;    \\(q ) at(0,0 ) ; ( pu ) to [ out=75 , in=255 ] ( q ) ; ( pv ) to [ out=105 , in=285 ] ( q ) ; ( pw ) to [ out=255 , in=75 ] ( q ) ; ( pz ) to [ out=285 , in=105 ] ( q ) ;    next we build so - called gadgets . for each @xmath41-kite @xmath43 on vertices",
    "@xmath125 we add two vertices @xmath126 to @xmath114 .",
    "let s assume that @xmath4 is incident to external edge of @xmath37 .",
    "vertex @xmath127 is connected to the splitting vertices of edges of @xmath43 that are neighbors of @xmath4 , i.e. to vertices @xmath128 and to vertex @xmath129 .",
    "vertex @xmath130 is connected to every other splitting vertex of @xmath43 , i.e. @xmath131 . all edges incident to verices @xmath126 have weight @xmath120 in @xmath121 .    for each @xmath45-kite of @xmath34 on vertices",
    "@xmath132 we add five vertices @xmath133 to @xmath114 .",
    "vertex @xmath134 is connected to the splitting vertices of edges of @xmath44 that are neighbors of @xmath4 , i.e. to vertices @xmath135 .",
    "vertices @xmath136 are connected analogously .",
    "vertex @xmath137 is connected to vertices @xmath138 .",
    "all edges incident to verices @xmath133 have weight @xmath120 .",
    "we will reduce the problem of computing a relaxed cycle cover improving @xmath34 with respect to @xmath37 to the problem of computing a perfect @xmath139-matching of the graph @xmath121 .",
    "we define the function @xmath140 in the following way . for each vertex",
    "@xmath141 we set @xmath142 . for each splitting vertex @xmath143 of some problematic edge we set @xmath144 .",
    "for all vertices @xmath127 and @xmath130 , where @xmath43 denotes a @xmath41-kite of @xmath34 we have @xmath145 .",
    "for all vertices @xmath134 and @xmath146 , where @xmath44 denotes a @xmath45-kite of @xmath34 and @xmath4 one of its vertices we have @xmath147 .",
    "any perfect @xmath139-matching of @xmath121 yields a relaxed cycle cover @xmath46 improving @xmath34 with respect to @xmath37 .",
    "a maximum weight perfect @xmath139- matching of @xmath121 yields a relaxed cycle cover @xmath46 improving @xmath34 with respect to @xmath37 such that @xmath148 .",
    "* proof .",
    "* first we show that any perfect @xmath139-matching of @xmath121 yields a relaxed cycle cover improving @xmath34 with respect to @xmath37 .",
    "let @xmath149 be any perfect @xmath139-matching of @xmath121 .",
    "@xmath149 defines @xmath150 as follows .",
    "a half - edge @xmath151 is contained in @xmath46 iff edge @xmath152 of @xmath121 is contained in @xmath149 . a non - problematic edge @xmath57 is contained in @xmath46 iff @xmath57 is contained in @xmath149 . since @xmath142 for any vertex @xmath5 of @xmath111",
    ", we can see that the property @xmath153 of definition [ relst ] is satisfied .",
    "consider now an arbitrary @xmath41-kite @xmath43 of @xmath34 .",
    "there are 3 problematic edges of @xmath43 and thus six half - edges .",
    "suppose that @xmath43 is on vertices @xmath125 .",
    "we can notice that a half - edge @xmath151 is not contained in @xmath46 iff a splitting vertex @xmath154 is connected in @xmath149 to one of the vertices @xmath126 or to a splitting vertex @xmath155 .",
    "since @xmath127 and @xmath130 are connected to one splitting vertex each , at most 4 half - edges of the problematic edges of @xmath43 are contained in @xmath149 .",
    "if a splitting vertex @xmath154 is connected in @xmath149 to @xmath155 , then both half - edges of the edge @xmath57 are excluded from @xmath46 .",
    "this shows that the number of half - edges of problematic edges of @xmath43 contained in @xmath46 is even .",
    "consider now an arbitrary problematic square @xmath44 of @xmath34 .",
    "there are six problematic edges of @xmath44 and thus twelve half - edges of these edges .",
    "suppose that @xmath44 is on vertices @xmath132 .",
    "we can notice that a half - edge @xmath151 is not contained in @xmath46 iff a splitting vertex @xmath154 is not matched to @xmath4 in @xmath149 .",
    "thus a half - edge @xmath151 does not occur in @xmath46 iff a splitting vertex @xmath154 is connected in @xmath149 to one of the vertices @xmath138 or to a splitting vertex @xmath155 . since @xmath137 is connected to two of the vertices @xmath138 and @xmath156 , exactly six splitting vertices of the problematic edges of @xmath44 are connected in @xmath149 to vertices @xmath138 .",
    "this means that at least six half - edges of the problematic edges of @xmath44 are not contained in @xmath149 .",
    "if a splitting vertex @xmath154 is connected in @xmath149 to @xmath155 , then both half - edges of the edge @xmath57 are excluded from @xmath46 .",
    "this shows that the number of half - edges of problematic edges of @xmath44 contained in @xmath46 is even .",
    "in order to show that @xmath148 it suffices to prove the following lemma .",
    "[ lem : cycle_cover_optimality ] every cycle cover not containing kites of @xmath39 corresponds to some perfect b - matching of @xmath121 .",
    "the proof is in section [ sec : c2_opt_proof ] @xmath67 +",
    "we construct a multigraph @xmath47 from one copy of a relaxed cycle cover @xmath46 and one copy of a maximum weight perfect matching @xmath37 .",
    "since @xmath46 may contain half - edges and we want @xmath47 to contain only edges of @xmath35 , for each half - edge of edge @xmath57 contained in @xmath46 , we will either include the whole edge @xmath57 in @xmath47 or not include it at all .",
    "while doing so we have to ensure that the total weight of the constructed multigraph @xmath47 is at least @xmath158 .    the main idea behind",
    "deciding which half - edges are extended to full edges and included in @xmath47 is that we compute two sets @xmath159 and @xmath160 such that for each kite in @xmath39 half of the edges containing half - edges belongs to @xmath159 and the other half to @xmath160 .",
    "( note that by lemma [ ] each kite in @xmath39 contains an even number of half - edges in @xmath46 . )",
    "let @xmath161 denote the set consisting of whole edges of @xmath35 contained in @xmath46 . this way @xmath162 .",
    "next , let @xmath163 denote the one of the sets @xmath159 and @xmath160 with maximum weight .",
    "then @xmath47 is defined as a multiset consisting of edges of @xmath37 , edges of @xmath161 and edges of @xmath163 .",
    "we obtain    the total weight of the constructed multigraph @xmath47 is at least @xmath158 .",
    "* proof .",
    "* the weight of @xmath37 is at least @xmath164 .",
    "the weight of @xmath162 is at least @xmath36 . since @xmath165",
    ", we obtain that @xmath166 .",
    "@xmath67 +    since @xmath34 contains at least one kite , @xmath39 is non - path-@xmath41-colorable .",
    "we can notice , however , that if we remove one edge from each kite from the multigraph @xmath39 , then the obtained multigraph is path-@xmath41-colorable .",
    "if we manage to construct a set @xmath167 with one edge per each kite such that additionally the multigraph @xmath168 is path-@xmath25-colorable , then we have a @xmath0-approximation of max tsp .",
    "since computing such @xmath167 may be difficult , we allow , in turn , certain edges of @xmath46 to be removed from @xmath47 and added to @xmath39 .",
    "thus , roughly , our goal is to compute such disjoint sets @xmath157 that :    1 .",
    "@xmath169 contains at least one edge of each kite ; 2 .   for each kite @xmath58",
    ", @xmath170 contains exactly one edge not contained in @xmath58 ; 3 .",
    "the multigraph @xmath171 is path-@xmath41-colorable ; 4 .",
    "the multigraph @xmath172 is path-@xmath25-colorable .",
    "let @xmath167 and @xmath173 be two sets of edges that satisfy properties 1 . and 2 . of the above .",
    "then the set of edges @xmath174 can be partitioned into * _ cycles and paths of @xmath55 _ * , where @xmath55 denotes the resulting multigraph @xmath175 .",
    "the partition of @xmath176 into cycles and paths is carried out in such a way that two incident edges of @xmath176 belonging to a common path or cycle of @xmath46 , belong also to a common path or cycle of @xmath176 ( and @xmath55 ) . also ,",
    "the partition is maximal , i.e. , we can not add any edge @xmath3 of @xmath176 to any path @xmath177 of @xmath55 so that @xmath178 is also a path or cycle of @xmath55 .",
    "we say that @xmath3 is a * _ double edge _ * of @xmath55 , or that @xmath3 is * _ double _ * , if the multigraph @xmath55 contains two copies of @xmath3 .",
    "in any path-@xmath25-coloring of @xmath55 every double edge must have both colors of @xmath179 assigned to it .",
    "we observe that in order for @xmath55 to be path-@xmath25-colorable , we have to guarantee that there does not exist a cycle @xmath58 of @xmath55 of odd length @xmath180 that has @xmath180 incident double edges .",
    "since every two consecutive edges of @xmath58 are incident to some double edge , they must be assigned different colors of @xmath179 and because the length of @xmath58 is odd , this is clearly impossible . the way to avoid",
    "this is to choose one edge of each such potential cycle and add it to @xmath173 .",
    "we say that a path @xmath177 of @xmath55 beginning at @xmath181 and ending at @xmath5 is * _ amenable _ * if ( i ) neither @xmath5 nor @xmath181 has degree @xmath45 in @xmath55 or ( ii ) @xmath5 has degree @xmath45 , @xmath181 has degree smaller than @xmath45 and @xmath177 ends with a double edge , the last - but - one edge of @xmath177 is a double edge or the last - but - one and the last - but - three vertices in @xmath177 are matched in @xmath37 .",
    "it turns out that @xmath55 that does not contain odd cycles described above and whose every path is amenable is path-@xmath25-colorable - we show it in section [ path2 ] . to facilitate the construction of @xmath55 , whose every path is amenable and to ensure that @xmath167 and @xmath173 have certain other useful properties we create two opposite orientations of @xmath161 : @xmath182 and @xmath183 . in each of these orientations @xmath161",
    "contains directed cycles and paths and each kite has the same number of incoming and outgoing edges .",
    "( this can be achieved by pairing the endpoints of paths ending at the same kite and combining them .",
    "for example , if @xmath46 contains half - edges @xmath184 and @xmath185 of a certain @xmath41-kite @xmath43 and edges @xmath186 , then in the orientation in which @xmath74 is directed from @xmath64 to @xmath4 the edge @xmath76 must be directed from @xmath187 to @xmath181 . )",
    "apart from whole edges @xmath46 contains also half - edges .",
    "let @xmath188 denote the set of edges of @xmath35 such that @xmath46 contains exactly one half - edge of each of these edges .",
    "we partition @xmath188 into two sets @xmath189 so that for each kite @xmath58 half of the edges of @xmath188 is contained in @xmath159 and the other half in @xmath160 . with each of the orientations @xmath190",
    "we associate one of the sets @xmath189 .",
    "thus , we assume that @xmath182 contains @xmath159 , with the edges of @xmath159 being oriented in a consistent way with the edges of @xmath161 under orientation @xmath182 , and @xmath183 contains @xmath160 , with its edges being oriented accordingly .",
    "the exact details of the construction of @xmath159 and @xmath160 are given in the proof of lemma [ f12 ] .",
    "depending on which of the sets @xmath189 has bigger weight , we either choose the orientation @xmath182 or @xmath183 .",
    "hence , from now on , we assume that the edges of @xmath191 are directed .",
    "[ f12 ] it is possible to compute sets @xmath157 such that they and the resulting @xmath55 satisfy :    1 .",
    "@xmath192 ; 2 .",
    "@xmath193 ; 3 .   for each kite @xmath58 , ( i )",
    "the set @xmath167 contains exactly one edge of @xmath58 and the set @xmath173 contains zero edges of @xmath58 or ( ii ) ( it can happen only for @xmath45-kites ) the set",
    "@xmath167 contains exactly two edges of @xmath58 and the set @xmath173 contains one edge of @xmath194 ; 4 .   for each kite",
    "@xmath58 the set @xmath173 contains exactly one outgoing edge of @xmath58 ; 5 .   for each kite @xmath58 and each vertex @xmath5 of @xmath58",
    "the number of edges of @xmath173 incident to @xmath5 is at most one greater than the number of edges of @xmath167 incident to @xmath5 ; 6 .",
    "there exists no cycle of @xmath55 of odd length @xmath180 that has @xmath180 double edges incident to it ; 7 .",
    "each path of @xmath55 is amenable .",
    "the property 1 . of this",
    "lemma guarantees that @xmath55 does not contain more than two copies of any edge .",
    "we show in appendix [ path2 ] that properties 6 .",
    "are essentially sufficient for the multigraph @xmath55 to be path-@xmath25-colorable .",
    "properties 4 . and 5 . will be helpful in finding a path-@xmath41-coloring of @xmath54 .",
    "property 5 . ensures that no vertex @xmath5 has six incident edges in @xmath54 .",
    "the proof of this lemma is given in section [ dowodf12 ] .",
    "the path-@xmath25-coloring of @xmath55 is quite similar to the path-@xmath41-coloring of @xmath39 .",
    "it is described in section [ path2 ] .",
    "after the construction and path-@xmath25-coloring of @xmath55 we are presented with the task of extending the partial path-@xmath41-coloring of @xmath39 to the complete path-@xmath41-coloring of @xmath54 . in particular , we have to color the edges of kites , edges of @xmath173 that have been added during the construction of @xmath55 and external edges of @xmath37 incident to @xmath41-kites , called * _ tails_*. a tail incident to a @xmath41-kite @xmath43 is said to be a * _ tail of @xmath43_*.    let us now describe the set of uncolored edges of @xmath54 in more detail .",
    "each one of them is incident to some kite and has either ( 1 ) two endpoints belonging to the same kite @xmath58 ( an internal edge of @xmath58 ) , or ( 2 ) one of its endpoints belongs to some kite @xmath58 and the other does not belong to any kite ( an external edge of @xmath58 ) or ( 3 ) its endpoints belong to two different kites @xmath58 and @xmath90 ( an external edge both of @xmath58 and @xmath90 ) .",
    "let @xmath43 denote a @xmath41-kite .",
    "then by lemma [ f12 ] exactly one edge of @xmath43 belongs to @xmath167 , no edge of @xmath43 belongs to @xmath173 and there also exists exactly one edge in @xmath195 that is an outgoing edge of @xmath43 , i.e. , @xmath3 is an external edge of @xmath43 and is directed from an endpoint belonging to @xmath43 in @xmath161 . @xmath173 may also contain up to three incoming edges of @xmath43 , each one incident to a different vertex of @xmath43 .",
    "any incoming edge of @xmath43 is also an outgoing edge of some other kite . a tail of @xmath43 is also uncolored in @xmath54 .",
    "each uncolored edge @xmath3 of @xmath54 has a requirement @xmath196 denoting the number of colors of @xmath61 that must be assigned to it .",
    "then for any edge @xmath3 contained in some @xmath41-kite , @xmath197 if @xmath198 , @xmath199 if @xmath200 and @xmath201 otherwise .",
    "thus , for each @xmath41-kite @xmath43 we have to color exactly six of its edges in the _ multigraph _ @xmath54 .",
    "let @xmath44 denote a @xmath45-kite .",
    "then by lemma [ f12 ] either ( 1 ) exactly one edge of @xmath44 belongs to @xmath167 and no edge of @xmath44 belongs to @xmath173 or ( 2 ) exactly two edges of @xmath44 belong to @xmath167 and one edge of @xmath44 belongs to @xmath173 .",
    "there also exists exactly one edge @xmath195 that is an outgoing edge of @xmath44 .",
    "@xmath173 may also contain up to four incoming edges of @xmath44 , each one incident to a different vertex of @xmath44 . for any edge @xmath3 belonging to some @xmath45-kite , @xmath197 if @xmath198 or @xmath195 , @xmath199 if @xmath200 and @xmath201 otherwise .",
    "thus , for each @xmath45-kite @xmath44 we have to color exactly nine of its edges in the _ multigraph _ @xmath54 .",
    "each uncolored external edge @xmath3 in @xmath54 has requirement @xmath199 .",
    "let @xmath202 denote the subgraph of @xmath54 comprising all edges with positive requirement .",
    "we need to assign colors of @xmath61 to edges of @xmath202 ( or , in other words , color edges of @xmath202 with colors of @xmath61 ) in such a way that each color class in the whole graph @xmath54 forms a collection of disjoint paths .",
    "the coloring of edges of @xmath202 is an extension of the already existing partial path-@xmath41-coloring of @xmath39 .",
    "therefore , for some edges there exist restrictions on colors of @xmath61 that can be assigned to them .",
    "consider any vertex @xmath5 that does not belong to any kite and that has one or two incident edges in @xmath202 . if @xmath5 has an incident tail in @xmath202 , then it has exactly two incident edges in @xmath203 that are colored with two different pairs of colors of @xmath61 ( while path-@xmath41-coloring @xmath39 we can easily guarantee that two consecutive edges of @xmath34 incident to @xmath5 such that an edge of @xmath37 incident to @xmath5 is also incident to a @xmath41-kite are colored with two different pairs of colors ) .",
    "let these pairs of colors be @xmath204 and @xmath205 .",
    "hence any edge of @xmath202 incident to @xmath5 may be colored only with @xmath83 or @xmath206 - we associate with @xmath5 a two - element subset @xmath207 . moreover , if @xmath5 has two incident edges in @xmath202 and we color one of them with @xmath83 , then the other one _ must _ be colored with @xmath206 . if @xmath5 does not have an incident tail in @xmath202 , then it has at most one incident edge in @xmath202 and exactly five edges in the _ multigraph _ @xmath39 as well as in the multigraph @xmath203 . in this case there",
    "exists exactly one color @xmath60 of @xmath61 that can be assigned to an edge of @xmath202 incident to @xmath5 and we associate a one - element subset @xmath208 with @xmath5 .",
    "let @xmath43 be a @xmath41-kite .",
    "then a vertex of @xmath43 incident to its tail is called a * _ foot vertex ( of @xmath43)_*. if @xmath209 is incident to the foot vertex of @xmath43 , then @xmath43 is said to be * _ vertical _ * ; otherwise it is * _ horizontal_*. two @xmath41-kites @xmath210 and @xmath211 having a common tail are called * _ twins_*. also , each one of them is called a twin and @xmath210 is said to be a * _ brother of @xmath211_*. a @xmath41-kite that is not a twin is said to be * _ non - twin_*.    some of the edges contained in @xmath202 are directed .",
    "the directions of edges of @xmath202 satisfy :    1 .",
    "each internal edge is undirected ( i.e. , each edge contained in a kite ) ; 2 .",
    "the direction of each edge of @xmath173 is the same as in @xmath161 ; the properties of edges of @xmath173 are described in lemma [ f12 ] in properties ( 3 ) , ( 4 ) and ( 5 ) ; 3 .",
    "a tail of two twins is undirected ; otherwise , a tail of a @xmath41-kite @xmath43 is an incoming edge of @xmath43 .",
    "( it may happen that a tail @xmath3 of some @xmath41-kite belongs also to @xmath161 and @xmath173 .",
    "then @xmath54 contains two copies of @xmath3 , each one with the requirement @xmath199 and the copy corresponding to a tail is treated as a tail and the other copy is treated as an external directed edge . )    from graph @xmath202 we build a graph @xmath212 by shrinking each kite to a single vertex .",
    "each vertex of @xmath212 that corresponds to a kite in @xmath202 is called , respectively a * _ t - vertex _ * ( if it is a @xmath41-kite ) or an * _ s - vertex _ * ( if it is a @xmath45-kite ) ; each remaining vertex is called an * _ o - vertex_*. in any coloring of @xmath212 or @xmath202 , we say that an o - vertex @xmath5 is * _ respected _ * if any edge incident to @xmath5 is assigned a color belonging to @xmath213 and if there are two edges incident to @xmath5 , then they have different colors assigned to them .    to * _ pre - color _ * a directed cycle or path @xmath214 of @xmath212 means to color each of its edges with a color of @xmath61 so that each o - vertex of @xmath214 is respected . to * _ color a kite @xmath58 _ * means to color each edge @xmath3 of @xmath58 with @xmath196 colors of @xmath61 .",
    "we are going to color the edges of @xmath202 in portions - by considering directed cycles and paths in @xmath212 .",
    "for each such cycle or path we will color its edges as well as some of the kites corresponding to its vertices . to be able to talk more precisely about these operations we introduce below the notions of * _ processing _ * a directed cycle or path @xmath214 in @xmath212 and * _ step - processing _ * a vertex @xmath5 on @xmath214",
    ". processing a directed cycle or path @xmath214 in @xmath212 consists in step - processing each of its vertices on @xmath214 .",
    "let @xmath214 be a directed cycle or path in @xmath212 and @xmath5 a vertex on @xmath214 that has an outgoing edge that belongs to @xmath214 .",
    "to _ step - process _",
    "@xmath5 ( or in case @xmath5 corresponds to a kite @xmath58 , to step - process @xmath58 ) _ on @xmath214 _ means :    * if an outgoing edge of @xmath5 is uncolored - to color it , * if @xmath5 has an incoming edge contained in @xmath214 - to color it , * if @xmath5 corresponds to a kite @xmath58 - to color the kite @xmath58 unless @xmath58 is a horizontal twin , whose brother has not been step - processed ( on any directed cycle or path in @xmath212 ) , * if @xmath5 corresponds to a non - twin @xmath41-kite @xmath43 - to color the tail of @xmath43 , * if @xmath5 corresponds to a twin @xmath41-kite @xmath43 , whose brother @xmath215 has already been step - processed - to color the common tail of @xmath43 and @xmath215 and in case @xmath215 has not already been colored , to color @xmath215 , * to carry out the above so that each color class forms a collection of vertex - disjoint paths in @xmath54 and so that each o - vertex in @xmath212 is respected .    to",
    "* _ process _ * a directed path @xmath214 in @xmath212 that goes through vertices @xmath216 and directed from @xmath217 to @xmath218 means to step - process each of the vertices @xmath219 in turn , starting from @xmath220 .",
    "when we process such a path , then we start the step - processing @xmath220 by coloring an outgoing edge of @xmath220 incident also to @xmath218 .",
    "we then continue step - processing @xmath220 and afterwards , proceed to ste - processing @xmath221 , then @xmath222 and so on .",
    "if @xmath94 and @xmath101 of @xmath214 correspond to twins @xmath223 and @xmath224 such that @xmath223 is horizontal and considered before @xmath224 on @xmath214 , then while step - processing @xmath223 we only color the edges incident to @xmath94 and leave @xmath223 and its tail uncolored .",
    "when we come to @xmath101 , we color the incoming edge of @xmath214 incident to @xmath101 and both twins @xmath223 and @xmath224 and their common tail . in an analogous way we define the processing of a directed cycle @xmath214 in @xmath212",
    "- we start from step - processing any vertex on @xmath214 and continue with step - processing subsequent vertices along @xmath214 .",
    "let us notice that if a vertex @xmath5 corresponding to a kite @xmath58 has not been step - processed , then @xmath58 is uncolored and either ( 1 ) every external edge of @xmath58 is also uncolored or ( 2 ) an outgoing edge of @xmath58 is colored because we have just step - processed @xmath143 on some directed path or cycle @xmath214 such that @xmath214 contains an edge @xmath225 ; apart from this every other external edge of @xmath58 is uncolored . also , a given vertex @xmath5 has exactly one outgoing edge in @xmath212 but may belong to more than one directed path in @xmath212 or it may belong to a directed cycle and some directed path(s ) in @xmath212 .",
    "however , in algorithm 2 the first time we encounter @xmath5 while processing a directed cycle or path , we will step - process it , because each considered directed path is maximal under inclusion . if we encounter @xmath5 again while processing a different cycle or path , we will just color some of its incoming edges ( and possibly a tail and so on ) but will not step - process @xmath5 again .",
    "[ ah ]    process it and remove its edges from @xmath212 process it and remove its edges from @xmath212    in section [ ahcor ] we prove that every directed cycle or path can be processed .",
    "the presented algorithm works for graphs with an even number of vertices .",
    "if the number of vertices of a given graph is odd , then we can guess one edge , shrink it and compute the remaining part of the solution in the graph with even vertices .",
    "we are going to prove that every directed cycle or path in @xmath212 can be processed .",
    "first we give several auxiliary lemmas .",
    "[ preparz ] let @xmath58 be a directed cycle in @xmath212 of even length , whose every other vertex is an o - vertex .",
    "then we are able to pre - color @xmath58 in such a way that its every two consecutive edges get assigned different colors .",
    "* proof .  *    first , let us notice that an o - vertex @xmath5 may have two incident edges in @xmath212 only if one of them is a tail of some @xmath41-kite .",
    "thus , every vertex of @xmath58 that is not an o - vertex must correspond to a @xmath41-kite and be a t - vertex .",
    "if the length of @xmath58 is two , then @xmath58 contains exactly one o - vertex @xmath5 .",
    "we then assign one color of @xmath213 to one edge of @xmath58 and the other color of @xmath213 to the other edge of @xmath58 and are done .",
    "suppose now that @xmath58 has length greater than two .",
    "let @xmath5 be any o - vertex of @xmath58 and @xmath226 the edges of @xmath212 incident to @xmath5 .",
    "we assign one of the colors @xmath83 of @xmath213 to @xmath74 and the other @xmath84 to @xmath76 .",
    "assume that @xmath76 is an incoming edge of @xmath218 , @xmath75 is an outgoing edge of @xmath218 and @xmath227 are the subsequent edges of @xmath58 .",
    "the edges @xmath75 and @xmath77 are incident to another o - vertex @xmath143 of @xmath58 .",
    "we will show now that whatever the set @xmath228 , we are always able to asign colors to @xmath75 and @xmath77 in such a way that @xmath77 _ does not _ get assigned @xmath83 - the color already assigned to @xmath74 .",
    "if @xmath228 contains @xmath84 and some other color @xmath229 , then we assign @xmath229 to @xmath75 and @xmath84 to @xmath77 .",
    "if @xmath228 does not contain @xmath84 , then it contains @xmath83 and @xmath206 and we assign @xmath83 to @xmath75 and @xmath206 to @xmath77 .",
    "this way ( i ) edges @xmath76 and @xmath75 get assigned different colors and ( ii ) @xmath77 gets assigned a color different from @xmath83 .",
    "if @xmath58 has length @xmath45 , then we notice that the edges @xmath74 and @xmath77 of @xmath58 get assigned different colors as well and we are done .",
    "if @xmath58 has length greater than @xmath45 , then we consider the next pairs of edges and continue in the manner described above .",
    "more precisely , when we consider the pair of edges @xmath230 and @xmath231 incident to some o - vertex @xmath181 , we know that the invariant that @xmath74 and @xmath232 have different colors assigned is satisfied . our goal is to color @xmath230 and @xmath231 in such a way that ( i ) @xmath230 gets assigned a color different from the color assigned to @xmath232 and ( ii ) @xmath231 gets assigned a color different from @xmath83 . from the way we have analysed coloring @xmath75 and @xmath77 , we know that it can always be done .",
    "@xmath67 +    [ cyklparz ] let @xmath58 be a directed cycle in @xmath212 of even length , whose every other vertex is an o - vertex",
    ". then we are able to process @xmath58 .",
    "* proof .",
    "* first , let us notice that every @xmath43-vertex of @xmath58 corresponds to a non - twin @xmath41-kite , because the tail of each such kite is contained in @xmath58 and thus is directed .    while pre - coloring @xmath58 whenever two edges @xmath226 of @xmath58 adjacent to the same kite @xmath58 get colored , we also color @xmath58 .",
    "while coloring @xmath58 we only have to see to it that no vertex of @xmath58 gets three incident edges of the same color in @xmath54 and to that @xmath58 does not contain a monochromatic cycle i.e. a @xmath41-cycle .",
    "we show how to color @xmath58 in figure [ fig : lemma_compl ] and in figure [ fighoriz ] .",
    "let us notice that after pre - coloring @xmath58 and all @xmath41-kites corresponding to t - vertices on @xmath58 , no color class contains a cycle - this is because every edge @xmath3 of @xmath58 is incident to a t - vertex corresponding to a @xmath41-kite @xmath43 and the only external edges incident to @xmath43 in the whole graph @xmath54 are @xmath3 and some other edge @xmath62 of @xmath58 .",
    "we know , however , that every two consecutive edges of @xmath58 are colored differently . hence @xmath62 is colored differently from @xmath3 .",
    "thus , neither @xmath3 nor @xmath62 can belong to a monochromatic cycle , which means that in this way we process @xmath58 .",
    "@xmath67 +    suppose that the tail @xmath3 of @xmath43 is uncolored .",
    "then @xmath43 is said to be * _ flexible _ * if there exist such two colors @xmath233 that @xmath3 can be colored both with @xmath60 and @xmath100 , by which we mean that if we color the tail of @xmath43 with @xmath60 ( or correspondingly @xmath100 ) , then the foot of @xmath43 does not have more than three incident edges colored with @xmath60 ( resp .",
    "@xmath100 ) .",
    "the flexibility of a @xmath41-kite @xmath43 is useful when @xmath43 is a vertical twin that is step - processed before its twin @xmath215 .",
    "then while step - processing @xmath43 we color @xmath43 but leave its tail uncolored and later later while step - processing @xmath215 we have a greater flexibility in coloring @xmath215 and its tail .",
    "[ compl ] let @xmath43 be any uncolored vertical @xmath41-kite and @xmath234 two external edges incident to @xmath43 colored with , respectively , @xmath83 and @xmath84 .",
    "let @xmath181 be the foot vertex and @xmath3 the tail of @xmath43 .",
    "additionally , @xmath74 and @xmath76 are not both incident to @xmath181 and @xmath235 .",
    "then it is possible to color the edges of @xmath43 so that @xmath43 becomes flexible and so that @xmath3 can be colored with @xmath236 .",
    "* proof .",
    "* for all possible triangles we will show how to color the edges for @xmath43 .",
    "these colorings are presented in figure [ fig : lemma_compl ] .    0.3    0.3    .3    @xmath67 +    [ wlasciwosci ] the computed sets @xmath157 satisfy :    1 .",
    "no foot of a @xmath41-kite has two incident edges of @xmath173 .",
    "if a @xmath41-kite has four incident edges of @xmath173 , then it is vertical .",
    "the proof follows from the proof of lemma [ f12 ] .",
    "[ ver1 ] let @xmath43 be a vertical @xmath41-kite , whose tail @xmath3 is uncolored and that has been colored at some point as in lemma [ compl ] .",
    "then , however , we color any further external edges of @xmath202 incident to @xmath43 apart from its tail , @xmath43 always stays flexible .    *",
    "proof .  *",
    "the lemma follows from the fact that the foot of @xmath43 has not two incident edges of @xmath173 .",
    "@xmath67 +    let @xmath43 be an uncolored @xmath41-kite @xmath43 , whose tail @xmath3 is also uncolored .",
    "then we say that @xmath43 is * _ weakly flexible _ * if there exist two colors @xmath237 such that @xmath43 can be colored in at least two ways and in one of these colorings @xmath3 can be colored with @xmath60 and in the other with @xmath100 , i.e. , after coloring @xmath3 with @xmath60 or @xmath100 , the foot of @xmath43 has at most two incident edges colored with respectively @xmath60 or @xmath100 .",
    "we say that an uncolored twin @xmath43 is * _ versatile _ * if every two colored edges of @xmath202 incident to @xmath43 have different colors assigned to them .",
    "the weak flexibility of a @xmath41-kite @xmath43 is useful when @xmath43 is a horizontal twin that is step - processed before its twin @xmath215 .",
    "while step - processing @xmath43 on some directed cycle or path @xmath214 we do not color it or its tail but only the incident edges of @xmath214 and later while step - processing @xmath215 we color both @xmath43 and @xmath215 and their common tail .    [ horiz ] every uncolored versatile horizontal @xmath41-kite is weakly flexible .",
    "* proof .",
    "* let @xmath43 be any triangle on vertices @xmath125 as in lemma [ horiz ] and let @xmath238 three external edges incident to @xmath43 colored with , respectively , @xmath83 , @xmath84 and @xmath206 .",
    "let @xmath181 be the foot vertex and @xmath3 the tail of @xmath43 .",
    "let us assume that @xmath76 and @xmath75 are not incident to @xmath181 .",
    "then we can color @xmath3 with @xmath84 and @xmath206 .",
    "for each of these colors we have to show how to color edges of @xmath43 . as these cases are symmetric , we assume that @xmath3 is colored with @xmath84 .",
    "let us assume that @xmath76 is incident to @xmath5 .",
    "then we color @xmath57 and @xmath239 with @xmath84 .",
    "[ fighoriz ]    as @xmath43 is horizontal , we still have to color @xmath240 with @xmath25 colors , and the other edges with one color .",
    "if there is an edge , say @xmath74 , incident to @xmath181 we color @xmath240 and @xmath241 with @xmath83 .",
    "if there is an edge incident to @xmath5 other than @xmath76 , say @xmath75 , we color @xmath240 and @xmath239 with @xmath206 . if there are both of these edges , than it is correct coloring .",
    "otherwise there is an edge incident to @xmath4 , say @xmath74 , and we can color @xmath240 and either @xmath57 or @xmath239 with @xmath83 , so we can always color @xmath43 .",
    "@xmath67 +    every directed cycle or path can be processed in such a way that at all times every uncolored horizontal twin is versatile .",
    "* proof .",
    "* let us consider a directed path @xmath177 going through vertices @xmath242 and directed from @xmath217 to @xmath218 .",
    "we can notice that since cycles are processed before paths , each vertex of @xmath177 is distinct .",
    "we observe also that @xmath218 is either an o - vertex or corresponds to a kite that has already been step - processed - otherwise we could extend @xmath177 , because then the outgoing edge of @xmath218 would be uncolored .",
    "vertex @xmath217 , on the other hand , is either an o - vertex or corresponds to an uncolored ( and not step - processed ) kite .",
    "we begin by coloring the arc @xmath243 with any color of @xmath61 that is available .",
    "let us note that some color of @xmath61 is always available because of the following .",
    "if @xmath218 is an o - vertex , then it has exactly six incident edges in the _ multigraph _ @xmath54 - apart from five edges in the _ multigraph _ @xmath39 , it has an additional incoming edge that is an outgoing edge of some kite .",
    "if @xmath218 corresponds to a kite , then lemma [ f12 ] property 5 guarantees that any vertex in @xmath54 belonging to a kite has degree at most six .    also , if @xmath218 corresponds to an uncolored @xmath41-kite @xmath43 that has already been step - processed , then we color @xmath243 with such a color @xmath60 of @xmath61 that no external edge of @xmath43 is colored with @xmath60 .",
    "such a color @xmath60 always exists because only horizontal @xmath41-kites can be left uncolored and they have at most three incident edges of @xmath173 .",
    "thus we can guarantee that @xmath43 remains versatile .",
    "we step - process subsequent vertices on @xmath177 according to the rules listed below .",
    "let @xmath244 be an outgoing edge of @xmath5 colored with @xmath83 and @xmath76 an uncolored incoming edge of @xmath5 . depending on whether @xmath5 is an o- , t- or s - vertex and other conditions we proceed as follows :    1 .   @xmath245",
    ". then @xmath5 must be a t - vertex corresponding to a @xmath41-kite @xmath43 and @xmath76 is an outgoing edge of an o - vertex @xmath143 .",
    "we color @xmath43 , @xmath76 and an incoming edge @xmath75 of @xmath143 .",
    "if @xmath246 , then we color @xmath76 with @xmath100 and @xmath75 with @xmath83 .",
    ". then we color @xmath76 with @xmath84 and @xmath75 with @xmath206 or the other way around",
    "@xmath5 is a t - vertex corresponding to a non - twin @xmath41-kite @xmath43 and @xmath3 is the tail of @xmath43 incident to an o - vertex @xmath143 .",
    "we color @xmath248 and @xmath3 .",
    "if @xmath246 , then we color @xmath3 with @xmath100 and @xmath76 with @xmath249 .",
    ". then we color @xmath76 with @xmath84 and @xmath3 with @xmath206 or the other way around .",
    "@xmath5 is a t - vertex corresponding to a twin @xmath41-kite @xmath43 , whose brother @xmath215 has already been colored and @xmath3 is the tail of @xmath43 .",
    "then by lemmas [ compl ] and [ ver1 ] , there exist two colors of @xmath61 , such that if we look only at @xmath215 , then @xmath3 can be colored with either of them .",
    "let @xmath250 denote the set consisting of these two colors .",
    "now we proceed almost identically as in the case above .",
    "if @xmath251 , then we color @xmath3 with @xmath100 and @xmath76 with @xmath249 .",
    ". then we color @xmath76 with @xmath84 and @xmath3 with @xmath206 or the other way around .",
    "we color @xmath43 .",
    "note that each colored external edge of @xmath43 is colored with a different color .",
    "this can not be said about @xmath215 - it may happen that the tail of @xmath215 is colored with the same color as some other external edge @xmath62 of @xmath215 , but we do not have to worry about edge @xmath62 ending in a monochromatic cycle because then the tail of @xmath43 and @xmath215 would also have to belong to such cycle .",
    "@xmath5 is a t - vertex corresponding to a twin @xmath41-kite @xmath43 , whose brother @xmath215 has not been step - processed .",
    "we color @xmath76 with @xmath84 or @xmath206 .",
    "if @xmath43 is vertical , then we color @xmath43 .",
    "otherwise we leave @xmath43 uncolored .",
    "@xmath5 is a t - vertex corresponding to a twin @xmath41-kite @xmath43 , whose brother @xmath215 has been step - processed but is uncolored . since @xmath215 has been step - processed , but is uncolored , it is horizontal . by lemma [ horiz ]",
    "@xmath215 is weakly flexible - therefore there exist two colors @xmath253 that can be used for coloring the tail of @xmath215 . if @xmath254 , then we color the tail of @xmath43 and @xmath215 with the color belonging to @xmath255 and @xmath76 with the remaining color of @xmath61 - note that this way each colored external edge of @xmath43 is colored with a different color . if @xmath256 , then we color the tail with @xmath84 and @xmath76 with @xmath206 .",
    "we also color both @xmath43 and @xmath215 .",
    "@xmath5 is an s - vertex",
    ". then we color @xmath76 with any color of @xmath61 different from @xmath83 .",
    "we also color @xmath44 .",
    "we argue that by proceeding as above , we do not create a monochromatic cycle in @xmath54 and thus process @xmath177 .",
    "this is so , because every external edge colored with @xmath60 while processing @xmath177 is contained in some path @xmath257 consisting of edges colored with @xmath60 that ends at a vertex of @xmath177 corresponding to a kite @xmath90 such that @xmath90 has only one incident external edge in @xmath54 colored with @xmath60 .",
    "let us now turn our attention to directed cycles .",
    "let @xmath58 be a directed cycle of @xmath212 .",
    "we can assume that @xmath58 is not as in lemma [ preparz ] , because we have already dealt with such cycles .",
    "thus @xmath58 contains two subsequent vertices @xmath258 such that neither @xmath5 nor @xmath143 is an o - vertex and @xmath58 contains an edge @xmath225 directed from @xmath5 to @xmath143 .",
    "if possible we choose @xmath5 that is an s - vertex or corresponds to a @xmath41-kite @xmath43 , whose tail also belongs to @xmath58 .",
    "if such @xmath5 does not exist then we choose @xmath5 that corresponds to a @xmath41-kite that is either non - twin or whose brother has already been step - processed . for",
    "now , we assume that this is the case .",
    "we start by coloring an incoming edge of @xmath5 .",
    "if @xmath5 corresponds to a @xmath41-kite @xmath43 , whose tail @xmath137 does not belong to @xmath58 , then @xmath137 can be colored with some two colors @xmath259 . in this case",
    "we color the incoming edge of @xmath5 with @xmath260 .",
    "we continue processing @xmath58 according to the rules described above until we reach the vertex @xmath143 .",
    "if applying the rules also to @xmath143 would result in the arc @xmath225 being colored with a different color than an incoming edge of @xmath5 , we apply the rules to @xmath143 and are done .",
    "otherwise @xmath143 must correspond to a @xmath41-kite @xmath215 which is either non - twin or that is a twin whose brother has already been colored .",
    "also , assume that the incoming edge of @xmath5 is colored with @xmath83 .",
    "it follows that the tail of @xmath215 can be colored with @xmath84 or @xmath206 , both different from @xmath83 , and that the outgoing edge of @xmath215 is colored with @xmath84 or @xmath206 .",
    "otherwise we would be able to color @xmath225 with a color different from @xmath83 .",
    "suppose that the outgoing edge of @xmath5 is colored with @xmath84 .",
    "in this case we color the tail of @xmath215 with @xmath206 and color @xmath225 with @xmath206 - if it is not incident to the tail of @xmath215 and with @xmath84 otherwise . by lemma [ wlasciwosci ]",
    "property 1 , it can not happen that both the outgoing and incoming edge of @xmath215 is incident to the foot of @xmath215 .",
    "we are left with the case when each vertex of @xmath58 corresponds to a twin @xmath41-kite whose brother also occurs on @xmath58 .",
    "we leave this case to the reader .",
    "the partition of @xmath55 into cycles and paths is carried out in such a way that two edges of @xmath176 belonging to a common path or cycle of @xmath46 , belong also to a common path or cycle of @xmath55 . also ,",
    "the partition is maximal , i.e. , we can not add any edge @xmath3 of @xmath176 to any path @xmath177 of @xmath55 so that @xmath178 is also a path or cycle of @xmath55 .",
    "we may assume that each path and cycle of @xmath55 is directed - the orientations of edges are consistent with those in @xmath47 .",
    "a * _ surrounding _ * of a cycle @xmath58 of @xmath46 , denoted as @xmath261 , contains every edge of @xmath58 and every edge of @xmath37 incident to @xmath58 .",
    "let @xmath177 be a path of @xmath55 directed from @xmath4 to @xmath5 .",
    "if @xmath5 has degree @xmath45 in @xmath55 , then an edge @xmath3 of @xmath177 incident to @xmath5 is said to be a * _ border _ * of @xmath177 .",
    "the * _ surrounding _ * of @xmath177 , denoted as @xmath262 , contains every edge of @xmath177 and every edge of @xmath37 incident to @xmath177 .",
    "we construct a directed graph @xmath263 such that each path of @xmath55 is represented by some vertex of @xmath264 and @xmath265 contains an edge @xmath266 iff @xmath177 has a border and the border of @xmath177 is incident to some vertex of @xmath257 .",
    "thus each vertex of @xmath264 has at most one outgoing edge .",
    "below we describe the algorithm for path-@xmath25-coloring the graph @xmath55 . in it",
    "we first color the cycles of @xmath55 and their surroundings .",
    "the order of coloring the paths of @xmath55 is dictated by the structure of graph @xmath267 : we begin by coloring the paths of @xmath55 that form cycles in @xmath267 ; next at each step we color an uncolored path , whose outdegree in @xmath267 is zero .",
    "the presence of borders complicates path-@xmath25-coloring in two aspects :    1 .",
    "suppose that edges @xmath268 and @xmath269 belong to some path of @xmath55 and that @xmath4 is incident to a double edge @xmath270 different from @xmath74 and @xmath76 .",
    "since @xmath270 has to be colored with two colors of @xmath179 , edges @xmath74 and @xmath76 must be assigned different colors of @xmath179 .",
    "therefore while path-@xmath25-coloring @xmath55 we will preserve the following invariant : + [ invdouble ] every two edges @xmath271 of @xmath55 such that their common endpoint @xmath4 is incident to a double edge @xmath270 different from @xmath74 and @xmath76 are assigned different colors of @xmath179 .",
    "2 .   each border @xmath139 of a path @xmath177 of @xmath55",
    "is colored while coloring the path @xmath177 and not before . in particular , if @xmath139 is double and is incident to a path or cycle @xmath257 such that @xmath257 is colored before @xmath177 , then while coloring @xmath257 we assign only one color to @xmath139 . the second one is assigned while coloring @xmath177 .",
    "if @xmath139 is double we may also think of it as of two edges - one being a border and the other an edge of the matching @xmath37 .",
    "+ because of this we modify the meaning of a safe edge in this section as follows .",
    "we say that a colored edge @xmath3 is safe if no matter how we color the so far uncolored edges except for any uncolored borders , @xmath3 is guaranteed not to belong to any monochromatic cycle . in particular",
    ", it means that if we want to prove that a newly colored border @xmath139 is safe we have to explicitly show that it does not belong to any monochromatic cycle - without taking use of the fact that previously colored edges are safe .    during the whole execution",
    "ensure that invariant [ invdouble ] is satisfied .",
    "color @xmath3 in such a way , that it is safe    color each @xmath272 in such a way , that it is safe remove each vertex of @xmath273 together with incident edges from @xmath267    color @xmath3 in such a way , that it is safe remove @xmath177 together with incident edges from @xmath267    [ cykl45 ] let @xmath58 be an uncolored cycle @xmath58 of @xmath46 considered at some step of algorithm color @xmath47 .",
    "then it is possible to color each edge belonging to @xmath261 in such a way that it is safe .",
    "* proof .",
    "* the procedure of coloring the edges of @xmath261 is similar to that described in the proofs of lemmas [ col ] and [ coluzup ] .",
    "we orient the edges of @xmath58 so that @xmath58 becomes directed .",
    "_ case 1 : _",
    "( i ) for each color @xmath274 there exists an edge of @xmath37 incident to one of the edges of @xmath58 that is colored @xmath60 or ( ii ) there exists an uncolored edge of @xmath37 incident to one of the edges of @xmath58 .",
    "first we color every uncolored non - double edge @xmath3 of @xmath37 incident to @xmath58 so that case ( i ) holds .",
    "next we color each double edge incident to @xmath58 .",
    "let @xmath2 be a double edge such that @xmath4 belongs to @xmath58 .",
    "then , necessarily @xmath5 belongs to some path of @xmath46 and since we color cycles of @xmath46 before coloring paths of @xmath46 , @xmath3 is uncolored .",
    "we start with such a double edge @xmath2 that the predecessor @xmath64 of @xmath4 on the cycle @xmath58 has no incident double edge .",
    "the existence of such double edge is guaranteed by lemma [ f12 ] .",
    "let @xmath268 and @xmath275 be two edges of @xmath58 incident to @xmath4 and let @xmath62 be an edge of @xmath37 incident to @xmath64 and @xmath60 the color of @xmath179 assigned to @xmath62 . to preserve invariant [ invdouble ] we have to color the edges @xmath226 with different colors of @xmath179 .",
    "to make it possible we color @xmath3 with a color @xmath100 belonging to @xmath276 , i.e. , for the time being we color @xmath3 only with one color instead of two .",
    "we proceed with each subsequent double edge incident to @xmath58 in the same way , i.e. , we color such edges in order of their occurrence along @xmath58 .",
    "further we color all edges of @xmath58 .",
    "let @xmath2 be an edge of @xmath58 oriented from @xmath4 to @xmath5 and let @xmath62 be an edge of @xmath37 incident to @xmath4 @xmath60 the color of @xmath179 assigned to @xmath62 .",
    "then we color @xmath3 with a color @xmath100 belonging to @xmath276 .",
    "we can notice that each so far colored edge is safe .",
    "suppose that @xmath2 is colored with @xmath60 .",
    "then we additionally assign @xmath277 to @xmath3 .",
    "_ case 2 : _ all edges of @xmath37 incident to @xmath58 are colored with the same color @xmath60 .",
    "+ we color any chosen one edge of @xmath58 with @xmath60 and the remaining ones with @xmath278 .",
    "@xmath67 +    [ path45 ] let @xmath177 be an uncolored path @xmath177 of @xmath46 considered at some step of algorithm color @xmath47 such that @xmath279 .",
    "then it is possible to color each edge belonging to @xmath262 in such a way that it is safe .",
    "* proof .",
    "* generally we proceed in a very similar way as in lemma [ cykl45 ] .",
    "the path @xmath177 is already oriented .",
    "first we color each edge of @xmath37 incident to @xmath177 with one color of @xmath179 in order of their occurrence along @xmath177 .",
    "if a given edge @xmath3 of @xmath37 incident to @xmath4 is double , then we color it with one color only and with the one different from that assigned to an edge of @xmath37 incident to @xmath64 which proceeds @xmath4 on @xmath177 .",
    "next we color each edge @xmath57 of @xmath177 directed from @xmath4 to @xmath5 , which is not a border of @xmath177 with a color different from that assigned to an edge @xmath62 of @xmath37 incident to @xmath4 .",
    "we must also color the border @xmath139 of @xmath177 , if @xmath177 has one",
    ".    if @xmath139 is double , then it must have got assigned one color of @xmath179 before we started coloring @xmath177 - that is because @xmath279 , which means that @xmath139 got colored while coloring the path or cycle of @xmath55 incident to @xmath139 .",
    "it may also happen that the border @xmath139 of @xmath177 is incident to some  internal  vertex of @xmath177 but then we have also already assigned one color of @xmath179 to it .",
    "if @xmath139 is already colored with @xmath83 , then we additionally assign @xmath280 to it .",
    "the safety of @xmath139 follows from the following .",
    "the edge @xmath3 proceeding @xmath139 on @xmath177 is colored with one color @xmath60 of @xmath179 . from the way we color edges of @xmath177",
    ", we notice that @xmath3 is contained in a monochromatic path @xmath281 colored with @xmath60 , whose one endpoint lies on @xmath177 . in other words we claim that @xmath281 has a ",
    "dead end  .",
    "we can observe that a part of @xmath281 starting with @xmath3 is contained in @xmath177 and does not leave @xmath177 .",
    "it follows from the fact that each edge @xmath57 of @xmath177 is colored with a color different from the one assigned to the edge of @xmath37 incident to @xmath4 .",
    "this means that @xmath3 is safe , because we have already colored every edge of @xmath177 and every edge of @xmath37 incident to @xmath177 ( except possibly for some borders ) , hence @xmath139 is safe .",
    "if the border @xmath282 of @xmath177 is not double , then we still have to color it .",
    "suppose that @xmath5 is the endpoint of @xmath177 .",
    "then three edges of the multigraph @xmath55 incident to @xmath5 have already been colored .",
    "this means that there is only one color of @xmath179 that can be used for coloring @xmath139 .",
    "we must also ensure that after coloring @xmath139 , it does not belong to any monochromatic cycle . since @xmath177 is amenable , @xmath139 is either proceeded by a double edge on @xmath177 or an edge @xmath62 of @xmath37 incident to @xmath5 is also incident to a last - but - three vertex of @xmath177 .",
    "in the first case , the safety of @xmath139 follows from the fact that an edge of @xmath177 proceeding a double edge proceeding @xmath139 is safe .",
    "( the argument is the same as above . ) in the second case we leave the edge @xmath62 uncolored till this point .",
    "once we know that we are forced to color @xmath139 , with say @xmath274 , we color @xmath62 with the other color of @xmath179 and we also color accordingly the two edges proceeding @xmath139 and are done .",
    "@xmath67 +    [ lemma : coloring_cycle_of_paths ] let @xmath273 be a directed cycle of @xmath267 considered at some step of algorithm color @xmath47 .",
    "then it is possible to color each edge belonging to the surrounding of each path of @xmath55 occurring on @xmath273 in such a way that it is safe .    *",
    "* suppose that the cycle @xmath273 goes through vertices @xmath283 in this order .",
    "let @xmath284 denote the border of path @xmath285 of @xmath55 for each @xmath286 .",
    "we start by coloring the path @xmath287 and its surrounding in the manner described in the proof of lemma [ path45 ] .",
    "if the border @xmath288 is not double , then we leave it uncolored .",
    "next we color each of the paths @xmath289 and their surroundings together with their borders , also in the way described in the proof of lemma [ path45 ] .",
    "next we have to check two possibilities of dealing with the path @xmath281 .",
    "first we color the path @xmath281 together with its border and surrounding in the same manner as the remaining paths @xmath290 and if the border @xmath288 is uncolored , because it is not double , we color it with the only possible color of @xmath179 .",
    "it may happen , however , that by doing so we create a monochromatic cycle @xmath90 that is formed by the part of @xmath287 between @xmath218 and @xmath220 , the part of @xmath291 between @xmath220 and @xmath221 and so on until the part of @xmath281 between @xmath217 and @xmath218 .",
    "if this is the case , then we leave the part of @xmath281 between @xmath217 and @xmath218 colored as it is and uncolor the remaining part of @xmath281 .",
    "if the border @xmath288 is not double , then we change its color to the opposite one .",
    "if the border @xmath288 is double , then we change the color of the edge proceeding it on @xmath287 to the opposite one .",
    "next we change the orientation of the uncolored part of @xmath281 as follows .",
    "the endpoints of @xmath281 are @xmath217 and some vertex @xmath292 and originally @xmath281 is oriented from @xmath292 to @xmath217 .",
    "now we change the orientation of the part @xmath257 of @xmath281 between @xmath218 and @xmath292 so that it is directed from @xmath218 to @xmath292 .",
    "let @xmath293 denote the edge of @xmath257 incident to @xmath218 .",
    "since @xmath218 has degree @xmath45 in the multigraph @xmath55 , there exists only one color @xmath60 of @xmath179 that can be used for coloring @xmath3 .",
    "the rest of @xmath257 is colored in the standard way .",
    "we only have to show that the edge @xmath3 is safe , as every other edge considered in this lemma is safe by reasoning analogous to that used in two previous lemmas .",
    "the edge @xmath3 is safe because it is colored with same color @xmath60 that every edge of @xmath90 but one is colored with . also , @xmath3 is the only edge incident to @xmath90 but not lying on @xmath90 that is colored with @xmath60 .",
    "the example of this algorithm is presented on figure [ fig : path_recoloring ] .",
    "\\(a ) at ( 0,0 ) ; ( b ) at ( [ shift=(a ) ] 15:1.25 ) ; ( d ) at ( [ shift=(b ) ] 45:1.25 ) ; ( e ) at ( [ shift=(d ) ] 75:1.25 ) ; ( f ) at ( [ shift=(e ) ] 195:1.25 ) ; ( g ) at ( [ shift=(f ) ] 225:1.25 ) ;    \\(i ) at ( [ shift=(a ) ] 180:1.25 ) ; ( j ) at ( [ shift=(a ) ] 270:1.25 ) ; ( k ) at ( [ shift=(i ) ] 270:1.25 ) ; ( l ) at ( [ shift=(e ) ] 0:1.25 ) ;    \\(m ) at ( [ shift=(e ) ] 315:1.25 ) ; ( n ) at ( [ shift=(l ) ] 325:1.25 ) ;    \\(a ) to ( b ) ; ( b ) to ( d ) ; ( d ) to ( e ) ; ( e ) to ( f ) ; ( f ) to ( g ) ; ( g ) to ( a ) ; ( i ) to ( a ) ; ( l ) to ( e ) ;    \\(j ) to node[midway , label = left : ] ( a ) ; ( k ) to node[midway , label = left : ] ( i ) ; ( m ) to node[midway , label = right : ] ( e ) ; ( n ) to node[midway , label = right : ] ( l ) ;    ( bt ) at ( [ shift=(b ) ] 135:0.15 ) ; ( dt ) at ( [ shift=(d ) ] 135:0.15 ) ; ( bt ) to ( dt ) ;    ( ft ) at ( [ shift=(f ) ] 135:0.15 ) ; ( gt ) at ( [ shift=(g ) ] 135:0.15 ) ; ( gt ) to ( ft ) ;    ( tmp ) at ( 0,-2 ) ;    0.47    \\(a ) at ( 0,0 ) ; ( b ) at ( [ shift=(a ) ] 15:1.25 ) ; ( d ) at ( [ shift=(b ) ] 45:1.25 ) ; ( e ) at ( [ shift=(d ) ] 75:1.25 ) ; ( f ) at ( [ shift=(e ) ] 195:1.25 ) ; ( g ) at ( [ shift=(f ) ] 225:1.25 ) ;    \\(i ) at ( [ shift=(a ) ] 180:1.25 ) ; ( j ) at ( [ shift=(a ) ] 270:1.25 ) ; ( k ) at ( [ shift=(i ) ] 270:1.25 ) ; ( l ) at ( [ shift=(e ) ] 0:1.25 ) ;    \\(m ) at ( [ shift=(e ) ] 315:1.25 ) ; ( n ) at ( [ shift=(l ) ] 325:1.25 ) ;    \\(a ) to node[midway , label = below : ] ( b ) ; ( b ) to node[midway , label = below right : ] ( d ) ; ( d ) to node[midway , label = left : ] ( e ) ; ( e ) to node[midway , label = above : ] ( f ) ; ( f ) to node[midway , label = above left : ] ( g ) ; ( g ) to node[midway , label = above left : ] ( a ) ; ( i ) to node[midway , label = above : ] ( a ) ; ( l ) to node[midway , label = above : ] ( e ) ;    \\(j ) to node[midway , label = left : ] ( a ) ; ( k ) to node[midway , label = left : ] ( i ) ; ( m ) to node[midway , label = right : ] ( e ) ; ( n ) to node[midway , label = right : ] ( l ) ;    ( bt ) at ( [ shift=(b ) ] 135:0.15 ) ; ( dt ) at ( [ shift=(d ) ] 135:0.15 ) ; ( bt ) to ( dt ) ;    ( ft ) at ( [ shift=(f ) ] 135:0.15 ) ; ( gt ) at ( [ shift=(g ) ] 135:0.15 ) ; ( gt ) to ( ft ) ;    ( tmp ) at ( 0,-2 ) ;     +    0.47    \\(a ) at ( 0,0 ) ; ( b ) at ( [ shift=(a ) ] 15:1.25 ) ; ( d ) at ( [ shift=(b ) ] 45:1.25 ) ; ( e ) at ( [ shift=(d ) ] 75:1.25 ) ; ( f ) at ( [ shift=(e ) ] 195:1.25 ) ; ( g ) at ( [ shift=(f ) ] 225:1.25 ) ;    \\(i ) at ( [ shift=(a ) ] 180:1.25 ) ; ( j ) at ( [ shift=(a ) ] 270:1.25 ) ; ( k ) at ( [ shift=(i ) ] 270:1.25 ) ; ( l ) at ( [ shift=(e ) ] 0:1.25 ) ;    \\(m ) at ( [ shift=(e ) ] 315:1.25 ) ; ( n ) at ( [ shift=(l ) ] 325:1.25 ) ;    \\(a ) to node[midway , label = below : ] ( b ) ; ( b ) to node[midway , label = below right : ] ( d ) ; ( d ) to node[midway , label = left : ] ( e ) ; ( e ) to node[midway , label = above : ] ( f ) ; ( f ) to node[midway , label = above left : ] ( g ) ; ( g ) to node[midway , label = above left : ] ( a ) ; ( i ) to node[midway , label = above : ] ( a ) ; ( e ) to node[midway , label = above : ] ( l ) ;    \\(j ) to node[midway , label = left : ] ( a ) ; ( k ) to node[midway , label = left : ] ( i ) ; ( m ) to node[midway , label = right : ] ( e ) ; ( n ) to node[midway , label = right : ] ( l ) ;    ( bt ) at ( [ shift=(b ) ] 135:0.15 ) ; ( dt ) at ( [ shift=(d ) ] 135:0.15 ) ; ( bt ) to ( dt ) ;    ( ft ) at ( [ shift=(f ) ] 135:0.15 ) ; ( gt ) at ( [ shift=(g ) ] 135:0.15 ) ; ( gt ) to ( ft ) ;    @xmath67 +",
    "first we want to guarantee that property 6 .",
    "is satisfied .",
    "let us say that an edge @xmath3 is a * _ d - edge _ * if it belongs to @xmath37 and some kite .",
    "let @xmath294 contain every cycle of @xmath46 of odd length @xmath180 that has @xmath180 different incident d - edges .",
    "let @xmath295 denote the set of all d - edges .",
    "we build a bipartite graph @xmath296 such that there exists an edge in @xmath297 between a cycle @xmath58 of @xmath294 and edge @xmath3 of @xmath295 iff @xmath3 is incident to @xmath58 .",
    "furthermore for each 4-kite @xmath44 incident to at most three cycles in @xmath294 we merge vertices corresponding to d - edges in s into one vertex .",
    "let us notice that the degree of each d - edge of @xmath295 in @xmath298 is at most @xmath41 and the degree of each cycle @xmath58 of @xmath294 is at least @xmath41 .",
    "we compute a matching @xmath299 of size @xmath300 in the graph @xmath298 . by hall",
    "s theorem such a matching always exists .",
    "then for each cycle @xmath58 and matched to it d - edge @xmath3 we will either ( i ) add an outgoing edge of @xmath58 incident to @xmath3 to @xmath173 or ( ii ) ensure that @xmath3 is not a double edge .",
    "we begin with the proof for the case when there are only @xmath41-kites .",
    "let @xmath43 be any @xmath41-kite on vertices @xmath125 such that @xmath2 is a d - edge of @xmath43 and @xmath301 and @xmath302 .",
    "we begin with the case when @xmath43 has three incoming and three outgoing edges of @xmath46 incident to it .",
    "we add @xmath3 to @xmath167 .",
    "to @xmath173 we add any outgoing edge of @xmath43 belonging to @xmath46 ( it can be an edge required by @xmath299 ) .",
    "if at some later point @xmath43 gets three incident incoming edges of @xmath173 , then we remove @xmath3 from @xmath167 and replace it with that one of the edges @xmath303 that is incident to an outgoing edge of @xmath173 and orient it so that it is directed to @xmath181 .",
    "we do it so that lemma [ wlasnosci ] property ( 2 ) is satisfied .",
    "whenever @xmath3 does not belong to @xmath163 , we add it to @xmath167 and an outgoing edge of @xmath43 incident to @xmath3 to @xmath173 .",
    "we consider now the cases when @xmath43 has two incoming and two outgoing edges of @xmath46 incident to it . in figure",
    "[ fig : triangles_2out2 in ] we show how to assign edges of all possible @xmath41-kites with two incoming and two outgoing edges to @xmath167 and @xmath173 .",
    "0.47    .47     +    0.47    0.47     +    0.47    0.47    in case of triangles with one incoming and one outgoing edge there are already two edges of @xmath43 in @xmath304 .",
    "therefore we add remaining edge to @xmath167 and incident edge ( we can guarantee that it is outgoing when constructing @xmath182 ) to @xmath173 .",
    "to finish the proof we must consider all cases for @xmath45-kites .",
    "we say that an edge @xmath3 is a * _ side edge _ * if it belongs to 4-kite , but not to @xmath37 .",
    "let @xmath58 be any @xmath45-kite on vertices @xmath132 such that @xmath57 and @xmath305 are d - edges and @xmath306 and @xmath240 are side edges .",
    "let @xmath307 be the set of those edges in @xmath161 , whose both endpoints are in @xmath308 ( so @xmath309 contains all incoming and outgoing edges incident to @xmath58 ) .",
    "first we consider the cases when @xmath58 has one incoming and one outgoing edge of @xmath46 incident to it ( by our construction of @xmath46 these edges must be incident to different vertices of @xmath58 ) . if these edges are not incident to the same side edge , we add outgoing edge to @xmath173 and the side edge incident to it to @xmath167 .",
    "otherwise let s assume that they are incident to @xmath306 , and that edge incident to @xmath4 is outgoing in @xmath182 , whereas edge incident to @xmath310 is outgoing in @xmath183 .    1",
    ".   @xmath4 and @xmath310 are incident to at most @xmath25 half - edges or @xmath73 edge of @xmath307 and @xmath73 half - edge - we divide half - edges into @xmath159 and @xmath160 so that degree of @xmath310 in @xmath311 is 3 and degree of @xmath4 in @xmath312 is 3 .",
    "then we add @xmath306 to @xmath167 and outgoing edge to @xmath173 .",
    "@xmath310 is incident to @xmath73 edge of @xmath307 and @xmath25 half - edges and @xmath306 is not in @xmath307 - then half - edge @xmath306 is in @xmath46 so @xmath4 is not incident to any edge in @xmath307 .",
    "we divide half - edges into @xmath159 and @xmath160 so that @xmath57 is not in @xmath159 and degree of @xmath4 in @xmath312 is 3 .",
    "if outgoing edge is incident to @xmath4 we add @xmath57 to @xmath167 , and otherwise we add @xmath306 to @xmath167 . in both cases",
    "we add outgoing edge to @xmath173 .",
    "@xmath306 is in @xmath307 - we divide half - edges so that @xmath57 is not in @xmath159 and @xmath305 is not in @xmath160 .",
    "we add d - edge incident to outgoing edge to @xmath167 and outgoing edge to @xmath173 .",
    "now let s consider the cases when two vertices incident to the same d - edge , say @xmath57 , are incident to one incoming and one outgoing edge each and the other two vertices are nt incident to any incoming or outgoing edges . if @xmath181 and @xmath310 are incident to two half - edges each then two half - edges incident to @xmath181 go to @xmath159 , and the other two half - edges go to @xmath160 .",
    "if @xmath181 and @xmath310 are incident to one half - edge each then @xmath161 must contain @xmath305 and we divide half - edges into @xmath159 and @xmath160 arbitrarily .",
    "there are three cases depending on which edges incident to @xmath310 are in @xmath313 ( cases when in @xmath163 there are half - edges incident to @xmath181 are symmetric ) :    1 .",
    "@xmath305 and @xmath314 are in @xmath313 - we add outgoing edge incident to @xmath4 and @xmath314 to @xmath173 and add @xmath306 and @xmath240 to @xmath167 .",
    "2 .   @xmath305 and @xmath306 are in @xmath313 - we add outgoing edge incident to @xmath5 to @xmath173 and add @xmath240 to @xmath167 .",
    "3 .   @xmath314 and @xmath306 are in @xmath313 - we add outgoing edge incident to @xmath5 to @xmath173 .",
    "if incoming edge incident to @xmath5 is also in @xmath173 we add @xmath240 to @xmath167 .",
    "otherwise we add @xmath305 to @xmath167    the next cases are similar to the previous one , but now vertices incident to one incoming and one outgoing edge each are incident to the same side edge , say @xmath306 .",
    "we divide half - edges same as before , so two half - edges incident to @xmath5 go to @xmath159 , and the other two go to @xmath160 .",
    "now the cases are :    1 .",
    "@xmath314 and @xmath240 are in @xmath313 and @xmath310 was matched in @xmath299 with @xmath305 - we add outgoing edge incident to @xmath310 and @xmath314 to @xmath173 .",
    "if incoming edge incident to @xmath310 is in @xmath173 we add @xmath305 and @xmath306 to @xmath167 .",
    "otherwise we add @xmath305 and @xmath240 to @xmath167 .",
    "2 .   @xmath314 and @xmath240 are in @xmath313 and @xmath310 was nt matched in @xmath299 with @xmath305 - we add outgoing edge incident to @xmath4 and @xmath314 to @xmath173 and we add @xmath57 and @xmath315 to @xmath167 .",
    "@xmath314 and @xmath57 are in @xmath313 - we add outgoing edge incident to @xmath4 and @xmath314 to @xmath173 .",
    "if incoming edge incident to @xmath4 is in @xmath173 we add @xmath306 and @xmath240 to @xmath167 .",
    "otherwise we add @xmath240 and @xmath305 to @xmath167 .",
    "4 .   @xmath57 and @xmath240 are in @xmath313 and @xmath310 was matched in @xmath299 with @xmath305 - we add outgoing edge incident to @xmath310 to @xmath173 and @xmath305 to @xmath167 .",
    "@xmath57 and @xmath240 are in @xmath313 and @xmath310 was nt matched in @xmath299 with @xmath305 - we add outgoing edge incident to @xmath4 to @xmath173 .",
    "if incoming edge incident to @xmath4 is in @xmath173 we add @xmath306 to @xmath167 .",
    "otherwise we add @xmath305 to @xmath167 .",
    "now there are three cases in which there is a vertex in @xmath58 , say @xmath4 , incident to two edges in @xmath316 , two vertices incident to one edge in @xmath309 each and a vertex incident to no edge in @xmath309 .",
    "the first case is when @xmath310 is nt incident to any edge in @xmath309 .",
    "let s assume that edge incident to @xmath5 is outgoing in @xmath182 .",
    "we divide half - edges into @xmath159 and @xmath160 so that ( i ) in @xmath317 there is an edge incident to @xmath5 and edge incident to @xmath310 and , similarly , in @xmath318 there is an edge incident to @xmath181 and edge incident to @xmath310 ( ii ) no two half - edges incident to @xmath4 are in the same set ( this condition can be satisfied because in @xmath46 there are at most two half - edges incident to @xmath4 ) .",
    "now we consider all subcases of which edges are in @xmath313 :    1 .",
    "@xmath240 and @xmath305 are in @xmath313 - we add outgoing edge incident to @xmath4 to @xmath173 and @xmath306 to @xmath167 .",
    "2 .   @xmath240 and @xmath314 are in @xmath313 - we add outgoing edge incident to @xmath4 and @xmath314 to @xmath173 and add @xmath306 and @xmath305 to @xmath167 .",
    "3 .   @xmath240 and @xmath306 are in @xmath313 - we add outgoing edge incident to @xmath4 to @xmath173 .",
    "if incoming edge incident to @xmath4 is also in @xmath173 we add @xmath57 to @xmath167 .",
    "otherwise we add @xmath305 to @xmath167 .",
    "4 .   @xmath314 and @xmath305 are in @xmath313 - we add outgoing edge incident to @xmath4 to @xmath173 and @xmath57 to @xmath167 .",
    "@xmath314 and @xmath306 are in @xmath313 - there is no edge incident to @xmath181 , so edge incident to @xmath5 is outgoing .",
    "we add outgoing edge incident to @xmath5 to @xmath173 and @xmath240 to @xmath167 .",
    "@xmath57 and @xmath305 are in @xmath313 - we add outgoing edge incident to @xmath4 to @xmath173 and @xmath306 to @xmath167 .",
    "@xmath57 and @xmath314 are in @xmath313 - we add outgoing edge incident to @xmath4 and @xmath314 to @xmath173 and add @xmath306 and @xmath305 to @xmath167 .",
    "@xmath239 and @xmath305 are in @xmath313 - we add outgoing edge incident to @xmath4 and @xmath239 to @xmath173 and add @xmath57 and @xmath306 to @xmath167 .",
    "@xmath239 and @xmath240 are in @xmath313 - @xmath239 is incident to neither @xmath5 nor @xmath310 , so edge incident to @xmath181 is outgoing .",
    "we add outgoing edge incident to @xmath4 to @xmath173 .",
    "if incoming edge incident to @xmath4 is also in @xmath173 we add @xmath306 to @xmath167 . otherwise we add @xmath305 to @xmath167 .",
    "@xmath305 and @xmath306 are in @xmath313 - we add outgoing edge incident to @xmath4 to @xmath173 and @xmath57 to @xmath167 .    in the second case",
    "@xmath181 is nt incident to any edge in @xmath309 .",
    "we divide half - edges same as in the previous case , so we guarantee that ( i ) in @xmath317 there is an edge incident to @xmath5 and edge incident to @xmath181 and , in @xmath318 there is an edge incident to @xmath310 and edge incident to @xmath181 .",
    "condition ( ii ) remains the same .",
    "now the subcases are as follows :",
    "1 .   @xmath240 and @xmath305 are in @xmath313 - we add outgoing edge incident to @xmath4 to @xmath173 and @xmath57 to @xmath167 .",
    "2 .   @xmath240 and @xmath239 are in @xmath313 - there is no edge incident to @xmath310 , so edge incident to @xmath5 is outgoing .",
    "we add outgoing edge incident to @xmath4 to @xmath173 .",
    "if incoming edge incident to @xmath4 is also in @xmath173 we add @xmath306 to @xmath167 .",
    "otherwise we add @xmath305 to @xmath167 .",
    "3 .   @xmath314 and @xmath240 are in @xmath313 - we add outgoing edge incident to @xmath4 and @xmath314 to @xmath173 and add @xmath306 and @xmath305 to @xmath173 .",
    "4 .   @xmath314 and @xmath239 are in @xmath313 - we add outgoing edge incident to @xmath4 to @xmath173 .",
    "if incoming edge incident to @xmath4 is also in @xmath173 we add @xmath57 to @xmath167 , and otherwise we add @xmath305 to @xmath167 . in this case",
    "at least one of @xmath319 is not double edge , so cycle going through @xmath5 and @xmath310 satisfies condition 6 from lemma .",
    "@xmath314 and @xmath305 are in @xmath313 - we add outgoing edge incident to @xmath4 and @xmath314 to @xmath173 and add @xmath306 and @xmath240 to @xmath173 .",
    "@xmath57 and @xmath240 are in @xmath313 - there is no edge incident to @xmath310 , so edge incident to @xmath5 is outgoing .",
    "we add outgoing edge incident to @xmath4 to @xmath173 .",
    "if incoming edge incident to @xmath4 is also in @xmath173 we add @xmath306 to @xmath167 .",
    "otherwise we add @xmath305 to @xmath167 .",
    "@xmath57 and @xmath305 are in @xmath313 - we add outgoing edge incident to @xmath4 to @xmath173 .",
    "if incoming edge incident to @xmath4 is also in @xmath173 we add @xmath306 to @xmath167 .",
    "otherwise we add @xmath240 to @xmath167 .",
    "@xmath305 and @xmath239 are in @xmath313 - there is no edge incident to @xmath5 , so edge incident to @xmath310 is outgoing .",
    "we add outgoing edge incident to @xmath4 to @xmath173 and @xmath57 to @xmath167 .",
    "@xmath306 and @xmath240 are in @xmath313 - @xmath306 is incident to neither @xmath5 nor @xmath181 , so edge incident to @xmath310 is outgoing .",
    "we add outgoing edge incident to @xmath4 to @xmath173 .",
    "if incoming edge incident to @xmath4 is also in @xmath173 we add @xmath57 to @xmath167 .",
    "otherwise we add @xmath305 to @xmath167 .",
    "@xmath306 and @xmath305 are in @xmath313 - there is no edge incident to @xmath5 , so edge incident to @xmath310 is outgoing .",
    "we add outgoing edge incident to @xmath4 to @xmath173 .",
    "if incoming edge incident to @xmath4 is also in @xmath173 we add @xmath57 to @xmath167 .",
    "otherwise we add @xmath240 to @xmath167 .    in the third case @xmath5",
    "is nt incident to any edge in @xmath309 .",
    "similarly as before we divide half - edges to guarantee that ( i ) in @xmath317 there is an edge incident to @xmath181 and edge incident to @xmath5 and , in @xmath318 there is an edge incident to @xmath310 and edge incident to @xmath5 .",
    "once again condition ( ii ) remains the same .",
    "now the subcases are as follows :    1 .",
    "@xmath240 and @xmath314 are in @xmath313 - we add outgoing edge incident to @xmath4 to @xmath173 and @xmath57 to @xmath167 .",
    "condition 6 from lemma is satisfied , because @xmath305 is not a double edge .",
    "@xmath240 and @xmath57 are in @xmath313 - we add outgoing edge incident to @xmath4 to @xmath173 .",
    "if incoming edge incident to @xmath4 is also in @xmath173 we add @xmath306 to @xmath167 .",
    "otherwise we add @xmath305 to @xmath167 .",
    "3 .   @xmath239 and @xmath240 are in @xmath313 - we add outgoing edge incident to @xmath4 and @xmath240 to @xmath173 .",
    "if incoming edge incident to @xmath4 is also in @xmath173 we add @xmath306 and @xmath57 to @xmath167 .",
    "otherwise we add @xmath57 and @xmath305 to @xmath167 .",
    "4 .   @xmath239 and @xmath314 are in @xmath313 - @xmath239 is incident to neither @xmath5 nor @xmath310 , so edge incident to @xmath181 is outgoing .",
    "we add @xmath4 to @xmath173 and @xmath57 to @xmath167 .",
    "@xmath305 and either @xmath240 or @xmath314 are in @xmath313 - we add outgoing edge incident to @xmath4 to @xmath173 and @xmath57 to @xmath167 . 6 .",
    "@xmath305 and @xmath57 are in @xmath313 - we add outgoing edge incident to @xmath4 to @xmath173 .",
    "if incoming edge incident to @xmath4 is also in @xmath173 we add @xmath306 to @xmath167 .",
    "otherwise we add @xmath240 to @xmath167 .",
    "@xmath314 and @xmath57 are in @xmath313 - we add outgoing edge incident to @xmath4 and @xmath314 to @xmath173 .",
    "if incoming edge incident to @xmath4 is also in @xmath173 we add @xmath306 and @xmath305 to @xmath167 .",
    "otherwise we add @xmath240 and @xmath305 to @xmath167 .",
    "@xmath306 and @xmath240 are in @xmath313 - @xmath306 is incident to neither @xmath5 nor @xmath181 , so edge incident to @xmath310 is outgoing .",
    "we add outgoing edge incident to @xmath4 to @xmath173 and @xmath57 to @xmath167 .",
    "@xmath306 and @xmath314 are in @xmath313 - @xmath306 is incident to neither @xmath5 nor @xmath181 , so edge incident to @xmath310 is outgoing .",
    "we add outgoing edge incident to @xmath4 and @xmath314 to @xmath173 and add @xmath57 and @xmath240 to @xmath167 .",
    "the final case when @xmath58 is incident to two incoming and two outgoing edges of @xmath46 is when each vertex of @xmath58 is incident to one edge of @xmath320 .",
    "first suppose that @xmath306 is in @xmath161 .",
    "then we can assume that in @xmath163 there is half - edge incident to @xmath5 ( or there is @xmath240 in @xmath161 ) , because other cases are symmetric :    1 .",
    "@xmath57 is in @xmath313 - we add outgoing edge incident to @xmath4 or @xmath310 to @xmath173 and @xmath305 to @xmath167 .",
    "@xmath314 is in @xmath313 - we add outgoing edge incident to @xmath4 or @xmath310 and @xmath314 to @xmath173 and @xmath57 and @xmath305 to @xmath167 .",
    "@xmath240 is in @xmath313 - we add outgoing edge incident to @xmath4 or @xmath310 to @xmath173 and d - edge adjacent to added outgoing edge to @xmath167 .",
    "if @xmath239 is in @xmath161 we assume that in @xmath313 there is an edge incident to @xmath310 and that edge incident to @xmath310 is outgoing .",
    "if edge incident to @xmath4 is outgoing we add it to @xmath173 and add @xmath57 to @xmath167 .",
    "if edge incident to @xmath181 is outgoing then there are three cases :    1 .",
    "@xmath306 is in @xmath313 - we add outgoing edge incident to @xmath181 and @xmath239 to @xmath173 and add @xmath240 and @xmath305 to @xmath167 .",
    "@xmath314 is in @xmath313 - we add outgoing edge incident to @xmath181 to @xmath173 and add @xmath305 to @xmath167 .",
    "@xmath305 is in @xmath313 - we add outgoing edge incident to @xmath181 to @xmath173 and add @xmath57 to @xmath167 .",
    "now suppose that @xmath57 is in @xmath161 .",
    "we assume that in @xmath313 there is an edge incident to @xmath310 and that edge incident to @xmath310 is outgoing :    1 .",
    "@xmath306 or @xmath314 is in @xmath313 - we add outgoing edge incident to @xmath310 to @xmath173 and @xmath305 to @xmath167 .",
    "@xmath305 is in @xmath313 - we add outgoing edge incident @xmath310 to @xmath173 and @xmath306 to @xmath167 .",
    "finally suppose that there are no whole edges inside c , so there are four half - edges . into @xmath159",
    "belong half - edges adjacent to outgoing edges in @xmath182 and into @xmath160 those adjacent to outgoing edges in @xmath183 .",
    "now we have to consider all possible edges in @xmath163 :    1 .",
    "@xmath306 and one other edge is in @xmath163 - we act the same as in case with side edge .",
    "2 .   @xmath57 and @xmath314 are in @xmath163 - if edge incident to @xmath310 is outgoing we add it to @xmath173 .",
    "otherwise edge incident to @xmath5 is outgoing and we add it to @xmath173 . in both cases",
    "we add @xmath305 to @xmath167 .",
    "3 .   @xmath57 and @xmath305 are in @xmath163 - we add any outgoing edge to @xmath173 and adjacent side edge to @xmath167 .",
    "4 .   @xmath239 and @xmath314 are in @xmath163 - we add any outgoing edge to @xmath173 and adjacent d - edge to @xmath167 .",
    "now let s consider the case when @xmath58 has three incoming and three outgoing edges of @xmath46 incident to it and there is a vertex , say @xmath310 which is not incident to any incoming or outgoing edge .",
    "then @xmath310 is incident to two half - edges , on of which is in @xmath163 .",
    "if in @xmath163 there is half - edge @xmath305 , we add outgoing edge incident to @xmath181 to @xmath173 and add @xmath306 to @xmath167 .",
    "if incoming edge incident to @xmath181 is also in @xmath173 we add @xmath240 to @xmath167 , so that property 5 from lemma is satisfied . if in @xmath163 there is either @xmath314 or @xmath306 , we add outgoing edge incident to @xmath181 to @xmath173 and @xmath305 to @xmath167 .    in all other cases",
    "when @xmath58 has three incoming and three outgoing edges of @xmath46 incident to it , there are at most two half - edges , each incident to different vertex . in these cases",
    "we divide half - edges into @xmath159 and @xmath160 in such way , that to @xmath159 belongs half - edge incident to outgoing edge in @xmath182 .",
    "now we have to consider all cases to which vertices incoming and outgoing vertices are incident :    1 .",
    "vertices incident to two edges of @xmath309 are incident to the same d - edge , say @xmath57 - let s assume that edge incident to @xmath181 is outgoing ( and therefore either half - edge incident to @xmath181 is in @xmath163 or @xmath305 is in @xmath161 ) .",
    "then we add outgoing edge incident to @xmath181 to @xmath173 and either add @xmath240 to @xmath167 if @xmath305 is in @xmath191 or add @xmath305 to @xmath167 otherwise .",
    "vertices incident to two edges of @xmath309 are incident to the same side edge say @xmath306 - let s assume that edge incident to @xmath181 is outgoing ( and therefore either half - edge incident to @xmath181 is in @xmath163 or @xmath240 is in @xmath161 ) .",
    "then if @xmath240 is in @xmath313 we add outgoing edge incident to @xmath181 to @xmath173 and @xmath305 to @xmath167 .",
    "if @xmath239 is in @xmath163 we add outgoing edge incident to @xmath4 to @xmath173 and @xmath57 to @xmath167 .",
    "finally if @xmath305 is in @xmath163 we add outgoing edge incident to @xmath310 to @xmath173 and @xmath240 to @xmath167 .",
    "if incoming edge incident to @xmath310 is also in @xmath173 we add @xmath306 to @xmath167 , so that property 5 from lemma is satisfied 3",
    ".   none of the above cases - let s assume that @xmath4 and @xmath181 are incident to two edges in @xmath309 and edge incident to @xmath310 is outgoing ( and therefore either half - edge incident to @xmath310 is in @xmath163 or @xmath314 is in @xmath161 ) .",
    "then if @xmath314 is in @xmath313 we add outgoing edge incident to @xmath310 to @xmath173 and @xmath305 to @xmath167 .",
    "if @xmath306 is in @xmath161 we add outgoing edge incident to @xmath4 to @xmath173 and @xmath57 to @xmath167",
    ". finally if @xmath305 is in @xmath163 there are two subcases : 1 .   in matching @xmath299 cycle incident to vertex @xmath4",
    "is matched to d - edge @xmath57 - then we add outgoing edge incident to @xmath4 to @xmath173 and @xmath57 to @xmath167 2 .",
    "otherwise we add outgoing edge incident to @xmath181 to @xmath173 .",
    "if also incoming edge incident to @xmath181 is in @xmath173 we add @xmath240 to @xmath167 , and if it is nt in @xmath173 we add @xmath57 to @xmath167 .    in the case",
    "when @xmath58 is incident to four incoming and four outgoing edges of @xmath46 we add outgoing edge incident to @xmath4 or @xmath5 to @xmath173 ( depending on which one of cycles incident to these vertices was matched to @xmath57 in @xmath299 ; if none of them we choose arbitrarily ) and add @xmath57 to @xmath167 .",
    "let s now see , that the cycle cover we have found using our gadgets is indeed what had been promised  the maximum weight cycle cover ( in which we agree to having paths ending with half - edges ) not containing kites from @xmath39 .",
    "to prove that we will show , that no such cycle cover of @xmath35 has been blocked by our gadgets and demands , so for every proper cycle cover of @xmath35 , it can be translated into a b - matching in the modified graph .",
    "let s start off with triangles .",
    "[ lem : maxtsp_g2compute_trikite ] let @xmath321 be a 3-kite in the graph @xmath39 .",
    "let @xmath322 be a cycle cover of @xmath35 not containing @xmath323 ( as one of the cycles ) .",
    "there exists a selection of edges in the gadget @xmath324 corresponding to @xmath323 , that is compliant with the cycle cover @xmath325 and every node @xmath5 in @xmath324 has exactly @xmath326 adjacent edges in it",
    ". its total weight will be equal to the weight of @xmath325 .",
    "* proof .",
    "* since the cycle cover @xmath322 does nt contain @xmath323 as one of its cycles , it will have at least two edges connecting the nodes of this triangle with other vertices in the graph ( that are _ external _ with regard to @xmath323 ) .",
    "these edges are replicated in the gadget - modified graph , so there is no doubt , they can be selected into the b - matching .",
    "we will now present , how to handle the edges of the triangle @xmath323 and the gadget @xmath324 .",
    "we will consider different interactions between @xmath325 and @xmath323 .    *",
    "if @xmath327 ( no edge of the kite is used in the cycle cover ) , then the demands of vertices @xmath4 , @xmath5 and @xmath181 are fulfilled by the external edges . additionally , we select the edges @xmath328 ( middle edge on the right side of the gadget ) , @xmath329 ( middle on the left side ) , @xmath330 and @xmath331 . *",
    "if @xmath332 ( the cycle cover contains one side of the triangle ) , the b - matching obviously contains @xmath333 and @xmath334  the halves of the edge @xmath335 .",
    "we also select the middle edges of two other sides of the triangle , namely @xmath336 and @xmath337 .",
    "we satisfy the demands of @xmath177 and @xmath137 by connecting them with @xmath338 and @xmath339 respectively . * finally , if @xmath340 ( the cycle cover contains two sides of the triangle ) , we select the corresponding half - edges @xmath333 , @xmath334 , @xmath341 and @xmath342 . the nodes",
    "@xmath177 and @xmath137 are connected with @xmath343 and @xmath344 .      in turn , for the 4-kite it will turn out , that our gadgets not only block selecting a length-4 cycle into the b - matching , but also prevent it from containing a length-3 cycle built on three vertices of the 4-kite .",
    "[ lem : maxtsp_g2compute_nobreak_sqkite ] let @xmath321 be a 4-kite in @xmath39 .",
    "let @xmath325 be a cycle cover of @xmath35 not containing any length-4 or length-3 cycle built on the vertices of @xmath323 as one of its cycles .",
    "there exists a selection of edges , that is compliant with the cycle cover @xmath325 , such that every vertex @xmath345 has exactly @xmath326 adjacent edges in the selection ( so the selection forms a b - matching ) .",
    "the weight of the b - matching is equal to that of @xmath325 .",
    "* proof .",
    "* similarly to the proof of lemma [ lem : maxtsp_g2compute_trikite ] , we need to look into all the possible interactions of the cycle cover @xmath325 with the edges of @xmath323 ( together with its diagonals ) . for every such option , we will show , how to expand it into a compliant b - matching . the analysis is presented in the figure [ fig : maxtsp_g2compute_nobreak_sqkite ] @xmath67 +                                                                                                                                                                                                                                                                                                                                  99 a.barvinok , e.kh.gimadi , a.i.serdyukov : the maximun traveling salesman problem . in : the traveling salesman problem and its variations , 585 - 607 , g.gutin and a.punnen , eds .",
    ", kluwer , 2002 r.bhatia : private communication        m.l.fisher , g.l.nemhauser , l.a.wolsey : an analysis of approximation for finding a maximum weight hamiltonian circuit .",
    "oper.res.27 ( 1979 ) 799 - 809 r.hassin , s.rubinstein : better approximations for max tsp .",
    "information processing letters , 75 , 2000 , 181 - 186 r. hassin , s. rubinstein : an approximation algorithm for the maximum traveling salesman problem . inf . process .",
    "67(3 ) : 125 - 130 ( 1998 ) r.hassin , s.rubinstein : a @xmath346-approximation algorithm for metric max tsp , information processing letters , 81(5 ) : 247 - 251 , 2002 h.kaplan , m. lewenstein , n. shafrir , m. sviridenko : approximation algorithms for asymmetric tsp by decomposing directed regualar multigraphs . j.acm 52(4):602 - 626 ( 2005 )        j. monnot : approximation algorithms for the maximum hamiltonian path problem with specified endpoint(s ) .",
    "european journal of operational research 161(3 ) : 721 - 735 ( 2005 ) katarzyna  e. paluch , marcin mucha , and aleksander madry . a 7/9 - approximation algorithm for the maximum traveling salesman problem .",
    ", pages 501506 , 2012 .",
    "z. sichen , l. zhao , y. liang , m. zamani , r. patro , r. chowdhury , e. m. arkin , j. s. b. mitchell and steven skiena : optimizing read reversals for sequence compression - ( extended abstract ) .",
    "algorithms in bioinformatics - 15th international workshop ( wabi ) , 2015    w. tong , r. goebel , t. liu and g. lin : approximation algorithms for the maximum multiple rna interaction problem .",
    "combinatorial optimization and applications - 7th international conference , cocoa 2013 , pp .",
    "4959      a.i .",
    "barvinok , d.s .",
    "johnson , g.j .",
    "woeginger , r. woodroofe .",
    "finding maximum length tours under polyhedral norms . in _ proceedings of ipco vi , lecture notes in computer science _",
    ", vol . 1412 , 1998 , pp ."
  ],
  "abstract_text": [
    "<S> in the maximum traveling salesman problem ( max tsp ) we are given a complete undirected graph with nonnegative weights on the edges and we wish to compute a traveling salesman tour of maximum weight . </S>",
    "<S> we present a fast combinatorial @xmath0 - approximation algorithm for max tsp . </S>",
    "<S> the previous best approximation for this problem was @xmath1 . </S>",
    "<S> the new algorithm is based on a novel technique of eliminating difficult subgraphs via _ half - edges _ , a new method of edge coloring and a technique of exchanging edges . </S>",
    "<S> a _ </S>",
    "<S> half - edge _ of edge @xmath2 is informally speaking `` a half of @xmath3 containing either @xmath4 or @xmath5 '' . </S>"
  ]
}
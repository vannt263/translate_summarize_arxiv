{
  "article_text": [
    "in the last years wireless communication systems coped with the problem of delivering reliable information while granting high throughput . this problem has often been faced resorting to channel codes able to correct errors even at low signal to noise ratios .",
    "as pointed out in table i in @xcite , several standards for wireless communications adopt binary or double binary turbo codes @xcite and exploit their excellent error correction capability .",
    "however , due to the high computational complexity required to decode turbo codes , optimized architectures ( e.g. @xcite , @xcite ) have been usually employed . moreover",
    ", several works addressed the parallelization of turbo decoder architectures to achieve higher throughput .",
    "in particular , many works concentrate on avoiding , or reducing , the collision phenomenon that arises with parallel architectures ( e.g. @xcite ) .",
    "although throughput and area have been the dominant metrics driving the optimization of turbo decoders , recently , the need for flexible systems able to support different operative modes , or even different standards , has changed the perspective . in particular ,",
    "the so called software defined radio ( sdr ) paradigm made flexibility a fundamental property @xcite of future receivers , which will be requested to support a wide range of heterogeneous standards .",
    "some recent works ( e.g. @xcite , @xcite , @xcite ) deal with the implementation of application - specific instruction - set processor ( asip ) architectures for turbo decoders . in order to obtain architectures that achieve both high throughput and flexibility",
    "multi - asip is an effective solution .",
    "thus , together with flexible and high throughput processing elements , a multi - asip architecture must feature also a flexible and high throughput interconnection backbone . to that purpose",
    ", the network - on - chip ( noc ) approach has been proposed to interconnect processing elements in turbo decoder architectures designed to support multiple standards @xcite , @xcite , @xcite , @xcite , @xcite , @xcite . in addition , noc based turbo decoder architectures have the intrinsic feature of adaptively reducing the communication bandwidth by the inhibition of unnecessary extrinsic information exchange .",
    "this can be obtained by exploiting bit - level reliability - based criteria where unnecessary iterations for reliable bits are avoided @xcite .    in @xcite , @xcite , @xcite ring ,",
    "chordal ring and random graph topologies are investigated whereas in @xcite previous works are extended to mesh and toroidal topologies .",
    "furthermore , in @xcite butterfly and benes topologies are studied , and in @xcite binary de - bruijn topologies are considered . however , none of these works presents a unified framework to design a noc based turbo decoder , showing possible complexity / performance trade - offs .",
    "this work aims at filling this gap and provides two novel contributions in the area of flexible turbo decoders : i ) a comprehensive study of noc based turbo decoders , conducted by means of a dedicated noc simulator ; ii ) a list of obtained results , showing the complexity / performance trade - offs offered by different topologies , routing algorithms , node and asip architectures .",
    "the paper is structured as follows : in section [ sec : system_analysis ] the requirements and characteristics of a parallel turbo decoder architecture are analyzed , whereas in section [ sec : noc ] noc based approach is introduced .",
    "section [ sec : topologies ] summarizes the topologies considered in previous works and introduces generalized de - bruijn and generalized kautz topologies as promising solutions for noc based turbo decoder architectures . in section [ sec : ra ] three main routing algorithms are introduced , whereas in section [ sec : tnoc ] the turbo noc framework is described .",
    "section [ sec : routing_algo_arch ] describes the architecture of the different routing algorithms considered in this work , section [ sec : results ] presents the experimental results and section [ sec : concl ] draws some conclusions .",
    "a parallel turbo decoder can be modeled as @xmath0 processing elements that need to read from and write to @xmath0 memories . each processing element ,",
    "often referred to as soft - in - soft - out ( siso ) module , performs the bcjr algorithm @xcite , whereas the memories are used for exchanging the extrinsic information @xmath1 among the sisos .",
    "the decoding process is iterative and usually each siso performs sequentially the bcjr algorithm for the two constituent codes used at the encoder side ; for further details on the siso module the reader can refer to @xcite . as a consequence , each iteration is made of two half iterations referred to as interleaving and de - interleaving . during one half iteration the extrinsic information produced by siso @xmath2 at time @xmath3 ( @xmath4 ) is sent to the memory @xmath5 at the location @xmath6 , where @xmath7 and @xmath8 are functions of @xmath2 and @xmath3 derived from the permutation law ( @xmath9 or interleaver ) employed at the encoder side .",
    "thus , the time required to complete the decoding is directly related to the number of clock cycles necessary to complete a half iteration . without loss of generality , we can express the number of cycles required to complete a half iteration ( @xmath10 ) as @xmath11 where @xmath12 is the total number of trellis steps in a data frame , @xmath13 is the number of trellis steps processed by each siso , @xmath14 is the siso output rate , namely the number of trellis steps processed by a siso in a clock cycle , and @xmath15 is the interconnection structure latency .",
    "thus , the decoder throughput expressed as the number of decoded bits over the time required to complete the decoding process is @xmath16 where @xmath17 is the clock frequency , @xmath18 is the number of iterations , @xmath19 for binary codes and @xmath20 for double binary codes . when the interconnection structure latency is negligible with respect to the number of cycles required by the siso , we obtain @xmath21        thus , to achieve a target throughput @xmath22 and satisfactory error rate performance , a proper number @xmath23 of iterations should be used .",
    "the minimum @xmath0 ( @xmath24 ) to satisfy @xmath22 with @xmath23 iterations can be estimated from ( [ eq : tapprox ] ) for some asip architectures available in the literature .",
    "if we consider @xmath25 , as in @xcite , @xcite , @xmath0 ranges in [ 5 , 37 ] to achieve @xmath26 mb / s ( see table [ tab : pasip ] ) .",
    "it is worth pointing out that the @xmath27 values in table [ tab : pasip ] represent the average numbers of cycles required by the siso to update the soft information of one bit ( see table vi in @xcite and table i in @xcite ) .",
    "moreover , @xmath28 strongly depends on the internal architecture of the siso and in general tends to increase with the code complexity . as a consequence ,",
    "several conditions can further increase @xmath0 , namely 1 ) interconnection structures with larger @xmath15 ; 2 ) higher @xmath29 values ; 3 ) higher @xmath22 ; 4 ) higher @xmath23 ; 5 ) lower clock frequency .",
    "thus , we consider as relevant for investigation a slightly wider range for @xmath0 : @xmath30 .",
    ".parallelism degree required to obtain @xmath26 mb / s for @xmath25 with some asip architectures available in the literature [ cols=\"^,^,^,^,^,^,^ \" , ]     the area and the percentage are not really zero , but they are negligible compared with the i m and lm contribution to the total area .",
    "the most important conclusions that can be derived from results in table [ tab : wimax_results ] and [ tab : mhoms_results ] are :    1 .",
    "the asp - ft routing algorithm is the best performing solution both in terms of throughput and area when @xmath31 .",
    "2 .   the routing memory overhead of the asp - ft algorithm ( see fig .",
    "[ fig : node ] ( b ) ) becomes relevant as @xmath14 decreases and ssp solutions become the best solutions mainly for @xmath32 and @xmath33 .",
    "3 .   in most cases topologies with @xmath34=4 achieve higher throughput with lower complexity overhead than topologies with @xmath34=2 when @xmath35 .",
    "4 .   in most cases , generalized de - bruijn and generalized kautz topologies are the best performing topologies .    as a significant example , in fig .",
    "[ fig : r1_asp - ft ] , we show the experimental results obtained with @xmath31 and asp - ft routing algorithm for the wimax interleaver with @xmath36 ( a ) and the circular shifting interleaver with @xmath37 ( b ) .",
    "each point represents the throughtput and the area obtained for a certain topology with a certain parallelism degree @xmath0 .",
    "results referred to the same @xmath0 value are bounded into the same box and a label is assigned to each point to highlight the corresponding topology , namely topologies are identified as r - ring , h - honeycomb , t - toroidal mesh , k - generalized kautz with the corresponding @xmath34 value ( k2 , k3 , k4 ) .",
    "as it can be observed , generalized kautz topologies with @xmath38 ( k4 ) are always the best solutions to achieve high throughput with minimum area overhead .    in fig .",
    "[ fig : tar_tot ] significant results extracted from table [ tab : wimax_results ] and [ tab : mhoms_results ] are shown in graphical form .",
    "in particular , for @xmath31 the asp - ft routing algorithm is the best solution , whereas for @xmath39 ssp routing algorithms , implemented as in fig .",
    "[ fig : node ] ( c ) , tend to achieve the same performance as the asp - ft routing algorithm with lower complexity overhead ( see fig . [",
    "fig : tar_tot ] ( a ) and ( b ) for the wimax interleaver , @xmath36 and fig .",
    "[ fig : tar_tot ] ( c ) and ( d ) for the circular shifting interleaver , @xmath37 ) .",
    "an interesting phenomenon that arises increasing the interleaver size is the performance saturation that can be observed in the table [ tab : mhoms_results ] for @xmath40 topologies , namely the throughput tends to saturate and increasing @xmath14 has the effect of augmenting the area with a negligible increase or even with a decrease of throughput . as an example , the generalized kautz topology with @xmath41 and asp - ft routing algorithm achieves more than 180 mb / s with @xmath31 , @xmath42 , @xmath43 .",
    "however , the solution with the smallest area is the one obtained with @xmath43 .",
    "the throughput flattening of low @xmath34 topologies can be explained by observing that high values of @xmath14 tend to saturate the network .",
    "furthermore , high values of @xmath14 lengthen the input fifos as highlighted in table [ tab : percentage ] , where the total area of the network is given as the breakdown of the building blocks , namely the input fifos , the crossbars ( cb ) , the output registers , the routing algorithm / memory ( ra / m ) , the identifier memory ( i m ) and the location memory ( lm ) is given for some significant cases : the highest throughput ( light - gray ) , the highest area ( mid - gray ) , and lowest area ( dark - gray ) points for each @xmath34 value in table [ tab : mhoms_results ] .",
    "in this work a general framework to design network on chip based turbo decoder architectures has been presented .",
    "the proposed framework can be adapted to explore different topologies , degrees of parallelism , message injection rates and routing algorithms .",
    "experimental results show that generalized de - bruijn and generalized kautz topologies achieve high throughput with a limited complexity overhead .",
    "moreover , depending on the target throughput requirements different parallelism degrees , message injection rates and routing algorithms can be used to minimize the network area overhead .",
    "a.  giulietti , l.  v. der perre , and m.  strum , `` parallel turbo coding interleavers : avoiding collisions in accesses to storage elements , '' _ iet electronics letters _ , vol .",
    "38 , no .  5 , pp . 232234 , feb 2002 .",
    "m.  j. thul , f.  gilbert , and n.  wehn , `` optimized concurrent interleaving architecture for high - throughput turbodecoding , '' in _ ieee international conference on electronics , circuits and systems _ , 2002 , pp . 10991102 .",
    "c.  neeb , m.  j. thul , and n.  wehn , `` network - on - chip - centric approach to interleaving in high throughput channel decoders , '' in _ ieee international symposium on circuits and systems _",
    ", 2005 , pp . 17661769 .",
    "h.  moussa , o.  muller , a.  baghdadi , and m.  .jezequel , `` butterfly and benes - based on - chip communication networks for multiprocessor turbo decoding , '' in _ design , automation and test in europe conference and exhibition _",
    ", 2007 , pp . 654659 .",
    "s.  benedetto , d.  divsalar , g.  montorsi , and f.  pollara , `` soft - input soft - output modules for the construction and distributed iterative decoding of code networks , '' _",
    "european transactions on telecommunications _ , vol .  9 , no .  2 , pp . 155172 , mar / apr 1998 .",
    "o.  muller , a.  baghdadi , and m.  jezequel , `` asip - based multiprocessor soc design for simple and double binary turbo decoding , '' in _ design , automation and test in europe conference and exhibition _",
    ", 2006 , pp . 13301335 .",
    "o.  muller , a.  baghdadi , and m.  jezequel , `` exploring parallel processing levels for convolutional turbo decoding , '' in _ ieee international conference on information and communication technologies : from theory to applications _",
    ", 2006 , pp ."
  ],
  "abstract_text": [
    "<S> this work proposes a general framework for the design and simulation of network on chip based turbo decoder architectures . </S>",
    "<S> several parameters in the design space are investigated , namely the network topology , the parallelism degree , the rate at which messages are sent by processing nodes over the network and the routing strategy . </S>",
    "<S> the main results of this analysis are : i ) the most suited topologies to achieve high throughput with a limited complexity overhead are generalized de - bruijn and generalized kautz topologies ; ii ) depending on the throughput requirements different parallelism degrees , message injection rates and routing algorithms can be used to minimize the network area overhead . </S>"
  ]
}
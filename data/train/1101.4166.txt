{
  "article_text": [
    "analysis of the long - term behavior of flows can be broadly classified into geometric methods and statistical methods .",
    "geometrical methods include the determination of fixed points , periodic orbits , and invariant manifolds .",
    "invariant manifolds of fixed points or periodic orbits act as barriers to transport as trajectories may not cross the manifolds transversally .",
    "statistical methods include determining the distribution of points in very long trajectories of a very large set of initial points ( i.e.  a physical invariant measure @xcite , often possessing an invariant density ) and the identification of meta - stable or almost - invariant sets @xcite .",
    "almost - invariant sets partition the phase space into almost dynamically disconnected regions and are important for revealing global dynamical structures that are often invisible to an analysis of trajectories .",
    "these metastable dynamics also go under the names of persistent patterns , or strange eigenmodes , both of which are realisable as eigenfunctions of a transfer operator .",
    "frequently , the boundaries of maximally almost - invariant sets ( those sets which are locally closest to invariant sets ) coincide with certain invariant manifolds @xcite .",
    "our focus in the present paper is on statistical methods , although we demonstrate via case studies the relationships to geometrical methods .",
    "the most commonly used tool for statistical methods is the transfer operator ( or perron - frobenius operator ) . fixed points of the transfer operator correspond to invariant densities , while eigenfunctions corresponding to real positive eigenvalues strictly less than one provide information on almost - invariant sets . in practice",
    ", one typically constructs a finite - rank numerical approximation of a transfer operator and computes large spectral values and eigenfunctions for this finite - rank operator .",
    "the construction of the finite - rank approximation requires the integration of many relatively short trajectories with initial points sampled over the domain of the flow .",
    "it is this use of _ short _ trajectories that gives the transfer operator approach additional stability and accuracy when compared with computations based upon very long trajectories .",
    "long trajectories continually accumulate small errors from imperfect numerical integration and finite computer representation of numbers ; these small errors quickly grow in chaotic flows .",
    "while the transfer operator approach is very stable , it still requires the computation of many small trajectories which can be very time consuming in some systems .",
    "the approach we describe in the present work obviates the need for any trajectory integration at all and works directly with the vector field .",
    "our approach exploits the fact that the evolution of probability densities @xmath0 can be described by generalized solutions of the abstract cauchy problem @xmath1 .",
    "the perron ",
    "frobenius operator is the evolution operator of this equation , and has the same eigenfunctions as the operator  @xmath2 .",
    "the operator @xmath2 is an unbounded hyperbolic ( if the underlying dynamics is deterministic ) or elliptic ( if the deterministic dynamics is perturbed by white noise ) partial differential operator .",
    "standard techniques allow us to approximate the eigenmodes we are interested in : finite difference , finite volume , finite element and spectral methods yield such discretizations ; see  @xcite and the references therein .",
    "an outline of the paper is as follows . in section 2",
    "we provide background on the infinitesimal operator arising from smooth vector fields and describe conditions under which the operator generates a semigroup of transfer operators . in order to obtain formal results",
    ", we will require the addition of a small amount of diffusion to the deterministic flow . in the small diffusion setting we discuss existence of invariant densities and spectral results for the associated infinitesimal operator .",
    "section 3 describes a spectral galerkin method for the approximation of the infinitesimal operator .",
    "we apply results from the numerical analysis of advection - diffusion pdes to show that our galerkin method approximates the true eigenfunctions of the infinitesimal operator as our galerkin basis becomes increasingly refined .",
    "we can also show that the convergence rate is spectral ; that is , faster than any polynomial .",
    "section 4 describes an ulam - based galerkin method for approximating the infinitesimal operator .",
    "this ulam - based approach is new and shares some similarities with finite - difference schemes . while we can not show convergence of this approximation scheme , the numerical results obtained are extremely fast and accurate .",
    "sections 58 detail the practical application of our two approximation methods to flows in one- , two- , and three- dimensional domains . we demonstrate the spectral accuracy of our spectral galerkin method and compare with the accuracy of the ulam - based galerkin method .",
    "we also compare the accuracy vs.  computational effort of our two new approaches with standard transfer operator approaches .",
    "the natural relationships between the outputs of our statistical methods and geometric objects such as the vector field and invariant manifolds are also elucidated in each case study .",
    "we conclude in section 9 .",
    "let the domain @xmath3 of our flow be a smooth compact manifold and @xmath4 the ( normalized ) lebesgue measure on @xmath5 .",
    "denote by @xmath6 the vector field generating the flow and by @xmath7 , @xmath8 , the flow , i.e.  @xmath9 represents the location of a trajectory beginning at @xmath10 after flowing for @xmath8 time units .",
    "one has that @xmath11 .",
    "note that  provided that the components @xmath12 have continuous derivatives ",
    "the function @xmath7 is a diffeomorphism for every @xmath8 .",
    "invariant sets are structures of dynamical interest .",
    "a set @xmath13 is called _ invariant _ , iff @xmath14 for all @xmath15 .",
    "also , one asks how the flow changes probability measures .",
    "sample @xmath16 according to a probability measure @xmath17 ; the distribution of @xmath18 is then given by @xmath19 .",
    "special attention is to be drawn to _",
    "invariant measures _ , which do not change under the dynamics ( @xmath20 ) .",
    "invariant measures @xmath17 are called _ ergodic _ if invariant sets have either zero or full measure , i.e.  if @xmath13 satisfies @xmath14 then @xmath21 .",
    "an even more restricted class of ergodic measures are the _ physically relevant _ ( or _ natural _ ) ones , satisfying @xmath22 for all @xmath23 continuous and @xmath24 with @xmath25 .",
    "one has that absolutely continuous is absolutely continuous ( with respect to @xmath4 , if not specified further ) , if there is an @xmath26 such that for all @xmath4-measurable @xmath27 we have @xmath28 .",
    "the function @xmath29 is called the density of @xmath17 . ]",
    "ergodic measures are natural invariant measures . the density of an invariant measure is called the _ invariant density_.",
    "when looking for invariant densities , one can rephrase the action of the flow on measures as an action on densities .",
    "if @xmath29 denotes the density of @xmath17 , then @xmath29 is evolved by the flow as @xmath30 where @xmath31 denotes @xmath32 for a matrix @xmath33 .",
    "the linear operator @xmath34 is known as a _ transfer operator _ or the _ perron - frobenius operator _ associated with the flow @xmath35 .",
    "note that invariant densities are fixed points of @xmath36 .",
    "for each @xmath8 we have    1 .",
    "@xmath36 is linear , 2 .",
    "@xmath37 if @xmath38 and , 3 .",
    "@xmath39 for all @xmath38 , where @xmath40 is the @xmath41 norm .",
    "i.e.  @xmath36 is a _",
    "markov operator_. moreover , these properties also imply @xmath42 , hence @xmath36 is a contraction and its eigenvalues lie inside the unit disc .",
    "in fact , since the flow @xmath43 is a bijection , we have @xmath39 for all @xmath44 . to see this , note that @xmath45 for @xmath46 and @xmath13 measurable .",
    "now write @xmath47 , with @xmath48 , then @xmath49 , where @xmath50 is the support of @xmath51 . now use properties ( ii ) , ( iii ) and ( [ eq : bijection ] ) with @xmath52 .",
    "a consequence of this is that the eigenvalues of @xmath36 lie on the unit circle .",
    "the transfer operator also inherits some ( semi)group properties of the flow @xmath43 .",
    "let @xmath53 be a banach space .",
    "a one parameter family @xmath54 of bounded linear operators @xmath55 is called a _ semigroup _ on @xmath56 , if    * @xmath57 ( @xmath58 denoting the identity on @xmath56 ) , * @xmath59 for all @xmath60 .",
    "further , if @xmath61 , the family is called a semigroup of contractions .    if @xmath62 for every @xmath63 , then @xmath64 is a _ continuous semigroup _ ( _ @xmath65 semigroup _ ) .    the transfer operator @xmath36 is a @xmath65 semigroup of contractions on @xmath41 , see @xcite for a proof ( in particular remark 7.6.2 for the continuity ) .    for a semigroup @xmath64 we define the operator @xmath66 by @xmath67 with @xmath68 being the linear subspace of @xmath56 where the above limit exists . the operator @xmath2 is called the _ infinitesimal generator _ of the semigroup .    for @xmath36 , the infinitesimal generator turns out to be ( provided the @xmath69 are continuously differentiable ) @xmath70 see @xcite . the following result ( see eg .",
    "theorem 2.2.4 @xcite ) shows the connection between the eigenvalues of the semigroup operators and their infinitesimal generator :    let @xmath64 be a @xmath65 semigroup and let @xmath2 be its infinitesimal generator .",
    "then @xmath71 where @xmath72 denotes the point spectrum of the operator .",
    "the corresponding eigenvectors are identical .",
    "this has important consequences for invariant densities :    the function @xmath29 is a invariant density of @xmath36 for all @xmath73 if and only if @xmath74 .",
    "according to the discussion at the end of section  [ subsec.transfer ] , we have    the eigenvalues of @xmath75 lie on the imaginary axis .",
    "in this section we discuss almost - invariant sets and escape rates via a spectral analysis of the infinitesimal generator .",
    "as remarked near the end of section [ subsec.transfer ] , the @xmath41 spectrum of @xmath76 lies on the unit circle , and lacks a spectral gap . applying the spectral mapping theorem",
    ", we see that the spectrum of @xmath77 must be pure imaginary . in the following discussion , to prove formal results , we will add a small random perturbation to @xmath76 .",
    "later , in the numerics section , we will see that our numerical methods introduce a numerical diffusion that plays the role of creating a spectral gap .      in many real world situations , a deterministic model of some physical system",
    "is not appropriate .",
    "rather , one should account for the fact that certain external perturbations are present which might be unknown or for which a detailed model would be overly complicated .",
    "often , it is appropriate to account for these influences by incorporating a _ small random perturbation _ into the description . from a theoretical point of view",
    ", this even facilitates the analysis of the system : under certain assumptions , the transfer operator becomes compact .",
    "we therefore now leave the deterministic setting and assume that our dynamical system described by the ordinary differential equation @xmath78 is slightly stochastically perturbed by _",
    "white noise_. an exact mathematical treatment of this topic would require tools which are beyond the scope of this work ( for an exact derivation see @xcite , chapter 11 ) .",
    "we are primarily interested in the time evolution of probability densities .",
    "the following material highlights the relevant formal statements and attempts to point out the intuition behind them . instead of an ordinary differential equation",
    ", we now deal with a stochastic differential equation ( sde ) @xmath79 with @xmath80 and @xmath81 being a @xmath82-dimensional wiener process .",
    "the solutions are time - dependent random variables @xmath83 with values in @xmath84 . just as in the deterministic case",
    ", we look at the evolution of density functions ; now the density functions represent the distribution of random outcomes of the variables @xmath83 .",
    "the density functions @xmath29 satisfy @xmath85 assuming the existence of such a density @xmath86 , where @xmath87 is given , we may again define the transfer operator as @xmath88 .",
    "if the vector field @xmath89 is smooth enough we have following characterization of the density function , the _ fokker - planck _ or _ kolmogorov forward equation _ , cf .",
    "@xcite , 11.6 : @xmath90    [ prop : aepsgenc0semigroups ] the operator @xmath91 ( with neumann boundary conditions ) is the infinitesimal generator of @xmath65 semigroups @xmath92 on @xmath41 , @xmath93 on @xmath94 , and @xmath95 on @xmath96 .",
    "we note that the operator @xmath92 is identical to the transfer operator @xmath97 .",
    "[ [ invariant - densities ] ] invariant densities + + + + + + + + + + + + + + + + + + +    again , we are particularly interested in distributions ( densities ) which do not change under the evolution . those are again given by fixed points of @xmath92 or alternatively , by functions in the null space of @xmath91 .",
    "one can show @xcite that @xmath92 is compact and thus the null space of @xmath91 is finite dimensional .",
    "furthermore , due to the white noise , the support of the stochastic transition function associated to @xmath92 is unbounded , and the null space of @xmath91 is one - dimensional , i.e.  there is a _",
    "unique _ invariant density ( see again @xcite , theorem 1 ) , characterizing the long term dynamical behavior of ( [ eq : sde ] ) .",
    "we call a set @xmath13 _ almost - invariant _ with respect to a ( not necessarily invariant ) probability measure @xmath98 ( cf .",
    "@xcite ) , if @xmath99 for modest times @xmath15 .",
    "the analogous expression for @xmath35 perturbed by a small random perturbation is @xmath100 for modest times @xmath15 .",
    "we can alternatively characterize this property of a set using an infinitesimal representation of @xmath101 . to this end",
    "let @xmath44 and consider a measurable set @xmath13 .",
    "we define the functional @xmath102 by @xmath103 where @xmath104 is the linear subspace of @xmath41 where the above limit exists .",
    "let @xmath105 .",
    "[ prop : rate ] let @xmath106 be the density of the probability measure @xmath98",
    ". then @xmath107 for measurable @xmath108 as @xmath109 .",
    "we say `` @xmath110 as @xmath111 '' , if @xmath112 . ]",
    "we have @xmath113 where the second equation follows from the fact that @xmath114 is distributed according to @xmath98 ( with density @xmath29 ) , and @xmath115 ; which gives the density @xmath116 for @xmath114 , see section  [ ssec : stoch_pert ] .",
    "thus for @xmath109 the claim follows .",
    "correspondingly , a set @xmath108 will be almost invariant with respect to the measure with density @xmath44 , if @xmath117 .",
    "there is a strong connection between almost - invariant sets and the spectrum of the generator .",
    "the following theorem illustrates this with a simple heuristic for producing almost - invariant sets .",
    "[ thm : ai ] suppose that the generator @xmath91 possesses a real eigenvalue @xmath118 with corresponding eigenfunction @xmath29",
    ". then @xmath119 .",
    "define @xmath120 , @xmath121 .",
    "let @xmath122 .",
    "then @xmath123    by proposition  5.7 in @xcite and the spectral mapping theorem we have that @xmath124 where @xmath98 is the probability measure with density @xmath125 .",
    "using proposition  [ prop : rate ] we obtain @xmath126 , i.e. @xmath127 and for @xmath109 we obtain the claim .    for @xmath128 theorem  [ thm : ai ]",
    "yields @xmath129 , which means that the sets @xmath130 and @xmath131 will be almost - invariant with respect to the probability measure with density @xmath125 .",
    "other techniques for extracting sets @xmath132 from the eigenfunction @xmath29 may be found in @xcite .",
    "the papers @xcite also discuss almost - invariance with respect to physical _ invariant _ probability measures , a property that is particularly meaningful when studying typical dynamical behavior . in all cases , the basis for these methods are eigenfunctions of @xmath91 corresponding to ( real ) eigenvalues close to @xmath133 .",
    "if @xmath91 has a complex eigenvalue with real part close to zero , then the corresponding complex eigenfunction may also be used to construct almost - invariant sets .",
    "[ lem : realpart ] let @xmath134 with @xmath135 and let @xmath136 and @xmath137 denote the real and imaginary part of @xmath29 , respectively .",
    "let @xmath46 be such that @xmath138",
    ". then @xmath139 and @xmath140 .    from the proof of theorem  2.2.4",
    "@xcite we have @xmath141 .",
    "note , that @xmath142 . by linearity",
    "we have @xmath143 .",
    "thus , @xmath144 the claim follows immediately .    hence , if for a @xmath46 we have @xmath145 , then the real ( and imaginary ) part of the corresponding eigenfunction yields a decomposition of the phase space into almost invariant sets in the sense of theorem  [ thm : ai ] .",
    "we have seen in the previous section that there is a connection between eigenvalues of @xmath146 close to zero and almost - invariant sets .",
    "there is also a strong connection between the _ escape rate _ of the sets @xmath130 , @xmath131 and the corresponding eigenvalue of @xmath146 .    in the deterministic setting ( @xmath147 ) the upper ( resp .",
    "lower ) escape rate of a set @xmath108 under the time-@xmath15 map of the flow @xmath43 is defined as : @xmath148 if both limits are equal , we call @xmath149 the escape rate from @xmath108 . the escape rate is the asymptotic exponential rate of loss of @xmath4-mass from the set @xmath108 .",
    "one might expect that almost - invariant sets have low escape rate and vice - versa , but simple counterexamples in @xcite show that this is not the case .",
    "this is because the notion of almost - invariance as defined above is a finite - time property , while escape rate is an asymptotic quantity .",
    "the @xmath80 version of @xmath150 is @xmath151 where @xmath152 is the standard restriction of the operator @xmath153 to @xmath108  @xcite .",
    "the following theorem provides a recipe for constructing sets with low escape rate from eigenfunctions of @xmath91 with real eigenvalues .",
    "[ thm : er ] suppose that @xmath154 for some @xmath155 and @xmath156",
    ". then @xmath157 where @xmath158 and @xmath159 .",
    "let @xmath29 be scaled such that @xmath160 , and define the ( signed ) measure @xmath98 as @xmath161 .",
    "then @xmath162 and @xmath163 are both probability measures .",
    "for an event @xmath164 define @xmath165 . since @xmath29 is an eigenfunction of @xmath97 with eigenvalue @xmath166 , we have @xmath167 it follows for the summands @xmath168 in the above sum : @xmath169 where in the first equation the action of the transfer operator @xmath97 on the measure @xmath98 is defined through its action on the density @xmath29 of @xmath98 .",
    "the second equation follows from @xmath98 being an eigenmeasure . clearly , @xmath168 is non - positive , and thus @xmath170 holds .",
    "the rest of the proof follows the lines of the one of theorem  2.4 in  @xcite .    the recipe of theorem  [ thm : er ] is in fact the same as in theorem  [ thm : ai ] .",
    "the difference is the measure used : in theorem  [ thm : ai ] , almost - invariance is computed with respect to the particular measure @xmath98 with density @xmath125 where @xmath29 is the eigenfunction in question , whereas in theorem  [ thm : er ] escape is computed with respect to lebesgue measure .",
    "a more natural notion of escape rates in the time - continuous case would be the following : @xmath171 however , for this definition it is more complicated to obtain similar results to the one in theorem  [ thm : er ] , and a fuller discussion will appear elsewhere .",
    "one can view   with @xmath172 as the `` time sampled version '' of this continuous - time definition .",
    "having seen that certain eigenpairs of the transfer operator ( resp .",
    "infinitesimal generator ) carry the information we are seeking , we describe in the sequel our proposed approximation of these eigenpairs . to this end",
    ", we define finite dimensional approximation spaces and consider the eigenvalue problem projected onto these spaces . throughout this section",
    "we assume that the underlying deterministic vector field @xmath89 is smooth .",
    "we describe here the `` standard '' ulam approach ; see the surveys @xcite for more details .",
    "we partition @xmath5 into @xmath82-dimensional connected , positive volume subsets @xmath173 .",
    "typically , each @xmath174 will be a hyperrectangle or simplex to simplify computations . as an approximation space we consider the space @xmath175 of functions which are piecewise constant on the cells of the partition .",
    "let @xmath176 , @xmath177 be the @xmath94-orthogonal projection onto @xmath178 .",
    "we let @xmath179 , @xmath180 , be the approximate frobenius - perron operator .",
    "note that @xmath181 i.e.  the matrix representation @xmath182 of @xmath183 with respect to the basis @xmath184 and multiplication on the left is @xmath185 this matrix is easily constructed numerically using eg .",
    "gaio @xcite .",
    "in the stochastic setting , letting @xmath186 , @xmath187 , one obtains @xmath188 as above . in principle",
    "one can use monte - carlo integration to compute these entries , however , this is not particularly efficient .",
    "we partition @xmath5 as in the standard ulam s method .",
    "we will see that the numerical scheme itself introduces some diffusion and we therefore consider the deterministic generator @xmath2 ( i.e.  @xmath147 ) .",
    "we wish to construct an operator @xmath189 that is close in some sense to the operator @xmath2 . motivated by ulam s method",
    ", one would like to form @xmath190 , which unfortunately does not exist , because @xmath191 , cf .",
    "( [ eq : generator ] ) . instead of differentiating w.r.t .",
    "time and then doing the projection , we swap the order of these operations .",
    "let us build the ulam approximation @xmath192 first , which will _ not _ be a semigroup any more , but for fixed @xmath15 it approximates @xmath36 . taking the time derivative , our candidate approximate operator is @xmath193 the following lemma emphasizes the intuition behind this definition : if @xmath192 is a sufficiently good approximation ( for small @xmath15 ) of the markov jump process generated by the dynamics on the sets @xmath174 , then @xmath194 will be the generator of this process . to be exact ,",
    "the following is the case :    [ ulamformula1lemma ] the matrix representation of @xmath195 with respect to the basis @xmath196 under multiplication on the left is @xmath197    we consider the action of @xmath36 on @xmath198 . @xmath199",
    "thus under left multiplication we obtain ( [ ulamformula ] ) .",
    "lemma [ ulamformula1lemma ] states that @xmath200 is the _ outflow rate of mass _ from @xmath174 into @xmath201 .",
    "let @xmath202 denote the semigroup generated by @xmath194",
    ". then @xmath203 and @xmath36 are near to each other in the following sense , cf .",
    "@xcite :    [ prop : rnearqp ] as @xmath109 @xmath204 for all @xmath205 .",
    "we say `` @xmath206 as @xmath111 '' , if @xmath207 . ]",
    "the following lemma allows us to construct @xmath208 without the computation of the flow @xmath43 .",
    "[ ulamformula2lemma ] for @xmath209 , define @xmath210 to be the the unit normal vector pointing out of @xmath174 into @xmath201 if @xmath211 is a @xmath212-dimensional face , and the zero vector otherwise . the matrix representation of @xmath213 with respect to the basis @xmath196 under multiplication on the left is @xmath214    from ( [ ulamformula ] ) we have for @xmath209 that @xmath215 . denoting @xmath216",
    "we have that @xmath217 where the prime denotes differentiation with respect to @xmath15 .",
    "the quantity @xmath218 is simply the rate of flux out of @xmath174 through the face @xmath219 into @xmath201 and so @xmath220 .    for the diagonal elements @xmath221 we have @xmath222 .",
    "note that @xmath223 .",
    "clearly @xmath224 modulo sets of lebesgue measure zero .",
    "thus , @xmath225 .",
    "now , by ( [ ulamformula ] ) , @xmath226    in one dimension , ( [ ulamformula2 ] ) has a particularly simple form .    [ onedcorollary ]",
    "let @xmath227 .",
    "assume ( without loss and @xmath228 , we have one or more stable fixed points , and every trajectory converges to one of them .",
    "hence , there is no interesting statistical behavior to analyze . ] ) that @xmath229 .",
    "let @xmath230 and consider the partition @xmath173 with @xmath231 $ ] .",
    "then @xmath232    [ rem : upwind ] clearly , @xmath194 is the spatial discretization from the so - called upwind scheme in finite volume methods ; cf .",
    "the scheme is known to be stable .",
    "stability of finite volume schemes is often related to `` numerical diffusion '' in them .",
    "we demonstrate numerical diffusion on a simple example , for further details we refer to  @xcite section  8.6.1 .",
    "set @xmath227 and @xmath233 @xmath234 .",
    "then @xmath235 and @xmath194 is the backward difference scheme .",
    "consider @xmath236 as a vector of values .",
    "for sufficiently smooth @xmath29 we have @xmath237 but @xmath238 hence @xmath239 is a better approximation of @xmath240 , with @xmath241 , and @xmath242 is the infinitesimal generator associated with the sde @xmath243 than of @xmath244 .",
    "that is why one expects quantities computed by @xmath194 to reflect the actual behavior of @xmath242 .",
    "since the above equations contain only _ local _ estimates , for a general nonconstant @xmath89 is the diffusion also spatially varying ; i.e.  @xmath245 . note , that this notion of numerical diffusion is easily extended to multiple space dimensions .",
    "the definition allows us to interpret the numerical diffusion in yet another way .",
    "we showed in proposition  [ prop : rnearqp ] that @xmath246 is the transition matrix of a markov process near the markov jump process generated by @xmath247 for small @xmath46 .",
    "the discretized fpo @xmath246 can be related to a non - deterministic dynamical system , which , after mapping the initial point , adds some uncertainty to produce a uniform distribution of the image point in the box where it landed ; see  @xcite .",
    "thus , this uncertainty resulting from the numerical discretization , equivalent to the numerical diffusion in the upwind scheme , can be viewed as the reason for robust behavior  stability .",
    "finally , we show that our constructions ( [ ulamformula2 ] ) and ( [ ulam1dformula ] ) always provide a solution to the system @xmath248 for some @xmath249 .",
    "[ existenceofzerond ] there exists a nonnegative , nonzero @xmath205 so that @xmath248 .",
    "let @xmath250 and note that @xmath251 satisfies @xmath252 note that all row sums of @xmath253 equal zero .",
    "let @xmath254 .",
    "the matrix @xmath255 is nonnegative with all row sums equal to @xmath256 . by the perron - frobenius theorem @xcite ,",
    "the largest eigenvalue of @xmath257 is @xmath256 ( of multiplicity is aperiodic ( there exists @xmath258 such that @xmath259 ) then the eigenvalue @xmath256 is simple and the corresponding eigenvector is positive ( see @xcite ) . ]",
    "possibly greater than 1 ) and one of the corresponding left eigenvectors pair @xmath260 is nonnegative . clearly @xmath260 is a left eigenvector of @xmath253 corresponding to the eigenvalue 0 and thus @xmath261 is a nonnegative left eigenvector corresponding to 0 for @xmath247 .",
    "the eigenfunctions of @xmath91 are smooth .",
    "this motivates the use of smooth approximation functions , e.g. polynomials .",
    "we here outline the general principles of spectral collocation methods ; for a more thorough presentation we refer to @xcite , @xcite or @xcite .    choose a family of approximation spaces @xmath262 , such that @xmath263 for all @xmath264 . depending on the type of the phase space , we use two different approximation spaces .",
    "we introduce them in one dimension ; the multidimensional ones can then be constructed by tensor products . in both cases ,",
    "the approximation space comes with an associated set of collocation nodes :    * _ periodic domain / uniform grid .",
    "_ we have @xmath265 and restrict ourselves to odd values of @xmath264 .",
    "then the basis we choose for @xmath266 is @xmath267 the associated collocation nodes are the uniform grid @xmath268 . * _ standard domain / chebyshev grid . _ here , @xmath269 $ ] .",
    "the space @xmath266 is spanned by the monomials of order @xmath133 to @xmath264 .",
    "we use chebyshev polynomials as basis functions : @xmath270 together with the chebyshev grid @xmath271 , as collocation nodes .",
    "let @xmath272 and @xmath273 be the interpolation operator for the given collocation nodes .",
    "we define the approximate generator by @xmath274 for both cases we have following :    [ thm : spectral ] for @xmath275 let @xmath276 be the best approximation of @xmath29 in @xmath266 w.r.t . the supremum norm @xmath277 . then for each @xmath278 there is a @xmath279 such that @xmath280    convergence then follows from standard results on the analysis of galerkin methods for elliptic differential operators and spectral approximation ( cf .",
    "also @xcite ) :    let @xmath5 be a compact tensor product domain with smooth boundary .",
    "let @xmath89 be a smooth vector field on @xmath5 and @xmath91 , @xmath281 defined as above , with neumann ( resp .",
    "periodic ) boundary conditions .",
    "then the eigenvalues and eigenfunctions of @xmath91 are approximated by the corresponding eigenvalues and eigenfunctions of @xmath281 with spectral accuracy .",
    "[ [ why - neumann - boundary - conditions ] ] why neumann boundary conditions ?",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the objects that we are approximating are densities , so there should be no `` loss of mass '' as time goes on . in a closed physical system ,",
    "the flow normal to the boundary is zero .",
    "hence , there is no loss of mass through advection .",
    "the physical meaning of diffusion is a flow of mass in the direction opposite to the gradient and proportional to its magnitude .",
    "thus , no loss of mass via diffusion translates into neumann boundary conditions for the densities : their normal gradients have to be zero at the boundary .",
    "equivalently , one may write as a continuity equation , @xmath282 with @xmath283 being the probability flow or probability current . the condition @xmath284 leads precisely to neumann boundary conditions .",
    "[ ulamalg ]    1 .",
    "partition @xmath5 into connected sets @xmath173 of positive volume .",
    "typically , each @xmath174 will be a hyperrectangle or simplex .",
    "2 .   choose @xmath46 and compute the matrix @xmath285 or @xmath286 as described in section [ sec : ulam ] .",
    "estimates of invariant densities for @xmath43 are given by fixed points of @xmath287 ( or @xmath288 ) : let @xmath289 .",
    "then @xmath290 satisfies @xmath291 .",
    "4 .   similarly ,",
    "eigenvectors of @xmath287 corresponding to real eigenvalues @xmath292 provide information about almost - invariant sets ( cf .",
    "theorem  [ thm : ai ] ) and sets with low escape rates ( cf .",
    "theorem [ thm : er ] ) .",
    "note that @xmath287 typically is a sparse matrix and the number of nonzero entries per column will be determined by lipschitz constants of @xmath43 .",
    "[ ulamalg_gen ]    1 .",
    "partition @xmath5 into connected sets @xmath173 of positive volume .",
    "typically each @xmath174 will be a hyperrectangle or simplex .",
    "2 .   compute@xmath293 where one uses standard quadrature rules to estimate the integral .",
    "estimates of invariant densities lie in the null space of @xmath247 .",
    "let @xmath294 ( the existence of such a @xmath295 is guaranteed by lemma [ existenceofzerond ] ) , then @xmath290 satisfies @xmath248 .",
    "4 .   similarly",
    ", eigenvectors of @xmath247 corresponding to large real eigenvalues @xmath155 provide information about almost - invariant sets and sets with low escape rates .",
    "note that the discretized generator @xmath247 is a sparse matrix since @xmath296 if @xmath174 and @xmath201 do not share a boundary .    1",
    ".   set up a grid @xmath297 , which is the chebyshev grid @xmath298 , @xmath299 , if @xmath300 $ ] , or the equispaced grid @xmath301 , if @xmath227 .",
    "( if the state space @xmath5 is an affine transformation of the above ones , the grid is transformed analogously . ) for multidimensional tensor product spaces the grid is the tensor product of the one dimensional grids .",
    "2 .   let @xmath302 denote the lagrange basis on the grid , i.e.  all @xmath303 are polynomials of maximal degree @xmath264 with @xmath304 .",
    "denote the interpolation on the grid by @xmath305 , and define the discretization matrix obtained by collocation as @xmath306 note , that the computation of these matrix entries is very simple .",
    "if @xmath227 , we may switch between the evaluation space and the frequency space simply by the fast fourier transformation .",
    "multiplication by the vector field @xmath89 is pointwise multiplication in the evaluation space , computing the derivative is a diagonal scaling in the frequency space .",
    "this can be simply extended to @xmath307 $ ] ( cf .  @xcite chapter  8) , as well as for a multidimensional phase space .",
    "3 .   compute the left eigenvector @xmath295 of @xmath308 at the eigenvalue of smallest magnitude .",
    "then , @xmath309 approximates the invariant density .",
    "4 .   similarly , eigenvectors of @xmath308 corresponding to large real eigenvalues @xmath118 provide information about almost - invariant sets .",
    "once the matrix approximation of the operator or the generator has been computed , we then have to solve the corresponding eigenvalue problem . in ulam s method one",
    "seeks dominant eigenvalues , and standard arnoldi type methods easily provide the interesting part of the spectrum ( we use the ` eigs ` function in matlab ) .    for the approximate generator , we look for eigenvalues with small modulus . here , the arnoldi iteration in ` eigs ` uses inverse iteration , i.e.  repeatedly solves linear systems of the type @xmath310 .",
    "since the matrix @xmath247 is singular , this is not a well posed problem and we might expect some difficulties with these iterative methods .",
    "a possibility for overcoming them is to solve the eigenvalue problem for @xmath311 , with a suitable shift @xmath312 .",
    "this merely introduces a shift of the spectrum and the eigenfunctions stay the same . for @xmath264 big enough",
    "is obtained from the ulam - based approach , the spectrum of @xmath247 , which is the generator of a markov jump process , is in the left complex half plane .",
    "this does not hold in general for the spectral collocation approach , here we rely on the fast convergence of eigenvalues . ] , the spectrum of @xmath313 is going to be well separated from zero .",
    "the size @xmath264 of the linear system may be large , so a direct solution via lu factorization may not be feasible .",
    "however , in ulam s method for the generator , @xmath247 is a sparse matrix , hence iterative methods ( e.g.  gmres ) can be used .    for spectral collocation ,",
    "in general , the matrix @xmath247 will not be sparse . nevertheless , in the case where the domain is periodic , the matrix - vector product @xmath314 can be computed fast using the fft .      for @xmath82 dimensional systems in general ,",
    "shows us that setting up the approximate generator requires the computation of @xmath315- dimensional integrals , while to set up the ulam - matrix , we compute @xmath82-dimensional integrals . of course , the gain is biggest in one dimension ( zero dimensional integrals are one - point - evaluations ) .",
    "equally importantly , does not require integration of the vector field .    for ulam s method and ulam s method for the generator ,",
    "the matrix entries should be computed to an accuracy @xmath316 ; otherwise we can not expect the approximate eigenfunctions to exploit the full potential of the approximation space ( which is an error of @xmath316 for @xmath264 partition elements in a @xmath82 dimensional space ) .",
    "assuming the quadrature rule used to compute the entries to also suffer from the curse of dimension , we expect to need @xmath317 and @xmath318 function evaluations for each matrix entry in the ulam - matrix , and the matrix arising from ulam s method for the generator , respectively .",
    "this explains the third column of table  [ tab : error_sources ] below .",
    "a collection of examples is presented in the following .",
    "the examples range over three phase space dimensions , different boundary types , and chaotic and regular dynamics .",
    "we find that the generator approaches are typically superior to the standard ulam approach , producing more accurate results with less computation time .",
    "if the vector field is infinitely differentiable , the spectral collocation approach can be extremely accurate . in our final example",
    ", we find that for flows on complicated attractors , the standard ulam method can take advantage of the attracting dynamics to produce better estimates of invariant densities than the generator approaches . in all cases ,",
    "the operator based methods are far superior to direct trajectory integration for estimating the invariant density .",
    "other structures such as almost - invariant sets can only be identified using the operator approaches .",
    "we start with a one dimensional example , a flow on the unit circle .",
    "the vector field is given by @xmath319 @xmath320 $ ] with periodic boundary conditions , and we wish to compute the invariant density of the system . recall that an invariant density @xmath321 needs to satisfy @xmath322 , where @xmath323 .",
    "the unique solution to this equation is @xmath324 , @xmath325 being a normalizing constant ( i.e. such that @xmath326 ) .",
    "the honours thesis @xcite numerically investigated the estimation of the invariant density for this flow , and other two - dimensional flows , by finding approximate eigensolutions of the infinitesimal generator using finite difference and finite element methods .",
    "here we use the three methods discussed in the previous section to approximate @xmath327 and compare their efficiency relative to one another and a histogram of a long simulation :    1 .   the classical method of ulam for the frobenius - perron operator , 2 .",
    "ulam s method for the generator and 3 .",
    "spectral collocation for the generator .",
    "as we have a periodic domain and the vector field is infinitely smooth , we expect spectral collocation to perform very well .",
    "figure [ fig : sineflow ] shows the true invariant density ( dashed line ) , together with its approximations by the four methods .      in this 1d case ,",
    "the three methods can each be realized in a few lines of matlab . for illustration purposes ,",
    "we include the code here .",
    "[ [ ulams - method ] ] ulam s method + + + + + + + + + + + + +    .... f = @(x ) sin(4*pi*x)+1.1 ;                           % definition of the vector field n = 32 ; x = 1/(2*n^2):1/(n^2):1 - 1/(2*n^2 ) ;          % nodes for spatial integration [ t , y ] = ode23(@(t , x ) f(x),[0 2/n],x ' ) ;              % time integration of the nodes i = ceil(max(n*mod(y(end,:),1),1 ) ) ;                 % cell indices of image points j = reshape(ones(n,1)*(1:n),1,n*n ) ;                 % construction of transition matrix p = sparse(i , j,1/n , n ,",
    "n ) ; [ v , d ] = eig(full(p ) ) ;                               % spectrum of transition matrix f_n = @(x ) abs(v(ceil(max(x*n,1)),1 ) ) ;              % plot approximate inv . density l1 = quadl(f_n,0,1 ) ; fplot(@(x)f_n(x)/l1,[0,1 ] ) ....    the error in ulam s method decreases like @xmath328 for smooth invariant densities @xcite .",
    "thus , we need to compute the transition rates between the intervals to an accuracy of @xmath328 ( since otherwise we can not expect the approximate density to have a smaller error ) . to this end",
    ", we use a uniform grid of @xmath264 sample points in each interval .",
    "this leads to @xmath329 evaluations of the vector field .",
    "for the numbers in figure  [ fig : sineflow ] we only counted each point once , i.e.  we neglected the fact that for the time integration we have to perform several time steps per point .",
    "[ [ ulams - method - for - the - generator-1 ] ] ulam s method for the generator + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    .... f = @(x ) sin(4*pi*x)+1.1 ;                            % definition of the vector field n = 32 ; fx = f(0:1/n:1 - 1/n ) ;                         % evaluation on the boundary nodes a = n*sparse(1:n,1:n ,- fx ) + sparse(1:n,[2:n 1],fx ) ; % assembling the discrete generator [ v , d ] = eig(full(a ' ) ) ;                               % spectrum [ d , i ] = sort(diag(d ) ) ; f_n = @(x ) abs(v(ceil(max(x*n,1)),i(1 ) ) ) ;            % plot approximate inv .",
    "density l1 = quadl(f_n,0,1 ) ; fplot(@(x)f_n(x)/l1,[0,1 ] ) ....    here , only one evaluation of the vector field per interval is needed as in one dimension the integration on the boundaries reduces to the evaluation of a single boundary point . on a partition with @xmath264 intervals",
    ", this method then yields an accuracy of @xmath328 .",
    "note that from corollary  [ onedcorollary ] it follows that the vector @xmath295 with @xmath330 is a left eigenvector of the transition matrix  ( [ ulam1dformula ] ) for the generator at the eigenvalue 0 .",
    "this fact proves pointwise convergence of the invariant density of the discretization towards the real one .",
    "thus ulam s method for the generator is very accurate and stable ; the @xmath41 error is @xmath331 as this is the rate at which approximants created from a basis of characteristic functions converge in @xmath41 to regular functions .",
    "[ [ spectral - collocation ] ] spectral collocation + + + + + + + + + + + + + + + + + + + +    .... f = @(x ) sin(4*pi*x)+1.1 ;                         % definition of the vector field n = 32 ; fx = f(0:1/n:1 - 1/n ) ;                      % evaluation in collocation nodes e = ifft(eye(n ) ) ;                                 % basis fe = fft(diag(fx)*e ) ;                             % multiplication by vector field i = [ 0:n/2 - 1 -n/2:-1 ] ;                            % frequencies d = ( 2i*pi)*i ' ;                                   % differentiation matrix a = -d*ones(1,n).*fe ;                             % discrete generator in frequency space [ v , lambda ] = eig(a ) ;                              % spectrum f_n = @(x ) real(exp(x'*i*2i*pi)*v(:,end ) ) ;        % approximate density l1 = quadl(f_n,0,1 ) ; fplot(@(x)f_n(x)/l1,[0,1 ] )   % plot ....    here , the vector field is evaluated once per grid point ( cf .  the second line of the code ) . as predicted by theorem  [ thm : spectral ] , the accuracy increases exponentially with @xmath264 ( cf .  figure  [ fig : sineflow2 ] ) .      in figure",
    "[ fig : sineflow2 ] ( left ) we compare the efficiency of the four methods in terms of how the @xmath41-error of the computed invariant density depends on the number of evaluations of the vector field .",
    "the @xmath41-error was computed using an adaptive lobatto quadrature as implemented in , e.g. , matlab s ` quadl ` command .",
    "these errors are due to the approximation space , the approximate numerical computation of matrix entries , and due to solving the discretized eigenvalue problem . to illustrate how these effects accumulate , in figure  [ fig : sineflow2 ] ( right )",
    "we compare the errors of three different approximations , for different ( uniform ) partitions : the approximate invariant densities obtained from the two ulam type methods , and the projection of the true invariant density .",
    "we conclude that the error due to the approximation space dominates the total error .",
    "-error of the approximate invariant density as a function of the number of evaluations of the vector field ( @xmath332 - @xmath333 partition elements , resp .",
    "collocation points , @xmath334 - @xmath335 number of iterations ) .",
    "right : @xmath41-error of the approximate invariant densities obtained by projection of the true invariant density on the underlying partition , by ulam s method , and by ulam s method for the generator.,title=\"fig:\",scaledwidth=50.0% ] -error of the approximate invariant density as a function of the number of evaluations of the vector field ( @xmath332 - @xmath333 partition elements , resp .",
    "collocation points , @xmath334 - @xmath335 number of iterations ) .",
    "right : @xmath41-error of the approximate invariant densities obtained by projection of the true invariant density on the underlying partition , by ulam s method , and by ulam s method for the generator.,title=\"fig:\",scaledwidth=49.0% ]    .sources of computational cost .",
    "the dimension of the approximation space is denoted by @xmath264 , @xmath82 denotes the dimension of state space .",
    "in contrast to the other two methods , spectral collocation produces a full matrix .",
    "one can reduce the cost for solving the eigenproblem in this case to @xmath336 by using an iterative solver ( e.g.  gmres ) , and fft to compute matrix - vector products . [",
    "cols=\"<,^,^,^,^ \" , ]     [ tab : qg - effort2 ]     by ulam s method ( left ) with the one computed by ulam s method for the generator ( right , together with the two saddle equilibria and their invariant manifolds).,title=\"fig:\",scaledwidth=42.0% ]   by ulam s method ( left ) with the one computed by ulam s method for the generator ( right , together with the two saddle equilibria and their invariant manifolds).,title=\"fig:\",scaledwidth=42.0% ]    the regions enclosed by the stable / unstable manifolds of the two saddle equilibria shown in figure [ fig : qg_vector_field ] are obviously invariant for the noiseless flow .",
    "the introduction of noise means that it is possible ( but with a rather low probability ) for stochastic trajectories to jump between these regions , making these regions almost - invariant sets ( cf .",
    "section  [ subsec : almost ] ) .",
    "figure [ fig : qg - evs ] shows that these almost - invariant sets are highlighted in the 2nd , 3rd , and 4th eigenvectors as level sets at high gradient regions in the eigenvectors ( in this example , near the yellow bands ) .",
    "the 2nd and 3rd eigenvectors highlight regions near different stable / unstable manifolds at the yellow bands and the 4th eigenvector shown in figure  [ fig : qgseporbits ] shows a combination .",
    "we refer the reader to @xcite for details on the connection between invariant manifolds and almost invariant sets .",
    "as one sees in figure  [ fig : qgseporbits ] , the eigenvectors from ulam s method for the generator are smoother compared to the ones from the standard ulam method .",
    "ulam s method for the generator appears to be more accurate , at least for this system with a small amount of noise .",
    "a possible explanation is that with ulam s method for the generator we formally average the diffusion , while with the standard ulam method we simulate a finite number of random trajectories , which incompletely sample the true noise distribution .      in this section",
    "we demonstrate the efficacy of our generator approach for a three - dimensional flow .",
    "we consider the so - called abc - flow @xcite , given by @xmath337 on the 3 dimensional torus .",
    "the flow is volume - preserving , so in order to make the computation of the spectrum well posed we need to add some artifical diffusion again .",
    "the vector field is very smooth , and in numerical experiments a diffusion coefficient @xmath338 turned out to work well . for @xmath339 , @xmath340 and @xmath341 ,",
    "there is numerical evidence that the flow exhibits complicated dynamics and invariant sets of complicated geometry @xcite .",
    "we approximate the leading few eigenfunctions of @xmath91 with ulam s method for the generator on a @xmath342 grid .",
    "we used gauss quadrature with 16 nodes on each face of a box in order to approximate the surface integrals , requiring @xmath343 evaluations of the vector field .",
    "the @xmath41-error of the approximate invariant density is @xmath344 .",
    "the second and fifth eigenfunctions are shown in figure [ fig : abc_u64_lev2,5 ] .",
    "the regions highlighted in red and blue are invariant cylinders of the deterministic flow ; see @xcite for more details on how to extract invariant and almost - invariant sets from the eigenfunctions .",
    "+     we also apply spectral collocation on a @xmath345 grid , requiring @xmath346 evaluations of the vector field .",
    "the @xmath41-error of the approximate invariant density is @xmath347 .",
    "we observe fast convergence ( after comparing with computations on coarser resolutions ) of not just the first nontrivial eigenfunctions , but also of higher order ones .     +      as a last example we consider a system where the effective dynamics is supported on a set of complicated geometry and fractional dimension , the well - known lorenz system @xmath348 where we make the standard parameter choices @xmath349 , @xmath350 and @xmath351 .",
    "since the effective ( complicated ) dynamics happens on a lower dimensional attractor we do not expect spectral collocation to work well and we therefore apply ulam s method for the generator here .",
    "a decade ago , numerical techniques were introduced for computing box coverings for attractors of complicated structure , cf .",
    "these techniques make use of the fact that the set @xmath5 to be computed is an attractor , hence each trajectory starting in its vicinity will be pulled to @xmath5 in a fairly short time . in our approach time",
    "is not considered , we only use the vector field . since the boundary of the box covering does not have to coincide with the boundary of the attractor , a tight box covering",
    "might not show the desired results , because of relatively big outflow rates in boundary boxes .",
    "the simplest idea is to use a big enough rectangle  in our case @xmath352\\times [ -30,30]\\times [ -10,70]$ ] .",
    "however , this set is not invariant , hence the question arises , which boundary conditions one should impose .",
    "translating the condition `` no probability flow on the boundary '' in this ulam type approach leads to the condition that the flow rates at the boundary are ignored .",
    "the attractor is then extracted by simple thresholding : regions where the approximate invariant density is nonzero are expected to lie in a small neighbourhood of the attractor .",
    "the finer the resolution , the smaller the diffusion introduced by the discretization and thus the tighter this neighbourhood of the attractor is . having constructed the attractor , we may restrict the other eigenfunctions to this set in order to obtain almost invariant sets within the attractor .    for our computation , we employed a grid of @xmath353 boxes and used gauss quadrature in @xmath354 nodes on the faces in order to set up the approximate generator .",
    "the attractor is extracted by thresholding the approximate invariant density @xmath355 : we cut off at a threshold value @xmath356 such that 96% of the invariant measure is supported on @xmath357 .",
    "figure  [ fig : lorattr128 ] shows the corresponding covering as well as the sign structure of the second and third eigenvector .",
    "we introduced the infinitesimal generator as a tool for studying long term behavior of flows without requiring any trajectory integration .",
    "the ( typically unit dimensional ) null space of the generator is spanned by the invariant density of the flow ; the invariant density describes the asymptotic distribution of trajectories .",
    "we showed that eigenfunctions of the generator corresponding to eigenvalues close to 0 had strong connections with almost - invariant or metastable behavior , and could be used to identify regions in the flow from which the escape rate is very low .",
    "we proposed two new numerical approaches for the estimation of the generator ; one based on ulam s method and the other based on spectral collocation .",
    "we tested our numerical approaches on `` full phase space '' flows in one , two , and three dimensions and found that both approaches significantly outperformed the standard ulam approach based on the perron - frobenius operator .",
    "moreover , all operator / generator based methods were superior to standard trajectory integration for estimating the invariant density ; the identification of almost - invariant sets is essentially impossible without an operator / generator approach .",
    "the spectral collocation approach worked particularly well in periodic domains when the vector field is infinitely smooth .",
    "we thank yuri latushkin for pointing us to useful books , and nick trefethen for careful proofreading and helpful questions and suggestions .                ,",
    "_ the algorithms behind set oriented numerical methods for dynamical systems _ , in ergodic theory , analysis , and efficient simulation of dynamical systems , bernold fiedler , ed . , springer , berlin , 2001 , pp .  145174 , 805807 ."
  ],
  "abstract_text": [
    "<S> the long - term distributions of trajectories of a flow are described by invariant densities , i.e.  fixed points of an associated transfer operator . in addition </S>",
    "<S> , global slowly mixing structures , such as almost - invariant sets , which partition phase space into regions that are almost dynamically disconnected , can also be identified by certain eigenfunctions of this operator . </S>",
    "<S> indeed , these structures are often hard to obtain by brute - force trajectory - based analyses . in a wide variety of applications , </S>",
    "<S> transfer operators have proven to be very efficient tools for an analysis of the global behavior of a dynamical system .    </S>",
    "<S> the computationally most expensive step in the construction of an approximate transfer operator is the numerical integration of many short term trajectories . in this paper , we propose to directly work with the _ infinitesimal generator _ instead of the operator , completely avoiding trajectory integration . </S>",
    "<S> we propose two different discretization schemes ; a cell based discretization and a spectral collocation approach . </S>",
    "<S> convergence can be shown in certain circumstances . </S>",
    "<S> we demonstrate numerically that our approach is much more efficient than the operator approach , sometimes by several orders of magnitude . </S>"
  ]
}
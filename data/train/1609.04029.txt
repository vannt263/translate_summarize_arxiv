{
  "article_text": [
    "when studying the evolutionary history of a set @xmath1 of existing species , one can obtain a phylogenetic tree @xmath2 with leaf set @xmath1 with high confidence by looking at a segment of sequences or a set of genes  @xcite .",
    "when looking at another segment of sequences , a different phylogenetic tree @xmath3 with leaf set @xmath1 can be obtained with high confidence , too . in this case",
    ", we want to measure the dissimilarity of @xmath2 and @xmath3 .",
    "the rooted subtree prune and regraft ( rspr ) distance between @xmath2 and @xmath3 has been used for this purpose @xcite .",
    "it can be defined as the minimum number of edges that should be deleted from each of @xmath2 and @xmath3 in order to transform them into _ essentially identical _ rooted forests @xmath4 and @xmath5 .",
    "roughly speaking , @xmath4 and @xmath5 are _ essentially identical _ if they become identical forests ( called _ agreement forests _ of @xmath2 and @xmath3 ) after repeatedly contracting an edge @xmath6 in each of them such that @xmath7 is the unique child of @xmath8 ( until no such edge exists ) .",
    "the rspr distance is an important metric that often helps us discover reticulation events . in particular",
    ", it provides a lower bound on the number of reticulation events @xcite , and has been regularly used to model reticulate evolution @xcite .",
    "unfortunately , it is np - hard to compute the rspr distance of two given phylogenetic trees  @xcite .",
    "this has motivated researchers to design approximation algorithms for the problem  @xcite .",
    "_ @xcite were the first to come up with an approximation algorithm .",
    "they also introduced the important notion of maximum agreement forest ( maf ) of two phylogenetic trees .",
    "their algorithm was correctly analyzed by bonet _",
    "_ @xcite modified hein _",
    "_ s algorithm so that it achieves an approximation ratio of  3 and runs in quadratic time .",
    "@xcite came up with a very simple approximation algorithm that runs in linear time and achieves an approximation ratio of  3 .",
    "although the ratio  3 is achieved by a very simple algorithm in @xcite , no polynomial - time approximation algorithm had been designed to achieve a better ratio than  3 before shi _",
    "@xcite presented a polynomial - time approximation algorithm that achieves a ratio of 2.5 .    in certain real applications ,",
    "the rspr distance between two given phylogenetic trees is small enough to be computed exactly within reasonable amount of time .",
    "this has motivated researchers to take the rspr distance as a parameter and design fixed - parameter algorithms for computing the rspr distance of two given phylogenetic trees  @xcite .",
    "these algorithms are basically based on the branch - and - bound approach and use the output of an approximation algorithm ( for rspr distance ) to decide if a branch of the search tree should be cut .",
    "thus , better approximation algorithms for rspr distance also lead to faster exact algorithms for rspr distance .",
    "it is worth noting that approximation algorithms for rspr distance can also be used to speed up the computation of hybridization number and the construction of minimum hybridization networks  @xcite .",
    "let @xmath2 and @xmath3 be two phylogenetic trees on the same set @xmath1 of leaves . in a nutshell ,",
    "the simple ratio-3 approximation algorithm in @xcite proceeds in stages until @xmath2 and @xmath3 become identical forests . roughly speaking , in each stage",
    ", the algorithm chooses two arbitrary sibling leaves in @xmath2 and uses them to find and remove at most three edges from @xmath3 such that the removal decreases the rspr distance of @xmath2 and @xmath3 by at least  1 . since at most three edges",
    "are removed from @xmath3 in each stage and at least one of the removed edges is also removed from @xmath3 by an optimal solution , the algorithm achieves an approximation ratio of 3 .",
    "@xcite improve whidden _",
    "_ s algorithm by refining each stage . in each stage , shi _ et al .",
    "_ s algorithm carefully chooses a dangling _ subtree _ @xmath9 of @xmath2 with at most 4 leaves and uses @xmath9 to carefully choose and remove a set @xmath10 of edges from @xmath3 . on the positive side , @xmath10 has a crucial property that the removal of the edges of @xmath10 decreases the rspr distance of @xmath2 and @xmath3 by at least  @xmath11 .",
    "because of this property , their algorithm achieves a ratio of 2.5 . on the negative side ,",
    "@xmath9 and @xmath10 have a drawback that after removing the edges of @xmath10 from @xmath3 , each leaf of @xmath9 becomes isolated in @xmath3 . to get a better ratio",
    ", it seems necessary to remove this drawback .",
    "moreover , their search for @xmath10 is by complicated case analysis and the complicatedness makes it hard to refine their algorithm so that it achieves a better ratio .",
    "indeed , shi _ et al . _",
    "@xcite ask whether a ratio better than 2.5 can be achieved by a polynomial - time approximation algorithm , and point out that new ideas are necessary .    in this paper , we answer shi _ et al . _",
    "s question in the affirmative by presenting a cubic - time approximation algorithm for rspr distance that achieves a ratio of @xmath0 .",
    "our algorithm also proceeds in stages until the input trees @xmath2 and @xmath3 become identical forests . roughly speaking , in each stage",
    ", our algorithm carefully chooses a dangling _ subforest _ ( rather than a dangling subtree ) @xmath9 of @xmath2 and uses @xmath9 to carefully choose and remove a set @xmath10 of edges from @xmath3 . similar to but better than shi _",
    "s algorithm @xcite , @xmath10 has a crucial property that the removal of the edges of @xmath10 decreases the rspr distance of @xmath2 and @xmath3 by at least  @xmath12 .",
    "because of this property , our algorithm achieves a ratio of @xmath0 .",
    "the search of @xmath9 and @xmath10 in our algorithm is based on the new notion of _ key_. using a key ( as a tool ) , it is possible for our algorithm to find @xmath9 and @xmath10 such that even after removing the edges of @xmath10 from @xmath3 , some leaves of @xmath9 remain connected in @xmath3 .",
    "in other words , keys enable us to overcome the drawback in shi _",
    "_ s algorithm @xcite .",
    "thanks to this property of keys , we are able to improve the ratio to  2 . at first glance , since the subforest @xmath9 in our algorithm can often be much larger than the subtree @xmath9 in shi _",
    "_ s algorithm , the search for @xmath10 in our algorithm can become even more complicated . fortunately , we can prove a number of structural lemmas which enable us to construct @xmath10 recursively and hence avoid complicated case - analysis .",
    "the remainder of this paper is organized as follows .",
    "section  [ sec : prob ] reviews the rspr distance problem .",
    "section  [ sec : def ] gives the basic definitions that will be used thereafter .",
    "section  [ sec : conf ] shows how to build a search tree for computing rspr distance .",
    "section  [ sec : key ] defines the structures for which we will search the input phylogenetic trees ( or forests ) , and prove why the structures lead to a 2-approximation algorithm . in section  [ sec : goodkey ] , we show how to find the structures .",
    "a _ phylogenetic forest _ is a rooted forest @xmath13 in which each vertex has at most two children , each root has zero or two children , and the leaves are distinctively labeled but the non - leaves are unlabeled .",
    "a non - leaf @xmath14 of @xmath13 is _ unifurcate _",
    "( respectively , _ bifurcate _ )",
    "if the number of children of @xmath14 in @xmath13 is  1 ( respectively , 2 ) .",
    "@xmath13 is a _ phylogeny",
    "_ if it is connected and has no unifurcate vertices .",
    "figure  [ fig : def ] shows two phylogenies @xmath15 and @xmath13 .    ,  ( 2 )  another phylogeny @xmath13 ,  ( 3 )  @xmath16 . ]    for a phylogenetic forest @xmath13 and a set or sequence @xmath17 of vertices , @xmath18 denotes the lowest common ancestor ( lca ) of the vertices in @xmath17 if the vertices in @xmath17 are in the same connected component of @xmath13 , while @xmath19 is undefined otherwise .",
    "let @xmath20 be a set of edges in @xmath13 .",
    "@xmath21 denotes the forest obtained from @xmath13 by deleting the edges in @xmath20 . @xmath21",
    "may not be phylogenetic , because it may have unlabeled leaves or unifurcate roots .",
    "@xmath22 denotes the phylogenetic forest obtained from @xmath21 by first removing all vertices without labeled descendants and then repeatedly removing a unifurcate root until no root is unifurcate .",
    "note that both @xmath21 and @xmath23 are subgraphs of @xmath13 .",
    "@xmath20 is a _ cut _ of @xmath13 if each connected component of @xmath21 has a labeled leaf .",
    "if in addition every leaf of @xmath21 is labeled , then @xmath20 is a _",
    "canonical cut _ of @xmath13 .",
    "for example , if @xmath13 is as in figure  [ fig : conf](1 ) , then the 4 dashed edges in @xmath13 form a canonical cut of @xmath13 .",
    "it is known that if @xmath20 is a set of edges in @xmath13 , then @xmath13 has a canonical cut @xmath24 such that @xmath25 @xcite .     and  ( 2 )  an induced sub - tf pair @xmath26 of @xmath27 .",
    "]    let @xmath4 and @xmath5 be two phylogenetic forests with the same set of leaf - labels .",
    "a leaf @xmath28 of @xmath4 is _ agreed with _ a leaf @xmath29 of @xmath5 if the labels of @xmath28 and @xmath29 are the same .",
    "we can extend this agreement between the leaves of @xmath4 and @xmath5 to ( some of ) their bifurcate non - leaves recursively as follows .",
    "suppose that two non - roots @xmath30 and @xmath31 in @xmath4 are agreed with two non - roots @xmath32 and @xmath33 in @xmath5 , respectively .",
    "then , @xmath34 in @xmath4 is _ agreed with _",
    "@xmath35 in @xmath5 if for each @xmath36 , every vertex of the path between @xmath37 and @xmath38 in @xmath39 other than @xmath37 , @xmath38 , and @xmath40 is unifurcate .",
    "this finishes the extension .",
    "a vertex of @xmath4 ( respectively , @xmath5 ) is _ agreed _ if it is agreed with a vertex of @xmath5 ( respectively , @xmath4 ) . @xmath4 and @xmath5 are _ identical _ if the roots of @xmath4 are agreed and so are the roots of @xmath5 .    given a pair @xmath27 of phylogenies with the same set of leaf - labels , find a cut @xmath41 in @xmath15 and a _ smallest",
    "_ cut @xmath42 in @xmath13 such that @xmath43 and @xmath44 are identical .",
    "for example , if @xmath15 and @xmath13 in figure  [ fig : def ] are the input to the rspr distance problem , then the dashed edges in @xmath15 and those in @xmath13 together form a possible output . in the above definition , we require that the size of @xmath42 be minimized ; indeed , it is equivalent to require that the size of @xmath41 be minimized because the output @xmath41 and @xmath42 have the same size .    to solve the rspr distance problem ,",
    "it is more convenient to relax the problem by only requiring that @xmath15 be a phylogenetic tree ( i.e. , a connected phylogenetic forest ) and @xmath13 be a phylogenetic forest .",
    "hereafter , we assume that the problem has been relaxed in this way .",
    "then , we refer to each input @xmath27 to the problem as a _ tree - forest ( tf ) pair_. we emphasize that for each tf - pair @xmath27 , @xmath15 and @xmath13 have the same set of leaf - labels .",
    "the size of the output @xmath42 is the _ rspr distance _ of @xmath15 and @xmath13 , and is denoted by @xmath45 .",
    "it is worth pointing out that to compute @xmath45 , it is required in the literature that we preprocess each of @xmath15 and @xmath13 by first adding a new root and a _ dummy _ leaf and further making the old root and the _ dummy _ be the children of the new root .",
    "however , the common _ dummy _ in the modified @xmath15 and @xmath13 can be viewed as an ordinary labeled leaf and hence we do not have to explicitly mention the _",
    "dummy _ when describing an algorithm .    to compute @xmath45 for a given tf - pair @xmath27 ,",
    "it is unnecessary to compute both a cut @xmath41 in @xmath15 and a cut @xmath42 in @xmath13 .",
    "indeed , it suffices to compute only @xmath42 , because a cut in @xmath13 forces a cut in @xmath15 . to make this clear",
    ", we define the _ sub - tf pair of @xmath27 induced by a ( possibly empty ) cut @xmath20 of @xmath13 _ to be the tf pair @xmath46 obtained as follows .    1 .",
    "[ step : init ] initially , @xmath47 and @xmath48 .",
    "[ step : clean1 ] while @xmath49 has a component @xmath50 whose root is agreed with a vertex @xmath51 in @xmath52 , delete @xmath50 from @xmath49 and delete all descendants of @xmath51 from @xmath52 .",
    "[ step : clean2 ] while @xmath52 has a non - leaf agreed with a non - leaf of @xmath49 , first find a non - leaf @xmath53 in @xmath52 such that @xmath53 is agreed with a non - leaf @xmath14 of @xmath49 but no proper ancestor of @xmath53 in @xmath52 is agreed with a non - leaf of @xmath49 , next modify @xmath52 ( respectively , @xmath49 ) by merging the subtree rooted at @xmath53 ( respectively , @xmath14 ) into a single leaf @xmath54 ( respectively , @xmath55 ) , and finally assign the same new label to @xmath54 and @xmath55 .",
    "note that we can view @xmath52 ( respectively , @xmath49 ) as a subgraph of @xmath15 ( respectively , @xmath13 ) , by viewing @xmath54 ( respectively , @xmath55 ) as @xmath53 ( respectively , @xmath14 ) .",
    "for example , if @xmath20 consists of the 4 dashed edges in figure  [ fig : conf](1 ) , then the sub - tf pair induced by @xmath20 is as in figure  [ fig : conf](2 ) .",
    "let @xmath56 denote the empty forest .",
    "if @xmath57 , then @xmath20 is an _ agreement cut _ of @xmath27 and @xmath23 is an _ agreement forest _ of @xmath27 .",
    "if in addition , @xmath20 is canonical , then @xmath20 is a _",
    "canonical agreement cut _ of @xmath27 .",
    "the smallest size of an agreement cut of @xmath27 is actually @xmath45 .",
    "throughout this section , let @xmath13 be a phylogenetic forest .",
    "we view each vertex @xmath14 of @xmath13 as an ancestor and descendant of itself . for brevity",
    ", we refer to a connected component of @xmath13 simply as a _ component _ of @xmath13 .",
    "we use @xmath58 to denote the number of components in @xmath13 .",
    "a _ dangling subtree _ of @xmath13 is the subtree rooted at a vertex of @xmath13 .",
    "if a vertex @xmath14 of @xmath13 has a bifurcate proper - ancestor , then @xmath59 denotes the edge whose tail is the lowest bifurcate proper - ancestor of @xmath14 in @xmath13 ; otherwise , @xmath59 is undefined .",
    "for example , if @xmath13 is as in figure  [ fig : def](3 ) , then @xmath60 is the bold edge .",
    "let @xmath61 and @xmath62 be two vertices in the same component of @xmath13 . if @xmath61 and @xmath62 have the same parent in @xmath13 , then they are _ siblings _ in @xmath13 .",
    "we use @xmath63 to denote the path between @xmath61 and @xmath62 in @xmath13 .",
    "note that @xmath63 is not a directed path if @xmath64 and @xmath65 . for convenience",
    ", we still view each edge of @xmath66 as a directed edge ( whose direction is the same as in @xmath13 ) although @xmath63 itself may not be a directed path .",
    "each vertex of @xmath63 other than @xmath61 and @xmath62 is an _ inner vertex _ of @xmath63 .",
    "dangling edge between @xmath61 and @xmath62 _ in @xmath13 is an edge in @xmath13 but not in @xmath67 whose tail is an inner vertex of @xmath66 .",
    "@xmath68 denotes the set of dangling edges @xmath69 between @xmath61 and @xmath62 in @xmath13 .",
    "moreover , @xmath70 denotes the set consisting of the edges in @xmath68 , the edges entering a non - leaf in @xmath66 , and also the edge @xmath71 if it is defined . for convenience ,",
    "if @xmath72 and @xmath73 are two vertices in different components in @xmath13 , we define @xmath74 and @xmath75 . for example , in figure  [ fig : def](2 ) , @xmath76 , @xmath77 is the union of @xmath78 and the edge set of the path from the root to @xmath79 , and @xmath80 . for each @xmath81 ,",
    "the subtree of @xmath13 rooted at the head of @xmath13 is a _ dangling subtree between @xmath61 and @xmath62 _ in @xmath13 .",
    "if @xmath82 , and @xmath83 is not unifurcate in @xmath13 but each inner vertex of @xmath84 is unifurcate in @xmath13 for each @xmath85 , then @xmath61 and @xmath62 are _ semi - siblings _ in @xmath13 and the _ semi - children _ of @xmath86 in @xmath13 , and @xmath86 is the _ semi - parent _ of @xmath61 and @xmath62 in @xmath13 .",
    "for example , if @xmath13 is the tree in figure  [ fig : def](3 ) , then @xmath29 and @xmath87 are semi - siblings and their semi - parent is @xmath14 .",
    "we use @xmath88 to denote the set of leaves in @xmath13 .",
    "let @xmath1 be a subset of @xmath88 , and @xmath14 be a vertex of @xmath13 .",
    "a descendant @xmath89 of @xmath14 in @xmath13 is an _",
    "@xmath1-descendant _ of @xmath14 if @xmath90 .",
    "@xmath91 denotes the set of @xmath1-descendants of @xmath14 in @xmath13 .",
    "if @xmath92 , then @xmath14 is _ @xmath1-inclusive _ ; otherwise , @xmath14 is _",
    "@xmath1-exclusive_. if @xmath14 is bifurcate and both children of @xmath14 are @xmath1-inclusive , @xmath14 is _",
    "@xmath1-bifurcate_. similarly , if exactly one child of @xmath14 in @xmath13 is @xmath1-inclusive , then @xmath14 is _ @xmath1-unifurcate_. an edge of @xmath13 is _ @xmath1-inclusive _ ( respectively , _",
    "@xmath1-exclusive _ ) if its head is @xmath1-inclusive ( respectively , @xmath1-exclusive ) . for an @xmath1-bifurcate @xmath14 in @xmath13 , an _ @xmath1-semi - child _ of @xmath14 in @xmath13 is a vertex @xmath53 such that each edge in @xmath93 is @xmath1-exclusive and either @xmath94 or @xmath53 is @xmath1-bifurcate ; we also call @xmath14 the _ @xmath1-semi - parent _ of @xmath53 in @xmath13 . note that @xmath14 has exactly two @xmath1-semi - children in @xmath13 and we call them _ @xmath1-semi - siblings_. in particular , when @xmath95 , @xmath1-semi - parent , @xmath1-semi - children , and @xmath1-semi - siblings become semi - parent , semi - children , and semi - siblings , respectively . for example , if @xmath13 is as in figure  [ fig : conf](1 ) and @xmath96 , then @xmath53 is @xmath1-unifurcate , but @xmath14 is @xmath1-bifurcate and its @xmath1-semi - children are @xmath29 and @xmath79 .",
    "@xmath97 denotes the phylogenetic forest obtained from @xmath13 by removing all @xmath1-exclusive vertices and all vertices without @xmath1-bifurcate ancestors .",
    "see figure  [ fig : def ] for an example .    for two phylogenetic forests",
    "@xmath4 and @xmath5 with the same set of leaf labels , we always view two leaves of @xmath4 and @xmath5 with the same label as the same vertex although they are in different forests .",
    "a simple way to compute @xmath45 for a tf - pair @xmath27 is to build a _ search tree _ @xmath98 as follows .",
    "the root of @xmath98 is @xmath99 . in general ,",
    "each node of @xmath98 is a pair @xmath100 satisfying the following conditions :    * @xmath41 and @xmath42 are canonical cuts of @xmath15 and @xmath13 , respectively . *",
    "each root except one of @xmath101 is agreed . *",
    "if @xmath100 is left as a leaf in @xmath98 , then each root of @xmath101 is agreed .    now",
    ", suppose that a node @xmath100 of @xmath98 has been constructed but should not be left as a leaf in @xmath98 . for convenience ,",
    "let @xmath102 and @xmath103 . to construct the children of @xmath100 in @xmath98 , we first select a pair @xmath104 of semi - siblings in @xmath52 such that @xmath105 is still not agreed but @xmath83 is agreed with a vertex @xmath37 in @xmath44 for each @xmath85 .",
    "the children of @xmath100 are then constructed by distinguishing three cases as follows :    @xmath30 or @xmath32 is a root of @xmath49 .",
    "if @xmath30 is a root of @xmath49 , then @xmath106 is the only child of @xmath100 in @xmath98 ; otherwise , @xmath107 is the only child of @xmath100 in @xmath98 .",
    "@xmath30 and @xmath32 fall into different components of @xmath49 but case  1 does not occur . in this case , @xmath100 has two children in @xmath98 , where for each @xmath85 , the @xmath108-th child of @xmath100 in @xmath98 is @xmath109 .",
    "@xmath30 and @xmath32 fall into the same component of @xmath49 . in this case",
    ", @xmath100 has three children in @xmath98 .",
    "the first two are constructed as in case  2 .",
    "the third child is @xmath110 .",
    "it is worth pointing out that the children of @xmath100 in @xmath98 are ordered .",
    "this finishes the construction of @xmath98 .",
    "if @xmath111 denotes the first or second ( respectively , third ) child of @xmath100 constructed as above , then @xmath86 is unifurcate ( respectively , bifurcate ) in @xmath112 and hence is agreed with no ( respectively , a ) vertex in @xmath113 . in any case",
    ", @xmath86 remains connected to the root in @xmath112 .",
    "the path from the root of @xmath98 to a leaf is a _ root - leaf path _ in @xmath98 .",
    "let @xmath114 be a root - leaf path in @xmath98 .",
    "we use @xmath115 ( respectively , @xmath116 ) to denote the canonical cut of @xmath15 ( respectively , @xmath13 ) contained in the leaf of @xmath114 . clearly , @xmath116 is a canonical agreement cut of @xmath27 . for a positive integer @xmath117 , @xmath114 _ picks a cherry @xmath118 in the @xmath119-th way _ if @xmath114 has a non - leaf @xmath100 satisfying the following conditions :    * the @xmath119-th child of @xmath100 exists in @xmath98 and also appears in @xmath114 .",
    "* for the pair @xmath104 of semi - siblings in @xmath101 selected to construct the children of @xmath100 in @xmath98 , @xmath120 is the set of leaf descendants of @xmath83 in @xmath101 .",
    "let @xmath111 be the child of @xmath100 in @xmath114 .",
    "no matter what @xmath119 is , @xmath121 remains connected to the root in @xmath112 .",
    "@xmath114 _ picks a cherry @xmath118 _ if it does so in the @xmath119-th way for some positive @xmath117 . for a set @xmath122 of leaves in @xmath15 , @xmath114 _ isolates _",
    "@xmath122 if it picks a cherry @xmath123 in the first way or a cherry @xmath124 in the second way , while @xmath114 _ creates _",
    "@xmath122 if it picks a cherry @xmath118 with @xmath125 in the third way .",
    "@xmath27 may have multiple search trees ( depending on the order of cherries picked by root - leaf paths in a search tree ) .",
    "nonetheless , it is widely known that for each search tree @xmath98 of @xmath27 , @xmath126 , where @xmath114 ranges over all root - leaf paths in @xmath98 @xcite . basically , this is true because the root - leaf paths in a search tree represents an exhaustive search of a smallest agreement cut of @xmath27 .",
    "let @xmath1 be a set of leaves in @xmath15 such that each component of @xmath127 is a dangling subtree of @xmath15 .",
    "an _ @xmath1-search tree _",
    "@xmath128 of @xmath27 is constructed almost in the same way as a search tree of @xmath27 ; the only difference is as follows :    * let @xmath100 be a node in @xmath128 . if @xmath100 is a non - leaf , then in order to construct its children in @xmath128 , we always select a pair @xmath104 of semi - siblings in @xmath52 such that all leaf descendants of @xmath129 in @xmath52 belong to @xmath1 and @xmath129 is still not agreed but each of @xmath61 and @xmath62 already is , where @xmath130 . otherwise , no such pair @xmath104 exists in @xmath52 .",
    "obviously , an @xmath1-search tree @xmath128 of @xmath27 can be extended to a search tree of @xmath27 by extending each leaf @xmath100 of @xmath128 to a search tree of @xmath131 .",
    "therefore , for each @xmath1-search tree @xmath128 of @xmath27 , the following hold :    * for each root - leaf path @xmath114 in @xmath128 , @xmath116 is a canonical cut of @xmath13 and can be extended to a canonical agreement cut of @xmath27 .",
    "* @xmath128 has at least one path @xmath114 such that @xmath116 can be extended to a smallest canonical agreement cut of @xmath27 .",
    "throughout this section , let @xmath27 be a tf pair . instead of cuts ,",
    "we consider a more useful notion of _ key_. a _ key _ of @xmath27 is a triple @xmath132 satisfying the following conditions :    1 .",
    "[ cond : dangle ] @xmath1 is a set of leaves in @xmath15 such that each component of @xmath127 is a dangling subtree of @xmath15 .",
    "2 .   @xmath133 is a cut of @xmath13 , where @xmath134 is the set of edges in @xmath13 whose tails appear in @xmath97 , and @xmath135 consists of all @xmath136 such that @xmath51 is a root in @xmath97 .",
    "moreover , either @xmath137 or @xmath138 .",
    "3 .   [ cond : r ]",
    "if @xmath137 , then @xmath139 ; otherwise , the heads @xmath28 and @xmath29 of the two edges in @xmath140 are semi - siblings in @xmath141 , @xmath142 is the edge set of @xmath143 , and @xmath144 .",
    "( _ comment : _ by condition  [ cond : dangle ] , @xmath28 and @xmath29 are semi - siblings in @xmath145 as well . )    for example , if @xmath27 is as in figure  [ fig : conf](1 ) , then @xmath146 is a key of @xmath27 , where @xmath147 , @xmath148 , and @xmath142 is the edge set of @xmath149 .",
    "if @xmath150 , then @xmath151 is _ normal _ and we simply write @xmath152 instead of @xmath153 ; otherwise , it is _ abnormal_. in essence , only normal keys were considered in @xcite .    in the sequel ,",
    "let @xmath153 be a key of @xmath27 .",
    "the _ size _ of @xmath151 is @xmath154 and is also denoted by @xmath155 .",
    "the _ sub - tf pair of @xmath27 induced by @xmath151 _ is the sub - tf pair @xmath26 of @xmath156 induced by @xmath10 .",
    "let @xmath122 be a subset of @xmath157 such that @xmath158 and each component in @xmath159 is a dangling subtree of @xmath15 .",
    "further let @xmath114 be a root - leaf path in a @xmath122-search tree of @xmath27 , and @xmath160 .",
    "an edge @xmath161 is _ free _ with respect to ( @xmath162 ) @xmath114 if @xmath163 or the leaf descendants of the head of @xmath69 in @xmath164 are all unlabeled .",
    "we use @xmath165 to denote the set of edges in @xmath10 that are free @xmath162 @xmath114 .",
    "a component @xmath50 in @xmath166 is _ free _ if the leaves of @xmath50 are all unlabeled and there is at least one edge @xmath167 whose tail is a leaf of @xmath50 .",
    "we use @xmath168 to denote the set of free components in @xmath166 .",
    "for example , if @xmath169 is the above example key , @xmath170 and @xmath114 creates @xmath171 and then isolates it , then @xmath172 , @xmath173 but @xmath174 .",
    "however , if we modify the example @xmath169 by resetting @xmath150 and @xmath175 , then for the same @xmath114 , @xmath176 , @xmath177 , and @xmath178 contains a unique component ( which is the path between @xmath79 and the parent of @xmath29 in @xmath13 ) .",
    "the _ lower bound _ achieved by @xmath151 @xmath162 @xmath114 is latexmath:[$b(\\kappa , p ) =      the _ lower bound _ achieved by @xmath151 via @xmath122 is @xmath180 , where @xmath98 ranges over all @xmath122-search trees of @xmath27 and @xmath114 ranges over all root - leaf paths in @xmath98 . if @xmath98 is a @xmath122-search tree of @xmath27 with @xmath181 where @xmath114 ranges all root - leaf paths in @xmath98 , then @xmath98 is called a @xmath122-search tree of @xmath27 _ witnessing _ @xmath182 .",
    "when @xmath183 , we write @xmath184 instead of @xmath185 .",
    "moreover , @xmath186 is called the _ lower bound _ achieved by @xmath151 .",
    "the next two lemmas may help the reader understand the definitions ( especially for abnormal keys ) and will also be useful later .",
    "[ lem : size2 ] suppose that @xmath15 has a pair @xmath187 of semi - sibling leaves such that @xmath188 exists and @xmath189 .",
    "then , @xmath27 has an abnormal key @xmath151 with @xmath190 .",
    "let @xmath191 , where @xmath192 , @xmath193 , and @xmath142 is the edge set of @xmath143 . a root - leaf path @xmath114 in the unique @xmath1-search tree of @xmath27 either creates @xmath1 or isolates one of @xmath194 and @xmath195 . in the former case , @xmath196 and in turn @xmath197 . in the latter case , @xmath198 or @xmath199 , and hence @xmath200 .",
    "[ lem:2cross ] suppose that @xmath15 has two pairs @xmath187 and @xmath201 of semi - sibling leaves such that @xmath28 and @xmath202 are semi - siblings in @xmath13 and so are @xmath29 and @xmath87 .",
    "then , @xmath27 has a normal key @xmath203 with @xmath204 .",
    "let @xmath96 and @xmath205 .",
    "consider an @xmath1-search tree @xmath98 of @xmath27 in which each root - leaf path @xmath114 first picks the cherry @xmath206 and then picks the cherry @xmath207 .",
    "if for some @xmath208 , @xmath114 creates @xmath209 , then @xmath116 contains both @xmath210 and @xmath211 .",
    "otherwise , @xmath116 contains @xmath212 and @xmath213 for some @xmath85 and @xmath214 .",
    "so , in any case , @xmath215 .    for the next three lemmas , let @xmath153 be a key of @xmath27 .",
    "[ lem : f_c1 ] let @xmath114 be a root - leaf path in an @xmath1-search tree of @xmath27 , and @xmath216 be a component in @xmath168 . then , there is no @xmath217 such that some endpoint of @xmath69 is in @xmath216 .",
    "moreover , either the root @xmath218 of @xmath216 is a root in @xmath13 , or @xmath116 contains the edge entering @xmath218 in @xmath13 .",
    "let @xmath219 and @xmath220 . since @xmath221 and @xmath216 is a component in @xmath49 , @xmath218 has no labeled descendants in @xmath49 .",
    "assume , on the contrary , that there is an @xmath217 such that some endpoint @xmath14 of @xmath69 appears in @xmath216 .",
    "then , since all edges in @xmath142 remain in @xmath49 , there is a directed path from @xmath14 to a labeled leaf in @xmath49 that traverses only edges in @xmath142 .",
    "so , @xmath218 would have a labeled descendant in @xmath49 , a contradiction .",
    "thus , the first assertion in the lemma holds .",
    "suppose @xmath218 is not a root in @xmath13 .",
    "let @xmath69 be the edge of @xmath13 whose tail is @xmath218 . since @xmath69 is not in @xmath49 , @xmath222 or @xmath223 .",
    "if @xmath69 were in @xmath10 , then @xmath69 would be in @xmath165 because @xmath218 has no labeled descendant in @xmath224 .",
    "so , @xmath225 and in turn the lemma holds .",
    "[ lem : ub0 ] let @xmath122 be a subset of @xmath157 such that @xmath158 and each component in @xmath159 is a dangling subtree of @xmath15 . then",
    ", @xmath226 .",
    "let @xmath227 be a @xmath122-search tree of @xmath27 witnessing @xmath182 .",
    "as aforementioned , we can extend @xmath227 to a search tree @xmath98 of @xmath27 by extending each leaf @xmath100 to a search tree of @xmath228 .",
    "in other words , each root - leaf path @xmath229 in @xmath227 is the first portion of a root - leaf path @xmath114 in @xmath98 . since @xmath230 , @xmath231 and @xmath232 . consider a component @xmath50 in @xmath233 .",
    "if @xmath116 contains no edge of @xmath50 , let @xmath234 ; otherwise , @xmath50 is split into two or more components and we let @xmath235 be the set of the new components . no matter whether @xmath236 or not , the leaves of each component in @xmath235 are all unlabeled because so are the leaves of @xmath50 .",
    "let @xmath237 be the set of edges in @xmath238 whose tails are leaves of @xmath50 . since @xmath239 , @xmath240 .",
    "if @xmath241 , then at least one @xmath242 contains the tail of some @xmath243 and hence belongs to @xmath168 ; otherwise , at least one edge of @xmath237 belongs to @xmath244 .",
    "so , in any case , each @xmath239 contributes at least  1 to @xmath245 . in summary , @xmath246 .",
    "[ lem : ub ] let @xmath114 be a root - leaf path in a search tree of @xmath27 .",
    "then , @xmath247 , where @xmath26 is the sub - tf pair of @xmath27 induced by @xmath151 .",
    "consequently , @xmath248 .    for each @xmath249 ,",
    "we choose an arbitrary edge @xmath250 of @xmath13 whose tail is a leaf of @xmath216 .",
    "let @xmath251 .",
    "suppose @xmath252 is a smallest canonical agreement cut of @xmath27 .",
    "let @xmath253 . obviously , @xmath254 and in turn @xmath255 .",
    "moreover , from the definitions of @xmath165 and @xmath168 , it is not hard to see that @xmath256 and in turn @xmath257 , where @xmath258 .",
    "thus , @xmath259 .",
    "since @xmath260 is an agreement forest of @xmath27 , @xmath261 is clearly an agreement forest of @xmath262 .",
    "so , by condition  [ cond : r ] in the definition of keys , @xmath263 is also an agreement forest of @xmath264 .",
    "now , since @xmath265 , @xmath264 has an agreement cut of size at most @xmath266 . on the other hand , a smallest agreement cut of @xmath262",
    "is of size @xmath267 . hence , @xmath268 .",
    "therefore , @xmath269 , and in turn @xmath270 by lemma  [ lem : ub0 ] .",
    "a key @xmath151 of @xmath27 is _ good _ if @xmath271 , while @xmath151 is _ fair _ if @xmath272 .",
    "a cut @xmath20 of @xmath13 is _ good _ if @xmath273 . if @xmath153 is a good key of @xmath27 , then by lemma  [ lem : ub ]",
    ", @xmath10 is a good cut of @xmath13 .",
    "the next theorem is hard to prove and we prove it in the next section .",
    "[ th : goodratio ] given a tf - pair @xmath27 , we can find a good cut of @xmath13 in quadratic time .",
    "[ th : main ] given a tf - pair @xmath27 , we can compute an integer @xmath274 in cubic time such that @xmath275 and there is an agreement cut of @xmath27 with size @xmath274 .    given @xmath27 , we first compute the sub - tf pair @xmath26 of @xmath27 induced by the empty cut . if @xmath276 , then we return 0 . otherwise , we compute a good cut @xmath20 and then the sub - tf pair @xmath277 of @xmath26 induced by @xmath20 .",
    "if @xmath278 , then we return @xmath279 ; otherwise , we recursively compute an integer @xmath280 on input @xmath277 , and then return @xmath281 .",
    "the correctness and time complexity of the above algorithm are clear .",
    "we next prove that the algorithm returns an integer @xmath282 by induction on the recursion depth of the algorithm .",
    "if the algorithm makes no recursive call , it computes @xmath45 exactly and hence we are done .",
    "so , assume that the algorithm makes a recursive call .",
    "then , @xmath283 by the inductive hypothesis .",
    "now , since @xmath284 , @xmath285 .",
    "the next three lemmas can often help us estimate @xmath165 and @xmath168 .",
    "for the three lemmas , let @xmath286 be a normal key of @xmath27 , and @xmath114 be a root - leaf path in an @xmath1-search tree @xmath128 of @xmath27 witnessing @xmath184 .",
    "[ lem : cuthelp ] suppose that @xmath287 is an edge in @xmath114 such that for some @xmath288 , @xmath289 in @xmath52 is agreed with @xmath290 in @xmath49 and @xmath291 , where @xmath292 and @xmath293 .",
    "if @xmath294 , then @xmath168 contains a component whose leaves are exactly the tails of the edges in @xmath295 ; otherwise , either @xmath296 or @xmath168 contains a component in which the tail of @xmath297 is the only leaf , where @xmath298 is the unique vertex in @xmath122 .    obviously , @xmath299 and @xmath300 . for convenience ,",
    "let @xmath301 , and @xmath53 be the head of @xmath302 .",
    "possibly , @xmath303 . clearly , @xmath304 is a dangling subtree of @xmath49 , and remains to be a subtree of @xmath305 because @xmath289 in @xmath52 is already agreed with @xmath290 in @xmath49 .",
    "moreover , since @xmath301 , each vertex of @xmath306 other than @xmath14 is unifurcate in @xmath49 .",
    "thus , the addition of @xmath302 to @xmath116 yields a component @xmath50 in @xmath307 whose root is @xmath53 and whose leaves are the vertices in @xmath122 .",
    "it is also clear that each @xmath308 contained in @xmath50 belongs to @xmath165 . now ,",
    "unless @xmath309 for some @xmath310 , deleting all descendants of the heads of the edges in @xmath311 from @xmath50 yields a component @xmath312 in @xmath313 whose root is @xmath53 and whose leaves are exactly the tails of the edges in @xmath311 , implying that @xmath314 . on the other hand , if @xmath309 for some @xmath310 , then clearly @xmath315 and @xmath316 .",
    "[ lem : mergehelp ] suppose that @xmath114 picks some cherry @xmath118 by creating @xmath317 .",
    "let @xmath318 .",
    "then , @xmath319",
    ". moreover , if @xmath320 is a root of @xmath13 , then @xmath168 contains a component @xmath50 whose root is @xmath320 and whose leaves are the tails of the edges in @xmath295 .",
    "let @xmath100 be the node of @xmath128 at which @xmath114 picks @xmath118 . for convenience ,",
    "let @xmath321 , @xmath322 , @xmath323 for each @xmath85 .",
    "clearly , @xmath324 and @xmath325 is a dangling subtree of @xmath49 . since @xmath114 creates @xmath317 at @xmath100 , @xmath326 .",
    "obviously , @xmath327 .",
    "so , @xmath328 and in turn @xmath329 .",
    "consider an arbitrary @xmath85 .",
    "since @xmath325 is a dangling subtree of @xmath49 and @xmath10 contains @xmath330 for each @xmath331 , @xmath37 can not have a labeled descendant in @xmath332 .",
    "thus , the head of each edge @xmath333 can not have a labeled leaf in @xmath332 and in turn @xmath69 belongs to @xmath165 . in summary , @xmath334 .",
    "next , suppose that @xmath320 is a root of @xmath13 .",
    "then , @xmath304 is a component @xmath50 with root @xmath320 in @xmath307 .",
    "clearly , each @xmath335 contained in @xmath50 belongs to @xmath165 .",
    "thus , deleting all descendants of the heads of the edges in @xmath311 from @xmath50 yields a component @xmath312 in @xmath336 .",
    "clearly , the root of @xmath312 is @xmath320 and the leaves of @xmath312 are exactly the tails of the edges in @xmath295 .",
    "therefore , @xmath312 belongs to @xmath168 .",
    "[ lem : f_c2 ] suppose @xmath337 is another normal key of @xmath27 such that @xmath338 and @xmath339 .",
    "then , @xmath340 .",
    "moreover , either @xmath341 , or @xmath342 and @xmath343 .    since @xmath338 , @xmath344 is a subgraph of @xmath345 and so @xmath346 .",
    "let @xmath347 , and @xmath348 be the edge in @xmath349 . if @xmath350 , then @xmath351 , @xmath352 and in turn @xmath353 , and hence we are done .",
    "so , assume @xmath354 . then , @xmath355 and the head @xmath53 of @xmath348 has labeled descendants in @xmath49 .",
    "let @xmath218 be the root of the component @xmath216 of @xmath49 containing @xmath348 .",
    "if at least one labeled leaf of @xmath216 is not a descendant of @xmath53 in @xmath216 , or either @xmath218 is a root of @xmath13 or @xmath116 contains the edge entering @xmath218 in @xmath13 , then clearly each component in @xmath168 remains in @xmath356 and we are done .",
    "thus , we may assume that all labeled leaves of @xmath216 are descendants of @xmath53 in @xmath216 , @xmath218 is not a root of @xmath13 , and the edge @xmath357 entering @xmath218 in @xmath13 is not in @xmath116 .",
    "then , since @xmath357 is not in @xmath49 , @xmath358 . moreover , the head of @xmath357 has no labeled descendants in @xmath359 and in turn @xmath360 .",
    "consequently , @xmath361 can be obtained from @xmath49 by replacing @xmath348 with @xmath357 .",
    "now , if the component @xmath50 of @xmath49 containing @xmath14 is not in @xmath168 , then @xmath341 ; otherwise , @xmath356 can be obtained from @xmath168 by replacing @xmath50 with the component in @xmath361 containing @xmath357 .",
    "in this section , we prove theorem  [ th : goodratio ] . hereafter , fix a tf - pair @xmath27 such that for each pair @xmath187 of semi - sibling leaves in @xmath15 , @xmath362 . for a vertex @xmath363 in @xmath15 , @xmath364",
    "denote the set of leaf descendants of @xmath363 in @xmath15 .",
    "a vertex @xmath363 of @xmath15 is _ consistent _ with @xmath13 if either @xmath363 is a leaf , or @xmath363 is a bifurcate vertex in @xmath15 such that @xmath365 is a tree and the root in @xmath366 is agreed with the root in @xmath365 . for example , if @xmath27 is as in figure  [ fig : conf ] , then @xmath363 is consistent with @xmath13 but @xmath367 is not .",
    "[ lem : consistent ] suppose that a vertex @xmath363 of @xmath15 is consistent with @xmath13 .",
    "let @xmath114 be a root - leaf path in an @xmath368-search tree of @xmath27 .",
    "then , the tail of each edge in @xmath115 ( respectively , @xmath116 ) is a descendant of @xmath369 ( respectively , @xmath370 ) in @xmath15 ( respectively , @xmath13 ) , and the lca of the @xmath368-descendants of @xmath369 in @xmath371 is agreed with that of the @xmath368-descendants of @xmath370 in @xmath307 .",
    "moreover , if @xmath372 is not a root in @xmath13 , then for every normal key @xmath373 of @xmath27 , the root @xmath218 of each component @xmath216 in @xmath168 is a proper descendant of @xmath370 in @xmath13 and @xmath116 contains the edge entering @xmath218 in @xmath13 .",
    "the first assertion in the lemma can be trivially proved via induction on @xmath374 .",
    "the second assertion follows from the first and lemma  [ lem : f_c1 ] immediately .",
    "let @xmath237 be a ( possibly empty ) set of edges in @xmath13 , and @xmath1 be a subset of @xmath157 .",
    "@xmath1-path _ in @xmath375 is a directed path @xmath376 to an @xmath377 in @xmath375 such that each vertex of @xmath376 other than @xmath89 is either unifurcate or @xmath1-bifurcate in @xmath375 . for each vertex @xmath14 of @xmath375 ,",
    "let @xmath378 denote the number of @xmath1-paths starting at @xmath14 in @xmath375 . when @xmath379 , we write @xmath380 instead of @xmath378 .",
    "let @xmath15 and @xmath13 be as in figure  [ fig : conf](1 ) , and @xmath147 .",
    "then , @xmath381 is an @xmath1-path in @xmath13 but @xmath382 is not ; indeed , @xmath383 , @xmath384 .",
    "however , if @xmath385 , then @xmath382 is an @xmath1-path in @xmath375 , @xmath386 , and @xmath387 .",
    "our algorithm finds good keys inside several types of _ stoppers _ for @xmath27 defined as follows .",
    "let @xmath363 be a vertex in @xmath15 .",
    "@xmath363 is a _ close stopper _ for @xmath27 if it is consistent with @xmath13 , @xmath388 , and @xmath389 for all proper descendants @xmath14 of @xmath390 in @xmath13 .",
    "@xmath363 is a _",
    "close semi - stopper _ if it contains two vertices @xmath28 and @xmath29 such that @xmath391 , @xmath392 , and @xmath393 becomes a stopper for @xmath394 , where @xmath237 consists of @xmath1-exclusive edges in @xmath395 .",
    "for example , if @xmath15 and @xmath13 are as in figure  [ fig : conf](1 ) , then @xmath363 is not a close stopper but is a close semi - stopper for @xmath27 , while @xmath396 is neither .",
    "@xmath363 is a _",
    "root stopper _ for @xmath27 if it is consistent with @xmath13 , no descendant of @xmath363 in @xmath15 is a close semi - stopper for @xmath27 , and @xmath370 is a root in @xmath13 , for example , if @xmath15 and @xmath13 are as in figure  [ fig : conf](1 ) , then @xmath397 is a root stopper for @xmath27 , but @xmath398 is not because it is a close semi - stopper .",
    "@xmath363 is a _ disconnected stopper _ for @xmath27",
    "if @xmath370 is undefined , no descendant of @xmath363 in @xmath15 is a close semi - stopper or a root stopper for @xmath27 , and both semi - children of @xmath363 in @xmath15 are consistent with @xmath13 .",
    "for example , if @xmath15 and @xmath13 are as in figure  [ fig : conf](1 ) , then @xmath399 is a disconnected stopper for @xmath27 .",
    "@xmath363 is an _ overlapping stopper _ for @xmath27 if @xmath370 is defined , no descendant of @xmath363 in @xmath15 is a close semi - stopper , a root stopper , or a disconnected stopper for @xmath27 , and both semi - children @xmath400 and @xmath401 of @xmath363 in @xmath15 are consistent with @xmath13 but @xmath363 is not .",
    "for example , if @xmath15 and @xmath13 are as in figure  [ fig : def](1 ) , then both @xmath367 and @xmath363 is overlapping stoppers for @xmath27 .",
    "[ lem : exist ] there always exists a close semi - stopper , root stopper , disconnected stopper , or overlapping stopper for @xmath27 .    by assumption",
    ", the root in @xmath15 is agreed with no vertex in @xmath13 .",
    "so , @xmath15 has a vertex @xmath363 such that @xmath363 is not consistent with @xmath13 but both semi - children of @xmath363 are .",
    "if some proper descendant of @xmath363 in @xmath15 is a close semi - stopper for @xmath27 , we are done .",
    "so , assume that @xmath363 has no such proper descendant in @xmath15 .",
    "now , if some proper descendant of @xmath363 in @xmath15 is a root stopper for @xmath27 , we are done ; otherwise , @xmath363 must be a disconnected stopper or overlapping stopper for @xmath27 .",
    "now , our algorithm for finding a good cut of @xmath13 proceeds as follows .    1 .",
    "[ step : goodkey ] try to find a close semi - stopper , root stopper , or disconnected stopper @xmath363 ( in this order ) for @xmath27 .",
    "if @xmath363 is found , then use it to find a good key @xmath402 of @xmath27 and return @xmath10 .",
    "[ step:4 ] if there is an overlapping stopper @xmath363 for @xmath27 , then find a good cut @xmath20 and return @xmath20 .    in the next subsection , we show how to find good keys in step  [ step : goodkey ] . in section  [ subsec :",
    "overlapping ] , we deal with step  [ step:4 ] .",
    "it will be very easy to see that each of the steps can be done in quadratic time .",
    "so , we will not mention the time complexity below .",
    "a _ robust key _ of @xmath27 is a normal key @xmath153 such that @xmath403 is consistent with @xmath13 , @xmath404 is not a root of @xmath13 , @xmath405 , and @xmath404 has a labeled descendant in @xmath406 . if in addition , @xmath404 has two children in @xmath407 and each of them has a labeled descendant in @xmath406 , then @xmath151 is _ super - robust_. for example , if @xmath15 and @xmath13 are as in figure  [ fig : conf](1 ) , then @xmath408 is a robust but not super - robust key of @xmath27 .",
    "the next lemma combines two normal keys to one larger normal key .",
    "[ lem : helpnormal ] let @xmath409 and @xmath410 be two disjoint subsets of @xmath157 , and @xmath411 .",
    "suppose that either @xmath403 is consistent with @xmath13 , or @xmath404 is undefined but both @xmath412 and @xmath413 are consistent with @xmath13 and neither @xmath414 nor @xmath415 is a root of @xmath13 .",
    "assume that @xmath27 has two normal keys @xmath416 and @xmath417 such that @xmath418 , where @xmath419 is the number of robust keys among @xmath420 and @xmath421 .",
    "then , the following hold :    1 .",
    "if either @xmath404 is undefined , or @xmath404 is defined and is a root of @xmath13 , then @xmath422 is a normal key of @xmath27 such that @xmath423 .",
    "if @xmath404 is defined but is not a root of @xmath13 , then @xmath424 is a normal key of @xmath27 such that @xmath425 and @xmath426 , where @xmath357 is an arbitrary edge in @xmath427 and @xmath428 is not robust@xmath429 or any edge entering a child of @xmath430 in @xmath13 for some super - robust @xmath428 with @xmath85 .    obviously , @xmath151 is a normal key of @xmath27 .",
    "it remains to show that @xmath426 .    for each @xmath85 ,",
    "let @xmath431 be an @xmath432-search tree witnessing @xmath433 .",
    "since @xmath403 is consistent with @xmath13 , it is clear that we can combine @xmath434 and @xmath435 of @xmath27 into an @xmath1-search tree @xmath128 of @xmath27 such that each root - leaf path @xmath114 in @xmath128 can be cut into three portions @xmath436 , @xmath437 , @xmath252 , where @xmath438 corresponds to a root - leaf path in @xmath431 for each @xmath85 , while @xmath252 is a single edge corresponding to picking a cherry @xmath118 with @xmath439 and @xmath440 .",
    "obviously , @xmath441 and in turn @xmath442",
    ". moreover , since @xmath10 is a superset of both @xmath443 and @xmath444 , @xmath445 .",
    "furthermore , by lemma  [ lem : consistent ] , @xmath446 and @xmath447 .    for convenience ,",
    "let @xmath448 . by lemma  [ lem :",
    "consistent ] , @xmath325 is a dangling subtree of @xmath49 and the head of @xmath449 is a descendant of the head of @xmath450 . if @xmath252 isolates @xmath451 or @xmath452 , then by lemma  [ lem : cuthelp ] , @xmath426 .",
    "so , suppose that @xmath252 creates @xmath317 .",
    "then , by lemma  [ lem : mergehelp ] , we can not guarantee @xmath426 only if @xmath252 creates @xmath317 and @xmath453 .",
    "since @xmath454 , @xmath453 can happen only if for some @xmath85 , @xmath357 is the edge entering a child of @xmath430 in @xmath13 and @xmath455 .",
    "thus , we may further assume that such an @xmath108 exists .",
    "then , @xmath438 picks its last cherry in the third way and in turn @xmath456 by lemma  [ lem : mergehelp ] .",
    "we may have two or more choices for @xmath357 in lemma  [ lem : helpnormal ] . in that case , sometimes we may want to choose @xmath357 ( in the listed order ) as follows :    * if @xmath428 is super - robust for some @xmath85 , then @xmath357 is any edge entering a child of @xmath430 in @xmath13 .",
    "* if for some @xmath85 , either @xmath457 , or @xmath458 and @xmath428 is robust , then @xmath357 is an arbitrary edge in @xmath459 . * if @xmath460 , then @xmath357 is an arbitrary edge in it ; otherwise , @xmath461 for an arbitrary @xmath85 such that @xmath428 is robust .",
    "we refer to the above way of choosing @xmath357 as the _ robust way _ of combining @xmath420 and @xmath421 .",
    "intuitively speaking , we try to make @xmath151 super - robust ; if we fail , we then try to make @xmath151 robust . for example , if @xmath462 in lemma  [ lem : helpnormal ] , choosing @xmath357 via the robust way yields a robust @xmath151 .    obviously , for each leaf @xmath89 of @xmath15 , @xmath463 is a normal key of @xmath27 with @xmath464 and @xmath465 .",
    "thus , the next lemma follows from statements  2 in lemma  [ lem : helpnormal ] immediately .",
    "[ lem : trivial2 ] suppose that @xmath15 has a pair @xmath187 of semi - siblings such that @xmath466 and @xmath188 is not a root of @xmath13 .",
    "then , for every @xmath467 , @xmath468 is a fair robust key of @xmath27 ; if in addition @xmath469 , neither semi - child of @xmath188 in @xmath13 is a leaf , and @xmath470 for some @xmath85 with @xmath471 , then @xmath151 is super - robust .",
    "[ lem : goup ] suppose that @xmath1 is a subset of @xmath157 such that @xmath403 is consistent with @xmath13 , @xmath404 exists but is not a root of @xmath13 , and @xmath472 for each descendant @xmath14 of @xmath404 in @xmath13 .",
    "then , @xmath27 has a fair normal key @xmath473 such that @xmath151 is robust if @xmath474 .",
    "by induction on @xmath475 .",
    "the lemma is clearly true when @xmath476 .",
    "so , suppose that @xmath477 .",
    "let @xmath409 ( respectively , @xmath410 ) be the set of @xmath1-descendants of the left ( respectively , right ) child of @xmath403 in @xmath15 . for convenience ,",
    "let @xmath478 and @xmath479 for each @xmath85 . for each @xmath85",
    ", let @xmath480 be a normal key of @xmath27 guaranteed by the inductive hypothesis for @xmath432 .",
    "let @xmath419 be defined as in lemma  [ lem : helpnormal ] .",
    "@xmath481 . in this case",
    ", there is exactly one @xmath85 with @xmath482 .",
    "we may assume @xmath483 .",
    "then , @xmath484 , or @xmath485 and in turn @xmath421 is robust by the inductive hypothesis . in either case , statement  2 in lemma  [ lem : helpnormal ]",
    "ensures that @xmath473 with @xmath486 satisfies the conditions in the lemma .",
    "@xmath474 . in this case",
    ", we claim that @xmath487 .",
    "the claim is clearly true if @xmath488 .",
    "moreover , if @xmath489 , then @xmath490 and in turn @xmath491 ; hence , @xmath492 by the inductive hypothesis , and the claim holds .",
    "so , we assume @xmath493 . then , for some @xmath85 , @xmath494 and @xmath495 .",
    "we may assume @xmath483 .",
    "then , @xmath485 and in turn @xmath421 is robust by the inductive hypothesis .",
    "thus , the claim holds . by the claim , if we set @xmath357 to be an arbitrary edge in @xmath496 , or set @xmath497 for an arbitrary robust @xmath428 , then statement  2 in lemma  [ lem : helpnormal ] ensures that @xmath473 with @xmath498 satisfies the conditions in the lemma .",
    "[ lem : rootdis ] suppose that @xmath363 is a root or disconnected stopper for @xmath27 .",
    "then , @xmath27 has a good normal key @xmath499 .",
    "let @xmath500 and @xmath501 be the semi - children of @xmath363 in @xmath15 . since no descendant of @xmath363 in @xmath15 is a close semi - stopper for @xmath27 , we can construct a fair normal key @xmath502 of @xmath27 for each @xmath85 , as in lemma  [ lem : goup ] .",
    "now , by statement  1 in lemma  [ lem : helpnormal ] , we can combine @xmath420 and @xmath421 into a good normal key @xmath373 of @xmath27 .",
    "[ lem : stopgoingup ] suppose that @xmath363 is a close stopper for @xmath27",
    ". then , @xmath27 has a good abnormal key @xmath503 .    for convenience ,",
    "let @xmath504 , @xmath478 , and @xmath61 and @xmath62 be the children of @xmath14 in @xmath13 .",
    "clearly , @xmath505 .",
    "so , @xmath506 . for each @xmath85 ,",
    "let @xmath507 be the leaf endpoint of the unique @xmath1-path starting at @xmath83 .",
    "further let @xmath508 ,  , @xmath509 be the vertices of @xmath510 that are @xmath1-bifurcate in @xmath13 , where @xmath511 and @xmath512 is an ancestor of @xmath513 in @xmath13 for each @xmath514 . for each @xmath515",
    ", let @xmath516 be the semi - child of @xmath512 that is not an ancestor of @xmath513 in @xmath13 . for convenience ,",
    "let @xmath517 .",
    "see figure  [ fig : closestop ] .",
    "rooted at @xmath14 in the proof of lemma  [ lem : stopgoingup ] , where thin dashed lines show edges in @xmath10 , small unfilled circles show unifurcate vertices , each triangle shows a dangling subtree whose leaf set is a superset of the set inside the triangle . ]    for each @xmath514 , if @xmath518 , then @xmath519 ( because @xmath520 ) and hence lemma  [ lem : goup ] guarantees that @xmath27 has a fair robust key @xmath521 ; otherwise , @xmath522 and hence lemma  [ lem : goup ] guarantees that @xmath27 has a fair normal key @xmath521 .",
    "so , @xmath523 is a key of @xmath27 , where @xmath142 is the edge set of @xmath143 , @xmath524 and @xmath525 for each @xmath85 .",
    "note that @xmath526 .",
    "we want to show that @xmath204 . for this purpose ,",
    "let @xmath527 be an @xmath528-search tree of @xmath27 witnessing @xmath529 .",
    "we use an @xmath1-search tree @xmath98 of @xmath27 in which each root - leaf path @xmath114 can be cut into @xmath530 portions @xmath531 ,  , @xmath532 , @xmath533 ,  , @xmath534 , @xmath535 ,  , @xmath536 , @xmath537 , ",
    ", @xmath538 , @xmath252 ( appearing in @xmath114 in this order ) , where    * for each @xmath85 and each @xmath515 , @xmath539 corresponds to a root - leaf path in @xmath527 and @xmath540 is a single edge corresponding to picking a cherry @xmath541 with @xmath542 and @xmath543 , * @xmath252 is a single edge corresponding to picking a cherry @xmath544 with @xmath545 for each @xmath85 .",
    "obviously , the following claims follow from lemma  [ lem : consistent ] :    * claim 1 . * for each @xmath85 , @xmath546 and for each @xmath547 , either @xmath548 is a vertex of @xmath549 other than @xmath512 or @xmath550 for some @xmath551 .    *",
    "* for each @xmath85 and each @xmath515 , @xmath552 and @xmath553 .",
    "moreover , for two pairs @xmath554 and @xmath555 with @xmath556 , @xmath557 and @xmath558 .",
    "let @xmath559 and @xmath560 . by claims  1 and  2 , @xmath561 , @xmath562 , @xmath563 , and @xmath564 .",
    "for each @xmath85 and each @xmath515 , @xmath565 ( and hence @xmath566 ) because @xmath567 or @xmath568 is robust .    consider an @xmath85 and a @xmath515 .",
    "further consider the node @xmath100 of @xmath98 at which @xmath114 picks the cherry @xmath541 .",
    "for convenience , let @xmath569 and @xmath570 . by lemma",
    "[ lem : consistent ] , @xmath571 in @xmath52 is agreed with a descendant @xmath572 of @xmath573 in @xmath49 , while @xmath574 in @xmath52 is agreed with a descendant @xmath575 of @xmath512 in @xmath49 . moreover , by claim  1 , either @xmath575 is a vertex of @xmath549 other than @xmath512 or @xmath575 is a descendant of @xmath576 in @xmath13 for some @xmath551 .    *",
    "* for each @xmath85 and each @xmath515 , ( 1 )  @xmath577 , ( 2 )  @xmath578 , ( 3 )  @xmath579 and either @xmath580 or @xmath581 contains a connected component rooted at the head of @xmath582 , or ( 4 )  @xmath583 and either @xmath584 or @xmath581 contains a connected component rooted at the head of @xmath585 .    to prove claim  3 , consider the three possible ways in which @xmath114 picks the cherry @xmath541 .",
    "( 1 )  holds when @xmath114 creates @xmath586 , because of lemma  [ lem : mergehelp ] .",
    "( 2 )  holds when @xmath114 isolates @xmath587 and @xmath575 is a vertex of @xmath549 other than @xmath512 .",
    "( 3 )  holds when @xmath114 isolates @xmath587 and @xmath575 is a descendant of @xmath576 in @xmath13 for some @xmath551 , because of lemma  [ lem : cuthelp ] .",
    "similarly , ( 4 )  holds when @xmath114 isolates @xmath588 .    by claim  3 ,",
    "each pair @xmath589 with @xmath85 and @xmath515 contributes at least one element to @xmath590 .",
    "* claim 4 . * two different pairs @xmath589 and @xmath591 contribute different elements to @xmath592 .",
    "claim  4 is clearly true when @xmath593 .",
    "so , assume that @xmath594 and @xmath595 .",
    "if ( 1 )  in claim  3 holds for @xmath589 , then after @xmath114 picks @xmath541 , @xmath596 can not be cut by @xmath114 when picking @xmath597 . moreover ,",
    "if ( 2 ) or ( 3 )  in claim  3 holds for @xmath589 , then after @xmath114 picks @xmath541 , @xmath582 has already been cut by @xmath114 and hence can not be cut by @xmath114 again when picking @xmath597 .",
    "similarly , if ( 4 )  in claim  3 holds for @xmath589 , then after @xmath114 picks @xmath541 , @xmath585 has already been cut by @xmath114 and hence can not be cut by @xmath114 again when picking @xmath597 .",
    "thus , in any case , @xmath589 and @xmath591 contribute different elements to @xmath598 , i.e. , claim  4 holds .    by claims 3 and 4 ,",
    "the @xmath599 pairs @xmath589 with @xmath85 and @xmath515 contributes at least a total of @xmath599 elements to @xmath600 .",
    "thus , @xmath601 . recall that @xmath526 . since @xmath602 , @xmath603 . because @xmath114 is an arbitrary root - leaf path of @xmath128 , @xmath190 .",
    "[ lem : stopgoingup2 ] suppose that @xmath363 is a close semi - stopper for @xmath27 .",
    "then , @xmath27 has a good abnormal key @xmath604 .",
    "let @xmath28 , @xmath29 , and @xmath237 be as in the definition of a close semi - stopper for @xmath27 .",
    "by lemma  [ lem : stopgoingup ] , the lemma holds if @xmath605 .",
    "so , we assume that @xmath240 .",
    "since @xmath363 is a close stopper for @xmath606 , we can construct a good abnormal key @xmath607 of @xmath606 as in the proof of lemma  [ lem : stopgoingup ] .",
    "so , we hereafter inherit the notations in that proof .",
    "we set @xmath608 .",
    "obviously , @xmath609 is an abnormal key of @xmath27 . since @xmath610 and @xmath392",
    ", it remains to show that @xmath611 .",
    "the proof is a simple extension of that of lemma  [ lem : stopgoingup ] .",
    "indeed , the proof of lemma  [ lem : stopgoingup ] ( as it is ) already shows that @xmath612 .",
    "we want to show that we can always increase this lower bound by  1 . to this end , we take a closer look at ( 1 ) in claim  3 and its proof by distinguishing two cases as follows .",
    "@xmath114 picks @xmath613 by creating @xmath614 , and @xmath615 contains the tail of some edge @xmath616 . in this case ,",
    "not only @xmath617 but also @xmath618 .",
    "@xmath114 picks @xmath613 by creating @xmath614 , and @xmath575 is a descendant of @xmath576 in @xmath13 for some @xmath551 . in this case ,",
    "not only @xmath617 but also @xmath619 contains the edge entering the child of @xmath620 that is not an ancestor of @xmath576 .",
    "if case  1 or  2 happens for some @xmath85 and @xmath515 , then we have increased the lower bound @xmath621 on @xmath622 by  1 and hence are done .",
    "so , assume that neither case  1 nor  2 ever occurs .",
    "let @xmath357 be the edge in @xmath237 whose tail is the furthest from @xmath14 in @xmath13 among the tails of the edges in @xmath237 .",
    "then , there are an @xmath85 and a @xmath623 such that the tail of @xmath357 is an inner vertex of @xmath624 , where we define @xmath625 .",
    "we may assume @xmath483 .",
    "now , consider the node @xmath111 of @xmath98 at which @xmath114 picks the final cherry @xmath626 . for convenience ,",
    "let @xmath627 and @xmath628 . in the proof of lemma  [ lem : stopgoingup ]",
    ", we ignored the contribution of @xmath626 to the lower bound @xmath621 on @xmath622 .",
    "so , we here want to count the contribution . for each @xmath85 , let @xmath629 be the vertex in @xmath630 agreed with @xmath631 in @xmath632 .",
    "since neither case  1 nor  2 occurs , either @xmath72 is a descendant of @xmath633 in @xmath630 , or @xmath634 and @xmath72 is a descendant of @xmath635 for some @xmath636 . in the former case , @xmath637 , implying that @xmath638 if @xmath114 creates @xmath639 . in the latter case",
    ", @xmath640 contains the edge @xmath641 entering the child of @xmath642 that is not an ancestor of @xmath643 , implying that @xmath644 if @xmath114 creates @xmath639 . on the other hand ,",
    "if @xmath114 isolates @xmath645 for some @xmath85 , then either @xmath646 or @xmath647 contains a component rooted at the head of @xmath648 .",
    "therefore , in any case , we can increase the lower bound @xmath621 on @xmath622 by  1 .",
    "two leaves @xmath649 and @xmath650 are _ far apart _ in @xmath13 if either ( 1 )  @xmath651 , or ( 2 )  @xmath652 and @xmath649 or @xmath650 is a semi - child of @xmath653 in @xmath13 .",
    "obviously , if there is no close semi - stopper for @xmath27 , then for every non - leaf @xmath363 of @xmath15 , every two leaves in @xmath368 are far apart in @xmath13 .    [ lem : useful ] suppose that @xmath1 is a subset of @xmath157 such that ( 1 )  @xmath477 , ( 2 )  @xmath403 is consistent with @xmath13 , ( 3 )  @xmath404 is not a root in @xmath13 , and ( 4 )  every two leaves in @xmath1 are far apart in @xmath13 . then , @xmath27 has a fair robust key @xmath152 .",
    "in addition , @xmath151 is super - robust if no semi - child of @xmath404 in @xmath13 is a leaf .",
    "let @xmath654 be the set of @xmath1-bifurcate vertices in @xmath13 .",
    "a crucial point is that if some semi - child @xmath53 of a @xmath655 is a leaf in @xmath13 , then @xmath94 because @xmath14 is @xmath1-bifurcate",
    ". we claim that for every @xmath656 with @xmath1-semi - children @xmath30 and @xmath32 in @xmath13 , @xmath27 has a fair normal key @xmath657 of @xmath27 such that ( 1 )  @xmath658 is robust , and ( 2 )  @xmath658 is super - robust if neither @xmath30 nor @xmath32 is both a leaf and a semi - child of @xmath14 in @xmath13 .",
    "we prove the claim by induction on @xmath659 . by lemma  [ lem : trivial2 ]",
    ", the claim is true if @xmath660 .",
    "so , assume that @xmath661 .",
    "we choose an edge @xmath357 via the robust way of combining @xmath662 and @xmath663 .",
    "we set @xmath664 and @xmath665 . by statement  2 in lemma",
    "[ lem : helpnormal ] , @xmath666 .    for some @xmath85 ,",
    "@xmath37 is both a leaf and a semi - child of @xmath14 in @xmath13 .",
    "we may assume @xmath483 .",
    "then , @xmath667 by the above crucial point .",
    "moreover , since every two leaves in @xmath1 are far apart in @xmath13 , either neither semi - child of @xmath32 in @xmath13 is a leaf , or @xmath668 and some semi - child of @xmath32 in @xmath13 is a leaf . in the former case , @xmath663 is super - robust by the inductive hypothesis , and hence @xmath658 is robust by the choice of @xmath357 . in the latter case , @xmath658 is robust by the choice of @xmath357 .",
    "case  1 does not occur . then , for each @xmath85 , @xmath669 , or @xmath670 is robust by the inductive hypothesis .",
    "so , if we can claim that for some @xmath85 , @xmath671 , @xmath670 is super - robust , or @xmath669 and @xmath670 is robust , then @xmath658 is super - robust by the choice of @xmath357 . for a contradiction , assume that the claim is false . then , for each @xmath85 , either ( 1 )  @xmath672 and @xmath670 is not robust , or ( 2 )  @xmath673 and @xmath670 is not super - robust .",
    "thus , by the inductive hypothesis , we know that for each @xmath85 , either ( 1 )  @xmath672 and @xmath37 is a leaf , or ( 2 )  @xmath673 and some semi - child of @xmath37 in @xmath13 is a leaf . however , in either case , we found two leaves in @xmath1 that are not far apart in @xmath13 , a contradiction .",
    "[ lem:2dis ] suppose that @xmath409 through @xmath674 are two or more pairwise disjoint subsets of @xmath157 satisfying the following conditions :    * for every @xmath675 , @xmath676 is consistent with @xmath13 and @xmath677 for each descendant @xmath14 of @xmath430 in @xmath13 . * @xmath678 is the leaf set of a dangling subtree of @xmath15 .",
    "* @xmath679 is undefined for every pair @xmath589 with @xmath680 . *",
    "( 1 )  @xmath430 is a root in @xmath13 for every @xmath681 , ( 2 )  neither @xmath414 nor @xmath415 is a root in @xmath13 , or ( 3 )  @xmath682 , @xmath414 is a root in @xmath13 , and every two leaves in @xmath409 are far apart in @xmath13 .",
    "then , @xmath27 has a good normal key @xmath152 .",
    "let @xmath683 be the set of all @xmath681 such that @xmath430 is not a root in @xmath13 .",
    "further let @xmath684 be the set of all @xmath681 such that @xmath430 is a root in @xmath13 and @xmath685 . for convenience ,",
    "let @xmath686 . for each @xmath687",
    ", we construct a good normal key @xmath688 of @xmath27 as in lemma  [ lem : rootdis ] . obviously , if @xmath689 , then @xmath152 with @xmath690 is as desired .",
    "so , we assume that @xmath691 . for each @xmath692 , we use lemma  [ lem : goup ] to construct a fair normal key @xmath688 . however , if @xmath693 , then @xmath694 and we reconstruct a fair robust key @xmath416 as in lemma  [ lem : useful ] , by imagining as if @xmath414 were not a root in @xmath13 .",
    "the reconstruction is possible because every two leaves in @xmath409 are far apart in @xmath13 . for each @xmath695 ,",
    "let @xmath696 be an @xmath432-search tree of @xmath27 witnessing @xmath433 .",
    "we use an @xmath1-search tree @xmath98 in which each root - leaf path @xmath114 can be cut into @xmath697 paths @xmath436 ,  , @xmath698 , @xmath252 , where each @xmath438 with @xmath695 corresponds to a root - leaf path in @xmath696 .",
    "we next show that @xmath152 with @xmath699 is as desired .    for each @xmath700 ,",
    "let @xmath701 be the set of @xmath432-descendants of @xmath676 in @xmath702 , and @xmath703 .",
    "by lemma  [ lem : consistent ] , @xmath37 in @xmath704 is agreed with @xmath705 in @xmath702 . for convenience ,",
    "let @xmath706 , @xmath707 , and @xmath708 for each @xmath709 . in case @xmath420 was reconstructed and @xmath30 is a root in @xmath710 , @xmath711 indeed contains a component @xmath712 rooted at @xmath414 but @xmath712 was not counted in the lower bound @xmath713 on @xmath714 because we imagined as if @xmath414 were not a root in @xmath13 when calculating the lower bound ( in the proof of lemma  [ lem : useful ] ) . in other words , we indeed have @xmath715 in this case .",
    "this point is crucial .",
    "the first edge of @xmath252 corresponds to picking a cherry @xmath716 for some @xmath717 such that @xmath676 and @xmath718 are semi - siblings in @xmath15 .",
    "if @xmath37 ( respectively , @xmath719 ) is a root in @xmath49 , then picking @xmath716 is done by simply adding @xmath720 ( respectively , @xmath721 ) to @xmath115 . in contrast , if neither @xmath37 nor @xmath719 is a root in @xmath49 , then picking @xmath716 is done by selecting @xmath722 and adding not only @xmath723 to @xmath115 but also @xmath724 to @xmath116 ; as the result , lemma  [ lem : cuthelp ] ensures that either @xmath724 becomes an edge in @xmath165 or @xmath168 contains a component rooted at the head of @xmath724 .",
    "so , in any case , after picking @xmath716 , @xmath725 will be one part of a cherry for @xmath114 to pick later , where @xmath726 is the integer in @xmath554 such that @xmath727 ) was not added to @xmath115 when picking @xmath716 ; consequently , the next cherry for @xmath114 to pick is still of the form @xmath728 for some @xmath729 .",
    "thus , each edge of @xmath252 corresponds to picking a cherry of this form .",
    "moreover , after @xmath114 finishes picking cherries , there is at most one @xmath730 such that @xmath731 .",
    "now , if @xmath732 , then @xmath733 and @xmath734 , implying that @xmath735 .",
    "so , suppose that @xmath693 .",
    "then , @xmath420 was reconstructed .",
    "let @xmath736 be the unique integer in @xmath683 , and @xmath737 . if @xmath30 is not a root in @xmath49 , then @xmath738 and @xmath739 ; otherwise , @xmath740 and @xmath741 .",
    "therefore , in any case , @xmath735 .    in the remainder of this subsection , fix an overlapping stopper @xmath363 for @xmath27 .",
    "we want to show that @xmath13 has a good cut .",
    "let @xmath742 , and @xmath409 ( respectively , @xmath410 ) be the set of leaf descendants of the left ( respectively , right ) child of @xmath363 in @xmath15 .",
    "for an @xmath85 , a vertex @xmath743 of @xmath13 is an _ @xmath432-port _",
    "if ( 1 )  @xmath743 is @xmath432-inclusive but @xmath744-exclusive in @xmath13 , ( 2 )  @xmath743 has at least two leaf descendants in @xmath13 , and ( 3 )  the edge entering @xmath743 in @xmath13 belongs to @xmath395 for some vertices @xmath28 and @xmath29 in @xmath744 .",
    "[ lem : port ] suppose that for some @xmath85 , there is an @xmath432-port @xmath743 in @xmath13 .",
    "then , @xmath27 has a good normal key .",
    "let @xmath348 be the edge entering @xmath743 in @xmath13 .",
    "we may assume @xmath745 .",
    "we use lemma  [ lem : helpnormal ] to construct a fair normal key @xmath746 of @xmath27 with @xmath747 .",
    "let @xmath748 .",
    "if @xmath749 , we use lemma  [ lem : useful ] to construct a fair robust key @xmath750 of @xmath27 ; otherwise , @xmath751 consists of a single @xmath752 and @xmath750 with @xmath753 .",
    "obviously , no matter what @xmath754 is , @xmath755 .",
    "moreover , @xmath756 with @xmath757 is a normal key of @xmath27 and @xmath758 .",
    "so , it remains to show that @xmath759 .",
    "to this end , we use an @xmath1-search tree of @xmath27 in which each root - leaf path @xmath114 can be cut into four portions @xmath436 , @xmath437 , @xmath760 , @xmath761 , where @xmath436 is a root - leaf path in an @xmath409-search tree of @xmath27 witnessing @xmath762 , @xmath437 is a root - leaf path in an @xmath751-search tree of @xmath27 witnessing @xmath763 , each edge of @xmath760 corresponds to picking a cherry @xmath123 with @xmath764 and @xmath765 , and @xmath761 consists of a single edge corresponding to picking a cherry @xmath118 with @xmath439 and @xmath766 . by lemma  [ lem :",
    "consistent ] , @xmath767 , @xmath768 , and @xmath769 .",
    "moreover , since @xmath770 , @xmath771 . furthermore , unless @xmath772 , @xmath773 because the vertices in @xmath410 are labeled descendants of @xmath743 in @xmath774 .    for convenience ,",
    "let @xmath775 .",
    "let @xmath776 denote the path obtained by concatenating @xmath436 and @xmath437 , @xmath451 be the set of leaf descendants of @xmath412 in @xmath52 , and @xmath452 be the set of leaf descendants of @xmath777 in @xmath52 .",
    "we claim that @xmath778 .",
    "to see this claim , we distinguish three cases as follows .    @xmath772 . in this case , clearly @xmath779 .",
    "so , @xmath778 .    @xmath780 . in this case , the descendants of @xmath743 in @xmath781 are all unlabeled , and @xmath348 is not in @xmath782 but is in @xmath783 .",
    "let @xmath216 be the component of @xmath784 containing the tail of @xmath348 . clearly , @xmath785 .",
    "moreover , if @xmath786 , then modifying @xmath216 by adding @xmath348 and the subtree of @xmath787 rooted at @xmath743 yields a component in @xmath788 .",
    "so , in any case , @xmath789 .",
    "consequently , @xmath790 because @xmath791 , @xmath792 , and @xmath793 for @xmath755 .",
    "@xmath794 . in this case",
    ", @xmath348 is not in @xmath782 for @xmath795 .",
    "since @xmath794 , @xmath348 is not in @xmath783 as well .",
    "so , @xmath779 .",
    "thus , @xmath778 .    by the above case - analysis",
    ", the claim holds .",
    "moreover , if case  2 occurs , then by lemma  [ lem : ub0 ] , @xmath796 .",
    "so , we may assume that case  1 or  3 occurs .",
    "then , in summary , we have @xmath797 , @xmath798 , and @xmath799 .",
    "thus , by the proof of lemma  [ lem : ub0 ] , each @xmath786 contributes at least one edge @xmath250 to @xmath800 or at least one component @xmath801 to @xmath168 ; in addition , the tail of @xmath250 and the root of @xmath801 are vertices of @xmath216 .",
    "this crucial property will be useful below .",
    "for example , @xmath802 by this property",
    ".    now , consider the case where for some @xmath85 , @xmath803 is a root in @xmath804 . in this case , by lemma  [ lem : cuthelp ] , either @xmath168 contains a component @xmath805 whose leaves are exactly the tails of the edges in @xmath806 , or @xmath120 consists of a single @xmath298 with @xmath296 . in the former case , @xmath807 , and",
    "the above crucial property ensures that @xmath808 for every @xmath786 . in the latter case , @xmath809 , and",
    "the above crucial property ensures that @xmath810 for every @xmath786 .",
    "therefore , in either case , @xmath811 .    finally , consider the case where neither @xmath812 nor @xmath813 is a root in @xmath804 . in this case",
    ", @xmath760 never isolates @xmath452 .",
    "moreover , if @xmath760 picks some cherry @xmath814 with @xmath815 in the third way , then case  1 can not occur and @xmath816 by lemma  [ lem : mergehelp ] , implying that @xmath811 .",
    "thus , we may assume that the cherry picked by @xmath761 is @xmath118 .",
    "if @xmath252 isolates either @xmath451 or @xmath452 , then as in the last paragraph , @xmath817 by lemma  [ lem : cuthelp ] ; otherwise , @xmath252 creates @xmath818 and so @xmath819 by lemma  [ lem : mergehelp ] , implying that @xmath817 .",
    "[ lem : dangle ] suppose that for some @xmath85 , @xmath430 is a descendant of @xmath820 and is @xmath744-exclusive in @xmath13 .",
    "then , there is a good cut in @xmath13 .",
    "we may assume @xmath745 .",
    "then , @xmath414 is an ancestor of @xmath415 in @xmath13 .",
    "further let @xmath411 , and @xmath30 ,  , @xmath821 be those @xmath409-bifurcate vertices in @xmath13 that are also @xmath410-inclusive in @xmath13 , where @xmath37 is the @xmath409-semi - parent of @xmath822 in @xmath13 for each @xmath823 . for each @xmath823",
    ", let @xmath824 be the other @xmath409-semi - child of @xmath37 in @xmath13 .",
    "let @xmath825 and @xmath826 be the @xmath409-semi - children of @xmath30 in @xmath13 , where @xmath415 is a descendant of the head @xmath743 of some @xmath827 in @xmath13 . by lemma  [ lem : port ] , we may further assume that @xmath410 consists of a single @xmath29 and @xmath828 .",
    "let @xmath53 be the tail of @xmath348 .",
    "see figure  [ fig : danglestop ] .     rooted at @xmath414 in section  [ subsec : overlapping ] , where small unfilled circles show unifurcate vertices , filled triangles show dangling subtrees containing at least one leaf in @xmath409 , unfilled triangles show dangling subtrees containing no leaf in @xmath409 , and bold dashed lines show edges in @xmath10 . ]",
    "it is possible that @xmath829 and @xmath825 and @xmath29 are semi - siblings in @xmath13 .",
    "suppose that this indeed happens .",
    "then , we can use lemma  [ lem : goup ] to construct a fair normal key @xmath830 of @xmath27 with @xmath831 .",
    "obviously , @xmath832 has @xmath833 components .",
    "moreover , since @xmath834 , @xmath835 .",
    "let @xmath836 be obtained from @xmath141 by adding back the edges of @xmath837 so that @xmath28 and @xmath29 are connected into a single component . clearly , @xmath838 but @xmath839 .",
    "hence , @xmath840 .",
    "thus , @xmath841 is a good cut of @xmath13 .",
    "so , we hereafter assume that @xmath842 or @xmath825 and @xmath29 are not semi - siblings in @xmath13 .",
    "obviously , @xmath843 or @xmath844 .",
    "if @xmath843 , we use lemma  [ lem : useful ] to construct a fair robust key @xmath845 of @xmath27 ; otherwise , @xmath846 for some @xmath847 , and @xmath848 with @xmath849 . in a similar way , we construct a normal key @xmath850 of @xmath27 for each @xmath851 .",
    "since every two leaves in @xmath409 are far apart in @xmath13 , @xmath852 is a fair robust key of @xmath27 by statement  2 in lemma  [ lem : helpnormal ] , where @xmath853 . if @xmath854",
    ", then @xmath855 is clearly a normal key of @xmath27 ( because @xmath856 or @xmath857 is robust ) . indeed , even if @xmath858 , we can still construct a fair normal key @xmath830 of @xmath27 such that @xmath831 and @xmath859 is a normal key of @xmath27 , as follows .",
    "we first combine @xmath860 and @xmath861 into a fair normal key @xmath862 of @xmath27 with @xmath863 , where @xmath357 is chosen via the robust way of combining @xmath420 and @xmath864 .",
    "we then extend @xmath865 to a fair normal key @xmath830 of @xmath27 with @xmath866 , by repeatedly combining keys as in the proof of lemma  [ lem : goup ] where we always choose @xmath357 via the robust way .",
    "we claim that @xmath859 is a normal key of @xmath27 .",
    "since @xmath856 or @xmath857 is robust , the claim is clearly true if @xmath867 is robust , @xmath826 is not both a leaf and a semi - child of @xmath30 in @xmath13 , or @xmath861 is super - robust .",
    "so , assume that @xmath867 is not robust , @xmath826 is both a leaf and a semi - child of @xmath30 in @xmath13 , and @xmath861 is not super - robust .",
    "then , either @xmath31 is a leaf or some semi - child of @xmath31 in @xmath13 is a leaf .",
    "if @xmath31 is a leaf , then @xmath868 ( because @xmath826 and @xmath31 are far apart in @xmath13 ) and @xmath869 contains at most one edge in @xmath870 ; otherwise , @xmath861 is robust , @xmath871 ( because every two leaves in @xmath409 are far apart in @xmath13 ) , and @xmath869 contains at most one edge in @xmath870 . in any case , the component in @xmath872 containing @xmath30 also contains at least one leaf of @xmath13 .",
    "so , the claim always holds .    in summary , we have constructed a fair normal key @xmath830 of @xmath27 such that @xmath831 and @xmath873 with @xmath874 is a normal key of @xmath27 .",
    "let @xmath875 be an @xmath409-search tree @xmath875 of @xmath27 witnessing @xmath184 .",
    "further let @xmath98 be an @xmath1-search tree of @xmath27 in which each root - leaf path @xmath114 can be transformed into a root - leaf path @xmath436 of @xmath875 by deleting the last edge .",
    "let @xmath114 be an arbitrary root - leaf path in @xmath98 , and @xmath436 be obtained from @xmath114 by deleting the last edge . since @xmath876 is a superset of @xmath10 , @xmath877 .",
    "now , if @xmath878 or @xmath879 , then by lemma  [ lem : f_c2 ] , @xmath880 and in turn @xmath881 is a good key of @xmath27 because @xmath882 .",
    "so , we assume that @xmath883 and @xmath884 .",
    "then , @xmath436 never picks a cherry @xmath123 with @xmath885 and @xmath886 in the third way , because otherwise we would have @xmath887 .",
    "so , one of the following cases occurs :    the set of leaf descendants of @xmath412 in @xmath888 is a @xmath885 . in this case",
    ", the last cherry for @xmath114 to pick is @xmath889 .",
    "moreover , @xmath29 and @xmath320 belong to the same component in @xmath774 by lemma  [ lem : consistent ] .",
    "if @xmath114 picks @xmath889 in the second ( respectively , third ) way , then @xmath890 contains @xmath348 ( respectively , @xmath891 ) by lemma  [ lem : cuthelp ] ( respectively , [ lem : mergehelp ] ) ; otherwise , @xmath892 or @xmath893 by lemma  [ lem : cuthelp ] .",
    "so , in any case , @xmath894 and in turn @xmath881 is a good key by lemma  [ lem : ub0 ] .",
    "the set of leaf descendants of @xmath412 in @xmath888 is some @xmath895 . in this case , the last cherry for @xmath114 to pick is @xmath889 . by lemma  [ lem :",
    "consistent ] , @xmath320 is not a root in @xmath710 .",
    "since @xmath896 , @xmath53 has a labeled descendant @xmath298 in @xmath897 .",
    "note that @xmath898 because @xmath831 .",
    "so , @xmath29 is in the same component of @xmath710 as @xmath53 , and hence is not a root in @xmath710 as well .",
    "thus , as in case  2.1 , we can prove that @xmath881 is a good key .",
    "[ lem : goodcut ] @xmath27 has a fair normal key @xmath830 such that @xmath899 for every vertex @xmath14 of @xmath141 .",
    "let @xmath654 be the set of @xmath409-bifurcate vertices in @xmath13 .",
    "the idea is to process the vertices of @xmath900 in a bottom - up fashion .",
    "we will maintain an invariant that once a @xmath901 has been processed , we have obtained a fair normal key @xmath657 of @xmath27 satisfying the following conditions :    * @xmath658 is robust if @xmath902 ; * @xmath903 if @xmath14 has a labeled descendant in @xmath904 .",
    "we first process each @xmath905 by constructing @xmath906 .",
    "we then process those vertices @xmath655 such that @xmath14 is @xmath410-exclusive in @xmath13 but its @xmath409-semi - parent in @xmath13 is @xmath410-inclusive in @xmath13 , by constructing @xmath658 as in the proof of lemma  [ lem : useful ] ; note that @xmath658 is robust .",
    "clearly , the invariant is maintained in the two cases .",
    "we next describe how to process each @xmath410-inclusive @xmath655 .",
    "let @xmath907 and @xmath908 be the @xmath409-semi - children of @xmath14 in @xmath13 . for each @xmath85 ,",
    "let @xmath83 be the semi - child of @xmath14 in @xmath13 that is an ancestor of @xmath37 in @xmath13 .",
    "we set @xmath909 , where @xmath357 is chosen ( in the listed order ) as follows :    * if @xmath910 for some @xmath85 , then @xmath911 .",
    "( _ comment : _ by i2 in the invariant for @xmath37 , each @xmath410-path in @xmath912 starting at @xmath83 must end at a leaf descendant of the head of some edge in @xmath913 .",
    "so , the nonexistence of close semi - stoppers for @xmath27 guarantees that @xmath914 and @xmath915 , where @xmath916 .",
    "thus , i2 in the invariant for @xmath14 is maintained .",
    "moreover , @xmath917 is not robust only when @xmath918 and @xmath919 is not robust .",
    "hence , by i1  in the invariant for @xmath719 , @xmath658 is not robust only when @xmath920 and in turn only when @xmath921 .",
    "so , i1 in the invariant for @xmath14 is maintained . by lemma  [ lem : helpnormal ]",
    ", @xmath658 is fair . ) * if for some @xmath85 , @xmath922 and @xmath37 is a semi - child of @xmath14 in @xmath13 , then @xmath923 . *",
    "if some edge @xmath924 is @xmath410-inclusive , then @xmath925 .",
    "* if @xmath670 is robust for some @xmath85 , then @xmath497 ; otherwise , @xmath926 , where @xmath927 is both the tail of some edge in @xmath496 and the semi - parent of @xmath37 for a non - robust @xmath428 .    similar to and actually simpler than the above comment on c1 , we can also comment on c2 through c4 .",
    "so , the invariant for @xmath14 is maintained .",
    "we now define @xmath928 , where @xmath929 . by the invariant",
    ", @xmath151 is as desired .",
    "[ lem : nopure ] suppose @xmath13 has no @xmath432-port for each @xmath85 .",
    "then , we can find a good cut in @xmath13 .    by lemma  [ lem :",
    "dangle ] , we may assume that for each @xmath85 , @xmath430 is @xmath744-inclusive in @xmath13",
    ". then , @xmath930 and @xmath931 .",
    "let @xmath14 be a lowest vertex in @xmath13 such that one semi - child @xmath30 of @xmath14 in @xmath13 is both @xmath409-inclusive and @xmath410-inclusive in @xmath13 and the other @xmath32 is @xmath409- or @xmath410-inclusive in @xmath13 .",
    "then , for some @xmath85 , both @xmath30 and @xmath32 are @xmath432-inclusive .",
    "we may assume @xmath483 . for each @xmath932 ,",
    "let @xmath933 be an @xmath409-descendant of @xmath719 in @xmath13 .",
    "let @xmath934 be the set of all @xmath935 such that the head of some edge in @xmath395 is an ancestor of @xmath89 in @xmath13 . since @xmath14 is @xmath410-inclusive in @xmath13 , @xmath936 .",
    "moreover , by the choice of @xmath14 , no edge in @xmath395 is both @xmath409- and @xmath410-inclusive in @xmath13 .",
    "so , @xmath937 for each @xmath938 , because otherwise the head of some edge in @xmath395 would be an @xmath410-port in @xmath13 .",
    "furthermore , by the choice of @xmath14 , there is at most one @xmath938 with @xmath939 for each @xmath932 .",
    "thus , @xmath940 .",
    "_ case 1 : _",
    "@xmath941 . in this case , @xmath942 for exactly one @xmath943 , and @xmath944 for exactly one @xmath945 . for each @xmath932 , @xmath933 and @xmath946",
    "are semi - siblings in @xmath13 because otherwise the sibling of the head of @xmath947 in @xmath13 would be an @xmath409-port .",
    "now , by lemma  [ lem:2cross ] , @xmath27 has a good normal key and hence @xmath13 has a good cut .",
    "_ case 2 : _",
    "@xmath948 . let @xmath202 be the unique element of @xmath934 .",
    "then , there is an @xmath949 that is not a descendant of @xmath14 in @xmath13 for @xmath950 .",
    "so , @xmath951 for each @xmath932 , because otherwise the highest @xmath410-exclusive ancestor of @xmath933 in @xmath13 would be an @xmath409-port in @xmath13 .",
    "thus , for some @xmath952 , @xmath953 and @xmath202 are semi - siblings in @xmath13 and @xmath954 is a semi - child of @xmath14 in @xmath13 .",
    "we may assume that @xmath955 . by",
    "the choice of @xmath14 , each edge in @xmath395 is @xmath409-exclusive .",
    "we construct a fair normal key @xmath956 of @xmath27 as in the proof of lemma  [ lem : goodcut ] .",
    "we are _ lucky _ if at least one of the following holds :    * for each component @xmath50 in @xmath141 , either the root of @xmath50 is a leaf or both children of the root of @xmath50 are @xmath410-inclusive in @xmath141 .",
    "* @xmath141 has at least two components @xmath50 such that either ( 1 )  one child of the root of @xmath50 is @xmath410-inclusive in @xmath141 but the other is not , or ( 2 )  both children of the root of @xmath50 are @xmath410-inclusive but every two leaves in both @xmath410 and @xmath50 are far apart in @xmath50 .",
    "suppose that we are lucky .",
    "then , by lemma  [ lem:2dis ] , we can construct a good normal key @xmath957 of @xmath958 .",
    "let @xmath959 . clearly , @xmath960 and @xmath961 .",
    "fortunately , we can modify @xmath49 by connecting @xmath28 and @xmath202 into a single tree in which @xmath28 and @xmath202 are the only leaves , i.e. , by modifying @xmath962 by replacing @xmath60 and @xmath963 with @xmath964 . the modification decreases @xmath965 by  1 but does not increase @xmath966 .",
    "so , the modified @xmath967 is a cut of @xmath13 such that @xmath968 .",
    "next , suppose that we are unlucky .",
    "then , @xmath141 has exactly one component @xmath712 such that one child of the root of @xmath712 is @xmath410-inclusive in @xmath141 but the other is not .",
    "we want to modify @xmath10 so that we become lucky . for this purpose ,",
    "first recall that @xmath29 is a semi - child of @xmath14 in @xmath13 and each edge in @xmath395 is @xmath409-exclusive .",
    "so , by c2 in the proof of lemma  [ lem : goodcut ] , @xmath969 is added to @xmath10 when we process @xmath14 , where @xmath61 is the semi - sibling of @xmath29 in @xmath13 .",
    "thus , @xmath141 contains a component @xmath970 rooted at @xmath61 .",
    "since @xmath27 has no close semi - stopper , @xmath971 and in turn one child of @xmath61 in @xmath970 is @xmath410-exclusive .",
    "hence , @xmath972 .",
    "we have two ways to modify @xmath10 .",
    "one is to replace @xmath357 by @xmath963 and the other is to replace @xmath357 by the edge entering the child of @xmath61 that is an ancestor of @xmath28 in @xmath13 .",
    "if modifying @xmath10 in the first way does not create a new component @xmath973 in @xmath141 such that one child of the root of @xmath973 is @xmath410-inclusive in @xmath141 but the other is not , then we have become lucky because now @xmath141 satisfies condition  d1 ; otherwise , we must become lucky by modifying @xmath10 in the second way because now @xmath141 satisfies condition  d2 .",
    "in the conference version of this paper , we only gave a quadratic - time @xmath974-approximation algorithm . by extending the ideas in the conference version , we have succeeded in designing a cubic - time 2-approximation algorithm .",
    "our algorithm is fairly simple and the proof of its correctness is intuitively understandable .",
    "independently , schalekamp _ et al .",
    "_ @xcite have also presented a polynomial - time 2-approximation algorithm for the same problem .",
    "however , they use an lp - model and its dual problem to analyze their algorithm . moreover , they do not give an explicit upper bound on the running time of their algorithm .",
    "zhi - zhong chen was supported in part by the grant - in - aid for scientific research of the ministry of education , science , sports and culture of japan , under grant no .",
    "lusheng wang was fully supported by a grant from the research grants council of the hong kong special administrative region , china [ project no .",
    "cityu 123013 ] ."
  ],
  "abstract_text": [
    "<S> due to hybridization events in evolution , studying two different genes of a set of species may yield two related but different phylogenetic trees for the set of species . in this case </S>",
    "<S> , we want to measure the dissimilarity of the two trees . </S>",
    "<S> the rooted subtree prune and regraft ( rspr ) distance of the two trees has been used for this purpose . </S>",
    "<S> the problem of computing the rspr distance of two given trees has many applications but is unfortunately np - hard . </S>",
    "<S> the previously best approximation algorithm for rspr distance achieves a ratio of 2.5 and it was open whether a better approximation algorithm for rspr distance exists . in this paper </S>",
    "<S> , we answer this question in the affirmative way by presenting a cubic - time approximation algorithm for rspr distance that achieves a ratio of @xmath0 . </S>",
    "<S> our algorithm is based on the new notion of _ key _ and a number of new structural lemmas . </S>",
    "<S> the algorithm is fairly simple and the proof of its correctness is intuitively understandable .    </S>",
    "<S> * keywords : * phylogenetic tree , rspr distance , approximation algorithm . </S>"
  ]
}
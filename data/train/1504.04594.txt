{
  "article_text": [
    "in the market for financial derivatives , the most important problem is the so - called _ option valuation problem _ or in a few words : the problem of computing a fair price for a given option . an american call ( put )",
    "option is a contract written on an underlying asset and gives the holder the right to buy ( sell ) the asset for a pre - specified price or strike price on or before a pre - specified date also indicated as maturity . unlike european options where the holder can exercise the option only on the maturity date",
    ", the possibility of early exercise makes the pricing of american options a problem in stochastic optimization .",
    "while a closed - form solution for the price of european options is derived in the celebrated work by black and scholes @xcite and by merton @xcite , there exists no analogous result for american options .",
    "the reason can be explained as follows : while the governing differential equation is still the one obtained by black and scholes @xcite , mckean @xcite and merton @xcite show that the price of an american option satisfies boundary conditions governed by a boundary that is not known a priori and needs to be computed as part of the solution itself . such problems",
    "are called free - boundary problems . in particular , the american call option problem is a free boundary problem defined on a finite interval . on the other hand ,",
    "the american put option problem is a free boundary problem defined on a semi - infinite interval so that it is a non - linear problem complicated by a boundary condition at infinity .",
    "therefore , both such derivatives of financial markets must be priced by numerical or analytical approximations .    within analytical approximations",
    ", macmillan @xcite and barone - adesi and whaley @xcite defined a quadratic approximation for american put option .",
    "these methods are not convergent and have trouble pricing long - maturity options accurately . to correct this problem , ju and zhong ( 1999 ) develop an approximation based on the method proposed in barone - adesi and whaley . while this improved method prices long - maturity options more accurately , it is still not convergent .",
    "johnson @xcite used an interpolation scheme to price the american put option , geske and johnson @xcite derived a valuation formula expressed in terms of a series of compound - option functions for the same reason , bunch and johnson @xcite propose a modified two - point geske - johnson approach .",
    "carr and faguet @xcite view put options as the limit of a sequence of perpetual option values which are subject to default risk , and use this view to deriving approximations for the price of an option .",
    "more recently , zhu @xcite derives a semi - closed form solution for the price of the option as a taylor series expansion consisting of infinite terms , but requiring thirty terms for an accurate option price .    within numerical approximations ,",
    "the most popular methods for pricing american option can be classified to lattice method , monte carlo simulation , and finite difference method .",
    "the lattice method was first introduced by cox et al .",
    "@xcite , and its convergence was proved by amin and khanna @xcite .",
    "fu @xcite applied monte carlo method along with gradient - based optimization techniques to price american style options .",
    "the application of a finite difference method to price american options was initiated by brennan and schwartz @xcite and schwartz @xcite .",
    "jaillet et al .",
    "@xcite proved the finite difference method convergence .",
    "a front - fixing finite difference method was proposed by wu and kwok ( 1997 ) , nielsen et al .",
    "@xcite , and company et al .",
    "@xcite to compute option prices .",
    "the front - fixing method utilizes a change of variables to transform the free boundary problem into a nonlinear problem on a fixed domain .",
    "nielsen et al .",
    "@xcite also propose a penalty method to price american put options , where the unknown boundary is removed by adding a penalty term , again leading to a nonlinear problem posed on a fixed domain . in this paper , we list a script written in matlab implementing a finite difference scheme for the numerical solution of the american option models of financial markets .",
    "we implemented both the method defined by company et al . @xcite and the method developed by nielsen et al .",
    "@xcite and found that the first method implementation is more efficient than the second one .",
    "our main contribute is the definition of a posteriori error estimator for the american options pricing which is based on richardson s extrapolation theory .",
    "this error estimator allows us to find a suitable grid where the computed solution , both the option price field variable and the free boundary position , verify a prefixed error tolerance .",
    "let us suppose that at time @xmath0 the price of a given underlying asset is @xmath1 .",
    "we consider here the following mathematical model for the value @xmath2 of an american put option to sell the asset : @xmath3 &   p(s , 0 ) = \\max(e - s , 0 ) \\ , \\qquad s^*(0 ) = e \\ ,   \\nonumber \\\\[1ex ] & \\lim_{s\\rightarrow \\infty } p(s , \\tau ) = 0 \\ , \\label{apo : model } \\\\ & p(s^*(\\tau ) , \\tau ) = e - s^*(\\tau ) \\ , \\qquad { \\ds \\frac{\\partial p}{\\partial s}}(s^*(\\tau ) , \\tau ) =   - 1 \\ , \\nonumber \\\\",
    "& p(s , \\tau ) = e - s \\ ,",
    "\\quad 0 \\le s < s^*(\\tau ) \\nonumber\\end{aligned}\\ ] ] where @xmath4 , @xmath0 denotes the time to maturity @xmath5 , @xmath6 is a free boundary , that is the unknown early exercise boundary , @xmath7 , @xmath8 and @xmath9 are given constant parameters representing the volatility of the underlying asset , the interest rate and the exercise price of the option , respectively , and the governing equation is defined on @xmath10 , @xmath11 .    to fix the free boundary we apply the dimensionless new variables @xmath12 see wu and kwok @xcite . from the variables transformation defined by ( [ eq : front - fixing ] ) follows that @xmath13 is mapped on the fixed line @xmath14 , @xmath15 and @xmath16 . by using ( [ eq : front - fixing ] ) , the put option problem ( [ apo : model ] ) can be rewritten as follows @xmath17 \\label{apo : model : fix1 } &   p(x , 0 ) = 0 \\quad \\mbox{for } \\quad 0 \\le x \\ , \\qquad s_f(0 ) = 1 \\ ,   \\\\[1ex ] \\label{apo : model : fix2 } & \\lim_{x \\rightarrow \\infty } p(x ,",
    "\\tau ) = 0 \\ , \\\\ \\label{apo : model : fix3 } & p(0 , \\tau ) = 1 - s_f(\\tau ) \\ , \\qquad { \\ds \\frac{\\partial p}{\\partial x}}(0 , \\tau ) =   - s_f(\\tau )   \\ , \\end{aligned}\\ ] ] that has to be solved on the domain defined by @xmath10 and @xmath18 .",
    "to solve the problem ( [ apo : model : fix]-[apo : model : fix3 ] ) numerically , we introduce a truncated boundary @xmath19 , which is a suitable large value where it would be convenient to impose the asymptotic boundary condition . in other words ,",
    "we replace the asymptotic boundary condition ( [ apo : model : fix2 ] ) with the side condition @xmath20 for the choice of @xmath19 and the accuracy of the related numerical solution , we can refer to the study by kangro and nicolaides @xcite . on the other hand",
    ", the boundary condition at infinity can be enforced exactly by using a non - standard finite difference scheme , and this has been shown for the numerical solution of the so - called perpetual american put option in @xcite .    next , by setting an integer @xmath21 and a positive value @xmath22 , we define the step - sizes @xmath23 the integer @xmath24 @xmath25 where @xmath26 is the _ ceiling _ function which maps a real number to the least integer that is greater than or equal to that number .",
    "therefore , @xmath22 is the grid - ratio @xmath27 so that , within the finite domain , we can introduce a mesh of grid - points @xmath28 for @xmath29 and @xmath30 .",
    "we would like to define a numerical scheme that allows us to compute the grid values @xmath31 for @xmath29 and @xmath32 and the free boundary values @xmath33 for @xmath32 .",
    "to this end let us consider the explicit finite difference scheme @xmath34 for @xmath35 and @xmath36 . for our specific problem @xmath37 and @xmath38",
    "are given and our goal is to compute @xmath39 and @xmath40 . if we apply some simple algebra , then we can rewrite the explicit finite difference scheme as @xmath41 for @xmath42 and @xmath36 , where @xmath43 \\nonumber \\\\ b & = 1 - \\mu \\sigma^2 - r \\delta t \\\\ c & = \\frac{\\mu}{2 } \\left [ \\sigma^2 - \\left(r + \\frac{\\sigma^2}{2}\\right ) \\delta x \\right ] \\nonumber \\ .\\end{aligned}\\ ] ] now , we have to take into account the side conditions . from the two initial conditions ( [ apo : model : fix1 ] )",
    ", we obtain @xmath44 for @xmath45 . from the boundary conditions ( [ eq : fbc ] ) , we get @xmath46 for @xmath47 . from the two boundary conditions ( [ apo : model : fix3 ] ) , using a central finite difference formula , we derive @xmath48 where @xmath49 is a fictitious point out of the computational domain .",
    "moreover , by considering the governing differential equation ( [ apo : model : fix ] ) at @xmath50 , @xmath51 and taking into account the side conditions ( [ apo : model : fix3 ] ) one gets a new boundary condition : @xmath52 see wu and kwok @xcite , zhang and zhu @xcite or kwok @xcite , and its central finite difference discretization @xmath53 now , we can eliminate the value of @xmath54 from equations ( [ eq : fd : fix3 ] ) and ( [ eq : fd : fix5 ] ) to get @xmath55 if we evaluate the numerical scheme ( [ eq : fde ] ) for @xmath56 and take into account ( [ eq : fd : fix6 ] ) for @xmath57 , then the free boundary @xmath58 can be defined by @xmath59 for @xmath60 , where @xmath61 we are now ready to define the algorithm :    1 .",
    "input @xmath7 , @xmath8 , @xmath9 , @xmath5 , @xmath21 , @xmath22 and @xmath19 ; 2 .",
    "define the grid ( @xmath62 , @xmath63 , @xmath64 , @xmath65 ) according to equations ( [ eq : step - sizes ] ) and ( [ eq : grid ] ) ; 3 .   for @xmath66 do @xmath67 end , set @xmath68 ; 4 .",
    "compute @xmath69 , @xmath70 and @xmath71 according to ( [ eq : fd : abc ] ) ; 5 .   for @xmath72 ,",
    "compute @xmath73 according to ( [ eq : fd : dn ] ) , compute @xmath40 according to ( [ eq : fdsf ] ) and apply the free boundary conditions @xmath74 @xmath75 compute @xmath76 and for @xmath77 compute the values of @xmath39 according to @xmath78 end , set @xmath79 , end .",
    "the implementation of this algorithm in matlab has been used to get the numerical results reported below .",
    "the script file is listed in the appendix .",
    "in this section , we recall the theoretical results that make the explicit difference scheme suitable for doing numerical studies of the american put option . for",
    "the sake of simplicity , let us define the numerical solution vector at time level @xmath64 as @xmath80 , @xmath81,@xmath82 , @xmath83 .",
    "[ lemma1 ] ( due to company et al . @xcite . )",
    "if @xmath65 and @xmath63 verify the two inequalities @xmath84 & \\nonumber \\\\[-1ex ] \\label{dis : delta2 } \\delta t & \\le \\frac{\\delta x^2}{\\sigma^2+r \\delta x^2 } \\ .",
    "\\end{aligned}\\ ] ] then the coefficients @xmath69 , @xmath70 and @xmath71 are non - negative .",
    "if @xmath85 , then the non - negativity of these coefficients is verified under the condition ( [ dis : delta2 ] ) .",
    "these two inequalities follow from positivity preserving considerations related to the explicit finite difference scheme .",
    "the theoretical framework is similar to the one used by friedrichs @xcite to study positivity preserving finite difference schemes for the advection equation , see also fazio and jannelli @xcite .",
    "moreover , the coefficients of @xmath86 , for @xmath87,@xmath88,@xmath89 , in our difference scheme ( [ eq : fde ] ) might be regarded , in the limit for @xmath90 , as probability values .",
    "in fact , they sum up to @xmath91 and by imposing their positivity we get the two inequalities ( [ dis : delta1])-([dis : delta2 ] ) .",
    "[ teorema1 ] ( due to company et al . @xcite . )",
    "let @xmath92 be the computed numerical solution and @xmath73 be defined by equations ( [ eq : fd : dn ] ) , then under hypothesis of the lemma [ lemma1 ] , for sufficiently small values of @xmath63 , we have :    * @xmath93 is positive and non - increasing monotone for @xmath94 ; * the vectors @xmath95 have positive components for @xmath94 ; * the vectors @xmath95 are non - increasing monotone with respect to the @xmath88 for each fixed @xmath94 .",
    "as far as the stability of the explicit finite difference scheme is concerned we can introduce the definition : the numerical scheme is said to be @xmath96-stable if , for every mesh in the computational domain @xmath97 \\times [ 0 , t]$ ] , there exists a positive constant @xmath98 such that @xmath99 where @xmath98 is independent on @xmath65 , @xmath63 and @xmath100 , see company et al .",
    "@xcite .",
    "[ teorema2 ] ( due to company et al . @xcite . ) under the hypothesis of theorem [ teorema1 ] the explicit finite difference scheme for the fixed domain problem ( [ apo : model : fix]-[apo : model : fix3 ] ) is @xmath96-stable .",
    "for a scalar @xmath101 of interest , either a value of the solution @xmath102 or a free boundary value @xmath103 , the numerical error @xmath104 can be defined by @xmath105 where @xmath106 is the exact , usually unknown , value .",
    "when the numerical error is caused prevalently by the discretization error and in the case of smooth enough solutions the global error can be decomposed into a sum of powers of the inverse of @xmath24 @xmath107 where @xmath108 , @xmath109 , @xmath110 , @xmath82 are coefficient that depend on @xmath106 and its derivatives , but are independent on @xmath24 , and @xmath111 , @xmath112 , @xmath113 , @xmath82 are the true orders of the discretization error , see schneider and marchi @xcite and the references quoted therein .",
    "each @xmath114 is usually a positive integer with @xmath115 and all together they constitute an arithmetic progression of ratio @xmath116 .",
    "the value of @xmath111 is called the asymptotic order or the order of accuracy of the method or of the numerical value @xmath117 . by replacing into equation ( [ eq : asyme ] ) @xmath118 and @xmath119 and subtracting , to the second obtained equation the first times @xmath120 , @xmath121",
    ", we get the first extrapolation formula @xmath122 that has a leading order of accuracy equal to @xmath112 .",
    "this type of extrapolation is due to richardson @xcite .",
    "taking into account equation ( [ eq : rextra1 ] ) we can conclude that the error estimator by a first richardson s extrapolation is given by @xmath123 where @xmath111 is the order of the numerical method used to compute the numerical solutions .",
    "hence , ( [ eq : est1 ] ) gives the real value of the numerical solution error without knowledge of the exact solution . in comparison with ( [ eq : est1 ] ) a safer error estimator",
    "can be defined by @xmath124 of course , @xmath111 can be estimated with the formula @xmath125 where @xmath106 is again the exact solution ( or , if the exact solution is unknown , a reference solution computed with a suitable large value of @xmath24 ) , and both @xmath106 and @xmath126 are evaluated at the same grid - points of @xmath127 .    within the above framework , in order to improve the numerical accuracy by using only a small number of grid - nodes , we can generalize ( [ eq : rextra1 ] ) introducing the following repeated extrapolation formula @xmath128 where @xmath129 , @xmath130 , @xmath121 is the grid refinement ratio , and @xmath114 is the true order of the discretization error .",
    "the formula ( [ eq : rextra ] ) is asymptotically exact in the limit as @xmath131 goes to infinity if we use uniform grids .",
    "we notice that to obtain each value of @xmath132 requires two computed solutions @xmath101 in two adjacent grids , namely @xmath133 and @xmath134 at the extrapolation level @xmath135 . for any @xmath134",
    ", the level @xmath136 represents the numerical solution of @xmath101 without any extrapolation .",
    "we recall that the theoretical orders of accuracy of the numerical values @xmath137 , with @xmath138 and @xmath135 extrapolations , verify the relation @xmath139 where this equation is valid for @xmath130 .",
    "we introduce a numerical test for the finite difference schemes defined below . to this end , we consider the american put option problem ( [ apo : model : fix]-[apo : model : fix3 ] ) with the following parameters : @xmath140    first of all , we are interested to define a suitable value of the truncated boundary @xmath19 . then , we investigate numerically how the choice of the value of @xmath19 influences the numerical solution . to take a simple approach , we can monitor the final free boundary computed values @xmath141 .",
    "some sample results are reported in table  [ tab : rxinf ] and indicate that we can set @xmath142 .       within the same table , we report the results obtained by repeated richardson s extrapolations .",
    "we remark that the next extrapolated value from table  [ tab : rextra ] is @xmath144 so that our benchmark value is @xmath145 .",
    "this value can be compared with the values @xmath146 computed by nielsen et al . @xcite and @xmath147 found by company et al .",
    "@xcite .",
    "next , we indicate how to use the error estimator defined by equation ( [ eq : est1 ] ) , or alternatively by equation ( [ eq : est2 ] ) .",
    "let us assume that our goal is to solve the american put option problem with a given tolerance @xmath148 , where @xmath149 . to this end",
    "we should solve the given problem twice , for two grids defined with given values of @xmath150 and @xmath151 of space intervals but for the same value of the grid - ratio @xmath22 .",
    "the corresponding time intervals @xmath152 and @xmath153 verify the relation @xmath121 .",
    "hence we can apply ( component - wise ) to @xmath95 and to @xmath103 the error estimator formula ( [ eq : est1 ] ) , or ( [ eq : est2 ] ) .",
    "then , we can verify whether , for @xmath154 , @xmath155 if the two inequalities ( [ eq : test ] ) hold true , for @xmath154 , then we can accept the numerical solution computed on the grid defined by @xmath156 and @xmath153 , otherwise we have to increase these two integers and repeat the calculations .    fig .",
    "[ fig : apoe ] shows the error estimator results computed by setting @xmath157 .",
    "we fixed @xmath158 and started with @xmath159 and @xmath160 repeating the computation by doubling the number of spatial grid - intervals if the required accuracy was not achieved .",
    "our algorithm stopped when @xmath161 that for @xmath162 means @xmath163 .",
    "for the sake of completeness , in fig .",
    "[ fig : fdapo ] we plot @xmath164 versus @xmath62 and @xmath103 versus @xmath64 , these results were obtained by the finite difference scheme with @xmath165 and @xmath162 .      from the numerical results shown in figure [ fig : apoe ]",
    "we can easily realize that the greatest errors are found within a few time steps .",
    "this suggests that a better accuracy can be achieved , without the use of richardson s extrapolation , by developing an adaptive version of the explicit finite difference scheme .",
    ".... % apoefds.m % apo equation on [ 0,xinf ] by forward   % in time and central in space % j intervals in x , n intervals in t % mi = k / h^2 , k time step , h space step   clear all ; help apoefds r = .1 ;      % parameters t = 1 ;       % by nielsen et al .",
    "2002 sigma = .2 ; e = 1 ; xinf = 1 ;             j = 80 ; mi = 20 h = xinf / j k = mi*h^2 n = ceil(t / k ) x = 0:h : xinf ; stab1 = sigma^2/(abs(r-.5*sigma^2))-h stab2 = h^2/(sigma^2+r*h^2)- k if ( stab1<0 | stab2<0 ) , break , end w = zeros(j+1,1 ) ;            s(1 ) = 1 ; t(1)=0 ; a = .5*mi*(sigma^2-(r-.5*sigma^2)*h ) ; b = 1-mi*sigma^2-r*k ; c",
    "= .5*mi*(sigma^2+(r-.5*sigma^2)*h ) ; a1 = 1+r*h^2/sigma^2 ; b1 = 1+h+.5*h^2 ; for n=1:n     % time loop      dp1 = .5*(w(3,1)-w(1,1))/h ;      d = ( a1-(a*w(1,1)+b*w(2,1)+ ...                 c*w(3,1)-dp1))/(dp1+b1*s(n ) ) ;       s(n+1 ) = d*s(n ) ;      if ( s(n+1)<0 | s(n+1)>1 ) , break , end      w(1,2 ) = 1-s(n+1 ) ;      w(2,2 ) = a1-b1*s(n+1 ) ;       am = a-.5*(s(n+1)-s(n))/(h*s(n ) ) ;      cm = c+.5*(s(n+1)-s(n))/(h*s(n ) ) ;      for j = 3:j     % space loop           w(j,2 ) = am*w(j-1,1)+ ...",
    "b*w(j,1)+cm*w(j+1,1 ) ;      end      w(j+1,2 ) = 0 ;      w(:,1 ) = w(:,2 ) ;      t(n+1 ) = t(n)+k ; end plot(t , s,'linewidth',2.5 ) axis([0 t .86 1 ] ) ; grid xlabel('t ' ) ylabel('s_f^n \\approx s_f(t_n ) ' ) ....                                                r.  company , v.  n. egorova , and l.  jdar , `` solving american option pricing models by the front fixing method : numerical analysis and computing , '' _ abstr .",
    "2014 , article i d 146745 , 9 pages , 2014 .",
    "j.  zhang and s.  p. zhu , `` a hybrid finite difference method for valuing american puts , '' in _ proceedings world congress on engineering 2009 , held in london , 1 - 3 july _ , s.  ao , l.  gelman , d.  hukins , a.  hunter , and a.  korsunsky , eds .",
    "ii.1em plus 0.5em minus 0.4emiaeng , kwun tong  hong kong , pp . 11311136 , 2009 .",
    "f.  a. schneider and c.  h. marchi , `` on the grid refinement ratio for one - dimensional advection problems with nonuniform grids , '' in _ proceedings of cobem 2005 _ , 18th international congress of mechanical engineering , 8 pages , 2005 .",
    "l.  f. richardson , `` the approximate arithmetical solution by finite differences of physical problems involving differential equations , with an application to the stresses in a masonry dam , '' _ proc .",
    "london ser .",
    "a _ , vol .",
    "307357 , 1910 ."
  ],
  "abstract_text": [
    "<S> for the numerical solution of the american option valuation problem , we provide a script written in matlab implementing an explicit finite difference scheme . </S>",
    "<S> our main contribute is the definition of a posteriori error estimator for the american options pricing which is based on richardson s extrapolation theory . </S>",
    "<S> this error estimator allows us to find a suitable grid where the computed solution , both the option price field variable and the free boundary position , verify a prefixed error tolerance .    </S>",
    "<S> american options , free boundary problem , finite difference scheme , richardson s extrapolation , a posteriori error estimator . </S>"
  ]
}
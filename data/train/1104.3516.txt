{
  "article_text": [
    "_ discrete element method _ simulations have been widely employed in scientific studies and industrial applications to understand the behavior of complex many - particle systems such as granular materials .",
    "the common property of these methods is that the time evolution of the system is treated on the level of individual particles , i.e.   the trajectory of each particle is calculated by integrating its equations of motion . among the discrete element methods , _ soft particle molecular dynamics _",
    "( md ) @xcite , _ event driven _",
    "( ed ) @xcite and _ contact dynamics _ ( cd ) @xcite are often used for simulating granular media .",
    "_ molecular dynamics _ is the most widely used algorithm for discrete element simulations . for granular materials ,",
    "the contact forces between the soft particles stem from visco - elastic force laws .",
    "interactions are local , therefore efficient parallelization is possible @xcite with 100% efficiency for large systems ( throughout the paper , the performance of a parallel algorithm is quantified by the usual quantities : the _ speedup _ @xmath2 , which is the ratio of the run time of the non - parallel version on a single processor to the run time of the parallel version on @xmath3 processors , and the _ efficiency _ @xmath4 ) . the time step and therefore the speed of md simulations is strongly limited by the stiffness of the particles , as collisions must be sufficiently resolved in time .",
    "molecular dynamics is efficient for dense systems of soft particles , but much less so for hard particles and dilute systems .",
    "the _ event driven dynamics _",
    "@xcite considers particle interactions of negligible duration compared to the time between collisions .",
    "particle collisions are thus treated as instantaneous events , and trajectories are analytically integrated in between .",
    "this makes ed favorable in dilute granular systems , where the above condition holds .",
    "the parallelization of this algorithm poses extreme difficulties , since the collisional events are taken from a",
    "_ global _ list , which in turn is changed by the actual collision . in general , a naive domain decomposition leads to causality problems .",
    "the algorithm presented in @xcite conserves causality by reverting to an older state when violated .",
    "the best efficiency reached so far is a speedup proportional to the square root of the number of processors @xcite .",
    "in contrast to ed , lasting contacts between rigid bodies are considered in the realm of _",
    "( multi)-rigid - body dynamics_. common to all its realizations is the treatment of contact forces as constraint forces , preventing interpenetration and , to a certain extent in the case of frictional contacts , sliding . when applying the rigid body modelling to problems like e.g.  robotics @xcite or granular media @xcite , different algorithms can in principle be used .",
    "approximations with respect to the constraint of dry coulomb friction enable the usage of powerful standard techniques for _ linear complementary problems _ ( lcp ) @xcite . other algorithms keep the isotropic friction cone , using a solver based on a modified time stepping scheme leading to a _ cone complementary problem _ ( ccp ) for the simulation of frictional contact dynamics @xcite .",
    "other approximations , leading to _ fast frictional dynamics _ ( ffd )",
    "@xcite , yield a computational cost being only linear in the number of contacts and thus allow for impressive system sizes in terms of the number of particles . for investigations of e.g.  the stress field in granular media ,",
    "these approximations are prohibitive , though , and thus the _ non - smooth contact dynamics _",
    "method @xcite , or commonly just _ contact dynamics _ , is widely employed .",
    "we will sketch the principle of this iterative procedure in section [ cd - algorithm ] .",
    "parallelization of the ffd method is straightforward and efficient @xcite , on the other hand , the parallel version suffers also from the undesired approximations .",
    "the parallel implementation of the ccp algorithm by the use of the graphics processing unit ( gpu ) for large - scale multibody dynamics simulations is presented in @xcite . in the present work",
    "we investigate the impact of the parallelization on the numerical solution of the cd method going beyond @xcite .    providing a parallel cd code",
    "is motivated by the need for large - scale simulations of dense granular systems of hard particles .",
    "the computation time even scales as @xmath5 with the number of particles in cd @xcite ( @xmath6 is the dimension of the system ) , while it grows linearly with @xmath7 in md",
    ". however , parallelization of cd poses difficulties as in general the most time consuming part of the algorithm is a global iteration procedure , which can not be performed completely in parallel . so far , a static geometrical domain decomposition method has been proposed in ref .",
    "@xcite , and a partially parallel version is introduced in ref .",
    "@xcite , where only the iterative solver is distributed between shared memory cpus . in the former work , the force calculation is studied just on @xmath8 processors and in the latter , already with @xmath9 processors the performance efficiency is below @xmath10 .",
    "none of these studies deal with computational load balancing during the execution of the code .",
    "there is a large variety of domain decomposition methods proposed for parallel particle simulations in the literature , from _ voronoi tessellation _",
    "@xcite to _ orthogonal recursive bisection _",
    "( orb ) @xcite . for the parallelization of cd",
    "the size of the interfaces between domains is more crucial than for md , since besides communication overhead it also influences the parallel / sequential nature of the global iteration .",
    "so the orb methods are the most suited for the cd code together with adaptive load balancing approaches @xcite , which is not only important in heterogeneous clusters but also in the case of changing simulation setup and local particle / contact density .    in the present work ,",
    "we introduce a completely parallel version of the contact dynamics method using mpi communication with orthogonal recursive bisection domain decomposition for an arbitrary number of processors .",
    "the method minimizes the computational costs by optimizing the surface - to - volume ratio of the subdomains , and it is coupled with an adaptive load balancing procedure .",
    "the validation of our code is done by numerical simulations of different test systems .",
    "we presented our implementation in two dimensions and for spherical particles .",
    "however , our code is also capable of handling polygonal particles and the extension to three dimensions is straightforward .",
    "this article is organized as follows .",
    "the contact dynamics method is described briefly in sec .",
    "[ cd - method ] and particular attention is paid to the numerical stability of the sequential and parallel update schemes , and to the identification of the most time consuming parts of the code . in sec .",
    "[ parallelcd ] we present an adaptive domain decomposition method , and implement it in a parallel version of the cd algorithm .",
    "the results of some test simulations with respect to the performance of the parallel cd code are presented in sec .",
    "[ numericalresults ] and the effect of our parallelization approach on the physical properties of the solutions are investigated .",
    "we conclude the paper in sec .",
    "[ conclusions ] with a summary of the work and a brief discussion .",
    "in this section , we present the basic principles of the cd method @xcite in a language closer to md and with special emphasis on those parts where changes are applied in the parallel version of the code . for more details and a broader overview cf .",
    "the central point is that the forces are not calculated from particle deformation , instead they are obtained from the constraints of impenetrability and friction laws .",
    "imposing constraints requires implicit forces , which are calculated to counteract all movement that would cause constraint violation .",
    "in general for molecular dynamics , where trajectories are smooth ( soft particle model ) , simulation codes use second ( or higher ) order schemes to integrate the particle positions . in cd method , the non - smooth mechanics ( hard particle limit ) requires strong discontinuity , which can only be achieved by first order schemes .",
    "thus we apply a _ first - order euler _ scheme for the time stepping of particle @xmath11 : @xmath12 @xmath13 which determines the new velocity @xmath14 and position @xmath15 of the center of mass of the particle after a time step @xmath16 . the effective force on particle @xmath11",
    "is denoted by @xmath17 .",
    "the scheme is semi - implicit in the sense that the right - hand - side velocities are ( necessarily ) the ones at time @xmath18 while forces other than the constraint forces may be treated implicitly or explicitly .",
    "the size of the time step @xmath16 is chosen such that the relative displacement of the neighboring particles during one time step is much smaller compared to the size of particles and to the radius of curvature of contacting surfaces .",
    "similar equations are used for the rotational degrees of freedom , i.e.  to obtain the new angular velocity @xmath19 ( caused by the new torque @xmath20 ) , and the new orientation of particle @xmath11 .    for simplicity , in the following",
    "we assume that particles are dry and non - cohesive having only unilateral repulsive contact forces .",
    "furthermore , we assume perfectly inelastic particles , which remain in contact after collision and do not rebounce . the implicit scheme must fulfill the following two constraints :    1 .   the _ impenetrability _ condition : the overlapping of two adjacent particles has to be prevented by the contact force between them .",
    "the _ no - slip _ condition : the contact force has to keep the contact from sliding below the coulomb friction limit , i.e.  the tangential component of the contact force can not be larger than the friction coefficient times the normal force .",
    "the contact forces should be calculated in such a way that the constraint conditions are satisfied at time @xmath18 , for the new particle configuration @xcite .",
    "once the total force and torque acting on the particles , including the external forces and also the contact forces from the adjacent particles , are determined , one can let the system evolve from time @xmath21 to @xmath22 .",
    "let us now consider a pair of neighboring rigid particles in contact or with a small gap between them as shown in fig .",
    "[ fig-1 ] .",
    "we define @xmath23 as the unit vector along the shortest path of length @xmath24 between the surfaces of the two particles .",
    "the relative velocity of the closest points is called the _ relative velocity of the contact _ @xmath25 . in the case that the particles are in contact , the gap @xmath24 equals to zero , and @xmath23 denotes the contact normal .",
    "we first assume that there will be no interaction between the two particles at @xmath22 , i.e.  the new contact force @xmath26 equals to zero .",
    "this allows the calculation of a hypothetical new relative velocity of the two particles @xmath27 through eq .",
    "( [ veloc - update ] ) , only affected by the remaining forces on the two particles .",
    "the new gap reads as : @xmath28 if the new gap stays indeed positive ( @xmath29 ) then no contact is formed and the zero contact force is kept : @xmath30 .    on the other hand ,",
    "if the gap turns out to be negative ( @xmath31 ) , a finite contact force must be applied .",
    "first , we determine the new relative velocity from the condition that the particles remain in contact after the collision , @xmath32 here we assume sticking contacts with no relative velocity in the tangential direction ( @xmath33 ) , which implies that the coulomb condition holds . the new contact force satisfying the impenetrability can be obtained using eq .",
    "( [ veloc - update ] ) as @xmath34 where the mass matrix @xmath35 , which is built up from the masses and moments of inertia of both particles @xcite , reflects the inertia of the particle pair in the sense that @xmath36 corresponds to the relative acceleration of the contacting surfaces induced by the contact force @xmath37 .    at this point , we have to check for the second constraint : the coulomb friction .",
    "let us first define the normal and tangential contact forces : @xmath38 then the coulomb inequality reads as @xmath39 where @xmath40 is the friction coefficient ( being the same for static and dynamic friction , the standard coulomb model of dry friction @xcite ) . if the inequality ( [ coulomb - cone ] ) holds true , then we have already got the correct contact forces .",
    "otherwise , the contact is sliding , i.e.  @xmath41 has a tangential component and eq .",
    "( [ no - overlap - condition ] ) reads @xmath42 which determines the normal component of @xmath41 .",
    "the remaining five unknowns , three components of the contact force @xmath43 and two tangential components of the relative velocity , are determined by the following two equations :    \\(i ) impenetrability by combining eqs .",
    "( [ no - overlap - condition ] ) and ( [ new - force-1 ] ) @xmath44    \\(ii ) coulomb condition @xmath45 in two dimensions and for spheres in three dimensions , these equations have an explicit analytical solution , otherwise one has to resort to a numerical one@xcite .",
    "figure  [ fig-2 ] summarizes the force calculation process for a single incipient or existing contact . assuming that all other forces acting on the participating particles are known , the nassi - shneiderman diagram @xcite in fig .",
    "[ fig-2 ] enables us to determine the contact force .",
    "the above process assumes that apart from the contact forces all other interactions are known for the selected two particles .",
    "however , in dense granular media , many particles interact simultaneously and form a contact network , which may even span the whole system . in such cases , the contact forces can not be determined locally because each unknown contact force depends on the adjacent unknown contact forces acting on the particles . in order to find the unilateral frictional forces throughout the entire contact network , an _ iterative _ method is mostly used in cd as follows : at each iteration step , we choose the contacts randomly one by one and calculate the new contact force considering the surrounding contact forces to be already the correct ones .",
    "it is natural to update the contact forces sequentially in the sense that each freshly calculated force is immediately used for further force calculations .",
    "one iteration step does not provide a globally consistent solution , but slightly approaches it .",
    "therefore , the iteration has to be repeated many times until the forces relax towards an admissible state . to assess whether or not the convergence is achieved , we measure the relative change of each contact force @xmath46 at each iteration step @xmath47 , as well as the relative change in the average contact force @xmath48 at this iteration step .",
    "generally , we choose one of the following convergence criteria to stop the force calculation procedure :    1",
    ".   _ local convergence test _ : if , at least for @xmath49 of the contacts , the following condition holds @xmath50 and the rest of contacts fulfill @xmath51 2 .   _ global convergence test _ :",
    "if the relative change in the average contact force falls below the threshold value @xmath52 , i.e. @xmath53    we have chosen @xmath54 in all simulations .",
    "the precision of the solution increases smoothly with the number of iterations @xmath55 , with the exact solution being only reached for @xmath56 .",
    "of course we stop at finite @xmath55 .",
    "it is optional to use a fixed number of iterations at each time step , or to prescribe a given precision to the contact force convergence and let @xmath55 to vary at each time step .",
    "breaking the iteration loop after finite iteration steps is an inevitable source of numerical error in contact dynamics simulations , which mainly results in overlap of the particles and in spurious elastic behavior @xcite .",
    "occurring oscillations are a sign that the iterations were not run long enough to allow the force information appearing on one side of the system to reach the other side .",
    "this effect should be avoided and the number of iterations should be chosen correspondingly @xcite .    once the iteration is stopped , one has to update the particle positions based on the freshly calculated forces acting on the particles .",
    "figure  [ fig-3 ] concludes this section with a diagram depicting the basic steps of the contact dynamics algorithm .",
    "the question of successful convergence in general is difficult ( cf .",
    "@xcite ) but in practice convergence turns out to be given and hence the cd method has been experimentally validated in different instances , e.g.  as in calculating the normal contact force distribution in static 2d and 3d granular packings especially for weak forces that are experimentally difficult to access @xcite , investigating the dynamics of granular flows e.g.  monitoring the evolution of the contact orientations and shear band formation in a biaxial shear cell @xcite , studying the mechanical properties of cohesive powders @xcite , and predicting the refraction of shear zone in layered granular media @xcite .      the cd algorithm described in the previous section has three main parts : ( i ) the contact detection , ( ii ) the force calculation ( iteration ) , ( iii ) the time evolution .",
    "in this section we analyze the cpu consumption of all these parts .    given a system and the contact detection algorithm , the time consumption of parts ( i ) and ( iii ) can be easily estimated . on the other hand , the computational resource needed by part ( ii )",
    "is strongly influenced by the number of iterations .",
    "if one uses extremely high values of @xmath55 , part ( ii ) will dominate the cpu usage .",
    "this led renouf _",
    "_ @xcite to the conclusion that parallelizing the force calculation is enough .",
    "our view is that the situation is more delicate and it is demonstrated by a simulation in which diluted granular material is compressed until a dense packing is reached @xcite .",
    "the system consists of @xmath57 polydisperse disks in two dimensions with friction coefficient @xmath58 . the stopping criteria for the iteration was the fulfillment of any of the two conditions :    1 .",
    "the global convergence criterion is fulfilled ( see sec .  [",
    "cd - algorithm ] for details ) .",
    "@xmath59    figure  [ fig-4 ] shows the evolution of the relative cpu time consumption of the different parts of the algorithm .",
    "the time stepping contribution always remains less than @xmath60 , and the rest is divided between the other two subroutines .",
    "initially , the contact detection task consumes the majority of the computational time . after a while ,",
    "clusters of contacting particles form , and the cost of force calculation increases and the iterative solver gradually becomes the most time consuming part of the code .",
    "note that the contribution of the solver saturates to @xmath10 of the total elapsed time .",
    "if only the force calculation part is executed in parallel , even with @xmath61 , the remaining @xmath62 non - parallel portions set an upper limit to the overall efficiency @xmath63 and the speedup @xmath64 of the code ( @xmath65 and @xmath66 ) .",
    "therefore , we aim to provide a fully parallel version of cd which operates efficiently in all density regimes .",
    "( purple line , full circles ) as a function of time .",
    "the insets show typical configurations of particles at different packing fractions .",
    "the thickness of the inter - center connecting red lines is proportional to the magnitude of the contact force.,scaledwidth=70.0% ]      as we pointed out in sec .",
    "[ cd - algorithm ] , the problem of finding the unilateral frictional contact forces that satisfy the constraint conditions can not be solved locally in a dense granular system . in order to evaluate the new value of a single contact",
    ", one has to know the new values of the adjacent contact forces , which are unknown as well , i.e.  all contact forces are coupled in a cluster of contacting particles . note that this is a consequence of the infinite stiffness of the particles ; a single collision influences the entire network of contact forces between perfectly rigid particles .",
    "this problem is solved by iterating through all contacts many times until a given precision is reached .    similarly to solving the laplace equation , the information about a disturbance ( e.g.  collision of a new particle ) appearing on one side of a cluster must diffuse through the whole cluster to satisfy the constraints . actually , the iteration scheme is very similar to two traditional schemes for solving a set of linear equations @xcite , albeit with nonlinearities introduced by the change of contact states ( repulsive vs.  force - less , sticking vs.sliding ) : the jacobi scheme and the gauss - seidel scheme , corresponding to parallel and sequential contact updating , respectively .",
    "here we denote ( i ) _ sequential _ , where the contacts are solved one by one using always the newest information available , which is a mixture of new and old values , ( ii ) _ parallel _ , where all contacts are updated using the old values , and substituted with the new ones at the end of the iteration step .",
    "needless to say that the second case is favored for parallel applications but instabilities may appear ( like when combining the jacobi scheme with successive over - relaxation @xcite ) . to study its impact",
    ", we investigated a mixed method , where a fraction @xmath67 of the contacts are updated in parallel and the rest sequentially .",
    "first , a static homogeneous packing is generated by applying an external confining pressure @xcite .",
    "next , the inter - particle forces are set to zero , while the positions of the particles and the boundary conditions are kept fixed .",
    "now the code recalculates the contact forces within one time step with an unconstrained number of iterations until the convergence is reached .",
    "we check how many iteration steps are needed to find a consistent equilibrium solution with a given accuracy threshold .",
    "the results are shown in fig .",
    "[ fig-5](a ) .     scaled by @xmath68 ( where @xmath69 and @xmath70 are the mean particle radius and mass , respectively , and @xmath71 is the external pressure ) in terms of the number of iterations @xmath55 for several values of the `` parallelness '' @xmath67 ( cf .",
    "these results belong to the dense packing in the right panel of fig .",
    "[ fig-4 ] .",
    "( b ) the critical parallelness ratio @xmath72 , the average coordination number @xmath73 , and the packing fraction @xmath74 for several configurations obtained during the time evolution of the system in the simulation presented in fig .  [ fig-4].,title=\"fig:\",scaledwidth=47.0% ]   scaled by @xmath68 ( where @xmath69 and @xmath70 are the mean particle radius and mass , respectively , and @xmath71 is the external pressure ) in terms of the number of iterations @xmath55 for several values of the `` parallelness '' @xmath67 ( cf .",
    "these results belong to the dense packing in the right panel of fig .",
    "[ fig-4 ] .",
    "( b ) the critical parallelness ratio @xmath72 , the average coordination number @xmath73 , and the packing fraction @xmath74 for several configurations obtained during the time evolution of the system in the simulation presented in fig .",
    "[ fig-4].,title=\"fig:\",scaledwidth=46.5% ]    it turns out that , on average , the number of iterations @xmath55 to reach a given accuracy level increases with increasing @xmath67 . for high values of @xmath67",
    ", fluctuations appear and beyond @xmath75 the iterative solver is practically unable to find a consistent solution .",
    "we discuss the consequence of this behavior for the parallel version of cd in secs .",
    "[ parallelcd ] and [ numericalresults ] .",
    "in order to investigate the dependence of @xmath72 on the properties of the contact network , we take snapshots of the structure during the time evolution of the system in the simulation presented in fig .  [ fig-4 ] . the same procedure as mentioned above is then applied to each of these samples to obtain @xmath72 .",
    "the results are shown in fig .",
    "[ fig-5](b ) . in dilute systems ,",
    "the contacts form small isolated islands and the resulting set of equations is decomposed into smaller independent sets , so that even a completely parallel update scheme ( @xmath76 ) can be tolerated . however , the contact network in dense systems forms a set of fully coupled nonlinear equations which converges only if the parallelness factor @xmath67 is less than @xmath77 . by varying the system size and the friction coefficient ,",
    "we conclude that @xmath72 is mainly influenced by the degree of coupling between the equations which is reflected in the connectivity of the sample @xmath73 [ see fig .",
    "[ fig-5](b ) ] .",
    "thus , the results of our numerical simulations reveal that the sequential update scheme is quite robust and the force convergence is reached smoothly , while the fully parallel update scheme is highly unstable in dense systems .",
    "however , there is a limit of parallel update for which the iteration remains stable .",
    "this is important because the domain decomposition method allows for a sequential update only in the bulk of each domain , while the boundary contacts are updated in a parallel way ( cf .",
    "section [ parallelalgorithm ] ) .",
    "this analysis suggests that the ratio of bulk contacts to boundary ones after the decomposition should never fall below 1 .",
    "fortunately , this is assured in a domain decomposition context anyway .",
    "a parallel version of the cd algorithm based on the decomposition of the simulation domain is introduced in this section .",
    "the main challenge is to properly evaluate the inter - particle forces when the contact network is broken into several subnetworks assigned to different processors .",
    "the parallelization presented in this section is valid only for spherical particles ( disks in 2d ) , but it is straightforward to extend it for other shape types .    at the beginning of the simulation , a domain decomposition function",
    "is called to divide the system between @xmath3 processors .",
    "regarding the fact that neither the performance of the computing environment nor the density distribution and the internal dynamics of the system are known initially , a uniform distribution for all relevant factors is assumed and initially the simulation domain is geometrically divided into @xmath3 parts with the same volume .",
    "the details of the hierarchical decomposition method are explained in sec .",
    "[ domaindecompos ] .    after establishing the domains ,",
    "the particles are distributed among the processors .",
    "each processor maintains its set of _ native _ particles , the center of mass of which lie within its domain .",
    "the next task is to identify in each domain the _ boundary _ particles , i.e.  those particles which may be in contact with particles in other domains , as this information should be passed to the neighbors .",
    "two particles may come into contact if the gap is smaller than @xmath78 , where @xmath79 is the maximum velocity in the whole system .",
    "so the maximal distance between the centers of mass of two particles , which may come into contact is @xmath80 where @xmath81 is the radius of the largest particles .",
    "this distance also defines the width of the _ boundary region _ in which particles may have contact with particles outside a processor s domain , see also fig .",
    "[ fig-6 ] .    while @xmath81 is constant during the simulation",
    ", @xmath79 varies in time and space . for reasons described in sec .",
    "[ domaindecompos ] , we use a global upper limit @xmath82 for the boundary size , which is unchanged during the whole simulation .",
    "it was explained in sec .",
    "[ cd - algorithm ] , that the displacement of the particles must be small compared to particle size for contact dynamics to be valid .",
    "therefore it is legitimate to define the upper limit for the particle displacement to be @xmath83 and thus use the boundary size @xmath84 hence , a small amount of in principle irrelevant neighboring information is transferred .",
    "this is dominated by other effects , though , as will be shown in sec .",
    "[ domaindecompos ] .    after the identification of the _ boundary _ particles",
    ", their relevant data is sent to the corresponding neighbor processors , which keep the information of these ( to them ) _ foreign _ particles . since sender and receiver",
    "will always agree about the forces acting on these particles , the receiver can evolve their state on its own .",
    "the next step is to identify actual and possible contacts between both _ native _ and _ foreign _ particles .",
    "a position is assigned to each contact , which is the middle of the gap ( see fig .",
    "[ fig-1 ] ) . obviously , for particles in touch , this is the contact point .",
    "each processor builds a list of _ native _ contacts for the iteration loop exclusively from contacts lying in its domain .",
    "the remaining ones are called _ foreign _ contacts and are in turn _ boundary _ contacts of neighboring processors . during an iteration sweep ,",
    "they will not be updated but their forces enter the force calculation algorithm . only at the end of the sweep , each processor sends the new forces of its _ boundary _ contacts to its corresponding neighbor .",
    "this means that during an iteration sweep , foreign contacts always have the values from the last iteration , while native contacts are gradually updated realizing a mixture of parallel and sequential update .",
    "the convergence of the force calculation has to be checked after each iteration sweep .",
    "this should be a global test , since the convergence in different subdomains may be achieved at different iteration steps .",
    "this task can only be completed by a single processor .",
    "therefore , the necessary data is collected and submitted to the root processor , which makes a decision whether the iteration should continue or the convergence is good enough and time stepping can take place . if further iterations are necessary , then only boundary _ contact _ information are exchanged among neighbors , as particles do not move within the iteration loop . with new foreign contact values , each processor can perform the next iteration sweep . if the iteration loop has finished , the particles are displaced according to the implicit euler scheme of eqs .",
    "( [ veloc - update ] ) and ( [ pos - update ] ) .",
    "every processor is responsible for its own native particles ( but evolves its copies of foreign particles as well ) .    before starting the next time step",
    ", we have to take care of the load balancing : every processor broadcasts its own elapsed cpu time , which provides the required information to run the load balancing function .",
    "the detailed description of this function is presented in sec .",
    "[ loadbalancing ] .",
    "if the load balancing function redivides the simulation box , then each processor has to compare its own particle positions to the new domain coordinates of all other processors to determine to which processor each particle has to be sent .",
    "this re - association of particles takes place also without domain redivision as particles change domains simply due to their dynamics .",
    ".,scaledwidth=62.0% ]    figure [ fig-7 ] summarizes the parallel algorithm .",
    "the main differences ( highlighted in the diagram ) are that ( i ) at certain points data must be sent or received to neighboring domains ; ( ii ) the iteration scheme updates only native contacts gradually , while foreign contacts are refreshed only after a complete iteration sweep ; ( iii ) load balancing and domain redivision checks take place at the end of the time step .",
    "a mixture of the sequential and the parallel update scheme occurs for a fraction of the contacts .",
    "this fraction depends on the surface - to - volume ratio of the subdomain . as discussed in sec .",
    "[ seqvsparallel ] , a mixed update can become unstable if the contribution of the parallel update exceeds a threshold of order unity .",
    "this limitation coincides with the standard limitation of parallel computation that the boundary region should be negligible compared to the bulk . in this sense , for reasonably large systems , we do not expect any instability impact due to the parallel update .",
    "nevertheless , this issue is investigated in sec .",
    "[ sec - ni - np ] .    in the next section",
    "we introduce a hierarchical domain decomposition method , which finds the best way to arrange the orientation and location of the interfaces so that the surface - to - volume ratio is minimal for a given number of processors .      before describing the domain decomposition",
    ", we have to investigate the contact detection .",
    "this process , for which the brute force algorithm scales as @xmath85 with the number of particles , can be realized for different levels of polydispersity @xcite within @xmath86 cpu cycles .",
    "we chose to implement the most widespread one , the cell method @xcite , which works well for moderate polydispersity and which is the most suitable for parallel implementation .",
    "the cell method puts a rectangular grid of mesh size @xmath87 on the simulation space .",
    "each particle is assigned to its cell according to its position , and the mesh size is chosen such that the particles can only have a contact with particles from neighboring cells and their own .",
    "that means , the cell diameter has essentially the same meaning as the width of the boundary region @xmath82 and thus they should coincide . on the other hand , the values @xmath88 and @xmath89 have to be chosen such that in each direction every domain has an integer number of cells .",
    "but this would mean , in general , a different mesh size for all subdomains , which may be far from the optimal value .",
    "therefore , it is advantageous ( for large systems and moderate polydispersities ) to choose a global @xmath88 and @xmath89 instead , and restrict the domain boundaries to this grid .",
    "the domain decomposition method proposed in this paper is based on the _ orthogonal recursive bisection _",
    "algorithm @xcite with axis - aligned domain boundaries .",
    "the basis of the algorithm is the hierarchical subdivision of the system .",
    "each division represents recursive halving of domains into two subsequent domains .",
    "the advantage of such a division is an easy implementation of load balancing , which can be realized at any level , simply by shifting one boundary .",
    "first , we have to group the @xmath3 processors ( where @xmath3 is not required to be a power of two ) hierarchically into pairs .",
    "the division algorithm we use is the following : we start at level @xmath90 with one _ _ node _ _ , which initially is a _ leaf _ ( a node with no children ) as well . a new level @xmath91 is created by branching each node of level @xmath92 in succession into two nodes of level @xmath91 , creating @xmath93 leaves .",
    "this continues until @xmath94 .",
    "then , only @xmath95 leaves from level @xmath91 are branched from left to right , cf .",
    "[ fig-8](a ) .",
    ".,scaledwidth=65.0% ]    next , we have to assign a domain to each leaf / processor . in the beginning , having no information about the system , all domains should have the same size .",
    "actually , their sizes equal only approximatively due to grid restriction described above , cf.fig .",
    "[ fig-9](a ) . to achieve this",
    ", the recursive division of the sample is done according to the tree just described .",
    "each non - leaf node represents a bisection with areas corresponding to the number of leaves of its branches ( subtrees ) .",
    "the direction of the cut is always chosen as to minimize the boundary length .",
    "the hierarchical decomposition method provides the possibility of quick searches through the binary tree structure .",
    "for example , the task to find the corresponding subdomain of each particle after load balancing requires a search of order @xmath96 for @xmath3 processors .",
    "with respect to bookkeeping overhead , a further advantage of this decomposition scheme is that local load imbalance does not necessarily affects higher level subdomain boundaries .",
    "for example , if particle exchange takes place across a low level domain boundary only this boundary will move leaving the others untouched .      for homogeneous quasi - static systems ,",
    "the initially equal - sized subdomains provide already a reasonably uniform load distribution , but for any other case the domain boundaries should dynamically move during the simulation . in the load balancing function ,",
    "we take advantage of the possibility provided by mpi to measure the wall clock time accurately . for every time step ,",
    "the processors measure the computational time spent on calculations and broadcast it , so that all processors can decide simultaneously whether or not the load balancing procedure has to be executed . to quantify the global load imbalance , the relative standard deviation of the elapsed cpu time in this time step",
    "is calculated via the dimensionless quantity @xmath97 where the average is taken over the processors .",
    "+     a threshold value @xmath98 is defined to control the function of the load balancing algorithm : if @xmath99 , then the simulation is continued with the same domain configuration , otherwise load balancing must take place .",
    "this load balancing test is performed by all processors simultaneously , since all of them have the necessary data .",
    "the result being the same on all processors , no more communication is needed .",
    "if the above test indicates load imbalance , we have to move the domain boundaries .",
    "this may happen at any non - leaf node of the domain hierarchy tree .",
    "the relevant parameter for the domain division is the _ calculating capacity _ of the branches , which is defined as @xmath100 where @xmath101 and @xmath102 are the cpu time and volume of domain @xmath11 , respectively , and the summation includes all _ leaves _ under branch @xmath47 .",
    "let us denote the two branches of a node as @xmath47 and @xmath103 , then the domain must be bisectioned according to @xmath104 the above procedure is repeated for all parent nodes .",
    "if the size of a domain was changed , then all subdomain walls must be recalculated as even with perfect local load balance the orientation of the domain boundary may be subject to change .",
    "note that boundaries must be aligned to the grid boundaries as explained in sec .",
    "[ domaindecompos ] .    as an example , let us consider the situation of fig .",
    "[ fig-8 ] at the node of level @xmath90 with branch @xmath105 to the left and branch @xmath106 to the right .",
    "if all @xmath101 would be the same , then @xmath107 and @xmath108 , just as the initial configuration .",
    "let us now assume that the processors 12 and 13 [ top right in fig .",
    "[ fig-8](b ) ] are only half as fast as the others , thus , the elapsed time is twice as much . in this case",
    "@xmath109 and @xmath110 , so the thick , solid division line moves to the right .",
    "furthermore , the thin , solid division line on the right moves up from the position @xmath111 to @xmath112 .",
    "figure [ fig-9 ] shows how load balancing improves the cpu time distribution over seven processors .",
    "the initial geometrical decomposition leads to an uneven workload distribution because of the inhomogeneous density of the original particle configuration [ fig .",
    "[ fig-9](a ) ] .",
    "however , the load balancing function manages to approximately equalize the cpu times in the next time step by moving the borders [ fig .",
    "[ fig-9](b ) ] .",
    "in the following , we present the results of test simulations for different systems performed by the parallel code .",
    "the main question to answer is how efficient is the parallel code , i.e.  how much could we speed up the calculations by means of parallelization .",
    "the sensitivity of the performance to the load balancing threshold is also studied .",
    "the partially parallel updates at the domain boundaries is the main consequence of parallelization , which may make a difference in the results compared to the sequential implementation .",
    "therefore , we investigate the impact of parallelization on the number of iterations and on the physical properties of the solutions .",
    "in this section , we test the efficiency of the parallel algorithm solely with respect to the force calculation . in general",
    ", it is the most time consuming part of the contact dynamics simulation ( see sec .",
    "[ cputimeanalysis ] ) , so the efficient parallelization of the iteration scheme is necessary for the overall performance .",
    "direction ( exerting a pressure of @xmath113 natural units ) , and periodic boundary conditions are applied in @xmath114 direction .",
    "the packings contain @xmath115 , @xmath116 , and @xmath117 particles with @xmath118 , @xmath119 , @xmath120 and @xmath121 , @xmath122 , @xmath123 , respectively .",
    "the polydispersity in the small and medium systems amounts to @xmath124 , while the large system is monodisperse.,scaledwidth=35.0% ]    to focus just on the force calculation , we chose test systems where large scale inhomogeneities are absent and adaptive load balancing is unnecessary . thus , dense static packings of @xmath115 , @xmath116 , and @xmath117 particles with periodic boundary conditions in one direction and confining walls in the other were set up [ see fig .  [ fig-10 ] ] .",
    "the calculations started with no information about the contact forces and the simulation was stopped when the local convergence criterion is fulfilled ( see sec .",
    "[ cd - algorithm ] ) . of course",
    ", this requires a different number of iterations depending on the system size and number of processors . in order",
    "to get rid of perturbing factors like input / output performance , we measured solely the cpu time spent in the iteration loop .",
    "figure  [ fig-11 ] summarizes the test results , which show that if the system is large compared to the boundary regions , the efficiency is about @xmath0 , which is equivalent to a _ linear _ speedup .",
    "the smallest system is inapt for parallelization , as already for only 4 processors the boundary regions take up @xmath124 of the particles , which induces a large communication overhead .",
    "the same fraction of boundary particles is reached around @xmath125 for the medium sized system with @xmath116 particles .",
    "therefore , one would expect the same performance for @xmath126 and @xmath127 for the small and medium sizes , respectively .",
    "particles ( full squares ) , a medium system with @xmath116 particles ( full circles ) , and a large system with @xmath117 particles ( full diamonds ) .",
    "the open circles present the overall efficiency for the medium sized system.,title=\"fig:\",scaledwidth=43.0% ] particles ( full squares ) , a medium system with @xmath116 particles ( full circles ) , and a large system with @xmath117 particles ( full diamonds ) .",
    "the open circles present the overall efficiency for the medium sized system.,title=\"fig:\",scaledwidth=45.0% ]    in addition to the above mentioned effect , the efficiency of the medium system breaks down at @xmath128 due to special architecture of the distributed memory cluster used for simulations ( cray - xt6 m with 24 cores per board ) , since the speed of the inter - board communications is much slower than the intra - board one .",
    "the observed efficiency values over @xmath0 are possible through caching , which was already observed in molecular dynamics @xcite .",
    "the largest system has a large computation task compared to the boundary communication , which is manifested in almost @xmath0 efficiency .",
    "on the other hand , it is also too large for significant caching effects producing over @xmath0 efficiency .",
    "however , a gradual increase in the efficiency is observed as the domain size ( per processor ) decreases with increasing the number of processors .    for the medium sized system",
    ", we also measured the overall performance including time stepping and load balancing . for this purpose ,",
    "the top wall was removed and the bottom wall was pushed upwards in order to generate internal dynamical processes , which unbalances the load distribution . as shown in fig .",
    "[ fig-11 ] , there is no significant difference in efficiency due to the fact that time stepping and contact detection are perfectly parallelizable processes .      in sec .",
    "[ loadbalancing ] , we defined the load balancing threshold @xmath98 for the relative standard deviation of the elapsed cpu time on different processors , above which load balancing takes place .",
    "while the load balancing test is performed at each time step , the frequency of load redistribution is determined by the choice of @xmath98 . on the one hand , if the subdomain redivision happens frequently , a waste of cpu time is avoided because of even load distribution . on the other hand ,",
    "the change of domain boundaries requires extra communication and administration . doing",
    "this too often leads to unwanted overhead .    for load balancing ,",
    "contact dynamics has the advantage , compared to other dem methods , that the configuration changes rather infrequently ( with respect to cpu time ) , because the force calculation with typically @xmath129 iteration sweeps ( for reasonably accurate precision of contact forces ) dominates the computation .",
    "thus , even taking the minimal value of @xmath130 does not lead to measurable overhead . moreover , in our implementation the domain boundaries must be on the cell grid , which avoids unnecessary small displacements of the domain walls . hence , the optimal value of @xmath98 is the minimal one as shown in fig .",
    "[ fig-12 ] .    .",
    "the simulation runs over @xmath131 time steps with @xmath106 or @xmath132 processors .",
    "the inset shows the number of load balancing events versus @xmath98.,scaledwidth=45.0% ]       touching monodisperse particles , which are compressed with a force @xmath133 .",
    "( b ) the number of iterations needed to reach a given accuracy scaled by the value for a single processor ( @xmath134 ) vs.  the number of processors .",
    "the data points are simulation results , and the lines are linear fits ( see text ) .",
    "( c ) an ordered configuration of monodisperse particles , where the external forces @xmath133 push the outer particles inwards .",
    "( d ) @xmath134 vs.  @xmath3 , where open circles denote the simulation results and the crosses are the theoretical estimations.,scaledwidth=50.0% ]    in the iteration scheme of contact dynamics , the forces relax towards the solution in a diffusive way @xcite .",
    "the diffusion constant was found to be @xmath135 where @xmath16 is the time step , @xmath136 is the diameter of a particle , and @xmath137 is a constant depending on the update method : @xmath138 for parallel and @xmath139 for random sequential update .",
    "thus the diffusion coefficient of the parallel update , @xmath140 , is smaller than that of the sequential update @xmath141 , for a given set of parameters @xmath55 , @xmath16 , and @xmath136 .",
    "boundaries between sub - domains handled by different processors behave like parallel update , since the new information only arrives at the end of an iteration sweep .",
    "it is therefore expected that the same system requires more iterations in the multiprocessor version , as the number of iterations is inversely proportional to the diffusion constant .",
    "we test this conjecture on two examples : let us first consider a linear chain of @xmath142 touching identical particles placed between two perpendicular plates [ cf .  fig .",
    "[ fig-13](a ) ] .",
    "we suddenly switch on a compressing force on one side wall , while keeping the other wall fixed .",
    "the resulting contact forces are calculated by the iterative solver . in order to estimate the number of required iterations",
    ", we define the effective diffusion coefficient as of @xcite : @xmath143 where @xmath67 is the portion of the chain with a parallel update . in general , for each boundary one particle diameter is handled parallel and the rest sequential , which gives @xmath144 .",
    "this is compared to the numerical results in fig .",
    "[ fig-13](b ) . while in principle there is no fit parameter in eq .",
    "( [ eq : effectivediffusioncoefficient ] ) , by adjusting the ratio to @xmath145 we get an almost perfect agreement for all different system sizes , as shown in fig .",
    "[ fig-13](b ) .",
    "this fitted value is @xmath146 smaller than the theoretical estimation of @xcite .",
    "we have tested this scenario in a similar two - dimensional setup , where the forces were directly applied to the boundary particles as shown in fig .",
    "[ fig-13](c ) . the number of iterations required for the prescribed force accuracy increases with the number of processors in a sub - linear manner [ fig .",
    "[ fig-13](d ) ] .",
    "this is expected as the fraction of boundary particles in a two - dimensional system scales as @xmath147 .",
    "the theoretical estimation used in the above one dimensional example with @xmath145 is in good agreement with the results of the two dimensional system as well .",
    "the graph of simulation results is characterized by plateaus ( e.g.  between @xmath148 and @xmath149 ) , where the convergence rate is dominated by the higher number of domain walls in one direction .",
    "let us conclude here that the slower parallel diffusion part takes place in a portion @xmath150 of the two dimensional system , which is negligible in reasonably large systems .",
    "for example for the medium sized system of @xmath116 particles , we get @xmath151 for @xmath152 , which would lead to about @xmath153 increase in the iteration number .",
    "the measured value was about @xmath154 justifying the insignificance of the iteration number increase in large systems .",
    "indeed , we do not see a decrease in efficiency due to an increase of the iteration number for large parallel systems in fig .",
    "[ fig-11 ] .      as a last check",
    ", we tested the physical properties of the system calculated by different number of processors .",
    "it is known that in the rigid limit , the force network of a given geometrical packing is not unique @xcite . running the contact dynamics with different random seeds ( for the random sequential update ) leads to different sets of contact forces , which all ensure the dynamical equilibrium .",
    "the domain decomposition also changes the update order and the solutions will be microscopically different .",
    "thus , a direct comparison is impossible and we have to resort to comparing distributions .",
    "frictional particles calculated for different number of processors.,title=\"fig : \" ]   frictional particles calculated for different number of processors.,title=\"fig : \" ]    we first investigate the distribution of the contact force orientations @xmath155 in the relaxed system of @xmath116 particles described in sec .",
    "[ perrrformanceforcecalc ] .",
    "the contact forces are calculated from scratch for the given geometry and boundary conditions using different number of processors .",
    "since the system is very tall ( @xmath156 ) , it is divided only vertically for up to @xmath152 , while for @xmath125 the 16 domains are cut horizontally as well .",
    "the orientation of each contact force is defined as @xmath157 .",
    "the distributions of the contact force orientations , @xmath158 , are compared for several values of @xmath3 in fig .",
    "[ fig-14](a ) .",
    "the range of possible values for @xmath159 ( @xmath160 $ ] ) is divided into @xmath161 bins , and each data point in the figure corresponds to total number of contacts in the same bin . for comparison ,",
    "we have presented the results of the simulations with @xmath162 for two different random seeds as well .",
    "the match among the different runs are so good that the curves coincide .",
    "hence , we also plot the relative difference @xmath163 to the non - parallel run for comparison , which shows negligible random noise .",
    "evidently , parallelization has no systematic impact on the angular distribution of the contact forces .",
    "similar results were obtained when the system is sheared by the horizontal confining walls moving with a constant velocity in opposite directions as shown in fig .",
    "[ fig-14](b ) .",
    "we also calculate the @xmath164 component of the stress tensor as a function of the distance @xmath165 from the bottom wall in the same system .",
    "@xmath166 at a given height @xmath165 is averaged over a horizontal stripe of width @xmath167 , where @xmath168 is the largest particle radius in the system .",
    "the system height is thus divided into nearly @xmath122 stripes .",
    "figure [ fig-15 ] displays the results obtained by the non - parallel code as well as the parallel code with @xmath169 . in the parallel case ,",
    "the system is divided horizontally into three parts .",
    "the results of the parallel run match perfectly with the one of the non - parallel run .",
    "especially , no kind of discontinuity or anomaly is observed at @xmath170 and @xmath171 , where the interfaces between the processors are located",
    ".     scaled by the external pressure @xmath71 in terms of the height @xmath165 scaled by the diameter of the largest particle in the system ( @xmath172 ) .",
    "the results obtained by the non - parallel code are compared with those obtained by the parallel code for @xmath173.,scaledwidth=85.0% ]",
    "we have presented an efficient parallel version of a contact dynamics method in this work , which allows for large - scale granular simulations with almost @xmath0 efficiency .",
    "we aimed at the full parallelization of the code with hierarchical domain decomposition and dynamic load balancing , in which the interface area between subdomains is also minimized .",
    "the parallel code is hence applicable to a broad range of densities and different simulation conditions .",
    "the force calculation in cd is done by an iterative scheme , which shows an instability if more than about half of the contacts are calculated in parallel .",
    "the iteration scheme was kept domain - wise sequential while data across the domain boundaries is exchanged after each iteration sweep , ensuring that the iteration is stable for all system sizes .",
    "it is known that the cd iterative scheme approaches the solution in a diffusive manner .",
    "the diffusion constant is smaller for parallel update , which happens at domain boundaries .",
    "however , this overhead is proportional to the square root of the number of processors divided by the number of particles ( in 2d ) , which vanishes for large systems . regarding this as the only impact of the parallelization on the convergence",
    ", it must be expected that the efficiency is not affected by modifications at the local level i.e.  non - spherical particles , three - dimensional particles , more sophisticated contact laws , etc . of course , those can deteriorate the convergence per se but the parallel version will simply `` inherit '' that .",
    "the other point of discussion raised here concerns the choice of the mesh size and adjusting the subdomain borders to it .",
    "communication overhead was reduced because between iteration steps not all boundary information is sent but only the relevant part of it .",
    "the subdomain wall position is only important if the particle size is not small compared to the system size . for large scale parallel applications this can only be a problem for highly polydisperse systems , for which the cell method for contact detection breaks down anyway .",
    "the load balancing is done only at the end of each time step .",
    "our investigations show that this happens rarely enough that load balancing overhead and cpu time fluctuations are negligible but often enough to achieve fast load balance .",
    "we used a global criterion for stopping the iteration scheme .",
    "this ensures that the physical properties of the tested samples do not show any difference compared to the non - parallel version of the code .    blocking",
    "point - to - point communications were used to transfer data among processors .",
    "since our algorithm needs synchronization after each iteration , non - blocking data transfer would not be advantageous .",
    "the whole amount of data is transmitted in one single packet , which reduces communication overhead over the pure data .",
    "this method introduces parallel contact update at domain boundaries , which induces an iteration number overhead due to the lower diffusivity of the information in parallel update .",
    "this overhead vanishes , e.g. with the square root of the processor number over particle number in two dimensions , which is in general negligible .",
    "an alternative method would be to use non - blocking communications for the iteration scheme , namely to immediately send a freshly updated contact force in the vicinity of the borders to the corresponding processors , while on the other side this would trigger an interrupt when the other processor immediately updates the received contact data .",
    "this prevents the mixture of sequential and parallel update schemes .",
    "however , we do not expect that the performance of the method is greatly enhanced by the use of non - blocking communication because the information of each contact force is sent individually and the overhead associated with the increase of the inter - processor communications significantly affects the performance .",
    "the last point to discuss concerns the load balancing method . the most exact method would be to consider the number of particles and/or contacts in each subdomain to calculate their new boundaries . practically , this would cause difficulties , since each processor is just aware of particles and contacts within its own borders . the amount of calculations and communications between neighboring processors to place the interface according to the current contact and particle positions would make the load balancing a computationally expensive process .",
    "this lead us to balance the load further by dividing the simulation domain according to the current subdomain volumes ( not always proportional to the number of particles and/or contacts ) , which is in fact a control loop with the inherent problems of under- and over - damping .",
    "we would like to thank m.  magiera , m.  gruner and a.  hucht for technical support and useful discussions , and m.  vennemann for comments on the manuscript .",
    "computation time provided by john - von - neumann institute of computing ( nic ) in jlich is gratefully acknowledged .",
    "this research was supported by dfg grant no .",
    "wo577/8 within the priority program `` particles in contact '' .    00 p. a. cundall , o. d. l. strack , a discrete numerical model for granular assemblies , gotechnique 29 ( 1979 ) 47 - 65 .",
    "s. luding , molecular dynamics simulations of granular materials , in : the physics of granular media , wiley - vch , weinheim , 2004 , pp .",
    "299 - 324 .",
    "d. c. rapaport , the event scheduling problem in molecular dynamic simulation , j. comp . phys .",
    "34 ( 1980 ) 184 - 201 . o. r. walton , r. l. braun , viscosity , granular - temperature , and stress calculations for shearing assemblies of inelastic , frictional disks , journal of rheology 30 ( 1986 ) 949 - 980 .",
    "m. jean , j. j. moreau , unilaterality and dry friction in the dynamics of rigid body collections , in : proc . of contact mechanics intern .",
    "symposium , presses polytechniques et universitaires romandes , lausanne , switzerland , 1992 , pp .",
    "j. j. moreau , some numerical - methods in multibody dynamics - application to granular - materials , eur .",
    "j. mech . a - solids 13 ( 1994 ) 93 - 114 .",
    "m. jean , the non - smooth contact dynamics method , comput . methods appl .",
    "engrg . 177",
    "( 1999 ) 235 - 257 .",
    "l. brendel , t. unger , d. e. wolf , contact dynamics for beginners , in : the physics of granular media , wiley - vch , weinheim , 2004 , pp .",
    "325 - 343 .",
    "s. plimpton , fast parallel algorithms for short - range molecular dynamics , j. comp .",
    "( 1995 ) 1 - 19 .",
    "l. nyland , j. prins , r. h. yun , j. hermans , h .- c .",
    "kum , l. wang , achieving scalable parallel molecular dynamics using dynamic spatial domain decomposition techniques , j. parallel distrib .",
    "47 ( 1997 ) 125 - 138 .",
    "y. deng , r. f. peierls , c. rivera , an adaptive load balancing method for parallel molecular dynamics simulations , j. comp .",
    "161 ( 2000 ) 250 - 263 . s. j. plimpton , fast parallel algorithms for short - range molecular dynamics , j comp phys , 117 , ( 1995 ) 1 - 19 .",
    "k. haff , grain flow as a fluid - mechanical phenomenon , j. fluid mech . 134",
    "( 1983 ) 401 - 430 .",
    "s. mcnamara , w. r. young , inelastic collapse in two dimensions , phys .",
    "e 50 ( 1994 ) r28-r31 .",
    "s. miller , s. luding , event - driven molecular dynamics in parallel , j. comp .",
    "193 , ( 2003 ) 306 - 316 .",
    "p. ltstedt , mechanical systems of rigid bodies subject to unilateral constraints , siam journal on applied mathematics 42 ( 1982 ) 281 - 296 .",
    "d. e. stewart , j. c. trinkle , an implicit time - stepping scheme for rigid body dynamics with coulomb friction , international journal of numerical methods in engineering 39 ( 1996 ) 2673 - 2691 .",
    "mueth , h. m. jaeger , s. r. nagel , force distribution in a granular medium , phys .",
    "e 57 ( 1998 ) 3164 ; b. miller , corey ohern , r. p. behringer , stress fluctuations for continuously sheared granular materials , phys . rev",
    "77 ( 1996 ) 3110 ; f. radjai , multicontact dynamics of granular systems , comput .",
    "commun . 121",
    "( 1999 ) 294 ; f. radjai , m. jean , j. j. moraeu , s. roux , force distributions in dense two - dimensional granular systems , phys .",
    "77 ( 1996 ) 274 .",
    "d. daudon , j. lanier , m. jean , a micro mechanical comparison between experimental results and numerical simulation of a biaxial test on 2d granular material , in : powders and grains , a. a. balkema , rotterdam , 1997 , pp.219 - 222 ; f. calvetti , g. combe , j. lanier , experimental micromechanical analysis of a 2d granular material : relation between structure evolution and loading path , mechanics of cohesive - frictional materials 2 ( 1997 ) 121 ; h. joer , j. lanier , j. desrues , e. flavigny , a new shear apparatus to study the behavior of granular materials , geotech . test .",
    "j. 15 ( 1992 ) 129 .",
    "d. kadau , l. brendel , g. bartels , d. e. wolf , m. morgeneyer , j. schwedes , macroscopic and microscopic investigation on the history dependence of the mechanical behaviour of powders , chem .",
    "trans . 3 ( 2003 ) 979 ; m. rock , m. morgeneyer , j. schwedes , d. kadau , l. brendel , d. e. wolf , steady state flow of cohesive and non - cohesive powders : investigations in experiment and simulation , granular matter 10 ( 2008 ) 285 . t. unger , refraction of shear zones in granular materials , phys . rev .",
    "98 ( 2007 ) 018301 ; h. a. knudsen , j. bergli , experimental demonstration of snell s law for shear zone refraction in granular materials , phys .",
    "103 ( 2009 ) 108301",
    ". t. m. preclik , k. iglberger , u. rde , iterative rigid multibody dynamics , in : multibody dynamics 2009 , eccomas thematic conference ( 2009 ) .",
    "m. anitescu , optimization - based simulation of nonsmooth rigid multibody dynamics , math . program .",
    ", ser . a 105 ( 2006 ) 113143 .",
    "d. m. kaufman , t. edmunds , d. k. pai , fast frictional dynamics for rigid bodies , acm trans graph 24 ( 2005 ) 946 - 956 .",
    "k. iglberger , u. rde , massively parallel rigid body dynamics simulations , computer science - research and development 23 ( 2009 ) 159 - 167 .",
    "k. iglberger , u. rde , massively parallel granular flow simulations with non - spherical particles , computer science - research and development 25 ( 2010 ) , 105 - 113 .",
    "a. tasora and d. negrut and m. anitescu , gpu - based parallel computing for the simulation of complex multibody systems with unilateral and bilateral constraints : an overview , in : multibody dynamics : computational methods and applications , computational methods in applied sciences 23 ( 2011 ) , 283 - 307 .",
    "p. breitkopf , m. jean , modlisation parallle des matriaux granulaires , in : 4me colloque national en calcul des structures , giens , 1999 , pp .",
    "387 - 392 .",
    "m. renouf , f. dubois , p. alart , a parallel version of the non smooth cantact dynamics algorithm applied to the simulation of granular media , j. comput .",
    "( 2004 ) 375 - 382 .",
    "v. zhakhovskii , k. nishihara , y. fukuda , s. shimojo , a new dynamical domain decomposition method for parallel molecular dynamics simulation on grid , in : annual progress report , institute of laser engineering , osaka university , 2004 .",
    "j. k. salmon , parallel hierarchical n - body methods , ph.d .",
    "thesis , caltech university , pasadena , u.s.a . , 1990 .",
    "m. s. warren , j. k. salmon , a parallel hashed oct - tree n - body algorithm , in : proceedings of supercomputing 93 , 1993 , pp . 12 - 21 .",
    "f. fleissner , p. eberhard , parallel load - balanced simulation for short - range interaction particle methods with hierarchical particle grouping based on orthogonal recursive bisection , int .",
    "j. numer . meth .",
    "engng 74 ( 2008 ) 531 - 553 .",
    "d. e. stewart , rigid - body dynamics with friction and impact , siam review 42 ( 2000 ) , 3 - 39 .",
    "i. nassi , b. shneiderman , flowchart techniques for structured programming , sigplan notices 8 ( 1973 ) 12 . t. unger , l. brendel , d. e. wolf , j. kertsz , elastic behavior in contact dynamics of rigid particles , phys . rev .",
    "e 65 ( 2002 ) 061305 .",
    "d. e. stewart , convergence of a time - stepping scheme for rigid - body dynamics and resolution of painlev s problem , arch .",
    "rational mech .",
    "145 ( 1998 ) 215260 .",
    "f. jourdan , p. alart , m. jean , a gauss - seidel like algorithm to solve frictional contact problems , computer methods in applied mechanics and engineering 155 ( 1998 ) 31 - 47 .",
    "m. r. shaebani , t. unger , j. kertsz , generation of homogeneous granular packings : contact dynamics simulations at constant pressure using fully periodic boundaries , int .",
    "c 20 ( 2009 ) 847 - 867 . w. press , s. a. teukolsky , w. t. vetterling , b. p. flannery , numerical recipes : the art of scientific computing , chapter 19 , cambridge university press , cambridge , 2007 .",
    "allen , d.j .",
    "tildeslay , computer simulation of liquids , oxford university press , oxford , 1987 .",
    "m. wackenhut , s. mcnamara , h. herrmann , shearing behavior of polydisperse media , eur .",
    "j. e 17 ( 2005 ) 237 - 246 . v. ogarko , s. luding , data structures and algorithms for contact detection in numerical simulation of discrete particle systems , in : proc . of world congress particle technology 6 ,",
    "nrnberg messe gmbh ( ed . ) , nuremberg , 2010 .",
    "s. revathi , v. balakrishnan , effective diffusion constant for inhomogeneous diffusion , j. phys .",
    "( 1993 ) 5661 - 5673 .",
    "m. r. shaebani , t. unger , j. kertsz , extent of force indeterminacy in packings of frictional rigid disks , phys .",
    "e 79 ( 2009 ) 052302 .",
    "t. unger , j. kertsz , dietrich e. wolf , force indeterminacy in the jammed state of hard disks , phys .",
    "94 ( 2005 ) 178001 ."
  ],
  "abstract_text": [
    "<S> a fully parallel version of the contact dynamics ( cd ) method is presented in this paper . for large enough systems , </S>",
    "<S> @xmath0 efficiency has been demonstrated for up to @xmath1 processors using a hierarchical domain decomposition with dynamic load balancing . </S>",
    "<S> the iterative scheme to calculate the contact forces is left domain - wise sequential , with data exchange after each iteration step , which ensures its stability . </S>",
    "<S> the number of additional iterations required for convergence by the partially parallel updates at the domain boundaries becomes negligible with increasing number of particles , which allows for an effective parallelization . </S>",
    "<S> compared to the sequential implementation , we found no influence of the parallelization on simulation results .    </S>",
    "<S> contact dynamics method , granular materials , hierarchical domain decomposition , load balancing , mpi library 45.70.-n , 02.70.-c , 45.10.-b </S>"
  ]
}
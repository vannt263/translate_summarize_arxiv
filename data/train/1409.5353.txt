{
  "article_text": [
    "the hawkes point process was first introduced in @xcite as a model of chain - reaction - like phenomena , in which the occurrence of an event increases the likelihood of more such events happening in the future .",
    "this intrinsic  self - exciting property has made hawkes processes appealing to a wide variety of researchers dealing with data exhibiting strong temporal clustering . although it was originally used to model the dynamics of aftershocks that accompany strong earthquakes @xcite , it has since found application to many other problems , including accretion disc formation @xcite , gene interactions @xcite , social dynamics @xcite , insurance risk @xcite , corporate default clustering @xcite , market impact @xcite , high - frequency financial data @xcite , micro - structure noise @xcite , crime @xcite , generic properties of high - dimensional inverse problems in statistical mechanics @xcite , and dynamics of neural networks @xcite .",
    "there is also recent theoretical work exploring generic mathematical properties of the process in its own respect @xcite .",
    "as the areas of application of hawkes models continue to grow , it becomes increasingly important to understand the probabilistic behavior of the process .",
    "unfortunately , despite its ubiquity , the mathematical properties of the hawkes process are still not fully known .",
    "in fact , the same dynamical characteristics that make it such a useful model in practice are the ones that complicate formal analysis .",
    "hawkes processes do not ( except in some special cases , see @xcite ) possess the markov property , making it impossible to study them using standard techniques .",
    "recently , quite a few methods have been devised to circumvent this problem ; there are now many well known results describing hawkes process stability @xcite , long - term behavior @xcite and large deviation properties @xcite . yet , since the early works of hawkes himself on the covariance density and bartlett spectrum @xcite of self - exciting processes @xcite , few have tried to further elucidate their statistical properties . in his work , adamopoulos @xcite , for example , attempts to derive the probability generating functional of the hawkes process , but manages only to represent it implicitly , as a solution of an intractable functional equation .",
    "errais et al .",
    "@xcite , using the elegant theory of affine jump processes , show that the moments of hawkes processes can be computed by solving a system of non - linear odes . once again , however , explicit formulas turn out to be unobtainable by analytic means .",
    "lastly , saichev and sornette @xcite , using the alternative poisson cluster representation of self - exciting processes , show that the moment generating function of the hawkes process satisfies a transcendental equation which does not admit an explicit solution",
    ".    statistical behavior of , for example , hawkes process moments and cumulants is of some importance in neuroscience , where the problem of quantifying levels of synchronization of action potentials has become very pertinent .",
    "it has been shown that nerve cells can be extremely sensitive to synchronous input from large groups of neurons @xcite .",
    "more precisely , a neuron s firing rate profile depends , to a large degree , on higher order correlations amongst the presynaptic spikes @xcite .",
    "of course , which synchronous patterns are favored by the network is also determined by its connection structure . while the contribution of specific structural motifs to the emergence of pairwise correlations ( i.e. , two - spike patterns ) has already been dissected @xcite , no such result exists in the case of more complex patterns , stemming from correlations of higher order .    in this paper",
    ", we derive analytic formulas for the @xmath0th order cumulant densities of a linear , self - exciting hawkes process with arbitrary interaction kernels , generalizing the result in @xcite .",
    "inspired by the approach of saichev et al .",
    ", we do this by utilizing the poisson cluster process representation @xcite , which simplifies calculations considerably .",
    "furthermore , we show that the cumulant densities admit a natural and intuitive graphical representation in terms of the branching structure of the underlying process and describe an algorithm that facilitates practical computation .",
    "finally , we generalize the result in @xcite by showing that the integrated cumulant densities can be expressed in terms of formal sums of topological motifs of a graph , induced by specifying the physical interactions between different types of point events .",
    "consider a sequence @xmath1 of positive , random variables , representing times of random occurrences of a certain event . alternatively ,",
    "@xmath2 can be also thought of as as collection of random points on the positive half - line @xmath3 . by superposing all event times in the sequence ,",
    "we obtain the point process @xmath4 , formally defined by setting    @xmath5    where @xmath6 denotes the dirac delta function , centered at the random point @xmath7 .",
    "it is easy to see that the number of events occurring before time @xmath8 is given by    @xmath9    the conditional probability , given the past activity , of a new event occurring in the interval @xmath10 is given by the conditional rate function @xmath11 .",
    "more specifically , we have , up to first order @xcite    @xmath12    where @xmath13 represents the history of the point process @xmath14 up to time @xmath8 .",
    "additionally , we assume that    @xmath15    i.e. that the probability of two or more events arriving simultaneously is negligibly small .",
    "intuitively , therefore , the conditional rate function represents the probability of a new event occurring in the infinitesimally near future , given the information about all events in the past .",
    "furthermore , from our previous considerations it also follows that @xmath16 is ( up to first order ) a bernoulli random variable and therefore ,    @xmath17      as was pointed out in @xcite , the hawkes process can be defined in two equivalent ways : either by specifying its conditional rate function or as a _",
    "poisson cluster process _ , generated by a certain branching structure .",
    "following @xcite and @xcite , let us consider a @xmath18-dimensional point process @xmath19 , with rate function @xmath20 defined by    @xmath21    where @xmath22 denotes the @xmath18-dimensional base rate vector with positive entries ( @xmath23 ) and @xmath24 is an @xmath25 matrix of non - negative , integrable functions @xmath26 , with support on @xmath3 , called the interaction kernel . in principle , therefore , the rate @xmath27 should always remain positive , but models for which the probability of negative values is sufficiently small may be useful approximations @xcite .    rewriting equation ( [ rate ] ) in terms of the components of the conditional rate function @xmath28 , we find that , @xmath29 ,    @xmath30    from equations ( [ rate_definition ] ) and ( [ rate_comp ] ) , we can now see that    @xmath31    i.e. that the probability of an event of type @xmath32 occurring at time @xmath8 is simply the sum of a constant base rate and a convolution of the complete history of the process with the interaction kernel @xmath24 , whose component @xmath26 describes the increase of the likelihood of type @xmath32 events at @xmath8 , caused by a type @xmath33 event , occurring at @xmath34 .",
    "note that , in the special case of no interactions ( @xmath35 ) , we recover the definition of a multivariate poisson process with constant rate @xmath22 . in this case , however , the ( conditional ) rate function is independent both of time and of the history @xmath13 .",
    "let us consider a poisson cluster process @xmath36 , which evolves in the following way ( @xcite , see also figure [ pedfigure ] ) :    1 .",
    "let @xmath37 be a realization , on the interval @xmath38 $ ] , of a homogeneous poisson process with rate @xmath39 .",
    "we will call points in @xmath37 _ immigrants of type @xmath40_. 2 .   for every @xmath40 ,",
    "each immigrant @xmath41 generates a _ cluster _ of points @xmath42 .",
    "all such clusters are mutually independent .",
    "the clusters @xmath42 are generated according to the following branching structure : * each cluster @xmath42 consists of generations of offspring of all types of the immigrant @xmath43 , which itself belongs to generation @xmath34 . *",
    "recursively , given the immigrant @xmath43 and the offspring of generation @xmath44 of all types , every `` child '' @xmath45 of generation @xmath0 and type @xmath33 , produces , @xmath29 , its own offspring of generation @xmath46 and type @xmath32 by generating a realization of an inhomogeneous poisson process @xmath47 with rate @xmath48 .",
    "in other words , the probability of there being , at time @xmath8 , a type @xmath32 offspring event of generation @xmath46 , caused by a type @xmath33 event @xmath45 of generation @xmath0 is equal to @xmath49 .",
    "the point process @xmath36 is equal to the superposition of all points in all generated clusters , i.e. @xmath50     nodes and @xmath51 directed links . + left column : hatched nodes are active , and dashed links are transmitting a signal to all their respective neighbors .",
    "+ right column : a cluster , generated by the arrival of an immigrant from node @xmath52 , evolves sequentially as new offspring are produced .",
    "+ row @xmath53 : a type @xmath52 immigrant arrives , providing the seed from which a new cluster will emerge .",
    "+ row @xmath54 : the type @xmath52 immigrant generates @xmath53st generation offspring of types @xmath55 and @xmath56 , respectively .",
    "together , these constitute the @xmath53st generation of events .",
    "+ row @xmath57 : the @xmath53st generation , type @xmath56 , event generates a single offspring event of type @xmath36 .",
    "the event of type @xmath55 creates two offspring of types @xmath52 and @xmath36 , respectively . + row @xmath58 : finally , the @xmath54nd generation , type @xmath52 , event is the only one to generate @xmath57 offspring events , of types @xmath55 , @xmath36 and @xmath56 , respectively .",
    "+ bottom : @xmath52 time sequence of events generated in this @xmath58 generation long evolution , here displayed by means of a `` raster plot '' which indicates the events generated by each node on the time axis.,scaledwidth=50.0% ]    for example , if @xmath36 were used to model the dynamics of a spiking neuronal network , the immigrants @xmath37 would represent all the spikes of neuron @xmath40 , caused by constant , external input to the network , and the clusters @xmath42 all subsequent spikes , caused by action potential propagation through the network via synaptic connections .",
    "having defined the cluster process @xmath36 , it is then possible to show ( see e.g. @xcite ) that by letting , @xmath29 and @xmath59 ,    @xmath60    and assuming that the spectral radius @xmath61 ( i.e. the largest eigenvalue ) of the integrated kernel matrix    @xmath62    is strictly less than @xmath53 , then @xmath28 must be equal to the conditional rate function in equation ( [ rate_comp ] ) . furthermore , the corresponding point process will also be stationary .",
    "in other words , we will have    @xmath63    where @xmath64 denotes the @xmath25 identity matrix . in",
    "what follows , we will always assume that we are working with a stationary version of a hawkes process .",
    "more specifically , we will assume that @xmath65 and , consequently , that the matrix @xmath66 can be expanded in terms of powers of the integrated kernel matrix @xmath67 , i.e.    @xmath68    note that the matrix @xmath67 has a very useful interpretation ( which follows from the definition of the poisson cluster process ) - its component @xmath69 represents the average total number of events of type @xmath32 in the second generation , caused by a first generation , type @xmath33 event .",
    "thus , the components of the @xmath0th matrix power @xmath70 equal the average total number of type @xmath32 offspring within @xmath0 subsequent generations , of a first generation , type @xmath33 event .    from our previous considerations",
    ", it now follows that by requiring that @xmath65 ( or , equivalently , that the series ( [ expansion ] ) converges ) we , in fact , assume that each event of a given type produces only finitely many events of any other type , after an infinite number of generations .",
    "consider now an arbitrary @xmath0-dimensional random vector @xmath71 , where we used the symbol @xmath72 to denote the set @xmath73 the cumulant of order @xmath0 , denoted by @xmath74 , is a general measure of statistical dependence of the components of @xmath75 .",
    "it is defined , combinatorially , as ( see @xcite , page 27 . )",
    "@xmath76    where the sum goes over all partitions @xmath77 of the set @xmath73 , @xmath78 denotes the number of blocks of a given partition , and    @xmath79    a dual formula , expressing moments in terms of cumulants , reads    @xmath80    where @xmath81 denotes the cumulant of those components of @xmath75 , whose indices are in @xmath55 .",
    "the cumulant @xmath74 is a natural generalization , to higher dimensions , of the covariance @xmath82 of two variables .",
    "indeed , if we set @xmath83 , @xmath84 and apply formula ( [ cumulant ] ) , we obtain    @xmath85    as @xmath86 and @xmath87 are the only partitions of the set @xmath88 .",
    "also , obviously , @xmath89 and @xmath90 .",
    "thus ,    @xmath91    for a given time vector @xmath92 and multi - index @xmath93 , we now define the the @xmath94th order cumulant density of the hawkes process , denoted by @xmath95 , by letting    @xmath96    where we used @xmath97 to denote the differential @xmath98 .    as in the general case ,",
    "the cumulant density @xmath95 is used to quantify the mutual dependence of random events of types @xmath99 at times @xmath100 .",
    "for example , from equations ( [ covariance_cumulant ] ) and ( [ bernoulli ] ) , we can see that , for @xmath101 , @xmath102 and @xmath103 ,    @xmath104    the formulas for the @xmath0th order cumulant density @xmath95 , however , get more and more complicated with increasing @xmath0 , as the number of set partitions involved grows supra - exponentially .",
    "to illustrate this point , we set @xmath105 , @xmath106 and @xmath107 .",
    "then , from ( [ cumulant ] ) , we have    @xmath108    to alleviate the problem of increasing complexity , we use the cluster process representation to come up with a useful and intuitive expression for the density @xmath95 in terms of the cluster process s branching structure .",
    "first off , note that the only way that events @xmath100 ( of types @xmath99 ) can be statistically dependent is if they all belong to the same cluster , i.e. if they are all offspring ( possibly of different generations ) of a single original immigrant .    more specifically",
    ", we can show that ( see appendix [ proof ] ) , for every multi - index @xmath93 and every vector @xmath109 ,    @xmath110    where    @xmath111    this result now provides us with a practical way of computing @xmath112 .",
    "for example , in the case when @xmath83 , we have that @xmath113 is equal to the probability of there being a type @xmath32 event at time @xmath114 , a type @xmath33 event at time @xmath115 , and that both of these events are descendant from a common immigrant .",
    "therefore , in order to compute the @xmath54nd order cumulant density , we need to sum up the probabilities of all possible `` family trees '' which contain events @xmath114 and @xmath115 ( see figure [ 2-trees ] ) .    in order to formalize this computation ,",
    "we define    @xmath116    then ,    @xmath117_{ij}\\textmd{,}\\ ] ]    where @xmath118_{ij}$ ] extracts component @xmath119 of a given matrix , and @xmath120 denotes the @xmath94th convolution power of the interaction kernel @xmath24 , defined recursively by    @xmath121    indeed , if we define @xmath122 to be equal to the probability that an event of type @xmath33 at @xmath34 , after @xmath0 generations , causes a type @xmath32 event at @xmath8 , we have @xmath123_{ij}\\textmd{,}\\\\    & \\frac{p^{ij}_{1}(t)}{dt } = [ \\mathbf{g}(t)]_{ij}\\textmd{,}\\\\   & \\frac{p^{ij}_{2}(t)}{dt } = \\sum_{k=1}^{d}\\int_{-\\infty}^{t}[\\mathbf{g}(t - s)]_{ik}[\\mathbf{g}(s)]_{kj}ds = [ \\mathbf{g}^{\\star 2}(t)]_{ij}\\textmd{,}\\end{aligned}\\ ] ] and therefore , by induction ,    @xmath124_{ij}\\\\   & = \\left[\\sum_{n\\geq0}\\mathbf{g}^{\\star n}(t)\\right]_{ij}\\textmd{. }   \\end{aligned}\\ ] ]    furthermore , noting that @xmath125type @xmath40 immigrant at @xmath126 is , by construction , equal to @xmath127 , we obtain the probability of an immigrant ( arriving at any point in time ) generating an event of type @xmath128 at time @xmath129 .",
    "it equals    @xmath130_{mk}\\mu^{k } = \\lambda^{m}\\textmd{,}\\ ] ]    i.e. it is the @xmath128th component of the stationary rate vector @xmath131 in ( [ stationary_rate ] ) , where the first equality in the previous equation follows from    @xmath132_{mk}dx \\\\   & = \\sum_{n\\geq 0}[\\mathbf{g}^{n}]_{mk } = [ ( \\mathbf{i}-\\mathbf{g})^{-1}]_{mk}\\textmd{. } \\end{aligned}\\ ] ]    computing the probability of the family tree @xmath133 in figure [ 2-trees ] is now straightforward ; recalling the definition of @xmath134 and taking into account our previous considerations , we get    @xmath135    recovering a classical and well known result on the covariance density of the hawkes process ( see @xcite ) .    a big advantage of our approach , however , is that it can be used to compute cumulant densities of orders greater than @xmath54 .",
    "for example , in order to compute the @xmath57rd order density @xmath136 we start , as in the @xmath54-dimensional case , by enumerating all possible family trees with leaves @xmath114 , @xmath115 and @xmath137 . in this case , however , there are in total @xmath58 different possibilities ( see figure [ 3-trees ] )",
    ".    we can now proceed in much the same way as before , summing up the probabilities of all possible trees in order to derive the desired formula .",
    "we define @xmath107 , @xmath138 and    @xmath139_{ij}\\textmd{,}\\ ] ]    finally obtaining    @xmath140    it is important to point out that equation ( [ 3-density ] ) can be derived in a different , albeit a more tedious way using martingale theory arguments , generalizing the derivation of bacry et al . in @xcite for the second order cumulant density .",
    "the newly introduced function @xmath141 corresponds to the probability of a type @xmath33 event at @xmath34 generating a type @xmath32 event at @xmath8 , after at least one generation .",
    "the appearance of such a term in the above equations is a consequence of the fact that , for instance , contracting the link between nodes @xmath129 and @xmath142 in tree @xmath143 to a point turns it into @xmath144 , which is already accounted for .",
    "thus , in order to avoid counting certain configurations twice , we must introduce a `` stiff '' link between the two internal nodes @xmath129 and @xmath142 in trees @xmath143 , @xmath145 and @xmath146 .    by generalizing the above considerations , it is possible to construct a general procedure for computing the @xmath0th order cumulant density @xmath147 .    1 .   for a given @xmath148 , generate all possible rooted trees @xmath2 with @xmath0 leaves .",
    "2 .   label the leaves of @xmath2 with ordered pairs @xmath149 , in arbitrary order .",
    "label the internal nodes ( including the root ) of @xmath2 arbitrarily .",
    "3 .   for every tree @xmath2 ,",
    "construct an integral term @xmath150 , according the the following pseudo - algorithm : 1 .",
    "set @xmath151 ; 2 .   for every edge in t , connecting a node @xmath142 of type @xmath152 to a leaf @xmath153 of type @xmath154 : @xmath155 3 .   for every edge in t , connecting an internal node @xmath129 of type @xmath156 to another internal node @xmath142 of type @xmath152 : @xmath157 4 .",
    "let @xmath43 be the root of @xmath2",
    ". set @xmath158 5 .",
    "integrate @xmath150 with respect to the variable @xmath159 , for every internal node @xmath129 .",
    "sum over all @xmath156 for every internal node @xmath129 . 7 .",
    "sum over all @xmath160 4 .",
    "add up all integral terms @xmath150 for every rooted tree @xmath2 , generated in the first step , to obtain the @xmath0th order cumulant density .",
    "the principal difficulty of the above procedure lies its first step , i.e. in the enumeration of all topologically distinct rooted trees with @xmath0 labeled leaves . while there are known algorithms that can tackle this problem ( see e.g. the classic text by felsenstein @xcite ) , the number of terms grows very quickly with increasing @xmath0 ( see figure [ number_of_terms ] ) and thus computing @xmath95",
    "quickly becomes impractical .",
    "[ cols=\"^,>\",options=\"header \" , ]",
    "let @xmath95 be , for a given time vector @xmath161 and multi - index @xmath93 , the @xmath0th order cumulant density of a @xmath18-dimensional hawkes process .",
    "we define the integrated cumulant of order @xmath94 , denoted simply by @xmath162 , by setting    @xmath163    note that @xmath162 can be seen as the @xmath0-dimensional laplace transform , `` at zero '' , of @xmath95 . indeed ,",
    "if we denote    @xmath164    where @xmath165 and @xmath166 , we have , clearly ,    @xmath167    thus , if we define    @xmath168    we can , by laplace transforming the covariance density @xmath169 , prove ( see appendix [ formulas_for_integrated_cumulants ] ) that ,    @xmath170_{im}[\\mathbf{r}]_{jm}\\textmd{,}\\ ] ]    where we set    @xmath171    expanding @xmath172 in powers of @xmath67 , we get    @xmath173_{im}[\\mathbf{g}^{l}]_{jm}\\textmd{.}\\ ] ]    interpreting now the matrix power @xmath174 in the sense of graph theory , i.e. as a matrix whose component @xmath119 corresponds to the sum of lengths of all paths from node @xmath33 to node @xmath32 in exactly @xmath175 steps , we see that the integrated covariance density @xmath176 can be equivalently represented as    @xmath177    where the sum goes over the set @xmath178 of all rooted trees @xmath2 with root @xmath128 , containing nodes @xmath179 . here",
    ", @xmath180 denotes the weight of tree @xmath2 , defined as the product of weights of all edges , contained in @xmath2 , times the weight of the root @xmath128 , defined as being equal to @xmath181 .",
    "the graph @xmath182 with adjacency matrix @xmath67 can be thought of as follows .",
    "each node @xmath183 in @xmath182 corresponds to a type of event in the underlying hawkes process , and the existence of an edge @xmath184 from @xmath33 to @xmath32 indicates the possibility of generating type @xmath32 events from those of type @xmath33 .",
    "starting in node @xmath33 , traversing the corresponding edge to reach node @xmath32 is equivalent to generating @xmath69 type @xmath32 offspring of a type @xmath33 immigrant .",
    "therefore , each path through graph @xmath182 represents a specific `` bloodline '' of a type @xmath128 immigrant , while a tree @xmath185 accounts for the possibility of the bloodline splitting somewhere along the way , concluding in , after a certain number of generations , in offspring of both types @xmath32 and @xmath33 .",
    "the previous formula tells us that the sum of weights of all such trees is equal to the integrated covariance @xmath176 .",
    "now , reasoning in much the same way as before we have , for @xmath186 ,    @xmath187_{im}[\\mathbf{r}]_{jm}[\\mathbf{r}]_{km}\\\\ & + \\sum_{m , n=1}^{d}\\lambda_{n}[\\mathbf{r}]_{im}[\\mathbf{r}]_{jm}[\\bm{\\psi}]_{mn}[\\mathbf{r}]_{kn}\\\\ & + \\sum_{m , n=1}^{d}\\lambda_{n}[\\mathbf{r}]_{jm}[\\mathbf{r}]_{km}[\\bm{\\psi}]_{mn}[\\mathbf{r}]_{in}\\\\ & + \\sum_{m , n=1}^{d}\\lambda_{n}[\\mathbf{r}]_{im}[\\mathbf{r}]_{km}[\\bm{\\psi}]_{mn}[\\mathbf{r}]_{jn}\\textmd{,}\\end{aligned}\\ ] ]    where @xmath188 . once again , expanding @xmath172 and @xmath189 in powers of @xmath67 yields    @xmath190    where @xmath191 is the set of all rooted trees with root @xmath128 , containing nodes @xmath192 and @xmath193 is the already defined weight function .",
    "it is now easy to see that the general result is of the form    @xmath194    where @xmath93 and @xmath195 is the set of all rooted trees with root @xmath128 , containing nodes @xmath196 .",
    "in this paper we described the method for computing a class of statistics of linear hawkes self - exciting point processes with arbitrary interaction kernels . by using the poisson cluster process representation",
    ", we were able to obtain a general procedure for deriving formulas for @xmath0th order cumulant densities .",
    "furthermore , we have shown there is a one - to - one correspondence between the integral terms , appearing in said densities , and all topologically distinct rooted trees with @xmath0 labeled leaves .",
    "we also considered the problem of computing time - integrated cumulants and showed this can be done by simplifying the expressions for the corresponding cumulant densities .",
    "moreover , and not surprisingly , we demonstrated that integrated cumulants likewise admit a representation in terms of a formal sum of topological motifs , generalizing previous work on the topological expansion of the integrated covariance @xcite .",
    "the problem of quantifying higher - order correlations is of some importance in theoretical neuroscience .",
    "indeed , it has long been suggested @xcite that understanding the cooperative dynamics of populations of neurons would provide fundamental insight into the nature of neuronal computation . however , while direct experimental evidence for coordinated activity on the spike train level mostly relies on the correlations between pairs of nerve cells @xcite , it is becoming increasingly clear that such pairwise correlations can not completely resolve the cooperative dynamics of neuronal populations @xcite and that higher - order cumulants need to be taken into account",
    ".    one possible shortcoming of our work is the ( supra - exponentially ) increasing complexity of the closed - form expressions for the densities @xmath95 for higher values of @xmath0 .",
    "this `` explosion '' , however , is mostly due to combinatorial factors , that arise in many problems involving cumulants .",
    "as their definition naturally involves objects such as set partitions , it seems to us that these sorts of issues would be quite difficult to avoid .",
    "another limitation of the present model is that it only allows for excitatory interactions - an arrival of an event at a given time can only _ increase _ the likelihood of future event , never decrease it .",
    "we hope , in the future , to be able to extend our analysis to include models in which there also exists a possibility of mutual inhibition between points of different types .",
    "further generalizations of our results might involve computing cumulants ( and other important statistics ) of a non - linear hawkes processes ( see e.g. @xcite for the definition ) , whose conditional rate function involves a non - linear transformation of equation ( [ rate ] ) , thus allowing for , for example , multiplicative interaction between point events @xcite .",
    "however , in this case , the resulting process no longer admits an immigrant - offspring representation , meaning an alternative approach would be necessary .",
    "let @xmath197 be an arbitrary time vector @xmath92 and @xmath198 an arbitrary multi - index @xmath93 .    from ( [ bernoulli ] ) , for every vector @xmath92 and multi - index @xmath93 we have that    @xmath199    furthermore",
    ", it is clear that    @xmath200    where @xmath201 denotes the complement of the set    @xmath202    indeed , events @xmath197 of type @xmath198 either are , or are nt all in some cluster @xmath36 .",
    "we now proceed by induction in @xmath0 . for @xmath83",
    ", we have    @xmath203    but , as the only way that two events are not in the same cluster is if they each belong to a different one ; say , if @xmath204 and @xmath205 ,    @xmath206    because of independence of different clusters @xmath36 and @xmath56 .",
    "thus ,    @xmath207    proving that formula ( [ cumulant_probability_formula ] ) is true for @xmath83 .",
    "next , we assume that ( [ cumulant_probability_formula ] ) is true for @xmath208 and prove that it then must also be true for @xmath0 .",
    "consider the complementary set @xmath201 .",
    "if events @xmath197 are not all in the same cluster , how could they be distributed ?",
    "one possibility is that they are divided up between two different clusters , like in the previous case .",
    "in fact , they could potentially be distributed in @xmath209 different clusters , where @xmath210 .",
    "therefore ,    @xmath211    where the first sum goes over all possible numbers of different clusters that events @xmath197 could be partitioned in , while @xmath212 denotes the subset of @xmath197 that belong to the @xmath213th cluster @xmath214 ( and @xmath215 denotes their types ) .",
    "now , note that the previous equation is , in fact , a sum over all partitions @xmath77 of the set @xmath73 with at least two blocks ( i.e. @xmath216 ) .",
    "let us now fix one such partition @xmath217 . as @xmath216 , we must have , @xmath218 , @xmath219 , that @xmath220 .",
    "but then , by the inductive assumption ,    @xmath221    and , therefore ,    @xmath222    finally , from ( [ decomposition_of_average ] ) , ( [ different_clusters ] ) and ( [ moments_cumulant_formula ] ) , we get    @xmath223    which completes the proof .",
    "let @xmath224 be the set of all rooted trees with root @xmath128 and leaves @xmath225 .",
    "next , let @xmath226 and let @xmath150 be the corresponding integral term .",
    "in order to compute the laplace transform @xmath227 , we first consider the leaves of @xmath2 .",
    "each leaf @xmath154 contributes a term @xmath228 , for some internal node @xmath142 . for simplicity ,",
    "let us assume that leaves @xmath229 all descend from a single internal node , which we denote @xmath142 . then , applying to @xmath150 the laplace transform with respect to variables @xmath230 , we obtain        of course , in general the leaves @xmath196 are divided into several groups , according to which internal node they descend from . in that case ,",
    "applying to each such group the laplace transform in the already described way , yields several terms of type ( [ leaf_terms ] ) .",
    "moving one level up in tree @xmath2 , we are now in a situation in which several internal nodes , each with its own group of dependent leaves , all descend from a common node @xmath129 , residing one level above them .",
    "we denote these internal nodes by @xmath233 .",
    "each such internal node @xmath234 contributes to @xmath150 a term @xmath235 . transforming the exponential term in ( [ leaf_terms ] )            by induction",
    ", we can now see that this procedure must end after a finite number of steps ( equal to the `` depth '' of tree @xmath2 ) , at which point we are left with a product of various terms of types ( [ leaf_terms ] ) and ( [ internal_node_terms ] ) , integrated with respect to the position @xmath43 of the root @xmath128 ( as this is the last node we reach by `` climbing up '' @xmath2 ) .",
    "the exponential terms in this product can be combined to form        by setting @xmath240 , we now see that the formulas for @xmath162 can be obtained from formulas for the cumulant densities by simply `` erasing '' all the integral signs and replacing all the functional terms with their integrated counterparts .    49ifxundefined [ 1 ] ifx#1 ifnum [ 1 ] # 1firstoftwo secondoftwo ifx [ 1 ] # 1firstoftwo secondoftwo `` `` # 1''''@noop [ 0]secondoftwosanitize@url [ 0 ] ",
    "+ 12$12  & 12#1212_12%12@startlink[1]@endlink[0]@bib@innerbibempty @noop * * ,   ( ) link:\\doibase 10.1080/01621459.1988.10478560 [ * * ,   ( ) ] @noop * * ,   ( ) @noop * * ,   ( ) link:\\doibase 10.1214/10-aos806 [ * * ,   ( ) ] ,   @noop * * ,   ( ) @noop ( ) , @noop ( ) ,   @noop ( ) link:\\doibase 10.1137/090771272 [ * * ,   ( ) ] @noop ( ) , @noop _ _",
    "( ,  ) in  @noop _ _  ( ,  )  pp .",
    "link:\\doibase 10.1198/jasa.2011.ap09546 [ * * ,   ( ) ] http://stacks.iop.org/1742-5468/2011/i=10/a=p10012 [ * * ,   ( ) ] link:\\doibase 10.1371/journal.pcbi.1002059 [ * * , ( ) ] link:\\doibase 10.1103/physreve.89.042817 [ * * ,   ( ) ] link:\\doibase 10.1103/physreve.89.012104 [ * * ,   ( ) ] link:\\doibase 10.1103/physreve.87.022815 [ * * ,   ( ) ] link:\\doibase 10.1103/physreve.90.062807 [ * * ,   ( ) ] link:\\doibase 10.1239/aap/1316792671 [ * * ,   ( ) ] @noop * * ,   ( ) @noop ( ) @noop ( ) ,   @noop ( ) @noop ( ) @noop * * , ( ) link:\\doibase 10.1140/epjb / e2013 - 30493 - 9 [ * * ,   ( ) , 10.1140/epjb / e2013 - 30493 - 9 ] @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop _ _ ,  vol .  ( ,  ) @noop * * ,   ( ) link:\\doibase 10.1007/s11009 - 011 - 9272 - 5 [ * * ,   ( ) ] @noop _ _ ,  griffin books of cognate interest  ( ,  ) @noop * * , ( ) @noop _ _  ( , ) @noop _ _ ,  ed . ( ,  ,  ) @noop * * ,   ( ) link:\\doibase 10.1073/pnas.86.5.1698 [ * * ,   ( ) ] @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * , ( ) ,"
  ],
  "abstract_text": [
    "<S> we derive explicit , closed - form expressions for the cumulant densities of a multivariate , self - exciting hawkes point process , generalizing a result of hawkes in his earlier work on the covariance density and bartlett spectrum of such processes . to do this </S>",
    "<S> , we represent the hawkes process in terms of a poisson cluster process and show how the cumulant density formulas can be derived by enumerating all possible `` family trees '' , representing complex interactions between point events . </S>",
    "<S> we also consider the problem of computing the integrated cumulants , characterizing the average measure of correlated activity between events of different types , and derive the relevant equations . </S>"
  ]
}
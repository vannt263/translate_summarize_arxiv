{
  "article_text": [
    "the potential use of quantum computers for solving certain classes of problems has recently received a considerable amount of attention ( see , _ e.g. _ , @xcite for a comprehensive review ) .",
    "several quantum algorithms have been developed , such as quantum factoring  @xcite , having the potential for revolutionizing computer science .",
    "the purpose of this paper is to explore the application of a monte carlo method that has been developed in the context of quantum many - body systems to the simulation of quantum computers  @xcite .",
    "quantum computers can be seen as peculiar quantum many - body systems that evolve according to a non - local time - dependent interaction so as to carry out a `` computation '' .",
    "the component quantum bits ( qubits ) interact via a sequence of quantum gates , performing each a prescribed unitary transformation ( rotation , hadamard transformation , controlled not , controlled phase , etc . )",
    "two - bit ( or @xmath0-bit ) gates therefore effect _ non - local _ interactions between qubits , and the `` quantum algorithm '' ( characterized by a network of quantum gates ) corresponds to a specific sequence of unitary transformations , _",
    "i.e. _ , a _ time - dependent _ interaction .",
    "numerous methods have been developed for years in order to treat general quantum many - particle systems ( see , _ e.g. _ , @xcite ) .",
    "it is therefore intriguing to examine whether the application of the same methods to quantum computers might be similarly successful .",
    "we focus here on a stochastic approach based on the hubbard - stratonovich transformation  @xcite which has been shown to be suitable for the description of quantum many - body systems ( see , _",
    "e.g. _ , @xcite ) .",
    "the central idea of this approach is to replace the many - body propagator for the entire quantum computer ( of say @xmath1 `` interacting '' qubits ) with @xmath1 one - bit propagators in fluctuating auxiliary fields , thereby `` decoupling '' the qubits .",
    "more specifically , solving the quantum dynamics of the @xmath1-bit computer in a very high - dimensional hilbert space ( @xmath2 ) reduces to evaluating a high - dimensional  but polynomial in @xmath1  integral over auxiliary fields .",
    "the latter is then approximated by use of a stochastic method .",
    "consider a quantum computer consisting of a register of @xmath1 qubits supplemented with a quantum algorithm , defined as a sequence of @xmath3 quantum gates .",
    "the total unitary transformation characterizing the quantum computation is thus expressed as an ordered product of operators ( note the product from right to left ) @xmath4 where @xmath5 is the unitary transformation performed by the @xmath6-th gate , and @xmath3 is the total number of gates .",
    "it has been shown that _ two - bit _ gates are universal , that is quantum gates operating on one and two qubits are sufficient to construct a general quantum circuit  @xcite .",
    "therefore , we restrict ourselves to the simulation of quantum circuits made of @xmath3 two - bit gates ( @xmath5 being a two - bit gate acting on qubits @xmath7 and @xmath8 ) , keeping in mind that an arbitrary quantum computation can be achieved with an appropriate sequence of such gates .",
    "( obviously , one - bit gates can always be incorporated into two - bit gates . ) note that an efficient quantum algorithm must have @xmath3 polynomial in @xmath1 .",
    "for example , the quantum fast fourier transform ( fft ) circuit  @xcite used in quantum factoring  @xcite requires @xmath9 two - bit gates . a two - bit quantum gate that effects a unitary transformation on qubits @xmath7 and @xmath8 can be written generically as the two - bit operator @xmath10 where @xmath11 is a real number and @xmath12 , @xmath13 are two _ commuting _ one - bit hermitian operators referring to the qubits involved in the quantum gate [ _ i.e. _ , the operator @xmath12 ( @xmath13 ) affects qubit @xmath7 ( @xmath8 ) ] . for example",
    ", the controlled - not gate  @xcite acting on qubit @xmath14 ( as a control ) and qubit @xmath15 ( as a target ) has @xmath16 , @xmath17 , and @xmath18 , with @xmath19 , @xmath20 being pauli matrices .",
    "the hubbard - stratonovich representation of @xmath5 is obtained by writing the identity @xmath21 where @xmath22 and @xmath23 are _ real _ auxiliary fields corresponding to the @xmath6-th gate , and then integrating the exponential of eq .",
    "( [ eq_square ] ) over @xmath22 and @xmath23 , resulting in @xmath24 this expression is most important because the _ two - bit _ gate @xmath5 is represented as an infinite sum of products of ( field - dependent ) _ one - bit _ gates , @xmath25 and @xmath26 . for a given value of the fields @xmath22 , @xmath23 , the two qubits @xmath7 and @xmath8 act as non - interacting particles and evolve independently",
    "( they do _ not _ become entangled when initially prepared in a product state ) . only the sum over fields",
    "creates a `` coupling '' between them , as pictured in fig .",
    "[ fig_picture ] .",
    "0.25 cm    [ fig_picture ] -0.25 cm    as a consequence , for a given set of @xmath22 s and @xmath23 s , the time evolution effected by the whole quantum circuit can be computed separately for each qubit : one calculates the time - evolution of @xmath1 qubits in @xmath1 two - dimensional hilbert spaces rather than the time - evolution of a single quantum state ( the state of the entire computer ) in the full @xmath27-dimensional hilbert space .",
    "this exponential reduction of the size of the hilbert space appears clearly when writing the total unitary transformation for the quantum circuit @xmath28}\\ ] ] where @xmath29 is the measure over the auxiliary fields @xmath30 and @xmath31 , and @xmath32 $ ] is the total unitary transformation for a given `` path '' @xmath33 in auxiliary - field space . here , @xmath34 and @xmath35 stand for the unitary transformation performed by the one - bit gate acting separately on qubit @xmath7 and @xmath8 , respectively .",
    "( the one - bit gates @xmath36 and @xmath37 replacing the @xmath6-th two - bit gate @xmath5 depend respectively on the auxiliary field @xmath22 and @xmath23 . ) eq .",
    "( [ eq_utot ] ) involves only _ one - bit _ operators , and therefore describes the time - evolution of @xmath1 _ non - interacting _ qubits ( averaged over auxiliary fields ) .",
    "the operator @xmath32 $ ] is more conveniently written as a product of one - bit operators over the @xmath1 qubits , @xmath38 = \\prod_{l=1}^l u^{[l]}[\\sigma]\\ ] ] where the one - bit operator @xmath39}$ ] , describing the overall evolution of the @xmath40-th qubit , is expressed as the ordered product @xmath41}[\\sigma ] = \\prod_g u_g^{[l]}(\\sigma_g,\\tau_g)\\ ] ] with @xmath42}(\\sigma_g,\\tau_g ) = \\left\\ { \\begin{array}{l@{\\qquad}l } v_g(\\sigma_g ) & { \\rm if~}l = a_g \\\\ w_g(\\tau_g )    & { \\rm if~}l = b_g \\\\ 1 & { \\rm otherwise } \\;.",
    "\\end{array } \\right.\\ ] ] the drawback of this exponential reduction in the hilbert space is obviously the @xmath43-dimensional integral over fields in eq .",
    "( [ eq_utot ] ) , which can only be approximated by a numerical method in general . the underlying idea of a stochastic method is to compute only the dominant terms in this integral , that is to consider the paths in auxiliary - field space that contribute the most to it , assuming that this yields a good estimate of the exact integral .",
    "several ( more or less efficient ) monte carlo techniques can be thought of for sampling these paths , but a generic `` sign '' problem unavoidably occurs due to the complex weight in eq .",
    "( [ eq_utot ] ) .",
    "this will be discussed later on . however , the central point here is that the dimension @xmath43 of this integral is polynomial in the dimension of the problem ",
    "_ i.e. _ , polynomial in the number of qubits @xmath1  at the condition that @xmath44 .",
    "the latter condition is fulfilled for any efficient quantum algorithm , suggesting that the monte carlo simulation of a quantum computer might be interesting if the `` sign '' problem is circumvented .",
    "consider now the stochastic calculation of the quantities of interest in a general quantum computation . in the context of quantum many - body systems , stochastic methods are especially appropriate for calculating quantum expectation values , so that our goal is to express the output of the quantum computation as an observable .",
    "assume that the entire quantum computer is initially in a product state @xmath45 .",
    "( if this is not the case , the first step of the computation should simply be the preparation of the correct initial state from @xmath46 . ) the quantum computation ( _ i.e. _ , the unitary transformation @xmath47 ) is implemented by a quantum circuit acting on this initial state .",
    "the final step of a quantum algorithm is then to measure a set of `` output '' qubits ( not necessarily all the @xmath1 qubits ) .",
    "we restrict ourselves here to quantum algorithms that provide a _ deterministic _ result ( unlike quantum factoring ) .",
    "we assume therefore that the output bits are in a product state , so they can be measured individually ( _ i.e. _ , one can perform an _ inclusive _ measurement of each of them separately ) .",
    "the most general observable @xmath48 with vanishing variance ( deterministic output ) consists then in a product of one - bit observables , and several such @xmath48 s can be measured simultaneously .",
    "( if the output bits are not in a product state , one should extend the quantum computation with a unitary transformation mapping the entangled final state into a product state . )",
    "more generally , the quantum many - particle simulation approach allows us to prescribe the value of certain qubits in the output register .",
    "we separate the @xmath1 output qubits into @xmath49 measured qubits , @xmath50 prescribed qubits , and @xmath51 traced over qubits ( _ i.e. _ , `` scratch '' qubits that are necessary to make the overall computation unitary , but are not observed in the final measurement ) .",
    "the observable can then be written as @xmath52 where @xmath53 is a one - bit observable acting on qubit @xmath54 .",
    "consequently , the result of a quantum computation can be written as the expectation value of the observable @xmath48 , @xmath55 where we define the projector @xmath56 as @xmath57 where @xmath58 is a projector on the prescribed value @xmath59 for qubit @xmath60 .",
    "note that it is crucial to consider a quantum algorithm such that the variance of @xmath48 vanishes when the prescribed qubits have the correct value , so that eq .",
    "( [ eq_expectation ] ) yields the _",
    "deterministic _ output of the quantum computation .",
    "the only variance in the simulated output will be the statistical noise resulting from the stochastic evaluation of eq .",
    "( [ eq_utot ] ) .",
    "the central point now is that , using eqs .",
    "( [ eq_utot ] ) and ( [ eq_usigmatau ] ) , the numerator and denominator in eq .",
    "( [ eq_expectation ] ) can be expressed in terms of an infinite sum of products of @xmath1 one - bit matrix elements for each qubit , @xmath61}[\\sigma ' ] \\ , o^{[l ] } \\ , p^{[l ] } \\ ,                        u^{[l]}[\\sigma ] \\ , | 0_l \\rangle } { \\int d\\sigma \\ ; d\\sigma ' \\ ;   e^{i \\sum_g \\alpha_g ( \\sigma_g \\tau_g - \\sigma_g ' \\tau_g ' ) } \\prod_{l=1}^l \\langle 0_l |",
    "u^{\\dagger [ l]}[\\sigma ' ] \\ , p^{[l ] } \\ ,                        u^{[l]}[\\sigma ] \\ , | 0_l \\rangle } \\ ] ] where @xmath62 represents the set of auxiliary fields ( @xmath63 and @xmath64 ) used in the hubbard - stratonovich expression of @xmath65 .",
    "this can be written more concisely as @xmath66}\\right ) \\ ; o[\\sigma,\\sigma ' ] } { \\int d\\sigma \\ ; d\\sigma ' \\ ;           \\exp \\left ( { -is[\\sigma,\\sigma']}\\right )   } \\ ] ] where the ( complex ) action is defined as @xmath67 =   - \\sum_g \\alpha_g ( \\sigma_g \\tau_g - \\sigma_g ' \\tau_g ' )   }   \\hspace { 1.5truecm } \\nonumber \\\\ & + & i \\sum_{l=1}^l \\ln \\langle 0_l | u^{\\dagger [ l]}[\\sigma ' ] \\ , p^{[l ] } \\ , u^{[l]}[\\sigma ] \\ , | 0_l \\rangle \\end{aligned}\\ ] ] the operator @xmath68}$ ] is a one - bit projector if the @xmath40-th qubit is prescribed , and the unit operator otherwise .",
    "the estimator of @xmath48 is @xmath69= \\prod_{l=1}^l   \\frac { \\langle 0_l | u^{\\dagger [ l]}[\\sigma ' ] \\ , o^{[l ] } \\ , p^{[l ] } \\ , u^{[l]}[\\sigma ] \\ , | 0_l \\rangle } { \\langle 0_l | u^{\\dagger [ l]}[\\sigma ' ] \\ , p^{[l ] } \\ , u^{[l]}[\\sigma ] \\ , | 0_l \\rangle } \\ ] ] where @xmath70}$ ] is the one - bit component of the observable @xmath48 if the @xmath40-th qubit is measured , and the unit operator otherwise .",
    "note that the @xmath1 matrix elements in the right - hand side of eq .",
    "( [ eq_action ] ) are for single qubits , so that the calculation of the action involves @xmath71 products of non - unit 2x2-matrices .",
    "( there are 2 fields per gate , and the hermitian conjugate @xmath65 must be considered together with @xmath47 . )",
    "the calculation of eq .",
    "( [ eq_osigma ] ) requires essentially the same operations .",
    "let us now consider the stochastic evaluation of eq .",
    "( [ eq_expeco ] ) based on a sampling of the paths ( set of @xmath22 s , @xmath23 s ) that contribute the most to the integral .",
    "the simplest possibility is to perform an importance sampling of the paths according to the weight @xmath72 .",
    "( note that this weight is not equal to 1 since @xmath73 is generally complex . )",
    "this can be done for example using the metropolis method  @xcite .",
    "a random walk in the auxiliary - field space is simulated , such that the limit distribution of sampled paths is proportional to @xmath72 .",
    "this makes it possible to write @xmath74 as a ratio of monte carlo averages , @xmath75 } \\ , o[\\sigma,\\sigma ' ]     \\rangle_{\\sigma,\\sigma ' } }",
    "{ \\langle e^{-i\\ , { \\rm re}\\ , s[\\sigma,\\sigma ' ] } \\rangle_{\\sigma,\\sigma ' } } \\ ] ] where @xmath76 stands for the simulation average over auxiliary - field paths .",
    "a test of this approach has been carried out , showing that the term @xmath77 generally makes the ( averaged ) numerator and denominator of eq .",
    "( [ eq_metrop ] ) exceedingly small .",
    "unless this `` sign '' problem can be overcome , the standard metropolis method seems therefore to be inefficient in this context .",
    ", @xmath78 ) using a one - field per gate hubbard - stratonovich transformation , but we are confident that the `` sign '' problem is generic . ] since the weight of the paths in eq .",
    "( [ eq_expeco ] ) is complex ( this is at the heart of the sign problem ) a more promising possibility is the recourse to a simulation based on the complex langevin equation  @xcite . in the langevin algorithm ( see , _ e.g. _ , @xcite ) , paths distributed according to the `` complex probability distribution '' @xmath79 can be generated , allowing the computation of eq .",
    "( [ eq_expeco ] ) as a time average over a guided random walk for the fields in _ complex _ plane . in the case of interest here ,",
    "the random walk for field @xmath22 is the solution of the stochastic differential equation @xmath80 where @xmath81 is a fictitious time ( simulation time ) and @xmath82 is a ( real ) gaussian white noise satisfying @xmath83 and @xmath84 . the first term in the right - hand side of eq .",
    "( [ eq_langevin ] ) can be seen as a `` string '' force which keeps @xmath22 close to the value for which the action @xmath85 is minimum , while the `` noise '' term is responsible for the sampling of a region in auxiliary - field space around this extremum .",
    "although a general proof of the convergence of the complex langevin simulation does not exist  @xcite , it turns out to work very nicely for a number of systems ( the convergence is related to the location of the repulsive points of the langevin dynamics ) . the langevin simulation yields then a stochastic estimate of the output of the quantum computer , @xmath86\\ ] ] which is calculated by averaging @xmath87 $ ] for a sufficiently long random walk .",
    "using eq .",
    "( [ eq_action ] ) , the time derivative of the field @xmath22 can be written explicitly as @xmath88 + \\eta_g(t)\\ ] ] with @xmath89=    \\prod_{l=1}^l \\frac { \\langle 0_l | u^{\\dagger [ l]}[\\sigma ' ] \\ , p^{[l ] } \\ , d u^{[l]}[\\sigma]/d \\sigma_g \\ ,   | 0_l \\rangle } { \\langle 0_l | u^{\\dagger [ l]}[\\sigma ' ] \\ , p^{[l ] } \\ , u^{[l]}[\\sigma ] \\ , | 0_l \\rangle } \\ ] ] one single term @xmath90 differs from one in this product as only the 1-bit gate acting on qubit @xmath7 depends on @xmath22 [ see eqs .",
    "( [ eq_usigmatau2 ] ) and ( [ eq_usigmatau3 ] ) ] .",
    "one has @xmath91}[\\sigma]}{d\\sigma_g }   = \\prod_{g ' } { \\tilde u}_{g'}^{[a_g]}(\\sigma_{g'},\\tau_{g'})\\ ] ] with @xmath92}(\\sigma_{g'},\\tau_{g ' } )   = \\left\\ { \\begin{array}{l@{\\qquad}l } -i\\alpha_g a_g u_{g}^{[a_g]}(\\sigma_g,\\tau_g ) & { \\rm if~}g'=g \\\\ u_{g'}^{[a_g]}(\\sigma_{g'},\\tau_{g ' } ) & { \\rm otherwise } \\end{array } \\right.\\ ] ] the calculation of the derivative @xmath93 ( necessary to increment the fields along the random walk ) requires thus the estimate of @xmath94 $ ] which is of the same kind as expression  ( [ eq_osigma ] ) for the observable @xmath48 : rather than inserting the observable @xmath48 , one inserts the operator @xmath12 ( conjugate to the field @xmath22 ) at a specific point in the ordered product of propagators .",
    "the coupling in the time evolution of the fields is obvious from eq .",
    "( [ eq_explicitderiv ] ) .",
    "in particular , each pair of fields @xmath95 is strongly coupled through the first term in the right - hand side of eq .",
    "( [ eq_explicitderiv ] ) . indeed , combining eq .",
    "( [ eq_explicitderiv ] ) and its counterpart for @xmath23 , it is easy to see that the time - evolution of the field @xmath22 ( or , equivalently , @xmath23 ) is governed by a second - order differential equation of the type @xmath96 , supplemented with a drift term ( @xmath97 ) and a noise term ( @xmath82 ) in both the field @xmath22 and its velocity @xmath93 .",
    "the detail of the monte carlo algorithm for implementing the complex langevin simulation will be reported elsewhere . in short",
    ", the langevin algorithm proceeds essentially in two alternating steps : ( i ) for the current value of the fields , calculate @xmath48 and store it ; ( ii ) update the fields by calculating all their time - derivatives @xmath98 , using expression ( [ eq_r ] ) for estimating the @xmath97 s .",
    "the time - average of @xmath48 then yields the output of the quantum computation , the statistics being controlled by adjusting the length of the random walk .",
    "let us now discuss the scaling of the computational effort required to simulate a quantum algorithm , focusing on the quantum fft algorithm  @xcite used in shor s factoring algorithm as an illustration . since shor s algorithm has been described in details in the literature ( see , _",
    "e.g. _ , @xcite for a review ) , it will be sufficient to note that , after a certain number of computational steps , the quantum register is in a _ periodic _ superposition of states @xmath99 labeled by an integer between 0 and @xmath100 , the period being related to the sought factor of the composite number .",
    "the register is then subjected to a quantum fft , resulting in a probabilistic estimate of the period ( the probability of success can be made arbitrarily close to one by repeating the computation ) .",
    "the time - demanding task in the monte carlo simulation of the quantum fft is the update of the @xmath101 auxiliary fields .",
    "performing one step of the random walk in auxiliary - field space needs the computation of @xmath101 time - derivatives , requiring each the calculation of a single [ _ cf .",
    "( [ eq_dudsigma1 ] ) and ( [ eq_dudsigma2 ] ) ] one - bit matrix element ( involving a product of about @xmath102 non - unit @xmath103 matrices ) . thus ,",
    "since @xmath3 scales as @xmath104 for the quantum fft circuit , of the order of @xmath105 computation steps ( @xmath103 matrix multiplication ) are necessary to perform one step of the random walk . assuming that the number of steps necessary to achieve a given statistical error in the estimate of @xmath74 does not grow exponentially with @xmath3 ( the sign problem should be overcome and the auto - correlation time of the random walk should not be exponential in @xmath3 )",
    ", the total number of computation steps would be polynomial in @xmath1 .",
    "this does not rule out the possibility that , for a general quantum algorithm , the simulation effort might be _ polynomial _ in @xmath1 whenever the number of gates @xmath3 required in the quantum circuit is polynomial in @xmath1 .",
    "this is an open question .    as an example , we consider here a two - bit quantum fft , _",
    "i.e. _ , the quantum computation of the discrete fourier transform of a 4-point function ( see fig .  [ fig_fft ] ) .    0.25 cm    [ fig_fft ] -0.25 cm    the input qubits of the quantum register ( @xmath106 ) are labeled 0 ( and 1 ) for the least ( and most ) significant qubit .",
    "the two - bit quantum fft circuit  @xcite requires a single two - bit gate , a controlled - phase operator @xmath107 acting on qubits @xmath14 and @xmath15 , with @xmath108 and @xmath109 , and two additional one - bit gates @xmath110 and @xmath111 , with h being the hadamard transformation , @xmath112 the total unitary transformation is the ordered product @xmath113 . the two one - bit gates @xmath110 and @xmath111 can be incorporated into the two - bit gate , which can in turn be written in terms of field - dependent one - bit gates using the hubbard - stratonovich representation , yielding @xmath32 = u_0(\\sigma ) u_1(\\tau)$ ] , with @xmath114 for a simple test of the langevin algorithm , we consider here the fourier transform of a constant function , _",
    "i.e. _ the initial state is the product state @xmath115 .",
    "the complex action can then be simply expressed as @xmath116 depending on the 4 auxiliary fields @xmath33 , @xmath117 , @xmath62 , and @xmath118 .",
    "a straightforward calculation shows that the stochastic differential equations obeyed by the fields are @xmath119 the monte carlo simulation of these equations is easy to perform .",
    "( note that the fixed point of the langevin dynamics_i.e .",
    "_ , the path of minimum action  is @xmath120 , @xmath121 . )",
    "the resulting monte carlo averages for the 1-bit observables @xmath122 and @xmath123 converge to 1 , implying that the expectation value for the output register is @xmath124 , as expected ( the spectrum has a continuous component only ) .",
    "the simulation of larger quantum circuits using this technique is the subject of further work to be reported elsewhere .",
    "we have shown that a quantum computer can be treated as a genuine quantum many - particle system , and that this approach sheds new light on quantum computation .",
    "more specifically , the use of a quantum monte carlo method might be interesting when considering `` large '' quantum computers because of the polynomial scaling of the auxiliary - field space in the dimension of the problem .",
    "this advantage , however , is conditional on a circumvention of the monte carlo `` sign '' problem . in this respect ,",
    "the use of a langevin algorithm as a possibly efficient simulation technique is discussed .",
    "the stochastic simulation of quantum computation proposed here could be useful for at least two reasons : ( i ) it could help in devising actual quantum computers by avoiding the need for an explicit experimental realization to test a quantum algorithm ; ( ii ) it could give rise to a new class of `` quantum - inspired '' algorithms that could be implemented on an ordinary classical computer for solving certain computationally hard problems .",
    "we acknowledge c. adami for many helpful discussions . this work has been funded in part by the nsf under grant nos .",
    "phy 94 - 12818 and phy 94 - 20470 , and by a grant from darpa / aro through the quic program ( # daah04 - 96 - 1 - 3086 ) .",
    "g. parisi and y. s. wu , sci . sin . * 24 * , 483 ( 1981 ) ; g. parisi , phys .",
    "b131 * , 393 ( 1983 ) .",
    "j. r. klauder , phys .",
    "a * 29 * , 2036 ( 1984 ) .",
    "k. okano , l. schulke , and b. zheng , prog .",
    "phys . suppl . * 111 * , 313 ( 1993 ) .",
    "c. adami and s. e. koonin , _"
  ],
  "abstract_text": [
    "<S> the many - body dynamics of a quantum computer can be reduced to the time evolution of non - interacting quantum bits in auxiliary fields by use of the hubbard - stratonovich representation of two - bit quantum gates in terms of one - bit gates . </S>",
    "<S> this makes it possible to perform the stochastic simulation of a quantum algorithm , based on the monte carlo evaluation of an integral of dimension polynomial in the number of quantum bits . as an example , the simulation of the quantum circuit for the fast fourier transform is discussed .    1 cm </S>"
  ]
}
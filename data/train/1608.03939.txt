{
  "article_text": [
    "knowledge of a webserver s verified geographic location can provide greater assurance of the webserver s authenticity , and helps establish the legal jurisdiction under which the server resides , _ e.g.,_in case of disputes .",
    "the street address of a domain owner / operator is typically different than the location of the physical server hosting its content . if a server s geographic location is verified in realtime , a user - agent ( _ browser _ henceforth ) may , _",
    "e.g.,_by virtue of a pre - established privacy policy , refrain from proceeding with a connection knowing that the website is hosted from a suspicious location , or a jurisdiction lacking solid privacy laws .",
    "server authentication on the web is primarily achieved using http over ssl / tls ( or https ) and a distributed pki , albeit with questionable trust semantics .",
    "a long list of known problems in that architecture have been identified  @xcite , raising open - ended questions about the security of the status - quo  @xcite .",
    "this paper reinforces server authentication on the web , by weaving the server s physical location information into current authentication mechanisms .",
    "this helps mitigate server impersonation attacks such as phishing  @xcite , pharming  @xcite , and the use of rogue certificates  @xcite possibly after a ca compromise .    to achieve such location - based webserver authentication",
    ", we successfully address several challenges .",
    "for example , because of the increasing physical distribution of web content ( _ e.g.,_cloud computing environments , content distribution networks or cdns , distributed web - caching and proxy servers , load balancers , and p2p networks ) , the traditional server - client model where an http session is established entirely between a browser and a single physical server , and content is downloaded only from that server , is becoming less common .",
    "web content is often fetched from several physical / virtual servers , possibly not geographically collocated .",
    "how can useful location information be extracted from that context to provide assurance of the domain s authenticity ?",
    "another challenge is the lack of a practical mechanism for realtime server location verification .",
    "ip - based location determination is susceptible to location spoofing attacks  @xcite , making it unsuitable for authentication .",
    "offline location verification , _",
    "e.g.,_a certification authority ( ca ) verifying the server s location at the certificate - issuing time and binding the issued certificate to the server s location  @xcite , does not provide location assurance at time of later interaction with the server .",
    "additionally , such a solution would require the domain owner to obtain a certificate for each group of physically collocated webservers , which is impractical in both cost and complexity for large providers that may have thousands of servers around the world ( _ e.g.,_akamai @xcite ) . on the other hand , common delay - based ip geolocation schemes work in realtime , but are susceptible to delay manipulation attacks  @xcite .",
    "prior to the work herein , no known realtime server location verification mechanism that accounts for common adversarial location - forging tactics existed .    to tackle the aforementioned challenges , we introduce server location verification ( slv)a measurement - based realtime server location verification mechanism . using a network of distributed verifiers over the internet ,",
    "the goal of slv is to verify the geographic location of the first webserver with which the client has a tcp connection .",
    "we explain the design of slv , and implement a simple version that requires no server - side changes , which is thus readily deployable through a browser extension .",
    "we also test slv s efficacy from a location verification standpoint , and analytically evaluate its usage as an additional webserver authentication mechanism .",
    "the strong assurance slv provides to the geographic location of a server adds a new , beneficial dimension to the current notion of webserver authentication . comparing a server s location to its public key ( or certificate ) ,",
    "realtime location verification can be seen as analogous to browser certificate validation . as introduced herein , _",
    "server location pinning _ ( _ e.g.,_in the browser ) can also model key pinning  @xcite to further enhance server authentication .",
    "browsers can cross - check a server s verified location in a fashion similar to multipath probing  @xcite .",
    "a list of physical locations where a server is hosting its content from can be made publicly available for realtime consultation ( _ cf._list of active certificates  @xcite ) .",
    "existing certificate revocation primitives can be extended to _ revoke a location _ , _ e.g.,_if a data centre was relocated or if content is no longer distributed from a previous mirror .",
    "a domain may legitimately have multiple public keys ; primitives such as key pinning and certificate revocation address that by attempting to recognize whether an already validated certificate is authentic .",
    "likewise , adopting analogous primitives based on server location is compatible with legitimately distributing a domain s content from multiple geographic locations , _",
    "e.g.,_by pinning all such locations , or actively revoking obsolete locations .",
    "we make the following contributions to enhance server authentication on the web :    * conceptualizing for the first time how the idea of physical ( geographic ) location of a webserver can be incorporated as an additional dimension to strengthen server authentication , in a manner compatible with but independent of current ssl / tls standards ; * designing and implementing slv , a new measurement - based algorithm for server location verification , which in its simplest form requires no server - side changes nor human - user interactions , and evaluating its efficacy through pilot experiments using planetlab  @xcite ; * augmenting this new mechanism with _ browser - based server - location pinning_a primitive to enable browsers to establish location - based trust semantics over time .",
    "in addition to location - based server authentication , verified server location may provide evidence for services like cloud providers that their servers are in a particular country  @xcite , _",
    "e.g.,_with more favourable data privacy laws than others , thus gaining a competitive advantage . likewise , e - commerce service providers may benefit from assuring their clients that payments are processed in a country they expect or are comfortable with .",
    "the rest of this paper is organized as follows . section  [ sec : background ] reviews traffic hijacking tactics , characteristics of internet delay measurements , and the distributed nature of fetching web content .",
    "section  [ sec : threatmodel ] defines the threat model .",
    "slv is explained in section  [ sec : methodology ] , followed by server - location pinning in section  [ sec : pinning ] .",
    "section  [ sec : results ] empirically tests a prototype implementation of slv , and evaluates the presented location verification primitives using a server - authentication evaluation framework .",
    "further discussion is given in section  [ sec : discussion ] .",
    "we review related work in section  [ sec : relatedwork ] and conclude in section  [ sec : conclusion ] .",
    "this section reviews internet traffic hijacking mechanisms , the role of timing measurements in location inference , and mechanisms of content distribution over the internet .",
    "readers familiar with this background can proceed to section  [ sec : threatmodel ] .",
    "web traffic hijacking is an attack whereby the adversary impersonates the authentic domain , directing users requests to a machine under the adversary s control rather than one under the control of the domain owner .    *",
    "hijacking at different levels . * starting by the user initiating a connection to a domain over the internet , and moving down the tcp / ip protocol stack , traffic hijacking could be mounted at every point where a new network addressing scheme identifying the intended destination is introduced .",
    "such identifiers include the domain name , ip address , mac address , and the switch port that a machine is physically connected to .",
    "note that at higher layers of the protocol stack , the notion of an _ internet domain _ is abstracted , and can be viewed as a single entity . at lower layers ,",
    "that entity can become more distributed across multiple physical or virtual machines .",
    "references to an authentic / intended webserver or machine in what follows denote any such physical or virtual machines designated by the domain owner to store and offer the domain s services / content over the network .    misleading the user to visit a different ( visually similar or disguised ) domain name than the intended one is phishing  @xcite . because the identifier here differs at the highest addressing scheme ,",
    "subsequent identifiers , namely the ip address , mac and port connecting the fraudulent machine to the network , are expected to be different from that of the authentic webserver .",
    "similarly , a pharming attack  @xcite occurs by misleading the browser - consulted name resolver , which could be at any level in the dns hierarchical lookup procedure , to resolve the domain name to an ip address assigned to the adversary s machine .",
    "the requested domain name is thus equal to the intended one , but the ip address and the remaining identifiers are different from that of the intended machine(s ) .",
    "arp spoofing  @xcite and bgp spoofing  @xcite are examples of traffic hijacking , where an adversary misleads switches or routers respectively about the network location of the authentic webserver .",
    "both the domain name and ip address of the fraudulent machine are the same as that of the webserver , but the mac address is different .    finally , after the switch knows the mac address of the intended destination , it looks up its mac table for the physical port number where that machine is plugged . poisoning the switch s mac table  @xcite causes the adversary to deceive the switch into forwarding the data to the physical port where the adversary s machine is connected , thus hijacking traffic intended to the authentic machine .",
    "in such a case , the domain name , ip and mac addresses of the fraudulent machine match those of the authentic one , but the switch port number is different .",
    "this background is used later in the threat model , as summarized in table  [ sec : threatmodel ] .",
    "other on - route hijackings are also possible with other addressing schemes , such as in the spanning tree protocol ( stp )  @xcite , where switches are assigned ` bridgeids ` , or by other injection mechanisms  @xcite .    *",
    "hijacking versus mitm .",
    "* once traffic is hijacked , the adversary may itself open another back - end connection to the authentic domain as a regular user , to present the actual user with seemingly authentic responses and thus avoid exposure .",
    "the adversary thus becomes a man - in - the - middle ( mitm )  @xcite , relaying traffic between the user and the intended domain .",
    "our work herein addresses traffic hijacking in general , whether it is a _ hijack - and - host _ or _ hijack - and - relay _",
    "( mitm ) .    * the role of ssl / tls . * regardless of where in the network traffic hijacking occurs , https using ssl / tls with a browser - trusted certification authority ( ca ) is intended to give assurances about the identity of an authentic domain , aiming to prevent the adversary from _ successfully impersonating _ the authentic domain / webserver .",
    "such successful impersonation requires not only traffic hijacking , but also defeating tls protection mechanisms .    to successfully impersonate an https - enabled domain , the adversary either needs to hijack traffic at the highest addressing level  phishing  or at lower levels , which would also require other actions such as compromising a browser - trusted ca to bind the domain name to the adversary s private key , compromising the authentic domain s private key , or downgrading from https to http during the connection establishment time , _",
    "i.e.,_ssl stripping  @xcite .    while phishing should technically be the easiest to detect since all addresses identifying the adversary s machine differ from the authentic one , it remains effective as it relies on social engineering rather than technical manipulations .    for hijacking traffic at lower levels ( as noted above ) ,",
    "the internet s open pki system is subject to a single point of failure ; a single ca compromise could jeopardize the security of the entire system  @xcite .",
    "as such , the system is at most as secure as the weakest ca .",
    "various enhancing primitives have been proposed , such as certificate pinning  @xcite and multipath probing  @xcite , but these aim to strengthen the current pki system .",
    "in contrast , server location verification operates orthogonally as an independent webserver authentication dimension .",
    "other than a ca compromise , previous literature reports domain operators sharing their private keys among other constituents  @xcite , which corrupts the system s key mechanism of identity assurance .",
    "an adversary with access to the domain s private key need not compromise any ca to mount a successful impersonation attack ; this is undetectable by primitives such as key pinning .",
    "next , we review characteristics of internet delays , and their relationship to geographic locations over the internet .",
    "literature over the past decade confirms a strong correlation between internet delays and geographic distances  @xcite .",
    "although network routes are subject to many conditions that may impede such a correlation , like route circuitousness  @xcite and delay spikes due to possible network congestion , the strong correlation remains  @xcite .",
    "this is usually attributed to constantly improving network connectivity and bandwidth availability  @xcite .",
    "many networking applications have leveraged this correlation to achieve accurate ip geolocation over the internet  @xcite .",
    "a common approach is to derive functions that map delays to distances based on observing various network characteristics ( topology , latency , _ etc _ ) .",
    "the function is then used to map delays measured between multiple vantage points ( with known locations ) and the target ip address to geographic distances , thus constraining the region where the machine assigned that ip address is physically present .",
    "measurement - based location techniques can achieve high accuracy ( _ e.g.,_a few hundred meters  @xcite ) , for inferring geographic information from network measurements .",
    "cpv  @xcite ( see section  [ sec : relatedwork ] ) was the first measurement - based technique to verify _ client _ location assertions , addressing an adversarial client aiming to evade  @xcite geolocation or manipulate those techniques to its favour  @xcite .",
    "we review common methods used for dissemination and delivery of web content .    *",
    "content distribution networks ( cdn ) . *",
    "a cdn is a network of caching servers used to distribute web content efficiently .",
    "cdns , which have become quite popular , aim to offload the effort of managing and distributing content at large scale from the content owner .",
    "different techniques are used for managing content replication and redirecting browsers to the appropriate cdn surrogate server .",
    "liang _ et al . _",
    "@xcite note two common practices for browser redirection .",
    "the first rewrites the urls of objects ( scripts , images , _ etc _ ) to point to their location on the appropriate cdn server , _ e.g.,_using the ` src ` html attribute .",
    "for example , to instruct the browser to fetch ` image.gif ` from the cdn server , the webserver uses :    .... < img src=\"http://www.cdn - server.com / image.gif \" > ....    instead of    .... <",
    "img src=\"some - local - directory / image.gif \" > ....    the second practice resolves the website s domain name to the ip address of the respective cdn server , achieved either by a dns server under the cdn s administration configured as the authoritative name server for the original website , or by the website s dns server itself . in the first practice , the browser establishes http(s)/tcp connections with the original server first , and then with the cdn surrogate server ; in the second , the browser only contacts the cdn server without the need to contact the original server .",
    "* caching and proxy servers . *",
    "a caching server , sitting in the middle of the connection between the browser and the original webserver , terminates the tcp connection intended between client and webserver , and re - initiates another one with the webserver .",
    "when the caching server receives an http get request to a cached object , it sends a conditional get request to the original server that includes the header line ` if - modified - since ` specifying the date / version of the cached object .",
    "the server either responds with ` 304 not modified ` , or with the requested object if the cached version is stale .",
    "caching servers can be set up at any point along the communication path between client and webserver .",
    "for example , the network administrator could set up a caching server , and route network traffic to it to reduce external network usage .",
    "an isp could set - up caching servers to manage network congestion , and the website operator could also set up caching servers to reduce load on the main server .",
    "a non - caching proxy is sometimes also used , _",
    "e.g.,_for privacy purposes ; the tcp termination hides the client s ip address from the webserver .",
    "if the client configures its local machine to use a remote proxy , outbound packets have the proxy s ip address as their destination .",
    "* other schemes . * other content distribution schemes and legitimate browser ( re)directs /",
    "pointers also exist , such as browser - based ads , collocated load balancers , fast - flux servers ( see section  [ sec : relatedwork ] ) , authentication servers and p2p networks .",
    "these operate largely similar to the methods reviewed above ; we omit further discussion for space reasons .",
    "* adversary s objective .",
    "* the threat model assumes an adversary aiming to impersonate a webserver by hijacking its traffic .",
    "the adversary s typical goals are eavesdropping , or stealing a user s authentication credentials .",
    "* summary of hijacking mechanisms . * to define the scope of traffic hijacking mechanisms ( see section  [ sec : traffichijack ] ) included in the threat model , table  [ table : threats ] classifies them by the subset of adversary s machine identifiers that would be equal to that of the authentic machine in each mechanism .",
    "identifiers include the _ domain name _ , _",
    "ip address _ , _ mac address _ , and _ switch port number _ the machine is connected to ( note that table  [ table : threats ] is also used in section  [ sec : results ] ) .",
    "the hijacking level dictates whether an adversary needs to be on - route between the user and the intended destination . on - route hijacking , _ e.g.,_arp spoofing and mac table poisoning , need not necessarily be mounted at the destination network where the intended machine is connected ; it may occur at any intermediate network along the route .",
    "if hijacking is mounted at an intermediate network , the destination ip or mac addresses of the fraudulent machine would be equal to that of the router or switch respectively of the next hop along the route .",
    "( note that the _ levels _ in table  [ table : threats ] differ from the five tcp / ip _ layers _ of the protocol stack . )    on - route network hijacking requires the adversary to locally place itself in one of the intermediate networks , possibly by compromising a host or switch already part of that network .",
    "rows 1 - 3 in table  [ table : threats ] do not have that requirement .",
    "the _ identifier _ assigned to the hijacker s machine is either different from ( @xmath0 ) , or same as ( @xmath1 ) that of the intended destination or the next hop machine along the route ( @xmath2 ) .",
    "if the on - route hijacking occurs at the final destination network , then @xmath2are replaced with @xmath1[table : threats ]    * local versus global effect . * note that each hijacking mechanisms in table  [ table : threats ] may affect either a global or a local set of clients .",
    "for example , an adversary compromising the intended domain s authoritative dns server itself , can mount pharming attacks on essentially all clients visiting that domain ; on the other hand , spoofing local dns resolutions affects only a local subset of clients .",
    "if spoofed bgp prefix announcements propagate to large portions of the internet , they result in a global effect .",
    "otherwise , their effect is local to the set of affected networks . for on - route hijackings , the closer they are to the network of the intended destination , the more global their effect .",
    "for example , arp spoofing and mac table poisoning mounted within the local network of the intended destination will affect almost all visiting clients .",
    "* adversarial capabilities assumed . * the adversary is capable of hijacking traffic such that its fraudulent machine s ip address differs from that of the authentic webserver , _ i.e.,_table  [ table : threats ] s first two levels .",
    "this covers a set of local hijacking , including local pharming attacks .    for attacks where the fraudulent machine s ip address is equal to that of the authentic destination ( _ i.e.,_on the as , network and link levels of table  [ table : threats ] ) ,",
    "the threat models includes global hijacking attacks .",
    "this includes the 2008 pakistani telecom incident  @xcite and that of china telecom in 2010  @xcite .",
    "the threat model also encompasses low - level network hijacks , like arp spoofing and mac table poisoning , mounted within the local network of the intended destination as it will affect almost all visiting clients  see table  [ table : threats ] .",
    "the threat model excludes hijacking mechanisms that satisfy the following two conditions together ( the three cells without @xmath3 under _ local effect _ in table  [ table : threats ] ) : ( 1 ) they affect only a local subset of clients and ( 2 ) they are conducted on a level where the ip address of the fraudulent machine is equal to that of the intended one .",
    "an adversary mounting this class of hijacking can bypass location verification because the selected verifiers ( those used to verify a location , as explained in section  [ sec : methodology ] ) may not be affected by that locally - impactful traffic hijacking .",
    "thus , they might end up verifying the location of the authentic machine , as identified by the client - submitted ip address , vs.the fraudulent one .",
    "the mechanisms presented herein can provide further assurance to a webserver s identity in the absence of https .",
    "the threat model thus assumes an adversary that may or may not compromise the domain s ssl / tls server private key , or issue a fraudulent certificate possibly by compromising a browser - trusted ca .",
    "the model also addresses the case of an adversary that can mount ssl stripping attacks  @xcite to downgrade a connection , and generally other ssl / tls - related attacks .",
    "it is assumed that the verifiers are trusted to carry out and report delay measurements honestly .",
    "this section introduces the measurement - based server location verification ( slv ) technique .",
    "slv leverages generic delay measurement guidelines from previous literature to infer location information from timing analysis @xcite .",
    "it is custom - designed to verify internet webserver locations .",
    "* location assertion .",
    "* there exists no standard mechanism to enable a webserver to assert its geographic location to a browser , _",
    "e.g.,_no standard http headers convey that information . for deployability benefits , we rely on ip geolocation databases  @xcite for location assertions ( these assertions will be verified by slv ) , thus requiring no server - side changes nor any additional server involvement .",
    "these databases may occasionally have outdated or coarse - grained ip address location information ; webserver provision of an accurate location assertion , _",
    "e.g.,_through http headers , would thus be beneficial but comes at the cost of server - side changes .",
    "the design of slv allows alternate more reliable sources of location assertions .",
    "* location verification . *",
    "slv is designed to verify the geographic location of the first machine the browser establishes a tcp connection with .",
    "this is the machine assigned the ip address resulting from the domain name resolution .",
    "this enables slv to address all pharming attacks , regardless of where in the hierarchical lookup procedure an adversary may spoof the name resolution ; slv itself does not contact any dns systems for name resolutions . if the browser receives a spoofed ip address via dns due to a pharming attack , that ip address is the one passed to slv for verification .",
    "accordingly , a fraudulent ip address from a local pharming attack would be presented to slv for location verification .      ) ]    the system s architecture is shown in fig .",
    "[ fig : architecture ] . the slv _ manager",
    "is an independent server acting as an interface between a browser and the _ verifiers_. a verifier is a machine , _",
    "e.g.,_a virtual private or a cloud - based server , used to measure internet delays to a webserver as instructed by the _",
    "manager_. the _ manager _",
    "itself runs on top of a webserver , and has access to a list of distributed verifiers and their geographic locations . for efficiency , the _ manager _",
    "caches location verification results ; entries for a given ip address are cached for a configurable period ( _ e.g.,_a few hours ) , before expiring .",
    "algorithm [ algo : main ] details the location verification process ( see table  [ table : datatype : main ] for data structures used ) .",
    "when a user visits a website , the browser sends the resolved ip address ( the input @xmath4 in algorithm  [ algo : main ] ) of the website to the _ manager_. by the _ locate ( ) _ function in line  [ line : assert ] , the _ manager",
    "_  obtains the best available assertion of the server location ( the simplest case may involve using the server s ip address , _ e.g.,_using ip - to - location mapping databases  @xcite ) .",
    "the returned result serves as an unverified assertion of the server s location . the _ manager _  then checks for a cached verification result of that address ( see the ` result ` structure in table  [ table : datatype : main ] ) , and returns it to the browser if the location corresponding to the ip address has not changed since caching time ( _ e.g.,_the ip address was not assigned to another machine somewhere else ) .",
    "if no entry was cached , or the cached location is not equal to the newly asserted one , the _ manager",
    "_  begins location verification by selecting three verifiers geographically encompassing the asserted location ( line  [ line : selectv ] ) .",
    "each verifier measures the round - trip time ( rtt ) to the target webserver and to the other two verifiers ( line  [ line : rtt ] ) .",
    "rtts are not measured using standard icmp - based tools ; this avoids qos and routing policies at intermediate ases from artificially delaying or dropping probing messages , and other known problems of such techniques  @xcite . instead",
    ", the verifiers measure rtts over the application layer by initiating a tcp connection to the target server like a regular web client , and calculating the rtt from the ` syn``synack ` handshake .",
    "the verifiers conduct several rtt measurements , and send the smallest back to the _ manager_.    due to last - mile delays  @xcite , the delay - to - distance ratio is inflated near the edge networks of two communicating parties over the internet .",
    "such inflation occurs four times while measuring the rtts between a pair of verifiers and the webserver ( _ i.e.,_twice between each verifier and the webserver ) . on the other hand , rtts",
    "are inflated only twice when measured directly between a pair of verifiers .",
    "as such , we filter out the inflation factor by subtracting a value , @xmath5 , from the three rtt measurements between each verifier and the webserver . in practice ,",
    "the value of @xmath5 may be calibrated in realtime , _ e.g.,_as the average rtt between all verifiers in the region and their network gateway .",
    "extensive delay analysis in previous literature found the network edge causes a delay inflation equivalent to @xmath65ms  @xcite .",
    "we use this value in our prototype implementation ( see section  [ subsec : implementation ] ) .    after subtracting @xmath5 , the _ manager",
    "_  stores the delay information in a two - dimensional array @xmath7 , in line  [ line : rtt ] , such that @xmath8[i]$ ] is verifier @xmath9 s measured rtt between itself and entity @xmath10 ; @xmath10 is either another verifier or the target webserver .",
    "+    [ cols= \" < , < \" , ]      +    @c|ccl2 cm    struct&attribute & data type & description + & @xmath11 & ` ip_info ` & see `",
    "ip_info ` below + & @xmath12 & ` boolean ` & verification result + & @xmath13 & ` circle ` & verification granularity + & @xmath14 & ` timestamp ` & date and time of last verification + & @xmath15 & ` string ` & ip address _ e.g.,_1.2.3.4 \" + & @xmath16 & ` location ` & see ` location ` below + & @xmath17 & ` location ` & centre of a circle ( see ` location ` below ) + & @xmath18 & ` double ` & radius of the circle ( _ e.g.,_in km ) + & @xmath19 & ` double ` & latitude + & @xmath20 & ` double ` & longitude +    [ table : datatype : main ]    * geometric verification .",
    "* by thales theorem  @xcite , an inscribed triangle with one side being the diameter of the prescribing circle is a right - angled triangle , with the diameter its diagonal ( fig .  [ fig : thale : theory ] ) .",
    "slv verifies location assertions using this , where times are treated as distances consistently for a given pair of verifiers at a given instant in time ; the asserted location is positively verified if , for any of the three pairs of the selected verifiers , the sum of the squared rtts between each verifier and the target webserver does not exceed the square of the average rtt between the pair , _ i.e.,_@xmath21[ip])^2 + ( d[v2][ip])^2 \\leq \\left(\\frac{d[v1][v2]+d[v2][v1]}{2}\\right)^2\\ ] ]    ]    figure  [ fig : thale : us ] shows an example webserver encapsulated by a triangle determined by three verifiers .",
    "the webserver is inside the two circles whose diameters are delimited by verifiers @xmath22 $ ] and @xmath23 $ ] .",
    "if the measured rtts of one of those pairs of verifiers support the webserver s presence inside the respective circle , _ i.e.,_inequality ( [ equ : main ] ) above holds , this circle becomes the verification granularity .",
    "the _ manager _  then signs and sends the verification response to the browser , along with the centre and radius of the circle ( lines  [ line : centre ] and [ line : radius ] ) , and caches the result for that ip address .",
    "if the verification result is negative for all three circles , a new encompassing triangle determined by three different verifiers is selected .",
    "that process is repeated ( line  [ line : bigloop ] ) until ( a ) the location is positively verified , or ( b ) the verifiers of all triangles ( or a sufficient subset thereof ) encompassing the asserted location are exhausted . in our experiments",
    "( see section  [ sec : results ] ) , typically about four triangles suffice for this test . in ( b ) , a negative verification result is returned , and the granularity field ( @xmath13 ) is set to ` null ` ( line  [ line : null ] ) .",
    "the justification for a positive verification from a single triangle being deemed sufficient to pass location verification is that rtt delays have a lower bound restricted by the spanned geographic distance ( data flows in fibre at two - thirds the speed of light  @xcite ) .",
    "is geographically inside the circle determined by the pair @xmath22 $ ] , it follows from thales theorem ( see fig .  [",
    "fig : thale : theory ] ) that @xmath24 .",
    "similarly for the circle determined by @xmath23 $ ] . ]",
    "* caching . * for efficiency , the system employs two layers of caching : one at the browser and another at the _ manager_. the former is per browser instance , and is cleared when the browser process terminates .",
    "browser caching is useful as it helps when the user switches between tabs or refreshes a page .",
    "a cached entry is as simple as a tuple of @xmath25ip address , verification decision@xmath26 .",
    "note that results are cached by ip address , not domain name .",
    "thus , a page refresh that results in a different non - cached ip address upon resolving its domain causes the browser to resend the new ip address for verification .",
    "this makes the browser check the webserver s location if the domain s resolved ip address changes .",
    "the caching at the _ manager _  is more persistent .",
    "a cached entry is also addressable by ip address , but formatted differently as : @xmath25ip address , asserted location , verification date and time , verification result , centre , radius@xmath26 .",
    "the last two entries are the centre and radius of the circle delineating the verification granularity , if the location was positively verified , and ` null ` otherwise . because the _ manager _",
    "s caching is centralized , _ i.e.,_relative to the browsers local caching , a browser is likely to get an instant response from the _ manager _  as more verification requests to the _ manager _",
    "are made by an increasing number of relying clients .      in our prototype implementation ( see fig .  [",
    "fig : architecture ] ) , we used apache as our webserver , php for the _ manager _ , mysql for the _ manager _",
    "s caching , and java for the verifiers .",
    "the communication between _",
    "manager_and verifiers uses standard tcp sockets .",
    "the _ manager",
    "_  learns about the @xmath27 available verifiers using a simple csv - formatted file with @xmath27 lines and 3 entries per line : the verifier s ip address , its geographic latitude , and longitude .",
    "we used @xmath28 planetlab nodes as verifiers in our testing ( see section  [ sec : results ] ) , which were situated in the us . for ip address location lookups",
    ", we used the ipinfo db .",
    "* browser extension .",
    "* on the browser side , we implemented a mozilla firefox extension to submit the website s ip address to the _ manager _ , and process a response .",
    "we used jquery to receive verification results from the _ manager_asynchronously .",
    "verification responses are cached locally by the browser , independent of the caching layer on the _ manager _ , to avoid re - consulting the _ manager",
    "_  on page refreshes and tab - switches .",
    "the extension also implements server location pinning , as explained below .",
    "we introduce the idea of ( verifiable ) _ server location pinning _ , following the idea of certificate pinning  @xcite ; as such , we first quickly review certificate pinning .",
    "certificate pinning is one approach introduced in the ssl / tls ecosystem to reduce the user s required interpretation of cues and decision making , shifting that responsibility to the browser .",
    "a website s certificate is _ pinned _ ( or saved ) in the browser , such that future certificates presented by the website are cross - checked against the saved one , with non - matches typically raising suspicion .",
    "a domain s certificate can be pinned in the browser or in dns records  @xcite .",
    "a browser can pin certificates ( 1 ) automatically as the user browses the web , ( 2 ) when instructed by the server , _ e.g.,_through hpkp  @xcite , or",
    "( 3 ) when preloaded with pinned certificates . note that non - dns based methods ( 1 ) and ( 3 ) do not require server - side changes , and can thus be immediately deployed through browser extensions .",
    "we put forward the principle of server location pinning .",
    "a set of expected server locations ( _ e.g.,_geo - coordinates ) is saved locally ( by one of several means explained below ) by the user s browser for future cross checking . when a website is then visited and its location is verified ( see section  [ sec : methodology ] ) , the browser checks if the verified location falls within any of the pre - pinned regions .",
    "the action upon a failed check can then be handled by , _",
    "e.g.,_a pre - specified policy .",
    "such a policy might handle three possible pinning - validation outcomes , as we explain below : _ critical _ , _ suspicious _ and _ unsuspicious_. the policy mechanism is outside of the scope herein .",
    "however , a simple intuitive policy could instruct the browser to refrain from any connection with login forms or financial transactions in case of _ critical _ or _ suspicious _ outcomes ; in the absence of login forms and financial transactions , the browser drops the connection only in the case of a _",
    "critical _ outcome .",
    "since the geographic locations where a website is hosted from could change frequently for some websites ( _ e.g.,_due to different content distribution architectures as explained in section [ sec : background : fetching ] ) , server - side cooperation can provide the benefit of dictating which geographic locations should be pinned .",
    "this could be , for example , in the form of ( 1 ) a publicly queryable set of websites and their locations , which can also provide the benefit of quick location updates ; ( 2 ) realtime location pinning instructions possibly in the form of http headers created by the webserver itself ; and ( 3 ) incorporating server location updates into dns .",
    "these examples respectively can be viewed as conceptually analogous to trusted directories or online certificate status protocol ( ocsp ) @xcite , http public key pinning ( hpkp ) @xcite , and dns - based authentication of named entities ( dane ) @xcite in the ssl / tls ecosystem .     +    ll7 cm @xmath29 $ ] : & an array of pinned domain locations + @xmath30 : & domain in question + @xmath31 : & verification ` result ` of algorithm  [ algo : main ] +     + * goal * +  to enable the browser to establish location - based trust semantics over time .",
    "+    * location pinning algorithm .",
    "* locations are pinned as an array @xmath32 of the data structure shown in table  [ table : datatype : pinning ] .",
    "the array is referenced by the domain name ( @xmath33 ) .",
    "the attribute @xmath34 is an array of ip addresses that @xmath33 ( _ i.e.,_domain name ) has previously resolved to .",
    "@xmath35 is an array of geographic regions , each described as a centre and radius of a circle , where the domain name was verified to be hosted from .",
    "@xmath36 is the upper limit on the number of allowed server locations ( _ e.g.,_dictated by the domain operator ) .",
    "@lcl4 cm    attribute & data type & description + @xmath33 & ` string ` & the domain name + @xmath37 $ ] & ` ip_info ` & an array of the domain s saved ip addresses + @xmath38 $ ] & ` circle ` & an array of the domain s verified regions + @xmath36 & ` integer ` & upper limit on the number of allowed server locations + @xmath14 & ` timestamp ` & date and time of last verification + @xmath39 & ` timestamp ` & date and time of pinning +    [ table : datatype : pinning ]    algorithm [ algo : pinning ] details the server location pinning mechanism . when a location verification response is received from the slv _ manager _",
    "( see section [ sec : methodology ] ) , the browser first searches @xmath32 for a previously pinned location entry for the corresponding domain name . if none is found (",
    "line  [ nonfound ] ) , the browser either pins the domain s location if it was verified , or reacts to a _ suspicious _ outcome as specified by the policy if location verification fails . if a pinned location is found but location verification has failed , it is a _",
    "critical _ outcome .    assuming the browser had previously pinned server locations for that domain , and that the domain s ip address is verified ( line  [ twoconditionsmet ] ) , the browser checks if the domain s asserted location falls within any of the pinned regions for that domain .",
    "if it does , the browser either updates the ip address s corresponding stored geographic locations , or if the ip address was seen for the first time for that domain , adds it to the array of ip addresses corresponding to the domain name .",
    "if the asserted location does not fall within any of the pinned locations ( but was positively verified ) , the browser adds it to the pinned domain as a new region only if more regions are allowed for that domain ( line  [ addregion ] ) .",
    "otherwise , the new asserted location , despite being successfully verified , is classified as a _",
    "critical _ outcome .",
    "note this algorithm does not place any restrictions on the number of ip addresses allowed per domain .",
    "the restriction is only on the number of different geographic regions ( @xmath36 ) where content is initially provided . in practice",
    ", the value @xmath36 might be set and announced by each domain operator .",
    "we evaluate slv in two stages .",
    "first , we establish the conceptual validity of the measurement - based location verification technique itself from a networking perspective , by attempting to verify websites with known locations using a prototype implementation .",
    "second , we evaluate the benefits of combining this with server location pinning to augment server authentication mechanisms .      our pilot testing uses planetlab  @xcite , employing as verifiers 20 testbed nodes distributed in north america .",
    "we measure the false reject ( fr ) and false accept ( fa ) rates when using the described slv approach to verify server location assertions . as such , we test slv by verifying locations of servers in which we have available ground truth about their geographic locations .",
    "we followed the assumption that university websites are hosted on - campus  @xcite , thus we can use their posted street addresses as our approximation for their webserver locations . see below on verifying this assumption .",
    "note that regardless of the content - distribution scheme employed in practice by a website ( _ cf._section  [ sec : background : fetching ] ) , a browser always downloads content from one or more physical or virtual server(s ) .",
    "we focus here on slv s feasibility to provide measurement - based location assurance to the server currently being contacted ( as explained in section  [ sec : methodology ] ) , whether that server is standalone or part of a larger distribution network ( _ e.g.,_a cdn ) .",
    "university servers with known ground - truth locations thus suffice for our evaluation purpose .",
    "we randomly selected 94 university / college websites for testing , and excluded 11 of these that simple filtering found to be hosted by a cloud or a cdn , lacking ground truth knowledge of their true geographic locations .",
    "the filtering involved looking up from public registries , the as from which the domain is reachable . as table  [ sec :",
    "methodology ] shows , two of the 83 remaining domains were falsely rejected ; these both fell in a region deficient in verifiers .",
    "in exploring this , we found one involved verifier ( planetlab node ) which contributed to both frs was extremely slow , including in responsiveness to running commands / processes , thus presumably suffering technical problems . from this initial study , we know how to reduce the fr rate below 2.4% ( _ i.e.,_by testing the reliability of verifier nodes in advance ) , but reporting this initial result highlights the importance of a responsive and sufficient verification infrastructure .      to evaluate fas , the slv _ manager _",
    "was manually configured to select triangles not encapsulating the asserted locations , and far enough away to have the asserted location outside the three circles determined by each pair of verifiers , as explained in section  [ sec : methodology ] .",
    "the expectation is that the false location assertion will be correctly _",
    "rejected_. four triangles were randomly chosen for each tested domain .",
    "the verifiers determining each of four triangles must reject presence inside the respective circles for a reject decision to result ; the parameter four was empirically determined , and is subject to adjustment .",
    "again , domains were chosen randomly from among those for which we had ground truth knowledge of webserver location .",
    "one hundred domains were chosen in the following manner : 40 in europe , 20 in eastern asia , 20 in latin america , and 20 in oceania . as summarized in table  [",
    "sec : methodology ] , none of the tested domains was falsely accepted .",
    "the false accept rate of 0% is not intended to claim perfection , but rather is an artifact of limited preliminary testing .",
    "@lc1cmc1cmc1cmc1.5cm@ & total & accepted & rejected & fr / fa + true assertions & 83 & 81 & 2 & 2.4% fr@xmath40 + false assertions & 100 & 0 & 100 & 0% fa +    @xmath40see inline for an explanation of the results [ table : results ]      table  [ tab : prims ] uses a webserver - authentication evaluation framework almost identical ( in columns ) to that developed by clark _",
    "_  @xcite .",
    "the column headers show the evaluation criteria , and the rows are the enhancement primitives .",
    "* baseline https .",
    "* to identify new benefits relative to the standard https defense mechanism , we first evaluate https itself as a baseline for comparison .",
    "row 0 was not required in the work of clark _",
    "et al . _",
    "@xcite , which specifically evaluated ssl / tls - enhancements . in our row 0 , all comparative evaluation criteria , such as _ no new trusted entity _ and _ no extra third party _ , are relative to regular http ( non - https ) ; the other rows are rated relative to row 0 .",
    "https provides the first three security properties in table  [ tab : prims ] but only partially , in light of the recent community awareness of critical https weaknesses and real - world attacks  @xcite .",
    "the attack surface includes ca compromise , ssl stripping , implementation vulnerabilities , misconfiguration , and reliance on users to make security decisions .",
    "basic https relies on trusting cas and signed certificates for server authentication , and thus lacks bullets at _ no new trusted entity _ and _ no new authn tokens_. while not introducing new traceability avenues , it does not _ reduce _ traceability because revocation methods , such as ocsp responders , are still required for revocation .",
    "it requires servers to obtain certificates , thus lacks _ no server - side changes_. finally , https lacks all three usability properties relative to http .",
    "* for the security properties , slv ( row 1 ) provides both the benefit of detecting global mitm attacks , regardless of how the adversary hijacks traffic ( recall section  [ sec : traffichijack ] ) , and of detecting a subset of local hijacks ( column 2 in table  [ tab : prims ] ) , including local pharming attacks . as noted in section  [ sec : threatmodel ] , if a local arp spoofing or local bgp prefix hijacking occurs , the selected verifiers will not be affected and will thus attempt to verify the location of a machine that is different from the fraudulent one communicating with the client .",
    "leaking client credentials ( column 3 ) and tls stripping ( column 5 ) require the adversary to conduct traffic hijacking first , and slv provides partial protection if that hijacking was locally conducted ( column 2 ) .",
    "thus , slv offers a partial benefit ( @xmath41 ) in both situations .",
    "the _ affirms post - to - https _ benefit prevents submitting post requests over http ; slv does not provide that benefit .    in terms of the impact to https ,",
    "no new authentication tokens are introduced by slv since the verification results are sent to requesting clients automatically and in realtime . for deployability , slv with assertions based on ip - address to location lookup tables requires no server - side changes , and can be deployed without dnssec .",
    "it provides the benefit of _ internet scalable _ because the location verification process is fully automatable ( unlike , _",
    "e.g.,_certificate preloading , where requests are manually reviewed  @xcite ) .",
    "however , the benefit is graded as only partial because the required verification infrastructure , such as the verifiers , grows as the need for location verification increases .",
    "finally , slv provides the benefit of signalling the status completely because all browsed servers locations are sent to the _",
    "manager_(see section  [ sec : methodology ] ) for verification , _",
    "i.e.,_server participation is not optional .",
    "note that the nature of communication between a browser and the slv _ manager _  is similar to that of the ssl multipath probing primitive  @xcite , and thus their beneficial properties ( row 6 ) are similar ( _ cf . _  @xcite ) .",
    "* location pinning alternatives .",
    "* server location pinning is conceptually similar to key / certificate pinning , and thus any of the four methodologies ( see rows 2 - 5 in table  [ tab : prims ] ) could be adopted for the server s location .",
    "for example , just as public keys could be pinned with dns records , servers geographic locations can be likewise .",
    "in fact , the dnsloc records were proposed experimentally in 1996  @xcite for non - adversarial location assertion purposes . in conclusion ,",
    "evaluation outcomes of location pinning primitives are similar to those of key pinning ( _ cf .",
    "_  @xcite ) .",
    "note that the benefits _ no new entity _ , _ no new traceability _",
    ", _ no new authentication tokens _ , and _ no extra third party _ are provided by ( some of ) the location pinning primitives , but not slv ( row 1 ) . for example , for _ no new traceability _",
    ", the pinning process itself , including checking verification results against already pinned locations , does not introduce new traceability ( _ e.g.,_if the location verification results were already cached ) .",
    "an analogous argument applies to the remaining three benefits .",
    "* list of expected locations .",
    "* domain owners can maintain a publicly accessible list of geographic locations where a client should expect the server offering their content .",
    "this is analogous to maintaining a _ list of active certificates _",
    "@xcite ( _ e.g.,_certificate transparency  @xcite ) to facilitate revocation simply by removing the revoked certificate from the list , and may thus aid in location revocation .",
    "when ssl / tls is not available for a domain , _ e.g.,_if not supported or because of an ssl stripping attack , the location verification mechanism presented herein offers an important means ( independent of ssl / tls ) for detecting fraudulent server authentication .",
    "nonetheless , verified location information is best combined with ssl / tls , to provide an additional authentication dimension .",
    "this becomes especially useful in cases where certificate validation is suspicious , _",
    "e.g.,_when the browser is presented a self - signed certificate , an insecure / outdated cipher suite , or an https page with mixed content  @xcite .    the tree diagram in fig .",
    "[ fig : tree ] shows how location - based server authentication can complement ssl to reduce the likelihood of successful attacks .",
    "the dashed lines indicate parts contributed by the presented primitives ; they highlight scenarios where traffic hijacking and/or mitm may go undetected without slv , but would instead be mitigated if slv is used .    from a user s perspective , we believe that , even without requiring any new user actions , it can be useful for some users to see in which country a server is located  whether this information is verified by slv or just asserted by any browser plugin , _ e.g.,_flagfox ( see section  [ sec : relatedwork ] ) . in a phishing attack ,",
    "if the adversary obtains a valid certificate for a spoofed domain , standard visual browser cues will show green locks , and positively assuring symbols  @xcite .",
    "a country s flag or a displayed world map will however differ from expectations ( _ i.e.,_when the adversary s fraudulent machine is hosted remotely )",
    ". there may be higher potential to attract user notice when such a location indicator conveys intuitively meaningful information ( _ e.g.,_the country flag or city where the server is ) rather than cryptic symbols  a green lock , or an exclamation mark on a grayed out triangle , _",
    "etc_. this case is similar to that where a browser - trusted ca is compromised and no certificates are pinned for the victim domain . on the other hand , location verification provides that missing benefit of signaling such an adversarial situation using an intuitively meaningful visual cue ; _ e.g.,_the browser will either display an unexpected flag if the asserted country is different from that of the authentic server , or depending on implementation choices , show a struck out flag in case the location fails verification .    , from the server s perspective , phishing is a class of traffic hijacking .",
    "dashed lines indicate attacks detected only by the new mechanisms presented herein.,scaledwidth=45.0% ]    note that several useful features can be built on top of server location verification .",
    "for instance , slv can benefit from a policy - based mechanism  @xcite that customizes how a browser automatically handles various transactions based on their location  @xcite .",
    "an instruction could be of the form _ allow credit card transactions only at this set of countries _ or _",
    "deny email logins in that set of locations_. this may also help control fraud and deter phishing attacks , ideally requiring no new user actions or decisions whatsoever . also , any of several known mechanisms could be employed to help the system s scalability and efficiency ( _ cf._@xcite ) . for example , the verifiers ( acting as regular clients ) could proactively measure delays periodically ( e.g. , to high - runner websites ) to reduce verification time .",
    "* geopki . *",
    "geopki @xcite is a location - aware pki system that associates certificates to geographic _ spaces _ , _ e.g.,_land or property boundaries .",
    "a certificate contains a high granularity definition of the space to which it is associated .",
    "this could be in the form of gps coordinates along with lateral and longitudinal distances that accurately delineate the space boundaries . to claim a space ,",
    "the owner submits their space - defined certificate ( self - signed or ca - signed ) to a public log ( _ e.g.,_similar to certificate transparency @xcite ) , and monitors the log to detect any other entity claiming ownership of their space . to validate a space ownership ,",
    "geopki relies on ca - issued extended validation ( ev ) certificates , associated to a real world street address .",
    "an attacker would thus need to either compromise a ca to issue an ev certificate to tie its public key to the fraudulently - claimed space , or forge legal documents proving such ownership .",
    "the goals and threat model of geopki differ from those we address herein .",
    "geopki provides no indication or assurance of the location of the actual server a client is connected to .",
    "additionally , no realtime location verification mechanism is involved , thus a compromised ca remains a threat .",
    "with slv , compromising a ca alone is insufficient ; the attacker must also evade slv to succeed in a mitm attack .",
    "* client presence verification . *",
    "cpv  @xcite verifies geographic location claims of internet _",
    "clients_. client locations are corroborated based on triangular _ areas _ derived from delay measurements .",
    "while this enables cpv to verify client locations with high granularity , its verification process suffers occasional triangular inequality violations ( tivs )  @xcite .",
    "in contrast , while slv selects verifiers forming triangles , it does not verify server presence within them , nor use triangular areas ; its use of thales s theorem avoids tivs entirely , and reduces the number of delay measurements required between verifiers and the webserver .",
    "slv also provides assurance to clients about _",
    "server _ locations ( note that servers and clients differ fundamentally in many factors , including that a third party location verification service provider can easily get clients to run code , _ e.g.,_using javascript as cpv does ; this is not applicable when verifying geographic locations of webservers ) .    * geolocating fast - flux servers . *",
    "delay - based geolocation of fast - flux hidden webservers has been proposed  @xcite ; hidden behind proxies , their ip addresses are not known to the client .",
    "when geolocating a webserver , the geolocation service provider can first detect that the webserver is hidden behind a proxy by noticing a large difference between the rtts measured on the network layer ( _ e.g.,_using ` ping ` ) and the application layer ( _ e.g.,_using an http get ) . to estimate the hidden server s location , a group of landmarks measure application layer rtts to the server , which are then used to obtain rough estimates to the direct rtts between the landmarks and the hidden server ( excluding the proxy ) .",
    "the rtts are then mapped to distances to constrain the region of the hidden server relative to the landmarks @xcite .",
    "such a geolocation mechanism aims at disclosing an inconsistency between the geographic location of the sever terminating the tcp connection and the one processing http requests .",
    "slv does not attempt to determine webserver locations , but rather verifies the plausibility of the webserver within an asserted region .",
    "while attempts to evade slv may include hiding the attacker s ip address behind a proxy , slv handles that attack differently  it reports that the asserted location ( that of the ip address seen by the client ) is not verified",
    ".    * flagfox extension .",
    "* flagfox is an example firefox extension that looks up the countries of webserver ip addresses as a user browses the internet , and displays the country flag in the url bar .",
    "the flag is based on the tabulated location of the ip address , not the country tld in the domain name .",
    "flagfox uses maxmind s ip database for geolocation , and does not employ any location verification mechanism . since locations obtained by tabulation - based techniques are falsifiable  @xcite , _ e.g.,_by the ip address owner , they are unreliable in adversarial environments . for instance , an adversary aiming to impersonate the university of tennessee s website ( _ e.g.,_through phishing , pharming or a mitm attack ) could register the ip address assigned to its malicious webserver to be in knoxville , tennessee .",
    "indeed , a previous study  @xcite found that most of google s ip addresses are reported by the american registry for internet numbers ( arin ) to be physically located in mountain view , california ; such clearly incorrect assertions have been proven wrong  @xcite .",
    "the server location verification mechanism detailed herein does not conflict with the web s growing trend of distributed content dissemination and geographically diverse replicated caching .",
    "the initial front - end server to which a client connects is the port of entry to the distribution infrastructure , if one is being used ; paying more attention to that server , _",
    "e.g.,_by verifying its physical presence in a known / expected geographic location as explained herein , provides information often relevant to the target domain s authenticity .",
    "thus , slv works regardless of the distribution and architecture of such infrastructure .",
    "additionally , depending on a client s location , a finite set of @xmath42 such  ports of entry \" are typically expected for any single domain , and that set is often stable .",
    "pinning several server locations ( see section  [ sec : pinning ] ) is thus beneficial for new and verified locations .    despite efforts from the security community to address shortcomings in the ssl / tls ecosystem , pki compromise still admits mitm attacks , _",
    "e.g.,_due to slow or non - adoption of primitives like key pinning , or user inability to reliably react to visual browser cues .",
    "the proposals herein constitute a new and parallel server authentication dimension augmenting ssl / tls ( _ e.g.,_comparable to client multi - factor authentication ) , relying not on the standard _ something you have _ principle ( namely , the server private key ) , but in addition _ where you are_. while the general notion of location - based authentication is known , the novelty herein is the measurement - based mechanism itself which verifies server locations in realtime , in a manner compatible with ssl / tls authentication , and without requiring human - user involvement in decision making .    to mount a successful mitm attack when slv is used ,",
    "the adversary must , in addition to compromising the ssl / tls infrastructure , co - locate its malicious ( possibly virtual ) machine in the geographic vicinity of the authentic one .",
    "this places a heavy set of burdens , including an attack customized to the location of each target server .",
    "a mechanism like slv thus compels the adversary to make a true assertion about the location of its fraudulent servers , both divulging the fraudulent servers true geographic location , and forcing the adversary to operate in the geographic vicinity of the authentic webserver  often a region in a more familiar country , or with more favourable laws and accountability measures .",
    "slv leverages established networking principles that location information can be inferred from timing measurements , and existing methodological guidelines for use of timing measurements to achieve server location verification . while large - scale evaluation of slv s verification process is not the main focus of this paper , preliminary experiments highlight the algorithm s efficacy in verifying webservers geographic locations , by means immediately deployable through a browser extension without requiring webserver modifications .",
    "the second author acknowledges funding from the natural sciences and engineering research council of canada ( nserc ) for both his canada research chair in authentication and computer security , and a discovery grant .",
    "y.  li , s.  chu , and r.  xiao , `` a pharming attack hybrid detection model based on ip addresses and web content , '' _ optik - international journal for light and electron optics _ ,",
    "126 , no .  2 ,",
    "pp . 234239 , 2015 .",
    "n.  vratonjic , j.  freudiger , v.  bindschaedler , and j .-",
    "hubaux , `` the inconvenient truth about web certificates , '' in _ economics of info sec and priv iii_.1em plus 0.5em minus 0.4emspringer , 2013 , pp .",
    "79117 .",
    "b.  chun , d.  culler , t.  roscoe , a.  bavier , l.  peterson , m.  wawrzoniak , and m.  bowman , `` planetlab : an overlay testbed for broad - coverage services , '' _ acm sigcomm comput .",
    "_ , vol .",
    "312 , 2003 ."
  ],
  "abstract_text": [
    "<S> we introduce the first known mechanism providing realtime server location verification . </S>",
    "<S> its uses include enhancing server authentication ( _ e.g.,_augmenting tls ) by enabling browsers to automatically interpret server location information . </S>",
    "<S> we describe the design of this new measurement - based technique , server location verification ( slv ) , and evaluate it using planetlab . </S>",
    "<S> we explain how slv is compatible with the increasing trends of geographically distributed content dissemination over the internet , without causing any new interoperability conflicts . </S>",
    "<S> additionally , we introduce the notion of ( verifiable ) _ server location pinning _ within tls ( conceptually similar to certificate pinning ) to support slv , and evaluate their combined impact using a server - authentication evaluation framework . </S>",
    "<S> the results affirm the addition of new security benefits to the existing ssl / tls - based authentication mechanisms . </S>",
    "<S> we implement slv through a location verification service , the simplest version of which requires no server - side changes . </S>",
    "<S> we also implement a simple browser extension that interacts seamlessly with the verification infrastructure to obtain realtime server location - verification results . </S>"
  ]
}
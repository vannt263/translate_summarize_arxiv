{
  "article_text": [
    "_ graph games and multi - objectives .",
    "_ two - player games on graphs are central in many applications of computer science . for example",
    ", in the synthesis problem , implementations of reactive systems are obtained from winning strategies in games with a qualitative objective formalized by an @xmath1-regular specification  @xcite . in these applications ,",
    "the games have a qualitative ( boolean ) objective that determines which player wins .",
    "on the other hand , games with quantitative objective which are natural models in economics ( where players have to optimize a real - valued payoff ) have also been studied in the context of automated design  @xcite . in the recent past",
    ", there has been considerable interest in the design of reactive systems that work in resource - constrained environments ( such as embedded systems ) .",
    "the specifications for such reactive systems are quantitative , and give rise to quantitative games . in most system design problems , there is no unique objective to be optimized , but multiple , potentially conflicting objectives .",
    "for example , in designing a computer system , one is interested not only in minimizing the average response time but also the average power consumption . in this work",
    "we study such multi - objective generalizations of the two most widely used quantitative objectives in games , namely , _",
    "mean - payoff _ and _ energy _ objectives  @xcite .",
    "_ multi - mean - payoff games . _ a _ multi - mean - payoff game _ is played on a finite weighted game graph by two players .",
    "the vertices of the game graph are partitioned into positions that belong to player  @xmath2 and positions that belong to player  @xmath3 .",
    "edges of the graphs are labeled with @xmath4-dimensional vectors @xmath5 of integer values , i.e. , @xmath6 .",
    "the game is played as follows .",
    "a pebble is placed on a designated initial vertex of the game graph .",
    "the game is played in rounds in which the player owning the position where the pebble lies moves the pebble to an adjacent position of the graph using an outgoing edge .",
    "the game is played for an infinite number of rounds , resulting in an infinite path through the graph , called a play .",
    "the value associated to a play is the mean value in each dimension of the vectors of weights labeling the edges of the play .",
    "accordingly , the winning condition for player  1 is defined by a vector of rational values @xmath7 that specifies a threshold for each dimension .",
    "a play is winning for player  @xmath2 if its vector of mean values is at least  @xmath8 .",
    "all other plays are winning for player  @xmath3 , thus the game is zero - sum .",
    "we are interested in the problem of deciding the existence of a winning strategy for player  @xmath2 in multi - mean - payoff games .",
    "in general infinite memory may be required to win multi - mean - payoff games , but in many practical applications such as the synthesis of reactive systems with multiple resource constraints , the multi - mean - payoff games with finite memory is the relevant problem . also they provide the framework for the synthesis of specifications defined by mean - payoff conditions  @xcite , and the synthesis question for such specifications under _ regular ( ultimately periodic ) _ words correspond to multi - mean - payoff games with finite - memory strategies .",
    "hence we study multi - mean - payoff games both for general strategies as well as finite - memory strategies .",
    "_ multi - energy games . _ in multi - energy games , the winning condition for player  1 requires that , given an initial credit @xmath9 , the sum of @xmath10 and all the vectors labeling edges up to position @xmath11 in the play is nonnegative , for all @xmath12 . the decision problem for multi - energy games asks whether there exists an initial credit @xmath10 and a strategy for player  1 to maintain the energy nonnegative in all dimensions against all strategies of player  2 .    _ contributions . _ in this paper , we study the strategy complexity and computational complexity of solving multi - mean - payoff and multi - energy games .",
    "the contributions are as follows .",
    "first , we show that multi - energy and multi - mean - payoff games are determined when played with finite - memory strategies . when considering finite - memory strategies , those games correspond to the synthesis question with ultimately periodic words , and they enjoy pleasant mathematical properties like existence of the limit of the mean value of the weights .",
    "we also establish that multi - energy and multi - mean - payoff games are not determined for memoryless strategies .",
    "additionally , we show for multi - energy games determinacy under finite - memory coincides with determinacy under arbitrary strategies , and each player has a winning strategy if and only if he has a finite - memory winning strategy . in contrast , we show for multi - mean - payoff games that determinacy under finite - memory and determinacy under arbitrary strategies do not coincide .",
    "moreover , for multi - mean - payoff games when the strategies for player  1 is restricted to finite - memory strategies , the winning set for player  1 remains unchanged irrespective of whether we consider finite - memory or infinite - memory counter strategies for player  2 .",
    "second , we show that under the hypothesis that both players play either finite - memory or both play memoryless strategies , the decision problems for multi - mean - payoff games and multi - energy games are equivalent .",
    "third , we study the computational complexity of the decision problems for multi - mean - payoff games and multi - energy games , both for finite - memory strategies and the special case of memoryless strategies .",
    "our complexity results can be summarized as follows .",
    "( a )  for finite - memory strategies , we provide a nondeterministic polynomial - time algorithm for deciding negative instances of the problems .",
    "thus we show that the decision problems are in conp .",
    "this significantly improves the complexity as compared to the expspace algorithm that can be obtained by reduction to vass ( vector addition systems with states )  @xcite .",
    "furthermore , we establish a conp lower bound for these problems by reduction from the complement of the 3sat problem , hence showing that the problem is conp - complete .",
    "( b )  for the case of memoryless strategies , as the games are not determined , we consider the problem of determining if player 1 has a memoryless winning strategy .",
    "first , we show that the problem of determining if player 1 has a memoryless winning strategy is in np , and then show that the problem is np - hard even when the weights are restricted to @xmath13 and in dimension  @xmath3 .    finally , we study the computational complexity of multi - mean - payoff games for infinite - memory strategies .",
    "our complexity results are summarized as follows .",
    "( a )  we show that multi - mean - payoff games with mean - payoff - sup objectives can be decided in np @xmath0 conp ( in the same complexity as for games with single mean - payoff objectives ) .",
    "moreover , we also show that if mean - payoff games with single mean - payoff objective can be solved in polynomial time , then multi - mean - payoff games with mean - payoff - sup objectives can also be solved in polynomial time .",
    "( b )  multi - mean - payoff games with mean - payoff - inf objectives are conp - complete .",
    "( c )  finally , we show that multi - mean - payoff games with combination of mean - payoff - sup and mean - payoff - inf objectives are also conp - complete .    in summary , our results establish optimal computational complexity results for multi - mean - payoff and multi - energy games under finite - memory , memoryless and infinite - memory strategies",
    ".    _ related works .",
    "_ mean - payoff games , which are the one - dimension version of our multi - mean - payoff games , have been extensively studied starting with the works of ehrenfeucht and mycielski in  @xcite where they prove memoryless determinacy for these games .",
    "because of memoryless determinacy , it is easy to show that the decision problem for mean - payoff games lies in np  @xmath0  conp , but despite large research efforts , no polynomial time algorithm is known for that problem .",
    "a pseudo - polynomial time algorithm has been proposed by zwick and paterson in  @xcite , and improved in  @xcite .",
    "the one - dimension special case of multi - energy games have been introduced in  @xcite and further studied in  @xcite where log - space equivalence with classical mean - payoff games is established .",
    "multi - energy games can be viewed as games played on vass ( vector addition systems with states ) where the objective is to avoid unbounded decreasing of the counters .",
    "a solution to such games on vass is provided in  @xcite ( see in particular lemma 3.4 in  @xcite ) with a pspace algorithm when the weights are @xmath13 , leading to an expspace algorithm when the weights are arbitrary integers .",
    "we drastically improve the expspace upper - bound by providing a conp algorithm for the problem , and we also provide a conp lower bound even when the weights are restricted to @xmath13 .",
    "finally the work in  @xcite considers multi - dimension energy games with fixed initial credit , as well as variants of energy games with upper and lower energy bounds .",
    "* well quasi - orders . * a relation @xmath14 over a set",
    "@xmath15 is a _",
    "well quasi - order _ if the following conditions hold : @xmath16  @xmath14 is transitive and reflexive , and @xmath17  for all @xmath18 , there exist @xmath19 such that @xmath20 and @xmath21 . it is known that @xmath22 is a well quasi - order and that the cartesian product of two well quasi - ordered sets is a well quasi - ordered set  @xcite .",
    "* multi - weighted two - player game structures . * a _ multi - weighted two - player game structure _ ( or simply a _ game _ ) is a tuple @xmath23 where @xmath24 , and @xmath25 ( @xmath26 ) is the finite set of player-@xmath11 states ( we denote by @xmath27 the state space ) , @xmath28 is the set of edges such that for all @xmath29 , there exists @xmath30 such that @xmath31 , and @xmath32 is the multi - weight labeling function .",
    "the parameter @xmath33 is the _ dimension _ of the multi - weights .",
    "the game @xmath34 is a _ one - player _ game if @xmath35 . the subgraph of @xmath34 induced by a set @xmath36 is @xmath37 .",
    "note that @xmath38 is a game structure if for all @xmath39 , there exists @xmath40 such that @xmath31 .    a _ play _ in @xmath34 from an initial state @xmath41 is an infinite sequence @xmath42 of states such that @xmath43 @xmath44 , and @xmath45 @xmath46 for all @xmath47 .",
    "the _ prefix _ of length @xmath48 of @xmath49 is the finite sequence @xmath50 , its last element @xmath51 is denoted  @xmath52 and its length  @xmath53 .",
    "the set of all plays in @xmath34 is denoted @xmath54 .",
    "the _ energy level vector _ of a play prefix @xmath55 is @xmath56 , and the _ mean - payoff vectors _ of a play @xmath42 are defined as follows ( in dimension @xmath57 ) : @xmath58 , and @xmath59 .",
    "* strategies . *",
    "a _ strategy _ of player  @xmath11 ( @xmath60 ) in  @xmath34 is a function @xmath61 such that @xmath62 for all @xmath63 and all @xmath64 .",
    "a play @xmath65 is _ consistent _ with a strategy @xmath66 of player  @xmath11 if @xmath67 for all @xmath68 such that @xmath69 .",
    "the _ outcome _ from a state @xmath70 of a pair of strategies , @xmath71 for player  1 and @xmath72 for player  2 , is the ( unique ) play from @xmath70 that is consistent with both @xmath71 and @xmath72 .",
    "we denote @xmath73 this play .",
    "we denote by @xmath74 the _ strategy tree _ obtained as the unfolding of the game @xmath34 from @xmath70 when strategy @xmath66 is used .",
    "the nodes of this tree are all prefixes of the plays from @xmath70 that are consistent with the strategy @xmath66 of player  @xmath11 .",
    "a strategy @xmath66 for player  @xmath11 uses _ finite - memory _ if it can be encoded by a deterministic moore machine @xmath75 where @xmath76 is a finite set of states ( the memory of the strategy ) , @xmath77 is the initial memory state , @xmath78 is an update function , and @xmath79 is the next - action function .",
    "if the game is in a player-@xmath11 state @xmath64 and @xmath80 is the current memory value , then the strategy chooses @xmath81 as the next state and the memory is updated to @xmath82 .",
    "formally , @xmath83 defines the strategy @xmath84 such that @xmath85 for all @xmath63 and @xmath64 , where @xmath86 extends @xmath87 to sequences of states as usual .",
    "the strategy is _ memoryless _ if @xmath88 .",
    "given an initial state @xmath70 and a finite - memory strategy @xmath66 of player  @xmath11 , let @xmath89 be the graph obtained as the product of @xmath34 with the moore machine defining @xmath66 , with initial vertex @xmath90 and where @xmath91 is a transition in the graph if @xmath92 , and either @xmath64 and @xmath93 , or @xmath94 and @xmath31 .    * objectives . *",
    "an _ objective _ for player  @xmath2 in @xmath34 is a set of plays @xmath95 . given a game @xmath34 , an initial state @xmath96 , and an objective @xmath97",
    ", we say that a strategy @xmath71 is _ winning _ for player  1 from @xmath96 if for all plays @xmath98 from @xmath96 that are consistent with @xmath71 , we have that @xmath99 ; and we say that a strategy @xmath72 is _ winning _ for player  2 from @xmath96 if for all plays in @xmath98 from @xmath96 that are consistent with @xmath72 , we have that @xmath100 .",
    "we denote by @xmath101 the set of states @xmath96 such that there exists a winning strategy for player  @xmath2 from @xmath96 , and by @xmath102 the set of states @xmath96 such that there exists a winning strategy for player  @xmath3 from @xmath96 .",
    "note that @xmath103 by definition .",
    "we consider the following objectives :    * _ energy objectives_. given an initial energy vector @xmath9 , the _ multi - energy objective _ @xmath104 requires that the energy level in all dimensions remain always nonnegative .",
    "* _ mean - payoff objectives_. given two sets @xmath105 , the _ multi - mean - payoff objective _ @xmath106 requires for all dimensions in @xmath107 the mean - payoff - inf value be nonnegative , and for all dimensions in @xmath108 the mean - payoff - sup value be nonnegative .    when the game @xmath34 is clear from the context we omit the subscript in objective names .",
    "note that arbitrary thresholds @xmath109 can be considered in the multi - mean - payoff objectives because the mean - payoff value computed according to the weight function @xmath5 is greater than @xmath110 if and only if the mean - payoff value according to the weight function @xmath111 is greater than @xmath112 where @xmath113 for all @xmath114 . for the special case of @xmath115 and @xmath116 ,",
    "we denote by @xmath117 the conjunction of all mean - payoff - sup objectives , and for @xmath118 and @xmath119 we denote by @xmath120 the conjunction of all mean - payoff - inf objectives .",
    "we denote by @xmath121 the single mean - payoff - sup objective in dimension @xmath122 .    * decision problems . *",
    "we consider the following decision problems :    * the _ unknown initial credit problem _ asks , given a multi - weighted two - player game structure @xmath34 , and an initial state @xmath96 , to decide whether there exist an initial credit vector @xmath9 and a winning strategy @xmath71 for player  1 from @xmath96 for the objective @xmath123 .",
    "* the _ mean - payoff threshold problem _ asks , given a multi - weighted two - player game structure @xmath34 , an initial state @xmath96 , and two sets @xmath105 of indices , to decide whether there exists a winning strategy @xmath71 for player  1 from @xmath96 for the objective @xmath124 .",
    "* determinacy , determinacy under finite - memory , and determinacy by finite - memory . *",
    "we now define the notion of determinacy , determinacy under finite - memory and determinacy by finite - memory .    *",
    "_ ( determinacy ) .",
    "_ a game @xmath34 with state space  @xmath125 and objective  @xmath97 is _ determined _ if from all states @xmath126 , either player  1 or player  2 has a winning strategy , i.e. @xmath127 .",
    "observe that since @xmath128 , determinacy means that @xmath101 and @xmath102 partition the state space . *",
    "_ ( determinacy under finite - memory ) .",
    "_ we also consider _ determinacy under finite - memory _ strategies .",
    "let @xmath129 be the set of states @xmath96 from which player  1 has a _ finite - memory _",
    "strategy @xmath71 such that for all _ finite - memory _ strategies @xmath72 of player  2 , we have @xmath130 . and let @xmath131 be the set of states @xmath96 from which player  1 has a _ finite - memory _",
    "strategy @xmath72 such that for all _ finite - memory _ strategies @xmath71 of player  1 , we have @xmath132 . a game @xmath34 with state space  @xmath125 and objective  @xmath97",
    "is _ determined under finite - memory _ if @xmath133 .",
    "again observe that @xmath134 , and determinacy under finite - memory means that @xmath129 and @xmath131 partition the state space .",
    "we say that determinacy and determinacy under finite - memory coincide for an objective  @xmath97 , if for all game structures , we have @xmath135 and @xmath136 . * _ ( determinacy by finite - memory ) .",
    "_ we also consider _ determinacy by finite - memory _ strategies .",
    "let @xmath137 be the set of states @xmath96 from which player  1 has a _ finite - memory _",
    "strategy @xmath71 such that for all strategies @xmath72 of player  2 , we have @xmath130 ( i.e. , player  1 is restricted to finite - memory strategies whereas strategies for player  2 are general infinite - memory strategies ) .",
    "the set of states @xmath96 from which player  2 has a _ finite - memory _ strategy @xmath72 such that for all strategies @xmath71 of player  1 , we have @xmath132 is denoted @xmath138 . if for all game structures we have @xmath139 and @xmath140 , and all game structures with objective  @xmath97 are determined , then we say that determinacy by finite - memory strategies holds for @xmath97 .",
    "we first observe that determinacy by finite - memory strategies implies that finite - memory strategies suffice for both players , and determinacy by finite - memory implies determinacy under finite - memory ( since given a finite - memory strategy of a player , if there is a counter strategy for the opponent , then there is a finite - memory one by determinacy by finite - memory ) .",
    "thus determinacy by finite - memory strategies implies that ( i )  @xmath141 ; and ( ii )  @xmath142 .",
    "as we will show that determinacy and determinacy under finite - memory do not coincide for multi - mean - payoff games ( theorem  [ thrm_gen_mean ] ) , we consider for multi - mean - payoff objectives @xmath97 both ( 1 )  winning under finite - memory strategies , i.e. to decide whether @xmath143 for a given initial state @xmath96 ; and ( 2 )  winning under general strategies , i.e. to decide whether @xmath144 for a given initial state @xmath96 . for multi - energy games we will show determinacy by finite - memory strategies .",
    "determinacy for multi - mean - payoff and multi - energy objectives follows from a general determinacy result for borel objectives  @xcite : ( a )  multi - mean - payoff objectives can be expressed as a finite intersection of one - dimensional mean - payoff objectives which are complete for the third level of the borel hierarchy  @xcite ; and ( b )  multi - energy objectives can be expressed as a finite intersection of one - dimensional energy objectives which are closed sets .    multi - mean - payoff and multi - energy games are determined .",
    "* attractors . *",
    "the player-@xmath2 _ attractor _ of a given set @xmath36 of target states is the set of states from which player  @xmath2 can force to eventually reach a state in @xmath145 .",
    "the attractor is defined inductively as follows : let @xmath146 , and for all @xmath68 let @xmath147 denote the set of states from where player  @xmath2 can ensure to reach @xmath148 within one step irrespective of the choice of player  @xmath3 .",
    "then the player-@xmath2 attractor is @xmath149 . the player-@xmath3 _ attractor",
    "_ @xmath150 is defined symmetrically .",
    "note that for @xmath151 , the subgraph @xmath152 is again a game structure ( i.e. , every state has an outgoing edge ) .",
    "for all multi - mean - payoff objectives @xmath97 ( and in general for all tail objectives  @xcite ) , we have @xmath153 and @xmath154 .",
    "in this section , we study the determinacy and complexity of multi - energy games .",
    "first , we show that _ finite - memory _ strategies are sufficient for player  @xmath2 , and _ memoryless _ strategies are sufficient for player  @xmath3 .",
    "it follows that multi - energy games are determined under finite - memory .",
    "we establish conp complexity for the unknown initial credit problem , as well as a matching conp - hardness result , and we show that under memoryless strategies for player  @xmath2 the problem is np - complete . finally , we show that the unknown initial credit problem is log - space equivalent to the mean - payoff threshold problem when the players have to use finite - memory strategies ( and in general infinite - memory strategies are more powerful than finite - memory strategies in multi - mean - payoff games ) . the case of infinite - memory strategies in multi - mean - payoff games",
    "is addressed in section  [ sec : multi - mean - payoff ] .",
    "[ [ determinacy - under - finite - memory . ] ] * determinacy under finite - memory .",
    "* + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the next lemmas show that finite - memory strategies are sufficient for player  1 in multi - energy games , and that memoryless strategies are sufficient for player  2 .",
    "[ lem : energy - player1-finite - memory ] for all multi - weighted two - player game structures @xmath34 and initial states @xmath96 , the answer to the unknown initial credit problem is yes if and only if there exist an initial credit @xmath9 and a _ finite - memory _",
    "strategy @xmath155 for player  @xmath2 such that for all strategies @xmath72 of player  @xmath3 , @xmath156 .",
    "one direction is trivial .",
    "for the other direction , assume that @xmath71 is a ( not necessary finite - memory ) winning strategy for player  1 in @xmath34 from @xmath96 with initial credit @xmath9 .",
    "we show how to construct from @xmath71 a finite - memory strategy @xmath157 that is winning from @xmath96 against all strategies of player  2 for initial credit @xmath10 .",
    "consider the strategy tree @xmath158 and associate to each node @xmath159 in this tree the energy vector @xmath160 .",
    "since @xmath71 is winning , we have @xmath161 for all @xmath162 .",
    "now , consider the relation @xmath163 on the set @xmath164 defined as follows : @xmath165 if @xmath166 and @xmath167 ( i.e. , @xmath168 for all @xmath11 , @xmath122 ) .",
    "the relation @xmath163 is a well quasi - order . as",
    "a consequence , on every infinite branch @xmath169 of @xmath158 there exist two indices @xmath170 such that @xmath171 and @xmath172 .",
    "we say that node @xmath173 subsumes node @xmath174 .",
    "now , let @xmath175 be the tree @xmath158 where we stop each branch when we reach a node @xmath176 that subsumes one of its ancestor node @xmath177 . by knig s lemma  @xcite and dickson s lemma  @xcite ,",
    "the tree @xmath175 is finite . from the node @xmath176",
    ", player  1 can mimic the strategy played in @xmath177 because the energy level in @xmath176 is greater than in @xmath177 . from @xmath175",
    ", we can construct the moore machine of a finite - memory strategy @xmath157 that is winning in the multi - energy game  @xmath34 from  @xmath96 with initial energy level  @xmath10 . @xmath178    [ lem : player - two - memoryless ] for all multi - weighted two - player game structures @xmath34 and initial states @xmath96 , the answer to the unknown initial credit problem is no if and only if there exists a _",
    "strategy @xmath72 for player  @xmath3 , such that for all initial credit vectors @xmath9 and all strategies @xmath71 for player  @xmath2 we have @xmath179 .",
    "the proof was given in  ( * ? ? ?",
    "* lemma 19 ) . intuitively , consider a player-@xmath3 state @xmath180 with two successors @xmath181 and @xmath182 .",
    "if an initial credit vector @xmath183 is sufficient for player  @xmath2 to win from @xmath184 against player  @xmath3 always choosing @xmath181 , and @xmath185 is sufficient from @xmath186 against player  @xmath3 always choosing @xmath182 , then @xmath187 is sufficient from @xmath184 against player  @xmath3 arbitrarily alternating between @xmath181 and @xmath182 .",
    "this is because if player  @xmath2 maintains the energy nonnegative in all dimensions when the initial credit is @xmath10 , then he can maintain the energy always above @xmath188 when initial credit is @xmath189 ( @xmath190 ) .",
    "@xmath178    the previous two lemmas establishes both determinacy by finite - memory strategies , as well as that determinacy and determinacy under finite - memory coincide . as a consequence of the previous two lemmas , we get the following theorem .    [ thrm_gen_energy_fin ] multi - energy games are determined by finite - memory , hence determined under finite - memory .",
    "determinacy coincides with determinacy under finite - memory for multi - energy games .",
    "note that even if player 2 can be restricted to play memoryless strategies in multi - energy games , it may be that player  @xmath2 is winning with some initial credit vector @xmath10 when player  @xmath3 is memoryless , and is not winning with the same initial credit vector @xmath10 when player  @xmath3 can use arbitrary strategies .",
    "this situation is illustrated in  [ fig : memory - needed ] where player  @xmath2 ( owning round states ) can maintain the energy nonnegative in all dimensions with initial credit @xmath191 when player  @xmath3 ( owning square states ) is memoryless .",
    "indeed , either player  @xmath3 chooses the left edge from @xmath96 to @xmath192 and player  @xmath2 wins , or player  @xmath3 chooses the right edge from @xmath96 to @xmath193 , and player  @xmath2 wins as well by alternating the edges back to @xmath96 . now ,",
    "if player  @xmath3 has memory , then player  2 wins by choosing first the right edge to @xmath193 , which forces player  @xmath2 to come back to @xmath96 with multi - weight @xmath194 .",
    "the energy level is now @xmath195 in @xmath96 and player  @xmath3 chooses the left edge to @xmath192 which is losing for player  @xmath2 .",
    "note that player  @xmath2 wins with initial credit @xmath196 and @xmath197 ( or any larger credit ) against all arbitrary strategies of player  @xmath3 .",
    "( 75,28)(0,0 )    ( n0)(40,12)@xmath96 ( n1)(10,12)@xmath192 ( n2)(70,12)@xmath193    ( n1)@xmath198    ( n0,n2)@xmath198 ( n2,n0)@xmath194 ( n2,n0)@xmath199    ( n0,n1)@xmath200    [ [ complexity . ] ] * complexity . * + + + + + + + + + + + + +    we show that the unknown initial credit problem is conp - complete .",
    "first , we show that the one - player version of this game can be solved by checking the existence of a circuit ( i.e. , a not necessarily simple cycle ) with nonnegative effect in all dimensions , and we use the memoryless result for player  2 ( lemma  [ lem : player - two - memoryless ] ) to define a conp algorithm .",
    "second , we present a conp - hardness proof .",
    "[ thrm_complete ] the unknown initial credit problem is conp - complete .    first , we need the following result about zero - circuits in multi - weighted directed graphs ( a graph is a one - player game ) .",
    "zero - circuit _ is a finite sequence @xmath201 with @xmath202 such that @xmath203 , @xmath46 for all @xmath204 , and @xmath205 .",
    "the circuit need not be simple .",
    "[ lem : zero - cycle ] deciding if a multi - weighted directed graph contains a zero circuit can be done in polynomial time .",
    "the result of theorem  [ thrm_complete ] follows from the next two lemmas .",
    "[ lem : conp - membership ] the unknown initial credit problem is in conp .",
    "let @xmath34 be a multi - weighted two - player game structure , and @xmath96 be an initial state .",
    "by lemma  [ lem : player - two - memoryless ] , we know that player  2 can be restricted to play memoryless strategies .",
    "a conp algorithm guesses a memoryless strategy  @xmath72 and checks in polynomial time that it is winning for player  @xmath3 using the following argument .",
    "consider the graph @xmath206 as a one - player game ( in which all states belong to player  @xmath2 ) .",
    "we show that if there exists an initial energy level @xmath10 and an infinite play @xmath42 in @xmath206 such that @xmath207 , then there exists a reachable circuit in @xmath206 with nonnegative effect in all dimensions . to show this",
    ", we extend @xmath49 with the energy level as follows : let @xmath208 where @xmath209 and for all @xmath210 , @xmath211 . since @xmath207 , we know that @xmath212 for all @xmath47 . hence the following order defined on the pairs @xmath213 is a well quasi - order : @xmath214 if @xmath215 and @xmath216 for all @xmath57 .",
    "it follows that there exist two indices @xmath20 in @xmath217 such that @xmath218 , and the underlying circuit through @xmath219 has nonnegative effect in all dimensions .",
    "based on this , we can decide if there exists an initial energy vector @xmath10 and an infinite path in @xmath206 that satisfies @xmath123 using the result of lemma  [ lem : zero - cycle ] on modified version of @xmath206 obtained as follows . in every state of @xmath206 , we add @xmath4 self - loops with respective multi - weight @xmath220 , @xmath221 , @xmath222 , @xmath223 , i.e. each self - loop removes one unit of energy in one dimension .",
    "it is easy to see that @xmath206 has a circuit with nonnegative effect in all dimensions if and only if the modified @xmath206 has a zero circuit , which can be determined in polynomial time .",
    "the result follows .",
    "@xmath178    [ thrm_hard ] the unknown initial credit problem is conp - hard .",
    "we present a reduction from the complement of the 3sat problem which is np - complete  @xcite .",
    "_ reduction .",
    "_ we show that the unknown initial credit problem for multi - weighted two - player game structures is at least as hard as deciding whether a 3sat formula is unsatisfiable .",
    "consider a 3sat formula @xmath224 in cnf with clauses @xmath225 over variables @xmath226 , where each clause consists of disjunctions of exactly three literals ( a literal is a variable or its complement ) .",
    "given the formula @xmath224 , we construct a game graph as shown in figure  [ fig:3sat ] .",
    "the game graph is as follows : from the initial state , player  1 chooses a clause , then from a clause player  2 chooses a literal that appears in the clause ( i.e. , makes the clause true ) . from every literal",
    "the next state is the initial state .",
    "we now describe the multi - weight labeling function @xmath5 . in the multi - weight function",
    "there is a component for every literal . for edges from the initial state to the clause states , and from the clause states to the literals , the weight for every component is  0 .",
    "we now define the weight function for the edges from literals back to the initial state : for a literal @xmath227 , and the edge from @xmath227 to the initial state , the weight for the component of @xmath227 is  @xmath2 , the weight for the component of the complement of @xmath227 is  @xmath228 , and for all the other components the weight is  @xmath112 .",
    "we now define a few notations related to assignments of truth values to literals .",
    "we consider _ assignments _ that assign truth values to all the literals .",
    "an assignment is _ valid _ if for every literal the truth value assigned to the literal and its complement are complementary ( i.e. , for all @xmath229 , if @xmath230 is assigned true ( resp .",
    "false ) , then the complement @xmath231 of @xmath230 is assigned false ( resp .",
    "an assignment that is not valid is _ conflicting _",
    "( i.e. , for some @xmath232 , both @xmath230 and @xmath231 are assigned the same truth value ) .",
    "if the formula @xmath224 is satisfiable , then there is a valid assignment that satisfies all the clauses .",
    "if the formula @xmath224 is not satisfiable , then every assignment that satisfies all the clauses must be conflicting .",
    "we now present two directions of the hardness proof .",
    "( 65,40)(0,0 )    ( 51,33)(47,44)(10,20 ) ( 51,20)(49,12)(15,15 ) ( 51,5)(49,-2)(10,10 )    ( q0)(10,15 ) ( q1)(35,33)@xmath233 ( q1 ) ( q1 ) ( q1 ) ( q2)(35,20)@xmath234 ( q2 ) ( q2 ) ( q2 ) ( q3)(35,5)@xmath235 ( q3 ) ( q3 ) ( q3 )    ( q0,q1 ) ( q0,q2 ) ( q0,q3 )    ( 35,11)@xmath236 ( 53,31)@xmath237 ( 53,18)@xmath237 ( 53,3)@xmath237 ( 58,32 ) literal ( 58,19 ) literal ( 58,4 ) literal    _ @xmath224 satisfiable implies player  2 winning .",
    "_ we show that if @xmath224 is satisfiable , then player  2 has a memoryless winning strategy . since @xmath224 is satisfiable",
    ", there is a valid assignment @xmath238 that satisfies every clause .",
    "the memoryless strategy is constructed from the assignment @xmath238 as follows : for a clause @xmath239 , the strategy chooses a literal as successor that appears in @xmath239 and is set to true by the assignment .",
    "consider an arbitrary strategy for player  1 , and the infinite play : the literals visited in the play are all assigned truth values true by @xmath238 , and the infinite play must visit some literal infinitely often .",
    "consider the literal @xmath240 that appears infinitely often in the play , then the complement literal @xmath241 is never visited , and every time literal @xmath240 is visited , the component corresponding to @xmath241 decreases by  @xmath2 , and since @xmath240 appears infinitely often it follows that the play is winning for player  2 for every finite initial credit .",
    "it follows that the strategy for player  2 is winning , and the answer to the unknown initial credit problem is  no \" .    _",
    "@xmath224 not satisfiable implies player  1 is winning .",
    "_ we now show that if @xmath224 is not satisfiable , then player  1 is winning . by determinacy",
    ", it suffices to show that player  2 is not winning , and by existence of memoryless winning strategy for player  2 ( lemma  [ lem : player - two - memoryless ] ) , it suffices to show that there is no memoryless winning strategy for player  2 .",
    "fix an arbitrary memoryless strategy for player  2 , ( i.e. , in every clause player  2 chooses a literal that appears in the clause ) .",
    "if we consider the assignment @xmath238 obtained from the memoryless strategy , then since @xmath224 is not satisfiable it follows that the assignment @xmath238 is conflicting .",
    "hence there must exist clause @xmath239 and @xmath242 and variable @xmath243 such that the strategy chooses the literal @xmath243 in @xmath239 and the complement variable @xmath244 in @xmath242 .",
    "the strategy for player  1 that at the starting state alternates between clause @xmath239 and @xmath242 , along with that the initial credit of @xmath2 for the component of @xmath243 and @xmath244 , and  @xmath112 for all other components , ensures that the strategy for player  2 is not winning .",
    "hence the answer to the unknown initial credit problem is yes , and we have the desired result .",
    "@xmath178    observe that our hardness proof works with weights restricted to the set @xmath13 .",
    "the results of  @xcite show that in two dimensions ( @xmath245 ) the unknown initial credit problem with weights in @xmath13 can be solved in polynomial time .",
    "the complexity for fixed dimensions @xmath246 is not known . with arbitrary integer weights ,",
    "the unknown initial credit problem for @xmath247 is in up  @xmath0  coup  @xcite .",
    "[ [ complexity - for - memoryless - strategies . ] ] * complexity for memoryless strategies . * + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we consider multi - energy games when player  1 is restricted to use memoryless strategies .",
    "the unknown initial credit problem for memoryless strategies is to decide , given a multi - weighted two - player game structure @xmath34 , and an initial state @xmath96 , whether there exist an initial credit vector @xmath9 and a _ memoryless _ winning strategy @xmath71 for player  1 from @xmath96 for the objective @xmath123 .",
    "[ lemm_memless_1 ] the unknown initial credit problem for memoryless strategies is np - complete .",
    "the inclusion in np is obtained as follows : the polynomial witness is the memoryless strategy for player  1 , and once the strategy is fixed we obtain a game graph with choices for player  2 only .",
    "the verification is to checks that for every dimension there is no negative cycle , and it can be achieved in polynomial time by solving one - dimensional energy games on graphs with choices for player  2 only  @xcite .",
    "the np hardness follows from a result of  @xcite where , given a directed graph and four vertices @xmath248 , the problem of deciding the existence of two disjoint simple paths ( one from @xmath5 to @xmath240 and the other from @xmath227 to @xmath249 ) is shown to be np - complete .",
    "given such a graph and vertices , construct a one - player game by @xmath250 adding the edges @xmath251 with weight @xmath252 and @xmath253 with weight @xmath254 ( where @xmath48 is the number of vertices in the graph ) , and @xmath255 assigning all other edges of the graph the weight @xmath256 . in the resulting one - player game ,",
    "a winning memoryless strategy from @xmath5 must induce a simple cycle through @xmath248 to ensure nonnegative sum of weights in the two dimensions .",
    "this show that the unknown initial credit problem for memoryless strategies is at least as hard as the decision problem of  @xcite , and thus np - hard .",
    "the np - completeness result follows .",
    "@xmath178    the reduction in the proof of theorem  [ lemm_memless_1 ] can be obtained with weights in @xmath13 by replacing the edges with weight @xmath48 by a sequence of @xmath48 edges with weight @xmath2 .",
    "the reduction remains polynomial .",
    "theorem  [ lemm_memless_1 ] shows np - hardness for dimension @xmath245 and weights in @xmath13 . for @xmath247 ,",
    "the problem is solvable in polynomial time with weights in @xmath13 , and for arbitrary integer weights , the problem is in up @xmath0 coup  @xcite .",
    "[ [ equivalence - with - multi - mean - payoff - games - under - finite - memory - strategies . ] ] * equivalence with multi - mean - payoff games under finite - memory strategies . * + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we show that multi - mean - payoff games where the players are restricted to play finite - memory strategies are log - space equivalent to multi - energy games .",
    "the result of lemma  [ thrm_inter ] shows that the unknown initial credit problem ( for multi - energy games ) and the mean - payoff threshold problem ( with finite - memory strategies ) are equivalent .    note that if the players use finite - memory strategies , then the outcome @xmath49 is ultimately periodic ( a play @xmath42 is _ ultimately periodic _ if it can be decomposed as @xmath257 where @xmath258 and @xmath259 are two finite sequences of states ) and therefore , the value of @xmath260 and @xmath261 coincide .",
    "we denote by @xmath262 the set of ultimately periodic plays satisfying the multi - mean - payoff objective @xmath263 ( or equivalently , satisfying @xmath264 ) .",
    "[ thrm_inter ] [ lem : energy - mean - payoff - reduction ] for all multi - weighted two - player game structures , the answer to the unknown initial credit problem is yes if and only if the answer to the mean - payoff threshold problem under finite - memory strategies is yes .",
    "let @xmath34 be multi - weighted two - player game structure of dimension @xmath4 .",
    "first , assume that there exists a winning strategy @xmath71 for player  @xmath2 in  @xmath34 for the energy objective @xmath123 ( for some @xmath10 ) .",
    "theorem  [ thrm_gen_energy_fin ] establishes that finite memory is sufficient to win multi - energy games , so we can assume that @xmath71 has finite memory . consider the restriction of the graph @xmath265 to the reachable vertices , and we show that the energy vector of every simple cycle is nonnegative . by contradiction , if there exists a simple cycle with energy vector negative in one dimension , then the infinite path that reaches this cycle and loops through it forever would violate the objective @xmath123 regardless of the vector @xmath10 .",
    "now , this shows that every reachable cycle in @xmath265 has nonnegative mean - payoff value in all dimensions , hence @xmath71 is winning for the multi - mean - payoff objective @xmath262 .",
    "second , assume that there exists a finite - memory strategy @xmath71 for player  @xmath2 that is winning in  @xmath34 for the multi - mean - payoff objective @xmath262 .",
    "by the same argument as above , all simple cycles in @xmath265 are nonnegative and the strategy @xmath71 is also winning for the objective @xmath123 for some @xmath10 . taking @xmath266 where @xmath48 is the number of states in  @xmath265 ( which bounds the length of the acyclic paths ) and @xmath267 is the largest weight in the game suffices .",
    "@xmath178    note that the result of lemma  [ thrm_inter ] does not hold for arbitrary strategies as shown in the following lemma .",
    "[ lemm_inf_power ] in multi - mean - payoff games , in general infinite - memory strategies are required for winning ( i.e. , in general , finite - memory strategies are not sufficient for winning ) .",
    "the example of  [ fig : crazy ] shows a one - player game .",
    "we claim that @xmath16 for @xmath268 , player  @xmath2 can achieve a threshold vector @xmath195 , and @xmath17 for @xmath269 , player  @xmath2 can achieve a threshold vector @xmath270 ; @xmath271 if we restrict player  @xmath2 to use a finite - memory strategy , then it is not possible to win the multi - mean - payoff objective with threshold @xmath195 ( and thus also not with @xmath270 ) . to prove @xmath16 ,",
    "consider the strategy that visits @xmath48 times @xmath272 and then @xmath48 times @xmath273 , and repeats this forever with increasing value of @xmath48 .",
    "this guarantees a mean - payoff vector @xmath195 for @xmath268 because in the long - run roughly half of the time is spent in @xmath272 and roughly half of the time in @xmath273 . to prove  @xmath17 ,",
    "consider the strategy that alternates visits to @xmath272 and @xmath273 such that after the @xmath48th alternation , the self - loop on the visited state @xmath186 ( @xmath274 ) is taken so many times that the average frequency of @xmath186 gets larger than  @xmath275 in the current finite prefix of the play .",
    "this is always possible and achieves threshold @xmath270 for @xmath269 .",
    "note that the above two strategies require infinite memory . to prove @xmath271 ,",
    "recall that finite - memory strategies produce an ultimately periodic play and therefore @xmath268 and @xmath269 coincide .",
    "it is easy to see that such a play can not achieve @xmath195 because the periodic part would have to visit both @xmath272 and @xmath273 and then the mean - payoff vector @xmath276 of the play would be such that @xmath277 and thus @xmath278 is impossible .",
    "@xmath178    ( 48,28)(0,0 )    ( n0)(10,12)@xmath272 ( n1)(40,12)@xmath273    ( n0)@xmath191 ( n1)@xmath279    ( n0,n1)@xmath198 ( n1,n0)@xmath198    lemma  [ thrm_inter ] and lemma  [ lemm_inf_power ] along with theorem  [ thrm_gen_energy_fin ] give the following result .",
    "[ thrm_gen_mean ] multi - mean - payoff games are determined under finite - memory , but not determined by finite - memory ( i.e. , winning strategies in general require infinite - memory , and determinacy and determinacy under finite - memory do not coincide ) . for multi - mean - payoff objectives",
    "@xmath97 we have @xmath280 .",
    "in this section we consider multi - mean - payoff games with infinite - memory strategies ( we have already shown in the previous section that multi - mean - payoff games with finite - memory strategies coincide with multi - energy games ) .",
    "we present the following complexity results for the mean - payoff threshold problem : ( 1 )  np  @xmath0  conp for conjunction of @xmath281 objectives ; ( 2 )  conp - completeness for conjunction of @xmath282 objectives ; and ( 3 )  conp - completeness for conjunction of mean - payoff - inf and mean - payoff - sup objectives .",
    "we consider multi - weighted two - player game structures with the multi - mean - payoff objective @xmath283 ) for player  @xmath2 .",
    "in general winning strategies for player  1 require infinite memory .",
    "we show that memoryless winning strategies exist for player  2 and we present a reduction of the decision problem for a conjunction of @xmath4 mean - payoff - sup objectives to solving polynomially many instances of the decision problem for single mean - payoff - sup objective . as a consequence",
    "the decision problem for @xmath264 lies in np @xmath0 conp , and we obtain a pseudo - polynomial time algorithm for this problem .    in the next lemma we show that if player  1 can satisfy the @xmath281 objective in every individual dimension from all states , then player  1 can satisfy the conjunctive @xmath281 objective from all states .",
    "the converse holds trivially .",
    "the main idea of the proof is as follows : for each @xmath284 , let @xmath285 be a winning strategy for player  1 for the objective @xmath286 .",
    "intuitively , the winning strategy for the conjunction of mean - payoff - sup objective plays @xmath285 , until the mean - payoff value on dimension @xmath11 gets larger than a number very close to @xmath112 , and then switches to the strategy to @xmath287 , etc .",
    "this way player  1 ensures nonnegative mean - payoff - sup value in every dimension .",
    "we present the proof formally below .",
    "while memoryless winning strategies exist for each individual dimension , we present a proof that does not use the assumption of witness memoryless winning strategies for individual dimensions .",
    "a similar proof technique is used later where memoryless winning strategies for each individual dimension are not guaranteed to exist .",
    "[ lem : sup ] if for all states @xmath29 and for all @xmath284 , player  1 has a winning strategy from @xmath186 for the objective @xmath288 ( player  1 has winning strategies for each individual dimension ) , then for all states @xmath289 , player  1 has a winning strategy from @xmath186 for the objective @xmath290 .    for each @xmath289 and @xmath122 , let @xmath291 be a winning strategy for player  1 from @xmath186 for the objective @xmath286 , and consider the strategy tree @xmath292 . for @xmath293 , we say that a node @xmath8 of @xmath292 is an _",
    "node if the average of the weights of dimension  @xmath11 of the path from the root to @xmath8 is at least @xmath295 . for @xmath296 , let @xmath297 be the tree obtained from @xmath292 by removing all descendants of the @xmath294-good nodes that are at depth at least @xmath298 .",
    "hence , all branches of @xmath297 have length at least @xmath298 , and the leaves are @xmath294-good nodes .",
    "we show that @xmath297 is a finite tree . by knig s lemma  @xcite",
    ", it suffices to show that every path in the tree @xmath297 is finite .",
    "assume towards contradiction that there is an infinite path @xmath49 in @xmath297 .",
    "then @xmath49 is a play consistent with @xmath299 , and since @xmath49 does not contain any @xmath294-good node beyond depth  @xmath298 , the mean - payoff - sup value of @xmath49 in dimension @xmath11 is at most @xmath295 , i.e. , @xmath300 .",
    "this contradicts the assumption that @xmath299 is a winning strategy for player  1 in dimension @xmath11 .",
    "we now describe a strategy for player  1 based on the winning strategies of the individual dimensions and show that the strategy is winning for the conjunction of mean - payoff - sup objectives .",
    "let @xmath301 be the largest absolute value of the weight function @xmath5 .",
    "@xmath302 let @xmath186 be the current state , and @xmath303 be the length of the play so far .",
    "@xmath304 play according to @xmath299 until a leaf of @xmath297 is reached .",
    "@xmath305    after the last command in the internal for - loop was executed , the mean - payoff value in dimension @xmath11 , is at least @xmath306 where @xmath307 and this is at least @xmath308 .",
    "since @xmath297 is a finite tree , the main loop gets executed infinitely often ( i.e. , the strategy does not get stuck in the for - loop ) and @xmath294 tends to @xmath112 .",
    "thus the supremum of the mean - payoff value is at least @xmath112 in every dimension .",
    "hence the strategy described above is a winning strategy for player  1 for meanpayoffsup .",
    "@xmath178    in lemma",
    "[ lem : sup ] the winning strategy constructed for player  1 requires infinite - memory , and by lemma  [ lemm_inf_power ] infinite memory is required in general . for player  @xmath3 , we show that memoryless winning strategies exist , and we derive the algorithmic solution for the mean - payoff threshold problem .",
    "[ lem : sup2 ] in multi - mean - payoff games with conjunction of @xmath281 objectives for player  @xmath2 , memoryless strategies are sufficient for player  @xmath3 .",
    "the proof is by induction on the number of states @xmath309 in the game structure .",
    "the base case with @xmath310 is trivial .",
    "we now consider the inductive case with @xmath311 .",
    "let @xmath33 be the dimension of the weight function @xmath5 .",
    "for @xmath312 , let @xmath313 be the winning region for player  2 for the one - dimensional mean - payoff game played in dimension @xmath11 .",
    "( i.e. , in @xmath314 player  2 wins for the objective complementary to @xmath315 ) .",
    "let @xmath316 .",
    "we consider the following two cases :    1 .",
    "if @xmath317 , then player  1 can satisfy the mean - payoff - sup objective in every dimension , and then by lemma  [ lem : sup ] player  1 wins from everywhere for the objective @xmath318 .",
    "hence there is no winning strategy for player  2 .",
    "2 .   if @xmath319 , then there exists @xmath122 such that @xmath320 . in @xmath314",
    "there is a memoryless winning strategy @xmath72 for player  2 to falsify @xmath315 since memoryless winning strategies exist for both players in mean - payoff games with single objective  @xcite .",
    "the strategy also falsifies @xmath321 . +",
    "since @xmath314 is a winning region for player  @xmath3 , it follows that @xmath322 , and the graph @xmath323 induced by @xmath324 is a game structure .",
    "let @xmath325 be the winning region for player  2 in @xmath323 .",
    "by induction hypothesis ( @xmath323 has strictly fewer states as a non - empty set @xmath314 is removed ) , it follows that there is a memoryless winning strategy @xmath326 in @xmath323 in the region @xmath327 .",
    "the winning region @xmath328 for player  1 in @xmath323 is also winning for player  1 in @xmath34 ( since @xmath322 , @xmath323 is obtained by removing only player  1 edges ) . hence to complete the proof it suffices to show that the memoryless strategy obtained by combining @xmath72 in @xmath314 and @xmath326 in @xmath327 is winning for player  2 from @xmath329 .",
    "define the strategy @xmath330 as follows : @xmath331 consider the memoryless strategy @xmath330 for player  2 and the outcome of any counter strategy for player  1 that starts in @xmath332 .",
    "there are two cases : ( a )  if the play reaches @xmath314 , then it reaches in finitely many steps , and then @xmath72 ensures that player  2 wins ; and ( b )  if the play never reaches @xmath314 , then the play always stays in @xmath323 , and now the strategy @xmath326 ensures winning for player  2 .",
    "this completes the proof of the second item .",
    "the desired result follows .",
    "@xmath178    [ [ algorithm . ] ] * algorithm . * + + + + + + + + + + + +    we present algorithm  [ alg : mean - payoff - sup - solve ] to solve games with conjunction of mean - payoff - sup objectives .",
    "the algorithm maintains the current game structure @xmath333 induced by the current set of states @xmath334 . in every iteration of the repeat - loop , for @xmath335 , we compute the winning region @xmath314 for player  @xmath3 in the current game structure with the single mean - payoff objective on dimension  @xmath11 by a call to solvesinglemeanpayoffsup(@xmath336 ) which returns the winning region for player  @xmath2 in @xmath333 for the objective @xmath286 .",
    "if @xmath314 is nonempty , then we remove @xmath314 from the current game structure and the iteration continues .    in every iteration",
    "the set of states removed from the game structure is certainly winning for player  2 . in the end",
    "we obtain a game structure such that player  1 wins the mean - payoff objective in every individual dimension from all states , and by lemma  [ lem : sup ] it follows that the remaining region is winning for player  1 .",
    "thus game structures with conjunction of mean - payoff - sup objectives can be solved by @xmath337 calls to solutions of mean - payoff games with single objective .",
    "the following theorem summarizes the results for multi - weighted games with conjunction of mean - payoff - sup objectives .",
    "[ thrm : sup ] for multi - weighted two - player game structures with objective @xmath290 for player  1 , the following assertions hold :    1 .   winning strategies for player  1 require infinite - memory in general , and memoryless winning strategies exist for player  2 .",
    "the problem of deciding whether a given state is winning for player  1 lies in np @xmath0 conp .",
    "the set of winning states for player  1 can be computed with @xmath338 calls to a procedure for solving game structures with single mean - payoff objective , hence in pseudo - polynomial time @xmath339 .",
    "the results of theorem  [ thrm : sup ] are proved as follows .",
    "item  @xmath2 follows from lemma  [ lemm_inf_power ] and lemma  [ lem : sup2 ] .",
    "item  @xmath340 follows from algorithm  [ alg : mean - payoff - sup - solve ] and the results of  @xcite where an algorithm is given for games with single mean - payoff objectives that works in time @xmath341 .",
    "we now present the details of item  @xmath3 in two parts .",
    "( 1 )  _ ( in np ) . _",
    "the np algorithm guesses the winning region @xmath342 for player  1 , and a memoryless winning strategy @xmath285 for every individual dimension @xmath11 ( such memoryless winning strategies for every individual dimension exist by the results of  @xcite ) .",
    "the verification procedure checks in polynomial time that for every dimension @xmath11 the set @xmath342 is the winning set for player  1 in the graph @xmath343 using the polynomial time algorithm of  @xcite .",
    "the correctness ( that is , the existence of winning strategy in every individual dimension implies winning for the conjunction ) follows from lemma  [ lem : sup ] . ( 2 )  _ ( in conp ) . _",
    "the conp algorithm guesses a memoryless winning strategy @xmath72 for player  2 .",
    "the verification procedure needs to solve mean - payoff - sup objectives for the graph @xmath344 and by algorithm  [ alg : mean - payoff - sup - solve ] this can be solved with @xmath345 calls to the polynomial time algorithm of  @xcite to solve graphs with single mean - payoff objectives .",
    "thus we have the polynomial - time verification procedure , and the conp complexity bound follows .",
    "we consider multi - weighted two - player game structures , and the multi - mean - payoff - inf objective @xmath346 ) for player  @xmath2 . in general winning strategies for",
    "player  1 require infinite memory ( lemma  [ lemm_inf_power ] ) .",
    "we show that memoryless winning strategies exist for player  2 , and the threshold problem is conp - complete .",
    "[ [ memoryless - strategies - for - player2 . ] ] * memoryless strategies for player  2 . *",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the objective for player  2 is the complementary objective of player  1 .",
    "it follows from the results of  @xcite that memoryless winning strategies exist for player  2 ( see appendix for discussion ) .",
    "[ [ complexity.-1 ] ] * complexity .",
    "* + + + + + + + + + + + + +    we show that the problem of deciding whether a given state is winning for player  1 in multi - weighted game structures with conjunction of mean - payoff - inf objectives is conp - complete .",
    "we first argue about the conp lower bound .",
    "* conp lower bound .",
    "* the proof is essentially the same as the proof of lemma  [ thrm_hard ] and relies on the existence of memoryless winning strategies for player  2 .",
    "we consider the hardness proof of lemma  [ thrm_hard ] and the reduction used in the lemma .",
    "if the formula is satisfiable , then consider the memoryless winning strategy for player  2 constructed from the satisfying assignment .",
    "consider an arbitrary strategy ( possibly with infinite - memory ) for player  1 .",
    "since the strategy for player  2 is constructed from a non - conflicting assignment , it follows that conflicting literals do not appear . within every three steps some literal",
    "is visited .",
    "if @xmath48 is the number of variables , then in any play prefix compatible with the strategy of player  @xmath3 , the frequency of the literal  @xmath240 with highest frequency in this prefix is at least @xmath347 ( and note that the literal @xmath241 has never appeared ) .",
    "it follows that the average of the weights in the dimension for @xmath241 is at most @xmath348 and therefore the mean - payoff - inf objective is violated in some dimension .",
    "conversely , if the formula is not satisfiable , then against every memoryless strategy for player  2 , the counter strategy constructed in lemma  [ thrm_hard ] ( that alternates between the conflicting assignments ) ensures that the mean - payoff - inf objective is satisfied .",
    "hence the conp - hardness follows .",
    "* conp upper bound . *",
    "the rest of the section is devoted to proving the conp upper bound .",
    "once a memoryless strategy for player  2 is fixed ( as a polynomial witness ) , we obtain a one - player game structure . to establish the conp upper bound we need to show that the problem can be solved in polynomial time for one - player game structures . a polynomial - time algorithm for the problem",
    "is obtained by solving a variant of the zero circuit problem for multi - weighted directed graphs .",
    "the variant of the zero circuit problem is the _ nonnegative multi - cycle _ problem for directed graphs , where the multi - cycle is not required to be connected by edges as in the case of zero circuit problem .",
    "[ [ nonnegative - multi - cycles . ] ] * nonnegative multi - cycles . *",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + +    let @xmath349 be a multi - weighted directed graph that is strongly connected .",
    "multi - cycle _ is a multi - set of simple cycles . for a multi - cycle @xmath350",
    "we denote by @xmath351 the set of cycles that appear in @xmath350 , and hence @xmath351 is a set of simple cycles",
    ". for multi - cycle @xmath352 we denote with @xmath353 the number of occurrences of a simple cycle @xmath239 in the multi - set @xmath350 , and refer to @xmath353 as the _ factor _ of @xmath239 . for a simple cycle @xmath354",
    ", we denote @xmath355 . for a multi - cycle @xmath350 ,",
    "we denote @xmath356 ( note that in the summation a cycle @xmath357 may appear multiple times in @xmath350 , and alternatively the summation can be expressed as considering simple cycles @xmath239 that appear in @xmath350 and summing up @xmath358 ) .",
    "a _ nonnegative multi - cycle _ is a non - empty multi - set of simple cycles @xmath350 such that @xmath359 ( i.e. , in every dimension the weight is nonnegative ) .",
    "[ lem : multicycleprops ] let @xmath360 be a multi - weighted directed graph that is strongly connected .    1 .",
    "the problem of deciding if @xmath34 has a nonnegative multi - cycle can be solved in polynomial time .",
    "if @xmath34 does not have a nonnegative multi - cycle , then there exist a constant @xmath361 and a real - valued constant @xmath362 such that for all finite paths @xmath363 in the graph @xmath34 we have @xmath364 .",
    "we prove both the items below .    1 .",
    "the proof of the first item is almost exactly as the proof of theorem 2.2 in  @xcite .",
    "given the directed strongly connected graph @xmath360 , we consider a variable @xmath365 ( for edge coefficient of @xmath366 ) for every @xmath367 .",
    "we define the following set of linear constraints . 1 .   for @xmath368 ,",
    "let @xmath369 be the set of all in - edges of @xmath8 , and @xmath370 be the set of out - edges of @xmath8 .",
    "for every @xmath368 we define the linear constraint that @xmath371 .",
    "2 .   for every @xmath367",
    "we define the constraint @xmath372 .",
    "3 .   for every dimension @xmath373",
    ", we define the constraint @xmath374 .",
    "finally , we define the constraint @xmath375 .",
    "+ the first set of linear constraints is intuitively the flow constraints ; the second constraint specifies that for every edge @xmath366 , the edge coefficient @xmath365 is nonnegative ; the third constraint specifies that in every dimension the sum of edge coefficient time the weights is nonnegative ; and the last constraint ensures that at least one edge coefficient is strictly positive ( to ensure that the multi cycle is non - empty ) .",
    "this set of constraints can be solved in polynomial time using standard linear programming algorithms .",
    "it essentially follows from  @xcite that this set of linear constraints has a solution iff a nonnegative multi - cycle exists .",
    "2 .   let @xmath363 be a finite path in @xmath34 .",
    "the finite path @xmath363 can be decomposed into three paths @xmath376 where @xmath377 is an initial prefix of length at most @xmath378 , @xmath379 consists of cycles ( not necessarily simple ) , and @xmath380 is a segment of length at most @xmath378 in the end .",
    "we can uniquely decompose @xmath381 into a set @xmath350 of multi - cycles and hence also into a set of _ simple _ cycles @xmath382 , for @xmath383 , such that cycle @xmath239 occurs @xmath384 times in @xmath381 , for some @xmath385 .",
    "the sum of the weights in the part of @xmath379 is @xmath386 the second equality is obtained by multiplying and dividing with @xmath387 , and the inequality is obtained since @xmath388 ( as @xmath389 ) .",
    "let @xmath390 and observe that @xmath391 with @xmath392 .",
    "we first show the existence of a constant @xmath393 , such that for every @xmath394 with @xmath395 , there exists a dimension @xmath373 such that @xmath396 .",
    "+ for every @xmath397 , we define a function @xmath398 and @xmath399 . for every @xmath400 , the function @xmath401 is continuous .",
    "since @xmath402 is the minimum of a finite number of continuous functions , @xmath402 is also continuous . observe that @xmath403^n \\cap { \\{(\\alpha_1,\\dots , \\alpha_n ) \\mid   \\sum_{j=1}^n \\alpha_j = 1\\}}$ ] is a closed and bounded set .",
    "hence by _ weierstrass theorem _ the function @xmath402 has a maxima @xmath404 in this domain .",
    "let @xmath405 such that @xmath406 and @xmath407 .",
    "assume towards contradiction that @xmath408 , we then show that the linear programming problem on the constraints mentioned above ( in item  1 ) has a solution , which leads to a contradiction .",
    "for an edge @xmath366 , we define the edge coefficient as follows : @xmath409 ( i.e. , the sum of the @xmath410 s of the cycle the edge belongs to ) .",
    "it follows that all the constraints are satisfied , and this contradicts the assumption that there is no nonnegative multi - cycle .",
    "hence we have @xmath411 .",
    "hence it follows that there exists a dimension @xmath11 such that @xmath412 let @xmath413 and @xmath414 , and we obtain the desired result for the path @xmath363 .",
    "let @xmath415 be the set of simple cycles of all the multi - cycles of @xmath34 .",
    "note that @xmath416 is a set whose elements are subsets of simple cycles , i.e. , @xmath416 is the power set of power set of simple cycles and hence @xmath417 . by choosing @xmath418 and @xmath419",
    "we obtain the desired result .",
    "@xmath178    in sequel we abbreviate a maximal strongly connected component of a graph as a scc .",
    "[ lemm_inf_1 ] let @xmath34 be a multi - weighted one - player game structure , and let @xmath96 be the initial state .",
    "if there is a scc @xmath357 reachable from @xmath96 such that the multi - weighted directed graph induced by @xmath357 has a nonnegative multi - cycle , then player  1 has a strategy to satisfy the mean - payoff - inf objective @xmath282 .",
    "let @xmath357 be a scc reachable from @xmath96 such that the graph induced by @xmath357 has a nonnegative multi - cycle . then there exist simple cycles @xmath420 , factors @xmath421 and finite paths @xmath422 such that ( i )  the path @xmath423 is an acyclic path from @xmath239 to @xmath242 , and ( ii )  for every @xmath424",
    ", we have @xmath425 . an infinite memory strategy for player  1",
    "is as follows : initialize @xmath426 , and follow the steps below :    @xmath427 times in cycle @xmath233 @xmath428 @xmath429 times in cycle @xmath234 @xmath430 @xmath431 @xmath432 times in cycle @xmath433 @xmath434 @xmath435    let @xmath436 be the sum of the lengths of the paths between cycles , and let @xmath437 be the sum of the lengths of the cycles .",
    "note that both @xmath303 and @xmath438 are bounded by @xmath439 as @xmath383 and each path and cycle is of length at most @xmath309 .",
    "consider the steps executed in round @xmath440 : the sum of weights due to executing the cycles in all previous rounds up to @xmath298 is nonnegative in all dimensions .",
    "hence the sum of weights in any dimension , in the steps executed in round @xmath440 is at least @xmath441 the negative contribution can come from executing the initial prefix of length at most @xmath309 to reach the scc , then the cycles in the present round ( bounded by @xmath442 steps ) and the paths @xmath423 of length at most  @xmath303 in the previous @xmath298 rounds and in the current round ( in total bounded by @xmath443 steps ) .",
    "the number of steps executed so far is at least @xmath444 .",
    "hence the average for all dimensions for all steps in round @xmath440 is at least @xmath445 & \\geq &   \\displaystyle \\frac{-2\\cdot \\abs{s}\\cdot w}{z^2 } + \\frac{-2\\cdot ( z+1)\\cdot w}{z^2}. \\end{array}\\ ] ] as @xmath446 , it follows that the mean - payoff - inf value is at least  0 in every dimension , and hence the result follows .",
    "@xmath178    [ lemm_inf_2 ] let @xmath34 be a multi - weighted one - player game structure , and let @xmath96 be the initial state .",
    "if for every scc @xmath357 reachable from @xmath96 the multi - weighted directed graph induced by @xmath357 does not have a nonnegative multi - cycle , then player  1 does not have strategy from @xmath96 to satisfy the mean - payoff - inf objective @xmath282 .",
    "consider an arbitrary strategy for player  1 , and let the set of states visited infinitely often be contained in an scc @xmath357 . since @xmath357 does not have a nonnegative multi - cycle it follows from lemma  [ lem : multicycleprops](2 ) that every infinite path that visits states in @xmath357 has a mean - payoff - inf value at most @xmath447 , for some @xmath448 , in some dimension .",
    "it follows the strategy for player  1 does not satisfy the mean - payoff - inf objective @xmath282 .",
    "@xmath178    the following lemma shows that in one - player game structure the @xmath282 objective can be solved in polynomial time . to describe the precise complexity ,",
    "let us denote by @xmath449 the complexity to solve linear inequalities with @xmath11 variables and @xmath450 constraints .",
    "given a multi - weighted one - player game structure @xmath34 and a state @xmath96 , the problem of deciding whether player  1 has a strategy for a mean - payoff - inf objective @xmath282 from @xmath96 can be solved in polynomial time ( in time @xmath451 ) .",
    "it follows from lemma  [ lemm_inf_1 ] and lemma  [ lemm_inf_2 ] that an algorithm to solve the problem is as follows : consider the scc decomposition of the graph , and for every multi - weighted graph induced by an scc @xmath357 reachable from @xmath96 check if the multi - weighted directed graph induced by @xmath357 has a nonnegative multi - cycle ( in polynomial time by lemma  [ lem : multicycleprops](1 ) ) . since scc decomposition is linear time ( in time @xmath452 ) and the number of scc s is linear , we obtain the desired result .",
    "the complexity of the linear inequations follows from lemma  [ lem : multicycleprops ] .",
    "@xmath178    thus we obtain the desired conp upper bound .",
    "we have the following theorem summarizing the result of this section .",
    "[ thrm : inf ] for multi - weighted two - player game structures with objective @xmath453 for player  1 , the following assertions hold :    1 .   winning strategies for player  1 require infinite - memory in general , and memoryless winning strategies exist for player  2",
    "the problem of deciding whether a given state is winning for player  1 is conp - complete .",
    "we consider multi - weighted two - player game structures , two sets @xmath105 , and the multi - mean - payoff objective @xmath454 for player  1 .",
    "note that the problem is more general than the problem considered in the previous section ( with @xmath455 we obtain @xmath282 objectives , and with @xmath456 we obtain @xmath281 objectives ) .",
    "hence it follows that in general winning strategies for player  1 require infinite - memory , and the problem is conp - hard .",
    "we show that memoryless winning strategies exist for player  2 , and that the decision problem is conp - complete .",
    "we start with the crucial result that considers the case when the mean - payoff - sup objective is required for one dimension , and for all the other dimensions the mean - payoff - inf objective is required .",
    "the lemma shows that if only one dimension is @xmath281 objective , then it can be equivalently considered as @xmath282 objective .",
    "[ lem : gmpmixedonesup ] let @xmath457 and @xmath186 be a state .",
    "player  1 has a winning strategy for the objective @xmath458 from @xmath186 if and only if player  1 has a winning strategy for the objective @xmath459 from @xmath186 .    to prove the lemma we show the following equivalent statement : player  2",
    "has a winning strategy to falsify @xmath458 from @xmath186 if and only if player  2 has a winning strategy to falsify @xmath459 from @xmath186 .",
    "one direction is trivial as for any sequence @xmath460 of real numbers we have @xmath461 , and hence it follows that a winning strategy for player  2 to falsify @xmath462 is also a winning strategy to falsify @xmath282 .",
    "suppose that player  2 has a winning strategy for @xmath282 , then by theorem  [ thrm : inf ] player  2 has a memoryless winning strategy  @xmath72 .",
    "let @xmath344 be the one - player game structure obtained by fixing the strategy @xmath72 for player  2 .",
    "since @xmath72 is winning for player  @xmath3 , it follows from lemma  [ lemm_inf_1 ] that in @xmath344 , for all scc s @xmath357 , in the subgraph induced by @xmath357 there is no nonnegative multi - cycle .",
    "it follows from lemma  [ lem : multicycleprops ] that there exist a constant @xmath463 and a real - valued constant @xmath464 such that for all finite paths @xmath363 in the graph @xmath34 we have @xmath465 .",
    "let us denote @xmath466 .",
    "we show that @xmath72 is winning for player  @xmath3 ( to falsify @xmath458 ) .",
    "consider a play @xmath49 consistent with @xmath72 , and assume that @xmath467 .",
    "then the average payoff in dimension @xmath4 is greater than @xmath468 in infinitely many positions ( since the limit - superior is at least  0 ) , and by lemma  [ lem : multicycleprops ] there is a dimension @xmath469 with average payoff at most @xmath447 in infinitely many positions , thus @xmath470 .",
    "hence either the supremum of the average weight in dimension @xmath4 is negative , or the infimum of the average weight in one of the other dimensions is negative . in either case",
    ", the strategy @xmath72 is winning for player  2 .",
    "this completes the proof . @xmath178",
    "our goal is now to prove a result similar to lemma  [ lem : sup ] for @xmath471 objectives . to prove the result , we first prove two lemmas .",
    "the following lemma about @xmath282 objectives is derived from the proof of lemma  [ lemm_inf_1 ] and it shows that if player  1 has a winning strategy for a mean - payoff - inf objective ( with threshold @xmath112 in every dimension ) , then for every @xmath472 there is a finite - memory strategy to ensure mean - payoff - inf value of at least @xmath295 in every dimension .",
    "lemma  [ lemm : mixed_req_2 ] will be a consequence of lemma  [ lemm : mixed_req_1 ] .",
    "[ lemm : mixed_req_1 ] let @xmath34 be a multi - weighted two - player game structure , and let @xmath96 be the initial state . if there is a winning strategy for player  1 for the objective @xmath473 , then for all @xmath472 there is a finite - memory winning strategy for player  1 to ensure the objective @xmath474 .",
    "since against finite - memory strategies for player  1 memoryless winning strategies exist for player  2 ( lemma  [ thrm_inter ] and lemma  [ lem : player - two - memoryless ] ) and multi - mean - payoff games are determined under finite memory ( theorem  [ thrm_gen_mean ] ) to prove that finite - memory winning strategies exist for player  1 for the objective @xmath475 we show that against every memoryless strategy for player  2 there exists a finite - memory winning strategy for player  1 .",
    "consider a memoryless strategy for player  2 and the one - player game structure obtained after fixing the strategy . by lemma  [ lemm_inf_2 ] ,",
    "since player  1 satisfies the @xmath282 objective , there must be a scc @xmath357 reachable from @xmath96 ( within @xmath309 steps ) such that the graph induced by @xmath357 has a nonnegative multi - cycle . then there",
    "exist simple cycles @xmath420 , factors @xmath421 and finite paths @xmath422 such that :    1 .",
    "the path @xmath423 is a path between @xmath239 to @xmath242 with length at most @xmath309 .",
    "2 .   for every @xmath424",
    ", we have @xmath476    a finite memory strategy for player  1 is as follows : for large enough @xmath298 , follow the steps below :    @xmath427 times in cycle @xmath233 @xmath428 @xmath429 times in cycle @xmath234 @xmath430 @xmath431 @xmath432 times in cycle @xmath433 @xmath434    in contrast with the strategy of lemma  [ lemm_inf_1 ] , the above strategy plays the same in every round but for large enough @xmath298 , thus it can be implemented with finite memory .",
    "let @xmath436 be the sum of the lengths of the paths between cycles , and let @xmath477 be the sum of the lengths of the cycles .",
    "note that both @xmath303 and @xmath76 are bounded by @xmath439 as @xmath383 and each path and cycle is of length at most @xmath309 .",
    "consider the steps executed in round @xmath11 : the sum of weights due to executing the cycles in all previous rounds up to @xmath298 is nonnegative in all dimensions .",
    "hence the sum of weights in any dimension , in the steps executed in round  @xmath11 is at least @xmath478 the argument is as in lemma  [ lemm_inf_1 ] .",
    "the number of steps executed so far is at least @xmath479 .",
    "hence the average for all dimensions for all steps in round @xmath11 is at least @xmath480 for @xmath481 . with @xmath298 large enough ( @xmath482 )",
    ", it follows that as @xmath483 , the mean - payoff - inf value is at least  @xmath295 in every dimension , and hence the result follows .",
    "@xmath178    [ lemm : mixed_req_2 ] let @xmath34 be a multi - weighted two - player game structure , and let @xmath96 be the initial state .",
    "if there is a winning strategy for player  1 for the objective @xmath473 , then for all @xmath472 there is a finite - memory winning strategy @xmath84 and a number @xmath484 such that against all strategies of player  2 and for all @xmath485 the sum of weights after @xmath48 steps is at least @xmath486 in every dimension , i.e. , the average of the weights is at least @xmath487 once @xmath488 .",
    "fix a finite - memory strategy @xmath84 for player  1 to satisfy the objective @xmath474 ( such a strategy exists by lemma  [ lemm : mixed_req_1 ] ) .",
    "let @xmath76 be the size of the memory .",
    "in the game structure obtained by fixing the strategy , in all cycles the average of the weights in every dimension is at least @xmath295 . for any path",
    "it can be decomposed into initial prefix and a cycle free segment in the end ( each of length at most @xmath489 ) , and the other part is decomposed into cycles ( not necessarily simple cycles ) ( as done in lemma  [ lem : multicycleprops ] ) .",
    "the initial prefix and trailing prefix is of length at most @xmath489 and the sum of the weights is at least @xmath490 .",
    "hence choosing @xmath491 proves the desired result .",
    "@xmath178    [ lemm : mixed_1 ]",
    "let @xmath34 be a multi - weighted game structure with multi - mean - payoff objective @xmath454 for player  1 .",
    "for @xmath492 , let @xmath493 denote the objective that requires to satisfy all @xmath282 objectives and the @xmath281 objective in dimension @xmath494 .",
    "if for all states @xmath29 and for all @xmath492 , player  1 has a winning strategy from @xmath186 for the objective @xmath495 , then for all states @xmath289 , player  1 has a winning strategy from @xmath186 for the objective @xmath471 .",
    "the key idea of the proof is similar to lemma  [ lem : sup ] and we use lemma  [ lemm : mixed_req_1 ] ( details are presented below for completeness ) . for all @xmath289 and all @xmath492 , let @xmath496 be a winning strategy from @xmath186 for player  1 for the objective @xmath495 .",
    "intuitively , the winning strategy for the conjunction of mean - payoff objectives plays @xmath497 until the mean - payoff value in dimension @xmath494 gets very close to @xmath112 , and then switches to a strategy for another value of @xmath492 .",
    "thus player  1 ensures nonnegative mean - payoff value in every dimension , with mean - payoff - inf in dimensions of @xmath107 and mean - payoff - sup in dimensions of @xmath108 .",
    "let @xmath472 , and @xmath186 be the initial state .",
    "let @xmath498 .",
    "let @xmath499 be a finite - memory winning strategy for player  1 for the objective @xmath500 with the initial state @xmath186 ( the existence of finite - memory winning strategy for @xmath500 follows from lemma  [ lem : gmpmixedonesup ] and lemma  [ lemm : mixed_req_1 ] ) . for @xmath296",
    ", consider the tree @xmath501 defined as follows .",
    "let @xmath502 be the strategy tree for @xmath499 with initial state @xmath186 .",
    "we say that a node @xmath8 of @xmath502 is an _",
    "node if the average of the weights in all dimensions in @xmath107 and dimension @xmath494 of the path from the root to @xmath8 is at least  @xmath295 .",
    "the tree @xmath501 is obtained from @xmath502 by removing all descendants of @xmath294-good nodes that are at depth at least @xmath298 .",
    "hence , the leaves of @xmath501 are @xmath294-good .",
    "we show that @xmath501 is a finite tree . by knig s lemma  @xcite",
    ", it suffices to show that every path in the tree is finite .",
    "assume towards contradiction that there is an infinite path @xmath49 in the tree .",
    "hence @xmath49 is a play consistent with @xmath503 , and since @xmath49 does not contain any @xmath294-good node , it follows that for some dimension @xmath504 we have @xmath505 ( and @xmath506 as well ) .",
    "it follows that @xmath507 .",
    "this contradicts the assumption that @xmath503 is a winning strategy for player  1 for @xmath500 .",
    "we now describe a strategy for player  1 based on the finite - memory winning strategies for @xmath500 and show that the strategy is winning for the objective @xmath471 .",
    "@xmath302 let @xmath186 be the current state , and @xmath303 be the play length so far .",
    "@xmath508 ( where @xmath509 , that is , @xmath510 is the finite - memory strategy for @xmath511 from @xmath186 , the number @xmath512 is as defined in lemma  [ lemm : mixed_req_2 ] for the strategy , and @xmath513 is the maximum over @xmath514 ) play according to @xmath503 until a leaf @xmath181 of @xmath501 is reached .",
    "let @xmath301 be the largest absolute value of the weight function @xmath5 .",
    "after the last command in the internal for - loop was executed , the mean - payoff value in dimension @xmath494 , is at least @xmath515 where @xmath516 and this is at least @xmath517 consider the segment of the play for the round for a value of @xmath294 : let us denote by @xmath518 the number of steps played till the beginning of the round and we will denote by @xmath519 the total number of steps of the current round .",
    "our goal is to obtain an upper bound on the average of the weights for all @xmath520 . in the beginning of the round ( i.e. , after @xmath518 steps ) the average value for dimensions in @xmath107 is at least @xmath487 (",
    "recall that @xmath294 has been halved in line 8) .",
    "step  5 ensures that at least @xmath521 steps have been already played , i.e. , @xmath522 .",
    "it follows from lemma  [ lemm : mixed_req_2 ] that for all dimensions in @xmath107 and for all steps @xmath523 of the current round , the sum of the weights is at least @xmath524 and hence the average value at step @xmath48 is at least @xmath525 since @xmath526 and @xmath527 .",
    "that is , for all steps in the round for @xmath294 , for all dimensions in @xmath107 , the average value is at least @xmath528 . in every external for - loop @xmath294",
    "gets smaller , and @xmath303 gets bigger .",
    "moreover , since the tree @xmath501 is finite , it follows that the main loop gets executed infinitely often ( i.e. , the strategy does not get stuck in the for - loop ) .",
    "thus when the length of the play tends to infinity , the supremum of the mean - payoff value tends to a value at least @xmath112 in every dimension @xmath529 , and the infimum of the mean - payoff value tends to a value at least  0 in every dimension @xmath530 .",
    "hence the strategy described above is a winning strategy for player  1 .",
    "@xmath178    in multi - mean - payoff games with objective @xmath471 for player  @xmath2 , memoryless strategies are sufficient for player  @xmath3 .",
    "the proof is similar to the proof of lemma  [ lem : sup2 ] , and based on induction on the number of states @xmath309 in the game structure .",
    "the base case with @xmath310 is obvious .",
    "we now consider the inductive case with @xmath311 . for @xmath492 ,",
    "let @xmath531 be the winning region for player  2 for the objective @xmath495 as defined in lemma  [ lemm : mixed_1 ] .",
    "let @xmath532 .",
    "we consider the following two cases :    1 .",
    "if @xmath317 , then player  1 can satisfy the objective @xmath495 for all @xmath492 , and then by lemma  [ lemm : mixed_1 ] player  1 wins from everywhere for the objective @xmath471 . hence there is no winning strategy for player  2 . 2 .   if @xmath319 , then there exists @xmath492 such that @xmath533 . in @xmath531",
    "there is a memoryless winning strategy @xmath72 for player  2 to falsify @xmath495 , and the strategy also falsifies @xmath471 as @xmath534 .",
    "the existence of memoryless winning strategy for player  @xmath3 follows from the following facts : by lemma  [ lem : gmpmixedonesup ] it follows that if player  2 can falsify the objective @xmath495 , then player  2 can also falsify the objective where in the dimension @xmath494 we consider the mean - payoff - inf objective instead of mean - payoff - sup objective , and the existence of memoryless strategies against mean - payoff - inf objectives follows from theorem  [ thrm : inf ] .",
    "the rest of the proof is identical to the proof of lemma  [ lem : sup2 ] and can be omitted ( we present it for sake of completeness ) .",
    "since @xmath531 is a winning region for player  @xmath3 it follows that @xmath535 , and hence the graph @xmath323 induced by @xmath536 is a game structure .",
    "let @xmath537 be the winning region for player  2 in @xmath323 . by inductive hypothesis (",
    "since @xmath323 has strictly fewer states as a non - empty set @xmath531 is removed ) , it follows that there is a memoryless winning strategy @xmath326 in @xmath323 for the region @xmath327 .",
    "the winning region @xmath538 for player  1 in @xmath323 is also winning for player  1 in @xmath34 ( since @xmath539 , @xmath323 is obtained by removing only player  1 edges ) . hence to complete the proof it suffices to show that the memoryless strategy obtained by combining @xmath72 in @xmath531 and @xmath326 in @xmath327 is winning for player  2 from @xmath540 .",
    "define the strategy @xmath330 as follows : @xmath541 consider the memoryless strategy @xmath330 for player  2 and the outcome of any counter strategy for player  1 that starts in @xmath542 .",
    "there are two cases : ( a )  if the play reaches @xmath531 , then it reaches in finitely many steps , and then @xmath72 ensures that player  2 wins ; and ( b )  if the play never reaches @xmath314 , then the play always stays in @xmath323 , and now the strategy @xmath326 ensures winning for player  2 .",
    "the desired result follows .",
    "@xmath178    [ [ conp - upper - bound . ] ] * conp upper bound .",
    "* + + + + + + + + + + + + + + + + + + +    since memoryless winning strategies exist for player  2 , to establish the conp upper bound we need to show that one - player game structures with @xmath471 objectives can be solved in polynomial time . first we interpret @xmath471 as the conjunction of @xmath495 for @xmath492 . from lemma  [ lem : gmpmixedonesup ]",
    "it follows every @xmath495 can be considered as @xmath282 objective and hence can be solved in polynomial time for one - player game structures by the results of section  [ subsec : mean - inf ] .",
    "hence the conp upper bound follows .",
    "we have the following theorem summarizing the results of this section .",
    "[ thrm : mixed ] for multi - weighted two - player game structures with objective @xmath454 for player  1 , the following assertions hold :    1 .   winning strategies for player  1 require infinite - memory in general , and memoryless winning strategies exist for player  2",
    "the problem of deciding whether a given state is winning for player  1 is conp - complete .",
    "in this work we considered games with multiple mean - payoff and energy objectives , and established determinacy under finite - memory , inter - reducibility of these two classes of games for finite - memory strategies , and improved the complexity bounds from expspace to conp - complete .",
    "we also showed that multi - energy and multi - mean - payoff games under memoryless strategies are np - complete .",
    "finally , we studied multi - mean - payoff games with infinite - memory strategies and show that multi - mean - payoff games with mean - payoff - sup objectives can be decided in np @xmath0 conp ( and can be solved in polynomial time if mean - payoff games with single objective can be solved in polynomial time ) ; and multi - mean - payoff games with mean - payoff - inf objectives , and combination of mean - payoff - inf and mean - payoff - sup objectives are conp - complete .",
    "thus we present optimal computational complexity results for multi - energy and multi - mean - payoff games under finite - memory , memoryless , and infinite - memory strategies",
    ".    * acknowledgement .",
    "* we are grateful to jean cardinal for pointing the reference  @xcite .    10    m.  abadi , l.  lamport , and p.  wolper .",
    "realizable and unrealizable specifications of reactive systems . in _ proc . of icalp",
    "_ , lncs 372 , pages 117 .",
    "springer , 1989 .",
    "r.  alur , a.  degorre , o.  maler , and g.  weiss . on omega - languages defined by mean - payoff conditions .",
    "in _ proc . of fossacs _ , lncs 5504 , pages 333347 .",
    "springer , 2009 .",
    "p.  bouyer , u.  fahrenberg , k.  g. larsen , n.  markey , and j.  srba .",
    "infinite runs in weighted timed automata with energy constraints . in _ proc . of formats _ , lncs 5215 , pages 3347 .",
    "springer , 2008 .",
    "t.  brzdil , p.  jancar , and a.  kucera .",
    "reachability games on extended vector addition systems with states . in _ proc .",
    "of icalp _ , lncs 6199 , pages 478489 .",
    "springer , 2010 .",
    "l.  brim , j.  chaloupka , l.  doyen , r.  gentilini , and j .- f .",
    "faster algorithms for mean - payoff games . , 38(2):97118 , 2011 .",
    "a.  chakrabarti , l.  de alfaro , t.  a. henzinger , and m.  stoelinga .",
    "resource interfaces . in _ proc . of emsoft : embedded software _ , lncs 2855 , pages 117133 .",
    "springer , 2003 .",
    "k.  chatterjee .",
    "concurrent games with tail objectives . , 388(1 - 3):181198 , 2007 .",
    "k.  chatterjee , l.  doyen , h.  edelsbrunner , t.  a. henzinger , and p.  rannou .",
    "mean - payoff automaton expressions . in _ proc . of concur",
    "_ , lncs 6269 , pages 269283 .",
    "springer , 2010 .",
    "a.  condon .",
    "the complexity of stochastic games .",
    ", 96(2):203224 , 1992 .",
    "l.  e. dickson .",
    "finiteness of the odd perfect and primitive abundant numbers with @xmath48 distinct prime factors .",
    ", 35(4):413422 , 1913 .",
    "a.  ehrenfeucht and j.  mycielski .",
    "positional strategies for mean - payoff games . , 8:109113 , 1979 .",
    "u.  fahrenberg , l.  juhl , k.  g. larsen , and j.  srba .",
    "energy games in multiweighted automata . in _ proc . of ictac : theoretical aspects of computing _ , lncs 6916 , pages 95115 .",
    "springer , 2011 .",
    "s.  fortune , j.  e. hopcroft , and j.  wyllie .",
    "the directed subgraph homeomorphism problem .",
    ", 10:111121 , 1980 .",
    "chaloupka j. -reachability problem for games on 2-dimensional vector addition systems with states is in p. in _ proceedings of rp 2010 : reachability problems _ , lncs 6227 , pages 104119 .",
    "springer - verlag , 2010 .",
    "r.m . karp .",
    "a characterization of the minimum cycle mean in a digraph .",
    ", 23:309311 , 1978 .    d.  knig .",
    "akademische verlagsgesellschaft , leipzig , 1936 .",
    "e.  kopczynski .",
    "half - positional determinacy of infinite games . in _",
    "icalp ( 2 ) _ , pages 336347 , 2006 .",
    "s.  r. kosaraju and g.  f. sullivan . detecting cycles in dynamic graphs in polynomial time ( preliminary version ) . in _ proc . of stoc",
    ": symposium on theory of computing _ , pages 398406 .",
    "acm , 1988 .",
    "d.  martin .",
    "borel determinacy . in _ annals of mathematics _ ,",
    "volume 102 , pages 363371 , 1975 .",
    "c.h . papadimitriou . .",
    "addison - wesley , 1993 .",
    "a.  pnueli and r.  rosner . on the synthesis of a reactive module . in _ proc . of popl _ ,",
    "pages 179190 , 1989 .",
    "j. ramadge and w.  m. wonham .",
    "supervisory control of a class of discrete event processes .",
    ", 25(1):206230 , 1987 .",
    "l.  s. shapley .",
    "stochastic games . in _ proc . of the national acadamy of science usa _ ,",
    "volume  39 , pages 10951100 , 1953 .",
    "u.  zwick and m.  paterson .",
    "the complexity of mean payoff games on graphs .",
    ", 158:343359 , 1996 .",
    "we discuss the results of  @xcite which shows the existence of memoryless winning strategies for player  2 when the objective for player  1 is the conjunction of mean - payoff - inf objectives .",
    "we will also argue that the results of  @xcite do not show the existence of memoryless winning strategies for player  2 when the objective for player  1 is the conjunction of mean - payoff - sup objectives ( the result that we establish in lemma  [ lem : sup2 ] ) .",
    "the result of  @xcite requires the notion of _ convexity _ for _ prefix - independent _ objectives",
    ".    * prefix - independent and convex objectives . *",
    "an objective @xmath97 is prefix - independent if for all plays @xmath49 and @xmath217 such that @xmath543 , where @xmath544 is a finite prefix , we have @xmath99 iff @xmath545 , i.e. , the objective is independent of finite prefixes .",
    "a play @xmath49 is a _ combination _ of two plays @xmath546 and @xmath547 , where @xmath548 s are finite prefixes , if @xmath549 .",
    "an objective @xmath97 is _ convex _ if it is closed under combination .",
    "we refer the reader to  @xcite for further details .",
    "the results of  @xcite shows that if the objective for player  1 is prefix - independent and convex , then memoryless winning strategies exist for player  2 .",
    "it is easy to verify that mean - payoff - inf objectives are both prefix - independent and convex .",
    "it follows that conjunction of mean - payoff - inf objectives are also prefix - independent and convex .",
    "hence in games with conjunction of mean - payoff - inf objectives , memoryless winning strategies exist for player  2 .",
    "we now show with an example that in contrast mean - payoff - sup objectives are not convex .",
    "consider a one - player game structure @xmath34 with two states @xmath550 , with all edges , such that all incoming edges to state @xmath551 have weight @xmath552 , and all incoming edges to @xmath553 have weight @xmath554 .      1",
    ".   _ step  1 .",
    "_ repeat the self - loop in @xmath553 until the average weight of the play prefix is below @xmath228 , then take edge to @xmath556 and goto step  2 .",
    "_ step  2 .",
    "_ repeat the self - loop in @xmath551 until the average weight of the play prefix is above @xmath2 , then take edge to @xmath553 and goto step  1 .",
    "consider the play @xmath557 obtained by exchanging @xmath551 and @xmath553 in @xmath555 .",
    "it is easy to verify that @xmath558 .",
    "however , for the following combination of the plays @xmath559 , such that forall @xmath47 the @xmath560-th state of @xmath559 is the @xmath11-th state of @xmath555 and the @xmath561-th state of @xmath559 is the @xmath11-th state of @xmath557 .",
    "we get that @xmath562 .",
    "it follows that mean - payoff - sup objectives are not convex ."
  ],
  "abstract_text": [
    "<S> in mean - payoff games , the objective of the protagonist is to ensure that the limit average of an infinite sequence of numeric weights is nonnegative . in energy games , </S>",
    "<S> the objective is to ensure that the running sum of weights is always nonnegative . </S>",
    "<S> multi - mean - payoff and multi - energy games replace individual weights by tuples , and the limit average ( resp </S>",
    "<S> .  running sum ) of each coordinate must be ( resp .  </S>",
    "<S> remain ) nonnegative . </S>",
    "<S> these games have applications in the synthesis of resource - bounded processes with multiple resources .    </S>",
    "<S> we prove the finite - memory determinacy of multi - energy games and show the inter - reducibility of multi - mean - payoff and multi - energy games for finite - memory strategies . </S>",
    "<S> we also improve the computational complexity for solving both classes of games with finite - memory strategies : while the previously best known upper bound was expspace , and no lower bound was known , we give an optimal conp - complete bound . for memoryless strategies , we show that the problem of deciding the existence of a winning strategy for the protagonist is np - complete . </S>",
    "<S> finally we present the first solution of multi - mean - payoff games with infinite - memory strategies . </S>",
    "<S> we show that multi - mean - payoff games with mean - payoff - sup objectives can be decided in np @xmath0 conp , whereas multi - mean - payoff games with mean - payoff - inf objectives are conp - complete .    </S>",
    "<S> * keywords : * _ games on graphs ; mean - payoff objectives ; energy objectives ; multi - dimensional objectives . _ </S>"
  ]
}
{
  "article_text": [
    "knot theory has been an important subject in its own right for a long time ( see [ kauffman , 1987 ] ) , and recently a great deal has been written on the connections between knot theory and dynamical systems [ ghrist et al , 1997 ] . the key idea is this : a closed ( periodic ) orbit in a three - dimensional flow is an embedding of the circle , @xmath1 , into the three - manifold that constitutes the state space of the system , hence it is a knot ( see [ kauffman , 1987 ] ) .",
    "hence , periodic solutions of dynamical systems may be knotted or linked , and , in fact , a chaotic system contains any knot and link ( [ birman and williams , 1983 ] ) . a simple approach to obtaining a ( non - chaotic ) system which contains an arbitrary knot ( even a wild knot ) is given in [ banks and diaz , 2004 ] .    it is widely known that any knot can be expressed in terms of braids , so",
    "in the first part of this paper we propose to show how to write down general explicit differential equations for these braids over a finite time interval , and then by making the vector field periodic , we can glue the two ends of the phase space at successive periodic time points together ( see * fig * [ braid representation ] ) , which will give us the desired knot embedded within a solid torus .",
    "this is achieved by using @xmath2 functions to make the twists in the braids .",
    "we shall find that any braid in a solid torus is given by an equation of the form @xmath3 where @xmath4 is a constant and @xmath5 and @xmath6 are @xmath2 functions ( i.e. an infinitely differentiable functions ) which are identically 1 on an interval @xmath7 and identically 0 on an interval @xmath8 , with @xmath9 . from the equations above , our dynamical system is defined by the sum of a sequence of @xmath2 functions ( combined in a proper way ) .",
    "however , different strands of the braids will certainly affect each other , which makes it difficult to control the global behaviour of the whole system , especially at the two ends , where we want the vector field to fit together smoothly .",
    "this again involves the introduction of a @xmath2 function to control the whole dynamical system so that the vector fields corresponding to different strands in our braid will not interact .",
    "we shall introduce the algorithm to express knots in terms of braids in the next section .",
    "this result is certainly well known , but we include this for the convenience of the reader and to fix the notation and ideas for the rest of the work .",
    "then in  3 we outline the main idea of @xmath2 functions that we need to generate dynamical systems for braids , which will glue together and be knots , as will be stated in  4 .",
    "finally , we will consider how to use similar ideas to create chaotic systems ( containing no homoclinic orbits ) in  5 .    in the second part of the paper we shall consider a more general approach to the study of dynamical systems on three manifolds , using _",
    "heegaard splittings _ and the theory developed recently in [ banks & song , 2006 ] for the structure of general dynamical systems on surfaces , using _ automorphic function _ theory .",
    "we shall generate systems containing any given knot by expressing the knot in the form of a closed braid .",
    "then we determine a system with a periodic vector field which contains the desired braid .",
    "first we outline _ alexander s theorem _ relating braids to knots .",
    "a _ knot _ is a smooth embedding of the circle @xmath1 in @xmath10 ( see * fig * [ simple knot ] ) , and a _ link _ is a finite disjoint collection of knots . in this paper",
    "we only consider knots , but the ideas generalize easily to links .",
    "knot theory is studied conveniently in terms of braids , which were originally introduced by [ artin , 1925 ] . by definition ,",
    "m - strand braid _ is a set of @xmath11 non - intersecting smooth paths connecting @xmath11 points on one horizontal line to @xmath11 points on another horizontal line ( below the first one ) - see [ kauffman,1987 ] and * fig * [ braid in 3-space ] .",
    "if we glue the corresponding left and right hand side of the braid together respectively , we get the so - called _ closure _ of a braid . from * fig *",
    "[ braid in 3-space ] , we see that it is actually a knot . more generally , the closure of a braid is a link .",
    "usually closures of braids are taken to be oriented , all strands of the braid are oriented from left to right in this paper .",
    "( alexander s theorem ) each link can be represented as the closure of a braid .",
    "@xmath12    since",
    "a link is a smooth embedding of several disjoint circles in @xmath13 , it is actually composed of several knots .",
    "consequently , we have the following corollary .",
    "each knot can be represented as the closure of a braid .",
    "@xmath12    now we give an algorithm to construct braid from a given knot .",
    "we will illustrate the method by the use of a _",
    "figure-8 knot _  the general case will then be clear .",
    "( see * fig * [ figure8 knot representation ] ) .        since a knot is essentially a closed loop , while the braid construction from a knot has at lease one strand ( in the _ unknot _ case ) , and each strand has two ends , basically what we should do is to cut the knot in a proper way so that it will turn into several strands which give us the correct braid representation .",
    "first , we choose one part of the given knot which is away from the crossings , cut the diagram at a point from this part and straighten the two ends resulted from the cut , which gives us the first strand of the braid .",
    "obviously it is better to cut the top or the bottom of the knot , as shown in * fig * [ figure8 knot representation ] ( a ) and ( b ) .",
    "as we know , the only knot that has just a one - string braid is the _ unknot _ , which implies that all the other knots have more than one strand in the corresponding braid construction .",
    "this means in order to build up the braid representation , there is a need to cut the diagram again to get the remaining strands .",
    "self - crossings of any strand of the braid can be removed by _",
    "reidemeister moves_. so the next step will be choosing a part of the resulting diagram which is before or after a self - crossing of the one - strand from the first step , cut it and straighten the diagram as we did previously .",
    "a little care must be taken at this place , since a knot is just one circle and so for each strand in the braid representation , we must guarantee that it starts at one end and finishes at the other .",
    "the solution to this is simple : we just need to add another crossing if necessary to ensure that a strand comes in from one side must go out from the other side .",
    "( see * fig * [ figure8 knot representation ] ( c ) and ( d ) for an illustration ) meanwhile , for each strand , the starting and ending points can not share the same @xmath14-value or @xmath15-value ( according to the coordinate as shown in * fig * [ figure8 knot representation ] ) , otherwise the braid represents a multi - component link instead of a knot .    perform this operation repeatedly until all the strands in the braid have no self - crossings , as shown in * fig * [ figure8 knot representation ] ( e ) .",
    "finally , rearrange the braid so that there is at most one twist at each vertical strip ( as shown in * fig * [ figure8 knot representation ] ( f ) ) .",
    "eventually we get a braid representation of the knot .",
    "of course , there are an infinite number of braid representations of a given knot ; however , we will choose the simplest one to study in this paper .",
    "now we shall give a brief resume of the theory of @xmath2 functions which we need in the next section .",
    "all the results are well known , and can be found , for example in [ helgason , 1978 ] .",
    "let @xmath16 and @xmath17 denote two _ euclidean _ spaces of @xmath11 and @xmath18 dimensions , respectively .",
    "let @xmath19 and @xmath20 be open subsets of @xmath16 and @xmath17 , respectively , and suppose @xmath21 is a mapping from @xmath19 to @xmath20 .",
    "_ the mapping @xmath21 is called _ differentiable _ if the coordinates @xmath22 of @xmath23 are differentiable functions of the coordinates @xmath24 , @xmath25 .",
    "_    _ the mapping @xmath21 is called _ analytic _ if for each point @xmath25 there exists a neighbourhood @xmath26 of @xmath27 and @xmath18 power series @xmath28 @xmath29 in @xmath11 variables such that @xmath30 @xmath29 for @xmath31 .",
    "_    _ a differentiable mapping @xmath32 is called a _ diffeomorphism _ of @xmath33 and @xmath34 if , @xmath35 is one - to - one and onto , and the inverse mapping @xmath36 is differentiable . _    for an analytic function on @xmath16 , if it vanishes on an open set , then it is identically zero . however",
    ", for general differentiable functions and in particular @xmath2 functions , the situation is completely different .    _",
    "if @xmath37 and @xmath38 are two disjoint subsets of @xmath16 , then there exists an infinitely differentiable function @xmath39 which is identically 1 on @xmath37 and identically 0 on @xmath38 . to emphasize the dependence on @xmath37 and @xmath38",
    "we often write this as @xmath40 . _    obviously such a function is non - analytic , since it is identically 0 or 1 for a continuous interval ; but it is infinitely differentiable , which makes it very useful in the next section .",
    "the standard procedure for constructing such a @xmath2 function is as follows : let @xmath41 and consider the function @xmath5 on @xmath42 defined by    @xmath43    then @xmath5 is differentiable and the same holds for the function @xmath44 which has value 1 for @xmath45 and 0 for @xmath46 .",
    "the @xmath47 function @xmath48 defined on @xmath16 is @xmath49 it can be seen that @xmath48 is differentiable and has values 1 for @xmath50 and 0 for @xmath51 , by a slight abuse of notation we shall write it as @xmath52 .",
    "( see * fig * [ c infinity function ] )    , width=192 ]    in fact we can approximate it by just using an exponential function , say @xmath53 . however , for exact matching at the boundaries we require a function which is constant on certain regions of space .",
    "we now consider dynamical systems which contain any braids constructed from some given knots . using the coordinate system shown in * fig * [ figure8 knot representation ] , we notice that a braid is composed of several strands and twists , with at most one twist at a certain vertical strip ( an interval of the @xmath54 coordinate ) .",
    "hence if we can find a dynamical system which gives us the twist , then it just remains to repeat the process to give the appropriate number of twists for the complete braid .",
    "each strand in the braid is defined by a set of equations of the form    @xmath55    where @xmath56 and @xmath57 are some functions of @xmath14 , @xmath15 and @xmath54 .",
    "normally we take @xmath57 to be a constant so the @xmath58-axis is effectively the time axis and periodicity of @xmath59 with respect to @xmath54 will lead to a system with the required knot .        * fig * [ one twist ] shows a twist projected onto three different planes , namely the @xmath60- , @xmath61- , and @xmath62-planes , respectively.because of the need to glue the braid together to get a knot , we assume that at the two ends , all the strands are parallel to the @xmath58-axis , ( mathematically speaking , we need @xmath63,@xmath64 ) which makes the vector fields at these connecting points match at the periodic points .",
    "we now give explicit equations for these strings .",
    "as shown in * fig * [ one twist ] , in the @xmath60-plane projection , the shape of the red strand is that of the @xmath2 function . after studying the change of the vector field , @xmath65 , with respect to @xmath54",
    ", we get @xmath66 in case of an ascending strand instead of the descending one , we have @xmath67 in the @xmath61-plane , the transformation group acts as a circle , which brings the top one to the bottom and bottom to the top without intersection . in the @xmath62-plane , the trajectory is a semicircle in the middle plus two straight lines at the two ends .",
    "a proper combination of @xmath2 functions will give any desired link .",
    "thus , for an over - crossing , such as the red one in * fig * [ one twist ] , we have @xmath68 while for an under - crossing , such as the blue one , it becomes @xmath69 we assume that @xmath70 is a constant and set @xmath71 ; then the equation for one twist in a braid is    @xmath72    where the choice is made depending on whether the twisted strand is ascending or descending , under - crossing or over - crossing .",
    "then we can get the dynamical system for just one strand , it is of the form    @xmath73    where @xmath27 is total number of twists in this strand , the @xmath74 sign is taken depending one whether at the corresponding twist @xmath75 , the strand ascends or descends , under - crosses or over - crosses .",
    "the next step will be to combine all the equations for different strands together in a proper way so that we get a final one for the whole braid .",
    "as shown below in * fig * [ tube ] , we create a tube around each string , such that within this tube , all the trajectories follow the middle strand , while outside it , the dynamics are all zero , which means both @xmath65 and @xmath76 are 0 .    by definition , an _",
    "m - strand braid _ is a set of @xmath11 non - intersecting smooth paths , so the key idea is this : as long as the radius is small enough , there exists a tube around each string that has no intersection with others . in this way ,",
    "we effectively get one equation for the whole braid while avoiding the interaction between the stands .        this is also achieved by using the @xmath2 function of the form @xmath77 where @xmath78 is the coordinate of the middle strand with respect to different @xmath54 value , and @xmath79 , @xmath80 need to be chosen carefully so that they are small enough to avoid intersection with other tubes .",
    "consequently , the dynamical system of the braid is @xmath81 where @xmath82 is the total number of strands in the braid , @xmath83 is the tube function for the @xmath84th strand , and @xmath85 are the dynamics for the @xmath84th strand obtained from * equation * ( [ cinfinity tube ] ) .",
    "as before we choose @xmath70 to be a constant , so @xmath58 is like a time - axis .",
    "_ consider the _",
    "trefoil _ knot shown in * fig * [ simple knot ] ; we shall give two braid presentations and the corresponding dynamical systems for it .",
    "_    _ i ) as shown in * fig * [ trefoil 1 ] , the _ trefoil _ knot can be represented by a 2-strand braid . _ _ hence the dynamics for strand @xmath86 is of the form _",
    "@xmath87 _ for some numbers",
    "@xmath88 , while for strand @xmath89 , the equations are much the same except the change of plus / minus sign .",
    "so let @xmath78 and @xmath90 stand for the @xmath14- and @xmath15-value for strand @xmath86 and @xmath89 respectively , we can build up a tube around each string , and finally get the dynamical system for the braid , which is _",
    "@xmath91    _ where @xmath92 have to be chosen carefully to avoid intersection of different tubes .",
    "_    _ using matlab , we get a plot of this 2-strand braid , as shown in * fig * [ matlab trefoil 1 ] .",
    "_    _ ii ) by adding another cut as shown in * fig * [ trefoil 1 ] ( c ) , we have a new braid presentation for the same _ trefoil _ knot , as in * fig * [ trefoil 2 ] . _        _ in the same manner as in method @xmath86 , let @xmath93 stand for the dynamics , @xmath78 , @xmath90 and @xmath94 for the @xmath14- and @xmath15-value of the three strings , respectively .",
    "then the dynamical system for this 3-strand braid is _",
    "@xmath95    _ a picture for this 3-strand braid generated from matlab is shown in * fig * [ trefoil 3 ] . _    [ cols=\"^,^ \" , ]     _ after gluing the corresponding ends of the braid together , we get the required knot situated in a solid torus - this is equivalent to making the vector fields in the systems above periodic . _",
    "in this section we shall demonstrate how to obtain dynamical systems with arbitrarily knotted chaos .",
    "we shall do this by making an extension of the methods in the previous sections .",
    "in particular , we shall need some elementary ideas from transformation group theory .",
    "thus , if @xmath96 is a topological space , and @xmath97 is a group , we say that @xmath59 is a * transformation group * on @xmath96 if there is a continuous map @xmath98 such that    \\(i ) @xmath99 for all @xmath100 and all @xmath101    \\(ii ) @xmath102 for all @xmath103 , where @xmath104 is the _ identity _ of @xmath59 .",
    "we usually write @xmath105 for @xmath106 .",
    "if @xmath59 is a subset of @xmath107 ( the general linear group ) , we call @xmath59 a * linear transformation group*.    consider now a process for modifying a given dynamical system @xmath108 by a given function @xmath109 where @xmath110 is an element of a ( linear ) transformation group for each @xmath54 .",
    "we define @xmath111 then @xmath112    [ simple ] suppose that the vector field @xmath113 ( defined on a subset @xmath114 ) is periodic in @xmath54 , with period @xmath115 , and that the map @xmath116 , where @xmath110 belongs to some linear transformation group on @xmath26 , is such that the vector field @xmath117 is also periodic in @xmath54 with period @xmath115 , then the system @xmath118 is naturally defined on the torus @xmath119/\\sim $ ] where @xmath120 is the equivalence relation @xmath121 if and only if @xmath122 and @xmath123 or @xmath115 .    * proof . * the proof follows from the above discussion and the fact that the unique solution of the equation @xmath124 is @xmath125 which is periodic with period @xmath115 .",
    "@xmath126    _ consider the trivial system _ @xmath127 _ defined on the disk @xmath128 , and let @xmath59 be the orthogonal group @xmath129 . then if _ @xmath130 _ ( i.e .",
    "counterclockwise rotation through @xmath54 ) , we have _",
    "@xmath131 _ hence the system _",
    "@xmath132 _ has trefoil knot solutions ( see * fig * [ cylinder ] ) .",
    "_        this is , of course , a trivial example and to be useful we often require to operate in different regions of the state space with different ` local ' transformation groups . to do this we introduce , as in the previous sections , @xmath2 functions defined on disjoint subsets of @xmath17 as follows",
    "let @xmath133 ( for some finite @xmath134 ) be bounded open subsets of @xmath17 such that there exist disjoint open neighbourhoods @xmath135 of @xmath136 for which @xmath137 let @xmath138 be a @xmath2 function such that @xmath139 now let @xmath140 be @xmath134 ( linear ) transformation groups and let @xmath141 be @xmath134 smooth functions with values in @xmath142 .",
    "then as in * equation * [ first cinfinity equation ] we consider the system @xmath108 and the transformed system @xmath143 where @xmath144 consider the effect of @xmath142 on @xmath145 at @xmath146 .",
    "define @xmath147 and let @xmath148 be the @xmath149 intersections of the sets @xmath150 and @xmath151 .",
    "we assume that the functions @xmath141 are chosen so that the @xmath152 are mutually disjoint .",
    "let @xmath153 be the obvious restriction of @xmath138 to @xmath152 and consider the system @xmath154    using the above notation , if the function @xmath155 is periodic with period @xmath115 , then the system @xmath156 ( where @xmath26 is a ball containing all sets @xmath145 ) , is naturally defined on the torus @xmath119/\\sim $ ] where @xmath120 is as in * theorem * [ simple ] .",
    "@xmath126    _ we will use this method to generate systems with arbitrarily knotted chaos .",
    "consider first a system with unknotted chaos .",
    "let @xmath157 be the sets _",
    "@xmath158 _ and @xmath159 the sets _ @xmath160 _ the transformation groups @xmath161 correspond to : + the ` stretch and squeeze ' _ @xmath162 _ rotation _ @xmath163 _ and translation _",
    "@xmath164 _ finally we define _",
    "@xmath165 _ and we have the system _ @xmath166 where @xmath167 is a @xmath2 function corresponding to @xmath152 , @xmath168 _ and @xmath169 is obtained from @xmath142 as in * equation * [ second cinfinity equation ] .",
    "this system has chaotic orbits as shown in * fig * [ smale horseshoe ] .",
    "note that if @xmath170 are properly chosen , the system has no homoclinic orbits .",
    "( this simply implements the _ ` smale horseshoe ' _ map . ) _        _ now consider a system of the form _",
    "@xmath171 _ defined for @xmath172 , where @xmath26 is some bounded open set in @xmath17 .",
    "let @xmath173\\rightarrow \\mathbb{r}^{n}$ ] be any @xmath2 function ( which represents a strand of a braid ) and let @xmath174 be a @xmath2 function which is 1 on @xmath26 and 0 outside some neighbourhood of @xmath26 . then ,",
    "if we put _",
    "@xmath175 _ the system _",
    "@xmath176 _ has trajectories like those of * equation * [ braid presentation for a system ] in @xmath26 , but ` bent ' by @xmath21 .",
    "( see * fig * [ twisted braid ] ) _        _ more generally , if @xmath177 , are several open ( disjoint ) sets in @xmath17 , and @xmath178 are associated functions as above , then the system _",
    "@xmath179 _ will have trajectories similar to a given system in the regions @xmath180but ` bent ' by the functions @xmath181 .",
    "clearly , by appropriate choice of @xmath181 and @xmath138 we can obtain a system with arbitrarily knotted chaos , which contains no homoclinic orbits . *",
    "fig * [ knotted chaos ] shows a braid representation of a _ trefoil _ knot which contains a chaotic system , _ smale horseshoe _ , inside . _",
    "in this paper we have shown how to generate three - dimensional systems containing arbitrarily knotted chaos by using the theory of transformation groups and @xmath2 functions . by ` twisting ' a simple existing dynamical system by local transformation groups and making the resulting system periodic , virtually any dynamical behaviour can be obtained . in the second part of the paper we shall consider more general three - manifolds and dynamical systems defined on them by using the theory of _",
    "heegaard splittings_. every three - manifold has a _",
    "heegaard splitting _ which represents it in the form of two three manifolds with genus @xmath27 surfaces glued together along a framed knot ."
  ],
  "abstract_text": [
    "<S> in this paper , we give an explicit construction of dynamical systems ( defined within a solid torus ) containing any knot ( or link ) and arbitrarily knotted chaos . </S>",
    "<S> the first is achieved by expressing the knots in terms of braids , defining a system containing the braids and extending periodically to obtain a system naturally defined on a torus and which contains the given knotted trajectories . to get explicit differential equations for dynamical systems containing the braids </S>",
    "<S> , we will use a certain function to define a tube neigbourhood of the braid . </S>",
    "<S> the second one , generating chaotic systems , is realized by modelling the _ </S>",
    "<S> smale horseshoe_. + * keywords : * knots , braids , chaotic systems , _ smale horseshoe _ , @xmath0 functions </S>",
    "<S> .    [ section ] [ section ] [ section ] [ section ] </S>"
  ]
}
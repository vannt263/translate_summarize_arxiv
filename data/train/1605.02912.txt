{
  "article_text": [
    "we consider the title question for two of the main tools for polynomial systems : _ grbner bases _ ( gb ) and _ cylindrical algebraic decomposition _ ( cad ) .",
    "for both the common claims of `` doubly exponential '' , refers to `` doubly exponential in the number of variables @xmath0 '' .",
    "all other dependencies , on polynomial degrees @xmath1 , polynomial coefficient length @xmath2 , or number of polynomials @xmath3 , are themselves polynomial in these quantities ( albeit with the exponent of @xmath1 and @xmath3 possibly exponential in @xmath0 ) .",
    "in section [ sec - gb ] we recall recent improvements to the analysis for gb which inspires us to revisit the complexity of cad in section [ sec - cad ] . here",
    "we describe how recent work for cad in the presence of equational constraints ( equations logically implied by the input ) allows for a more subtle analysis .",
    "the progress is under the assumption of primitive equational constraints and in section [ sec - primitive ] we elaborate on the importance of this .",
    "a _ grbner basis _ ( gb ) is a particular generating set of an ideal @xmath4 ( defined with respect to a monomial ordering ) .",
    "one definition is that the ideal generated by the leading terms of @xmath4 is generated by the leading terms of the gb .",
    "gb theory allows properties of the ideal to be deduced such as dimension and number of zeros and so are one of the main practical tools for working with polynomial systems",
    ". introduced by buchberger in his phd thesis of 1965 @xcite ; there has been much research to improve and optimise gb calculation , with the @xmath5 algorithm @xcite perhaps the most used approach currently .",
    "it is common ( and the authors have done this , to write ) `` @xcite shows that the computation of grbner bases is doubly exponential in the number of variables '' .",
    "it is unfortunately also common simply to write `` @xcite shows that the computation of grbner bases is doubly exponential '' , which while strictly correct if one counts the number of bits in a suitable encoding , is not particularly helpful .",
    "however , we have known for a long time that the complexity of a grbner base of a zero - dimensional ideal is `` only '' singly - exponential in @xmath0 @xcite . these days , a much better reference is @xcite , which establishes both upper and lover bounds which are _ singly _ exponential in @xmath0 , but _",
    "doubly _ exponential in @xmath6 , the actual dimension of the ideal .",
    "clearly @xmath7 , and only in the worst case is @xmath8 .",
    "though we are currently unable to capitalise on the fact , we note that the examples of @xcite are of non - radical ideals .",
    "the effective nullstellensatz of @xcite is only singly - exponential in the number of variables for membership in the _ radical of _ an ideal , giving us reason to believe it may be possible to prove a singly - exponential bound for radical ideals .",
    "gb technology is also needed to realise similar improvements to the complexity bound of cad , as discussed next .",
    "a _ cylindrical algebraic decomposition _ ( cad ) is a _ decomposition _ of @xmath9 into cells .",
    "the cells are arranged _ cylindrically _ , meaning the projections of any pair with respect to the given ordering are either equal or disjoint .",
    "we assume variables labelled according to their ordering ( so the projections considered are @xmath10 for @xmath11 ) with the highest ordered variable present said to be the _",
    "main variable_. finally , by _",
    "algebraic _ we mean semi - algebraic : each cell can be described with a finite sequence of polynomial constraints .",
    "a cad is produced to be invariant for input ; originally _ sign - invariant _ for a set of input polynomials ( so on each cell each polynomial is positive , zero or negative ) , and more recently _ truth - invariant _ for input boolean - valued formulae built from the polynomials ( so on each cell each formula is either true or false ) . unlike grbner bases we may now consider general polynomial systems instead of just equations .",
    "cad usually involves two phases .",
    "the first _ projection _ , applies operators recursively on polynomials , each time producing a set with one less variable which together define the _ projection polynomials_. these are used in the second phase , _ lifting _ , to build cads incrementally by dimension .",
    "first a cad of the real line is built according to the real roots of the univariate polynomials .",
    "next , a cad of @xmath12 is built by repeating the process over each cell in @xmath13 with the bivariate polynomials evaluated at a sample point of the cell in @xmath13 .",
    "we call the cells where a polynomial vanishes _ sections _ and those regions in - between _ sectors _ , which together form the _ stack _ over the cell . taking the union of these stacks",
    "gives the cad of @xmath12 .",
    "the process is repeated until a cad of @xmath9 is produced . in each lift",
    "we extrapolate the conclusions drawn from working at a sample point to the whole cell requiring validity theorems for the projection operator used .",
    "cad was originally introduced by collins for quantifier elimination ( qe ) in real closed fields @xcite with applications since ranging from parametric optimisation @xcite and epidemic modelling @xcite , to reasoning with multi - valued functions @xcite and the derivation of optimal numerical schemes @xcite",
    ". there has been much work on improving collins original approach most notably refinements to the projection operator @xcite @xcite , @xcite ; early termination of lifting @xcite @xcite ; and symbolic - numeric schemes @xcite , @xcite .",
    "some recent advances include dealing with multiple formulae @xcite , @xcite ; local projection @xcite , @xcite ; decompositions via complex space @xcite , @xcite ; and the development of heuristics for cad problem formulation @xcite , @xcite , @xcite including machine learned approaches @xcite .",
    "cad has long been known to have worst case complexity doubly exponential @xcite,@xcite .",
    "suppose the input consists of @xmath3 polynomials ( perhaps derived from formulae ) in @xmath0 variables of maximum degree @xmath1 in any one variable .",
    "section 2.3 of @xcite describes in detail how the complexity of cad algorithms may be measured in terms of a bound on the total number of cells produced ( closely correlated to the timings but allowing for simpler implementation independent comparisons ) based on improvements to techniques introduced by mccallum s thesis . in particular , the dominant term in that bound for a sign - invariant cad produced using the algorithm of @xcite is @xmath14 i.e. the cad grows doubly exponentially with the number of variables @xmath0 .",
    "the analysis shows that by the end of the projection stage we have @xmath15 polynomials in @xmath13 , each of degree @xmath16 , where @xmath17 and @xmath18 .",
    "however , @xcite @xcite respectively find lower bounds with @xmath19 and @xmath20 with the underlying polynomials all simple , showing that the doubly - exponential difficulty of cad resides in _ the complicated number of ways simple polynomials can interact_.      given the previous discussion the answer is yes , but as with gb we need not settle for `` doubly exponential _ in the number of variables _ @xmath0 '' .",
    "we might hope for `` doubly exponential _ in the dimension _ '' , but this is thwarted by the fact that the examples of @xcite,@xcite are in fact zero - dimensional .",
    "nevertheless , we can take advantage of certain dimensional reductions when made explicit through the identification of _ equational constraints _ ( ecs ) , polynomial equations logically implied by formulae .",
    "the presence of an ec restricts the dimension of the solution space and so we may expect the cad to be doubly exponential in @xmath21 where @xmath22 is the number of ecs taken advantage of . of course , we would no longer be building cads sign - invariant for polynomials but ones truth - invariant for formulae .",
    "the present authors have demonstrated this first for the part of the bound dependent on @xmath3 ( number of polynomials ) in @xcite and then for the part dependent on @xmath1 ( maximum degree ) in @xcite ( work currently submitted for publication ) .",
    "collins noticed that in the presence of an ec a truth - invariant cad need only be sign - invariant throughout for the defining polynomial of the ec with other polynomials sign - invariant only on the sections of that polynomial @xcite .",
    "this led mccallum to develop restrictions to his projection operator from @xcite in @xcite ( for the first projection ) and @xcite ( for subsequent projections ) .",
    "see ( * ? ? ?",
    "* section 2.1 ) for a more detailed summary of this theory .",
    "these operators work with a single ec and so the cad algorithm may take advantage of only one in each main variable",
    ". however , @xcite also introduced a process to derive ecs in lower main variables based on the observation that the resultant of the polynomials defining two ecs itself defines an ec .",
    "in @xcite the present authors reviewed the theory of reduced projection operators .",
    "in particular we introduced two refinements to the lifting phase of cad which follow from mccallum s theory of reduced projection operators :    1 .",
    "minimising lifting polynomials : when lifting _ to _",
    "@xmath23 if there exists an ec with main variable @xmath24 then we need only lift with respect to ( isolate roots of ) this . 2 .   minimising real root isolation",
    ": when lifting _ over _ @xmath23 if there exists an ec with main variable @xmath24 then we need only isolate real roots over sections ( allowing sectors to be trivially lifted to a cylinder ) .",
    "these refinements require us to discard two embedded principles of cad :    * that the projection polynomials are a fixed set : we now differ the polynomials used in projection from lifting and keep track of which relate to ecs . *",
    "that the invariance structure of the final cad can be expressed in terms of sign - invariance of polynomials : the final cad may not no longer be sign - invariant for any one polynomial polynomials , even ecs , but is still guaranteed to be truth invariant for the formula .    in ( * ? ? ?",
    "* section 5 ) we used the complexity analysis techniques of @xcite to show that a cad in which the first @xmath22 projections had a designated ec had dominant term complexity bound of the form @xmath25 .",
    "i.e. we have reduced the number of polynomials involved accordingly but not their degree .",
    "the present authors considered what could be done with respect to the degree recently in @xcite .",
    "the theory of iterated resultants as considered by bus and mourrain @xcite suggested that the iterated univariate resultants produced by cad ( and in particular in the identification of ecs for subsequent projections ) were more complicated that the information they needed to encode .",
    "the true multivariate resultants were contained as a factor and grow in degree exponentially rather than doubly exponentially .",
    "the key result had to be adapted from @xcite to change the arguments from total degree in all variables to the degree in at most one variable required for bounding the number of cad cells produced .",
    "the authors proposed using gb technology for the generation of the ecs in subsequent projections to realise this limit in degree growth .",
    "this leads to the other projection polynomials growing exponentially in @xmath26 but remember that these are not used during lifting ( @xcite improvement ( 1 ) from above ) and thus not counted towards the cell count bounds ( although they do boost the degree of polynomials involved in projections without ecs ) .",
    "the outcome of this approach is a dominant term complexity bound of the form @xmath27 .",
    "there are some restrictions to the work as acknowledged in @xcite and @xcite .",
    "first , the analysis assumes the designated ecs are in strict succession at the start of projection .",
    "this restrictions was made to ease the complexity analysis ( with the formal algorithm specification and implementations not adhering ) .",
    "the substantial restriction is that the theory of cad with multiple ecs is only developed for primitive ecs .",
    "possibilities to remove this restriction are discussed in @xcite and could involve leveraging the tticad theory of @xcite @xcite .",
    "a tticad ( truth - table invariant cad ) allows for savings from ecs when building a cad for multiple formulae at once .",
    "currently the theory is only developed for ecs in the main variable of the system and so an analogous extension to subsequent projections is first required for tticad itself .",
    "we finish by considering the classic complexity results of @xcite,@xcite in light of the above recent progress .",
    "we see the importance of the aforementioned primitivity restriction .    the examples in both @xcite and @xcite rest on the following construction .",
    "let @xmath28 be the statement @xmath29 and then define recursively @xmath30 this is @xmath31 , i.e. @xmath32 .",
    "it is repeated nesting of this procedure that builds the doubly - exponential growth , so that @xmath33 gives @xmath34 etc .",
    "rewriting ( [ eq : h2 ] ) in prenex form gives @xmath35 the negation of ( [ eq : h3 ] ) is therefore @xmath36 where the @xmath37 operator interchanges @xmath38 and @xmath39 .",
    "now , @xmath40 can be rewritten as @xmath41 and further @xmath42 which shows @xmath40 to be a conjunction of ( imprimitive ) equational constraints .",
    "this is true for any @xmath43 , hence the propositional part of ( [ eq : h4 ] ) is a conjunction of eight equalities , mostly imprimitive , and @xmath44 .",
    "furthermore there are equalities whose main variables are the first variables to be projected if we try to produce a quantifier - free form of ( [ eq : h4 ] ) . but the quantifier - free form of ( [ eq : h4 ] ) describes the complement of the semi - algebraic varieties in @xcite or @xcite ( depending which @xmath45 we take ) and these have doubly - exponential complexity in @xmath0 .",
    "the discussion of this section shows the relevance of the primitivity restriction discussed at the end of the previous section and imposed in the work of @xcite , @xcite",
    ". it may be more than a technicality to remove them .",
    "this work was originally supported by epsrc grant : ep / j003247/1 and is now supported by eu h2020-fetopen-2016 - 2017-csa project @xmath46 ( 712689 ) .",
    "we are also grateful to professor buchberger for reminding jhd that grbner bases were applicable to cad complexity .",
    "r.  bradford , c.  chen , j.h .",
    "davenport , m.  england , m.  moreno  maza , and d.  wilson .",
    "truth table invariant cylindrical algebraic decomposition by regular chains . in _ computer algebra in scientific computing _",
    "( lncs 8660 ) , p.4458 .",
    "springer , 2014 .",
    "r.  bradford , j.h .",
    "davenport , m.  england , and d.  wilson . optimising problem formulations for cylindrical algebraic decomposition . in _ intelligent computer mathematics _",
    "( lncs 7961 ) , pages 1934 .",
    "springer berlin heidelberg , 2013 .",
    "quantifier elimination by cylindrical algebraic decomposition ",
    "20 years of progress . in b.",
    "caviness and j.  johnson , editors , _ quantifier elimination and cylindrical algebraic decomposition _ , texts & monographs in symbolic computation , pages 823 .",
    "springer - verlag , 1998 .",
    "m.  england , r.  bradford , c.  chen , j.h .",
    "davenport , m.  moreno  maza , and d.  wilson .",
    "problem formulation for truth - table invariant cylindrical algebraic decomposition by incremental triangular decomposition . in _",
    "intelligent computer mathematics _ , ( lnai 8543 ) , pages 4560 .",
    "springer international , 2014 .",
    "fotiou , p.a .",
    "parrilo , and m.  morari .",
    "nonlinear parametric optimization using cylindrical algebraic decomposition . in _",
    "decision and control , 2005 european control conference .",
    "cdc - ecc 05 .",
    "_ , pages 37353740 , 2005 .",
    "z.  huang , m.  england , d.  wilson , j.h .",
    "davenport , l.  paulson , and j.  bridge . applying machine learning to the problem of choosing a heuristic to select the variable ordering for cylindrical algebraic decomposition . in _",
    "intelligent computer mathematics _ ( lnai 8543 ) , pages 92107 .",
    "springer international , 2014 .",
    "s.  mccallum .",
    "an improved projection operation for cylindrical algebraic decomposition . in b.",
    "caviness and j.  johnson , editors , _ quantifier elimination and cylindrical algebraic decomposition _ , texts & monographs in symbolic computation , pages 242268 .",
    "springer - verlag , 1998 ."
  ],
  "abstract_text": [
    "<S> polynomial systems , or at least their algorithms , have the reputation of being doubly - exponential in the number of variables [ mayr and mayer , 1982 ] , [ davenport and heintz , 1988 ] . </S>",
    "<S> nevertheless , the bezout bound tells us that that number of zeros of a zero - dimensional system is singly - exponential in the number of variables . how should this contradiction be reconciled ?    </S>",
    "<S> we first note that [ mayr and ritscher , 2013 ] shows that the doubly exponential nature of grbner bases is with respect to the dimension of the ideal , not the number of variables . </S>",
    "<S> this inspires us to consider what can be done for cylindrical algebraic decomposition which produces a doubly - exponential number of polynomials of doubly - exponential degree .    </S>",
    "<S> we review work from issac 2015 which showed the number of polynomials could be restricted to doubly - exponential in the ( complex ) dimension using mccallum s theory of reduced projection in the presence of equational constraints . </S>",
    "<S> we then discuss preliminary results showing the same for the degree of those polynomials . </S>",
    "<S> the results are under primitivity assumptions whose importance we illustrate . </S>"
  ]
}
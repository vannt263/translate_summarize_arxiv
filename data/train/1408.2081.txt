{
  "article_text": [
    "tuple generating dependencies ( tgds ) , recently known also as datalog@xmath0 rules , are studied in various areas , from database theory to description logics , and in various contexts .",
    "the context we are interested in here , is computing certain answers to queries in the situation when some semantical information about the database is known , and represented by some theory @xmath1 ( or a datalog@xmath0 program ) , consisting of existential tgds and plain datalog rules , but it is assumed that our knowledge of the database facts is incomplete ( this is known as the open - world assumption ) .    in this paradigm , for a database instance @xmath2 ( understood here as a set of facts  atomic formulas ) , the semantics of @xmath2 , in presence of @xmath1 is defined as the ( * ) set of all the database instances @xmath3 which are supersets of @xmath2 and satisfy @xmath1 . in other words , we are interested whether , for a given query @xmath4 , it holds that @xmath5 .",
    "the problem is of course undecidable in general , so some restricted classes of theories are being studied . for example",
    "linear datalog@xmath0 programs , which consist of tgds which , as the body , have a single atomic formula , were studied in @xcite , guarded datalog@xmath0 , being an extension of linear ( see section [ guarded ] for more details ) was analyzed in @xcite and sticky datalog@xmath0 programs were introduced ( in two flavors ) in @xcite and @xcite .",
    "as it turns out , decidability of query answering is not that hard to prove for theories from these classes .",
    "but there are good reasons why we would like to have more than just decidability .",
    "the desired properties of @xmath1 are ( among others ) bounded derivation depth property ( bdd ) and finite controllability ( fc ) .",
    "the theory @xmath1 has the finite controllability property ( for short : `` @xmath1 is fc '' ) , if the expression `` the set of all database instances '' in the definition ( * ) above can be equivalently replaced by , more natural from the database point of view , `` the set of all finite database instances '' . to be more precise :",
    "@xmath1 is fc if for each database instance @xmath2 and each query @xmath4 , if @xmath6 then there exists a database instance @xmath7 such that @xmath8 but @xmath9 .    the difficult technical results in @xcite ( solving an old problem stated in @xcite ) and in @xcite concern finite controllability of , respectively , linear and guarded datalog@xmath0 .",
    "( actually , the result in @xcite is stated in terms of inclusion dependencies rather than tgds , which , in this context , is another language to talk about the same thing . )",
    "the question if the sticky datalog@xmath0 programs are fc was left as an open problem in @xcite and was solved , positively , in @xcite .    the theory @xmath1 has the bounded derivation depth property ( or just : `` @xmath1 is bdd '' ) if it admits positive first order query rewriting . in other words :    [ bedede ] @xmath1 is bdd if for each query @xmath4 there exists a union of conjunctive queries @xmath10 such that for every database instance @xmath2 the equivalence : @xmath5 if and only if @xmath11 holds .",
    "( this is the definition we actually need here , but not the standard one .",
    "see section [ preli ] for an equivalent , more standard definition . )",
    "this means that instead of computing the answer to @xmath4 over the infinite set of databases having @xmath2 as their subset ( or instead of computing the answer to @xmath4 over the infinite database @xmath12  see section [ preli ] ) it is enough to compute the answer to @xmath10 over the known finite database @xmath2 .",
    "there is no need to explain how desirable in the database context bdd is , so many of the good classes of datalog@xmath0 programs ( including linear datalog@xmath0 and sticky datalog@xmath0 ) are tailored to have this property .",
    "it is worth mentioning that , while of course bdd is an undecidable property of @xmath1 , still in all practical situations we know about , proving the statement `` all the programs from class @xmath13 are bdd '' is an easy exercise ( if it is true ) .",
    "this is in sharp contrast to finite controllability which is , as we mentioned above , typically quite hard to prove .",
    "bdd is typically easy to prove .",
    "fc is hard to prove . but",
    "each time we had a class of bdd theories , finally we were able to show that this class is also fc .",
    "this leads to a conjecture we would like to state here :    [ hipo ]   + if some theory @xmath1 , being a set of existential tgds and plain datalog rules , is bdd then it is also fc .",
    "the evidence we support our conjecture with is :    [ glownewintro ]   + conjecture [ hipo ] is true for programs over binary signature .",
    "the proof of theorem [ glownewintro ] is the main technical contribution of this paper and is , as we believe , quite difficult .",
    "it is presented in section [ dowod ] but relies on a system of tools developed in sections [ teoria ] and [ odlozona ] .",
    "finally , in section [ dyskusja ] we discuss the possible applications of our tools and their limitations , in subsection [ ubranie ] we show that theorem [ glownewintro ] can be extended also to quite a wide class of non - binary theories ( see theorem [ niebinarne ] ) . in subsection",
    "[ why ] we explain however , why our techniques do not seem to extend to the proof of conjecture [ hipo ] in general . in subsection",
    "[ guarded ] we show how guarded datalog@xmath0 programs can be seen as binary programs , and how our techniques can be easily applied in this context .",
    "let us remind the reader that a tgd is a formula of the form @xmath14 where @xmath15 is a conjunctive query , @xmath16 is a relation symbol , @xmath17 are tuples of variables and @xmath18 ( see section [ multihead ] for a comment on the multi - head tgds ) .",
    "the universal quantifier in front of the formula is usually omitted .",
    "finite sets consisting of existential tgds and plain datalog rules will be called theories .    for a theory @xmath1 and a database instance @xmath2",
    "we denote by @xmath19 the result of the following operation . for each tuple @xmath20 in @xmath2 satisfying a body of an rule @xmath21 form @xmath1 , such that there is no @xmath22 satisfying @xmath23 , we simultaneously add new constant @xmath24 into database and an atom @xmath25",
    ".    then define @xmath26 as @xmath27 and by chase denote @xmath28 , which is the least fixpoint of the @xmath29 operator .",
    "clearly , we have @xmath30 , but there is no reason to think that @xmath31 for any @xmath32 .",
    "note that the chase we consider in this paper is the non - oblivious one ",
    "new elements are only created if needed , as opposed to the blind chase , which creates a new witness each time it is demanded .    since @xmath12 is a",
    " free structure  , it is very easy to see that for any query @xmath4 ( being a ucq  a union of positive conjunctive queries ) @xmath33 ( which reads as  @xmath4 is certainly true in @xmath2 , in presence of @xmath1  ) , if and only if @xmath34 .    a set @xmath1 of tgds is usually said to have bounded derivation depth property if for each query @xmath35",
    ", there is a constant @xmath36 , such that for each database instance @xmath2 if @xmath37 then @xmath38 .",
    "it is easy to see ( @xcite ) that this definition of the bdd property is equivalent to definition [ bedede ] .",
    "* notations . *",
    "when we say that @xmath39 is a structure we may mean both , the set of elements and the set of atoms of @xmath39 . if we feel this may cause confusion we write @xmath40 for the set of elements of @xmath39 .",
    "by @xmath41 ( or @xmath42 ) we mean that an atom @xmath43 ( or a formula @xmath44 ) is true in @xmath39 .",
    "by @xmath45 we mean that each atom of @xmath46 is an atom of @xmath47 .",
    "for a structure @xmath39 and a set @xmath48 ( or a signature @xmath49 ) by @xmath50 ( resp . by @xmath51 )",
    "we mean the structure consisting of such atoms @xmath52 that @xmath53 and @xmath54 ( resp .",
    "@xmath55 ) . for a structure @xmath39 over some signature @xmath49 by @xmath56 we mean , depending on context , the set of elements of @xmath39 which are interpretations of constants from @xmath49 or the structure @xmath57 . similarly ,",
    "by @xmath58 we mean the set of elements of @xmath39 which are not incarnations of constants from @xmath49 or the structure @xmath59 .",
    "in paper we consider only boolean conjunctive queries . sometimes free variables are omitted to keep the notation light . in such cases one should treat them as existentially quantified .",
    "( for example , for a query @xmath60 the term @xmath61 should be read as @xmath62 ) .",
    "in order to prove theorem [ glownewintro ] we need to construct , for a given bdd theory @xmath63 over a binary signature , for a conjunctive query @xmath64 and for a finite structure @xmath2 , such that @xmath65 , a new finite structure @xmath66 , such that @xmath67 but @xmath68 .    such @xmath66 will always contain a substructure @xmath69 being a homomorphic image of @xmath70 .",
    "this @xmath69 is easy to construct inside @xmath66 ( if we had @xmath66 ) : start from @xmath2 , which is a substructure of both @xmath66 and @xmath70 , and then mimic , inside @xmath66 , all the applications of rules that led to the construction of @xmath70 .",
    "is nt @xmath69 itself always the finite model we are looking for ?",
    "no , because it may very well happen that by identifying elements of @xmath70 the homomorphism ( call it @xmath71 ) created new instances of the bodies of the rules of @xmath1 in @xmath69 , leading to the situation when applications of rules is possible that were not applied in @xmath70 . for example suppose that @xmath72 is a rule of @xmath1 and @xmath73 , but @xmath74 and @xmath75 .",
    "suppose also that @xmath76 . then the fact @xmath77 , which may not be homomorphic image of any fact in @xmath70 , is provable in @xmath66 .",
    "this can lead to a process in which an answer to @xmath16 is built in @xmath66 , something we need to avoid .",
    "this can also lead to infinite chase , while we want @xmath66 to be a finite structure .",
    "let us illustrate this problem with one more example :    [ niepotrzebny ] let @xmath1 be a theory consisting of three rules :    @xmath78    @xmath79    @xmath80    and a database instance @xmath81 .",
    "then @xmath70 is an infinite @xmath82 , beginning with @xmath83 and @xmath84 .",
    "consider @xmath69 consisting of elements @xmath85 and @xmath86 and atoms @xmath87 , @xmath88 and @xmath89 .",
    "then @xmath69 is a homomorphic image of @xmath70 , but is not itself a model of @xmath1  the last rule , which was never triggered when @xmath70 was built , can be used in @xmath69 .",
    "moreover , it is easy to see that @xmath90 is an infinite structure .",
    "the idea of the construction we present in this paper is to make sure that some sort of first order type of each @xmath83 in @xmath70 is always the same as the type of its image @xmath91 in the homomorphic image of @xmath70 .",
    "the definition of the type should be tailored in such a way that such preservation of types implies that no harmful new applications of rules from @xmath1 for @xmath91 exist in @xmath66 .    in section [ teoria ]",
    "we develop a sort of theory of positive types and their preservation .",
    "we built a framework in which the main lemma ( lemma [ duzy ] ) can be expressed . in section [ dowod ] this main lemma",
    "is used to prove theorem [ glownewintro ] . in section [ odlozona ]",
    "we prove the main lemma .",
    "sections [ dowod ] and [ odlozona ] are independent and can be read in any order .    *",
    "the two most important technical tricks * of the paper can be found in proofs of lemma [ wystarczy ] ( in section [ dowod ] ) and lemma [ normali ] ( in section [ odlozona ] ) . in the proof of lemma [ wystarczy ]",
    "we show how the assumption that the theory @xmath1 is bdd can be used .",
    "the trick in the proof of lemma [ normali ] relies on the construction , presented already in section [ born ] , where we construct not just one finite structure , but an infinite sequence of finite structures @xmath92 that in some sense converge to @xmath70 .",
    "then the idea is that if some query @xmath35 is true in @xmath93 ( which we do not like , as we do not want too many queries to be true in the finite structures we construct ) then a query @xmath4 , being a ",
    "one - step normalized  version of @xmath35 may not be true in @xmath93 but it will be true in @xmath94 .",
    "this then implies that if @xmath35 is true in all @xmath92 then its  normal form  also is .",
    "this  converging to the chase  trick is also used in our another paper @xcite and we believe it can have further applications .",
    "[ ptp - def ] let @xmath13 be a relational structure over signature @xmath95 .",
    "let @xmath96 and let @xmath97 be a natural number .",
    "we define @xmath98 ( which reads \" positive n - type of @xmath99 in @xmath13 over @xmath95  ) as the set of all such conjunctive queries @xmath100 that :    * @xmath101 , * all relations ( and constants ) used in @xmath35 are in @xmath95 * @xmath102 .",
    "we assume that equality belongs to each @xmath95 , which means that atoms of the form @xmath103 ( but not of the form @xmath104 ) , where @xmath105 is a variable and @xmath86 is a constant from @xmath95 , are allowed in the queries .",
    "[ drugi - niepotrzebny ] let @xmath1 , @xmath2 and @xmath69 be like in example [ niepotrzebny ] , and let @xmath95 consist of @xmath106 and @xmath107 .",
    "then @xmath108 equals @xmath109 , and each of them consists of the same two queries : @xmath110 and @xmath111 . but",
    "@xmath112 does not equal @xmath113 :   the query @xmath114 @xmath115 belongs to the second of those two types but not to the first one .    [ pozna ] notice that if @xmath86 is a constant , but we are not always going to make this distinction . ] from @xmath95 , and if @xmath116 is any other element of @xmath39 , then @xmath117 for each @xmath118 .",
    "this is because we allowed a query of the form @xmath119 , which belongs to @xmath120 , but not to @xmath121 .",
    "all the signatures under consideration are finite , so the number of possible conjunctive queries with at most @xmath97 variables is finite . in consequence",
    "the number of positive @xmath97-types is finite , for a given @xmath97 .",
    "let us remark here that our positive @xmath97-types carry much less information than the standard first order types ( in the sense of geifman or hanf ) .",
    "take for example a structure @xmath13 , over the signature @xmath122 , consisting of elements @xmath83,@xmath84,@xmath86,@xmath123,@xmath99 , and atoms @xmath124 , @xmath125 , @xmath126 , @xmath127 , @xmath128 .",
    "then @xmath129 @xmath130 .",
    "but the first order 2-types of @xmath83 and @xmath99 differ : consider for example the formula : @xmath131 .",
    "then @xmath132 but @xmath133 .      [ otypach ] let @xmath123 and @xmath99 be two elements of @xmath13 .",
    "we define @xmath134 if and only if @xmath135 .",
    "notice that both the relation @xmath136 and the structures @xmath137 ( as defined below ) depend on @xmath95 , and the signature should be added as a parameter in definitions [ otypach ] and [ emen ] .",
    "we will try to avoid confusion while keeping the notation light , but when really needed we will include the parameter , writing @xmath138 instead of @xmath137 .",
    "[ emen ] for a relational structure @xmath39 define @xmath137 as a relational structure whose set of elements is @xmath139 , and such that @xmath140_{\\equiv_n}>_i)$ ] iff @xmath141_{\\equiv_n}$ ] such that @xmath142 .",
    "in other words , the relations in @xmath137 are defined in the natural way , as minimal ( with respect to inclusion ) relations such that the quotient mapping @xmath143 is a homomorphism .",
    "we usually imagine @xmath144 as a projection , so that the atoms in @xmath137 are projections of atoms in @xmath39 .",
    "clearly each @xmath137 is a finite structure .",
    "[ silnie ] if @xmath145 then @xmath146 .",
    "the structure @xmath147 is a homomorphic image of @xmath148 .    for the proof of the first claim notice that it follows from definition [ ptp - def ] that if the positive @xmath97-types of two elements are equal then their positive @xmath149-types are also equal .",
    "the second is an easy exercise in basic universal algebra .",
    "[ naduzycie ] _ the function @xmath144 , as defined above , has @xmath39 as its domain .",
    "it will however be convenient to be able to write @xmath150 also for @xmath151 .",
    "in such a case @xmath150 will be defined as @xmath152 , where @xmath153 is any element such that @xmath154 .",
    "it follows from lemma [ silnie ] that the value of @xmath150 does not depend on the choice of @xmath84 .",
    "_    we defined a canonical way of building finite structures . but is there any chance that they really resemble the original infinite structure ? what we are particularly interested in is what happens to the positive @xmath155-types of elements of @xmath39 .",
    "are they preserved by @xmath144 ?",
    "it is easy to see that we always have @xmath156 .",
    "but can the inclusion be replaced with equality ? is the positive @xmath155-type of @xmath157 always the same as the positive @xmath155-type of @xmath158 ? , which we imagine is big",
    " the bigger it is the more similar @xmath137 and @xmath39 are , and @xmath155  the smaller it is the easier it is preserve the positive @xmath155-types . ]",
    "unfortunately this is not yet the case :    [ oczywisty ]    let @xmath159 and let @xmath39 be the set @xmath160 @xmath161 with @xmath162 for each @xmath163 .",
    "notice that the names of the elements @xmath164 are not part of @xmath49 , so they are invisible for the inhabitants of the structure , and the positive @xmath97-types of elements @xmath164 and @xmath165 , with @xmath166 , are equal if and only if @xmath167 .",
    "( actually , not only the positive types of @xmath164 and @xmath165 are equal , but even their @xmath97-gaifman neighborhood are isomorphic . )",
    "so @xmath168 is a structure with elements @xmath169 , with @xmath170 for each @xmath171 and with @xmath172 .",
    "clearly , @xmath173 .",
    "but the positive 1-type of @xmath174 in @xmath137 contains the query @xmath175 , which is not in the positive 1-type of @xmath176 in @xmath39 .",
    "we are not quite happy with the quotient structure we got in example [ oczywisty ] .",
    "too many elements of @xmath39 are identified , and even a very small conjunctive query can easily see the difference between @xmath39 and @xmath137 . but consider another example :    [ oczywisty+kolory ] let @xmath49 and @xmath39 be like in example [ oczywisty ] .",
    "let @xmath177 , where @xmath178 are unary predicates ( colors ) and let @xmath179 be like @xmath39 , but with each @xmath164 satisfying also @xmath180 .",
    "let @xmath181 .",
    "then the positive @xmath97-types of elements @xmath164 and @xmath165 , with @xmath166 , are equal if and only if @xmath167 and @xmath182 .",
    "so @xmath183 will be a structure with elements @xmath184 , with @xmath170 for each @xmath185 and with @xmath186 .",
    "it is not hard to see that now @xmath187 @xmath188 for each element @xmath189 .",
    "the positive @xmath155-types of the elements of @xmath39 are preserved by the quotient operation .",
    "notice however that the positive @xmath190-types are not preserved .",
    "this is because , unlike @xmath39 , the structure @xmath183 contains a cycle of length @xmath191 , which is easy to detect with a query with @xmath191 variables .",
    "if we want to preserve positive @xmath155-types for bigger numbers @xmath155 we need to use more colors .",
    "notice also that if we took @xmath192 then we would get @xmath193 @xmath194 .",
    "this is because @xmath195 would then be identified with all the elements @xmath196 for @xmath197 , and therefore the query + @xmath198 + would be satisfied in @xmath183 , while the query + @xmath199 + is not satisfied in @xmath200 .",
    "the last example motivates the following definitions :    each of the unary predicates @xmath201 for some @xmath202 will be called a color , with the number @xmath203 being called the hue of the color and the number @xmath204 being called its lightness .",
    "the set of all colors will be denoted as @xmath205 .",
    "so far we just defined an infinite set of unary predicates ( with strange names , that we will need much later ) . now a definition of coloring .",
    "a natural one :    for a structure @xmath39 over a signature @xmath49 by a coloring of @xmath39 we will mean a structure @xmath200 over some finite signature @xmath206 such that :    1 .",
    "@xmath207 2 .",
    "@xmath208 3 .   for each @xmath189",
    "there is exactly one color @xmath209 such that @xmath210 .    where @xmath211 is the structure @xmath200 restricted to the signature @xmath49 .      [ conservative-1 ]",
    "let @xmath39 be a structure and let @xmath212 .",
    "we will say that a coloring @xmath200 of @xmath39 is @xmath97-conservative up to size @xmath155 if :    [ takimabyc ] @xmath213 for each @xmath157 , where @xmath49 and @xmath214 are like in definition [ coloring ] .",
    "being @xmath97-conservative up to size @xmath155 means that the positive @xmath155-types ( * with respect to the signature @xmath49 * ) of elements of @xmath200 are preserved by the quotient mapping @xmath144 leading to the structure @xmath183 .",
    "so , for example , the coloring @xmath200 from example [ oczywisty+kolory ] is @xmath97-conservative up to size @xmath155 , if only @xmath181 , but is not @xmath97-conservative up to size @xmath191 for any @xmath97 .",
    "[ conservative-2 ] a structure @xmath39 is ptp - conservative if for each @xmath215 there exist @xmath216 and a coloring @xmath200 of @xmath39 , such that @xmath200 is @xmath97-conservative up to size @xmath155",
    ".    the following remark will be useful in section [ odlozona ]    [ jednostajne ] consider a coloring @xmath200 of @xmath39 and a number @xmath155 .",
    "suppose there is no such @xmath97 that @xmath200 is @xmath97-conservative up to size @xmath155 .",
    "this means that for each @xmath216 there is a query @xmath217 , with at most @xmath155 variables , and an element @xmath157 such that @xmath218 but @xmath219 .",
    "but since there are only finitely many queries of at most @xmath155 variables , this implies that there is a query @xmath35 which is @xmath220 for infinitely many numbers @xmath97 .",
    "notice also that if @xmath221 and @xmath222 then @xmath223 .",
    "so , if there is no such @xmath97 that @xmath200 is @xmath97-conservative up to size @xmath155 then it must exist a single query @xmath224 , with @xmath225 , such that for every @xmath97 there is an element @xmath99 of @xmath39 such that @xmath226 but @xmath227 .",
    "it is very easy to see that the structure @xmath39 from examples [ oczywisty ] and [ oczywisty+kolory ] is ptp - conservative . given @xmath155 one just needs to define the coloring @xmath200 using @xmath191 colors , like in example [ oczywisty+kolory ] , and take @xmath228 .",
    "then @xmath200 will be @xmath97-conservative up to size @xmath155 .",
    "[ niekonserwatywne ] let @xmath39 be any infinite set with a total ( irreflexive ) order @xmath106 .",
    "then it is easy to see that @xmath39 is not ptp - conservative .",
    "actually , it is impossible to find a coloring @xmath200 of @xmath39 and a number @xmath97 such that @xmath200 is @xmath97-conservative up to size 1 : whatever the coloring , there would be an element @xmath99 in @xmath39 such that @xmath229 .",
    "[ teoriazporzadkiem ] it is very important to see the role of the element @xmath99 in definition [ conservative-1 ] .",
    "condition ( @xmath230 [ takimabyc ] . ) , which says that each element of @xmath39 keeps its positive type after the quotient operation , is * strictly * stronger than :    [ nietaki ] for each conjunctive query @xmath35 over @xmath49 , with at most @xmath155 variables , @xmath231 if and only if @xmath232 .    which says that no new positive @xmath155-types appear in @xmath233 .",
    "to see that , consider a theory @xmath1 consisting of the rules :    @xmath78    @xmath234    and a database instance @xmath235",
    ".    let @xmath236 . then @xmath39 satisfies condition ( @xmath230 [ nietaki ] . )",
    "( since , due to the presence of the atom @xmath237 , all possible queries are true in @xmath39 ) , but is not ptp - conservative as it contains an infinite irreflexive total order ( see example [ niekonserwatywne ] ) .",
    "next remark explains what definition [ conservative-2 ] is good for :    [ goodfor ] imagine that we have some theory @xmath1 over a binary signature @xmath49 , and there is a existential tgd @xmath35 in @xmath1 of the form @xmath238 , where @xmath155 is the number of variables in @xmath105 .",
    "let @xmath239 .",
    "clearly @xmath231 , so if for some @xmath157 it holds that @xmath240 , then there exists @xmath241 such that @xmath242 .",
    "suppose we now color @xmath39 and project it , using @xmath144 , creating some finite structure @xmath243 .",
    "we would like to be sure that @xmath137 is still a model ( or at least some sort of pre - model ) of @xmath1 .",
    "so in particular we would like to be sure that @xmath244 .",
    "but if @xmath200 was @xmath97-conservative up to size @xmath155 , then we can be sure that whenever we have an element @xmath245 in @xmath243 , such that @xmath246 then also @xmath247 , which implies that @xmath248 , which implies that @xmath243 @xmath249 ( notice that what we use here is really condition ( @xmath230 [ takimabyc ] . ) and that condition ( @xmath230 [ nietaki ] . )",
    "would not be strong enough )    so , if @xmath200 was @xmath97-conservative up to size @xmath155 , then @xmath243 is a model of @xmath35 , and if @xmath39 is ptp - conservative then we can choose @xmath155 greater than the maximal size of the body of a existential tgd rule in @xmath1 and be sure that there exists a coloring , and number @xmath97 , leading to @xmath243 in which all the existential tgds of @xmath1 are satisfied .",
    "we now know how to turn a ptp - conservative chase @xmath39 of @xmath1 into a finite structure @xmath243 satisfying all the existential tgds in @xmath1 .",
    "but does it mean that @xmath250 then ? as the following example shows , not necessarily , even if @xmath1 is bdd :    [ jakniemozna ] consider the following bdd theory @xmath1 :    @xmath251    @xmath252    and a database instance @xmath253 .",
    "let @xmath239 .",
    "clearly , @xmath39 is an infinite @xmath106-chain , with an atom @xmath254 true for each @xmath255 .",
    "whatever coloring we now use , the only @xmath43 atoms in @xmath243 will be the ones of the form @xmath254 . and",
    "whatever the coloring , there must be a triple of elements @xmath256 in @xmath243 such that @xmath257 and @xmath258 , which shows that @xmath243 is not a model of the plain datalog rule from @xmath1 .",
    "of course all the above definitions  of types , of @xmath136 , of @xmath92 and of conservativity , make sense also when we consider any signatures , not just binary .",
    "but remark [ goodfor ] is not valid any more for such signatures , which means that it is very hard to make sure that @xmath92 will actually resemble a model of @xmath1",
    ". we will be back to this point in section [ why ] .",
    "most of the notions we defined so far apply to structures over any signature .",
    "but what we are really interested in in this paper are binary signatures .",
    "they consist of some binary relations , some unary relations and constants .",
    "structures over such signatures can be in a natural way seen as directed graphs with edges , and vertices , labeled with some finite number of labels ( i.e. the names of the relations ) .",
    "thanks to that we can use the language of graphs  for example our infinite structures are usually ( directed ) trees or dags .",
    "we will concentrate on very treelike dags :    [ poprzedniki ] for an element @xmath157 we define @xmath259 if @xmath260 and @xmath261 for some @xmath262",
    "if @xmath263    [ vtdag ] a structure @xmath39 is called a very treelike dag ( vtdag ) if @xmath58 is a dag and :    * for each binary relation @xmath43 and each @xmath263 there is at most one @xmath264 such that @xmath128 ; * for each @xmath263 if @xmath265 then @xmath266 or @xmath267 .",
    "the first condition says that each non - constant @xmath99 has at most one non - constant  direct predecessor  in each binary relation .",
    "the second says that the set of  direct predecessors  of @xmath99 is a ( directed ) clique .",
    "each tree is trivially a vtdag . in order to prove theorem [ glownewintro ] it is enough to restrict the attention to trees only .",
    "vtdags which are not trees will not be considered before section [ dyskusja ] .",
    "the main tool in the proof of theorem [ glownewintro ] is :    [ duzy][the main lemma ] + each vtdag is ptp - conservative .    in section [ dowod ]",
    "we use lemma [ duzy ] to prove theorem [ glownewintro ] .",
    "then , in section [ odlozona ] , we present a proof of lemma [ duzy ] .",
    "sections [ dowod ] and [ odlozona ] are independent and can be read in any order .",
    "nothing complicated happens in this subsection .",
    "we are just making some simplifying ( although without loss of generality ) assumptions about the bdd theory under consideration .",
    "this will help us to keep the notations simpler in the rest of section [ dowod ]    for a binary bdd theory @xmath268 and a conjunctive query @xmath269 define a new theory @xmath63 as @xmath268 enriched with a new tgd :    [ newtgd ]    @xmath270    where @xmath271 is a new predicate symbol .",
    "it is now easy to see that , for any database instance @xmath2 such that @xmath271 does not occur in @xmath2 , a finite structure @xmath272 such that @xmath273 exists if and only if a finite structure @xmath272 such that @xmath274 exists .",
    "this means that , in order to prove theorem [ glownewintro ] it is enough to show :    [ glowne ] for a binary bdd theory @xmath1 , containing a rule of the form ( @xmath230 [ newtgd ] . ) , with predicate @xmath271 not occurring anywhere else in @xmath1 , and for each database instance @xmath2 , if @xmath271 does not occur in @xmath70 then there exists a finite structure @xmath7 such that @xmath275 , without any atom of predicate @xmath271 occurring in @xmath7 .    from now on",
    "we assume that @xmath1 is like in the assumptions of the above theorem .",
    "we also assume , in order to keep the notations simple , that :    [ warunkinat ]    * the head of each existential tgd in @xmath1 is of the form @xmath276 , which means that the witness , whose existence is demanded by the tgd , is the second argument of the predicate in the head ; * if the predicate @xmath43 occurs as the head of some existential tgd in @xmath1 then it does not occur as the head of any datalog rule in @xmath1 .",
    "we call such predicates tgps  tuple generating predicates .",
    "we leave it for the readers as an exercise to see that every @xmath1 can be easily modified to satisfy ( @xmath230 [ warunkinat ] . ) , for the cost of some additional predicates and datalog rules , and this modification neither changes the bdd status of the theory nor its fc status .",
    "hint : for each predicate @xmath43 in the signature introduce two new predicates @xmath277 and @xmath278 .",
    "add to theory datalog rules @xmath279 and @xmath280 .",
    "replace each head of an existential tgd which is of the form @xmath276 by @xmath281 and each head of the form @xmath282 by @xmath283 .",
    "let now @xmath2 be a database instance without atoms of @xmath271 and let @xmath285 be the signature of @xmath2 and @xmath1 .",
    "define @xmath286 as a new signature which contains , apart from the relations and constants from @xmath95 , a name for each element in @xmath2 .",
    "why do we prefer the elements of @xmath2 to be named ? because we want to be sure that their positive types in @xmath12 differ , and , in consequence , that they remain distinct after a quotient operation ( see remark [ pozna ] ) .",
    "now we are going to define the structure to which the techniques of section [ teoria ] will be applied . since we want to make use of lemma [ duzy ] , this structure must be a tree ( or at least a vtdag ) .",
    "and of course we can not expect @xmath12 to be a vtdag .",
    "[ kora ] by @xmath287 ( or just @xmath288 , as the context is always clear ) we mean the substructure of @xmath12 consisting of all the elements of @xmath12 , all the atoms in @xmath2 and all the atoms of the tgps .",
    "we understand that @xmath288 is a structure over the signature @xmath49 .",
    "we will call the atoms in @xmath288 _ skeleton atoms _ , as we imagine @xmath288 as a sort of a skeleton of @xmath12 .",
    "the atoms of @xmath12 which are not in @xmath288 will be called _ flesh",
    "atoms_. so the flesh atoms are the ones created in the process of chase by the datalog rules .",
    "it follows easily from ( @xmath230 [ warunkinat ] . ) that :    1 .",
    "the graph @xmath289 is acyclic ; 2 .",
    "the in - degree of any element of @xmath289 is 1 ; 3 .",
    "@xmath289 is a forest ; 4 .",
    "the degree of the elements of @xmath289 is bounded by @xmath290 ;    remember that all the elements of @xmath2 are constants from @xmath49 , so they are not in @xmath58 .    for",
    "the proof of ( i ) and ( ii ) notice that the only way a tgp atom @xmath124 can be created is to be created together with a new element @xmath84 .",
    "acyclicity follows from the fact that @xmath84 is always a `` younger '' element of @xmath12 than @xmath83 .",
    "the claim ( iii ) follows from ( i ) and ( ii ) .",
    "finally , ( iv ) follows from the fact , that the chase we consider is a non - oblivious one , so for any fixed @xmath291 and for any tgp @xmath43 from @xmath49 at most one @xmath292 can exist such that @xmath293 .",
    "@xmath294    let us now think of @xmath288 as of a new database instance :    [ nicponadto ] @xmath295 .",
    "in particular , @xmath296    * proof : *    it is an easy lemma .",
    "it is enough to show , by induction , that for each natural @xmath97 :    [ jednagw ]    @xmath297 .    clearly ,",
    "@xmath298 , by our definition of @xmath288 .",
    "suppose that ( @xmath230 [ jednagw ] . )",
    "is true for some @xmath216 , and    [ niewprost7 ] let @xmath299 be an atom which is not true in @xmath300    but true in @xmath301 . in order to prove that this implies @xmath302 notice that one of the following two possibilities must hold :    [ druga ] there is a datalog rule of the form @xmath303 in @xmath1 and @xmath304 for some elements @xmath305 , or    [ pierwsza ]",
    "there is tgd of the form @xmath306 in @xmath1 and @xmath307 for some elements @xmath308 .    in both cases it follows from the inductive assumption that @xmath309 ( resp .",
    "@xmath310 ) .",
    "now , if ( @xmath230 [ druga ] . ) then @xmath302 follows simply from the fact that all the rules of @xmath1 are satisfied in @xmath12 .",
    "similarly , if ( @xmath230 [ pierwsza ] . )",
    "then there exists @xmath311 such that @xmath302 . by the definition of @xmath288",
    ", we have that @xmath312 , so also @xmath313 , which contradicts ( @xmath230 [ niewprost7 ] . ) @xmath294    it is very easy to see that also @xmath314 , so we get that @xmath315 .",
    "the idea behind the lemma is that while @xmath288 is a simple structure  simple enough to be ptp - conservative  still not only it contains all elements of @xmath12 but also the complete information about the relations between elements of @xmath12 that need a witness and the needed witnesses .",
    "thanks to that @xmath12 can be rebuilt , starting from the skeleton @xmath288 , in a process of a ( non - oblivious ) chase that only triggers datalog rules , but never the existential tgds .",
    "notice that this would no longer be true if a single atom @xmath316 was removed from @xmath288 ( even if the elements @xmath83,@xmath317 were kept , as arguments of some other atoms ) .",
    "this is because at some point a tgd with the head @xmath318 would be triggered , and a * new * element @xmath319 would be created .",
    "recall that for a bdd theory @xmath1 and query @xmath35 by @xmath320 we mean the positive first order rewriting of @xmath35 , which means that @xmath320 is such a query ( a union of conjunctive queries ) , that for each database instance @xmath2 it holds that @xmath321 .",
    "let @xmath322 is a rule in @xmath323 .",
    "in other words , @xmath324 is the maximal number of variables in a query being a positive first order rewriting of a body of some rule of the theory @xmath1 . by lemma [ duzy ] there",
    "exists a coloring @xmath325 of @xmath288 and @xmath326 such that @xmath325 is @xmath327-ptp conservative up to the size @xmath324 , which means that the elements of @xmath328 have the same positive @xmath324-types over @xmath49 as their counter - images in @xmath288 .",
    "now there are five structures one should imagine :    * @xmath288 * chase@xmath329 = @xmath330 * @xmath331 * chase@xmath332 * @xmath333chase@xmath334    the first two of them were already introduced in this section .",
    "the third is the result of the quotient operation applied to @xmath325  something we discussed in section [ teoria ] . since @xmath325 is @xmath327-ptp conservative up to the size @xmath324 , we know that @xmath331 is a model for all existential tgds in @xmath1 ( see remark [ goodfor ] ) .",
    "but , as we saw in example [ jakniemozna ] , we can not be sure that @xmath335 , as some datalog rules from @xmath1 may be false in @xmath331 .",
    "so to get a model of @xmath1 we apply chase to @xmath331 , which leads to our fourth structure , chase@xmath332 .",
    "so far we know nothing about this structure , in particular we do not even know whether chase@xmath332 is finite .    the fifth structure , @xmath333chase@xmath334 is only needed in example [ zbedny ] which we hope explains some issues concerning chase@xmath332 . *",
    "if * you feel you not need more explanations * go directly to lemma [ wystarczy]*. @xmath333chase@xmath334 is defined as :    * @xmath336chase@xmath337 ; * relations are defined in @xmath333chase@xmath334 as the minimal relations such that @xmath338 , understood as a mapping from chase@xmath329 to @xmath333chase@xmath334 , is a homomorphism .",
    "so while the relations @xmath331 are defined as projections of the skeleton relations , the relations @xmath333chase@xmath334 are projections of both , the skeleton and the flesh atoms .",
    "one can see that chase@xmath339chase@xmath334 .",
    "indeed , any atom in @xmath333chase@xmath334 which is not in @xmath331 is a projection of some flesh atom in chase@xmath329 .",
    "this last atom must have been proved by some derivation in chase@xmath329 . but a projection of a valid derivation from chase@xmath329 is a valid derivation in chase@xmath332 .    at this point",
    "it would be reasonable to conjecture that maybe @xmath333chase@xmath340 chase@xmath332 .",
    "but this is not always the case , as the following example shows :    [ zbedny ] let @xmath1 and @xmath2 be like in example [ jakniemozna ] .",
    "let @xmath341 .",
    "now @xmath288 is the structure @xmath39 from example [ oczywisty+kolory ] .",
    "let @xmath155 be the number of colors , @xmath181 and let @xmath325 be a coloring of @xmath288 , like in example [ oczywisty+kolory ] .",
    "now , the only @xmath43 atoms in @xmath342 are atoms of the form @xmath343 for some @xmath344 .",
    "but it is easy to see that chase@xmath345 ( where @xmath346 , @xmath347 are again like in example [ oczywisty+kolory ] ) .    in the last example",
    "an atom was derived in chase@xmath348 @xmath349 , which was not a projection of any flesh atom .",
    "the meaning of the next lemma is that while , in the process on chase on @xmath331 , some datalog derivations can arise not being projections of datalog derivations in chase on @xmath288 , still ( like in lemma [ nicponadto ] ) no existential tgds will be used , and no new elements will be created . to be more precise :    [ wystarczy ] @xmath350chase@xmath351    this proof is not very long but we believe it is quite tricky .",
    "it is here where things really happen : lemma [ duzy ] meets the assumption that @xmath1 is bdd .",
    "* proof of lemma [ wystarczy ] : *    suppose @xmath352    and let @xmath353 be the smallest natural number such that    @xmath354 .",
    "this means that there is a rule @xmath355 in @xmath1 and elements @xmath356 of @xmath357 such that    @xmath358 , but    [ ostatni ]    @xmath359 .",
    "but if @xmath358 then of course also + @xmath360 . since all of @xmath361 and @xmath84 are elements of @xmath362 we get ( using the fact that @xmath320 is the positive first order rewriting of @xmath35 ) that @xmath363 or , in other words , @xmath364 .",
    "let @xmath86 be any such element of @xmath288 that @xmath365 .",
    "since the size of @xmath320 is at most @xmath324 , by lemma [ duzy ] we get that @xmath366 . using again the fact that @xmath320 is the positive first order rewriting of @xmath35 we get that @xmath367 .",
    "@xmath368 is of course a model of @xmath1 , so there must be an element @xmath123 such that @xmath369 .",
    "it follows from lemma [ nicponadto ] that @xmath370 and , in consequence , @xmath371 . but",
    "this implies that @xmath372 which contradicts ( @xmath230 [ ostatni].).@xmath294    as we show in section [ why ] , there is no hope to have anything similar to lemma [ wystarczy ] in the general ( non - binary ) case .",
    "we are ready to present the * proof of theorem [ glowne ] : *    in order to prove theorem [ glowne ] ( and , in consequence , theorem [ glownewintro ] ) we need to show a finite model of @xmath2 and @xmath1 without any atom of the predicate symbol @xmath271 .",
    "the structure @xmath373 is clearly a model of @xmath374 .",
    "it follows from the lemma [ wystarczy ] that its domain is exactly the domain of @xmath362 , so it is finite .",
    "since no atom of the relation @xmath271 occurs in @xmath288 there is also no such atom in @xmath362 .",
    "so the only way any such atom could appear in @xmath373 would be to derive it in the process of chase .",
    "but the only rule that derives @xmath271 is a existential tgd which demands a new element , and no such rule could have been used , due to lemma [ wystarczy].@xmath294",
    "fix a vtdag @xmath39 and a natural number @xmath155 . let @xmath49 be the signature of @xmath39 . to prove lemma [ duzy ] we need to find @xmath216 and a coloring @xmath200 of @xmath39 such that @xmath200 is @xmath97-conservative up to the size @xmath155 .",
    "first let us define the coloring :    for @xmath255 let @xmath375 be like in definition [ poprzedniki ] .    * for @xmath263 let @xmath376 .",
    "* for @xmath263 let @xmath377    [ kolorowanie ] a coloring @xmath200 of @xmath39 will be called natural if it satisfies the following conditions :    * if @xmath378 are such that @xmath379 and if + @xmath380 then @xmath381 ; * if @xmath378 are such that @xmath382 then + @xmath383 and @xmath384 are isomorphic .",
    "it is easy to see that for each vtdag @xmath39 there exists a natural coloring @xmath200 . from now on by @xmath200 we will mean a fixed natural coloring of @xmath39 .    by remark [ jednostajne ]",
    "the proof of lemma [ duzy ] will be finished when we show :    [ klaim ] for each query @xmath385 over @xmath49 , with @xmath386 , there exists @xmath216 such that for each element @xmath157 :    @xmath387 if and only if @xmath388    * *    proof of lemma [ klaim ] begins here .",
    "first of all notice that if the lemma [ klaim ] was false , then there would exists a * counterexample *  a conjunctive query @xmath389 such that :    ( @xmath390 ) for each @xmath391 there exists an element @xmath392 of @xmath39 and a valuation @xmath393 , with @xmath394 , such that @xmath395 and @xmath396 .",
    "each time we will say that query @xmath4 is a counterexample we will think that is satisfies condition ( @xmath390 ) .    by a colors statement we will mean a query of the form :    @xmath397    where @xmath398 is any of the possible colors from @xmath205 . by a color closure of @xmath399",
    "we will mean any query of the form @xmath400 , where @xmath401 is a colors statement .",
    "of course there are finitely many colors statements , and so there are finitely many possible color closures of @xmath4 .",
    "a query which is a color closure of some other query will be called color closed .",
    "[ zkolorami ]    * let @xmath4 be a counterexample . then for each @xmath97 there is a query @xmath402 , being a color closure of @xmath4 , such that @xmath403 and @xmath404 . * for each counterexample @xmath4 there exists a color closure @xmath405 of @xmath4 , which also is a counterexample .",
    "* if there exists a query @xmath4 being a color closed counter - example , then there also exists another color closed counterexample @xmath35 such that for each constant @xmath86 from @xmath49 , for each variable @xmath406 and for each @xmath216 there is @xmath407 , where @xmath408 is as @xmath409",
    ". we will say that counterexample @xmath35 avoids constants .",
    "( i ) the elements @xmath410 , where @xmath411 have some colors . adding to @xmath4 a statement asserting that they have",
    "the colors they really have will not make the new query @xmath412 less true in @xmath243 than @xmath413 was .    on the other hand , @xmath414 was false in @xmath39 already before the color statement was added and adding more constraints never makes a query more true .",
    "\\(ii ) use ( i ) and an argument like in remark [ jednostajne ] .",
    "\\(iii ) suppose @xmath4 is a color closed counterexample and @xmath415 @xmath416 for some constant @xmath417 , some variable @xmath406 and some @xmath216 . by the definition of natural coloring , the color of @xmath86 is unique in @xmath56 and",
    "thus the equality @xmath418 must hold for each @xmath97 , and thus @xmath35 being the result of replacing each occurrence of @xmath419 in @xmath4 by @xmath86 is also a counterexample.@xmath294    we are now going to view queries as graphs .",
    "what we mean here is a sort of gaifman graphs , where vertices are the variables in the query and the edges are the atoms of the query . as we only have binary and unary atoms , we can in a natural way see each query as a directed ( labeled ) graph . concerning the constants in the query , they are not understood to be vertices in the graph , and it is good to think that an atom of the form @xmath420 in a query , where @xmath83 is a constant and @xmath105 is a variable , is just a unary predicate , telling us something about @xmath105 alone . notice that atoms of the form @xmath124 in a query , where both @xmath83 and @xmath84 are constants , are irrelevant from the point of view of lemma [ klaim ] , as the part of @xmath39 consisting of the constants remains unchanged after our projections .",
    "now our plan of the proof of lemma [ klaim ] is as follows .",
    "we want to show that no query is an avoiding constants color closed counterexample .",
    "so first we will notice ( lemma [ acykliczne ] and lemma [ skier - cykl ] ) that neither a query being an undirected tree , nor a query containing a directed cycle can ever be a counterexample .",
    "at this point we will know that if there is any avoiding constants color closed counterexample @xmath4 then @xmath15 must contain an undirected cycle ( but not a directed one ) .",
    "but then , in lemma [ niesk - cykl ] we show that if such a @xmath4 existed , then also another counterexample would exist , being a tree or containing a directed cycle",
    ". that would however contradict lemma [ acykliczne ] and lemma [ skier - cykl ] .",
    "proofs of lemma [ acykliczne ] and lemma [ skier - cykl ] are easy .",
    "proof of lemma [ niesk - cykl ] , where we deal with queries containing an undirected cycle , is much more complicated .",
    "a technique of normalization of queries is used there , which we find to be the deepest idea of this paper ( we also employ this technique , in different context , in @xcite , where it is called _ second little trick _ ) .",
    "why are the undirected cycles in the query so much harder to deal with than directed ones ?",
    "the answer is in :    [ cykle ] let a theory @xmath1 consist of the rules :    @xmath421@xmath422    @xmath423@xmath424    let @xmath425 and let @xmath39 be @xmath12 , which means that @xmath39 is an infinite tree , where each element has exactly two successors . or , in other words , @xmath39 consists , except from @xmath83 and @xmath84 , of all the elements @xmath426 , where @xmath427 .",
    "let @xmath200 be a natural coloring of @xmath39 .",
    "let @xmath428 be two elements of @xmath39 of the form @xmath429 , @xmath430 , where @xmath431 and where @xmath432 .    then @xmath433 are two distinct elements of @xmath243  the length of @xmath434 is not big enough to hide the slight difference in the positive types of @xmath435 and @xmath436 .",
    "of course also @xmath437 are two distinct elements ( each of them distinct than @xmath438 and @xmath439 ) . but @xmath440 and @xmath441 .",
    "this means that the atoms @xmath442 are all true in @xmath243 , and so there is an undirected cycle in @xmath243 consisting of 4 distinct elements .    as we saw in example [ oczywisty+kolory ] , by using coloring we can easily make sure that there are no small directed cycles in @xmath443 .",
    "but we can not rule out small undirected new ( not present in @xmath200 ) cycles in @xmath443 .",
    "so we need to prove that , while the new cycles exist , no small query can actually notice them .",
    "[ acykliczne ] let @xmath444 .",
    "then for each element @xmath157 and each query @xmath100 , which is an undirected tree : + @xmath445 if and only if @xmath446 .",
    "it of course follows from the lemma that no query being an undirected tree can be a counterexample .",
    "[ skier - cykl ] let @xmath444 .",
    "suppose @xmath4 is a query containing a directed cycle , by which we mean a sub - query of the form : + @xmath447 + where @xmath448 and @xmath449 are relation symbols from @xmath49 .",
    "then @xmath450 .",
    "clearly , as being a counterexample means , among other conditions , being true in @xmath243 , the lemma implies that @xmath4 , containing a directed cycle , never is a counterexample .",
    "* proof of lemma [ acykliczne ] : *    call a query bad , if it is a counterexample to lemma [ acykliczne ] .",
    "suppose there exist bad queries and consider the smallest ( with respect to the number of variables ) of them .",
    "call this query @xmath35 .",
    "first notice that @xmath451 occurs only in one binary atom in @xmath35 .",
    "otherwise ( since @xmath35 is a tree ) @xmath35 could be seen as a conjunction of smaller queries sharing only the variable @xmath451 , and one of those queries would need to be a smaller bad query .",
    "this means that the query @xmath35 is either @xmath452 of the form @xmath453 , where @xmath454 or @xmath455 for some relation symbol @xmath43 and unary queries @xmath456,@xmath457 , or @xmath458 of the form @xmath459 , where @xmath16 is as above and @xmath460 contains all the variables in @xmath20 except from @xmath461 .",
    "notice that @xmath462 is smaller than @xmath35 .",
    "the case @xmath452 is of course very easy .",
    "remember that only elements of @xmath200 the same unary type can be identified by our quotient operations .",
    "so if @xmath463 then there must exist @xmath464 , such that @xmath465 and @xmath466 .",
    "but that implies , by definition of the relation @xmath136 , that there exists @xmath241 such that @xmath467 .",
    "for the case ( ii ) suppose that @xmath468 , and let @xmath469 be the satisfying valuation .",
    "@xmath470 means that there exist elements @xmath471 such that @xmath466 , @xmath472 and @xmath473 .",
    "notice that @xmath474 . since @xmath462 is smaller than @xmath35 it can not be bad .",
    "so we get that @xmath475 .",
    "but that implies that @xmath476 .",
    "now , since @xmath466 and @xmath477 , we get @xmath478 , but this contradicts the assumption that query @xmath35 was bad.@xmath294    * proof of lemma [ skier - cykl ] : *    suppose @xmath4 is like in the lemma and @xmath479 .",
    "this means that there exist elements @xmath480 , @xmath481 of @xmath200 such that @xmath482 and @xmath483 for each @xmath163 .",
    "let @xmath484 .",
    "suppose @xmath485 is already defined , and @xmath486 .",
    "there exists a non - constant element of @xmath200 , namely @xmath487 such that @xmath483 . since @xmath486 and @xmath488 , there exists ( a unique ) element @xmath489 such that @xmath490 . by lemma [ wygodny ]",
    "we get that @xmath491 .",
    "but that means that @xmath492 , which implies that there must be an element @xmath493 such that @xmath494 , where the color of @xmath123 is the same as the color of @xmath495 , so @xmath496 form a directed path in @xmath200 , of length not greater than @xmath155 , joining two elements of the same color .",
    "this contradicts the definition of natural coloring .",
    "@xmath294    now , lemma [ klaim ] follows from lemma [ zkolorami ] , lemma [ acykliczne ] , lemma [ skier - cykl ] and from the following :    [ niesk - cykl ] if there exists a color closed counterexample @xmath4 which avoids constants and which contains an undirected cycle then there exists also a counterexample being a tree or a counterexample containing a directed cycle .",
    "consider a query @xmath224 which contains an undirected cycle , which is not a directed cycle",
    ". then @xmath35 must be of the form :    ( @xmath497 ) @xmath498    for some relations @xmath499 and some @xmath500@xmath501 .",
    "[ normali ]   + if any color closed , avoiding constants , query @xmath224 of the form @xmath502 is a counterexample , then there is a binary relation @xmath503 such that one of the following queries is also a color closed , avoiding constants , counterexample :    * @xmath504 * @xmath505 * @xmath506    to see how lemma [ normali ] implies lemma [ niesk - cykl ] , * while * @xmath35 is a counterexample of the form ( @xmath497 ) * do * replace it with another counterexample , the one whose existence is assured by lemma [ normali ] . the only way to leave the while - loop is to produce a counterexample which is a tree or contains a directed cycle .",
    "so it is enough to prove that the while - loop indeed terminates .",
    "if the first possibility from the lemma is used as the replacement , then the new query has less variables than the old one ( since adding an equivalence of variables is the same as unifying the variables ) .",
    "but the last two possibilities do not decrease the number of variables .",
    "so are nt they going to be applied forever ?",
    "consider the following measure of the size of a query :    measure(@xmath4)= @xmath507    where @xmath508 is the number of the occurrences of variable @xmath105 in @xmath35 and @xmath509 is the number of variables from which @xmath105 is reachable by a directed path in the graph of the query .",
    "it is easy to see that measure(@xmath510 is a natural number which decreases each time lemma [ normali ] is applied .",
    "before we prove lemma [ normali ] notice that the first condition in definition [ vtdag ] implies :    [ wygodny ] suppose @xmath511 are non - constant elements of @xmath200 , such that @xmath512 for some relation @xmath513",
    ". then @xmath514 implies @xmath515 .",
    "suppose there was a query @xmath516 , with @xmath517 , such that @xmath518 but @xmath519 .",
    "then @xmath520 but @xmath521 .",
    "but this would mean that @xmath522 .",
    "notice that the assumption that @xmath39 is a vtdag was used here.@xmath294    * proof of lemma [ normali ] * suppose @xmath35 is a color closed counterexample of the form ( @xmath497 ) .",
    "consider the color of @xmath419 ( call it color(@xmath419 ) ) .",
    "more precisely , color(@xmath419 ) is the color that is enforced by @xmath35 on any valuation of @xmath419 that satisfies @xmath35 .",
    "what we are interested in is not really the full information about color(@xmath419 ) , but its lightness  the information about the isomorphic type of @xmath375 for any @xmath523 having the color that @xmath35 enforces on @xmath419 .",
    "now please be ready for the most complicated argument of this paper .",
    "let @xmath99 be like in the previous paragraph .",
    "the set @xmath375 contains some elements @xmath524 and @xmath525 such that @xmath526 are true in @xmath200 .",
    "it follows from definition [ vtdag ] that in such case there must be an atom @xmath527 true in @xmath200 , where @xmath527 is either @xmath528 or @xmath529 for some relation @xmath530 , or @xmath531 ( this happens when @xmath532 ) .",
    "notice that the atom @xmath16 only depends on the color of @xmath419 not on the choice of @xmath99 .",
    "suppose @xmath16 is @xmath528 , the other two possibilities are analogous .",
    "now , we claim that @xmath533 is also a counterexample , with @xmath534 , @xmath535 and @xmath536 .",
    "notice that we use the notation @xmath144 here in the sense defined in ( @xmath230 [ naduzycie ] . ) : @xmath537 , for an argument being a variable of @xmath35 ( or @xmath4  they have the same set of variables ) returns an element of @xmath538 and @xmath144 for an argument from @xmath538 returns an element of @xmath539 .",
    "we need to show that the conditions from @xmath409 are now satisfied .",
    "it is easy to see that @xmath540 .",
    "what remains to be shown is that for each @xmath391 :    ( * ) @xmath541   and   ( * * ) @xmath542 .",
    "let us begin with ( * * ) , which is easier .",
    "suppose @xmath543 .",
    "so there exists a valuation @xmath544 , with @xmath545 , such that @xmath546 .",
    "notice that @xmath547 .",
    "we claim that @xmath548 and this will be in contradiction with what we assumed about @xmath35 and @xmath549 .    for the proof of the last claim it is enough to show that @xmath550 , as this is the only atom of @xmath35 missing in @xmath4 .",
    "but this follows from what we know about the isomorphic type of @xmath551 , from the fact that @xmath552 and from the assumption that the in - degree of each of the relations in @xmath200 is at most 1 ( first condition in definition [ vtdag ] ) .",
    "now we are going to prove ( * ) .",
    "we know that @xmath553 , so also @xmath554 .",
    "what remains to be proved is that    ( * ) @xmath555    we know that @xmath556 and that @xmath557 .",
    "this means that there are elements @xmath558 of @xmath200 such that : @xmath559 ,  @xmath560 ,  @xmath561 and @xmath562 .",
    "the color of @xmath83 and of @xmath84 is the color of @xmath419 , so the isomorphic type of @xmath563 is the same as the isomorphic type of @xmath564 , and the same as the isomorphic type of @xmath375 , where @xmath99 is as in the beginning of lemma [ normali ] .",
    "this means that there is an element @xmath565 such that @xmath566 and @xmath567 .",
    "there is no reason to think that @xmath568 .",
    "but from lemma [ wygodny ] we get that @xmath569 . so @xmath319 and @xmath83 are two elements of @xmath200 such that @xmath566 , that @xmath570 and that @xmath571.@xmath294    this ends the proofs of lemmas [ niesk - cykl],[normali ] , [ klaim ] and [ duzy ] .",
    "notice that we can rewrite existential tgds from theorem [ niebinarne ] into conjunction of existential tgds with binary heads and some arbitrary datalog rules .",
    "hence the whole proof of theorem [ glowne ] survives .",
    "usually , once we know that some property holds for binary signatures , it is easy to prove , by some sort of reduction , that it remains true in the general case .",
    "this rule does not seem to be valid for the bdd / fc conjecture .",
    "what we can however easily show is :                  the idea is here that using ternary predicates we can give names to lists of variables , in the good old prolog way .",
    "we appear to still have non - ternary predicates in the bodies of the rules .",
    "but just do nt think of them as of predicates any more !",
    "the @xmath581 in the body of ( * ) is just a view over the real predicates @xmath582 , @xmath583 and @xmath584 now , which relate to @xmath581 in the same was as @xmath585 , @xmath586 and @xmath277 relate to @xmath43 .    in this way we constructed a new , ternary theory , call it @xmath587",
    ". what we would now need to show ( if it was a real detailed proof ) would be that ( i ) if @xmath1 is bdd then @xmath587 also is , and ( ii ) if @xmath587 is fc then @xmath1 also is . to see how ( ii ) works take a database instance @xmath2 and query @xmath16 .",
    "rewrite @xmath2 and @xmath16 into @xmath588 and @xmath589 in the new ternary language ( possibly adding some new elements to denote lists of elements of @xmath2 ) .",
    "of course if @xmath590 then also @xmath591 .",
    "so , if @xmath587 is fc , there exists a finite @xmath592 being a model of @xmath587 and @xmath588 such that @xmath593 .",
    "now , to finish the proof of ( i ) , define the relations of @xmath7 as views over respective relations in @xmath592 .",
    "the tgds we consider in this paper are assumed to be single - head .",
    "of course if the arity is not restricted , then the validity of the bdd / fc conjecture does not depend on this assumption , as every multi - head tgd @xmath35 can be replaced by a single - head tgd having , as its head , the join of all the atoms in the head of @xmath35 , and by some datalog rules splitting this join back into smaller atoms .",
    "but such a simple transformation is not possible for binary signatures .",
    "it is actually easy to see that the bdd / fc conjecture for multi - head tgds over binary signatures is already equivalent to the full conjecture , as any ternary datalog@xmath0 program can be encoded in this format .",
    "for example the rule :              the main idea of our proof of theorem [ glownewintro ] was first to find , for a bdd theory @xmath1 and a database instance @xmath2 the skeleton @xmath288 which is a substructure of @xmath12 on one hand being simple enough to be ptp - conservative , but on the other hand not only containing all the elements of @xmath12 , but also sufficient information about the relations between elements which require a witness and the witnesses .",
    "then the idea was to prove ( lemma [ wystarczy ] ) that the finite model @xmath92 constructed from this simple structure by a quotient operation can be saturated , using the datalog rules from @xmath1 , to a model of @xmath1 , without adding any new elements being necessary .",
    "the first reason this line of reasoning can not be used in the general ( non - binary ) case is that the distinction between existential tgds and plain datalog rules makes then no sense any more : each datalog rule can be turned into a tgd by adding a new ( existentially quantified ) dummy variable to the atom on the right hand side of the query .",
    "but what we view as an even more serious obstacle is that , as the following example shows , it is hard to imagine how anything analogous to lemma [ wystarczy ] could be true in the general case :          clearly , @xmath1 is bdd .",
    "and @xmath239 is a very simple structure : an infinite @xmath106-chain , with additional atom @xmath604 for each three consecutive elements @xmath105 , @xmath451 , @xmath419 of this chain .",
    "but whenever any two elements of @xmath39 are identified by a quotient operation , a new tuple satisfying the body of the ( only ) tgd form @xmath1 emerges ( something we have already seen in example [ jakniemozna ] ) , and a new witness @xmath419 is required for this tuple . since the new witness is a function of the whole tuple , not just of ( the element substituted for ) @xmath451 , the ( already existing ) element @xmath596 of @xmath243 such that @xmath605 can not be used now , and a new one must be created .",
    "if there was just one element this would be something we could live with  our main goal is just to keep the structure finite . but notice that once the new witness @xmath419 , with @xmath606 is created , it enforces a new infinite @xmath106-chain to be built .",
    "[ false ] @xmath1 is not fc if and only if @xmath1 defines an ordering , by which we mean that there exists a database instance @xmath2 , an infinite set @xmath607 and a query @xmath608 , which is a conjunctive query with projections , with two free variables , such that @xmath609 and @xmath4 defines a strict total ordering on @xmath48 .",
    "notice how beautiful it would be .",
    "even if our bdd / fc conjecture is true ( which we believe it is ) it does not give a full explanation of the phenomenon of finite controllability , as they are many theories ( for example guarded ) which are fc but not bdd . had conjecture [ false ] be true , it would have given a sort of such explanation , and a very elegant one , since the above property of  defining an ordering  is very close to ( the negation of ) the standard , and very important , model - theoretic notion of stability @xcite .",
    "besides , it could give the bdd / fc conjecture as a corollary , if we only could prove that a bdd theory never defines an ordering , which we believe should not be very hard .    clearly , the  if  implication of the conjecture holds true : if @xmath2 , @xmath48 and @xmath4 like in the conjecture existed , then @xmath610 would be a query false in @xmath12 but true in each finite model of @xmath611 ( as each such finite model must contain a homomorphic image of @xmath12 , and some two elements of @xmath48 must be mapped , by this homomorphism , to the same element of the finite structure )            then @xmath236 is an infinite @xmath106-chain like in example [ oczywisty ] , but with additional atoms @xmath616 for each @xmath163 .",
    "let @xmath617 . clearly , @xmath618  the only element @xmath619 of @xmath39 which satisfies @xmath620 has no @xmath106-predecessor .",
    "but , as we are going to prove , if @xmath7 is any finite model of @xmath621 then @xmath622 .    indeed , whatever the structure @xmath7 is , it must contain a sequence @xmath623 of elements such that @xmath624 and @xmath625 for each @xmath626 .",
    "the datalog rule form @xmath1 can then prove that @xmath627 , and then that @xmath628 .",
    "let @xmath629 .",
    "now take @xmath630 and @xmath631 to get @xmath620 .",
    "_ proof ( hint ) : _ for a given number @xmath155 , color the structure in such a way , that each neighborhood of radius @xmath155 consists of elements whose colors are pairwise different . then mimic the reasoning from section [ odlozona].@xmath294    this shows ptp - conservativity of @xmath632 , which  as explained in remark [ goodfor ]  guarantees that , if only @xmath97 is big enough , @xmath633 will be a model for all the existential tgds from the theory , does not buy us much more",
    ": the devil can very well be in the plain datalog rules .",
    "notice however , that not all datalog rules are troublemakers :    [ monadycznedatalogi ] suppose @xmath200 is @xmath97-conservative up to the size @xmath155 .",
    "let @xmath634 be a datalog rule with at most @xmath155 variables and with a unary predicate in the head .",
    "if this true in @xmath200 then it is also true in @xmath243 .",
    "proof : positive @xmath155-types of @xmath105 and of @xmath635 are the same .      guarded datalog@xmath0 programs , proved to be fc in @xcite , consist of guarded rules ( datalog rules and tgds ) which have an atom in the body , called the guard , containing all the variables that occur in the body of this rule . there is no restriction on the arity , in particular on the arity of the predicates in the heads of tgds .",
    "the witness generated by a guarded tgd appears to depend on all the variables in the head of the rule , and in consequence such a rule seems to be inherently non - binary , not even in the broad sense of section [ ubranie ] .",
    "but , as it turns out , guarded datalog@xmath0 programs are binary in disguise . and , while they are not bdd , still nothing beyond the techniques developed in sections [ teoria ] and [ odlozona ] is needed to prove they are fc .    to be more precise , suppose there exists a guarded program @xmath1 , a database instance @xmath2 and a query @xmath4 which are a counterexample for fc .",
    "of course @xmath2 can be also hardwired into @xmath1 so we can assume it is empty .",
    "now we will show how to rewrite @xmath1 and @xmath4 into a binary signature , without changing their status of a counterexample .",
    "then we will use the toolkit from sections [ teoria ] and [ odlozona ] to show very easily that the resulting binary program is fc .    *",
    "( i ) * first step is similar to the one in the end of section [ hiding ]  we want the predicates which are in the heads of tgds ( the tgps ) to be distinct that the ones in the heads of datalog rules .",
    "we also want the rules to respect the order of variables in atoms ",
    "if @xmath105 is left of @xmath451 in some atom in the rule then @xmath105 never can be right of @xmath451 in any atom of the same rule .",
    "this can be done by remembering the order of arguments as a part of the name of each predicate .",
    "of course @xmath4 must be rewritten ",
    "each new predicate is now a disjunction of the old predicates .",
    "notice that guardedness implies that if @xmath1 respects the order of variables , if @xmath636 for some tgp @xmath43 and if @xmath637 then @xmath638 . the elements in @xmath639 are `` parents of @xmath86 '' , who were present in the atom @xmath43 when @xmath86 was born , and no rule can add anything else left of @xmath86 in any atom .            where @xmath647 are all the non - leading variables in @xmath35 and @xmath648 , where @xmath649 is the maximal arity of the predicates in @xmath1 .",
    "this changes nothing , as the elements to be substituted for @xmath650 must have been some parents of @xmath451 anyway .    *",
    "( iv ) * now , again in the manner of section [ hiding ] rewrite the current @xmath1 and @xmath4 in such a way , that each tgp only occurs in one rule head ( this can be easily done for the cost of some renaming datalog rules ) .      at some point in section [ ubranie ] we wrote : _ all we need in the proof in section [ dowod ] is that ( ... ) the witness generated by the rule only depends on one element in the body ( the @xmath451 ) , while the additional elements in the body are just needed to make sure that @xmath451 has a positive type which allows it to demand a witness .",
    "_ notice that this is exactly the case with our program now : all rules are in the form ( @xmath230 [ gwiazdeczka ] . ) and the elements of @xmath651 that can possibly be substituted for elements of @xmath20 in the body of such rule are themselves functions of @xmath451 .",
    "so @xmath596 is just a function of @xmath451 , not of all the elements of @xmath20 !",
    "the only reason why non - binary predicates could be necessary does not exist any more .",
    "let us get rid of them .",
    "since the original @xmath1 was guarded , each atom @xmath652 in @xmath651 was contained in some tgp atom @xmath653 .",
    "our idea is that full information about @xmath652 will be remembered , * without materializing @xmath652 * , in a monadic way , by the element @xmath86 .",
    "it will need to remember which of its parents are involved in each predicate .",
    "of course it also needs to remember the links to its parents  this is why the relations @xmath644 were introduced .    *",
    "( vi ) * replace each tgd of the form : @xmath654 @xmath655 ( @xmath656 may , or may not , by equal to @xmath451 ) by the following rules : @xmath657 and @xmath658 where @xmath659 is a new binary predicate .",
    "@xmath660 means something like `` the ( unique ) rule which derives @xmath43 was applied to a tuple led by @xmath451 and a witness @xmath419 was created '' .",
    "the newly created element @xmath419 must also learn who its parents are .",
    "for each @xmath661 , if @xmath662 was an atom in @xmath35 , add to the current @xmath1 the rule :        now the program does not have tgps of arity higher than 2 any more .",
    "notice that for each variable @xmath667 in any rule , there exists @xmath163 such that the atom @xmath668 is in the body of this rule .",
    "we are ready to get rid also of the non - tgps :    * ( vii ) * in each rule , with the atoms @xmath669 in its body , replace each occurrence of a non - tgp atom @xmath670 with @xmath671 , where @xmath671 is a new monadic predicate ( in which @xmath451 remembers what his parents with numbers @xmath672 are involved in ) .",
    "for each two monadic predicates of the form @xmath671 and @xmath673 add to the program all possible rules of the form :      the role of the last rule is to make sure that , once an atom of the predicate @xmath16 , involving @xmath676 @xmath677 is derived , all the elements that have @xmath676 @xmath677 among their parents are aware of that and ready to use this fact in further derivations .",
    "we now have a new program over a binary signature , call it @xmath587 .",
    "it follows from the construction that @xmath678 is almost the same structure as @xmath651 ( where @xmath1 is the original guarded program ) .",
    "they both have the same elements , and the predicates of each of them can be seen as views over the predicates of the other one . but notice that @xmath679 is a binary structure satisfying the assumptions of of lemma [ duzy ] .",
    "so it is ptp - conservative .",
    "this means that if @xmath97 is big enough then @xmath243 is a model for all the existential tgds in @xmath587 and that @xmath680 ( where @xmath10 is the original query @xmath4 after all the rewritings ) .",
    "to finish the proof of fc for guarded datalog@xmath0 programs we only need to show that @xmath243 is also a model of all the datalog rules in @xmath587 .",
    "all the datalog rules except from the rules of the form ( @xmath663 ) have a unary atom in the head , so ( by remark [ monadycznedatalogi ] ) we do not need to bother about them at all . what remains to be seen",
    "is that the rules of the form ( @xmath663 ) also remain true in @xmath243 .",
    "so suppose @xmath681 for some @xmath256 .",
    "this means that there exist @xmath682 in @xmath200 such that @xmath683 , @xmath684 , @xmath685 , @xmath686 and @xmath687 . but",
    "@xmath200 can be seen as a chase of the guarded theory @xmath1 with the natural coloring , so the types of successors of an element only depend on the type of this element , and it is easy to see that if @xmath688 and @xmath684 then there must exist @xmath689 such that @xmath690 .",
    "since the rule ( @xmath663 ) was true in @xmath200 we get that @xmath691 which implies that @xmath692 .",
    "we proved that @xmath663 remains true in @xmath243 .",
    "a. cali , g. gottlob , and a. pieris ; _ advanced processing for ontological queries _ ; proc .",
    "vldb-10 , 3(1):554 - 565 , 2010 ; a. cali , g. gottlob , and a. pieris ; _ query answering under non - guarded rules in datalog+/- _ ; web reasoning and rule systems lecture notes in computer science , 2010 , volume 6333 , pp 1 - 17 ;"
  ],
  "abstract_text": [
    "<S> bounded derivation depth property ( bdd ) and finite controllability ( fc ) are two properties of sets of datalog rules and tuple generating dependencies ( known as datalog@xmath0 programs ) , which recently attracted some attention . </S>",
    "<S> we conjecture that the first of these properties implies the second , and support this conjecture by some evidence proving , among other results , that it holds true for all theories over binary signature .    </S>",
    "<S> = 10000 = 10000 </S>"
  ]
}
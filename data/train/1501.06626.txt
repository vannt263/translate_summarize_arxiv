{
  "article_text": [
    "the _ assignment problem _ is one of the most fundamental and important problems in economics and computer science  ( see e.g. , * ? ? ?",
    "* ; * ? ? ?",
    "* ; * ? ? ?",
    "* ; * ? ? ?",
    "* ; * ? ? ?",
    "in the setting , agents express preferences over objects and , based on these preferences , the objects are allocated to the agents . the model is applicable to many resource allocation or fair division settings where the objects may be public houses , school seats , course enrollments , kidneys for transplant , car park spaces , chores , joint assets , or time slots in schedules .",
    "a randomized or fractional assignment rule takes the preferences of the agents into account in order to allocate each agent a fraction of the object .",
    "if the objects are indivisible but allocated in a randomized way , the fraction can also be interpreted as the probability of receiving the object .",
    "randomization is widespread in resource allocation since it is one of the most natural ways to ensure procedural fairness  @xcite .",
    "randomized assignments have been used to assign public land , radio spectra to broadcasting companies , and us permanent visas to applicants  ( footnote  1 , * ? ? ?",
    "* ) .    among the various randomized / fractional assignment rules , the _ probabilistic serial ( ps ) _",
    "rule is one of the most prominent rules  @xcite .",
    "ps works as follows .",
    "each agent expresses a linear order over the set of houses ( we use the term house throughout the paper though we stress any object could be allocated with these mechanisms ) .",
    "each house is considered to have a divisible probability weight of one , and agents simultaneously and with the same speed eat the probability weight of their most preferred house .",
    "once a house has been eaten by a subset of agents , these agents proceed to eat their next most preferred house that has not been completely eaten .",
    "the procedure terminates after all the houses have been eaten .",
    "the random allocation of an agent by ps is the amount of each object he has eaten .",
    "although ps was originally defined for the setting where the number of houses is equal to the number of agents , it can be used without any modification for fewer or more houses than agents  ( see e.g. , * ? ? ?",
    "* ; * ? ? ?",
    "the _ probabilistic serial ( ps ) _ rule fares better than any other random assignment rule in terms of fairness and welfare  @xcite . in particular",
    ", it satisfies strong envy - freeness and efficiency with respect to both _",
    "stochastic dominance ( sd ) _ and _ downward lexicographic ( dl ) _",
    "relations  @xcite .",
    "sd is one of the most fundamental relations between fractional allocations because one allocation is sd - preferred over another if for every utility function consistent with the ordinal preferences , the former yields at least as much expected utility as the latter .",
    "dl is a refinement of sd and based on lexicographic comparisons between fractional allocations .",
    "generalizations of the ps rule have been recommended in many settings  ( see e.g. , * ? ? ?",
    "the ps rule also satisfies some desirable incentive properties .",
    "if the number of objects is at most the number of agents , then ps is weak sd - strategyproof  @xcite .",
    "another well - established rule _ random serial dictator ( rsd ) _ is not envy - free , not as efficient as ps  @xcite and the fractional allocations under rsd are # p - complete to compute  @xcite .",
    "however , unlike rsd , ps is not strategyproof .    in this paper , we examine the following natural question for the first time : _ what is the computational complexity of an agent computing a different preference to report so as to get a better ps outcome ? _ this problem of computing the optimal manipulation has already been studied in great depth for voting rules  ( see e.g. , * ? ? ?",
    "@xcite showed that when agents are not truthful , the outcome of ps may not satisfy desirable properties related to efficiency and envy - freeness .",
    "hence , it is important to check that even if agents can in principle manipulate , how hard it is to compute a beneficial misreport of their preferences .",
    "the complexity of manipulation of the ps rule is also related to the study of nash dynamics and better responses .",
    "efficient algorithms to compute best responses can be used to understand nash dynamics under the mechanism .    in order to compare random allocations",
    ", an agent needs to consider relations between them .",
    "we consider three well - known relations between random allocations  ( see e.g. , * ? ? ?",
    "* ; * ? ? ?",
    "* ; * ? ? ?",
    "* ; * ? ? ?",
    "* ) : @xmath0 _ expected utility ( eu ) _ , @xmath1 _ stochastic dominance ( sd ) _ , and @xmath2 _ downward lexicographic ( dl)_. for eu , an agent seeks a different allocation that yields more expected utility . for dl ,",
    "an agent seeks an allocation that gives a higher probability to the most preferred alternative that has different probabilities in the two allocations . throughout the paper",
    ", we assume that agents express _ strict _ preferences , i.e. , they are not indifferent between any two houses .    * contributions . *",
    "we initiate the study of computing best responses for the ps mechanism  one of the most established randomized rules for the assignment problem .",
    "the study is additionally motivated by complementing experimental work where we observe that as the number of houses relative to the number of agents grows , the percentage of manipulable profiles ( for which at least one agent has incentive to manipulate ) increases , maximizing at around @xmath3 .",
    "we present a polynomial - time algorithm to compute the dl best response for multiple agents and houses .",
    "for the case of two agents , we present a polynomial - time algorithm to compute an eu best response for any utilities consistent with the ordinal preferences .",
    "the two - agent case is also of special importance since various disputes arise between two parties .",
    "the result for the eu best response relies on an interesting connection between the ps rule and the sequential allocation rule for indivisible objects . in a sequential allocation ,",
    "a picking sequence is specified for the agents and agent get his most preferred available object when his turns comes . for general @xmath4 , we show that computing an eu best response is np - hard .",
    "the result contrasts sharply with the recent result of @xcite that a best response can be computed in polynomial time for sequential allocation .",
    "an _ assignment problem _ @xmath5 consists of a set of agents @xmath6 , a set of houses @xmath7 and a preference profile @xmath8 in which @xmath9 denotes a complete , transitive and strict ordering on @xmath10 representing the preferences of agent @xmath11 over the houses in @xmath10 . a _",
    "fractional assignment _ is an @xmath12 matrix @xmath13_{\\substack{1\\leq i\\leq n , 1\\leq j\\leq m}}$ ] such that for all @xmath14 , and @xmath15 , @xmath16 ; and for all @xmath17 , @xmath18 .",
    "the value @xmath19 is the fraction of house @xmath20 that agent @xmath11 gets .",
    "each row @xmath21 represents the _ allocation _ of agent @xmath11 .",
    "a fractional assignment can also be interpreted as a random assignment where @xmath19 is the probability of agent @xmath11 getting house @xmath20 .",
    "a standard method to compare random allocations is to use the _ sd ( stochastic dominance ) _ relation . given two random assignments @xmath22 and @xmath23 , @xmath24 i.e. , a player @xmath11 _ sd  prefers _",
    "allocation @xmath25 to @xmath26 if @xmath27 for all @xmath28 and @xmath29    given two random assignments @xmath22 and @xmath23 , @xmath30 i.e. , a player @xmath11 _ dl  ( downward lexicographic ) prefers _ allocation @xmath25 to @xmath26 if @xmath31 and for the most preferred house @xmath32 such that @xmath33 , we have that @xmath34 .    when agents are considered to have cardinal utilities for the objects , we denote by @xmath35 the utility that agent @xmath11 gets from house @xmath32 .",
    "we will assume that the total utility of an agent equals the sum of the utilities that he gets from each of the houses .",
    "given two random assignments @xmath22 and @xmath23 , @xmath36 i.e. , a player @xmath11 _ eu ( expected utility )  prefers _",
    "allocation @xmath25 to @xmath26 if @xmath37    since for all @xmath14 , agent @xmath11 compares assignment @xmath22 with assignment @xmath23 only with respect to his allocations @xmath25 and @xmath26 , we will sometimes abuse the notation and use @xmath38 for @xmath39 .",
    "a _ random assignment rule _ takes as input an assignment problem @xmath40 and returns a random assignment which specifies what fraction or probability of each house is allocated to each agent .",
    "the _ probabilistic serial ( ps ) rule _ is a random assignment algorithm in which we consider each house as infinitely divisible  @xcite . at each point in time , each agent is eating ( consuming the probability mass of ) his most preferred house that has not been completely eaten and each agent eats at the same unit speed . hence all the houses are eaten at time @xmath41 and each agent receives a total of @xmath41 units of houses .",
    "the probability of house @xmath20 being allocated to @xmath11 is the fraction of house @xmath20 that @xmath11 has eaten .",
    "the following example adapted from ( section 7 , * ? ? ?",
    "* ) shows how ps works .",
    "[ example : ps ] consider an assignment problem with the following preference profile .",
    "@xmath42 agents @xmath43 and @xmath44 start eating @xmath45 simultaneously whereas agent @xmath46 eats @xmath47 .",
    "when @xmath43 and @xmath44 finish @xmath45 , agent @xmath46 has only eaten half of @xmath47 .",
    "the timing of the eating can be seen below .",
    "( 0,6 ) ; ( 0,0 ) ",
    "( 20,0 ) ;    ( 20,6 ) ",
    "( 20,0 ) ;    ( 0,2 ) ",
    "( 20,2 ) ; ( 0,4 ) ",
    "( 20,4 ) ; ( 20,0 ) ",
    "( 20,6 ) ;    ( 10,0 )  ( 10,6 ) ;    ( 0,6 )  ( 20,6 ) ;    ( 15,0 ) ",
    "( 15,6 ) ;    ( 0,-.8 ) node(c)@xmath48 ; ( 20/2,-1.2 ) node(c)@xmath49 ;    ( 20/2,-2.5 ) node(c)time ;    ( 20,-1 ) node(c)@xmath46 ;    ( 15,-1.2 ) node(c)@xmath50 ;    ( -3,6 ) node(z)agent @xmath46 ; ( -3,4 ) node(z)agent @xmath43 ; ( -3,2 ) node(z)agent @xmath44 ;    ( 5,6.8 ) node(z)@xmath47 ;    ( 5,4.8 ) node(z)@xmath45 ;    ( 5,2.8 ) node(z)@xmath45 ;    ( 12.5,6.8 ) node(z)@xmath47 ;    ( 12.5,4.8 ) node(z)@xmath47 ;    ( 12.5,2.8 ) node(z)@xmath51 ;    ( 17.5,6.8 ) node(z)@xmath51 ;    ( 17.5,4.8 ) node(z)@xmath51 ;    ( 17.5,2.8 ) node(z)@xmath51 ;    the final allocation computed by ps is @xmath52    consider the assignment problem in example  [ example : ps ] .",
    "if agent @xmath46 misreports his preferences as follows : @xmath53 then @xmath54 then , if @xmath55 , @xmath56 , and @xmath57 , then agent @xmath46 gets more expected utility when he reports @xmath58 . in the example , although truth - telling is a dl best response , it is not necessarily an eu best response for agent @xmath46 .",
    "examples 1 and 2 of @xcite show that manipulating the ps mechanism can lead to an sd improvement when each agent can be allocated more than one house . in light of the fact that the ps rule can be manipulated ,",
    "we examine the complexity of a single agent computing a manipulation , in other words , the best response for the ps rule . for a preference profile @xmath59 ,",
    "we denote by @xmath60 the preference profile obtained from @xmath59 by replacing agent @xmath11 s preference by @xmath61 . for @xmath62",
    ", we define the problem @xmath63-br : given @xmath40 , compute a preference @xmath64 for agent @xmath46 such that there exists no preference @xmath65 such that @xmath66 .    for a constant @xmath67",
    ", the problem @xmath63-br can be solved by brute force by trying out each of the @xmath68 preferences .",
    "hence we will not assume that @xmath67 is a constant .",
    "we establish some more notation and terminology for the rest of the paper .",
    "we will often refer to the ps outcomes for partial lists of houses and preferences .",
    "we will denote by @xmath69 , the allocation that agent @xmath11 receives when his preference is according to ordered list @xmath70 .",
    "note that preferences and ordered lists are interchangeable , except that a list need not contain all houses in @xmath10 .",
    "when an agent runs out of houses in his preference list , he stops eating .",
    "the _ length _ of a list @xmath70 is denoted @xmath71 , and we refer to the @xmath72th house in @xmath70 as @xmath73 . in the ps rule , the _ eating start time _ of a house is the time point at which the house starts to be eaten by some agent . in example",
    "[ example : ps ] , the eating start times of @xmath74 and @xmath51 are @xmath75 and @xmath76 , respectively .",
    "in this section , we present a polynomial - time algorithm for dl - br .",
    "lexicographic preferences are well - established in the assignment literature  ( see e.g. , * ? ? ?",
    "* ; * ? ? ?",
    "* ; * ? ? ?",
    "let @xmath40 be an assignment problem where @xmath77 and @xmath78 .",
    "we will show how to compute a dl best response for agent @xmath79 .",
    "it has been shown that when @xmath80 , then truth - telling is the dl best response but if @xmath81 , then this need not be the case  @xcite .",
    "recall that a preference @xmath58 is a dl best response for agent 1 if the fractional allocation agent 1 receives by reporting @xmath58 is dl preferred to any fractional allocation agent 1 receives by reporting another preference .",
    "that is , there is no preference @xmath82 such that his share of a house @xmath32 when reporting @xmath82 is strictly larger than when reporting @xmath58 while the share of all houses he prefers to @xmath32 ( according to his true preference @xmath83 ) is the same whether reporting @xmath58 or @xmath82 .",
    "our algorithm will iteratively construct a partial preference list for the @xmath11 most preferred houses of agent 1 . without loss of generality , denote @xmath84 for any @xmath85 , denote @xmath86 .",
    "a preference of agent 1 _ restricted _ to @xmath87 is a preference over a subset of @xmath87 . for the preference of agent 1 restricted to @xmath87",
    ", the ps rule computes an allocation where the preference of agent 1 is replaced with this preference and the preferences of all other agents remain unchanged .",
    "the notions of dl best response and dl preferred fractional assignments with respect to a subset of houses @xmath87 are defined accordingly for restricted preferences of agent 1 .",
    "@xmath88 dl best response of agent @xmath46    @xmath89 @xmath90 @xmath91 @xmath92 @xmath93 * * est**@xmath94 @xmath95 @xmath96 first house among @xmath97 in @xmath83 @xmath98 @xmath99 @xmath100 @xmath101 \\leftarrow \\mathsf{true}$ ] @xmath102 @xmath103 \\leftarrow \\mathsf{true}$ ] @xmath104 @xmath103 \\leftarrow \\mathsf{false}$ ] @xmath105 @xmath106 @xmath93 * * est**@xmath107 @xmath104 @xmath108 @xmath109 @xmath110    for a house @xmath28 , let @xmath111 denote the fraction of house @xmath32 that the ps rule assigns to agent 1 when he reports the ( partial ) preference @xmath70 . we start with a simple lemma showing that a dl best response for agent 1 for the whole set @xmath10 can be no better and no worse on @xmath87 than a dl best response for @xmath87 .",
    "[ lem : eq - ass ] let @xmath112 . a dl best response for agent 1 on @xmath10",
    "gives the same fractional assignment to the houses in @xmath87 as a dl best response for agent 1 on @xmath87 .",
    "our algorithm will compute a list @xmath113 such that @xmath114 .",
    "the list @xmath113 will be a dl best response for agent 1 with respect to @xmath87 .",
    "suppose the algorithm has computed @xmath115 .",
    "then , when considering @xmath116 , it needs to make sure that the new fractional allocation restricted to the houses in @xmath117 remains the same ( due to lemma [ lem : eq - ass ] ) . for the preference to be optimal with respect to @xmath87 ,",
    "the algorithm needs to maximize the fractional allocation of @xmath118 to agent 1 under the previous constraint .",
    "our algorithm will compute a canonical dl best response that has several additional properties .",
    "a preference @xmath113 for @xmath87 is _ no-@xmath48 _ if @xmath113 contains no house @xmath32 with @xmath119 .",
    "any dl best response for agent @xmath46 for @xmath87 can be converted into a no-@xmath48 dl best response by removing the houses for which agent 1 obtains a fraction of @xmath48 . for a no-@xmath48 preference @xmath113 for @xmath87 , the _ stingy ordering _ for a position @xmath120",
    "is determined by running the ps rule with the preference @xmath121 for agent 1 , where @xmath122 denotes concatenation .",
    "it orders the houses from @xmath123 by increasing eating start times , and when two houses @xmath124 have the same eating start time , we order @xmath32 before @xmath125 iff @xmath126 .",
    "intuitively , houses occurring early in this ordering are the most threatened by the other agents at the time point when agent 1 comes to position @xmath120 .",
    "the following definition takes into account that the eating start times of later houses may change depending on agent 1 s ordering of earlier houses .",
    "a preference @xmath113 for @xmath87 is _ stingy _ if it is a no-@xmath48 dl best response for agent 1 on @xmath87 , and for every @xmath127 , @xmath128 is the first house in the stingy ordering for this position such that there exists a dl best response starting with @xmath129 .",
    "we note that , due to lemma [ lem : eq - ass ] , there is a unique stingy preference for each @xmath87 .",
    "consider the following assignment problem .",
    "@xmath130 the preferences @xmath131 and @xmath132 are both no-@xmath48 dl best responses for agent 1 with respect to @xmath133 , allocating @xmath134 to agent 1 . when running the ps rule with @xmath51 as the preference list",
    ", @xmath135 s eating start time comes first among @xmath136 . however , there is no dl best response for @xmath133 starting with @xmath137 .",
    "the next house in the stingy ordering is @xmath47 .",
    "the preference @xmath131 is the stingy preference for @xmath133 .",
    "the next lemma shows that when agent 1 receives a house partially ( a fraction different from 0 and 1 ) in a dl best response , a stingy preference would not order a less preferred house before that house .",
    "[ lem : before - half ] let @xmath138 be a stingy preference for @xmath87 .",
    "suppose there is a @xmath139 such that @xmath140 .",
    "then , @xmath141 , where @xmath142 .",
    "the next lemma shows how the houses allocated completely to agent 1 are ordered in a stingy preference .",
    "[ lem : ones - same - order ] let @xmath113 be a stingy preference for @xmath87 . if @xmath143 are two houses such that @xmath144 , with @xmath145 , then either the eating start time of @xmath20 is smaller than @xmath146 s eating start time when agent 1 reports @xmath147 , or it is the same and @xmath148 .",
    "suppose not .",
    "but then , @xmath113 is not stingy since swapping @xmath20 and @xmath146 in @xmath113 gives the same fractional allocation to agent 1 .",
    "we now show that when iterating from a set of houses @xmath117 to @xmath87 , the previous solution can be reused up to the last house that agent 1 receives partially .",
    "[ lem : same - prefix ] let @xmath115 and @xmath113 be stingy preferences for @xmath117 and @xmath87 , respectively .",
    "suppose there is a @xmath149 such that @xmath150 .",
    "then the prefixes of @xmath115 and @xmath113 coincide up to @xmath32 .",
    "we are now ready to describe how to obtain @xmath113 from @xmath115 .",
    "see algorithm  [ algo : dl - br ] for the pseudocode .",
    "the subroutine * * est**@xmath88 executes the ps rule for @xmath88 and for each item , records the first time point where some agent starts eating it .",
    "it returns the eating start times @xmath151 for each house @xmath28 .",
    "let @xmath22 be the last position in @xmath115 such that the house @xmath152 is partially allocated to agent 1 . in case agent 1",
    "receives no house partially , set @xmath153 and interpret @xmath152 as an imaginary house before the first house of @xmath115 . by lemma [ lem : same - prefix ]",
    ", we have that @xmath154 for all @xmath155 . by lemma [ lem : eq - ass ]",
    ", we have that the fractional assignment resulting from @xmath113 must wholly allocate all houses @xmath156 to agent 1 , and allocate a share of @xmath48 to all houses in @xmath157 .",
    "it remains to find the right ordering for @xmath158 . by lemmas [ lem :",
    "before - half ] and [ lem : ones - same - order ] , the prefixes of @xmath115 and @xmath113 coincide up to @xmath32 .",
    "we will describe in the next paragraph how to determine the position @xmath23 where @xmath118 should be inserted .",
    "having determined this position one may then need to re - order the subsequent houses .",
    "this is because inserting @xmath118 in the list may change the eating start times of the subsequent houses .",
    "this leads us to the following insertion procedure .",
    "the list @xmath159 obtained from @xmath115 by inserting @xmath118 at position @xmath23 , with @xmath160 , is determined as follows .",
    "start with @xmath161 . while @xmath162 , we append to the end of @xmath159 the first house among @xmath163 in the stingy ordering for this position . after the while - loop terminates , run the ps rule for the resulting list @xmath159 . in case",
    "we obtain that @xmath164 , we remove @xmath118 again from this list ( and actually obtain @xmath165 ) .",
    "the position @xmath23 where @xmath118 is inserted is determined as follows . start with @xmath166 .",
    "we have an array @xmath167 keeping track of whether the lists @xmath168 produce a worse outcome for agent 1 than the list @xmath115 .",
    "set @xmath101:=\\mathsf{true}$ ] .",
    "as long as the list @xmath113 has not been determined , proceed as follows .",
    "obtain @xmath159 from @xmath115 by inserting @xmath118 at position @xmath23 , as described earlier .",
    "consider the allocation of agent 1 when he reports @xmath159 .",
    "if this allocation is not the same for the houses in @xmath117 as when reporting @xmath115 , then set @xmath103 : = \\mathsf{true}$ ] , otherwise set @xmath103 : = \\mathsf{false}$ ] . if @xmath103 $ ] , then increment @xmath23",
    "this is because , by lemma [ lem : eq - ass ] , this preference would not be a dl best response with respect to @xmath87 .",
    "otherwise , if @xmath169 , then we can determine @xmath118 s position . if @xmath170 $ ] , then set @xmath171 , otherwise set @xmath172 .",
    "this position for @xmath118 is optimal since moving @xmath118 later in the list would decrease its share to agent 1 .",
    "otherwise , we have that @xmath103 = \\mathsf{false}$ ] and @xmath173 .",
    "this will be the share agent 1 receives of @xmath118 .",
    "if @xmath174 , then set @xmath175 . otherwise ( @xmath176 ) , it still remains to check whether the current position for @xmath118 gives a stingy preference .",
    "for this , run the ps rule with the preference @xmath177 for agent 1 . if @xmath118 s eating start time is smaller than the eating start time of each house @xmath178 with @xmath179 , then set @xmath171 , otherwise increment @xmath23 .",
    "thus , given @xmath115 , the preference @xmath113 can be computed by executing the ps rule @xmath180 times .",
    "the dl best response computed by the algorithm is @xmath181 . since the ps rule can be implemented to run in linear time @xmath182 , the running time of this dl best response algorithm is @xmath183 .",
    "[ th : dlbr - in - p ] dl - br can be solved in @xmath183 time .",
    "consider the following instance .",
    "@xmath184 after having computed @xmath185 , the algorithm is now to consider @xmath186 . since @xmath187",
    ", the algorithm first considers @xmath188 .",
    "note that @xmath47 and @xmath45 have been swapped with respect to @xmath189 since agent 2 starts eating @xmath45 before agent 3 starts eating @xmath47 when agent 1 reports the preference list consisting of only @xmath51 .",
    "it turns out that @xmath190 .",
    "thus , @xmath191 = \\textsf{false}$ ] .",
    "since @xmath51 does not come first in the stingy ordering , the algorithm needs to verify whether moving @xmath51 later will still give a dl best response with respect to @xmath186 .",
    "it then considers @xmath192 .",
    "however , this allocates only half of @xmath51 to agent 1 , implying @xmath193 = \\mathsf{true}$ ] . since @xmath191 = \\mathsf{false}$ ]",
    ", the algorithm sets @xmath194 .",
    "the dl best response computed by the algorithm is @xmath195 .",
    "we note that a dl best response is also an sd best response .",
    "one may wonder whether an algorithm to compute the dl best response also provides us with an algorithm to compute an eu best response .",
    "however , a dl best response may not be an eu best response for three or more agents .",
    "consider the preference profile in example  [ example : ps ] . since the number of houses is equal to",
    "the number of agents , reporting the truthful preference is a dl best response  @xcite .",
    "however , we have shown a different preference for agent 1 where he may obtain higher utility .",
    "in this section , we consider the problem of expected utility best response .",
    "we first show that for the case of two agents , an eu best response can be computed in linear time .",
    "the result hinges on a close connection that we identify between ps and discrete allocation of objects to agents via _",
    "sequential allocation_. in the sequential allocation setting @xmath196 , there is an agent set @xmath197 , an object set @xmath198 , a preference profile @xmath199 that specifies for each agent @xmath14 his preferences @xmath61 over @xmath200 , and a policy @xmath201 .",
    "the sequential allocation rule works as follows .",
    "starting from @xmath202 to @xmath203 , agent @xmath204 gets his most preferred object that is not yet allocated .",
    "if no unallocated object is on the preference list of the agent , then the agent does not get any object when his turn comes .",
    "the assignment as a result of sequential allocation is denoted by @xmath205 .",
    "we will restrict ourselves to the case where @xmath206 and will only consider the alternating policy @xmath207 in which agent @xmath46 starts first and then the agents keep alternating .",
    "the sequential allocation setting was introduced by  @xcite where they showed that the best response can be computed in linear time when @xmath208 and the policy is the alternating sequence .",
    "recently , @xcite generalized their result to the case of any number of agents , any policy , and where the manipulator may be indifferent between objects .",
    "we highlight a close connection between sequential allocation and ps and thereby between allocation mechanisms for indivisible and divisible houses . for the random assignment setting @xmath209 , the _ half - house reduction _",
    "gives us the sequential allocation setting @xmath210 . in the reduction , each house @xmath15",
    "is cloned so that we have two half - houses @xmath211 and @xmath212 for each house @xmath20 : @xmath213 .",
    "both agents have preferences over half - houses that are consistent with their preferences over houses and for each house , each agent prefers the first half - house slightly more than the second half - house : if @xmath214 , then @xmath215 . we show that for @xmath216 , the assignment under ps is ` essentially ' the same as the assignment obtained by applying sequential allocation to the setting resulting from the half - house reduction :    [ remark : half - house ] the assignment @xmath217 and the assignment @xmath218 are related as follows : @xmath219 .",
    "we note that in the half - house reduction , each preference list @xmath61 satisfies the _ consecutivity property _ : half - houses corresponding to the same house are placed consecutively in the preference list .",
    "we will use the consecutivity property in our argument .",
    "[ th:2agents - eubr - in - p ] for the case of two agents , an eu best response can be computed in linear time .",
    "we consider the eu best response problem for ps where the manipulator , agent @xmath46 , has preferences @xmath220 .",
    "the main idea is to reduce the eu best response problem @xmath209 for ps to the eu best response problem @xmath221 for sequential allocation .",
    "the reduction is a slight modification of the half - house reduction with the difference that agent @xmath46 is indifferent between two half - houses corresponding to the same house .",
    "the object set is @xmath213 . in @xmath222 ,",
    "both agents have preferences over half - houses that are consistent with their preferences over houses .",
    "we will assume without loss of generality that agent @xmath43 prefers the first half - house slightly more than the second half - house .",
    "agent @xmath46 is indifferent between any two half - houses corresponding to the same house : @xmath223 for all @xmath224 but will be required to report strict preferences . when we consider sequential allocation , we will view it in rounds so that in each round , first agent @xmath46 picks a most preferred available house and then agent @xmath43 picks a most preferred available house .    in the algorithm by @xcite ,",
    "when agents have strict preferences , it is checked whether the manipulator ( agent @xmath46 ) can get different target sets of objects . in the algorithm ,",
    "only a linear number of target sets need to be considered .",
    "given target set @xmath225 which is restricted to objects from @xmath226 , we can compute target set @xmath227 as follows : check whether target set @xmath228 can be achieved or not . @xmath229 if @xmath228 can be achieved and @xmath230 otherwise .",
    "@xmath231 is then the most preferred allocation that agent @xmath46 achieves and the allocation is unique .",
    "when the manipulator is indifferent among objects , @xcite showed that their algorithm can be easily modified as follows : agent @xmath46 considers a linear order instead of his actual weak order where the linear order is achieved by breaking ties between the indifferent objects in the same order as the preference of agent @xmath43 . based on this insight ,",
    "observe that both agents will pick @xmath211 before @xmath212 for any @xmath224 if they report truthfully .",
    "we first show that there exists a best response of agent @xmath46 in the sequential allocation setting @xmath232 that satisfies the consecutivity property .",
    "if agent @xmath46 either gets both half - houses corresponding to a house or none of them , then his optimal preference report for sequential allocation trivially satisfies the consecutivity property . if this is not the case , then let us consider the most preferred house @xmath20 for which agent @xmath46 gets one of the corresponding half - houses but not the other .",
    "if agent @xmath46 only gets @xmath211 but not @xmath212 , this means that in his best response for houses restricted to @xmath233 , @xmath212 was already taken by agent @xmath43 in a round in which agent @xmath46 picked some other object .",
    "then agent @xmath46 can eventually insert @xmath212 immediately after @xmath211 in his best response preference knowing well that he will not get @xmath212 .",
    "thus , the best response for sequential allocation can be modified so that it satisfies the consecutivity property and yields the same optimal allocation .",
    "now consider the case where agent @xmath43 gets @xmath211 but agent @xmath46 gets @xmath212 .",
    "then this means that agent @xmath46 can not get @xmath211 in his best response when his preference is restricted only to houses from the set @xmath234 .",
    "therefore , agent @xmath46 can still insert @xmath211 eventually just before @xmath212 in his best response so that the consecutivity property is satisfied and the allocation does not change even though agent @xmath46 does not get @xmath211 in his best response .",
    "we now show that the best response of agent @xmath46 in the sequential allocation setting @xmath232 can be used to compute the best response of agent @xmath46 in @xmath40 under ps .",
    "let @xmath235 be the expected utility for agent @xmath46 under his best response @xmath236 in the ps setting .",
    "the best response @xmath236 corresponds to @xmath237 over the set of half - houses . by remark  [ remark : half - house ] ,",
    "agent @xmath46 achieves essentially the same allocation and hence the same utility @xmath235 in the sequential allocation setting if he submits preference @xmath237 .",
    "conversely , if agent @xmath46 achieves utility @xmath235 in the sequential allocation setting via a preference report , then he achieves at least as much utility by reporting his optimal preference @xmath237 constructed via the algorithm of @xcite .",
    "hence , the preference @xmath237 can be modified as shown above so that it satisfies the consecutivity property . in this case",
    ", there exists a preference @xmath236 over @xmath10 which is consistent with the preferences @xmath237 over @xmath200 .",
    "if agent @xmath46 reports @xmath236 , then he gets essentially the same allocation as @xmath238 and thus gets utility @xmath235 .    the best response algorithm of @xcite returns the same optimal preference report for all cardinal utilities consistent with the ordinal preference of the manipulator .",
    "next , we point out that for the case of two agents and the ps rule , a dl best response and an eu best response are equivalent .    for the case of two agents and the ps rule , a dl best",
    "response is an eu best response and an eu best response is a dl best response .    for two agents ,",
    "ps assigns probabilities from the set @xmath239 .",
    "hence dl preferences can be represented by eu preferences where the utilities are exponential : the utility of a more preferred house is twice the utility of the next most preferred house .",
    "hence a response is a dl best response if it is an eu best response for exponential utilities .",
    "on the other hand we have shown that for two agents and the ps rule , an eu best response is the same for any utilities compatible with the preferences .",
    "hence for two agents , an eu best response for any utilities is the same as the eu best response for exponential utilities which in turn is the same as a dl best response .",
    "we show that an eu best response is np - hard to compute .",
    "the result contrasts with theorem  [ th : dlbr - in - p ] which states that a dl best response can be computed in polynomial time .",
    "[ th : eubr - nphard ] eu - br is np - hard .    to show hardness",
    "we show that the following problem is np - complete : given an assignment setting as well as a utility function @xmath240 specifying the utility of each house for the manipulator ( agent @xmath46 ) and a target utility @xmath241 , can the manipulator specify preferences such that the utility for his allocation under the ps rule is at least @xmath241 ?",
    "we reduce from a restricted np - hard version of 3sat where each literal appears exactly twice in the formula .",
    "given such a 3sat instance @xmath242 where @xmath243 is the set of variables and @xmath244 the set of clauses , we build an instance of eu - br where the manipulator can obtain utility @xmath245 if and only if the formula is satisfiable . at a high level , we will create an instance of the assignment problem which can be conceptualized as 18 ( mostly ) disjoint parts that we index by @xmath246 .",
    "we will describe the main ( first ) part in detail and explain how it is duplicated to create the other 17 parts .",
    "each of the 18 parts is divided up into @xmath4 choice rounds which we index from @xmath46 to @xmath4 . for each part",
    "there is an additional _ clause _ round .",
    "the 18 parts are linked by a special set of houses which allow us to synchronize the timing of the manipulator with respect to all the other agents .",
    "the set of agents is @xmath247 where the manipulator is agent 1 , 17 ` dummy ' manipulators for the 17 copies of the main part , and two agents for each positive and negative literal in the formula for each of the 18 parts , @xmath248 .",
    "the set of houses is @xmath249 where @xmath250 is the set of slowdown houses that will be used to control the timing of the manipulator s decisions .",
    "note that there is only one slowdown house per round and these houses are shared between all @xmath251 parts .",
    "@xmath252 is a set of houses consisting of one house for each positive and negative literal in the formula for each of the @xmath4 rounds ; @xmath253 is a triplet of houses for each clause in the formula ; @xmath254 is the prize house for the manipulator ; and @xmath255 is the set of consolation prize houses for the dummy manipulators .",
    "we will describe how to construct the preferences for the main part which contains the manipulator , agent 1 , and then explain the small differences necessary to create the 17 other duplicate instances .",
    "example  [ example : sat ] gives an illustration of the main part of a small instance and may be helpful for reference during the discussion .",
    "[ [ main - part ] ] main part + + + + + + + + +    we will describe the rounds by declaring which houses are eaten in them and show how the preference lists of the agents are constructed . each agent s preference list can be described has having a _ head _ and a _ tail_. to ease the description , we will omit the round index @xmath256 in the variable names . intuitively , the head consists of the houses that the agent will consume during the running of the ps algorithm while the tail consists of houses that will not be eaten .",
    "when we describe how we add houses to an agent s preference list , we will say _ append the house(s ) to the head _ to mean add this set of houses to the end of the head of the preference list , behind those that have been placed before .",
    "we say _ append the house(s ) to the tail _ of the preferences to mean place them last amongst all houses which have been placed in the preferences so far .    in each choice round @xmath257 , houses @xmath258 and @xmath259 for each @xmath260 will be eaten .",
    "append those houses to the head of the preferences of the agents corresponding to the same literal and append them to the tail of the preferences of agents associated to a different literal .",
    "append houses @xmath261 and @xmath262 to the head of the manipulator s preferences ( the order in which we add them in is not important ) . houses",
    "@xmath258 and @xmath259 where @xmath263 are appended to the tail of the manipulator s preferences . in each choice round except the last one , slowdown house @xmath264 will be eaten .",
    "we append it to the tail of the preferences of the literal agents , and to the head of the preferences of the manipulator agent ( after the literal houses we added for this round ) .",
    "finally we describe the clause round . for each clause",
    ", we have the 3 houses @xmath265 .",
    "we append these 3 houses to the head of the preferences of exactly 1 agent corresponding to the negation of each of the clause @xmath266 s literals .",
    "if an agent has already had houses added to his preferences in the clause round , we add them to the other agent corresponding to the same literal ( since a literal appears only twice in the formula , this ensures each agent has only one triplet of houses appended to the head of their preferences ) .",
    "the prize house @xmath254 is appended to the head of both the manipulator s and the literal agents preferences ( after the clause houses we just added to the literal agents ) .",
    "[ [ duplicate - parts ] ] duplicate parts + + + + + + + + + + + + + + +    for each of the duplicate parts , @xmath267 , we will describe the necessary modifications . for clarity",
    "we call the copy of the prize house in the duplicated parts of the instance consolation prize houses denoted @xmath268 for each @xmath269 . recall that the set of slowdown houses @xmath270 is shared between all the parts ; thus all the parallel constructions ` merge ' at the set of slowdown houses .",
    "we are left with the fact that houses from a given duplicate part @xmath271 of the instance have not been added to the preferences of agents from all other parts of the instance .",
    "we can append all these houses to the tail of the preferences of the agents outside this part in any order .",
    "[ [ the - manipulators - utilities ] ] the manipulator s utilities + + + + + + + + + + + + + + + + + + + + + + + + + + +    we will give the manipulator s utility in terms of a number @xmath272 to be fixed later .",
    "the prize house has utility 1 .",
    "the literal houses that are appended to the head of the manipulator s preferences during round @xmath11 ( @xmath273 and @xmath274 ) have utility @xmath275 and @xmath276 where @xmath277 is @xmath278 .",
    "the slowdown houses have utility @xmath279 .",
    "all other houses have negligible utility . by negligible",
    "we mean that adding up all their combined utilities will yield less than @xmath280 utility .",
    "this can be done since we have a polynomial number of houses and we can make the utilities exponentially small .",
    "based on these utilities we can now derive a target value for @xmath241 and analyse the behaviour that the manipulator must have to reach that target .",
    "the manipulator may only start eating a new house once the house he is currently eating is no longer available .",
    "this means that if he starts eating a house , he is ` stuck ' eating said house for a certain amount of time .",
    "we now constrain the manipulator s possibilities by showing that by diverging from the literal and slowdown houses he should be eating according to his preferences , he will commit to a house for which he has exponentially less utility for an amount of time which is at least some constant . by setting @xmath272 to be large enough",
    ", we can ensure that this loss in utility is irrecuperable .",
    "we say the manipulator _ behaves as prescribed _ if he declares preferences which correspond to his true preferences up to permutations of the literals associated with one same variable .",
    "let @xmath281 be the smallest amount of time the manipulator will eat a new house if he has behaved as prescribed in all his previous choices .",
    "the next lemma shows that @xmath282 is independent of the instance size .",
    "[ lemma : sametime ] @xmath283 .",
    "as the algorithm progresses , we may group the agents in a constant number of groups based on the extent they have eaten their current house when the manipulator finishes consuming one of his houses and the number of agents eating that house .",
    "each group is associated with a value , which corresponds to the amount of time the manipulator would have to spend if he decided to eat a house currently being eaten by members of that group . by showing that the number of these groups is constant , and therefore so is the number of values ,",
    "we show that @xmath282 is a constant .",
    "the groups can be characterized by the type of house that the members are eating . at any point in the algorithm",
    "we say that a literal has been chosen by the manipulator if the round @xmath257 is greater than the index @xmath11 of that literal , @xmath284 .",
    "we say that a literal is untouched by the manipulator for @xmath285 .",
    "the groups are defined as follows :    agents eating houses being eaten by an agent corresponding to a literal which has been chosen by the manipulator    agents eating houses being eaten by an agent corresponding to a literal which is the negation of one chosen by the manipulator    agents eating houses corresponding to literals untouched by the manipulator    agents eating houses being eaten by dummy manipulators .    at the start of any round @xmath11 , eating a house from group @xmath120",
    "would take @xmath286 time .",
    "the manipulator then finishes eating the first literal , and eating a house from group @xmath120 would take @xmath287 time . after eating the second literal , eating a house from group @xmath120 would take @xmath288 time .",
    "finally the manipulator eats the slowdown houses and we have corresponding value @xmath289 .",
    "we will now show that the values for @xmath290 are the same for all rounds . to show this we simply need to make sure that all the agents stay ` synchronised ' .",
    "it takes the manipulator 0.5 units of time to finish the current round ( @xmath291 on the first literal , @xmath292 on the second , and @xmath293 on the slowdown house ) .",
    "let us now show that it also takes 0.5 units of time for every other group to get to the same point in the next round .",
    "the exception are the agents eating a house that is also being eaten by the manipulator or some dummy in that round , which fall out of sync with their previous group ( group @xmath44 or @xmath294 ) and transit either to group @xmath46 or @xmath43 . for groups 1 - 3 , all these agents pair up and have @xmath46 house per round .",
    "it therefore takes them each 0.5 time to eat it . for group 4 ,",
    "the dummy manipulators eat a first literal ( @xmath291 ) then a second ( @xmath292 ) and finally all 18 manipulators join together and eat the slowdown houses in the round , which takes them time @xmath293 .",
    "this adds up to @xmath295 .",
    "there is value for @xmath296 such that the manipulator behaves as prescribed .    in the clause",
    "round all agents corresponding to literals chosen by the manipulator start the round at the same time as the manipulator , whilst agents corresponding to negation of the choice of the manipulator are in advance and start the round @xmath292 units of time before the manipulator .    in lemma  [ lemma : sametime ]",
    "we argued that the agents took the same amount of time to finish a round .",
    "the exception to this is the last round where the manipulator does not eat any slowdown houses and therefore finishes the round at the same time as group @xmath46 .",
    "group @xmath43 finishes the round @xmath292 before group @xmath46 since the manipulator spent @xmath291 time eating a house with them whereas he spent @xmath292 time eating a house with agents from group 2 .",
    "this results in a @xmath297 delay between the two .",
    "the manipulator s choice corresponds to an assignment of the variables in the sat formula .",
    "if the manipulator chose to eat house @xmath261 before @xmath262 then this corresponds to setting @xmath298 to true ( and vice versa ) .",
    "thus , in each round the manipulator choses an assignment for a variable in the formula .",
    "the target utility @xmath241 is the sum of @xmath299 of the utility of @xmath261 and@xmath293 of the utility of the slowdown house @xmath264 ( except in the last round ) for each round @xmath257 and an extra @xmath300 .    in the clause round ,",
    "the manipulator must eat the prize house before any other agent to reach the target utility @xmath241 .",
    "@xmath301 is satisfiable iff the manipulator can reach the target utility @xmath241 .",
    "( @xmath302 ) we have set @xmath241 so that if the manipulator declared a prescribed preference profile , he will require an extra @xmath303 utility to reach @xmath241 . if all clauses are satisfied , at most 2 of the agents eating the houses corresponding to a clause will be in advance and the manipulator will have @xmath300 units of time to eat the prize house alone .",
    "the manipulator will always have @xmath304 units of time to eat the prize house alone while the other literal agents are eating the corresponding clause houses . in the worst case , 2 agents are in advance for any clause by @xmath292 , units of time , which means that they , along with the third agent in the clause , will finish their triplet of clause houses after @xmath305 units of time , at which time all three agents will begin eating the prize house .",
    "this leaves the manipulator to eat alone for @xmath306 extra time thus ensuring him extra utility @xmath307 .",
    "+ ( @xmath308 ) if the truth assignment causes a clause to be unsatisfied , the agents corresponding to the negation of the literal in the clause ( and therefore eating the clause houses corresponding to the clause ) will all be in advance and will finish eating the clause houses before the manipulator has eaten @xmath300 of the prize house .",
    "if all 3 agents are in advance , they will finish eating the clause houses @xmath309 units of time after the manipulator has started eating the prize house .",
    "therefore for @xmath310 of the prize house there are at least 3 extra agents eating the prize house .",
    "since this makes at least 4 agents eating @xmath310 of the prize house , the manipulator will get at most @xmath311 instead of the required @xmath306 of the prize house after he has eaten a share of @xmath309 .",
    "since the prize house is the only remaining house with non - negligible utility , and we have made @xmath272 large enough , he can not compensate this loss of utility by getting more of some other house .",
    "the reduction can be used to show that even checking whether there exists any report that yields more utility than the truthful report is np - hard .",
    "[ example : sat ] we illustrate the reduction in the proof of theorem  [ th : eubr - nphard ] .",
    "for the following sat formula , the table below illustrates the preference profile for the agents in the main part .",
    "houses not shown in the preferences are never eaten by the agents and come later in the preference lists .",
    "[ table : psreduction ]",
    "we conducted a detailed computational analysis of strategic aspects of the ps rule .",
    "since ps performs better than rsd in terms of efficiency and envy - freeness , the only drawback it has in comparison with rsd is its manipulability .",
    "we have shown that although ps is manipulable , finding an optimal manipulation is a complex task for an agent even if he has complete knowledge about the preferences of other agents .",
    "there is scope to conduct detailed experiments on the pecentage of instances that are manipulable and the extent and effects of manipulation .",
    "initial experiments show that manipulation is often possible and more often decreases social welfare than increases it , though the overall effect is small .",
    "as the number of houses relative to the number of agents grows , the opportunities to manipulate increase , maximizing around 99%",
    ". it will be interesting to extend our results to the extension of ps for indifferences  @xcite . finally , studying coalitional manipulations and a deeper analysis of nash dynamics are other interesting directions .",
    "nicta is funded by the australian government through the department of communications and the australian research council through the ict centre of excellence program .",
    "serge gaspers is the recipient of an australian research council discovery early career researcher award ( project number de120101761 ) .",
    "h.  aziz and p.  stursberg .",
    "a generalization of probabilistic serial to randomized social choice . in c.  e. brodley and p.  stone , editors , _ proceedings of the 28th aaai conference on artificial intelligence ( aaai ) _ , pages 559565 .",
    "aaai press , 2014 .",
    "h.  aziz , f.  brandt , and p.  stursberg .",
    "on popular random assignments . in b.  vcking , editor , _ proceedings of the 6th international symposium on algorithmic game theory ( sagt ) _ , volume 8146 of _ lecture notes in computer science ( lncs ) _ , pages 183194 .",
    "springer - verlag , 2013 .",
    "h.  aziz , s.  gaspers , s.  mackenzie , and t.  walsh .",
    "fair assignment of indivisible objects under ordinal preferences . in _ proceedings of the 13th international conference on autonomous agents and multi - agent systems ( aamas )",
    "_ , pages 13051312 , 2014 ."
  ],
  "abstract_text": [
    "<S> the probabilistic serial ( ps ) rule is one of the most prominent randomized rules for the assignment problem . it is well - known for its superior fairness and welfare properties . however , ps is not immune to manipulative behaviour by the agents . </S>",
    "<S> we initiate the study of the computational complexity of an agent manipulating the ps rule . </S>",
    "<S> we show that computing an expected utility better response is np - hard . </S>",
    "<S> on the other hand , we present a polynomial - time algorithm to compute a lexicographic best response . for the case of two agents , </S>",
    "<S> we show that even an expected utility best response can be computed in polynomial time . </S>",
    "<S> our result for the case of two agents relies on an interesting connection with sequential allocation of discrete objects .    </S>",
    "<S> assignment problem , probabilistic serial mechanism , fair allocation    _ jel _ : c62 , c63 , and c78 </S>"
  ]
}
{
  "article_text": [
    "ip traffic matrix determines the amount of traffic transferred per second between any ingress - egress pair of routers .",
    "it is essential for ip network operation and management , including tasks like traffic engineering , routing protocol configuration , security and reliability , capacity planning , and fault diagnosis .",
    "the traffic matrix is however not readily available in legacy ip networks .",
    "the measuring of all flows directly is not practical , as it requires a significant amount of monitoring equipment and network - wide configuration efforts  @xcite .",
    "therefore , the traffic matrix is usually _ estimated _ or _ sampled _ , both leading to inaccurate results that may adversely impact network operations , due to faulty configurations based on uncertain traffic statistics .",
    "throughput statistics on a per - link basis ( commonly referred to as _ link loads _ ) are easily available from all network nodes via simple network management protocol ( snmp ) requests and are typically monitored by network operators .",
    "the mathematical relation of the three parameters link load , routing , and traffic matrix is @xmath0 , where the link load of the @xmath1 links in the network is the ( given ) column vector @xmath2 , the demand of all @xmath3 ingress - egress ( ie ) flows is the ( sought ) row vector @xmath4 , and the routing is represented by the ( given ) binary @xmath5 matrix @xmath6 , where @xmath7 is 1 if flow @xmath8 is routed via link @xmath9 , and 0 otherwise . to put it more",
    "intuitively , the load on a link is the sum of all the ie flows that traverse it . due to the fact that link loads represent _ aggregated _ flows with their number being ( depending on the topology ) easily an order of magnitude below the number of ie flows , an attempt to solve the above linear system for @xmath10 results in a heavily under - determined linear system .",
    "the _ estimation _ of the traffic matrix based on this statistical data means the search for a _ good _ solution of the described problem , which however typically exhibits severe estimation errors  @xcite .",
    "traditionally , network operators used to deal with the problem either by significant over - provisioning of network resources ( which renders the exact knowledge of the traffic matrix unnecessary ) , or by installing expensive monitoring equipment .",
    "however , the advent of software - defined networking ( sdn ) involves a new and powerful mechanism for network monitoring , as sdn - enabled devices provide additional byte counters for all individual entries in their forwarding tables .",
    "we assume that this mechanism will solve the traffic matrix problem once and for all in the long run .",
    "today , however , ip networks are likely to be implemented with a hybrid control plane deploying a distributed routing protocol like ospf and the centralized paradigm of sdn in parallel . in hybrid networks , the known and difficult problem to generate the ip traffic matrix persists , as the required sdn byte counters may not be sufficiently implemented ( or even not at all  @xcite ) , or the deployed sdn nodes may be too few , or not adequately located in the network .",
    "this paper examines a new approach to solve the ip traffic matrix and the related monitoring problem in networks with a hybrid sdn / ospf control plane .",
    "we propose to augment the sdn - based traffic statistics with snmp - based throughput measurements of the absent flows , obtained by temporarily offloading them on ip backup links .",
    "we address implementation aspects of the required hybrid monitoring infrastructure and discuss the timing issues of the measurements based on hands - on experiences in our lab .",
    "we explain the technical background and possible methodical pitfalls , outline the design of our framework , discuss our practical experiences with openflow- and link - based measurements in our testbed , and address the conformity of our ideas with the novel paradigms in network management such as network function virtualization ( nfv ) .",
    "we finally provide an ilp model and a greedy heuristic to determine the optimal measurement locations for sdn nodes and backup links , and we show in our performance evaluation that there is a near linear trade - off between both resources .",
    "we conclude from our results that a hybrid control plane with only a few sdn nodes can provide the complete traffic matrix in case multiple backup links are available for measurements .",
    "the rest of the paper is organized as follows : section  [ relatedwork - section ] discusses the related work and our contribution .",
    "section  [ arch - section ] presents the assumed ip network architecture , and section  [ implementation ] explains our per - flow measurement technique , implementation and virtualization aspects , and our practical measurement experiences in a testbed .",
    "we furthermore present an analytical model for backup link and sdn node location optimization and a fast heuristic in section  [ math - section ] .",
    "finally , section  [ performance - section ] presents the performance study and section  [ conclusion - section ] concludes the paper .",
    "there are multiple traffic matrix estimation techniques that use link loads and routing information , generally referred to as _ network tomography_. since the related linear system is ill - posed ( and thus has multiple solutions ) , the accuracy of network tomography methods differ based on the statistical assumptions they make . one typical approach is to assume a certain traffic distribution function .",
    "another method is to derive a solution with higher order statistics of the link loads , linear programming , or quadratic programming  @xcite .",
    "the _ gravity model _",
    "@xcite is another traffic matrix estimation technique initially developed for the research on road traffic . here",
    ", the traffic matrix is derived only from the total traffic entering the network at each ingress and the total traffic exiting the network at each egress , whereas the interior network links and routing information are not considered .",
    "the gravity model can be used as input to the tomography method , which has been coined as _ tomogravity model _  @xcite .",
    "interested readers are referred to  @xcite for a detailed comparison of different traffic matrix estimation methods for legacy networks .",
    "we note that regardless of the method , all proposed traffic matrix estimations typically exhibit average errors in the range of 10% to 25% with some flow estimate errors above 100%  @xcite .",
    "another method to to obtain additional measurements is to periodically reconfigure the routing in the network .",
    "paper  @xcite proposes rerouting by altering the ip routing protocol s link metrics in order to create an additional linear system @xmath11 ( containing different @xmath6 and @xmath12 ) .",
    "this new linear system can be combined with the original one to increase the rank .",
    "this method is performed repeatedly until the desired rank is achieved .",
    "the authors in  @xcite propose to route flows over fixed network monitor nodes .",
    "please note that our approach does not require to alter the routing .",
    "the adoption of sdn introduces additional traffic statistics that can be used to improve the estimation of the traffic matrix .",
    "@xcite proposes to use the sdn - based measurements in addition to link counters to increase the rank of the estimation problem in data center networks . however , despite the assumption of a complete sdn deployment , the paper reasons that measuring every flow in the network is too costly .",
    "consequently , a large - scale flow aggregation for the flow tables maybe required , which in turn results in a yet ( not so ) underconstrained linear system .",
    "paper @xcite provides for the same purpose two efficient algorithms to determine measurement rules , but for hybrid sdn networks , assuming that tcams in the sdn switches do not suffice for all required monitoring actions .",
    "contrary to our approach , the current papers do not attempt to optimize sdn node placement to improve traffic monitoring .",
    "the deployment of ip links between _ all _ ingress and egress router pairs ( a so called full mesh topology ) would allow the measurement of the complete traffic matrix only with sdnm - based link loads , which however does not scale , as the number of links would increase quadratically with the number of nodes . to address this issue , other standard layer  2 frameworks",
    "can be deployed for this purpose .",
    "for instance , mpls could use lsps , pbb - te can provision e - lines ; even with the traditional ethernet , vlans could be configured and used for direct measurements of ie flows .",
    "let us consider the case of mpls as an example ; here , the operator can set up an lsp between a pair of routers and install a packet counter on that lsp . in a network with @xmath13 nodes , this would require the setup of @xmath14 lsps , and each lsp setup would involve the configuration of all routers along its routing path .",
    "in addition to this significant configuration and management overhead , there is an issue of how widely spread the mentioned frameworks are .",
    "for instance , mpls  despite its maturity  is used in only 7% of all autonomous systems in the internet and packet forwarding in the internet backbone is still primarily based on pure ip  @xcite . likewise with e - lines and vlans , the configuration overhead remains a concern .",
    "the problem of choosing the best nodes to perform flow monitoring has already been studied in the context of cisco s ios netflow feature .",
    "this traffic sampling method has impact on the cpu load in the router , which can be significant  @xcite , and netflow must be available on the routers .",
    "this is not generally the case , especially in carrier networks , where multiple vendors equipment is used .",
    "the authors of  @xcite point out that the accuracy of traffic analysis based on flow measurements depend on the sampling rate and the number and placement of monitors , and present methods to jointly optimize the problem .",
    "a straightforward approach to measure the entire traffic matrix is to monitor traffic on all ingress routers monitoring ports with cheap off - the - shelf host .",
    "a central server can then collect the data along with the routing information from all routers .",
    "this solution does however not scale to current transmission speeds in core networks with the typical 100  gbit / s ports .",
    "there are systems on the market that do scale to core network dimensions , like hp s openview dynamic netvalue analyzer  @xcite .",
    "however , such systems have to be purchased and maintained , and due to their involved high capital and operational expenditures , over - provisioning of network capacity till the point where having exact knowledge of the traffic matrix becomes unnecessary is still considered as the easiest and most cost effective solution by the majority of network operators .    in the case",
    "openflow routers are deployed in the ip network , it is indeed possible to measure an ie flow directly on the ingress router .",
    "the network operator can identify all flow table entries for a specific egress router at the ingress router and use the according byte counters for this monitoring purpose .",
    "however , the required throughput statistics on a per - flow basis may be implemented insufficiently or even not at all  @xcite .      in this paper ,",
    "we propose to use a separate physical port on a pair of ip routers to be configured as a backup to an ip link .",
    "a backup link in addition to a regular ip link is easy to create and to configure , while it also allows measurements using regular snmp link byte counters , which is vendor - independent and available in every router .",
    "in contrast to sampling , our method _ directly measures _ the ie flows using the snmp link count on the backup link , so that an extrapolation from samples is not necessary . additionally , we provide a solution for networks during the upgrade to sdn , when there are too few sdn nodes deployed , or they may be insufficiently located in the network .    this work is based on our past work where we studied various aspects of hybrid sdn / ospf networking , such as technology migration strategies  @xcite , network optimizations like capacity planning , traffic engineering , fault recovery  @xcite , and fault tolerance  @xcite .",
    "we have proposed to combine hybrid sdn / ospf networking with dynamic optical circuits in  @xcite .",
    "we have also proposed a novel mode of operation for hybrid sdn / ospf networks in  @xcite , where the legacy routing domain is partitioned into subdomains , which allows to some degree to steer the legacy protocol by the central sdn controller .",
    "we proposed in  @xcite to establish optical bypasses to measure ie flows .",
    "we have shown in that work that a relatively small number of strategically placed bypasses in the network allows the measurement of a very high number of flows . at the same time",
    ", we observed that an inappropriate high number of bypasses is necessary to gain the full traffic matrix . in this paper , we extend our approach to any form of backup link in the ip layer and additionally use openflow byte counters from all sdn - enabled devices assuming a hybrid sdn / ospf network architecture , which is novel .",
    "figure  [ arch ] shows the reference network architecture , deploying two kinds of routers : legacy ospf routers ( shown as the blue nodes ) and openflow - enabled sdn routers ( shown as the orange nodes ) . in sdn networks ,",
    "a central controller configures the overall network behavior .",
    "this paradigm is contrary to the legacy ip network control plane , where distributed protocols ( i.e. ospf or is - is ) are used , and each network node is configured by its internal controller based on topological information gathered from routing protocol update packets .",
    "these packets are referred to as link state advertisements ( lsa ) and they are distributed through the entire routing domain with a protocol - inherent flooding mechanism .",
    "sdn , in contrast , allows routers to become simple packet forwarding machines , while all intelligence is implemented in a ( logically ) _ centralized _ controller .",
    "we assume that the openflow protocol is used , which is the de facto standard for the communication between the central controller and sdn routers .",
    "each sdn device establishes an individual openflow channel to the central controller , depicted as the orange dashed lines in the figure .    as ospf and sdn",
    "routers are not inherently compatible , a network that uses both types of routers requires some sort of hybrid sdn / ospf control plane .",
    "there are different approaches to inter - operate ospf and sdn , and the simplest version uses backward compatible ( i.e. ospf - enabled ) sdn routers like in  @xcite : here , sdn routers are able to autonomously communicate ospf - conform with neighboring legacy routers .",
    "such hybrid routers generate their basic forwarding tables based on ospf , whereas higher priority rules can be installed by the central sdn controller . however , we assume a different version of hybrid sdn / ospf , where sdn routers are not required to be ospf - enabled , because all routing protocol processing is performed by the central controller .",
    "these sdn routers are simply configured to forward all lsas to the sdn controller over the openflow channel , and the central controller processes the protocol ( possibly with some ospf extension , like shown in the figure , as common open - source controllers do not support legacy routing ) and sends according response packets back to the sdn router ( which in turn forwards it to the originating ospf router ) .",
    "a proof - of - concept implementation of such a hybrid sdn / ospf control plane was demonstrated in  @xcite .",
    "please note that , in contrary to the control plane , there are no incompatibilities between ospf and sdn in the data plane of the ip layer , as ip packet processing depends solely on a router s individual forwarding information base .",
    "our proposed monitoring framework is depicted as the green box in figure  [ arch ] .",
    "the system requests byte counters from the central sdn controller ( via the controller s rest - based northbound api ) and from regular and backup ip links ( via snmp ) .",
    "the ip layer s control plane has to deal with backup links to keep them unused under normal network operation , which requires the assignment of an ospf link cost to the backup link that is larger than the one of the original ip link .",
    "explicit forwarding rules are then created at the ingress router of the backup link to offload specific ie flows onto it .",
    "we only consider the measurement of ie flows that already traverse the said routers in their original ip route .",
    "these flows are separately rerouted by means of consecutive routing policies at the backup link ingress router , thus there is no impact on regular routing .",
    "for every ie flow that we aim to measure on a backup link , we need to define an access control list ( acl ) such that the ie flow in question can be distinguished from the remaining traffic .",
    "please note that acls may become complex due to the fact that ingress / egress routers generally handle a lot of network prefixes .",
    "we afterwards configure a routing policy at the ingress router that appoints the backup link s port for all packets matching the acl . in this way we provide that only packets of that specific ie flow are transmitted over the backup link , such that the snmp link count function can be used for the measurement .",
    "we always use only one routing policy at a time per backup link , which limits the overhead in packet processing . in case a highly utilized link is bypassed for measurements , the use of the backup link itself may affect the traffic volume of the re - routed ie flow due to the _ elasticity _ of tcp connections throughput .",
    "we therefore limit the study to cases of moderately loaded links always safely below the risk of congestion , which is a fair assumption in ip backbone networks .",
    "for our snmp - based measurement scheme to work , it should be noted that the here considered backup links need to be visible in the ip layer . at the same time",
    ", it is known that other backup schemes are common in backbone ip networks , especially those based on layer  2 , which provide sub-50ms protection , but are completely transparent to layer  3 .",
    "an exception from these l2 protection schemes is ethernet link aggregation ( ieee 802.3ad ) that allow yet again for snmp - based measurements , in case its implemented with proprietary aggregation schemes like inactive failover ports or vlan - based quality - of - service mechanisms .",
    "all it basically requires for our scheme to work is the possibility to temporarily separate a flow on an otherwise unused port and an open configuration interface .",
    "the throughput of a link is determined based on consecutive queries of its byte counter , which is accessible with snmp .",
    "this protocol is one of the most prevalent network management standards , developed by the ietf to allow the configuration and monitoring of network elements .",
    "it is defined following a manager / agent principle , where an snmp - enabled network element ( a router ) implements an agent that can configure and monitor the network element and communicate with an snmp manager .",
    "the protocol uses a hierarchical data structure called management information base ( mib ) , which defines the syntax and semantics of the stored data .",
    "its values are referred to as the mib objects , and each object has a unique object identifier ( oid ) .",
    "routers commonly provide a mib object for each port that provides counters for the incoming and outgoing bytes .",
    "the throughput of a link can then simply be calculated as the difference between two consecutive byte counter values divided by the time difference between the two queries .",
    "figure  [ example]a shows a 4-node network to illustrate measurements on a backup link . the topology includes four routers , r1 to r4 , and for the sake of simplicity , we only consider the six ie flows into the downward direction .",
    "the corresponding ill - posed linear system for the traffic matrix of this network has accordingly three rows ( from the three original links ) and six columns ( from the six ie flows ) .",
    "the most beneficial backup link to use is obviously between r2 and r3 , since the original ip link r2-r3 carries the most ie flows ( @xmath15 , @xmath16 , @xmath17 , and @xmath18 ) . as in our example topology",
    "the rank of the linear system needs to be increased by three , it is sufficient here to measure only three of the possible four ie flows to let us solve the linear system of the traffic matrix . in other words , if we measure @xmath15 , @xmath16 , and @xmath18 on the backup link and subtract the sum of their throughput from the load of the original link r2-r3 , we obtain the throughput of @xmath17 .",
    "figure  [ example]b shows the basic configuration steps exemplarily for cisco ios ( in the blue boxes ) and the timing of the corresponding retrievals of the snmp byte counters from the backup link ( red boxes ) : assuming that the ospf metric of the backup link is already configured to be larger than the one of the original link , we create an acl with the name backuplinkacl on the backup link s ingress router r2 .",
    "this acl filters all packets between the subnetworks net1 and net3 .",
    "afterwards , we create a routing policy that forwards all those packets to the backup link .",
    "we now have rerouted @xmath15 onto the backup link ( that does nt carry any other traffic ) , which allows us to measure it with two sequent retrievals of the snmp byte counter on the backup link s port . in the second step ,",
    "we reconfigure the acl by deleting its previous matching rule and by adding a new one for flow @xmath16 and measure its throughput on the backup link .",
    "then , we similarly configure and measure @xmath18 on the backup link . after all measurements are performed , the backup link could be decommissioned ( if the layer  2 control plane supports port configuration ) and the routing policy and the acl can be deleted from r2 .",
    "the openflow standard defines byte and packet counters for the entries of the flow table , which can be retrieved by the sdn controller .",
    "the effort required to retrieve the byte counters from openflow devices in the network is comparably low , as all popular controller implementations provide some ( rest - based ) northbound interface for management purposes .",
    "the throughput of a flow can then be determined  similar to a link s throughput  based on consecutive queries of its byte counter in the traversed openflow router .",
    "link byte counters are hardware implemented and not directly accessible from the outside . in order to provide that information via snmp",
    ", the counter value is frequently written into the mib , from where it can be requested . apparently , the mib is not synchronously updated with every tick of the counter ( at least in the devices tested in our lab ) , but there is a fixed update interval @xmath19 .",
    "consequently , the calculation of the throughput of a link from its byte counter in the mib is only straightforward when the measurement interval is long enough : two counter values @xmath20 and @xmath21 have to be retrieved , and the time instants @xmath22 and @xmath23 at the retrievals have to be known .",
    "the throughput can then simply be calculated as @xmath24 however , this method requires that @xmath25 , i.e. , the measurement interval has to be much greater than the mib update interval .",
    "if this is not the case , the timing of snmp requests must be synchronized with @xmath19 .",
    "figure  [ mib_update ] shows two extreme examples in which the calculated throughput differs from the actual throughput .",
    "figure  [ mib_update_rate ] shows the mib update rate ( for a static throughput ) of the different devices used in our testbed , which are : 1 )  an hp procurve e5406zl switch , 2 )  a netgear gs108 t switch , and 3 )  a cisco 2811 router .",
    "the number of bytes transmitted over the network were recorded with wireshark at the destination .",
    "the byte counters were requested simultaneously every 10ms from all network devices using snmp .",
    "the mib update frequencies are revealed by the step functions of the different counters .",
    "the hp switch updates every 500ms and the netgear switch every 1000ms .",
    "the cisco router updates the mib by default only every 10 seconds ( shown as cisco r1 in the figure ) , but it can be configured ( shown as cisco r2 ) to do it at max every 10ms ( using the not documented ios command snmp - server hc poll @xmath26interval@xmath27 ) .",
    "the snmp _ response _ time is the time between sending a request packet and the arrival of the corresponding response packet .",
    "it includes the network transfer time and the processing time of the the device - internal snmp agent . to understand",
    "whether snmp queries with a relatively high frequency have impact on the packet processing performance of the equipment under load , we measured the response times of the devices in our lab , which is shown as a histogram in figure  [ response_time ] .",
    "the system clock of the monitoring computer served as reference time .",
    "1000 requests were sent to each device and the figure shows that most response times are around 1 - 2 ms for the hp switch and mostly at 2 - 3 ms for the cisco router .",
    "the netgear switch is slightly slower and exhibits a larger variance in response times .",
    "based on these observations , we consider all tested devices as suitable for fairly accurate throughput calculations ( i.e. with measurement errors negligible for all practical purposes ) , assuming that the measurement time for each ie flow is an order of magnitude larger than the maximum response time of the devices .",
    "operators of large ip backbone networks usually have a comprehensive suit of data bases and software tools for operation , administration and maintenance for their infrastructure in place , which is commonly referred to as the network management system ( nms ) .",
    "traffic monitoring is one of its important subsystems , which serves as source of information for many operational tasks , such as fault detection , capacity planning , anomaly analysis , etc .",
    "the monitoring subsystem required for the measurement scheme proposed in this paper must implement 1 )  an interface to the sdn controller s northbound api to fetch the flow byte counters from the openflow - enabled devices , 2 )  an snmp manager to fetch the link byte counters from the legacy ospf routers , and 3 )  an nms - internal interface to the topology service subsystem ( i.e. the data base that stores a model of the network topology including routing information and the specification of the resources ) .        as illustrated in figure  [ vnf ] , we implemented a simple proof - of - concept monitoring application to perform traffic measurements from link and openflow byte counters , which additionally allows to temporarily reroute specific flows to isolate them for measurements on a backup link .",
    "it retrieves openflow counters from the central sdn controller through the controller s rest - based api .",
    "please note that in large ip backbone topologies , the network transfer time for the snmp counter requests , and more importantly its jitter , can become significantly large , which would affect the accuracy of the byte - counter - based measurements .",
    "we have therefore considered the deployment of the measurement application in the form of a parallelized virtual network function ( vnf ) that can be operated in a distributed fashion , like shown in figure  [ vnf ] .",
    "this would allow to implement the central part of the traffic monitor ( the large blue box ) as a module of the nms , whereas the actual snmp - based measurements would be performed by lightweight measurement vnfs ( that could be operated on demand in virtual machines or application containers ) closer to the actual devices from where the snmp byte counters have to be retrieved .",
    "while our proof - of - concept application has not been entirely implemented in such a modular fashion , it is planned as future architecture for this research .",
    "we set up the testbed shown in figure  [ testbed ] to demonstrate snmp- and openflow - based measurements in our lab .",
    "the network consists of two routers , two ethernet switches and a total of seven pcs .",
    "four pcs represent endpoints of data connections : @xmath28 , @xmath29 , and @xmath30 , connected through a switch to router @xmath31 serve as traffic origins , and @xmath32 , connected to router @xmath33 , as destination .",
    "the routers are connected with two links : the first ( i.e. working ) link , denoted as backbone ip link , and the backup link .",
    "the fifth pc with the proof - of - concept nms application is directly connected to @xmath31 .",
    "the incoming traffic at @xmath31 and the outgoing traffic at @xmath33 is measured via the intermediate switches port mirroring function in order to obtain comparison values to the nms measurements .",
    "we used the iperf command line tool on the pcs to generate udp traffic flows with constant bit rates .",
    "it should be noted that , in contrast to what is shown in figure  [ arch ] , our testbed does not provide dynamic and automated port configuration , as the layer  2 technology used is native ethernet .",
    "in other words , the backup link setup is done manually by connecting the according devices with a patch cable .",
    "the proof - of - concept monitoring application accordingly lacks the ability to perform layer  2 control actions .",
    "figure  [ bypass_measure ] shows the measured data rates ( the three bursts of the red plot ) in the first experimental setup using flow separation on the backup link .",
    "the aggregated traffic was captured ( along with time stamps from the system clock ) with the open - source packet analyzer wireshark at the destination host ( shown as the black plot in the figure ) .",
    "the three ie flows add up to approximately 36  mbit / s at the destination ( including the mac frame and ip packet headers ) .",
    "the individual udp flows were configured to have 5  mbit / s , 10  mbit / s , and 20  mbit / s , which , along with the l2 and l3 protocol headers add up to 35.9  mbit / s , like measured at the destination .",
    "the byte counter of the backup link was requested every second and the three flows were subsequently rerouted onto the backup link for ten seconds respectively .",
    "it can be seen that the measured throughput on the backup link matches the size of the three flows ( plus the previously mentioned protocol overhead ) , which suggests that flow measurements on backup links are a practical solution to augment the monitoring system in place with additional traffic statistics .",
    "figure  [ openflow_measure ] shows the measurement for the same traffic scenario in a similar testbed setup , but with an openflow switch in the center instead of the two ospf routers .",
    "we retrieved the openflow byte counters for the flow table entries of the three flows ( again with a time resolution of one second ) through the sdn controller , and the resulting throughput of the three flows is plotted as the red , blue , and green lines .",
    "it can be seen that , like in the case of snmp - based measurements , the values calculated from the byte counters are again matching the configured udp data rates , plus l2 and l3 overhead , similarly to the previous measurement .",
    "in order to select the most beneficial backup links and nodes for sdn deployment , and to determine which flow is measured on which device ( i.e. on which backup link or on which openflow router ) , we developed two algorithms : a )  an ilp - based , and b )  a greedy heuristic .",
    "this section presents the related optimization model and algorithm in detail .",
    "a summary of the used notation is given in table  [ symbols ] .",
    "the objective function of the model minimizes the total cost for the deployment of backup links and openflow routers in the network : @xmath34    the duration of a backup link measurement cycle ( i.e. , the time for retrieving the necessary snmp link counters for all desired measurements on a particular backup link ) increases with the number of sequential measurements .",
    "it is however advantageous to limit all snmp - based measurement cycles to the duration of a predefined global monitoring interval , which allows for synchronized and complete traffic snapshots at fixed instants in time .",
    "the following constraint allows such a limitation , and it additionally limits the number of flow table entries of an openflow router that can be monitored with byte counters , which is practically relevant in case the router hardware is limited in this regard . @xmath35",
    "the right - hand side of the constraint furthermore sets the maximum number of measurable flows to zero in case the backup link or openflow switch is not deployed . in the same way ,",
    "we limit the traffic load on a certain measurement device ( backup link or openflow switch ) , which may be required for one of the following reasons : 1 )  an openflow router s byte counter on flow table entries may be implemented only in software , so that this function is not usable at full line rate .",
    "2 )  the size of a backup link may be smaller than the size of the original link ( e.g. , its just a single port out of an ethernet link aggregation group ) , which can lead to an overutilization of the backup link when an elephant flow is measured .",
    "the following constraint can be used in such circumstances : @xmath36     c l * parameter * & * meaning * + @xmath37 & set of all nodes @xmath1 + @xmath38 & set of all ( directional ) links @xmath39 + & link reversion function for all @xmath40 , + & @xmath41 returns the reverse link @xmath42 of link @xmath39 + @xmath43 & set of all flows @xmath44 + @xmath45 & upper bound on the size of @xmath44 + @xmath46 & boolean , true if @xmath44 traverses @xmath47 + @xmath48 & cost for the provisioning of @xmath47 + @xmath49 & max number of measurable flows on @xmath47 + @xmath50 & max measurable load on @xmath47 + * boolean * & + * variable * & + @xmath51 & device @xmath47 is provisioned + @xmath52 & @xmath44 is measured on the backup link of @xmath39 + @xmath53 & @xmath44 is measured on node @xmath1 + & @xmath44 is derived on link @xmath39 + & @xmath41 from other measurements +    the next constraint assures that every flow is either measured or derived from other measurements : @xmath54    if a particular flow is the only one left undetermined on a particular link , that flow can be calculated as the total link load minus the sum of all other flows sizes on that link .",
    "the variable @xmath55 is set to one in case the solver decides to derive a flow @xmath44 on link @xmath39 in this way . however , to assure that on each link at max one flow is derived in this way , we need the following constraint : @xmath56    apparently , a flow can only be measured on a device if it s routing path traverse the device .",
    "this is taken care of by @xmath57    as we consider directional links in this model , whereas ip links are bidirectional , we additionally constrain backup links to be bidirectional .",
    "in other words , if link @xmath39 is provisioned with a backup , we require that its reverse link @xmath42 ( i.e. the one that connects the same nodes in the reverse direction ) is provisioned with a backup too : @xmath58      //",
    "step 1 : initialization + @xmath59 @xmath60 @xmath61 +    in addition to the ilp model in the previous subsection , we provide here a greedy algorithm with its pseudocode shown in algorithm  [ algo ] , that can also be used as pre - stage to the ilp .",
    "this algorithm exhibits a time complexity which is orders of magnitude lower than the ilp and thus fast enough to provide solutions for large scale topologies .",
    "its basic functioning is as follows : it determines in each iteration the next ( yet not deployed ) measurement resource ( i.e. backup link or sdn node ) , whose deployment results in the largest number of determinable flows ( that are yet undetermined ) .",
    "it therefore keeps track of which flows have been determined in previous iterations .",
    "this is necessary to avoid the case in which , for instance , there are two resources @xmath62 and @xmath63 , both providing the measurement of a very high number of flows , but the majority of the flows on @xmath62 are the same as on @xmath63 .",
    "a trivial greedy approach would simply choose both , while one of them would actually be redundant and without much benefit .",
    ".binary vector notation [ cols=\"^,<\",options=\"header \" , ]     our heuristic algorithm uses a working set @xmath64 of binary vectors ( see table  [ vectors ] for the here introduced vector notation ) , which , in its initial state , represent the routing configuration in the network .",
    "assuming that the network resources as well as the traffic flows of a network have a unique order , each vector @xmath65 represents a specific network resource ( i.e. a node , or a directional link ) , and the @xmath66 element of each vector represents the same @xmath66 traffic flow .",
    "an element of a vector is 1 if the according flow traverses the according network resource , and 0 otherwise ( see lines 5  8 in algorithm  [ algo ] ) .",
    "the objective of the algorithm is to identify in each iteration ( of the _ while_-loop in lines 11  30 ) the network resource , whose deployment would result in the maximum number of new flow determinations and deletes all corresponding flows from the vectors in the working set @xmath64 .",
    "each iteration accordingly determines a single measurement resource ( and stores it in the result set @xmath67 , see line  29 ) in the following fashion .",
    "the number of flow determinations @xmath68 due to the deployment of a specific resource ( i.e. sdn node or backup link ) @xmath47 is calculated ( in lines 13  26 ) as follows : we define an empty test set of vectors @xmath69 ( line  14 ) , and for each vector @xmath70 we add a vector @xmath71 to @xmath69 .",
    "thus , @xmath69 represents the routing of undetermined flows after resource @xmath47 is deployed . calculating @xmath68 for a backup link in parallel to a link @xmath47 must take into account that backup links are bidirectional . in other words ,",
    "the deployment of a backup link @xmath47 implicates the deployment of another directional link @xmath72 in the opposite direction .",
    "this particularity is taken care of in line  18 ( which is then executed instead of line  17 ) , where for each vector @xmath70 we add a vector @xmath73 to the set @xmath69 .",
    "taking into account the _ calculable _ flows due to a resource deployment is an iterative process , because the determination of the only remaining flow on a particular link always leads on all other links ( that are traversed by the said flow ) to have their number of undetermined flows decreased by one .",
    "this could in turn result in another link having a single flow undetermined .",
    "we therefore iterate ( lines 21  24 ) over all link vectors @xmath74 with @xmath75 and delete the vector from @xmath69 and then the according flow from all other vectors : @xmath76 , until there is no more such vector @xmath74 with @xmath75 .",
    "we can finally calculate the number of flow determinations ( line  25 ) as @xmath77 , where @xmath78 and @xmath79 .",
    "the final step of each iteration ( line  28 ) is to choose the resource @xmath47 with the largest @xmath68 , and to remove all corresponding flows from the working set @xmath64 for the next iteration ( i.e. substituting @xmath64 with @xmath69 , line  29 ) .",
    "the algorithm terminates when the number of remaining flows @xmath80 falls below a predefined threshold @xmath81 ( i.e. the break condition in line  11 ) .",
    "c c c c c * topology * & * nodes * & * links * & * ie flows * & * degree * + ta2 & 65 & 108 & 4160 & 3.32 + germany50 & 50 & 88 & 2450 & 3.52 + janos - us - ca & 39 & 61 & 1482 & 3.13 + cost266 & 37 & 57 & 1332 & 3.08 + india & 35 & 80 & 1190 & 4.57 +",
    "nobel - eu & 28 & 41 & 756 & 2.93 + france & 25 & 45 & 600 & 3.60 + new york & 16 & 49 & 240 & 6.13 + atlanta & 15 & 22 & 210 & 2.93 + polska & 12 & 18 & 132 & 3.00 +    please note that we assume in this paper the generation of the complete traffic matrix from measurements and do not take into consideration any estimation method required when the traffic matrix is not complete .",
    "however , both proposed deployment strategies in this section , i.e. the ilp - based and the heuristic , can terminate with an incomplete traffic matrix , which would require a subsequent estimation of the remaining flows .",
    "we therefore refer to the flow spread metric that was proposed in  @xcite and represents the difference of the upper and lower bound of a flow , and thus provides a measure of _ urgency _ for the exact determination of the flow .",
    "this flow spread value can be used as a weight metric to provide solutions that allow the measurement of the flows with the largest accumulated differences on their upper and lower bounds , and accordingly allows to minimize the estimation error .",
    "finally , please note that the here explained heuristic can be augmented with individual cost values for all resources .",
    "this allows a similar preference or discrimination of resources , for instance , due to reasons that    * specific links are more expensive to backup , * specific nodes are more expensive to upgrade to sdn , or * the upgrade to sdn of a node is in general more expensive than the backup of a link .",
    "the number of flow determinations of a resource has then to be divided by its cost , in order to let the heuristic choose in each iteration the resource with the biggest `` return of investment '' .",
    "in our performance evaluation , we used ten topologies from the sndlib library  @xcite , listed in table  [ topologies ] .",
    "we generated uniform distributed random values for the traffic matrices of each topology  which has however no impact on any of the results , as we focus only on the _ number _ of measurable and obtainable ie flows .",
    "all results were computed on an intel core i7 - 3930k cpu ( 6 x 3.2 ghz ) and we used the gurobi optimizer  @xcite to solve the ilp - based problems .",
    "figure  [ result_bypass_vs_sdn ] shows our main result for the ten tested topologies : the number of required sdn nodes in the network depending on the number of deployed backup links , assuming that all the resources have been located optimal . we have used the ilp model in subsection  [ ilpmodel ] with an additional constraint to fix the number of backup links in order to allow the computation of the exact number of sdn nodes for any given number of backup links .",
    "please note that the parameters maxflows and maxload have not been used ( i.e. have been set to @xmath82 ) in our comparison , but are provided in the model for completeness , as actual network resources may require the consideration of such limitations .",
    "it can be seen in the figure that sdn nodes are typically traversed by a larger number of flows , which results in a relatively large number of backup links if zero sdn nodes are to be used .",
    "it can also be seen that the number of required measurement resources scales with the size of the topology .",
    "in contrast to the absolute numbers in figure  [ result_bypass_vs_sdn ] , we rescaled the plots for figure  [ result_bypass_vs_sdn_relative ] to provide insights independent of the network size .",
    "the figure shows that the majority of networks exhibit a similar characteristic of requiring a relatively linear combination out of 30%-40% sdn nodes and 50%-60% backup links .",
    "there are three plots that differ slightly from this pattern , which are those of the india , france and new york topologies , which are also the three networks with the largest nodal degree ( see table  [ topologies ] ) in our comparison .",
    "however , the analysis of a much larger number of topologies would be required to confirm such a principle behind the observed manner . what can however be confirmed from figure  [ result_bypass_vs_sdn_relative ] ,",
    "is that the relation of required sdn nodes and backup links appear to be independent of the network size , as for instance the the ta2 topology and the nobel - eu topology ( which has less than half the size of ta2 ) exhibit a very similar characteristic .",
    "while the deployment of backup links by a network operator solely for the purpose of traffic measurements still appears somehow comprehensible , we assume that the deployment of sdn nodes for the same purpose is rather unrealistic due to the required cost and infrastructure upgrade effort .",
    "we have therefore tested to what extent traffic measurements can benefit from a more realistic upgrade strategy , that was proposed in  @xcite .",
    "the objective of that strategy is to provide for a given number of sdn nodes the maximum control on routing decisions to the central sdn controller , which is here measured in _ number of route alternatives_. it was shown in that paper that a larger total number of available paths to chose from allows for a more sophisticated traffic engineering and load balancing of the network , which appears to be a reasonable objective for network operators .        figure  [ comparison - result ] plots the two performance measures , i.e. , number of alternative routes ( the red lines ) and number of measurable flows ( the black lines ) depending on the number of sdn nodes , using either the realistic upgrade to sdn strategy from  @xcite ( the dashed lines ) or the locations optimal for measurements ( the solid lines ) .",
    "we here used the ta2 topology , which due to its size ( 65 nodes ) provided the largest resolution of the x - axis , and we deployed solely sdn nodes ( and no backup links ) in order to make the plots comparable .",
    "we furthermore normalized all values with the respective maxima ( i.e. , 16856 alternative routes after full sdn deployment vs. a total of 4160 ie flows ) and show only the relative performance on the y - axis .",
    "a comparison of the two black plots shows that the sdn upgrade strategy that maximizes routing control provides near optimal locations for measurements , as the number of measurable ie flows falls negligibly below the ones that are achievable with optimally located sdn nodes .",
    "it can furthermore be seen that the reverse ( i.e. comparing the two red plots ) does not hold : the node locations optimal for traffic measurements are significantly less suited for traffic engineering and load balancing . an important finding of our work is thus that operators considering to upgrade their legacy ip networks to sdn can use the strategy in  @xcite without noticeable drawbacks on sdn s traffic measurement capabilities .",
    "the chosen node locations can then be preset in the here presented ilp and heuristic to determine solely the missing backup links to complete the traffic matrix .",
    "the two strategies choose indeed very similar nodes , which we attempt to visualize in figure  [ overlap - result ] .",
    "the figure shows the overlap of nodes chosen from both strategies for a given number of deployable sdn nodes . the gray area depicts the optimal nodes for traffic measurements , whereas the red shaded area shows the optimum nodes for load balancing and traffic engineering .",
    "the two bounding ( dashed red ) lines of that area can be interpreted as following : the upper line plots how many of the nodes optimally deployed for load balancing are also optimal for measurements ( left y - axis ) .",
    "the lower line plots the number of nodes optimally deployed for load balancing that have not been chosen by our measurement location optimization ( right y - axis ) .      the heuristic algorithm in subsection  [ heuristic ]",
    "can be used instead of the linear optimization model in subsection  [ ilpmodel ] in case finding the optimal solution exceeds acceptable computation times due to the network s size .",
    "we propose for accuracy to use the heuristic only for a subset of the required resources ( i.e. , to terminate the heuristic before the solution is complete ) , and to preconfigure the ilp model with the chosen resources to find the remaining resources .",
    "figures  [ heuristic2-result ] and  [ heuristic - result ] show the total number of required resources ( solid line , left y - axis ) , depending on to what extent the problem was solved with the heuristics ( x - axis ) , before the remaining resources were determined with the ilp model .",
    "the less resources are heuristically determined , the larger is the time complexity of the remaining linear optimization problem , which can be observed in the second plot ( dashed line , right y - axix ) in both figures : while the heuristic ( compared to the ilp ) terminates in negligible time , the time to find the optimal locations of the remaining resources increases beyond exponentially with the number of those resources .    we show each of the two results in this subsection for different purposes : figure  [ heuristic2-result ] shows the discussed behavior for the ta2 topology , which is the largest out of the ten compared ones , and thus the most demanding in terms of the optimality .",
    "especially the last four data points of the time plot show that the time complexity becomes prohibitive large .",
    "it should be noted that the initialization of the optimization model requires a fixed duration depending on the network size and independent of the actual problem size , which is why the time values in the x - axis range between 23 and 14 preset resources appear to be somewhat constant .",
    "the 65 nodes of the ta2 topology can therefore be considered as borderline tractable regarding time complexity for the ilp .",
    "figure  [ heuristic - result ] shows the same result for the janos - us - ca topology , which we chose because we observed the comparably worst performance of the heuristic amongst the tested topologies : the heuristic alone determines 18 resources for the complete traffic matrix ( the leftmost data point ) , whereas the optimal solution requires only 15 resources ( the rightmost data point ) .",
    "this suggests that the heuristic should only be used to the point where the search for the remaining resources by an ilp solver is acceptable , for instance , by iteratively reducing the number of heuristically preconfigured resources .",
    "this paper examined to what extent hybrid sdn / ospf can solve the ip traffic matrix and related monitoring problem , inherent to the ip layer .",
    "to this end , we proposed a novel approach to generate the ip traffic matrix from measurements of individual ingress - egress flows using both types of byte counters , from backup links between legacy routers and flow table entries of openflow - enabled routers .",
    "instead of using expensive monitoring infrastructure for non - sdn devices , we propose to use policy based routing for backup ports and snmp - based byte counters , features that are likely to be readily available in ip networks .",
    "we showed that our method does not impact the ip routing in place , detailed the necessary configurational steps at the backup link ingress , and discussed snmp timing issues .",
    "we also presented a software architecture for parallelized traffic measurements based on distributed vnfs that are connected to a central monitor , which allows to prevent timing - related measurement errors due to long transmission times in large network topologies .",
    "the experiences we made with our proof - of - concept implementation in our testbed confirm the applicability of our approach even in a networking environment containing outdated equipment .",
    "we finally provided a linear optimization model and a heuristic algorithm for combined sdn node and backup link placement that assures the retrieval of the full traffic matrix under minimum resource requirements .",
    "our numerical evaluation showed that there is a near linear trade - off between sdn nodes and backup links that are required for a full traffic matrix , which lets us conclude that a hybrid network with a few sdn nodes can already provide complete traffic statistics , when enough backup links are available for snmp - based measurements .",
    "we have finally shown as one of our main result in our analysis that the proposed sdn deployment strategy for traffic measurements in hybrid networks is very compatible with sdn upgrade strategies that aim for maximum network control .",
    "this work has been supported by the german federal ministry of education and research ( bmbf ) under the eureka / celtic - plus project sendate - planets .",
    "we thank our student alexander hoffmann for the implementation of our proof - of - concept measurement application and for carrying out the measurements of mib update rates , snmp response times , and the snmp- and openflow - based throughput .",
    "l. hendriks , r. de o. schmidt , r. sadre , j. bezerra , a. pras , _ `` assessing the quality of flow measurements from openflow devices , '' _ 8th international workshop on traffic monitoring and analysis ( tma ) , louvain la neuve , belgium , 2016                y. gong , x. wang , m. malboubi , s. wang , s. xu , c .-",
    "n . chuah , _",
    "`` towards accurate online traffic matrix estimation in software - defined networks , '' _ acm sigcomm symposium on software defined networking research ( sosr 15 ) , new york , usa , 2015                m. caria , a. jukan , m. hoffmann , _",
    "`` sdn partitioning : a centralized control plane for distributed routing protocols , '' _ ieee transactions on network and service management , special issue on management of softwarized networks , june 2016        m. caria , a. jukan , m. hoffmann , _ `` divide and conquer : partitioning ospf networks with sdn , '' _",
    "14th ifip / ieee international symposium on integrated network management ( i m 2015 ) , ottawa , canada , may 2015            m. polverini , et al . , _",
    "`` the power of sdn to improve the estimation of the isp traffic matrix through the flow spread concept , '' _ ieee journal on selected areas in communications , vol.34 , no.6 , pp.1904 - 1913 , june 2016 ."
  ],
  "abstract_text": [
    "<S> ip networks with a hybrid control plane deploy a distributed routing protocol like ospf and the centralized paradigm of sdn in parallel . the advantages and disadvantages of a hybrid control plane have already been extensively discussed in the literature . </S>",
    "<S> this paper examines to what extent hybrid sdn / ospf can solve the ip traffic matrix and related monitoring problems , inherent to the ip layer . </S>",
    "<S> the problem persists in hybrid networks , as the required sdn byte counters for a complete traffic matrix may not be sufficiently implemented ( or even not at all ) , or the deployed sdn nodes may be too few , or not adequately located in the network . for such cases , we propose to augment the sdn traffic statistics with snmp - based measurements on ip backup links . </S>",
    "<S> we address implementation and network function virtualization aspects of the required hybrid monitoring infrastructure and discuss the timing issues of the measurements based on hands - on experiences in our lab . </S>",
    "<S> we furthermore provide a placement algorithm for sdn nodes and backup links that can guarantee a complete ip traffic matrix .    </S>",
    "<S> byte counter , hybrid sdn / ospf , network monitoring , software - defined networking , traffic matrix . </S>"
  ]
}
{
  "article_text": [
    "the relationship between topology and combinatorics is an important aspect in the study of hyperplane arrangements . as the main positive result , we have the fact that for a hyperplane arrangement ( say , in a complex projective space ) , the cohomology ring of the complement is determined by the combinatorial data  @xcite . in  1994",
    "g.  rybnikov  @xcite found a pair of line arrangements in @xmath0 such that their fundamental groups are not isomorphic . in the long period between the announcement and the publication of the result ,",
    "rybnikov s statement was reproved by three of the authors of this paper ( with j.  carmona ) in  @xcite , using group extensions involving the alexander invariant of the group and a combinatorial generalization of some rybnikov s ideas by the fourth named author  @xcite .",
    "note that rybnikov s arrangements can not be the complexification of a real arrangement .",
    "some years later , a new example of arrangements sharing the combinatorics but not all of the topological properties was found  @xcite .",
    "this example was weaker than rybnikov s one in some aspects and somewhat stronger in other ones .",
    "the author distinguished the two arrangements using a braid monodromy invariant developed in @xcite ; this invariant is able to distinguish two pairs formed by the complex projective plane and an algebraic curve but it does not give further information on the topology of the complement ( in particular , on the fundamental group ) .",
    "these arrangements are defined over @xmath1 ( in particular they are the complexification of a real arrangement ) and , moreover , they have galois - conjugate equations in this field . as a consequence",
    "the fundamental groups of their complements have the same profinite completion and they share all the topological properties of algebraic nature ( quite a lot ! ) .",
    "recently , the third named author  @xcite found another combinatorics with distinct topological realizations .",
    "he used a new invariant developed in  @xcite computing the image of some special homological cycle in the complement by some associated character ; this computation is doable using the injection of the boundary of a regular neighborhood of the arrangement in the complement , done in  @xcite . in this case",
    "the realizations are defined over the cyclotomic group of the fifth roots of unity and only the topology of the pairs is distinguished by this invariant as in the latter example . up to our knowledge , these are ( essentially ) the only known examples of line arrangements with the same combinatorics and distinct topology .",
    "the main result of this paper is that in fact , the fundamental group of the realizations of the above combinatorics are not isomorphic ( of course , for the realizations which are not complex - conjugate ) .",
    "we have used the same method which was already successful in  @xcite . the notion of combinatorics",
    "can be generalized for arbitrary plane algebraic curves , see  @xcite : a pair of curves with the same combinatorics and distinct topology is called a _",
    "zariski pair_. a zariski pair is said to be _ arithmetic _ if its members have galois - conjugate equations over a number field . as we stated before , it is hard to check if a zariski pair candidate is an actual zariski pair ; as an example there are arithmetic zariski pairs candidate communicated to the authors by fan for which the known invariants failed to check if they are actual arithmetic zariski pairs .    the arithmetic zariski pairs are related to conjugate varieties .",
    "the fact that conjugate varieties may have distinct topology was proved by serre  @xcite ; other examples were found by abelson  @xcite and more recently by many authors  @xcite . for the case of curves ,",
    "the first example of an arithmetic zariski pair is in  @xcite ( a curve of degree  12 ) .",
    "the complete list of such zariski pairs for sextics was done by shimada  @xcite ; a longer list ( replacing homeomorphism by a special type of diffeomorphism ) was given by degtyarev  @xcite .",
    "in all these examples , nothing is said about the topology of the complement ; in fact , in  @xcite a zariski pair with homeomorphic complements is given .",
    "hence , our example is the first arithmetic zariski pair with non - isomorphic fundamental group .",
    "the paper is organized as follows . in   [ sec - combinatorics ]",
    ", we introduce the combinatorics @xmath2 studied in the paper . in   [ sec - rigid ] , we study the homological rigidity of this combinatorics .",
    "the fact that @xmath2 is homologically rigid and has no non - trivial automorphism implies that given two realizations @xmath3 , @xmath4 , any isomorphism @xmath5 is _",
    "@xmath6 the identity in homology_. in  [ sec - alex ] , we introduce the truncated alexander invariants . in  [ sec - fg ] , we compute the fundamental groups using the wiring diagrams computed in  @xcite and we explain how to compute the truncated alexander invariants .",
    "we show that no isomorphism @xmath5 can induced the identity on homology and using a conjugate arrangement , we do the same for its opposite , proving the result . in the appendix  [ sec - code ] , we explain the ` sagemath ` code that makes the heavy computations .",
    "in this section a line combinatorics will be described together with several possible realizations on the complex projective plane .      for the sake of completeness we will recall the definitions of line combinatorial types .    [ def - comb ] a _ line combinatorial type _ ( or simply a _ ( line ) combinatorics _ ) is a pair @xmath7 , where @xmath8 is a finite set and @xmath9 , satisfying :    1 .   for all @xmath10 , @xmath11 ; 2 .",
    "for any @xmath12 , @xmath13 , @xmath14 such that @xmath15 .",
    "an _ ordered combinatorial type _",
    "@xmath16 is a combinatorial type where @xmath8 is an ordered set .",
    "[ not - comb - type ] given a combinatorial type @xmath17 , the multiplicity @xmath18 of @xmath10 is the number of elements @xmath19 such that @xmath20 ; note that @xmath21 . in order to mimic the situation in the realizations of a combinatorics ,",
    "we will write @xmath20 when the _ line _  @xmath22 is in the _ point _",
    "@xmath22 ; this relation will also be indicated as @xmath23 .      the combinatorics ( and realizations ) described here were originally presented in  @xcite . in what follows",
    ", a more geometrically insightful approach will be presented .",
    "this will be helpful in order to describe the required invariants to compare their fundamental groups .",
    "let us begin with an ordered set of four points @xmath24 in general position ( red points in ) .",
    "note that such a set is unique up to projective automorphism : @xmath25,[1:-1:1],[1:-1:-1],[1:1:-1].\\ ] ]    the first four lines of our arrangement are the lines @xmath26 of the quadrangle defined by @xmath27 : @xmath28 the two diagonals of the quadrangle should also be considered : @xmath29 is the line @xmath30 and @xmath31 is the line @xmath32 .",
    "their equations are : @xmath33 after choosing two points @xmath34 ( resp .",
    "@xmath35 ) on @xmath29 ( resp .",
    "@xmath31 ) one can consider a set of four lines @xmath36 as shown in figure  [ fig:12lines ] .",
    "the intersection of these lines with the original lines @xmath37 define a set of points as follows : @xmath38 , @xmath39 .    in principle , the newly defined points @xmath40 need not be aligned .",
    "the combinatorics @xmath41 is determined by a particular choice of @xmath34 and @xmath35 for which @xmath40 belong in a line , say  @xmath42 .",
    "the existence of such points @xmath34 and @xmath35 in @xmath43 satisfying the condition given in @xmath41 is not unique ( as it was proved in  @xcite ) .",
    "in fact , there are four choices leading to the following realizations : @xmath44 where @xmath45 is a primitive fifth - root of unity .",
    "finally , one can also obtain equations of the line @xmath42 joining @xmath46 : @xmath47 for further use , the four realizations parametrized by the primitive fifth - roots of unity will be denoted by  @xmath48 .",
    "the ordered combinatorics  @xmath41 has a non - trivial automorphism group , generated by the product of the cyclic permutations of @xmath49 and @xmath50 , and the transposition of @xmath51 , while @xmath42 is invariant .",
    "note that the action of this group of automorphisms can be realized by projective transformations sending cyclically @xmath52 to  @xmath53 .",
    "the final combinatorics @xmath2 with trivial automorphism group can be obtained from @xmath41 by adding a new line @xmath54 joining @xmath55 and  @xmath56 .",
    "the four realizations of @xmath2 will be denoted by @xmath57 .",
    "the line @xmath54 has equations : @xmath58    in terms of , the combinatorics is defined @xmath59 and @xmath60 below : @xmath61",
    "let @xmath62 be a line combinatorics as presented in  [ sec - combinatorics ] .",
    "let @xmath63 be a free abelian group with basis @xmath64 ; the dual basis in @xmath65 is denoted by @xmath66 .",
    "we define @xmath67 as the quotient of @xmath63 by the principal submodule generated by @xmath68 ; in the same way we denote its dual by @xmath69 .",
    "note that @xmath70 is the kernel of the augmentation morphism @xmath71 associated to the above basis .",
    "these lattices are naturally isomorphic to the first homology and cohomology groups of the complement in @xmath72 of any realization of @xmath73 .    to avoid notation overload the class of @xmath74 in @xmath75 is still denoted by @xmath74 .",
    "for each @xmath76 , let us denote @xmath77 .",
    "let @xmath78 the subgroup of @xmath79 generated by @xmath80 its dual @xmath81 is the quotient of @xmath82 by the subgroup generated by @xmath83 as part of the orlik - solomon algebra . as above , these groups are naturally isomorphic to the second homology and cohomology groups of the complement in @xmath72 of any realization of @xmath73 . besides the automorphisms of the combinatorics , there are some geometrical automorphisms that will be considered here and play an essential role in this theory .    with the previous notation ,",
    "any automorphism of @xmath84 inducing a morphism of @xmath85 will be referred to as an _ admissible _ automorphism of the combinatorics .",
    "the group of admissible automorphisms will be denoted by @xmath86 .",
    "[ obs - admis ] admissible automorphisms are also closely related to isomorphisms of fundamental groups of realizations of combinatorics .",
    "it is a consequence of that if @xmath87 are two realizations of  @xmath88 and @xmath89 is an isomorphism , under the above identifications , then its induced automorphism @xmath90 is admissible .",
    "a combinatorics @xmath73 is called _ homologically rigid _ if @xmath91 .",
    "homological triviality is fundamental for the study of certain fine invariants of the topology of different realizations of  @xmath73 .",
    "checking the homological triviality of a combinatorics is a subtle combinatorial property .",
    "the main tools for the study of admissible automorphisms and homological rigidity are the strata of a certain stratification of @xmath92 called resonance varieties , which will be described next .      for any @xmath93 , one can define a complex @xmath94 given by the wedge product as follows : @xmath95 we are interested in the first cohomology of this complex @xmath96 .",
    "@xmath97-th resonance variety _ of @xmath73 is defined as @xmath98 analogously , one can define @xmath99 over a field @xmath100 when considering the complex over  @xmath100 and stratifying the vector space @xmath101 by the dimension of the associated cohomology .",
    "as expected , the resonance varieties @xmath99 of a combinatorics coincide with the resonance varieties over @xmath100 of any realization of  @xmath73 .",
    "each @xmath97-th resonance component over @xmath102 is determined by a subcombinatorics with a certain structure called _ combinatorial pencils _ ( cf .",
    "@xcite ) or multinets ( cf .",
    "@xcite ) with @xmath103 fibers .",
    "the structure of such combinatorial pencils with @xmath103 fibers mimics the combinatorial properties of a line arrangement which is the union of @xmath103 fibers of a pencils of curves . such subarrangements will be referred to here using the typical pencil they describe .",
    "for instance _ multiple point _ , _ ceva - type _",
    "( the combinatorics of the six lines in a generic pencil of smooth conics ) or _ hesse type _ ( for the combinatorics of the 12 lines in an arrangement of smooth cubics based at their 9 inflection points ) .",
    "let us denote by @xmath104 a certain subcombinatorics of @xmath88 ( obtained as a subset of lines and their incidence relations ) forming a combinatorial pencil .",
    "there is exactly one irreducible component in the resonance varieties of @xmath104 which is not contained in the resonance varieties of a subcombinatorics .",
    "such component will be denoted by @xmath105 and we refer to as the _ resonance component associated to _ @xmath104 .",
    "note that its dimension is @xmath106 , if @xmath103 is the number of fibers of the combinatorial pencil .",
    "three subcombinatorics @xmath107 of combinatorial pencils in a line combinatorics are said to form a _ triangle _ if @xmath108    the following result is obtained in  ( * ? ? ?",
    "* lemma 6 ) .",
    "[ lem - triangles ] let @xmath109 be an admissible automorphism of @xmath75 . then its dual @xmath110 preserves triangles .    as depicted in lemma  [ lem - triangles ] , the resonance components ( their dimension and the number of triangles they belong to ) can impose conditions on admissible automorphisms .",
    "the following is an immediate consequence of  @xcite .",
    "[ cor - multiple - point ] let @xmath73 be a realizable combinatorics and @xmath111 a @xmath97-th resonance component with @xmath112 .",
    "then @xmath111 is associated with the combinatorial pencil of a multiple point of multiplicity  @xmath113 .",
    "this has the following consequence on an admissible automorphism @xmath114 .",
    "let @xmath115 be a point on @xmath60 of multiplicity @xmath116 , which is a subcombinatorics of @xmath73 and denote by @xmath117 its associated resonance component of dimension @xmath97",
    ". then any admissible automorphism @xmath118 must be such that @xmath119 for another @xmath120 of multiplicity  @xmath116 .",
    "this results in certain combinatorial conditions on the images of the special basis in  @xmath75 .",
    "if enough of these conditions concur , one can eventually be able to state homological rigidity .",
    "the idea behind this concept comes from the work of rybnikov ( cf .",
    "@xcite ) .      in our example , it is possible to compute that the combinatorial pencils contained in the combinatorics @xmath2 described in  [ sec - combinatorics ] : the 10 multiple points and 15 ceva - type subarrangements .",
    "only one of the 25 combinatorial pencils has 5 fibers ( the quintuple point ) .",
    "the number of triangles @xmath121 in a given subcombinatorics @xmath104 as well as the number of triangles @xmath122 containing the quintuple point @xmath55 are recorded in table  [ tab - combinatorics ] .",
    ".combinatorics of triangles in @xmath2 [ cols=\"^,^,^,^,^\",options=\"header \" , ]      to avoid the annoying problem that we consider no meridian for the line  @xmath29 , from now on we number the lines with the index of their meridians ; the _ line at infinity _",
    "( former line  @xmath29 ) is now the line  @xmath123 .    from the relations induced by and the jacobi relations   we obtain a presentation for the truncated alexander invariants @xmath124 , @xmath125 ( see definition  [ dfn - truncated ] and example  [ ejem - truncated ] ) .",
    "note that @xmath126 depends only on the combinatorics @xmath2 .",
    "in particular , in our case , @xmath126 is generated by @xmath127 and relations @xmath128 for each @xmath129 , and for each  @xmath22 such that @xmath130 .",
    "we assume the convention that @xmath131 .",
    "this implies that @xmath132 via the morphism @xmath133 as a consequence of  .",
    "we can choose @xmath134 such that @xmath135 is a basis of @xmath126 .",
    "as for @xmath136 , the actual presentations of @xmath137 and the jacobi relations   are in this case required .",
    "note that @xmath138 . with the relations coming from the group",
    "we can see that @xmath139 generate @xmath136 , subject to the relations induced by  .",
    "let us describe the ai - isomorphism test in a general setting .",
    "assume @xmath140 and @xmath141 are fundamental groups of two arrangements with the same combinatorics @xmath142 and with their meridian structures .",
    "let @xmath143 and let @xmath144 be the lines and choose a set  @xmath145 as above .",
    "assume there is an isomorphism  @xmath146 fitting in the following diagram : @xmath147 g^1\\arrow[rr,\"\\varphi\"]\\arrow[rd,\"h_1 \" below left=3pt]&&g^2\\arrow[dl,\"h_2\"]\\\\ & h_1^{\\mathscr{c } } & \\end{tikzcd}\\ ] ] @xmath148 \\matrix ( m ) [ matrix of math nodes , row sep=2.5em , column sep=2.5em , text height=1.5ex , text depth=0.25ex ] { g^1&&g^2\\\\ & h_1^{\\mathscr{c}}&\\\\ } ; \\path[->,>=angle 90](m-1 - 1 ) edge node[above ] { $ \\varphi$ } ( m-1 - 3 ) ; \\path[->,>=angle 90](m-1 - 1 ) edge node[below ] { $ h_1 $ } ( m-2 - 2 ) ; \\path[->,>=angle 90](m-1 - 3 ) edge node[below right ] { $ h_2 $ } ( m-2 - 2 ) ;",
    "\\end{tikzpicture}\\ ] ] for @xmath149 , we write @xmath150 for a generator of @xmath137 which is a meridian whose image by @xmath151 is @xmath152 . note that @xmath137 is generated by @xmath150 , @xmath149 .    1 .",
    "the isomorphism @xmath146 is determined by @xmath153 , where @xmath154 .",
    "note that this does not necessarily mean that @xmath146 preserves meridians , since @xmath155 is not necessarily in the same conjugacy class as @xmath156 .",
    "the isomorphism @xmath146 induces a @xmath157-isomorphism @xmath158 .",
    "let us denote @xmath159\\bmod \\lambda/\\mathfrak{m}^2 $ ] . if no confusion is likely to arise , we will drop the super - index .",
    "we have @xmath160\\bmod \\lambda/\\mathfrak{m}^2.\\ ] ] 3 .",
    "because of , only the class of @xmath161 in @xmath162 is needed , @xmath163 is determined by @xmath164 for some @xmath165 .",
    "4 .   take a relation @xmath166 .",
    "this relation induces a linear equality @xmath167 in @xmath168 , written in terms of @xmath169 for @xmath170 . using   and",
    ", its image under @xmath163 is an equation @xmath171 in the module @xmath172 , whose unknowns are the variables @xmath173 of .",
    "one can reduce the equation @xmath171 using the relations of @xmath172 to obtain equations in @xmath174 .    the existence of solutions for this system is a necessary condition for the existence of such an isomorphism @xmath146 .",
    "the process we have outlined above is referred to as the _ ai - isomorphism test _ of level  @xmath175 .",
    "if the necessary condition is true , we can use the integer solutions to work in  @xmath176 , and so on .",
    "this process at each @xmath177 will be referred to as the _ ai - isomorphism test _ of level  @xmath97 for the pair  @xmath178 $ ] .",
    "[ prop - ai1 ] under the notation above , the pair @xmath178 $ ] do not pass the ai - isomorphism test of level  @xmath175 .",
    "in other words , there is no isomorphism @xmath179 inducing the identity  @xmath180 .",
    "one can easily check that @xmath181 .",
    "a long computation gives @xmath182 , hence each equation @xmath183 in @xmath184 induces  @xmath185 linear equations ; since there are  @xmath186 such relations , we obtain a linear system of @xmath187 equations in  @xmath188 unknowns . after eliminating trivial equations",
    ", we have to deal with a linear system of @xmath189 equations with @xmath190 variables .",
    "we have attacked this system with  ` sagemath `  @xcite , using pivoting methods where divisions are not allowed .",
    "we obtain that the solutions over  @xmath191 is an affine space of dimension  @xmath192 , but the smallest ring where solutions exist is @xmath193 $ ] .",
    "in particular , no integer solution exists .",
    "these computations , together with the presentation of @xmath126 and @xmath136 took 662.49s of cpu time on an 8 double core athlon processor computer with 128 gb of ram .",
    "we can apply the same ideas to the groups @xmath194 and @xmath195 .",
    "let us recall that , even though @xmath195 and @xmath194 are isomorphic , their meridian structures are reversed , i.e. the known isomorphism induces @xmath196 .",
    "[ prop - ai2 ] under the notation above , the pair @xmath197 $ ] do not pass the ai - isomorphism test of level  @xmath175 .",
    "in other words , there is no isomorphism @xmath198 inducing the identity  @xmath180 .",
    "we repeat the above procedure skipping the computations about @xmath172 , already done .",
    "after 97.69s of cpu time , we obtain similar results as in .    with all the above we are ready to prove the main result .",
    "[ thm - isom ] the fundamental groups @xmath195 and @xmath199 of the complement to the realizations @xmath200 and @xmath201 of the combinatorics @xmath2 are not isomorphic .",
    "consider the presentations of @xmath137 given in ",
    "[ sec - combinatorics ] , which provide meridian structures in a natural way .",
    "assume @xmath202 is an arbitrary isomorphism . by , @xmath2 is homologically rigid and @xmath203 . as a consequence ,",
    "@xmath146 induces @xmath204 , see  .",
    "if @xmath205 , then results in a contradiction .",
    "assume @xmath206 .",
    "note that , as mentioned at the beginning of  , the conjugation morphism @xmath207 induces an automorphism of groups whose associated morphism @xmath208 equals @xmath209 . composing @xmath210 one obtains an isomorphism @xmath211 satisfying @xmath212 , which can be disregarded using .",
    "this ends the proof .",
    "10    h.  abelson , _ topologically distinct conjugate varieties with finite fundamental group _",
    ", topology * 13 * ( 1974 ) , 161176 .",
    "e.  artal , _ sur les couples de zariski _ , j. algebraic geom . * 3 * ( 1994 ) , no .  2 , 223247 .",
    "to3em , _ topology of arrangements and position of singularities _ , ann .",
    "toulouse math .",
    "( 6 ) * 23 * ( 2014 ) , no .  2 , 223265 .",
    "e.  artal , j.  carmona , and j.i .",
    "cogolludo - agustn , _ braid monodromy and topology of plane curves _ , duke math .",
    "j. * 118 * ( 2003 ) , no .  2 , 261278 .",
    "to3em , _ effective invariants of braid monodromy _ , trans .",
    "* 359 * ( 2007 ) , no .  1 , 165183 .    e.  artal , j.  carmona , j.i .",
    "cogolludo - agustn , and m. .",
    "marco , _ topology and combinatorics of real line arrangements _ , compos . math . * 141 * ( 2005 ) , no .  6 , 15781588 .",
    "to3em , _ invariants of combinatorial line arrangements and rybnikov s example _ , singularity theory and its applications ( s.  izumiya , g.  ishikawa , h.  tokunaga , i.  shimada , and t.  sano , eds . ) , advanced studies in pure mathematics , vol .  43 , mathematical society of japan , tokyo , 2007 .    e.  artal , j.i .",
    "cogolludo - agustn , and h.  tokunaga , _ a survey on zariski pairs _ , algebraic geometry in east asia ",
    "hanoi 2005 , adv .",
    "pure math .",
    "50 , math .",
    "japan , tokyo , 2008 , pp .  1100 .",
    "e.  artal , v.  florens , and b.  guerville - ball , _ a topological invariant of line arrangements _ , preprint available at ` arxiv:1407.3387 [ math.gt ] ` , 2014 .",
    "f.  charles , _ conjugate varieties with distinct real cohomology algebras _",
    ", j. reine angew . math .",
    "* 630 * ( 2009 ) , 125139 .",
    "d.  c. cohen and a.  i. suciu , _ the braid monodromy of plane algebraic curves and hyperplane arrangements _ , comment .",
    "* 72 * ( 1997 ) , no .  2 , 285315 .",
    "degtyarv , _ on deformations of singular plane sextics _ , j. algebraic geom .",
    "* 17 * ( 2008 ) , no .  1 , 101135 .    m.  falk and s.  yuzvinsky , _ multinets , resonance varieties , and pencils of plane curves _ ,",
    "compos . math .",
    "* 143 * ( 2007 ) , no .  4 , 10691088 .",
    "v.  florens , b.  guerville - ball , and m. .",
    "marco , _ on complex line arrangements and their boundary manifolds _ , preprint available at ` arxiv:1305.5645v2 [ math.gt ] ` to appear in math .",
    "cambridge philos .",
    "soc . , 2014 .",
    "g.  gonzlez - diez and d.  torres - teigell , _ non - homeomorphic galois conjugate beauville structures on @xmath213 _ , adv . math .",
    "* 229 * ( 2012 ) , no .  6 , 30963122 .    b.  guerville - ball , _ zariski pairs of line arrangements with twelve lines _",
    ", preprint available at ` arxiv:1411.2300 [ math.gt ] , to appear in geom . topol . ` , 2014 .",
    "marco , _ a description of the resonance variety of a line combinatorics via combinatorial pencils _ , graphs combin . *",
    "25 * ( 2009 ) , no .  4 , 469488 .    p.  orlik and l.  solomon , _ combinatorics and topology of complements of hyperplanes _ , invent",
    "* 56 * ( 1980 ) , no .  2 , 167189 .",
    "c.  s. rajan , _ an example of non - homeomorphic conjugate varieties _ , math .",
    "lett . * 18 * ( 2011 ) , no .  5 , 937942 .",
    "g.  rybnikov , _ on the fundamental group of the complement of a complex hyperplane arrangement _ , funct .",
    "* 45 * ( 2011 ) , 137148 , preprint available at ` arxiv : math.ag/9805056 ` .",
    "serre , _ exemples de varits projectives conjugues non homomorphes _ , c. r. acad .",
    "* 258 * ( 1964 ) , 41944196 .",
    "i.  shimada , _ on arithmetic zariski pairs in degree 6 _ , adv .",
    "* 8 * ( 2008 ) , no .  2 , 205225 .",
    "to3em , _ non - homeomorphic conjugate complex varieties _ , singularities  niigata ",
    "toyama 2007 , adv .",
    "pure math .",
    "56 , math .",
    "japan , tokyo , 2009 , pp .",
    "285301 .",
    "stein et  al .",
    ", _ sage mathematics software ( version 6.7 ) _ , the sage development team , 2015 , http://www.sagemath.org .",
    "s.  yuzvinsky , _ a new bound on the number of special fibers in a pencil of curves _ , proc .",
    "* 137 * ( 2009 ) , no .  5 , 16411648 .",
    "[ prt1 ] coding the wiring diagrams    the following code presents the two wiring diagrams , and the groups @xmath214 , for @xmath215 . for further use",
    ", we introduce the permutations ` orden\\pm ` relating the order at the base vertical line of the wiring diagram .",
    "the lists ` wiring\\pm ` have one element for each crossing .",
    "each element contains two parts : the previous braid and the lines involved in the crossing .",
    "ordenpos = permutation([1,3,7,5,8,11,4,10,9,6,2 ] ) wiringpos= [ [ ( ) , [ 10 , 9 ] ] , [ ( ) , [ 5 , 8 ] ] , [ ( ) , [ 5 , 11 , 4 , 9 ] ] , [ ( ) , [ 5 , 10 ] ] ,   [ ( ) , [ 5 , 6 ] ] , [ ( ) , [ 5 , 2 ] ] , [ ( -7 , -8 ) , [ 7 , 8 ] ] , [ ( ) , [ 7 , 9 ] ] , [ ( ) , [ 7 , 4 ] ] , [ ( ) , [ 7 , 10 , 6 ] ] , [ ( ) , [ 7 , 11 , 2 ] ] , [ (-8 , -4 , 7 ) , [ 6 , 11 ] ] ,   [ ( -7 , -5,-6 , -4 , 8) , [ 3 , 8 , 11 ] ] , [ ( ) , [ 3 , 4 ] ] , [ ( ) , [ 3 , 10 ] ] ,   [ ( ) , [ 3 , 9 , 2,6 ] ] , [ ( 3 , ) , [ 8 , 10 ] ] , [ ( 4 , 5 , 2 , 3 , 4 , -2 ) , [ 1 , 8 , 4 , 6 ] ] ,   [ ( ) , [ 1 , 11,10 ] ] , [ ( ) , [ 1 , 2 ] ] , [ ( ) , [ 1 , 9 ] ] , [ ( -3 , -4 ) , [ 8 , 2 ] ] ]    ordenneg = permutation([1,7,5,3,4,10,11,8,2,6,9 ] ) wiringneg= [ [ ( ) , [ 3 , 4 ] ] , [ ( ) , [ 3 , 10 ] ] , [ ( ) , [ 3 , 11 , 8 ] ] , [ ( ) , [ 3 , 2 , 6 , 9 ] ] , [ ( -5 , -6 , -7 , -4 , -5 ) , [ 5 , 8 ] ] , [ ( ) , [ 5 , 11 , 4 , 9 ] ] , [ ( ) , [ 5 , 10 ] ] ,   [ ( ) , [ 5 , 6 ] ] , [ ( ) , [ 5 , 2 ] ] , [ ( -4 , 3 , 6 ) , [ 11 , 6 ] ] , [ ( -6 , -5 ) , [ 9 , 10 ] ] ,   [ ( 4,5 , 4 , 8 , -7 , 6 ) , [ 2 , 8 ] ] , [ ( 7 , ) , [ 7 , 4 ] ] , [ ( ) , [ 7 , 10 , 6 ] ] ,   [ ( ) , [ 7,8 ] ] , [ ( ) , [ 7 , 9 ] ] , [ ( ) , [ 7 , 2 , 11 ] ] , [ ( -4 , 5 , -6 , -3 ) , [ 1 , 4 , 8 , 6 ] ] , [ ( ) , [ 1 , 9 ] ] , [ ( ) , [ 1 , 11 , 10 ] ] , [ ( ) , [ 1 , 2 ] ] , [ ( -2 , -4 ) , [ 8 , 10 ] ] ] ....      [ paso1 ] we start constructing the presentations of the groups using the function in  [ s - relations ] .",
    "we construct the list ` inc ` representing a family @xmath216 such that @xmath217 is a basis of the truncated alexander invariant  @xmath218 .",
    ".... grupolistapos = list_of_relations_2(ordenpos , wiringpos ) grupolistaneg = list_of_relations_2(ordenneg , wiringneg ) combpos=[sorted(v[0 ] ) for v in grupolistapos ] combneg=[sorted(v[0 ] ) for v in grupolistaneg ] print \" do combinatorics coincide ? \" , sorted(combpos)==sorted(combneg ) comb= [ ] for v in combpos :      for j in v[1 : ] :          comb.append([v[0],j ] ) tot=[tuple(sorted(_.list ( ) ) ) for _ in subsets([1 .. n],2 ) ]   inc= [ _ for _ in tot if list ( _ ) not in comb ] ....    we construct several rings .",
    "we start with @xmath219 $ ] .",
    "the variables of this ring are the unknowns of the final linear system .",
    "we define a dictionnary ` yy ` to track the variables of  @xmath104 using the the triples @xmath220 .",
    "the ring ` lr ` is the laurent polynomial ring @xmath221=\\mathbb{z}[h]$ ] and ` lrv ` is @xmath222=\\mathbb{z}[h]$ ] while @xmath223 $ ] , @xmath224 $ ] and @xmath225 $ ] .",
    "the dictionnaries ` dic ` and ` dicv ` realize the substitution @xmath226 in each ring .    .... xx = var(['v%da%db%d'% ( k , i , j ) for k in [ 1",
    ".. n ] for ( i , j ) in inc ] ) s = polynomialring(zz , xx ) yy= { } for k in [ 1",
    ".. n ] :      for l in range(len(inc ) ) :          yy[k , inc[l][0],inc[l][1]]=s.gen((k-1)*len(inc)+l ) lr = laurentpolynomialring(zz,'t',n ) lrv = lr.change_ring(s ) r = lr.polynomial_ring ( ) t = powerseriesring(s,'s',num_gens = n , default_prec=2 ) t0=t.change_ring(zz ) homlrt0=r.hom([1+v for v in t0.gens()],codomain=t0,check=true ) dic={v : homlrt0(v ) for v in lr.gens ( ) } dicv={v : homlrt0(v).change_ring(s ) for v in lrv.gens ( ) }   ....      .... m = freemodule(lr , n*(n-1)/2 ) mt = m.change_ring(t0 ) mv = m.change_ring(t ) xx={tot[i]:m.gen(i ) for i in range(n*(n-1)/2 ) } for i in range(1,n+1 ) :      xx[i , i]=m(0 )      xx[-i ,-",
    "i]=m(0 )      xx[i ,-",
    "i]=m(0 )      xx[-i , i]=m(0 )      for j in range(i+1,n+1 ) :          xx[-i , j]=-tt([i],lr)^-1*xx[i , j ]          xx[i ,- j]=-tt([j],lr)^-1*xx[i , j ]          xx[-i ,- j]=tt([i],lr)^-1*tt([j],lr)^-1*xx[i , j ]          xx[j , i]=-xx[i , j ]          xx[-j , i]=-xx[i ,- j ]          xx[j ,- i]=-xx[-i , j ]          xx[-j ,- i]=-xx[-i ,- j ]   ....    we translate the relations of both groups as elements of the module  @xmath227 .",
    "we write down both sets of relations as matrices ( the number of rows is the number of relations and columns related to all the @xmath228 and we translate them into the series ring .",
    "the matrix ` sustneg ` expresses all the @xmath228 in terms of those such that @xmath230 .    .... relalexpos= [ ] for v in grupolistapos :      relalexpos+=commcyclic1(v , f , lr , xx , dir='lr ' ) print \" alexander invariant for first group \" relalexneg= [ ] for v in grupolistaneg :      relalexneg+=commcyclic1(v , f , lr , xx , dir='lr ' ) nrels = len(relalexneg ) print \" alexander invariant for the second group \" relalexseriepos = matrix([vector(w.subs(dic ) for w in v.list ( ) ) for v in relalexpos ] ) relalexserieneg = matrix([vector(w.subs(dic ) for w in v.list ( ) ) for v in relalexneg ] ) sustneg = escalonarm2(relalexserieneg , n ) print \" the relations are used to write every one in terms of the basis inc \"   ....    [ pasomorfismo ] the main point is to test if there is a homomorphism @xmath231 such that @xmath232 is sent to @xmath233^{x_{k , i , j}}\\bmod \\tilde{\\gamma}_4(g)$ ] .",
    "we express the image of @xmath234 $ ] as an element in  @xmath235 ( this is by far the most long computation ! ) . with this data , we compute the image of the relations of @xmath236 , which will be now words in the truncated alexander invariant @xmath237 .      ....",
    "totimagenmorfismo= [ ] for u in tot :      v = imagenmorfismo(u , xx , yy , s , lrv , dicv , inc )      totimagenmorfismo.append(v )      if u[-1]==n :          print \" finished pairs with line \" , u[0 ]           relalexvarpos= [ ] for ser in relalexseriepos :      vct=0      for j in range(n*(n-1)/2 ) :          vct+=ser[j].change_ring(s)*totimagenmorfismo[j ]      relalexvarpos.append(vct ) relalexvarpos = mattrunc(matrix(relalexvarpos ) ) relalexvarpos = mattrunc(relalexvarpos*sustneg.change_ring(t).transpose ( ) ) print \" images of relations of first group in terms of the basis inc in the second group , done \"    relzpos= [ ] for prueba in relalexvarpos :      relzpos.append(vector(flatten([[pr1.derivative(v).constant_coefficient ( ) for v in t.gens ( ) ] for pr1 in prueba ] ) ) ) relzpos = matrix(nrels , relzpos ) print \" integral matrix from relations \" ....    in order to compute @xmath240 we need to add the relations given by jacobi identities as @xmath241-linear combinations in @xmath242 .",
    "we quotient the previous free module by this relation . in this case",
    "we obtain a free abelian module ; we pass from @xmath188 relations to @xmath185 .    ....",
    "jcb= [ ] for i in range(1,n-1 ) :      for j in range(i+1,n ) :          for k in range(j+1,n+1 ) :              jcb+=[t0.gen(i-1)*xx[j , k].change_ring(t0)+t0.gen(j-1)*xx[k , i].change_ring(t0)+t0.gen(k-1)*xx[i , j].change_ring(t0 ) ] jcb = matrix(jcb ) jcb1=mattrunc(jcb*sustneg.transpose ( ) ) jcb2=matrix(jcb.nrows(),flatten([[v.derivative(w).constant_coefficient ( ) for w in t0.gens ( ) ] for v in jcb1.list ( ) ] ) ) print \" simplified jacobi relations as integral matrix done \" sf , u , v = jcb2.smith_form ( ) jdiag=[sf[v , v ] for v in range(sf.rank ( ) ) ] if set(jdiag)!=set([1 ] ) :      print \" torsion at level 2 \" print \" smith form of jacobi relations , done \" , sf.ncols()-sf.rank ( ) , \" generators left \"   ....    we write down the relations taking into account jacobi relations .",
    "the equations are all the coefficients in the basis .",
    "we solve the linear equation of @xmath189  equations and @xmath190  unknowns .",
    "the system has relations over  @xmath191 but not over  @xmath241 ( the smallest ring is @xmath193 $ ] ) .    .... eqs=(relzpos*v).matrix_from_columns([sf.rank() ..",
    "jcb2.ncols()-1 ] ) eqs1= [ _ for _ in list(set(eqs.list ( ) ) ) if _ ! = 0 ] print len(eqs1 ) , \" equations in \" , len(inc)*n , \" unknowns . \"",
    "aeq = matrix([vector(eq.monomial_coefficient(v ) for v in s.gens ( ) ) for eq in eqs1 ] ) beq = vector(-eq.constant_coefficient ( ) for eq in eqs1 ) print \" ranks : \" , aeq.rank(),aeq.augment(beq).rank ( ) u1,u2,u3=aeq.smith_form ( ) diageq=[u1[v , v ] for v in range(u1.rank ( ) ) ] diageq1= [ _ for _ in diageq if _ !",
    "= 1 ] print \" ones in the diagonal of the smith form : \" , diageq.count(1 ) print \" rest of the diagonal of the smith form : \" , diageq1 print \" non integers in the particular solution : \" , [ _ for _ in u1.solve_right(u2*beq ) if _ not in zz ] ....      1 .   ` delta ` + input : :    a list of consecutive numbers @xmath243 $ ] and a braid    group .",
    "output : :    the half - twist braid involving the strands @xmath244 .",
    "+ .... def delta(lista , b ) :      res = b(1 )      l = copy(lista)[:-1 ]      while len(l)>0 :          res = res*b(l )          l = l[:-1 ]      return res .... 2 .   `",
    "clean_conj ` + input : :    a list of numbers @xmath243 $ ] and a free group . the list    of numbers represents the tietze representation of an    element  @xmath245 in the free group ( with    generators  @xmath161 ) .",
    "output : :    it returns ` none ` if @xmath245 is not conjugate to a generator .",
    "if it is , it returns a list @xmath246,[j_1,\\dots , j_r]]$ ] such    that @xmath247 .",
    "+ .... def clean_conj(lista , f ) :      n = len(lista )      if n%2==0 :          print \" not conjugate to a generator \"          return none      m = zz((n-1)/2 )      a = lista[m ]      b = lista[m+1 : ]      if f(b)*f(lista[:m])!=f(1 ) :          print \" not conjugate to a generator \"          return none      return [ a , b ]          .... 3 .",
    "[ s - relations ] ` list_of_relations_2 ` + input : :    a permutation to indicate the order of the lines in the beginning and    a wiring diagram , see .",
    "for each crossing we give a list with two    members : the braid from the previous crossing , and the lines in the    crossing .",
    "we assume a generic wiring diagram .",
    "output : :    it returns the presentation of the group , as a list of elements with    two entries ; the first one is a list @xmath248 $ ] ,    @xmath249 ; the second one is a list of @xmath250    lists , which represent the tietze representation of words    @xmath251 .",
    "this element means that    @xmath252 commutes    with @xmath253 ( note that in    other papers the reversed product is used ) .",
    "+ .... def list_of_relations_2(orden0,wiring0 ) :      wiring=[[b(_[0]),_[1]]for _ in wiring0 ]      res1= [ ]      trenza = b(1 )      orden = copy(orden0 )      for cruce in wiring :          u , v = cruce          orden=(u^-1).permutation()*orden          trenza = trenza*u          w=[orden.inverse ( ) ( _ ) for _ in v ]          res1.append([trenza,v,w,orden ] )          trw = delta(w , b )          trenza = trenza*trw",
    "orden = trw.permutation().inverse()*orden      final= [ ]      for aa in res1 :          lis= [ ]          for i in aa[2 ] :              accion=[_.sign()*orden0(_.abs ( ) ) for _ in ( f([i])*aa[0]^-1).tietze ( ) ]              listas = clean_conj(accion , f )              if listas==none :                  print ' problems '                  return none              else :                  lis+=[listas ]          datos1=[[_[0 ] for _ in lis],[_[1 ] for _ in lis ] ]          final+=[datos1 ]      return final .... 4 .   ` tietzelist ` + input : :    a word in the free group .",
    "output : :    a list with its tietze representation .",
    "+ .... def tietzelist(w ) :      return list(w.tietze ( ) ) .... 5 .   ` commprod1 ` + input : :    a number @xmath254 , a list representing a    element  @xmath245 in the free group , the free group    @xmath255 and the ring of laurent polynomials in    @xmath256 variables and a dictionnary ` x ` associating to each    @xmath257 $ ] an element in the free module over the laurent    ring polynomial .",
    "output : :    the element @xmath258 $ ] written as an element of the    alexander invariant  @xmath227 .",
    "+ .... def commprod1(a , l1,f , lr , xx ) :      ll1=list(f(l1).tietze ( ) )      if len(ll1)==0 :          return m(0 )      return xx[a , ll1[0]]+tt([ll1[0]],lr)*commprod1(a , ll1[1:],f , lr , xx ) .... 6 .   `",
    "commcyclic1 ` + input : :    a list  @xmath259 , like the output of ` list_of_relations_2 ` , the    free group @xmath255 and the ring of laurent    polynomials in @xmath256 variables , a dictionnary ` x `    associating to each @xmath257 $ ] an element in the free module    over the laurent ring polynomial and a variable indicating the    direction of the product yielding the local central element ( set by    default to ` rightleft ` ) .",
    "output : :    the list of elements in the alexander invariant induced by the    relations given by  @xmath259 .",
    "+ .... def commcyclic1(l , f , lr , xx , dir='rl ' ) :      res= [ ]      r = len(l[0 ] )      comb = l[0 ]      mn = comb.index(min(comb ) )      l1=[v[mn:]+v[:mn ] for v in l ]      lf=[f([-u for u in reversed(l1[1][j])]+[l1[0][j]]+l1[1][j ] ) for j in range(r ) ]      for j in range(1,r ) :          u = f(l1[1][j ] )          if dir=='rl ' :              lfp= [ _ for _ in reversed(lf[j+1:]+lf[:j ] ) ]          elif dir=='lr ' :              lfp = lf[j+1:]+lf[:j ]          w = u*prod(lfp)*u^-1          res+=[commprod1(l1[0][j],list(w.tietze()),f , lr , xx ) ]      return res .... 7 .   `",
    "tt ` + input : :    a list of non - zero integers and a ring of laurent polynomials in    @xmath256 variables .",
    "output : :    the monomial defined by the list .",
    "+ .... def tt(i , ring ) :      return prod([lr.gen(zz(j).abs()-1)^(zz(j).sign ( ) ) for j in i ] ) .... 8 .   ` mattrunc ` + input : :    a matrix with coefficient in a power series ring .",
    "output : :    the matrix where each entry has been truncated to    level  @xmath175 .",
    "+ .... def mattrunc(mat ) :      a = mat      m = a.nrows ( )      return matrix(m,[v.truncate(2 ) for v in a.list ( ) ] ) .... 9 .   `",
    "escalonarm2 ` + input : :    a matrix over the power series ring representing a list of homogeneous    linear equations with unknowns @xmath228 and the number of    lines  @xmath256 .",
    "output : :    let @xmath145 as in ; each column of this matrix is    the expression of the corresponding @xmath228 in terms of    the elements  @xmath260 , @xmath261    in the alexander invariant over the power series ring .",
    "+ .... def escalonarm2(matriz , n ) :      u = matriz      u0=matrix(u.nrows(),[v.constant_coefficient ( ) for v in u.list ( ) ] )      a , b = u0.echelon_form(transformation = true )      u1=b*u      apivot= [ ]      j=0      for i in range(a.rank ( ) ) :          while a[i , j]==0 :              j = j+1          apivot.append(j )      for i in range(a.rank ( ) ) :          j = apivot[i ]          u1.rescale_row(i,u1[i,j]^-1 )          for k in range(i)+range(i+1,a.nrows ( ) ) :              u1.add_multiple_of_row(k,i,-u1[k,j ] )      sustneg = identity_matrix(t0,n*(n-1)/2 )      for i in range(a.rank ( ) ) :          for   j in range(n*(n-1)/2 ) :              sustneg[j , apivot[i]]=-u1[i , j].truncate(2).polynomial ( )      sustneg = sustneg.delete_rows(apivot )      return sustneg .... 10 . `",
    "imagenmorfismo ` + input : :    a list @xmath257 $ ] representing the commutator    @xmath228 , a dictionnary ` xx ` associating to each    @xmath257 $ ] an element in the free module over the laurent    ring polynomial , a dictionnary ` yy ` associating to each    @xmath262 $ ] the unknown @xmath263 ,    representing    @xmath264\\equiv ( t_k-1)x_{i , j}\\equiv \\sigma_kx_{i , j}$ ] ,    @xmath104 is a polynomial ring , ` lrv ` is the laurent ring with    coefficients in the unknowns , ` dicv ` is the evaluation    @xmath226 and ` inc ` is as in .",
    "output : :    we consider the group of .",
    "this function uses it to express the image    of @xmath228 .",
    "+ .... def imagenmorfismo(l , xx , yy , s , lrv , dicv , inc ) :      i , j = l      res = xx[l].change_ring(s )      ai = tt([i],lrv).subs(dicv )      aj = tt([j],lrv).subs(dicv )      aij=(ai*aj).truncate(2 )      bij=(ai - aij )      cij=(aj - aij )      res+=sum([(bij*yy[i , u , v]-cij*yy[j , u , v])*xx[u , v].change_ring(s ) for ( u , v ) in inc ] )      return res ...."
  ],
  "abstract_text": [
    "<S> in a previous work , the third named author found a combinatorics of line arrangements whose realizations live in the cyclotomic group of the fifth roots of unity and such that their non - complex - conjugate embedding are not topologically equivalent in the sense that they are not embedded in the same way in the complex projective plane . that work does not imply that the complements of the arrangements are not homeomorphic . in this work </S>",
    "<S> we prove that the fundamental groups of the complements are not isomorphic . </S>",
    "<S> it provides the first example of a pair of galois - conjugate plane curves such that the fundamental groups of their complements are not isomorphic ( despite the fact that they have isomorphic profinite completions ) . </S>"
  ]
}
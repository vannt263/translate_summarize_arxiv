{
  "article_text": [
    "randomized load balancing , where a job is assigned to a server from a small subset of randomly chosen servers , is very simple to implement , and can surprisingly deliver better performance ( for example , reducing collisions , waiting times , and backlogs ) in a number of applications , such as , data centers , capacity allocation , hash tables , distributed memory machines , path selection , and task scheduling .",
    "the supermarket model is a dynamic randomized load balancing method , and its original idea may be inspired by operation mechanism of supermarket checkout in a large supermarket . because the supermarket model has simple operations , quick response , dynamical real - time management , and many other advantages , it has been regarded as one of the most effective technologies in the study of large - scale stochastic networks with resource management and task scheduling .    during the last two decades considerable",
    "attention has been paid to studying the supermarket models through queueing theory as well as markov processes . since",
    "a simple supermarket model was discussed by mitzenmacher @xcite , vvedenskaya et al . @xcite and turner @xcite ,",
    "subsequent papers have been published on this theme , among which , see , vvedenskaya and suhov @xcite , mitzenmacher et al .",
    "@xcite , graham @xcite , luczak and norris @xcite , luczak and mcdiarmid @xcite , brightwell and luczak @xcite , bramson et al .",
    "@xcite , li and lui @xcite , li et al .",
    "@xcite and li @xcite . for the fast jackson networks ( or the supermarket networks ) , readers may refer to martin and suhov @xcite , martin @xcite and suhov and vvedenskaya @xcite .",
    "on the other hand , janssen @xcite applied the discrete - time markov reward processes as well as the discrete - time markov decision processes to the study of supermarket models with @xmath0 identical servers .",
    "the stability of more general supermarket models was discussed by foss and chernova @xcite , bramson @xcite and macphee et al .",
    "@xcite .",
    "there are some successful research on various markov reward processes , important examples include reibman et al .",
    "@xcite , ciardo et al .",
    "@xcite , qureshi and sanders @xcite , telek et al .",
    "@xcite , de souza e silva and gail @xcite , telek and rcz @xcite , telek et al .",
    "@xcite , li and cao @xcite , stefanov @xcite , stenberg et al .",
    "@xcite , and two books by cao @xcite and li @xcite .",
    "little work has been done on analysis of the supermarket models with different servers , which is more difficult and challenging due to high complexity and percipient subjectivity of designing a fair routine selection mechanism with respect to the different servers .",
    "specifically , a practical understanding can indicate that such a routine selection mechanism may depend on the queue lengths , on the service rates , on the probability of individual preference and so forth .",
    "janssen @xcite described a simple intuitive outline of discussing the supermarket model with different servers , and demonstrated that analysis of the supermarket model with different servers will be an interesting and difficult topic in the future research . based on this , li et al .",
    "@xcite provided a birth - death reward process for the supermarket model with different servers , and established a system of functional reward equations which can be solved by a value iterative algorithm .",
    "it is worth noting that this paper uses a more general markov reward process to set up the segmented stochastic integrals of the random reward function in the supermarket model with different servers  by means of an event - driven technique , which is shown to be useful for performance simulation of a more general large - scale stochastic system .",
    "in addition to this , we would like to remark two key points : ( 1 ) although the mean - field theory is an effective method in the study of supermarket models with the same servers ( e.g. , see vvedenskaya et al .",
    "@xcite , li et al .",
    "@xcite and li and lui @xcite ) , the complicated routine selection mechanism with respect to the different servers makes setting up the systems of mean - field equations more difficult . to our best knowledge , up to now no paper has applied the mean - field theory to the study of supermarket models with different servers .",
    "( 2 ) the generating functions are always classical and effective for performance evaluation of many practical stochastic systems , but they are not convenient to deal with a multi - dimensional problem , and are also very difficult to analyze a system of nonlinear equations .",
    "the main contributions of this paper are twofold .",
    "the first one is to describe a supermarket model with different servers , in which the arrival and service processes are given in a detailed discussion , and the reward value at each state is chosen from some practical points of view .",
    "we show that the arrival process of this supermarket model is very complicated due to a routine selection mechanism that depends on the queue lengths , on the service rates , on the probability of individual preference and so forth .",
    "also , it is seen that the routine selection mechanism is very different from that in the supermarket model with same servers , where our construction of this routine selection mechanism is based on the utility functions so that the subjective behavior of customers is also covered in the routine selection mechanism .",
    "the second one is to set up a multi - dimensional continuous - time markov reward process , and provide a segmented stochastic integral for expressing the random reward function in a finite time interval through an event - driven technique .",
    "furthermore , we calculate the mean of the discounted reward function in an infinite time interval . based on this , we give a simple discussion on optimal criterions for designing the supermarket model with different servers . also , we provide some simulation experiments to indicate how the expected queue length of each server depends on some key parameters of this supermarket model .",
    "the remainder of this paper is organized as follows . in section 2 , we first describe a supermarket model with @xmath1 different servers . then we construct a routine selection mechanism that depends on the queue lengths , on the service rates , on the probability of individual preference and so forth . in section 3 , we set up an @xmath1-dimensional continuous - time markov reward process , and provide a segmented stochastic integral for expressing the random reward function in a finite time interval through an event - driven technique .",
    "in section 4 , applying the segmented stochastic integral , we compute the mean of the random reward function in a finite time interval . in section 5 , we compute the mean of the discounted reward function in an infinite time interval .",
    "based on this , we provide two optimal criterions for designing the supermarket model with different servers . in section 6 , we provide some simulation experiments to indicate how the expected queue length of each server depends on some key parameters of this supermarket model .",
    "some concluding remarks are given in section 7 .",
    "in this section , we first describe a supermarket model with @xmath1 different servers . then we construct a routine selection mechanism that depends on the queue lengths , on the service rates , on the probability of individual preference and so forth .",
    "in the supermarket model , there are @xmath1 different servers whose waiting rooms are all infinite .",
    "the service times in each server are i.i.d . and are exponential , and also the service rates of the @xmath1 different servers are denoted as @xmath2 , respectively .",
    "the arrivals of customers are a poisson process with arrival rate @xmath3 .",
    "because the servers are different , it is a key to optimize the service ability of this supermarket model through designing a better routine selection mechanism .",
    "in fact , designing such a better routine selection mechanism will become not only complicated but also subjective due to the difference of the @xmath1 servers .",
    "the physical structure of this supermarket model is shown in figure 1 .    in what follows",
    "we will provide a detailed description for how to construct such a better routine selection mechanism .",
    "notice that our method for constructing the routine selection mechanism is intuitive and heuristic according to some practical points of view .        from figure 1",
    ", it is seen that for the @xmath1 different servers , each arriving customer joins a server ( or queue ) according to a suitable routine selection mechanism . from a practical point of view",
    ", each arriving customer chooses one server based on at least three crucial factors : ( 1 ) choosing one server with the largest service rate , ( 2 ) choosing one server with the shortest queue length , and ( 3 ) choosing one server with the maximal probability of individual preference .",
    "we write@xmath4 which is the vector of the queue lengths in the @xmath1 servers;@xmath5 which is a probability vector of individual preference for choosing one of the @xmath1 servers",
    ". in general , the individual preference is based on the priori knownledge , and the present feeling etc . ; and@xmath6 it is worth noting that the two vectors @xmath7 and @xmath8 are always inherent in the system , but the vector @xmath9 of queue lengths can change dynamically according to a customer arrival or a service completion .",
    "based on the above analysis , let @xmath10 be a routine selection function which represents the measurement of choosing the @xmath11th server for @xmath12 , where @xmath13 satisfies three conditions : ( 1 ) @xmath13 is increasing for @xmath14 , ( 2 ) @xmath13 is decreasing for @xmath15 , and ( 3 ) @xmath13 is decreasing for @xmath16 $ ] .",
    "we assume that if@xmath17 then the arriving customer joins the @xmath18th server among the @xmath1 servers .",
    "it indicates that an arriving customer likes the server with the minimal value in the set of routine selection functions@xmath19    from the routine selection function , now we further describe the routine selection mechanism as follows :    * the routine selection mechanism : * each arriving customer chooses @xmath20 servers independently and uniformly at random from the @xmath1 servers , and joins the server with the smallest number in @xmath21 , where the @xmath22 selected servers are denoted as servers @xmath23 .",
    "if there is a tie , servers with the smallest number in @xmath24 will be chosen randomly . all customers in any server",
    "will be served in the first come first service ( fcfs ) manner .",
    "we assume that all the random variables defined for the arrival and service processes are independent of each other .",
    "in what follows we provide some useful interpretation for each element in the set @xmath25 of routine selection functions .",
    "* interpretation one : * @xmath10 * has some useful forms *    note that @xmath13 needs to satisfy the above three monotone conditions for each element in one of the three vectors @xmath9 , @xmath8 and @xmath7 , thus such a function @xmath26\\rightarrow \\mathbf{r}^{+}$ ] can be chosen easily , where @xmath27 and @xmath28 . to that end , we give some examples to indicate how to construct such a function @xmath29 as follows :    \\(1 ) a tandem - type decision - making method    for the three decision variables @xmath30 , @xmath31 and @xmath32 , we set up a tandem - type decision - making structure as @xmath33 , thus it is seen from a normalization that the routine selection function is given by@xmath34   } , \\text { \\ } i=1,2,\\ldots , m.\\ ] ]    \\(2 ) a weighted - type decision - making method    for the three decision variables @xmath30 , @xmath31 and @xmath32 ,",
    "we take a weighted - type decision - making structure as @xmath35 , where the weighted coefficients satisfy that @xmath36 and @xmath37 , thus the routine selection function is given by@xmath38   } , \\text { \\ } i=1,2,\\ldots , m.\\ ] ]    * interpretation two : there exist multiple minimal elements in * @xmath24    for @xmath39 , set@xmath40 then we have two cases : ( 1 ) @xmath41 contains only one element , and ( 2 ) @xmath41 contains multiple elements . for the former , the routine selection of the arriving customer is simple for choosing server @xmath18 ; while for the latter , the routine selection of the arriving customer has a little complicated , for example , a simple mode is taken as that if there is a tie , servers with the smallest number in @xmath41 will be chosen randomly , e.g. , see vvedenskaya et al .",
    "@xcite and mitzenmacher @xcite .    to use more information in the set @xmath41",
    ", we may set up some new routine selection ways . if there is a tie ( that is",
    ", @xmath42 contains multiple elements ) , then servers with the smallest number in @xmath41 may be chosen by means of other ways , for example , either    \\(1 ) for all the different elements in @xmath41 , the arriving customer joins the server with the biggest service rate ;    \\(2 ) for all the different elements in @xmath41 , the arriving customer joins the server with the shortest queue length ;    \\(3 ) for all the different elements in @xmath41 , the arriving customer joins the server with the maximal probability of individual preference ; or    \\(4 ) some hybrid combination from the above ( 1 ) , ( 2 ) and ( 3 ) .    in this paper",
    ", we will not discuss the above four cases , which are interesting and will be studied in our future work .    * interpretation three : useful relations between our above model and the ordinary supermarket model *    on the one hand , when @xmath43 and @xmath44 , it is seen that@xmath45 which shows that the routine selection of the arriving customer only depends on the vector @xmath46 , hence the arriving customer joins the server with the shortest queue length , e.g. , see vvedenskaya et al .",
    "on the other hand , we remark that the probability vector @xmath47 of individual preference can give rise to the study of modern supermarket business or network economy .    in the supermarket model with different servers ,",
    "data collection and analysis is also a key task .",
    "therefore , it is interesting that the routine selection mechanism can be designed from a data - based practical point of view .",
    "this will motivate statistical analysis of supermarket models with different servers from many real areas .",
    "in this section , we set up an @xmath1-dimensional continuous - time markov reward process , and provide a segmented stochastic integral for expressing the random reward function in a finite time interval through an event - driven technique .",
    "in order to set up a continuous - time markov reward process , we need to discuss the arrival and service processes , both of which lead to the state jumps of this markov reward process . at the same time , we choose a suitable reward value at each state in this supermarket model .    *",
    "( 1 ) analysis of the arrival processes *    in this supermarket model , the arrival process of customers is a poisson process with arrival rate @xmath3 .",
    "each arriving customer chooses @xmath22 servers independently and uniformly at random from the @xmath1 servers , and joins one server with the smallest number in the set @xmath21 .",
    "if there is a tie , servers with the smallest number in the set @xmath48 will be chosen randomly .    in order to express the routine selection mechanism of each arriving customer ,",
    "we need to introduce an _ ascending _ function @xmath49   ^{m}\\rightarrow\\left [   0,1\\right ]   ^{m}$ ] as follows:@xmath50 for @xmath51 , where@xmath52    for the ascending function @xmath53 , it is necessary to explain the order numbers @xmath54 for @xmath55 .",
    "note that @xmath54 denotes the @xmath54th element of the original order number vector @xmath56 .",
    "for example , if @xmath57 , then @xmath58 .",
    "it is obvious that @xmath59 and @xmath60 ; @xmath61 and @xmath62 ; and @xmath63 and @xmath64 . in general , for these order numbers before and after sorting , we provide their corresponding relation in figure 2 .",
    "servers , width=340 ]    based on the ascending function with the sorting process , it is a key how to describe the arrivals of customers at each server in this supermarket model .",
    "it is worthwhile to note that janssen @xcite gave an effective method for analyzing the ascending function as well as the arrival processes at the @xmath1 different servers . here",
    ", we provide a detailed description for the janssen s method as follows .    for a sorted vector @xmath9 with @xmath65",
    ", it follows from ( 3.6 ) and ( 3.7 ) in janssen @xcite that the probability that the arriving customer first randomly selects @xmath22 servers from @xmath1 servers , and then enters the @xmath11th server ( that is , the @xmath11th shortest queue is also in the @xmath22 selected servers ) is given by@xmath66{ll}d\\frac{(m - i)!(m - d)!}{(m - i - d+1)!(m ) ! } , & \\text { \\ } 1\\leq i\\leq m - d+1,\\\\ 0 , & \\text { \\ } m - d+2\\leq i\\leq m , \\end{array } \\right .",
    "\\label{equ3 - 3}\\ ] ] and specifically , we may randomly give a sort for these servers whose queue lengths are equal . at the same time , lemma 3.2.1 in janssen @xcite proved that for @xmath67,@xmath68    now , we explain the probability @xmath69 for sorted vector @xmath9 with @xmath70 .    as seen from figure 3 ,",
    "notice that the arriving customer first randomly selects @xmath22 servers from the @xmath1 servers , and enters one server with the shortest queue length among the @xmath22 selected servers ( if there is a tie , then servers with the shortest queue length will be chosen randomly ) , thus the routine selection mechanism is converted to the probability @xmath69 of entering the @xmath11th server for @xmath71 . therefore , @xmath72 is the arrival rate that the customers arrive at the server with the @xmath11th shortest queue length among the @xmath1 servers .    , width=377 ]    for the ascending function @xmath53 which is similar to the sorted vector @xmath9 with @xmath73 , it is easy to see that the janssen s method still work",
    ". thus , for the @xmath11th element in @xmath74 ( that is , the @xmath54th element in @xmath75 , this corresponds to the @xmath54th server in this supermarket model ) , using ( [ equ3 - 4 ] ) we obtain@xmath76{ll}d\\frac{(m - k_{i})!(m - d)!}{(m - k_{i}-d+1)!(m ) ! } , & \\text { \\ } 1\\leq k_{i}\\leq m - d+1,\\\\ 0 , & \\text { \\ } m - d+2\\leq k_{i}\\leq m. \\end{array } \\right.\\ ] ] obviously , we also have@xmath77    according to the probability @xmath78 , it is clear that the arrivals of customers at the @xmath54th server is a poisson process with arrival rate @xmath79 for @xmath12 .",
    "hence , the poisson arrival rate at the @xmath54th server is given by@xmath80{ll}\\lambda d\\frac{(m - k_{i})!(m - d)!}{(m - k_{i}-d+1)!(m ) ! } , & \\text { \\ } 1\\leq k_{i}\\leq m - d+1,\\\\ 0 , & \\text { \\ } m - d+2\\leq k_{i}\\leq m. \\end{array } \\right .",
    "\\label{eq3 - 5}\\ ] ]    * ( 2 ) analysis of the service processes *    analysis of the service processes is simpler than that of the above arrival processes in this supermarket model .",
    "let @xmath81 be an indicator function of the event : @xmath82 , that is,@xmath83{cc}1 , & \\text { \\ } x_{i}>0,\\\\ 0 , & \\text { \\ } x_{i}=0 .",
    "\\end{array } \\right.\\ ] ] the service rate of the @xmath11th server may be written as @xmath84 , because the server is idle when there is no customer ( i.e. , @xmath85 ) in this server .    * ( 3 ) choosing a suitable reward value at each state *    note that @xmath86 , it is obvious that if the value @xmath87",
    "/\\delta_{k_{m}}(x)$ ] is bigger , then the customers in the @xmath1 servers are not distributed well . on the contrary , if the value @xmath87   /\\delta_{k_{m}}(x)$ ] is smaller , then the customers in the @xmath1 servers are load balanced very well .",
    "thus , our purpose of designing and optimizing this supermarket model is to make the value @xmath87",
    "/\\delta_{k_{m}}(x)$ ] as small as possible . at the same time",
    ", it is easy to see that@xmath88 based on the above analysis , we may choose two different reward values at state @xmath9 as follows:@xmath89 and@xmath90 notice that we use the two reward values : @xmath91 and @xmath92 , to be able to provide a better observation on performance of this supermarket model , which will be studied in subsection 5.2 .    in the remainder of this section",
    ", we introduce a useful continuous - time markov process , which will be used to give performance computation and performance simulation in the supermarket model with different servers .",
    "let @xmath93 be the number of customers in the @xmath94th server of this supermarket model at time @xmath95 , and@xmath96 obviously , @xmath97 is an @xmath1-dimensional continuous - time markov process on the space state @xmath98 .",
    "let @xmath99 be a real function for @xmath100 , and @xmath101 denote a reward value of this markov process @xmath102 at state @xmath9 . based on this ,",
    "we define a random reward function as@xmath103 which is a stochastic integral , e.g. , see chapter 10 in li @xcite for more details .    in what follows we propose an event - driven technique to deal with the random reward function @xmath104 . to this end ,",
    "we denote by @xmath105 the @xmath106 successive state jump points of the markov process @xmath97 in the finite time interval @xmath107   $ ] , it is clear that@xmath108 note that @xmath109 , and @xmath110 is a state jump time of markov process @xmath97 , thus it is helpful for understanding the stochastic integral @xmath111d@xmath112 under an interval decomposition as follows : @xmath113   = [ 0,\\eta_{1}^{-})\\cup\\lbrack\\eta_{1},\\eta_{2}^{-})\\cup\\lbrack\\eta_{2},\\eta_{3}^{-})\\cdots\\cup\\lbrack\\eta_{n-1},\\eta_{n}^{-})\\cup\\lbrack\\eta_{n},t],\\ ] ] it follows from ( [ eq3 - 8 ] ) and ( [ eq3 - 9 ] ) that@xmath114 which is a segmented stochastic integral for expressing the random reward function @xmath104 .",
    "note that this segmented stochastic integrals will be useful in our later study .",
    "in this section , we use an event - driven technique to compute the mean of the random reward function in a finite time interval , where our computation is based on the above segmented stochastic integral , which is expressed through the successive state jump points generated by either customer arrivals or service completions .    from ( a ) in figure 4 ,",
    "let @xmath115 be a poisson process with parameter @xmath116 .",
    "then for @xmath117@xmath118    , width=377 ]    we assume that the random sequence @xmath119 is i.i.d . and",
    "is exponential with mean @xmath120 .",
    "let @xmath121 .",
    "then @xmath122 , and @xmath123 . from section 2.3 in ross @xcite",
    ", it is easy to see that@xmath124 let the @xmath106-dimensional probability distribution be@xmath125 and the @xmath106-dimensional probability density function@xmath126 then it follows from theorem 2.3.1 in ross @xcite that@xmath127 at the same time , theorem 2.3.1 in ross @xcite demonstrates that given that @xmath128 , the @xmath106 arrival times @xmath129 have the same distribution as the order statistics corresponding to @xmath106 independent random variables uniformly distributed on the interval @xmath130 .",
    "thus , using the condition : @xmath131 , we obtain@xmath132   = e\\left [   \\eta_{2}-\\eta_{1}\\right ]   = \\cdots = e\\left [ \\eta_{n}-\\eta_{n-1}\\right ]   = e\\left [   t-\\eta_{n}\\right ]   = \\frac{t}{n+1}. \\label{4.0}\\ ] ]    it is seen from ( a ) and ( b ) in figure 4 that for @xmath133 , the markov process @xmath97 transits to state @xmath134 from state @xmath135 ( i.e. , a state jump ) , where state @xmath136 may be either state @xmath137 due to a service completion by server @xmath138 for @xmath139 , or state @xmath140 due to a customer arrival at server @xmath54 with the routine selection mechanism for @xmath55 .",
    "note that @xmath141 and @xmath142 for @xmath143 , thus we have@xmath144    let @xmath145 be the @xmath106th inter - arrival time of the poisson process with arrival rate @xmath3 , and @xmath146 the exponential service time with service rate @xmath147 of the @xmath106th customer in server @xmath94 .",
    "then @xmath148 and @xmath149 are all i.i.d for @xmath150 . in this case",
    ", we write that @xmath151 and @xmath152 for @xmath153 . based on these random variables @xmath154 and @xmath155 for @xmath150",
    ", we can express the random events of the markov process @xmath97 at time @xmath110 as follows :    \\(1 ) an arrival at time @xmath110    in this case , we need the sufficient condition@xmath156 it is easy to compute that@xmath157    \\(2 ) a service completion in server @xmath138 for @xmath139    in this case , we need the sufficient condition@xmath158 we can that@xmath159    now , we compute the conditional mean @xmath160   $ ] , where @xmath161   = e\\left [   \\bullet\\text { } |\\text { } \\mathbf{x}\\left (   0\\right )   = x\\right ]   $ ] .",
    "we have@xmath162   =   &   \\sum_{n=0}^{\\infty}p\\left\\ {   \\mathcal{n}\\left (   t\\right ) = n\\right\\ }   e\\left [   \\phi\\left (   t\\right )   \\text { } |\\text { } \\mathbf{x}\\left ( 0\\right )   = x,\\mathcal{n}\\left (   t\\right )   = n\\right ] \\nonumber\\\\ =   &   p\\left\\ {   \\mathcal{n}\\left (   t\\right )   = 0\\right\\ }   e\\left [   \\phi\\left ( t\\right )   \\text { } |\\text { } \\mathbf{x}\\left (   0\\right )   = x,\\mathcal{n}\\left ( t\\right )   = 0\\right ] \\nonumber\\\\ &   + \\sum_{n=1}^{\\infty}p\\left\\ {   \\mathcal{n}\\left (   t\\right )   = n\\right\\ } e\\left [   \\phi\\left (   t\\right )   \\text { } |\\text { } \\mathbf{x}\\left (   0\\right ) = x,\\mathcal{n}\\left (   t\\right )   = n\\right ]   , \\label{4.1}\\ ] ]    since @xmath163 , it is clear that @xmath164 , this gives @xmath165   = e\\left [   \\int_{0}^{t}r\\left ( \\mathbf{x}\\left (   \\xi\\right )   \\right )   \\text{d}\\xi\\text { } |\\text { } \\mathbf{x}\\left (   0\\right )   = x,\\eta_{1}>t\\right ]   = r\\left (   x\\right )   t. \\label{4.2}\\ ] ]    for @xmath166 , notice that the event @xmath167 is the same as the event @xmath168 @xmath169 , thus we obtain@xmath170 \\nonumber\\\\ &   = e\\left [   \\int_{0}^{t}r\\left (   \\mathbf{x}\\left (   \\xi\\right )   \\right ) \\text{d}\\xi\\text { } |\\text { } \\mathbf{x}\\left (   0\\right )   = x,0<\\eta_{1}<\\eta _ { 2}<\\cdots<\\eta_{n}<t<\\eta_{n+1}\\right ] \\nonumber\\\\ &   = e\\left [   \\int_{0}^{\\eta_{1}^{-}}r\\left (   \\mathbf{x}\\left (   \\xi\\right ) \\right )   \\text{d}\\xi\\text { } |\\text { } \\mathbf{x}\\left (   0\\right )   = x,0<\\eta _ { 1}<\\eta_{2}<\\cdots<\\eta_{n}<t<\\eta_{n+1}\\right ] \\nonumber\\\\ &   + \\sum_{k=1}^{n-1}e\\left [   \\int_{\\eta_{k}}^{\\eta_{k+1}^{-}}r\\left ( \\mathbf{x}\\left (   \\xi\\right )   \\right )   \\text{d}\\xi\\text { } |\\text { } \\mathbf{x}\\left (   0\\right )   = x,0<\\eta_{1}<\\eta_{2}<\\cdots<\\eta_{n}<t<\\eta_{n+1}\\right ] \\nonumber\\\\ &   + e\\left [   \\int_{\\eta_{n}}^{t}r\\left (   \\mathbf{x}\\left (   \\xi\\right ) \\right )   \\text{d}\\xi\\text { } |\\text { } \\mathbf{x}\\left (   0\\right )   = x,0<\\eta _ { 1}<\\eta_{2}<\\cdots<\\eta_{n}<t<\\eta_{n+1}\\right ]   \\label{4.3}\\ ] ]    to compute ( [ 4.3 ] ) , we may observe some useful relations as follows :    \\(1 ) if @xmath171 and @xmath172 , then @xmath173 for @xmath171 .",
    "\\(2 ) for @xmath174 , if @xmath175 and @xmath176 , then @xmath177 for @xmath175 .",
    "\\(3 ) if @xmath178 $ ] and @xmath179 , then @xmath180 for @xmath178 $ ] .    based on the above useful relations , together with ( [ 4.0 ] )",
    ", we obtain@xmath181 \\\\ &   = r\\left (   x\\right )   e\\left [   \\eta_{1}^{-}\\right ]   = r\\left (   x\\right ) e\\left [   \\eta_{1}\\right ]   = r\\left (   x\\right )   \\frac{t}{n+1},\\end{aligned}\\ ] ] for @xmath182@xmath183 \\\\ &   = e\\left [   r\\left (   \\mathbf{x}\\left (   \\eta_{k}\\right )   \\right )   \\text { } |\\text { } \\mathbf{x}\\left (   0\\right )   = x,0<\\eta_{1}<\\eta_{2}<\\cdots<\\eta _ { n}<t<\\eta_{n+1}\\right ]   \\cdot e\\left [   \\eta_{k+1}^{-}-\\eta_{k}\\right ] \\\\ &   = e\\left [   r\\left (   \\mathbf{x}\\left (   \\eta_{k}\\right )   \\right )   \\text { } |\\text { } \\mathbf{x}\\left (   0\\right )   = x,0<\\eta_{1}<\\eta_{2}<\\cdots<\\eta _ { n}<t<\\eta_{n+1}\\right ]   \\cdot e\\left [   \\eta_{k+1}-\\eta_{k}\\right ] \\\\ &   = \\frac{t}{n+1}e\\left [   r\\left (   \\mathbf{x}\\left (   \\eta_{k}\\right )   \\right ) \\text { } |\\text { } \\mathbf{x}\\left (   0\\right )   = x,0<\\eta_{1}<\\eta_{2}<\\cdots<\\eta_{n}<t<\\eta_{n+1}\\right]\\end{aligned}\\ ] ] and@xmath184 \\\\ &   = e\\left [   r\\left (   \\mathbf{x}\\left (   \\eta_{n}\\right )   \\right )   \\text { } |\\text { } \\mathbf{x}\\left (   0\\right )   = x,0<\\eta_{1}<\\eta_{2}<\\cdots<\\eta _ { n}<t<\\eta_{n+1}\\right ]   \\cdot e\\left [   t-\\eta_{n}\\right ] \\\\ &   = \\frac{t}{n+1}e\\left [   r\\left (   \\mathbf{x}\\left (   \\eta_{n}\\right )   \\right ) \\text { } |\\text { } \\mathbf{x}\\left (   0\\right )   = x,0<\\eta_{1}<\\eta_{2}<\\cdots<\\eta_{n}<t<\\eta_{n+1}\\right ]   .\\end{aligned}\\ ] ] we write that for @xmath185@xmath186   .\\ ] ] it follows from ( [ 4.1 ] ) , ( [ 4.2 ] ) and ( [ 4.3 ] ) that@xmath187   = r\\left (   x\\right )   te^{-\\omega t}+\\sum_{n=1}^{\\infty}e^{-\\omega t}\\frac{\\left (   \\omega t\\right )   ^{n}}{n!}\\cdot\\frac{t}{n+1}\\left [   r\\left ( x\\right )   + \\sum_{k=1}^{n}\\re_{k}\\right ]   .",
    "\\label{eq4.1}\\ ] ] clearly , it is a key to compute the functions : @xmath188 for @xmath185 .",
    "now , we use ( [ eq4.1 ] ) to compute the conditional mean @xmath189 $ ] of the random reward function @xmath104  through an event - driven technique . to this end",
    ", our computation is decomposed in the following three steps :    * step one : compute * @xmath190   $ ]    it is seen from ( a ) and ( b ) in figure 4 that the markov process @xmath102 transits to a state @xmath191 from the initial state @xmath9 , where the state @xmath191 may be either state @xmath192 due to a service completion by server @xmath138 for @xmath139 , or state @xmath193 due to a customer arrival at server @xmath54 for @xmath71 . using the routine selection mechanism ,",
    "we have@xmath194    from ( a ) and ( b ) in figure 4 , it is seen that the computation of * * @xmath195 is decomposed into two parts : one by an arrival , and another by a service completion . thus we obtain @xmath196 where @xmath197 is the probability that an arriving customer joins server @xmath54 , and @xmath198 is the probability that a service is completed in server @xmath138 .",
    "* step two : compute * @xmath199   $ ]    it is seen from ( a ) and ( b ) in figure 4 that the markov process @xmath102 transits to a state @xmath200 from a state @xmath201 in the set@xmath202 hence we have@xmath203{ll}x - e_{j}+e_{k_{m } } , & \\text{if an arrival occurs in server } k_{m}\\text { at time } \\eta_{2},\\\\ x+e_{k_{i}}+e_{k_{m } } , & \\text{if an arrival occurs in server } k_{m}\\text { at time } \\eta_{2},\\\\ x - e_{j}-e_{l } & \\text{if a service is completed in server } l\\text { at time } \\eta_{2},\\\\ x+e_{k_{i}}-e_{l } & \\text{if a service is completed in server } l\\text { at time } \\eta_{2 } , \\end{array } \\right.\\ ] ] thus we have@xmath204 based on the above analysis , it is seen from ( a ) and ( b ) in figure 4 that@xmath205    * step three : compute * @xmath206   $ ] for @xmath207    from the above two special computations , here we will further develop the event - driven technique to calculate the conditional mean of the random reward function .    for the general term @xmath188 , our computation is more complicated than that in the above two special cases . to that end",
    ", we need to introduce some notation to record the order number of the server with either an arrival or a service completion at each of the state jump points @xmath110 for @xmath208 . observing the two expressions ( [ eq4.2 ] ) and ( [ eq4.3 ] )",
    ", the order numbers of the servers need to relate to the state jump points @xmath110 for @xmath208 . for simplicity of description ,",
    "it is necessary to list some notation in table 1 , the purpose of which is to express the state jump points and associated useful information .",
    "[ c]|c|c|c|**state jump points & * server number by arrival & * server number by service * + @xmath209 & @xmath210 & @xmath211 + @xmath212 & @xmath213 & @xmath214 + @xmath215 & @xmath215 & @xmath215 + @xmath216 & @xmath217 & @xmath218 + * * * * *    for simplification of description , when deriving some conditional means involved below , we introduce a convention notation : @xmath219 = e\\left [   e\\left [   x|y\\right ]   \\right ]   $ ] ( that is , a deterministic value ) , where @xmath220 and @xmath221 are two random variables .    from steps one and two ,",
    "it is easy to see that @xmath188 depends on the @xmath94 successive samples for the states @xmath222 for @xmath223 . to describe the states @xmath224 , we express the successive state jumps as follows : @xmath225 , where @xmath226 denote the cartesian product from the set @xmath154 to the set @xmath227 .",
    "since @xmath228 and our computation depends on the @xmath229 successive samples for the states @xmath222 for @xmath223 , we set @xmath230 , hence the first @xmath229 samples @xmath225 is used to record our previous computational process .",
    "therefore , we obtain@xmath231   .\\ ] ] in this case , we need to represent the initial state @xmath232 by means of @xmath233 for @xmath234 , thus we have@xmath235 where@xmath236@xmath237    to understand the elements in the set @xmath238 , we need the cartesian product as follows:@xmath239 where @xmath240 are four sets with finite elements .    in the set @xmath238 ,",
    "the @xmath94 elements are successively taken from the subsets @xmath241 @xmath242 , for example , @xmath243 , @xmath244 , @xmath245 ,  , @xmath246 , @xmath247 .",
    "for the successive @xmath94 elements , we have a simple computation through the following convention@xmath248@xmath249@xmath250@xmath251 based on this , we can easily give a sample of the initial state @xmath252 in the set @xmath253 .",
    "now , we compute the conditional mean @xmath254   $ ] by means of an iterative algorithm as follows :    \\(a ) for @xmath255 , we have@xmath256   = \\sum_{i=1}^{m}ak\\left (   m , k_{i},d\\right ) r\\left (   x+e_{k_{i}}\\right )   + \\sum_{i=1}^{m}b^{\\left (   j\\right )   } \\mathbf{1}_{\\left\\ {   x_{j}>0\\right\\ }   } r\\left (   x - e_{j}\\right )   .\\ ] ]    \\(b ) for @xmath257 , we have@xmath258   =   &   \\left\\ {   \\sum_{m=1}^{m}\\sum_{j=1}^{m}r\\left (   x - e_{j}+e_{k_{m}}\\right )   \\cdot b^{\\left (   j\\right )   } \\mathbf{1}_{\\left\\ {   x_{j}>0\\right\\ } } \\cdot ak\\left (   m , k_{m},d\\right )   \\right . \\\\ &   + \\left .",
    "\\sum_{m=1}^{m}\\sum_{i=1}^{m}r\\left (   x+e_{k_{i}}+e_{k_{m}}\\right ) \\cdot ak\\left (   m , k_{i},d\\right )   \\cdot ak\\left (   m , k_{m},d\\right )   \\right\\ } \\\\ &   + \\left\\ {   \\sum_{l=1}^{m}\\sum_{j=1}^{m}r\\left (   x - e_{j}-e_{l}\\right )   \\cdot b^{\\left (   j\\right )   } \\mathbf{1}_{\\left\\ {   x_{j}>0\\right\\ }   } \\cdot b^{\\left ( l\\right )   } \\mathbf{1}_{\\left\\ {   \\left (   x - e_{j}\\right )   _ { l}>0\\right\\ } } \\right . \\\\ &   + \\left .   \\sum_{l=1}^{m}\\sum_{i=1}^{m}r\\left (   x+e_{k_{i}}-e_{l}\\right ) \\cdot ak\\left (   m , k_{i},d\\right )   \\cdot b^{\\left (   l\\right )   } \\mathbf{1}_{\\left\\ {   \\left (   x+e_{k_{i}}\\right )   _ { l}>0\\right\\ }   } \\right\\ }   , \\end{aligned}\\ ] ]    \\(c ) for @xmath259 , we take an element @xmath260 , then@xmath261   =   &   \\left [   \\sum_{i_{k}=1}^{m}r\\left (   y_{k-1}+e_{k_{i_{k}}}\\right )   f\\left (   y_{k-1}\\right )   \\cdot ak\\left (   m , k_{i_{k}},d\\right ) \\right . \\nonumber\\\\ &   \\left .",
    "+ \\sum_{l=1}^{m}r\\left (   y_{k-1}-e_{l}\\right )   f\\left ( y_{k-1}\\right )   \\cdot b^{\\left (   l\\right )   } \\mathbf{1}_{\\left\\ {   \\left ( y_{k-1}\\right )   _ { l}>0\\right\\ }   } \\right ]   , \\label{eq4 - 5}\\ ] ] and @xmath262 is the probability that the state @xmath263 occurs .",
    "it is necessary to provide some interpretation for the probability @xmath262 by means of the following three examples :    * ( c-1 ) * @xmath264 due to @xmath265 .    *",
    "( c-2 ) * if @xmath266 @xmath267 , then @xmath268 ; if @xmath266 @xmath269 , then @xmath270 .    * ( c-3 ) * if @xmath271 @xmath272 , then @xmath273 ; if @xmath271 @xmath274 , then @xmath275 ; and the other two can similarly be computed and both of them are omitted here .",
    "note that @xmath276 , using ( [ eq4 - 5 ] ) we obtain@xmath277 \\nonumber\\\\ =   &   \\sum_{y_{k-1}\\in\\theta^{\\left (   k-1\\right )   } } \\left [   \\sum_{i_{k}=1}^{m}r\\left (   y_{k-1}+e_{k_{i_{k}}}\\right )   f\\left (   y_{k-1}\\right )   \\cdot ak\\left (   m , k_{i_{k}},d\\right )   \\right .",
    "\\nonumber\\\\ &   \\left .",
    "+ \\sum_{l=1}^{m}r\\left (   y_{k-1}-e_{l}\\right )   f\\left ( y_{k-1}\\right )   \\cdot b^{\\left (   l\\right )   } \\mathbf{1}_{\\left\\ {   \\left ( y_{k}\\right )   _ { l}>0\\right\\ }   } \\right ]   . \\label{eq4.6}\\ ] ]    now , we further discuss the key computation of @xmath262 whose purpose is to provide some new highlight on the calculation program .",
    "intuitively , the set of jump states : @xmath278 , can be decomposed into two subsets : one for an arrival and another for a service completion . based on this ,",
    "we record the order numbers for either the arrivals or the service completions , for example , if @xmath222 occurs at an arrival , then we record the order number as @xmath279 ; while if @xmath280 occurs at a service completion , then we record the order number as @xmath281 .",
    "therefore , the set of the order numbers is given by@xmath282 where @xmath283 . specifically , if @xmath284 , then the set of the order numbers only contains the service completions ; while if @xmath285 , then the set of the order numbers only contains the arrivals .    based on the two subsets @xmath286 and @xmath287 , we obtain@xmath288 where we have some convention on @xmath289 and @xmath290 , and notice that @xmath291 depends on the state @xmath292 .",
    "thus we obtain@xmath277 \\nonumber\\\\ &   = \\underset{p=0}{\\overset{k}{\\sum}}\\sum_{i_{v_{i_{1}}}=1}^{m}\\cdots \\sum_{i_{v_{i_{p}}}=1}^{m}\\underset{j_{w_{1}}=1}{\\overset{m}{\\sum}}\\cdots\\underset{j_{w_{k - p}}=1}{\\overset{m}{\\sum}}a^{p}\\underset{m=1}{\\overset{p}{\\pi}}k(m , k_{i_{v_{i_{m}}}},d)\\nonumber\\\\ &   \\times\\text { } \\overset{k - p}{\\underset{h=1}{\\pi}}b^{(j_{w_{h}})}\\mathbf{1}_{\\left\\ {   \\left (   x-\\overset{h-1}{\\underset{m=1}{\\sum}}e_{j_{w_{m}}}+\\underset{v_{s}\\leq w_{h}-1}{\\sum}e_{k_{i_{v_{s}}}}\\right )   _ { j_{w_{h}}}>0\\right\\ }   } \\cdot r\\left (   x+\\underset{m=1}{\\overset{p}{\\sum}}e_{k_{i_{v_{i_{m}}}}}-\\underset{h=1}{\\overset{k - p}{\\sum}}e_{j_{w_{h}}}\\right ) .",
    "\\label{eq4.7}\\ ] ]    similarly , from the two subsets @xmath286 and @xmath287 we obtain@xmath293    in the remainder of this section , we finally compute the conditional mean @xmath294   $ ] of the stochastic integral @xmath104 according to the above steps one to three .",
    "it follows from ( [ eq4.1 ] ) that@xmath162    &   = r\\left (   x\\right )   te^{-\\omega t}+\\sum_{n=1}^{\\infty } e^{-\\omega t}\\frac{\\left (   \\omega t\\right )   ^{n}}{n!}\\cdot\\frac{t}{n+1}\\nonumber\\\\ &   \\times\\left\\ {   r\\left (   x\\right )   + \\sum_{k=1}^{n}e_{\\mathbf{x}\\left ( 0\\right )   \\underset{\\rightarrow}{\\times}\\mathbf{x}\\left (   \\eta_{1}\\right ) \\underset{\\rightarrow}{\\times}\\mathbf{x}\\left (   \\eta_{2}\\right ) \\underset{\\rightarrow}{\\times}\\cdots\\underset{\\rightarrow}{\\times}\\mathbf{x}\\left (   \\eta_{k-1}\\right )   } \\left [   r\\left (   \\mathbf{x}\\left ( \\eta_{k}\\right )   \\right )   \\right ]   \\right\\ }   , \\label{eq4.8}\\ ] ] where @xmath295   $ ] is given in ( [ eq4.6 ] ) or ( [ eq4.7 ] ) .",
    "in this section , we provide an effective method for computing the mean of the discounted random reward function in an infinite time interval . based on this",
    ", we give a simple discussion on optimal criterions for designing the supermarket model with different servers .    in the infinite time interval @xmath296 , it is possible that @xmath297   = + \\infty$ ] . to avoid the infinite case , the random reward function is always taken as a discounted reward .",
    "notice that @xmath99 is a reward value of the @xmath1-dimensional markov process @xmath298 at state @xmath100 , we define a discounted random reward function as@xmath299 where @xmath300 is a discounted rate , and the discounted factor @xmath301 guarantees that @xmath302 is finite a.s ..    if @xmath303 is finite a.s .",
    ", then @xmath304   $ ] is an ordinary ( non - discounted ) random reward function , as studied in section 4 with @xmath305 .",
    "now , we provide a segmented stochastic integral for expressing the random reward function @xmath302 , this will be useful in our following computation .",
    "let @xmath306 be the successive state jump points of the @xmath1-dimensional markov process @xmath307 in the time interval @xmath296 , it is clear from the poisson or exponential assumptions that@xmath308 at the same time , the sequence : @xmath209 , @xmath309 for @xmath310 , is i.d.d . and exponential with mean @xmath120 .",
    "note that the case with the time interval @xmath296 is different from that in section 4 with respect to analysis of the uniform distributions .",
    "note that@xmath311 it follows from ( [ equ5 - 1 ] )  that@xmath312 thus we obtain @xmath313    &   = e_{x}\\left [   \\int_{0}^{\\eta_{1}^{-}}e^{-\\beta t}r\\left (   \\mathbf{x}\\left (   t\\right )   \\right )   \\text{d}t\\right ]   + \\sum _ { k=1}^{\\infty}e_{\\mathbf{x}\\left (   \\eta_{k}^{-}\\right )   } \\left [   \\int _ { \\eta_{k}}^{\\eta_{k+1}^{-}}e^{-\\beta t}r\\left (   \\mathbf{x}\\left (   t\\right ) \\right )   \\text{d}t\\right ] \\nonumber\\\\ &   = r\\left (   x\\right )   e_{x}\\left [   \\int_{0}^{\\eta_{1}^{-}}e^{-\\beta t}\\text{d}t\\right ]   + \\sum_{k=1}^{\\infty}e_{\\mathbf{x}\\left (   \\eta_{k}^{-}\\right )   } \\left [   r\\left (   \\eta_{k}\\right )   \\int_{\\eta_{k}}^{\\eta _ { k+1}^{-}}e^{-\\beta t}\\text{d}t\\right ]   .",
    "\\label{equ5 - 3}\\ ] ] note that our following computation shows that @xmath314   $ ] is not about the taken sequence @xmath315 .",
    "since @xmath316 for @xmath317 and @xmath318 for @xmath319 , we need to compute @xmath320   $ ] and @xmath321   $ ] for @xmath133 .",
    "it is easy to check that@xmath322   = \\frac{1}{\\beta+\\lambda+\\mu_{1}+\\mu_{2}+\\cdots+\\mu_{m}}. \\label{equ5 - 4}\\ ] ]    to compute @xmath323   $ ] , let the random variable @xmath324 be exponential with parameter @xmath325",
    ". then we have@xmath326 = e^{\\left (   \\gamma\\right )   } \\left [   e^{\\left (   \\eta_{k}\\right )   } \\left [ \\int_{\\eta_{k}}^{\\eta_{k}+\\gamma}e^{-\\beta t}\\text{d}t\\right ]   \\right ]   , \\label{equ5 - 4 - 1}\\ ] ] where @xmath327   $ ] denote such a mean with respect to the random variable @xmath221 .",
    "it is clear that @xmath110 is a random variable with the erlang distribution of order @xmath94 as follows:@xmath328   ^{j}}{j!}.\\ ] ] hence it follows from ( [ equ5 - 4 - 1 ] ) that@xmath326 = \\int_{0}^{+\\infty}\\int_{0}^{+\\infty}\\int_{y}^{y+x}e^{-\\beta",
    "t}\\text{d}t\\text{d}p\\left\\ {   \\gamma\\leq x\\right\\ }   \\text{d}p\\left\\ {   \\eta_{k}\\leq y\\right\\ }   .",
    "\\label{equ5 - 4 - 2}\\ ] ]    based on ( [ equ5 - 4 - 1 ] ) and ( [ equ5 - 4 - 2 ] ) , we set@xmath329\\ ] ] and for @xmath133@xmath330   .\\ ] ] note that the sequence @xmath331 can explicitly be determined by ( [ equ5 - 4 - 1 ] ) and ( [ equ5 - 4 - 2 ] ) , although we omit some computational details .",
    "it is easy to check that@xmath332 = \\frac{r\\left (   x\\right )   } { \\beta+\\lambda+\\mu_{1}+\\mu_{2}+\\cdots+\\mu_{m}}=\\theta_{0}\\left (   \\beta\\right )   r\\left (   x\\right )   .\\ ] ]    now , we compute @xmath333   $ ] by a similar method given in ( [ eq4.6 ] ) as follows:@xmath334 \\nonumber\\\\ =   &   \\theta_{k}\\left (   \\beta\\right )   \\sum_{y_{k-1}\\in\\theta^{\\left ( k-1\\right )   } } \\left [   \\sum_{i_{k}=1}^{m}r\\left (   y_{k-1}+e_{k_{i_{k}}}\\right ) f\\left (   y_{k-1}\\right )   \\cdot ak\\left (   m , k_{i_{k}},d\\right )   \\right .",
    "\\nonumber\\\\ &   \\left .",
    "+ \\sum_{l=1}^{m}r\\left (   y_{k-1}-e_{l}\\right )   f\\left ( y_{k-1}\\right )   \\cdot b^{\\left (   l\\right )   } \\mathbf{1}_{\\left\\ {   \\left ( y_{k}\\right )   _ { l}>0\\right\\ }   } \\right ]   .",
    "\\label{equ5 - 5}\\ ] ] it follows from ( [ equ5 - 3 ] ) , ( [ equ5 - 4 ] ) and ( [ equ5 - 5 ] ) that@xmath313    &   = \\theta_{0}\\left (   \\beta\\right )   r\\left (   x\\right ) + \\sum_{k=1}^{\\infty}\\theta_{k}\\left (   \\beta\\right )   \\sum_{y_{k-1}\\in \\theta^{\\left (   k-1\\right )   } } \\left [   \\sum_{i_{k}=1}^{m}r\\left ( y_{k-1}+e_{k_{i_{k}}}\\right )   f\\left (   y_{k-1}\\right )   \\right .",
    "\\nonumber\\\\ &   \\left .",
    "ak\\left (   m , k_{i_{k}},d\\right )   + \\sum_{l=1}^{m}r\\left ( y_{k-1}-e_{l}\\right )   f\\left (   y_{k-1}\\right )   \\cdot b^{\\left (   l\\right ) } \\mathbf{1}_{\\left\\ {   \\left (   y_{k}\\right )   _ { l}>0\\right\\ }   } \\right ]   .",
    "\\label{equ5 - 6}\\ ] ] it is seen from ( [ equ5 - 6 ] ) that @xmath335   $ ] is discounted by the @xmath336-sequence @xmath337 , which guarantees that @xmath338   < + \\infty$ ] .    in the remainder of this section , we provide a simple discussion for optimal design of the supermarket model with different servers . specifically , such an optimization may be realized through an event - driven technique with performance simulation as well as perturbation realization , e.g. , see cao @xcite and xia and cao @xcite .    to realize an optimal design , the parameters of this supermarket model can be classified as three different groups : ( 1 ) the customer arrival parameters @xmath3 ; and @xmath339 .",
    "( 2 ) the customer service parameters @xmath1 ; @xmath22 ; @xmath2 .",
    "( 3 ) the economic parameters @xmath99 for @xmath100 . in general , the customer arrival parameters are always fixed , given that the customer resource and environment are fixed ; while the economic parameters are chosen in order that performance optimization of this supermarket model can be easy to be carried out . based on this , our optimal design is to focus on taking the optimal service parameters : @xmath1 ; @xmath22 ; @xmath2 .    from a practical point of view of performance optimization",
    ", we take two different reward values : @xmath340 , and @xmath341 for @xmath100 , respectively .",
    "thus , for @xmath342 for @xmath100 , we write@xmath343 ; \\ ] ] while for @xmath344 for @xmath345 , we set@xmath346 .\\ ] ]    based on @xmath347   $ ] , using an event - driven technique with performance simulation as well as perturbation realization , we can obtain the optimal decision parameters @xmath348 ; @xmath349 ; @xmath350 such that@xmath351 similarly , we can also give the optimal decision parameters @xmath352 ; @xmath353 ; @xmath354 such that@xmath355 furthermore , we can get the optimal decision parameters @xmath356 ; @xmath357 ; @xmath358 such that@xmath359    according to the above analysis , to design the supermarket model with different servers , it is seen from equations ( [ opt-1 ] ) to ( [ opt-3 ] ) that here we provide two optimal criterions as follows :    * criterion one : * this supermarket model is better when choosing some parameters such that @xmath360 for a given value @xmath361 .",
    "* criterion two : * this supermarket model is better when choosing some parameters such that @xmath362 for a given value @xmath363 .    in general , the two optimal criterions can easily be implemented by means of the event - driven technique with performance simulation as well as perturbation realization , e.g. , see cao @xcite and xia and cao @xcite for more details .",
    "in this section , we provide three simulation experiments whose purpose is to simply discuss how the expected queue length of each server depends on some key parameters : the choice number @xmath22 , the service rate vector @xmath8 and the probability vector @xmath7 of individual preference in the supermarket model with different servers .    in the three simulation experiments ,",
    "we take the server number @xmath364 and the arrival rate @xmath365 .",
    "* experiment one : * in the supermarket model with different servers , we take that the choice number @xmath366 ; the service rates of the @xmath367 servers are listed as @xmath368 , @xmath369 , @xmath370 , @xmath371 , @xmath372 , @xmath373 , @xmath374 , @xmath375 , @xmath376 and @xmath377 , respectively ; the probabilities of individual preference for the @xmath367 servers are given by @xmath378 , @xmath379 , @xmath380 , @xmath381 , @xmath382 , @xmath383 , @xmath384 , @xmath385 , @xmath386 and @xmath387 , respectively .",
    "we simulate the expected queueing length for each server by using the routine selection function@xmath34   } , \\text { \\ } i=1,2,\\ldots,10.\\ ] ] the experimented results are shown in table 1 .",
    "[ c]|c|c|c|***server number * & * * expected queue lengths * & + one & 0.6834 & + two & 0.9454 & + three & 1.0440 & + four & 0.4318 & + five & 0.4234 & + six & 0.2894 & + seven & 0.4864 & + eight & 0.2793 & + nine & 0.4319 & + ten & 0.2640 & + * * *    * experiment two : * this experiment takes the different parameters : only the 10 service rates , from that in experiment one . * * that is , the choice number @xmath366 ; the service rates of the @xmath367 servers are listed as @xmath388 , @xmath389 , @xmath390 , @xmath391 , @xmath392 , @xmath393 , @xmath394 , @xmath395 , @xmath396 and @xmath397 , respectively ; the probabilities of individual preference for the @xmath367 servers are given by @xmath378 , @xmath379 , @xmath380 , @xmath381 , @xmath382 , @xmath383 , @xmath384 , @xmath385 , @xmath386 and @xmath387 , respectively .",
    "we still simulate the expected queueing length for each server by using the routine selection function@xmath34   } , \\text { \\ } i=1,2,\\ldots,10.\\ ] ] the experimented results are shown in table 2 .",
    "it is seen from tables 1 and 2 that the expected queue lengths of the @xmath1 servers decrease , as the service rates of some servers increase .",
    "[ c]|c|c|c|***server number * & * * expected queue lengths * & + one & 0.3459 & + two & 0.1656 & + three & 0.0274 & + four & 0.0158 & + five & 0.0105 & + six & 0.0042 & + seven & 0.0038 & + eight & 0.0034 & + nine & 0.0018 & + ten & 0.0017 & + * * *    * experiment three : * comparing with experiments one and two , this experiment takes more different parameters .",
    "we take that the choice number @xmath398 ; the service rates of the @xmath367 servers are listed as @xmath388 , @xmath399 , @xmath400 , @xmath401 , @xmath402 , @xmath403 , @xmath404 , @xmath405 , @xmath406 and @xmath407 , respectively ; the probabilities of individual preference for the @xmath367 servers are given by @xmath408 , @xmath379 , @xmath380 , @xmath409 , @xmath382 , @xmath410 , @xmath384 , @xmath411 , @xmath412 and @xmath413 , respectively .",
    "we simulate the expected queueing length for each server by using the routine selection function@xmath34   } , \\text { \\ } i=1,2,\\ldots,10.\\ ] ] the experimented results are shown in table 3 .",
    "it is seen from tables 1 , 2 and 3 that the expected queue lengths of the @xmath1 servers decrease largely , as the choice number @xmath22 changes from @xmath414 to @xmath415 . therefore , `` the power of two choices '' is still kept well in the study of supermarket models with different servers .    [ c]|c|c|c|***server number * & * * expected queue lengths * & + one & 0.3447 & + two & 0.0580 & + three & 0.8598 & + four & 0.0265 & + five & 0.0265 & + six & 0.0266 & + seven & 0.0265 & + eight & 0.0126 & + nine & 0.0127 & + ten & 0.0048 & + * * *",
    "in this paper , we provide a novel method for analyzing the supermarket model with different servers through a multi - dimensional continuous - time markov reward process , and develop an event - driven technique both for computing the mean of the random reward function in a finite time interval and for calculating the mean of the discounted random reward function in an infinite time interval .",
    "we indicate that the event - driven technique are useful in the study of supermarket models with different servers , and more generally , in the analysis of large - scale markov reward processes .",
    "notice that the supermarket model with different servers is an important tool to set up some basic relations between the system performance and the job routing rule , thus it can also help to design reasonable architecture to improve the performance and to balance the load in this supermarket model .",
    "this paper provides a clear picture for how to use the event - driven technique to analyze multi - dimensional continuous - time markov reward processes , which leads to performance analysis of the supermarket model with different servers .",
    "we illustrate that this picture is organized as three key parts : ( 1 ) constructing a routine selection mechanism that depends on the queue lengths , on the service rates , on the probability of individual preference and so forth .",
    "( 2 ) from the state jump points of the continuous - time markov reward process , we set up some segmented stochastic integrals of the random reward function by means of an event - driven technique . based on this , we compute the mean of the random reward function in a finite time interval , and also calculate the mean of the discounted random reward function in an infinite time interval .",
    "therefore , the results of this paper give new highlight on understanding influence of the different servers on designing the routine selection mechanism and on performance computation of more general supermarket models .",
    "along such a line , there are a number of interesting directions for potential future research , for example ,    * analyzing non - poisson inputs such as , renewal processes ; and discussing non - exponential service time distributions , for example , general distributions , matrix - exponential distributions and heavy - tailed distributions ; * studying how to design a new routine selection mechanism with respect to key random factors , such as , the least workload , and the subjective behavior of customers ; * developing effective algorithms both for computing the means of the random reward functions and for solving the optimal problems in the study of supermarket models with different servers ; and * the event - driven technique is further developed for discussing the sample paths of continuous - time markov reward processes , thus the results given in this paper may be very useful for performance simulation of more general supermarket models with different servers .",
    "up to now , we believe that a larger gap exists when dealing with either non - poisson inputs or non - exponential service times in supermarket models with different servers , because the event - driven technique needs be established for being able to deal with more general markov reward processes .",
    "li , q.l . and cao , j. ( 2004 ) ` two types of @xmath416 -factorizations of quasi - birth - and - death processes and their applications to stochastic integral functionals ' , _ stochastic models _ , vol .",
    "20 , pp . 299340 .",
    "li , q.l . , ding , y.y . and",
    "yang , f.f .",
    "( 2015 ) ` reward processes and performance optimization in asymmetric supermarket models ' . _",
    "chinese journal of applied probability and statistics _ , vol .",
    "31 , pp . 411531 .",
    "li , q.l . ,",
    "lui , j.c.s . and wang , y. ( 2011 ) ` a matrix - analytic solution for randomized load balancing models with ph service times ' , in : _ performance evaluation of computer and communication systems : mile - stones and future challenges _ ,",
    "6821 , springer , berlin , pp .",
    "240253 .",
    "luczak , m.j . and",
    "norris , j.r .",
    "( 2013 ) ` averaging over fast variables in the fluid limit for markov chains : application to the supermarket model with memory ' , _ the annals of applied probability _ , vol .",
    "23 , pp . 957986 .",
    "reibman , a. , smith , r. and trivedi , k.s .",
    "( 1989 ) ` markov and markov reward model transient analysis : an overview of numerical approaches ' , _",
    "european journal of operational research _",
    "257267 .",
    "stenberg , f. , manca , r. and silvestrov , d. ( 2007 ) ` an algorithmic approach to discrete time non - homogeneous backward semi - markov reward processes with an application to disability insurance ' , _ methodology and computing in applied probability _ , vol",
    "497519 .",
    "telek , m. , pfening , a. and fodor , g. ( 1998 ) ` an effective numerical method to compute the moments of the completion time of markov reward models ' , _ computers & mathematics with applications _ , vol ."
  ],
  "abstract_text": [
    "<S> supermarket models with different servers become a key in modeling resource management of stochastic networks , such as , computer networks , manufacturing systems , transportation networks and healthcare systems . while the different servers always make analysis of such a supermarket model more interesting , difficult and challenging . </S>",
    "<S> this paper provides a novel method for analyzing the supermarket models with different servers through a multi - dimensional continuous - time markov reward process . </S>",
    "<S> firstly , some utility functions are constructed for the routine selection mechanism according to the queue lengths , the service rates , and the probability of individual preference . secondly , </S>",
    "<S> applying the state jump points of the continuous - time markov reward process , some segmented stochastic integrals of the random reward function are established by means of an event - driven technique . </S>",
    "<S> based on this , the mean of the random reward function in a finite time interval is computed , and the mean of the discounted random reward function in an infinite time interval can also be calculated . </S>",
    "<S> finally , some simulation experiments are given to indicate how the expected queue length of each server depends on some key parameters of this supermarket model .    </S>",
    "<S> * keywords : * supermarket model ; routine selection mechanism ; markov reward process ; random reward function ; stochastic integral ; event - driven technique . </S>"
  ]
}
{
  "article_text": [
    "an _ rna sequence _ is a string composed of four types of nucleotides , namely @xmath0 , and @xmath1 .",
    "given an rna sequence , the goal of the _ rna folding _",
    "problem is to find a maximum cardinality set of crossing - free pairs of nucleotides , where all the pairs are either @xmath2 or @xmath3 .",
    "the problem is central in bioinformatics and has found applications in many areas of molecular biology . for a more comprehensive exposition of the topic ,",
    "the reader is referred to e.g. @xcite .",
    "it is well - known that the problem can be solved in cubic time using a simple dynamic programming method @xcite . due to the importance of rna folding in practice ,",
    "there has been a long line of research on improving the cubic time algorithm ( see e.g. @xcite ) .",
    "currently the best upper bound is @xmath4 @xcite , and this can be obtained via four - russian method or fast min - plus multiplication ( based on ideas from valiant s cfg parser @xcite ) .    whether the rna folding problem can be solved in @xmath6 time for some @xmath8 is still a major open problem .",
    "other than attempting to improve the upper bound , we should also approach the problem in the opposite direction , i.e. showing a lower bound or arguing why the problem is hard .",
    "a popular way to show hardness of a problem is to demonstrate a lower bound conditioned on some widely accepted hypothesis .    [",
    "strongly exponential time hypothesis ( seth ) ] [ c-1 ] there exists no @xmath9 such that @xmath7-sat with @xmath10 variables can be solved in time @xmath11 for all @xmath12 .",
    "[ c-2 ] there exists no @xmath13 such that @xmath7-clique on graphs with @xmath10 nodes can be solved in time @xmath14 for all @xmath12 , where @xmath15 is the matrix multiplication exponent .",
    "assuming that seth ( conjecture  [ c-1 ] ) holds , the following bounds are unattainable for any @xmath8 :    * an @xmath16 algorithm for @xmath7-dominating set problem @xcite , * an @xmath17 algorithm for dynamic time warping , longest common subsequence , and edit distance @xcite , * an @xmath18 algorithm for ( @xmath19)-approximating the diameter of a graph with @xmath20 edges @xcite .    as remarked in @xcite , it is easy to reduce the longest common subsequence problem on binary strings to the rna folding problem as following : given two binary strings @xmath21 , we let @xmath22 be the string such that @xmath23 = a$ ] if @xmath24 = 0 $ ] , @xmath23 = c$ ] if @xmath24 = 1 $ ] , and we let @xmath25 be the string such that @xmath26 = u$ ] if @xmath27 = 0 $ ] , @xmath26 = g$ ] if @xmath27 = 1 $ ]",
    ". then we have a 1 - 1 correspondence between rna foldings of @xmath28 ( i.e. concatenation of @xmath29 and the reversal of @xmath30 ) and common subsequences of @xmath31 and @xmath32 .",
    "it has been shown in @xcite that there is no @xmath17 algorithm for longest common subsequence problem on binary strings conditioned on seth , and we immediately get the same conditional lower bound for rna folding from the simple reduction !    very recently , based on a conjectured hardness of @xmath7-clique problem ( conjecture  [ c-2 ] ) , a higher conditional lower bound was proved for a generalized version of the rna folding problem ( which coincides with the rna folding problem when the alphabet size is 4 ) @xcite :    [ @xcite ] [ thm-1 ] if the generalized rna folding problem on sequences of length @xmath10 with alphabet size 36 can be solved in @xmath33 time , then @xmath34-clique on graphs with @xmath35 can be solved in @xmath36 time .    therefore , a @xmath37 time algorithm for the generalized rna folding with alphabet size at least 36 will disprove conjecture  [ c-2 ] , yielding a breakthrough to the parameterized complexity of clique problem .    however , the above theorem is irrelevant to the rna folding problem in real life ( which has alphabet size 4 ) .",
    "it is unknown whether the generalized rna folding for alphabet size @xmath38 admits a faster algorithm than the case for alphabet size @xmath39 .",
    "in fact , there are examples of string algorithms whose running time scales with alphabet size ( e.g. string matching with mismatched @xcite and jumbled indexing @xcite ) .",
    "we also note that when the alphabet size is 2 , the generalized rna folding can be trivially solved in linear time .    in this paper",
    ", we improve upon theorem  [ thm-1 ] by showing the same conditional lower bound for the rna folding problem :    [ thm-2 ] if the rna folding problem on sequences in @xmath40 can be solved in @xmath33 time , then @xmath34-clique on graphs with @xmath35 can be solved in @xmath41 time .",
    "note that we also get an @xmath42 factor improvement inside @xmath43 , though it does not affect the conditional lower bound .",
    "the current state - of - art algorithm for @xmath44clique , which takes @xmath45 time , requires the use of fast matrix multiplication @xcite which does not perform very efficiently in practice . for combinatorial ,",
    "non - algebraic algorithm for @xmath44clique , the current best one runs in @xmath46 time @xcite , which is only slightly better than the trivial approach . as a result , by theorem  [ thm-2 ] , even a @xmath47 time combinatorial algorithm for rna folding will lead to an improvement for combinatorial algorithms for @xmath44clique !    in the proof of theorem  [ thm-1 ] in @xcite , given a graph @xmath48 , a sequence of length @xmath49 is constructed in such a way that we can decide whether @xmath50 has a @xmath34-clique according to the number of pairs in an optimal generalized rna folding of @xmath51 .",
    "such a construction requires many different types of letters in order to build various `` walls '' which prevent undesired pairings between different parts of the sequence .",
    "hence extending their approach to handle the case where the alphabet size is 4 may not be easy without aid from other techniques and ideas .",
    "* overview of our approach .",
    "* at a high level , our reduction ( from @xmath34-clique problem to rna folding problem ) follows the approach in @xcite : we enumerate all @xmath7-cliques , and each of them is encoded as some gadgets .",
    "all the gadgets are then put together to form an rna sequence .",
    "the goal is to ensure that an optimal rna folding corresponds to choosing three @xmath7-cliques that form a @xmath34-clique , given that the underlying graph admits a @xmath34-clique .    to achieve this goal without using extra types of letters that force the gadgets to match in a desired manner",
    ", we construct the gadgets via a key lemma in @xcite , whose original purpose is to prove that longest common subsequence and other edit distance problems are seth - hard even on binary strings .",
    "we will treat it as a black box and apply it multiple times during the construction .",
    "this powerful tool will allow us to test whether two @xmath7-cliques form a @xmath52-clique by the longest common subsequence between the two strings representing the two @xmath7-cliques .    in the final rna sequence ,",
    "all clique gadgets are well - separated by some carefully designed sequences whose purpose is to `` trap '' all the clique gadgets except three of them . since we know that these three clique gadgets are guaranteed to match well if the graph has a @xmath34-clique , we can infer whether the graph has a @xmath34-clique from the optimal rna folding of the rna sequence .",
    "* dyck edit distance .",
    "* one other way to formulate the rna folding problem is as follows : deleting the minimum number of letters in a given string to transform the string into a string in the language defined by the grammar @xmath53 ( empty string ) .",
    "dyck edit distance problem _ @xcite , which asks for the minimum number of edits to transform a given string to a well - balanced parentheses of @xmath54 different types , has a similar formulation . due to the similarity",
    ", the same conditional lower bound as theorem  [ thm-1 ] was also shown for the dyck edit distance problem ( with alphabet size @xmath55 ) in @xcite .    in this paper , we improve and simplify their result by demonstrating a simple reduction from rna folding to dyck edit distance problem :    [ thm-3 ] if dyck edit distance problem on sequences of length @xmath10 with alphabet size 10 can be solved in @xmath33 time , then the rna folding problem on sequences in @xmath40 can be solved in @xmath56 time .",
    "combining theorem  [ thm-2 ] ,  [ thm-3 ] , we get the following corollary :    [ cor-1 ] if the dyck edit distance problem on sequences of length @xmath10 with alphabet size 10 can be solved in @xmath33 time , then @xmath34-clique on graphs with @xmath35 can be solved in @xmath41 time .",
    "given a set of letters @xmath57 , the set @xmath58 is defined as @xmath59 .",
    "we require that @xmath60 , and @xmath61 .",
    "therefore , we have @xmath62 and @xmath63 .    for any @xmath64",
    ", we write @xmath65 to denote @xmath66 ( the letter @xmath67 stands for the prime symbol ) .",
    "we denote the reversal of the sequence @xmath31 as @xmath68 .",
    "the concatenation of two sequences @xmath21 is denoted as @xmath69 ( or simply @xmath70 ) .",
    "we write _ substring _ to denote a contiguous subsequence .",
    "two pairs of indices @xmath71 , @xmath72 , with @xmath73 and @xmath74 , form a _ crossing pair _ iff    @xmath75    * generalized rna folding . * given @xmath76 , the goal of the generalized rna folding problem is to find a maximum cardinality set @xmath77 among all sets meeting the following conditions :    * @xmath78 does not contain any crossing pair . * for any @xmath79 , either ( i ) @xmath80 \\in \\sigma$ ] and @xmath81 = s[i]'$ ] or ( ii ) @xmath81 \\in \\sigma$ ] and @xmath80 = s[j]'$ ] is true .",
    "we write @xmath82 .",
    "any set meeting the above conditions is called an _ rna folding _ of @xmath51 .",
    "if its cardinality equals @xmath83 , then it is said to be _",
    "optimal_.    in the paper we will only focus on the generalized rna folding problem with four types of letters , i.e. @xmath84 , which coincides with the rna folding problem for alphabet @xmath85 . with a slight abuse of notation ,",
    "sometimes we will write @xmath86 , s[j])$ ] to denote a pair @xmath79 .",
    "the notation @xmath87 is used to indicate an unordered pair .    * longest common subsequence ( lcs ) . *",
    "given @xmath88 and @xmath89 , we define @xmath90 , where @xmath91 the length of the longest common subsequence of @xmath31 and @xmath32 .",
    "it is easy to observe that @xmath92 equals the length of lcs @xmath93 . in this sense",
    ", we can conceive of an lcs problem as an rna folding problem with some structural constraint on the sequence .    in @xcite , a conditional lower bound for the lcs problem with @xmath94 based on seth",
    "was presented .",
    "a key technique in their approach is a function that transforms an instance of an alignment problem between two sets of sequences to an instance of the lcs problem .",
    "* alignments of two sets of sequences .",
    "* let @xmath95 and @xmath96 be two linearly ordered sets of sequences of alphabet @xmath57 .",
    "we assume that @xmath97 .",
    "an _ alignment _ is a set @xmath98 , @xmath99 with @xmath100 and @xmath101 .",
    "an alignment @xmath78 is called _ structural _ iff @xmath102 and @xmath103 .",
    "that is , all sequences in @xmath104 are matched , and the matched positions in @xmath105 are contiguous .",
    "the set of all alignments is denoted as @xmath106 , and the set of all structural alignments is denoted as @xmath107 .",
    "the _ cost _ of an alignment @xmath78 ( with respect to @xmath105 and @xmath104 ) is defined as :    @xmath108    that is , unaligned parts of @xmath104 are penalized by @xmath109 .",
    "given a sequence @xmath31 , the _ type _ of @xmath31 is defined as @xmath110)$ ] , where each letter is assumed to be a number . note that when the alphabet is simply @xmath111 , @xmath112 $ ] is simply the number of occurrences of @xmath113 in @xmath31 .",
    "the following key lemma was proved in @xcite ( lemma 4.3 of @xcite ) :    [ @xcite ] [ lem-1 ] let @xmath95 and @xmath96 be two linearly ordered sets of binary strings such that @xmath97 , all @xmath114 are of type @xmath115 , and all @xmath116 are of type @xmath117 .",
    "there are two binary strings @xmath118 , @xmath119 and an integer @xmath120 meeting the following requirements :    * @xmath121 . * the types of @xmath122 and the integer @xmath120 only depend on @xmath123 .",
    "* @xmath122 , and @xmath120 can be calculated in time @xmath124 ( hence @xmath125 and @xmath126 are both @xmath127 ) .",
    "note that the term @xmath128 comes from the word gadget .",
    "intuitively , computing an optimal alignment ( or an optimal structural alignment ) of two sets of sequences is at least as hard as computing a longest common subsequence .",
    "the above lemma gives a reduction from the computation of a number @xmath54 with @xmath129 ( which can be regarded as an approximation of optimal alignments ) to a single lcs instance .",
    "we will use the above lemma as a black box to devise two encodings , the clique node gadget @xmath130 and the clique list gadget @xmath131 , for a @xmath7-clique @xmath132 in a graph in such a way that we can decide whether two @xmath7-cliques @xmath133 form a @xmath52-clique according the value of @xmath134 .",
    "when invoking the lemma , @xmath105 , @xmath104 are designed in such a way that we can test whether a condition is met ( e.g. whether two given @xmath7-cliques form a @xmath52-clique ) by the value of @xmath135 . we will show that @xmath136 for the case we are interested in .",
    "therefore , we can infer whether the condition we are interested in is met from the value of @xmath137 .",
    "the goal of this section is to prove theorem  [ thm-2 ] .",
    "let @xmath138 be a graph , and let @xmath139 .",
    "we write @xmath140 to denote the set of @xmath7-cliques in @xmath50 .",
    "we fix @xmath141 . as in @xcite",
    ", we will construct a sequence @xmath142 such that we can decide whether @xmath50 has a @xmath34-clique according to the value of @xmath143 .    as our framework of",
    "the construction of @xmath144 is similar to the one in @xcite , we will give the building blocks ( for constructing @xmath144 ) the same names as their analogues in @xcite , despite that they may have different lower - level implementations .",
    "the high - level plan is described as following :    in section  [ ss-1 ] we describe two encodings @xmath145 for a @xmath7-clique @xmath132 based on the black box described in lemma  [ lem-1 ] . in section  [ ss-2 ] , adapting the encodings shown in the previous subsection as the building blocks , we present the definition of the binary sequence @xmath144",
    ". we will give a lower bound on @xmath143 by demonstrating an rna folding of @xmath144 , and the bound will depend on whether @xmath50 has a @xmath34-clique .",
    "the goal of the next two subsections is to show that the bound given in section  [ ss-2 ] is actually the exact value of @xmath143 . in section  [ ss-3 ] , we show that there exists an optimal rna folding of @xmath144 meeting several constraints",
    ". these constraints will simplify the calculation of @xmath143 , and we will work out the exact calculation in section  [ ss-4 ] .",
    "we associate each vertex @xmath146 a distinct integer in @xmath147 .",
    "let @xmath148 be the binary encoding of such integer with @xmath149 .",
    "we define @xmath150 to be the binary string resulted by replacing each 0 in @xmath148 with 01 and replacing each 1 in @xmath148 with 10 .",
    "it is clear that for each @xmath146 , @xmath150 is of type @xmath151 , and @xmath152 iff @xmath153 .    in this subsection",
    "we present two encodings @xmath145 for a @xmath7-clique @xmath132 such that we can infer whether two @xmath7-cliques @xmath133 form a @xmath52-clique from the value of @xmath134 .    for each @xmath146 , the _ list gadget _ @xmath154 and the _ node gadget _",
    "@xmath155 are defined as following :    * @xmath156 , where @xmath157 @xmath158 , and the number of occurrences of @xmath159 is @xmath160 . *",
    "@xmath161 .",
    "[ lem-2 ] there is a constant @xmath162 , depending only on @xmath10 , such that for any @xmath163 , we have @xmath164 iff @xmath165 .    we let @xmath166 .",
    "let @xmath167 , where the number of occurrences of @xmath159 is @xmath168 , and let @xmath169 .",
    "in view of lemma  [ lem-1 ] , we have @xmath170 , @xmath171 , for some @xmath120 whose value depends on @xmath172 , and @xmath173 .",
    "as these parameters depend solely on @xmath10 , the number @xmath120 only depends on @xmath10 .",
    "since @xmath174 , any non - empty alignment between @xmath105 and @xmath104 is structural .",
    "this implies that @xmath175 , @xmath176 .",
    "when @xmath164 , since @xmath177 is contained in @xmath105 , clearly @xmath178 .",
    "when @xmath179 , @xmath177 does not appear in @xmath105 , so @xmath180 .",
    "note that @xmath181 , for any @xmath146 .    as a result , @xmath164 iff @xmath175 , @xmath182 . hence setting @xmath183 suffices .",
    "we let @xmath184 be the type of the list gadgets , and we let @xmath185 be the type of the node gadgets . for each @xmath7-clique @xmath186 , we define the _ clique node gadget _ @xmath187 and the _ clique list gadget _ @xmath188",
    "as following :    * @xmath189 , where the number of occurrences of each @xmath190 is @xmath7 . *",
    "@xmath191 , @xmath192 , + @xmath193 , @xmath194 , where the number of occurrences of each @xmath195 is @xmath7 .",
    "we are ready to prove the main lemma in the subsection :    [ lem-3 ] there is a constant @xmath196 , depending only on @xmath197 , such that for any @xmath198 , @xmath199 is a @xmath52-clique iff @xmath200 .",
    "let @xmath201 , and let @xmath202 .",
    "let @xmath203 , where each @xmath190 appears @xmath7 times , and let @xmath204 , @xmath205 , @xmath206 , @xmath207 , @xmath206 , @xmath208 , @xmath205 , @xmath206 , @xmath209 , where each @xmath210 appears @xmath7 times .",
    "in view of lemma  [ lem-2 ] , we have @xmath211 , so we can lower bound @xmath212 by @xmath213 .    if @xmath214 , any alignment has cost @xmath213 . when @xmath215 , it is easy to observe that in order to achieve @xmath216 , all sequences in @xmath104 must be aligned ( as the cost for any unaligned sequence in @xmath104 is now @xmath217 )",
    ". therefore , any alignment @xmath78 with @xmath216 must be @xmath218 with @xmath219 , for all @xmath220 .    in view of the above , @xmath221 iff @xmath219 for all @xmath220 .    since @xmath218 is structural , @xmath221 iff @xmath222",
    ". therefore , in view of lemma  [ lem-1 ] , there exists a constant @xmath120 such that :    * if @xmath221 , then @xmath223 , @xmath224 . *",
    "if @xmath225 , then @xmath223 , @xmath226 .",
    "moreover , the value of @xmath120 depends only on @xmath172 , @xmath227 .",
    "as these parameters depend solely on @xmath197 , the number @xmath120 only depends on @xmath197 .",
    "when @xmath199 is a @xmath52-clique , all vertices in @xmath228 are adjacent to all vertices in @xmath229 . in view of lemma  [ lem-2 ] , @xmath230 .",
    "hence @xmath221 , implying that @xmath223 , @xmath224 .",
    "when @xmath199 is not a @xmath52-clique , there exist @xmath231 such that @xmath232 . according to our definition of @xmath105 and @xmath104",
    ", we have @xmath233 , @xmath234 , and hence @xmath235 .",
    "this implies that @xmath225 , which leads to @xmath223 , @xmath226 .    as a result , @xmath199 is a @xmath52-clique iff @xmath236 , @xmath237 @xmath238",
    ". setting @xmath239 suffices .",
    "the following lemma is a simple consequence of lemma  [ lem-1 ] :    [ lem - length ] there exist four integers @xmath240 , @xmath241 , @xmath242 , @xmath243 , such that for any @xmath244 ,    * @xmath245 the number of occurrences of @xmath246 in @xmath187 , @xmath247 . * @xmath248 the number of occurrences of @xmath246 in @xmath188 , @xmath247 .    as a consequence of lemma  [ lem-1 ] ,",
    "all @xmath187 have the same type , and all @xmath188 have the same type .",
    "therefore , the existence of these four integers is guaranteed .    in view of lemma  [ lem-1 ] , for all @xmath146 ,",
    "both @xmath154 and @xmath155 have length at most @xmath249 . applying lemma  [ lem-1 ] again",
    ", the length of both @xmath187 and @xmath188 for all @xmath244 is @xmath250 .    as a result ,",
    "the four integers can be bounded by @xmath251 .",
    "based on the parameters in lemma [ lem - length ] , we define @xmath252 ; for @xmath253 , we set @xmath254 ; and @xmath255 .",
    "the rna sequence @xmath144 is then defined as following :    @xmath256 0^{\\ell_4 } \\left[{0'}^{\\ell_3 } \\underset{{t \\in \\mathcal{c}_k}}{\\bigcirc }   \\left (   \\textrm{cg}_\\beta(t ) { 0'}^{\\ell_3 } \\right)\\right ] 0^{\\ell_4 } \\left[{0'}^{\\ell_3 } \\underset{{t \\in \\mathcal{c}_k}}{\\bigcirc }   \\left (   \\textrm{cg}_\\gamma(t ) { 0'}^{\\ell_3 } \\right)\\right],\\ ] ] where @xmath257    for any @xmath244 , @xmath258 , the string @xmath259 is called a _ clique gadget_.    note that @xmath260 , @xmath261 , and @xmath262 .",
    "it is obvious that @xmath263 .    before proceeding further ,",
    "we explain some intuitions behind the definition of @xmath144 and give a simple lower bound on @xmath143 by constructing an rna folding as following :    * the pairings between letters in some @xmath264 and some @xmath265 sometimes make a clique gadget unable to participate in the rna folding with other clique gadgets . in this sense",
    ", a clique gadget is said to be `` blocked '' if the letters within the clique gadget only pair up with other letters within the same clique gadget or some @xmath266 in a @xmath265 .",
    "+ let s try linking all the @xmath267 in all @xmath264 to some @xmath266 in some @xmath265 in such a way that all clique gadgets are blocked except @xmath268 , @xmath269 , and @xmath270 .",
    "this gives us @xmath271 amount of pairs .",
    "see fig .",
    "[ fig-1 ] . * for a clique gadget that is `` blocked '' , our design of @xmath144 ensures that the number of pairs involving letters in the clique gadget ( in certain optimal rna foldings ) is irrelevant to its corresponding @xmath7-clique ( we will prove it later ) : * * for a blocked @xmath272 , since @xmath273 is significantly larger than @xmath274 , an optimal way to pair up the letters is to match as many @xmath275 as possible .",
    "this gives us @xmath276 pairs .",
    "* * for a blocked @xmath277 , since we do not have any 1 here , the best we can do is to match all @xmath267 to some @xmath265 .",
    "this gives us @xmath278 pairs .",
    "* * for a blocked @xmath279 , no matching can be made .",
    "+ therefore , the total amount of pairs involving blocked clique gadgets is @xmath280 .",
    "see fig .",
    "[ fig-2 ] for an illustration . * for the three clique gadgets that are not blocked , we will later see that ( in certain optimal rna foldings ) @xmath281 correspond to a @xmath34-clique if the graph has one .",
    "it is a simple exercise to construct an rna folding for @xmath282 that uses up all the @xmath283 and has cardinality @xmath284 .",
    "recall that @xmath285 @xmath286 is the length of the lcs between @xmath287 and @xmath288 .",
    "see fig .",
    "[ fig-3 ] for an illustration .     and @xmath265 . ,",
    "scaledwidth=100.0% ]    .",
    ", scaledwidth=100.0% ]        in light of the above discussion , we define :    * @xmath289 , * @xmath290 .    the next lemma , which gives a lower bound on @xmath143 , is then implied instantly by the above discussion .",
    "[ lem-5 ] @xmath291 .",
    "ultimately we will show that @xmath292 , and clearly this offers enough information for us to decide whether @xmath50 has a @xmath34-clique .",
    "the following lemma calculates @xmath293 of some sequences , and they will be useful in the subsequent discussion .",
    "[ lem-4 ] the following statements are true for any @xmath294 :    1 .",
    "@xmath295 2 .",
    "@xmath296 3 .",
    "@xmath297 4 .",
    "@xmath298 5 .",
    "@xmath299 6 .",
    "@xmath300    the value of @xmath293 for each of the six sequences are calculated as following :    1 .",
    "linking as many @xmath113 to @xmath301 gets a matching of size @xmath302 . to see that it is optimal , it suffices to show that both @xmath303 and @xmath304 can not appear in an optimal rna folding : * if the rna folding contains @xmath304 , then none of @xmath301 can participate in the rna folding .",
    "as the total number of @xmath267 is @xmath305 , the size of rna folding is at most @xmath306 . *",
    "if the rna folding contains @xmath303 , then at most @xmath307 number of letters within the middle @xmath308 ( the one between @xmath309 and @xmath310 ) can participate in the rna folding .",
    "it implies that the number of @xmath311 pairs in the rna folding is at most @xmath312 .",
    "hence the size of the rna folding can be upper bounded by @xmath313 .",
    "since there is no @xmath113 , the equation follows from the fact that there are @xmath314 occurrences of @xmath267 , all of which can be matched to some @xmath266 without crossing .",
    "no matching can be made since there is no @xmath315 .",
    "the value of @xmath293 can be upper bounded by the number of @xmath113 and @xmath267 .",
    "this is @xmath316 .",
    "the value of @xmath293 can be upper bounded by the number of @xmath301 and @xmath267 .",
    "this is @xmath317 .",
    "we define @xmath318 , which is the result of removing the clique node gadgets and the clique list gadgets in @xmath319 .",
    "it is clear that @xmath320 @xmath321 , as the total length of the removed substrings can be upper bounded by @xmath322 .",
    "therefore , it suffices to show that @xmath323 .",
    "+ let @xmath78 be any rna folding of @xmath51 : * case : there are some @xmath324 where the @xmath267 comes from the first @xmath309 in @xmath51 .",
    "clearly , the first substring @xmath325 can not participate in any pairing .",
    "therefore , @xmath326 .",
    "* case : there are some @xmath327 where the @xmath267 comes from the first @xmath309 in @xmath51 .",
    "in this situation , at most half of the @xmath328 can participate in the rna folding , since only the first @xmath329 in @xmath51 is reachable from @xmath328 without crossing a pair @xmath303 . therefore , @xmath330 is at most the total number of @xmath267 and @xmath113 in @xmath51 minus @xmath273 , i.e. @xmath331 . *",
    "case : the first @xmath309 in @xmath51 does not participate in the rna folding .",
    "then , @xmath332 @xmath333 .",
    "note that ( 1 ) , ( 2 ) , ( 3 ) in lemma  [ lem-4 ] imply that the rna folding for blocked clique gadgets described in fig .",
    "[ fig-2 ] is optimal , and the optimal number of pairings is irrelevant to the corresponding @xmath7-clique .      in the previous subsection",
    ", we describe an rna folding of @xmath144 containing @xmath334 pairs .",
    "the two key properties of this rna folding are :    _ property 1 . _",
    "all @xmath267 in all @xmath264 are paired up with some @xmath266 in some @xmath335 .",
    "_ property 2 .",
    "_ all clique gadgets are `` blocked '' by the pairings between @xmath264 and @xmath335 , except the three clique gadgets : @xmath281 , for some @xmath336 .",
    "the goal in this section is to show that there is an optimal rna folding having the above two properties , which facilitates the calculation of @xmath143 in the next subsection .",
    "[ lem-6 ] for any rna folding @xmath78 of @xmath144 , if there exists a pair linking a @xmath267 in a specific @xmath264 ( denoted as @xmath337 ) to a @xmath266 in a specific @xmath335 ( denoted as @xmath338 ) , then there exists another rna folding @xmath339 with @xmath340 where all letters in @xmath337 are linked to some letters in @xmath338 .",
    "it immediately follows from the fact that @xmath341 is greater than the total number of @xmath267 in @xmath144 .",
    "it makes rematching all the letters in @xmath337 to some letters in @xmath338 possible .",
    "lemma  [ lem-7 ] ensures that there is an optimal rna folding having property 1 :    [ lem-7 ] there is an optimal rna folding @xmath78 of @xmath144 having property 1 .",
    "let s choose any rna folding @xmath78 of @xmath144 with @xmath342 .",
    "in view of lemma  [ lem-6 ] , we can assume that for each @xmath264 in @xmath144 , either all its letters are matched to some @xmath266 in the same @xmath335 or none of its letters is matched to any @xmath266 in any @xmath335 .",
    "let @xmath343 denote the number of @xmath264 such that none of its letters are matched to any @xmath266 in any @xmath335 .    for some @xmath244 , and for some @xmath258 ,",
    "@xmath259 is said to be `` trapped '' in @xmath78 if all letters within @xmath259 are either unmatched , matched to letters within @xmath259 , or matched to letters in some @xmath335 .",
    "we note that a sufficient condition for @xmath259 to be trapped is that the letters in its two neighboring @xmath264 are all matched to the same @xmath335 .",
    "the cases that the condition is violated is enumerated as follows :    1 .",
    "the two neighboring @xmath264 of @xmath259 are matched to different @xmath335 , and this occurs at most @xmath344 times ( i.e. at most two times per @xmath258 ) .",
    "a neighboring @xmath264 of @xmath259 is not matched to any @xmath335 , and this occurs at most @xmath345 times .    therefore , the number of clique gadgets that are not trapped in @xmath78 is at most @xmath346 .    using this information",
    ", we can derive an upper bound of @xmath330 :    @xmath347    in view of the calculation in lemma  [ lem-4 ] , @xmath330 is at most    @xmath348    since @xmath349 , and since the length of a clique gadget @xmath350 , we have :    @xmath351    therefore , @xmath352 if @xmath353 . hence we must have @xmath354 , i.e. all @xmath267 in all @xmath264 are paired up with some @xmath266 in some @xmath335 .",
    "to proceed further , some terminologies are needed to formally define the property 2 :    let @xmath78 be an rna folding of a sequence where @xmath355 are two substrings ( subsequences of consecutive elements ) .",
    "we write @xmath356 iff    * there exists @xmath357 with @xmath358 .",
    "* @xmath355 are disjoint substrings .",
    "for example , `` @xmath359 is blocked in @xmath78 '' is equivalent to `` there exist no @xmath360 , @xmath361 such that @xmath362 '' .",
    "@xmath363 is defined as the set of rna foldings of @xmath144 such that @xmath364 iff    * @xmath78 has property 1 , and * there exist @xmath365 such that @xmath366 , and for any @xmath367 , @xmath368 , @xmath369 implies that @xmath370 .",
    "@xmath371 and @xmath372 are defined analogously .",
    "@xmath373 is defined as the set of rna foldings of @xmath144 such that @xmath374 iff    * @xmath78 has property 1 , and * there exist @xmath375 such that for any @xmath367 , @xmath368 , @xmath369 implies that @xmath376 .    using the above notions ,",
    "it is clear that @xmath374 iff @xmath78 has both property 1 and property 2 . in the remainder of the subsection",
    ", we will prove that there exists an optimal rna folding of @xmath144 that belongs to @xmath373 .    to ease the notation , for each @xmath258 , we call @xmath259 an `` @xmath377 clique gadget '' , for all @xmath244 ; we write `` @xmath378 and @xmath379 are _ linked _ ( in @xmath78 ) '' to denote @xmath380 .",
    "[ lem-8 ] let @xmath78 be an optimal rna folding of @xmath144 having property 1 .",
    "for any @xmath258 , there does not exist two @xmath377 clique gadgets @xmath381 such that @xmath380 .",
    "there is a substring @xmath264 located between @xmath378 and @xmath379 .",
    "existence of a pair in @xmath78 linking a letter in @xmath378 and a letter in @xmath379 makes it impossible for any letter in the @xmath264 be matched to any letter in any @xmath335 , a contradiction .",
    "[ lem-9 ] let @xmath78 be an optimal rna folding of @xmath144 having property 1 .",
    "for any @xmath382 , @xmath383 , there does not exist two distinct @xmath377 clique gadgets @xmath381 and two ( not necessarily distinct ) @xmath384 clique gadgets @xmath385 such that @xmath386 and @xmath387 .    clearly there must be a substring @xmath264 located between @xmath378 and @xmath379 .",
    "however , since @xmath386 and @xmath387 , letters in the substring @xmath264 can only be matched to letters in @xmath388 , letters between @xmath381 , and letters between @xmath385 .",
    "this contradicts property 1 .",
    "[ lem-10 ] let @xmath78 be an optimal rna folding of @xmath144 having property 1 .",
    "for any @xmath258 , suppose that there exist two distinct @xmath377 clique gadgets @xmath381 such that @xmath386 and @xmath387 for some clique gadgets @xmath385 .",
    "then there does not exist any other pairs of clique gadgets that are linked in @xmath78 .",
    "let @xmath389 such that @xmath390 is a @xmath384 clique gadget , and @xmath391 is a @xmath343 clique gadget .",
    "by lemma  [ lem-8 ] and lemma  [ lem-9 ] , @xmath392 must be distinct .",
    "suppose that there exist two clique gadgets @xmath393 that are linked in @xmath78 such that @xmath394 .",
    "we show that this leads to a contradiction .",
    "first of all , none of @xmath393 can be an @xmath377 clique gadget .",
    "suppose that @xmath395 is an @xmath377 clique gadget .",
    "then by lemma  [ lem-8 ] , @xmath396 is either a @xmath384 clique gadget or a @xmath343 clique gadget . in any case , lemma  [ lem-9 ] is violated .",
    "therefore , we can ( without loss of generality ) assume that @xmath395 is a @xmath384 clique gadget , and @xmath396 is a @xmath343 clique gadget .",
    "since @xmath381 are distinct , there must be a substring @xmath264 located between @xmath378 and @xmath379 . since @xmath378 is linked to a @xmath384 gadget , and since @xmath379 is linked to a @xmath343 gadget , letters in the substring @xmath264 can only be paired up with letters in the substring @xmath335 bordering both @xmath397 and @xmath398 ( imaging @xmath144 as a circular string ) .",
    "however , the existence of a pair linking a letter in @xmath395 ( an @xmath384 clique gadget ) and a letter in @xmath396 ( a @xmath343 clique gadget ) implies that such @xmath335 can not be reached from the @xmath264 without a crossing , a contradiction .",
    "the following lemma directly follows from lemma [ lem-7 ] and lemma [ lem-10 ] .",
    "[ lem-11 ] there exists an optimal rna folding of @xmath144 that belongs to @xmath399 .    by lemma  [ lem-7 ]",
    ", we can restrict our consideration to optimal rna foldings having property 1 .",
    "let @xmath78 be any such optimal rna folding :    * case 1 : * for each @xmath258 , there is at most one @xmath377 clique gadget that is linked to other clique gadgets",
    ". then @xmath374 .",
    "* case 2 : * for some @xmath258 , there are two distinct @xmath377 clique gadgets that are linked to other clique gadgets . by lemma  [ lem-10 ] , @xmath400 .",
    "we are now in a position to prove the main lemma in the subsection :    [ lem-12 ] there exists an optimal rna folding of @xmath144 that belongs to @xmath373 .    in view of lemma  [ lem-11 ]",
    ", it suffices to show that for any @xmath401 , we have @xmath402 .",
    "let @xmath403 and @xmath404 be the ones in the definition of @xmath405 .",
    "we let @xmath406 .",
    "each pair in @xmath78 falls into one of the following categories :    * the ones linking a @xmath267 in some @xmath264 to a @xmath266 in some @xmath335 .",
    "there are exactly @xmath271 number of such pairs .",
    "* the ones involving a letter in some @xmath407 , where @xmath408 .",
    "as any letter in such @xmath407 can only be matched to the letters within @xmath407 or @xmath335 .",
    "the number of such pairs can be upper bounded by @xmath409 . *",
    "the ones involving a letter in some @xmath407 , where @xmath410 .",
    "the number of such pairs can be upper bounded by @xmath411 @xmath412 .",
    "therefore , using lemma  [ lem-4 ] , we can upper bound @xmath330 as following :    * when @xmath413 , @xmath414 . * when @xmath415 , @xmath416 . * when @xmath417 , @xmath418 .    by lemma  [ lem-5 ] , we always have @xmath419 ( recall that @xmath420 ) .      in this subsection , we will prove that @xmath292 and finish the proof of theorem  [ thm-2 ] .    in view of lemma  [ lem-12 ] , when calculating @xmath143",
    ", we can restrict our attention to rna foldings of @xmath144 in @xmath373 .",
    "based on the structural property of rna foldings in @xmath373 , we first reduce the calculation of @xmath143 to the calculation of optimal rna foldings of much simpler sequences .    [ lem-13 ] @xmath421 .    in view of lemma  [ lem-12 ] ,",
    "there is an optimal rna folding of @xmath144 in @xmath373 .    for any @xmath374 ,",
    "let @xmath375 be the ones in the definition of @xmath373 .",
    "then , each pair in @xmath78 falls into one of the following categories :    * the ones linking a @xmath267 in some @xmath264 to a @xmath266 in some @xmath335 .",
    "there are exactly @xmath271 number of such pairs . *",
    "the ones involving a letter in some @xmath407 , where @xmath422 .",
    "as any letter in such @xmath407 can only be matched to the letters within @xmath407 or @xmath335 .",
    "the number of such pairs can be upper bounded by @xmath423 . *",
    "the ones involving a letter in some @xmath407 , where @xmath424 .",
    "the number of such pairs can be upper bounded by @xmath425 .    in view of lemma  [ lem-4 ] , @xmath426 .",
    "hence we conclude the proof .",
    "the following auxiliary lemma is useful in the later discussion .",
    "[ lem-14 ] let @xmath427 , where @xmath338 is either @xmath428 or @xmath429 .",
    "then @xmath430 .",
    "it suffices to show that there exists an optimal rna folding of @xmath51 such that the @xmath113 and the @xmath301 in @xmath338 are matched .",
    "we first choose any optimal rna folding @xmath78 of @xmath51 , and then we show that we can modify @xmath78 in such a way that the @xmath113 and the @xmath301 in @xmath338 are matched without changing the number of matched pairs .    *",
    "case : the @xmath113 and the @xmath301 in @xmath338 are already matched . we are done .",
    "* case : exactly one of the @xmath113 and the @xmath301 in @xmath338 is matched .",
    "we first unmatch it , and then we pair up the @xmath113 and the @xmath301 .",
    "doing so does not change the number of matched pairs . *",
    "case : both of the @xmath113 and the @xmath301 in @xmath338 are matched to some other letters .",
    "let the @xmath113 be matched with @xmath377 , and let the @xmath301 be matched with @xmath384 .",
    "removing these two pairs from @xmath78 and adding @xmath431 and @xmath432 to @xmath78 does not change the number of matched pairs .    for any choices of three @xmath7-cliques",
    "@xmath375 , we define :    @xmath433    where    @xmath434    @xmath435 is simply a cyclic shift of the concatenation of @xmath268 , @xmath269 , and @xmath270 after removing the sequences of @xmath113s and @xmath301s at the beginning and the end of these clique gadgets . the next lemma ( together with lemma  [ lem-13 ] ) reduces the calculation of @xmath143 to the calculation of @xmath436 .",
    "[ lem-15 ] @xmath437 .",
    "first of all , we state a few easy observations that will be applied in the proof :    * by simply matching only the letters in @xmath438 , and @xmath270 ( as described in fig .",
    "[ fig-3 ] ) , we can infer that @xmath439 . *",
    "the total number of @xmath267 and @xmath113 in @xmath440 is at most @xmath441 . *",
    "the difference between the number of @xmath113 and @xmath301 in @xmath440 is at most @xmath322    we claim that in any optimal rna folding @xmath78 of @xmath440 , all letters within all @xmath335 are not matched :    * claim : there is no @xmath267 within @xmath269 matched to any @xmath266 in the two @xmath335 preceding and after @xmath269 .",
    "recall that @xmath442 .",
    "if there is such a pair , then at least @xmath273 amount of @xmath301 can not participate in the rna folding .",
    "therefore , @xmath443 . *",
    "claim : there is no @xmath267 within @xmath269 matched to any @xmath266 in the @xmath335 in the beginning of the sequence .",
    "suppose that there is such a pair .",
    "then the @xmath444 amount of @xmath301 within @xmath445 in @xmath268 and within the first @xmath329 in @xmath269 can only be matched to letters in @xmath268 .",
    "however , the amount of @xmath113 in @xmath268 is at most @xmath446 , so at least @xmath447 amount of @xmath301 are not matched .",
    "therefore , @xmath448 . *",
    "claim : there is no @xmath267 within @xmath268 matched to any @xmath266 in any @xmath335 .",
    "suppose that there is such a pair .",
    "we can show that at least @xmath273 amount of @xmath301 can not participate in the rna folding , so @xmath449 . * * case : a @xmath267 within @xmath268 is matched to a @xmath266 in the first @xmath335 .",
    "then the @xmath450 in the beginning of @xmath268 can not participate in the rna folding . * * case : a @xmath267 within @xmath268 is matched to a @xmath266 in the second @xmath335 .",
    "then letters in the two @xmath308 in @xmath268 can only be matched to letters within @xmath451 .",
    "hence at least @xmath452 amount of @xmath113 are unmatched .",
    "since the difference between the number of @xmath113 and @xmath301 in @xmath440 is at most @xmath322 , at least @xmath453 amount of @xmath301 can not participate in the rna folding .",
    "* * case : a @xmath267 within @xmath268 is matched to a @xmath266 in the third @xmath335 .",
    "then all @xmath301 within @xmath269 can only be matched to @xmath113 within @xmath268 .",
    "it is obvious that the number of @xmath301 within @xmath269 is at least @xmath273 more than the number of @xmath113 within @xmath268 , so at least @xmath454 amount of @xmath301 can not participate in the rna folding .",
    "therefore ,    @xmath455    for the third equality , we just move @xmath456 from the end of the sequence to the beginning .",
    "the fourth equality follows by applying lemma  [ lem-14 ] iteratively ( which removes @xmath457 , @xmath458 , and @xmath459 ) .    by calculating the exact value of @xmath436 , together with several previous lemmas",
    ", the next lemma shows that @xmath292 .",
    "[ lem-16 ] @xmath292 .    in view of lemma  [ lem-5 ] , [ lem-13 ] , [ lem-15 ]",
    ", it suffices to show that @xmath460 @xmath461 .",
    "first of all , it is easy to observe that @xmath462 , so for any optimal rna folding @xmath78 ( of @xmath435 ) , we must have @xmath463 .",
    "we claim that in any optimal rna folding @xmath78 of @xmath435 , the following two statements are true :    * for each of the two @xmath308 , there is a @xmath113 that is matched to a @xmath301 in the @xmath445 . * for each of the @xmath464 , there is a pair linking a @xmath267 in its @xmath309 and a @xmath266 in its @xmath310 .    for the first statement , suppose that one @xmath308 does not have any letter matched to a @xmath301 in the @xmath445 .",
    "it is easy to observe that the number of @xmath301 in @xmath435 that does not belong to @xmath445 is at most @xmath322 .",
    "therefore , @xmath330 is at most the total number of @xmath267 plus the total number of @xmath113 minus @xmath465 . by a simple calculation , @xmath466 .",
    "therefore , we conclude the first statement .    for the second statement , suppose that there is an @xmath467 that has no pair linking a @xmath267 in its @xmath309 and a @xmath266 in its @xmath310 . due to the first statement , any pairing involving @xmath309 and @xmath310 are confined to be within @xmath51 .",
    "therefore , the number of pairs involving letters in @xmath51 is at most @xmath468 .",
    "this is certainly not optimal , since simply matching all @xmath267 in @xmath309 to all @xmath266 in @xmath310 gives us @xmath469 amount of pairs .",
    "therefore , we conclude the second statement",
    ".    we can infer from the above two statements that for each @xmath467 , letters within @xmath51 are only matched to letters within @xmath51 in any optimal rna folding of @xmath435 .    as a result ,",
    "@xmath470    we are ready to prove the main theorem of the paper :    * remainder of theorem  [ thm-2 ] . *",
    "_ if the rna folding problem on sequences in @xmath40 can be solved in @xmath33 time , then @xmath34-clique on graphs with @xmath35 can be solved in @xmath41 time .",
    "_    given a graph @xmath50 , we construct the string @xmath144 . according to lemma  [ lem-1 ] , [ lem - length ] ,",
    "the length of @xmath144 is @xmath471 , and @xmath144 can be constructed in time @xmath472 .",
    "we let @xmath375 be chosen such that @xmath473 is minimized . by lemma  [ lem-3 ] , there exists a number @xmath196 such that :    * the number @xmath196 depends only on @xmath474 , and @xmath475 . * if @xmath476 , then each of @xmath477 , @xmath478 , @xmath479 is a @xmath52-clique , which in turn is equivalent to `` @xmath480 is a @xmath34-clique '' . * if @xmath481 , then the graph has no @xmath34-clique .    according to lemma  [ lem-16 ] , @xmath292 . by its definition ,",
    "@xmath482 only depends on @xmath474 , and @xmath483 .",
    "hence we are able to decide whether @xmath50 has a @xmath34-clique from the value of @xmath143 , which can be calculated in time @xmath484 .",
    "note that @xmath7 is treated as a constant instead of an input parameter .",
    "in this section , we shift our focus to the dyck edit distance problem",
    ". we will present a simple reduction from rna folding problem ( with alphabet size 4 ) to dyck edit distance problem ( with alphabet size 10 ) .",
    "this leads to a much simplified and improved proof for a conditional lower bound of dyck edit distance based on the conjectured hardness @xmath7-clique ( the previous proof presented in @xcite requires 48 symbols ) .",
    "* dyck edit distance . * given @xmath76 , the goal of the dyck edit distance problem is to find a minimum number of edit operations ( insertion , deletion , and substitution ) that transform @xmath51 into a string in the dyck context free language .    given @xmath57 and its corresponding @xmath58 ,",
    "the dyck context free language is defined by the grammar with following production rules : @xmath485 , @xmath486 , and @xmath487 ( empty string ) .",
    "an alternative definition of the dyck edit distance problem is described as follows :    given a sequence @xmath76 , find a minimum cost set @xmath77 satisfying the following conditions :    * @xmath488 has no crossing pair .",
    "* @xmath489 contains only pairs of the form @xmath490 , @xmath491 ( i.e. for all @xmath492 , we have @xmath80=x$ ] , @xmath81=x'$ ] , for some @xmath491 ) .",
    "@xmath489 corresponds to the set of matched pairs .",
    "* @xmath493 does not contain any pair of the form @xmath494 , @xmath495 ( i.e. for all @xmath496 we have either @xmath80 \\in \\sigma$ ] or @xmath81 \\in \\sigma'$ ] ) .",
    "@xmath493 corresponds to the set of pairs that can be fixed by one substitution operation per each pair .",
    "* let @xmath497 be the set of letters in @xmath51 that do not belong to any pair in @xmath78 .",
    "each letter in @xmath497 requires one deletion / insertion operation to fix .",
    "the cost of @xmath78 is then defined as @xmath498 , and the dyck edit distance of the string @xmath51 is the cost of a minimum cost set meeting the above conditions .",
    "dyck edit distance problem can be thought of as an asymmetric version of the rna folding problem ( in rna folding , we allowed the aligned pair to be either @xmath490 or @xmath499 , @xmath491 ) that also handles substitution ( in addition to deletion and insertion ) .",
    "though these two problems look similar , they can behave quite differently .",
    "for example , in section  [ sec.intro ] we describe a simple reduction from lcs to rna folding ; since lcs is edit distance problem without substitution , one may hope that the same reduction reduces edit distance problem to dyck edit distance problem . however , this is not true due to the following counterexample : both the two strings @xmath500 and @xmath501 require at least 4 edit operations to transform into the string @xmath502 ; but the dyck edit distance of @xmath503 is 4 ( by deleting all @xmath504 ) , while the dyck edit distance of @xmath505 is 3 ( by deleting all @xmath506 and substituting the second @xmath246 with @xmath507 ) .",
    "intuitively , the substitution operation makes dyck edit distance more complicated than rna folding .",
    "indeed , the same conditional lower bound as theorem  [ thm-1 ] for dyck edit distance problem shown in @xcite requires a bigger alphabet size ( 48 instead of 36 ) and a longer proof .    in the next , we prove theorem  [ thm-3 ] by demonstrating a simple reduction from rna folding problem to dyck edit distance problem with alphabet size 10 .",
    "this improves upon the hardness result in @xcite , and justifies the intuition that dyck edit distance is a harder problem than rna folding .    *",
    "proof of theorem  [ thm-3 ] . *",
    "_ if dyck edit distance problem on sequences of length @xmath10 with alphabet size 10 can be solved in @xmath33 time , then the rna folding problem on sequences in @xmath40 can be solved in @xmath56 time .",
    "_    for notational simplicity , we let the alphabet for the rna folding problem be @xmath508 ( instead of @xmath85 ) .",
    "let @xmath51 be any string in @xmath509 .",
    "we define the string @xmath510 as the result of applying the following operations on @xmath51 :    * replace each letter @xmath266 with the sequence @xmath511 .",
    "* replace each letter @xmath267 with the sequence @xmath512 .",
    "* replace each letter @xmath113 with the sequence @xmath513 .",
    "* replace each letter @xmath301 with the sequence @xmath514 .",
    "it is clear that @xmath510 is a sequence of length at most @xmath515 on the alphabet @xmath516 , though the letter @xmath517 is not used .",
    "we claim that the dyck edit distance of @xmath510 is @xmath518 .",
    "first , we show that the dyck edit distance of @xmath510 is at most @xmath518 .",
    "given an optimal rna folding of @xmath51 , we construct a crossing - free matching @xmath78 with cost @xmath518 as follows :    for matched pairs in the rna folding of @xmath51 :    * for each matched pair @xmath304 in the rna folding of @xmath51 , we add two pairs @xmath519 to @xmath489 , and add three pairs @xmath520 to @xmath493 in its corresponding pair of substrings @xmath521 in @xmath510 . * for each matched pair @xmath303 in the rna folding of @xmath51 , we add two pairs @xmath522 to @xmath489 , and add three pairs @xmath523 to @xmath493 in its corresponding pair of substrings @xmath524 in @xmath510 . * similarly , for each matched pair @xmath525 in the rna folding of @xmath51 , we can add two pairs to @xmath489 and three pairs to @xmath493 .    for unmatched letters in @xmath51 :    * for each unmatched letter @xmath266 in @xmath51 , we add three pairs @xmath526 to @xmath493 in its corresponding substring @xmath527 .",
    "similarly , for each unmatched letter",
    "@xmath113 , we can add three pairs to @xmath493 .",
    "* for each unmatched letter @xmath267 in @xmath51 , we add two pairs @xmath528 to @xmath493 in its corresponding substring @xmath529 . similarly , for each unmatched letter @xmath301 , we can add two pairs to @xmath493 .",
    "the set @xmath489 has size @xmath530 , the set @xmath493 has size @xmath531 , and @xmath497 is an empty set .",
    "therefore , the cost of @xmath78 is @xmath532 .",
    "second , we show that the dyck edit distance of @xmath510 is at least @xmath518 . given a crossing - free matching @xmath78 ( on the string @xmath510 ) of cost @xmath120 , we recover an rna folding of @xmath51",
    "that has @xmath533 number of matched pairs .",
    "we build a multi - graph @xmath48 such that @xmath534 is the set of all substrings @xmath535 that constitute @xmath510 , and the number of edges between two substrings in @xmath534 is the number of pairs in @xmath489 linking letters between these two substrings .",
    "note that @xmath536 .",
    "it is clear that @xmath537 ( since @xmath538 ) .",
    "therefore , we are done if we can recover an rna folding of size @xmath539 , since @xmath540 .",
    "we observe the following :    * @xmath50 has degree at most 2 ( due to our definition of @xmath535 , at most two letters in such a substring can participate in pairings of the form @xmath490 , @xmath541 , without crossing ) .",
    "* in the graph @xmath50 , any edge must either links an @xmath542 with an @xmath543 or links an @xmath337 with an @xmath544 ( due to our definition of @xmath535 , any pairing of the form @xmath490 , @xmath541 , must be made between @xmath545 or between @xmath546 ) .",
    "* @xmath50 does not contain any cycle of odd length ( due to the above observation ) .    in view of the above ( second ) observation , a ( graph - theoretic ) matching",
    "@xmath547 of @xmath50 naturally corresponds to a ( size @xmath548 ) rna folding of @xmath51 : for each edge ( a pair of substrings in @xmath510 ) in @xmath549 , we add its corresponding pair of letters in @xmath51 to the rna folding .",
    "since a maximum matching has size @xmath539 in a graph of maximum degree 2 without odd cycles , we conclude the proof .",
    "we note that for the case substitution is not allowed , the letter @xmath550 in the above proof is not needed , and this lowers the required alphabet size to 8 .",
    "the reason that the letter @xmath550 is essential for the above proof to work is explained as follows : suppose that @xmath550 is removed . for each",
    "matched pair @xmath304 in the rna folding of @xmath51 , after adding two pairs @xmath519 to @xmath489 , the letter @xmath507 between two @xmath551 in @xmath552 can not participate in any matching anymore . hence some letters will be in @xmath497 according to our construction of the crossing - free matching @xmath78 .",
    "this indicates that our construction may not be optimal .",
    "indeed , for the string @xmath553 ( after removing @xmath550 ) , if we insist on matching the two pairs @xmath519 in @xmath554 , then the cost will be at least @xmath555 ( three substitutions and two deletions are needed ) .",
    "however , there is a solution that uses only 4 substitutions : @xmath556 .",
    "in this paper we present a hardness result of rna folding problem with alphabet size 4 and demonstrate a reduction from rna folding problem to dyck edit distance problem .",
    "a few open problems still remain :    * there are still a few cases where the state - of - art conditional lower bound requires a certain alphabet size to work ( e.g. theorem  [ thm-3 ] , corollary  [ cor-1 ] , and the hardness result for dynamic time warping in @xcite ) .",
    "is it possible to improve them using our technique or other ideas ? * is it possible to reduce dyck edit distance problem to rna folding problem ? * besides the classic rna folding problem , several problems in bioinformatics admit similar formulation ( see e.g. @xcite )",
    ". it would be interesting to see whether the technique presented in this paper ( and @xcite ) can be adapted to give meaningful lower bounds for other problems .",
    "89 tatsuya akutsu .",
    "approximation and exact algorithms for rna secondary structure prediction and recognition of stochastic context - free languages .",
    "journal of combinatorial optimization , 3(2 ) : 321 - 336 , 1999 .",
    "mika amit , rolf backofen , steffen heyne , gad m. landau , mathias mohl , christina schmiedl , sebastian will .",
    "local exact pattern matching for non - fixed rna structures . in combinatorial pattern matching ( cpm ) , 306320 , springer , 2012 .",
    "amir abboud , arturs backurs , and virginia vassilevska williams .",
    "if the current clique algorithms are optimal , so is valiant s parser . in proceedings of ieee",
    "55th annual symposium on foundations of computer science ( focs ) , 2015 .",
    "amir abboud , arturs backurs , and virginia vassilevska williams .",
    "quadratic - time hardness of lcs and other sequence similarity measures . in proceedings of ieee",
    "55th annual symposium on foundations of computer science ( focs ) , 2015 .",
    "amihood amir , timothy m. chan , moshe lewenstein , and noa lewenstein . on hardness of jumbled indexing . in proceedings of the 41st international colloquium automata , languages , and programming ( icalp ) , 114125 , 2014 .",
    "arturs backurs and piotr indyk .",
    "edit distance can not be computed in strongly subquadratic time ( unless seth is false ) . in proceedings of the 47th annual acm symposium on theory of computing ( stoc ) , 5158 , 2015 .",
    "karl bringmann and marvin knnemann .",
    "quadratic conditional lower bounds for string problems and dynamic time warping . in proceedings of ieee",
    "56th annual symposium on foundations of computer science ( focs ) , 7997 , 2015 .",
    "liam roditty and virginia vassilevska williams .",
    "fast approximation algorithms for the diameter and radius of sparse graphs . in proceedings of the 45th annual acm symposium on theory of computing ( stoc ) , 515524 , 2013 .",
    "barna saha .",
    "language edit distance & maximum likelihood parsing of stochastic grammars : faster algorithms & connection to fundamental graph problems . in proceedings of the ieee 56th annual symposium on foundations of computer science ( focs ) , 118135 , 2015 ."
  ],
  "abstract_text": [
    "<S> an rna sequence is a string composed of four types of nucleotides , @xmath0 , and @xmath1 . </S>",
    "<S> given an rna sequence , the goal of the rna folding problem is to find a maximum cardinality set of crossing - free pairs of the form @xmath2 or @xmath3 . </S>",
    "<S> the problem is central in bioinformatics and has received much attention over the years . </S>",
    "<S> however , the current best algorithm for the problem still takes @xmath4 time , which is only a slight improvement over the classic @xmath5 dynamic programming algorithm . whether the rna folding problem can be solved in @xmath6 time </S>",
    "<S> remains an open problem . </S>",
    "<S> recently , abboud , backurs , and williams ( focs15 ) made the first progress by showing a conditional lower bound for a generalized version of the rna folding problem based on a conjectured hardness of the @xmath7-clique problem . </S>",
    "<S> a drawback of their work is that they require the rna sequence to have at least 36 types of letters , making their result biologically irrelevant . in this paper , we show that by constructing the gadgets using a lemma of bringmann and knnemann ( focs15 ) and surrounding them with some carefully designed sequences , the framework of abboud et al . can be improved upon to work for the case where the alphabet size is 4 , yielding a conditional lower bound for the rna folding problem .    </S>",
    "<S> we also investigate the dyck edit distance problem . </S>",
    "<S> we demonstrate a reduction from rna folding problem to dyck edit distance problem of alphabet size 10 , establishing a connection between the two fundamental string problems . </S>",
    "<S> this leads to a much simpler proof of the conditional lower bound for dyck edit distance problem given by abboud et al . and lowers the required alphabet size for the lower bound to work .    </S>",
    "<S> keywords : rna folding , dyck edit distance , longest common subsequence , conditional lower bound , clique </S>"
  ]
}
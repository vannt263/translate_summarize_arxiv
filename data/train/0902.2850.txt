{
  "article_text": [
    "non - linear least squares fitting is an integral part of most astronomical analysis .",
    "the process embodies the fundamental process of hypothesis testing for a candidate model which may explain the data .",
    "there are several built - in fitting procedures packaged within the interactive data language ( idl ) product . unfortunately , the existing idl procedures are not very desirable from the perspective of astronomical data analysis .",
    "the built - in procedures curvefit and lmfit are somewhat unreliable , and do not always take advantage of idl s vectorization capability . because of these limitations , the author undertook to write a robust and functional least squares fitting code for idl .",
    "the work was based on translating the highly successful minpack-1 package written in fortran into idl , and building new functionality upon that framework .",
    "mpfit is basically a translation and enhancement of the minpack-1 software , originally developed by jose mor collaborators at argonne national laboratories .",
    "the code was written in fortran , and is available now from the netlib software repository .",
    "minpack-1 has the advantages that it is :    * robust  designed by numerical analysts with real data in mind * self - contained  not dependent on a large external library * general  capable of solving most non - linear equations * well - known  one of the most - used libraries in optimization problems    the original minpack-1 library contains two different versions , lmder and lmdif .",
    "both require the user function to compute the residual vector , @xmath0 , but lmder also requires the user to compute the jacobian matrix , @xmath1 , of the residuals as well ; lmdif estimates the jacobian via finite differences .",
    "the minpack algorithm solves the problem by linearizing it around the trial parameter set , @xmath2 , and solving for an improved parameter set , @xmath3 , via the least squares equation , @xmath4 the solution is obtained by @xmath5 factorization of @xmath1 , leading to improved numerical accuracy over the normal equations form .",
    "the standard levenberg - marquardt technique of replacing the first parenthesized term with @xmath6 , where @xmath7 is the levenberg marquardt parameter and @xmath8 is a diagonal scaling matrix , produces faster convergence .",
    "the solution is iterated until user - selected convergence criteria are achieved , based on the sum of squares and residual values .",
    "the translation to idl focused on preserving the quality of the original code , optimizing it for speed within idl , and adding functionality within the semantics of idl .",
    "the result of the translation is a single fitting engine , mpfit , which provides all of the original minpack-1 capability .",
    "this function is not specific to a particular problem , i.e. it can be used on data of arbitrary dimension or weighting .",
    "in addition to the generic fitting routines , several convenience routines have been developed that make mpfit useful in several specific problem domains :    * mpfitfun , mpfit2dfun  optimized for 1-d & 2-d functions ; * mpfitexpr  for dynamically - created formulae , e.g. on the command line ; * mpcurvefit  a drop - in replacement for the standard curvefit idl library routine , for users who need compatibility ; * mpfitpeak , mpfit2dpeak  specialized for 1-d & 2-d peak fitting ; * mpfitellipse  for fitting elliptical curves to x / y scatter points .",
    "the idl version can be found on the author s website ( see resources , sec .",
    "[ sec : resources ] ) .",
    "beyond the original minpack-1 code , mpfit contains several innovations which enhances its usefulness and convenience to the user , and also take advantage of the capabilities of idl .    * private data .",
    "* the user can pass any private data safely to the user function as keyword variables via the functargs parameter .",
    "this helps to avoid the use of common block variables",
    ".    * parameter constraints . *",
    "the notion of simple parameter boundary constraints is supported via the parinfo parameter .",
    "individually settable upper and lower limits are supported via limits . also , as a convenience , parameters can be held fixed , or tied to another parameter value .",
    "the total number of degrees of freedom is tracked , as well as the number of parameters pegged at their limits ( via the dof and npegged keywords ) .    * jacobian calculations . * the user is free to supply explicit derivatives in their user function , or have mpfit calculate them numerically , depending on the autoderivative and parinfo.mpside settings .",
    "the method for calculation of derivatives ( step size and direction ) are settable on a per - parameter basis via the parinfo.step and .relstep settings . for user - calculated derivatives",
    ", the user can enable a debugging mode by setting parinfo.mpderiv_debug .",
    "* covariance matrix . *",
    "the capability to calculate the covariance matrix of the fit parameters is an improvement over the original published minpack-1 version .    * hard - to - compute functions . * for functions that are difficult to compute within a single function call , mpfit can be requested to allow ` external ' evaluation .",
    "mpfit then returns control temporarily to the caller so that it can compute the function using external information and by whatever means , and then the caller re - calls mpfit to resume fitting .",
    "* iteration function .",
    "* after each iteration , a user procedure designated by iterproc may be called .",
    "the default procedure simply prints the parameter values , but a more advanced version may be used , for example for gui feedback",
    ".    * error handling . *",
    "two error status parameters are provided . upon return ,",
    "status is set to a numerical status code suitable for automated response .",
    "errmsg is set to a descriptive error string to inform the human user of the problem .",
    "mpfit also traps common problems , like user - function errors and numerical over / under - flows .",
    "mpfit is provided with extensive documentation .",
    "the mpfit source code has reference - style documentation attached to the header of the source module itself .",
    "a basic tutorial is provided on the author s web page ( see sec .  [",
    "sec : resources ] ) , which introduces the user to least squares fitting of a 1-d data set , and graduates to applying parameter constraints . also , a ` faq ' style web page gives users quick answers to common questions , such as which module to use , how to calculate important quantities , and troubleshooting techniques .",
    "examples of usage can be found on the author s website , and as a part of the code documentation itself . as an example , consider a user that has a data set with independent variable x and dependent variable y ( with gaussian errors ey ) , and wants to fit as a function of f(x , p ) where p is an array of parameters .    in this case",
    ", mpfitfun should be used to solve for the best fit parameters pbest with the following invocation ,    ....    pbest = mpfitfun('f ' , x , y , ey , pstart , status = st , errmsg = err , $              bestnorm = chi2 , dof = dof , error = perror , covar = covar ) ....    where pstart is an initial guess of the parameter values . upon return ,",
    "the best fit @xmath9 value and degrees of freedom are returned via the bestnorm and dof parameters .",
    "parameter errors and covariance matrix are returned in the error and covar parameters .",
    "error conditions are returned in status and errmsg .",
    "mpfit has been available for ten years from the author s web site , and as been downloaded several thousand times . during that time",
    ", the package has been continuously improved , both in terms of functionality , and in terms of fixing `` bugs . '' by its nature , idl code is `` open source , '' and at least ten users have contributed changes which have been incorporated into the main code base .",
    "mpfit is distributed with very liberal licensing constraints .",
    "the package has been acknowledged as helpful in a number of published works , including at least 29 refereed publications since 2001 ( including astrophysical journal , monthly notices and pasj ) , and in 102 preprints on the arxiv preprint server .",
    "interestingly , mpfit has also been translated into the python language , and is available in the scipy scientific package ( the interesting aspect is that the translation was based on the idl version and not the original fortran ) .",
    "the author has also create a c translation of mpfit , which has the benefit of speed and portability , along with many of the idl - based improvements .",
    "in addition to being used in scientific analysis , mpfit has also been incorporated into numerous standalone packages , for example pan ( `` peak analysis '' ) for neutron scattering spectroscopy , and pintofale for x - ray spectroscopy .",
    "* mpfit idl & c code : * mpfit python version : + * minpack-1 fortran web page : * minpack-1 pure c translation :    mor , j. 1977 , `` the levenberg - marquardt algorithm : implementation and theory , '' in numerical analysis , vol . 630 , ed . g. a. watson ( springer - verlag : berlin ) , 105 mor , j. & wright , s. 1993 , optimization software guide , frontiers in applied mathematics , vol .",
    "14 , ( philadelphia , pa : siam )"
  ],
  "abstract_text": [
    "<S> mpfit is a port to idl of the non - linear least squares fitting program minpack-1 . </S>",
    "<S> mpfit inherits the robustness of the original fortran version of minpack-1 , but is optimized for performance and convenience in idl . </S>",
    "<S> in addition to the main fitting engine , mpfit , several specialized functions are provided to fit 1-d curves and 2-d images ; 1-d and 2-d peaks ; and interactive fitting from the idl command line . </S>",
    "<S> several constraints can be applied to model parameters , including fixed constraints , simple bounding constraints , and `` tying '' the value to another parameter . </S>",
    "<S> several data weighting methods are allowed , and the parameter covariance matrix is computed . </S>",
    "<S> extensive diagnostic capabilities are available during the fit , via a call - back subroutine , and after the fit is complete . </S>",
    "<S> several different forms of documentation are provided , including a tutorial , reference pages , and frequently asked questions . </S>",
    "<S> the package has been translated to c and python as well . </S>",
    "<S> the full idl and c packages can be found at . </S>"
  ]
}
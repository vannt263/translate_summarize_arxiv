{
  "article_text": [
    "as time goes on , larger and larger multi - agent systems ( mas s ) are being deployed as a way to meet a single overall goal for an underlying system , and this is being done for increasingly noisy and unreliable systems  @xcite .",
    "however if one uses traditional `` hand - tailoring '' to design all aspects of a mas , maintaining robustness while scaling up to large problems becomes increasingly difficult .",
    "accordingly , it is becoming imperative to understand how best to have both the individual agents and the structure of their interactions be as adaptive as possible .",
    "in designing agents to be adaptive one should cast their action spaces in a form that is as amenable as possible to machine learning techniques , especially to reinforcement learning ( rl ) techniques  @xcite .",
    "however it is often the case that more than just the policies of the individual agents needs to be adaptive ; for the system to perform well , often the very structure with which the agents interact also needs to be adaptive rather than hard - wired  @xcite .",
    "one way to have that structure be adaptive is to exploit the existence of input spaces in rl - based agents by having the intentions and actions of the agents be in the input spaces of the other agents , much as in stackelberg games  @xcite . in this way",
    "as individual agents adapt their policies , information concerning the best way to adapt to those new policies is automatically propagated to the other agents .",
    "we consider both kinds of adaptivity in the design of a mas to control network packet routing with the goal of maximizing throughput  @xcite . in this domain",
    "the naive choice of the action space of each router agent is the categorical variable of the single outbound link along which to route the particular packet currently at the top of its queue .",
    "however in comparison to euclidean variables with their inherent smoothness structure , such a categorical variable is usually poorly suited to rl techniques .",
    "accordingly , we instead consider having the action space be the vector of the proportion of packets the agent routes along each of its outbound links .",
    "packets can be routed according to such a proportion vector by taking that vector to specify probabilities for all routing along all outbound links .",
    "alternatively , one can route traffic deterministically , in such a way that the proportions of the traffic actually sent are as close as possible , according to any of a suite of metrics , to the desired proportion vector . in this paper",
    "we concentrate on the second of these schemes .",
    "whichever proportion - vector - based scheme one uses , one can have each agent learn how best to set the vectors it uses ( one vector for each potential ultimate destination of the packet ) , and in this way adaptively determine how best to do its routing .",
    "one difficulty with this new action space is that it easily results in `` cycles '' , in which a particular packet may return to an agent that had previously routed it . to avoid this",
    ", we developed the * hard masking * routing algorithm , which maps an original proportion vector to a new one .",
    "this algorithm has the property that if it is used by every agent , then any links leaving an agent that could result in cycles are `` masked out '' , so that no traffic is sent along that link .",
    "( in fact , in our experiments even if some agents do not use hard masking , if they employ conventional shortest - path routing algorithms , cycles will still be avoided . ) at the same time , the ratios of traffic sent along all non - masked links are left unchanged .",
    "hard masking requires no additional protocol traffic beyond that already contained in traditional distance - vector or link - state routing algorithms  @xcite .",
    "however if the agents use rl to learn proportion vectors that are run through the hard masking algorithm before being used , the system potentially can adapt to use far better proportions than those that arise ( in a completely unintended manner ) when one uses traditional algorithms , while sharing with those algorithms the absence of any risk of cycling .",
    "unfortunately , hard masking has a clipping property : it does not affect the amount of traffic being sent down a link until a certain property of that link reaches a threshold , at which point all traffic down that link is blocked .",
    "as one might expect , this hard clipping can reduce routing efficacy . to overcome this problem",
    ", we developed the * soft masking * routing algorithm , which gradually decreases traffic along a link as the threshold is approached , while still preventing cycles .",
    "the version of soft masking we use is optimal in that it is the unique variant of hard masking that preserves invariance both in rescaling of time and/or packet sizes , and in translation of the zero - point of one s clock .",
    "we first investigated hard and soft masking on the opnet event - driven network simulator , without any learning on the part of the agents ; we simply swept through the space of potential proportion vectors , recording performance as we went .",
    "these experiments were on relatively simple and small networks ( currently all tcp / ip - based networks are broken down for routing purposes into subnetworks almost always having no more than a dozen routers ) .",
    "these runs demonstrated that at the optimal proportion vectors , masking can result in throughput up to five times better than that of bellman - ford ( bf ) , the traditional routing algorithm we used as our comparison point .",
    "this improvement was achieved even though the full bf routing protocol traffic was still running `` in the background '' in the masking systems .",
    "we also found that the size of the basins in the space of potential proportion vectors which gave at least some improvement over bf was quite large  approximately half of the range of each component of each proportion vector in the case of soft masking .",
    "as mentioned above , the second component of an adaptive mas beyond having the individual agents be adaptive is having the agent interaction structure itself be adaptive , so that the agents can automatically and adaptively cooperate with one another . to that end , we considered two possible interaction structures .",
    "the first can be viewed as an iterative stackelberg game structure  @xcite . in this structure , `` leader '' agents first determine what proportion vectors they will use , and then the `` follower '' agents use that information to determine what proportion vectors they think will result in optimal performance . in other words ,",
    "the proportion vectors of the leaders are components of the input space of the followers .",
    "we also investigated a less asymmetric structure , in which agents `` interleaved '' their decisions in such a way so that every agent was in some respects acting as a follower and in some respects acting as a leader .",
    "we investigated how much of the potential improvement of masking over bf can be realized by having the agents learn their proportion vectors using these kinds of adaptive agent interaction structures .",
    "we found that even using extremely simple rl algorithms , and with essentially no effort given to optimizing the soft masking , when those agents operated within the adaptive structure outlined above , typically throughput was 3 times better than with bf .",
    "we never encountered an instance in which soft masking consistently gave worse performance .",
    "in section  [ sec : routing ] we describe conventional routing algorithms , proportional routing , and the various forms of masking . in section  [ sec : learn ] we describe the learning schemes used and the adaptive agent interaction schemes investigated . in section  [ sec : results ] we present the results of our experiments .",
    "the most commonly used routing algorithms are based on the `` shortest path '' , i.e. , the path from a router to a destination that would experience the minimal cost if the traffic were routed down that path . in such algorithms",
    "each router stores the smallest of all possible costs to each destination , along with the first link on the associated path .",
    "( this data is commonly stored , sometimes along with other information , in a `` routing table . '' ) the router then sends all its packets bound for a particular destination along the first link on the associated shortest path .",
    "there are many algorithms for efficiently computing the shortest paths when the costs for traversing each router and link in the network are known , including dijkstra s algorithm  @xcite and the bf algorithm  @xcite . when applied in dynamic data networks of the kinds considered here ,",
    "both algorithms entail some underlying protocol traffic , to allow the routing tables of the routers to adapt to changes in traffic conditions .      shortest path algorithms in general and bf in particular",
    "have several shortcomings . in practice ,",
    "the shortest path estimates are always based on old information , which means each router bases its routing decisions on potentially incorrect assumptions about the network .",
    "however even if a shortest path algorithm is provided the exact current costs of all the links , because it sends @xmath0 of its traffic with the same ultimate destination down a single link , such an algorithm still provides suboptimal solutions .",
    "( formally , this suboptimality holds so long as we re not in the limit where each router makes infinitesimal routing decisions at each moment , with its routing table being updated before the next infinitesimal routing decision  see  @xcite . )    this second problem with bf can potentially be alleviated if each routing agent apportions its traffic bound for a particular destination along more than one path , rather than sending it all along the shortest path . in this paper",
    "we are concerned with agents that learn , dynamically , how best to do this .",
    "as discussed above , we are interested in having each agent do its learning with an action space that consists of one proportion vector @xmath1 satisfying : @xmath2 for each destination , @xmath3 being the number of outbound links .",
    "this proportion vector then determines how the traffic bound to that destination from that router gets apportioned among that router s outbound links , as discussed above .",
    "we call this `` proportional routing ''",
    ".      simple proportional routing invariably results in unproductive cycles being introduced into the paths followed by some packets .",
    "one way to avoid such cycles employs a destination - dependent ordering @xmath4 over all routing agents .",
    "given such an ordering , we can restrict router @xmath5 to only send out packets according to its proportion vector along those links connecting @xmath5 to routers @xmath6 such that @xmath7 ; no traffic is sent along any other link . assuming all routers have the same ordering @xmath4 for the same destination , having them all follow this scheme ensures that there will be no cycles .",
    "( in our work , for convenience , we choose @xmath4 for each destination @xmath8 to be the smallest cost estimates for going from @xmath9 to @xmath8 stored in the routing table on @xmath9 . )",
    "we use the term `` masking '' to refer to any scheme of this nature in which the components of @xmath1 are multiplied by constants set by the condition of the network .",
    "in particular , to define hard masking , let our routing agent be @xmath5 , let the destination be @xmath8 , let the router neighbors of @xmath5 be the @xmath10 , let @xmath5 s proportion vector be @xmath1 , and let the ordering over routers for destination @xmath8 be @xmath4 .",
    "then in the technique of hard masking we calculate an * applied proportion vector * @xmath11 from @xmath1 according to the following formula : @xmath12    where @xmath13 is the heaviside function that equals 1 for positive argument , and equals 0 otherwise .",
    "we then use @xmath14 rather than @xmath1 to govern the routing from router @xmath5 .",
    "( from now on , when we need to distinguish it from @xmath11 , we refer to @xmath1 as a * base proportion vector*. )      although hard masking does avoid cycles while still having the generic behavior of not sending all traffic bound for a particular destination down a single link , it does so in a potentially brittle manner .",
    "this is because a link will either be used fully ( according to the proportion vector ) , or , for what may only be an infinitesimal change in network conditions , not used at all .",
    "a more reasonable strategy would be for the routing agent to only gradually reduce its traffic along any link @xmath15 as that link approaches the condition @xmath16 , in such a way that @xmath17 when @xmath18 .",
    "if it does this , a routing agent @xmath5 will have essentially replaced hard masking s discontinuous * masking function * @xmath19(i.e . , the function that gets multiplied by @xmath20 in the determination of the applied vector @xmath21 ) with a continuous one .    what is the best way to implement such a `` gradual reduction of traffic '' ?",
    "one obvious requirement is that the new masking function be both translation and scaling invariant with respect to changes to the functions @xmath22 , since those functions only provide an ordering . in particular , in our implementation where the @xmath4 are costs given by times , we do nt want either the zero - points or the units with which we measure time to matter",
    " changes to either should not affect the behavior of the router .    to ensure translation invariance",
    ", it suffices to require that @xmath23 be of the form @xmath24 . for scaling invariance",
    ", we need to have the function @xmath25 obey the following condition : @xmath26 for any @xmath27 . in other words , to preserve the ratios of traffic sent along all links under rescaling , for any values @xmath28 and @xmath29 the ratio @xmath30 needs to be a constant , independent of @xmath31 .    now to make sure that no traffic is sent down a link once @xmath32 , write @xmath33 .",
    "( note that @xmath34 is both translation and scaling invariant . ) restricting ourselves to the regime where @xmath35 so that @xmath36 and differentiating both sides of the scaling invariance condition with respect to @xmath31 yields    @xmath37    which must hold for any @xmath31 , @xmath28 and @xmath29 .",
    "in particular , take @xmath38 , and fix @xmath28 , to get the following : @xmath39 now define @xmath40 $ ] .",
    "having done this , equation  [ eq : a ] becomes @xmath41 . integrating both sides , we get @xmath42    where @xmath43 and @xmath44 are constants . exponentiating both sides , and",
    "recalling that @xmath45 $ ] , we get the solution @xmath46    ( the overall multiplicative constant has been set to 1 ; it is irrelevant in that it gets divided out when one divides by the normalizing factor to calculate @xmath1 . )",
    "combining the two invariance properties gives us the final soft masking function : @xmath47 so for routing agent @xmath5 , `` soft masking '' means that the applied proportion vector is set by the following : @xmath48      perhaps the most straight - forward implementation of proportional routing is for each routing agent to use a random number generator with probabilities set to the proportion vectors to decide where to route each successive packet .",
    "this simple scheme has a major drawback however . for large numbers of packets the realized proportions of the packets actually sent will approximate the actual proportions arbitrarily well .",
    "however this is not the case when the number of packets is small . in particular , when masking is used , both the actual proportion vectors ( as formally defined above ) and the actually realized routing proportions will tend to change fairly frequently .",
    "a probabilistic approach may not result in such changing proportions tracking each other accurately .",
    "[ htb ]    [ cols=\"^,^,^,^,^ \" , ]     [ tab : results ]      the results of the experiments are summarized in table  [ tab : results ] .",
    "the first row contains the performance of bf .",
    "the row labeled `` bf source only '' reports performance when the source nodes used bf and the intermediate nodes operated with soft masked proportional routing .",
    "this allows a direct comparison of the effects of replacing bf with memory - based learning methods at the source nodes .",
    "the third row of the table summarizes performance when the ideal proportion vector is used .",
    "( those vectors were ascertained by exhaustively running through a suite of simulations in each of which the proportion vector never changed in the `` learning period '' . ) under the rough assumption that these numbers constitute an upper bound on performance with the learners , we can use these numbers to provide us with the `` headroom '' of each algorithm , that is with the amount by which each algorithm s performance falls short of the best possible performance .",
    "the algorithms used by the rl - based methods are presented next .",
    "the type of fit was linear based on the 12 nearest neighbors .",
    "the learners reduced the performance headroom between bellman - ford and using the ideal proportions by 93 - 95% . clearly , the agent - based approaches benefit from using the more sophisticated throughput estimates . comparing the agent - based approaches to one another , leader - follower and interleaved learning",
    "reduce the performance headroom between the standard learner and the ideal proportions by 25% .",
    "thus , the agent - based approaches where one or both of the learners have knowledge of the intentions / actions of the other agent have significantly better performance than the standard learner .",
    "adaptivity is a feature of a mas that becomes increasingly important the larger the mas and the less reliable the environment in which it operates . broadly speaking ,",
    "adaptivity takes two forms : adaptivity of the individual agents , and adaptivity of the interaction structure among the agents .",
    "we have investigated both forms of adaptivity in the important context of routing over networks . in a set of experiments we found that simply modifying the action spaces of the agents to make them better suited to adaptive algorithms",
    "potentially improved throughput by up to a factor of 3.5 over the traditional bellman - ford algorithm .",
    "we then investigated two schemes for how to have the agent interaction structure itself be adaptive .",
    "we found that these schemes both realized a significant fraction of this potential improvement , with an improvement factor of 3 over bellman - ford .",
    "furthermore , a 25% improvement was observed over an agent - based approach with no adaptive interaction structure .",
    "the authors would like to thank jeremy frank , joe sill , ann bell and marjory johnson for helpful discussion .",
    "j.  boyan and m.  littman .",
    "packet routing in dynamically changing networks : a reinforcement learning approach . in _ advances in neural information processing systems - 6 _ ,",
    "pages 671678 .",
    "morgan kaufmann , 1994 .    c.  claus and c.  boutilier .",
    "the dynamics of reinforcement learning cooperative multiagent systems . in _ proceedings of the fifteenth national conference on artificial intelligence _ , pages 746752 , june 1998 .              j.  hu and m.  p. wellman .",
    "multiagent reinforcement learning : theoretical framework and an algorithm . in _ proceedings of the fifteenth international conference on machine learning _ ,",
    "pages 242250 , june 1998 .",
    "d.  subramanian , p.  druschel , and j.  chen .",
    "ants and reinforcement learning : a case study in routing in dynamic networks . in _ proceedings of the fifteenth international conference on artificial intelligence _ , pages 832838 , 1997 .",
    "d.  h. wolpert and k.  tumer .",
    "an introduction to collective intelligence . in j.  m. bradshaw , editor , _ handbook of agent technology_. aaai press / mit press , 1999 . to appear ; preprint cs.lg/9908014 at xxx.lanl.gov archive ."
  ],
  "abstract_text": [
    "<S> adaptivity , both of the individual agents and of the interaction structure among the agents , seems indispensable for scaling up multi - agent systems ( mas s ) in noisy environments . </S>",
    "<S> one important consideration in designing adaptive agents is choosing their action spaces to be as amenable as possible to machine learning techniques , especially to reinforcement learning ( rl ) techniques  @xcite . </S>",
    "<S> one important way to have the interaction structure connecting agents itself be adaptive is to have the intentions and/or actions of the agents be in the input spaces of the other agents , much as in stackelberg games  @xcite . </S>",
    "<S> we consider both kinds of adaptivity in the design of a mas to control network packet routing  @xcite we demonstrate on the opnet event - driven network simulator the perhaps surprising fact that simply changing the action space of the agents to be better suited to rl can result in very large improvements in their potential performance : at their best settings , our learning - amenable router agents achieve throughputs up to three and one half times better than that of the standard bellman - ford routing algorithm , even when the bellman - ford protocol traffic is maintained . </S>",
    "<S> we then demonstrate that much of that potential improvement can be realized by having the agents learn their settings when the agent interaction structure is itself adaptive . </S>"
  ]
}
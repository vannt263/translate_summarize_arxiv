{
  "article_text": [
    "one type of the basic structures of sociology in general and social networks in particular are _ communities _ ( e.g. see @xcite ) . in sociology , community usually refers to a social unit that shares common values and both the identity of the members and their degree of cohesiveness depend on individuals social and cognitive factors such as beliefs , preferences , or needs .",
    "the ubiquity of the internet and social media eliminated spatial limitations on community range , resulting in online communities linking people regardless of their physical location . the newly arising _ computational sociology",
    "_ relies on computationally intensive methods to analyze and model social phenomena @xcite , including communities and their detection .",
    "analysis of social networks has been used as a tool for linking micro and macro levels of sociological theory .",
    "the classical example of the approach is presented in @xcite that elaborated the macro implications of one aspect of small - scale interaction , the strength of dyadic ties .",
    "communities in social networks are discovered based on the observed interactions between people . with the rapid emergence of large - scale online social networks , e.g. ,",
    "facebook that connected a billion users in 2012 , there is a high demand for efficient community detection algorithms that will be able to handle large amount of data on a daily basis .",
    "numerous techniques have been developed for community detection .",
    "however , most of them require a _",
    "global _ view of the network .",
    "such algorithms are not scalable enough for networks with millions of nodes .    label propagation based community detection algorithms such as lpa @xcite and slpa @xcite ( whose source codes are publicly available at https://sites.google.com/site/communitydetectionslpa/ ) require only local information .",
    "they have been shown to perform well and be highly efficient .",
    "however , they come with a great shortcoming . due to random tie breaking strategy",
    ", they produce different partitions in different runs .",
    "such instability is highly undesirable in practice and prohibits its extension to other applications , e.g. , tracking the evolution of communities in a dynamic network .    in this paper , we propose strategies to stabilize the lpa and to extend mcl @xcite approach that resulted in a new algorithm called _ labelrank _ that produces deterministic partitions .",
    "despite the ambiguity in the definition of community , numerous techniques have been developed including random walks @xcite , spectral clustering @xcite , modularity maximization @xcite , and so on . a recent review",
    "can be found in @xcite .",
    "label propagation and random walk based algorithms are most relevant to our work .",
    "the lpa @xcite uses the network structure alone to guide its process .",
    "it starts from a configuration where each node has a distinct label . at every step , each node changes its label to the one carried by the largest number of its neighbors .",
    "nodes with same label are grouped together after convergence .",
    "the speed of lpa is optimized in @xcite .",
    "leung @xcite extends lpa by incorporating heuristics like hop attenuation score .",
    "copra @xcite and slpa @xcite extend lpa to detection of overlapping communities by allowing multiple labels .",
    "however , none of these extensions resolves the lpa randomness issue , where different communities may be detected in different runs over the same network .",
    "markov cluster algorithm ( mcl ) proposed in @xcite is based on simulations of flow ( random walk ) .",
    "mcl executes repeatedly matrix multiplication followed by inflation operator .",
    "labelrank differs from mcl in at least two aspects .",
    "first , labelrank applies the inflation to the label distributions and not to the matrix @xmath0 .",
    "second , the update of label distributions on each node in labelrank requires only local information .",
    "thus it can be computed in a decentralized way .",
    "regularized - mcl @xcite also employs a local update rule of label propagation operator . despite that",
    ", the authors observed that it still suffers from the scalability issue of the original mcl . to remedy , they introduced multi - level regularized mcl , making it complex .",
    "in contrast , we address the scalability by introducing new operator , conditional update , and the novel stopping criterion , preserving the speed and simplicity of the lpa based algorithms .",
    "labelrank is based on the idea of simulating the propagation of labels in the network . here , we use node i d s as labels . labelrank stores , propagates and ranks labels in each node . during labelrank execution ,",
    "each node keeps multiple labels received from its neighbors .",
    "this eliminates the need of tie breaking in lpa@xcite and copra @xcite ( e.g. , multiple labels with the same maximum size or labels with the same probability ) .",
    "nodes with the same highest probability label form a community .",
    "since there is no randomness in the simulation , the output is deterministic .",
    "labelrank relies on four operators applied to the labels : ( i ) propagation , ( ii ) inflation , ( iii ) cutoff , and ( iv ) conditional update .        *",
    "propagation * : in each node , an entire distribution of labels is maintained and spread to neighbors . we define @xmath1 @xmath2 vectors @xmath3 ( @xmath1 is the number of nodes ) which are separate from adjacency matrix @xmath4 defining the network structure .",
    "each element @xmath5 or @xmath6 holds the current estimation of probability of node @xmath7 observing label @xmath8 taken from a finite set of alphabet @xmath9 . for clarity of discussion",
    ", we assume here that @xmath10 ( same as node i d s ) and @xmath11 .",
    "in section [ sec : impdis ] we lift this assumption to increase efficiency of execution . in labelrank",
    ", each node broadcasts the distribution to its neighbors at each time step and computes the new distribution @xmath12 simultaneously using the following equation : @xmath13 where @xmath14 is a set of neighbors of node @xmath7 and @xmath15 is the number of neighbors .",
    "note that , @xmath12 is normalized to make a probability distribution .    in matrix form this operator can be expressed as : @xmath16 where @xmath4 is the @xmath17 adjacency matrix and @xmath18 is the @xmath17 _ label distribution matrix_. to initialize @xmath18 , each node is assigned equal probability to see each neighbor : @xmath19    since the metric space @xmath4 is usually compact , @xmath18 defined iteratively by eq .",
    "[ eq : ap ] converges to the same stationary distribution for most networks by the banach fixed point theorem @xcite .",
    "hence , a method is needed for trapping the process in some local optimum in the quality space ( e.g. , modularity @xmath20 @xcite ) without propagating too far .    * inflation * :",
    "as in mcl @xcite , we use the inflation operator @xmath21 on @xmath18 to contract the propagation , where @xmath22 is the parameter taking on real values . unlike mcl",
    ", we apply it to the label distribution matrix @xmath18 ( rather than to a stochastic matrix or adjacency matrix ) to decouple it from the network structure . after applying @xmath23 ( eq . [ eq : inflation ] ) , each @xmath5 is proportional to @xmath24 , i.e. , @xmath5 rises to the @xmath25 power .",
    "@xmath26 this operator increases probabilities of labels that were assigned high probability during propagation at the cost of labels that in propagation received low probabilities .",
    "for example , two labels with close initial probabilities 0.6 , and 0.4 after @xmath27 operator will changed probabilities to 0.6923 ad 0.3077 , respectively . in our tests",
    ", this operator helps to form local subgroups .",
    "however , it alone does not provide satisfying performance in large networks .",
    "moreover , the memory inefficiency problem implied by eq .",
    "[ eq : ap ] , i.e. , @xmath28 labels stored in the networks , is not yet fully resolved by the inflation operator .",
    "* cutoff * : to alleviate the memory problem , we introduce cutoff operator @xmath29 on @xmath18 to remove labels that are below threshold @xmath30 $ ] . as expected , @xmath29 constrains the label propagation with help from inflation that decreases probabilities of labels to which propagation assigned low probability .",
    "more importantly , @xmath29 efficiently reduces the space complexity , from quadratic to linear .",
    "for example , with @xmath31 , the average number of labels in each node is typically less than @xmath32 .    *",
    "explicit conditional update * : as shown in fig .",
    "[ fig : stopcriterion ] ( green curve ) , the above three operations are still not enough to guarantee good performance .",
    "this is because the process detects the highest quality communities far before convergence , and after that , the quality of detected communities decreases .",
    "hence , we propose here a novel solution based on the _ conditional update operator _ @xmath33 .",
    "it updates a node only when it is significantly different from its neighbors in terms of labels .",
    "this allows us to to preserve detected communities and detect termination based on scarcity of changes to the network . at each iteration",
    ", the change is accepted only by nodes that satisfy the following update condition : @xmath34 where @xmath35 is the set of _ maximum labels _ which includes labels with the maximum probability at node @xmath7 at the _ previous _ time step .",
    "function @xmath36 returns 1 if @xmath37 , and 0 otherwise .",
    "@xmath38 is the degree of node @xmath7 , and @xmath39 is a real number parameter chosen from the interval @xmath40 $ ] .",
    "intuitively , issubset can be viewed as a measure of _ similarity _ between two nodes . as shown in fig .",
    "[ fig : stopcriterion ] , @xmath41 operator successfully traps the process in the modularity space with high quality , indicated by a long - lived plateau in the modularity curve ( red curves )",
    ". equation [ eq : updatecondition ] augments the stability of the label propagation .",
    "* stop criterion * : one could define the _ steady _ state of a node as small difference in the label distribution between consecutive iterations , and determine the overall network state built upon node states .",
    "in fact , the above conditional update allows us to derive a more efficient stop criterion ( linear time ) .",
    "we determine whether the network reaches a relatively stable state by tracking the number of nodes that update their label distributions ( i.e. , implicitly tracking the number of nodes that potentially change their communities ) , @xmath42 , at each iteration and accumulate the number of repetitions @xmath43 in a hash table .",
    "the algorithm stops when the @xmath44 of any @xmath42 first exceeds some predefined frequency ( e.g. , five in our experiments ) , or no change for this iteration ( i.e. , numchange=0 ) .",
    "although such criterion does not guarantee the best performance , it almost always returns satisfying results .",
    "the difference between the found @xmath20 ( purple circles ) and maximum @xmath20 ( red asterisks ) is small as illustrated on two networks in fig .",
    "[ fig : stopcriterion ] . note that , this stop criterion is also applicable when network state oscillates among a group of states .",
    "add selfloop to adjacency matrix @xmath4 initialize label distribution @xmath18 using eq .",
    "[ eq : initp ] @xmath45 @xmath46 @xmath47 @xmath48 output communities        these four operators together with a post - processing that groups nodes whose highest probability labels are the same into a community form a complete algorithm ( see alg .",
    "[ alg1 ] ) . an example network as output by labelrank is shown in fig .  [",
    "fig : g0 ] .",
    "there are only 1.2 labels on average and at most two in each node , resulting in a sparse label distribution ( table [ table : tabelg0 ] of which second row shows for each node the label with the highest probability identifying this node community ) .",
    "three communities are identified , each sharing a common label : red community label 3 , green community label 5 and blue community label 11 .",
    "the resultant @xmath18 also distinguishes two types of nodes , the _ border _ ones with high probability labels ( e.g. , 3 , 5 and 11 ) , and the _ core _ nodes with positive but not largest label probabilities ( e.g. , 1 , 13 and 15 ) .",
    "the latter are well connected to their communities .    in the analysis",
    ", we set the length of @xmath3 at @xmath1 , creating a @xmath49 @xmath18 matrix . in the implementation , this is not needed .",
    "thanks to both cutoff and inflation operators , the number of labels in each node monotonically decreases and drops to a small constant in a few steps .",
    "the @xmath18 matrix is replaced by @xmath1 variable - length vectors ( usually short ) carried by each node ( as illustrated in table [ table : tabelg0 ] ) .",
    "another advantage is that the algorithm performance is not sensitive to the cutoff threshold @xmath50 , so we set it to @xmath51 , and do not consider when tuning parameters for optimal performance .",
    "it turns out that the preprocessing that adds a selfloop to each node ( i.e. , @xmath52 ) helps to improve the detection quality .",
    "the selfloop effect resembles the lazy walk in a graph that avoids the periodicity problem , but here , it smooths the propagation ( update of @xmath3 ) by taking into account node s own label distribution . thus during initialization , each node considers itself a neighbor while using eq .",
    "[ eq : bc ] .        both labelrank and mcl use matrix multiplication , @xmath53 for labelrank and @xmath54 for mcl (",
    "m is the @xmath17 stochastic matrix ) .",
    "for updating an element , both @xmath55 and @xmath56 seem to require @xmath57 operations , where @xmath58 denotes the @xmath59 row and @xmath60 denotes the @xmath61 column of matrix @xmath62 .",
    "however , since @xmath4 represents the static network structure , no operations are needed for zero entries in @xmath4 for labelrank .",
    "thus , the number of effective operations for each node is defined by @xmath38 neighbors , reducing the time for computing the @xmath63 to @xmath64 . with @xmath65 labels",
    "( typically less than 3 ) in each node on average , updating one row @xmath3 requires @xmath66 operations . as a result ,",
    "the time for updating the entire @xmath18 in labelrank is @xmath67 , where @xmath68 is the average degree and @xmath69 is the total number of edges . in contrast , during the expansion ( before convergence ) , @xmath70 of @xmath0 that rises to power larger than 1 is changed according to the definition of transition matrix of a random walk .",
    "after that , values in @xmath70 no longer reflects the network connections in one hop . therefore , the computation of @xmath70 may require nonlocal information and the time is @xmath57 , which leads to @xmath71 for the entire @xmath54 operator in worst case . in conclusion ,",
    "the propagation scheme in labelrank is highly parallel and allows the computation to distribute to each individual node .",
    "the running time of labelrank is @xmath72 , linear with the number of edges @xmath69 because adding selfloop takes @xmath57 , the initialization of @xmath18 takes @xmath72 , each of the four operators takes @xmath72 on average and the number of iterations is usually @xmath73 .",
    "note that , although sorting the label distribution is required in conditional update , it takes effectively linear time because the size of label vectors is usually no more than 3 .",
    "the execution times on a set of citation networks are shown in fig .",
    "[ fig : runningtime - labelrankonly ] .",
    "the test ran on a single computer , but we expect further improvement on a parallel platform .",
    "we first verified the quality of communities reported by our algorithm on networks for which we know the true grouping . for the classical zachary s karate club network @xcite with @xmath74 ,",
    "labelrank discovered exactly the two existing communities centered on the teacher and manager ( with @xmath75 ) .",
    "we also used a set of high school friendship networks @xcite created by a project funded by the national institute of child health and human development .",
    "the results on this large data set are similar and show a good agreement between the found and known partitions .",
    "an instance is shown in fig .  [",
    "fig : comm1-labelrank ] .",
    "we also tested labelrank on a wider range of large social networks availbale at snap.stanford.edu/data/ and compared its performance with other known algorithms including lpa with synchronous update @xcite , mcl that uses a similar inflation operator @xcite and one of the state - of - the - art algorithms , infomap @xcite . since the output of lpa is nondeterministic , we repeated the algorithm 10 times and reported the best performance . for mcl , the best performance from inflation in the range of [ 1.5 , 5 ]",
    "for labelrank , @xmath39 is 0.5 or 0.6 , @xmath22 is the best from the set @xmath76 . due to the lack of knowledge of true partitioning in most networks , we used modularity as the quality measure @xcite .",
    "the detection results are shown in table . [",
    "table : compareq ] .",
    "as shown , lpa works well on only two networks with relatively dense average connections ( @xmath77 ) : football and highschool networks .",
    "in general , it performs worse than the other three algorithms .",
    "however , with the stabilization strategies introduced in this paper , labelrank , a generalized and stable version of lpa , boosts the performance significantly , e.g. , with an increase of 28.57% on pgp and 87.1% on enron email .",
    "more importantly , lpa drawback is that it might easily lead to a trivial output ( i.e. , a single giant community ) .",
    "for instance , it completely fails on eva and epinions .",
    "the conditional update in labelrank appears to provide a way to prevent such undesired output . as a result",
    ", labelrank allows label propagation algorithms to work on a wider range of network structures , including both eva and epinions .",
    "labelrank outperforms mcl significantly on highschool , epinions and enron email by 10% , 20.83% and 25.93% respectively .",
    "this provides some evidence that there is an advantage of separating network structure captured in adjacency matrix @xmath4 from the label probability matrix @xmath18 , as done in our labelrank algorithm .",
    "labelrank and infomap have close performance .",
    "labelrank outperforms infomap on highschool and epinions by 10.34% and 9.43% respectively , while infomap outperforms labelrank on epinions by 11.76% .",
    "in this paper , we introduced operators to stabilize and boost the lpa , which avoid random output and improve the performance of community detection .",
    "we believe the stabilization is important and can provide insights to an entire family of label propagation algorithms , including slpa and copra .",
    "stabilizing label propagation is our first step towards distributed dynamic network analysis .",
    "we are working on extending labelrank for community detection for evolving networks , where new data come in as a stream . with such possible extension",
    ", we will be able to design efficient algorithms ( e.g. , distributed social - based message routing algorithm ) for highly distributed and self - organizing applications such as ad hoc mobile networks and p2p networks .",
    "we also plan to extend labelrank to overlapping community detection @xcite in the near future . in the experiments , we explored and demonstrated the good detection quality on some real - world networks .",
    "we are parallelizing our algorithm for millions of nodes networks .",
    "this work was supported in part by the army research laboratory under cooperative agreement number w911nf-09 - 2 - 0053 and by the office of naval research grant no .",
    "n00014 - 09 - 1 - 0607 .",
    "the views and conclusions contained in this document are those of the authors and should not be interpreted as representing the official policies either expressed or implied of the army research laboratory , the office of naval research , or the u.s . government ."
  ],
  "abstract_text": [
    "<S> an important challenge in big data analysis nowadays is detection of cohesive groups in large - scale networks , including social networks , genetic networks , communication networks and so . in this paper , we propose _ labelrank _ , an efficient algorithm detecting communities through label propagation . </S>",
    "<S> a set of operators is introduced to control and stabilize the propagation dynamics . </S>",
    "<S> these operations resolve the randomness issue in traditional label propagation algorithms ( lpa ) , stabilizing the discovered communities in all runs of the same network . tests on real - world networks demonstrate that labelrank significantly improves the quality of detected communities compared to lpa , as well as other popular algorithms .    </S>",
    "<S> * keywords : * _ social network analysis , community detection , clustering , group _ </S>"
  ]
}
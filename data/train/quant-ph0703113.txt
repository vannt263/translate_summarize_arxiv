{
  "article_text": [
    "quantum convolutional codes provide an alternative to quantum block codes to protect quantum information for reliable quantum communication .",
    "ollivier and tillich launched the stabilizer framework for quantum convolutional codes  @xcite . using this stabilizer framework forney _",
    "et al . _ constructed rate @xmath0 quantum convolutional codes @xcite . recently , two of us constructed quantum convolutional codes from product codes @xcite and derived an algorithm to construct non - catastrophic encoders and encoder inverses  @xcite . in  @xcite ,",
    "a generalized singleton bound for a class of quantum convolutional codes has been established , together with a family of codes based on generalized reed - solomon codes meeting this bound .",
    "unit memory convolutional codes are an important class of codes that appeared in a paper by lee  @xcite .",
    "he also showed that these codes have large free distance @xmath1 among other codes ( multi - memory ) with the same rate .",
    "convolutional codes are often designed heuristically .",
    "however , classes of unit memory codes were constructed algebraically by piret based on reed - solomon codes  @xcite and by hole based on bch codes  @xcite . in a recent paper ,",
    "doubly - cyclic convolutional codes are investigated which include codes derived from reed - solomon and bch codes @xcite .",
    "these codes are related , but not identical to the codes defined in this paper .",
    "the main results of this paper are :    a method to construct convolutional codes from block codes    a new class of convolutional stabilizer codes based on bch codes .",
    "these codes have non - catastrophic dual encoders making it possible to derive non - catastrophic encoders for the quantum convolutional codes .",
    "we briefly recall the basic facts about classical convolutional codes relevant for our discussion .",
    "let @xmath2 be a finite field with @xmath3 elements .",
    "a _ convolutional code _",
    "@xmath4 of length @xmath5 and dimension @xmath6 over @xmath2 is a free module of rank @xmath6 that is a direct summand of @xmath7^n$ ] . a matrix @xmath8 in @xmath7^{k\\times n}$ ] such that @xmath9^k\\}$ ]",
    "is called a _ basic generator matrix _ of @xmath4 , and a matrix @xmath10^{(n - k)\\times n}$ ] such that @xmath11^n,{\\mathbf{v}}h^t=0\\}$ ] is called a _ basic parity check matrix _ of @xmath4 .",
    "the existence of a convolutional code @xmath4 is equivalent to the existence of four matrices @xmath12^{k\\times n}$ ] , @xmath13^{(n - k)\\times n}$ ] , @xmath14^{n\\times k}$ ] , and @xmath15^{n\\times ( n - k)}$ ] such that @xmath16 , @xmath17^k}$ ] , and @xmath18^{n - k}}=hl$ ] .",
    "let @xmath19 denote the maximum of the degrees among the polynomials in the @xmath20th row of a basic generator matrix @xmath8 , and let the _ memory _ @xmath21 be the maximal value of @xmath19 . a basic generator matrix of a convolutional code @xmath4",
    "is called _ reduced _ if the _ overall constraint length _ @xmath22 has the smallest value among all basic generator matrices of @xmath4 .",
    "it is often convenient to express the generator matrix as @xmath23 , where @xmath24 .",
    "let @xmath25 be the field of laurent series consisting of elements of the form @xmath26 for @xmath27 and @xmath28 for @xmath29 for some @xmath30 .",
    "we associate with a convolutional code @xmath4 another module @xmath31 , the entries of a generator matrix @xmath8 of @xmath32 might be rational functions .",
    "let @xmath33 where @xmath34 .",
    "then we can identify @xmath35 with an element in @xmath36 as @xmath37 , where @xmath38 .",
    "we define the weight of @xmath35 as @xmath39 .",
    "a generator matrix @xmath8 is called _ catastrophic _ if there exists a @xmath40 of infinite hamming weight such that @xmath41 has finite hamming weight .",
    "the free distance @xmath1 of @xmath4 is defined as @xmath42 a rate @xmath43 convolutional code with memory @xmath21 , overall constraint length @xmath44 , and free distance @xmath1 is denoted by @xmath45 .",
    "sometimes a shorter notation @xmath46 is also used .",
    "the _ euclidean inner product _ of two @xmath5-tuples @xmath47 and @xmath48 in @xmath7^n$ ] is defined as @xmath49 .",
    "the euclidean dual of a convolutional code @xmath4 is denoted by @xmath50^n\\mid { \\langle { \\mathbf}{u}(d)|{\\mathbf}{v}(d)\\rangle}=0 \\text { for all } { \\mathbf}{v}(d)\\in c\\}$ ] .",
    "note that @xmath51 , the parity check matrix of @xmath4 , _ does not _ generate the euclidean dual in general .",
    "instead , one has to reverse the order of the coefficients of the polynomials in @xmath51 , _",
    "i.e. _ consider the matrix @xmath52 , where @xmath53 is the memory of the code generated by @xmath51 .",
    "for codes over @xmath54 , we define the hermitian inner product as @xmath55 , where @xmath56 and @xmath57 .",
    "the hermitian dual of @xmath4 is then @xmath58^n\\mid { \\langle { \\mathbf}{u}(d)|{\\mathbf}{v}(d)\\rangle_h}=0 \\text { for all } { \\mathbf}{v}(d)\\in c\\}$ ] .",
    "we briefly describe the stabilizer framework for quantum convolutional codes , see also @xcite .",
    "the stabilizer is given by a matrix @xmath59^{(n - k)\\times 2n}.\\ ] ] which satisfies the symplectic orthogonality condition @xmath60 .",
    "let @xmath61 be a quantum convolutional code defined by a stabilizer matrix as in eq .",
    "( [ stab - mat ] ) .",
    "then @xmath5 is called the frame size , @xmath6 the number of logical qudits per frame , and @xmath43 the rate of @xmath61 .",
    "it can be used to encode a sequence of blocks with @xmath6 qudits in each block ( that is , each element in the sequence consists of @xmath6 quantum systems each of which is @xmath3-dimensional ) into a sequence of blocks with @xmath5 qudits .    the memory of the quantum convolutional code is defined as @xmath62 .",
    "we use the notation @xmath63_q$ ] to denote a quantum convolutional code with the above parameters .",
    "we can identify @xmath64 with the generator matrix of a self - orthogonal classical convolutional code over @xmath2 or @xmath54 , which gives us a means to construct convolutional stabilizer codes .",
    "analogous to the classical codes we can define the free distance , @xmath1 and the degree @xmath44 , prompting an extended notation @xmath65_q$ ] .",
    "all the parameters of the quantum convolutional code can be related to the associated classical code as the following propositions will show . for proof and further details",
    "see @xcite .",
    "[ pr : css ] let @xmath66 be a convolutional code such that @xmath67 , where the dimension of @xmath68 is given by @xmath69 .",
    "then an @xmath65_q$ ] convolutional stabilizer code exists whose free distance is given by @xmath70 , which is said to be pure if @xmath71 .",
    "[ pr : c2qherm ] let @xmath4 be an @xmath72 convolutional code such that @xmath73 .",
    "then there exists an @xmath65_q$ ] convolutional stabilizer code , where @xmath74 .",
    "in this section , we give a method to construct convolutional codes from block codes .",
    "this generalizes an earlier construction by piret @xcite to construct convolutional codes from block codes .",
    "one benefit of this method is that we can easily bound the free distance using the techniques for block codes .",
    "another benefit is that we can derive non - catastrophic encoders .      given an @xmath75_q$ ] block code with parity check matrix @xmath76 , it is possible to split the matrix @xmath76 into @xmath77 disjoint submatrices @xmath78 , each of which has @xmath5 columns , such that @xmath79 .",
    "\\label{eq : splith}\\end{aligned}\\ ] ] then we can form the polynomial matrix @xmath80 where the number of rows of @xmath81 equals the maximal number @xmath82 of rows among the matrices @xmath78 .",
    "the matrices @xmath83 are obtained from the matrices @xmath78 by adding zero - rows at the bottom such that the matrix @xmath83 has @xmath82 rows in total .",
    "then @xmath81 generates a convolutional code . the fact that the @xmath78 come from a common block code allows us to characterize the parameters of the convolutional code and its dual using the techniques of block codes .",
    "our first result concerns a non - catastrophic encoder for the code generated by @xmath81 .",
    "[ th : noncatadualenc ] let @xmath84 be an @xmath75_q$ ] linear code with parity check matrix @xmath85 .",
    "assume that @xmath76 is partitioned into submatrices @xmath86 as in eq .",
    "( [ eq : splith ] ) such that @xmath87 and @xmath88 for @xmath89 .",
    "define the polynomial matrix @xmath81 as in eq .",
    "( [ eq : cch ] ) .",
    "then we have :    [ lm : ccbasic ] the matrix @xmath81 is a reduced basic generator matrix .",
    "[ lm : ccdual ] if the code @xmath4 contains its euclidean dual @xmath90 , respectively its hermitian dual @xmath91 , then the convolutional code @xmath92\\}$ ] is contained in its dual @xmath93 , respectively its hermitian dual @xmath94 .",
    "[ lm : ccdist ] let @xmath1 and @xmath95 respectively denote the free distances of @xmath96 and @xmath93 .",
    "let @xmath97 be the minimum distance of the code @xmath98 , and let @xmath99 denote the minimum distance of @xmath68 .",
    "then the free distances are bounded by @xmath100 and @xmath101 .",
    "to prove the claim ( a ) , it suffices to show that ( i ) @xmath102 has full rank @xmath82 , ( ii ) @xmath103 , has full rank @xmath82 , where for @xmath104 we define @xmath105 , and ( iii ) @xmath81 is non - catastrophic ; cf .",
    "* theorem 2.16 and theorem 2.24 ) .    by definition",
    ", @xmath106 has rank @xmath82 , so ( i ) is satisfied .",
    "condition ( ii ) is satisfied , since the rows of @xmath76 are linearly independent ; thus , the rows of the highest degree coefficient matrix are independent as well .",
    "it remains to prove ( iii ) .",
    "seeking a contradiction , we assume that the generator matrix @xmath81 is catastrophic .",
    "then there exists an input sequence @xmath107 with infinite hamming weight that is mapped to an output sequence @xmath108 with finite hamming weight , _",
    "@xmath109 for all @xmath110 .",
    "we have @xmath111 where @xmath112 and @xmath113 . by construction , the vector spaces generated by the rows of the matrices",
    "@xmath78 intersect trivially .",
    "hence @xmath109 for @xmath110 implies that @xmath114 for @xmath115 .",
    "the matrix @xmath116 has full rank .",
    "this implies that @xmath117 for @xmath110 , contradicting the fact that @xmath118 has infinite hamming weight ; thus , the claim ( a ) holds .",
    "to prove the claim ( b ) , let @xmath119 , @xmath120 be any two codewords in @xmath121 $ ] .",
    "then from eq .",
    "( [ eq : encoding ] ) , we see that @xmath122 and @xmath123 are in the rowspan of @xmath76 _ i.e. _ they are elements of @xmath68 , for any @xmath124 . since @xmath125 , it follows that @xmath126 , for any @xmath127 which implies that @xmath128 .",
    "hence @xmath129 .",
    "similarly , we can show that if @xmath130 , then @xmath131 .",
    "for the claim ( c ) , without loss of generality assume that the codeword @xmath132 is in @xmath93 , with @xmath133 .",
    "it follows that @xmath134 for @xmath135 , where @xmath136 denotes the @xmath137th row of @xmath81 .",
    "in particular we have @xmath138 and @xmath139 .",
    "it follows that @xmath140 and @xmath141 . if @xmath142 , then @xmath143 and @xmath144 implying @xmath145 . if @xmath146 , then @xmath147 implies @xmath148 for @xmath149 , whence @xmath150 and @xmath151 , implying that @xmath152 .",
    "it follows that @xmath153 , giving the lower bound on @xmath95 .",
    "for the upper bound note that if @xmath154 is a codeword of @xmath4 , then @xmath155 .",
    "from @xmath154 we can construct a codeword @xmath156 by padding with zeros .",
    "now , @xmath157 and hence @xmath158 .",
    "since @xmath159 we obtain that @xmath160 .",
    "finally , let @xmath161 be a non - zero codeword in @xmath96 .",
    "we saw earlier in the proof of ( b ) that every @xmath162 is in @xmath68",
    ". thus @xmath163 .    a special case of our claim ( a ) has been established by a different method in  ( * ? ? ?",
    "* proposition 1 ) .",
    "one of the attractive features of bch codes is that they allow us to design codes with desired distance .",
    "there have been prior approaches to construct convolutional bch codes , see @xcite , and most notably @xcite , where one can control the free distance of the convolutional code .",
    "here we focus on codes with unit memory .",
    "our codes have better distance parameters as compared to hole s construction @xcite and are easier to construct compared to @xcite .",
    "let @xmath2 be a finite field with @xmath3 elements , @xmath5 be a positive integer such that @xmath164 .",
    "let @xmath165 be a primitive @xmath5th root of unity .",
    "a bch code @xmath4 of designed distance @xmath166 and length @xmath5 is a cyclic code with generator polynomial @xmath167 in @xmath168/\\langle x^n-1\\rangle$ ] whose defining set is given by @xmath169 , where @xmath170 .",
    "let @xmath171.\\ ] ] then @xmath172 .",
    "if @xmath173 , then a parity check matrix @xmath76 for @xmath4 is given by writing every entry in the matrix @xmath174 as a column vector over some @xmath2-basis of @xmath175 , and removing any dependent rows .",
    "let @xmath176 denote a basis of @xmath175 over @xmath2 .",
    "suppose that @xmath177 is a vector in @xmath178 , then we can write @xmath179 for @xmath180",
    ". let @xmath181 be vectors in @xmath182 with @xmath183 , for a vector @xmath184 in @xmath182 , we have @xmath185 if and only if @xmath186 for all @xmath183 .",
    "for a matrix @xmath187 over @xmath175 , let @xmath188 denote the matrix that is obtained by expanding each row into @xmath189 rows over @xmath2 with respect to the basis @xmath190 , and deleting all but the first rows that generate the rowspan of the expanded matrix",
    ". then @xmath191 .",
    "it is well known that the minimum distance of a bch code is greater than or equal to its designed distance @xmath166 , which is very useful in constructing codes@xcite . before we can construct convolutional bch codes we need the following result on the distance of cyclic codes .",
    "[ lm : hartman ] let @xmath164 and @xmath192 .",
    "let @xmath193 be a cyclic code with defining set    @xmath194    the minimum distance @xmath195 of @xmath4 is lower bounded as    @xmath196    our goal is to bound the distance of @xmath4 using the hartmann - tzeng bound ( for instance , see @xcite ) .",
    "suppose that there exists @xmath197 such that @xmath198 .",
    "suppose further , that there exists @xmath199 , where @xmath200 and @xmath201 for all @xmath202 .",
    "then by ( * ? ? ?",
    "* theorem  4.5.6 ) , the minimum distance of @xmath4 is @xmath203 .",
    "we choose @xmath204 , so that @xmath205 is satisfied for any @xmath206 .",
    "next we choose @xmath207 such that @xmath208 and @xmath209 for @xmath202 , with @xmath210 as large as possible .",
    "now two cases can arise . if @xmath211 , then there _ may not _ always exist a set @xmath212 such that @xmath208 . in this case",
    "we relax the constraint that @xmath208 and choose @xmath212 as the set of maximum number of consecutive elements .",
    "then @xmath213 and @xmath214 giving the distance @xmath215 .",
    "if @xmath216 , then we can always choose a set @xmath217 such that @xmath208 . as we want to make @xmath210 as large as possible , the worst case arises when @xmath218 .",
    "since @xmath209 holds for @xmath202 , it follows @xmath219 .",
    "thus @xmath220 .",
    "thus the distance @xmath221 .",
    "[ th : bchcc ] let @xmath5 be a positive integer such that @xmath164 , @xmath173 and @xmath222 , where @xmath223)\\right\\rfloor.\\ ] ] then there exists a unit memory rate @xmath43 convolutional bch code with free distance @xmath224 and @xmath225 , where @xmath226 .",
    "the free distance of the dual is @xmath227 .",
    "let @xmath84 be a narrow - sense bch code of designed distance @xmath228 and let @xmath190 a basis of @xmath175 over @xmath2 . recall that a parity check matrix for @xmath4 is given by @xmath229 .",
    "further , let @xmath230 , then from @xmath231,\\label{eq : bchh}\\end{aligned}\\ ] ] it follows that @xmath232^t$ ] , where @xmath233 is obtained from @xmath234 by removing all rows common to @xmath235 .",
    "the code @xmath236 with parity check matrix @xmath230 coincides with the narrow - sense bch code of length @xmath5 and designed distance @xmath237 .    by (",
    "* theorem  10 ) , we have @xmath238 and @xmath239 which implies @xmath240 , @xmath241 , and @xmath242 . for @xmath243",
    ", we have @xmath244 ; therefore , @xmath245 .    by theorem",
    "[ th : noncatadualenc]([lm : ccbasic ] ) , the matrix @xmath76 defines a reduced basic generator matrix @xmath246 of a convolutional code of dimension @xmath82 , while its dual which we refer to as a convolutional bch code is of dimension @xmath247 .",
    "now @xmath233 is the parity check matrix of a cyclic code , @xmath248 of the form given in lemma  [ lm : hartman ] , _ i.e. _ the defining set of @xmath248 is @xmath249 as defined in ( [ eq : defining_set ] ) with @xmath250 and @xmath251 .",
    "since @xmath233 is linearly independent of @xmath252 we have @xmath253 in the definition of @xmath249 .    by theorem",
    "[ th : noncatadualenc]([lm : ccdist ] ) , the free distance of the convolutional bch code is bounded as @xmath254 . by lemma  [ lm : hartman ] ,",
    "@xmath255 and by the bch bound @xmath256 .",
    "thus @xmath257 .",
    "the dual free distance also follows from theorem  [ th : noncatadualenc]([lm : ccdist ] ) as @xmath258 .",
    "but @xmath259 by ( * ? ? ?",
    "* lemma  12 ) .",
    "under some restrictions on the designed free distance , we can use convolutional codes derived in the previous section to construct quantum convolutional codes .",
    "[ th : bchqcceuclid ] assume the same notation as in theorem  [ th : bchcc ] .",
    "then there exists a quantum convolutional code @xmath61 with parameters @xmath260_q$ ] , where @xmath261 . for the free distance of @xmath61",
    "the bound @xmath262 holds and it is pure to @xmath263 .",
    "we construct a unit memory @xmath264 classical convolutional bch code as per theorem  [ th : bchcc ] .",
    "its polynomial parity check matrix @xmath81 is as given in eq .",
    "( [ eq : bchhd ] ) . using the notation as in the proof of theorem  [",
    "th : bchcc ] , we see that the code contains its dual if @xmath76 is self - orthogonal . but given the restrictions on the designed distance , we know from ( * ? ? ?",
    "* theorem  3 ) that the bch block code defined by @xmath76 contains its dual .",
    "it follows from theorem  [ th : noncatadualenc]([lm : ccdual ] ) that the convolutional bch code contains its dual . from proposition",
    "[ pr : css ] we can conclude that there exists a convolutional code with the parameters @xmath260_q$ ] . by theorem",
    "[ th : bchcc ] the free distance of the dual is @xmath265 , also implying its purity .",
    "another useful method to construct quantum codes makes use of codes over @xmath54 .",
    "[ lem : qcchermitianbch ] let @xmath266 , where and @xmath267 . then there exist quantum convolutional codes with parameters @xmath268_q$ ] and free distance @xmath269 , where @xmath270 .    by theorem  [ th : bchcc ] there exists an @xmath271 convolutional bch code with the polynomial parity check matrix as in eq .",
    "( [ eq : bchhd ] ) .",
    "the parent bch code has design distance @xmath228 and given the range of @xmath166 , we know by ( * ? ? ?",
    "* theorem  14 ) that it contains its hermitian dual . by theorem",
    "[ th : noncatadualenc]([lm : ccdual ] ) , the convolutional code also contains its hermitian dual . by proposition",
    "[ pr : c2qherm ] , we can conclude that there exists an @xmath260_q$ ] code with @xmath224 .",
    "we conclude by noting that the convolutional codes in theorems [ th : bchqcceuclid ] and [ lem : qcchermitianbch ] have non - catastrophic encoders and encoder inverses .",
    "this follows directly from the fact that @xmath81 in eq .",
    "( [ eq : bchhd ] ) is a basic generator matrix ( cf .",
    "we would like to thank one of the referees for drawing our attention to @xcite .",
    "this research was supported by nsf career award ccf  0347310 , nsf grant ccf  0622201 , and a texas a&m titf initiative ."
  ],
  "abstract_text": [
    "<S> quantum convolutional codes can be used to protect a sequence of qubits of arbitrary length against decoherence . we introduce two new families of quantum convolutional codes . </S>",
    "<S> our construction is based on an algebraic method which allows to construct classical convolutional codes from block codes , in particular bch codes . </S>",
    "<S> these codes have the property that they contain their euclidean , respectively hermitian , dual codes . </S>",
    "<S> hence , they can be used to define quantum convolutional codes by the stabilizer code construction . </S>",
    "<S> we compute bch - like bounds on the free distances which can be controlled as in the case of block codes , and establish that the codes have non - catastrophic encoders . </S>"
  ]
}
{
  "article_text": [
    "an attractive idea in the zeitgeist of contemporary culture is `` the wisdom of crowds '' @xcite .",
    "this is the idea that , by bringing together diversity and independence of opinions , groups can be better at making decisions than the individuals that make up the group .",
    "for example , in 1907 galton observed the wisdom of the crowd at guessing the weight of an ox in the west of england fat stock and poultry exhibition .",
    "the median of the 787 estimates was 1207 lb , within 1% of the correct weight of 1198 lb .",
    "we can view different voting rules as having different opinions on the `` best '' outcome to an election .",
    "we argue here that it may pay to combine these different opinions together .",
    "we provide both theoretical and experimental evidence for this thesis . on the theoretical side ,",
    "we argue that a combination of voting rules can inherit a desirable property like condorcet consistency when only one of the base voting rules is itself condorcet consistent .",
    "we also prove that combining voting rules together can make strategic voting more computationally difficult . on the experimental side , we study the impact of combining voting rules on the performance of approximation methods for constructing manipulations",
    ".      different ways of combining voting rules to make manipulation computationally hard have been investigated recently .",
    "conitzer and sandholm @xcite studied the impact on the computational complexity of manipulation of adding an initial round of the cup rule to a voting rule .",
    "this initial round eliminates half the candidates and makes manipulation np - hard to compute for several voting rule including plurality and borda .",
    "elkind and lipmaa @xcite extended this idea to a general technique for combining two voting rules .",
    "the first voting rule is run for some number of rounds to eliminate some of the candidates , before the second voting rule is applied to the candidates that remain .",
    "they proved that many such combinations of voting rules are np - hard to manipulate .",
    "note that theirs is a sequential combinator , in which the two rules are run in sequence , whilst ours ( as we will see soon ) is a parallel combinator , in which the two rules are run in parallel .",
    "more recently , walsh and xia @xcite showed that using a lottery to eliminate some of the voters ( instead of some of the candidates ) is another mechanism to make manipulation intractable to compute .",
    "voting is a general mechanism to combine together the preferences of agents .",
    "many different voting rules have been proposed over the years , providing different opinions as to the `` best '' outcome of an election .",
    "we formalise voting as follows .",
    "a _ profile _ is a sequence of @xmath0 total orders over @xmath1 candidates .",
    "a _ voting rule _ is a function mapping a profile onto one candidate , the _ winner_. let @xmath2 be the number of voters preferring @xmath3 to @xmath4 in @xmath5 . where @xmath5 is obvious from the context , we write @xmath6 .",
    "let @xmath7 be 1 iff @xmath8 and 0 otherwise .",
    "we consider some of the most common voting rules .",
    "* @xmath9 positional scoring rules : * given a _ scoring vector _ @xmath10 of weights , the @xmath3th candidate in a vote scores @xmath11 , and the winner is the candidate with highest total score over all the votes .",
    "the * plurality * rule has the weight vector @xmath12 , the * veto * rule has the vector @xmath13 , the * k - approval * rule has the vector @xmath14 containing @xmath15 1s , and the * borda * rule has the vector @xmath16 .    *",
    "@xmath9 cup : * the winner is the result of a series of pairwise majority elections between candidates . given the _ agenda _",
    ", a binary tree in which the roots are labelled with candidates , we label the parent of two nodes by the winner of the pairwise majority election between the two children .",
    "the winner is the label of the root .    *",
    "@xmath9 copeland : * the candidate with the highest copeland score wins .",
    "the copeland score of candidate @xmath3 is @xmath17 .",
    "the copeland winner is the candidate that wins the most pairwise elections .    *",
    "@xmath9 maximin : * the maximin score of candidate @xmath3 is @xmath18 .",
    "the candidate with the highest maximin score wins .",
    "* @xmath9 single transferable vote ( stv ) : * this rule requires up to @xmath19 rounds . in each round , the candidate with the least number of voters ranking them first is eliminated until one of the remaining candidates has a majority .    *",
    "@xmath9 bucklin ( simplified ) : * the bucklin score of a candidate is the smallest @xmath15 such that the @xmath15-approval score of the candidate is strictly larger than @xmath20 . the candidate with the smallest bucklin score wins .",
    "note that in some cases , there can be multiple winning candidates ( e.g. multiple candidates with the highest borda score ) .",
    "we therefore may also need a tie - breaking mechanism .",
    "all above voting rules can be extended to choose a winner for profiles with weights . in this paper",
    ", we study the _ manipulation _ problem ( with weighted votes ) , defined as follows .    in a _",
    "problem , we are given an instance @xmath21 , where @xmath22 is a voting rule , @xmath23 is the non - manipulators profile , @xmath24 represents the weights of @xmath23 , @xmath25 is the alternative preferred by the manipulators , @xmath15 is the number of manipulators , and @xmath26 represents the weights of the manipulators . we are asked whether there exists a profile @xmath27 of indivisible votes for the manipulators such that @xmath28 .    when all weights equal to @xmath29 , the problem is called manipulation with unweighted votes .",
    "in this paper , we assume that the manipulators controls the tie - breaking mechanism , that is , all ties are broken in favor of @xmath25 .    a large number of normative properties that voting rules might possess have been put forwards including the following .",
    "* @xmath9 unanimity : * if a candidate is ranked in the top place by all voters , then this candidate wins .    *",
    "@xmath9 monotonicity : * if we move the winner up a voter s preference order , while keeping preferences unchanged , then the winner should not change .    *",
    "@xmath9 consistency : * if two sets of votes select the same winner then the union of these two sets should also select the same winner .    * @xmath9 majority criterion : * if the majority of voters rank a same candidate at the top , then this candidate wins .    *",
    "@xmath9 condorcet consistency : * if a _",
    "condorcet winner _ exists ( a candidate who beats all others in pairwise elections ) then this candidate wins .",
    "* @xmath9 condorcet loser criterion : * if a _",
    "condorcet loser _ exists ( a candidate who is beaten by all others in pairwise elections ) then this candidate does not win .",
    "such properties can be used to compare voting rules .",
    "for example , whilst stv satisfies the majority criterion , borda does not . on the other hand ,",
    "borda is monotonic but stv is not .",
    "we consider a simple combinator , written @xmath30 , for combining together two or more voting rules .",
    "this combinator collects together the set of winners from the different rules .",
    "if all rules agree , this is the overall winner .",
    "otherwise we recursively call the combination of voting rules on this restricted set of winning candidates .",
    "if the recursion does not eliminate any candidates , we call some tie - breaking mechanism on the remaining candidates . for example , @xmath31 collects together the plurality and veto winners of an election .",
    "if they are the same candidate , then this is the winner .",
    "otherwise , there is a runoff in which we call @xmath31 on the plurality and veto winners .",
    "as both plurality and veto on two candidates compute the majority winner , the overall winner of @xmath31 is the winner of a majority election between the plurality and veto winners .",
    "this combinator has some simple algebraic properties .",
    "for example , it is idempotent and commutative .",
    "that is , @xmath32 and @xmath33 .",
    "it has other more complex algebraic properties .",
    "for example , @xmath34 .",
    "in addition , many normative properties are inherited from the base voting rules .",
    "interestingly , it is sometimes enough for just one of the base voting rules to have a normative property for the composition to have the same property .    for unanimity , the majority criterion , condorcet consistency , and the condorcet loser criterion , if one of @xmath35 to @xmath36 and the tie - breaking mechanism satisfy the property , then @xmath37 also satisfy the same property .    on the other hand , there are some properties which can be lost by the introduction of a run - off .",
    "@xmath38 and @xmath39 are both monotonic but @xmath40 is not .    *",
    "proof :  * suppose we have 6 votes for @xmath41 , 4 votes for @xmath42 , and 3 votes for @xmath43 and 3 votes for @xmath44 . tie - breaking for both borda and plurality is @xmath42 .",
    "now @xmath25 is the borda winner and @xmath45 is the plurality winner . by tie - breaking , @xmath25 wins the run - off .",
    "however , if we modify one vote for @xmath44 to @xmath42 , then @xmath46 becomes the plurality winner and wins the run - off .",
    "hence , @xmath40 is not monotonic .    we give a stronger result for consistency .",
    "scoring rules are consistent , but the combination of any two different scoring rules is not . by `` different rules '' we mean that there exists a profile for which these two rules select different winners .",
    "if two scoring rules are different , then their scoring vectors must be different .",
    "we note that the reverse is not true .",
    "let @xmath47 and @xmath48 be any two different scoring rules , then @xmath49 is not consistent .",
    "* proof :  * let @xmath50 and @xmath51 be the score given to candidate @xmath45 by @xmath47 and @xmath48 in profile @xmath5 respectively . since @xmath47 and @xmath48 are different , there exists @xmath52 over @xmath53 to @xmath54 such that @xmath47 on @xmath52 selects @xmath53 and @xmath48 on @xmath52 selects @xmath55 . then @xmath56 but",
    "@xmath57 . wlog suppose @xmath53 beats @xmath55 in pairwise elections in @xmath52 and tie breaking elects @xmath53 in favour of @xmath55 when they have the same top score .",
    "let @xmath58 consist of @xmath1 votes @xmath59 to @xmath60 where for @xmath61 , @xmath62 ranks @xmath55 in @xmath3th place and @xmath53 in @xmath63th place , and @xmath60 ranks @xmath53 in 1st place and @xmath55 in last place . then @xmath64 and @xmath65 .",
    "let @xmath15 be such that @xmath66 , and @xmath67 be the following profile of cyclic permutations : @xmath68 , @xmath69 , @xmath70 , @xmath71 , @xmath72 , @xmath73 , @xmath70 , @xmath74 .",
    "let @xmath75 be @xmath15 copies of @xmath58 , and @xmath76 be @xmath77 copies of @xmath52 , @xmath60 and @xmath78 copies of @xmath67 .",
    "now @xmath49 on @xmath75 or @xmath76 selects @xmath53 as winner . but @xmath49 on @xmath79 selects @xmath55 .",
    "it follows immediately that @xmath40 is not consistent .",
    "combining voting rules together can hinder strategic voting .",
    "one appealing escape from the gibbard - satterthwaite theorem was proposed by bartholdi , tovey and trick @xcite .",
    "perhaps it is computationally so difficult to find a successful manipulation that voters have little option but to report their true preferences ? as is common in the literature , we consider two different settings : unweighted votes where the number of candidates is large and we have just one or two manipulators , and weighted votes where the number of candidates is small but we have a coalition of manipulators .",
    "whilst unweighted votes are perhaps more common in practice , the weighted case informs us about the unweighted case when we have probabilistic information about the votes @xcite .",
    "since there are many possible combinations of common voting rules , we give a few illustrative results covering some of the more interesting cases . with unweighted votes",
    ", we prove that computational resistance to manipulation is typically inherited from the base rules . with weighted votes ,",
    "our results are stronger .",
    "we prove that there are many combinations of voting rules where the base rules are polynomial to manipulate but their combination is np - hard . combining voting rules thus offers another mechanism to make manipulation more computationally difficult .",
    "it seems natural that the combination of voting rules inherits the computational complexity of manipulating the base rules .",
    "however , there is not a simple connection between the computational complexity of the bases rules and their combination . in this section ,",
    "we show two examples of artificial voting rules to illustrate this discrepancy . in the first example , manipulation for the base rules are np - hard , but manipulation for their combination can be computed in polynomial - time ; in the second example , manipulation for the base rules are in p , but manipulation for their combination is np - hard to compute .    there exist voting rules @xmath47 and @xmath48 for which computing a manipulation is np - hard but computing a manipulation of @xmath49 is polynomial .",
    "* proof :  * we give a reduction from 1 in 3-sat on positive clauses .",
    "boolean variables @xmath29 to @xmath0 are represented by the candidates @xmath29 to @xmath0 .",
    "we also have two additional candidates @xmath80 and @xmath81 . any vote with @xmath80 in first place",
    "represents a clause .",
    "the first three candidates besides @xmath80 and @xmath81 are the literals in the clause .",
    "any vote with @xmath81 in first place represents a truth assignment .",
    "the positive literals in the truth assignment are those boolean variables whose candidates appear between @xmath81 and @xmath80 in the vote . with 2 candidates , @xmath47 and",
    "@xmath48 both elect the majority winner . with 3 or more candidates , @xmath47 elects candidate @xmath81 if there is a truth assignment in the votes that satisfies exactly one out of the three literals in each clause represented by the votes and otherwise elects @xmath80 . computing",
    "a manipulation of @xmath47 is np - hard .",
    "similarly , with 3 or more candidates , @xmath48 elects candidate @xmath80 if there is a truth assignment in the votes that satisfies exactly one out of the 3 literals in every clause represented by the votes and otherwise elects @xmath81 . computing",
    "a manipulation of @xmath48 is np - hard .",
    "however , @xmath49 is polynomial to manipulate since @xmath80 and @xmath81 always go through to the runoff where the majority candidate wins .",
    "there exist voting rules @xmath47 and @xmath48 for which computing a manipulation is polynomial but computing a manipulation of @xmath49 is np - hard .",
    "* proof :  * the proof uses a similar reduction from 1 in 3-sat on positive clauses . with 2 candidates , @xmath47 and",
    "@xmath48 both elect the majority winner . with 3 or more candidates , @xmath47 elects candidate @xmath81 if there is a truth assignment in the votes that satisfies at least one out of the three literals in each clause represented by the votes and otherwise elects @xmath80 , whilst @xmath48 elects candidate @xmath81 if there is a truth assignment in the votes that satisfies at most one out of the three literals in each clause represented by the votes and otherwise elects @xmath80 . computing",
    "a manipulation of @xmath47 or @xmath48 is polynomial since we can simply construct either the vote that sets each boolean variable to true or to false .",
    "however , computing a manipulation of @xmath49 as it may require solving a 1 in 3-sat problem on positive clauses .",
    "if computing a manipulation of the base rules is polynomial , it often remains polynomial to compute a manipulation of the combined rules .",
    "however , manipulations may now be more complex to compute .",
    "we need to find a manipulation of one base rule that is compatible with the other base rules , and that also wins the runoff .",
    "we illustrate this for various combinations of scoring rules .    computing",
    "a manipulation of @xmath31 is polynomial .",
    "* proof :  * we present a polynomial - time algorithm that checks whether @xmath15 manipulators can make @xmath25 win in the following two steps : we first check for every candidate @xmath45 , whether the manipulators can make @xmath25 to be the plurality winner for @xmath82 while @xmath45 is the veto winner , and @xmath25 beats @xmath45 in the runoff ( or @xmath83 ) .",
    "then , we check for every candidate @xmath45 whether the manipulators can make @xmath25 to be the veto winner while @xmath45 is the plurality winner , and @xmath25 beats @xmath45 in the runoff .    for the first step ,",
    "let @xmath84 be a subset of candidates that beat @xmath45 in @xmath5 under @xmath85 .",
    "we denote @xmath86 as the difference in the veto score of @xmath87 , @xmath88 , and @xmath45 in @xmath5 . if the veto scores are equal and @xmath89 in the tie - breaking rule then we set @xmath90 .",
    "if @xmath91 then @xmath45 can not win under @xmath85 .",
    "otherwise , we place @xmath87 in last positions in exactly @xmath86 manipulator votes .",
    "this placing is necessary for @xmath45 to win under @xmath85 .",
    "we place @xmath25 in the first position and @xmath45 in the second position in all votes in @xmath92 .",
    "we fill the remaining positions arbitrarily .",
    "this manipulation is optimal under an assumption that @xmath45 wins under @xmath85 as @xmath25 is always placed in the first position . for each possible candidate for @xmath45 , we check if such a manipulation is possible and check if @xmath25 is the winner of the run - off round .",
    "if we find a manipulation we stop .",
    "the special case when @xmath93 is analogous .    for the second step ,",
    "let @xmath46 be the candidate with maximum @xmath38 score in @xmath5 .",
    "we denote @xmath94 to be the difference in the plurality scores of @xmath46 and @xmath45 .",
    "we place @xmath45 in the @xmath94 first positions in the manipulator votes .",
    "the condition is necessary for @xmath45 to win under @xmath38 .",
    "we put @xmath45 in the second position in the remaining votes .",
    "we put @xmath25 in the second position after @xmath45 in @xmath94 manipulator votes and put @xmath25 in the first position in the remaining @xmath95 votes . to ensure that @xmath25 wins under @xmath85 we perform the same procedure as above .",
    "the only simplification is that we do not need to worry about tie - breaking rule as @xmath25 wins tie - breaking by assumption .",
    "we fill the remaining positions arbitrarily .",
    "this manipulation is optimal under an assumption that @xmath45 wins under @xmath38 , as @xmath25 is placed in the first position unless @xmath45 has to occupy it .",
    "for each possible candidate @xmath45 we check if such a manipulation is possible and check if @xmath25 is the winner of the run - off round . if we find a manipulation we stop . otherwise , there is no manipulation .",
    "it is also in p to decide if a single agent can manipulate an election for any combination of scoring rules .",
    "interestingly , we can use a perfect matching algorithm to compute this manipulation .",
    "computing a manipulation of @xmath49 is polynomial for a single manipulator and any pair of scoring rules , @xmath47 and @xmath48 .",
    "* proof :  * suppose there is a manipulating vote @xmath96 such that @xmath25 wins @xmath97 under @xmath49 .",
    "let @xmath47 and @xmath48 have the scoring vectors @xmath98 and @xmath99 . as is common in the literature , we assume tie - breaking is in favour of @xmath25 .",
    "suppose @xmath25 wins under @xmath47 in a successful manipulation .",
    "the case that @xmath25 wins under @xmath48 is dual .",
    "suppose another candidate @xmath45 wins under @xmath48 , @xmath25 is placed at position @xmath3 and @xmath45 is placed at position @xmath4 in @xmath96 .",
    "we show how to construct this vote if it exists by finding a perfect matching in a bipartite graph . for each candidate besides @xmath25 and @xmath45 , we introduce a vertex in the first partition . for each position in @xmath100 \\setminus \\{i , j\\}$ ]",
    "we introduce a vertex in the second partition . for each candidate @xmath101 besides @xmath25 and @xmath45 we connect the corresponding vertex with a vertex @xmath102 in the second partition iff ( 1 ) the score of @xmath101 in @xmath5 under @xmath47 less the score of @xmath25 in @xmath5 under @xmath47 is less than or equal to @xmath103 , and ( 2 ) the score of @xmath101 in @xmath5 under @xmath48 less the score of @xmath45 in @xmath5 under @xmath48 is less than or equal to @xmath104 , or if two differences are equal then @xmath45 is before @xmath101 in the tie - breaking rule .",
    "in other words , we look for a placement of the remaining candidates in @xmath96 such that @xmath25 wins in @xmath105 under @xmath47 , @xmath45 wins in @xmath105 under @xmath48 , @xmath25 is at position @xmath3 and @xmath45 is at position @xmath4 in @xmath96 .",
    "there exists a perfect matching in this graph iff there is a manipulating vote that satisfies our assumption . if @xmath93 , the reasoning is similar but we only need to fix the position of @xmath25 . using this procedure",
    ", we check for each candidate @xmath45 and for each pair of positions @xmath106 if there exists a vote @xmath96 such that @xmath25 wins in @xmath105 under @xmath47 , @xmath45 wins in @xmath105 under @xmath48 , @xmath25 is at position @xmath3 and @xmath45 is at position @xmath4 in @xmath96 . if such a vote exists , we also check if @xmath25 beats @xmath45 in the run - off round .",
    "if @xmath25 loses to @xmath45 in the run - off for all combinations of @xmath45 and @xmath106 then no manipulation exists .",
    "we begin with combinations involving stv .",
    "this was the first commonly used voting rule shown to be np - hard to manipulate by a single manipulator @xcite .",
    "not surprisingly , even when combined with voting rules which are polynomial to manipulate like plurality , veto , or @xmath15-approval , manipulation remains np - hard to compute .",
    "computing a manipulation of @xmath107 is np - hard for @xmath108 for @xmath29 manipulator .",
    "* proof :  * ( sketch ) consider the np - hardness proof for manipulation of stv  @xcite .",
    "we denote the profile constructed in the proof @xmath5 .",
    "the main idea is to modify @xmath5 so that the preferred candidate @xmath25 can win under @xmath107 iff @xmath25 can win the modified election under @xmath109 . for reasons of space",
    ", we illustrate this for @xmath110 .",
    "other proofs are similar .",
    "candidate @xmath111 ( who is the other possible winner of @xmath5 ) has the top borda score .",
    "hence , @xmath25 must win by winning the stv election ( which is possible iff there is a 3-cover ) .",
    "we still have the problem that @xmath111 beats @xmath25 in the run - off .",
    "hence , we introduce a dummy candidate @xmath112 after @xmath25 in each vote .",
    "this makes sure that the score of @xmath112 is greater than or equal to @xmath113 .",
    "we also introduce @xmath114 blocks of @xmath0 votes .",
    "let @xmath115 .",
    "the borda score of @xmath112 in @xmath116 is greater than that of any other candidate . in an stv election on @xmath116",
    ", @xmath112 reaches the last round .",
    "therefore , the elimination order remains determined by the votes in @xmath5 .",
    "hence , if there is a 3-cover , the candidate @xmath25 can reach the last round . in the worst case , when @xmath117 is divisible by @xmath0 , the plurality scores of @xmath25 and @xmath112 are the same and @xmath25 wins by tie - breaking .",
    "we turn next to combinations of borda voting , where it is np - hard to manipulate with two manipulators @xcite .",
    "computing a manipulation of @xmath118 by two manipulators is np - hard for @xmath119    * proof :  * ( sketch ) consider the np - hardness proof for manipulation of borda which uses a reduction from the permutation sums problem @xcite .",
    "due to the spaces constraint , we consider only @xmath120 .",
    "other proofs are similar but much longer and more complex .",
    "the reduction uses the following construction to inflate scores to a desired target . to increase the score of candidate @xmath121 by @xmath29 more than candidates @xmath122 and by @xmath123 more than candidate @xmath124 we consider the following pair of votes : @xmath125    we change the construction by putting @xmath25 in the last place in the first vote in each pair of votes and first place in the second vote , and leaving all other candidates unchanged when we increase the score of @xmath126 by one .",
    "this modification does not change the desired properties of these votes . note that @xmath25 and @xmath127 can not be winners under @xmath85 .",
    "hence , @xmath25 must win under @xmath39 and then win the run - off .",
    "this is possible iff there exists a solution for permutation sums problem .",
    "we focus on elections with weighted votes and 3 candidates .",
    "this is the fewest number of candidates which can give intractability .",
    "all scoring rules besides plurality ( e.g. borda , veto , 2-approval ) are np - hard to manipulate in this case @xcite .",
    "we therefore focus on combinations of the voting rules : plurality , cup , copeland , maximin and bucklin .",
    "computing a manipulation of each of these rules is polynomial in this case .",
    "we were unable to find a proof in the literature that bucklin is polynomial to manipulate with weighted votes , so we provide one below .    computing a manipulation of @xmath128 is polynomial with weighted votes and 3 candidates .    *",
    "proof :  * it is always optimal to place the preferred candidate @xmath25 in the first position as this only decreases the scores of the other 2 candidates , @xmath45 and @xmath46 .",
    "we argue that the winner is chosen in one of the first two rounds .",
    "in the first round , if @xmath25 still loses to @xmath45 or @xmath46 then there is no manipulation that makes @xmath25 win . in the second round",
    ", we must have at least one candidate with a majority .",
    "suppose we did not .",
    "then the sum of scores of the 3 candidates is at most @xmath129 .",
    "but the sum of the approval votes is @xmath130 which is a contradiction .",
    "hence , if @xmath25 does not get a majority in this round , one of the other candidates wins regardless of the manipulating votes .",
    "we recall that in this paper all ties are broken in favor of @xmath25 , which is crucial in the proof of the above proposition .",
    "in fact , we can show that if some other tie - breaking mechanisms are used , then bucklin is hard to manipulate with weighted votes , even for @xmath131 candidates .",
    "we next identify several cases where computing a manipulation for combinations of these voting rules is tractable .    computing",
    "a manipulation of @xmath132 , or of @xmath133 is polynomial with weighted votes and 3 candidates .",
    "* proof :  * first we consider the outcome of @xmath25 vs @xmath45 and @xmath25 vs @xmath46 assuming that @xmath25 is ranked at the first position by all manipulators .",
    "* suppose @xmath25 is a condorcet loser .",
    "in this case , @xmath25 can only win if @xmath25 wins under both @xmath134 and @xmath48 .",
    "however , @xmath25 must lose under @xmath134 because @xmath134 never elects the condorcet loser .",
    "* suppose @xmath25 is a condorcet winner .",
    "then @xmath25 is a winner of both rules as they are both condorcet consistent .",
    "* suppose there exists a candidate @xmath45 such that @xmath135 and @xmath136 even if @xmath25 is ranked first by all manipulators .",
    "we argue that if there is a manipulation , then all manipulators can vote @xmath137 .",
    "we consider the case that @xmath25 wins under @xmath134 and @xmath46 wins under @xmath138 .",
    "the other cases ( @xmath46 wins under @xmath134 , @xmath25 wins under @xmath128 , etc . ) are similar .",
    "for @xmath25 to win under @xmath134 , all candidates have to have the @xmath134 score of 0 as , by assumption , @xmath25 loses to @xmath45 .",
    "hence , the maximum @xmath134 score of @xmath25 is @xmath80 .",
    "therefore , for @xmath25 to win the following holds @xmath139 and @xmath140 .",
    "the only possible agenda is @xmath45 v @xmath25 , and the winner playing @xmath46 . in all other agendas",
    ", @xmath46 loses to @xmath25 in one of the rounds . for @xmath46 to win @xmath138 , @xmath141 and tie - breaking has @xmath137 .",
    "the manipulation vote @xmath137 will only help achieve the inequalities in both cases .",
    "computing a manipulation of @xmath142 is polynomial with weighted votes and 3 candidates .    *",
    "proof :  * we consider three possible outcomes of pairwise comparison between @xmath25 vs @xmath45 and @xmath25 vs @xmath46 assuming that @xmath25 is ranked at the first position by all manipulators .    *",
    "* suppose @xmath25 is a condorcet loser after the manipulation .",
    "@xmath25 can only win overall if @xmath25 wins under both @xmath128 and @xmath138 .",
    "however , @xmath25 must lose under @xmath138 .",
    "* suppose @xmath25 is a condorcet winner",
    ". then @xmath25 must be a winner of @xmath138 as this is condorcet consistent .",
    "hence , regardless of the rest of the manipulating votes , @xmath25 reaches the run - off round and beats any other candidate .",
    "* suppose there exists candidate @xmath45 such that @xmath135 and @xmath136 .",
    "note that @xmath92 must guarantee that @xmath45 does not reach the run - off round as @xmath25 loses to @xmath45 in the pairwise elections .",
    "there are two sub - cases : @xmath25 wins under @xmath138 and @xmath46 wins under @xmath128 in @xmath82 , or @xmath46 wins under @xmath138 and @xmath25 wins under @xmath128 .",
    "as shown in the proof of the last proposition , if there is a manipulation , @xmath143 will work in both cases .",
    "we continue to focus on combinations of the voting rules : plurality , cup , copeland , maximin and bucklin .",
    "we give several results which show that there exists combinations of these voting rules where manipulation is intractable to compute despite the fact that all the base rules being combined are polynomial to manipulate .",
    "these results provide support for our argument that combining voting rules is a mechanism to increase the complexity of manipulation .    computing a manipulation of @xmath144 where @xmath145 , is np - complete with weighted votes and 3 candidates .",
    "* proof :  * ( sketch ) we consider the case @xmath146 .",
    "other proofs are similar but longer .",
    "we reduce from a partition problem in which we want to decide if integers @xmath147 with sum @xmath148 divide into two equal sums of size @xmath149 . consider the following profile :    @xmath150    for each integer @xmath147 , we have a member of the manipulating coalition with weight @xmath151 .",
    "the tie - breaking rule is @xmath42 .",
    "the @xmath138 has @xmath45 play @xmath46 , and the winner meets @xmath25 .",
    "note that @xmath46 can not reach the run - off as they beat @xmath25 in pairwise elections whatever the manipulators do .",
    "note that @xmath25 can not win the @xmath38 rule .",
    "hence @xmath45 must be the @xmath38 winner .",
    "the run - off is @xmath45 , the @xmath38 winner against @xmath25 , the @xmath138 winner ( which is the same as the final round of the @xmath138 ) . for this to occur , the manipulators have to partition their votes so that exactly @xmath148 manipulators put @xmath25 above @xmath45 and @xmath148 put @xmath45 in the first position ( and above @xmath25 ) .",
    "manipulators '' , which we meant `` manipulators whose weights sum up to @xmath148 '' . ]",
    "therefore there exists a manipulation iff there exists a partition . .",
    "computing a manipulation of @xmath152 where @xmath153 , is np - complete with weighted votes and 3 candidates .",
    "* proof :  * ( sketch ) we consider the case @xmath154 .",
    "other proofs are similar but longer .",
    "we again reduce from a partition problem .",
    "consider the following profile : @xmath155    for each integer @xmath147 , we have a member of the manipulating coalition with weight @xmath151 .",
    "now , @xmath46 must not reach the run - off round and @xmath45 must win @xmath38 by similar arguments to the last proof .",
    "hence @xmath25 must be the @xmath134 winner .",
    "for this to occur , the manipulators have to partition their votes so that exactly @xmath148 manipulators put @xmath25 above @xmath45 , @xmath148 manipulators put @xmath45 in the first position ( and above @xmath25 ) and put @xmath46 in the last position in all votes .",
    "therefore there exists a manipulation iff there exists a partition .    computing a manipulation of @xmath156 where @xmath157 , is np - complete with weighted votes and 3 candidates .",
    "* proof :  * ( sketch ) we consider the case @xmath158 .",
    "other proofs are similar but longer .",
    "we reduce from a partition problem in which we want to decide if integers @xmath147 with sum @xmath148 divide into two equal sums of size @xmath149 . consider the following profile : @xmath159    for each integer @xmath147 , we have a member of the manipulating coalition with weight @xmath151 .",
    "now , @xmath46 must not reach the run - off round and @xmath45 must win @xmath38 by similar arguments to the last proof .",
    "hence @xmath25 must be the @xmath160 winner .",
    "for @xmath45 to win @xmath38 , manipulators with total weight at least @xmath148 must rank @xmath45 first .",
    "before the manipulators vote , the @xmath160 score of @xmath45 is @xmath161 , of @xmath46 is @xmath162 and of @xmath25 is @xmath148 .",
    "we note that @xmath25 must be ranked above @xmath46 in all manipulators votes and above @xmath45 in @xmath148 manipulators votes , otherwise @xmath25 loses to @xmath46 under @xmath160 . as @xmath148 manipulators",
    "must vote @xmath163 , we have @xmath164 , @xmath165 and @xmath166 .",
    "this increases the @xmath160 score of @xmath45 to @xmath162 and of @xmath25 to @xmath161 .",
    "now @xmath25 must be ranked above @xmath45 in at least @xmath148 manipulators votes to increase its @xmath160 score to @xmath162 .",
    "hence , the only possible option is if @xmath148 manipulators vote @xmath44 and @xmath148 vote and @xmath167 with weight @xmath148 . in this case",
    "the @xmath160 score of all candidates are the same and equal to @xmath162 . by the tie - breaking rule",
    ", @xmath25 wins .",
    "therefore , there exists a manipulation iff there exists a partition .",
    "we summarize our results about weighted manipulation in the following table .",
    ".computational complexity of coalition manipulation with weighted votes and 3 candidates [ cols=\"^,^,^,^,^,^,^,^\",options=\"header \" , ]      + ( a ) the uniform model .",
    "& ( b ) the urn model .",
    "one way to deal with the intractability of manipulation is to view computing a manipulation as an approximation problem where we try to minimise the number of manipulators .",
    "we argue here that combining voting rules together can make such approximation problems more challenging .",
    "in particular , we show that a good approximation method for a rule like @xmath39 will perform very poorly when @xmath39 is combined with a simple rule like @xmath38 or @xmath85 .",
    "we consider the @xmath168 algorithm for borda that computes a manipulation that is within 1 of the optimal number of manipulators @xcite .",
    "there exists a family of profiles such that the @xmath168 approximation method on @xmath118 requires @xmath169 manipulators where @xmath15 is an optimum number of manipulators for @xmath39 , @xmath5 is the profile in question and @xmath170    * proof :  * we consider @xmath120 .",
    "a similar argument holds for @xmath40 .",
    "consider the following profile : @xmath171 for @xmath172 , and 1 vote for @xmath173 .",
    "the tie - breaking rule is @xmath174 where the preferred candidate is @xmath175 .",
    "the score of the candidates @xmath121 is @xmath176 , @xmath172 .",
    "the @xmath168 algorithm outputs the vote @xmath177 .",
    "this increase the number of veto points of @xmath178 by 1 .",
    "note that @xmath121 , @xmath179 all have only one veto point .",
    "hence , @xmath180 wins by the tie breaking .",
    "note that @xmath175 has 2 veto - points .",
    "however , @xmath175 loses to @xmath180 in the run - off round as @xmath180 is ranked before @xmath175 in @xmath181 votes .",
    "hence , the @xmath168 algorithm will continue to produce pairs , @xmath182 and @xmath183 , until @xmath175 takes first positions in @xmath184 votes and wins the run - off round . on the other hand , if we add the votes @xmath185 for @xmath186 then we increase veto points of candidates @xmath187 by one .",
    "hence , @xmath188 wins under @xmath85 by tie - breaking , and then loses to @xmath175 in the run - off .",
    "we investigated the effectiveness of approximation methods on combinations of voting rules experimentally .",
    "we used a similar setup to  @xcite .",
    "we generated uniform random votes and votes drawn from the polya eggenberger urn model . in the urn model ,",
    "votes are drawn from an urn at random , and are placed back into the urn along with @xmath45 other votes of the same type .",
    "this captures varying degrees of social homogeneity .",
    "we set @xmath189 so that there is a 50% chance that the second vote is the same as the first . for each combination of the number of candidates @xmath0 , @xmath190 , and the number of voters , @xmath1 , @xmath191 and @xmath192 , we generated 200 instances of elections for each model .",
    "we ran four algorithms .",
    "the first algorithm , _ opt _ , finds an optimum solution of the manipulation problem for @xmath40 .",
    "we use a constraint solver to encode the manipulation problem as a csp .",
    "we could only solve small problems using complete search as the csp model is loose .",
    "the second algorithm is @xmath193 algorithm from  @xcite that we run until the winner it produces is also a winner of @xmath40 .",
    "the third algorithm , @xmath194 , is a greedy algorithm for @xmath38 .",
    "again , we run until its output is a winner of @xmath40 .",
    "the fourth algorithm , @xmath195 , is our modification of @xmath193 that simultaneously tries to manipulate @xmath39 and @xmath38 .",
    "the algorithm runs the @xmath193 heuristic first and checks if the preferred candidate @xmath25 is a winner under @xmath40 .",
    "if @xmath25 loses under both rules we increase the number of manipulators .",
    "if @xmath25 wins under one of the rules we check if we can make a candidate @xmath196 the winner of the other rule , where @xmath197 is the set of candidates .",
    "if we want @xmath45 to win under @xmath38 then we place @xmath45 in exactly as many first positions as it needs to win under @xmath38 and place @xmath25 in the remaining first and second positions .",
    "we run @xmath193 to place the remaining positions starting with votes where the first two positions are fixed .",
    "if we want @xmath45 to win under @xmath39 , we find the maximum number of first positions for @xmath25 such that @xmath45 still can win under @xmath39 and fill the remaining positions using @xmath193 . in both case",
    ", we check that the preferred candidate is winner under @xmath40 .",
    "if not , we increase the number of manipulators . tables  [ t : t1 ] show the results of our experiments .",
    "first , they show that we need to adapt approximation algorithms for individual rules to obtain a solution that is close to the optimum number of manipulators . as the size of the election grows",
    "individual approximation algorithms require significantly more manipulators than the optimum .",
    "second , for the combination of @xmath38 and @xmath39 , our adaptation of the @xmath193 method works very well and finds a good approximation .",
    "experimental results suggest that it finds a solution with at most one additional manipulator .",
    "we have put forwards a simple method for combining together voting rules that performs a run - off between the different winners of each voting rule . we have provided theoretical and experimental evidence for the value of this combinator . on the theoretical side",
    ", we proved that a combination of voting rules can inherit a desirable property like condorcet consistency or the majority criterion from just one base voting rule . on the other hand ,",
    "two important properties can be lost by the introduction of a run - off : monotonicity and consistency . combining voting rules",
    "also tends to increase the computational difficulty of finding a manipulation .",
    "for instance , with weighted votes , we proved that computing a manipulation for a simple combination like @xmath38 and @xmath138 is np - hard , even though @xmath38 and @xmath138 on their own are polynomial to manipulate . on the experimental side",
    ", we studied the impact of this combinator on approximation methods that find close to optimal manipulations ."
  ],
  "abstract_text": [
    "<S> we propose a simple method for combining together voting rules that performs a run - off between the different winners of each voting rule . we prove that this combinator has several good properties . for instance , </S>",
    "<S> even if just one of the base voting rules has a desirable property like condorcet consistency , the combination inherits this property . </S>",
    "<S> in addition , we prove that combining voting rules together in this way can make finding a manipulation more computationally difficult . finally , we study the impact of this combinator on approximation methods that find close to optimal manipulations . </S>"
  ]
}
{
  "article_text": [
    "recent years have seen the emergence of wireless sensor networks ( wsns ) .",
    "wsns are deployed to monitor various aspects of the environment , such as temperature and light .",
    "the wsns are also being deployed in a wide variety of other applications . for wsn applications ,",
    "the data in the sensors are often streamed to a control center ( called sink ) .",
    "this process is called data collection . for most control applications , the observed events and consequently the data from the source sensors",
    "must be collected at the control center within a certain delay .",
    "a key challenge then in wsns is to meet the end - to - end delay requirement of control applications under wireless interferences and the severely limited resource constraints of wsns .",
    "multitudes of protocols have been proposed in the literature for data collection in wsns that balance the communication cost , delay , and reliability @xcite .",
    "however , not much effort has been paid into the design of real - time data collection schemes that provide end - to - end performance guarantees for periodic queries . in this paper , we concentrate on designing effective scheduling of activities of nodes to satisfy multiple heterogeneous queries .",
    "given a set of sensor nodes and a sink node , the sink node issues a set of periodic queries , each has a period , initial release time and relative deadline requirement for collecting the corresponding data .",
    "the sink node expects to receive the corresponding data from all sensor nodes in time .",
    "given an arbitrary interference model , the objective is to jointly design routing and an interference - aware schedule of activities for all nodes ( , when to transmit and what packets to transmit ) such that the deadlines of all queries are met .",
    "our main contributions are the schedulability test and effective scheduling algorithms summarized as follows .",
    "first , we propose a necessary condition for a set of queries to be schedulable : theorem  [ the : c_x ] summarizes a necessary condition for data collection queries under various interference models .",
    "second , we design efficient algorithms for constructing a routing tree for each of queries , scheduling node activities for each wireless node , and packet scheduling .",
    "we theoretically prove that the schedulable queries by our methods achieve a load that is within a constant factor of the maximum schedulable load .",
    "based on the proposed algorithms , in theorem  [ the : c_3 ] , we present a sufficient condition for schedulability of data collection queries under various interference models in wsns .",
    "third , we propose an efficient query - selection algorithm by carefully selecting a subset of queries such that the total weight of selected queries ( that are schedulable by our algorithms ) is at least a constant fraction of the optimum solution when the load of all queries exceed the network capacity ( , the wsn is overloaded with queries from control applications ) .",
    "finally , we conduct extensive simulations to validate proposed algorithms .",
    "our simulation results in tinyos corroborate our theoretical analysis",
    ".    * related work : * [ sec : review ] real - time scheduling ( see @xcite and references therein ) has been extensively studied in the literature .",
    "the two most representative classes of scheduling algorithms are rate - monotonic ( rm ) scheduling and earliest deadline first ( edf ) scheduling .",
    "rm algorithms assign static - priorities to jobs on the basis of the cycle duration of the jobs . in the pioneering work @xcite ,",
    "liu and layland proposed a rm algorithm in a single processor , and the first sufficient condition for schedulability of a set of queries .",
    "this result has been further extended in @xcite . on the other hand ,",
    "edf is a dynamic scheduling algorithm .",
    "edf and its several extensions @xcite have been proposed to guarantee the end - to - end delay of packets .",
    "only a few work have studied the `` real - time '' group communication scheduling in multi - hop wsns .",
    "chipara @xcite studied the real time query scheduling for data aggregation by assuming a pre - given routing tree .",
    "however , the methods do not provide a theoretical performance assurance .",
    "xu @xcite studied periodic query scheduling for data aggregation with minimum delay under various wireless interference models .",
    "the problem of sporadic query scheduling in the network for data collection under various interference models has been extensively studied recently @xcite .",
    "one - shot query scheduling for data processing with minimum delay has been proven to be np - hard @xcite .",
    "a collision - free scheduling method for data collection is proposed in @xcite , which aims at optimizing energy consumption and reliability .",
    "the rest of the paper is organized as follows .",
    "section [ sec : model ] presents the system model .",
    "section [ sec : col ] presents schedulability results on data collection queries under various interference models .",
    "section [ sec : weighted ] studies the query scheduling in overloaded networks .",
    "we present our simulation results in section [ sec : simulation ] and conclude the paper in section [ sec : conclusion ] .",
    "consider a wsn as a graph @xmath0 , consisting of a set @xmath1 of @xmath2 sensor nodes where @xmath3 is the sink node and @xmath4 is the set of communication links .",
    "two nodes can communicate with each other if they are within the transmission range of each other .",
    "a set of links can transmit simultaneously if and only if they are interference free .",
    "several interference models such as protocol interference model ( prim ) , rts / cts model , and physical interference model ( phim ) or the signal - to - interference - plus - noise ratio model ( sinr model ) have been considered in the literature and used in transmission scheduling studies . in prim @xcite , each node @xmath5 , in addition to have a uniform transmission range ( scaling to @xmath6 ) , has an _ interference range _",
    "@xmath7 such that any node @xmath8 will be interfered by the signal from @xmath5 if @xmath9 and node @xmath8 is _ not _ the intended receiver of the transmission from @xmath5 . in the rts / cts model",
    "@xcite , for every pair of transmitter and receiver , all nodes that are within the interference range of either the transmitter or the receiver can not transmit . in phim @xcite , there is a threshold value @xmath10 , such that a node @xmath8 can correctly receive the data from a sender @xmath5 if and only if the signal to interference plus noise ratio at the receiver satisfies @xmath11 here @xmath12 is the euclidean distance @xmath13 , @xmath14 is the background noise , @xmath15 is the transmission power of node @xmath16 ( we assume the transmission power is a constant , , @xmath17 ) , @xmath18 is the set of actively transmitting nodes when node @xmath5 is transmitting , and @xmath19 is the path loss exponent .",
    "assume the control application issues a set of heterogenous data collection queries , and source nodes generate source data periodically at specified data rates . in practice",
    ", queries could be different in many aspects .",
    "the @xmath16-th query can be characterized as follows : let @xmath20 denote a subset of source nodes , each source node generates data to answer this query .",
    "we assume that each source node @xmath21 will generate a data unit to be collected to the sink @xmath22 periodically .",
    "we assume that it takes @xmath23 time to transmit a data unit for the @xmath16-th query over any link in the network . here",
    "@xmath23 could be different for different queries . for simplicity",
    ", we assume that @xmath23 already takes into account the link reliability , data preparing time at nodes , and data size variety for answering queries .",
    "the @xmath16-th query will be initially released at time @xmath24 and will have an end - to - end delay requirement @xmath25 for receiving the answer .",
    "in other words , the sink should receive the corresponding data before time @xmath26 .",
    "we assume that the @xmath16-th query has a period @xmath27 ; then , the @xmath28-th instance of this query will be released at time @xmath29 and the deadline for receiving the data for this instance is @xmath30 .",
    "two different questions will be answered in this work .",
    "first , given a set of @xmath31 queries @xmath32 for data collection , each with its own period @xmath27 , processing time @xmath23 , end - to - end deadline @xmath33 , and a set of sources nodes @xmath34 , whether the set of queries can be satisfied , and if so , design effective routing and scheduling algorithms to meet the specified requirements .",
    "the second type of questions is to design routing and scheduling protocols that will maximize the total weight of scheduled queries when we can not schedule all queries successfully and each query is associated with a positive weight .",
    "we first propose both necessary conditions and sufficient conditions for schedulability of a given set of data collection queries .",
    "we then develop efficient routing protocols , link scheduling , and packet scheduling methods to satisfy a schedulable set of queries .",
    "our study of necessary conditions and later sufficient conditions for schedulability rely on the concepts of _ initial load _ and _ relay load _ of a node ( and/or a region ) @xcite .",
    "let us first review the concept of _ initial load_. given a wsn @xmath0 and a set of queries @xmath32 , the initial load of a node @xmath35 is defined as @xmath36 , where @xmath37 is the processing time , @xmath38 is the period , and @xmath39 is the set of source nodes of the @xmath40-th query . if we denote _ region _ as any continuous area in a two - dimensional plane , the initial load of a region @xmath41 is defined as the summation of the initial loads of all nodes in this region @xmath41 , @xmath42 where @xmath43 consists of all nodes from @xmath1 lying in the region @xmath41 .",
    "we will focus on the initial load of a special region ( called _ interference - aware region _ ) which is a square in a two - dimensional plane , with the _ interference - aware radius _ as its side - length .",
    "given an interference model @xmath44 , the interference - aware radius @xmath45 is the maximum possible distance between two senders such that the corresponding two links will interfere with each other under @xmath44 .",
    "this means that a set of nodes can transmit concurrently without interference if the distance between any pair of nodes is greater than @xmath46 .",
    "we can compute @xmath46 based on the parameters of the model @xmath44 , we then partition the two - dimensional plane by using a set of vertical lines @xmath47 where @xmath48 and horizontal lines @xmath49 where @xmath48 . here",
    "@xmath50 represents the set of all integers and @xmath51 is called the index of vertical line @xmath52 and horizontal line @xmath53 .",
    "we denote the interference - aware region formed by a pair of neighboring vertical lines @xmath54 and a pair of neighboring horizontal lines @xmath55 as @xmath56 .    to schedule the nodes transmissions , for a clique in the node - conflict graph where any pair of nodes can not transmit concurrently ,",
    "the summation of nodes initial loads in the clique can not exceed one .",
    "generally , for any interference - aware region where the maximum number of nodes in that region that can transmit concurrently is a constant @xmath57 , the initial load of this region is at most @xmath57 .    on the other hand , for the @xmath16-th query ,",
    "no matter what data collection routing tree is used , the sink node needs to receive all the raw data from @xmath58 .",
    "thus , the initial load of sink node coming from the @xmath16-th query is exactly @xmath59 .",
    "if a set of queries @xmath32 can be satisfied , the initial load of the sink node @xmath60 is at most one .",
    "therefore , we propose a necessary condition for schedulability as follows .",
    "[ the : c_x ] if a set of data collection queries @xmath32 under an interference model @xmath61 is schedulable , then @xmath62 here @xmath63 is the initial load of an interference - aware region @xmath64 .",
    "constant @xmath65 is the maximum number of nodes that can transmit concurrently in any interference - aware region under the interference model @xmath61 .",
    "henceforth all the proofs will be available in the technical report @xcite due to the page limit .",
    "next , we derive the value of @xmath57 under various interference models . note that for physical interference model , the interference - aware radius @xmath45 is the same as the _ maximum transmission radius _ @xmath66{\\frac{p}{n_0\\beta}}$ ] .",
    "the maximum transmission radius @xmath67 can be perceived as a threshold for communication distances : a pair of nodes can possibly communicate and thus be connected _ iff _ their mutual distance is smaller than the threshold @xmath67 . in other words ,",
    "a node @xmath68 can not transmit data to another node @xmath69 which is more than @xmath67 distance away even in the absence of other concurrent transmissions .",
    "[ lem : c_1_pro ] the constant @xmath57 is given as : @xmath70      in this section , we design effective algorithms for scheduling data collection queries under various interference models . for each data collection query",
    ", each node needs to transmit its raw data ( if it has ) and relay all received data towards the sink node periodically .",
    "the first phase is construct routing trees .",
    "the constructions of routing trees are similar under various interference models . given a communication graph @xmath0 , we select a cds @xmath71 of @xmath72 by using an existing approach @xcite .",
    "we then construct a _ spanning tree _ @xmath73 by connecting each node not in the cds to a neighboring dominator in the cds . for the @xmath16-th query",
    ", we construct the routing tree @xmath74 based on @xmath73 by pruning every node @xmath35 and the corresponding link @xmath75 ( the link from @xmath68 to its parent @xmath76 ) if the intersection between @xmath77 and the subtree of @xmath78 rooted at @xmath68 ( noted as @xmath79 ) is empty : @xmath80 .    under phim",
    ", we construct routing trees in a reduced communication graph instead of in the original graph .",
    "the definition of reduced communication graph is available in @xcite .",
    "the second phase is to construct a real - time _",
    "transmission plan _ for each node after we construct a routing tree for each query .",
    "observe that a node @xmath68 is involved in the @xmath40-th query if : ( 1 ) @xmath68 is a source node for this query , , @xmath81 , or ( 2 ) @xmath68 is a relay node for this query . in either case , @xmath82 .",
    "thus , we test @xmath83 to determine whether a node @xmath68 is involved in the @xmath16-th query or not .",
    "if @xmath82 is true , during each period @xmath27 , node @xmath68 needs to add a data unit for this query to its transmission plan .",
    "the added packets are either original or relayed packets . for each node",
    ", we store the transmission plan to its buffer .",
    "the third phase is to schedule ( or assign ) concrete time to each node for transmission , and to avoid interference at the same time .",
    "this phase consists of two steps : ( 1 ) determine which region to select nodes from , called an _ active region _ ; ( 2 ) determine which node in an active region to transmit .",
    "first , we color all interference - aware regions such that any pair of neighboring regions with the same color are separated by @xmath84 regions , where @xmath85 is a constant depending on the interference model .",
    "clearly , the chromatic number for this coloring method is @xmath86 . to avoid interference , each time we only allow regions with the same color to be active .",
    "specifically , we have @xmath87 under prim and the rts / cts model and @xmath88 is a constant under phim @xcite . with the help of region coloring ,",
    "we ensure that if only one node is selected from each interference - aware region with the same color to transmit , we can avoid interference , irrespective of the positions of the receivers .",
    "second , we assign transmission time to nodes in an active region .",
    "clearly , a node with more relay load needs to be assigned with more time .",
    "we propose a linear time assignment scheme in which each node in an active region is assigned with transmission time proportional to its relay load .",
    "the linear time assignment scheme is describe as follows .",
    "given a set of queries @xmath32 and the corresponding routing trees , we define the relay load of a node @xmath68 as @xmath89 .",
    "we then define the relay load of a region @xmath41 as the summation of all nodes relay loads in this region : @xmath90 , where @xmath91 is the set of all nodes from @xmath1 lying in region @xmath41 .",
    "the relay load contains both the initial load and the data load coming from routing .",
    "thus , the relay load of a node can be perceived as the fraction of time for a node to be actively transmitting data . given a time duration @xmath92 ( here @xmath93 )",
    "when an interference - aware region @xmath41 is active , we assign each node @xmath68 in region @xmath41 with transmission time @xmath94 .",
    "the details are shown in algorithm  [ alg : interference - aware ] which is performed for every @xmath95 time duration .",
    "then each region is active for exactly @xmath92 time duration .",
    "when a region is active , we apply linear time assignment to each node in this region .",
    "[ alg : interference - aware ]    @xmath96    the fourth phase is to select packet(s ) from the node s transmission plan to transmit when it is a node s transmission time .",
    "we use a _ rate monotonic _",
    "@xcite method to select packets from the node s transmission plan .",
    "@xmath97 all packets of current period have lower priorities than that of all previous periods .",
    "@xmath98 the priorities of all packets of any queries are assigned on a rate - monotonic basis . in other words ,",
    "a packet of current instance for a query with a shorter period has a higher priority over the packet of current instance for a query with a longer period ( at absolute time @xmath28 , a packet is at current instance if it is produced during a time period containing @xmath28 ) .",
    "similarly , a packet of previous instance for a query with a shorter period has a higher priority over a packet of previous instance for a query with a longer period .",
    "ties are broken by lexicographic order @xmath99 .",
    "@xmath100 all packets of previous instances for the same query are scheduled on the first - in - first - out basis .",
    "as proved in @xcite , the rate monotonic method can achieve optimum performance for each packet to be transmitted before deadline , if each node has utilization ( the utilization can be seen as the ratio of relay load to the fraction of time it is assigned to ) of at most @xmath101 where @xmath2 is the number of queries the node is involved .",
    "note that @xmath102 .",
    "for large @xmath2 , we obtain the utilization bound of @xmath103 means that as long as each node has utilization of less than @xmath103 , all packets can make their deadlines .      in this section , we prove that the proposed algorithms for scheduling data collection queries are feasible .",
    "[ lem : col_intime ] the proposed algorithms can answer all data collection queries if @xmath104 here @xmath105 is the chromatic number for region coloring such that if we only select one node from each of the interference - aware regions with the same color to transmit , we can avoid interference under the interference model @xmath61 .",
    "@xmath106 is the maximum size of cds insider an interference - aware region plus one under the interference model @xmath61 .",
    "the value of @xmath107 is given as [ lem : c_3 ] @xmath108    [ lem : col_delay ] the proposed algorithms can answer all queries within the deadlines , if for each query , the end - to - end delay requirement @xmath25 satisfies the inequality @xmath109 where @xmath110 is the radius of communication graph @xmath72 .",
    "lemma  [ lem : col_intime ] and [ lem : col_delay ] imply schedulability of the given set of queries .",
    "thus , we propose a sufficient condition for schedulability .    [",
    "the : c_3 ] equation  ( [ equ : col_suff ] ) is a sufficient condition for schedulability of a set of data collection queries .",
    "we can illustrate by an example that the sufficient condition in theorem  [ the : c_3 ] is almost tight .    in figure  [ fig : col bound ] , node @xmath3 is the sink .",
    "there are @xmath111 vertical evenly spaced lines with distance @xmath112 between consecutive lines ( , the distance between @xmath68 and @xmath69 is @xmath113 ) . here",
    "we simply assume @xmath111 is an integer .",
    "additionally , @xmath114 nodes , like @xmath115 between @xmath68 and @xmath69 , act as bridges to keep the network connectivity .",
    "clearly , there are @xmath116 nodes deployed in the interference - aware region , and the size of cds in this region is @xmath117 .",
    "the residual network ( all nodes outside of the region ) is connected to sink @xmath22 only through node @xmath28 .",
    "we assume all sources nodes ( @xmath58 for the @xmath40-th query ) are located in the residual network . to collect data to the sink @xmath22",
    ", we should strictly follow the red path .",
    "it is easy to verify that the relay load of the interference - aware region is @xmath118 ( the initial load is zero ) .",
    "thus a necessary condition for schedulability for the example network is @xmath119 .",
    "we can verify that the sufficient condition in theorem  [ lem : col_intime ] tightly match this necessary condition by a factor of at most @xmath120 which is independent of @xmath107 .",
    "[ cols=\"^,^ \" , ]",
    "@xmath121}:=\\{\\arg\\max_{i ; \\frac{|\\sources_i|",
    "\\cdot \\processing_i}{\\period_i}\\leq 1}\\{\\weight_i\\}$ ] } ; @xmath122}:= \\mbox { the solution returned by } \\knap(\\frac{0.69}{c_2({\\cal m})\\cdot c_3({\\cal m})})$ ] ; @xmath123},a_{[2]}\\ } } \\{\\weight(a)\\}$ ] ;    [ alg : weight ]    in this section , we study scheduling for an overloaded sensor network when not all arriving queries can be scheduled .",
    "let us focus on the data collection queries : given a set of data collection queries @xmath32 , assume the @xmath16-th query is associated with a weight @xmath124 .",
    "the objective is to select and schedule a subset of queries @xmath125 to maximize the overall weight of the scheduled queries .",
    "we reduce our problem to a _ 0 - 1 knapsack problem _ as follows : given @xmath31 items , the @xmath16-th query can be considered as an item of size @xmath59 and weight @xmath124 . the objective is to select a subset of items with total size at most @xmath126 such that the weighted sum of all selected items is maximized . here",
    "@xmath126 is called the bag size .",
    "we will denote the @xmath127-@xmath6 knapsack problem with bag size @xmath126 by @xmath128 for brevity .",
    "then , our algorithm consists of two phases :    * phase i : * we enumerate each single query",
    "whose load @xmath59 is no larger than @xmath6 and select the one with the maximum weight as the first candidate solution ;    * phase ii : * we use the solution for @xmath129 as the second candidate solution .",
    "the final solution can be obtained by choosing the one with larger weight among these two candidate solutions .",
    "please refer to algorithm [ alg : weight ] for details .",
    "note that we can design a joint routing and scheduling protocol to satisfy a set of data collection queries @xmath32 under an interference model @xmath44 , if @xmath130 .",
    "therefore , it is easy to verify the correctness of our solution .",
    "the challenge here is to derive an approximation bound on this solution .",
    "recall that for any set of schedulable queries , we must have @xmath131 , which implies that the optimal solution for our problem is no larger than the optimal solution of @xmath132 .",
    "let @xmath133 denote the optimal solution of @xmath132 .",
    "the following lemma shows that the selected queries have weight at least a constant fraction of the weight of @xmath133 .",
    "[ lem : weighted ] let @xmath134 denote the weight of the queries selected by algorithm [ alg : weight ] , and @xmath135 , we have @xmath136 .    together with the fact that the optimum solution of our problem is no larger than @xmath137 , theorem  [ the : weighted_appr ] immediately follows .",
    "[ the : weighted_appr ] algorithm [ alg : weight ] is @xmath138-approximation for the maximum weighted query selection problem , where @xmath139 .    in the previous discussions",
    ", we assumed that we will drop some queries when we can not answer all queries in time . in practice , it may be possible to partially satisfy all queries , by carefully dropping some packets from some query flows ( once every certain period ) , or dropping some packets from some data - source nodes .",
    "dropping packets ( temporally or spatially ) is feasible for some applications because of the possible ( temporal and/or spatial ) correlation among data sensed by different sensors .",
    "our algorithm can also be extended to deal with this case and details are omitted due to space limitations .",
    "we randomly deploy a set of nodes @xmath140 with transmission range @xmath141 in an area of size @xmath142 ( note that we always keep connectivity of the networks ) . for any pair of nodes @xmath5 and @xmath8",
    ", there is a feasible link if @xmath143 .",
    "in addition , each link @xmath144 is associate with a quality variable @xmath145 . here , the value of @xmath145 is proportion to @xmath146 .",
    "the main flow of our evaluation system is as follows : the sink node will generate up to @xmath147 data collection queries and broadcast it to the network one by one .",
    "the broadcast procedure will not stop until all source nodes in the receive the @xmath16-th query correctly .",
    "secondly , the sink node initiates to construct routing trees ( based on the cds ) which cover all source nodes ( may need non - source nodes to relay ) . after a certain starting time",
    ", each source node will read the corresponding data repeatedly and transmit via routing trees .",
    "the sink node will continue to analyze all received data packets for each period of each query .",
    "when all currently existing queries are satisfied , the sink node will release next query up to @xmath147 queries totally .",
    "the algorithm will terminate when none of existing queries is satisfied ,    we now evaluate the performance of our algorithms in different scenarios . in the first scenario ,",
    "we vary the network size from @xmath141 to @xmath148 with step @xmath149 . for each query",
    ", we pick source nodes randomly or always choose a set of source nodes with half of the network size .",
    "figure [ fig : collection_result](a ) shows the results when we either randomly pick the number of source nodes for each query or always randomly pick half of the nodes as source nodes .",
    "the success ratio is equal to the number of successful rounds divided by the total rounds .    when the network size increases over @xmath150 , the success ratio will quickly drop from around @xmath151 to @xmath152",
    "this is mainly caused by capacity bounds of cds .",
    "the new packets from newly increased nodes ( hence newly increased source nodes ) lead cds saturated such that many packets are dropped due to the buffer limit .    in the second scenario ,",
    "we fix the network size and increase the number of source nodes in each query from @xmath153 to @xmath154 with step @xmath153 .",
    "the figure [ fig : collection_result ] ( b ) shows the success ratio when the network size is @xmath154 and @xmath155 respectively . as we can see , when the number of source nodes is small ( less than @xmath141 ) , most queries are satisfied .",
    "when the number of source nodes is larger than @xmath141 , the performance dropped quickly .",
    "in addition , there is no big difference when network sizes ( @xmath154 and @xmath155 respectively ) are different .",
    "we proposed joint design of a family of routing and packet scheduling schemes under different interference models .",
    "most importantly , we theoretically proved that our algorithm can achieve constant approximation in terms of schedulability .",
    "we also studied the overloaded case where not all queries can be scheduled by proposing an efficient method for carefully selecting a subset of queries that maximizes the overall weight of the scheduled queries . in this case",
    ", we theoretically proved that our proposed scheme can achieve constant approximation .",
    "the research of x. xu and m. song is supported in part by nsf career award cns-1248092 . the research of m. song is also supported by nsf ipa independent research and development ( ir / d ) program . the research of xiang - yang li is partially supported by nsf cns-0832120 , nsf cns-1035894 , nsf eccs-1247944 , national natural science foundation of china under grant no .",
    "61170216 , no .",
    "61228202 , china 973 program under grant no.2011cb302705 .",
    "however , any opinion , finding , and conclusions or recommendations expressed in this material , are those of the author and do not necessarily reflect the views of the funding agencies ( nsf and nsfc ) ."
  ],
  "abstract_text": [
    "<S> we study real time periodic query scheduling for data collection in multihop wireless sensor networks ( wsns ) . given a set of heterogenous data collection queries in wsns , each query requires the data from the source sensor nodes to be collected to the control center within a certain end - to - end delay . </S>",
    "<S> we first propose almost - tight necessary conditions for a set of different queries to be schedulable by a wsn . </S>",
    "<S> we then develop a family of efficient and effective data collection algorithms that can meet the real - time requirement under resource constraints by addressing three tightly coupled tasks : ( 1 ) routing tree construction for data collection , ( 2 ) link activity scheduling , and ( 3 ) packet - level scheduling . </S>",
    "<S> our theoretical analysis for the schedulability of these algorithms show that they can achieve a constant fraction of the maximum schedulable load . for the case of overloaded networks where not all queries can be possibly satisfied </S>",
    "<S> , we propose an efficient approximation algorithm to select queries to maximize the total weight of selected schedulable queries . </S>",
    "<S> the simulations corroborate our theoretical analysis . </S>"
  ]
}
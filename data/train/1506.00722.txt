{
  "article_text": [
    "load scheduling and aggregation is a problem of growing importance in the area of demand response ( dr ) .",
    "however , this problem is particularly difficult for two main reasons .",
    "first , many household electrical devices have discrete operating points that can only be represented by mixed - integer variables , and moreover , household device uses are often coupled , thus giving household electricity demand a combinatorial structure .",
    "therefore , solving this problem centrally may spell intractability when the number of households is large .",
    "second , solving this problem centrally would require sending all of the households private information to the aggregator , which entails substantial communication overhead and privacy concerns .    against this background ,",
    "this letter proposes a distributed gradient algorithm applied to a double smoothed dual function .",
    "this work is not the first attempt to solve a dr problem with mixed - integer variables in a distributed fashion .",
    "this problem is decomposed in terms of devices and solved in a distributed fashion using the proximal bundle method in @xcite .",
    "in contrast to @xcite , the dr problem in this work is decomposed in terms of households .",
    "doing so , allows for a more expressive household model , which can incorporate the intricate couplings between storage devices , appliances and renewable energy resources .",
    "the model comprises a set of agents @xmath0 , where @xmath1 is the aggregator and each @xmath2 is a household agent . let @xmath3 be the demand for electric energy for every agent @xmath2 at time - slot @xmath4 .",
    "the aggregator faces a set of cost functions @xmath5 , where @xmath6 is the cost of supplying @xmath7 units of energy to the households at time - slot @xmath8 .",
    "given the households feasible schedule sets @xmath9 and their demand profile @xmath10 $ ] , the aggregator can ( centrally ) minimise the total energy cost per scheduling horizon @xmath11 by solving the following problem :    [ eq : mincost ] @xmath12    the local constraints of agents @xmath2 arise from the operating modes of different flexible loads including _ interruptible _ ( e.g. phevs , pool pumps ) and _ non - interruptible _ ( e.g. washing machines , dishwashers ) loads ( as in @xcite ) .",
    "problem can also be written as @xmath13 where @xmath14 , @xmath15 , and @xmath16 is the coupling constraint matrix .",
    "problem is a mixed - integer program ( mip ) that belongs to the class of np - hard problems which are notorious for tending to be intractable ( if solved centrally ) when they grow in size .",
    "however , relaxing the coupling constraints , through the lagrangian relaxation method , bestows a separable structure on problem .",
    "the problem can then be decomposed into @xmath17 independent subproblems that can be solved in parallel .",
    "the partial lagrangian of problem can be written as @xmath18 where @xmath19 $ ] is the vector of lagrange multipliers .",
    "therefore , the lagrange dual function would be @xmath20 finally , the dual problem is @xmath21 .",
    "however , in this dr scenario , the concave dual function @xmath22 is typically nondifferentiable .",
    "specifically , as the subproblems in can have multiple optimal solutions for a given vector @xmath23 , the dual function @xmath22 can be nonsmooth .",
    "consequently , applying a conventional gradient method @xcite to this problem would exhibit a very slow convergence .",
    "one way to obtain a smooth approximation of @xmath22 is to modify the subproblems in to ensure a unique optimal solution for every @xmath23 .",
    "the dual function is modified as follows : @xmath24 and @xmath25 is a smoothness parameter .",
    "the modified dual function @xmath26 is smooth and its gradient @xmath27 , where @xmath28 denotes the unique optimal solution of problem , is lipschitz - continuous with lipschitz constant @xmath29 .",
    "the aim of this smoothing is to obtain a lipschitz - continuous gradient for which efficient smooth optimisation methods can be applied @xcite .",
    "however , despite having a good convergence rate @xmath30 at iteration @xmath31 when applying a fast gradient method , the same good rate of convergence does not apply to @xmath32 .",
    "since the aim is not only to efficiently solve the dual problem but also to recover a nearly feasible solution to the primal @xcite , a second smoothing is applied to the dual function to make it strongly concave .",
    "the new dual function is written as @xmath33 which is strongly concave with parameter @xmath34 , and whose gradient @xmath35 is lipschitz - continuous with constant @xmath36 .",
    "the fast gradient method involves two multiplier updates , @xmath37 and @xmath38 where @xmath39 .",
    "the parameters of the algorithm are set as follows , @xmath40 , where @xmath41 , and @xmath42 is the maximum number of iterations . the distributed algorithm is described in algorithm  [ algorithm ] .",
    "@xmath43 , @xmath44 , @xmath45 , @xmath46 $ ] , @xmath47 .",
    "* initialisation : * households compute @xmath48 and send it to the aggregator which computes @xmath49 and sets + @xmath50 , @xmath51 , @xmath52 and @xmath53 .",
    "aggregator solves @xmath54 and broadcasts @xmath55 and @xmath56 to the households which solve @xmath57 and return @xmath58 to the aggregator .",
    "aggregator computes @xmath59 and the primal @xmath60 .",
    "aggregator computes @xmath61 and updates @xmath62 and @xmath63 .",
    "aggregator updates @xmath64 and @xmath65 and sets @xmath66 .",
    "@xmath67 .",
    "aggregator finds the best recovered primal solution @xmath68 along with @xmath69 , @xmath70 and @xmath71 such that @xmath72 .",
    "[ algorithm ]",
    "algorithm  [ algorithm ] is tested on three scenarios , each with one aggregator and @xmath73 , @xmath74 and @xmath75 households respectively , each with @xmath76 appliances scheduled over @xmath77 ( as in @xcite ) . in all three scenarios ,",
    "algorithm  [ algorithm ] is initialized with @xmath78 , @xmath79 , @xmath80 , @xmath81 and @xmath82 .",
    "the simulation results along with the corresponding parameter values are listed in table  [ minimumcosts ] .",
    "table  [ minimumcosts ] shows that the difference between the recovered best integer feasible solution @xmath68 and the optimum solution @xmath83 does not exceed @xmath84 , which corroborates the claim that a near - optimal solution can be recovered in a limited number of iterations . finally , the evolution of @xmath85 and @xmath86 in the @xmath87 case is displayed in figure  [ primaldual ] , which also shows a quick and smooth convergence of the dual objective @xmath86 and a small duality gap upon termination .",
    ".difference between @xmath68 and @xmath83 . [ cols=\">,^,^,^,^,^,^,^\",options=\"header \" , ]     [ minimumcosts ]",
    "the aim of this work is to implement a fast gradient algorithm applied to the double smoothed dual function of a dr problem comprising expressive household models and mixed - integer variables .",
    "this work also demonstrates how to recover a near - optimal solution in a fixed number of iterations and minimal parameter tweaking ."
  ],
  "abstract_text": [
    "<S> this letter presents a distributed algorithm for aggregating a large number of households with mixed - integer variables and intricate couplings between devices . </S>",
    "<S> the proposed distributed gradient algorithm is applied to the double smoothed dual function of the adopted dr model . </S>",
    "<S> numerical results show that , with minimal parameter adjustments , the convergence of the dual objective exhibits a very similar behavior irrespective system size .    dual decomposition , accelerated gradient methods , demand response , smoothing technique , mixed - integer variables . </S>"
  ]
}
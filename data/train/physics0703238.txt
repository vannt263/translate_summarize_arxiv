{
  "article_text": [
    "coarse - graining data _ items _ @xmath2 ( @xmath3 ) into _ clusters _ @xmath4 ( @xmath5 ) is important for large - scale data analysis  @xcite . for example",
    ", clustering genes according to their microarray expression profiles allows biologists to subsequently infer potential _",
    "cis_-regulatory elements from sequence commonalities within the clusters  @xcite .",
    "clustering typically proceeds from a symmetric @xmath6 _ similarity matrix _ @xmath7 , where the non - negative off - diagonal element @xmath8 provides an inverse indicator of the `` distance '' @xmath9 between items @xmath2 and @xmath10 . the primary input ( e.g. , the alignment scores from sequence comparisons or edge weights of a graph )",
    "may directly define the @xmath8 .",
    "alternatively , the data may consist of @xmath11 _ properties _ for each item that can be embedded in a dataspace . for example , in microarray analysis each gene is an item , and its properties are its @xmath11 expression levels under @xmath11 different conditions . in that case , the @xmath9 are derived from the ( not - necessarily euclidean ) distances between the items in the dataspace .",
    "_ spectral clustering _",
    "methods ( @xcite for history and review ) analyze the eigensystem of a _ transition _ ( or _ laplacian _ ) _ matrix _ @xmath12 , which is derived from @xmath7 .",
    "since the eigensystem depends globally on the entire data set , spectral methods have a perspective lacking in commonly used methods such as @xmath0-means and agglomerative clustering  @xcite , which directly analyze the @xmath8 .",
    "their dependence on pairwise similarities leads them to impose characteristic cluster shapes ; e.g. , @xmath0-means and complete - linkage clustering generate convex clusters while single - linkage clustering generates unbalanced and straggly clusters  @xcite .",
    "these shapes may not reflect the true geometries of the problem , such as the irregular boundaries of a subject within an image  @xcite .",
    "the ability of spectral methods to generate arbitrary cluster shapes lets them outperform @xmath0-means across several benchmarks  @xcite . and",
    "as we will see , they can also determine the optimal number of clusters automatically .",
    "@xmath12 typically satisfies  @xcite    [ eqn : dynamical_properties ] @xmath13    where @xmath14 is a diagonal normalizing matrix with non - negative elements satisfying @xmath15 , @xmath16 is the item - space vector having all components equal to one , and @xmath17 denotes the normalized item - space inner product : @xmath18 these conditions emerge when spectral clustering methods are used to approximate `` min - cut '' graph partitioning solutions  @xcite or when they are motivated by discrete-  @xcite or continuous - time  @xcite dynamical models .",
    "[ the first two motivations lead to analysis of the markov matrix @xmath19 ( where @xmath20 is the identity matrix ) , which satisfies @xmath21 rather than eq .",
    "( [ eqn : probability_conservation ] ) .",
    "but since the eigenvectors of @xmath22 and @xmath12 are identical and the eigenvalues are simply related , the same analysis applies with inconsequential changes . ]",
    "( [ eqn : dynamical_properties ] ) imply    [ eqn : spectral_properties ] @xmath23    where @xmath24 and @xmath25 are the bi - orthogonal left and right eigenvectors of @xmath12 , which we normalize such that @xmath26 and @xmath27 , and @xmath28 is the right equilibrium probability vector satisfying @xmath29 .",
    "it follows that @xmath30 .",
    "( [ eqn : dynamical_properties ] ) also imply that @xmath31 ( i.e. , that detailed balance holds ) , which ensures the reality and non - negativity of the eigenvalues  @xcite .",
    "spectral methods begin by embedding each item @xmath2 into the _ low - frequency _ ( or _ clustering _ ) _ subspace _ @xmath32 using as coordinates the @xmath33 low - frequency vector components of @xmath34 $ ]  @xcite .",
    "these are then used to identify @xmath33 clusters  @xcite .",
    "clustering ( i.e. , spatial coarse - graining ) is possible only if there is a gap in the distribution of the similarities @xmath8  @xcite .",
    "the dynamical interpretation of spectral clustering provides a way to find a gap if it exists : each cluster is viewed as a metastable state of a diffusive relaxation process governed by @xmath12  @xcite@xmath35 where @xmath36 is a time - dependent probability vector over the discrete space of items [ i.e. , @xmath37 is the probability of occupation of item @xmath2 at time @xmath38 , @xmath39 is the stochastic transition rate from item @xmath10 to @xmath2 , and eqs .",
    "( [ eqn : diagonal_s ] ) and ( [ eqn : probability_conservation ] ) ensure that probability is conserved .",
    "because of the inverse relationship between eigenvector `` wavelength '' and eigenvalue , a spatial - scale gap in the distribution of the @xmath8 will appear as a time - scale _ spectral gap _ : @xmath40 the gap between @xmath41 and @xmath42 indicates the existence of @xmath33 clusters . when a spectral gap exists , the long - wavelength , clustering eigenvectors @xmath43 will contain the information needed for clustering  @xcite .",
    "ccc + & & + & &    for example , fig .",
    "[ fig : spiral_eigensystem ] illustrates the @xmath44 `` spiral '' clustering problem posed by 77 items embedded in a two - dimensional dataspace and the corresponding eigensystem of the @xmath12 matrix of ref .",
    "@xcite [ see eqs .",
    "( [ eqn : gamma_ks ] ) below ] . panel",
    "( a ) shows the spatial locations of the items , and it is subjectively evident that there are three interlocking clusters .",
    "correspondingly , as predicted by eq .",
    "( [ eqn : spectral_gap ] ) , there is a gap between @xmath45 and @xmath46 [ panel ( c ) ] .",
    "the clustering eigenvectors , @xmath47 [ panel ( d ) ] and @xmath48 [ panel ( e ) ] , vary significantly only at the cluster boundaries and follow their distorted shapes .",
    "thus , the shapes of the clusters defined using these eigenvectors will not be artificially restricted .",
    "in contrast , the non - clustering eigenvectors such as @xmath49 [ panel ( f ) ] have large variations within clusters and thus are not used in the clustering analysis .",
    "it remains to define the clustering from the clustering eigenvectors .",
    "hard spectral clustering approaches do so simply by applying non - spectral methods such as @xmath0-means within the clustering subspace  @xcite . however , there are problems where hard partitioning is neither necessary nor ideal , for example , the separation of cell subpopulations by fluorescence activated cell sorting ( facs )  @xcite , automated biological database curation  @xcite , complex network analysis  @xcite , and gene expression analysis  @xcite .",
    "such problems require _ fuzzy clustering _ that can represent uncertainty and overlapping clusters .",
    "non - spectral fuzzy clustering methods have already been applied to such problems  @xcite , but spectral fuzzy methods could be advantageous because of their added ability to cope with irregular cluster boundaries ( such as those within facs dataspaces  @xcite ) .",
    "moreover , fuzziness could provide further benefit even in areas where hard spectral clustering has already been applied . for example , paccanaro et al .",
    "@xcite have used hard spectral clustering to faithfully reproduce many of the superfamily classifications from a subset of the scop protein database  @xcite ; a fuzzy spectral approach would add the ability to assess the certainty of such classifications .",
    "formally , fuzzy clusterings are described by _ assignment vectors _",
    "@xmath50 $ ] , where @xmath51 is the probability that item @xmath2 is a member of cluster @xmath4 , and therefore must satisfy the probabilistic constraints    [ eqn : w_constraints ] @xmath52    to define these in a spectral context , following ref .",
    "@xcite we use the low - frequency clustering eigenvectors as a linear basis for the @xmath53  @xcite : @xmath54 where the @xmath55 $ ] are @xmath33-vectors , @xmath56 $ ] , and @xmath57 denotes the inner product over the low - frequency subspace : @xmath58    eq .",
    "( [ eqn : w_psi_discrete ] ) transforms the clustering problem to that of finding the `` best '' @xmath59 subject to eqs .",
    "( [ eqn : w_constraints ] ) .",
    "korenblum and shalloway  @xcite proposed that this was the one that minimized overlap between assignment vectors : since the @xmath53 are non - negative and composed of only the long - wavelength @xmath43 , they will inevitably overlap each other and thus will give _ uncertain _",
    "( i.e. , fuzzy ) item - to - cluster assignments .",
    "this uncertainty is minimized when the clusters self - overlap is maximized . the self - overlap ( of cluster @xmath4 ) can be quantified by the _ fractional cluster certainty _",
    "@xmath60  @xcite , @xmath61 where @xmath62 represents the components of all the @xmath59 and bra - ket notation denotes the equilibrium - weighted inner product  @xcite@xmath63 @xmath64 when the cluster @xmath4 is completely certain , i.e. , @xmath65 ; the total certainty is the product of the @xmath66 for all the clusters .",
    "thus , the optimal @xmath62 is determined by _",
    "uncertainty minimization _ of the _ overall uncertainty objective function _ , @xmath67 subject to the constraints of eqs .",
    "( [ eqn : w_constraints ] ) .",
    "korenblum and shalloway showed that this procedure provided good fuzzy clusterings of a number of difficult problems .",
    "however , they solved the resulting challenging constrained , non - convex uncertainty minimization problem using a `` brute - force '' solver whose @xmath68 computational complexity limited its application to modest - sized problems ( @xmath69 ) and precluded application to the larger problems [ e.g. , @xmath70 that emerge in areas such as gene microarray analysis  @xcite .",
    "a closely related approach was independently developed by weber et al .",
    "they also used eq .",
    "( [ eqn : w_psi_discrete ] ) , but , instead of using uncertainty minimization , determined the @xmath62 through an efficient , but approximate , method motivated by perturbative analysis of almost - block - diagonal matrices  @xcite .",
    "their perron cluster cluster analysis ( pcca ) defined the @xmath53 as `` membership functions '' that only approximate the probabilistic constraints of eqs .",
    "( [ eqn : w_constraints ] ) . in pcca",
    "the @xmath62 are determined algorithmically rather than by objective function optimization , and clusterings for different values of @xmath33 are accepted if the resultant approximation is regarded ( by subjective criteria ) to be adequate . while approximate , this method had the advantage of being computationally simpler than the initial uncertainty minimization algorithm of korenblum and shalloway  @xcite .    thus until now ,",
    "_ practical _",
    ", _ exact _ fuzzy spectral data clustering has remained elusive . to resolve this problem , here we develop an efficient method for uncertainty minimization and show that it is generally applicable to any spectral clustering method satisfying eqs .",
    "( [ eqn : dynamical_properties ] ) , including popular asymmetric approaches based on random walks over graphs  @xcite .",
    "thus , we imbue a wide range of hard spectral clustering methods with the ability to represent fuzzy cluster assignments and , thereby , uncertainty and cluster overlap . in the process",
    ", we show that there are multiple geometric interpretations of the uncertainty minimization problem that can be used to illuminate its structure . through these",
    "we relate uncertainty minimization to pcca and extend the previously reported conditions under which the pcca approximation is applicable .",
    "minimization of @xmath71 subject to the constraints of eqs .",
    "( [ eqn : w_constraints ] ) poses a global , non - linear optimization problem in the @xmath72 degrees of freedom of @xmath62 . to solve this",
    "it is convenient to reexpress eq .",
    "( [ eqn : minimum_uncertainty_a ] ) explicitly in terms of the @xmath59 as @xmath73 where @xmath74 is the @xmath33-vector @xmath75 , and we have used @xmath76 and @xmath77 , which follow from eqs .",
    "( [ eqn : left_0_eigenvector ] ) , ( [ eqn : left_n_eigenvector ] ) , and ( [ eqn : w_psi_discrete ] ) and the bi - orthogonality of the eigenvectors . similarly , we reexpress eqs .",
    "( [ eqn : w_constraints ] ) in terms of the @xmath59 :    [ eqn : m_constraints ] @xmath78    because @xmath71 is invariant under permutations of the indices associated with the clusters , its global minimum will have an @xmath79-fold permutation degeneracy .",
    "we now describe two geometric representations that illuminate the problem ( sec .",
    "[ section : geometric ] ) and then show how to solve it in three steps : ( 1 ) precondition @xmath12 to avoid numerical noise that can obfuscate spectral gaps when low - lying eigenvalues are nearly degenerate , to improve numerical efficiency , and to remove outliers ( appendix  [ appendix : precondition ] ) , ( 2 ) find a zeroth - order solution ( sec .",
    "[ section : zeroth_order_solver ] ) , and ( 3 ) iteratively refine using linear programming with a subset of the inequality constraints to determine the solution to the desired accuracy ( sec .",
    "[ section : constrained_solver ] ) .",
    "since the procedure explicitly uses only the @xmath24 , for notational convenience we subsequently denote them simply as the @xmath80 .",
    "each @xmath59 may be regarded as the coordinates of a particle @xmath4 in @xmath32 with axes labeled @xmath81 .",
    "( [ eqn : discrete_inequality_constraints ] ) implies that the same @xmath82 inequality constraints act on each particle ; thus they restrict each one to the same half - space in @xmath32 bounded by a hypersurface passing through the origin and normal to @xmath83 .",
    "the intersection of these half - spaces determines the feasible region as a convex polyhedral cone in the upper half of @xmath32 .",
    "only a subset of the inequality constraints will actually bound the feasible region , since their satisfaction will automatically guarantee satisfaction of the other constraints . and ,",
    "as proved in appendix [ appendix : inequality_constraint_proof ] , each particle lies on an edge of the polyhedral cone ( i.e. , is constrained by @xmath84 _ active _ inequality constraints ) at every local minimizer of @xmath71 .",
    "an example of this _",
    "symmetric @xmath62-representation _ for an @xmath85 problem ( based on the `` crescentric '' bivariate data set of ref .",
    "@xcite ) is shown in fig .",
    "[ fig : cres_mspace ] .",
    "( it is only in the @xmath85 case that a simple graphical representation is possible ; nonetheless it is useful for illustrating structural properties that also hold when @xmath86 . ) in this case , the feasible region is bounded by only two lines corresponding to @xmath87 and @xmath88 , where @xmath89 and @xmath90 are the minimizer and maximizer of @xmath91 , respectively .",
    "the global minimum of @xmath92 corresponds to the unique ( up to the permutation degeneracy ) situation where each particle lies on the feasible region boundary while the equality constraints of eq .",
    "( [ eqn : discrete_equality_constraints ] ) are simultaneously satisfied . in fig .",
    "[ fig : cres_mspace ] , this is when the points are located at the two squares on the boundary .",
    "the two ways of associating the particles with the squares corresponds to the 2-fold permutation degeneracy of the solution .    [ cols=\"^,^ \" , ]      the @xmath33 particles in the symmetric @xmath62-representation are not independent because of the equality constraints [ eq .  ( [ eqn : discrete_equality_constraints ] ) ] .",
    "we use these in the _",
    "asymmetric @xmath62-representation _ to explicitly eliminate the degrees of freedom of one _ slave _ particle that , without loss of generality , we take to be @xmath93 : @xmath94 the homogeneous inequality constraints on the slave , @xmath95 transform into inhomogeneous inequality constraints that couple the remaining @xmath84 _ free _ particles : @xmath96 we consolidate the @xmath97 degrees of freedom of the free particles into the supervector @xmath98 having components @xmath99 in @xmath100 .",
    "optimization then proceeds in @xmath100 with the @xmath98 restricted by @xmath101 homogeneous inequality constraints from eq .",
    "( [ eqn : discrete_inequality_constraints ] ) with @xmath102 and @xmath82 inhomogeneous inequality constraints from eq .",
    "( [ eqn : coupled_inequality_constraints ] ) .",
    "the combination of homogeneous and inhomogeneous inequality constraints forms a closed convex polytope that bounds the feasible region .",
    "each local minimum of @xmath71 ( and thus , the global minimum ) lies at a vertex of this polytope  @xcite .",
    "an example of the asymmetric @xmath62-representation for @xmath85 is shown in fig .",
    "[ fig : cres_mspace_constrained ] . in this case",
    "there are four bounding constraints : two homogeneous inequality constraints having boundaries passing through the origin and two inhomogeneous inequality constraints ( from the slave cluster ) with boundaries intersecting at @xmath74  @xcite .",
    "@xmath92 is infinite at the polytope vertices at the origin and @xmath74 .",
    "the two other vertices correspond to index - permutation - equivalent global minima .",
    "the minimization problem can be visualized and easily solved in this manner only for @xmath85 : as @xmath33 increases the number of polytope vertices , and hence the number of local minima , grows rapidly , and the global minimization problem becomes difficult .",
    "korenblum and shalloway  @xcite solved this by an expensive , random exploration of the vertices .",
    "we take a different approach : rather than trying to identify the minimizing vertex directly , we exploit the fact that the @xmath72 components of @xmath62 can be determined by the @xmath72 low - frequency components of an appropriately chosen subset @xmath103 of @xmath33 items , which we call _ representatives_. to make this explicit we write a matrix analog of eq .",
    "( [ eqn : w_psi_discrete ] ) over @xmath104 as @xmath105 where    @xmath106    and @xmath62 is the matrix having the @xmath59 as its rows . according to eq .",
    "( [ eqn : discrete_equality_constraints ] ) , @xmath62 must satisfy @xmath107 as shown in appendix  [ appendix : rank_proof ] , there always exists at least one subset @xmath104 such that @xmath108 is invertible .",
    "with such a subset we can solve eq .",
    "( [ eqn : w_mtrue_psi ] ) for @xmath62 : @xmath109 where @xmath110 denotes the inner product over the cluster index @xmath4 .    the usefulness of eq .",
    "( [ eqn : m_from_w ] ) may be questioned since _ a priori _ we do not know any @xmath111 exactly .",
    "however , any data set amenable to clustering will have at least one item per cluster that will be strongly assigned in the clustering solution ; we call such items _ candidate representatives_. if we could select a set of representatives @xmath112 containing one candidate representative from each cluster , we could use our approximate foreknowledge of their assignment values at the solution , @xmath113 , to approximate @xmath62 at the solution , @xmath114 , via eq .",
    "( [ eqn : m_from_w ] ) .    for example",
    ", if item @xmath115 were a candidate representative for cluster @xmath4 , its assignment in the clustering solution would be  @xcite @xmath116 by choosing @xmath117 and making similar choices for the other clusters , we would get @xmath118 this zeroth - order estimate could be used to approximately solve eq .",
    "( [ eqn : m_from_w ] ) for @xmath114 :    @xmath119    in agreement with eq .",
    "( [ eqn : m_equality_constraint ] ) , @xmath120 would satisfy  @xcite @xmath121    knowing @xmath120 would allow us to define zeroth - order estimates @xmath122 for _ all _ the items via eq .",
    "( [ eqn : w_psi_discrete ] ) with @xmath123 , where the @xmath124 are the rows of @xmath120 : @xmath125 however , the @xmath122 would not necessarily satisfy the inequality constraints of eq .",
    "( [ eqn : discrete_w_inequality_constraints ] ) .",
    "if they did , they would solve the optimization problem ( see sec .",
    "[ section : m0_exact ] ) . if they did nt , they would provide a starting point for refining the solution as discussed in sec .",
    "[ section : constrained_solver ] .",
    "( [ eqn : m0_def ] ) implies that we only need to find the representatives to determine @xmath120 .",
    "this is trivial when @xmath85 : the two active inequality constraints [ identified by either pair of intersecting bold and bold - dashed lines in fig .",
    "[ fig : cres_mspace_constrained ] ] come from the extremal items @xmath126 and @xmath127 of @xmath128 , i.e. , the minimizer and maximizer of @xmath91 .",
    "thus , at the solution @xmath129 and @xmath130 , and the equality constraints imply that @xmath131 and @xmath132 : @xmath126 and @xmath127 not only generate the active constraints , but are also the representatives , which in this case are perfectly assigned in the solution .",
    "cccc & & & + [ 4ex]-*representation * & & ^-*representation * + & & & + & & &    the situation is more complicated when @xmath86 . the representatives : ( 1 ) may not be maxima and minima of the eigenvectors , ( 2 ) may not be the items associated with the active constraints , and ( 3 ) may not be perfectly assigned at the solution .",
    "nonetheless , as discussed above , they will satisfy @xmath133 and we will use this property to identify them .",
    "we show how this is done using the @xmath44 spiral problem as an example ( fig .",
    "[ fig : spiral_polytopes ] ) .",
    "its three low - frequency clustering eigenvectors are shown in panel ( b ) , and the representatives that we would like to find are identified by circles , triangles , and squares . to find @xmath112",
    "we imagine that we know @xmath114 and the corresponding assignment vectors @xmath134 so that we can map the items into @xmath32 at the points specified by the 3-vectors @xmath135 $ ] in panel ( c )  @xcite .",
    "because the @xmath136 satisfy the probabilistic equality constraints , these points lie in the 2-dimensional plane that is normal to the vector @xmath137 and at distance @xmath138 from the origin .",
    "moreover , they satisfy the probabilistic inequality constraints and thus lie within an equilateral triangle in this plane .",
    "( we use `` within '' to include points that lie on the boundary . )",
    "this provides barycentric coordinates  @xcite in which the three vertices of the triangle correspond to the cluster assignments @xmath139 , @xmath140 , and @xmath141 ; we will call these the @xmath142 , 2 , and 3 vertices , respectively .",
    "the three components of @xmath136 are given by the three distances of point @xmath2 from the three sides of the triangle .",
    "thus , if point @xmath2 lies on the side of the triangle opposing vertex @xmath4 , the inequality constraint @xmath143 is active .",
    "we call this the _ @xmath144-representation _ [ panel ( c ) ] . although it may not be evident in the figure , consistent with the even distribution of active inequality constraints between the clusters ( appendix [ appendix : inequality_constraint_proof ] ) , each side of the triangle intersects exactly two items .",
    "the candidate representatives are the items that are close to the three vertices , and we want to choose one from the vicinity of each vertex to compose @xmath112 .",
    "we can do this by choosing the three items that ( when taken as vertices ) define the triangle of largest area .",
    "it is easy to show that the triangular area defined by any subset @xmath104 of three items located at their solution positions is @xmath145 .",
    "thus , we can find a good @xmath112 by finding the subset @xmath104 that maximizes @xmath146 .",
    "since we do nt actually know @xmath114 or the @xmath136 , it is not obvious how to proceed .",
    "however , eq .  ( [ eqn : w_mtrue_psi ] ) implies that latexmath:[\\ ] ] where @xmath306 is the @xmath33-vector having the coordinates of vertex @xmath307 in the low - frequency eigenvector space , @xmath308 third , since all the @xmath33-vectors in eq .",
    "( [ eqn : a ] ) have their zeroth component equal to one , @xmath309 is proportional to the signed area of the triangle having vertices @xmath2 , @xmath300 , and @xmath298 in the @xmath150-representation .",
    "fourth , this area is proportional to the distance of point @xmath2 from the side opposite to @xmath299 in the @xmath150-representation .",
    "combining all these proportionalities proves that the distance of point @xmath2 from the side opposing a vertex in the @xmath144-representation is proportional to its distance in the @xmath150-representation .",
    "the goal of the algorithm is to choose the subset of items @xmath104 that approximately defines the @xmath156-simplex having maximum hypervolume @xmath310 in the @xmath150-representation .",
    "if the hypervolume , @xmath311 , of one face of the simplex is already determined , @xmath310 is proportional to the distance of the excluded vertex from that face .",
    "[ for example , in the case of a 2-simplex ( a triangle ) , this is the familiar area @xmath312 base @xmath313 height rule , where `` base '' is the length of the determined simplex face and `` height '' is the distance of the other point from that face . ]",
    "this suggests a natural greedy algorithm : ( a ) initialize by finding the @xmath314-simplex of greatest length , ( b ) extend the @xmath315-simplex to a @xmath316-simplex by finding the item that is furthest from the hypersurface that embeds the @xmath315-simplex , ( c ) @xmath317 and return to step ( b ) until @xmath318 .      1 .   * initialize : * + select the two items @xmath319 and @xmath320 that maximize @xmath321",
    ". + @xmath322",
    ". + @xmath323 .",
    "2 .   * repeat while * @xmath324 * : * + ( a ) select the item @xmath325 that maximizes + @xmath326 ||\\ , , $ ] + where + @xmath327 @xmath328_n\\ , [ { \\overrightarrow}{\\psi}^\\perp(i_{q'})-{\\overrightarrow}{\\psi}^\\perp(i_1)]_{n ' } }                                                            { || { \\overrightarrow}{\\psi}^\\perp(i_{q'})-{\\overrightarrow}{\\psi}^\\perp(i_1 ) ||^2}\\;. $ ] + ( b ) @xmath329 + ( c ) @xmath317 +    here @xmath330 denotes the inner product within the @xmath156-dimensional @xmath150 space and @xmath331 is the projection matrix in this space that removes the components of @xmath332 $ ] that lie within the subspace containing the @xmath315-simplex .",
    "therefore , @xmath333 is the distance of @xmath334 from the subspace , and the @xmath316-simplex formed by adding @xmath335 as a vertex is that of maximum hypervolume containing the previously computed @xmath315-simplex as one of its faces ."
  ],
  "abstract_text": [
    "<S> spectral clustering uses the global information embedded in eigenvectors of an inter - item similarity matrix to correctly identify clusters of irregular shape , an ability lacking in commonly used approaches such as @xmath0-means and agglomerative clustering . however , traditional spectral clustering partitions items into hard clusters , and the ability to instead generate fuzzy item assignments would be advantageous for the growing class of domains in which cluster overlap and uncertainty are important . </S>",
    "<S> korenblum and shalloway [ phys . </S>",
    "<S> rev . </S>",
    "<S> e * 67 * , 056704 ( 2003 ) ] extended spectral clustering to fuzzy clustering by introducing the principle of uncertainty minimization . however , this posed a challenging non - convex global optimization problem that they solved by a brute - force technique unlikely to scale to data sets having more than @xmath1 items . here </S>",
    "<S> we develop a new method for solving the minimization problem , which can handle data sets at least two orders of magnitude larger . </S>",
    "<S> in doing so , we elucidate the underlying structure of uncertainty minimization using multiple geometric representations . </S>",
    "<S> this enables us to show how fuzzy spectral clustering using uncertainty minimization is related to and generalizes clustering motivated by perturbative analysis of almost - block - diagonal matrices . </S>",
    "<S> uncertainty minimization can be applied to a wide variety of existing hard spectral clustering approaches , thus transforming them to fuzzy methods . </S>"
  ]
}
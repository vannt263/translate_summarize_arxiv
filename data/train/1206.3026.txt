{
  "article_text": [
    "unconventional computing seeks to explore and characterise a wider range of substrates and phenomena than those that have been used so far for practical computing , with the hope of understanding and applying the intrinsic information processing behaviour of each substrate .",
    "unconventional computing tends to be substrate - driven rather than model - driven . rather than searching for physical systems that can be harnessed to make computing machinery according to a preconceived idea",
    "of which behaviour the machinery is required to exhibit , unconventional computing is inspired by the idea that every sufficiently complex system performs information processing of some kind , which we can harness if we can find the appropriate mathematical techniques for understanding or interpreting the system , and the appropriate experimental techniques for manipulating and observing the system . the existence of natural systems that manage to harness complex phenomena to process information in powerful ways that we do not yet fully understand is one of the motivations for this search , though unconventional computing does not confine itself to naturally occurring systems .",
    "one of the difficulties in efficiently exploiting previously unexploited phenomena in new or existing substrates is that many of the abstract models that we use in computer science were invented and popularised precisely because they abstract away from the details of the physical behaviour of computing hardware . in the early history of computing machinery it was often pragmatic to regard concurrent , time - dependent behaviour as a nuisance to be abstracted away from so that it did not complicate and impede design . in synchronous circuit design the input - output delay present in all logic gates",
    "is taken account of by waiting for a sufficiently long time that all gates have had enough time to propagate any changes on their inputs to their outputs , and only then carrying out the next step in the computation .",
    "asynchronous design techniques @xcite can help designers to make more efficient designs by having circuits explicitly signal when their outputs become valid , so that there is no need to wait for the worst - case delay time , and no need to have all circuits in a system clocked at constant rates .",
    "asynchronous circuit design involves understanding electronic digital circuit elements at a less abstract level than that which is used in synchronous design , this makes it possible to exploit types of behaviour that do not exist at higher levels of abstraction .",
    "this approach towards the substrate can be generalised @xcite .",
    "some of the questions that can be asked of any substrate considered to have complex information processing potential are :    1 .",
    "what are the intrinsic behaviours of a region of substrate and how can they be modelled ? 2 .",
    "how do regions of substrate behave when connected together ?",
    "3 .   can the modes of behaviour of regions of substrate , or composed regions of substrate be mapped easily onto any existing abstractions used for information processing ?",
    "does the substrate suggest new models for information processing ?",
    "5 .   can the substrate be applied to a problem without having to have a detailed abstract model for understanding how it behaves as it does ?    for complex substrates answers to questions 3,4 and 5 can be sought through observation and experimentation without having quantitative answers for questions 1 and 2 .",
    "for example , the tendency of plasmodium of physarum polycephalum to form efficient networks connecting multiple food sources was justified on evolutionary grounds and observed experimentally @xcite before a mathematical model of dynamic network formation was constructed @xcite , and before a low - level particle based model that can give rise to that behaviour was constructed @xcite .",
    "robots have been devised that have controllers which exploit a substrate without requiring a theory that accounts for the behaviour of the substrate @xcite .    for other substrates",
    ", the behaviour of small regions of substrate may be easy to explain and describe @xcite , but challenges arise with recognising that the substrate might be capable of information processing , with mapping it onto higher level abstractions , and with trying to deduce the behaviour of large regions of substrate from the behaviour of small regions .",
    "in this paper i consider excitable media substrates , which can be used to implement channels along which excitations can propagate .",
    "examples of this type of substrate are : planar belousov zhabotinsky ( bz ) reaction media , toppling dominoes , plasmodium of physarum polycephalum , and the propagation of flames in a forest fire .",
    "excitable media are characterised by the property that waves of disturbance can propagate through a medium without diminishing .",
    "the physical phenomenon that gives rise to this behaviour differs from one medium to another .",
    "the toppling domino and the forest fire substrates are examples of single - use media  a disturbance can propagate through a region once only . for the sake of simplicity i consider only structured excitable media , where excitations are confined to predefined regions , and do not consider unstructured free - space systems , where excitations propagate and interact in a homogeneous medium @xcite .",
    "one way of using excitable media for information processing is to exploit the property that some media have whereby two travelling excitations close to each other can exert an influence over each other .",
    "the consequences of that influence can be detected by exploiting another property : relative to their direction of movement , excitations may spread more favourably in some directions than in others .",
    "flames propagating in a forest fire tend to spread out in all directions  a flame front passing by a region of unburnt forest will not leave that part unburned .",
    "in contrast , a toppling domino will only topple in a direction perpendicular to its base .",
    "a toppling domino will not cause its neighbour to topple unless that neighbour happens to stand in the way of the toppling domino . in between these two extremes",
    "we find other types of propagation behaviour which can favour one locus over another .",
    "planar bz - reaction media can be made to exhibit directionally dependent propagation in a number of ways @xcite .",
    "the preference of plasmodium of physarum polycephalum for one direction over another can be influenced by many different factors @xcite . in certain circumstances",
    "the behaviour of propagating plasmodium has striking similarities to the behaviour of propagating waves in bz reaction media @xcite and can similarly be made to exhibit directionally dependent propagation ( chapter 7 of @xcite ) .",
    "a recent survey of some of the ways in which structured bz - reaction media have been used for information processing is given by grecki @xcite .",
    "excitable media have been simulated at a low level of abstraction using partial differential equation models , and these low - level models have been used ( in conjunction with experiments ) to gain qualitative insight into the behaviour of the media and to discover relatively high - level structures such as boolean logic gates which can be put together to make complex circuits .",
    "i attempt to fill a gap between these two levels of abstraction by quantitatively describing the time - dependent behaviour of regions of structured excitable media in response to excitations .",
    "describing structures at this level of abstraction retains timing information , which can be exploited to make more efficient circuits , or to make systems with behaviour that can not be succinctly described in terms of combinational or sequential logic circuits .",
    "if a pattern of excitation is applied to an excitable medium it will evolve over time in a generally deterministic way .",
    "if another excitation is applied to the medium as it is evolving , the way in which it evolves may change , and it might unfold into a different sequence of patterns",
    ". in general , the way that the system evolves over time is dependent on the timing and location of the excitations that it receives .",
    "within concurrency theory the term _ reactive system _ is often used to describe a system whose behaviour depends on the pattern and timing of events that influence the system @xcite .",
    "i would like to avoid potential confusion by making it clear at this point that the term _ reactive system _ has nothing to do with the fact that some excitable media make use of chemical reactions .",
    "in summary , the two problems that i address in this paper are :    1 .   how can regions of excitable media be described as _ reactive systems _ ?",
    "how can the behaviour of complex structures made from excitable media be deduced from the behaviour of their constituent structures ?",
    "this work has similar aims to some of the uses of concurrency techniques in asynchronous circuit design @xcite .",
    "one difference is that in asynchronous design these techniques are used for the specification and verification of relatively large systems whereas here the emphasis is on _ exploring _ and uncovering the dynamics of relatively small structures .",
    "another difference is that in asynchronous systems few assumptions are made about timing , but here all signals are assumed to propagate at a known speed .",
    "the purpose of this work is not simply to simulate the behaviour of structures made from excitable media at an abstract level  this can be done perfectly well using cellular automaton models of excitable media .",
    "rather , this work is concerned with describing the complete set of behaviours that a structure can exhibit , so that these behaviours can be understood and reasoned about without having to run exhaustive simulations of a system .",
    "figure [ domino_fork ] shows a domino fork . this is a useful structure to use for the exposition which follows because it is a simple , familiar system .",
    "it is arguably the simplest structure in an excitable medium that can be used as the sole basis for more complex information processing structures such as boolean logic gates and circuits .",
    ", width=163 ]    the behaviour of the domino fork is summarised in the following paragraphs . here",
    "the word ` event ' is used to mean the toppling of a domino .",
    "dominoes can topple in any one of two directions .",
    "an ` input event ' to a system of dominoes is a domino outside the system toppling towards the system .",
    "an ` output event ' is a domino inside the system toppling away from and out of the system .",
    "the word ` signal ' is used to mean a travelling wave of excitation .",
    "the domino fork has three regions on its boundary in which events can occur . in each region",
    "there are two possible events that can occur : an input event , and an output event .",
    "we use a different label for each event . clearly in a system of dominoes once one event has happened , the other event can not happen . in reusable excitable media , which can propagate excitations in the same region again and again ,",
    "this is not the case .",
    "the definitions of ` input event ' and ` output event ' given above permit an input event and output event in the same region to occur at the same time : it is possible for a domino outside the system to topple towards the system at the same instant that a domino inide the system topples away from the system .",
    "the two dominoes will meet each other in the middle of toppling .    if event @xmath0 occurs then events @xmath1 and @xmath2 will occur a short time later , unless events @xmath3 or @xmath4 occur in the meantime .",
    "if event @xmath3 or event @xmath4 occur then event @xmath5 will occur a short time later , unless event @xmath0 occurs in the meantime .",
    "if we ignore one of the two branches of a fork , we end up with a simple line of dominoes , shown in figure [ domino_line ] , where input event @xmath3 will cause output event @xmath5 a short time later , unless event @xmath0 occurs in the meantime ( with identical behaviour in the other direction ) .",
    "okeefe @xcite showed that , subject to certain timing constraints and assuming that bridges can be built to cross one line of dominoes over another , the domino fork can be used to build boolean circuits .",
    "i showed that any boolean circuit can be built , that bridges are not required , and that an asynchronous scheme can be used in which there are no timing constraints @xcite , albeit with a larger number of forks for a given circuit than in okeefe s scheme .",
    "a domino fork can be used as a direction - detecting gate . to help conceptualise this ,",
    "imagine bending the arms of the fork into a t shape ( figure [ direction_detecting ] ) , and regard the horizontal channel as a channel in which a signal may propagate in either direction , while the vertical channel is treated as an output .",
    "now a signal travelling from right to left in the horizontal channel will cause an output to emerge from the vertical channel , but a signal travelling from left to right will not result in an output from the vertical channel .    ,",
    "width=96 ]    the behaviour of a domino line can be regarded from the perspective of collision - based computing @xcite .",
    "here , a domino line represents a channel into which objects  in this case toppling wavefronts  can be sent .",
    "if two objects are sent into the channel in opposite directions they will collide and annihilate with each other , but if only one object is sent in it will emerge from the other end of the line .",
    "therefore a line effects an and - not operation : if event @xmath3 and - not event @xmath0 then event @xmath5 ( subject to timing constraints ) .",
    "domino fork structures placed at either end of a line can be seen as transducers which control the injection of objects into the line , and which catch objects emerging from the line .",
    "both the and - not behaviour of a domino line and the direction - detecting behaviour of a fork seem to be essential for being able to construct more complex information processing structures using forks connected by lines .    in @xcite ,",
    "several simple structures made from domino forks and lines were described , before it was shown how they can be put together to make arbitrary boolean circuits .",
    "two of these simple structures are shown in figures [ domino - onewayline ] and [ domino - singlelinecrossover ] .    , width=192 ]    , width=96 ]    figure [ domino - onewayline ] shows a one way line constructed using two forks . a signal entering",
    "the configuration from a will split at fork f into two signals that will collide with each other , preventing any signal from emerging at b. in the other direction , a signal entering the configuration from b will pass through fork g , through f and then emerge from a.    figure [ domino - singlelinecrossover ] shows a single - line crossover ( so - called because it allows two single lines to cross over , whereas another structure in @xcite allows two pairs of lines to cross over ) .",
    "it has two inputs a and b and two outputs a and b which are crossed over topologically .",
    "a signal may arrive either at input a or at input b ( but not both ) .",
    "a signal arriving at a will propagate to a , but not to b or b. a signal arriving at b will propagate to b , but not to a or a.    the fork structure can also be implemented in other excitable media .",
    "motoike and yoshikawa give an example of a fork - like structure in simulated bz - reaction media @xcite and use it for implementing an or gate by making use of its behaviour for the cases when @xmath3 or @xmath4 or both receive excitations ( with reference to figure [ domino_fork ] ) .",
    "motoike and yoshikawa used unexcitable barriers to prevent backward propagation from one fork input to another , and as a consequence their fork effectively has no @xmath0 input . an alternative way to implement a fork structure is to use a light sensitive medium , in which the excitability of the medium can be controlled by the level of illumination @xcite . within a certain range of illumination",
    ", the medium can be made to exhibit sub - excitable behaviour , in which excitations in channels can not propagate around sharp corners .",
    "figures [ bzfork1 ] and [ bzfork2 ] show two snapshots from a simulation of a fork structure in this medium . here",
    "the dark regions support sub - excitable waves , and the lighter surrounding regions inhibit excitation .",
    "this behaviour has also been observed experimentally in @xcite .",
    ", width=144 ]    , width=144 ]    the behaviour of the fork structure in sub - excitable bz - reaction media is very similar to the behaviour of the domino fork , and depends on the directional propagation of excitations in the sub - excitable regime .",
    "the most significant difference between bz - reaction media and domino media is that a bz - reaction medium is reusable : once the medium has recovered from an excitation it can be used again .",
    "for some structures this can lead to a significantly different range of behaviours than those exhibited by a single use medium .",
    "this is discussed in section [ reusable - regions ] .",
    "plasmodium of physarum polycephalum has a mode of behaviour in which it moves along a regularly spaced line of food particles in a spreading and contracting mode @xcite .",
    "if food particles are placed close together along a line then a plasmodium will spread from a food particle until the front of the spreading area encounters another food particle .",
    "it will quickly slow and stop its spread , then migrate to the new food particle , leaving a tube connecting with the old particle .",
    "it will then begin spreading again from the new particle , repeating the same behaviour .",
    "figure [ smc - actual ] shows an image of a plasmodium exhibiting this behaviour . figures [ smc - fork1 ] and [ smc - fork2 ] show work in progress to coax physarum to exhibit fork - like behaviour , obtained from the spreading and contracting mode of propagation with a carefully designed food geometry .    ,",
    "width=288 ]    , width=144 ]    , width=144 ]    fork structures and line structures are used exclusively in the exposition that follows .",
    "the method that is introduced should work equally well for other structures with behaviour that can be described in terms of a reactive system .",
    "i begin by defining a type of transition system that is capable of modelling the behaviour of single fork and line structures in terms of input and output events , and the timing relationships between them .",
    "i then give a set of rules for composing transition systems that will allow us to deduce the behaviour of larger and more complex structures from the behaviour of fork and line structures .",
    "when the total range of behaviours that a complex structure can exhibit is difficult to comprehend , i show how to select portions of its behaviour which can be understood in isolation and which can help to understand the total behaviour .",
    "the transition systems defined here make use of the description of transition systems given in @xcite .",
    "the meaning given to transitions is similar to that used in sccs @xcite in so far as every transition represents the passage of a unit of time , in addition to the occurrence of zero or more events , but instead of using event sets as labels , boolean expressions over event symbols are used .",
    "a common clock is assumed among all transition systems , so transitions in any pair of transition systems occur together at the same time .",
    "notation and concepts will be introduced by giving examples along with more formal descriptions . whenever the term ` transition system ' is used from here onwards",
    ", it refers to the particular type of transition system developed here , rather than to transition systems in general .",
    "a transition system is a tuple @xmath6 where @xmath7 is a set of states with initial state @xmath8 , @xmath9 is a set of labels , @xmath10 is the transition relation , @xmath11 is a set of event symbols , and @xmath12 is a set of input event symbols .",
    "symbols in @xmath13 are output event symbols .    if we are referring to two or more different transitions systems then in order to distinguish one from the other we use a dot notation to refer to the elements of a tuple : if @xmath14 is a transition system then @xmath15 is the set of states of @xmath14 , @xmath16 is the initial state of p , etc .",
    "event symbols represent the occurrence of an event in the physical system that the transition system represents . for the sake of brevity we will use the word ` events ' to refer to both event symbols and the events that the symbols represent .    the set @xmath17 , which we will call the input interface , is a set of events that are generated outside the transition system and which the system reacts to .",
    "the set @xmath13 , which we will call the output interface , is a set of events that are generated by the system .",
    "a transition system represents a structure made from excitable media .",
    "each state corresponds to a particular pattern of excitation , and transitions from one state to another correspond to the evolution over time of patterns of excitation , possibly subject to the effects of input events .",
    "the input interface of the transition system corresponds to locations where excitations can be fed into the structure , and the output interface corresponds to locations where excitations can emerge from the structure for observation or to feed into the inputs of other structures .",
    "labels are boolean expressions over events , where the symbol @xmath3 in an expression corresponds to the occurrence of event @xmath3 , and the expression @xmath18 corresponds to the non - occurrence of event @xmath3 .",
    "we will use @xmath19 to refer to the set of boolean expressions over events from the set @xmath20 . in our boolean expressions",
    "we use @xmath21 for conjunction , @xmath22 for disjunction and @xmath23 for negation .",
    "two labels are equivalent if they represent the same boolean function , regardless of how that function is expressed .",
    "a label represents a collection of sets of events .",
    "we choose to use boolean expressions ( rather than event sets as in sccs ) for labels because by doing so we often reduce the number of transitions that are needed in a transition system , because we can specify many sets of events in a single transition , rather than having a separate transition for each set .",
    "the synchronisation operator for composing two transition system remains simple  it is essentially the conjunction of two boolean expressions .",
    "we say that a label expression @xmath24 with event variables @xmath25 _ matches _ a set of input events @xmath26 if , given the truth assignment @xmath27 @xmath28 , the resulting expression is not equal to @xmath29 .",
    "i.e. it is either equal to @xmath30 , or it has some remaining variables not in @xmath17 .",
    "we must place some additional constraints on transition systems to bring their behaviour into closer agreement with the physical systems we are interested in .",
    "we define these constraints here , and later on when we compose two transition systems we will need to show that these constraints still hold in the transition system that is produced as the result of the composition .    a transition corresponds to the passage of a unit of time in addition to the occurrence of events .",
    "we can think of the occurrence of events as being interleaved with the passage of units of time .",
    "events occur , then a unit of time elapses , then more events occur , and so on .",
    "when a particular set of input events occurs , the transition followed is that which matches the events that occur",
    ". a transition system must be deterministic : no set of input events should match more than one transition from a given state . additionally , we will adopt the convention that there must always be a transition that matches any given set of input events .",
    "even if a system reaches a state from which it can never leave , we require that it has a transition back to the same state , matching any set of input events .",
    "the reason for this convention is that it simplifies the rule for composing two systems .    for each @xmath31 there must be exactly one @xmath32 such that @xmath24 matches @xmath20 .",
    "[ label - satisfiable ]    a label must be the conjunction of two subexpressions , one being any boolean expression of input events , the other being a conjunction of output events or their negation , in which every output event appears .",
    "this ensures that every transition effectively specifies which output events occur during that transition  they are the events that are not negated in the output event subexpression .",
    "we first define a set of expressions that are conjunctions of variables or their negation :    let @xmath33 for @xmath34    @xmath35 [ label - form ]    one of the advantages of using boolean expressions representing collections of event sets for labels is that if a particular input event has absolutely no effect on the behaviour of a transition system in a given state  that is , the destination state is the same regardless of whether that input event occurs or not  then we can omit that event from any label in transitions from that state .",
    "a transition system in a state where some inputs have no effect could correspond to a physical system in a state where an input feeds into a region of excitable medium which has not yet recovered from a previous event .",
    "more generally it corresponds to a physical system evolving along a trajectory on which a particular input makes no difference to that trajectory .",
    "the rule for determining which transition a transition system will undergo in response to a set of input events , and which output events it will produce is given by the following definition :    if a system is in state @xmath36 and the set of input events that occurs is @xmath20 then the next state @xmath37 of the system is given by the element @xmath38 for which @xmath24 matches @xmath20 .",
    "the set of output events that the system will produce are those which appear non - negated in the output event subexpression of @xmath24 .",
    "a state @xmath36 is reachable if and only if it is the initial state @xmath8 , or there is a transition @xmath39 where @xmath24 is satisfiable and @xmath40 is reachable .",
    "all states in a transition system must be reachable .",
    "[ state - reachable ]",
    "finally , the next constraint specifies that no input can have an instantaneous effect on any output .",
    "there must be a delay of at least one time unit between the occurrence of a set of events and a change in the output behaviour of the system .",
    "this is realised by making sure that all labels for transitions from a given state have the same output event subexpression .    for each @xmath41",
    "there is a single expression @xmath42 such that for every @xmath32 , @xmath24 is of the form @xmath43 ( where @xmath44 is different for each transition ) .",
    "[ single - output - expression ]    it is reasonable to insist that any transition system that corresponds to a physical excitable media system satisfies constraint [ single - output - expression ] .",
    "if we were to permit a transition system to flout constraint [ single - output - expression ] , then we could end up in a contradictory situation where two systems that shared both inputs and outputs could specify , say , that events @xmath3 and @xmath5 must always occur simultaneously , and also that @xmath5 can only occur when @xmath3 does not occur .",
    "these definitions and constraints permit us to specify transition systems that represent all of the possible behaviours of a fork and a line . before doing",
    "so we will consider some simpler examples and then define rules for composing two transition systems .",
    "these simple examples do not correspond to any structures in excitable media .",
    "they serve simply to illustrate the concepts that have been described so far and introduce in an incremental way the notation and conventions used for representing transition systems graphically .",
    "figure [ graphexample1 ] is an example of a simple transition system .",
    "the input interface for this system is @xmath45 and the output interface is @xmath46 .",
    "this is displayed as @xmath47 in the box in the bottom left of figure [ graphexample1 ] .",
    "the initial state is represented using one circle inside another and is also named as state 0 .",
    "other states are given numeric names .",
    "transitions are represented as arrows from one state to another , with the label for the transition written above the arrow .",
    ", width=249 ]    this example introduces two conventions for representing transition systems that make them easier to read .",
    "the first convention is the way that label expressions are written .",
    "labels could be written simply as boolean expressions , but this representation can not easily be read at a glance , so instead we take account of constraint [ label - form ] regarding the allowable sub - expression for output events , and write the sub - expression corresponding to the input event variables first , followed by a colon , followed by a set of those output event variables that are not negated in the label expression .",
    "for example , if @xmath3 and @xmath5 are input events , and @xmath0 and @xmath1 are output events then the label expression @xmath48 is written @xmath49 .",
    "the colon is omitted if the output event subexpression is a conjunction of negated output event variables , or if the label expression matches any set of input events .",
    "if the label expression is simply a conjunction of negated output events then we write the label as @xmath50 .",
    "the second convention concerns the graphical representation of a consecutive sequence of transitions from one state to another that is not influenced by any input events and which does not produce any output events .",
    "since such a sequence of states and transitions corresponds to the passage of a length of time equal to the length of the sequence , we write it using a single arrow with a number above the arrow representing the length of the sequence . in figure",
    "[ graphexample1 ] , the arrow with the number 5 written above it between states 1 and 2 has the same meaning as if we drew four extra states and transitions between state 1 and 2 , and labelled each of the five transition between states 1 and 2 with the label 1 .",
    "the behaviour of the transition system in figure [ graphexample1 ] can be summarised as follows .",
    "if the system is in its initial state and event @xmath3 does not occur then it will remain in the initial state no matter how many time units elapse . if the system is in its initial state and input event @xmath3 occurs then the system will be in state 1 after 1 unit of time has elapsed . after a further 5 units of time have elapsed the system will enter state 2 .",
    "it will then generate output event @xmath5 and will be in state 3 after 1 unit of time .",
    "once the system is in state 3 it will remain in state 3 regardless of how much time elapses .",
    "figure [ graphexample2 ] shows a slightly more complex example .",
    "the input interface of this system is @xmath51 and the output interface is @xmath52 .",
    "if the system is in its initial state and input event @xmath3 occurs , or if both @xmath3 and @xmath5 occur , it will enter state 1 after 1 unit of time .",
    "it will then generate event @xmath4 and enter state 4 after a further unit of time .",
    "if the system is in its initial state and input event @xmath5 occurs by itself , it will enter state 2 after 1 unit of time .",
    "it will then generate event @xmath1 and enter state 4 .",
    "if the system is in its initial state and neither input event occurs then one unit of time will elapse and the system will enter state 3 .",
    "it will then output event @xmath0 , and enter state 4 after 1 unit of time .",
    "from state 4 , the system will return to the initial state after 1 unit of time .",
    ", width=211 ]      in general , the behaviour of two transition systems @xmath14 and @xmath53 operating independently and concurrently can be described by a single transition system by considering each state in @xmath14 in combination with each state in @xmath53 .",
    "figure [ simplebeforecomposing ] shows two simple transition systems that have no events in common .",
    "although these two transition systems operate independently , both are in their initial state at the starting time and they operate under a common clock . because both of the transition systems in figure [ simplebeforecomposing ] have transitions returning to every state , each of the systems can remain in the initial state or the final state for any length of time while the other system makes a state transition .",
    "figure [ simpleaftercomposing ] shows the result of composing these transition systems .",
    ", width=113 ]    .[simpleaftercomposing],width=192 ]    the notation @xmath54 will be used for the composition of @xmath14 and @xmath53 .",
    "when @xmath14 and @xmath53 are composed the interface of @xmath14 may have events in common with the interface of @xmath53 , so we must come up with a set of rules for combining transitions to make sure that the occurrence or non - occurrence of events in @xmath14 is synchronised with the occurrence or non - occurrence of events in @xmath53 .    for two transition systems to be composable",
    ", they must both satisfy constraints [ label - satisfiable ] , [ label - form ] and [ state - reachable ] , and any event that they have in common must be an input in one system and an output in the other .    regarding constraint [ single - output - expression ] , we will allow that either @xmath14 or @xmath53 does not satisfy this constraint .",
    "the reason for this is made clear later on in section [ reusable - regions ] . however , whichever of @xmath14 or @xmath53 does not satisify constraint [ single - output - expression ] must have no inputs coming from the other system , and all of its outputs must feed into the other system .",
    "two transition systems @xmath14 and @xmath53 are composable if and only if the following conditions hold :    * both @xmath14 and @xmath53 satisfy constraints [ label - satisfiable ] , [ label - form ] and [ state - reachable ] . *",
    "if @xmath14 does not satisfy constraint [ single - output - expression ] , then @xmath53 must satisfy constraint [ single - output - expression ] and @xmath55 .",
    "* if @xmath53 does not satisfy constraint [ single - output - expression ] , then @xmath14 must satisfy constraint [ single - output - expression ] and @xmath56 . *",
    "@xmath57 .",
    "[ composability ]    to compose two transition systems @xmath14 and @xmath53 to produce a transition system @xmath58 we first form the product @xmath59 , where labels in transitions are combined by conjunction :    the product @xmath60 is defined as :    @xmath61    @xmath62    @xmath63 and @xmath64    @xmath65    @xmath66    @xmath67    we obtain @xmath68 by discarding states in @xmath69 that are not reachable and discarding transitions in @xmath70 that are not satisfiable .",
    "we also remove any reference to events that appear in both @xmath71 and @xmath72  these are events that correspond to locations where two regions of excitable media meet , so they do not appear in the interface of @xmath54 .    for @xmath73 , @xmath74 , where @xmath75 is satisfiable , let @xmath76 be the expression obtained by setting any event variable @xmath77 that appears in @xmath75 to the value that leaves the resulting expression satisfiable . constraint [ label - form ] and definition [ composability]d",
    "ensure that there will only be one such value for each @xmath3 .",
    "[ theta - definition ]    the composition @xmath58 is defined as :    @xmath78    @xmath79    @xmath80    @xmath81    @xmath82    @xmath83 [ composition ]    we will now show that @xmath58 satisfies constraints [ label - satisfiable ] , [ label - form ] , [ state - reachable ] and [ single - output - expression ] .",
    "@xmath68 satisfies constraint [ label - satisfiable ] .",
    "take any @xmath84 .",
    "if @xmath14 satisfies constraint [ single - output - expression ] then let @xmath85 be the output subexpression corresponding to @xmath86 .",
    "otherwise , by definition [ composability]b , @xmath87 ( i.e. no outputs from @xmath53 are inputs to @xmath14 ) , and constraint [ label - satisfiable ] applied to @xmath14 implies that there is exactly one @xmath88 such that @xmath89 matches @xmath90 , and let @xmath91 be the output subexpression of @xmath89 .    similarly ,",
    "if @xmath53 satisfies constraint [ single - output - expression ] then let @xmath92 be the output subexpression corresponding to @xmath93 .",
    "otherwise , @xmath94 and there is exactly one @xmath95 such that @xmath96 matches @xmath97 , and let @xmath92 be the output subexpression of @xmath96 .    between them ,",
    "the two subexpressions @xmath85 and @xmath92 determine a single @xmath98 for a given @xmath84 .",
    "constraint [ label - satisfiable ] applied to @xmath14 and @xmath53 implies that there is exactly one @xmath88 such that @xmath89 matches @xmath99 and exactly one @xmath95 such that @xmath96 matches @xmath100 .",
    "therefore , for a given @xmath101 there must be exactly one transition with label @xmath76 that matches @xmath20 .",
    "thus constraint [ label - satisfiable ] holds for @xmath54 .",
    "@xmath68 satisfies constraint [ label - form ] .",
    "@xmath24 is of the form @xmath102 where @xmath103 and @xmath104 .",
    "@xmath105 is obtained from @xmath24 by setting all variables in @xmath106 to @xmath30 or @xmath29 , so @xmath105 is of the form @xmath107 where @xmath108 .",
    "this can be written as @xmath109 . now @xmath110 and @xmath111 , so constraint [ label - form ] is satisfied .",
    "@xmath68 satisfies constraint [ state - reachable ] .",
    "@xmath68 was obtained it from @xmath59 by discarding those states that were not reachable .",
    "@xmath68 satisfies constraint [ single - output - expression ] .",
    "since @xmath14 and @xmath53 both satisfy constraint [ label - form ] , for a given state @xmath112 , the label of every transition @xmath113 can be written as @xmath114 .",
    "if @xmath14 satisfies constraint [ single - output - expression ] then @xmath85 is determined soley by @xmath86 ( i.e. it is independent of @xmath115 ) , and so is @xmath116 . otherwise , by definition [ composability]b ,",
    "all variables in @xmath85 are in @xmath106 , and so @xmath117 , so again @xmath116 is determined by @xmath86 . by the same argument",
    ", @xmath118 is determined by @xmath93 .",
    "therefore @xmath119 , is a subexpression common to all transitions beginning from @xmath112 , so @xmath68 satisfies constraint [ single - output - expression ] .",
    "we begin by considering single - use fork and line structures .",
    "systems made from single - use structures behave like toppling domino systems .",
    "each event can occur only once , and the system can not return back to its initial state . in section [ reusable - regions ]",
    "we will deal with regions that recover after a period of time and which can be used again .",
    "the transition systems given below for fork and line structures should be treated as axiomatic .",
    "no justification is offered here for why these transition systems describe the behaviour of fork and line structures : it is assumed that fork and line structures are sufficiently simple that the correspondence between their behaviour and the transition systems given below is obvious . however , once we have specified transition systems for the fork and the line , the behaviour of any structure built from these can be deduced automatically from the behaviour of the fork and the line by using the composition rules given above .",
    "figure [ excitableregion ] shows a unit length region of a horizontal channel in an excitable medium .",
    "the region has two input events @xmath3 and @xmath0 , and two output events @xmath5 and @xmath1 .",
    "event @xmath3 will cause event @xmath5 , event @xmath0 will cause event @xmath1 , but if both input events occur at the same time , there will be no output events .",
    "figure [ excitableregiongraph ] shows a transition system that describes this behaviour .    , width=124 ]    .[excitableregiongraph],width=192 ]    figure [ excitablefork ] shows a unit length fork structure in the medium .",
    "figure [ excitableforkgraph ] shows a transition system that describes the behaviour of the fork , based on the informal description given in section [ channelled - structures ] .    ,",
    "width=153 ]    .[excitableforkgraph],width=218 ]    to compose two of the excitable regions shown in figure [ excitableregion ] , let @xmath14 be one region and let @xmath53 be a neighbouring region . because we will be composing @xmath14 and @xmath53 we would like event @xmath5 of @xmath14 to correspond to one of the input events of @xmath53 , and event @xmath0 of @xmath14 to correspond to one of the output events of @xmath53 , according to figure [ excitableregioncompose ] .",
    "we use the notation @xmath120 $ ] to mean that q is a transition system exactly like p , but with events renamed according to the mapping @xmath121 . in this case",
    "we use the mapping @xmath122    , width=201 ]    by definition [ composition ] , we can deduce @xmath54 from @xmath14 and @xmath53 to obtain the transition system shown in figure [ twocomposedregions ] .",
    "this transition system matches our intuitive understanding of the behaviour of @xmath54 : event @xmath3 will cause event @xmath4 two time units later , unless event @xmath2 occurs before the effect of @xmath3 has time to propagate to @xmath4 .",
    "similarly , @xmath2 will cause @xmath1 unless it is interrupted by @xmath3 .",
    "we can make a line of any length by composing unit length regions in this way .",
    ".[twocomposedregions],width=240 ]    next we consider the single - use one way line shown in figure [ domino - onewayline ] .",
    "figure [ onewaycomponents ] shows how this can be constructed from two forks @xmath123 and @xmath124 , a line @xmath125 of length 5 and a line @xmath126 of length 3 .",
    "@xmath125 and @xmath126 are made by composing unit length regions , with their ends relabelled to match the events of @xmath123 and @xmath124 that they correspond to .",
    "figure [ onewaytransitionsystem ] shows the result of the composition @xmath127 . this figure introduces another notational convenience .",
    "just as we use an arrow with an integer larger than 1 written above it to denote a series of transitions of duration 1 , so the split boxes in figure [ onewaytransitionsystem ] represent an interruptible sequence : a series of transitions that are followed so long as events that occur satisfy the expression inside the square brackets in the upper part of the box , but which can be interrupted on the occurrence of events that satisfy the expression in the lower part of the box .",
    "the number outside the square brackets in the upper part of the box is the length of the sequence .",
    "the arrow leading from the upper part of the box leads to the state that will be reached if the interrupting events do not occur , that leading from the lower part leads to the state that will be reached if they do . to illustrate this further , figure [ interruptequivalence ] depicts an interrupt box and the collection of states and transitions that it denotes .",
    "sequences of states that fit patterns similar to this occur frequently in the type of medium considered here  for example an excitation propagating along a line of length @xmath128 will reach the end after @xmath128 units of time , unless interrupted by an excitation coming in the other direction .",
    ", width=288 ]    .[onewaytransitionsystem],width=384 ]    it can be seen from figure [ onewaytransitionsystem ] that the occurrence of @xmath129 will lead to the occurrence of @xmath130 seven time units later ( unless interrupted by @xmath131 ) , but the occurrence of @xmath131 does not lead to any occurrence of @xmath132 .    ,",
    "width=288 ]      so far we have considered single - use regions .",
    "we can easily change a transition system describing a single - use unit length fork or line region into a transition system for a region that can be re - used after a ` recovery time ' by adding a delay transitions from the final state back to the initial state .",
    "figure [ excitableregionreusegraph ] shows a transition system for the reusable equivalent of figure [ excitableregion ] with a recovery time of 5 time units .",
    "the choice of five time units is somewhat arbitrary , but leads to behaviour that is qualitatively similar to that obtained in bz reaction media , where a propagating wave leaves behind it a short - lived inhibiting tail .",
    "the inhibiting tail prevents the propagation of further waves until it has disappeared .",
    ", width=192 ]    let us consider a reusable one - way line , with the same structure as that in figure [ onewaycomponents ] , but where each unit length region is reusable with a recovery time of 5 time units .",
    "the transition system for this reusable one - way line has 41 states .",
    "the reason for such a large number of states is that as an event propagates through the system , different regions of the structure will recover at different times , and at any time after the inputs to the one - way line have recovered , further input events can occur .",
    "we can manage this extra complexity to some extent by placing constraints on the way in which a structure may be used .",
    "the context in which we are using a structure may provide us with knowledge about the number of times each input event can occur , or the rate at which they may occur .",
    "for example , we can specify that each input event must occur exactly once , in any order , with an arbitrarily long period of time separating the two events .",
    "this will not necessarily result in the same collection of behaviours as the single - use one way line , because we still allow the possibility that regions within the structure can be re - used .    in order to specify this",
    "we can construct a second transition system @xmath133 that restricts the pattern of input events to those that we are interested in , and then form @xmath134 to produce a transition system limited to the behaviour determined by @xmath133 .",
    "let @xmath135 $ ] be the transition system for a reusable version of the one way line from figure [ onewaycomponents ] , with @xmath129 renamed to @xmath136 , and @xmath131 renamed to @xmath137 .",
    "figure [ restriction - system ] shows a transition system @xmath133 with input events @xmath138 and output events @xmath139 in which the first occurrence of @xmath129 immediately leads to @xmath136 , and the first occurrence of @xmath131 immediately leads to @xmath137 .",
    "each of the output events @xmath136 and @xmath137 occurs exactly once in any path from state 0 to state 2 in figure [ restriction - system ] .",
    "@xmath133 does not satisfy constraint [ single - output - expression ] : outputs @xmath136 and @xmath137 of @xmath133 mirror the corresponding inputs immediately without any delay ( for the first occurrence of each input ) .",
    "however , because @xmath133 has no inputs connected to outputs of the system it is being composed with , and because all outputs of @xmath133 feed into the system it is being composed with , the composition @xmath140 ) \\parallel r$ ] does satisfy constraint [ single - output - expression ] . this composition is shown in figure [ onewayreuse ] .",
    "the reason why the rules for composability given in definition [ composability ] are formulated to allow one of the transition systems being composed to flout constraint [ single - output - expression ] is to permit us to do what we are doing here : they permit us to compose a transition system with a restriction transition system in which certain output events mirror certain input events .     and",
    "@xmath137 both occur exactly once.[restriction - system],width=288 ]     and @xmath131 occur exactly once.[onewayreuse],width=528 ]    figure [ onewayreuse ] has several things in common with the single - use one - way line described by figure [ onewaytransitionsystem ]  in each case @xmath129 will cause event @xmath130 if not interrupted by @xmath131 , but in figure [ onewaytransitionsystem ] the occurrence of event @xmath131 before event @xmath130 is due to occur will always prevent @xmath130 from occurring . in figure [ onewayreuse ] however , there is a window of time during which the occurrence of @xmath131 after @xmath129 will delay the occurrence of @xmath130 rather than prevent it .",
    "the transitions for this behaviour are shown as dashed arrows in figure [ onewayreuse ] .",
    "this is a behaviour of the reusable one - way line that the single - use version can not exhibit .",
    "it arises from the possibility that regions within the structure can be excited more than once , even though the input events may not occur more than once .",
    "figure [ oneway_delaybehaviour ] shows successive snapshots of a simulation of a sub - excitable bz - reaction medium exhibiting this behaviour .",
    ".[oneway_delaybehaviour],width=480 ]      the final example considered here is a modulo-2 counter , shown in figure [ loopexample ] .",
    "this example is made from reusable excitable regions .",
    "it contains two one - way lines labelled @xmath141 and @xmath142 , seven forks labelled @xmath123 to @xmath143 and seven lines labelled @xmath125 to @xmath144 .",
    "the length of each line is written in brackets in figure [ loopexample ] .",
    "this example contains a loop structure made from @xmath145 and @xmath124 around which an excitation can propagate endlessly .",
    "the event @xmath146 will lead to an excitation in this loop as follows : an excitation from @xmath146 will split at fork @xmath123 , one excitation will propagate along @xmath125 and into the loop travelling clockwise , the other will propagate through @xmath141 and into the loop travelling anti - clockwise",
    ". the latter will reach @xmath142 and stop well before the former reaches @xmath142 in the opposite direction , so the former will propagate endlessly around the loop .    ,",
    "width=268 ]    this is confirmed by the transition system in figure [ loopsingle ] , which is produced from the parallel composition of all of the components , after specifying that no excitation will ever be input into the forks from which events @xmath147 and @xmath148 emerge , and that only one excitation will be fed into @xmath146 .",
    "the fork @xmath143 provides an output @xmath148 which can be used to ` see ' the excitation every time it propagates around the loop .     when only one input excitation is applied.[loopsingle],width=288 ]",
    "every time around the loop , the excitation will split at @xmath149 and one excitation will travel along @xmath150 .",
    "it will not reach @xmath147 because it will be annihilated before it reaches @xmath151 by an excitation splitting from the loop at @xmath152 .",
    "once there is an excitation in the loop , it will periodically progress along @xmath153 into @xmath141 . it will be stopped by @xmath141 .",
    "if a second input is applied to @xmath146 at the right moment , it will coincide with the first excitation in the loop , so will not cause a second clockwise - travelling excitation .",
    "it will also meet the first excitation in @xmath141 .",
    "its progress through @xmath141 will effectively be delayed , according to the behaviour of @xmath141 given by the dashed line in figure [ onewayreuse ] , so it will arrive at @xmath142 late enough to cause the first excitation to be delayed in its progress around the loop , also according to the behaviour in figure [ onewayreuse ] .",
    "this will allow the excitation travelling along @xmath150 to reach output @xmath147 , and also to reach the loop and annihilate the excitation in the loop .    to summarise :",
    "a single excitation at @xmath146 will cause an excitation to propagate around the loop .",
    "a second excitation at @xmath146 ( at the right moment ) will lead to an output at @xmath147 , and will return the system back to its original state . therefore an output will emerge from @xmath147 for every other event at @xmath146 ( subject to timing constraints ) .",
    "this is the behaviour of a modulo-2 counter .",
    "inspection of the 191-state transition system ( not shown here ) for the case when @xmath146 occurs twice reveals that in order for the system to exhibit this behaviour , the interval between the first and second occurrences of @xmath146 must be 35,36 or 37 time units . by connecting a transition system that produces an output",
    "every 36 time units to input @xmath146 , the transition system shown in figure [ loopdouble ] is obtained .",
    "this shows that , as expected , there is one occurrence of @xmath147 for every two occurrences of @xmath148 , and that the system reverts to a previous state after the occurrence of @xmath147 .     when an input excitation is applied every 36 time units.[loopdouble],width=480 ]",
    "an implementation of a set of routines for manipulating transition systems , written using the python 3 programming language , is available from :    http://www.srm.org.uk/downloads/transition.py    this source file contains functions for creating all of the examples that are used in this paper .",
    "the python programming language was used because it has built in data types for representing sets , tuples and maps , because it has a concise syntax , and because it is freely available and widely supported .",
    "the source file contains comments which will help with understanding the implementation .",
    "this paper has demonstrated that it is possible to use transition systems to describe the behaviour of unit length fork and line structures in excitable media , and that it is possible to deduce the behaviour of larger structures from the behaviour of their components .",
    "although this paper has exclusively used fork and line structures for making systems , it should be possible to use the method given here for automatically deducing the behaviour of other excitable media structures made from simple components , where the behaviour of the simple components can be described by transition systems .",
    "i have chosen to model behaviour that involves the propagation and interaction of excitations in channelled structures , but there are other types of behaviour that excitable media can exhibit , and which can be used for information processing , that the methods used in this paper can not describe .",
    "the use of a planar bz - reaction medium for image processing @xcite exploits a large rectangular section of the medium and so can not be described in terms of excitations propagating along channels .",
    "steinbock , kettunen and showalter @xcite make use of the interaction of several waves over an extended area to implement logic gates . a transition system could be used to describe one of these logic gates and its timing properties , but it could not be used to describe the lower - level extended - area interactions of excitations and deduce the behaviour of a logic gate from these .",
    "much research has been carried out on the use of process algebra to describe and reason about concurrent systems .",
    "there are two main reasons why i chose to work directly with transition systems and use a graph - based representation for a set of behaviours , rather than make use of process algebra and adopt a linguistic representation for a set of behaviours .",
    "firstly , process algebraic notation can often obscure the simplicity that is readily apparent in a graphical representation : even for small systems , not all sets of behaviours can be represented in an easy - to - understand way in any of the current linguistic representations employed in process algebra .",
    "secondly , the range of meanings and structures that can be given to labels in transition systems provides enough flexibility to permit the physical systems considered here to be described , but the structure of transition systems is constrained enough to reduce the danger of losing the ability to compose systems together .    however , we have only considered relatively simple systems in this paper and i do not claim to have fully explored all of the possible ways of using concurrency theory to model structured excitable media . for more complex systems a well - formulated algebraic approach that permits equational reasoning and",
    "recursive definitions may be useful .",
    "the sequence and interrupt box notations in figures [ graphexample1 ] and [ onewaytransitionsystem ] respectively were introduced as syntactic conveniences for representing collections of states and transitions . instead of regarding these simply as syntactic entities",
    "they could alternatively be treated as semantic entities , and rules for manipulating them during composition could perhaps be formulated , without having to expand them into collections of transitions and states .",
    "several simplifying assumptions and approximations have been made .",
    "i have assumed that all regions of the medium that we are modelling propagate excitations at the same rate .",
    "this assumption is valid for simulated planar bz - reaction media .",
    "it is also reasonable in experimental planar bz - reaction media , where experimental conditions can easily be achieved in which the propagation of a wave of excitation through two identically structured regions takes a very similar length of time .",
    "theoretical and experimental investigations of domino lines indicate that their behaviour is also predictable and repeatable @xcite .",
    "this assumption is less valid for plasmodium of physarum polycephalum , where experiments to measure the speed of propagation of plasmodia in the spreading / contracting mode @xcite show that the speed of propagation can vary over the course of a single experiment , and can vary even more from one experimental run to another .",
    "it is not yet known how easily these variations can be reduced by controlling the experimental conditions .",
    "i have used discrete time rather than continuous time .",
    "the effect of this is to restrict lengths in structures to integer multiples of the length that an excitation covers in a single time unit , and to restrict the times at which input events can occur to integer multiples of a single time unit .",
    "since we are free to choose which units of physical time and length to use , this does not seem to be a severe restriction .",
    "it is unlikely that it would be possible to make a deterministic physical structure so critically dependent on timing for its operation that it can not be modelled using integral channel lengths for some choice of length unit and time unit .",
    "modelling a physical system using a transition system involves identifying the states of the physical system with states of the transition system , and identifying changes of state in the physical system with transitions in the transition system .",
    "trajectories of a system correspond to sequences of states and transitions . for synchronous systems where each trajectory has a common clock ,",
    "an alternative approach can be conceived of in which trajectories rather than states are treated as primary , and transitions in a system are from one trajectory to another rather than from one state to another .",
    "if such a scheme can be formalised , and if parallel composition rules for such a trajectory - oriented scheme can be formulated , then this might be a more natural way of modelling the type of system considered in this paper .",
    "the work was partially supported by leverhulme trust grant f/00577/1 .",
    "thanks to andrew adamatzky for useful comments on an earlier draft of this paper .",
    "99 j. spars , s. furber ( eds . ) , principles of asynchronous circuit design - a systems perspective , kluwer academic publishers ( 2001 ) s. stepney , the neglected pillar of material computation , physica d 237(9 ) ( 2008 ) 11571164 t. nakagaki , r. kobayashi , y. nishiura , t. ueda , obtaining multiple separate food sources : behavioural intelligence in the physarum plasmodium , proc .",
    "271(1554 ) ( 2004 ) 2305-2310 a. tero , k. ryo , n. toshiyuki , a mathematical model for adaptive transport network in path finding by true slime mold , j. theor .",
    ", 244(4 ) ( 2007 ) 553564 j. jones , the emergence and dynamical evolution of complex transport networks from simple low - level behaviours , int . j. unconv . computing 6(2 ) ( 2010 ) 125144 s. tsuda , k. zauner , y. gunji , robot control with biological cells , biosystems 87(2 - 3 ) ( 2006 ) 215223 s. l. harding , j. f. miller , evolution in materio : a real - time robot controller in liquid crystal , in : proc . nasa / dod conf . on evolvable hardware , washington dc , usa , pp 229238 ieee press ( 2005 ) w. m. stevens , logic circuits in a system of repelling particles , int . j. unconv . computing 4(1 ) ( 2008 ) 6177 r. toth , c. stone , a. adamatzky , b. de lacy costello , l. bull , experimental validation of binary collisions between wave fragments in the photosensitive belousov - zhabotinsky reaction , chaos , solitons and fractals 41 ( 2009 ) 16051615 i. motoike , k. yoshikawa , information operations with an excitable field , phys rev e 59 ( 1999 ) 5354-5360 j. grecki , information processing with structured excitable medium , nat . computing 8 ( 2009 ) 473492 a. adamatzky , physarum machines : computers from slime mould , world scientific series on nonlinear science , series a. 74 .",
    "world scientific .",
    "isbn 978 - 981 - 4327 - 58 - 9 .",
    "( 2010 ) a. adamatzky , physarum machines : encapsulating reaction - diffusion to compute spanning tree , naturwissenschaften 94 ( 2007 ) 975980 a. adamatzky , b. de lacy costello , t. shirakawa , universal computation with limited resources : belousov - zhabotinsky and physarum computers , int .",
    "j. bifurcation and chaos 18(8 ) ( 2008 ) 23732389 d. harel , a. pnueli , on the development of reactive systems , in : k. r. apt ( ed . ) logics and models of concurrent systems .",
    "nato asi series vol .",
    "f-13 , springer - verlag , new york ( 1985 ) 477498 x. wang , m. kwiatkowska , on process - algebraic verification of asynchronous circuits , fundam .",
    "inform . 80(1 - 3 ) ( 2007 ) 283310 s. okeefe , implementation of logical operations on a domino substrate , int .",
    "j. unconv . computing 5(2 ) ( 2009 ) 115128 w. m. stevens , computing with planar toppling domino arrangements , in : c. s. calude , j. kari , i. petre , g. rozenberg ( eds . ) unconventional computation , lecture notes in computer science 6714 , springer berlin / heidelberg ( 2011 ) 224233 a. adamatzky ( ed ) , collision based computing , springer , london ( 2002 ) v. gspr , g. bazsa , m. t. beck , the influence of visible light on the belousov zhabotinskii oscillating reactions applying different catalysts , z. phys .",
    "( leipzig ) 264(1 ) ( 1983 ) 4348 b. de lacy costello , a. adamatzky , i. jahan , l. zhang , towards constructing one - bit binary adder in excitable chemical medium , chem .",
    "381(1 - 3 ) ( 2011 ) 8899 r. halvorsrud , g. wagner , growth patterns of the slime mold _ physarum _ on a nonuniform substrate , phys .",
    "e 57(1 ) ( 1998 ) 941948 g. winskel , m. nielsen , models for concurrency , in : handbook of logic in computer science , vol .",
    "4 , oxford university press , oxford ( 1995 ) 1-20 r. milner , communication and concurrency , prentice hall , london ( 1989 ) l. kuhnert , k. i. agladze , v. i. krinsky , image processing using light - sensitive chemical waves , nature 337 ( 6204 ) ( 1989 ) 244247 o. steinbock , p. kettunen , k. showalter , chemical wave logic gates , j. phys .",
    "100 ( 1996 ) 1897018975 s. wagon , a. pontarelli , w. briggs , s. becker , the dynamics of falling dominoes , the umap journal 26(1 ) ( 2005 ) 3547"
  ],
  "abstract_text": [
    "<S> i show how transition systems can be applied to the naturally concurrent behaviour of excitable media . </S>",
    "<S> i consider structured excitable media , in which excitations are constrained to propagate only in defined narrow channels , and can not propagate elsewhere . </S>",
    "<S> i define a type of transition system that can be used to describe the complete set of behaviours exhibited by simple structures . </S>",
    "<S> the composition rules that result from this definition can be used to automatically deduce the behaviour of more complex structures composed from simpler structures . </S>",
    "<S> several examples illustrate the method , and a software implementation is provided .    </S>",
    "<S> systems , concurrency , excitable media , toppling dominoes , physarum polycephalum , belousov - zhabotinsky reaction </S>"
  ]
}
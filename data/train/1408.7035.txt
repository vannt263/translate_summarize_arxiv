{
  "article_text": [
    "the vision of automated driving systems holds a promise to change the transportation reality .",
    "current deployments that focus on autonomous solutions pose a variety of sensors and actuators for safe driving on the road , e.g. , volvo _ drive me _ project in gothenburg and _ google car _ in california .",
    "these autonomous solutions are based on the vehicles ability to observe obstacles in their line - of - sight .",
    "vehicle - to - vehicle communication has the potential to improve the system confidence on the sensory information and support advanced vehicular coordination .",
    "e.g. , when changing lanes and crossing intersections , as well as improving the road capacity by reducing the inter - vehicle distances .",
    "however , communication failures can result in hazardous situations due to coordination based on inconsistent information shared by the participating vehicles .",
    "consider an architecture , which figure  [ fig : architecture ] ( left ) depicts , for implementing cooperative driving systems .",
    "the communication protocol implements the mechanisms for exchanging information with other vehicles .",
    "the control algorithm plans the vehicle motion according to the sensory information from on - board and remote sources .",
    "note that the local control algorithms depend on the ( in general vectorial ) variable  @xmath0 ( service level ) .",
    "thus , @xmath0 is a common piece of information that all vehicles share in order to establish correct cooperation .",
    "for instance , in vehicular platooning ,  @xmath0 might include the maximum acceleration levels imposed to all vehicles by the limited braking capabilities of one of them  @xcite .",
    "clearly , message loss when a new value of  @xmath0 is established may lead to an inconsistent value in one or more vehicles , and thus , result in an unsafe operation of the entire cooperative system .",
    "it is then necessary to have an additional layer , shown in figure  [ fig : architecture ] right , between the communication layer and the control algorithm .",
    "we propose to base this additional layer on a timed protocol for cooperation with disagreement correction that resolves disagreements on variable  @xmath0 among the system vehicles .    specifically , we address the following research question : how can cooperative systems be used to attain the highest performance without compromising safety in the presence of communication failures ?",
    "we consider applications in which the individual vehicles estimate their ability to cooperate according to the sensory information quality and communicate their maximum supported cooperative level  @xcite .",
    "the vehicular system then decides on its cooperative service level according only to the received information .",
    "however , communication failures can cause the arrival of the needed information not to occur by the deadline .",
    "this can bring the vehicles to operate at distinct levels .",
    "it is a critical issue to guarantee that the uncertainty period along vehicles occurs only in short time periods .",
    "therefore , we address problem  [ pr:1 ] .",
    "[ pr:1 ] is there an upper - bound on the longest period in which the cooperative system may have inconsistent operation service level ?",
    "we note that we can not solve problem  [ pr:1 ] using distributed ( uniform ) consensus algorithms . in the uniform consensus problem ,",
    "every component ( vehicle ) proposes a value and the objective is to select exactly on of these proposed values .",
    "it is well - known that this problem is not deterministically solvable in unreliable synchronous networks and any @xmath1-communication rounds algorithm has probability of disagreement of at least @xmath2  @xcite ( theorem 5.1 and theorem 5.5 ) .",
    "therefore , when the communication failures are too frequent and severe , the uncertainty period can not be bounded since the components ( vehicles ) can disagree for an unbounded number of protocol executions .",
    "this work presents a communication protocol that guarantees the shortest possible uncertainty period , i.e. , a constant time , in the presence of communication failures .",
    "our solution is based on a communication protocol that collects values from all system components . once this",
    "proposed set @xmath0 is delivered to all the components , the protocol employs a deterministic function to decide on a single value from @xmath0 that all system components are to use .",
    "the protocol identifies the periods in which there is a clear risk for disagreement due to temporary communication failures , i.e. , a period in which @xmath0 was not delivered by the due time to the entire system .",
    "once such risk is identified , the protocol triggers a correction strategy against the risk of having disagreement for more than a constant number of rounds .",
    "namely , after the occurrence of communication failures that jeopardize safety , all system components will rapidly start a period to reestablish their confidence by returning to the default value .",
    "once the network returns to be stable again , and no communication failures occur , within a constant time , the protocol behaves as if no communication failures has ever occurred .    the correctness proof and its validation show that the proposed solution provides a trade - off between the uncertainty period ( in the order of milliseconds ) and the occurrence of communication failures . in other words , for shorter round length ( and consequently so it the uncertainty period ) , the vehicles experience more frequently a low service level .",
    "however , for a longer round length , the vehicles experience less frequently a low service level . however , the longer the round length is , the longer the time that vehicles spend on disagreements and therefore , the risk of having accidents increases .",
    "this paper also discusses a safety - critical application that facilitates cooperation using the proposed protocol .",
    "we assume a baseline adaptive cruise control ( acc ) that does not require communication .",
    "then , we extend it to a cooperative one that attains higher vehicle performance , but relies on higher confidence level about the position and velocity of nearby vehicles .",
    "we explain how the protocol can provide a timed and distributed mechanism for facilitating decisions about when the vehicles should plan their trajectories according to the baseline application and when according to the extended one that fully utilizes cooperative functionality .",
    "the distributed ( uniform ) consensus problem considers the selection of a single value from a set of values proposed by members of , say , a vehicular system . the solution is required to terminate within a bounded time by which all system components have decided on a common value .",
    "the use of the exact ( uniform ) vs. approximate consensus approaches is explain here  @xcite , where they recommend the use of exact ( uniform ) consensus due to the simplicity of the system design from the application programmer perspective .",
    "the exact consensus approach , in contrast to the approximate one , rests on a foundation of clearly defined requirements and is amenable to formal methods and analytical validation .",
    "a number of impossibility results consider distributed consensus in general ( see  @xcite ) . in  @xcite",
    ", the author shows that the presence of communication failures makes impossible to deterministically reach consensus ( theorem 5.1 ) and any @xmath1-round algorithm has probability of disagreement of at least @xmath2 ( theorem 5.5 ) .",
    "this implies that there are no guarantees that vehicles can reach consensus on bounded time since vehicle - to - vehicle communications are prone to failures .",
    "moreover , when the communication failures are too frequent and severe , vehicles can fail to reach consensus for an unbounded number of consecutive times .",
    "we therefore abandon consensus - based decision algorithms , and prefer to focus on solutions that offer early fall - back strategies against the risk of having disagreement for more than a constant number of rounds .",
    "the existing literature on distributed ( uniform ) consensus algorithms with real - time requirements does consider processor failures .",
    "however , it often assumes timed and reliable communication .",
    "for example , in  @xcite the authors give an algorithm that reaches agreement in the worst case in time that is sublinear in the number of processors and maximum message delay . in  @xcite ,",
    "the authors provide a time optimal consensus algorithm that reaches consensus in time @xmath3 in the worst case where @xmath4 is the maximum message delay and @xmath5 the maximum number of processors that can crash . in this paper , we do not assume reliable communication .",
    "thus , message drops can occur independently among processors at any time .",
    "group communication systems  @xcite treat a group of participants as a single communication endpoint .",
    "the group membership service  @xcite monitors the set of recently live and connected participating system components whereas the multicast service delivers messages to that group under some delivery guarantees , such as delivery acknowledgment . in this paper",
    "we assume the existence of a membership service and a best - effort ( single round solution ) dissemination ( multicast ) protocol that has no delivery acknowledgment .",
    "there exists literature on adaptive cruise control  @xcite as well as vehicle platooning  @xcite . in  @xcite ,",
    "the author considers vehicle platooning and lane merging , and bases his construction on distributed high level communication primitives .",
    "we consider a different failure model for which there is no deterministic implementation for these communication primitives .",
    "the studied problem is motivated by the karyon project  @xcite .",
    "the karyon project aims to provide a predictable and safe coordination of intelligent vehicles that interact in inherently uncertain environments .",
    "it proposes the use of a safety kernel that enforces the service level that the vehicle can safely operate .",
    "a cooperative service level can ensure that vehicles follow the same performance level . in this paper , we study a communication protocol that implements the karyon s cooperative service level evaluator . in  @xcite",
    ", we present the architecture that considers the interactions between the safety kernel , a local dynamic map and the cooperative service level evaluator .",
    "unlike the earlier abstract presentation of the cooperative service level evaluator , this paper provides in detail , the design and analysis of the communication protocol .",
    "we study an elegant solution for cooperative vehicular systems that have to deal with communication uncertainties .",
    "we base the solution on a communication protocol that , we believe , can be well understood by designers of safety - critical , automated and cyber - physical systems .",
    "we explain how the designers of fault - tolerant cooperative applications can use this solution to deal with communication failures when uniformly deciding on a shared value , such as @xmath0 .",
    "we consider cooperative applications that must periodically decide on a shared values @xmath0 .",
    "since the consensus problem can not be deterministically solved in the presence of communication failures , the system is doomed to disagreed on the value of @xmath0 ( in the presence communication failures that are frequent and severe ) .",
    "we bound the period in which the vehicles can be unaware of such disagreements with respect to @xmath0 . we prove and validate that this bound is no more than one communication round ( in a vehicular system that deploys a single - hop network of wireless ad hoc communication ) .",
    "we also study the percentage of time during which the system avoids disagreement on @xmath0 using ns-3 simulations .",
    "we exemplify how the proposed solution helps to guarantee safety .",
    "we consider vehicles that operate in a cooperative operational mode as long as they are aware that all the nearby vehicles are also in the same mode ( with at most one communication round period of disagreement ) .",
    "however , if at least one vehicle is suspecting that another vehicle is not , all vehicles switch , within one communication round period , to a baseline operational mode so that the safety standards are met .",
    "we list our assumptions and define the problem statement ( section  [ s : sys ] ) , before providing the timed protocol for cooperation with disagreement correction ( section  [ s : dcp ] ) and its correctness proof ( section  [ s : c ] ) . as protocol validation study , we consider computer simulation ( section  [ s : eva ] ) . we discuss cooperative vehicular application ( section  [ s : cva ] ) and an example before the conclusions ( section  [ s : con ] )",
    "[ s : sys ] we consider a message passing system that includes a set @xmath6 of @xmath7 communicating prone - resilient vehicles .",
    "we refer to the vehicles with i d @xmath8 as @xmath9 .",
    "we assume that all vehicles have access to a common global clock with a sub - microsecond offsets by calling the function @xmath10 .",
    "this could be implemented , for example , using global positioning systems ( gps )  @xcite .",
    "hence , we assume that the maximum time difference along vehicles is at most @xmath11 .",
    "we consider that the system runs on top of a timed and fault - tolerant , yet unreliable , dissemination protocol , such as  @xcite , that uses @xmath12 to broadcast message @xmath13 from vehicle @xmath14 to all vehicles in @xmath6 .",
    "we assume that end - to - end message delay is at most @xmath15 time .",
    "thus , messages are either delivered within @xmath15 time or omitted . the constant @xmath15 depends on distinct factors such as the mac protocol that is used , vehicle velocity , interference , etc .",
    "for example , this bound can be set to @xmath16ms or less using , for example , dedicated short - range communications ( dsrc )  @xcite .",
    "vehicle @xmath17 receives @xmath13 from @xmath8 by raising the event @xmath18 .",
    "we consider a fully connected network topology .",
    "however , the network can arbitrarily decide to omit messages , but not to delay them for more than @xmath15 time .",
    "these assumptions allow the protocol to run in a synchronous round based fashion .",
    "we consider rounds of time @xmath19 where @xmath20 .",
    "every vehicle @xmath9 executes a program that is a sequence of _ ( atomic ) steps_. an input event can be either the receipt of a message or a periodic timer going off triggering @xmath9 to start a new iteration of the do forever loop .",
    "we define the _ uncertainty period _ as the period that vehicles can disagree .",
    "we say that there was a _ communication failure _ at round @xmath1 if there exists a vehicle that has not received the messages from all vehicles during round @xmath1 .",
    "the system s task is to satisfy requirements  [ prp : dis1 ] to  [ prp : dis3 ] , which consider definition  [ def : scp ] .",
    "[ def : scp ] a stable communication period @xmath21 $ ] is the period of @xmath22 rounds in which the vehicles do not experience communication failures , i.e. , all vehicle receive all messages during these periods .",
    "otherwise , it is called an unstable communication period , denoted by @xmath23 $ ] .",
    "we say that a stable communication period @xmath21 $ ] is maximal when rounds @xmath24 and @xmath25 are unstable communication periods .",
    "analogously , we define a maximal unstable communication period @xmath23 $ ] , see figure  [ fig : be ] .",
    "thus , in any run , the communication may go through maximal stable and unstable periods ( and then perhaps back to stable ) for an unbounded number of times .",
    "requirements  [ prp : dis1 ] to  [ prp : dis3 ] deal with what the system output at every vehicle should be when it goes between the different periods .    $ ] followed by a maximal stable communication period @xmath26 $ ] . ]",
    "[ prp : dis1 ] during a stable period no two vehicles use different values .",
    "moreover , within a bounded prefix of every stable period , there is a suffix during which no uses the default return value .",
    "[ prp : dis2 ] every unstable period has a suffix named the _ disagreement correction period _ during which no two vehicles use different values . during this period",
    "all vehicles use the default return value .",
    "[ prp : dis3 ] the suffix of a stable period during which some vehicles may use different values is called the _",
    "uncertainty period_. we require it to be bounded .",
    "we show that any system run of the proposed solution fulfills requirements  [ prp : dis1 ] to  [ prp : dis3 ] .",
    "specifically , we demonstrate theorem  [ th : main ] ( section  [ s : dcp ] ) .",
    "[ th : main ] the proposed protocol ( algorithm  [ alg : tddp ] ) fulfills requirements  [ prp : dis1 ] ,  [ prp : dis2 ]  and  [ prp : dis3 ] , where the uncertainty period is bounded by one round .",
    "moreover , if vehicles do no experience communication failures , the disagreement correction holds for at most one round .",
    "[ s : dcp ] we present the communication protocol in which the participants exchange messages until a deadline .",
    "these messages can include information , for example , about nearby vehicles as well as the confidences that each vehicle has about its information .",
    "once everybody receives the needed information from each other , the participants can locally and deterministically decide on their actions . in case of a communication failure , each participant that experiences a failure imposes the default return value for one round .",
    "each vehicle @xmath14 executes the protocol ( that algorithm  [ alg : tddp ] presents ) .",
    "it uses a do forever loop for implementing a round base solution .",
    "it accesses the global clock ( line  [ ln : clock ] ) and checks whether it is time for the vehicle to send information about the current round ( line  [ ln : roundclock1 ] ) .",
    "a vehicle starts sending messages at @xmath11 time from the beginning of each round and @xmath27 before of the end of each round using the @xmath28 interface ( line  [ ln : gossipcall ] ) .",
    "recall that @xmath11 is the maximum time difference over the vehicles and @xmath15 is the longest time that a message can live in the network .",
    "next , it tests whether the current round number @xmath29 points to the current round in time ( line  [ ln : roundclock ] ) .",
    "a new round starts when @xmath30 is greater than @xmath29 .    at the beginning of every round ,",
    "the protocol first keeps a copy of the collected data and the received information , and updates the round counter , as well as nullifying @xmath31 and @xmath32 ( line  [ ln : roundnull ] ) .",
    "then , it tests whether it has received all the needed information for the previous round ( line  [ ln : arrivaltest ] ) .",
    "suppose that a communication failure occurred in the previous round , the protocol sets the data to be sent to the default return value @xmath33 ( line  [ ln : assingment1 ] ) .",
    "it also writes to @xmath34 interface the received information as well as the default return value @xmath33 ( line  [ ln : writeoutput1 ] ) .",
    "however , in the case that all messages of the previous round have arrived on time , the system reads the application information using @xmath35 interface .",
    "it also writes to @xmath34 interface the received information as well as the value that the deterministic function @xmath36 returns ( line  [ ln : imposeend ] ) .    the proposed protocol interfaces with the gossip ( dissemination ) protocol by sending messages ( @xmath28 ) and receiving them ( @xmath37 ) periodically .",
    "the protocol locally stores the arriving information from @xmath38 on each round in @xmath39 $ ] and waits for the round end before it finishes accumulating all arriving information . more specifically , for each message that is reported with the same round , the protocol stores the data from @xmath40 and sets the acknowledgment variable to true , if the message comes directly from @xmath17 , ( @xmath41 ) , or transitively from @xmath17 without considering its own values ( @xmath42 $ ] and @xmath43 ) .",
    "the correctness proof shows that , in the presence of a single communication failure , there could be at most one disagree round in which different system components use different values .",
    "moreover , the influence of that single failure will last for at most two rounds , which is the shortest period possible .",
    "note that algorithm  [ alg : tddp ] handles well any sequence of communication failures .",
    "[ bt ]    @xmath33 : denotes a void ( initialized ) entry , as well as the default return value .",
    "@xmath11 : the maximum time difference among vehicle clocks .",
    "@xmath44 : the maximum time that a message time can live in the network .",
    "@xmath45 : the length of a round .",
    "+ @xmath46 : current communication round .",
    "@xmath47 : current clock .",
    "@xmath48 = \\{\\ldots \\}$ ] : application data where @xmath39 $ ] is the data received at round @xmath29 from member @xmath40 .",
    "@xmath49 = \\{false , \\ldots \\}$ ] : acknowledge for data reception where @xmath50 $ ] is true if @xmath9 has received ( directly or indirectly ) the message from @xmath40 of the current round .",
    "+ @xmath28 : disseminate information to the system members .",
    "@xmath37 : dispatch arriving messages .",
    "@xmath35 : return a datum to be sent .",
    "@xmath34 : write decided output . @xmath51 deterministically determines an item from @xmath0 .",
    "we assume that whenever @xmath52 , then @xmath53 .",
    "[ al : fun ]   +   + @xmath54 [ ln : gossipreceive ] @xmath55,ack[k ] ) \\gets ( data_j[k ] , true)$ ] @xmath56 [ ln : clock ] [ ln : roundclock1 ]    @xmath57[ln : gossipcall ] [ ln : roundclock ] @xmath58 ) \\gets ( data , ack , myclock \\div roundlength , \\{\\bot , \\ldots \\ } , k = i : \\forall p_k \\in members)$][ln : roundnull ] [ ln : arrivaltest ] @xmath59 \\gets \\bot$ ] [ ln : assingment1 ] @xmath60 [ ln : writeoutput1 ] @xmath59   \\gets readstate()$ ] [ ln : assingment3 ] @xmath61 [ ln : imposeend ]",
    "[ s : c ] we prove that algorithm  [ alg : tddp ] follows requirements  [ prp : dis1 ] to  [ prp : dis3 ] .",
    "[ th : boundeduncertainty ] let @xmath62 $ ] be any maximal unstable communication period followed by a maximal stable communication period @xmath63 $ ] .",
    "the following three statements hold .",
    "\\(1 ) * bounded uncertainty period*. vehicles may have disagreements at round @xmath64 .",
    "\\(2 ) * disagreement correction*. all vehicles use the default return value during @xmath65 $ ] .",
    "\\(3 ) * certainty period*. vehicles use the same value during @xmath66 $ ] .",
    "let @xmath67 be the set of messages that vehicle @xmath9 receives from all the vehicles @xmath68 , either directly or indirectly , and that @xmath17 has sent during round @xmath1 .",
    "observe that each vehicle decides the value to be used on round @xmath69 based on the received information at round @xmath1 ( lines  [ ln : writeoutput1 ]  and  [ ln : imposeend ] ) .",
    "we claim that @xmath70 for @xmath71 and @xmath72 $ ] .",
    "note that this implies that no two vehicles use different values when processing round @xmath1 , because vehicle @xmath9 determines its output value according to the deterministic function @xmath73 .",
    "@xmath74 for @xmath71 where @xmath75 $ ] .",
    "first we show that each vehicle maintains consistent its own information over each round .",
    "observe that lines between  [ ln : roundnull ]  and  [ ln : imposeend ] are executed once during round @xmath29 since @xmath29 is set to @xmath76 and @xmath10 always returns larger values .",
    "therefore , each vehicle @xmath9 loads its message on the register @xmath59 $ ] once during @xmath29 .",
    "thus , assume that vehicle @xmath77 overwrites its @xmath59 $ ] when receiving a message from vehicle @xmath78 .",
    "since the condition ensures that it loads @xmath39 $ ] only if either @xmath79 or @xmath80 , we conclude that @xmath81 .",
    "thus , @xmath59 $ ] is consistent on @xmath9 during round @xmath29 .",
    "we say that a message @xmath82 is sent transitively , if @xmath9 receives @xmath82 from @xmath17 where @xmath83 .",
    "we show that the message transitivity maintains the consistency of the messages during a stable communication period .",
    "we argue by contradiction .",
    "assume that there are two messages , @xmath84 and @xmath85 such that @xmath86 .",
    "consider the first time that @xmath87 were sent .",
    "observe that @xmath9 sent the two messages . a contradiction",
    "since @xmath9 maintains consistent its own information over each round .",
    "the claim follows by showing that at the end of the current round @xmath29 , it holds that @xmath88 . indeed ,",
    "since messages of each round are sent @xmath89 time units before the end of @xmath29 and after @xmath11 time units after the beginning of @xmath29 , vehicles receive messages only from the current round .",
    "recall that @xmath11 is the maximum difference time among vehicle clocks and @xmath44 is the maximum time that a message can live in the network .",
    "\\(1 ) * bounded uncertainty period*. consider round @xmath90 .",
    "since @xmath62 $ ] is an unstable communication period , there exists a vehicle @xmath9 that did not receive a message from all vehicles , i.e. , @xmath33 is in @xmath32 .",
    "observe that vehicle @xmath17 is unaware that @xmath9 had experienced a communication failure during round @xmath90 .",
    "let us assume that @xmath17 did not experience any communication failure .",
    "therefore , @xmath17 uses the deterministic value that @xmath36 returns on round @xmath64 .",
    "however , @xmath9 imposes the default return value ( line  [ ln : writeoutput1 ] ) since it had experienced a communication failure .",
    "thus , during round @xmath64 , @xmath9 sends the default return value by setting @xmath59 $ ] to @xmath91 and uses it ( lines  [ ln : assingment1 ]  and  [ ln : writeoutput1 ] , respectively ) .",
    "therefore , as long as no vehicle misses @xmath9 s message , the first default return value of @xmath9 arrives along round @xmath92 .",
    "thus , during round @xmath64 , @xmath17 uses a distinct value than @xmath9 .",
    "\\(2 ) * disagreement correction*. we show that all vehicles use the default return value in round @xmath93 $ ] .",
    "it is sufficient to show that there exists at least one default return value in @xmath94 in each round @xmath95 $ ] .",
    "assume that at round @xmath96 $ ] , some vehicle @xmath40 experienced a communication failure . therefore , at round @xmath69 all other vehicles either receive the default value of @xmath40 or receive no message from @xmath40 .",
    "thus , all vehicles use the same value ( default return value ) in each round @xmath93 $ ] ( lines  [ ln : assingment1 ]  and  [ ln : imposeend ] ) .",
    "this is due to the definition of the function @xmath36 ( line  [ al : fun ] ) and the fact that each vehicle writes the default return value if it experiences a communication failure .",
    "\\(3 ) * certainty period*. we show that during @xmath66 $ ] all vehicles use the same values .",
    "indeed , from the point ( 2 ) , every vehicle uses the default return value in every round @xmath93 $ ] . it remains to show that they use the same value in each round @xmath97 $ ] .",
    "from the claim , @xmath98 for each pair @xmath99 during @xmath100 $ ] since all vehicles received the information from each other vehicle .",
    "the lemma follows since vehicles decide the value to be used on round @xmath69 based on the received information at round @xmath1 ( lines  [ ln : writeoutput1 ]  and  [ ln : imposeend ] ) using the deterministic function @xmath36 .",
    "it follows directly from lemma [ th : boundeduncertainty ] .",
    "[ s : eva ] we consider a cooperative system that has two service levels where the lowest one is the default service level to which the system falls - back to in the presence of communication failures .",
    "for example , this can be a vehicular system in which the cooperative service level is the highest , and the autonomous service level is the lowest ( default ) one .",
    "since we focus on communication failures , the experiments assume that every system component can always support the highest service level , and thus read input ( @xmath101 ) always returns the highest service level .",
    "we use computer simulation to validate the protocol as well as its efficiency . for the efficiency , we consider the _ reliability _ performance measure which we define as the percentage of communication rounds during which the protocol allows the system to run at its highest service level .",
    "first , we validate that the disagreement period is of at most one round and next the reliability of the protocol .",
    "we simulate the protocol using ns-3 .",
    "we choose ieee 802.11p as the communication channel with a log - distance path loss model and nakagami fading channel model .",
    "since dsrc technologies support end - to - end message delay of less than @xmath16ms  @xcite , we fix the message delay to @xmath16ms .",
    "we consider a synchrony bound of @xmath102ms , say , using gps  @xcite or a distributed clock - synchronization protocol .",
    "we implement a straightforward gossip protocol in which every node retransmits message every @xmath103ms .",
    "we validate that the disagreement period is of at most one round .",
    "we plot in figure  [ fig : be ] the decision that @xmath104 vehicles took independently during @xmath105 rounds using the protocol under frequent communication failures .",
    "we set the round length to @xmath106ms so that messages can be transmitted twice in each round .",
    "observe that at round @xmath107 vehicles @xmath108 and @xmath109 reduce the service level due to a communication failure , but vehicles @xmath110 and @xmath104 still continue in the highest level of service .",
    "however , at round @xmath111 , they lower their service level .",
    "although vehicles do not operate on distinct service levels for more than one round , the service level of some vehicles may be oscillating .",
    "we can reduce this effect by increasing the round length . however , the uncertainty period also increases .",
    "rounds using the protocol . ]",
    "note the trade - off between the upper bound on the disagreement period , which is one communication round , and the success rate of the gossip protocol , which decreases as the round length becomes shorter .",
    "the type of gossip protocol as well as the number of system components also influences this success rate .",
    "we use computer simulation to study how these trade - offs work together and present the reliability .",
    "we consider three round lengths between @xmath106ms and @xmath112ms with intervals of @xmath16ms so that vehicles can transmit @xmath113 and @xmath114 messages in each round , respectively .",
    "we variate the number of vehicles between two and eight .",
    "the reliability of the system is plotted in figure  [ fig : rel ] .",
    "we run each experiment for @xmath112 simulation seconds . during the simulations ,",
    "we observe a packet drop average of @xmath115 .",
    "the packet drop rate per number of vehicles is presented in table  [ fig : packetdrop ] .",
    "further , the percentage of time that all vehicles agree on the highest service level is greater than @xmath116 with round lengths of at least @xmath117ms with at least four vehicle .",
    "observe that the reliability is higher with more vehicles than with less .",
    "this is because of the transitivity property .        .packet drop rate . [",
    "cols=\"^,^\",options=\"header \" , ]     the protocol that algorithm  [ alg : tddp ] presents .    @xmath51 @xmath118.locallos)$ ]   +   + @xmath35 let @xmath119 and @xmath120 be the operation information and maximum local service level that it supports , respectively , of @xmath9 @xmath121   +   + @xmath122 use @xmath31 and acceleration bounds provided in table  [ fig : saftykernelparameters1 ] according to @xmath123 to maintain the cruise velocity if possible use @xmath31 and acceleration bounds provided in table  [ fig : saftykernelparameters1 ] according to @xmath123 to maintain the headway given in table  [ fig : saftykernelparameters ] .",
    "algorithm  [ alg : platoonadaptivecruisecontrol ] executes an instance of the protocol ( that algorithm  [ alg : tddp ] presents ) and implement the interface functions @xmath101 , @xmath124 and @xmath125 . the function",
    "@xmath101 returns the @xmath9 s local service level ( see table  [ fig : saftykernelparameters1 ] ) as well as the operational information ( localization , heading , velocity , etc . ) .",
    "the function @xmath125 returns the minimum local service level in the data structure @xmath0 so that all vehicles can meet the required constrains .",
    "the main functionality is implemented in @xmath124 function .",
    "it uses the information of all the vehicle in @xmath31 to determine the velocity and acceleration for the next round according to the cooperative service level using the parameters in table  [ fig : saftykernelparameters ] . note that in the baseline application , acc , vehicles can base their decision on sensory information from onboard sources .",
    "we assume that each operation mode is proven to be safe provided that the information meets the requirements , i.e. , the errors are within the bounds that are given in table  [ fig : saftykernelparameters ] . for the worst case scenario ,",
    "the behavior of the platoon can be influenced by vehicles that are not part of the platoon .",
    "this is because some events can cause cascade effects if they occur during the communication failures .",
    "we observe that the period during which the system switches from the highest service level to the lowest is a critical time .",
    "the safety provision in algorithm  [ alg : platoonadaptivecruisecontrol ] depends directly on the mechanical constraints and the parameters election . from the previous section ,",
    "it is reasonable to consider rounds of length at least @xmath117 milliseconds .",
    "thus , the headway can be determined from the round length and the error bounds on the information .",
    "we observe that algorithm  [ alg : platoonadaptivecruisecontrol ] can reduce the collision risk by enforcing the vehicles to operate in a common service level that has been proven to be safe according to the information quality that is associated with that level .      as an illustrative example of the propose solution",
    ", we consider three vehicles in the following worst case scenarios of two implementations : ( 1 ) a vehicular platooning application that does use the proposed solution for for its back - off strategy in the presence of communication failures , and ( 2 ) an implementation of vehicular platooning that does run algorithm  [ alg : platoonadaptivecruisecontrol ] .",
    "let @xmath126 be the vehicles such that @xmath127 is leading the platoon followed by @xmath128 and @xmath129 as depicted in figure  [ fig : exm1 ] .",
    "assume that vehicles are driving on platooning with operational parameters given by the medium service level in table  [ fig : saftykernelparameters ] .",
    "therefore , they keep a headway of @xmath130 .",
    "suppose that at time @xmath131 , @xmath128 starts loosing the messages from @xmath129 for @xmath132 time .",
    "further , assume that at time @xmath133 , @xmath128 losses the messages from @xmath127 for @xmath134 time and at the same time @xmath127 requires to decelerate due to an obstacle , for example a pedestrian .",
    "let us assume that @xmath135 and @xmath132 are at least two times the round length .",
    "* platooning with back - off strategy that does not include the proposed solutions . *",
    "since @xmath128 does not receive the messages from @xmath129 during @xmath136 $ ] , it is unaware whether @xmath129 continues operating on platooning .",
    "thus , @xmath128 continues operating on platooning and assumes that it is the last vehicle in it . at time @xmath133",
    ", @xmath128 starts loosing messages from @xmath127 and consequently switches to the back - off strategy in the next round .",
    "however , since @xmath127 requires to brake , @xmath128 uses the acceleration bounds in @xmath137 . but @xmath129 continues operating on platooning during @xmath136 $ ] , since it is unaware that @xmath128 is not receiving messages from @xmath127 and @xmath129 . by definition ,",
    "the system is not safe during @xmath138 $ ] , since the platoon has only been proved to be safe when the headway is at most @xmath130 and acceleration bounds are in @xmath139 .    *",
    "platooning using algorithm  [ alg : platoonadaptivecruisecontrol ] .",
    "* from the algorithm property that the uncertainty does not hold for more than one round , @xmath127 and @xmath129 will be aware that at least one vehicle has a communication failure in the next round .",
    "therefore , all switch to the lowest service level and start opening space to keep a headway of @xmath140 .",
    "thus , at time @xmath133 they have larger inter - vehicle distances which reduce the cascade effects .",
    "observe that for an @xmath135 less than two round lengths , the problem also occurs in this approach .",
    "indeed , every cooperative vehicular application that relies on communication suffers from this problem .",
    "however , we believe that our approach minimizes the effects .",
    "[ s : con ] we have proposed an efficient protocol that can be used in safety - critical cooperative vehicular applications that have to deal with communication uncertainties .",
    "the protocol guarantees that all vehicles will not be exposed , for more than a constant time , to risks that are due to communication failures .",
    "we demonstrate correctness , evaluate performance and validate our results via ns-3 simulations .",
    "we also showed how vehicular platooning can use the protocol for maintaining system safety .",
    "the proposed solution can be also extended to other cooperative vehicular applications , such as intersection crossing , coordinated lane change , as we demonstrated using the gulliver test - bed  @xcite during the karyon project  @xcite .",
    "moreover , we have considered the simplest multi - hop communication primitive , i.e. , gossip with constant retransmissions . however , that communication primitive can be substitute with a gossip protocol that facilitate a greater degree of fault - tolerance and better performance .",
    "this work opens the door for the algorithmic design and safety analysis of many cooperative applications that use different high - level communication primitives .",
    "marcos  kawazoe aguilera , grard  le lann , and sam toueg . on the impact of",
    "fast failure detectors on real - time fault - tolerant systems . in dahlia",
    "malkhi , editor , _ disc _ , volume 2508 of _ lecture notes in computer science _ , pages 354370 .",
    "springer , 2002 .",
    "christian berger , oscar  morales ponce , thomas petig , and elad  michael schiller . driving with confidence : local dynamic maps that provide los for the gulliver test - bed . in andrea bondavalli , andrea ceccarelli , and frank ortmeier , editors ,",
    "_ computer safety , reliability , and security - safecomp 2014 workshops : ascoms , decsos , devvarts , isse , resa4ci , sassur .",
    "florence , italy , september 8 - 9 , 2014 .",
    "proceedings _ , volume 8696 of _ lecture notes in computer science _ , pages 3645 .",
    "springer , 2014 .",
    "antonio casimiro , jrg kaiser , johan karlsson , elad  michael schiller , philippas tsigas , pedro costa , jos parizi , rolf johansson , and renato librino .",
    "brief announcement : karyon : towards safety kernels for cooperative vehicular systems . in andra",
    "w. richa and christian scheideler , editors , _ sss _ , volume 7596 of _ lncs _ , pages 232235 .",
    "springer , 2012 .",
    "antonio casimiro , oscar  morales ponce , thomas petig , and elad  michael schiller .",
    "vehicular coordination via a safety kernel in the gulliver test - bed . in _",
    "34th international conference on distributed computing systems workshops ( icdcs 2014 workshops ) , madrid , spain , june 30 - july 3 , 2014 _ , pages 167176 .",
    "ieee , 2014 .",
    "antnio casimiro , jos rufino , ricardo  c. pinto , eric vial , elad  m. schiller , oscar morales - ponce , and thomas petig . a kernel - based architecture for safe cooperative vehicular functions . in",
    "9th ieee international symposium on industrial embedded systems ( sies14 ) _ , 2014 .",
    "se  lee , e  llaneras , s  klauer , and j  sudweeks .",
    "analyses of rear - end crashes and near - crashes in the 100-car naturalistic driving study to support rear - signaling countermeasure development . , 810:846 , 2007 .",
    "oscar morales - ponce , elad  m. schiller , and paolo falcone .",
    "cooperation with disagreement correction in the presence of communication failures . in _",
    "intelligent transportation systems ( itsc ) , 2014 ieee 17th international conference on _ , pages 11051110 , oct 2014 .",
    "mitra pahlavan , marina papatriantafilou , and elad  michael schiller .",
    "gulliver : a test - bed for developing , demonstrating and prototyping vehicular systems .",
    "in jos d.  p. rolim , jun luo , and sotiris  e. nikoletseas , editors , _ proceedings of the 9th acm international workshop on mobility management & wireless access , mobiwac 2011 , october",
    "31- november 4 , 2011 , miami beach , fl , usa _ , pages 18 .",
    "acm , 2011 .",
    "mitra pahlavan , marina papatriantafilou , and elad  michael schiller .",
    "gulliver : a test - bed for developing , demonstrating and prototyping vehicular systems . in _ proceedings of the 75th ieee",
    "vehicular technology conference , vtc spring 2012 , yokohama , japan , may 6 - 9 , 2012 _ , pages 12 .",
    "ieee , 2012 .",
    "steven  e shladover , charles  a desoer , j  karl hedrick , masayoshi tomizuka , jean walrand , w - b zhang , donn  h mcmahon , huei peng , shahab sheikholeslam , and nick mckeown .",
    "automated vehicle control developments in the path program .",
    ", 40(1):114130 , 1991 ."
  ],
  "abstract_text": [
    "<S> vehicle - to - vehicle communication is a fundamental requirement for maintaining safety standards in high - performance cooperative vehicular systems . </S>",
    "<S> the vehicles periodically exchange critical information among nearby vehicles and determine their maneuvers according to the information quality and the established strategies </S>",
    "<S> . however , wireless communication is failure prone . </S>",
    "<S> thus , participants can be unaware that other participants have not received the needed information on time . </S>",
    "<S> this can result in conflicting ( unsafe ) trajectories . </S>",
    "<S> we present a deterministic solution that allows all participants to use a fallback strategy in the presence of communication delays . </S>",
    "<S> we base our solution on a timed distributed protocol . in the presence of message omission and delay failures , </S>",
    "<S> the protocol disagreement period is bounded by a constant ( in the order of milliseconds ) that may depend on the message delay in the absence of these failures . </S>",
    "<S> we demonstrate correctness and perform experiments to corroborate its efficiency . </S>",
    "<S> we explain how vehicular platooning can use the proposed solution for providing high performance while meeting the safety standards in the presence of communication failures . </S>",
    "<S> we believe that this work facilitates the implementation of cooperative driving systems that have to deal with inherent ( communication ) uncertainties . </S>"
  ]
}
{
  "article_text": [
    "the ground work for intersection types and related notions was developed in the seventies @xcite and have since proved to be a valuable tool in the theoretical studies and applications of the lambda calculus .",
    "intersection types incorporate type polymorphism in a finitary way ( where the usage of types is listed rather than quantified over ) .",
    "since the late seventies , numerous intersection type systems have been developed or used for a multitude of purposes ( the list is huge ; for a very brief list we simply refer the reader to the recent articles @xcite and the references there , for a longer list we refer the reader to the bibliography of intersection types and related systems available ( while that url address is active ) at http://www.macs.hw.ac.uk/~jbw/itrs/bibliography.html ) . in this paper , we are interested in the interpretation of an intersection type .",
    "we study this interpretation in the context of the so - called realisability semantics .",
    "the idea of realisability semantics is to associate to each type a set of terms which realise this type . under this semantics ,",
    "an atomic type is interpreted as the set of @xmath2-terms saturated by a certain relation .",
    "then , arrow and intersection types receive their intuitive interpretation of functional space and set intersection .",
    "for example , a term which realises the type @xmath4 is a function from @xmath5 to @xmath5 .",
    "realisability semantics has been a powerful method for establishing the strong normalisation of type systems  la tait and girard .",
    "the realisability of a type system enables one to also show the soundness of the system in the sense that the interpretation of a type contains all the terms that have this type .",
    "soundness has been an important method for characterising the algorithmic behaviour of typed terms through their types as has been illuminative in the work of krivine .",
    "it is also interesting to find the class of types for which the converse of soundness holds .",
    "i.e. , to find the types @xmath6 for which the realisability interpretation contains exactly ( in a certain sense ) the terms typable by @xmath6 .",
    "this property is called completeness and has not yet been studied for every type system .",
    "in addition to the questions of soundness and completeness for a realisability semantics , one is interested in the additional three questions :    1 .   can different interpretations of a type given by different saturation relations be compared ?",
    "2 .   for a particular saturation relation ,",
    "what are the types uniquely realised by the @xmath2-terms which are typable by these types ?",
    "3 .   is there a class of types for which typability and realisability coincide ?    in this paper we establish the soundness and completeness as well as give answers to questions 1 , 2 and 3 for a strict non linear intersection type system with a universal type .",
    "we show that for different notions of saturation ( based on weak head reduction and normal @xmath1-reduction ) we obtain the same interpretation for types answering question 1 partially .",
    "questions 2 and 3 are affected by the presence of @xmath0 which prevents typability and realisability from coinciding and creates extra difficulties in characterizing the interpretation of a type .",
    "we define a class @xmath3 of the so - called positive types ( where @xmath0 can only occur at specific positions ) .",
    "we show that if a term inhabits a positive type , then this term is @xmath1-normalisable and reduces to a closed term . in other words ,",
    "positive types can be used to represent abstract data types",
    ". this result answers question 2 and depends on the full power of soundness .",
    "the completeness theorem for @xmath3 becomes interesting indeed since it establishes a perfect equivalence between typable terms and terms that inhabit a type .",
    "in other words , typability and realisability coincide on @xmath3 answering question 3 .",
    "we give a number of examples to explain the intuition behind the definition of @xmath3 and to show that this class can not be extended while keeping its desired properties .",
    "hindley  @xcite was the first to study the completeness of a simple type system and he showed that all the types of that system have the completeness property .",
    "then , he generalised his completeness proof for an intersection type system  @xcite . using his completeness theorem for the realisability semantics based on the sets of @xmath2-terms saturated by @xmath7-equivalence",
    ", hindley has shown that simple types have property 2 above . however , his completeness theorem for intersection types does not allow him to establish property 2 for the intersection type system . moreover ,",
    "hindley s completeness theorems were established with the sets of @xmath2-terms saturated by @xmath7-equivalence , and hence they do nt permit a comparison between the different possible interpretations . in our method , saturation is not by @xmath7-equivalence .",
    "rather , it is by the weaker requirement of weak head normal forms .",
    "hence , all of hindley s saturated models are also saturated in our framework and moreover , there are saturated models based on weak head normal form which can not be models in hindley s framework .",
    "@xcite has established completeness for a class of types in girard s system f ( also independently discovered by reynolds as the second order typed @xmath2-calculus ) known as the strictly positive types .",
    "@xcite generalised the result of  @xcite for the larger class which includes all the positive types and also for second order functional arithmetic .",
    "@xcite established recently by a different method using kripke models , the completeness for the simply typed @xmath2-calculus",
    ". finally @xcite introduced a realizability semantics for the simply typed @xmath8-calculus and proved a completeness result .",
    "the paper is structured as follows : in section  [ typesystem ] , we introduce the intersection type system that will be studied in this paper . in section  [ subredsec ]",
    "we study both the subject reduction and subject expansion properties for @xmath1 . in section  [ realsem ]",
    "we establish the soundness and completeness of the realisability semantics based on two notions of saturated sets ( one using weak head reduction and the other using @xmath1-reduction ) . in section  [ meantypes ] we show that the meaning of a type does not depend on the chosen notion of saturation ( based on either weak head reduction or @xmath1-reduction ) .",
    "we also define a subset of types which we show to satisfy the ( weak ) normalisation property and for which typability and realisability coincide .",
    "a number of intersection type systems have been given in the literature ( for a very brief list see @xcite and the references there ; for a longer list ( and while that url address is active ) see http://www.macs.hw.ac.uk/~jbw/itrs/bibliography.html ) .",
    "in this paper we introduce an interesection type system due to j.b.wells and inspired by his work with sbastien carlier on expansion @xcite .",
    "we follow @xcite and write the type judgements @xmath9 as @xmath10 .",
    "there are many reasons why this latter notation is to be prefered over the former ( see @xcite ) .",
    "in particular , this typing notation allowed j.b .",
    "wells in @xcite to give a very simple yet general definition of principal typings .    before presenting the type system",
    ", we give a number of its characteristics :    * the type system is _ relevant _ : this means that the type environments contain all and only the necessary assumptions as is shown in lemma  [ structyping].[structypingone ] . *",
    "the type system is _ strict _ and _ non - linear_. following the terminology of @xcite ( who advocated the use of of linear systems of intersection types only with strict intersection types ) , types are strict if @xmath0 and @xmath11 do not occur immediately to the right of arrows .",
    "our type system is non - linear since @xmath11 is idempotant .",
    "we guarantee strictness by using two sets of types @xmath12 and @xmath13 such that @xmath14 and @xmath12 is only formed by either basic types or using the arrow constructor ( without permitting @xmath0 and @xmath11 to occur immediately to the right of arrows ) .",
    "this means that one does not need to state laws relating @xmath15 to @xmath16 , yet one can still establish a number of type inclusion properties as is shown in lemma  [ goodeg ] .    1 .",
    "let @xmath17 be a denumerably infinite set of variables .",
    "the set of terms @xmath18 , of the @xmath19-calculus is defined as usual by the following grammar : + @xmath20 we let @xmath21 range over @xmath17 and @xmath22 range over @xmath18 . we assume the the usual definition of subterms and the usual convention for parenthesis and",
    "omit these when no confusion arises .",
    "in particular , we write @xmath23 instead of @xmath24 . + we take terms modulo @xmath25-conversion and use the barendregt convention ( bc ) where the names of bound variables differ from the free ones .",
    "when two terms @xmath26 and @xmath27 are equal ( modulo @xmath25 ) , we write @xmath28 .",
    "we write @xmath29 for the set of the free variables of term @xmath26 .",
    "we define as usual the substitution @xmath30 $ ] of the term @xmath27 for all free occurrences of @xmath31 in the term @xmath26 and similarly , @xmath32 $ ] , the simultaneous substitution of @xmath33 for all free occurrences of @xmath34 in @xmath26 for @xmath35 .",
    "3 .   we assume the usual definition of compatibility .",
    "* the weak head reduction @xmath36 on @xmath18 is defined by : @xmath37 if @xmath38 and @xmath39\\ ; q_1 ... q_n$ ] where @xmath40 .",
    "* the reduction relation @xmath41 on @xmath18 is defined as the least compatible relation closed under the rule : @xmath42 $ ] . * for @xmath43",
    ", @xmath44 denotes the reflexive transitive closure of @xmath45 .",
    "* @xmath46 denotes the equivalence relation induced by @xmath47 .",
    "the next theorem is standard and is needed for the rest of the paper .",
    "[ conf ]    1 .",
    "[ confone ] let @xmath43 .",
    "if @xmath48 , then @xmath49 .",
    "[ conftwo ] if @xmath50 , then , for all @xmath51 , @xmath52 .",
    "3 .   [ confthree ] if @xmath53 and @xmath54 , then there is @xmath55 such that @xmath56 and @xmath57 .",
    "[ confthree ] @xmath58 iff there is a term @xmath26 such that @xmath59 and @xmath60 .",
    "[ conftwo ] let @xmath61 and assume @xmath62 for every @xmath63 .",
    "if @xmath64 for some @xmath65 and @xmath66 , then for some @xmath67 and @xmath68 , @xmath69 where @xmath70 , @xmath71 for every @xmath72 and @xmath73 for every @xmath74 . 6 .",
    "[ conftwo  ] if @xmath75 is weakly @xmath1-normalising and @xmath76 , then @xmath26 is also weakly @xmath1-normalising .",
    "see  @xcite for more detail . here , we sketch the proofs .",
    "[ confone ] ( resp",
    ".  [ conftwo ] ) is by induction on @xmath48 ( resp .",
    "@xmath77 ) .",
    "[ confthree ] is the church - rosser .",
    "[ confthree ] if ) is by definition of @xmath46 whereas only if ) is by induction on @xmath58 using [ confthree ] .",
    "* is as follows : since @xmath78 , then by page 23 of @xcite , @xmath79 is solvable and hence , @xmath26 is also solvable and its head reduction terminates .",
    "therefore , @xmath80 for @xmath81 . since @xmath82 then @xmath83 , @xmath84 .",
    "hence , @xmath85 , @xmath68 , @xmath86 ( since @xmath87 ) , @xmath88 , @xmath71 for every @xmath72 and @xmath73 for every @xmath74 . * is by cases : * * if @xmath89 where @xmath90 is in @xmath91-normal form and @xmath92 then @xmath55 is in @xmath91-normal form and @xmath26 is @xmath1-normalising . * * if @xmath93 \\rhd^*_\\be p$ ] where @xmath94 is in @xmath91-normal form and @xmath95 then by [ confone ] , @xmath96 and so , @xmath97 \\rhd^*_\\be \\l x.p$ ] . since @xmath98 is in @xmath91-normal form ,",
    "@xmath26 is @xmath1-normalising .    1 .",
    "let @xmath99 be a denumerably infinite set of atomic types .",
    "the types are defined by the following grammars : @xmath100 @xmath101 + we let @xmath102 range over @xmath99 , @xmath103 range over @xmath12 and @xmath104 , @xmath105 , @xmath106 , @xmath107 , @xmath108 , @xmath109 range over @xmath13 .",
    "+ we quotient types by taking @xmath11 to be commutative ( i.e. @xmath110 ) , associative ( i.e. @xmath111 ) , idempotent ( i.e. @xmath112 ) and to have @xmath0 as neutral ( i.e. @xmath113 ) .",
    "+ we denote @xmath114 by @xmath115 ( when @xmath116 ) .",
    "a type environment is a set @xmath117 / @xmath118 .",
    "we denote such environment ( call it @xmath119 ) by @xmath120 or simply by @xmath121 and define @xmath122 / @xmath123 .",
    "we use @xmath124 to range over environments and write @xmath125 for the empty environment .",
    "+ if @xmath26 is a term and @xmath126 , we denote @xmath127 .",
    "+ if @xmath128 , @xmath129 and @xmath130 , we denote @xmath131 the type environment @xmath132 .",
    "+ let @xmath133 and @xmath134 .",
    "we denote @xmath135 the type environment @xmath136 .",
    "note that @xmath137 and that @xmath11 is commutative , associative and idempotent on environments .",
    "the typing rules are the following : + @xmath138 + + @xmath139 + + @xmath140 + + @xmath141 + + @xmath142 + + @xmath143 + + @xmath144 + + in the last clause , the binary relation @xmath145 is defined by the following rules : + @xmath146 + @xmath147 + @xmath148 + @xmath149 + @xmath150 + @xmath151 + @xmath152 + + throughout , we use @xmath153 to denote @xmath130 , or environments @xmath119 or typings @xmath154 .",
    "note that when @xmath155 , then @xmath156 and @xmath157 belong to the same set ( either @xmath13 or environments or typings ) .",
    "the next lemma gives the shape of a type in @xmath13 .",
    "[ omega ]    1 .",
    "[ omegaone ] if @xmath158 , then @xmath159 or @xmath160 where @xmath61 and @xmath161 , @xmath162 .",
    "[ omegatwo ] @xmath163 .",
    "[ omegathree ] if @xmath164 , then @xmath159 .",
    "* by induction on @xmath165 .",
    "* by rule @xmath166 , @xmath167 .",
    "* by induction on the derivation @xmath164 .",
    "the next lemma studies the relation @xmath145 on @xmath13 .",
    "[ goodeg ] let @xmath168 .    1",
    ".   [ goodegone ] if @xmath169 , then @xmath170 , @xmath171 where @xmath172 , @xmath173 , @xmath174 , @xmath175 , and @xmath176 , @xmath177 such that @xmath178 .",
    "[ goodegone ] if @xmath179 , then @xmath180 and @xmath181 .",
    "[ goodegtwo ] let @xmath182 .",
    "if @xmath183 , then @xmath184 , @xmath177 such that @xmath185 and @xmath178 .",
    "4 .   [ goodegtwo  ] if @xmath186 , then @xmath187 where @xmath188 and @xmath184 , @xmath189 and @xmath190 .",
    "[ goodegthree ] if @xmath191 where @xmath192 , then @xmath193 where @xmath188 and @xmath184 , @xmath177 @xmath194 and @xmath178 .",
    "* by induction on the derivation @xmath169 using lemma  [ omega].[omegaone ] . * by induction on @xmath179 .",
    "* by induction on @xmath195 .",
    "we only do the _ tr _ case .",
    "+ if @xmath196 , then , by  [ goodegone ] , @xmath197 where @xmath198 and @xmath199 , @xmath177 , such that @xmath200 .",
    "if @xmath201 , then , by [ goodegone ] , @xmath202 . absurd",
    "hence , @xmath199 , @xmath203 and @xmath204 .",
    "let @xmath205 . by ih , @xmath206 , @xmath207 and @xmath208 .",
    "also , by ih , @xmath177 , @xmath209 and @xmath210 . hence , @xmath184 , @xmath211 , such that @xmath212 and @xmath178 . * by  [ goodegone ] ,",
    "@xmath213 where @xmath188 and @xmath184 , @xmath214 .",
    "if @xmath215 , then , by [ goodegone ] , @xmath216 . absurd",
    "hence , @xmath217 .",
    "hence , by  [ goodegtwo ] , @xmath184 , @xmath218 and @xmath190 .",
    "* since @xmath219 , then , by lemma  [ omega].[omegaone ] , @xmath213 where @xmath188 and @xmath184 , @xmath220 .",
    "let @xmath205 . by  [ goodegone ] ,",
    "@xmath221 such that @xmath222 . by  [ goodegtwo  ] , and since @xmath220 , @xmath223 where @xmath224 and @xmath225 .",
    "hence , @xmath226 where @xmath188 and @xmath184 , @xmath227 @xmath228 and @xmath229 .",
    "the next lemma studies the relation @xmath145 on environments and typings .",
    "[ phisub ]    1 .",
    "[ phisubone ] if @xmath230 , then @xmath231 .",
    "[ phisubone ] if @xmath230 , @xmath232 and @xmath129 , then @xmath233 .",
    "[ phisubtwo ] @xmath230 iff @xmath234 , @xmath235 and for every @xmath63 , @xmath236 .",
    "[ phisubtwo ] if @xmath237 , then @xmath238 5 .",
    "[ phisubtwo  ] if @xmath239 , then @xmath240",
    "[ phisubthree ] @xmath241 iff @xmath242 and @xmath232 . 7 .",
    "[ phisublast ] if @xmath230 and @xmath243 , then @xmath244 .",
    "* by induction on the derivation @xmath230 .",
    "* first show , by induction on the derivation @xmath245 ( using [ phisubone ] ) , that if @xmath245 , @xmath246 and @xmath247 then @xmath248 . then use tr .",
    "* only if ) by [ phisubone ] , @xmath234 and @xmath249 .",
    "the proof is by induction on the derivation @xmath250 .",
    "if ) by induction on @xmath251 using [ phisubone ] .",
    "* let @xmath252 and @xmath253 . by definition ,",
    "@xmath254 . hence , by lemma  [ omega].[omegatwo ] and [ phisubtwo ] , @xmath238 .",
    "* let @xmath252 . by definition ,",
    "@xmath254 . by [ phisubtwo ] , @xmath253 and @xmath255 , @xmath256 .",
    "hence by lemma  [ omega].[omegathree ] , @xmath255 , @xmath257 . * only if ) by induction on the derivation @xmath258 .",
    "if ) by @xmath259 .",
    "* this is a corollary of  [ phisubtwo ] .",
    "the next lemma shows that we do not allow weakening in our type system .",
    "[ structyping ]    1 .",
    "[ structypingone ] if @xmath260 , then @xmath237 .",
    "[ structypingtwo ] for every @xmath119 and @xmath26 such that @xmath237 , we have @xmath261 .",
    "* by induction on the derivation @xmath260 .",
    "* by @xmath0 , @xmath262 . by lemma  [ phisub].[phisubtwo ] , @xmath238 .",
    "hence , by @xmath145 and @xmath259 , @xmath263 .    finally , it may come as a surprise that the rule _ ax _ uses types in @xmath12 instead of @xmath13 and that in the rule @xmath11 we take the same environment .",
    "the lemma below shows that this is not restrictive .",
    "[ newrules ]    1 .",
    "[ newrulesone ] the rule @xmath264 is derivable .",
    "[ newrulestwo ] the rule @xmath265 is derivable .    *",
    "let @xmath266 and @xmath267 . by lemma  [ structyping ] , @xmath268 .",
    "let @xmath269 and @xmath270 .",
    "hence , @xmath271 . by @xmath272 and @xmath273 for all @xmath63 .",
    "hence , by lemma  [ phisub].[phisubtwo ] , @xmath274 and @xmath275 , and , by rules @xmath145 and @xmath259 , @xmath276 and @xmath277 . finally , by rule @xmath278 , @xmath279 . * by lemma  [ omega].[omegaone ] :",
    "* * either @xmath280 , then , by rule @xmath0 , we have @xmath281 . * * or @xmath282 where @xmath283 , @xmath162 , then , by rule @xmath284 , @xmath285 and , by @xmath286 applications of rule @xmath287 , @xmath288 .",
    "in this section we establish the subject reduction and subject expansion properties for @xmath1 .",
    "we start with a form of the generation lemma .",
    "[ newgen ]    1 .",
    "[ newgenone ] if @xmath289 , then @xmath290 and @xmath291 .",
    "2 .   [ newgenfour ] if @xmath292 and @xmath293 , then @xmath294 or @xmath295 where @xmath192 and @xmath296 , @xmath297 .",
    "[ newgentwo ] if @xmath298 and @xmath299 , then @xmath280 or @xmath300 where @xmath192 and @xmath301 , @xmath302 .",
    "[ newgenthree ] if @xmath298 and @xmath76 , then @xmath280 or @xmath300 where @xmath192 and @xmath301 , @xmath303 .",
    "[ newgenone ] .  by induction on the derivation @xmath289 .",
    "we have four cases :    * if @xmath304 , nothing to prove . * if @xmath305 , nothing to prove .",
    "* let @xmath306 . by ih , @xmath290 , @xmath307 and @xmath308 ,",
    "then , by rule @xmath11 , @xmath309 .",
    "* let @xmath310 . by lemma  [ phisub].[phisubthree ] , @xmath230 and @xmath311 and , by ih , @xmath312 and @xmath313 . then , by lemma  [ phisub].[phisubtwo ] , @xmath290 , @xmath314 and , by rule @xmath315 , @xmath291 .",
    "[ newgenfour ] .  by induction on the derivation @xmath316 .",
    "we have four cases :    * if @xmath317 , nothing to prove . *",
    "let @xmath318 ( where , by 1 .",
    "@xmath291 ) .",
    "+ since @xmath319 , we have @xmath320 .",
    "* let @xmath321 . by ih",
    ", we have four cases : * * if @xmath322 , then @xmath323 . * * if @xmath324 , @xmath325 , @xmath192 and @xmath296 , @xmath297 , then @xmath326 ( @xmath0 is a neutral element ) . * * if @xmath327 , @xmath328 , @xmath192 and @xmath296 , @xmath297 , then @xmath329 ( @xmath0 is a neutral element ) . * * if @xmath330 and @xmath331 ( hence @xmath332 ) , where @xmath333 and @xmath334 , @xmath335 .",
    "* let @xmath336 ( by lemma  [ phisub ] ) .",
    "+ by lemma  [ phisub ] , @xmath230 , @xmath337 and @xmath338 . by ih",
    ", we have two cases : * * if @xmath339 , then , by lemma  [ omega].[omegathree ] , @xmath340 . * * if @xmath341 , where @xmath342 and @xmath301 , @xmath343 . by lemma  [ goodeg].[goodegone ] , @xmath340 ( nothing to prove ) or @xmath344 where @xmath188 and @xmath184 , @xmath345 such that @xmath346 . since , by lemma  [ phisub].[phisubthree ] , @xmath347 for any @xmath205 , then @xmath184 , @xmath348 .    [ newgentwo ] .  by induction on the derivation @xmath298 .",
    "we have four cases :    * if @xmath349 , nothing to prove . *",
    "if @xmath350 , nothing to prove .",
    "* let @xmath351 . by ih",
    ", we have four cases : * * if @xmath352 , then @xmath353 . * * if @xmath324 , @xmath354 where @xmath192 and @xmath296 , + @xmath355 , then @xmath356 ( @xmath0 is a neutral element ) . * * if @xmath327 , @xmath357 where @xmath192 and @xmath296 , + @xmath358 , then @xmath359 ( @xmath0 is a neutral element ) . * * if @xmath360 , @xmath361 ( hence @xmath362 ) where @xmath363 , @xmath334 , @xmath364 , we are done .",
    "* let @xmath365 . by lemma  [ phisub].[phisubthree ] , @xmath366 and @xmath232 . by ih , we have two cases : * * if @xmath159 , then , by lemma  [ omega].[omegathree ] , @xmath367 . * * assume @xmath368 , where @xmath369 and @xmath370 for all @xmath371 . by lemma  [ omega].[omegaone ] : * * * either @xmath367 , and hence nothing to prove . * * * or , by lemma  [ goodeg].[goodegthree ] , @xmath372 , where @xmath373 and @xmath184 , @xmath345 such that @xmath374 and @xmath375 .",
    "let @xmath205 . since , by lemma  [ phisub].[phisubthree ] , @xmath376 , then @xmath377 .    [ newgenthree ] .",
    "same proof as that of [ newgentwo ] .",
    "now , we establish the substitution lemma .",
    "[ substlem ] if @xmath378 and @xmath379 , + then @xmath380:\\<\\g\\sqcap \\d \\v v\\>$ ] .    by induction on the derivation @xmath378 .    * if @xmath381 and @xmath382 , then @xmath383:\\<\\d \\v   t\\>$ ] . *",
    "if @xmath384 where @xmath385 and if @xmath386 , then since @xmath387 ) = \\{x_1,\\dots , x_n\\ } \\cup fv(n)$ ] , we have by @xmath0 , @xmath380:\\<(x_i:\\o)_n\\sqcap env^n_\\o\\v \\o\\>$ ] . by lemmas  [ phisub].[phisubtwo ] and  [ structyping ] , @xmath388 and by lemma  [ phisub].[phisublast ] , @xmath389 . hence , by @xmath259 , @xmath380:\\<(x_i:\\o)_n\\sqcap \\d \\v \\o\\>$ ] .",
    "* let @xmath390 . by ih ,",
    "@xmath380 : \\<\\g\\sqcap \\d , y : u ' \\v   t\\>$ ] . by rule @xmath391 , @xmath392 = \\l y.m[x:=n ] : \\<\\g\\sqcap \\d \\v u'\\f t\\>$ ] .",
    "* let @xmath393 . by ih , @xmath380 : \\<\\g\\sqcap \\d \\v t\\>$ ] . by rule @xmath394 , @xmath392 = \\l y.m[x:=n",
    "] : \\<\\g\\sqcap \\d \\v \\omega \\f t\\>$ ] .",
    "* let @xmath395 where @xmath396 and @xmath397 . by rules @xmath166 and @xmath145 , @xmath398 and @xmath399 .",
    "now use ih and rule @xmath400 .",
    "+ the cases @xmath401 or @xmath402 are easy . * if @xmath403 use ih and @xmath278 .",
    "* let @xmath404 ( by lemma  [ phisub ] ) .",
    "+ by lemma  [ phisub ] , @xmath231 , @xmath405 , @xmath232 and @xmath338 . hence by @xmath145 , @xmath406 and , by ih , @xmath380 : \\<\\g'\\sqcap \\d\\v v'\\>$ ] .",
    "it is easy to show @xmath407 .",
    "hence , @xmath408 and by @xmath145 , @xmath380 : \\<\\g\\sqcap \\d\\v v\\>$ ] .",
    "since our system does not allow weakening , we need the next definition ( and the related lemma below it ) since when a term is reduced , it may lose some of its free variables and hence will need to be typed in a smaller environment .",
    "if @xmath119 is a type environment and @xmath409 , then we write @xmath410 for the restriction of @xmath119 on the variables of @xmath411 .",
    "if @xmath412 for a term @xmath26 , we write @xmath413 instead of @xmath414 .",
    "[ restlem ]    1 .",
    "[ restlemone ] if @xmath415 , then @xmath416 .",
    "[ restlemtwo ] if @xmath417 and @xmath418 , then + @xmath419 .    [ restlemone ] .",
    "[ restlemtwo ] .",
    "first , note that @xmath420 .",
    "now , we show by cases that if @xmath421 and @xmath422 then @xmath423 :    * if @xmath424 then @xmath425 , @xmath426 and @xmath427 . * if @xmath428 then @xmath429 , @xmath430 and @xmath431 . * if @xmath432 then * * if @xmath433 then @xmath425 , @xmath434 and @xmath435 . * * if @xmath436 then @xmath434 and @xmath431 .",
    "now we give the basic block in the subject reduction for @xmath1 .",
    "[ betaetatheo ] if @xmath437 and @xmath438 , then @xmath439 .    by induction on the derivation @xmath437 .",
    "rule @xmath0 follows by theorem  [ conf].[confone ] and lemma  [ restlem].[restlemone ] .",
    "rules @xmath391 , @xmath394 , @xmath278 and @xmath145 are by ih .",
    "we do @xmath400 + let @xmath440 .    * if @xmath441 where @xmath442 then by ih , @xmath443 . by @xmath400 , @xmath444 . by lemma  [ restlem].[restlemtwo ] , @xmath445 . finally , by @xmath259 , @xmath446 . *",
    "the case @xmath447 where @xmath448 is similar to the above . *",
    "assume @xmath449 and @xmath450 = n$ ] .",
    "since @xmath451 , we have two cases : * * if @xmath452 , then , by lemma  [ newgen].[newgentwo ] , @xmath453 . by lemma  [ substlem ] ,",
    "@xmath454 : \\<\\g_1\\sqcap \\g_2 \\v t\\>$ ] .",
    "moreover , @xmath455 .",
    "hence @xmath456 and @xmath457 .",
    "* * if @xmath458 , then , by lemma  [ newgen].[newgenthree ] , @xmath459 .",
    "moreover , by lemma  [ structyping].[structypingone ] , @xmath460 . hence ,",
    "@xmath461 and @xmath454 = p : \\<(\\g_1 \\sqcap \\g_2)\\r_p \\v t\\>$ ] .",
    "[ finalbetaeta ] + if @xmath437 and @xmath462 , then @xmath439 .    by induction on the length of the derivation @xmath462 using theorem  [ betaetatheo ] .",
    "note that using lemma  [ newgen].([newgenfour ] and  [ newgentwo ] ) , we can also prove the subject reduction property for @xmath463-reduction .",
    "subject reduction for @xmath1 was shown using generation , substitution and environment restriction .",
    "subject expansion for @xmath1 needs something like the converse of the substitution lemma and environment enlargement .",
    "the next lemma can be seen as the converse of the substitution lemma .",
    "[ exp1 ] if @xmath30 : \\<\\g \\v u\\>$ ] , @xmath299 and @xmath96 , then @xmath464 type and @xmath465 type environments such that :    * @xmath466 * @xmath467 * @xmath468    by induction on the derivation @xmath30 : \\<\\g \\v u\\>$ ] .    if @xmath469 , then @xmath470 , @xmath471 and @xmath472 .",
    "then we can assume that @xmath473 .",
    "* the last typing rule can not be @xmath284 .",
    "* let @xmath474 : \\<\\g , y : w \\v   t\\>}{\\l y. m[x:=n ] : \\<\\g \\v w \\f t\\>}$ ] where @xmath475 . + by ih , @xmath464 type and @xmath465 type environments such that @xmath476 , @xmath467 and @xmath477 .",
    "since @xmath478 and @xmath479 , by lemma  [ phisub].[phisubtwo ] , @xmath480 and @xmath481 .",
    "hence @xmath482 . by rule @xmath391 , @xmath483 and since @xmath484 ,",
    "then by rule @xmath145 , @xmath485 . finally by lemma",
    "[ phisub].[phisubtwo ] , @xmath486 .",
    "* let @xmath474 : \\<\\g \\v   t\\",
    "> \\;\\;\\;y \\not \\in dom(\\g)}{\\l y. m[x:=n ]   : \\<\\g\\v \\omega \\f t\\>}$ ] . + by ih , @xmath464 type and @xmath465 type environments such that @xmath476 , @xmath467 and @xmath487 .",
    "since @xmath488 , @xmath489 .",
    "* let @xmath490 : \\<\\g_1 \\v   w \\f t\\ > \\;\\;\\ ; m_2[x:=n ] : \\<\\g_2 \\v w\\ > } { m_1[x:=n ] \\ ; m_2[x:=n ] : \\<\\g_1 \\sqcap \\g_2 \\v t\\>}$ ] + where @xmath491 and @xmath396 . + by ih , @xmath492 types and @xmath493 type environments such that @xmath494 , @xmath495 , @xmath496 , @xmath497 , @xmath498 and @xmath499 .",
    "then , by rules @xmath500 and @xmath400 , @xmath501 and @xmath502",
    ". finally , by lemma  [ phisub].[phisublast ] , @xmath503",
    ". + the cases @xmath401 or @xmath402 are easy .",
    "* let @xmath474 : \\<\\g \\v   u_1\\ > \\;\\ ; m[x:=n ]   : \\<\\g \\v u_2\\ > } { m[x:=n ] : \\<\\g   \\v   u_1 \\sqcap u_2\\>}$ ] . + by ih , @xmath492 types and @xmath504 type environments such that @xmath505 , @xmath506 , @xmath507 , @xmath508 , @xmath468 and @xmath509 .",
    "then , by rule @xmath500 , @xmath510 and @xmath511 . finally , by lemma  [ phisub].[phisublast ] , @xmath512 .",
    "* let @xmath474 : \\<\\g ' \\v u'\\ > \\;\\;\\ ; \\<\\g'\\v   u'\\ >",
    "\\sqsubseteq \\<\\g \\v u\\>}{m : \\<\\g \\v u\\>}$ ] . + by lemma  [ phisub].[phisubtwo ] , @xmath230 and @xmath513 . by ih ,",
    "@xmath464 type and @xmath514 type environments such that @xmath515 , @xmath467 and @xmath516 . then by rules @xmath259 , @xmath145 and _ tr _ , @xmath466 and @xmath517 .",
    "since more free variables might appear in the @xmath1-expansion of a term , the next definition gives a possible enlargement of an environment .",
    "let @xmath518 , @xmath234 and @xmath519 .",
    "we write @xmath520 for @xmath521 .",
    "if @xmath522 , we write @xmath523 instead of @xmath524 .",
    "the next lemma is basic for the proof of subject expansion for @xmath1 .",
    "[ exp2 ] if @xmath380 : \\<\\g \\v u\\>$ ] , @xmath96 and @xmath525 , then @xmath526 .",
    "we have three cases :    * if @xmath280 : by lemma  [ structyping].[structypingtwo ] , we have @xmath527 . * if @xmath528 : we have two cases : * * if @xmath299 , then , by lemma  [ exp1 ] , @xmath464 type and @xmath465 type environments such that @xmath529 , @xmath467 and @xmath530 .",
    "hence , by rules @xmath391 and @xmath400 , @xmath531 and @xmath532 . since @xmath533)$",
    "] , then @xmath534 , and , by rule @xmath145 , @xmath526 .",
    "* * if @xmath76 , then @xmath535 and , by rule @xmath394 , @xmath536 . by rule @xmath0 , @xmath537 , then , by rule @xmath400 , @xmath538 . since @xmath539 )",
    "\\cup fv(n)$ ] , then @xmath540 .",
    "* if @xmath282 where @xmath541 , @xmath162 : by rule @xmath145 , we have @xmath542 , @xmath380 : \\<\\g \\v t_i\\>$ ] , then , by the previous case , @xmath541 , @xmath543 , then , by @xmath286 applications of rule @xmath278 , @xmath544 .",
    "next , we give the main block for the proof of subject expansion for @xmath1 .",
    "[ betaexp ] if @xmath545 and @xmath438 , then @xmath546 .    by induction on the derivation @xmath545 .    * if @xmath547 and @xmath548 , then @xmath549 where @xmath550 and @xmath551 $ ] . by lemma  [ exp2 ] , @xmath552 . *",
    "if @xmath553 and @xmath438 , then since by theorem  [ conf].[confone ] , @xmath49 , @xmath554 . by @xmath0 , @xmath555",
    ". hence , @xmath556 . *",
    "if @xmath557 and @xmath558 , then we have two cases : * * if @xmath559 where @xmath560 , then by ih , @xmath561 . since by theorem  [ conf].[confone ] and lemma  [ structyping].[structypingone ] , @xmath562 , then we have @xmath563 and @xmath564 .",
    "hence , @xmath565 and finally , by @xmath391 , @xmath566 . * * if @xmath549 where @xmath550 and @xmath567 $ ] , then , by lemma  [ exp2 ] , since @xmath550 and @xmath568 : \\<\\g \\v u \\f t\\>$ ] , we have @xmath569 . * if @xmath570 and @xmath438 then similar to the above case . * if @xmath571 and @xmath572 , we have three cases : * * @xmath573 where @xmath574 . by ih , @xmath575 .",
    "it is easy to show that @xmath576 .",
    "now use @xmath400 . * * @xmath577 where @xmath578 .",
    "similar to the above case .",
    "* * @xmath579 where @xmath580 and @xmath581 $ ] . by lemma  [ exp2 ] , @xmath582 . * if @xmath583 and @xmath438 then use ih .",
    "* let @xmath584 and @xmath438 . by lemma  [ phisub].[phisubthree ] , @xmath242 and @xmath232 .",
    "it is easy to show that @xmath585 and hence by lemma  [ phisub].[phisubthree ] , @xmath586 . by ih , @xmath587 .",
    "hence , by @xmath259 , we have @xmath588 .    [ finalbetaexp ]",
    "+ if @xmath545 and @xmath462 , then @xmath546 .",
    "by induction on the length of the derivation @xmath462 using theorem  [ betaexp ] and the fact that if @xmath589 , then @xmath590 .",
    "in this section we give a realisability semantics for our type system and establish both the soundness and completeness of this semantics .",
    "we start with the definition of the function space and saturated sets .",
    "let @xmath591 .    1 .",
    "we use @xmath592 to denote the powerset of @xmath593 , i.e.  @xmath594 .",
    "we define @xmath595 / @xmath596 for all @xmath597 .",
    "3 .   let @xmath598 .",
    "we say that @xmath593 is @xmath599-saturated if whenever @xmath48 and @xmath600 , then @xmath601 .",
    "[ fx+ ] let @xmath598 .    1",
    ".   [ fx+one ] if @xmath593 is @xmath91-saturated , then @xmath593 is @xmath602-saturated .",
    "[ fx+two ] if @xmath603 are @xmath599-saturated sets , then @xmath604 is @xmath599-saturated .",
    "[ fx+three ] if @xmath605 is @xmath599-saturated , then , for every set @xmath606 , @xmath607 is @xmath599-saturated .",
    "[ fx+one ] .  note that @xmath608 .",
    "[ fx+two].is easy .",
    "[ fx+three ] .",
    "let @xmath609 , @xmath48 and @xmath610 .",
    "then , by theorem  [ conf].[conftwo ] , @xmath611 and @xmath612 .",
    "since @xmath605 is @xmath599-saturated , then @xmath613 .",
    "thus , @xmath614 .",
    "we interpret basic types as saturated sets .",
    "the interpretation of complex types is built up from smaller types in the obvious way .",
    "[ defint ] let @xmath598 .    1 .   [ defintone ]",
    "an @xmath599-interpretation @xmath615 is a function such that : + @xmath616 , @xmath617 is @xmath599-saturated .",
    "[ definttwo ] an @xmath599-interpretation @xmath618 can be extended to @xmath13 as follows : + @xmath619 @xmath620 @xmath621    [ beintiswint ] if @xmath618 is a @xmath91-interpretation then @xmath618 is an @xmath602-interpretation .",
    "use lemma  [ fx+].[fx+one ] .",
    "the next lemma shows that the interpretation of any type ( basic or complex ) is saturated , that the interpretation function respects the relation @xmath145 and that we can in some sense expand the terms in the interpretation .",
    "[ combinedlem ] let @xmath598 and let @xmath618 be an @xmath599-interpretation .    1 .",
    "[ interpret ] for any @xmath622 , we have @xmath623 is @xmath599-saturated .",
    "2 .   [ intsub ]",
    "if @xmath169 , then @xmath624 .",
    "[ neededcombine ] let @xmath40 and @xmath625 , @xmath626 . if @xmath627 ( @xmath63 ) , @xmath628 \\in { \\cal i}(u)$ ] , then + @xmath629 .",
    "[ interpret ] .",
    "by induction on @xmath104 using lemma  [ fx+ ] .",
    "+ [ intsub].by induction of the derivation @xmath169 . [ neededcombine ] .  by induction on @xmath40 using [ interpret ] .",
    "we now show the soundness of our sematics .",
    "[ adeq ] let @xmath630 .",
    "if @xmath631 , @xmath618 is an @xmath599-interpretation and @xmath255 , @xmath632 , then @xmath633 \\in { \\cal i}(u)$ ] .    by induction on the derivation @xmath631 .",
    "* let @xmath634 . if @xmath635 then @xmath636 = n \\in { \\cal i}(t)$ ] .",
    "* let @xmath637 where @xmath638 .",
    "+ we have @xmath633 \\in { \\cal m } = { \\cal i}(\\omega)$ ] .",
    "* let @xmath639 .",
    "+ if @xmath640 then @xmath641 \\in { \\cal i}(u ) \\fx { \\cal i}(t ) = { \\cal m}$ ] . +",
    "if @xmath642 then let @xmath643 . by ih , @xmath644 \\in { \\cal i}(t)$ ] . by lemma  [ combinedlem].[interpret ] , @xmath645 is @xmath599-saturated .",
    "+ moreover , @xmath646 \\ ; n \\rhd_r^ * p[(x_i:=n_i)_1^n , x:=n]$ ] . hence , + @xmath646 n \\in { \\cal i}(t)$ ] and @xmath641 \\in { \\cal i}(u ) \\fx { \\cal i}(t)$ ] .",
    "* let @xmath647 and @xmath648 .",
    "note that @xmath458 . + by ih , @xmath649 \\in { \\cal i}(t)$ ] .",
    "by lemma  [ combinedlem].[interpret ] , @xmath645 is @xmath599-saturated .",
    "+ moreover , @xmath650 \\ ; n \\rhd_r^ * p[(x_i:=n_i)_1^n]$ ] .",
    "hence + @xmath646 \\ ; n \\in { \\cal i}(t)$ ] and @xmath641 \\in { \\cal i}(\\o ) \\fx { \\cal i}(t)$ ] .",
    "* let @xmath651 where @xmath652 , @xmath653 and @xmath654 .",
    "let @xmath655 , @xmath656 and @xmath657 . by ih , @xmath658 \\in { \\cal i}(u ) \\fx { \\cal i}(t)$ ] and + @xmath659 \\in { \\cal i}(u)$ ] , + then @xmath660 = $ ] + @xmath658 \\ ; m_2[(x_i:=p_i)_1^n,(z_k:=r_k)_1^l ] \\in { \\cal i}(t)$ ] . * let @xmath661 . by ih , @xmath633 \\in { \\cal i}(v_1)$ ] and @xmath633 \\in { \\cal i}(v_2)$ ] .",
    "hence , @xmath633 \\in { \\cal i}(v_1 \\sqcap v_2)$ ] . *",
    "let @xmath662 where @xmath663 .",
    "+ by lemma [ phisub].[phisubthree ] and [ phisub].[phisubtwo ] , @xmath664 , @xmath665 , @xmath236 and @xmath311 . by lemma [ combinedlem].[intsub ] , @xmath666 , then , by ih , @xmath633 \\in { \\cal i}(u')$ ] and , by lemma [ combinedlem].[intsub ] , @xmath633 \\in { \\cal i}(u)$ ]",
    ".    roughly speaking , completeness of the semantics amounts to saying that if @xmath26 is in the meaning of type @xmath104 ( i.e. , @xmath26 is in @xmath623 for any interpretation @xmath618 ) then @xmath26 has type @xmath104 . in order to show completeness",
    ", we define a special interpretation function @xmath667 through the typing relation @xmath668 in such a way that , if @xmath669 then @xmath26 can be shown to have type @xmath104 .",
    "this is done in the next definition and lemma .",
    "[ finalintfunc ]    1 .",
    "[ finalintfuncone ] for every @xmath158 , let an infinite subset @xmath670 of @xmath17 such that : + @xmath671 if @xmath672 , then @xmath673",
    ". @xmath671 @xmath674 .",
    "[ finalintfunctwo ] we denote @xmath675 / @xmath104 is a type and @xmath676 . note that since @xmath677 is infinite , @xmath677 is not a type environment .",
    "[ finalintfuncthree ] let @xmath678 and @xmath158 .",
    "we write @xmath679 if there is a type environment @xmath680 such that @xmath681 .",
    "[ finalintfuncfour ] let @xmath682 be the function defined by : + @xmath616 , @xmath683 / @xmath684 .",
    "[ useremark ] note that in definition  [ finalintfunc ] , we have associated to each @xmath158 , an infinite set of variables @xmath670 in such a way that no variable is used in two different types , and each variable of @xmath17 is associated to a type .",
    "obviously , as long as these conditions are satisfied , we have the liberty of dividing the set @xmath17 as we wish .",
    "we will practice this liberty in the proof of theorem  [ comple4 ] .",
    "[ comp ]    1 .",
    "[ compone ] if @xmath685 and @xmath231 , then @xmath686 .",
    "[ compone  ] if @xmath685 , then @xmath687 .",
    "[ compone ] @xmath667 is a @xmath91-interpretation .",
    "i.e. , @xmath616 , @xmath688 is @xmath91-saturated . + hence , @xmath667 is an @xmath602-interpretation . +",
    "furthermore , we extend @xmath667 to @xmath13 as in definition  [ defint].[definttwo ] .",
    "[ comptwo ] if @xmath158 , then @xmath689 and @xmath690 / @xmath691 .",
    "* let @xmath692 and @xmath693 . hence , @xmath694 and @xmath695 and so , @xmath696 ( otherwise , @xmath697 ) .",
    "* let @xmath698 and @xmath699 where @xmath700 for all @xmath701 and @xmath702 . since @xmath703 and @xmath704 , by [ compone ] , @xmath705 for all @xmath63 .",
    "hence , @xmath706 .",
    "* let @xmath707 , @xmath708 , @xmath709 and @xmath710 .",
    "then @xmath711 where @xmath712 .",
    "let @xmath713 and @xmath665 , take @xmath714 such that @xmath715",
    ". then @xmath716 and @xmath717 .",
    "by corollary  [ finalbetaexp ] , @xmath718 and , by lemma  [ phisub].[phisubtwo ] , @xmath719 .",
    "hence , by rule @xmath145 , @xmath720 .",
    "thus , @xmath721 .",
    "hence @xmath688 is @xmath91-saturated and so , @xmath667 is a @xmath91-interpretation .",
    "finally , by lemma  [ beintiswint ] , @xmath667 is an @xmath602-interpretation . *",
    "the proof of @xmath689 is as follows : let @xmath722 .",
    "then , @xmath723 and since @xmath724 then @xmath725 .",
    "+ now we do the second part by induction on @xmath104 .",
    "* * @xmath726 : by definition of @xmath667 . *",
    "* @xmath280 : by definition , @xmath727 .",
    "so , @xmath728 / @xmath729 .",
    "+ conversely , let @xmath730 where @xmath126 .",
    "we have @xmath731 .",
    "@xmath665 , take @xmath714 such that @xmath732 . then @xmath733 . by lemma  [ structyping].[structypingtwo ] , @xmath734 .",
    "hence @xmath735 .",
    "thus , @xmath736 / @xmath737 .",
    "+ we deduce @xmath738 / @xmath739 . *",
    "* @xmath740 : by ih , @xmath741 + @xmath728 / @xmath742 / @xmath743 . * * * if @xmath744 and @xmath745 , then @xmath746 and @xmath747 where @xmath748 . by lemma  [ structyping].[structypingone ] , @xmath749 . by lemma",
    "[ newrules].[newrulesone ] , @xmath750 . since @xmath751 , then , by  [ compone ] , @xmath752 and @xmath753 .",
    "thus @xmath754 . *",
    "* * if @xmath755 , then @xmath756 where @xmath757 .",
    "by @xmath145 , @xmath758 and @xmath759 , then @xmath744 and @xmath760 .",
    "+ we deduce @xmath761 / @xmath762 . *",
    "* @xmath763 : then @xmath764 . by ih , + @xmath765 / @xmath766 and @xmath767 / @xmath768 .",
    "* * * let @xmath769 and @xmath770 such that @xmath76 . by rule @xmath771",
    "( see lemma  [ newrules].[newrulestwo ] ) , @xmath772 . since @xmath773 , then @xmath774 . by ih , @xmath775 .",
    "hence @xmath776 and so @xmath777 where @xmath778 .",
    "since @xmath76 , then @xmath779 and @xmath780 . by lemma  [ newgen].[newgenfour ]",
    ", we deduce that @xmath781 . *",
    "* * let @xmath782 such that @xmath783 and @xmath784 .",
    "we have @xmath785 and @xmath786 where @xmath748 .",
    "thus @xmath787 .",
    "since , by lemma  [ comp].[compone]@xmath788 . therefore @xmath789 .",
    "+ we deduce @xmath790 / @xmath791 .",
    "now , the @xmath667 of definition  [ finalintfunc ] will be used to show the completeness of the semantics .",
    "[ completude ] let @xmath630 .",
    "let @xmath792 and @xmath793 such that @xmath126 . if @xmath794 @xmath599-interpretation @xmath795 and @xmath627 ( @xmath63 ) , @xmath796 \\in { \\cal i}(u)$ ] , then @xmath797 .",
    "we distinguish three cases :    * if @xmath280 , then @xmath798 .",
    "thus , by lemma  [ structyping].[structypingtwo ] , @xmath799 . *",
    "if @xmath528 , then , let @xmath800 . by hypothesis and lemma  [ combinedlem].[neededcombine ] , @xmath794 @xmath599-interpretation @xmath618 , @xmath801 .",
    "hence , @xmath802 where @xmath803 is the interpretation of definition  [ finalintfunc].[finalintfuncfour ] . by lemma  [ comp].[comptwo ] , @xmath804 where @xmath680 and , since @xmath805 is closed , @xmath806 . by rule @xmath771 , @xmath665 , @xmath807 , by @xmath251 applications of @xmath400 we deduce @xmath808 . since @xmath809 , then by corollary  [ finalbetaeta ] , @xmath810 . *",
    "if @xmath811 , then , by hypothesis , @xmath794 @xmath599-interpretation @xmath618 , @xmath627 ( @xmath812 ) , and @xmath813 , @xmath796 \\in { \\cal i}(t_j)$ ] . by the previous case , @xmath813 , @xmath814 .",
    "by @xmath815 applications of @xmath278 we deduce @xmath810 .",
    "obviously the meaning of a type @xmath104 should be based on the intersection of all the interpretations of @xmath104 . however , since we have been using two different kinds of interpretations ( @xmath91- and @xmath602-interpretations ) , we give two definitions for the meaning of a type .",
    "we will show that these two definitions are equivalent .",
    "[ meaningopen ] let @xmath598 .",
    "we define the meaning @xmath816_r$ ] of @xmath817 by :    @xmath818_r=   \\bigcap_{{\\cal i } \\;\\;\\ ; r - interpretation } { \\cal i}(u)\\ ] ]    the next theorem shows that the meaning @xmath816 $ ] of @xmath104 is the set of terms typable by @xmath104 in a special environment and that @xmath816 $ ] is stable by @xmath1-reduction and @xmath1-expansion .",
    "[ comple4 ] let @xmath598 and @xmath819 .",
    "1 .   [ comple4one ] @xmath816_r = \\{m \\in { \\cal m}$ ] / @xmath820 .",
    "[ comple4two ] @xmath816_r$ ] is stable by @xmath1-reduction .",
    "i.e. , if @xmath821_r$ ] and @xmath822 , then @xmath823_r$ ] .",
    "[ comple4three ] @xmath816_r$ ] is stable by @xmath1-expansion .",
    "i.e. , if @xmath821_r$ ] , @xmath824 , then @xmath823_r$ ] .",
    "[ comple4one ] @xmath816_r = \\{m \\in { \\cal m}$ ] / @xmath822 and @xmath825 .",
    "* let @xmath793 such that @xmath826 .",
    "let @xmath618 be an @xmath599-interpretation and take @xmath827 . by theorem",
    "[ adeq ] , since @xmath255 , @xmath828 , then @xmath829 \\in { \\cal i}(u)$ ] .",
    "hence , @xmath821_r$ ] .",
    "+ conversely , let @xmath821_r$ ] .",
    "take the interpretation @xmath667 given in definition  [ finalintfunc ] such that ( recall remark  [ useremark ] ) @xmath830 . since @xmath831 then @xmath832 where @xmath833 .",
    "but @xmath830 and by lemma  [ structyping].[structypingone ] , @xmath834 .",
    "hence @xmath240 .",
    "+ we conclude that @xmath816_r = \\{m \\in { \\cal m}$ ] / @xmath820 .",
    "* let @xmath821_r$ ] such that @xmath822 . by  [ comple4one ] , @xmath835 . by subject reduction for @xmath1 corollary  [ finalbetaeta ] , @xmath836 . since by theorem  [ conf].[confone ] , @xmath415 then @xmath837 .",
    "thus by [ comple4one ] , @xmath823_r$ ] .",
    "* let @xmath821_r$ ] such that @xmath824 . by  [ comple4one ] , @xmath838 . by subject expansion for @xmath1 corollary  [ finalbetaexp ] , @xmath839 . since by theorem  [ conf].[confone ] , @xmath840 then @xmath841 .",
    "thus by [ comple4one ] , @xmath823_r$ ] . * by  [ comple4one ] , @xmath816_r \\subseteq \\{m \\in { \\cal m}$ ] / @xmath822 and @xmath825 .",
    "conversely , let @xmath822 and @xmath842 . by  [ comple4one ] , @xmath823_r$ ] .",
    "hence , by  [ comple4three ] , @xmath821_r$ ] .",
    "let @xmath158 .",
    "we have that @xmath816_f = [ u]_\\be$ ] .    by theorem  [ comple4].[comple4one ] , @xmath816_f = [ u]_\\be = \\{m \\in { \\cal m}$ ] / @xmath820 .",
    "hence , we write @xmath816 $ ] instead of either @xmath816_f$ ] or @xmath816_\\be$ ] .",
    "[ remarkme ] the reader may ask here why we introduced the two notions of saturation if the meaning of a type does not depend on whether this meaning was made using @xmath91-interpretations or @xmath602-interpretations .",
    "the answer to this question is that up to here , we could equally use @xmath91-interpretations or @xmath602-interpretations .",
    "however , to establish further results related to the meaning of types , especially for those types whose meaning consists of terms that reduce to closed terms , then we need @xmath91-saturation . for this reason , in the rest of paper , we only consider @xmath91-saturation .",
    "let us now reflect further on the meaning of types as given in definition  [ meaningopen ] .",
    "the next lemma gives three examples .",
    "[ example ] let @xmath707 , @xmath843 , @xmath844 and + @xmath845 .",
    "we have :    1 .",
    "@xmath816 = \\ { m \\in { \\cal",
    "m } / m \\rb^ * \\l x. \\l y. y\\}$ ] .",
    "note that @xmath846 .",
    "@xmath847 = \\ { m \\in { \\cal m } / m \\rb^ * \\l x. \\l y. x\\}$ ] .",
    "note that @xmath848 .",
    "@xmath849 = \\ { m \\in { \\cal m } / m \\rb^ * \\l x. x p$ ] where @xmath850 . + note that @xmath851 .    1 .",
    "it is easy to show that @xmath846 .",
    "note that @xmath852 . hence , @xmath853 $ ] by theorem  [ comple4].[comple4one ] .",
    "+ conversely , let @xmath821 $ ] and @xmath854 .",
    "take the @xmath91-interpretation @xmath618 such that @xmath855 .",
    "since @xmath821 $ ] then @xmath856 .",
    "let @xmath857 such that @xmath293 .",
    "since @xmath858 and @xmath859 , then @xmath860 , @xmath861 and by theorem  [ conf].[conftwo ] , @xmath862 .",
    "it is easy to show that @xmath848 .",
    "let @xmath618 be a @xmath91-interpretation . by theorem  [ adeq ] , @xmath863 . by lemma  [ combinedlem].[interpret ]",
    ", @xmath864 is @xmath91-saturated .",
    "hence , @xmath865 .",
    "thus , @xmath866 $ ] .",
    "+ conversely , let @xmath867 $ ] and @xmath868 .",
    "take the @xmath91-interpretation @xmath618 such that @xmath869 .",
    "since @xmath867 $ ] then @xmath870 .",
    "let @xmath488 such that @xmath871 .",
    "we have @xmath872 and @xmath873 , then @xmath874 and @xmath875 .",
    "thus , by theorem  [ conf].[conftwo ] , @xmath876 .",
    "3 .   let @xmath51 .",
    "using lemma  [ structyping].[structypingtwo ] , we can show that @xmath851 ( irrespectively of whether @xmath452 or not ) .",
    "now , @xmath877 $ ] by theorem  [ comple4].[comple4one ] .",
    "+ conversely , let @xmath878 $ ] and @xmath293 .",
    "take the @xmath91-interpretation @xmath618 such that @xmath879 where @xmath880 .",
    "then @xmath881 .",
    "since @xmath882 , then @xmath883 and @xmath884 where @xmath51 .",
    "thus , by theorem  [ conf].[conftwo ] , @xmath885 where @xmath886 .",
    "the meanings of the types @xmath104 and @xmath105 ( of lemma  [ example ] ) contain only terms which are reduced to closed terms . due to the position of @xmath0 in @xmath106 ,",
    "the meaning of @xmath106 does not solely contain terms which are reduced to closed terms . in @xmath104 and @xmath105",
    ", @xmath0 has a negative occurence , but in @xmath106 , @xmath0 has a positive one .",
    "we will generalize this result .    1 .",
    "we define two subsets @xmath3 and @xmath887 of @xmath13 as follows : * @xmath616 , @xmath888 and @xmath889 .",
    "* @xmath890 . *",
    "if @xmath891 , then @xmath892 .",
    "* if @xmath893 , then @xmath894 . *",
    "if @xmath895 and @xmath896 , then @xmath897 . * if @xmath898 and @xmath899 , then @xmath900 .",
    "2 .   let @xmath901 where @xmath902 . 1 .",
    "we say that a term @xmath26 is @xmath903-almost closed if @xmath822 and @xmath904 .",
    "we denote @xmath905 the set of @xmath903-almost closed terms .",
    "we define the function @xmath906 by : @xmath616 , @xmath907 .",
    "the next lemma shows that @xmath908 is a @xmath91-interpretation and relates @xmath909 and @xmath905 according to whether @xmath910 or @xmath911 .",
    "[ key ] let @xmath901 where @xmath902 .    1 .   [ keyzero ] @xmath908 is a @xmath91-interpretation .",
    "i.e. , @xmath616 , @xmath912 is @xmath91-saturated . +",
    "hence , we extend @xmath908 to @xmath13 as in definition  [ defint].[definttwo ] .",
    "[ keyone ] if @xmath891 , then @xmath913 .",
    "[ keytwo ] if @xmath914 , then @xmath915 .    [ keyzero ] .",
    "easy since @xmath907 which is @xmath91-saturated ( use theorem  [ conf].[confone ] ) .",
    "+ we show [ keyone ] and [ keytwo ] by simultaneous induction on @xmath104 .",
    "* let @xmath891 and @xmath916 . *",
    "* if @xmath726 , the result comes by definition of @xmath917 . * * if @xmath740 and @xmath918 , then @xmath919 and , by ih , @xmath920 . * * if @xmath763 , @xmath921 and @xmath896 , then let @xmath922 .",
    "we have @xmath923 , then , by ih , @xmath924 and @xmath925 . by ih , @xmath926 , then @xmath927 and @xmath904 .",
    "we examine the reduction @xmath928 . * * * if @xmath929 and @xmath930 , then @xmath931 . *",
    "* * if @xmath932 and @xmath933 \\rb^ * n$ ] , then + @xmath934 \\rb^ * \\l x. n$ ] and @xmath935 .",
    "+ then @xmath936 and @xmath937 .",
    "thus @xmath938 . *",
    "let @xmath914 and @xmath939 .",
    "* * if @xmath726 , the result comes by definition of @xmath917 . * * if @xmath280 , then @xmath940 . * * if @xmath740 and @xmath941 , then , by ih , @xmath919 and @xmath942 , then @xmath943 . * * if @xmath763 , @xmath944 and @xmath899 , then let @xmath945 .",
    "we have @xmath822 and @xmath904 . by ih , @xmath946 , then @xmath947 and @xmath948 .",
    "we have @xmath949 and @xmath950 , then @xmath951 , and , by ih , @xmath952 .",
    "thus @xmath953 .",
    "the next corollary shows that if @xmath954 then @xmath816 $ ] contains only elements which @xmath1-reduce to closed terms and @xmath816 $ ] is the set of all terms that @xmath91-reduce to closed terms typable by @xmath104 .",
    "note that in the proof of  [ comple2one ] below , we need @xmath1-saturation and that this is the reason why we adopted exclusively @xmath91-saturation since remark  [ remarkme ] .",
    "[ key2 ] let @xmath891 .    1",
    ".   [ key2one ] if @xmath821 $ ] , then @xmath822 and @xmath27 is closed .",
    "[ comple2one ] @xmath816 = \\{m \\in { \\cal m}$ ] / @xmath822 and @xmath955 .",
    "* let @xmath956 such that @xmath902 and @xmath957 . since @xmath821 $ ] , then @xmath958 , and , by lemma  [ key ] , @xmath822 and @xmath959 .",
    "but , by theorem  [ conf].[confone ] , @xmath960 , then @xmath961 . *",
    "let @xmath821 $ ] .",
    "by lemma  [ comp].[comptwo ] , @xmath535 . by  [ key2one ] ,",
    "@xmath822 and @xmath27 is closed . hence by subject reduction for @xmath1 corollary  [ finalbetaeta ] , @xmath962 . since @xmath27 is closed @xmath963 .",
    "+ conversely , let @xmath26 such that @xmath822 and @xmath964 , and take a @xmath91-interpretation @xmath618 . by theorem [ adeq ] , @xmath965 and , since @xmath623 is @xmath91-saturated , @xmath966 .",
    "then @xmath967 and so , @xmath821 $ ] .",
    "note that neither strong nor weak normalisation holds in general for typable terms .",
    "for example , @xmath968 . as another example",
    ", take @xmath969 by lemma  [ example ] .",
    "we can not even establish a strong normalisation result for positive types .",
    "for example , @xmath970 . in what follows however , we will establish a weak normalisation result for positive types .",
    "we define the function @xmath971 by : @xmath616 , @xmath972 where @xmath973 is the set of @xmath1-normalising terms .",
    "[ newkey ]    1 .",
    "[ newkeyzero ] @xmath618 is a @xmath91-interpretation .",
    "i.e. , @xmath616 , @xmath617 is @xmath91-saturated . +",
    "hence , we extend @xmath618 to @xmath13 as in definition  [ defint].[definttwo ] .",
    "[ newkeyone ] if @xmath891 , then @xmath974 .",
    "3 .   [ newkeytwo ]",
    "let @xmath975 .",
    "note , @xmath976 .",
    "+ if @xmath977 , then @xmath978 .    [ newkeyzero ]",
    "is obvious .",
    "we show [ newkeyone ] and [ newkeytwo ] by simultaneous induction on @xmath104",
    ".    * let @xmath979 and @xmath980 . * * if @xmath726 , the result comes by definition of @xmath981 . * * if @xmath982 and @xmath918 , then @xmath983 and , by ih , @xmath984 . * * if @xmath763 , @xmath921 and @xmath896 , then let @xmath985 such that @xmath868 . by ih , @xmath986 and @xmath987 . by ih , @xmath988 .",
    "hence , by theorem  [ conf].[conftwo  ] , @xmath984 . * let @xmath914 and @xmath989 . *",
    "* if @xmath726 , the result comes by definition of @xmath981 . * * if @xmath280 , then @xmath990 . * * if @xmath740 and @xmath991 , then , by ih , @xmath983 and @xmath992 , then @xmath993 . * * if @xmath763 , @xmath994 and @xmath995 , then let @xmath996 .",
    "we have @xmath997 where @xmath998 for @xmath999 . by ih , @xmath1000 .",
    "hence , @xmath1001 and by ih , @xmath1002 .",
    "thus @xmath1003 .",
    "the next corollary shows that if @xmath954 then @xmath816 $ ] contains only elements which are normalisable .",
    "[ newkey2 ] let @xmath891 .    1",
    ".   [ newkey2one ] if @xmath821 $ ] , then @xmath26 is normalisable .",
    "[ newnew ] if @xmath1004 then @xmath26 is normalisable .",
    "[ newcomple2one ] @xmath816 = \\{m \\in { \\cal m}$ ] / @xmath822 , @xmath27 is in normal form and @xmath955 .    * by lemma  [ newkey ] , @xmath821 \\subseteq { \\cal i}(u ) \\subseteq { \\cal n}$ ] .",
    "* by theorem  [ adeq ] , @xmath980 . by lemma  [ newkey ] , @xmath984 .",
    "* let @xmath821 $ ] . by corollary  [ key2].[comple2one ] , @xmath929 and @xmath1005 .",
    "since by  [ newkey2one ] , @xmath26 is normalisable then by church - rosser @xmath94 is normalising .",
    "let @xmath27 be the normal form of @xmath94 . by subject reduction corollary  [ finalbetaeta ] , @xmath1006 .",
    "+ the inverse inclusion is obvious by corollary  [ key2].[comple2one ] .    it should be noted that positive types are not exlusively the types which satisfy the properties proved about them ( e.g. , corollary  [ key2 ] ) . for example , let us take the non - positive type @xmath1007 where @xmath1008 and @xmath1009 are different",
    ". we can show that @xmath1010 $ ] only contains terms which reduce to the closed term @xmath1011 ( and that @xmath1012 ) .",
    "hence , @xmath1013 is a type which is not positive , yet for which corollary  [ key2 ] holds .",
    "note that , since @xmath1008 and @xmath1009 are different , then @xmath1014 can not be used in type derivations .",
    "in this article , we considered an elegant intersection type system for which we established basic properties which include the subject reduction and expansion properties for @xmath1 .",
    "we gave this system a realisability semantics and we showed its soundness and completeness using a method comparable to ( yet more detailed than ) hindley s completeness semantics for an earlier intersection type system .",
    "the basic difference between both proofs is that hindley s notion of saturation is based on equivalence classes whereas ours is based on a weaker requirement of weak head normal forms .",
    "hence , all of hindley s saturated models are also saturated in our framework yet on the other hand , there are saturated models based on weak head normal form which can not be models in hindley s framework .",
    "this means that our method provides a larger set of possible models and this leaves the choice open for better models or counter - models for particular applications .",
    "we have even proved that for different notions of saturation ( based on weak head reduction and normal @xmath1-reduction ) we obtain the same interpretation for types .",
    "another difference between our approach and that of hindley is that he constructs his models modulo the convertibility relation , whereas we establish that the interpretation of types is stable by both @xmath1-reduction and @xmath1-expansion .",
    "furthermore , we reflected on the meaning of types , especially on the so - called abstract data types where typability and realisability coincide .",
    "the presence of @xmath1015 in intersection type systems prevents typability and realisability from coinciding as one sees for example in @xmath1016 ( where @xmath94 may contain free variable and may not be normalisable ) whose type is @xmath1017 .",
    "we found a set of types @xmath3 for which we showed that typability and realisability coincide .",
    "we have also shown that this set satisfies the weak normalisation property .",
    "we are grateful for the comments received from m.  dezani , j.r .",
    "hindley , v.   rahli , j.b .  wells and the anonymous referee .",
    "s. carlier and j.b .",
    "wells , _ expansion : the crucial mechanism for type inference with intersection types : a survey and explanation_. under consideration for publication in the journal of functional programming .",
    "patrick sall .",
    "_ une extension de la thorie des types en lambda - calcul_. in g. ausiello and corrado bhm , editors , fifth international conference on automata , languages and programming , volume 62 of lecture notes in computer science , pp .",
    "398 - 410 .",
    "springer , july 1978 ."
  ],
  "abstract_text": [
    "<S> in this paper we consider a type system with a universal type @xmath0 where any term ( whether open or closed , @xmath1-normalising or not ) has type @xmath0 . </S>",
    "<S> we provide this type system with a realisability semantics where an atomic type is interpreted as the set of @xmath2-terms saturated by a certain relation . </S>",
    "<S> the variation of the saturation relation gives a number of interpretations to each type . </S>",
    "<S> we show the soundness and completeness of our semantics and that for different notions of saturation ( based on weak head reduction and normal @xmath1-reduction ) we obtain the same interpretation for types . </S>",
    "<S> since the presence of @xmath0 prevents typability and realisability from coinciding and creates extra difficulties in characterizing the interpretation of a type , we define a class @xmath3 of the so - called positive types ( where @xmath0 can only occur at specific positions ) . </S>",
    "<S> we show that if a term inhabits a positive type , then this term is @xmath1-normalisable and reduces to a closed term . in other words , </S>",
    "<S> positive types can be used to represent abstract data types . </S>",
    "<S> the completeness theorem for @xmath3 becomes interesting indeed since it establishes a perfect equivalence between typable terms and terms that inhabit a type . </S>",
    "<S> in other words , typability and realisability coincide on @xmath3 . </S>",
    "<S> we give a number of examples to explain the intuition behind the definition of @xmath3 and to show that this class can not be extended while keeping its desired properties . </S>"
  ]
}
{
  "article_text": [
    "labeled transition systems constitute a fundamental model of concurrent computation .",
    "processes are captured by explicitly describing their states and the transitions from state to state together with the actions that produce these transitions .",
    "a wide range of notions of behavioral semantics have been proposed , with the aim to identify those states that afford the same observations .",
    "notably , van glabbeek @xcite presented the ",
    "_ linear time  branching time spectrum _ i \" of behavioral semantics for finitely branching , _ concrete _ , .",
    "_ abstract _ processes , with @xmath1 , come with _",
    "strong _ semantics , treating @xmath1 just as any other action , or _",
    "weak _ ones , allowing a degree of abstraction from @xmath1 steps . ] sequential processes .",
    "these semantics are based on simulation notions or on decorated traces .",
    "[ fig : spectrum ] depicts this spectrum , where an arrow from one semantics to another means that the target of the arrow is coarser , i.e.  less discriminating , than the source . in @xcite ,",
    "155 weak semantics , which take into account the hidden action @xmath1 , are surveyed .",
    "they constitute the  _ linear time  branching time spectrum _ ii \" for finitely branching , _ abstract _ , sequential processes .    in this paper",
    ", we mainly study impossible futures semantics @xcite , which is a natural variant of possible futures semantics @xcite .",
    "it is also related to fair testing semantics @xcite .",
    "weak impossible futures equivalence is the coarsest congruence with respect to choice and parallel composition that contains weak bisimilarity with explicit divergence , respects deadlock / livelock traces , and assigns unique solutions to recursive equations @xcite .",
    "the process algebra bccsp plays a fundamental role in the study of concrete semantics .",
    "it contains only basic process algebraic operators from ccs and csp , but is sufficiently powerful to express all finite synchronization trees ( without @xmath1-transitions ) .",
    "van glabbeek @xcite associated with most behavioral equivalences in his spectrum a _ sound _ axiomatization , to equate closed bccsp terms that are behaviorally equivalent .",
    "these axiomatizations were shown to be _ ground - complete _ , meaning that all behaviorally equivalent closed bccsp terms can be equated .",
    "the process algebra bccs ( see , e.g. , @xcite ) extends bccsp with @xmath1 , playing the same role as bccsp in the research of weak semantics .",
    "an _ @xmath0-complete _",
    "axiomatization enjoys the property that if all closed instances of an equation can be derived from it , then the equation itself can be derived from it . in universal algebra , such an axiomatization",
    "is referred to as a _ basis _ for the equational theory of the algebra it axiomatizes .",
    "groote @xcite developed a technique of `` inverted substitutions '' to prove that an axiomatization is @xmath0-complete , and proved for some equivalences in the  linear time  branching time spectrum i \" that their equational theory in bccsp has a finite basis .",
    "in @xcite , for each preorder and equivalence in the  linear time  branching time spectrum i \" it was determined whether a finite , sound , ground - complete axiomatization exists .",
    "and if so , whether a finite basis exists for the ( in)equational theory .",
    "however , for concrete impossible futures semantics the ( in)equational theory remained unexplored .    with regard to the axiomatizability of weak semantics , relatively little is known compared to concrete semantics .",
    "for some semantics in the  linear time  branching time spectrum ii \" @xcite , a sound and ground - complete axiomatization has been given , in the setting of bccs ( see , e.g. , @xcite ) .",
    "moreover , a finite basis has been given for weak , delay , @xmath2- and branching bisimulation semantics @xcite .",
    "the inequational theory of bccs modulo the weak impossible futures preorder was studied in @xcite , which offers a finite , sound , ground - complete axiomatization .",
    "voorhoeve and mauw also proved that their axiomatization is @xmath0-complete .",
    "it is worth noting that an infinite alphabet of actions is assumed implicitly @xcite , because a different action is required for each variable .",
    "the current paper studies the axiomatizability of bccsp and bccs for semantics at least as coarse as impossible futures semantics . in summary ,",
    "we obtain the following results .    1 .",
    "a link is established between the axiomatizability of concrete and weak semantics .",
    "for any semantics at least as coarse as impossible futures semantics , an algorithm is provided to turn a ground - complete axiomatization of the _ concrete _ version into a ground - complete axiomatization of the corresponding _ weak _ version . moreover ,",
    "if the former axiomatization is @xmath0-complete , then so is the latter .",
    "2 .   as an application of this algorithm , we derive finite , sound , ground- and @xmath0-complete axiomatizations for the weak _ trace _ , _ completed trace _ and _ failures _ preorders and equivalences . failures semantics plays a prominent role in the process algebra csp @xcite . for convergent processes , it coincides with testing semantics @xcite , and thus is the coarsest congruence for the ccs parallel composition that respects deadlock behavior .",
    "a ground - complete axiomatization for weak failures equivalence was already given in @xcite .",
    "we provide a finite , sound , ground - complete axiomatization for bccsp modulo the concrete impossible futures _ preorder",
    "_ @xmath3 .",
    "( by contrast , no such axiomatization exists for the _ possible _ futures preorder @xcite . ) using ( 1 ) , a finite , sound , ground - complete axiomatization for the _ weak _ impossible futures preorder @xmath4 is obtained .",
    "we prove that bccs modulo weak impossible futures _ equivalence _ @xmath5 does not have a finite , sound , ground - complete axiomatization .",
    "likewise , we prove that bccsp modulo @xmath6 does not have a finite , sound , ground - complete axiomatization .",
    "the infinite families of equations that we use to prove these negative results are also sound modulo ( weak resp .",
    "concrete ) 2-nested simulation equivalence .",
    "therefore these negative results apply to all bccs- and bccsp - congruences that are at least as fine as impossible futures equivalence and at least as coarse as 2-nested simulation equivalence .",
    "this infers some results from @xcite , where among others concrete 2-nested simulation and possible futures equivalence were considered . 5 .",
    "we investigate @xmath0-completeness for impossible futures semantics .",
    "first , we prove that if the alphabet of actions is _ infinite _ , then the aforementioned ground - complete axiomatization for bccs modulo @xmath3 is @xmath0-complete . here",
    "we apply the technique of inverted substitutions from @xcite .",
    "only , that technique was originally developed for equivalences .",
    "therefore , as an aside , we adapt this technique in such a way that it applies to preorders . by ( 1 ) , this result carries over to @xmath4 .",
    "second , we prove that in case of a _ finite _ alphabet of actions , the inequational theories of bccs modulo @xmath4 and of bccsp modulo @xmath3 do not have a finite basis .",
    "to achieve the negative results , we employ what in ( * ? ? ?",
    "2.3 ) is called the proof - theoretic technique .",
    "that is , to prove the nonexistence of a finite axiomatization for an equivalence @xmath7 ( resp .",
    "preorder @xmath8 ) , it suffices to provide an infinite family of ( in)equations @xmath9 ( resp .",
    "@xmath10 ) ( @xmath11 ) that are all sound modulo @xmath7 ( resp .",
    "@xmath8 ) , and to associate with every finite set of sound ( in)equations @xmath12 a property @xmath13 that holds for all ( in)equations derivable from @xmath12 , but does not hold for at least one of the equations @xmath14 ( resp",
    ".  inequations @xmath10 ) .",
    "this implies that @xmath14 ( resp .",
    "@xmath10 ) is not derivable from @xmath12 .",
    "it follows that every finite set of sound ( in)equations is necessarily incomplete , so @xmath7 ( resp .",
    "@xmath8 ) lacks a finite axiomatization . on top of this , a saturation principle is introduced , to transform a single summand into a large collection of semi - saturated summands .",
    "impossible futures semantics is the first example that , in the context of bccsp / bccs , affords a ground - complete axiomatization modulo the preorder , while missing a ground - complete axiomatization modulo the equivalence .",
    "this surprising fact suggests that if one wants to show @xmath15 , in general one has to resort to deriving @xmath16 and @xmath17 separately , instead of proving it directly . in @xcite",
    "an algorithm is presented which produces from an axiomatization for bccsp modulo a preorder , an axiomatization for bccsp modulo the associated equivalence .",
    "if the original axiomatization for the preorder is ground - complete or @xmath0-complete , then so is the resulting axiomatization for the equivalence . in @xcite",
    ", we have shown that the same algorithm applies equally well to weak semantics .",
    "however , these algorithms apply only to semantics that are at least as coarse as ready simulation semantics .",
    "since impossible futures semantics is incomparable to ready simulation semantics , it falls outside the scope of @xcite .",
    "interestingly , our results yield that no such algorithm can exist for impossible futures semantics .",
    "the paper is structured as follows .",
    "[ sec2 ] presents basic definitions regarding the studied semantics , the process algebra s bccsp and bccs , and ( in)equational logic .",
    "[ sec : link ] describes a transformation of an axiomatization for a concrete to an axiomatization for a corresponding weak semantics . in sect .",
    "[ sec : apps ] this transformation is applied to failures , completed trace and trace semantics .",
    "[ sec : ground ] provides finite , sound , ground - complete axiomatizations for @xmath3 and @xmath4 ; it also presents the aforementioned negative result for @xmath18 and @xmath5 .",
    "[ sec : omega ] is devoted to the proofs of the positive and negative results regarding @xmath0-completeness .",
    "[ sec : con ] concludes the paper .",
    "this paper combines and extends two previous papers in conference proceedings @xcite and @xcite .",
    "in particular , @xcite dealt with the concrete impossible futures semantics and @xcite extended it to weak impossible futures and weak failures semantics . here , new results are presented in sect .",
    "[ sec : link ] , which yield a much simplified proof for the results regarding weak failures semantics given in @xcite , and a unified treatment of concrete and weak impossible futures semantics .",
    "let @xmath19 be a nonempty , countable set of _ concrete _ ( a.k.a .",
    "_ observable _ , _ external _ , _ visible _ ) actions , which is ranged over by @xmath20 .",
    "the distinguished symbol @xmath1 denotes a _ hidden _",
    "_ unobservable _ , _ internal _ , _ invisible _ ) action .",
    "we assume that @xmath21 and write @xmath22 for @xmath23 , which is ranged over by @xmath24 .",
    "a _ labeled transition system _ ( lts ) consists of a set of _ states _",
    "@xmath25 , with typical element @xmath26 , and a _ transition relation _ @xmath27 .",
    "we introduce some notation : @xmath28 means @xmath29 is an element of @xmath30 ; by @xmath31 we denote that @xmath28 for some @xmath32 , and @xmath33 is the negation of this property ; for @xmath34 a sequence of labels , @xmath35 means there exist states @xmath36 such that @xmath37 ; the empty sequence is denoted by @xmath38 ; we define @xmath39 ; we write @xmath40 for the transitive - reflexive closure of @xmath41 , i.e. , @xmath42 ; and @xmath43 means there are two states @xmath44 with @xmath45 .",
    "[ def : traces ]     * a sequence @xmath46 with @xmath47 is a _ trace _ of a state @xmath26 if there is a state @xmath32 such that @xmath48 .",
    "it is a _ completed trace _ of @xmath26 if moreover @xmath49 .",
    "we write @xmath50 ( resp .",
    "@xmath51 ) for the set of traces ( resp .  completed traces ) of state @xmath26 .",
    "we write @xmath52 ( resp .",
    "@xmath53 ) if @xmath54 ( resp .  @xmath55 ) . is defined to hold iff @xmath55 _ and _ @xmath54 . here",
    "we can skip the latter condition , as we will work with finite transition systems , where @xmath55 implies @xmath54 . ] * a sequence @xmath46 with @xmath47 is a _ weak trace _ of a state @xmath26 if there is a state @xmath32 such that @xmath56 .",
    "it is a _ weak completed trace _ of @xmath26 if moreover @xmath49 .",
    "we write @xmath57 ( resp .",
    "@xmath58 ) for the set of weak traces ( resp .  weak completed traces ) of @xmath26 .",
    "we write @xmath59 if @xmath60 . we write @xmath61 if @xmath62 and @xmath63 implies that @xmath64 .    the extra requirement that @xmath63 implies @xmath64 , in the definition of @xmath65 , is needed to make it a precongruence for the process algebra bccs(@xmath19 ) ( see remark  [ rem : precongruence ] ) .",
    "[ def : failures ]     * a pair @xmath66 with @xmath47 , @xmath46 and @xmath67 is a _ failure pair _ of a state @xmath26 if there is a state @xmath32 such that @xmath68 and @xmath69 .",
    "we write @xmath70 if the failure pairs of @xmath71 are also failure pairs of @xmath72 . *",
    "a pair @xmath66 with @xmath47 , @xmath46 and @xmath67 is a _ weak failure pair _ of a state @xmath26 if there is a state @xmath32 such that @xmath73 and @xmath69",
    ". we write @xmath74 if the weak failure pairs of @xmath71 are also weak failure pairs of @xmath72 and @xmath63 implies that @xmath64 .",
    "[ def : impossible - futures ]     * a pair @xmath75 with @xmath47 , @xmath46 and @xmath76 is an _ impossible future _ of a state @xmath26 if @xmath77 for some state @xmath32 with @xmath78 .",
    "we write @xmath79 if the impossible futures of @xmath71 are included in those of @xmath72 .",
    "* a pair @xmath66 with @xmath47 , @xmath46 and @xmath80 is a _ weak impossible future _ of a state @xmath26 if there is a trace @xmath73 with @xmath81 .",
    "we write @xmath82 if the weak impossible futures of @xmath71 are also weak impossible futures of @xmath72 , @xmath83 , and @xmath63 implies that @xmath64 .",
    "the extra requirement that @xmath83 , in the definition of @xmath4 , is again needed to make it a precongruence for bccs(@xmath19 ) ( see remark  [ rem : precongruence ] ) .    given a preorder @xmath84 ,",
    "the associated equivalence is denoted with @xmath85 , where @xmath86 if both @xmath87 and @xmath88 .",
    "bccs(@xmath19 ) is a basic process algebra for expressing finite process behaviors .",
    "its signature consists of the constant @xmath89 , the binary operator @xmath90 , and unary prefix operators @xmath91 , where @xmath24 ranges over @xmath22 .",
    "the process algebra bccsp(@xmath19 ) is obtained by excluding the prefix operator @xmath92 . in the context of process algebra , @xmath19 is called the _ alphabet_. again it is required that @xmath93 .    intuitively , closed bccs(@xmath19 ) terms , which are ranged over by @xmath94 , represent finite process behaviors , where @xmath89 does not exhibit any behavior , @xmath95 offers a choice between the behaviors of @xmath96 and @xmath97 , and @xmath98 executes action @xmath24 to transform into @xmath96 .",
    "this intuition is captured by the transition rules below .",
    "they give rise to @xmath22-labeled transitions between closed bccs(@xmath19 ) terms .",
    "we assume a countably infinite set @xmath99 of variables ; @xmath100 denote elements of @xmath99 , ranging over bccs(@xmath19 ) terms .",
    "open bccs terms , denoted by @xmath102 , may contain variables from @xmath99 .",
    "we write @xmath103 for the set of variables occurring in @xmath104 .",
    "it is technically convenient to extend the operational semantics to open terms .",
    "there are no additional rules for variables , which effectively means that they do not exhibit any behavior .",
    "an occurrence of an action or variable in a term is said to be _ initial _ if it is not in the context of a prefix operator .",
    "the _ depth _ of a term @xmath104 is the length of the _ longest _ trace of @xmath104 .",
    "it is defined inductively as follows : @xmath105 ; @xmath106 ; and @xmath107 . the _ weak depth _",
    "@xmath108 does not count @xmath1-transitions , meaning that it is defined similar to the depth , except @xmath109 .",
    "a ( closed ) substitution , denoted by @xmath110 , maps variables in @xmath99 to ( closed ) terms .",
    "clearly , @xmath111 implies that @xmath112 for all substitutions @xmath113 . for open terms @xmath104 and @xmath114 , and a preorder @xmath8 ( or equivalence @xmath7 ) on closed terms",
    ", we define @xmath115 ( or @xmath116 ) if @xmath117 ( resp.@xmath118 ) for all closed substitutions @xmath119 .",
    "summation @xmath120 or @xmath121 denotes @xmath122 , where summation over the empty set denotes @xmath89 . as binding convention , @xmath90 and summation bind weaker than @xmath91 . for every term @xmath104",
    "there exists a finite set @xmath123 of terms and a finite set @xmath124 of variables such that @xmath125 .",
    "the @xmath126 for @xmath127 and the @xmath128 are called the _",
    "summands _ of @xmath104 .",
    "it is easy to see that @xmath111 iff @xmath129 is a summand of @xmath104 . the term @xmath130 is obtained from @xmath104 by prefixing it @xmath131 times with @xmath24 , i.e. , @xmath132 and @xmath133 .    a preorder ( or equivalence ) @xmath134 is a _ precongruence _ ( resp .  _ congruence _ ) for bccs(@xmath19 ) if @xmath135 and @xmath136 implies @xmath137 and @xmath138 for all @xmath139 . if a preorder is a precongruence , then clearly the associated equivalence is a congruence . the preorders defined in def .",
    "[ def : traces ] , [ def : failures ] and [ def : impossible - futures ] are all precongruences for bccs(@xmath19 ) @xcite .",
    "[ rem : precongruence ] the requirement that @xmath63 implies @xmath64 is used to make @xmath65 , @xmath140 and @xmath4 a precongruence for bccs(@xmath19 ) . without this requirement",
    "we would e.g.  have @xmath141 .",
    "however , @xmath142 , because @xmath38 is a completed trace of the first term but not of the second . for @xmath140",
    "this requirement is in fact _ needed _ , in the sense that the version of @xmath140 with this requirement can be obtained as the congruence - closure for the @xmath143-operator of the version from @xcite without this requirement .",
    "a similar observation can be made for @xmath4 . for @xmath65",
    "the version with the requirement , presented here , appears to be strictly coarser than the bccs - congruence closure of the version from @xcite without this requirement . as it is out of the scope of this paper to characterize this congruence closure , which may be most deserving of the name _ weak completed trace preorder _",
    ", here we simply employ @xmath65 as defined above .    the requirement that @xmath83 is needed to make @xmath4 a precongruence for bccs(@xmath19 ) . without this requirement",
    "we would e.g.  have @xmath144 .",
    "in particular , @xmath145 is an impossible future not only of the first but also of the second term , because @xmath146 .",
    "however , @xmath147 , because @xmath148 is an impossible future of the first but not of the second term .",
    "an _ axiomatization _ is a collection of equations @xmath149 or of inequations @xmath150 .",
    "the ( in)equations in an axiomatization @xmath12 are referred to as _",
    "axioms_. if @xmath12 is an equational axiomatization , we write @xmath151 if the equation @xmath152 is derivable from substitution instances of the axioms in @xmath12 using the rules of equational logic ( reflexivity , symmetry , transitivity , and closure under contexts ) , i.e. , @xmath153 for the derivation of an inequation @xmath154 from an inequational axiomatization @xmath12 , denoted by @xmath155 , the rule for symmetry is omitted",
    ". we will also allow equations @xmath152 in inequational axiomatizations , as an abbreviation of two separate equations @xmath154 and @xmath156 .",
    "an axiomatization @xmath12 is _ sound _ modulo a preorder @xmath8 ( or equivalence @xmath7 ) if for any terms @xmath157 , from @xmath158 ( or @xmath151 ) it follows that @xmath117 ( or @xmath118 ) for all closed substitutions @xmath119 .",
    "@xmath12 is _ ground - complete _ for @xmath8 ( or @xmath7 ) if for any closed terms @xmath159 , @xmath160 ( or @xmath161 ) implies @xmath162 ( or @xmath163 ) .",
    "and @xmath12 is _ @xmath0-complete _ if for any terms @xmath157 with @xmath164 ( or @xmath165 ) for all closed substitutions @xmath119 , we have @xmath158 ( or @xmath166 ) .",
    "the equational theory of a process algebra modulo a preorder @xmath8 ( or equivalence @xmath7 ) is said to be _ finitely based _ if there exists a finite , @xmath0-complete axiomatization that is sound and ground - complete for the process algebra modulo @xmath8 ( or @xmath7 ) .",
    "the core axioms a1 - 4 below are sound for bccs(@xmath19 ) modulo every semantics in the spectrum depicted in fig .",
    "[ fig : spectrum ] .",
    "we assume that a1 - 4 are included in every axiomatization , and write @xmath167 if @xmath168 .",
    "we present a general method to derive a ground - complete axiomatization for bccs(@xmath19 ) modulo a weak semantics from a ground - complete axiomatization for bccsp(@xmath19 ) modulo its concrete counterpart .",
    "moreover , if the original axiomatization is @xmath0-complete , then so is the resulting axiomatization .",
    "[ def : corresponding - weak - equivalence ] given an equivalence @xmath170 ( resp .",
    "preorder @xmath171 ) which is a ( pre)congruence for bccsp(@xmath19 ) .",
    "a _ corresponding weak _ equivalence @xmath172 ( resp .",
    "preorder @xmath173 ) is a ( pre)congruence for bccs(@xmath19 ) that coincides with @xmath170 ( resp .",
    "@xmath171 ) over closed bccsp(@xmath19 ) terms .",
    "@xmath174 , @xmath65 , @xmath140 and @xmath4 are corresponding weak preorders of @xmath175 , @xmath176 , @xmath177 and @xmath3 , respectively . likewise for the four associated equivalences .",
    "consider an axiomatization that is ground - complete for bccsp(@xmath19 ) modulo a concrete ( pre)congruence relation .",
    "we present an algorithm to generate a ground - complete axiomatization for bccs(@xmath19 ) modulo a corresponding weak semantics .",
    "the algorithm prescribes the presence of the following two axioms .",
    "actually , an instance of wif1 is supposed to be present for each @xmath139 .",
    "@xmath178 wif1 - 2 make it possible to eliminate all non - initial occurrences of @xmath1 within a term ( see prop .  [",
    "prop : nf ] ) .",
    "these two axioms  and hence our algorithm  are sound only for semantics at least as coarse as weak impossible futures semantics .",
    "in particular , they are sound for weak failures , completed trace and trace semantics ( cf .  fig .",
    "[ fig : spectrum ] ) .    in case of a weak corresponding preorder @xmath173",
    ", the algorithm may moreover prescribe the presence of two axioms concerning the introduction or elimination of initial occurrences of @xmath1 s , which are needed to make the weak preorder under consideration a precongruence ( cf .",
    "remark  [ rem : precongruence ] ) .",
    "@xmath179 w1 must be present if @xmath180 for some closed bccs(@xmath19 ) terms @xmath96 and @xmath97 with @xmath181 and @xmath182 . likewise , w2 must be present if @xmath180 for some closed bccs(@xmath19 ) terms @xmath96 and @xmath97 with @xmath183 and @xmath184 .",
    "w1 is sound for @xmath4 , so also for @xmath140 , @xmath65 and @xmath174 ( cf .",
    "[ fig : spectrum ] ) .",
    "and w2 is sound for @xmath174 , while for the other three weak preorders @xmath180 and @xmath183 imply @xmath182 .    in case of a weak corresponding equivalence @xmath172 , the algorithm prescribes the presence of the axiom @xmath185 if @xmath186 for some closed bccs(@xmath19 ) terms @xmath96 and @xmath97 with @xmath181 and @xmath182 .",
    "we is sound for @xmath187 , while @xmath188 , @xmath189 and @xmath190 do not require the presence of we .",
    "furthermore , the algorithm uses an operator called @xmath191 that maps bccsp(@xmath19 ) terms to bccs(@xmath19 ) terms by renaming initial actions into @xmath1 .",
    "it is defined inductively by : @xmath192 this operator lifts to ( in)equations and axiomatizations as expected .",
    "now we are ready to formulate how an axiomatization @xmath12 for bccsp(@xmath19 ) modulo a concrete semantics is transformed into an axiomatization @xmath193 for bccs(@xmath19 ) modulo a corresponding weak semantics .",
    "first we treat the case of preorders .",
    "[ def : algorithm - weak - preorder ] let @xmath12 be an axiomatization for bccsp(@xmath19 ) modulo a preorder @xmath171 . the axiomatization @xmath193 for bccs(@xmath19 ) modulo a corresponding weak preorder @xmath173 consists of the following inequations :    1 .",
    "[ alg - req1 ] @xmath12 .",
    "[ alg - req2 ] @xmath194 .",
    "[ alg - req3 ] wif1 - 2 .",
    "[ alg - req4 ] if @xmath180 for some closed bccs(@xmath19 ) terms @xmath96 and @xmath97 with @xmath181 and @xmath182 , then w1 is included .",
    "[ alg - req5 ] if @xmath180 for some closed bccs(@xmath19 ) terms @xmath96 and @xmath97 with @xmath183 and @xmath184 , then w2 is included .",
    "it is essential for the correctness of this approach that axioms do not mix initial and non - initial occurrences of variables .",
    "an example of such an ( unsafe ) inequation is @xmath195 .",
    "a term is said to be _ safe _ if no variable has both an initial and a non - initial occurrence in it . an ( in)equation @xmath154 or @xmath152 is safe if @xmath196 is safe .",
    "an axiomatization is safe if all its axioms are so .",
    "[ thm : correct ] let @xmath171 be a precongruence for bccsp(@xmath19 ) and @xmath173 a corresponding weak preorder .",
    "let @xmath12 be a ground - complete axiomatization for bccsp(@xmath19 ) modulo @xmath171 , which is safe and contains a1 - 4 .",
    "then @xmath193 is ground - complete for bccs(@xmath19 ) modulo @xmath173 .",
    "if @xmath12 is moreover @xmath0-complete for bccsp(@xmath19 ) , then @xmath193 is @xmath0-complete for bccs(@xmath19 ) .    note that this theorem does not address the soundness of @xmath193 for bccs(@xmath19 ) modulo @xmath173 .",
    "this is left to the user as a separate proof obligation .",
    "the basic ideas behind the method above are as follows .",
    "with wif1 - 2 , each bccs(@xmath19 ) term can be equated to either a bccsp(@xmath19 ) term or a term @xmath197 where the @xmath198 are bccsp(@xmath19 ) terms ( see prop .  [",
    "prop : nf ] ) . and",
    "with the axioms in @xmath194 , a derivation of @xmath199 from @xmath12 can be converted into a derivation of @xmath200 from @xmath193 . these constitute key steps in the proof of thm .",
    "[ thm : correct ] .    the algorithm to generate an axiomatization for bccs(@xmath19 )",
    "modulo a weak equivalence from an axiomatization for bccsp(@xmath19 ) modulo the corresponding concrete equivalence can be adapted accordingly from the algorithm for preorders .",
    "[ def : algorithm - weak - equivalence ] let @xmath12 be an axiomatization for bccsp(@xmath19 ) modulo an equivalence @xmath170 .",
    "the axiomatization @xmath193 for bccs(@xmath19 ) modulo a corresponding weak equivalence @xmath172 consists of the following equations :    1 .   @xmath12 .",
    "2 .   @xmath194 .",
    "if @xmath186 for some closed bccs(@xmath19 ) terms @xmath96 and @xmath97 with @xmath183 and @xmath184 , then we is included .",
    "[ thm : correct2 ] let @xmath170 be a congruence for bccsp(@xmath19 ) and @xmath172 a corresponding weak equivalence .",
    "let @xmath12 be a ground - complete axiomatization for bccsp(@xmath19 ) modulo @xmath170 , which is safe and contains a1 - 4 .",
    "then @xmath193 is ground - complete for bccs(@xmath19 ) modulo @xmath172 .",
    "if @xmath12 is moreover @xmath0-complete for bccsp(@xmath19 ) , then @xmath193 is @xmath0-complete for bccs(@xmath19 ) .",
    "we establish the correctness of the algorithms for preorders and equivalences .",
    "we will only prove thm .",
    "[ thm : correct ] for preorders , as thm .",
    "[ thm : correct2 ] for equivalences can be proved following the same lines . for a start , we show that the following equations can be derived from a1 - 4+wif1 - 2 : @xmath201    [ lemma5 ] are derivable from .    for d1 , @xmath202    for d2 , we apply induction on @xmath203 .",
    "the base case @xmath204 is trivial . for @xmath205 , pick an @xmath206 .",
    "+ @xmath207{rllr }      { \\displaystyle   \\alpha(\\sum_{i\\in i}\\tau x_i + y ) } & = & \\alpha(\\tau x_{i_0 } + { \\displaystyle \\sum_{i\\in i\\setminus\\{i_0\\ } } } \\tau x_i +     y ) & \\vspace{1mm}\\\\                                         & \\approx & \\alpha ( \\tau x_{i_0}+\\tau ( x_{i_0 } + { \\displaystyle\\sum_{i\\in i\\setminus\\{i_0\\}}\\tau x_i + y ) } ) & ( { \\rm wif2})\\vspace{1mm}\\\\                                         & \\approx & \\alpha x_{i_0 } + \\alpha(x_{i_0 } + { \\displaystyle\\sum_{i\\in i\\setminus\\{i_0\\}}\\tau x_i + y ) } & ( { \\rm wif1})\\vspace{1mm}\\\\                                         & \\approx & \\alpha x_{i_0 } + { \\displaystyle \\sum_{i\\in i\\setminus\\{i_0\\ } } \\alpha x_i + \\alpha(x_{i_0 } + \\sum_{i\\in i\\setminus\\{i_0\\ } }   x_i + y ) } & ( { \\rm induction})\\vspace{1mm}\\\\                                         & = & { \\displaystyle \\sum_{i\\in i } \\alpha x_i + \\alpha(\\sum_{i\\in i}x_i+y ) } &    \\end{array}$ ]    the following proposition on the elimination of @xmath1 s from bccs(@xmath19 ) terms will play a key role in the proof of thm .  [ thm : correct ] .    [ prop : nf ] let @xmath104 be a bccs(@xmath19 ) term .    1 .   if @xmath208 , then a1 - 4+wif1 - 2 @xmath209 for some bccsp(@xmath19 ) term @xmath210 .",
    "2 .   if @xmath211 , then a1 - 4+wif1 - 2 @xmath212 where @xmath213 and the @xmath198 are bccsp(@xmath19 ) terms .",
    "it is easy to see that a1 - 4 and wif1 - 2 equate only terms of equal weak depth . for convenience",
    ", `` @xmath214 '' is omitted here .    1",
    ".   we apply induction on the weak depth of @xmath104 . since @xmath208 , @xmath215 . for each @xmath127 , @xmath216 moreover , by means of d1 we can guarantee that for each @xmath217 , @xmath218 .",
    "so , by d2 , @xmath219 for each @xmath217 , by induction , @xmath220 where @xmath221 is a bccsp(@xmath19 ) term .",
    "likewise , by induction , @xmath222 where @xmath223 is a bccsp(@xmath19 ) term .",
    "hence , @xmath224 and this last term is in bccsp(@xmath19 ) .",
    "2 .   since @xmath211 , @xmath225 where @xmath213 . moreover , by means of d1 we can guarantee that for each @xmath127 , @xmath226 . pick an @xmath227 .",
    "by wif2 , @xmath228 and by ( 1 ) , the terms @xmath198 and @xmath229 can all be equated to bccsp(@xmath19 ) terms .",
    "we proceed to prove that a derivation of @xmath154 from @xmath12 yields a derivation of @xmath230 from @xmath194 .",
    "first we establish a lemma as a stepping stone toward this result .",
    "[ lem : init - tau ] let @xmath231 be a bccsp(@xmath19 ) term , and let @xmath104 be safe .",
    "then @xmath232 where @xmath233 if @xmath234 has an initial occurrence in @xmath104 and @xmath235 otherwise .",
    "by induction on the structure of @xmath104 .",
    "* @xmath236 : we have @xmath237 . * @xmath238 : we have @xmath239 .",
    "* @xmath240 : for @xmath241 we define @xmath242 if @xmath234 has an initial occurrence in @xmath243 and @xmath244 otherwise .",
    "since @xmath245 is safe , @xmath246 and @xmath247 coincide over @xmath248 for both @xmath249 and @xmath250 .",
    "hence , @xmath251 * @xmath252 : since @xmath113 and @xmath246 coincide over @xmath253 , + @xmath254    [ prop : key ] let @xmath12 be a safe axiomatization for bccsp(@xmath19 ) and suppose that @xmath158",
    ". then @xmath255    by induction on the derivation of @xmath154 from @xmath12 .",
    "the cases of reflexivity , transitivity and closure under context are straightforward .",
    "we focus on the case of a substitution instance of an axiom , meaning that there are an axiom @xmath256 in @xmath12 and a substitution @xmath113 such that @xmath257 and @xmath258 . since @xmath259 and @xmath260 are safe , lem .",
    "[ lem : init - tau ] can be applied to both @xmath259 and @xmath260 .",
    "we define @xmath233 if @xmath234 has an initial occurrence in @xmath261 and @xmath235 otherwise .",
    "since @xmath256 is safe , @xmath246 can be used in the application of lem .",
    "[ lem : init - tau ] to both @xmath259 and @xmath260 . by two applications of lem .",
    "[ lem : init - tau ] and one of the axiom @xmath262 in @xmath194 we derive + @xmath263    now we are ready to prove thm .",
    "[ thm : correct ] for preorders . as",
    "said before , the case of equivalences can be proved following the same lines .",
    "let @xmath12 be a ground - complete axiomatization for bccsp(@xmath19 ) modulo @xmath171 .",
    "suppose that @xmath264 where either the bccs(@xmath19 ) terms @xmath104 and @xmath114 are closed or @xmath12 is @xmath0-complete for bccsp(@xmath19 ) . to show that @xmath265 , we distinguish four cases .",
    "note , with regard to prop .",
    "[ prop : nf ] , that a1 - 4 and wif1 - 2 equate closed terms only with closed terms .    1 .   @xmath208 and @xmath266 . by prop .",
    "[ prop : nf](1 ) , from @xmath267 we can derive @xmath268 and @xmath269 where @xmath210 and @xmath270 are bccsp(@xmath19 ) terms ( and closed if @xmath104 and @xmath114 are closed ) . since @xmath264 and @xmath267 are sound for bccs(@xmath19 ) modulo @xmath172 , we have @xmath271 . since @xmath210 and @xmath270 are bccsp(@xmath19 ) terms and @xmath173 coincides with @xmath171 over closed bccsp(@xmath19 ) terms , @xmath272 . since @xmath12 is ground - complete for bccsp(@xmath19 ) modulo @xmath171 , and @xmath0-complete if @xmath104 or @xmath114 is not closed , it follows that @xmath273 .",
    "hence @xmath265 .",
    "2 .   @xmath211 and @xmath274 . by prop .",
    "[ prop : nf](2 ) , from @xmath267 we can derive @xmath275 and @xmath276 where @xmath277 and the @xmath198 and @xmath278 are bccsp(@xmath19 ) terms ( and closed if @xmath104 and @xmath114 are closed ) . since @xmath264 and @xmath267 are sound for bccs(@xmath19 ) modulo @xmath172 , we have @xmath279 .",
    "pick an @xmath280 .",
    "we have @xmath281 .",
    "so @xmath282 .",
    "since the @xmath198 and @xmath278 are bccsp(@xmath19 ) terms and @xmath173 coincides with @xmath171 over closed bccsp(@xmath19 ) terms , @xmath283 . since @xmath12 is ground - complete for bccsp(@xmath19 ) modulo @xmath171 , and @xmath0-complete if @xmath104 or @xmath114 is not closed , it follows that @xmath284 .",
    "so , since @xmath12 is safe , by prop .",
    "[ prop : key ] , @xmath285 .",
    "hence @xmath265 .",
    "3 .   @xmath208 and @xmath274 . by requirement ( [ alg - req4 ] ) of def .",
    "[ def : algorithm - weak - preorder ] , w1 is included in @xmath193 .",
    "we have @xmath286 .",
    "the first step follows from w1 , the second from case ( 2 ) , and the third from d1 together with @xmath274 .",
    "4 .   @xmath211 and @xmath266 . by requirement ( [ alg - req5 ] ) of def .",
    "[ def : algorithm - weak - preorder ] , w2 is included in @xmath193 .",
    "we have @xmath287 .",
    "the first step follows from d1 together with @xmath211 , the second from case ( 2 ) , and the third from w2 .",
    "[ rem : alternative ] there is an alternative approach for the method introduced in this section that avoids the use of the @xmath191 operator .",
    "that is , clause ( [ alg - req2 ] ) in the construction of @xmath193 in def .",
    "[ def : algorithm - weak - preorder ] is omitted .",
    "moreover , the axiomatization @xmath12 does not have to be safe . and",
    "while we chose to ignore preservation of soundness , as the @xmath191 operator would give rise to some technical complications , in the alternative approach , soundness of @xmath12 modulo the strong semantics yields soundness of @xmath193 modulo the weak semantics in a straightforward fashion , provided we assume the strong preorder ( or equivalence ) is included in the corresponding weak one . however , the price to pay is that this alternative method only works for ground - completeness ( so not for @xmath0-completeness ) , and assumes the so - called fresh atom principle ( see e.g.  @xcite ) .",
    "we briefly sketch the idea behind this alternative approach .",
    "the axiomatization @xmath12 is required to be sound and ground - complete for bccsp(@xmath19 ) .",
    "the crucial case ( 2 ) in the proof of thm .",
    "[ thm : correct ] can now be tackled without @xmath191 .",
    "as before we arrive at @xmath288 , but as we are dealing with ground - completeness only , the @xmath198 and @xmath278 are closed terms .",
    "let @xmath289 be a fresh action which is not in the alphabet @xmath19 .",
    "the last mentioned relation together with the soundness of wif1 yields @xmath290 .",
    "this implies @xmath291 . since @xmath289 is fresh , renaming it into @xmath1 yields @xmath292 , where @xmath1 is interpreted as a concrete action .",
    "so by ground - completeness , @xmath293 , which implies @xmath294 .    to see why this reasoning does not extend to @xmath0-completeness , assume that the @xmath198 and @xmath278 are open terms .",
    "then the inequation @xmath288 really means that @xmath295 for any closed substitution @xmath113 in bccs(@xmath19 ) . from that",
    ", one may not conclude that this equation also holds for any closed substitution @xmath113 in bccs(@xmath296 ) , and the latter is needed to infer @xmath291 .",
    "in this section , the algorithm from the previous section is applied to produce axiomatizations for bccs(@xmath19 ) modulo the weak failures , completed trace and trace preorders and equivalences from axiomatizations for bccsp(@xmath19 ) modulo their concrete counterparts .",
    "according to @xcite , a1 - 4 together with the axiom @xmath297 constitute a sound and ground - complete axiomatization for bccsp(@xmath19 ) modulo @xmath177 . if @xmath298 then this axiomatization is @xmath0-complete , while if @xmath299 then a finite basis for the inequational theory of bccsp(@xmath19 ) modulo @xmath177 is obtained by adding the following axiom : @xmath300    our algorithm from the previous section produces a ground - complete axiomatization for bccs(@xmath19 ) modulo @xmath140 , which consists of a1 - 4 , wif1 - 2 and w1 together with @xmath301 it is not hard to see that this axiomatization is sound modulo @xmath140 .",
    "f1 is extended to f1@xmath302 ( allowing initial @xmath1 s ) in light of clause ( [ alg - req2 ] ) , wif1 - 2 are included in light of clause ( [ alg - req3 ] ) , and w1 in light of clause ( [ alg - req4 ] ) of def .",
    "[ def : algorithm - weak - preorder ] .",
    "the axiomatization can be simplified : the following axioms together with a1 - 4 and wif1 suffice .",
    "@xmath303 on the one hand , wif2@xmath302 and w1@xmath302 are clearly sound modulo @xmath140 . on the other hand ,",
    "w1 follows directly from w1@xmath302 ( taking @xmath304 ) and a4 .",
    "furthermore , the two directions of wif2 can be derived as follows : by wif2@xmath302 and a3 , @xmath305 ; and by wif2@xmath302 ( with @xmath306 ) and w1 , @xmath307 .",
    "finally , f1@xmath302 can be derived as follows : by w1@xmath302 , @xmath308 ; so by wif1 , @xmath309 .",
    "according to thm .",
    "[ thm : correct ] , if @xmath298 , then this axiomatization is @xmath0-complete . and if @xmath310 , then f2 and @xmath311 have to be added to make the axiomatization @xmath0-complete .",
    "but the latter inequation , @xmath312 , can be derived using w1@xmath302 and wif1 .",
    "[ thm : wf ] _",
    "a1 - 4+wif1+wif2@xmath302+w1@xmath302 _ is sound and ground - complete for bccs(@xmath19 ) modulo @xmath140 . if @xmath298 , then it is also @xmath0-complete .",
    "if @xmath299 , then the axiomatization becomes @xmath0-complete by adding the ( sound ) axiom _",
    "f2_.    according to @xcite , a1 - 4 together with the axioms @xmath313 constitute a sound and ground - complete axiomatization for bccsp(@xmath19 ) modulo @xmath314 .",
    "as remarked in @xcite , in the presence of fe1 , axiom fe2@xmath315 can be simplified to @xmath316 moreover , in @xcite it was proved that if @xmath298 then this axiomatization is @xmath0-complete , while if @xmath299 then a finite basis for the inequational theory of bccsp(@xmath19 ) modulo @xmath177 is obtained by adding the following axiom : @xmath317    our algorithm from the previous section produces a ground - complete axiomatization for bccs(@xmath19 ) modulo @xmath318 , which consists of a1 - 4 and wif1 - 2 together with @xmath319 it is not hard to see that this axiomatization is sound modulo @xmath318 .",
    "fe1 - 2 are extended ( allowing initial @xmath1 s ) in light of clause ( 2 ) of def .",
    "[ def : algorithm - weak - equivalence ] and wif1 - 2 are included in light of clause ( 3 ) .",
    "also this axiomatization can be simplified : the following axiom together with a1 - 4 and wif1 - 2 suffices .",
    "@xmath320 on the one hand , wfe is a direct consequence of wif2 and fe2@xmath302 : @xmath321 . on the other hand ,",
    "the instances of fe1@xmath302 and fe2@xmath302 with @xmath322 can be derived with two applications of wif2 and with wif2 and wfe , respectively :    @xmath323 ;    @xmath324 .",
    "the general instances of fe1@xmath302 and fe2@xmath302 now follow with wif1 .",
    "in @xcite it was already remarked that a1 - 4+wif1 - 2+wfe is a sound and ground - complete axiomatization for bccs(@xmath19 ) modulo @xmath318 .    according to thm .",
    "[ thm : correct2 ] , if @xmath298 , then this axiomatization is @xmath0-complete . and if @xmath310 , then fe3 and @xmath325 have to be added to make the axiomatization @xmath0-complete .",
    "but from the latter inequation , @xmath326 fe3 can be derived using wif1 .",
    "[ thm : wfe ] _ a1 - 4+wif1 - 2+wfe _ is sound and ground - complete for bccs(@xmath19 ) modulo @xmath318 . if @xmath298 , then it is also @xmath0-complete .",
    "if @xmath299 , then the axiomatization becomes @xmath0-complete by adding the ( sound ) axiom _",
    "fe3@xmath302_.    in @xcite an algorithm is presented which takes as input a sound and ground - complete inequational axiomatization for bccsp modulo a preorder @xmath8 which _ includes the ready simulation preorder _ and is _ initials preserving _ , implies @xmath327 . ] and generates as output an equational axiomatization which is sound and ground - complete for bccsp modulo the corresponding equivalence ",
    "its kernel : @xmath328 .",
    "moreover , if the original axiomatization is @xmath0-complete , then so is the resulting axiomatization .",
    "using this algorithm , the above - mentioned axiomatization of @xmath314 could have been obtained from the one of @xmath177 .",
    "in @xcite we lifted this result to weak semantics , which makes the aforementioned algorithm applicable to all 87 preorders surveyed in @xcite that are at least as coarse as the ready simulation preorder .",
    "in @xcite we obtain an alternative proof of thm .",
    "[ thm : wfe ] by applying the algorithm of @xcite to the axiomatizations of thm .",
    "[ thm : wf ] .      according to @xcite , a1 - 4 together with the axiom @xmath329 constitute a sound and ground - complete axiomatization for bccsp(@xmath19 ) modulo @xmath330 . after adding the axiom fe1 ,",
    "the axiomatization becomes @xmath0-complete @xcite .    by applying our algorithm",
    ", we obtain a ground - complete axiomatization for bccs(@xmath19 ) modulo @xmath331 , which consists of a1 - 4 , wif1 - 2 and @xmath332 it is not hard to see that this axiomatization is sound modulo @xmath331 .",
    "cte is extended ( allowing initial @xmath1 s ) in light of clause ( [ alg - req2 ] ) of def .",
    "[ def : algorithm - weak - preorder ] .",
    "this axiomatization is also @xmath0-complete , since fe1@xmath302 can be derived , as shown above .",
    "moreover , cte@xmath302 follows from cte and wif1 .",
    "_ a1 - 4+wif1 - 2+cte _ is sound , ground - complete as well as @xmath0-complete for bccs(@xmath19 ) modulo @xmath331 .    the axiomatization a1 - 4 together with @xmath333 from @xcite is sound and ground - complete for bccsp(@xmath19 ) modulo @xmath176 . after adding the axiom f1",
    ", the axiomatization becomes @xmath0-complete .",
    "this @xmath0-completeness result follows from the @xmath0-completeness of the above axiomatization for bccsp(@xmath19 ) modulo @xmath330 .",
    "namely , suppose that @xmath334 .",
    "if @xmath104 does not contain a summand of the form @xmath335 , then clearly @xmath104 and @xmath114 must consist of exactly the same variable summands , so that @xmath167 . and",
    "if @xmath104 contains a summand @xmath335 , then by ct1 , @xmath336 . since @xmath337 , derivability of @xmath338 from a1 - 4 , ct1 - 2 , f1 follows from the aforementioned @xmath0-completeness result for bccsp(@xmath19 ) modulo @xmath330 , using that cte follows from ct1 - 2 , and fe1 from ct1 and f1",
    "by applying the algorithm , we obtain a ground - complete axiomatization for bccs(@xmath19 ) modulo @xmath65 , which consists of a1 - 4 , wif1 - 2 , w1 and @xmath339 it is not hard to see that this axiomatization is sound modulo @xmath65 .",
    "ct1 - 2 are extended ( allowing initial @xmath1 s ) in light of clause ( [ alg - req2 ] ) of def .",
    "[ def : algorithm - weak - preorder ] .",
    "wif1+wif2@xmath302+w1@xmath302+ct1@xmath302 together with a1 - 4 suffice , because ct2@xmath302 can be derived using w1 and wif1 : @xmath340 .",
    "we conclude that a1 - 4+wif1 + wif2@xmath302+w1@xmath302 + ct1@xmath302 is ground - complete for bccs(@xmath19 ) modulo @xmath65 .",
    "it is also @xmath0-complete , since f1@xmath302 can be derived , as shown before .",
    "_ a1 - 4+wif1+wif2@xmath302+w1@xmath302+ct1@xmath341 _ is sound , ground - complete and @xmath0-complete for bccs(@xmath19 ) modulo @xmath65 .      according to @xcite , a1 - 4 together with the axiom @xmath342 constitute a sound and ground - complete axiomatization for bccsp(@xmath19 ) modulo @xmath343 . if @xmath344 it is even @xmath0-complete @xcite .    by applying our algorithm",
    ", we obtain a ground - complete axiomatization for bccs(@xmath19 ) modulo @xmath330 , consisting of a1 - 4 , wif1 - 2 , we and @xmath345 if @xmath344 it is even @xmath0-complete .",
    "it is easy to see that it is sound modulo @xmath330 .",
    "clearly , owing to we , wif1 - 2 are redundant .",
    "_ a1 - 4+we+te _ is sound and ground - complete for bccs(@xmath19 ) modulo @xmath330 . if @xmath344 , then this axiomatization is also @xmath0-complete .    the axiomatization a1 - 4 together with @xmath346 from @xcite is sound and ground - complete for bccsp(@xmath19 ) modulo @xmath175 . if @xmath344 , then it is also @xmath0-complete .",
    "this @xmath0-completeness result follows from the @xmath0-completeness of the above axiomatization for bccsp(@xmath19 ) modulo @xmath343 .",
    "namely , suppose that @xmath347 . then by t2 ,",
    "@xmath336 . since @xmath348 , derivability of @xmath338 from a1 - 4 , t1 - 2 follows from the aforementioned @xmath0-completeness result for bccsp(@xmath19 ) modulo @xmath343 , using that te follows from t1 - 2 .    by applying the algorithm",
    ", we obtain a ground - complete axiomatization for bccs(@xmath19 ) modulo @xmath174 , which consists of a1 - 4 , wif1 - 2 ,",
    "we and t2 together with @xmath349 it is not hard to see that this axiomatization is sound modulo @xmath174 .",
    "t1 is extended in light of clause ( [ alg - req2 ] ) and we is introduced in light of clauses ( [ alg - req4 ] ) and ( [ alg - req5 ] ) of def .",
    "[ def : algorithm - weak - preorder ] .",
    "again , owing to we , wif1 - 2 are redundant .",
    "_ a1 - 4+t1@xmath302+t2+we _ is sound and ground - complete for bccs(@xmath19 ) modulo @xmath174 . if @xmath344 , then this axiomatization is also @xmath0-complete .",
    "if @xmath350 , then @xmath195 needs to be added to make the axiomatization @xmath0-complete ( cf .",
    "this is the only corner case where our approach breaks down , due to the fact that this axiom is not safe : the variable @xmath234 has both an initial and a non - initial occurrence .    admittedly , the application of defs .",
    "[ def : algorithm - weak - equivalence ] and  [ def : algorithm - weak - preorder ] to trace semantics is not so interesting , because the axiom we allows to eliminate all @xmath1 s from terms , so that the weak setting trivially reduces to the concrete setting .",
    "this section concerns the axiomatizability of impossible futures semantics .      we prove that a1 - 4 together with the axioms @xmath351 constitute a sound and ground - complete axiomatization for bccsp(@xmath19 ) modulo @xmath3 .",
    "[ prop16 ] _ a1 - 4+if1 - 2 _ is sound and ground - complete for bccsp(@xmath19 ) modulo @xmath3 .",
    "it is not hard to see that if1 - 2 are sound modulo @xmath3 . for both axioms , the crucial observation for their soundness",
    "is that the impossible futures @xmath352 induced by @xmath353 are included in those of @xmath354 . to give some intuition for the ground - completeness proof , we first present an example .",
    "[ ex1 ] let @xmath355 and @xmath356 .",
    "it is not hard to see that @xmath357 .",
    "however , neither @xmath358 nor @xmath359 holds . in order to derive @xmath360",
    ", we therefore first derive @xmath361 , and next @xmath362 .    in general , to derive a sound closed inequation @xmath363 , first we derive @xmath364 ( see lem .  [",
    "lem : hatq ] ) , where @xmath365 contains for every @xmath366 a `` saturated '' @xmath289-summand ( see def .",
    "[ def : hatq ] ) .",
    ".  [ ex1 ] , this saturated summand would have the form @xmath367 . )",
    "then , in the proof of thm",
    ".  [ prop16 ] , we derive @xmath368 ( equation ( [ eqn1 ] ) ) , @xmath369 ( equation ( [ eqn2 ] ) ) and @xmath370 ( equation ( [ eqn3 ] ) ) , where the closed term @xmath371 is built from many `` semi - saturated '' summands ( like , in ex .",
    "[ ex1 ] , @xmath96 ) .",
    "these results together provide the desired proof ( see the last line of the proof of thm .  [ prop16 ] ) .    in the remainder of this section",
    ", @xmath372 denotes that @xmath373 is a summand of @xmath96 .",
    "[ def : hatq ] for each closed term @xmath97 , the closed term @xmath365 is defined recursively on the depth of @xmath97 as follows : @xmath374    if @xmath375 , then @xmath376 .",
    "[ lem : hatq ] for each closed term @xmath97 , a1 - 4+if1 - 2 @xmath377 .    by induction on the depth of @xmath97 . for any @xmath366 ,",
    "@xmath378 the first derivation step uses if2 , and the second induction .",
    "hence , summing up over all @xmath366 , + @xmath379    for any closed term @xmath97 and @xmath366 , the closed term @xmath380 is obtained by summing over all closed terms @xmath381 such that @xmath382 , and then applying the saturation from def .",
    "[ def : hatq ] .",
    "the definition and lemma below generalize this idea to terms @xmath383 with @xmath384 .",
    "the auxiliary terms @xmath383 will only be used in the derivation of equation ( [ eqn1 ] ) within the proof of thm .",
    "[ prop16 ] .",
    "[ def : q ] given a closed term @xmath97 and a trace @xmath385 of @xmath97 .",
    "@xmath386 and @xmath387    note that @xmath388 .",
    "we prove some basic properties for the terms @xmath383 .",
    "[ lem : q ] given a closed term @xmath97 , and a completed trace @xmath389 of @xmath97 .",
    "then , for each @xmath390 ,    * @xmath391 ; and * @xmath392   for all @xmath393 .",
    "clearly , @xmath394 iff there exists some @xmath395 such that @xmath396 . and",
    "since @xmath397 is a trace of @xmath97 , @xmath398 for some @xmath395 .",
    "so by def .",
    "[ def : hatq ] , @xmath399 moreover , for all @xmath400 we have @xmath401 .",
    "hence , by def .",
    "[ def : hatq ] , + @xmath402    we now embark on proving the promised ground - completeness result in thm .",
    "[ prop16 ] .",
    "suppose @xmath403 .",
    "we derive @xmath363 using induction on the depth of @xmath96 . if @xmath404 , then clearly @xmath405 , and we are done .",
    "so assume @xmath406 .",
    "we call a sequence @xmath407 a _ completed path _ of a closed term @xmath408 if @xmath409 with @xmath410",
    ". let @xmath411 denote the set of completed paths of @xmath96 , ranged over by @xmath412 .",
    "consider any @xmath413 in @xmath411 . since @xmath406 , we have @xmath414 .",
    "we recursively construct closed terms @xmath415 , where @xmath416 counts down from @xmath417 to 1 .",
    "for the base case we define @xmath418 .",
    "now let @xmath419 .",
    "since @xmath420 and @xmath403 , there exists a sequence of transitions @xmath421 such that @xmath422 .",
    "given the choice of @xmath412 and @xmath416 , we pick such a @xmath423 and call it @xmath424 .",
    "now define @xmath425 we prove , by induction on @xmath426 , that for all @xmath427 , @xmath428 the base case is trivial , since @xmath429 .",
    "now let @xmath419 .",
    "by induction , @xmath430 .",
    "moreover , @xmath431 , so @xmath432 . hence , @xmath433 .",
    "we now derive three ( in)equations that together yield the desired result .",
    "first , we derive by induction on @xmath426 , for all @xmath427 , @xmath434 in the base case , since @xmath435 ( see def .  [",
    "def : q ] ) , this is a direct consequence of the second item in lem .",
    "[ lem : q ] .",
    "now let @xmath436 .",
    "@xmath437 in the end , for @xmath438 , we have derived @xmath439 . in other words ,",
    "@xmath440    second , for every @xmath372 , @xmath441 namely , consider any ( possibly incomplete ) path @xmath442 of @xmath443 .",
    "extend @xmath444 to some @xmath445 . clearly , @xmath446 for all @xmath447 , so @xmath448 .",
    "moreover , we proved that @xmath449 .",
    "so by induction on depth , for every @xmath372 we can derive @xmath450 and thus , by if1 , we derive @xmath451 hence , summing over all summands @xmath373 of @xmath96 , we derive @xmath452    third , since @xmath403 , clearly , for each @xmath453 , @xmath454 so by induction on depth , for each @xmath453 we can derive @xmath455 so by if2 and if1 , and since @xmath456 , we derive @xmath457 that is , we have derived @xmath458 finally , ( [ eqn3 ] ) , lem .",
    "[ lem : hatq ] , ( [ eqn2 ] ) and ( [ eqn1 ] ) yield the derivation + @xmath459      we now apply the link established in sect .  [ sec : link ] to obtain a ground - complete axiomatization for bccs(@xmath19 ) modulo @xmath4 .",
    "it consists of a1 - 4 , wif1 - 2 and w1 together with @xmath460 it is not hard to see that this axiomatization is sound modulo @xmath4 .",
    "again , this axiomatization can be simplified .",
    "it turns out that if1@xmath302 and if2@xmath302 are redundant .",
    "namely , by w1 and wif1 , @xmath461 . and by wif1 and wif2 , @xmath462 .",
    "furthermore , wif2 can be replaced by wif2@xmath302 .",
    "namely , by wif2@xmath302 , @xmath305 ; and by wif2@xmath302 and w1 , @xmath463 .    the ground - completeness claim in the following corollary is an immediate consequence of thm .",
    "[ prop16 ] together with thm .",
    "[ thm : correct ] .",
    "_ a1 - 4+wif1+wif2@xmath302+w1 _ is sound and ground - complete for bccs(@xmath19 ) modulo @xmath4 .",
    "this result was already proved in @xcite ( for a slightly more complicated axiomatization ) .",
    "there an intricate ground - completeness proof was given , which relies heavily on the presence of @xmath1 .",
    "we now prove that there does not exist a finite , sound , ground - complete axiomatization for bccs(@xmath19 ) modulo @xmath5 .",
    "the cornerstone for this negative result is the following infinite family of closed equations .",
    "pick an @xmath280 . for each @xmath464 , @xmath465 is sound modulo @xmath5 .",
    "we start with a few lemmas .",
    "[ newvariable ] if @xmath466 and @xmath467 , then there is a term @xmath270 with @xmath468 and @xmath469 .",
    "let @xmath467 .",
    "pick an @xmath280 and @xmath470 , and consider the closed substitution @xmath119 defined by @xmath471 if @xmath472 and @xmath473 if @xmath474 . since @xmath475 with @xmath476 , and @xmath477 , clearly @xmath478 for some @xmath97 with @xmath479 . from the definition of @xmath119",
    "it then follows that @xmath480 for some @xmath270 with @xmath469 . in case",
    "@xmath481 we are done , so assume @xmath482 .",
    "let @xmath113 be the closed substitution with @xmath483 for all @xmath484 . since @xmath485 and @xmath486 , we have @xmath487 , so @xmath488 for some @xmath489 . and @xmath490 .    [ key2 ]",
    "suppose that for some terms @xmath157 , closed substitution @xmath113 , action @xmath289 and @xmath491 :    1 .",
    "[ lem - prov1 ] @xmath492 ; 2 .",
    "[ lem - prov2 ] @xmath493 ; 3 .",
    "[ lem - prov3 ] @xmath494 ; and 4 .",
    "[ lem - prov4 ] there is a closed term @xmath495 such that @xmath496 and @xmath497 .",
    "then there is a closed term @xmath381 such that @xmath498 and @xmath499 .",
    "we note that if @xmath500 , then @xmath501 .",
    "namely , a process has a weak completed trace @xmath502 iff it has a weak impossible future @xmath503 .",
    "according to proviso ( [ lem - prov4 ] ) of the lemma , two cases can be distinguished : the trace @xmath496 visits a variable in @xmath104 or not .",
    "* @xmath467 for some @xmath210 with @xmath504 .",
    "since @xmath505 and @xmath506 , for any either @xmath507 or @xmath508 . since @xmath509 , by lem .",
    "[ newvariable ] , @xmath468 for some @xmath270 with @xmath469 .",
    "hence , for any @xmath510 either @xmath507 or @xmath508 . since @xmath511 , it follows that @xmath512 . since @xmath513 , we conclude that @xmath514 .",
    "and @xmath468 implies @xmath515 . * @xmath516 for some @xmath210 and @xmath234 with @xmath517 .",
    "consider the closed substitution @xmath119 defined by @xmath473 and @xmath518 for any @xmath519 .",
    "then @xmath520 .",
    "since @xmath521 , in view of the definition of @xmath119 this implies that @xmath522 for some @xmath270 . hence @xmath523 .",
    "[ key2cont ] suppose that for a sound axiomatization @xmath12 for bccs(@xmath19 ) modulo @xmath5 , closed terms @xmath159 , closed substitution @xmath113 , action @xmath289 and @xmath491 :    1 .",
    "[ prop - prov1 ] @xmath524 or @xmath525 ; 2 .",
    "[ prop - prov2 ] @xmath526 ; 3 .",
    "[ prop - prov3 ] @xmath527 ; and 4 .",
    "[ prop - prov4 ] there is a closed term @xmath495 such that @xmath528 and @xmath497 .",
    "then there is a closed term @xmath381 such that @xmath529 and @xmath499 .    by induction on a derivation of @xmath530 or @xmath525 .",
    "we only consider @xmath530 ; the proof for @xmath525 is symmetrical .",
    "the cases where @xmath530 is derived by reflexivity ( i.e. , @xmath531 ) or symmetry ( i.e. , @xmath530 because @xmath525 ) are trivial .",
    "we focus on the other cases .",
    "* suppose @xmath163 because @xmath532 and @xmath533 for some @xmath534 or @xmath535 and closed substitution @xmath113 .",
    "the claim then follows by lem .",
    "[ key2 ] . *",
    "suppose @xmath163 because @xmath536 and @xmath537 for some @xmath538 . since @xmath539 , by proviso ( [ prop - prov3 ] ) , @xmath540 .",
    "since @xmath528 and @xmath497 , by induction there is an @xmath541 such that @xmath542 and @xmath543 .",
    "hence , again by induction there is a @xmath381 such that @xmath544 and @xmath499 . *",
    "suppose @xmath163 because @xmath545 and @xmath546 with @xmath547 and @xmath548 .",
    "since @xmath528 , we have @xmath549 for an @xmath550 . and @xmath551 .",
    "hence , by induction there is a @xmath381 such that @xmath552 and @xmath553 .",
    "and @xmath552 implies @xmath544 . *",
    "suppose @xmath530 because @xmath554 and @xmath555 with @xmath547 . by proviso ( [ prop - prov4 ] ) , @xmath322 , and either @xmath556 or there is a @xmath495 such that @xmath557 and @xmath497 . in the first case , @xmath558 ; and @xmath559 . in the second case , @xmath528 and @xmath560 .",
    "so by induction there is a @xmath381 such that @xmath561 and @xmath499 .",
    "and @xmath561 implies @xmath544 .",
    "[ thm : negative - wif - equivalence ] there is no finite , sound , ground - complete axiomatization for bccs(@xmath19 ) modulo @xmath5 .",
    "let @xmath12 be a finite axiomatization over bccs(@xmath19 ) that is sound modulo @xmath5 .",
    "pick an @xmath562 greater than the weak depth of any term in @xmath12 .",
    "consider the closed equation @xmath563 , which is sound modulo @xmath5 .",
    "we have @xmath564 and @xmath565 .",
    "however , clearly there is no closed term @xmath538 such that @xmath566 and @xmath567 .",
    "so according to prop .",
    "[ key2cont ] , this closed equation can not be derived from @xmath12 .    to explain why there is no counterpart of thm .",
    "[ thm : negative - wif - equivalence ] for @xmath4 , we note that prop .",
    "[ key2cont ] does not hold if its first requirement is changed into @xmath162 . namely , the proof regarding the congruence rule for @xmath568 in prop .",
    "[ key2cont ] fails for @xmath4 .    for example",
    ", for each @xmath464 , @xmath569 these relations satisfy the third and fourth requirement of prop .",
    "[ key2cont ] . however , it is not the case that @xmath570 with @xmath499 .",
    "we note that these relations can all be derived by means of if1@xmath302 : @xmath571      there also does not exist a finite , sound , ground - complete axiomatization for bccsp(@xmath19 ) modulo @xmath6 .",
    "the cornerstone for this negative result is the following infinite family of closed equations . for each @xmath464 , @xmath572 is sound modulo @xmath6 .",
    "the proof of the following theorem , which can be found in @xcite , is very similar to the proof of thm .",
    "[ thm : negative - wif - equivalence ] , and is therefore omitted here .",
    "[ thm : negative - if - equivalence ] there is no finite , sound , ground - complete axiomatization for bccsp(@xmath19 ) modulo @xmath6 .",
    "we note that this negative result for @xmath6 is not a direct consequence of the corresponding negative result for @xmath5 ( thm .",
    "[ thm : negative - wif - equivalence ] ) together with thm .",
    "[ thm : correct2 ] .",
    "firstly , thm .",
    "[ thm : correct2 ] disregards soundness , meaning that a finite , sound , ground - complete axiomatization @xmath12 for bccsp(@xmath19 ) modulo @xmath6 could in theory generate an unsound axiomatization @xmath193 for bccs(@xmath19 ) modulo @xmath5 .",
    "secondly , thm .",
    "[ thm : correct2 ] only applies to safe axiomatizations @xmath12 .",
    "interestingly , thm .",
    "[ thm : negative - if - equivalence ] would be a direct consequence of thm .",
    "[ thm : negative - wif - equivalence ] together with the alternative method described in remark [ rem : alternative ] .",
    "namely , that method does imply soundness of the generated axiomatization , and is not restricted to safe axiomatizations .",
    "the infinite families of equations that are used to prove thm .",
    "[ thm : negative - wif - equivalence ] and [ thm : negative - if - equivalence ] are also sound modulo weak and concrete 2-nested simulation equivalence , respectively .",
    "therefore these negative results apply to all bccs- and bccsp - congruences that are at least as fine as impossible futures equivalence and at least as coarse as 2-nested simulation equivalence .",
    "this infers some results from @xcite , where among others concrete 2-nested simulation and possible futures equivalence were considered .",
    "this section deals with the existence of @xmath0-complete axiomatizations in the context of the impossible futures preorder .",
    "groote @xcite introduced the technique of inverted substitutions to prove that an _",
    "axiomatization is @xmath0-complete .",
    "here we adapt his technique to make it suitable for _ inequational _ axiomatizations .",
    "let @xmath573 and @xmath574 denote the sets of closed and open terms , respectively , over some signature @xmath575 .",
    "[ thm : inverted - substitutions ] consider an inequational axiomatization @xmath12 over @xmath575 .",
    "suppose that for each inequation @xmath154 of which all closed instances can be derived from @xmath12 , there are a mapping @xmath576 and a closed substitution @xmath119 such that :    1 .",
    "[ inverted1 ] @xmath577 and @xmath578 ; 2 .",
    "[ inverted2 ] @xmath579 for each @xmath580 and closed substitution @xmath113 ; and 3 .",
    "[ inverted3 ] for each function symbol @xmath581 ( with arity @xmath131 ) in the signature , and all closed terms @xmath582 : @xmath583    then @xmath12 is @xmath0-complete .    the underlying idea of thm .",
    "[ thm : inverted - substitutions ] is that each derivation of a closed inequation @xmath363 from @xmath12 induces , by requirements ( [ inverted2 ] ) and ( [ inverted3 ] ) , a derivation of the open inequation @xmath584 from @xmath12 . since @xmath164",
    ", it follows using requirement ( [ inverted1 ] ) that @xmath585 .",
    "we now proceed to prove this theorem .",
    "let @xmath586 be terms such that for each closed substitution @xmath113 , @xmath587 by assumption , there are a mapping @xmath576 and a closed substitution @xmath119 such that the three requirements of thm .",
    "[ thm : inverted - substitutions ] are satisfied .",
    "we have to prove that @xmath158 .",
    "this is an immediate corollary of the following claim , for all closed terms @xmath159 : @xmath588 namely , by assumption , @xmath589 , and then the claim above implies that @xmath590 .",
    "so by requirement ( [ inverted1 ] ) of thm .",
    "[ thm : inverted - substitutions ] , @xmath591 .",
    "we prove the claim by induction on a derivation of @xmath162 .",
    "we have to check the four kinds of inference rules .",
    ". then @xmath593 .",
    "* @xmath360 is an instance of some @xmath580 and a closed substitution @xmath113 . by requirement ( [ inverted2 ] ) of thm .",
    "[ thm : inverted - substitutions ] , @xmath594 .",
    "* @xmath595 has been proved by @xmath596 and @xmath597 , for some @xmath538 . by induction , @xmath598 and @xmath599 .",
    "so @xmath600 . *",
    "@xmath601 and @xmath602 , and @xmath162 has been proved by @xmath603 for @xmath604 . by induction ,",
    "@xmath605 for @xmath604 .",
    "so by requirement ( [ inverted3 ] ) of thm .",
    "[ thm : inverted - substitutions ] , @xmath606 .",
    "we show that the axiomatization consisting of a1 - 4+if1 - 2 is @xmath0-complete , provided the alphabet is infinite . the proof is based on inverted substitutions .",
    "if @xmath298 , then _ a1 - 4+if1 - 2 _ is @xmath0-complete for bccsp(@xmath19 ) .",
    "we define the closed substitution @xmath119 by @xmath607 , where @xmath608 is a distinct action in @xmath19 for each @xmath609 that occurs in neither @xmath104 nor @xmath114 .",
    "such actions exist because @xmath19 is infinite .",
    "we define the mapping @xmath134 from closed to open bccsp(@xmath19 ) terms as follows : @xmath610    consider a pair of bccsp(@xmath19 ) terms @xmath157 such that all closed instances of @xmath154 can be derived from a1 - 4+if1 - 2 .",
    "we check the three requirements of thm .",
    "[ thm : inverted - substitutions ] .    1 .",
    "since @xmath104 and @xmath114 do not contain actions of the form @xmath608 , clearly @xmath611 and @xmath612 .",
    "2 .   for a1 - 4",
    ", the proof is trivial , because for each of these four axioms @xmath613 , @xmath614 is always a substitution instance of the axiom itself .",
    "we check the remaining cases if1 and if2 .",
    "let @xmath113 be a closed substitution .",
    "with regard to if1 we distinguish two cases .",
    "* @xmath615 for some @xmath609",
    ". then @xmath616 * @xmath617 for all @xmath609 . then using if1 we derive @xmath618 + with regard to if2 we distinguish two cases as well .",
    "* @xmath619 for some @xmath609 .",
    "then @xmath620 * @xmath617 for all @xmath609 . then using if2 we derive @xmath621 3 .",
    "consider the operator @xmath90 . from @xmath622 and @xmath623",
    "we derive @xmath624 + consider the prefix operator @xmath625 .",
    "we distinguish two cases .",
    "* @xmath619 for some @xmath609",
    ". then @xmath626 .",
    "* @xmath617 for all @xmath609 .",
    "then from @xmath622 we derive @xmath627    if @xmath298 , then _ a1 - 4+wif1+wif2@xmath302+w1 _ is @xmath0-complete for bccs(@xmath19 ) .",
    "this result was already obtained in @xcite ( they do not refer to @xmath0-completeness explicitly , but their completeness proof works for open terms , see ( * ? ? ?",
    "* thm .  5 ) ) . here",
    "it is a direct corollary of the link established in sect .",
    "[ sec : link ] , by the same reasoning as in sect .",
    "[ sec : wifp ] .",
    "we prove that the inequational theory of bccs(@xmath19 ) modulo @xmath4 does not have a finite basis in case of a finite alphabet @xmath19 with at least two elements .",
    "pick an @xmath280 and an @xmath484 .",
    "the cornerstone for this negative result is the following infinite family of inequations , for each @xmath464 : @xmath628 with @xmath629 we argue that these inequations are sound modulo @xmath4 .",
    "for any closed substitution @xmath119 we have @xmath630 and @xmath631 . to argue that @xmath632 and @xmath633 have the same weak impossible futures",
    ", it suffices to consider the transition @xmath634 . if @xmath471 , then @xmath635 generates the same weak impossible futures @xmath636 .",
    "if , on the other hand , @xmath637 for some @xmath638 , then @xmath639 , so @xmath640 generates the same weak impossible futures @xmath636 .",
    "we extend the notions of weak traces from closed to open terms , allowing weak traces of the form @xmath641 .",
    "this is done by treating each variable occurrence @xmath234 in a term as if it were a subterm @xmath642 with @xmath234 a concrete action .",
    "for example , under this convention the weak completed traces of @xmath643 are @xmath644 , @xmath234 and @xmath645 for all @xmath646 .",
    "we write @xmath647 for the set of weak traces of @xmath104 that end with a variable .",
    "so @xmath648 .",
    "note that @xmath649 implies @xmath650 for any terms @xmath651 and substitution  @xmath113 .",
    "[ traces - substitution ] let @xmath470 and @xmath119 a closed substitution .",
    "then @xmath652 iff there are a @xmath653 and @xmath654 such that @xmath655 and @xmath656 .",
    "[ trace - preservation ] let @xmath344 .",
    "if @xmath486 , then @xmath657 .",
    "it is not hard to see ( by substituting @xmath89 for all variables in @xmath104 and @xmath114 ) that @xmath486 implies that @xmath104 and @xmath114 must have the same weak traces ending with an action .",
    "pick distinct actions @xmath658 and an injection @xmath659 .",
    "let @xmath660 .",
    "define the closed substitution @xmath119 by @xmath661 for all @xmath662 . since @xmath466",
    ", we have @xmath663 . as @xmath664",
    ", @xmath665 is an injection , and @xmath289 and @xmath666 are distinct , it is not hard to see , by remark  [ traces - substitution ] , that this implies @xmath667 .",
    "[ newvariable3 ] let @xmath344 .",
    "if @xmath466 and @xmath467 , then there is a term @xmath270 with @xmath468 and @xmath668 .",
    "define the closed substitution @xmath119 as in the previous proof .",
    "since @xmath466 and @xmath475 , there must be a closed term @xmath97 with @xmath669 and @xmath670 .",
    "since @xmath671 is a bccsp(@xmath19 ) term for all @xmath662 , it follows that there is a term @xmath270 with @xmath672 and @xmath673 .",
    "again , as @xmath674 , @xmath665 is an injection , and @xmath289 and @xmath666 are distinct , it is not hard to see that @xmath675 implies @xmath668 . in case",
    "@xmath481 we are done , so assume @xmath482 . since @xmath486 and @xmath676 , clearly @xmath488 for some @xmath489 . and @xmath677 .    [ no - traces1 ]",
    "let @xmath310 .",
    "suppose that for some terms @xmath157 , substitution @xmath113 , action @xmath289 and @xmath491 :    1 .",
    "[ traces - prov1 ] @xmath486 ; 2 .",
    "[ traces - prov2 ] @xmath678 ; and 3 .",
    "[ traces - prov4 ] @xmath679 for a term @xmath680 without weak traces @xmath234 and @xmath645 for any @xmath646 .",
    "then @xmath681 for a term @xmath682 without weak traces @xmath234 and @xmath645 for any @xmath646 .    based on proviso ( [ traces - prov4 ] )",
    "there are two cases to consider .",
    "* @xmath683 for some term @xmath210 with @xmath684 . by lem .",
    "[ newvariable3 ] there is a term @xmath270 with @xmath468 and @xmath685 .",
    "so @xmath515 .",
    "by proviso ( [ traces - prov4 ] ) of the lemma , @xmath686 .",
    "assume , toward a contradiction , that @xmath687 for some @xmath646 .",
    "since @xmath678 , clearly there is a @xmath688 and a @xmath654 such that @xmath689 and @xmath690 .",
    "since @xmath691 , it follows that @xmath692 , which contradicts proviso ( [ traces - prov4 ] ) of the lemma .",
    "hence we can take @xmath693 .",
    "* @xmath694 and @xmath695 for some @xmath654 .",
    "[ trace - preservation ] yields @xmath696 , so @xmath697 .",
    "hence we can take @xmath698 .",
    "[ no - traces2 ] let @xmath310 , and let the axiomatization @xmath12 be sound for bccs(@xmath19 ) modulo @xmath4 .",
    "suppose that for some terms @xmath699 , action @xmath289 and @xmath491 :    1 .",
    "[ notraces - prov1 ] @xmath700 ; 2 .   [ notraces - prov2 ] @xmath701 ; and 3 .   [ notraces - prov4 ] @xmath702 for a term @xmath703 without weak traces @xmath234 and @xmath645 for any @xmath646",
    ".    then @xmath704 for a term @xmath705 without weak traces @xmath234 and @xmath645 for any @xmath646 .    by induction on a derivation of @xmath706 .",
    "reflexivity is trivial ; we focus on the other cases .",
    "* suppose @xmath707 because @xmath708 and @xmath709 for some @xmath710 and substitution @xmath113 .",
    "the claim then follows by lem .",
    "[ no - traces1 ] . *",
    "suppose @xmath707 because @xmath711 and @xmath712 for some @xmath114 . by induction ,",
    "@xmath713 for a term @xmath682 without weak traces @xmath234 and @xmath645 for any @xmath646 .. hence , again by induction , @xmath714 for a term @xmath705 without weak traces @xmath234 and @xmath645 for any @xmath646 . *",
    "suppose @xmath707 because @xmath715 and @xmath716 with @xmath717 and @xmath718 . since @xmath719 , we have @xmath720 or @xmath721 .",
    "assume , without loss of generality , that @xmath720 .",
    "by induction , @xmath722 for a term @xmath705 without weak traces @xmath234 and @xmath645 for any @xmath646 . and @xmath723 . *",
    "suppose @xmath706 because @xmath724 and @xmath725 with @xmath726 . by proviso ( [ notraces - prov4 ] ) of the proposition , @xmath322 , and either @xmath727 or @xmath720 . in the first case , by proviso ( [ notraces - prov4 ] ) of the proposition and lem .",
    "[ trace - preservation ] , @xmath728 has no weak traces @xmath234 and @xmath645 for any @xmath646 . and @xmath729 . in the second case , by induction , @xmath730 for a term @xmath705 without weak traces",
    "@xmath234 and @xmath645 for any @xmath646 . and @xmath714 .",
    "[ thm : alphabetn ] if @xmath310 , then the inequational theory of bccs(@xmath19 ) modulo @xmath4 does not have a finite basis .",
    "let @xmath12 be a finite axiomatization over bccs(@xmath19 ) that is sound modulo @xmath4 .",
    "let @xmath562 be greater than the weak depth of any term in @xmath12 . according to prop .",
    "[ no - traces2 ] , the inequation @xmath731 can not be derived from @xmath12 .",
    "yet it is sound modulo @xmath4 .",
    "likewise , the inequational theory of bccsp(@xmath19 ) modulo @xmath3 also does not have a finite basis in case of a non - singleton finite alphabet . if @xmath19 has two distinct elements @xmath289 and @xmath666 , then the cornerstone for this negative result is the following infinite family of inequations , for each @xmath464 : @xmath732 with @xmath733 the proof of the following theorem , which can be found in @xcite , is very similar to the proof of thm .",
    "[ thm : alphabetn ] , and is therefore omitted here .    if @xmath734 , then the inequational theory of bccsp(@xmath19 ) modulo @xmath3 does not have a finite basis .",
    "we prove that the inequational theory of bccs(@xmath19 ) modulo @xmath4 does not have a finite basis in case of a singleton alphabet .",
    "the cornerstone for this negative result is the following infinite family of inequations , for each @xmath464 : @xmath735 if @xmath350 , then these inequations are clearly sound modulo @xmath4 . in particular , for any closed substitution @xmath119 , @xmath736 .    for @xmath737 ,",
    "the inequations above show that lem .",
    "[ trace - preservation ] fails if @xmath350 .",
    "we now formulate a weaker variant of this lemma for @xmath350 .",
    "[ trace - preservation2 ] let @xmath738 .",
    "if @xmath486 , then @xmath739 .    select an injection @xmath659 .",
    "let @xmath660 .",
    "define the closed substitution @xmath119 by @xmath740 for all @xmath662 . since @xmath486 , we have @xmath741 .",
    "consider any @xmath742 .",
    "then @xmath743 .",
    "as @xmath744 and @xmath665 is an injection , it is not hard to see that this implies @xmath745 .",
    "[ 1 ] let @xmath738 .",
    "suppose that for some terms @xmath157 , substitution @xmath113 , variable @xmath234 and @xmath491 :    1 .",
    "@xmath486 ; 2 .",
    "@xmath674 ; and 3 .",
    "@xmath746 and @xmath747 for all @xmath748",
    ".    then @xmath749 and @xmath750 for all @xmath748 .",
    "since @xmath751 , clearly there is a @xmath752 with @xmath753 . consider the closed substitution @xmath119 defined by @xmath754 and @xmath755 for all @xmath756 . since @xmath757 , we have @xmath758 .",
    "so @xmath486 implies @xmath759 . since @xmath760 , clearly there are some @xmath761 and @xmath662 such that @xmath762 and @xmath763 . as @xmath764",
    ", it follows from the definition of @xmath119 that @xmath765 . since @xmath766 and @xmath767",
    ", it follows that @xmath768 . by lem .",
    "[ trace - preservation2 ] , @xmath769 for all @xmath748 .",
    "hence we obtain @xmath770 .",
    "[ lemmaalphabet1 ] let @xmath738 , and let the axiomatization @xmath12 be sound for bccs(@xmath19 ) modulo @xmath4 .",
    "suppose that for some terms @xmath699 , variable @xmath234 and @xmath491 :    1 .",
    "[ alphabet - prov1 ] @xmath700 ; 2 .",
    "[ alphabet - prov2 ] @xmath771 ; and 3 .",
    "[ alphabet - prov3 ] @xmath772 and @xmath773 for all @xmath748",
    ".    then @xmath774 and @xmath775 for all @xmath748 .",
    "by induction on a derivation of @xmath706 .",
    "reflexivity is trivial ; we focus on the other cases .",
    "* suppose @xmath707 because @xmath708 and @xmath709 for some @xmath710 and substitution @xmath113 .",
    "the claim then follows by lem .",
    "* suppose @xmath707 because @xmath711 and @xmath712 for some @xmath114 .",
    "by induction , @xmath776 and @xmath777 for all @xmath748 .",
    "hence , again by induction , @xmath774 and @xmath775 for all @xmath748 .",
    "* suppose @xmath707 because @xmath715 and @xmath716 with @xmath717 and @xmath718 . since @xmath772 , we have @xmath778 or @xmath779 .",
    "assume , without loss of generality , that @xmath780 .",
    "since @xmath781 for all @xmath748 , surely @xmath782 for all @xmath748 . by induction , @xmath783 , and hence @xmath774 . for all @xmath748",
    "we have @xmath773 , and hence @xmath784 , by lem .",
    "[ trace - preservation2 ] . *",
    "suppose @xmath706 because @xmath724 and @xmath725 with @xmath726 . by proviso ( [ alphabet - prov3 ] ) of the proposition , @xmath322 , @xmath780 and @xmath785 for all @xmath748 .",
    "by induction , @xmath786 and @xmath787 for all @xmath748 .",
    "hence @xmath774 and @xmath775 for all @xmath748 .",
    "[ thm : alphabet1 ] if @xmath350 , then the inequational theory of bccs(@xmath19 ) modulo @xmath4 does not have a finite basis .",
    "let @xmath12 be a finite axiomatization over bccs(@xmath19 ) that is sound modulo @xmath4 .",
    "let @xmath562 be greater than the weak depth of any term in @xmath12 . according to prop .",
    "[ lemmaalphabet1 ] , the inequation @xmath788 can not be derived from @xmath12 . yet , since @xmath350 , it is sound modulo @xmath4 .    likewise , the inequational theory of bccsp(@xmath19 ) modulo @xmath3 does not have a finite basis in case of a singleton alphabet .",
    "this negative result is based on the same infinite family of inequations as for the weak case : @xmath789 for each @xmath464 .",
    "the proof of the following theorem is more or less identical to the proof of thm .",
    "[ thm : alphabet1 ] , and is therefore omitted here .    if @xmath350 , then the inequational theory of bccsp(@xmath19 ) modulo @xmath3 does not have a finite basis .",
    "we have introduced a method to transform an axiomatization for a concrete semantics in the context of the process algebra bccsp to an axiomatization for a corresponding weak semantics with regard to bccs , such that the properties ground - completeness and @xmath0-completeness are preserved .",
    "trace , ( a form of ) completed trace , failures and impossible futures semantics are within the realm of this transformation method .",
    "exploiting this approach , we obtained axiomatizations for the weak trace , completed trace and failures preorders and equivalences .",
    "moreover , we performed a comprehensive and systematic study on the axiomatizability of concrete and weak impossible futures semantics over bccsp and bccs .",
    "table  [ tab : summary ] presents an overview , where @xmath143 indicates that a finite axiomatization exists , while @xmath790 indicates that a finite axiomatization does not exist .",
    "the table expands in two dimensions : ground - completeness vs.  @xmath0-completeness and preorder vs.  equivalence .",
    "when necessary , we distinguish two categories , according to the cardinality of the alphabet @xmath19 : finite or infinite .",
    "impossible futures semantics is the first example that , in the context of bccsp / bccs , affords a ground - complete axiomatization modulo the preorder , while missing a ground - complete axiomatization modulo the equivalence .",
    "this research was initiated by questions from jos baeten , on axiomatizing impossible futures semantics , and from david de frutos - escrig , on relating the axiomatizability of concrete and weak impossible futures semantics .",
    "l. aceto , w. fokkink , a. ingolfsdottir and b. luttik .",
    "finite equational bases in process algebra : results and open questions . in _ processes , terms and cycles : steps on the road to infinity",
    "_ , lncs 3838 , pp .",
    "338367 , springer , 2005 ."
  ],
  "abstract_text": [
    "<S> a general method is established to derive a ground - complete axiomatization for a weak semantics from such an axiomatization for its concrete counterpart , in the context of the process algebra bccs . </S>",
    "<S> this transformation moreover preserves @xmath0-completeness . </S>",
    "<S> it is applicable to semantics at least as coarse as impossible futures semantics . as an application , ground- and @xmath0-complete axiomatizations </S>",
    "<S> are derived for weak failures , completed trace and trace semantics . </S>",
    "<S> we then present a finite , sound , ground - complete axiomatization for the concrete impossible futures _ preorder _ , which implies a finite , sound , ground - complete axiomatization for the _ weak _ impossible futures preorder . </S>",
    "<S> in contrast , we prove that no finite , sound axiomatization for bccs modulo concrete and weak impossible futures _ equivalence _ is ground - complete . </S>",
    "<S> if the alphabet of actions is infinite , then the aforementioned ground - complete axiomatizations are shown to be @xmath0-complete . if the alphabet is finite , we prove that the inequational theories of bccs modulo the concrete and weak impossible futures preorder lack such a finite basis .    </S>",
    "<S> [ multiblock footnote omitted ]    [ multiblock footnote omitted ] </S>"
  ]
}
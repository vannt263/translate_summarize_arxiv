{
  "article_text": [
    "with the recent advancement in computer vision and in natural language processing ( nlp ) , image question answering ( qa ) becomes one of the most active research areas  @xcite . unlike pure language based qa systems that have been studied extensively in the nlp community  @xcite ,",
    "image qa systems are designed to automatically answer natural language questions according to the content of a reference image .",
    "1.0     1.0     most of the recently proposed image qa models are based on neural networks @xcite .",
    "a commonly used approach was to extract a global image feature vector using a convolution neural network ( cnn )  @xcite and encode the corresponding question as a feature vector using a long short - term memory network ( lstm )  @xcite and then combine them to infer the answer .",
    "though impressive results have been reported , these models often fail to give precise answers when such answers are related to a set of _ fine - grained _ regions in an image .    by examining the image qa data sets , we find that it is often that case that answering a question from an image requires multi - step reasoning .",
    "take the question and image in fig .",
    "[ fig : model_example ] as an example .",
    "there are several objects in the .",
    "the san consists of three major components : ( 1 ) the image model , which uses a cnn to extract high level image representations , e.g. one vector for each region of the image ; ( 2 ) the question model , which uses a cnn or a lstm to extract a semantic vector of the question and ( 3 ) the stacked attention model , which locates , via multi - step reasoning , the image regions that are relevant to the question for answer prediction . as illustrated in fig .",
    "[ fig : vqa_attention ] , the san first uses the question vector to query the image vectors in the first visual attention layer , then combine the question vector and the retrieved image vectors to form a refined query vector to query the image vectors again in the second attention layer .",
    "the higher - level attention layer gives a sharper attention distribution focusing on the regions that are more relevant to the answer .",
    "finally , we combine the image features from the highest attention layer with the last query vector to predict the answer .",
    "the main contributions of our work are three - fold .",
    "first , we propose a stacked attention network for image qa tasks .",
    "second , we perform comprehensive evaluations on four image qa benchmarks , demonstrating that the proposed multiple - layer san outperforms previous state - of - the - art approaches by a substantial margin .",
    "third , we perform a detailed analysis where we visualize the outputs of different attention layers of the san and demonstrate the process that the san takes multiple steps to progressively focus the attention on the relevant visual clues that lead to the answer .",
    "image qa is closely related to image captioning  @xcite . in @xcite ,",
    "the system first extracted a high level image feature vector from googlenet and then fed it into a lstm to generate captions .",
    "the method proposed in @xcite went one step further to use an attention mechanism in the caption generation process .",
    "different from @xcite , the approach proposed in @xcite first used a cnn to detect words given the images , then used a maximum entropy language model to generate a list of caption candidates , and finally used a deep multimodal similarity model ( dmsm ) to re - rank the candidates .",
    "instead of using a rnn or a lstm , the dmsm uses a cnn to model the semantics of captions .    unlike image captioning , in image qa",
    ", the question is given and the task is to learn the relevant visual and text representation to infer the answer . in order to facilitate the research of image qa , several data sets have been constructed in  @xcite either through automatic generation based on image caption data or by human labeling of questions and answers given images . among them , the image qa data set in  @xcite is generated based on the coco caption data set . given a sentence that describes an image , the authors first used a parser to parse the sentence , then replaced the key word in the sentence using question words and the key word became the answer .",
    "@xcite created an image qa data set through human labeling .",
    "the initial version was in chinese and then was translated to english .",
    "@xcite also created an image qa data set through human labeling .",
    "they collected questions and answers not only for real images , but also for abstract scenes .",
    "several image qa models were proposed in the literature .",
    "@xcite used semantic parsers and image segmentation methods to predict answers based on images and questions .",
    "@xcite both used encoder - decoder framework to generate answers given images and questions .",
    "they first used a lstm to encoder the images and questions and then used another lstm to decode the answers .",
    "they both fed the image feature to every lstm cell .",
    "@xcite proposed several neural network based models , including the encoder - decoder based models that use single direction lstms and bi - direction lstms , respectively .",
    "however , the authors found the concatenation of image features and bag of words features worked the best . @xcite first encoded questions with lstms and then combined question vectors with image vectors by element wise multiplication .",
    "@xcite used a cnn for question modeling and used convolution operations to combine question vectors and image feature vectors .",
    "we compare the san with these models in sec .",
    "[ sec : experiments ] .",
    "to the best of our knowledge , the attention mechanism , which has been proved very successful in image captioning , has not been explored for image qa .",
    "the san adapt the attention mechanism to image qa , and can be viewed as a significant extension to previous models  @xcite in that multiple attention layers are used to support multi - step reasoning for the image qa task .",
    "the overall architecture of the san is shown in fig .  [",
    "fig : vqa_attention ] . we describe the three major components of san in this section : the image model , the question model , and the stacked attention model .",
    "the image model uses a cnn  @xcite to get the representation of images .",
    "specifically , the vggnet  @xcite is used to extract the image feature map @xmath0 from a raw image @xmath1 :        @xmath2    unlike previous studies  @xcite that use features from the last inner product layer , we choose the features @xmath0 from the last pooling layer , which retains spatial information of the original images .",
    "we first rescale the images to be @xmath3 pixels , and then take the features from the last pooling layer , which therefore have a dimension of @xmath4 , as shown in fig .",
    "[ fig : cnn_img ] .",
    "@xmath5 is the number of regions in the image and @xmath6 is the dimension of the feature vector for each region .",
    "accordingly , each feature vector in @xmath0 corresponds to a @xmath7 pixel region of the input images .",
    "we denote by @xmath8 $ ] the feature vector of each image region .",
    "then for modeling convenience , we use a single layer perceptron to transform each feature vector to a new vector that has the same dimension as the question vector ( described in sec .",
    "[ sec : question_model ] ) : @xmath9 where @xmath10 is a matrix and its i - th column @xmath11 is the visual feature vector for the region indexed by @xmath12 .      as  @xcite show",
    "that lstms and cnns are powerful to capture the semantic meaning of texts , we explore both models for question representations in this study .          the essential structure of a lstm unit is a memory cell @xmath13 which reserves the state of a sequence . at each step , the lstm unit takes one input vector ( word vector in our case ) @xmath14 and updates the memory cell @xmath13 , then output a hidden state @xmath15 .",
    "the update process uses the gate mechanism .",
    "a forget gate @xmath16 controls how much information from past state @xmath17 is preserved .",
    "an input gate @xmath18 controls how much the current input @xmath14 updates the memory cell .",
    "an output gate @xmath19 controls how much information of the memory is fed to the output as hidden state .",
    "the detailed update process is as follows : @xmath20 where @xmath21 are input gate , forget gate , output gate and memory cell , respectively .",
    "the weight matrix and bias are parameters of the lstm and are learned on training data .",
    "given the question @xmath22 $ ] , where @xmath23 is the one hot vector representation of word at position @xmath24 , we first embed the words to a vector space through an embedding matrix @xmath25 .",
    "then for every time step , we feed the embedding vector of words in the question to lstm : @xmath26    as shown in fig .  [",
    "fig : lstm ] , the question ` what are sitting in the basket on a bicycle ` is fed into the lstm .",
    "then the final hidden layer is taken as the representation vector for the question , i.e. , @xmath27 .          in this study",
    ", we also explore to use a cnn similar to  @xcite for question representation .",
    "similar to the lstm - based question model , we first embed words to vectors @xmath25 and get the question vector by concatenating the word vectors : @xmath28 .    \\vspace{-0.5cm}\\end{aligned}\\ ] ] then we apply convolution operation on the word embedding vectors .",
    "we use three convolution filters , which have the size of one ( unigram ) , two ( bigram ) and three ( trigram ) respectively .",
    "the @xmath24-th convolution output using window size @xmath29 is given by : @xmath30 the filter is applied only to window @xmath31 of size @xmath29 .",
    "@xmath32 is the convolution weight and @xmath33 is the bias .",
    "the feature map of the filter with convolution size @xmath29 is given by : @xmath34.\\end{aligned}\\ ] ]    then we apply max - pooling over the feature maps of the convolution size @xmath29 and denote it as @xmath35.\\end{aligned}\\ ] ] the max - pooling over these vectors is a coordinate - wise max operation . for convolution feature maps of different sizes @xmath36",
    ", we concatenate them to form the feature representation vector of the whole question sentence : @xmath37,\\end{aligned}\\ ] ] hence @xmath38 is the cnn based question vector .",
    "the diagram of cnn model for question is shown in fig .",
    "[ fig : cnn ] .",
    "the convolutional and pooling layers for unigrams , bigrams and trigrams are drawn in red , blue and orange , respectively .",
    "given the image feature matrix @xmath10 and the question feature vector @xmath39 , san predicts the answer via multi - step reasoning .    in many cases , an answer only related to a small region of an image .",
    "for example , in fig .",
    "[ fig : example ] , although there are multiple objects in the   and the question vector @xmath39 , we first feed them through a single layer neural network and then a softmax function to generate the attention distribution over the regions of the ] where @xmath40 , @xmath41 is the image representation dimension and @xmath42 is the number of image regions , @xmath43 is a @xmath41 dimensional vector",
    ". suppose @xmath44 and @xmath45 , then @xmath46 is an @xmath42 dimensional vector , which corresponds to the attention probability of each image region given @xmath39 .",
    "note that we denote by @xmath47 the addition of a matrix and a vector .",
    "since @xmath48 and both @xmath49 are vectors , the addition between a matrix and a vector is performed by adding each column of the matrix by the vector .    based on the attention distribution , we calculate the weighted sum of the image vectors , each from a region , @xmath50 as in eq .",
    "[ eq : weighted_sum ] .",
    "we then combine @xmath50 with the question vector @xmath39 to form a refined query vector @xmath51 as in eq .",
    "[ eq : query ] .",
    "@xmath51 is regarded as a refined query since it encodes both question information and the visual information that is relevant to the potential answer : @xmath52    compared to models that simply combine the question vector and the global image vector , attention models construct a more informative @xmath51 since higher weights are put on the visual regions that are more relevant to the question .",
    "however , for complicated questions , a single attention layer is not sufficient to locate the correct region for answer prediction .",
    "for example , the question in fig .",
    "[ fig : model_example ] ` what are sitting in the basket on a bicycle ` refers to some subtle relationships among multiple objects in an image .",
    "therefore , we iterate the above query - attention process using multiple attention layers , each extracting more fine - grained visual attention information for answer prediction . formally , the sans take the following formula : for the @xmath53-th attention layer , we compute : @xmath54 where @xmath55 is initialized to be @xmath39 .",
    "then the aggregated image feature vector is added to the previous query vector to form a new query vector : @xmath56    that is , in every layer , we use the combined question and image vector @xmath57 as the query for the image .",
    "after the image region is picked , we update the new query vector as @xmath58 .",
    "we repeat this @xmath59 times and then use the final @xmath60 to infer the answer : @xmath61    fig .",
    "[ fig : example ] illustrates the reasoning process by an example . in the first attention layer ,",
    "the model identifies roughly the area that are relevant to ` basket , bicycle ` , and ` sitting in ` . in the second attention layer",
    ", the model focuses more sharply on the region that corresponds to the answer ` dogs ` .",
    "more examples can be found in sec .",
    "[ sec : experiments ] .",
    "we evaluate the san on four image qa data sets .",
    "* daquar - all * is proposed in @xcite .",
    "there are @xmath62 training questions and @xmath63 test questions .",
    "these questions are generated on @xmath64 and @xmath65 images respectively .",
    "the images are mainly indoor scenes .",
    "the questions are categorized into three types including _ object _ , _ color _ and _",
    "number_. most of the answers are single words . following the setting in @xcite , we exclude data samples that have multiple words answers . the remaining data set covers @xmath66 of the original data set .    * daquar - reduced * is a reduced version of daquar - all .",
    "there are @xmath67 training samples and @xmath68 test samples .",
    "this data set is constrained to @xmath69 object categories and uses only @xmath70 test images .",
    "the single word answers data set covers @xmath71 of the original data set .",
    "* coco - qa * is proposed in @xcite .",
    "based on the microsoft coco data set , the authors first parse the caption of the image with an off - the - shelf parser , then replace the key components in the caption with question words for form questions .",
    "there are @xmath72 training samples and @xmath73 test samples in the data set .",
    "these questions are based on @xmath74 and @xmath75 images respectively .",
    "there are four types of questions including _ object _ , _ number _ , _ color _ , and _",
    "location_. each type takes @xmath76 , and @xmath77 of the whole data set , respectively .",
    "all answers in this data set are single word .",
    "* vqa * is created through human labeling @xcite .",
    "the data set uses images in the coco image caption data set  @xcite . unlike the other data sets , for each image , there are three questions and for each question , there are ten answers labeled by human annotators .",
    "there are @xmath78 training questions and @xmath79 validation questions in the data set .",
    "following @xcite , we use the top @xmath80 most frequent answer as possible outputs and this set of answers covers @xmath81 of all answers .",
    "we first studied the performance of the proposed model on the validation set .",
    "following @xcite , we split the validation data set into two halves , val1 and val2 .",
    "we use training set and val1 to train and validate and val2 to test locally .",
    "the results on the val2 set are reported in table .",
    "[ tab : vqa ] .",
    "we also evaluated the best model , san(2 , cnn ) , on the standard test server as provided in @xcite and report the results in table .",
    "[ tab : vqa_server ] .",
    "we compare our models with a set of baselines proposed recently  @xcite on image qa . since the results of these baselines are reported on different data sets in different literature , we present the experimental results on different data sets in different tables .    for all four data sets ,",
    "we formulate image qa as a classification problem since most of answers are single words .",
    "we evaluate the model using classification accuracy as reported in @xcite .",
    "the reference models also report the wu - palmer similarity ( wups ) measure @xcite .",
    "the wups measure calculates the similarity between two words based on their longest common subsequence in the taxonomy tree .",
    "we can set a for wups , if the similarity is less than the threshold , then it is zeroed out . following the reference models",
    ", we use wups0.9 and wups0.0 as evaluation metrics besides the classification accuracy .",
    "the evaluation on the vqa data set is different from other three data sets , since for each question there are ten answer labels that may or may not be the same .",
    "we follow  @xcite to use the following metric : @xmath82 , which basically gives full credit to the answer when three or more of the ten human labels match the answer and gives partial credit if there are less matches .      for the image model",
    ", we use the vggnet to extract features . when training the san , the parameter set of the cnn of the vggnet is fixed .",
    "we take the output from the last pooling layer as our image feature which has a dimension of @xmath83 .    for daquar and coco - qa , we set the word embedding dimension and lstm s dimension to be @xmath84 in the question model . for the cnn based question model",
    ", we set the unigram , bigram and trigram convolution filter size to be @xmath85 , @xmath86 , @xmath86 respectively .",
    "the combination of these filters makes the question vector size to be @xmath87 . for vqa dataset ,",
    "since it is larger than other data sets , we double the model size of the lstm and the cnn to accommodate the large data set and the large number of classes . in evaluation",
    ", we experiment with san with one and two attention layers .",
    "we find that using three or more attention layers does not further improve the performance .    in our experiments ,",
    "all the models are trained using stochastic gradient descent with momentum @xmath88 .",
    "the batch size is fixed to be @xmath89 .",
    "the best learning rate is picked using grid search .",
    "gradient clipping technique  @xcite and dropout  @xcite are used .",
    "the experimental results on daquar - all , daquar - reduced , coco - qa and vqa are presented in table .",
    "[ tab : daquar_all_results ] to  [ tab : vqa ] respectively .",
    "our model names explain their settings : san is short for the proposed stacked attention networks , the value 1 or 2 in the brackets refer to using one or two attention layers , respectively .",
    "the keyword lstm or cnn refers to the question model that sans use .",
    "l c c c methods & accuracy & wups0.9 & wups0.0 +   + multi - world & 7.9 & 11.9 & 38.8 +   + language & 19.1 & 25.2 & 65.1 + language + img & 21.7 & 28.0 & 65.0 + * ` cnn : ` * @xcite + img - cnn & 23.4 & 29.6 & 63.0 +   + san(1 , lstm ) & 28.9 & 34.7 & 68.5 + san(1 , cnn ) & 29.2 & 35.1 & 67.8 + san(2 , lstm ) & * 29.3 * & 34.9 & 68.1 + san(2 , cnn ) & * 29.3 * & * 35.1 * & * 68.6 * +   + human & 50.2 & 50.8 & 67.3 +    l c c c methods & accuracy & wups0.9 & wups0.0 +   + multi - world & 12.7 & 18.2 & 51.5 +   + language & 31.7 & 38.4 & 80.1 + language + img & 34.7 & 40.8 & 79.5 + @xcite + guess & 18.2 & 29.7 & 77.6 + bow & 32.7 & 43.2 & 81.3 + lstm & 32.7 & 43.5 & 81.6 + img+bow & 34.2 & 45.0 & 81.5 + vis+lstm & 34.4 & 46.1 & 82.2 + 2-vis+blstm & 35.8 & 46.8 & 82.2 + @xcite + img - cnn & 39.7 & 44.9 & 83.1 +   + san(1 , lstm ) & 45.2 & 49.6 & 84.0 + san(1 , cnn ) & 45.2 & 49.6 & 83.7 + san(2 , lstm ) & * 46.2 * & * 51.2 * & * 85.1 * + san(2 , cnn ) & 45.5 & 50.2 & 83.6 +   + human & 60.3 & 61.0 & 79.0 +    .coco - qa results , in percentage [ cols=\"<,^,^,^\",options=\"header \" , ]     the experimental results in table .  [",
    "tab : daquar_all_results ] to [ tab : vqa ] show that the two - layer san gives the best results across all data sets and the two kinds of question models in the san , lstm and cnn , give similar performance . for example",
    ", on daquar - all ( table .",
    "[ tab : daquar_all_results ] ) , both of the proposed two - layer sans outperform the two best baselines , the img - cnn in @xcite and the ask - your - neuron in @xcite , by @xmath90 and @xmath91 absolute in accuracy , respectively .",
    "similar range of improvements are observed in metrics of wups0.9 and wups0.0 .",
    "we also observe significant improvements on daquar - reduced ( table .",
    "[ tab : daquar_reduced_results ] ) , i.e. , our san(2 , lstm ) outperforms the img - cnn @xcite , the 2-vis+blstm @xcite , the ask - your - neurons approach @xcite and the multi - world @xcite by @xmath92 , @xmath93 , @xmath94 and @xmath95 absolute in accuracy , respectively . on the larger coco - qa data set , the proposed two - layer sans significantly outperform the best baselines from @xcite ( img - cnn ) and @xcite ( img+bow and 2-vis+blstm ) by 5.1% and 6.6% in accuracy ( table .",
    "[ tab : coco_results ] ) . table .",
    "[ tab : vqa_server ] summarizes the performance of various models on vqa , which is the largest among the four data sets .",
    "the overall results show that our best model , san(2 , cnn ) , outperforms the lstm q+i model , the best baseline from @xcite , by 4.8% absolute .",
    "the superior performance of the sans across all four benchmarks demonstrate the effectiveness of using multiple layers of attention .    in order to study the strength and weakness of the san in detail , we report performance at the question - type level on the two large data sets , coco - qa and vqa , in table .  [",
    "tab : coco_perclass ] and  [ tab : vqa_server ] , respectively .",
    "we observe that on coco - qa , compared to the two best baselines , img+bow and 2-vis+blstm , out best model san(2 , cnn ) improves 7.2% in the question type of _ color _ , followed by 6.1% in _ objects _",
    ", 5.7% in _ location _ and 4.2% in _ number_. we observe similar trend of improvements on vqa . as shown in table .",
    "[ tab : vqa_server ] , compared to the best baseline lstm q+i , the biggest improvement of san(2 , cnn ) is in the _ other _ type , 9.7% , followed by the 1.4% improvement in _ number _ and 0.4% improvement in _ yes / no_. note that the _ other _ type in vqa refers to questions that usually have the form of `` what color , what kind , what are , what type , where '' etc . , which are similar to question types of _ color _ , _ objects _ and _ location _ in coco - qa .",
    "the vqa data set has a special _ yes / no _ type of questions .",
    "the san only improves the performance of this type of questions slightly .",
    "this could due to that the answer for a _ yes / no _ question is very question dependent , so better modeling of the visual information does not provide much additional gains .",
    "this also confirms the similar observation reported in @xcite , e.g. , using additional image information only slightly improves the performance in _ yes / no _ , as shown in table .",
    "[ tab : vqa_server ] , q+i vs question , and lstm q+i vs lstm q.    our results demonstrate clearly the positive impact of using multiple attention layers . in all four data sets ,",
    "two - layer sans always perform better than the one - layer san .",
    "specifically , on coco - qa , on average the two - layer sans outperform the one - layer sans by 2.2% in the type of _ color _ , followed by 1.3% and 1.0% in the _ location _ and _ objects _ categories , and then 0.4% in _",
    "number_. this aligns to the order of the improvements of the san over baselines .",
    "similar trends are observed on vqa ( table .",
    "[ tab : vqa ] ) , e.g. , the two - layer san improve over the one - layer san by 1.4% for the _ other _ type of question , followed by 0.2% improvement for _ number _ , and flat for _ yes / no_.      in this section , we present analysis to demonstrate that using multiple attention layers to perform multi - step reasoning leads to more fine - grained attention layer - by - layer in locating the regions that are relevant to the potential answers .",
    "we do so by visualizing the outputs of the attention layers of a sample set of images from the coco - qa test set .",
    "note the attention probability distribution is of size @xmath5 and the original image is @xmath96 , we up - sample the attention probability distribution and apply a gaussian filter to make it the same size as the original image .",
    "[ fig : vqa_more_examples ] presents six examples .",
    "more examples are presented in the appendix .",
    "they cover types as broad as _ object _ , _ numbers _ , _ color _ and _",
    "location_. for each example , the three images from left to right are the original image , the output of the first attention layer and the output of the second attention layer , respectively .",
    "the bright part of the image is the detected attention . across all those examples",
    ", we see that in the first attention layer , the attention is scattered on many objects in the image , largely corresponds to the objects and concepts referred in the question , whereas in the second layer , the attention is far more focused on the regions that lead to the correct answer .",
    "for example , consider the question ` what is the color of the horns ` , which asks the color of the horn on the woman s head in fig .",
    "[ fig : vqa_more_examples](f ) . in the output of the first attention layer",
    ", the model first recognizes a woman in the image . in the output of the second attention layer ,",
    "the attention is focused on the head of the woman , which leads to the answer of the question : the color of the horn is ` red ` .",
    "we randomly sample 100 images from the coco - qa test set that the san make mistakes .",
    "we group the errors into four categories : ( i ) the sans focus the attention on the wrong regions ( 22% ) , e.g. , the example in fig .  [",
    "fig : vqa_wrong_examples](a ) ; ( ii ) the sans focus on the right region but predict a wrong answer ( 42% ) , e.g. , the examples in fig .",
    "[ fig : vqa_wrong_examples](b)(c)(d ) ; ( iii ) the answer is ambiguous , the sans give answers that are different from labels , but might be acceptable ( 31% ) .",
    "e.g. , in fig .",
    "[ fig : vqa_wrong_examples](e ) , the answer label is ` pot ` , but out model predicts ` vase ` , which is also visually reasonable ; ( iv ) the labels are clearly wrong ( 5% ) .",
    "e.g. , in fig .",
    "[ fig : vqa_wrong_examples](f ) , our model gives the correct answer ` trains ` while the label ` cars ` is wrong .",
    "in this paper , we propose a new stacked attention network ( san ) for image qa .",
    "san uses a multiple - layer attention mechanism that queries an image multiple times to locate the relevant visual region and to infer the answer progressively .",
    "experimental results demonstrate that the proposed san significantly outperforms previous state - of - the - art approaches by a substantial margin on all four image qa data sets .",
    "the visualization of the attention layers further illustrates the process that the san focuses the attention to the relevant visual clues that lead to the answer of the question layer - by - layer ."
  ],
  "abstract_text": [
    "<S> this paper presents stacked attention networks ( sans ) that learn to answer natural language questions from images . </S>",
    "<S> sans use semantic representation of a question as query to search for the regions in an image that are related to the answer . </S>",
    "<S> we argue that image question answering ( qa ) often requires multiple steps of reasoning . </S>",
    "<S> thus , we develop a multiple - layer san in which we query an image multiple times to infer the answer progressively . </S>",
    "<S> experiments conducted on four image qa data sets demonstrate that the proposed sans significantly outperform previous state - of - the - art approaches . </S>",
    "<S> the visualization of the attention layers illustrates the progress that the san locates the relevant visual clues that lead to the answer of the question layer - by - layer . </S>"
  ]
}
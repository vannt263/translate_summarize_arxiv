{
  "article_text": [
    "twenty questions is a classic parlour game involving an answerer and a questioner .",
    "the questioner must guess what object the answerer is thinking of , but is only allowed to ask questions whose answers are either  yes \" or  no \" .",
    "popular initial questions include :  is it an animal ?",
    "is it a vegetable ?",
    "is it a mineral ? \"",
    "the name of the game arises from the fact that if one bit of information could be acquired from each question , then twenty questions can distinguish between @xmath2 different objects , which should be more than sufficient .",
    "courses in information theory often cast huffman coding as the optimal approach to twenty questions .",
    "given the set of possible objects and their probabilities , the questioner associates a huffman codeword with each object , and then inquires about each bit of the codeword that the questioner is thinking of .",
    "the average number of questions is the huffman tree s average depth , which is no less than @xmath0 , and less than @xmath1 , where @xmath3 is the random variable indicating which of @xmath4 objects the answerer is thinking of .",
    "however , upon further thought , there is a disparity between huffman coding and how twenty questions games are played .",
    "namely , real - world twenty questions games always terminate with the questioner pinpointing a specific object ( e.g. ,  is it a _ tank _ ? \"",
    "@xcite ) , to which the answerer replies ,  yes ! \" in terms of source coding , this is equivalent to enforcing what we call the _ terminating yes constraint _ : all codewords must terminate with  1 \" . yet",
    "huffman codes do not satisfy this constraint ! in short , huffman trees determine @xmath3 , but do not specify @xmath3 .    in this paper , we first provide an example showing that simply appending branches to a huffman tree may not produce the optimal twenty questions tree .",
    "we then prove that even under the terminating yes constraint , the average number of questions lies strictly between @xmath0 and @xmath5 .",
    "since huffman coding solves twenty questions without a terminating yes , a natural idea is to first produce the huffman tree , and then append branches to it so the terminating yes constraint is satisfied . call the result an _ augmented huffman tree_. in the following example , we show that augmented huffman trees may not be optimal twenty questions trees .",
    "suppose there are only four objects the answerer could be thinking of .",
    "denote them by @xmath6 , with corresponding probabilities @xmath7 .",
    "figure [ fig:4objects ] shows the only two four - leaf questioning trees possible up to graph isomorphism , where the dashed edges have been added to accommodate the terminating yes constraint .",
    "although there are many possible assignments of objects to leaves , the assignments shown in figure [ fig:4objects ] are the only reasonable candidates which place lower probability objects at shallower depths .",
    "one naturally imagines that the choice of a questioning tree should depend on the probability distribution .",
    "for instance , if the probabilities are close to uniform , we would guess that the balanced tree is better .",
    "however , if we let @xmath8 and @xmath9 denote the average number of questions used by the unary and balanced trees , respectively , then @xmath10 and the difference is @xmath11 with equality if and only if the distribution is uniform .",
    "apparently the unary tree dominates the balanced tree , regardless of the probabilities !",
    "we think this makes for a good bar bet .",
    "this example demonstrates that augmenting a huffman tree does not necessarily produce the optimal twenty questions tree .",
    "for example , if the probabilities were @xmath12 , then the resulting augmented huffman tree would yield the balanced tree , although the unary tree is better .",
    "in fact , among all distributions for which the huffman algorithm produces a balanced tree , the maximum difference in the average number of questions required by the balanced and unary trees approaches 1/3 , and is achieved with the distribution @xmath13 .",
    "let @xmath14 be the average depth of the huffman tree , and let @xmath15 be the average depth of the optimal twenty questions tree . in this section , we prove @xmath16 note that these are the same bounds satisfied by @xmath14 , except for the strict inequality in the lower bound .",
    "we first require two lemmas .",
    "[ lem : halfbit ] a binary tree that does not satisfy the terminating yes constraint can be modified to satisfy it while adding no more than 1/2 to the average depth .",
    "let @xmath17 be a tree that does not satisfy the terminating yes constraint . by appending a branch to all leaves",
    "whose codewords end with 0 , we can construct an augmented tree @xmath18 that does satisfy it .",
    "( this forces all leaves to sway in the same direction . ) to minimize the increase in average depth , interchange siblings in @xmath17 as necessary so that the lower probability sibling is always the one that receives the appended branch .",
    "consequently , if the average length of @xmath17 is @xmath19 , the average length of @xmath18 will be no more than @xmath20 .",
    "[ lem : gallager1978variations ] for all finite distributions , @xmath21 , where @xmath22 is the largest probability , and @xmath23 .",
    "see gallager @xcite .",
    "[ thm : entropybounds ] @xmath24 .",
    "we first establish the lower bound . by pruning the appended branches of the optimal twenty questions tree",
    ", we have a new tree of reduced average depth in which every internal node has two children . amongst all such trees ,",
    "the huffman tree has lowest average depth , so @xmath25 .",
    "lastly , @xmath26 ( see cover and thomas @xcite ) .    for the upper bound , we consider two cases .",
    "first , suppose @xmath27 .",
    "from lemma [ lem : gallager1978variations ] , @xmath28 adding 1/2 to both sides and rearranging , @xmath29 from lemma [ lem : halfbit ] , @xmath30 .",
    "thus , @xmath31    when @xmath32 , we prove the upper bound by induction on the number of objects .",
    "let @xmath3 be a random variable taking @xmath4 possible values , and let @xmath33 be the tree with minimum average depth under both the terminating yes constraint _ and _ the additional constraint that the most probable object has a codeword of length one .",
    "this tree @xmath33 is illustrated in figure [ fig : inductionargumenttree ] . while this additional constraint may result in a suboptimal tree",
    ", we will show that @xmath33 satisfies the desired upper bound regardless , and thus the optimal twenty questions tree does also .",
    "used in the induction argument when @xmath32 . ]",
    "let @xmath34 denote the average depth of @xmath33 , and let @xmath35 denote the right subtree containing @xmath36 leaves .",
    "then @xmath37 where @xmath38 denotes the average depth of @xmath35 . also , by the grouping law for entropy , @xmath39 where @xmath40 is the random variable given by the remaining @xmath36 normalized probabilities @xmath41 . subtracting these equations , @xmath42 by construction of @xmath33",
    ", it follows that @xmath35 is an optimal twenty questions tree for @xmath40 . by the induction hypothesis , @xmath43 , and thus @xmath44 since @xmath22 could be any value in @xmath45 $ ]",
    ", we want the largest upper bound , to cover all our bases . setting @xmath46 , @xmath47 thus , @xmath48",
    "lastly , by comparing the bounds @xmath49 we conclude that @xmath50 since the classical bounds in equation [ eq : classicalbounds ] are tight , it follows that the bounds in theorem [ thm : entropybounds ] are also tight .",
    "we have provided resolution to a disconnect between the twenty questions game and huffman coding .",
    "although twenty questions games always end with  yes \" , thankfully the average number of questions they require is still within one of the entropy  a nice answer to a simple problem . as forrest",
    "gump would say , ",
    "one less thing to worry about . \"",
    "the authors graciously thank thomas cover for conceiving this problem and sharing many enlightening discussions pertaining to it , as well as paul cuff for his expertise in the most excellent adventures of bill and ted .",
    "john t. gill iii received the b.s .",
    "in applied mathematics from georgia tech in 1967 , and the m.a . and ph.d .",
    "degrees in mathematics from the university of california berkeley , in 1969 and 1972 , respectively .",
    "since then he has been associate professor of electrical engineering at stanford university , stanford , ca .",
    "his research interests include computational complexity theory , information theory , probabilistic computation , and efficient representations of data .",
    "his investigations of the p vs. np question include the baker - gill - solovay relativization theorem .",
    "william wu received the b.s .",
    "degree in electrical engineering and computer science from the university of california , berkeley in 2003 . at stanford university",
    ", he received m.s .",
    "degrees in electrical engineering and mathematics in 2005 and 2009 , and recently defended his ph.d . in electrical engineering .",
    "he is the creator of wuriddles.com , a large archive of mathematical puzzles .",
    "his research interests include sampling and reconstruction , signal processing , communications , and recreational math ."
  ],
  "abstract_text": [
    "<S> huffman coding is often presented as the optimal solution to twenty questions . however , a caveat is that twenty questions games always end with a reply of  yes , \" whereas huffman codewords need not obey this constraint . </S>",
    "<S> we bring resolution to this issue , and prove that the average number of questions still lies between @xmath0 and @xmath1 .    </S>",
    "<S> huffman coding , entropy , twenty questions game , gallager s redundancy bound </S>"
  ]
}
{
  "article_text": [
    "a quantum algorithm for the satisfiability problem was presented in [ 1 ] .",
    "this algorithm is based on quantum adiabatic evolution .",
    "if a state @xmath0 evolves according to the schrdinger equation with a slowly varying hamiltonian @xmath1 and @xmath2 is the ground state of @xmath3 , then @xmath0 will stay close to the instantaneous ground state of @xmath1 .",
    "the hamiltonian @xmath1 used in the algorithm is designed so that the ground state of @xmath3 is easy to construct and the ground state of @xmath4 encodes the solution to the instance of satisfiability . a crucial question is how large must the running time , @xmath5 , be to achieve an acceptable probability of success . in this paper",
    "we simulate an @xmath6-qubit continuous time quantum computer by numerically integrating the schrdinger equation in a @xmath7-dimensional hilbert space .",
    "we randomly generate difficult instances of an np - complete problem and study how large @xmath5 must be as a function of the number of bits @xmath6 . for @xmath8 ,",
    "we find that the required @xmath5 grows modestly with @xmath6 since the data is well fit by a quadratic in @xmath6 .",
    "an @xmath6-bit instance of satisfiability is a boolean formula with m clauses @xmath9 where each clause @xmath10 is true or false depending on the values of some subset of the @xmath6 bits .",
    "the task is to discover if one ( or more ) of the @xmath7 possible assignments of the values of the @xmath6 bits satisfies all of the clauses , that is , makes formula  ( [ 21 ] ) true .",
    "we consider two restricted versions of satisfiability , both of which are restricted versions of a problem called  exact cover \" . in the first",
    ", ec3 , each clause involves only three bits .",
    "the clause always has the same form .",
    "the clause is true if and only if one of the three bits is a @xmath11 and the other two are @xmath12 , so there are three satisfying assignments out of the eight possible values of the three bits . the second , ec2 , has the restriction that each clause involves only two bits . in this case",
    "the clause is true if and only if the two bits have the value 01 or 10 , so there are two satisfying assignments out of the four possible values for the two bits .",
    "we pick these two examples because ec2 is classically solvable in polynomial time whereas ec3 is np - complete and no polynomial time algorithm is known .",
    "it is interesting to see how the quantum algorithm treats these two classically very different problems .    to understand the quantum algorithm we first recall the content of the adiabatic theorem .",
    "we are given a hamiltonian @xmath13 that depends smoothly on the parameter @xmath14 where @xmath14 varies from @xmath12 to @xmath11 .",
    "suppose that for each value of @xmath14 , @xmath13 has a unique lowest energy state , the ground state @xmath15 .",
    "that is , @xmath16 where @xmath17 is strictly less than any of the other eigenvalues of @xmath13 .",
    "introduce a time scale @xmath5 and define a time - dependent hamiltonian @xmath18 by @xmath19 where @xmath20 varies from @xmath12 to @xmath5 . as @xmath5 gets bigger",
    ", @xmath1 becomes more slowly varying .",
    "let @xmath21 obey the schrdinger equation @xmath22 with @xmath23 that is , at @xmath24 , @xmath2 is the ground state of @xmath3 .",
    "the adiabatic theorem tells us that @xmath25 this means that for @xmath5 large enough , @xmath26 is ( up to a phase ) very close to the ground state of @xmath4 .",
    "( [ 26 ] ) only holds if the gap between the ground state energy , @xmath17 of @xmath13 , and the next highest energy , @xmath27 of @xmath13 , is strictly greater than zero , that is , @xmath28 for @xmath29 .",
    "we will also discuss cases where at @xmath30 there are multiple ground states .",
    "in this situation the evolution ends very close to the ground state subspace .",
    "the idea behind the quantum algorithm is the following .",
    "given an instance of the satisfiability problem it is straightforward to construct a hamiltonian , @xmath31 , whose ground state corresponds to an assignment of the bits that violates the least number of clauses .",
    "although it is easy to construct @xmath31 , finding its ground state may be computationally challenging .",
    "however we can construct a hamiltonian @xmath32 whose ground state we explicitly know .",
    "now let @xmath33 and accordingly @xmath34 for some fixed @xmath5 .",
    "we start our quantum system in the known ground state of @xmath32 and then evolve according to eq .",
    "( [ 24 ] ) for time @xmath5 .",
    "suppose that the instance of satisfiability that gave rise to @xmath31 has a unique satisfying assignment .",
    "if @xmath5 is large enough , then @xmath26 will be very close to the ground state of @xmath31 . measuring @xmath26 will , with high probability , produce the satisfying assignment .",
    "in general this algorithm will produce an assignment that violates the minimum number of clauses in eq .",
    "( [ 21 ] ) .",
    "restricting to instances with a unique satisfying assignment appears to pick out difficult instances and simplifies the analysis of our algorithm .",
    "more explicitly , given an @xmath6-bit instance of satisfiability , we work in an @xmath6-qubit hilbert space that is spanned by the @xmath7 basis vectors @xmath35 where @xmath36 and @xmath37 is an eigenstate of the @xmath38 component of the @xmath39 spin , @xmath40 we also need the eigenstates of the @xmath41 component of the @xmath39 spin , @xmath42 and @xmath43 that obey @xmath44    for concreteness imagine that each clause in formula ( [ 21 ] ) involves @xmath45 bits .",
    "let @xmath46 and @xmath47 be the @xmath45 bits associated with clause @xmath48 .",
    "for each clause @xmath48 define an  energy \" function @xmath49 we immediately turn these into quantum operators @xmath50 and define @xmath51 by construction @xmath31 is nonnegative , that is , @xmath52 for all @xmath53 and @xmath54 if and only if @xmath53 is a superposition of states of the form @xmath55 satisfies all of the clauses . in this context seeing if formula ( [ 21 ] ) has a satisfying assignment is accomplished by finding the ground state of @xmath31 .",
    "if formula ( [ 21 ] ) has no satisfying assignment , the ground state ( or states ) of @xmath31 correspond to the assignment ( or assignments ) that violate the least number of clauses .",
    "@xmath31 given by eq .",
    "( [ 214 ] ) is the problem hamiltonian whose ground state we seek when we run the quantum algorithm . for the beginning hamiltonian @xmath32 ,",
    "first define @xmath56 for each clause @xmath48 , involving bits @xmath46 , and @xmath47 , let @xmath57 the beginning hamiltonian is given by @xmath58 the ground state of @xmath32 is @xmath59 which we will take to be the initial state when we run the quantum algorithm .",
    "the hamiltonian that governs the evolution of the quantum system is given by eq .",
    "( [ 28 ] ) with @xmath31 specified in eq .",
    "( [ 214 ] ) and @xmath32 specified in eq .",
    "( [ 217 ] ) .",
    "note that @xmath1 is a sum of terms , each of which is associated with one of the clauses in ( [ 21 ] ) , @xmath60 where @xmath61 each @xmath62 involves only the bits associated with clause @xmath48 and therefore @xmath1 is a sum of terms each of which involves a fixed number of bits .    for a given problem such as ec3 or ec2 we must specify the running time as a function of the number of bits , @xmath63 . since the state @xmath26 is not exactly the ground state of @xmath31 we must also specify @xmath64 , the number of times we repeat the quantum evolution in order to have a desired probability of success .",
    "this paper can be viewed as an attempt to determine @xmath63 and @xmath65 by numerical methods .",
    "we now summarize the ingredients of the quantum adiabatic evolution algorithm . given a problem and an @xmath6-bit instance , we assume we know the instance - independent running time @xmath63 and repetition number @xmath65",
    ". for the instance and given @xmath63 ,    1 .",
    "construct the time - dependent hamiltonian @xmath1 given by eq .",
    "( [ 28 ] ) with @xmath32 and @xmath31 given by eq .",
    "( [ 214 ] ) and eq .",
    "( [ 217 ] ) .",
    "2 .   start the quantum system in the state @xmath2 given by eq .",
    "( [ 218 ] ) .",
    "3 .   evolve according to eq .",
    "( [ 24 ] ) for a time @xmath66 to arrive at @xmath26 .",
    "measure @xmath67 in the state @xmath26 and check if the bit string @xmath68 satisfies all clauses .",
    "repeat @xmath65 times .",
    "for our numerical study we randomly generate instances of the two problems under study , ec3 and ec2 .",
    "focus first on ec3 . for a decision problem",
    ", it suffices to produce a satisfying assignment when one or more exists . for",
    "now , we restrict our attention to instances with a unique satisfying assignment . we believe that instances with only one satisfying assignment include most of the difficult instances for our algorithm .",
    "in fact as we will see later , our algorithm runs faster on instances with more than one satisfying assignment so the restriction to a unique satisfying assignment appears to restrict us to the most difficult cases .    with the number of bits fixed to be @xmath6 , we generate instances of ec3 as follows .",
    "we pick three bits at random , uniformly over the integers from @xmath11 to @xmath6 .",
    "( the bits must all be different . )",
    "we then have a formula with one exact cover clause .",
    "we calculate the number of satisfying assignments .",
    "we then add another clause by picking a new set of three bits .",
    "again we calculate the number of satisfying assignments .",
    "we continue adding clauses until the number of satisfying assignments is reduced to one or zero .",
    "if there is one satisfying assignment we accept the instance . if there are none we reject the instance and start again .",
    "using this procedure the number of clauses is not a fixed function of the number of bits but rather varies from instance to instance . for ec3",
    "we find that the number of clauses is typically close to the number of bits .",
    "we follow a similar procedure for ec2 . when we add a clause we randomly specify",
    "which two bits are involved in the clause .",
    "again we repeat this procedure until there are two satisfying assignments ( or none in which case we discard the instance ) .",
    "we stop at two satisfying assignments because ec2 has a bit negation symmetry .",
    "if @xmath69 is a satisfying assignment so is @xmath70 and accordingly there are no instances with a single satisfying assignment .",
    "for ec2 the number of clauses is typically close to the number of bits .",
    "we know that ec2 is classically computationally simple but of course there is no guarantee that quantum adiabatic evolution will work well on ec2 .",
    "we choose instances of ec2 with two satisfying assignments to parallel as closely as possible our study of ec3 .",
    "we are exploring the quantum adiabatic evolution algorithm by numerically simulating a perfectly functioning quantum computer .",
    "the quantum computer takes an initial state @xmath2 , given by eq .",
    "( [ 218 ] ) , and evolves it according to the schrdinger equation ( [ 24 ] ) , for a time @xmath5 , to produce @xmath26 .",
    "the hamiltonian @xmath1 is given by eq .",
    "( [ 28 ] ) with @xmath31 and @xmath32 determined by the instances of satisfiability being studied .",
    "if the number of bits is @xmath6 , the dimension of the hilbert space is @xmath7 .",
    "this exponential growth in required space is the well - known impediment to simulating a quantum computer with many bits . for our modest numerical investigation , using macs running matlab for a few hundred hours , we can only explore out to 16 bits .",
    "we integrate the schrdinger equation using a variable step size runge - kutta algorithm , checking accuracy by keeping the norm of the state equal to unity to one part in a thousand .",
    "since the number of bits is modest , we can always explicitly determine the ground state ( or ground states ) of @xmath31 .",
    "given @xmath26 and the ground state ( or states ) of @xmath31 we can calculate the probability that a measurement of @xmath67 will give a satisfying assignment by taking the sum of the squares of the inner products of @xmath71 with @xmath72 the median time to achieve probability 1/8 ------------------------------------------    our goal in this paper is to explore the running time @xmath63 and the repetition number @xmath65 that will give a successful algorithm . to this end",
    "we first determine the typical running time needed to achieve a fixed probability of success for a randomly generated instance with @xmath6 bits for @xmath73 .",
    "in particular we determine the median time required to achieve a success probability of @xmath74 . since this is a numerical study we actually hunt for a time that produces a probability between 0.12 and 0.13 . for each @xmath6 between 7 and 15 ,",
    "for both ec3 and ec2 , we find the median of 50 randomly generated instances .",
    "@xmath75    in 1 the circles represent the data for ec3 and the solid curve is a quadratic fit to the data . at each number of bits the times required to reach probability @xmath74 range from roughly half the median to twice the median . for this range of @xmath6 , a quadratic , or even linear fit ,",
    "is clearly adequate .",
    "the exponential @xmath76 is also a good fit . in the next section",
    "we show a situation where an exponential fit to the data is _ required _ for the same range of @xmath6 .",
    "we know of one anomalous instance ( discovered by daniel preda , outside of the data collected for this paper ) with 11  bits and a time to achieve probability 1/8 of close to 300",
    ". however , at @xmath77 , which is the value of the quadratic fit in 1 at @xmath78 , the probability of success for this instance is already 0.0606 .",
    "because this probability is not anomalously low , the algorithm proposed in section  [ sec:7 ] will have no difficulty with this instance .",
    "@xmath79    in 2 the circles represent the data for ec2 and the solid curve is a linear fit to the data . here",
    "the maximum time required to reach probability @xmath74 , for each number of bits , is roughly @xmath80 greater than the median .",
    "the hamiltonian @xmath1 is a sum of terms @xmath62 each of which involves only the few bits mentioned in clause @xmath48 ; see eq .",
    "( [ 219 ] ) .",
    "each @xmath62 is associated with a subspace of the hilbert space corresponding to the satisfying assignments of clause @xmath48 , that is , the space spanned by the ground states of @xmath81 ; see eq .",
    "( [ 213 ] ) .",
    "quantum adiabatic evolution ( for @xmath5 big enough ) yields a state in the intersection of the subspaces associated with all of the clauses .",
    "our intuition is that the bit structure of these subspaces is crucial to the success of the quantum algorithm .    to test this intuition we destroy the bit structure of the hamiltonian and run the algorithm again . specifically consider the classical energy function that counts the number of violated clauses @xmath82 where @xmath83 and @xmath84 is given in eq .",
    "( 2.12 ) . from eq .  ( [ 213 ] ) and eq .  ( [ 214 ] ) we have that @xmath85 now let @xmath86 where @xmath87 is a random permutation of the integers @xmath88 .",
    "note that @xmath87 is _ not _ a permutation of the bits but rather a random scrambling of all @xmath7 of the @xmath38 s .",
    "let @xmath89 and accordingly @xmath90 the spectrum of @xmath91 is identical to that of @xmath31 but the relationship between the eigenvalues and the values of @xmath38 has been scrambled .",
    "accordingly the spectrum of @xmath92 is not equal to the spectrum of @xmath93 ) except at @xmath24 and @xmath94 .",
    "if @xmath31 has a unique ground state so does @xmath91 and for @xmath5 large enough we expect ( again by the adiabatic theorem ) that quantum evolution by @xmath92 will bring us to the ground state of @xmath91 .",
    "@xmath95    once the bit structure has been destroyed , finding the minimum of @xmath96 is essentially the problem of minimizing an arbitrary function defined on @xmath97 .",
    "solving this problem requires exponential time even on a quantum computer[2 , 3 ] . to confirm this we generated 100 instances of ec2 for each of @xmath98",
    "for each instance we generate a random permutation @xmath87 and quantum evolve with @xmath92 for time @xmath5 . in 3",
    "we show the median time @xmath5 required to achieve a success probability of @xmath74 .",
    "the linear behavior of the data on the log plot indicates an exponential growth as a function of @xmath6 and the solid line represents @xmath99 .",
    "in contrast with the data in figures [ fig:1 ] and [ fig:2 ] , the data in 3 can not be well fit by a quadratic .",
    "figures [ fig:1 ] and [ fig:2 ] , at least by comparison with 3 , indicate that the median times required to achieve probability @xmath74 , for ec3 and ec2 with @xmath100 , grow modestly with @xmath6 .",
    "thus the fitted medians , for ec3 and ec2 , are reasonable candidates for the running times @xmath63 of our algorithm for these two problems . automatically , with these run times",
    ", our algorithm will achieve a success probability of at least @xmath74 for about half of all instances .",
    "our goal now is to explore how low the success probability can get at these run times . to this end",
    "we generate 100 new instances of ec3 and ec2 for each @xmath6 .",
    "now @xmath6 runs from 7 to 16 for ec3 and from 7 to 15 for ec2 and @xmath63 is given by the fit to the data shown in figures  [ fig:1 ] and  [ fig:2 ] .",
    "@xmath101    4 displays the results for ec3 . for each value of @xmath6 from 7 to 16",
    "we show the median probability of success at @xmath63 as well as the smallest of the 100 probabilities and the @xmath102 smallest .",
    "it is no surprise that the median probability is close to @xmath74 for all values of @xmath6 .",
    "the fact that the smallest probability does not decrease with @xmath6 was not anticipated .",
    "this means that , at least for the range of the number of bits considered , the number of repetitions @xmath65 can be taken to be constant with @xmath6 to achieve a fixed desired probability of success .",
    "@xmath103    @xmath104    in 5 the data for ec2 is presented . here the run time @xmath63 is given by the linear fit to the data in 2 .",
    "again the median probability at each value of @xmath6 is close to @xmath74 as is expected .",
    "however , even for this classically easy problem we had no guarantee that the worst case probability would not decrease with @xmath6 .",
    "in fact it does not appear to decrease at all .    in order to show that the running time @xmath63 must increase with @xmath6 to produce a successful algorithm",
    ", we explore the success probabilities obtained when using an @xmath6-independent running time . more specifically for the ec3 instances used to generate 4 we run the algorithm for @xmath105 for a constant value of @xmath5 , the one previously used for @xmath106 . in 6",
    "the log plot shows that the median success probability decreases exponentially , which means that the number of repetitions @xmath65 would have to grow exponentially to achieve a fixed probability of success .",
    "@xmath107    in section  [ sec:6 ] we gave evidence that the bit structure is crucial to the success of the quantum adiabatic evolution algorithm .",
    "we make this point again by taking the instances of ec3 , for @xmath108 , and running the algorithm with @xmath63 given by the fit in 1 but with @xmath1 replaced by @xmath92 . in 7 ,",
    "the median probability of success is seen to decrease exponentially with @xmath6 .",
    "this helps confirm our intuition that the quantum adiabatic evolution algorithm takes advantage of the bit structure inherent in the problem .",
    "all of the ec3 data presented up to this point was generated from instances with unique satisfying assignments .",
    "now we explore ec3 instances with more than one satisfying assignment . as in section  [ sec:3 ]",
    "clauses are added at random but now instances are accepted as soon as the number of satisfying assignments is 6 , 7 , 8 , or  9 .",
    "if adding a clause reduces the number of satisfying assignments from more than 9 to less than 6 , the instance is rejected .",
    "we do this with 100 instances for 10 , 11 , 12 , and 13 bits and run at the same times @xmath63 used for instances with a unique satisfying assignment to generate 4 .    in 8",
    "we show the median probability , the smallest probability , and the @xmath110 smallest for these instances . at the running times",
    "used , the median probability for instances with unique satisfying assignments is close to 1/8 ( for any number of bits ) . for the instances with multiple satisfying assignments the medians are about 1/3 and the worst case has a probability of about 1/8 .",
    "this substantiates our intuition that instances with unique satisfying assignments are generally the most difficult for the quantum adiabatic algorithm .    at the running times explored in this paper transitions out of the instantaneous ground state are not uncommon . in the case of a unique satisfying assignment such a transition ( assuming no transition back ) leads to a final state that does not correspond to the satisfying assignment . in the case of multiple satisfying assignments such transitions",
    "may lead to states that are headed towards the subspace spanned by the satisfying assignments .",
    "this is why the success probabilities are typically higher when there is more than one satisfying assignment .",
    "we have presented numerical evidence that a quantum adiabatic evolution algorithm can solve instances of satisfiability in a time that grows slowly as a function of the number of bits .",
    "here we have worked out to 16 bits , but with more computing power instances with higher numbers of bits can be studied .",
    "this algorithm operates in continuous time .",
    "the algorithm can be written as a product of few - qubit unitary operators  @xcite where the number of factors in the product is of order @xmath111 times a polynomial in  @xmath6 . however , understanding the idea behind the algorithm is obscure in the conventional quantum computing paradigm .",
    "( a quantum algorithm for satisfiability that is explicitly within the ordinary paradigm is presented in  @xcite . )",
    "the algorithm studied in this paper works by having the quantum system stay close to the ground state of the time - dependent hamiltonian that governs the evolution of the system .",
    "we imagine that protecting a device that remains in its ground state from decohering effects may be easier than protecting a device that requires the manipulation of excited states .",
    "this work was supported in part by the department of energy under cooperative agreement de  fc0294er40818 .",
    "thanks the participants at the aspen center for physics meeting on quantum information and computation ( june 2000 ) for many helpful discussions .",
    "we thank mehran kardar , joshua lapan , seth lloyd , andrew lundgren , and daniel preda for valuable input ."
  ],
  "abstract_text": [
    "<S> quantum computation by adiabatic evolution , as described in quant - ph/0001106 , will solve satisfiability problems if the running time is long enough . </S>",
    "<S> in certain special cases ( that are classically easy ) we know that the quantum algorithm requires a running time that grows as a polynomial in the number of bits . in this paper </S>",
    "<S> we present numerical results on randomly generated instances of an np - complete problem and of a problem that can be solved classically in polynomial time . </S>",
    "<S> we simulate a quantum computer ( of up to 16 qubits ) by integrating the schrdinger equation on a conventional computer . for both problems considered , for </S>",
    "<S> the set of instances studied , the required running time appears to grow slowly as a function of the number of bits . </S>"
  ]
}
{
  "article_text": [
    "pareto optimality is a natural extension of the concept of maximum to multi - objective optimization problems .",
    "a solution is part of the pareto optimal set , or pareto front , if it is impossible to improve one objective without worsening another . instead of imposing an arbitrary aggregation of the different objectives into a single scalar function",
    ", pareto optimality keeps track of all potentially interesting solutions in the presence of trade - offs . the pareto approach , originally introduced in economics @xcite ,",
    "has shown to be useful in many engineering applications @xcite , decision - making analysis @xcite , more recently in biology @xcite .    here",
    "we apply the pareto approach to the optimization of the response of multi - input monotone systems , which are widely used to describe input - output systems in control theory @xcite .",
    "consider a system which processes a multi - input vector @xmath4 into a single output @xmath5 , each coordinate of @xmath6 being monotone .",
    "consider now a list of such input vectors @xmath7 .",
    "the natural order on @xmath8 induces a partial order between the elements @xmath9 , which in turn , due to the monotonicity of @xmath6 , induces partial order constraints between the values @xmath10 .",
    "these constraints limit the space accessible to the vector @xmath11 .",
    "we then introduce an optimization problem : certain values of @xmath12 have to be maximized while other have to be minimized .",
    "the question is to know how far the function @xmath6 can be optimized to fullfill this multi - objective problem , while keeping its monotonicity properties unaffected .",
    "this problem can be formulated beyond the framework of monotone systems , as @xmath6 and the @xmath13 can be essentially seen as a source of partial order constraints .",
    "the most general formulation of our problem is then to start directly from partial order constraints between bounded values @xmath10 , with either a minimization or a maximization objective associated to each of the @xmath12 , and search for the pareto optimal solutions of this problem .",
    "geometrically , setting the bounded @xmath12 between @xmath14 and @xmath15 , the space compatible with the constraints is a convex polytope in the hypercube @xmath16^n$ ] , and we look for the pareto front of this polytope given an ideal point located on a corner of the hypercube .",
    "the monotone systems formalism applies in particular to the evolution of gene regulatory networks in biology , which is the initial motivation of the present authors @xcite . in this context : each @xmath13 represents a combination of environmental signals ; @xmath6 is the signal processing performed by the gene regulatory network , where mutations impact the strength of the interactions but not their sign @xcite ; the @xmath17 are the output of the network ( ex : the expression of a specific gene ) , which can be either beneficial or detrimental , setting selective pressure toward respectively either maximization or minimization",
    ".    the broader formulation of the problem can find applications in fields more specific to operations research , such as task scheduling : some tasks have to be realized in a certain temporal order relative to each other due to design constraints ( e.g.  the assembly of the different parts of a car ) @xcite , with some having to be realized as soon as possible and others as late as possible due to externalities ( e.g.  stock management , supply constraints , or processing unit occupancy ) .    in section 2 ,",
    "we demonstrate general properties of pareto sets in relation with set operations , introduce the concept of pareto self - dominance .",
    "we demonstrate a number of properties to break multi - objective optimization problems into simpler sub - problems , useful for our later demonstration , notably a maximality property valid for compact set ( proposition [ maximality ] ) . in section 3",
    ", we provide a graph formulation of our multi - objective optimization under partial order constraints problem , using a hasse diagram @xcite , which we colour according to optimization objectives .",
    "we then describe and prove a dynamic programming algorithm based on successive edge contractions with appropriate vertex colouring rules . in section 4",
    "we discuss the complexity of our algorithm as a function of the number of variables @xmath0 and to the complexity of the pareto front @xmath2 .",
    "we propose an improved version of the algorithm in @xmath1 . we finally discuss how a parameterized complexity approach @xcite can provide a combinatorial description of the pareto front , with a complexity of @xmath3 in the case of series - parallel partial orders with monochromatic connected components of bounded size .",
    "we consider a partially ordered set ( @xmath18 ) and define the corresponding strict order @xmath19 and @xmath20 . for @xmath21 ,",
    "we denote the _ upper contour set _ and the _ strictly upper contour set _ respectively by @xmath22  and @xmath23    the ( strong ) pareto optimal set of @xmath24 , denoted by @xmath25 , contains the elements of @xmath26 which are not stricly dominated by another element of @xmath26 : @xmath27 equivalently we have @xmath28    the following propositions on pareto optimal sets will be of use in the proof of our algorithm in section [ sec : proof ] .",
    "[ intersection ] let @xmath29 and @xmath30 be subseteqs of @xmath31",
    ". then @xmath32 .    _",
    "proof : _ consider @xmath33 .",
    "@xmath34 because @xmath35 .    as @xmath36 , by definition of pareto optimality @xmath37 .",
    "[ union ] consider @xmath38 .",
    "@xmath39    _ proof : _ consider @xmath40 .",
    "we have @xmath41 this implies @xmath42 .",
    "given that @xmath43 , @xmath44 such that @xmath45 .",
    "considering that in particular @xmath46 , we have @xmath47 .",
    "[ dominator ] we say that a set @xmath48 is _ self - dominated _ if @xmath49 such that @xmath50 .",
    "we will now prove a generalization of the following property of the maximum in @xmath8 to pareto optimality in @xmath31 : take two closed segments @xmath29 and @xmath30 in @xmath8 , such that @xmath51 and @xmath52 .",
    "this imposes @xmath53 .",
    "[ maximality ] consider @xmath54 , @xmath30 self - dominated .",
    "if @xmath51 and @xmath55 then @xmath56 .",
    "_ proof : _ we only need to show @xmath57 .",
    "for that consider @xmath58 .",
    "@xmath59 by hypothesis . by definition [ dominator ] , @xmath60 as @xmath61 , in particular @xmath62",
    "by relation ( [ eq : maxequal ] ) , @xmath63 .",
    "[ necessary ] consider @xmath48 self - dominated .",
    "suppose @xmath64 is a necessary condition for @xmath35 , then @xmath65 .",
    "_ proof : _ the hypothesis @xmath66 implies @xmath67 by proposition [ intersection ] . the result comes from proposition [ maximality ] replacing @xmath29 and @xmath30 by respectively @xmath68 and @xmath29 .",
    "[ parpar ] consider @xmath24 self - dominated .",
    "suppose there exist @xmath69 such that @xmath70 . then @xmath71    _ proof : _ we just need to apply proposition [ maximality ] to @xmath72 and @xmath73 , the initial inclusion hypothesis being given by proposition [ union ] .",
    "* remark* proposition [ parpar ] is in particular true when @xmath74 and indicates that @xmath75    [ parparpar ] suppose that in addition to the hypotheses of proposition [ parpar ] , @xmath76 is self - dominated and verifies @xmath77 such that @xmath78 .",
    "we then have @xmath79\\ ] ] .    _",
    "proof : _ applying successively proposition [ parpar ] to @xmath76 instead of @xmath26 , the remark of proposition [ parpar ] in the backward direction , then in the forward direction and finally using the fact that @xmath80 for any set @xmath81 , @xmath82 \\\\ &   = par\\left [   par\\left (   \\bigcup_{j=1}^{j}par(b_{j})\\right )   \\cup \\bigcup_{i=2}^{i}par(a_{i})\\right ] \\\\ &   = par\\left [   \\bigcup_{j=1}^{j}par(b_{j})\\cup\\bigcup_{i=2}^{i}a_{i}\\right ] \\\\ &   = par\\left [   \\bigcup_{j=1}^{j}par(par(b_{j}))\\cup\\bigcup_{i=2}^{i}% par(a_{i})\\right ] \\\\ &   = par\\left [   \\bigcup_{j=1}^{j}par(b_{j})\\cup\\bigcup_{i=2}^{i}par(a_{i}% ) \\right ] \\end{split}\\ ] ]    finally , we note that if @xmath29 is a closed , non - empty subseteq of @xmath31 which has an upper bound in the sense of the pareto order ( _ i.e. _ @xmath83 ) , then @xmath84 @xcite . as a consequence @xmath29 is self - dominated , as we show below .",
    "[ rn ] when @xmath85 closed , non - empty and pareto bounded from above then @xmath29 is self - dominated .",
    "_ proof : _ consider @xmath86 .",
    "@xmath87 is closed , non - empty and pareto bounded from above . thus @xmath88 and",
    "we can consider @xmath89 so that @xmath90 and @xmath91 now , as @xmath92 @xmath93 which proves @xmath94    proposition [ rn ] ensures that we can use propositions [ intersection ] , [ union ] , [ maximality ] and [ necessary ] for the proof of the algorithm in the context of @xmath16^{n}$ ] presented in the next part . propositions [ parpar ] and [ parparpar ] will not be used for the demonstration of our specific algorithm , but to discuss the complexity of more naive algorithms in section [ discusscomplexity ] .",
    "indeed , they can be used generally in multi - objective optimization problems for reducing the pareto set search into sub - problems .",
    "proposition [ parpar ] indicates that the pareto front can be found by taking the pareto front of the assembled pareto fronts of any decomposition of the search space .",
    "proposition [ parparpar ] extends this result to any finite number of recursive splittings of the search space , and shows that it is necessary to search only one time the pareto set of the assembled pareto sets of the terminal sub - problems .",
    "_ * pareto order * _  we consider @xmath0 bounded variables @xmath95^{n}$ ] and introduce for convenience the notation @xmath96 and @xmath97 .",
    "our multi - objective optimization consist of minimizing some of the variables and maximizing all the others .",
    "formally , we have a partition @xmath98 of the index set @xmath99 .",
    "we define a pareto ordering @xmath100 on @xmath31 with the _ signature _ @xmath101 as follows : if @xmath102 @xmath31and @xmath103 @xmath31 then@xmath104 i.e. for the variables in the _ ascending _ set @xmath105 smaller is better . in other terms , the ideal point has coordinates @xmath14 for indexes in @xmath106 and @xmath15 for indexes in @xmath107 .",
    "we define the corresponding ( weak ) strict pareto order through @xmath108 .",
    "partial order constraints correspond to a set of ( weak ) inequalities of the type @xmath109 between coordinates of @xmath21 .    _ * vertex colouring * _  we introduce a graph stucture which vertices @xmath110 are associated with a group of variables @xmath111 , called _ aggregate _ , and noted @xmath112 .",
    "an aggregate @xmath113 represents a state such that @xmath114 , a value noted @xmath112 .",
    "a vertex can be of one of the four following natures ( or colour indicated in parenthesis as used in the figures ) :    * if @xmath115 , @xmath110 is a _ descending vertex _ ( red ) ; * if @xmath116 , @xmath110 is an _ ascending vertex _ ( blue ) ; * if @xmath117 comprises indexes from both @xmath106 and @xmath107 , @xmath110 is a _ trade - off vertex _ or _ tov _ ( grey ) ; * if @xmath118 or @xmath119 , @xmath110 is a _ boundary vertex _ ( black ) .    _",
    "* partial order constraints * _  edges express order constraints between variables , according to the convention of so - called hasse diagrams : edge @xmath120 points from @xmath121 to @xmath122 if and only if @xmath109 , where @xmath123 ( resp .",
    "@xmath124 ) .",
    "the inequality constraints can be consistently carried over to aggregates provided their index - sets @xmath117 and @xmath125 are disjoint , and we will use the obvious notation @xmath126 .",
    "variables engaged in cyclical inequalities are trivially equal to each other and thus are assumed to be aggregated , resulting in acyclic diagrams .    _ * relations between vertices * _  two vertices @xmath121 and @xmath122 connected by @xmath120 are said to be _ conflicting _ if @xmath121 is descending and @xmath122 is ascending .",
    "we say that a vertex @xmath121 _ aims for _ another vertex @xmath122 if : either @xmath121 is descending and points to @xmath122 via an edge @xmath120 ; or the other way round , @xmath121 is ascending and is pointed from @xmath122 via an edge @xmath127 , independently of the colour of @xmath122 . for example , conflicting vertices necessarily aim for each other",
    ". a maximal connected component of the hasse diagram exclusively comprising ascending or descending vertices is called a _ monotone connected components_.",
    "a vertex qualified as _ extremal _",
    "( in the sense of the monotone connected components ) if it only aims for vertices of different colour .",
    "note that conflicting vertices are not necessarily extremal as they may point to other vertices of the same nature , and extremal vertices are not necessarily conflicting as they may point to tovs or to boundary vertices .",
    "_ * edge contractions rules * _  an edge contraction between two vertices @xmath110 and @xmath128 consist of removing @xmath129 , and replacing @xmath110 and @xmath128 by a unique vertex @xmath130 , where @xmath131 .",
    "while all vertices that are not affected by the contraction are of constant colour , the colour of @xmath130 is determined consistently with the colours definitions :    * if @xmath110 and @xmath128 are ascending , @xmath130 is ascending ; * if @xmath110 and @xmath128 are descending , @xmath130 is descending ; * if @xmath110 or @xmath128 is a boundary vertex , @xmath130 is a boundary vertex ; * if @xmath110 and @xmath128 are different and none of them is a boundary vertex , @xmath130 is a tov ;    _ * resolution tree * _  we have just introduced all the notions for representing our initial problem and any state resulting from edge contractions in the form of a 4 colours directed acyclic graphs , for which we reserve the term",
    "_ hasse diagrams _ , or _ diagrams _ , noted @xmath132 with an index .",
    "the stages of the dynamic algorithm described below generate another sort of graph , which we call the _ resolution tree_. to avoid any confusion between the two sorts of graphs , the vertices of the resolution tree are called _ nodes_. each node of the resolution tree corresponds to a hasse diagram , and each edge of the resolution tree corresponds to an operation of edge contraction applied to a hasse diagram . a _ branch _",
    "will only refer to a branch of the resolution tree .",
    "a vertex aiming for several other vertices in @xmath132 will be called a _ junction _ , whereas a node connected to several downstream nodes in the resolution tree will be called a _",
    "branching_.    _ * re - formulation of the problem * _  we finally call @xmath133 the subspace of @xmath134 which verifies the partial order relations represent by the hasse diagram @xmath132 . with this representation , our main goal can be formulated in the following way :    _ let _ @xmath135^{n}$ ] _",
    "_  be the space of all vectors respecting the partial order constraints represented by _",
    "_ @xmath132 . _",
    "determine _ @xmath136 _ _  the set of vectors optimal under the pareto order _ _ @xmath100 _ _  on _ _ @xmath31 .",
    "the algorithm starts by setting @xmath137 steps 1 to 4 described below ( and illustrated in figure [ fig : illustration ] ) are then recursively applied to all diagrams @xmath138 , @xmath139 , generated at depth @xmath140 until step 2 can no longer be performed , _",
    "i.e. _ the diagram in question no longer contains any ascending or descending vertex ( eqivalently , only contains tovs and boundary vertices ) :    1 .",
    "perform a _ transitive reduction _ of @xmath141 , _",
    "i.e. _ remove any direct edge @xmath142 if there exists a longer _ path _ from @xmath143 to @xmath144 on @xmath141 .",
    "2 .   select an extremal vertex @xmath121 .",
    "3 .   consider the vertices @xmath145 which @xmath121 aims for .",
    "there is always at least one such vertex , in limiting cases provided by boundary vertices .",
    "define the diagrams @xmath146 by respectively contracting the edge connecting @xmath121 and @xmath147 according to the colouring rules defined in section [ definitions ] .    at the end of this branching process ,",
    "we are left with a collection of terminal graphs @xmath148 , and we posit that the solution of the initial problem is : @xmath149     and identification of an extremal vertex @xmath150 . left : aggregation of @xmath150 with two conflicting vertices @xmath151 and @xmath152 , yielding a branching of the resolution tree into two diagrams , the union of which solutions results in the pareto front of the parent diagram .",
    "color code : filled blue circle : ascending vertex , filled red circle : descending vertex , filled grey circle : tov.[fig : illustration ] ]      our proof of the algorithm described above proceeds in three steps :    step 1 : :    we first show that for each iteration of the algorithm ,    @xmath153 .",
    "step 2 : :    next we show that    @xmath154 .",
    "step 3 : :    finally we show that the terminal graphs satisfy    @xmath155 .    for brevity s sake we treat only the case of an ascending connected component , the demonstration being easily adapted for a descending connected component .      consider an ascending subgraph @xmath156 in @xmath141 and a maximal vertex @xmath157 .",
    "there are two possibilities :    1 .",
    "the vertex @xmath158 representing the upper bound is directly connected to @xmath150 . in this case",
    "@xmath158 is the unique vertex pointing to @xmath150 : if there would be another vertex @xmath159 pointing to @xmath150 , there would exist a chain of vertices pointing from @xmath158 to @xmath159 , as @xmath158 is the global upper bound , which would contradict the fact that we have taken the transitive reduction of the diagram .",
    "one or more vertices @xmath160 point to @xmath161 , none of which has constant value .",
    "we then define the sets @xmath162    a necessary condition for @xmath163 is @xmath164 .",
    "suppose otherwise that @xmath165 ( or in the case 1 above @xmath166 ) .",
    "then there exists @xmath167 such that for all @xmath168 .",
    "if we denote by @xmath169 the vector with coordinates @xmath170 for @xmath171 and otherwise @xmath14 , we have for all @xmath172 and @xmath173 as by assumption @xmath174 .",
    "this contradicts @xmath175 .    as by definition , @xmath176",
    ", we can use proposition [ necessary ] and have that @xmath177 .",
    "we only have to show that @xmath178 , the inclusion in the other direction directly following from proposition [ union ] .",
    "we only discuss the case @xmath179 as the result is trivial otherwise ( in particular in case 1 of the first step ) .",
    "consider two distinct indices from the set @xmath180 which we can take to be @xmath15 and @xmath181 without loss of generality .",
    "consider @xmath182 and suppose there exists @xmath183 such that @xmath90 . then by virtue of @xmath150 being an ascending vertex and by definition of the pareto order : @xmath184 next , as @xmath150 was maximal within its ascending subgraph , any vertex pointing to it must contain at least one descending variable , from which follows that @xmath185 indeed , the latter inequality is trivially true if all @xmath186 label descending variables , i.e. @xmath187 . if not , we can choose an @xmath188 and @xmath189 for which the statement @xmath90 implies both @xmath190 and @xmath191 and hence , together with @xmath192 and @xmath193 by definition of the aggregates , we obtain the equality @xmath194 .",
    "we also have @xmath195 implying : @xmath196 finally , @xmath197 and in @xmath141 , vertex @xmath198 points to @xmath150 by hypothesis , which implies : @xmath199 examining the above relations in the order ( [ c2]-[c4]-[c1]-[c3 ] ) , we see that all the variables at play must be equal , in particular @xmath200",
    ". then @xmath201 and consequently @xmath202 .",
    "to summarize , we have just demonstrated : @xmath203 now , if we take in particular @xmath204 in relation ( [ inter ] ) , relation ( [ eq : maxequal ] ) implies that @xmath205 by maximality of @xmath206 in @xmath207 .",
    "this gives : @xmath208 applying this time relation ( [ eq : maxequal ] ) in the backward direction demonstrates the announced result : @xmath209      by construction a terminal graph @xmath210 contains only boundary vertices and tovs . now consider @xmath211 , and consider a vertex @xmath212 in @xmath210 .",
    "if @xmath212 is a boundary vertex , then the variables in @xmath117 are already at their optimum bounds , and @xmath213 otherwise , @xmath110 is a tov and as in step 2 above we can choose an @xmath214 and @xmath215 for which the statement @xmath90 implies both @xmath190 and @xmath191 and hence @xmath216 . as the aggregates form a partition of the initial index set @xmath217 ,",
    "the above immediately implies @xmath218 , and hence , by relation ( [ eq : maxequal ] ) , @xmath219 .",
    "as this is true for any @xmath220 , we have demonstrated our result : @xmath221 .      in order to illustrate the working of the algorithm presented here",
    "we have implemented it in mathematica  9 , using the built - in graph primitives @xcite .",
    "the program generates random dags with a specified number of internal nodes , randomly chosen to be ascending or descending , using the layer method and then applies the algorithm . in figure",
    "[ fig : example ] we show an example of a typical input graph , and the output of the algorithm , in this case the union of three terminal graphs . due to spatial limitations we can not display the intermediate steps the algorithm makes to produce the final result .",
    "internal vertices , randomly chosen to be either ascending or descending .",
    "bottom : the resulting pareto optimal set obtained from our algorithm , consisting of the union of the set parameterized by three distinct terminal graphs .",
    "colour code as in figure [ fig : illustration ] , in addition , black circles represent boundary values . ]",
    "we discuss here the complexity of different approaches and propose two further improvements of our algorithm .",
    "complexity will be discussed relative to the number of variables",
    "@xmath0 , and to the complexity of the pareto front , as quantified by its number of faces @xmath2 . a _ face _ is defined as a maximal convex subset of the pareto front , which itself is a subset of the convex polytope @xmath133 .",
    "note that the number of faces of the pareto front can be exponential in the number of variables , and that faces do not necessarily all have the same dimension .",
    "the first improvement consist of introducing an additional contraction rule with forbidden steps , leading to a complexity linear in the number of dimensions of the inital problem , relatively to the size to pareto front .",
    "this lead to resolution tree size @xmath1 , where the depth and the number of leaves of the tree respectively equal @xmath0 and @xmath2 .",
    "the second improvement consist of a combinatorial description of the pareto front from the set of solutions of specific components of the diagram . for this",
    "we will introduce the interface @xmath222 , which comprises all the conflicting vertices of the initial diagram .",
    "for each resolution of @xmath222 , the solutions of the monotone connected components can be computed independently , then assembled combinatorially .",
    "parameterization by the different resolutions @xmath222 can exponentially reduce the computing time and the size of the description of the full solution . in particular for series - parallel partial orders , the resolution of @xmath222 is unique . under the additional assumption that the size of monotone ( or monochromatic ) connected components is bounded , one obtains a resolution and a description of the pareto front in @xmath3 , eventhough the pareto front may comprise an exponential number of faces .",
    "an exhaustive seach of the pareto front would be to consider the @xmath223 corners of the @xmath224 hypercube , check for each whether the coordinates of the coresponding n - dimensional vector respect the partial order conditions ( test up to @xmath225 conditions ) , assess the pareto optimality of each admissible corner relative the other admissible corners ( @xmath226 , where @xmath227 is the potentially exponential number of admissible corners ) , and finally examine the pareto optimality of all possible interpolations(@xmath228 ) between the @xmath229 pareto optimal admissible corners . given that @xmath227 and @xmath229 can both scale like @xmath223 , the complexity of this process can reach @xmath230 .    the edge contraction algorithm as it is described so far provides several benefits compared to the exhaustive search .",
    "first , contraction operations on the hasse diagram ensure to only explore solutions which are consistent with the partial order constraints.the complexity of the program can then be taken as examining the validity of subsets of contracted edges ( @xmath231 , as the number of edges is @xmath232 ) , then checking the resulting admissible subspacesfor their relative pareto optimality ( @xmath233 ) .",
    "second , the restriction of contractions to vertices which are maximum within monotone connected components ensures that the final result of each contraction process is indeed pareto optimal .",
    "finally , each terminal diagram provides a full parametrization of a face of the pareto front , the union of all which covers the full pareto front , without requiring to assess pareto optimality a second time within the set of potential solutions as propositions [ parparpar]and [ parpar ] would suggest in the general case .",
    "the worst case complexity of the resolution tree is bounded by the a case where all possible subsets of edges have to be contracted and the number of edges is maximum , the first chosen vertex is in conflict with the @xmath234 other vertices , the second with @xmath235 vertices remaining after contraction , and so on , thus resulting in a complexity of @xmath236 .",
    "however , the version of the algorithm described so far has potential sources of increased complexity : ( i ) duplicated diagrams representing the exact same parameterization of a face of the pareto front ; ( ii ) diagrams @xmath237 which aggregates the initial variables into a sub - partition of another diagram @xmath238 , so that the space of the pareto front parameterized by @xmath237 is only a subspace of the space parameterized by @xmath238 . case ( i ) happens in particular when an extremal vertex conflicts with two or more other vertices , because the two corresponding contractions occur in a certain order along a resolution branch , and in another order along another branch .",
    "case ( ii ) happens in particular when a vertex @xmath239 aims to a tov @xmath240 and a conflicting vertex @xmath241 : along a first resolution branch , @xmath239 aggregates with @xmath240 , then @xmath241 aggregates with the resulting tov , whereas along a second branch , @xmath239 aggregates with @xmath241 , resulting in two distinct tovs .",
    "consequently , the parameterization given by two distinct tovs in the second branch includes the solution obtained in the first .    a way to fix the redundancies due to case ( i )",
    "would be to store known nodes of the resolution tree in a hash table , using a so - called _ memoization _ strategy @xcite .",
    "we propose instead an improved version of the contraction rules , which ensures that every terminal diagram represents a distinct face of the pareto front and which also removes sub - representations of the pareto front due to case ( ii ) .",
    "the resulting algorithm has a complexity of @xmath242 where @xmath2 is the complexity of the pareto front and @xmath0 the number of variables .",
    "we define _ frozen edges _ as edges which can not be contracted .",
    "furthermore , we impose this property to be inherited downstream of the resolution tree , i.e. a frozen edge remains frozen after contraction of other edges .",
    "otherwise , an edge is qualified as _ free_. the improved version of the algorithm consists of modifying step 3 of the original algorithm as follows :    _ * modified contraction rule * _ : if possible , contract extremal vertices @xmath121 which aim for other vertices via a single free edge .",
    "otherwise : ( i ) contract in priority @xmath121 with conflicting vertices , then with tovs , and , ( ii ) for each @xmath243 , the edges contracted to obtain @xmath244 , @xmath245 , are frozen in @xmath246 .",
    "+ as shown below , these modifications ensure that the terminal diagrams @xmath247 describe all _ distinct _ faces of the pareto front .",
    "note that the total size of the resolution tree can be further minimized by treating in priority junctions comprising as few as possible alternatives , which generalizes the priority treament of single free edge contractions .",
    "however this changes neither the depth of the tree @xmath0 , nor its number of leaves @xmath2 .",
    "an elementary point is that the algorithm can be consistently run until the leaf of each branch is reached .",
    "a potential issue would indeed be that the creation of a frozen edge leads to the existence of an extremal vertex not connected to any free edge .",
    "however , this never happens due to the priority contraction of single free edges , which implies that frozen edges are generated only at stages when every extremal vertex is connected to two or more free edges .",
    "as the treatment of single free edge contractions does not differ from the rules of the initial algorithm , we set ourselves at a branching of the resolution tree corresponding to @xmath248 alternative contractions of an extremal vertex @xmath239 aiming to @xmath249 , where the @xmath250 first @xmath121 conflict with @xmath239 , and the remaining @xmath121 are tovs , where @xmath251 .",
    "we show first that the edge freezing rules leads to all admissible ( in the sense of other rules ) and distinct partitions of the initial variables . consider the first contraction of @xmath252 .",
    "the resulting graph @xmath253 induces all admissible partitions such that @xmath254 and @xmath255 are in the same set .",
    "consider then the contraction of @xmath256 , where @xmath257 is frozen according to the modified algorithm .",
    "the resulting branch @xmath258 induces all partitions such that @xmath254 and @xmath259 are in the same set but @xmath255 is not . for each @xmath260-th iteration of this process , the sub - tree stemming from @xmath244 induces partitions such that @xmath254 and @xmath123 are in the same aggregate but @xmath261 are not . therefore , throughout the different branches , the contractions with @xmath239 enumerate without redundance all the accessible subsets of @xmath262 containing @xmath254 .",
    "we now want to show that the face parameterized by every terminal diagram is embedded in a stricly different direction of the euclidian space , thus parameterizes a distinct face of the pareto front . for this",
    ", we have to show that none of the partitions is included in another .",
    "this is obtained thanks to the prioritization of conflicting vertices contractions : when @xmath239 aggregates with a tov @xmath263 , @xmath264 , any edge @xmath265 , @xmath266 , joining @xmath239 to a conflicting @xmath121 is frozen in @xmath267 .",
    "consequently , at this stage , none of the conflicting @xmath121 can be aggregated to the tov resulting from the contraction of @xmath268 .",
    "this implies that two conflicting vertices susceptible to form a tov can not both aggregate to another tov , at any stage of the process .",
    "therefore , a tov can only contain a single pair of conflicting variables , whereas at least two such pairs would be necessary to form a sub - partition of the aggregate .",
    "we define the interface @xmath222 of the initial problem @xmath269 as the set of all conflicting vertices .",
    "@xmath222 contains all extremal vertices of @xmath269 which do not directly aim for the maximum or minumum bound .",
    "while @xmath222 can be composed of several connected components , a monotone connected component of @xmath269 may intersect several connected components of @xmath222 .",
    "we call @xmath270 the diagrams obtained by aggregating first all the extremal vertices of @xmath271 in @xmath222 .",
    "as all conflicting vertices have been aggregated into tovs at this point , the algorithm only results in aggregation of extremal vertices with existing tovs . in this sense ,",
    "the remaining monotone connected components of each @xmath270 are isolated from each other by tovs .",
    "now call @xmath272 the montone connected components of @xmath270 taken together with the tovs they aim for .",
    "each @xmath273 can be solved separately , leading to its own set of leaves @xmath274 .",
    "the parametrizations of the different parts of the pareto front of @xmath270 can be obtained by concatenating all possible combinations of the @xmath275 indexes of the @xmath276 . here",
    "the concatenation @xmath277 between diagrams is defined as the merging of vertices which represent aggregated variable sets with a non - empty intersection . with these notations",
    ", we have : @xmath278 with for every @xmath279 : @xmath280 where @xmath281 .",
    "such a combinatorial representation of the pareto front can be exponentially smaller than the number of faces of the pareto front itself .",
    "in particular when the size of the @xmath273 is bounded , the number of terms of the concatenation representing @xmath282 increases linearly , while they represent an exponentially increasing number of faces of the pareto front .    in the case of series - parallel @xmath132 , we have @xmath283 .",
    "this is due to series - parallel graphs being characterized by the absence of fence subgraph (  n \" shaped motif ) .",
    "this property implies that there can not be conflicting vertices which each participate to a junction . in other words ,",
    "at least one of the two has no other alternative than contracting with its conflicting vertex , leading to the absence of branching process during the resolution of the interface of the hasse diagram . under the additional condition that monochromatic connected components have bounded size , all @xmath284",
    "have a bounded size , and the complexity of the resolution of these sub - diagrams is bounded .",
    "thus the pareto front of the full problem admits a representation which computation time grows linearly with the number of @xmath284 , which itself increases at much linearly with the number of initial variables .",
    "we have described and demonstrated an algorithm which allows to find an exact parameterization of the pareto front of any polytope defined by partial order relations within the hypercube @xmath16^n$ ] , given an ideal point located at a corner of this hypercube .",
    "the solution is obtained in a linear number of steps with the number of parameters @xmath0 , relative to the number @xmath2 of faces of the pareto front .",
    "this result is obtained by establishing a mapping between hasse diagrams and polytopes , where a colouring of the graph encodes the location of the ideal point .",
    "more explicitly , vertices represent sets of aggregated variables , edges correspond to ordering relations , and colours correspond to the optimization objectives associated with the variables . following a dynamic programming approach in the space of coloured graphs ,",
    "the initial polytope is successively projected onto smaller dimension spaces , corresponding to edge contractions in its diagram representation .",
    "the pareto front ultimately consists of the union of spaces corresponding to each terminal hasse diagram obtained after @xmath0 contractions .",
    "a major advantage of this approach is that assembling the solution from the decomposed sub - problems is a direct operation , which does not require any further pareto computation than taking a union of sets .",
    "we have furthermore introduced a parmeterized complexity approach , by introducing a specific subgraph , which we call the interface and which corresponds to the smallest set containing all the potential trade - offs .",
    "the edge contraction algorithm can be applied to this subgraph before all other vertices , until all conflicting parameters have been aggregated .",
    "this partial computation is sufficient to determine the dimension of the pareto front . in particular , given that it is necessary to combine at least two nodes with conflicting objectives to generate a trade - off , the dimension of the pareto front will be lower than @xmath285 , where @xmath286 is the number of vertices in the interface . as soon as the interface is resolved",
    ", the diagram has a specific structure , where some coloured connected components are isolated from others . due to this property ,",
    "given a resolution of the interface , the pareto front can be represented combinatorially from the solutions of the connected components which share a single objective . for series - parallel partial orders ,",
    "the interface has a unique resolution .",
    "when , additionally , coloured connected components are of bounded size , the pareto front , though of exponential complexity , can be computed and represented in @xmath3 .",
    "the propositions of the section 2 of the article are generic and can be applied to reduce multi - objective optimization problems and re - assemble the pareto front , similarly to other exact approaches to the pareto set @xcite .",
    "specifically , the maximality property expressed in proposition [ maximality ] and proposition [ necessary ] shows how to decrease the search space while conserving the pareto set , and proposition [ parparpar ] can then be used to break up the problem recursively into smaller subproblems .    in the context of the optimization of multi - input monotone systems",
    ", it would be important to investigate generalization of the algorithm developed here to linear inequality constraints or to ideal points other than corners of the search space .",
    "pn was supported by fom programme 103 `` dna in action : physics of the genome '' .",
    "this work is part of the research programme of the foundation for fundamental research on matter ( fom ) , which is part of the netherlands organisation for scientific research ( nwo ) .",
    "we would like to thank olivier spanjaard from the laboratoire dinformatique de paris 6 ( lip6 ) and the members of the laboratoire dinformatique fondamentale de lille ( lifl ) for their unvaluable advices .",
    "shoval o , sheftel h , shinar g , hart y , ramote o , mayo a , dekel e , kavanagh k , alon u ( 2012 ) phenotype space evolutionary trade - offs , pareto optimality , and the geometry of phenotype space . _ science _ 336:1157 - 1160 ."
  ],
  "abstract_text": [
    "<S> we developed a graph - based method to solve the multi - objective optimization problem of minimizing or maximizing subsets of @xmath0 bounded variables under partial order constraints . </S>",
    "<S> this problem , motivated by the optimization of the response of multi - input monotone systems applied to biological gene networks , can find applications in other contexts such as task scheduling . </S>",
    "<S> we introduce a mapping between coloured graphs ( hasse diagrams ) and polytopes associated with an ideal point , and find an exact closed - form description of the pareto optimal set using a dynamic program based on edge contractions . </S>",
    "<S> the proof of the algorithm is based on decomposition properties of pareto optimal sets that follow from elementary set operations , notably a maximality property valid for compact ensembles . in the general case , </S>",
    "<S> the pareto front is found in @xmath1 steps , where @xmath0 is the number of variables and @xmath2 the number of faces of the pareto front . using a parameterized complexity approach , the computation and the representation of the solution reaches @xmath3 for series - parallel graphs when </S>",
    "<S> the size of monochromatic connected components is bounded . </S>"
  ]
}
{
  "article_text": [
    "recent results @xcite showing near - exponential separations between the size of regular and general refutations of certain sets of clauses also show a separation of general and regular resolution width . that is to say , the examples used in showing the size separation have large regular resolution width , but bounded general resolution width .",
    "this observation suggests that it might be possible to prove results for regular resolution similar to those of ben - sasson and wigderson @xcite for tree resolution and general resolution .",
    "the main theorem below shows that this hope is bound to be disappointed ; it exhibits examples having small regular resolution size , but large regular width .",
    "the first part of the paper gives a characterization of regular resolution width , in the style of atserias and dalmau @xcite .",
    "the second part discusses the relationship between the size and width of regular resolution refutations .",
    "a _ literal _ is a propositional variable @xmath0 or its negation @xmath1 .",
    "a _ clause _ is a set of literals , interpreted as the disjunction of the set . for clauses containing exactly one positive literal",
    ", we use the implication @xmath2 as alternative notation for the clause @xmath3 . for notational convenience",
    ", we shall also allow the case where the positive literal @xmath4 is replaced by the propositional constant @xmath5 .",
    "for any assignment @xmath6 , @xmath7 , so that the expression `` @xmath8 '' is an alternative notation for the purely negative clause @xmath9    if @xmath10 is a variable , and @xmath11 a clause , then we say that @xmath10 has a _ positive occurrence _ in @xmath11 if @xmath10 is in @xmath11 , and a _ negative occurrence _ in @xmath11 if @xmath12 is in @xmath11 .",
    "in addition , we shall say that @xmath5 has a positive occurrence in the purely negative horn clause @xmath8 .",
    "if @xmath13 is a set of clauses , and @xmath14 are variables in @xmath13 , or the propositional constant @xmath5 , then we say that there is an _ implicational chain from @xmath0 to @xmath15 in @xmath13 _ if there is a sequence @xmath16 of variables ( or constants ) and a sequence @xmath17 of clauses so that for all @xmath18 , @xmath19 , @xmath20 occurs negatively and @xmath21 positively in @xmath22 .",
    "the _ resolution rule _ allows us to derive the _ resolvent _",
    "@xmath23 from the clauses @xmath24 and @xmath25 by _ resolving on _ the variable @xmath0 .",
    "a _ resolution derivation _ of a clause @xmath11 from a set of clauses @xmath13 consists of a sequence of clauses in which each clause is either a clause of @xmath13 , or derived from earlier clauses by resolution , and @xmath11 is the last clause in the sequence ; it is a _ refutation _ of @xmath13 if @xmath11 is the empty clause @xmath26 .",
    "the _ size _ of a resolution proof is the number of occurrences of clauses in the proof  that is to say , the length of the proof considered as a sequence . for a contradictory set of clauses @xmath13",
    ", we write @xmath27 for the minimum size of a resolution refutation of @xmath13 .",
    "a resolution proof is a _ tree - style _",
    "proof if every clause in the proof is used at most once as a premiss in a resolution inference .",
    "we write @xmath28 for the minimum size of a tree - style refutation of a contradictory set of clauses @xmath13 . a resolution refutation of a set of clauses @xmath13 is an _ input proof _ if in every application of the resolution rule in it , at least one premiss of the application is an input clause in @xmath13 .",
    "every input refutation is automatically a tree - style refutation .",
    "an _ irregularity _ in a resolution proof is a sequence of clauses @xmath17 so that @xmath29 is derived from @xmath22 ( that is , @xmath22 is one of the premisses of a resolution inference in which the conclusion is @xmath29 ) , and there is a variable that occurs in @xmath30 and @xmath31 , but not in any intermediate clause @xmath32 , @xmath33 .",
    "a resolution proof is _ regular _ if it contains no irregularity .",
    "if @xmath34 is a set of propositional variables , then an _ assignment _ is a boolean function defined on a subset of @xmath34 , that is , an assignment of @xmath35 to some or all of the variables in @xmath34 . if @xmath36 is an assignment , then we write @xmath37 for the cardinality of @xmath36 , the number of variables to which @xmath36 assigns values .",
    "the result of restricting a clause @xmath11 by setting a literal @xmath38 is defined as follows .",
    "if the literal @xmath38 occurs in @xmath11 , then @xmath39 = 1 $ ] , while @xmath40 $ ] is @xmath41 .",
    "if @xmath13 is a set of clauses , and @xmath42 , then @xmath43 $ ] is the set of clauses @xmath44 : c \\in \\sigma \\ } \\setminus \\ { 1 \\}$ ] .",
    "the _ width _ of a clause is the number of literals in it .",
    "the width @xmath45 of a set of clauses is the maximum width of a clause in @xmath13 , while the width of a resolution proof is the maximum width of a clause in it .",
    "if @xmath13 is a contradictory set of clauses , then we define the _ refutation width _ of @xmath13 , written @xmath46 , to be the minimum width of a resolution refutation of @xmath13 .",
    "if @xmath47 is a family of resolution proofs , we define a restricted notion of refutation width , the _ @xmath47-refutation width _ , @xmath48 , to be the minimum width of a refutation of @xmath13 that belongs to @xmath47 .",
    "in particular , we define the _ regular refutation width _ , @xmath49 , of a contradictory set of clauses @xmath13 to be the @xmath50-refutation width where @xmath50 is the class of all regular resolution proofs .",
    "the notation @xmath51 stands for the base two logarithm of @xmath0 , and @xmath52 for @xmath53 .",
    "in this section , we give a proof of a result of atserias and dalmau @xcite characterizing the width of general resolution refutations .",
    "the characterization is in terms of a two player game , that we shall call the _",
    "@xmath54-width game _ , played by the _ prover _ and the _ adversary_. the rules of the game are as follows .",
    "the players are given a set of clauses @xmath13 , on a set @xmath34 of variables , and an integer parameter @xmath55 .",
    "the players together construct a succession of assignments to the variables in @xmath34 .",
    "initially , the assignment is empty .",
    "each round of the game proceeds as follows , starting from a current assignment .",
    "first , the prover queries an unassigned variable , and the adversary assigns a value to it .",
    "second , the prover is allowed to delete some of the values of the variables in @xmath34 from the assignment resulting from the adversary s reply ; the result is the new current assignment .",
    "the adversary can win in two ways .",
    "first , if the current assignment ( after deletions ) assigns values to more than @xmath54 variables ; second , if an earlier assignment is repeated during the play of the game .",
    "the prover wins if the current assignment falsifies an initial clause in @xmath13 . clearly",
    "every play of the game must eventually terminate with a win for the prover or for the adversary ( atserias and dalmau define their game so that when the adversary wins , the game can continue infinitely ) .",
    "[ extendiblefamilydefinition ] if @xmath13 is a set of clauses on a set @xmath34 of variables , then a non - empty family @xmath56 of @xmath34-assignments is an _",
    "extendible @xmath54-family for @xmath13 _ if it satisfies the following conditions :    1 .",
    "no assignment in @xmath56 falsifies a clause in @xmath13 ; 2 .   each assignment @xmath36 in @xmath56 satisfies the condition @xmath57 ; 3 .",
    "if @xmath58 , and @xmath59 , then @xmath60 ; 4 .",
    "if @xmath58 , @xmath61 , and @xmath62 , then there is a @xmath60 , so that @xmath63 , and @xmath64 is defined .",
    "the next theorem shows that a resolution refutation of width @xmath54 constitutes a winning strategy for the prover , while an extendible @xmath65-family provides a winning strategy for the adversary .",
    "[ widthcharacterizationtheorem ] * [ atserias and dalmau 2003 ] * let @xmath13 be a set of clauses , and @xmath66",
    ". then the following are equivalent :    1 .",
    "there is no resolution refutation of @xmath13 of width @xmath54 ; 2 .",
    "there is an extendible @xmath65-family for @xmath13 ; 3 .",
    "the adversary wins the @xmath65-width game based on @xmath13 .",
    "first , let us suppose that there is no resolution refutation of @xmath13 of width @xmath54 .",
    "let @xmath67 be the set of all clauses having a resolution proof from @xmath13 of width at most @xmath54 ; since @xmath68 , @xmath69 .",
    "let @xmath56 be the set of all assignments of size at most @xmath65 that do not falsify any clause in @xmath67 .",
    "we claim that @xmath56 is an extendible @xmath65-family for @xmath13 .",
    "first , @xmath56 is non - empty , because it contains the empty assignment ( since @xmath67 does not contain the empty clause ) .",
    "second , @xmath56 satisfies the first three conditions of definition [ extendiblefamilydefinition ] , by construction . to prove the fourth condition ,",
    "let @xmath58 , and @xmath57 , @xmath62 , but there is no extension @xmath70 of @xmath36 in @xmath56 with @xmath64 defined .",
    "it follows that there is a clause @xmath71 that is falsified if we extend @xmath36 by setting @xmath0 to @xmath72 .",
    "then @xmath73 for some @xmath74 , since otherwise @xmath36 would falsify @xmath75 .",
    "similarly , there is a clause @xmath76 in @xmath67 that is falsified by the extension of @xmath36 that sets @xmath0 to 1 .",
    "but then @xmath36 must falsify @xmath77 , showing that @xmath77 has width at most @xmath54 , since @xmath78 .",
    "hence , it follows that @xmath77 is in @xmath67 , contradicting our assumption that @xmath36 is in @xmath56 .",
    "second , let us suppose that there is an extendible @xmath65-family for @xmath13 . then the adversary can play the @xmath54-width game on @xmath13 by responding to the prover s queries with the appropriate assignment from the family , starting with the empty assignment .",
    "since no assignment in the family falsifies an initial clause , this strategy must eventually end in a win for the adversary , no matter how the prover plays .    finally , let us suppose that there is a resolution refutation of @xmath13 of width @xmath54 .",
    "then the refutation provides the prover with a winning strategy in the @xmath65-width game based on @xmath13 .",
    "starting from the empty clause at the root , the prover follows a path in the refutation so that at each round , the assignment ( after appropriate deletions ) is a minimal assignment falsifying the current clause .",
    "the variable queried is the variable resolved upon to derive the current clause .",
    "this strategy must result in a win for the prover when the path reaches a clause in @xmath13 .",
    "in the present section , we modify the result of atserias and dalmau to characterize the width of regular resolution refutations .",
    "the characterization is again in terms of a two player game , that we shall call the",
    "_ regular @xmath54-width game_. the game is exactly the same as that described in the previous section , but with the added condition that the prover can never query a previously queried variable .    as in the case of general resolution width",
    ", we can characterize the regular resolution width in terms of extendible families of assignments .",
    "however , we need to redefine the notion of an assignment . in the earlier notion of assignment",
    ", a variable could be in three states : _ positive _ ( 1 ) , _ negative _ ( 0 ) , and _ unassigned _ ( @xmath79 ) . for the case of regular resolution",
    ", we define an _ extended assignment _ to be an assignment of values in which each variable can be in four states : _ positive _ ( 1 ) , _ negative _ ( 0 ) , _ unassigned _ ( @xmath79 ) , or _ forgotten _ ( @xmath80 ) . the _ empty extended assignment _ to a set @xmath34 of variables",
    "consists of the assignment in which all variables in @xmath34 are unassigned ( @xmath79 ) ( this should be distinguished from assignments in which all of the variables are unassigned or forgotten ( @xmath80 ) ) .",
    "if @xmath36 is an extended assignment , then those variables that are assigned the values 0 or 1 are the _ live _ variables in @xmath36 , and we write @xmath37 for the number of live variables in @xmath36 . if @xmath36 and @xmath70 are extended assignments to a set of variables @xmath34 , then we write @xmath63 if @xmath70 results from @xmath36 by replacing some unassigned variables by live variables .",
    "we also write @xmath81 if @xmath36 results from @xmath70 by forgetting some variables , that is , changing the value of a live ( 0 or 1 ) variable to @xmath80 .    as in the case of the earlier @xmath54-width game ,",
    "the players are given a set of clauses @xmath13 , on a set @xmath34 of variables , and an integer parameter @xmath55 .",
    "together , they construct a succession of extended assignments to the variables in @xmath34 .",
    "initially , the assignment is empty .",
    "each round of the game proceeds as follows .",
    "first , the prover queries an unassigned variable , and the adversary assigns a value to it .",
    "next , the prover is allowed to forget some of the variables in the resulting assignment , that is , to change the value of a live variable from 0 or 1 to @xmath80 ( forgotten ) ; the result is the new current assignment .",
    "again , the adversary can win in two ways .",
    "first , if the current assignment assigns values to more than @xmath54 variables ; second , if the prover has not won up to this point , but there are no unqueried variables , so the prover has no legal move .",
    "the prover wins if the current assignment falsifies an initial clause in @xmath13 ( if this clause contains more than @xmath54 variables , then we count this as a win for the adversary ) . as before , every play of the game must eventually terminate with a win for the prover or for the adversary .",
    "[ regularextendiblefamilydefinition ] if @xmath13 is a set of clauses on a set @xmath34 of variables , then a family @xmath56 of extended @xmath34-assignments is a _ regular extendible @xmath54-family for @xmath13 _ if it satisfies the following conditions :    1 .",
    "the empty assignment belongs to @xmath56 ; 2 .",
    "no assignment in @xmath56 falsifies a clause in @xmath13 ; 3 .   each assignment @xmath36 in @xmath56 satisfies the condition @xmath57 ; 4 .",
    "if @xmath58 , and @xmath82 , then @xmath60 ; 5 .",
    "if @xmath58 , @xmath61 , @xmath62 , and @xmath83 , then there is a @xmath60 , so that @xmath63 , and @xmath84 or @xmath85 .",
    "the next theorem is the analogue of theorem [ widthcharacterizationtheorem ] for regular resolution .",
    "[ regularwidthcharacterizationtheorem ] let @xmath13 be a set of clauses , and @xmath66 .",
    "then the following are equivalent :    1 .   there is no regular resolution refutation of @xmath13 of width @xmath54 ; 2 .",
    "there is a regular extendible @xmath65-family for @xmath13 ; 3 .",
    "the adversary wins the regular @xmath65-width game based on @xmath13 .",
    "( 1 @xmath86 2 ): let us suppose that there is no regular resolution refutation of @xmath13 of width @xmath54 .",
    "define @xmath67 to be the set of all clauses having a regular resolution proof from @xmath13 of width at most @xmath54 ; since @xmath68 , @xmath69 .",
    "let @xmath56 be the set of all extended assignments of size at most @xmath65 that do not falsify any clause in @xmath67 .",
    "we claim that @xmath56 is an extendible @xmath65-family for @xmath13 .",
    "since the empty clause @xmath26 does not belong to @xmath67 , the empty assignment is in @xmath56 , so the first condition in definition [ regularextendiblefamilydefinition ] is satisfied .",
    "the second condition holds because @xmath69 , and the third condition by definition .",
    "the fourth condition also follows from the definition of @xmath56 .",
    "it remains to prove the fifth condition .",
    "assume that @xmath58 , and @xmath57 , @xmath62 , and @xmath83 , but there is no extension @xmath87 in @xmath56 with @xmath64 defined .",
    "let @xmath88 and @xmath89 be the extended assignments obtained from @xmath36 by setting @xmath0 to 0 and 1 , respectively . since neither @xmath88 nor @xmath89 belong to @xmath56 , it follows that there are regular resolution derivations @xmath90 and @xmath91 of clauses @xmath92 and @xmath30 , each having width at most @xmath54 , so that for @xmath93 , @xmath94 . since @xmath58",
    ", it follows that @xmath95 , and @xmath96 , for some clauses @xmath75 and @xmath74 .",
    "however , if we extend the regular resolution derivations @xmath90 and @xmath91 by resolving on @xmath0 , so that the final clause is @xmath97 , the result is a regular resolution derivation of @xmath97 , where @xmath98 . since @xmath78 , @xmath97 has at width at most @xmath54 , showing that @xmath97 is in @xmath67 ; this contradicts our assumption that @xmath58 .",
    "( 2 @xmath86 3 ): second , let us suppose that there is a regular extendible @xmath65-family for @xmath13 .",
    "then the adversary can play the @xmath54-width game on @xmath13 by responding to the prover s queries with the appropriate assignment from the family , starting with the empty assignment .",
    "since no assignment in the family falsifies an initial clause , this strategy must eventually end in a win for the adversary , no matter how the prover plays .",
    "( 3 @xmath86 1 ): finally , let us suppose that there is a regular resolution refutation of @xmath13 of width @xmath54 .",
    "then the refutation provides the prover with a winning strategy in the regular @xmath65-width game based on @xmath13 . starting from the empty clause at the root ,",
    "the prover follows a path in the refutation so that at the end of each round , after the prover has forgotten certain live variables , the remaining live variables are the domain of a minimal assignment falsifying the current clause .",
    "the variable queried is the variable resolved upon to derive the current clause .",
    "this strategy must result in a win for the prover .",
    "the question  is there a regular resolution refutation of the set of clauses @xmath13 with width @xmath54 ? \" is in pspace .",
    "theorem [ regularwidthcharacterizationtheorem ] shows that this question can be answered by an alternating turing machine operating in polynomial time .    in the case of general resolution",
    "width , it is not clear whether the corresponding problem is in pspace , because there is no polynomial upper bound on how long the @xmath54-width game might last .",
    "recent results on size separation between regular and general resolution also show a width separation .    for each @xmath99",
    ", there is a contradictory set of clauses with @xmath100 variables and @xmath101 clauses for which the general resolution width is bounded , but the regular resolution width is @xmath102 .",
    "the paper @xcite implicitly contains such a separation .",
    "more specifically the family of clauses @xmath103 defined in  3 of @xcite fulfil the conditions of the theorem .",
    "the @xmath102 lower bound on regular resolution width is proved ( implicitly ) in theorem 3.10 of that paper , which shows an exponential ( @xmath104 ) lower bound on the size of regular resolution refutations of @xmath103 .",
    "the author s paper @xcite demonstrates an improved size separation between regular and general resolution ; it also shows a width separation between the two forms of proof system .",
    "the main theorem shows that for infinitely many @xmath105 , there is a set @xmath106 of @xmath107 clauses containing @xmath108 variables , where the maximum width of a clause in @xmath106 and the general resolution width are both @xmath109 , while the regular resolution width is @xmath110 .",
    "the results just described suggest a natural conjecture that a good lower bound on the regular width of a set of clauses leads to a good lower bound on the size of a regular refutation of them . for both general and tree resolution ,",
    "ben - sasson and wigderson @xcite have proved strong results along these lines .",
    "[ bensassonwigdersontheorem ] * [ ben - sasson and wigderson 2001 ] * let @xmath13 be a contradictory set of clauses with an underlying set of variables @xmath34 . then :    1 .   @xmath111 ; 2 .   @xmath112    given the width and size separation results between regular and general resolution cited above , it seems reasonable to conjecture that the second lower bound proved by ben - sasson and wigderson might hold , in the form where we replace `` resolution size '' by `` regular resolution size , '' and `` resolution width '' by `` regular resolution width . '' in the remainder of the paper , we show that this conjecture fails .    before proceeding to the main constructions ,",
    "it may be helpful to the reader to clarify the relations between the various forms of resolution discussed here .",
    "if we consider the size measure alone , then it is not hard to see that regular resolution is at least as powerful as tree resolution .",
    "this is because a pruning procedure @xcite @xcite can be applied to a tree refutation to remove any irregularities while decreasing the size of the tree . on the other hand ,",
    "the lower bound on width for regular refutations proved below does not apply to tree resolution , since the minimum width of a tree - style refutation of a set of clauses is the same as that of a general resolution refutation ( we can convert any general resolution proof into a tree - style proof by repeating subderivations ) .",
    "however , if we insist on restricting our attention to tree - style refutation _ of minimum size _ , then the lower bounds on width do apply , since such refutations are necessarily regular .",
    "a _ pointed graph _",
    "@xmath113 is a directed acyclic graph where all vertices have indegree at most two , having a unique sink , or target vertex , to which there is a directed path from all the vertices in @xmath113 .",
    "it is _ binary _ if all vertices except for the source vertices have indegree two .",
    "if @xmath114 is a vertex in a pointed graph @xmath113 , then @xmath115 is the subgraph of @xmath113 restricted to the vertices from which there is a directed path to @xmath114 .    the _ pebbling game",
    "_ played on a pointed graph @xmath113 is a one - player game in the course of which pebbles are placed on or removed from vertices in @xmath113",
    ". the rules of the game are as follows ;    1 .",
    "a pebble may be placed on a source vertex at any time .",
    "if all predecessors of a vertex are marked with pebbles , then a pebble may be placed on the vertex itself .",
    "a pebble may be removed from a vertex at any time .",
    "a _ move _ in the game consists of placing or removing one of the pebbles in accordance with one of the three rules .",
    "the _ configuration _ at a given stage in the game is the set of vertices in @xmath113 that are marked with a pebble .",
    "a play of the game begins with no pebbles on @xmath113 .",
    "the goal of the game is to place a pebble on the sink vertex @xmath116 , while minimizing the number of pebbles used ( that is , minimizing the number of pebbles on the graph at any stage of the game ) .",
    "thus a successful play of the game can be presented as a sequence of configurations @xmath117 , where @xmath118 and @xmath119 , where @xmath120 is obtained from @xmath32 by one of the three rules .",
    "a _ strategy _ for the game is a sequence of moves following the rules of the game that ends in pebbling the target vertex .",
    "the _ cost _ of such a strategy is the minimum number of pebbles required in order to execute it , that is to say , the size of the largest configuration in the sequence of configurations produced by following the strategy .",
    "the _ pebbling number _ of @xmath113 , written as @xmath121 , is the minimum cost of a strategy for the pebbling game played on @xmath113 .",
    "we associate a contradictory set of clauses @xmath122 with every pointed graph @xmath113 .",
    "each vertex in @xmath113 except the target @xmath116 is assigned a distinct variable ; to simplify notation , we identify a vertex with the variable associated with it , and use the notation @xmath123 for the set of these variables .",
    "we associate the constant @xmath5 ( falsum ) with the target vertex @xmath116 , and make the identification @xmath124 .",
    "if @xmath113 is a pointed graph , @xmath122 is a set of clauses expressed in terms of the variables @xmath123 , so that @xmath125 .    1 .   if @xmath114 is a source vertex of @xmath113 , then @xmath126 .",
    "2 .   if @xmath114 is a vertex in @xmath113 , with predecessor @xmath127 , then @xmath128 .",
    "3 .   if @xmath114 is a vertex in @xmath113 , with predecessors @xmath129 , then @xmath130 .",
    "if we set some variables in @xmath122 , then the resulting set of clauses is not necessarily of the form @xmath131 , where @xmath132 is a subgraph of @xmath113",
    ". we shall focus on a family of special assignments , called _ pebbling assignments _ , that preserve this property . if @xmath133 , @xmath134 , then we define the assignment @xmath135 \\ ! ] $ ] to be the assignment defined by first setting the variable @xmath114 to 1 , and then setting to 1 any variable @xmath127 for which there is no implicational chain from @xmath127 to @xmath5 in the resulting clause set . the assignment @xmath136 \\ ! ]",
    "$ ] is defined as follows : first , choose a directed path @xmath137 from @xmath114 to the target @xmath116 , set all the vertices in the path to 0 , and in addition set any vertex from which @xmath114 is not reachable , but not in the path @xmath138 , to 1 . the assignment @xmath136 \\ ! ] $ ] is not uniquely determined by this construction , since it depends on the path chosen  however , this is not important , since the set of clauses @xmath139 \\ ! ] $ ] resulting from the restriction is independent of the path . a _",
    "pebbling assignment _ results from a sequence of restrictions of the form @xmath136 \\ ! ] $ ] and @xmath140 \\ ! ] $ ] .",
    "the effect of the restrictions just defined can be described directly as an operation on the underlying graph .",
    "if @xmath113 is a pointed graph , and @xmath133 , @xmath134 , @xmath141 $ ] is the graph resulting from @xmath113 by first removing @xmath114 , together with all edges entering or leaving @xmath114 , and then restricting the resulting graph to the vertices from which the target vertex @xmath116 is accessible .",
    "@xmath142 $ ] is the pointed graph @xmath115 .",
    "[ pebblinglemma ]    1 .   for @xmath143 , @xmath144 \\ ! ] = \\mbox{peb}(g [ v : = b ] ) $ ] .",
    "2 .   if @xmath113 is a pointed graph , and @xmath133 , then @xmath145 ,   \\sharp g [ v : = 1 ]   + 1 \\}.\\ ] ]    the first part of the lemma follows straightforwardly from the definitions . for the second part",
    ", we employ the following strategy in the pebble game on @xmath113 ; the strategy is the same as the one used in lemma 15 of @xcite .",
    "first , follow a minimum cost strategy to pebble @xmath114 in @xmath142 $ ] .",
    "second , leaving a pebble on @xmath114 , but removing all other pebbles , follow a minimum cost strategy in the pebbling game on @xmath141 $ ] to pebble the target vertex in @xmath113 , using the extra pebble for any moves where a pebble is needed on @xmath114 to justify a placement .",
    "the cost of this strategy is at most @xmath146 ,   \\sharp g [ v : = 1 ]   + 1 \\}$ ] .        if @xmath113 is the pyramid graph shown in figure 1 , then @xmath122 is the set of clauses @xmath147 the assignment @xmath148 \\ ! ] $ ] sets the variables @xmath149 and @xmath150 to 1 ; @xmath151 \\ ! ]",
    "$ ] is @xmath152)$ ] where @xmath153 $ ] results from @xmath113 by removing the vertices @xmath149 and @xmath150 . if we choose the path @xmath154 , then the assignment @xmath155 \\ ! ] $ ] sets the variables @xmath156 and @xmath157 to 0 , while the variables @xmath158 are all set to 1 .",
    "the set of clauses @xmath159 \\ ! ] $ ] is @xmath160)$ ] , where @xmath161 $ ] is the subgraph of @xmath113 containing only @xmath162 and @xmath156 .",
    "[ pebblingprooflemma ] if @xmath113 is a pointed graph with @xmath105 vertices , then @xmath122 has a tree resolution refutation with size @xmath163 .",
    "starting with the clause @xmath164 associated with the sink of @xmath113 , construct a sequence of purely negative clauses , working from the sink to the sources , by successive inferences using input resolution .",
    "let @xmath165 be the last clause in the sequence constructed so far , where @xmath166 is not a source vertex , and @xmath11 is purely negative .",
    "resolve @xmath165 against the clause @xmath167 to produce the next purely negative clause in the sequence , @xmath168 .",
    "the sequence must end in a purely negative clause in which all the literals are of the form @xmath169 , where @xmath170 is a source vertex .",
    "now resolve each of these negative literals against the one - literal positive clauses corresponding to the sources . in this input refutation",
    ", each variable is resolved upon exactly once , so that the refutation has size @xmath163 .",
    "if @xmath13 is a set of clauses , then a _ @xmath11-critical assignment _ is a total assignment to the variables in @xmath13 that makes all the clauses true , except @xmath11 . in the case of @xmath122 , we are interested in a particular family of critical assignments . let @xmath114 be a vertex in @xmath113 , and @xmath137 a directed path in @xmath113 from @xmath114 to the target vertex @xmath116",
    ". set all the vertices in the path @xmath138 to 0 , and all other vertices in @xmath113 to 1 .",
    "this assignment makes all of the clauses in @xmath122 true , except for @xmath171 .",
    "an assignment determined by the path @xmath138 we shall call a _",
    "@xmath114-critical assignment _ , since the clause that it falsifies is associated with the vertex @xmath114 .",
    "since we have assumed that @xmath113 is a pointed graph , such @xmath114-critical assignments exist for all the vertices @xmath114 in @xmath113 , so that @xmath122 is minimally inconsistent .    [ criticalassignments ] if @xmath113 is a pointed graph with @xmath172 , then there are at least @xmath10 vertices @xmath114 in @xmath113 for which there is a @xmath114-critical assignment for @xmath122 .    every pebbling strategy for @xmath113 must contain a configuration with @xmath10 pebbles , so there must be at least @xmath10 vertices in @xmath113 . for every vertex in @xmath113 , we can construct a @xmath114-critical assignment for @xmath122 by choosing a path from @xmath114 to the target vertex .",
    "to produce clause sets requiring large regular width , we start from the set of clauses @xmath122 , where @xmath113 is a pointed graph with @xmath105 vertices .",
    "we use the abbreviation @xmath34 for the set of variables @xmath123 , and @xmath173 for the set of all sequences of variables in @xmath34 of length @xmath10 .",
    "let @xmath6 be a function from @xmath113 to @xmath173 , that is to say , a function associating a sequence of length @xmath10 with every @xmath133 .",
    "thus , for each @xmath133 , we have an associated sequence @xmath174 , where each @xmath175 is a variable in @xmath34 ; the sequence may contain repetitions .",
    "now for @xmath133 , define the set @xmath176 to be the set of all clauses having the form @xmath177 where @xmath178 , for @xmath179 , is either @xmath180 or @xmath181 .",
    "@xmath176 contains @xmath182 clauses of width at most @xmath183 .",
    "in addition , for @xmath184 , define @xmath185    the construction just described can be considered as an iteration of the method used to construct the family of clauses @xmath103 defined in  3 of @xcite .",
    "a key difference from the earlier construction is that the @xmath103 examples begin from a set of clauses @xmath186 that is hard for tree resolution ( though easy for general resolution ) , while the present construction begins from a set of clauses @xmath122 that is easy for tree resolution .",
    "the clause sets that we construct in this section are of the form @xmath187 , for @xmath113 a pointed graph with @xmath105 vertices . to ensure that these clause sets require large regular width , the map @xmath6 must satisfy a combinatorial condition that can be stated roughly as follows : the image of any large set of vertices in @xmath113 has a large intersection with any large set of variables . in the next subsection",
    ", we give a precise meaning to the term `` large , '' and prove the existence of a function @xmath6 satisfying the condition , by a probabilistic construction .    for @xmath113 a pointed graph , and @xmath6 a function from @xmath113 to @xmath173 , define @xmath188 to be @xmath187 .",
    "@xmath188 contains @xmath189 clauses of width at most @xmath183 .",
    "we shall show in what follows that the sets of clauses @xmath188 , for an appropriate family of pointed graphs @xmath113 and functions @xmath6 , require large regular width , but on the other hand have regular tree resolution refutations whose size is linear in @xmath190 .      in this subsection , we formulate and prove the existence result described above , by employing a probabilistic construction .",
    "if @xmath191 , and @xmath192 , then we use the notation @xmath193 for the set of all elements in the sequence @xmath6 that also belong to the set @xmath194 ; similarly , if @xmath195 is a set of such sequences , then @xmath196 is defined to be @xmath197 . for @xmath184 , define @xmath198 .",
    "[ existencelemma ] let @xmath113 be a pointed graph with @xmath105 vertices , @xmath199 the set of variables in @xmath122 , and @xmath200 .    for any @xmath201 , and sufficiently large @xmath105",
    ", there is a map @xmath6 from @xmath113 to @xmath173 satisfying the condition : for all @xmath184 and @xmath202 with @xmath203 , @xmath204 .",
    "let us associate with each @xmath133 a random subset of @xmath34 with size @xmath10 , chosen with replacement .",
    "that is to say , with each @xmath133 , we associate a sequence @xmath174 , where each variable @xmath175 is chosen independently and uniformly at random from the set @xmath34 of all variables .    in the first part of the proof ,",
    "let us consider the sets @xmath205 and @xmath194 to be fixed subsets of @xmath113 and @xmath34 respectively .",
    "define a map @xmath6 from @xmath113 to @xmath173 to be _",
    "bad for @xmath205 and @xmath194 _ if @xmath204 ; otherwise _",
    "good for @xmath205 and @xmath194_. we begin by proving that for fixed sets @xmath205 and @xmath194 , a random map @xmath6 is bad with exponentially small probability .    to prove this bound on the probability , it is convenient to consider the construction of the map as resulting from a series of independent choices . divide the sequence @xmath206 into @xmath207 blocks , so that each block contains at least @xmath208 integers .",
    "that is to say , the sequence @xmath206 can be written as a concatenation @xmath209 of sequences @xmath210 , each of length at least @xmath208 .",
    "fix a block @xmath210 , where @xmath211 , and define a random variable @xmath212 representing the number of variables in @xmath194 that are not in the random subset @xmath213 , that is to say @xmath214 we begin by estimating the expected value of @xmath212 .",
    "let @xmath215 where @xmath216 .",
    "define an indicator random variable @xmath217 by : @xmath218 so that @xmath219 .",
    "we estimate the expected value of @xmath217 by @xmath220 showing that @xmath221 it follows that for any given positive @xmath222 , @xmath223 , for sufficiently large @xmath105 . for the remainder of the proof",
    ", we assume that @xmath105 is chosen sufficiently large so that @xmath224 .    in the second stage of the proof , we need to show that the random variable @xmath212 is tightly concentrated around its mean . to do this ,",
    "we employ a large deviation bound for martingales , following @xcite .",
    "order the set @xmath205 as @xmath225 .",
    "the sequence @xmath226 represents a random subset of variables with size @xmath227 .",
    "let @xmath228 be the set of all sequences in @xmath34 of length @xmath180 . for @xmath229 , and @xmath230",
    ", define @xmath231 to be the subsequence @xmath232 .",
    "define an equivalence relation on @xmath50 by setting , for @xmath233 , @xmath234 for @xmath230 , and let @xmath235 be the universal relation on @xmath50 .",
    "let @xmath236 be the finite boolean algebra whose atoms are the blocks of the partition of @xmath228 induced by @xmath237 , for @xmath238 ; the sequence @xmath239 of boolean algebras forms a _ filtration _ over the set @xmath50 .",
    "define a sequence of random variables @xmath240 by setting @xmath241 .",
    "then @xmath242 , @xmath243 , and the sequence @xmath240 forms a martingale @xcite , the doob martingale associated with the filtration @xmath239 .",
    "the intuitive picture here is that at time 0 , we begin with no specific information about a given sequence @xmath6 ; we learn its values one by one at each successive time step @xmath116 , until we have full information about @xmath6 at time @xmath180 .    if @xmath244 and @xmath6 are two sequences in @xmath50 that differ at most at a single point , then @xmath245 .",
    "in the terminology of alon and spencer @xcite , the random variable @xmath212 satisfies the lipschitz condition relative to the filtration @xmath239 .",
    "it follows by theorem 4.1 of chapter 7 of the monograph by alon and spencer @xcite that @xmath246 .",
    "consequently , by the martingale tail inequality of hoeffding and azuma @xcite @xcite , @xmath247    let @xmath248 be the random variable representing the number of variables in @xmath194 not in the image of @xmath205 under @xmath6 : @xmath249 since the maps @xmath250 are constructed independently , it follows that @xmath251^q =    \\exp ( - \\omega   ( n   ) ) .\\ ] ]    we can now complete the proof of the existence of a map @xmath6 satisfying the condition of lemma [ existencelemma ] .",
    "the probability that a random map @xmath252 is bad for some @xmath205 and @xmath194 is bounded by @xmath253 using the simple inequality @xmath254 found in bollobs s textbook on graph theory @xcite , the binomial coefficient above can be bounded by @xmath255 hence , the probability can be bounded above by @xmath256 consequently , the probability that a random map @xmath244 is bad for some @xmath205 and @xmath194 is exponentially small for sufficiently large @xmath105 , showing that a map satisfying the condition of the lemma must exist .",
    "let @xmath113 be a pointed graph , @xmath34 the set of vertices in @xmath113 ( other than the sink ) and @xmath257 and @xmath10 positive integers .",
    "we define a map @xmath6 to be _",
    "good for @xmath113 , @xmath257 , and @xmath10 _ if it satisfies the condition : there is a map @xmath6 from @xmath113 into @xmath173 so that for any @xmath184 and @xmath202 , if @xmath258 , then @xmath259 .",
    "lemma [ existencelemma ] states that for any @xmath201 , given sufficiently large @xmath105 , @xmath200 , and @xmath260 , for every pointed graph with @xmath105 vertices , there is a map @xmath6 that is good for @xmath113 , @xmath257 , and @xmath10 .",
    "this lemma allows to construct a set of examples that have polynomial - size regular resolution refutations , but large regular width .",
    "the construction is based on the following result of paul , tarjan and celoni .",
    "[ pct ] @xcite there is a sequence of binary pointed graphs @xmath261 with pebbling number at least @xmath262 , for sufficiently large @xmath18 , where @xmath263 , and @xmath264 .",
    "it should be mentioned that the graphs @xmath265 constructed by paul , tarjan and celoni , though binary , are not pointed , since they are constructed to have multiple sink nodes . however , in their main theorem , they show that for sufficiently large @xmath18 , their graph @xmath265 contains a sink node that requires @xmath262 pebbles to pebble it , starting from the empty configuration . hence , we can construct a pointed graph from @xmath265 by choosing such a sink node , and considering the subgraph @xmath266 containing all the nodes from which this sink is accessible . this subgraph @xmath266 still satisfies the condition @xmath263 , so the main theorem of paul , tarjan and celoni continues to hold , if we add the qualifier `` pointed . ''",
    "[ upperboundlemma ] let @xmath113 be a pointed graph with @xmath105 vertices , and @xmath6 a map from @xmath113 to @xmath173 , where @xmath200 .",
    "then the set of clauses @xmath188 contains @xmath267 variables and @xmath268 clauses , and has a regular tree refutation with size @xmath268 .    by lemma [ pebblingprooflemma ]",
    ", @xmath122 has an input refutation with size at most @xmath163 .",
    "for a given vertex @xmath114 in @xmath113 , the clause @xmath269 associated with the vertex can be derived from @xmath176 by a tree resolution proof with size @xmath270 .",
    "consequently , @xmath271 has a tree refutation with size @xmath272 , that is , @xmath268 .",
    "this tree refutation may not be regular ; however , if irregularities are present , it is possible to remove them @xcite @xcite resulting in a smaller regular tree - style refutation .",
    "[ lowerboundlemma ]",
    "let @xmath113 be a pointed graph with pebbling number @xmath273 and @xmath6 a map that is good for @xmath113 , @xmath274 , and @xmath10 .",
    "then any regular resolution refutation of @xmath188 must contain a clause with width at least @xmath275 .",
    "we prove the lemma by showing that the adversary wins the regular @xmath275-width game based on @xmath188 .",
    "the winning strategy has two stages . in the first stage ,",
    "the adversary maintains a pebbling assignment to @xmath113 ; at the start of the game , this assignment is empty . in the second stage , the adversary answers according to a fixed @xmath114-critical assignment .",
    "assume that it is the adversary s turn , that @xmath138 is the current pebbling assignment to the variables @xmath34 in @xmath188 , and that @xmath0 is the variable currently queried by the prover .",
    "the adversary answers the current query according to these rules .    1 .",
    "if the variable @xmath0 is already assigned a value by @xmath138 , then answer the query according to @xmath138 ; 2 .   if the variable queried is not assigned a value by @xmath138 , then it must be associated with a node @xmath276 .",
    "extend @xmath138 to a pebbling assignment @xmath277 so that @xmath277 contains @xmath278 \\ ! ] $ ] , choosing @xmath279 so as to maximize the pebbling number of @xmath280 .",
    "the adversary continues to play according to these rules until @xmath281 nodes in @xmath113 have been queried ; when this happens , the first stage is completed .    with the first stage completed , let @xmath36 be the current extended assignment , @xmath138 the current pebbling assignment maintained by the adversary ; we assume that it is the prover s turn . by lemma [ criticalassignments ] , there are at least @xmath274 vertices @xmath276 for which there is a @xmath114-critical assignment for @xmath282 . if @xmath283 is such a critical assignment , then @xmath284 is a @xmath114-critical assignment for @xmath122 .",
    "let @xmath205 be the set of all nodes in @xmath113 satisfying this condition , and @xmath194 the set of variables queried in the game so far .",
    "because @xmath285 , @xmath286 , since @xmath6 is good for @xmath113 , @xmath257 , and @xmath10 .",
    "since the prover and adversary are playing the regular @xmath275-width game , it follows that @xmath287 ( since the current assignment after the adversary s reply has width @xmath288 ) .",
    "hence , at least one variable @xmath114 in @xmath289 must be forgotten in @xmath36 .",
    "let @xmath283 be a @xmath114-critical assignment for @xmath122 ; @xmath283 is also a @xmath114-critical assignment for @xmath188 .",
    "in the second stage of the strategy , the adversary answers all queries in accordance with the assignment @xmath283 .",
    "since @xmath283 makes all of the clauses in @xmath188 true , except for a clause in @xmath290 containing the variable @xmath114 , this strategy results in a win for the adversary , since the variable @xmath114 is forgotten , so the prover can not query it again .",
    "[ maintheorem ] there is an infinite sequence @xmath291 of contradictory sets of clauses and a corresponding list of parameters @xmath292",
    "so that ( abbreviating @xmath293 as @xmath105 ) :    1 .   each clause set @xmath294 contains @xmath295 variables and @xmath268 clauses with width @xmath296 ; 2 .",
    "@xmath294 has a regular tree refutation with size @xmath268 ; 3 .",
    "any regular refutation of @xmath294 must contain a clause with width @xmath297 .    define @xmath298 , where @xmath266 is one of the sequence of pointed graphs in theorem [ pct ] .",
    "the theorem follows by lemmas [ existencelemma ] , [ upperboundlemma ] and [ lowerboundlemma ] .",
    "although the clause sets in theorem [ maintheorem ] have size quasi - polynomial in @xmath105 , they have regular tree refutations that are linear in the size of the clause sets themselves .",
    "furthermore , if we compute the significant quantities in the second part of theorem [ bensassonwigdersontheorem ] , we find that if the corresponding theorem held for regular size and width , then regular refutations of these clause sets would have to have size exponential in @xmath299 .",
    "this shows that the relations between size and width holding for tree resolution and general resolution can not be generalized to the case of regular resolution .",
    "i wrote this paper for a five day workshop on proof complexity at the banff international research station in october 2011 .",
    "i would like to express my thanks to the organizers , sam buss , stephen cook , antonina kolokolova , toni pitassi and pavel pudlk for a most stimulating workshop , and also to paul beame , who , following my talk , pointed out a computational error in the original version of the paper .",
    "michael alekhnovich , jan johannsen , toniann pitassi , and alasdair urquhart .",
    "an exponential separation between regular and general resolution .",
    ", 3:81102 , 2007 .",
    "preliminary version in proceedings of the 34th annual acm symposium on theory of computing : may 19 - 21 2002 , montr ' eal , qubec , canada .          eli ben - sasson and avi wigderson .",
    "short proofs are narrow  resolution made simple .",
    ", 48:149169 , 2001 .",
    "preliminary version : proceedings of the 31st annual acm symposium on theory of computing , 1999 , pp .",
    "517 - 526 .",
    "colin mcdiarmid . concentration . in michel habib , colin mcdiarmid , jorge ramirez - alfonsin , and bruce reed , editors , _ probabilistic methods for algorithmic discrete mathematics _ ,",
    "pages 195248 .",
    "springer , 1998 .",
    "algorithms and combinatorics 16 .",
    "g.s . tseitin . on the complexity of derivation in propositional calculus . in a.",
    "o. slisenko , editor , _ studies in constructive mathematics and mathematical logic , part 2 _ , pages 115125",
    ". consultants bureau , new york , 1970 . reprinted in @xcite , vol .",
    "466 - 483 ."
  ],
  "abstract_text": [
    "<S> this paper discusses the topic of the minimum width of a regular resolution refutation of a set of clauses . </S>",
    "<S> the main result shows that there are examples having small regular resolution refutations , for which any regular refutation must contain a large clause . </S>",
    "<S> this forms a contrast with corresponding results for general resolution refutations . </S>"
  ]
}
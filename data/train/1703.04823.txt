{
  "article_text": [
    "graphs provide a mathematical structure for describing relationships between objects in a system . owing to their intuitive representation , well - understood theoretical properties , the wealth of the algorithmic methodology and available code base ,",
    "graphs have also become a major framework for modeling biological systems .",
    "protein - protein interaction networks , protein 3d structures , drug - target interaction networks , metabolic networks and gene regulatory networks are some of the major representations of biological systems .",
    "unfortunately , molecular and cellular systems are only partially observable and may contain significant amount of noise due to their inherent stochastic nature as well as the limitations of both low - throughput and high - throughput experimental techniques .",
    "this highlights the need for the development and application of computational approaches for predictive modeling ( e.g. , inferring novel interactions ) and identifying interesting patterns in such data .",
    "learning on graphs can be generally seen as supervised or unsupervised . under a supervised setting , typical tasks involve _ graph classification _ ; i.e. , the assignment of class labels to entire graphs  @xcite , _ vertex or edge classification _ ; i.e. , the assignment class labels to vertices or edges in a single graph  @xcite , or _ link prediction _ ;",
    "i.e. , the prediction of the existence of edges in graphs  @xcite . alternatively ,",
    "frequent subgraph mining  @xcite , motif finding  @xcite , clustering  @xcite , and community detection  @xcite are traditional unsupervised approaches .",
    "regardless of the category , the development of techniques that capture local / global network structure , measure graph similarity and incorporate domain - specific knowledge in a principled manner lie at the core of all these problems .",
    "the focus of this study is on classification problems across various biological networks .",
    "a straightforward approach to this problem is the use of topological and other descriptors ( e.g. , vertex degree , clustering coefficient , betweenness centrality ) that summarize graph neighborhoods .",
    "these descriptors straightforwardly lead to vector - space representations of vertices or edges in the graph , after which standard machine learning algorithms can be applied to learn a target function  @xcite .",
    "another approach involves the use of kernel functions on graphs  @xcite .",
    "kernels are mappings of pairs of objects from an input space @xmath0 to an output space @xmath1 with special properties , such as symmetry and positive semi - definiteness , that lead to efficient learning .",
    "graph kernels often exploit similar ideas as traditional vector - space approaches .",
    "finally , classification on graphs can be approached using probabilistic graphical models such as markov random fields  @xcite and related label - propagation  @xcite or flow - based  @xcite methods .",
    "these `` global '' formulations are generally well adjusted to learning smooth functions over neighboring nodes .    despite the success and wide adoption of these methods in machine learning and computational biology ,",
    "it is well - understood that graph representations suffer from information loss since every edge can only encode pairwise relationships  @xcite .",
    "a protein complex , for instance , can not be distinguished from a set of proteins that interact only pairwise .",
    "such disambiguation , however , is important in order to understand the biological activity of these molecules .",
    "hypergraphs , a generalization of graphs , naturally capture these higher - order relationships  @xcite . as we show later",
    ", they also provide a representation that can be used to unify several conventional classification problems on ( hyper)graphs as a single vertex classification approach on hypergraphs .    in this paper , we present and evaluate a kernel - based framework for the problems of vertex classification , edge classification and link prediction in graphs and hypergraphs .",
    "we first use the concepts of hypergraph duality to demonstrate that all such classification problems can be unified through the use of hypergraphs .",
    "we then describe the development of edit - distance hypergraphlet kernels for vertex classification in hypergraphs and combine them with support vector machines into a semi - supervised predictive methodology .",
    "finally , we use sixteen biological network data sets , eleven assembled specifically for this work , to provide evidence that the proposed approaches compare favorably to the previously established methods .",
    "* graphs . *",
    "a graph @xmath2 is a pair @xmath3 , where @xmath4 is a set of vertices ( nodes ) and @xmath5 is a set of edges . in a vertex - labeled graph ,",
    "a labeling function @xmath6 is defined as @xmath7 , where @xmath8 is a finite alphabet .",
    "similarly , in an edge - labeled graph , another labeling function @xmath9 is given as @xmath10 , where @xmath11 is also a finite set .",
    "a rooted graph @xmath2 is a graph together with one distinguished vertex called the root .",
    "we denote such graphs as @xmath12 , where @xmath13 is the root .",
    "a neighborhood graph @xmath14 of a vertex @xmath13 is a rooted graph constructed from @xmath2 such that all nodes at distance at least @xmath15 from @xmath16 ( and corresponding edges ) are removed .    in this work we focus on undirected (",
    "the order of the vertices in each edge can be ignored ) , simple graphs ( graphs without self - loops ) . additionally , for the simplicity of presentation ,",
    "we ignore weighted graphs ; i.e. , graphs where a non - negative number is associated with each vertex . generalization of our approach and terminology to directed and weighted graphs is straightforward .    a walk @xmath17 of length @xmath18 in a graph @xmath2 is a sequence of nodes @xmath19 such that @xmath20 , for @xmath21 .",
    "if @xmath22 , @xmath17 is called a cycle of length @xmath23 .",
    "a path @xmath24 in @xmath2 is a walk in which all nodes are distinct .",
    "a connected graph is a graph where there is a path between any two nodes .",
    "* hypergraphs . *",
    "a hypergraph @xmath2 is a pair @xmath3 , where @xmath4 is the vertex set as previously defined and @xmath25 is a family of non - empty subsets of @xmath4 called hyperedges . as in the case of graphs , one can define a vertex - labeled , edge - labeled , rooted , and neighborhood hypergraphs .",
    "a hyperedge @xmath26 is said to be incident with a vertex @xmath16 if @xmath27 and two vertices are called adjacent if there is an edge that contains both vertices .",
    "the neighbors of a vertex @xmath16 in a hypergraph are the vertices adjacent to @xmath16 .",
    "two hyperedges are said to be adjacent if their intersection is non - empty .",
    "finally , the degree @xmath28 of a vertex @xmath16 in a hypergraph is given by @xmath29 , whereas the degree @xmath30 of a hyperedge @xmath26 is defined as its cardinality ; that is , @xmath31 .",
    "a walk @xmath17 of length @xmath18 in a hypergraph @xmath32 is a sequence of vertices and hyperedges @xmath33 such that @xmath34 for each @xmath21 and @xmath35 . if @xmath22 , @xmath17 is called a cycle of length @xmath23 .",
    "a path @xmath24 in a hypergraph is a walk in which all nodes and edges are distinct .",
    "a connected hypergraph is a hypergraph where there exists a path between any two nodes .",
    "* isomorphism . *",
    "consider two graphs , @xmath36 and @xmath37 .",
    "we say that @xmath2 and @xmath38 are isomorphic , denoted as @xmath39 , if there exists a bijection @xmath40 such that @xmath41 if and only if @xmath42 for all @xmath43 .",
    "if @xmath2 and @xmath38 are hypergraphs , an isomorphism is defined as interrelated bijections @xmath40 and @xmath44 such that @xmath45 if and only if @xmath46 for all hyperedges @xmath47 .",
    "isomorphic graphs ( hypergraphs ) are structurally identical . an automorphism is an isomorphism of a graph ( hypergraph ) to itself .",
    "* edit distance .",
    "* consider two vertex- and hyperedge - labeled hypergraphs @xmath2 and @xmath38 .",
    "the edit distance between these hypergraphs corresponds to the minimum number of edit operations necessary to transform @xmath2 into @xmath38 , where edit operations are defined as insertion / deletion of vertices / hyperedges and substitutions of vertex and hyperedge labels .",
    "any sequence of edit operations that transforms @xmath2 into @xmath38 is referred to as an edit path ; hence , the hypergraph edit distance between @xmath2 and @xmath38 corresponds to the length of the shortest edit path between them .",
    "this concept can be generalized to the case where each edit operation is assigned a cost .",
    "hypergraph edit distance then corresponds to the edit path of minimum cost .    , where @xmath48 and @xmath49 @xmath50 with its dual hypergraph @xmath51 , where @xmath52 and @xmath53 such that @xmath54 , @xmath55 , @xmath56 and @xmath57 .",
    "panel ( b ) shows an example of graph @xmath2 with two degree - one vertices that lead to the dual hypergraph @xmath58 with self - loops ; @xmath59 and @xmath60 .",
    "panel ( c ) shows an extended dual hypergraph that is proposed to formulate link prediction as an instance of vertex classification in hypergraphs . to make a prediction regarding the existence of edge @xmath61 , shown as a dashed line on the left side , an extended dual hypergraph is created in which @xmath61",
    "is added to the set of vertices @xmath62 .",
    "updates are made to hyperedges @xmath63 and @xmath60 ( dashed ) that correspond to those vertices in @xmath2 that are incident with the edge @xmath61 . ]",
    "let @xmath32 be a hypergraph , where @xmath64 and @xmath65 .",
    "the dual hypergraph of @xmath2 , denoted as @xmath51 , is obtained by constructing the set of vertices as @xmath66 and the set of hyperedges as @xmath67 such that @xmath68 .",
    "figure [ duality : example]a - b shows two examples of a hypergraph @xmath2 and its dual hypergraph representation @xmath69 .",
    "observe that the hyperedges of the original hypergraph @xmath2 are the vertices of the dual hypergraph @xmath69 , whereas the hyperedges of @xmath69 are constructed using the hyperedges of @xmath2 that are incident with the respective vertices .",
    "we are interested in binary classification on hypergraphs .",
    "the following paragraphs briefly define three distinct classification problems , formulated here so as to naturally lead to the methodology proposed in the next section",
    ".    * vertex classification . * given a set of rooted hypergraphs @xmath70 , where each @xmath71 corresponds to the same , possibly disconnected , hypergraph @xmath32 rooted at a different vertex of interest @xmath72 . here",
    ", one aims to learn some classifier function @xmath73 using a labeled training set @xmath74 , where @xmath75 , as a means of assigning class labels to each unlabeled vertex in @xmath76 . a number of classical problems in computational biology map straightforwardly to vertex classification ; e.g. , protein function prediction  @xcite , disease gene prioritization  @xcite , and so on .    * hyperedge classification .",
    "* given a possibly disconnected hypergraph @xmath32 , the objective is to learn a discriminant function @xmath77 from a labeled training set @xmath78 , where @xmath79 , and infer class annotations for every unlabeled hyperedge in @xmath25 .",
    "an example of edge classification is the prediction of types of macromolecular interactions such as positive vs. negative regulation .",
    "* link prediction .",
    "* let @xmath32 be a hypergraph with some missing hyperedges and let @xmath80 be all non - existent hyperedges in @xmath2 ; i.e. , @xmath81 , where @xmath82 represents all possible hyperedges over @xmath4 . the goal is to learn a target function @xmath83 and infer the existence of all missing hyperedges",
    ". examples of link prediction include predicting protein - protein interactions , predicting drug - target interactions , and so on .",
    "a number of prediction problems in computational biology can be considered within a semi - supervised framework , where a set of labeled and a set of unlabeled examples are used to construct classifiers that discriminate between positive and negative examples .",
    "a special category of semi - supervised learning occurs when labeled data contain only positive examples ; i.e. , where the negative examples are either unavailable or ignored ; say , if the set of available negatives is small or biased .",
    "such problems are generally referred to as learning from positive and unlabeled data or positive - unlabeled learning  @xcite .",
    "many prediction problems in molecular biology belong to the open world category ; i.e. , due to various experimental reasons , the absence of evidence of class labels is not the evidence of absence .",
    "such problems lend themselves naturally to the positive - unlabeled setting .",
    "research in machine learning has recently established tight connections between traditional supervised learning and ( non - traditional ) positive - unlabeled learning . under mild conditions , a classifier that optimizes the ranking performance ; e.g. , area under the roc curve  @xcite , in the non - traditional setting has been shown to also optimize the performance in the traditional setting  @xcite .",
    "similar relationships have been established in approximating posterior distributions  @xcite as well as in recovering the true performance accuracy in the traditional setting for a classifier evaluated in a non - traditional setting  @xcite .",
    "the latter two problems require estimation of class priors ; i.e. , the fractions of positive and negative examples in ( representative ) unlabeled data  @xcite .",
    "we consider binary classification problems on graphs and hypergraphs and propose to unify all such learning problems through semi - supervised vertex classification on hypergraphs .",
    "first , vertex classification falls trivially into this framework .",
    "second , the problems of edge classification in graphs and hyperedge classification in hypergraphs are equivalent to the problem of vertex classification on dual hypergraphs . as discussed in section  [ duality ] , both graphs and hypergraphs give rise to dual hypergraph representations and , thus , ( hyper)edge classification on a graph @xmath2 straightforwardly translates into vertex classification on its dual hypergraph @xmath58 .",
    "we note here that vertices with the degree of one in @xmath2 give rise to self - loops in the dual hypergraph @xmath58 . to account for them ,",
    "we add one dummy node per self - loop with the same vertex label as the original vertex and connect them with an appropriately labeled edge .",
    "third , one can similarly see link prediction as vertex classification on dual hypergraphs , where the set of existing links is treated as positive data , the set of known non - existing links is treated as negative data , and the remaining set of missing links is treated as unlabeled data .",
    "this formulation further requires an extension of dual hypergraph representations as follows .",
    "consider a particular negative or missing link @xmath84 in the original graph @xmath2 with its dual hypergraph @xmath58 ( fig .",
    "[ duality : example]c ) . to make a prediction on this edge @xmath61",
    ", we must first introduce a new vertex @xmath61 in the dual hypergraph as well as modify those hyperedges in @xmath58 that correspond to the vertices @xmath85 in @xmath2 ( fig .",
    "[ duality : example]c ) .",
    "we denote this extended hypergraph as @xmath86 .",
    "it now easily follows that the sets of negative and unlabeled examples can be created by considering a collection of extended graphs @xmath86 , one at a time , for all non - existing vertices @xmath84 or a subset thereof .    since most graph data in biological networks lack large sets of representative negative examples , we approach vertex classification , ( hyper)edge classification and link prediction as instances of vertex classification on ( extended , dual ) hypergraphs in a positive - unlabeled setting .",
    "we believe this is a novel and useful attempt at generalizing three distinct graph classification problems in a common kernel - based semi - supervised setting .",
    "the following sections introduce hypergraphlet kernels that are the core of our classification approach .     to @xmath87 vertices , with the root node of each hypergraphlet inscribed in a square .",
    "all hypergraphlets are presented in a compressed notation ; e.g. , the two non - isomorphic hypergraphlets @xmath88 and @xmath89 are shown in one drawing . ]",
    "* hypergraphlets . * inspired by graphlets  @xcite , we define _ hypergraphlets _ as small , simple , connected , rooted hypergraphs .",
    "a hypergraphlet with @xmath15 vertices is called an @xmath15-hypergraphlet ; and the @xmath90-th hypergraphlet of order @xmath15 is denoted as @xmath91 .",
    "we consider hypergraphlets up to isomorphism and will refer to these isomorphisms as root- and label - preserving isomorphisms when hypergraphs are rooted and labeled .",
    "figure  [ hypergraphlets ] displays all non - isomorphic unlabeled @xmath15-hypergraphlets with up to three vertices .",
    "there is only one hypergraphlet of order @xmath92 ( @xmath93 ; fig .",
    "[ hypergraphlets]a ) and one hypergraphlet of order @xmath94 ( @xmath95 ; fig .",
    "[ hypergraphlets]b ) . on the other hand , there are nine hypergraphlets of order @xmath87 ( @xmath96 ; fig .  [ hypergraphlets]c ) and @xmath97 hypergraphlets of order @xmath98 ( not shown ) .",
    "we refer to all these hypergraphlets as _ base hypergraphlets _ since they correspond to the case when @xmath99 .",
    "consider now a vertex- and hyperedge - labeled ( or _ fully labeled _ for short ) hypergraphlet with @xmath15 vertices and @xmath100 hyperedges , where @xmath8 and @xmath11 denote the vertex - label and hyperedge - label alphabets , respectively .",
    "if @xmath101 and/or @xmath102 , then automorphic structures with respect to the same base hypergraphlet may exist ; hence , the number of fully labeled hypergraphlets per base structure is generally smaller than @xmath103 .",
    "for example , if one only considers vertex - labeled @xmath87-hypergraphlets , then there are @xmath104 vertex - labeled hypergraphlets corresponding to the asymmetric base hypergraphlets @xmath88 , @xmath105 and @xmath106 but only @xmath107 corresponding to the base hypergraphlets @xmath108 , @xmath89 , @xmath109 , @xmath110 , @xmath111 , @xmath112 ; see table  [ hypergraphs : polya ] .",
    "this is a result of symmetries in the base hypergraphlets that give rise to automorphisms among vertex - labeled structures .",
    "similarly , if @xmath102 , then new symmetries may exist with respect to the base hypergraphlets that give rise to different automorphisms among hyperedge - labeled structures . in section  [ growth : pattern ] , we provide a more detailed discussion on these symmetries .",
    "the relevance of these symmetries and enumeration steps relates to the dimensionality of the hilbert space in which the prediction is carried out .",
    "motivated by the case for graphs  @xcite , we introduce _",
    "hypergraphlet kernels_. let @xmath113 , be a fully labeled hypergraph where @xmath6 is a vertex - labeling function @xmath7 , @xmath9 is a hyperedge - labeling function @xmath10 , and @xmath114 .",
    "the vertex- and hyperedge - labeled @xmath15-hypergraphlet count vector for any vertex @xmath13 is defined as    @xmath115    where @xmath116 is the count of the @xmath90-th fully labeled @xmath15-hypergraphlet and @xmath117 is the total number of vertex- and hyperedge - labeled @xmath15-hypergraphlets . a kernel function between the @xmath15-hypergraphlet counts for vertices @xmath118 and @xmath16",
    "is defined as an inner product between @xmath119 and @xmath120 ; i.e. ,    @xmath121    the hypergraphlet kernel function incorporating all hypergraphlets up to the size @xmath122 is given by    @xmath123    where @xmath122 is a small integer . in this work",
    "we use @xmath124 due to the exponential growth of the number of base hypergraphlets .      consider a fully labeled hypergraph @xmath113 . given a vertex @xmath13",
    ", we define the vector of counts for a @xmath125-generalized edit - distance hypergraphlet representation as    @xmath126    where    @xmath127    here , @xmath128 is the set of all @xmath15-hypergraphlets such that for each @xmath129 there exists an edit path of total cost at most @xmath125 that transforms @xmath130 into @xmath131 and @xmath132 is a user - defined constant . in words ,",
    "the counts for each hypergraphlet @xmath91 are updated by also counting all other hypergraphlets @xmath133 that are in the @xmath125 vicinity of @xmath91 .",
    "the function @xmath134 can be used to adjust the weights of these pseudocounts .",
    "we set @xmath135 for all @xmath90 and @xmath136 and the cost of all edit operations was also set to @xmath92 .",
    "this restricts @xmath125 to nonnegative integers .",
    "the length-@xmath125 edit - distance @xmath15-hypergraphlet kernel @xmath137 between vertices @xmath118 and @xmath16 can be computed as an inner product between the respective count vectors @xmath138 and @xmath139 ; i.e. , @xmath140 finally , the length-@xmath125 edit - distance hypergraphlet kernel function is given as @xmath141 the edit operations considered here incorporate substitutions of vertex labels , substitutions of hyperedge labels , and insertions / deletions ( indels ) of hyperedges .",
    "given these edit operations , we also define three subclasses of edit - distance hypergraphlet kernels referred to as vertex label - substitution @xmath142 , hyperedge label - substitution @xmath143 and hyperedge - indel kernels @xmath144 .",
    "although the functions from equations ( [ eq : kernel ] ) and ( [ eq : kernel2 ] ) are defined as inner products , other formulations such as radial basis functions can be similarly considered  @xcite .",
    "we also note that the combined kernels from equations ( [ eq : combined : kernel ] ) and ( [ eq : combined : kernel2 ] ) can be generalized beyond linear combinations  @xcite . for the simplicity of this work , however , we only explore equal - weight linear combinations and normalize the functions from equations ( [ eq : kernel ] ) and ( [ eq : kernel2 ] ) using a cosine transformation .",
    "the implementation and the analysis of hypergraphlet kernels is an extension of the available solutions for string kernels  @xcite . let @xmath145 be a neighborhood hypergraph , as defined in section  [ sec : graphs ] and suppose it is significantly smaller than the original hypergraph @xmath2 .",
    "the hypergraphlet counting algorithm takes @xmath146 steps , where @xmath147 is the maximum degree of a vertex .",
    "similarly , the generation of the minimum cost edit path takes @xmath148 per single hypergraphlet edit operation .",
    "therefore , for each vertex @xmath16 an order of @xmath149 operations are necessary , where the @xmath150 term enumerates possible @xmath15-hypergraphlets in @xmath151 .",
    "note that the possible number of edges in a hypergraph @xmath152 can be significantly larger than the possible number of edges in a standard graph .",
    "hence , in a practical setting , the edit distance hypergraphlet kernels could greatly benefit from effective sampling techniques or exploitation of special types of hypergraphlets .",
    "the proposed implementation for computing hypergraphlet kernel functions is computed in time linear in the number of non - zero elements .",
    "in this section we summarize classification problems , data sets , and evaluation methodology .",
    "the hypergraphlet kernels were evaluated on the problems of edge classification and link prediction , both of which require generation of dual hypergraphs followed by the subsequent vertex classification approach .      * protein - protein interaction data . *",
    "the protein - protein interaction ( ppi ) data was used for both edge classification and link prediction . in the context of edge classification , we are given a ppi network where each interaction is annotated as either direct physical interaction or a co - membership in a complex . the objective is to predict the type of each interacting protein pair as physical vs. complex ( pc ) . for this task , we used the budding yeast _ s. cerevisiae _ ppi network assembled by ben - hur and noble  @xcite .    another important task in ppi networks",
    "is discovering whether two proteins interact . despite the existence of high - throughput experimental methods for determining interactions between proteins , the ppi network data of all organisms",
    "is incomplete  @xcite .",
    "furthermore , high - throughput ppi data contains a potentially large fraction of false positive interactions  @xcite .",
    "therefore , there is a continued need for computational methods to help guide experiments for identifying novel interactions . under this scenario",
    ", there are two classes of link prediction algorithms : ( 1 ) prediction of direct physical interactions  @xcite and ( 2 ) prediction of co - membership in a protein complex  @xcite . in this paper , we focused on the former task and assembled nine species - specific data sets comprised solely of direct protein - protein interaction data derived from public databases ( bind , biogrid , dip , hprd , and intact ) as of january 2017 .",
    "we considered only one protein isoform per gene and used experimental evidence types described by lewis _",
    "et al . _",
    "specifically , we constructed link prediction tasks for : ( 1 ) bacterium _ e. coli _ ( ec ) , ( 2 ) budding yeast _ s. cerevisiae _ ( sc ) , ( 3 ) nematode worm _ c. elegans _",
    "( ce ) , ( 4 ) thale cress _ a. thaliana _ ( at ) , ( 5 ) fruit fly _ d. melanogaster _ ( dm ) , ( 6 ) human _ h. sapiens _ ( hs ) , ( 7 ) fission yeast _ s. pombe _ ( sp ) , ( 8) brown rat _ r. norvegicus _ ( rn ) , and ( 9 ) house mouse _ m. musculus _ ( mm ) .    * drug - target interaction data .",
    "* identification of interactions between drugs and target proteins is an area of growing interest in drug design and therapy  @xcite . in a drug - target interaction ( dti ) network , nodes correspond to either drugs or proteins and edges indicate that a protein is a known target of the drug .",
    "here we used dti data for both edge classification and link prediction . in the context of edge labeling , we are given a dti network where each interaction is annotated as direct ( binding ) or indirect , as well as assigned modes of action as activating or inhibiting .",
    "the objective is to predict the type of each interaction between proteins and drug compounds .",
    "for this task , we derived two data sets : ( 1 ) indirect vs. direct ( i d ) binding derived from matador , and ( 2 ) activation vs. inhibition ( ai ) assembled from stitch . under link prediction setting , the learning task is to predict drug - target protein interactions . in particular",
    ", we focus on four drug - target classes : ( 1 ) enzymes ( ez ) , ( 2 ) ion channels ( ic ) , ( 3 ) g protein - coupled receptors ( gr ) , and ( 4 ) nuclear receptors ( nr ) ; originally assembled by yamanishi _ et al . _",
    "table  [ datasets ] summarizes all data sets used in this work .",
    "llllll * type * & * dataset * & & & & +   + & & @xmath153 & @xmath154 & @xmath155 & @xmath156 + ppi & pc & @xmath157 & @xmath158 & @xmath159 & @xmath160 + & & @xmath161 drugs & & & + & & @xmath162 targets & & & + & & @xmath163 drugs & & & + & & @xmath164 targets & & & +   + & & @xmath153 & @xmath154 & @xmath165 & @xmath166 + & ec & @xmath167 & @xmath168 & @xmath169 & @xmath170 + & sc & @xmath171 & @xmath172 & @xmath173 & @xmath174 + & ce & @xmath175 & @xmath176 & @xmath177 & @xmath178 + & at & @xmath179 & @xmath180 & @xmath181 & @xmath182 + & dm & @xmath183 & @xmath184 & @xmath185 & @xmath186 + & hs & @xmath187 & @xmath188 & @xmath189 & @xmath190 + & sp & @xmath191 & @xmath192 & @xmath193 & @xmath194 + & rn & @xmath195 & @xmath196 & @xmath197 & @xmath198 + & mm & @xmath199 & @xmath200 & @xmath201 & @xmath202 + & & @xmath203 drugs & & & + & & @xmath204 targets & & & + & & @xmath205 drugs & & & + & & @xmath206 targets & & & + & & @xmath207 drugs & & & + & & @xmath208 targets & & & + & & @xmath209 drugs & & & + & & @xmath210 targets & & & +      to incorporate domain knowledge into the ppi networks , we exploited the fact that each vertex ( protein ) in the graph is associated with its amino acid sequence .",
    "two methods were used to develop vertex alphabet .",
    "first , we mapped each protein into a vector of @xmath18-mer ( @xmath211 ) counts and then applied hierarchical clustering on these count vectors .",
    "a result of the clustering step assigned one of the @xmath212 vertex labels for each node .",
    "second , we used protein sequences to predict their molecular and biological function ( gene ontology terms ) using the fann - go algorithm  @xcite .",
    "hierarchical clustering was subsequently used on the predicted term scores to group proteins into @xmath213 broad functional categories . in the case of dti data ,",
    "target proteins were annotated in a similar manner .",
    "for labeling drug compounds , we used the chemical structure similarity matrix computed from simcomp  @xcite , transformed it into a dissimilarity matrix and then applied hierarchical clustering to group compounds into @xmath214 structural categories .      for each data set , we evaluated all hypergraphlet kernels by comparing them to two in - house implementations of random walk kernels on hypergraphs .",
    "the random walk kernels were implemented as follows : given a hypergraph @xmath2 and two vertices @xmath118 and @xmath16 , simultaneous random walks @xmath215 and @xmath216 were generated from @xmath118 and @xmath16 using random restarts .",
    "however , in contrast to random walks on standard graphs , a random walk in a hypergraph is a two - step process such that at each step one must simultaneously ( 1 ) pick hyperedges @xmath217 and @xmath218 incident with current vertices @xmath118 and @xmath16 respectively , and ( 2 ) pick destination vertices @xmath219 and @xmath220 .",
    "this process is repeated until a pre - defined number of steps is reached . in the conventional random walk implementation on hypergraphs ,",
    "a walk was scored as 1 if the entire sequences of vertex and hyperedge labels between @xmath215 and @xmath216 matched ; otherwise , a walk was scored as 0 .",
    "after 10,000 steps , the scores over all walks were summed to produce a kernel value between @xmath118 and @xmath16 . in order to construct a random walk similar to the hypergraphlet edit distance approach , a cumulative random walk kernel was also implemented . here",
    ", any match between the labels of vertices @xmath221 and @xmath222 , or hyperedges @xmath223 and @xmath224 in the @xmath90-th step of each walk was scored as 1 , while a mismatch was scored as 0 .",
    "thus , a walk of length @xmath225 could contribute between @xmath226 and @xmath225 to the total count .",
    "in each of the random walks , the probability of restart was selected from a set @xmath227 and the result with the highest accuracy is reported . on the ppi data sets we also evaluated the performance of pairwise spectrum kernels  @xcite .",
    "the @xmath18-mer size was varied from @xmath228 and the result with the highest accuracy is reported . finally , in the case of the edit distance kernels , we computed the set of normalized hypergraphlet kernel matrices @xmath229 using @xmath230 , @xmath231 , @xmath232 , and @xmath233 for all pairs @xmath234 obtained from a grid search over @xmath235 , @xmath236 and @xmath237 . the result with the highest accuracy is reported .",
    "the performance of each method was evaluated through a 10-fold cross - validation . in each iteration ,",
    "10% of nodes in the network are selected for the test set , whereas the remaining 90% are used for training .",
    "support vector machine ( svm ) classifiers were used to construct all predictors and perform comparative evaluation .",
    "we used svm@xmath238 with the default value for the capacity parameter  @xcite .",
    "once each predictor was trained , we used platt s correction to adjust the outputs of the predictor to the 0 - 1 range  @xcite .",
    "finally , we estimated the area under the roc curve ( auc ) , which plots the true positive rate ( sensitivity , @xmath239 ) as a function of false positive rate ( 1 - specificity , @xmath240 ) .",
    "llll * dataset / method * & * pc * & * i d * & * ai * +   + hypergraphlet kernel ( @xmath241 ) & @xmath242 & @xmath243 & @xmath244 + hypergraphlet kernel ( @xmath245 ) & @xmath246 & @xmath247 & @xmath248 +   + random walk & @xmath249 & @xmath250 & @xmath251 + cumulative random walk & @xmath252 & * 0.834 * & @xmath253 + hypergraphlet kernel ( @xmath241 ) & @xmath254 & @xmath255 & @xmath256 + hypergraphlet kernel ( @xmath245 ) & * 0.781 * & @xmath257 & * 0.845 * +              we first evaluated the performance of hypergraphlet kernels in the task of predicting the types of interactions between pairs of proteins in a ppi network , as well as interaction types and modes of action between proteins and chemicals in dti data .",
    "as described in section [ sec : problem ] we first converted the input hypergraph to its dual hypergraph and then used the dual hypergraph for vertex classification .",
    "table  [ edge : classification : results ] lists the auc estimates for each method and data set .",
    "figure  [ auc : curves ] shows roc curves for one representative data set from each classification task and network type .",
    "observe that the edit distance kernel ( @xmath245 ) outperformed the traditional hypergraphlet kernel ( @xmath241 ) on all data sets .",
    "edit distance kernels achieved the highest aucs on two of the three data sets over random walk kernels .",
    "therefore , these results provide evidence of the feasibility of this alternative approach to edge classification via exploiting hypergraph duality .",
    "llllllllll * method / dataset * & * ec * & * sc * & * ce * & * at * & * dm * & * hs * & * sp * & * rn * & * mm * +   + hypergraphlet kernel ( @xmath241 ) & @xmath258 & @xmath259 & * 0.900 * & @xmath260 & @xmath261 & @xmath262 & @xmath263 & @xmath251 & @xmath264 + hypergraphlet kernel ( @xmath245 ) & @xmath265 & @xmath266 & @xmath267 & @xmath268 & @xmath269 & @xmath270 & @xmath271 & @xmath272 & @xmath273 +   + random walk & @xmath274 & @xmath275 & @xmath276 & @xmath277 & @xmath278 & @xmath279 & @xmath258 & @xmath280 & @xmath281 + cumulative random walk & @xmath282 & @xmath283 & @xmath284 & @xmath285 & @xmath250 & @xmath286 & @xmath287 & @xmath288 & @xmath289 + pairwise spectrum kernel ( @xmath290 ) & @xmath291 & @xmath292 & @xmath293 & * 0.911 * & @xmath294 & @xmath266 & @xmath295 & @xmath296 & @xmath297 + hypergraphlet kernel ( @xmath298 ) & @xmath299 & @xmath300 & @xmath301 & @xmath302 & @xmath303 & @xmath264 & @xmath304 & @xmath305 & @xmath273 + hypergraphlet kernel ( @xmath306 ) & * 0.742 * & @xmath266 & @xmath307 & @xmath308 & @xmath309 & @xmath310 & @xmath311 & @xmath305 & @xmath312 + hypergraphlet kernel ( @xmath313 ) & @xmath314 & @xmath315 & @xmath316 & @xmath302 & @xmath317 & @xmath318 & @xmath305 & @xmath319 & @xmath320 + hypergraphlet kernel ( @xmath321 ) & @xmath322 & @xmath323 & @xmath307 & @xmath324 & @xmath309 & @xmath309 & * 0.830 * & @xmath325 & @xmath270 + hypergraphlet + pairwise spectrum & @xmath322 & * 0.883 * & @xmath326 & @xmath327 & * 0.858 * & * 0.878 * & @xmath328 & * 0.818 * & * 0.847 * +    llllll * method / dataset * & * ez * & * ic * & * gr * & * nr * +   + hypergraphlet kernel ( @xmath241 ) & @xmath329 & @xmath318 & @xmath330 & @xmath267 + hypergraphlet kernel ( @xmath245 ) & @xmath329 & @xmath270 & @xmath331 & @xmath332 +   + random walk & @xmath333 & @xmath334 & @xmath335 & @xmath320 + cumulative random walk & @xmath336 & @xmath337 & @xmath338 & @xmath305 + hypergraphlet kernel ( @xmath298 ) & @xmath339 & @xmath270 & @xmath340 & @xmath341 + hypergraphlet kernel ( @xmath306 ) & @xmath342 & @xmath330 & @xmath340 & @xmath343 + hypergraphlet kernel ( @xmath313 ) & @xmath344 & @xmath330 & @xmath309 & @xmath345 + hypergraphlet kernel ( @xmath321 ) & * 0.922 * & * 0.863 * & * 0.858 * & * 0.941 * +      the performance of hypergraphlet kernels was further evaluated on the problem of link prediction on multiple ppi and dti network data sets .",
    "tables  [ ppi : lp : results ] and  [ dti : lp : results ] show the performance accuracies for each hypergraph - based method across all link prediction data sets .",
    "these results demonstrate good performance of our methods , with edit - distance kernels generally having the best performance .",
    "the primary objective of our study was to present a new approach whose value will increase as biological data becomes more frequently modeled by hypergraphs .",
    "at this time , such data sets are not readily available .",
    "we used the alphamax algorithm  @xcite for estimating class priors in positive - unlabeled learning to estimate the number of missing links and misannotated ( false positives ) interactions on each ppi network .",
    "for example , if we assume a tissue and cellular component agnostic model ( i.e. , any two proteins can interact ) , we obtained that the number of missing interactions on the largest component of the human ppi network ( see table  [ datasets ] ) is about 5% ( i.e. , approximately 2.5 million interactions ) , while the number of misannotated interactions is close to 11% which translates to about 4,985 interactions . in the case of yeast",
    ", we computed that less than 1% of the potential protein interactions are missing which is close to 95,000 .",
    "the number of misannotated interactions is close to 13% , which is about 3,400 misannotated protein pairs .",
    "some of these numbers fall within previous studies that suggest that the size of the yeast interactome is between 13,500  @xcite and 137,000  @xcite ; however , the size of the human interactome is estimated to be within 130,000 @xcite and 650,000  @xcite interactions . a recent paper by lewis _",
    "et al . _",
    "@xcite presents a scenario where yeast and human interactome size could reach 400,000 and over two million interactions , respectively . in any case",
    ", we note that these estimates were made as a proof of concept for the proposed methodology under the assumption of representative positive data .",
    "they however can serve as further validation of the usefulness of our problem formulation and underlying methodology .",
    "additional tests and experiments , potentially involving exhaustive classifier and parameter optimization , will be necessary for more accurate and reliable estimates , especially for understanding the influence of potential biases within the ppi network data .",
    "the literature on the similarity - based measures for learning on hypergraphs is relatively scarce .",
    "most studies revolve around the use of random walks for clustering that were first used in the field of circuit design  @xcite .",
    "historically , typical hypergraph - based learning approaches can be divided into ( 1 ) tensor - based approaches , which extend traditional matrix ( spectral ) methods on graphs to higher - order relations for hypergraph clustering  @xcite , and ( 2 ) approximation - based approaches that convert hypergraphs into standard weighted graphs and then exploit conventional graph clustering and ( semi- ) supervised learning  @xcite .",
    "the methods from the first category provide a direct and mathematically rigorous treatment of hypergraph learning , although most tensor problems are np - hard . as a consequence , this line of research remains largely unexplored despite a renewed interest in tensor decomposition approaches  @xcite .",
    "regarding the second category , there are two commonly used transformations for graph - based hypergraph approximation : ( 1 ) the star expansion and ( 2 ) the clique expansion .",
    "these methods are reviewed and compared by agarwal _",
    "et al . _",
    "@xcite .    under a supervised learning framework , wachman and khardon",
    "@xcite propose random walk - based hypergraph kernels on ordered hypergraphs , while sun _",
    "et al . _",
    "@xcite present a hypergraph spectral learning formulation for multi - label classification .",
    "more recently , bai _ et al . _",
    "@xcite introduced a hypergraph kernel that transforms a hypergraph into a directed line graph and computes a weisfeiler - lehman isomorphism test between directed graphs .",
    "a major drawback of most such approaches is that no graph representation fully captures the hypergraph structure .",
    "for instance , ihler _ et al .",
    "_  @xcite have shown that it is impossible to have an exact representation of a hypergraph via a graph while still retaining its cut properties .",
    "therefore , there is a need for a robust hypergraph - based methodology for learning directly on hypergraph data .",
    "this paper presents a learning framework for the problems of vertex classification , ( hyper)edge classification , and link prediction in graphs and hypergraphs .",
    "the key to our approach is the use of hypergraph duality in order to cast each classification problem as an instance of vertex classification .",
    "this work also presents a new family of kernel functions defined directly on hypergraphs . using the terminology of bleakey _",
    "et al . _",
    "@xcite , our method belongs to the category of `` local '' techniques .",
    "that is , it captures the structure of local neighborhoods , rooted at the vertex of interest , and should be distinguished from `` global '' models such as markov random fields or diffusion kernels  @xcite .",
    "the body of literature on graph learning is vast .",
    "we therefore selected to perform extensive comparisons against a limited set of methods that are most relevant to ours .",
    "the development of hypergraphlet kernels derives from the graph reconstruction conjecture , an idea of using small graphs to probe large graphs  @xcite .",
    "hypergraphlet kernels prioritize accuracy over run time and , it may be argued , do not follow some recent trends in machine learning that generally trade off accuracy for improved scalability and real - time performance .",
    "we therefore propose that hypergraphlet kernel approaches , in particular those based on edit distances , be predominantly used on sparse graphs of moderate size .",
    "fortunately , all graphs used in this work fall into that category . increased accuracy , in general , benefits experimental biologists who typically use prediction to prioritize targets for experimental validation .",
    "the proposed methodology was evaluated on multiple data sets for edge classification and link prediction in biological networks .",
    "the results show that hypergraphlet kernels are competitive with other approaches and readily deployable in practice . through limited tests",
    ", we also find that combining hypergraphlet kernels with pairwise spectrum kernels achieves better accuracy than either of the methods does individually .",
    "we thank matthew carey for his help in implementing hyperedge - indel kernels .",
    "this work was partially supported by the national science foundation ( nsf ) grant dbi-1458477 , national institutes of health ( nih ) grant r01 mh105524 , and the indiana university precision health initiative",
    ".    10    s.  agarwal , k.  branson , and s.  belongie . higher order learning with graphs . in _ proc .",
    "23rd international conference on machine learning _ , icml 06 , pp .",
    "1724 , 2006 .",
    "s.  agarwal , j.  lim , l.  zelnik - manor , p.  perona , d.  kriegman , and s.  belongie . beyond pairwise clustering . in _ proc .",
    "18th conference on computer vision and pattern recognition _ , cvpr 05 , pp . 838845 , 2005 .",
    "l.  bai , p.  ren , and e.  r. hancock . a hypergraph kernel from isomorphism tests . in _ proc .",
    "22nd international conference on pattern recognition _ , icpr 14 , pp . 38803885 , 2014 .",
    "a.  ben - hur and w.  s. noble .",
    "kernel methods for predicting protein - protein interactions . , 21(suppl 1):i38i46 , 2005 .",
    "c.  berge . .",
    "north - holland , 1973 .",
    "g.  blanchard , g.  lee , and c.  scott .",
    "semi - supervised novelty detection .",
    ", 11:29733009 , 2010 .",
    "k.  bleakley , g.  biau , and j - p .",
    "vert . supervised reconstruction of biological networks with local models .",
    ", 23(13):i57 , 2007 .",
    "j.  a. bondy and r.  l. hemminger .",
    "graph reconstruction - a survey .",
    ", 1(3):227268 , 1977 .    c.  borgs , j.  chayes , l.  lovsz , v.  t. ss , and k.  vesztergombi . counting graph homomorphisms . in _ topics",
    "discrete math _ , algorithms and combinatorics , pp .",
    "springer berlin heidelberg , 2006 .",
    "s.  r. bul and m.  pelillo",
    ". a game - theoretic approach to hypergraph clustering . in _ proc .",
    "22nd advances in neural information processing systems _ , nips 09 , pp . 15711579 , 2009 .",
    "f.  chung - graham . .",
    "cbms regional conference series in mathematics , 1997 .",
    "w.  t. clark and p.  radivojac .",
    "analysis of protein function and its prediction from amino acid sequence .",
    ", 79(7):20862096 , 2011 .",
    "j.  cong , l.  hagen , and a.  kahng .",
    "random walks for circuit clustering . in _ proc .",
    "4th international asic conference _ , asic 91 , pp .",
    "p142.1p142.4 , 1991 .",
    "f.  denis , r.  gilleron , and f.  letouzey .",
    "learning from positive and unlabeled examples .",
    ", 348(1):7083 , 2005 .",
    "c.  elkan and k.  noto . learning classifiers from only positive and unlabeled data . in _ proc .",
    "14th international conference on knowledge discovery and data mining _ , kdd 08 , pp . 213220 , 2008 .",
    "t.  fawcett .",
    "an introduction to roc analysis .",
    ", 27:861874 , 2006 .",
    "s.  fortunato .",
    "community detection in graphs .",
    ", 486(3 - 5):75174 , 2010 .",
    "s.  m. gomez , w.  s. noble , and a.  rzhetsky .",
    "learning to predict protein - protein interactions from protein sequences .",
    ", 19(15):18751881 , 2003 .",
    "g.  t. hart , a.  k. ramani , and e.  m. marcotte .",
    "how complete are current yeast and human protein - interaction networks ?",
    ", 7(11):120 , 2006 .",
    "m.  hattori , y.  okuno , s.  goto , and m.  kanehisa .",
    "development of a chemical structure comparison method for integrated analysis of chemical and genomic information in the metabolic pathways .",
    ", 125(39):1185311865 , 2003 .",
    "m.  hein , s.  setzer , l.  jost , and s.  s. rangapuram .",
    "the total variation on hypergraphs - learning on hypergraphs revisited . in _ proc .",
    "26th advances in neural information processing systems _ , nips 13 , pp .",
    "24272435 , 2013 .",
    "h.  huang , b.  m jedynak , and j.  s. bader . where have all the interactions gone ? estimating the coverage of two - hybrid protein interaction maps .",
    ", 3(11):120 , 2007 .",
    "e.  ihler , d.  wagner , and f.  wagner . modeling hypergraphs by graphs with the same mincut properties .",
    ", 45(4):171175 , 1993 .",
    "s.  jain , m.  white , and p.  radivojac .",
    "estimating the class prior and posterior from noisy positives and unlabeled data . in _ proc .",
    "30th advances in neural information processing systems _ , nips 16 , pp .",
    "26932701 , 2016 .",
    "s.  jain , m.  white , and p.  radivojac .",
    "recovering true classifier performance in positive - unlabeled learning . in _ proc .",
    "31st aaai conference on artificial intelligence _ , aaai 17 , 2017 .",
    "s.  jain , m.  white , m.  w. trosset , and p.  radivojac .",
    "nonparametric semi - supervised learning of class proportions .",
    ", 2016 .",
    "c.  jiang , f.  coenen , and m.  zito . a survey of frequent subgraph mining algorithms .",
    ", 28(01):75105 , 2013 .",
    "t.  joachims . .",
    "kluwer academic publishers , 2002 .",
    "s.  klamt , u - u .",
    "haus , and f.  theis .",
    "hypergraphs and cellular networks . , 5(5):16 , 2009 .",
    "d.  koller and n.  friedman . .",
    "mit press , 2009 .",
    "r.  i. kondor and j.  d. lafferty .",
    "diffusion kernels on graphs and other discrete structures . in _ proc .",
    "19th international conference on machine learning _",
    ", icml 02 , pp . 315322 , 2002 .",
    "m.  leordeanu and c.  sminchisescu .",
    "efficient hypergraph clustering . in _ proc .",
    "15th international conference on artificial intelligence and statistics _ , volume  22 of _ aistats 12 _ , pp . 676684 , 2012 .",
    "a.  c.  f. lewis , n.  s. jones , m.  a. porter , and c.  m. deane .",
    "what evidence is there for the homology of protein - protein interactions ?",
    ", 8:114 , 9 2012 .",
    "d.  liben - nowell and j.  kleinberg .",
    "the link - prediction problem for social networks .",
    ", 58(7):10191031 , 2007 .",
    "j.  lugo - martinez and p.  radivojac .",
    "generalized graphlet kernels for probabilistic inference in sparse graphs . , 2(2):254276 , 2014 .",
    "s.  martin , d.  roe , and j - l .",
    "faulon . predicting protein - protein interactions using signature products .",
    ", 21(2):218226 , 2005 .",
    "a.  k. menon , b.  van rooyen , c.  s. ong , and r.  c. williamson .",
    "learning from corrupted binary labels via class - probability estimation . in _ proc .",
    "32nd international conference on machine learning _ , icml 15 , pp . 125134 , 2015 .",
    "r.  milo , s.  shen - orr , s.  itzkovitz , n.  kashtan , d.  chklovskii , and u.  alon .",
    "network motifs : simple building blocks of complex networks .",
    ", 298:824827 , 2002 .    y.  moreau and l.  c. tranchevent .",
    "computational tools for prioritizing candidate genes : boosting disease gene discovery . , 13(8):523536 , 2012 .",
    "e.  nabieva , k.  jim , a.  agarwal , b.  chazelle , and m.  singh .",
    "whole - proteome prediction of protein function via graph - theoretic analysis of interaction maps .",
    ", 21(suppl 1):i302i310 , 2005 .    j.  platt .",
    "probabilistic outputs for support vector machines and comparisons to regularized likelihood methods . in _ advances in large margin classifiers _ , mit press , pp .",
    "6174 , 2000 .",
    "g.  plya .",
    "kombinatorische anzahlbestimmungen fr gruppen , graphen und chemische verbindungen .",
    ", 68:145254 , 1937 .",
    "n.  przulj .",
    "biological network comparison using graphlet degree distribution .",
    ", 23(2):e177e183 , 2007 .",
    "n.  przulj , d.  g. corneil , and i.  jurisica . modeling interactome : scale - free or geometric ? , 20(18):35083515 , 2004 .",
    "p.  purkait , t - j .",
    "chin , h.  ackermann , and d.  suter . clustering with hypergraphs : the case for large hyperedges . in _ proc .",
    "13th european conference on computer vision _ , eccv 14 , pp . 672687 , 2014 .",
    "j.  qiu and w.  s. noble .",
    "predicting co - complexed protein pairs from heterogeneous data .",
    ", 4(4):e1000054 , 2008 .",
    "a.  k. ramani and e.  m. marcotte . exploiting the co - evolution of interacting proteins to discover interaction specificity .",
    ", 327(1):273284 , 2003 .",
    "h.  g. ramaswamy , c.  scott , and a.  tewari .",
    "mixture proportion estimation via kernel embedding of distributions . , 2016 .",
    "k.  rieck and p.  laskov .",
    "linear - time computation of similarity measures for sequential data .",
    ", 9:2348 , 2008 .    r.  sharan , i.  ulitsky , and r.  shamir . network - based prediction of protein function .",
    ", 3:88 , 2007 .",
    "j.  shawe - taylor and n.  cristianini . .",
    "cambridge university press , cambridge cb2 8ru , uk , 4th edition , 2001 .",
    "n.  shervashidze , s.  v.  n. vishwanathan , t.  h. petri , k.  mehlhorn , and k.  m. borgwardt .",
    "efficient graphlet kernels for large graph comparison . in _ proc .",
    "12th international conference on artificial intelligence and statistics _ , aistats 09 , pp . 488495 , 2009 .",
    "m.  p.  h. stumpf , t.  thorne , e.  de  silva , r.  stewart , h.  j. an , m.  lappe , and c.  wiuf . estimating the size of the human interactome .",
    ", 105(19):69596964 , 2008 .",
    "l.  sun , s.  ji , and j.  ye .",
    "hypergraph spectral learning for multi - label classification . in _ proc .",
    "14th international conference on knowledge discovery and data mining _ , kdd 08 , pp . 668676 , 2008 .",
    "k.  tsuda and h.  saigo .",
    "graph classification . in _ managing and mining graph data",
    "_ , volume  40 of _ advances in database systems _ , pp . 337363 , 2010 .",
    "v.  vacic , l.  m. iakoucheva , s.  lonardi , and p.  radivojac .",
    "graphlet kernels for prediction of functional residues in protein structures . , 17(1):5572 , 2010 .",
    "k.  venkatesan et  al .",
    "an empirical framework for binary interactome mapping .",
    ", 6:8390 , 2009 .",
    "s.  v.  n. vishwanathan , n.  n. schraudolph , r.  i. kondor , and k.  m. borgwardt .",
    "graph kernels . , 11:12011242 , 2010 .    c.  von mering , r.  krause , r.  i. kondor , b.  snel , m.  cornell , s.  g. oliver , s.  fields , and p.  bork .",
    "comparative assessment of large - scale data sets of protein - protein interactions .",
    ", 417(6887):399403 , 2002 .",
    "g.  wachman and r.  khardon .",
    "learning from interpretations : a rooted kernel for ordered hypergraphs . in _ proc .",
    "24th international conference on machine learning _ , icml 07 , pp .",
    "943950 , 2007 .",
    "y.  wang and j.  zeng . predicting drug - target interactions using restricted boltzmann machines . , 29(13):i126 , 2013 .",
    "j.  xu and y.  li . discovering disease - genes by topological features in human protein - protein interaction network . , 22(22):28002805 , 2006 .",
    "y.  yamanishi , m.  araki , a.  gutteridge , w.  honda , and m.  kanehisa .",
    "prediction of drug - target interaction networks from the integration of chemical and genomic spaces .",
    ", 24(13):i232i240 , 2008 .    l.  v. zhang , s.  l. wong , o.  d. king , and f.  p. roth .",
    "predicting co - complexed protein pairs using genomic and proteomic data integration .",
    ", 5(1):38 , 2004 .",
    "d.  zhou , j.  huang , and b.  schlkopf .",
    "learning with hypergraphs : clustering , classification , and embedding .",
    "in _ proc .",
    "19th advances in neural information processing systems _ , nips 06 , pp . 16011608 , 2006 .",
    "x.  zhu and z.  ghahramani . learning from labeled and unlabeled data with label propagation . in _",
    "technical report cmu - cald-02 - 107 _ , carnegie mellon university , 2002 .",
    "here we characterize the feature space of fully labeled hypergraphlets by describing the dimensionality of count vectors @xmath346 .",
    "we are interested in the order of growth of @xmath117 as a function of @xmath15 , @xmath8 and @xmath11 .",
    "suppose that @xmath2 and @xmath38 are base hypergraphlets with @xmath15 vertices and @xmath100 hyperedges .",
    "we say that @xmath2 and @xmath38 belong to the same equivalence class if and only if the total number of ( non - isomorphic ) fully labeled hypergraphlets corresponding to the base cases @xmath2 and @xmath38 are equal for any @xmath8 and @xmath11 .",
    "the total counts of labeled hypergraphlets over all alphabet sizes induce a partition of base hypergraphlets into equivalence classes .",
    "we denote the set of all equivalence classes over the hypergraphlets of order @xmath15 as @xmath347 .",
    "for example , the set of vertex- and hyperedge - labeled @xmath87-hypergraphlets can be partitioned into either : two symmetry classes when @xmath348 : @xmath349 and @xmath350 , or seven symmetry classes when @xmath102 : @xmath351 , @xmath352 , @xmath353 , @xmath354 , @xmath355 , @xmath356 and @xmath357 .",
    "table  [ hypergraphs : polya ] summarizes equivalence classes induced by partitioning base hypergraphlets up to the order of @xmath98 along with the cardinality of each set .",
    "overall , observe that the cardinality of @xmath358 can be significantly larger than those reported for graphlets  @xcite because the possible number of hyperedges in a hypergraphlet is generally much larger than the possible number of edges in a graphlet .",
    "additionally , hyperedge - labels require base hypergraphlets @xmath2 and @xmath38 to have an equal number of hyperedges .      where @xmath360 is the number of ( non - isomorphic ) fully labeled hypergraphlets corresponding to any base hypergraphlet from the equivalence class @xmath361 .",
    "we use this decomposition to compute the total dimensionality of the count vectors by first finding the equivalence classes corresponding to the base hypergraphlets and then counting the number of labeled hypergraphlets for any one member of the group .",
    "llc + @xmath362 & @xmath363 & @xmath364 + @xmath365 & @xmath92 & @xmath366 + @xmath367 & @xmath92 & @xmath368 + @xmath369 & @xmath87 & @xmath104 + @xmath370 & @xmath371 & @xmath107 + @xmath372 & @xmath373 & @xmath374 + @xmath375 & @xmath376 & @xmath377 ) + @xmath378 & @xmath379 & @xmath380 ) +   + @xmath362 & @xmath363 & @xmath360 + @xmath365 & @xmath92 & @xmath366 + @xmath367 & @xmath92 & @xmath381 + @xmath369 & @xmath92 & @xmath382 + @xmath370 & @xmath94 & @xmath383 + @xmath384 & @xmath92 & @xmath385 + @xmath386 & @xmath94 & @xmath387 + @xmath388 & @xmath92 & @xmath389 + @xmath390 & @xmath92 & @xmath391 + @xmath392 & @xmath92 & @xmath393 +    in the case of undirected fully labeled hypergraphlets , @xmath360 can also be computed by applying the theory of enumeration developed by plya  @xcite . in order to get the derivation of the complete generating function for each equivalence class @xmath361",
    ", we first define the automorphism group @xmath394 of a given vertex- and hyperedge - labeled hypergraph @xmath32 .",
    "that is , in the case of fully - labeled hypergraphs , set @xmath394 is a collection of permutations ( automorphisms ) of @xmath4 and @xmath25 .",
    "therefore , the counting problem can be re - formulated as follows : let @xmath2 be a base hypergraphlet of @xmath15 vertices and @xmath100 hyperedges , and @xmath394 be the automorphism group of @xmath2 over @xmath4 and @xmath25 . then , each permutation @xmath395 can be written uniquely as the product of disjoint cycles such that for each integer @xmath396 ( @xmath397 ) , we define @xmath398 ( @xmath399 ) as the number of cycles of length @xmath18 ( @xmath400 ) in the disjoint cycle expansion of @xmath401 .",
    "interestingly , the generalized formula for the cycle index of @xmath394 , denoted as @xmath402 , is a polynomial in @xmath403 given by @xmath404    by applying plya s theorem in the context of enumerating vertex- and hyperedge - labeled hypergraphlets corresponding to any base hypergraphlet in @xmath405 , we get that @xmath360 is determined by substituting @xmath366 for each variable @xmath406 and @xmath407 for each variable @xmath408 in @xmath402 .",
    "hence , @xmath409    where @xmath394 is the automorphism group of a base hypergraphlet from @xmath361 .",
    "as an example , consider the equivalence class @xmath410 with @xmath411 and @xmath412 ( figure  [ hypergraphlets ] illustrates an unlabeled version of hypergraphlet @xmath112 ) .",
    "the automorphism group @xmath413 ; thus , @xmath414 .",
    "therefore , it follows that , @xmath415"
  ],
  "abstract_text": [
    "<S> biological and cellular systems are often modeled as graphs in which vertices represent objects of interest ( genes , proteins , drugs ) and edges represent relational ties among these objects ( binds - to , interacts - with , regulates ) . </S>",
    "<S> this approach has been highly successful owing to the theory , methodology and software that support analysis and learning on graphs . </S>",
    "<S> graphs , however , often suffer from information loss when modeling physical systems due to their inability to accurately represent multiobject relationships . </S>",
    "<S> hypergraphs , a generalization of graphs , provide a framework to mitigate information loss and unify disparate graph - based methodologies . in this paper , we present a hypergraph - based approach for modeling physical systems and formulate vertex classification , edge classification and link prediction problems on ( hyper)graphs as instances of vertex classification on ( extended , dual ) hypergraphs in a semi - supervised setting . </S>",
    "<S> we introduce a novel kernel method on vertex- and edge - labeled ( colored ) hypergraphs for analysis and learning . </S>",
    "<S> the method is based on exact and inexact ( via hypergraph edit distances ) enumeration of small simple hypergraphs , referred to as hypergraphlets , rooted at a vertex of interest . </S>",
    "<S> we extensively evaluate this method and show its potential use in a positive - unlabeled setting to estimate the number of missing and false positive links in protein - protein interaction networks . </S>"
  ]
}
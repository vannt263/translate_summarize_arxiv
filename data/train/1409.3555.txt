{
  "article_text": [
    "graphs are fundamental mathematical structures that find applications in virtually every discipline . given a particular graph , a natural object of study is the family of walks that it supports .",
    "in addition to their intrinsic mathematical interest @xcite , walks on graphs find applications in a wide range of fields , including biology @xcite , quantum physics @xcite , and statistical inference @xcite . in many applications , not only the number but also the structure of the walks on a graph is of interest : for example , self - avoiding walks and their variants play an important role in statistical mechanics and polymer science @xcite .",
    "a comprehensive understanding of the structure of walks on a graph , and how this depends on the connectivity structure of the graph itself , is thus an interesting topic of research with many possible applications .",
    "one recent example of such an application in the field of applied mathematics is the method of path - sums : a technique for evaluating matrix functions via resummations of walks on weighted directed graphs @xcite .",
    "the method of path - sums is based around two main ideas .",
    "firstly , by exploiting a mapping between matrix multiplication and walks on a weighted directed graph @xmath1 , the taylor series for a given matrix function such as the matrix exponential or matrix inverse is recast as a sum over all walks on @xmath1 . secondly , by identifying families of cycles ( that is , walks that start and finish on the same vertex , but do not revisit that vertex in between ) that repeatedly appear in the set of walks , certain infinite geometric series appearing in this sum are exactly resummed into closed form .",
    "the effect is to reduce the sum over all walks to a sum over a certain subset of ` irreducible ' walks , each of which is ` dressed ' so as to include contributions from the families of resummed cycles .",
    "this produces a new series for the original matrix function , which can be interpreted as the result of exactly resumming various infinite geometric series appearing within the taylor series for the function .",
    "the exact form of the irreducible walks and the way in which they are dressed are determined by the families of cycles that are resummed .",
    "the method of path - sums as presented in @xcite introduced two examples .",
    "the first involves resumming all self - loops ( i.e.  all edges that connect a vertex to itself ) . in this case",
    "the irreducible walks are those that do not contain any self - loops , and the dressing procedure amounts to adding all possible combinations of self - loops to a loopless walk .",
    "applying this result to the computation of the matrix exponential reproduces the dyson series , leading to the interesting conclusion that the dyson series can be interpreted as the taylor series with all terms corresponding to self - loops having been resummed .",
    "the second example involves resumming all possible cycles . in this case",
    "the remaining summation runs over simple paths on @xmath1 , where a simple path ( also known as a self - avoiding walk ) is a walk that is forbidden from visiting any vertex more than once .",
    "each simple path in this sum is dressed by all possible combinations of cycles off the vertices it visits .",
    "the corresponding expression for the matrix function takes the form of a finite sum of finite continued fractions , known as the path - sum expression for the function @xcite .    , which identifies the structure of the cycles that are exactly resummed within that dressing scheme .",
    "associated with each resummation scheme is a set of irreducible walks and a dressing scheme , which are defined such that a sum over the irreducible walks , each dressed appropriately dressed by resummable cycles , reproduces the sum over all walks on @xmath1 .",
    "obtaining explicit expressions for the irreducible walks and dressing scheme for an arbitrary dressing signature is the main goal of this article .",
    "the maximum dressing signature @xmath4 depends on the size and connectivity structure of the underlying digraph , and is discussed further in section [ sec : dressingsignatures ] . ]",
    "many other possible resummations exist besides these two examples .",
    "indeed , we can imagine a hierarchy of resummations , ordered by increasing complexity of the cycles that are exactly resummed ( see figure [ fig : resummationspectrum ] ) .",
    "each member of this hierarchy is indexed by a _",
    "dressing signature _ : a sequence @xmath2 of non - negative integers that describes the structure of the cycles that are exactly resummed within that scheme .",
    "the lowest non - trivial member of this hierarchy corresponds to the resummation of self - loops ( @xmath5 $ ] ) , while the highest member corresponds to the resummation of all possible cycles .",
    "moving up the hierarchy corresponds to progressively including longer and more complex cycles in the resummation : for example backtracks ( i.e.  cycles of the form @xmath6 , corresponding to @xmath7 $ ] ) , triangles ( @xmath8 $ ] ) , triangles with self - loops off their internal vertices ( @xmath9 $ ] ) , etc . associated with the resummation scheme indexed by a given dressing signature @xmath2",
    "is a family of @xmath2-irreducible walks ( i.e.  walks that do not contain any resummable cycles ) and a dressing scheme .",
    "these are defined such that a sum over the @xmath2-irreducible walks  each dressed by combinations of resummable cycles as prescribed by the dressing scheme  reproduces the sum over all walks without any over- or under - counting .",
    "when combined with the mapping between matrix functions and walks on graphs , this hierarchy of cycle resummations induces a family of series for a given matrix function .",
    "each series in this family has the form of a sum over irreducible walks on the underlying graph , and corresponds to the taylor series with certain infinite geometric series of terms having been exactly resummed .",
    "apart from the dyson series , which corresponds to the resummation of self - loops , the partially resummed series remain unknown .",
    "their form , convergence behaviour , and mathematical properties are therefore interesting open questions with possible applications to matrix computations .    in order to systematically study this hierarchy of resummations , a comprehensive understanding of the form of the irreducible walks and dressing scheme for a given dressing signature",
    "is required .",
    "motivated by this goal , we study in this article the structure of the set of walks on an arbitrary directed graph @xmath1 with respect to nesting , a product operation between walks that provides for unique factorisation @xcite .",
    "we present two main results .",
    "we show firstly that for any dressing signature @xmath2 , which may be freely chosen , the family of walk sets produced by taking each @xmath2-irreducible walk and dressing it by all combinations of resummable cycles form a partition of the set of all walks .",
    "this proves that the decomposition of the set of all walks into sets of dressed @xmath2-irreducible walks does not lead to any walk being double - counted or missed out .",
    "secondly , we present explicit expressions for the set of @xmath2-irreducible walks and the dressing scheme for an arbitrary dressing signature @xmath2 , thus allowing the sum over all walks on @xmath1 to be reformulated as a sum over dressed @xmath2-irreducible walks .",
    "the article is structured as follows . in section",
    "[ sec : s2:requiredconcepts ] we summarize the required background material .",
    "in addition to standard concepts from graph theory  in which case our treatment serves to establish our terminology and notation  this section includes a definition of the nesting product (  [ sec : nestingproduct ] ) and a discussion of a scheme for canonically representing walks on a graph via a structure we term a _ syntax tree _ (  [ sec : syntaxtree ] ) .    in section [ sec :",
    "s3:familyofpartitions ] we develop our main results with a bare minimum of technical details , with a view to providing an overview for readers who wish to avoid being swamped by minutiae on a first reading .",
    "we begin in  [ sec : dressingsignatures ] by formalising the concept of a dressing signature .",
    "this paves the way for the introduction of the two operators which are of central importance to our approach : the _ walk reduction operator _ @xmath10 , which projects any walk to its @xmath2-irreducible core walk by removing all resummable cycles from it , and the _ walk dressing operator _ @xmath11 , which maps a @xmath2-irreducible walk @xmath3 to the set of walks formed by adding all possible configurations of resummable cycles on @xmath1 to @xmath3 . in section [ sec:32:familyofpartitions ] we state the required properties of @xmath10 and @xmath11 , and show that the family of walk sets produced by applying @xmath11 to each of the @xmath2-irreducible walks forms a partition of the set of all walks . in section [ sec : equivrelation ]",
    "we discuss the equivalence relation associated with this partition .",
    "section [ sec : s4:walkreductionwalkdressing ] contains the main technical content of this article .",
    "this section has two main aims : firstly , to present explicit definitions for the operators @xmath10 and @xmath11 ( found in  [ sec : walkreductionoperators ] and  [ sec : walkdressingoperator ] respectively ) and secondly , to prove that these definitions satisfy the properties assumed of them in section [ sec : s3:familyofpartitions ] ( shown in ",
    "[ sec : walkreductionoperators ] and  [ subsec : rdeltainverses ] ) .",
    "a further key result is the explicit expression for the set of @xmath2-irreducible walks for an arbitrary dressing signature @xmath2 , which we provide in  [ subsec : structureofik ] .    in section [ sec : s5:dressedwalksums ] we present an application of the partitioning of the set of all walks into a collection of sets of dressed @xmath2-irreducible walks . in  [ sec:51:resummedcharseries ] we show how this result can be exploited to recast the sum over all walks as a sum over dressed @xmath2-irreducible walks for an arbitrary dressing signature @xmath2 . in  [ sec:52:resummedweightseries ] we extend this result to the sum of all walk weights on a weighted digraph , and discuss the applications of this result to matrix computations .",
    "we conclude in section [ sec : s6:conclusion ] .",
    "this section provides an overview of the material required to develop the main results of this article . some of the material included in this section is common knowledge in graph theory , in which case we follow standard references such as @xcite .      a directed graph or digraph @xmath1 is a pair of sets @xmath12 such that the elements of the edge set @xmath13 ( typically referred to as directed edges or arrows ) are ordered pairs of elements of the vertex set @xmath14 .",
    "a digraph is infinite if it has infinitely many edges , vertices , or both , or finite otherwise .",
    "an edge connecting a vertex to itself will be called a loop , and two or more edges that connect the same vertices in the same direction are called multiple edges . throughout this article",
    "we consider finite directed graphs that may contain loops , but not multiple edges .",
    "we denote the vertices of @xmath1 by greek letters @xmath15 , and an edge that leads from vertex @xmath16 to vertex @xmath17 by @xmath18 .",
    "we denote the digraph obtained by deleting from @xmath1 the vertices @xmath19 and all edges incident on these vertices by @xmath20 .",
    "+        a walk @xmath21 of length @xmath22 from @xmath23 to @xmath24 on @xmath1 is a sequence @xmath25 of @xmath26 contiguous edges . if it happens that @xmath27 then @xmath21 is a closed walk ; walks that are not closed are open .",
    "we represent @xmath21 either by its edge sequence @xmath28 or by its vertex string @xmath29 .",
    "the head and tail vertices of @xmath21 are @xmath30 and @xmath31 , respectively ; the remaining vertices @xmath32 are the _ internal vertices _ of @xmath21 .",
    "the set of all walks from @xmath23 to @xmath24 on @xmath1 will be denoted by @xmath33 , while the set of all walks on @xmath1 will be denoted by @xmath34 .",
    "+ in addition to walks of positive length , we define for every vertex @xmath23 of @xmath1 a trivial walk of length zero , which we denote by @xmath35 . then @xmath36 , so @xmath35 is a closed walk off the vertex @xmath23 , and is thus a member of @xmath37 .",
    "the set of all trivial walks on @xmath1 will be denoted by @xmath38 .",
    "+ finally , we define a zero walk @xmath39 , which has undefined length and satisfies @xmath40 .",
    "the zero walk is a member of neither @xmath0 nor @xmath38 .",
    "a _ simple path _ is a ( possibly trivial ) walk whose vertices are all distinct .",
    "the set of all simple paths from @xmath23 to @xmath24 on @xmath1 will be denoted by @xmath41 , and the set of all simple paths on @xmath1 by @xmath42 .",
    "when @xmath1 is finite , both of these sets are finite .",
    "note that @xmath43 is a set with a single member : the trivial walk @xmath35 .",
    "a _ cycle _ off a vertex @xmath23 is a non - trivial walk that starts and finishes on @xmath23 , but does not revisit @xmath23 in between .",
    "every cycle is a closed walk , but  since a closed walk off @xmath23 may revisit @xmath23 any number of times  not every closed walk is a cycle .",
    "the set of all cycles off @xmath23 on @xmath1 will be denoted by @xmath44 , and the set of all cycles on @xmath1 by @xmath45 .",
    "these sets are typically infinite .",
    "a cycle that visits each of its internal vertices only once will be termed a simple cycle .",
    "a simple cycle is a loop if it is of length 1 , a backtrack if it is of length 2 , or a triangle , square , etc .  if it is of length @xmath46 .",
    "( simple cycles are thus also known as self - avoiding polygons . )",
    "the set of all simple cycles off a given vertex @xmath23 on @xmath1 will be denoted by @xmath47 and the set of all simple cycles on @xmath1 by @xmath48 .",
    "further , the set of all simple cycles off @xmath23 with length @xmath49 will be denoted by @xmath50 .",
    "these sets are finite when @xmath1 is finite .",
    "since we take the convention that the trivial walk @xmath35 is not a cycle , neither @xmath51 nor @xmath52 contain any trivial walks .      in order to combine shorter walks into longer ones and decompose",
    "longer walks into shorter ones , it is useful to define a product operation between walks . a key guiding principle in constructing a product operation is that the decomposition of a given walk under the product should be unique . in this section",
    "we introduce nesting , a product operation between walks which provides for unique factorisation @xcite .",
    "[ defn : nestablecouples ] let @xmath53 and @xmath54 be walks on a digraph @xmath1 , with vertex sequences @xmath55 and @xmath56 respectively .",
    "then the pair @xmath57 is _ nestable _ if and only if both of the following conditions are true :    1 .",
    "@xmath54 is closed ( i.e.  @xmath58 ) , 2 .",
    "@xmath53 visits @xmath59 at least once , and @xmath60 , where @xmath61 is the index of the first appearance of @xmath59 in @xmath53 . in other words ,",
    "no vertex that @xmath53 visits before reaching @xmath59 for the first time is also visited by @xmath54 .",
    "note that we do not exclude the possibility that one or both of @xmath53 and @xmath54 may be trivial .",
    "let @xmath57 be a nestable pair of walks , with vertex sequences @xmath55 and @xmath62 .",
    "let @xmath63 be the index of the first appearance of @xmath59 in @xmath53 .",
    "it follows from condition ( ii ) of definition [ defn : nestablecouples ] that @xmath54 is a walk on @xmath64 .",
    "[ defn : nestingproduct ] let @xmath53 and @xmath54 be two walks on a digraph @xmath1 . if the couple @xmath65 is not nestable , we define the nesting product @xmath66 , where @xmath39 is the zero walk .",
    "otherwise , let @xmath53 and @xmath54 have vertex sequences @xmath55 and @xmath67 , and let @xmath68 be the index of the final appearance of @xmath59 in @xmath53 .",
    "then we define the nesting product to be @xmath69 the walk @xmath70 has length @xmath71 and is said to consist of @xmath54 nested into @xmath53 ( off vertex @xmath59 ) .",
    "the vertex sequence of @xmath72 is formed by replacing the final appearance of @xmath59 in @xmath53 by the entire vertex sequence of @xmath54 .",
    "is a walk from @xmath23 to @xmath24 , while @xmath54 is a closed walk off @xmath16 , one of the vertices visited by @xmath53 .",
    "then @xmath72 is the walk obtained by attaching @xmath54 to @xmath16 .",
    "( right ) a graphical representation of the kleene star of the set @xmath73 .",
    "the set @xmath74 contains all walks that can be formed by concatenating zero or more copies of @xmath75 and @xmath76 together .",
    "the bare vertex represents the trivial walk @xmath35 .",
    "note that the two walks in the second row of @xmath74 differ in the order in which they traverse the loop and the backtrack : one represents the walk @xmath77 , the other @xmath78.,title=\"fig : \" ]   is a walk from @xmath23 to @xmath24 , while @xmath54 is a closed walk off @xmath16 , one of the vertices visited by @xmath53 .",
    "then @xmath72 is the walk obtained by attaching @xmath54 to @xmath16 .",
    "( right ) a graphical representation of the kleene star of the set @xmath73 .",
    "the set @xmath74 contains all walks that can be formed by concatenating zero or more copies of @xmath75 and @xmath76 together .",
    "the bare vertex represents the trivial walk @xmath35 .",
    "note that the two walks in the second row of @xmath74 differ in the order in which they traverse the loop and the backtrack : one represents the walk @xmath77 , the other @xmath78.,title=\"fig : \" ]    an example of the nesting operation is given in figure  [ fig : nestingandkleenestar ] .",
    "+ in general , the nesting operation is neither commutative nor associative : for example , @xmath79 while @xmath80 , and @xmath81 while @xmath82 . for convenience we declare the nesting operator to be ( notationally ) left - associative : thus @xmath83 means @xmath84 , and explicit parentheses are required to indicate @xmath85",
    ".    in the case that @xmath53 and @xmath54 are closed walks off the same vertex , then nesting is equivalent to concatenation : for example , @xmath86 .",
    "it is thus natural to define nesting powers of a closed walk @xmath21 as @xmath87 we further introduce the following shorthand notation for the nesting product of a sequence of closed walks off the same vertex : @xmath88 with the empty product defined to be the trivial walk off the relevant vertex .",
    "we extend the nesting product from individual walks to sets of walks as follows .",
    "[ defn : nestingsets ] given two sets of walks @xmath89 and @xmath90 , we define @xmath91 to be the direct product of @xmath89 and @xmath90 with respect to the nesting operation : @xmath92 it follows from this definition that if either @xmath89 or @xmath90 is empty , then @xmath93 is also empty .",
    "further , nesting is distributive over set union : that is , @xmath94 .",
    "we adopt the convention that  in the absence of parentheses in an expression  the nesting operator has a higher precedence than set union .",
    "the expression @xmath95 is thus to be interpreted as @xmath96 , and explicit parentheses are required to indicate @xmath97 .",
    "+ since nesting between closed walks off the same vertex is equivalent to concatenation , a set of closed walks may be nested with itself .",
    "this allows powers of a set of closed walks to be defined .",
    "[ defn : nestingpower ] for a ( possibly empty ) set @xmath98 of closed walks off a vertex @xmath23 , we define @xmath99 and @xmath100 for @xmath101 .",
    "the set @xmath102 contains all walks formed by nesting any @xmath26 elements of @xmath98 together .",
    "note that it follows from definition [ defn : nestingsets ] that if @xmath103 , then @xmath104 in analogy with a common convention for powers of the number 0 .",
    "[ defn : kleenestar ] for a set @xmath98 of closed walks off a vertex @xmath23 , the kleene star of @xmath98 , denoted by @xmath105 , is the set of walks formed by nesting any number of elements of @xmath98 together : @xmath106 it follows from the definition of nesting powers that if @xmath107 , then @xmath108 .",
    "an example of the kleene star operation on a set of cycles is given in figure  [ fig : nestingandkleenestar ] .",
    "the nesting product of definition [ defn : nestingproduct ] induces a notion of divisibility , and with it a corresponding notion of prime walks .",
    "let @xmath21 and @xmath109 be two walks .",
    "then we say that @xmath109 divides @xmath21 , and write @xmath110 , if and only if one of the following conditions holds :    1 .",
    "there exist @xmath111 walks @xmath112 and an integer @xmath113 such that @xmath114 ; or 2 .",
    "there exists a walk @xmath115 such that @xmath116 and @xmath117 .",
    "a walk @xmath109 that divides @xmath21 will be called a factor or divisor of @xmath21 .",
    "[ defn : primewalks ] a walk @xmath21 is said to be prime with respect to the nesting operation if and only if for all nestable couples @xmath118 such that @xmath119 , then @xmath120 or @xmath121 .",
    "as shown in @xcite , the prime walks on a digraph @xmath1 are precisely the simple paths and simple cycles of @xmath1 , of which there are a finite number if @xmath1 is finite .",
    "the nesting operation permits the factorisation or decomposition of a walk @xmath21 on a digraph into two or more shorter walks , which , when nested together in the correct order , reproduce the original walk @xmath21 .",
    "however , this factorisation is generally not unique : even very short walks typically admit multiple different factorisations .",
    "a simple example is the walk @xmath122 , which can be factorised either as @xmath123 , or @xmath124 , or @xmath125 .    of key interest among the factorisations of a given walk",
    "@xmath21 is the one that contains only prime walks .",
    "this factorisation , which we term the prime factorisation of @xmath21 , corresponds to the decomposition of @xmath21 into a simple path plus a collection of simple cycles .",
    "every walk admits a prime factorisation ; further , this prime factorisation is unique @xcite .    an intuitive way of visualising the prime factorisation of @xmath21 is as follows .",
    "consider traversing @xmath21 from start to finish , pausing at each vertex to check whether or not it has been visited previously . upon",
    "arriving at a vertex @xmath16 that has previously been visited , remove from @xmath21 the sequence of edges traversed since the most recent encounter with @xmath16 , and set this sequence aside .",
    "proceed in this fashion until the end of @xmath21 is reached .",
    "at this point , the surviving vertex string contains no repeated vertices , and thus defines a simple path .",
    "further , each of the extracted sections of @xmath21 contains no repeated internal vertices , and so defines a simple cycle off the relevant vertex @xmath16 . is the ` loop - erased random walk ' @xmath126 of that author . obtaining the prime factorisation of @xmath21 via",
    "the loop - erasure procedure involves the trivial extra step of keeping track of each of the closed walks that are erased , and applying the loop - erasure procedure recursively to each closed walk until a collection of simple cycles is obtained . ]",
    "the prime factorisation theorem for walks on a digraph can be summarised in the following theorem , which we state without proof . for further details",
    "we refer to @xcite .",
    "[ thm : primefactorisationtheorem ] the set of all walks from @xmath23 to @xmath24 on a digraph @xmath1 can be written as @xmath127 where @xmath128 is the length of the simple path @xmath129 , and @xmath130 where @xmath131 is the length of the simple cycle @xmath132 .",
    "theorem [ thm : primefactorisationtheorem ] makes two statements .",
    "the first is that every walk can be uniquely decomposed into a ( possibly trivial ) simple path @xmath133 plus a ( possibly empty ) collection of cycles nested off the vertices of @xmath133 . in other words , every walk @xmath21 from @xmath23 to @xmath24 can be uniquely written for some @xmath134 and @xmath135 as @xmath136 \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_2}c_{2,j}\\right ] \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_1}c_{1,j}\\right],\\label{eqn : walkprimefactorisation}\\end{aligned}\\ ] ] where @xmath137 is a simple path ( which we term the _ base path _ of @xmath21 ) and @xmath138 for @xmath139 and @xmath140 is a cycle off @xmath141 .",
    "we refer to the cycles @xmath142 as the cycles nested off @xmath141 or the _ child cycles _ of @xmath141 .",
    "the second statement is that every cycle can be uniquely decomposed into a simple cycle @xmath143 plus a ( possibly empty ) collection of cycles nested off the internal vertices of @xmath143 .",
    "that is , every cycle @xmath144 off a given vertex @xmath23 can be written for some @xmath145 and @xmath146 as @xmath147 \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{m_2}c_{2,j}\\right],\\label{eqn : cycleprimefactorisation}\\end{aligned}\\ ] ] where @xmath132 is a simple cycle ( which we term the _ base cycle _ of @xmath144 ) and @xmath148 for @xmath149 and @xmath150 is a cycle off @xmath151 .",
    "we again refer to the cycles @xmath142 for @xmath140 as the child cycles of @xmath151 . + an example of the prime factorisation is given in figure [ fig : primefactorisation ] .",
    "[ fig : primefactorisation ]   is factorised into a simple path @xmath133 plus a collection of cycles @xmath152 off the vertices of @xmath133 ( cf .",
    "the right - to - left ordering of the factors is a consequence of the nestable condition of definition [ defn : nestablecouples ] .",
    "( bottom ) each cycle @xmath144 is then further factorised into a simple cycle @xmath143 plus a collection of cycles @xmath142 off the internal vertices of @xmath143 ( cf .",
    ", title=\"fig : \" ]      the factorisation of a walk @xmath21 into a collection of shorter walks via nesting is conveniently represented by a structure that we call a _",
    "syntax tree_. given a particular factorisation of @xmath21 , the corresponding syntax tree indicates both the factors and the order in which they must be nested together in order to reconstruct @xmath21 .",
    "we begin by defining a generalised tree , which is an extension of the well - known tree data structure to include ordered sequences of child nodes instead of individual child nodes .    a _ generalised tree _ _ t _ consists of a root node _ t.root _ plus a ( possibly empty ) ordered sequence of hedges , where a _ hedge _ is an ordered sequence of generalised trees : @xmath153 \\big ] , \\\\         { \\textsl{h}}_i & = \\big[\\textsl{$t_{i,1}$},\\textsl{$t_{i,2}$},\\ldots , \\textsl{$t_{i , k_i}$ } \\big].\\end{aligned}\\ ] ] here",
    "@xmath111 is the number of hedges proceeding from _",
    "t.root_ , and @xmath154 is the number of generalised trees in the hedge @xmath155 . adopting standard terminology , we say that each of the nodes _@xmath156.root_,@xmath157,_@xmath158.root_ is a child node of @xmath159 , and has @xmath159 as a parent .",
    "a node that has no children is a leaf node .",
    "given a node @xmath160 , nodes in the same hedge as @xmath160 are said to be siblings ( specifically , right or left siblings , according to their position in the hedge relative to @xmath160 ) .",
    "+ every node in _",
    "t _ has a depth and a height : the depth of a node _",
    "n _ is equal to the length of a path from _",
    "n _ to _ t.root_ , and the height of _",
    "n _ is the length of the longest downward path from _",
    "n _ to a leaf node .",
    "the height of the entire tree _ t _ is defined to be the height of _",
    "t.root_.    a subtree of @xmath161 consists of a node @xmath160 and all its descendants ( i.e.  all children , grandchildren , etc . ) in @xmath161 .",
    "we denote the subtree rooted at node @xmath160 by @xmath162 : thus @xmath163 , while for @xmath164 , @xmath165 is a proper subtree of @xmath161 .    given a digraph @xmath1 ,",
    "a syntax tree over @xmath1 is a generalised tree _",
    "t _ together with a collection of elements of @xmath0 , one associated with each node in _",
    "t_. we denote the walk associated with node @xmath160 by @xmath166 , and define the contents of _ t _ ( as distinct from the contents of its root node ) to be    @xmath167    where the contents of a hedge are given by @xmath168    the syntax tree _",
    "t _ is _ valid _ for a walk @xmath21 if and only if it satisfies the following conditions :    1 .",
    "@xmath169 , 2 .",
    "@xmath170 for @xmath171 . in other words ,",
    "no two hedges contain closed walks off the same vertex .",
    "the purpose of the second condition is to disallow syntax trees where several closed walks off the same vertex are placed in different hedges , rather than into different generalised trees within the same hedge .",
    "[ fig : canonicalsyntaxtrees ] into its prime factors .",
    "the subtree containing the cycle @xmath172 is shaded in grey .",
    "( right ) the canonical syntax tree of the walk @xmath173.,title=\"fig : \" ]    into its prime factors .",
    "the subtree containing the cycle @xmath172 is shaded in grey .",
    "( right ) the canonical syntax tree of the walk @xmath173.,title=\"fig : \" ]    each factorisation of a walk gives rise to a different syntax tree .",
    "since many walks admit more than one factorisation , there are often multiple valid syntax trees for a given walk .",
    "of particular interest among this family of syntax trees is the one that corresponds to the prime factorisation of @xmath21 .",
    "we refer to this as the _ canonical _ syntax tree of @xmath21 , or ` the ' syntax tree of @xmath21 .",
    "if @xmath161 is the canonical syntax tree for a walk @xmath21 , then @xmath174 contains the base path of @xmath21 and every child node of @xmath161 contains a simple cycle .",
    "note that for every proper subtree @xmath175 of @xmath161 , @xmath176 is a cycle .",
    "figure [ fig : canonicalsyntaxtrees ] shows two examples of canonical syntax trees .",
    "the _ canonical syntax tree _ of a walk @xmath21 on a digraph @xmath1 is the unique valid syntax tree for @xmath21 that satisfies @xmath177 and @xmath178 for every child node @xmath160 .",
    "the existence and uniqueness of this tree for any walk follow from the prime factorisation theorem discussed in section [ sec : primefactorisation ] .",
    "in this section we present the first main result of this article .",
    "we begin by introducing the concept of a _ dressing signature_. a dressing signature @xmath2 is a sequence of non - negative integers designed as a compact method of identifying a family of cycles by specifying the maximum length of their prime factors .",
    "given a particular dressing signature and its associated family of cycles , a resummation scheme that exactly resums these cycles can be found .",
    "thus , every dressing signature identifies a different resummation scheme ; and every resummation scheme in the hierarchy depicted in figure [ fig : resummationspectrum ] corresponds to a different dressing signature .",
    "the dressing signature @xmath180 $ ] identifies a scheme that resums all loops , and @xmath181 $ ] to a scheme that resums both loops and backtracks ( the trailing zero indicates that the backtracks have no cycles nested off their internal vertex ) . we term cycles that are exactly resummed within a given dressing scheme _",
    "resummable _ cycles .    the main result of this section",
    "can then be stated as follows . for any dressing signature @xmath2 ,",
    "the set of all walks on a digraph @xmath1 can be partitioned into a collection of collectively exhaustive , mutually exclusive subsets .",
    "each subset consists of a walk @xmath3 that does not contain any resummable cycles  which we term a @xmath2-irreducible walk  plus",
    "all the walks that can be formed by nesting one or more resummable cycles into @xmath3 .",
    "the idea of the construction is straightforward . given a dressing signature @xmath2 , we introduce two operators , which we term the walk reduction operator and the walk dressing operator for that dressing signature .",
    "we postpone giving the explicit form of these operators , defining them for now in terms of their actions .",
    "the walk reduction operator @xmath182 is a projector that maps any walk @xmath21 to its @xmath2-irreducible ` core walk ' by deleting all resummable cycles from it ( in practice , this means mapping every resummable cycle @xmath144 to the corresponding trivial walk @xmath183 , which is an identity element for the nesting operation ) .",
    "conversely , the walk dressing operator @xmath184 \\rightarrow { 2^{w_{\\mathcal{g}}}}$ ] maps a @xmath2-irreducible walk @xmath3 to the set consisting of @xmath3 plus all walks that can be formed by nesting one or more resummable cycles off the vertices of @xmath3 .",
    "then the ensemble of walk sets obtained by applying @xmath11 to each @xmath2-irreducible walk on @xmath1 forms a partition of @xmath0 .",
    "figure [ fig : walk_set_partition ] depicts the actions of @xmath10 and @xmath11 .",
    "[ fig : walk_set_partition ]   and walk dressing operator @xmath184\\rightarrow { 2^{w_{\\mathcal{g}}}}$ ] for a particular dressing signature @xmath2 .",
    "the action of @xmath10 is to map any walk @xmath21 to its core @xmath2-irreducible walk @xmath185 by deleting all resummable cycles from @xmath21 . here",
    "the set of @xmath2-irreducible walks is @xmath186 . the walk dressing operator maps a @xmath2-irreducible walk @xmath3 to the set of all walks that satisfy @xmath187 = i$ ] .",
    "the family of sets @xmath188 : i \\in i^{\\mathpzc{k}}_{\\mathcal{g}}\\big \\ } = \\big\\{{\\delta^{\\!{\\mathpzc{k}}}_{{\\mathcal{g}}}}[i_1 ] , { \\delta^{\\!{\\mathpzc{k}}}_{{\\mathcal{g}}}}[i_2 ] , { \\delta^{\\!{\\mathpzc{k}}}_{{\\mathcal{g}}}}[i_3 ] , { \\delta^{\\!{\\mathpzc{k}}}_{{\\mathcal{g}}}}[i_4]\\big\\}$ ] form a partition of @xmath0 . a different dressing signature @xmath189 would induce a different set of irreducible walks and a different partition of @xmath0.,title=\"fig : \" ]    as long as @xmath10 is idempotent and @xmath11 acts as its inverse ( in the sense of mapping a given @xmath2-irreducible walk to the set of all walks that satisfy @xmath187 = i$ ] ) this result can be proven independently of their explicit definitions .",
    "therefore , in order to avoid getting sidetracked by the technical details of the definitions , in this section we simply state the properties required of @xmath10 and @xmath11 , assume that suitable definitions can be found , and show that it follows that the ensemble of walk sets described above partition @xmath0 .",
    "we justify this assumption in section [ sec : s4:walkreductionwalkdressing ] , where we give explicit definitions for @xmath10 and @xmath11 that satisfy the properties assumed here .",
    "the remainder of the section is structured as follows .",
    "[ sec : dressingsignatures ] is dedicated to defining and discussing dressing signatures . in  [ sec:32:familyofpartitions ] we state the defining properties of the operators @xmath10 and @xmath11 , and show that the ensemble of walk sets described above form a partition of @xmath0 . in ",
    "[ sec : equivrelation ] we discuss how @xmath10 can be interpreted as an equivalence relation on @xmath0 .      the syntax trees introduced in section [ sec : syntaxtree ] form the basis for a method of classifying walks by the structure of their prime decompositions . when compared with a simple classification scheme based on comparing vertex sequences",
    ", such a syntax - tree - based taxonomy of walks has two main advantages .",
    "firstly , it provides for a more precise description of walk structures than the elementary distinctions of closed vs.  open ( walks ) or simple vs.  compound ( cycles ) .",
    "secondly , it allows the structure of a walk to be discussed independently of the underlying graph .",
    "in particular , if the syntax tree of a given walk @xmath21 is modified so that only the length of the prime factor , rather than the prime factor itself , appears in each node , then the structure of @xmath21 can be precisely discussed without ever explicitly referring to the edges that it traverses .",
    "this abstraction is useful insofar as it allows a general definition of when two walks can be said to be equivalent  even if they connect different vertices , traverse different edges , or exist on two different graphs .",
    "the main goal of this article is to describe and generate irreducible walks for each of the resummation schemes depicted in figure [ fig : resummationspectrum ] .",
    "this goal requires a shorthand form of describing and identifying the families of cycles that are classed as ` resummable ' for each resummation scheme . to this end",
    ", we introduce a sequence @xmath190 $ ] of non - negative integers that we term a _ dressing signature_. a dressing signature is a condensed way of prescribing the structure of a cycle @xmath144 .",
    "the values of @xmath191 for @xmath192 set the maximum length of the prime factors ( i.e.  the simple cycles ) at depth @xmath193 in the syntax tree of @xmath144 : thus the base cycle of @xmath144 has length less than or equal to @xmath194 , its child cycles have length less than or equal to @xmath195 , and so forth . in order to emphasize that the child cycles at depth @xmath196 have no children of their own",
    ", we fix the final entry of any dressing signature to be @xmath197 .",
    "further , since only simple cycles of length 2 and greater can have child cycles , all elements of @xmath2 apart from the last non - zero element must be at least 2 .",
    "this leads to the following definition .",
    "[ defn : dressingsignatures ] a dressing signature @xmath198 $ ] is a sequence of one or more integers such that @xmath199 , @xmath200 , and @xmath197 . the parameter @xmath201 is the number of non - zero integers in @xmath2 before the final zero , and will be referred to as the _ depth _ of @xmath2 .    given a dressing signature @xmath202 $ ] with depth @xmath203 , the sequences @xmath204 $ ] , @xmath157 , @xmath205 , [ 0]$ ] formed by progressively deleting elements from the front of @xmath2 are also dressing signatures .",
    "a cycle whose prime decomposition matches the form prescribed by a given dressing signature @xmath2 is said to be @xmath2-structured .",
    "[ defn : kstructuredcycles ] let @xmath206 $ ] be a dressing signature , and @xmath207 $ ] be the dressing signature obtained by deleting the first element of @xmath2 .",
    "then a cycle @xmath144 is said to be @xmath2-structured if and only if the base cycle of @xmath144 has length less than or equal to @xmath194 , and all child cycles @xmath142 ( if any exist ) are @xmath208-structured .",
    "we denote the set of all @xmath2-structured cycles off a given vertex @xmath23 on a digraph @xmath1 by @xmath209 , and the set of all @xmath2-structured cycles on @xmath1 by @xmath210 .",
    "the set of @xmath2-structured cycles is a subset of the set of all cycles : @xmath211 .",
    "we give an explicit expression for @xmath212 in section [ sec : cyclereductionoperators ] ( see definition [ defn : ckcyclesets ] ) .",
    "since every cycle has a length of at least 1 , no cycle is @xmath213$]-structured .",
    "a loop is @xmath2-structured for any value of @xmath214 $ ] .",
    "the cycles @xmath215 and @xmath216 are both @xmath217$]-structured ( indeed , they are @xmath218$]-structured for all @xmath219 ) .",
    "the cycle @xmath220 is @xmath221$]-structured , while @xmath222 is @xmath223$]-structured .",
    "figure [ fig : k_structured_cycles ] illustrates further examples of @xmath223$]-structured cycles that have the triangle 1231 as a base cycle .",
    "the syntax tree _",
    "t _ of a @xmath2-structured cycle @xmath144 has height at most @xmath203 , where @xmath203 is the depth of @xmath2 .",
    "since @xmath144 is a cycle , the root node @xmath174 contains the trivial simple path @xmath183 . if @xmath224 , @xmath174 has a single child node , which contains a simple cycle of length no greater than @xmath194 .",
    "if @xmath225 , this node may have one or more descendant nodes with depth @xmath226 , the contents of which satisfy @xmath227 .",
    "subject to this length restriction , there is no limit on the number of nodes with depth @xmath228 and deeper .",
    "$ ] -structured cycles can be constructed from a simple cycle of length 3 ( the triangle 1231 , left ) by nesting all possible configurations of @xmath181$]-structured cycles off each of its internal vertices ( cf .",
    "definition [ defn : ckcyclesets ] in  [ sec : cyclereductionoperators ] ) .",
    "the resultant set of cycles is infinite . ]",
    "a natural order on dressing signatures is the quasi - lexicographic or shortlex order , in which shorter sequences precede longer ones and sequences of the same length are ordered lexicographically .",
    "the minimum dressing signature with respect to this order is @xmath213 $ ] , and  since dressing signatures can in principle be arbitrarily long  there is no maximum .",
    "however , for any finite graph @xmath1 there is a maximum length to any simple cycle , and to the simple cycles that may be nested into that cycle , and so forth .",
    "there is therefore a maximum _ useful _ dressing signature for any finite graph , which we denote by @xmath229 .",
    "this is defined to be the smallest dressing signature @xmath2 such that every cycle on @xmath1 is @xmath2-structured .",
    "it follows that @xmath230 .",
    "for example , the maximum dressing signature on the complete graph with @xmath26 vertices , denoted @xmath231 , is @xmath232 \\text { if $ { \\mathcal{g}}_n$ contains at least one loop,}\\\\      & [ n , n-1,\\ldots,2,0 ] \\text { if not . }    \\end{cases}\\ ] ]    since the elements of a dressing signature @xmath2 define a maximum length for prime factors , the dressing signatures of definition [ defn : dressingsignatures ] would more precisely be called _ inclusive _ dressing signatures .",
    "in contrast we could imagine _ exclusive _ dressing signatures",
    " denoted @xmath233  with the corresponding definition that a cycle @xmath144 is @xmath233-structured if and only if the base cycle of @xmath144 has length exactly @xmath194 , and all its immediate children ( if any ) are @xmath234-structured .",
    "however , exclusive dressing signatures turn out to be less useful than their inclusive counterparts ( in particular because the set of @xmath233-structured cycles does not coincide with the set of all cycles as the dressing signature is increased ) so in this article we will restrict our discussion to the inclusive case .",
    "any mention of ` dressing signature ' without further qualification thus refers to an inclusive dressing signature , in the sense of definition [ defn : dressingsignatures ] .",
    "however , it is straightforward to extend the results we present to the case of exclusive dressing signatures .      in this section we state the fundamental properties required of @xmath10 and @xmath11 , and",
    "show that it follows from these properties that the family of sets produced by applying @xmath11 to every @xmath2-irreducible walk partition @xmath0 .",
    "[ defn : reductiondressingaxioms ] given a digraph @xmath1 and a dressing signature @xmath2 , let @xmath235 and @xmath236\\rightarrow { 2^{w_{\\mathcal{g}}}}$ ] be operators satisfying the following properties :    * @xmath10 is idempotent ; i.e.  @xmath237\\big ] = { \\mathpzc{r}^{\\!{\\mathpzc{k}}}}[w]$ ] for any walk @xmath238 , * a walk @xmath21 is an element of @xmath239 $ ] if and only if @xmath187 = i$ ] .    since @xmath10 is idempotent ,",
    "there exist walks that remain unchanged under its action .",
    "these walks @xmath2-irreducible .",
    "[ defn : kirreduciblewalks ] let @xmath1 be a digraph and @xmath21 be a walk on @xmath1 . then",
    ", for a given dressing signature @xmath2 , @xmath21 is said to be @xmath2-irreducible if and only if @xmath240 = w$ ] .",
    "we denote the set of all @xmath2-irreducible walks on @xmath1 by @xmath241 , and the set of all @xmath2-irreducible walks from @xmath23 to @xmath24 on @xmath1 by @xmath242 .",
    "that is , @xmath243 = w \\big\\},\\end{aligned}\\ ] ] with an analogous expression for @xmath242 .",
    "we give an explicit expression for the set of all @xmath2-irreducible walks in section [ subsec : structureofik ] .",
    "the image of @xmath10 is precisely the set of @xmath2-irreducible walks .    the proof follows straightforwardly from the idempotence of @xmath10 and the definition of @xmath241 .",
    "the image of @xmath10 is @xmath244 = \\big\\{{\\mathpzc{r}^{\\!{\\mathpzc{k}}}}\\big[w ] : w \\in w_{\\mathcal{g}}\\big\\}$ ] .",
    "because @xmath10 is idempotent , every element of this set satisfies @xmath245 = u$ ] and so is @xmath2-irreducible .",
    "conversely , every @xmath2-irreducible walk @xmath185 satisfies @xmath246 $ ] for at least one walk @xmath238 ( for example , @xmath247 ) and so appears in @xmath244 $ ] .    the walk reduction operator can thus be interpreted as a projector from @xmath0 to @xmath248 , the subset of @xmath0 consisting of @xmath2-irreducible walks , and the walk dressing operator as a map from @xmath241 to the set of all subsets of walks on @xmath1 .",
    "[ thm : familyofpartitions ] the family of sets @xmath188 : i \\in i^{{\\mathpzc{k}}}_{\\mathcal{g}}\\big\\}$ ] partitions @xmath0 .",
    "this claim consists of three statements : ( i ) that no element of this family is empty ; ( ii ) that the elements cover @xmath0 ; ( iii ) that the elements are pairwise disjoint .",
    "we prove each of these statements in turn using the properties given in definition [ defn : reductiondressingaxioms ] .    1 .",
    "consider the set @xmath239 $ ] for a given walk @xmath249 . by definition",
    ", @xmath3 satisfies @xmath250 = i$ ] .",
    "then by p2 , @xmath3 is an element of @xmath239 $ ] , so that @xmath239 $ ] is not empty . since this holds for every @xmath249 , no element of the family @xmath188 : i \\in i^{{\\mathpzc{k}}}_{\\mathcal{g}}\\big\\}$ ] is empty .",
    "we wish to show that @xmath251 = w_{\\mathcal{g}}.\\label{eqn : partitionpropii}\\end{aligned}\\ ] ] let us assume the opposite .",
    "then there exists some walk @xmath238 that does not appear in any of the sets on the left - hand side .",
    "let @xmath252 $ ] .",
    "then @xmath63 is an element of @xmath241 , and so @xmath253 $ ] appears as one of the terms on the left - hand side of eq .  .",
    "further , by p2 , @xmath21 is in @xmath253 $ ] .",
    "thus @xmath21 does appear in one of the sets on the left - hand side : a contradiction .",
    "thus no such walk @xmath21 exists .",
    "we wish to show that @xmath239 \\cap { \\delta^{\\!{\\mathpzc{k}}}_{{\\mathcal{g}}}}[j ] = \\emptyset $ ] for @xmath254 and @xmath255 .",
    "we prove this by contradiction .",
    "assume the opposite : that there is a pair of sets @xmath239 $ ] and @xmath253 $ ] with @xmath255 that are not disjoint .",
    "then there exists a walk @xmath238 that satisfies @xmath256 $ ] and @xmath257 $ ] .",
    "then by p2 , we have that @xmath187 = i$ ] and @xmath187 = j$ ] : a contradiction . thus no such walk @xmath21 exists .",
    "we have thus shown that if explicit definitions can be found for @xmath10 and @xmath11 that satisfy properties p1 and p2 of definition [ defn : reductiondressingaxioms ] , then a family of partitions of the walk set @xmath0 follows straightforwardly . presenting these explicit definitions and proving that they satisfy the required properties is the main topic of section [ sec : s4:walkreductionwalkdressing ] .",
    "it is common knowledge that every partition of a set is equivalent to an equivalence relation on that set , with equivalence classes equal to the elements of the partition . in this section",
    "we define the equivalence relations on @xmath0 that correspond to the partitions given in theorem [ thm : familyofpartitions ] .    given a dressing signature @xmath2 , let @xmath258{$\\sim$}}}}}$ ] be the relation on @xmath179 defined by @xmath259{$\\sim$}}}}}w_2 \\text { if and only if } { \\mathpzc{r}^{\\!{\\mathpzc{k}}}}[w_1 ] = { \\mathpzc{r}^{\\!{\\mathpzc{k}}}}[w_2].\\end{aligned}\\ ] ] this relation is reflexive , symmetric , and transitive , and therefore defines an equivalence relation on @xmath0 .",
    "we say that two walks @xmath260 such that @xmath261{$\\sim$}}}}}w_2 $ ] are @xmath2-equivalent to each other .",
    "two walks @xmath53 and @xmath54 are @xmath2-equivalent if and only if they can be transformed into one another by adding or removing some number ( possibly zero ) of resummable cycles .    given a walk @xmath262 , its @xmath2-equivalence class @xmath263_{\\mathpzc{k}}$ ] is the set of all walks that are @xmath2-equivalent to @xmath21 : @xmath264_{\\mathpzc{k}}= \\big\\{u \\in w_{{\\mathcal{g } } } : u { { \\mathrel{\\overset{{\\mathpzc{k}}}{\\scalebox{1.7}[1]{$\\sim$}}}}}w\\big\\}.\\end{aligned}\\ ] ]    the @xmath2-equivalence class of any walk @xmath238 is the set @xmath265\\big]$ ] .",
    "the proof relies on property p2 of definition [ defn : reductiondressingaxioms ] .",
    "let @xmath266 be an element of @xmath263_{\\mathpzc{k}}$ ] .",
    "then by definition we have @xmath245 = { \\mathpzc{r}^{\\!{\\mathpzc{k}}}}[w]$ ] , and so @xmath266 is in @xmath265\\big]$ ] .",
    "conversely , let @xmath267 be an element of @xmath265\\big]$ ] .",
    "then it follows that @xmath268 = { \\mathpzc{r}^{\\!{\\mathpzc{k}}}}[w]$ ] , so that @xmath267 is in @xmath263_{\\mathpzc{k}}$ ] .",
    "given an equivalence class @xmath263_{\\mathpzc{k}}$ ] , it is convenient to define a unique representative element ( the ` canonical representative ' ) by which it can be referred to .",
    "since every equivalence class @xmath263_{\\mathpzc{k}}$ ] contains precisely one @xmath2-irreducible walk @xmath187 $ ] , it is natural to adopt @xmath187 $ ] as the canonical representative of @xmath263_{\\mathpzc{k}}$ ] .",
    "in this section we give explicit definitions for the walk reduction operator @xmath10 and walk dressing operator @xmath11 , and show that these definitions satisfy the desired properties stated in definition [ defn : reductiondressingaxioms ] .",
    "we further obtain an explicit recursive expression for @xmath269 , the set of @xmath2-irreducible walks on @xmath1 .",
    "as shown in theorem [ thm : familyofpartitions ] , knowledge of @xmath269 and @xmath11 allows a partition of the set of all walks on an arbitrary digraph @xmath1 to be constructed .",
    "since the actions of @xmath10 and @xmath11 are defined in terms of resummable cycles , we first require a more precise definition of which cycles are resummable within the resummation scheme indexed by a given dressing signature @xmath2 .",
    "we take up this subject in detail in section [ sec:41:resummablecycles ] . in section [ sec:42:randdeltamotivation ]",
    "we show that both @xmath10 and @xmath11 admit a natural recursive definition in terms of operators that act on the individual cycles that make up @xmath21 . since their action on cycles parallels that of @xmath10 and @xmath11 on walks , we term these operators the cycle reduction operators ( denoted @xmath270 ) and cycle dressing operators ( denoted @xmath271 ) respectively .",
    "we define @xmath270 in section [ sec : cyclereductionoperators ] , paving the way for the explicit definition and proof of idempotence of @xmath10 in section [ sec : walkreductionoperators ] . in section [ subsec : structureofqkl ]",
    "we define a set of cycles that are invariant under the action of the cycle reduction operators .",
    "we term these cycles the @xmath272-irreducible cycles .",
    "their definition paves the way for the explicit definition of the set of @xmath2-irreducible walks in section [ subsec : structureofik ] . in section [ subsec : cycledressingoperators ] we define the cycle dressing operators and in section [ sec : walkdressingoperator ] the walk dressing operator . in section [ subsec :",
    "rdeltainverses ] we show that the cycle reduction and cycle dressing operators are inverses of one another , in the sense that @xmath273 $ ] produces the pre - image under @xmath270 of a given @xmath272-irreducible cycle @xmath274 . in section [ subsec :",
    "rdeltainverses ] we exploit this result to prove that @xmath10 and @xmath11 are inverses of one another , thus fulfilling the aim of this section : to show that the explicit definitions for @xmath10 and @xmath11 that we provide satisfy properties p1 and p2 of definition [ defn : reductiondressingaxioms ] .",
    "the desired actions of the walk reduction and walk dressing operators for a given dressing signature are simple to describe : @xmath10 maps a given walk @xmath21 to its @xmath2-irreducible core walk by removing all resummable cycles from it , while @xmath11 maps a @xmath2-irreducible walk @xmath3 to the set of walks formed by dressing the vertices of @xmath3 by all possible configurations of resummable cycles . in order to convert this statement of intent into explicit definitions for @xmath10 and @xmath11 , we require a precise definition of when a cycle can be said to be ` resummable '",
    ".    the general question we want to address can be stated as follows .",
    "let @xmath21 be a walk with syntax tree @xmath161 , @xmath144 be a cycle contained in a proper subtree @xmath175 of @xmath161 , and @xmath2 be a dressing signature .",
    "then we wish to decide between two possibilities : either @xmath144 is part of the @xmath2-irreducible core walk @xmath187 $ ] ( and so is not resummable ) , or @xmath144 is produced by dressing @xmath187 $ ] as prescribed by @xmath11 ( and so is resummable ) . in the latter case , it follows that deleting @xmath144 and all other resummable cycles from @xmath21 produces a walk that contains no resummable cycles .",
    "the nave solution to this question would be to assume that @xmath144 is resummable if and only if it is @xmath2-structured .",
    "indeed , for the case of @xmath5 $ ] this is correct : deleting all the loops from a walk produces a walk that does not contain any loops , and @xmath275}_{{\\mathcal{g}}}}$ ] can be defined so as to add all possible configurations of loops off the vertices of a loopless walk @xmath3 .",
    "identifying ` resummable ' with ` [ 1,0]-structured ' is thus perfectly consistent .",
    "however , this approach fails for all other dressing signatures : due to the possibility of nesting cycles inside other cycles for dressing signatures with @xmath276 , it is not generally true that deleting all @xmath2-structured cycles from a walk produces a walk that contains no @xmath2-structured cycles .",
    "alternatively , it might be thought that recursively deleting @xmath2-structured cycles until the underlying walk no longer changes ( i.e.  performing multiple passes over the walk , deleting @xmath2-structured cycles each time ) might be a valid approach .",
    "this is also not true , since it leads to the gradual deletion of arbitrarily deeply - nested cycles that can not be reconstructed by a dressing scheme limited to adding cycles with a structure dictated by @xmath2 .",
    "( consider for example @xmath7 $ ] and the cycle @xmath277 ) . to illustrate these complexities",
    "it is useful to consider two simple examples .",
    "[ ex : resummablecycles ] consider the task of identifying which cycles in the walk @xmath278 , if any , are resummable with respect to the dressing signature @xmath279 $ ] .",
    "there are only two possible candidates : @xmath280 and @xmath281 .",
    "we note firstly that 12321 is not @xmath181$]-structured , and so can not possibly be the product of a dressing scheme that adds @xmath181$]-structured cycles .",
    "on the other hand , 232 is @xmath181$]-structured , and so might be thought to be resummable .",
    "however , removing it from @xmath21 leaves the walk @xmath282 , which is not @xmath181$]-irreducible on account of the resummable cycle 121 .",
    "thus the cycle 232 is not the result of dressing a @xmath181$]-irreducible walk by @xmath181$]-structured cycles , and we conclude that  despite being @xmath181$]-structured  it is not resummable .",
    "[ ex : resummablecycles2 ] next consider the task of identifying which cycles in the walk @xmath283 are resummable with respect to the dressing signature @xmath7 $ ] .",
    "the only two candidates are the backtracks 232 and 242 .",
    "since removing them both leaves the walk @xmath282 , which is not @xmath181$]-irreducible , we conclude that they can not both be resummable .",
    "however , removing only one of them does leave a @xmath181$]-irreducible walk : @xmath284 if 232 is removed , and @xmath285 if 242 is removed",
    ". therefore precisely one of 232 and 242 is resummable",
    ". which one is deemed resummable ( and thus produced by dressing ) and which is deemed to be part of the ` core ' irreducible walk is purely a matter of convention , which is equivalent to the decision of whether the walk @xmath286 should be generated by ( a ) adding 232 to the first appearance of the vertex 2 in the @xmath181$]-irreducible walk 12421 , or ( b ) adding 242 to the second appearance of 2 in the @xmath181$]-irreducible walk 12321 .",
    "we adopt the latter convention .",
    "the choice influences the exact forms taken by the cycle dressing and walk dressing operators , which we provide in sections [ defn : cycledressingoperators ] and [ sec : walkdressingoperator ] .",
    "these examples illustrate that whether or not a given cycle @xmath144 in a walk @xmath21 is resummable within the resummation scheme identified by a given dressing signature @xmath2 depends not only on the structure of @xmath144 , but also on its environment : specifically , on the ancestors and left siblings . ] of @xmath144 in the syntax tree of @xmath21 . in order to take this into account",
    ", we assign a quantity that we term _ local depth _ to each node in a syntax tree .",
    "[ defn : localdepth ] let @xmath161 be a canonical syntax tree , and @xmath287 $ ] a dressing signature of depth @xmath203",
    ". then the local depth of a node @xmath160 of @xmath161 with respect to @xmath2 , denoted @xmath288 , is an integer between @xmath39 and @xmath203 inclusive , defined as follows .",
    "the root node @xmath174 and all its immediate children have a local depth of 0 , while every other node @xmath160 has a local depth given by @xmath289             & \\text{if $ \\operatorname{length}(\\textsl{p.contents } ) \\le k_{{\\ell^{{\\mathpzc{k}}}}(\\textsl{p})}$ and}\\\\            & \\text{\\textsl{t(n$_j$).contents } is $ [ k_{{\\ell^{{\\mathpzc{k}}}}(\\textsl{p})+1},\\ldots,0]$-structured for $ 1 \\le",
    "j \\le i-1 $ , } \\end{aligned } \\\\[3 mm ] 0 & \\text{otherwise , } \\end{cases}\\end{aligned}\\ ] ] where @xmath290 is the parent node of @xmath160 in _ t _ , @xmath3 is the position of node @xmath160 within its hedge ( counting from left to right ) , @xmath291 is a left sibling node of @xmath160 , and @xmath292 is a proper subtree of _ t _ rooted at @xmath291 . in a minor abuse of terminology , we will frequently refer to the local depth of a simple cycle @xmath143 , which is to be understood as being shorthand for the local depth of the node containing @xmath143 .",
    "note that the local depth of a simple cycle @xmath143 does not depend on the length of @xmath143 itself , but only on the length of the parent and the structure of the cycles contained in the subtrees rooted at each of the left siblings of @xmath143 ( if any ) in the syntax tree .",
    "@xmath293@xmath294 , showing the local depth of each node with respect to the dressing signatures @xmath7 $ ] ( left ) and @xmath295 $ ] ( right ) . the local depth is evaluated according to def .",
    "[ defn : localdepth ] .",
    "nodes that contain resummable cycles ( see def .",
    "[ defn : resummablecycle ] ) are shaded grey .",
    "the @xmath2-irreducible walk thus consists of the white nodes in each case : @xmath296}}[w ] = 1 \\operatorname{\\odot}1231 \\operatorname{\\odot}(121 \\operatorname{\\odot}22 ) \\operatorname{\\odot}(131 \\operatorname{\\odot}33)$ ] and @xmath297}}[w ] = 1 \\operatorname{\\odot}(1231 \\operatorname{\\odot}343 \\operatorname{\\odot}242 ) \\operatorname{\\odot}(131 \\operatorname{\\odot}343)$].,title=\"fig : \" ] @xmath293@xmath294 , showing the local depth of each node with respect to the dressing signatures @xmath7 $ ] ( left ) and @xmath295 $ ] ( right ) .",
    "the local depth is evaluated according to def .",
    "[ defn : localdepth ] .",
    "nodes that contain resummable cycles ( see def .",
    "[ defn : resummablecycle ] ) are shaded grey .",
    "the @xmath2-irreducible walk thus consists of the white nodes in each case : @xmath296}}[w ] = 1 \\operatorname{\\odot}1231 \\operatorname{\\odot}(121 \\operatorname{\\odot}22 ) \\operatorname{\\odot}(131 \\operatorname{\\odot}33)$ ] and @xmath297}}[w ] = 1 \\operatorname{\\odot}(1231 \\operatorname{\\odot}343 \\operatorname{\\odot}242 ) \\operatorname{\\odot}(131 \\operatorname{\\odot}343)$].,title=\"fig : \" ]    the local depth of a node _",
    "n _ can be understood as follows .",
    "let @xmath298 $ ] be a dressing signature of depth 2 .",
    "consider a node _",
    "n _ in the syntax tree for a walk @xmath21 whose parent node is definitely a part of the core @xmath2-irreducible walk @xmath187 $ ] .",
    "then checking to see whether the cycle _ t(n).contents _ could have been produced by adding @xmath2-structured cycles to @xmath187 $ ] simply amounts to checking whether _ t(n).contents _ is @xmath299$]-structured .",
    "such a node is assigned a local depth of 0 .    on the other hand ,",
    "n _ be a node whose parent _ p = n.parent_ has local depth 0 .",
    "then the parent of _ p _",
    "( i.e.  the grandparent of _ n _ ) is definitely a part of @xmath187 $ ] , but there are two possibilities for _ p _ itself .",
    "the first is that by inspecting _",
    "p _ and the left siblings of _ n _ , it can be concluded that _",
    "p _ is definitely a part of the core irreducible walk .",
    "this is the case if _ t(p).contents _ is not @xmath299$]-structured , which is the case if either ( i ) _",
    "p.contents _ is longer than @xmath194 , or ( ii ) at least one of its child cycles that have already been seen ",
    "i.e.  the cycles in the subtrees rooted at the left siblings of _ n _  is not @xmath300$]-structured .",
    "then the situation is identical to that in the preceding paragraph : _ n _ is assigned local depth 0 , indicating that _ t(n).contents _ should be checked to see if it is @xmath299$]-structured .",
    "the second possibility is that can not be concluded from this inspection that _",
    "p _ is definitely part of the core irreducible walk .",
    "this is the case if ( i ) _ p.contents _ is not longer than @xmath194 , and ( ii ) all of the cycles in the subtrees rooted at the left siblings of _ n _ are @xmath300$]-structured .",
    "then it is possible that _",
    "t(p).contents _ is the result of dressing its parent node by @xmath299$]-structured cycles . in this case , checking whether _ t(n).contents _ could have been produced by adding @xmath2-structured cycles to @xmath187 $ ] requires checking not whether _",
    "t(n).contents _ is @xmath299$]-structured , but whether it is @xmath300$]-structured .",
    "we indicate this by assigning _",
    "n _ a local depth of 1.$ ] or not is irrelevant : it is only important whether or not it can be concluded from _",
    "p _ and the left siblings of _ n _ that _ p _ is in @xmath187 $ ] .",
    "the distinction is important if , for example , all of cycles in the subtrees rooted at the left siblings of _ n _ are @xmath300$]-structured , but one of the cycles in a subtree rooted at a _",
    "right _ sibling of _ n _ is not . then _",
    "t(p).contents _ is not @xmath299$]-structured and _ p _ is a part of @xmath187 $ ] .",
    "however , since we only consider _ left _ siblings in assigning the local depth of a node , _",
    "n _ is assigned a local depth of 1 regardless , and _",
    "t(n).contents _ may be resummable even though _ t(p).contents _ is not . ]",
    "extending this line of reasoning to deeper dressing signatures produces definition [ defn : localdepth ] .",
    "the local depth of a node @xmath160 indicates which trailing subsequence of the dressing signature @xmath2 the cycle @xmath301 should be compared against to check whether it is resummable or not .",
    "the case of depth-1 dressing signatures , i.e.  @xmath302 $ ] , is straightforward : a simple cycle @xmath143 has local depth 1 if and only if its parent is a simple cycle not longer than @xmath194 and @xmath143 is the first child in its hedge . in this case",
    "the parent cycle and @xmath143 , taken together , form part of the underlying @xmath2-irreducible walk .",
    "any right siblings that @xmath143 may have are assigned local depth 0 and compared against the dressing signature @xmath218 $ ] , since they may arise from dressing the parent of @xmath143 by @xmath218$]-structured cycles .",
    "this is the case considered in example [ ex : resummablecycles2 ] .    given a syntax tree _",
    "t _ and a dressing signature @xmath2 , the local depth can be assigned to each node in a pre - order depth - first traversal of _ t _ , where the children within a hedge are visited from left to right .",
    "we then have the following concise definition of resummability .",
    "[ defn : resummablecycle ] let @xmath21 be a walk with syntax tree @xmath303 , @xmath144 be a cycle corresponding to a proper subtree _",
    "t _ of _ t _ , and @xmath287 $ ] be a dressing signature of depth @xmath203",
    ". then @xmath144 is resummable in @xmath21 with respect to @xmath2 if , and only if , @xmath144 is @xmath304$]-structured , where @xmath305 is the local depth of @xmath306 with respect to @xmath2 .",
    "it is straightforward to verify that this definition makes the correct predictions in the situations considered in examples [ ex : resummablecycles ] and [ ex : resummablecycles2 ] .",
    "we now turn to developing explicit definitions for the walk reduction operator and walk dressing operator that satisfy the desired properties stated in definition [ defn : reductiondressingaxioms ] .",
    "since every walk can be decomposed into a simple path plus a collection of cycles ( eq .  ) , it is natural to define @xmath10 and @xmath11 in terms of a collection of operators that act on cycles .",
    "these operators perform analogous roles on cycles to those of @xmath10 and @xmath11 on walks , and are termed the cycle reduction operators and cycle dressing operators respectively . in this section",
    "we discuss the motivation for introducing these operators and give an overview of their properties .",
    "consider first the walk reduction operator @xmath10 , which deletes all resummable cycles from a walk @xmath21 by mapping each one to the corresponding trivial walk .",
    "this can be achieved through the following two - step construction .",
    "let @xmath2 have depth @xmath203 ; then we introduce a family of cycle reduction operators , which we denote by @xmath270 for @xmath307 . specifically , @xmath270 is a map on @xmath308 ( where @xmath38 is the set of trivial walks on @xmath1 ) defined such that applying @xmath270 to a cycle @xmath144 rooted at local depth @xmath309 removes all resummable cycles ( up to and including @xmath144 itself ) from @xmath144 .",
    "since @xmath144 itself must be deleted if it is resummable , it follows that @xmath270 maps @xmath144 to the trivial walk @xmath183 if and only if @xmath144 is @xmath310$]-structured .",
    "alternatively , if @xmath144 is left unchanged under the action of @xmath270 , it is termed a @xmath272-irreducible cycle .",
    "we then define @xmath10 such that every cycle @xmath144 in @xmath21 is mapped to @xmath311 $ ] in @xmath187 $ ] , where @xmath128 is the local depth of the base cycle of @xmath144 . since a cycle rooted at local depth @xmath128 is resummable if and only if it is @xmath312$]-structured , it follows that a cycle @xmath144 in @xmath21 is mapped to @xmath183 in @xmath187 $ ] if and only if @xmath144 is resummable with respect to @xmath2 , as desired",
    ". a further consequence of this construction is that a walk is @xmath2-irreducible if and only if every cycle @xmath144 it contains is @xmath313-irreducible , where @xmath128 is the local depth of the root node of the subtree containing @xmath144 .",
    "consequently , finding the set of @xmath272-irreducible cycles is a significant step towards finding the set of @xmath2-irreducible walks .",
    "next consider the walk dressing operator @xmath11 , which maps a @xmath2-irreducible walk @xmath3 to the set of walks formed by adding all possible configurations of resummable cycles on @xmath1 to @xmath3 .",
    "the desired behaviour for @xmath11 can be achieved by a two - step construction similar to that for @xmath10 .",
    "let @xmath2 have depth @xmath203 ; then we introduce a family of cycle dressing operators , which we denote by @xmath271 for @xmath314 .",
    "these are defined such that @xmath315\\setminus t_{\\mathcal{g}}\\rightarrow { 2^{c_{\\mathcal{g}}}}$ ] maps a @xmath272-irreducible cycle @xmath274 rooted at local depth @xmath309 to the set of cycles formed by adding all possible configurations of resummable cycles to @xmath274 .",
    "consequently , every cycle @xmath144 in @xmath273 $ ] satisfies @xmath316 = q$ ] , since any resummable cycles added by @xmath271 are removed by @xmath270",
    ".    then we define @xmath11 such that ( i ) all possible configurations of @xmath2-structured cycles are added as immediate children of the base path of @xmath3 , and ( ii ) every cycle @xmath274 in @xmath3 is mapped to @xmath317 $ ] in @xmath239 $ ] , where @xmath128 is the local depth of the root node of @xmath274 and @xmath318 is the graph on which @xmath274 exists ( specifically , @xmath1 minus a subset of its vertices  see e.g.  eqs .   and ) .",
    "this is sufficient to produce the desired behaviour , since then every walk @xmath256 $ ] differs from @xmath3 by ( i ) a collection of @xmath2-structured cycles having been added as immediate children of the base path of @xmath3 , and ( ii ) every cycle @xmath274 having been replaced by a cycle @xmath319 $ ] .",
    "thus when @xmath10 is applied to @xmath21 , @xmath320 is applied to each of the newly - added @xmath2-structured cycles , mapping each back to the corresponding trivial walk , and @xmath321 is applied to every other cycle @xmath144 , mapping it back to @xmath274 . therefore applying @xmath10 to @xmath21 recovers the @xmath2-irreducible walk @xmath3 .",
    "+ having discussed the motivation for introducing the cycle reduction and cycle dressing operators , we now state the fundamental properties they must satisfy .",
    "we give explicit definitions that satisfy these properties in sections [ sec : cyclereductionoperators ] and [ subsec : cycledressingoperators ] respectively .",
    "[ defn : reductiondressingaxioms ] given a digraph @xmath1 , a dressing signature @xmath2 of depth @xmath203 , and a parameter @xmath314 , let @xmath322 and @xmath323\\setminus t_{\\mathcal{g}}\\rightarrow 2^{\\,c_{\\mathcal{g}}}$ ] be maps such that    * @xmath270 is idempotent ; i.e.  @xmath324\\big ] = { \\mathpzc{r}^{{\\mathpzc{k}};l}}[d]$ ] for every @xmath325 , * @xmath326 \\in t_{\\mathcal{g}}$ ] if and only if ( i ) @xmath327 or ( ii ) @xmath328 is a @xmath310$]-structured cycle , * a cycle @xmath144 is an element of @xmath273 $ ] if and only if @xmath316 = q$ ] .",
    "recall from ",
    "[ subsec : walkspathscycles ] that @xmath329 is the set of trivial walks on @xmath1 .",
    "[ fig : cycle_set_partition ]   and cycle dressing operator @xmath271 for a particular dressing signature @xmath2 and parameter @xmath309 .",
    "the cycle reduction operator maps a cycle @xmath330 either to the trivial walk @xmath183 , if @xmath144 is @xmath310$]-structured , or to a @xmath272-irreducible cycle @xmath331 , otherwise .",
    "the cycle dressing operator maps a @xmath272-irreducible cycle @xmath274 to the set of all cycles that satisfy @xmath316 = q$ ] .",
    "the set of @xmath310$]-structured cycles together with the family of sets @xmath332 : q \\in q^{{\\mathpzc{k}};l}_{{\\mathcal{g}}}\\big\\}$ ] form a decomposition of @xmath333 .",
    "a different value of @xmath2 or @xmath309 induces a different decomposition.,title=\"fig : \" ]    the actions of @xmath270 and @xmath271 are depicted in figure [ fig : cycle_set_partition ] .",
    "+ since @xmath270 is idempotent , there is a subset of its domain @xmath308 that consists of elements that remain unchanged under the action of @xmath270 . due to property p2",
    ", this subset contains the set of trivial walks .",
    "the remaining elements are cycles that satisfy @xmath316 = c$ ] .",
    "we term such a cycle a @xmath272-irreducible cycle .",
    "[ defn : klirreduciblecycles ] let @xmath1 be a digraph and @xmath2 be a dressing signature with depth @xmath203 . then a cycle @xmath330 is said to be @xmath272-irreducible for @xmath314 if and only if @xmath316 = c$ ] .",
    "we denote the set of all @xmath272-irreducible cycles off a particular vertex @xmath23 on @xmath1 by @xmath334 ; that is @xmath335 = c\\right\\ } ,       \\ ] ] and the set of all @xmath272-irreducible cycles on @xmath1 by @xmath336 .",
    "we give an explicit expression for @xmath334 in section [ subsec : structureofqkl ] . in the remainder of this section",
    "we prove some fundamental properties of @xmath270 and @xmath271 that follow from the properties laid down in definition [ defn : reductiondressingaxioms ] .",
    "[ prop : imageofrkl ] the image of @xmath270 is the set @xmath337 .    by definition ,",
    "the image of @xmath270 is @xmath338 & = { \\mathpzc{r}^{{\\mathpzc{k}};l}}\\big[c_{\\mathcal{g}}\\big ] \\cup { \\mathpzc{r}^{{\\mathpzc{k}};l}}\\big[t_{\\mathcal{g}}\\big ] \\\\ & = { \\mathpzc{r}^{{\\mathpzc{k}};l}}\\big[c_{\\mathcal{g}}\\big ] \\cup t_{\\mathcal{g}},\\end{aligned}\\ ] ] where the second equality follows from the fact that @xmath339 = ( \\alpha)$ ] for any trivial walk @xmath35 ( see property p2 above ) .",
    "the proposition thus corresponds to the claim that @xmath340 \\cup t_{\\mathcal{g}}= q^{{\\mathpzc{k}};l}_{\\mathcal{g}}\\cup t_{\\mathcal{g}}.\\end{aligned}\\ ] ] to prove this statement it suffices to show the inclusions ( a ) @xmath341 \\subseteq q^{{\\mathpzc{k}};l}_{\\mathcal{g}}\\cup t_{\\mathcal{g}}$ ] and ( b ) @xmath342 \\cup t_{\\mathcal{g}}$ ] .",
    "* let @xmath343 be an element of @xmath341 $ ] , so that @xmath344 $ ] for some @xmath330 . since the codomain of @xmath270 is @xmath308 ,",
    "there are two possibilities : * * @xmath345 .",
    "then it is clearly the case that @xmath346 . * * @xmath347 . since @xmath348 $ ] for some @xmath330 and @xmath270 is idempotent ( property p1 above ) it follows that @xmath349 = a$ ] . then by the definition of @xmath350 we have @xmath351 , so that @xmath352 .",
    "* let @xmath353 be an element of @xmath350 .",
    "then by the definition of @xmath350 we have that @xmath354 $ ] and @xmath355 .",
    "thus @xmath353 is an element of @xmath356 : c \\in c_{\\mathcal{g}}\\ } = { \\mathpzc{r}^{{\\mathpzc{k}};l}}[c_{\\mathcal{g}}]$ ] .",
    "the cycle reduction operator @xmath270 is therefore a projector from @xmath308 to @xmath357 .",
    "[ cor : klirredcyclessetminus ] the set of @xmath272-irreducible cycles is given by @xmath358 \\setminus t_{\\mathcal{g}}$ ] .    by the definition of @xmath359 ( defn .",
    "[ defn : klirreduciblecycles ] ) we have that @xmath360 , while from the convention that trivial walks are not cycles it follows that @xmath361 .",
    "hence @xmath362 . from proposition",
    "[ prop : imageofrkl ] we further have that @xmath363 \\cup t_{\\mathcal{g}}$ ] ; thus @xmath364 \\cup t_{\\mathcal{g}}\\big ) \\setminus t_{\\mathcal{g}}= { \\mathpzc{r}^{{\\mathpzc{k}};l}}[c_{\\mathcal{g } } ] \\setminus t_{\\mathcal{g}}$ ] .",
    "it follows from corollary [ cor : klirredcyclessetminus ] that the cycle dressing operator @xmath271 is a map from @xmath272-irreducible cycles to sets of cycles : @xmath365 .",
    "[ lem : partitionofc ] for any dressing signature @xmath2 and parameter @xmath314 , where @xmath203 is the depth of @xmath2 , the family of sets @xmath366}_{\\mathcal{g}}\\big\\ } \\cup \\big\\{{\\delta^{{\\mathpzc{k}};l}_{{\\mathcal{g}}}}[q ] : q \\in q^{{\\mathpzc{k}};l}_{\\mathcal{g}}\\big\\}\\end{aligned}\\ ] ] forms a decomposition of @xmath51 .",
    "thus , every cycle @xmath330 is either @xmath310$]-structured , or can be produced by dressing a @xmath272-irreducible cycle as prescribed by the dressing operator @xmath271 .",
    "note that this family can not be said to form a partition of @xmath51 because of the possibility that @xmath367}_{\\mathcal{g}}$ ] might be empty .",
    "this is the case when @xmath1 contains no @xmath310$]-structured cycles : for example , a loopless graph contains no @xmath180$]-structured cycles .",
    "this claim consists of two statements : ( i ) that the elements of this family cover @xmath51 , and ( ii ) that the elements are pairwise disjoint .",
    "we address each of these statements in turn .    1 .",
    "we claim that @xmath368}_{\\mathcal{g}}\\cup         \\bigcup_{q \\in q^{{\\mathpzc{k}};l}_{\\mathcal{g } } } { \\delta^{{\\mathpzc{k}};l}_{{\\mathcal{g}}}}[q ] = c_{\\mathcal{g}}. \\label{eqn : cycledecompproof}\\end{aligned}\\ ] ] let us assume the opposite : there exists a cycle @xmath144 in @xmath51 that does not appear in any of the sets on the left - hand side . consider the result of applying @xmath270 to @xmath144 .",
    "two possibilities exist : 1 .",
    "@xmath316 \\in t_{\\mathcal{g}}$ ] .",
    "then by property p2 above , @xmath144 is a @xmath310$]-structured cycle , and so appears in @xmath367}_{\\mathcal{g}}$ ] on the left - hand side of eq .  .",
    "2 .   @xmath316 \\in q^{{\\mathpzc{k}};l}_{\\mathcal{g}}$ ] .",
    "then @xmath316 $ ] appears in the union over @xmath350 in eq .  .",
    "further , by property p3 above , @xmath144 is in @xmath369 $ ] , and so appears on the left - hand side of eq .  .",
    "+ 2 .   to show that the members of the family are pairwise disjoint we require that ( a ) @xmath367}_{\\mathcal{g}}\\cap { \\delta^{{\\mathpzc{k}};l}_{{\\mathcal{g}}}}[q ] = \\emptyset$ ] for @xmath370 , and ( b ) @xmath371 \\cap { \\delta^{{\\mathpzc{k}};l}_{{\\mathcal{g}}}}[q_2 ] = \\emptyset$ ] for @xmath372 and @xmath373 . we prove each of these in turn .",
    "the proof in each case follows straightforwardly from the properties given in definition [ defn : reductiondressingaxioms ] .",
    "1 .   assume the opposite : that there exists a cycle @xmath144 such that @xmath374}_{\\mathcal{g}}$ ] and @xmath375 $ ] for some @xmath370 .",
    "then by p2 we have that @xmath316 \\in t_{\\mathcal{g}}$ ] , on one hand , and @xmath316 = q$ ] , on the other .",
    "however , as noted in the proof to corollary [ cor : klirredcyclessetminus ] above , @xmath350 and @xmath38 are disjoint : thus no such cycle @xmath144 can exist .",
    "2 .   assume the opposite : that there exists a cycle @xmath144 such that @xmath376 $ ] and @xmath377 $ ] for some @xmath378 with @xmath373 .",
    "then by p3 we have that @xmath316 = q_1 $ ] and @xmath316 = q_2 $ ] : a contradiction . thus no such cycle exists .",
    "we now give an explicit definition for the cycle reduction operators @xmath270 that satisfies the key properties given in definition [ defn : reductiondressingaxioms ] : namely , that @xmath270 is idempotent , and that @xmath316 $ ] is equal to the trivial walk @xmath183 if and only if @xmath379 or @xmath144 is a @xmath310$]-structured cycle .",
    "we prove these claims later in this section .",
    "[ defn : cyclereductionoperator ] let @xmath1 be a digraph , @xmath2 be a dressing signature of depth @xmath203 , and @xmath314 be a parameter . then the cycle reduction operator @xmath270 is a map on the set of all cycles and trivial walks on @xmath1 : @xmath380 for any trivial walk @xmath35 , we define @xmath381 = ( \\alpha)$ ] for every @xmath307 . for any cycle",
    "@xmath144 we define @xmath382 $ ] as follows .",
    "let @xmath144 have decomposition ( cf .",
    "eq .  [ eqn : cycleprimefactorisation ] ) @xmath383\\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_2 } c_{2,j}\\right],\\end{aligned}\\ ] ] where @xmath384 is a simple cycle of length @xmath145 off @xmath23 on @xmath1 , @xmath385 is the number of child cycles off @xmath141 , and @xmath386 for @xmath387 and @xmath140 . if and only if @xmath388 , then we introduce indices @xmath389 , where @xmath390 is the index of the first child off @xmath141 ( counting from the left of the hedge ) such that @xmath391 \\neq ( \\mu_i)$ ] . in other words",
    ", @xmath392 is the first child off @xmath141 that is not @xmath393$]-structured . if no such child exists ( i.e.  if there are no children off @xmath141 , or if all children off @xmath141 satisfy @xmath391 = ( \\mu_i)$ ] ) then we set @xmath394 .",
    "then the cycle reduction operator @xmath395 maps @xmath144 to    @xmath396 = \\begin{cases } \\left(\\alpha\\right ) & \\begin{aligned } & \\text{if $ m \\le k_l$ and every}\\\\[1 mm ] & \\text{$s_i = n_i + 1 $ } \\end{aligned}\\\\[1ex ] \\!\\begin{aligned}[b ] \\alpha\\mu_2\\cdots\\mu_m \\alpha \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_m}{\\mathpzc{r}^{{\\mathpzc{k}};\\,l_{m , j}}}\\big[c_{m , j}\\big]\\right ] \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_2}{\\mathpzc{r}^{{\\mathpzc{k}};\\,l_{2,j}}}\\big[c_{2,j}\\big]\\right ] \\end{aligned }            & \\text{else . } \\end{cases}\\nonumber\\end{aligned}\\ ] ]    where @xmath397    it is worth commenting here on the role of the indices @xmath390 .",
    "they are included to produce the desired behaviour for @xmath270 : namely , that @xmath270 should map any @xmath310$]-structured cycle @xmath144 to @xmath183 .",
    "since @xmath144 can be @xmath310$]-structured only if every child cycle @xmath142 is @xmath393$]-structured , @xmath316 $ ] must depend on @xmath398 $ ] for every child @xmath142 .",
    "this dependence is achieved via the indices @xmath390 .",
    "the indices @xmath390 are evaluated if and only if the base cycle @xmath143 of @xmath144 is not longer than @xmath399 .",
    "then @xmath390 is the index of the first child cycle of @xmath141 that is not @xmath393$]-structured , or @xmath400 if no such child exists . thus if and only if every @xmath390 is equal to @xmath401 , all of the children off all of the vertices of @xmath384 are @xmath393$]-structured .",
    "then @xmath144 is @xmath402$]-structured , and is consequently mapped by @xmath270 to @xmath183 .",
    "note that the value of the parameter @xmath403 , which specifies which cycle reduction operator is applied to the child @xmath142 , is precisely the local depth of the root node of @xmath142 .",
    "this ensures that when @xmath270 is applied to @xmath144 , every child cycle @xmath142 is mapped to @xmath404 $ ] , where @xmath405 is the local depth of the root node of @xmath142 .",
    "the effect of applying @xmath270 to a cycle @xmath144 rooted at local depth @xmath309 can be summarised as follows .",
    "there are two possible cases .",
    "firstly , if the base cycle @xmath143 of @xmath144 is longer than @xmath399 , every child of @xmath143 has local depth 0 . in this case",
    "@xmath320 is applied to every child cycle of @xmath143 . secondly ,",
    "if @xmath143 is not longer than @xmath399 , the first @xmath406 children of @xmath143 have local depth @xmath407 , and any remaining children in the same hedge have local depth 0 .",
    "consequently , @xmath408 is applied to the first @xmath406 children off @xmath141 , and @xmath320 to any remaining children off @xmath141 .    in the remainder of this section",
    "we prove the two claims we have made about @xmath270 .",
    "firstly , we show that @xmath270 is idempotent for every @xmath2 and @xmath309 . secondly , we prove that @xmath270 maps a cycle @xmath144 to @xmath183 if and only if @xmath144 is @xmath310$]-structured .    [ prop : idempotenceofr ] the cycle reduction operators @xmath270 are idempotent .",
    "we first note that from the definition of @xmath270 we have @xmath409\\big ] = { \\mathpzc{r}^{{\\mathpzc{k}};l}}\\big[(\\alpha)\\big ] = ( \\alpha)$ ] for any trivial walk @xmath35 and any @xmath314 .",
    "it thus remains only to prove that @xmath270 is idempotent for any cycle @xmath330 . to this end , let @xmath410 for @xmath411 and @xmath314 be the statement @xmath412\\big ] = { \\mathpzc{r}^{{\\mathpzc{k}};l}}\\big[c\\big],\\label{eq : idempotenceofrstatement}\\end{aligned}\\ ] ] where @xmath26 is the length of @xmath144 .",
    "we prove this statement for all @xmath26 and @xmath309 by induction on @xmath26 . for a given @xmath26 , the statements required to prove @xmath410 depend on @xmath309 .",
    "namely , @xmath410 for any @xmath413 requires both @xmath414 and @xmath415 for all @xmath416 , while @xmath417 only requires @xmath414 for all @xmath416 .",
    "+ _ inductive step .",
    "_ we wish to prove the statements @xmath418 we proceed by explicitly evaluating @xmath382 $ ] and @xmath419\\big]$ ] and showing that they are equal .",
    "let @xmath144 have decomposition @xmath420",
    "\\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_2}c_{2,j}\\right],\\end{aligned}\\ ] ] where @xmath421 .",
    "then two possibilities exist :    * @xmath422 .",
    "note that is necessarily the case if @xmath423 , since @xmath197 .",
    "then we see from the definition of @xmath270 that all of the parameters @xmath403 are zero , so that @xmath320 is applied to every child cycle @xmath142 .",
    "we find @xmath424 & = \\alpha\\mu_2\\cdots\\mu_l\\alpha \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_l}{\\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{l , j}\\big]\\right ] \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_2}{\\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{2,j}\\big]\\right]\\\\ & = \\alpha\\mu_2\\cdots\\mu_l\\alpha \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{k=1}^{m_l}{\\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{l , t_{l , k}}\\big]\\right ] \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{k=1}^{m_2}{\\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{2,t_{2,k}}\\big]\\right]\\end{aligned}\\ ] ] where @xmath425 is the number of cycles among @xmath426 that are not reduced to @xmath427 by @xmath320 , and @xmath428 are their indices , which we assume without loss of generality satisfy @xmath429 . now",
    "@xmath430\\big ] & = \\alpha\\mu_2\\cdots\\mu_l\\alpha \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{k=1}^{m_l}{\\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[{\\mathpzc{r}^{{\\mathpzc{k}};0}}[c_{l , t_{l , k}}]\\big]\\right ] \\operatorname{\\odot}\\cdots               \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{k=1}^{m_2}{\\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[{\\mathpzc{r}^{{\\mathpzc{k}};0}}[c_{2,t_{2,k}}]\\big]\\right]\\\\ & = \\alpha\\mu_2\\cdots\\mu_l\\alpha \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{k=1}^{m_l}{\\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{l , t_{l , k}}\\big]\\right ] \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{k=1}^{m_2}{\\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{2,t_{2,k}}\\big]\\right]\\\\ & = { \\mathpzc{r}^{{\\mathpzc{k}};l}}\\big[c\\big],\\end{aligned}\\ ] ] where the second equality follows from the induction hypotheses @xmath431 for @xmath432 and @xmath433 , where @xmath434 is the length of the cycle @xmath435 . +",
    "* @xmath436 .",
    "then the parameters @xmath403 depend on the indices @xmath437 . specifically , @xmath408 is applied to the first @xmath406 child cycles ( counting from the left ) , and @xmath320 is applied to any remaining child cycles .",
    "two possibilities exist : * * @xmath394 for every @xmath438 ; i.e.  every @xmath142 satisfies @xmath398 = ( \\mu_i)$ ] . then @xmath382 = ( \\alpha)$ ] , and @xmath419\\big ] = { \\mathpzc{r}^{{\\mathpzc{k}};l}}\\big[(\\alpha)\\big ] = ( \\alpha)$ ] . *",
    "* at least one of the indices @xmath439 is not equal to @xmath400 .",
    "let @xmath440 be the index set of those indices , so that @xmath441 if and only if @xmath442 . then @xmath424 & = \\begin{aligned}[t ] \\alpha\\mu_2\\cdots\\mu_l\\alpha \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_l}{\\mathpzc{r}^{{\\mathpzc{k}};l_{l , j}}}\\big[c_{l , j}\\big]\\right ] \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_2}{\\mathpzc{r}^{{\\mathpzc{k}};l_{2,j}}}\\big[c_{2,j}\\big]\\right]\\\\ \\end{aligned}\\\\ & = \\begin{aligned}[t ] \\alpha\\mu_2\\cdots\\mu_l\\alpha                   & \\operatorname{\\odot}{\\mathpzc{r}^{{\\mathpzc{k}};l+1}}\\big[c_{i_p , s_{i_p}}\\big ] \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j={s_{i_p}+1}}^{n_{i_p } } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{i_p , j}\\big]\\right]\\\\ & \\operatorname{\\odot}\\cdots\\\\                   & \\operatorname{\\odot}{\\mathpzc{r}^{{\\mathpzc{k}};l+1}}\\big[c_{i_1,s_{i_1}}\\big ] \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j={s_{i_1}+1}}^{n_{i_1 } } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{i_1,j}\\big]\\right ] \\end{aligned}\\end{aligned}\\ ] ] where the second equality is obtained on noting that it follows from the definition of @xmath390 that the first @xmath443 child cycles off each vertex @xmath141 are mapped to @xmath427 by @xmath408 .",
    "since trivial walks do not contribute to the nesting product , they can safely be deleted .",
    "thus , all cycles off @xmath141 ( for @xmath444 ) and the first @xmath445 cycles off @xmath141 ( for @xmath442 ) disappear .",
    "next we follow an analogous procedure to that outlined in case 1 ) above .",
    "let @xmath446 be the number of the @xmath447 cycles @xmath448 off @xmath449 that are not mapped to @xmath450 by @xmath320 , and let @xmath451 be the indices of these cycles . introducing analogous quantities for @xmath452 , we arrive at the final expression for @xmath382 $ ] : @xmath453 = \\begin{aligned}[t ] \\alpha\\mu_2\\cdots\\mu_l\\alpha                   & \\operatorname{\\odot}{\\mathpzc{r}^{{\\mathpzc{k}};l+1}}\\big[c_{i_p , s_{i_p}}\\big ] \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{k=1}^{m_p } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{i_p , t_{p , k}}\\big]\\right]\\\\ & \\operatorname{\\odot}\\cdots\\\\                   & \\operatorname{\\odot}{\\mathpzc{r}^{{\\mathpzc{k}};l+1}}\\big[c_{i_1,s_{i_1}}\\big ] \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{k=1}^{m_1 } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{i_1,t_{1,k}}\\big]\\right ]",
    ". \\end{aligned}\\ ] ] we now wish to apply @xmath270 to this result .",
    "since the base cycle of @xmath316 $ ] has length @xmath436 , we first need to evaluate the indices @xmath454 , where @xmath455 is the index of the first cycle among the children @xmath456 $ ] , @xmath457 $ ] ,  , @xmath458 $ ] that is not mapped to @xmath450 by @xmath408 .",
    "we claim that @xmath459 .",
    "the proof of this is straightforward : by the definition of @xmath460 , we know that @xmath461 satisfies @xmath462 \\neq ( \\mu_{i_1})$ ] .",
    "further , from the induction hypothesis @xmath463 , where @xmath464 is the length of @xmath461 , we have @xmath465\\big ] = { \\mathpzc{r}^{{\\mathpzc{k}};l+1}}[c_{i_1,s_{i_1}}]$ ] .",
    "thus @xmath465\\big ] \\neq ( \\mu_{i_1})$ ] , which proves our claim that @xmath459 .",
    "an analogous argument shows that @xmath466 .",
    "thus , applying @xmath270 to eq .",
    "yields @xmath430\\big ] & = \\begin{aligned}[t ] \\alpha\\mu_2\\cdots\\mu_l\\alpha                   & \\operatorname{\\odot}{\\mathpzc{r}^{{\\mathpzc{k}};l+1}}\\big[{\\mathpzc{r}^{{\\mathpzc{k}};l+1}}[c_{i_p , s_{i_p}}]\\big ] \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{k=1}^{m_p } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[{\\mathpzc{r}^{{\\mathpzc{k}};0}}[c_{i_p , t_{p , k}}]\\big]\\right]\\\\ & \\operatorname{\\odot}\\cdots\\\\                   & \\operatorname{\\odot}{\\mathpzc{r}^{{\\mathpzc{k}};l+1}}\\big[{\\mathpzc{r}^{{\\mathpzc{k}};l+1}}[c_{i_1,s_{i_1}}]\\big ] \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{k=1}^{m_1 } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[{\\mathpzc{r}^{{\\mathpzc{k}};0}}[c_{i_1,t_{1,k}}]\\big]\\right ] \\end{aligned}\\\\ & =   { \\mathpzc{r}^{{\\mathpzc{k}};l}}\\big[c\\big]\\end{aligned}\\ ] ] where the second equality follows on noting that the right - hand side of eq .",
    "is recovered immediately upon using the induction hypotheses @xmath467 for @xmath468 and @xmath469 , where @xmath470 is the length of @xmath471 , and @xmath472 for @xmath469 , where @xmath473 is the length of @xmath474 .",
    "+    _ base case . _",
    "we wish to prove that @xmath475 holds for all @xmath314 .",
    "since the only cycle of length 1 is the loop @xmath75 , this corresponds to the claim that @xmath476\\big ] = { \\mathpzc{r}^{{\\mathpzc{k}};l}}\\big[\\alpha\\alpha\\big].\\end{aligned}\\ ] ] we identify two cases :    * @xmath477 .",
    "then @xmath478 , so @xmath479 = ( \\alpha)$ ] and @xmath480 = { \\mathpzc{r}^{{\\mathpzc{k}};l}}[(\\alpha ) ] = ( \\alpha)$ ] .",
    "* @xmath481 . since @xmath197 , @xmath482 = \\alpha\\alpha$ ] , and @xmath483\\big ] = { \\mathpzc{r}^{{\\mathpzc{k}};d}}[\\alpha\\alpha ] = \\alpha\\alpha$ ] .",
    "we now prove the claim that @xmath270 maps a cycle @xmath144 to the trivial walk @xmath183 if and only if @xmath144 is @xmath310$]-structured .",
    "we begin by defining the set of all @xmath2-structured cycles on @xmath1 .",
    "[ defn : ckcyclesets ] recall from definition [ defn : kstructuredcycles ] that , given a dressing signature @xmath206 $ ] , a cycle @xmath144 is @xmath2-structured if and only if the base cycle of @xmath144 has length no greater than @xmath194 and any children of @xmath144 are @xmath204$]-structured .",
    "it follows that the set of all @xmath2-structured cycles off @xmath23 on @xmath1 , denoted by @xmath209 , is given by @xmath484\\ : * } \\operatorname{\\odot}\\cdots \\operatorname{\\odot}c_{{\\mathcal{g}}\\backslash\\alpha;\\mu_2}^{[k_1,\\ldots , k_{d-1},0]\\ : * } & \\text{otherwise , } \\end{cases}\\end{aligned}\\ ] ] where @xmath203 is the depth of @xmath2 , @xmath485 is a simple cycle of length @xmath49 off @xmath23 on @xmath1 , and @xmath204 $ ] is the dressing signature obtained by deleting the first element of @xmath2 .",
    "further , the set of all @xmath2-structured cycles on @xmath1 is given by @xmath486    [ prop : trivialequivalentcycles ] let @xmath144 be a cycle off @xmath23 on a digraph @xmath1 , and @xmath287 $ ] be a dressing signature of depth @xmath203 .",
    "then @xmath382 = ( \\alpha)$ ] if and only if @xmath487}$ ] , for @xmath314 .",
    "note firstly that @xmath488}$ ] is empty , and so the statement is vacuously true for @xmath481 .",
    "it remains to prove that @xmath424 = ( \\alpha ) \\iff c \\in c_{{\\mathcal{g}};\\alpha}^{[k_l,\\ldots , k_{d-1},0]}\\end{aligned}\\ ] ] for @xmath489 .",
    "we prove the forward and backward directions separately . before beginning the proof",
    "proper we note that it follows from definition [ defn : ckcyclesets ] that a cycle is an element of @xmath490}$ ] for @xmath413 if and only if its decomposition is of the form    [ eqn : prop : formofdecomp ] @xmath491 \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\bigg[\\operatorname*{\\bigodot}_{j=1}^{n_2}c_{2,j}\\bigg]\\end{aligned}\\ ] ] where @xmath492 is a simple cycle of length @xmath436 off @xmath23 , @xmath385 is the number of child cycles off @xmath141 , and @xmath493}\\end{aligned}\\ ] ] for @xmath432 and @xmath140 .",
    "+ * forward . * for @xmath413 ,",
    "let @xmath494 be the statement @xmath495 = ( \\alpha ) \\implies c \\in c_{{\\mathcal{g}};\\alpha}^{[k_l,\\ldots , k_{d-1},0]}.\\end{aligned}\\ ] ] we will prove this by showing that the equality @xmath382 = ( \\alpha)$ ] implies that @xmath144 has the structure described in eq .",
    ", so that @xmath144 is an element of @xmath496}$ ] . the proof proceeds by induction on the parameter @xmath309 , starting at @xmath497 and working downwards to @xmath498 . within the forward part of the proof , we assume that @xmath144 has decomposition @xmath499 \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{m_2}b_{2,j}\\right],\\end{aligned}\\ ] ] where @xmath500 is a simple cycle of length @xmath501 off @xmath23",
    ", @xmath502 is the number of children off @xmath503 for @xmath504 , and @xmath505 for @xmath150 .",
    "+ _ inductive step . _",
    "the inductive step is the statement @xmath506 for @xmath507 . referring to definition [ defn : cyclereductionoperator ]",
    ", we find that @xmath316 = ( \\alpha)$ ] implies that @xmath508 and @xmath509 for every @xmath3 .",
    "then from the definition of @xmath390 , it follows that @xmath510 = ( \\beta_i)$ ] for all @xmath511 .",
    "then from the induction hypothesis @xmath512 we have that @xmath513}$ ] .",
    "thus the decomposition of @xmath144 has the structure of eq .  ,",
    "and @xmath144 is in @xmath490}$ ] .",
    "+ _ base case . _",
    "we wish to prove the statement @xmath514 . in this case",
    ", @xmath515 = ( \\alpha)$ ] implies that @xmath516 and all child cycles @xmath517 ( if any ) satisfy @xmath518 = ( \\beta_i)$ ] . note that a necessary condition for @xmath518 = ( \\beta_i)$ ] is that @xmath519 , where @xmath520 is the length of the base cycle of @xmath517 .",
    "however , by the definition of a dressing signature we have @xmath197 . since there are no cycles with length 0 , there are no cycles that satisfy @xmath518 = ( \\beta_i)$ ] .",
    "thus , @xmath144 does not have any children ; i.e.  @xmath521 for all @xmath3 .",
    "then @xmath144 is a simple cycle of length @xmath516 , and is an element of @xmath522}_{{\\mathcal{g}};\\alpha } = \\bigcup_{l=1}^{k_{d-1 } } c_{{\\mathcal{g}};\\alpha;l}$ ] . +",
    "* backward . * for @xmath413 , let @xmath494 be the statement @xmath523 } \\implies { \\mathpzc{r}^{{\\mathpzc{k}};l}}\\big[c\\big ] = ( \\alpha).\\end{aligned}\\ ] ] since @xmath144 is an element of @xmath490}$ ] , its decomposition is of the form given in eq .  .",
    "in particular , the length of the base cycle of @xmath144 is @xmath436 .",
    "thus to prove @xmath494 it is sufficient to show that @xmath394 for all @xmath438 : that is , that all of the @xmath524 children @xmath142 off @xmath141 satisfy @xmath398 = ( \\mu_i)$ ] .",
    "the proof again proceeds by induction on the parameter @xmath309 , from @xmath497 down to @xmath498 .",
    "+ _ inductive step . _",
    "the inductive step is the statement @xmath506 for @xmath507 . from eq .",
    ", we see that @xmath525}$ ] for @xmath432 and @xmath526 .",
    "then from the induction hypothesis @xmath512 we have @xmath527 = ( \\mu_i)$ ] , so that @xmath528 for all @xmath438 .",
    "it then follows from the definition of @xmath270 that @xmath316 = ( \\alpha)$ ] .",
    "+ _ base case . _",
    "the base case of the induction is the statement @xmath514 .",
    "then @xmath144 is a member of @xmath522}_{{\\mathcal{g}};\\alpha}$ ] ; that is , a simple cycle of length no greater than @xmath529 .",
    "since @xmath144 has no children , we have @xmath530 for all @xmath432 , and so @xmath531 = ( \\alpha)$ ] .",
    "having defined the cycle reduction operators @xmath270 , we are now in a position to give the explicit definition of the walk reduction operator @xmath10 . as noted , the action of @xmath10 on a walk @xmath21 is to remove all resummable cycles from @xmath21 , thereby projecting @xmath21 to its @xmath2-irreducible core walk @xmath187 \\in i^{\\mathpzc{k}}_{{\\mathcal{g}}}$ ] .",
    "[ defn : walkreductionoperator ] let @xmath1 be a digraph and @xmath2 be a dressing signature .",
    "then the walk reduction operator @xmath182 is a map on @xmath0 defined as follows .",
    "let @xmath21 be a walk on @xmath1 with decomposition ( cf .",
    ") @xmath532 \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_2 } c_{2,j}\\right ] \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_1 } c_{1,j}\\right],\\end{aligned}\\ ] ] where @xmath533 is a simple path of length @xmath534 on @xmath1 , @xmath385 is the number of child cycles off @xmath141 , and @xmath138 is a cycle off @xmath141 .",
    "then @xmath10 maps @xmath21 to @xmath535 = \\alpha\\mu_2\\cdots\\mu_m\\omega \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_{m+1 } } { \\mathpzc{r}^{{\\mathpzc{k}};\\,0}}\\big[c_{m+1,j}\\big]\\right ] \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_2 } { \\mathpzc{r}^{{\\mathpzc{k}};\\,0}}\\big[c_{2,j}\\big ] \\right ] \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_1 } { \\mathpzc{r}^{{\\mathpzc{k}};\\,0}}\\big[c_{1,j}\\big]\\right]\\end{aligned}\\ ] ] where @xmath320 is the cycle reduction operator of definition [ defn : cyclereductionoperator ] .",
    "we now prove that @xmath10 is idempotent , thus showing that the explicit definition we give here satisfies property p1 of definition [ defn : reductiondressingaxioms ] .",
    "[ prop : idempotenceofr ] the walk reduction operator @xmath10 is idempotent .",
    "the proof follows straightforwardly from the fact that @xmath320 is idempotent .",
    "let @xmath238 be a walk on @xmath1 with decomposition @xmath536 \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_1}c_{1,j}\\right]\\end{aligned}\\ ] ] where @xmath537 is a simple path of length @xmath538 and @xmath138 for @xmath539 and @xmath140",
    ". then @xmath535 & = \\alpha\\mu_2\\cdots\\mu_l\\omega \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_{l+1}}{\\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{l+1,j}\\big]\\right ] \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_1}{\\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{1,j}\\big]\\right]\\nonumber\\\\ & = \\alpha\\mu_2\\cdots\\mu_l\\omega \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{k=1}^{m_{l+1}}{\\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{l+1,t_{l+1,k}}\\big]\\right ] \\operatorname{\\odot}\\cdots         \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{k=1}^{m_1}{\\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{1,t_{1,k}}\\big]\\right]\\label{eqn : idempotenceofr : onereduc}\\end{aligned}\\ ] ] where @xmath425 for @xmath540 is the number of cycles among @xmath426 that are not mapped to @xmath427 by @xmath320 , and @xmath428 are their indices , which we assume without loss of generality to satisfy @xmath429 . applying @xmath10 again to this result gives @xmath541\\big ] & = \\alpha\\mu_2\\cdots\\mu_l\\omega         \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{k=1}^{m_{l+1}}{\\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[{\\mathpzc{r}^{{\\mathpzc{k}};0}}[c_{l+1,t_{l+1,k}}]\\big]\\right ] \\operatorname{\\odot}\\cdots         \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{k=1}^{m_1}{\\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[{\\mathpzc{r}^{{\\mathpzc{k}};0}}[c_{1,t_{1,k}}]\\big]\\right]\\\\ & = { \\mathpzc{r}^{\\!{\\mathpzc{k}}}}\\big[w\\big],\\end{aligned}\\ ] ] where the second equality is obtained on noting that @xmath320 is idempotent ( see proposition [ prop : idempotenceofr ] ) and comparing with eq .  .",
    "recall from section [ sec:42:randdeltamotivation ] that the set of @xmath272-irreducible cycles off @xmath23 on @xmath1 , denoted by @xmath334 , is the set of all cycles off @xmath23 on @xmath1 that satisfy @xmath542 = q$ ] , where @xmath270 is defined in section [ sec : cyclereductionoperators ] .",
    "the @xmath272-irreducible cycles are of central importance in defining the set of @xmath2-irreducible walks . in this section",
    "we use the definition of @xmath270 given in defn .",
    "[ defn : cyclereductionoperator ] to develop an explicit recursive formula for @xmath334 .    to understand the structure of the cycles that appear in @xmath334 , let us consider what structure a cycle must have in order to be @xmath272-irreducible .",
    "we begin by addressing the question of which simple cycles off @xmath23  if any  are @xmath272-irreducible .",
    "let @xmath543 be a simple cycle off @xmath23 on @xmath1 .",
    "since @xmath143 has no child cycles , the action of @xmath270 on @xmath143 is straightforward : referring to definition [ defn : cyclereductionoperator ] we find @xmath544 = s$ ] if @xmath422 , and @xmath544 = ( \\alpha)$ ] if @xmath436 .",
    "thus every simple cycle that is longer than @xmath399 is @xmath272-irreducible , while every simple cycle that is shorter than @xmath399 is not .",
    "however , in the latter case it is easy to modify @xmath143 so as to obtain a @xmath272-irreducible cycle .",
    "the simplest way is to add a single child cycle off an internal vertex of @xmath143 .",
    "explicitly , consider adding a child @xmath144 off an arbitrary internal vertex of @xmath143 . then @xmath545 = \\begin{cases } ( \\alpha ) & \\text{if $ { \\mathpzc{r}^{{\\mathpzc{k}};l+1}}[c ] = h(c)$,}\\\\ \\alpha\\mu_2\\cdots\\mu_l\\alpha \\operatorname{\\odot}{\\mathpzc{r}^{{\\mathpzc{k}};l+1}}[c ] & \\text{else . }",
    "\\end{cases}\\end{aligned}\\ ] ] it follows that if @xmath546 = c$ ] , then @xmath547 =   \\alpha\\mu_2\\cdots\\mu_l\\alpha \\operatorname{\\odot}c$ ] . in other words , although a simple cycle of length less than or equal to @xmath399 is itself not @xmath272-irreducible , it can be extended into a @xmath272-irreducible cycle by the simple step of nesting a @xmath548-irreducible child off one of its internal vertices .",
    "this reasoning also holds for the case where one @xmath548-irreducible child is nested off each vertex of a non - empty subset @xmath549 of the internal vertices of @xmath143 . for example , if @xmath550 , @xmath551 , and @xmath552 are @xmath548-irreducible cycles off @xmath553 and @xmath554 respectively , then @xmath555 , @xmath556 , and @xmath557 are all @xmath272-irreducible .",
    "this line of reasoning shows that every element of the following set is @xmath272-irreducible : @xmath558 where @xmath50 is the set of simple cycles of length @xmath49 off @xmath23 , @xmath492 is a simple cycle of length @xmath49 off @xmath23 , and @xmath440 is a non - empty subset of @xmath559 that indexes @xmath133 internal vertices of @xmath492 , where @xmath560 .",
    "[ we denote the set of all non - empty subsets of @xmath559 by @xmath561 .    although every element of the set given in eq .",
    "is @xmath272-irreducible , not every @xmath272-irreducible cycle appears in eq .  :",
    "other @xmath272-irreducible cycles can be constructed by taking an element @xmath144 of this set and adding one or more child cycles off its internal vertices .",
    "these child cycles must be carefully chosen so that their presence does not spoil the @xmath272-irreducibility of the entire cycle .",
    "the structure that the child cycles are permitted to have can be determined from the action of @xmath270 .",
    "there are two cases , corresponding to the two subsets that are braced in eq .  .",
    "consider first the case where @xmath144 comes from the first braced term : i.e.  @xmath144 is a simple cycle longer than @xmath399 .",
    "then @xmath316 $ ] applies @xmath320 to every immediate child of @xmath144 .",
    "it follows that so long as every child cycle we add is @xmath562-irreducible , the new cycle produced from @xmath144 remains @xmath272-irreducible .",
    "alternatively , consider the case where @xmath144 comes from the second braced term .",
    "then its base cycle is not longer than @xmath399 , and at least one internal vertex of the base cycle has precisely one child , which is @xmath548-irreducible .",
    "consider adding further children to @xmath144 .",
    "then @xmath316 $ ] applies @xmath563 $ ] to the first child off each vertex , and ( since the first child is @xmath548-irreducible and is thus not mapped to a trivial walk ) @xmath320 to all subsequent children .",
    "thus as long as the child cycles we add are ( i ) attached to a vertex that already has a child , ( ii ) positioned _ after _ the first child , and ( iii ) @xmath562-irreducible , the resultant cycle remains @xmath272-irreducible .",
    "we therefore conclude that a cycle is @xmath272-irreducible if and only if ( a ) its base cycle is longer than @xmath399 , and all of its immediate child cycles ( if any ) are @xmath562-irreducible ; or ( b ) its base cycle is not longer than @xmath399 , it has at least one child cycle , and the first child cycle off a given vertex is @xmath548-irreducible and all subsequent children ( if any ) in that hedge are @xmath562-irreducible .",
    "we formalise this statement in the following theorem .",
    "[ thm : structureofqkl ] let @xmath1 be a digraph and @xmath2 be a dressing signature of depth @xmath203 .",
    "then for @xmath314 the set of all @xmath272-irreducible cycles off @xmath23 on @xmath1 is @xmath564 & \\operatorname{\\odot}q^{{\\mathpzc{k}};l+1}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{i_p-1};\\mu_{i_p } } \\operatorname{\\odot}q^{{\\mathpzc{k}};0\\:*}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{i_p-1};\\mu_{i_p } } \\\\ & \\operatorname{\\odot}\\cdots \\\\ & \\operatorname{\\odot}q^{{\\mathpzc{k}};l+1}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{i_1 - 1};\\mu_{i_1 } } \\operatorname{\\odot}q^{{\\mathpzc{k}};0\\:*}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{i_1}-1;\\mu_{i_1 } } \\end{aligned } \\nonumber\\end{aligned}\\ ] ] where @xmath565 is a simple cycle of length @xmath566 off @xmath23 , @xmath492 is a simple cycle of length @xmath436 off @xmath23 , and @xmath440 is a non - empty subset of @xmath559 containing the indices of at least one internal vertex of @xmath492 .",
    "theorem [ thm : structureofqkl ] corresponds to the statement that a cycle off @xmath23 on @xmath1 is @xmath272-irreducible if and only if it is an element of @xmath334 ; that is @xmath567 = c.\\nonumber\\end{aligned}\\ ] ] we prove the forward and backward directions of this statement separately .",
    "the proof proceeds by induction on the number of vertices in @xmath1 .",
    "we begin with a general remark that will be required in both sections of the proof .",
    "+ from eq .   and the discussion preceding it",
    ", it follows that a cycle @xmath144 is in @xmath334 if and only if one of two conditions holds . in each case",
    "we denote the base cycle of @xmath144 by @xmath143 .    1 .",
    "if @xmath143 is longer than @xmath399 and all immediate children of @xmath143 are @xmath562-irreducible , then @xmath144 appears in the first line of eq .  , and has decomposition @xmath568 \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\bigg[\\operatorname*{\\bigodot}_{j=1}^{n_2 } c_{2,j}\\bigg]\\label{eqn : structureofqkl : forma1}\\end{aligned}\\ ] ] where @xmath422 , @xmath385 for @xmath438 , and @xmath569 for @xmath140 .",
    "if @xmath143 is not longer than @xmath399 , has at least one child , and the first child off each internal vertex of @xmath143 is @xmath548-irreducible and any remaining children in the same hedge are @xmath562-irreducible , then @xmath144 appears in the second part of eq .  .",
    "then @xmath144 has decomposition + [ eqn : structureofqkl : formbgroup ] @xmath570 \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_{i_1 } } c_{i_1,j}\\right]\\label{eqn : structureofqkl : formb1}\\end{aligned}\\ ] ] where @xmath436 , @xmath571 is a non - empty subset of @xmath572 , @xmath573 for @xmath469 , and @xmath574 q^{{\\mathpzc{k}};0}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{i_k-1};i_k } & \\text{else . }",
    "\\end{cases}\\label{eqn : structureofqkl : formb2}\\end{aligned}\\ ] ]    in the forward direction of the proof , we show that any cycle @xmath144 that has the structure of eq .   or eq .   satisfies @xmath316 = c$ ] . in the backward direction ,",
    "we show that any cycle that satisfies @xmath316 = c$ ] must have the structure of either eq .   or eq .  ,",
    "and so is an element of @xmath334 . + * forward .",
    "* let @xmath411 be the number of vertices in @xmath1 , and @xmath575 for @xmath411 and @xmath307 be the statement @xmath576 = c. \\nonumber\\end{aligned}\\ ] ] we prove this statement for all @xmath26 and @xmath309 by induction on @xmath26 .",
    "for a given @xmath26 , the statements required to prove @xmath575 depend on @xmath309 . specifically , @xmath575 for any @xmath413 requires @xmath577 and @xmath578 for all @xmath416 , while @xmath579 only requires @xmath580 for @xmath416 .",
    "+ _ inductive step . _",
    "the inductive step corresponds to the statements @xmath581 as noted above , given an element @xmath144 of @xmath334 , there are two possibilities :    * the base cycle of @xmath144 is longer than @xmath399 ( note that this is necessarily the case if @xmath481 , since @xmath197 )",
    ". then @xmath144 has the form of eq .  , and since @xmath395 applies @xmath320 to every child cycle , we have @xmath396 & = \\alpha\\mu_2\\cdots\\mu_l\\alpha \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_l } { \\mathpzc{r}^{{\\mathpzc{k}};\\,0}}\\big[c_{l , j}\\big]\\right ] \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_2 } { \\mathpzc{r}^{{\\mathpzc{k}};\\,0}}\\big[c_{2,j}\\big]\\right ] \\\\ & = \\alpha\\mu_2\\cdots\\mu_l\\alpha \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_l } c_{l , j}\\right ] \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_2 } c_{2,j}\\right]\\\\ & = c,\\end{aligned}\\ ] ] where the second equality follows from the induction hypotheses @xmath582 for @xmath432 , where @xmath583 is the number of vertices in @xmath584 . + * the base cycle of @xmath144 is not longer than @xmath399",
    ". then @xmath144 has the form of eq .  .",
    "in this case applying @xmath395 to @xmath144 applies @xmath585 to the first @xmath586 children off a given internal vertex @xmath141 , and @xmath320 to any remaining children .",
    "recall from  [ sec : cyclereductionoperators ] that @xmath390 is the index of the first child off @xmath141 that satisfies @xmath391 \\neq ( \\mu_i)$ ] .",
    "we claim that @xmath587 .",
    "this can be proven as follows . from eq .  , we have that @xmath588 is an element of @xmath589 . since @xmath427 is not in @xmath589",
    "( see e.g.  defn .",
    "[ defn : klirreduciblecycles ] ) it follows that @xmath590 . by the induction hypothesis @xmath591 , where @xmath583 is the number of vertices in @xmath592",
    ", we have that @xmath593 = c_{i,1}$ ] .",
    "thus @xmath593 \\neq ( \\mu_i)$ ] , and @xmath587 .",
    "since this argument holds for @xmath594 , we have @xmath595 , so that @xmath424 & = \\alpha\\mu_2\\cdots\\mu_l\\alpha               \\operatorname{\\odot}\\left[c_{i_p,1}\\operatorname{\\odot}\\operatorname*{\\bigodot}_{j=2}^{n_{i_p } } { \\mathpzc{r}^{{\\mathpzc{k}};0}}[c_{i_p , j}]\\right ]              \\operatorname{\\odot}\\cdots              \\operatorname{\\odot}\\left[c_{i_1,1}\\operatorname{\\odot}\\operatorname*{\\bigodot}_{j=2}^{n_{i_1 } } { \\mathpzc{r}^{{\\mathpzc{k}};0}}[c_{i_1,j}]\\right]\\\\ & =    \\alpha\\mu_2\\cdots\\mu_l\\alpha \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_{i_p } } c_{i_p , j}\\right ] \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_{i_1 } } c_{i_1,j}\\right]\\\\ & = c,\\end{aligned}\\ ] ] where in obtaining the first equality we have already used the fact that @xmath593 = c_{i,1}$ ] for @xmath596 , and the second equality follows from applying the induction hypotheses @xmath597 , where @xmath473 is the number of vertices in the graph @xmath598 . +    _ base case . _",
    "the base case of the induction is the statement @xmath599 for @xmath314 .",
    "we prove this statement by considering each of the two possible graphs on a single vertex .",
    "* @xmath1 has no loop .",
    "then there are no cycles on @xmath1 , so @xmath334 is empty for every @xmath309 , and @xmath599 is vacuously true .",
    "* @xmath1 has a loop .",
    "then there are two possibilities : * * @xmath413 .",
    "then @xmath334 is empty , and @xmath599 is vacuously true . * * @xmath600 . then @xmath601 . since @xmath482 = \\alpha\\alpha$ ] , then @xmath602 holds . +    * backward .",
    "* let @xmath411 be the number of vertices in @xmath1 , and @xmath575 for @xmath411 and @xmath603 be the statement @xmath396 = c \\implies c\\in q^{{\\mathpzc{k}};l}_{{\\mathcal{g}};\\alpha}.\\end{aligned}\\ ] ] the proof again proceeds by induction on @xmath26 , with the same dependency structure as in the forward direction .",
    "+ _ inductive step . _",
    "the inductive step corresponds to the statements @xmath581 let the decomposition of @xmath144 into a simple cycle and a collection of cycles be @xmath420 \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_2}c_{2,j}\\right]\\label{eqn : structureofqkl : decompofc}\\end{aligned}\\ ] ] where @xmath385 for @xmath432 , and @xmath138 for @xmath526 .",
    "we will show that it follows from @xmath604 $ ] that the decomposition of @xmath144 is of the form of either eq .   or eq .  , so that @xmath144 is in @xmath334 . indeed ,",
    "consider @xmath316 $ ] ; then there are two possibilities :    * @xmath422",
    ". then @xmath270 applies @xmath320 to every child of c , and the equality @xmath605 $ ] corresponds to @xmath606          \\operatorname{\\odot}\\cdots          \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_2}c_{2,j}\\right]\\\\          =          \\alpha\\mu_2\\cdots\\mu_l\\alpha          \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_l}{\\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{l , j}\\big]\\right ]          \\operatorname{\\odot}\\cdots          \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_2}{\\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{2,j}\\big]\\right ]      \\end{gathered}\\ ] ] since the decomposition of a cycle into a simple cycle plus a collection of cycles is unique @xcite , this equality can only be satisfied if @xmath607 $ ] for all @xmath142 .",
    "in other words , in order for the entire cycle @xmath144 to remain unmodified by @xmath270 , each of the children @xmath142 must remain unmodified by @xmath320 .",
    "it then follows from the induction hypotheses @xmath582 , where @xmath583 is the number of vertices in @xmath592 ( i.e.  the graph on which @xmath142 exists ) that @xmath569 .",
    "then @xmath144 has the form of eq .  , and",
    "so appears in @xmath334 .",
    "* @xmath436 . in this case",
    "@xmath382 $ ] depends on the indices @xmath439 .",
    "recall that @xmath390 is the index of the first child off @xmath141 that is not @xmath310$]-structured , with @xmath394 if no such child exists",
    ". then @xmath316 = ( \\alpha)$ ] if and only if @xmath394 for every @xmath608 .",
    "+ it is convenient to explicitly divide the vertices @xmath141 into those which have no children , and those which have at least one child .",
    "let @xmath609 be the index set of the vertices that have at least one child , so that @xmath610 if and only if @xmath442 . then the decomposition of @xmath144 is @xmath611          \\operatorname{\\odot}\\cdots          \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_{i_1}}c_{i_1,j}\\right ] \\label{eqn : structureofqkl : cstruc }      \\end{aligned}\\ ] ] then @xmath612 . recall that if every @xmath613 , then @xmath316 = ( \\alpha)$ ] .",
    "thus if ( i ) @xmath614 is empty , or ( ii ) @xmath614 is not empty but @xmath394 for every @xmath442 , then @xmath316 = ( \\alpha)$ ] .",
    "however , it follows from the fact that @xmath382 = c$ ] that @xmath382 \\neq ( \\alpha)$ ] .",
    "thus we have that @xmath614 is not empty and at least one of the @xmath615 is smaller than @xmath400 . from definition [ defn : cyclereductionoperator ]",
    "we find that @xmath316 $ ] evaluates to @xmath616 = \\alpha\\mu_2\\cdots\\mu_l\\alpha      \\begin{aligned}[t ]      & \\operatorname{\\odot}{\\mathpzc{r}^{{\\mathpzc{k}};l+1}}\\big[c_{i_p , s_{i_p}}\\big ]      \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j = s_{i_p}+1}^{n_{i_p } } { \\mathpzc{r}^{{\\mathpzc{k}};0}}[c_{i_p , j}]\\right]\\\\      & \\operatorname{\\odot}\\cdots \\\\      & \\operatorname{\\odot}{\\mathpzc{r}^{{\\mathpzc{k}};l+1}}\\big[c_{i_1,s_{i_1}}\\big ]      \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j = s_{i_1}+1}^{n_{i_1 } } { \\mathpzc{r}^{{\\mathpzc{k}};0}}[c_{i_1,j}]\\right ] ,      \\end{aligned}\\ ] ] where we have deleted the first @xmath445 cycles off @xmath141 for @xmath442 , since these cycles are all mapped to @xmath427 by @xmath408 and do not contribute to the nesting product . comparing eq .   to this expression",
    ", we find that the equality @xmath604 $ ] can only hold if @xmath617      \\operatorname{\\odot}\\operatorname*{\\bigodot}_{j = s_{i}+1}^{n_{i } } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{i , j}\\big]\\label{eqn : structureofqkl : concat }      \\end{aligned}\\ ] ] for every @xmath442 .",
    "we now note that each of the terms on each side of this expression is a cycle , and the nesting operation on cycles is equivalent to concatenation . the equality in eq .",
    "thus requires that the number of terms on each side is the same : thus @xmath587 .",
    "further , since concatenation is non - commutative , the cycles must match term - wise : i.e.  @xmath618 $ ] and @xmath619 $ ] for @xmath620 .",
    "in other words , @xmath144 can only remain unmodified by @xmath270 if for each of its vertices that have children , the first child remains unmodified by @xmath408 and any subsequent children remain unmodified by @xmath320 . then by the induction hypotheses @xmath591 and @xmath582 , where @xmath583 is the number of vertices in @xmath592",
    ", we have @xmath621 and @xmath622 for @xmath620 . since this argument holds for every @xmath442 , @xmath144 has the form given in eq .  ,",
    "and so is an element of @xmath334 .",
    "_ base case .",
    "_ the base case of the induction is @xmath599 for @xmath623 .",
    "we prove this statement by considering each of the two possible graphs on a single vertex .",
    "* @xmath1 has no loop .",
    "then @xmath1 contains no cycles , so there is no such cycle @xmath144 such that @xmath624 $ ] , and @xmath599 holds vacuously .",
    "* @xmath1 has a loop @xmath75 of length @xmath625 .",
    "then we have one of two cases : * * @xmath626 .",
    "then @xmath436 since @xmath478 , and @xmath479 = ( \\alpha)$ ] .",
    "therefore there is no cycle on @xmath1 that satisfies @xmath624 $ ] , and @xmath599 is vacuously true . * * @xmath481 .",
    "then @xmath627 since @xmath197 , and @xmath75 satisfies @xmath482 = \\alpha\\alpha$ ] .",
    "further , we have that @xmath601 .",
    "thus @xmath628 , and @xmath602 is true .    in this section",
    "we gave an explicit definition for @xmath334 , the set of all @xmath272-irreducible cycles off @xmath23 on @xmath1 .",
    "this set plays a central role in the definition of the set of @xmath2-irreducible walks , which we address in the following section .",
    "recall that the set of @xmath2-irreducible walks from @xmath23 to @xmath24 on @xmath1 , denoted @xmath629 , is the set of all walks on @xmath1 from @xmath23 to @xmath24 that satisfy @xmath187 = w$ ] , where @xmath10 is the walk reduction operator defined in section [ sec : walkreductionoperators ] . in this section",
    "we give an explicit recursive form for @xmath629 .",
    "since we have already developed an explicit expression for the set of @xmath272-irreducible cycles in the previous section , the form of the @xmath2-irreducible walks is relatively straightforward .",
    "recall that by the definition of @xmath10 in section [ sec : walkreductionoperators ] , applying @xmath10 to a walk @xmath21 leaves the base path @xmath133 of @xmath21 untouched and maps every immediate child cycle @xmath144 of @xmath133 to @xmath630 $ ] .",
    "it follows that @xmath21 is left unmodified by @xmath10 if and only if every one of the child cycles @xmath144 is unmodified by @xmath320  or in other words , if every child cycle is @xmath562-irreducible .",
    "this observation is formalised and proven in the following theorem .",
    "[ thm : structureofik ] let @xmath1 be a digraph and @xmath2 be a dressing signature .",
    "then the set of @xmath2-irreducible walks from @xmath23 to @xmath24 on @xmath1 is given by @xmath631 where @xmath632 is a simple path of length @xmath538 from @xmath23 to @xmath633 on @xmath1 , and @xmath634 is the set of all @xmath272-irreducible cycles off @xmath23 on @xmath1 , as defined in theorem [ thm : structureofqkl ] .",
    "this result is universally valid in that for any chosen dressing signature @xmath2 , the set of @xmath2-irreducible walks is given by eq .  .",
    "in view of this , it is worth investigating the predictions of eq .   in the limiting cases of @xmath635",
    "$ ] and @xmath636 .    in the case of",
    "@xmath635 $ ] , no cycles are resummable and all cycles are @xmath2-irreducible : thus @xmath637;0}_{{\\mathcal{g}};\\alpha } = c_{{\\mathcal{g}};\\alpha}$ ] .",
    "then the right - hand side of eq .   becomes @xmath41 @xmath638 @xmath639 @xmath640 , which we recognize from eq .   as the prime decomposition of @xmath33 .",
    ".   reduces to @xmath641}_{{\\mathcal{g}};\\alpha\\omega } = w_{{\\mathcal{g}};\\alpha\\omega}$ ] , reproducing the expected result that all walks on @xmath1 are [ 0]-irreducible .",
    "conversely , in the case of @xmath642 , all cycles are resummable and no cycles are @xmath2-irreducible , so that @xmath643",
    ".   gives @xmath644 .",
    "this is perfectly consistent with the observations that ( i ) the @xmath645-irreducible walks are those that do not contain any resummable cycles , and ( ii ) all cycles are resummable with respect to @xmath645 .    for dressing signatures between",
    "@xmath213 $ ] and @xmath645 , the @xmath2-irreducible walks interpolate smoothly between the set of all walks and the set of simple paths .",
    "recall that a walk is @xmath2-irreducible if and only if @xmath240 = w$ ] .",
    "thus theorem [ thm : structureofik ] corresponds to the statement @xmath646 = w.\\end{aligned}\\ ] ] we prove the forward and backward directions of this statement separately . in each direction",
    "the result follows straightforwardly from theorem [ thm : structureofqkl ] .",
    "before we begin , we note that a walk is in @xmath647 if and only if its decomposition into a simple path plus a collection of cycles has the form @xmath648",
    "\\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_2 } q_{2,j } \\right ] \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_1 } q_{1,j } \\right]\\end{aligned}\\ ] ] where @xmath537 is a simple path , @xmath385 , and @xmath649 for @xmath540 and @xmath526 . + * forward . *",
    "we wish to show that @xmath650 = w.\\end{aligned}\\ ] ] then @xmath21 has the form given by eq .  , so that @xmath535 & = \\alpha\\mu_2\\cdots\\mu_l\\omega \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_{l+1 } } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[q_{l+1,j}\\big ] \\right ] \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_2 } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[q_{2,j}\\big ] \\right ] \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_1 } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[q_{1,j}\\big ] \\right]\\\\ & = \\alpha\\mu_2\\cdots\\mu_l\\omega \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_{l+1 } } q_{l+1,j}\\right ] \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_2 } q_{2,j}\\right ] \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_1 } q_{1,j}\\right ] \\\\ & = w,\\end{aligned}\\ ] ] where the second equality follows on noting that each @xmath651 is @xmath562-irreducible and so satisfies @xmath652 $ ] . + * backward . *",
    "we wish to show that @xmath653 = w \\implies w \\in p_{{\\mathcal{g}};\\alpha\\omega } \\operatorname{\\odot}q^{{\\mathpzc{k}};0\\:*}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_l;\\omega } \\operatorname{\\odot}\\cdots \\operatorname{\\odot}q^{{\\mathpzc{k}};0\\:*}_{{\\mathcal{g}}\\backslash\\alpha;\\mu_2 } \\operatorname{\\odot}q^{{\\mathpzc{k}};0\\:*}_{{\\mathcal{g}};\\alpha}.\\end{aligned}\\ ] ] we prove this by showing that any walk satisfying @xmath654 $ ] must have the structure of eq .  .",
    "let @xmath21 have decomposition @xmath655 \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_2 } c_{2,j } \\right ] \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_1 } c_{1,j } \\right ] , \\label{eqn : structureofik : backwards : wdecomp}\\end{aligned}\\ ] ] where @xmath385 is the number of child cycles off @xmath141 for @xmath539 , and @xmath386 and @xmath140 .",
    "then @xmath535 = \\alpha\\mu_2\\cdots\\mu_l\\omega \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_{l+1 } } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{l+1,j}\\big ] \\right ] \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_2 } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{2,j}\\big ] \\right ] \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_1 } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{1,j}\\big ] \\right].\\end{aligned}\\ ] ] comparing this expression with eq .",
    ", it follows from the properties of the nesting operation between cycles that @xmath240 = w$ ] only if @xmath656 = c_{i , j}$ ] for all @xmath540 and @xmath140 .",
    "then from theorem [ thm : structureofqkl ] with @xmath498 we have that @xmath569 .",
    "the decomposition of @xmath21 thus matches the structure described in eq .",
    ", so that @xmath21 is an element of @xmath647 as required .",
    "we now turn to developing an explicit definition for the walk dressing operator @xmath657 .",
    "we begin by defining the cycle dressing operators @xmath271 .",
    "the key characteristic of the cycle dressing operators is that @xmath271 maps a @xmath272-irreducible cycle @xmath274 to the set of cycles formed by adding zero or more resummable cycles to @xmath274 .",
    "consequently , @xmath273 $ ] is the set of all cycles that satisfy @xmath316 = q$ ] .",
    "we prove this statement in section [ subsec : rdeltainverses ] .",
    "[ defn : cycledressingoperators ] let @xmath1 be a digraph , @xmath2 be a dressing signature of depth @xmath203 , and @xmath314 be a parameter .",
    "then the cycle dressing operator @xmath271 is a map @xmath658 defined as follows .",
    "let @xmath274 be a @xmath272-irreducible cycle on @xmath1 with decomposition @xmath659 \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_2}c_{2,j}\\right],\\end{aligned}\\ ] ] where @xmath660 is a simple cycle of length @xmath661 and @xmath385 is the number of child cycles off @xmath141 .",
    "then @xmath271 maps @xmath274 to the set @xmath662 = \\left\\{\\alpha\\mu_2\\cdots\\mu_l\\alpha\\right\\ }               & \\operatorname{\\odot}\\operatorname*{\\bigodot}_{j=1}^{n_l } \\left(c^{[k_{l_{l , j}},\\ldots , k_{d-1},0]\\:*}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{l-1};\\mu_l } \\operatorname{\\odot}{\\delta^{{\\mathpzc{k}};l_{l , j}}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{l-1}}}\\big[c_{l , j}\\big ] \\right ) \\operatorname{\\odot}d_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{l-1};\\mu_l}^*\\\\ & \\operatorname{\\odot}\\cdots \\\\           & \\operatorname{\\odot}\\operatorname*{\\bigodot}_{j=1}^{n_2 } \\left(c^{[k_{l_{2,j}},\\ldots , k_{d-1},0]\\:*}_{{\\mathcal{g}}\\backslash\\alpha;\\mu_2 } \\operatorname{\\odot}{\\delta^{{\\mathpzc{k}};l_{2,j}}_{{\\mathcal{g}}\\backslash\\alpha}}\\big[c_{2,j}\\big ] \\right ) \\operatorname{\\odot}d_{{\\mathcal{g}}\\backslash\\alpha;\\mu_2}^*\\end{aligned}\\ ] ] where @xmath663}_{{\\mathcal{g}}\\backslash{\\alpha\\cdots\\mu_{i-1};\\mu_i } } & \\text{if $ l \\le k_l$ and $ n_i = 0$,}\\\\ c^{{\\mathpzc{k}}}_{{\\mathcal{g}}\\backslash{\\alpha\\cdots\\mu_{i-1};\\mu_i } } & \\text{otherwise , } \\end{cases}\\end{aligned}\\ ] ] and the parameters @xmath403 for @xmath432 and @xmath140 are given by @xmath664    [ fig : cycle_dressing_example ]   on a cycle @xmath274 ( see text for details ) .",
    "( left ) the cycle @xmath274 .",
    "the vertex @xmath665 has no child cycles , and serves as an example of the case where @xmath666 .",
    "( right ) an example of the structure of an element of @xmath273 $ ] in the two possible cases of @xmath422 and @xmath436 .",
    "the nodes shaded grey ( pink ) represent sequences of zero or more @xmath2-structured ( @xmath393$]-structured ) cycles . here",
    "@xmath667 and @xmath668 are elements of the sets @xmath669 $ ] and @xmath670 $ ] respectively , while @xmath671 is an element of @xmath672 $ ] and @xmath673 is an element of @xmath670$].,title=\"fig : \" ]    the action of @xmath271 on a @xmath272-irreducible cycle @xmath274 depends on the length of the base cycle of @xmath274 , and can be summarised as follows . if the base cycle of @xmath274 is longer than @xmath399 , @xmath271 maps @xmath274 to the set of cycles formed from @xmath274 by ( i ) adding zero or more @xmath2-structured cycles off every vertex @xmath141 before every child @xmath142 and after the final child @xmath674 , and ( ii ) replacing every child @xmath142 by an element from the set @xmath675 $ ] , where @xmath318 is the graph on which @xmath142 exists . on the other hand ,",
    "if the base cycle of @xmath274 is not longer than @xmath399 , @xmath271 maps @xmath274 to the set of cycles formed from @xmath274 by ( i ) adding zero or more @xmath393$]-structured cycles to every internal vertex of @xmath274 that has no children , ( ii ) adding zero or more @xmath393$]-structured cycles before the first child , zero or more @xmath2-structured cycles before every subsequent child , and zero or more @xmath2-structured cycles after the final child off every internal vertex of @xmath274 that has at least one child , ( iii ) replacing the first child @xmath588 by an element of @xmath676 $ ] and every subsequent child @xmath142 by an element of @xmath675 $ ] . figure [ fig : cycle_dressing_example ] illustrates the action of @xmath271 .",
    "we now give the explicit definition for the walk dressing operator @xmath11 .",
    "the defining characteristic of @xmath11 is that it maps a @xmath2-irreducible walk @xmath3 to the set of all walks that can be formed by adding zero or more resummable cycles to @xmath3 .",
    "correspondingly , every walk @xmath21 in the set @xmath239 $ ] satisfies @xmath187 = i$ ] .",
    "we prove this statement in section [ subsec : rdeltainverses ] .",
    "[ defn : walkdressingoperator ] let @xmath1 be a digraph and @xmath2 a dressing signature . then the walk dressing operator @xmath11 is a map @xmath677 defined as follows .",
    "let @xmath21 be a @xmath2-irreducible walk on @xmath1 with decomposition @xmath536 \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_2}c_{2,j}\\right ] \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_1}c_{1,j}\\right],\\end{aligned}\\ ] ] where @xmath678 is a simple path of length @xmath538 on @xmath1 , @xmath385 is the number of child cycles off @xmath141 , and @xmath386 for @xmath540 and @xmath140 . then @xmath11 maps @xmath21 to the set @xmath679 = \\left\\{\\alpha\\mu_2\\cdots\\mu_l\\omega\\right\\ } & \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_{l+1}}\\left (           c_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_l;\\omega}^{{\\mathpzc{k}}\\ : * } \\operatorname{\\odot}{\\delta^{{\\mathpzc{k}};0}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_l}}\\big[c_{l+1,j}\\big]\\right)\\right ] \\operatorname{\\odot}c_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_l;\\omega}^{{\\mathpzc{k}}\\:*}\\\\ & \\operatorname{\\odot}\\:\\cdots \\\\ & \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_1}\\left (           c_{{\\mathcal{g}};\\alpha}^{{\\mathpzc{k}}\\:*}\\operatorname{\\odot}{\\delta^{{\\mathpzc{k}};0}_{{\\mathcal{g}}}}\\big[c_{1,j}\\big]\\right)\\right ] \\operatorname{\\odot}c_{{\\mathcal{g}};\\alpha}^{{\\mathpzc{k}}\\:*},\\end{aligned}\\ ] ] where @xmath680 is the cycle dressing operator of definition [ defn : cycledressingoperators ] .    [",
    "fig : walk_dressing_example ]   on a @xmath2-irreducible walk @xmath3 ( see text for details ) .",
    "( left ) the walk @xmath3 .",
    "( right ) the general structure of the walks in the set @xmath239 $ ] .",
    "the shaded nodes represent sequences of zero or more @xmath2-structured cycles , while @xmath681 is an element from the set @xmath682$].,title=\"fig : \" ]    the walk dressing operator @xmath11 maps a @xmath2-irreducible walk @xmath3 to the set of walks obtained from @xmath3 by ( i ) adding zero or more @xmath2-structured cycles before every child @xmath142 and after the final child @xmath674 off every vertex @xmath141 , and ( ii ) replacing every child @xmath142 with an element from the set @xmath675 $ ] , where @xmath318 is the graph on which @xmath142 exists .",
    "this action is illustrated in figure [ fig : walk_dressing_example ] .      in this section",
    "we prove that the cycle reduction and cycle dressing operators of definitions [ defn : cyclereductionoperator ] and [ defn : cycledressingoperators ] satisfy property p2 of definition [ defn : reductiondressingaxioms ] : namely , that for a given @xmath272-irreducible cycle @xmath274 , the set @xmath273 $ ] contains all cycles , and only those cycles , that satisfy @xmath316 = q$ ] .",
    "[ lem : rdeltainverses ] let @xmath1 be a digraph , @xmath2 be a dressing signature with depth @xmath203 , @xmath683 be a cycle off @xmath23 on @xmath1 , and @xmath684 be a @xmath272-irreducible cycle off @xmath23 on @xmath1 for some @xmath314 . then @xmath144 is an element of @xmath273 $ ] if and only if @xmath316 = q$ ] .",
    "we wish to show that for a @xmath272-irreducible cycle @xmath274 off @xmath23 and an arbitrary cycle @xmath144 off @xmath23 , then @xmath685 \\iff { \\mathpzc{r}^{{\\mathpzc{k}};l}}[c ] = q.\\label{eqn : rdeltinverses : statement}\\end{aligned}\\ ] ] we prove the forward and backward directions of this statement separately .",
    "although the proof in each direction is somewhat lengthy , the central idea is very simple . in the forward direction , we wish to show that if @xmath144 can be obtained from @xmath274 by adding a collection of resummable cycles off the internal vertices of @xmath274 , then applying @xmath270 to @xmath144 removes those same cycles ( by mapping each to the corresponding trivial walk ) so that @xmath274 is recovered . in the backward direction",
    ", we wish to show the opposite : if @xmath274 can be obtained from @xmath144 by deleting some child cycles from @xmath144 , then applying @xmath271 to @xmath274 adds those cycles back , thereby recovering @xmath144 .",
    "the proof in each direction proceeds by induction on the number of vertices in @xmath1 .",
    "we begin with some general remarks that will be useful in both directions of the proof . +",
    "* preliminary remarks . * as noted in the proof of theorem [ thm : structureofqkl ] , there are two possible cases for an element @xmath274 of @xmath334 , which are mutually exclusive .",
    "* @xmath274 has decomposition given by eq .  : i.e.  the base cycle of @xmath274 is longer than @xmath399 , and every child cycle is @xmath562-irreducible .",
    "then @xmath271 maps @xmath274 to the set @xmath662 = \\big\\{\\alpha\\mu_2\\cdots\\mu_l\\alpha\\big\\ }               & \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_l}\\left(c^{{\\mathpzc{k}}\\:*}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{l-1};\\mu_l } \\operatorname{\\odot}{\\delta^{{\\mathpzc{k}};0}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{l-1}}}\\big[q_{l , j}\\big]\\right)\\right ]               \\operatorname{\\odot}c^{{\\mathpzc{k}}\\:*}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{l-1};\\mu_l}\\\\ & \\operatorname{\\odot}\\cdots \\\\               & \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_2}\\left(c^{{\\mathpzc{k}}\\:*}_{{\\mathcal{g}}\\backslash\\alpha;\\mu_2 } \\operatorname{\\odot}{\\delta^{{\\mathpzc{k}};0}_{{\\mathcal{g}}\\backslash\\alpha}}\\big[q_{2,j}\\big]\\operatorname{\\odot}\\right)\\right ] \\operatorname{\\odot}c_{{\\mathcal{g}}\\backslash\\alpha;\\mu_2}^{{\\mathpzc{k}}\\:*}.\\end{aligned}\\ ] ] this set consists of all the cycles formed from @xmath274 by adding zero or more @xmath2-structured cycles to the vertex @xmath141 in front of every child @xmath651 and after the final child @xmath686 , and additionally applying @xmath687 to every child cycle @xmath651 .",
    "a cycle is a member of this set if and only if its decomposition has the form + [ eqn : thm2:formacdecompgroup ] @xmath688\\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{m=1}^{p_{l , n_l+1 } } f_{l , n_l+1,m } \\right]\\\\[3 mm ] & \\operatorname{\\odot}\\cdots \\\\[3 mm ]           & \\operatorname{\\odot}\\bigg[\\operatorname*{\\bigodot}_{j=1}^{n_2}\\bigg(\\underbrace{\\operatorname*{\\bigodot}_{m=1}^{p_{2,j } } f_{2,j , m}}_{\\text{from $ c^{{\\mathpzc{k}}\\:*}_{{\\mathcal{g}}\\backslash\\alpha;\\mu_2}$ } }           \\operatorname{\\odot}\\underbrace{\\vphantom{\\operatorname*{\\bigodot}_{m=1}^{p_{2,j}}}d_{2,j}}_{\\text{from $ { \\delta^{{\\mathpzc{k}};0}_{{\\mathcal{g}}\\backslash\\alpha}}[q_{2,j}]$ } } \\bigg)\\bigg]\\operatorname{\\odot}\\bigg[\\underbrace{\\vphantom{\\operatorname*{\\bigodot}_{m=1}^{p_{2,j}}}\\operatorname*{\\bigodot}_{m=1}^{p_{2,n_2 + 1 } } f_{2,n_2 + 1,m}}_{\\text{from $ c^{{\\mathpzc{k}}\\:*}_{{\\mathcal{g}}\\backslash\\alpha;\\mu_2}$ } } \\bigg ] .",
    "\\end{split}\\ ] ] for some @xmath689 , with @xmath690 \\label{eqn : thm2:formacdecomppart2 } \\end{aligned}\\ ] ] + for indices in the relevant ranges . here",
    "the cycles denoted @xmath691 are @xmath2-structured cycles that have been added to the vertex @xmath141 in front of every child @xmath651 and after the final child @xmath686 , and @xmath681 is an element from the set of cycles produced by applying @xmath687 to @xmath651 . +",
    "* @xmath274 has a decomposition of the form given in eq .  .",
    "then @xmath271 maps @xmath274 to the set @xmath692\\:*}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{i_p-1};\\mu_{i_p } } \\operatorname{\\odot}{\\delta^{{\\mathpzc{k}};l+1}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{i_p-1}}}\\big[q_{p,1}\\big ] \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=2}^{n_{p}}\\left(c^{{\\mathpzc{k}}\\:*}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{i_p-1};\\mu_{i_p } } \\operatorname{\\odot}{\\delta^{{\\mathpzc{k}};0}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{i_p-1}}}\\big[q_{p , j } ] \\right ) \\right ] \\operatorname{\\odot}c^{{\\mathpzc{k}}\\:*}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{i_p-1}}\\\\ & \\operatorname{\\odot}\\cdots \\\\ & \\operatorname{\\odot}c^{[k_{l+1},\\ldots , k_{d-1},0]\\:*}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{i_1 - 1};\\mu_{i_1 } } \\operatorname{\\odot}{\\delta^{{\\mathpzc{k}};l+1}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{i_1 - 1}}}\\big[q_{1,1}\\big ] \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=2}^{n_{1}}\\left(c^{{\\mathpzc{k}}\\:*}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{i_1 - 1};\\mu_{i_1 } } \\operatorname{\\odot}{\\delta^{{\\mathpzc{k}};0}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{i_1 - 1}}}\\big[q_{1,j } ] \\right ) \\right ] \\operatorname{\\odot}c^{{\\mathpzc{k}}\\:*}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{i_1 - 1}}\\\\             & \\operatorname{\\odot}c_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{j_q-1};\\mu_{j_q}}^{[k_{l+1},\\ldots , k_{d-1},0]\\ : * }             \\operatorname{\\odot}\\cdots             \\operatorname{\\odot}c_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{j_1 - 1};\\mu_{j_1}}^{[k_{l+1},\\ldots , k_{d-1},0]\\ : * } , \\end{aligned}\\ ] ] where @xmath693 index the internal vertices of @xmath492 that have no child cycles . and @xmath694 will generally be interleaved , and so the factors on the right - hand side of eq",
    ".   are not in the correct order as written : in order to respect the nesting conditions they must be nested into the cycle @xmath492 in reverse order of root index , from @xmath665 down to @xmath553 .",
    "] this set consists of all cycles formed from @xmath274 by nesting zero or more @xmath393$]-structured cycles off every internal vertex of @xmath274 that has no children , and adding zero or more @xmath393$]-structured cycles before the first child , zero or more @xmath2-structured cycles before every subsequent child , and zero or more @xmath2-structured cycles after the final child , off every internal vertex that has at least one child .",
    "additionally , @xmath695 is applied to the first child off each vertex , and @xmath680 is applied to any subsequent children off the same vertex . +",
    "a cycle is an element of the set given in eq .   if and only if its decomposition has the form + [ eqn : thm2:formbcdecompgroup ] @xmath696 \\operatorname{\\odot}d_{p,1 } \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=2}^{n_p } \\left(\\operatorname*{\\bigodot}_{m=1}^{p_{p , j } } f_{p , j , m } \\operatorname{\\odot}d_{p , j}\\right)\\right ] \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{m=1}^{p_{p , n_p+1 } } f_{p , n_p+1,m}\\right]\\\\[2 mm ] & \\operatorname{\\odot}\\cdots\\\\[2 mm ] & \\operatorname{\\odot}\\bigg[\\operatorname*{\\bigodot}_{m=1}^{p_{1,1 } } f_{1,1,m}\\bigg ] \\operatorname{\\odot}d_{1,1 } \\operatorname{\\odot}\\bigg[\\operatorname*{\\bigodot}_{j=2}^{n_1 } \\bigg(\\operatorname*{\\bigodot}_{m=1}^{p_{1,j } } f_{1,j , m } \\operatorname{\\odot}d_{1,j}\\bigg)\\bigg ] \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{m=1}^{p_{1,n_1 + 1 } } f_{1,n_1 + 1,m}\\right]\\\\ & \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{m=1}^{r_q } g_{q , m}\\right ] \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{m=1}^{r_1 } g_{1,m}\\right ] \\end{aligned}\\ ] ] for some @xmath697 and @xmath698 , with @xmath699}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{i_k-1};\\mu_{i_k } } \\qquad&d_{k,1 } & \\in { \\delta^{{\\mathpzc{k}};l+1}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{i_k-1};\\mu_{i_k}}}[q_{k,1}],\\\\ f_{k , j , m } & \\in c^{{\\mathpzc{k}}}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{i_k-1};\\mu_{i_k } } \\qquad&d_{k , j } & \\in { \\delta^{{\\mathpzc{k}};0}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{i_k-1};\\mu_{i_k}}}[q_{k , j}],\\\\ g_{k , m } & \\in c^{[k_{l+1},\\ldots , k_{d-1},0]}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{j_k-1};\\mu_{j_k } } \\end{aligned}\\ ] ] + for indices in the relevant ranges . here the cycles denoted @xmath700 are the @xmath393$]-structured cycles that have been added to the vertex @xmath701 before its first child , while @xmath702 for @xmath703 are the @xmath2-structured cycles that have been added to @xmath701 before every subsequent child and after its final child .",
    "the cycles denoted @xmath704 are the @xmath393$]-structured cycles that have been attached to the vertex @xmath705 ( which had no children in the original cycle ) .",
    "finally , @xmath706 is an element of the cycle set produced by applying @xmath707 to @xmath708 , and @xmath709 for @xmath703 is an element of the cycle set produced by applying @xmath710 to @xmath711 .",
    "we now begin the body of the proof .",
    "the proof relies heavily on proposition [ prop : trivialequivalentcycles ] , which states that @xmath270 maps any @xmath402$]-structured cycle to the corresponding trivial walk . + * forward .",
    "* let @xmath411 be the number of vertices in @xmath1 , and @xmath575 for @xmath411 and @xmath307 be the statement that for @xmath684 , @xmath712 \\implies { \\mathpzc{r}^{{\\mathpzc{k}};l}}\\big[c\\big ] = q.\\end{aligned}\\ ] ] we prove this statement for all @xmath26 and @xmath309 by induction on @xmath26 .",
    "the the proof proceeds by induction on @xmath26 .",
    "the dependency structure of the induction is identical to that seen previously : that is , @xmath575 for @xmath413 requires @xmath577 and @xmath578 for all @xmath416 , while @xmath578 only requires @xmath580 for all @xmath416 .",
    "+ _ inductive step . _",
    "the inductive step corresponds to the statements @xmath713 given that @xmath144 is an element of @xmath714 $ ] , it must either have the structure given in eq .   or that given in eq .  .",
    "in each case we show that applying @xmath270 to @xmath144 recovers @xmath274 , by explicitly evaluating @xmath316 $ ] .",
    "* the base cycle of @xmath144 is longer than @xmath399 .",
    "then @xmath144 has the form of eq .  .",
    "note that this is necessarily the case if @xmath481 . in this case",
    "when @xmath270 is applied to @xmath144 , @xmath320 is applied to every child cycle @xmath142 .",
    "thus we have ( cf .",
    "@xmath424 = \\alpha\\mu_2\\cdots\\mu_l\\alpha           & \\operatorname{\\odot}\\operatorname*{\\bigodot}_{j=1}^{n_l}\\bigg(\\operatorname*{\\bigodot}_{m=1}^{p_{l , j } } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[f_{l , j , m}\\big ]           \\operatorname{\\odot}{\\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[d_{l , j}\\big ] \\bigg )           \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{m=1}^{p_{l , n_l+1 } } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[f_{l , n_l+1,m}\\big ] \\right]\\\\[3 mm ] & \\operatorname{\\odot}\\cdots \\\\[3 mm ]           & \\operatorname{\\odot}\\operatorname*{\\bigodot}_{j=1}^{n_2}\\bigg(\\operatorname*{\\bigodot}_{m=1}^{p_{2,j } } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[f_{2,j , m}\\big ]           \\operatorname{\\odot}{\\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[d_{2,j}\\big ] \\bigg )           \\operatorname{\\odot}\\bigg[\\operatorname*{\\bigodot}_{m=1}^{p_{2,n_2 + 1 } } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[f_{2,n_2 + 1,m}\\big ] \\bigg].\\end{aligned}\\ ] ] recall that all of the cycles denoted @xmath691 are @xmath2-structured , while @xmath681 is an element of the set @xmath715 $ ] ( see eq .  ) .",
    "it follows from proposition [ prop : trivialequivalentcycles ] that every cycle @xmath691 is mapped by @xmath320 to the corresponding trivial walk @xmath427 . since the trivial walks do not contribute to the nesting product , each of these factors can be deleted .",
    "thus we find @xmath716 & = \\alpha\\mu_2\\cdots\\mu_l\\alpha         \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_l } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[d_{l , j}\\big]\\right ]         \\operatorname{\\odot}\\cdots         \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_2 } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[d_{2,j}\\big]\\right]\\\\         & = \\alpha\\mu_2\\cdots\\mu_l\\alpha         \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_l } q_{l , j}\\right ]         \\operatorname{\\odot}\\cdots         \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_2 } q_{2,j}\\right ]         \\\\ & = q,\\end{aligned}\\ ] ] where the second equality follows from the induction hypotheses @xmath582 for @xmath432 , where @xmath583 is the number of vertices in @xmath592 ( i.e.  the graph on which @xmath681 exists ) .",
    "+ * the base cycle of @xmath144 is not longer than @xmath399 .",
    "then @xmath144 has the form of eq .  .",
    "in this case the result of applying @xmath270 to @xmath144 depends on the values of the indices @xmath439 , where @xmath390 is the index of the first child off @xmath141 that is not @xmath393$]-structured .",
    "then for each vertex @xmath141 , @xmath408 is applied to the first @xmath406 children , and @xmath320 is applied to any remaining children .",
    "+ to proceed , we consider the two sets of vertices @xmath717 and @xmath718 separately .",
    "consider a representative vertex from the first set : say @xmath719 .",
    "all of the @xmath720 children off @xmath719 ( i.e.  those denoted @xmath721 in eq .  )",
    "are @xmath393$]-structured .",
    "it follows that @xmath722 , so that @xmath408 is applied to all @xmath720 children off @xmath719 .",
    "since all of these children are @xmath393$]-structured , @xmath408 maps each of them to the corresponding trivial walk @xmath723 . applying @xmath270 to @xmath144",
    "thus removes all of the children @xmath724 .",
    "an identical argument holds for the children off the vertices @xmath725 . + next consider a representative vertex from the second set : say @xmath449 .",
    "then the first @xmath726 children off @xmath449 ( i.e.  those denoted @xmath727 in eq .  ) are all @xmath393$]-structured .",
    "thus @xmath460 can not be smaller than @xmath728 .",
    "we now claim that @xmath460 is equal to @xmath728 : that is , @xmath729 is not @xmath393$]-structured .",
    "the proof of this is straightforward : recall from eq .   that @xmath729 is an element of @xmath730 $ ] .",
    "thus it follows from the induction hypothesis @xmath731 , where @xmath732 is the number of vertices in @xmath733 , that @xmath734 = q_{k,1}$ ] . because @xmath708 is a cycle and @xmath450 is not a cycle , then @xmath735 .",
    "hence @xmath734 \\neq ( \\mu_{i_1})$ ] , which proves the claim that @xmath736 .",
    "thus @xmath408 is applied to the first @xmath728 children off @xmath449 : that is , those up to and including @xmath729 .",
    "since the first @xmath726 cycles ( i.e.  those denoted @xmath727 ) are @xmath393$]-structured , @xmath408 maps each of them to @xmath450 .",
    "further , @xmath320 is applied to all subsequent children . since the child cycles that are a result of dressing ( i.e.  those denoted @xmath737 for @xmath738 ) are all @xmath2-structured , @xmath320 maps each of them to @xmath450 . applying @xmath270 to @xmath144",
    "thus removes all of the children @xmath739 .",
    "an identical argument holds for the vertices @xmath740.thus we have @xmath741 & = \\alpha\\mu_2\\cdots\\mu_l\\alpha           \\operatorname{\\odot}{\\mathpzc{r}^{{\\mathpzc{k}};l+1}}\\big[d_{p,1}\\big ] \\operatorname{\\odot}\\left [ \\operatorname*{\\bigodot}_{j=2}^{n_p } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[d_{p , j}\\big ] \\right ]           \\operatorname{\\odot}\\cdots           \\operatorname{\\odot}{\\mathpzc{r}^{{\\mathpzc{k}};l+1}}\\big[d_{1,1}\\big ] \\operatorname{\\odot}\\left [ \\operatorname*{\\bigodot}_{j=2}^{n_1 } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[d_{1,j}\\big ] \\right]\\\\          & = \\alpha\\mu_2\\cdots\\mu_l\\alpha           \\operatorname{\\odot}q_{p,1}\\operatorname{\\odot}\\left [ \\operatorname*{\\bigodot}_{j=2}^{n_p } q_{p , j } \\right ]           \\operatorname{\\odot}\\cdots           \\operatorname{\\odot}q_{1,1}\\operatorname{\\odot}\\left [ \\operatorname*{\\bigodot}_{j=2}^{n_1 } q_{1,j}\\right]\\\\           & = q ,      \\end{aligned}\\ ] ] where in writing the first equality we have deleted all of the cycles that are mapped to trivial walks , as discussed above , and the second equality follows from the induction hypotheses @xmath742 for @xmath469 , where @xmath743 is the number of vertices in @xmath598 . +    _ base case .",
    "_ the base case of the induction is the statement @xmath599 for @xmath623 .",
    "we prove this statement by considering the two possible graphs on a single vertex .",
    "* @xmath1 has no loop .",
    "then @xmath1 contains no cycles , and @xmath334 is empty for all @xmath744 . thus @xmath599 is vacuously true .",
    "* @xmath1 has a loop @xmath75 .",
    "then two possibilities exist : * * @xmath477 .",
    "then @xmath334 is empty , and @xmath599 is vacuously true . * * @xmath481 . then @xmath601 . setting @xmath745",
    "we find that @xmath746 = { \\delta^{{\\mathpzc{k}};d}_{{\\mathcal{g}}}}[\\alpha\\alpha ] = \\{\\alpha\\alpha\\}$ ] .",
    "setting @xmath747 yields @xmath748 = { \\mathpzc{r}^{{\\mathpzc{k}};d}}[\\alpha\\alpha ] = \\alpha\\alpha = q$ ] , and @xmath602 holds .",
    "+    * backward .",
    "* let @xmath411 be the number of vertices in @xmath1 , and @xmath575 for @xmath22 and @xmath314 be the statement that for @xmath684 and an arbitrary cycle @xmath144 , @xmath741 = q \\implies c \\in { \\delta^{{\\mathpzc{k}};l}_{{\\mathcal{g}}}}\\big[q\\big ] .",
    "\\end{aligned}\\ ] ] the proof again proceeds by induction on @xmath26 , with the same dependency structure as in the forwards direction . throughout this section",
    "we assume that @xmath144 has decomposition @xmath749       \\operatorname{\\odot}\\cdots      \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{m_2 } c_{2,j}\\right]\\label{thm2:backward : cdecomp}\\end{aligned}\\ ] ] for some @xmath501 and @xmath750 , where @xmath751 for @xmath752 and @xmath511 .",
    "we then show that the equality @xmath316 = q$ ] implies that the decomposition of @xmath144 matches the form of the elements of @xmath273 $ ] ( i.e.  either eq .   or ) so that @xmath144 is an element of @xmath273 $ ] .",
    "+ _ inductive step . _",
    "the inductive step corresponds to the statements @xmath753 since the base cycle of @xmath316 $ ] is the same as that of @xmath144 , it follows from the equality @xmath316 = q$ ] that the base cycle of @xmath144 is the same as the base cycle of @xmath274 .",
    "thus we write @xmath492 instead of @xmath500 . as before , there are two possibilities :    1 .",
    "the base cycle of @xmath144 is longer than @xmath399 .",
    "then when @xmath270 is applied to @xmath144 , @xmath320 is applied to every child @xmath142 , so that @xmath424 = \\alpha\\mu_2\\cdots\\mu_l\\alpha \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{m_l}{\\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{l , j}\\big]\\right ] \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{m_2}{\\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{2,j}\\big]\\right].\\end{aligned}\\ ] ] meanwhile , @xmath274 has the structure given in eq .  .",
    "the equality @xmath382 = q$ ] thus requires that @xmath754 = \\operatorname*{\\bigodot}_{j=1}^{n_i}q_{i , j}$ ] for @xmath438 . because some of the factors @xmath755 $ ] may be trivial",
    ", it does not directly follow that @xmath756 , but only that @xmath757 .",
    "specifically , we conclude that among the children @xmath758 there are @xmath524 that are mapped by @xmath320 to @xmath759 .",
    "let @xmath760 be the indices of those cycles , so that @xmath761 = q_{i , j}$ ] , and define @xmath762 .",
    "then the sequence of @xmath763 cycles can be rewritten as @xmath764 = \\operatorname*{\\bigodot}_{j=1}^{n_i}\\left[\\operatorname*{\\bigodot}_{m = i_{i , j-1}+1}^{i_{i , j}-1 } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{i , m}\\big ] \\operatorname{\\odot}{\\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{i , i_{i , j}}\\big]\\right ] \\operatorname{\\odot}\\operatorname*{\\bigodot}_{m = i_{i , n_i}+1}^{m_i } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{i , m}\\big]\\end{aligned}\\ ] ] where @xmath765 = \\begin{cases } q_{i , p } & \\text{if $ j = i_{i , p}$ for some $ 1 \\le p \\le n_i$,}\\\\ ( \\mu_i ) & \\text{otherwise . } \\end{cases}\\end{aligned}\\ ] ] now from the induction hypothesis @xmath582 , where @xmath583 is the number of vertices in @xmath592 , it follows that @xmath766 $ ] for @xmath767 , while from proposition [ prop : trivialequivalentcycles ] it follows that @xmath768 if @xmath769 .",
    "the decomposition of @xmath144 thus has the form of eq .  , and so @xmath770 $ ] .",
    "the base cycle of @xmath144 is not longer than @xmath399 . in this case",
    "@xmath316 $ ] depends on the values of @xmath439 , where @xmath390 is the index of the first child off @xmath141 that is not @xmath393$]-structured .",
    "meanwhile , @xmath274 has the structure of eq .  .",
    "in order to proceed , we note that the values that each @xmath390 can take are constrained by the equality @xmath316 = q$ ] . specifically , note that the cycle @xmath316 $ ] has a maximum of @xmath771 children off @xmath141 .",
    "( this follows from the observation that the first @xmath443 child cycles are mapped by @xmath408 to @xmath427 and disappear , by the definition of @xmath390 . ) since @xmath274 has no cycles off ( for example ) @xmath719 , we conclude that @xmath772 , or in other words , all of the child cycles @xmath773 off @xmath719 in @xmath144 ( see eq .  ) are @xmath393$]-structured .",
    "an identical argument holds for the vertices @xmath774 .",
    "+ conversely , we conclude that since @xmath274 does have children off ( for example ) @xmath449 , then @xmath775 .",
    "then @xmath408 is applied to the first @xmath460 children off @xmath449 ( thereby mapping the first @xmath776 of them to @xmath450 ) , and @xmath320 is applied to any subsequent children .",
    "it follows that the first @xmath777 children off @xmath449 are @xmath393$]-structured .",
    "an identical argument holds for each of the vertices @xmath778 .",
    "we now consider the structure of the remaining children off @xmath701 , i.e.  those with indices @xmath779 through to @xmath780 .",
    "+ since all of the children off @xmath717 and the first @xmath781 children off @xmath701 for @xmath469 are each mapped to the corresponding trivial walk , we have @xmath424 = \\alpha\\mu_2\\cdots\\mu_l\\alpha      & \\operatorname{\\odot}{\\mathpzc{r}^{{\\mathpzc{k}};l+1}}\\big[c_{i_p , s_{i_p}}\\big ] \\operatorname{\\odot}\\operatorname*{\\bigodot}_{j = s_{i_p}+1}^{m_{i_p } } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{i_p , j}\\big]\\\\      & \\operatorname{\\odot}\\cdots \\\\      & \\operatorname{\\odot}{\\mathpzc{r}^{{\\mathpzc{k}};l+1}}\\big[c_{i_1,s_{i_1}}\\big ] \\operatorname{\\odot}\\operatorname*{\\bigodot}_{j = s_{i_1}+1}^{m_{i_1 } } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{i_1,j}\\big],\\end{aligned}\\ ] ] where we have already deleted all of the cycles that reduce to trivial walks .",
    "we now compare this expression with the decomposition of @xmath274 given in eq .  .",
    "the equality @xmath563 = q$ ] implies that the cycles off each vertex must match .",
    "consider the vertex @xmath449 as an example .",
    "then @xmath782 \\operatorname{\\odot}\\operatorname*{\\bigodot}_{j = s_{i_1}+1}^{s_{i_1 } } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{i_1,j}\\big ] = \\operatorname*{\\bigodot}_{j=1}^{n_1 } q_{1,j}.\\ ] ] for this to hold , it must be the case that @xmath456 = q_{1,1}$ ] .",
    "then it follows from the induction hypothesis @xmath731 ( where @xmath732 is the number of vertices in @xmath783 ) that @xmath784 $ ] .",
    "we further conclude that @xmath785 of the factors @xmath786$],@xmath157,@xmath787 $ ] are equal to @xmath788 , and the remaining factors are equal to the trivial walk @xmath450 .",
    "let @xmath789 be the indices of the cycles mapped to @xmath790 , and define @xmath791 .",
    "then the sequence of the last @xmath792 child cycles off @xmath449 can be rewritten as + [ eqn : thm3:detailedstructuregroup ] @xmath793     \\operatorname{\\odot}\\operatorname*{\\bigodot}_{m = i_{1,n_1}+1}^{s_{i_1 } } c_{i_1,m}\\ ] ] where @xmath794 = \\begin{cases } q_{1,k } & \\text{if $ j = i_{1,k}$ for some $ 2\\le k \\le n_1 $ , } \\\\ ( \\mu_{i_1 } ) & \\text{if $ j \\notin \\ { i_{1,2},\\ldots , i_{1,n_1}\\}$. } \\end{cases}\\end{aligned}\\ ] ] + then it follows from the induction hypothesis @xmath795 , where @xmath796 is the number of vertices in @xmath733 , that @xmath797 $ ] .",
    "further , from proposition [ prop : trivialequivalentcycles ] we have that @xmath798 for @xmath799 .",
    "an identical argument holds for each of the vertices @xmath778 .",
    "+ piecing all of the above conclusions together , we find that the decomposition of @xmath144 matches the form of eq .  , and so @xmath144 is an element of the set @xmath800 $ ]",
    ". +    _ base case . _",
    "the base case of the induction is the statement @xmath599 for @xmath744 .",
    "we prove this statement by considering each of the two possible graphs on a single vertex .",
    "* @xmath1 has no loop .",
    "then @xmath1 contains no cycles , so @xmath44 is empty , and @xmath599 is vacuously true .",
    "* @xmath1 has a loop @xmath75 . then",
    "two cases exist : * * @xmath477 .",
    "then @xmath334 is empty , and @xmath599 is vacuously true . * * @xmath481",
    ". then @xmath601 . the only cycle that satisfies @xmath748 = \\alpha\\alpha$ ] is @xmath801 , which is also a member of @xmath802 $ ] , so @xmath599 is true .",
    "this concludes the proof that the cycle dressing operator @xmath271 produces the pre - image of a given @xmath272-irreducible cycle under @xmath270 .      in this section",
    "we prove that the walk reduction and walk dressing operators of definitions [ defn : walkreductionoperator ] and [ defn : walkdressingoperator ] are inverses of one another , in the sense that for a given @xmath2-irreducible walk @xmath3 the set @xmath11 contains all walks , and only those walks , that satisfy @xmath187 = i$ ] .    [ thm : rdeltainverse ] let @xmath1 be a digraph , @xmath2 be a dressing signature , @xmath803 be a walk from @xmath23 to @xmath24 on @xmath1 , and @xmath804 be a @xmath2-irreducible walk from @xmath23 to @xmath24 on @xmath1 .",
    "then @xmath21 is an element of @xmath239 $ ] if and only if @xmath187 = i$ ] .",
    "we wish to show that for a @xmath2-irreducible walk @xmath3 and an arbitrary walk @xmath21 , @xmath805 \\iff { \\mathpzc{r}^{\\!{\\mathpzc{k}}}}[w ] = i.\\end{aligned}\\ ] ] we prove the forward and backward directions of this result separately . as for lemma [ lem :",
    "rdeltainverses ] , the central idea is very simple . in the forward direction , we wish to show that if @xmath21 can be obtained by adding a ( possibly empty ) collection of resummable cycles to @xmath3 , then those same cycles are removed ( i.e.  mapped to the corresponding trivial walk ) when @xmath10 is applied to @xmath21 . in the backward direction , we wish to show that if deleting all resummable cycles from @xmath21 produces @xmath3 , then applying @xmath11 to @xmath3 re - adds this configuration of resummable cycles , thereby reproducing @xmath21 .",
    "the bulk of the proof in each direction follows directly from lemma [ lem : rdeltainverses ] .",
    "we begin with some preliminary remarks that will be required in both sections of the proof . +",
    "* preliminary remarks . *",
    "since @xmath3 is @xmath2-irreducible , it follows from theorem [ thm : structureofik ] that @xmath3 is a member of the set @xmath806 and so has decomposition given by eq .  .",
    "then applying @xmath11 to @xmath3 adds zero or more @xmath2-structured cycles to every vertex @xmath141 before every child @xmath651 and after the final child @xmath686 , and additionally applies @xmath687 to every child cycle @xmath651 , thereby mapping @xmath3 to the set @xmath807 = \\{\\alpha\\mu_2\\cdots\\mu_l\\omega\\ } & \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_{l+1 } } \\left(c^{{\\mathpzc{k}}\\:*}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_l;\\omega } \\operatorname{\\odot}{\\delta^{{\\mathpzc{k}};0}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_l}}\\big[q_{l+1,j}\\big ]   \\right)\\right ] \\operatorname{\\odot}c^{{\\mathpzc{k}}\\:*}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_l;\\omega}\\\\[2 mm ] & \\operatorname{\\odot}\\cdots\\\\[2 mm ] & \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_1 } \\left(c^{{\\mathpzc{k}}\\:*}_{{\\mathcal{g}};\\alpha}\\operatorname{\\odot}{\\delta^{{\\mathpzc{k}};0}_{{\\mathcal{g}}}}\\big[q_{1,j}\\big ] \\right ) \\right ] \\operatorname{\\odot}c^{{\\mathpzc{k}}\\:*}_{{\\mathcal{g}};\\alpha}.\\end{aligned}\\ ] ] it follows that a walk @xmath21 is an element of @xmath239 $ ] if and only if its decomposition into a simple path plus a collection of cycles is of the form    [ eqn : thm2:proof : requiredformgroup ] @xmath808 \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{m=1}^{p_{l+1,n_{l+1}+1 } } f_{l+1,n_{l+1}+1,m}\\right]\\\\[2 mm ] & \\operatorname{\\odot}\\cdots \\\\[2 mm ] & \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_1}\\left(\\operatorname*{\\bigodot}_{m=1}^{p_{1,j } } f_{1,j , m } \\operatorname{\\odot}d_{1,j}\\right)\\right ] \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{m=1}^{p_{1,n_1 + 1 } } f_{1,n_1 + 1,m}\\right ] \\end{aligned}\\ ] ] for some @xmath809 , where for indices in the relevant ranges @xmath810.\\ ] ]    here the cycles denoted @xmath691 are @xmath2-structured cycles that have been added off @xmath141 before every child cycle @xmath651 and after the final child @xmath686 , and @xmath681 is an element from the set of cycles formed by applying @xmath687 to @xmath651 .",
    "+ we now proceed to the body of the proof . + * forward . *",
    "we wish to prove that for a @xmath2-irreducible walk @xmath3 and an arbitrary walk @xmath21 @xmath653 = i \\implies w \\in { \\delta^{\\!{\\mathpzc{k}}}_{{\\mathcal{g}}}}\\big[i\\big].\\end{aligned}\\ ] ] we will show that it follows from the equality @xmath187 = i$ ] that @xmath21 has the structure given in eq .  , and is thus an element of @xmath811 $ ] .",
    "+ let @xmath21 have decomposition @xmath812 \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{m_1}c_{1,j}\\right]\\label{eqn : thm2:wdecomp}\\end{aligned}\\ ] ] where @xmath813 is a simple path of length @xmath814 and @xmath815 .",
    "then when @xmath10 is applied to @xmath21 , @xmath320 is applied to every child cycle ; thus @xmath535 = \\alpha\\beta_2\\cdots\\beta_p\\omega \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{m_{p+1}}{\\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{p+1,j}\\big]\\right ] \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{m_1}{\\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{1,j}\\big]\\right].\\end{aligned}\\ ] ] by comparing with eq .",
    ", we see that @xmath240 = i$ ] can only hold if @xmath21 and @xmath3 have the same base path : thus @xmath816 , and @xmath817 further , the equality requires that @xmath524 of the factors @xmath818,\\ldots , { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[c_{i , m_i}\\big]$ ] be equal to @xmath819 , and the remaining @xmath820 are equal to the trivial walk @xmath427 .",
    "let @xmath821 for @xmath822 index the cycles that are mapped by @xmath320 to @xmath823 , and set @xmath762 .",
    "then we can rewrite the sequence of @xmath446 cycles off @xmath23 as @xmath824 where @xmath825 = \\begin{cases } q_{1,k } & \\text { if $ j = i_{i , k}$ for some $ 1\\le k \\le n_i$,}\\\\ ( \\mu_i ) & \\text { if $ j \\notin \\{i_{i,1},\\ldots , i_{i , n_i}\\}$. } \\end{cases}\\end{aligned}\\ ] ] then it follows from lemma [ lem : rdeltainverses ] and proposition [ prop : trivialequivalentcycles ] that @xmath826 & \\text{if $ j = i_{i , k}$ for some $ 1\\le k \\le n_i$,}\\\\ c^{\\mathpzc{k}}_{{\\mathcal{g}};\\alpha } & \\text{if $ j \\notin \\{i_{i,1},\\ldots , i_{i , n_i}\\}$. } \\end{cases}\\end{aligned}\\ ] ] an identical argument holds for the sequence of cycles off every other vertex @xmath827 .",
    "the decomposition of @xmath21 thus matches the structure of eq .  ,",
    "and so @xmath21 is an element of @xmath811 $ ] . +",
    "* backward . *",
    "we wish to prove that for a @xmath2-irreducible walk @xmath3 and an arbitrary walk @xmath21 , @xmath828 \\implies { \\mathpzc{r}^{\\!{\\mathpzc{k}}}}[w ] = i.\\end{aligned}\\ ] ] first note that if @xmath21 is an element of @xmath811 $ ] then the decomposition of @xmath21 has the structure given in eq .  .",
    "then when @xmath10 is applied to @xmath21 , @xmath320 is applied to every child cycle . since all of the cycles denoted @xmath691 in eq .",
    "are @xmath2-structured , they are each mapped to the corresponding trivial walk @xmath427 . since the trivial walk does not contribute to the nesting product , this corresponds to deleting each of the cycles @xmath691 .",
    "we thus find @xmath535 & = \\alpha\\mu_2\\cdots\\mu_l\\omega \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_{l+1 } } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[d_{l+1,j}\\big]\\right ] \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_{1 } } { \\mathpzc{r}^{{\\mathpzc{k}};0}}\\big[d_{1,j}\\big]\\right]\\\\ & = \\alpha\\mu_2\\cdots\\mu_l\\omega\\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_{l+1 } } q_{l+1,j}\\right ] \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\left[\\operatorname*{\\bigodot}_{j=1}^{n_{1 } } q_{1,j}\\right]\\\\ & = i,\\end{aligned}\\ ] ] where the second equality follows from noting that @xmath681 is an element of @xmath715 $ ] and applying lemma [ lem : rdeltainverses ] .",
    "we have therefore proven that the explicit definitions of @xmath10 and @xmath11 given in sections [ sec : walkreductionoperators ] and [ sec : walkdressingoperator ] satisfy the properties that we assumed in definition [ defn : reductiondressingaxioms ] .",
    "it follows that the family of sets @xmath829 : i \\in i^{{\\mathpzc{k}}}_{\\mathcal{g}}\\}$ ] , where @xmath830 is given in theorem [ thm : structureofik ] , form a partition of the walk set @xmath0 .",
    "in section [ sec : s3:familyofpartitions ] we showed that for any digraph @xmath1 and dressing signature @xmath2 , which may be freely chosen , the collection of walk sets formed by applying the walk dressing operator @xmath11 to every @xmath2-irreducible walk on @xmath1 forms a partition of @xmath0 .",
    "an immediate consequence of this result is that the sum of all walks in @xmath0 can be separated into a sum over @xmath2-irreducible walks and a sum over the walks in the set @xmath239 $ ] for each @xmath2-irreducible walk @xmath3 , with the guarantee that this restructuring does not lead to any walk in the sum being double - counted or missed out .",
    "in other words , for any dressing signature @xmath2 we have that @xmath831 } w,\\end{aligned}\\ ] ] where @xmath830 is the set of @xmath2-irreducible walks , and @xmath239 $ ] is the walk dressing operator defined in section [ sec : walkdressingoperator ] .    in this section",
    "we exploit this observation to develop a family of partially - resummed series representations for the sum of all walks on @xmath1 . the central point to note",
    "is that @xmath239 $ ] is a set containing @xmath3 plus all walks that can be obtained by nesting one or more resummable cycles into @xmath3 .",
    "it follows that summing over all elements of @xmath239 $ ] is equivalent to summing over all possible configurations of resummable cycles that can be added to @xmath3 .",
    "as we show later in this section , this summation takes the form of an infinite geometric series of resummable cycles off each vertex of @xmath3 , which can be formally resummed to a closed - form expression .",
    "the end effect of summing over all elements of @xmath239 $ ] is to replace each vertex @xmath16 of @xmath3 by a _ dressed vertex _",
    "@xmath832 which represents the sum of all possible configurations of resummable cycles on @xmath1 off @xmath16 . in this way the sum over all walks on @xmath1 is recast as a sum over @xmath2-irreducible walks with dressed vertices .",
    "this section is structured as follows . in section [ sec:51:resummedcharseries ]",
    "we introduce formal power series , which provide the mathematical underpinning for the ensuing discussion of sums of walks .",
    "we define the aforementioned dressed vertex @xmath832 as the sum of all resummable cycles off @xmath16 on @xmath1 , and show that this sum has the form of an infinite geometric series of cycles and can thus be formally resummed .",
    "finally , we present in theorem [ thm : charseriesisdressedkirred ] the main result of this section : the reformulation of the sum of all walks on @xmath1 as a sum of dressed @xmath2-irreducible walks .    in section [ sec:52:resummedweightseries ]",
    "we extend the resummation results of section [ sec:51:resummedcharseries ] to the case of weighted digraphs . by following an analogous procedure",
    "to that outlined above , we show that the sum over all walk weights on a weighted directed graph can be recast as a sum of the weights of the @xmath2-irreducible walks , each of which is dressed so as to include the weights of all possible configurations of resummable cycles off them .",
    "these results make it possible to develop new partially - resummed series representations for any problem that can be formulated as a sum over walk weights on a directed graph .      in order to discuss",
    "the sum of all walks on a digraph @xmath1 , we must first introduce the concept of a formal power series .",
    "we remain as brief as possible , referring to the literature for further details @xcite .",
    "let @xmath1 be a digraph , @xmath0 be the set of all walks on @xmath1 , and @xmath833 be the set of integers .",
    "then a formal power series in @xmath0 over @xmath833 is a mapping @xmath834 .",
    "the value of @xmath835 at a particular @xmath238 , also termed the coefficient of @xmath21 in @xmath835 , is denoted by @xmath836 , and @xmath835 itself is written as a formal sum @xmath837 the space of all formal power series in @xmath0 over @xmath833 is denoted by @xmath838 .",
    "sums of walks on a digraph @xmath1 are elements of @xmath838 .",
    "of particular interest is the sum of walks that are found in a particular subset of @xmath0 .",
    "let @xmath839 be a subset of the set of all walks on @xmath1 .",
    "then the _ characteristic series _ of @xmath89 is the formal power series @xmath840 with coefficients @xmath841 so that @xmath842 .    [ defn : charseriessigmaaw ] given a digraph @xmath1 , the characteristic series of all walks from @xmath23 to @xmath24 on @xmath1 , denoted by @xmath843 , is the formal power series in @xmath0 over @xmath833 defined by @xmath844 the coefficient @xmath845 of a walk @xmath21 in @xmath843 is 1 if @xmath21 is found in @xmath33 , and 0 otherwise .",
    "the goal of this section is to exploit the results of sections [ sec : s3:familyofpartitions ] and [ sec : s4:walkreductionwalkdressing ] to identify and factorise out various infinite geometric series of cycles that appear on the right - hand side of eq .  .",
    "these infinite geometric series can then be resummed into a formal closed form , leading to a new expression for the characteristic series @xmath843 . in order to carry out this decomposition of @xmath843 into subseries , it is necessary to extend the nesting operation to formal power series .",
    "[ defn : nestingwalkseries ] let @xmath835 and @xmath846 be formal power series in @xmath0 over @xmath833 .",
    "then @xmath847 is the formal power series obtained by nesting every term of @xmath846 into every term of @xmath835 , and multiplying the corresponding coefficients : @xmath848    definition [ defn : nestingwalkseries ] is consistent with defining the nesting operation to be distributive over addition , so that two formal power series @xmath849 and @xmath850 multiply in the expected way : @xmath851    for a given dressing signature @xmath2 , the effect of resumming the infinite geometric series of cycles in the characteristic series @xmath843 is to reduce @xmath843 from a sum over all walks to a sum over @xmath2-irreducible walks , each of which is modified so as to include the sums over all possible configurations of resummable cycles off each of its vertices .",
    "we implement this modification by replacing each vertex in the walk by a @xmath2-dressed vertex , which represents the sum of all possible configurations of resummable cycles off that vertex .",
    "[ defn : kdressedvertex ] let @xmath1 be a digraph , @xmath2 be a dressing signature , and @xmath23 be a vertex on @xmath1 .",
    "then the vertex @xmath23 dressed by @xmath2-structured cycles on @xmath1 ( also termed the @xmath2-dressed vertex ) , denoted by @xmath852 , is the formal power series defined by    [ eqn : kdressedvertex ] @xmath853 where @xmath854 is the set of @xmath2-structured cycles of definition [ defn : ckcyclesets ] . in other words",
    ", @xmath852 is the characteristic series of @xmath855 .",
    "then by exploiting the definition of the kleene star and formally resumming the geometric series of @xmath2-structured cycles , we find @xmath856^n    \\equiv \\bigg[1 - \\sum_{c \\,\\in\\,c_{{\\mathcal{g}};\\alpha}^{\\mathpzc{k } } } c\\bigg]^{-1},\\end{aligned}\\ ] ] where the first equality follows from the definition of the kleene star ( see definition [ defn : kleenestar ] ) , the second from the definition of the nesting power of a set of cycles ( see definition [ defn : nestingpower ] ) , and the third is to be taken as a definition of the short - hand expression on the right - hand side .",
    "the dressed vertex @xmath857 is the sum of all walks off @xmath23 on @xmath1 that consist of zero or more @xmath2-structured cycles off @xmath23 concatenated together : that is , @xmath858",
    "if @xmath854 is empty then all terms past the first vanish , and @xmath852 is equal to the trival walk @xmath859",
    ". two simple examples of dressed vertices are depicted in figure [ fig : dressed_vertex ] .",
    "-structured cycles @xmath854 ( left ) and the corresponding @xmath2-dressed vertex @xmath860 ( right ) .",
    "the top example shows the case of @xmath5 $ ] , in which case @xmath861}_{\\mathcal{g}}$ ] is simply the ( formal ) infinite geometric series in the loop @xmath75 .",
    "the bottom example shows @xmath7 $ ] in the case where only a single backtrack @xmath76 exists .",
    "then @xmath862}_{\\mathcal{g}}$ ] is the infinite geometric series in @xmath863 ; that is , the sum of all walks that can be formed by concatenating zero or more copies of @xmath75 and @xmath76 . ]",
    "recall from definitions [ defn : kstructuredcycles ] and [ defn : ckcyclesets ] that a @xmath2-structured cycle is defined recursively as having a base cycle not longer than @xmath194 and zero or more @xmath204$]-structured child cycles nested off each internal vertex .",
    "this leads to the following recursive definition for @xmath860 .",
    "[ prop : closedformkdressedvertex ] for a given dressing signature @xmath287 $ ] , the @xmath2-dressed vertex @xmath857 can be written as @xmath864 } \\operatorname{\\odot}\\cdots \\operatorname{\\odot}(\\mu_2)_{{\\mathcal{g}}\\backslash\\alpha}^{[k_1,\\ldots , k_{d-1},0]}\\right]^{-1}\\label{eqn : kdressedvertexclosedform}\\end{aligned}\\ ] ] where @xmath485 is a simple cycle of length @xmath865 and @xmath866 $ ] is the dressing signature obtained by deleting the first element of @xmath2 .",
    "the proof follows directly from combining the definitions of the @xmath2-dressed vertex ( definition [ defn : kdressedvertex ] ) and the @xmath2-structured cycles ( definition [ defn : ckcyclesets ] ) .",
    "we are now in a position to define an operator @xmath867 that maps a given @xmath2-irreducible walk to the sum of all walks in the set @xmath239 $ ] .",
    "as for the definition of @xmath239 $ ] in section [ sec : s4:walkreductionwalkdressing ] , it is convenient to first introduce a family of auxiliary operators @xmath868 which act on @xmath272-irreducible cycles .",
    "these are defined so that @xmath868 maps a given @xmath272-irreducible cycle @xmath274 to the sum of all walks in the set @xmath273 $ ] .",
    "[ defn : sumdressoperator ] let @xmath1 be a digraph , @xmath2 be a dressing signature of depth @xmath203 , and @xmath314 be a parameter .",
    "then @xmath869 is a map from the set of @xmath272-irreducible cycles on @xmath1 to the space of formal power series in @xmath0 over @xmath833 .",
    "its action is to map a given @xmath272-irreducible walk @xmath274 to the characteristic series of the set @xmath273 $ ] ; that is : @xmath870 = \\sum_{c\\,\\in\\,{\\delta^{{\\mathpzc{k}};l}_{{\\mathcal{g}}}}[q ] } c.\\end{aligned}\\ ] ] explicitly , let @xmath274 have decomposition @xmath871 \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\bigg[\\operatorname*{\\bigodot}_{j=1}^{n_2 } c_{2,j}\\bigg],\\end{aligned}\\ ] ] where @xmath492 is a simple cycle of length @xmath661 , and @xmath385 .",
    "then @xmath868 maps @xmath274 to the formal power series given by ( cf .",
    "definition [ defn : cycledressingoperators ] ) @xmath872 = \\alpha\\mu_2\\cdots\\mu_l\\alpha & \\operatorname{\\odot}\\operatorname*{\\bigodot}_{j=1}^{n_l } \\left (               ( \\mu_l)^{[k_{l_{l , j}},\\ldots , k_{d-1},0]}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{l-1 } } \\operatorname{\\odot}{\\mathpzc{d}^{{\\mathpzc{k}};l_{l , j}}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{l-1}}}\\big[c_{l , j}\\big]\\right ) \\operatorname{\\odot}(\\mu_l)^{{\\mathpzc{k}}_{\\,l}}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{l-1}}\\\\ & \\operatorname{\\odot}\\cdots \\\\ & \\operatorname{\\odot}\\operatorname*{\\bigodot}_{j=1}^{n_2 } \\left (              ( \\mu_2)^{[k_{l_{2,j}},\\ldots , k_{d-1},0]}_{{\\mathcal{g}}\\backslash\\alpha } \\operatorname{\\odot}{\\mathpzc{d}^{{\\mathpzc{k}};l_{2,j}}_{{\\mathcal{g}}\\backslash\\alpha}}\\big[c_{2,j}\\big ] \\right ) \\operatorname{\\odot}(\\mu_2)^{{\\mathpzc{k}}_{\\,2}}_{{\\mathcal{g}}\\backslash\\alpha}\\end{aligned}\\ ] ] where @xmath873 & \\text{if $ l \\le k_l$ and $ n_i = 0$,}\\\\    [ k_0,\\ldots , k_{d-1},0 ] & \\text{otherwise , } \\end{cases}\\end{aligned}\\ ] ] and the parameters @xmath403 for @xmath432 and @xmath140 are given by @xmath664 note that the special treatment of the first child in each hedge when @xmath436 is due to the fact that this child has a local depth of @xmath407 .",
    "we are now in a position to define @xmath867 , which maps a given @xmath2-irreducible walk @xmath3 to the sum of all walks in the set @xmath239 $ ] .",
    "[ defn : sumdressoperator ] let @xmath1 be a digraph and @xmath2 be a dressing signature . then @xmath874 is a map from the set of @xmath2-irreducible walks on @xmath1 to the space of formal power series in @xmath0 over @xmath833 .",
    "its action is to map a given @xmath2-irreducible walk @xmath3 to the characteristic series of the set @xmath239 $ ] ; that is : @xmath875 = \\sum_{w\\,\\in\\,{\\delta^{\\!{\\mathpzc{k}}}_{{\\mathcal{g}}}}[i ] } w.\\end{aligned}\\ ] ] explicitly , let @xmath3 be a @xmath2-irreducible walk on @xmath1 with decomposition @xmath876 \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\bigg[\\operatorname*{\\bigodot}_{j=1}^{n_2}c_{2,j}\\bigg ] \\operatorname{\\odot}\\bigg[\\operatorname*{\\bigodot}_{j=1}^{n_1}c_{1,j}\\bigg].\\end{aligned}\\ ] ] then @xmath867 maps @xmath3 to the formal power series ( cf",
    ".  definition [ defn : walkdressingoperator ] ) @xmath877 = \\alpha\\mu_2\\cdots\\mu_l\\omega & \\operatorname{\\odot}\\operatorname*{\\bigodot}_{j=1}^{n_{l+1}}\\left (           ( \\omega)_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_l}^{{\\mathpzc{k } } } \\operatorname{\\odot}{\\mathpzc{d}^{{\\mathpzc{k}};0}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_l}}\\big[c_{l+1,j}\\big]\\right)\\operatorname{\\odot}\\,(\\omega)_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_l}^{{\\mathpzc{k}}}\\\\ & \\operatorname{\\odot}\\:\\cdots \\\\ & \\operatorname{\\odot}\\operatorname*{\\bigodot}_{j=1}^{n_1}\\left (           ( \\alpha)_{{\\mathcal{g}}}^{{\\mathpzc{k } } }           \\operatorname{\\odot}{\\mathpzc{d}^{{\\mathpzc{k}};0}_{{\\mathcal{g}}}}\\big[c_{1,j}\\big]\\right )           \\operatorname{\\odot}\\,(\\alpha)_{{\\mathcal{g}};}^{{\\mathpzc{k}}},\\end{aligned}\\ ] ] where @xmath878 is given in definition [ defn : sumdressoperator ] .",
    "[ thm : charseriesisdressedkirred ] for a digraph @xmath1 and an arbitrary dressing signature @xmath2 , the characteristic series @xmath843 can be written as @xmath879\\end{aligned}\\ ] ] where @xmath242 is the set of @xmath2-irreducible walks from @xmath23 to @xmath24 on @xmath1 , as defined in theorem [ thm : structureofik ] , and @xmath867 is the dressing operator given in definition [ defn : sumdressoperator ] .",
    "starting from the definition of @xmath843 , we have @xmath880 } w    =   \\sum_{i \\,\\in\\ , i^{\\mathpzc{k}}_{{\\mathcal{g}};\\alpha\\omega } } { \\mathpzc{d}^{{\\mathpzc{k}}}_{{\\mathcal{g}}}}[i],\\end{aligned}\\ ] ] where the second equality follows from the fact that the family of sets @xmath188 : i \\in i^{\\mathpzc{k}}_{{\\mathcal{g}};\\alpha\\omega}\\big\\}$ ] form a partition of @xmath33 ( see theorem [ thm : familyofpartitions ] ) , and the third uses the definition of @xmath881 $ ] ( definition [ defn : sumdressoperator ] ) .",
    "theorem [ thm : charseriesisdressedkirred ] represents the result discussed in the introduction to this article : a representation of the sum of all walks on an digraph @xmath1 as a sum over @xmath2-irreducible walks , with each @xmath2-irreducible walk being dressed by all possible configurations of resummable cycles .      in this section",
    "we extend the results of  [ sec:51:resummedcharseries ] to the case of a weighted graph , with a view to providing a starting point for applications of walk - sums to the computation of matrix functions .",
    "a weighted digraph @xmath882 is a digraph @xmath1 paired with a weight function @xmath883 that assigns a weight @xmath884 $ ] to each edge @xmath885 of @xmath1 . to make the discussion concrete while retaining some generality , we consider here a weight function that assigns a complex matrix of size @xmath886 to the edge @xmath887 .",
    "we denote the weight of the edge @xmath887 by @xmath888 $ ] .",
    "given a weighted digraph @xmath882 , we extend the domain of the weight function @xmath883 from edges to walks by defining the weight of a trivial walk @xmath889 to be the @xmath890 identity matrix @xmath891 , and the weight of a walk @xmath892 of length @xmath661 to be the right - to - left product of the weights of the edges traversed by @xmath21 : @xmath893 & = { \\mathrm{w}}[(\\mu_l\\omega)]\\cdots{\\mathrm{w}}\\big[(\\mu_2\\mu_3)\\big]{\\mathrm{w}}\\big[(\\alpha\\mu_2)\\big]\\\\    & = { \\mathsf{w}}_{\\omega\\mu_l}\\cdots{\\mathsf{w}}_{\\mu_3\\mu_2}{\\mathsf{w}}_{\\mu_2\\alpha}.\\end{aligned}\\ ] ] note that the ordering of the edge weights is suitable for the matrix multiplication to be carried out , the end result being a matrix of size @xmath894 .",
    "[ def : weightoffps ] given a formal power series @xmath835 , it is natural to interpret the weight of @xmath835 as the value obtained on replacing each walk @xmath21 in @xmath835 by its weight @xmath895 $ ] ; that is @xmath896 = { \\mathrm{w}}\\bigg[\\sum_{w \\,\\in \\,w_{{\\mathcal{g}};\\alpha\\omega } } \\!(f , w ) w\\bigg ] = \\sum_{w \\,\\in \\,w_{{\\mathcal{g}};\\alpha\\omega } } \\!(f , w ) \\,{\\mathrm{w}}[w].\\end{aligned}\\ ] ] note that this series does not necessarily converge : its behaviour depends on the details both of both the weight function @xmath883 and the formal power series @xmath835 .",
    "[ rem : weightofkdressedvertex ] given a weighted digraph @xmath897 and a dressing signature @xmath287 $ ] , it follows from proposition [ prop : closedformkdressedvertex ] and definition [ def : weightoffps ] that the weight of the @xmath2-dressed vertex @xmath860  assuming it converges  is given by @xmath898    = \\left[1 - \\sum_{l=1}^{k_0 } \\sum_{s_{{\\mathcal{g}};\\alpha;l } }    { \\mathsf{w}}_{\\alpha\\mu_l }    { \\mathrm{w}}\\big[(\\mu_l)^{[k_1,\\ldots , k_{d-1},0]}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{l-1}}\\big ]    \\cdots    { \\mathsf{w}}_{\\mu_3\\mu_2 }    { \\mathrm{w}}\\big[(\\mu_2)^{[k_1,\\ldots , k_{d-1},0]}_{{\\mathcal{g}}\\backslash\\alpha}\\big ]    { \\mathsf{w}}_{\\mu_2\\alpha }    \\right]^{-1}.\\end{aligned}\\ ] ] note that since @xmath899}_{\\mathcal{g}}\\big ] = { \\mathrm{w}}\\big[(\\mu)\\big ] = { \\mathsf{i}}_\\mu$ ] , the recursion terminates after @xmath203 iterations .",
    "a sufficient condition for @xmath900 $ ] to converge is that @xmath901}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{l-1}}\\big ]    \\cdots    { \\mathsf{w}}_{\\mu_3\\mu_2 }    { \\mathrm{w}}\\big[(\\mu_2)^{[k_1,\\ldots , k_{d-1},0]}_{{\\mathcal{g}}\\backslash\\alpha}\\big ]    { \\mathsf{w}}_{\\mu_2\\alpha } \\bigg\\vert < 1,\\end{aligned}\\ ] ] that is , that the sum of the weights of all @xmath2-structured cycles off @xmath23 on @xmath1 has norm ( or modulus , for scalar weights ) less than 1 .    as the final result of this section",
    ", we present an expression for the sum of the weights of all walks from @xmath23 to @xmath24 on @xmath1  assuming this sum converges  as a sum over @xmath2-irreducible walks .",
    "note that it follows from definition [ def : weightoffps ] that the sum of the weight of all walks from @xmath23 to @xmath24 on a @xmath1 is the weight of the characteristic series @xmath843 of definition [ defn : charseriessigmaaw ] : @xmath902 = \\sum_{w\\,\\in\\,w_{{\\mathcal{g}};\\alpha\\omega } } { \\mathrm{w}}\\big[w\\big].\\label{eqn : charseriesweight}\\end{aligned}\\ ] ] the results of sections [ sec : s3:familyofpartitions ] and [ sec : s4:walkreductionwalkdressing ] can now be exploited to identify and resum infinite geometric series appearing in the right - hand side of eq .  .",
    "[ cor : sumofallwalkweights ] let @xmath897 be a weighted directed graph , @xmath23 and @xmath24 be two vertices in @xmath1 , and @xmath2 be an arbitrary dressing signature , which has depth @xmath203 .",
    "then the sum of the weights of all walks from @xmath23 to @xmath24  assuming it converges  is given by @xmath902 = \\sum_{i\\,\\in\\ , i^{\\mathpzc{k}}_{{\\mathcal{g}};\\alpha\\omega } } { \\mathrm{w}}\\big[{\\mathpzc{d}^{{\\mathpzc{k}}}_{{\\mathcal{g}}}}[i]\\big],\\end{aligned}\\ ] ] where @xmath629 is the set of @xmath2-irreducible walks from @xmath23 to @xmath24 on @xmath1 , and @xmath903\\big]$ ] is defined as follows .",
    "let @xmath3 have decomposition @xmath904",
    "\\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\bigg[\\operatorname*{\\bigodot}_{j=1}^{n_2}q_{2,j}\\bigg ] \\operatorname{\\odot}\\bigg[\\operatorname*{\\bigodot}_{j=1}^{n_1}q_{1,j}\\bigg],\\end{aligned}\\ ] ] where @xmath651 is a @xmath562-irreducible cycle .",
    "then @xmath903\\big]$ ] is given by @xmath905\\big ] =    & \\hphantom{\\times}\\,\\ , { \\mathrm{w}}\\big[(\\omega)^{\\mathpzc{k}}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{l}}\\big ]    \\sideset{}{^\\prime}\\prod_{j=1}^{n_{l+1 } }    \\bigg({\\mathrm{w}}\\big[{\\mathpzc{d}^{{\\mathpzc{k}};0}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{l}}}[q_{l+1,j}]\\big ]    { \\mathrm{w}}\\big[(\\omega)^{\\mathpzc{k}}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{l}}\\big ] \\bigg)\\ , { \\mathsf{w}}_{\\omega\\mu_l}\\\\    & \\times\\ , \\cdots\\\\    & \\times { \\mathrm{w}}\\big[(\\mu_2)^{\\mathpzc{k}}_{{\\mathcal{g}}\\backslash\\alpha}\\big ]    \\sideset{}{^\\prime}\\prod_{j=1}^{n_{2 } }    \\bigg({\\mathrm{w}}\\big[{\\mathpzc{d}^{{\\mathpzc{k}};0}_{{\\mathcal{g}}\\backslash\\alpha}}[q_{2,j}]\\big ]    { \\mathrm{w}}\\big[(\\mu_2)^{\\mathpzc{k}}_{{\\mathcal{g}}\\backslash\\alpha}\\big ] \\bigg)\\,{\\mathsf{w}}_{\\mu_2\\alpha}\\\\    & \\times { \\mathrm{w}}\\big[(\\alpha)^{\\mathpzc{k}}_{{\\mathcal{g}}}\\big ]    \\sideset{}{^\\prime}\\prod_{j=1}^{n_{1 } }    \\bigg({\\mathrm{w}}\\big[{\\mathpzc{d}^{{\\mathpzc{k}};0}_{{\\mathcal{g}}}}[q_{1,j}]\\big ]    { \\mathrm{w}}\\big[(\\alpha)^{\\mathpzc{k}}_{{\\mathcal{g}}}\\big ] \\bigg)\\end{aligned}\\ ] ] where the primes on the products indicate that they are to be taken right - to - left , the weights of the @xmath2-dressed vertices are evaluated according to remark [ rem : weightofkdressedvertex ] , and @xmath906\\big]$ ] is defined as follows .",
    "let @xmath274 be a @xmath272-irreducible cycle with decomposition @xmath907 \\operatorname{\\odot}\\cdots \\operatorname{\\odot}\\bigg[\\operatorname*{\\bigodot}_{j=1}^{n_2}c_{2,j}\\bigg].\\end{aligned}\\ ] ] then @xmath908\\big]$ ] for @xmath314 is given by @xmath909\\big ] = & \\hphantom{\\times}\\:\\ : { \\mathsf{w}}_{\\alpha\\mu_l}{\\mathrm{w}}\\big[(\\mu_l)^{{\\mathpzc{k}}_l}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{l-1}}\\big ]    \\sideset{}{^\\prime}\\prod_{j=1}^{n_{l } }    \\bigg({\\mathrm{w}}\\big[{\\mathpzc{d}^{{\\mathpzc{k}};l_{l , j}}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{l-1}}}[c_{l , j}]\\big]\\ ,    { \\mathrm{w}}\\big[(\\mu_l)^{[k_{l_{l , j}},\\ldots , k_{d-1},0]}_{{\\mathcal{g}}\\backslash\\alpha\\cdots\\mu_{l-1}}\\big ] \\bigg)\\\\    & \\times\\,\\cdots\\\\    & \\times { \\mathsf{w}}_{\\mu_3\\mu_2}{\\mathrm{w}}\\big[(\\mu_2)^{{\\mathpzc{k}}_2}_{{\\mathcal{g}}\\backslash\\alpha}\\big ]    \\sideset{}{^\\prime}\\prod_{j=1}^{n_{2 } }    \\bigg({\\mathrm{w}}\\big[{\\mathpzc{d}^{{\\mathpzc{k}};l_{2,j}}_{{\\mathcal{g}}\\backslash\\alpha}}[c_{2,j}]\\big]\\ ,    { \\mathrm{w}}\\big[(\\mu_2)^{[k_{l_{2,j}},\\ldots , k_{d-1},0]}_{{\\mathcal{g}}\\backslash\\alpha}\\big ] \\bigg)\\\\    & \\times { \\mathsf{w}}_{\\mu_2\\alpha}\\end{aligned}\\ ] ] where @xmath910 & \\text{if $ l \\le k_l$ and $ n_i = 0$,}\\\\      [ k_0,\\ldots , k_{d-1},0 ] & \\text{otherwise , }    \\end{cases}\\ ] ] and @xmath911    this result is an immediate consequence of the resummed form of the characteristic series @xmath912 ( see theorem [ thm : charseriesisdressedkirred ] ) and the convention that the weight of a formal power series is the sum of the weights of the individual terms ( definition [ def : weightoffps ] ) .",
    "the definitions of @xmath908\\big]$ ] and @xmath903\\big]$ ] follow from applying the weight function @xmath883 to the formal series @xmath913 $ ] ( see definition [ defn : sumdressoperator ] ) and @xmath881 $ ] ( see definition [ defn : sumdressoperator ] )",
    ".    an important consequence of corollary [ cor : sumofallwalkweights ] is that any problem that can be written as a sum of weights of all walks on a weighted directed graph can be recast as a sum of dressed weights of @xmath2-irreducible walks , for any dressing signature @xmath2 .",
    "such an expression could be termed an _ irreducible walk sum _ formulation of the original problem .",
    "since the results of sections [ sec : s3:familyofpartitions ] and [ sec : s4:walkreductionwalkdressing ] hold for arbitrary values of @xmath2 , many different irreducible walk sum expressions for the same series can be found . if the original series is absolutely convergent , then the irreducible walk sum expression for any value of @xmath2 is also absolutely convergent .",
    "since the dressing signature can be freely chosen , the most appropriate irreducible walk sum expression can be selected and applied to a given problem .",
    "this choice should be made on a case - by - case basis subject to the following trade - off : as @xmath2 is progressively increased from @xmath213 $ ] ( corresponding to the original series ) a wider and wider variety of terms ( those that correspond to @xmath2-structured cycles ) are exactly resummed into closed form .",
    "then on one hand , there remain correspondingly fewer terms to be explicitly summed over ( the @xmath2-irreducible walks ) , and the irreducible walk sum expression might be expected to converge more quickly than the original series due to the partial series resummation that has already been carried out ; but on the other , the weights of the @xmath2-dressed vertices become increasingly complex to evaluate , taking the form of branched continued fractions of increasing depth and breadth . upon reaching the maximum possible dressing signature @xmath4 ,",
    "there remain only a _ finite _ number of terms to be explicitly summed ( i.e.  the simple paths ) , and the walk sum reduces to a path sum .",
    "the applications of such path sum expressions to matrix functions @xcite and statistical inference @xcite have recently been investigated .",
    "in this article we defined a family of partitions of @xmath0 , the set of all walks on an arbitrary directed graph @xmath1 .",
    "each partition in this family is indexed by a dressing signature @xmath2 : an integer sequence that identifies a set of cycles on @xmath1 with a common well - defined structure .",
    "we term these cycles resummable cycles , and a walk that does not traverse any such cycles for a given value of @xmath2 a @xmath2-irreducible walk .",
    "the cells in the corresponding partition of @xmath0 then each contain a @xmath2-irreducible walk @xmath3 plus all walks that can be formed from @xmath3 by adding one or more resummable cycles to @xmath3 .",
    "the central objects in constructing this family of partitions are the walk reduction operator @xmath10 , which serves to map any walk @xmath21 to its @xmath2-irreducible ` core walk ' @xmath187 $ ] by deleting all resummable cycles from it , and the walk dressing operator @xmath11 , which maps a @xmath2-irreducible walk @xmath3 to the set of all walks that can be formed by adding a ( possibly empty ) collection of resummable cycles to @xmath3 .",
    "we provided explicit definitions of these operators , and showed that these definitions satisfy the properties required in order that the family of sets obtained by applying @xmath11 to every @xmath2-irreducible walk forms a partition of @xmath0 .",
    "we further gave an explicit expression for @xmath830 , the set of all @xmath2-irreducible walks on @xmath1 .",
    "this expression is valid for an arbitrary dressing signature @xmath2 .",
    "a direct consequence of these results is that the sum of all walks on an arbitrary digraph @xmath1 can be recast as a sum only over @xmath2-irreducible walks , where each @xmath2-irreducible walk has been dressed by all possible configurations of resummable cycles .",
    "this reformulation corresponds to the exact resummation of infinite geometric series of cycles appearing within the sum over all walks . by choosing different dressing signatures , many different",
    "such ` partially - resummed ' walk series can be obtained .",
    "the set of @xmath2-irreducible walks that appear in the sum , and the details of how each walk is dressed , are determined by the value of @xmath2 in each case .",
    "the ability to carry out exact resummations of infinite geometric series appearing within the sum over all walks on an arbitrary directed graph promises to have applications to problems that are naturally formulated as a sum of such walks .",
    "examples of such problems include the computation of matrix functions by series summation @xcite , and the problem of statistical inference in gaussian graphical models @xcite . by applying the resummations outlined here , a variety of resummed series  termed irreducible walk sum expressions  for the original problem can be derived .",
    "for a given value of @xmath2 , the corresponding irreducible walk sum expression is the result of exactly resumming the contributions of all terms in the original series that correspond to @xmath2-structured cycles on the underlying graph .",
    "the convergence behaviour , numerical stability , and mathematical properties of the irreducible walk sum expressions remain interesting open questions .",
    "this work was conducted under the auspices of a theodor heuss research fellowship at the ludwig maximilian university of munich .",
    "the author would like to thank the alexander von humboldt foundation for financial support , the groups of ulrich schollwck and lode pollet for their hospitality , and pierre - louis giscard for helpful comments on the manuscript .",
    ", _ semirings and formal power series _ , in handbook of weighted automata , m.  droste , w.  kuich , and h.  vogler , eds . , monographs in theoretical computer science . an eatcs series , springer berlin heidelberg , 2009 , pp",
    ".  328 .                    height",
    "2pt depth -1.6pt width 23pt , _ loop - erased random walk _ , in perplexing problems in probability , m.  bramson and r.  durrett , eds .",
    "44 of progress in probability , birkhuser boston , 1999 , pp ."
  ],
  "abstract_text": [
    "<S> we present a family of partitions of @xmath0 , the set of walks on an arbitrary directed graph @xmath1 . </S>",
    "<S> each partition in this family is identified by an integer sequence @xmath2 , which specifies a collection of cycles on @xmath1 with a certain well - defined structure . </S>",
    "<S> we term such cycles resummable , and a walk that does not traverse any such cycles @xmath2-irreducible . for a given value of @xmath2 , the corresponding partition of @xmath0 consists of a collection of cells that each contain a single @xmath2-irreducible walk @xmath3 plus </S>",
    "<S> all walks that can be formed from @xmath3 by attaching one or more resummable cycles to its vertices . </S>",
    "<S> each cell of the partition is thus an equivalence class containing walks that can be transformed into one another by attaching or removing a collection of resummable cycles .    </S>",
    "<S> we characterise the entire family of partitions of @xmath0 by giving explicit expressions for the structure of the @xmath2-irreducible walks and the resummable cycles for arbitrary values of @xmath2 . </S>",
    "<S> we demonstrate how these results can be exploited to recast the sum over all walks on a directed graph as a sum over dressed @xmath2-irreducible walks , and discuss the applications of this reformulation to matrix computations . </S>"
  ]
}
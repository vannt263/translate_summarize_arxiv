{
  "article_text": [
    "recent developments at the intersection of algebra and optimization theory , by the name of compressed sensing ( cs ) , aim at providing sparse descriptions to linear systems .",
    "these developments are found to have tremendous potential for several applications @xcite .",
    "sparse representations of a function are a powerful analytic tool in many application areas such as image / signal processing and numerical computation @xcite , to name a few .",
    "the need for the sparse representation arises from the fact that several real life applications demand the representation of data in terms of as few basis ( frame ) type elements as possible .",
    "the elements or the columns of the associated matrix @xmath2 are called atoms and the matrix so generated by them is called the dictionary .",
    "the developments of cs theory depend typically on sparsity and incoherence @xcite@xcite .",
    "sparsity expresses the idea that the `` information rate '' of a continuous time data may be much smaller than suggested by its bandwidth or that a discrete - time data depends on a number of degrees of freedom which is comparably much smaller than its ( finite ) length . on the other hand",
    ", incoherence extends the duality between the time and frequency contents of data .    since the sparsity of the cs matrix is key to minimizing the computational complexity associated with the matrix - vector multiplication , it is desirable that a cs matrix has smaller density . here , by density",
    ", one refers to the ratio of number of nonzero entries to the total number of entries of the matrix .",
    "the sparse cs matrix may contribute to fast processing with low computational complexity in compressed sensing @xcite .",
    "in the recent literature on cs @xcite , deterministic construction of cs matrices has gained momentum .",
    "r. devore @xcite has constructed deterministic binary sensing matrix of size @xmath3 , where @xmath4 is prime or prime power .",
    "the density of this matrix is @xmath5 s. li et .",
    "al . @xcite",
    "have generalized devore s work , constructing binary sensing matrix of size @xmath6 , where @xmath7 is any prime power and @xmath8 is the set of all rational points on algebraic curve @xmath9 over finite field @xmath10 .",
    "the density of this matrix is @xmath11 .",
    "a. amini et .",
    "@xcite have constructed binary sensing matrices using ooc codes .",
    "the density of this matrix is @xmath12 , where @xmath13 is row size and @xmath14 is the number of ones in each column . in all",
    "these constructions row sizes of associated matrices are given by some particular family of numbers .",
    "cs matrices of general size will not impose any restriction on the data to be dealt with , when used in applications such as data compression or classification .",
    "the main contribution of the present work may be summarized as follows :    * construction of sparse binary and ternary matrices from existing binary matrices . * as an application of our construction methodology , we show that , given @xmath15 ( for different primes @xmath1 ) , it is possible to construct sparse binary and ternary matrices of row size @xmath13 .",
    "consequently , we believe that this work is an attempt towards constructing cs matrices of general size .    the paper is organized in several sections . in section 2 ,",
    "we provide basics of cs theory . while in sections 3 and 4 , we discuss in detail the construction of cs matrices of low density and an application of proposed method respectively . in the last two sections , we present respectively the construction of ternary matrices and concluding remarks .",
    "the objective of compressed sensing is to recover @xmath16 from a few of its linear measurements @xmath17 through a stable and efficient reconstruction process via the concept of sparsity . from the measurement vector @xmath18 and the sensing mechanism ,",
    "one gets a system @xmath19 , where @xmath2 is an @xmath20 measurement matrix .    denoting @xmath21 as the @xmath22 row of @xmath2 , one may rewite the @xmath22 component in @xmath18 as @xmath23 . here",
    "@xmath24 represents the inner - product between @xmath21 and @xmath25 .",
    "that is , the object @xmath25 to be acquired is correlated with the waveform @xmath21 .",
    "this is a standard setup in several applications @xcite@xcite .",
    "for example , if the sensing waveforms are dirac delta functions , then @xmath18 is a vector of sampled values of @xmath25 in time or space domain .",
    "if the sensing waveforms are indicator functions of pixels , then @xmath18 is the image data typically collected by sensors in a digital camera . if the sensing waveforms are sinusoids , then @xmath18 is a vector of fourier coefficients and this modality is used in the magnetic resonance imaging",
    "nevertheless , if the sensing waveforms have @xmath26 and @xmath27 ( or @xmath26 and @xmath28 ) as elements , then the associated matrix ( referred conventionally to as a sensing matrix ) can have potential application for multiplier - less dimensionality reduction . an excellent overview of compressed sensing and the applicability of several sensing matrices may be seen in @xcite .    given the pair @xmath29 , the problem of recovering @xmath25 can be formulated as finding the sparsest solution ( that is , the solution containing most number of zero entries ) of linear system of equations @xmath19 .",
    "sparsity is measured by @xmath30 norm and @xmath31 , the number of non - zero entries in @xmath25 . now finding the sparsest solution",
    "can be formulated as the following minimization problem ( generally denoted as @xmath32 problem ) : @xmath33    this @xmath32 problem is a combinatorial minimization problem and is known to be np - hard @xcite .",
    "one may use greedy methods and convex relaxation of @xmath32 problem to recover @xmath34sparse signals ( that is , @xmath35 or signals with @xmath36 number of nonzero entries ) .",
    "the convex relaxation of @xmath32 problem can be posed as @xmath37 problem @xcite , which is defined as follows : @xmath38    the orthogonal matching pursuit ( omp ) algorithm and and the @xmath39norm minimization ( also called basis pursuit ) are two widely studied cs reconstruction algorithms @xcite .",
    "candes and tao @xcite have introduced the following isometry condition on matrices @xmath2 and have established its important role in cs .",
    "an @xmath40 matrix @xmath2 is said to satisfy the restricted isometry property(rip ) of order @xmath36 with constant @xmath41 @xmath42 if for all vectors @xmath43 with @xmath44 , we have @xmath45 the following theorem @xcite establishes the equivalence between @xmath32 and @xmath37 problems :    suppose an @xmath40 matrix @xmath2 has the @xmath46 restricted isometry property for some @xmath47 , then @xmath32 and @xmath37 have same @xmath34sparse solution if @xmath32 has a @xmath34sparse solution .",
    "the mutual - coherence @xmath48 of a given matrix @xmath2 is the largest absolute inner - product between different normalized columns of @xmath2 , that is , @xmath49 . here",
    ", @xmath50 stands for the @xmath36-th column in @xmath2 .",
    "the following proposition @xcite relates the rip constant @xmath41 and @xmath51    [ thm : pro ] suppose that @xmath52 are the unit norm columns of the matrix @xmath2 with coherence @xmath53 .",
    "then @xmath2 satisfies rip of order @xmath36 with constant @xmath54",
    ".    one of the important problems in cs theory deals with constructing cs matrices that satisfy the rip for the largest possible range of @xmath36 .",
    "it is known that the widest possible range of @xmath36 is of the order @xmath55 , for some well - behaved order constant @xcite .",
    "however the only known matrices that satisfy the rip for this range are based on random constructions @xcite .",
    "presently the researchers working in cs theory attempt issues @xcite such as    1 .   maximizing the sparsity of the solution , that is , for a given pair @xmath56 , finding @xmath25 such that @xmath57 is as small possible 2 .   improving the recovery process , that is , incorporating the prior information ( for example , partial support solution ) into the recovery process 3 .   developing faster algorithms 4 .   designing matrices that satisfy recovery properties    the recovery algorithms available to date use matrices @xmath2 that are generated at random and",
    "there is no efficient method for verifying whether or not a given matrix @xmath2 does indeed have the stronger reconstruction properties . for this and other reasons ,",
    "it is useful to have an explicit construction of @xmath2 .",
    "in this section , we present our deterministic construction procedure taking two existing binary sensing matrices as inputs .",
    "we show that the resulting matrix has smaller density than the original two .",
    "let @xmath58 be a binary sensing block matrix having @xmath59 row blocks ( the meaning of row blocks is explained later with example ) , each of size @xmath60 such that every block contains single @xmath27 and the overlap between any two columns is atmost @xmath61 , that is @xmath62 for any two columns @xmath63 and @xmath64 .",
    "let @xmath65 be another binary sensing block matrix having @xmath66 row blocks , each of size @xmath67 such that each block contains single @xmath27 and the overlap between any two columns is atmost @xmath68 .",
    "assume that @xmath69 , @xmath70 and @xmath71 .",
    "now a new matrix can be constructed by the following steps :    * step-1 : * let the @xmath72 column of @xmath73 be @xmath74 . for @xmath75 ,",
    "define @xmath76 , where @xmath77 is the vector consisting of all ones of size @xmath78 , supp@xmath79 is the support vector of @xmath74 .",
    "since @xmath73 has @xmath59 blocks and each block contains one @xmath27 , it follows that @xmath80 where @xmath81 is a @xmath82 tuple on the set @xmath83 . since @xmath73 has @xmath84 columns , we have @xmath84 such @xmath82tuples .",
    "for example , suppose @xmath85 and @xmath73 has 3 blocks , then each block is of size 3 .",
    "now , if the @xmath72 column @xmath74 is @xmath86 , supp@xmath79 is @xmath87 $ ] , then the triplet , @xmath81 , corresponding to this column is @xmath88 $ ] .",
    "similarly from the matrix @xmath89 , we can generate @xmath90 number of @xmath91tuples on the set @xmath92 * step-2 : * from @xmath82tuples of first matrix @xmath73 we remove last @xmath93 entries from each tuple to make it a @xmath34tuple .",
    "now add @xmath94 to each of the entries of the @xmath84 number of @xmath34tuples that are obtained from @xmath73 .",
    "let the @xmath34tuples be of the form @xmath95 for @xmath75 . from @xmath91tuples of second matrix @xmath89",
    ", we remove last @xmath96 entries from each tuple to make it @xmath34tuple . by this process",
    ", we get @xmath90 number of @xmath34tuples from the second matrix @xmath89 .",
    "let each @xmath34tuple have the form @xmath97 for @xmath98 .",
    "* step-3 : * now replace each @xmath34tuple @xmath95 with @xmath90 number of @xmath34tuples ( obtained from @xmath89 ) by adding @xmath99 to each of the @xmath34tuples @xmath97 for @xmath98 . this way",
    ", we get @xmath100 number of @xmath34 tuples on the set @xmath101 .",
    "denote these @xmath34tuples by @xmath102 .",
    "let @xmath103 for @xmath104 be the @xmath34 tuples in @xmath102 .",
    "* step-4 : * from these @xmath34 tuples we form a binary vector of length @xmath105 where @xmath27 occurs in the positions @xmath106 for @xmath107 and rest of the positions are zeros . using these @xmath100 number of @xmath34tuples , we form binary sensing matrix @xmath2 having @xmath36 number of blocks and each block is of size @xmath108 and every block contains single @xmath27 .",
    "the position of one s in each block is indexed by the @xmath34 tuples .",
    "so the size of the matrix @xmath2 becomes @xmath109 .",
    "the pseudo code of the proposed method is as follows : +     1 . & * input : * two matrices @xmath73 , @xmath89 of sizes @xmath110 , @xmath111 + 2 . & suppose @xmath112 and + & @xmath113 , @xmath114 + 3 . & assume @xmath115 and @xmath116 + 4 . & set @xmath76 , @xmath117 + 5 . & similarly , @xmath118 with @xmath119 are defined for @xmath120 + 6 . & set @xmath121 , @xmath122 and @xmath123 are first @xmath36 entries of @xmath118 and @xmath81 + 7 . & @xmath124 and let @xmath125 + & @xmath126 + 8 . & from each @xmath127 , create a vector @xmath128 of length @xmath129 + & and @xmath130 at @xmath131 for @xmath107 and zero elsewheres + 9 . & * output : * @xmath132 , a matrix of size @xmath109 , whose columns are @xmath133 +   +    [ lem:1 ] the coherence of the enlarged matrix @xmath2 of size @xmath109 , @xmath48 , is atmost @xmath134 .",
    "let @xmath135 be two arbitrary columns of matrix @xmath2 .",
    "there exist two @xmath34 tuples @xmath136 such that @xmath135 are the corresponding vectors of @xmath34 tuples @xmath137 as defined in the above construction .",
    "suppose @xmath138 and @xmath139 , where @xmath140 are two @xmath34tuples obtained from @xmath89 and @xmath141 are @xmath34tuples obtained from @xmath73 .",
    "set @xmath142 we will show that @xmath143 has atmost @xmath68 number of zero elements , which implies that intersection between the supports of @xmath135 is atmost @xmath68 .",
    "now @xmath144 and @xmath145 .",
    "the @xmath146 element of @xmath143 is @xmath147 we investigate the cases wherein @xmath148 + * case 1 : * suppose @xmath149 . + * sub case 1.1 : * if @xmath150 , then @xmath151 + * sub case 1.2 : * if @xmath152 , then also @xmath151 since @xmath153 and @xmath154 , we have @xmath155 . +",
    "* case 2 : * suppose @xmath156 then @xmath157 only when @xmath150 .    from the above cases , we conclude that @xmath157 only when @xmath156 and @xmath150 , but as both matrices @xmath73 and @xmath89 can have atmost @xmath68 intersections , @xmath157 can occur for atmost @xmath158choices of @xmath159 .",
    "so @xmath135 have atmost @xmath158intersections .",
    "so the coherence @xmath48 of @xmath2 is atmost @xmath134 .",
    "the following theorem shows the rip compliance of @xmath2 .",
    "[ thm : r ] the afore - constructed matrix @xmath160 satisfies rip with @xmath161 for any @xmath162    proof follows from the proposition [ thm : pro ] and lemma [ lem:1 ] .",
    "* remark-1 : * the density of the matrix @xmath2 is @xmath163 , which is smaller than the densities of the matrices @xmath73 and @xmath89 , which are @xmath164 and @xmath165 respectively .",
    "hence using our construction procedure we can construct more sparse binary matrices from existing binary sensing matrices . + * remark-2 : * the positions of @xmath166s in the matrix @xmath2 are known and we know that every block contains single one .",
    "so we can permute the columns of the matrix @xmath2 so that the support of the permuted matrix has nice structured sparsity .      in this section",
    ", we demonstrate our proposed method of construction via an example .",
    "let @xmath167 be a binary sensing block matrix    @xmath168 having @xmath169 row blocks , each of atmost size @xmath169 such that every block contains one @xmath27 and the overlap between any two columns is @xmath27 .",
    "let @xmath170 be a binary sensing block matrix @xmath171 having @xmath172 row blocks , each of atmost size @xmath172 such that every block contains one @xmath27 and the overlap between any two columns is @xmath27 .",
    "* step-1 : * the corresponding four @xmath173tuples obtained from @xmath73 constitute @xmath174 as    @xmath175 @xmath176    the corresponding nine @xmath177tuples obtained from @xmath89 constitute @xmath178 as    @xmath179 @xmath176    * step-2 : * now removing the last entries from each @xmath177tuple of @xmath178 , we get @xmath180 that contains nine @xmath173tuples as    @xmath181 @xmath176    * step-3 : * let us add @xmath182 to each of the entries of @xmath174 and then multiply each of the tuples by @xmath172 . now to each @xmath173tuple add all @xmath173tuples of @xmath180 and generate @xmath183 with @xmath184 . now all the entrices of @xmath183 are less than or equal to @xmath185 .",
    "all the tuples of @xmath183 are as follows :    @xmath176    * step-4 : * from each @xmath173tuple of @xmath183 , we form a column consisting of two blocks of size @xmath185 where the positions of @xmath186 in each block are dictated by the two entries of the tuple . finally , from all these steps",
    ", we obtain the following matrix @xmath187      let @xmath188 be two distinct primes and choose a positive integer @xmath61 , such that @xmath189 . using the method in @xcite , one obtains binary matrices @xmath190 of sizes @xmath191 and @xmath192 respectively . thus we get @xmath193 number of @xmath194tuples and @xmath195 number of @xmath196tuples .",
    "if we apply our construction procedure on these matrices then we generate matrix @xmath2 of size @xmath197 with coherence @xmath198 .",
    "the density of this matrix @xmath2 is @xmath199 , which is small compared to @xmath200 and @xmath201 , the densities of @xmath73 and @xmath89 respectively .    in the construction of @xmath2 ,",
    "the row size is @xmath202 and each column contains @xmath203 number of ones , and the overlap between any two columns is @xmath61 , therefore the maximum possible column size for this construction @xcite is @xmath204 , which is of the order @xmath205 , that is , @xmath206 .",
    "consequently , our enlarged matrix attains the maximum possible column size asymptotically .",
    "as stated already , the present work helps us to construct deterministic cs matrices of lower density .",
    "in addition , we show that this methodology could be adopted to constructing cs matrices of general row sizes .",
    "suppose @xmath13 is any positive integer different from @xmath0 for distinct primes @xmath1 .",
    "then there exists a binary cs matrix of row size @xmath13 .",
    "* case 1 : * if @xmath207 , then @xmath13 can be written as @xmath208 ( let take @xmath209 ) .",
    "suppose @xmath73 is a matrix having @xmath210blocks where each block is of size @xmath211 with intersection between any two different columns is @xmath61 .",
    "let @xmath89 be a cs matrix having @xmath4 blocks where each block is of size @xmath4 with intersection between any two different columns is @xmath68(it is guaranteed in @xcite that such matrices exist and in above example 3.2 ) . by applying our construction procedure on these two matrices ,",
    "we generate matrix @xmath2 of row size @xmath212 . + * case 2 : * suppose @xmath213 such that both @xmath214 and @xmath215 .",
    "take a cs matrix @xmath73 having @xmath194 blocks with each block being of size @xmath216 .",
    "let @xmath89 be another cs matrix having @xmath194blocks where each block is of size @xmath217 ( existence of such matrices is guaranteed in @xcite ) . by applying our construction procedure on these two matrices ,",
    "we generate matrix @xmath2 of row size @xmath13 . +",
    "* case 3 : * suppose @xmath218 such that @xmath219 and @xmath220 . by induction on @xmath221",
    ", we show that there exists a cs matrix of row size @xmath13 . for @xmath222 ,",
    "set @xmath223 .",
    "suppose the cs matrix @xmath73 has @xmath224blocks where each block is of size @xmath225 .",
    "let @xmath89 be another cs matrix having @xmath224blocks such that each block is of size @xmath217 ( existence of such matrices is guaranteed in @xcite ) .",
    "if we apply our construction procedure on these two matrices , then we generate matrix @xmath2 of row size @xmath226 , which is @xmath227 .",
    "assume that for @xmath228 , there exists a matrix of row size @xmath229 .",
    "now we have to show that there exists a cs matrix of row size @xmath230 .",
    "take a cs matrix @xmath73 having @xmath231blocks such that each block is of size @xmath232 .",
    "suppose @xmath89 has @xmath231blocks such that each block is of size @xmath233 . by applying our construction procedure on these two matrices ,",
    "we generate matrix @xmath2 whose row size is @xmath234 , which is @xmath13 . by induction we conclude that there exists a cs matrix of row size @xmath235    * remark-3 : * in the process of obtaining a binary matrix of row size @xmath13 if we use matrices @xmath236 with column sizes @xmath237 respectively and with coherence @xmath238 respectively , then the resulting matrix @xmath2 is of size @xmath239 and the coherence @xmath240 of @xmath2 is @xmath241    * remark-4 : * the authors of @xcite obtained general row size via kronecker delta product .",
    "if we apply kronecker delta product on @xmath58 and @xmath65 , the existing matrices that we started with , one obtains @xmath242 , which is of the size @xmath243 . the method proposed herein , on the other - hand , results in @xmath2 of size @xmath109",
    "although both the matrices have same coherence and same density , as @xmath244 , @xmath2 has better aspect ratio or redundancy factor ( column to row ratio ) compared to @xmath89 .",
    "* remark-5 : * as coherence of the resulting matrix depends on the choice of the two matrices , we can choose the two matrices in such a way that the resultant matrix has low coherence .",
    "in the above proof , we have used as an example the matrices constructed in @xcite .",
    "nevertheless , one may use other suitable binary matrices like those constructed in @xcite .",
    "let @xmath245 be a matrix having @xmath36 number of blocks where each block is of size @xmath60 , containing single one s and intersection between any two different columns of @xmath2 is atmost @xmath61 .",
    "let the @xmath72 column of @xmath2 be @xmath246 . for @xmath75",
    ", define @xmath247 , where @xmath248 is the vector consisting of all ones of size @xmath249 , supp@xmath250 is the support vector of @xmath246 . since @xmath2 has @xmath36 blocks and each block contains one @xmath27 , it follows that @xmath251 where @xmath252 is a @xmath34 tuple on the set @xmath83 . since @xmath2 has @xmath84 columns , we have @xmath84 such @xmath34tuples .",
    "let @xmath253 be the @xmath34 tuples .",
    "now decompose this @xmath34tuple into @xmath34number of two tuples as @xmath254 , where @xmath255 denotes the @xmath146 block position and @xmath256 denotes the @xmath146 entry of @xmath252 .",
    "it is to be noted here that @xmath257 .      from the @xmath34 tuple @xmath258 we form a binary vector of length @xmath259 where @xmath27 occurrs in the positions @xmath260 for @xmath261 and rest of the positions are zeros ( the vector is nothing but @xmath246 ) and then we replace @xmath27 with @xmath94 if @xmath262 , which results in a vector consisting of @xmath263 as entries .",
    "as we have @xmath84 such @xmath34tuples , we get @xmath84 number of ternary vectors of length @xmath259 . this way , we get a ternary matrix @xmath264 of size same as that of @xmath245 .",
    "let @xmath265 be a column from a matrix having @xmath172 blocks and each block is of size @xmath172 .",
    "then the support of this column is the @xmath177 tuple @xmath266 .",
    "break this @xmath172- tuple into three @xmath169- tuples @xmath267 as we mentioned above .",
    "now in the 3rd block as @xmath27 occurs in the 1st position , we replace @xmath27 with @xmath268 in the 3rd block of the binary vector @xmath265 to generate the ternary vector @xmath269 .",
    "* remark-6 : * the coherence and density of the ternary matrix @xmath132 remain same as that of the binary matrix @xmath2 .",
    "+    as in the case of binary cs matrices , it is possible to construct ternary matrices of general row size as well , which is concluded as the following theorem :    suppose @xmath13 is any positive integer different from @xmath0 for distinct primes @xmath1 .",
    "then there exists a ternary cs matrix of row size @xmath13 .",
    "initially we construct a binary matrix of row size @xmath13 , which is discussed in section 4",
    ". then we use methodology in section 5.1 to obtain a ternary matrix of row size @xmath13 .      in this section ,",
    "we present another deterministic construction procedure of ternary matrix by combining binary and hadamard matrices .",
    "we show that the resulting matrix has same density and coherence as binary but with better aspect ratio ( column to row ratio ) .",
    "let @xmath58 be a binary sensing matrix having @xmath36 number of one s in each column and overlap between any two columns is @xmath61 .",
    "suppose there exists a hadamard matrix @xmath270 of size @xmath271 for some @xmath272 .",
    "for each column of @xmath73 , we replace each of its @xmath27-valued entries with a distinct row of @xmath270 to obtain a ternary cs matrix @xmath2 of size @xmath273 . as the rows of hadamard matrix @xmath270 are orthogonal , the rows of @xmath2 are orthogonal . from the construction methodology , it is easy to check that the coherence of the matrix @xmath2 is @xmath274 .",
    "the density of the matrix @xmath2 is @xmath275 .",
    "as cs matrices of low density ( or high sparsity ) result in algorithms with low computational complexity , the present work has constructed sparse cs matrices from the existing two binary sensing matrices . as an application of proposed methodology",
    ", we have shown that binary and ternary cs matrices for a more general set of numbers can be constructed .",
    "the first author is thankful for the support ( ref no .",
    "19 - 06/2011(i)eu - iv ) that he receives from ugc , govt of india .",
    "the second author gratefully acknowledges the support ( ref no .",
    "20 - 6/2009(i)eu - iv ) that he receives from ugc , govt of india .",
    "the third author is thankful to dst ( sr / ftp / eta-054/2009 ) for the partial support that he received .",
    "we thank mr .",
    "roopak r tamboli for helping us in simulation work .",
    "a. amni , v. montazerhodjat and f. marvasti ,  matrices with small coherence using p - ary block codes , \" ieee trans .",
    "172 - 181 , jan . 2012 .",
    "a. amini and f. marvasti ,  deterministic construction of binary , bipolar and ternary compressed sensing matrices , \" ieee trans .",
    "theory , vol .",
    "57 , 2360 - 2370 , 2011 .",
    "y. c. chen , c. s. sastry , v. m. patel , p. j. phillips , r. chellappa .",
    ",  in - plane rotation and scale invariant clustering using dictionaries , \" ieee tans .",
    "image processing , vol .",
    "22 , no . 6 , pp.2166 - 2180 , 2013 .",
    "p. indyk ,  explicit constructions for compressed sensing of sparse signals , \" in proc .",
    "acm - siam symp .",
    "discrete algorithms , pp .",
    "30 - 33 , 2008 .",
    "s. li , f. gao , g. ge , and s. zhang ,  deterministic construction of compressed sensing matrices via algebraic curves , \" ieee trans",
    "theory , vol .",
    "58 , 5035 - 5041 , 2012 .",
    "kashin ,  widths of certain finite - dimensional sets and classes of smooth functions , \" izv .",
    "nauk sssr , ser.mat .",
    "41 ( 1977 ) , 334 351 ; english transl . in math .",
    "11 , 317 - 333 , 1978 .",
    "r. prasad , c. r. murthy , and b. d. rao , ",
    "joint approximately sparse channel estimation and data detection in ofdm systems using sparse bayesian learning , \" ieee transactions on sig .",
    "3591 - 3603 , 2014 ."
  ],
  "abstract_text": [
    "<S> in the present work , we discuss a procedure for constructing sparse binary and ternary matrices from existing two binary sensing matrices . the matrices that we construct have several attractive properties such as smaller density , which supports algorithms with low computational complexity . as an application of our method </S>",
    "<S> , we show that a cs matrix of general row size different from @xmath0 ( for different primes @xmath1 ) can be constructed .    </S>",
    "<S> compressed sensing , rip , binary and ternary sensing matrices . </S>"
  ]
}
{
  "article_text": [
    "many systems of interaction in biology and social science are modeled as a graph of pairwise interaction of entities  @xcite .",
    "an important problem for these types of graphs is to _ partition _ the nodes into so - called `` communities '' or `` modules '' of `` statistically significant '' interactions .",
    "such partitions facilitate studying interesting properties of these graph in their applications , such as studying the behavioral patterns of an individual in a societal context , and serve as important components in computational analysis of these graph . in this paper",
    "we consider the _",
    "static _ model of interaction in which the network interconnections do not change over time .",
    "simplistic definitions of modules , such as _ cliques _ , unfortunately do not apply well in the context of biological and social networks and therefore alternative definitions are most often used . in the `` model - based '' community finding approach , one first starts with an appropriate `` global null model '' @xmath2 of a background random graph and then attempts to place nodes in the same module if their interaction patterns are significantly stronger than that inferred from the null model . the null model",
    "@xmath2 may provide , implicitly or explicitly , the probability @xmath3 of an edge between two nodes @xmath4 and @xmath5 . as an illustration ,",
    "suppose that our input is an edge - weighted graph with all weights being positive and normalized between @xmath6 and @xmath7 .",
    "then , if @xmath3 differs significantly from @xmath8 , the weight of the edge between nodes @xmath4 and @xmath5 , the edge may be considered to be _ statistically significant _ ; thus , if @xmath9 then it is preferable that @xmath4 and @xmath5 should be placed in the same module whereas if @xmath10 then it is preferable that @xmath4 and @xmath5 should be placed in different modules .",
    "the standard @xmath11-correlation clustering that appears in the computer science literature extensively  @xcite can be placed in the above model - based clustering framework in the following manner : given the input graph @xmath12 with each edge labeled as @xmath13 or @xmath14 , let @xmath15 be the graph consisting of all edges labeled @xmath13 in @xmath12 , @xmath16 ( resp .",
    "@xmath17 ) if the edge was labeled @xmath13 or missing ( resp . , labeled @xmath14 ) , the modularity of an edge is @xmath18 where @xmath19 is the @xmath20 entry in the adjacency matrix of @xmath15 and the total modularity is a function of individual modularities of edges as induced by the clustering .    in this paper , we investigate a model - based clustering approach originally introduced by newman and subsequently studied by newman and others in several papers  @xcite .",
    "the null model in this approach is dependent on the degree distribution of the given graph .",
    "_ throughout the paper ,",
    "by a set of communities ( or clusters ) we mean a partition @xmath21 of the nodes of the graph and , except in section  [ digraph ] , all graphs are undirected_.      the basic setup for undirected unweighted graphs as described below can easily be generalized to the case of edge - weighted undirected graphs ( see section  [ weighted ] ) and edge - weighted directed graphs ( see section  [ digraph ] ) .",
    "let @xmath22 denote the given input graph with @xmath23 nodes and @xmath24 edges , let @xmath25 denote the degree of node @xmath26 , and let @xmath27 $ ] denote the _ adjacency matrix _ of @xmath12 , _",
    "i.e. _ , @xmath28 if @xmath29 and @xmath30 otherwise . the null model @xmath2 for modularity clustering is defined by the edge probability function @xmath31 for @xmath32 _ with @xmath33 being allowed _ ; note that the null model provides a random network such that the _ expected degree _ of a node @xmath34 is precisely @xmath25 .",
    "intuitively , if @xmath35 differs significantly from @xmath36 then the connection ( or , the lack of it ) is a significant deviation from the null model . based on this intuition , the _ fitness _ of the community formed by a subset of nodes @xmath37 is defined as factor is for _ normalization purposes only _ to make the _ optimal _ objective value to lie between @xmath6 and @xmath7 . ]",
    "@xmath38 then , a partition @xmath39 of @xmath40 has a _ total modularity _ of @xmath41 notice that each distinct pair of nodes @xmath42 and @xmath34 contribute _ twice _ to the inside term @xmath43 in equation  .",
    "the goal is to find a partition ( modular clustering ) @xmath21 ( with unspecified @xmath44 ) to _ maximize _ @xmath45 .",
    "note that by allowing @xmath42 and @xmath34 to be equal in the inside summation , we provide a _ negative weight to every node_.    let @xmath46 denote the _ optimal _ modularity value .",
    "it is easy to verify that @xmath47 .",
    "the modularity clustering approach is extremely popular both in the context of biological networks  @xcite as well as social networks  @xcite .",
    "however , as observed in  @xcite , not much was known about the computational complexity aspect modularity clustering beyond @xmath1-completeness for dense graphs , though various heuristic methods have been proposed and empirically evaluated in publications such as  @xcite via methods such as finding minimum weighted cuts . for unweighted networks , it is known that @xmath48 if @xmath12 is a clique , @xmath49 if @xmath12 is an union of @xmath44 _ disjoint _ cliques each with @xmath50 nodes , computing @xmath51 is @xmath1-complete for sufficiently dense graphs for every node @xmath34 . ] and the above - mentioned @xmath1-completeness result holds even if any solution is constrained to contain no more than two clusters  @xcite .",
    "_ unless mentioned otherwise explicitly , all algorithmic results apply for edge - weighted graphs and all hardness results apply for unweighted graphs_.    * hardness results * for _ dense _ graphs , namely for the complements of @xmath52-regular graphs , theorem  [ maxsnp ] in section  [ inapprox ] provides a @xmath0-inapproximability of the modularity clustering problem irrespective of whether the number of clusters is pre - specified or the algorithm is allowed to select the best number of clusters is roughly @xmath53 . ] .",
    "the required approximation gap in our reduction is derived from the approximation gap of the maximum independent set problem for @xmath52-regular graphs in  @xcite .",
    "the intuition behind our inapproximability result is that , for the type of dense graphs that is considered in our reduction , large - size cliques must be _ properly _ contained within the clusters .",
    "however , the gap preservation calculations need to be done extremely accurately to avoid shrinking the inapproximability gap .",
    "lemma  [ ktotwo ] in section  [ fewclust ] shows , using probabilistic arguments , that small number of clusters well - approximate the optimal modularity value ; in particular , partitioning into _ just two _ clusters already achieves at least _",
    "half _ of the optimum .",
    "thus , it behooves to look at the complexity of the problem when we have at most two clusters , which we refer to as the _",
    "@xmath54-clustering problem_. theorem  [ nph ] in section  [ nphard ] proves the @xmath1-completeness of the @xmath54-clustering problem for _ sparse _ graphs , namely for @xmath55-regular graphs with any fixed @xmath56 ; the previous @xmath1-completeness result for this case in  @xcite required the degree of every node to be large ( roughly @xmath57 ) .",
    "notice that we can not anymore use the idea of hiding a large - size clique since the graph does not have any cliques of size more than @xmath55 and , for fixed @xmath55 , one can indeed enumerate all these cliques in polynomial time . instead , our reduction is from the _ graph bisection _",
    "problem for @xmath58-regular graphs .",
    "intuitively , now an optimal solution for @xmath54-clustering is constrained to have exactly the same number of nodes in each community to avoid any local improvement .",
    "the ideas in the reduction are motivated by the proof for this case in  @xcite , but we have to do a more careful reduction and analysis to preserve both the low - degree and the regularity of the resulting graph .",
    "* approximation algorithms * we first consider the case of sparse graphs .",
    "we show in section  [ lp - relax ] that a natural linear programming relaxation of modularity clustering has a large integrality gap , thereby ruling out this avenue for non - trivial approximations - regular expander graphs have small modularity values ( @xmath59 ) . ] .",
    "theorem  [ log - approx ] in section  [ log - regular ] provides a @xmath60-approximation for most ( unweighted ) @xmath55-regular graph ( _ i.e. _ , with @xmath61 ) , and an approximation that is logarithmic in the _ maximum weighted degree _ for weighted graphs provided maximum weighted degree , we normalize all the weights such that their sum is _ exactly _ twice the number of edges . ]",
    "is no more than _ about _",
    "@xmath62{n}\\,$ ] .",
    "it is easy to see that the modularity function is _ neither monotone nor sub - modular _ , thus we instead need to use semi - definite programming ( @xmath63 ) techniques for _ maximizing quadratic forms_. however , we face several technical hurdles in using @xmath63-based approximation algorithms for quadratic forms in  @xcite : the coefficient matrix has _ negative diagonal entries _ and the lower bounds ( hence the approximation ratios ) in  @xcite depend on the number of nodes and not on the degree .",
    "thus , our proof proceeds in two steps . in the first step",
    "we obtain a lower bound on the optimal modularity value as a _ function of the degree _ or _ the maximum weighted degree _ using an _ explicit _ graph decomposition . in the second step ,",
    "we show that the @xmath63-based method for quadratic forms can be used to obtain an approximation that is within a logarithmic factor of this lower bound in spite of the negative diagonal entries .    for _ locally - dense _ weighted graphs ( _ i.e. _ , graphs in which every node has a weighted degree of @xmath64 )",
    "we observe in section  [ rl ] that one can get a solution within any _ constant additive error _ in polynomial time by a simple use of the _ regularity lemma_. in view of our @xmath65-hardness result for dense graphs described before , this is perhaps the best polynomial - time approximation one could hope for .    *",
    "directed weighted graphs * in section  [ digraph ] we show that all the hardness and approximation results for undirected weighted graphs can be extended to similar results for _ directed _ weighted graphs .    *",
    "alternative objectives and null models * there are two natural objections to newman s modularity clustering : _ approximate solutions provably tend to produce many trivial ( single - node ) clusters _ and _ the background null model could be different_. motivated by these observations , we consider two variations of the original modularity measure , one in which the modularity of the network is the _ minimum _ ( instead of sum ) of the modularities of individual clusters and the other in which the null model is the classical erds - rnyi random graph .",
    "our results show that the minimum objective provides similar optimal modularity values as the original sum objective without allowing small clusters , and the erds - rnyi random graph null model is equivalent to newman s modularity clustering in an _ appropriately defined _ regular graph .      *",
    "relationships to previous approximation algorithms for quadratic forms * the special case of partitioning the nodes into _ two clusters only _ can be written down as maximizing a quadratic form . however",
    ", none of the existing approximability results for quadratic forms apply directly to our case . in particular , the @xmath66-approximation in  @xcite is not applicable since the diagonal entries of the resulting constraint matrix are negative , results such as in  @xcite do not apply since the constraint matrix is _ not _ necessarily a positive semi - definite matrix and the @xmath67-approximations of  @xcite via grothendieck s inequality do not apply since the quadratic form does _ not _ induce a bipartition of variables .",
    "* possibility of logarithmic approximation without degree constraints * our logarithmic approximations require some bound on the maximum degree of the given graph .",
    "a natural question is of course if such degree bounds can be removed .",
    "two observations regarding this are relevant :    @xmath68 a technical difficulty that arises for this purpose is from the fact that the modularity value can be precisely @xmath6 ( such as when the given graph is @xmath69 , @xmath70 or a graph obtained from @xmath69 by removing @xmath71 edges ) or arbitrarily close to @xmath6 ( such as when the given graph is the complement of small degree graph ) .",
    "thus , at the very least , a non - trivial approximation without such degree bounds would require an efficient polynomial - time computable characterization of the topology of graphs whose modularity values can be arbitrarily small together with a special algorithmic approach to handle these graphs ; approaches using quadratic forms or the regularity lemma do not suffice in this respect .",
    "@xmath68 the negative weights of the nodes start playing a more crucial role in the value of modularity when it is close to @xmath6 .",
    "as observed by other researchers before , negative diagonal entries in the coefficient matrix of the objective that shifts the objective value close to @xmath6 are sometimes difficult for approximate .",
    "* relationships to other clustering or partitioning methods * modularity clustering can be defined by several equivalent equations , which may _ seem to suggest _ at a first glance that combinatorially the problem may be either similar to ( via equations  and  @xmath68 ) some form of _ correlation clustering _ , or ( via equation",
    "@xmath68 ) similar to _ graph bisection _",
    "( for two clusters ) , or similar to _ minimum @xmath72-way cut_/_clique - partition _ type of problem ( for arbitrary number of clusters , depending on whether the graph is unweighted or weighted ) , or similar to ( via lemma  [ subgraph - selection ] ) some type of _ dense subgraph _ problem .",
    "however , our results show both similarities and differences between modularity clustering and these problems . for example",
    ", our hardness result for dense graphs should be contrasted with other partitioning problems of similar nature , such as max - cut , graph bisection , graph separation , minimum @xmath72-way cut and some versions of correlation clustering , for which one can design a ptas ( _ e.g. _ , see  @xcite ) .",
    "in this section we show bounds on @xmath51 as well as some useful properties of the solution if we restrict the number of clusters to some pre - specified value @xmath44 ; we will refer to this as the _ @xmath44-clustering _ problem .",
    "the objective function @xmath45 can be equivalently represented ( via algebraic manipulation as observed in  @xcite ) as follows .",
    "let @xmath73 denote the number of edges whose both endpoints are in the cluster @xmath74 , @xmath75 denote the number of edges one of whose endpoints is in @xmath74 and the other in @xmath76 and @xmath77 denote the sum of degrees of nodes in cluster @xmath74 .",
    "then , @xmath78 since @xmath79 for any @xmath80 , we can alternatively express @xmath81 as @xmath82 this , along with equation  , this gives us the following third equation of modularity ( note that now each pair of clusters contributes to the sum in equation  ): @xmath83 let @xmath84 denote the modularity value of an optimal clustering when one is allowed at most @xmath44 clusters .",
    "the following two lemmas make use of the alternative formulations described above .",
    "the first lemma asserts , via a probabilistic argument , that the optimal value does not go down by too much in our restricted setting .",
    "[ ktotwo ] for any @xmath85 , @xmath86 .",
    "the inequality @xmath87 can be proved as follows . for any clustering @xmath21 with at most @xmath44 clusters ,",
    "equation   gives @xmath88 .",
    "the first sum in this equation is upper - bounded by @xmath7 . using cauchy - schwarz inequality ,",
    "we get @xmath89 , giving a lower - bound of @xmath90 for the second sum .",
    "the inequality @xmath91 can be proved as follows . for @xmath92 ,",
    "the statement is trivially true .",
    "now consider @xmath93 .",
    "we will make use of equation   for modularity values .",
    "suppose that our optimal clustering @xmath21 has more than @xmath44 clusters .",
    "denote each term in the summation of equation   by @xmath94 , _",
    "i.e. _ , @xmath95 ; thus @xmath96",
    ". we can randomly assign each of the clusters to one of @xmath44 superclusters .",
    "let @xmath97 be the indicator random variable of the event @xmath74 and @xmath76 are in different clusters and let @xmath98 denote the random @xmath44-clustering .",
    "it is easy to see that any pair @xmath74 and @xmath76 will contribute @xmath94 to the final clustering if and only if they are not in the same supercluster .",
    "therefore , @xmath99 .",
    "thus we get @xmath100=\\sum_{i < j}{{\\operatorname{\\mathbb{e}}}[i_{ij}]{\\mathsf{m}}_{ij}}=\\sum_{i < j}{\\left(1-\\frac{1}{k}\\right){\\mathsf{m}}_{ij } } = \\left(1-\\frac{1}{k}\\right){\\mathsf{opt}}$ ] .",
    "the next lemma shows that the @xmath54-clustering problem can also be alternatively viewed as a special kind of `` subgraph selection '' problem .",
    "[ subgraph - selection ] let @xmath101 and @xmath102 be any partition of @xmath40 . then , @xmath103 .",
    "remember that , for any node @xmath42 , @xmath104 .",
    "thus , @xmath105 and therefore @xmath103 .",
    "this hardness result may be contrasted with the results in section  [ rl ] where we show that the modularity value can be approximated to within any _ constant additive error _ for dense graphs using the regularity lemma .",
    "however , the @xmath65-hard instances here have modularity values that are very close to @xmath6 ( around @xmath106 ) , thus the constant additive error provides no guarantee on the approximation ratio .",
    "[ maxsnp ] it is @xmath1-hard to approximate the @xmath44-clustering problem , for any @xmath44 , on @xmath107-regular graphs within a factor of @xmath108 for some constant @xmath109 .    we reduce the maximum - cardinality independent set problem for @xmath52-regular graphs ( 3-@xmath110 ) to our problem .",
    "an instance of 3-@xmath110  consists of a @xmath52-regular graph @xmath111 , and the goal is to find a _",
    "maximum cardinality _ subset of nodes @xmath112 such that every pair of nodes @xmath42 and @xmath34 in @xmath113 is _ independent _ , _ i.e. _ , @xmath114 . for notational convenience ,",
    "let @xmath115 and @xmath116 .",
    "the following inapproximability result is known for 3-@xmath110 .",
    "@xcite[bk ] for any language @xmath117 in @xmath1 , there exists a polynomial - time reduction such that given an instance @xmath118 of @xmath117 produces an instance of @xmath15 of 3-@xmath110 with @xmath119 nodes such that :    * if @xmath120 then @xmath15 has a maximum independent set of cardinality at least @xmath121 ; * if @xmath122 then every maximum independent set of @xmath15 is of cardinality at most @xmath123 .",
    "we start with an instance @xmath118 of @xmath117 and translate it to an instance @xmath15 of 3-@xmath110  as described in theorem  [ bk ] ; we refer to such an instance of 3-@xmath110as a `` hard '' instance .",
    "given a hard instance @xmath124 of 3-@xmath110  with @xmath125 nodes and @xmath126 edges such that a maximum independent set is of size either at most @xmath127 or at least @xmath121 , consider the complement @xmath128{0pt}{2pt}h}=(v,\\overline{\\rule[8pt]{0pt}{2pt}f})$ ] of @xmath15 , _",
    "i.e. _ , the graph with @xmath128{0pt}{2pt}f}=\\{\\,\\{u , v\\}\\,|\\,u , v\\in v,\\,u\\neq v\\}\\setminus f$ ] .",
    "since @xmath15 is @xmath52-regular , @xmath128{0pt}{2pt}h}$ ] is @xmath107-regular .",
    "the input to our @xmath54-clustering problem is this graph @xmath128{0pt}{2pt}h}$ ] . for notational uniformity , we will denote the graph @xmath128{0pt}{2pt}h}$ ] by @xmath22 with @xmath129{0pt}{2pt}f}$ ] .",
    "note that @xmath112 is an independent set of @xmath15 if and only if @xmath113 is a clique in @xmath12 .",
    "let @xmath130 and @xmath51 denote the size of a maximum independent set of @xmath15 and the optimal modularity value of @xmath12 , respectively .",
    "we prove our claim by showing the following :    ( completeness ) : :    if @xmath131 then    @xmath132 .",
    "( soundness ) : :    if @xmath133 then    @xmath134 .    for any subset @xmath135 of nodes in @xmath12 ,",
    "let @xmath136 be the number of edges in @xmath12 with both end - points in @xmath113 and @xmath137 be the sum of degrees of nodes in @xmath113 in the graph @xmath12 , _",
    "i.e. _ , @xmath138 .",
    "[ easydir ] if @xmath131 then @xmath139 .",
    "suppose @xmath15 has a has an independent set @xmath113 with @xmath140 for some @xmath141 .",
    "since @xmath113 is a clique of @xmath12 , it follows that @xmath142 and @xmath143 .",
    "consider the solution @xmath144 of @xmath54-clustering on @xmath12 .",
    "using lemma  [ subgraph - selection ] and equation   we get @xmath145      * case i : when an optimal solution has exactly @xmath54 clusters*.    suppose that the optimal solution is @xmath144 of @xmath54-clustering on @xmath12 with @xmath140 and @xmath147 .",
    "[ exact - count ] let @xmath148 be the size ( number of nodes ) of a largest size clique in the node - induced subgraph @xmath149 where @xmath150 .",
    "then , @xmath151 .",
    "since the size of the largest clique in @xmath152 is @xmath153 , for each of the remaining @xmath154 nodes , they will not be connected to at least one node inside the clique .",
    "hence , using equation  , we get @xmath155    [ less - than - half ] @xmath156 .    using the previous lemma and the facts that @xmath157 and @xmath158",
    ", we have two cases :    * case 1 : * @xmath159",
    ". then @xmath160 .",
    "the function @xmath161 is increasing in the range @xmath162\\right.$ ] since @xmath163 and @xmath164 if @xmath165 .",
    "thus , @xmath166 , and thus @xmath167 .",
    "* case 2 : * @xmath168 .",
    "since @xmath169 and @xmath170 is an increasing function of @xmath171 , we have @xmath172 .",
    "the function @xmath173 satisfies @xmath174 and @xmath175 thus , @xmath176 and we have @xmath177 .",
    "finally , using lemma  [ subgraph - selection ] , @xmath178,@xmath68 completing the soundness proof for this case .",
    "* case ii : when an optimal solution has more than @xmath54 clusters*.    for convenience of calculations , we would like to drop the @xmath179 scaling term from equation  .",
    "to this end , we define @xmath180 .",
    "let @xmath181 be an optimal solution of modularity clustering that uses a _ minimum _",
    "@xmath182 number of clusters .",
    "let @xmath183 , and suppose that @xmath184 is a largest clique of size @xmath185 in the graph @xmath186 .",
    "note that @xmath187 for all @xmath188 , @xmath189 and we need to show that @xmath190 .",
    "let @xmath191 denote @xmath192 .",
    "[ small - component ] @xmath193 .",
    "@xmath194 is maximized when the nodes in @xmath195 form a clique .",
    "thus , @xmath196    [ sm - cor ] if @xmath197 then @xmath198 . if @xmath199 then @xmath200 .",
    "[ complement ] suppose that @xmath201 for some @xmath202 and @xmath203 is the size of a largest clique in @xmath204 .",
    "then , @xmath205    note that @xmath206",
    ". then by lemma  [ subgraph - selection ] , @xmath207 where the inequality follows from lemma  [ exact - count ] if we replace @xmath195 by @xmath191 .",
    "since @xmath208 , we have @xmath209 since @xmath210 , the arguments in lemma  [ less - than - half ] can be directly applied on @xmath211 to show that @xmath212 .",
    "let us call a cluster @xmath195 a _ giant component _",
    "if @xmath213 .",
    "note that since @xmath214 , we can have _ at most two _ giant components .",
    "we have therefore three cases depending on the number of giant components .",
    "* case ( i ) : @xmath21 has no giant components * note that @xmath21 can have at most three clusters containing _ strictly _ more than @xmath215 nodes .",
    "if @xmath21 contains no such cluster then by corollary  [ sm - cor ] @xmath216 .",
    "if @xmath21 contains exactly one such cluster , say @xmath101 , then @xmath217 by lemma  [ less - than - half ] ( if @xmath218 ) or lemma  [ complement ] ( if @xmath219 ) .",
    "if @xmath21 contains exactly two such clusters , say @xmath101 and @xmath102 , then again @xmath220 by lemma  [ less - than - half ] and lemma  [ complement ] .",
    "otherwise , suppose that @xmath21 contains _ exactly three _",
    "such clusters , say @xmath101 , @xmath102 and @xmath221 .",
    "let @xmath222 for @xmath223 .",
    "then , @xmath224 .",
    "using corollary  [ sm - cor ] we have : @xmath225 * case ( ii ) : @xmath21 has one giant component * let @xmath101 be the giant component . since @xmath226 , there are at most two other clusters with strictly more than @xmath215 nodes .",
    "* subcase ( ii - a ) : there is one other cluster with strictly more than @xmath227 nodes * let this cluster be @xmath102 . by corollary  [ sm - cor ] , @xmath228 .",
    "note that @xmath229 .",
    "now , by reusing the calculations of lemma  [ less - than - half ] and using lemma  [ complement ] we get @xmath230 * subcase ( ii - b ) : there are two other clusters with strictly more than @xmath227 nodes * let these clusters be @xmath102 and @xmath221 .",
    "then , @xmath231 . by corollary  [ sm - cor ] , @xmath232 .",
    "let @xmath233 and @xmath234 with @xmath235 .",
    "thus , @xmath236 since @xmath237 , we have @xmath238 .",
    "* case ( iii ) : @xmath21 has two giant components * let @xmath101 and @xmath102 be the two giant components with @xmath239 and @xmath240 for some @xmath241 . since @xmath242 , by corollary  [ sm - cor ] @xmath228 .",
    "now , by reusing the calculations in the proof of the case of @xmath243 of lemma  [ less - than - half ] and using lemma  [ complement ] we get @xmath244      using the algorithmic version of the regularity lemma in  @xcite we can show that if the given graph is dense then , for any given constant @xmath245 , there is a polynomial - time algorithm that returns a solution of modularity value at least @xmath246 .",
    "[ dense ] suppose that the given graph @xmath22 is dense , _ i.e. _ , @xmath247 for some constant @xmath202 .",
    "then , for any given constant @xmath248 , there is a polynomial - time algorithm that returns a solution of value at least @xmath246 .",
    "the @xmath72-way cut problem is defined as follows .",
    "we are given an weighted graph @xmath22 with @xmath249 being the weight of the edge @xmath29 .",
    "a valid solution is a partition of @xmath40 to @xmath72 subsets @xmath250 , and the goal is to _ maximize _ the sum of weights of those edges whose end - points are in different subsets , _",
    "i.e. _ , maximize @xmath251 , where @xmath252 is the set of all `` inter - partition '' edges .",
    "the following result was proved in  @xcite .",
    "@xmath253@xcite[fk ] given an weighted graph @xmath22 of @xmath119 nodes and any constant @xmath254 there is a polynomial - time algorithm @xmath255 which , computes a partition @xmath256 of @xmath40 such that @xmath257 where @xmath258 is an optimal ( maximum weight ) partition .    equation   can be used to assign edge weights to cast our modularity clustering problem as an @xmath72-way cut problem in the following manner .",
    "consider the complete graph on @xmath119 nodes ( @xmath69 ) and let @xmath259 for the edge @xmath260 of @xmath69 . then , for a partition @xmath250 of the nodes of @xmath69 , @xmath261 let @xmath262 be the objective value of an approximate solution of the modularity clustering problem on the given graph obtained by using the @xmath72-way partitioning of theorem  [ fk ] with @xmath263 .",
    "then , @xmath264",
    "brandes _ et al . _",
    "@xcite proved @xmath1-hardness of the @xmath54-clustering problem provided nodes with very large degrees are allowed in the input graph .",
    "thus it is not a priori clear whether calculating modularity on very sparse graphs becomes easy and admits an _ exact _ polynomial - time algorithm .",
    "however , we rule out this possibility of exact solution . our construction is similar to that in  @xcite , but carefully replaces dense graphs with _ nicely behaving _ sparse graphs .",
    "we have to do a more careful analysis of the properties of an optimal @xmath54-clustering so as to get the following result .",
    "[ nph ] computing @xmath265 is @xmath1-complete even for @xmath55-regular graphs for any _ constant _ @xmath56 .",
    "the decision version @xmath266 of our problem is as follows :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ given a @xmath55-regular graph @xmath12 and a number @xmath267 , is there a clustering @xmath21 of @xmath12 into at most two clusters for which @xmath268 _ ? _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    our reduction is from the minimum graph bisection problem for @xmath58-regular graphs ( @xmath269 ) : _ given a @xmath58-regular graph @xmath12 with @xmath119 nodes ( with even @xmath119 ) and an integer @xmath270 , is there a clustering into two clusters each of @xmath271 nodes such that it `` cuts '' at most @xmath270 edges , _",
    "i.e. _ , at most @xmath270 edges have two end - points in different clusters _ ?",
    "@xmath269 is known to be @xmath1-complete  @xcite .",
    "we reduce an instance @xmath12 of @xmath269 to an instance of @xmath266 in a manner similar to that in  @xcite .",
    "every node in @xmath12 is replaced by a copy of an @xmath119-node @xmath55-regular graph @xmath15 such that the minimum cut ( minimum number of edges in a cut ) of @xmath15 is at least @xmath55 . such a family of graphs can be constructed in the following recursive manner :    * for @xmath272 , the @xmath54-regular graph , namely a simple cycle consisting of @xmath119 nodes , has a minimum cut of @xmath54 edges . * for @xmath273 , consider two simple cycles @xmath274 and @xmath275 , each consisting of @xmath271 nodes .",
    "consider an arbitrary matching between the nodes of @xmath276 and @xmath277 and add the edges corresponding to this matching to obtain a @xmath52-regular graph @xmath111 .",
    "consider an arbitrary subset of nodes @xmath112 of @xmath15 .",
    "then , * * if @xmath278 and @xmath279 , then the number of cut edges is at least @xmath58 . * * otherwise , assume that @xmath280 ( the other case is symmetric ) and thus @xmath281 . if @xmath282 then the number of cut edges is exactly @xmath283 . otherwise , the number of cut edges is at least @xmath54 ( corresponding to two edges of the cycle in @xmath277 ) plus @xmath7 ( corresponding to one of the matching edges added ) . * for @xmath284 ,",
    "a recursive construction of such graphs follows in a similar manner : take such a @xmath285-regular graph @xmath15 on @xmath119 nodes for which the inductive hypothesis applies and add a simple cycle to @xmath15 all of whose edges are different from those in @xmath15 . consider a cut in this graph . by the induction hypothesis the cut contains at least @xmath286 edges of @xmath15 and at least @xmath54 additional edges of the new cycle",
    "added to @xmath15 .",
    "let @xmath287 denote the copy of @xmath15 corresponding to the node @xmath288 .",
    "delete two independent edges ( _ i.e. _ , edges without any common end - points ) in @xmath287 .",
    "the four edges connected to @xmath34 are now connected to the four endpoints of these deleted edges .",
    "this is done in order to make the final graph @xmath152 @xmath55-regular is replaced by a copy of @xmath69 producing the final graph with non - constant degrees .",
    "since @xmath12 is @xmath58-regular , we need @xmath289 . ] .",
    "note that the number of nodes in the transformed graph @xmath152 is @xmath290 , whereas the number of edges is @xmath291 .",
    "since two edges are removed from @xmath15 in the construction , the minimum cut in each modified copy of @xmath15 is at least @xmath286 .",
    "the correctness of the reduction follows by showing that @xmath269 has a solution with at most @xmath270 cut edges if and only if @xmath292 .",
    "let @xmath258 be an optimal clustering of @xmath152 .",
    "[ exact2 ] @xmath258 has exactly two clusters and @xmath293 .",
    "it suffices to show a clustering @xmath294 such that @xmath295 . to this end , let @xmath296 for some @xmath34 , and let @xmath297 contain the rest . then using equation   and the fact that @xmath298 , we get @xmath299    the next lemma shows how to normalize a solution without decreasing the modularity value . part  * ( a ) * of the lemma states that @xmath258 can not have any copy of @xmath15 split across clusters , whereas part  * ( b ) * implies that any optimal clustering has to be a bisection of the graph .",
    "[ lm : completeh ] it is possible to normalize an optimal solution @xmath258 without decreasing the modularity value such that the following two conditions hold :    ( a ) : :    for every @xmath288 , there exists a cluster    @xmath300 such that    @xmath301 .",
    "( b ) : :    each cluster in @xmath258 contains exactly    @xmath271 copies of @xmath15 .",
    "suppose the set of nodes of @xmath152 is partitioned into three subsets @xmath302 , @xmath303 and @xmath304 .",
    "let @xmath305 , and we want to transfer the nodes in @xmath304 to the other cluster to form the clustering @xmath306 .",
    "for any two disjoint subsets @xmath307 and @xmath308 of nodes of @xmath152 , let @xmath309 denote the number of edges one of whose endpoints is in @xmath307 and the other in @xmath308 and @xmath310 denote the sum of degrees of nodes in @xmath307 . then , using equation   or equation  , the gain in modularity @xmath311 can be simplified and written as @xmath312 .",
    "using the fact that @xmath152 is @xmath55-regular and substituting for @xmath313 , we get @xmath314    * ( a ) * let us assume that there exists a @xmath288 such that @xmath287 is split across clusters in the optimal clustering @xmath315 . without loss of generality , we can assume that @xmath316 .",
    "we will transfer the part of @xmath287 in @xmath317 from @xmath317 to @xmath297 .",
    "let @xmath318 , @xmath319 , @xmath320 , and @xmath321 .",
    "then the part of @xmath287 in @xmath297 has a size of @xmath322 . by our assumption ,",
    "@xmath323 substituting this in equation  , we get @xmath324+n^2(m_{bc}-m_{ac})\\ ] ] now , since the original graph @xmath12 was @xmath58-regular , at most @xmath58 extra inter - cluster edges will appear after the transfer .",
    "thus , @xmath325 .",
    "the term @xmath326 represents the number of edges between @xmath297 and @xmath327 , which is at least the number of edges between the two parts of @xmath287 .",
    "thus , @xmath326 is at least the number of edges in a minimum cut of @xmath287 which is at least @xmath286 .",
    "this gives @xmath328 where the second inequality is due to the fact that @xmath329 is maximized when @xmath330 , and the last inequality is satisfied when @xmath56 .",
    "hence the modularity can be strictly improved by putting each copy of @xmath15 completely in a cluster .",
    "* ( b ) * by the previous part , each @xmath287 is contained completely in one cluster of @xmath315 .",
    "now assume that @xmath317 has more copies of @xmath15 than @xmath297 .",
    "since @xmath119 is even , this implies that @xmath317 has at least two more copies of @xmath15 than @xmath297 .",
    "we will create a new clustering by transferring a copy of @xmath15 from @xmath317 to @xmath297 . then the gain in modularity after this transfer is given by equation  , where @xmath304 denotes the transferred copy of @xmath15 , @xmath331 and @xmath332 . by our assumption , @xmath333 .",
    "therefore we can simplify the first term and get @xmath334 .",
    "also , since the original graph @xmath12 was @xmath58-regular , at most @xmath58 extra inter - cluster edges will appear after the transfer . simplifying and substituting values , @xmath335 .",
    "hence , the modularity can be strictly improved by balancing out the copies of @xmath15 in both clusters .",
    "armed with the above lemma , one can now prove the @xmath1-completeness of our problem .",
    "we will use the above construction to reduce an instance @xmath336 of @xmath269 to an instance @xmath337 of @xmath266 with @xmath338 .",
    "now suppose @xmath315 is an optimal 2-clustering of @xmath152 .",
    "then , @xmath339 . by lemma  [ lm : completeh]*(b ) * , @xmath340 .",
    "also , because of lemma  [ lm : completeh]*(a ) * , @xmath341 only has edges from @xmath12 , thus representing a bisection of @xmath12 .",
    "therefore , @xmath342 if and only if @xmath343 .",
    "[ cols= \" < \" , ]     [ sk ] if @xmath345{n}}{16\\ln n}$ ] then @xmath346 .    we execute the greedy algorithm on @xmath152 as shown in fig .",
    "note that the graph @xmath347 has a maximum weighted degree of precisely @xmath348 , the number of nodes adjacent to any node @xmath34 in @xmath152 is at most @xmath349 , and @xmath350 .",
    "let @xmath351 .",
    "since the weight of any edge in @xmath352 is at least @xmath353 , it is easy to see that during each selection of cluster @xmath354 , @xmath355 is at least @xmath356 times the total weight of edges whose one end - point was in @xmath354 .",
    "thus , @xmath357 .",
    "note that for all sufficiently large @xmath119 , @xmath358 thus , for all sufficiently large @xmath119 , we have @xmath359 @xmath360    since @xmath361{n}}{16\\ln n}$ ] and @xmath362 , @xmath363 . selecting @xmath364 in theorem  [ sdp ] , we have the following chain of implications :    * @xmath365 . *",
    "thus , @xmath366 . *",
    "thus , @xmath367>\\dfrac{{\\mathsf{opt}}_2'}{t^2}-34\\,\\e^{-\\frac{t^2}{2}}\\,d_{\\max}\\,{\\mathsf{opt}}_2'>\\dfrac{{\\mathsf{opt}}_2'}{17\\,\\ln d_{\\max}}$ ] .",
    "and thus the final modularity value achieved is at least @xmath368",
    "leicht and newman  @xcite generalized the modularity measure to weighted directed graphs in the following manner .",
    "let @xmath369 be the input _ directed _ graph with @xmath370 being the function mapping edges to non - negative weights . for a node @xmath26 ,",
    "let @xmath371 and @xmath372 denote the _ weighted in - degree _ and the _ weighted out - degree _ of @xmath34 , respectively .",
    "let @xmath373 and let @xmath374 $ ] denote the weighted adjacency matrix of @xmath12 , _",
    "i.e. _ , @xmath375 if @xmath376 and @xmath30 otherwise . note that the matrix @xmath302 is _ not _ necessarily symmetric now .",
    "then , equation   computing the modularity value of a cluster @xmath37 needs to be modified as @xmath377 with some effort , we show that we can extend all our complexity results for undirected networks to directed networks .",
    "let @xmath378 denote the average weighted degree of nodes of @xmath12 , and let @xmath379 and @xmath380 denote the maximum weighted in - degree and maximum weighted out - degree , respectively , of nodes in @xmath12 . for convenience , we normalize all the weights such that @xmath381 is _ exactly _ twice the number of directed edges of @xmath12 . since the given graph can be assumed to be weakly - connected , @xmath362 .      *",
    "( b ) * it is @xmath1-hard to approximate the @xmath44-clustering problem , for any @xmath44 , within a factor of @xmath108 for some constant @xmath109 even if every node of the given directed graph has @xmath384 .",
    "remember that @xmath388 the corresponding modification in equation   is @xmath389 where @xmath390 , @xmath391 and @xmath73 as the total weight of edges whose both endpoints are in the cluster @xmath74 . finally , since @xmath392 for any @xmath80",
    ", we can alternatively express @xmath81 as @xmath393 .",
    "thus , equation   now becomes @xmath394 where @xmath75 as the total weight of the edges directed from @xmath74 to @xmath76 .",
    "* ( a ) & ( b ) * these two results follow by the following easy observation .",
    "consider a given undirected unweighted graph @xmath12 with @xmath119 nodes and @xmath313 edges , and let @xmath395 be the directed graph obtained by replacing each edge @xmath260 of @xmath12 by two directed edges @xmath396 and @xmath397 , each of weight @xmath7 ; thus @xmath398 .",
    "let @xmath399 $ ] be the adjacency matrix of @xmath395 , and @xmath400 and @xmath401 be the in - degree and out - degree of the node @xmath34 in @xmath395 .",
    "then , it is easy to see that every clustering of @xmath12 of modularity value @xmath402 translates to a corresponding clustering of @xmath395 of the same modularity value and vice versa .    * ( c ) & ( d ) * it is easy to see that the proof of lemma  [ ktotwo ] works for directed networks as well by using equation   instead of equation   in the proof .",
    "thus again it suffices to approximate @xmath265 .",
    "let @xmath403\\in{\\mathbb{r}}^{n\\times n}$ ] be the matrix whose entries are defined by @xmath404 . then , letting @xmath405 be the indicator variable denoting in which partition the node @xmath80 belongs , equation   can be rewritten for a @xmath54-clustering of directed networks as @xmath406 where @xmath407 $ ] is a _",
    "symmetric _ matrix . note that @xmath408 where @xmath409 is given by : @xmath410 let @xmath411 $ ] be the real symmetric matrix defined by @xmath412 as in the proof of theorem  [ log - approx ] , it follows that @xmath413 . for notational convenience ,",
    "define @xmath414 and @xmath415 .",
    "let @xmath15 be the undirected graph obtained from the given graph @xmath12 by ignoring the direction of the edges and removing parallel edges ( if any ) ; every node in @xmath15 has a degree between @xmath55 and @xmath423 .",
    "greedily pick a _",
    "maximal _ matching in @xmath15 , each time selecting an edge and deleting all ( at most @xmath424 ) edges that have a common end - point with the picked edge .",
    "such a matching contains at least @xmath425 edges , each of weight at least @xmath426 in @xmath12 .",
    "consider the clustering of @xmath12 where each edge in the matching is a separate cluster of two nodes , and each of the remaining nodes is a separate cluster of one node .",
    "the modularity value of this solution is _ at least _",
    "@xmath427 thus , @xmath428 .",
    "moreover , since @xmath385 we have @xmath429 * ( d ) @xmath430{n}}{64\\ln n}$]*.    let @xmath431 be the undirected weighted graph obtained from @xmath12 whose adjacency matrix is @xmath432 $ ] with @xmath433 since @xmath434 , it suffices to show an approximation for @xmath435 .",
    "the algorithm in the proof of theorem  [ lbq](b ) with @xmath436 can now be appropriately modified to obtain the desired approximation if one identified the quantity @xmath348 in that proof with @xmath437 .",
    "exact or approximate solutions to the modularity measure may produce many _ trivial _ clusters of single nodes .",
    "for example , the following proposition shows that for a large class of graphs there exists a clustering in which every cluster except one consists of a single node gives a modularity value that has a modularity value of _ at least _",
    "@xmath439% of the optimal .",
    "let @xmath441 be an optimal @xmath54-clustering of @xmath12 .",
    "by lemma  [ ktotwo ] , @xmath442 . by lemma  [ subgraph - selection ]",
    ". suppose that we replace the cluster @xmath444 by @xmath445 trivial clusters each of a single node , and let @xmath304 be this new clustering if @xmath12 is @xmath55-regular , then @xmath446 .",
    "by lemma  [ lbq ] , @xmath447 , and thus @xmath448 .",
    "similarly , for the case when @xmath12 is undirected weighted with @xmath361{n}}{16\\,\\ln n}$ ] , the proof of theorem  [ log - approx ] shows that @xmath449 , and thus @xmath450 . by lemma  [ sk ] @xmath451 , and thus again @xmath448 .",
    "we investigate one alternative to overcome such a shortcoming : define the modularity of the network as the _ minimum _ of the modularities of individual clusters .",
    "equation   now becomes @xmath452 we will add the superscript `` max - min '' to differentiate the relevant quantities for this objective from the usual summation objective discussed before , _",
    "e.g. _ , we will use @xmath453 instead of @xmath51 . in a nutshell , our results in the following lemma show that the @xmath438 objective indeed avoids generating trivial clusters ( lemma  [ discur](a ) ) , and the optimal objective value for @xmath438 objective is precisely scaled by a factor of @xmath54 from that of the sum objective , thereby keeping the overall quantitative measure the same ( lemma  [ nomorethan2](b ) ) .            *",
    "( b ) * consider an optimal clustering @xmath458 with a _",
    "number @xmath44 of clusters such that @xmath459 .",
    "first , consider the case when @xmath460 .",
    "we will show that for some non - empty subset @xmath461 of @xmath462 we must have @xmath463 ; this contradicts the minimality of @xmath44 in our choice of of the optimal cluster .",
    "note that @xmath464 .",
    "we will make use of equation   of modularity of a cluster .",
    "let @xmath465 .",
    "then , @xmath466 .",
    "consider a subset @xmath461 obtained by randomly and uniformly selecting each @xmath195 with a probability of @xmath353 .",
    "note that each pair of nodes @xmath42 and @xmath34 belonging to the same cluster is selected with a probability of @xmath353 , whereas each pair of nodes belonging to different clusters is selected with a probability of @xmath467 .",
    "thus , @xmath468= \\frac{{\\mathsf{m}}({\\mathcal{s}})}{2}+\\frac{{\\mathsf{m}}(\\widetilde{{\\mathcal{s}}})}{4}=\\frac{{\\mathsf{m}}({\\mathcal{s}})}{4 } \\\\",
    "\\geq \\left(\\frac{k}{4}\\right){\\mathsf{m}}^{{\\mbox{\\small\\sf max - min}}}({\\mathcal{s}})\\geq{\\mathsf{m}}^{{\\mbox{\\small\\sf max - min}}}({\\mathcal{s}})\\end{gathered}\\ ] ] and therefore there exists such a subset @xmath461 with the properties as claimed .",
    "otherwise , consider the case when @xmath469 .",
    "let @xmath470 for @xmath471 .",
    "without loss of generality , let @xmath472 , @xmath473 and @xmath474 for some @xmath475 and @xmath476 ; thus , @xmath477 .",
    "consider the three @xmath54-clusterings of @xmath12 : @xmath478 , @xmath479 and @xmath480 .",
    "since none of these three @xmath54-clusterings should be an optimal solution , we must have @xmath481 @xmath482 @xmath483 thus , we have @xmath484 which implies @xmath485 , contradicting @xmath476 .    thus , we have shown there is an optimal solution for our @xmath438 objective with no more than two clusters . obviously , if @xmath486 then an optimal solution can not consist of a single cluster",
    "let @xmath487 be the two clusters in this case .",
    "by lemma  [ subgraph - selection ] , we have @xmath103 which implies @xmath455 .",
    "a theoretically appealing choice for alternative null models is the classical erds - rnyi random graph model @xmath488 , namely each possible edge @xmath260 is selected in @xmath12 uniformly and randomly with a probability of @xmath489 for some fixed @xmath490 . to summarize , our results in this section show that the new modularity measure is precisely newman s modularity measure on an appropriately defined regular graph , and thus our previous results on regular graphs",
    "can be applied to this case .",
    "we will add the superscript `` er '' to differentiate the relevant quantities for this objective from the usual summation objective discussed before , _",
    "e.g. _ , we will use @xmath491 instead of @xmath51 . for simplicity",
    ", we consider the case of _ unweighted graphs only_. let @xmath22 be the given unweighted input graph with @xmath492 number of edges .",
    "select @xmath493 such that the null model has the _ same _ number of edges _ in expectation _ as the given graph @xmath12 .",
    "equation   then becomes @xmath494 let @xmath119 be sufficiently large such that @xmath495 .",
    "it can then be seen that @xmath496 is precisely the same as @xmath81 on a @xmath497-regular graph .",
    "thus , our previous results on regular graphs can be generalized to this case in the following manner :      * acknowledgements * we thank mario szegedy for suggestion to investigate the problem for dense graphs and other useful discussions , geetha jagannathan and alantha newman for useful discussions , and mark newman for explaining the significance of negative self - loops in his modularity measure and pointing out references  @xcite .",
    "s. cafieri , p. hansen , l. liberti .",
    "_ improving heuristics for network modularity maximization using an exact algorithm _ ,",
    "proceedings of the third international workshop on model - based metaheuristics , 130 - 139 , 2010 .",
    "h. n. djidjev .",
    "_ a scalable multilevel algorithm for graph clustering and community structure detection _ , in algorithms and models for the web - graph , w. aiello , a. broder , j. janssen , and e. milios ( eds . ) , lncs 4936 , 117 - 128 , springer - verlag , 2007 ."
  ],
  "abstract_text": [
    "<S> given a graph of interactions , a _ module _ ( also called a _ community _ or _ cluster _ ) is a subset of nodes whose _ fitness _ is a function of the _ statistical significance _ of the pairwise interactions of nodes in the module . </S>",
    "<S> the topic of this paper is a _ model - based _ </S>",
    "<S> community finding approach , commonly referred to as _ modularity clustering _ </S>",
    "<S> , that was originally proposed by newman  @xcite and has subsequently been extremely popular in practice ( _ e.g. _ , see  @xcite ) . </S>",
    "<S> various heuristic methods are currently employed for finding the optimal solution . however , as observed in  @xcite , the exact computational complexity of this approach is still largely unknown .    to this end , we initiate a systematic study of the computational complexity of modularity clustering . due to the specific quadratic nature of the modularity function , </S>",
    "<S> it is necessary to study its value on _ sparse _ graphs and _ dense _ graphs _ separately_. our main results include a @xmath0-inapproximability for dense graphs and a logarithmic approximation for sparse graphs . </S>",
    "<S> we make use of several combinatorial properties of modularity to get these results . </S>",
    "<S> these are the first non - trivial approximability results beyond the @xmath1-hardness results in  @xcite .    </S>",
    "<S> community detection , modularity clustering , approximation algorithms , approximation hardness , social networks , biological networks    05c85 , 68q17 , 68q25 , 68w25 , 68w40 , 90c27 , 90c35 , 90c22 , 90c35 , 91c20 </S>"
  ]
}
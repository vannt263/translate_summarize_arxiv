{
  "article_text": [
    "reed  solomon ( rs ) codes are among the most widely used error control codes , with applications in space communications , wireless communications , and consumer electronics  @xcite . as such , efficient decoding of rs codes is of great interest .",
    "the majority of the applications of rs codes use syndrome - based decoding algorithms such as the berlekamp  massey algorithm ( bma )  @xcite or the extended euclidean algorithm ( eea )  @xcite .",
    "alternative hard decision decoding methods for rs codes without using syndromes were considered in  @xcite . as pointed out in  @xcite ,",
    "these algorithms belong to the class of frequency - domain algorithms and are related to the welch  berlekamp algorithm  @xcite .",
    "in contrast to syndrome - based decoding algorithms , these algorithms do not compute syndromes and avoid the chien search and forney s formula .",
    "clearly , this difference leads to the question whether these algorithms offer lower complexity than syndrome - based decoding , especially when fast fourier transform ( fft ) techniques are applied  @xcite .",
    "asymptotic complexity of syndromeless decoding was analyzed in  @xcite , and in  @xcite it was concluded that syndromeless decoding has the same asymptotic complexity @xmath1 as syndrome - based decoding  @xcite . however , existing asymptotic complexity analysis is limited in several aspects . for example , for rs codes over fermat fields @xmath2 and other prime fields  @xcite , efficient multiplicative fft techniques lead to an asymptotic complexity of @xmath1 .",
    "however , such fft techniques do not apply to characteristic-2 fields , and hence this complexity is not applicable to rs codes over characteristic-2 fields . for rs codes over arbitrary fields , the asymptotic complexity of syndromeless decoding based on multiplicative fft techniques",
    "was shown to be @xmath3  @xcite .",
    "although they are applicable to rs codes over characteristic-2 fields , the complexity has large coefficients and multiplicative fft techniques are less efficient than fast implementation based on additive fft for rs codes with moderate block lengths  @xcite . as such",
    ", asymptotic complexity analysis provides little help to practical applications .    in this paper , we analyze the complexity of syndromeless decoding and compare it to that of syndrome - based decoding .",
    "aiming to provide guidelines to system designers , we focus on the decoding complexity of rs codes over @xmath4 .",
    "since rs codes in practice have moderate lengths , our complexity analysis provides not only the coefficients for the most significant terms , but also the following terms . due to their moderate lengths ,",
    "our comparison is based on two types of implementations of syndromeless decoding and syndrome - based decoding : direct implementation and fast implementation based on fft techniques .",
    "direct implementations are often efficient when decoding rs codes with moderate lengths and have widespread applications ; thus , we consider both computational complexities , in terms of field operations , and hardware costs and throughputs . for fast implementations , we consider their computational complexities only and their hardware implementations are beyond the scope of this paper .",
    "we use _ additive _ fft techniques based on cantor s approach  @xcite since this approach achieves small coefficients  @xcite and hence is more suitable for moderate lengths .",
    "in contrast to some previous works  @xcite , which count field multiplications and additions together , we differentiate the multiplicative and additive complexities in our analysis .",
    "the main contributions of the papers are :    * we derived a tighter bound on the complexities of fast polynomial multiplication based on cantor s approach ; * we also obtained a tighter bound on the complexity of the fast extended euclidean algorithm ( feea ) for general partial greatest common divisor ( gcd ) computation ; * we evaluated the complexities of syndromeless decoding based on different implementation approaches and compare them with their counterparts of syndrome - based decoding ; both errors - only and errors - and - erasures decoding are considered .",
    "* we compare the hardware costs and throughputs of direct implementations for syndromeless decoders with those for syndrome - based decoders .",
    "the rest of the paper is organized as follows . to make this paper self - contained , in section  [ sec :",
    "rev ] we briefly review fft algorithms over finite fields , fast algorithms for polynomial multiplication and division over @xmath4 , the feea , and syndromeless decoding algorithms .",
    "section  [ sec : time ] presents both computational complexity and decoder architectures of direct implementations of syndromeless decoding , and compare them with their counterparts for syndrome - based decoding algorithms .",
    "section  [ sec : tran ] compares the computational complexity of fast implementations of syndromeless decoding with that of syndrome - based decoding . in section  [ sec : case ] , case studies on two rs codes are provided and errors - and - erasures decoding is discussed .",
    "the conclusions are given in section  [ sec : con ] .",
    "for any @xmath5 ( @xmath6 ) distinct elements @xmath7 , the transform from @xmath8 to @xmath9 , where @xmath10 $ ] , is called a discrete fourier transform ( dft ) , denoted by @xmath11 .",
    "accordingly , @xmath12 is called the inverse dft of @xmath13 , denoted by @xmath14 .",
    "asymptotically fast fourier transform ( fft ) algorithm over @xmath15 was proposed in  @xcite .",
    "reduced - complexity cyclotomic fft ( cfft ) was shown to be efficient for moderate lengths in  @xcite .",
    "a fast polynomial multiplication algorithm using additive fft was proposed by cantor  @xcite for @xmath16 , where @xmath17 is prime , and it was generalized to @xmath18 in  @xcite . instead of evaluating and interpolating over the multiplicative subgroups as in multiplicative fft techniques ,",
    "cantor s approach uses additive subgroups .",
    "cantor s approach relies on two algorithms : multipoint evaluation ( mpe )  ( * ? ? ?",
    "* algorithm 3.1 ) and multipoint interpolation ( mpi )  ( * ? ? ? * algorithm 3.2 ) .",
    "suppose the degree of the product of two polynomials over @xmath4 is less than @xmath19 ( @xmath20 ) , the product can be obtained as follows : first , the two operand polynomials are evaluated using the mpe algorithm ; the evaluation results are then multiplied point - wise ; finally the product polynomial is obtained by the mpi algorithm to interpolate the point - wise multiplication results . the polynomial multiplication requires at most @xmath21 multiplications over @xmath4 and @xmath22 additions over @xmath4  @xcite . for simplicity , henceforth in this paper , all arithmetic operations are over @xmath4 unless specified otherwise .",
    "suppose @xmath23 $ ] are two polynomials of degrees @xmath24 and @xmath25 @xmath26 , respectively . to find the quotient polynomial @xmath17 and the remainder polynomial @xmath27 satisfying @xmath28 where @xmath29 , a fast polynomial division algorithm is available  @xcite .",
    "suppose @xmath30 , the fast algorithm first computes the inverse of @xmath31 by newton iteration .",
    "then the reverse quotient is given by @xmath32 .",
    "finally , the actual quotient and remainder are given by @xmath33 and @xmath34 .",
    "thus , the complexity of polynomial division with remainder of a polynomial @xmath35 of degree @xmath24 by a monic polynomial @xmath36 of degree @xmath25 is at most @xmath37 multiplications / additions when @xmath38  ( * ? ? ?",
    "* theorem  9.6 ) , where @xmath39 stands for the numbers of multiplications / additions required to multiply two polynomials of degree less than @xmath19 .",
    "let @xmath40 and @xmath41 be two monic polynomials with @xmath42 and we assume @xmath43 .",
    "step  @xmath44 ( @xmath45 ) of the eea computes @xmath46 , @xmath47 , and @xmath48 so that the sequence @xmath49 are monic polynomials with strictly decreasing degrees .",
    "if the gcd of @xmath40 and @xmath41 is desired , the eea terminates when @xmath50 . for @xmath51 , @xmath52 , where @xmath53 $ ] and @xmath54 $ ] .",
    "then it can be easily verified that @xmath55 $ ] for @xmath56 . in rs decoding ,",
    "the eea stops when the degree of @xmath57 falls below a certain threshold for the first time , and we refer to this as partial gcd .",
    "the feea in  @xcite costs no more than @xmath58 multiplications / additions when @xmath59  @xcite .      over a finite field @xmath60 ,",
    "suppose @xmath61 are @xmath5 ( @xmath62 ) distinct elements and @xmath63 .",
    "let us consider an rs code over @xmath60 with length @xmath5 , dimension @xmath64 , and minimum hamming distance @xmath65 .",
    "a message polynomial @xmath66 of degree less than @xmath64 is encoded to a codeword @xmath67 with @xmath68 , and the received vector is given by @xmath69 .    the syndrome - based hard decision decoding consists of the following steps : syndrome computation , key equation solver , the chien search , and forney s formula .",
    "further details are omitted , and interested readers are referred to  @xcite .",
    "we also consider the following two syndromeless algorithms :    @xcite ,  ( * ? ? ?",
    "* algorithm 1)[alg : gao ]    1 .",
    "interpolation : construct a polynomial @xmath70 with @xmath71 such that @xmath72 for @xmath73 .",
    "partial gcd : apply the eea to @xmath74 and @xmath70 , and find @xmath75 and @xmath76 that maximize @xmath77 while satisfying @xmath78 and @xmath79 .",
    "3 .   message recovery : if @xmath80 , the message polynomial is recovered by @xmath81 , otherwise output `` decoding failure . ''    ( * ? ? ?",
    "* algorithm 1a )    1 .",
    "interpolation : construct a polynomial @xmath70 with @xmath71 such that @xmath72 for @xmath73 .",
    "partial gcd : find @xmath82 and @xmath83 satisfying @xmath84 and @xmath85 , where @xmath86 and @xmath87 .",
    "apply the eea to @xmath82 and @xmath83 , and stop when the remainder @xmath75 has degree less than @xmath88 .",
    "thus , we have @xmath89 .",
    "message recovery : if @xmath90 , output `` decoding failure '' ; otherwise , first compute @xmath91 , and then obtain @xmath92 . if @xmath93 , output @xmath94 ; otherwise output `` decoding failure . ''",
    "[ alg : gao_mod ]    compared with algorithm  [ alg : gao ] , the partial gcd step of algorithm  [ alg : gao_mod ] is simpler but its message recovery step is more complex  @xcite .",
    "we analyze the complexity of direct implementation of algorithms  [ alg : gao ]  and  [ alg : gao_mod ] . for simplicity , we assume @xmath95 is even and hence @xmath96 .    first , @xmath70 in steps  [ alg : gao].1  and  [ alg : gao_mod].1 is given by @xmath97 .",
    "direct implementation of steps  [ alg : gao].1  and  [ alg : gao_mod].1 follows horner s rule , and requires @xmath98 multiplications and @xmath98 additions  @xcite .",
    "steps  [ alg : gao].2  and  [ alg : gao_mod].2 both use the eea . the sugiyama tower ( st )",
    "@xcite is well known as an efficient direct implementation of the eea . for algorithm  [ alg : gao ]",
    ", the st is initialized by @xmath70 and @xmath74 , whose degrees are at most @xmath5 .",
    "since the number of iterations is @xmath99 , step  [ alg : gao].2 requires @xmath100 multiplications and @xmath101 additions . for algorithm  [ alg : gao_mod ]",
    ", the st is initialized by @xmath82 and @xmath83 , whose degrees are at most @xmath99 and the iteration number is at most @xmath99 .    step  [ alg : gao].3 requires one polynomial division , which can be implemented by using @xmath64 iterations of cross multiplications in the st . since @xmath76 is actually the error locator polynomial  @xcite , @xmath102 . hence",
    ", this requires @xmath103 multiplications and @xmath104 additions .",
    "however , the result of the polynomial division is scaled by a nonzero constant .",
    "that is , cross multiplications lead to @xmath105 . to remove the scaling factor @xmath35 , we can first compute @xmath106 , where @xmath107 denotes the leading coefficient of a polynomial @xmath108 , and then obtain @xmath109 .",
    "this process requires one inversion and @xmath110 multiplications .    step  [ alg : gao_mod].3 involves one polynomial division , one polynomial multiplication , and one polynomial addition , and their complexities depend on the degrees of @xmath76 and @xmath111 , denoted as @xmath112 and @xmath113 , respectively . in the polynomial division ,",
    "let the result of the st be @xmath114 .",
    "the scaling factor is recovered by @xmath115 .",
    "thus it requires one inversion , @xmath116 multiplications , and @xmath117 additions to obtain @xmath118 .",
    "the polynomial multiplication needs @xmath119 multiplications and @xmath120 additions , and the polynomial addition needs @xmath5 additions since @xmath70 has degree at most @xmath121 .",
    "the total complexity of step  [ alg : gao_mod].3 includes @xmath122 multiplications , @xmath123 additions , and one inversion .",
    "consider the worst case for multiplicative complexity , where @xmath112 should be as small as possible .",
    "but @xmath124 , so the highest multiplicative complexity is @xmath125 , which maximizes when @xmath126 .",
    "and we know @xmath127 .",
    "let @xmath128 denote the code rate .",
    "so for rs codes with @xmath129 , the maximum complexity is @xmath130 multiplications , @xmath131 additions , and one inversion . for codes with @xmath132 ,",
    "the maximum complexity is @xmath133 multiplications , @xmath134 additions , and one inversion .",
    "table  [ tab : gao_time ] lists the complexity of direct implementation of algorithms  [ alg : gao ]  and  [ alg : gao_mod ] , in terms of operations in @xmath15 .    [",
    "cols=\"^,^,^,^,^\",options=\"header \" , ]     [ tab : ccsds_bm ]    comparisons between direct and fast implementations for each algorithm show that fast implementations considerably reduce the complexities of both syndromeless and syndrome - based decoding , as shown in tables  [ tab : ccsds_gao ]  and  [ tab : ccsds_bm ] .",
    "the comparison between these tables show that for these two high - rate codes , both direct and fast implementations of syndromeless decoding are not as efficient as their counterparts of syndrome - based decoding .",
    "this observation is consistent with our conclusions in sections  [ sec : dir_comp ]  and  [ sec : fast_comp ] .",
    "for these two codes , hardware costs and throughput of decoder architectures based on direct implementations of syndrome - based and syndromeless decoding can be easily obtained by substituting the parameters in tables  [ tab : hw_syn ]  and  [ tab : hw_gao ] ; thus for these two codes , the conclusions in section  [ sec : dir_hw ] apply .",
    "the complexity analysis of rs decoding in sections  [ sec : time ]  and  [ sec : tran ] has assumed errors - only decoding .",
    "we extend our complexity analysis to errors - and - erasures decoding below .",
    "syndrome - based errors - and - erasures decoding has been well studied , and we adopt the approach in  @xcite . in this approach , first erasure locator polynomial and modified syndrome polynomial are computed . after the error locator polynomial is found by the key equation solver , the errata locator polynomial is computed and the error and erasure values are computed by forney s formula . this approach is used in both direct and fast implementation .",
    "syndromeless errors - and - erasures decoding can be carried out in two approaches .",
    "let us denote the number of erasures as @xmath135 ( @xmath136 ) , and up to @xmath137 errors can be corrected given @xmath135 erasures . as pointed out in  @xcite ,",
    "the first approach is to ignore the @xmath135 erased coordinates , thereby transforming the problem into errors - only decoding of an @xmath138 shortened rs code .",
    "this approach is more suitable for direct implementation .",
    "the second approach is similar to syndrome - based errors - and - erasures decoding described above , which uses the erasure locator polynomial  @xcite . in the second approach , only the partial gcd step is affected , while the same fast implementation techniques described in section  [ sec : tran ] can be used in the other steps .",
    "thus , the second approach is more suitable for fast implementation .",
    "we readily extend our complexity analysis for errors - only decoding in sections  [ sec : time ]  and  [ sec : tran ] to errors - and - erasures decoding .",
    "our conclusions for errors - and - erasures decoding are the same as those for errors - only decoding : algorithm  [ alg : gao ] is the most efficient only for very low rate codes ; syndrome - based decoding is the most efficient algorithm for high rate codes . for brevity , we omit the details and interested readers will have no difficulty filling in the details .",
    "we analyze the computational complexities of two syndromeless decoding algorithms for rs codes using both direct implementation and fast implementation , and compare them with their counterparts of syndrome - based decoding . with either direct or fast implementation , syndromeless algorithms are more efficient than the syndrome - based algorithms only for rs codes with very low rate . when implemented in hardware ,",
    "syndrome - based decoders also have lower complexity and higher throughput . since rs codes in practice are usually high - rate codes , syndromeless decoding algorithms are not suitable for these codes .",
    "our case study also shows that fast implementations can significantly reduce the decoding complexity .",
    "errors - and - erasures decoding is also investigated although the details are omitted for brevity .",
    "this work was financed by a grant from the commonwealth of pennsylvania , department of community and economic development , through the pennsylvania infrastructure technology alliance ( pita ) .",
    "the authors are grateful to dr .",
    "jrgen gerhard for valuable discussions .",
    "the authors would also like to thank the reviewers for their constructive comments , which have resulted in significant improvements in the manuscript .",
    "s.  gao , `` a new algorithm for decoding reed  solomon codes , '' in _ communications , information and network security _ , v.  k. bhargava , h.  v. poor , v.  tarokh , and s.  yoon , eds.1em plus 0.5em minus 0.4emnorwell , ma : kluwer , 2003 , pp . 5568 .",
    "[ online ] .",
    "available : http://www.math.clemson.edu/faculty/gao/papers/rs.pdf            j.  von  zur gathen and j.  gerhard , `` arithmetic and factorization of polynomials over @xmath139 , '' university of paderborn , germany , tech .",
    "tr - rsfb-96 - 018 , 1996 .",
    "[ online ] .",
    "available : http://www-math.uni-paderborn.de/~aggathen/publications/gatger96a.ps            n.  chen and z.  yan , `` reduced - complexity cyclotomic fft and its application in reed ",
    "solomon decoding , '' in _ proc .",
    "ieee workshop signal processing syst .",
    "( sips07 ) _ , oct . 2007 , arxiv:0710.1879v2 [ cs.it ] .",
    "[ online ] .",
    "available : http://arxiv.org/abs/0710.1879          e.  berlekamp , g.  seroussi , and p.  tong , `` a hypersystolic reed ",
    "solomon decoder , '' in _ reed  solomon codes and their applications _ , s.  b. wicker and v.  k. bhargava , eds.1em plus 0.5em minus 0.4emnew york , ny : ieee press , 1994 , pp ."
  ],
  "abstract_text": [
    "<S> there has been renewed interest in decoding reed  solomon ( rs ) codes without using syndromes recently . in this paper </S>",
    "<S> , we investigate the complexity of syndromeless decoding , and compare it to that of syndrome - based decoding . aiming to provide guidelines to practical applications , </S>",
    "<S> our complexity analysis focuses on rs codes over characteristic-2 fields , for which some _ multiplicative _ fft techniques are not applicable . due to moderate block lengths of rs codes in practice , our analysis is complete , without big @xmath0 notation . </S>",
    "<S> in addition to fast implementation using _ additive _ fft techniques , we also consider direct implementation , which is still relevant for rs codes with moderate lengths . for high rate rs codes , when compared to syndrome - based decoding algorithms , not only </S>",
    "<S> syndromeless decoding algorithms require more field operations regardless of implementation , but also decoder architectures based on their direct implementations have higher hardware costs and lower throughput . </S>",
    "<S> we also derive tighter bounds on the complexities of fast polynomial multiplications based on cantor s approach and the fast extended euclidean algorithm .    </S>",
    "<S> reed  solomon codes , decoding , complexity theory , galois fields , discrete fourier transforms , polynomials </S>"
  ]
}
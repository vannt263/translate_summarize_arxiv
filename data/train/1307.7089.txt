{
  "article_text": [
    "in optical communication networks , a sending point uses a binary matrix @xmath6 to send @xmath7 information packages to @xmath8 different destination points , in which the entry @xmath9 if information package @xmath10 is _ not _ destined for point @xmath11 , or @xmath12 otherwise . to achieve the highest cost reduction via wavelength division multiplexing technology , an optimal packing of information flows on different wavelengths into groups is necessary  @xcite . under this binary matrix representation ,",
    "every @xmath0 consecutive @xmath13 s in a column indicates an opportunity for merging information to reduce the communication cost , where @xmath0 is a pre - specified positive integer called the _",
    "bandpass number_. such a set of @xmath0 consecutive @xmath13 s in a column of the matrix is said to form a _",
    "bandpass_. when counting the number of bandpasses in the matrix , no two of them in the same column are allowed to share any common rows .",
    "the computational problem , the _ bandpass-@xmath0 problem _ , is to find an optimal permutation of rows of the input matrix @xmath6 such that the total number of extracted bandpasses in the resultant matrix is maximized  @xcite .",
    "note that though multiple bandpass numbers can be used in practice , for the sake of complexities and costs , usually only one fixed bandpass number is considered  @xcite .",
    "the general bandpass-@xmath0 problem , for any fixed @xmath14 , has been proven to be np - hard  @xcite .",
    "in fact , the np - hardness of the bandpass-@xmath3 problem can be proven by a reduction from the well - known _ hamiltonian path _",
    "problem  @xcite , where in the constructed binary matrix @xmath6 , a row maps to a vertex , a column maps to an edge , and @xmath9 if and only if edge @xmath15 is incident to vertex @xmath16 .",
    "it follows that there is a row permutation achieving @xmath17 bandpasses if and only if there is a hamiltonian path in the graph .    on the approximability",
    ", the bandpass-@xmath0 problem has a close connection to the weighted @xmath0-set packing problem  @xcite .",
    "given an instance @xmath18 of a maximization problem @xmath19 , let @xmath20 ( @xmath21 , respectively ) denote the value of the optimal solution ( the value of the solution produced by an algorithm , respectively ) .",
    "the performance ratio of the algorithm on @xmath18 is @xmath22 .",
    "the algorithm is a @xmath23-approximation if @xmath24 . by taking advantages of the approximation algorithms designed for the weighted @xmath0-set packing problem  @xcite",
    ", the bandpass-@xmath0 problem can be approximated within @xmath1  @xcite . moreover , since the maximum weight matching problem is solvable in cubic time , the bandpass-@xmath3 problem admits a simple maximum weight matching based @xmath3-approximation algorithm  @xcite . in the sequel ,",
    "we call the bandpass-@xmath3 problem simply the bandpass problem .    in a preliminary version of this paper  @xcite , tong _ et al . _",
    "presented a first improved approximation algorithm for the bandpass problem using two maximum weight matchings .",
    "their algorithm has a worst case performance ratio of @xmath25 . in more details",
    ", their algorithm computes a maximum weight matching in the edge - weighted graph constructed from the input matrix , and then computes another maximum weight matching in the residual graph ; through breaking cycles in the union of these two matchings , a collection of paths are achieved and concatenated into a hamiltonian path .",
    "when estimating the weight of this hamiltonian path , the authors present an intrinsic structural property for the optimal row permutation , and show that the weight of the second maximum weight matching is greater than or equal to a portion of certain bandpasses in the optima .",
    "these special bandpasses in the optima are characterized using the first maximum weight matching .    instead of breaking cycles in the union of two matchings , chen and wang  @xcite presented an alternative to compute a second matching such that the union of the two matchings is guaranteed acyclic .",
    "the keys to this success are two lemmas that partition a @xmath3-matching ( an acyclic @xmath3-matching , respectively ) into @xmath26 ( @xmath27 , respectively ) candidate matchings . still based on the structural property characterized in  @xcite ,",
    "this alternative algorithm achieves a better performance ratio of @xmath28 .    in this paper",
    ", we advance the novel @xmath3-matching partitioning scheme to show that two edge disjoint @xmath3-matchings can be partitioned into @xmath29 desired matchings such that the union of each of them and the very first maximum weight matching is guaranteed acyclic . including here all the detailed proofs missed from the two preliminary versions  @xcite , we show that our new approximation algorithm has a performance ratio of @xmath30 .",
    "a reduction from the hamiltonian path problem has been used to prove the np - hardness of the bandpass problem .",
    "but the bandpass problem does not readily reduce to the maximum traveling salesman problem ( max - tsp ) @xcite for approximation algorithm design .",
    "the main reason is that , an instance graph of max - tsp is _",
    "static _ , in that all ( non - negative ) edge weights are given at the front , while in the bandpass problem the number of bandpasses extracted between two consecutive rows in a row permutation is permutation dependent . nevertheless , as shown in the sequel , our design idea is based on maximum weight @xmath5-matchings for @xmath31 , and @xmath26 , similarly as in approximating max - tsp  @xcite .",
    "formally , in max - tsp , a complete edge - weighted graph is given , where the edge weights are non - negative integers , and the goal is to compute a hamiltonian cycle with the maximum weight .",
    "note that there are several variants of max - tsp been studied in the literature . in our case",
    ", the input graph is undirected ( or symmetric ) and the edge weights do not necessarily satisfy the triangle inequality .",
    "the following lemma  [ lemma1 ] states the currently best approximation result for max - tsp .",
    "[ lemma1]@xcite the max - tsp admits an @xmath32-time @xmath33-approximation algorithm , where @xmath7 is the number of vertices in the graph .    in our bandpass problem , since we can always add a row of all @xmath34 s if needed , we assume without loss of generality that the number of rows , @xmath7 , is even .",
    "a _ @xmath5-matching _ of a graph is a subgraph in which the degree of each vertex is at most @xmath5 .",
    "a maximum weight @xmath5-matching of an edge weighted graph can be computed in @xmath35 time  @xcite , where @xmath7 is the number of vertices and @xmath8 is the number of edges in the graph .",
    "note that a @xmath3-matching is a collection of vertex - disjoint cycles and paths .",
    "a @xmath3-matching is _ acyclic _ if it does not contain any cycle ( _ i.e. _ , it is a collection of vertex - disjoint paths ) .",
    "given the input binary matrix @xmath6 , let @xmath36 denote the @xmath10-th row .",
    "we first construct a graph @xmath37 of which the vertex set is exactly the row set @xmath38 . between rows @xmath36 and @xmath39 , the _ static _ edge weight is defined as the maximum number of bandpasses that can be formed between the two rows , and is denoted as @xmath40 . in the sequel we use row ( of the matrix ) and vertex ( of the graph ) interchangeably .    for a row",
    "permutation @xmath41 , its @xmath10-th row is the @xmath42-th row in the input matrix .",
    "we call a maximal segment of consecutive @xmath13 s in a column of @xmath43 a _ strip _ of @xmath43",
    ". the length of a strip is defined to be the number of @xmath13 s therein .",
    "a length-@xmath44 strip contributes exactly @xmath45 bandpasses to the permutation @xmath43 .",
    "we use @xmath46 to denote the set of all length-@xmath44 strips of @xmath43 , and @xmath47 .",
    "let @xmath48 denote the number of bandpasses extracted from the permutation @xmath43 .",
    "we have @xmath49 let @xmath50 denote the number of pairs of consecutive @xmath13 s in the permutation @xmath43 .",
    "a length-@xmath44 strip contributes exactly @xmath51 pairs to the permutation @xmath43 .",
    "we have @xmath52      in our algorithm denoted as approx , the first step is to compute a maximum weight matching @xmath53 in graph @xmath37 . recall that there are an even number of rows .",
    "therefore , @xmath53 is a perfect matching ( even though some edge weights could be @xmath34 ) .",
    "let @xmath54 denote the sum of its edge weights , indicating that exactly @xmath54 bandpasses can be extracted from the row pairings suggested by @xmath53 .",
    "these bandpasses are called the bandpasses of @xmath53 .    next , every",
    "@xmath13 involved in a bandpass of @xmath53 is changed to @xmath34 .",
    "let the resultant matrix be denoted as @xmath55 , the resultant edge weight between rows @xmath36 and @xmath39 be @xmath56  which is the maximum number of bandpasses can be formed between the two revised rows , and the corresponding residual graph be denoted as @xmath57 .",
    "one can see that if an edge @xmath58 belongs to @xmath53 , then the new edge weight @xmath59 . in the second step of approx , we compute a maximum weight @xmath26-matching @xmath60 in graph @xmath57 , which is further decomposed in @xmath61 time into two @xmath3-matchings denoted as @xmath62 and @xmath63  @xcite .",
    "let @xmath64 denote the weight ( the number of bandpasses ) of @xmath60 in the residual graph @xmath57 .",
    "it is noted that no bandpass of @xmath60 shares a @xmath13 with any bandpass of @xmath53 . using @xmath53 and @xmath62 and @xmath63 , by lemma  [ lemma41 ]",
    ", we can compute a matching @xmath65 from @xmath60 of weight at least @xmath66 such that @xmath67 $ ] is guaranteed acyclic .    in the third step , we use the @xmath33-approximation algorithm described in  @xcite to compute a hamiltonian path @xmath68 in @xmath57",
    "whose weight is at least @xmath69 of the maximum weight of a hamiltonian path .",
    "then , using @xmath53 and @xmath68 , by lemma  [ lem : mine ] , we can compute another matching @xmath65 from @xmath68 of weight at least @xmath70 such that @xmath67 $ ] is guaranteed acyclic .    in the last step ,",
    "we choose the larger one between the two @xmath65 s found in the last two steps , and arbitrarily stack the paths in @xmath67 $ ] to give a row permutation @xmath43 .",
    "note that the number of bandpasses extracted from @xmath43 , @xmath48 , is greater than or equal to @xmath71 .",
    "let @xmath72 denote the optimal row permutation such that its @xmath73 is maximized over all row permutations .",
    "correspondingly , @xmath74 denotes the set of length-@xmath3 strips in @xmath72 , which contributes exactly @xmath75 bandpasses towards @xmath73 . the key part in the performance analysis for algorithm approx is to estimate @xmath76 , as done in the following .",
    "first , we partition the bandpasses of @xmath74 into four groups : @xmath77 , @xmath78 , @xmath79 , @xmath80 .",
    "note that bandpasses of @xmath74 do not share any @xmath13 each other .",
    "@xmath77 consists of the bandpasses of @xmath74 that also belong to matching @xmath53 ( such as the one between rows @xmath81 and @xmath82 in figure  [ s2 ] ) ; @xmath78 consists of the bandpasses of @xmath74 such that they are uniquely paired up to contribute a @xmath13 each to form a bandpass of @xmath53 ( the other @xmath13 in each bandpass of @xmath78 is thus not shared by any other bandpass of @xmath53 ) ; @xmath79 consists of the bandpasses of @xmath74 , each of which shares a @xmath13 with at least one bandpass of @xmath53 , and if it shares a @xmath13 with only one bandpass of @xmath53 then the other @xmath13 of this bandpass of @xmath53 is not shared by any other bandpass of @xmath74 ; @xmath80 consists of the remaining bandpasses of @xmath74 .",
    "figure  [ s2 ] illustrates some examples of these bandpasses , where bandpasses of @xmath74 are in ovals and bandpasses of @xmath53 are in boxes .",
    "= 0.4 mm    ( 220 , 130 ) ( 50 , 10)@xmath83 ( 0 , 30)@xmath84 ( 20 , 35)(1 , 0)200 ( 100 , 30)@xmath13 ( 0 , 40)@xmath85 ( 20 , 45)(1 ,",
    "0)200 ( 100 , 40)@xmath13 ( 98 , 28)(6 , 22 ) ( 101 , 39)(11 , 18 ) ( 111 , 30)@xmath77 ( 50 , 50)@xmath83 ( 0 , 60)@xmath86 ( 20 , 65)(1 , 0)200 ( 100 , 60)@xmath34 ( 0 , 70)@xmath87 ( 20 , 75)(1 , 0)200 ( 100 , 70)@xmath13 ( 0 , 80)@xmath88 ( 20 , 85)(1 , 0)200 ( 100 , 80)@xmath13 ( 98 , 78)(6 , 22 ) ( 101 , 79)(11 , 18 ) ( 0 , 90)@xmath89 ( 20 , 95)(1 , 0)200 ( 100 , 90)@xmath13 ( 0 , 100)@xmath90 ( 20 , 105)(1 , 0)200 ( 100 , 100)@xmath13 ( 101 , 99)(11 , 18 ) ( 0 , 110)@xmath91 ( 20 , 115)(1 , 0)200 ( 100 , 110)@xmath34 ( 130 , 110)@xmath34 ( 30 , 100)@xmath13 ( 30 , 110)@xmath13 ( 28 , 98)(6 , 22 ) ( 160 , 60)@xmath13 ( 160 , 70)@xmath13 ( 158 , 58)(6 , 22 ) ( 141 , 97)@xmath79 ( 130 , 70)@xmath34 ( 130 , 80)@xmath13 ( 128 , 78)(6 , 22 ) ( 130 , 90)@xmath13 ( 130 , 100)@xmath13 ( 131 , 99)(11 , 18 ) ( 81 , 80)@xmath78 ( 180 , 110)@xmath34 ( 180 , 80)@xmath34 ( 180 , 100)@xmath13 ( 180 , 90)@xmath13 ( 182 , 98)(11 , 18 ) ( 191 , 97)@xmath80 ( 50 , 120)@xmath83    by the definition of partition , we have @xmath92 from these `` group '' definitions , we know all bandpasses of @xmath77 are in @xmath53 . also , one pair of bandpasses of @xmath78 correspond to a distinct bandpass of @xmath53 .",
    "bandpasses of @xmath79 can be further partitioned into subgroups such that a subgroup of bandpasses together with a distinct maximal subset of bandpasses of @xmath53 form into an alternating cycle or path of length at least @xmath3 .",
    "moreover , 1 ) when the path length is even , the number of bandpasses of this subgroup of @xmath79 is equal to the number of bandpasses of this subset of bandpasses of @xmath53 ; 2 ) when the path length is odd , 2a ) either the number of bandpasses of this subgroup of @xmath79 is @xmath13 greater than the number of bandpasses of this subset of bandpasses of @xmath53 , 2b ) or the path length has to be at least @xmath93 and so the number of bandpasses of this subgroup of @xmath79 is at least @xmath94 of the number of bandpasses of this subset of bandpasses of @xmath53 .",
    "it follows from 1 ) , 2a ) and 2b ) that with respect to @xmath79 , @xmath53 contains at least @xmath95 corresponding bandpasses .",
    "that is , @xmath96 clearly , all bandpasses of @xmath80 are in the residual graph @xmath57 , while none of @xmath97 is in graph @xmath57 since each one of them shares a @xmath13 with at least a bandpass of @xmath53 .",
    "note that the bandpasses of @xmath78 are paired up such that each pair of the two bandpasses share a @xmath13 with a bandpass of @xmath53 .",
    "assume without loss of generality that these two bandpasses of @xmath78 are formed between rows @xmath36 and @xmath39 and between rows @xmath98 and @xmath99 , respectively , and that the involved bandpass of @xmath53 is formed between rows @xmath39 and @xmath98 ( see figure  [ s2 ] ) .",
    "that is , in the optimal row permutation @xmath72 , rows @xmath36 and @xmath39 are adjacent , and rows @xmath98 and @xmath99 are adjacent ; while edge @xmath100 .",
    "we remark that these four rows are distinct , and conclude that edge @xmath101 .",
    "the proof is simple as otherwise in the particular column a bandpass would be formed between rows @xmath36 and @xmath99 , making the two bandpasses of @xmath78 lose their group memberships ( _ i.e. _ , they would belong to @xmath79 ) .",
    "[ lemma2 ] assume edge @xmath100 , and that one bandpass of @xmath102 shares @xmath13 with two bandpasses of @xmath78 .",
    "then in graph @xmath37 edge @xmath102 is adjacent to at most four edges in the optimal row permutation @xmath72 , at most two of which are incident at row @xmath39 , and at most two of which are incident at row @xmath98 .",
    "the lemma is straightforward from the above discussion , and the fact that edge @xmath102 does not belong to the hamiltonian path @xmath72 .    continuing with the above discussion , assuming that edge @xmath100 , and that one bandpass of @xmath102 shares @xmath13 with two bandpasses of @xmath78 , which are formed between rows @xmath36 and @xmath39 and between rows @xmath98 and @xmath99 , respectively ( see figure  [ s2 ] ) . we know that in residual graph @xmath57 , between rows @xmath36 and @xmath99 , in the same column there is a bandpass ( which contributes @xmath13 towards the edge weight @xmath103 )",
    "we call bandpasses identified in this way the _ induced _ bandpasses . from lemma  [ lemma2 ] ,",
    "edge @xmath102 is adjacent to at most two edges of @xmath72 incident at row @xmath39 .",
    "it follows that in residual graph @xmath57 , row @xmath99 can form induced bandpasses with at most four other rows . in other words ,",
    "the subgraph of @xmath57 induced by the edges containing induced bandpasses , denoted as @xmath104 , is a @xmath26-matching in @xmath57 .",
    "[ lemma3 ] @xmath104 is a @xmath26-matching in graph @xmath37 , and its weight @xmath105 .    from the above discussion",
    ", @xmath104 is a @xmath26-matching in residual graph @xmath57 .",
    "since the edge set of @xmath57 and the edge set of @xmath37 are the same , disregarding edge weights , @xmath104 is a @xmath26-matching of graph @xmath37 .",
    "the second half of the lemma can be simply argued as follows .",
    "since every pair of bandpasses of @xmath78 leads to an induced bandpass , all the edge weights in @xmath104 sum up to at least @xmath106 , which is the number of bandpass pairs in @xmath78 .",
    "this finishes the proof .    in @xmath61 time , a @xmath26-matching such as @xmath104 can be decomposed into two @xmath3-matchings  @xcite , each of which is a collection of vertex - disjoint cycles or paths .",
    "[ lem : hr ] let @xmath60 be a @xmath3-matching of graph @xmath37 such that no edge of @xmath53 is also an edge of @xmath60 . then , we can partition the edge set of @xmath60 into four matchings @xmath107 such that @xmath108 $ ] is an acyclic @xmath3-matching for all @xmath109",
    ". moreover , the partitioning takes @xmath110 time , where @xmath111 is the inverse ackerman function .",
    "hassin and rubinstein  @xcite have shown that we can compute two disjoint matchings @xmath112 and @xmath113 in @xmath60 such that the following two conditions hold :    * both @xmath114 $ ] and @xmath115 $ ] are acyclic @xmath3-matchings of @xmath37 . *",
    "each vertex of @xmath60 is incident to at least one edge of @xmath116 .    for convenience ,",
    "let @xmath117 be the set of edges in @xmath60 but not in @xmath116 .",
    "by the second condition , @xmath117 is a matching .",
    "consider the graph @xmath118 .",
    "obviously , @xmath119 is a collection of vertex - disjoint paths and cycles , and each cycle of @xmath119 contains at least two edges of @xmath117 . for each cycle @xmath120 of @xmath119",
    ", we mark an arbitrary edge of @xmath120 that also belongs to @xmath117 .",
    "let @xmath121 be the set of marked edges , and @xmath122 .",
    "then , both @xmath123 $ ] and @xmath124 $ ] are acyclic @xmath3-matchings of @xmath37 .",
    "it is not hard to see that with the famous union - find data structure  @xcite , the computation of @xmath112 and @xmath113 described in @xcite can be done in @xmath125 time .",
    "once knowing @xmath112 and @xmath113 , we can obtain @xmath126 and @xmath121 in @xmath127 time .    in general ,",
    "lemma  [ lem : hr ] can not be improved by partitioning the edge set of @xmath60 into three matchings instead of four matchings . to see this",
    ", it suffices to consider a concrete example , where @xmath60 is just a cycle of length  4 and @xmath53 consists of the two edges connecting nonadjacent vertices in @xmath60 .",
    "let @xmath62 and @xmath63 denote the two @xmath3-matchings constituting to the maximum weight @xmath26-matching @xmath60 of residual graph @xmath57 .",
    "using lemma  [ lem : hr ] alone , @xmath62 can be partitioned into four matchings @xmath107 and @xmath63 can be partitioned into four matchings @xmath128 , such that @xmath129 $ ] is an acyclic @xmath3-matching for all @xmath130 and @xmath109 .",
    "the following lemma states a slightly better partition when we consider @xmath62 and @xmath63 simultaneously .",
    "[ lemma41 ] the weight of matching @xmath65 is @xmath131 .",
    "let @xmath62 and @xmath63 denote the two @xmath3-matchings constituting to the maximum weight @xmath26-matching @xmath60 of residual graph @xmath57 .",
    "based on the discussion in the last paragraph , we firstly use lemma  [ lem : hr ] to partition the edge set of @xmath62 into four matchings @xmath107 and the edge set of @xmath63 into four matchings @xmath128 , such that @xmath129 $ ] is an acyclic @xmath3-matching for all @xmath130 and @xmath109 .    note",
    "that by lemma  [ lem : hr ] , @xmath132 is a matching and that @xmath121 contains the marked edges , each of which , say @xmath133 , is the lightest edge of the corresponding cycle , say @xmath120 , formed in @xmath134 $ ] .",
    "@xmath120 is an even cycle .",
    "if @xmath120 contains at least @xmath135 edges , then @xmath136 . the following process is to swap certain edges among @xmath107 and @xmath128 to guarantee property    * that each of @xmath137 $ ] for @xmath138 and @xmath139 $ ] for @xmath109 is an acyclic @xmath3-matching , and that @xmath132 is a matching and @xmath134 $ ] contains no length-@xmath26 cycles .",
    "let @xmath140 be a length-@xmath26 cycle in @xmath134 $ ] , and assume that @xmath141 .",
    "then , we call edges @xmath142 and @xmath143 a _ problematic pair_. our swapping process is to _ resolve _ such problematic pairs .",
    "we distinguish three cases .    in the first case ,",
    "edges @xmath144 and @xmath145 .",
    "assume the other edges of @xmath62 incident at @xmath146 are @xmath147 , @xmath148 , @xmath149 , @xmath150 , respectively .",
    "these four edges thus all belong to @xmath151 $ ] and @xmath152 $ ] . if at least three of them belong to @xmath151 $ ] , then in @xmath152 $ ] three vertices among @xmath146 have degree @xmath13 and thus they can not be in the same connected component of @xmath152 $ ]",
    ". we can move ( exactly ) one of edges @xmath142 and @xmath143 to @xmath113 , while maintaining property ( p ) .",
    "we examine next where exactly two of the four edges belong to @xmath151 $ ]",
    ". assume without loss of generality that @xmath153 $ ] .",
    "if @xmath154 $ ] , then the connected component in @xmath152 $ ] containing @xmath155 has only one edge @xmath156 , which belongs to @xmath53 .",
    "thus , if the other edge of @xmath62 incident at vertex @xmath13 belongs to @xmath113 , we can move edge @xmath147 from @xmath112 to @xmath132 , and move edge @xmath142 from @xmath132 to @xmath112 ; if the other edge of @xmath62 incident at vertex @xmath13 does not belong to @xmath113 ( and thus it must be in @xmath132 ) , we can move edge @xmath147 from @xmath112 to @xmath113 , and move edge @xmath142 from @xmath132 to @xmath112 . either way , we maintain property ( p ) while resolving a problematic pair of @xmath132 .",
    "if @xmath157 $ ] , then vertices @xmath155 and @xmath158 have degree @xmath13 in @xmath152 $ ] . thus ,",
    "if the other edge of @xmath62 incident at vertex @xmath13 does not belong to @xmath113 , then vertex @xmath13 has degree @xmath13 in @xmath152 $ ] as well .",
    "we conclude that vertices @xmath159 can not reside in the same connected component of @xmath152 $ ] .",
    "when @xmath155 and @xmath158 are not connected , we can move edge @xmath142 from @xmath132 to @xmath113 ; when @xmath155 and @xmath13 are not connected , we can move edge @xmath147 from @xmath112 to @xmath113 , and move edge @xmath143 from @xmath132 to @xmath112 . again , either way , we maintain property ( p ) while resolving a problematic pair of @xmath132 .",
    "symmetric scenarios can be argued in the same way for vertices @xmath160 . in the remaining scenario ,",
    "the other edges of @xmath62 incident at vertices @xmath161 all belong to @xmath116 .",
    "we then move edges @xmath162 from @xmath116 to @xmath132 , and move edges @xmath142 ( @xmath143 , respectively ) from @xmath163 to @xmath112 ( @xmath121 , respectively ) .",
    "note that none of these four edges would form with any other edge into a problematic pair .",
    "lastly , if @xmath164 $ ] , then vertices @xmath155 and @xmath165 have degree @xmath13 in @xmath152 $ ] . thus ,",
    "if the other edge of @xmath62 incident at vertex @xmath13 belongs to @xmath113 , then vertex @xmath13 has degree @xmath13 in @xmath134 $ ] .",
    "we can move edge @xmath147 from @xmath112 to @xmath132 , and move edge @xmath142 from @xmath132 to @xmath112 .",
    "if the other edge of @xmath62 incident at vertex @xmath13 does not belong to @xmath113 , then vertex @xmath13 has degree @xmath13 in @xmath152 $ ] as well .",
    "we conclude that vertices @xmath166 can not reside in the same connected component of @xmath152 $ ] . when @xmath155 and @xmath13 are not connected , we can move edge @xmath147 from @xmath112 to @xmath113 , and move edge @xmath142 from @xmath132 to @xmath112 .",
    "symmetric scenarios can be argued in the same way for vertices @xmath160 . in the remaining scenario",
    ", none of the other edges of @xmath62 incident at vertices @xmath161 belongs to @xmath116 , and that vertices @xmath155 and @xmath13 ( @xmath158 and @xmath3 , @xmath165 and @xmath27 , @xmath167 and @xmath26 , respectively ) are connected in @xmath152 $ ] ( @xmath151 $ ] , @xmath152 $ ] , @xmath151 $ ] , respectively ) .",
    "it follows that we may move edge @xmath147 from @xmath112 to @xmath113 , move edge @xmath150 from @xmath113 to @xmath112 , and move edge @xmath142 from @xmath132 to @xmath112 , to resolve the problematic pair .    in the second case ,",
    "edges @xmath144 but @xmath168 .",
    "assume the other edges of @xmath62 incident at @xmath169 are @xmath147 , @xmath149 , respectively .",
    "these two edges and edge @xmath170 all belong to @xmath151 $ ] and @xmath152 $ ] . without loss of generality , assume @xmath171 ; it follows that vertices @xmath158 and @xmath167 have degree @xmath13 in @xmath151 $ ] . if one of edges @xmath147 and @xmath149 does not belong to @xmath151 $ ] , say @xmath147 , then we can move @xmath142 from @xmath132 to @xmath112 , while maintaining property ( p ) .",
    "if both edges @xmath147 and @xmath149 belong to @xmath151 $ ] , then vertices @xmath155 and @xmath165 have degree @xmath13 in @xmath152 $ ] .",
    "when the other edge of @xmath62 incident at vertex @xmath13 does not belong to @xmath113 ( but @xmath132 ) , we can move edge @xmath147 from @xmath112 to @xmath113 , and move edge @xmath142 from @xmath132 to @xmath112 ; the symmetric scenario can be argued in the same way for vertex @xmath27 ; when the other edge of @xmath62 incident at vertex @xmath13 and the other edge of @xmath62 incident at vertex @xmath27 both belong to @xmath113 , we can move edges @xmath147 and @xmath172 from @xmath112 to @xmath132 , move edge @xmath170 from @xmath113 to @xmath132 , move edge @xmath142 from @xmath132 to @xmath112 , and move edge @xmath143 from @xmath132 to @xmath113 . note",
    "that none of these three edges @xmath147 , @xmath172 and @xmath170 would form with any other edge into a problematic pair .    in the last case ,",
    "edges @xmath173 and @xmath168 .",
    "assume without loss of generality that @xmath174 and @xmath171 . since @xmath63 do not share any edge with @xmath62 , we consider the degrees of vertices @xmath146 in @xmath175 $ ] for @xmath176 .",
    "if in one of these four acyclic @xmath3-matchings , say @xmath177 $ ] , at least three of the four vertices have degree @xmath13 , say @xmath178 , then we can move edge @xmath142 from @xmath62 to @xmath179 , and thus the problematic pair of @xmath132 is resolved . in the other cases , in each @xmath175 $ ] for @xmath176 , exactly two of the four vertices have degree @xmath13 .",
    "let the two edges of @xmath63 incident at @xmath155 ( @xmath180 , respectively ) be @xmath147 and @xmath181 ( @xmath148 and @xmath182 , @xmath149 and @xmath183 , @xmath150 and @xmath184 , respectively ) .",
    "if @xmath185 , then @xmath155 and @xmath167 both have degree @xmath13 in one of @xmath175 $ ] for @xmath186 , say in @xmath187 $ ] .",
    "it follows that if the other edge of @xmath63 incident at vertex @xmath13 does not belong to @xmath188 , then we can move edge @xmath147 from @xmath179 to @xmath188 , and move edge @xmath142 from @xmath62 to @xmath179 to resolve the problematic pair of @xmath132 ; or if the other edge of @xmath63 incident at vertex @xmath26 does not belong to @xmath188 , then we can move edge @xmath150 from @xmath179 to @xmath188 , and move edge @xmath143 from @xmath62 to @xmath179 to resolve the problematic pair of @xmath132 . in the remaining scenario , the other edge of @xmath63 incident at vertex @xmath13 ( vertex @xmath26 , respectively ) belongs to @xmath188 .",
    "note that in either @xmath189 $ ] or @xmath190 $ ] , vertex @xmath155 has degree @xmath13 , and we assume without loss of generality that vertex @xmath155 has degree @xmath13 in @xmath189 $ ] .",
    "note also that vertex @xmath13 has degree @xmath13 in @xmath189 $ ] .",
    "if edge @xmath191 , then vertex @xmath167 has degree @xmath13 as well , and thus we can move edge @xmath147 from @xmath179 to @xmath192 , and move edge @xmath142 from @xmath62 to @xmath179 to resolve the problematic pair of @xmath132 ; if edge @xmath193 but the other edge of @xmath63 incident at vertex @xmath194 does not belong to @xmath188 , then we can move edge @xmath184 from @xmath192 to @xmath188 , move edge @xmath147 from @xmath179 to @xmath192 , and move edge @xmath142 from @xmath62 to @xmath179 to resolve the problematic pair of @xmath132 . therefore",
    ", we only need to argue the scenario where the other edge of @xmath63 incident at vertex @xmath194 belongs to @xmath188 .",
    "symmetrically considering @xmath195 , we may assume without loss of generality that the other edge of @xmath63 incident at vertex @xmath196 belongs to @xmath188 .",
    "consequently , vertices @xmath197 all have degree @xmath13 in @xmath189 $ ] , and thus @xmath155 and at least one of @xmath13 and @xmath196 are not connected .",
    "if @xmath155 and @xmath13 are not connected , we can move edge @xmath147 from @xmath179 to @xmath192 , and move edge @xmath142 from @xmath62 to @xmath179 to resolve the problematic pair of @xmath132 ; if @xmath155 and @xmath196 are not connected , we can move edge @xmath181 from @xmath195 to @xmath192 , move edge @xmath147 from @xmath179 to @xmath195 , and move edge @xmath142 from @xmath62 to @xmath179 to resolve the problematic pair of @xmath132 .",
    "if @xmath198 , then @xmath155 and @xmath158 both have degree @xmath13 in one of @xmath175 $ ] for @xmath186 , say in @xmath187 $ ] .",
    "the following discussion is very similar to the above paragraph , though slightly simpler .",
    "firstly , if @xmath165 and @xmath167 are not connected in @xmath177 $ ] ( @xmath155 and @xmath158 are not connected in @xmath187 $ ] , respectively ) , then we can move edge @xmath143 ( @xmath142 , respectively ) from @xmath62 to @xmath179 ( @xmath188 , respectively ) to directly resolve the problematic pair of @xmath132 . secondly ,",
    "if the other edge of @xmath63 incident at vertex @xmath13 does not belong to @xmath188 , then we can move edge @xmath147 from @xmath179 to @xmath188 , and move edge @xmath143 from @xmath62 to @xmath179 to resolve the problematic pair of @xmath132 ; or if the other edge of @xmath63 incident at vertex @xmath3 does not belong to @xmath188 , then we can move edge @xmath148 from @xmath179 to @xmath188 , and move edge @xmath143 from @xmath62 to @xmath179 to resolve the problematic pair of @xmath132 .",
    "symmetrically and without loss of generality that @xmath199 , if either of the other edges of @xmath63 incident at vertices @xmath27 and @xmath26 does not belong to @xmath188 , the problematic pair can be resolved . in the remaining scenario",
    ", we assume that vertices @xmath155 and @xmath165 have degree @xmath13 in @xmath189 $ ] ( and @xmath200 ) . note that vertices @xmath161 all have degree @xmath13 in @xmath189 $ ] too .",
    "if @xmath155 and @xmath165 are not connected in @xmath189 $ ] , then we can swap edges of @xmath116 and of @xmath132 , and move edge @xmath201 from @xmath132 to @xmath192 , to resolve the problematic pair of @xmath132 . otherwise , @xmath155 and @xmath13 should not be connected in @xmath189 $ ] , and we can move edge @xmath147 from @xmath179 to @xmath192 , and move edge @xmath143 from @xmath132 to @xmath179 , to resolve the problematic pair of @xmath132 .",
    "all the other pairs of edges occurring in @xmath202 can be analogously discussed as in either of the above two paragraphs . repeatedly applying the above process to resolve the problematic pairs of @xmath132 ,",
    "if any , we achieve the property ( p ) that each of @xmath137 $ ] for @xmath138 and @xmath139 $ ] for @xmath109 is an acyclic @xmath3-matching , and that @xmath132 is a matching and @xmath134 $ ] contains no length-@xmath26 cycles .",
    "subsequently , we let @xmath121 denote the set of marked edges , guaranteeing that @xmath203 .",
    "it follows that at least one of @xmath204 has its weight greater than or equal to @xmath205 where the last inequality follows from lemma  [ lemma3 ] and the fact that @xmath206 .",
    "the next lemma says that lemma  [ lem : hr ] can be improved if the input @xmath3-matching is acyclic .",
    "[ lem : mine ] let @xmath68 be an acyclic @xmath3-matching of @xmath37 such that no edge of @xmath53 is also an edge of @xmath68 . then , we can partition the edge set of @xmath68 into three matchings @xmath207 such that @xmath139 $ ] is an acyclic @xmath3-matching for all @xmath208",
    ". moreover , the partitioning takes @xmath110 time .    note",
    "that @xmath68 is a collection of vertex - disjoint paths .",
    "we claim that if @xmath68 has two or more connected components , then we can connect the connected components of @xmath68 into a single path by adding edges not in @xmath53 to @xmath68 .",
    "to see this claim , suppose that @xmath68 has two or more connected components .",
    "obviously , we can connect the connected components of @xmath68 into a single path by adding edges to @xmath68 .",
    "unfortunately , some edges of @xmath53 may have been added to @xmath68 . to remove edges of @xmath53 from @xmath68 ,",
    "we start at one endpoint of @xmath68 and process the edges of @xmath68 in order as follows :    * let @xmath209 and @xmath210 be the current endpoints of @xmath68 , and @xmath211 be the current edge we want to process . without loss of generality , we may assume that the removal of @xmath211 from @xmath68 yields a path @xmath212 from @xmath209 to @xmath155 and another path @xmath213 from @xmath158 to @xmath210 , and further assume that the edges of @xmath212 have been processed . note that at most one of @xmath214 and @xmath215 is possible because @xmath216 . if @xmath217 , then we proceed to process the other edge incident to @xmath158 than @xmath211 .",
    "otherwise , @xmath218 or @xmath219 because @xmath53 is a matching and at most one of @xmath214 and @xmath215 is possible .",
    "if @xmath220 , then we modify @xmath68 by deleting edge @xmath211 and adding edge @xmath221 and proceed to process the other edge incident to @xmath158 than @xmath221 . on the other hand ,",
    "if @xmath219 , then we modify @xmath68 by deleting edge @xmath211 and adding edge @xmath222 and proceed to process the other edge incident to @xmath210 than @xmath222 .    by the above claim , we may assume that @xmath68 is a single path @xmath223 , and denote @xmath224 for @xmath225 .",
    "we next detail how to partition the edge set of @xmath68 into three required matchings @xmath179 , @xmath192 , and @xmath195 .",
    "initially , we set @xmath226 , @xmath227 , and @xmath228 .",
    "then , for @xmath229 ( in this order ) , we try to find a @xmath230 such that @xmath231 is a matching and @xmath232 $ ] is an acyclic @xmath3-matching of @xmath37 . to explain how to find @xmath233 , fix an integer @xmath234 .",
    "let @xmath5 be the integer in @xmath235 with @xmath236 , and @xmath237 and @xmath238 be the two integers in @xmath239 .",
    "if @xmath240 $ ] ( respectively , @xmath241 $ ] ) contains no path between @xmath242 and @xmath243 , then we can set @xmath244 ( respectively , @xmath245 ) and we are done .",
    "so , we may also assume that @xmath240 $ ] contains a path @xmath246 between @xmath242 and @xmath243 and @xmath241 $ ] contains a path @xmath247 between @xmath242 and @xmath243 .",
    "see figure  [ fig:3part ] .",
    "let @xmath248 ( respectively , @xmath249 ) be the neighbor of @xmath242 in @xmath246 ( respectively , @xmath247 ) , and @xmath250 ( respectively , @xmath251 ) be the neighbor of @xmath243 in @xmath246 ( respectively , @xmath247 ) .",
    "then , none of edges @xmath252 , @xmath253 , and @xmath254 can appear in @xmath246 ( respectively , @xmath247 ) , because @xmath255 and neither @xmath253 nor @xmath254 has been processed .",
    "so , all of @xmath256 , @xmath257 , @xmath258 , and @xmath259 belong to @xmath53 .",
    "thus , @xmath260 and @xmath261 because @xmath53 is a matching .",
    "consequently , one edge incident to @xmath248 ( respectively , @xmath250 ) in @xmath68 belongs to @xmath262 and the other belongs to @xmath263 .",
    "hence , @xmath264 and @xmath265 .    since @xmath236 , either @xmath266 or @xmath267 .",
    "we assume that @xmath266 ; the case where @xmath267 is similar .",
    "since @xmath247 is a path between @xmath242 and @xmath243 in @xmath241 $ ] , @xmath241 $ ] contains no path between @xmath242 and @xmath268 .",
    "thus , @xmath269 $ ] is an acyclic @xmath3-matching of @xmath37 .",
    "hence , we move @xmath270 from @xmath271 to @xmath263 .",
    "a crucial point is that the degree of @xmath248 in @xmath272 $ ] is @xmath13 .",
    "this is true , because @xmath248 appears in both @xmath246 and @xmath247 and in turn can not be incident to an edge in @xmath271 . by this crucial point and",
    "the fact that @xmath248 and @xmath242 belong to the same connected component in @xmath273 $ ] , we know that @xmath273 $ ] is an acyclic @xmath3-matching of @xmath37",
    ". therefore , we can set @xmath274 .     from @xmath275 to @xmath263 and adding @xmath253 to @xmath275 , where ( 1 )  the dashed lines indicate edges in @xmath53 , ( 2 )  the thin solid lines indicate edges of @xmath68 that have not been processed , ( 3 )  the lines labeled with @xmath5 ( respectively , @xmath237 , or @xmath238 ) indicate edges in @xmath275 ( respectively , @xmath262 , or @xmath263 ) , and ( 4 )  the two curves may contain edges of @xmath53.,scaledwidth=90.0% ]    obviously , with the famous union - find data structure  @xcite , the above partitioning of the edge set @xmath68 into @xmath207 can be done in @xmath276 time .    in general , lemma  [ lem : mine ] can not be improved by partitioning the edge set of @xmath68 into two matchings instead of three matchings . to see this",
    ", it suffices to consider a concrete example , where @xmath68 is just a path with edges @xmath277 , @xmath278 , @xmath279 and @xmath53 consists of edges @xmath280 and @xmath281 .",
    "[ lemma42 ] the weight of matching @xmath65 is @xmath282 .",
    "note that graph @xmath57 contains all bandpasses of @xmath80 , which is an acyclic @xmath3-matching . from lemma  [ lemma1 ] , we can compute a hamiltonian path @xmath68 in @xmath57 of weight at least @xmath69 of the optimum , and thus of weight at least @xmath283 .",
    "the above lemma  [ lem : mine ] guarantees that @xmath284    [ theorem1 ] algorithm approx is an @xmath285-time @xmath4-approximation for the bandpass problem .",
    "the running time of algorithm approx is dominated by the computing for those maximum weight @xmath5-matchings , for @xmath286 , which can be done in @xmath285 time . since @xmath53 is the maximum weight matching in graph @xmath37 , from eq .",
    "( [ eq2 ] ) we have @xmath287    combining eqs .",
    "( [ eq4 ] ) and ( [ eq5 ] ) , we have for any real number @xmath288 $ ] , @xmath289    the permutation @xmath43 produced by algorithm approx contains @xmath290 bandpasses , as indicated at the end of section 2.1 . from lemmas  [ lemma41 ] and [ lemma42 ]",
    ", we have for any real number @xmath291 $ ] , @xmath292    together with eqs .",
    "( [ eq3 ] ) and ( [ eq6 ] ) , the above eq .",
    "( [ eq7 ] ) becomes , @xmath293 where the last inequality is achieved by setting @xmath294 and @xmath295 .",
    "note that for all @xmath296 , @xmath297 .",
    "it then follows from eqs .",
    "( [ eq8 ] ) and ( [ eq1 ] ) that @xmath298    that is , the worst - case performance ratio of algorithm approx is at most @xmath4 .",
    "in this paper , we presented a @xmath4-approximation algorithm for the bandpass problem ( @xmath30 ) , which improves the first non - trivial approximation ( @xmath299 ) and a subsequent approximation ( @xmath300 ) .",
    "our algorithm is based on maximum weight @xmath5-matchings , for @xmath286 , similar to tackling the closely related max - tsp .",
    "the intrinsic structural property we proved for the optimal row permutation and the maximum weight matching is fundamental , without which no better lower bound on the optimum can be built .",
    "the schemes we developed to partition a @xmath5-matching , for @xmath301 and @xmath302 , into desired matchings are also interesting , and could potentially be further improved .",
    "for the max - tsp , serdyukov presented a @xmath303-approximation algorithm based on the maximum weight _ assignment _ ( or called _ cycle cover _ ) and the maximum weight matching  @xcite , which has been improved to the currently best @xmath33-approximation algorithm in lemma  [ lemma1 ] .",
    "we believe that the bandpass problem can be better approximated by either improving the two key @xmath5-matching partitioning schemes presented in this paper , or introducing new structural properties and/or new techniques ; yet we also believe that there will be a gap from @xmath33 , due to the `` dynamic '' edge weights .",
    "on the other hand , hassin and rubinstein gave a randomized approximation algorithm for the max - tsp with expected performance ratio @xmath304  @xcite ( which was subsequently de - randomized in @xcite ) .",
    "it would be interesting to design a randomized approximation for the bandpass problem too , with a better than @xmath305 expected performance ratio .",
    "weitian tong , randy goebel , and guohui lin are supported in part by nserc",
    ".              b.  chandra and m.  m. halldrsson .",
    "greedy local improvement and weighted set packing approximation . in _",
    "acm - siam proceedings of the tenth annual symposium on discrete algorithms ( soda99 ) _ , pages 169176 , 1999 .",
    "z .- z . chen and l.",
    "an improved approximation algorithm for the bandpass-2 problem . in _ proceedings of the 6th annual international conference on combinatorial optimization and applications ( cocoa 2012 ) _ ,",
    "volume 7402 of _ lncs _ , pages 185196 , 2012 .",
    "h.  gabow .",
    "an efficient reduction technique for degree - constrained subgraph and bidirected network flow problems . in _ proceedings of the 15th annual acm symposium on theory of computing ( stoc83 ) _ , pages 448456 , 1983 .",
    "k.  e. paluch , m.  mucha , and a.  madry .",
    "a 7/9 - approximation algorithm for the maximum traveling salesman problem . in _ proceedings of the 12th international workshop on approx and the 13th international workshop on random _",
    ", volume 5687 of _ lncs _ , pages 298311 , 2009 .",
    "w.  tong , r.  goebel , w.  ding , and g.  lin .",
    "an improved approximation algorithm for the bandpass problem . in _ proceedings of the joint conference of the sixth international frontiers of algorithmics workshop and the eighth international conference on algorithmic aspects of information and management ( faw - aaim 2012 ) _ , lncs 7285 , pages 351358 , 2012 ."
  ],
  "abstract_text": [
    "<S> the general bandpass-@xmath0 problem is np - hard and can be approximated by a reduction into the weighted @xmath0-set packing problem , with a worst case performance ratio of @xmath1 . </S>",
    "<S> when @xmath2 , a maximum weight matching gives a @xmath3-approximation to the problem . in this paper </S>",
    "<S> , we call the bandpass-@xmath3 problem simply the bandpass problem </S>",
    "<S> . the bandpass problem can be viewed as a variation of the maximum traveling salesman problem , in which the edge weights are dynamic rather than given at the front . </S>",
    "<S> we present a @xmath4-approximation algorithm for the problem . </S>",
    "<S> such an improved approximation is built on an intrinsic structural property proven for the optimal solution and several novel schemes to partition a @xmath5-matching into desired matchings .    </S>",
    "<S> [ [ keywords ] ] keywords : + + + + + + + + +    the bandpass problem , maximum weight @xmath5-matching , acyclic @xmath3-matching , approximation algorithm , worst case performance ratio </S>"
  ]
}
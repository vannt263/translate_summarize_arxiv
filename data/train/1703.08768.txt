{
  "article_text": [
    "the ramsey number @xmath4 is defined to be the smallest @xmath5 such that every graph of order @xmath5 contains either a clique of @xmath6 vertices or an independent set of @xmath7 vertices .",
    "[ t : main ] the ramsey number @xmath0 is less than or equal to @xmath8 .    the history of @xmath0 is provided in  @xcite .",
    "the lower bound of 43 established constructively by exoo  @xcite is still the best .",
    "the previous best upper bound of 49 was proved by mckay and radziszowski  @xcite . by theorem  [ t : main ] we now have @xmath9 .",
    "the actual value of @xmath0 is widely believed to be @xmath10 , because a lot of computer resources have been expended in an unsuccessful attempt to construct a ramsey(5,5)-graph of order 43  @xcite . as additional evidence ,",
    "we can report that , in unpublished 2014 work , lieby and the second author proved that any ramsey(5,5 ) graph on 42 vertices other than the 656 reported in  @xcite do not share a 37-vertex subgraph with any of the  656 .",
    "the proof of theorem [ t : main ] is via computer verification , checking approximately two trillion separate cases .",
    "we wrote two independent programs to carry out the calculation , to minimise the chance of any computer bugs affecting our results .",
    "let @xmath11 denote the set of isomorphism classes of graphs of order @xmath5 without an @xmath6-clique or independent @xmath7-set , and @xmath12 .",
    "the main idea is that given a graph @xmath13 , a large subgraph of it must be obtained by gluing together two graphs in @xmath14 along a graph in @xmath15 for some @xmath16 .",
    "a list of 350,904 graphs in @xmath14 was compiled by mckay and radziszowski @xcite in 1995 , and our first task was to complete their list .",
    "this was actually the most time - consuming part of the project .",
    "[ t : r45 ] @xmath17 .     and @xmath18",
    "are given graphs from @xmath14 that overlap in a graph @xmath19 .",
    "the problem is to choose the edges between @xmath20 and @xmath21 so that the whole is in @xmath22.[r55pic ] ]    we now explain the main proof idea in more detail . for a graph @xmath23 , @xmath24 is the vertex - set of @xmath23 , @xmath25 is the neighbourhood of vertex @xmath26 and @xmath27 $ ] is the subgraph of @xmath23 induced by  @xmath28 . first , note that because @xmath29 @xcite , every vertex in a graph @xmath30 must have degree @xmath31 or @xmath32 . by replacing @xmath23 by its complement",
    "if necessary we can assume that @xmath23 has at least @xmath32 vertices of degree @xmath32 .",
    "hence @xmath23 must have two adjacent vertices @xmath33 of degree @xmath32 .",
    "define @xmath34 , \\\\",
    "h & = f[n_f(a ) ] , \\\\",
    "k & = f[{v\\mkern-3mu}g \\cap { v\\mkern-3mu}h].\\end{aligned}\\ ] ] in words , @xmath35 is the subgraph of @xmath23 induced by the @xmath32 vertices adjacent to  @xmath36 ( this includes  @xmath37 but not  @xmath36 ) , @xmath18 is the subgraph induced by the vertices adjacent to  @xmath37 , and @xmath19 is the intersection of @xmath35 and  @xmath18",
    ". please see figure  [ r55pic ] .",
    "note that @xmath38 and that @xmath39 for some @xmath16 . because @xmath40 we must have @xmath41 , and @xmath16 is also equal to the degree of @xmath37 in @xmath35 and the degree of @xmath36 in @xmath18 .    to reconstruct @xmath42 $ ] , which is a graph with @xmath43 vertices , from @xmath35 , @xmath18 and @xmath19 , it suffices to specify how @xmath19 is a subgraph of @xmath35 and @xmath18 , and whether or not we have an edge between @xmath44 and @xmath45 for @xmath46 and @xmath47 ; i.e. between parts labelled @xmath20 and @xmath21 in figure [ r55pic ] .",
    "we call this procedure",
    "_ gluing_. for each inclusion of @xmath19 into @xmath35 and @xmath18 there are @xmath48 ways of gluing @xmath35 and @xmath18 along @xmath19 , but we will only consider gluings that could give a graph in @xmath49 .    for @xmath39 , define @xmath50 \\cong k\\}.\\ ] ] we will call @xmath51 a _ pointed graph of type @xmath19_. our proof of theorem [ t : main ] consists of the following steps .    * step 1 : * we completed the list of graphs in @xmath14 compiled by mckay and radziszowski , thereby proving theorem [ t : r45 ] .",
    "this was done by a straightforward ( but computationally expensive ) extension of the method in  @xcite .",
    "while that calculation would have taken too long in 1995 , it was doable in 2016 .",
    "* step 2 : * for each @xmath39 with @xmath52 and for each pair @xmath53 , we used a computer program to calculate all ways of gluing @xmath35 and @xmath18 along @xmath19 . note that this consisted of one gluing problem for each automorphism of @xmath19 .    * step 3 : * for each graph generated in step 2 , we used another program which attempts in all possible ways to add one vertex while staying within @xmath22 .",
    "since this was never possible , none of the graphs generated in step  2 are subgraphs of a graph in @xmath54 .",
    "[ l : step123ok ] execution of steps 13 is sufficient to prove theorem  [ t : main ] .",
    "suppose @xmath55 .",
    "we first prove that either @xmath23 or its complement has a vertex of degree  24 adjacent to at least 12 other vertices of degree  24 .",
    "suppose that @xmath23 is a counterexample to this claim , and let @xmath28 be its vertices of degree  24 . since @xmath27 $ ] has maximum degree 11 , there are at least @xmath56 edges between @xmath57 and @xmath58 in  @xmath23 . similarly , there are at least @xmath59 edges between @xmath57 and @xmath58 in  @xmath60 . however , this is impossible since @xmath61 and @xmath62 .",
    "so let @xmath36 be a vertex of @xmath23 of degree 24 that is adjacent to at least 12 other vertices of degree  24 and define @xmath63 $ ] . from the @xmath14 catalogue we find that @xmath35 has at most 8 vertices of degree more than  11 , so we can choose @xmath64 that has degree 24 in @xmath23 and degree at most 11 in  @xmath35 .",
    "define @xmath65 $ ] .",
    "then the gluing of @xmath51 and @xmath66 in step  2 will find a subgraph of  @xmath23 and the failure of one point extension in step  3 will show that @xmath23 does nt exist .",
    ".statistics for all @xmath67-graphs[r45table ] [ cols=\"^,^,^,^,^,^,>\",options=\"header \" , ]     the number of pointed graphs in @xmath68 for @xmath69 varies greatly : from  0 to  526,073 , the latter from a rather irregular graph of order  11 and 21 edges . for step  2",
    "we take two pointed graphs @xmath70 and overlap them so that their common subgraph  @xmath19 coincides .",
    "this can be done in one distinct way for each automorphism of  @xmath19 ( again ignoring some small reductions arising from automorphisms of  @xmath35 and  @xmath18 ) .",
    "most graphs @xmath19 have only trivial automorphisms but some have large automorphism groups , the largest having order 1152 ( a vertex - transitive quartic graph of order  8) .    taking the wildly varying sizes of @xmath68 as well as the automorphism groups of the various @xmath19 into account we needed to solve approximately 2 trillion gluing problems . while that is certainly a lot , we were able to perform hundreds of thousands of such gluings per second per core .",
    "the whole calculation took approximately six core - months for one implementation and two core - months for the other .",
    "in order to ensure correctness , the list of pointed graphs was prepared independently by the two authors and all the gluings were performed by two programs written independently using different methods . the decision to use two different methods rather than identifying the fastest method and implementing it",
    "twice was based on the long - established axiom of software engineering that different programmers tend to make the same errors when faced with the same task .",
    "now we will describe the two different methods for gluing @xmath71 after they are overlapped at the common subgraph  @xmath19 .",
    "because of the large number of calculations needed , the naive approach of deciding one unknown adjacency at a time takes far too long .",
    "define @xmath72 .",
    "suppose @xmath19 has vertices @xmath73 , @xmath35 has vertices @xmath74 and @xmath18 has vertices @xmath75 . note that the vertices @xmath37 and @xmath36 can not participate in any @xmath76-cliques or independent @xmath76-sets by the construction . to specify a gluing it suffices to specify whether or not @xmath77 and @xmath78 are connected by an edge for @xmath79 .",
    "we will record this data in a @xmath80 matrix @xmath81 with entries @xmath82 ( for no edge ) and @xmath83 ( for edge ) .",
    "define a _ potential @xmath84-clique _ to be @xmath85 vertices @xmath86 in @xmath87 , @xmath6 vertices @xmath88 in @xmath89 , and @xmath7 vertices @xmath90 in @xmath91 such that @xmath92 is an @xmath93-clique in @xmath35 and @xmath94 is an @xmath95-clique in @xmath18 .",
    "potential independent @xmath84-set _ similarly .",
    "the following lemma is immediate .",
    "[ l : newcliques ] a @xmath80 0 - 1 matrix @xmath96 defines a gluing if and only if    1 .   for each potential @xmath84-clique with @xmath97 , @xmath98 for some @xmath99 .",
    "( this is needed for @xmath100 , @xmath101 and @xmath102 . ) 2 .   for each potential independent @xmath84-set with @xmath97 , @xmath103 for some @xmath99 .",
    "( this is needed for @xmath104 , @xmath105 , @xmath106 , @xmath107 , @xmath100 , @xmath108 , @xmath101 and @xmath102 . )",
    "please refer to figure  [ r55pic ] and consider a set @xmath57 of size  5 . for @xmath57 to be a clique in the completed graph , it must overlap both @xmath109 and @xmath110 , and the pairs of vertices in each those intersections must be edges .",
    "that implies it is one of the potential @xmath84-cliques listed in part  ( 1 ) , and to prevent @xmath57 from being a clique in the completed graph we need to include a non - edge .",
    "the case of an independent set is similar .",
    "the two gluing methods are logically similar but implemented very differently .",
    "the first gluing method expands on the method in @xcite .",
    "define an _",
    "interval _ to be a set of the form @xmath111 , where @xmath21 and @xmath112 are subsets of @xmath113 .",
    "we write @xmath114 $ ] .",
    "we represent @xmath115 by two @xmath80 matrices with coefficients in @xmath116 .    given an interval @xmath117 $ ]",
    ", we define collapsing rules as follows .",
    "there are @xmath118 in total , one for each of the triples in lemma [ l : newcliques ] above .",
    "the special event fail means that there is no @xmath119 $ ] which corresponds to a proper gluing .",
    "* rule * @xmath120 .",
    "suppose @xmath121 is a potential @xmath100-clique .",
    "fail @xmath122 @xmath123 @xmath124 @xmath125    the collapsing rules for @xmath126 and @xmath127 are similar . in each case",
    ", the rule says that if 5 vertices include 9 edges , then the remaining vertex pair must not be an edge .",
    "* rule * @xmath128 .",
    "suppose @xmath129 is a potential independent @xmath104-set .",
    "fail    the collapsing rules for the other potential independent sets from lemma  [ l : newcliques ] are once again similar .",
    "we start the search with a single interval @xmath114 $ ] with @xmath130 and @xmath131 , and we note that the collapsing rule @xmath128 can be applied even in this case . each time we add an edge to @xmath21 or remove an edge from @xmath112 the number of possible gluings is cut in half .    after applying these collapsing rules repeatedly",
    ", we must eventually encounter either fail or a stable situation .",
    "the discussion in @xcite applies , and the final state is independent of the order of the application of the collapsing rules .",
    "if we do not encounter fail , we pick some @xmath132 with @xmath133 and @xmath134 , and consider the cases @xmath135 $ ] and @xmath136 $ ] separately .    the second method applies an equivalent procedure using data structures familiar from the constraint satisfaction area .",
    "each entry @xmath137 of @xmath81 is a _ variable _",
    ", with value false , true or unknown , while each set @xmath138 is a _",
    "clause_. clauses from potential @xmath84-cliques ca nt have all their variables true , while clauses from potential independent @xmath84-sets ca nt have all their variables false .",
    "each variable @xmath139 has a list @xmath140 of the clique clauses which contain @xmath139 , and a list @xmath141 of the independent set clauses which contain @xmath139 .",
    "there is also a stack @xmath142 which maintains a set of distinct variables on a last - in first - out basis .",
    "informally , at each moment @xmath142 contains those variables which have been assigned false or true , but their clause lists have not yet been scanned .",
    "initially , variables are set to true if required by independent @xmath104-set clauses , and unknown otherwise .",
    "the variables equal to true are put onto @xmath142 .",
    "then we execute the following until it terminates .    plus",
    "50pt-300 plus -50pt    pop the top variable @xmath139 off @xmath142 * exit * fail set @xmath143 and and push @xmath144 onto @xmath142 * exit * fail set @xmath145 and and push @xmath144 onto @xmath142    for good efficiency it is essential that variables be assigned values as they enter the stack and not when they leave it .",
    "also , a good optimization is for clauses to remember how many unknown variables they have .",
    "if the algorithm terminates with `` * * exit * * fail '' , there is no solution .",
    "otherwise , all the variables with value false or true have those values in all solutions .",
    "if there is any variable with value unknown , we can choose one such variable and try false and true separately with @xmath142 initialised to that variable only .",
    "and so on , recursively .    both methods",
    "were very fast for @xmath146 , often performing 100,000 gluings per second per core , primarily because failure occurred early most of the time .",
    "for @xmath147 , the methods as described could take much longer since extremely large search trees with many useless branches could be generated .",
    "for those values of @xmath16 we used additional techniques .",
    "for the first method , two techniques were used .",
    "first , for each pair @xmath148 we applied the collapsing rules to both @xmath149 $ ] and @xmath150 $ ] . if for some pair @xmath132 we arrived at fail in both cases we then concluded that there were no gluings .",
    "if @xmath151 $ ] led to fail then we replaced @xmath117 $ ] by @xmath150 $ ] , and if @xmath150 $ ] led to fail then we replaced @xmath117 $ ] by @xmath151 $ ] .",
    "this is of course more expensive than the original algorithm at each node of the search tree , but we found that for @xmath152 it was worth it .",
    "second , we ordered the pairs @xmath132 according to how many independent sets of type @xmath106 and @xmath105 they were contained in and started the binary search with a pair @xmath132 which was maximal in this sense .",
    "the advantage is that when considering @xmath151 $ ] the collapsing rules @xmath153 and @xmath154 , which require only a single edge to be missing from @xmath112 in order to modify @xmath21 , come into play as much as possible .",
    "for the second method , instead of choosing an arbitrary unknown variable to branch on , we used an unknown variable which occurred in the greatest number of clique clauses with all true variables except two unknown variables , or independent set clauses with all false variables except two unknown variables .",
    "this is a heuristic for how beneficial it is to assign false or true to the variable .    in both cases",
    ", these enhancements made the cost per node of the search tree much greater but , due to the smaller number of pointed graphs for small  @xmath16 , the computation finished quickly enough .",
    "width0pt    @xmath155   \\multicolumn{3}{c}{$\\downbracefill$ } & & \\\\[0.4ex ]    \\maa & \\mab   & \\mac & \\mad & \\mae \\\\",
    "\\hline   \\mba & \\mbb   & \\mbc & \\mbd & \\mbe \\\\",
    "\\cline{3 - 5 }   \\mca & \\mcb   & \\mcc & \\mcd & \\mce",
    "\\\\   \\cline{1 - 3 }   \\mda & \\mdb   & \\mdc & \\mdd & \\mde \\\\   \\hline   \\mea & \\meb   & \\mec & \\med & \\mee \\\\   & & \\multicolumn{3}{c}{$\\upbracefill$ } \\\\[0.6ex ]    & & \\multicolumn{3}{c}{\\hbox{\\normalsize$h$ } }   \\end{array}\\ ] ]",
    "for @xmath156 , no gluings produced any output graphs , so step  3 was unnecessary . for @xmath157 we found a total of 647,424 graphs ( 81,936 nonisomorphic ) in @xmath158 , all of them from a single @xmath159 .",
    "for @xmath160 we found a total of 15,244 graphs in @xmath161 , with @xmath162 graphs ( 14,412 nonisomorphic ) coming from one @xmath163 and 92 graphs ( 84 nonisomorphic ) coming from another  @xmath19 .",
    "an example is shown in figure  [ gluefig ] .",
    "none of these graphs could be extended by one more vertex while staying within @xmath22 , so step  3 was completed successfully .    by step  2 , we do not need gluings for @xmath164 , which is fortunate since the number of successful gluings is around 57 billion for @xmath165 and perhaps even larger for @xmath166 .",
    "this would make step  3 very onerous .",
    "of course , these considerations are the reason we sought to eliminate @xmath164 theoretically ( lemma  [ l : step123ok ] ) ."
  ],
  "abstract_text": [
    "<S> we improve the upper bound on the ramsey number @xmath0 from @xmath1 to @xmath2 . </S>",
    "<S> we also complete the catalogue of extremal graphs for @xmath3 . </S>"
  ]
}
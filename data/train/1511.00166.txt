{
  "article_text": [
    "it is well known that trigonometric representations of periodic functions and chebyshev polynomial representations of nonperiodic functions are closely related .",
    "table  [ parallels ] lists some of the parallels between these two situations .",
    "chebfun , a software system for computing with functions and solving ordinary differential equations  @xcite , relied entirely on chebyshev representations in its first decade .",
    "this paper describes its extension to periodic problems initiated by the first author and released with chebfun version 5.1 in december 2014 .",
    "[ parallels ]    .some parallels between trigonometric and chebyshev settings .",
    "the row of contributors names is just a sample of some key figures . [",
    "cols=\"^,^\",options=\"header \" , ]     though chebfun is a software product , the main focus of this paper is mathematics and algorithms rather than software _ per se .",
    "_ what makes this subject interesting is that the trigonometric / chebyshev parallel , though close , is not an identity .",
    "the experience of building a software system based first on one kind of representation and then extending it to the other has given the chebfun team a uniquely intimate view of the details of these relationships .",
    "we begin this paper by listing ten differences between chebyshev and trigonometric formulations that we have found important .",
    "this will set the stage for presentations of the problems of trigonometric series , polynomials , and projections ( section 2 ) , trigonometric interpolants , aliasing , and barycentric formulas ( section 3 ) , approximation theory and quadrature ( section 4 ) , and various aspects of our algorithms ( sections 57 ) .",
    "_ 1 . one basis or two . _ for working with polynomials on @xmath0 , the only basis functions one needs are the chebyshev polynomials @xmath1 . for trigonometric polynomials on @xmath2 , on the other hand ,",
    "there are two equally good equivalent choices : complex exponentials @xmath3 , or sines and cosines @xmath4 and @xmath5 .",
    "the former is mathematically simpler ; the latter is mathematically more elementary and provides a framework for dealing with even and odd symmetries .",
    "a fully useful software system for periodic functions needs to offer both kinds of representation .",
    "complex coefficients .",
    "_ in the @xmath3 representation , the expansion coefficients of a real periodic function are complex .",
    "mathematically , they satisfy certain symmetries , and a software system needs to enforce these symmetries to avoid imaginary rounding errors .",
    "polynomial approximations of real nonperiodic functions , by contrast , do not lead to complex coefficients .",
    "even and odd numbers of parameters .",
    "_ a polynomial of degree @xmath6 is determined by @xmath7 parameters , a number that may be odd or even .",
    "a trigonometric polynomial of degree @xmath6 , by contrast , is determined by @xmath8 parameters , always an odd number , as a consequence of the @xmath9 symmetry . for most purposes",
    "it is unnatural to speak of trigonometric polynomials with an even number of degrees of freedom .",
    "even numbers make sense , on the other hand , in the special case of trigonometric polynomials defined by interpolation at equispaced points , if one imposes the symmetry condition that the interpolant of the @xmath10 sawtooth should be real , i.e. , a cosine rather than a complex exponential . here",
    "distinct formulas are needed for the even and odd cases .",
    "the effect of differentiation .",
    "_ differentiation lowers the degree of an algebraic polynomial , but it does not lower the degree of a trigonometric polynomial ; indeed it enhances the weight of its highest - degree components .",
    "uniform resolution across the interval .",
    "_ trigonometric representations have uniform properties across the interval of approximation , but polynomials are nonuniform , with much greater resolution power near the ends of @xmath0 than near the middle  @xcite .",
    "periodicity and translation - invariance . _",
    "the periodicity of trigonometric representations means that a periodic chebfun constructed on @xmath2 , say , can be perfectly well evaluated at @xmath11 or @xmath12 ; nonperiodic chebfuns have no such global validity .",
    "thus , whereas interpolation and extrapolation are utterly different for polynomials , they are not so different in the trigonometric case . a subtler consequence of translation invariance is explained in the footnote on p.  .",
    "operations that break periodicity .",
    "_ a function that is smooth and periodic may lose these properties when restricted to a subinterval or subjected to operations like rounding or absolute value .",
    "this elementary fact has the consequence that a number of operations on periodic chebfuns require their conversion to nonperiodic form .",
    "good and bad bases .",
    "_ the functions @xmath3 or @xmath4 and @xmath5 are well - behaved by any measure , and nobody would normally think of using any other basis functions for representing trigonometric functions . for polynomials , however , many people would reach for the basis of monomials @xmath13 before the chebyshev polynomials @xmath1 .",
    "unfortunately , the monomials are exponentially ill - conditioned on @xmath0 : a degree-@xmath6 polynomial of size @xmath14 on @xmath0 will typically have coefficients of order @xmath15 when expanded in the basis @xmath16 .",
    "use of this basis will cause trouble in almost any numerical calculation unless @xmath6 is very small .",
    "good and bad interpolation points .",
    "_ for interpolation of periodic functions , nobody would normally think of using any interpolation points other than equispaced .",
    "for interpolation of nonperiodic functions by polynomials , however , equispaced points lead to exponentially ill - conditioned interpolation problems  @xcite .",
    "the mathematically appropriate choice is not obvious until one learns it : chebyshev points , quadratically clustered near @xmath17 .",
    "_ all the world knows and trusts fourier analysis .",
    "by contrast , experience with chebyshev polynomials is often the domain of experts , and it is not as widely appreciated that numerical computations based on polynomials can be trusted .",
    "historically , points 8 and 9 of this list have led to this mistrust .",
    "the book _ approximation theory and approximation practice _  @xcite summarizes the mathematics and algorithms of chebyshev technology for nonperiodic functions .",
    "the present paper was written with the goal in mind of compiling analogous information in the trigonometric case .",
    "in particular , section 2 corresponds to chapter 3 of  @xcite , section 3 to chapters 2 , 4 , and 5 , and section 4 to chapters 6 , 7 , 8 , 10 , and 19 .",
    "throughout this paper , we assume @xmath18 is a lipschitz continuous periodic function on @xmath2 . here and in all our statements about periodic functions , the interval @xmath2 should be understood periodically : @xmath19 and @xmath20 are identified , and any smoothness assumptions apply across this point in the same way as for @xmath21  @xcite .",
    "it is known that @xmath18 has a unique trigonometric series , absolutely and uniformly convergent , of the form @xmath22 with fourier coefficients @xmath23 ( all coefficients in our discussions are in general complex , though in cases of certain symmetries they will be purely real or imaginary . )",
    "equivalently , we have @xmath24 with @xmath25 and @xmath26 the formulas ( [ coeffs2 ] ) can be derived by matching the @xmath27 and @xmath28 terms of ( [ series2 ] ) with those of ( [ series1 ] ) , which yields the identities @xmath29 or equivalently , @xmath30 note that if @xmath18 is real , then ( [ coeffs2 ] ) implies that @xmath31 and @xmath32 are real .",
    "the coefficients @xmath33 are generally complex , and ( [ abccoeffs1 ] ) implies that they satisfy @xmath34 .",
    "the _ degree @xmath6 trigonometric projection _ of @xmath18 is the function @xmath35 or equivalently @xmath36 more generally , we say that a function of the form ( [ trigpoly1])([trigpoly2 ] ) is a _",
    "trigonometric polynomial of degree @xmath6 _ , and we let @xmath37 denote the @xmath38-dimensional vector space of all such polynomials . the trigonometric projection @xmath39 is the least - squares approximant to @xmath18 in @xmath37 , i.e. , the unique best approximation to @xmath18 in the @xmath40 norm over @xmath2 .",
    "mathematically , the simplest degree @xmath6 trigonometric approximation of a periodic function @xmath18 is its trigonometric projection ( [ trigpoly1])([trigpoly2 ] ) .",
    "this approximation depends on the values of @xmath41 for all @xmath42 via ( [ coeffs1 ] ) or ( [ coeffs2 ] ) .",
    "computationally , a simpler approximation of @xmath18 is its degree @xmath6 _ trigonometric interpolant _ , which only depends on the values at certain interpolation points . in our basic configuration , we wish to interpolate @xmath18 in equispaced points by a function @xmath43 .",
    "since the dimension of @xmath37 is @xmath8 , there should be @xmath8 interpolation points .",
    "we take these _ trigonometric points _ to be @xmath44 with @xmath45 .",
    "the trigonometric interpolation problem goes back at least to the young gauss s calculations of the orbit of the asteroid ceres in 1801  @xcite .",
    "it is known that there exists a unique interpolant @xmath46 to any set of data values @xmath47 .",
    "let us write @xmath48 in the form @xmath49 or equivalently @xmath50 for some coefficients @xmath51 or equivalently @xmath52 and @xmath53 .",
    "the coefficients @xmath54 and @xmath33 are related by @xmath55 ( the _ poisson summation formula _ ) , and similarly @xmath56/@xmath57 and @xmath31/@xmath32 are related by @xmath58 and @xmath59 for @xmath60 .",
    "we can derive these formulas by considering the phenomenon of _ aliasing .",
    "_ for all  @xmath61 , the functions @xmath62t)$ ] take the same values at the trigonometric points ( [ trigpts ] ) .",
    "this implies that @xmath18 and the trigonometric polynomial ( [ interp1 ] ) with coefficients defined by ( [ aliasing1 ] ) take the same values at these points . in other words , ( [ interp1 ] ) is the degree @xmath6 trigonometric interpolant to @xmath18 .",
    "a similar argument justifies ( [ interp2])([aliasing2 ] ) .",
    "another interpretation of the coefficients @xmath63 is that they are equal to the approximations to @xmath64 one gets if the integrals ( [ coeffs1 ] ) and ( [ coeffs2 ] ) are approximated by the periodic trapezoidal quadrature rule with @xmath65 points  @xcite : @xmath66 @xmath67 to prove this , we note that the trapezoidal rule computes the same fourier coefficients for @xmath18 as for @xmath48 , since they take the same values at the grid points ; but these must be equal to the true fourier coefficients of @xmath48 , since the @xmath68-point trapezoidal rule is exactly correct for @xmath69 , hence for any trigonometric polynomial of degree @xmath70 , hence in particular for any trigonometric polynomial of degree @xmath6 times an exponential @xmath71 with @xmath72 . from ( [ coeffs3])([coeffs4 ] )",
    "it is evident that the discrete fourier coefficients @xmath54 , @xmath56 , @xmath57 can be computed by the fast fourier transform ( fft ) , which , in fact , gauss invented for this purpose .",
    "suppose one wishes to evaluate the interpolant @xmath73 at certain points @xmath74 .",
    "one good algorithm is to compute the discrete fourier coefficients and then apply them .",
    "alternatively , another good approach is to perform interpolation directly by means of the _ barycentric formula _ for trigonometric interpolation , introduced by salzer  @xcite and later simplified by henrici  @xcite : @xmath75 ( if @xmath74 happens to be exactly equal to a grid point @xmath76 , one takes @xmath77 . ) the work involved in this formula is just @xmath78 operations per evaluation , and stability has been established ( after a small modification ) in  @xcite . in practice , we find the fourier coefficients and barycentric formula methods equally effective .    in the above discussion , we have assumed that the number of interpolation points , @xmath65 , is odd .",
    "however , trigonometric interpolation , unlike trigonometric projection , makes sense for an even number of degrees of freedom too ( see e.g.  @xcite ) ; it would be surprising if fft codes refused to accept input vectors of even lengths !",
    "suppose @xmath79 is given and we wish to interpolate @xmath18 in @xmath80 trigonometric points ( [ trigpts ] ) rather than @xmath45 .",
    "this is one data value less than usual for a trigonometric polynomial of this degree , and we can lower the number of degrees of freedom in ( [ interp1 ] ) by imposing the condition @xmath81 or equivalently in ( [ interp2 ] ) by imposing the condition @xmath82 this amounts to prescribing that the trigonometric interpolant through sawtoothed data of the form @xmath83 should be @xmath84 rather than some other function such as @xmath85the only choice that ensures that real data will lead to a real interpolant .",
    "an equivalent prescription is that an arbitrary number @xmath65 of data values , even or odd , will be interpolated by a linear combination of the first @xmath65 terms of the sequence @xmath86    in this case of trigonometric interpolation with @xmath65 even , the formulas ( [ trigpts])([coeffs4 ] ) still hold , except that ( [ aliasing1 ] ) and ( [ coeffs3 ] ) must be multiplied by @xmath87 for @xmath88 . fft codes , however , do not store the information that way . instead , following ( [ cond1 ] ) , they compute @xmath89 by ( [ coeffs3 ] ) with @xmath90 instead of @xmath91 out front  thus effectively storing @xmath92 in the place of @xmath93and then apply ( [ interp1 ] ) with the @xmath94 term omitted .",
    "this gives the right result for values of @xmath74 on the grid , but not at points in - between .",
    "note that the conditions ( [ cond1])([specialset ] ) are very much tied to the use of the sample points ( [ trigpts ] ) .",
    "if the grid were translated uniformly , then different relationships between @xmath95 and @xmath96 or @xmath97 and @xmath98 would be appropriate in ( [ cond1])([cond2 ] ) and different basis functions in ( [ specialset ] ) , and if the grid were not uniform , then it would be hard to justify any particular choices at all for even @xmath65 . for these reasons ,",
    "even numbers of degrees of freedom make sense in equispaced interpolation but not in other trigonometric approximation contexts , in general .",
    "henrici  @xcite provides a modification of the barycentric formula ( [ bary1 ] ) for the equispaced case @xmath80 .",
    "the basic question of approximation theory is , will approximants to a function @xmath18 converge as the degree is increased , and how fast ? the formulas of the last two sections enable us to derive theorems addressing this question for trigonometric projection and interpolation .",
    "( for finer points of trigonometric approximation theory , see  @xcite . ) the smoother @xmath18 is , the faster its fourier coefficients decrease , and the faster the convergence of the approximants .",
    "( if @xmath18 were merely continuous rather than lipschitz continuous , then the trigonometric version of the weierstrass approximation theorem  ( * ? ? ?",
    "* section i.2 ) would ensure that it could be approximated arbitrarily closely by trigonometric polynomials , but not necessarily by projection or interpolation . )",
    "our first theorem asserts that fourier coefficients decay algebraically if @xmath18 has a finite number of derivatives , and geometrically if @xmath18 is analytic .",
    "here and in theorem  [ thm2 ] below , we make use of the notion of the _ total variation , _",
    "@xmath99 , of a periodic function @xmath100 defined on @xmath2 , which is defined in the usual way as the supremum of all sums latexmath:[$\\sum_{i=1}^n     ordered points in @xmath2 with @xmath102 ; @xmath99 is equal to the the @xmath14-norm of @xmath103 , interpreted if necessary as a riemann  stieltjes integral  ( * ? ? ?",
    "* section i.4 ) .",
    "thus @xmath104 on @xmath2 , for example , corresponds to @xmath105 , and @xmath106 to @xmath107 .",
    "all our theorems continue to assume that @xmath18 is @xmath108-periodic .",
    "[ thm1 ] if @xmath18 is @xmath109 times differentiable and @xmath110 is of bounded variation @xmath99 on @xmath2 , then @xmath111 if @xmath18 is analytic with @xmath112 in the open strip of half - width @xmath113 around the real axis in the complex @xmath74-plane , then @xmath114    the bound ( [ est1 ] ) can be derived by integrating ( [ coeffs1 ] ) by parts @xmath115 times .",
    "equation ( [ est2 ] ) can be derived by shifting the interval of integration @xmath2 of ( [ coeffs1 ] ) downward in the complex plane for @xmath116 , or upward for @xmath117 , by a distance arbitrarily close to @xmath113 ; see  ( * ? ? ?",
    "* section 3 ) .    to apply theorem  [ thm1 ] to trigonometric approximations",
    ", we note that the error in the degree @xmath6 trigonometric projection ( [ trigpoly1 ] ) is @xmath118 a series that converges absolutely and uniformly by the lipschitz continuity assumption on @xmath18 .",
    "similarly , ( [ aliasing1 ] ) implies that the error in trigonometric interpolation is @xmath119 where @xmath120 is the index that @xmath121 gets aliased to on the @xmath38-point grid , i.e. , the integer of absolute value @xmath122 congruent to @xmath121 modulo @xmath8 .",
    "these formulas give us bounds on the error in trigonometric projection and interpolation .",
    "[ thm2 ] if @xmath18 is @xmath123 times differentiable and @xmath110 is of bounded variation @xmath99 on @xmath2 , then its degree @xmath6 trigonometric projection and interpolant satisfy @xmath124 if @xmath18 is analytic with @xmath112 in the open strip of half - width @xmath113 around the real axis in the complex @xmath74-plane , they satisfy @xmath125    the estimates ( [ est3 ] ) follow by bounding the tails ( [ error1 ] ) and ( [ error2 ] ) with ( [ est1 ] ) , and ( [ est4 ] ) likewise by bounding them with ( [ est2 ] ) .    a slight variant of this argument gives an estimate for quadrature .",
    "if @xmath126 denotes the integral of a function @xmath18 over @xmath2 and @xmath127 its approximation by the @xmath65-point periodic trapezoidal rule , then from ( [ coeffs1 ] ) and ( [ coeffs3 ] ) , we have @xmath128 and @xmath129 . by ( [ aliasing1 ] ) this implies @xmath130 which gives the following result .",
    "[ thm4 ] if @xmath18 is @xmath123 times differentiable and @xmath110 is of bounded variation @xmath99 on @xmath2 , then the @xmath65-point periodic trapezoidal rule approximation to its integral over @xmath2 satisfies @xmath131 if @xmath18 is analytic with @xmath112 in the open strip of half - width @xmath113 around the real axis in the complex @xmath74-plane , it satisfies @xmath132    these results follow by bounding ( [ trapest ] ) with ( [ est1 ] ) and ( [ est2 ] ) as in the proof of theorem  [ thm2 ] . from ( [ est1 ] )",
    ", the bound one gets is @xmath133 , where @xmath134 is the riemann zeta function , which we have simplified by the inequality @xmath135 for @xmath123 .",
    "the estimate ( [ trap2 ] ) originates with davis  @xcite ; see also  @xcite .",
    "finally , in a section labeled `` approximation theory '' we must mention another famous candidate for periodic function approximation : best approximation in the @xmath136-norm . here",
    "the trigonometric version of the chebyshev alternation theorem holds , assuming @xmath18 is real .",
    "this result is illustrated below in figure  [ bestapprox ] .",
    "let @xmath18 be real and continuous on the periodic interval @xmath2 .",
    "for each @xmath137 , @xmath18 has a unique best approximant @xmath138 with respect to the norm @xmath139 , and @xmath140 is characterized by the property that the error curve @xmath141 equioscillates on @xmath142 between at least @xmath143 equal extrema @xmath144 of alternating signs .",
    "see  ( * ? ? ?",
    "* section 5.2 ) .",
    "building on the mathematics of the past three sections , chebfun was extended in 2014 to incorporate trigonometric representations of periodic functions alongside its traditional chebyshev representations .",
    "( here and in the remainder of the paper , we assume the reader is familiar with chebfun . )",
    "our convention is that a _ trigfun _ is a representation via coefficients @xmath33 as in ( [ trigpoly1 ] ) of a sufficiently smooth periodic function @xmath18 on an interval by a trigonometric polynomial of adaptively determined degree , the aim always being accuracy of 15 or 16 digits relative to the @xmath136-norm of the function on the interval .",
    "this follows the same pattern as traditional chebyshev - based chebfuns , which are representations of nonperiodic functions by polynomials , and a trigfun is not a distinct object from a chebfun but a particular type of chebfun . the default interval , as with ordinary chebfuns",
    ", is @xmath0 , and other intervals are handled by the obvious linear transplantation.actually , one aspect of the transplantation is not obvious , an indirect consequence of the translation - invariance of trigonometric functions .",
    "the nonperiodic function @xmath145 defined on @xmath146 $ ] , for example , has chebyshev coefficients @xmath147 and @xmath148 , corresponding to the expansion @xmath149 .",
    "any user will expect the transplanted function @xmath150 defined on @xmath151 $ ] to have the same coefficients @xmath147 and @xmath148 , corresponding to the transplanted expansion @xmath152 , and this is what chebfun delivers .",
    "by contrast , consider the periodic function @xmath153 defined on @xmath154 $ ] and its transplant @xmath155 on @xmath2 .",
    "a user will expect the expansion coefficients of @xmath156 to be not the same as those of @xmath18 , but their negatives !",
    "this is because we expect to use the same basis functions @xmath157 or @xmath158 and @xmath159 on any interval of length @xmath108 , however translated .",
    "the trigonometric part of chebfun is designed accordingly . ]    for example , here we construct and plot a trigfun for @xmath160 on @xmath2 :     the trigfun representing @xmath161 on @xmath2 .",
    "one can evaluate @xmath18 with f(t ) , compute its definite integral with sum(f ) or its maximum with max(f ) , find its roots with roots(f ) , and so on . ]    ....          > > f = chebfun('cos(t ) + sin(3*t)/2 ' , [ 0 2*pi ] , ' trig ' ) , plot(f ) ....    the plot appears in figure  [ fig1a ] , and the following text output is produced , with the flag trig signalling the periodic representation .    ....",
    "f =             chebfun column ( 1 smooth piece )                 interval        length      endpoint values trig          [        0 ,      6.3 ]         7          1         1   ....    we see that chebfun has determined that this function @xmath18 is of length @xmath162 .",
    "this means that there are @xmath163 degrees of freedom , i.e. , @xmath18 is a trigonometric polynomial of degree @xmath164 , whose coefficients we can extract with c = trigcoeffs(f ) , or in cosine / sine form with = trigcoeffs(f ) .",
    "note that the chebfun constructor does not analyze its input symbolically , but just evaluates the function at trigonometric points ( [ trigpts ] ) , and from this information the degree and the values of the coefficients are determined .",
    "the constructor also detects when a function is real .",
    "a trigfun constructed in the ordinary manner is always of odd length @xmath65 , corresponding to a trigonometric polynomial of degree @xmath165 , though it is possible to make even - length trigfuns by explicitly specifying @xmath65 .    to construct a trigfun , chebfun samples the function on grids of size @xmath166 and tests the resulting discrete fourier coefficients for convergence down to relative machine precision .",
    "( powers of 2 are used since these are particularly efficient for the fft , even though the result will ultimately be trimmed to an odd number of points . as with non - trigonometric chebfun , the engineering details are complicated and under ongoing development . ) when convergence is achieved , the series is chopped at an appropriate point and the degree reduced accordingly .",
    "once a trigfun has been created , computations can be carried out in the usual chebfun fashion via overloads of familiar matlab commands .",
    "for example ,    ....          > > sum(f.^2 )          ans = 3.926990816987241 ....    this number is computed by integrating the trigonometric representation of @xmath167 , i.e. , by returning the number @xmath168 corresponding to the trapezoidal rule applied to @xmath167 as described around theorem  [ thm4 ] .",
    "the default 2-norm is the square root of this result ,    ....",
    "> > norm(f )          ans = 1.981663648803005 ....    derivatives of functions are computed by the overloaded command diff .",
    "( in the unusual case where a trigfun has been constructed of even length , differentiation will increase its length by @xmath14 . )",
    "the zeros of @xmath18 are found with roots :    ....          > >",
    "roots(f )          ans =             1.263651122898791             4.405243776488583 ....    and chebfun determines maxima and minima by first computing the derivative , then checking all of its roots :    ....",
    "> > max(f )          ans = 1.389383416980387 ....    concerning the algorithm used for periodic rootfinding , one approach would be to solve a companion matrix eigenvalue problem , and @xmath169 algorithms for this task have recently been developed  @xcite .",
    "when development of these methods settles down , they may be incorporated in chebfun . for the moment",
    ", trigfun rootfinding is done by first converting the problem to nonperiodic chebfun form using the standard chebfun constructor , whereupon we take advantage of chebfun s @xmath169 recursive interval subdivision strategy  @xcite .",
    "this shifting to subintervals for rootfinding is an example of an operation that breaks periodicity as mentioned in item 7 of the introduction .",
    "the main purpose of the periodic part of chebfun is to enable machine precision computation with periodic functions that are not exactly trigonometric polynomials .",
    "for example , @xmath170 on @xmath2 is represented by a trigfun of length @xmath171 , i.e. , a trigonometric polynomial of degree 13 :    ....          g = chebfun('exp(sin(t ) ) ' , [ 0 2*pi ] , ' trig ' )          g =             chebfun column ( 1 smooth piece )                 interval        length      endpoint values trig          [        0 ,      6.3 ]        27          1         1   ....    the coefficients can be plotted on a log scale with the command plotcoeffs(f ) , and the in figure  [ fig2 ] reveals the faster - than - geometric decay of an entire function .",
    "absolute values of the fourier coefficients of the trigfun for @xmath170 on @xmath2 .",
    "this is an entire function ( analytic throughout the complex @xmath74-plane ) , and in accordance with theorem  @xmath172 , the coefficients decrease faster than geometrically . ]",
    "figure  [ twomore ] shows trigfuns and coefficient plots for @xmath173 and @xmath174 on @xmath175 $ ] .",
    "the latter is @xmath176 but not analytic .",
    "figure  [ signals ] shows a further pair of examples that we call an `` am signal '' and an `` fm signal '' .",
    "these are among the preloaded functions available with cheb.gallerytrig , chebfun s trigonometric analogue of the matlab gallery command .",
    "trigfuns of @xmath177 and @xmath178 ( upper row ) and corresponding absolute values of fourier coefficients ( lower row ) . ]",
    "trigfuns of the `` am signal '' @xmath179 and the `` fm signal '' @xmath180 ( upper row ) and corresponding absolute values of fourier coefficients ( lower row ) . ]    computation with trigfuns , as with nonperiodic chebfuns , is carried out by a continuous analogue of floating point arithmetic  @xcite . to illustrate the `` rounding '' process involved , the degrees of the trigfuns above are 555 and 509 , respectively .",
    "mathematically , their product is of degree 1064 .",
    "numerically , however , chebfun achieves 16-digit accuracy with degree 556 .",
    "here is a more complicated example of chebfun rounding adapted from  @xcite , where it is computed with nonperiodic representations .    ....",
    "f = chebfun(@(t ) sin(pi*t ) , ' trig ' )          s = f          for j = 1:15            f = ( 3/4)*(1 - 2*f.^4 ) , s = s + f          end ....    this program takes 15 steps of an iteration that in principle quadruples the degree at each step , giving a function @xmath181 at the end of degree @xmath182 .",
    "in actuality , however , because of the rounding to 16 digits , the degree comes out one million times smaller as 1148 .",
    "this function is plotted in figure  [ logistic ] .",
    "following  @xcite , we can compute the roots of @xmath183 in half a second on a desktop machine :    ....          > > roots(s-8 )          ans =            -0.992932107411876            -0.816249934290177            -0.798886729723433            -0.201113270276572            -0.183750065709828            -0.007067892588112             0.346696120418255             0.401617073482111             0.442269489632475             0.557730510367530             0.598382926517899             0.653303879581760 ....    the integral with sum(s ) is @xmath184 , correct except in the last two digits .     after fifteen steps of an iteration ,",
    "this periodic function has degree @xmath185 in its chebfun representation rather than the mathematically exact figure 1,073,741,824 . ]",
    "if one tries to construct a trigfun by sampling a function that is not smoothly periodic , chebfun will by default go up to length @xmath186 and then issue a warning :    ....          > > h = chebfun('exp(t ) ' , [ 0 2*pi ] , ' trig ' )          warning : function not resolved using 65536 pts .",
    "have you tried a non - trig representation ?   ....    on the other hand ,",
    "computations that are known to break periodicity or smoothness will result in the representation being automatically cast from a trigfun to a chebfun .",
    "for example , here we define @xmath156 to be the absolute value of the function @xmath187 of figure  [ fig1a ] .",
    "the system detects that @xmath18 has zeros , implying that @xmath156 will probably not be smooth , and accordingly constructs it not as a trigfun but as an ordinary chebfun with several pieces :    ....          > > f = chebfun('cos(t ) + sin(3*t)/2 ' , [ 0 2*pi ] , ' trig ' ) , g = abs(f )          g =             chebfun column ( 3 smooth pieces )                 interval        length      endpoint values            [        0 ,      1.3 ]        17          1   3.8e-16           [      1.3 ,      4.4 ]        25    1.8e-15   7.3e-16",
    "[      4.4 ,      6.3 ]        20   -6.6e-18         1           total length = 62 .",
    "....    similarly , if you add or multiply a trigfun and a chebfun , the result is a chebfun .     when the absolute value of the trigfun @xmath18 of figure  @xmath188 is computed , the result is a nonperiodic chebfun with three smooth pieces . ]",
    "analysis of periodic functions and signals is one of the oldest topics of mathematics and engineering . here",
    "we give six examples of how a system for automating such computations may be useful .",
    "_ complex contour integrals .",
    "_ smooth periodic integrals arise ubiquitously in complex analysis .",
    "for example , suppose we wish to determine the number of zeros of @xmath189 in the complex unit disk .",
    "the answer is given by @xmath190 if @xmath191 with @xmath192 .",
    "with periodic chebfun , we can compute @xmath193 by    ....          > > z = chebfun('exp(1i*t ) ' , [ 0 2*pi ] , ' trig ' ) ;          >",
    "> f = cos(z ) - z ;          > > m = real(sum(diff(f)./f)/(2i*pi ) )          m = 1.000000000000000 ....    changing the integrand from @xmath194 to @xmath195 gives the location of the zero , correct to all digits displayed .    ....",
    "> > z0 = real(sum(z.*diff(f)./f)/(2i*pi ) )          z0 = 0.739085133215161 ....    ( the real commands are included to remove imaginary rounding errors . ) for wide - ranging extensions of calculations like these , including applications to matrix eigenvalue problems , see  @xcite .    _ linear algebra .",
    "_ chebfun does not work from explicit formulas : to construct a function , it is only necessary to be able to evaluate it .",
    "this is an extremely useful feature for linear algebra calculations .",
    "for example , the matrix @xmath196 has all its eigenvalues in the unit disk .",
    "a question with the flavor of control and stability theory is , what is the maximum resolvent norm @xmath197 for @xmath198 on the unit circle ? we can calculate the answer with the code below , which constructs a periodic chebfun of degree @xmath199 .",
    "the maximum is @xmath200 , attained with @xmath201 .    ....",
    "a = [ 2 -2i 1 1 ; 2i -2 0 2 ; -2 0 1 2 ; 0 1i 0 2]/3 ,",
    "i = eye(4 )          ff = @(t ) 1/min(svd(exp(1i*t)*i - a ) )          f = chebfun(ff , [ 0 2*pi ] , ' trig ' , ' vectorize ' )          [ maxval , maxpos ] = max(f ) ....     resolvent norm @xmath197 for a @xmath202 matrix @xmath203 with @xmath204 on the unit circle . ]    _ circular convolution and smoothing . _",
    "the circular or periodic convolution of two functions @xmath18 and @xmath156 with period @xmath205 is defined by @xmath206 where @xmath207 is aribtrary .",
    "circular convolutions can be computed for trigfuns with the circconv function , whose algorithm consists of coefficientwise multiplication in fourier space . for example , here is a trigonometric interpolant through @xmath208 samples of a smooth function plus noise , shown in the upper - left panel of figure  [ noisy ] .    ....",
    "n = 201 , tt = trigpts(n , [ -pi pi ] )           ff = exp(sin(tt ) ) + 0.05*randn(n,1 )           f = chebfun(ff , [ -pi pi ] , ' trig ' ) ....    the high wave numbers can be smoothed by convolving @xmath18 with a mollifier .",
    "here we use a gaussian of standard deviation @xmath209 ( numerically periodic for @xmath210 ) .",
    "the result is shown in the upper - right panel of the figure .    ....",
    "gaussian = @(t , sigma ) 1/(sigma*sqrt(2*pi))*exp(-0.5*(t / sigma).^2 )           g = @(sigma ) chebfun(@(t ) gaussian(t , sigma ) , [ -pi pi ] , ' trig ' )           h = circconv(f , g(0.1 ) )   ....     circular convolution of a noisy function with a smooth mollifier . ]",
    "_ fourier coefficients of non - smooth functions . _ a function @xmath18 that is not smoothly periodic will at best have a very slowly converging trigonometric series , but still , one may be interested in its fourier coefficients .",
    "these can be computed by applying trigcoeffs to a chebfun representation of @xmath18 and specifying how many coefficients are required ; the integrals ( [ coeffs1 ] ) are then evaluated numerically by chebfun s standard method of clenshaw  curtis quadrature .",
    "for example , figure  [ runge ] shows a portrayal of the gibbs phenomenon from runge s 1904 book together with its chebfun equivalent computed in a few seconds with the commands    ....",
    "t = chebfun('t ' , [ -pi pi ] ) , f = ( abs(t ) < pi/2 )           for n = 2*[1 3 5 7 21 79 ] + 1            c = trigcoeffs(f , n )             fn = chebfun(c , [ -pi pi ] , ' coeffs ' , ' trig ' )             plot(fn , ' interval ' , [ 0 4*pi ] )          end ....     on the left , a figure from runge s @xmath211 book _ theorie und praxis der reihen _  @xcite . on the right , the equivalent computed with periodic chebfun . among other things",
    ", this figure illustrates that a trigfun can be accurately evaluated outside its interval of definition.,title=\"fig : \" ]   on the left , a figure from runge s @xmath211 book _ theorie und praxis der reihen _  @xcite . on the right , the equivalent computed with periodic chebfun . among other things",
    ", this figure illustrates that a trigfun can be accurately evaluated outside its interval of definition.,title=\"fig : \" ]     _ interpolation in unequally spaced points .",
    "_ very little attention has been given to trigonometric interpolation in unequally spaced points , but the barycentric formula ( [ bary1 ] ) for odd @xmath65 and henrici s generalization for even @xmath65 have been generalized to this case by salzer and berrut  @xcite .",
    "chebfun makes these formulas available through the command chebfun.interp1 , just as has long been true for interpolation by algebraic polynomials .",
    "for example , the code    ....",
    "t = [ -3 -2 -1 0 .5 1 1.5 2 2.5 ]          p = chebfun.interp1(t , abs(t ) , ' trig ' , [ -pi pi ] ) ....    interpolates the function @xmath212 on @xmath154 $ ] in the 9 points indicated by a trigonometric polynomial of degree @xmath213 .",
    "the interpolant is shown in figure  [ interpdemo ] together with the analogous curve for equispaced points .",
    "trigonometric interpolation of @xmath212 in unequally spaced points with the generalized barycentric formula implemented in chebfun / interp1 . ]    _ best approximation , cf approximation , and rational functions .",
    "_ chebfun has long had a dual role : it is a tool for computing with functions , and also a tool for exploring principles of approximation theory , including advanced ones .",
    "the trigonometric side of chebfun extends this second aspect to periodic problems .",
    "for example , chebfun s new trigremez command can compute best approximants with equioscillating error curves as described in theorem  [ thm4 ]  @xcite .",
    "here is an example that generates the error curve displayed in figure  [ bestapprox ] , with error @xmath214 .    ....          f = chebfun('1./(1.01-sin(t-2 ) ) ' , [ 0 2*pi ] , ' trig ' )          p = trigremez(f,10 ) , plot(f - p ) ....    chebfun is also acquiring other capabilities for trigonometric polynomial and rational approximation , including carathodory  fejr ( cf ) near - best approximation via singular values of hankel matrices , and these will be described elsewhere .",
    "error curve in degree @xmath215 best trigonometric approximation to @xmath216 over @xmath2 .",
    "the curve equioscillates between @xmath217 alternating extrema . ]",
    "a major capability of chebfun is the solution of linear and nonlinear ordinary differential equations ( odes ) , as well as integral equations , by applying the backslash command to a `` chebop '' object .",
    "we have extended these capabilities to periodic problems , both scalars and systems .",
    "see  @xcite for the theory of existence and uniqueness of solutions to periodic odes , which goes back to floquet in the 1880s , a key point being the avoidance of nongeneric configurations corresponding to eigenmodes .",
    "chebfun s algorithm for linear odes amounts to an automatic spectral collocation method wrapped up so that the user need not be aware of the discretization . with standard chebfun , these are chebyshev spectral methods , and now with the periodic extension , they are fourier spectral methods  @xcite . the problem is solved on grids of size 32 , 64 , and so on until the system judges that the fourier coefficients have converged down to the level of noise , and the series is then truncated at an appropriate point .",
    "for example , consider the problem @xmath218 with periodic boundary conditions .",
    "the following chebfun code produces the solution plotted in figure  [ figodelin ] in half a second on a laptop .",
    "note that the trigonometric discretizations are invoked by the flag ` l.bc = ' periodic ' ` .    ....",
    "l = chebop(0,6*pi )           l.op = @(x , u ) 0.001*diff(u,2 ) + 0.001*diff(u ) - cos(x).*u           l.bc = ' periodic '           u = l\\1   ....     solution of the linear periodic ode @xmath219 as a trigfun of degree @xmath220 , computed by an automatic fourier spectral method . ]",
    "this trigfun is of degree 168 , and the residual reported by norm(l*u-1 ) is @xmath221 . as always , @xmath222 is a chebfun ; its maximum , for example , is @xmath223 .    for periodic nonlinear odes",
    ", chebfun applies trigonometric analogues of the algorithms developed by driscoll and birkisson in the chebshev case  @xcite .",
    "the whole solution is carried out by a newton or damped newton iteration formulated in a continuous mode ( `` solve then discretize '' rather than `` discretize then solve '' ) , with jacobian matrices replaced by frchet derivative operators implemented by means of automatic differentiation and automatic spectral discretization .",
    "for example , suppose we seek a solution of the nonlinear problem @xmath224 \\label{nonlinprob}\\ ] ] with periodic boundary conditions .",
    "after seven newton steps , the chebfun commands below produce the result shown in figure  [ fignonlin ] , of degree @xmath225 , and the residual norm norm(n(u)-rhs,inf ) is reported as @xmath226 .    ....",
    "n = chebop(-1,1 )          n.op = @(x , u )",
    ".004*diff(u,2 ) + u.*diff(u ) - u          n.bc = ' periodic '          rhs = chebfun('cos(2*pi*t ) ' , ' trig ' )          u = n\\rhs ....     solution of the nonlinear periodic ode @xmath227 computed by iterating the fourier spectral method within a continuous form of newton iteration . executing max(diff(u ) ) shows that the maximum of @xmath228 is @xmath229 . ]",
    "chebfun s overload of the matlab eigs command solves linear ode eigenvalue problems by , once again , automated spectral collocation discretizations  @xcite .",
    "this too has been extended to periodic problems , with fourier discretizations replacing chebyshev .",
    "for example , a famous periodic eigenvalue problem is the mathieu equation @xmath230 where @xmath231 is a parameter .",
    "the commands below give the plot shown in figure  [ mathieu ] .    ....",
    "q = 2          l = chebop(@(x , u ) -diff(u,2)+2*q*cos(2*x).*u , [ 0 2*pi ] , ' periodic ' )          [ v , d ] = eigs(l,5 ) , plot(v ) ....     first five eigenfunctions of the mathieu equation @xmath232 with @xmath233 , computed with eigs . ]",
    "so far as we know , chebfun is the only system offering such convenient solution of odes and related problems , now in the periodic as well as nonperiodic case .",
    "we have also implemented a periodic analogue of chebfun s expm command for computing exponentials of linear operators , which we omit discussing here for reasons of space .",
    "all the capabilities mentioned in this section can be explored with chebgui , the graphical user interface written by birkisson , which now invokes trigonometric spectral discretizations when periodic boundary conditions are specified .",
    "chebfun is an open - source project written in matlab and hosted on github ; details and the user s guide can be found at www.chebfun.org  @xcite .",
    "about thirty people have contributed to its development over the years , and at present there are about ten developers based mainly at the university of oxford . during 20132014",
    "the code was redesigned and rewritten as version 5 ( first released june 2014 ) in the form of about 100,000 lines of code realizing about 40 classes .",
    "the aim of this redesign was to enhance chebfun s modularity , clarity , and extensibility , and the introduction of periodic capabilities , which had not been planned in advance , was the first big test of this extensibility .",
    "we were pleased to find that the modifications proceeded smoothly .",
    "the central new feature is a new class @trigtech in parallel to the existing @chebtech1 and @chebtech2 , which work with polynomial interpolants in first- and second - kind chebyshev points , respectively .    about half the classes of chebfun",
    "are concerned with representing functions , and the remainder are mostly concerned with ode discretization and automatic differentiation for solution of nonlinear problems , whether scalar or systems , possibly with nontrivial block structure .",
    "the incorporation of periodic problems into this second , more advanced part of chebfun was achieved by introducing a new class @trigcolloc matching @chebcolloc1 and @chebcolloc2 .    about a dozen software projects in various computer languages have been modeled on chebfun , and a partial list can be found at www.chebfun.org .",
    "one of these , fourfun , is a matlab system for periodic functions developed independently of the present work by kristyn mcleod , a student of former chebfun developer rodrigo platte  @xcite .",
    "another that also has periodic and differential equations capabilities is approxfun , written in julia by sheehan olver and former chebfun developer alex townsend  @xcite .",
    "we think the enterprise of numerical computing with functions is here to stay , but can not predict what systems or languages may be dominant , say , twenty years from now . for the moment , only chebfun offers the breadth of capabilities entailed in the vision of matlab - like functionality for continuous functions and operators in analogy to the long - familiar methods for discrete vectors and matrices .    in this article",
    "we have not discussed chebfun computations with two - dimensional periodic functions , which are under development .",
    "for example , we are investigating capabilities for solution of time - dependent pdes on a periodic spatial domain and for pdes in two space dimensions , one or both of which are periodic .",
    "a particularly interesting prospect is to apply such representations to computation with functions on disks and spheres .    for computing with vectors and matrices ,",
    "although matlab codes are rarely the fastest in execution , their convenience makes them nevertheless the best tool for many applications .",
    "we believe that chebfun , including now its extension to periodic problems , plays the same role for numerical computing with functions .",
    "this work was carried out in collaboration with the rest of the chebfun team , whose names are listed at www.chebfun.org .  particularly active in this phase of the project have been anthony austin , sgeir birkisson , toby driscoll , nick hale , hrothgar ( an oxford graduate student who has just a single name ) , alex townsend , and kuan xu .",
    "we are grateful to all of these people for their suggestions in preparing this paper .",
    "the first author would like to thank the oxford university mathematical institute , and in particular the numerical analysis group , for hosting and supporting his sabbatical visit in 2014 , during which this research was initiated ."
  ],
  "abstract_text": [
    "<S> algorithms and underlying mathematics are presented for numerical computation with periodic functions via approximations to machine precision by trigonometric polynomials , including the solution of linear and nonlinear periodic ordinary differential equations . </S>",
    "<S> differences from the nonperiodic chebyshev case are highlighted .    </S>",
    "<S> chebfun , fourier series , trigonometric interpolation , barycentric formula    42a10 , 42a15 , 65t40 </S>"
  ]
}
{
  "article_text": [
    "web service ( ws ) is a quite new distributed software component which uses the web as its provision platform .",
    "that is , like other distributed components , such as dcom , ejb , corba , etc , a ws has its interface described by wsdl@xcite , its communication protocol named soap@xcite based on http , and its name and directory service called uddi@xcite .",
    "ws aims at the requirements of cross - organizational business integration , such as e - commerce , and is developed with a multi - layer protocol stack which models different aspects of cross - organizational business integration based on wses , including long running business transactions , security , qos , coordination , etc , and also the so - called ws composition .    in a viewpoint of requirements of cross - organizational business integration",
    ", ws composition is trying to solve the problems of business process integration , including modeling of business processes and their interactions , and uses wses as basic function units to model business activities . in a view of ws technologies ,",
    "ws composition creates new composite wses from the set of existing wses through some composition patterns .",
    "ws composition usually utilizes two kind of composition patterns@xcite , one is a workflow - like@xcite pattern called web service orchestration ( wso ) to model business processes , and the other is an aggregate pattern named web service choreoraphy ( wsc ) to model interactions among business processes .    in research on ws composition",
    ", there are three way of efforts .",
    "the first is the industry way which tries to establish uniform specifications of ws composition , such as the wso specification ws - bpel@xcite and the wsc specification ws - cdl@xcite .",
    "the second pursues automatic composition of wses@xcite@xcite , such as efforts of owl@xcite based on semantic web technology . and",
    "the last one is formal methods of ws composition which tries to give ws compostion a firm theoretical foundation based on different formal tools .    in this paper",
    ", we do a survey on formal methods for ws composition . based on analyses of requirements for ws composition",
    ", we establish the reference model called rm - wscomposition to capture the elements of ws composition and point out issues on formalization for ws composition .",
    "then we introduce state - of - the - art of formalization for ws composition .",
    "finally , we conclude the research works and point out the trend . throughout the paper",
    ", we use a example called buyingbooks to illustrate the concepts and mechanisms in the related works .",
    "now , we give an example of cross - organizational business process integration called buyingbooks as fig.[fig.buyingbooksexample ] shows .",
    "we use this buyingbooks example throughout this paper to illustrate concepts and mechanisms in ws composition and its formal methods .        in fig.[fig.buyingbooksexample ] , there are four organizations : buyeragent , bookstore , railwaycorp , and airlinecorp . and",
    "each organization has one business process .",
    "exactly , there are two business processes , the business processes in railwaycorp and airlinecorp are simplified as just wses for simpleness without loss of generality .",
    "we introduce the business process of bookstore as follows , and the process of buyeragent can be gotten in contrary .    1 .   the bookstore receives request of list of books from the buyer through buyeragent .",
    "2 .   it sends the list of books to the buyer via buyeragent .",
    "3 .   it receives the selected book list by the buyer via buyeragent .",
    "4 .   then it calculates the price of the selected books .",
    "it sends the price of the selected books to the buyer via buyeragent .",
    "then it gets pays for the books from the buyer via buyeragent .",
    "if the pays are greater than 100 $ , then the bookstore calls the shipment service of airlinecorp for the shipment of books . 8 .",
    "else , the bookstore calls the shipment service of railwaycorp for the shipment of book . then the process is ended .",
    "in this section , we deeply discuss some topics on ws composition . based on these discussions , we introduce a reference model of ws composition called rm - wscomposition .",
    "workflow@xcite@xcite is also a solution to cross - organizational business process integration .",
    "workflow in such situation is called cross - organizational workflow@xcite@xcite@xcite . but",
    "the implementations of activities in a cross - organizational workflow are not limited to wses .",
    "aalst uses petri net to model a workflow called wf - net@xcite and connects two wf - nets within different organizations into a newly global wf - net to model integration of two workflow .",
    "an obvious problem is that a partner workflow is located in the inner of an organization , that is , the details of an inner workflow are hidden to the external world , so a global view of entire connection with two detailed inner workflow usually can not be gotten .",
    "this leads to emergence of the so - called process view@xcite and integration of two inner process can be implemented based on process views@xcite .",
    "a process view is an observable version of an inner process from outside and serves as the interface of an inner process .",
    "research efforts on cross - organizational workflow give a great reference to ws composition , especially wso .",
    "wsos aimed at cross - organizational business process integrations and used a workflow - like pattern to orchestrate wses are surely some kinds cross - organizational workflows within which have activities implemented by wses outside .",
    "but , are mechanisms on cross - organizational workflow , such as process view , enough for those of ws composition ? we will answer this question in the background of ws technology in the following .      as discussed above",
    ", a wso usually is a cross - organizational workflow to orchestrate wses and also is encapsulated as a ws to receive messages from outside . in this section , we will discuss about wso and its interface .",
    "the main efforts on wso of the industry are trying to establish a uniform wso description language specification , such as the early wsfl@xcite , xlang@xcite , and lately converged ws - bpel@xcite .",
    "such wso description languages based on different mathematic models have constructs to model invocation of wses , manipulate information transferred between wses , control execution flows of these activities and inner transaction processing mechanisms .",
    "wso description language can be used to define various wsos under different requirements and acts as a so - called meta language .",
    "a wso description language , such as ws - bpel , has :    * basic constructs called atomic activities to model invocation to a ws outside , receiving messages from a ws outside and reply to that ws , and other inner basic functions ; * information and variables exchanged between wses ; * control flows called structural activities to orchestrate activities ; * other inner transaction processing mechanisms , such as exception definitions and throwing mechanisms , event definitions and response mechanisms .",
    "a wso described by such a meta language is enabled by the meta language interpreter called wso engine .",
    "a wso is hidden in the inner of an organization and only can interact with outside through its interface . since a wso",
    "is also encapsulated as a ws , its ws can act as the interface of the wso .",
    "the bookstore wso described by ws - bpel is given as follows .    -",
    "@xmath0process name=``bookstore ''",
    "targetnamespace=``http://example.wscs.com/2011/ws - bp / bookstore ''    xmlns=``http://docs.oasis - open.org / wsbpel/2.0/process / executable ''    xmlns : bns=``http://example.wscs.com/2011/wsdl / buyeragent.wsdl ''    xmlns : ans=``http://example.wscs.com/2011/wsdl / airlinecorp.wsdl ''    xmlns : rns=``http://example.wscs.com/2011/wsdl / railwaycorp.wsdl ''    xmlns : lns=``http://example.wscs.com/2011/wsdl / bookstore.wsdl''@xmath1    @xmath0documentation xml : lang=``en''@xmath1    this document describes the bookstore process .",
    "@xmath0/documentation@xmath1    @xmath0partnerlinks@xmath1    @xmath0partnerlink name=``bookstoreandbuyeragent ''    partnerlinktype=``lns : bookstoreandbuyeragentlt ''    myrole=``bookstore '' partnerrole=``buyeragent '' /@xmath1",
    "@xmath0partnerlink name=``bookstoreandrailwaycorp ''    partnerlinktype=``lns : bookstoreandrailwaycorplt ''    myrole=``bookstore '' partnerrole=``railwaycorp ''",
    "/@xmath1    @xmath0partnerlink name=``bookstoreandairlinecorp ''    partnerlinktype=``lns : bookstoreandairlinecorplt ''    myrole=``bookstore '' partnerrole=``airlinecorp ''",
    "/@xmath1    @xmath0/partnerlinks@xmath1    @xmath0variables@xmath1    @xmath0variable name=``requestlistofbooks '' messagetype=``lns : requestlistofbooks''/@xmath1    @xmath0variable name=``requestlistofbooksresponse '' messagetype=``lns : requestlistofbooksresponse''/@xmath1    @xmath0variable name=``listofbooks '' messagetype=``lns : listofbooks''/@xmath1    @xmath0variable name=``listofbooksresponse '' messagetype=``lns : listofbooksresponse''/@xmath1    @xmath0variable name=``selectlistofbooks '' messagetype=``lns : selectlistofbooks''/@xmath1    @xmath0variable name=``selectlistofbooksresponse '' messagetype=``lns : selectlistofbooksresponse''/@xmath1    @xmath0variable name=``price '' messagetype=``lns : price''/@xmath1    @xmath0variable name=``priceresponse '' messagetype=``lns : priceresponse''/@xmath1    @xmath0variable name=``pays '' messagetype=``lns : pays''/@xmath1    @xmath0variable name=``paysresponse '' messagetype=``lns : paysresponse''/@xmath1    @xmath0variable name=``shipmentbytrain '' messagetype=``lns : shipmentbytrain''/@xmath1    @xmath0variable name=``shipmentbytrainresponse '' messagetype=``lns : shipmentbytrainresponse''/@xmath1    @xmath0variable name=``shipmentbyair '' messagetype=``lns : shipmentbyair''/@xmath1    @xmath0variable name=``shipmentbyairresponse '' messagetype=``lns : shipmentbyairresponse''/@xmath1    @xmath0/variables@xmath1    @xmath0sequence@xmath1    @xmath0receive partnerlink=``bookstoreandbuyeragent ''    porttype=``lns : bookstore4buyeragentinterface ''    operation=``oprequestlistofbooks '' variable=``requestlistofbooks ''    createinstance=``yes''@xmath1    @xmath0/receive@xmath1    @xmath0invoke partnerlink=``bookstoreandbuyeragent ''    porttype=``bns : buyagent4bookstoreinterface ''    operation=``opreceivelistofbooks '' inputvariable=``listofbooks ''    outputvariable=``listofbooksresponse''@xmath1    @xmath0/invoke@xmath1    @xmath0receive partnerlink=``bookstoreandbuyeragent ''    porttype=``lns : bookstore4buyeragentinterface ''    operation=``opselectlistofbooks '' variable=``selectlistofbooks''@xmath1    @xmath0/receive@xmath1    @xmath0reply partnerlink=``bookstoreandbuyeragent ''    porttype=``lns : bookstore4buyeragentinterface ''    operation=``opselectlistofbooks '' variable=``selectlistofbooksresponse''@xmath1    @xmath0/reply@xmath1    @xmath0!inner activity : calculate the price of selected books@xmath1    @xmath0invoke partnerlink=``bookstoreandbuyeragent ''    porttype=``bns : buyagent4bookstoreinterface ''    operation=``opreceiveprice '' inputvariable=``price ''    outputvariable=``priceresponse''@xmath1    @xmath0receive partnerlink=``bookstoreandbuyeragent ''    porttype=``lns : bookstore4buyeragentinterface ''    operation=``oppays '' variable=``pays''@xmath1    @xmath0/receive@xmath1    @xmath0reply partnerlink=``bookstoreandbuyeragent ''    porttype=``lns : bookstore4buyeragentinterface ''    operation=``oppays '' variable=``paysresponse''@xmath1    @xmath0if@xmath1    @xmath0condition@xmath1 getvariable(price ) @xmath0 100 @xmath0/condition@xmath1    @xmath0invoke partnerlink=``bookstoreandairlinecorp ''    porttype=``ans : airlinecorp4bookstoreinterface ''    operation=``opshipmentbyair '' inputvariable=``shipmentbyair ''    outputvariable=``shipmentbyairresponse''@xmath1    @xmath0else@xmath1    @xmath0invoke partnerlink=``bookstoreandrailwaycorp ''    porttype=``rns : railwaycorp4bookstoreinterface ''    operation=``opshipmentbytrain '' inputvariable=``shipmentbytrain ''    outputvariable=``shipmentbytrainresponse''@xmath1    @xmath0/else@xmath1    @xmath0/if@xmath1    @xmath0/sequence@xmath1    @xmath0/process@xmath1    -      in the viewpoint of w3c , a ws itself is an interface or a wrapper of an application inside the boundary of an organization that has a willing to interact with applications outside .",
    "that is , a w3c ws has no an independent programming model like other component models and has no needs of containing local states for local computations .",
    "indeed , there are different sounds of developing ws to be a full sense component , such as ogsi@xcite .",
    "incompatibility between w3c ws and ogsi - like ws leads to wsrf@xcite as a compromised solution which reserves the w3c ws and develops a notion of ws resource to model states .",
    "since interactions among wses are eventually driven by their inner applications , at runtime , there is no any necessary to maintain states for a ws .",
    "that is , a ws just _",
    "deliver _ messages , including incoming messages and outgoing messages .",
    "the bookstore ws described by wsdl is following .    -",
    "@xmath0?xml version=``1.0 '' encoding=``utf-8''?@xmath1    @xmath0description    xmlns=``http://www.w3.org/2004/08/wsdl ''    xmlns : plnk=``http://docs.oasis - open.org / wsbpel/2.0/plnktype ''",
    "targetnamespace= `` http://example.wscs.com/2011/wsdl/bookstore.wsdl ''",
    "xmlns : tns= `` http://example.wscs.com/2011/wsdl/bookstore.wsdl ''    xmlns : ghns = `` http://example.wscs.com/2011/schemas/bookstore.xsd ''    xmlns : bans = `` http://example.wscs.com/2011/wsdl/buyeragent.wsdl ''    xmlns : rcns = `` http://example.wscs.com/2011/wsdl/railwaycorp.wsdl ''    xmlns : acns = `` http://example.wscs.com/2011/wsdl/airlinecorp.wsdl ''    xmlns : wsoap= `` http://www.w3.org/2004/08/wsdl/soap12 ''    xmlns : soap=``http://www.w3.org/2003/05/soap - envelope''@xmath1    @xmath0documentation@xmath1    this document describes the bookstore web service",
    ".    @xmath0/documentation@xmath1    @xmath0types@xmath1    @xmath0xs : schema    xmlns : xs=``http://www.w3.org/2001/xmlschema ''",
    "targetnamespace=``http://example.wscs.com/2011/schemas / bookstore.xsd ''    xmlns=``http://example.wscs.com/2011/schemas / bookstore.xsd''@xmath1    @xmath0xs : element name=``requestlistofbooks '' type=``trequestlistofbooks''/@xmath1    @xmath0xs : complextype name=``trequestlistofbooks''/@xmath1    @xmath0xs : element name=``requestlistofbooksreponse ''    type=``trequestlistofbooksresponse''/@xmath1    @xmath0xs : complextype name=``trequestlistofbooksresponse''/@xmath1    @xmath0xs : element name=``listofbooks '' type=``tlistofbooks''/@xmath1    @xmath0xs : complextype name=``tlistofbooks''/@xmath1    @xmath0xs : element name=``listofbooksresponse '' type=``tlistofbooksresponse''/@xmath1    @xmath0xs : complextype name=``tlistofbooksresponse''/@xmath1    @xmath0xs : element name=``selectlistofbooks '' type=``tselectlistofbooks''/@xmath1    @xmath0xs : complextype name=``tselectlistofbooks''/@xmath1    @xmath0xs : element name=``selectlistofbooksresponse ''    type=``tselectlistofbooksresponse''/@xmath1    @xmath0xs : complextype name=``tselectlistofbooksresponse''/@xmath1    @xmath0xs : element name=``price '' type=``xs : float''/@xmath1    @xmath0xs : element name=``priceresponse '' type=``tpriceresponse''/@xmath1    @xmath0xs : complextype name=``tpriceresponse''/@xmath1    @xmath0xs : element name=``pays '' type=``tpays''/@xmath1    @xmath0xs : complextype name=``tpays''/@xmath1    @xmath0xs : element name=``paysresponse '' type=``tpaysresponse''/@xmath1    @xmath0xs : complextype name=``tpaysresponse''/@xmath1    @xmath0xs : element name=``shipmentbytrain '' type=``tshipmentbytrain''/@xmath1    @xmath0xs : complextype name=``tshipmentbytrain''/@xmath1    @xmath0xs : element name=``shipmentbytrainresponse ''    type=``tshipmentbytrainresponse''/@xmath1    @xmath0xs : complextype name=``tshipmentbytrainresponse''/@xmath1    @xmath0xs : element name=``shipmentbyair '' type=``tshipmentbyair''/@xmath1    @xmath0xs : complextype name=``tshipmentbyair''/@xmath1    @xmath0xs : element name=``shipmentbyairresponse '' type=``tshipmentbyairresponse''/@xmath1    @xmath0xs : complextype name=``tshipmentbyairresponse''/@xmath1    @xmath0/xs : schema@xmath1    @xmath0/types@xmath1    @xmath0interface name = `` bookstore4buyeragentinterface''@xmath1    @xmath0operation name=``oprequestlistofbooks''@xmath1    @xmath0input messagelabel=``inoprequestlistofbooks ''    element=``ghns : requestlistofbooks '' /@xmath1",
    "@xmath0output messagelabel=``outoprequestlistofbooks ''    element=``ghns : requestlistofbooksreponse '' /@xmath1",
    "@xmath0/operation@xmath1    @xmath0operation name=``opselectlistofbooks''@xmath1    @xmath0input messagelabel=``inopselectlistofbooks ''    element=``ghns : selectlistofbooks '' /@xmath1",
    "@xmath0output messagelabel=``outopselectlistofbooks ''    element=``ghns : selectlistofbooksresponse '' /@xmath1",
    "@xmath0/operation@xmath1    @xmath0operation name=``oppays''@xmath1",
    "@xmath0input messagelabel=``inoppays ''    element=``ghns : pays '' /@xmath1",
    "@xmath0output messagelabel=``outoppays ''    element=``ghns : paysresponse '' /@xmath1    @xmath0/operation@xmath1    @xmath0/interface@xmath1    @xmath0plnk : partnerlinktype name=``bookstoreandbuyeragentlt''@xmath1    @xmath0plnk : role name=``bookstore ''    porttype=``tns : bookstore4buyeragentinterface '' /@xmath1",
    "@xmath0plnk : role name=``buyeragent ''    porttype=``bans : buyeragent4bookstoreinterface '' /@xmath1",
    "@xmath0/plnk : partnerlinktype@xmath1    @xmath0plnk : partnerlinktype name=``bookstoreandraiwaycorplt''@xmath1    @xmath0plnk : role name=``railwaycorp ''    porttype=``rcns : railwaycorp4bookstoreinterface '' /@xmath1",
    "@xmath0/plnk : partnerlinktype@xmath1    @xmath0plnk : partnerlinktype name=``bookstoreandairlinecorplt''@xmath1    @xmath0plnk : role name=``airlinecorp ''    porttype=``acns : airlinecorp4bookstoreinterface '' /@xmath1",
    "@xmath0/plnk : partnerlinktype@xmath1    @xmath0/description@xmath1    -      as a runtime mechanism , wsrf - style ws can serve as an interface of a wso enough .",
    "but , a wso , even a ws resource , is surely different to a stateless function for share .",
    "that is , from a view of an observer outside , the interfaces of a wso surely are stateful and must be invoked under the constraints of the wso .",
    "note that , different observers may have different views to the same wso .",
    "buyeragent , railwaycorp and airlinecorp have different views to the same bookstore wso as fig.[fig.views ] shows .",
    "note that there is no an inner `` calculate the price '' activity in the observation of buyeragent .",
    "such observable views of a wso are called abstract processes in ws - bpel@xcite and are called wsc interfaces in wsci@xcite .",
    "but these specifications do not explain their functions and even the relations to the original wso .",
    "though a wsrf - style ws can act as the interfaces of a wso at runtime , but it has few uses at design time . since observable views have more information about the inner wso , they can be used to do more things at design time , such as generation of a wsc and generation of stub codes being more expressive than those of wsdl .",
    "that is , observable views of a wso are more expressive interface descriptions than wsdl",
    ". the information of observable views can be available by extending wsdl to be annotations of wsdl interfaces .",
    "the bookstore4buyeragent observable view described by abstract process of ws - bpel is as follows .    -",
    "@xmath0process name=``bookstoreabstract4buyeragent ''",
    "targetnamespace=``http://example.wscs.com/2011/ws - bp / bookstore ''",
    "xmlns=``http://docs.oasis - open.org / wsbpel/2.0/process / abstract ''",
    "abstractprocessprofile=``http://docs.oasis - open.org / wsbpel/2.0/process / abstract / ap11/2006/08 ''    xmlns : bns=``http://example.wscs.com/2011/wsdl / buyeragent.wsdl ''    xmlns : lns=``http://example.wscs.com/2011/wsdl",
    "/ bookstore.wsdl''@xmath1    @xmath0documentation xml : lang=``en''@xmath1    this document describes the bookstore abstract process for buyeragent .",
    "@xmath0/documentation@xmath1    @xmath0partnerlinks@xmath1    @xmath0partnerlink name=``bookstoreandbuyeragent ''    partnerlinktype=``lns : bookstoreandbuyeragentlt ''    myrole=``bookstore '' partnerrole=``buyeragent '' /@xmath1",
    "@xmath0/partnerlinks@xmath1    @xmath0variables@xmath1    @xmath0variable name=``requestlistofbooks '' messagetype=``lns : requestlistofbooks''/@xmath1    @xmath0variable name=``requestlistofbooksresponse '' messagetype=``lns : requestlistofbooksresponse''/@xmath1    @xmath0variable name=``listofbooks '' messagetype=``lns : listofbooks''/@xmath1",
    "@xmath0variable name=``listofbooksresponse '' messagetype=``lns : listofbooksresponse''/@xmath1    @xmath0variable name=``selectlistofbooks '' messagetype=``lns : selectlistofbooks''/@xmath1    @xmath0variable name=``selectlistofbooksresponse '' messagetype=``lns : selectlistofbooksresponse''/@xmath1    @xmath0variable name=``price '' messagetype=``lns : price''/@xmath1    @xmath0variable name=``priceresponse '' messagetype=``lns : priceresponse''/@xmath1    @xmath0variable name=``pays '' messagetype=``lns : pays''/@xmath1    @xmath0variable name=``paysresponse '' messagetype=``lns : paysresponse''/@xmath1    @xmath0/variables@xmath1    @xmath0sequence@xmath1    @xmath0receive partnerlink=``bookstoreandbuyeragent ''    porttype=``lns : bookstore4buyeragentinterface ''    operation=``oprequestlistofbooks '' variable=``requestlistofbooks ''    createinstance=``yes''@xmath1    @xmath0/receive@xmath1    @xmath0invoke partnerlink=``bookstoreandbuyeragent ''    porttype=``bns : buyagent4bookstoreinterface ''    operation=``opreceivelistofbooks '' inputvariable=``listofbooks ''    outputvariable=``listofbooksresponse''@xmath1    @xmath0/invoke@xmath1    @xmath0receive partnerlink=``bookstoreandbuyeragent ''    porttype=``lns : bookstore4buyeragentinterface ''    operation=``opselectlistofbooks '' variable=``selectlistofbooks''@xmath1    @xmath0/receive@xmath1    @xmath0reply partnerlink=``bookstoreandbuyeragent ''    porttype=``lns : bookstore4buyeragentinterface ''    operation=``opselectlistofbooks '' variable=``selectlistofbooksresponse''@xmath1    @xmath0/reply@xmath1    @xmath0!inner activity : calculate the price of selected books@xmath1    @xmath0invoke partnerlink=``bookstoreandbuyeragent ''    porttype=``bns : buyagent4bookstoreinterface ''    operation=``opreceiveprice '' inputvariable=``price ''    outputvariable=``priceresponse''@xmath1    @xmath0receive partnerlink=``bookstoreandbuyeragent ''    porttype=``lns : bookstore4buyeragentinterface ''    operation=``oppays '' variable=``pays''@xmath1    @xmath0/receive@xmath1    @xmath0reply partnerlink=``bookstoreandbuyeragent ''    porttype=``lns : bookstore4buyeragentinterface ''    operation=``oppays '' variable=``paysresponse''@xmath1    @xmath0/sequence@xmath1    @xmath0/process@xmath1    -    and the bookstore4railwaycorp observable view described by abstract process of ws - bpel is as follows .    -",
    "@xmath0process name=``bookstoreabstract4railwaycorp ''",
    "targetnamespace=``http://example.wscs.com/2011/ws - bp / bookstore ''",
    "abstractprocessprofile=``http://docs.oasis - open.org / wsbpel/2.0/process / abstract / ap11/2006/08 ''    xmlns=``http://docs.oasis - open.org / wsbpel/2.0/process / abstract ''    xmlns : rns=``http://example.wscs.com/2011/wsdl / railwaycorp.wsdl ''    xmlns : lns=``http://example.wscs.com/2011/wsdl",
    "/ bookstore.wsdl''@xmath1    @xmath0documentation xml : lang=``en''@xmath1    this document describes the bookstore abstract process for railwaycorp .",
    "@xmath0/documentation@xmath1    @xmath0partnerlinks@xmath1    @xmath0partnerlink name=``bookstoreandrailwaycorp ''    partnerlinktype=``lns : bookstoreandrailwaycorplt ''    myrole=``bookstore '' partnerrole=``railwaycorp '' /@xmath1",
    "@xmath0/partnerlinks@xmath1    @xmath0variables@xmath1    @xmath0variable name=``shipmentbytrain '' messagetype=``lns : shipmentbytrain''/@xmath1    @xmath0variable name=``shipmentbytrainresponse '' messagetype=``lns : shipmentbytrainresponse''/@xmath1    @xmath0/variables@xmath1    @xmath0invoke partnerlink=``bookstoreandrailwaycorp ''    porttype=``rns : railwaycorp4bookstoreinterface ''    operation=``opshipmentbytrain '' inputvariable=``shipmentbytrain ''    outputvariable=``shipmentbytrainresponse''@xmath1    @xmath0/process@xmath1    -    at last , the bookstore4airlinecorp observable view described by abstract process of ws - bpel is following .    -",
    "@xmath0process name=``bookstoreabstract4airlinecorp ''",
    "targetnamespace=``http://example.wscs.com/2011/ws - bp / bookstore ''    abstractprocessprofile=``http://docs.oasis - open.org / wsbpel/2.0/process / abstract / ap11/2006/08 ''    xmlns=``http://docs.oasis - open.org / wsbpel/2.0/process / abstract ''    xmlns : rns=``http://example.wscs.com/2011/wsdl / airlinecorp.wsdl ''    xmlns : lns=``http://example.wscs.com/2011/wsdl / bookstore.wsdl''@xmath1    @xmath0documentation xml : lang=``en''@xmath1    this document describes the bookstore abstract process for airlinecorp",
    ".    @xmath0/documentation@xmath1    @xmath0partnerlinks@xmath1    @xmath0partnerlink name=``bookstoreandairlinecorp ''    partnerlinktype=``lns : bookstoreandairlinecorplt ''    myrole=``bookstore '' partnerrole=``airlinecorp '' /@xmath1",
    "@xmath0/partnerlinks@xmath1    @xmath0variables@xmath1    @xmath0variable name=``shipmentbyair '' messagetype=``lns : shipmentbyair''/@xmath1    @xmath0variable name=``shipmentbyairresponse '' messagetype=``lns : shipmentbyairresponse''/@xmath1    @xmath0/variables@xmath1    @xmath0invoke partnerlink=``bookstoreandairlinecorp ''    porttype=``ans : airlinecorp4bookstoreinterface ''    operation=``opshipmentbyair '' inputvariable=``shipmentbyair ''",
    "outputvariable=``shipmentbyairresponse''@xmath1    @xmath0/process@xmath1    -",
    "a wsc acts as a contract or a protocol among interacting wses . in a viewpoint of business integration requirements ,",
    "a wsc serves as a business contract to constrain the rights and obligations of business partners . and from a view of ws technology",
    ", we can treat a wsc as a communication protocol which coordinates the interaction behaviors of involved wses .",
    "the main elements of a wsc defined by a wsc description language , such as ws - cdl@xcite , are following :    * partners within a wsc including the role of a partner acting as and relationships among partners ; * local states exchanged among the interacting wses ; * interaction points and interaction behaviors defined as the core contents in a wsc ; * sequence definitions of interaction behaviors ; * other inner transaction processing mechanisms , such as exception definitions and throwing mechanisms , event definitions and response mechanisms .",
    "the buyeragentandbookstore wsc described by ws - cdl is as follows .    -",
    "version=``1.0 '' encoding=``utf-8''?@xmath1    @xmath0package xmlns=``http://www.w3.org/2005/10/cdl ''    xmlns : cdl=``http://www.w3.org/2005/10/cdl ''    xmlns : xsi=``http://www.w3.org/2001/xmlschema - instance ''    xmlns : xsd=``http://www.w3.org/2001/xmlschema ''    xmlns : bans=``http://example.wscs.com/2011/wsdl / buyeragent.wsdl ''    xmlns : bsns=``http://example.wscs.com/2011/wsdl / bookstore.wsdl ''    xmlns : tns=``http://example.wscs.com/2011/cdl / buyeragentandbookstorewsc ''    targetnamespace=``http://example.wscs.com/2011/cdl / buyeragentandbookstorewsc ''    name=``buyeragentandbookstorewsc ''    version=``1.0''@xmath1    @xmath0informationtype name=``requestlistofbookstype '' type=``bsns : trequestlistofbooks''/@xmath1    @xmath0informationtype name=``requestlistofbooksresponsetype ''    type=``bsns : trequestlistofbooksresponse''/@xmath1    @xmath0informationtype name=``listofbookstype '' type=``bsns : tlistofbooks''/@xmath1    @xmath0informationtype name=``listofbooksresponsetype ''    type=``bsns : tlistofbooksresponse''/@xmath1    @xmath0informationtype name=``selectlistofbookstype ''    type=``bsns : tselectlistofbooks''/@xmath1    @xmath0informationtype name=``selectlistofbooksresponsetype ''    type=``bsns : tselectlistofbooksresponse''/@xmath1    @xmath0informationtype name=``pricetype '' type=``bsns : tprice''/@xmath1    @xmath0informationtype name=``priceresponsetype '' type=``bsns : tpriceresponse''/@xmath1    @xmath0informationtype name=``paystype '' type=``bsns : tpays''/@xmath1    @xmath0informationtype name=``paysresponsetype '' type=``bsns : tpaysresponse''/@xmath1    @xmath0roletype name=``buyeragent''@xmath1    @xmath0behavior name=``buyeragent4bookstore '' interface=``bans : buyagent4bookstoreinterface''/@xmath1    @xmath0/roletype@xmath1    @xmath0roletype name=``bookstore''@xmath1    @xmath0behavior name=``bookstore4buyeragent '' interface=``rns : bookstore4buyeragentinterface''/@xmath1    @xmath0/roletype@xmath1    @xmath0relationshiptype name=``buyeragentandbookstorerelationship''@xmath1    @xmath0roletype typeref=``tns : buyeragent '' behavior=``buyeragent4bookstore''/@xmath1    @xmath0roletype typeref=``tns : bookstore '' behavior=``bookstore4buyeragent''/@xmath1    @xmath0/relationshiptype@xmath1    @xmath0choreography name=``buyeragentandbookstorewsc''@xmath1    @xmath0relationship type=``tns : buyeragentandbookstorerelationship''/@xmath1    @xmath0variabledefinitions@xmath1    @xmath0variable name=``requestlistofbooks '' informationtype=``tns : requestlistofbookstype''/@xmath1    @xmath0variable name=``requestlistofbooksresponse ''    informationtype=``tns : requestlistofbooksresponsetype''/@xmath1    @xmath0variable name=``listofbooks '' informationtype=``tns : listofbookstype''/@xmath1    @xmath0variable name=``listofbooksresponse '' informationtype=``tns : listofbooksresponsetype''/@xmath1    @xmath0variable name=``selectlistofbooks '' informationtype=``tns : selectlistofbookstype''/@xmath1    @xmath0variable name=``selectlistofbooksresponse ''    informationtype=``tns : selectlistofbooksresponsetype''/@xmath1    @xmath0variable name=``price '' informationtype=``tns : pricetype''/@xmath1    @xmath0variable name=``priceresponse '' informationtype=``tns : priceresponsetype''/@xmath1    @xmath0variable name=``pays '' informationtype=``tns : paystype''/@xmath1    @xmath0variable name=``paysresponse '' informationtype=``tns : paysresponsetype''/@xmath1    @xmath0/variabledefinitions@xmath1    @xmath0sequence@xmath1    @xmath0interaction name=``interactionbetweenbaandbs1''@xmath1    @xmath0participate relationshiptype=``tns : buyeragentandbookstorerelationship ''    fromroletyperef=``tns : buyeragent '' toroletyperef=``tns : bookstore''/@xmath1    @xmath0exchange name=``requestlistofbooks ''    informationtype=``tns : requestlistofbookstype '' action=``request''@xmath1    @xmath0send variable=``cdl : getvariable(tns : requestlistofbooks,,)''/@xmath1    @xmath0receive variable=``cdl : getvariable(tns : requestlistofbooks,,)''/@xmath1    @xmath0/exchange@xmath1    @xmath0exchange name=``requestlistofbooksresponse ''    informationtype=``requestlistofbooksresponsetype '' action=``respond''@xmath1    @xmath0send variable=``cdl : getvariable(tns : requestlistofbooksresponse,,)''/@xmath1    @xmath0receive variable=``cdl : getvariable(tns : requestlistofbooksresponse,,)''/@xmath1    @xmath0/exchange@xmath1    @xmath0/interaction@xmath1    @xmath0interaction name=``interactionbetweenbaandbs2''@xmath1    @xmath0participate relationshiptype=``tns : buyeragentandbookstorerelationship ''    fromroletyperef=``tns : bookstore '' toroletyperef=``tns : buyeragent''/@xmath1    @xmath0exchange name=``sendlistofbooks ''    informationtype=``tns : listofbookstype '' action=``request''@xmath1    @xmath0send variable=``cdl : getvariable(tns : listofbooks,,)''/@xmath1    @xmath0receive variable=``cdl : getvariable(tns : listofbooks,,)''/@xmath1    @xmath0/exchange@xmath1    @xmath0exchange name=``sendlistofbooksresponse ''    informationtype=``listofbooksresponsetype '' action=``respond''@xmath1    @xmath0send variable=``cdl : getvariable(tns : listofbooksresponse,,)''/@xmath1    @xmath0receive variable=``cdl : getvariable(tns : listofbooksresponse,,)''/@xmath1    @xmath0/exchange@xmath1    @xmath0/interaction@xmath1    @xmath0interaction name=``interactionbetweenbaandbs3''@xmath1    @xmath0participate relationshiptype=``tns : buyeragentandbookstorerelationship ''    fromroletyperef=``tns : buyeragent '' toroletyperef=``tns : bookstore''/@xmath1    @xmath0exchange name=``selectlistofbooks ''    informationtype=``tns : selectlistofbookstype '' action=``request''@xmath1    @xmath0send variable=``cdl : getvariable(tns : selectlistofbooks,,)''/@xmath1    @xmath0receive variable=``cdl : getvariable(tns : selectlistofbooks,,)''/@xmath1    @xmath0/exchange@xmath1    @xmath0exchange name=``selectlistofbooksresponse ''    informationtype=``selectlistofbooksresponsetype '' action=``respond''@xmath1    @xmath0send variable=``cdl : getvariable(tns : selectlistofbooksresponse,,)''/@xmath1    @xmath0receive variable=``cdl : getvariable(tns : selectlistofbooksresponse,,)''/@xmath1    @xmath0/exchange@xmath1    @xmath0/interaction@xmath1    @xmath0interaction name=``interactionbetweenbaandbs4''@xmath1    @xmath0participate relationshiptype=``tns : buyeragentandbookstorerelationship ''    fromroletyperef=``tns : bookstore '' toroletyperef=``tns : buyeragent''/@xmath1    @xmath0exchange name=``sendprice ''    informationtype=``tns : pricetype '' action=``request''@xmath1    @xmath0send variable=``cdl : getvariable(tns : price,,)''/@xmath1    @xmath0receive variable=``cdl : getvariable(tns : price,,)''/@xmath1    @xmath0/exchange@xmath1    @xmath0exchange name=``sendpriceresponse ''    informationtype=``priceresponsetype '' action=``respond''@xmath1    @xmath0send variable=``cdl : getvariable(tns : priceresponse,,)''/@xmath1    @xmath0receive variable=``cdl : getvariable(tns : priceresponse,,)''/@xmath1    @xmath0/exchange@xmath1    @xmath0/interaction@xmath1    @xmath0interaction name=``interactionbetweenbaandbs5''@xmath1    @xmath0participate relationshiptype=``tns : buyeragentandbookstorerelationship ''    fromroletyperef=``tns : buyeragent '' toroletyperef=``tns : bookstore''/@xmath1    @xmath0exchange name=``pays ''    informationtype=``tns : paystype '' action=``request''@xmath1    @xmath0send variable=``cdl : getvariable(tns : pays,,)''/@xmath1    @xmath0receive variable=``cdl : getvariable(tns : pays,,)''/@xmath1    @xmath0/exchange@xmath1    @xmath0exchange name=``paysresponse ''    informationtype=``paysresponsetype '' action=``respond''@xmath1    @xmath0send variable=``cdl : getvariable(tns : paysresponse,,)''/@xmath1    @xmath0receive variable=``cdl : getvariable(tns : paysresponse,,)''/@xmath1    @xmath0/exchange@xmath1    @xmath0/interaction@xmath1    @xmath0/sequence@xmath1    @xmath0/choreography@xmath1    @xmath0/package@xmath1    -    at runtime , a wsc can be enabled in a centralized way or in a distributed way.the centralized way considers that the enablement of a wsc must be under supervision of an thirdly authorized party or all involved partners .",
    "this way maybe cause the supervisor becoming a performance bottleneck when bulk of interactions occur , but it can bring trustworthiness of interaction results if the supervisor is trustworthy itself . the distributed way argues that each ws interacts among others with constraints of a wsc and there is no need of a supervisor .",
    "but there do be cheating business behaviors of an intendedly _ incorrect _ ws , that are unlike almost purely technical motivations of open internet protocols .    at design time , the technical parts of a wsc can be generated automatically by use of the interface information of the partner wses , such as wsdl descriptions and observable views of the wsos . and",
    "more technical property descriptions can be included into a wsc , such as qos agreements , security requirements , etc . also as a business contract ,",
    "the non - technical parts can be accomplished with human interferences , such as legal dispute processings .",
    "a wso orchestrates cross - organizational business activities implemented as wses and can be accessed through its interfaces .",
    "and a wsc captures external interaction behaviors among its partner wses through their interfaces .",
    "so the relationship between wso and wsc are as fig.[fig.wsoandwsc ] illustrates .",
    "note that , a wsc need not be independent on wsos .      based on above discussions on wso , interfaces of wsos , wsc , and relationship between wso and wsc , we get a reference model of ws composition as fig.[fig.rmcomposition ] illustrates .        at design time , according to some design methods , such as a bottom - up method or a top - down method , the elements of rmcomposition including definitions of wsos , interfaces of wsos and a wsc are generated .",
    "then these definitions are deployed as fig.[fig.rmcomposition ] shows .",
    "that is , wsos are deployed in the interior of an organization , interfaces of wsos are deployed in the dmz of an organization , and a wsc may be enabled in a centralized way or a distributed way .",
    "after the deployments , definitions of wsos can be executed many times and each execution is called an wso instance .",
    "the interfaces of wsos are always in ready for an incoming call . and",
    "mostly , a wsc is only running one time .",
    "that is , interactions among different wso instances usually require under constraints of different wscs , though a wsc may be reused for several times .",
    "the buyingbooks example in section [ buyingbooksexample ] under rm - wscomposition illustrated in fig.[fig.rmcomposition ] includes two wsos ( buyeragent and bookstore ) , four observable views ( buyeragent4bookstore , bookstore4buyeragent , bookstore4railwaycorp and bookstore4airlinecorp),four wses ( buyeragent , bookstore , railwaycorp and airlinecorp ) and three wscs(buyeragentandbookstore , bookstoreandrailwaycorp and bookstoreandairlinecorp ) .",
    "we define four wses with wsdl , two wses with ws - bpel , four observable views with abstract process of ws - bpel and three wscs with ws - cdl .",
    "based on rm - wscomposition , we discuss issues on formalization for ws composition in this section .      formalization for wso includes formalization for wso , its interface , and the relationship between wso and its interface .",
    "the first issue on formalization for wso is formalizing control flows in a wso .",
    "the control flows may be expressed in graphic model or structural model .",
    "formalization for control flows may be based on different formal tools . by establishing the maps between control flows in a wso and",
    "constructs in one formal model , control flows can be translated into expressions in the formal model .",
    "then the properties , such as liveness and safety , can be verified",
    ".    then , the following issues are formalization for technical mechanisms adopted in a wso , such as compensation mechanism to support the so - called long running business transaction ( lrbt ) , event processing mechanism , and exception throwing and processing mechanism , etc .",
    "the observable view of a wso also includes control flows and inner transaction process mechanisms , so formalization for an observable view has the same issues as that of a wso . since the interface of a wso includes the observable view of the wso which is more expressive than the wsdl - expressed ws .",
    "that is , formalization for control flows and inner technical mechanisms may also be faced with .",
    "a wso interacts with outside via its interface , but , can the interface act in behalf of the inner wso ?",
    "that is , there must be a correct relationship between a wso and its interface .    since observable view of a wso is an observable version of the inner wso , formalization for relationship between a wso and its interface",
    "can be based on some kind of equivalences , such as trace equivalence , bisimulation equivalence , and so on . under such concepts of equivalence , a correct relationship between a wso and its interface can be established .",
    "that is , an interface is _ same _ as its inner wso modulo such equivalence .",
    "automatic generation of an interface from a inner wso and also refinement of a inner wso with an interface are also contents of a formal model .      since wsc description language , such as ws - cdl , has not formal verification support .",
    "formalization for wsc is to give wsc a formal semantics .",
    "such an approach is also to establish maps between entities of a wsc description language and those of a formal tools to provide formal semantics support .",
    "deos a ws can interact with another one ? and also , does a wso can interact with another one via their interfaces ? does the definition of a wsc compatible with its partner wses or partner wsos ? to solve these problems , a correct relationship between wso and wsc must be established .",
    "the issues may include the compatibility verification of the interacting wses or wsos , the conformance verification of a wsc and its partner wses or wsos , automatic generation with correct assurance of a wsc from existing interface definitions of wses or wsos , refinement with correct assurance of interface definitions of wses or wsos from an existing wsc .",
    "in this section , we will introduce the research works on formalization for wso with a deep inspection about issues discussed in above section . since petri net and process algebra are the two most influentially formal tools in formalizing ws composition , we mainly introduce the works using these tools .",
    "petri net has good traditions in formalizing wso and can be casted back to aalst s wf - net@xcite .",
    "@xcite tries to give bpel a formal semantics based on petri net .",
    "the works cover the standard behavior of bpel , including atomic activities , control flows in term of structural activities , exception processing , event processing and lrbt mechanism .",
    "transforming every thing specified in bpel into a construct of petri net is really a heavy work .",
    "the transformations of atomic activities include empty activity , receive activity , wait activity , assign activity , reply activity , invoke activity , throw activity , and terminate activity .",
    "for an example , the transformation of empty activity is introduced as fig.[fig.emptyactivity2pnet ] shows .",
    "the transformations of control flows include sequence activity , flow activity , while activity , switch activity , and pick activity . and the transformations of inner transaction processing include fault handler , event handler and compensation handler .    thus a wso described by bpel can be transformed into a petri net entirely .",
    "theories , such as wf - net , and tools , such as wofbpel@xcite based on petri net can be applied for verification of liveness , safety and so on .",
    "@xcite also transforms a wso described by ws - bpel into a so - called service workflow net ( swn ) which is a kind of colored petri net .",
    "and then it analyzes the compatibility of two services .",
    "process algebra is also an influential tool in formalizing ws composition .",
    "@xcite uses a process algebra ccs to model dynamic behaviors of a ws - bpel business process .",
    "each message is represented by a ccs channel and atomic activities in bpel are corresponding to input and output actions on these channels .",
    "the flow activity is represented by parallel composition of ccs and the sequence activity is also transformed using parallel composition .",
    "the switch activity and pick activity are modeled using choice operator in ccs . and",
    "fault handler is also transformed into a process in ccs .",
    "thus , a wso described by ws - bpel are transformed into a process in ccs .",
    "for example , the buyeragent wso in fig.[fig.buyingbooksexample ] having the form :    @xmath2    is translated into a process in ccs :    @xmath3\\!](sq_0,sq_5)\\|sq_0!().0 $ ] ,    where @xmath4\\!](sq_0,sq_5)&=&[\\![reqlb]\\!](sq_0,sq_1)\\nonumber\\\\ & \\|&[\\![reclb]\\!](sq_1,sq_2)\\nonumber\\\\ & \\|&[\\![ssb]\\!](sq_2,sq_3)\\nonumber\\\\ & \\|&[\\![rpb]\\!](sq_3,sq_4)\\nonumber\\\\ & \\|&[\\![pb]\\!](sq_4,sq_5)\\nonumber\\end{aligned}\\ ] ]    and @xmath5\\!](begin , end)=begin?().[\\![p]\\!](end)$ ] .    then by putting two processes of ccs which represent two ws - bpel wsos in parallel , compatibility of the two processes can be checked using theory of ccs .",
    "a variant form of process algebra called pi - calculus is also used as the similar solution to formalizing wso@xcite .      indeed , there are almost numerous research works on formalization for wso and even workflow . to enumerate all the related works",
    "is unreachable .",
    "we give the representable works using different formal tools as follows .",
    "these works adopt the similar solution to giving wso a formal foundation .",
    "@xcite analyzes bpel using a framework composed of workflow patterns and communication patterns and makes a comparison of bpel , wsfl , xlang , etc . @xcite",
    "formally defines an abstract executable semantics for bpel based on an abstract state machine ( asm ) .",
    "@xcite transforms all primitive and structured activities of the bpel into a composable timed automata ( ta ) for verification .",
    "@xcite transforms all control flow patterns into lotos for validation .",
    "@xcite translates a wso described by bpel into an extended finite - state automaton ( efa ) and uses the spin model checker for the representation of the efa model for verification .",
    "@xcite defines a calculus called calculus for orchestration of web services ( cows ) to verify a wso .",
    "about the inner transaction processing mechanisms for wso , there are some works on formalization for compensations .",
    "@xcite proposes a process compensation language called stac and an operational semantics for stac is introduced in @xcite . in @xcite , a trace semantics for lrbt",
    "is proposed .",
    "about formalization for an interface of a wso , especially an observable view , there are only a few works . @xcite and @xcite defines a process view for an cross - organizational workflow and discuss the usages of such a process view .",
    "but the model is almost a conceptual one and efforts still need to be done to comfort a ws composition background .",
    "@xcite points out that the abstract process in ws - bpel does not prevent complex computations and is unnecessarily complex .",
    "they propose some restrictions on data manipulation constructs in an abstract process and also introduce a logic framework to verify such a restricted abstract process .      through above introductions on formalization for wso",
    ", we can see that there are many works on formalization wso itself based on different formal tools and adopted similar ideas .",
    "only a few works formalize the observable view of a wso and almost no works give the observable view and a wso a formal and natural relationship , such as automatic generation of a observable view from a inner wso and refinement of a wso from an existing observable view . in table.[table.wsoworks ] , we conclude the related works on formalization of wso",
    ".    .works on formalization for wso .",
    "[ cols=\"<,<\",options=\"header \" , ]",
    "in this section , we will introduce works on formalization for wsc . also , we mainly introduce works based on petri net and process algebra .",
    "@xcite proposes a petri net approach for the design and analysis of wsc using ws - cdl@xcite as the language for describing wsc and petri net as a formalism to simulate and validate wsc . to capture timed and prioritized interactions ,",
    "the petri net used is a kind of prioritized version of time petri net ( ptpn ) .",
    "the methodology proposed in @xcite is called collaborative web service petri nets ( cws - pns ) and consists of three phased : analysis , design and model validation .",
    "kaos goal model is used in analysis phase to allow analysts to gather the requirements of wscs in a hierarchical order , including time requirements , such as time - outs and other time constraints .",
    "after requirements are determined in analysis phase , then in design phase , a ws - cdl document is produced , that is , a wsc is generated .",
    "finally , this ws - cdl document is transformed into a ptpn for verification and validation in model validation phase .    a ptpn semantics for ws - cdl",
    "is based on transformations of constructs of ws - cdl into those of a ptpn .",
    "such transformations include basic activities , such as interaction activity , assign activity , silent activity and noaction activity , workunits , ordering structures , such as sequence , parallel , and choice , exception blocks , finalizer blocks , and choreography composition .",
    "@xcite also gives wsci@xcite a formal semantics based on petri net .",
    "@xcite presents the semantics of ws - cdl in terms of process algebra csp .",
    "therefore , all the properties of a wsc to be checked can be verified with a csp framework .    a csp semantics for ws - cdl",
    "is also based on transformations of constructs of ws - cdl into those of csp .",
    "the transformations include basic activities , such as empty activity , silent activity , assign activity , interaction activity and throw activity , structural activities , such as sequence activity , parallel activity , repetition activity , and choice activity , exception handling and compensation processing .",
    "for example , the one - way interaction activity is presented by the following csp process :    @xmath6    where a message @xmath7 from @xmath8 to @xmath9 is transmitted through channel @xmath10 and @xmath7 is either the input message or the output message of operation @xmath11 .    and",
    "the request - response interaction activity is represented by the following csp process :    @xmath12 .",
    "the buyeragentandbookstore wsc in fig.[fig.buyingbooksexample ] is represented by the following csp process",
    "@xmath13 :    @xmath14    @xcite formalizes wsci based on process algebra ccs and can check whether two or more wses are compatible .",
    "there are also many works to give wsc a formal semantics .",
    "@xcite presents a formal model of ws - cdl based on a spatio - temporal logic which can be used to reason on properties interested .",
    "@xcite proposes a denotational semantics model for wsci .",
    "@xcite develops a relational calculus to simulate and validate a wsc described by ws - cdl .",
    "@xcite relates theory of contracts and wsc with a notion of choreography conformance .",
    "wso and wsc are two kinds composition patterns in ws composition and have natural relationship under the requirements of cross - organizational business integrations .",
    "a formal framework covered wso and wsc within which have a natural relationship between wso and wsc is attractive and pursued . in this section",
    ", we will introduce works on formalization for unifying wso and wsc .",
    "@xcite and @xcite use process algebra csp as a formal basis for verifying the behavioral consistency among abstract and executable processes together with choreographic descriptions",
    ".    as fig.[fig.wsoandwsccsp ] shows , @xcite and @xcite translate both constructs of ws - bpel and constructs of ws - cdl into csp processes .",
    "then fdr2@xcite is used to check behavioral consistency of ws - bpel executable process , ws - bpel abstract process and ws - cdl choreography .",
    "@xcite@xcite transforms a wso described by ws - bpel and a wsc defined by ws - cdl both into two process algebra , and uses the form of bisimulation relation to define a notion of conformance between the wso and the wsc .",
    "actors@xcite@xcite are basic concurrent computation models for distributed computing .",
    "@xcite uses actors as distributed objects@xcite to unify wso and wsc .",
    "a language called actor - based web service composition language ( ab - wscl ) is designed for supporting rm - wscomposition illustrated in fig.[fig.rmcomposition ] .",
    "more importantly , the semantics based on concurrent rewriting theory for actors is established . a notion called composibility",
    "is established between wso and ws , ws and ws , wso and wso through interaction semantics analyses to give finely formal relations among these system components .",
    "@xcite can be a system with formal semantics support , which not only can be used for verifications and simulations at design time , including verifying properties of wso and wsc itself , and that of the relationship between wso and wsc , but also can serve as a ws composition runtime system with correctness assurance .",
    "the useragent wso in section [ buyingbooksexample ] programmed by ab - wscl is following .    ",
    "wso useragentwso\\ {    aa requestlbaa    aa receivelbaa    aa sendsbaa    aa receivepbaa    aa paybaa    ws ws - ref    list books    list selectedbooks    float prices    init(ws ws)\\ {    ws - ref : = ws    requestlbaa : = new requestlbaa(self )    receivelbaa : = new receivelbaa(self )    sendsbaa : = new sendsbaa(self )    receivepbaa : = new receivepbaa(self )    paybaa : = new paybaa(self )    other - local - computations    }    requestlb ( )",
    "if true\\ {    other - local - computations    ws - ref @xmath15 requestlb ( )    }    receivelb(list bs ) if true\\ {    books : = bs    other - local - computations    receivelbaa @xmath15 receivelb(books )    }    sendsb(sb ) if true\\ {    selectedbooks : = sb    other - local - computations    ws - ref @xmath15 sendsb(selectedbooks )    }    receivepb(float pb ) if true\\ {    prices : = pb    other - local - computations    receivepbaa @xmath15 receivepb(prices )    }    payb ( ) if true\\ {    other - local - computations    ws - ref @xmath15 payb ( )    }    }        where requestlbaa , receivelbaa , sendsbaa , receivepbaa , paybaa are activity actors ( aas ) .",
    "ws - ref is the reference of the interface ws of useragentwso .",
    "note that a wso is always created by its interface ws in ab - wscl .",
    "an aa is defined as a 8-tuples @xmath16 .",
    "@xmath17 denotes a processing state of an actor .",
    "@xmath18 denotes an address of an actor , @xmath19 denotes a behavior of an actor , @xmath20 denotes a state of an actor , @xmath21 denotes the last event generated by an actor , @xmath22 denotes the transition map for an actor , @xmath23 denotes aa s wso , and @xmath24 denotes ws of the wso .",
    "an aa has the form of @xmath25\\lambda:[l]\\tau:[t])$ ] as a term .",
    "@xmath26 defines a predicate on actors , and @xmath27 holds if an actor with an a address @xmath18 and state @xmath20 is enabled for execution .",
    "@xmath28 defines receptionists of a fragment .",
    "@xmath29 defines acquaintances of a state or a value .",
    "@xmath30 denotes a message with values @xmath31 sent from an actor with address @xmath32 to an actor with address @xmath18 .",
    "@xmath33 denotes an actor fragment .",
    "\\{a\\}$ ] denotes a restriction of a fragment .",
    "semantics for useragentwso and its aas is following .",
    "[ * in * ] + @xmath35    if @xmath36\\lceil\\{r\\}$ ] and    @xmath37\\lambda:[l]\\tau:[t])$ ] and @xmath38 and @xmath39 .",
    "+ [ * out * ] + @xmath40\\rangle\\lceil\\{r\\}\\rightarrow \\langle [ f]\\lceil\\{r\\cup ( acq(v)\\cap recep(f))\\}\\rangle$ ]    if @xmath41 .",
    "+ [ * create - requstlbaa * ] + @xmath42\\lceil\\{a\\}$ ]    if @xmath43\\lambda:[l_a]\\tau:[t_a])$ ] and    @xmath44\\lambda:[\\textbf{ready}]\\tau:[wso])$ ] and    @xmath45 holds and    @xmath46    and @xmath47 and @xmath48 and @xmath49 .",
    "similarly to * create - requstlbaa * rule , there are also * create - receivelbaa * rule , * create - sendsbaa * rule , * create - receivepbaa * rule , and * create - paybaa * rule",
    ".      there are also some other works to unify wso and wsc .",
    "@xcite uses reo coordination language and constraint automata to derive a natural correspondence relationship between wso and wsc . and",
    "also exception handling and finalization / compensation are used to connect a wso and a wsc@xcite .",
    "in this section , we conclude the related research works and point out the trends on formalization for ws composition .",
    "as ws and ws composition emerged at about ten years ago , there are plenty of works on formalization for ws composition . as introductions above",
    ", the formalization works mainly focus on formalizing wso itself and wsc itself to verify their properties based on various mathematical tools .",
    "[ [ more - expressive - formal - models - to - support - detailed - mechanisms - in - web - service - composition ] ] more expressive formal models to support detailed mechanisms in web service composition ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^    one trend on formalization for ws composition is that the research will be going deeper into the technical details adopted by ws composition .",
    "for example , at beginning , formalization for wso mainly focuses on control flow patterns and more technical mechanisms , such as compensation , transaction processing , exception handling , event handling are included in formal models later .",
    "practicability is every thing , so enforcement of the formal methods for ws composition will be another trend . now",
    "formal methods can be validated by using different tools , for examples , a petri net method can use wofbpel@xcite , a process algebra based method can use fdr2@xcite",
    ".    such methods and tools should be integrated into real ws composition systems , including design time systems and runtime systems , for example , @xcite integrates a tool to support for bpel verification in activebpel engine .",
    "real ws composition systems with inner formal models are also pursued in future , such as qos - aware wso engine with correctness assurance@xcite .",
    "lam94 yong wang and xiang yi and kai li and meilin liu : _ an actor - based language to unifying web service orchestration and web service choreography .",
    "2012 international conference on computer science and information processing ( csip ) , 2012 .",
    "v. vabhay and g. agha : _ using passive garbage collection algorithms for garbage collection of active objects .",
    ". symp . for memory management,2002 : 106113 .",
    "activeendpoints : _ active bpel . _",
    "active endpoints , 2011 , http://www.activevos.com .",
    "r. chinnici and j. moreau and a. ryman : _ web services description language ( wsdl ) version 2.0 part 1 : core language .",
    "_ w3c recommendation , 2007 .",
    "n. mitra and y. lafon : _ soap version 1.2 part 0 : primer ( second edition ) .",
    "_ w3c recommendation , 2007 .",
    "s. tuecke and k. czajkowski and i. foster : _ open grid services infrastructure ( ogsi ) version 1.0 .",
    "_ ggf draft , 2003 .",
    "t. banks : _ web services resource framework ( wsrf)-primer v1.2 .",
    "_ oasis draft , 2006 .",
    "l. clement and a. hately and c. riegen : _ uddi version 3.0.2 .",
    "_ oasis draft , 2004 .",
    "f. leymann : _ web service flow language ( wsfl ) 1.0 .",
    "_ ibm , 2001 .",
    "s. thatte : _ xlang : web services for business process design .",
    "_ microsoft , 2001 .",
    "d. jordan and j. evdemon : _ web services business process execution language version 2.0 .",
    "_ oasis standard , 2007 .",
    "wfmc : _ the workflow reference model . _ workflow management coalition , 1995 .",
    "wfmc : _ interface 1 : process definition interchange process model .",
    "_ workflow management coalition , 1998 .",
    "van der aalst : _ the application of petri nets to workflow management .",
    "_ j. circuits , systems and computers , 1998 , 8(1 ) : 2166 .",
    "van der aalst : _ on the verification of interorganizational workflows .",
    "_ eindhoven university of technology , 1997 .",
    "m. shen and d. r. liu : _ coordinating interorganizational workflows based on process - views . _ lecture notes in computer science , 2001 , 2113(2001 ) : 274283",
    ". m. shen and d. r. liu : _ workflow modeling for virtual processes : an order - preserving process - view approach . _ j. information systems , 2002 , 28(6 ) : 505532 .",
    "a. arkin and s. askary and s. fordin : _ web service choreography interface ( wsci ) 1.0 .",
    "_ w3c note , 2002 .",
    "n. kavantzas and d. burdett and g. ritzinger : _ web services choreography description language version 1.0 .",
    "_ w3c candidate recommendation , 2005 .",
    "d. l. mcguinness and f. harmelen : _ owl web ontology language overview .",
    "_ w3c recommendation , 2004 .",
    "m. chan and j. bishop and l. baresi : _ survey and comparison of planning techniques for web services composition .",
    "_ university of pretoria , 2007 .",
    "j. rao and x. su : _ a survey of automated web service composition methods .",
    "_ lecture notes in computer science , 2005 , 3387 : 4354 .",
    "c. stahl : _ a petri net semantics for bpel .",
    "_ humboldt - university , 2004 .",
    "w. tan and y. fan and m. zhou : _ a petri net - based method for compatibility analysis and composition of web services in business process execution language .",
    "_ ieee transactions on automation science and engineering , 2009 , 6(1 ) : 94106 .",
    "j. cmara and c. canal and j. cubo : _ formalizing wsbpel business processes using process algebra .",
    "_ electronic notes in theoretical computer science , 2006 , 154(1 ) : 159173 .",
    "r. lucchi and m. mazzara : _ a pi - calculus based semantics for ws - bpel .",
    "_ j. logic and algebraic programming , 2007 , 70(1 ) : 96118 .",
    "p. wohed and m. p. aalst and m. dumas : _ analysis of web service composition languages : the case of bpel4ws . _ lecture notes in computer science , 2007 , 4421(2007 ) : 3347",
    "r. farahbod and u. glsser and m. vajihollahi : _ specification and validation of the business process execution language for web services . _ electronic notes in theoretical computer science , 2004 , 3052 : 7894 .",
    "g. g. pu and x. p. zhao and s. l. wang : _ towards the semantics and verification of bpel4ws .",
    "_ electronic notes in theoretical computer science , 2006 , 151(2 ) : 3352 . c. dumez and m. bakhouya and j. gaber and m. wack : _ formal specification and verification of service composition using lotos .",
    ". the 7th acm inter .",
    "pervasive services , 2010 .",
    "s. nakajima : _ model - cheking behavioral specification of bpel applications . _ electronic notes in theoretical computer science , 2006 , 151(2 ) : 89105 .",
    "a. lapadula and r. pugliese and f. tiezzi : _ a calculus for orchestration of web services .",
    "_ lecture notes in computer science , 2007 , 4421(2007 ) : 3347 . v. valero and m. e. cambronero and g. daz and h. maci : _ a petri net approach for the design and analysis of web services choreographies",
    ". _ j. logic and algebraic programming , 2009 , 78 : 359380 .",
    "z. duan and a. bernstein and p. lewis and s. lu : _ a model for abstract process specification , verification and composition .",
    "the second international conference on service oriented computing , 2004 : 232241 . v.",
    "valero and m. e. cambronero and g. daz and h. maci : _ a petri net approach for the design and analysis of web services choreographies .",
    "_ j. logic and algebraic programming , 2009 , 78 : 359380 .",
    "y. huang and h. wang : _ a petri net semantics for web service choreography .",
    "2007 acm symp .",
    "applied computing , 2007 : 16891690 .",
    "j. li and j. he and h. zhu and g. pu : _ modeling and verifying web services choreography using process algebra .",
    "workshop 31st ieee software engineering , 2007 : 256268 .",
    "a. brogi and c. canal and e. pimentel : _ formalizing web service choreographies .",
    "_ electronic notes in theoretical computer science , 2004 , 105(1 ) : 7394 . c. montangero and l. semini : _ a logic view of choreography",
    ". conf . on coordination models and languages , 2006 : 179193 .",
    "g. g. pu and x. p. zhao and s. l. wang : _ a denotational model for web services choreography . _",
    "proc . conf . on distributed computing and internet technology , 2008 : 112 .",
    "m. bravetti and g. zavattaro : _ towards a unifying theory for choreography conformance and contract compliance . _ lecture notes in computer science , 2007 , 4827(2007 ) : 3450 . z. wang and l. zhou and y. x. zhao : _ web services choreography validation . _ j. service oriented computing and applications , 2010 , 4(4 ) : 291305 . c. pelz : _ web services orchestration and choreography . _ ieee computer , 2003 , 36(8 ) : 4652 .",
    "n. busi and r. gorrieri and c. guidi : _ choreography and orchestration : a synergic approach for system design .",
    "_ proc . conf . on service oriented computing , 2005 : 228240 .",
    "n. busi and r. gorrieri and c. guidi : _ choreography and orchestration conformance for system design .",
    "_ lecture notes in computer science , 2006 , 4038(1 ) : 6381",
    ". m. sun and a. farhad : _ web services choreography and orchestration in reo and constraint automata .",
    "acm symp . on applied computing , 2007",
    ". w. l. yeung : _ mapping ws - cdl and bpel into csp for behavioural specification and verification of web service .",
    "eu conf . on web services , 2006 : 297305 .",
    "w. l. yeung : _ csp - based verification for web service orchestration and choreography j. simulation , 2007 , 83(1 ) : 6574 . c. pahl and y. zhu : _ a semantical framework for the orchestration and choreography of web services . _ electronic notes in theoretical computer science , 2006 , 151(2 ) : 318",
    ". h. l. yang and x. p. zhao and c. cai : _ exploring the connection of choreography and orchestration with exception handling and finalization / compensation .",
    "conf . on formal techniques for networked and distributed systems , 2007 : 8196 .",
    "samik basu and tevfik bultan and meriem ouederni : _ deciding choreography realizability .",
    "39th annual acm sigplan - sigact symposium on principles of programming languages , 2012 : 191202 .",
    "kohei honda and nobuko yoshida and marco carbone : _ multiparty asynchronous session types .",
    "popl08 , 2008 : 273284 .",
    "samira tasharofia and marjan sirjania : _ formal modeling and conformance validation for ws - cdl using reo and casm .",
    "_ electronic notes in theoretical computer science , 2009 , 2009 : 155174 .",
    "c. hewitt : _ view control structures as patterns of passing messages . _ j. artificial intelligence , 1977 , 8(3 ) : 323346 .",
    "g. agha : _ actors : a model of concurrent computation in distributed systems .",
    "_ , mit , 1986 .",
    "g. agha : _ concurrent object - oriented programming .",
    "_ j. communications of acm , 1990 , 33(9 ) : 125141 .",
    "m. c. astley : _ customization and composition of distributed objects : policy management in distributed software architectures _ university of illinois , urbana - champaign , 1999 .",
    "axis : _ axis soap engine .",
    "_ apache , 2011 , http://axis.apache.org/axis . p.",
    "v. biron and a. malhotra : _ xml schema part 2 : datatypes second edition .",
    "_ w3c recommendation , 2004 .",
    "s. frlund _ : _ coordinating distributed objects : an actor - based approach to synchronization .",
    "mit , 1996 . m. w. jang : _ efficient communication and coordination for large - scale multi - agent systems .",
    "_ university of illinois , urbana - champaign , 2006 .",
    "osl : _ actor foundry .",
    "_ open systems laboratory , university of illinois , urbana - champaign , 2011 , http://osl.cs.uiuc.edu .",
    "d. c. sturman : _ modular specification of interaction policies in distributed computing .",
    "_ , university of illinois , urbana - champaign , 1996 .",
    "c. l. talcott : _ an actor rewriting theory . _ electronic notes in theoretical computer science , 1996 , 4 : 361384 . c. l. talcott : _ interaction semantics for components of distributed systems .",
    "workshop on formal method for open object - based distributed systems , 1996 . c. l. talcott : _ actor theories in rewriting logic . _ j. theoretical computer science , 2002 , 285(2 ) : 441485 . c. a. varela : _ worldwide computing with universal actors : linguistic abstractions for naming , migration , and coordination .",
    "_ university of illinois , urbana - champaign , 2001 .",
    "n. venkatasubramanian : _ an adaptive resource management architecture for global distributed computing . _ university of illinois , urbana - champaign , 1998 .",
    "munindar p. singh : _ information - driven interaction - oriented programming : bspl , the blindingly simple protocol language .",
    "10th int . conf . on autonomous agents and multiagent systems ( aamas 2011 ) , 2011 .",
    "munindar p. singh : _ lost : local state transfer  an architectural style for the distributed enactment of business protocols .",
    "2011 ieee international conference on web services , 2011 : 5764 .",
    "jan mendling and michael hafner : _ from ws - cdl choreography to bpel process orchestration .",
    "_ j. enterprise inf .",
    "management , 2008 , 21(5 ) : 525542 .",
    "jan mendling and michael hafner : _ from inter - organizational workflows to process execution : generating bpel from ws - cdl . _ otm workshops , 2005 , 2005 : 506515",
    ". m. butler and c. ferreira : _ a process compensation language .",
    "ifm , 2000 : 6176 .",
    "m. butler and c. ferreira : _ an operational semantics for stac .",
    "coordination , 2004 : 87104 .",
    "m. butler and t. hoare and c. ferreira : _ a trace semactics for long - running transaction .",
    "25 years of csp , 2004 : 133150 .",
    "y. wang : _ formal model of web service composition : an actor - based approach to unifying orchestration and choreography . _ arxiv draft , 2013 . c. ouyang and e. verbeek and s. breutel : _ wofbpel : a tool for automated analysis of bpel processes . _",
    "service - oriented computing , 2005 : 484489 .",
    "formalsystems : _ failures - divergence refinement : fdr2 user manual .",
    "_ formal systems ( europe ) ltd , 2003",
    ". y. qian and y. xu and z. wang : _ tool support for bpel verification in activebpel engine .",
    "2007 australian software engineering , 2007 : 90100 .",
    "y. wang : _ a formal model of qos - aware web service orchestration engine . _ arxiv draft , 2012 ."
  ],
  "abstract_text": [
    "<S> web service composition creates new composite web services from existing web services which embodies the added values of web service technology and is a key technology to solve cross - organizational business process integrations . </S>",
    "<S> we do a survey on formal methods for web service composition in the following way . through analyses of web service composition </S>",
    "<S> , we establish a reference model called rm - wscomposition to capture elements of web service composition . </S>",
    "<S> based on the rm - wscomposition , issues on formalization for web service composition are pointed out and state - of - the - art on formal methods for web service composition is introduced . finally , we point out the trends on this topic . for convenience , </S>",
    "<S> we use an example called buyingbooks to illustrate the concepts and mechanisms in web service composition .    </S>",
    "<S> [ firstpage ]    web service , web service composition , web service orchestration , web service choreography , web service business process execution language ( ws - bpel ) , web service choreography description language ( ws - cdl ) , formal methods </S>"
  ]
}
{
  "article_text": [
    "runge - kutta ( rk ) methods are the most popular choice of one - step methods for solving problems of the form@xmath0numerically . in the implementation of these methods , local error control via local extrapolation",
    "is the preferred choice of error control .",
    "it is known , however , that this form of error control does not amount to control of the global error . in this paper",
    ", we seek to give our own interpretation and discussion of this problem , including an analysis showing that global error control , if it does occur , is limited under rk iteration .",
    "we now define local and global errors in rk methods formally , and study the propagation of local error in the implementation of an explicit rk method .",
    "we will also find the relationship between local and global error .",
    "the most general definition of a runge - kutta method @xcite is@xmath1such a method is said to have @xmath2 stages ( the @xmath3 ) .",
    "we note that if @xmath4 for all @xmath5 then the method is said to be _ explicit _ ; otherwise , it is known as an _ implicit _ rk method .",
    "the number of stages is related to the order of the method .",
    "the symbol @xmath6 is used here and throughout to indicate the approximate numerical solution , whereas the symbol @xmath7 will denote the true solution .",
    "we denote an explicit runge - kutta method of order @xmath8 ( rk@xmath9 for solving ( [ ivp ] ) by@xmath10where @xmath11 denotes the numerical approximation to @xmath12 and @xmath13 is a function associated with the particular rk@xmath8 method .",
    "indeed , @xmath14 is simply the linear combination of the stages for that particualr method , as in@xmath15      we define the global error in a numerical solution at @xmath16 by    @xmath17    and the local error at @xmath16 by @xmath18 -y_{i+1}.   \\label{eps local}\\]]in the above , @xmath19 denotes the true solution @xmath20 and similarly for @xmath21 note the use of the exact value @xmath19 in the bracketed term in ( [ eps local ] ) .    previously , we have shown @xcite that@xmath22where @xmath23 .",
    "equation ( [ master error equn ] ) provides the relationship between local and global errors in rk@xmath8 .",
    "we will assume that @xmath24 ( i.e. the initial value is known exactly ) .",
    "we see that the global error at any node @xmath16 is the sum of a local error term and a term incorporating the global error at the previous node . for convenience ,",
    "we will drop the argument from @xmath25 in the remainder of the paper ; its presence is implied .    for rk@xmath8 ,",
    "it is well - known that@xmath26      consider two rk methods of order @xmath8 and @xmath27 .",
    "let @xmath28 denote the approximate solution at @xmath16 obtained with the order @xmath8 method , and similarly for @xmath29 let the local error at @xmath16 in the order @xmath8 method be denoted by @xmath30 and similarly for @xmath31 hence , with @xmath32 we have@xmath33if @xmath34 is sufficiently small .",
    "this gives@xmath35      once we have estimated the local error , we can perform error control .",
    "assume that we require that the local error at each step must be less than a user - defined tolerance @xmath36 moreover , assume that , using stepsize @xmath34 , we find@xmath37 in other words , the magnitude of the local error @xmath38 exceeds the desired tolerance .",
    "we remedy the situation by determining a new stepsize @xmath39 from@xmath40 ^{z+1}\\right\\vert = \\delta \\rightarrow h^{\\ast } = \\left ( \\frac{\\delta } { \\left\\vert \\beta _ { i+1}^{z}\\right\\vert } \\right ) ^{\\frac{1}{z+1 } }   \\label{h*= ... }\\]]and we repeat the rk computation with this new stepsize .",
    "this , of course , gives@xmath41this procedure is then carried out on the next step , and so on .",
    "such form of error control is known as _ absolute _ error control .",
    "if the estimated error does not exceed the tolerance , then no stepsize adjustment is necessary , and we proceed to the next step .",
    "often , we introduce a so - called ` safety factor ' @xmath42 as in@xmath43where @xmath44 so that the new stepsize is slightly smaller than that given by ( [ h*= ... ] ) .",
    "this is an attempt to cater for the possibility that @xmath45 may have been underestimated , due to the assumptions made in deriving ( [ beta local extrap ] ) .",
    "the choice of the value of @xmath46 is subjective , although a representative value is @xmath47    note that because this error control algorithm is applied on each step , we could find that over the interval of integration we have stepsizes of varying lengths . for this reason ,",
    "it is appropriate to make the replacement@xmath48 in ( [ rk defn ] ) .",
    "there is a very important point that must be discussed .",
    "the method for determining @xmath45 hinged on the requirement @xmath49 however , we only have the exact solution at the initial point @xmath50 at all subsequent nodes , the solution is approximate .",
    "how do we meet the requirement @xmath51    in the case of local extrapolation , the answer is simple : simply use the higher - order solution @xmath52 as input to generate both @xmath28 ( with the order @xmath8 method ) , and @xmath53 ( with the order @xmath27 method ) . in other words , we are assuming that @xmath52 is accurate enough , relative to @xmath54 to be regarded as the exact value , an assumption entirely consistent with the assumption made in deriving ( beta local extrap ) .",
    "this means that we determine the higher - order solution at each node , and this solution is used as input for both methods in computing solutions at the next node .",
    "the question of whether or not the global error that accumulates in the higher - order solution affects the calculation of @xmath45 in ( [ beta local extrap ] ) is addressed in the next section .",
    "now , as per the last paragraph of the preceding section , assume that @xmath55 is used to generate @xmath28 and @xmath29 such value of @xmath28 ( and associated quantities ) will be denoted @xmath56 .",
    "hence , we have@xmath57    thus,@xmath58for small @xmath59 , because @xmath60 we see that the presence of global error in the higher - order solution does not affect the expression for @xmath45 obtained under the assumption @xmath32 particularly if @xmath59 is small .",
    "however , the expression for @xmath61 informs of a potential problem : we have@xmath62where @xmath63 is the global error in @xmath64 in ( cancellation of ge ) , we see that a subtractive cancellation ensures that the @xmath63 term does not enter directly into the estimate for @xmath65 nevertheless , even if @xmath66 we could still have @xmath67 perhaps substantially so , if @xmath68 is large .",
    "moreover , we should certainly expect that @xmath68 could become large under iteration ( i.e. as @xmath69 increases ) , since global error is essentially an accumulation of local errors .",
    "the point here is that , even if local error control is effective , the global error @xmath70 could become large , and could grow in an uncontrolled fashion .",
    "let us investigate the effect on the global error if local error control , via local extrapolation , is implemented .",
    "consider the expression obtained previously for the global error at @xmath16@xmath71we assume @xmath72 if we have the exact value @xmath19 at each node , then we have@xmath73at each node , so that the global error is equal to the local error .",
    "if the local error has been controlled ( subject to tolerance @xmath74 we have@xmath75which means that the global error satisfies the tolerance @xmath36    however , as discussed previously , we do not have @xmath19 at each node . rather , in the case of local extrapolation , where we have a higher - order solution available , and we propagate this higher - order solution , we have , from ( [ del z z+1]),@xmath76where @xmath34 is assumed to be the stepsize determined from ( [ h*= ... ] ) and we have included the safety factor @xmath77 explicitly . for ease of analysis , we assume here a uniform stepsize @xmath34 . in the second last line , we assume that , since @xmath78 and @xmath79 ( the fundamental assumption in local extrapolation ) , we must have @xmath80 we denote the average value of @xmath45 on @xmath81 $ ] by @xmath82 and we use @xmath83 . now , assuming @xmath84 ( see the appendix ) , we have @xmath85it is easily confirmed that for @xmath86 we have@xmath87 for @xmath88 this means that@xmath89for these values of @xmath77 and @xmath90 which suggests that the global error , like the local error , satisfies the user - defined tolerance . in other words ,",
    "propagation of the higher - order solution in local error control via local extrapolation , has resulted in control of the global error , although the significance of the safety factor in deriving this result should be clear .",
    "most importantly , the above result holds only if the assumptions made here are true ; if they are not , then @xmath91 is probably greater than @xmath36 for this reason , we say that the global error is _ possibly _ bounded , but this is _ not guaranteed_. we should appreciate that such a bounding of the global error is a beneficial _ by - product _ of local error control , and is not the designated objective .",
    "the most important assumption made above is@xmath92 in the appendix , we show that this is , in fact , a consequence of the condition@xmath93if this condition is violated , then the assumption does not hold .",
    "it is worth examining this condition in closer detail : the factor @xmath69 represents iteration number .",
    "it is quite reasonable to assume that there exists a value of @xmath69 such that , for the given values of @xmath94 and @xmath95 we will have@xmath96 in other words , eventually the rk iterative process will cause ( condition ) to be violated .",
    "this means that sooner or later the global error will exceed the imposed tolerance , despite local error control , and that the bounding of the global error will be ` short - lived ' , so to speak .",
    "we also note that our assumption of a uniform stepsize is reasonable if the stepsize does not vary considerably ; nevertheless , in reality it may do so , which would also compromise the validity of ( [ condition ] ) .",
    "some comments are appropriate :    1 .",
    "we are not restricted to using a method of order @xmath27 as the higher - order method in local extrapolation .",
    "any method of order @xmath97 can be used .",
    "our analysis and results are essentially unchanged , save for ( [ sigmas ] ) , which becomes@xmath98the value of @xmath99 here will influence the value of the safety factor @xmath77 for which the coefficient is less than unity .",
    "our analysis clearly shows that global error control can not be achieved through local extrapolation .",
    "global error control is usually achieved through reintegration - estimating the global error after local extrapolation , and then redoing the computation on the entire interval of integration with a smaller stepsize .",
    "this approach , while effective , can be inefficient and probably can not be implemented for real - time problems , where a globally accurate result is needed before the next iteration .",
    "it is not our intention to report on methods which address this issue , but we would like to take the opportunity to refer to our own recent work in this regard , where we have developed an algorithm based on high - order _ quenching _ to enable stepwise global error control @xcite@xcite .",
    "an instructive example is the initial - value problem@xmath100on @xmath101 .$ ] the coefficient in the differential equation has been chosen so that @xmath7 does not exceed @xmath102 on @xmath101 $ ] , i.e. @xmath7 does not vary substantially , so that absolute error control is suitable .",
    "the exact solution is @xmath103    we use rk3 @xcite and rk4 @xcite to implement local error control , with @xmath104 the quantities @xmath105 and @xmath106 are shown as functions of @xmath107 in figure 1 ( figure follows appendix ) .",
    "we see that the local error @xmath108 is bounded by @xmath109 as expected .",
    "however , @xmath110 increases monotonically .",
    "the global error @xmath111 is given by @xmath112 and , although not shown , it is easy to see that @xmath113 must increase beyond @xmath114 and is almost @xmath115 times greater than @xmath116 at @xmath117 .",
    "in fact , @xmath118 becomes larger than @xmath116 at @xmath119 after @xmath120 iterations .",
    "this is the value of @xmath69 for which ( condition ) is violated for this example . for @xmath121 the condition",
    "is not violated and the global error is bounded by @xmath36 clearly , though , this state of affairs does not last , and the propagation of @xmath122 eventually compromises the global accuracy of the solution .",
    "we have investigated the relationship between local error and global error in rk methods , under the implementation of local error control via local extrapolation .",
    "we find that , even though local error is successfully controlled , we can not expect the same for global error .",
    "our analysis shows that there is a possibility that the global error will be bounded by a user - imposed tolerance during the initial stage of the integration , but this will not last .",
    "the propagation of the global error in the higher - order method will eventually cause the global error in the lower - order method to exceed the tolerance .",
    "a numerical example clearly illustrates these points .    9 hairer , e. , norsett , s.p . , and wanner , g. ( 2000 ) .",
    "_ solving ordinary differential equations i : nonstiff problems , _ berlin : springer .",
    "prentice , j.s.c .",
    "general error propagation in the rk@xmath123gl@xmath2 method , _ journal of computational and applied mathematics , _ 228 , 344 - 354 .",
    "prentice , j.s.c .",
    "stepwise global error control in an explicit runge - kutta method using local extrapolation with high - order selective quenching , _ journal of mathematics research , _ 3 , 2 , 126 - 136 .",
    "[ http://ccsenet.org/journal/index.php/jmr/article/view/8700/7481 ]",
    "prentice , j.s.c .",
    "relative global error control in the rkq method for systems of ordinary differential equations , _ journal of mathematics research _ , 3 , 4 , 59 - 66 . [ http://ccsenet.org/journal/index.php/jmr/article/view/10491/8952 ]    kincaid , d. , and cheney , w. ( 2002 ) . _ numerical analysis : mathematics of scientific computing 3rd ed .",
    "_ , pacific grove : brooks / cole .",
    "leveque , r.j .",
    "( 2007 ) . _ finite difference methods for ordinary and partial differential equations _ ,",
    "philadelphia : siam .",
    "assuming a constant stepsize @xmath34 , the underlying premise of local extrapolation is the assumption that @xmath125which implies@xmath126where @xmath127 is a large number . assuming that @xmath128 is a slowly varying function of @xmath129 we can replace @xmath128 with its average value @xmath82 and so we may write@xmath130subject to the condition that @xmath131"
  ],
  "abstract_text": [
    "<S> we study the relationship between local and global error in runge - kutta methods for initial - value problems in ordinary differential equations . </S>",
    "<S> we show that local error control by means of local extrapolation does not equate to global error control . </S>",
    "<S> our analysis shows that the global error of the higher - order solution is propagated under iteration , and this can cause an uncontrolled increase in the global error of the lower - order solution . </S>",
    "<S> we find conditions under which global error control occurs during the initial stages of the rk integration , but even in such a case the global error is likely to eventually exceed the user - defined tolerance .    </S>",
    "<S> * keywords : * runge - kutta ; local error ; global error ; local extrapolation ; error control    * msc 2010 : * 65l05 , 65l06 , 65g99 </S>"
  ]
}
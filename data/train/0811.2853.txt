{
  "article_text": [
    "we present efficient algorithms for generating random simple graphs with cycles of size larger than a constant @xmath0 .",
    "the main motivation for this work comes from the design of high performance low - density parity - check ( ldpc ) codes @xcite .    for positive integers @xmath5 ,",
    "our algorithm generates a random graph with @xmath3 vertices and @xmath4 edges that has no cycles with length less than or equal to @xmath0 using @xmath6 operations .",
    "the algorithm starts with an empty graph and sequentially adds @xmath4 edges between pairs of non - adjacent vertices . in every step of the procedure , an edge can be added between two distinct vertices @xmath7 and @xmath8 that are of distance at least @xmath0 .",
    "the probability of adding an edge between @xmath7 and @xmath8 , denoted by @xmath9 , changes in every step of the algorithm . in order to get a uniform sampling",
    ", @xmath9 should be proportional to the number of extensions of the current graph to graphs with @xmath4 edges that contain @xmath10 and have no small cycles .",
    "the algorithm estimates the number of such valid extensions by computing the expected number of small cycles if the rest of edges are added uniformly at random ( see sections [ sec : alg - main - res ] and [ sec : idea ] for more details ) .",
    "we show that our algorithm produces an asymptotically uniform sample when @xmath0 is a constant and @xmath2 with @xmath11 . to the best of our knowledge",
    "this is the first polynomial - time algorithm for the problem .",
    "the analysis uses janson s inequality for obtaining a close approximation of the number valid extensions of a partially constructed graph .",
    "this method goes beyond the poisson approximations that is typically used when the number of the edges is linear ( see @xcite for more details ) .    from a theoretical perspective",
    ", our work is related to the following problem . given a graph property @xmath12 that is preserved by removal of any edge from the graph .",
    "a _ random maximal p - graph _ is obtained from @xmath3 isolated vertices by randomly adding those edges ( at each stage choosing uniformly among edges whose inclusion would not destroy property @xmath12 ) until no further edges can be added .",
    "the question of finding the number of edges of a random maximal @xmath12-graph for several properties @xmath12 is well studied @xcite . in particular , when @xmath12 is the property that the graph has girth greater than @xmath0 , @xcite shows that the above process of sequentially growing the graph leads to graphs with @xmath13 edges .",
    "unfortunately , these random maximal @xmath12-graphs may have distribution that are far from uniform .",
    "in fact it has been shown ( e.g. @xcite ) that when @xmath12 is the property of having no triangle , the maximal triangle free graphs are close to bipartite . we show that our new algorithm guarantees asymptotically uniform distribution at the expense of reducing the number of edges to @xmath14 .",
    "recently , sequential algorithms have been shown , empirically ( @xcite ) and theoretically ( @xcite ) , to be very successful for designing fast algorithms for counting and generating random graphs with given degrees .",
    "the current paper builds on this line of research and develops mainly two new ideas . for the design , instead of starting from a biased heuristic and calculating and canceling its bias we use poisson approximations to obtain the correct @xmath9 s . for the analysis",
    ", we use convex functions and janson s inequality for controlling the accumulated error and obtaining a tighter bound than the concentration results used in @xcite .",
    "it has been shown that ldpc codes can approach shannon capacity asymptotically for large size codes , when their associated graph representations ( tanner graphs ) are selected uniformly at random from the set of bipartite graphs with a properly optimized degree sequences @xcite . however , in practice , the maximum graph size is between @xmath15 and @xmath16 ( depending on the delay sensitivity and on the hardware constraints ) . in this range , it is well known that the existence of a small number of subgraphs with a certain structure ( in particular , small cycles ) spoil the code performances @xcite .",
    "different approaches have been developed within the coding theory community to deal with this problem .",
    "for example , deterministic constructions of graph sequences with large girth @xcite have been studied .",
    "however , numerical studies have shown that known deterministic constructions can have poor performance @xcite . from a theoretical point of view",
    ", no deterministic graph sequence is known that asymptotically outperforms random graphs .",
    "one can also stick to random constructions and grow the graph by adding random edges sequentially while avoiding short cycles .",
    "this method has been very popular in practice and is known by the name of _ progressive edge growth _ ( peg ) algorithm  @xcite .",
    "we will describe the main intuition behind peg and show its limitations with respect to two standard performance measures for the codes : ( i ) bit error rate or expected fraction of wrong bits ; and ( ii ) block error rate or probability that at least one bit in the message was received incorrectly .",
    "let @xmath17 be the maximum rate achievable by random ldpc codes ( empirically @xmath17 is indistinguishable from the channel capacity ) .",
    "it is known that uniformly random graphs contain a random number ( of order @xmath18 ) of cycles of size @xmath0 or smaller .",
    "these cycles are responsible for non - vanishing block error probability that is bounded away from @xmath19 at small noise .",
    "the main goal of peg is to reduce this error , to a value that vanishes with @xmath0 , by removing the cycles of length up to @xmath0 .",
    "but the final distribution of peg is not necessarily uniform which may affect the other performance measure ( bit error rate ) .",
    "in fact preliminary simulations suggest that our new algorithm produces codes with lower bit error rate .    in this paper",
    "we define the first code generation algorithm that overcomes both problems .",
    "we show that there exists a graph sequence that @xmath20 can be generated efficiently ; @xmath21 has vanishing bit error rate at any rate below @xmath17 ( this follows by the standard density evolution analysis @xcite using optimized degree sequences @xcite ) ; and @xmath22 has girth larger than @xmath0 ( therefore has low block error rate probability ) .    for the sake of simplicity we will present the relevant calculations only for the problem of generating random ( not necessarily bipartite ) graphs that have large girth . then for ldpc design , we will define the algorithm for generating bipartite graphs with given degree sequences . generalizing proofs to this case",
    "is cumbersome but is conceptually straightforward .",
    "the rest of the paper is organized as follows . in section [ sec : def - prob - stat ] , we provide the setup and necessary definitions . in section [ sec : alg - main - res ] , we describe the new algorithm for randomly generating large - girth graphs , and state the main result . in section",
    "[ sec : idea ] we explain the intuition behind the algorithm , and present its application to ldpc codes in section [ sec : application ] .",
    "finally the analysis of the algorithm and its running time are discussed in section [ s : analysis ] . to the interest of space",
    "some of the proofs are presented in the longer version of the paper @xcite .",
    "the _ girth _ of a graph @xmath23 is defined to be the length of its shortest cycle .",
    "let @xmath24 denote the set of all simple graphs with @xmath4 edges over @xmath3 vertices and let @xmath25 be the set of graphs with girth greater than @xmath0 .",
    "in this paper we assume that @xmath0 is a constant .",
    "we want to sample a uniformly random graph @xmath23 from @xmath26 .",
    "this is a relatively easy problem for @xmath27 and in this paper our focus is on the difficult case of @xmath2 for some small @xmath28 .",
    "a nave approach would be to start with an empty graph @xmath29 with no edges over the vertex set @xmath30 and sequentially add pairs @xmath10 chosen uniformly at random ( without replacement ) among all pairs @xmath10 that are not yet selected .",
    "repeating the edge addition @xmath4 times leads to a uniformly random member of @xmath24 that has girth larger than @xmath0 , with probability bounded away from @xmath19 .",
    "re - running the whole @xmath4 steps a sufficiently large number of times , yields a polynomial - time algorithm for uniformly randomly generating graphs in @xmath26 when @xmath27 .",
    "this approach does not work for the case of @xmath2 since the success probability is of the order @xmath31 . for he",
    "applications to coding theory , even the case @xmath27 is very challenging in practice since @xmath3 is very large .",
    "our sequential algorithm to sample from @xmath26 works as follows .    ' '' ''     algorithm @xmath32    ' '' ''    * set @xmath29 to be the graph over vertex set @xmath30 and with no edges . for @xmath33 ,",
    "repeat the following steps : * * if there is no edge @xmath10 such @xmath34 ( adding any edge to @xmath35 creates a small cycle ) , stop and return fail . *",
    "* otherwise , consider the probability distribution @xmath36 given by equation below on the set of all edges @xmath10 .",
    "sample an edge @xmath10 with distribution @xmath36 and set @xmath37 .",
    "* if the algorithm does not fail before @xmath38 , return @xmath39 .    ' '' ''    let @xmath40 and @xmath41 be the adjacency matrix of the partially constructed graph @xmath35 and its complement @xmath42 respectively .",
    "let also @xmath43 be the adjacency matrix of all edges @xmath10 such that @xmath34 .",
    "define a probability distribution on the set of all pairs @xmath10 and represent it by a symmetric matrix @xmath44 $ ] defined by + @xmath45 .",
    "\\label{eq : p(g_t)}\\ ] ] here @xmath46 is a normalization constant .",
    "symbols @xmath47 and @xmath48 represent the coordinate - wise multiplication and exponentiation of square matrices .",
    "i.e. for @xmath49 matrices @xmath50 the expression @xmath51 ( @xmath52 ) means that for all @xmath53 we have @xmath54 ( @xmath55 ) .    the main intuition for defining the probabilities @xmath36 through matrix multiplication is explained in section [ sec : idea ] .    by construction @xmath56 .",
    "let @xmath57 denote the probability that algorithm @xmath32 does not fail and returns a graph @xmath58 .",
    "let also @xmath59 denote the uniform probability on the set @xmath26 ; i.e. @xmath60 .",
    "our goal is to show that @xmath57 and @xmath61 are very close to each other and for that we will use the total variation metric .",
    "[ def : total - var - dist ] the _ total variation distance _ between two ( not necessarily normalized ) measures @xmath62 and @xmath63 on a set @xmath64 is defined by : @xmath65    our main result is the following :    [ thm : main ] for @xmath66 and constant @xmath67 such that @xmath68^{-1}$ ] , the failure probability of algorithm @xmath32 is @xmath69 .",
    "moreover , the algorithm generates all but @xmath70 graphs in @xmath26 with equal probability asymptotically .",
    "in particular we will show that : @xmath71    we will prove theorem [ thm : main ] in section [ s : analysis ] .",
    "we will also discuss an implementation of algorithm @xmath32 in subsection [ sec : run - time ] that has an expected running time of @xmath6 .",
    "define the _ execution tree _",
    "@xmath72 of the nave algorithm described in section [ sec : def - prob - stat ] as follows .",
    "consider a rooted @xmath4-level tree where the root ( the vertex in level zero ) corresponds to the empty graph in the beginning of the algorithm and level @xmath73 vertices correspond to all couples @xmath74 where @xmath75 is a partial graph that can be constructed after @xmath73 steps , and @xmath76 is an ordering of its @xmath73 edges .",
    "there is a link in @xmath72 between a partial graph @xmath74 from level @xmath73 to a partial graph @xmath77 from level @xmath78 if @xmath79 and @xmath76 , @xmath80 coincide on the first @xmath73 positions .",
    "any path from the root to a leaf at level @xmath4 of @xmath72 corresponds to one possible way of generating a random graph in @xmath24 .",
    "let us denote those partial graphs @xmath75 that have girth greater than @xmath81 by `` valid '' graphs .",
    "our goal is to reach a valid leaf in @xmath72 , uniformly at random , by starting from the root and going down the tree .",
    "it is known that @xcite in order to achieve this goal , at any step @xmath73 , one needs to choose @xmath82 with probability proportional to the number of valid leaves of @xmath72 that are descendant of @xmath77 ( see @xcite for a similar analysis in more details ) .",
    "denote this probability by @xmath83 .",
    "the main technical contribution of this paper is deriving a new approximation @xmath84 for the true probabilities @xmath83 , selecting @xmath77 with probability @xmath84 , and controlling the accumulated error @xmath85 $ ] .",
    "consider a random variable @xmath86 that is the number of cycles of length at most @xmath0 in a leaf chosen uniformly at random from the descendants of @xmath77 in @xmath72 .",
    "first we use janson s inequality @xcite to show that the distribution of @xmath86 behaves like poisson .",
    "that is the probability of @xmath87 ( i.e. reaching a valid leaf ) is approximately @xmath88\\right)$ ] . that explains how @xmath84 is calculated .",
    "furthermore , instead of calculating the error @xmath89 $ ] for each @xmath73 and then bounding the accumulated error , we look at the final product , simplify it , and then find a bound for it . for this problem ,",
    "the standard method of bounding each term separately , leads to much larger error terms and is not sufficient for deriving our final result . in order to make the implementation easier ,",
    "it is not hard to see that the terms @xmath90 $ ] can be approximated by matrix multiplication ( more precisely by entries of the matrix @xmath91 used in equation ) .",
    "these claims will be rigorously proven in section [ s : analysis ] .",
    "we believe that this idea is applicable for the analysis of similar random generation algorithms beyond their existing correctness ranges .",
    "the ideas described above can be used to generate random bipartite graphs with given degree sequences .",
    "such graphs define the standard ensemble for irregular ldpc codes . here",
    "we will show how to modify the algorithm for this application without repeating its cumbersome , but conceptually simple , analysis .",
    "consider two sequences of positive integers @xmath92 and @xmath93 for degrees of the vertices such that @xmath94 .",
    "we would like to generate a random bipartite graph @xmath95 with degree sequence @xmath96 , ( i.e. for @xmath97 , @xmath98 we need @xmath99 and @xmath100 ) that has also girth greater than @xmath0 ( assume @xmath0 is an even number ) .",
    "we denote the set of all such graphs by @xmath101 .",
    "the algorithm is a natural generalization of algorithm @xmath32 where the probabilities @xmath36 are adjusted to obtain the elements of set @xmath101 .    ' '' ''     algorithm @xmath102-@xmath32    ' '' ''    * set @xmath29 to be a graph over vertex sets @xmath97 , @xmath98 and with no edges .",
    "let also @xmath103 and @xmath104 be two ordered set of integers that are initialized by @xmath105 and @xmath106 . for @xmath107 ,",
    "repeat the following steps : * * if there is no _ suitable _ edges , i.e. for any edge @xmath108 , the graph @xmath109 has a cycle of lenght at most @xmath0 , stop and return fail . * * consider the probability distribution @xmath110 given by equation below on the set of all edges @xmath108 .",
    "sample an edge @xmath108 with distribution @xmath110 and set @xmath111 .",
    "* if the algorithm does not halt before @xmath112 , return @xmath113 .    ' '' ''    here each probability @xmath110 is an approximation to the probability that a uniformly random extension of graph @xmath35 has girth larger than @xmath0 . in order to find this approximation",
    ", we will consider a configuration model representation for the graphs with degree sequence @xmath96 ( see @xcite for the definition of configuration model ) .",
    "then we use the argument of section [ sec : idea ] , to find the following poisson approximation for @xmath110 : @xmath114 where @xmath46 is a normalization constant , and @xmath115 denote the remaining degrees of @xmath7 and @xmath8 .",
    "furthermore , @xmath116 where @xmath117 is the set of all simple cycles of length @xmath118 in the complete bipartite graph on vertices of @xmath119 and @xmath120 , and @xmath121 is roughly the probability that @xmath122 is in a random extension of @xmath35 .",
    "more precisely @xmath121 is a product of the three terms @xmath123 , @xmath124 , and @xmath125 where @xmath126 is equal to @xmath127 , or @xmath128 depending on whether both , one , or none of the adjacent edges to @xmath129 in @xmath122 are in @xmath130 respectively . @xmath131 is defined similarly .",
    "we defer a more complete discussion of the codes generated by this algorithm to a complete version of the paper . here",
    "we limit ourselves to a few remarks : @xmath20 several definitions have been proposed for the substructures responsible for the decoding errors at high signal - to - noise ratio .",
    "our algorithm can be adapted to exclude any of these substructures ( instead of cycles ) as well .",
    "@xmath21 in any of these definitions , the cycles play a dominant role .",
    "therefore the above algorithm should be a good starting point .",
    "@xmath22 in practical code design it can be preferable to partially structure the ensemble for facilitating the layout ( as , for instance , in protograph codes @xcite ) .",
    "our graph generation procedure can be adapted to partially structured ensembles as well .",
    "the aim of this section is to prove theorem [ thm : main ] .",
    "the most challenging part of the proof is to show that @xmath57 , probability of generating a graph @xmath23 by algorithm @xmath32 , is not less than @xmath61 , the uniform probability , for almost all graphs @xmath23 in @xmath26 .",
    "in fact , the two parts of the proof of theorem [ thm : main ] are given below .",
    "there is also a brief analysis of the running time of the algorithm which is discussed in subsection [ sec : run - time ] .",
    "[ [ lower - bound - for - p_s . ] ] lower bound for @xmath132 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the probability of generating a typical graph in @xmath26 is at least a constant fraction of the uniform probability .",
    "more precisely we will show that for all but @xmath70 graphs @xmath133 :   @xmath134 where the term @xmath69 goes to zero quickly as @xmath3 goes to infinity .",
    "proof of the lower bound covers almost all of this section and as we can see in the next paragraph the main theorem follows easily from it .    [",
    "[ proof - of - dvp_sp_uo1 . ] ] proof of @xmath135 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    once the above lower bound is given to us it is not hard to show that @xmath132 and @xmath136 are close to each other in total variation metric .",
    "this part is an straightforward algebraic calculation .",
    "we just need to apply the triangle inequality to the definition of @xmath137 and obtain @xmath138 . then depending on whether @xmath139 or @xmath140 we bound the term @xmath141 differently . let @xmath142 be the set of graphs @xmath23 where the @xmath143 and let @xmath144 be the set of all graphs @xmath23 with @xmath145 . now assuming the lower bound on @xmath132 given above the following facts hold : ( i ) @xmath146 .",
    "( ii ) for @xmath147 . @xmath148",
    "moreover , since the left hand side of the equation is non - negative then the probability of failure of the algorithm @xmath32 , denoted by @xmath149 , is @xmath69 .",
    "this finishes proof of theorem [ thm : main ] .    ' '' ''      this proof contains five main steps and the most important ones are the steps 4 and 5 . before entering the details",
    "we give a high level description of the analysis .",
    "since the probabilities of selecting the edges ( denoted by @xmath36 ) are calculated by a poisson approximation , they are of the form @xmath151 . where each random variable @xmath152 or @xmath153 refers to the expected number of elements in a family of cycles ( see step 2 for the details ) .",
    "we partition the union of these families of cycles for all steps of the algorithm into two subsets depending on whether they are from a numerator term @xmath152 or a denominator term @xmath153 .",
    "we also consider a third set of cycles corresponding to non - suitable pairs ( referred to by forbidden pairs in step 3 below ) .",
    "the probability @xmath57 can be shown to be proportional to @xmath154 where each of @xmath155 , @xmath156 and @xmath157 is a function of the cycles in a unique family among the three families discussed above .",
    "we will show a combinatorial 1 to 1 correspondence between the cycles appearing in @xmath155 , @xmath156 , and the ones appearing in @xmath157 with negative signs .",
    "this simplifies the summation @xmath158 and produces the desired lower bound independent of the graph @xmath23 .",
    "[ [ step-1-using - jensens - inequality . ] ] step 1 : using jensen s inequality .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the first step is to write an expression for the probability that the algorithm @xmath32 does not fail and returns a _ fixed _",
    "graph @xmath159 .",
    "note that algorithm @xmath32 sequentially adds edges to an empty graph to produce a graph with @xmath4 edges .",
    "hence for the fixed graph @xmath23 there are @xmath160 permutations of the edges of @xmath23 that can be generated by algorithm @xmath32 and each permutation can have a different probability .",
    "let @xmath161 be any permutation of the edges of @xmath23 ( i.e. a one - to - one mapping from @xmath162 to the edges of @xmath23 ) , and let @xmath163 be the graph having @xmath164 as vertex set and @xmath165 as edge set .",
    "this is the partial graph that is generated after @xmath166 steps of the algorithm @xmath32 conditioned on having @xmath161 as output .",
    "now we can write @xmath167 . assuming that @xmath161 is a uniformly random permutation then the term @xmath168",
    "can be replaced by @xmath169 where @xmath170 is expectation with respect to the uniformly random permutations .",
    "thus we have @xmath171 where the inequality is by jensen s inequality for the convex function @xmath172 .",
    "[ [ step-2-estimate - for - the - probabilities - ppit1gpi_t . ] ] step 2 : estimate for the probabilities @xmath173 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    recall from section [ sec : idea ] , that in algorithm @xmath32 , after @xmath166 steps , the probability of adding an edge @xmath10 to a partially constructed graph @xmath35 should be proportional to the number of uniformly random extensions of @xmath174 to a graph in @xmath26 . using the poisson approximation",
    "this number is roughly proportional to @xmath175 where @xmath176 is defined to be the expected number of simple cycles of length at most @xmath0 if we add @xmath177 random edges to @xmath174 .",
    "define @xmath178 .",
    "it is easy to see that @xmath179 where @xmath180 and @xmath181 is the number of simple cycles in the complete graph on @xmath164 that have length @xmath73 , and include @xmath10 and exactly @xmath182 other edges of @xmath35 .",
    "in fact the rigorous statement is given by the following lemma and its proof is given in @xcite .",
    "[ lem : p(ij|g_t ) ] for any non - zero probability term @xmath36 we have @xmath183 where @xmath184 is a summation over all suitable pairs @xmath185 at step @xmath166 .    * note 1 . * in the definition of @xmath36 in section [ sec : alg - main - res ] we used matrix multiplication to count number of cycles which counts non - simple cycles as well .",
    "this is because it makes the implementation of the algorithm easier . for the analysis it is convenient to work with simple cycles and the above lemma",
    "provides the comparison that we need between these two methods of counting cycles .    [",
    "[ step-3-algebraic - modifications . ] ] step 3 : algebraic modifications .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    now we use the estimates given by lemma [ lem : p(ij|g_t ) ] in equation to obtain : @xmath186.\\end{gathered}\\ ] ] by condition @xmath187^{-1}$ ] the third term of the exponent is @xmath69 .",
    "now we are going to simplify the second term of the exponent .",
    "let us define @xmath188 where @xmath189 is number of all _ forbidden _ ( unsuitable ) pairs at step @xmath166 .",
    "now we drop the reference to @xmath190 for simplicity and obtain : @xmath191+\\log(z / z_0){\\nonumber}\\\\ & \\stackrel{(a)}{\\leq}&\\log(n - t)-\\frac{\\sum_{r=3}^kf_r}{n - t}+\\log(z / z_0){\\nonumber}\\\\ & \\stackrel{(b)}{\\leq}&\\log(n - t)-\\frac{\\sum_{r=3}^kf_r}{n}+\\log(z / z_0){\\nonumber}\\end{aligned}\\ ] ] where @xmath192 uses @xmath193 for @xmath194 $ ] and @xmath195 uses @xmath196 . using the above we will the following modified lower bound for @xmath57 : @xmath197.\\end{gathered}\\ ] ]    to simplify the notation , we will denote the three terms in the exponent by @xmath198 respectively .",
    "in particular : @xmath199 , @xmath200 and @xmath201 .",
    "_ next two steps are the most important parts of our effort in proving the inequality @xmath202 .",
    "_    [ [ step-4-simplifying - the - exponent - s_1gs_2gs_3 g . ] ] step 4 : simplifying the exponent @xmath203 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    this step shows the main benefit of leaving the calculation of approximation errors for @xmath204 to final steps .",
    "we will show that even though the terms @xmath205 for @xmath206 can be large and dependent on graph @xmath23 , their sum can be simplified to an expression which is independent of graph @xmath23 .",
    "in fact we will show that @xmath155 and @xmath156 will be completely canceled by the graph dependent parts of @xmath157 .",
    "first we are going to find a lower bound for the @xmath207 s .",
    "these lower bound are given with the following lemma .",
    "[ lem : s1-s2-s3-lbd ] let @xmath66 and constant @xmath67 be such that @xmath68^{-1}$ ] then for all but @xmath70 number of graphs @xmath133 the followings hold :    * @xmath208 * @xmath209 .",
    "* @xmath210 .    where @xmath211 is set of all simple cycles of length @xmath73 in complete graph on @xmath164 that include exactly @xmath182 edges of @xmath23 .",
    "let us start by providing a high level over view of the proof of this lemma and for now we just focus on @xmath212 . by definition @xmath213 .",
    "the first approximation we use is to change the randomness given by @xmath161 .",
    "the partial graph @xmath214 is a uniformly random subgraph of @xmath23 that has exactly @xmath166 edges .",
    "instead we look at @xmath215 which is a random subgraph of @xmath23 that has each edge of @xmath23 independently with probability @xmath216 .",
    "the subgraph @xmath215 has @xmath166 edges in expectation which makes it a good approximation for @xmath217 . with this substitution",
    ", one can see that @xmath218 is roughly equal to @xmath219 where @xmath10 is a uniformly random edge of @xmath23 .",
    "the next steps focus on expanding the @xmath220 .",
    "@xmath220 is summation of the terms @xmath221 for any couples @xmath222 where @xmath122 is a simple cycle of length @xmath73 on complete graph on @xmath164 that has @xmath182 edges of @xmath215 and @xmath10 is an edge of @xmath223 that is in @xmath122 as well . for any fixed @xmath224",
    "it can be shown that the expected number of such couples is dominated by the cases where @xmath225 that is when @xmath10 is the only edge of @xmath226 that is not in @xmath215 .",
    "moreover @xmath227 is approximately equal to @xmath228 .",
    "therefore the contribution of the pairs @xmath222 in @xmath212 for any fixed @xmath229 ( i.e. for all @xmath230 ) is the same .",
    "thus we obtain the right hand side of the lemma [ lem : s1-s2-s3-lbd](a ) .",
    "the above discussion is proven rigorously in @xcite .",
    "now we will show how @xmath158 is simplified using the above lower bounds .",
    "[ [ step-5-finishing - the - proof - of - p_sgeq-1-o1p_u . ] ] step 5 : finishing the proof of @xmath231 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    first we provide an estimate for number of graphs in the set @xmath26 . using janson s inequality @xcite",
    "one can obtain close approximation for number of graphs in the set @xmath26 .",
    "in fact janson s inequality shows the number of cycle of constant length in @xmath24 converges to a poisson random variable .",
    "the following lemma formalizes this statement .",
    "[ lem : numgraphs ] let @xmath66 and constant @xmath67 be such that @xmath232 .",
    "then @xmath233 is equal to @xmath234 $ ] .    where @xmath235 is the set of all simple cycles of length @xmath73 in the complete graph on vertices of @xmath164 .",
    "proof of lemma [ lem : numgraphs ] is given in appendix [ sec : pf - lem - numgraphs ] .",
    "next we will show that how different terms in the lower bounds for @xmath207 s in lemma [ lem : s1-s2-s3-lbd ] cancel each other .",
    "the main key in relating the terms in those lower bounds of @xmath207 s is the following equation which is obtained using integration by parts for @xmath236 : + @xmath237 therefore , combining equation and lemma [ lem : s1-s2-s3-lbd ] for all graphs @xmath23 in @xmath26 that satisfy lemma [ lem : s1-s2-s3-lbd ] ( all but @xmath69 fraction of the elements in @xmath26 ) we obtain : @xmath238 where the second inequality is the result of equation ( [ eqn : int - by - parts ] ) and some algebraic cancelations as follows .",
    "all terms in the lower bound for @xmath155 with @xmath239 are canceled with the corresponding terms in the lower bound for @xmath157 , and the @xmath240 term in the lower bound of @xmath155 is canceled with the lower bound of @xmath156 .",
    "therefore the uncanceled terms in @xmath203 are @xmath241 terms from the lower bound of @xmath157 .    comparing the right hand side of the equation and the expression for @xmath233 given by lemma [ lem : numgraphs ]",
    "we see that the only difference is the use of @xmath242 instead of @xmath243 . but note that for a cycle @xmath244 the probability that it intersects graphs @xmath23 is at most @xmath73 times the probability that a fixed edge of @xmath245 intersects @xmath23 ( union bound ) .",
    "therefore @xmath246 .",
    "this shows the following : @xmath247 thus , we obtain @xmath248 where @xmath249 uses lemma [ lem : numgraphs ] .    ' '' ''      the fact that algorithms @xmath32 has polynomial running time is clear since the matrix of the probabilities , @xmath250 , at any step can be calculated using matrix multiplication .",
    "in fact a nave calculation shows that @xmath250 can be calculated with @xmath251 operations .",
    "this is because @xmath252 for any @xmath73 takes @xmath253 operations to compute .",
    "so we obtain the simple bound of @xmath254 for the running time of the algorithm @xmath32 .",
    "but one can improve this running time by at least a factor @xmath3 with exploiting the structure of the matrices .",
    "recall that the matrix @xmath250 is proportional to @xmath255 $ ] .",
    "let us denote the matrix @xmath256 by @xmath257 .",
    "we also denote the adjacency matrix of the partially constructed graph @xmath35 at step @xmath166 by @xmath258 .",
    "notice that the adjacency matrix of all `` suitable pairs '' at step @xmath166 ( denoted by @xmath43 ) is equal to @xmath259 where @xmath260 is the @xmath3 by @xmath3 matrix of all ones and the operation @xmath261 for any matrix @xmath262 means that the `` sign '' function is applied to each entry of the matrix @xmath262 .",
    "this is correct since any non - suitable pair @xmath10 corresponds to a path in @xmath35 of length @xmath73 between @xmath7 and @xmath8 for @xmath263 .",
    "such path forces the @xmath264 entry of the matrix @xmath265 to be positive .",
    "now we can store the matrices @xmath266 and @xmath267 at the end of each iteration and use them to efficiently calculate @xmath268 and @xmath269 .",
    "this is because the differences @xmath270 and @xmath271 are very sparse matrices and hence updating the matrix multiplications can be done with @xmath272 operations which reduces the overall running time to @xmath6 .",
    "since theorem [ thm : main ] shows that algorithm @xmath32 is successful with probability @xmath273 then the expected running time of the algorithm @xmath32 for generating an element of the set @xmath26 is @xmath6 as well .",
    "a similar idea can extended to the algorithm bip-@xmath32 for generating ldpc codes .",
    "we leave a detailed analysis of the running time and implementation of these algorithms to the longer version of the paper .",
    "the authors would like to thank balaji prabhakar , joel spencer and daniel spielman for useful discussions .",
    "bayati and saberi were supported by nsf grants 0729586 , 0546889 , and montanari was supported by nsf grant 0743978 .",
    "bayati was also was supported by microsoft technical computing initiative",
    ".    99    d. alderson , j. doyle , and w. willinger , `` toward and optimization - driven framework for designing and generating realistic internet topologies '' , hotnets , 2002 .",
    "n. alon and j. spencer , `` the probabilistic method '' , _ wiley , ny _ , 1992 .",
    "a. amraoui , a. montanari and r. urbanke , `` how to find good finite - length codes : from art towards science '' , eur .",
    "telecomm . 18 ( 2007 ) , 491 - 508    m. bayati , a. montanari and a. saberi , _ generating random graphs with large girth _ , ( 2008 ) arxiv .",
    "m. bayati , j. h. kim and a. saberi , `` a sequential algorithm for generating random graphs '' , _ international workshop on randomization and computation _ , 2007 .",
    "j. blanchet , `` efficient importance sampling for binary contingency tables '' , preprint , 2007 .",
    "j. blitzstein and p. diaconis , `` a sequential importance sampling algorithm for generating random graphs with prescribed degrees '' , preprint , 2006 .",
    "b. bollobs , and o. riordan ,",
    "`` constrained graph processes '' , _ electronic journal of combinatorics _",
    ", 7 , 2000 .",
    "b. bollobs , random graphs , cambrdige university press , 2001 .",
    "t. bu and d. towsley , `` on distinguishing between internet power law topology generator '' , _ infocom _ ,",
    "y. chen , p. diaconis , s. holmes and j.s .",
    "liu , `` sequential monte carlo methods for statistical analysis of tables '' , _ journal of the american statistical association _ 100 , 109 - 120 , 2005 .",
    "s.  y.  chung , g.  d.  forney , jr .",
    ", t.  richardson and r.  urbanke , `` on the design of low - density parity - check codes within @xmath274 db of the shannon limit , '' ieee comm .",
    "lett .  5 ( 2001 ) , 58 - 60    m. faloutsos , p. faloutsos and c. faloutsos , `` on power - law relationships of the internet topology '' , _",
    "sigcom _ , 1999",
    ".    x. hu , e. eleftheriou and d. arnold , `` progressive edge - growth tanner graphs '' , proc . of globecom 01 , san antonio ,",
    "usa , nov 2001    x. hu , e. eleftheriou and d. arnold , `` regular and irregular progressive edge - growth tanner graphs '' , ieee trans . on inform .",
    "theory , 51 ( 2005 ) , 386 - 398    p. erds , s. suen , and p. winkler , `` on the size of a random maximal graph '' , _ random structure and algorithms _ , 6 , pp 309 - 318 , 1995 .",
    "s. janson , t. uczak , and a. rucinski , `` random graphs '' , wiley - interscience , 2000 .",
    "j. h. kim , v. h. vu , `` generating random regular graphs '' , acm symposium on theory of computing ( stoc ) , 213 - 222 , 2003 .",
    "d. knuth , `` mathematics and computer science : coping with finiteness '' , _ science _ 194(4271):1235 - 1242 , 1976 .",
    "r.  koetter and p.  vontobel , `` graph covers and iterative decoding of finite - lenght codes , '' int . conf . on turbo codes and rel .",
    "topics , brest , france , september 2003 .",
    "m.  luby , m.  mitzenmacher , a.  shokrollahi , d.  a.  spielman and v.  stemann , `` practical loss - resilient codes , '' @xmath275th annual acm symposium on theory of computing ( stoc ) , 1997 , pp .",
    "150 - 159    d.  j.  mackay and m.  s.  postol , `` weaknesses of margulis and ramanujan - margulis low - density parity - check codes '' , elec . notes in theor . comp .",
    "science 74 ( 2003 )    a. medina , i. matta and j. byers , `` on the origin of power laws in internet topologies '' , _ acm computer communication review _ ,",
    "18 - 28 , 2000 .",
    "r. milo , s. shenorr , s. itzkovitz , n. kashtan , d. chklovskii and u. alon , `` network motifs : simple building blocks of complex networks '' , _ science _ 298 , 824 - 827 , 2002 .",
    "a.  montanari , `` the asymptotic error floor of ldpc ensembles under bp decoding , '' 44rd allerton conference on comm .",
    "control and comp . ,",
    "monticello , il , sep 2006    j.  m.  f.  moura and j.  lu and h.  zhang `` structured low - density parity - check codes '' , ieee sign . proc . mag .",
    ", 21 ( 2004 ) , 42 - 55    d. osthus , and a. taraz , `` random maximal h - free graphs '' , _ random structures and algorithms _ , 1999 .",
    "c.  di , d.  proietti , i.  e.  teletar , t.  j.  richardson and r.  urbanke , `` finite - length analysis of low - density parity - check codes on the binary erasure channel '' , ieee trans .",
    "theory , 46 ( 2002 ) 1570 - 1579    a.  ramamoorthy and r.  wesel , `` construction of short block length irregular low - density parity - check codes '' ieee intern .",
    "conf . on comm . ,",
    "paris , june 2004    t.  richardson , `` error floors of ldpc codes '' , 41st allerton conference on comm .",
    "control and comp . ,",
    "monticello , il , sep 2003    t.  richardson and r.  urbanke , _ modern coding theory _ , cambridge university press , cambridge 2008    j.  rosenthal and p.  o.  vontobel , `` constructions of regular and irregular ldpc codes using ramanujan graphs and ideas from margulis '' , ieee symp . on inform .",
    "theory , washington , june 2001    a. rucinski , and n. wormald , `` random graph processes with degree restrictions '' , _ combin .",
    "_ 1 , pp 169 - 180 , 1992 .    a. sinclair , `` algorithms for random generation and counting : a markov chain approach '' , birkhuser , 1993",
    ".    a. steger and n.c .",
    "wormald , `` generating random regular graphs quickly '' , combinatorics , probab . and",
    "comput ( 8) , pp 377 - 396 , 1999 .",
    "a. steger , `` on the evolution of triangle - free graphs '' , combinatorics , probability and computing , 14 , pp 211 - 224 , 2005 .",
    "j. spencer , `` counting extensions '' , _ j. combin . theory ser .",
    "a _ 53 , pp247 - 255 , 1990 .",
    "j. spencer , `` maximal triangle - free graphs and ramsey r(3,t ) '' , unpublished manuscript , 1995",
    ".    m.  g.  stepanov , v.  y.  chernyak and m.  chertkov , `` diagnosis of weaknesses in modern error correction codes : a physics approach '' , phys rev .",
    "95 ( 2005 ) 228701 - 228704    h.tangmunarunkit , r.govindan , s.jamin , s.shenker , and w.willinger , `` network topology generators : degree based vs. structural '' , _ acm sigcom _ , 2002 .",
    "n. c. wormald , `` models of random regular graphs '' , _ surveys in combinatorics ( canterbury ) _ london math .",
    "lecture notes ser . ,",
    "cambridge univ . press ,",
    "cambridge , 239 - 298 , 1999 .",
    "h.  xiao and a.  h.  banihashemi , `` improved progressive - edge - growth ( peg ) construction of ldpc codes '' , proc .",
    "of globecom 04 , dallas , usa , nov 2004",
    "[ ssec : est - gnmk ]    first we approximate the random graph model @xmath24 with the erds - reyni model @xmath276 for @xmath277 .",
    "we will denote the probability with respect to the randomness in @xmath276 and @xmath24 by @xmath278 and @xmath279 respectively .",
    "let @xmath280 be the event that a random graph , selected from @xmath281 or @xmath282 , has girth greater than @xmath0 .",
    "first we will calculate the probability @xmath283 .",
    "then we will formalize the following approximation to obtain estimates for @xmath233 : @xmath284 .      in this section",
    "we briefly review janson inequality . given a collection of ` bad events ' @xmath285 , we would like to estimate the probability @xmath286 assuming that the events @xmath287 are `` almost independent '' .",
    "more formally , let @xmath288 be real numbers such that @xmath289 and for all @xmath290 @xmath291 and @xmath292 where @xmath293 means that the events @xmath294 are dependent .",
    "then janson s inequality is the following : @xmath295 in particular , for @xmath296 we obtain : @xmath297 .      by definition , @xmath283 is the probability that a random graph @xmath23 in @xmath276 has no cycle of length at most @xmath0 .",
    "define the set of all cycles of length @xmath73 in complete graph on @xmath164 by @xmath298 .",
    "let @xmath299 and consider the set of bad events @xmath300 where @xmath301 is the event that @xmath23 contains the cycle @xmath7 .",
    "it is not difficult to see that : @xmath302 and @xmath303 . and since @xmath304 then using janson s inequality we obtain : @xmath305 which gives the following for @xmath306 : @xmath307{\\nonumber}\\\\ & = & \\exp\\le[o(1)-\\sum_{r=3}^k|\\c_r|p^r\\ri]\\label{eq : pk - est}\\end{aligned}\\ ] ] where the last equality uses @xmath308 since @xmath309",
    ".        proof uses monotonicity of the events @xmath280 in the random models @xmath276 and @xmath24 ( see lemma 1.10 in @xcite ) .",
    "in particular for @xmath310 and @xmath311 the following inequalities hold : @xmath312 on the other hand for any @xmath313 the random graph model @xmath314 conditioning on graphs to have exactly @xmath4 edges is equivalent to the random graph model @xmath24 .",
    "thus for a random graph @xmath23 the following holds : @xmath315 similarly , one can obtain the following : @xmath316 where both @xmath192 and @xmath195 use monotonicity .",
    "now for a small constant @xmath317 let @xmath318 using heffding s inequality the followings hold @xmath319 this is due to a variation of the heffding s given in @xcite that for any @xmath313 and @xmath320 gives : @xmath321 now one can see that by taking @xmath322 we obtain : @xmath323 where @xmath324 uses @xmath325 . similarly we can prove the second inequality in . thus we can use equations , to obtain the following bound for @xmath326 : @xmath327+e^{-\\frac{m^\\beta}{8}}\\end{gathered}\\ ] ] and similarly using we get the lower bound : @xmath328-e^{-\\frac{m^\\beta}{8}}.\\end{gathered}\\ ] ] let @xmath329 then combining the above two inequalities : @xmath330}\\leq\\\\ e^{o(1)+h(p)-h(p_2)}+e^{h(p)-\\frac{m^\\beta}{8}}.\\end{gathered}\\ ] ] now we use @xmath331 , @xmath66 and apply the mean value theorem to @xmath332 to obtain @xmath333 for @xmath334 between @xmath335 , @xmath336 .",
    "since for @xmath337 we have @xmath338 and @xmath339 , one can simplify the equation to obtain the following @xmath340-\\frac{\\p_{n , m}(a_k)}{\\exp\\le[-h(p)\\ri]}\\big|\\\\ \\leq e^{o(n^{k\\alpha}-\\frac{n^{(1+\\alpha)\\beta}}{8})}.\\end{gathered}\\ ] ] we would like to have @xmath341 and @xmath342 which will give us @xmath343 .",
    "these inequalities can be achieved if @xmath344 satisfies @xmath345 and such @xmath344 exist since by assumption @xmath306 that guarantees the upper bound for @xmath344 is larger than the lower bound",
    ". therefore @xmath346\\\\ = { n\\choose m}\\exp\\le[o(1)-\\sum_{r=3}^k|\\c_r|\\le(\\frac{m}{n}\\ri)^r\\ri].\\end{gathered}\\ ] ] this finishes the proof ."
  ],
  "abstract_text": [
    "<S> we present a simple and efficient algorithm for randomly generating simple graphs without small cycles . </S>",
    "<S> these graphs can be used to design high performance low - density parity - check ( ldpc ) codes . for any constant @xmath0 , @xmath1 and @xmath2 , </S>",
    "<S> our algorithm generates an asymptotically uniform random graph with @xmath3 vertices , @xmath4 edges , and girth larger than @xmath0 in polynomial time . to the best of our knowledge </S>",
    "<S> this is the first polynomial - algorithm for the problem .    </S>",
    "<S> our algorithm generates a graph by sequentially adding @xmath4 edges to an empty graph with @xmath3 vertices . </S>",
    "<S> recently , these types of _ sequential _ methods for counting and random generation have been very successful @xcite . </S>"
  ]
}
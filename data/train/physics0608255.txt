{
  "article_text": [
    "partioning networks into communities is a fashionable statement of the graph clustering problem , which has been studied for decades and whose applications abound .",
    "recently , a new graph clustering index called _ modularity _ has been proposed  @xcite .",
    "it immediately prompted a number of follow - up studies concerning different applications and possible adjustments of the measure ( see , e.g. , @xcite ) .",
    "also , a wide range of algorithmic approaches approaches has been considered , for example based on a greedy agglomeration  @xcite , spectral division  @xcite , simulated annealing  @xcite and extremal optimization  @xcite .",
    "none of these algorithms , however , has been shown to be produce optimal partitions . while the complexity status of modularity maximization is open , it has been speculated  @xcite that it might be np - hard due to similarity with the max - cut problem .    in this paper",
    ", we provide the first complexity - theoretic argument as to why the problem of maximizing modularity is intractable by proving that it is np - complete in the strong sense .",
    "this means that there is no correct polynomial - time algorithm to solve this problem for every instance unless p  =  np .",
    "therefore , all of the above algorithms eventually deliver suboptimal solutions , and there is no hope for an efficient algorithm that computes maximum modularity partitions on all problem instances . in a sense ,",
    "our result thus justifies the use of heuristics for modularity optimization .",
    "modularity is a quality index for clusterings defined as follows .",
    "we are given a simple graph @xmath0 , where @xmath1 is the set of vertices and @xmath2 the set of ( undirected ) edges . if not stated otherwise , @xmath3 of a vertex @xmath4",
    "is the number of edges incident to @xmath5 .",
    "cluster _ or community @xmath6 is a subset of the vertices .",
    "a _ clustering _",
    "@xmath7 of @xmath8 is a partition of @xmath1 into clusters such that each vertex appears in exactly one cluster . with a slight disambiguation , the _ modularity _  @xcite @xmath9 of a clustering @xmath10 is defined as @xmath11~,\\ ] ] where @xmath12 denotes the set of edges between vertices in clusters @xmath13 and @xmath14 , and @xmath15 .",
    "note that @xmath14 ranges over all clusters , so that edges in @xmath16 are counted twice in the squared expression .",
    "this is to adjust proportions , since edges in @xmath12 , @xmath17 , are counted twice as well , once for each order of the arguments .",
    "note that we can rewrite eq .   into the more convenient form @xmath18~.\\ ] ] it reveals an inherent trade - off : to maximize the first term , many edges should be contained in clusters , whereas minimization of the second term is achieved by splitting the graph into many clusters of small total degrees . in the remainder of this paper",
    ", we will make use of this formulation .",
    "to formulate our complexity - theoretic result , we need to consider the following decision problem underlying modularity maximization .",
    "[ modularity ] given a graph @xmath8 and a number @xmath19 , is there a clustering @xmath10 of @xmath8 , for which @xmath20 ?",
    "note that we may ignore the fact that , in principle , @xmath19 could be a real number in the range @xmath21 $ ] , because @xmath22 is integer for every partition @xmath10 of @xmath8 and polynomially bounded in the size of @xmath8 .",
    "note also that modularity maximization can not be easier than the decision problem , because determining the maximum possible modularity index of a graph immediately yields an answer to the decision question .",
    "our hardness result for modularity  is based on a transformation from the following decision problem .",
    "[ 3-partition ] given @xmath23 positive integer numbers @xmath24 such that the sum @xmath25 and @xmath26 for an integer @xmath27 and for all @xmath28 , is there a partition of these numbers into @xmath29 sets , such that the numbers in each set sum up to @xmath27 ?",
    "we will show that an instance @xmath30 of 3-partitioncan be transformed into an instance @xmath31 of modularity , such that @xmath32 has a clustering with modularity at least @xmath33 , if and only if @xmath24 can be partitioned into @xmath29 sets of sum @xmath34 each .",
    "it is crucial that 3-partition  is _ strongly _ np - complete  @xcite , i.e.  the problem remains np - complete even if the input is represented in unary coding .",
    "this implies that no algorithm can decide the problem in time polynomial even in the sum of the input values , unless @xmath35 .",
    "more importantly , it implies that our transformation need only be pseudo - polynomial .",
    "the reduction is defined as follows . from an instance",
    "@xmath36 of 3-partition , construct a graph @xmath32 with @xmath29 cliques ( completly connected subgraphs ) @xmath37 of size @xmath38 each .",
    "for each element @xmath39 we introduce a single _ element vertex _ , and connect it to @xmath40 vertices in each of the @xmath29 cliques in such a way that each clique member is connected to exactly one element vertex .",
    "it is easy to see that each clique vertex then has degree @xmath41 and the element vertex corresponding to element @xmath42 has degree @xmath43 .",
    "the number of edges in @xmath32 is @xmath44 .",
    "see fig .",
    "[ fig : npc : construct ] for an example .     an example graph @xmath32 for the instance @xmath45 of 3-partition .",
    "edge colors indicate edges to and within the @xmath46 cliques @xmath47 ( red ) and @xmath48 ( blue ) .",
    "vertex labels indicate the corresponding numbers @xmath49 . ]",
    "note that the size of @xmath32 is polynomial in the unary coding size of @xmath36 , so that our transformation is indeed pseudo - polynomial .    before specifying bound @xmath33 for the instance of modularity , we will show three properties of maximum modularity clusterings of @xmath32 .",
    "together these properties establish the desired characterization of solutions for 3-partition  by solutions for modularity .    in a maximum modularity clustering of @xmath32 , none of the cliques @xmath37 is split .",
    "we consider a clustering @xmath10 that splits a clique @xmath50 into different clusters and then show how to obtain a clustering with strictly higher modularity .",
    "suppose that @xmath51 , @xmath52 , are the clusters that contain vertices of @xmath53 . for @xmath54",
    "we denote by    * @xmath55 the number of vertices of @xmath53 contained in cluster @xmath56 , * @xmath57 the number edges between vertices in @xmath56 , * @xmath58 the number of edges between vertices of @xmath53 in @xmath56 and element vertices in @xmath56 , * @xmath59 be the sum of degrees of all vertices in @xmath56 .",
    "the contribution of @xmath60 to @xmath9 is @xmath61 now suppose we create a clustering @xmath62 by rearranging the vertices in @xmath60 into clusters @xmath63 , such that @xmath14 contains exactly the vertices of clique @xmath53 , and each @xmath64 , @xmath65 , the remaining elements of @xmath56 ( if any ) . in this new clustering the number of covered edges reduces by @xmath66 , because all vertices from @xmath53 are removed from the clusters @xmath64 .",
    "this labels the edges connecting the clique vertices to other non - clique vertices of @xmath56 as inter - cluster edges .",
    "for @xmath53 itself there are @xmath67 edges that are now additionally covered due to the creation of cluster @xmath14 . in terms of degrees",
    "the new cluster @xmath14 contains @xmath41 vertices of degree @xmath41 .",
    "the sums for the remaining clusters @xmath64 are reduced by the degrees of the clique vertices , as these vertices are now in @xmath14 .",
    "so the contribution of these clusters to @xmath68 is given by @xmath69 so that @xmath70 using the fact that @xmath71 , substituting @xmath44 and rearranging terms we get @xmath72 for the last inequality we use the fact that @xmath73 .",
    "this inequality holds because @xmath56 contains at least the @xmath55 vertices of degree @xmath41 from the clique @xmath53 .",
    "in addition it contains both the clique and element vertices for each edge counted in @xmath58 . for each such edge",
    "there are @xmath74 other edges connecting the element vertex to the @xmath74 other cliques .",
    "hence , we get a contribution of @xmath75 in the degrees of the element vertices . combining the terms @xmath55 and one of the terms @xmath76 we get @xmath77 for the last step we note that @xmath78 and @xmath79 for all @xmath80 .",
    "so increasing @xmath58 decreases the modularity difference . for each vertex of @xmath53",
    "there is at most one edge to a vertex not in @xmath53 , and thus @xmath81 .",
    "+ by rearranging and using the fact that @xmath82 we get @xmath83 as we can assume @xmath84 for all relevant instances of 3-partition .",
    "this shows that any clustering can be improved by merging each clique completely into a cluster .",
    "this proves the lemma .",
    "next , we observe that the optimum clustering places at most one clique completely into a single cluster .    in a maximum modularity clustering of @xmath32",
    ", every cluster contains at most one of the cliques @xmath37 .",
    "consider a maximum modularity clustering .",
    "the previous lemma shows that each of the @xmath29 cliques @xmath37 is entirely contained in one cluster .",
    "assume that there is a cluster @xmath13 which contains at least two of the cliques .",
    "if @xmath13 does not contain any element vertices , then the cliques form disconnected components in the cluster . in this case it is easy to see that the clustering can be improved by splitting @xmath13 into distinct clusters , one for each clique . in this way",
    "we keep the number of edges within clusters the same , however , we reduce the squared degree sums of clusters . + otherwise , we assume @xmath13 contains @xmath85 cliques completely and in addition some element vertices of elements @xmath86 with @xmath87 .",
    "note that inside the @xmath88 cliques @xmath89 edges are covered .",
    "in addition , for every element vertex corresponding to an element @xmath86 there are @xmath90 edges included .",
    "the degree sum of the cluster is given by the @xmath91 clique vertices of degree @xmath41 and some number of element vertices of degree @xmath92 .",
    "the contribution of @xmath13 to @xmath9 is thus given by @xmath93 now suppose we create @xmath62 by splitting @xmath13 into @xmath94 and @xmath95 such that @xmath94 completely contains a single clique @xmath53 .",
    "this leaves the number of edges covered within the cliques the same , however , all edges from @xmath53 to the included element vertices eventually drop out .",
    "the degree sum of @xmath94 is exactly @xmath96 , and so the contribution of @xmath94 and @xmath95 to @xmath68 is given by @xmath97 considering the difference we note that @xmath98 as @xmath99 for all instances of 3-partition .",
    "since the clustering is improved in each case , it is not optimal .",
    "this is a contradiction .",
    "the previous two lemmas show that any clustering can be strictly improved to a clustering that contains @xmath29 _ clique clusters _",
    ", such that each one completely contains one of the cliques @xmath37 ( possibly plus some additional element vertices ) .",
    "in particular , this must hold for the optimum clustering as well .",
    "now that we know how the cliques are clustered we turn to the element vertices . + as they are not directly connected , it is never optimal to create a cluster consisting only of element vertices .",
    "splitting such a cluster into singleton clusters , one for each element vertex , reduces the squared degree sums but keeps the edge coverage at the same value .",
    "hence , such a split yields a clustering with strictly higher modularity .",
    "the next lemma shows that we can further strictly improve the modularity of a clustering with a singleton cluster of an element vertex by joining it with one of the clique clusters .    in a maximum modularity clustering of @xmath32",
    ", there is no cluster composed of element vertices only .",
    "consider a clustering @xmath10 of maximum modularity and suppose that there is an element vertex @xmath100 corresponding to the element @xmath40 , which is not part of any clique cluster . as argued above we can improve such a clustering by creating a singleton cluster @xmath101 .",
    "suppose @xmath102 is the clique cluster , for which the sum of degrees is minimal .",
    "we know that @xmath102 contains all vertices from a clique @xmath53 and eventually some other element vertices for elements @xmath86 with @xmath103 for some index set @xmath104 .",
    "the cluster @xmath102 covers all @xmath105 edges within @xmath53 and @xmath106 edges to element vertices .",
    "the degree sum is @xmath96 for clique vertices and @xmath107 for element vertices .",
    "as @xmath13 is a singleton cluster , it covers no edges and the degree sum is @xmath43 .",
    "this yields a contribution of @xmath13 and @xmath102 to @xmath9 of @xmath108 again , we create a different clustering @xmath62 by joining @xmath13 and @xmath102 to a new cluster @xmath14 .",
    "this increases the edge coverage by @xmath40 .",
    "the new cluster @xmath14 has the sum of degrees of both previous clusters . the contribution of @xmath14 to @xmath68",
    "is given by @xmath109 so that @xmath110 at this point recall that @xmath102 is the clique cluster with the minimum degree sum .",
    "for this cluster the elements corresponding to included element vertices can never sum to more than @xmath111 .",
    "in particular , as @xmath100 is not part of any clique cluster , the elements of vertices in @xmath102 can never sum to more than @xmath112 .",
    "thus , @xmath113 and so @xmath114 .",
    "this contradicts the assumption that @xmath10 is optimal .",
    "we have shown that for the graphs @xmath32 the clustering of maximum modularity consists of exactly @xmath29 clique clusters , and each element vertex belongs to exactly one of the clique clusters . finally , we are now ready to state our main result .",
    "modularity  is strongly np - complete .    for a given clustering @xmath10 of @xmath32",
    "we can check in polynomial time whether @xmath115 , so clearly modularity  @xmath116 np .    for np - completeness",
    "we transform an instance @xmath30 of 3-partition  into an instance @xmath31 of modularity .",
    "we have already outlined the construction of the graph @xmath32 above .",
    "for the correct parameter @xmath33 we consider a clustering in @xmath32 with the properties derived in the previous lemmas , i.e.  a clustering with exactly @xmath29 clique clusters .",
    "any such clustering yields exactly @xmath117 inter - cluster edges , so the edge coverage is given by @xmath118 hence , the clustering @xmath119 with maximum modularity must minimize @xmath120 this requires to equilibrate the element vertices according to their degree as good as possible between the clusters . in the optimum case",
    "we can assign each cluster element vertices corresponding to elements that sum to @xmath121 . in this case",
    "the sum of degrees of element vertices in each clique cluster is equal to @xmath122 .",
    "this yields @xmath123 for each clique cluster @xmath56 , @xmath124 , and gives @xmath125 equality holds only in the case , in which an assignment of @xmath27 to each cluster is possible .",
    "hence , if there is a clustering @xmath10 with @xmath9 of at least @xmath126 then we know that this clustering must split the element vertices perfectly to the @xmath29 clique clusters . as each element vertex is contained in exactly one cluster , this yields a solution for the instance of 3-partition . with this choice of @xmath33 the instance @xmath31 of modularity  is satisfiable only if the instance @xmath36 of 3-partition  is satisfiable .",
    "+ otherwise , suppose the instance for 3-partition  is satisfiable .",
    "then there is a partition into @xmath29 sets such that the sum over each set is @xmath127 .",
    "if we cluster the corresponding graph by joining the element vertices of each set with a different clique , we get a clustering of modularity @xmath33 .",
    "this shows that the instance @xmath128 of modularity  is satisfiable if the instance @xmath36 of 3-partition  is satisfiable .",
    "this completes the reduction and proves the theorem .",
    "we have shown that maximizing the popular modularity clustering index is strongly np - complete .",
    "these results can be generalized to modularity in weighted graphs .",
    "we can consider the graph @xmath8 to be completely connected and use weights of 0 and 1 on each edge to indicate its presence . instead of the numbers of edges",
    "the definition of modularity then employs the sum of edge weights for edges within clusters , between clusters and in the total graph .",
    "this yields an equivalent definition of modularity for graphs , in which the existence of an edge is modeled with binary weights .",
    "an extension of modularity to arbitrarily weighted graphs is then straightforward .",
    "our hardness result holds also for the problem of maximizing modularity in weighted graphs , as this more general problem class includes the problem considered in this paper as a special case .",
    "+ our hardness result shows that there is no polynomial - time algorithm optimizing modularity unless p  =  np . recently proposed algorithms  @xcite are therefore incorrect in the sense that they yield suboptimal solutions on many instances .",
    "furthermore , it is a justification to use approximation algorithms and heuristics to cope with the problem .",
    "future work includes a deeper formal analysis of the properties of modularity and the development of algorithms with performance guarantees ."
  ],
  "abstract_text": [
    "<S> several algorithms have been proposed to compute partitions of networks into communities that score high on a graph clustering index called modularity . </S>",
    "<S> while publications on these algorithms typically contain experimental evaluations to emphasize the plausibility of results , none of these algorithms has been shown to actually compute optimal partitions . </S>",
    "<S> we here settle the unknown complexity status of modularity maximization by showing that the corresponding decision version is np - complete in the strong sense . as a consequence , </S>",
    "<S> any efficient , i.e.  polynomial - time , algorithm is only heuristic and yields suboptimal partitions on many instances . </S>"
  ]
}
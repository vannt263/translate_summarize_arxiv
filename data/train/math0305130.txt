{
  "article_text": [
    "-5 mm    this paper reviews recent work on algorithms for static hamilton - jacobi equations of the form @xmath0 ; the solution @xmath1 depends on @xmath2 , and boundary conditions are supplied on a subset of @xmath3 .",
    "these equations arise in such areas as wave propagation , optimal control , anisotropic front propagation , medical imaging , optics , and robotic navigation .",
    "we develop algorithms to solve these equations remarkably quickly , with the same optimal efficiency as classic algorithms for shortest paths on discrete weighted networks , but extended to continuous hamilton - jacobi equations .    the algorithms , which rely on a close examination of the flow of information inherent in static hamilton - jacobi equations , are robust , unconditionally stable without time step restriction , and efficient .",
    "they are `` one - pass '' schemes , in that the solution is computed at @xmath4 grid points in @xmath5 steps .",
    "-5 mm    what is meant by a _ solution _ to @xmath0 ?",
    "viscosity solutions @xcite provide a unique and well - posed formulation which is linked to the unique viscosity limit of the associated smoothed equation ; these are first arrivals in the propagation of information .",
    "[ figure_ion]a shows an example from semiconductor manufacturing in which a beam whose strength is angle - dependent is used to anistropically etch away a metal surface .",
    "[ figure_ion]b shows an optimal control problem to find the shortest exit path for a vehicle with position and direction - dependent speed .",
    "@xmath6    @xmath7    @xmath8    @xmath9    @xmath10    @xmath11    the above are viscosity solutions",
    ". however , there are many cases in which later arrivals , or `` non - viscosity '' solutions , are desirable . fig .",
    "[ figure_wave]a shows the propagation of a wave inwards from a square boundary ; the evolving front passes through itself and later arrivals form cusps and swallowtails as they move ; fig .",
    "[ figure_wave]b shows multiple arrivals in geophysical wave propagation .",
    "[ figure_wave]a    @xmath12    @xmath13    our goal is to create efficient algorithms which allow us to compute both types of solutions . in the case of viscosity solutions ,",
    "algorithms are provided by the class of `` ordered upwind methods '' developed by sethian and vladimirsky in @xcite ; these methods work in physical space and construct the solution in a `` one - pass '' manner through a careful adherence to a causality inherent in the characteristic flow of the information . in the case of non - viscosity solution , algorithms are provided by the time - independent phase - space formulation developed by fomel and sethian @xcite , which relies on conversion of multiple arrivals into an eulerian static boundary value problem , which can also be solved very efficiently in a `` one - pass '' manner which avoids all iteration through a careful ordering procedure . the remainder of this paper is devoted to describing these two classes of algorithms and providing a few computational results .",
    "-5 mm    we first discuss `` ordered upwind methods '' introduced in @xcite for computing viscosity solutions .",
    "-5 mm    consider a discrete optimal trajectory problem on a network . given a network and a cost associated with each node ,",
    "the global optimal trajectory is the most efficient path from a starting point to some exit set in the domain .",
    "dijkstra s classic algorithm @xcite computes the minimal cost of reaching any node on a network in @xmath14 operations . since the cost can depend on both the particular node , and the particular link , dijkstra s method applies to both _",
    "isotropic _ and _ anisotropic _ control problems .",
    "the distinction is minor for discrete problems , but significant for continuous problems .",
    "dijkstra s method is a `` one - pass '' algorithm ; each point on the network is updated a constant number of times to produce the solution .",
    "this efficiency comes from a careful analysis of the direction of information propagation and stems from the optimality principle .",
    "we briefly summarize dijsktra s method , since the flow logic will be important in explaining our ordered upwind methods .",
    "for simplicity , imagine a rectangular grid of size @xmath15 , where the cost @xmath16 is given for passing through each grid point @xmath17 .",
    "given a starting point , the minimal total cost @xmath18 of arriving at the node @xmath19 can be written in terms of the minimal total cost of arriving at its neighbors : @xmath20    to find the minimal total cost , dijkstra s method divides mesh points into three classes : @xmath21 ( no information about the correct value of @xmath22 is known ) , @xmath23 ( the correct value of @xmath22 has been computed ) , and @xmath24 ( adjacent to @xmath23 ) .",
    "the algorithm proceeds by moving the smallest @xmath24 value into the @xmath23 set , moving its @xmath21 neighbors into the @xmath24 set , and recomputing all _ considered _ neighbors according to formula [ equation_dijkstra ] .",
    "this algorithm has the computational complexity of @xmath25 ; the factor of @xmath26 reflects the necessity of maintaining a sorted list of the @xmath24 values @xmath27 to determine the next @xmath23 mesh point .",
    "efficient implementation can be obtained using heap - sort data structures .",
    "-5 mm    consider now the problem of continuous optimal control ; here , the goal is to find the optimal path from a starting position to an exit set .",
    "dijkstra s method does not converge to the continuous solution as the mesh becomes finer and finer , since ( see @xcite ) it produces the solution to the partial differential equation @xmath28 where @xmath15 is the grid size .",
    "as @xmath15 goes to zero , this does not converge to the solution of the continuous eikonal problem given by @xmath29 thus , dikstra s method can not be used to obtain a solution to the continuous problem .",
    "-5 mm    in the case of isotropic cost functions in which the cost depends only on position and not on direction , two recent algorithms , first tsitsiklis s method @xcite and then sethian s fast marching method @xcite have been introduced to solve the problems with the same computational complexity as dijkstra s method .",
    "both methods exploit information about the flow of information to obtain this efficiency ; the causality allows one to build the solution in increasing order , which yields the dijkstra - like nature of the solutions . both algorithms result from a key feature of eikonal equations , namely that their characteristic lines coincide with the gradient lines of the viscosity solution @xmath30 ; this allows the construction of one - pass algorithms .",
    "tsitsiklis algorithm evolved from studying isotropic min - time optimal trajectory problems , and involves solving a minimization problem to update the solution .",
    "sethian s fast marching method evolved from studying isotropic front propagation problems , and involves an upwind finite difference formulation to update the solution .",
    "each method starts with a particular ( and different ) coupled discretization and each shows that the resulting system can be decoupled through a causality property .",
    "we refer the reader to these references for details on ordered upwind methods for eikonal equations , as well as @xcite for a detailed discussion about the similarities and differences between the two techniques .",
    "-5 mm    consider now the full continuous optimal control problem , in which the cost function depends on both position and direction . in @xcite , sethian and vladimirsky built and developed",
    "single - pass `` ordered upwind methods '' for any continuous optimal control problem .",
    "they showed how to to produce the solution @xmath27 by recalculating each @xmath27 at most @xmath31 times , where @xmath31 depends only the equation and the mesh structure , but not upon the number of mesh points .",
    "building one - pass dijkstra - like methods for general optimal control is considerably more challenging than it is for the eikonal case , since characteristics no longer coincide with gradient lines of the viscosity solution .",
    "thus , characteristics and gradient lines may in fact lie in different simplexes .",
    "this is precisely why both sethian s fast marching method and tsitsiklis algorithm can not be directly applied in the anisotropic ( non - eikonal ) case : it is no longer possible to de - couple the system by computing / accepting the mesh points in the ascending order .",
    "the key idea introduced in @xcite is to use the location anisotropy of the cost function to limit of the number of points on the accepted front that must be examined in the update of each considered point . consider the anisotropic min - time optimal trajectory problems , in which the speed of motion depends not only on position but also on direction .",
    "the value function @xmath1 for such problems is the viscosity solution of the static hamilton - jacobi - bellman equation @xmath32 in this formulation , @xmath33 is the unit vector determining the direction of motion , @xmath34 is the speed of motion in the direction @xmath33 starting from the point @xmath35 , and @xmath36 is the time - penalty for exiting the domain at the point @xmath37 .",
    "the maximizer @xmath33 corresponds to the characteristic direction for the point @xmath38 .",
    "if @xmath39 does not depend on @xmath33 , eqn .",
    "[ eq : general2 ] reduces to the eikonal equation , see @xcite .",
    "now , define the anisotropy ratio @xmath40 , where @xmath41 . in @xcite ,",
    "two key lemmas were proved :    *   * lemma 1 .",
    "* _ consider the characteristic passing through @xmath42 and level curve @xmath43 , where @xmath44 . the characteristic intersects that level set at some point @xmath45 . if @xmath46 is distance @xmath47 away from the level set then @xmath48 _ *   * lemma 2 . * _ consider an unstructured mesh @xmath49 of diameter @xmath15 on @xmath50 .",
    "consider a simple closed curve @xmath51 lying inside @xmath50 with the property that for any point @xmath38 on @xmath51 , there exists a mesh point @xmath52 inside @xmath51 such that @xmath53 .",
    "suppose the mesh point @xmath54 has the smallest value @xmath55 of all of the mesh points inside the curve . if the characteristic passing through @xmath54 intersects that curve at some point @xmath56 then @xmath57 _",
    "thus , one may use the anisotropy ratio to exclude a large fraction of points on the accepted front in the update of any considered point ; the size of this excluded subset depends on the anisotropy ratio . building on these results , a fast , dijkstra - like method was constructed .",
    "as before , three of mesh points classes are used .",
    "the _ accepted front _ is defined as a set of @xmath23 mesh points , which are adjacent to some not - yet - accepted mesh points .",
    "define the set @xmath58 of the line segments @xmath59 , where @xmath60 and @xmath61 are adjacent mesh points on the @xmath62 , such that there exists a @xmath24 mesh point @xmath63 adjacent to both @xmath60 and @xmath61 . for each @xmath24 mesh point @xmath63",
    "one defines the part of @xmath58 `` relevant to @xmath63 '' : @xmath64 we will further assume that some consistent upwinding update formula is available : if the characteristic for @xmath63 lies in the simplex @xmath65 then @xmath66 . for the sake of notational simplicity we will refer to this value as @xmath67 .    1 .   start with all mesh points in @xmath21 ( @xmath68 ) .",
    "2 .   move the boundary mesh points ( @xmath69 ) to @xmath23 ( @xmath70 ) .",
    "3 .   move all the mesh points @xmath63 adjacent to the boundary into @xmath24 and evaluate the tentative value of @xmath71 .",
    "4 .   find the mesh point @xmath72 with the smallest value of @xmath22 among all the @xmath24 .",
    "5 .   move @xmath72 to @xmath23 and update the _ accepted front_. 6 .",
    "move the @xmath21 mesh points adjacent to @xmath72 into @xmath24 .",
    "recompute the value for all the @xmath24 @xmath63 within the distance @xmath73 from @xmath72 .",
    "if less than the previous tentative value for @xmath63 then update @xmath27 .",
    "if @xmath24 is not empty then go to 4 ) .",
    "-5 mm    this is a  single - pass \" algorithm since the maximum number of times each mesh point can be re - evaluated is bounded by the number of mesh points in the @xmath73 neighborhood of that point ; the method formally has the computational complexity of @xmath74 .",
    "convergence of the method to the viscosity solution is proved in @xcite , and depends on the upwinding update formula @xmath75 .",
    "as an example , taken from @xcite , we compute the geodesic distance on the manifold @xmath76 from the origin .",
    "this can be shown to be equivalent to solving the static hamilton - jacobi equation @xmath77 with speed function @xmath78 given by @xmath79 where @xmath80 is the angle between @xmath81 and the positive direction of the @xmath38-axis .",
    "the anisotropy is substantial , since the dependence of @xmath78 upon @xmath80 can be pronounced when @xmath82 is relatively large .",
    "equidistant contours are shown on the left in figure [ figure_front_ani ] .",
    "-5 mm        we now consider the problem of multiple arrivals . as an example , consider the two - dimensional eikonal equation @xmath84 with @xmath85 given .",
    "we imagine a computational domain and a source point , as shown on the right in figure [ figure_front_ani ] .",
    "suppose the goal is to determine the arrival time and path to each point in the interior from the source point . here , we are interested not only in the first arrival , but all later arrivals as well",
    ".    one popular approach to computing multiple arrivals is to work in phase space , in which the dimensionality of the problem is increased from physical space to include the derivative of the solution as well .",
    "there are two approaches to computing these multiple arrivals through a phase space formulation .",
    "one is a lagrangian ( ray tracing ) approach , in which the phase space characteristic equations are integrated , often from a source point , resulting in a lagrangian structure which fans out over the domain .",
    "difficulties can occur in either in low ray density zones where there are very few rays or near caustics where rays cross .",
    "the other is an eulerian description of the problem , in either the physical domain or phase space . in recent years",
    ", this has led to many fascinating and clever eulerian pde - based approaches to computing multiple arrivals , see , for example , @xcite .",
    "we note that the regularity of the phase space has been utilized previously in theoretical studies on the asymptotic wave propagation @xcite .",
    "the above phase space approaches to solving for multiple arrivals have two characteristics in common :    * a phase space formulation increases the dimensionality of the problem . in two physical dimensions , the phase space formulation requires three dimensions ; in three physical dimensions , the phase space formulation is in five dimensions .",
    "* given particular sources , the problem is solved with those source location(s ) as initial data .",
    "different sources requires re - solving the entire problem . *",
    "the problem is cast as an initial value partial differential equation , and is evolved in time .",
    "time step considerations in regions of high velocity play a role in the stability of the underlying scheme .",
    "fomel and sethian @xcite take a different approach .",
    "a set of time - independent `` escape equations '' are derived , each of which is an eulerian boundary value partial differential equation in phase space .",
    "together , they give the exit time , location and derivative of all possible trajectories starting from all possible interior points .",
    "thus , the particular choice of sources is reduced to post - processing .",
    "the computational speed depends on whether one wants to obtain results for all possible boundary conditions , or in fact only for a particular subset of possibilities",
    ".        briefly ( see @xcite for details ) begin with the static hamilton - jacobi equation @xmath86 and write the well - known characteristic equations in phase space @xmath87 , where @xmath88 corresponds to @xmath89 ( see , for example , @xcite ) .",
    "the characteristics must obey @xmath90 differentiating the function @xmath91 , we obtain an additional equation for transporting the function @xmath1 along the characteristics : @xmath92 eqns . [",
    "eq : ham - jac],[eq : dudx ] can be initialized at @xmath93 : @xmath94 , @xmath95 , @xmath96 .",
    "one can now convert the phase space approach into a set of liouville equations . to simplify notation",
    ", we denote the phase - space vector @xmath97 , by @xmath52 , the right - hand side of system given in eqn .",
    "[ eq : ham - jac ] by vector function @xmath98 , and the right - hand side of eqn .",
    "[ eq : dudx ] by the function @xmath99 . in this notation ,",
    "the hamilton - jacobi system is @xmath100 and is initialized at @xmath93 as @xmath101 and @xmath102 .",
    "this system satisfies @xmath103 and the transported function  @xmath1 satisfies the analogous equation @xmath104 where @xmath105 denotes the gradient with respect to @xmath106 .",
    "these are the liouville equations .",
    "the key idea in @xcite is as follows .",
    "assume a closed boundary @xmath107 in the @xmath52 space that is crossed by every characteristic trajectory originating in @xmath108 .",
    "this defines for every @xmath106 the function @xmath109 of the first crossing of the corresponding characteristic with @xmath107 .",
    "now introduce a differentiable function @xmath110 that identifies the boundary , that is , @xmath111 .",
    "in particular , we then have that @xmath112 .",
    "one can then differentiate with respect to the initial condition @xmath106 to obtain an escape equation for the parameter @xmath113 .",
    "similarly , one can derive escape equations for the position and value , yielding the full set of          summarizing , rather than compute in physical space , we derive boundary value escape equations in phase space @xmath115 . all time step considerations are avoided , and one can compute all the arrivals from all possible sources simultaneously .",
    "this eulerian formulation means that the entire domain is covered , even quiet slow zones .",
    "finally , and most importantly , a constructive , `` one - pass '' algorithm , similar to the one presented for viscosity solutions , can be designed .",
    "exit time , position , and derivative at the boundary form boundary conditions .",
    "we can then systematically march the solution inwards in phase space from the boundary , constructing the solution through an ordering sequence based on the characteristics that ensures computational phase space mesh points need not be revisited more than once .",
    "consider a square boundary as an example , and suppose we wish to find the time @xmath116 at which a ray leaving the initial point @xmath117 inside the square , initially moving in direction @xmath118 , hits the boundary .",
    "we assume that the slowness field @xmath119 is given .",
    "first , note that the set @xmath120 , drawn in @xmath121 space , gives the set of all initial positions and directions which reach the boundary of the square at time @xmath122 . by the uniqueness of characteristics , the set of all points parameterized by @xmath122 and given by @xmath123",
    "sweep out the solution space .",
    "figure [ figure.surface]a shows the solution surfaces @xmath124 for the collapsing square .",
    "details on the exact algorithm are given in @xcite .",
    "as demonstration ( see @xcite ) , in figure [ figure.surface]b , the top pair shows all the arrivals starting from a source at the center of the top wall , together with the slowness field on the right ( darker is slower ) .",
    "the bottom pair shows the first arrival and on the amplitude of the displayed arrival ( the lighter the tone , the more amplitude ) .",
    "symes , w.w . , a slowness matching finite difference algorithm for traveltimes beyond transmission caustics , proc . ,",
    "68th annual int .",
    "meeting of the soc .",
    ", new orleans , expanded astract , ( 1998 ) ."
  ],
  "abstract_text": [
    "<S> we review some recent work in fast , efficient and accurate methods to compute viscosity solutions and non - viscosity solutions to static hamilton - jacobi equations which arise in optimal control , anisotropic front propagation , and multiple arrivals in wave propagation . for viscosity solutions , </S>",
    "<S> the class of algorithms are known as `` ordered upwind methods '' , and rely on a systematic ordering inherent in the characteristic flow of information . for non - viscosity </S>",
    "<S> multiple arrivals , the techniques hinge on a static boundary value phase - space formulation which again can be solved through a systematic ordering .    </S>",
    "<S> 4.5 mm    * 2000 mathematics subject classification : * 65n06 , 65m06 , 86a22 , 49l25 .    * keywords and phrases : * hamilton - jacobi equations , fast marching methods , ordered upwind methods . </S>"
  ]
}
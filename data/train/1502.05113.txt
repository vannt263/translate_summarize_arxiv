{
  "article_text": [
    "the behaviors of many of the world s inhabitants are fundamentally bound by the cycle of the sun and the moon which creates day and night .",
    "it is the reason why across the days of an average person , there often exist periodical patterns for their mobility or more generally , their behavior @xcite .",
    "utilizing such re - occurring patterns could drastically benefit various modern ubiquitous applications .",
    "for example , the ability to predict a day s power consumption of many individual houses at midday will be profoundly beneficial for the smart grid to manage dynamically its power supply resources .",
    "while in the scenario of smart location tracking @xcite , with a replenish - able energy budget the system either aims to minimize the energy efficiency of location tracking , or attempts to maximize the tracking accuracy given a fixed energy budget .",
    "a crucial challenge involved in such a smart tracking system is to estimate at any time of day how much further the moving entities will move for the remainder of the day .",
    "ideally , with a greater estimated value of the total travel distance , the system will employ a more conservative sampling strategy ( lower sampling frequencies ) to cover as much as possible of the whole trip using the restricted energy budget , whereas a more aggressive strategy ( higher sampling frequencies ) will be favored on the presence of a smaller estimated total travel distance , so that better tracking precision will be achieved .",
    "clearly the estimation of the entity s daily travel distance using partial information is a challenging yet crucial ingredient for the system s success .",
    "approaches have been proposed to predict generic time - series and many of them have capitalized on the phenomenon that for each individual there often exist re - occurring small fragments of time ( which we call `` snippets '' ) in their histories . by detecting and reusing such snippets , we are able to reconstruct a day with the elements from previous relevant days .",
    "we show an example of snippet learning for daily traveling time prediction and the difficulties it faces by using a commuter s daily routines .",
    "it is worth noting that throughout the entire paper , we assume that besides the time - series itself , no other support information such as locations are available to the prediction algorithm .",
    "for example , to predict a day s travel distance , the algorithm s only input is a partial time - series of the distances traveled in each interval . with a 30-minutes interval ,",
    "the whole day will have 48 time - series entries , and we aim to use the first half of them to predict the accumulated travel distance for the whole day .",
    "imagine that a person in our example has two usual routines : 1 ) on workdays the person goes to work by a particular bus line that stops outside the apartment every 8 a.m. , and arrives at the workplace around 9 a.m. the person gets lunch around 12 p.m. at someplace near the workplace everyday , and finishes work around 5 p.m. , 2 ) on weekends the person prefers going to the beach in the morning and coming home in the evening . in the ideal case , the person begins and finishes the same activity at the exact same time on every workday , and the resulting time - series for travel distances would be identical across days . with snippets , a time - series for a workday would then be transformed into a series of snippets like @xmath0@xmath1 , @xmath2 , @xmath3 , @xmath4 , ... @xmath5 . now to predict how much further the moving object will move for the remainder of the day at a certain time on the day ( e.g. midday ) , we are left with a simple task . for every interval of the snippet sequence in the example , if the current day shows an identical partial time - series for that interval , the person is likely to be working that day and is likely to yield the same total travel distance as any other workday .",
    "the same method works for the weekends too .    in reality , such patterns do repeat themselves , only not in such a perfectly aligned way but instead often on a shifted timeline and at a differing pace . instead of having high coherences at all times between two working days of a person , in reality a day s time - series",
    "may often be partially similar to and partially divergent from another day s , posing a serious challenge for the aforementioned prediction method .",
    "there are many possible causes which prevent a perfect resembler for a snippet sequence from happening .",
    "for example , the bus in the morning may be 20 minutes late , or the person may wait for a coffee to miss the bus he / she is supposed to take .",
    "then , the person may have a later than usual lunch at work .",
    "finally , the person on one day decides to do usual item a / b in the order of b / a . coupled with the huge number of non - work - related locations a person could go to and the numerous possible sequences of visiting them",
    ", the resulting time - series could have a huge variety of distortions to the regular time - series .",
    "in such cases , how to effectively learn representative snippets and how to use them effectively remains a major challenge .    to solve this complex problem",
    ", we adopt the concept of snippets but take a step forward and propose a robust learning and time - series prediction model to systematically reduce the effect of such distortions .",
    "specifically , we make the following contributions in this paper :    * we propose a novel regression model , which is based on convolutional neural networks , to solve the robust snippets learning and periodical time - series prediction problem . * we propose a novel technique called temporal embedding to improve the classical convolutional neural networks capability for learning robust snippets and for predicting accurately .",
    "we design a network layer based on this concept , devise a complete four layer network ( tenet ) for regression , and solve the corresponding backpropagation problem .",
    "we also offer a detailed case study to illustrate the effect of temporal embedding .",
    "* we conduct extensive experiments on 15 individual datasets representing three data modalities and one synthetic dataset to evaluate the advantages and characteristics of the proposed model .",
    "the rest of the paper is organized as follows .",
    "next in section [ sec : pf ] we present the background and relevant literature of the problem studied . in section [ sec : model ]",
    "we give the intuition behind tenet , describe in detail the technique of temporal embedding and other layers of tenet , and offer solutions to the backpropagation of tenet .",
    "we then enter section [ sec : exp ] and evaluate the proposed model .",
    "finally we conclude our work in section [ sec : conc ] .",
    "learning abstract features ( with neural networks in many cases ) has been extensively studied in recent years and has proved effective in many applications . for instance , numerous studies @xcite have shown that deep neural networks perform well for complex computer vision classification tasks , while many demonstrate that success can be achieved with deep learning architectures for audio classification tasks as well@xcite .",
    "these well - performing deep neural networks have a variety of core ideas , ranging from restricted boltzmann machines that utilize an energy model @xcite , to sparse autoencoders that introduce an unsupervised `` denoising '' mechanism to remove insignificant , noisy signals from data @xcite , to using convolution as an effective way to learn representative features robust to geometric locations of images @xcite .",
    "the main advantage of such methods is that they have a strong capability of unravelling the hidden hierarchical structure of data to derive representative features . moving from a shallower architecture to a deeper architecture ,",
    "these models progressively detect essential components of the data from local parts like strokes in human handwriting , to global compositions such as digits or objects . among the variations of neural networks , inspired by biological processes  @xcite , convolutional networks in particular excel in finding such abstract features that are robust to geometric variations in images @xcite .",
    "interestingly , such advantages of convolutional neural networks are present not only in vision tasks , but also in speech recognition @xcite and natural language processing @xcite .",
    "now we consider the periodical time - series prediction problem for data such as daily traveling distances or daily household power consumptions . to tackle this problem ,",
    "conventionally statistical models such as autoregression and its variants are strongly favored .",
    "while in the past decade , realizing there is abstract and structural information beneath the raw numeric values in the time - series , researchers have experimented to discover such patterns by clustering or `` motif '' discovery @xcite . though conceptually similar , these `` motifs '' usually are concrete subsequences that are restricted by specific mathematical definitions , which differentiate themselves from the concept of abstract , representative snippets in our paper .",
    "however , how to design a method that can find abstract patterns as well as predict future values , that meanwhile is robust to various temporal distortions and misalignment , is yet to be answered .",
    "inspired by the success of convolutional neural networks , we investigate using convolution - based neural networks to address this problem .",
    "the two main challenges for the periodical time - series prediction are : 1 ) how to find representative snippets for the prediction of future changes ; and 2 ) how to minimize the effect of distortions in the temporal domain and get accurate regression results . here",
    "we examine the two challenges separately and propose solutions to them from a neural networks perspective .",
    "the first challenge , i.e. snippet learning , involves finding abstract sequences in the training time - series .",
    "naturally there is an assumption that the snippets should only be of moderate length .",
    "for example , if we were to predict daily human mobility , a time window of from one half - hour to a few hours would be a reasonable setting , as intuitively such a period of time should be enough to cover most of the common trips in daily life .",
    "hence in the prediction model , we examine such periods of time using a convolutional approach .",
    "we create randomly initialized filters that have a given , moderate length as the length of the target snippets . in 2d image classification tasks , filters in convolutional neural networks",
    "are often used as edge detectors , while in ours , the filters will act as `` snippet detectors '' . in the training phase ,",
    "the weights for the filters will be adjusted during the backpropagation so that they respond maximally to the reoccurring and significant components in the training data .",
    "we then solve the second challenge by adding a `` temporal embedding '' operation in the neural network .",
    "the temporal embedding process provides a supervised way of denoising subspace learning .",
    "when dealing with time - series , a nave technique is to `` shift '' the training data forward and backward along the timeline .",
    "for example , a shifting routine with windows size 1 would transform a training sample @xmath6 into three training samples @xmath7 .",
    "though useful sometimes , this nave approach introduces heavy noise by including artificial training samples that may never actually happen in the real world .",
    "also it is unable to benefit case where the order of the subsequence is changed .",
    "we argue that the nave technique can evolve to a much more effective approach called temporal embedding that integrates into the learning process mechanisms for removing distortions . with temporal embedding ,",
    "two temporally - shifted copies are created for each sample during the learning process , and then the original sample and the two shifted copies are encoded into a single sample so that the processed sample will not only carry its own information , but also bear a piece of information for each of its shifted neighbors .",
    "again , the weights for the encoding are learned in a supervised way during backpropagation .",
    "next we present an overview of the tenet model .",
    "we propose a convolutional neural network to learn the snippets from the periodic time - series as illustrated in figure [ fig : cnn ] .",
    "the model has three invisible layers , namely the temporal embedding layer , the convolution / max - pooling layer , and the sigmoid layer .",
    "the output layer is an l1-regularized least squares regression layer .",
    "the illustrated model is an example instantiation of the proposed model , with the input size , embedding window size , number of snippets , snippet size , max - pooling and sigmoid layer sizes to be 6 , 1 , 2 , ( 1,3 ) and ( 1,2 ) and 3 respectively .",
    "the model implements the following work flow :    1 .",
    "it takes an input sample , and applies the temporal embedding .",
    "this layer transforms the sample into a denser representation with not only the sample itself but also information of its potential temporal neighbors .",
    "the weights of the transformation are iteratively updated during the training process .",
    "the embedded input is sent into a convolution layer where a set of filters , or snippet detectors , scan through the sample using the convolution operator .",
    "each snippet will be convolved against the sample , resulting in a feature map considered as the snippet s response to that sample .",
    "3 .   the snippets responses to the sample , being supposedly sparse and representative , are input into a sigmoid layer to combine some of the responses into higher - level and more abstract representations in lower dimensions .",
    "this transformation also involves a set of weights that is learned over the training process .",
    "4 .   finally",
    "the abstract representation of the sample is used to perform an l1-regularized least - squares regression to obtain the predicted value .",
    "the intuition behind the l1 regularization is that if we consider the previous layer s output , ie .",
    "the high - level neuron s responses to the sample , as high - level pattern recognizers responses to the signal , a sparse solution will utilize the most significant responses and hence will be less sensitive to noise  @xcite .    in the following subsections",
    "we discuss the layers separately in detail . in the rest of the paper , the technical details of the neural network",
    "will be described mostly in vector forms , and we will use the assumptions and notations listed in table [ tbl : not ] .      the temporal embedding layer aims to align less dominant samples to the dominant patterns by reducing the temporal distortions and misalignment ( e.g. shifting or skewed sequence of events ) , corresponding to two cases in our previous example : 1 ) the commuter starts the day 30 minutes earlier than usual , so every event in the morning rush hour is shifted ahead equally by 30 minutes , 2 ) for some reason the commuter does not take the usual bus line which directly stops at his workplace , instead he / she takes a train and walks 1 km to work from the station . in the resulting time - series we will see two distinct effects as a result of 1 ) and 2 ) .",
    "for example , assume that on normal day the travel distance time - series segment in the morning will be @xmath8 , then for case 1 we will have @xmath9 , and in case 2 it will be @xmath10 .",
    "now we assume both cases happen on the same day , giving us @xmath11 , which is heavily distorted from @xmath12 .",
    "it is a significant challenge for a prediction algorithm to realize that for the two days the travel distances should be very similar despite the sequences and the values of their time - series are so different .",
    "temporal embedding addresses this issue , by optimally embedding a value s temporal neighbors into itself , so that for the whole dataset the dominant pattern remains unchanged but the distorted patterns are realigned .",
    "the layer is configured by one hyperparameter @xmath13 that controls how many neighbors of an element in each direction should be embedded to the element itself ( the embedding size ) .",
    "this layer has @xmath14 sets of parameters , represented by matrices @xmath15 and @xmath16 , and the same number of constant sparse matrices @xmath17 and @xmath18 .",
    "the subscriptions @xmath19 and @xmath20 represent the direction of the neighbors on the timeline , and @xmath21 here means the weights for the @xmath22 neighbor in the final embedding . in the case of @xmath23 , there are three @xmath24 matrices and three @xmath25 matrices in this layer .",
    "the six matrices together implement the embedding operators .",
    "here we use the input dimensions in figure [ fig : cnn ] ( where @xmath26 ) as an example for how this layer works .",
    "the constant matrices , are defined as : @xmath27 \\\\ \\widetilde{w}^{(1)}_{r_1 } = \\widetilde{w}^{(1)t}_{l_1 } , \\widetilde{w}^{(1)}_{m}=i = eye(d^{(1 ) } ) \\label{eqn : cons}\\end{aligned}\\ ] ]    weights in @xmath28,@xmath29 @xmath30 that correspond to the @xmath31s in @xmath32 , @xmath33 and @xmath34 represent the weights for the embedding of the sample s left neighbor ( forward ) , the sample itself and its right neighbor ( backward ) respectively , and they are initialized with corresponding constant matrices respectively .",
    "the layer s output is subsequently defined as follows : @xmath35 @xmath36 enforces a constraint that the connections between this layer and its input are restricted , and only the weights at the desired neighboring positions for each element are used in the final embedding for that element .",
    "the layer yields the temporal embedded output @xmath37 , or @xmath38 in this example , as the output of the layer .",
    "one can also use the sigmoid function as the activation function in the temporal embedding layer , though our experiments show that the difference it makes on the prediction accuracy is insignificant ( most of the times adding the sigmoid activation will slightly decrease the prediction accuracy ) .",
    "the layer s output is a vector of the same size as the input , however the embedded sample is now significantly more robust to temporal distortions . with temporal embedding ,",
    "the model detects dominant patterns in the training time - series , and tries to correct the systematical distortions within the specified time window . using the commuter example",
    ", the model will find that the person s regular time for the bus to work , and will try to realign the systematical misalignment on those unusual days .",
    "some readers may argue that a simple moving average algorithm might be able to solve the distortion problem ; however temporal embedding is far more effective , as the concrete example below shows .",
    "[ [ discussion - and - case - study ] ] discussion and case study + + + + + + + + + + + + + + + + + + + + + + + + +    recall our example with @xmath12 and @xmath39 , where @xmath12 represents the dominant pattern in the dataset , while @xmath39 represents a day that in fact will yield a similar end - of - day result but shows very distorted patterns in its time - series .",
    "now given the parameter matrices @xmath40 and the constant matrices @xmath41 initialized as in equation [ eqn : cons ] , our objective is to realign @xmath39 with @xmath12 by eliminating the distortion , and meanwhile keeping @xmath12 as unchanged as possible , which is effectively equivalent to solving the following minimization problem in equation [ eqn : eq ] : @xmath42 where @xmath43 and @xmath44 are the embedded new time - series . by solving the optimization , the non - zero weights in @xmath45 , @xmath46 and @xmath47 are determined as @xmath48 + @xmath49 , @xmath50 and @xmath51 + @xmath52 respectively . now @xmath43 and @xmath44 can be calculated according to equations [ eqn : at ] and [ eqn : bt ] , and we subsequently investigate how temporal embedding performs in terms of preserving @xmath12 and realigning @xmath39 to @xmath12 , compared with the moving average approach , with @xmath53 and @xmath54 being the output of @xmath12 and @xmath39 of a moving average of window size 3 ( @xmath55 ) .",
    ".temporal embedding vs. moving average [ cols=\"^,<,^,<\",options=\"header \" , ]     [ tbl : comp ]    table [ tbl : comp ] measures the relations between the vectors before and after the transformations with three metrics , namely squared error , intersection and pearson s correlation .",
    "first we note that @xmath39 is so distorted that the correlation between @xmath12 and @xmath39 is merely @xmath56 , which can be considered `` uncorrelated '' .",
    "now we examine the differences between the effects of temporal embedding and moving average .",
    "ideally , the transformation should show the following properties : 1 ) since @xmath12 represents the reoccurring pattern in the training set , we want @xmath43 to be as unchanged as possible after the transformation 2 ) after the transformation , @xmath44 should be as similar to @xmath43 as possible , indicating that the misalignments in @xmath39 has been minimized and @xmath39 is realigned to the representative sample @xmath12 .",
    "we verify the two aspects by examining the relations between @xmath12 and @xmath43 , and that between @xmath44 and @xmath43 , and observe that temporal embedding has achieved both goals .",
    "first we observe that @xmath43 is identical to @xmath12 ( with @xmath57 squared error ) , while @xmath44 has been transformed to a form that is perfectly identical to @xmath12 and @xmath43 now , with the dominant values at the second and third positions swapped and realigned to the third and forth position to be more inline with @xmath12 .",
    "however , we can see moving average resulted in a squared error of @xmath58 between @xmath12 and @xmath53 , showing that @xmath12 has not been preserved successfully in the transformation .",
    "second , though moving average does strengthen the relation between @xmath12 and @xmath39 by reducing the squared error ( @xmath59 ) and by increasing the similarity by intersection , it has even resulted in a drop in the correlation ( @xmath60 compared with the original @xmath12 and @xmath39 ) .",
    "we conclude its result is clearly less successful compared to temporal embedding ( @xmath61 in squared error , @xmath62 in intersection , and @xmath63 ) .",
    "it is worth noting that although the temporal embedding layer in the proposed neural network is not exactly the same as in equation [ eqn : eq ] as it does not have knowledge initially about which samples hold the representative patterns , as the training proceeds , the weights will progressively favor the reoccurring patterns , and eventually approach the solution of equation [ eqn : eq ] .",
    "next we describe the convolution , the max - pooling and the sigmoid layers .      the convolution / pooling layer performs a series of discrete 1-d convolutions @xmath64 with a specified number of filters @xmath65 of a specified length @xmath66 .",
    "each of the filters `` sweeps '' through the entire input signal and takes the input signal segment at the corresponding position as input . with a filter kernel @xmath67 ( taking the convention of reversely - ordered weights for convolution kernels and outputs ) , the @xmath68 filter s output has the @xmath69 element : @xmath70 = \\sum^{d^f}_{p=1 } w^{(2)}_{ip }   a^{(2)}_{k+p-1 } \\label{eqn : filter}\\end{aligned}\\ ] ]    in the example in figure [ fig : cnn ] we have set two filters with size 1x3 , hence in the convolution layer , each neuron",
    "will only be connected to three neurons from the temporal embedding layer .",
    "such sparse connectivity between the filters to their inputs enforces that the convolution layer will be focusing on finding the local snippets with moderate lengths .    though the convolution traverses the entire time - series in a sliding - window style and seemingly has a positive effect in reducing the temporal distortions , it is very different from temporal embedding .",
    "the main factor differentiating them is in the weight - sharing scheme ( see figure [ fig : cnn ] ) .",
    "a filter in the convolution layer has its weights shared among all its output neurons ( meaning a filter is sliding through the data , trying to match the same particular pattern ) , while in temporal embedding each neuron has individualized weights to enable optimal local embedding for each position .",
    "such flexibility enables it to identify and realign much more complex distortions and misalignments .",
    "for example , given @xmath71 , convolution will not be able to recognize the close relation between @xmath72 and @xmath12 because of the heavy distortions in both the positions and the sequences . in the experiments",
    "we will also show that without the temporal embedding layer , convolutional neural network does not work well on such time - series .",
    "the output of the convolution will be of the size @xmath73 . in figure",
    "[ fig : cnn ] s example where @xmath74 , we have the 8 neurons in the convolution layer .",
    "the output is then received by the max - pooling layer , where only the maximal value is kept from any pool of @xmath75 .",
    "the filter s output will hence be down sampled and transformed by an element - wise hyperbolic tangent function , reducing the output to 4-dimensional .",
    "then as the last hidden layer , the sigmoid layer will perform a projection from the convolution / pooling s output to a further reduced dimension as a means of both learning non - linear features and dimension reduction .",
    "finally , the input is transformed into a dense , robust and representative feature representation of @xmath76 .",
    "intuitively we can consider the sigmoid layer as a higher - level feature learner , after the convolution layer has discovered those relatively more `` local '' snippets .",
    "the output layer of the proposed model is a l1-regularized least - squares regression layer , defined as : @xmath78 with the cost function in the from of : @xmath79 where @xmath80 is a hyperparameter for the weight of the regularization term .",
    "the advantage of using the @xmath77 regularizer over @xmath81 is that the @xmath77 regularizer forces the optimization to find a sparse solution that only uses the most distinctive high - level features to conjure the final prediction @xcite . with the @xmath81",
    "regularizer the weights tend to have smaller variance , often making the model spread the energy thinly across all features , hence making the model less distinctive and less accurate .",
    "the parameters in the network are updated by stochastic gradient descent . in particular ,",
    "@xmath82 can be learned by : @xmath83 where @xmath84 is the sign of a vector .",
    "one can speed up this optimization process using the methods proposed in @xcite .    to update the parameters in the temporal embedding layer , taking @xmath85 as an example ,",
    "we apply the chain rule and arrive at : @xmath86 since the element - wise product has the property : @xmath87 we have the partial derivative of @xmath88 w.r.t . @xmath85 as : @xmath89 we calculate the error propagates from layer 2 to layer 1 as : @xmath90 where @xmath91 returns the input vector in reversed order . with the convolution layer s",
    "back propagated error being @xmath92 ( which can be calculated by the method described in @xcite),@xmath93 can therefore be updated with the gradient : @xmath94 \\odot ( a^{(1)}\\odot\\widetilde{w}^{(1)}_{l } ) \\label{eqn : upd}\\end{gathered}\\ ] ] @xmath85 and @xmath29 can be updated using similar procedures .",
    "meanwhile , @xmath95 is updated with the gradient : @xmath96    next we present the experimental results and offer in - depth analysis and discussion .",
    "c|c|c|c|ccccc|ccccc & & & & & + & & & & tenet & svln & svsig & svpoly & mkr & tenet & svln & svsig & svpoly & mkr +   + 8&874&3.1 - 36.4&5.6&****|**&55|74&59|83&60|82&48|75 & * * * * |**&0.24|14.4&0.23|10.5&0.23|9.5&0.29|17.9 + 15&870&1.5 - 30.9&5&****|**&58|78&56|79&59|80&53|75 & * * * * |**&0.2514.2&0.26|15&0.24|13.6&0.26|18.5 + 14&670&1.7 - 59.2&7.2&****|**&42|64&40|60&50|72&63|77 & * * * * |**&0.26|13.7&0.31|15.3&0.24|11.1&0.31| * * + 7&665&8.4 - 38.4&5.0&****|**&67|88&73|90&****|91&72|89 & * * * * |15.9&0.16|17.1&0.15|15.8&****|14.4&0.16| * * + 5&661&0.2 - 8.0&1.6&****|**&58|76&57|76&58|76&70| * * & 0.84|1&1.17|1.82&1.1|1.7&1.1|1.7 & * * * * | * * + 12&243&7.6 - 27.2&2.8&****|**&88|96&****|96&85|92&78|91 & * * * * |**&0.1|**&****|4.8&0.12|8.2&0.17|8 + 10&242&4.3 - 42.6&7.7&****|**&74|92&78|94&70|90&71|83 & * * * * |8&0.17|7.5&0.13|9.2&****|10.6&0.16| * * + 1&241&8.9 - 37.9&4.6&****|**&80|95&75|92&76|91&76|93 & * * * * |12&****|11.2&0.14|14&0.15|22 & 0.13| * * * * + 13&241&4.4 - 46.7&6.3&****|**&62|78&59|79&63|80&59|80 & * * * * |22&0.2|22.3&0.2|26&0.21|23&0.24| * * + 29&233&17.3 - 73.5&11.3&****|**&75|92&59|80&****|**&76|92 & 0.14|43&****|31&0.2|85.0&****|34&0.15| * * +   + 1 & 161 & 10 - 79.5 & 10.3 & * * * * | * * & 56|75 & 53|73 & 60|75 & 63|81 & * * * * |74.6 & 0.23|111 & 0.26| 110 & 0.22|100 & 0.2| * * * * +   + 8&206&8 - 99&15.2&46|****&****|62&35|50&****| * * & 33|45 & * * * * |**&0.29|170&0.35|198&0.31|300 & 0.4|323 + 12&156&9.5 - 60&11&****|**&56|77&43|65&54|70&45|67 & * * * * |**&0.23|101&0.28|96&0.27|285 & 0.27|103 +   + 8&193&55 - 345&47&****|**&47|64&42|58&40|57&45|66 & * * * * |**&0.24|36.6&0.28|59&0.35|179 & 0.25|43 + 12&243&37 - 280&32.4&****|**&58|70&48|67&49|68&57| * * & * * * * |**&0.23|29.4&0.25|29&0.3|60 & 0.22|25 +    [ tab : res ]",
    "in the experiments , we conduct extensive tests on the proposed model , with 15 individual datasets and 4 competitive methods",
    ". the goals of the experimental studies are fourfold : 1 ) to evaluate the prediction performance of the proposed model , in terms of prediction accuracy , and compare it with the competitive models ; 2 ) to evaluate the model s behavior and sensitivity to features of diverse datasets ; 3 ) to investigate the isolated effects of temporal embedding ; and 4 ) to visualize the snippets and show how they work with intermediate values from the learning process .      to support the comprehensive evaluation , we use a variety of univariate , periodical time - series datasets that represent three modalities , ranging from human mobility patterns to household power consumption .",
    "the reason we choose these modalities is that the behaviors they represent are expected to exhibit complex periodical patterns in daily cycles , which is an ideal testbed for the proposed model to demonstrate its capability of discovering and capturing such abstract features and to test its robustness to various factors .",
    "the first modality is human mobility - daily traveling distance ( hmd ) in kilometers , and the second is human mobility - daily traveling time ( hmt ) in minutes .",
    "both modalities are extracted from the lifemap @xcite ) that contains human mobility traces collected from eight individuals , spanning from a few months to around two years . in total",
    "there are 52,819 position fixations , most of which are from regular sampling every two to five minutes .",
    "hmd is the total displacement for an individual in a day , and hmt is accumulated from short - term movements calculated as follows : for each five minute interval , if the individual s displacement is higher than 500 meters  , then the five - minute period is counted as `` traveling '' and is accumulated to the daily total traveling time .",
    "the third modality is daily household power consumption ( hpc ) .",
    "two datasets are used for this modality , i.e. household power consumption datasets from france and australia ( hpc - fr , hpc - au ) .",
    "hpc - fr consists of + 2,075,259 active power consumption in watt sampled every minute for 48 months from a single household .",
    "hpc - au consists of @xmath97 household power meter readings in kwatt hour sampled every 30 minutes from @xmath98 households for up to 29 months .    to prepare the data , we developed a program to extract only the samples that have complete ( or nearly complete ) day cycles , meaning that every data sample used must have regular readings in each period of time in a complete day . to obtain meaningful results , only individuals with more than @xmath99 days of records",
    "are used in the experiments .    for the human mobility datasets ,",
    "we use the two individuals datasets with the highest quality of data in terms of timespan ( > 150 days ) and sampling frequency .",
    "we extract the traveling distances and traveling times for each interval ( e.g. a 30 minutes interval creates 48-d time - series for a day ) , and use the resulting time - series for the experiments .",
    "similar preprocessing is applied on the power consumption datasets .",
    "after preprocessing , each time - series sample has @xmath100 elements as @xmath101 , each @xmath102 is the occurred value in the corresponding time interval ( non - cumulative ) .    for each individual dataset",
    ", we randomly divide the samples equally into three folds : the training set , the validation set and the test set .",
    "the model is trained using the training set , and is then tested on the validation set .",
    "such cross - validation is performed on the same individual dataset for five times with random splits , and the reported performance is the averaged value cross the five iterations .",
    "the settings of hyperparameters with the best validation performance are kept as the hyperparamters of the model .",
    "finally we test the model on the test set and report the performance .      for evaluation",
    "we consider the periodical accumulation prediction problem , where each input @xmath103 is a head segment of a complete @xmath104 and corresponds to a target value @xmath105 representing the periodical accumulation . clearly the model can be used to perform other types of prediction such as time - series forecast or @xmath106-ahead prediction .",
    "due to space limit here we use periodical accumulation prediction as a showcase for tenet s performance advantages .",
    "tenet is implemented using python with the theano framework . for comparison ,",
    "we consider four competitive methods , namely support vector regression with linear kernel ( svln ) , support vector regression with radial basis kernel ( svsig ) , support vector regression with polynomial kernel ( svpoly ) , and multiple kernel regression ( mkr ) @xcite .",
    "the parameter selection criterion for the sv - family is that we carefully tune the parameters @xmath107 ( error margin ) , @xmath108 ( degree of kernel function ) , and @xmath109 ( kernel coefficient ) for kernels .",
    "each parameter s value is selected from the sets @xmath110 , @xmath111 , @xmath112 @xmath113 respectively , so in total there are 363 combinations for each model . for each test run , during training we iterate through every combination of @xmath107,@xmath108 and @xmath109 s candidate values , and keep the values that generate the highest accuracy on the validation set , then use these parameters on the test set and report the results . for comparable evaluation against mkr",
    ", we use an offline implementation where test samples are not used to update the parameters , and the number of support vectors is set to 120 for matching the parameter size of tenet .",
    "the hyperparameter selection of tenet follows the same procedure .",
    "we provide more details in section [ ssec : ps ] .    for most of the experiments",
    "@xmath100 is set to 28 , meaning for each day , the time - series up to 2 pm is known to the model . selecting this particular number",
    "is because considering humans rarely remain active from 12 am to 4 am and the values in that period are almost all zeros , the first 28d represent information from exactly half of the active period from 4 am to 12 am of the next day .",
    "such setting is challenging in the sense that the gap between 2 pm to 12 am next day is substantial and it leaves numerous possible outcomes for the daily accumulation .",
    "the complexity involved hence provides insight about how well the proposed and the competitive models can capture an individual s daily patterns and make prediction from limited information .",
    "next we present the experimental results for the proposed method and the competitive methods , and also offer in - depth discussion about hyperparameter tuning and about the effect of temporal embedding .",
    "table [ tbl : comp ] studies the prediction performances of the proposed method and four competitive methods on 15 individual datasets of three different modalities , evaluated by average hitrate(hr)@20% and 30% , mean squared error ( mse ) and mean absolute relative error ( mre ) . using four metrics is due to that for datasets with long - tailed values ( which human behaviors can often be characterized to be @xcite ) , as an absolute measurement , mse alone is not an ideal metric to evaluate a regression method s performance because it is heavily biased by samples in the long tail @xcite .",
    "therefore we mainly use relative measures for the evaluation while keeping mse as a reference .",
    "the highlighted numbers in red , black , magenta and blue indicate the winning performance on that dataset under the corresponding metric ( magenta@xmath114 hr@20% , blue@xmath114hr@30% , red@xmath114re , black@xmath114 mse ) .",
    "multiple highlighted numbers with the same color in a row indicate multiple winners under that metric on that dataset .",
    "we also report some of the properties , i.e. the total number of samples n , the numeric range [ ] , and standard deviation @xmath115 , for each individual dataset . a closer look at these dataset statistics suggests large varieties in terms of number of samples ( from 156 to 874 ) , numerical ranges ( 0.2 to 345 ) and variances ( @xmath115 from 2.8 to 47 ) . to present the reader with more intuitive and meaningful results , the numbers shown are unnormalized .",
    "generally , the distribution of the highlighted and winning performances shows that tenet achieved best results in most of the cases , with a few but non - systematical exceptions spread across the competitive methods . out of the 15 individual datasets , tenet has won 14 entries in hr@20% , 15 entries in hr@30% , 13 entries in mre , and 7 entries in mse , showing a superior performance among the evaluated models .",
    "svln and svsig show least competitive results by having 1 , 0 , 2 , 1 and 1 , 0 , 1 , 0 winning performances respectively .",
    "svpoly obtains slightly better results with 3 , 2 , 3 , 0 wins .",
    "mkr on the other hand , has shown comparable results in mse but far less competitive results in other metrics , by having 0 , 0 , 1 , 8 wins .",
    "in addition , we find that mkr is less robust to larger numerical ranges such as in hmd-8 , hmd-12 , hmt-8 , and hmt-12 , while tenet demonstrates consistent performances cross all datasets .    to compare the methods quantatitively",
    ", we plot figure [ fig : map ] and show each method s mean average scores cross all individual datasets ( mse is normalized with the maximum mse among the methods in each entry ) .",
    "on the 15 individual dataset , tenet achieved best average performance under all four metrics . taking a tenet vs. all approach ,",
    "we find tenet s performance and the average of other methods performance under hr@20% , hr@30% , mre and mse are 69 vs. 60 , 84 vs. 78 , 0.22 vs. 0.27 and 34 vs. 51 respectively , showing that tenet makes a relative improvement of 15% , 8% , 19% and 33% respectively under the corresponding metric",
    ". then if we investigate tenet vs. the best among the rest , with hr@20% 69 and hr@30% 84 , tenet beats the second best hr@20% 61 ( svln , svpoly ) by 8 , the second best hr@30% 78 ( svln , svpoly ) by 6 ; on mre and mse , tenet s average errors are 0.22 and 34 , while the second bests are 0.24 and 40 ( mkr ) .",
    "hence for all 15 individual dataset , in average tenet marks an 13% increase in hr@20% , an 8% increase in hr@30% , a 9.1% decrease in mre and a 15% decrease in mre to the second best method under each corresponding metric .",
    "we also observe that though in all 15 individual datasets tenet obtained the best performance under hr@30% , the average winning margin is the smallest than those under other metrics .",
    "this is because hr@30% is a relative looser measurement than other metrics , which leads to the result that less accurate prediction tends to have similar performances .",
    "however , the consistent advantage of tenet in not only hr@30% but all four metrics still suggests that it has the best prediction accuracy .",
    "we hence conclude that tenet has shown consistent advantages which are robust to variations in the data modality as well as the statistics characteristics of the data .",
    "we further examine tenet s ability to scale up its learning effectiveness with a growing sample size or an increasing complexity of the data .",
    "taking mre for example , we measure two correlations using pearson s correlation coefficient : 1 ) the correlation between the averaged performance advantage ( @xmath116 ) and the sample size , 2 ) the correlation between the averaged performance advantage and the entropy , for each individual dataset .",
    "the measurements yield correlation coefficients 0.7 and 0.79 respectively , suggesting a strong correlation between each set of the variables .",
    "such patterns mean that as the sample size or the complexity of the data grows , tenet is able to learn more effective than other methods to achieve better performance .",
    "the correlations are also visually identifiable as we plot the the performance advantage ratios in figure [ fig : adv ] .",
    "figure [ fig : dd ] illustrates the effect of the feature dimensionality @xmath100 on the prediction accuracy . here",
    "we use hpc - au-8 as a case study .",
    "figure [ fig : d2 ] shows the changes of mre and normalized mse to a growing @xmath100 .",
    "unsurprisingly , both errors decrease monotonically as @xmath100 increases , from 1 , 0.35 at @xmath117 to 0.08 , 0.07 at @xmath118 .",
    "figure [ fig : d3 ] depicts how the hr responds to a growing @xmath100 .",
    "again , we see monotonic growths ( almost , except for @xmath119 ) in hr@20% and hr@30% .",
    "these results confirm that tenet can effectively use the additional information and in the mean time has received little impact from the noise in the additional dimensions .      in section [ ssec : te ] we discussed how hypothetically temporal embedding would boost the performance of the model by automatically realigning the distorted time - series to the dominating patterns in a dataset , and verified it with a case study on a synthetic example . to further validate this hypothesis on real data , we create a designated dataset from hpc - au-8 by performing the following procedure :    1 .",
    "we run a clustering with the affinity propagation method in @xcite , and find the top 10 exemplars .",
    "2 .   we take the exemplars and generate 300 synthetic samples ( 30 for each exemplar ) by distorting the exemplars with randomly selected operations such as swapping two neighboring segments or shifting the data forward and backward .",
    "they are equally split into training , validation and test set .",
    "we train a model with a modified classical convolutional neural network fore regression ( cnn , input @xmath114 convolution / pooling @xmath114 sigmoid @xmath114 l1-linear regression ) without temporal embedding , and a model with tenet , and examine the performance differences .",
    "the results are reported in table [ tbl : tecomp ] .",
    "we observe that with the temporal embedding layer , the prediction accuracy has been improved by more than a half ( 15.5 to 6.4 , 0.34 to 0.12 ) for mse and mre , and for about 100%/40% in hitrate@20% and 30% .",
    "this shows that temporal embedding is able to learn the weights which are conceptually equivalent to a reverse operation for the distortions and misalignments .",
    "we present a visualization of the random snippets and learned snippets for the first cross - validation iteration on hpc - au-8 in figure [ fig : vs ] .",
    "each cell is a snippet , a segment of time - series the model deems representative .",
    "the figures show some noteworthy properties .",
    "firstly the random snippets are fairly dense , while the learned ones are much more sparse , meaning that in most of cases there are only a smaller number of spikes and valleys in each learned snippets .",
    "secondly , the sparsity of the learned snippets is also accompanied by a visually identifiable high distinctiveness across the learned snippets , which means snippets learned tend to be different from one another because they effectively capture different patterns in the training data .",
    "both properties suggest that the snippets are truly learning from the patterns in the dataset and both properties have a positive effect on the model s prediction accuracy .",
    "as an issue often posed to complex learning models including neural networks , how to select the hyperparameters is an open question studied by many @xcite .",
    "there are six hyperparameters in the proposed model :    [ ssec : ps ] in this paper , since the sizes of the datasets are moderate , we use an intuitive approach to find the hyperparameters for the testing .",
    "the selection and testing processes follows that described in the third paragraph of section [ ssec : es ] .",
    "one can also use the greedy hyperparameter selection processed described in @xcite .",
    "we also used two optional data preprocessing , i.e. high pass filtering to denoise , and data shifting to synthesize more training data .",
    "the activation of each technique is subject to a control parameter which is tuned using the same process .",
    "note that since all the hidden nodes in layers 2 , 3 output small values only , with the settings we used for experiments , the regression layer s ability to predict larger numbers ( e.g. > 1000 ) is limited . to predict larger numbers",
    ", one can consider either rescaling the data or setting smaller @xmath80 to adjust to the numerical range of the specific dataset .",
    "the proposed model has a moderate number of layers ( four if we count the convolution / pooling as one ) , and hence a moderate number of parameters to estimate .",
    "for example , with @xmath120 , @xmath23 ( one @xmath121 and one @xmath122 ) , @xmath65 and @xmath66 set to 20 and 5 , @xmath123 , we have : @xmath124 it is possible to add more layers to construct a deeper architecture based on temporal embedding and convolution .",
    "however , the data itself must be complex enough to provide more potential for the model to exploit . given the granularity of daily human behaviors , for the task of predicting modalities such as traveling distance / time and power consumption , a deeper architecture has only limited effect .",
    "motivated by the observation that regularities in periodical time - series sometimes manifest at different moments and at varied paces , in this paper we propose a technique called temporal embedding and devise a convolutional neural network - based learning model called tenet , which is robust to temporal distortions and misalignments , to learn abstract features .",
    "first we present tenet and discuss the intuition behind it using a case study , and then describe the technical details for the whole network architecture , and solve the backpropagation problem for the proposed model . in the experiments we use an extensive range of real - life periodical data that covers three modalities to compare the performances of the proposed model against competitive methods .",
    "we find that in average tenet achieves 8% to 33% advantage against other methods in difference metrics and the advantage scales up with a growing sample size used in training .",
    "we also find that the accuracy of tenet increases almost monotonically with a growing @xmath100 , indicating the model is effective in utilizing more information and while remaining robust to noise .",
    "we also create a set of synthetic data from the real - life data to demonstrate the effect of temporal embedding and successfully show its capability of realigning distorted and misaligned data . at the end of the experiment",
    "we also offer an in - depth discussion about hyperparameter selection , data preprocessing , network depth and number of parameters , and present a visualization of the learned snippets . beyond the periodical accumulation prediction problem , we expect tenet to be useful for general time - series predictions ranging from forecasts to k - ahead prediction ."
  ],
  "abstract_text": [
    "<S> the prediction of periodical time - series remains challenging due to various types of data distortions and misalignments . here , we propose a novel model called temporal embedding - enhanced convolutional neural network ( tenet ) to learn repeatedly - occurring - yet - hidden structural elements in periodical time - series , called abstract snippets , for predicting future changes . </S>",
    "<S> our model uses convolutional neural networks and embeds a time - series with its potential neighbors in the temporal domain for aligning it to the dominant patterns in the dataset . </S>",
    "<S> the model is robust to distortions and misalignments in the temporal domain and demonstrates strong prediction power for periodical time - series .    </S>",
    "<S> we conduct extensive experiments and discover that the proposed model shows significant and consistent advantages over existing methods on a variety of data modalities ranging from human mobility to household power consumption records . </S>",
    "<S> empirical results indicate that the model is robust to various factors such as number of samples , variance of data , numerical ranges of data etc . </S>",
    "<S> the experiments also verify that the intuition behind the model can be generalized to multiple data types and applications and promises significant improvement in prediction performances across the datasets studied . </S>"
  ]
}
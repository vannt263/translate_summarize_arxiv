{
  "article_text": [
    "we consider stochastic simulation ( or monte carlo simulation ) of the solution of a dirichlet boundary value problem of a time - independent schrdinger equation with constant potential . for positive potentials this equation",
    "is called the yukawa equation or the linearized poisson  boltzmann equation . for zero potential",
    "the equation is known as the laplace equation . for negative potential",
    "it is known as the helmholtz equation .",
    "the connection between the dirichlet boundary value problems and the brownian motion date back to kakutani @xcite , who provided a stochastic representation of the solution of the laplace equation with dirichlet boundary conditions in terms of the exit locations of a brownian motion .",
    "later , this connection has been extended for the schrdinger equation , cf . @xcite and references therein .",
    "these stochastic representations for constant non - zero potentials include the exit time of the brownian motion in addition to the exit location ; and in the case of non - constant potential , the stochastic representation depends on the entire path of the brownian motion up to the time it exits the domain .",
    "stochastic representations provide monte carlo simulation methods for the solutions of the boundary value problems .",
    "these methods are especially attractive in high dimensions where deterministic methods are typically extremely costly .",
    "the obvious idea to use the stochastic representations is to simulate brownian particles on the domain with a fine time - mesh .",
    "this is , however , very costly computationally . in order to avoid the simulation of the trajectory of the brownian particles very precisely ,",
    "different algorithms have been proposed . in this paper",
    ", we consider different walk on spheres algorithms that simulate the brownian motion only on successive spheres in the domain .",
    "if one only needs to simulate the exit location , and not the exit time , of the brownian motion , one can use the very efficient classical walk on spheres ( wos ) algorithm due to muller @xcite .",
    "unfortunately , the stochastic representation involving only the exit locations of brownian motion corresponds precisely the laplace equation .",
    "this is our motivation to transform the constant - potential schrdinger equation into a laplace equation : to make the classical wos algorithm applicable . also , this transformation should be of interest in its own right .    the transformation , the so - called duffin correspondence , removes the constant potential in the schrdinger equation with the cost of adding one extra dimension to the boundary value problem .",
    "the idea of the correspondence is due to duffin @xcite , where the correspondence was used for the yukawa equation , i.e. for the case of positive constant potential , on the plane .",
    "this was later extended to general euclidean spaces in @xcite . in this paper , we extend the duffin correspondence to cover also the helmholtz case , i.e. negative constant potential , in general euclidean spaces .",
    "let us note that there are already efficient modified wos algorithms that simulate the exit time ( or its laplace transform ) and the exit location of the brownian motion that can be used for the constant - potential schrdinger equation studied here .",
    "indeed , such stochastic simulation algorithms have been studied excessively ; cf .",
    "@xcite , just to mention few",
    ". basically , in a modified wos algorithm that simulates the laplace transform of the exit time and the exit location of the brownian particle , one needs to keep track of a multiplicative weight for the simulated brownian particle .",
    "we call this algorithm the weighted walk on spheres ( wwos ) and recall it in section [ sect : wos - algorithms ] .",
    "if the constant potential is negative , then the weight of the brownian particle can be reinterpreted as independent exponential killing of the particle .",
    "we call this algorithm the killing walk on spheres ( kwos ) and recall it in section [ sect : wos - algorithms ] . therefore , we admit that there are already efficient algorithms for the problem studied here",
    ". however , it is our opinion that our duffin correspondence wos algorithm ( dwos ) is of comparable efficiency to the known modified wos algorithms and has the advantage of being both simpler to comprehend and easier to implement than the modified wos algorithms known so far . indeed , dwos algorithm is simply the classical wos algorithm with an added dimension and multiplicatively modified boundary data : there is no need to keep track of any weight or killing .",
    "moreover , if the wos algorithm is already implemented , the dwos algorithm does not need implementation : it is simply the wos algorithm with different input .",
    "the rest of the paper is organized as follows . in section [",
    "sect : prelim ] , we lay the setting and recall the connection between the dirichlet boundary value problems and the brownian motion . in section [ sect : duffin ] , we prove our main result , the duffin correspondence , and the stochastic representation of the solutions of the constant - potential schrdinger equation without the stopping time distribution .",
    "section [ sect : wos - algorithms ] is devoted to the different wos algorithms and their implementations . in section [",
    "sect : comparisons ] , we provide examples and comparisons of the different wos algorithms . finally , in section [ sect : conclusions ] we draw some some conclusions on the performance of the dwos algorithm .",
    "let @xmath0 be a domain ( i.e. , open and connected ) satisfying assumption [ ass ] below .",
    "let @xmath1 .",
    "denote by @xmath2 the laplacian with respect to the variable @xmath3 .",
    "we consider the dirichlet - type boundary value problem of the schrdinger equation with constant potential @xmath4 : @xmath5 here @xmath6 is ( continuous and ) bounded on @xmath7 .",
    "the case @xmath8 corresponds to the yukawa equation , or the linearized poisson ",
    "boltzmann equation .",
    "the case @xmath9 is the laplace equation .",
    "the case @xmath10 is the helmholtz equation .    the required regularity conditions for the domain @xmath11 of a helmholtz ",
    "yukawa type dirichlet boundary value problem to admit a unique bounded ( strong ) solution are best expressed by using probabilistic tools and the brownian motion :    let @xmath12 be a standard @xmath13-dimensional brownian motion .",
    "let @xmath14 be the first exit time of the brownian motion @xmath12 from the domain @xmath11 , i.e. , @xmath15 here , as always , use the normal convention that @xmath16    the following assumptions on the domain @xmath11 are always in force , although not explicitly stated later :    [ ass ]    1 .",
    "the domain @xmath11 is _ wiener regular _ ,",
    "i.e. , @xmath17 \\quad\\mbox{for all } y\\in\\partial d.\\ ] ] 2 .",
    "the domain @xmath11 is _ wiener small _ , i.e. , @xmath18 = 1 \\quad\\mbox{for all } x\\in d.\\ ] ] 3 .   finally , we assume , by using the terminology of chung and zhao @xcite , that the domain @xmath11 is _ gaugeable _ , i.e. , @xmath19 < \\infty.\\ ] ]    [ rem : ass ]    1 .   all domains with piecewise @xmath20 boundary are wiener regular .",
    "2 .   if any projection of the domain @xmath11 on any subspace @xmath21 , @xmath22 is bounded , then @xmath11 is wiener bounded .",
    "3 .   for @xmath23 ,",
    "the gauge condition [ ass](iii ) is vacuous ; for @xmath10 it is essential .",
    "+ actually , it follows from ( * ? ? ?",
    "* theorem 4.19 ) that the gauge condition [ ass](iii ) is satisfied if and only if @xmath24 , where @xmath25 is the principal dirichlet eigenvalue of the negative half - laplacian , i.e. , for @xmath24 the boundary value problem @xmath26 admits only the trivial solution @xmath27 . by the rayleigh ",
    "krahn inequality @xcite @xmath28 where @xmath29 is the smallest positive zero of the bessel function @xmath30 equality is attained in if and only if @xmath11 is a ball ; e.g. for the unit ball we have @xmath31 this relation is pronounced later in formula .",
    "numerical approximations of @xmath32 are give in table [ tab : rayleigh ] .",
    "+ .numerical approximations of the rayleigh  faber ",
    "krahn constant @xmath32 for @xmath33 . [ cols=\"^,^\",options=\"header \" , ]     the following stochastic representation of the bounded solutions to the boundary value problem is well - known .",
    "see , e.g. , ( * ? ? ?",
    "* chapter 4 ) or ( * ? ? ? * chapter 4 ) :    [ pro : kakutani ] the boundary value problem admits a unique bounded solution given by @xmath34.\\ ] ]",
    "associated with the helmholtz or the yukawa boundary value problem with @xmath35 , there is a classical laplace boundary value problem with @xmath9 on an extended domain @xmath36 : indeed , define @xmath37 by @xmath38 set @xmath39 and @xmath40 finally , denote @xmath41 , and set @xmath42 with this notation , consider the following family of laplace boundary value problems indexed by @xmath35 : @xmath43    [ thm : duffin ] let @xmath35 be fixed .",
    "then @xmath44 is the unique bounded solution to the helmholtz or yukawa boundary value problem if and only if @xmath45 is the unique bounded solution to the laplace equation .",
    "the yukawa case , @xmath8 , was shown in @xcite ( for general @xmath13 ) and in the original paper by duffin @xcite ( for @xmath46 ) .",
    "let us consider the helmholtz case , @xmath10 .",
    "the proof that @xmath47 if and only if @xmath48 is straightforward and can be done exactly as in the yukawa case . also , it is straightforward to see that @xmath11 satisfies assumptions [ ass](i ) and [ ass](ii ) if and only if @xmath36 satisfies assumptions [ ass](i ) and [ ass](ii ) .",
    "the essential difference to the yukawa case is that now @xmath36 is unbounded in the @xmath49 co - ordinate .",
    "consequently , the boundary data @xmath50 is not bounded .",
    "this is where we need the gauge condition [ ass](iii ) .",
    "indeed , we can approximate the solution in @xmath51 $ ] , and the result follows from the stochastic representation [ pro : kakutani ] and the dominated convergence theorem by letting @xmath52 .",
    "let @xmath53 be an @xmath54-dimensional brownian motion and let @xmath55 then , by using the duffin correspondence theorem [ thm : duffin ] , we obtain a stochastic representation for the solution of the boundary value problem in terms of the exit location distribution only , i.e. , a stochastic solution that is independent of the exit time distribution .",
    "[ cor : kakutani ] the boundary value problem admits a solution @xmath56.\\ ] ]",
    "if one wants to simulate the solutions of directly by using the stochastic representation of proposition [ pro : kakutani ] , then one must simulate both the exit time and the exit position of the brownian particle moving in the domain @xmath11 .",
    "this can be done e.g. by using a weighted walk on spheres ( wwos ) , or  in the yukawa setting  killing walk on spheres ( kwos ) .",
    "( it is also possible to use the recent walk on moving spheres ( woms ) algorithm developed in @xcite . ) however , by using the duffin correspondence of theorem [ thm : duffin ] one only needs to simulate the exit position of the brownian particle in the extended domain @xmath36 .",
    "this allows one to use the classical muller s @xcite walk on spheres ( wos ) algorithm .",
    "we call this extension the duffin walk on spheres ( dwos ) algorithm .    in this section",
    ", we will explain in detail these walk on spheres algorithms  dwos , wwos , kwos  for the yukawa ",
    "laplace  helmholtz equations .",
    "next , in section [ sect : comparisons ] we will provide examples and comparisons of these algorithms .    we start with the most elementary problem : how to generate uniform random variables on spheres .      in all the variants of the walk on spheres algorithms presented here , one needs to simulate random variables that are uniformly distributed on the @xmath57-dimensional unit spheres @xmath58 .",
    "most mathematical software has this functionality built in . in case your favorite software does not have this functionality , algorithm [ alg : uniform - sphere ] below",
    "explains how to generate uniform distribution on the @xmath57-dimensional unit spheres by using independent normally distributed random variables .",
    "generating normally distributed random variables should be built - in in almost all mathematical software .",
    "[ alg : uniform - sphere ] generate @xmath59 independent standard normal random variables .",
    "set @xmath60 .",
    "then @xmath61 is uniformly distributed on the @xmath57-dimensional unit sphere .      for the dwos algorithm [ alg : dwos ] below",
    ", we use the stochastic representation of corollary [ cor : kakutani ] .",
    "recall that @xmath62 is the @xmath54-dimensional brownian motion , @xmath63 and @xmath64 are the probability law and expectation , respectively , under which @xmath65 . under the probability law @xmath63 , denote @xmath66    [ rem : exit - first ] @xmath67 and @xmath68 are independent , and @xmath69    for @xmath70 , denote @xmath71 .",
    "the stochastic approximation for @xmath72 is @xmath73 here@xmath74 is the termination - step of the trajectory of the each individual brownian particle @xmath75 starting from @xmath76 : @xmath77    for each @xmath78 , and @xmath79 , @xmath70 , the individual particle exit locations @xmath80 for the approximating sum are generated by duffin walk on spheres ( dwos ) algorithm [ alg : dwos ] below :    [ alg : dwos ] fix a small parameter @xmath81 .",
    "1 .   initialize : @xmath82 .",
    "2 .   while @xmath83 : 1 .   set @xmath84 .",
    "sample @xmath85 independently from the unit sphere @xmath86 ( by using algorithm [ alg : uniform - sphere ] ) .",
    "3 .   set @xmath87 .",
    "3 .   when @xmath88 : 4 .",
    "set @xmath89 to be the orthogonal projection of @xmath90 to @xmath91 .",
    "return @xmath89 .",
    "suppose we want use the wos algorithm directly without the duffin correspondence . to do this , we must estimate the term @xmath92 in proposition [ pro : kakutani ] .",
    "suppose the wos algorithm takes @xmath93 steps to hit the boundary with balls of radii @xmath94 .",
    "the weighted walk on spheres ( wwos ) algorithm [ alg : wwos ] below is based on the fact that the term @xmath92 can be decomposed into independent terms @xmath95 where the @xmath96 s are the exit times of the brownian motion from balls of radius @xmath97 , and these exit times are also independent of the exit locations from the ball . consequently",
    ", at each step @xmath98 of the wos algorithm , the brownian particle gains ( or loses ) an independent multiplicative weight that is given by @xmath99.\\ ] ] here @xmath100 .    by using the @xmath101-self - similarity of the brownian motion",
    "we see that @xmath102 = { \\mathbb{e}}\\left[e^{-\\lambda r^2 \\tau_{1}}\\right ]   = \\psi(\\lambda r^2).\\ ] ]    for @xmath103 the function @xmath104 is well - known , cf .",
    "wendel @xcite : @xmath105 here @xmath106 is the modified bessel function @xmath107    for @xmath108 , as far as we know , no simple formula for @xmath109 is known . however , the distribution function of @xmath110 is well - known , cf .",
    "kent @xcite or ciesielski and taylor @xcite : @xmath111 = 1 - \\frac{1}{2^{\\nu-1}\\gamma(\\nu+1)}\\sum_{i=1}^{\\infty } \\frac{j_{\\nu , i}^{\\nu-1}}{j_{\\nu+1}(j_{\\nu , i})}\\exp\\left\\{-\\frac12 j_{\\nu , i}^2 \\,t\\right\\}.\\ ] ] here @xmath112 , @xmath113 , and @xmath114 s are the positive zeros of the bessel function @xmath115 given by in the increasing order . consequently , by simple substitution to combined with change of differentiation and summation , @xmath116   \\nonumber \\\\   & = & \\frac{-1}{2^{\\nu-1}\\gamma(\\nu+1)}\\sum_{i=1}^{\\infty } \\frac{j_{\\nu , i}^{\\nu-1}}{j_{\\nu+1}(j_{\\nu , i})}\\int_0^\\infty e^{-\\mu t}\\,{\\mathrm{d}}\\left [ \\exp\\left\\{-\\frac{1}{2 } j_{\\nu , i}^2\\ , t\\right\\ } \\right ] \\nonumber \\\\ & = & \\frac{1}{2^{\\nu}\\gamma(\\nu+1)}\\sum_{i=1}^{\\infty } \\frac{j_{\\nu , i}^{\\nu+1}}{j_{\\nu+1}(j_{\\nu , i})}\\int_0^\\infty \\exp\\left\\{-\\left(\\mu+\\frac{1}{2 } j_{\\nu , i}^2\\right ) t\\right\\ } \\ , { \\mathrm{d}}t .",
    "\\label{eq : psi}\\end{aligned}\\ ] ] by the gauge condition @xmath117 . therefore , @xmath118_{t=0}^{\\infty } \\\\ & = &   \\frac{1}{2^{\\nu}\\gamma(\\nu+1)}\\sum_{i=1}^{\\infty } \\frac{j_{\\nu , i}^{\\nu+1}}{j_{\\nu+1}(j_{\\nu , i})\\left(\\mu+\\frac12 j_{\\nu , i}^2\\right)}.\\end{aligned}\\ ] ] consequently , we have obtained @xmath119 a formula that is true for all @xmath120 , i.e. , whenever the gauge condition [ ass](iii ) for the unit ball holds .    while it is possible to directly use the formula in numerical computations ,",
    "our experimental results show that this is very inefficient as the sum in the formula converges very slowly and several thousand terms are needed for workable accuracy .",
    "there are at least two reasonable approaches to address this shortcoming :    1 .",
    "one may use the formula to tabulate values of the function @xmath121 $ ] for given values of @xmath122 , where @xmath123 and @xmath124 , and then use the identity and the elementary properties of the expected value to obtain the approximation @xmath125-{\\mathbb{p}}\\left[\\tau_1\\le t_j\\right]\\right).\\ ] ] 2 .",
    "one may use the formula to tabulate values of the function @xmath126 for various values of @xmath127 , and then use the table and appropriate interpolation to approximate the function @xmath126 for an arbitrary value of @xmath128 .",
    "the first approach was used in examples of section [ sect : comparisons ] .",
    "approximations for function @xmath126 , for various values of @xmath129 and @xmath13 are illustrated in figure [ fig : psifun ] ( cf .",
    "the figure in @xcite for an illustration of @xmath104 for positive values of @xmath130 ) .     for @xmath131 for @xmath132 , where @xmath133 on the top ( left ) .",
    "the function @xmath134 , @xmath127 , where the dimension are @xmath132 , where @xmath133 on the top ( right ) .",
    ", title=\"fig:\",width=207 ] for @xmath131 for @xmath132 , where @xmath133 on the top ( left ) .",
    "the function @xmath134 , @xmath127 , where the dimension are @xmath132 , where @xmath133 on the top ( right ) . ,",
    "title=\"fig:\",width=207 ]    note that is the extension of the @xmath104-function , that appears in @xcite , but with different parametrization .",
    "now we are ready to give the weighted walk on spheres ( wwos ) algorithm : the approximation for @xmath72 is , by proposition [ pro : kakutani ] , @xmath135 here@xmath136 is the exit time for the each individual particle and @xmath137 .",
    "the individual particle exit locations @xmath138 and weights @xmath139 are generated by algorithm [ alg : dwos ] below :    [ alg : wwos ] fix a small parameter @xmath81 .",
    "1 .   initialize : @xmath140 , @xmath141 2 .   while @xmath142 : 1 .",
    "set @xmath143 .",
    "sample @xmath85 independently from the unit sphere @xmath144 ( by using algorithm [ alg : uniform - sphere ] ) .",
    "3 .   set @xmath145 and @xmath146 .",
    "here @xmath104 is given by for @xmath8 and for @xmath10 .",
    "3 .   when @xmath147 : 4 .",
    "set @xmath148 to be the orthogonal projection of @xmath149 to @xmath7 .",
    "return @xmath148 and @xmath150 .      for the yukawa case @xmath8",
    ", the weight loss @xmath151 of the particle can be interpreted as independent exponential killing of the particle .",
    "see @xcite , @xcite or @xcite for details .",
    "consequently , the wwos algorithm [ alg : wwos ] can be reinterpreted as killing walk on spheres ( kwos ) .",
    "our estimator for @xmath72 is @xmath152 where @xmath153 , @xmath78 are independent simulations of the trajectories brownian particles starting from point @xmath154 , and the set @xmath155 contains the particles that are not killed ; @xmath136 is the termination - step time of the algorithm .",
    "the individual particles are generated by algorithm [ alg : kwos ] below .",
    "[ alg : kwos ] fix a small parameter @xmath81 .",
    "1 .   initialize : @xmath140 .",
    "2 .   while @xmath142 : 1 .   set @xmath143 .",
    "2 .   kill the particle with probability @xmath156 .",
    "if the particle is killed , the algorithm terminates and returns @xmath157 .",
    "sample @xmath85 independently from the unit sphere @xmath144 ( by using algorithm [ alg : uniform - sphere ] ) .",
    "4 .   set @xmath145 .",
    "3 .   when @xmath147 : 4 .",
    "set @xmath148 to be the orthogonal projection of @xmath149 to @xmath7 .",
    "return @xmath148 .",
    "in this section , we give examples to motivate our algorithms and to illustrate their potential applications .",
    "the examples were computed by using a straightforward implementation algorithms in one and two - dimensional settings and chosen from the point of view of visualization .",
    "all computations were performed on a macbook air laptop .",
    "wolfram mathematica 10.2 and basic implementations of the algorithms with no performance optimizations were used .",
    "obviously , the stochastic approaches presented here are more attractive in higher dimensions , where many deterministic simulation methods are not available , or lead into excessive computation times .",
    "also , it should be noted that the algorithms in this paper are particularly suitable for parallel computation , as simulated paths are independent from each other .",
    "let @xmath158 $ ] and consider the differential equation @xmath159 with boundary values @xmath160 and @xmath161 .",
    "then the exact solution to the boundary value problem is given by @xmath162 the exact solution @xmath44 as well as its approximations with the dwos algorithm , where the problem is first lifted into dimension two by using the duffin correspondence , and with the wwos algorithm are illustrated in figure [ fig : onedim ] .",
    "( dashed ) and its approximations @xmath163 with dwos ( left ) and wwos ( right ) algorithms .",
    ", title=\"fig:\",width=207 ] ( dashed ) and its approximations @xmath163 with dwos ( left ) and wwos ( right ) algorithms . , title=\"fig:\",width=207 ]      next , we consider two simple boundary value problems of the equation on polygonal domains in the plane :    1 .",
    "the trapezoidal domain @xmath164 defined by the points @xmath165 and @xmath166 , where the boundary values are given by @xmath167 and with @xmath168 ( cf .",
    "example 4.4 and figure 2 of @xcite ) .",
    "2 .   the non - convex l - shaped domain @xmath169 defined by the points @xmath170 and @xmath166 , where boundary values are given by the non - continuous function @xmath171 and @xmath172 .",
    "we compute an approximation @xmath173 to the solution of the above boundary value problems by using both the dwos algorithm and the wwos algorithm . for dwos ,",
    "the problem is lifted to the dimension three .",
    "the dwos and wwos on the domain @xmath169 are illustrated in figure [ fig : wos23diml ] .",
    "approximations to the solutions are illustrated in figure [ fig : sol - trape ] and figure [ fig : sol - l ] .",
    "our experiments suggest that wwos algorithm is more stable than dwos and thus a smaller number of simulations are required for a comparable result .     with dwos ( left ) and wwos ( right ) algorithms . in dwos , the problem is first lifted into the dimension three by using the duffin correspondence .",
    "the wwos algorithm is purely two - dimensional , but it requires computation of the weight function @xmath104 . , title=\"fig:\",width=207 ] with dwos ( left ) and wwos ( right ) algorithms . in dwos ,",
    "the problem is first lifted into the dimension three by using the duffin correspondence .",
    "the wwos algorithm is purely two - dimensional , but it requires computation of the weight function @xmath104",
    ". , title=\"fig:\",width=207 ]     ( dwos , left ) and @xmath174 ( wwos , right ) and of the solution on the domain @xmath164 .",
    "the boundary values are given by the function @xmath175 and @xmath168 . , title=\"fig:\",width=219 ] ( dwos , left ) and @xmath174 ( wwos , right ) and of the solution on the domain @xmath164 .",
    "the boundary values are given by the function @xmath175 and @xmath168 . , title=\"fig:\",width=196 ]     ( dwos , left ) and @xmath174 ( wwos , right ) and of the solution on the domain @xmath169 .",
    "the boundary values are given by the function @xmath176 and @xmath177 . , title=\"fig:\",width=219 ] ( dwos , left ) and @xmath174 ( wwos , right ) and of the solution on the domain @xmath169 .",
    "the boundary values are given by the function @xmath176 and @xmath177 .",
    ", title=\"fig:\",width=196 ]",
    "it is clear that the kwos algorithm is better than the wwos algorithm , when it is applicable ( i.e. , in the yukawa case ) .",
    "our experiments in section [ sect : comparisons ] suggest that , at least on low dimensions , wwos algorithm is more stable than the dwos algorithm . consequently , it seems that the dwos algorithm is best used in high dimensions , where adding one extra dimension should not make much difference .",
    "however , the dwos algorithm is an extension , not a modification , of the classical wos algorithm , i.e. , if one has wos already implemented , implementing dwos is simply a matter of giving different input parameters to the wos algorithm ."
  ],
  "abstract_text": [
    "<S> we show that a constant - potential time - independent schrdinger equation with dirichlet boundary data can be reformulated as a laplace equation with dirichlet boundary data . with this reformulation , which we call the duffin correspondence , </S>",
    "<S> we provide a classical walk on spheres ( wos ) algorithm for monte carlo simulation of the solutions of the boundary value problem . </S>",
    "<S> we compare the obtained duffin wos algorithm with existing modified wos algorithms . </S>"
  ]
}
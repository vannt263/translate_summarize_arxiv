{
  "article_text": [
    "gene regulatory networks involving small numbers of molecules can be intrinsically noisy and subject to large concentration fluctuations @xcite .",
    "this fact substantially limits the ability to infer the causal relations within gene regulatory networks and the ability to understand the mechanisms involved in healthy and pathological conditions .",
    "a large interest has been raised in developing tools for gene regulatory network inference @xcite acknowledging the noisy / stochastic properties of experimental data @xcite , in parallel with studies addressing the prospective , forward , simulation of stochastic equations describing biochemical reactions @xcite .",
    "there is however another context which , despite its relevance as a tool to better understand intracellular dynamics , has received little attention from a mathematical modelling perspective .",
    "that is the situation where the basic gene regulatory network is known , together with a present distribution of molecules / proteins , and one wants to infer the previous molecules distributions that gave rise to the observed data .",
    "this is the case , for example , of a sample of necrotic cells where the concentration distributions for the relevant molecules can be calculated , and one would like to infer the initial concentrations that gave rise to the necrotic condition . in this context , the problem can be addressed with backward stochastic differential equations .    in this paper",
    "we consider gene regulatory networks of @xmath0 genes synthesizing @xmath1 proteins , @xmath2 .",
    "we propose to model the dynamics of this gene network by a backward stochastic differential equation ( bsde ) with the final condition @xmath3 at time @xmath4 , where @xmath5 is an @xmath1-dimensional vector of average final proteins concentrations , @xmath6 , @xmath7 $ ] , is a @xmath8-dimensional brownian motion , and @xmath9 is the matrix of the form :     e = (    _ 11 &  & _ 1d + & & + _ n1 &  & _ nd    ) .",
    "it is assumed that at time @xmath4 we can measure the distribution of the protein concentration , which is typically gaussian , to get the mean @xmath10 and the variances @xmath11 of protein concentrations",
    ". then one can pick the vector @xmath5 , equal to @xmath12 , and the matrix @xmath9 so that the @xmath13th component of @xmath3 has the variance @xmath14 .",
    "the bsde for the protein concentrations takes the form : where @xmath15 is the @xmath1-dimentional vector of protein concentrations at time @xmath16 , and @xmath17 is the proteins synthesis / degradation rate .",
    "the solution to bsde is a couple of stochastic processes @xmath18 with values in @xmath19 which verifies bsde and is adapted with respect to the filtration @xmath20 generated by the brownian motion @xmath6 .",
    "it is known that the solution pair @xmath18 is unique @xcite .",
    "the dynamics given by bsde is equivalent to the dynamics that follows the forward sde , known as langevin equation : where @xmath21 is the initial condition at time @xmath22 , possibly unknown .",
    "if @xmath15 solves fsde , then it is automatically @xmath20-adapted .",
    "therefore , the requirement for the solution pair @xmath18 to bsde to be @xmath20-adapted is a natural consequence of the langevin dynamics .",
    "the advantage of the bsde model is that it does not require to know the form of the noise , but instead it allows to explicitly obtain the noise as the solution .",
    "we emphasize once again that the bsde model assumes to have two unknown processes : the protein concentration process @xmath15 and the @xmath23-valued process @xmath24 specifying the form of the noise . the final condition of the form @xmath25 , with @xmath26 , and the requirement for @xmath18 to be @xmath20-adapted allows one to find the two unknown solution processes @xcite .    in order to test and validate our method we produce benchmark data using the gillespie forward method @xcite , with predefined kinetics and initial conditions . in our method",
    "we then use only the final distributions and compare the inferred , back - propagated distributions with the original distributions obtained from the standard forward simulation .",
    "below we present the bsde method to model gene expression .",
    "the proteins synthesis and degradation is observed on the interval @xmath27 $ ] . it is assumed that at the final time @xmath4 , the distributions of the protein concentrations are gaussian with the known means and standard deviations .",
    "thus , the input data for the bsde method are those means and the standard deviations at time @xmath4 .",
    "our method allows one to simulate protein concentration trajectories on the entire interval @xmath27 $ ] .",
    "the bsde method also allows to simulate the noise , but in this paper we will be interested only in protein concentrations . the computational algorithm is the following . it is known that @xcite if @xmath28 is the @xmath1-dimensional solution to the final value problem where @xmath29 , then @xmath30 and @xmath31 is the unique solution to bsde .",
    "thus , our approach to simulation of gene expression is to obtain a numerical solution to pde , to simulate a brownian motion trajectory @xmath6 starting at zero at time @xmath22 , and to obtain the trajectory @xmath15 as @xmath32 . for the synthesis / degradation rate @xmath33",
    "we propose the following expression . in case of two or more proteins ,",
    "i.e. @xmath34 , the synthesis / degradation rate @xmath35 , @xmath36 , of the @xmath13th protein has the form : where @xmath37 denotes the number of the gene synthesizing the @xmath13th protein , and @xmath38 is defined in terms of the action of a matrix on @xmath39 : @xmath40 here @xmath41 , @xmath42 are positive constants , and @xmath0 is the number of genes .",
    "the matrix element @xmath43 indicates the regulation of the @xmath13-th gene by the @xmath44-th protein .",
    "namely , @xmath43 can be negative , positive , or null , indicating repression , activation or non - regulation , respectively .    in case of one protein ( @xmath45 )",
    ", we will use the following formula for the synthesis / degradation rate : where @xmath12 , @xmath46 , and @xmath47 are positive constants .    in general ,",
    "the brownian motion @xmath6 is assumed to be @xmath8-dimensional , where @xmath8 need not to be equal to the number of proteins @xmath1 . for simplicity",
    ", we can take @xmath48 .",
    "this will facilitate solving pde numerically even in the case of several proteins .",
    "moreover , the simulation of two proteins via a @xmath49-dimensional brownian motion gives a better agreement with the gillespie method @xcite compared to the simulation of the same proteins via a @xmath50-dimensional brownian motion . in the case of a @xmath49-dimensional brownian motion the matrix @xmath9 becomes a vector @xmath51 , where the number @xmath52 should be chosen to be equal to @xmath53 to match the known distribution of protein concentrations at time @xmath4 .",
    "note that we actually need to know the difference @xmath54 , but not @xmath22 itself .",
    "we employed the gillespie method to produce data for validation of the bsde method .",
    "specifically , we performed a number of numerical simulations using the software bionets ( which implements the gillespie method ) for two cases : a self - regulating gene and a network of two genes generating two proteins .",
    "for the both methods , we analyzed the distributions of protein concentrations at several time points , say , @xmath55 , @xmath56 , @xmath57 , @xmath58 .",
    "all the distributions were very close to the gaussian .",
    "thus , the bsde method was validated by analyzing how close the gaussian distributions produced by it to those produced by the gillespie method at the given time points .",
    "more precisely , the protein concentration means @xmath59 and the standard deviations @xmath60 were compared using the simulation data obtained by the two methods for each protein at several fixed times @xmath61 , @xmath62 . to run the simulation by the bsde method , we used @xmath63 and @xmath64 at time @xmath4 obtained by the gillespie method",
    ", since the bsde method is backward and requires the final protein concentrations .",
    "namely , these data were used to specify the final condition @xmath25 in the bsde method : the @xmath13th component of @xmath65 was taken equal to @xmath66 with @xmath67 . using matlab @xcite and the data generated by each method , we built histograms and fitted the normal distribution to the data ( figures [ fig1 ] and [ fig4 ] ) . everywhere below the units of the time",
    "are arbitrary , and the protein concentrations are in the numbers of molecules . to obtain the results in specific units one has to scale the simulation parameters",
    ".      we started by analyzing the results for a self - regulating gene .",
    "the synthesis / degradation rate was taken of form rate1 with the parameters @xmath68 , @xmath69 , @xmath70 .",
    "the simulation by the gillespie method started at time @xmath71 , and the distributions of the protein concentrations were determined at times @xmath72 .",
    "then , the simulation by the bsde method started at time @xmath73 backwards in time .",
    "the means @xmath74 and the standard deviations @xmath75 , computed by simulating 5000 trajectories for both methods , are compared in table [ table : tab1 ] .",
    ".distribution parameters @xmath74 and @xmath75 for the protein concentrations of a self - regulating gene are computed at times @xmath76 0 , 50 , 100 , 200 , 300 , 400 .",
    "the data obtained by the gillespie method are in the second and the third columns , while the data obtained by the bsde method are in the last two columns .",
    "[ cols=\"^,^,^,^,^ \" , ]     fig4    the trajectories for the first and the second gene are presented in figure [ fig5 ] , ( a ) and ( b ) , respectively .",
    "in this article we presented the bsde method to model gene expression .",
    "we computed numerically the trajectories of the protein concentrations for a self - regulating gene and for a gene regulatory network consisting of two genes generating two proteins .",
    "the data obtained by the gillespie method were used to validate the bsde method .",
    "the bsde method can be applied in the situations where the distribution of the protein concentrations is known at some time @xmath4 , and we would like to know what happened prior to this time , provided that the initial moment is known .",
    "the bsde method has the advantage of not requiring to know the form of the noise .",
    "the bsde method can also be applied when the initial time @xmath22 as well as the time period @xmath54 are unknown .",
    "suppose me know the distributions at two time points @xmath77 and @xmath4 but we do not know the initial time @xmath22 .",
    "let us assume that we know a time period @xmath78 when the protein synthesis has started . as we already mentioned , obtaining a numerical solution to bsde bsde basically consists of two steps : solving pde pde and substituting a brownian motion trajectory into the pde solution .",
    "the final condition to pde depends on the difference @xmath54 .",
    "thus , our goal is to find the initial time @xmath22 within the interval @xmath78 so that the distribution of protein concentrations at time @xmath77 coincides with the given one .",
    "starting from @xmath79 , we test the initial times @xmath80 , @xmath81 , where @xmath82 is reasonably small , until we reach @xmath83 .",
    "we choose the initial time @xmath22 which gives the given protein distribution at time @xmath77 .",
    "note that we do not need to substitute 5000 brownian motion trajectories into the pde solutions obtained for different @xmath22 .",
    "we just need to simulate @xmath84 , namely , 5000 normally distributed random variables with the variance @xmath85 .",
    "we ran the simulation from @xmath86 to @xmath87 with step @xmath88 .",
    "the standard deviation changed slightly .",
    "the mean achieved the desired value @xmath89 exactly at @xmath71 .",
    "once we found the initial time @xmath22 , we can simulate the protein concentration trajectories on the entire interval @xmath27 $ ] .",
    "the research of e.s . and p.a .",
    "was funded by the european regional development fund through the program compete and by the portuguese government through the fct ( fundao para a cincia e a tecnologia ) under the project pest - c / mat / ui0144/2011 .",
    "thanks the fapesp for financial support of this research .",
    "thanks the graduate school of complex systems at each , usp , for the hospitality .",
    "tienne pardoux .",
    "stochastic analysis and related topics iv , progress in probability , volume  42 , chapter backward stochastic differential equations and viscosity solutions of systems of semilinear parabolic and elliptic pdes of second order , pages 79127 .",
    "springer science , 1998 ."
  ],
  "abstract_text": [
    "<S> in this article , we introduce a new method to model stochastic gene expression . the protein concentration dynamics follows a backward stochastic differential equation ( bsde ) . to validate our approach we employ the gillespie method to generate benchmark data . </S>",
    "<S> the numerical simulation shows that the data produced by both methods agree quite well . </S>"
  ]
}
{
  "article_text": [
    "is a python code designed to allow the testing of linearly perturbed coupled quintessence models with multiple cdm fluid species and multiple de scalar fields ; assisted coupled quintessence ( see e.g. refs .",
    "@xcite ) . for a more general overview of cosmological perturbation theory applied to multiple fluids",
    "see e.g. refs .",
    "+ the code allows two main approaches to investigating the viability of such models .",
    "firstly , the  stability \" of these perturbations may be investigated .",
    "here we use the word ",
    "stability \" rather loosely to mean the perturbations might experience runaway growth or  explode \" ; models in which the perturbations have runaway growth may be excluded .",
    "secondly , the power spectra or growth functions may be calculated to compare with observations .",
    "they may either prove to be outside current observational bounds ( see e.g. ref .",
    "@xcite ) or provide deviations from the standard @xmath0cdm model of cosmology which would be detectable in future surveys e.g. ska  @xcite or euclid  @xcite .",
    "+ the code is designed to be as general as possible , with the form of the potential and other model specific parameters set in the model.py module ( while the equations within the code allow for more exotic forms of dark matter which might have non - zero equations of state i.e. a pressure , as in warm dark matter ( wdm ) , see e.g. ref .",
    "@xcite ) . for",
    "any given model the code will either produce directly , or allow to be calculated , some quantities which may be compared with observations .",
    "most directly the evolution of the density perturbations for the cdm species is produced by the code along with the background densities for the same .",
    "this in turn allows the power spectrum for the density perturbations to be generated by running the code for a range of wavenumbers , @xmath1 .",
    "furthermore , growth functions such as @xmath2 , the evolution of the density contrast normalised by today s value i.e. @xmath3 , or @xmath4 , the e - fold derivative , where @xmath5 is the number of e - folds , @xmath6 is the scale factor at a given time and @xmath7 is the scale factor today .",
    "] of the density contrast scaled to the density contrast i.e. @xmath8 may be calculated from the data output and compared with , for example , @xmath9 measurements ( see e.g. ref .",
    "@xcite ) or @xmath10 see e.g. refs .",
    "@xcite . finally , and related to this last point , although the code gives results in",
    " flat gauge \" it is a simple matter to convert these into whichever gauge is required for a given research , or for comparison with existing literature e.g. the frequently used longitudinal or newtonian gauge  @xcite .",
    "we use perturbed flat ( flrw ) cosmology with line element , [ intdeds2 ] ds^2=-(1 + 2)dt^2 + 2ab_,idt dx^i + a^2(1 + 2(e_,i j - _ i j))dx^idx^j , where @xmath11 are the spatial coordinates , @xmath12 is coordinate time , a  comma \" denotes coordinate derivative , @xmath13 and @xmath14 are spatial metric perturbations , @xmath15 is the shift function and @xmath16 the lapse function . here",
    "the gauge is unspecified ; to fix the gauge to flat we take only the scalar parts of the perturbations and set @xmath17 , @xmath18 . for more details on the theory behind the code",
    "please refer to the companion paper ref .",
    "+ an advantage of this code is that it is relatively small and therefore fast .",
    "it can generate sufficient observables to allow the ruling out of regions of parameter space , or potentially a given model entirely , before embarking on more detailed analysis using larger codes with broader functionality e.g. class  @xcite or camb  @xcite .",
    "+ the rest of this paper is set out as follows ; section [ req ] outlines the system requirements for the package .",
    "section [ install ] contains installation instructions for the code .",
    "section [ modules ] details the naming of the variables and other code specific features , as well as listing each of the modules ; constants.py , background.py , perturbed.py and model.py . finally , section [ examples ] details some example applications of the code used in testing the code in development , as well to produce the first scientific results , as further insight into how to use the package .",
    "was written and tested using python 2.7.3 and should therefore work on higher versions .",
    "it may work with earlier versions but this has not been tested .",
    "+ the core modules use numpy , and these were developed and tested using v1.6.2 . + the core modules use scipy , and",
    "these were developed and tested using v0.10.1 .",
    "+ the various application examples e.g. example1.py , use matplotlib to demonstrate plotting of results but this is not required for the core modules .",
    "download the latest version of from either bitbucket @xcite or the website @xcite . if necessary unpack the zipped directories into a working directory .",
    "make sure to add the paths for the examples , general and model folders to pythonpath e.g. for a given session in unix in bash shell type ,    .... $ export pythonpath=\"$pythonpath:/<directory_structure>/examples \" $ export pythonpath=\"$pythonpath:/<directory_structure>/general \" $ export pythonpath=\"$pythonpath:/<directory_structure>/model \" ....    each line followed by return . adding the data folder to pythonpath is not necessary for the running of the core modules , however depending upon how the users application files are configured this might be necessary / advantageous .",
    "once installed with the pathing updated it should be possible to run the application in the normal way from the command line e.g.    .... $ python example1.py ....    where in this example the output data file is saved in the data folder . + alternatively , to run the application a preferred interface may be used e.g. spyder @xcite .",
    "there is also a readme.txt file included as a quick reference guide .",
    "the variable and function labels are listed in a table in the readme.txt file .",
    "the variables are stored in an array labeled @xmath19 $ ] , where @xmath20 runs from zero to @xmath21 where @xmath22 is the number of scalar fields and @xmath23 is the number of cdm fluids as defined by the dimensions of the couplings matrix .",
    "+ the only module which the user would need to alter is the model.py , which takes in the matrix for the couplings as an array labelled @xmath24 in the code , corresponding to @xmath25 in the equations below .",
    "it is also where the value of @xmath1 is set , however , this may be overridden by the python module constructed to call the modules if , for example , stepping through @xmath1 space is required e.g. constructing power spectra . to explore the range of viable couplings for a given model",
    ", the @xmath24 matrix values may be overridden in a similar way .",
    "see section [ model ] for more details .      this module is the smallest and simply contains the constants used within the package .",
    "any additional constants required if the code is modified should be put here .",
    "it contains the gravitational constant , @xmath26 , [ kappa ] = ( 8 g)^ , the hubble parameter , @xmath27 , hubble s constant , @xmath28 , and the critical density today ,    [ critdens ] _ c(0 ) ( =) .",
    "this module contains the background equations . in the first section",
    "are those which are not integrated , but are either constraints or useful quantities for the plotting of results . in the second section",
    "are the integrated equations .",
    "all the equations used here and in the perturbed.py module are taken from ref .",
    "a bar is used to denote background quantities .",
    "please note ; all the pressure terms in the equations throughout are replaced with appropriate equations of state terms within the code .",
    "the non - integrated equations are below .",
    "[ feintdeback ] h^2 = , is the friedmann equation , for @xmath29 fluids and @xmath22 scalar fields .",
    "@xmath30 is the potential for the scalar fields .",
    "the coordinate time derivative is denoted by dot .",
    "derivatives with respect to fields are denoted by a  comma \" .",
    "[ fedotintdeback ] = , is the time derivative of @xmath31 .",
    "[ fielddens ] |__i = + v , are the energy densities of the scalar fields .",
    "the integrated equations are as follows .",
    "[ dotrhorad ] _",
    "r = - 4 h |_r , is the evolution equation for the radiation energy density .",
    "[ dotrhobar ] _",
    "b = - 3 h |_b , is the evolution equation for the baryon energy density .",
    "[ dotrhocdm ] _",
    "= - 3 h ( | _ - |p _ ) - _ i _ i ( | _ - 3 |p _ ) _ i , are the evolution equations for the cdm energy densities , where @xmath32 is the coupling matrix .",
    "+ the next equations simply equate the functions for the time derivatives of the scalar fields , labelled @xmath33 in the code , with the variables for the same , labelled @xmath34 , within the code i.e. @xmath35 .",
    "[ ddotph ] _",
    "i = - 3 h _ i - v _ , _ i + _ _ i ( | _ - 3 |p _ ) , are the second time derivatives of the scalar fields .",
    "this module contains the perturbed equations . in the first section",
    "are those which are not integrated , but are either constraints or useful quantities for the plotting of results . in the second section",
    "are the integrated equations .",
    "a @xmath36 prefix is used to denote perturbed quantities .",
    "the non - integrated equations are below .",
    "[ consphi ] = - , is the constraint for the metric potential , @xmath16 , where @xmath37 is @xmath38 , where @xmath39 is the 3-velocity and @xmath40 is the shift .",
    "[ consb ] b = , is the constraint equation for @xmath40 .",
    "[ pertphdens ] _ _",
    "i = - ^2_i + _ i _",
    "i + v , _ _",
    "i _ i , is the perturbed energy density for the scalar fields .",
    "[ zeta ] = - - h ( ) , is the gauge invariant curvature perturbation , @xmath41 ( see e.g. ref .",
    "the integrated equations are as follows .",
    "[ dotpertrhorad ] = - 4 h _",
    "r + ( _ r - b)|_r , is the evolution equation for the radiation perturbed energy density .",
    "[ dotpertrhobar ] = - 3 h _",
    "b + ( _ b - b)|_b , is the evolution equation for the baryon perturbed energy density .",
    "[ dotpertrhocdm ] = - 3 h ( _ + p _ ) + ( _ - b)(|_+ |p _ ) - _ i _ i ( |_- 3 |p _ ) _ i - _ i _ i ( _ - 3 p _ ) _ i , are the evolution equations for the cdm perturbed energy densities .",
    "[ dotvrad ] _",
    "r = - - , is the evolution equation for the 3-velocity for the radiation fluid .",
    "[ dotvbar ] _",
    "b = - h _ b - , is the evolution equation for the 3-velocity for the baryon fluid .",
    "[ dotvcdm ] _",
    "= _ i _ i ( |_- 3 |p _ ) + 3h _ - h_- - , are the evolution equations for the 3-velocities for the cdm fluids . similarly to the background.py module , the next equation simply equates the function for the time derivative of the perturbed scalar fields , labelled @xmath42 within the code , with the variable for the same , labelled @xmath43 , within the code i.e. @xmath44 .",
    "[ ddotdelph ] & _ i & = _ i - _ j v,__i _ j _ j + & - & _ i - _ i - 2 v,__i + 2 _ _ i ( |_- 3 |p _ ) + _ _ i ( _ - 3 p _ ) - 3 h _",
    "i , are the second time derivatives of the perturbed scalar fields . finally , the last function included at the end of the module is the array of all functions passed to the integrator , both background and perturbed .",
    "this module is where the model being studied is defined , along with the setting of the wavenumber , @xmath1 , placed here for convenience in the code structure .",
    "if the user wishes to write a module calling  this value may be overwritten locally , for example if the user wanted to loop through @xmath1 values , or when plotting functions from multiple saved data sets for different @xmath1 values . many of the parameters in the model.py file included are specific to the sum of exponentials potential e.g.    [ sumofexppot ] v(_1 ... _i ) = m^4 _ i e^-_i _ i , used to test the  code and give the first scientific results .",
    "this is simply included as one example from the large array of possible potentials , and the example model.py contains many parameters set specifically for this example potential , and which would be altered if using a different potential e.g. the derivatives of the potential . below only general quantities will be discussed .",
    "+ @xmath24 is the array of the couplings .",
    "this has been entered directly in the included model.py but may be loaded from a numpy save file created separately , and for larger models with many cdm fluids and many scalar fields this will be the practical method .",
    "the module uses the dimensions of this array to determine the number of cdm fluids , assigned to variable @xmath23 , and number of scalar fields , assigned to variable @xmath22 .",
    "it also uses these to initialise the array of all integrated variables , @xmath45 , the initial condition array , @xmath46 , and the cdm fluids equations of state array , @xmath47 .",
    "+ function @xmath30 is the potential for a given model .",
    "function @xmath48 is the array of derivatives of the potential with respect to the scalar fields .",
    "function @xmath49 is the array of second derivatives of the potential with respect to the scalar fields .",
    "those included in the model.py file are for the sum of exponentials potential and have been entered manually as for a two cdm fluid , two scalar field model .",
    "more generally , for many cdm fluids and many scalar fields @xmath48 and @xmath49 should be loaded from externally created saved arrays as per the @xmath24 array .",
    "these example python files were created during the testing and initial use of the  code .",
    "they are included in the package to give some guidance as to how the code may utilised , but are not intended to be prescriptive in its use .",
    "this file was designed to evolve perturbations to just matter and radiation , with no cdm fluids or dark energy .",
    "this was compared to the same results in @xcite .",
    "the file is included as examplepad.py .",
    "the corresponding model file is included as modelpad.py .",
    "+ the imports section heads the file . next , the range of times ( @xmath50 is the initial time , @xmath51 the final time ) and the stepping ( @xmath52 ) is defined , in e - folds . after these are the initial conditions . in this example",
    "some of the perturbed initial conditions depended upon functions of the background , hence the split in the setting of the initial conditions seen in the module . for convenience",
    "an array of all times is created , @xmath53 .",
    "+ next the integrator is set up , with certain non - integrated useful functions calculated as the code runs .",
    "the @xmath54 integration method is being used in this example but other possible integration methods are shown",
    " hashed out \" within the code .",
    "+ after the integrator has finished the results are saved ( @xmath55 ) , along with the time array ( @xmath53 ) .",
    "+ the next section demonstrates the plotting of some useful and interesting quantities either plotted directly from the results or calculated using them . + the first two sections plot the background and perturbed energy density for matter and radiation .",
    "the next two sections plot the density contrasts in the flat gauge in which the code is written and then plots the density contrasts converted to longitudinal gauge as in @xcite . the next two sections plot longitudinal @xmath56 ( where @xmath57 ) .",
    "+ next is flat @xmath56 .",
    "this is followed by the comoving curvature perturbation , @xmath41 , and then the metric potential , @xmath16 , in flat gauge , the shift , @xmath40 , and then @xmath16 in longitudinal gauge shown in figure  [ padphi ] for comparison with @xcite .",
    "+    , for @xmath58 , where @xmath59 is the wavenumber for the horizon size at the time of matter - radiation equality.,width=302 ]    finally the 3-velocities for matter and radiation are plotted .",
    "the file for this example is included as lcdm.py .",
    "the model file corresponding to this is included as modellcdm.py .",
    "the layout is much as for section [ ex 1 ] with the following exceptions .",
    "this code was adapted from a test for one scalar field interacting with one cdm fluid .",
    "standard @xmath0cdm behaviour was then achieved by flattening the potential and setting it to the same energy density as a cosmological constant today .",
    "the initial conditions for the scalar field and the scalar field velocity are then set to zero as are the field perturbation and field perturbation velocity .",
    "a small additional python code called gandfplotter(long)lcdm.py , held in the @xmath60 folder , was used to produce plots of the growth functions in longitudinal gauge over a range of @xmath1s .",
    "figure  [ glcdmlong ] is included as an example output for log of the growth factor , @xmath2 ( @xmath61 ) .    , subhorizon scales .",
    "@xmath28 is the hubble constant.,width=377 ]    for further results and details see @xcite .",
    "the file for this example is included as example1.py .",
    "the model file corresponding to this is included as model.py .",
    "the layout is much as for section [ ex 1 ] with the following exceptions .",
    "this code is for two scalar fields interacting with two cdm fluids .",
    "after initial radiation domination , an epoch of matter domination is entered which finally transitions to one of dark energy domination .",
    "a small additional python code called gandfplotter(long).py , held in the @xmath60 folder , was used to produce plots of the growth functions in longitudinal gauge over a range of @xmath1s .",
    "figure  [ gcqmdlong ] is included as an example output for log of the growth factor , @xmath2 ( @xmath3 ) .",
    "is the hubble constant.,width=377 ]    for further results and details see @xcite .",
    "as detailed above ,  is designed to be a fast code for quickly performing initial testing of coupled quintessence models by constraining the allowed parameter space , or possible elimination or validation of models through comparison with observations .",
    "is released under an open source bsd license which can be found in the license.txt file included with this distribution . if  is used in any published work the authors are kindly asked to cite this work and the related first implementation paper @xcite .",
    "the author is grateful to the collaborators on the main results paper @xcite , nelson nunes , david mulryne and karim malik , and also to ian huston , pedro carrilho and phil bull for useful and insightful discussions .",
    "also , tom charnock for tea .",
    "al is funded by an stfc studentship .",
    "the computer algebra package @xcite was used in the derivation of some of the equations .",
    "l.  amendola , t.  barreiro and n.  j.  nunes , arxiv:1407.2156 [ astro-ph.co ] . l.  amendola , mon .  not .",
    "312 * , 521 ( 2000 ) [ astro - ph/9906073 ] .",
    "k.  a.  malik and d.  wands , phys .",
    "rept .   * 475 * , 1 ( 2009 ) [ arxiv:0809.4944 [ astro - ph ] ] .",
    "k.  a.  malik and d.  wands , jcap * 0502 * , 007 ( 2005 ) [ astro - ph/0411703 ] .",
    "e.  macaulay , i.  k.  wehus and h.  k.  eriksen , phys .  rev",
    ".  lett .   * 111 * , no .",
    "16 , 161301 ( 2013 ) [ arxiv:1303.6583 [ astro-ph.co ] ] .",
    "a.  raccanelli _ et al .",
    "_ , arxiv:1501.03821 [ astro-ph.co ] . t.  d.  kitching _ et al .",
    "_ , arxiv:1501.03978 [ astro-ph.co ] .",
    "h.  pagels and j.  r.  primack , phys .",
    "lett .   * 48 * , 223 ( 1982 ) .",
    "doi:10.1103/physrevlett.48.223 a.  piloyan , v.  marra , m.  baldi and l.  amendola , jcap * 1402 * , 045 ( 2014 ) [ arxiv:1401.2656 [ astro-ph.co ] ] .",
    "t.  padmanabhan , aip conf .",
    "proc .   *",
    "843 * , 111 ( 2006 ) [ astro - ph/0602117 ] .",
    "d.  blas , j.  lesgourgues and t.  tram , jcap * 1107 * , 034 ( 2011 ) [ arxiv:1104.2933 [ astro-ph.co ] ] .",
    "a.  lewis , a.  challinor and a.  lasenby , astrophys .",
    "j.   * 538 * , 473 ( 2000 ) [ astro - ph/9911177 ] .",
    "p.  carrilho and k.  a.  malik , jcap * 1602 * , no .",
    "02 , 021 ( 2016 ) doi:10.1088/1475 - 7516/2016/02/021 [ arxiv:1507.06922 [ astro-ph.co ] ] .",
    "k.  peeters , comput .",
    "commun .   * 176 * , 550 ( 2007 ) [ arxiv : cs/0608005 ] .",
    "k.  peeters , arxiv : hep - th/0701238 ."
  ],
  "abstract_text": [
    "<S> this paper is a guide to the installation and use of the python package . </S>",
    "<S> is designed to evolve linear perturbations to coupled quintessence models with a arbitrary number of cold dark matter ( cdm ) fluids and dark energy ( de ) scalar fields as dictated by a given model . </S>",
    "<S> the equations are sufficiently general to allow for more exotic dark matter with a non - zero equation of state . </S>",
    "<S> several example uses are included in order to demonstrate typical functionality to the potential user . </S>",
    "<S> is released under an open source modified bsd license and is available on bitbucket . </S>"
  ]
}
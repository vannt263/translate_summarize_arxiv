{
  "article_text": [
    "cylindrical algebraic decomposition ( cad ) is a key tool in real algebraic geometry both for its original motivation , quantifier elimination ( qe ) problems ( * ? ? ?",
    "* etc . ) , but also in other applications ranging from robot motion planning ( * ? ? ?",
    "* etc . ) to programming with complex functions ( * ? ? ?",
    "* etc . ) and branch cut analysis ( * ? ? ?",
    "* etc . ) .",
    "decision methods for real closed fields are used in theorem proving @xcite , so cad has much potential here .",
    "in particular metitarski employs qepcad @xcite to decide statements in special functions using polynomial bounds @xcite .",
    "work is ongoing to implement a verified cad procedure in coq @xcite .",
    "since its inception there has been much research on cad .",
    "new types of cad and new algorithms have been developed , offering improved performance and functionality .",
    "the thesis of this paper is that more attention should now be given to how problems are presented to these algorithms .    how a problem is formulated can be of fundamental importance to algorithms , rendering simple problems infeasible and vice versa .",
    "in this paper we take some steps towards better formulation by introducing a new measure of cad complexity and new heuristics for many of the choices required by cad algorithms .",
    "we also further explore preconditioning the input via grbner bases .",
    "a cad is a decomposition of @xmath0 into cells arranged cylindrically ( meaning their projections are equal or disjoint ) and described by semi - algebraic sets . traditionally cads are produced sign - invariant to a given set of polynomials in @xmath1 variables @xmath2 , meaning the sign of the polynomials does not vary on the cells .",
    "this definition was provided by collins in @xcite along with an algorithm which proceeded in two main phases .",
    "the first , _ projection _ , applies a projection operator repeatedly to a set of polynomials , each time producing another set of polynomials in one fewer variables .",
    "together these sets provide the _ projection polynomials_. the second phase , _ lifting _ , then builds the cad incrementally from these polynomials .",
    "first @xmath3 is decomposed into cells which are points and intervals corresponding to the real roots of the univariate polynomials",
    ". then @xmath4 is decomposed by repeating the process over each cell using the bivariate polynomials at a sample point of the cell .",
    "the output for each cell consists of _ sections _ of polynomials ( where a polynomial vanishes ) and _ sectors _ ( the regions between these ) . together",
    "these form the _ stack _ over the cell , and taking the union of these stacks gives the cad of @xmath4 .",
    "this process is repeated until a cad of @xmath0 is produced .",
    "this final cad will have cells ranging in dimension from 0 ( single points ) to @xmath1 ( full dimensional portions of space ) .",
    "the cells of dimension @xmath5 are referred to as _",
    "@xmath5-cells_.    it has often been noted that such decompositions actually do much more work than is required for most applications , motivating theory which considers not just polynomials but their origin .",
    "for example , partial cad ( * ? ? ? * etc . ) avoids unnecessary lifting over a cell if the solution to the qe problem on a cell is already apparent .",
    "another example is the use of cad with equational constraints ( * ? ? ?",
    "* etc . ) where sign - invariance is only ensured over the sections of a designated equation , thus reducing the number of projection polynomials required .",
    "it is worth noting that while the lifting stage takes far more resources that the projection , improvements of the projection operator have offered great benefits .    applications often analyse formulae ( boolean combinations of polynomial equations , inequations and inequalities ) by constructing a sign invariant cad for the polynomials involved .",
    "however this analyses not only the given problem , but any formula built from these polynomials . in @xcite",
    "the authors note that it would be preferable to build cads directly from the formulae and so define a truth table invariant cad ( tticad ) as one which is has invariant truth values of various quantifier - free formulae ( qffs ) in each cell . in @xcite",
    "an algorithm was produced which efficiently constructed such objects for a wide class of problems by utilising the theory of equational constraints .",
    "the tticad algorithm in @xcite takes as input a sequence of qffs , each of which is a formula with a designated equational constraint ( an equation logically implied by the formula ) .",
    "it outputs a cad such that on each cell of the decomposition each qff has constant truth value .",
    "the algorithm is more efficient than constructing a full sign - invariant cad for the polynomials in the qffs , since it uses the theory of equational constraints for each qff to reduce the projection polynomials used and hence the number of cells required .",
    "its benefit over equational constraints alone is that it may be used for formulae which do not have an overall explicit equational constraint ( and to greater advantage than the use of implicit equational constraints ) .",
    "many applications present problems in a suitable form for tticad , such as problems from branch cut analysis @xcite .    however , it is possible to envision problems where although separate qffs are not imposed they could still lead to more economical cads , ( see example [ ex : tti - we ] ) .",
    "further , we may consider splitting up individual qffs if more than one equational constraint is present .",
    "this leads to the question of how best to formulate the input to tticad , a question which motivated this paper and is answered in section [ sec : tticad ] . some of this analysis",
    "could equally be applied to the theory of equational constraints alone and so this is considered in section [ sec : eqconst ] .    in devising heuristics to guide this process we realised that the existing measures for predicting cad complexity could be misled .",
    "an important use for these is choosing a variable ordering for a cad ; a choice which can make a substantial difference to the tractability of problems .",
    "we use @xmath6 to indicate @xmath7 is less than @xmath8 in an ordering . in @xcite",
    "the authors presented measures for cad complexity but none of these consider aspects of the problem sensitive to the domain we work in ( namely real geometry rather than complex ) . in section",
    "[ sec : varord ] we suggest a simple new measure ( the number of zero cells in the induced cad of @xmath9 ) leading to a new heuristic for use in conjunction with @xcite .",
    "we demonstrate in general it does well at discriminating between variable choices , and for certain problems is more accurate than existing heuristics .",
    "these three topics are all examples of choices for the formulation of problems for cad algorithms .",
    "they are presented in the opposite order to which they were considered above , as it is more natural for presenting the theory .",
    "problem formulation was considered in this conference series last year @xcite where the idea of preconditioning cad using grbner bases was examined .",
    "this work is continued in section [ sec : grobner ] where we now consider preconditioning tticad .",
    "the tools developed for the formulation of input here lead to the question of whether their use is merely an addition to the algorithm or leads to the creation of a new problem .",
    "this question also arose in @xcite where a project collecting together a repository of examples for cad is described .",
    "in section [ sec : conclusion ] we give our thoughts on this along with our conclusions and ideas for future work .",
    "it is well documented ( * ? ? ?",
    "* etc . ) that the variable ordering used to construct a cad can have a large impact on the number of cells and computation time .",
    "example [ ex : we1 ] gives a simple illustration .",
    "note that the effect of the variable ordering can be far greater than the numbers presented here and can change the feasibility of a given problem . in @xcite",
    "the authors prove there are problems where one variable ordering will lead to a cad with a constant number of cells while another will give a number of cells doubly exponential in the number of variables .",
    "[ ex : we1 ] consider the polynomial @xmath10 whose graph is the solid curve in figure [ fig : we ] .",
    "we have two choices of variable ordering , which lead to the two different cads visualised .",
    "each cell is indicated by a sample point ( the solid circles ) .",
    "setting @xmath11 we obtain a cad with 3 cells ; the curve itself and the portions of the plane either side .",
    "however , setting @xmath6 leads to a cad with 11 cells ; five 2-cells , five 1-cells and one 0-cell .",
    "the dotted lines indicate the stacks over the 0-cells in the induced cad of @xmath9 . with @xmath11",
    "the cad of @xmath9 had just one cell ( the entire real line ) while with @xmath6 there are five cells .",
    "we note that these numbers occur using various cad algorithms .",
    "indeed , for this simple example it is clear that these cads are both minimal for their respective variable orderings , ( i.e. there is no other decomposition which could have less cells whilst maintaining cylindricity . )    .",
    ", title=\"fig:\",width=170 ] .",
    ", title=\"fig:\",width=170 ]      in @xcite the authors considered the problem of choosing a variable ordering for cad and qe via cad .",
    "they identified a measure of cad complexity that was correlated to the computation time , number of cells in the cad and number of leaves in a partial cad .",
    "they identified the _ sum of total degrees of all monomials of all projection polynomials _ , known as ` sotd ` and proposed the heuristic of picking the ordering with the lowest ` sotd ` .",
    "although the best known heuristic , ` sotd ` does not always pick the ideal ordering as demonstrated by some experiments in @xcite and sometimes can not distinguish between orderings as shown in example [ ex : we2 ] .",
    "[ ex : we2 ] consider again the problem from example [ ex : we1 ] . applying any",
    "known valid projection operator to @xmath12 gives , with respect to @xmath8 , the set of projection factors @xmath13 ( arising from the coefficients and discriminant of @xmath12 ) .",
    "similarly , applying a projection operator with respect to @xmath7 gives @xmath14 hence in this case both variable orderings have the same ` sotd ` .",
    "we consider why ` sotd ` can not differentiate between the orderings in this case .",
    "algebraically , the only visible difference is that one ordering offers two factors of degree one while the other offers a single factor of degree two . from figure",
    "[ fig : we ] we see that one noticeable difference between the variable orderings is the number of 0-cells in the cad of @xmath9 ( the dotted lines ) .",
    "this is a feature of the real geometry of the problem as opposed to properties of the algebraic closure , measured by @xmath15 .",
    "investigating examples of this sort we devised a new measure ` ndrr ` defined to be the _ number of distinct real roots of the univariate projection polynomials _ and created the associated heuristic of picking the variable ordering with lowest ` ndrr ` .",
    "considering again the projection factors from example [ ex : we2 ] we see that this new heuristic will correctly identify the ordering with the least cells .",
    "the number of real roots can be identified , for example , using the theory of sturm chains .",
    "this extra calculation will likely take more computation time than the measuring of degrees required for ` sotd ` .",
    "however , both costs are usually negligible compared to the cost of lifting in the cad algorithm .",
    "we do not propose ` ndrr ` as a replacement for ` sotd ` but suggest they are used together since both have relative merits .",
    "we have already noted that the strength of ` ndrr ` is its ability to give information on the real geometry of the cad .",
    "its weakness is that it only gives information on the complexity of the univariate polynomials , compared to ` sotd ` which measures at all levels .",
    "if the key differences between orderings are not apparent in the univariate polynomials then ` ndrr ` is of little use , as in example [ ex : quartic ] .",
    "[ ex : quartic ] consider the problem of finding necessary and sufficient conditions on the coefficients of a quartic polynomial so that it is positive semidefinite : eliminate the quantifier in , @xmath16 this classic qe problem was first proposed in @xcite and was a test case in @xcite .",
    "there are six admissible variable orderings ( since @xmath7 must always be projected first ) . in all of these orderings the univariate projection factor set will consist of just the single variable of lowest order , ( either @xmath17 or @xmath18 ) and hence all orderings will have an ` ndrr ` of one . however , the ` sotd ` can distinguish between the orderings as reported in @xcite .    despite the shortcoming of only considering the first level , ` ndrr ` should not be dismissed as effects at the bottom level can be magnified .",
    "we suggest using the heuristics in tandem , either using one to break ties between orderings which the other can not discriminate or by taking a combination of the two measures .    in @xcite the authors suggested a second heuristic , a greedy algorithm based on ` sotd ` .",
    "this approach avoided the need to calculate the projection polynomials for all orderings , instead choosing one variable at a time using the sum of total degree of the monomials from those projection polynomials obtained so far .",
    "unfortunately there is not an obvious greedy approach to using ` ndrr ` . for problems involving many variables ( so that calculating the full set of projection polynomials for each ordering is infeasible ) we should revert to the ` sotd ` greedy algorithm , perhaps making use of ` ndrr ` to break ties .",
    "it has been noted in @xcite that a class of problems particularly unsuitable for ` sotd ` is choosing between coupled variables ( two variables which are the real and imaginary parts of a complex variable ) .",
    "these are used , for example , when analysing complex functions by constructing a cad to decompose the domain according to their branch cuts .",
    "the ordering of the coupled variables for the cad can affect the efficiency of the algorithm , as in example [ ex : bc ] .    [",
    "ex : bc ] consider @xmath19 where @xmath20 .",
    "the square root function has a branch cut along the negative real axis and so @xmath12 has branch cuts when @xmath21 where @xmath22 are coupled real variables such that @xmath23 . with variable ordering @xmath6",
    "we have @xmath24 and a cad with 21 cells while with variable ordering @xmath11 we have @xmath25 and a cad with 29 cells .",
    "the cads are visualised in figure [ fig : coupled ] using the same techniques as described for figure [ fig : we ] .    .",
    ", title=\"fig:\",width=170 ] . ,",
    "an * equational constraint * is an equation logically implied by a formula .",
    "the theory of equational constraints is based on the observation that the formula will be false for any cell in the cad where the equation is not satisfied .",
    "hence the polynomials forming any other constraints need only be sign invariant over the sections of the equational constraint .",
    "the observation was first made in @xcite with mccallum providing the first detailed approach in @xcite . given a problem with",
    "an equational constraint mccallum suggested a reduced projection operator , which will usually result in far fewer projection factors and a simpler cad .    this approach has been implemented in qepcad , a command line interface for quantifier elimination through partial cad @xcite .",
    "it can also be induced in any implementation of tticad as discussed in section [ sec : tticad ] .",
    "the use of equational constraints can offer increased choice for problem formulation beyond that of picking a variable order .",
    "if a problem has more than one equational constraint then one must be _ designated _ for use in the algorithm .",
    "we propose simple heuristics for making this choice based on ` sotd ` and ` ndrr ` .",
    "let @xmath26 be the mccallum projection operator which , informally , is applied to a set of polynomials to produce the coefficients , discriminant and cross resultants .",
    "the full technical details are available in @xcite and a validated algorithm was given in @xcite .",
    "note that implementations usually make some trivial simplifications such as removal of constants , exclusion of polynomials that are identical to a previous entry ( up to constant multiple ) , and only including those coefficients which are really necessary for the theory to hold .",
    "next , for some equational constraint @xmath12 let @xmath27 be the reduced projection operator relative to @xmath12 described in @xcite .",
    "informally , this consists of the coefficients and discriminant of @xmath12 together with the resultant of @xmath12 taken with each of the other polynomials .",
    "this is used for the first projection , reverting to @xmath26 for subsequent projections .",
    "we can then apply the ` sotd ` and ` ndrr ` measures to the sets of projection polynomials as a measure of the complexity of the cads that would be produced .",
    "we denote these values by ` s ` and ` n ` respectively and our heuristics are then to choose the equational constraint that minimises these values .",
    "we ran experiments to test the effectiveness of these heuristics using problems from the cad repository described in @xcite .",
    "we selected those problems with more than one equational constraint , for which at least one of the choices is tractable .",
    "the experiments were run in maple using the ` projectioncad ` package @xcite and the results are displayed in table [ tab : ectests ] with the cell count , computation time and heuristic values given for each problem and choice of equational constraint .    .comparing the choice of equational constraint for a selection of problems .",
    "the lowest cell count for each problem is highlighted and the minimal values of the heuristics emboldened .",
    "[ cols=\"<,>,<,^,^,^,^,>,<,^,^,^,^,>,<,^,^,^,^ , > \" , ]     table [ tab : tti - gro ] shows that the addition of grbner techniques to tticad can produce significant reductions : a drop from 153 cells in 0.8s to 27 cells in under 0.1s ( including the time required to compute the grbner bases ) . as discussed in @xcite , preconditioning is not always beneficial , as evident from the handful of cases that produce more cells than tticad alone . as with table [",
    "tab : ectests ] we have highlighted the examples with lowest cell count and emboldened the lowest heuristic . looking at the values of s and n we see that for this example ndrr is the best measure to use .    in @xcite tnoi",
    "was used to predict whether preconditioning by grbner basis would be beneficial . in this example tnoi",
    "is increased in both orderings by taking a basis , which correctly predicts a bigger full cad after preconditioning .",
    "however , tnoi does not take into account the added subtlety of tticad ( as shown by the huge benefit above ) .",
    "in this paper we have considered various issues based around the formulation of input for cad algorithms .",
    "we have revisited the classic question of choosing the variable ordering , proposing a new measure of cad complexity ` ndrr ` to complement the existing ` sotd ` measure .",
    "we then used these measures as heuristics for the problem of designating equational constraints and qff formulation for tticad .",
    "finally we considered the effect of preconditioning by grbner bases .",
    "it is important to note that these are just heuristics and , as such , can be misleading for certain examples . although the experimental results in section [ sec : eqconst ] suggest sotd is a finer heuristic than ndrr we have demonstrated that there are examples when ndrr performs better , not just example [ ex : ec ] which was contrived for the purpose but also example [ ex : tti - gro ] introduced for the work on grbner bases .",
    "these issues have been treated individually but of course they intersect . for example it is also necessary to pick a variable ordering for tticad .",
    "this choice will need to made before employing the method for choosing qff formulation described in section [ sec : tticad ] .",
    "however , the optimal choice of variable ordering for one qff formulation may not be optimal for another ! for example",
    ", the tticad formulation with two qffs was the best choice in example [ ex : tti - we ] where the variable ordering was stated as @xmath6 but if we had @xmath11 then a single qff is superior .",
    "the idea of combining tticad with grbner preconditioning ( discussed in @xcite , @xcite ) is shown , by a worked example , to have the potential of being a very strong tool . however",
    ", this adds even more complication in choosing a formulation for the problem .",
    "taken together , all these choices of formulation can become combinatorially overwhelming and so methods to reduce this , such as the greedy algorithm in @xcite or the method at the end of section [ sec : tticad ] , are of importance .",
    "all these options for problem formulation motivate the somewhat philosophical question of when a reformulation results in a new problem .",
    "when a variable ordering is imposed by an application ( such as projecting quantified variables first when using cad for quantifier elimination ) then violating this would clearly lead to a new problem while changing the ordering within quantifier blocks could be seen to be a optimisation of the algorithm .",
    "similar distinctions could be drawn for other issues of formulation .",
    "given the significant gains available from problem reformulation it would seem that the existing technology could benefit from a redesign to maximise the possibility of its use .",
    "for example , cad algorithms could allow the user to input the variables is quantifier blocks so that the technology can choose the most appropriate ordering that still solves the problem .",
    "* all the work in this paper has been stated with reference to cad algorithms based on projection and lifting .",
    "a quite different approach , cad via triangular decomposition , has been developed in @xcite and implemented as part of the core maple distribution .",
    "this constructs a ( sometimes quite different ) sign - invariant cad by transferring the problem to complex space for solving .",
    "a key question is how much of the work here transfers to this approach ?",
    "* can the heuristics for choosing equational constraints also be used for choosing pivots when using the theory of bi - equational constraints in @xcite ?",
    "* can the ` ndrr ` measure be adapted to consider also the real roots of those projection polynomials with more than one variable ?",
    "we finish by discussing one of the initial motivations for engaging in work on problem formulation : a quantifier elimination problem proving a property of joukowski s transformation .",
    "this is the transformation @xmath28 which is used in aerodynamics to create an aerofoil from the unit circle .",
    "the fact it is bijective on the upper half plane is relatively simple to prove analytically but we found the state of the art cad technology was incapable of producing an answer in reasonable time .",
    "then , in a personal communication , chris brown described how reformulating the problem with a succession of simple logical steps makes it amenable to qepcad , allowing for a solution in a matter of seconds .",
    "these steps included splitting a disjunction to form two separate problems and the ( counter - intuitive ) removal of quantifiers which block qepcad s use of equational constraints .",
    "further details are given in ( * ? ? ?",
    "iii ) and in the future we aim to extend our work on problem formulation to develop techniques to automatically render this problem feasible .",
    "this work was supported by the epsrc grant : ep / j003247/1 .",
    "the authors would like to thank scott mccallum for many useful conversations on tticad and chris brown for sharing his work on the joukowski transformation .",
    "quantifier elimination for real closed fields by cylindrical algebraic decomposition . in _ proc .",
    "2nd gi conference on automata theory and formal languages _ , pages 134183 .",
    "springer - verlag , 1975 .",
    "quantifier elimination by cylindrical algebraic decomposition ",
    "20 years of progress . in b.",
    "caviness and j.  johnson , editors , _ quantifier elimination and cylindrical algebraic decomposition _ , texts & monographs in symbolic computation , pages 823 .",
    "springer - verlag , 1998 .",
    "m.  england .",
    "an implementation of cad in maple utilising mccallum projection .",
    "department of computer science technical report series 2013 - 02 , university of bath .",
    "available at ` http://opus.bath.ac.uk/33180/ ` , 2013 .",
    "s.  mccallum .",
    "an improved projection operation for cylindrical algebraic decomposition . in b.",
    "caviness and j.  johnson , editors , _ quantifier elimination and cylindrical algebraic decomposition _ , texts & monographs in symbolic computation , pages 242268 .",
    "springer - verlag , 1998 ."
  ],
  "abstract_text": [
    "<S> cylindrical algebraic decomposition ( cad ) is an important tool for the study of real algebraic geometry with many applications both within mathematics and elsewhere . </S>",
    "<S> it is known to have doubly exponential complexity in the number of variables in the worst case , but the actual computation time can vary greatly . </S>",
    "<S> it is possible to offer different formulations for a given problem leading to great differences in tractability . in this paper </S>",
    "<S> we suggest a new measure for cad complexity which takes into account the real geometry of the problem . </S>",
    "<S> this leads to new heuristics for choosing : the variable ordering for a cad problem , a designated equational constraint , and formulations for truth - table invariant cads ( tticads ) . </S>",
    "<S> we then consider the possibility of using grbner bases to precondition tticad and when such formulations constitute the creation of a new problem . </S>"
  ]
}
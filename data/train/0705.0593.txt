{
  "article_text": [
    "mining frequent patterns is an important area of data mining where we discover substructures that occur often in ( semi-)structured data .",
    "the research in this work will be in the area of frequent subgraph mining .",
    "these _ frequent subgraphs _ are connected vertex- and edge - labeled graphs that are subgraphs of a given set of graphs , traditionally also referred to as _ transactions _ , at least @xmath0 times .",
    "the example of figure  [ fig : subgraph ] shows a graph and two of its subgraphs .    in this paper we will use results from frequent subgraph mining and visualize the frequent subgraphs by means of clustering , where their co - occurrences in the same transactions are used in the distance measure .",
    "clustering makes it possible to obtain a quicker selection of the right frequent subgraphs for a more detailed look at their occurrence .    before explaining what is meant by lattice information we first need to discuss _ child - parent _ relations in frequent subgraphs ,",
    "also known as patterns .",
    "patterns are generated by extending smaller patterns with one extra edge .",
    "the smaller pattern can be called a _",
    "parent _ of the bigger pattern that it is extended to .",
    "if we would draw all these relations , the drawing would be shaped like a lattice , hence we call this data _ lattice information_.",
    "we further analyse frequent subgraphs and their corresponding lattice information with different techniques in our framework lattice2sar for mining and analysing frequent subgraph data .",
    "one of the techniques in this framework is the analysis of graphs in which frequent subgraphs occur , via clustering .",
    "another important functionality is the browsing of lattice information from parent to child and from child to parent . in this paper",
    "we will present the clustering .",
    "( 200,50)(50,10 ) ( 10,10)(0,0)c ( 40,10)(0,0)c ( 10,60)(0,0)c ( 40,60)(0,0)c ( 70,60)(0,0)c ( 100,60)(0,0)c ( 54,65)(0,0)1 ( 44,60)(1,0)20 ( 86,65)(0,0)1 ( 76,60)(1,0)20 ( 130,60)(0,0)c ( 160,60)(0,0)o ( 114,65)(0,0)1 ( 104,60)(1,0)20 ( 144,65)(0,0)1 ( 134,60)(1,0)20 ( 100,36)(0,0)n ( 105,48)(0,0)1 ( 100,56)(0,-1)15    ( 130,36)(0,0)o ( 135,48)(0,0)2 ( 130,56)(0,-1)15    ( 62,36)(0,0)c ( -12,36)(0,0)c ( 25,15)(0,0)1 ( 15,10)(1,0)20 ( 25,65)(0,0)2 ( 15,60)(1,0)20 ( 2,25)(0,0)2 ( 6,14)(-1,1)15 ( 48,25)(0,0)2 ( 44,14)(1,1)15 ( 56,50)(0,0)1 ( 60,40)(-1,1)15 ( -3,50)(0,0)1 ( -8,40)(1,1)15    ( 200,60)(0,0)c ( 200,36)(0,0)o ( 205,48)(0,0)2 ( 200,56)(0,-1)15    ( 240,60)(0,0)c ( 270,60)(0,0)c ( 300,60)(0,0)c ( 254,65)(0,0)2 ( 244,60)(1,0)20 ( 286,65)(0,0)1 ( 276,60)(1,0)20 ( 270,36)(0,0)c ( 275,48)(0,0)1 ( 270,56)(0,-1)15    our working example is the analysis of patterns ( fragments ) in molecule data , since lattice2sar was originally made to handle molecule data . obviously molecules are stored in the form of graphs , the molecules are the transactions ( see figure  [ fig : subgraph ] for an example ) .",
    "however , the techniques presented here are not particular to molecule data ( we will also not discuss any chemical or biological issues ) .",
    "for example one can extract user behaviour from access logs of a website .",
    "this behaviour can be stored in the form of graphs and can as such be mined with the techniques presented here .",
    "the distance between patterns can be measured by calculating in how many graphs ( or molecules ) only one of the two patterns occurs .",
    "if this never happens then these patterns are very close to each other .",
    "if this always happens then their distance is very large . in both cases",
    "the user is interested to know the reason . in our working example",
    "the chemist might want to know which different patterns seem to occur in the same subgroup of effective medicines or which patterns occur in different subgroups of effective medicines . in this paper",
    "we will present an approach to solve this problem that uses clustering . furthermore all occurrences for the frequent subgraphs will be discovered by a graph mining algorithm and this occurrence information",
    "will be highly compressed before storage .",
    "because of this , requesting these occurrences will be costly . through our method of clustering time",
    "will be saved if the user uses the clusters to select interesting patterns , see figure [ fig : clusteruse ] for an overview .",
    "we will define our method of clustering and show its usefulness . to this end , this paper makes the following contributions : +  our first contribution will be that we will * introduce an algorithm for clustering frequent subgraphs * allowing the user to quickly see interesting relations , e.g. , subgraphs occur in the same transactions , and quicker select the right occurrence details from the compressed storage ( all sections and specifically section  [ relative ] ) .",
    "+  we will define a measure of calculating distances between patterns and * show how the lattice information can be used for faster calculation * ( section  [ distance ] and section  [ group ] ) .",
    "+  the lattice information can be used to make groups of patterns and in this way * clarity of the visualization can be improved * due to less points in the 2-dimensional model . in section  [ group ]",
    "we will introduce this preprocessing step .",
    "+  preprocessing will also make * faster clustering possible by reducing cluster points * , diminishing requests for occurrence counting ( section  [ group ] and section  [ exps ] ) .",
    "+  finally through experiments * the effectiveness of our clustering is shown * and the resulting cluster model is analyzed ( section  [ exps ] ) .",
    "this research is related to research on clustering , in particular of molecules .",
    "also our work is related to frequent subgraph mining and frequent pattern mining when lattices are discussed . in @xcite",
    "zaki et al . discuss different ways for searching through the lattice and they propose the eclat algorithm .    clustering in the area of biology is important because of the visualization that it can provide .",
    "e.g. , @xcite samsonova et al .",
    "discuss the use of self - organizing maps ( soms ) for clustering protein data .",
    "in general our work is related to soms as developed by kohonen ( see @xcite ) , in the sense that soms are also used to visualize data through a distance measure .",
    "soms have been used in a biological context many times , for example in @xcite . in some cases molecules",
    "are clustered via numeric data describing each molecule , in @xcite clustering such data is investigated .    our package of mining techniques for molecules",
    "is called lattice2sar ; it makes use of a graph miner called gspan , introduced in @xcite by yan and han .",
    "this implementation generates the patterns organized as a lattice and a separate compressed file of occurrences of the patterns in the graph set ( molecules ) .    in this work a method of pushing and pulling points in accordance with a distance measure is used .",
    "this technique was used before by cocx et al . in @xcite to cluster criminal careers and was developed in @xcite .",
    "this method of clustering was chosen since we only know the distance between two patterns .",
    "we do nt know the precise @xmath1 and @xmath2 coordinates of the patterns , so we can not use standard methods of discovering clusters , e.g. , k - means ( see @xcite ) .",
    "the algorithm from @xcite is different from clustering with self - organizing maps as soms adapt the weight vector of each neuron toward an input vector . in our problem",
    "no such input vector exists and each point in the cluster is linked with one graph or one group of graphs .",
    "for any clustering algorithm you have to at least know the distance between the points in the model .",
    "as was mentioned in the introduction , we are interested to know if patterns occur in the same graphs in the dataset of graphs . patterns in this work are _ connected frequent subgraphs _ where all vertices of the subgraph can be found in @xmath0 graphs of the dataset with matching labels and connections between the vertices ( see figure [ fig : subgraph ] for an example ) .",
    "if a subgraph occurs at different positions in a graph , it is counted only once . here",
    "@xmath0 is a user - defined threshold for frequency .",
    "the distance measure will compute how often frequent subgraphs occur in the same graphs of the dataset . in the case of our working example",
    "it will show if different fragments ( frequent subgraphs ) exist in the same molecules .",
    "formally we will define the distance measure in the following way ( for graphs @xmath3 and @xmath4 ) :    @xmath5    here @xmath6 is the number of times a ( sub)graph @xmath7 occurs in the set of graphs ; @xmath8 gives the number of graphs ( or transactions ) with both subgraphs and @xmath9 gives the number of graphs with at least one of these subgraphs .",
    "the numerator of the @xmath10 measure computes the number of times the two graphs do not occur together in one graph of the dataset .",
    "we divide by @xmath9 to make the distance independent from the total occurrence , thereby normalizing it .",
    "we can reformulate @xmath10 in the following manner :    @xmath11    in this way we do not need to separately compute @xmath9 by counting the number of times subgraphs occur in the graphs in the dataset , saving us the time needed to access this compressed dataset .",
    "say fragment @xmath12 has a string 11100011 indicating in which molecule it occurs .",
    "so , from left to right , fragment @xmath12 occurs in the first 3 molecules and in the last 2 , where a 1 indicates that a fragment occurs and a 0 indicates a non - occurrence .",
    "if fragment @xmath13 has string 01111000 , we can see that either fragment @xmath12 or @xmath13 or both ( @xmath14 ) occur in 7 molecules @xmath15 .",
    "similarly , @xmath16 , and @xmath17.@xmath18    the distance measure satisfies the usual requirements , such as the triangular inequality .",
    "note that @xmath19 and @xmath20 , so @xmath3 and @xmath4 have no common transactions in this case . if @xmath21 , both subgraphs occur in the same transactions , but are not necessarily equal .",
    "the distances are computed _ after _ discovering all frequent subgraphs with gspan .",
    "obviously , while computing the support for the graphs not all frequent subgraphs are known and not all distances can be computed while running gspan .",
    "possibly we will discover many frequent subgraphs , depending on the chosen minimal support .",
    "next to having to store the supports of all frequent subgraphs , we will also have to store the distance for all frequent subgraph combinations in order to decide clusters fast . if we have @xmath22 frequent subgraphs then storing the support for all @xmath23 combinations might be too much .",
    "however many frequent subgraphs often are very similar in both structure and support .",
    "furthermore , for these very similar frequent subgraphs there often exists a parent - child relation .",
    "now we will propose a preprocessing step where we first group close subgraphs and we will treat them as one point in our cluster model .",
    "this will reduce the number of points in the cluster model and the number of distances that have to be stored and/or decided .",
    "this will not only speed up the process of deciding the distance between groups or graphs , another benefit is that the overview in the visualization will be improved because less of the same graphs are in the 2-dimensional cluster model .",
    "furthermore it will reduce exploration time for the expert , because many of these redundant graphs are grouped .",
    "if an expert wants to view the occurrence of a graph then ( s)he can select just one of the group to be retrieved from the compressed set , since their occurrence is almost equal .",
    "the formula for the distance between supergraph @xmath24 and subgraph @xmath25 originates from equation  [ two ] , where @xmath26 : @xmath27    if we take a fragment @xmath12 with occurrence string 11110011 and a fragment @xmath13 ( where @xmath12 is a subgraph of @xmath13 ) with string 11110000 , then we of course see that fragment @xmath12 occurs at least in all molecules where @xmath13 occurs . in this case @xmath28.@xmath18    all information used to compute these distances can be retrieved from the lattice information provided by the graph mining algorithm , when we focus on the subgraph - supergraph pairs .",
    "this information is needed by the graph mining algorithm to discover the frequent subgraphs and so the only extra calculating is done when @xmath10 does a search in this information .",
    "of course , many graphs have no parent - child relation and for this reason we define @xmath29 in the following way : @xmath30 note that @xmath31 if @xmath25 is a subgraph of @xmath24 and has non - zero support , or the other way around .",
    "now we propose the pregroup algorithm that will organize close subgraphs / supergraphs into groups .",
    "the algorithm is based on hierarchical clustering and because of this we need to define how we decide the distance between clusters @xmath32 and @xmath33 : @xmath34 two clusters should not be merged if their graphs do not have a supergraph - subgraph relation , so we do not consider graphs where @xmath35 .",
    "the value of @xmath36 is @xmath37 if no maximal distance exists , and clusters will not be merged in the algorithm .",
    "the outline of the algorithm is the following :    ' '' ''    xxxxxxxxxxxxinitialize @xmath38 with sets of subgraphs of size 1 from the lattice + * while * @xmath38 was changed or was initialized + select @xmath39 and @xmath40 from @xmath38 with minimal @xmath41 + * if * @xmath42 * then * + @xmath38 = @xmath38 @xmath43 + remove @xmath39 and @xmath40 from @xmath38 +    ' '' ''    pregroup    ' '' ''    the parameter @xmath44 is a user - defined threshold giving the largest distance allowed for two clusters to be joined .",
    "the information we need to store concerning the occurrence of subgraph patterns can be huge . however , in some cases the user might want to have this information , e.g. , in our working example the scientist might want to closer investigate molecules ( transactions ) contain a specific pattern .",
    "interesting information for any user is to see how often the groups ( clusters ) of subgraphs occur in the same transactions ( graphs ) within the dataset . here",
    "we will visualize this co - occurrence by positioning all groups randomly in a 2-dimensional area and adapting their position a number of times with the formulas from @xcite . in our model for @xmath45",
    "we take the euclidean distance between the 2-dimensional coordinates of the points corresponding with the two groups ( of frequent subgraphs ) @xmath46 and @xmath47 .",
    "the graphs in a group occur in almost all the same transactions , depending on the chosen @xmath44 .",
    "so , in order to speed up clustering , the distance between groups is assumed to be the distance between any of the points of the two groups . in our algorithm",
    "we choose to define the distance between groups as the distance between a smallest graph of each of the two groups ( @xmath48 gives the number of vertices ) : for @xmath49 and @xmath50 with @xmath51 and @xmath52 , we let @xmath53 .",
    "the coordinates @xmath54 and @xmath55 of the points corresponding with @xmath46 and @xmath47 are adapted by applying the following formulas :    1 .",
    "@xmath56 2 .",
    "@xmath57 3 .",
    "@xmath58 4 .",
    "@xmath59    here @xmath60 ( @xmath61 ) is the user - defined learning rate .    starting with random coordinates for the groups , we will build a 2-dimensional model of relative positions between groups by randomly choosing two groups @xmath62 times and applying the formulas .",
    "the experiments are organized such that we first show the cluster model to approximate the distances correctly .",
    "secondly through experiments we show the speed - up due to making groups first .",
    "we make use of a dataset , the _ molecule dataset _ , containing 4,069 molecules ; from this we extracted a lattice containing the 1,229 most frequent subgraphs .",
    "all experiments were performed on an intel pentium 4 64-bits 3.2 ghz machine with 3 gb memory . as operating system debian linux 64-bits was used with kernel 2.6.8 - 12-em64t - p4 .    , @xmath63 , @xmath64).,width=272 ]    , @xmath63 , @xmath64).,width=272 ]    figure [ fig : clusterexample1 ] shows how points , that represent subgraphs occurring in the same graphs ( molecules ) of the dataset , cluster together .",
    "we made lines between points if their euclidean distance is @xmath65 .",
    "the darker these lines the lower their actual distance and in this way one can see gray clusters of close groups of subgraphs .",
    "some groups are placed close but their actual distance is not close ( they are light grey ) .",
    "this is probably caused by the fact that these groups do not occur together with some specific other groups , so being far away from these other ones .    in figure",
    "[ fig : clusterexample2 ] we make lines between points with a euclidean distance @xmath66 .",
    "the darker these lines the higher their actual distance .",
    "the figure shows their actual distance to be big also ( the lines are black ) . also figure [ fig : clusterexample2 ] shows bundles of lines going to one place .",
    "this probably is again caused by groups not occurring together with the same other groups .    )",
    ".,width=264 ]    the error for the cluster model decreases quickly , see figure [ fig : error ] . at some point",
    "it becomes very hard to reduce the error further .    in one experiment we assumed that the distances could not be stored in memory . in this experiment we first clustered 1,229 patterns without grouping , taking 81 seconds .",
    "however , grouping reduced the number of requests to the compressed occurrence data and because of this with grouping clustering took 48 seconds ( @xmath67 , @xmath64 , @xmath63 ) .",
    "( @xmath67 , @xmath64).,width=264 ]    our final experiment was done to show how the runtime is influenced by the @xmath44 threshold and how much the preprocessing step influences runtime .",
    "here we assume the distances between clusters can be stored in memory . in figure",
    "[ fig : runtime ] the influence on runtime is shown .",
    "the time for preprocessing appears to be more or less stable , but the total runtime drops significantly .",
    "presenting data mining results to the user in an efficient way is important . in this paper",
    "we propose a preprocessing step for an existing method of clustering and we apply this method to frequent subgraphs , which was not done before .",
    "the model can be built faster with the clustering algorithm because of the grouping of the subgraphs , the preprocessing step .",
    "the groups also remove redundant points from the visualization that represents very similar subgraph patterns .",
    "finally the model enables the user to quickly select the right subgraphs for which the user wants to investigate the graphs ( or molecules ) in which the frequent subgraphs occur .    in the future we want to take a closer look at grouping where the types of vertices and edges and their corresponding weight also decide their group .",
    "furthermore , we want to investigate how we can compress occurrence more efficiently and access it faster .",
    "* acknowledgments * this research is carried out within the netherlands organization for scientific research ( nwo ) mista project ( grant no .",
    "612.066.304 ) .",
    "we thank siegfried nijssen for his implementation of gspan .",
    "xx bruin , j.s .",
    "de , cocx , t.k . ,",
    "kosters , w.a .",
    ", laros , j.f.j . and kok , j.n . : _ data mining approaches to criminal career analysis _ , in proc .",
    "6th ieee international conference on data mining ( icdm 2006 ) , pp .",
    "171177 . hanke , j. , beckmann , g. , bork , p. and reich , j.g .",
    ": _ self - organizing hierarchic networks for pattern recognition in protein sequence",
    "_ , protein science journal 5 ( 1996 ) , pp .",
    "7282 . kohonen , t. : _ self organizing maps _ , volume 30 of springers series in information science , springer , second edition , 1997 .",
    "kosters , w.a . and",
    "wezel , m.c .",
    "van : _ competitive neural networks for customer choice models _ , in e - commerce and intelligent methods , volume 105 of studies in fuzziness and soft computing , physica - verlag , springer , 2002 , pp .",
    "macqueen , j.b .",
    ": _ some methods for classification and analysis of multivariate observations _ , in proc .",
    "5th berkeley symposium on mathematical statistics and probability , 1967 , pp . 281297 .",
    "mahony , s. , hendrix , d. , smith , t.j . and golden , a. : _ self - organizing maps of position weight matrices for motif discovery in biological sequences _ , artificial intelligence review journal 24 ( 2005 ) , pp .",
    "samsonova , e.v . , bck , t. , kok , j.n . and",
    "ijzerman , a.p . : _ reliable hierarchical clustering with the self - organizing map _ , in proc .",
    "6th international symposium on intelligent data analysis ( ida 2005 ) , pp .",
    "xu , j. , zhang , q. and shih , c .- k . : _ v - cluster algorithm : a new algorithm for clustering molecules based upon numeric data _ , molecular diversity 10 ( 2006 ) , pp .",
    "yan , x. and han , j. : _ gspan : graph - based substructure pattern mining_. in proc .",
    "2002 ieee international conference on data mining ( icdm 2002 ) , pp .",
    "721724 . zaki , m. , parthasarathy , s. , ogihara , m. and li , w. : _ new algorithms for fast discovery of association rules _ , in proc .",
    "3rd international conference on knowledge discovery and data mining ( kdd 1997 ) , pp ."
  ],
  "abstract_text": [
    "<S> mining frequent subgraphs is an area of research where we have a given set of graphs ( each graph can be seen as a transaction ) , and we search for ( connected ) subgraphs contained in many of these graphs . in this work </S>",
    "<S> we will discuss techniques used in our framework lattice2sar for mining and analysing frequent subgraph data and their corresponding lattice information . </S>",
    "<S> lattice information is provided by the graph mining algorithm gspan ; it contains all supergraph - subgraph relations of the frequent subgraph patterns  and their supports .    </S>",
    "<S> lattice2sar is in particular used in the analysis of frequent graph patterns where the graphs are molecules and the frequent subgraphs are fragments . in the analysis of fragments one is interested in the molecules where patterns occur . </S>",
    "<S> this data can be very extensive and in this paper we focus on a technique of making it better available by using the lattice information in our clustering . </S>",
    "<S> now we can reduce the number of times the highly compressed occurrence data needs to be accessed by the user . </S>",
    "<S> the user does not have to browse all the occurrence data in search of patterns occurring in the same molecules . </S>",
    "<S> instead one can directly see which frequent subgraphs are of interest . </S>"
  ]
}
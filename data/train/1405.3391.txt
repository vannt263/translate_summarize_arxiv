{
  "article_text": [
    "mathematics can be done on two different levels .",
    "one level is rather informal , based on informal explanations , intuition , diagrams , etc . , and typical for everyday mathematical practice .",
    "another level is formal mathematics with proofs rigorously constructed by rules of inference from axioms .",
    "a large portion of mathematical logic and interactive theorem proving is aimed at linking these two levels .",
    "however , there is still a big gap : mathematicians still do nt feel comfortable doing mathematics formally and proof assistants still do nt provide enough support for dealing with large mathematical theories , automating technical problems , translating from one formalism to another , etc .",
    "we consider the following issue : there are several very mature and popular interactive theorem provers ( including isabelle , coq , mizar , hol - light , see @xcite for an overview ) , but they still can not easily share the same mathematical knowledge .",
    "this is a significant problem , because there are increasing efforts in building repositories of formalized mathematics , but  still developed within specific proof assistants .",
    "building a mechanism for translation between different proof assistants is non - trivial because of many deep specifics of each proof assistant ( there are some recent promissing approaches for this task @xcite ) . instead of developing a translation mechanism , we propose a proof representation and a corresponding xml - based format .",
    "the proposed proof representation is light - weight and it does not aim at covering full power of everyday mathematical proofs or full power of first order logic .",
    "still , it can cover a significant portion of many interesting mathematical theories .",
    "the underlying logic of our representation is coherent logic , a fragment of first - order logic .",
    "proofs in this format can be generated in an easy way by dedicated , coherent logic provers , but in principle , also by standard theorem provers .",
    "the proofs can be translated to a range of proof assistant formats , enabling sharing the same developments .",
    "we call our proof representation `` coherent logic vernacular '' .",
    "_ vernacular _ is the everyday , ordinary language ( in contrast to the official , literary language ) of the people of some country or region .",
    "a similar term , _ mathematical vernacular _ was used in 1980 s by de bruijn within his formalism proposed for trying to _ put a substantial part of the mathematical vernacular into the formal system _ @xcite .",
    "several authors later modified or extended de bruijn s framework .",
    "wiedijk follows de bruijn s motivation @xcite , but he also noticesit turns out that in a significant number of systems ( ` proof assistants ' ) one encounters languages that look almost the same .",
    "apparently there is a canonical style of presenting mathematics that people discover independently : something like a _ natural _ mathematical vernacular .",
    "because this language apparently is something that people arrive at independently , we might call it _ the _ mathematical vernacular .",
we find that this language is actually closely related to a proof language of coherent logic , which is a basis of our proof representation presented in this paper .",
    "our proof representation is developed also with _",
    "readable proofs _ in mind .",
    "readable proofs ( e.g. , textbook - like proofs ) , are very important in mathematical practice .",
    "for mathematicians , the main goal is often , not only a trusted , but also a clear and intuitive proof .",
    "we believe that coherent logic is very well suited for automated theorem proving with a simple production of readable proofs .",
    "in this section , we give a brief overview of interactive theorem proving and proof assistants , of coherent logic , which is the logical basis for our proof representation , and of xml , which is the technical basis for our proof format .",
    "interactive theorem proving systems ( or _ proof assistants _ ) support the construction of formal proofs by a human , and verify each proof step with respect to the given underlying logic .",
    "the proofs can be written either in a _ declarative _ or in a _ procedural _ proof style . in the procedural proof style , the proof is described by a sequence of commands which modify the incomplete proof tree . in the declarative proof style the formal document includes the intermediate statements .",
    "both styles are avaible in hol - light , isabelle  @xcite and coq proof assistants whereas only the declarative style is available in mizar , see  @xcite for a recent discussion .",
    "the procedural proof style is more popular in the coq community .",
    "formal proofs are typically much longer than `` traditional proofs . ''",
    "progress in the field can be measured by proof scripts becoming shorter and yet contain enough information for the system to construct and verify the full ( formal ) proof .",
    "`` traditional proofs '' can often hardly be called proofs , because of the many missing parts , informal arguments , etc . using interactive theorem proving",
    "uncovered many flaws in many published mathematical proofs ( including some seminal ones ) , published in books and journals .",
    "coherent logic ( cl ) was initially defined by skolem and in recent years it gained new attention @xcite .",
    "it consists of formulae of the following form :    @xmath0    which are implicitly universally quantified , and where @xmath1 , @xmath2 , @xmath3 denotes a sequence of variables @xmath4 ( @xmath5 ) , @xmath6 ( for @xmath7 ) denotes an atomic formula ( involving zero or more of the variables from @xmath3 ) , @xmath8 denotes a sequence of variables @xmath9 ( @xmath10 ) , and @xmath11 ( for @xmath12 ) denotes a conjunction of atomic formulae ( involving zero or more of the variables from @xmath3 and @xmath8 ) . for simplicity , we assume that there are no function symbols with arity greater than zero ( so , we only consider symbols of constants as ground terms )",
    ".    the definition of cl does not involve negation . for a single atom @xmath13",
    ", @xmath14 can be represented in the form @xmath15 , where @xmath16 stands for the empty disjunction , but more general negation must be expressed carefully in coherent logic . in order to reason with negation in general , new predicate symbols are used to abbreviate subformulas . furthermore , for every predicate symbol @xmath17 ( that appears in negated form ) , a new symbol @xmath18 is introduced that stands for @xmath19 , and the following axioms are postulated ( cf .",
    "@xcite ) : @xmath20 , @xmath21 .",
    "cl allows existential quantifications of the conclusion of a formula , so cl can be considered to be an extension of resolution logic .",
    "in contrast to the resolution - based proving , the conjecture being proved is kept unchanged and directly proved ( refutation , skolemization and transformation to clausal form are not used ) .",
    "hence , proofs in cl are natural and intuitive and reasoning is constructive .",
    "readable proofs ( in the style of forward reasoning and a variant of natural deduction ) can easily be obtained @xcite .",
    "a number of theories and theorems can be formulated directly and simply in cl . in cl ,",
    "constructive provability is the same as classical provability .",
    "it can be proved that any first - order formula can be translated into a set of cl formulas ( in a different signature ) preserving satisfiability @xcite ( however , this translation does not always preserve constructive provability ) .",
    "coherent logic is semi - decidable and there are several implemented semi - decision procedures for it @xcite .",
    "argoclp @xcite is a generic theorem prover for coherent logic , based on a simple proof procedure with forward chaining and with iterative deepening .",
    "argoclp can read problems given in tptp form @xcite and can export proofs in the xml format that we describe in this paper .",
    "these proofs are then translated into target languages , for instance , the isar language or natural language thanks to appropriate xslt style - sheets .",
    "_ extensible markup language _",
    "( xml ) is a simple , flexible text format , inspired by sgml ( iso 8879 ) , for data structuring using tags and for interchanging information between different computing systems .",
    "xml is primarily a `` metalanguage''a language for describing other customized markup languages .",
    "so , it is not a fixed format like the markup language html  in xml the tags indicate the semantic structure of the document , rather than only its layout .",
    "xml is a project of the world wide web consortium ( w3c ) and is a public format .",
    "almost all browsers that are currently in use support xml natively .",
    "there are several schema languages for formaly specifying the structure and content of xml documents of one class .",
    "some of the main schema languages are dtd ( _ data type definition _ ) , xml schema , relax , etc . @xcite .",
    "specifications in the form of schema languages enable automatic verification ( `` validation '' ) of whether a specific document meets the given syntactical restrictions .",
    "_ extensible style - sheet language transformation _ ( xslt ) is a document processing language that is used to transform the input xml documents to output files .",
    "an xslt style - sheet declares a set of rules ( templates ) for an xslt processor to use when interpreting the contents of an input xml document .",
    "these rules tell to the xslt processor how that data should be presented : as an xml document , as an html document , as plain text , or in some other form .",
    "the proposed proof representation is very usable and expressive , yet very simple .",
    "it uses only a few inference rules , a variant of the rules given in  @xcite .",
    "given a set of coherent axioms @xmath22 and a coherent conjecture @xmath23 , the goal is to prove , using the rules given below , the following ( where @xmath24 denote a vector of new symbols of constants ) : @xmath25 the rules are applied in a forward manner , so they can be read from bottom to top .",
    "in the rules below we assume :    * @xmath26 is a formula of the form ( [ eq : clf ] ) ( page ) ; * @xmath24 , @xmath27 , @xmath28 denote vectors of constants ( possibly of length zero ) ; * in the rule @xmath29 , @xmath27 are fresh constants ; * @xmath3 and @xmath8 denote vectors of variables ( possibly of length zero ) ; * @xmath30 ( @xmath31 ) have no free variables other than from @xmath3 ( and @xmath8 ) ; * @xmath32 are ground atomic formulae ; * @xmath33 and @xmath34 are ground conjunctions of atomic formulae ; * @xmath35 denotes the list of conjuncts in @xmath36 .",
    "@xmath37 { \\gamma , ax , \\underline{a_1(\\vec{a } ) \\wedge \\ldots",
    "\\wedge a_n(\\vec{a } ) } \\vdash p } { \\gamma , ax , \\underline{a_1(\\vec{a } ) \\wedge \\ldots \\wedge a_n(\\vec{a } ) } , b_1(\\vec{a},\\vec{b } ) \\vee \\ldots \\vee b_m(\\vec{a},\\vec{b } ) \\vdash p}\\ ] ]    @xmath38 { \\gamma , b_1(\\vec{c } ) \\vee \\ldots \\vee b_n(\\vec{c } ) \\vdash p } { \\gamma,\\underline{b_1(\\vec{c } ) } \\vdash p    \\,\\,\\,\\,\\,\\,\\ ,     \\ldots \\,\\,\\,\\,\\,\\,\\ ,   \\gamma , \\underline{b_n(\\vec{c } ) } \\vdash p}\\ ] ]    @xmath39 { \\gamma , \\underline{b_i(\\vec{a},\\vec{b } ) } \\vdash \\exists \\vec{y } ( b_1(\\vec{a},\\vec{y } ) \\vee \\ldots \\vee \\ ; b_m(\\vec{a},\\vec{y } ) ) } { } \\ ] ]    @xmath40 { \\gamma,\\bot \\vdash p } { } \\ ] ] none of these rules change the goal @xmath41 , which helps generating readable proofs as the goal can be kept implicit .",
    "note that the rule @xmath29 actually combines universal instantiation , conjunction introduction , modus ponens , and elimination of ( zero or more ) existential quantifiers .",
    "this seems a reasonable granularity for an inference step , albeit probably the maximum for keeping proofs readable .",
    "compared to  @xcite which defines the notion of obvious inference rule by putting constraints on an automated prover , our position is : the obvious inferences are the ones defined by the inference rules above . compared to the rules given in  @xcite , we choose to separate the @xmath42 rule ( disjunction elimination ) and the @xmath43 rule from the single combined rule in  @xcite , in order to improve readability .",
    "case distinction ( split ) is an important way of structuring proofs that deserves to be made explicit .",
    "also , @xmath44 could be seen as a @xmath42 with zero cases , but this would be less readable .    any coherent logic proof can be represented in the following simple way ( @xmath45 is used zero or more time , @xmath46 involves at least two other @xmath47 objects ) : @xmath48",
    "the proof representation described in section [ sec : proofrepresentation ] is used as a basis for our xml - based proof format . it is developed as an interchange format for automated and interactive theorem provers .",
    "proofs ( for coq and isabelle / isar ) that are produced from our xml documents are fairly readable .",
    "the xml documents themselves can be read by a human , but much better alternative is using translation to human readable proofs in natural language ( formatted in latex , for instance ) .",
    "the proof representation is described by a dtd ` vernacular.dtd ` . as an illustration",
    ", we show some fragments :    .... ... < !",
    "-- * * * * * * * * theory * * * * * * * * * * * * * * -- > < !",
    "element theory ( theory_name , signature , axiom * ) > < !",
    "element theory_name ( # pcdata ) > < !",
    "element signature ( type * , relation_symbol * , constant * ) > <",
    "! element relation_symbol ( type * ) > < !",
    "attlist relation_symbol name cdata # required > < !",
    "element type ( # pcdata ) > < !",
    "element axiom ( cl_formula ) > < !",
    "attlist axiom name cdata # required > ... ....    the above fragment describes the notion of theory .",
    "( definitions , formalized as pairs of coherent formulae , are used as axioms . ) a file describing a theory could be shared among several files with theorems and proofs .    .... ... < ! -- * * * * * * * * theorem * * * * * * * * * * * * * * -- > < ! element theorem ( theorem_name , cl_formula , proof+ ) > < !",
    "element theorem_name ( # pcdata ) > <",
    "! element conjecture ( name , cl_formula ) >    < !",
    "-- * * * * * * * * proof * * * * * * * * * * * * * * -- > < !",
    "element proof ( proof_step * , proof_closing , proof_name ? ) > < !",
    "element proof_name empty > < !",
    "attlist proof_name name cdata # required >    < ! -- * * * * * * * * proof steps * * * * * * * * * * * * * * -- > < ! element proof_step ( indentation , modus_ponens ) > < ! element proof_closing ( indentation , ( case_split|efq|from ) ,         ( goal_reached_contradiction|goal_reached_thesis ) ) > ... ....    the above fragment describes the notion of a theorem and a proof .",
    "as said in section [ sec : proofrepresentation ] , a proof consists of a sequence of applications of the rule modus ponens and closes with one of the remaining proof rules ( @xmath42 , @xmath49 , or @xmath50 ) . within the last three",
    ", there is the additional information on whether the proof closes by @xmath16 ( by detecting a contradiction ) or by detecting one of the disjuncts from the goal .",
    "this information is generated by the prover and can be used for better readability of the proof but also for some potential proof transformations . within each proof step",
    "there is also the information on indentation .",
    "this information , useful for better layout , tells the level of subproofs and as such can be , in principle , computed from the xml representation .",
    "still , for convenience and simplicity of the xslt style - sheets , it is stored within the xml representation .",
    "we implemented xsl transformations from xml format to isabelle / isar ( ` vernacularisar.xls ` ) , coq ( ` vernacularcoqtactics.xls ` ) , and to a natural language ( english ) in latex form and in html form ( ` vernaculartex.xls ` and ` vernacularhtml.xls ` ) .",
    "the translation from xml to the isar language is straightforward and each of our proof steps is trivially translated into isar constructs .",
    "naturally , we use native negation of isar ( and coq ) instead of defined negation in coherent logic .    the translation to coq has been written in the same spirit as the isar output despite the fact proofs using tactics are more popular in coq than declarative proofs .",
    "we refer to the assumptions by their statement instead of their name ( for example : ` by cases on ( a = b \\/ a < > b ) ` ) .",
    "moreover , when we can , we avoid to refer to the assumptions at all .",
    "we did not use the declarative proof mode of coq because of efficiency issues .",
    "we use our own tactics to implement the inference rules of cl to improve readability .",
    "internally , we use an ltac tactic to get the name of an assumption .",
    "the forward reasoning proof steps consist of applications of the ` assert ` tactic of coq .",
    "equality is translated into leibniz equality .",
    "the translation to latex and html includes an additional xslt style - sheet that optionally defines specific layout for specific relation symbols ( so , for instance , @xmath51 can be the layout for ` cong(a , b , c , d ) ` ) .",
    "the developed xslt style - sheets are rather simple and short  each is only around 500 lines long .",
    "this shows that transformations for other target languages ( other theorem provers , like mizar and hol light , latex with other natural languages , mathml , omdoc or tptp ) can easily be constructed , thus enabling wide access to a single source of mathematical contents .    our automated theorem prover for coherent logic argoclp exports proofs in the form of the xml files that conforms to this dtd .",
    "argoclp reads an input theory and the conjecture given in the tptp form ( assuming the coherent form of all formulae and that there are no function symbols or arity greater than 0 ) .",
    "argoclp has built - in support for equality ( during the search process , it uses an efficient union - find structure ) and the use of equality axioms is implicit in generated proofs .",
    "the generated xml documents are simple and consist of three parts : ` frontpage ` ( providing , for instance , the author of the theorem , the prover used for generating the proof , the date ) , ` theory ` ( providing the signature and the axioms ) and , organized in chapters , a list of conjectures or theorems with their proofs .",
    "this way , some contents ( ` frontpage ` and ` theory ` ) can be shared by a number of xml documents . on the other hand ,",
    "this also enables simple construction of bigger collections of theorems .",
    "the following is one example of an xml document generated by argoclp :    .... < ?",
    "xml version=\"1.0 \" encoding=\"utf-8 \"",
    "doctype main system \" vernacular.dtd \" > < ?",
    "xml - stylesheet href=\"vernacularisar.xsl \" type=\"text / xsl \" ?",
    ">    < main > < xi : include href=\"frontpage.xml \" parse=\"xml \"       xmlns : xi=\"http://www.w3.org/2003/xinclude\"/ > < xi : include href=\"theory_thm_4_19.xml \" parse=\"xml \"       xmlns : xi=\"http://www.w3.org/2003/xinclude\"/ >    < chapter name=\"th_4_19 \" > < xi : include href=\"proof_thm_4_19.xml \" parse=\"xml \"       xmlns : xi=\"http://www.w3.org/2003/xinclude\"/ > < /chapter > <",
    "/main > ....    the overall architecture of the framework is shown in figure [ fig : architecture ] .",
    "our xml suite for coherent logic vernacular is used for a number of proofs generated by our prover argoclp . in this section",
    "we discuss proofs of theorems from the book _ metamathematische methoden in der geometrie _",
    ", by wolfram schwabhuser , wanda szmielew , and alfred tarski @xcite , one of the twenty - century mathematical classics .",
    "the theory is described in terms of first - order logic , it uses only one sort of primitive objects  points , has only two primitive predicates ( @xmath52 or arity 4 and @xmath53 of arity 3 , intuitively for congruence and betweenness ) and only eleven axioms .",
    "the majority of theorems from this book are in coherent logic or can be trivially transformed to belong to coherent logic .",
    "after needed transformations , the number of theorems in our development ( 238 ) is somewhat larger than in the book @xcite .",
    "here we list a proof of one theorem ( 4.19 ) from tarski s book .",
    "the theorem was proved by argoclp ( using the list of relevant axioms and theorems produced by a resolution theorem prover ) , the proof was exported in the xml format , and then transformed to a proof in natural language by appropriate xsl transformation ( @xmath51 is an infix notation for @xmath54 and it denotes that the pairs of points @xmath55 and @xmath56 are congruent , @xmath57 denotes that the point @xmath58 is between the points @xmath13 and @xmath59 , @xmath60 denotes that the points @xmath13 , @xmath58 and @xmath59 are collinear ) .    assuming that @xmath61 and @xmath62 and @xmath63 it holds that @xmath64 .    _ proof : _",
    "qed    below is the same proof in isabelle / isar form : +    below is the same proof in coq form :    from the set of individual theorems ( 238 ) , the prover argoclp completely automatically proved 85 ( 36% ) of these theorems and generated proofs in the xml format .",
    "we created a single xml document that contains all proved theorems and other theorems tagged as conjectures .",
    "the whole document matches the original book by schwabhuser , szmielew , and tarski and can be explored in the latex ( or pdf ) form , html or as isabelle or coq development .",
    "in @xcite , wiedijk proposes a mathematical vernacular that is in a sense the common denominator of the proof languages of hyperproof , mizar and isabelle / isar .",
    "we agree with his conclusion in the last sentence of the quotation in the introduction , but we think that the three proof languages were _ not _ discovered independently . natural deduction has been introduced by the polish logicians ukasiewicz and jakowski in the late 1920 s , in reaction on the formalisms of frege , russell and hilbert . the term _ natural deduction _ seems to have been used first by gentzen , in germanich wollte zunchst einmal einen formalismus aufstellen , der dem wirklichen schlieen mglichst nahe kommt .",
    "so ergab sich ein  kalkl des natrlichen schlieens \" .",
    "_ ( first of all i wanted to set up a formalism that comes as close as possible to actual reasoning . thus arose a ",
    "calculus of natural deduction\".)gentzen , untersuchungen ber das logische schlieen ( mathematische zeitschrift 39 , ppthe qualifier _ natural _ was of course particularly well - chosen to express that the earlier formalisms were unnatural ! as this was indeed the case , natural deduction quickly became the predominant logical system , helped by the seminal work by gentzen on cut - elimination .",
    "( ironically , this technical work in proof theory is best carried out with proofs represented in _ sequent calculus _ , using natural deduction on the meta - level . )",
    "it should thus not come as a surprise that the vernacular we propose also is based on natural deduction .",
    "one difference with wiedijk s vernacular is that ours is based on coherent logic instead of full first - order logic .",
    "this choice is motivated in section  [ subsec : cl ] ( easier semi - decision procedure and more readable proofs ) .",
    "another difference is that wiedijk allows proofs to be incomplete , whereas we stress complete proof objects .",
    "this difference is strongly related to the fact that wiedijk s vernacular is in the first place an input formalism for proof construction , whereas our vernacular is an output formalism for proof presentation and export of proofs to different proof assistants . as far as we know",
    ", the mathematical vernacular proposed by wiedijk s has not been implemented on its own , although hyperproof , mizar and isabelle / isar are developed using the same ideas .",
    "a number of authors independently point to this or similar fragments of first - order logic as suitable for expressing significant portions of standard mathematics ( or specifically geometry ) , for instance , avigad et.al .",
    "@xcite and givant and tarski et.al .",
    "@xcite in the context of a new axiomatic foundations of geometry . a recent paper by ganesalingam and gowers @xcite is also related to our work .",
    "their goal is comparable to ours : full automation combined with human - style output .",
    "they propose inference rules which are very similar to our coherent logic based proof system .",
    "for example , their rule @xmath65 corresponds to the rule @xmath42 , @xmath66 corresponds to @xmath49 , @xmath67 corresponds to @xmath49 ( with length of @xmath68 greater than 0 ) , @xmath69 corresponds to the rule @xmath29 . yet , some rules they proposed are not part of our set of rules .",
    "the logic they use is full first - order , with a plan to include second - order features ( this would also be perfectly possible for coherent logic , which is the first - order fragment of _ geometric _ logic , which is in turn a fragment of higher - order logic , see @xcite ) . upon closer inspection",
    ", the paper by ganesalingam and gowers seems to stay within the coherent fragment , and proofs by contraposition and contradiction are delegated to future work .",
    "we find some support for our approach in the observation by ganesalingam and gowers that it will be hard to avoid that such reasoning patterns are applied in `` inappropriate contexts '' . on the other hand ,",
    "the primary domain of application of their approach is metric space theory so far , with the ambition to attack problems in other domains as well .",
    "it would be very interesting to test the two approaches on the same problem sets .",
    "one difference is that @xcite insists on proofs being faithful to the thought processes , whereas we would be happy if the prover finds a short and elegant proof even after a not - so - elegant proof search .",
    "another difference is that we are interested in portability of proofs to other systems . to our knowledge ,",
    "the prover described in @xcite is not publicly available .",
    "compared to omdoc  @xcite , our proof format is much more specific ( as we specify the inference rules we use ) and has less features . it can be seen as a specific set of ` methods ` elements of the ` derive ` element of omdoc .",
    "an alternative to using coherent logic provers would be using one of the more powerful automated theorem provers and exploiting existing and ongoing work on proof reconstruction and refactoring ( see , for example , @xcite ) .",
    "this is certainly a viable option .",
    "however , reconstructing a proof from the log of a highly optimized prover is difficult .",
    "one problematic step is deskolemization , that is , proof reconstruction from a proof of the skolemized version of the problem .",
    "( the most efficient provers are based on resolution logic , and clausification including skolemizing is the first step in the solution procedure . )",
    "what can be said about this approach in its current stage is that more theorems can be proved , but their proofs can still be prohibitively complicated ( or use additional axioms ) .",
    "it has been , however , proved beneficial to use powerful automated theorem provers as preprocessors , to provide hints for argoclp .",
    "the literature contains many results about exchanging proofs between proof assistant using deep or shallow embeddings  @xcite .",
    "boessplug , cerbonneaux and hermant propose to use the @xmath70-calculus as a universal proof language which can express proof without losing their computational properties  @xcite . to our knowledge , these works do not focus on the readability of proofs .",
    "over the last years a lot of effort has been invested in combining the power of automated and interactive theorem proving : interactive theorem provers are now equipped with trusted support for sat solving , smt solving , resolution method , etc @xcite .",
    "these combinations open new frontiers for applications of theorem proving in software and hardware verification , but also in formalization of mathematics and for helping mathematicians in everyday practice . exporting proofs in formats such as the presented one opens new possibilities for exporting readable mathematical knowledge from automated theorem provers to interactive theorem provers . in the presented approach ,",
    "the task of generating object - level proofs for proof assistants or proofs expressed in natural language is removed from theorem provers ( where it would be hard - coded ) and , thanks to the interchange xml format , delegated to simple xslt style - sheets , which are very flexible and additional xslt style - sheets ( for additional target formats ) can be developed without changing the prover . also , different automated theorem provers can benefit from this suite , as they do nt have to deal with specifics of proof assistants .",
    "the presented proof representation is not intended to serve as `` the mathematical vernacular '' .",
    "however , it can cover a significant portion of many interesting mathematical theories while it is very simple .",
    "often , communication between an interactive theorem prover and an external automated theorem prover is supported by a verified , trusted interface which enables direct calling to the prover . on the other hand ,",
    "our work yields a common format which can be generated by different automated theorem provers and from which proofs for different interactive theorem provers can be generated .",
    "the advantage of our approach relies on the fact that the proof which is exported is not just a certificate , it is meant to be human readable .",
    "the current version of the presented xml suite does not support function symbols of arity greated than 0 .",
    "for the future work , we are planning to add that support to the proof format and to our argoclp prover .    in the current version , for simplicity ,",
    "the generated isar and coq proofs use tactics stronger than necessary .",
    "we will try to completely move to basic proofs steps while keeping simplicity of proofs . beside planning to further improve existing xslt style - sheets , we are also planning to implement support for additional target languages such as omdoc .",
    "marc bezem and thierry coquand . .",
    "in geoff sutcliffe and andrei voronkov , editors , _ 12th international conference on logic for programming , artificial intelligence , and reasoning  lpar 2005 _ , volume 3835 of _ lecture notes in computer science_. springer - verlag , 2005 .",
    "jasmin  christian blanchette . .",
    "in jasmin  christian blanchette and josef urban , editors , _ third international workshop on proof exchange for theorem proving , pxtp 2013 , lake placid , ny , usa , june 9 - 10 , 2013 _ , volume  14 of _ epic series _",
    ", pages 1126 .",
    "easychair , 2013 .",
    "jasmin  christian blanchette , lukas bulwahn , and tobias nipkow . .",
    "in cesare tinelli and viorica sofronie - stokkermans , editors , _ frontiers of combining systems , 8th international symposium , proceedings _ , volume 6989 of _",
    "lecture notes in computer science _ , pages 1227 .",
    "springer , 2011 .",
    "mathieu boespflug , quentin carbonneaux , and olivier hermant . .",
    "in _ second workshop on proof exchange for theorem proving ( pxtp ) _ , volume 878 of _ ceur workshop proceedings _ , pages 2843 .",
    "ceur-ws.org , 2012 .",
    "john fisher and marc bezem . .",
    "in cliff  b. jones , zhiming liu , and jim woodcock , editors , _",
    "4th international colloquium on theoretical aspects of computing  ictac 2007 _ , volume 4711 of _ lecture notes in computer science_. springer - verlag , 2007 .",
    "cezary kaliszyk and alexander krauss . .",
    "in sandrine blazy , christine paulin - mohring , and david pichardie , editors , _ interactive theorem proving - 4th international conference , itp 2013 , rennes , france , july 22 - 26 , 2013 . proceedings _ , volume 7998 of _ lecture notes in computer science _ , pages 5166 .",
    "springer , 2013 .",
    "cezary kaliszyk and josef urban . .",
    "in maria  paola bonacina , editor , _ automated deduction - cade-24 - 24th international conference on automated deduction _ , volume 7898 of _ lecture notes in computer science _ , pages 267274 .",
    "springer , 2013 .",
    "steven obua and sebastian skalberg . .",
    "in ulrich furbach and natarajan shankar , editors , _ automated reasoning _ , volume 4130 of _ lecture notes in computer science _",
    ", page 298302 .",
    "springer berlin heidelberg , 2006 .",
    "steffen  juilf smolka and jasmin  christian blanchette . .",
    "in jasmin  christian blanchette and josef urban , editors , _ third international workshop on proof exchange for theorem proving , pxtp 2013 _ , volume  14 of _ epic series _ , pages 117132 .",
    "easychair , 2013 .",
    "sana stojanovi , vesna pavlovi , and predrag janii ' c. . in pascal schreck , julien narboux , and",
    "jrgen richter - gebert , editors , _ automated deduction in geometry _ ,",
    "volume 6877 of _ lecture notes in computer science_. springer , 2011 .",
    "markus wenzel . .",
    "in yves bertot , gilles dowek , andr hirschowitz , c.  paulin , and laurent thry , editors , _ theorem proving in higher order logics ( tphols99 ) _ , volume 1690 of _ lecture notes in computer science _ , pages 167184 .",
    "springer , 1999 ."
  ],
  "abstract_text": [
    "<S> we propose a simple , yet expressive proof representation from which proofs for different proof assistants can easily be generated . </S>",
    "<S> the representation uses only a few inference rules and is based on a fragment of first - order logic called coherent logic . </S>",
    "<S> coherent logic has been recognized by a number of researchers as a suitable logic for many everyday mathematical developments . </S>",
    "<S> the proposed proof representation is accompanied by a corresponding xml format and by a suite of xsl transformations for generating formal proofs for isabelle / isar and coq , as well as proofs expressed in a natural language form ( formatted in latex or in html ) . also , our automated theorem prover for coherent logic exports proofs in the proposed xml format . </S>",
    "<S> all tools are publicly available , along with a set of sample theorems . </S>"
  ]
}
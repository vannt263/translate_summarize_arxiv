{
  "article_text": [
    "the solution of the poisson equation is a critical task in many areas of computational physics .",
    "the corresponding solvers need to be able to handle complex , multiply connected geometries , to be fast , adaptive , and to yield high order accuracy .",
    "speed is of particular importance when the poisson equation is part of a larger system of equations or in the inner loop of an optimization process . and",
    "since the physical quantity of interest is often the gradient of the solution , rather than the solution itself @xcite , partial derivatives of the solution must be computable with high accuracy as well .",
    "integral equation techniques have the potential to address all the challenges mentioned above .",
    "complex geometries may be handled by decomposing the solution to poisson s equation as the sum of a particular solution @xmath1 that does not satisfy the proper boundary condition in general , plus a homogeneous solution @xmath2 that solves laplace s equation and is chosen so that the full solution @xmath3 satisfies the proper boundary condition .",
    "fast and accurate solvers can be designed based on this construction . indeed , several efficient and accurate integral equation based schemes exist to compute the solution of laplace s equation on complex geometries @xcite , and fast and accurate evaluation of the particular solution @xmath1 on fully adaptive grids by use of the fast multipole method ( fmm ) has also been demonstrated for poisson s equation @xcite . furthermore , in integral equation formulations derivatives do not have to be computed through direct numerical differentiation .",
    "instead , one can analytically differentiate the kernels in the integral representation of the solution , and thus obtain integral representations for the derivatives of the solution as well . as a result",
    "the numerical error for the derivatives often converges at the same rate as the error for the solution itself @xcite .",
    "remarkably , despite all the strengths described above , we are not aware of an integral equation based poisson solver for planar problems that combines all the features at once . in @xcite , grid adaptivity and fmm acceleration",
    "are demonstrated , but only simple geometries are considered .",
    "in contrast , in @xcite , poisson s equation is solved for complex geometries and with fmm - accelerated quadratures , but the solver relies on fast methods for uniform grids @xcite .",
    "the purpose of this manuscript is to close this gap and to present an adaptive , fmm - accelerated poisson solver for complex geometries .",
    "we achieve this in the following way .",
    "we embed the irregular domain @xmath4 on which poisson s equation needs to be solved in a larger square domain @xmath5 .",
    "we decompose the solution to poisson s equation as @xmath3 , and compute the particular solution @xmath1 on @xmath5 with a fast and accurate solver for square domains @xcite . in order to calculate @xmath1 in this way",
    ", we need to extend the source function @xmath6 on the right - hand side of poisson s equation beyond the domain @xmath4 where it is originally given .",
    "we show that global function extension for @xmath6 , constructed by solving laplace s equation or a higher order partial differential equation on the domain @xmath7 , leads to a robust , efficient and accurate algorithm for the evaluation of @xmath1 .",
    "this idea is very similar in spirit to the extension technique recently presented by stein _ _",
    "et al.__@xcite for the immersed boundary method , but quite different in its implementation .",
    "our approach for computing @xmath2 is standard in its formulation @xcite , but it relies on numerical tools developed recently for optimized performance .",
    "specifically , we represent @xmath2 as a layer potential whose density solves a second - kind integral equation .",
    "we use generalized gaussian quadrature @xcite to approximate the integrals , a fast direct solver @xcite to compute the density and an fmm accelerated quadrature by expansion ( qbx ) algorithm @xcite to evaluate @xmath2 inside @xmath4 .",
    "the structure of the article is as follows . in section [ sec : potentialtheory ]",
    "we present our formulation for the solution to poisson s equation , which is based on standard potential theory .",
    "we stress its computational challenges , which are then addressed in the following sections . in section [ sec : boxcodes ] , we describe an efficient and accurate algorithm for the evaluation of the particular solution @xmath1 and its derivatives in a square box .",
    "while this algorithm plays a central role in our approach to the problem , the section is relatively brief because our solver relies on an implementation of the algorithm and techniques that have been discussed in detail elsewhere @xcite . in section [ sec : irregular_box ] , we explain how we use a global function extension algorithm in combination with a box poisson solver for the computation of the particular solution @xmath1 on the whole square domain @xmath5 .",
    "this is a key element of our solver , which allows us to deal with complex geometries in an efficient manner . in section [ sec :",
    "layer ] , we present our numerical method for calculating the homogeneous solution @xmath2 , as well as the function extension . both are expressed as layer potentials and are computed in very similar ways . in section [ sec : results ] we study the performance of our new solver for two poisson problems on a multiply connected domain .",
    "we summarize our work in section [ sec : conclusion ] and suggest directions for future work .",
    "in this article , we consider the solution @xmath8 to poisson s equation with dirichlet boundary conditions given by @xmath9 where @xmath4 is a smooth planar domain , which may or may not be multiply connected . the standard potential theory - based approach to the solution of ( [ eq : poisson1] [ eq : poisson2 ] ) proceeds as follows . the first step is to calculate a particular solution , i.e. a function @xmath1 which satisfies only equation ( [ eq : poisson1 ] ) but does in general not satisfy equation ( [ eq : poisson2 ] ) .",
    "a natural candidate for @xmath1 is given by    @xmath10    where @xmath11 is the free - space green s function for poisson s equation .",
    "for planar problems , @xmath12 .",
    "this is the situation we will consider in this article .",
    "once @xmath1 has been computed , the second step is to compute a homogeneous solution with appropriate boundary conditions .",
    "specifically , one solves the following dirichlet problem    @xmath13    the solution to ( [ eq : poisson1][eq : poisson2 ] ) is then the sum , @xmath14 .",
    "there are many options for the numerical implementation of these two steps and we will not attempt to provide an exhaustive review of them here . instead , we focus on our new approach , which is designed to address situations for which the domain @xmath4 may be irregular and where derivatives of the solution are also required with high accuracy . the purpose of this section is to give a short overview of our approach .",
    "this overview is divided into two subsections : subsection [ sec : part_summary ] concerns the computation of @xmath1 , and subsection [ sec : hom_summary ] describes the computation of @xmath2 .",
    "the presentation in these two subsections is meant to give a general idea of our numerical scheme , and is brief on purpose .",
    "we provide detailed descriptions of our numerical methods to calculate of @xmath1 and @xmath2 in sections [ sec : boxcodes ] and [ sec : irregular_box ] for @xmath1 , and section [ sec : layer ] for @xmath2 .",
    "there are two challenges associated with the evaluation of the particular solution @xmath1 through the integral ( [ eq : volumeint1 ] ) .",
    "first , accurate quadratures must be used in order to handle the logarithmic singularity .",
    "second , given a quadrature rule , the nave numerical approach to computing ( [ eq : volumeint1 ] ) would require @xmath15 work for a domain with @xmath16 discretization nodes .",
    "it is now well known that the computational work can in fact be reduced to @xmath17 via the fast multipole method @xcite .",
    "furthermore , for a fixed domain @xmath4 , the quadrature rules for a weakly singular kernel @xmath11 can be precomputed using an adaptive , brute - force procedure @xcite . as a result , there exist particularly efficient @xmath17 algorithms , including optimized versions of the fmm @xcite , to compute the integral ( [ eq : volumeint1 ] ) for problems specified on a box .",
    "we choose such an algorithm for our solver , and provide some details of this type of method in section [ sec : boxcodes ] .    for irregular domains @xmath4 , however , the situation is quite different .",
    "the calculation of appropriate quadratures is much more difficult and fewer optimizations of the fmm are available . a natural strategy , then , for irregular domains is to consider a larger , square domain @xmath18 containing @xmath4 and to instead compute    @xmath19    where @xmath20 is defined on all of @xmath18 , and constructed such that @xmath21 on @xmath4 .",
    "one of the main novelties of our work is to compute @xmath22 via global function extension : @xmath20 restricted to @xmath23 is the solution of an elliptic partial differential equation with dirichlet data @xmath24 on @xmath25.the pde is solved with a standard integral equation representation .",
    "we elaborate on this idea in section [ sec : irregular_box ] .",
    "it should be noted here that the solution provided by any poisson solver is a valid particular solution , though it will not necessarily be equal to the one given by .",
    "this includes in particular the solutions produced by fft - based solvers for rectangular and circular domains , which are very fast in terms of work per grid point .",
    "the method of @xcite uses such a particular solution , computed via buneman s method @xcite and the modified stencils developed in @xcite .",
    "the algorithm of @xcite , which we choose for our solver , is an alternative to such methods , with its greatest advantage being the ease with which it handles adaptive discretization .",
    "we demonstrate this advantage with numerical examples in section [ sec : results ] .",
    "a standard approach to the solution of laplace s equation is to represent the solution @xmath2 as a layer potential with unknown density @xmath26 on the boundary .",
    "the representation should be chosen so that imposing the boundary conditions results in an invertible , second kind integral equation ( skie ) for the density on the boundary .",
    "this is a well - studied area and there exist appropriate integral representations for multiply connected domains @xcite , unbounded domains @xcite , and for situations with other types of boundary conditions @xcite .",
    "further references can be found in the previously cited papers , and we recommend @xcite for very clear treatments of this topic .    once a suitable representation for @xmath2 is chosen , the discretization of the problem is then simply a matter of quadrature for the resulting skie . in general , the integral kernel may be singular and the choice of quadrature requires attention @xcite .",
    "once discretized , there are many tools available for the fast solution of the resulting linear system , which we briefly discuss in section [ sec : layer ] . for this article",
    ", we choose a direct method @xcite that is optimized for the type of problems considered here .",
    "after the density @xmath27 is computed , the solution @xmath2 can be evaluated in the domain .",
    "this step is trivially direct but it is not without its difficulties . with @xmath16 discretization points in the domain and @xmath28 discretization points on",
    "the boundary , nave computation of the necessary integrals would require @xmath29 work .",
    "this work can be reduced to @xmath30 with the fmm . because the integral kernel of the solution representation is typically singular in the ambient space ( @xmath31 )",
    ", computing the potential @xmath2 to high accuracy near the boundary requires special quadrature schemes .",
    "such schemes have been developed recently @xcite , and for our solver we choose to rely on the quadrature by expansion method ( qbx ) @xcite , which we also briefly discuss in section [ sec : layer ] .",
    "this section reviews relevant features of the algorithm of @xcite , which is the original `` box code '' , and which we have implemented in our solver . by `` box codes '' ,",
    "we mean a class of fast solvers which are used to evaluate integrals of the form    @xmath32    where the integral kernel @xmath11 is a translation invariant green s function , the domain @xmath4 is a box , and @xmath33 is a given density .",
    "we take @xmath34 in what follows .      as in all fast multipole methods ,",
    "a fmm - based box code is based on a hierarchical division of space .",
    "specifically , the domain is taken to be the root box ( level @xmath35 ) of a quad - tree .",
    "the finer levels are obtained by subdividing boxes from the previous level into four equal parts . after a box",
    "is subdivided , the four resulting boxes on the next level are its children .",
    "the quad - tree for a box code is thus fairly typical for an fmm .",
    "the primary distinction of a quad - tree as used in a box code is that it is typically a level restricted tree , i.e. , adjacent leaf boxes are required to be no more than one level apart in the tree hierarchy .",
    "when computing , a choice has to be made as to how the function @xmath6 is represented on each leaf box of the quad - tree . the standard choice , as in @xcite , is to represent @xmath6 by collocation points ( for monomials , chebyshev polynomials , etc ) on each leaf box , using the same points scaled for each level .",
    "then , a reasonable subdivision criterion for a box is whether or not the function @xmath6 is well approximated by its interpolant up to a given tolerance on that box .",
    "this criterion makes a box code an adaptive method , with the order of accuracy determined by the order of the polynomial approximation on each box .",
    "after the quad - tree is formed , we have that @xmath36 where the @xmath37 are leaf boxes and on each leaf box there is a polynomial @xmath38 which approximates the density @xmath6 .",
    "let @xmath39 , defined by setting @xmath40 for @xmath41 , be the approximation of @xmath6 over the whole domain .",
    "the box code proceeds to evaluate the potential @xmath42 , where the evaluation points @xmath43 are taken to be the collocation points of the polynomials @xmath38 .",
    "let @xmath44 be the computed values of @xmath45 . to evaluate the volume integral at other points in the domain",
    ", we evaluate the polynomial which interpolates the values @xmath44 on each box .",
    "we denote this piecewise polynomial function by @xmath46 .",
    "the distinction between @xmath46 and @xmath47 is subtle but necessary here . for the sake of speed",
    ", a box code only evaluates @xmath47 at the collocation nodes .",
    "the operator @xmath48 is approximated more or less exactly so the error is determined by the interpolation error for @xmath39 .",
    "the values of @xmath46 incur further interpolation error , which depnds on the order of the nodes and the smoothness of @xmath47 .",
    "we address the error analysis in more detail in section [ subsec : smoothf ] .    for",
    "a quad - tree with @xmath16 total collocation points , computing @xmath47 would require @xmath15 operations if done navely .",
    "this cost can be reduced to @xmath17 by using the fast multipole method . in the context of this article , it is only necessary to describe the result of the fmm . for a detailed account of the structure of the fmm ,",
    "see @xcite .",
    "let @xmath37 be a leaf box of the quad - tree with width @xmath49 .",
    "the `` near field '' of @xmath37 is defined to be any leaf box whose interior intersects the interior of the box of width @xmath50 centered at @xmath37 .",
    "the boxes which are not in the near field of @xmath37 are said to be in the `` far field . '' because the boxes in the far field of @xmath37 are separated from @xmath37 by a box of at least the same size as @xmath37 , these boxes are said to be `` well separated . ''",
    "let @xmath51 be the set of leaf boxes for which @xmath37 is well separated and @xmath52 be the union over these leaf boxes .",
    "for a non - uniform tree , it is not necessarily the case that the boxes of @xmath53 and the far field of @xmath37 are the same .",
    "see figure [ fig : farnear ] for examples of these sets . in @xmath17 time",
    ", the fmm computes functions @xmath54 for each leaf box @xmath37 which are expansions ( more precisely , the sum of a taylor expansion and a number of multipole expansions ) approximating the influence of all leaf boxes in @xmath53 at any point in @xmath37 , i.e. for any @xmath41    @xmath55 with @xmath54 computed , it is possible to compute the volume integral by directly adding the influence of leaf boxes for which @xmath37 is in the near field , i.e. for any @xmath41    @xmath56 where the second term on the right - hand side is evaluated by direct computation , using a high order quadrature rule .",
    "this step is @xmath57 per point because the number of boxes for which @xmath37 is in the near field and the cost of evaluating @xmath54 are bounded independent of @xmath16 . for a given precision @xmath58 , the computed values @xmath59 satisfy    @xmath60 to achieve this bound for smaller values of @xmath58 , the fmm uses higher - order expansions to approximate @xmath54 .",
    "see @xcite for more on the error analysis of the fmm .    in 0,2 in 0,2,4,6 ( , ) rectangle ( + 2 , + 2 ) node[midway ] @xmath61 ;    in 4,6 in 0,2 ( , ) rectangle ( + 2 , + 2 ) node[midway ] @xmath61 ;    ( 4,4 ) rectangle ( 5,5 ) node[midway ] @xmath16 ; ( 5,4 ) rectangle ( 6,5 ) node[midway ] @xmath16 ; ( 4,5 ) rectangle ( 5,6 ) node[midway ] @xmath16 ; ( 5,5 ) rectangle ( 6,6 ) node[midway ] @xmath62 ; ( 4,6 ) rectangle ( 5,7 ) node[midway ] @xmath16 ; ( 5,6 ) rectangle ( 6,7 ) node[midway ] @xmath16 ; ( 4,7 ) rectangle ( 5,8 ) node[midway ] @xmath61 ; ( 5,7 ) rectangle ( 6,8 ) node[midway ] @xmath61 ; ( 6,4 ) rectangle ( 7,5 ) node[midway ] @xmath16 ; ( 7,4 ) rectangle ( 8,5 ) node[midway ] @xmath61 ; ( 6,5 ) rectangle ( 7,6 ) node[midway ] @xmath16 ; ( 7,5 ) rectangle ( 8,6 ) node[midway ] @xmath61 ;    ( 6,6 ) rectangle ( 8,8 ) node[midway ] @xmath16 ;    in 0,2,4,6 in 0,2,4,6 ; ( 4,4 ) rectangle ( 5,5 ) node[midway ] ; ( 5,4 ) rectangle ( 6,5 ) node[midway ] ; ( 4,5 ) rectangle ( 5,6 ) node[midway ] ; ( 5,5 ) rectangle ( 6,6 ) node[midway ] @xmath62 ; ( 4,6 ) rectangle ( 5,7 ) node[midway ] ; ( 5,6 ) rectangle ( 6,7 ) node[midway ] ; ( 4,7 ) rectangle ( 5,8 ) node[midway ] * ; ( 5,7 ) rectangle ( 6,8 ) node[midway ] * ; ( 6,4 ) rectangle ( 7,5 ) node[midway ] ; ( 7,4 ) rectangle ( 8,5 ) node[midway ] * ; ( 6,5 ) rectangle ( 7,6 ) node[midway ] ; ( 7,5 ) rectangle ( 8,6 ) node[midway ] * ;    ( 6,6 ) rectangle ( 8,8 ) node[midway ] ;    while @xmath17 is indeed optimal in terms of complexity , the numerical scheme presented in @xcite is particularly fast in terms of work per gridpoint . for far field interactions ,",
    "the speed is due in part to the fact that the translation of multipole expansions is diagonalized through the use of plane wave expansions , see @xcite and @xcite for details . for near field interactions , the speed is due to the use of precomputed tables . because the tree is level - restricted , there are a limited number of near field interactions possible , up to scale . therefore ,",
    "if the possible interactions are stored for a unit box , the influence of any box on a box in its near field can be computed at the cost of a small matrix - vector multiply .      in many physical applications ,",
    "the derivatives of the volume potential @xmath63 are the quantities of interest , instead of @xmath63 itself .",
    "once the values of the potential @xmath47 are computed , one could differentiate the piecewise polynomial function , @xmath46 , which interpolates the potential on each leaf box to obtain an approximation of the derivatives . this computation results in derivative values which have an order of accuracy that is one less than the order of accuracy for the potential .    instead",
    ", the derivatives can be computed by recognizing that they are given by another volume integral , e.g.    @xmath64    in fact , the volume integral for the derivatives can be computed alongside the evaluation of the volume integral for the potential with modest impact on the run time . as in the case of computing the potential ,",
    "the near - field interactions can be calculated making use of precomputed tables .",
    "the far - field interactions can be computed by differentiating the local expansion for the far - field , i.e. by differentiating @xmath65 , which is typically a much higher order approximation than the order of the collocation points .",
    "the result of computing the derivatives of the solution with this approach is that the derivatives display the same convergence rate as the potential .",
    "for the calculations presented in this article , the authors have implemented such a scheme . a similar approach to computing derivatives",
    "was taken in @xcite .",
    "as above , let @xmath39 denote the piecewise polynomial approximation to @xmath6 for a given tree and let @xmath47 denote the computed value of @xmath66 .",
    "suppose that the fast multipole method is applied with precision @xmath58 and that the local interaction tables are computed to at least that precision .",
    "then , the error in @xmath66 at a collocation node @xmath67 has the following bound :    @xmath68    that is , the values of @xmath45 are computed at the collocation nodes with an error that depends only on the truncation order of the fast multipole method .",
    "it then follows that the total error at any given collocation node @xmath67 is bounded by    @xmath69    for a constant @xmath70 which is independent of @xmath6 and given by    @xmath71    the bound provides an _ a priori _ estimate of the accuracy of the solution which depends only on the values of the data @xmath6 .",
    "this is useful when designing adaptive refinement strategies as one can simply check whether @xmath6 is well approximated on each leaf in the tree . on a uniform tree ,",
    "we see that the order of accuracy of the overall scheme depends on the order of accuracy of the local polynomial approximation to @xmath6 on leaf nodes .",
    "finally , we note that only depends on the fact that @xmath48 is a bounded operator from @xmath72 to @xmath72 . in particular",
    ", it is clear that holds analogously for @xmath73 and that on a uniform tree we should see the same order of accuracy for the potential and gradient values ( this is sometimes referred to as `` super - convergence '' ) .    in some cases",
    ", the values of the potential will be desired at points other than the collocation nodes .",
    "these values can be obtained by interpolation of the computed potential values , i.e. by evaluating @xmath46 . generally , the error in this step will be of the same order as the error in because the potential is a smoother function than @xmath6 as a function on @xmath31",
    ". however , that reasoning does not always apply when @xmath6 is a smooth function on @xmath4 .",
    "this is because the volume integral implicitly defines @xmath6 to be zero outside of @xmath4 .",
    "by example , the function @xmath74 on @xmath75 \\times [ -1,1]$ ] is well - resolved by a tree with a single leaf box ( equal to @xmath4 itself ) containing , say , a @xmath76 tensor grid of equispaced points ( though virtually any grid would work here ) .",
    "the box code would produce the correct values of to near machine precision at each collocation node .",
    "the problem is that the resulting function is not well - resolved by the grid and the error in interpolating the function at arbitrary points in @xmath4 is large .",
    "this simple example demonstrates an important point : the global smoothness of @xmath6 matters .",
    "perhaps the most natural idea to compute a particular solution @xmath1 to poisson s equation for an arbitrary irregular domain by using a box code is as follows .",
    "suppose @xmath4 is the irregular domain and @xmath18 is a box such that @xmath77 .",
    "then , a particular solution on @xmath4 can be computed as in , so long as an extension @xmath22 on @xmath78 of the right hand side @xmath6 is given .    in many cases of practical interest",
    ", a smooth or continuous extension @xmath22 of @xmath6 is readily available .",
    "the density @xmath6 may for example describe a compactly supported distribution of electric charges which smoothly goes to zero on the boundary of @xmath4 .",
    "likewise , the magnetohydrodynamic equilibrium of a plasma confined in a tokamak is given by a semilinear poisson equation in which the right - hand side @xmath6 smoothly goes to zero on the boundary of @xmath4 in most situations @xcite .",
    "in such cases , @xmath79 on @xmath78 is a natural and satisfying choice .    in the general case ,",
    "however , @xmath20 does not have an obvious physical meaning , and the extension @xmath22 is constructed as a purely mathematical artifice required by the box solver .",
    "the problem of specifying a function @xmath22 such that @xmath21 on @xmath4 is extremely open ; we narrow it by looking for an extension @xmath22 that is favorable in terms of the efficiency and accuracy of the box code .",
    "to motivate our construction of @xmath20 , we first perform a heuristic but more detailed analysis of the error bound for densities @xmath22 which are not necessarily smooth on the box @xmath18 . using the standard multi - index notation , let @xmath80 and @xmath81 .",
    "then the differentiability class @xmath82 of a domain @xmath83 is defined to be the set of functions @xmath84 such that @xmath85 is continous for each @xmath86 with @xmath87 , with the convention that @xmath88 is the set of bounded functions which are possibly discontinuous . for a density @xmath89 and a uniform tree with leaf boxes of width @xmath49 ,",
    "let @xmath90 be the numerical approximation as in the previous section , using interpolants of order @xmath91 ( degree @xmath92 ) on each box .",
    "standard error estimates imply that    @xmath93    where @xmath94 . if the additional assumption is made that @xmath22 is piecewise @xmath95 for some @xmath96 ( say that for a domain @xmath97 , the density @xmath98 and @xmath99 ) then the approximation order is improved to @xmath100 , see , _ inter alia _ , @xcite .",
    "these bounds suggest that the scheme should have @xmath57 error for a piecewise smooth density which is discontinuous across some boundary",
    ". however , in practice the observed convergence rate is faster , even for the derivatives of @xmath101 .",
    "the reason for this is that the bound only makes use of the fact that @xmath48 and its derivatives are bounded on @xmath72 .",
    "it does not take into account the fact that they are given by weakly singular integrals .",
    "one could thus seek a tighter bound for the error @xmath102 , but with our construction of the solution given by equations , and , it suffices to see how good of a particular solution @xmath103 is .",
    "for this purpose , let @xmath67 be contained in a box @xmath37 and let @xmath104 denote the union over all boxes for which @xmath37 is in the far - field , as already defined in section [ sec : box_outline ] .",
    "we can write    @xmath105    the contribution to @xmath106 from the second term is harmonic .",
    "the contribution from the first term is the relevant one regarding the quality of @xmath103 as a particular solution .",
    "let @xmath49 be the side length of the box @xmath37 .",
    "if we consider the error without the far - field contribution , we have    @xmath107    for the derivative values we have the analogous bound    @xmath108    there are two main conclusions from the preceding analysis .",
    "the first conclusion is the intuitive result that the smoother @xmath22 is the better the approximation of the particular solution .",
    "the more interesting conclusion is that @xmath22 may not need to be quite as smooth as we may have initially expected .",
    "specifically , in our implementation , we use 4th order interpolants on each leaf box .",
    "suppose we discretize the domain with a uniform tree and leaf boxes of side length @xmath49 .",
    "for a piecewise smooth density @xmath22 which is discontinuous , the above bounds imply ( nearly ) 2nd order accuracy in the values of the particular solution and 1st order accuracy in the gradient .",
    "similarly , for a piecewise smooth density @xmath22 which is continuous , they imply ( nearly ) 3rd and 2nd order accuracy , respectively .",
    "these bounds are consistent with our numerical results , as we demonstrate in section [ sec : results ] .    finally , note that and also imply that we do not expect to observe `` super - convergence '' for piecewise smooth densities unless they are of sufficient smoothness globally .",
    "while super - convergence would be a desirable property , we have found that adaptive refinement strategies can be advantageously used to obtain the desired high - accuracy ( though not necessarily high - order accurate ) values for derivatives of the potential .",
    "we present these numerical results in more detail in section [ sec : results ] .      in previous attempts to use box codes for irregular domains ,",
    "two main extrapolation techniques were used .",
    "the first , which we call `` extrapolation by zero '' , simply sets the density @xmath22 to be zero outside the domain@xcite . in this case , the function @xmath22 is as smooth as the original density @xmath6 inside the domain and trivially smooth outside the domain .",
    "therefore , the estimates for piecewise smooth functions apply and we see that the scheme should converge with a rate @xmath109 for a uniform tree .",
    "the reader may keep in mind that for such situations , a box code relying on an adaptive tree is more efficient in terms of degrees of freedom than a code using a uniform tree .",
    "even if so , adaptive refinement for functions with a discontinuity requires trees with a large number of refinement levels and therefore a large number of grid points .",
    "this can make the `` extrapolation by zero '' approach computationally costly .",
    "the second extrapolation method uses local polynomial approximations to @xmath6 to extrapolate @xmath6 outside the domain over short distances @xcite .",
    "a major limitation of this method is that it results in a smooth @xmath22 for individual leaf boxes but has no guarantees of smoothness across boxes . since there can be discontinuities in @xmath22 across boxes near the original domain",
    ", the computed potential @xmath101 may be unresolved on those boxes .",
    "this issue seems to be inherent in local extrapolation methods .",
    "that is why we seek out a global extrapolation method which improves on the nave global `` extrapolation by zero '' approach , in terms of both speed and accuracy .",
    "the global extrapolation method we adopt is similar in spirit to the one recently proposed in @xcite in a different context , and can be explained in a few words .",
    "let @xmath110 solve the pde    @xmath111    subject to the condition that @xmath112 is bounded as @xmath113 .",
    "then , the function @xmath22 defined by    @xmath114    is globally continuous , as smooth as @xmath6 on @xmath4 , and smooth on @xmath78 .",
    "while this may at first seem like a computationally expensive way to extrapolate @xmath6 , the analytical and numerical machinery required to solve this problem is in fact the same as that required to solve the harmonic problem  , which is used to enforce the boundary condition of the original poisson problem (  ) .",
    "note that the method can be generalized to compute globally @xmath115 extrapolations of @xmath6 by solving polyharmonic equations .",
    "for example , a @xmath116 extrapolation can be computed by solving the following biharmonic problem :    @xmath117    where @xmath118 is some domain containing @xmath4 .",
    "once @xmath110 is computed , @xmath22 is as defined in the continuous case . while the methods for equation are not as well developed as in the laplace case , there exist similar potential - theory based integral equations and fast solution methods for the solution of the biharmonic problem .",
    "see , for instance , p. farkas phd thesis @xcite and the approach of @xcite which leverages the sherman - lauricella integral equations for elasticity .",
    "there are two main reasons to not consider extrapolations based on polyharmonic equations of higher order than the biharmonic equation : ( 1 ) very few numerical tools have been developed for such equations and ( 2 ) the equations require to provide high order derivatives of the data @xmath6 in the direction normal to the boundary , which in most physical applications are not readily available , and can be challenging to compute with high accuracy numerically , even when using integral equation based methods @xcite .    for our numerical tests , and in the version of the code which will be available online , only the harmonic expansion calculated by solving",
    "is implemented .",
    "the details of our implementation are given in [ sec : layer ] in parallel with the calculation of @xmath2 , since both computations rely on the same mathematical and numerical tools .",
    "in this section , we describe how we compute the homogeneous solution @xmath119 which solves the harmonic problem (  ) .",
    "since we use similar numerical techniques to solve this problem and to compute the global function extension through , we will also discuss the latter , and highlight the small differences between the two situations .",
    "before we proceed , we should clarify what we mean by a multiply connected domain and the normal direction to the boundary curve .",
    "let @xmath4 be an interior domain with boundary @xmath25 .",
    "for a multiply connected domain , @xmath25 is given as the union over disjoint , closed curves @xmath120 , with @xmath121 corresponding to the outer boundary .",
    "the normal direction on each component @xmath122 is taken to be the direction pointing away from @xmath4 . for @xmath121",
    ", this vector points to the exterior of the curve and for @xmath122 , @xmath123 , this points to the interior of the curve . to see a simple illustration of such a domain and its normal vectors , see figure [ fig : omega ] in section [ sec : results ] .",
    "we write both the homogeneous solution @xmath2 and the extension @xmath110 of @xmath6 in @xmath124 as layer potentials @xcite .",
    "specifically , for the homogeneous solution we write @xmath125 where @xmath26 is an unknown density , and @xmath126 with @xmath127 representing the partial derivative in the direction normal to the boundary .",
    "@xmath128 is known as a single layer potential , and @xmath129 is known as a double layer potential @xcite .    for the harmonic function extension , we write @xmath110 as @xmath130 where @xmath27 is an unknown density , and @xmath131    now , let @xmath132 , @xmath133 and @xmath134 denote the restrictions of @xmath135 and @xmath136 to points @xmath137 on the boundary @xmath25 , where the integrals are taken in the cauchy principal value sense when necessary . @xmath138 and @xmath139 reach the following limiting values",
    "as @xmath67 approaches a point @xmath137 on the boundary @xcite @xmath140 and @xmath141 is a second kind integral equation ( skie ) for @xmath26 , and an skie for @xmath27 .    at this point",
    ", we have the desired integral representations for @xmath2 and for @xmath110 , and equations for their associated densities .",
    "the representation for @xmath2 has been used in commercial software @xcite and is known in the integral - equations community @xcite but the authors are unaware of any treatment of the fredholm alternative as applied to the resulting integral equation .",
    "we consider a proof of the invertibility of to be beyond the scope of this paper but note that the argument of lemma 29 in @xcite can be modified to provide a proof of its invertibility , even on multiply - connected domains .",
    "the invertibility of is well - known @xcite .",
    "we now discuss the numerical methods we chose to solve and and to evaluate the integrals in and .      in our solver , we discretize",
    "@xmath142 using panels of scaled , 16th order legendre nodes .",
    "our numerical methods rely on the following simplifying assumptions concerning the boundary @xmath25 : ( 1 ) the boundary is @xmath115 for some large @xmath143 and ( 2 ) the panels are chosen fine enough so that for source and target nodes on distinct , non - adjacent panels the integrals of the layer potentials are computed to high precision using the standard gaussian weights ( the `` source '' and `` target '' terminology is explained below ) . note that there exist more complex algorithms that would allow us to relax both assumptions , and their implementation in our solver will be the subject of future work . to relax the first assumption , one could use any of the methods described in @xcite to allow domains with corners . while the second assumption is not necessarily much of a limitation on the types of domains which can be handled by our solver , the fineness implied by this assumption can lead to too great a computational burden for certain domains , such as domains in which the boundary comes close to intersecting itself .",
    "the method of @xcite provides a more efficient approach for such cases .",
    "now , let @xmath142 be discretized into @xmath144 panels using @xmath145 total nodes and denote the @xmath146th node by @xmath147 .",
    "using generalized gaussian quadrature for the interactions between nodes on the same and adjacent panels and the standard , scaled gaussian weights otherwise , we obtain a nystrm discretization of and :    @xmath148    where @xmath149 , @xmath150 and the @xmath151 , @xmath152 , and @xmath153 correspond to integration weights .",
    "we note that the expressions above are a slight abuse of notation as the green s function and its derivatives are undefined when @xmath154 .",
    "the true formula is more generally a function of the boundary and the kernel but we find the above more edifying . in the current context",
    ", the relevant piece of information is that there exist weights @xmath151 , @xmath152 , and @xmath153 such that the quadratures appearing in the second kind equations can be evaluated with high - order accuracy . for a more detailed treatment of the generalized gaussian quadrature framework ,",
    "see @xcite . in the following sections",
    ", we will refer to the @xmath153 , which are given by appropriately scaling the standard gauss - legendre weights , as the smooth quadrature weights .",
    "there exist many tools available for the fast solution of the linear systems and .",
    "there are iterative solution techniques , e.g. gmres @xcite , which perform well for linear systems discretized from skies on simple domains .",
    "the computational cost of such a scheme is typically dominated by a term of the order @xmath155 where @xmath143 is the number of iterations required to converge and @xmath156 is the amount of work for a matrix - vector multiply .",
    "for well - conditioned problems with @xmath28 boundary nodes , typically @xmath157 and the cost of @xmath156 can be reduced to @xmath158 with an fmm .",
    "there are also fast - direct solution methods , i.e. , methods which construct , in @xmath158 or @xmath159 time , a representation of the inverse of the system matrix which can be applied in @xmath158 or @xmath159 time . for such direct methods , the cost of forming the representation of the inverse is often much greater than that of the fmm , while the speed of applying the inverse , once computed , is often faster than the fmm .",
    "fast - direct solvers can be particularly useful for problems in highly - irregular domains , in which the iteration count of an iterative solver may be too high or unpredictable .",
    "they are also advantageous for cases in which several laplace problems need to be solved for a fixed domain , since the high initial cost only has to be paid once . for our solver",
    ", we implemented the direct method developed by @xcite , which is optimized for the type of problems considered here , and found that it gave very satisfactory performance .",
    "once @xmath26 and @xmath27 are computed , we evaluate @xmath2 and @xmath110 by direct computation of the integrals [ eq : layer_for_uh ] and [ eq : layer_for_w ] .",
    "this step can at first appear complicated because the integral kernels are near singular for the evaluation of points near the boundary of the domain .",
    "we resolve the difficulty by computing the integrals for points near the boundary using the quadrature - by - expansion ( qbx ) method .",
    "we will not present the fundamentals of the qbx scheme here , since clear presentations for situations very closely related to the one we encounter here can be found in @xcite .",
    "we will however stress two modifications to the standard qbx scheme which we implemented in our solver .",
    "first , we accelerated the evaluation of the layer potentials with the fmm ( a similar but more sophisticated acceleration scheme is presented in @xcite ) .",
    "second , we developed a variant of qbx which allows , after precomputation of the field at a fixed number of points , the evaluation of the field anywhere in the domain in @xmath57 time @xcite .",
    "this is particularly convenient for the evaluation of the function extension when we construct the adaptive tree , since the grid points at which the values of the layer potential are desired may not be known a priori .",
    "let us discuss these two modifications to the standard qbx method in more detail .",
    "consider , for example , the evaluation of the layer potential @xmath160 .",
    "we use the notation as above for the discretization nodes @xmath161 , the smooth quadrature weights @xmath162 , and the boundary normals @xmath163 of @xmath25 .",
    "let @xmath164 be the qbx centers , located at a distance @xmath165 from the boundary : @xmath166 . in the qbx method ,",
    "the potential @xmath8 is approximated by a power series in the disc of radius @xmath165 about @xmath167 , denoted by @xmath168 . for any @xmath169 in @xmath168",
    ", we write @xmath170 where @xmath171 and @xmath172 . the coefficients @xmath173 can be recovered from the following integral on the circle of radius @xmath174 about @xmath164 : @xmath175    the layer potential @xmath2 is smooth on the circle of radius @xmath174 , so the @xmath173 can be computed with high order accuracy using the trapezoidal rule to discretize the integral .",
    "let @xmath176 equispaced points @xmath177 be placed on the circle @xmath178 .",
    "the values @xmath179 can be computed accurately using the smooth quadrature weights for @xmath142 to approximate the single and double layer potentials there , assuming that @xmath165 is large enough . for sufficient sampling",
    ", @xmath176 should be taken larger than @xmath180 .",
    "once the coefficients are computed , the power series can be used to approximate the potential at targets which are close to the boundary .",
    "high accuracy can be obtained when @xmath165 is sufficiently small .    with these preliminaries in place ,",
    "the fmm - accelerated algorithm for the evaluation of the potential at @xmath16 targets @xmath181 can be described in the following steps :    * place @xmath28 centers at the points @xmath182 . *",
    "define @xmath176 equispaced points @xmath177 for @xmath183 on the circle of radius @xmath174 about each center @xmath167 .",
    "* call the fmm to evaluate @xmath2 at the targets @xmath184 and the points @xmath177 , where the layer potentials are approximated using the smooth quadrature weights @xmath162 .",
    "this is a @xmath185 procedure . *",
    "compute the coefficients @xmath173 for each center as in , using the trapezoidal rule .",
    "this takes @xmath186 work for @xmath187 using the fft . * for each target which is within @xmath174 of any boundary node @xmath147 , let @xmath188 be the nearest qbx center .",
    "the smooth rule might not be accurate for this target , so instead use the value given by the power series about @xmath167 .",
    "the cost for this is @xmath189 per target .",
    "the scheme presented above is satisfactory if the targets @xmath181 are all known in advance .",
    "however , when constructing the adaptive tree , the potential associated with the function extension may have to be evaluated at new targets @xmath190 . for the new targets which are close to the boundary",
    ", the potential can be computed using the expansion about the nearest qbx center . for the targets",
    "further from the boundary , we avoid calling the fmm again to compute the potential there . instead , we store the multipole and local expansion coefficients computed for all boxes in the hierarchy during the initial call to the fmm .",
    "the values of the potential at the new targets @xmath190 can then be evaluated in @xmath191 work for each target , where @xmath192 is the order of the multipole and local expansions in the fmm @xcite .    in the above",
    ", we have avoided the key topic of how to select @xmath165 , the radius of the qbx expansion .",
    "this must be done to balance two competing concerns : ( 1 ) that @xmath165 is sufficiently large so that @xmath179 can be computed accurately using the smooth quadrature weights , @xmath162 , and ( 2 ) that @xmath165 is sufficiently small so that the truncated power series is an accurate approximation of @xmath2 . while it may seem unclear whether choosing an appropriate @xmath193 is indeed possible , this fact was proven in @xcite .",
    "now , if the discretization node @xmath147 is on a boundary panel of length @xmath194 , it can be shown that setting @xmath195 provides high accuracy when using 16th order legendre nodes on each panel . however , having the center so far places further restrictions on the discretization of the domain , since no boundary points are allowed to be in the interior of the qbx disc .",
    "thus , in practice one often takes @xmath196 and computes @xmath179 using the smooth weights for an oversampled version of the boundary .",
    "the idea of using equispaced points on a circle to form a power series expansion of a harmonic function is reminiscent of the `` fast multipole method without multipoles '' of @xcite .      in the qbx",
    "setting , the derivatives of the layer potentials can be obtained by differentiating the qbx power series expansion .",
    "this works well for the single layer potential but has been observed to result in the loss of precision for the double layer potential @xcite .",
    "the cause of this loss of precision is unclear but may result from the hyper - singular nature of the derivatives of the double layer potential as operators on the boundary .",
    "it was pointed out to us by manas rachh and leslie greengard @xcite that the evaluation of the derivatives of the double layer potential can be accomplished by differentiating the density along the boundary and using the qbx algorithm for the cauchy kernel ( which behaves like the double layer kernel ) .",
    "the key observations are that @xmath197 where @xmath198 and @xmath199 for @xmath200 .",
    "if high accuracy values of the tangential derivative of the density can be obtained , the above provides a stable computation of the derivatives of the double layer potential .",
    "we have implemented this method but computing the tangential derivative of the density presents some difficulty in the embedded boundary setting , as explained below .    in most of the numerical tests we perform in section",
    "[ sec : results ] , the discretization error , solution error , and qbx error associated with the boundary integral are made to be so small that the error in the boundary correction @xmath2 is dominated by the error in the interpolated values of the volume potential on the boundary . the accuracy of the gradient of the potential will be affected more strongly because the gradient of the solution of the laplace dirichlet problem depends on the accuracy of the tangential derivative of the boundary values .",
    "this is typically not a concern in the integral equations context , for two reasons .",
    "first , one usually assumes that one has high order accurate values for the boundary data .",
    "second , the evaluation of the gradient of a layer potential is smoothing for points sufficiently far from the boundary .",
    "however , in the context of the poisson solver we present in this article , the tangential derivative of @xmath46 is , as an analytic matter , one order lower than the order of @xmath46 ( this is because @xmath46 is a polynomial on each box ) and the value of the gradient may be requested arbitrarily close to ( or even on ) the boundary .",
    "this loss of accuracy for the boundary data results in a similar loss of accuracy for the computed gradient .    a potential way to address",
    "this problem is as follows . for a smoothly extended function @xmath22",
    ", a box code can be used to compute @xmath201 at the collocation points in the same way that @xmath202 is computed .",
    "the interpolant of the gradient computed this way , which we call @xmath203 , is the same order as @xmath46 .",
    "we can then construct a new approximation to @xmath204 on the boundary by first computing @xmath205 along the boundary , where @xmath206 is the tangent vector of the curve , and then computing its indefinite integral panel - wise ( we correct for the constant using @xmath46 , again panel - wise ) .",
    "the resulting function is the same order accuracy as @xmath46 but its derivative is a better approximation to the derivative of @xmath204 .",
    "we investigate the merits of this alternative approach numerically in section [ sec : results ] .",
    "unfortunately , this approach does not appear to improve the order of accuracy for non - smooth @xmath22 .",
    "as noted in section [ subsec : nonsmoothf ] , we expect the convergence of the computed gradient to be one order lower than the potential for an extended density @xmath22 obtained through continuous extension or extension by zero , i.e. there is no advantage to using @xmath203 as it is already one order of accuracy lower than @xmath46 .",
    "this was evident in numerical experiments , where the accuracy in the derivatives was comparable using this new approximation to @xmath103 instead of @xmath46 .",
    "we therefore leave these results out of the next section . in the case that a @xmath115 extension is available for sufficiently large @xmath143 , this technique may prove important to achieving super - convergence .",
    "in order to verify the preceding analysis and test the performance of the numerical method we propose in this article , we have implemented a poisson solver in fortran which combines all the different modules we presented in the previous sections .",
    "the volume integral code is a modified version of the original fortran code of @xcite ( using fourth order nodes on leaf boxes ) , with some added openmp parallelism and the modification for computing gradient values discussed in section [ subsec : volderivatives ] .",
    "the codes for the boundary correction and the continuous extension were written specifically for this work , and are based on the methods described in section [ sec : irregular_box ] and [ sec : layer ] .",
    "we are currently documenting the numerical solver we used to generate the results shown below , and will make it freely available online at a later date .    for each numerical test , we have used the domain @xmath4 shown in figure [ fig : omega ] , which has an irregular boundary and is multiply connected . the interfaces of this domain are specified by parametric equations in polar coordinates . specifically , each interface is given by a set of points @xmath207 for @xmath208 , where @xmath209 .",
    "the choice of the coefficients was arbitrary . for reference , the non - zero coefficients for the outer boundary were @xmath210 , @xmath211 , @xmath212 .",
    "the non - zero coefficients for the inner boundary were @xmath213 , @xmath214 .     and its boundary @xmath215 .",
    "the axes coincide with the boundary of the containing box @xmath18 .",
    "two outward - pointing boundary normal vectors are indicated by arrows . ]",
    "let @xmath216 denote the number of panels used in the discretization of the boundary and @xmath217 denote the total number of boundary points ( we use 16th order nodes throughout ) .",
    "for the volume integral nodes , let @xmath218 denote the total number of points in @xmath18 and @xmath219 denote the number of points inside @xmath4 . for each test",
    ", we approximated the relative @xmath220 error , @xmath221 where @xmath222 is either the potential or its derivatives , by sampling at @xmath223 points randomly placed in @xmath4 .",
    "these points were kept the same for each discretization level for the sake of convergence tests .",
    "we report the error in the gradient below as @xmath224 . in the error analysis of this section ,",
    "the density for the boundary correction is computed with high accuracy ( say 12 digits ) and the corresponding layer potential is evaluated with high accuracy as well ( say 12 digits for the potential and 8 - 9 digits for its gradient ) . with this assumption , the error will be primarily a function of the number of discretization nodes in the volume , i.e. @xmath219 .",
    "all computations were performed on a desktop computer with an intel xeon(r ) cpu e3 - 1220 v5 ( 3.00ghz , 4 core ) and 16 gb of memory .",
    "a few of the computations depend only on the boundary and therefore take the same amount of time for each discretization level . in the first example , the boundary was discretized with @xmath225 nodes .",
    "the precomputation time for the direct solver took 1.20 and 1.80 seconds for the continuous function extension and boundary correction linear systems , respectively . the precomputation time to allow for @xmath57 access to the layer potential took .60 and 1.20 seconds for the continuous function extension and boundary correction layer potentials , respectively",
    "the solution in the second example is much more irregular than in the first and thus more boundary points were required . for this case ,",
    "the boundary was discretized with @xmath226 nodes .",
    "the precomputation time for the direct solver took 1.57 and 2.89 seconds for the continuous function extension and boundary correction linear systems , respectively . the precomputation time to allow for @xmath57 access to",
    "the layer potential took 1.10 and 1.99 seconds for the continuous function extension and boundary correction layer potentials , respectively .",
    "we consider these computational costs to be modest and emphasize that the precomputation of the fast - direct solver must only be done once per domain .",
    "we report on the speed of the volume integral code and the evaluation of the layer potentials below .",
    "when a smooth extension @xmath22 is known , the bound of section [ subsec : smoothf ] implies a rather straightforward _ a priori _ adaptive discretization strategy : for a given tolerance , refine the tree until the local polynomial interpolant on each leaf box approximates @xmath22 within that tolerance , which can be tested by comparing @xmath22 and the interpolant on a finer grid .",
    "it turns out that this strategy will result in an overall error well below the desired tolerance .",
    "a modification which , in practice , gets closer to the desired tolerance is to refine until the error in the local polynomial interpolation times the area of the box is within the tolerance on each leaf box .    for piecewise smooth @xmath22 , we saw in section [ subsec : nonsmoothf ] that the bound may be pessimistic .",
    "however , the analysis of that section offers little in terms of an _ a priori _ discretization strategy . if the above strategy for smooth @xmath22 is implemented , the accuracy of the resulting scheme is often not even competitive with a uniform grid .",
    "we consider the problem of efficient _ a priori _ adaptive discretization to be open in this setting but have empirically found the following scheme to compare favorably to uniform discretization in our tests : weight the error approximation using the size of the given leaf box as described above but using the area of the leaf box for boxes which intersect the boundary ( where @xmath22 is less smooth ) and using the sidelength of the leaf box otherwise . in this sense , we are more forgiving of the approximation error for boxes where @xmath22 is merely continuous .",
    "it seems that in many situations an _ a posteriori _ discretization strategy would be more efficient in terms of accuracy per grid point . while this may be an intuitive statement , it is not clear whether an _ a posteriori _ scheme would be more efficient in terms of accuracy per flop because such a scheme may require several successive iterations . we do not attempt to answer this question here but emphasize that the issue with is a matter of efficiency rather than correctness , i.e. if an _ a priori _ bound is required , provides one , it just may be an over - estimate .      for example 1 , we choose a known , relatively smooth solution @xmath8 given by    @xmath227    and calculate @xmath6 analytically by direct differentiation , and @xmath84 by evaluating @xmath8 on @xmath25 .",
    "figure [ fig : ex1ext ] shows heat maps of the corresponding @xmath22 obtained by zero extension and by continuous extension .",
    "example 1 is relatively simple on purpose , in order to test the validity of the analysis of the previous sections .     for example 1 using extension by zero ( left ) and continuous extension ( right ) .",
    "]    first , consider the question of superconvergence for a smooth extension @xmath22 .",
    "this is simple to test numerically as the formula for @xmath8 is smooth on @xmath31 . in section [ sec :",
    "layer ] , we noted that the boundary correction can be computed with two different types of boundary data .",
    "let version 1 denote the boundary data obtained from @xmath46 and version 2 denote the boundary data obtained by integrating @xmath228 , where we have reused the notation of section [ sec : layer ] .",
    "we perform a convergence test on uniform trees for both versions 1 and 2 . according to the analysis of the preceding sections , version 1",
    "should display fourth order convergence for the potential and sub - fourth order convergence for the gradient , while version 2 should display superconvergence , i.e. fourth order for both the potential and gradient .     for version 1 ( left ) and version 2 ( right).,title=\"fig : \" ]   for version 1 ( left ) and version 2 ( right).,title=\"fig : \" ]    in figure [ fig : ex1smooth ] , we see that the analysis is largely confirmed .",
    "while we can not conclude decisively regarding the convergence order of the gradient for version 1 , it is indeed fourth order for version 2 .",
    "note that the slope seems to taper off for the last point , which is likely due to the fact that one is approaching the accuracy of the qbx evaluation of the derivative .",
    "in terms of accuracy per grid point , version 2 is clearly superior to version 1 .",
    "next , we consider the question of the convergence order using extension - by - zero and continuous extension with a layer potential .",
    "the analysis of section [ subsec : nonsmoothf ] suggests that we should see second order convergence for the potential and first order convergence for the gradient using extension - by - zero .",
    "this should be improved to third order for the potential and second order for the gradient by using continuous extension . as a reminder ,",
    "these rates are to be compared with the rates implied by the coarser error bound , which suggests that the extension - by - zero scheme would not converge and that the continuous extension scheme would be merely first order in the potential and derivative . to test the reasoning of section [ subsec : nonsmoothf ]",
    ", we performed a convergence test of the extension by zero and continuous extension methods on uniform trees .    , using either extension - by - zero ( blue curves ) or continuous extension ( green curves).,title=\"fig : \" ] , using either extension - by - zero ( blue curves ) or continuous extension ( green curves).,title=\"fig : \" ]    the results are shown in figure [ fig : ex1uni ] , and confirm that the analysis of section [ subsec : nonsmoothf ] gives a better sense of the convergence rate than a nave application of the bound .",
    "next , we consider the question of adaptive grid refinement .",
    "an adaptive grid should be able to provide significant gains , especially for the nonsmooth @xmath22 .",
    "for the results presented here , we use an adaptive tree based on _ a priori _ error estimates , as described in the previous subsection .",
    "this refinement rule tends to place more boxes near the boundary because of the irregularity of @xmath22 across the boundary , as shown in figure [ fig : ex1adpboxes ] .",
    "we only present results corresponding to continuous extension here , as our refinement rule did not work well with zero extension , and is not relevant in the case of the smooth @xmath22 since there is little difference between adaptive and uniform discretization in that case .    .",
    "]    , for both uniform ( blue dots ) and adaptive trees ( green crosses).,title=\"fig : \" ] , for both uniform ( blue dots ) and adaptive trees ( green crosses).,title=\"fig : \" ]    in figure [ fig : ex1adp ] , we see modest improvement in the accuracy of the potential and significant improvement in the accuracy of the gradient using adaptive discretization .",
    "we note that for the tests with adaptive grids much larger values of @xmath219 could be achieved .",
    "this is because the memory consumption of the volume integral code depends on @xmath218 , the total number of nodes in the box @xmath18 .",
    "the uniform tree rather inefficiently places many points outside of @xmath4 , whereas the adaptive tree places relatively few points because the extended function is quite smooth outside of @xmath4 , where it is harmonic .",
    "we conclude this section on example 1 by analyzing the run time performance of the box code and of the evaluation of layer potentials .",
    "figures for the box code are given in tables [ tab : ex1unitimes ] and [ tab : ex1adptimes ] , and figures for the evaluation of layer potentials are given in tables [ tab : ex1uniqbxtimes ] and [ tab : ex1adpqbxtimes ] .",
    "@xmath229 denotes the time for the box code , @xmath230 denotes the time for qbx precomputation ( forming the expansions for @xmath57 access to the field , as described above ) , and @xmath231 denotes the time for qbx evaluations at each node in the domain .",
    "each of these times includes the time required to evaluate both the potential and the gradient .",
    "the performance is only reported for continuous extension ; the results for extension by zero and smooth extension are similar .    .box code timing information for example 1 with continuous function extension and a uniform tree.[tab : ex1unitimes ] [ cols=\"<,<,<,<,<\",options=\"header \" , ]",
    "we have demonstrated that continuous global function extension constructed as the solution of an exterior laplace problem provided an effective framework to apply adaptive fmm based poisson solvers to problems with complex geometries .",
    "we found that the desirable properties of the fmm are kept intact with such a method : the amount of work still scales linearly with the number of degrees of freedom in the computational domain and is competitive with classical fft - based solvers in terms of work per grid point , despite the flexibility of adaptive mesh refinement .",
    "this holds even for multiply connected domains with irregular boundaries .",
    "the adaptive refinement capability of our new solver plays a crucial role in guaranteeing an efficient use of the degrees of freedom in the system , and in obtaining high accuracy for the gradient of the potential .",
    "finally , for the particular situations in which a smooth global extension is readily available without resorting to numerical computation , as is for example the case of an extension by zero in plasma physics applications @xcite , we have presented a numerical method which leads to the same order of convergence for the gradient of the potential as the potential itself . in our implementation of the fmm",
    ", this translates to 4th order convergence for both the potential and the gradient , and the order of convergence can be increased by choosing higher order basis functions @xcite .    of course , when continuous extension is employed , the _ convergence order _ of the method is not particularly high .",
    "we demonstrated above that adaptive refinement can help improve the accuracy per degree of freedom in this case , particularly for the gradient , but the low order of accuracy is really a result of compromise .",
    "the method of this paper emphasizes ease of use , domain flexibility , speed , and compatibility with adaptive refinement strategies . to achieve these goals",
    "we have chosen an embedded boundary method ( for ease of use and domain flexibility ) built on a box code ( for speed and handling highly adaptive grids ) . because it is an embedded boundary method , high order accuracy is more difficult to achieve",
    ". however , the method asks for very little from the user .",
    "only a parametric description of the boundary and a method for evaluating @xmath6 accurately in the domain must be provided . in particular , no special quadrature rules are required , as is the case for a boundary fitted mesh , and there are no requirements on the accuracy of derivatives of the user - provided @xmath6 . as noted in section [ subsec : funextend ] , when accurate derivatives of @xmath6 are available , an extension computed as the solution of a polyharmonic equation would result in a higher order method .",
    "the capabilities of our solver can be extended in a number of ways .",
    "first , @xmath232 function extension provided by the solution of an exterior biharmonic problem would lead to faster convergence for the solution and gradient than we have obtained with @xmath233 extension , provided that accurate values for the gradient of @xmath6 are available on the boundary .",
    "second , one could allow for boundaries with corners and which nearly self intersect .",
    "numerical tools addressing these two challenges have recently been developed , but have not yet been implemented in the poisson context .",
    "fortunately , the overall method is largely agnostic as to how the function extension and harmonic correction are computed , so that new methods may be swapped in when they become available .",
    "finally , much of the technology and analysis required for this work extends to three dimensions in a straightforward manner .",
    "this is the subject of ongoing work , with progress to be reported at a later date .",
    "the authors would like to thank prof .",
    "leslie greengard ( nyu ) and dr .",
    "manas rachh ( yale ) for many insightful conversations , and dr .",
    "zydrunas gimbutas ( nist ) for helping with the generation of tables .",
    "was partially supported by the u.s .",
    "department of energy under contract defg0288er25053 , by the air force office of scientific research under nsseff program award fa9550 - 10 - 1 - 0180 and fa9550 - 15 - 1 - 0385 , and by a gsas dissertation fellowship from nyu .",
    "a.j.c . was supported by the u.s .",
    "department of energy , office of science , fusion energy sciences under award nos .",
    "de - fg02 - 86er53223 and de - sc0012398 .",
    "m.  minion ,  a projection method for locally refined grids \" , _ journal of computational physics _ , * 127 * ( 1996 ) , pp .",
    "158 - 178 http://dx.doi.org/10.1006/jcph.1996.0166 [ ] . http://dx.doi.org/10.1006/jcph.1996.0166    s.  popinet ,  gerris : a tree - based adaptive solver for the incompressible euler equations in complex geometries \" , _ journal of computational physics _ * 190 * ( 2003 ) , pp .",
    "572 - 600 .",
    "http://dx.doi.org/10.1088/0022-3727/42/6/065203 [ ] .",
    "s.  celestin , z.  bonaventura , b.  zeghondy , a.  bourdon and p.  sgur , the use of the ghost fluid method for poisson s equation to simulate streamer propagation in point - to - plane and point - to - point geometries , _ journal of physics d : applied physics _ * 42 * , 065203 ( 2009 ) .",
    "http://dx.doi.org/10.1088/0022-3727/42/6/065203 [ ] .",
    "http://dx.doi.org/10.1088/0022-3727/42/6/065203    a.  pataki , a.  j.  cerfon , j.  p.  freidberg , l.  greengard , and m.  oneil ,  a fast , high - order solver for the grad  shafranov equation \" , _ journal of computational physics _ * 243 * ( 2013 ) , pp .",
    "http://dx.doi.org/10.1016/j.jcp.2013.02.045 [ ] .",
    "j.  p.  lee and a.  j.  cerfon ,  ecom : a fast and accurate solver for toroidal axisymmetric mhd equilibria \" , _ computer physics communications _ * 190 * ( 2015 ) , pp",
    ". 72 - 88 http://dx.doi.org/10.1016/j.cpc.2015.01.015 [ ] .",
    "j.  helsing , r.  ojala , http://dx.doi.org/10.1016/j.jcp.2007.11.024[on the evaluation of layer potentials close to their sources ] , j. comput .",
    "227  ( 5 ) ( 2008 ) 28992921 . http://dx.doi.org/10.1016/j.jcp.2007.11.024 [ ] .",
    "a.  h.  barnett ,  evaluation of layer potentials close to the boundary for laplace and helmholtz problems on analytic planar domains \" , _ siam journal on scientific computing _ * 36 * ( 2 ) ( 2014 ) , a427a451 http://dx.doi.org/10.1137/120900253 [ ] .",
    "http://dx.doi.org/10.1137/120900253    a.  h.  barnett , b.  wu , and s.  veerapaneni ,  a fast direct solver for elliptic partial differential equations on adaptively refined meshes \" , _ siam journal on scientific computing _ * 37 * ( 4 ) ( 2015 ) , b519b542 .",
    "http://dx.doi.org/10.1137/140990826 [ ] .",
    "http://dx.doi.org/10.1137/140990826    f.  ethridge , l.  greengard , http://dx.doi.org/10.1137/s1064827500369967[a new fast - multipole accelerated poisson solver in two dimensions ] , siam j. sci .",
    "23  ( 3 ) ( 2001 ) 741760 .",
    "http://dx.doi.org/10.1137/s1064827500369967 [ ] .",
    "m.  h.  langston , l.  greengard , and d.  zorin ,  a free - space adaptive fmm - based pde solver in three dimensions \" , _ communications in applied mathematics and computational science _ , * 6 * ( 2011 ) , pp . 79 - 122 http://dx.doi.org/10.2140/camcos.2011.6.79 [ ] .",
    "l.  greengard , j - y .",
    "lee ,  a direct adaptive poisson solver of arbitrary order accuracy \" , _ journal of computational physics _ * 125 * ( 1996 ) , pp .",
    "415424 http://dx.doi.org/10.1006/jcph.1996.0103 [ ] .",
    "http://dx.doi.org/10.1006/jcph.1996.0103    a.  mckenney , l.  greengard , a.  mayo ,  a fast poisson solver for complex geometries \" , _ journal of computational physics _ * 118 * ( 1995 ) , pp .",
    "348355 http://dx.doi.org/10.1006/jcph.1995.1104 [ ] .",
    "a.  mayo ,  the fast solution of poisson s and the biharmonic equations on irregular regions \" , _ siam journal on numerical analysis _ * 21 * ( 2 ) ( 1984 ) , pp .",
    "285 - 299 http://dx.doi.org/10.1137/0721021 [ ] .",
    "a.  mayo and a.  greenbaum ,  fast parallel iterative solution of poisson s and the biharmonic equations on irregular regions \" , _ siam journal on scientific and statistical computing _ * 13 * ( 1 ) ( 1992 ) , pp .",
    "101 - 118 http://dx.doi.org/10.1137/0913006 [ ] .",
    "j.  carrier , l.  greengard , v.  rokhlin , http://dx.doi.org/10.1137/0909044[a fast adaptive multipole algorithm for particle simulations ] , siam j. sci .",
    "statist . comput . 9  ( 4 ) ( 1988 ) 669686 .",
    "d.  b.  stein , r.  d.  guy , b.  thomases , http://dx.doi.org/10.1137/s1064827597325141[immersed boundary smooth extension : a high - order method for solving pde on arbitrary smooth domains using fourier spectral methods ] , journal of computational physics * 304 * ( 2016 ) , pp .",
    "252274 ( 1999 ) 15511584 .",
    "http://dx.doi.org/10.1016/j.jcp.2015.10.023 [ ] .",
    "b.  k.  alpert , http://dx.doi.org/10.1137/s1064827597325141[hybrid gauss - trapezoidal quadrature rules ] , siam j. sci .",
    "20 ( 5 ) ( 1999 ) 15511584 . http://dx.doi.org/10.1137/s1064827597325141 [ ] .",
    "a.  klckner , a.  barnett , l.  greengard , m.  oneil , http://dx.doi.org/10.1016/j.jcp.2013.06.027[quadrature by expansion : a new method for the evaluation of layer potentials ] , j. comput .",
    "( 2013 ) 332349 .",
    "http://dx.doi.org/10.1016/j.jcp.2013.06.027 [ ] .",
    "t.  hrycak , v.  rokhlin , http://dx.doi.org/10.1137/s106482759630989x[an improved fast multipole algorithm for potential fields ] , siam j. sci . comput . 19  ( 6 ) ( 1998 ) 18041826 ( electronic ) .",
    "http://dx.doi.org/10.1137/s106482759630989x [ ] .",
    "l.  f.  ricketson , a.  j.  cerfon , m.  racch , and j.  p.  freidberg , http://www.sciencedirect.com/science/article/pii/s002199911500755x[accurate derivative evaluation for any grad - shafranov solver ] , journal of computational physics 305 , 744 ( 2016 ) ; http://dx.doi.org/10.1016/j.jcp.2015.11.015 [ ] . http://www.sciencedirect.com/science/article/pii/s002199911500755x"
  ],
  "abstract_text": [
    "<S> we present a fast , direct and adaptive poisson solver for complex two - dimensional geometries based on potential theory and fast multipole acceleration . </S>",
    "<S> more precisely , the solver relies on the standard decomposition of the solution as the sum of a volume integral to account for the source distribution and a layer potential to enforce the desired boundary condition . </S>",
    "<S> the volume integral is computed by applying the fmm on a square box that encloses the domain of interest . for the sake of efficiency and convergence acceleration , </S>",
    "<S> we first extend the source distribution ( the right - hand side in the poisson equation ) to the enclosing box as a @xmath0 function using a fast , boundary integral - based method . </S>",
    "<S> we demonstrate on multiply connected domains with irregular boundaries that this continuous extension leads to high accuracy without excessive adaptive refinement near the boundary and , as a result , to an extremely efficient  black box \" fast solver .    </S>",
    "<S> poisson equation , fast multipole method , quadrature by expansion , integral equations </S>"
  ]
}
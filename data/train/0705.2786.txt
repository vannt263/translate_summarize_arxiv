{
  "article_text": [
    "recently , a vigorous interest in various virtualization techniques has been observed . rather than being only a buzzword ,",
    "virtualization became since 2005 a main direction in the evolution of the whole it market .",
    "according to recent predictions by the gartner group , operating system virtualization and i / o virtualization will become mainstream by 2010 @xcite .",
    "traditionally , the leadership in providing virtualization based solutions belonged to ibm , beginning with the vm/370 operating system for system/370 mainframes introduced in 1972 @xcite . with the advent of relatively cheap microprocessor based computers within the next decade , the it industry shifted their interests to personal computing , based on individual hardware computers rather than some virtual machines .",
    "but at the beginning of the 21st century , most personal workstations and low - end servers became powerful enough to carry multiple operating systems running concurrently on the same hardware , which rised the interests in virtualization once again , this time on the commodity x86 platform .",
    "moreover , it turned out from experience that setting up an extensive it infrastructure with a lot of dedicated hardware put together with the appropriate , also dedicated software , is highly inefficient and also very expensive in management .",
    "virtualization , leading generally to decoupling of software from the underlying hardware , seems to have the potential for substantial improvements in such situations .",
    "in the meantime , virtualization software and virtualized systems became already a target of new security threats , with possibly disastrous consequences .",
    "in contrary to the widespread belief that , e.g. , virtual machines should be way more secure than their physical equivalents , virtualized computer systems may be sometimes _ less _ secure and even _ create _ new security challenges .    in the present contribution",
    "we discuss the benefits as well as the risks and problems of employing virtualization based it solutions .",
    "the discussion is undoubtedly biased due to the authors experiences with virtualization , first on various ibm mainframes many years ago and more recently also on the x86 platform , where many problems appeared as _",
    "dj vu_. as already emphasized in the title , virtualization is like a double - edged sword : a powerful weapon , but also quite dangerous for the warrior .",
    "when browsing through the literature , one could find several definitions for virtualization , depending on the particular subject and its context .",
    "generally , virtualization creates new entities in a computer system which are _ substitutes _ for the real ones , with the same functionality , interfaces and behavior , except the timings which are usually different .",
    "the virtual resources , created through such a substitution process , have to be eventually mapped to appropriate real resources , possibly going through more than one level of indirection , if necessary .    the first and also the most important concept of a virtual entity in computer systems was virtual memory , introduced and developed around 1956 by fritz - rudolf gntsch @xcite to unify various kinds of memory devices within an experimental computer system built at tu berlin .",
    "a couple of years later the first commercial computer with memory virtualization onboard was already built : the famous atlas computer @xcite developed at the university of manchester with collaboration of ferranti / icl .",
    "although influential , the atlas computer was known not to be working well in practical environments , mostly due to limited performance of the hardware available at this time .",
    "a more systematic approach to virtualization has been taken by ibm engineers working on the system/360 , the first computer family `` architected '' according to common , precisely defined principles of operation .",
    "in order to develop an interactive , multi - user system based on the already existing s/360 operating systems , facilitate time - sharing and at the same time also protect the users from each other , they decided to provide each user with a dedicated `` pseudo - machine '' , a fake system/360 computer capable to run any other s/360 operating system .",
    "the term `` pseudo - machine '' has been renamed soon to `` virtual machine '' , when it turned out that the latter term has been already used earlier at ibm research for an m44/44x experimental system , aimed at providing partially virtualized `` 7044-like '' virtual machines on a modified ibm 7044 36-bit mainframe @xcite .",
    "the intended full hardware virtualization per time - sharing user was quite demanding and needed an appropriate support from the hardware itself to run with acceptable performance .",
    "such hardware support appeared in only one system/360 computer : the famous system/360 model 67 .",
    "regular hardware support for virtualization became reality a couple of years later , within the system/370 family and not without exercising some pressure from the `` vm community '' inside and outside ibm @xcite .",
    "the first officially released version of vm/370 was able to provide an exact functional copy of the underlying system/370 hardware , according to the virtual machine configuration defined in the system directory .",
    "a particular user could even run another copy of vm/370 on the virtual hardware , e.g. , to test a new version of system software without disrupting the running system .",
    "the architecture of a `` classical '' vm/370 system , nowadays known rather as _ hypervisor type i architecture _ according to a widely accepted classification , introduced by robert p. goldberg in his phd thesis @xcite , is sketched in fig.[vm370 ] below .",
    "the vm/370 hypervisor , or control program ( cp ) in the original ibm terminology , represents here the software layer implementing the virtual machines , each having exactly the same instruction set architecture ( isa ) as the underlying system/370 hardware .",
    "this approach enabled a peaceful coexistence of several operating systems with different needs and applications , running in parallel on the same hardware machine . in the example presented in fig.[vm370 ] , one virtual machine runs cms , a simple operating system intended for individual usage , side - by - side with the mammoth - size mvs , a general purpose multitasking and multiuser operating system and even a second - level vm/370 , running concurrently with its own virtual machines . a direct communication with the hypervisor was possible , and sometimes also necessary , through the built - in cp command interface set up for each virtual machine according to the assigned priviledge level .",
    "the seemingly perfectly isolated virtual machines , running under the vm/370 hypervisor with carefully assigned priviledges , proved in practice to be totally insecure for intended intrusions , enabling even a total system penetration from a running vm , with direct access to the real hardware and in the real supervisor state @xcite .",
    "virtual computer systems could be also created via emulation , where appropriate software imitates another computer system or its part , e.g. cpu . in principle , any operating environment could be emulated within another operating environment , including exact copy of the hardware used by the operating system executing the emulator software itself .",
    "emulators were originally intended to permit the execution of programs written for another computer @xcite , i.e. for another isa than employed on the host computer system , but there is certainly nothing wrong with emulation of the same isa and the related i / o hardware , giving effectively another kind of hypervisor : the so called _ type ii hypervisor _ @xcite .",
    "emulators and type ii hypervisors may run as ordinary applications within the host computer operating system , being totally decoupled from the real hardware .",
    "although it may be desirable e.g. for debugging purposes , it means usually a very slow execution within the virtual machine .",
    "a considerable speedup could be provided by the help of real hardware , made available in parallel to the operating system services , usually through a specialized `` hybrid virtualization '' host operating system driver , see the sketch in fig.[hv - t2 ] .",
    "yet another approach to virtualization , a so called _ container - based virtualization _",
    ", is based on the mechanisms employed by contemporary operating systems to establish a stardard execution environment for processes : the `` process virtual machine '' . augmented with mechanisms for hiding and/or rewriting system - level data , the operating system kernel itself could be used as a kind of `` hypervisor '' to confine the processes within well - separated `` execution containers '' . as",
    "shown in fig.[cvm ] , the virtualized system contains in this case a fully priviledged `` host vm '' used mainly for system management and several `` guest vms '' , which are seemingly equivalent to separate hosts .",
    "the main advantage of container - based virtualization is high performance and scalability with only a minimal overhead introduced through the virtualization .",
    "many contemporary operating systems offer this possibility as a built - in or addon feature , e.g. , zones / brandz in solaris , secure resource partitions in hp - ux or vserver and openvz / virtuozzo for linux .",
    "the constantly increasing performance of x86-based computers within the last decade rised also the interest in virtualization on this platform .",
    "the intel pentium `` classical '' ia-32 architecture has beed designed rather to remain compatible with previous intel processors than being virtualizable , with exception of the `` virtual 86 '' sub - mode intended for running `` multiple virtual dos machines '' in protected mode . therefore , it is quite challenging to implement virtualization software on this platform ( cf . @xcite and references therein ) .    due to the recent high demand for virtualization ,",
    "the newest intel and amd processors include a series of architectural extensions providing hardware support for full virtualization , which simplifies also considerably the implementation of x86-based `` true '' hypervisors ( cf.@xcite ) .",
    "the most hardware independent way of virtualization is pure emulation , where no instructions are being passed directly to the host hardware .",
    "several emulators exists for the x86 platform , the most advanced : bochs @xcite and qemu @xcite are available for many host platforms , including x86 itself .",
    "qemu enhanced with kqemu module ( a hv driver ) works efectively as a type ii hypervisor with almost native speed .",
    "the kernel - based virtual machine , available with recent linux kernels , provides full virtualization support with qemu user - level frontend @xcite .",
    "vmware inc .",
    "@xcite , a pioneer of virtualization on the x86 platform , offers since 1999 a whole line of proprietary x86 virtualization software .",
    "the lowest - level products for workstations ( vmware player ) and servers ( vmware server , earlier known as gsx server ) are available as freeware for ms windows and also linux .",
    "similar virtualization products are offered also by microsoft : virtual pc and virtual server , which became also freely available last year as direct competitors to vmware products on the ms windows platform .",
    "the xen hypervisor , developed initially as research project at the university of cambridge @xcite , seems to be the most promising and dynamically evolving open - source virtualization software .",
    "working generally as a type i hypervisor , xen provides _ paravirtualized _",
    "hardware for its virtual machines when full virtualization is not possible , e.g. when working on a pentium host .",
    "paravirtualization enables a cooperation between the guest operating system and the hypervisor to circumvent virtualization problems and increase performance .",
    "the operating systems intended for the paravirtualized xen virtual machines have to be ported to the xen architecture , which may become problematic in case of proprietary operating systems . on the other hand , paravirtualized operating systems could perform even better than their native versions running directly on the host hardware , because the hypervisor may e.g. warrant apropriate resource allocations @xcite .",
    "virtual machines established under the xen 3 hypervisor may be `` live migrated '' to another xen 3 host computer , with only a very short application - level downtime around 100 - 300 ms in a local network with available network storage @xcite .",
    "it has been demonstrated recently , that a long - haul live migration is fairly possible even at a planetary level , with downtimes rising only to 1 - 2 seconds for the distance between amsterdam and san diego @xcite .",
    "virtualization technologies can be used for many purposes . in the mainframe era",
    "the virtualized resources were localized on a single host computer and accesible only to a relatively small number of users .",
    "today , the possibility of migration of virtual machines from host to host , even in a `` live '' state , makes a tremendous difference .",
    "a virtual machine could be instantly created on some host , then moved elsewhere , e.g. , when the host becomes overloaded , or completely destroyed if not needed . with a proper configuration , virtualized environments exhibit a sound level of isolation from each other , hence a crash occuring in one environment should remain unnoticed outside , which is a desired property for testbeds and security systems .",
    "virtual hardware may easily replace real hardware consuming precious datacenter resouces like floor space , electricity or manpower .",
    "this is especially important for sites running older equipment , which may be not easy to maintain , and at some point become even impossible to run , e.g. , due to the lack of appropriate spare parts on the market .",
    "virtualization is often used for server consolidation , i.e. a reduction of the total number of servers or even separate datacenters to a required minimum . at the same time , software which became incompatible with the new hardware and/or its configuration could be deployed within specialized virtual machines when needed , e.g. , for archival purposes . the possibility to migrate `` live machines '' across networks gives additional flexibility in load balancing and disaster recovery , enabling seamless movement of workloads between distant datacenters practically without downtimes .",
    "many virtualization systems , particularily emulators , were invented for testing and debugging purposes , especially in the operating system kernel development , where the experimental system have to be rebooted again and again .",
    "also , getting some data for debugging may be not easy on a real hardware , requiring sometimes arcane equipment . on emulated hardware ,",
    "the same task could be a trivial recording to some log file . with appropriate builtin hooks",
    ", any virtualization environment may serve as a powerful debugger , with possibility of a `` time travel '' , i.e. arbitrary navigation in the execution history @xcite .",
    "virtual hardware is a very attractive possibility to have handy in any educational computer laboratory , because the students may experiment with various operating systems and network setups , without fighting with problems related to running a multiplatform laboratory based on real hardware @xcite . for e - learning purposes",
    ", such a `` virtual laboratory '' could be made accesible remotely , e.g. from a standard web browser @xcite .",
    "the isolation of applications running within a standard operating system is usually based only of the process abstraction , with many facilities available for data sharing , also in a system - wide manner .",
    "virtual machine technology may be therefore used to additionally isolate sensitive environments and minimize the risk of compromising the entire system due to problems in one of the environments .",
    "network services are usually regarded as particularily sensitive to security problems , related to the direct contact with the possible hostile network surrounding .",
    "therefore , a separate network frontend virtual machine could be added to a virtualized system to handle the network connections and redirect them appropriately . with intelligent network hardware dedicated to this virtual machine and a minimal hardened operating system with integrated firewall , e.g. openbsd with pf",
    ", the overhead should be negigible @xcite .",
    "much more demanding would be a virtual secure file server , established to enforce a directory and file access control policy , even if the main system become compromised @xcite .",
    "it has been recently demonstrated that a more elaborated configuration , with several dedicated virtual machines and checkpointing , allows for an almost instant , automatical recovery after intrusion detection @xcite .",
    "even in the mainframe era virtual machines were considered not secure enough for hosting sensitive data , mainly due to the i / o handling in vm/370 @xcite .",
    "it turned out that a `` hardening '' by closing known security holes does not guarantee the absence of other security flaws in the hardened system , therefore a `` security retrofit program '' has been started to design a formally verified `` security kernel '' for vm/370 @xcite .",
    "there is no doubt that many hypervisors proliferating nowadays on the x86 platform need much more than only closing the detected security holes on the fly . without similar , specific `` security retrofit '' programs it would be pretty hard to avoid security problems .",
    "as shown in a very recent study by tavis ormandy @xcite , the present state of security exposure from implementation flaws in popular virtualization software is quite alarming .",
    "with exception of xen , all tested packages contained exploitable security flaws , allowing a potential attacker to escape reliably from the confining virtual machine .",
    "the mobility of virtual machines , which could be easily migrated along multiple domains , adds its own vulnerabilities .",
    "e.g. , a virtual machine may be moved into a faked recipient host ( `` kidnapped '' ) or compromised while stored semewhere in transit .",
    "the ease of manipulations involving virtual machines , which may be created on the fly , possibly immitating another virtual / physical machine , then ( mis)used for some purpose , and subsequently destroyed or moved away could be also a source of many security problems , unknown when working on dedicated hardware computers .",
    "static security arrangements are rather useless in this context .    as demonstrated recently @xcite , it is perfectly possible to hide malware in a virtual machine running in parallel or force the host operating system into a virtual machine , keeping the malware running outside .",
    "with latest hardware enhancements for virtualization , it is also possible to do that on the fly , without disrupting the running operating system @xcite .",
    "when properly prepared and properly done , virtualization offers many benefits in comparison with equivalent , contemporary available hardware based solutions . in the next few years virtualization will become a standard way of computing in the enterprise , academia and personal use of computers due to substantial savings and enormous flexibility",
    ".    the installation of operating systems and applications will quickly become obsolete due to the possibility of preparation and distribution of virtual appliances , tailored to the needs and ready to run on any computer with the right hypervisor onboard .    when using virtualization for security , a security enhanced implementation with multilevel security @xcite would be definitely recommended . a secure hypervisor architecture",
    ", shype developed at ibm @xcite , targeted at the common criteria eal4 assurance level , is now a part of the xen open - source hypervisor @xcite .",
    "there are plans @xcite for further elevation of the xen assurance level at eal5 and then eal6 .",
    "a prototype system for enforcing mandatory access control policies across a distributed set of virtual machines has been also tested recently with the xen hypervisor @xcite .",
    "therefore xen seems to be now the most advanced hypervisor with a proven track record and clear evolution path in virtualization security .",
    "last but not least , virtual machines are in principle nothing more than big fat programs with a complex inner life , executed on a usually thin hypervisor layer , which in turn is in principle nothing more than a specialized operating system . looking from this perspective , there is no doubt , that virtualization software have to be always kept up - to - date and possibly equipped with a proper security add - on , exactly like ordinary operating systems .",
    "and the virtual appliances / machines have to be treated like ordinary executables , which are potentially corrupted , infected or malicious .    99 , 8 november 2006 .",
    ": 483490 , 1981 .",
    ", san francisco ca , 2226 april 2007 . : 216219 , 1996 . in : _",
    "the first computers : history and architectures .",
    "_ , edited by r. rojas and u. hashagen , mit press , 2000 .",
    "( isbn 0 - 262 - 18197 - 5 ) : 99130 , 1972 .",
    "share 89 , august 1997 .",
    "division of engineering and applied physics , harvard univ .",
    ", cambridge mass . , 1972 .",
    "( phd thesis ) : 102116 , 1976 . : 287297 , 1972 . in : _",
    "proc . of the ninth usenix security symposium _ , denver co , aug .",
    "14 - 17 , 2000 .",
    "( 5):213 , 2006 .",
    "( 3 ) 2006 .",
    "( whole issue ) amd 2005 .",
    "qumranet 2006 . in : _ proc . of the acm symposium on operating system principles _ , 2003 .",
    "( 2):811 , 2006 . in : _",
    "2nd symp . on networked system design and implementation _ ,",
    ": 901907 , 2006 . in : _ proc . of the 2005 annual usenix technical conference",
    "_ , april 2005 .",
    "( 1):102106 , 2006 . in : _ proc . of the workshop on free and open source learning environments and tools foslet06 _ , lugano ch , 2006 .",
    "( 6):2734 , 2005 . in : _ proc . of the 3rd ieee int .",
    "security in storage workshop _ , pp.2128 , 2005 .",
    "in : _ proc . of the iasted int . conf . on communication , network and information security _ , pp.170181 , nov .",
    "2005 . in : _",
    "acm proc . of the 1977 annual conference _ , pp.411418 , 1977 . in : _",
    "cansecwest 2007 _ , vancouver bc , apr .",
    "18 - 20 , 2007 . in : _ proc . of the 2006 ieee symposium on security and privacy",
    "_ , pp.314 - 327 , may 2006 . in : _ proc . of the 21st annual computer security applications conference _",
    ", tucson az , pp.267275 , dec . 5 - 9 ,",
    "rc23511 , 2005 . in : _ proc . of the 21st annual computer security applications conference _ , tucson az , pp.276285 , dec .",
    "5 - 9 , 2005 . , miami beach fl , dec .",
    "11 - 15 , works in progress session , wip06 - 06 , 2006 . in : _ proc . of the 22st annual computer security applications conference _ , miami beach fl , pp.2332 , dec .",
    "11 - 15 , 2006 ."
  ],
  "abstract_text": [
    "<S> virtualization became recently a hot topic once again , after being dormant for more than twenty years . </S>",
    "<S> in the meantime , it has been almost forgotten , that virtual machines are not so perfect isolating environments as it seems , when looking at the principles . </S>",
    "<S> these lessons were already learnt earlier when the first virtualized systems have been exposed to real life usage . </S>",
    "<S> contemporary virtualization software enables instant creation and destruction of virtual machines on a host , live migration from one host to another , execution history manipulation , etc . </S>",
    "<S> these features are very useful in practice , but also causing headaches among security specialists , especially in current hostile network environments . in the present contribution </S>",
    "<S> we discuss the principles , potential benefits and risks of virtualization in a _ </S>",
    "<S> dj vu _ perspective , related to previous experiences with virtualization in the mainframe era . </S>"
  ]
}
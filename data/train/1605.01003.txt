{
  "article_text": [
    "our main aim in this paper is to introduce the mathematical concept of model - completeness into the study of mso , which is fundamental to computer science , and to connect it to temporal tree logic . in a slogan ,",
    "our main thesis is that monadic second order logic ` is ' the _ model companion _ of temporal logic .    while model - completeness , as many topics in computer science , has its origins in mathematical logic , since the early 2000 s this concept has become relevant for computer science .",
    "the most important application of model - completeness concerns automated reasoning in first - order logic , in particular , for combining first - order decision procedures in the case of non - disjoint signatures  @xcite .",
    "we plan further applications to conservativity of ontology extensions  @xcite .",
    "in this introductory section , we give some background and motivation for model companions and we then describe our main contributions in this paper . +",
    "* solving equations and model companions . * finding solutions to equations is a challenge at the heart of both mathematics and computer science .",
    "model - theoretic algebra , originating with the ground - breaking work of @xcite , cast this problem of solving equations in a logical form , and used this setting to solve algebraic problems via model theory .",
    "the central notion is that of an _ existentially closed model _ , which we explain now .",
    "call a quantifier - free formula with parameters in a model @xmath1 _ solvable _ if there is an extension @xmath2 of @xmath1 where the formula is satisfied . a model",
    "@xmath1 is _ existentially closed _ if any solvable quantifier - free formula already has a solution in @xmath1 itself .",
    "for example , the field of real numbers is not existentially closed , but the field of complex numbers is .",
    "although this definition is formally clear , it has a main drawback : it is not first - order definable in general . however , in fortunate and important cases , the class of existentially closed models of @xmath3 are exactly the models of another first - order theory @xmath4 . in this case , the theory @xmath4 can be characterized abstractly as the _ model companion _ of @xmath3 ( cf . definition  [ d : modelcompanion ] ) .",
    "thus , the model companion of a theory identifies the class of those models where _ all satisfiable existential statements can be satisfied_. for example , the theory of algebraically closed fields is the model companion of the theory of fields , and dense linear orders without endpoints give the model companion of linear orders . + * logic and algebra . *",
    "the well - known lindenbaum - tarski construction shows that classical propositional logic corresponds to the class of boolean algebras . in the same way ,",
    "intuitionistic logic corresponds to heyting algebras , and many modal and temporal logics correspond to classes of boolean algebras enriched with operators , cf .",
    ", e.g. , @xcite . in this context",
    ", an existentially closed algebra corresponds to a propositional theory where ` all solvable logic equations actually have a solution ' . but",
    "do model companions exist in algebraic logic ? + * model companions in algebraic logic .",
    "* boolean algebras have a model companion : the theory of atomless boolean algebras .",
    "the first results on model companions in modal logic were negative : the class of existentially closed modal algebras for the basic modal logic @xmath5 is not elementary  @xcite .",
    "this initially discouraged further investigations in this direction , until the surprising result  @xcite that second order intuitionistic propositional calculus can be interpreted in ordinary propositional intuitionistic calculus . as pointed out in  @xcite",
    ", this result precisely says that the theory of heyting algebras has a model companion .",
    "we refer to the book  @xcite for a more complete picture of the subsequent literature on model companions for modal and intuitionistic logics .",
    "one way to interpret the already cited result that @xmath5 does not have a model companion is that the basic modal language is too poor . in order to obtain a first - order setting where ` all solvable equations can be solved ' , we need to enrich the language ; to this end , we will add certain _ fixpoints _ to the modal language . + * infinite words and ltl . * as a first step , in our forthcoming paper @xcite , we showed that a class of rooted algebras corresponding to linear temporal logic @xmath6  @xcite has a model companion .",
    "moreover , this model companion is the theory axiomatized by the sentences which are true in the special @xmath6-algebra given by the power set of the natural numbers . in more intuitive terms",
    ", @xmath6 has a model companion , and ` it is monadic second order logic ' , viewed here as the first - order theory of a powerset boolean algebra with operators .",
    "an important ingredient for the proof of this result is the fact @xcite that the bchi acceptance condition for automata on infinite words can be converted into an existential formula in linear temporal logic . +",
    "* main contributions of this paper : infinite trees and fair ctl . * in this paper , we exhibit model companions for the much more challenging ` branching time ' case .",
    "the most obvious candidate replacement for @xmath6 is computational tree logic @xmath7  @xcite .",
    "this logic , however , turns out not to be sufficiently expressive .",
    "the * first contribution * of this paper is therefore the design of an extension of @xmath7 ( cf .",
    "section  [ s : fairctl ] ) .",
    "the choice for this extension , that we call ` fair ctl ' , is dictated by the fact that we want a logic such that bisimulation - invariant mso is its model companion .",
    "for this purpose we need a temporal logic that can express , in a quantifier - free way , the concept of `` successful run '' of a tree automaton .",
    "the logic fair ctl seems a ` minimal ' extension of ctl which is sufficient for this purpose .",
    "the main change in moving from @xmath7 to fair @xmath7 is that we replace the unary @xmath7 operator @xmath8 by a binary operator . a formula @xmath9 , when interpreted in an infinite tree , will mean ` there exists a @xmath10-fair branch ( i.e. an infinite path on which @xmath10 is true infinitely often ) where @xmath11 always holds . ''",
    "is not the same as ` @xmath7 with fairness constraints ' ( called @xmath12 in  @xcite ) , because in the latter fairness constraints are fixed once and for all as global external constraints , and do not recursively change inside a formula . ]",
    "this operator can be characterized as a greatest post - fixpoint of a @xmath7-formula using the ` until ' connective @xmath13 .",
    "the natural candidate axiomatization for fair @xmath7 therefore consists of suitable fixpoint axioms and rules for these operations . in section  [ s : completeness ]",
    "we prove ( theorem  [ t : completeness ] ) that this candidate axiomatization is in fact complete with respect to the intended models .",
    "this result is obtained via a non - trivial tableaux procedure , adapting ideas already introduced to give a partial proof of completeness for the modal @xmath0-calculus in  @xcite , combined with some basic notions and techniques from modal logic and stone duality .    using this result , as our * second contribution * we prove ( theorem  [ t : main1 ] ) that the class of algebras corresponding to the logic fair @xmath7 has a model companion .",
    "moreover , this model companion can be axiomatized using the conversion of monadic second order logic into the modal @xmath0-calculus and back to bisimulation invariant monadic second order logic @xcite .",
    "as in the case of linear temporal logic sketched above , a main ingredient is that the acceptance condition of the appropriate class of automata ( in this case , @xmath0-automata ) is expressible as an existential formula , using the new operators in fair @xmath7 .    for our * third contribution * , we consider _ binary _ fair @xmath7 , i.e. , the logic obtained from fair @xmath7 by adding two deterministic modalities and an axiom saying that the ` next ' operator @xmath14 is the union of these two .",
    "we prove ( theorem  [ t : main2 ] ) that the model companion for the class of binary fair @xmath7-algebras ` is ' the monadic second order logic s2s ; more precisely , it is the first - order theory of the powerset boolean algebra of the full infinite binary tree . +",
    "* paper outline . *",
    "the paper is organized as follows : in section  [ s : fairctl ] , we introduce fair @xmath7 , its syntax , its semantics and some variants . section  [ s : completeness ] proves completeness theorems by means of suitable tableau constructions , relying on definable contextual connectives . in section  [ s : modelcompanions ] , we show our results about existence of model companions and their relationships with monadic second order logic . section  [ s : conclusions ] concludes . for space reasons , most proofs",
    "are omitted ; details can be found in the appendix to this paper .",
    "in this section , we introduce the logic ` fair ctl ' , @xmath15 for short , which is a variant of the computation tree logic ctl with fairness constraints built in .     * the logic @xmath15 *     we introduce syntax ( def .  [",
    "d : syntax ] ) , semantics ( def .",
    "[ d : semantics ] ) , and an axiomatization ( def .",
    "[ d : ctlf ] ) for the temporal logic @xmath15 .",
    "( syntax of @xmath15 . )",
    "[ d : syntax ] the _ basic operation symbols of @xmath15 _ are @xmath16-ary symbol @xmath17 , unary symbols @xmath18 and @xmath14 , and binary symbols @xmath19 , @xmath13 and @xmath8 .",
    "we define the following _ derived operations _ :    * @xmath20 , * @xmath21 , * @xmath22 , and * @xmath23 .",
    "let @xmath24 be a finite set of propositional variables . by a _",
    "@xmath15-formula with variables in @xmath25 _ we mean a term built up inductively by applying operation symbols of @xmath15 to propositional variables @xmath26 .",
    "we denote by @xmath27 the set of @xmath15-formulas with variables in @xmath25 .",
    "@xmath15-formulas can be interpreted in _ transition systems _ , as follows .",
    "( semantics of @xmath15 . )",
    "[ d : semantics ] a _ transition system _ is a pair @xmath28 , where @xmath29 is a set and @xmath30 is a binary relation on @xmath29",
    "@xmath30-path _ is a ( finite or infinite ) sequence of nodes @xmath31 such that @xmath32 for all @xmath33 .",
    "whenever @xmath30 is clear from the context , we omit it and refer to the transition system as @xmath29 , and to @xmath30-paths as paths . for @xmath25 a set of variables ,",
    "a _ @xmath25-colouring _ of a transition system @xmath29 is a function @xmath34 .",
    "let @xmath35 be a @xmath25-coloured transition system . the _ forcing relation _ , @xmath36 , between nodes @xmath37 and formulas @xmath38 is inductively defined as follows :    * @xmath39 , * @xmath40 iff @xmath41 , * @xmath42 iff @xmath43 , * @xmath44 iff @xmath45 or @xmath46 , * @xmath47 iff there exists @xmath48 such that @xmath49 and @xmath50 , * @xmath51 iff there exist @xmath52 and an @xmath30-path @xmath53 such that @xmath54 for all @xmath55 and @xmath56 . *",
    "@xmath57 iff there exists an infinite @xmath30-path @xmath58 such that @xmath59 for all @xmath60 and there exist infinitely many @xmath60 with @xmath54 .    for the derived operations , @xmath61 , @xmath62 and @xmath63 , we have ,    * @xmath64 iff for all @xmath48 such that @xmath49 , @xmath50 , * @xmath65 iff for all @xmath52 and all @xmath30-paths @xmath53 , either @xmath54 for some @xmath55 , or @xmath56",
    "iff for all infinite @xmath30-paths @xmath58 such that there exist infinitely many @xmath60 with @xmath67 , there exists @xmath60 such that @xmath59 .",
    "we henceforth assume that _ all transition systems are serial _ , i.e. , for every @xmath37 , there exists @xmath48 such that @xmath49 ; equivalently , @xmath68 is forced in all nodes .    in order to axiomatize our logic",
    ", we now introduce the quasi - equational theory @xmath15 .",
    "[ d : ctlf ] the _ quasi - equational theory @xmath15 _ is axiomatized by the following finite set of quasi - equations ' abbreviates ` @xmath69 ' . ] :    1 .",
    "boolean algebra axioms for @xmath70 , 2 .",
    "( axioms @xmath5 ) @xmath71 ,  @xmath72 , 3 .",
    "( axiom @xmath73 ) @xmath74 , 4 .",
    "( fixpoint axioms ) @xmath75 @xmath76 \\quad \\to \\quad [ { \\mathrm{eu}}(a , b ) \\leq c ] \\tag{${\\mathrm{eu}}_{\\mathrm{min}}$ } , \\label{eumin}\\\\ & { \\mathrm{eg}}(a , b ) \\leq a \\wedge { { \\diamond}}{\\mathrm{eu}}(b \\wedge { \\mathrm{eg}}(a , b),a ) \\tag{${\\mathrm{eg}}_{\\mathrm{fix}}$ } , \\label{egfix } \\\\ & [ c \\leq a \\wedge { { \\diamond}}{\\mathrm{eu}}(b \\wedge c , a ) ] \\quad \\to \\quad [ c \\leq { \\mathrm{eg}}(a , b ) ] \\tag{${\\mathrm{eg}}_{\\mathrm{max}}$}. \\label{egmax}\\end{aligned}\\ ] ]    the models of the quasi - equational theory @xmath15 will be called @xmath15-algebras ; we explicitly record the definition here .    [",
    "d : ctlfalgebra ] a _",
    "@xmath15-algebra _ is a tuple @xmath77 such that    1 .",
    "the reduct @xmath78 is a boolean algebra ; 2 .",
    "@xmath79 is a unary operation that preserves finite joins , including the empty join , @xmath17 ; 3 .",
    "@xmath74 ; 4 .",
    "@xmath13 and @xmath8 are binary operations on @xmath80 such that , for any @xmath81 , * @xmath82 is the least pre - fixpoint of the function @xmath83 , and * @xmath84 is the greatest post - fixpoint of the function @xmath85 .",
    "this quasi - equational theory @xmath15 and its associated class of @xmath15-algebras can be used to define a modal logic , in the following standard way .",
    "let @xmath24 be a finite set of propositional variables .",
    "a _ valuation _ of @xmath25 in a @xmath15-algebra @xmath86 is a function @xmath87 . for any @xmath15-formula @xmath88 and valuation @xmath89 in a @xmath15-algebra @xmath86 , we write @xmath90 for the _ interpretation _ of @xmath11 in the @xmath15-algebra @xmath86 under the valuation @xmath89 .",
    "an equation @xmath91 of @xmath15-formulas is called _ valid _ if , and only if , it interprets to a true statement under any valuation of the propositional variables @xmath25 in any @xmath15-algebra .",
    "two @xmath15-formulas are _ equivalent _ if the equation @xmath92 is valid . a @xmath15-formula @xmath11 is called a _ tautology _ if @xmath93 is a valid equation , and @xmath94 if @xmath95 is not a valid equation ; a @xmath15-formula @xmath11 is said to _ entail _ a formula @xmath10 ( written @xmath96 or @xmath97 ) iff the formula @xmath98 is a tautology .",
    "notice that , for the derived operations @xmath62 and @xmath63 ( def .",
    "[ d : syntax ] ) , we have    * @xmath99 , * @xmath100 ,    i.e. , the following fixpoint rules hold for @xmath62 and @xmath63 : @xmath101 \\quad \\to \\quad [ c \\leq { \\mathrm{ar}}(a , b ) ] \\tag{${\\mathrm{ar}}_{\\mathrm{max}}$ } \\label{armax } \\\\ & a \\vee \\box { \\mathrm{ar}}(b \\vee { \\mathrm{af}}(a , b),a ) \\leq { \\mathrm{af}}(a , b ) \\tag{${\\mathrm{af}}_{\\mathrm{fix}}$ } \\label{affix } \\\\ & [ a \\vee \\box { \\mathrm{ar}}(b \\vee c , a ) \\leq c ] \\quad \\to \\quad [ { \\mathrm{af}}(a , b ) \\leq c ] .",
    "\\tag{${\\mathrm{af}}_{\\mathrm{min}}$ } \\label{afmin}\\end{aligned}\\ ] ]    a _ modal algebra _ is a tuple @xmath102 for which ( i ) and",
    "( ii ) in definition  [ d : ctlfalgebra ] hold .",
    "the requirement in definition  [ d : ctlfalgebra](iii ) that @xmath74 says that @xmath86 is in fact an algebra for the modal logic @xmath103 .",
    "the operations @xmath13 and @xmath8 of a @xmath15-algebra @xmath86 are uniquely determined by its modal algebra reduct . however , the operations @xmath13 and @xmath8 do not exist in every modal algebra .     * semantics via @xmath15-algebras *     the following example and proposition connect the semantics of @xmath15 introduced in def .  [",
    "d : semantics ] with the definition of @xmath15-algebras in def .",
    "[ d : ctlfalgebra ] .",
    "the _ complex algebra _ of a transition system @xmath28 is the tuple @xmath104 where @xmath105 is the boolean power set algebra of the set @xmath29 , @xmath106 = \\{s \\in s \\ | \\ \\text { there exists } t \\in a \\text { such that } s{r}t\\},\\ ] ] and @xmath107 and @xmath108 are the unique binary operations making @xmath109 into a @xmath15-algebra .",
    "( indeed , such operations exist because @xmath110 is a complete lattice . )",
    "notice that @xmath25-colourings @xmath34 correspond bijectively to valuations @xmath111 : given @xmath112 , we define @xmath113 for each @xmath114 in @xmath25 , and conversely , given @xmath89 , we define @xmath115 .    [",
    "p : compalg ] let @xmath35 be a @xmath25-coloured transition system .",
    "for any @xmath27-formula @xmath11 and @xmath37 , we have @xmath116     * adding roots and binary determinism *     for later use , we define two expansions of the system @xmath15 , @xmath117 and @xmath118 . for @xmath117 ,",
    "we add one basic constant , @xmath119 , whose intended interpretation is to be true in exactly one ` root ' node in the transition system . for @xmath118 , we add two additional basic operations , @xmath120 and @xmath121 , whose intended interpretations are a deterministic ` step left ' and ` step right ' in the transition system .",
    "( syntax of @xmath117 and @xmath118.)[d : syntax2 ] let @xmath25 be a set of proposition letters .",
    "we define the set @xmath122 of _ rooted @xmath15-formulas _ by adding one basic nullary operation @xmath119 to @xmath15 .",
    "we define the set @xmath123 of _ rooted binary @xmath15-formulas _ by adding two basic unary operations , @xmath120 and @xmath121 , to @xmath122 .",
    "( semantics of @xmath117 and @xmath118.)[d : semantics2 ] a node @xmath124 in a transition system @xmath28 is called a _ root _ if for every @xmath37 there is a path from @xmath124 to @xmath125 , and there is no path ending in @xmath124 except for the trivial path consisting of only @xmath124 .",
    "a transition system is called _ rooted _ if it has a ( necessarily unique ) root .    if @xmath28 is a transition system with root @xmath124 , we extend the definition of the forcing relation of @xmath27 ( def .  [",
    "d : semantics ] ) to @xmath122 by defining the additional base case    * @xmath126 iff @xmath127 .    a _ binary transition system",
    "_ is a tuple @xmath128 such that @xmath28 is a transition system , and @xmath129 are unary functions such that @xmath130 .",
    "if @xmath128 is a rooted binary transition system , we extend the definition of the forcing relation of @xmath122 to @xmath123 by defining , for @xmath131 ,    * @xmath132 iff @xmath133 .",
    "we now axiomatize the additional operations @xmath119 , @xmath120 and @xmath121 , as follows .",
    "[ d : ctlfp ] the _ universal theory _",
    "@xmath117 is obtained by adding to the theory @xmath15 ( def .",
    "[ d : ctlf ] ) the sentences    1 .",
    "( axioms for @xmath119 ) * @xmath134 , * @xmath135 , * @xmath136 \\to [ { \\mathrm{i}}\\leq { \\mathrm{eu}}(a,\\top)]$ ] .",
    "models of @xmath117 are called _",
    "rooted @xmath15-algebras _ ; concretely , these are pairs @xmath137 where @xmath86 is a @xmath15-algebra and @xmath138 satisfies the axioms in ( v ) .    the _ universal theory _",
    "@xmath118 is obtained by adding to the theory @xmath117 the sentences    1 .",
    "( axioms for @xmath139 ) * @xmath140 , + and , for @xmath131 : * @xmath141 , @xmath142 , * @xmath143 .",
    "models of @xmath118 are called _ binary rooted @xmath15-algebras _ ; concretely , these are tuples @xmath144 where @xmath145 is a rooted @xmath15-algebra and @xmath139 are unary operations on @xmath80 satisfying the axioms in ( vi ) .",
    "the _ complex algebra _ of a rooted transition system @xmath28 with root @xmath124 is obtained by expanding the complex algebra @xmath109 of the transition system with the constant @xmath146 .",
    "the _ complex algebra _ of a rooted binary transition system is obtained by further expanding this algebra with unary operations @xmath120 and @xmath121 defined , for @xmath131 and @xmath147 , by @xmath148 note that the analogue of proposition  [ p : compalg ] holds for @xmath117 and @xmath118 .    [ ex : binarytree ] let @xmath29 be the set of finite sequences of @xmath16 s and @xmath149 s ,",
    "i.e. , @xmath150 . for @xmath151 ,",
    "let @xmath152 , the sequence obtained by appending the symbol @xmath33 to the end , and let @xmath153 be the ` child ' relation .",
    "then @xmath128 is a rooted binary transition system , called the _ full binary tree _",
    ", with root the empty sequence @xmath154 .",
    "in this section we prove that our axiomatization of @xmath15 is _ complete _ with respect to tree - shaped transition systems .",
    "algebraically , this will mean that complex algebras of such transition systems generate the whole quasi - variety of @xmath15-algebras ; a result that will be used several times to establish our main results in section  [ s : modelcompanions ] . the key theorem in this section , thm .",
    "[ t : completeness ] below , shows that every consistent @xmath15-formula can be satisfied in a tree - shaped transition system .",
    "this result , and its variants for rooted and binary @xmath15-algebras , require a rather technical and laborious tableau construction .",
    "readers who are only interested in the bigger picture may skip details in this section ; the statements of theorems  [ t : completeness ] , [ t : rootedcompleteness ] and [ t : binarycompleteness ] are sufficient for continuing .",
    "we first recall the definition and fix notation for trees .",
    "a _ tree _ is a rooted transition system @xmath28 such that for every @xmath125 in @xmath29 , there is a _",
    "unique _ path from the root to @xmath125 .",
    "a tree naturally comes with a _ partial order _",
    "@xmath155 , which is defined as the reflexive transitive closure of @xmath30 , and has the property that @xmath156 iff @xmath157 lies on the unique path from the root to @xmath158 .    as with transition systems",
    ", we will often suppress the notation of the transition relation @xmath30 , and simply speak of a tree @xmath29 .",
    "we are mostly concerned with infinite trees , and we will always specify it explicitly if a tree is finite . as with transition systems ,",
    "if we only say ` tree ' , then the tree is assumed to be serial , hence infinite .",
    "we will prove the following theorem .",
    "[ t : completeness ] for every consistent @xmath15-formula @xmath159 , there exists a @xmath25-coloured tree with root @xmath124 such that @xmath160 .    in the rest of this section , we fix a consistent @xmath15-formula @xmath159 .",
    "since @xmath161 is consistent , we may also fix a @xmath15-algebra @xmath86 and an interpretation @xmath162 of proposition letters such that @xmath163 .",
    "we will use these data to construct a @xmath25-coloured tree @xmath29 , for which we will prove that @xmath161 holds in the root .",
    "[ c : phi ] since @xmath86 , @xmath25 and @xmath89 are fixed throughout the rest of this section , we will usually omit reference to them .",
    "in particular , if @xmath88 is a @xmath15-formula , then we will denote the interpretation of @xmath11 in @xmath86 under @xmath89 by @xmath11 as well , where we should actually write @xmath164 for that element .",
    "the proof of theorem  [ t : completeness ] will be structured as follows . in subsection",
    "[ ss : context ] , we introduce a crucial syntactic tool that we call _ contextual operations_. in subsection  [ ss : preliminaries ] , we then recall several other more standard preliminary notions that play a role in the proof : negation normal form , representation of modal algebras , fischer - ladner closure , and types .",
    "the heart of the construction of the @xmath25-coloured tree @xmath29 is in subsection  [ ss : model ] , where we inductively construct the tree as a union of partial tableaux .    in subsection  [ ss :",
    "compvariants ] , we will state the analogous completeness theorems for the variants @xmath117 and @xmath118 .",
    "the following syntactic definition is crucial to the completeness proof .",
    "the meaning of these operations will be clarified in the rest of this subsection .    [",
    "d : eucafc ] we introduce the following ternary operations @xmath165 ( ` contextual @xmath13 ' ) and @xmath166 ( ` contextual @xmath63 ' ) as abbreviations of term operations in @xmath15 :    * @xmath167 , * @xmath168 .    in proposition",
    "[ p : eucafcfixpoint ] , we will show that @xmath165 and @xmath166 can be characterized as least fixpoints of operators very similar to those for @xmath13 and @xmath63 ( cf .",
    "def  [ d : ctlf ] and further ) .",
    "the only difference is that , in the contextual versions of @xmath13 and @xmath63 , the proposition in the third coordinate is added conjunctively to the fixpoint variable .",
    "the third coordinate may therefore be thought of as a ` context ' , hence the name .",
    "this idea ( although not under this name ) originates with the partial completeness proof for the modal @xmath0-calculus in @xcite .",
    "the additional piece of information that we prove here is that the contextual versions of @xmath13 and @xmath63 are themselves still expressible in @xmath15 , which is of course only a fragment of the full modal @xmath0-calculus .",
    "[ p : eucafcfixpoint ] for any elements @xmath169 of a @xmath15-algebra @xmath86 , we have :    1 .",
    "@xmath170 is the least pre - fixpoint of the monotone function @xmath171 , and 2 .",
    "@xmath172 is the least pre - fixpoint of the monotone function @xmath173 .",
    "[ r : equiexp ] note that , for any @xmath174 , we have @xmath175 thus , in the syntax of @xmath15 , we can replace the operator @xmath13 by @xmath165 and the operator @xmath63 by @xmath166 , and obtain an equi - expressive formalism .",
    "for this reason , and in this section only , _ we will drop the subscript ` @xmath176 ' and simply use the notations @xmath13 and @xmath63 for both the ternary and the binary versions _ of these operators .",
    "any ` binary ' occurrence @xmath177 or @xmath178 should be read as @xmath179 or @xmath180 , respectively .",
    "formally , this is only a syntactic convenience , but it turns out to be very useful in the completeness proof .",
    "the reason for introducing the contextual operations is the following lemma that we refer to as a ` context rule ' .",
    "this is the version of ( * ? ? ?",
    "5.7(vi ) ) that we need here .",
    "[ p : contextrules ] for any elements @xmath181 of a @xmath15-algebra @xmath86 , we have    1 .   if @xmath182 , then @xmath183 , 2 .   if @xmath184 , then @xmath185",
    ".      we recall and fix notation for negation normal form , representation of modal algebras via ultrafilters , types , and fischer - ladner closure .    ",
    "* negation normal form *     it will be convenient to put @xmath15-formulas in _ negation normal form_.    [ d : nnf ] let @xmath25 be a finite set of propositional variables .",
    "the set of _",
    "@xmath15-formulas in negation normal form _ is defined via the following grammar : @xmath186 note that negation is only allowed to be applied to propositional variables .",
    "we do not need ternary connectives for @xmath62 and @xmath8 .",
    "[ l : nnf ] any @xmath15-formula is equivalent to a @xmath15-formula in negation normal form .    throughout the rest of this section ,",
    "we assume all @xmath15-formulas are in negation normal form .     * representation of modal algebras *     we will make use of the following representation of the modal algebra underlying a @xmath15-algebra .    [",
    "d : dualframe ] let @xmath86 be a modal algebra .",
    "the _ dual frame _ of @xmath86 is the pair @xmath187 , where    * @xmath188 is the set of ultrafilters of the boolean algebra @xmath80 ; * @xmath189 is the binary relation on @xmath190 defined by @xmath191 if , and only if , for every @xmath192 , if @xmath193 then @xmath194 .",
    "[ t : jtrep]@xcite any modal algebra embeds in the complex algebra of its dual frame .    by contrast , not every @xmath15-algebras embeds into a complex @xmath15-algebra .",
    "an important part of theorem  [ t : jtrep ] is worth recording separately .",
    "[ l : diamstep ] let @xmath86 be a modal algebra with dual frame @xmath195 .",
    "if @xmath192 , @xmath196 , and @xmath194 , then there exists @xmath197 such that @xmath198 and @xmath193 .",
    " * types and characteristic formulas",
    "*     the following equivalence relations on the points of @xmath195 , and characterizing formulas for them , will also be useful . in the following definition , recall that a point @xmath199 is an ultrafilter of @xmath86 and so , under convention  [ c : phi ] , it makes sense to say that @xmath11 _ belongs to _ @xmath200 .",
    "[ d : charform ] let @xmath201 be a finite set of formulas .",
    "for any @xmath202 , define @xmath203 we call the equivalence class of a point @xmath200 under @xmath204 the _ @xmath201-type of @xmath200_.    for any @xmath196 , define the _ characteristic formula _",
    "[ l : charform ] for any set of formulas @xmath201 and points @xmath202 , we have @xmath206    we combine the above with proposition  [ p : contextrules ] to obtain the following useful fact , which will allow us , in the next subsection , to make ` jumps ' in the ultrafilter frame of @xmath86 .",
    "[ l : jump ] let @xmath201 be a finite set of formulas , let @xmath207 , and let @xmath11 , @xmath10 , and @xmath208 be formulas . for any @xmath196 such that @xmath209 , there exists @xmath210 such that @xmath211 and @xmath212 .     * fischer - ladner closure *     a last standard concept that we need in our construction is the fischer - ladner closure of a finite set of formulas .    [",
    "d : closure ] a set of @xmath15-formulas @xmath213 is called ( fischer - ladner ) _ closed _ if the following hold :    * @xmath214 , * if @xmath215 , then @xmath216 for any subformula @xmath217 of @xmath11 , * if @xmath218 , then @xmath219 . * if @xmath220 , then @xmath221 . * if @xmath222 , then @xmath223 , * if @xmath224 , then @xmath225 .",
    "the _ closure _ of a set of @xmath15-formulas is the smallest closed set containing it .",
    "[ l : finiteclosure ] the closure of a finite set of @xmath15-formulas is finite .",
    "now that we have all the preliminaries in place , we will construct a tree for the consistent formula @xmath159 that we fixed above , based on the @xmath15-algebra @xmath86 and valuation @xmath226 ( cf .",
    "convention  [ c : phi ] above ) . in",
    "what follows , @xmath227 denotes the fischer - ladner closure of @xmath228 , which is finite by lemma  [ l : finiteclosure ]",
    ".    a standard model construction in modal logic would be to consider the quotient of the ultrafilter frame @xmath195 by the equivalence relation @xmath229 .",
    "our model construction is necessarily more intricate than that , because of the operators @xmath13 and @xmath63 , which are defined as least fixpoints .",
    "let us call an _ eventuality formula _ a @xmath15-formula of the form @xmath230 , where @xmath231 .",
    "the _ set of eventuality formulas _ in propositional variables @xmath25 will be denoted by @xmath232 .",
    "we will construct a tree @xmath29 as a union of finite trees .",
    "for the construction of these finite trees , we use a notion of _ partial tableau for @xmath227 in @xmath86 _ ( see definition  [ d : partialtableau ] below ) . before giving the formal definition",
    ", we will explain the idea behind it .    a partial tableau for @xmath227 in @xmath86 will consist of a finite tree @xmath3 and two labellings , @xmath233 and @xmath234 .",
    "the labelling @xmath233 will assign to each node of the finite tree @xmath3 an ultrafilter of @xmath86 , which can be thought of as the set of formulas that we would like to force in that node .",
    "the labelling @xmath234 assigns to each node a data structure that records the ` current status ' of eventuality formulas in @xmath227 .",
    "this data structure is a finite list of tuples of the form @xmath235 . here ,",
    "if the @xmath236 element in the list @xmath237 is @xmath235 , then @xmath238 is an eventuality formula in @xmath227 which lies in @xmath239 for some @xmath240 ( i.e. for some tree ancestor @xmath158 of @xmath157 ) ; @xmath112 is a ` status ' which can be either @xmath241 ( active ) , @xmath242 ( frozen ) or @xmath243 ( extinguished ) ; @xmath201 is a finite set of formulas that we call the ` relevance set ' and is used in the construction ; and @xmath244 is a ` context formula ' , which will be a strengthening of @xmath208 .",
    "we now give the formal definition .",
    "[ d : partialtableau ] let @xmath227 be a finite closed set of @xmath15-formulas with variables in @xmath25 .",
    "define @xmath245    a _ partial tableau _ for @xmath227 in @xmath86 is a tuple @xmath246 , where    * @xmath3 is a finite tree , * @xmath233 is a function from @xmath3 to @xmath195 , the set of ultrafilters of @xmath86 , * @xmath234 is a function from @xmath3 to @xmath247 , the set of finite words over @xmath248 .    for each @xmath249",
    ", we write @xmath250 for the length of @xmath237 . for each @xmath251 , we write @xmath252 for the @xmath236 letter of the word @xmath237 , and denote this letter by @xmath253 , where @xmath254 for some @xmath255 and formulas @xmath256 , @xmath257 and @xmath258 .    in accordance with the intuitive explanation of a partial tableau",
    ", we will also impose some _ well - formedness _",
    "conditions on the partial tableau , namely ( cf . definition  [ d : wellformed ] below ) : ( a ) any element in the list @xmath237 persists in the list @xmath259 for tree successors @xmath158 of @xmath157 ; ( b ) if the first coordinate @xmath11 of an eventuality formula lies in @xmath260 , then it is extinguished ; ( c ) @xmath227 is always contained in the relevance set ; ( d ) @xmath13-formulas can never be frozen ;",
    "( e ) @xmath244 is a strengthening of @xmath208 ; ( f ) eventuality formulas that occur at some earlier point in the list always lie in the relevance set ; and ( g ) non - extinguished eventuality formulas must lie in @xmath260 .    [",
    "d : wellformed ] we say the partial tableau @xmath246 for @xmath227 in @xmath86 is _ well - formed _ if , for all @xmath249 and @xmath251 ,    1 .   for all @xmath261 such that @xmath156 , we have @xmath262 , and @xmath263 ; 2 .",
    "if @xmath264 then @xmath265 ; 3 .   @xmath266 ; 4 .   if @xmath267 , then @xmath268 ; 5 .   @xmath269 ; 6 .   if @xmath270 then @xmath271 ; 7 .   if @xmath272 then @xmath273",
    ".    we will now describe how to unravel a well - formed partial tableau .",
    "again , before giving the lengthy formal definition ( def .",
    "[ d : onestepunravel ] ) of the one - step unravelling of a partial tableau , we give an intuitive explanation .",
    "recall that @xmath187 denotes the ultrafilter frame of @xmath86 ( def .",
    "[ d : dualframe ] ) . in a simple tableau construction , to unravel a node @xmath157 , one would add successors for all @xmath14-formulas in @xmath274 and label them by appropriate @xmath189-successors of @xmath260 . in order to treat eventuality formulas",
    ", we need to modify this construction in the following way . instead of using the successors of @xmath260 as labels of children of @xmath157 ,",
    "we make a ` jump ' in the ultrafilter frame @xmath195 from the point @xmath260 to a point @xmath275 , guided by the first active eventuality formula , @xmath276 , in the list @xmath237 .",
    "we will then label the children of @xmath157 not by @xmath189-successors of @xmath260 , but by @xmath189-successors of @xmath275 .",
    "the precise choice of @xmath275 is guided by the relevance set @xmath277 , and will ensure ( i ) that @xmath260 and @xmath275 have the same @xmath277-type , and ( ii ) that the negation of @xmath278 can be added conjunctively to @xmath279 , while keeping the partial tableau well - formed .",
    "such an @xmath275 will exist because of lemma  [",
    "l : jump ] .",
    "the advantage of this construction is that @xmath275 will contain a stronger statement than @xmath276 , which will prevent that unwanted infinite loops occur in the construction ( cf .",
    "lemma  [ l : noloops ] below ) .",
    "[ d : onestepunravel ] we define the _ one - step unravelling _ of a well - formed partial tableau @xmath246 . for each leaf @xmath157 of @xmath3 , add a finite set of children of @xmath157 , @xmath280 .",
    ", since @xmath281 because @xmath227 is closed , and @xmath282 in @xmath86 .",
    "] we will now specify a value for @xmath233 and @xmath234 on each of these children .",
    "fix a leaf @xmath157 .",
    ", and in particular write @xmath283 , @xmath284 , @xmath285 , etc . instead of @xmath286 , @xmath287 , @xmath288 , etc .",
    "] to define the values of @xmath233 and @xmath234 on @xmath289 , we first choose an auxiliary ultrafilter @xmath290 . if @xmath291 for all @xmath251 , define @xmath292 .",
    "otherwise , put @xmath293 we call @xmath294 the _ active index _ at @xmath157 .",
    "does not exist , proceed as in the case @xmath295 for the definition of @xmath233 , and in the definition of @xmath234 act as if @xmath296 .",
    "] by def .",
    "[ d : wellformed](g ) , we have @xmath297",
    ". therefore , by lemma  [ l : jump ] , pick @xmath290 such that @xmath298 and @xmath299 . write @xmath300 .",
    "let @xmath301 .",
    "we use @xmath275 to define @xmath302 and @xmath303 . for the definition of @xmath302 , the cases @xmath304 and @xmath305 diverge slightly .    * * case @xmath304 . * since @xmath306",
    ", we have @xmath307 , because @xmath308 and @xmath309 . therefore , by lemma  [ l : diamstep ] , pick @xmath302 such that @xmath310 and @xmath311 . * * case @xmath305 .",
    "* we do the same as in the previous case if @xmath312 . if @xmath313 , we do the following . by def .",
    "[ d : wellformed](b ) and @xmath314 , we have @xmath315 .",
    "since @xmath309 and @xmath316 , we have @xmath317 , so @xmath318 .",
    "also , @xmath319 by the choice of @xmath275 . applying the general fact ( proposition  [ p : eucafcfixpoint ] ) that @xmath320",
    ", we obtain @xmath321 . by lemma  [ l : diamstep ] , pick @xmath302 such that @xmath322 and @xmath323 .",
    "note that in particular @xmath324 , since @xmath325 and @xmath13 is monotone .    the word @xmath303 is defined as an update of the word @xmath237 , obtained by consecutively applying the following steps :    1 .",
    "let @xmath326 . for each @xmath327",
    ", add one letter , @xmath328 , to the end of the word , where @xmath329 .",
    "2 .   for each position @xmath330",
    ", put @xmath331 3 .   for each position",
    "@xmath332 , add the formula @xmath333 to the set @xmath285 .",
    "4 .   for each position",
    "@xmath330 such that @xmath334 , change @xmath284 into @xmath243 .",
    "5 .   for each position",
    "@xmath330 , if @xmath335 and @xmath336 , change @xmath284 into @xmath243 .",
    "6 .   for each position",
    "@xmath330 , if @xmath337 , @xmath338 , and @xmath339 , change @xmath284 into @xmath242 .",
    "7 .   for each position",
    "@xmath340 , if @xmath337 , @xmath341 , @xmath342 and @xmath343 , change @xmath284 into @xmath241 .",
    "[ l : wellformed ] the one - step unravelling of a well - formed partial tableau @xmath3 is well - formed .",
    "[ d : modelconstruction ] we define a tree @xmath28 with a @xmath25-colouring @xmath344 . since @xmath345",
    ", pick an ultrafilter @xmath346 such that @xmath347 .",
    "define @xmath348 to be the partial tableau whose underlying tree consists of a single node , @xmath124 , and @xmath349 .",
    "choose a word @xmath350 which orders ( in an arbitrary manner ) the set @xmath351 .",
    "note that @xmath348 is a well - formed partial tableau .",
    "inductively define , for each @xmath52 , @xmath352 to be the one - step unravelling of the partial tableau @xmath353 .",
    "let @xmath28 be the infinite , finitely branching tree @xmath354 .",
    "we have well - defined functions @xmath355 from @xmath29 to @xmath195 and @xmath356 from @xmath29 to @xmath247 .",
    "for each @xmath357 , define @xmath358 .    from the truth lemma",
    "below , it follows that @xmath160 , which concludes the proof of theorem  [ t : completeness ] :    [ l : truthlemma ] for all @xmath359 and @xmath357 , if @xmath360 , then @xmath361 .",
    "the proof of the truth lemma is , as usual , by induction on @xmath362 .",
    "the induction makes use of the following crucial fact , showing that eventualities are always extinguished ( i.e. fulfilled ) or , in the case of @xmath63 , ultimately frozen along any branch :    [ l : noloops ] for all @xmath357 , @xmath251 , and infinite @xmath30-paths @xmath363 with @xmath364 , there exists @xmath365 such that    * if @xmath267 , then @xmath366 . * if @xmath367 , then either @xmath366 , or for all @xmath368 , @xmath369 .",
    "we conclude the section by stating the completeness results for our variants of @xmath15 .",
    "the proofs are mild modifications of the model construction given in subsection  [ ss : model ] above .",
    "[ t : rootedcompleteness ] for every consistent @xmath117-formula @xmath159 , there exists a @xmath25-coloured tree such that for some node @xmath125 , @xmath370 .",
    "[ t : binarycompleteness ] for every consistent @xmath118-formula @xmath159 , there exists a @xmath25-colouring @xmath112 of the full binary tree such that for some node @xmath125 , @xmath370 .",
    "the aim of this section is to exhibit model companions for the universal theories @xmath117 and @xmath118 ( def .",
    "[ d : ctlfp ] ) of rooted @xmath15-algebras and rooted binary @xmath15-algebras .",
    "we first recall the formal definition of model companion from model theory . for more conceptual background on the notion of model companion , we refer to the introduction of this paper and , e.g. , ( * ? ? ? * section 3.5 ) and @xcite .",
    "[ d : modelcompanion ] a first - order theory @xmath4 is _ model - complete _ if every formula is equivalent over @xmath4 to an existential formula to an existential one , see  ( * ? ? ?",
    "3.5.1 ) . ] .",
    "a first - order theory @xmath4 is a _ co - theory _ of a first - order theory @xmath3 if every model of @xmath3 embeds into a model of @xmath4 , and vice versa .",
    "let @xmath3 be a universal theory .",
    "an extension @xmath371 is a _ model companion _ of @xmath3 iff @xmath4 is a model - complete co - theory of @xmath3 .",
    "it can be shown  ( * ? ? ?",
    "* section 3.5 ) that a model companion @xmath4 - whenever it exists - is unique and axiomatizes the class of models of @xmath3 which are _ existentially closed _ for @xmath3 .",
    "recall that a @xmath3-model @xmath1 is existentially closed for @xmath3 iff , whenever an existential formula @xmath11 with parameters from @xmath1 holds in a @xmath3-model @xmath372 , then @xmath11 holds in @xmath1 itself .",
    "a remark on notation is in place . in this section ,",
    "we will mainly be concerned with the _ first - order theory _ of rooted @xmath15-algebras .",
    "we will denote the ( functional ) first - order language of rooted @xmath15-algebras by @xmath373 .",
    "thus , @xmath373 has function symbols @xmath374 , and @xmath8 , one relation symbol , @xmath375 , and the usual first - order connectives .",
    "in contrast with the previous section , the word ` formula ' ( or ` @xmath373-formula ' ) will here refer to a first - order formula in this language @xmath373 , and we will use lower case greek letters @xmath11 , @xmath10 , etc . for these . to avoid any possible confusion , in this section",
    "we refer to @xmath15-formulas as _",
    "@xmath373-terms _ , and we use lower case roman letters @xmath60 , @xmath376 , etc . for these . , @xmath18 , @xmath19 , etc .",
    "can have two distinct meanings when they occur in an @xmath373-formula : they are used to build @xmath373-terms , as in , e.g. , @xmath377 , but they are also symbols of the first - order meta - language , as in , e.g. , @xmath378 .",
    "thus , the two occurrences of ` @xmath18 ' in the @xmath373-formula @xmath379 have different meanings . in practice",
    ", we will parenthesize carefully to avoid confusion . ]    a straight - forward but important observation about the theory @xmath117 is that quantifier - free formulas reduce to equations , or inequations .",
    "[ l : justequations ] for any quantifier - free @xmath373-formula @xmath380 , there exists an @xmath373-term @xmath381 such that @xmath382 ; similarly , there exists an @xmath373-term @xmath383 such that @xmath384 .",
    "we shall construct , in subsection  [ ss : tstar ] , a first - order theory that we call @xmath385 , and prove ( thm .",
    "[ t : main1 ] ) that @xmath385 is the model companion of @xmath117 . in this subsection",
    "we give a general outline of the proof . + * construction of the theory @xmath385 .",
    "* for the theory @xmath385 to be model - complete , we will need that any universal formula is equivalent over @xmath385 to an existential one . by lemma  [ l : justequations ] ,",
    "any universal formula is equivalent over @xmath117 to a universal formula of the particular form @xmath386 , where @xmath60 is an @xmath373-term .",
    "we will construct , for each such special universal formula @xmath88 , an existential formula @xmath387 with the following two properties :    1 .",
    "@xmath388 , and 2 .",
    "any rooted @xmath15-algebra with @xmath25-parameters extends to a model where @xmath389 is true .",
    "the formula @xmath387 with these two properties will allow us to construct the model companion of @xmath117 . + * construction of @xmath10 .",
    "* we now outline the construction of the existential formula @xmath387 mentioned in the construction of the theory @xmath385 above . for this",
    ", we use the back - and - forth translation between formulas of the modal @xmath0-calculus and automata by janin and walukiewicz @xcite .",
    "the process will go in three steps :    1 .   from a first - order @xmath373-formula @xmath88 to a monadic second order formula @xmath390 ( prop .",
    "[ p : termtomso ] ) ; 2 .   from a monadic second order formula @xmath390 to a non - deterministic modal automaton @xmath391 , which describes the behaviour of @xmath390 on @xmath392-expansions of trees ( prop .",
    "[ p : msotoaut ] ) ; 3 .   back from the automaton @xmath391 to an @xmath373-term @xmath393 describing the automaton ( prop .",
    "[ p : auttoterm ] ) .",
    "the @xmath373-term @xmath393 , once the variables @xmath394 corresponding to the states of the automaton are existentially quantified , is transformed into the existential formula @xmath395",
    ". this will be the existential formula @xmath10 mentioned in the construction of @xmath385 above .      in this subsection",
    "we make the construction of @xmath10 , outlined in the previous subsection , precise . for this purpose ,",
    "we first recall the definitions of @xmath392-expansions and fix the notation that we use for @xmath396 . after this",
    ", we give the technical results underlying step 1  3 in the construction of @xmath10 . + * @xmath392-expansions of trees .",
    "* the following definition actually works for transition systems in general , cf .",
    "* def .  1 ) , but we only need it for trees .      for any @xmath25-colouring @xmath112 of a tree @xmath28 with root @xmath124 , define the @xmath25-colouring @xmath402 of @xmath397 by @xmath403 , and @xmath404    it is straight - forward to prove that any @xmath25-coloured tree is bisimilar to its @xmath392-expansion via a back - and - forth morphism . stating this in algebraic terms , we have in particular :    [ p : subalgebra ] for any @xmath25-coloured tree @xmath405 , the algebra @xmath109 is isomorphic to a subalgebra of @xmath406 , via an isomorphism which in particular sends @xmath407 to @xmath408 for each @xmath114 in @xmath25 .",
    "* @xmath396 on trees .",
    "* we use the following ( reduced ) _ syntax of monadic second order logic _ @xmath396 .",
    "the _ atomic formulas _ of @xmath396 are of the form @xmath409 and @xmath410 where @xmath114 , @xmath411 are variables ; arbitrary formulas are obtained from atomic formulas using the connectives @xmath19 , @xmath18 and @xmath412 .",
    "this syntax suffices to express all of @xmath396 , cf .",
    ", e.g. , @xcite or ( * ? ? ?",
    "in particular , we use the abbreviation @xmath413 for @xmath414 and we use the convention that lower case letters @xmath415 stand for ` individual variables ' , whose interpretation is forced to be a singleton . for a first - order variable @xmath157 and a second - order variable @xmath114 , we write ` @xmath416 ' to mean ` @xmath417 ' .    as for the semantics",
    ", we will only consider interpretations of @xmath396 over trees @xmath28 : given an @xmath396 formula @xmath390 and a @xmath25-colouring @xmath34 with associated valuation @xmath418 , the relation @xmath419 is defined in the usual way , i.e. , for atomic formulas we have @xmath420 and this definition is extended to arbitrary @xmath396-formulas . +",
    "* step 1 : from @xmath421 to @xmath396 .",
    "* the essence of the following proposition is the so - called ` standard translation ' from modal fixpoint logic to monadic second - order logic .",
    "[ p : termtomso ] for any first - order @xmath373-formula @xmath88 , there exists a monadic second order formula @xmath390 such that , for any @xmath25-coloured tree @xmath405 , @xmath422    ( sketch ) we just show how @xmath423 is built up .",
    "we first inductively define , for any @xmath373-term @xmath424 , an mso - formula @xmath425 , where @xmath157 is a fresh first - order variable . the base case and",
    "the cases for the function symbols other than @xmath13 and @xmath8 are treated as follows :    2    * @xmath426 , * @xmath427 , * @xmath428 , * @xmath429 , * @xmath430 , * @xmath431    before defining @xmath432 and @xmath433 , first define the auxiliary formula : @xmath434 \\vee [ \\dot{t_2}(v ' ) \\wedge r(v',q ) ] ) \\to ( v ' \\in q ) \\right)~.\\end{aligned}\\ ] ] note that @xmath435 is true in a transition system @xmath29 exactly if @xmath436 holds in the algebra @xmath437 .",
    "we now define : @xmath438 in words : @xmath439 is forced in @xmath157 iff @xmath157 lies in all sets @xmath411 for which @xmath440 .",
    "we also define : @xmath441 ) ] \\end{aligned } \\right)\\ ] ] in words : @xmath442 is forced in @xmath157 iff @xmath157 lies in some set @xmath114 such that @xmath443 holds .",
    "now , for any @xmath373-formula @xmath88 , define @xmath390 by replacing any atomic formula @xmath444 by @xmath445 .",
    "* step 2 : from @xmath396 to automata . *",
    "we recall the relevant definitions and results from @xcite .",
    "the details will be relevant in step 3 as well .",
    "[ d : automaton ] fix a finite set @xmath25 of propositional variables .",
    "non - deterministic modal automaton over @xmath25 _ is a tuple @xmath446 , where @xmath447 is a finite set of states , @xmath448 is an initial state , @xmath449 is a transition function , and @xmath450 is a parity function .",
    "let @xmath451 be the @xmath392-expansion of a @xmath25-coloured tree @xmath405 .",
    "a _ successful run _ of the automaton @xmath391 on @xmath451 ( also known as _ @xmath391-labelling _ in @xcite ) is a function @xmath452 such that :    1 .   ( initial ) @xmath453 , 2 .",
    "( transition ) for all @xmath454 , the set @xmath455 is in @xmath456 , 3 .",
    "( success ) for any infinite path @xmath363 in @xmath399 with @xmath457 , the parity @xmath458 is even .",
    "we say that @xmath391 _ accepts _",
    "@xmath451 if there exists a successful run of @xmath391 on @xmath451 .    note that we only gave the definition of acceptance of an _",
    "@xmath392-expanded tree_. we do not need the more involved acceptance condition for general trees .    [",
    "p : msotoaut ] for any monadic second order formula @xmath390 , there exists a non - deterministic modal automaton @xmath459 over @xmath25 such that , for any @xmath25-coloured tree @xmath405 , @xmath460    by ( * ? ? ? * lem .",
    "12 ) , there is a formula @xmath461 of the modal @xmath0-calculus such that for every @xmath25-coloured tree @xmath405 , @xmath462 since any @xmath25-coloured tree is bisimilar to its @xmath392-expansion , we also have @xmath463 by the results in @xcite ( also see , e.g. , ( * ? ? ?",
    "2 ) ) , there is a non - deterministic modal automaton @xmath459 such that @xmath464    * step 3 : from automaton to term . * here , we use the fact that the language of @xmath117 is expressive enough to express the acceptance condition of automata on @xmath392-expanded trees . in particular , we need the binary @xmath63 connective of @xmath15 for the term @xmath465 in the proof .    [",
    "p : auttoterm ] for any non - deterministic modal automaton @xmath391 over @xmath25 with set of states @xmath394 , there exists an @xmath373-term @xmath393 such that for any @xmath25-coloured tree @xmath405 , we have @xmath466    ( sketch ) we encode acceptance conditions into an @xmath373-term @xmath393 .",
    "we define the following auxiliary terms for @xmath467 and @xmath468 : @xmath469 now the required @xmath373-term @xmath393 is taken to be @xmath470 , where @xmath471 where the last conjunction is taken over the set of the odd numbers @xmath472 that belongs to the range of @xmath473 .",
    "let @xmath474 be the set of triples @xmath475 such that @xmath25 and @xmath476 are disjoint finite sets of variables and @xmath60 is an @xmath373-term in variables @xmath477 .",
    "for each tuple @xmath478 , define the first - order @xmath373-formula @xmath479 and let @xmath480 be the monadic second - order formula given by proposition  [ p : termtomso ] .",
    "define the first - order @xmath373-formula @xmath481 where @xmath482 is the non - deterministic automaton corresponding to the mso formula @xmath483 , by proposition  [ p : msotoaut ] .",
    "finally , define the first - order @xmath373-theory @xmath484    we now come to our main theorem .",
    "[ t : main1 ] @xmath385 is the model companion of @xmath117 .",
    "( sketch ) in order to show that @xmath385 is model - complete one shows , by using the completeness theorem ( thm .",
    "[ t : rootedcompleteness ] ) , that for each @xmath478 , in all rooted @xmath15-algebras we have @xmath485 this corresponds to property ( i ) in the proof outline given in subsection  [ ss : proofoutline ] .",
    "indeed , given this fact , it follows from the definition of @xmath385 that every universal formula is equivalent in @xmath385 to an existential one , so that @xmath385 is model - complete . that @xmath385 is a co - theory of @xmath117 follows from lemma  [ l : extendalgebra ] below , which corresponds to property ( ii ) in the proof outline given in subsection  [ ss : proofoutline ] .",
    "[ l : extendalgebra ] let @xmath478 , with @xmath486 . for any rooted @xmath15-algebra @xmath86 and @xmath487",
    ", there is a rooted @xmath15-algebra @xmath488 which contains @xmath86 as a subalgebra such that @xmath489 .",
    "[ r : nomodels ] although we have explicitly defined a model companion for @xmath117 , the models of the model companion @xmath385 itself remain rather mysterious .",
    "for instance , the only atom in a model of @xmath385 is @xmath119 , as can be seen by taking as @xmath490 the formula @xmath491)$ ] .",
    "@xmath492      we shall prove that @xmath118 has a model - companion too and , in addition , we shall be able to characterize this model - companion as the first - order theory of the complex algebra of the full binary tree . +",
    "* @xmath493 : @xmath396 on the binary tree . * recall that @xmath493 is the monadic second order logic of the full binary tree @xmath494 ( we refer to  @xcite or ( * ? ? ?",
    "12 ) for basic results used below ) . from a syntactic point of view , in @xmath493 we have , in addition to the atomic formulas of @xmath396 , also the atomic formulas @xmath495 and @xmath496 .",
    "semantically , we interpret @xmath493-formulas @xmath88 over @xmath25-colourings @xmath497 of the full binary tree ; for @xmath498 , the new atomic formula @xmath499 is interpreted so that we have @xmath500 where on the right hand side , we view the unary function @xmath501 of example  [ ex : binarytree ] as a set of pairs .",
    "write @xmath502 for the first - order language of rooted binary @xmath15-algebras",
    ". the following is proved in the same way as prop .",
    "[ p : termtomso ] .",
    "[ prop : b - fo - to - s2s ] for any @xmath502-formula @xmath88 , there exists an @xmath493-formula @xmath390 such that , for any @xmath25-colouring @xmath503 , we have @xmath504    * encoding automata . * a _ parity tree automaton _",
    "@xmath391 on a finite alphabet @xmath248 is a tuple @xmath505 where @xmath447 is a finite set of states , @xmath506 , @xmath507 , and @xmath508 .",
    "we shall consider only automata whose alphabet @xmath248 is of the kind @xmath509 for a finite set of propositional letters @xmath25 . if @xmath510 is a @xmath25-colouring of the tree @xmath494 ,",
    "then a _ run _ of @xmath391 on @xmath112 is a function @xmath511 such that @xmath512 and , for any @xmath513 , @xmath514 .",
    "if @xmath515 is an infinite branch , we denote by @xmath516 the set of states in @xmath447 which occur infinitely often on @xmath517 in @xmath201 , i.e. , @xmath518 .",
    "a run @xmath201 of @xmath391 on @xmath112 is _ successful _ if for every infinite branch @xmath517 we have that @xmath519 is even .",
    "we say @xmath391 _ accepts _ a @xmath25-colouring @xmath112 iff there exists a successful run of @xmath391 on @xmath112 .",
    "the following result is well - known . for a proof , cf . ,",
    "e.g. , ( * ? ? ?",
    "* thm .  8.7 & lem .  12.21 ) .",
    "[ thm : b - s2s - to - automaton ] let @xmath390 be a formula of @xmath493 .",
    "there exists a parity tree automaton @xmath391 over the alphabet @xmath520 such that , for any @xmath521 , @xmath522    analogous to prop .",
    "[ p : auttoterm ] , we also have :    [ p : b - auttoterm ] for any parity tree automaton @xmath523 over @xmath520 with set of states @xmath394 , there exists an @xmath502-term @xmath393 such that for any @xmath25-colouring @xmath524 , we have @xmath525    putting together what we have , we conclude that    [ t : main2 ] the first - order theory @xmath526 of the binary tree algebra @xmath527 is the model companion of @xmath118 .",
    "let @xmath88 be a @xmath502-formula .",
    "using proposition  [ prop : b - fo - to - s2s ] , theorem  [ thm : b - s2s - to - automaton ] and proposition  [ p : b - auttoterm ] , it is clear that @xmath528 thus , every formula is equivalent modulo @xmath526 to an existential formula , so @xmath526 is model - complete .    to show that @xmath118 and @xmath526 are co - theories , since @xmath529 , it is sufficient to show that every rooted binary @xmath15-algebra embeds into a model of @xmath526 , i.e. , into an algebra which is elementarily equivalent to @xmath527 . by compactness and robinson diagram lemma ( cf .",
    "2.1.8 ) ) , it is sufficient to prove the consistency of the union of @xmath526 with a finite conjunction @xmath11 of ground literals with parameters in the support of @xmath86 such that @xmath530 . for this",
    ", in view of proposition  [ l : justequations ] , it is sufficient to show that @xmath531 has a model for some term @xmath532 such that @xmath533 .",
    "the latter means that @xmath532 is a consistent rooted binary @xmath15-formula , so we can simply invoke the completeness theorem  [ t : binarycompleteness ] to get what we need .",
    "there is an important difference between our results for the tree logic @xmath117 and the _ binary _ tree logic @xmath118 . in the binary case , we know that the model companion @xmath526 of @xmath118 is the first - order theory of the powerset algebra of the full binary tree .",
    "in contrast , by remark  [ r : nomodels ] , no powerset algebra can be a model of @xmath385 . from this",
    ", we can conclude that , if one wants to find a framework for @xmath396 on infinite trees where ` all equations are solvable ' , complex algebras of transition systems are",
    "insufficient and algebraic models become indispensable .",
    "we leave to further research the interesting questions , posed by the reviewers , whether @xmath7 itself has a model companion , and which are the minimal algebraizable fragments of the modal mu - calculus having a model companion .",
    "we wish to thank yde venema for his invaluable help and his decisive suggestions , and the organizers of the 2015 dagstuhl seminar on duality in computer science for facilitating this exchange .",
    "most of this research was performed while the second - named author was at the university of milan , supported by the project firb `` futuro in ricerca '' ( rbfr10dgua002 ) .",
    "we are very grateful to vincenzo marra for making this possible .",
    "finally , we thank the reviewers for their many constructive comments and questions .",
    "23 [ 1]#1 [ 1]`#1 ` urlstyle [ 1]doi : # 1    j.  r. bchi . on a decision method in restricted second - order arithmetic . in e.",
    "nagel , p.  suppes , and a.  tarski , editors , _ proceedings 1960 international congress for logic , methodology and philosophy of science _ , pages 111 .",
    "stanford university press , 1962 .",
    "chang and j.  h. keisler .",
    "_ model theory_. north - holland , amsterdam - london , third edition , 1990 .",
    "e.  clarke , e.  emerson , and a.  sistla .",
    "automated verification of finite state concurrent systems using temporal logic specifications . _",
    "acm trans .",
    "lang . and syst .",
    "_ , pages 244263 , 1986 .",
    "g.  dagostino and m.  hollenberg . .",
    "_ j. symbolic logic _ , 650 ( 1):0 310332 , 2000 .    e.  a. emerson and c.  lei .",
    "temporal reasoning under generalized fairness constraints . in _ proc . of stacs 86 ,",
    "3rd annual symposium on theoretical aspects of computer science _ , pages 2136 , 1986 .",
    "s.  ghilardi .",
    "model - theoretic methods in combined constraint satisfiability .",
    "_ j. autom .",
    "reasoning _ , 330 ( 3 - 4):0 221249 , 2004 .    s.  ghilardi and s.  j. van gool . a model - theoretic characterization of monadic second order logic on infinite words . _ journal of symbolic logic _ , 201 ? to appear , preliminary version as corr abs/1503.08936 .",
    "s.  ghilardi and m.  zawadowski .",
    "model completions and r - heyting categories .",
    "pure appl . logic _",
    ", 880 ( 1):0 2746 , 1997 .",
    "issn 0168 - 0072 .",
    "s.  ghilardi and m.  zawadowski . _",
    "sheaves , games , and model completions_. trends in logic .",
    "kluwer academic publishers , 2002 .",
    "s.  ghilardi , c.  lutz , and f.  wolter . did i damage my ontology ?",
    "a case for conservative extensions in description logics . in _ proc . of x int .",
    "conf . on principles of knowledge representation and reasoning _ ,",
    "pages 187197 , 2006 .",
    "e.  grdel , w.  thomas , and t.  wilke , editors .",
    "_ automata logics , and infinite games : a guide to current research _ ,",
    "volume 2500 of _ lecture notes in computer science _ , 2002 .",
    "springer .",
    "d.  janin and i.  walukiewicz . .",
    "in _ mathematical foundations of computer science _ , volume 969 of _ lecture notes in computer science _ , pages 552562 .",
    "springer , 1995 .",
    "d.  janin and i.  walukiewicz . on the expressive completeness of the propositional mu - calculus with respect to monadic second order logic . in _",
    "concur 96 : concurrency theory _",
    ", volume 1119 of _ lecture notes in computer science _ , pages 263277 .",
    "springer , 1996 .",
    "b.  jnsson and a.  tarski . . _ american journal of mathematics _ , 730 ( 4):0 891939 , 1951 .",
    "d.  kozen . .",
    "_ theoretical computer science _ , 27:0 333354 , 1983 .",
    "p.  lipparini .",
    "existentially complete closure algebras .",
    "d ( 6 ) _ , 10 ( 1):0 1319 , 1982 .",
    "a.  m. pitts . on an interpretation of second - order quantification in first - order intuitionistic propositional logic .",
    "_ j. symbolic logic _ , 570 ( 1):0 3352 , 1992 .",
    "a.  pnueli .",
    "the temporal logic of programs . in _ proceedings of the 18th annual symposium on foundations of computer science ( focs ) _ , pages 4657 , 1977 .",
    "h.  rasiowa and r.  sikorski .",
    "_ the mathematics of metamathematics_. pwn  polish scientific publishers , warsaw , third edition , 1970 .",
    "monografie matematyczne , tom 41 .",
    "a.  robinson .",
    "_ on the metamathematics of algebra_. north - holland , 1951 .",
    "a.  robinson .",
    "_ introduction to model theory and to the metamathematics of algebra_. studies in logic and the foundations of mathematics .",
    "north - holland , 1963 .",
    "w.  thomas . .",
    "handbook of formal languages _ , pages 389455 .",
    "springer , 1996 .",
    "w.  h. wheeler .",
    "model - companions and definability in existentially complete structures . _",
    "israel journal of mathematics _ , 25:0 305330 , 1976 .",
    "* appendix *",
    "the following lemma is crucial for proving prop .",
    "[ p : compalg ] .",
    "[ l : compalg - indstep ] let @xmath28 be a transition system with complex algebra @xmath534 for any @xmath535 and @xmath37 , we have    1 .   @xmath536 iff there exist @xmath52 and an @xmath30-path @xmath53 such that @xmath537 for all @xmath55 and @xmath538 .",
    "2 .   @xmath539 iff there exists an infinite @xmath30-path @xmath58 such that @xmath540 for all @xmath60 and there exist infinitely many @xmath60 with @xmath537 .",
    "\\1 . by the definition of @xmath13 as a least pre - fixpoint",
    ", it suffices to prove that the set @xmath541 is the least element @xmath200 of @xmath109 for which @xmath542 holds .",
    "* @xmath543 : if @xmath544 , then @xmath545 , as witnessed by the trivial path ` @xmath125 ' .",
    "if @xmath546 , pick an @xmath30-successor @xmath547 of @xmath125 such that @xmath548 .",
    "pick an @xmath30-path @xmath549 witnessing that @xmath548 . since @xmath550 , the @xmath30-path @xmath551 witnesses that @xmath545 .",
    "* @xmath552 is the least such : suppose that @xmath542 for some @xmath553 .",
    "we need to show that @xmath554 .",
    "suppose that @xmath555 and choose an @xmath30-path @xmath556 witnessing this .",
    "we show by induction on @xmath472 that @xmath557 . for @xmath558 ,",
    "then @xmath559 , so @xmath560 . for @xmath561 ,",
    "the shorter path @xmath562 gives , by induction , that @xmath563 .",
    "now @xmath564 and @xmath565 , so @xmath560 .",
    "\\2 . by the definition of @xmath8 as a greatest post - fixpoint , it suffices to prove that the set @xmath566 is the greatest element @xmath200 of @xmath109 for which @xmath567 holds .    *",
    "@xmath568 : let @xmath555 , and pick an infinite @xmath30-path @xmath569 witnessing this . clearly , @xmath559 .",
    "moreover , the @xmath30-successor @xmath547 of @xmath124 lies in @xmath570 : pick some @xmath571 such that @xmath537 . the infinite @xmath30-path @xmath572 witnesses that @xmath573 , so @xmath574 .",
    "we also have @xmath575 for all @xmath576 , concluding the proof that @xmath577 by item ( 1 ) .",
    "* @xmath552 is the greatest such : let @xmath553 be such that @xmath578 .",
    "to show @xmath579 , let @xmath560 be arbitrary ; we show that @xmath555",
    ". since @xmath580 , by definition of @xmath581 and item ( 1 ) , pick a successor @xmath547 of @xmath125 and a finite @xmath30-path @xmath549 such that @xmath582 for all @xmath583 and @xmath584 . repeating this argument",
    ", we obtain an infinite @xmath30-path @xmath585 witnessing that @xmath545 .",
    "p : compalg let @xmath35 be a @xmath25-coloured transition system .",
    "for any @xmath27-formula @xmath11 and @xmath37 , we have @xmath116    by induction on the complexity of @xmath11 .",
    "all cases except @xmath13 and @xmath8 are immediate from the definitions .",
    "suppose that @xmath586 or @xmath587 .",
    "write @xmath588 for @xmath589 . by the induction hypothesis",
    ", we have , for @xmath589 and for all @xmath37 , @xmath590 by lemma  [ l : compalg - indstep ] , we obtain the desired equivalences for @xmath591 and @xmath592 .",
    "the following facts are clear semantically , and not so hard to derive syntactically .",
    "[ l : basicsyntfacts ] for any elements @xmath593 in a @xmath15 algebra @xmath86 ,    1 .",
    "@xmath594 2 .",
    "@xmath595 3 .",
    "@xmath596 and @xmath597 implies @xmath598 .",
    "4 .   @xmath596 and @xmath597 implies @xmath599 .",
    "@xmath600 6 .   if @xmath601 and @xmath602 , then @xmath603 .",
    "\\(1 ) the operator @xmath13 is clearly monotone , being the fixpoint of a monotone operation .",
    "it now suffices to prove @xmath604 .",
    "write @xmath605 . distributing disjunctions over @xmath14 and conjunction with @xmath606 , notice that @xmath607 \\vee [ a ' \\vee ( b \\wedge { { \\diamond}}{\\mathrm{eu}}(a',b ) ) ] \\leq c,\\ ] ] where we use two applications of ( [ eufix ] ) for the last inequality . by ( [ eumin ] )",
    ", we conclude that @xmath608 , as required .",
    "\\(2 ) follows from ( 1 ) since @xmath62 is the de morgan dual of @xmath13 .",
    "\\(3 ) and ( 4 ) are clear since @xmath8 and @xmath63 are fixpoints of monotone operations .",
    "\\(5 ) by ( [ arfix ] ) , @xmath609 , from which the statement follows .",
    "\\(6 ) suppose that @xmath601 and @xmath602 .",
    "write @xmath610 .",
    "we need to show that @xmath611 . for this",
    ", it suffices to prove , by ( [ eumin ] ) , that @xmath612 .",
    "since @xmath613 by assumption , we have @xmath614 , so @xmath615 . to prove that @xmath616 , notice first that @xmath617 where the last equality holds because the assumption that @xmath602 gives @xmath618 .",
    "moreover , @xmath619 , so by the rule ( [ eufix ] ) we obtain @xmath620 we have proved that @xmath621 , so @xmath616 , as required .",
    "p : eucafcfixpoint for any elements @xmath169 of a @xmath15-algebra @xmath86 , we have :    1 .",
    "@xmath170 is the least pre - fixpoint of the monotone function @xmath171 , and 2 .",
    "@xmath172 is the least pre - fixpoint of the monotone function @xmath173 .",
    "note that @xmath622 where the first equality holds by distributivity , and the second equality holds because @xmath623 is a fixpoint of @xmath624 .",
    "it follows immediately that @xmath170 is a fixpoint of @xmath171 . to prove that it is the least fixpoint , let @xmath125 be any element of @xmath86 such that @xmath625 .",
    "then @xmath626 since @xmath623 is a least fixpoint of @xmath624 , it follows that @xmath627 .",
    "hence , @xmath628",
    "write @xmath112 for the function @xmath629 . * ",
    "@xmath172 is a pre - fixpoint of @xmath112 . * + note",
    "first , since @xmath630 , that @xmath631 by the fixpoint definition of @xmath63 .    note , using the distributive law and lemma  [ l : basicsyntfacts].2 , that @xmath632 where we use ( [ eq : afcandaf ] ) for the inequality from the first to the second line . + *  @xmath172 is less than or equal to any pre - fixpoint of @xmath112 . *",
    "+ let @xmath633 be such that @xmath634 . write @xmath635 .",
    "[ c : alphaineq ] @xmath636 .",
    "[ c : alphaineq ] . since @xmath634",
    ", we have @xmath637 and @xmath638    note that @xmath639 therefore , by lemma  [ l : basicsyntfacts].6 , we have @xmath640 by de morgan duality and applying @xmath61 on both sides , we obtain from ( [ eq : alphainside ] ) that @xmath641 since @xmath642 by definition , and @xmath643 by lemma  [ l : basicsyntfacts].2 , we have @xmath644 in any modal algebra , @xmath645 , so combining ( [ eq : alphainsidedual ] ) and ( [ eq : addr ] ) , we obtain @xmath646 from ( [ eq : boxar ] ) and ( [ eq : xprefix1 ] ) , we conclude that @xmath647 the rule ( [ afmin ] ) now yields @xmath648 from which the claim is clear .    from the definitions of @xmath166 and @xmath233 , distributivity , and monotonicity of @xmath63 , we obtain @xmath649 where the last inequality holds by ( [ eq : xprefix1 ] ) and claim  [ c : alphaineq ] .    the following is a general lemma about least fixpoints ; this is the version of ( * ? ? ?",
    "5.7(vi ) ) that we need here .",
    "[ l : gencontrule ] suppose that @xmath29 and @xmath112 are @xmath650-ary operations on a boolean algebra @xmath651 such that , for all @xmath652 and @xmath653 , @xmath654 then , for any @xmath652 , @xmath655 , @xmath656    let @xmath652 , @xmath655 .",
    "writing @xmath657 , we may prove the contrapositive statement , which says that if @xmath658 , then @xmath659 .",
    "suppose that @xmath660 .",
    "then @xmath661 , so @xmath662 where we use in the last equality the fact that @xmath663 is a fixpoint .",
    "hence , since @xmath664 is a _ least _ fixpoint , we obtain @xmath665 . since @xmath666 by assumption , we conclude that @xmath659 , as required .    combining prop .",
    "[ p : eucafcfixpoint ] and lemma  [ l : gencontrule ] now immediately gives :    p : contextrules for any elements @xmath181 of a @xmath15-algebra @xmath86 , we have    1 .   if @xmath182 , then @xmath183 , 2 .   if @xmath184 , then @xmath185 .",
    "l : nnf any @xmath15-formula is equivalent to a @xmath15-formula in negation normal form .",
    "we first inductively define a ` formal negation ' @xmath667 for any @xmath15-formula @xmath11 :    * @xmath668 , * @xmath669 , * @xmath670 , * @xmath671 , * @xmath672 , * @xmath673 , * @xmath674 .",
    "clearly , for any @xmath15-formula @xmath10 , the formula @xmath675 is equivalent to @xmath676 . thus , given an arbitrary @xmath15-formula @xmath11 , we may replace all negations that occur in @xmath11 by formal negations , after which we obtain an equivalent formula in negation normal form .",
    "note that in this proof , we only needed binary operations @xmath13 and @xmath63 in the negation normal form .",
    "however , later in the completeness proof , the ternary operations @xmath13 and @xmath63 will come up , which is why we included them in the definition of negation normal form anyway .",
    "l : diamstep let @xmath86 be a modal algebra with dual frame @xmath195 . if @xmath192 , @xmath196 , and @xmath194 , then there exists @xmath197 such that @xmath198 and @xmath193 .",
    "note that the set @xmath677 is an ideal in @xmath86 which does not contain @xmath678 . by the ultrafilter principle , choose an ultrafilter @xmath679 containing @xmath678 which is disjoint from this ideal . by construction , @xmath198 .",
    "l : charform for any set of formulas @xmath201 and points @xmath202 , we have @xmath206    since @xmath680 is an ultrafilter , we have @xmath681 iff for all @xmath682 , @xmath683 , and for all @xmath684 , @xmath685 .",
    "the latter says precisely that @xmath686 .",
    "l : jump let @xmath201 be a finite set of formulas , let @xmath207 , and let @xmath11 , @xmath10 , and @xmath208 be formulas . for any @xmath196 such that @xmath209 , there exists @xmath210 such that @xmath211 and @xmath212 .    since @xmath687",
    ", we have @xmath688 . by proposition  [ p :",
    "contextrules ] , @xmath689 . by the stone ultrafilter theorem ,",
    "pick @xmath680 such that @xmath690 . by lemma  [ l : charform ] , @xmath211 .",
    "l : finiteclosure the closure of a finite set of @xmath15-formulas is finite .    given a finite set of @xmath15 formulas , @xmath213 , define the set @xmath691 obtained by first applying each of the rules of definition  [ d : closure ] to elements of @xmath213 , and then adding all subformulas .",
    "the set @xmath691 is easily seen to be closed and finite .",
    "[ l : afunravel ] for any elements @xmath169 of a @xmath15-algebra @xmath86 , we have @xmath692    write @xmath693 . by proposition  [ p : eucafcfixpoint ] , @xmath694 . using this fact and ( [ arfix ] ) , we have @xmath695 therefore , @xmath696    l : wellformed the one - step unravelling of a well - formed partial tableau @xmath3 is well - formed .",
    "all conditions in definition  [ d : wellformed ] except for ( g ) follow immediately from the definitions . let @xmath157 be a leaf of @xmath3 , @xmath294 the active index at @xmath157 , and @xmath697 a child of @xmath157 in the one - step unravelling of @xmath3 .",
    "let @xmath698 be such that @xmath699 .",
    "we need to show that @xmath700 .",
    "we distinguish three cases :    * * case @xmath340 .",
    "* by definition of @xmath294 , we have @xmath701 , but @xmath702 .",
    "this can only happen when @xmath703 , so in particular @xmath337 . by well - formedness of @xmath3",
    ", we have @xmath704 , so @xmath705 . also , since @xmath272 , we have @xmath706 . from lemma  [ l : afunravel ] , it follows that @xmath707 , so we obtain @xmath708 .",
    "this is enough , since @xmath709 by definition . *",
    "* case @xmath710 . *",
    "if @xmath305 , then @xmath711 only if @xmath313 , and it is true by construction that @xmath712 . if @xmath304 , note that @xmath713 by construction . also , @xmath318 since @xmath714 . again using lemma  [ l : afunravel ] , @xmath715 .",
    "* * case @xmath332 . * if @xmath716 , then , since @xmath699 , by rule ( 5 ) in definition  [ d : onestepunravel ] , we must have @xmath717 .",
    "in particular , @xmath718 .",
    "if @xmath337 , then , since @xmath719 and @xmath720 by well - formedness of @xmath3 , we have @xmath721 . since @xmath272 , we have @xmath722 . since @xmath723 and @xmath724 lie in @xmath266 , we also have @xmath723 and @xmath724 in @xmath275 . as before , @xmath725 , so @xmath726 .",
    "l : truthlemma[truth lemma ] for all @xmath359 and @xmath357 , if @xmath360 , then @xmath361 .    by induction on the complexity of @xmath362 .",
    "the base cases @xmath727 and @xmath728 are clear , and the cases @xmath729 and @xmath730 are immediate from the induction hypothesis .    @xmath731 .",
    "suppose that @xmath732 . since @xmath733 , by construction @xmath157 has a child @xmath697 with @xmath734 .",
    "the induction hypothesis gives @xmath735 .",
    "if there is a successor @xmath737 of @xmath157 such that @xmath738 , then by the induction hypothesis applied to @xmath739 , we have @xmath740 , so @xmath741 since @xmath742 is an ultrafilter . since @xmath742 is an @xmath189-successor of @xmath275",
    ", we get @xmath743 , so @xmath744 since @xmath275 is an ultrafilter . since @xmath745",
    ", we have @xmath746 .",
    "suppose that @xmath748 .",
    "we need to show that @xmath749 , i.e. , that @xmath750 .",
    "if @xmath751 , then @xmath752 by the induction hypothesis and we are done . otherwise , we have @xmath753 , and since @xmath754 by proposition  [ p : eucafcfixpoint ] , we have @xmath755 . in particular , @xmath756 , and @xmath757 by the induction hypothesis . also , since @xmath758 , there is a child @xmath759 of @xmath157 such that @xmath760 . by the induction hypothesis , @xmath761 .",
    "we will show that @xmath762 , by exhibiting a finite path @xmath763 such that @xmath764 for all @xmath765 and @xmath766 .    if @xmath767 , we are done immediately since then @xmath768 by the induction hypothesis , and we already saw that @xmath761 .",
    "assume @xmath769 , so @xmath770 .",
    "by rule ( 1 ) in definition  [ d : onestepunravel ] , since @xmath771 , there exists @xmath251 such that @xmath772 and @xmath773 . by chance because of rule ( 5 ) in definition  [ d : onestepunravel ] , then since @xmath774 , we can replace @xmath759 by its successor @xmath775 , for @xmath776 : to this node @xmath777 , rule ( 5 ) for @xmath778 does not apply and so , if we still have that @xmath779 , then there exists @xmath780 such that @xmath781 and @xmath782 . ] also , since in general @xmath783 , we have @xmath784 .",
    "suppose by induction that we have constructed a finite path @xmath763 such that @xmath785 and @xmath786 for all @xmath787 .",
    "then @xmath788 , so by construction of the tableau , there is a successor @xmath789 of @xmath790 such that @xmath791 .",
    "if @xmath792 we are done , otherwise we will have again @xmath793 and @xmath794 .",
    "if , by continuing this process , we would never reach a node @xmath790 with @xmath795 , we would obtain an infinite path @xmath363 starting in @xmath759 with @xmath786 for all @xmath365 , which is impossible by lemma  [ l : noloops ] .",
    "suppose that @xmath797 .",
    "we construct an infinite path with @xmath11 holding everywhere and @xmath10 holding infinitely often .",
    "let @xmath798 .",
    "since @xmath799 , we have @xmath767 , so @xmath768 by the induction hypothesis .",
    "since @xmath227 is closed , @xmath800 . by construction , there exists a child @xmath801 of @xmath157 such that @xmath802 . by the @xmath13-case ,",
    "pick a finite path @xmath803 such that @xmath804 for all @xmath805 and @xmath806 . by the induction hypothesis , @xmath807 for all @xmath805 and @xmath808 . continuing this process",
    ", we obtain an infinite path @xmath363 and an infinite sequence @xmath809 such that @xmath807 for all @xmath60 and @xmath810 for all @xmath33 .    @xmath811 .",
    "suppose that @xmath812 .",
    "pick a finite @xmath30-path @xmath813 such that @xmath814 for all @xmath765 and @xmath815 .",
    "we prove that @xmath816 for each @xmath817 $ ] .",
    "first note that since @xmath818 , the induction hypothesis for @xmath11 gives @xmath819 . since @xmath820",
    ", we get @xmath821 .",
    "now suppose that @xmath822 for some @xmath823 .",
    "since @xmath824 , we have @xmath825 by the induction hypothesis on @xmath10 .",
    "also , since @xmath826 , we have @xmath827 . since @xmath828 and @xmath829 , we get @xmath830 . therefore , @xmath831 , so @xmath832 .",
    "we conclude that @xmath833 , as required .",
    "suppose that @xmath835 .",
    "we need to show that ( i ) @xmath836 and ( ii ) @xmath837 .",
    "\\(i ) let @xmath363 be an infinite @xmath30-path with @xmath364 .",
    "we need to show that either @xmath807 for some @xmath365 , or the path is not @xmath838-fair , i.e. , there exists @xmath839 such that @xmath840 for all @xmath841 .",
    "suppose that @xmath842 for all @xmath365 . by the induction hypothesis , @xmath843 for all @xmath365 . by rule",
    "( 1 ) in definition  [ d : onestepunravel ] , there exists @xmath251 such that @xmath844 . for all @xmath365 , since @xmath843 , we have @xmath272 . by lemma  [ l : noloops ] , pick @xmath845 such that , for all @xmath841 , we have @xmath846 , and @xmath847 for all @xmath270 .",
    "in particular , for all @xmath841 , we have that @xmath848 , the active index in the one - step unravelling at @xmath849 .",
    "hence , for all @xmath841 , we must have @xmath850 , for otherwise we would get @xmath851 by rule ( 7 ) in definition  [ d : onestepunravel ] . by the induction hypothesis , @xmath840 for all @xmath841 .",
    "\\(ii ) suppose that @xmath852 .",
    "we need to show that @xmath853 . by the induction hypothesis , @xmath854 ,",
    "so @xmath753 .",
    "since also @xmath835 , we obtain @xmath855 .",
    "let @xmath737 be a successor of @xmath157 .",
    "then @xmath856 , since @xmath742 is an @xmath189-successor of @xmath275 , @xmath745 , and @xmath857 .",
    "by the argument from the case @xmath811 ( see above ) , we get @xmath858 , as required .",
    "l : noloops for all @xmath357 , @xmath251 , and infinite @xmath30-paths @xmath363 with @xmath364 , there exists @xmath365 such that    * if @xmath267 , then @xmath366 . * if @xmath367 , then either @xmath366 , or for all @xmath368 , @xmath369 .",
    "let @xmath357 and @xmath859 an infinite @xmath30-path with @xmath364 . for @xmath365 , we define @xmath860 i.e.",
    ", @xmath861 is the active index at @xmath862 in its one - step unravelling .",
    "we first prove the following claim .",
    "[ c : finiteak ] for each @xmath863 , the set @xmath864 is finite .",
    "[ c : finiteak ] . by induction on @xmath330 .",
    "assume @xmath865 is finite for all @xmath866 .",
    "choose @xmath867 such that @xmath868 is contained in @xmath869 $ ] .",
    "( in particular , if @xmath870 , we may simply choose @xmath871 . ) thus , for any @xmath872 , we have @xmath873 for all @xmath270 , so @xmath874 .",
    "therefore , for all @xmath872 , @xmath875 , because in the one - step unravelling of the partial tableau , the relevance set at position @xmath330 can only be updated when @xmath876 .",
    "write @xmath877 .",
    "we now prove the following .",
    "[ c : distincttypes ] for any distinct @xmath878 in @xmath879 , @xmath880 and @xmath881 have distinct @xmath201-types .",
    "[ c : distincttypes ] .",
    "let @xmath882 for some @xmath883 and @xmath884 .",
    "since @xmath885 and @xmath886 , we have @xmath887 , so @xmath888 .",
    "also , since @xmath889 for all @xmath890 , we have @xmath891 .    * * case @xmath716 . * since @xmath892",
    ", we must have @xmath893 for all @xmath890 .",
    "since @xmath874 if @xmath872 , we get @xmath894 . by the construction of the one - step unravelling , case @xmath305 , we then obtain @xmath895 for all @xmath896 .",
    "moreover , @xmath897 , so @xmath898 .",
    "since @xmath899 , lemma  [ l : charform ] gives that @xmath900 .",
    "* * case @xmath337 .",
    "* let us write @xmath517 for the formula @xmath901 , and @xmath200 for @xmath902 .",
    "we show first that @xmath903 , by distinguishing three sub - cases . * * if @xmath904 , then @xmath903 by construction . * * if @xmath905 and @xmath906 , so @xmath907 , then by the choice of @xmath200 we have @xmath908 .",
    "note that @xmath909 , so @xmath903 .",
    "* * if @xmath905 and @xmath910 , then @xmath911 , and also , by well - formedness , we have @xmath912 . in particular , @xmath913 .",
    "note that @xmath914 , because , in the one - step unravelling of the node @xmath915 , @xmath517 was added to all relevance sets @xmath916 for @xmath917 , by rule ( 3 ) in definition  [ d : onestepunravel ] , and thus @xmath517 also lies in any relevance sets that appeared later , by rule ( 1 ) .",
    "therefore , since @xmath918 and @xmath200 have the same type with respect to @xmath919 , we obtain @xmath903 .",
    "+ since @xmath920 , we must have @xmath921 , so @xmath922 . applying lemma  [ l : afunravel ] , @xmath923 .",
    "in particular , @xmath924 , since @xmath925 is an @xmath189-successor of @xmath200 .",
    "now , because @xmath926 , we must have @xmath927 by rule ( 6 ) in definition  [ d : onestepunravel ] .",
    "therefore , @xmath928 . in particular , @xmath898",
    ", so @xmath929 by lemma  [ l : charform ] .",
    "this concludes the proof of claim  [ c : distincttypes ] .    from claim  [ c : distincttypes ] , since only @xmath930 @xmath201-types exist , it follows that @xmath931 . since @xmath932 \\cup ( a_k \\cap [ { { \\tilde{t}}},\\infty))$ ] , from this",
    "we can conclude that @xmath933 .",
    "this concludes the proof of claim  [ c : finiteak ] .    by claim  [ c : finiteak ] , define @xmath934 . if @xmath716 , then @xmath935 , so we must have @xmath936 , and we can choose @xmath937 .",
    "if @xmath337 , then either there exists @xmath938 such that @xmath939 , or otherwise @xmath940 for all @xmath941 , in which case we can choose @xmath937 .",
    "t : rootedcompleteness for every consistent @xmath117-formula @xmath159 , there exists a @xmath25-coloured tree such that for some node @xmath125 , @xmath370 .",
    "first notice that if a @xmath117-formula @xmath11 is consistent , then @xmath942 is also consistent .",
    "indeed , interpreting @xmath11 in rooted @xmath15-algebras , from @xmath943 we get @xmath944 , so that @xmath942 is equal to @xmath119 , and @xmath134 is an axiom .",
    "now , if we apply the above tableau construction to @xmath942 , we get a tree model where @xmath11 holds somewhere and @xmath119 holds only in the root .    for the binary case",
    ", we indicate the elements of the proof that are different from the case treated in the previous subsection .",
    "the fischer - ladner closure of a finite set of formulas is so modified :    [ d : b - closure ] a set of @xmath15 formulas @xmath213 is called ( fischer - ladner ) _ closed _ if the following hold :    * @xmath214 . * if @xmath215 , then @xmath216 for any subformula @xmath217 of @xmath11 . * if @xmath945 , then @xmath946 and @xmath947 . *",
    "if @xmath218 , then @xmath219 .",
    "* if @xmath220 , then @xmath221 . * if @xmath222 , then @xmath223 , * if @xmath224 , then @xmath225 .",
    "the _ closure _ of a set of @xmath15 formulas is the smallest closed set containing it .",
    "lemma  [ l : finiteclosure ] still holds ; we can repeat definition  [ d : charform ] and prove lemma  [ l : charform ] and lemma  [ l : jump ] for binary @xmath15-algebras .",
    "we can also restate definition  [ d : partialtableau ] , with the only obvious modification that the partial tableau is now based on a finite _ binary _ tree @xmath3 .",
    "since the axioms for @xmath139 and the axiom @xmath948 are in sahlqvist form , by standard modal logic machinery  @xcite , we have that in the dual spaces of binary @xmath15-agebras the operators @xmath139 correspond to unary functions ( to be called @xmath949 ) whose union is the relation @xmath189 dual to the modal operator @xmath14 . with this information",
    ", we can modify definition  [ d : onestepunravel ] as follows :    [ d : b - onestepunravel ] we define the _ ( binary ) one - step unravelling _ of a well - formed partial tableau @xmath246 . for each leaf @xmath157 of @xmath3 , add two children @xmath950 and @xmath951 of @xmath157 as follows .",
    "we again choose an auxiliary ultrafilter @xmath290 .",
    "let @xmath952 if @xmath291 for all @xmath251 , define @xmath292 .",
    "otherwise , put @xmath293 we call @xmath294 the _ active index _ at @xmath157 . by well - formedness",
    ", we have @xmath297 .",
    "therefore , by lemma  [ l : jump ] , pick @xmath290 such that @xmath298 and @xmath299 .",
    "we let @xmath950 be @xmath953 and @xmath951 be @xmath954 .    for each @xmath778",
    "such that @xmath955 , by the revised definition  [ d : b - closure ] of a closed set , we have that there is @xmath956 such that @xmath957 and so @xmath958 : we call @xmath959 a _ @xmath778-designated successor _ of @xmath157 . in case @xmath305 ,",
    "notice the following ( write @xmath300 ) .",
    "since the partial tableau is well - formed and @xmath314 , we have @xmath315 . since @xmath309 and @xmath316 , we have @xmath317 , so @xmath318",
    ". also , @xmath319 by construction . applying the general fact ( proposition  [ p : eucafcfixpoint ] ) that @xmath320",
    ", we obtain @xmath321 ; thus for @xmath960 or @xmath961 , we have that @xmath962 .",
    "thus we can assume that if @xmath963 , the @xmath778-designated successor @xmath959 of @xmath157 is such that @xmath962 .    the word @xmath964 ( @xmath498 ) is defined as an update of the word @xmath237 , obtained by consecutively applying the following steps :    1 .",
    "let @xmath965 . for each @xmath966",
    ", add one letter , @xmath328 , to the end of the word , where @xmath329 .",
    "2 .   for each position @xmath330 , put @xmath331 3 .   for each position @xmath332 , add the formula @xmath333 to the set @xmath285 .",
    "4 .   for each position",
    "@xmath330 such that @xmath967 , change @xmath284 into @xmath243 .",
    "5 .   for each position",
    "@xmath330 , if @xmath335 and @xmath959 is not a @xmath778-designated successor of @xmath157 ( for @xmath968 ) , change @xmath284 into @xmath243 .",
    "if , after this operation , it turns out that @xmath969 , then @xmath283 must be treated as a new eventuality , so that ( as in item 1 above ) @xmath970 is appended to the end of the word ( where @xmath971 ) .",
    "6 .   for each position",
    "@xmath330 , if @xmath337 , @xmath972 , and @xmath339 , change @xmath284 into @xmath242 .",
    "7 .   for each position",
    "@xmath340 , if @xmath337 , @xmath341 , @xmath973 and @xmath343 , change @xmath284 into @xmath241 .",
    "lemma  [ l : wellformed ] still holds ; definition  [ d : modelconstruction ] can be restated word for word and lemmas  [ l : truthlemma ]  and  [ l : noloops ] are proved as before .",
    "thus , any consistent formula of @xmath15 enriched with @xmath974 and @xmath975 is satisfied by some colouring of the full binary tree .",
    "now the same proof as in theorem  [ t : rootedcompleteness ] can be used to prove theorem  [ t : binarycompleteness ] .",
    "l : justequations for any quantifier - free @xmath373-formula @xmath380 , there exists an @xmath373-term @xmath381 such that @xmath382 ; similarly , there exists an @xmath373-term @xmath383 such that @xmath384 .",
    "we first construct the term @xmath976 by induction on the complexity of @xmath11 , which , we may assume , is built up from equalities of @xmath373-terms by consecutively applying the boolean connectives @xmath977 and @xmath18 from the first - order language . if @xmath11 is an atomic formula , then it has the form @xmath444 for @xmath373-terms @xmath978 and @xmath979 , and we may define @xmath980 .    if @xmath11 is of the form ` @xmath981 ' , we can clearly put @xmath982 , where @xmath983 and @xmath984 are defined by induction . here",
    "we use that , for any elements @xmath678 , @xmath606 in a boolean algebra , @xmath985 and @xmath986 if , and only if , @xmath987 .    for the case of negation ,",
    "notice first that , for any element @xmath678 in a fair ctl algebra @xmath86 , we have that @xmath988 indeed , one direction follows from the last axiom for @xmath119 , and the other direction follows from the first axiom for @xmath119 and the fact that @xmath989 , which easily follows from the fixpoint axiom for @xmath13 .",
    "now that we have successfully defined @xmath976 for all @xmath373-formulas @xmath11 , we may put @xmath992 .",
    "then @xmath993 iff @xmath994 iff @xmath995 , which , by ( [ eq : elimnegation ] ) , is equivalent to @xmath996 , and the latter is equivalent to @xmath11 .        by definition of @xmath402 , we have @xmath1001 if , and only if , @xmath1002 . if @xmath1003 in @xmath399 , then by definition @xmath1004 .",
    "if @xmath454 has length @xmath52 and @xmath1005 , then @xmath1006 is an element of @xmath399 such that @xmath1007 and @xmath1003 .",
    "finally , @xmath1000 is surjective because for any node @xmath37 , there exists a path from the root of @xmath29 to @xmath125 , @xmath1008 , so that @xmath1009 is an element of @xmath399 with @xmath1010 .",
    "p : subalgebra for any @xmath25-coloured tree @xmath405 , the algebra @xmath109 is isomorphic to a subalgebra of @xmath406 , via an isomorphism which in particular sends @xmath407 to @xmath408 for each @xmath114 in @xmath25 .",
    "let @xmath1011 be the function given by @xmath1012 , where @xmath1000 is the surjective p - morphism from lemma  [ l : omegaunravel ] .",
    "since @xmath1000 is surjective , @xmath33 is injective , and it is obviously a homomorphism of boolean algebras .",
    "it is straightforward to check directly that @xmath33 preserves the operators @xmath119 , @xmath14 , @xmath13 and @xmath8 , or , alternatively , one may refer to the general fact that the inverse image map of a p - morphism preserves any operators that are definable in the modal @xmath0-calculus , because modal @xmath0-formulas are bisimulation - invariant .",
    "therefore , the algebra @xmath109 is isomorphic to its image under @xmath33 , which is a subalgebra of @xmath406 .",
    "recall that in the proof sketch in the paper , the formula @xmath390 has been defined from @xmath11 by replacing each atomic formula @xmath444 by the formula @xmath445 , where @xmath1013 is the term defined inductively in the proof sketch .",
    "it remains to check that this @xmath390 satisfies the stated property .",
    "the only non - trivial step is that of atomic formulas . for this ,",
    "the crucial observation is that , for any @xmath373-term , @xmath25-coloured tree @xmath405 and any node @xmath1014 , we have @xmath1015 \\models_{{\\text{mso } } } \\dot{t},\\ ] ] where @xmath1016 $ ] is the extension of @xmath112 by making the first - order variable @xmath157 true in the node @xmath737 .",
    "the equivalence ( [ eq : termeq ] ) is proved by an induction on the complexity of the term @xmath60 , using the definition of the operations on the complex algebra @xmath109 and the definition of @xmath1017 .",
    "it follows immediately from ( [ eq : termeq ] ) that indeed @xmath1018 as required .",
    "p : auttoterm for any non - deterministic modal automaton @xmath391 over @xmath25 with set of states @xmath394 , there exists an @xmath373-term @xmath393 such that for any @xmath25-coloured tree @xmath405 , we have @xmath466      [ c : acceptance ] for any @xmath25-coloured tree @xmath405 , there is a bijection between successful runs @xmath1019 of @xmath391 on @xmath451 and valuations @xmath1020 that satisfy the following three properties :    1 .",
    "( initial ) @xmath1021 ; 2 .",
    "( transition ) for all @xmath454 , there is a unique @xmath1022 such that @xmath1023 , and moreover , for this @xmath411 , the set @xmath1024 is in @xmath1025 ; 3 .",
    "( success ) for all odd @xmath1026 and for any infinite path @xmath1027 in the tree such that @xmath1028 for infinitely many @xmath60 , there exists @xmath1029 such that @xmath1030 and @xmath1031 for some @xmath60 .",
    "[ c : acceptance ] .",
    "the claimed bijection is a restriction of the bijection between @xmath394-colourings @xmath1032 and valuations @xmath1033 . indeed , for any function @xmath1034 ,",
    "define @xmath1035 for each @xmath1022 .",
    "it is straight - forward to check that @xmath1036 verifies conditions ( 1 ) and ( 2 ) in the claim if , and only if , @xmath1019 verifies conditions ( 1 ) and ( 2 ) in the definition of a successful run ( def .",
    "[ d : automaton ] ) .    regarding condition ( 3 ) ,",
    "suppose first that @xmath1019 satisfies ( 3 ) in definition  [ d : automaton ] . if @xmath1027 is an infinite path , @xmath472 is odd and @xmath1028 for infinitely many @xmath60 , then by the pigeon - hole principle there is some @xmath411 with @xmath1037 and @xmath1031 for infinitely many @xmath60 .",
    "denote by @xmath1038 the unique path from the root @xmath201 of @xmath399 to @xmath759 , and extend this to an infinite path by defining @xmath1039 . since @xmath1019 satisfies ( 3 ) in definition",
    "[ d : automaton ] , there must exist a state @xmath411 with @xmath1040 and @xmath1041 for infinitely many @xmath60 . in particular , choosing a @xmath1042 with @xmath1043 , we see that @xmath1044 . thus , @xmath1036 satisfies ( 3 ) in the claim .",
    "conversely , it is clear that if @xmath1036 satisfies ( 3 ) in the claim , then @xmath1019 must satisfy ( 3 ) in definition  [ d : automaton ] .",
    "recall the terms @xmath1045 defined in the proof sketch in the paper .",
    "note that , for @xmath1046 , we have @xmath1047 under a valuation @xmath1048 if , and only if , condition ( @xmath1049 ) in claim  [ c : acceptance ] holds .",
    "therefore , putting @xmath1050 gives the required @xmath373-term .",
    "it suffices to prove , for each @xmath478 , that in all rooted @xmath15-algebras , @xmath1053 indeed , given this fact , from @xmath1054 , it will follow from the definition of @xmath385 that every universal formula is equivalent over @xmath385 to an existential one , so that @xmath385 is model complete .",
    "we first prove that ( [ eq : converseint ] ) is true in every rooted @xmath15-algebra of the form @xmath109 , where @xmath29 is a tree .",
    "let @xmath405 be any @xmath25-coloured tree , and suppose that @xmath1055 . since @xmath1056 embeds into @xmath1057 by proposition  [ p : subalgebra ] , and @xmath1058 is existential , we also have @xmath1059 . by proposition  [ p : concludeequiv ]",
    ", we obtain @xmath1060 . since @xmath1061 is universal and again @xmath1056 is a subalgebra of @xmath1057 , we conclude that @xmath1062 .      since we established above that ( [ eq : converseint ] ) holds in every rooted @xmath15-algebra of the form @xmath109 , where @xmath29 is a tree , the equation @xmath1066 is also valid in every such rooted @xmath15-algebra .",
    "therefore , by theorem  [ t : completeness ] , the equation @xmath1066 is valid in all rooted @xmath15-algebras .",
    "hence , ( [ eq : converseintuniversal ] ) holds in all rooted @xmath15-algebras , and thus also ( [ eq : converseint ] ) , as required .",
    "@xmath385 * is a co - theory of * @xmath117*. *    by ( * ? ? ?",
    "3.5.7 ) , every @xmath117-algebra embeds into an existentially closed @xmath117-algebra .",
    "therefore , to prove that @xmath385 is a co - theory of @xmath117 , it suffices to prove that every existentially closed @xmath117-algebra is a model of @xmath385 .",
    "let @xmath86 be an existentially closed @xmath117-algebra and let @xmath478 and @xmath1067 be arbitrary . by lemma",
    "[ l : extendalgebra ] ( proved below ) , there is an extension of @xmath86 where @xmath1068 holds . note that @xmath1068 is ( by first - order logic ) an existential sentence in the language @xmath1069 .",
    "thus , since @xmath86 is existentially closed , @xmath1068 holds in @xmath86 .",
    "l : extendalgebra let @xmath478 , with @xmath486 . for any rooted @xmath15-algebra @xmath86 and @xmath487",
    ", there is a rooted @xmath15-algebra @xmath488 which contains @xmath86 as a subalgebra such that @xmath489 .",
    "let @xmath86 be a rooted @xmath15-algebra and @xmath487 .",
    "consider the language @xmath1070 , where each @xmath1071 is a fresh constant symbol .",
    "note that it suffices to prove that the @xmath1069-theory @xmath1072 is consistent .",
    "indeed , any model @xmath488 of the theory @xmath1073 will contain a subalgebra isomorphic to @xmath86 , since any quantifier - free @xmath1069-formula is equivalent to an @xmath1069-formula of the form @xmath1074 by lemma  [ l : justequations ] .    in order to prove that @xmath1073 is consistent , by the compactness theorem of first - order logic",
    ", it suffices to prove that every finite subset @xmath1075 of @xmath1073 is consistent .",
    "the crucial step is the following claim .",
    "[ c : consistentsubset ] .",
    "since @xmath1074 holds in the rooted @xmath15-algebra @xmath86 , the completeness theorem  [ t : completeness ] gives that there exists a tree model @xmath405 of @xmath1076 .",
    "since @xmath451 is bisimilar to @xmath405 by lemma  [ l : omegaunravel ] , @xmath451 is also a model of @xmath1076 , i.e. , @xmath1080 .",
    "moreover , by proposition  [ p : concludeequiv ] , @xmath1081 , so that @xmath1082 is a model of the theory @xmath1083 .    now , given an arbitrary finite subset @xmath1075 of @xmath1073 , list the finitely many terms @xmath1084 occurring in @xmath1075 .",
    "put @xmath1085 and @xmath1086 . by claim  [ c : consistentsubset ] , pick a model @xmath86 of @xmath1087 . then in particular @xmath1088 for each @xmath33 , since @xmath1089 .",
    "hence , @xmath86 is a model of @xmath1075 .",
    "let @xmath1090 be the formula @xmath1091 $ ] .",
    "by lemma  [ l : justequations ] , convert @xmath11 into an equation @xmath1092 .",
    "let @xmath1093 be the existential formula corresponding to @xmath1094 , as in  .",
    "notice that @xmath10 is equivalent to @xmath1095 , using proposition  [ p : concludeequiv ] and the fact that @xmath11 is equivalent to @xmath1095 are equivalent on @xmath392-unravelled trees : the only subset @xmath114 of a tree @xmath29 which remains a singleton in the unravelling @xmath399 is the singleton @xmath1096 , where @xmath124 is the root of @xmath29 .",
    "since one of the axioms of @xmath385 says that @xmath1097 $ ] , this means that in the models of @xmath385 the only atom is @xmath119 .",
    "p : b - auttoterm for any parity tree automaton @xmath523 over @xmath520 with set of states @xmath394 , there exists an @xmath502-term @xmath393 such that for any @xmath25-colouring @xmath524 , we have @xmath525    as in the proof of proposition  [ p : auttoterm ] , one encodes the parity acceptance condition into a @xmath118-formula . for a triple @xmath1098 ( with @xmath1099 ) ,",
    "write @xmath1100 for @xmath1101 the required @xmath502-term @xmath393 is taken to be @xmath470 , where"
  ],
  "abstract_text": [
    "<S> the main focus of this paper is on bisimulation - invariant mso , and more particularly on giving a novel model - theoretic approach to it . in model theory , </S>",
    "<S> a model companion of a theory is a first - order description of the class of models in which all potentially solvable systems of equations and non - equations have solutions . we show that bisimulation - invariant mso on trees gives the model companion for a new temporal logic , `` fair ctl '' , an enrichment of ctl with local fairness constraints . to achieve this </S>",
    "<S> , we give a completeness proof for the logic fair ctl which combines tableaux and stone duality , and a fair ctl encoding of the automata for the modal @xmath0-calculus . </S>",
    "<S> moreover , we also show that mso on binary trees is the model companion of binary deterministic fair ctl .    </S>",
    "<S> modal and temporal logic , monadic second order logic , tree automata , model companions </S>"
  ]
}
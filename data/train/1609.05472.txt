{
  "article_text": [
    "parameterized complexity extends classical complexity theory by considering not only the input length but also one or more additional parameters like solution size or structural measures like treewidth .",
    "a parameterized problem is a language @xmath1 , where @xmath2 is an alphabet with two or more symbols , and the second component is called the parameter of the problem .",
    "kernelization is a well - known and important topic in parameterized complexity @xcite .",
    "it is a theoretical formalization of efficient preprocessing to deal with hard languages .",
    "the polynomial time preprocessing , which is a kernelization , is used to shrink the size of instance and output an equivalent instance , and the output of the preprocessing is called kernel .",
    "another significant topic in parameterized complexity is fixed - parameter tractable .",
    "a parameterized language @xmath3 is fixed - parameter tractable if there exists an algorithm to decide whether @xmath4 in time @xmath5 , where @xmath6 is an arbitrary function depending only on @xmath7 , and the corresponding complexity class is called fpt .",
    "there is an important connection between kernelizaiton and fpt , that is , a problem has kernel if and only if the problem is in fpt .",
    "unless otherwise stated , we will use following definition in this paper .",
    "functions @xmath8 ,",
    "@xmath9 , @xmath10 are nondecreasing . @xmath11 and @xmath12 are classes of functions .",
    "( kernelization ) a kernelization for a parameterized language @xmath1 is a polynomial - time turing machine @xmath13 that given any instance @xmath14 returns an instance @xmath15 such that @xmath16 if and only if @xmath17 and with @xmath18 .",
    "we also call the kernelization as @xmath6-sized kernelization .",
    "we say @xmath3 has an @xmath11-sized kernelization if @xmath3 has an @xmath6-sized kernelization for some @xmath19 .",
    "for example , if @xmath20 is polynomially ( linearly ) bounded in @xmath7 , then @xmath13 is a polynomial ( linearly ) kernelization and we say the language @xmath3 has a polynomial ( linearly ) kernel .",
    "kernelization requires that the input and output instances belong to the same language . without this requirement",
    ", the concept of kernelization transforms into the concept of compression .",
    "( compression ) a compression for a parameterized language @xmath21 is a polynomial - time turing machine @xmath13 that given any instance @xmath14 returns an instance @xmath22 such that @xmath4 if and only if @xmath23 ( @xmath24 is a language ) and with @xmath25 .",
    "we also call the compression as @xmath6-sized compression .    the way we define @xmath11-sized kernelization can be also used to define @xmath11-sized compression .",
    "compression is a general type of kernelization . in some languages",
    ", we can probably shrink the instances into smaller size with compression rather than kernelization .",
    "for example , wahlstrm @xcite proved that @xmath26-cycle problem has a @xmath27-sized compression , but a polynomial kernel has not been found so far .",
    "as more and more techniques for kernelization were found .",
    "people realized that it was hard for some problems , such as @xmath7-path problem , which asks whether a graph has a simple path of length @xmath7 , to obtain small kernels , such as polynomial kernel , by using existing techniques .",
    "thus , to figure out why these problems are so hard to get small kernels , researchers proposed an impressive hardness theory to prove lower bounds for kernel size . in their paper @xcite , bodlaender etc .",
    "firstly raised two classes of problems .",
    "then , they proved that the problems in one class ( including @xmath7-path ) have no polynomial kernels , unless or(sat ) can compress , and that the problems in another class have no polynomial kernels , unless and(sat ) can compress .",
    "fortnow and santhanam @xcite proved that or(sat ) can not be compressed , unless co - np @xmath28 np / poly and the polynomial hierarchy collapse .",
    "however , and(sat ) had remained an open problem for five years until it was settled by drucker @xcite , based on the assumption that there is no nonuniform , statistical zero - knowledge proofs for np languages , which is a weaker one compared with co - np @xmath29 np / poly .",
    "another insightful work of kernel lower bounds is attributed to dell and van melkebeek @xcite .",
    "they gave a framework for proving kernel lower bounds for problems that do admit some polynomial kernelization .",
    "for example , they showed that d - sat has no @xmath30 kernel unless co - np @xmath28 np / poly and polynomial hierarchy collapse .",
    "dell and marx @xcite , hermelin and wu @xcite and bodlaender etc .",
    "@xcite also made contributions to the hardness theory .",
    "since then , a large amount of researches have been conducted to solve various concrete problems by employing these frameworks @xcite .",
    "in fact , all of the kernelization lower bound frameworks mentioned above are also fit for compression lower bound .",
    "compression ( kernelization ) lower bound also means that the smallest size of the output instance can be obtained by compression ( kernelization ) .",
    "however , there are some relaxed notions of kernelization ( including turing kernelization ) whose lower bound are not ruled out by any existing techniques , and these relaxed notions had been proposed @xcite before the kernelization lower bound framework was raised .",
    "the relaxed notions allow the kernelization algorithm to output many small independent instances .",
    "for example , fernau etc .",
    "@xcite found the first problem , namely leaf out - tree(@xmath7 ) , which has no polynomial kernel unless co - np @xmath28 np / poly .",
    "however , they constructed a polynomial time algorithm for the problem whose input is an instance of leaf out - tree(@xmath7 ) , whose output is @xmath31 independent kernels of @xmath32-sized , and where the input is a yes instance if and only if at least one output instance is yes instance ( @xmath31 is the vertices number of the input instance and @xmath7 is the parameter ) .",
    "because the status of the input instance is equivalent to the disjunction of the status of the output kernels , this polynomial time algorithm is called disjunctive kernelization , which is a type of relaxed notion of kernelization , and the output of this polynomial time algorithm is called disjunctive kernel . with the help of the disjunctive kernelization , we can design an algorithm for the original problem by solving each kernel in turn , and this algorithm only needs to deal with at most @xmath31 independent @xmath32-sized kernels .",
    "therefore , this kind of relaxed kernel is still useful in practice .    according to the definition of disjunctive kernelization ,",
    "it is easy to understand other relaxed notions of kernelizations , including conjunctive kernelization , truth - table kernelization and turing kernelization .",
    "the most and least powerful of these three relaxed notions are turing kernelization and conjunctive kernelization , respectively . in this paper",
    ", we mainly discuss the most general relaxed notion of kernelization , i.e. the turing kernelization .",
    "the framework which is fit for turing kernel lower bounds can also be suitable for other types of kernel lower bounds .",
    "we recall the definition of turing kernelization given by @xcite below .",
    "( @xmath6-oracle for parameterized language ) an @xmath6-oracle for a parameterized language @xmath24 is an oracle that takes as input @xmath14 with @xmath33 , @xmath34 ( @xmath31 is some integer ) and decides whether @xmath35 in constant time .",
    "( turing kernelization ) a parameterized language @xmath1 is said to have an @xmath6-sized turing kernelization if there is a turing machine which given an input @xmath14 together with an @xmath20-oracle for @xmath3 decides whether @xmath4 in time polynomial in @xmath36 .",
    "we say @xmath3 has an @xmath11-sized turing kernelization if @xmath3 has an @xmath6-sized turing kernelization for some @xmath19 .",
    "like the way define compression , we define turing compression in the same way by allowing the oracle queries to be any other languages",
    ". we will define these variants below .",
    "( @xmath6-oracle for classic language ) an @xmath6-oracle for a classic language @xmath24 is an oracle that takes as input @xmath37 with @xmath38 ( @xmath31 is some integer ) and decides whether @xmath39 in constant time .",
    "( turing compression ) a parameterized language @xmath1 is said to have an @xmath6-sized turing compression if there is a turing machine which given an input @xmath14 together with an @xmath20-oracle for a classic language @xmath24 decides whether @xmath4 in time polynomial in @xmath36 .",
    "we define @xmath11-sized turing compression according to the way we define @xmath11-sized turing kernelization .",
    "turing kernelization is more powerful than other relaxed notions of kernelizations .",
    "it could even adaptively create reduced instances .",
    "so far , people have found some problems that have polynomial turing kernels , but do not have polynomial kernels @xcite .",
    "finding framework for lower bounds of turing kernels has become an important open problem in parameterized complexity community , and it has been proposed as an open problem in different occasions @xcite . in particular , during dagstuhl seminars on kernels in 2014 , cygan etc .",
    "@xcite gave a list of open problems and ranked them according to their importance and possible hardness , and this problem is one of the most important and difficult problems in the list .",
    "unfortunately , unlike lower bounds of kernels , until now , there is no technique that can deal with lower bounds of turing kernels ( even for truth - table kernels and disjunctive kernels ) for any fpt problem modulo any reasonable complexity hypothesis .",
    "the positive aspect is that the polynomial conjunctive kernels can be refuted by modifying the framework of the lower bounds of many - one kernels @xcite .",
    "there are also some other works related to this problem .",
    "hermelin etc .",
    "@xcite introduced a new complexity hierarchy for parameterized problems named wk / mk - hierarchy .",
    "the lowest hardness class in the hierarchy is wk[1 ] .",
    "they found some problems are complete for wk[1 ] , and conjectured that no wk[1]-complete problem admits a polynomial turing kernelization , because if there exists a polynomial turing kernelization for a wk[1]-complete problem , then all problems in wk[1 ] will have polynomial turing kernelizations .",
    "the situations of the wk[k]-complete problems are alike for all @xmath40 .",
    "jansen and marx @xcite studied the @xmath41-subgraph test and @xmath41-packing problems where @xmath41 is a class of graphs , and pointed out which classes @xmath41 make the two problems tractable in one of the following senses : polynomial - time solvable , admitting a polynomial many - one kernel or admitting a polynomial turing kernel .",
    "it is well - known that p and np - complete are both subsets of np .",
    "a natural question is whether there are languages between p and np - complete .",
    "( np - intermediate ) under the assumption of np @xmath42 p , languages that are in class np but are neither in the class p nor np - complete are called np - intermediate .    if we can find any problem in np - intermediate without any assumption , then np @xmath42 p. according to ladner s theorem @xcite , if np @xmath42 p , then there exist infinitely many np - intermediate problems . however , the problem constructed by ladner is artificial , and finding natural np - intermediate problems under the assumption np @xmath42 p is a longstanding open problem in computational complexity community .",
    "graph isomorphism and integer factorization are famous natural candidate np - intermediate problems .",
    "schning @xcite proved that if graph isomorphism is in np - complete , then polynomial hierarchy will collapse to the second level .",
    "babai @xcite announced a quasipolynomial time algorithm for graph isomorphism , which is a big breakthrough on this problem and also a convincing evidence showing that graph isomorphism is not in np - complete .",
    "integer factorization is known to be in both np and co - np , so the problem in np or conp would imply np @xmath43 conp .",
    "however , as far as we know , it has no impact on complexity assumption if these two problems are in p.    this example is come from the stack exchange . under the assumption of nexp",
    "@xmath42 exp .",
    "one the one hand , nexp @xmath42 exp means np @xmath42 p , and there is no sparse set in np - complete based on mahaney s theorem @xcite . on the other hand ,",
    "a proper padded version of nexp - complete problem is in np , but not in p , as that will contradict nexp @xmath42 exp .",
    "moreover , the problem is a sparse set .",
    "thus , the proper padded version of nexp - complete problem must be in np - intermediate .",
    "although this result is based on a widely believed assumption , the padded versions of problems are not so natural .",
    "in addition , the nexp - complete problems are not proverbial .",
    "there are some natural problems which have been proved in np - intermediate based on eth .",
    "for example , tournament dominating set problem @xcite , v - c dimension @xcite , densest @xmath7-subgraph with perfect completeness @xcite .",
    "although this type of candidate np - intermediate problems are very natural , eth is a very strong assumption .    * our results . * in this paper , we build a new bridge between parameterized complexity and structural complexity of computational complexity , and then use this bridge to construct some new frameworks .",
    "there are two main ideas in the frameworks .",
    "the first , if a parameterized problem is still ( np-)hard when restricting the parameter to a `` small '' function ( such as , logarithmic , polylogarithmic etc . )",
    "depending on the instance length , then this problem probably has no small ( turing ) compression . the second ,",
    "if a parameterized problem has a small compression , then we can obtain the constraint version of the parameterized problem by restricting the parameter to a `` small '' function depending on the instance length , then the constraint version problem probably can not be a ( np-)hard one .",
    "these frameworks have three main applications based on the assumptions that the polynomial hierarchy and the exponential hierarchy will not collapse .",
    "\\(1 ) these frameworks can obtain the turing compression ( kernel ) lower bounds of some important fpt problems by taking advantage of the fruitful research results in classic complexity theory .",
    "for example , the frameworks prove that edge clique cover has no polynomial turing compression unless the exponential hierarchy collapses to the second level , and has no linear turing compression unless the polynomial hierarchy collapses to the second level .",
    "thus , this paper solves an important open problem ( which mentioned in abstract ) in parameterized complexity .",
    "\\(2 ) these frameworks can also get better compression ( kernel ) lower bounds for these fpt problems . for example",
    ", the frameworks also prove that edge clique cover has no @xmath44 compression unless the polynomial hierarchy collapses to the third level ( matching the result in @xcite ) , and has no linear compression unless np = p. thus , the frameworks are also new ones to deal with many - one compression lower bounds .",
    "\\(3 ) these frameworks can find a large number of natural np - intermediate problems by taking advantage of the fruitful research results in parameterized complexity .",
    "for example , the problem of deciding whether @xmath45 vertices can be deleted from a @xmath31-vertices graph @xmath46 in order to turn it into a forest is in np - intermediate , unless exponential hierarchy collapses to the third level . in particular",
    ", if this problem is in np - complete then polynomial hierarchy collapses to the third level , and if this problem is in p then np @xmath28 dtime@xmath47 .",
    "thus , the paper makes some contributions to the longstanding open problem ( which mentioned in abstract ) in classic computational complexity .",
    "* organization .",
    "* section 2 gives preliminaries including other definitions that are needed in this paper .",
    "section 3 demonstrates the frameworks for solving ( turing ) compression lower bound problem and finding natural candidate problems in np - intermediate .",
    "section 4 applies these frameworks to concrete problems .",
    "section 5 is conclusion and final remarks .",
    "at first , we define the non - elementary tower function . let function @xmath48 be the non - elementary tower function , and @xmath49 , @xmath50",
    ". the inverse of @xmath51 would be the @xmath52 function , and @xmath53 , @xmath54 ) .",
    "@xmath55 equals to the least integer @xmath7 such that @xmath56 .",
    "we also use the o or o notations in the non - elementary tower function , for example , @xmath57 , @xmath58 etc .",
    "the running time of compression and turing compression is a polynomial function on input size . we will extend the time complexity from a polynomial function to some function @xmath59 , in order to get the definitions of @xmath59-compression and @xmath59-turing compression .",
    "[ compresion def1 ] ( @xmath59-compression ) a @xmath59-compression for a parameterized language @xmath1 is a @xmath60-time turing machine @xmath13 ( @xmath31 is the size of the input ) , which given any instance @xmath14 returns an instance @xmath22 such that @xmath4 if and only if @xmath23 ( @xmath24 is a language ) and with @xmath61 .",
    "we also say that parameterized language @xmath3 has an @xmath6-sized @xmath59-compression .",
    "we say @xmath3 has an @xmath6-sized @xmath12-compression if @xmath3 has an @xmath6-sized @xmath59-compression for some @xmath62 , @xmath3 has an @xmath11-sized @xmath59-compression if @xmath3 has an @xmath6-sized @xmath59-compression for some @xmath19 , @xmath3 has an @xmath11-sized @xmath12-compression if @xmath3 has an @xmath6-sized @xmath59-compression for some @xmath62 and @xmath19 .",
    "the parameter @xmath7 is smaller than the instance length @xmath63 in almost all important problems in parameterized complexity .",
    "thus , without loss of generality we assume that @xmath64 . the same as @xmath59-compression",
    ", we will give a definition of @xmath59-turing compression .",
    "( @xmath59-turing compression ) @xmath21 is said to have an @xmath6-sized @xmath59-turing compression if there is a turing machine which given an input @xmath14 together with an @xmath20-oracle for a classic language @xmath24 decides whether @xmath16 in time @xmath60 , where @xmath65 .",
    "we define @xmath6-sized @xmath12-turing compression , @xmath11-sized @xmath59-turing compression and @xmath11-sized @xmath12-turing compression similar to those in definition [ compresion def1 ] .    for a parameterized language",
    ", the parameter can be any number .",
    "if we restrict the parameter to some special function of the instance length , then the parameterized language will turn into a new language .",
    "we named this kind of languages constraint parameterized languages .",
    "@xmath66constraint parameterized language@xmath67 @xmath1 is a parameterized language .",
    "for all instance @xmath14 of @xmath3 , if we restrict the parameter @xmath7 to @xmath68 , then we get a constraint parameterized language @xmath24 , and @xmath69 .",
    "we say that @xmath24 is the @xmath6-constraint parameterized language of @xmath3 .",
    "we say @xmath24 is an @xmath11-constraint parameterized language of @xmath3 if @xmath24 is an @xmath6-constraint parameterized language of @xmath3 for some @xmath19 .",
    "the instances ( including yes instance and no instance ) of @xmath24 have the property that the parameter @xmath70 .",
    "we will not consider the instances whose formats do not satisfy this property ( turing machine is very easy to recognize the incorrect format instances ) .",
    "thus , we have @xmath71 , where @xmath72 and @xmath73 are the complement languages of @xmath3 and @xmath24 , respectively .    in this paper",
    ", we only consider that @xmath68 is a constraint number of @xmath7 , so we have @xmath74 for large enough @xmath63 .    @xmath66f - hard parameterized language@xmath67 @xmath1 is a parameterized language .",
    "if language @xmath75 is an @xmath6-constraint parameterized language of @xmath3 as well as @xmath24 is np - hard , then we call @xmath3 @xmath6-hard parameterized language .",
    "we define @xmath11-hard parameterized language similar to the definition of the @xmath11-constraint parameterized language .",
    "@xmath11 can be various kinds of function classes , such as logarithmic , polylogarithmic , fractional power etc .",
    "nexp ( exp ) is the set of decision problems that can be solved by a non - deterministic ( deterministic ) turing machine using time @xmath76 .",
    "the exponential hierarchy ( sometimes called exph ) is a hierarchy of complexity classes , which is an exponential time analogue of the well - known polynomial hierarchy ( sometimes called ph ) .",
    "( exponential hierarchy ) exponential hierarchy is the union of the language classes @xmath77 , where @xmath78 ( languages computable in nondeterministic time @xmath79 for some constant c with a @xmath80 oracle ) , and again @xmath81 , @xmath82 .",
    "it is commonly believed that ph and exph will not collapse .",
    "( @xmath6-sparse set ) set @xmath83 is @xmath6-sparse if @xmath84 for all but finitely many @xmath31 .",
    "we say @xmath85 is @xmath11-sparse if @xmath85 is @xmath6-sparse for some @xmath19 .",
    "people usually call polynomial - sparse set sparse set . in some papers",
    ", people also consider that set @xmath83 is @xmath6-sparse if @xmath86 for all @xmath31 .",
    "however , these two kinds of definitions have no difference when set @xmath85 is ( quasi)polynomial - sparse or subexponential - sparse .",
    "( c / f ) an advice function is a function @xmath87 .",
    "let @xmath88 be a complexity class and @xmath11 be a class of advice functions .",
    "the class @xmath89 is the collection of all sets @xmath90 such that for some language @xmath91 and some @xmath92 , @xmath93 .",
    "( circuit families ) a @xmath94-size circuit family is a sequence @xmath95 of boolean circuit , where @xmath96 has @xmath31 inputs and a single output , and its size @xmath97 for every @xmath31 .",
    "p / poly is a famous language class in computational complexity . and",
    "it is well - known that the following three language classes are equal .",
    "the first is p / poly , the second the class of languages which have polynomial size circuits , and the third the class of languages which are polynomial time turing reducible to some sparse set .",
    "next , we will give the definitions of the parameterized problems which will be employed in this paper .",
    "all these problems are in fpt .",
    "( edge clique cover ) the input is an undirected graph g and a nonnegative integer k , k is the parameter , the problem asks if there exist a set of k subgraphs of g , such that each subgraph is a clique and each edge of g is contained in at least one of these subgraphs .",
    "edge clique cover is a np - complete problem @xcite .",
    "it is also in pft @xcite . in their paper @xcite cygan etc .",
    "proved that it has no polynomial compression unless co - np @xmath28 np / poly and ph @xmath98 .",
    "then in the paper @xcite cygan etc . improved the lower bound to @xmath44 under the same assumption .",
    "treewidth and pathwidth of a graph are two well - known parameters of structures that measure their similarity to a tree and a path , respectively .",
    "they are commonly used as parameters in the parameterized complexity .",
    "we use @xmath99 and @xmath100 to denote the treewidth and the pathwidth of graph @xmath46 , respectively .",
    "bounded pathwidth is a more restrictive concept compared with bounded treewith . for any graph @xmath46 , @xmath101 .",
    "given graph @xmath46 together with sets @xmath102 , one for every vertex @xmath103 , then @xmath46 is @xmath3-colorable if there exists a coloring @xmath104 , which is proper and for every vertex @xmath103 we have @xmath105 .",
    "@xmath46 is called @xmath106-choosable if for any list assignment @xmath107 with @xmath108 for all vertex @xmath103 in @xmath46 , @xmath46 is @xmath3-colorable .",
    "( @xmath106-choosability ) @xmath46 is a graph and the parameter @xmath109 is the treewidth of @xmath46 , constant @xmath110 .",
    "deciding whether @xmath46 is @xmath106-choosable .    for each @xmath111 , @xmath106-choosability is @xmath112-complete problem @xcite . and",
    "the problem is in fpt when parameterized by treewidth @xcite .",
    "( @xmath106-choosability deletion ) @xmath46 is a graph and the parameter @xmath109 is the treewidth of @xmath46 , constant @xmath113 .",
    "the problem asks for the minimum number of vertices that need to be deleted to make @xmath46 @xmath106-choosability .    for each @xmath114 , @xmath106-choosability deletion is @xmath115-complete problem @xcite .",
    "and the problem is in fpt when parameterized by treewidth @xcite .    for qbf problem",
    ", we will introduce its definition from @xcite",
    ". quantified boolean formula ( qbf ) extends propositional logic by introducing quantifiers over the boolean domain \\{0,1}. we write formulas in qbf in prenex normal form @xmath116 , where the @xmath24s are quantifiers , the @xmath51s are propositions , and @xmath117 is a propositional formula , which we call the matrix . by bounding the number of alternations , qbf can be stratified into classes @xmath118 and @xmath119 , where @xmath120 is the number of alternations , and a formula is in @xmath118 if its outermost quantifier is @xmath121 and contains @xmath120 alternations and in @xmath119 if its outermost quantifier is @xmath122 and contains @xmath120 alternations .",
    "it is well - known that @xmath118 and @xmath119 are the most famous @xmath123-complete problem and @xmath124-complete problem , respectively .",
    "the treewidth of a qbf formula is defined as the width of the interaction graph of its cnf matrix .",
    "the interaction graph is defined with the set of propositions as vertices , and the co - occurrence ( in the same clause ) relation between propositions as edges .",
    "( @xmath118 ) given a @xmath118 formula , constant @xmath125 , and the parameter @xmath109 is the treewidth of the formula .",
    "deciding whether the formula is satisfiable .",
    "chen @xcite proved that @xmath118 parameterized by treewidth is in fpt .",
    "( bounded treewidth @xmath126 ) given a qbf formula with bounded treewidth , and the parameter @xmath7 is the quantifier alternations number . deciding whether the formula is satisfiable .",
    "atserias and oliva @xcite proved that bounded treewidth @xmath127 is pspace - complete .",
    "chen @xcite proved that bounded treewidth @xmath127 parameterized by the quantifier alternations number is in fpt .",
    "at first we will deduce some lemmas related to the frameworks .",
    "lemma [ kernelization imply compression ] points out that compression and turing compression are general forms of kernelization and turing kernelization , respectively .",
    "lemma [ core theorem ] and [ manyone core theorem ] present connections between the size of ( turing ) kernel of some fpt problem and the density of objective set which can be ( turing ) reduced from the fpt problem .",
    "[ kernelization imply compression ] l is a parameterized language .",
    "+ ( 1 ) if l has an @xmath20-sized @xmath60-kernelization , then @xmath3 has an @xmath20-sized @xmath60-compression . + ( 2 ) if l has an @xmath20-sized @xmath60-turing kernelization , then @xmath3 has an @xmath20-sized @xmath60-turing compression .",
    "according to the definitions , it is easy to understand that compression is a general type of kernelization . in order to simulate an @xmath20-sized @xmath60-kernelization of @xmath3",
    ", we just need to restrict the output of @xmath20-sized @xmath60-compression to the string of @xmath3 .    for any instance @xmath14 of language @xmath3 .",
    "suppose @xmath20-sized @xmath60-turing kernelization for @xmath3 is a turing machine @xmath13 with @xmath20-oracle for a parameterized language @xmath3 .",
    "then , whenever @xmath13 generates a string @xmath15 , asks the @xmath20-oracle for parameterized language @xmath3 whether @xmath15 in it , and the length of @xmath15 is bounded by @xmath128 .",
    "thus , turing machine @xmath13 with @xmath20-oracle for classic language @xmath3 ( unparameterized version ) is also an @xmath20-sized @xmath60-turing compression for @xmath3 .",
    "[ core theorem ] @xmath14 is an instance of @xmath1 .",
    "@xmath24 is an f - constraint parameterized language of l. suppose @xmath129 for @xmath130 , c is a larger constant .",
    "if l has a @xmath131-sized @xmath59-turing compression , then @xmath24 is turing reducible to a set @xmath132 of density @xmath133 in time @xmath134 where @xmath135 .",
    "suppose @xmath136 are turing machines , and @xmath137 are classic languages . if the input @xmath138c , then it is easy to prove the theorem , for the constant number is hid in the big o notation . in the following proof , we only need to deal with the long length inputs .",
    "that @xmath3 has a @xmath131-sized @xmath59-turing compression means that there exist a turing machine @xmath139 together with a @xmath140-oracle for @xmath141 which can decide whether @xmath4 in time @xmath142 .",
    "whenever @xmath139 generates a string , @xmath139 will ask the @xmath140-oracle for @xmath141 whether the string is in it , and the length of the string is bounded by 2@xmath140 . for convenience , the turing machine @xmath139 together with the @xmath140-oracle for @xmath141 can be abbreviated to @xmath143 .",
    "now we consider the language @xmath24 .",
    "@xmath24 is an @xmath6-constraint parameterized language of @xmath3 , so we have @xmath144 and @xmath145 , where @xmath73 and @xmath72 are complement languages of @xmath24 and @xmath3 , respectively . in this way , language @xmath24 can be solved by the machine @xmath146 .",
    "more precisely , it means that the turing machine @xmath139 together with a @xmath147-oracle for @xmath141 can decide whether @xmath148 in time @xmath149 .",
    "whenever @xmath139 generates a string , @xmath139 will ask the @xmath147-oracle for @xmath141 whether the string is in it , and the length of the string is bounded by 2@xmath147 .",
    "next , we will construct the set @xmath85 in two steps .",
    "step1 : running the machine @xmath146 on an input @xmath150 of length @xmath31 .",
    "assume that set @xmath151 ( string @xmath152 is short for @xmath150 ) is the collection of the strings , which have the following properties .",
    "firstly , @xmath139 generates the string , then asks the @xmath147-oracle for @xmath141 whether the string is in it , and the oracle returns yes .",
    "we define set @xmath153=@xmath154 .",
    "then we have @xmath155 @xmath156 , so the number of elements in set @xmath157 is equal to @xmath158 ( binary code ) .",
    "step2 : since @xmath159 for lager @xmath31 , creating a class of new sets @xmath160 , ( where @xmath161 ) .",
    "@xmath162 is a string created by padding @xmath163 character  1 \" on the end of the string @xmath164 , where  1 \" is a symbol not occurring in the language .",
    "it is easy to know that the number of elements in set @xmath165 is equal to @xmath166 .",
    "in addition , @xmath6 and @xmath131 are no decreasing functions , so @xmath167=@xmath168 .",
    "let the set @xmath169 .",
    "finally , we have created a set @xmath85 and @xmath170 .",
    "we regard the language @xmath24 as a classic language , which means that the input length is equal to the instance length plus the parameter .",
    "we will design a turing machine @xmath13 with the oracle @xmath85 to solve @xmath24 . for any input string @xmath171 ( @xmath135 ) , let @xmath13 simulate @xmath139 , except for the steps before access the oracle .",
    "whenever @xmath139 generates a string @xmath172 , and then asks the @xmath173-oracle for @xmath141 whether the string is in it , @xmath13 will also produce the string @xmath172 .",
    "in addition , @xmath13 will pad @xmath174 character  1 \" on the end of the string @xmath172 to obtain a @xmath31-bit string @xmath175 , and then asks the oracle @xmath85 whether @xmath175 in it . based on the structure of @xmath85",
    ", @xmath139 asks the @xmath173-oracle for @xmath141 for string @xmath172 and the oracle returns yes if and only if @xmath13 asks the oracle @xmath85 for string @xmath175 and the oracle returns yes . thus @xmath146 can be simulated by @xmath13 with the oracle @xmath85 .",
    "next , we will analyse the time cost of @xmath13 . since the time cost of @xmath139 is @xmath60 , and the only difference between @xmath13 and @xmath139 are the steps before asking the oracle .",
    "each time before @xmath13 asks the oracle @xmath85 , it needs to pad at most @xmath31 bit  1 \" .",
    "assume that @xmath176 refers to how many times @xmath13 needs to access the oracle @xmath85 , then the time complexity for @xmath13 is @xmath177 .",
    "thus , we prove that @xmath24 can also be solved by @xmath13 with the oracle @xmath85 .",
    "the time complexity of @xmath13 is @xmath134 , and @xmath170 .",
    "combined with the input @xmath138c , we can prove that if _",
    "l _ has a @xmath131-sized @xmath59-turing compression , then @xmath24 is turing reducible to a set @xmath178 of density @xmath133 in time @xmath134 .",
    "[ manyone core theorem ] @xmath3 is a parameterized language , and @xmath14 is an instance of @xmath3 .",
    "@xmath24 is an @xmath6-constraint parameterized language of l. suppose @xmath129 for @xmath179c , c is a larger constant . if @xmath3 has a @xmath131-sized @xmath59-compression , then @xmath24 is many - one reducible to a set @xmath178 of density @xmath133 in time @xmath134 where @xmath135 .",
    "similar to lemma [ core theorem ] .",
    "in fact , the time complexity of the reduction can be bounded by @xmath180 with careful analysis .      [ np in p / poly ] ( see @xcite)if every set in np has polynomial - size family of circuits , then ph @xmath181 .",
    "this lemma is the well - known karp - lipton theorem @xcite .",
    "their original proof collapsed ph to @xmath115 , and michael sipser improved it to @xmath182 in the same paper .",
    "after that , there has been a lot of works on the general theme inspired by the karp - lipton theorem @xcite , especially , the mahaney theorem @xcite , which will also be used in this paper .",
    "one of the improvement on the collapse of ph was proved by segupta , who pointed out that np has polynomial - size family of circuits collapses the ph to @xmath183 .",
    "moreover , it became a stronger version of karp - lipton theorem after cai @xcite proved that @xmath184 .",
    "we choose to state the results for classes in @xmath185 as these classes are well - know .",
    "another variant of the karp - lipton theorem was provided by buhrman and homer @xcite .",
    "they proved that if np has quasipolynomial - size circuits , then exponential hierarchy collapses to the second level . in their paper",
    "@xcite pavan et .",
    "al . improved the collapse to @xmath186 .",
    "[ np in p / qpoly ] ( see @xcite ) if any np - complete problem is reducible to a set @xmath85 of density @xmath187 in time @xmath187 , for some @xmath7 , then exph @xmath188 .",
    "actually , in their paper @xcite buhrman and homer did not regard this result as a lemma or theorem .",
    "it is included in the proof of theorem 1 of @xcite .",
    "[ turing lower bound ] suppose @xmath3 is an @xmath6-hard parameterized language and has a @xmath131-sized quasipolynomial - turing compression . if there exists a constant @xmath189 , such that @xmath190 for all but finitely many @xmath31 , then exph @xmath188 .",
    "assume that @xmath14 is an instance of @xmath3 , and np - hard language @xmath24 is an @xmath6-constraint parameterized language of @xmath3 .",
    "@xmath3 has a g - sized quasipolynomial - turing compression , so @xmath3 has a @xmath131-sized @xmath59-turing compression for some quasipolynomial function @xmath59 .",
    "@xmath24 is turing reducible to a set @xmath85 of density @xmath133 in time @xmath134 where @xmath135 , according to lemma [ core theorem ] .",
    "obviously , both @xmath134 and @xmath133 are quasipolynomial functions .",
    "according to lemma [ np in p / qpoly ] , exph @xmath188 .",
    "this lemma gives us a tool to get turing compression ( kernel ) lower bounds under the assumption of exph @xmath191 . in order to obtain the compression ( kernel ) lower bounds of fpt languages , we only need to design polynomial - time reduction algorithms for these languages to illustrate that these languages are @xmath6-hard parameterized languages",
    "thus , this tool transforms the lower bound type problem to algorithm design type problem .",
    "of all the sizes of lower bounds , people pay great attention to the polynomial size .",
    "so we will give the polynomial - sized turing kernel lower bound lemma , which is a special case of lemma [ turing lower bound ] .",
    "[ polylog imply collapse ] suppose @xmath3 is a polylogarithmic - hard parameterized language .",
    "if @xmath3 has a polynomial - sized quasipolynomial - turing compression , then exph @xmath188 .",
    "refer to the lemma [ turing lower bound ] . in this lemma",
    ", @xmath6 is a quasipolynomial function and @xmath131 is a polynomial function .",
    "thus , there exists a constant @xmath189 , @xmath190 for all but finitely many @xmath31 .",
    "we can also use other hypotheses to support the lower bounds of turing kernels , such as that polynomial hierarchy will not collapse",
    ". the following lemma will give a tool for proving turing kernel lower bounds under the assumption of ph @xmath192 .",
    "[ linearlog imply collapse ] suppose @xmath3 is an @xmath6-hard parameterized language and has a @xmath131-sized turing compression . if there exists a constant @xmath189 , such that @xmath193 for all but finitely many @xmath31 , then ph @xmath181 .",
    "similar to the proof of lemma [ turing lower bound ] .",
    "expect for that the density of set @xmath85 is @xmath194 and the time complexity of the turing reduction is @xmath195 in this lemma .",
    "thus , np is polynomial time turing reducible to a sparse set , and ph @xmath181 according to the lemma [ np in p / poly ] .",
    "a set @xmath85 has subexponential density if for any constant @xmath196 , @xmath197 for all but finitely many @xmath31 .",
    "[ mahaney theorem ] ( see @xcite ) if np is polynomial time many - one reducible to a sparse set , then np = p.",
    "this is mahaney s theorem .",
    "there has been a lot of works on the variant of this theorem .",
    "one direction is to relax the reduction .",
    "one of the prominent results in this direction was proved by ogiwara and watanabe @xcite .",
    "they proved that if np is bounded truth - table reducible to a sparse set , then np = p. enlarging the sparse set is another direction in which lemma [ no np subexp ] is one of the considerable results .",
    "[ no np subexp ] ( see @xcite ) if np is polynomial time many - one reducible to a subexponential density set , then ph @xmath198 .",
    "buhrman and hitchcock @xcite proved that if np has subexponential density under polynomial - time many - one reduction , then conp @xmath28 np / poly .",
    "yap @xcite proved that if conp @xmath28 np / poly , then polynomial hierarchy collapses to the third level , and cai etc .",
    "@xcite improved the collapse to @xmath199 .",
    "in fact , the many - one reduction in lemma [ no np subexp ] can be generated to conjunctive reduction and query - bounded turing reduction @xcite .",
    "moreover , the following theorems concerning many - one compression ( kernel ) lower bounds based on the assumption of ph @xmath200 can also be easily extended to conjunctive compression ( kernel ) lower bounds and query - bounded turing compression ( kernel ) lower bounds @xcite .",
    "[ manyone lower bound s2p ] suppose @xmath3 is an @xmath6-hard parameterized language and has a @xmath131-sized compression . if for any constant @xmath196 , @xmath201 for all but finitely many @xmath31 , then ph @xmath198 .",
    "assume that @xmath14 is an instance of @xmath3 , and np hard language @xmath24 is an @xmath6-constraint parameterized language of @xmath3 .",
    "@xmath3 has a g - sized compression , so @xmath3 has a @xmath131-sized @xmath59-compression for some polynomial function @xmath59 .",
    "@xmath24 is many - one reducible to a set @xmath178 of density @xmath133 in time @xmath134 where @xmath135 , according to lemma [ manyone core theorem ] .",
    "obviously , @xmath134 is a polynomial function , and @xmath202 for all but finitely many @xmath31 .",
    "thus , @xmath24 is polynomial - time many - one reducible to a set @xmath85 of subexponential density . according to lemma [ no np subexp ] , ph @xmath198 .",
    "[ manyone lower bound np p ] suppose @xmath3 is an @xmath6-hard parameterized language and has a @xmath131-sized compression . if there exists a constant @xmath189 , such that @xmath193 for all but finitely many @xmath31 , then np = p.    similar to lemma [ linearlog imply collapse ] .",
    "it is easy to conclude that np is polynomial time many - one reducible to a sparse set .",
    "then np = p according to lemma [ mahaney theorem ] .",
    "[ npi core ] @xmath8 is a strictly monotone increasing function .",
    "@xmath14 is an instance of parameterized language @xmath3 .",
    "@xmath24 is an @xmath6-constraint parameterized language of @xmath3 and @xmath203 . if @xmath3 is an @xmath204-hard parameterized language , where constant @xmath205 $ ] , and @xmath3 has a polynomial compression , then we have + ( 1 ) if @xmath24 is in np - complete , then ph @xmath198 .",
    "+ ( 2 ) if @xmath24 is in p , then @xmath206 , where @xmath31 is the length of the input of the language in np .",
    "\\(1 ) if @xmath24 is np - complete , then @xmath3 is an @xmath6-hard parameterized language , and @xmath3 has a @xmath131-sized compression for some polynomial function @xmath131 .",
    "we have @xmath207 for any constant @xmath208 .",
    "thus , ph @xmath198 according to lemma [ manyone lower bound s2p ] .    \\(2 ) suppose np - hard language @xmath209 is an @xmath204-constraint parameterized language of @xmath3 .",
    "then @xmath209 is an @xmath210-constraint parameterized language of @xmath3 for some function @xmath211 .",
    "we will consider an instance @xmath212 in two steps .",
    "step1 : pad some special characters @xmath213 on the end of string @xmath37 to transform the string @xmath214 into @xmath215 , and satisfy @xmath216 .",
    "thus , string @xmath217 ( in fact , string @xmath218 and string @xmath219 are the same ) , and the number of the padded characters @xmath213 is less than @xmath220 .",
    "the time complexity of the first step is @xmath221 .",
    "step2 : consider the language @xmath222 .",
    "@xmath223 p means that we can decide it in polynomial time , so the time complexity to solve @xmath24 is @xmath224 .",
    "finally , summing up the time complexity of the two steps , we can get that @xmath209 can be decided in time @xmath225 .",
    "it is easy to see that @xmath226 is a superpolynomial function , so we have @xmath227 .",
    "@xmath209 is np - hard , so there exists a polynomial - time algorithm that , given a @xmath31-sized instance of any language in np , constructs an equivalent @xmath63-sized instance of @xmath209 with @xmath228 .",
    "thus , any language with input size @xmath31 in np can be solved in time @xmath229 .",
    "this section falls into three parts . the first part and",
    "the second part will give turing compression lower bounds and compression lower bounds of some fpt problems , respectively .",
    "the third part will illustrate some natural candidate problems in np - intermediate .    at first",
    ", we need to prove some properties of the fpt problems .",
    "these problems include satisfiability for @xmath118 formulas parameterized by treewidth , satisfiability for bounded treewidth @xmath126 formulas parameterized by quantifier alternations number @xmath7 , edge clique cover , @xmath106-choosability parameterized by treewidth and @xmath106-choosability deletion parameterized by treewidth .",
    "[ fpt problems are hard ] the problems mentioned above have following properties .",
    "assume that @xmath14 is an instance of each problem .",
    "+ ( 1 ) edge clique cover parameterized by clique number is an @xmath230-hard parameterized problem . + ( 2 ) for each constant @xmath231 ,",
    "@xmath106-choosability parameterized by treewidth is an @xmath230-hard parameterized problem .",
    "+ ( 3 ) for each constant @xmath232 , @xmath106-choosability deletion parameterized by treewidth is an @xmath233-hard parameterized problem . + ( 4 ) for each odd constant number @xmath234",
    ", @xmath235 parameterized by treewidth is an @xmath236-hard parameterized problem . + ( 5 )",
    "there exists a constant @xmath237 such that @xmath126 on inputs of treewidth at most @xmath106 parameterized by quantifier alternations number @xmath7 is a @xmath238-hard parameterized problem .",
    "bounded pathwidth is a more restrictive concept than bounded treewith , so the following results are still right if replacing pathwidth with treewidth .",
    "\\(1 ) cygan , pilipczuk , and pilipczuk @xcite proved that there exists a polynomial - time algorithm that , given a 3-sat formula with @xmath31 variables and @xmath239 clauses , constructs an equivalent edge clique cover instance @xmath240 with @xmath241 and @xmath242 .",
    "thus , edge clique cover parameterized by clique number is an @xmath230-hard parameterized problem .",
    "\\(2 ) in the proof of the algorithmic lower bound of @xmath106-choosability problem @xcite , one of the underlying results is that @xmath106-choosability on inputs of pathwidth bounded by @xmath230 is np - hard .",
    "more precisely , holyer @xcite proved that edge 3-coloring problem is np - complete .",
    "marx and mitsou @xcite constructed a polynomial time reduction from edge 3-coloring to ( 2,3)-choosability problem .",
    "moreover , they proved that if the input instance of the reduction has @xmath31 vertices then the pathwidth of the output instance is bounded by @xmath243 .",
    "gutner and tarsi @xcite constructed a polynomial time reduction from ( 2,3)-choosability to @xmath106-choosability .",
    "in addition , they proved that the pathwidth @xmath244 of the output instance @xmath245 of the reduction is linear bounded by the pathwidth @xmath100 of the input instance @xmath46 , that is , @xmath246 .",
    "thus , @xmath106-choosability problem parameterized by pathwidth is an @xmath230-hard parameterized problem .",
    "\\(3 ) the same as the @xmath106-choosability , in the paper of marx and mitsou @xcite , one of the underlying results is that @xmath106-choosability deletion on inputs of pathwidth bounded by @xmath233 is np - complete . more precisely , kratochvl @xcite proved that bipartite list 3-coloring problem is np - hard .",
    "marx and mitsou @xcite presented a reduction from bipartite list 3-coloring to @xmath106-choosability deletion .",
    "moreover , they proved that if the input instance has @xmath31 vertices , then the pathwidth of the output instance is bounded by @xmath247 .",
    "thus , @xmath106-choosability deletion parameterized by pathwidth is an @xmath233-hard parameterized problem .",
    "\\(4 ) we can prove that @xmath118 problem of treewidth at most @xmath236 is still np - hard according to theorem 3.5 and theorem 4.5 in @xcite .",
    "theorem 3.5 in @xcite showed that there exists a polynomial time algorithm that , given an instance @xmath248 of tiling - check problem in np - complete , constructs a qptl finite model checking instance @xmath249 .",
    "in addition , the reduction satisfies    \\(1 ) @xmath249 if and only if @xmath248 have a solution .",
    "\\(2 ) the word model @xmath250 has size polynomial in @xmath251 .",
    "\\(3 ) the formulas @xmath252 are in @xmath253 @xmath254 and are small enough so that there exists a constant @xmath189 where @xmath255 is in @xmath256 .",
    "\\(2 ) and ( 3 ) mean that there exists a constant @xmath257 where @xmath258 .",
    "thus , the reduction implies that qptl finite model checking problem is np - hard when the formulas @xmath252 are in @xmath253 and @xmath258 for some constant @xmath257 .",
    "theorem 4.5 in @xcite proved that there exists a polynomial ( precisely , @xmath259 ) time algorithm that , given a formula @xmath260 in @xmath253 ( for odd @xmath120 ) and a finite word model @xmath261 , constructs a formula @xmath262 in @xmath118 of size @xmath259 and pathwidth @xmath263 , such that @xmath264 if and only if @xmath265 .    since @xmath266 for some constant @xmath257",
    ", we have @xmath267 .",
    "so @xmath118 is np - hard when the pathwidth is bounded by @xmath268 .",
    "finally , we prove that for each odd constant number @xmath234 , @xmath235 parameterized by treewidth is an @xmath236-hard parameterized problem .",
    "\\(5 ) in @xcite , corollary 1 proved that there exists a constant @xmath237 such that , for every @xmath269 , @xmath126 on inputs of pathwidth at most @xmath106 and @xmath270 quantifier alternations is np - hard , where @xmath31 is the number of variables in the formula .",
    "it is clear that @xmath271 , so bounded treewidth @xmath126 is np - hard when the quantifier alternations number is @xmath238 .      in this part",
    ", we will apply the frameworks of turing compression lower bounds to solving concrete problems which have been mentioned above .",
    "[ main theorem1 ] unless exph = @xmath272 , + ( 1 ) there is no polynomial - sized quasipolynomial - turing compression for edge clique cover .",
    "+ ( 2 ) for every constant @xmath111 , there is no polynomial - sized quasipolynomial - turing compression for @xmath106-choosability parameterized by treewidth .",
    "+ ( 3 ) for every constant @xmath273 , there is no @xmath274-sized quasipolynomial - turing compression for @xmath106-choosability deletion parameterized by treewidth .",
    "+ ( 4 ) for @xmath118 parameterized by treewidth , there are no @xmath274-sized quasipolynomial - turing compression for it when i = 3 , and no @xmath275-sized quasipolynomial - turing compression for it when i @xmath276 ( constant c @xmath277 ) . + ( 5 ) there is no @xmath278-sized quasipolynomial - turing compression for bounded treewidth @xmath126 parameterized by quantifier alternations @xmath7 .",
    "lemma [ fpt problems are hard ] proved that edge clique cover and @xmath106-choosability ( constant @xmath111 ) parameterized by treewidth are both polylogarithmic - hard parameterized problems .",
    "thus , the two problems both have no polynomial - sized quasipolynomial - turing compression unless exph = @xmath272 according to lemma [ polylog imply collapse ] .",
    "lemma [ fpt problems are hard ] proved that @xmath106-choosability deletion parameterized by treewidth is an @xmath247-hard parameterized problem for each fixed @xmath114 .",
    "there exits a function @xmath279 such that @xmath106-choosability deletion is an @xmath6-hard parameterized problem .",
    "if there exists a @xmath131-sized quasipolynomial - turing compression for @xmath106-choosability deletion for some function @xmath280 , then @xmath281 for some constant @xmath282 , @xmath283 and @xmath284 .",
    "thus , exph = @xmath272 based on lemma [ turing lower bound ] .",
    "lemma [ fpt problems are hard ] proved that @xmath118 is an @xmath285-hard parameterized problem for each odd number @xmath286 .",
    "in particular , @xmath287 is an @xmath247-hard parameterized problem . the same as the proof of @xmath106-choosability deletion",
    ", @xmath287 parameterized by treewidth has no @xmath274-sized quasipolynomial - turing compression .",
    "for the case of @xmath288 , there exists a function @xmath289 , such that @xmath118 is an @xmath6-hard parameterized problem .",
    "if there exists a @xmath131-sized quasipolynomial - turing compression for @xmath118 for some function @xmath290 , then we have @xmath291 for some constant c@xmath292 , and it is easy to prove that @xmath293 for some constant c. in fact , for any @xmath294 , @xmath295 .",
    "thus , exph = @xmath272 according to lemma [ turing lower bound ] .",
    "lemma [ fpt problems are hard ] proved that bounded treewidth @xmath126 parameterized by quantifier alternations number @xmath7 is an @xmath6-hard parameterized problem and @xmath296 .",
    "if the problem has a @xmath131-sized quasipolynomial - turing compression for some function @xmath297 , then @xmath298 for some constant c. thus , exph = @xmath272 based on lemma [ turing lower bound ] .    [ ph to second ] unless ph = @xmath182 , + ( 1 ) there is no linear - sized turing compression for edge clique cover .",
    "+ ( 2 ) for every constant @xmath111 , there is no linear - sized turing compression for @xmath106-choosability parameterized by treewidth .",
    "+ ( 3 ) for every constant @xmath273 , there is no @xmath299-sized turing compression for @xmath106-choosability deletion parameterized by treewidth .",
    "+ ( 4 ) for each odd constant number @xmath234 , there is no @xmath275-sized turing compression for @xmath118 parameterized by treewidth .",
    "+ ( 5 ) there is no @xmath300-sized turing compression for bounded treewidth @xmath126 parameterized by quantifier alternations @xmath7 .",
    "refer to the theorem [ main theorem1 ] .",
    "the proofs of the two theorems are very similar , except for that this proof will be based on lemma [ linearlog imply collapse ] instead of lemma [ turing lower bound ] in the proof of theorem [ main theorem1 ] .",
    "this part will give compression lower bounds for these problems which have been mentioned above .",
    "in their paper @xcite , cygan etc . have also proved proposition ( 1 ) in theorem [ main compression results ] , and we can obtain the same result by employing our framework . in their paper @xcite gramm etc . pointed out that there is a @xmath301-sized kernel for this problem , so the kernel lower bound of edge clique cover is essentially tight .",
    "[ main compression results ] unless ph = @xmath115 , + ( 1 ) ( also see @xcite ) there is no @xmath44-sized compression for edge clique cover .",
    "+ ( 2 ) for every constant @xmath111 , there is no @xmath299-sized compression for @xmath106-choosability parameterized by treewidth .",
    "+ ( 3 ) for every constant @xmath273 , there is no @xmath302-sized compression for @xmath106-choosability deletion parameterized by treewidth .",
    "+ ( 4 ) for each odd constant number @xmath234 , there is no @xmath303-sized compression for @xmath118 parameterized by treewidth .",
    "+ ( 5 ) there is no @xmath304-sized compression for bounded treewidth @xmath126 parameterized by quantifier alternations @xmath7 .",
    "lemma [ fpt problems are hard ] proved that edge clique cover and @xmath106-choosability parameterized by treewidth are @xmath6-hard parameterized languages for some function @xmath305 . if these problems have @xmath131-sized compression for some function @xmath306 , then @xmath307 for any constant @xmath196 .",
    "thus ph = @xmath115 according to lemma [ manyone lower bound s2p ] .",
    "the proof of @xmath106-choosability deletion is similar .",
    "lemma [ fpt problems are hard ] proved that , for each odd number @xmath234 , @xmath118 parameterized by treewidth is an @xmath6-hard parameterized problem for some function @xmath289 .",
    "if the problem has a @xmath131-sized compression for some function @xmath308 , then we have @xmath309 for any constant @xmath196 .",
    "thus ph @xmath198 according to lemma [ manyone lower bound s2p ] .",
    "lemma [ fpt problems are hard ] proved that bounded treewidth @xmath126 parameterized by quantifier alternations number is an @xmath6-hard parameterized problem and @xmath310 . if the problem has a @xmath131-sized compression for some function @xmath311 , then @xmath312 for any constant @xmath313 .",
    "thus , ph @xmath198 according to lemma [ manyone lower bound s2p ] .",
    "[ main compression results np p ] unless np = p , + ( 1 ) there is no linear - sized compression for edge clique cover .",
    "+ ( 2 ) for every constant @xmath111 , there is no linear - sized compression for @xmath106-choosability parameterized by treewidth .",
    "+ ( 3 ) for every constant @xmath273 , there is no @xmath299-sized compression for @xmath106-choosability deletion parameterized by treewidth .",
    "+ ( 4 ) for each odd constant number @xmath234 , there is no @xmath275-sized compression for @xmath118 parameterized by treewidth .",
    "+ ( 5 ) there is no @xmath300-sized compression for bounded treewidth @xmath126 parameterized by quantifier alternations @xmath7 .",
    "the proof is similar to the proof of theorem [ ph to second ] , except for that this proof will be based on lemma [ manyone lower bound np p ] instead of lemma [ linearlog imply collapse ] in the proof of theorem [ ph to second ] .",
    "another meaning of theorem [ main compression results np p ] is that these problems ( except for the bounded treewidth qbf ) can be compressed in polynomial time if and only if they can be solved in polynomial time , because np = p implies ph = p , and all the problems discussed in this theorem are in ph .      in this part",
    ", we will use the lemma [ npi core ] to find out a large number of natural problems in np - intermediate under the assumption of exph @xmath314 .",
    "in fact , almost all of the np - complete parameterized problems which have polynomial kernel will conform to the lemma [ npi core ] .    at first , let us give the kernels size of these problems .",
    "feedback vertex set ( fvs ) has a @xmath315 kernel @xcite .",
    "minimum fill - in ( also known as chordal graph completion and minimum triangulation ) has a @xmath316 kernel @xcite .",
    "cluster editing has a @xmath317 kernel @xcite .",
    "clique partition has a @xmath318 kernel @xcite . max leaf in directed graph and undirected graph has an @xmath32 kernel and an @xmath319 kernel @xcite , respectively .",
    "[ npi concrete problems1 ] given a @xmath31-vertex graph g and a constant number @xmath320 . unless exph @xmath321 , the following problems are in np - intermediate , + ( 1 ) ( fvs ) whether @xmath322 vertices can be deleted from g in order to turn it into a forest . + ( 2 ) ( minimum fill - in ) whether @xmath322 edges can be added to g in order to turn it into a chordal graph . +",
    "( 3 ) ( cluster editing ) whether we can transform @xmath46 , by deleting or adding @xmath322 edges , into a graph that consists of a disjoint union of cliques .",
    "+ ( 4 ) ( clique partition ) whether the edge - set of g can be partitioned into @xmath322 cliques .",
    "+ ( 5 ) ( ( directed ) max leaf ) whether ( directed graph ) g has a spanning tree with @xmath322 leaves . + more precisely , if these problems are in np - complete then ph @xmath98 , and if these problems are in p then np @xmath323 , where @xmath239 is the length of the input of the language in np .",
    "firstly , let us consider the first problem , and we name it @xmath322-constraint fvs .",
    "suppose function @xmath324 , the derivation of @xmath6 is @xmath325 , where @xmath320 .",
    "thus , @xmath326 for all @xmath327 and @xmath6 is a strictly monotone increasing function .",
    "we obtain the inverse function of @xmath6 by adding @xmath328 functions to both sides of the equation , then we have @xmath329 , and @xmath330 .",
    "in addition , constant @xmath320 implies @xmath331 .",
    "suppose that @xmath14 is an instance of fvs .",
    "fvs has an @xmath332 kernel , so there exists a polynomial - time reduction that , given an fvs instance @xmath14 , constructs a new fvs instance @xmath15 with @xmath333 for some constant c. thus fvs is still np - hard when the parameter @xmath334 .",
    "fvs is an @xmath335-hard parameterized language , where @xmath336 is some constant and @xmath337 $ ] .    since @xmath338 , it is clear that @xmath322-constraint fvs is a @xmath339-constraint parameterized language of fvs .",
    "according to lemma [ npi core ] , if @xmath322-constraint fvs is in np - complete then polynomial hierarchy will collapse to @xmath115 , and if the problem is in p then np @xmath28 dtime@xmath340 . on the one hand ,",
    "ph @xmath198 implies exph @xmath321 ( padding argument ) . on the other hand , the proposition 2 in @xcite proved that np @xmath28 dtime@xmath340 implies nexp = exp . if nexp = exp then exph = nexp @xcite , it also means exph @xmath321 . thus",
    ", if @xmath322-constraint fvs is in np - intermediate then exph @xmath321 .",
    "the proofs of other problems are similar to the proof of the first problem .",
    "besides @xmath324 , we can also choose other functions which conform to lemma [ npi core ] .    in the function @xmath324",
    ", @xmath313 is a constant .",
    "we can choose any constant @xmath341 for the function .",
    "for example , if we choose @xmath342 , then we have the following corollary .    [ npi concrete problems2 ] given a @xmath31-vertex graph g. unless exph @xmath321 , the following problems are in np - intermediate , + ( 1 ) ( fvs ) whether @xmath45 vertices can be deleted from g in order to turn it into a forest . + ( 2 ) ( minimum fill - in ) whether @xmath45 edges can be added to g in order to turn it into a chordal graph . +",
    "( 3 ) ( cluster editing ) whether we can transform @xmath46 , by deleting or adding @xmath45 edges , into a graph that consists of a disjoint union of cliques .",
    "+ ( 4 ) ( clique partition ) whether the edge - set of g can be partitioned into @xmath45 cliques .",
    "+ ( 5 ) ( ( directed ) max leaf ) whether ( directed graph ) g has a spanning tree with @xmath45 leaves . + more precisely , if these problems are in np - complete then ph @xmath98 , and if these problems are in p then np @xmath343 , where @xmath239 is the length of the input of the language in np .",
    "besides the problems mentioned above , there are many other problems that have similar results , such as , vertex cover @xcite , disjoint triangles @xcite , 3-hitting set @xcite , ( directed ) max internal spanning tree @xcite etc .",
    "this paper found a new connection between parameterized complexity and structural complexity of classic computational complexity .",
    "then , we created some frameworks with this connection . moreover , these frameworks can not only obtain turing compression ( kernelization ) lower bounds of some important fpt problems , but also find a large number of natural candidate np - intermediate problems .",
    "similar to the definition of turing compression ( kernelization ) , we define conondeterministic turing compression ( kernelization ) by changing the deterministic turing machine into the conondeterministic turing machine .",
    "it is not hard to obtain the conondeterministic turing compression ( kernelization ) lower bound according to the same methodology in this paper as well as the assumption of conp @xmath29 np / qpoly @xcite .",
    "we believe that the frameworks could get ( turing ) kernel lower bounds of other important problems . besides , maybe we could obtain other interesting results in parameterized complexity and classic computational complexity by employing the frameworks .",
    "* acknowledgement : * first and foremost , the author thanks jianer chen for helpful discussions and advice , and marek cygan for the helpful e - mail . besides , the author thanks zhipeng tang , changhui wang , jianxin wang , guangwei wu , chao xu for a lot of help during research and study . last but",
    "not least , the author thanks qilong feng and feng shi for the useful reference material .",
    "abhimanyu m. ambalath , radheshyam balasundaram , chintan rao h. , venkata koppula , neeldhara misra , geevarghese philip , m. s. ramanujan . on the kernelization complexity of colorful motifs .",
    "ipec 2010 : 14-25.http://dx.doi.org/10.1007/978-3-642-17493-3_4 [ ] .",
    "vikraman arvind , johannes kbler , uwe schning , rainer schuler .",
    "if np has polynomial - size circuits , then ma = am .",
    "137(2 ) : 279 - 282 ( 1995 ) .",
    "albert atserias , sergi oliva .",
    "bounded - width qbf is pspace - complete .",
    "j. comput .",
    "80(7 ) : 1415 - 1429 ( 2014).http://dx.doi.org/10.1016/j.jcss.2014.04.014 [ ] .",
    "hans l. bodlaender , rodney g. downey , michael r. fellows , danny hermelin . on problems without polynomial kernels .",
    "j. comput .",
    ", 75(8):423 - 434 , ( 2009 ) .",
    "hans l. bodlaender , bart m. p. jansen , stefan kratsch .",
    "kernelization lower bounds by cross - composition .",
    "siam j. discrete math .",
    "28(1 ) : 277 - 305 ( 2014 ) .",
    "hans l. bodlaender , stphan thomass , anders yeo .",
    "kernel bounds for disjoint cycles and disjoint paths .",
    "412(35 ) : 4570 - 4578 ( 2011 ) .",
    "mark braverman , young kun - ko , aviad rubinstein , omri weinstein .",
    "eth hardness for densest-@xmath7-subgraph with perfect completeness .",
    "corr abs/1504.08352 ( 2015 ) . to appear in soda17 .",
    "nader h. bshouty , richard cleve , ricard gavald , sampath kannan , christino tamon .",
    "oracles and queries that are sufficient for exact learning .",
    "j. comput .",
    "52(3 ) : 421 - 433 ( 1996).http://dx.doi.org/10.1006/jcss.1996.0032 [ ] .",
    "harry buhrman , john m. hitchcock .",
    "np - hard sets are exponentially dense unless conp @xmath28 np / poly .",
    "ieee conference on computational complexity 2008 : 1 - 7 .",
    "harry buhrman , steven homer .",
    "superpolynomial circuits , almost sparse oracles , and the exponential hierarchy .",
    "fsttcs 1992 : 116-127.http://dx.doi.org/10.1007/3-540-56287-7_99 [ ] .",
    "jin - yi cai , venkatesan t. chakaravarthy , lane a. hemaspaandra , mitsunori ogihara .",
    "competing provers yield improved karp - lipton collapse results .",
    "198(1 ) : 1 - 23 ( 2005).http://dx.doi.org/10.1016/j.ic.2005.01.002 [ ] .",
    "yijia chen , jrg flum , moritz mller .",
    "lower bounds for kernelizations and other preprocessing procedures .",
    "theory comput .",
    "48(4 ) : 803 - 839 ( 2011 ) .",
    "marek cygan , fedor v. fomin , bart m. p. jansen , ukasz kowalik , daniel lokshtanov , dniel marx , marcin pilipczuk , micha pilipczuk , saket saurabh .",
    "open problems for fpt school 2014 . dagstuhl seminars or workshop on kernels.http://fptschool.mimuw.edu.pl/opl.pdf [ ] .",
    "marek cygan , fedor v. fomin , ukasz kowalik , daniel lokshtanov , dniel marx , marcin pilipczuk , micha pilipczuk , saket saurabh .",
    "parameterized algorithms .",
    "springer 2015 , isbn 978 - 3 - 319 - 21274 - 6 , pp .",
    "3-555.http://dx.doi.org/10.1007/978-3-319-21275-3 [ ] .",
    "marek cygan , fabrizio grandoni , danny hermelin .",
    "tight kernel bounds for problems on graphs with small degeneracy .",
    "esa 2013 : 361 - 372 .",
    "marek cygan , stefan kratsch , marcin pilipczuk , micha pilipczuk , magnus wahlstrm .",
    "clique cover and graph separation : new incompressibility results .",
    "toct 6(2 ) : 6 ( 2014).http://dx.doi.org/10.1007/978 - 3 - 642 - 31594 - 7_22 [ ] .      jean daligault , gregory gutin , eun jung kim , anders yeo . fpt algorithms and kernels for the directed @xmath7-leaf problem .",
    "j. comput .",
    "76(2 ) : 144 - 152 ( 2010).http://dx.doi.org/10.1016/j.jcss.2009.06.005 [ ] .",
    "holger dell , dieter van melkebeek .",
    "satisfiability allows no nontrivial sparsification unless the polynomial - time hierarchy collapses .",
    "j. acm 61(4 ) : 23:1 - 23:27 ( 2014 ) .",
    "michael dom , daniel lokshtanov , saket saurabh .",
    "incompressibility through colors and ids .",
    "icalp ( 1 ) 2009 : 378-389.http://dx.doi.org/10.1007/978-3-642-02927-1_32 [ ] .",
    "rodney g. downey , michael r. fellows .",
    "fundamentals of parametrized complexity . texts in computer science , springer 2013 ,",
    "isbn 978 - 1 - 4471 - 5558 - 4 , pp .",
    "i - sss , 3-707.http://dx.doi.org/10.1007/978-1-4471-5559-1 [ ] .",
    "michael r. fellows , fedor v. fomin , daniel lokshtanov , frances rosamond , saket saurabh , stefan szeider , carsten thomassen . on the complexity of some colorful problems parameterized by treewidth . information and computation , 209(2):143 - 153 , ( 2011).http://dx.doi.org/10.1016/j.ic.2010.11.026 [ ] .",
    "mike fellows , pinar heggernes , frances rosamond , christian sloper , jan arne telle . finding @xmath7 disjoint triangles in an arbitrary graph .",
    "wg 2004 : 235 - 244 .",
    "henning fernau , fedor v. fomin , daniel lokshtanov , daniel raible , saket saurabh , yngve villanger .",
    "kernel(s ) for problems with no kernel : on out - trees with many leaves .",
    "stacs 2009 : 421-432.http://dx.doi.org/10.1145/2344422.2344428 [ ] .",
    "jens gramm , jiong guo , falk hffner , rolf niedermeier .",
    "data reduction and exact algorithms for clique cover .",
    "acm journal of experimental algorithmics 13 ( 2008).http://dx.doi.org/10.1145/1412228.1412236 [ ] .",
    "gregory gutin , gabriele muciaccia , anders yeo .",
    "( non-)existence of polynomial kernels for the test cover problem .",
    "inf . process .",
    "113(4 ) : 123 - 126 ( 2013 ) .",
    "gregory gutin , igor razgon , eun jung kim .",
    "minimum leaf out - branching and related problems .",
    "410(45 ) : 4571 - 4579 ( 2009 ) .",
    "shai gutner , michael tarsi . some results on ( a : b)-choosability .",
    "discrete mathematics , 309(8 ) : 2260 - 2270 , ( 2009).http://dx.doi.org/10.1016/j.disc.2008.04.061 [ ] .",
    "danny hermelin , stefan kratsch , karolina soltys , magnus wahlstrm , xi wu . a completeness theory for polynomial ( turing ) kernelization .",
    "algorithmica 71(3 ) : 702 - 730 ( 2015).http://dx.doi.org/10.1007/s00453 - 014 - 9910 - 8 [ ] .",
    "bart m. p. jansen , hans l. bodlaender .",
    "vertex cover kernelization revisited - upper and lower bounds for a refined parameter .",
    "theory comput .",
    "53(2 ) : 263 - 299 ( 2013).http://dx.doi.org/10.1007/s00224 - 012 - 9393 - 4 [ ] .",
    "bart m. p. jansen , dniel marx . characterizing the easy - to - find subgraphs from the viewpoint of polynomial - time algorithms , kernels , and turing kernels .",
    "soda 2015 : 616-629.http://dx.doi.org/10.1137/1.9781611973730.42 [ ] .",
    "stefan kratsch .",
    "co - nondeterminism in compositions : a kernelization lower bound for a ramsey - type problem .",
    "acm trans .",
    "algorithms 10(4 ) : 19:1 - 19:16 ( 2014 ) .",
    "stefan kratsch .",
    "recent developments in kernelization : a survey .",
    "bulletin of the eatcs 113 ( 2014 ) .",
    "stefan kratsch , marcin pilipczuk , ashutosh rai , venkatesh raman .",
    "kernel lower bounds using co - nondeterminism : finding induced hereditary subgraphs .",
    "toct 7(1 ) : 4:1 - 4:18 ( 2014).http://dx.doi.org/10.1145/2691321 [ ] .",
    "stefan kratsch , magnus wahlstrm .",
    "two edge modification problems without polynomial kernels .",
    "discrete optimization 10(3 ) : 193 - 199 ( 2013 ) .",
    "richard e. ladner . on the structure of polynomial time reducibility .",
    "j. acm 22(1 ) : 155 - 171 ( 1975).http://dx.doi.org/10.1145/321864.321877 [ ] .",
    "stephen r. mahaney .",
    "sparse complete sets of np : solution of a conjecture of berman and hartmanis . j. comput",
    "25(2 ) : 130 - 143 ( 1982 ) .",
    "dniel marx , valia mitsou .",
    "double - exponential and triple - exponential bounds for choosability problems parameterized by treewidth .",
    "icalp 2016 : 28:1 - 28:15 .",
    "assaf natanzon , ron shamir , roded sharan . a polynomial approximation algorithm for the minimum fill - in problem .",
    "siam j. comput .",
    "30(4 ) : 1067 - 1079 ( 2000 ) .",
    "mitsunori ogiwara , osamu watanabe .",
    "on polynomial - time bounded truth - table reducibility of np sets to sparse sets .",
    "siam j. comput .",
    "20(3 ) : 471 - 483 ( 1991 ) .",
    "james b. orlin .",
    "contentment in graph theory : covering graphs with cliques .",
    ", 80 : 406 - 424 ( 1977).http://dx.doi.org/10.1016/1385 - 7258(77)90055 - 5 [ ] .",
    "aduri pavan , alan l. selman , samik sengupta , vinodchandran n. variyam .",
    "poly logarithmic - round interactive proofs for conp collapse the exponential hierarchy .",
    "385(1 - 3 ) : 167 - 178 ( 2007).http://dx.doi.org/10.1016/j.tcs.2007.06.013 [ ] .",
    "alexander schfer , christian komusiewicz , hannes moser , rolf niedermeier .",
    "parameterized computational complexity of finding small - diameter subgraphs .",
    "optimization letters , 6(5):883 - 891 , ( 2012).http://dx.doi.org/10.1007/s11590 - 011 - 0311 - 5 [ ] .",
    "stphan thomass , nicolas trotignon , kristina vuskovi .",
    "a polynomial turing - kernel for weighted independent set in bull - free graphs .",
    "wg 2014 : 408 - 419 .",
    "magnus wahlstrm . abusing the tutte matrix : an algebraic instance compression for the @xmath26-set - cycle problem .",
    "stacs 2013 : 341 - 352 ."
  ],
  "abstract_text": [
    "<S> kernelization is a significant topic in parameterized complexity . </S>",
    "<S> turing kernelization is a general form of kernelization . in the aspect of kernelization , </S>",
    "<S> an impressive hardness theory has been established [ bodlaender etc . </S>",
    "<S> ( http://link.springer.com/chapter/10.1007%2f978-3-540-70575-8_46[icalp 2008 ] , http://www.sciencedirect.com/science/article/pii/s0022000009000282[jcss2009 ] ) , fortnow and santhanam ( http://dl.acm.org/citation.cfm?doid=1374376.1374398[stoc 2008 ] , http://www.sciencedirect.com/science/article/pii/s0022000010000917[jcss 2011 ] ) , dell and van melkebeek ( http://dl.acm.org/citation.cfm?doid=1806689.1806725[stoc 2010 ] , http://dl.acm.org/citation.cfm?doid=2629620[j . </S>",
    "<S> acm 2014 ] ) , drucker ( http://ieeexplore.ieee.org/document/6375340/[focs 2012 ] , http://epubs.siam.org/doi/10.1137/130927115[siam j. comput . 2015 ] ) ] based on the assumption that polynomial hierarchy will not collapse , and this hardness theory can obtain lower bounds of kernel size . </S>",
    "<S> unfortunately , this framework is not fit for turing kernelization . </S>",
    "<S> moreover , so far , there is no tool which can be applied to obtain turing kernel lower bound for any fpt problem modulo any reasonable complexity hypothesis . </S>",
    "<S> thus , constructing a framework for lower bounds of turing kernels of fpt problems has received much attention from the parameterized complexity community , and this has been proposed as an open problem in different occasions [ fernau etc . </S>",
    "<S> ( http://drops.dagstuhl.de/opus/volltexte/2009/1843/[stacs 2009 ] ) , misra etc . </S>",
    "<S> ( http://www.sciencedirect.com/science/article/pii/s157252861000068x[discrete optimization 2011 ] ) , kratsch ( http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.673.3999[bulletin of the eatcs 2014 ] ) , cygan etc . </S>",
    "<S> ( http://fptschool.mimuw.edu.pl/opl.pdf[dagstuhl seminars on kernels 2014 ) ] ] .    </S>",
    "<S> ladner [ http://dl.acm.org/citation.cfm?doid=321864.321877[j . acm 1975 ] ] proved that if p @xmath0 np , then there exist infinitely many np - intermediate problems . </S>",
    "<S> however , the np - intermediate problem constructed by ladner is artificial . thus , finding natural np - intermediate problems under the assumption of p @xmath0 np interests theorists , and it has been a longstanding open problem in computational complexity community .    </S>",
    "<S> this paper builds a new bridge between parameterized complexity and classic computational complexity . by using this new connection , </S>",
    "<S> some frameworks can be constructed . </S>",
    "<S> based on the assumption that the polynomial hierarchy and the exponential hierarchy will not collapse , these frameworks have three main applications . </S>",
    "<S> firstly , these frameworks can be used to obtain turing kernel lower bounds of some important fpt problems , thus solving the first open problem . </S>",
    "<S> secondly , these frameworks can also be used to obtain better kernel lower bounds for these problems . </S>",
    "<S> thirdly , these frameworks can be used to figure out a large number of natural problems in np - intermediate , thus making some contributions to the second open problem .    </S>",
    "<S> [ section ] [ section ] [ theorem]lemma [ theorem]corollary [ theorem]proposition    # 1 </S>"
  ]
}
{
  "article_text": [
    "title of the package : :    hypexp version : :    1.0 package obtained from : :      ' '' ''    +     +    ` http://www-theorie.physik.unizh.ch/~maitreda/hypexp/ ` e - mail : :    maitreda@physik.unizh.ch , thuber@physik.unizh.ch licence : :    none computers : :    computers running mathematica under linux or windows operating system : :    linux , windows program language : :    mathematica memory required to execute : :    depending on the complexity of the problem other package needed : :    the package hpl , included in the distribution external file required : :    none .",
    "keywords : :    hypergeometric functions , expansion nature of the physical problem : :    expansion of hypergeometric functions    +      ' '' ''    +     +    around integer - valued parameters .",
    "these are needed in the context of    dimensional regularisation for loop and phase space integrals .",
    "method of solution : :    algebraic manipulation of nested sums and integral representation .",
    "restrictions on complexity of the problem : :    limited by the memory available typical running time : :    strongly depending on the problem and the availability of libraries .",
    "as solutions of a large class of differential equations , hypergeometric functions @xmath2 appear in many branches of science .",
    "they appear , in particular , in particle physics during the calculation of radiative corrections to scattering cross sections in loop  @xcite or phase space@xcite integrals . in the context of dimensional regularisation",
    ", the arguments of the hypergeometric functions have to be expanded in a small parameter around integer or rational arguments .    until recently",
    ", there was no systematic approach to the expansion of hypergeometric functions .",
    "the required expansions have been produced with a case - by - case approach .",
    "recently a general algorithm has been developed  @xcite for expanding hypergeometric functions and other transcendental functions systematically around their parameters .",
    "this algorithm was implemented  @xcite in the framework of ginac  @xcite .",
    "related work was also presented in refs .",
    "@xcite .    until now , an implementation of the expansion of hypergeometric functions around their parameters was missing in the widely used computer algebra systems mathematica@xcite and maple@xcite , allowing to use hypergeometric functions in connection with the multi - purpose features of these programs .    the aim of this work is to provide an implementation of these expansions for mathematica .",
    "this implementation is prepared in the form of a mathematica package that aims to be tunable and user - friendly .",
    "this paper is structured as follows . in the next two sections , we present the two approaches we used in the package .",
    "section  [ sec : unitarg ] is devoted to hypergeometric functions of unit argument . in section",
    "[ package ] we describe the implementation of our methods in the package hypexp and provide examples of its usage .",
    "finally , we conclude with a summary .",
    "among the hypergeometric functions ( hf ) , the ordinary gau - hypergeometric function [ eq:2f1 ] _ 2f_1(a_1 ,",
    "a_2;b_1;z ) appears most frequently in scientific calculations , and it is therefore worth to focus in particular on this type of functions  @xcite .",
    "we will calculate the @xmath3-expansion of the @xmath4-functions up to and including order @xmath5 by means of the algorithm described below which is based on the well - known integral representation of the @xmath4-functions . applying this method to this subset of functions",
    "has by all means its benefits since it is faster and more efficient than the later described nested sums method .",
    "however , going to higher orders in the @xmath3-expansion or to higher @xmath6-functions quickly reveals that the nested sums method is in general more powerful . nevertheless , applying several independent methods also provides useful consistency checks .",
    "we first set up our notation . in this work",
    "we consider [ nothf ] _",
    "jf_j-1(\\{a_1 ,  , a_j};\\{b_1, ",
    ",b_j-1};z ) with [ notpara ] a_i = a_i+_i , b_i = b_i+_i , a_i , b_iand _ i,_i .",
    "we start the description of our algorithm by defining some subsets of @xmath7 .",
    "let v&:= & \\{z | z 1 } [ setv ] + w&:= & v . [ setw ] furthermore , we state that the mapping [ conformalmapping ] f(z ) : = as a moebius transformation is a bijective mapping and satisfies [ bijective ] f(v ) = v f(w ) = w , f(f(z))=z .",
    "we finally turn our attention to the @xmath4-functions and will first collect some useful formulas  @xcite .",
    "we note that we can shift each of the parameters up or down by integer units via _ 2f_1(,a_2;b_1;z)&= & _",
    "2f_1(,a_2;b_1;z ) + & & + _ 2f_1(,a_2;b_1;z ) , [ aup ] + _ 2f_1(a_1,;b_1;z)&= & _",
    "2f_1(a_1,;b_1;z ) + & & + _ 2f_1(a_1,;b_1;z ) , [ bup ] + _ 2f_1(a_1,a_2;;z)&= & _",
    "2f_1(a_1,a_2;;z ) + & & - _ 2f_1(a_1,a_2;;z ) , [ cup ] + _ 2f_1(,a_2;b_1;z)&= & _",
    "2f_1(,a_2;b_1;z ) + & & + _ 2f_1(,a_2;b_1;z ) , [ adown ] + _ 2f_1(a_1,;b_1;z)&= & _",
    "2f_1(a_1,;b_1;z ) + & & + _ 2f_1(a_1,;b_1;z ) , [ bdown ] + _ 2f_1(a_1,a_2;;z)&= & + & & _",
    "2f_1(a_1,a_2;;z ) + & & - _ 2f_1(a_1,a_2;;z ) .[cdown ] these relations all stem from the formulas @xmath8 \\ , _",
    "2f_1(a_1,a_2;b_1;z ) \\\\ \\dps + a_1 ( z-1 ) \\ , _ 2f_1(a_1 + 1,a_2;b_1;z)=0 \\ , , \\label{3as}\\end{gathered}\\ ] ] @xmath9 \\ , _",
    "2f_1(a_1,a_2;b_1;z ) \\\\ \\dps + a_2 ( z-1 ) \\ , _ 2f_1(a_1,a_2 + 1;b_1;z)=0 \\ , , \\label{3bs}\\end{gathered}\\ ] ] @xmath10 \\ , _",
    "2f_1(a_1,a_2;b_1;z ) \\\\ \\dps + ( b_1-a_1)(b_1-a_2 ) z \\ , _ 2f_1(a_1,a_2 + 1;b_1 + 1;z)=0 \\ , .\\label{3cs}\\end{gathered}\\ ] ]    there is yet another class of relations between @xmath4-functions , namely the relations of gau between contiguous functions  @xcite .",
    "their inclusion would lead only to a minor simplicifation here , and thus we let them serve as a check for our results rather than implementing them in our algorithm .    from the relations ( [ aup ] )  ( [ cdown ] ) we conclude that the knowledge of the @xmath3-expansions of the @xmath11-functions whose integer parts @xmath12 of the parameters read [ basic2f1one ]    ccc \\{0,0,0 } & \\{0,1,0 } & \\{0,0,1 } +   + \\{1,1,0 } & \\{0,1,1 } & \\{1,1,1 }    is sufficient in order to derive the @xmath3-expansion of _ any _ @xmath11-function with @xmath12 being integer - valued .",
    "but even this small set of functions can be reduced further by means of kummer relations  @xcite .",
    "the relevant kummer relations read _",
    "2f_1(a_1,a_2;b_1;z ) & = & ( 1-z)^b_1-a_1-a_2 _ 2f_1(b_1-a_1,b_1-a_2;b_1;z ) , [ kummerab ] + _ 2f_1(a_1,a_2;b_1;z ) & = & ( 1-z)^-a_1 _ 2f_1(a_1,b_1-a_2;b_1 ; ) , [ kummerb ] + _ 2f_1(a_1,a_2;b_1;z ) & = & ( 1-z)^-a_2 _ 2f_1(b_1-a_1,a_2;b_1 ; ) .",
    "[ kummera ] and relate both the functions @xmath13 and @xmath14 to the function @xmath15 , such that we can get along with a mere four functions , namely [ basic2f1onereduced ]    cccc \\{0,0,0 } & \\{0,1,0 } & \\{0,0,1 } & \\{1,1,0 } .    for completeness",
    ", we mention that eq .",
    "( [ kummerab ] ) holds true for all @xmath16 , whereas eqs .",
    "( [ kummerb ] ) and ( [ kummera ] ) are only valid for @xmath17 .    the sets ( [ basic2f1one ] ) and ( [ basic2f1onereduced ] ) of basic hypergeometric functions have , however , one major drawback .",
    "in order to express a general @xmath11-function solely in terms of functions from these sets , repeated application of eqs .",
    "( [ aup ] )  ( [ cdown ] ) is required and additional negative powers of @xmath3 might be generated in prefactors via this procedure .",
    "it is therefore necessary to know the @xmath3-expansions of the basic hypergeometric functions to _ higher _ order than is sought by the @xmath11-function in question .    in order to avoid this disturbing feature",
    "we consider an extended set of basic hypergeometric functions .",
    "the extended set has three major subsets . in the first subset",
    "we collect those basic hf s that contain only positive integer parts , namely [ extendedbasispos ]    cccc \\{0,0,0 } & \\{0,1,0 } & \\{0,0,1 } & \\{1,1,0 } +   + \\{0,1,1 } & \\{1,1,1 } & \\{0,1,2 } & \\{1,1,2 } .",
    "the second subset contains those basic hf s in which @xmath18 .",
    "it reads [ extendedbasiszero ]    ccc \\{-1,-1,0 } & \\{-1,0,0 } & \\{-1,1,0 } .",
    "the third subset finally contains those basic hf s in which @xmath19 : @xmath20 [ extendedbasisminus1 ]    ccc \\{-2,1,-1 } & \\{-1,-1,-1 } & \\{-1,0,-1 }    @xmath21 although some functions in this set might not be considered independent since they are related via kummer relations , we will consider this set as basic since it will allow us to implement the algorithm described below efficiently and conveniently . the goal of the latter is to express a general @xmath11-function entirely in terms of functions from the set ( [ extendedbasispos ] )  ( [ extendedbasisminus1 ] ) by repeated application of both the equations ( [ aup ] )  ( [ cdown ] ) and the kummer relations ( [ kummerab ] )  ( [ kummera ] ) . before we start",
    ", we mention that throughout the algorithm we make use of the symmetry @xmath22 after each step in order to ensure that we always have @xmath23 .    1 .   [ startemitkummer ]",
    "we start the reduction of our @xmath11-function in question by applying kummer relations such that the sum [ minimalsum ] |a_1| + |a_2| + |b_1| gets minimized . especially for high absolute values of the parameters this procedure shortens the algorithm significantly . 2 .",
    "then , if @xmath24 , we apply ( [ cup ] ) repeatedly to all hf s with @xmath24 .",
    "this step ensures that from now on we only have to deal with functions in which @xmath25 .",
    "for the rest of the algorithm we distinguish two cases , namely @xmath19 and @xmath26 .",
    "the further steps for @xmath19 and @xmath26 are illustrated by the flow - charts in figures  [ fig:2f1algbminus1 ] and  [ fig:2f1algbge0 ] respectively .",
    "the ambitious reader is invited to verify that at the end of this algorithm only @xmath11-functions from the set ( [ extendedbasispos ] )  ( [ extendedbasisminus1 ] ) appear and that no negative power of @xmath3 has been generated at any intermediate step . to conclude this section we remark that for the most frequent case in which the three parameters @xmath27 , @xmath28 , and @xmath29 are all non - negative , only the last column of figure  [ fig:2f1algbge0 ] has to be considered .      now that we went through the algorithm for the @xmath11-functions in great detail we have to explain how the @xmath3-expansions of the basic hf s from the set ( [ extendedbasispos ] )  ( [ extendedbasisminus1 ] ) are obtained .    for the functions in eq .",
    "( [ extendedbasispos ] ) we adopt the integral representation  @xcite [ intrep ] _",
    "2f_1(a_1,a_2;b_1;z ) = _ 0 ^ 1 du , which we must restrict to @xmath30 and @xmath31 .",
    "since this approach will be based on the requirement that the integration over @xmath32 and the expansion in @xmath33 commute , we have to set up the additional condition @xmath34 .",
    "one recognizes immediately that from the set  ( [ extendedbasispos ] ) only the functions @xmath35 and @xmath36 satisfy the latter inequality .",
    "the parameters of the other six functions first have to be shifted by means of eqs .",
    "( [ bup ] ) and ( [ cup ] ) until a convergent integral representation is obtained for each of them .",
    "the subsequent expansion of the integral representation in @xmath3 and how one solves the occurring integrals is covered in section  [ subsec : intalg ] .    the functions in eqs .",
    "( [ extendedbasiszero ] ) and ( [ extendedbasisminus1 ] ) , all of which contain at least one negative parameter , are now , for the sake of obtaining _ their _ @xmath3-expansion , expressed in terms of functions from the set  ( [ extendedbasispos ] ) .",
    "this is again done by appropriate application of the kummer relations  ( [ kummerab ] )  ( [ kummera ] ) as well as eqs .",
    "( [ aup ] )  ( [ cup ] ) .",
    "the shift of parameters as described in the preceding two paragraphs is now unavoidably accompanied by the advent of negative powers of @xmath3 in certain prefactors . to be more precise",
    ", we must expand the functions @xmath37 and @xmath36 up to and including order @xmath38 and the other six functions of eq .",
    "( [ extendedbasispos ] ) to order @xmath39 .",
    "this might at first glance seem peculiar , but it turns out that at the respective highest order in @xmath3 integrals of the same type appear .",
    "we conclude from this that , with the tools provided here , it is in principle possible to expand a certain class of @xmath40-functions even to order @xmath39 .",
    "however , for reasons of simplicity and clearness we apply the method of integration throughout only for the expansion of @xmath11-functions up to and including order @xmath38 .",
    "( 0,0 ) ( -306,200)(612,40 ) ( -306,110)(72,55 ) ( -306,70)(72,20 ) ( -198,110)(72,55 ) ( -198,35)(72,60 ) ( -198,-20)(72,35 ) ( -90,110)(72,55 ) ( -90,35)(72,60 ) ( -80,-5)(72,20 ) ( -80,-35)(72,20 ) ( 18,110)(72,55 ) ( 18,35)(72,60 ) ( 28,-20)(72,35 ) ( 28,-65)(72,35 ) ( -54,-100)(236,20 ) ( -80,-140)(288,20 ) ( 126,110)(72,55 ) ( 126,35)(72,60 ) ( 126,-35)(72,50 ) ( 234,110)(72,55 ) ( 234,35)(72,60 ) ( 234,-45)(72,60 ) ( 234,-125)(72,65 ) ( 0,200)(0,-1)15 ( -270,185)(1,0)540 ( -270,185)(0,-1)20 ( -162,185)(0,-1)20 ( -54,185)(0,-1)20 ( 54,185)(0,-1)20 ( 162,185)(0,-1)20 ( 270,185)(0,-1)20 ( -270,110)(0,-1)20 ( -162,110)(0,-1)15 ( -54,110)(0,-1)15 ( 54,110)(0,-1)15 ( 162,110)(0,-1)15 ( 270,110)(0,-1)15 ( -162,35)(0,-1)20 ( -88,35)(0,-1)60 ( -88,5)(1,0)8 ( -8,5)(1,0)13 ( 5,5)(0,1)132.5 ( 5,137.5)(1,0)13 ( -88,-25)(1,0)8 ( -80,-33)(-1,0)23 ( -103,-33)(0,1)170.5 ( -103,137.5)(-1,0)23 ( 20,35)(0,-1)82.5 ( 20,-2.5)(1,0)8 ( 20,-47.5)(1,0)8 ( 162,35)(0,-1)20 ( 270,35)(0,-1)20 ( 270,-45)(0,-1)15 ( 64,-65)(0,-1)15 ( 64,-100)(0,-1)20    ( 0,0 ) ( -306,200)(612,40 ) ( -306,145)(240,20 ) ( -306,105)(240,20 ) ( -306,65)(72,20 ) ( -222,65)(72,20 ) ( -138,65)(72,20 ) ( -306,-10)(72,60 ) ( -222,-10)(72,60 ) ( -306,-65)(72,35 ) ( -202,-50)(72,20 ) ( -202,-80)(72,20 ) ( -250,-120)(168,20 ) ( -250,-160)(168,20 ) ( -36,145)(240,20 ) ( -36,105)(240,20 ) ( -36,65)(72,20 ) ( 48,65)(72,20 ) ( 132,65)(72,20 ) ( -36,-10)(72,60 ) ( 48,-10)(72,60 ) ( -36,-65)(72,35 ) ( 48,-65)(72,35 ) ( 234,110)(72,55 ) ( 234,35)(72,60 ) ( 234,-40)(72,60 ) ( 234,-120)(72,60 ) ( 106,-169)(200,35 ) ( 106,-199)(200,20 ) ( 0,200)(0,-1)15 ( -186,185)(1,0)456 ( 270,185)(0,-1)20 ( -186,185)(0,-1)20 ( 84,185)(0,-1)20 ( -186,145)(0,-1)20 ( -270,95)(1,0)168 ( -270,95)(0,-1)10 ( -186,105)(0,-1)20 ( -102,95)(0,-1)10 ( -270,65)(0,-1)15 ( -186,65)(0,-1)15 ( -270,-10)(0,-1)20 ( -210,-10)(0,-1)60 ( -210,-40)(1,0)8 ( -210,-70)(1,0)8 ( -166,-80)(0,-1)20 ( -166,-120)(0,-1)20 ( -51,155)(1,0)15 ( -51,-150)(0,1)57 ( -51,-93)(0,1)53 ( -51,-40)(0,1)59.5 ( -51,19.5)(0,1)55.5 ( -51,75)(0,1)42 ( -51,117)(0,1)38 ( -82,-150)(1,0)17.5 ( -64.5,-150)(1,0)13.5 ( -130,-40)(1,0)41.5 ( -88.5,-40)(1,0)37.5 ( -66,75)(1,0)9.5 ( -56.5,75)(1,0)5.5 ( 84,145)(0,-1)20 ( 0,95)(1,0)168 ( 0,95)(0,-1)10 ( 84,105)(0,-1)20 ( 168,95)(0,-1)10 ( 0,65)(0,-1)15 ( 84,65)(0,-1)15 ( 0,-10)(0,-1)20 ( 84,-10)(0,-1)20 ( 219,137.5)(1,0)15 ( 219,-47.5)(0,1)63.25 ( 219,15.75)(0,1)59.25 ( 219,75)(0,1)33.25 ( 219,108.25)(0,1)29.25 ( 120,-47.5)(1,0)51.5 ( 171.5,-47.5)(1,0)47.5 ( 204,75)(1,0)9.5 ( 213.5,75)(1,0)5.5 ( 270,110)(0,-1)15 ( 270,35)(0,-1)15 ( 270,-40)(0,-1)20 ( 270,-120)(0,-1)14 ( 206,-169)(0,-1)10        expressing a hypergeometric function @xmath41 with @xmath42 in terms of its integral representation according to eq . ( [ intrep ] ) and subsequently expanding in  @xmath43 yields integrals that have the general form [ intgeneral ] i(_1,_2,_3,_4,_5,z ) : = _ 0 ^ 1 du , where the @xmath44 are non - negative integers and @xmath30 . the results of these integrals contain rational functions , logarithms , polylogarithms @xmath45 , nielsen polylogarithms @xmath46 , and harmonic polylogarithms @xmath47 , all of which will be explained in more detail in sections  [ conversion_to_known ] and in appendix  [ app : rrlpn ] .",
    "let us define the _ weight _ @xmath48 of the integral by [ weightint ] w : = _ 2 + _ 3 + _ 4 + 1 - _ _ 5,0 .",
    "the weight @xmath48 is related to the weight of the harmonic polylogarithms defined later , namely any integral of weight @xmath48 can be expressed in terms of harmonic polylogarithms of weight @xmath48 or less . in order to guarantee that",
    "the @xmath33-expansion of _ any _ @xmath4-function up to order @xmath49 can be performed , the computation of all integrals with weight @xmath48 up to @xmath50 is required .      in order to make the computation more efficient",
    "we now show that any integral @xmath51 can be expressed in terms of integrals with @xmath52 and of at most the same weight as the original one :    1 .",
    "[ start1 ] in the case @xmath53 , the integral @xmath54 can , via the replacement [ replaceu ] u = ( uz-1 ) + in the numerator and subsequent cancellation of the corresponding denominators , be expressed as a linear combination of integrals of the form @xmath55 2 .   [ start2 ] in the case @xmath56 , we can apply the same steps as before and eventually arrive at integrals of the form @xmath57 in other words , the replacement rule ( [ replaceu ] ) for @xmath32 yields integrals in which at least one of the entries @xmath58 and @xmath59 is zero . 3 .",
    "[ intermed1 ] we continue our reduction by manipulating integrals of the form + @xmath60 with @xmath61 . by recalling the relation [ intreduction ] _ 0 ^ 1 du = 0 and explicitly taking the derivative of the product , one derives the relation & & + & & _ 1 i(_1 - 1,_2,_3,_4,0,z ) - _ 2 i(_1,_2 - 1,_3,_4,0,z ) + & & + _ 2 i(_1 - 1,_2 - 1,_3,_4,0,z ) - _ 3 i(_1,_2,_3 - 1,_4,0,z ) + & & + z _",
    "4 i(_1,_2,_3,_4 - 1,1,z ) - z _ 4 i(_1 + 1,_2,_3,_4 - 1,1,z ) .",
    "+ & & [ lowerchi1 ]    repeated application of steps  [ start1 ] .    [ intermed1 ] . finally yields an expression which contains only integrals with @xmath62 and of at most the same weight as the integral we started with .    1 .   [ intermed2 ]",
    "the remaining task is now to subsequently lower @xmath63 . by repeated application of the relations @xmath64\\\\ \\dps + \\frac{(-z)^{\\chi_5}}{(\\chi_5 - 1 ) ! } \\cdot \\sum_{v=0}^{\\chi_4}\\big\\{\\frac{\\chi_4!}{(\\chi_4-v+1 ) ! }",
    "\\big[\\sum_{j=1}^{\\chi_5 - 1}\\left(\\!\\!\\!\\begin{array}{c}\\chi_5 - 1\\\\j\\end{array}\\!\\!\\!\\right ) \\ , ( -1)^j \\ , j^{-v}\\big]\\\\ \\times \\frac{d^{\\,^{\\chi_5}}}{dz^{^{\\chi_5 } } } i\\left(0,\\chi_2,\\chi_3,\\chi_4-v+1,0,z\\right)\\big\\ } \\label{chi5g1}\\end{gathered}\\ ] ] for @xmath65 and @xmath66 one eventually arrives at an expression of the desired form .",
    "[ finalstep ] we can , however , reduce the number of distinct integrals even further .",
    "the transformation @xmath67 in the integrand of ( [ intgeneral ] ) allows us to represent integrals with @xmath68 in terms of integrals with @xmath69 . by means of the relation [ logaufspalten ]",
    "= ( 1-z ) + ( 1-u ) , which holds true for all @xmath17 and @xmath70 , one easily derives the formula [ chitauschen ] i(0,_2,_3,_4,0,z ) = _ m=0^_4 ( + c_4 + m + ) ^_4-m(1-z ) i(0,_3,_2,m,0 , ) . since this formula also transforms the argument @xmath1 , we derived relations between polylogarithms that allow to simplify again these arguments .",
    "the argument transformations of the polylogarithms are described in section  [ functionsmodified ] and in appendix  [ app : rrlpn ] .    to summarize , for a given weight @xmath48 the set of basic integrals consists of all [ summarizeint ] i(0,_2,_3,_4,0,z ) _ 2 + _ 3 + _ 4 = w .",
    "integrals thereof with @xmath71 can be reexpressed in terms of integrals with @xmath72 and argument @xmath73 and are therefore easily obtained once the argument transformations of the polylogarithms are taken into account .",
    "we implemented this algorithm in the function hypexpint .",
    "this function will be explained in detail in section  [ functions ] . for the actual calculation of the @xmath33-expansion of @xmath4-functions",
    "we need a bit less than is provided by the algorithm and by the function hypexpint .",
    "we have : _ 1 & & 2 , + _ 5 & & 1 .",
    "the first inequality arises from the fact that we have to shift the parameters of our basic hypergeometric functions , eq .",
    "( [ extendedbasispos ] ) , via the relations ( [ bup ] ) and ( [ cup ] ) in order to obtain convergent integral representations . in this procedure , @xmath74 , which eventually determines the highest value for @xmath75 to occur , assumes values up to 2 .",
    "similarly , the parameter @xmath76 determines the highest value for @xmath77 that can show up . with this in mind one",
    "derives the second inequality directly from the collection ( [ extendedbasispos ] ) of basic hypergeometric functions .",
    "putting @xmath78 in the integrals @xmath54 immediately turns our attention to an other type of integrals that we considered useful to implement .",
    "we define the function @xmath79 by [ bigu ] u(n , m , p ) : = _ 0 ^ 1 du ^n(u ) ^m(1-u ) u^p with @xmath80 and @xmath81 , @xmath82 being non - negative integers . in the case",
    "@xmath83 the inequality @xmath84 has to be satisfied in order to yield a convergent integral .",
    "we demonstrate below how _ any _ convergent integral @xmath79 can be expressed in terms of @xmath85 and integrals of the form @xmath86 .    1",
    ".   we start by considering the case @xmath87 ; @xmath88 and @xmath89 .",
    "repeated application of u(n , m , p ) & = & - u(n-1,m , p ) + u(m-1,n,-1 ) + & & + ^-p-1_=1 u(n , m-1,- ) leaves us with integrals of the form @xmath86 and @xmath90 , where the latter type still happens to have @xmath91 and @xmath89 .",
    "these integrals get reduced via the recursion relation u(0,m , p ) = ^-p-1_=1 u(0,m-1,- ) to integrals with @xmath92 .",
    "we now proceed with the case @xmath93 , in which the function @xmath94 is symmetric in @xmath95 and therefore @xmath96 can always be achieved . applying this in turn with the formula u(n , m,0 ) & = & - n ^m_=0 u(n-1,,0 ) + & & + n _",
    "= 1^m u(n-1,,-1 ) for @xmath97 eventually yields integrals of the desired form .",
    "3 .   in the case",
    "@xmath98 we apply the same trick as in step  [ intermed1 ] of section  [ subsubsec : descralg ] and derive from _",
    "0 ^ 1 du = 0 the recurrence relation ( p+1 ) u(n , m , p ) & = & p u(n , m , p-1 ) + n u(n-1,m , p-1 ) + & & - n u(n-1,m , p ) - m u(n , m-1,p ) .    repeated application of these steps finally yields an expression which only contains integrals of the demanded form .",
    "@xmath99 is trivially found to be unity . a nice algorithm for the computation of integrals of the form @xmath100",
    "is given in section 7.9.5 of ref .",
    "@xcite and will not be repeated here .",
    "the evaluation of integrals @xmath79 with @xmath80 and @xmath81 , @xmath82 being non - negative integers can be called with the function hypexpu , and an example can be found in section  [ functions ] .",
    "the connection to @xmath54 in @xmath101 is given by i(_1,_2,_3,_4,_5,1 ) = _ j=0^_1 ( -1)^j-_5 (    c _ 1 + j    ) u(_3+_4,_2,j-_5 ) for @xmath102 . by means of this relation",
    "the function hypexpint can be directly called with unit argument , see section  [ functions ] .",
    "in this section , we briefly review the @xmath103 and @xmath104 sums and their properties introduced in @xcite .",
    "their definitions are @xmath105 or the equivalent recursive definitions @xmath106 where we introduced the short - hand notation @xmath107 the number @xmath108 is called the depth and the sum of the @xmath109 s is called the weight of the nested sum .",
    "the @xmath103 and @xmath104 sums are related , since their expressions differ only by the upper summation limits in the recursion relation . using @xmath110",
    ", we can convert @xmath103 into @xmath104 sums and vice versa by means of recursive application of the identities @xmath111 and reconstructing @xmath104 sums from the @xmath112 with help of the definition ( [ defz ] ) .",
    "the @xmath104 and @xmath103 sums form two algebrae , that means that a product of @xmath104 sums is expressible as a sum of @xmath104 sums .",
    "using @xmath113 recursively and reconstructing @xmath104 sums from the @xmath112 with ( [ defz ] ) proves the claim .",
    "likewise , a product of @xmath103 sums is a linear combination of @xmath103 sums . since products are defined for equal upper summation limit @xmath81 , it is useful to have a relation between sums @xmath114 of different @xmath81 s",
    ". the recursive use of the following formulae allows to change the upper summation boundary of a @xmath104 or @xmath103 sum , and , doing so , to bring all the nested sums to the same upper summation limit .",
    "this is called `` syncronizing the sums '' in @xcite @xmath115 @xmath116 since the definition of @xmath103 and @xmath104 sums is for denominators of the form @xmath117 , it will also be useful to convert sums of the form @xmath118 to the form of the definition , that is , with @xmath119 .",
    "if the depth of the sum is zero , we use @xmath120 and otherwise we use @xmath121      special cases of @xmath104 and @xmath103 sums are related to other functions . for finite upper summation limit",
    "we have @xmath122 where the @xmath123 are the euler - zagier sums @xcite and the @xmath124 are the harmonic sums @xcite . for infinite upper summation limit",
    ", we have the following identities @xmath125 @xmath126 are the goncharov multiple polylogarithms @xcite .",
    "a special case of the goncharov multiple polylogarithms are the harmonic polylogarithms ( hpl ) @xmath127 of remiddi and vermaseren @xcite .",
    "@xmath128 are the multiple zeta values @xcite .",
    "the hpl s can be reduced to classical polylogarithms ( @xmath129 ) @xcite and nielsen polylogarithms ( @xmath130 ) @xcite up to weight 4 in our case . since for hypergeometric functions we only have one free variable",
    ", we will only use the last two identities .",
    "the package hypexp uses the package hpl @xcite to deal with the harmonic polylogarithms .    here",
    "one can see the usefulness of the @xmath104 sums as a connection between the euler - zagier sums ( which appear in the expansion of the @xmath131 function , as will be shown in section [ gammaexpansion ] ) and the harmonic polylogarithms which will eventually appear in the coefficients of the expansion .",
    "@xmath131 functions can be expanded around integer values as follows @xcite @xmath132 for @xmath133 integer and @xmath134 . for negative ( or vanishing ) @xmath133",
    ", one has to use the identity @xmath135 so that @xmath136 and @xmath137      the algorithm described in this section is the adaptation of the algorithm of type a of @xcite for the special case of hypergeometric functions .",
    "the definition of the hypergeometric series is given by @xmath138 where @xmath139 is the pochhammer symbol .",
    "we denote the coefficients in front of the sum with @xmath140 and the sum itself with @xmath141 . the parameters @xmath142 and @xmath143 are of the form @xmath144 in order to give the @xmath145-expansion ( to order @xmath81 ) of the hypergeometric function , one has to expand the product of @xmath140 and @xmath141 to order @xmath81 .",
    "let us have a look at the required depth of the @xmath145-expansion for these factors .",
    "* for each negative @xmath146 , one gets a factor @xmath147 in @xmath140 , and factors @xmath145 in @xmath141 , but only for the values @xmath148 of @xmath149 . * for vanishing @xmath146 s",
    "one gets a factor @xmath147 in @xmath140 but no factors of @xmath145 in @xmath141 . * for negative @xmath150 s",
    ", one gets factors of @xmath145 in @xmath140 and factors @xmath147 in @xmath141 for @xmath151 , * for vanishing @xmath150 s , one gets factors of @xmath145 in @xmath140 but no factors @xmath147 in @xmath141 .",
    "this means that for the expansion of the hypergeometric function to order @xmath81 we have to compute the expansion of @xmath140 to order @xmath152 and for @xmath141 to order @xmath153 note that the above argument explains why the expansion of @xmath154 starts with @xmath155 , whereas that of ( for example ) @xmath156 has a @xmath147 term .",
    "we treat first the prefactor @xmath157 we expand the @xmath131 functions with the formulae of section [ gammaexpansion ] , which leads to @xmath158 we have to expand the product of @xmath104 sums appearing in @xmath159 to the order @xmath160 because of the factors @xmath147 for each negative @xmath161 . since the factors @xmath162 and @xmath163 will cancel those of the expansion of the @xmath131 functions of the sum @xmath141 we will only consider @xmath164 the coefficients of the @xmath145-expansion of @xmath165 are @xmath104 or @xmath103 sums with finite upper summation limit",
    "these are rational functions that can be computed easily using the recursive definition .",
    "we now turn to the sum @xmath166 first one makes use of the identity @xmath167 to bring all @xmath168 s and @xmath169 s to the form @xmath170 times some rational functions of @xmath149 .",
    "then one expands the @xmath131 functions with the formulae of section [ gammaexpansion ] .",
    "as one knows that there will appear terms with , at worst , as many factors @xmath171 as there are strictly negative @xmath150 s , one has to expand the @xmath131-functions to the order @xmath172 in order to be able to get @xmath141 to the required order @xmath173 .",
    "the result of this expansion is a product of    * the factors @xmath174 from the expansion of the @xmath170 .",
    "we use them to cancel those of @xmath140 . from now on , we denote by @xmath175 the sum @xmath141 without these factors . * a product of @xmath145-expansions with coefficient @xmath176 or @xmath177 .",
    "these products are treated as above , first converting the @xmath103 sums into @xmath104 sums , then expanding the products of @xmath104 sums into a sum of single @xmath104 sums . in this case",
    "one can not calculate numerical values for the @xmath104 sums , due to the @xmath149 in the argument . * a rational function @xmath178 of @xmath149 and @xmath145 from the factors @xmath179 in the reduction @xmath167 .",
    "this is reduced by means of expansion into partial fractions to a sum of coefficients times single denominators .",
    "the next step is to bring the factors @xmath180 appearing in @xmath178 to the form @xmath117 suitable for applying the definition of the @xmath104 sums .",
    "the method is presented in section [ definitions ] .    at this point",
    ", one can perform the last summation over @xmath149 , as described in the following section .",
    "the result is a sum of @xmath104 sums with upper summation limit equal to infinity .",
    "these can be converted to more common functions , as described in section [ conversion_to_known ] .    to obtain the full expansion , one has to multiply the expansions of @xmath165 and @xmath175 and to add unity to the result .",
    "the algorithm reduces the sum @xmath175 to a sum of terms of the form @xmath181 here we have to distinguish several cases .",
    "the general strategy is to perform the summation over @xmath149 until the denominator is positive for each @xmath149 , then to simplify the remainder to the form of the definition of a @xmath104 sum .",
    "we list below the different kinds of terms that can appear and for each of them the way it is processed .",
    "* @xmath104 sums of argument @xmath182 times one denominator with negative offset@xmath183here one has to perform the sum up to the @xmath184-th term , according to @xmath185 one then expands the first two terms to the required order in @xmath145 .",
    "the occurring @xmath104 sums can be evaluated , as their upper summation limits are finite .",
    "we now take a closer look at the last sum @xmath186 here one only keeps terms up to the required order in @xmath145 in the sum over @xmath187 .",
    "the @xmath104 sum in the last term has to be syncronized down to argument @xmath182 , as described in section [ definitions ] .",
    "* @xmath104 sums of argument @xmath182 times one denominator without offset @xmath188 if @xmath81 is positive , following the definition of the @xmath104 sums , one gets @xmath189 in many cases , the harmonic polylogarithm can be expressed in terms of more common functions .",
    "+ if @xmath81 is negative , one has to interchange the first two summations @xmath190 the last sum @xmath191 is a polynomial of degree @xmath82 in @xmath192 . the coefficient of each power of @xmath192 is a rational function in @xmath179 .",
    "the @xmath193 of this polynomial can be combined with the @xmath194 from the definition of the @xmath104-sum .",
    "we can also factor out an @xmath195 .",
    "the remainder is then a polynom in @xmath192 with rational coefficient functions of @xmath179 .",
    "the result is then @xmath196 we are now left over with a sum of terms of the form @xmath197 recursive use of this formula leads either to @xmath104 sums with a denominator with positive @xmath198 or to a @xmath104 sum multiplied by a denominator with negative exponent @xmath81 but with zero depth .",
    "for the latter we can apply @xmath199 which is also a rational function in @xmath179 .",
    "* @xmath104 sums of argument @xmath182 without denominators@xmath200 the summation can be performed by exchanging the first two summations @xmath201 * single denominator with negative offset @xmath202 here we perform the sum explicitly for the @xmath184 first terms @xmath203 we can simplify the last summation if we are only interested in the expansion to the order @xmath81 : @xmath204 note that this works for positive and negative @xmath82 . *",
    "single denominator with positive offset @xmath205 we use the formula @xmath206",
    "the hypergeometric series [ hypseries ] _",
    "jf_j-1(\\{a_1 ,  , a_j};\\{b_1, ",
    ",b_j-1};z ) = _ n=0^ converges in @xmath101 only if the condition [ condition ] _",
    "t=1^j-1 b_t - _ r=1^j a_r > 0 is satisfied .",
    "this implies that , if [ sum_s ] s _",
    "t=1^j-1 b_t - _ r=1^j a_r > 0 , the expansion in @xmath3 commutes with the procedure of taking the limit @xmath207 , and the series expansion of the function @xmath208 around @xmath209 has a well - defined finite radius of convergence .",
    "we therefore call the case @xmath210 _ non - critical_.    the case @xmath211 , on the other hand , will be referred to as _ critical _ since this case requires more care and additional explanation on its treatment . by means of an algorithm based on partial fractions it is possible to express a hf @xmath6 of unit argument and value @xmath212 in terms of @xmath213 hypergeometric functions @xmath6 , also of unit argument , but of value @xmath214 or higher .",
    "we outline this procedure for the case in which no two of the @xmath215 are equal . always assuming convergence , we start with the series expansion  ( [ hypseries ] ) of the function [ starthyp ] _ jf_j-1(\\{a_1 + 1 ,  , a_j+1};\\{b_1 + 1,  ,b_j-1 + 1};1 ) and multiply and divide therein by the fraction . the inverse of the above expression gets combined appropriately with the @xmath131-functions of the pochhammer symbols , whereas the multiplied one gets expanded into partial fractions , yielding [ partialbruch ] n - _",
    "= 1^j-1 b _ + _",
    "= 1^j a _ + _",
    "the term linear in @xmath81 gives back the function  ( [ starthyp ] ) , which then cancels on both sides of the equation .",
    "the constant term is proportional to the function [ seeking ] _",
    "jf_j-1(\\{a_1 ,  , a_j};\\{b_1, ",
    ",b_j-1};1 ) for which we are seeking and for which we can now solve the equation .",
    "each term of the last sum in  ( [ partialbruch ] ) contains a hypergeometric function of value @xmath214 . after some intermediate steps ,",
    "we arrive at [ finalatone ] & & + & & = _",
    "= 1^j-1 + & & _ jf_j-1(\\{a_1,  ,a_j};\\{b_1,  ,b_-1,b_+1,b_+1,  ,b_j-1};1 ) .",
    "the case in which there is any combination of equal @xmath215 s can be treated analogously .",
    "the linear and the constant term in the expression  ( [ partialbruch ] ) remain unchanged , only the last sum will look different , and the final expression  ( [ finalatone ] ) will contain hf s of value @xmath214 or higher .",
    "repeated application of this algorithm allows to express a critical hf as a linear combination of non - critical ones , the two expressions being related via analytic continuation .",
    "since the analytic continuation is unique and the expression obtained by the algorithm has a well - defined expansion around @xmath209 , we can associate the expansion at hand also with the original critical hf . in this sense",
    "the @xmath3-expansion of a critical hf has to be understood and the user must be aware of this feature .",
    "the same phenomenon happens , by the way , for the well - known @xmath216-function .    to elaborate a bit more on this we state that the above procedure works only for @xmath217 and that the case @xmath218 is simpler : [ 2f1atone ] _",
    "2f_1(a_1,a_2;b_1;1 ) = . again",
    ", the series expansions of the @xmath216-functions have to be understood in the sense of analytic continuation .",
    "the crucial property of a critical function is that one can find at all a value for @xmath3 such that the series  ( [ hypseries ] ) converges , i.e. [ epsremains ] _",
    "t - _ r=1^j _ r 0 in the case @xmath219 . if @xmath219 and  ( [ epsremains ] ) yields zero , the expression is divergent for all values of @xmath3 and no remedy can be found .",
    "the way in which the hfs of unit argument are implemented in the package is described in section  [ functions ] .",
    "we implemented the results of the preceding sections in the mathematica package hypexp .",
    "it allows to expand arbitrary @xmath220-functions to arbitrary order in a small quantity around integer parameters and can be obtained from  @xcite .",
    "the results are displayed in terms of rational functions , logarithms , polylogarithms , nielsen polylogarithms , and harmonic polylogarithms .",
    "the results given by these functions are not systematically simplified using simplify , since the simplification might take longer than the expansion itself , in particular for expansions to high orders .",
    "a simplify might produce a more compact result .",
    "furthermore , the package hypexp should be loaded at the beginning of the session .",
    "the package hypexp adds two new symbols    * $ hypexppath is the path where the hypexp package is installed . *",
    "$ hypexpfailed is the symbol returned by the package in case of failure .",
    "the package adds the following functions    * hypexp[hypergeometric2f1[  ,x]@xmath145,n ] gives the @xmath145 expansion of the enclosed hypergeometric function .",
    "the function hypexp applied to anything else but a hf will leave it intact . therefore one can map it onto an expression containing hypergeometric functions , and only the hf s will be expanded to the required order in @xmath145 .",
    "this is illustrated by the following example : +   + the result is not given as a seriesdata since this would have the effect of forcing the expansion of the rest of the expression .",
    "this example also illustrates that the results produced by the package are not simplified , as this might be time consuming and not always appropriate .",
    "if one wants to get a compact result , one should use simplify or even fullsimplify .",
    "the prefactors that accompany the variable @xmath3 can also be symbolic , and the expansion also works for argument @xmath78 as shown by the following example .",
    "+   + the technicalities of the exansion in the case of the argument being unity are explained in section [ sec : unitarg ] . *",
    "the function hypexpint@xmath221 $ ] evaluates integrals of the form [ hypexpint ] i(_1,_2,_3,_4,_5,z ) w = _ 2 + _ 3 + _ 4 + 1 - _ _ 5,0 5 , as described in section  [ subsec : intalg ] .",
    "all the @xmath222 are non - negative integers and @xmath30 .",
    "the upper bound on the weight @xmath48 stems from the fact that the expansion of @xmath4-functions up to order @xmath223 also involves integrals of weight 5 .",
    "the integral can be called with the argument being symbolic : +   + arguments that match the pattern @xmath224 are treated with the relations between polylogarithms of different arguments , section  [ functionsmodified ] and appendix  [ app : rrlpn ] , being already taken into account : +   + finally , also all @xmath30 can be inserted directly .",
    "for the special cases @xmath225 and @xmath78 the integral simplifies considerably and the restriction @xmath226 can be dropped .",
    "+   + in the case @xmath78 we refer the reader also to the next paragraph and to section  [ subsubsec : funcheu ] . * the function hypexpu@xmath227 $ ] is described in section  [ subsubsec : funcheu ] .",
    "it evaluates integrals of the form [ bigupackage ] u(n , m , p)p n , m the only additional constraint on the parameters is that in the case @xmath83 the condition @xmath84 has to be satisfied in order to yield a convergent integral .",
    "+   + * hypexpisknowntoorder[@xmath76,  ,@xmath228 , @xmath229, ",
    ",@xmath230,@xmath81 ] returns true if the expansion of the hypergeometric function with parameters corresponding to the first arguments of the function is available in the library to the order @xmath81 .",
    "* hypexpaddtolib adds an expansion to the library , this method is described in one of the next sections .",
    "the package also updates series to allow it to expand compound expressions containing hypergeometric functions .",
    "the difference between this and the mapping with hypexp is that the other functions of @xmath145 are also expanded , as shown by the following example : +   + this allows to work with the expansion of hf s as mathematica users are used to .",
    "we also updated the series expansion of the regularized hypergeometric functions since they are nothing else but hypergeometric functions divided by @xmath216-functions .    since the incomplete @xmath143 function is a special case of hf , @xmath232 it is also possible to expand it with the method described in this paper .",
    "therefore we also updated the series expansion of the incomplete @xmath143 function around integer values of its parameters , as shown by the following example + in order to account for the relations between polylogarithms @xmath45 and nielsen polylogarithms @xmath233 of different arguments we updated @xmath234 and implemented the relations  ( [ firstpoly ] )   ( [ lastpoly ] ) given in appendix  [ app : rrlpn ] .",
    "this is also illustrated with an example .",
    "+      since the computation of the expansion for high orders and large parameters is quite time consuming , it is of interest to store the results that have been already calculated and reuse them , instead of recalculating them .",
    "the hypexp library contains expansions of hf for some sets of parameters",
    ". when an expansion is requested , the package first checks whether the library contains the expansion for the requested set of parameters to the requested order .",
    "if so , it loads it and gives the answer , if not proceeds with the calculation along the line of the preceding sections .",
    "the library management can be called dynamic in the sense that elements of the library are loaded in the memory at run time only if they are needed .",
    "the package hypexp has a standard library .",
    "further libraries can be added , depending on the needs and on the amount of available disk space .",
    "the different libraries can be found at @xcite .",
    "the package also allows to extend the provided libraries with hf s not included in the standard libraries , or included but not to a sufficiently high expansion order .",
    "the expansion of @xmath235 to the order @xmath236 can be added to the library with the command + hypexpaddtolib[@xmath76,  ,@xmath228,@xmath229, ",
    ",@xmath230,n ] + where @xmath237 are integers . upon this command ,",
    "mathematica computes the expansion for arbitrary @xmath145-parts added to the integers @xmath238 and @xmath239 . as arbitrary coefficients are more difficult than numbers , the time needed to add an expansion to the library is longer than the time for a single evaluation . therefore adding expansions to the library",
    "is only useful if this expansion shows up repeatedly .",
    "the result is then saved in the library in the installation directory , so that it can be used in future mathematica sessions .",
    "since the results are supposed to be used several times , the result of the expansion is simplified using simplify , in order to get a more compact result .",
    "this , in turn , makes the extension of the library even more time consuming .",
    "the library files are copied to the installation directory of the package during the installation .",
    "further libraries can be added as descriebed at @xcite .    due to our naming conventions for the entries in the library files ,",
    "the expansions of hf s of parameters higher in absolute value than 9 are not allowed .",
    "this might be fixed if such hf s are required .",
    "let us consider @xmath240 for @xmath82 , @xmath187 , @xmath161 being positive integers , @xmath241 and @xmath242 , @xmath243 small . using the definition one",
    "gets @xmath244 we are interested in the terms for @xmath81 between @xmath82 and @xmath161 .",
    "all further terms vanish , since then @xmath245 becomes 0 .",
    "they are equal to @xmath246 if one wants to define a value for @xmath247 one has to take the limit of the above expression for @xmath242 and @xmath243 going to zero .",
    "the result depends on the way one approches @xmath248 with @xmath242 and @xmath243 . in @xcite",
    ", one can find the formula @xmath249 which is also the result mathematica gives .",
    "this corresponds to a trajectory in the @xmath250-plane going along the @xmath243 axis .",
    "taking a trajectory along the @xmath242 axis would lead to a @xmath251 pole .",
    "any other trajectory gives a constant times a function .",
    "this function happens to be the second solution of the differential equation satisfied by @xmath252 , @xmath253 with @xmath254 in the case of negative or vanishing @xmath255 , the value at @xmath256 of this function is also equal to unity .",
    "this prevents us from discriminating the two solutions by their values at @xmath256 .",
    "since the use of the kummer identity ( [ kummerab ] ) @xmath257 induces a rotation in the @xmath250 plane and since mathematica always chooses the trajectory along the @xmath243 axis , the result for the hf and its kummer transform will not be identical in mathematica for this particular case .",
    "the limits are set by the cpu and the amount of memory available . in all practical cases known to the authors , however ,",
    "the result is given in a reasonable time .",
    "the following table shows the cpu time dependence for the expansion of some hypergeometric functions to different orders on a 3 ghz processor/1.5 gb ram machine . +    [",
    "cols=\"<,^,^,^,^\",options=\"header \" , ]      + this package was developed in mathematica 5.0 and should work on newer versions .",
    "in this paper we presented the mathematica package hypexp for expanding arbitrary hypergeometric functions to arbitrary order in a small quantity around integer - valued parameters .",
    "these expansions are required for example in the computation of multi - loop or multi - particle phase space integrals in dimensionally regularized quantum field theory .",
    "a first application was presented in ref .",
    "@xcite , namely the @xmath3-expansion of the two - loop quark and gluon form factors whose exact analytic expressions contain hypergeometric functions in addition to @xmath131-functions .",
    "we would like to thank thomas gehrmann and alejandro daleo for useful discussions , a careful reading of our manuscript , and for patiently testing our early versions .",
    "we also wish to thank gudrun heinrich for independent numerical checks of the series expansions using the sector decomposition method described in  @xcite .",
    "this research was supported by the schweizerischer nationalfonds under contract 200021 - 101874 .",
    "in this appendix we collect useful relations among logarithms , polylogarithms @xmath45 , and nielsen polylogarithms @xmath46 as well as some additional integrals .",
    "the package updates @xmath234 as described in section  [ functionsmodified ] in order to allow for the implementation of those relations that relate polylogarithms and nielsen polylogarithms , i.e. eq .  ( [ firstpoly ] )    ( [ lastpoly ] ) .",
    "the relations are based on  @xcite and hold at least for all @xmath17 , where @xmath258 is defined in eq .",
    "( [ setw ] ) .",
    "( ) & = & ( -z ) - ( 1 - z ) + ( ) & = & -(1 - z ) + ( ) & = & -(1 - z ) + ( z ) li_2(1 - z ) & = & -li_2(z ) + - ( z ) ( 1 - z)[firstpoly ] + li_2 ( ) & = & -li_2(z ) - ^2(1 - z ) + li_2()&= & li_2(z ) - ^2(1 - z ) + + ( 1 - z ) ( -z ) + li_2 ( ) & = & - ^2(-)- - li_2(z ) + li_2()&= & ^2 ( - ) + - ( ) ( ) + li_2(z ) li_3()&= & -li_3(z ) - li_3(1 - z ) + ( 3 ) + ( 1 - z ) + & & - ( z)^2(1 - z ) + ^3(1 - z ) + li_3()&= & ^3(1 - z ) - ( -z)^2(1 - z ) + ( z)^2(1 - z ) + & & - ( 1 - z ) + li_3(1 - z ) + li_3 ( ) & = & li_3(z ) - ( - ) - ^3(- ) + li_3()&= & - li_3(z ) - li_3(1 - z ) + ( 3 ) - ^3 ( ) - ( ) + & & + ^3(1 - z ) + ( 1 - z ) - ^2(1 - z)(z ) li_4 ( ) & = & -^4(1 - z ) + ( -z)^3(1 - z ) - ( z ) ^3(1 - z ) + & & + ^2(1 - z)+ - li_4(1 - z ) + li_4()&= & -li_4 ( ) - ^4 ( ) - ^2 ( ) - + li_5()&= & ^5(1 - z ) - ( -z)^4(1 - z ) + ( z)^4(1 - z ) + & & - ^3(1 - z ) - ( 1 - z ) + li_5(1 - z ) s_2,2(z)&=&^4(1 - z ) - ( z)^3(1 - z ) + ^2(1 - z ) + & & - li_3(z)(1 - z ) + ( 3)(1 - z ) - li_4(1 - z ) + li_4(z ) + & & + li_4 ( ) + + & & + s_2,2(1 - z)&= & - ^4(1 - z ) + ( z)^3(1 - z ) - ^2(z)^2(1 - z ) + & & -^2(1 - z ) + ( z)(1 - z ) - ( z)li_3(1 - z ) + & & + li_4(1 - z ) - li_4(z ) - li_4 ( ) + ( 3)(z ) - + & & + s_2,2()&= & ^4(1 - z ) - ( z)^3(1 - z ) + ^2(1 - z)- + & & -li_3(1 - z)(1 - z ) - li_3(z)(1 - z ) + & & + li_4(1 - z ) + li_4(z ) + li_4 ( ) + & & + s_2,2()&= & ( z)^3(1 - z)-(-z)^3(1 - z ) - ^2(1 - z ) + & & - ( -z)(z)^2(1 - z ) + ^2(-z)^2(1 - z ) - li_4(z ) + & & - li_4(1 - z ) - li_4 ( ) + li_3(1 - z)(1 - z ) + & & + ( -z)(1 - z ) + - ( 3)(1 - z ) + & & - ( -z)li_3(1 - z)+ ( 3)(-z ) + & & s_2,3(z)&=&(z)^4(1 - z ) -^5(1 - z ) - ^3(1 - z ) + & & + li_3(z)^2(1 - z ) + ( 1 - z ) + & & - ^2(1 - z)- li_5(z)-li_5(1 - z ) - li_5 ( ) + & & + s_3,2(z ) + ( 5 ) + & & s_2,3(1 - z ) & = & ( z)^4(1 - z ) - ^2(z)^3(1 - z ) + ^3(z)^2(1 - z ) + & & + ( z)^2(1 - z ) -^2(z)(1 - z ) - li_4(z)(1 - z ) + & & + ( 3)(z)(1 - z)+(1 - z ) + ( z ) - ^2(z ) + & & + ^2(z)li_3(1 - z ) - ( z)li_4(1 - z ) + ( z)li_4(z ) + & & + ( z)li_4 ( ) - s_3,2(z ) + 2(5 ) - ( 3 ) + & & s_2,3()&=&^5(1 - z ) - ( z)^4(1 - z ) + ^3(1 - z)+ 2(5 ) + & & -li_3(1 - z)^2(1 - z ) - li_3(z)^2(1 - z ) -s_3,2(z ) + & & + ^2(1 - z ) + ( 1 - z ) + & & + ( 1 - z ) - 2li_5(1 - z ) + li_5(z ) + li_5 ( ) + & & + s_2,3()&= & -^5(1 - z ) + ( z)^4(1 - z ) + ^2(-z)^3(1 - z ) + & & -(-z)(z)^3(1 - z ) - ^3(1 - z ) -(-z ) + & & - ^3(-z)^2(1 - z)+(-z)^2(1 - z ) -^2(-z ) + & & + ^2(-z)(z)^2(1 - z ) -^2(-z)(1 - z ) + & & + li_3(1 - z)(1 - z)^2 - ( -z)(1 - z)li_3(1 - z ) + & & - li_4(1 - z)(1 - z ) - li_4()(1 - z ) -(1 - z ) + & & + ^2(-z)li_3(1 - z ) + ( -z)li_4(1 - z)+ ( -z)li_4(z ) + & & + ( -z)li_4 ( ) + li_5(1 - z ) - 2li_5(z ) - 2li_5 ( ) + & & + s_3,2(z ) + ( 5 ) - ( 3 ) + & & s_3,2(1 - z ) & = & -^5(1 - z ) + ( z)^4(1 - z ) - ^2(z)^3(1 - z ) + & & -^3(1 - z ) + ( z)^2(1 - z ) -li_4(z)(1 - z ) + & & + ( 3)(z)(1 - z)-(1 - z ) + ( z ) + & & - ( z)li_4(1 - z ) + li_5(z)+ li_5(1 - z ) + li_5 ( ) + & & - + ( 5)-s_3,2(z ) + & & s_3,2()&=&^5(1 - z ) - ( z)^4(1 - z ) + ^3(1 - z ) + ( 5 ) + & & + ^2(1 - z ) + ( 1 - z)+ 2 li_5(z ) + & & + ( 1 - z)-li_5(1 - z ) + 2li_5 ( ) - s_3,2(z ) + & & s_3,2()&=&(-z)^4(1 - z ) - ( z)^4(1 - z ) + & & - ^2(-z)^3(1 -z)+(-z)(z)^3(1 - z ) + & & + ^3(1 - z ) - ( -z)^2(1 - z ) + ^2(1 - z ) + & & -li_4(1 - z)(1 - z ) + li_4(z)(1 - z ) - ( 3 ) + & & - ( 1 -z ) - ( -z ) + ( -z ) li_4(1 - z ) + 2 li_5(1 - z ) + & & - li_5(z ) - li_5 ( ) + s_3,2(z ) - ( 3)(-z)(1 - z ) + s_3,2(-1)&=&(3 ) - ( 5 ) [ lastpoly ] there exist also relations between harmonic polylogarithms @xmath259 of different arguments . these are implemented in the hpl package and described in ref .  @xcite .",
    "this subsection is devoted to some additional integrals yet unknown to + mathematica .",
    "they are , however , not implemented in the package .",
    "@xmath260 ^ 2 \\\\ - 4\\,\\ln(1 - z)\\,li_3(1 - z)- 2\\,\\ln(1 - z)\\,li_3(z ) + 2\\,li_4(1 - z ) + 2\\,li_4(z ) \\\\ + 2\\,li_4(\\frac{z}{z-1 } ) + 2\\,\\zeta(3)\\,\\ln(1 - z)\\end{gathered}\\ ] ] @xmath261 ^ 2 - \\ln(1 - z)\\,li_3(z)\\\\   - li_4(1 - z ) - li_4(z ) + li_4(\\frac{z}{z-1 } ) + \\zeta(3)\\,\\ln(1 - z)\\end{gathered}\\ ] ] _ 0 ^ 1du&=&-[li_2(z)]^2 - 2(1 - z)li_3(z ) + & & + 2li_4(z ) + 2(3)(1 -z ) @xmath262 @xmath263 @xmath264 ^ 2}{2\\,z } \\\\ + 2\\,\\frac{\\ln(1 - z)\\,li_3(1 - z)}{z } + \\frac{\\ln(1 - z)\\,li_3(z)}{z } -\\frac{li_4(1 - z)}{z } \\\\",
    "-\\frac{li_4(z)}{z } - \\frac{1}{z}\\,li_4(\\frac{z}{z-1 } ) - \\zeta(3)\\,\\frac{\\ln(1 - z)}{z}\\end{gathered}\\ ] ] @xmath265 @xmath266 @xmath267 ^ 2 + 2\\,\\ln(z)\\,li_3(1 - z ) - 2\\,\\ln(1 - z)\\,li_3(z ) - 2\\,li_4(1 - z ) \\\\    + 2\\,li_4(z ) + 2\\,li_4(\\frac{z}{z-1 } ) + 2\\,\\zeta(3)\\,\\ln(1 - z ) - 2\\,\\zeta(3)\\,\\ln(z ) + \\frac{\\pi^4}{45}\\end{gathered}\\ ] ] @xmath268 ^ 2=6\\,z + 6\\,\\ln(1 - z ) - \\frac{2\\pi^2}{3}\\,\\ln(1 - z ) - 6\\,z\\,\\ln(1 - z ) - 2\\,\\ln^2(1 - z)\\\\ + 2\\,z\\,\\ln^2(1 - z ) + 2\\,\\ln(z)\\,\\ln^2(1 - z ) - 2\\,z\\,li_2(z ) + 2\\,\\ln(1 - z)\\,li_2(z ) \\\\",
    "+ 2\\,z\\,\\ln(1 - z)\\,li_2(z)+z\\,[li_2(z)]^2 +    4\\,li_3(1 - z ) - 4\\,\\zeta(3)\\end{gathered}\\ ] ] _ 0^zdw&= & 2 ( \\{3,2},z ) + 4 s_3,2(z ) @xmath269 ^ 2}{w^2}=-\\frac{2\\pi^2}{3}\\,\\ln(1 - z ) + 2\\,\\ln^2(1 - z ) -     \\frac{2\\,\\ln^2(1 - z)}{z } + 4\\,li_2(z)\\\\    + 2\\,\\ln^2(1 - z)\\,\\ln(z )   + 2\\,\\ln(1 - z)\\,li_2(z ) + \\frac{2\\,\\ln(1 - z)\\,li_2(z)}{z } \\\\     - \\frac{[li_2(z)]^2}{z } +   4\\,li_3(1 - z ) + 2\\,li_3(z ) -   4\\,\\zeta(3)\\end{gathered}\\ ] ] @xmath270 _ 0^zdw&=&[li_2(z)]^2 + ( 1 - z)li_3(z ) + @xmath271 ^ 2- \\ln(1 - z)\\,li_3(1 - z)\\\\    - \\ln(1 - z)\\,li_3(z ) +   z\\,li_4(\\frac{z}{z-1 } ) + \\zeta(3)\\,\\ln(1 - z)\\end{gathered}\\ ] ]"
  ],
  "abstract_text": [
    "<S> we present the mathematica package hypexp which allows to expand hypergeometric functions @xmath0 around integer parameters to arbitrary order . at this , we apply two methods , the first one being based on an integral representation , the second one on the nested sums approach . </S>",
    "<S> the expansion works for both symbolic argument @xmath1 and unit argument . </S>",
    "<S> we also implemented new classes of integrals that appear in the first method and that are , in part , yet unknown to mathematica .    </S>",
    "<S> zu  th 13/05 + hep - ph/0507094 + july 2005    * hypexp , + a mathematica package for expanding + hypergeometric functions around integer - valued + parameters * 1.5 cm t.  huber and d.  matre 1.5 cm _ </S>",
    "<S> institut fr theoretische physik , universitt zrich , winterthurerstrasse 190 , + ch-8057 zrich , switzerland _ 1.5 cm    nur dem ernst , den keine mhe bleichet , + rauscht der wahrheit tief versteckter born ; + nur des : meiszels : schwerem schlag erweichet + sich des : marmors : sprdes : korn . </S>",
    "<S> + aus : friedrich schiller ( 1759 - 1805 ) , </S>",
    "<S> + `` das ideal und das leben '' 1.5 cm </S>"
  ]
}
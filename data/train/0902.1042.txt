{
  "article_text": [
    "this paper introduces a new class of languages of infinite words , which are called _ max - regular languages _ , and include all @xmath0-regular languages .",
    "max - regular languages can be described in terms of automata , and also in terms of a logic .",
    "a typical language in the class is the property `` the distance between consecutive @xmath1 s is unbounded '' , i.e.  the language @xmath2    a practical motivation can be given for considering properties that speak of bounded distance ; e.g.  a formula of the logic in this paper could specify that a system responds to requests with bounded delay .",
    "we will begin , however , with a more fundamental motivation , which is the question : what is a regular language of infinite words ?",
    "there is little doubt as to what is a regular language of finite words .",
    "for instance , the requirement that the myhill - nerode equivalence relation has finitely many equivalence classes uniquely determines which languages of finite words should be regular .",
    "other notions , such as finite semigroups , or monadic - second order logic also point to the same class .    for infinite words , however , there is more doubt .",
    "of course , the class of @xmath0-regular languages has much to justify calling it regular , but some doubts remain as to its uniqueness .",
    "consider , for instance , the language @xmath3 mentioned above , or the set @xmath4 of ultimately periodic words , i.e.  words of the form @xmath5 , say over alphabet @xmath6 .",
    "none of these languages are @xmath0-regular . however , under the commonly accepted definition of myhill - nerode equivalence for infinite words , given by arnold in  @xcite , both languages have exactly one equivalence class .",
    "should these languages be called regular ?",
    "if yes , what is the appropriate notion of regularity ? in this paper we propose a notion of regular languages , which are called _ max - regular languages _",
    ", that captures the language @xmath3 , but not the language @xmath4 .",
    "this new notion has many properties that one would wish from regular languages .",
    "the class is ( effectively ) closed under boolean operations , including negation .",
    "there is a finite index myhill - nerode relation , and equivalence classes are regular languages of finite words .",
    "there is an automaton model , there is a logical description , and translations between the two are effective .",
    "emptiness is decidable .",
    "membership is decidable ( although since we deal with infinite words , the membership test is for certain finitely presented inputs , such as ultimately periodic words ) .",
    "so , what is this new class ?",
    "one definition is in terms of logic .",
    "the max - regular languages are the ones that can be defined by formulas of weak monadic second - order logic extended with the unbounding quantifier .",
    "the term `` weak '' means that only quantification over finite sets is allowed .",
    "the unbounding quantifier @xmath7 was introduced , saying that the size is bounded . ] in  @xcite , it says that the size of sets @xmath8 satisfying @xmath9 is unbounded , i.e. @xmath10 monadic second - order logic with the unbounding quantifier for infinite trees was studied in  @xcite , where an emptiness procedure was presented for formulas with restricted quantification patterns .",
    "this study was continued in  @xcite , where the models where restricted from infinite trees to infinite words , but the quantification patterns considered were more relaxed .",
    "however , no decision procedure was given in  @xcite for full monadic second - order logic with the unbounding quantifier , and the expressive power of the logic seemed to be far too strong for the techniques used ( no undecidability results are known , though ) .",
    "the basic idea in this paper is to restrict the set quantification to finite sets ( i.e.  weak quantification ) , while keeping the unbounding quantifier .",
    "it turns out that with this restriction , lots of the problems encountered in  @xcite are avoided , and the resulting class is surprisingly robust .",
    "note that for infinite words and without unbounding quantification , weak monadic second - order logic has the same expressive power as full monadic second - order logic ; this is no longer true when the unbounding quantifier is allowed ( we prove this using topological techniques ) .",
    "the main contribution of this paper is theorem  [ thm : main ] , which shows that weak monadic second - order logic with the unbounding quantifier has the same expressive power as deterministic max - automata .",
    "a max - automaton is a finite automaton equipped with counters , which store natural numbers .",
    "the important thing is that the counters are not read during the run ( and therefore do not influence the control of the automaton ) , which avoids the usual undecidability problems of counter machines .",
    "the counters are only used in the acceptance condition , which requires some counter values to be bounded , and some to be unbounded .    to the best of the authors knowledge ,",
    "quantifiers similar to the unbounding quantifier have only been considered in  @xcite . on the other hand ,",
    "the idea to use automata with quantitative acceptance conditions , has a long history , going back to weighted automata of schtzenberger  @xcite ( see @xcite for a recent paper on weighted automata and related logics ) .",
    "the max - automata used in this paper are closely related to an automaton model that has been variously called a _ distance desert automaton _ in  @xcite , a _",
    "bs - automaton _ in  @xcite , or an _ r - automaton _ in  @xcite .",
    "one important application , see  @xcite , of these automata is that they can be used to solve the famous star - height problem . ] , providing simpler techniques and better complexities than in the famous result of hashiguchi  @xcite .",
    "( the reduction from the star - height problem is not to emptiness of the automata , but to something called _",
    "limitedness_. ) other problems that can be tackled using this type of automata include the star - height of tree languages  @xcite or the mostowski index of @xmath0-regular languages  @xcite .",
    "we begin our presentation with the automaton model .    a _ max - automaton _ has a finite set of states @xmath11 and a finite set of counters @xmath12 .",
    "it also has a finite set of transitions .",
    "each transition reads an input letter , changes the state , and does a finite sequence of counter operations .",
    "the counter operations are :    [ cols= \" < , < \" , ]     in the above operation , the language @xmath3called the _ guard _ of the transition  must be a language recognized by a max - automaton ( without guards , although allowing guards would give the same result ) .",
    "this new operation is all we need to recognize the language @xmath13 :    if a language @xmath3 is recognized by a deterministic max - automaton , then @xmath13 is recognized by a deterministic guarded max - automaton .",
    "we will show that guarded outputs are redundant , and can be simulated by non - guarded outputs .",
    "this completes the proof proposition  [ prop : weak - closed - undounding ] .",
    "the difficulty in the proof below is that we are dealing with deterministic automata , while a guard looks to the future .",
    "[ prop : guarded - remove ] for every deterministic guarded max - automaton there is an equivalent deterministic max - automaton .",
    "let @xmath14 be a deterministic guarded max - automaton . to simplify notation , we assume that only one guarded operation , @xmath15 is used",
    ". the general case is done the same way .",
    "let @xmath16 be a deterministic max - automaton recognizing the guard language @xmath3 .    in the construction , we will use a concept of _ thread_. a thread consists of a state of the automaton @xmath16 , as well as a number , which corresponds to the value of counter @xmath17 output by the guarded operation @xmath18 . note that a thread does not contain information about values of the counters of automaton @xmath16 .",
    "the idea is that threads will be alive for only finitely many steps , so the counters of @xmath16 are not relevant .",
    "we will denote threads by @xmath19 .",
    "if @xmath20 is an input letter , then we write @xmath21 for the thread obtained from @xmath19 by updating the state according to @xmath22 ( and leaving the number unchanged ) .",
    "the ( non - guarded ) max - automaton @xmath23 that simulates @xmath14 works as follows . at each point",
    ", the simulating automaton contains a finite set @xmath24 of _ active _ threads .",
    "there will be at most one thread per state of @xmath16 , so the set of threads can be stored using finitely many counters and the finite memory of the automaton .",
    "this set of active threads is initially empty .",
    "whenever @xmath14 does the guarded output operation @xmath18 , a new active thread is created , with the initial state of @xmath16 , and the number set to the value of counter @xmath17 .",
    "furthermore , after reading an input letter @xmath25 , the set of active threads is updated to @xmath26 .",
    "if two active threads have the same state , then they are merged , and only the greater number is kept ( using the max operation ) .    similarly to the proof of proposition  [ prop : weak - closed ] , the automaton @xmath23 will also read the output of a transducer @xmath27 that computes spanning partial runs of the automaton @xmath16 used for the guards . recall",
    "that the transducer @xmath27 outputs @xmath28 spanning partial runs of the automaton @xmath16 , where @xmath28 is the number of states in @xmath16 .",
    "the automaton @xmath23 accepts a word @xmath29 if and only if there is some @xmath30 such that :    * the @xmath31-th run encoded by @xmath32 is defined ( i.e.  the encoding does not contain infinitely many cancelling @xmath33s ) and satisfies the accepting condition in the automaton @xmath16 . * for every @xmath34 , some thread storing a number greater than @xmath34 converges with @xmath31-th run encoded by @xmath32 .",
    "since deterministic max - automata are closed under finite union , we only need to show the construction for some fixed @xmath31 . as in the previous section , property ( a )",
    "is recognized by a deterministic max - automaton . for property",
    "( b ) , it suffices to output the number stored in a thread @xmath19 whenever its state is the same as in @xmath35 .",
    "the automaton then accepts if the numbers thus produced are unbounded .",
    "in this section we show that nondeterministic max - automata are more expressive than deterministic ones .",
    "[ thm : separation ] nondeterministic max - automata recognize strictly more languages than deterministic ones .",
    "contrast this result with the situation for muller or parity automata , which are equally expressive in the deterministic and nondeterministic variants . since",
    "full monadic second - order can capture nondeterministic automata by existentially quantifying over infinite sets , the above theorem immediately implies :    full monadic second - order logic with the unbounding quantifier is stronger than weak monadic second - order with the unbounding quantifier .",
    "the separating language in theorem  [ thm : separation ] is @xmath36 this language is captured by a nondeterministic max - automaton .",
    "the automaton uses nondeterminism to output a subsequence of @xmath37 and accepts if this subsequence is bounded .",
    "clearly , if it is bounded , then it contains an infinite constant subsequence .",
    "it remains to show that the language @xmath3 can not be recognized by a deterministic max - automaton .",
    "for this , we will use topological complexity . in lemmas  [ lemma : in - sigma-2 ] and  [ lemma : not - in - sigma-2 ] , we will show that every language recognized by a deterministic max - automaton is a boolean combination of sets on level @xmath38 in the borel hierarchy , while the language @xmath3 is not .",
    "below we briefly describe the borel hierarchy , a way of measuring the complexity of a subset of a topological space .",
    "the topology that we use on words is that of the cantor space , as described below .",
    "a set of infinite words ( over a given alphabet @xmath39 ) is called _ open _ if it is a union @xmath40 with the index set @xmath41 being possibly infinite . in other words ,",
    "membership of a word @xmath29 in an open set is assured already by a finite prefix of @xmath29 . for the borel hierarchy , as far as max - automata are concerned , we will only be interested in the first two levels @xmath42 .",
    "the open subsets are called @xmath43 , the complements of these ( the closed subsets ) are called @xmath44 .",
    "countable intersections of open subsets are called @xmath45 , the complements of these ( countable unions of closed subsets ) are called @xmath38 .",
    "[ lemma : in - sigma-2 ] any language accepted by a deterministic max - automaton is a boolean combination of @xmath38 sets .    fix a max - automaton @xmath14 , and a counter @xmath17 of this automaton .",
    "we will examine the topological complexity of the set of runs of this automaton ( here , a run is an infinite sequence of transitions ) .",
    "for any fixed @xmath28 , the following set of runs is clearly open :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ a value of at least @xmath28 is output at least once on counter @xmath17 .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    in particular , its complement    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ all values of counter @xmath17 are at most @xmath28 .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    is a closed set of runs . by taking a countable union of the above over @xmath46",
    ", we deduce that the property    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ the values of counter @xmath17 are bounded .",
    "_ _ _ _ _ _ _ _ _ _ _ _",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    is a @xmath38 property . in particular ,",
    "the set of accepting runs of any max - automaton is a boolean combination of @xmath38 sets .",
    "since the automata are deterministic , the function that maps an input word to its run is continuous , i.e.  preimages of open sets are also open . since preimages of continuous functions preserve the levels of the hierarchy , we conclude that any language accepted by a deterministic max - automaton is a boolean combination of @xmath38 sets .",
    "[ lemma : not - in - sigma-2 ] the language @xmath3 is not a boolean combination of @xmath38 sets .    consider the mapping from @xmath47 to @xmath48 defined by @xmath49 this is a continuous mapping .",
    "the language @xmath3 is the image , under this mapping , of the set @xmath8 of sequences in @xmath50 that have a bounded subsequence .",
    "the set @xmath8 is known not to be a boolean combination of @xmath38 sets , see  excercise 23.2 in @xcite .",
    "this paper is intended as a proof of concept .",
    "the concept is that @xmath0-regular languages can be extended in various ways , while still preserving good closure properties and decidability .",
    "the class presented in this paper , max - regular languages , is closed under boolean operations , inverse morphisms , and quotients .",
    "it is not closed under morphic images ( which corresponds to nondeterminism on the automaton side ) .",
    "some questions on max - automata are left unresolved .",
    "is the max operation necessary in the automaton ? in our construction , we use the max twice : when defining the values @xmath51 , and in proposition  [ prop : guarded - remove ] . while in the first case",
    ", the max operation can be avoided by a subtle use of factorization forests  @xcite , it is not clear how to show proposition  [ prop : guarded - remove ] without using the max operation .",
    "another question is the exact complexity of emptiness",
    ". it would be nice to get matching upper and lower bounds , even more so if the lower bound would use acceptance conditions in dnf .",
    "there are several other possibilities of future work .",
    "one is to investigate weak bounding logic for infinite trees ( note that we will not capture all regular languages of infinite trees in this case ) .",
    "another possibility would be to investigate full monadic - second order logic , or possibly other quantifiers that can be added to weak monadic second - order logics .",
    "the techniques used in this paper are fairly generic , so it seems plausible that such quantifiers can be found .",
    "t.  colcombet and c.  lding .",
    "the nesting - depth of disjunctive mu - calculus for tree languages and the limitedness problem . in _ computer science logic _ ,",
    "volume 5213 of _ lecture notes in computer science _",
    ", 2008 .",
    "t.  colcombet and c.  lding .",
    "the non - deterministic mostowski hierarchy and distance - parity automata . in _ international colloquium on automata , languages and programming _ , volume 5126 of _ lecture notes in computer science _ , pages 398409 , 2008 ."
  ],
  "abstract_text": [
    "<S> a new class of languages of infinite words is introduced , called the _ max - regular languages _ , extending the class of @xmath0-regular languages . </S>",
    "<S> the class has two equivalent descriptions : in terms of automata ( a type of deterministic counter automaton ) , and in terms of logic ( weak monadic second - order logic with a bounding quantifier ) . </S>",
    "<S> effective translations between the logic and automata are given .    </S>",
    "<S> mikoaj bojaczyk </S>"
  ]
}
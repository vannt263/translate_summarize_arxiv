{
  "article_text": [
    "this birds of a feather ( bof ) session was held to gather ideas on how to better make astronomical software discoverable and preserve it to improve the transparency of research , ensure reproducibility , and advance numerical methods in the field .",
    "how to handle software is often discussed at adass , and this bof builds directly on teuben et al .",
    "the authors feel that recent changes in the field create an opportunity to put the community on a path for permanent change regarding software discoverability , sharing , and advancement of these methods .",
    "the astronomy community has begun to recognize the need to and benefits of publishing and sharing software .",
    "a number of efforts are building greater cooperation and actively working to improve the way astrophysics is done , and have started to have an impact on the development , visibility , and preservation of codes .",
    "these efforts include :    * blogs such as astronomy computing today and astrobetter , devoted in part or wholly to software topics and doing things better . * projects such as software carpentry and scicoder to improve coding skills . * increasing efforts to recognize the role of the astronomical software professional in advancing the field through the development of astroinformatics conferences , coursework , and code citation . *",
    "expansion of the ascl , indexing of its entries by ads , and ads s exploration of linking papers to code entries and code entries to papers . *",
    "collaborative coding efforts such as astropy . * social software bringing astronomers together in previously unprecedented ways ( _ i.e. _ , astronomers facebook group , astroshare google group ) . *",
    "launch of a journal , _ astronomy & computing _ , devoted to the development and use of software methods in astronomy .",
    "despite progress , significant barriers still exist which inhibit code release ; many of these have been discussed in the literature and at adass .",
    "reasons developers do not release codes include :    * code  messiness \" ( barnes , 2010 ) . * university policies that prohibit distribution of intellectual property . *",
    "lack of documentation and examples . * perceived lack of suitability for sharing , as the code may have a narrow focus and/or seem too trivial to share .",
    "* protection of proprietary processes useful for future funding of author .",
    "* code release not firmly established as a standard practice .",
    "* lack of incentive / little or no perceived upside to releasing code .",
    "the focus of the bof was to discuss and solicit answers to the following questions :    * how do we ensure code release is recognized as an essential part of assuring reproducibility of research ? * how can the community change the culture so coders will release their programs ? * what can we do to ensure developers receive credit for writing and releasing their software , and encourage them to release it even if it s `` messy '' code ? * how do we reduce expectations of support when a developer does not wish to ( or can not ) take on that role after program release ? * what role might journal publishers and funding agencies have in furthering code release , and how can the community influence them to take on that role ? * how can universities be convinced to change policies that prohibit software publication ? * can funding agencies and publishers encourage documentation of programs , and if so , how ?",
    "discussion was spirited and wide - ranging , with several themes emerging from it :    * there is no ",
    "one size fits all \" solution .",
    "there are many different classes of code being written , from one - off tests to the codes used to produce published results .",
    "* it is important to distinguish between code and algorithms ; often people care more about the algorithms , and while code may embody an algorithm it can also obscure it . * insisting that every last piece of code be made available sounds unrealistic , but code used to produce published results really matters . some journals and funding bodies",
    "are starting to see such code as an integral part of the work , so as something that needs to be available .",
    "* versions of code become important for understanding its evolution and in order to know just which version produced a published result .",
    "* it is important to distinguish between accessibility and discoverability , although both matter .",
    "sites such as ascl address the discoverability problem . *",
    "some people , particularly with a computer science background , are comfortable with putting code into github from the very start which solves both the accessibility and the versioning problem .    releasing software increases transparency , though some are reluctant to release code in part because of a perceived need to be available to support the code .",
    "this could be mitigated with the implementation of the community research and academic programming license , or crapl .",
    "looking at messy codes can be instructive ; software authors could partner with computer science students to clean code up .",
    "science can be advanced by improving the skills of code authors in areas of testing ( creating and publishing test cases ) , clean coding , version control , and documentation .",
    "though these did not come up in the bof , suggestions for improvement can be found in aruliah ( 2012 ) .    in the longer term",
    ", astronomy will advance faster with greater transparency of software and adoption of open source licenses , as others can improve and extend work that has already been done ; methods already exist for publishing codes and managing code changes / versions and releases .",
    "the science can be improved by improving software distribution , which can be aided by the use of social coding sites .",
    "cultural change will come about fastest when agencies demand code release and as publications encourage or insist on it .",
    "cost is a factor  ideally , a grant would cover the cost of a professional software engineer to write any necessary code , but we all know that is nt always possible",
    ". therefore , science is better served by scientists releasing their codes and ideally learning better coding and code release practices ."
  ],
  "abstract_text": [
    "<S> progress is being made in code discoverability and preservation , but as discussed at adass xxi , many codes still remain hidden from public view . with the astrophysics source code library ( ascl ) </S>",
    "<S> now indexed by the sao / nasa astrophysics data system ( ads ) , the introduction of a new journal , _ astronomy & computing _ , focused on astrophysics software , and the increasing success of education efforts such as software carpentry and scicoder , the community has the opportunity to set a higher standard for its science by encouraging the release of software for examination and possible reuse . </S>",
    "<S> we assembled representatives of the community to present issues inhibiting code release and sought suggestions for tackling these factors .    </S>",
    "<S> the session began with brief statements by panelists ; the floor was then opened for discussion and ideas . </S>",
    "<S> comments covered a diverse range of related topics and points of view , with apparent support for the propositions that algorithms should be readily available , code used to produce published scientific results should be made available , and there should be discovery mechanisms to allow these to be found easily . with increased use of resources such as github ( for code availability ) , ascl ( for code discovery ) , and a stated strong preference from the new journal _ astronomy & computing _ for code release , we expect to see additional progress over the next few years . </S>"
  ]
}
{
  "article_text": [
    "the study of vehicular traffic has played an increasingly significant role in non - equilibrium statistical mechanics over recent years .",
    "there are a number of approaches which may be taken to traffic modeling ; see for example the reviews  @xcite .",
    "the use of cellular automata ( ca ) has been the subject of much study within the statistical mechanics community ever since the seminal work of nagel and schreckenberg  @xcite .",
    "a cellular automaton is a model which is discrete in time , space , and state variables , whose dynamical rules are local .",
    "the nagel - schreckenberg ( nasch ) model is generally considered to be the minimal model for traffic on freeways .",
    "a huge literature dealing with various extensions of the nasch model has evolved since its first appearance , and our understanding of freeway traffic has benefited greatly as a result .",
    "it is safe to say however that the behavior of traffic _ networks _ is still far less well understood .",
    "much of the progress on traffic networks made within the statistical mechanics community has been focused on regular lattices ( see e.g. @xcite ) , although there are some notable exceptions @xcite .",
    "the aim of the current work is to improve our understanding of traffic networks by studying a crucial aspect of such networks : traffic lights .",
    "the model we use for network traffic flow in this paper is ca based and applicable to arbitrary road networks .",
    "the optimization of traffic lights is a major challenge in urban traffic networks @xcite .",
    "a natural idea , studied by several authors , is to link together or synchronize traffic lights @xcite .",
    "it is acknowledged however that more flexible strategies are needed than just fixed - cycle controls @xcite . in this paper",
    "we will study an adaptive control strategy , for which traffic light switching schedules may be acyclic and green time durations are not fixed .",
    "green times are determined by instantaneous local traffic information , such as up- and downstream vehicle densities .",
    "the main ideas of this approach have been discussed in @xcite .",
    "specifically , we apply our ca model to an actual urban road network in the melbourne suburb of kew , using empirical data as input , and then study the effect of applying different types of traffic signal systems .",
    "we also study our ca on a square - lattice network in order to test robustness and network independent features .",
    "the development of a realistic and computationally efficient network traffic model based on an existing system of traffic lights , is part of an ongoing collaboration with the roads corporation of victoria ( vicroads ) in australia .      the rules governing the traffic signals at signalized intersections in urban road networks play a crucial role in determining the network s overall efficiency .",
    "a number of _ adaptive _ traffic signal systems exist and are in use around the world .",
    "the _ sydney coordinated adaptive traffic system _ ( scats ) is a traffic signal system used to control traffic lights in numerous cities around the world , including sydney , melbourne , shanghai and detroit .",
    "scats is adaptive in the sense that it uses knowledge of the recent state of traffic in the network to choose appropriate values of the parameters controlling the traffic lights , such as the amount of green time given to the various possible movements through each signalized intersection .",
    "however , the only input data to which scats has access is the data provided from existing induction - loop detectors , usually located at the stop line , and this information is rather limited .",
    "the use of more sophisticated detectors on our roads , allowing the collection of more detailed data such as instantaneous link densities and queue lengths , has the potential to significantly increase the efficiency of urban road networks .",
    "it is therefore of significant interest to investigate generalized adaptive traffic signal systems , which utilize more detailed input data , such as the density of incoming and/or outgoing links , and the most practical way to do that is via numerical simulation . by studying such generalized adaptive schemes",
    "we may hope to gain insight into the potential benefits of installing more sophisticated detectors on our roads .",
    "recently , certain types of adaptive or `` self - organizing '' traffic lights ( sotl ) have been receiving attention in the statistical physics literature  @xcite .",
    "self - organizing traffic lights have been investigated in the simple context of a manhattan - like network in  @xcite .",
    "in such a network each intersection has only two possible signal _ phases _ ; either eastbound traffic has a green light and northbound traffic has a red light , or vice versa .",
    "we have generalized the ideas presented in  @xcite to handle intersections with multiple signal phases .",
    "this generalization from two to multiple phases allows a much richer variety of behavior . with only two signal phases ,",
    "the only question one can consider is `` how long should the active phase run before switching to the other phase . '' with more than two phases however , the more interesting question of `` which phase should we switch to next '' also arises .",
    "google map of the chosen network ( main roads only ) in kew , melbourne , australia . the size of the network is approximately 3.8 km by 1.7 km . ]",
    "a further significant generalization that we introduce is that we not only consider the state of the _ upstream _ links which feed into a given intersection , but also the _ downstream _ links which are fed by the intersection .",
    "the idea being that not only is it important to give green time to a movement that will allow a congested upstream link to dissipate , but also that it is counterproductive to give green time to a movement that will further congest an already over - saturated downstream link .",
    "we find that for the kew network , with boundary conditions corresponding to morning peak hour , the upstream - downstream adaptive traffic lights are approximately 5% more efficient than the simple upstream - only version .    in order to test the robustness of these results",
    ", we then repeated the simulations on a square - lattice network , under a variety of boundary conditions .",
    "specifically , we studied three choices of boundary conditions ; strong westbound bias , uniform high density , and uniform low density . in the first two cases",
    ", our simulations again suggested that the upstream - downstream adaptive traffic lights performed better , being approximately 2 - 5% more efficient .",
    "for the low - density network , by contrast , there was no discernible difference between the two .",
    "for clarity of presentation , we first sketch the main features of our traffic network model .",
    "a detailed algorithmic description is deferred to [ ca model section ] .",
    "we represent a road network by a directed graph , composed of _ nodes _ ( i.e. intersections ) and _ links _ ( ordered pairs of nodes , i.e. streets ) ; see figure  [ kew network figure ] . with each link",
    "is associated an ordered list of lanes , and each lane is a simple one - dimensional ca obeying nagel - schreckenberg  @xcite dynamics .",
    "arbitrary street lengths are implemented in the model by allowing the lanes on each link to have an arbitrary number of cells .",
    "the speed @xmath0 of each vehicle can take one of @xmath1 allowed integer values @xmath2 .",
    "taking the length of a cell to be @xmath3 ( corresponding to the typical space occupied by each vehicle in a jam ) and the duration of each time step to be 1 second suggests @xmath4 is a reasonable choice for an urban network ; i.e. each vehicle can move @xmath5 or @xmath6 cells per time step in such a ca model , depending on local traffic conditions . at each time step the positions of all vehicles are updated simultaneously , or _ in parallel _ , so that each vehicle makes its decision based on the _ same _ information .",
    "lanes can act as turning lanes by inserting _",
    "obstacles _ into an appropriate number of cells at the beginning of the lane .",
    "in addition , neighboring lanes on a given link can interact via lane changing , the details of which we discuss in [ lane changing ] .",
    "thus , the dynamics along each given link is essentially a standard ca freeway model  @xcite , albeit with input and output rates that are determined dynamically by the rest of the network .",
    "the complication arises in how to glue these one - dimensional ca together to form a network .",
    "we have chosen the following simple model .",
    "we define a _ path _ on node @xmath7 to be an ordered pair @xmath8 , where @xmath9 ( @xmath10 ) is a lane directed to ( from ) @xmath7 .",
    "we implement the topology of a road network by assigning to each node a list of _",
    "paths_. when a vehicle reaches the end of a link it can only move to another link along one of the node s paths ; see figure  [ node diagram ] .",
    "if @xmath11 then we shall write @xmath12 and @xmath13 . at a given node , we define a _ phase _ to be a particular subset of that node s paths .",
    "with each node is associated a set of phases @xmath14 , and at any instant precisely one phase is declared to be the _ active phase _ for that given node . the effect of traffic lights is then implemented by demanding that vehicles may only traverse a path if it belongs to the active phase .",
    "the dynamics for how the active phase is chosen at each node , at each instant of time , is a crucial aspect of the network s dynamics , and can change the network s efficiency dramatically ; see section  [ sotl section ] .",
    "typical example of a node in a road network .",
    "here there are three inlinks and three outlinks , each consisting of two lanes .",
    "each path @xmath15 is an ordered pair @xmath16 , and @xmath17 is a typical example of a phase associated with this node , consisting of five paths.,width=302 ]    within a given phase , we also allow each path to have a list of other paths to which it must give way .",
    "this allows us to model the fact that right turning vehicles often must give way to oncoming traffic , even though they have a green light .",
    "for example , if we added the path @xmath18 to the phase @xmath14 in figure  [ node diagram ] then path @xmath18 would need to give way to paths @xmath19 and @xmath20 .",
    "if at a given time - step there would happen to be vehicles wanting to traverse both @xmath18 and @xmath20 for instance , then only the vehicle wanting to traverse @xmath20 could proceed , while the vehicle wanting to traverse @xmath18 would stop at the end of @xmath18 s inlink .      in order to mimic origin - destination behavior , we demand that each vehicle makes a random decision about which link it wants to turn into at the approaching intersection . more precisely , for each node @xmath7 , we assign to each ordered pair @xmath21 , where @xmath22 is an inlink and @xmath23 an outlink of @xmath7 , the probability @xmath24 , that a vehicle on @xmath22 wants to turn into @xmath23 when it reaches @xmath7 . in our model ,",
    "the turning decision is made when the vehicle first enters @xmath22 , since its choice of which link to turn into at the approaching intersection should influence its dynamics as it travels along @xmath22 .",
    "in particular it influences the vehicle s choice of when to change lanes ; see [ lane changing ] .",
    "when simulating a network , we must decide precisely where to put the _",
    "boundary_. since all road networks are necessarily open systems , it must be the case that in any chosen network , some of the nodes are connected to links whose other endpoint is _ not _ part of the network .",
    "any link with both endpoints contained in the chosen network we call a _ bulk link _ , whereas any link with precisely one node in the chosen network we call a _",
    "boundary link_. we can further classify the boundary links as being either _ boundary inlinks _",
    ", if their to - node belongs to the network , or _",
    "boundary outlinks _ , if their from - node belongs to the network . in figure  [ kew network figure ] for example",
    ", the bulk links have labels 1 through 38 , while all the links 1001 through 1014 are boundary inlinks , and all the links 2001 through 2014 are boundary outlinks .",
    "traffic flows into the network via boundary inlinks , and flows out of the network via boundary outlinks .    a natural question to ask is : ``",
    "to what extent should we simulate traffic on the boundary lanes ? '' to resolve this question we need to consider what boundary data is required , and available .",
    "most importantly , we need to have appropriate boundary data determining the inflow and outflow of vehicles from the simulated network .",
    "in addition , if the traffic signals are being operated by sotl we need to input appropriate values for the chosen demand function for each boundary lane ; we discuss this further in sections  [ sotl section ] , [ kew simulations section ] and [ square - lattice simulations section ] .",
    "consider a boundary in - lane @xmath25 of length @xmath26 metres , and suppose we visualize a discretization of @xmath25 into @xmath27 equally sized cells , as we would do when simulating @xmath25 using cellular automata . unlike bulk lanes , it is not necessary to model boundary lanes in their entirety ; we are free to model as much of @xmath25 as we find convenient .",
    "let @xmath28 denote the first cell of @xmath25 which is included in the ca .",
    "the two extreme cases are obviously @xmath29 and @xmath30 , however all choices in between are _ a priori _ sensible",
    ". see figure  [ boundary lane figure ] .",
    "boundary in - lane @xmath25 for which ca modeling begins on cell @xmath28 . ,",
    "width=377 ]    regardless of our choice , for boundary in - lanes @xmath25 we are required to insert new vehicles into cell @xmath28 with some given probability @xmath31 .",
    "it therefore makes sense to choose the amount of the boundary lane which we simulate using ca in such a way that @xmath31 is _ easily _ obtained empirically . for our simulations of the kew network , the most readily available , and probably most accurate , source of data comes directly from the occupancies of the stop - line loop detectors used by scats in melbourne .",
    "let @xmath32 denote the density of position @xmath28 in lane @xmath25 . if @xmath33 denotes the empirically measured ( by scats ) stop - line occupancy of lane @xmath25 , then @xmath34 .",
    "this suggests that for our simulations of kew it is most sensible to only model the very end of each boundary in - lane , since we then have @xmath35 , and therefore to a good approximation @xmath36 .",
    "the simplest such strategy is to simply model the last cell of @xmath25 , which , at each time step , is occupied with probability @xmath33 .",
    "this is the strategy we used for the simulations of the kew network .",
    "we used a slightly different approach for the square - lattice simulations , as no boundary input data is available ; see section  [ square - lattice simulations section ] .",
    "the input strategy is described in more detail in [ inflow ] .    by contrast , for boundary out - lanes , @xmath25 , we simply assume that @xmath37 , which should be a reasonable assumption except in the case of total grid - lock .",
    "we then simply let any vehicle which wants to enter lane @xmath25 do so with probability 1 , provided it has a green light .    finally , we emphasize that these questions of the optimal way in which to choose the boundary is a generic problem encountered by all network simulations ; it is not related to the particular method ( such as cellular automata ) chosen to simulate traffic inside the network .",
    "the above discussion referred to the boundary conditions input into the model at a given instant of time .",
    "in general however , we may want to allow the boundary conditions to evolve as the simulation proceeds .",
    "with such boundary conditions we can , for example , study build - up and decay before and after the am peak hour .    for each lane @xmath25 of each boundary link @xmath22 we provide as input an @xmath38-vector @xmath39 at times @xmath40",
    "we perform boundary inflow using the probability @xmath41 , for each @xmath42 .",
    "after iteration @xmath43 the simulation terminates .",
    "the system therefore defines a non - stationary stochastic process .",
    "consequently no stationary distribution can be assumed to exist , and there is no reason to assume time averages converge to anything meaningful ( as would be implied by the ergodic theorem ) .",
    "a high - level description of our ca model is presented in algorithm  [ update ] .",
    "the loop in algorithm  [ update ] is over discrete time - steps , each time - step corresponding to 1 second .",
    "we emphasize that the dynamics defined by algorithm  [ update ] correspond to updating all cells in _ parallel _ ; i.e. all cells are updated based on the configuration at the _ same _ time step .",
    "@xmath44 [ update ]    inflow of vehicles into the network lane changes on each link mark the paths having vehicles wanting to traverse them nagel - schreckenberg dynamics on each lane clear the marked paths on each node update active phase of each node    in [ ca model section ] we elaborate in detail on each step in algorithm  [ update ] .",
    "suppose we agree on a suitable _ demand _ function @xmath45 which quantifies the demand of each phase @xmath14 , of each given node .",
    "phases with large values of @xmath45 should be candidates for being the next choice of the active phase , @xmath46 .",
    "however , we must also keep track of the time @xmath47 each phase has been idle , since we do not want a given phase to remain idle for too long , unless it has strictly zero demand . the key idea behind sotl is to compute a _ threshold _",
    "function , @xmath48 , for each phase @xmath14 , which depends on both the phase s idle time and demand function , and when @xmath48 reaches a predetermined threshold value , @xmath49 we consider making @xmath14 the active phase .",
    "perhaps the simplest reasonable quantity to use for the sotl threshold function is @xmath50 notice that @xmath48 is precisely zero whenever @xmath14 has strictly zero demand , regardless of the size of @xmath47 .",
    "if @xmath51 then @xmath48 grows monotonically with @xmath47 , so that @xmath48 will eventually become large even if @xmath45 is small .",
    "this ensures that no driver can be left facing a red light indefinitely .",
    "there are potentially an infinite number of sensible choices for @xmath52 and @xmath53 that one could investigate .",
    "regardless of the specific choices however , there should be a fixed cost associated with physically changing phases . to ensure we do not suffer excessively rapid switching between phases , we let @xmath54 denote the amount of time node @xmath7 has been in phase @xmath46 and",
    "only allow @xmath7 to change its phase if @xmath55 , for some fixed parameter @xmath56 .",
    "we use @xmath57 throughout this paper .",
    "algorithm  [ sotl ] presents a general sotl protocol for governing the signals on a node @xmath7 with phases @xmath58 ( uar abbreviates _ uniformly at random _ ) .",
    "when @xmath54 becomes larger than @xmath56 , the algorithm determines the set of phases @xmath59 for which the threshold function @xmath52 exceeds the threshold value @xmath60 . from @xmath59",
    "it then chooses the phases which attain the largest value of the threshold function , and among those it selects the phases which have been idle longest . out of this latter set , called @xmath61 ,",
    "a phase is chosen at random to be the next active phase . in practice",
    "we find that @xmath61 almost always contains not more than one element .",
    "@xmath44 [ sotl ]    increment @xmath54 increment @xmath47 let @xmath62 let @xmath63 let @xmath64 uar , choose @xmath65 and set @xmath66 set @xmath67 set @xmath68    this implementation of sotl is acyclic in the sense that we do not impose any fixed ordering on the phases .",
    "one could also easily define a cyclic version of sotl which uses a threshold function only to determine _ when _ to switch to the next phase in the fixed cycle .",
    "now let us consider the phase demand function in more detail .",
    "given a suitable demand function @xmath69 defined on paths @xmath70 , we define the demand of the phase @xmath14 as @xmath71 thus , the demand of the phase is just a weighted sum of the demands of each path it includes .",
    "let us now comment on the weighting .",
    "the parameter @xmath72 denotes the number of paths belonging to node @xmath7 which have in - lane @xmath73 .",
    "for example , for the node in figure  [ node diagram ] we have @xmath74 and @xmath75 for @xmath76 .",
    "we refer to @xmath72 as the _ degeneracy _ of @xmath70 .",
    "the weight @xmath77 is included simply to ensure that paths with different degeneracies are weighted fairly , relative to each other .",
    "for example , consider again the node in figure  [ node diagram ] .",
    "the demand of the phase @xmath78 is @xmath79 the phase @xmath14 services all the possible paths emanating from the lanes @xmath80 ,",
    "@xmath81 and @xmath82 , while it only services one of two possible paths , namely @xmath83 , emanating from @xmath84 .",
    "therefore , the contributions to @xmath45 corresponding to @xmath85 all occur with unit weight , while that for @xmath86 occurs only with weight @xmath87 .",
    "note that weighting by @xmath77 implies that we are implicitly assuming all paths with the same in - lane are equally important ; one could choose other weightings if , for a given in - lane , there were a reason to prefer one path over another .",
    "now let us move from the general to the concrete , and introduce the following two - parameter family of path demand functions @xmath88 where @xmath89 and @xmath90 are the instantaneous space averaged densities on the lanes @xmath73 and @xmath91 .",
    "the factor @xmath92 in ( [ path demand ] ) implies that it is desirable to give a green light to paths which have a congested in - lane .",
    "this is intuitively reasonable , and in fact similar schemes are already applied in practice by systems such as scats ( although not by quantifying congestion in terms of the actual lane density ) .",
    "the factor @xmath93 has a complementary effect  it provides a disincentive to giving a green light to a path whose out - lane is already congested .",
    "this is again intuitively reasonable , however it seems that this second mechanism has been far less widely applied in actual adaptive systems used in practice .",
    "the simulations presented in sections  [ kew simulations section ] and  [ square - lattice simulations section ] were performed using sotl with demand function ( [ path demand ] ) , with both @xmath94 and @xmath95 .",
    "we define the density , @xmath96 , of link @xmath22 at time @xmath97 to be the fraction of all cells on @xmath22 which are occupied at that instant , and we define the space - mean speed , @xmath98 , to be the arithmetic mean of the speeds of all vehicles on link @xmath22 . in general , @xmath22 will contain multiple lanes , and we compute @xmath99 and @xmath98 by summing over all the cells / vehicles on all the lanes of @xmath22 .",
    "the flow , @xmath100 , of lane @xmath25 during the @xmath97th time - step is simply the indicator for the event that a vehicle crosses the boundary between a fixed pair of neighboring cells during the @xmath97th update .",
    "the flow @xmath101 on link @xmath22 at time @xmath97 is then simply the arithmetic mean of the @xmath100 over all @xmath102 .",
    "there is some ambiguity in deciding on an appropriate definition of exactly when a vehicle should be considered _",
    "queued_. we use the following simple prescription .    1 .   when a vehicle first enters a link it is _ un - queued _ 2",
    "a vehicle becomes _ queued _ if and only if : 1 .",
    "it is stopped 2 .   every cell in front of it",
    "is occupied 3 .",
    "a queued vehicle remains queued until it turns into a new link    some comments are in order .",
    "firstly , in this definition , we insist that a vehicle must be stopped in order to be queued .",
    "this is reasonable , since a vehicle with speed 1 cell per iteration is traveling at around @xmath103 , and if a vehicle s speed is always at least @xmath103 it does not seem sensible to say it was ever queued .",
    "secondly , insisting on having all cells in front of the vehicle occupied is perhaps a little conservative , but it is certainly the simplest choice , and any other choice would be decidedly _ ad hoc_. finally , the rule that a queued vehicle only becomes dequeued when it leaves the current link is designed to take into account stop - and - go behavior .",
    "i.e. a vehicle that was stopped , and then starts again , only to stop again later never really left the queue .",
    "armed with the above definition , we can now unambiguously define @xmath104 to be the number of vehicles on link @xmath22 which are queued at time @xmath97 .",
    "finally , we can compute network - mean observables @xmath105 , @xmath106 , @xmath107 , @xmath108 , defined as the arithmetic means over all bulk links of all the corresponding link observables .",
    "since the boundary conditions vary with time in our simulations , the system does not settle into a unique stationary state .",
    "in particular , the ergodic theorem does not apply , so that time averages do not converge to stationary expectations .",
    "we therefore repeated each simulation @xmath7 times , and for each value of @xmath97 we estimated @xmath109 via @xmath110 where @xmath111 is the realization of @xmath112 obtained during the @xmath28th run . here",
    "@xmath112 might be the density of a link , or the space - mean velocity of a link , or indeed any of the observables mentioned in the previous section . in this way , for a given observable , @xmath112",
    ", we estimate the _ average process _",
    "all results in this paper are based on @xmath114 simulation runs .      in a given simulation , for each value of @xmath97 we have a list @xmath115 where @xmath116 is the number ( possibly zero ) of vehicles to leave the network at time @xmath97 , and @xmath117 is the total amount of time spent in the network by the @xmath28th such vehicle . in a simulation of duration @xmath118 iterations ,",
    "the total number of vehicles that have traversed the network is therefore @xmath119 for a given simulation , we compute the mean total travel time per vehicle @xmath120 and its fluctuation @xmath121 we emphasize that @xmath122 and @xmath123 are random variables .",
    "we again estimate the averages , @xmath124 and @xmath125 , by simply measuring @xmath122 and @xmath123 in @xmath7 independent simulations and computing their arithmetic means .",
    "it seems intuitively reasonable that both @xmath124 and @xmath125 provide useful measures of network efficiency .",
    "a section of the melbourne suburb of kew consisting of fourteen signalized intersections was chosen as the network on which to test our cellular automaton ; see figure  [ map ] .",
    "this network corresponds to the directed graph shown in figure  [ kew network figure ] .",
    "a list of nodes and links is input into the model in order to define the actual network . for each link",
    "the length , number of lanes , and speed limit must also be input , and for each node a list of phases must be provided .",
    "the phases input into the model are simplified versions of the actual phases used by scats , which ignore complications such as trams and pedestrians that are currently not taken into account in our model .",
    "in addition , suitable boundary conditions need to be applied to the model , and an initial configuration needs to be specified .",
    "we use boundary data in our model for two distinct purposes ; as a means to correctly control the inflow and outflow of vehicles from the network , and also as a means of informing adaptive signal decisions at intersections on the boundary of the network .",
    "we use time inhomogeneous boundary conditions as explained in section  [ dynamic boundary conditions section ] , and empirical scats stop - line occupancies to implement the inflow rates as described in section  [ static boundary conditions section ] . for each boundary in - lane of the network in figure  [ kew network figure ] , vicroads provided us with a time series of the stop - line occupancy , with the exception of link 1012 . in this case",
    "a three - lane link was covered by a single detector , making it impossible to obtain reliable data . for this link , we have used heuristically reasonable inflow rates based on simulations by the origin - destination software package mitm ( see section  [ turning probabilities section ] for more on mitm ) .    the occupancy time series provided by vicroads was for the period 6:30am to 10:00am , in time intervals of 1 minute . to remove the effect of fluctuations due to traffic cycles , typically taking between two and three minutes , we smoothed this data into bins of 30 minutes , implying that @xmath126 iterations ( simulated seconds ) in our simulations ( see section  [ dynamic boundary conditions section ] for the definition of @xmath127 ) .",
    "smaller bins resulted in very noisy profiles .",
    "figure  [ dynamic boundary data figure ] shows some examples of the data used .",
    "as described in section  [ static boundary conditions section ] , at each instant of time , we use the stop - line occupancy , @xmath33 to set the input probability , @xmath31 , into boundary in - lane @xmath25 .",
    "smoothed time series of the empirical scats occupancies , into 30 minute bins , on some representative boundary in - lanes of the kew network .",
    "link labels correspond to the labels in figure  [ kew network figure ] .",
    ", title=\"fig : \" ]   smoothed time series of the empirical scats occupancies , into 30 minute bins , on some representative boundary in - lanes of the kew network .",
    "link labels correspond to the labels in figure  [ kew network figure ] .",
    ", title=\"fig : \" ]    smoothed time series of the empirical scats occupancies , into 30 minute bins , on some representative boundary in - lanes of the kew network .",
    "link labels correspond to the labels in figure  [ kew network figure ] .",
    ", title=\"fig : \" ]   smoothed time series of the empirical scats occupancies , into 30 minute bins , on some representative boundary in - lanes of the kew network .",
    "link labels correspond to the labels in figure  [ kew network figure ] .",
    ", title=\"fig : \" ]    in addition , for each boundary in - lane and each boundary out - lane , we require estimates of the total density , @xmath128 , in order to set the sotl demands according to the demand function ( [ path demand ] ) . in the absence of any detailed empirical data for this quantity",
    ", we simply made the assumption that @xmath129 , for boundary in - lanes , and arbitrarily set @xmath130 for the case of boundary out - lanes .",
    "this is almost surely an overestimate of @xmath128 in the case of in - lanes .    in all our simulations we started from an empty network , letting the system fill up using the time inhomogeneous boundary conditions .      for each node in the chosen network",
    ", vicroads provided simulated data from the mitm software package that lists predicted volumes through each @xmath131 pair , over a period of one hour . in order to estimate the required turning probabilities described in section  [ traffic model section ] we computed turning ratios from these simulated volumes .",
    "we note that mitm is designed for city - wide demographic simulations , and so by using it to obtain turning probabilities at specific intersections , we are likely using it to answer questions on a spatial resolution beyond its designed accuracy . while the resulting values of the turning probabilities may therefore differ from reality , we do expect them to be at least indicative of the true results , for most intersections . in order to obtain more accurate turning probabilities ,",
    "the mitm data could in principle be compared / augmented with scats data where available , however scats occupancies are not sufficient to obtain all the required turning ratios .        for the observables @xmath132 , @xmath133 , @xmath134 and @xmath135 defined in section  [ observables section ] ,",
    "the left column of figure  [ kew uncongested ] shows typical examples of the average processes on an * uncongested * link ( 18 in figure  [ kew network figure ] ) , using sotl with demand function ( [ path demand ] ) and demand exponents @xmath95 , threshold @xmath136 .",
    "it seems that during each inflow epoch a new stationary state is reached , before the link is perturbed out of that state and into another one when the inflow probabilities are changed .",
    "this behaviour is clearly visible in the density plot , but is also apparent in the queue length and flow plots , and to a lesser extent in the speed plot .",
    "uncongested evolution . from top",
    ": sotl ( left ) vs fixed cycle ( right ) evolution of the density , queue length , flow and space - mean speed , on an uncongested link in the kew network ( link 18 in figure  [ kew network figure ] ) .",
    "the sotl demand function ( [ path demand ] ) was used in the simulations , with sotl demand exponents @xmath95 and @xmath136 .",
    "time inhomogeneous boundary conditions based on scats data were imposed , such as in figure  [ dynamic boundary data figure ] .",
    ", title=\"fig : \" ]    uncongested evolution . from top : sotl ( left ) vs fixed cycle ( right ) evolution of the density , queue length , flow and space - mean speed , on an uncongested link in the kew network ( link 18 in figure  [ kew network figure ] ) .",
    "the sotl demand function ( [ path demand ] ) was used in the simulations , with sotl demand exponents @xmath95 and @xmath136 .",
    "time inhomogeneous boundary conditions based on scats data were imposed , such as in figure  [ dynamic boundary data figure ] .",
    ", title=\"fig : \" ]   uncongested evolution . from top : sotl ( left ) vs fixed cycle ( right ) evolution of the density , queue length , flow and space - mean speed , on an uncongested link in the kew network ( link 18 in figure  [ kew network figure ] ) . the sotl demand function ( [ path demand ] ) was used in the simulations , with sotl demand exponents @xmath95 and @xmath136 .",
    "time inhomogeneous boundary conditions based on scats data were imposed , such as in figure  [ dynamic boundary data figure ] .",
    ", title=\"fig : \" ]    uncongested evolution . from top : sotl ( left ) vs fixed cycle ( right ) evolution of the density , queue length , flow and space - mean speed , on an uncongested link in the kew network ( link 18 in figure  [ kew network figure ] ) .",
    "the sotl demand function ( [ path demand ] ) was used in the simulations , with sotl demand exponents @xmath95 and @xmath136 .",
    "time inhomogeneous boundary conditions based on scats data were imposed , such as in figure  [ dynamic boundary data figure ] .",
    ", title=\"fig : \" ]   uncongested evolution . from top : sotl ( left ) vs fixed cycle ( right ) evolution of the density , queue length , flow and space - mean speed , on an uncongested link in the kew network ( link 18 in figure  [ kew network figure ] ) .",
    "the sotl demand function ( [ path demand ] ) was used in the simulations , with sotl demand exponents @xmath95 and @xmath136 .",
    "time inhomogeneous boundary conditions based on scats data were imposed , such as in figure  [ dynamic boundary data figure ] .",
    ", title=\"fig : \" ]    uncongested evolution . from top : sotl ( left ) vs fixed cycle ( right ) evolution of the density , queue length , flow and space - mean speed , on an uncongested link in the kew network ( link 18 in figure  [ kew network figure ] ) .",
    "the sotl demand function ( [ path demand ] ) was used in the simulations , with sotl demand exponents @xmath95 and @xmath136 .",
    "time inhomogeneous boundary conditions based on scats data were imposed , such as in figure  [ dynamic boundary data figure ] .",
    ", title=\"fig : \" ]   uncongested evolution . from top : sotl ( left ) vs fixed cycle ( right ) evolution of the density , queue length , flow and space - mean speed , on an uncongested link in the kew network ( link 18 in figure  [ kew network figure ] ) .",
    "the sotl demand function ( [ path demand ] ) was used in the simulations , with sotl demand exponents @xmath95 and @xmath136 .",
    "time inhomogeneous boundary conditions based on scats data were imposed , such as in figure  [ dynamic boundary data figure ] .",
    ", title=\"fig : \" ]    uncongested evolution . from top : sotl ( left ) vs fixed cycle ( right ) evolution of the density , queue length , flow and space - mean speed , on an uncongested link in the kew network ( link 18 in figure  [ kew network figure ] ) .",
    "the sotl demand function ( [ path demand ] ) was used in the simulations , with sotl demand exponents @xmath95 and @xmath136 .",
    "time inhomogeneous boundary conditions based on scats data were imposed , such as in figure  [ dynamic boundary data figure ] .",
    ", title=\"fig : \" ]     congested evolution . from top : sotl ( left ) vs fixed cycle ( right ) evolution of the density , queue length , flow and space - mean speed , on a congested link in the kew network ( link 7 in figure  [ kew network figure ] ) .",
    "the sotl demand function ( [ path demand ] ) was used in the simulations , with sotl demand exponents @xmath95 and @xmath136 .",
    "time inhomogeneous boundary conditions based on scats data were imposed , such as those shown in figure  [ dynamic boundary data figure ] .",
    ", title=\"fig : \" ]    congested evolution . from top : sotl ( left ) vs fixed cycle ( right ) evolution of the density , queue length , flow and space - mean speed , on a congested link in the kew network ( link 7 in figure  [ kew network figure ] ) .",
    "the sotl demand function ( [ path demand ] ) was used in the simulations , with sotl demand exponents @xmath95 and @xmath136 .",
    "time inhomogeneous boundary conditions based on scats data were imposed , such as those shown in figure  [ dynamic boundary data figure ] .",
    ", title=\"fig : \" ]   congested evolution . from top : sotl ( left ) vs fixed cycle ( right ) evolution of the density , queue length , flow and space - mean speed , on a congested link in the kew network ( link 7 in figure  [ kew network figure ] ) .",
    "the sotl demand function ( [ path demand ] ) was used in the simulations , with sotl demand exponents @xmath95 and @xmath136 .",
    "time inhomogeneous boundary conditions based on scats data were imposed , such as those shown in figure  [ dynamic boundary data figure ] .",
    ", title=\"fig : \" ]    congested evolution . from top : sotl ( left ) vs fixed cycle ( right ) evolution of the density , queue length , flow and space - mean speed , on a congested link in the kew network ( link 7 in figure  [ kew network figure ] ) .",
    "the sotl demand function ( [ path demand ] ) was used in the simulations , with sotl demand exponents @xmath95 and @xmath136 . time inhomogeneous boundary conditions based on scats data were imposed , such as those shown in figure  [ dynamic boundary data figure ] .",
    ", title=\"fig : \" ]   congested evolution . from top : sotl ( left ) vs fixed cycle ( right ) evolution of the density , queue length , flow and space - mean speed , on a congested link in the kew network ( link 7 in figure  [ kew network figure ] ) .",
    "the sotl demand function ( [ path demand ] ) was used in the simulations , with sotl demand exponents @xmath95 and @xmath136 .",
    "time inhomogeneous boundary conditions based on scats data were imposed , such as those shown in figure  [ dynamic boundary data figure ] .",
    ", title=\"fig : \" ]    congested evolution . from top : sotl ( left ) vs fixed cycle ( right ) evolution of the density , queue length , flow and space - mean speed , on a congested link in the kew network ( link 7 in figure  [ kew network figure ] ) .",
    "the sotl demand function ( [ path demand ] ) was used in the simulations , with sotl demand exponents @xmath95 and @xmath136 .",
    "time inhomogeneous boundary conditions based on scats data were imposed , such as those shown in figure  [ dynamic boundary data figure ] .",
    ", title=\"fig : \" ]   congested evolution . from top : sotl ( left ) vs fixed cycle ( right ) evolution of the density , queue length , flow and space - mean speed , on a congested link in the kew network ( link 7 in figure  [ kew network figure ] ) .",
    "the sotl demand function ( [ path demand ] ) was used in the simulations , with sotl demand exponents @xmath95 and @xmath136 .",
    "time inhomogeneous boundary conditions based on scats data were imposed , such as those shown in figure  [ dynamic boundary data figure ] .",
    ", title=\"fig : \" ]    congested evolution . from top : sotl ( left ) vs fixed cycle ( right ) evolution of the density , queue length , flow and space - mean speed , on a congested link in the kew network ( link 7 in figure  [ kew network figure ] ) .",
    "the sotl demand function ( [ path demand ] ) was used in the simulations , with sotl demand exponents @xmath95 and @xmath136 .",
    "time inhomogeneous boundary conditions based on scats data were imposed , such as those shown in figure  [ dynamic boundary data figure ] .",
    ", title=\"fig : \" ]     network means . from top",
    ": sotl ( left ) vs fixed cycle ( right ) evolution of the network - averaged density , space - mean speed , flow and queue length in the kew network . the sotl demand function ( [ path demand ] ) was used in the simulations , with sotl demand exponents @xmath95 and @xmath136 .",
    "time inhomogeneous boundary conditions based on scats data were imposed , such as those shown in figure  [ dynamic boundary data figure ] .",
    ", title=\"fig : \" ]   network means . from top",
    ": sotl ( left ) vs fixed cycle ( right ) evolution of the network - averaged density , space - mean speed , flow and queue length in the kew network .",
    "the sotl demand function ( [ path demand ] ) was used in the simulations , with sotl demand exponents @xmath95 and @xmath136 .",
    "time inhomogeneous boundary conditions based on scats data were imposed , such as those shown in figure  [ dynamic boundary data figure ] .",
    ", title=\"fig : \" ]   network means . from top",
    ": sotl ( left ) vs fixed cycle ( right ) evolution of the network - averaged density , space - mean speed , flow and queue length in the kew network .",
    "the sotl demand function ( [ path demand ] ) was used in the simulations , with sotl demand exponents @xmath95 and @xmath136 .",
    "time inhomogeneous boundary conditions based on scats data were imposed , such as those shown in figure  [ dynamic boundary data figure ] .",
    ", title=\"fig : \" ]   network means . from top",
    ": sotl ( left ) vs fixed cycle ( right ) evolution of the network - averaged density , space - mean speed , flow and queue length in the kew network .",
    "the sotl demand function ( [ path demand ] ) was used in the simulations , with sotl demand exponents @xmath95 and @xmath136 .",
    "time inhomogeneous boundary conditions based on scats data were imposed , such as those shown in figure  [ dynamic boundary data figure ] .",
    ", title=\"fig : \" ]   network means . from top",
    ": sotl ( left ) vs fixed cycle ( right ) evolution of the network - averaged density , space - mean speed , flow and queue length in the kew network .",
    "the sotl demand function ( [ path demand ] ) was used in the simulations , with sotl demand exponents @xmath95 and @xmath136 .",
    "time inhomogeneous boundary conditions based on scats data were imposed , such as those shown in figure  [ dynamic boundary data figure ] .",
    ", title=\"fig : \" ]   network means . from top",
    ": sotl ( left ) vs fixed cycle ( right ) evolution of the network - averaged density , space - mean speed , flow and queue length in the kew network .",
    "the sotl demand function ( [ path demand ] ) was used in the simulations , with sotl demand exponents @xmath95 and @xmath136 .",
    "time inhomogeneous boundary conditions based on scats data were imposed , such as those shown in figure  [ dynamic boundary data figure ] .",
    ", title=\"fig : \" ]   network means . from top",
    ": sotl ( left ) vs fixed cycle ( right ) evolution of the network - averaged density , space - mean speed , flow and queue length in the kew network . the sotl demand function ( [ path demand ] ) was used in the simulations , with sotl demand exponents @xmath95 and @xmath136 .",
    "time inhomogeneous boundary conditions based on scats data were imposed , such as those shown in figure  [ dynamic boundary data figure ] .",
    ", title=\"fig : \" ]   network means . from top : sotl ( left ) vs fixed cycle ( right ) evolution of the network - averaged density , space - mean speed , flow and queue length in the kew network .",
    "the sotl demand function ( [ path demand ] ) was used in the simulations , with sotl demand exponents @xmath95 and @xmath136 .",
    "time inhomogeneous boundary conditions based on scats data were imposed , such as those shown in figure  [ dynamic boundary data figure ] .",
    ", title=\"fig : \" ]    for comparison , we repeated the simulations using non - adaptive fixed - cycle traffic lights ( for a definition see [ choose phases ] ) and measured the same observables .",
    "these are plotted in the right column of figure  [ kew uncongested ] .",
    "the green times for each phase in this case were obtained from the actual scats values during morning peak hour ( 7am9am ) . clearly , the fluctuations in these results are much larger than for sotl .",
    "a similar observation was made by lmmer and helbing in @xcite , who studied self - organizing traffic lights using a fluid - dynamic model for the traffic flow in urban road networks .",
    "figure  [ kew congested ] shows typical examples of the average processes on a * congested * link ( 7 in figure  [ kew network figure ] ) , both for sotl with demand function ( [ path demand ] ) and demand exponents @xmath95 , threshold @xmath136 , as well as for fixed - cycle traffic lights . unlike the uncongested plots it does not appear that stationarity is reached within the individual inflow epochs , suggesting that relaxation towards stationarity is much faster at low density than at high density .",
    "however , the transitions between inflow epochs are still visible in the density plot for sotl .",
    "figure  [ kew network means ] shows typical examples of the average network - mean processes , @xmath137 , @xmath138 , @xmath139 and @xmath0 , both for sotl and fixed - cycle traffic lights .",
    "there are jump - discontinuities in the sotl evolutions of @xmath138 and @xmath139 at times up to about @xmath140 , suggesting that these system - wide observables manage to reach their stationary value within each of these early epochs .",
    "these jumps are less pronounced in @xmath137 and @xmath0 .",
    "for later times , the jumps in any of the network observables are much less significant , suggesting that during later epochs , at the network level the system never really reaches stationarity .",
    "as the network is relatively uncongested during early epochs , this confirms that relaxation towards stationarity is much faster at low density than at high density .    in summary",
    ", we find that sotl gives better results than fixed - cycle traffic lights for the means of the density , queue length , flow and speed .",
    "furthermore , in all cases sotl produces much smaller fluctuations .",
    "moreover , at later times , when the network is congested but the boundary inflow decreases , sotl allows the system to adjust more rapidly to the changed boundary conditions .",
    "the average values of the travel time @xmath122 and its fluctuation @xmath123 are presented in figure  [ kew travel times ] as a function of the sotl threshold parameter @xmath60 for the two choices of exponents @xmath94 and @xmath95 in the sotl demand function ( [ path demand ] ) .",
    "the former choice corresponds to an upstream - only version of sotl , while the latter corresponds to a hybrid upstream - downstream version . for comparison , we include in the figures the corresponding values of @xmath124 and @xmath125 for the network with fixed - cycle traffic lights , which are independent of @xmath60 .",
    "mean travel time @xmath124 and its fluctuation @xmath125 vs sotl threshold parameter @xmath60 , for the kew network , with the sotl demand function ( [ path demand ] ) and sotl demand exponents @xmath141 .",
    "the horizontal line shows the corresponding value for the system with fixed - cycle traffic lights.,title=\"fig : \" ]   mean travel time @xmath124 and its fluctuation @xmath125 vs sotl threshold parameter @xmath60 , for the kew network , with the sotl demand function ( [ path demand ] ) and sotl demand exponents @xmath141 .",
    "the horizontal line shows the corresponding value for the system with fixed - cycle traffic lights.,title=\"fig : \" ]    we begin by noting that both sotl strategies result in significantly lower values of both @xmath124 and @xmath125 than fixed - cycle traffic lights .",
    "the adaptive systems therefore not only outperform the fixed - cycle system on average , but they are also more reliable . the observation that sotl produces smaller fluctuations for the vehicle travel time is entirely consistent with the behaviour presented in figures  [ kew uncongested ] , [ kew congested ] and  [ kew network means ] .",
    "the @xmath142 model appears to have an optimal value of @xmath60 near @xmath143 , in terms of both @xmath124 and @xmath125 . in both cases",
    ", there is range of @xmath60 around @xmath144 for which the dependence of @xmath124 and @xmath125 on @xmath60 appears weak .",
    "this suggests that the sotl methodology is reasonably robust with respect to the parameter @xmath60 .",
    ".[kew travel times table ] numerical values of the mean @xmath124 and fluctuation @xmath125 of the vehicle travel time for the simulations of the @xmath145 and @xmath142 models on the kew network .",
    "the statistical error shown corresponds to one standard deviation .",
    "the units are minutes . for comparison , the corresponding values using fixed - cycle traffic lights are @xmath146 and @xmath147 . [ cols= \" > , > , > , > , > \" , ]",
    "the main aims of this work have been to try and ( partially ) answer the questions of how adaptive signal strategies improve urban traffic flow , and what type of adaptive strategies perform best . to investigate these questions ,",
    "we have developed a realistic network traffic simulation model , which we used to simulate two different networks .",
    "the first is an existing road network in the melbourne suburb of kew , for which we have experimental data available as input into our simulation model .",
    "for comparison we have also simulated a square - lattice road network , in order to test network independent features and robustness .    on these two networks",
    "we have compared a non - adaptive signal system , with fixed - cycle traffic lights , with a version of the adaptive sotl ( self organizing traffic lights ) introduced by gershenson  @xcite . in the cases",
    "studied , we find that averages of observables such as travel time , density , flow , queue length and speed are almost always better for sotl than for the fixed - cycle strategy",
    ". moreover , the fluctuations in these observables are significantly smaller for sotl .",
    "this suggests that a regular traffic signal system results in fairly large fluctuations in traffic observables compared to a deregulated self - organizing signal system .",
    "a similar observation was recently made by lmmer and helbing  @xcite in a self - organizing fluid - dynamic model for traffic flow in urban road networks .    on both networks",
    "we have also performed a comparison of two specific types of sotl strategies ; one which is informed only by the congestion on upstream links , and another which is informed by the congestion on both upstream and downstream links .",
    "our results show that for four typical systems studied , provided the network is sufficiently congested the latter strategy is both more efficient ( smaller travel times ) and more reliable ( smaller fluctuations in travel times ) than the former . for an uncongested network we found that there was no discernible difference between the two strategies .",
    "these results are only the tip of the ice berg .",
    "firstly , it is of significant interest to obtain a more detailed understanding of how the relative efficiencies of the two sotl strategies depends on network congestion .",
    "this is of crucial importance in determining whether the upstream - downstream strategy has any practical merit .",
    "although in the systems we have studied , the efficiency gain from using the upstream - downstream strategy was modest , it is quite possible that there may be other regions of boundary input parameters in which the gains are far more significant .",
    "it is also conceivable that in some regimes of boundary input data the upstream - only strategy may in fact be more efficient .",
    "furthermore , it is of great interest to study the effects of changing the network structure , in particular to study the above problems on much larger networks . to this end",
    ", the square - grid network discussed in section  [ square - lattice simulations section ] is ideal  it is tailor made for studying the effect of increasing the network size parameters , @xmath148 , while retaining the important features of a realistic network such as discussed in section  [ kew simulations section ] .",
    "preliminary simulations show that simulating such square - grid networks with 100 intersections is easily within reach computationally .",
    "we thank the traffic engineers at vicroads , in particular adrian george and andrew wall , for many interesting and valuable discussions , as well as for making available to us the scats data for the kew network .",
    "we further thank ofer biham , kostya borovkov , ebrahim fouladvand , tony guttmann , reinout quispel , andreas schadschneider , david shteinman , peter taylor and peter van der kamp for discussions and support .",
    "this research was financially supported by the australian research council .",
    "for each lane , @xmath25 , of each boundary inlink we are given as input an inflow probability @xmath31 . at each instant of time , if the first cell of @xmath25 is empty , we add a new vehicle to this cell with probability @xmath31 .",
    "the value of @xmath31 will in general vary during the simulation , however in this section it suffices to think of @xmath31 as being fixed , since we are discussing how to implement the inflow at a given instant of time .",
    "since we will often estimate @xmath31 using an empirical stop - line occupancy , we typically model each boundary in - lane using a small number of cells . as a consequence of this ,",
    "vehicles on boundary inlinks will most likely not have sufficient time to make _ topological lane changes _ ( as described in section  [ lane changing ] ) .",
    "we therefore make the ( quite reasonable ) assumption that a vehicle in lane @xmath25 has decided to turn into a link which is connected to @xmath25 via one of the node s paths .",
    "consequently , vehicles entering boundary in - lanes make their turning decisions according to the conditional probabilities @xmath149 , rather than @xmath24 .    our procedure for inserting new vehicles into the network",
    "can now be summarized simply by algorithm  [ inflow alg ] .",
    "@xmath44 [ inflow alg ]    with probability @xmath31 add a new vehicle with speed @xmath150 to the first cell of @xmath25 make a turning decision for the new vehicle using @xmath149    finally , we need to express @xmath149 in terms of the available data , @xmath24 .",
    "it is quite reasonable to assume that there is one unique lane @xmath151 for which a path @xmath152 from @xmath25 to @xmath23 exists .",
    "we therefore have @xmath153 where @xmath154 is the conditional probability that a vehicle on link @xmath22 will traverse the path @xmath152 , given that it is on lane @xmath25 .",
    "now , if @xmath155 is the probability that a given vehicle on link @xmath22 will traverse the particular path @xmath152 , then it is clear that @xmath156 the sum in ( [ lane conditioning ] ) is over all paths @xmath157 with in - lane @xmath25 . as an example , if we take @xmath158 in figure  [ node diagram ] then the sum is over two paths @xmath157 where @xmath159 can be either @xmath160 or @xmath161 . if there are @xmath162 paths @xmath163 connecting link @xmath22 to link @xmath23 , then clearly @xmath164 as an example , if we take @xmath158 and @xmath165 in figure  [ node diagram ] then @xmath166 , whereas if we take @xmath167 we have @xmath168",
    "in fact , we shall assume that all possible paths are weighted equally @xmath169 combining ( [ equal a priori lane probs ] ) , ( [ lane conditioning ] ) and ( [ link to link lane conditioning ] ) then allows us to compute @xmath149 from @xmath170 , as desired .",
    "equation ( [ equal a priori lane probs ] ) seems a perfectly reasonable assumption , since a driver would be expected to care only about which link they were about to turn into , not which particular lane they use to do so .",
    "lane changing in ca traffic models is a rather well - studied topic , and our implementation follows closely the ideas presented in @xcite . we perform lane changing in two separate steps , so that we guarantee our network updates are carried out in parallel . for a given link ,",
    "we firstly consider each occupied cell of each lane and _ decide _ which vehicles want to change lane , and all such vehicle s keep a record of which lane they want to change to .",
    "then , once all vehicles have decided on their lane changes , we go through each cell of each lane again and _ execute _ the lane changes .",
    "this ensures that all vehicles make their lane changes based on information at the same time step .",
    "once the lane changing decisions have been made , executing the lane changes is trivial , and so in this section we focus only on how to make the decisions",
    ". a vehicle may decide to change lanes for two distinct reasons :    1 .",
    "topological : to ensure the vehicle can make its desired turn at the approaching intersection 2 .   dynamic : to avoid bad traffic    at each time - step , we propose for each vehicle a specific lane change , and then decide whether or not it should be executed .",
    "we only propose lane changes from left - to - right on even time steps , and lane changes from right - to - left on odd time - steps .",
    "this ensures that we never have two vehicles competing for the same cell .",
    "as already discussed , when a vehicle @xmath171 first enters a link @xmath172 we randomly choose one of the possible outlinks @xmath23 of the upcoming node @xmath7 and assign @xmath23 to be the vehicle s _",
    "destination_. i.e. the vehicle has already decided to turn onto @xmath23 when it reaches @xmath7 .",
    "this defines a set of _ possible paths _ for @xmath171 , denoted @xmath173 , which is the subset of all the paths belonging to @xmath7 which have inlink @xmath22 and outlink @xmath23 .",
    "in order for @xmath171 to make its desired turn at @xmath7 it must traverse a path in @xmath174 . it may be the case however that @xmath171 s current lane @xmath25 is not the in - lane of any of the paths in @xmath174 . in this case",
    "@xmath171 will need to make one or more lane changes in order to enter a lane from which the desired turn is possible . in this context",
    ", we say a lane change @xmath175 is _ allowed _ if the proposed new lane @xmath176 is the in - lane of a path in @xmath174 .",
    "in addition , we say a lane change is _ needed _ if @xmath25 is not the in - lane of a path in @xmath174 , but @xmath176 or a lane to the right ( left ) of @xmath176 is the in - lane of a path in @xmath174 , if @xmath176 is to the right ( left ) of @xmath25 . _ allowed _ lane changes are not necessarily _ needed _ because it may be the case that there already exists a @xmath177 with @xmath178 .",
    "conversely , a _ needed _ lane change may not be _ allowed _ according to this definition . deciding if a proposed lane change is _ allowed _ and/or _ needed _ in the above senses of the terms is the only topological information required to decide whether to accept a proposed lane change .",
    "algorithm  [ topological lane changes alg ] summarizes how to decide if a proposed lane change of vehicle @xmath171 from lane @xmath25 to lane @xmath179 is topologically _ allowed _ and/or _ needed _ we mean that lanes @xmath25 and @xmath176 are adjacent ; i.e. they are consecutive in the lane ordering of their link . ] .",
    "@xmath44 [ topological lane changes alg ]    consider a vehicle @xmath171 on lane @xmath25 , and a proposed @xmath175 @xmath175 is allowed @xmath175 is not allowed @xmath175 is not needed @xmath175 is needed @xmath175 is needed    typical situation arising in dynamic lane changing .",
    "suppose @xmath4 .",
    "we are proposing to move the vehicle of speed @xmath180 on the left lane , to the right lane . since @xmath181 the lane change is _",
    "desirable_. since @xmath182 the lane change is also _",
    "safe_. , width=415 ]      suppose a vehicle @xmath171 can not reach free speed due to congestion in its current lane @xmath25 , and suppose further that the gap in @xmath183 is larger than that in @xmath25 ; see figure  [ dynamic lane change fig ] .",
    "this provides a dynamic incentive for @xmath171 to change lanes @xmath175 , and when such an incentive exists we say @xmath175 is _",
    "desirable_. we allow @xmath171 to make such a lane change provided it is safe to do so , and provided @xmath175 is topologically _ allowed _ ( as defined above ) .",
    "we use algorithm  [ dynamic lane change alg ] to decide whether @xmath175 is _ desirable _ and/or _ safe_.    @xmath44 [ dynamic lane change alg ]    consider a vehicle of speed @xmath0 on lane @xmath25 , and a proposed @xmath175 ( see figure  [ dynamic lane change fig ] ) @xmath175 is safe @xmath175 is desirable    the definition of _ safe _ presented in algorithm  [ dynamic lane change alg ] is stronger than merely ensuring vehicles avoid crashes ; it ensures that the vehicle with speed @xmath184 does not need to immediately decelerate .      at even ( odd ) time steps",
    ", we consider each link , and consider each lane of that link except the rightmost ( leftmost ) lane , and consider each cell on that lane which contains a vehicle .",
    "we then use algorithm  [ decide lane changes ] to decide whether or not that vehicle should perform a lane change to the lane to its right ( left ) .",
    "@xmath44 [ decide lane changes ]    consider a vehicle on cell @xmath28 of a lane @xmath25 of length @xmath185 , and a lane @xmath179 accept @xmath175 accept @xmath175 with probability @xmath186 accept @xmath175 with probability @xmath187    note that we accept _ needed _ but _ unsafe _ lane changes with a probability @xmath186 , which increases as we proceed along the lane .",
    "this is a simple way to mimic the increasing urgency of getting into an appropriate lane to make a desired turn at the approaching intersection .",
    "we emphasize however , that even though we describe such lane changes as _ unsafe _ , they can not cause a crash because we explicitly demand that cell @xmath28 on lane @xmath176 is empty .",
    "perhaps a more accurate description for them would be _ impolite _ lane changes , since their effect is to force other vehicles to decelerate .",
    "we also remark that in practice we set @xmath188 to avoid platoons oscillating back and forth on consecutive time - steps .",
    "nagel - schreckenberg(nasch ) dynamics refers to a standard one - dimensional stochastic dynamics , which is routinely utilized in freeway models .",
    "each lane is divided up into cells of length @xmath3 , which represents the approximate space occupied by a vehicle in a jam .",
    "we assume each time - step corresponds to 1 second , so that a vehicle may only have one of a discrete set of speeds which are multiples of @xmath103 . the key step in performing the nasch updates",
    "is to compute new velocities for each vehicle .",
    "suppose at time @xmath97 a vehicle with speed @xmath189 is located in cell @xmath190 , and has _ headway _",
    "( number of empty cells ahead ) equal to @xmath191 .",
    "then the maximum speed this vehicle can safely achieve at the next time step is taken to be @xmath192 , which allows for unit acceleration provided the speed limit is obeyed and crashes are avoided .",
    "provided @xmath193 , a random unit deceleration is then applied so with probability @xmath194 the new speed is @xmath195 , otherwise @xmath196 .",
    "finally , in the bulk of the lane , the vehicle hops @xmath197 cells ahead , so that @xmath198 .",
    "for each lane , all vehicles in the bulk of the lane are updated in this way in parallel .",
    "it is known from freeway studies that the random deceleration step is crucial for obtaining a realistic model  @xcite . in our simulations",
    "we set @xmath199 if @xmath200 and @xmath201",
    "if @xmath202 , and so we have what is known as a velocity dependent randomization ( vdr ) model in the statistical mechanics literature ( see e.g.  @xcite ) .",
    "if a vehicle @xmath171 lies in cell @xmath203 and has no occupied cells in front of it then we set @xmath204 ; if @xmath171 has sufficiently low speed it will then be updated via nasch in the same way as any other vehicle on the lane , otherwise such vehicles are handled separately by the mark paths and clear paths routines , see [ mark paths ] and [ clear paths ] .",
    "algorithm  [ nasch alg ] , which uses the @xmath205 speed function , is applied to each lane of each bulk link , at each time step .",
    "@xmath44 [ nasch alg ]    consider lane @xmath25 of length @xmath185 stop @xmath171 at the end of @xmath25 set @xmath206 move @xmath171 from @xmath28 to @xmath207    the association of vehicles with paths , @xmath208 , and the _ marking _ of vehicles as _ needing to stop _",
    ", referred to in algorithm  [ nasch alg ] , is performed by the _ mark paths _ routine ; see algorithm  [ mark paths alg ] in section  [ mark paths ] .",
    "we emphasize here however that it is only the very last vehicle on a lane that may be associated with paths or required to stop .      by _ marking paths _ for a given link @xmath172 we mean that we consider each lane @xmath25 of @xmath22 , and determine whether or not @xmath25 has a vehicle @xmath171 which is sufficiently close to the end of @xmath25 , and traveling sufficiently fast , that a naive application of nasch dynamics could move @xmath171 past the end of @xmath25 . if this is the case we search for a path @xmath70 of the active phase @xmath46 which has @xmath178 and @xmath209 , where @xmath210 denotes the unique outlink of @xmath7 onto which @xmath171 originally decided to turn when it first entered link @xmath22 .",
    "if there exists such a path @xmath70 then @xmath171 could make its desired turn during the current iteration by traversing @xmath70 , and so in such a case we associate @xmath70 and @xmath171 , a relationship that we abbreviate with @xmath211 . when a path has been associated with a vehicle in this way we say it has been _",
    "marked_. the actual traversal of @xmath171 along @xmath70 will take place when we _ clear paths _ , provided there are no other marked paths to which @xmath70 must give way ; this is discussed further in section  [ clear paths ] .    in practice , we perform path marking by applying algorithm  [ mark paths alg ] to each lane of each link of the network .",
    "recall that @xmath212 is the set of all paths of node @xmath7 and that @xmath213    @xmath44 [ mark paths alg ]    suppose the last occupied cell of lane @xmath25 of link @xmath172 contains vehicle @xmath171 let @xmath214 uar , choose @xmath215 and associate @xmath211 mark @xmath171 as needing to stop at the end of @xmath25 uar , choose @xmath216 and associate @xmath211 mark @xmath171 as needing to stop at the end of @xmath25    some comments are in order .",
    "firstly , note that we compute the nasch speed using @xmath217 , regardless of the value we use in the nasch updates , to ensure that we identify all vehicles that _",
    "could _ possibly move past the end of their lane in one nasch update .",
    "secondly , note that the set @xmath218 is the set of all paths @xmath70 which are available for @xmath171 to traverse during the current iteration , without regard to whether they are consistent with @xmath171 s turn decision ; i.e. regardless of whether or not they satisfy @xmath219 .",
    "therefore , @xmath220 is simply the set of all @xmath216 for which @xmath219 .",
    "if there are any paths at all in @xmath212 along which a vehicle on lane @xmath25 can move to the link @xmath210 , then we demand that @xmath171 may only be associated with such a path , even if no such paths belong to the current @xmath218 .",
    "if such paths do indeed exist but do not belong to the current @xmath218 then @xmath171 is flagged as needing to stop at the end of @xmath25 .",
    "the vehicle will then wait at the lights until an appropriate phase , consistent with its turn decision , becomes active .",
    "however , it is possible that despite all the topological lane changing , a vehicle @xmath171 may end up in a lane which is inconsistent with its desired turn decision .",
    "when such a case arises , rather than let @xmath171 block traffic we demand that it give up on its turn decision and simply randomly chose one of the paths currently available to it if one exists , otherwise we again stop @xmath171 at the end of @xmath25 . recall that if @xmath171 is flagged as having to stop at the end of @xmath25 then this move is actually performed by nasch ; see [ nasch ] .",
    "finally , in algorithm  [ mark paths alg ] we use the prescription in algorithm  [ has space ] to determine if a lane _ has space_.    @xmath44 [ has space ]    consider path @xmath70 @xmath91 has space @xmath91 has space with probability @xmath221    finally , note that we perform path marking _ before _ the nasch updates because in order for algorithm  [ update ] to be parallel we need the determinations of whether a given lane has an empty first cell to occur _ before _ we update these cells .",
    "we also require the marking information within nasch so that we can correctly stop vehicles on the end of their lane if need be .",
    "recall that for a given node , and a given phase , each path has associated with it a list ( possibly empty ) of other paths in the same phase to which it must give way .",
    "if path @xmath222 is listed in path @xmath70 s give - way list , and both @xmath70 and @xmath222 are marked , then @xmath70 will not be cleared during the current iteration . in this sense @xmath222 has _ priority _ over @xmath70 . in practice",
    ", @xmath222 might represent a vehicle traveling straight through a four - way intersection while @xmath70 represents a vehicle traveling in the opposite direction and wishing to turn right ( cf .",
    "paths @xmath20 and @xmath18 in figure  [ dynamic lane change fig ] ) .",
    "algorithm  [ clear paths alg ] describes the clear path routine in detail .",
    "@xmath44 [ clear paths alg ]    consider node @xmath7 move the vehicle @xmath208 to the last cell of @xmath73 give @xmath171 speed 0 disassociate @xmath70 and @xmath171 move the vehicle @xmath208 to the first cell of @xmath91 set @xmath223 delete @xmath208      this depends on the choice of signal rules , of which there are infinitely many one may consider . perhaps the simplest rules are simply fixed cycle rules ; for each node we have an ordered list of phases @xmath224 and an ordered list of _ split _ times @xmath225 .",
    "we then cycle through these phases according to the corresponding split times ; phase @xmath226 is the active phase for @xmath227 iterations , then @xmath228 is the active phase for @xmath229 iterations , etc",
    ".    more sophisticated rules may choose the active phase based on the actual network configuration .",
    "one examples is the self - organized traffic lights discussed in section  [ sotl section ] .",
    "the implementation of this rule is given in algorithm  [ sotl ] .",
    "10 url # 1#1urlprefix[2][]#2 chowdhury d , santen l and schadschneider a 2000 _ phys .",
    "rep . _ * 329 * 199329                                                  lmmer s 2007 _ reglerentwurf zur dezentralen online - steuerung von lichtsignalanlagen in straennetzwerken ( controller design for a decentralized control of traffic lights in urban road networks ) .",
    "ph.d . thesis .",
    "dresden university of technology _"
  ],
  "abstract_text": [
    "<S> we present a model of traffic flow on generic urban road networks based on cellular automata . </S>",
    "<S> we apply this model to an existing road network in the australian city of melbourne , using empirical data as input . for comparison </S>",
    "<S> , we also apply this model to a square - grid network using hypothetical input data . on both networks </S>",
    "<S> we compare the effects of non - adaptive vs adaptive traffic lights , in which instantaneous traffic state information feeds back into the traffic signal schedule . </S>",
    "<S> we observe that not only do adaptive traffic lights result in better averages of network observables , they also lead to significantly smaller fluctuations in these observables . </S>",
    "<S> we furthermore compare two different systems of adaptive traffic signals , one which is informed by the traffic state on both upstream and downstream links , and one which is informed by upstream links only . </S>",
    "<S> we find that , in general , both the mean and the fluctuation of the travel time are smallest when using the joint upstream - downstream control strategy . </S>"
  ]
}
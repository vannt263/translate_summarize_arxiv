{
  "article_text": [
    "the main goal of these sessions will be to understand the dynamics of a system exhibiting a continuum of periodic orbits when we add a small periodic forcing .",
    "the most paradigmatic example is probably the perturbed pendulum ; however , such systems massively appear in real applications , specially in celestial mechanics .",
    "this has given rise to classical problems exhibiting extremely rich dynamics , such as the restricted three body problem .",
    "in these sessions we will see some theoretical results , but we will mainly visualize them through analytical and numerical computations for a particular example , the forced pendulum : @xmath0 where @xmath1 is a small parameter , @xmath2 and @xmath3 a periodic forcing : @xmath4 .",
    "we will mainly see that , when @xmath5 the face portrait looks like figure  [ fig : pendulum ] ( right ) and that , when @xmath6 looks like figure  [ fig : pendulum ] ( left ) . we will learn theoretical and numerical techniques to compute the surviving resonant periodic orbits ( big holes in figure  [ fig : pendulum ] left ) . +",
    "although everything we will see will be generic for any @xmath3 , we will fix this forcing from now on say to @xmath7 ant @xmath8 becomes @xmath9 .",
    "+ it will be useful to write the system as a first order one by increasing the dimension .",
    "let @xmath10 , then we can write it as @xmath11",
    "we will start with some exercises in order to understand the dynamics of the unperturbed pendulum ( @xmath5 ) .",
    "consider the unperturbed equations of the pendulum by setting @xmath5 in eq .",
    ": @xmath12 @xmath13    1 .",
    "obtain the equilibrium points and state their type .",
    "2 .   obtain a hamiltonian for system  .    1 .",
    "the system possesses an elliptic equilibrium point at the origin and two saddle points at @xmath14 .",
    "the function @xmath15 is the hamiltonian of system   up to a constant value .",
    "write a small program in matlab to plot the phase portrait of system  .",
    "see  @xcite .    in this session",
    "we will focus on what happens with the periodic orbits inside the homoclinic loop when we add a small periodic forcing to system   ( say @xmath16 ) . to this end",
    ", it will be crucial to compute the periods of the periodic orbits for @xmath5 .",
    "let s us now see a general theoretical approach to obtain a formula .",
    "assume we have hamiltonian system of the form @xmath17 where @xmath18 is a potential energy .",
    "assume that we have a periodic orbit at level of energy @xmath19 given by @xmath20 .",
    "then , we can compute its period , @xmath21 , as follows : @xmath22 using that the system is hamiltonian and , hence , @xmath23 we get @xmath24 isolating @xmath25 from @xmath20 , @xmath26    but now we have two problems .",
    "first is that solving such an integral explicitly can be a nightmare , if possible at all .",
    "second , doing integrals numerically is a difficult task , it s slow and imprecise . fortunately , there is an alternative : compute a poincar map using a transversal section to the periodic orbit and capture the return time .",
    "write a small program in matlab to compute the periods of the periodic orbits using the poincar map from the section @xmath27 to itself .      in general",
    ", for autonomous systems , in order to study the existence of periodic orbits one typically considers the poincar map : @xmath28 where @xmath29 is a co - dimension one section . in our case",
    ", we could take the vertical axis @xmath30 .",
    "then , fixed points of the poincar map , points @xmath31 such that @xmath32 , become initial conditions for periodic orbits for the flow , whose period is the flying time .",
    "periodic points of the poincar map , @xmath33 , also give rise to periodic orbits for the flow , which cross @xmath34 times the poincar section and their period becomes the addition of all flying times between consecutive impacts with the poincar section before @xmath35 is reached again .",
    "+ however , if the system is not autonomous ( but periodic ) , then one needs to take into account the initial time and consider poincar sections of the form @xmath36 , with @xmath37 .",
    "then , a sufficient condition for the existence of a periodic orbits becomes @xmath38 .",
    "that is , after the point @xmath35 is reached again after @xmath34 crossings and the total spent time is a multiple of @xmath8 .",
    "then , the flow possesses an @xmath39-periodic orbit crossing the section @xmath34 times .",
    "note that , if total time spent to reach @xmath35 again is not a multiple of @xmath8 , then nothing can be said about the existence of a periodic orbit .",
    "one of inconveniences of using poincar maps with non - autonomous systems is the need of computing the flying time .",
    "although this can be done numerically , it requires extra computations than simply numerically integrating a flow , as one needs to compute the crossing with the section .",
    "alternatively , one can use the stroboscopic map , which consists of integrating the system for a time @xmath8 : @xmath40 where @xmath41 then , if @xmath42 , then @xmath35 is the initial condition for a @xmath39-periodic orbit : @xmath43    write a small program in matlab to compute the stroboscopic map . write also a script to iterate it several times ( say @xmath44 ) for different initial conditions at the @xmath25 axis . note the resonances",
    "( probably you will need to play with @xmath45 to observe things better ) .",
    "first use @xmath5 , and then increase it a little bit and see what happens .",
    "let us consider a planar field of the form @xmath46 where @xmath47 @xmath1 is a small parameter and @xmath3 is @xmath8-periodic in @xmath48 : @xmath49 for simplicity , let us assume that , for @xmath5 , the unperturbed system @xmath50 is hamiltonian .",
    "that is , there exists a function @xmath51 such that @xmath52 moreover , let us assume that the unperturbed system satisfies the following :    1 .",
    "there exists a compact region completely covered by a continuum of periodic orbits .",
    "2 .   let @xmath21 be the period of the periodic orbit located at the energy level @xmath53 : @xmath54 assume that @xmath55 .",
    "then we have the following result :    [ theo : melnikov ] assume the above conditions are satisfied .",
    "assume that the unperturbed system has a periodic orbit , @xmath20 , of period @xmath56 where @xmath8 is the period of the periodic forcing .",
    "let @xmath57 be an initial condition for such a periodic orbit , and let @xmath58 be the flow at such initial condition .",
    "then let us define the so - called ( subharmonic ) melnikov function @xmath59 then , if there exists @xmath60 such that    1 .",
    "@xmath61 2 .",
    "@xmath62 ,    then , for @xmath6 small enough , the perturbed system possesses a periodic orbit of period @xmath39 with initial condition @xmath63 at @xmath64 @xmath65    [ ex : analytical_melnikov ] compute the analytical expression of te melnikov function for system   ( you do nt have to do the integral ! ) .",
    "write a little program in matlab to numerically compute the melnikov integral obtained in exercise  [ ex : analytical_melnikov ] .",
    "we now want to numerically compute the initial conditions ( @xmath66 ) given by theorem  [ theo : melnikov ] . here",
    "we describe a newton method to do that in a general setting : @xmath34-dimensional not necessary hamiltonian systems .",
    "assume we want to compute a periodic orbit of an @xmath34-dimensional non - autonomous periodic system of the form @xmath67 where @xmath68 is a @xmath8-periodic field in @xmath48 : @xmath69 , for any @xmath70 .",
    "+ due to the periodicity , instead of using poincar maps in the state space it will be much more convenient to use the so - called stroboscopic map , which is indeed a poincar map but using a section in time .",
    "this map is given by flowing system   for a time @xmath8 with initial condition @xmath71 : @xmath72 provided that system   is @xmath8-periodic in @xmath48 , @xmath73 becomes a map from the time section @xmath74 to itself : @xmath75 where @xmath41 imagine that we want to compute the initial condition , @xmath76 for a periodic orbit of system   at the section @xmath77 .",
    "recalling its periodicity , the period of such a periodic orbit must be a multiple of @xmath8 , say @xmath39 .",
    "in other words , we must look for periodic points of the map @xmath78 , that is , points @xmath76 such that @xmath79 one of the most extended methods for numerically computing such points is the newton method , assuming that one has some idea about where such a points lies , as we need a first approximation for the newton method to converge where we want .",
    "let us assume that we are looking for a @xmath8-periodic orbit ; that is , @xmath80 and we want to find a fixed point of the map @xmath78 .",
    "then , we want to solve the equation @xmath81 the newton method consists of considering the linear approximation of the function @xmath82 around some point @xmath83 ( which is a first approximation of the solution we are looking for ) and solve the linear system instead .",
    "this provides a new point , @xmath84 which , hopefully , is a more accurate solution than the initial one .",
    "+ the linear approximation of equation @xmath85 around @xmath83 becomes @xmath86 where @xmath87 in section  [ sec : variational ] we will see how to compute the differential @xmath88 .",
    "+ if we solve equation   for @xmath89 we get @xmath90 this leads to an iterative process @xmath91 which converges quadratically to @xmath76 provided that @xmath35 is a good enough approximation .",
    "+ alternatively , some programing environments ( like matlab ) offer routines to solve linear equations which might be more efficient than computing the inverse @xmath92 . in this case , the linear system to be solved would be @xmath93    [ rem : df_invertibility ] note that the newton method requires the matrix @xmath94 to be invertible .",
    "this implies two things :    * @xmath95 must be invertible at the starting point * @xmath95 must be invertible at the fixed point !",
    "this implies that the newton method will have troubles if the fixed point we are looking for is a center , as the eigenvalues of @xmath96 would have real part equal to one . in other words",
    ", the periodic orbit has to hyperbolic .",
    "similarly we can apply the newton method to solve the equation @xmath97 to get the same expression as in eq .  .",
    "however , in this case the computation of @xmath95 becomes now a bit more tricky . using that @xmath98",
    ", we apply the chain rule to get @xmath99 se we need to evaluate the differential @xmath100 at the points @xmath101 for @xmath102 .",
    "+ although there is nothing wrong with this approach from the theoretical point of view , in next section we will see a numerical method to compute @xmath100 which makes the computation of @xmath103 straightforward , with needing to multiply matrices ( see remark  [ rem : varia_nperiodic ] below ) .",
    "now the question arises , how do we compute @xmath96 ?",
    "note that the flow @xmath104 is straightforward to differentiate with respect to @xmath48 , as one recovers the field @xmath105 , but we need to differentiate it with respect to the initial condition @xmath35 ! but we can do the following . applying the fundamental theorem of calculus and the definition of the flow , we can write @xmath106 if we now differentiate with respect to @xmath89 , we get @xmath107 where @xmath108 is the @xmath109 identity matrix and we write @xmath110 to emphasize that we differentiate with respect to @xmath89 . again , by applying the fundamental theorem of calculus backwards , we realize that equation   is the solution of the differential equation @xmath111 at @xmath112 .",
    "equation   is called the ( first ) variational equation . + some remarks :    if @xmath68 is a field in @xmath113 , then this equation becomes and @xmath109-dimensional differential equation .",
    "equation   is evaluated along the flow @xmath114 , which is unknown .",
    "hence , this equation needs to be solved together with the equation @xmath115 , leading to a system of dimension @xmath116 with initial condition @xmath117 .",
    "[ rem : varia_nperiodic ] if we want to compute @xmath103 , we just need to integrate the variational equations from @xmath118 to @xmath119 !",
    "write a program in matlab in order to compute a fixed point of the stroboscopic map .",
    "note that the initial sead will be taken from a zero of the melnikov function , which may have several .",
    "you will need to tune @xmath45 to guarantee that this fixed point exists .",
    "compute the eigenvalues of @xmath96 at the fixed points to tell their type .",
    "as noted in remark  [ rem : df_invertibility ] , the newton method to find fixed points ( or periodic orbits ) of the stroboscopic map will fail if that one is non - hyperbolic : that is , the associated eigenvalues of the stroboscopic map have real part equal to @xmath120 .",
    "alternatively , we can use a poincar map using a section in the state space .",
    "this method is more robust in that sense , but , as we will show below , the computation of the differential becomes slightly more tricky .",
    "let us consider the poincar map @xmath121 where @xmath122{c } \\varphi_1(t;x_0,t_0)\\\\\\varphi_2(t;x_0,t_0 ) \\end{array }   \\right ) \\label{eq : perturbed_flow_notation}\\ ] ] is the solution of the perturbed system   with initial condition @xmath35 at @xmath74 and @xmath123 is such that .",
    "it can be easily done using a newton method to solve equation  .",
    "below we show how to compute the necessary derivatives for the newton method .",
    "otherwise , it can be computed using the `` events '' functionality of matlab . ]",
    "@xmath124 for the second time , as we consider a return map in the direction that the section is left .",
    "recall that system   is non - autonomous .",
    "hence , the initial time @xmath118 matters and we have to carry it on . from now on",
    ", we will abuse notation in equation   and omit writing the first coordinate @xmath125 , as it takes the @xmath126 .    taking into account the periodicity of the non - autonomous system  , an initial condition at @xmath127 for",
    "@xmath74 of a periodic orbit of the full system will need to satisfy @xmath128{c } v_0\\\\t_0+mt \\end{array }   \\right ) \\label{eq : periodic_orbit_poinc - map}\\ ] ] for some @xmath129 .",
    "indeed , the integers @xmath34 and @xmath130 are the same as in previous sections , made explicit through the congruency equation  .",
    "here one clearly see that the role of @xmath34 is to count the `` loops '' that a periodic orbit of period @xmath39 makes around the origin .",
    "applying the newton method to the equation @xmath131{c } v_0\\\\t_0+mt \\end{array }   \\right)=\\left (   \\begin{array}[]{c } 0\\\\0 \\end{array }   \\right ) , \\label{eq : newton_equation_poinc - map}\\ ] ] and arguing as in section  [ sec : hyperbolic_po ] we get the iterative process @xmath132 where now @xmath133{cc } 1&0\\\\0&1 \\end{array }   \\right).\\ ] ] we now wonder , how do we compute @xmath134 ? let us see it for @xmath135 first .",
    "+ recalling that @xmath136 , we get @xmath137{cc } d_{v_0}\\varphi_2(t^*;0,v_0,t_0 ) & d_{t_0}\\varphi_2(t^*;0,v_0,t_0)\\\\ \\frac{\\partial}{\\partial v_0}t^ * & \\frac{\\partial}{\\partial t_0}t^*\\\\ \\end{array }   \\right).\\ ] ] note that , in the first row , we have written the total derivatives @xmath138 and @xmath139 instead of partial ones , @xmath140 and @xmath141 , because @xmath123 actually depends on @xmath142 and @xmath118 through equation  .",
    "let us compute such total derivatives .",
    "+ for the first one we get @xmath143 let us now see how to compute all the terms appearing in this equation .",
    "+ on one hand , @xmath144 where @xmath145 is the second coordinate of the field evaluated at the image of the poincar map .",
    "+ on the other one , @xmath146 is given by integrating the variational equations from @xmath118 to @xmath123 , as we are differentiating with respect an initial condition .",
    "+ what about @xmath147 ? recall that , for given @xmath142 and @xmath118 , @xmath123 ( which we somehow know how to compute ) solves equation  .",
    "therefore , assuming that @xmath148 we can use the implicit function theorem to get @xmath149 note that , condition   is satisfied , as the flow is transversal to the section @xmath27 .",
    "if it were tangent , then we would have a problem , of course !",
    "+ the denominator of the last equation is just the first coordinate of the perturbed field evaluated at the image of the poincar map .",
    "+ regarding @xmath150 , note that it is a derivative with respect to the initial time , @xmath118 .",
    "adding time as a variable , this can be computed integrating the variational equations of the system @xmath151 where now @xmath78 plays the role of time and @xmath118 becomes @xmath152 .",
    "+ proceeding similarly , the elements of the second row of @xmath153 become @xmath154 and @xmath155 is already given in equation   + the differential @xmath156 can be computed proceeding similarly as in section  [ sec : differential_po ] , mutliplying @xmath153 evaluated at the iterates @xmath157 or integrating the previous variational equations until the @xmath158-th impact with the section @xmath27 occurs .",
    "write a program in matlab to compute initial conditions for periodic orbits by performing a newton method to equation  .",
    "for that you will need to slightly modify the programs you wrote in the previous exercises ."
  ],
  "abstract_text": [
    "<S> these notes were written during the 9th and 10th sessions of the subject dynamical systems ii coursed at dtu ( denmark ) during the winter semester 2015 - 2016 . </S>",
    "<S> they aim to provide students with a theoretical and numerical background for the computation of periodic orbits using newton s method . </S>",
    "<S> we focus on periodically perturbed quasi - integrable systems ( using the forced pendulum as an example ) and hence we take advantage of the melnikov method to get first guesses . however , these well known techniques are general enough to be applied in other type of systems . </S>",
    "<S> periodic orbits are computed by solving a fixed - point equation for the stroboscopic map , which is very fast and precise for hyperbolic periodic orbits . </S>",
    "<S> however , for non - hyperbolic ones the method fails and we use the poincar map instead . in both cases </S>",
    "<S> we show how to compute the jacobian of the maps , which is necessary for the newton method , by means of variational equations and the implicit function theorem . + some exercises are proposed along the notes , whose solutions can be found in  github.com/a-granados . </S>",
    "<S> + the notes themselves do not contain any reference , although everything described here is well known in the dynamical systems community . </S>",
    "<S> a typical reference for the melnikov method for subharmonic orbits is the book  @xcite . </S>",
    "<S> more about the variational equations and their numerical applications can be found in the notes  @xcite . </S>"
  ]
}
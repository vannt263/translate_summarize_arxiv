{
  "article_text": [
    "given its success for finite - state systems , the model checking approach to verification has been extended to various models based on automata , and including features such as time , probability and infinite data structures .",
    "these models allow one to represent software systems more faithfully , by representing timing constraints , randomization , and _",
    "e.g. _ unbounded call stacks . at the same time",
    ", they often offer the possibility to consider _ quantitative _ verification questions , such as whether the best execution time meets a requirement , or whether the system is reliable with high probability .",
    "quantitative verification is notably hard for infinite - state systems , and often requires the development of techniques dedicated to each class of models .",
    "a decade ago , abdulla , ben henda and mayr introduced the concept of decisiveness for denumerable markov chains  @xcite .",
    "formally , a markov chain is decisive w.r.t .",
    "a set of states @xmath1 if runs almost - surely reach @xmath1 or a state from which @xmath1 can no longer be reached .",
    "the concept of decisiveness thus forbids some weird behaviours in denumerable markov chains , and allows one to lift most good properties from finite markov chains to denumerable ones , and therefore to adapt existing verification algorithms to infinite - state models .",
    "in particular , assuming decisiveness enables the quantitative model checking of ( repeated ) reachability properties , by providing an approximation scheme , which is guaranteed to terminate for any given precision for decisive markov chains .",
    "decisiveness also elegantly subsumes other concepts such as the existence of finite attractors , or coarseness  @xcite .",
    "decisive markov chains however are not general enough to represent stochastic real - time systems . indeed ,",
    "to faithfully model time in real - time systems , it is adequate to use dense time  @xcite , that is , timestamps of events are taken from a dense domain ( like the set of rational or of real numbers ) .",
    "this source of infinity for the state - space of the system is particularly difficult to handle : the state - space is non - denumerable ( even continuous ) , the branching in the transition system is also non - denumerable , _",
    "etc_. for those reasons , stochastic real - time systems do not fit in the framework of decisive markov chains of  @xcite .    on the other hand , standard analysis techniques for non -",
    "stochastic real - time systems also can not be easily adapted to stochastic real - time systems . traditionally , these techniques rely on the design of appropriate finite abstractions , which preserve good properties of the original model .",
    "a prominent example of such an abstraction is that of the region automaton for timed automata  @xcite .",
    "however , these abstractions most often do not preserve quantitative properties and , in the context of stochastic systems they may be too coarse already for the evaluation of the probability of properties as simple as reachability properties .    a general framework to analyse a large class of stochastic real - time systems is thus lacking .",
    "in this article , we face this issue and provide a framework to perform the analysis of general _ stochastic transition systems _ ( stss for short ) .",
    "to do so , we generalize the main concepts of  @xcite ( such as decisiveness , attractors ) , and standard notions for markov chains ( like fairness ) .",
    "stss are purely stochastic markov processes  @xcite , that is , markov chains with a continuous state - space .",
    "note that , while this journal version builds on the conference paper  @xcite , we choose here to phrase our results for time - homogeneous and markovian models . as mentioned in  @xcite ,",
    "the markovian assumption is not a severe restriction since many apparently non markovian processes can be recast to markovian models by changing the state space . in our opinion , this choice furthermore enabled the design of a richer and more elegant theory ( compared to  @xcite ) .",
    "our first contribution is to define various notions of decisiveness ( inherited from  @xcite ) , notions of fairness and of attractors in the general context of stss . to complete the semantical picture ,",
    "we explicit the relationships between these notions , in the general case of stss , and also when restricting to denumerable markov chains . decisiveness or the existence of attractors will be later exploited to analyze properties for stss .    as mentioned earlier",
    ", the analysis of real - time systems often requires the development of abstractions . as a second contribution ,",
    "we define a notion of abstraction , which makes sense for stss .",
    "concepts of soundness and completeness are naturally defined for those abstractions , and general transfer properties are given , which will be central to several verification algorithms on stss .",
    "the special case of denumerable abstractions is discussed , since it allows one to transfer more properties from the abstract system to the concrete one .",
    "our third contribution focuses on the qualitative model checking problem for various properties .",
    "in particular , we extend the results of  @xcite and show that , under some decisiveness assumptions , the almost - sure model checking of ( repeated ) reachability properties reduces to a simpler problem , namely to a reachability problem with probability @xmath2 .",
    "we advocate that this reduction simplifies the problem : in countable models , the @xmath2-reachability amounts to the non existence of a path , in the underlying non - probabilistic system ; beyond countable models , checking that a reachability property is satisfied with probability @xmath2 amounts to exhibiting a somehow regular set of executions with positive measure . beyond repeated reachability properties , we use abstractions to design algorithms for the qualitative model - checking problem of arbitrary @xmath0-regular properties , in case the sts admits an abstraction with the finite attractor property .",
    "the latter contribution is completely new compared to the original results of  @xcite and our conference paper  @xcite .",
    "it is inspired by a procedure of  @xcite for probabilistic lossy channel systems , a special class of denumerable markov chains with a finite attractor .",
    "our fourth contribution is the design of generic approximation procedures for the quantitative model - checking problem , inspired by the path enumeration algorithm of purushothoman iyer and narashima  @xcite . under some decisiveness assumptions , we prove that these approximation schemes are guaranteed to terminate . assuming the stss can be represented finitely and enjoy some smooth effectiveness properties , one derives approximation algorithms : one can approximate , up to a desired ( arbitrary ) precision , the probability of ( repeated ) reachability properties .",
    "note that without these effectiveness properties , one can not hope for algorithms , and this motivates our above formulation of `` procedures '' .",
    "further , once again via the use of an abstraction with the finite attractor property , we design an approximation algorithm for @xmath0-regular properties ; this algorithm makes use of the attractor of the abstract model to convert the quantitative analysis of an @xmath0-regular property into the quantitative verification of a reachability property in the concrete model .",
    "up to our knowledge , this approach is completely new , and provides an interesting framework for quantitative verification of stochastic systems .",
    "our last contribution consists in instantiating our framework with high - level stochastic models , stochastic timed automata ( sta ) and generalized semi - markov processes ( gsmp ) , which are two models combining dense - time and probabilities .",
    "this allows us to derive decidability and approximability results for the verification of those models .",
    "some of these results were known from the literature , _",
    "e.g. _ the ones from  @xcite , but our generic approach permits to view them in a unified framework , and to obtain them with less effort .",
    "we also derive interesting new approximability results for sta and gsmps .",
    "in particular , the approximability results derived from this paper for sta are far more general than those obtained using an _ ad - hoc _ approach in  @xcite .",
    "the paper concludes with an overview of our main results , organized as a travel guide to stss : it summarizes the relationships between all notions , and provides the reader recipes to analyze stss .",
    "the most technical proofs are postponed to the appendix .",
    "pointers are given when relevant .",
    "in this section , we define the general model of stochastic transition systems , which are somehow markov chains with a continuous state - space .",
    "this model corresponds to labelled markov processes of  @xcite with a single action ( hence removing non - determinism ) .",
    "we then define several probability measures , on infinite paths , but also on the state - space , which give different point - of - views over the behaviour of the systems .",
    "we continue by defining regular measurable events , and end up with defining deterministic muller automata , and technical material for handling properties specified by these automata .",
    "given @xmath3 a measurable space ( @xmath4 is a @xmath5-algebra over @xmath6 ) , we write @xmath7 for the set of probability distributions over @xmath3 . in the sequel ,",
    "when the context is clear , we will omit the @xmath5-algebra and simply write this set as @xmath8 .",
    "a _ stochastic transition system _ ( sts ) is a tuple @xmath9 consisting of a measurable analytic space @xmath3 , and @xmath10 $ ] such that for every fixed @xmath11 , @xmath12 is a probability measure and for each fixed @xmath13 , @xmath14 is a measurable function .",
    "function @xmath15 is the _ markov kernel _ of @xmath16 .",
    "note that it is sufficient to define @xmath12 ( for every @xmath17 ) over a subset which generates the @xmath5-algebra @xmath4 .",
    "the assumption that @xmath3 should be analytic is for the stss to have smooth properties  ( * ? ? ?",
    "* section 7.5 ) .    observe that if @xmath6 is a denumerable set and @xmath18 , then @xmath16 is a denumerable markov chain ( dmc for short ) .",
    "if @xmath6 is finite , the kernel @xmath15 then coincides with the standard probability matrix of the markov chain .",
    "we now give two examples of sts .",
    "[ example : dmcrandomwalk ] the first example is the dmc depicted in figure  [ figure : randomwalk ] .",
    "we consider here @xmath19 where    * @xmath20 , * @xmath21 , * for each @xmath22 , @xmath23 and @xmath24 with @xmath25 , and * @xmath26 .",
    "this represents a random walk over the natural numbers .",
    "= [ scale=1 ] = [ ptt , draw , circle , minimum size = 1 cm , thick ] ; = [ ptt , circle , minimum size = 1 cm , thick ] ; = [ ->,>=stealth , thick , rounded corners=1pt ] ; ( lzero ) at ( 0,0 ) @xmath2 ; ( lun ) at ( 2.2,0 ) @xmath27 ; ( ldeux ) at ( 4.4,0 ) @xmath28 ; ( lint ) at ( 6.6 , 0 ) @xmath29 ; ( lzero ) to[bend left=30 ] node[ptt , midway , above ] @xmath27 ( lun ) ; ( lun ) to[bend left=30 ] node[ptt , midway , below ] @xmath30 ( lzero ) ; ( lun ) to[bend left=30 ] node[ptt , midway , above ] @xmath31 ( ldeux ) ; ( ldeux ) to[bend left=30 ] node[ptt , midway , below ] @xmath30 ( lun ) ; ( ldeux ) to[bend left=30 ] node[ptt , midway , above ] @xmath31 ( lint ) ; ( lint ) to[bend left=30 ] node[ptt , midway , below ] @xmath30 ( ldeux ) ;    in the sequel , given a dmc @xmath32 and two states @xmath33 , we will write @xmath34 instead of @xmath35 .",
    "[ example : continuous ] we now give a continuous variant of the previous random walk which models a simple queueing system .",
    "precisely , we consider a queueing system with a single queue , a parameter @xmath36 for arrivals and @xmath37 for serving times .",
    "each state @xmath38 is equipped with a non - negative real number that corresponds to the time that has elapsed since the beginning .",
    "formally , we consider @xmath39 with @xmath40 .",
    "we equip @xmath41 with the @xmath5-algebra generated by @xmath42 where @xmath43 is the borel @xmath5-algebra on @xmath44 .",
    "then intuitively , @xmath45 describes how the length of the queue evolves with time .",
    "formally , for each @xmath46 , @xmath47    there will be more examples of sts with a continuous set of states in section  [ sec : appli ] .    in the sequel ,",
    "we fix an sts @xmath32 .",
    "we will give two semantical views on the behaviour of @xmath16 : the first one is operational , in the sense that @xmath16 generates executions , with a measure over these executions ; the second one observes how the state - space evolves over time .",
    "the first point - of - view is the standard semantics of probabilistic systems and is widely used in the model - checking community , where the temporal aspects are important . from a state , a probabilistic transition",
    "is performed according to a fixed distribution , and the system resumes from one of the successor states . among others , _",
    "@xcite , uses this semantics for the standard model of continuous - time markov chains .",
    "the second point - of - view bloomed more recently .",
    "it proposes to view probabilistic systems as transformers of probability distributions .",
    "compared to the previous point - of - view , here one is interested not in states the system can be in , but rather in how the probability mass evolves along steps .",
    "this semantics was motivated by the ability to express different properties than the previous one  @xcite .",
    "it has been considered for both discrete - time markov chains  @xcite and continuous - time models , _ e.g. _ those induced by stochastic petri nets  @xcite .",
    "these two point - of - views are two sides of the same coin , and we will use both in the following , though we are ultimately interested in properties related to the operational semantics .",
    "the objective is now to interpret @xmath16 in an operational manner , and to define a probability measure over the set of infinite paths of @xmath16 .",
    "we follow the lines of  @xcite .",
    "a _ finite ( resp .",
    "infinite ) path _ of @xmath16 is a finite ( resp .",
    "infinite ) sequence of states .",
    "we write @xmath48 for the set of infinite paths of @xmath16 . in order to get a probability measure over @xmath48",
    ", we need to equip this set with a @xmath5-algebra .",
    "we therefore define for each finite sequence of measurable sets @xmath49 the following set of infinite paths : @xmath50 this set is called a _ cylinder_.",
    "we then equip @xmath48 with the @xmath5-algebra generated by the cylinders .",
    "we write it @xmath51 .",
    "let @xmath52 be a(n initial ) probability measure over @xmath4 , that is , @xmath53 .",
    "we define a probability measure @xmath54 as follows .",
    "first we inductively define a probability measure over the cylinders . for every finite sequence of measurable subsets @xmath55",
    ", we set : @xmath56 and we initialize with @xmath57 .",
    "from now on , we will use the classical notation @xmath58 .",
    "it should be noted that the value @xmath59 is the result of @xmath60 successive integrals and can be expressed as follows : @xmath61 finally , using the classical caratheodory s theorem , @xmath62 can be extended in a unique way to the @xmath5-algebra @xmath51 .",
    "lemmaprobpaths[lem : probpaths ] @xmath63 defines a probability measure over @xmath64 .",
    "the proof of lemma  [ lem : probpaths ] is classical and we omit it here .",
    "the interested reader may _",
    "e.g. _ refer to the proof of ( * ? ? ?",
    "* proposition  3.2 ) , which can easily be adapted to our context .",
    "observe that if the initial distribution is a dirac distribution @xmath65 over a single state @xmath11 , then we have that @xmath66 it follows that for every @xmath67 , we can write @xmath68 and thus for every @xmath69 , @xmath70    remember that given two probability distributions @xmath52 and @xmath37 over some probability space @xmath3 , @xmath52 and @xmath37 are _ equivalent _ if for each @xmath71 , @xmath72 .",
    "the proof of the following lemma is postponed to the technical appendix ( page  ) .",
    "lemmaprobpathsequiv [ lemma : equiv ] let @xmath52 and @xmath37 be two probability measures over @xmath3 .",
    "if @xmath52 and @xmath37 are equivalent , then @xmath63 and @xmath73 are also equivalent .",
    "one can also interpret the dynamics of @xmath16 as a transformer of probability measures over @xmath3 .",
    "for @xmath52 a probability measure over @xmath4 , its transformation through @xmath16 can be defined as the measure @xmath74 defined for every @xmath75 by : @xmath76 it can be shown that @xmath74 is also a probability measure over @xmath3 .",
    "this interpretation offers a dual view on the sts @xmath16 .",
    "indeed , roughly speaking , @xmath77 is the probability of being in @xmath78 after one step , when @xmath52 is the initial distribution on @xmath16 . given a distribution @xmath67 and given @xmath71 such that @xmath79 , we write @xmath80 for the conditional probability of @xmath52 given @xmath78 , that is for each @xmath81 , @xmath82 .",
    "it should be observed that @xmath83 . there is a strong relation between the transformer @xmath84 and the probability measure @xmath85 over paths defined previously , which we formalize below :    lemmalemmaintegration [ lemma : integration ] let @xmath67 be an initial distribution and let @xmath86 be a sequence of measurable sets .",
    "write @xmath87 , the conditional probability of @xmath52 given @xmath88 , and for every @xmath89 , write @xmath90 . then , for every @xmath91 : @xmath92    the proof of this result is postponed to the technical appendix ( page  ) .    from this result",
    ", we can express the probability to reach @xmath78 in @xmath60 steps from the initial distribution @xmath52 : @xmath93      to define properties on the sts @xmath16 , we use -like notations , that will be interpreted as measurable subsets of @xmath48 .",
    "let @xmath94 be the set of formulas defined by the following grammar : @xmath95 \\varphi_2 \\mid \\varphi_1 \\vee \\varphi_2 \\mid \\varphi_1 \\wedge \\varphi_2 \\mid \\neg \\varphi \\enspace,\\ ] ] where @xmath96 , @xmath97 is a comparison operator and @xmath98 is an integer . given @xmath99 we write @xmath100 for each @xmath101 .",
    "then the satisfaction relation of paths formulas is given as follows : @xmath102 \\varphi_2 \\ & { } &    \\leftrightarrow \\ & { } & \\exists i\\ge 0 , \\",
    "i \\bowtie p,\\ \\text{s.t.}\\    \\rho_{\\ge i}\\models \\varphi_2 \\text { and }    \\forall 0\\leq j < i , \\",
    "\\rho_{\\ge j}\\models \\varphi_1\\notag\\\\    { } & \\rho\\models\\varphi_1\\vee\\varphi_2 \\ & { } & \\leftrightarrow \\ & { } & \\rho\\models\\varphi_1 \\text { or } \\rho\\models\\varphi_2\\notag\\\\    { } & \\rho\\models\\varphi_1\\wedge\\varphi_2 \\ & { } & \\leftrightarrow \\ & { } & \\rho\\models\\varphi_1 \\text { and } \\rho\\models\\varphi_2\\notag\\\\    { } & \\rho\\models\\neg\\varphi \\ & { } & \\leftrightarrow \\ & { } &    \\rho\\nvdash\\varphi . \\notag\\end{aligned}\\ ] ] we write @xmath103 for the set of infinite paths @xmath104 in @xmath105 such that @xmath106 . it is standard to show that the event @xmath103 is a measurable subset of @xmath107 ( see _ e.g. _",
    "in particular , for every initial probability measure @xmath52 , @xmath108 is well - defined . in the sequel , for simplicity",
    ", we often write @xmath109 instead of @xmath108 .    we will also use classical notations like @xmath110 ; @xmath111 ; @xmath112 ; @xmath113 ; @xmath114 ; @xmath115 .      to ease the expression of rich properties over stss ,",
    "we extend the model with a labelling with atomic propositions .    a _ labelled sts _ ( lsts for short ) is a tuple @xmath116 , where @xmath117 is an sts , @xmath118 is a finite set of atomic propositions , and @xmath119 is a measurable labelling function .    measures and other notions are extended in a straightforward way from stss to lstss .",
    "we fix a finite set @xmath118 of atomic propositions and an lsts @xmath120 .",
    "a property over @xmath118 is a subset @xmath121 of @xmath122 .",
    "an infinite path @xmath123 of @xmath16 satisfies the property @xmath121 whenever @xmath124 , written @xmath125 .",
    "@xmath0-regularity is a standard notion in computer science to characterise simple sets of infinite behaviours , and typical @xmath0-regular properties are bchi and muller properties . in order to express such properties ,",
    "we introduce a new notation for the set of atomic propositions that are true infinitely often along a sequence of labels : for @xmath126 , we define @xmath127 .",
    "we extend this notation to paths in a natural way : if @xmath128 , writing @xmath129 , we define ( with a slight abuse of notation ) @xmath130 .",
    "bchi property _",
    "@xmath121 over @xmath118 can be specified by a subset of atomic propositions @xmath131 as @xmath132 .",
    "muller property _ over @xmath118 is a property @xmath121 such that there exists @xmath133 with @xmath134 .",
    "[ remark : dmames ] it should be noted that the set of infinite paths satisfying bchi or muller properties can be expressed using events as in section  [ subsec : events ] .",
    "indeed , for @xmath135 we write @xmath136 and given @xmath137 , @xmath138 .",
    "then ,    * the set of paths satisfying the bchi property with acceptance condition @xmath1 is @xmath139 * the set of paths satisfying the muller property with acceptance condition @xmath140 is @xmath141    it is well known that automata equipped with bchi or muller acceptance conditions capture all @xmath0-regular properties , and this also holds for deterministic muller automata .    a _ deterministic muller automaton _ ( dma ) over @xmath118 is a tuple @xmath142 where :    * @xmath143 is a finite set of locations , and @xmath144 is the initial location ; * @xmath145 is a finite set of edges ; * @xmath146 is a muller condition over @xmath143 ;    and such that    * @xmath147 is deterministic : for all pair of edges @xmath148 and @xmath149 in @xmath150 , @xmath151 ; * @xmath147 is complete : for every @xmath152 , for every @xmath153 , there exists @xmath154 .",
    "a deterministic muller automaton @xmath147 naturally gives rise to a property @xmath155 defined by the language ( over @xmath156 ) accepted by @xmath147 .",
    "its semantics over infinite paths of @xmath16 is derived from that of property @xmath157 : if @xmath158 , we write @xmath159 whenever @xmath160 .",
    "expanding remark  [ remark : dmames ] , one derives the standard fact that the set @xmath161 \\stackrel{\\text{def}}{= } \\{\\rho \\in \\paths(\\calt ) \\mid \\rho \\models \\calm\\}$ ] is measurable , and we write @xmath162 for @xmath163)$ ] .",
    "it is well known  @xcite and ( * ? ? ?",
    "* chapter  3 ) that for any formula @xmath164 ( the syntax given in the previous subsection , where we replace sets @xmath165 by inverse images by @xmath166 of atomic propositions from @xmath118 ) , there is a deterministic muller automaton @xmath167 that characterises @xmath164 , that is : for every run @xmath104 , @xmath106 iff @xmath168 .",
    "[ [ product - sts . ] ] product sts .",
    "+ + + + + + + + + + + +    to measure the probability of properties specified by a dma @xmath169 , it is convenient to build a new sts consisting of the product of @xmath16 with @xmath147 . to this aim , we consider the discrete @xmath5-algebra @xmath170 on the finite set of locations @xmath143 of @xmath147 .",
    "the product @xmath171 can then be equipped with the product @xmath5-algebra @xmath172 defined as the smallest @xmath5-algebra containing all rectangles , that is , all sets of the form @xmath173 with @xmath174 and @xmath175 . then",
    ", the product @xmath5-algebra @xmath176 coincides with @xmath177 ( see the proof in the appendix , page  ) .[product - sigma - algebra ] note that in the sequel , we will sometimes write @xmath178 instead of @xmath179 .",
    "we now define the product of @xmath16 with @xmath147 as follows .",
    "given @xmath120 an lsts and @xmath180 a dma over @xmath118 , we define the product of @xmath16 with @xmath147 as the lsts @xmath181 such that :    * @xmath182 ; * @xmath183 is the product @xmath5-algebra @xmath172 ; * @xmath184 * @xmath185 ; * @xmath186 .",
    "we consider the random walk over @xmath187 of example  [ example : dmcrandomwalk ] .",
    "we assume that it is equipped with the simple set of atomic propositions @xmath188 and we assume that each state of the sts is labelled with @xmath189 .",
    "let @xmath147 be the dma depicted on the left - hand side of figure  [ figure : mullerautomaton ] .",
    "the winning condition is given by @xmath190 .",
    "the product @xmath191 is then depicted on the right - hand side of figure  [ figure : mullerautomaton ] .",
    "it should be noted that we there assume that the system starts at @xmath192 however , there should be similar chains starting in @xmath193 for each @xmath194 .",
    "note also that we did not specify the labels on the states : according to the definition each state is labelled with its current position in @xmath147 .",
    "= [ scale=1 ] = [ ptt , draw , circle , minimum size = 0.8 cm ] ; = [ ptt , draw , rectangle , minimum height = 0.7 cm , minimum width = 0.9 cm , rounded corners = 3pt ] ; = [ ptt , rectangle , minimum height = 0.7 cm , minimum width = 0.9 cm , rounded corners = 3pt ] ; = [ ptt , circle , minimum size = 1 cm ] ; = [ ->,>=stealth , rounded corners=1pt ] ; ( qzero ) at ( 0,0 ) @xmath195 ; ( qun ) at ( 1.5,0 ) @xmath196 ; ( qdeux ) at ( 3,0 ) @xmath197 ; ( qzero )  ( qun ) node[midway , above ] @xmath198 ; ( qun ) to[bend left=30 ] node[midway , above ] @xmath198 ( qdeux ) ; ( qdeux ) to[bend left=30 ] node[midway , below ] @xmath198 ( qun ) ; ( -1,0 )  ( qzero ) ;    ( lzero ) at ( 4.5,1 ) @xmath192 ; ( lpzero ) at ( 4.5 , -1 ) @xmath199 ; ( lun ) at ( 6.5 , 0 ) @xmath200 ; ( ldeux ) at ( 8.5 , 0 ) @xmath201 ; ( ltrois ) at ( 10.5 , 0 ) @xmath202 ; ( linv ) at ( 12.5 , 0 ) @xmath29 ;    ( lzero )  ( lun ) node[midway , above ] @xmath27 ; ( lun ) to[bend left=30 ] node[midway , below ] @xmath30 ( lpzero ) ; ( lun ) to[bend left=30 ] node[midway , above ] @xmath31 ( ldeux ) ; ( lpzero ) to[bend left=30 ] node[midway , above ] @xmath27 ( lun ) ; ( ldeux ) to[bend left=30 ] node[midway , below ] @xmath30 ( lun ) ; ( ldeux ) to[bend left=30 ] node[midway , above ] @xmath31 ( ltrois ) ; ( ltrois ) to[bend left=30 ] node[midway , below ] @xmath30 ( ldeux ) ; ( ltrois ) to[bend left=30 ] node[midway , above ] @xmath31 ( linv ) ; ( linv ) to[bend left=30 ] node[midway , below ] @xmath30 ( ltrois ) ;    we define on @xmath203 a muller condition which is inherited from the one of @xmath147 via the new labelling function @xmath204 : a run @xmath104 satisfies the muller condition @xmath205 whenever @xmath206 satisfies the muller condition @xmath140 .",
    "we thus later simply use @xmath140 instead of @xmath205 .",
    "we now explain how initial distributions for @xmath16 are lifted to the product @xmath203 .",
    "the idea is simple : the @xmath16-component is inherited from @xmath16 , and the @xmath147-component is a dirac measure over @xmath195 , the initial state of @xmath147 . in other words ,",
    "when an initial distribution @xmath53 is fixed for @xmath16 , the initial distribution of @xmath203 will be @xmath207 .",
    "we show that this allows to properly compute the probability of a property described by a dma , with the following correspondence .",
    "propositionproduit let @xmath53 be an initial distribution for @xmath16 , and @xmath208 be a dma . then : @xmath209 ) = \\prob_{\\mu \\times      \\delta_{q_0}}^{\\calt \\ltimes \\calm}(\\{\\rho \\in \\paths(\\calt    \\ltimes \\calm ) \\mid \\rho \\models \\calf\\})\\enspace.\\ ] ]    the formal proof of this statement is given in the appendix , page  .",
    "in  @xcite , abdulla et al . introduced the elegant concept of decisive markov chain .",
    "intuitively , decisiveness allows one to lift the good properties of finite markov chains to infinite ( but denumerable ) markov chains .",
    "we explain here how to extend and refine this concept and some related concepts to general stss , and we establish relationships between these properties .",
    "decisiveness has been defined in  @xcite as a desirable property of denumerable markov chains , since it implies that they behave essentially like finite markov chains . for @xmath96 a measurable set , we define its _ avoid - set _ @xmath210 .",
    "it corresponds to the set of states from which the system will always avoid the set @xmath165 with probability @xmath27 .",
    "the set @xmath211 enjoys the following properties , that obviously hold also in the context of denumerable markov chains , but require proofs in our general context of stss ( those proofs are postponed to the technical appendix , page  ) .",
    "lemmabtildemes [ lem : btilde][lemma : btildecomplementaire ] [ lemma : btildeequivfgf ] given @xmath81 , it holds that :    * @xmath211 belongs to the @xmath5-algebra @xmath4 ; * for every @xmath212 , @xmath213 ; * for every @xmath53 , if @xmath214 , then @xmath215 ; * for every @xmath67 , @xmath216 ; * for every @xmath67 , @xmath217 .",
    "let us comment on the third and fourth properties stated in this lemma .",
    "the third item indicates that if we start from outside @xmath211 , then we will always have a positive probability to hit @xmath165 .",
    "the fourth property says that @xmath211 is some kind of sink : once we hit @xmath211 , we can not escape .",
    "the other properties are rather straightforward to understand ( even though proving the first property requires some technical developments ) .",
    "we are now ready to define different decisiveness concepts .",
    "two stem from  @xcite ( though no initial distribution was fixed ) while the third one was identified in  @xcite as a useful alternative .",
    "let @xmath52 be an initial probability distribution ( @xmath218 ) . then :    * @xmath16 is said _ decisive w.r.t .",
    "@xmath165 from @xmath52 _ whenever @xmath219 ; we then write that @xmath16 is @xmath220 . *",
    "@xmath16 is said _ strongly decisive w.r.t .",
    "@xmath165 from @xmath52 _ whenever @xmath221 ; we then write that @xmath16 is @xmath222 . *",
    "@xmath16 is said _ persistently decisive w.r.t .",
    "@xmath165 from @xmath52 _ whenever for every @xmath223 , @xmath224 b \\vee \\f[\\ge p ] \\btilde ) = 1 $ ] ; we then write that @xmath16 is @xmath225 .    furthermore : @xmath16 is said ( strongly , persistently ) decisive w.r.t .",
    "@xmath165 whenever it is ( strongly , persistently ) decisive w.r.t .",
    "@xmath165 from every initial distribution @xmath52 ; we then write that @xmath16 is @xmath226 ( resp .",
    "@xmath227 , @xmath228 ) .",
    "also , given @xmath229 , we say that @xmath16 is ( strongly , persistently ) decisive w.r.t .",
    "@xmath230 from @xmath52 if it is @xmath231 ( @xmath232 , @xmath225 ) for each @xmath233 .",
    "we write @xmath16 is @xmath234 ( @xmath235 , @xmath236 ) .",
    "we say that that @xmath16 is ( strongly , persistently ) decisive w.r.t .",
    "@xmath230 if it is @xmath226 ( @xmath227 , @xmath228 ) for each @xmath233 .",
    "we write @xmath16 is @xmath237 ( @xmath238 , @xmath239 ) .",
    "intuitively , the ( simple ) decisiveness property says that , almost - surely , either @xmath165 will eventually be visited , or states from which @xmath165 can no more be reached will eventually be visited .",
    "it denotes a dichotomy between the behaviours of the sts @xmath16 : there are those behaviours that visit @xmath165 , and those that do not visit @xmath165 , but then visit @xmath211 ; other behaviours have probability @xmath2 to occur . strong decisiveness imposes a similar dichotomy , but between behaviours that visit @xmath165 infinitely often and behaviours that visit @xmath211 .",
    "persistent decisiveness refines simple decisiveness , but by looking at an arbitrary horizon .",
    "[ example : btildedeci ] let us consider again the sts @xmath240 of example  [ example : dmcrandomwalk ] , representing a discrete - time random walk . since the chain is strongly connected , for each @xmath241 , @xmath242 .",
    "let us assume that @xmath243 and that @xmath244 , the dirac distribution over state @xmath2 .",
    "then it can be shown that for each set of states @xmath165 , @xmath245 and thus , @xmath240 is @xmath246 .",
    "however if @xmath247 and @xmath248 then @xmath249 ; but since @xmath242 , we derive that @xmath240 is not @xmath250 . consider now for each @xmath101 , @xmath251 .",
    "since @xmath243 , classical results on random walks imply that for each @xmath252 , @xmath253 . and since @xmath254",
    ", we obtain that @xmath240 is not @xmath255 .",
    "consider now the sts @xmath256 of example  [ example : continuous ] .",
    "assume that @xmath257 and that @xmath258 and fix some @xmath259 .",
    "we consider @xmath260",
    ". then one can compute @xmath261 .",
    "note that here , as time almost - surely always progresses , @xmath262 .",
    "it thus follows that @xmath256 is @xmath246 and @xmath232 .",
    "the notion of finite attractor has been used in several contexts like probabilistic lossy channel systems ( see _ e.g. _",
    "@xcite ) and abstracted in  @xcite in the context of denumerable markov chains .",
    "a finite attractor is a finite set of states which is reached almost - surely from every state of the system .",
    "we lift this definition to our context , obviously relaxing the finiteness assumption , since it is very unlikely that systems with a continuous state - space will have finite attractors .",
    "since the whole set of states is a trivial attractor , this general definition will prove useful once we are able to define attractors with some finiteness property , which will be done through _ abstractions _ in section  [ sec : abstractions ] .",
    "let @xmath53 be an initial distribution .",
    "@xmath81 is a _",
    "@xmath52-attractor for @xmath16 _ if @xmath263 .",
    "further , @xmath165 is an _",
    "attractor for @xmath16 _ if it is a @xmath52-attractor for every @xmath67 .",
    "consider the random walk @xmath240 of example  [ example : dmcrandomwalk ] and assume again that @xmath243 .",
    "for @xmath264 , it can be shown , as stated before , that @xmath165 is a @xmath52-attractor for @xmath244 .",
    "however , for any distribution @xmath265 over naturals greater than @xmath266 , @xmath267 and thus @xmath165 is not a @xmath268-attractor .",
    "on the other hand , if we assume @xmath269 , it is a well - known property of random walks that @xmath270 is reached almost - surely from every state , hence we can infer that any bounded subset @xmath78 of @xmath187 is an attractor ( for every initial distribution ) .",
    "attractors are very strong properties of stss , and even in our general context , the following strong property is satisfied .",
    "lemmaattractorgf [ lemma : attractorgf ] if @xmath165 is an attractor for @xmath16 then for every initial distribution @xmath271 , @xmath272    let @xmath165 be an attractor for @xmath16 , i.e. for each initial distribution @xmath67 , @xmath273 . towards a contradiction , assume that there is @xmath67 such that @xmath274 .",
    "then , @xmath275 .",
    "now remember that from the definitions , we have that @xmath276 it follows that there is @xmath277 such that @xmath278 from lemma  [ lemma : integration ] , if we write @xmath279 and @xmath280 for each @xmath281 , we get that for each @xmath282 , @xmath283 since @xmath284 and for each @xmath285 , @xmath286 .",
    "it can be seen that in this case , for each @xmath287 , @xmath288 .",
    "we write @xmath289 .",
    "we thus get that @xmath290 which contradicts the fact that @xmath165 is an attractor , hence a @xmath37-attractor , for @xmath16 .",
    "fairness is a standard notion in probabilistic systems  @xcite , saying that something which is allowed infinitely often should happen infinitely often almost - surely .",
    "this can for instance be instantiated in denumerable markov chains as follows : if a state @xmath291 is visited infinitely often , and the probability to move from @xmath291 to @xmath292 is positive , then , almost - surely , infinitely often the state @xmath292 is visited .",
    "it is well - known that not all markov chains are fair , but finitely - branching markov chains are fair .",
    "fairness can not be lifted directly to continuous state - space stss ( since for two states @xmath291 and @xmath292 , the probability to move from @xmath291 to @xmath292 is likely to be @xmath2 ) .",
    "a more careful definition of this notion must be provided for general stss .    for @xmath81",
    ", we define @xmath293 , as the set of measurable sets @xmath294 `` from which '' @xmath165 can be reached with positive probability .",
    "note that , ideally we would like to define the maximal set that allows one to reach @xmath165 , but the union of all such sets may not be measurable in our general context .",
    "let @xmath53 be some initial distribution , and @xmath96 .",
    "the sts @xmath16 is _",
    "fair w.r.t .",
    "@xmath165 from @xmath52 _ , written @xmath16 is @xmath295 , if for every @xmath296 , @xmath297 implies @xmath298 we then write that @xmath16 is @xmath295 .    as for decisiveness",
    ", we extend this definition to sets @xmath299 , and use similar notations when we relax the fixed initial measure @xmath52 .",
    "finally , we say that @xmath16 is _ strongly fair _ whenever it is fair wr.t .",
    "@xmath165 from @xmath52 for every @xmath96 and every @xmath53 .",
    "[ example : fairness ] consider again the random walk of example  [ example : dmcrandomwalk ] .",
    "@xmath240 is strongly fair by observing that there is a positive lower bound on the non - zero probabilities to reach any set of states .",
    "formally there exists @xmath300 such that for each @xmath301 , for each @xmath302 and for each @xmath303 , @xmath304 .",
    "it suffices to choose @xmath305 .",
    "[ counterexample : fairness ] consider now the dmc @xmath306 depicted in figure  [ figure : fairness ] .",
    "consider @xmath307 , @xmath308 and @xmath309 , @xmath310 .",
    "it holds that @xmath311 , however , @xmath312 and thus @xmath306 is not @xmath295 .",
    "= [ scale=1 ] = [ ptt , draw , circle , minimum size = .9 cm ] ; = [ ptt , circle , minimum size = .9 cm ] ; = [ ->,>=stealth , rounded corners=1pt ] ;    ( a1 ) at ( 0,-4 ) @xmath313 ; ( a2 ) at ( 2 , -4 ) @xmath314 ; ( a3 ) at ( 4 , -4 ) @xmath315 ; ( a4 ) at ( 6 , -4 ) @xmath316 ; ( b ) at ( 0 , -1.5 ) @xmath317 ; ( a1 )  ( a2 ) node[midway , below ] @xmath318 ; ( a2 )  ( a3 ) node[midway , below ] @xmath319 ; ( a3 )  ( a4 ) node[midway , below ] @xmath320 ; ( a4 )  ( 8 , -4 ) ; ( a1 )  ( b ) node[midway , right ] @xmath321 ; ( a2.150 )  ( b.300 ) node[midway , right ] @xmath322 ; ( a3.120 )  ( b.330 ) node[midway , right ] @xmath323 ; ( a4.north )  ( b.east ) ; ( b ) to[bend right=45 ] node[midway , left ] @xmath27 ( a1 ) ;      in this section , we compare all the notions , and give the precise links between all these notions .",
    "we first analyze the general case , and reinforce the results in the case of dmcs .",
    "we can establish the following links between the notions of decisiveness and fairness .",
    "the first result is straightforward .    for each @xmath324 and for each @xmath67",
    ", it holds that @xmath237 ( resp .",
    "@xmath238 , @xmath239 ) implies @xmath234 ( resp .",
    "@xmath235 , @xmath236 ) , and @xmath325 implies @xmath326 .",
    "we also get straightforwardly from the definitions , the following implication .",
    "[ lemma : strdec ] for each @xmath324 and for each @xmath67 , it holds that @xmath235 implies @xmath234 , and @xmath236 implies @xmath234 .",
    "it then turns out that strong decisiveness and persistent decisiveness are two equivalent notions .",
    "[ lemma : equivstrpers ] for each @xmath324 and for each @xmath67 , it holds that @xmath235 is equivalent to @xmath236 .",
    "fix @xmath229 and @xmath67 .",
    "fix @xmath233 and assume that @xmath16 is @xmath327 , i.e. for each @xmath328 , @xmath329 .",
    "we want to show that @xmath16 is @xmath222 , i.e. that @xmath330 , or equivalently that @xmath331 .",
    "we have that : @xmath332 hence we get that @xmath333 and thus @xmath16 is @xmath232 and @xmath235 as it holds true for each @xmath233 .",
    "now fix again @xmath233 and assume that @xmath16 is @xmath222 , i.e. @xmath334 . from lemma  [ lemma : btildeequivfgf ] ( fourth item ) , we get that @xmath335 and it is then straightforward to establish that for each @xmath328 , @xmath336 . we hence deduce that @xmath16 is @xmath327 and thus @xmath236 as it holds true for each @xmath233 . this concludes the proof .",
    "now , we have the following equivalences between the decisiveness notions .    for each @xmath324",
    ", it holds that all three notions @xmath239 , @xmath238 and @xmath237 are equivalent .",
    "fix @xmath229 . from lemmas  [ lemma :",
    "strdec ] and  [ lemma : equivstrpers ] , it remains to prove that @xmath337 or @xmath338 .",
    "we prove the last one .",
    "we pick @xmath233 and assume that @xmath16 is @xmath226 , i.e. for each @xmath67 , @xmath339 .",
    "pick @xmath53 and @xmath340 .",
    "we get that @xmath341 b^c \\wedge \\g[\\ge i ]   ( \\btilde)^c ) & \\le & \\prob_{\\mu_i}^{\\calt } ( \\g(b^c \\cap ( \\btilde)^c ) ) \\\\   & & \\text{where $ \\mu_i = \\omega_{\\calt}^{(i)}(\\mu)$ , from lemma~\\ref{lemma : integration } } \\\\   & & \\text{and from a similar argument as in the proof of lemma~\\ref{lemma : attractorgf } } \\\\   & \\le & 0\\ \\text{since $ \\calt$ is $ \\d(b)$.}\\end{aligned}\\ ] ] hence for each @xmath101 , @xmath342 and since it holds true for each @xmath67 and each @xmath233 , we get that @xmath16 is @xmath239 .    finally , we show the following links between fairness and decisiveness .    for each @xmath324 and for each @xmath67 , it holds that @xmath235 implies @xmath326 , and @xmath238 implies @xmath325 .",
    "fix @xmath229 and @xmath67 .",
    "assume that @xmath16 is strongly decisive w.r.t .",
    "@xmath230 from @xmath52 , that is for each @xmath233 , @xmath334 .",
    "we want to prove that for each @xmath233 , for each @xmath343 with @xmath344 , we have that @xmath345 .    fix @xmath233 and @xmath343 such that @xmath344 .",
    "we can notice that @xmath346 indeed , towards a contradiction , assume that @xmath347 .",
    "observe that @xmath348 then , there are @xmath349 such that @xmath350 it follows , from lemma  [ lemma : integration ] like seen previously , that there is @xmath351 ( @xmath352 ) , such that @xmath353 and since @xmath343 , we get that @xmath354 hence , @xmath355 and we can apply lemma  [ lem : btilde ] ( second item ) to obtain a contradiction .",
    "hence , equation   holds .",
    "we then write : @xmath356 which proves that @xmath357 .",
    "then , the implication @xmath358 is immediate since the previous implication holds for any initial distribution @xmath67 .",
    "we can summarize the previous implications as follows :    for each @xmath324 and for each @xmath67 , it holds that    ( decisive ) @xmath16 is @xmath234 ; ( strongly_decisive ) [ right = of decisive ] @xmath16 is @xmath235 ; ( persistently_decisive ) [ right = of strongly_decisive ] @xmath16 is @xmath236 ; ( fair ) [ right = of persistently_decisive ] @xmath16 is @xmath326 ;    ( decisive ) ",
    "( strongly_decisive ) ; ( strongly_decisive )  ( persistently_decisive ) ; ( persistently_decisive )  ( fair ) ;    ( decisive ) @xmath16 is @xmath237 ; ( strongly_decisive ) [ right = of decisive ] @xmath16 is @xmath238 ; ( persistently_decisive ) [ right = of strongly_decisive ] @xmath16 is @xmath239 ; ( fair ) [ right = of persistently_decisive ] @xmath16 is @xmath325 ;    ( decisive )  ( strongly_decisive ) ; ( strongly_decisive )  ( persistently_decisive ) ; ( persistently_decisive )  ( fair ) ;    the three missing implications in the above proposition do actually not hold , as witnessed by the following example .",
    "we also illustrate the fact that @xmath234 and @xmath326 are incomparable .",
    "consider the random walk @xmath240 of example  [ example : dmcrandomwalk ] .",
    "we have shown in example  [ example : fairness ] that @xmath240 is strongly fair .",
    "now let us assume that @xmath243 and let us consider the initial distribution @xmath244 , the dirac distribution over @xmath2 .",
    "then from example  [ example : btildedeci ] , @xmath240 is decisive from @xmath52 w.r.t .",
    "any set of states .",
    "again in this example , we have observed that it is not strongly decisive w.r.t .",
    "any set of the form @xmath359 with @xmath360 .",
    "this shows that we do not have @xmath361 , nor @xmath362 and @xmath363 . and since @xmath240 is not decisive from @xmath364 w.r.t .",
    "@xmath365 , this also proves that @xmath326 does not imply @xmath234 .    in order to illustrate that @xmath234 does not imply @xmath326 in general , we consider the denumerable markov chain @xmath306 of example  [ counterexample : fairness ] .",
    "we consider @xmath366 and @xmath308 .",
    "it is easily observed that @xmath306 is @xmath220 as we start in @xmath317 with probability @xmath27 , but we have shown that @xmath306 is not @xmath295 .",
    "if @xmath16 is a dmc , i.e. if @xmath6 is at most denumerable and @xmath18 , we can complete the picture using the following result of  @xcite .",
    "[ lemma : dmcfiniteattractordecisive ] if @xmath16 is a dmc that has a finite attractor , then @xmath16 is decisive w.r.t .",
    "any set of states @xmath301 .",
    "we can sum up the previous implications as follows :    ( attractor ) @xmath367@xmath368 ;    ( decisive ) [ right = of attractor ] @xmath16 is @xmath369 ;    ( strongly_decisive ) [ right = of decisive ] @xmath16 is @xmath370 ; ( persistently_decisive ) [ right = of strongly_decisive ] @xmath16 is @xmath371 ;    ( fair ) [ below = of strongly_decisive , yshift=.3 cm ] @xmath16 is strongly fair ;    ( attractor )  ( decisive ) ; ( decisive ) ",
    "( strongly_decisive ) ; ( strongly_decisive )  ( persistently_decisive ) ; ( strongly_decisive )  ( fair ) ;",
    "while decisiveness is well - defined for general stss , proving that a given sts @xmath16 is decisive might be technical in general .",
    "a standard approach in model - checking to avoid such difficulties is to abstract the system into a simpler one , that can be analyzed and provides guarantees on the concrete system .",
    "we thus propose a notion of abstraction , which will help proving properties of general stss . also , through abstractions , we will be able to characterize meaningful attractors .",
    "let @xmath372 and @xmath373 be two stss .",
    "let @xmath374 be a measurable function .",
    "a set @xmath375 is said _",
    "@xmath376-closed _ whenever @xmath377 : for every @xmath378 , if @xmath379 and @xmath380 , then @xmath381 . following  @xcite",
    ", we define the pushforward of @xmath376 as @xmath382 by @xmath383 for every @xmath384 and for every @xmath385 .",
    "the role of the pushforward @xmath386 is to transfer the measures from @xmath387 to @xmath388 .",
    "@xmath256 is an _",
    "@xmath376-abstraction _ of @xmath240 if @xmath389    from the definitions of @xmath390 , @xmath386 and equivalent measures , the notion of @xmath376-abstraction equivalently requires that for every @xmath391 and every @xmath392 , @xmath393 intuitively , the two stss have the same `` qualitative '' steps .",
    "the notion of @xmath376-abstraction naturally extends to labelled stss .",
    "@xmath394 is an @xmath376-abstraction of @xmath395 whenever :    * @xmath396 is an @xmath376-abstraction of @xmath397 ; * @xmath398 ; * for every @xmath399 , @xmath400 , @xmath401 ; * for every @xmath402 , @xmath403 .",
    "the two last conditions imply that for each @xmath404 , @xmath405 is @xmath376-closed .",
    "moreover , for each @xmath404 , @xmath406 .",
    "we now establish several technical results , which explicit how stss are related through an @xmath376-abstraction .",
    "the relationship is only qualitative , in the sense that it only relates positive reachability probabilities , but does not relate almost - sure or lower - bounded probabilities .",
    "lemmapushforwarddelta [ lemma : pushforwarddelta ] let @xmath407 be a measurable function .",
    "then for every @xmath408 and every @xmath409 , @xmath410 .",
    "lemmaiterative [ lemma : iterative ] assume that @xmath256 is an @xmath376-abstraction of @xmath240 .",
    "then , for every @xmath411 , for every @xmath412 , @xmath413 is equivalent to @xmath414 .",
    "in other words , the above lemma states that for each @xmath392 and for each @xmath415 , @xmath416 this can even be generalized to cylinders :    lemmaequiv [ coro : equiv ] assume that @xmath256 is an @xmath376-abstraction of @xmath240 .",
    "then for every @xmath384 , for every @xmath417 , @xmath418    as an immediate consequence , the positivity of properties with bounded witnesses are preserved through @xmath376-abstractions :    [ coro : until ] assume that @xmath256 is an @xmath376-abstraction of @xmath240 . then for every @xmath384 , for every @xmath419 : @xmath420    note that this however does not apply to liveness properties , such as @xmath421 with @xmath422 . to ensure that these more involved properties are preserved via abstraction",
    ", we will strengthen the assumptions on the abstraction and on the stss .",
    "we assume @xmath256 is an @xmath376-abstraction of @xmath240 .",
    "let @xmath391 .",
    "the @xmath376-abstraction @xmath256 is _ @xmath52-sound _ whenever for every @xmath423 : @xmath424 @xmath256 is a",
    "@xmath376-abstraction of @xmath240 if it is @xmath52-sound for every @xmath384 .",
    "fix @xmath391 .",
    "the @xmath376-abstraction @xmath256 is _ @xmath52-complete _",
    "whenever for every @xmath423 , @xmath425 @xmath256 is a _",
    "complete _ @xmath376-abstraction of @xmath240 if it is @xmath52-complete for every @xmath384 .",
    "sound and complete abstractions will guarantee that , up to @xmath376 , the same properties are satisfied almost - surely in @xmath240 and @xmath256 ( provided some properties are satisfied by @xmath240 and @xmath256 ) .",
    "[ example : abstr ] consider again the stss @xmath240 with parameter @xmath25 and @xmath256 with parameters @xmath36 and @xmath426 of examples  [ example : dmcrandomwalk ] and  [ example : continuous ] .",
    "let @xmath427 be the mapping defined as follows : for every @xmath428 and every @xmath429 , @xmath430 .",
    "it can be shown that @xmath240 is an @xmath376-abstraction of @xmath256 . moreover , @xmath240 is sound and complete whenever @xmath431 .",
    "when @xmath256 is a dmc , soundness and completeness have a simpler characterization , which will be useful in the proofs .",
    "lemmadmc [ lem : dmc ] assume @xmath256 is a dmc .",
    "then :    * @xmath256 is an @xmath376-abstraction of @xmath240 iff for every @xmath432 , @xmath433 * @xmath256 is sound iff for every @xmath434 and every @xmath435 , @xmath436 * @xmath256 is complete iff for every @xmath434 and every @xmath435 , @xmath437    the proof of lemma  [ lem : dmc ] is postponed to the appendix , page  .",
    "in this section , we explain how and under which conditions one can transfer interesting decisiveness , attractor and fairness properties of stss through abstractions .",
    "[ thm : mudecisiveabstr ] if @xmath256 is a @xmath52-sound @xmath376-abstraction of @xmath240 , then for every @xmath423 : @xmath438    in order to prove proposition  [ thm : mudecisiveabstr ] , we first show the following technical lemma , which relates avoid - sets in @xmath240 and in @xmath256 .    [ lemma : btildeabstr ] let @xmath256 be an @xmath376-abstraction of @xmath240 . then , for every @xmath435 : @xmath439    fix @xmath435",
    "we have the series of equivalences : @xmath440 now from lemma  [ lemma : pushforwarddelta ] , one can show that @xmath441 by noticing that @xmath442 .",
    "hence @xmath443 iff @xmath444 ( _ i.e. _  @xmath445 ) , which concludes the proof .",
    "we are now ready to prove proposition  [ thm : mudecisiveabstr ] .",
    "fix @xmath435 and assume that @xmath256 is @xmath446 , _",
    "i.e. _ @xmath447 to show that @xmath240 is @xmath448 , by lemma  [ lemma : btildeabstr ] , it suffices to prove that @xmath449 the latter is immediate by   since @xmath256 is @xmath52-sound .",
    "this result obviously extends to stronger decisiveness notions .",
    "[ coro : sounddecisive ] if @xmath256 is a sound @xmath376-abstraction of @xmath240 , then for every @xmath423 : @xmath450    the definitions of attractor and of sound @xmath376-abstraction yield a similar result :    [ lem : attr - via - sound ] if @xmath256 is a sound @xmath376-abstraction of @xmath240 and if @xmath392 is an attractor for @xmath256 , then @xmath451 is an attractor for @xmath240 .    as a direct consequence of lemma  [ lemma : dmcfiniteattractordecisive ] and corollary  [ coro : sounddecisive ] , we get the following result for denumerable abstractions , which will be crucial for designing approximation algorithms taking advantage of abstractions .",
    "[ lemma : toto ] let @xmath256 be a dmc with a finite attractor . if @xmath256 is a sound @xmath376-abstraction of @xmath240 , then @xmath240 is decisive w.r.t .",
    "every @xmath376-closed set .",
    "let us summarize the interesting results on denumerable abstractions .",
    "assume @xmath256 is an @xmath376-abstraction of @xmath240 , and write @xmath452 , the set of @xmath376-closed sets of @xmath453 .",
    "the following implications hold true :    ( attractor ) @xmath454_2@xmath455 ; ( decisive ) [ right = of attractor ] @xmath240 is @xmath237 ; ( strongly_decisive ) [ right = of decisive ] @xmath240 is @xmath238 ; ( persistently_decisive ) [ right = of strongly_decisive ] @xmath240 is @xmath239 ;    ( fair ) [ below = of strongly_decisive , yshift=.3 cm ] @xmath240 is @xmath325 ;    ( attractor )  ( decisive ) ; ( decisive ) (strongly_decisive ) ; ( persistently_decisive ) (strongly_decisive ) ; ( strongly_decisive )  ( fair ) ;      we established that decisiveness properties could be transferred through sound abstractions .",
    "however in the next section , we will also see that soundness of an abstraction can be proved via decisiveness properties .",
    "it is therefore relevant to explore alternatives to prove decisiveness properties .",
    "we give here two frameworks where this can be done without any assumption on the abstraction .",
    "first , we assume a denumerable abstraction , and lower bounds on probabilities of reachability properties .",
    "propositionattractorsound [ prop : attractorsound ] let @xmath256 be a dmc such that @xmath256 is an @xmath376-abstraction of @xmath240 .",
    "assume that there is a finite set @xmath456 such that @xmath457 is an attractor for @xmath256 and @xmath458 is an attractor for @xmath240 .",
    "assume moreover that for every @xmath459 , for every @xmath376-closed set @xmath165 in @xmath453 , there exist @xmath460 and @xmath461 such that :    * for every @xmath462 , @xmath463 b)\\geq p$ ] , or * for every @xmath462 , @xmath464 .",
    "then @xmath240 is decisive w.r.t .",
    "every @xmath376-closed set .",
    "we write @xmath465 for the hypotheses over @xmath240 in this proposition.[notation : dag ] the idea behind this result is that , with probability @xmath27 , the attractor of @xmath240 will be visited infinitely often , and , if at each visit of the attractor , there is a positive probability to reach some ( @xmath376-closed ) set @xmath165 , since that probability is by assumption bounded from below , then @xmath165 will indeed be visited infinitely often with probability @xmath27 .",
    "this will allow to show the dichotomy between @xmath165 and @xmath211 that is required for proving the decisiveness property . the full proof is given in the appendix , page  , but we give here a sketch . note that this kind of proofs appears quite often in the literature ( see _ e.g. _",
    "* lemma 3.4 ) , but we have to do it carefully here , since the framework is rather general ) .    fix @xmath466 and @xmath391 . towards a contradiction ,",
    "assume that @xmath240 is not @xmath52-decisive w.r.t .",
    "@xmath165 : this means that @xmath467 .",
    "since @xmath468 is an attractor , we deduce from lemma  [ lemma : attractorgf ] that @xmath469 we write @xmath470 for the non - empty . ]",
    "set of states @xmath291 of @xmath457 such that @xmath471 then obviously @xmath472 .",
    "since @xmath473 , from lemma  [ lemma : btildecomplementaire ] ( third item ) , the hypothesis @xmath465 and the finiteness of @xmath474 , we get that there is @xmath460 and @xmath461 such that for every @xmath475 and every @xmath476 , @xmath477 b)\\ge p\\enspace.\\ ] ] writing @xmath478 for @xmath479 , we can show that @xmath480 which is the required contradiction .",
    "second , we strengthen the hypothesis and assume a finite abstraction .",
    "the condition which applies in this case is the weakest property that we have seen , namely fairness !",
    "propositionpropfairness [ prop : fairness ] let @xmath256 be a finite markov chain such that @xmath256 is an @xmath376-abstraction of @xmath240 .",
    "fix @xmath384 , and assume that @xmath240 is @xmath52-fair w.r.t . every @xmath376-closed set .",
    "then @xmath240 is @xmath52-decisive w.r.t .",
    "every @xmath376-closed set .",
    "we give here the main steps of the proof , the details are postponed to the appendix ( page  ) .",
    "a key element of the proof relies on the fact that , since @xmath256 is a finite mc , it can be viewed as a graph and we can talk of the _ bottom strongly connected components ( bscc ) _ of @xmath256 .",
    "the first step of the proof aims at showing that , roughly speaking , the union of all bsccs of @xmath256 is a @xmath52-attractor for @xmath240 .",
    "more precisely , if @xmath481 , we prove that @xmath482 .",
    "this is shown thanks to the following arguments :    * for each @xmath408 , @xmath483 implies that @xmath484  this uses the @xmath52-fairness assumption of @xmath240 w.r.t .",
    "@xmath376-closed sets , and the core property of bsccs ( we can not escape from them ) ; * using bayes formula , one can decompose the set of paths according to the states which are visited infinitely often ( which corresponds to a decomposition according to the bscc the path ultimately visit ) .",
    "once we have shown that @xmath485 is a @xmath52-attractor for @xmath240 , it suffices to observe that for each @xmath486 and each bscc @xmath487 of @xmath256 , either @xmath488 , or @xmath489 . transferring those observations to @xmath240 and using bayes formula to decompose @xmath490 according to which bscc",
    "is reached , it is easy to check that @xmath491 .      in our applications ( section  [ sec : appli ] ) , completeness will be for free .",
    "indeed , a simple condition implies completeness as stated in the next lemma .",
    "[ lemma : finite - soundness ] if @xmath256 is a finite markov chain and an @xmath376-abstraction of @xmath240 , then @xmath256 is complete",
    ".    pick @xmath492 , and @xmath493 ( in particular , @xmath494 , the dirac measure over @xmath495 ) .",
    "assume that @xmath496 but @xmath497 .    since @xmath256 is a finite markov chain , there are @xmath498 such that @xmath499 and for each @xmath500 and for each @xmath501 , @xmath502 .",
    "for each @xmath503 , we write @xmath504 .",
    "then , by lemma  [ coro : equiv ] , we get that @xmath505 .",
    "however , @xmath506 , yielding a contradiction .    note that the above lemma does not hold for denumerable abstractions . to illustrate this ,",
    "any two random walks over @xmath507 are abstractions of each others , and it is well - known that almost - sure reachability depends on the probability values .    in general ,",
    "completeness can be guaranteed by some decisiveness condition .",
    "note that , since finite markov chains are always decisive , the next lemma actually subsumes the latter one , that we however found interesting to have as such .",
    "[ lemma : completeness ] let @xmath384 .",
    "assume that @xmath256 is an @xmath376-abstraction of @xmath240 and that @xmath256 is @xmath508 .",
    "then , @xmath256 is a @xmath52-complete @xmath376-abstraction .",
    "fix @xmath233 and assume that @xmath496 but @xmath509 .",
    "since @xmath256 is @xmath508 , we infer from lemma  [ lem : btilde ] ( fifth item ) that @xmath510 , and applying corollary  [ coro : until ] , we get that @xmath511 .",
    "this contradicts the hypothesis that @xmath512 .",
    "given the above results , we realize that soundness is often more critical than completeness , and showing it may require some effort .",
    "below , we give a condition under which soundness holds .",
    "[ coro : decsound ] let @xmath256 be an @xmath376-abstraction of @xmath240 .",
    "assume @xmath240 is decisive w.r.t .",
    "every @xmath376-closed sets .",
    "then @xmath256 is a sound @xmath376-abstraction of @xmath240 .    towards a contradiction",
    "assume that @xmath423 is such that @xmath513 . since @xmath240 is decisive w.r.t .",
    "@xmath514 from @xmath52 , it holds from lemma  [ lem : btilde ] ( fifth item ) that @xmath515 .",
    "applying corollary  [ coro : until ] , we get that @xmath516 , which contradicts the assumption that @xmath517 .    for @xmath256 an @xmath376-abstraction of @xmath240 , notice that completeness is ensured by a decisiveness assumption on @xmath256 , whereas soundness requires @xmath240 being decisive w.r.t . every @xmath376-closed set .",
    "while these conditions look very similar , the condition for soundness is actually harder to check since the abstract sts @xmath256 will be simpler than the original concrete sts @xmath240 .",
    "in this section , we rely on the notions previously introduced and studied to design generic procedures for the qualitative analysis of properties of stss , under some assumptions that will be made precise . we emphasize that there are procedures rather than algorithms , since algorithms would require some effectiveness conditions on the stss ( numerical conditions , or decidability of some graph properties in the underlying non - stochastic model ) .",
    "next , we will explicit necessary conditions to obtain algorithms from the generic procedures . for most natural stss ( and in particular for our applications  ",
    "see section  [ sec : appli ] ) , these conditions will be satisfied .    in the remainder of this section",
    ", we fix an sts @xmath518 .",
    "our objective here is to describe generic procedures that capture the qualitative ( almost - sure , positive ) satisfaction of reachability and repeated reachability properties .    given @xmath96 a measurable set , recall that @xmath519 denotes its avoid - set .",
    "we start with two technical lemmas that will be useful to show various results thereafter .",
    "their proofs are postponed to appendix  [ appendix : qualitative ] , page  .",
    "lemmaqualtechnical [ lemma : qualtechnical ] for every @xmath67    a.   @xmath520 ; b.   @xmath521 .",
    "lemmaqualtechnicalpd [ lemma : qualtechnicalpd ] for every @xmath67 , if @xmath16 is @xmath327 , then @xmath522 .    extending the approach of  @xcite",
    ", we establish characterizations of the qualitative satisfaction of ( repeated ) reachability properties in terms of the positive satisfaction of reachability - like properties .",
    "we advocate that these are simpler to check on stss : positive reachability amounts to guessing a `` symbolic '' path ( or cylinder ) leading to the target , and to showing that this path has a positive measure .",
    "propositionasr[prop : almostsurereach ] for every @xmath67    * if @xmath523 then @xmath524 ; * if @xmath16 is @xmath220 and @xmath525 , then @xmath526 .",
    "we start with the first item .",
    "since the event @xmath527 is almost - sure , we have @xmath528 and then it is straightforward from point ( i ) of lemma  [ lemma : qualtechnical ] . in order to prove the other implication , we need the assumption that @xmath16 is @xmath220 .",
    "we have that : @xmath529 then from @xmath530 , we derive that @xmath531 .",
    "this reduces the almost - sure model - checking of a reachability property to the @xmath2-probability of an until formula , a slight generalization of reachability properties .",
    "propositionasrr for every @xmath67    * if @xmath532 then @xmath533 ; * if @xmath16 is @xmath222 and @xmath533 , then @xmath532 .",
    "since the event @xmath534 is almost - sure , we have @xmath535 and then it is straightforward from point ( ii ) of lemma  [ lemma : qualtechnical ] . in order to prove the second item , we assume that @xmath16 is @xmath222 , i.e. @xmath536 . by assumption , the event @xmath537 has probability @xmath2 , and thus @xmath538 is almost - sure .",
    "this reduces the almost - sure model - checking of a repeated reachability property to the @xmath2-probability of a reachability property .",
    "propositionprr for every @xmath67    * if @xmath16 is @xmath539 and if @xmath540 , then @xmath541 ; * if @xmath16 is @xmath225 and if @xmath541 , then @xmath540 .    for the first item ,",
    "we only require @xmath16 to be @xmath539 , that is @xmath542 . since the event @xmath543 is almost - sure",
    ", we derive the equality : @xmath544 now from point ( ii ) of lemma  [ lemma : qualtechnical ] , we get that @xmath545 .",
    "therefore @xmath546 , and thus @xmath547 .",
    "assume now that @xmath16 is @xmath225 and that @xmath548 .",
    "lemma  [ lemma : qualtechnicalpd ] implies that @xmath549 .",
    "since @xmath327 implies @xmath222 , it follows that @xmath550 and thus , @xmath551 .",
    "this reduces the positive model - checking of a repeated reachability property to the positive model - checking of a reachability property .",
    "hence , in all cases , under some specific assumptions , the properties one wants to check are reduced to checking whether a specific reachability ( or until ) property has positive probability .",
    "these are the simplest properties one can hope to be decidable in a class of models .",
    "effectiveness hence relies here on the computation of avoid - sets , avoid - sets of avoid - sets , and on the decidability of the positive reachability ( or until ) problem .      via abstractions",
    ", one can reduce the qualitative analysis of basic properties ( reachability and repeated reachability ) from the concrete model to the abstract model .",
    "indeed , one can use the previous results , and show immediately :    assume @xmath256 is an @xmath376-abstraction of @xmath240 , and fix @xmath552 .",
    "* let @xmath384 be an initial distribution for @xmath240 .",
    "assume that @xmath256 is @xmath52-sound and @xmath52-complete .",
    "then : @xmath553 * assume that @xmath256 is sound and complete , and that @xmath256 is @xmath227 .",
    "then for every @xmath384 : @xmath554 * assume that @xmath256 is sound and complete , and that @xmath256 is @xmath228 and @xmath555 .",
    "then for every @xmath384 : @xmath554    this allows one to perform the qualitative analysis of ( repeated ) reachability properties in @xmath240 on its abstraction @xmath256 , which is quite useful since @xmath256 will usually be simpler than @xmath240 .      in the case of dmcs with a finite attractor",
    ", the almost - sure satisfaction of properties given as a dma can be characterized by finitely many reachability properties  @xcite . in many cases ,",
    "this characterization yields an effective algorithm to decide the almost - sure satisfaction of @xmath0-regular properties . note that , since dma are closed under complement , the positive probability of properties specified by dma reduces to the ( non-)almost - sure model - checking of the property specified by the complement automaton .",
    "we therefore concentrate on almost - sure model checking in the sequel .",
    "we fix a finite set of atomic propositions @xmath118 , we let @xmath120 be a labelled dmc and we also let @xmath208 be a dma . the product @xmath556 has been defined in section  [ subsec : lsts ] .",
    "first , since @xmath147 has finitely many states , attractors transfer from @xmath16 to the product @xmath203 .",
    "this is stated formally below , and proven in the technical appendix ( page  ) .",
    "lemmaattractorproduit [ lemma : soundproduct][attractorproduit ] assume that @xmath78 is an attractor for @xmath16 .",
    "then @xmath557 is an attractor for @xmath203 .",
    "furthermore , if @xmath78 is finite , then so is @xmath557 .",
    "we assume that @xmath16 has a finite attractor , hence applying the above result , the product @xmath203 admits a finite attractor that we denote @xmath165 .",
    "we write @xmath558 ( or simply @xmath559 when @xmath16 and @xmath147 are clear from the context ) for the finite graph whose vertices are states of @xmath165 , and in which there is an edge from @xmath560 to @xmath561 if @xmath562 in @xmath556 .",
    "the _ bottom strongly connected components _ ( bsccs ) of the graph @xmath563 play a central role in the model checking of @xmath0-regular properties of @xmath16 .",
    "let us first discuss the relationships between the bsccs and attractors for @xmath203 .",
    "[ lemma : bscc ] the following properties are satisfied :    * the set @xmath564 is an attractor of @xmath203 . * if @xmath487 and @xmath565 are two distinct bsccs of @xmath563 , for every @xmath566 , @xmath567 . *",
    "if @xmath487 is a bscc of @xmath563 , for every @xmath568 , @xmath569 .",
    "the first property is obvious .",
    "the second property is a consequence of the fact that there is no path between two states of two different bsccs .",
    "this second property implies that for each bscc @xmath570 of @xmath571 and for each @xmath572 , @xmath573 .",
    "from the first property and lemma  [ lemma : attractorgf ] , we know that for each @xmath574 , @xmath575 .",
    "this holds true in particular for each @xmath572 and thus , from the previous observation for such initial distributions , we get that @xmath576 for each @xmath572 .    from lemma  [ lemma : bscc ] ,",
    "the bsccs of @xmath577 form an attractor , and once the system enters a bscc @xmath487 , only that bscc will be visited again , and this will happen infinitely often .",
    "in particular , the satisfaction of the muller condition in @xmath578 , inherited from @xmath140 , can be characterized by the bsccs satisfying the muller condition @xmath140 ( in a sense that we will make precise ) .",
    "a bscc @xmath487 of @xmath579 is _ good for @xmath140 _ , written @xmath580 , if there exists @xmath581 such that    1 .",
    "for every state @xmath582 , if there exists @xmath583 with @xmath584 , then @xmath585 ; and 2 .",
    "for every @xmath586 there exists @xmath587 , there exists a state @xmath583 such that @xmath584 .",
    "let @xmath487 be an arbitrary bscc of @xmath558 .",
    "we define the set @xmath588 as the set of states of the muller automaton that can be reached from @xmath487 . within a bscc",
    ", all reachable states will actually be visited infinitely often almost - surely .",
    "more precisely , we state the following result :    [ lemma : bsccproba ] for every @xmath589 , @xmath590 .",
    "characterizes the set of runs @xmath591 in @xmath203 such that @xmath592 ( @xmath204 is the labelling function of @xmath203 such that @xmath593 ) . ]    let @xmath589 , and @xmath594 a path in @xmath203 starting at @xmath582 . by definition of @xmath595 ,",
    "all @xmath596 s are in @xmath595 , hence @xmath597 .",
    "we now argue why all elements of @xmath595 are actually almost - surely visited infinitely often .",
    "fix @xmath598 and @xmath599 that is reachable from @xmath487 .",
    "all two states of @xmath487 are reachable one from each other ; thus , from every state of @xmath487 , @xmath599 is reachable through a finite path .",
    "hence there is some @xmath600 and @xmath601 such that for every state @xmath602 , @xmath603 ( r , p ) ) \\ge    \\iota\\enspace.\\ ] ] applying a reasoning similar to the proof of proposition  [ prop : attractorsound ] , we get that @xmath604 .",
    "indeed , @xmath605 .",
    "thanks to the third item of lemma  [ lemma : bscc ] , we obtain that @xmath606 we conclude that @xmath607 , which completes the proof .    as a consequence :    [ coro : bsccproba ] for every initial distribution @xmath67 for @xmath16 and for every @xmath608 , @xmath609 implies @xmath610    we can now completely characterize the probability of satisfying an @xmath0-regular property .    [",
    "th : good - bscc - for - quant - analysis ] let @xmath16 be a labelled dmc with a finite attractor @xmath165 , and @xmath208 be a dma .",
    "then , for every initial distribution @xmath67 for @xmath16 : @xmath611    fix @xmath67 and @xmath608 . as stated in lemma  [ lemma : bscc ] , the bsccs of @xmath559 form an attractor for @xmath203 , and two bsccs are probabilistically disjoint . using bayes formula with a disjunction over the bsccs ,",
    "we can write : @xmath612   { \\scriptstyle c\\          \\mu \\times \\delta_{q_0}\\text{-reachable } } \\end{array } }    \\prob_{\\mu \\times \\delta_{q_0}}^{\\calt \\ltimes \\calm}(\\f c ) \\cdot    \\prob_{\\mu \\times \\delta_{q_0}}^{\\calt \\ltimes \\calm}(\\mathsf{inf } \\in \\calf    \\mid \\f c)\\ ] ] where we say that @xmath487 is @xmath207-reachable whenever @xmath613 .",
    "hence we deduce that : @xmath614 thanks to corollary  [ coro : bsccproba ] , where @xmath615 is the characteristic function of @xmath140 ( that is , @xmath616 if @xmath581 , and @xmath617 otherwise ) .",
    "this concludes the proof of the theorem .    as an immediate corollary of theorem  [ th : good - bscc - for - quant - analysis ]",
    ", we obtain a characterization for the almost - sure satisfaction of properties given as dma .",
    "[ coro : asomega ] let @xmath16 be a labelled dmc with a finite attractor , and @xmath180 be a dma .",
    "let @xmath165 be a finite attractor for @xmath618 .",
    "for every initial distribution @xmath67 for @xmath16 : @xmath619    in order to turn this characterization into a decision procedure , we need to be able to compute the attractor @xmath165 for @xmath556 , and to build the graph @xmath558 ; also one needs to be able to compute for every bscc @xmath487 the set @xmath595 .",
    "while the previous approach is adapted to dmcs , it does not apply directly to general stss : indeed , it is unlikely that general stss have _ finite _ attractors , and finiteness of the attractor is fundamental for the correctness of the approach .",
    "the idea will then be to rely on an abstraction , and to transfer properties through that abstraction .",
    "let @xmath620 and @xmath621 be two labelled stss such that @xmath256 is a dmc , which is an @xmath376-abstraction of @xmath240 . under certain conditions , we show how to perform the qualitative model checking of @xmath0-regular properties on @xmath240 by transferring the same analysis on @xmath256 .",
    "we assume the @xmath0-regular property is given by a dma @xmath169 .",
    "we consider both the product @xmath622 and the product @xmath623 .",
    "first we justify why , within a slight abuse of terminology , @xmath624 can be viewed as an @xmath376-abstraction of @xmath625 .",
    "we also exhibit a sufficient condition under which it is sound .",
    "lemmaalphabar [ lemma : alphabar ] let @xmath626 be the unique lifting of @xmath376 such that @xmath627 .",
    "if @xmath256 is an @xmath376-abstraction of @xmath240 , then @xmath623 is an @xmath628-abstraction of @xmath629 .",
    "furthermore , if @xmath630 is @xmath237 where @xmath631 , then @xmath623 is a sound @xmath628-abstraction of @xmath622 .",
    "while the proof of the first part of the lemma is technical hence postponed to the appendix ( page  ) , the second part of the lemma is a consequence of proposition  [ coro : decsound ] .    [",
    "rk : produit ] in the sequel , our applications will be smooth enough to meet the hypothesis : @xmath191 is decisive w.r.t .",
    "@xmath628-closed sets .",
    "however we still have several open questions .",
    "the first one is the following : does soundness between @xmath256 and @xmath240 imply soundness between @xmath632 and @xmath191 ?",
    "while this seems quite natural , it is surprisingly tricky .",
    "although we did not manage to find a counter - example for this general question , we found one for a fixed initial distribution .",
    "it is described in example  [ ex : cex - sound ] in the appendix ( page  ) and highlights some difficulties we encounter when aiming at transferring analysis from the abstraction to the concrete model .",
    "this justifies the fact that we assumed decisiveness . as we already know",
    ", if @xmath256 is a sound @xmath376-abstraction of @xmath240 and @xmath256 is decisive w.r.t .",
    "any set of states , then @xmath240 is decisive w.r.t .",
    "any @xmath376-closed sets .",
    "then the second natural question is the following : does decisiveness w.r.t .",
    "@xmath376-closed sets for @xmath240 imply decisiveness w.r.t .",
    "@xmath628-closed sets for @xmath191 ? again , we do not have a general counter - example , but we have one for a fixed initial distribution .",
    "this is described in example  [ ex : cex - sound ] in the appendix ( page  ) .    from now on , whenever @xmath191 is decisive w.r.t .",
    "@xmath628-closed sets and thus the previous result is applicable , we will abusively write @xmath376 for @xmath628 .",
    "we focus now on the case where @xmath256 has a finite attractor .",
    "has a finite attractor it is decisive and thus @xmath256 is a complete @xmath376-abstraction of @xmath240 by lemma  [ lemma : completeness ] . ]",
    "applying lemma  [ lemma : soundproduct ] , @xmath623 has also a finite attractor , which we denote @xmath633 .",
    "we reuse notations of the previous subsection , in particular the graph of the attractor @xmath634 , and the set @xmath595 of recurring states when @xmath487 is a bscc of that graph .",
    "the following lemma is a counterpart to lemma  [ lemma : bscc ] for @xmath240 . under the hypothesis that @xmath191 is decisive w.r.t .",
    "@xmath376-closed sets , even though @xmath622 does not have a finite attractor , it has an attractor with an interesting structure inherited from @xmath623 . in the sequel , we write @xmath635 .",
    "[ lemma : bscc2 ] assume @xmath256 has a finite attractor , and assume that @xmath623 is a sound @xmath376-abstraction of @xmath622 .",
    "the following properties are satisfied :    * the set @xmath636 is an attractor of @xmath622 . * if @xmath487 and @xmath565 are two distinct bsccs of @xmath634 , for every @xmath637 , @xmath638 . * if @xmath487 is a bscc of @xmath639 , for every @xmath640 , @xmath641 .",
    "since @xmath623 is a sound @xmath376-abstraction of @xmath622 , the first property derives from proposition  [ lem : attr - via - sound ] and lemma  [ lemma : bscc ] .",
    "the second property is a consequence of lemma  [ lemma : bscc ] , and of the fact that @xmath623 is an @xmath376-abstraction of @xmath622 . finally , the third property is , as in the proof of lemma  [ lemma : bscc ] , a consequence of the second point and of lemma  [ lemma : attractorgf ] .",
    "we then prove a counterpart to lemma  [ lemma : bsccproba ] for @xmath240 , which shows that a bscc is characterized by the set @xmath595 of states that are visited infinitely often from @xmath487 .",
    "[ lemma : bscct1 ] assume @xmath256 has a finite attractor , and assume that @xmath642 is a sound @xmath376-abstraction of @xmath643 .",
    "let @xmath487 be a bscc of @xmath634 , and @xmath640 .",
    "then : @xmath644    as already argued in the proof of lemma  [ lemma : bsccproba ] , for every @xmath598 , for every state @xmath645 , @xmath646 ( we abusively write @xmath31 for the measurable set @xmath647 ) .",
    "since @xmath623 is a sound @xmath376-abstraction of @xmath622 , we derive for every @xmath648 that @xmath649 ( as before we abusively write @xmath31 for @xmath650 ) .",
    "we can then show that for each @xmath651 and for each @xmath652 , @xmath653 indeed , towards a contradiction , assume that there is a distribution @xmath651 such that @xmath654 , i.e. @xmath655 . from the third point of lemma  [ lemma : bscc2 ] , we get that @xmath656 .",
    "now , observe that @xmath657 it follows that there is @xmath277 such that @xmath658 . from lemma  [ lemma :",
    "integration ] , we get that there is @xmath659 ( with @xmath660 ) such that @xmath661 from the assumption , we thus get that @xmath662 where @xmath663 which is the required contradiction . hence , for each @xmath651 and for each @xmath652 , @xmath664 .",
    "it now suffices to show that , from any @xmath665 , no other state is visited almost - surely infinitely often .",
    "fix @xmath666 .",
    "then , by definition of @xmath595 , we have that @xmath667 . since @xmath623 is an @xmath376-abstraction of @xmath668",
    ", we deduce that @xmath669 .",
    "we conclude that @xmath670 , which is the claim of the lemma .",
    "we are now in a position to decompose the probability to satisfy the muller condition @xmath140 in @xmath622 into the reachability probability of good bsccs .",
    "[ theo : titi ] let @xmath240 and @xmath256 be two lstss such that @xmath256 is a dmc with a finite attractor @xmath633 , and @xmath256 is an @xmath376-abstraction of @xmath240 .",
    "let @xmath208 be a dma .",
    "assume moreover that @xmath632 is an @xmath376-sound abstraction of @xmath191 .",
    "then , for every initial distribution @xmath52 for @xmath240 and for every @xmath608 : @xmath671    applying lemma  [ lemma : bscct1 ] , for every @xmath384 , assuming @xmath672 , then @xmath673 by the two first properties of lemma  [ lemma : bscc2 ] , we can write the following bayes formula , with a disjunction over the bsccs of @xmath634 : @xmath674 { \\scriptstyle c\\ \\mu \\times        \\delta_q\\text{-reachable } } \\end{array } } \\hspace*{-1.5 cm } \\prob_{\\mu \\times \\delta_q}^{\\calt_1 \\ltimes \\calm}(\\f      \\alpha^{-1}(c ) ) \\cdot \\prob_{\\mu \\times \\delta_q}^{\\calt_1 \\ltimes        \\calm}(\\mathsf{inf } \\in \\calf\\mid \\f \\alpha^{-1}(c ) ) \\\\      & = & \\sum_{c\\ \\text{bscc",
    "of}\\ \\mathsf{graph}_{\\calt_2 \\ltimes          \\calm}(b_2 ) } \\prob_{\\mu \\times \\delta_q}^{\\calt_1 \\ltimes \\calm}(\\f      \\alpha^{-1}(c ) ) \\cdot \\mathds{1}_{\\calf}(f_c ) \\\\      & = & \\sum_{c\\in \\mathsf{good}^{b_2}_{\\calt_2 \\ltimes \\calm}(\\calf ) } \\prob_{\\mu \\times \\delta_q}^{\\calt_1 \\ltimes \\calm}(\\f      \\alpha^{-1}(c ) )    \\end{aligned}\\ ] ] this concludes the proof of the theorem .    in particular ,",
    "regarding the qualitative model checking of @xmath0-regular properties , we conclude with the following characterization of the almost - sure satisfaction of properties specified by a dma .",
    "[ coro : theotiti ] let @xmath240 and @xmath256 be two lstss such that @xmath256 is a dmc with a finite attractor , and @xmath256 is an @xmath376-abstraction of @xmath240 .",
    "let @xmath180 be a dma .",
    "assume moreover that @xmath632 is an @xmath376-sound abstraction of @xmath191 .",
    "then , for every initial distribution @xmath52 for @xmath240 and for every @xmath608 : @xmath675    hence , this reduces the almost - sure model - checking of a property given by @xmath147 in @xmath240 to the almost - sure model - checking of a reachability property ( applying corollary  [ coro : asomega ] ) . for the approach to be effective",
    ", it is sufficient that the analysis at the level of @xmath624 is effective .",
    "as already quickly mentioned , under the hypotheses of corollary  [ coro : theotiti ] , the abstraction @xmath623 is complete ( since it has a finite attractor ) .",
    "though it is not explicitely used , we could not have such an equivalence without some completeness of the abstraction .",
    "while the notion of abstraction was not precisely defined in  @xcite for stochastic timed automata , it was implicitly already there .",
    "also , decidability of the almost - sure satisfaction was ensured thanks to a fairness condition . using the terminology of the current paper ,",
    "the framework was the following : @xmath240 and @xmath256 are two stss such that @xmath256 is a _",
    "finite _ markov chain which is an @xmath376-abstraction of @xmath240 .",
    "then the condition for the abstraction to yield interesting results was that @xmath240 should be fair w.r.t .",
    "every @xmath376-closed sets ( the latter condition implying the fairness of @xmath191 , for @xmath147 a dma ) .",
    "thanks to proposition  [ prop : fairness ] , this implies that @xmath622 is actually decisive w.r.t .",
    "@xmath376-closed sets .",
    "applying proposition  [ coro : decsound ] , we get that @xmath623 is sound abstraction of @xmath643 .",
    "given that @xmath256 is finite , it trivially has a finite attractor .",
    "hence , the conditions of theorem  [ theo : titi ] are satisfied , and the approach of  @xcite was then a particular case of that theorem , when applied to specific subclasses of stochastic timed automata ( details are provided in subsection  [ subsec : sta ] ) .",
    "beyond the qualitative analysis performed in the previous section , we will see that , under reasonable assumptions , one may derive approximation schemes to compute , within arbitrary precision , the probability of a given property .",
    "we consider first reachability , then repeated reachability and last @xmath0-regular properties .    for the next two subsections ,",
    "fix an sts @xmath676 , and an initial distribution @xmath53 .      in order to approximate the reachability probability of a set @xmath677 in @xmath16",
    ", we define the two following sequences , similar to the ones given for decisive markov chains  @xcite . for every @xmath678 : @xmath679 b);\\\\ p_n^{\\mathsf{no } } & = & \\prob^\\calt_\\mu(\\neg b \\u[\\le n ] \\widetilde{b } ) .",
    "\\end{array}\\right.\\ ] ]    since the sequences of events @xmath680 b)_{n \\in { \\mathbb{n}}}$ ] and @xmath681 \\widetilde{b})_{n \\in { \\mathbb{n}}}$ ] are non - decreasing and converge respectively to @xmath682 and @xmath683 , it is easy to determine the limit of the sequences @xmath684 and @xmath685 , with no assumption on the model .",
    "[ lemma : approxquantreach ] the sequences @xmath684 and @xmath686 are non - decreasing and converge respectively to @xmath687 and @xmath688 .    assuming now that @xmath16 is decisive w.r.t .",
    "@xmath165 , the two limits are related .",
    "[ coro - approx - reach ] if @xmath16 is @xmath220 , then @xmath689 .    from lemma  [ lemma : approxquantreach ]",
    ", it holds that @xmath690 the last equality comes from the decisiveness assumption .",
    "corollary  [ coro - approx - reach ] can be used to derive an approximation scheme for @xmath691 . to obtain an @xmath692-approximation , it suffices to evaluate @xmath693 and @xmath694 for larger and larger values of @xmath60 , until @xmath695 , and to return @xmath693 .",
    "this scheme is effective as soon as one can compute @xmath211 , and the probability ( from @xmath52 ) of cylinders of the forms @xmath696 and @xmath697 . in case @xmath698 and @xmath699",
    "can not be computed exactly , but can only be approximated up to any desired error bound , this scheme can be refined to obtain a @xmath700-approximation for @xmath691 .",
    "we now define two sequences that will yield an approximation scheme for a repeated reachability probability , under stronger assumptions on the model . for every @xmath701 : @xmath702 \\widetilde{\\widetilde{b } } ) ; \\\\ q_n^{\\mathsf{no } } & = & \\prob^\\calt_\\mu(\\neg \\widetilde{\\widetilde{b } } \\u[\\le n ] \\widetilde{b } ) .",
    "\\end{array}\\right.\\ ] ]    here again , with no assumption on @xmath16 :    [ lemma : quantrepreach ] the sequences @xmath703 and @xmath704 are non - decreasing and converge respectively to @xmath705 and @xmath706 .",
    "assuming now that @xmath16 is persistenly decisive w.r.t to @xmath165 and decisive w.r.t .",
    "@xmath211 , the two sequences are closely related .",
    "[ coro - approx - buchi ] if @xmath16 is @xmath225 and @xmath539 , then the two sequences @xmath703 and @xmath707 are adjacent and converge to @xmath708 .",
    "we first prove that    a.   @xmath709 and b.   @xmath710 .",
    "indeed from point ( i ) of lemma  [ lemma : qualtechnical ] , we get that @xmath711 where the last equality holds from lemma  [ lemma : qualtechnicalpd ] , since @xmath16 is @xmath327 , yielding to point ( a ) . now in order to establish point ( b ) , notice first that @xmath712 . to prove the other inequality",
    ", we have from lemma  [ lemma : qualtechnicalpd ] ( still applicable ) that : @xmath713 which gives us point ( b ) . now remember that @xmath714 .",
    "then , since @xmath16 is @xmath327 and @xmath715 and from lemmas  [ lemma : qualtechnical ] ( point ( ii ) ) and  [ lemma : qualtechnicalpd ] , it follows that    * @xmath716 and * @xmath717 .    using lemma  [ lemma : quantrepreach ] , it is now easy to show that @xmath718 and that @xmath719 .    here also ,",
    "under the assumptions of corollary  [ coro - approx - buchi ] , we obtain an approximation scheme for the value @xmath720 .",
    "effectiveness of the scheme relies on the computability of the avoid sets @xmath211 and @xmath721 , and on the effective computation of the probability of cylinders of the forms @xmath722 and @xmath723 .",
    "similarly as before , in case @xmath724 and @xmath725 can not be computed exactly , but can only be approximated up to any desired error bound , this scheme can be refined to obtain a @xmath700-approximation for @xmath726 .      to go beyond reachability and repeated reachability , we now consider an @xmath0-regular property given by a dma @xmath727 .",
    "we assume that @xmath728 is a labelled dmc .    in order to approximate the probability that the model satisfies this external specification",
    ", we assume that @xmath16 has a finite attractor .",
    "following section  [ subsec : qual - dmc ] , we consider the finite attractor @xmath165 of @xmath203 , and we apply theorem  [ th : good - bscc - for - quant - analysis ] : for each @xmath67 , @xmath729    thus , the computation of the probability that a given model satisfies a given external specification is reduced to the computation of a reachability probability . now , given that @xmath16 and hence @xmath578 has a finite attractor , @xmath203 is @xmath730 for any measurable set @xmath165 , so that we can apply the approximation scheme from section  [ subsec : approx - reach ] to obtain an approximation of the desired value .",
    "the effectiveness of the approach relies on the effectiveness of the scheme for reachability , but also on the computability of an attractor for @xmath16 , and of the set of good bsccs of the graph of the attractor .",
    "we assume the same framework as in section  [ subsec : qual - abs ] , that is @xmath620 and @xmath621 are two lstss such that :    * @xmath256 is a sound @xmath376-abstraction of @xmath240 * @xmath256 is a dmc with a finite attractor @xmath633 .",
    "we consider again a dma @xmath142 , as well as the products @xmath191 and @xmath632 .",
    "writing @xmath731 , we assume that @xmath191 is @xmath237 . remember that this implies , from lemma  [ lemma : alphabar ] , that @xmath632 is a sound @xmath628-abstraction of @xmath191 .",
    "fix an initial distribution @xmath52 for @xmath240 .",
    "thanks to theorem  [ theo : titi]:@xmath732    thus , as previously , the computation of the probability that a given model satisfies a given external specification is reduced to the computation of a reachability probability . since we assumed @xmath191 to be @xmath237 , we can use the approximation scheme from section  [ subsec : approx - reach ] to approximate the searched value .",
    "effectiveness of the approach requires effective numerical computations for the distributions , as well as good constructivity properties for various sets , like the bsccs of the graph of the attractor , and avoid - sets of these , etc .",
    "[ [ nonzeno ] ] application to time - bounded verification of stochastic real - time systems .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    our initial motivation stems from real - time stochastic systems , that is , systems with both timing constraints and probabilistic choices . while we will not formally define a real - time stochastic system ,",
    "let us give an informal description : a real - time system has in its state - space a component representing the time ( via timestamps ) , which increases ( almost - surely ) while the system executes ( this condition is ensured on the kernel ) . then , under the assumption that the system is _ almost - surely non - zeno _",
    "( which is a desirable property in a real system ) , which means that almost - surely sequences of timestamps diverge , the system has natural attractors , which are all sets defined by an upper bound on the timestamp .",
    "although these attractors may be infinite , they might be useful to analyze time - bounded properties .",
    "fix a time bound @xmath733 .",
    "let @xmath240 be a real - time sts , and let @xmath256 be a denumerable @xmath376-abstraction of @xmath240 which aggregates all states with timestamp larger than @xmath733 into a single absorbing state @xmath734 .",
    "then , if @xmath240 is almost - surely non - zeno ( which has to be proven `` by hand '' , or be structurally obvious ) , @xmath735 is an attractor of @xmath240 , and the abstraction @xmath256 will then be sound ( by applying propositions  [ lemma : toto ] and  [ coro : decsound ] ) .",
    "this will therefore enable the quantitative analysis of time - bounded properties in @xmath240 ( like time - bounded until or reachability properties ) .",
    "we believe that some approximation results for time - bounded properties that can be found in the literature could be justified using that approach , for instance time - bounded verification of gsmps  @xcite .",
    "it would be interesting to revisit results concerning the time - bounded analysis of stochastic hybrid systems ( like  @xcite ) using this new approach , and see whether they all fit in our framework .",
    "the general approach to the qualitative and quantitative analysis of stochastic systems over a possibly continuous state - space can be instantiated in multiple frameworks .",
    "we do it here for two classes of models , namely stochastic timed automata and generalized semi - markov processes .",
    "stochastic timed automata ( sta )  @xcite are stochastic real - time processes derived from timed automata  @xcite by randomizing both the delays and the edge choices .",
    "the semantics of a sta is naturally given via a sts as defined in this paper , although this had not been formulated this way originally .",
    "several decidability results have been proven for subclasses of sta , requiring the development of ad - hoc methods  @xcite , and in  @xcite , we proposed the first unifying method capturing all known decidability results for the qualitative model - checking problem : the so - called _ thick graph _ is a finite graph based on the standard region automaton construction for timed automata  @xcite , which allows one to infer good transfer properties from this finite graph to the original sta when some _ fairness _ property is satisfied .",
    "the current work improves our understanding of  @xcite and allows us both to unify all decidability and approximability results that were known , and to get new approximability results for the quantitative model - checking problem ( of @xmath0-regular properties ) .      to define the model properly , we first give some notations .",
    "let @xmath736 be a finite set of clocks .",
    "we write @xmath737 the set of guards defined as finite conjunctions of constraints of the form @xmath738 , where @xmath739 , @xmath740 and @xmath741 .",
    "guards are interpreted over clock valuations @xmath742 in a natural way  ",
    "we then write @xmath743 .",
    "also , for @xmath37 a valuation we define @xmath744(\\nu)$ ] the valuation assigning @xmath2 to every @xmath745 and @xmath746 to each other clock , and if @xmath747 , we write @xmath748 for the valuation assigning @xmath749 to every clock @xmath750",
    ".    a _ stochastic timed automaton _ ( sta ) is a tuple @xmath751 where :    * @xmath752 is a finite set of states ( or locations ) ; * @xmath753 is the initial state ; * @xmath736 is a finite set of clocks ; * @xmath754 is a finite set of edges ; and * for every configuration @xmath755 , @xmath756 is a(n a priori ) continuous distribution over possible delays from @xmath757 , that is , the support of distribution @xmath756 is @xmath758 ; * and for every @xmath759 , @xmath760 is a positive weight .",
    "originally , the semantics of an sta @xmath761 was defined as a probability measure on the set of possible runs of the underlying timed automaton @xmath762 : a run in such a timed automaton is an alternating sequence of delay transitions and of discrete transitions .",
    "a delay transition is of the form @xmath763 , where @xmath764 is a configuration and @xmath747 , for the configuration @xmath765 . ] and a discrete transition is of the form @xmath766 where @xmath767 is such that @xmath743 , and @xmath768(\\nu ) = \\nu'$ ] .",
    "when @xmath743 , we say that @xmath769 is enabled at @xmath770 .",
    "the probability measure was obtained by sampling delay transitions from a configuration @xmath770 following distribution @xmath756 , and by sampling discrete transitions using the weights : the probability to take edge @xmath769 from configuration @xmath770 is given by @xmath771 if @xmath769 is enabled at @xmath770 , and by @xmath772 otherwise .    to have properly - defined measures we need some sanity assumptions on distributions @xmath773 :",
    "if we write @xmath36 for the lebesgue measure over @xmath44 , it must be the case that for each @xmath774 , if @xmath775 then @xmath776 is equivalent to the restriction of @xmath36 on @xmath777 ; otherwise , it is the uniform distribution over the points of @xmath777 .",
    "we now give the semantics of an sta @xmath761 as an sts @xmath778 as follows .",
    "the set @xmath779 is the set of configurations @xmath780 , @xmath781 is the @xmath5-algebra product between @xmath782 and the borel @xmath5-algebra on @xmath783 , and the kernel @xmath784 is defined by : @xmath785(\\nu+d ) ) \\cdot p_{\\gamma+d}(e ) \\",
    "\\ud \\mu_\\gamma(d)\\ ] ] where @xmath786 is the characteristic function of @xmath165 , and @xmath787 is equal to @xmath788 if @xmath769 is enabled at @xmath789 , and @xmath2 otherwise .",
    "it gives the probability to hit set @xmath790 from configuration @xmath770 in one step ( composed of a delay transition followed by a discrete transition ) .",
    "the probability measure on paths derived from @xmath791 in section  [ section : prelimmeasure ] coincides with the original definition of  @xcite .",
    "we fix for the rest of this section an sta @xmath761 , and @xmath792 its corresponding sts",
    ".      the thick graph of  @xcite is an abstraction in our context . to see this",
    ", we recall the concept of regions , that have been designed for standard timed automata  @xcite .",
    "we write @xmath793 the maximal integer appearing in a guard of @xmath794 .",
    "let @xmath795 be two valuations over @xmath736 .",
    "we say that @xmath37 and @xmath796 are _ region - equivalent _ for @xmath794 whenever the following conditions hold :    1 .   for every @xmath750 ,",
    "either both @xmath746 and @xmath797 are stricly larger than @xmath793 , or the integral parts of @xmath746 and @xmath797 coincide ; 2 .   for every @xmath798 such that @xmath799 , writing @xmath800 for the fractional part , @xmath801 if and only if @xmath802 .",
    "this region - equivalence has finite - index , and partitions the set of valuations @xmath803 into classes which are called _ regions _ , and we write @xmath804 for the set of regions .",
    "if @xmath805 , we write @xmath806_{{\\cal a}}$ ] for the region to which @xmath37 belongs .",
    "we define the abstraction @xmath807 as the projection which associates @xmath808 onto @xmath809_{{\\cal a}})$ ] .",
    "we then define the finite markov chain @xmath810 as follows :    * its set of states is @xmath811 ; * there is an edge from @xmath812 to @xmath813 whenever there exists some @xmath814 such that @xmath815 ; * from each state @xmath816 , we associate the uniform distribution over @xmath817 .    by construction , we get :    @xmath810 is a finite @xmath376-abstraction of @xmath791 .",
    "let us notice that finiteness of the abstraction implies completeness ( lemma  [ lemma : finite - soundness ] ) .    as witnessed in (",
    "* appendix  d.2 ) , this abstraction may not give much information in general about the probability of linear - time properties in the original sta ( see example  [ example : pacman ] ) .",
    "however we will see that , in several cases , it helps to obtain decidability and approximability results ( among which some are new ) .",
    "[ example : pacman ] consider the sta @xmath794 of figure  [ fig : pacman ] , with : @xmath818 , @xmath819 and the set of edges @xmath820 is described on the figure .",
    "we assume that each edge has a weight of  @xmath27 and that each location is either equipped with a uniform distribution over delays ( in @xmath821 , @xmath822 and @xmath823 ) or a dirac distribution over delays ( in @xmath824 and @xmath825 ) .",
    "as said previously , it can be considered as a sts @xmath791 where the set of states is given by @xmath826 and the markov kernel is computed according to the distributions over the edges and the delays .",
    "we know that the thick graph viewed as a finite markov chain , @xmath827 , is an @xmath376-abstraction of @xmath791 , but it can be shown that it is not sound .",
    "indeed consider the dirac distribution @xmath828 as the initial distribution , then the pushforward of @xmath376 of this distribution is also a dirac distribution on location @xmath821 in region @xmath829 .",
    "consider the set of states @xmath830 that we will abusively write @xmath822 and which is @xmath376-closed .",
    "it has been shown in  ( * ? ? ?",
    "* section  6.2.2 ) that @xmath831 , but @xmath832 .",
    "( -6,-1.4 )  ( 6,.7 ) ; ( 0,0 ) node[draw , circle , inner sep=2pt ] ( q0 ) @xmath821 ; ( 3,0 ) node[draw , circle , inner sep=2pt ] ( q1 ) @xmath824 ;    ( 6,0 ) node[draw , circle , inner sep=2pt ] ( q3 ) @xmath822 ;    ( -3,0 ) node[draw , circle , inner sep=2pt ] ( q4 ) @xmath825 ;    ( -6,0 ) node[draw , circle , inner sep=2pt ] ( q6 ) @xmath823 ;    ( q0 )  ( 0,-1 ) ;    ( q0 )  ( q1 ) node[pos=.5 , above , sloped ] @xmath833 ;    ( q1 )",
    " ( q3 ) node[pos=.5 , above , sloped ] @xmath834 node[pos=.5 , below , sloped ] @xmath835 ;    ( q3 ) ",
    "+ + ( 0,-1.5 )  node [ midway , above ] @xmath836 node [ midway , below ] @xmath837 + + ( -5,0 )  ( q0 ) ; ( q0 )  ( q4 ) node[pos=.5 , above , sloped ] @xmath838 ;    ( q4 )  ( q6 )",
    "node[pos=.5 , above , sloped ] @xmath839 node[pos=.5 , below , sloped ] @xmath835 ;    ( q6 ) ",
    "+ + ( 0,-1.5 )  node [ midway , above ] @xmath840 node [ midway , below ] @xmath837 + + ( 5,0 )  ( q0 ) ;    in  @xcite , a condition for @xmath791 to be a useful abstraction was identified as _ fairness _ ( the weakest notion defined in the current paper ) .",
    "fairness is not sufficient for all the approximability results .",
    "later , in  @xcite , the condition was identified as ( strong ) decisiveness , but this was not sufficient for approximability of @xmath0-regular properties . here",
    "we realize that we have a finite - attractor property ( through an abstraction ) , and that conditions of proposition  [ prop : attractorsound ] will actually always be fulfilled , allowing us to infer the whole class of decidability and approximability results through proposition  [ coro : decsound ] .",
    "following  @xcite , the sta @xmath841 is said _ reactive _ whenever for every configuration @xmath842 , @xmath843 , and for every @xmath844 , there exists a distribution @xmath845 with support @xmath846 such that for every @xmath847 , @xmath848 .",
    "we take the notations used in the previous subsection for defining the thick - graph abstraction .",
    "a region @xmath849 is said _",
    "whenever for every clock @xmath750 , either @xmath850 for every @xmath851 , or @xmath852 for every @xmath814 .",
    "we write @xmath853 for the set of memoryless regions . from (",
    "* lemma  13 ) , which states that memoryless regions are visited infinitely often almost - surely from every configuration @xmath854 , time units ; since there is one single distribution which is applied at every configuration of a given location , the probability to do so is uniformly bounded from below from every configuration . ]",
    "we get :    [ prop : reactive - attractor ] the set @xmath855 is an attractor for @xmath791 .    using propositions  [ prop : attractorsound ] and  [ coro : decsound ] , we also get that :    [ prop : stareactivesound ] @xmath810 is a sound @xmath376-abstraction of @xmath791 .    it can easily be shown that @xmath856 is a finite attractor of @xmath810 .",
    "thanks to proposition  [ prop : reactive - attractor ] , @xmath857 is an attractor for @xmath810 .",
    "it remains to show the last condition of the hypotheses of proposition  [ prop : attractorsound ] .",
    "we therefore need to prove that for each @xmath858 , there are @xmath460 and @xmath461 such that for each region @xmath859 :    * for each @xmath860 , @xmath861 \\alpha^{-1}(\\ell , r))\\geq p$ ] , or * for each @xmath860 , @xmath862 .",
    "this is a consequence of ( * ? ? ?",
    "* lemma  f.4 ) which says that from a memoryless region , the future ( and its probability ) is independent of the precise current configuration .",
    "this in particular implies that for two configurations @xmath863 , for every @xmath376-closed set @xmath165 , for every integer @xmath864 , @xmath865 b ) =    \\prob_{\\delta_{\\gamma'}}^{\\calt_{{\\cal a}}}(\\f[=k ] b)$ ] . by extension , for every @xmath860 ,",
    "@xmath866 b ) =    \\prob_{\\delta_{\\gamma}}^{\\calt_{{\\cal a}}}(\\f[=k ] b)$ ] .",
    "this implies the expected bounds , by taking @xmath867 .",
    "similarly to labelled sts , we consider labelled sta , where each location is labelled by atomic propositions . as consequences of sections  [",
    "sec : qualitative ] and  [ sec : quantitative ] , we get the following decidability and approximability results for reactive sta :    [ coro : staresults ] let @xmath794 be a reactive labelled sta , and @xmath147 a dma . then :    1 .",
    "we can decide whether @xmath794 satisfies almost - surely @xmath147 ; 2 .   for every initial distribution @xmath52 which is numerically amenable w.r.t .",
    "@xmath794 is numerically amenable w.r.t .",
    "@xmath794 if , given @xmath601 , given @xmath300 and given a sequence of locations and regions @xmath868 , one can approximate @xmath869 up to @xmath692 . ] , we can compute arbitrary approximations of @xmath870 .",
    "this is an application of theorem  [ theo : titi ] , corollary  [ coro : theotiti ] and of sections  [ subsec : approx - reach ] and  [ subsec : quantmullerabstr ] .",
    "it should be noted that all the hypotheses are met :    * @xmath871 has a finite attractor : since @xmath810 is a finite mc then so is @xmath871 and we get a trivial finite attractor ; * @xmath872 is decisive w.r.t .",
    "any @xmath628-closed sets .",
    "this second point is a little more tricky .",
    "first one should realise that since @xmath791 is a reactive , then @xmath872 is also reactive since the condition to be reactive , concerns only the distributions over the delays on each location of the sta and those distributions are not modified from the product with @xmath147 .",
    "it should be noted that @xmath871 corresponds to the thick region graph abstraction of @xmath872 since @xmath147 does not influence the behaviour of @xmath791 .",
    "then from proposition  [ prop : stareactivesound ] , we know that @xmath871 is a sound @xmath376-abstraction of @xmath872 . since @xmath871 is a finite mc , we get that it is decisive w.r.t .",
    "any set of states .",
    "we can thus conclude from proposition  [ thm : mudecisiveabstr ] .",
    "we believe that the proposed approach through abstractions and finite attractors simplifies drastically the proof of decidability of almost - sure model - checking , and in particular avoids the ad - hoc but long and technical proof of  ( * ? ? ?",
    "* lemma  7.14 ) .",
    "furthermore , we obtain interesting approximability results , some of them being consequences of  @xcite , but the general case of @xmath0-regular properties ( in particular properties ) being new to this paper .    corollary  [ coro : staresults ] can be extended to properties expressed as deterministic and complete muller _ timed _ automata ( dcmta ) , which are standard deterministic and complete , and every @xmath873 , there is an edge labelled by that subset which is enabled after @xmath874 time units .",
    "so this is complete w.r.t time and actions . ]",
    "timed automata  @xcite with a muller accepting condition . indeed , the product of a reactive sta with such a dcmta is reactive . hence , the whole theory that we have developed applies : the sts of the product has a finite sound abstraction .",
    "this allows to express rich properties with timing constraints and evaluate their likelihood in the sta .      we will apply a similar reasoning to single - clock sta .",
    "we therefore assume that @xmath794 is now a single - clock sta . as in  (",
    "* section 7.1 ) , we assume the following conditions :    a.   for all @xmath875 , for all @xmath876 , the function @xmath877 is continuous ; b.   if @xmath878 for some @xmath879 , and if @xmath880 for each @xmath881 , then @xmath882 ; c.   there is @xmath883 such that for every state @xmath770 with @xmath777 unbounded , @xmath884 ,    where for each @xmath885 and for each @xmath886 , @xmath887 .",
    "these requirements are technical , but they are rather natural and easily satisfiable .",
    "for instance , a timed automaton equipped with uniform ( resp .",
    "exponential ) distributions on bounded ( resp .",
    "unbounded ) intervals satisfy these conditions .",
    "if we assume exponential distributions on unbounded intervals , the very last requirement corresponds to the bounded transition rate condition in  @xcite , required to have reasonable and realistic behaviours .    in  (",
    "* section 7.1 ) , there is no clear attractor property . from the details of the proofs we can nevertheless define @xmath888 where @xmath889 is the region composed of the single null valuation .",
    "[ prop : oneclock - attractor ] the set @xmath890 is an attractor for @xmath791 .",
    "let @xmath891 .",
    "the set of regions for @xmath794 can be chosen as @xmath892c_{i-1};c_i [ \\mid 1 \\le i \\le h\\}$ ] ( see  @xcite ) .    following the proof of  (",
    "* theorem 7.2 ) , the set of infinite paths in @xmath794 can be divided into ( a ) the set of paths that take resetting edges infinitely often , and ( b ) the set of paths that take resetting edges only finitely often .",
    "we assume that the probability that ( a ) happens is positive , and we reason now in the @xmath5-algebra which is conditioned by ( a ) .",
    "then under condition ( a ) , @xmath893 is reached almost - surely .",
    "we assume that the probability that ( b ) happens is positive , and we reason now in the @xmath5-algebra which is conditioned by ( b ) . under condition ( b )",
    ", almost - surely the value of the clock is non - decreasing along the path , and almost - surely a final region @xmath849 is reached ( that is , ultimately the value of the clock along the path belongs to @xmath849 forever ) .",
    "we fix such a region @xmath849 , and we condition again with regard to that `` final region '' @xmath849 .",
    "we write @xmath894 for the event ( b ) intersected with `` the path ends up in @xmath849 '' .",
    "let @xmath895 be a strict successor region of @xmath849 , with dimension at least as big as that of @xmath849 ( if @xmath849 is an open interval , then @xmath895 has to be an open interval )",
    ". there exists @xmath896 such that for every @xmath814 , for every @xmath897 , for every @xmath898 with @xmath899 , @xmath900 .",
    "hence , using standard technics , we show that with probability @xmath27 , if infinitely often such edges are enabled , infinitely often they will be taken ; this contradicts hypothesis @xmath894 .",
    "hence , under condition @xmath894 , with probability @xmath27 , one can not visit infinitely often configurations enabling edges guarded by some strict time - successor @xmath895 of @xmath849 .",
    "once this is assumed , we can then show that almost - surely , only finitely many resetting edges can be enabled .",
    "this means that , under condition @xmath894 , almost - surely , ultimately only states of @xmath901 are visited .",
    "hence , that set is an attractor , under condition ( b ) .    using some bayes formula w.r.t .",
    "conditions ( a ) and ( b ) , we conclude that @xmath890 is an attractor ; this ends the proof .    as before ,",
    "we get :    @xmath810 is a sound @xmath376-abstraction of @xmath791 .",
    "we easily get that @xmath902 is a finite attractor for @xmath810 , whereas @xmath890 is an attractor for @xmath791 ( proposition  [ prop : oneclock - attractor ] ) .    as for reactive sta , it remains to show the last property appearing in the hypotheses of proposition  [ prop : attractorsound ] .",
    "the required bounds obviously exist for the region @xmath889 ( since only a single valuation belongs to @xmath889 ) .",
    "furthermore , as argued in the proof of proposition  [ prop : oneclock - attractor ] , when condition ( b ) is assumed , ultimately , the paths almost surely end up in @xmath903 , hence , ultimately , the sta behaves like a * finite * markov chain .",
    "the required bounds can be inferred .",
    "this allows to conclude that @xmath810 is a sound @xmath376-abstraction of @xmath791 ( using propositions  [ prop : attractorsound ] and  [ coro : decsound ] ) .    as a consequence",
    ", we get the following decidability and approximability results for one - clock sta :    [ coro : staoneclockresults ] let @xmath794 be a one - clock labelled sta , and @xmath147 a dma . then :    1",
    ".   we can decide whether @xmath794 satisfies almost - surely @xmath147 ; 2 .   for every initial distribution @xmath52 which is numerically amenable w.r.t .",
    "@xmath794 , we can compute arbitrary approximations of @xmath870 .    similarly to the proof of corollary  [ coro : staresults ] , this is an application of theorem  [ theo : titi ] , corollary  [ coro : theotiti ] and of sections  [ subsec : approx - reach ] and  [ subsec : quantmullerabstr ] .",
    "the facts that :    * @xmath871 has a finite attractor , and * @xmath872 is decisive w.r.t .",
    "any @xmath376-closed sets .    can be deduced by similar arguments .",
    "we only observe that if @xmath791 is a single - clock sta , then so is @xmath872 and that hypotheses ( i ) , ( ii ) and ( iii ) are preserved through the product with @xmath147 as those only concern distributions over the sta which are not altered from the product with @xmath147 .",
    "the proof of the existence of an attractor is very similar to the one we used for proving the fairness property in  ( * ? ? ?",
    "* section 7.1 ) .",
    "however , for free , we get all the approximation results ( as previously only few results could be inferred from  @xcite ) ! it is worth noting that these results encompass the results of  @xcite , where a strong assumption on cycles of the sta were made ( but a closed - form for the probability could be computed ) .",
    "we remark here that the graph used in  @xcite is actually the graph of the attractor , as done in section  [ subsec : qual - dmc ] .",
    "a generalized semi - markov process  @xcite is a stochastic process with a finite control , and built on a set of events .",
    "each event is equipped with a random variable representing its duration : an event can either be a variable - delay event , defined by a density function , or be a fixed - delay event , modelled by a dirac distribution .",
    "a transition is characterized by a set of events which expire , and schedules a set of new events .",
    "this model is known to generalize continuous - time markov chains .",
    "a _ generalized semi - markov process _ ( gsmp ) is a tuple @xmath904 where    * @xmath143 is a finite set of states ; * @xmath905 is a finite set of events ; * @xmath906 and @xmath907 are bounds such that for every @xmath908 , @xmath909 ; * @xmath910)$ ] assigns distributions to every event @xmath908 ; * @xmath911 assigns to each state @xmath912 a set of events enabled ( or active ) in @xmath912 ; * @xmath913 is the successor function defined for @xmath914 whenever @xmath915 ;    each event @xmath916 has an upper ( resp .",
    "lower ) bound @xmath917 ( resp .",
    "@xmath918 ) on its delay : the duration of event @xmath769 is randomly chosen in the interval @xmath919 $ ] according to density @xmath920 .",
    "in contrast to _ fixed - delay _ events , @xmath769 is called a _ variable - delay _ event , if @xmath921 .",
    "events can alternatively be seen as random variables : with a variable - delay event is associated a density function and with a fixed - delay event is associated the corresponding dirac distribution .",
    "the semantics of a gsmp @xmath922 is given as an sts @xmath923 .",
    "there are two points - of - view to define the semantics of @xmath922 , one is through a residual - time semantics using races between events  @xcite ( clocks behave like in timed automata ) , and the other is to sample the delay of an event once , when it is scheduled  @xcite ( clocks are `` countdown '' ) .",
    "though the results of  @xcite are stated using the first convention , we prefer the second option , since it is easier to understand the semantics .",
    "note that the duality between the two allows obviously to interpret the results of  @xcite in our setting .",
    "configurations of @xmath922 are elements of @xmath924 where @xmath925 .",
    "let @xmath912 be a state and @xmath926 is a valuation for @xmath912 whenever @xmath927 if @xmath928 , and @xmath929 otherwise ; in the latter case , @xmath930 is the remaining time for @xmath769 before expiring .",
    "let @xmath931 be a configuration , and define @xmath932 and @xmath933 for @xmath934 . from configuration @xmath770",
    ", there is a transition to any configuration @xmath935 on occurrence of the set of events @xmath936 after delay @xmath937 whenever : @xmath938    let @xmath931 , and @xmath939 .",
    "then , assuming @xmath940 , we define : @xmath941 where @xmath942 if @xmath943 ; @xmath944 if @xmath945 ; @xmath946 if @xmath947 . in other words , for a newly activated event @xmath769 , its timestamp @xmath948 is sampled ( independently from the other events ) according to density @xmath949 .",
    "before defining the abstraction , we will state two important results proven in  @xcite .      in this part",
    ", we assume the gsmp @xmath922 has no fixed - delay events , that is , for every event @xmath769 , @xmath950 .",
    "it is nevertheless worth to notice that the study of  @xcite is more precise , in that it allows some fixed - delay events , the restriction being that of _ single - ticking_. however our point is not the study of fixed - delay events , but an abstract view on results concerning gsmps .",
    "let @xmath300 .",
    "we define the notion of @xmath692-separated configuration by @xmath931 is _ @xmath692-separated _ if for every @xmath951 , either @xmath952 or @xmath953 .",
    "we write @xmath954 for the set of @xmath692-separated configurations .",
    "we recall here two technical lemmas ( using our notations ) which will be useful for our purpose :    [ lemma1 ] there exists @xmath300 , @xmath955 and @xmath956 such that for every @xmath957 , @xmath958    c_\\calg^\\varepsilon ) \\ge p_1 $ ] .",
    "[ lemma2 ] for every @xmath300 and @xmath601 , there is @xmath959 such that for all @xmath960 such that there is a path @xmath961 in @xmath962 , for every @xmath963 with @xmath814 , @xmath964 \\{(q',\\nu ' ) \\mid \\nu ' \\in r'\\ } ) >    p_2 $ ] .      due to the choice of the countdown - clock semantics ( `` clock values '' decrease down to @xmath2 ) , the thick graph defined in subsection  [ subsubsec : thickgraph ] has to be twisted a bit and refined with respect to the set of @xmath692-separated configurations to be used in our framework .    following lemma  [ lemma1 ] , we select @xmath300 , and w.l.o.g .",
    "we assume @xmath692 is of the form @xmath965 with @xmath966 .",
    "we let @xmath967 be the maximal constant appearing in constants @xmath968 and @xmath969 .",
    "each event @xmath908 is virtually assigned a clock variable @xmath970 , and we consider a refinement of the region equivalence for clocks @xmath971 w.r.t .",
    "maximal constant @xmath967 and granularity @xmath965 as follows .",
    "two valuations @xmath972 are equivalent whenever the following conditions hold :    1 .   for every @xmath908 , either both @xmath930 and @xmath973 are stricly larger than @xmath967 , or the integral parts of @xmath974 and @xmath975 coincide ; 2 .   for every @xmath976 , for every @xmath977 $ ] , for every @xmath978 , @xmath979 if and only if @xmath980 .    note that the above conditions refine the ones given in subsection  [ subsubsec : thickgraph ] using diagonal constraints ( @xcite ) , and w.r.t .",
    "the granularity as well .",
    "we also realize that any region @xmath981 has either only @xmath692-separated configurations , or only non-@xmath692-separated configurations .",
    "we write @xmath982 for the set of equivalence classes , also called regions .",
    "we then define the abstraction @xmath983 by projection , and the finite markov chain @xmath984 as follows :    * its set of states is @xmath985 ; * there is an edge from @xmath986 to @xmath987 whenever there exists @xmath814 such that @xmath988 ; * from each state @xmath989 , we associate the uniform distribution over @xmath990 .",
    "since @xmath984 is just a rescaling of a standard region automaton , we immediately get :    @xmath984 is a finite @xmath376-abstraction of @xmath991 .    as previously",
    ", we notice that the above abstraction is obviously complete ( since it is finite ) .",
    "it is argued in  @xcite that this abstraction is not always meaningful for having information about the almost - sure satisfaction of properties by @xmath922 .",
    "let @xmath992 . as a direct consequence of lemma  [ lemma1 ] we get :",
    "the set @xmath993 is an finite attractor for @xmath991 .    finally , as for stas and using lemma  [ lemma1 ] and  [ lemma2 ]",
    ", we also get :    @xmath994 is a sound @xmath376-abstraction of @xmath991 .    as consequences , we get the following decidability and approximability results for gsmps :    let @xmath922 be a single - ticking labelled gsmp , and @xmath147 be a dma . then :    1 .",
    "we can decide whether @xmath922 satisfies almost - surely @xmath147 ; 2 .   for every initial distribution @xmath52 which is numerically amenable w.r.t .",
    "@xmath922 , is numerically amenable w.r.t .",
    "@xmath922 if , given @xmath601 , given @xmath300 and given a sequence of states and refined regions @xmath995 , one can approximate @xmath996 up to @xmath692 . ]",
    "we can compute arbitrary approximations of @xmath997 .",
    "again , the proof is similar to the ones of corollaries  [ coro : staresults ] and  [ coro : staoneclockresults ] .",
    "we just notice that it is obvious that if @xmath991 is a gsmp with no fixed - delay events , then so is @xmath998 .",
    "we believe our approach gives new hints into the approximate quantitative model - checking of gsmps , for which , up to our knowledge , only few results are known .",
    "for instance in  @xcite , the authors approximate the probability of until formulas of the form `` the system reaches a target before time @xmath999 within @xmath864 discrete events , while staying within a set of safe states '' ( resp . ``",
    "the system reaches a target while staying within a set of safe states '' ) for gsmps ( resp . a restricted class of gsmps which can be proved to be @xmath1000 ) , and study numerical aspects .",
    "our approach permits to do the same with any reachability or time - bounded - delay event ) gsmps are obviously almost - surely non - zeno . ] until property on the whole class of single - ticking gsmps .",
    "the numerical aspects in our computations can be dealt with as in  @xcite .",
    "we now give an overview of the results presented in this paper . in the interest of space ,",
    "not all precise statements are listed . for instance",
    ", we omit the results which assume a fixed initial distribution .",
    "also , few notations are borrowed from the paper , yet the global picture is almost self - contained .",
    "the idea is the following . given an sts @xmath16 and a property @xmath164 , figures  [ fig : qualitative ] and  [ fig : quantitative ] provide the assumptions @xmath16 should satisfy to be able to perform the qualitative or quantitative analysis of @xmath164 on @xmath16 .",
    "note that when we consider abstractions @xmath1001 , then we assume @xmath1002 .",
    "then , figures  [ fig : properties ] ,  [ fig : transfer ] and  [ fig : abstraction ] summarize the relationships between the various notions . they should be used to know how to prove the properties that are expected of the model , either directly or via an abstraction ( which needs to be designed ) .",
    "( hyp ) @xmath454@xmath1003@xmath1004 ;    ( conc ) [ right = of hyp , xshift=.5 cm ]    [ cols= \" < \" , ]     ;    ( decisive )  ( sound ) node [ midway , below ] prop .  [ coro : decsound ] ;    background2 ;",
    "this paper deals with general stochastic transition systems ( hence possibly continuous state - space markov chains ) .",
    "we defined abstract properties of such stochastic processes , which allow one to design general procedures for their qualitative or quantitative analysis .",
    "effectivity of the approach requires some effectiveness assumption on specific high - level formalisms that are used to describe the stochastic process .",
    "we have demonstrated the effectiveness of the approach on two classes of systems : stochastic timed automata on the one hand , and generalized semi - markov processes on the other hand , can be instantiated in our framework . in both cases ,",
    "we recover known results ; but our approach yields further approximability results , which , up to our knowledge , are new .",
    "we believe that , more importantly , we provide in this paper a methodology to understand stochastic models from a verification and algorithmics point - of - view .",
    "section  [ sec : guide ] gives a high - level description of our results , and of properties that should be satisfied by the stochastic model in order to apply our algorithms .",
    "in many cases , we showed that the hypotheses were really necessary to get the expected results , by providing counter - examples when the hypotheses are relaxed .",
    "as future work , we plan to investigate new applications , such as for instance the real - time stochastic systems generated by stochastic petri nets , or the infinite - state systems appearing in parameterized verification .",
    "also , we would like to adopt a similar generic approach for processes with non - determinism like markov decision processes , or even stochastic two - player games .",
    "[ app : probpathsequiv ]    we have to show that for each @xmath1005 , @xmath1006 .",
    "since the complementary of each cylinder is a finite union of cylinders and since each denumerable unions of cylinders can be written as a denumerable disjoint union of cylinders , it suffices to show this for each cylinder @xmath1007 with @xmath1008 .",
    "we have to show that for each @xmath1008 , @xmath1009 it should be observed that , by symmetry , it suffices to show one of the implications .",
    "first , assume @xmath1010 and fix @xmath1011 .",
    "then from the definition of @xmath62 and @xmath1012 and from the hypothesis , we get that : @xmath1013 now consider @xmath1014 and fix @xmath1015 .",
    "suppose that @xmath1016 , i.e. from the definition : @xmath1017 write @xmath1018 .",
    "we can write @xmath1019 which is in @xmath4 from the hypotheses over @xmath15 . from  , we can easily check that @xmath1020 , which implies that @xmath1021 and thus @xmath1022 using again the definition , it follows that @xmath1023 .",
    "now , assume that @xmath1024 , fix @xmath1025 and assume that @xmath1026 .",
    "remember that @xmath1027 we inductively define : @xmath1028 from the hypotheses over @xmath15 , it is easily seen that for each @xmath1029 , @xmath1030 .",
    "let us consider the value @xmath1031 . from the definition of @xmath1032",
    ", it holds that @xmath1033 we thus get that @xmath1034 we prove the two following statements : for each @xmath1035 ,    a.   @xmath1036 and b.   @xmath1037    where if @xmath1038 , @xmath1039 will stand for the initial distribution @xmath52 . point ( a ) is here in order to establish that the sets @xmath1040 are measurable , and point ( b ) aims at reducing our integrals to sets whose images have positive values .",
    "it should be observed that the second point is an immediate consequence of the first point .",
    "we thus only need to prove point ( a ) .",
    "we do this by induction over @xmath252 .",
    "first , if @xmath1041 , we show that @xmath1042 which will ensure that ( a ) is satisfied .",
    "first assume that @xmath1043 is such that @xmath1044 towards a contradiction , assume that @xmath1045 .",
    "then it holds that @xmath1046 which is the needed contradiction .",
    "now assume that @xmath1047 .",
    "then from the definitions of @xmath1032 and of @xmath1048 , and from classical properties on integrals , it is straightforward to check that the second inclusion holds .",
    "now suppose that point ( a ) holds for each @xmath1049 for some @xmath1050 , and let us show that it is still true for @xmath252 .",
    "as before , it suffices to establish that @xmath1051 the first inclusion can be verified just like in the first case .",
    "now assume that @xmath1052 .",
    "we know that @xmath1053 using the induction hypothesis over @xmath1054 , we get that for each @xmath1055 , @xmath1056 and since @xmath1052 , this induces that @xmath1057 which concludes that point ( a ) is satisfied .",
    "hence from points ( a ) and ( b ) , we get that @xmath1058 since @xmath1059 and since @xmath1060 , it follows that @xmath1061 . from the hypothesis",
    ", we thus get that @xmath1062 . now observing that we can prove similarly that @xmath1063 , we can establish that @xmath1064 which concludes the proof .",
    "[ app : lemma_integration ]    the proof is by induction on @xmath1065 .",
    "assume that @xmath1066 , we have to show : @xmath1067 .",
    "first , @xmath1068 now let us unfold @xmath1069 : @xmath1070 now fix @xmath1071 and assume that for each for each @xmath1072 the equality above holds .",
    "we will prove that it is still the case for @xmath1065 .",
    "first , observe that if @xmath1073 then the induction hypothesis states that @xmath1074 which is what we wanted . otherwise , if @xmath1075 , then the hypothesis induction states that @xmath1076 then using a similar argument as in the first case , we get that @xmath1077 since @xmath1078 .",
    "this concludes the proof .",
    "[ app : product - sigma - algebra ]    it suffices to show that    a.   @xmath183 contains all rectangles ; b.   @xmath1079 ; and c.   @xmath183 is a @xmath5-algebra .",
    "property ( i ) follows from the decomposition any rectangle @xmath1080 into elements of @xmath183 : @xmath1081    property ( ii ) is straightforward since for every @xmath608 , @xmath1082 and thus , the union @xmath1083 also belongs to the @xmath5-algebra @xmath172 .",
    "we finally establish property ( iii ) .",
    "first @xmath183 is non - empty as @xmath1084 .",
    "then , for @xmath1085 , the complement    @xmath1086 still belongs to @xmath183 since @xmath4 is a @xmath5-algebra and hence for each @xmath912 , @xmath1087 .",
    "similarly , we get that @xmath183 is closed under denumerable unions .",
    "[ app : produit - technique ]    we will establish a link between distributions over @xmath48 and distributions over @xmath1088 . in order to do so ,",
    "we introduce some notations . given @xmath1089 we write for each @xmath252 , @xmath1090 .",
    "also given @xmath1091 and @xmath608 we inductively define @xmath1092 observe that since @xmath147 is deterministic , those states are uniquely defined .",
    "we then have the following result .",
    "the proof of the above proposition will then be a direct consequence of the next lemma .",
    "[ lemma : probproduct ] for each initial distribution @xmath67 for @xmath16 , for each state @xmath608 of @xmath147 , for each @xmath277 and for each @xmath1093 , it holds that @xmath1094    we prove it by induction over @xmath60 .",
    "first if @xmath1010 , we have to show that for every @xmath67 , every @xmath608 and every @xmath1095 , @xmath1096 which is trivial from the definition of @xmath1097 .",
    "now fix @xmath1098 .",
    "assume that for each @xmath503 , the above property holds true and show that it is still the case for @xmath1099 .",
    "let @xmath67 , @xmath608 and @xmath1100 .",
    "we have that @xmath1101 using the induction hypothesis , we get that @xmath1102 combining with  , we thus obtain that @xmath1103 which concludes the proof .",
    "[ app - btildemes ]    we first prove the first point .",
    "remember that given @xmath81 , @xmath1104 . observe that we can write : @xmath1105 it thus suffices to show that for each @xmath1098 , @xmath1106 we will use similar arguments as in the proof of lemma  [ lemma : equiv ] . remember that if @xmath1107 , it holds that @xmath1108 .",
    "first , if @xmath1010 then this set corresponds to the set @xmath1109 which is in @xmath4 . now if @xmath1014 then @xmath1110 which is in @xmath4 from the hypotheses over @xmath15 .",
    "now assume that @xmath1024 , it hold that @xmath1111 we inductively define : @xmath1112 from the hypotheses over @xmath15 , it holds that @xmath1113 for each @xmath1114 . in the sequel",
    ", @xmath1115 denotes @xmath291 . as in the proof of lemma  [ lemma : equiv ] , we can show that firstly , @xmath1116 and that for each @xmath1117 ,    a.   @xmath1118 and b.   @xmath1119    it follows that @xmath1120 now since for each @xmath1121 , @xmath1122 , it holds that @xmath1123 if and only if @xmath1124 , i.e. if and only if @xmath1125 . and",
    "since @xmath1126 , it follows that @xmath1127 and thus @xmath1128    the second property is a direct consequence of the definition of @xmath211 .",
    "we now focus on the third property . towards a contradiction ,",
    "assume that there is @xmath67 such that @xmath214 but @xmath1129 .",
    "it follows that there is @xmath1130 such that @xmath1131 and thus @xmath1132 which is the wanted contradiction .",
    "let us show the fourth item .",
    "it should be observed that given @xmath67 , @xmath1133 . it thus suffices to show that @xmath1134 . since @xmath1135 , towards a contradiction , we assume that @xmath1136 . since @xmath1137 it follows that there is @xmath277 and @xmath1138 such that @xmath1139    from lemma  [ lemma : integration ]",
    ", writing @xmath1140 , we get that @xmath1141 and from the third property proven previously , we deduce that @xmath1142 with @xmath1143 which contradicts the second property of this lemma .    finally , we prove the last property .",
    "it is straightforward by observing that the two events measured in this equality are exactly the same : @xmath1144",
    "fix @xmath408 and @xmath409 . for each @xmath392",
    ", we have that @xmath1145 . if @xmath1146 , then @xmath1147 and thus @xmath1148 . otherwise , if @xmath1149 , then @xmath1150 and thus @xmath1151 .",
    "this directly implies that @xmath410 .",
    "we show this by induction on @xmath252 .",
    "case @xmath1152 is by definition . fix some @xmath22 and assume that the statement holds true for each @xmath1153 . by induction hypothesis , we have that @xmath413 is equivalent to @xmath414 .",
    "we want to show that @xmath1154 is equivalent to @xmath1155 .",
    "we first notice that @xmath1156 is equivalent to @xmath1155 .",
    "indeed write @xmath1157 and @xmath1158 . from the induction hypothesis , we know that @xmath37 and @xmath796 . following a similar argument as in the proof of lemma  [ lemma : equiv ] and from the definition of @xmath1159 , we can deduce that @xmath1160 is equivalent to @xmath1161 .",
    "so it remains to show that @xmath1162 is equivalent to @xmath1163 , when @xmath1164 .",
    "this is by definition of an @xmath376-abstraction .",
    "we do the proof by induction on @xmath60 .",
    "the case @xmath1010 is obvious from the definition of @xmath386 .",
    "now fix @xmath1107 and assume that for each @xmath1165 , for each @xmath391 and for each @xmath1166 , @xmath1167 we show that it is still the case for @xmath60 . fix @xmath391 and @xmath1168 .",
    "we let @xmath1169 and @xmath1170 .",
    "note that we hence assume that @xmath1171 .",
    "we first realize that @xmath1172 . indeed for each @xmath392",
    ", @xmath1173 then , applying lemma  [ lemma : integration ] , we get : @xmath1174 and @xmath1175 by definition of an @xmath376-abstraction , the measures @xmath1176 and @xmath1177 are equivalent .",
    "hence from lemma  [ lemma : equiv ] , @xmath1178 from the hypothesis of induction , we get that @xmath1179 since @xmath1180 , we conclude : @xmath1181 we still have to consider the case where @xmath1182 . in that case ,",
    "@xmath1183 and thus @xmath1184 which terminates the proof .",
    "[ app : dmc ]    we handle the case of soundness . indeed assume that for each @xmath1185 and for each @xmath435 , the condition presented in the statement ( second item ) holds true . then fix @xmath391 , @xmath435 and assume that @xmath1186 and show that @xmath1187 .",
    "towards a contradiction , assume that @xmath1188 .",
    "then , since @xmath256 is a dmc , there is @xmath1185 such that @xmath1189 and @xmath1190 from the hypothesis , it follows that @xmath1191 .",
    "observe that since @xmath1189 , we have that @xmath1192 .",
    "hence we get a contradiction by noticing : @xmath1193    [ app - attractorsound ]    fix @xmath466 and @xmath391 .",
    "we want to show that @xmath240 is @xmath52-decisive w.r.t .",
    "we therefore have to show that @xmath1194 . towards a contradiction",
    "we assume that @xmath1195 , i.e. @xmath1196 .",
    "since @xmath1197 is an attractor of @xmath240 , we deduce from lemma  [ lemma : attractorgf ] that @xmath1198 , hence : @xmath1199 we let @xmath1200 be the subset of states @xmath291 of @xmath457 such that : @xmath1201 due to equation  , @xmath474 is non - empty , and furthermore every such @xmath291 belongs to @xmath1202 and @xmath1203 .",
    "we set @xmath1204 .",
    "in particular , @xmath1205 , hence from lemma  [ lemma : btildecomplementaire ] ( third item ) we get that for every @xmath1206 , @xmath1207 . according to hypothesis @xmath465 , for every @xmath1208",
    ", we can find @xmath1209 and @xmath1210 such that for every @xmath1211 ,",
    "@xmath1212 \\alpha^{-1}(b))\\ge p_s.\\ ] ] then taking @xmath1213 and @xmath1214 ( since @xmath474 is finite ) , it holds that for every @xmath1206 , @xmath1215 \\alpha^{-1}(b))\\ge p \\qquad      \\text{hence } \\qquad \\prob_{\\nu}^{\\calt_1}(\\g[\\leq k ]      \\alpha^{-1}(b^c))\\leq 1-p .",
    "\\label{eq : upbound}\\ ] ]    from  , we can deduce that : @xmath1216 it remains to show the last inequality .",
    "we will prove it by induction as follows .",
    "first we introduce some useful notations .",
    "we will write @xmath1217 for the finite sequence @xmath1218 where @xmath1219 occurs exactly @xmath864 times , and given @xmath1220 we will write @xmath1221 for the finite sequence @xmath1222 where @xmath1223 occurs exactly @xmath1065 times . then observe that @xmath1224 \\alpha^{-1}(b^c ) }        \\subseteq \\\\",
    "\\bigcap_{n\\in\\in } \\bigcup_{(j_0,\\ldots , j_n)\\in\\in^{n+1 } }        \\cyl(s_1^{j_0 } , a'_1 , b^c_k , s_1^{j_1},a'_1 , b^c_k,\\ldots ,        s_1^{j_n } , a'_1 , b^c_k ) .",
    "\\end{gathered}\\ ] ] we will prove by induction over @xmath60 that for each @xmath1225 and for each @xmath1098 , @xmath1226 first fix @xmath1010 and @xmath1225 .",
    "it holds that for each @xmath1227 @xmath1228 now fix @xmath1229 and assume that for each @xmath1230 and for each @xmath1225 the inequality   holds true .",
    "we want to show that it is still satisfied for @xmath1231 . for each @xmath1225 and for each @xmath1227",
    "we have that @xmath1232 for some @xmath1233 , from lemma  [ lemma : integration ] .",
    "we now write @xmath1234 and for each @xmath1235 , @xmath1236 . then , still from lemma  [ lemma : integration ] , we can establish that @xmath1237 through the limits , we conclude that @xmath1238 \\alpha^{-1}(b^c))\\leq \\lim_{n\\to\\infty } ( 1-p)^n = 0 $ ] .",
    "this yields a contradiction and concludes the proof .",
    "let @xmath1239 be such that @xmath1240 .",
    "we set @xmath1241 .    towards a contradiction ,",
    "assume that @xmath1242 .",
    "then , since @xmath468 is an attractor and @xmath478 is exactly the subset of @xmath468 that is in @xmath1243 ( which is thus non - empty ) , applying lemma  [ lemma : attractorgf ] , we get that : @xmath1244 observe that @xmath1245 since @xmath474 is finite , there is @xmath1246 such that @xmath1247    define @xmath1248 as the subset of @xmath474 of all states @xmath1249 such that equation   holds and write @xmath1250 .",
    "we thus get that @xmath1251 as @xmath1252 and thus @xmath1253 , from lemma  [ lemma : btildecomplementaire ] ( third item ) we get that for each @xmath1254 and for each @xmath1255 , @xmath1256 .",
    "according to the hypothesis , it thus holds that for every @xmath1257 , there are @xmath1258 and @xmath1259 such that for each @xmath1260 , @xmath1261 \\alpha^{-1}(b))\\ge p_i.\\ ] ] then taking @xmath1262 and @xmath1263 , it holds that for each @xmath1257 , for each @xmath1260 ,",
    "@xmath1264 \\alpha^{-1}(b))\\ge p.\\ ] ]    indeed we have that @xmath1265      \\alpha^{-1}(b))\\ge \\prob_{\\mu'}^{\\calt_1}(\\f[\\leq k_i ]      \\alpha^{-1}(b))\\ge p_i\\ge p$ ] from the definitions of @xmath864 and @xmath31 .",
    "it follows that for each @xmath1246 , for each @xmath1260 , @xmath1266 \\alpha^{-1}(b^c))\\leq 1-p.\\ ] ] it thus holds that for each @xmath1267 , @xmath1268 \\alpha^{-1}(b^c ) ) & = \\sum_{i=1}^m \\mu'(\\alpha^{-1}(s'_i ) ) \\cdot\\prob_{\\mu'_{\\alpha^{-1}(s'_i)}}^{\\calt_1 } ( \\g[\\leq k ] \\alpha^{-1}(b^c))\\notag\\\\        { } & \\leq \\sum_{i=1}^m \\mu'(\\alpha^{-1}(s'_i ) ) \\cdot ( 1-p ) = ( 1-p)\\cdot\\sum_{i=1}^m \\mu'(\\alpha^{-1}(s'_i))\\notag\\\\        { } & \\leq 1-p .",
    "\\end{aligned}\\ ] ]    we can then deduce that @xmath1269 we can prove this last inequality by induction as follows .",
    "first we introduce some useful notations",
    ". we will write @xmath1217 for the finite sequence @xmath1218 where @xmath1219 occurs exactly @xmath864 times , and given @xmath1220 we will write @xmath1221 for the finite sequence @xmath1222 where @xmath1223 occurs exactly @xmath1065 times . then observe that @xmath1270 \\alpha^{-1}(b^c ) }        \\subseteq \\\\",
    "\\bigcap_{n\\in\\in } \\bigcup_{(j_0,\\ldots , j_n)\\in\\in^{n+1 } }        \\cyl(s_1^{j_0 } , a''_1 , b^c_k , s_1^{j_1},a''_1 , b^c_k,\\ldots ,        s_1^{j_n } , a''_1 , b^c_k ) .",
    "\\end{gathered}\\ ] ] we will prove by induction over @xmath60 that for each @xmath1225 and for each @xmath1098 , @xmath1271 first fix @xmath1010 and @xmath1225 .",
    "it holds that for each @xmath1227 @xmath1272 now fix @xmath1229 and assume that for each @xmath1230 and for each @xmath1225 the inequality   holds true .",
    "we want to show that it is still satisfied for @xmath1231 .",
    "for each @xmath1225 and for each @xmath1227 we have that @xmath1273 for some @xmath1225 , from lemma  [ lemma : integration ] .",
    "we now write @xmath1274 and for each @xmath1235 , @xmath1236 . then , still from lemma  [ lemma : integration ] , we can establish that @xmath1275 through the limits , we conclude that @xmath1276 \\alpha^{-1}(b^c))\\leq \\lim_{n\\to\\infty } ( 1-p)^n = 0 $ ] .",
    "this yields a contradiction and concludes the proof .",
    "[ app - fairness ]    as @xmath256 is a finite markov chain , it can be viewed as a graph .",
    "we can therefore speak of the _ bottom strongly connected components ( bscc ) _ of @xmath256 ( a bscc is a subset @xmath1277 such that for all @xmath1278 , if @xmath292 is reachable from @xmath291 , then @xmath291 is reachable from @xmath292 as well ) .",
    "we write @xmath1279 for the set of bsccs of @xmath256 .",
    "we define @xmath1280 .",
    "we first prove that @xmath1281 . in order to establish this ,",
    "we show that for each @xmath408 , @xmath1282 implies that @xmath1283 .",
    "indeed , pick @xmath434 such that : @xmath1284 we can state that for each @xmath1285 and for each @xmath1286 with @xmath1287 and such that for each @xmath1288 , @xmath1289 , it holds that @xmath1290 we prove this by induction over @xmath864 .",
    "first fix @xmath1291 and let @xmath1292 such that @xmath1293 . then for every @xmath1294 , @xmath1295 .",
    "hence @xmath1296 . and",
    "since @xmath240 is fair w.r.t .",
    "@xmath376-closed sets , we get that @xmath1297 now fix @xmath1298 and assume that for each @xmath1299 and for each @xmath1300 with @xmath1287 and such that for each @xmath1301 , @xmath1289 , it holds that @xmath1302 we want to show that it is still the case for @xmath864 . fix @xmath1303 satisfying all the desired hypotheses . using the induction hypothesis , we know that @xmath1304 and @xmath1305 .",
    "we can then compute : @xmath1306 from the induction hypothesis .",
    "this shows that for every state @xmath292 which is reachable from @xmath291 in @xmath256 , @xmath1307    then fix @xmath292 reachable from @xmath291 in @xmath256 .",
    "we can show that @xmath291 is also reachable from @xmath292 . towards a contradiction ,",
    "assume that it is not the case .",
    "it follows that @xmath1308 which is a contradiction with @xmath1309 and @xmath1310 .",
    "we deduce thus that @xmath291 belongs to a bscc of @xmath256 .",
    "we can now prove that @xmath1311 .",
    "indeed observe first that from the finiteness of @xmath256 , it holds that for every paths @xmath1312 , there is @xmath408 such that @xmath1313 is infinite .",
    "keeping this in mind , we write @xmath1314 where @xmath1285 and @xmath1315 .",
    "then we can write @xmath1316 from what we have shown previously , we now get that for each @xmath1317 , @xmath1318 and we conclude that @xmath1319 we are now able to prove that @xmath240 is @xmath234 .",
    "fix @xmath466 , we want to show that @xmath1320 .",
    "we have that @xmath1321   { \\scriptstyle \\prob_\\mu^{\\calt_1}(\\f\\alpha^{-1}(c))>0 } \\end{array } } \\prob_\\mu^{\\calt_1}(\\f\\alpha^{-1}(c))\\cdot\\prob_{\\mu}^{\\calt_1}(\\f\\alpha^{-1}(b)\\vee\\f\\alpha^{-1}(\\btilde)\\mid \\f\\alpha^{-1}(c)).\\notag\\end{aligned}\\ ] ] now we fix some @xmath1322 such that @xmath1323 .",
    "there are two cases :    * first if there is @xmath1324 such that @xmath1325 , then @xmath1326 and thus @xmath1327 ; * or for each @xmath1324 , @xmath1328 which implies that @xmath1329 and it that case again @xmath1327 .",
    "we finally conclude that @xmath1330   { \\scriptstyle \\prob_\\mu^{\\calt_1}(\\f\\alpha^{-1}(c))>0 } \\end{array } } \\prob_\\mu^{\\calt_1}(\\f\\alpha^{-1}(c))\\notag\\\\ { } & = \\prob_{\\mu}^{\\calt_1}(\\f\\alpha^{-1}(\\calc))=1.\\notag\\end{aligned}\\ ] ]",
    "we first prove point ( i ) .",
    "since @xmath165 can not be reached while we are in @xmath1331 , it holds that @xmath1332 relaxing the constraint on the until , we get @xmath1333 , and the latter is null by definition of @xmath211 .",
    "this proves the first item .",
    "assume that @xmath16 is @xmath327 , i.e. for each @xmath328 , @xmath1336 \\vee \\f[\\ge p ]    \\btilde)=1 $ ] .",
    "towards a contradiction , we suppose that @xmath1337 .",
    "since @xmath1338 \\btilde } \\cap \\ev{\\calt}{\\f[=m ] \\widetilde{\\btilde}},\\ ] ] we deduce that there are @xmath1339 such that @xmath1340 \\btilde \\wedge \\f[=m ]    \\widetilde{\\btilde})>0 $ ] .",
    "we write @xmath769 for the event @xmath1341 \\btilde \\wedge \\f[=m ]      \\widetilde{\\btilde}}$ ]",
    ". we can show that @xmath1342 b\\mid e)=0 $ ] and @xmath1343 \\btilde\\mid e)=0 $ ] .",
    "indeed we get that : @xmath1344 b\\mid e ) & = \\frac{\\prob_{\\mu}^{\\calt}((\\f[\\ge n ] b)\\wedge e)}{\\prob_{\\mu}^{\\calt}(e)}\\notag\\\\      { } & \\leq   \\frac{\\prob_{\\mu}^{\\calt}(\\f[\\ge n ] b\\wedge \\f[=n ] \\btilde ) } { \\prob_{\\mu}^{\\calt}(e)}\\notag\\\\      { } & = 0\\notag\\end{aligned}\\ ] ] from the definition of @xmath1334 . the equality @xmath1343",
    "\\btilde\\mid e)=0 $ ] is proved similarly .",
    "writing @xmath1345 , it follows that @xmath1346 b\\vee \\f[\\ge q ] \\btilde \\mid e)=0.\\ ] ] and since @xmath1347 , this contradicts the fact that @xmath16 is @xmath327 , which concludes the proof .",
    "fix @xmath67 and @xmath71 such that @xmath1351 .",
    "fix @xmath608 . we know that @xmath1352 then from lemma  [ lemma : probproduct ] , we know that for each @xmath277 @xmath1353 as this holds true for each @xmath1098 , we thus get that @xmath1354 from the hypothesis .",
    "this concludes the proof .",
    "fix @xmath71 such that for each @xmath67 , @xmath1351 .",
    "we want to prove that for each @xmath1355 , @xmath1356 .",
    "fix @xmath1355 and compute : @xmath1357 note that @xmath1358 induces a distribution @xmath1359 as follows : for each @xmath1360 , @xmath1361 .",
    "writing @xmath1362 it then holds that @xmath1363 .",
    "we then get , from the hypothesis and lemma  [ lemma : soundproduct1 ] , that @xmath1364 for each @xmath608 . hence , @xmath1365 which concludes the proof .",
    "we first show that @xmath632 is an @xmath628-abstraction of @xmath191 .",
    "it suffices to show that for each @xmath391 , for each @xmath1366 and for each @xmath1367 , @xmath1368 fix @xmath391 , @xmath1366 and @xmath1369 .",
    "write @xmath1370 for the unique label such that @xmath1371 . in order to prove",
    ", we will use the fact that @xmath256 is an @xmath376-abstraction of @xmath256 . and in order to make the link with the wanted equivalence , we will use lemma  [ lemma : probproduct ] .",
    "we can establish that @xmath1372 .",
    "indeed given @xmath1373 and @xmath1374 , it holds that @xmath1375 hence we get that @xmath1376 where the first and third equivalences hold from lemma  [ lemma : probproduct ] , and the second equivalence holds from the fact that @xmath256 is an @xmath376-abstraction of @xmath240 .    finally , since @xmath191 is decisive w.r.t @xmath1377 for each @xmath1378 and since @xmath632 is an @xmath628-abstraction of @xmath191 , proposition  [ coro : decsound ] allows us to conclude that @xmath632 is a sound @xmath628-abstraction of @xmath191 .",
    "[ ex : cex - sound ] we illustrate remark  [ rk : produit ] by exhibiting an example where soundness ( w.r.t . a fixed distribution ) as well as decisiveness properties do not transfer to the product with a deterministic muller automaton .",
    "consider the dmc @xmath240 depicted on the left of figure  [ figure : soundprod ] which corresponds to the random walk over @xmath187 from example  [ example : dmcrandomwalk ] , when @xmath1379 .",
    "consider also the finite mc @xmath256 on the right of the same figure .",
    "clearly enough , @xmath256 is an @xmath376-abstraction of @xmath240 for the mapping @xmath1380 defined as follows : @xmath1381 , @xmath1382 and @xmath1383 for any @xmath1384 .",
    "define @xmath244 as the initial distribution in @xmath240 . for any @xmath241 , @xmath1385",
    "and it follows that @xmath256 is a @xmath52-sound @xmath376-abstraction of @xmath240 .",
    "it should be noted that it is however not sound when considering @xmath247 as initial distribution .",
    "indeed , @xmath249 though @xmath1386 ( and @xmath1387 ) .",
    "( lzero ) at ( 0,0 ) @xmath2 ; ( lun ) at ( 2.2,0 ) @xmath27 ; ( ldeux ) at ( 4.4,0 ) @xmath28 ; ( lint ) at ( 6.6 , 0 ) @xmath29 ; ( lzero ) to[bend left=30 ] node[ptt , midway , above ] @xmath27 ( lun ) ; ( lun ) to[bend left=30 ] node[ptt , midway , below ] @xmath1388 ( lzero ) ; ( lun ) to[bend left=30 ] node[ptt , midway , above ] @xmath1389 ( ldeux ) ; ( ldeux ) to[bend left=30 ] node[ptt , midway , below ] @xmath1390 ( lun ) ; ( ldeux ) to[bend left=30 ] node[ptt , midway , above ] @xmath1389 ( lint ) ; ( lint ) to[bend left=30 ] node[ptt , midway , below ] @xmath1388 ( ldeux ) ;    ( szero ) at ( 7.8 , 0 ) @xmath1115 ; ( sun ) at ( 10 , 0 ) @xmath399 ; ( sdeux ) at ( 12.2 , 0 ) @xmath1391 ; ( sdeux.15) .. controls + ( 45:1 ) and + ( 315:1) .. (sdeux.345 ) node[ptt , midway , right ] @xmath1389 ; ( szero ) to[bend left=30 ] node[ptt , midway , above ] @xmath27 ( sun ) ; ( sun ) to[bend left=30 ] node[ptt , midway , below ] @xmath1388 ( szero ) ; ( sun ) to[bend left=30 ] node[ptt , midway , above ] @xmath1389 ( sdeux ) ; ( sdeux ) to[bend left=30 ] node[ptt , midway , below ] @xmath1388 ( sun ) ;    consider now the muller automaton of section  [ sec : prelim ] on the left of figure  [ figure : mullerautomaton ] .",
    "as stated in lemma  [ lemma : alphabar ] , it holds that @xmath632 is an @xmath628-abstraction of @xmath191 where for each @xmath277 and each @xmath608 , @xmath1392 .",
    "consider @xmath1393 and @xmath1394 .",
    "it then holds that @xmath1395 and that @xmath1396 .",
    "it is easily observed that starting in state @xmath1397 ( resp .",
    "@xmath1398 ) in @xmath191 ( resp .",
    "@xmath632 ) , then if we visit in the future a state @xmath1399 ( resp .",
    "@xmath1400 ) we will necessarily get that @xmath1401 . keeping this in mind",
    ", one can see that @xmath1402 while @xmath1403 where the first equality holds from lemma  [ lemma : integration ] and the second equality holds from lemma  [ lemma : probproduct ] .",
    "this proves that @xmath632 is not @xmath1404-sound for @xmath191 .    now , observe that @xmath240 is decisive w.r.t .",
    "any set of states @xmath241 from @xmath52 as we have seen that @xmath1405 for any set of states @xmath165 .",
    "it should be noted that @xmath240 is not decisive by considering @xmath268 as the initial distribution and @xmath248 . in this case ,",
    "@xmath1406 and thus @xmath1407 .",
    "consider now @xmath191 , we have already shown that @xmath1408 .",
    "it can be established that @xmath1409 which are states not reachable from @xmath1397 .",
    "we deduce that @xmath1410 .",
    "this shows that @xmath191 is not decisive w.r.t .",
    "@xmath1411 from @xmath1412 ."
  ],
  "abstract_text": [
    "<S> a decade ago , abdulla , ben henda and mayr introduced the elegant concept of decisiveness for denumerable markov chains  @xcite . roughly speaking , </S>",
    "<S> decisiveness allows one to lift most good properties from finite markov chains to denumerable ones , and therefore to adapt existing verification algorithms to infinite - state models . </S>",
    "<S> decisive markov chains however do not encompass stochastic real - time systems , and general stochastic transition systems ( stss for short ) are needed . in this article </S>",
    "<S> , we provide a framework to perform both the qualitative and the quantitative analysis of stss . </S>",
    "<S> our first contribution is to define various notions of decisiveness ( inherited from  @xcite ) , notions of fairness and of attractors for stss , and explicit the relationships between them . as a second contribution , </S>",
    "<S> we define a notion of abstraction , together with natural concepts of soundness and completeness , and we give general transfer properties , which will be central to several verification algorithms on stss . </S>",
    "<S> our third contribution focuses on qualitative model - checking . beyond ( repeated ) reachability properties for which our technics are strongly inspired by  @xcite </S>",
    "<S> , we use abstractions to design algorithms for the qualitative model - checking problem of arbitrary @xmath0-regular properties , when the sts admits a denumerable ( sound and complete ) abstraction with a finite attractor . </S>",
    "<S> our fourth contribution is the design of generic approximation procedures for quantitative model - checking ; in addition to extensions of  @xcite for general stss , we design approximation algorithms for @xmath0-regular properties ( once again by means of specific abstractions ) . </S>",
    "<S> last , our fifth contribution consists in instantiating our framework with stochastic timed automata ( sta ) and generalized semi - markov processes ( gsmp ) , two models combining dense - time and probabilities . </S>",
    "<S> this allows us to derive decidability and approximability results for the verification of these two models . </S>",
    "<S> some of these results were known from the literature , but our generic approach permits to view them in a unified framework , and to obtain them with less effort . </S>",
    "<S> we also derive interesting new approximability results for sta and gsmps . </S>"
  ]
}
{
  "article_text": [
    "there is currently significant research into developing and optimising the functional requirements ( _ e.g. _ , feature detection and classification ) of computer vision systems , both within the multi - billion dollar robotics industry  @xcite and the more general field of industrial automation  @xcite .",
    "many of these application domains lend themselves to the initial development of a highly - specialised computer vision system , without the need for modifiability , extensibility or portability as design considerations .",
    "however , other domains ( _ e.g. _ , robot soccer ) have particular need to foster innovation in these additional non - functional requirements , due to the rapid evolution of both cutting - edge hardware and the physical domain itself  @xcite . despite the clear importance of these requirements , there is currently a notable lack of research and practical guidelines on how best to map them onto an appropriate software architecture .    in this study",
    ", we propose a two - layered architecture with _ interface _ , _ control _ and _ data storage _ components in the top layer ; plus all the components for _ feature detection _ in the bottom layer .",
    "the system promotes _ hardware independence _ by having a specific interface component to communicate with the camera and other sensors ; _ modifiability _ by adopting a modular approach for the implementation of the algorithms ; and _ efficiency _ , with the introduction of a controller module to use those algorithms in a more intelligent fashion . using the vision system of the nubots humanoid robocup team  @xcite as a case study",
    ", we demonstrate how the proposed architecture both :    * addresses the non - functional requirements of modifiability , extensibility and portability ; and * enables the rapid development and integration of feature detection algorithms to better address the functional requirements of a rapidly - evolving domain ( _ e.g. _ , robot soccer ) .",
    "this paper is organized as follows . in section  [ sec : platforms ] we describe the two platforms used for evaluating the proposed architecture .",
    "section  [ sec : visionsystemdescription ] describes the designs of both original and new vision systems , both in terms of functional ( algorithms ) and non - functional ( architecture ) requirements . in section  [ sec : experimentaldesign ] we describe the image data and the algorithms for feature detection used in our tests .",
    "then , in section  [ sec : results ] we present the computational results for performance related to the functional requirements for the system . in section  [ sec : porting ] we explain the porting of the new system from the darwin - op to a raspberry pi platform ; followed by a discussion of our main findings and their implications in computer vision system design .",
    "portability is one of the key non - functional requirements for software systems designed to be used in hardware dependent environments .",
    "continuous progress in robotics frequently raises the difficult question of when to change platforms to better take advantage of such advances  @xcite .",
    "for instance , the university of newcastle robotic soccer team has changed platforms twice since 2002  first , from the sony aibo to the aldebaran nao , and then to the robotis darwin - op . each of those required a major overhaul of the entire software system ; mainly due to changes in sensors , motors , and the adaptation of higher level procedures such as walking and kicking , which are platform - specific .",
    "the vision system described in this paper was designed for utilisation on multiple platforms with as little re - design as possible . in order to demonstrate portability ,",
    "it was tested with two platforms : the darwin - op and the raspberry pi .",
    "the darwin - op features a 1.6 ghz intel atom z530 with 4 gb of ram , ubuntu operating system , a logitech c905 camera , plus actuators , sensors , etc .",
    "the main requirement on the vision system imposed by the platform was efficiency , due to the low - power , single - core processor .",
    "two other main requirements were flexibility and modifiability . the system will be used in future robocup competitions , and game rules typically change every year to make the matches more realistic .",
    "historically , most of those changes impact either vision or behavior .",
    "the second platform tested was a raspberry pi , which is a credit card - sized , single - board computer .",
    "it has an arm1176jzf - s 700 mhz processor with 512 mb of ram and ubuntu operating system .",
    "it can be connected to a standard usb webcam , keyboard and monitor , and was developed mainly for educational purposes .",
    "porting to a raspberry pi platform creates a few challenges from the software architecture perspective . due to the lack of sensors and motors attached to it , the vision system has to be adapted to obtain that data from so - called _ mock components _ that will mimic the behaviour of the real hardware",
    "further , since the system must be be moved without its partner components ( localisation , behaviour and locomotion ) the usual external communication infrastructure is missing .",
    "the less modifications required , the easier the porting process .",
    "software architecture is the high level description of a software system .",
    "its main goal is to describe the system s components and their interactions ; how functional requirements map onto them ; and how non - functional requirements are promoted .",
    "the design of the software architecture is arguably the first step in the software design process , preceding the definition of classes and data structures and , of course , the coding process itself  @xcite . in this section",
    "we present the architecture diagrams and overviews of the original and new vision systems .",
    "we compare their main features and justify the pros and cons of the design decisions in each of them .",
    "the original vision system was first designed in 2002 and implements a pipeline architecture , due to the highly inter - dependent nature of the various components . since then",
    ", it has undergone several improvements in terms of functional requirements , but the architecture remained the same .",
    "a diagram of its main components is shown in figure  [ fig : originalsystem ] . the inputs to the system come from three sources :    * the _ image stream _ from the camera , represented by the external component ` camera ' ; * _ kinematics data _ from the locomotion system , stored in the component ` system blackboard ' ; * the _ colour classification lookup table _ , also stored in the system blackboard .",
    "the sole requirement of the vision system is to take these inputs and determine the relative locations of predefined field objects ; _",
    "e.g. _ , ball and goalposts . that information will then be accessed by the behaviour system to determine the next action the robot should take .",
    "the pipeline design was useful as it allowed for the maximum efficiency by minimising the overhead that would be present in a more robust architecture .",
    "it is however fairly inflexible and does not readily allow for parallel processing , which will become a reality when platform power demands decrease and multi - core chipsets are used .",
    "another significant drawback of the original system is that it enforces the application of every processing stage , for every frame .",
    "this translates into unnecessary processing in situations where , for instance , there are only one or two features of interest ( _ e.g. _ , ball and goals ) .",
    "in addition , the lack of a data wrapper created the dependency of 7 out of 9 modules , on the system blackboard interface , as can be seen in figure  [ fig : originalsystem ] .      the new vision system was designed with a focus on modularity , portability and modifiability ( see figure  [ fig : newsystem ] ) .",
    "vision has to communicate with three external components - behaviour system , camera and system blackboard .",
    "as the name indicates , the behaviour system determines how the robot should behave and which action to take next .",
    "camera represents the robot s on - board camera .",
    "the system blackboard module contains information about the environment and the robot itself ; and can be accessed by any of the other three systems of the robot s software , namely _ behaviour _ , _ locomotion _ and _",
    "localisation_.    communication between the vision system and the three external components in the new design is achieved by the control wrapper and data wrapper modules .",
    "the control wrapper is an external interface and allows behaviour to access and control several elements of the vision system . by designing this interface through a wrapper we trade a very slight decrease in efficiency ( through a small number of redundant method",
    "calls ) for a significant increase in modifiability .",
    "this modifiability comes as the control wrapper is the only module that needs to change for the system to be invoked in any different way ( that is , provided the change does not require the vision system s internal _ behaviour _ to be extensively modified ) .",
    "the data wrapper allows the vision system to access the external data it needs ( image frames , kinematic data , etc ) . the same reasoning for modelling the control interface as a wrapper is applicable for the data interface - small reductions in efficiency allow for a more modifiable design .",
    "this approach also allows for data validity to be maintained as simply as possible .",
    "the data wrapper is responsible for maintaining a copy of the relevant data accessed at the same time as the current frame , insulating the system against poorly maintained external data structures .",
    "for instance , if any sensor data is updated on the system blackboard by , say , the locomotion system whilst the vision system is still analysing a frame , the data wrapper still has a local copy .",
    "this decouples the data responsibilities of the various systems and ensures vision is as robust as possible to external changes .    having these interfaces as wrappers has one extra advantage : rapid testing .",
    "either wrapper can be replaced by a stub providing dummy data , invoking the vision system with extra debugging information .",
    "this also allowed for the system to be quickly integrated into the raspberry pi platform , interfacing with a stand - alone web camera , without kinematic or sensor data , in a near seamless fashion .",
    "indeed , most of the vision system implementation and testing was made on a desktop pc , without using the real robotic platform .",
    "however , it is important to emphasize that the computational tests numbers presented in this paper indeed reflect the performance of the system on the darwin - op and raspberry pi platforms .",
    "the controller module calls the processing stages in order ; and stages can be optionally ignored ; _ e.g. _ , ball or goalpost detection .",
    "this allows for current state knowledge to increase the efficiency of the system .",
    "for example , consider the situation where the localisation system has a high certainty of the robot location , but a low certainty of the ball location . in that case",
    ", it does not need any landmark information to determine where the robot is ; and the vision s priority becomes simply to identify and locate the ball as quick as possible . by suppressing goalpost and line detections",
    ", the vision system reduces its processing time , freeing up resources for other parts of the software .",
    "the blackboard module was implemented following the singleton pattern  @xcite .",
    "this was for two reasons : the blackboard is a single object throughout the vision system and it should not be possible for multiple copies to be instantiated ; and it allows for simple access in the form of a static access method , improving performance .",
    "the blackboard module is a central repository of current state information , specifically for the vision system ; and each processing stage can request any input information needed from it and posts results back .",
    "this increases the complexity of the system somewhat by requiring correct process order to be maintained by a controller , but allows for rapid reordering of independent stages and incorporation of new stages .",
    "in addition to the two wrappers , and blackboard and controller modules , there are seven processing modules , namely scanline classifier , transition filter , line detection , green horizon detection , ball detection , goalpost detection and obstacle detection . those are called sequentially by the controller to carry out the tasks necessary to identify elements and features in the soccer field and allow the robot to play correctly .",
    "in this section , we describe the dataset used to compare the two vision systems and the algorithms for feature detection .",
    "the image stream was a collage of five typical playing scenarios - two of them were recorded in a laboratory environment ( with a full indoor field ) , and three were recorded at previous robocup competitions .",
    "the total time is 5 minutes - equivalent to 9,000 image frames .",
    "each of the five image streams is continuous and was taken at 30 frames - per - second , exactly the same condition of a real soccer match .",
    "all elements normally observed in a match , such as the ball , field lines , other robots and goalposts are present .",
    "the five scenarios along with a short description is given next :    * _ lab 1 _ : controlled environment at the lab .",
    "occasional variable lighting and image quality .",
    "background noise is present but minimal field occlusion . * _ lab 2 _ : controlled environment at the lab , taken after lighting change to a more stable condition .",
    "there is little to no variability in image quality or lighting , and no occlusion . *",
    "_ difficult _ : stream with poor lighting , poor image quality and significant field occlusion , where objects of interest are difficult , or impossible to classify correctly .",
    "the stream was taken on one of the fields at robocup 2012 , in mexico city . *",
    "_ rc 2012 _ : this stream was also recorded during robocup 2012 , on a field with a prominent lighting intensity gradient from one end to the other .",
    "the lighting variability complicates the task of feature classification . varying image quality and background noise . * _ rc 2013 _ : stream recorded during robocup 2013 , in the netherlands .",
    "predominantly high quality images with consistent lighting .",
    "also contains a large number of opponent robots and human obstacles ; _",
    "e.g. _ , referees and team captains .",
    "green horizon detection is a procedure used to improve the system s performance by determining which parts of the image are relevant or not .",
    "all objects of interest are within the field , which has a green colour ; everything else can be considered noise for soccer playing purposes _ e.g. _ , walls , crowds , etc .",
    "( see figure  [ fig : greenhorizon ] ) .",
    "the only objects of interest which might extend above the green horizon are the goalposts , and they are detected using a less computationally intensive method ( see sections  [ sec : scanlines ] and  [ sec : goalposts ] ) . the procedure to determine the green horizon is as follows .",
    "first , it requests the location of the real horizon in screen coordinates , calculated using a forward kinematics chain model and a camera projection , from the external blackboard module .",
    "the method then scans the image downwards from this horizon using evenly - spaced , vertical scan - lines to determine where the first green pixels start - and stores those points ( indicated with magenta markers in figure  [ fig : greenhorizon ] ) .",
    "the green horizon is calculated as the upper convex hull formed from those points .",
    "the procedure is very fast ( @xmath0 ) and robust to features blocking parts of the horizon ( _ e.g. _ , the robot in figure  [ fig : greenhorizon ] ) , as well as being capable of handling the changing geometry of the green border in the camera frame .",
    "this stage is a pre - process to all object detection procedures .",
    "it comprises an image scan followed by a segmentation for specific colour sections  @xcite . due to time constraints",
    "we do not segment the entire image .",
    "instead , we separate the image into below / above green horizon areas . for the area below the green horizon , vertical and horizontal scan lines ,",
    "evenly - spaced by a small number of pixels , are considered for sequential pixels of the same colour .",
    "these form segments which are the basis for all further filtering and detection , and are stored in a special data structure in the vision system s blackboard module . for the area of the image above green horizon ,",
    "we only use horizontal scanlines , as the only features of interest in that region are the goalposts . figure  [ fig : scanlines ] shows the result of the scanline and colour segmentation procedures applied to a typical image of the playing field .",
    "colour transitions form the input to all feature detection algorithms except for obstacle ( _ e.g. _ , robot ) detection .",
    "each of these processes take the transitions which have been mapped to their corresponding field objects , and apply a combination of clustering , filtering and model - fitting techniques to identify valid objects .",
    "ball detection uses the geometric mean of the pixels locations for all transitions that might represent a ball ; followed by a 4-point occlusion detection method .",
    "valid transitions representing a ball are  _ orange@xmath1all colours _ \" or  _ all colours@xmath1orange _ \" .",
    "the method is very efficient ; accurate in terms of distance - to - ball estimation ; and robust to partial occlusion ( up to 50% ) of the ball  @xcite .",
    "goals are integral to the localisation of the robot .",
    "they are large , static and monochromatic features ; and therefore are relatively simple to extract .",
    "valid transitions representing a goalpost are  _ yellow@xmath1all colours _ \" or  _ all colours@xmath1yellow _ \" .",
    "the statistical model fitting method random sample and consensus ( ransac ) is used to fit lines ( further detail in section  [ sec : fieldlines ] ) to the filtered transitions - thus detecting the vertical edges of the post which are typically very clear .",
    "that step is then followed by a simple heuristic to pair the lines into post objects  @xcite .",
    "this procedure is able to reliably handle images with no posts and goal - coloured noise in the background as well as those with one or two posts in the frame .",
    "obstacles are found by considering breaks in the green horizon .",
    "the first green pixel markers used for constructing the green horizon that are not in the convex hull are sent to list of obstacle candidates .",
    "for instance , in figure  [ fig : greenhorizon ] , those would be markers 2 , 3 and 4 , counted from left to right . if there are at least @xmath2 consecutive scans where the markers do not belong to the green horizon , then the set of scans forms a potential obstacle .",
    "the width is determined from the outer scanlines , and the base of the obstacle from the lowest scan .",
    "field lines are an important source of information for the robot to localise itself in the field .",
    "they are visible from most field positions , as opposed to landmarks that can often be absent due to the small camera field of view .",
    "any  _ white@xmath1all colours _ \" or  _ all colours@xmath1white _ \" transition might represent a line border .",
    "the vision system uses the ransac algorithm mentioned in section  [ sec : goalposts ]  @xcite due to its resilience to noise and , in particular , extreme numbers of outliers ; which makes it effective for finding multiple models within a single dataset . for more information about additional computer vision methods and",
    "an overview of related algorithms applied to robotic soccer , we refer the reader to reference  @xcite .",
    "this section is divided into two parts .",
    "the first one describes a performance comparison between original and new versions of the vision system .",
    "the second part explains the process to port the new vision system from the darwin - op to the raspberry pi platform .      to conduct a performance comparison between the two versions of the vision system , we ran a series of tests using the dataset described in section  [ sec : experimentaldesign ] on the darwin - op platform .",
    "the goal was to measure the average time to process each image frame , thus determining if the increase in flexibility and portability came at the cost of reduced efficiency .",
    "the mean and standard deviation of the processing times for each image frame are shown in table  [ tab : processingtimes ] .",
    "llll & & original vision system & new vision system + image stream & number of frames & in ms per frame & in ms per frame + lab 1 & @xmath3 & @xmath4 & @xmath5 + lab 2 & @xmath6 & @xmath7 & @xmath8 + difficult & @xmath9 & @xmath10 & @xmath11 + rc 2012 & @xmath12 & @xmath13 & @xmath14 + rc 2013 & @xmath15 & @xmath16 & @xmath17 + & @xmath18 & @xmath19 & @xmath20 +    the results show an average reduction of 35.5% in processing time between original and new vision systems .",
    "the original vision system was already capable of faster than real - time image processing , achieving a mean frame rate of 52 fps .",
    "the new system increased that frame rate to 80 fps .",
    "the improvement in the performance resulted from three sources , listed below .    * a better architecture design that reduced communication overhead ; * a focus on intelligent data reduction in earlier processing stages to reduce the input size to later , more complex algorithms , and ; * the principled application of specialised data structures to store information about the several objects needed during the several stages of image processing and object detection .      a port from the darwin - op to the raspberry pi platform",
    "was conducted to demonstrate the portability and flexibility of the new vision system . to emulate the behaviour of the darwin - op platform in the raspberry pi , a modification _",
    "external to the new vision system _ had to be made .    for results to be comparable",
    ", modifications to the camera access section of the data wrapper were made to provide the vision system with pre - recorded frames captured on the darwin - op platform .",
    "this same modification was made to the version run on the darwin - op and a similar change was made to the original system - so that the comparison between implementations was fair .",
    "in addition to that external change , the internal changes were as follows :    * the data wrapper class was modified to provide the system with ` dummy ' kinematics data and other system data , as there was no physical robot with motors , camera or other sensors attached to the raspberry pi .",
    "this required less than a fifth of the methods to be modified or removed . *",
    "the control wrapper class was modified so that the system was more easily used as a stand - alone process instead of as a submodule . as this is a relatively small interface ,",
    "all seven methods were modified or removed in the transition .",
    "the only difference between the darwin - op and the raspberry pi test results was the performance , as expected , due to the different processors in the platforms .",
    "beyond the reduced cpu capacity , the raspberry pi also has a number of other limiting factors including possessing only a quarter of the system memory of the darwin - op .",
    "the new vision system running in the raspberry pi achieved an average frame rate of 23 fps ( see table  [ tab : processingtimesrpi ] ) , over a period of 5 minutes of image capturing and processing ( 9000 frames ) .",
    "compared to the 80 fps rate obtained in the darwin - op platform , that represents a decrease of 70% , in line with the processing power difference between the processors .",
    "the accuracy and reliability of the new vision system remained the same , as expected , since there were no changes in functionality .",
    "porting the whole new vision system took _ less than 6 hours of re - implementation and testing _",
    ", and affected only two of its modules : the data wrapper and control wrapper modules .",
    "the data wrapper had 101 lines of code changed ( 53% of the code ) , in 12 of 34 methods ; and the control wrapper had 17 lines of code changed ( 59% of the code ) , in 5 of 5 methods .",
    "llll & & darwin - op & raspberry pi + & & performance in & performance in + image stream & number of frames & ms per frame & ms per frame + lab 1 & @xmath3 & @xmath5 & @xmath21 + lab 2 & @xmath6 & @xmath8 & @xmath22 + difficult & @xmath9 & @xmath11 & @xmath23 + rc 2012 & @xmath12 & @xmath14 & @xmath24 + rc 2013 & @xmath15 & @xmath17 & @xmath25 + & @xmath18 & @xmath20 & @xmath26 +    a large factor in these changes was the replacement of code which accessed the external system blackboard or communicated with the localisation system , with code to generate mock data and communicate with the raspberry pi peripherals .",
    "for example , the method that provides the system with an artificial horizon based on kinematic data ( see section  [ sec : greenhorizon ] ) , was replaced with a stub that provided a hard - coded horizon at the top of the image frame ( so that the image was processed fully , regardless of the declination of the camera during capture ) .",
    "after this experiment , it becomes clear that when the vision system is ported to a new , more advanced platform in the future , it should be a relatively straightforward task .",
    "whilst the system , as presented , is tailored for soccer scenarios , it is a generic architecture that can support more complex settings ; _",
    "e.g. _ , multiple feature detectors , either simple and self - contained modules , or complex subsystems comprised of several independent stages .",
    "any colour - based design can also take advantage of the existing segment and transition filter pre - processing components .",
    "it should be noted that there has been no leveraging of parallelism within this design .",
    "parallelism , as an oft - noted inherent aspect of vision processing , could be well utilised within the architecture for significant performance gains - both fine grained within individual algorithms , as well as course grained between independent modules .",
    "this would form a valuable direction for enhancing the architecture , allowing the use of more complex detection algorithms as higher performance parallel computing becomes more available to low power platforms .",
    "in addition to these non - functional improvements , table  [ tab : processingtimes ] shows that the new system markedly outperforms the previous system in multiple scenarios , including competition venues , intentionally noisy images and the laboratory environment . as computational resources on mobile platforms",
    "are restricted , this efficiency increase can pose a significant gain in the functional performance of the robot .",
    "this design is not without its drawbacks though .",
    "the flexibility of the internal blackboard pattern allows for coding mistakes during modification of the controller to break the system flow ( as there is no dependency constraint in the design ) .",
    "future modifications to the system need to be careful to ensure the data expected by a later - stage module is provided to the blackboard in the expected form .",
    "a further drawback is the use of singleton classes .",
    "these were included in order to reduce the communication overhead involved in passing references to the internal blackboard and data wrapper objects , by instead having them accessible via a static _ getinstance ( ) _ method .",
    "this choice however means that utilising multiple cameras with this system will require architectural redesign or careful data management as simply instantiating two distinct versions of the system is not possible .",
    "this is a potential direction for further improvement .    the new vision system and the five image streams are available for download as supplementary material .",
    "in this study , we have proposed , implemented and evaluated a software architecture design for general computer vision systems to address the non - functional requirements of modifiability , extensibility and portability .",
    "in addition to demonstrating the fulfillment of these criteria , we further demonstrate that a computer vision system optimised for non - functional requirements can yield improved performance ( quantified as execution time to process image frames ) .",
    "we selected robocup humanoid robot soccer as an example of a domain subject to rapidly - evolving , domain - specific requirements , in which non - functional requirements are particularly critical .",
    "the vision system detailed in this study has been successfully applied by two - time world champion robocup team nubots during the 2013 ( netherlands ) and 2014 ( brazil ) competitions .",
    "we propose that the underlying software architecture is readily extensible to a far wider range of computer vision domains , and moreover , that the complementary development of systems to address both functional and non - functional requirements is critical to future computer vision research .",
    "00      kapach , k. , barnea , e. , mairon , r. , edan , y. , & ben  shahar , o. ( 2012 ) computer vision for fruit harvesting robots  state of the art and challenges ahead .",
    "_ international journal of computational vision and robotics _ 3(1 - 2):434 .",
    "budden , d. , fenn , s. , mendes , a. , & chalup , s. ( 2013 ) _ evaluation of colour models for computer vision using cluster validation techniques_. _ robocup 2012 : robot soccer world cup xvi _ , _ lecture notes in artificial intelligence _ 7500:261272 .          aldrich , c. , marais , c. , shean , b. j. & cilliers , j. j. ( 2010 ) .",
    "online monitoring and control of froth flotation systems with machine vision : a review .",
    "_ international journal of mineral processing _ 96(1 - 4):113 .",
    "annable , b. , budden , d. , calland , s. , chalup , s. , fenn , s. , flannery , m. , fountain , j. , king , r. , metcalfe , m. & mendes , a. ( 2013 ) .",
    "the nubots team description paper 2013 . _",
    "robocup 2013 symposium and competitions : team description papers , eindhoven_.      smith , r. , smith , g. , & wardani , a. ( 2004 ) software reuse in robotics : enabling portability in the face of diversity .",
    "_ proceedings of the 2004 ieee conference on robotics , automation and mechatronics _ , pp . 933938 , singapore .",
    "budden , d. , & mendes , a. ( 2013 ) .",
    "unsupervised recognition of salient colour for real - time image processing . _ robocup 2013 : robot soccer world cup xvii _ ,",
    "_ lecture notes in artificial intelligence _ 8371:373384 .",
    "budden , d. , shannon , f. , walker , j. & mendes , a. ( 2012 ) . a novel approach to ball detection for humanoid robot soccer . in _ proceedings of the 25th australasian joint conference on artificial intelligence _ , _ lecture notes in artificial intelligence _ 7691:827838 .",
    "flannery , m. , fenn , s. & budden , d. ( 2014 ) .",
    "ransac : identification of higher - order geometric features and applications in humanoid robot soccer . _ submitted to acra2014 - australasian conference on robotics and automation _ , melbourne , australia ."
  ],
  "abstract_text": [
    "<S> computer vision plays a major role in the robotics industry , where vision data is frequently used for navigation and high - level decision making . </S>",
    "<S> although there is significant research in algorithms and functional requirements , there is a comparative lack of emphasis on how best to map these abstract concepts onto an appropriate software architecture .    in this study , we distinguish between the functional and non - functional requirements of a computer vision system . using a robocup humanoid robot system as a case study , we propose and develop a software architecture that fulfills the latter criteria .    </S>",
    "<S> the modifiability of the proposed architecture is demonstrated by detailing a number of feature detection algorithms and emphasizing which aspects of the underlying framework were modified to support their integration . to demonstrate portability , we port our vision system ( designed for an application - specific darwin - op humanoid robot ) to a general - purpose , raspberry pi computer . we evaluate performance on both platforms and compare them to a vision system optimised for functional requirements only .    </S>",
    "<S> the architecture and implementation presented in this study provide a highly generalisable framework for computer vision system design that is of particular benefit in research and development , competition and other environments in which rapid system evolution is necessary .    </S>",
    "<S> computer vision ; software architecture ; robotics </S>"
  ]
}
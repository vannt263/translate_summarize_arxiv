{
  "article_text": [
    "a starting point in the analysis of coarsening systems , such as the phase separation dynamics following a quench from a disordered to an ordered phase , is the characterization of the asymptotic _ late - time _ behavior . most coarsening systems exhibit asymptotic dynamical scaling with the characteristic length scale @xmath8 given by the size of individual ordered domains .",
    "the growth - law @xmath9 is determined by only a few general features , such as conservation laws and the nature of the order parameter ( see @xcite for a review ) . for conserved cahn - hilliard equations describing phase - separation ,",
    "@xmath10 at late times .",
    "more detailed information about the scaling state is difficult to obtain analytically . indeed",
    "the very existence of scaling has only been demonstrated empirically in simulations and experiments .",
    "consequently , computer simulations of coarsening models , especially phase - field type models like the cahn - hilliard equation , play an essential role in our understanding and characterization of late - stage coarsening .",
    "these simulations face several restrictions . to accurately resolve the asymptotic structure it is necessary to evolve until late times so that @xmath11 , where @xmath12 is the domain wall width .",
    "however , to avoid finite - size effects we must halt the simulation when @xmath8 is some fraction of the system size @xmath13 . additionally , to resolve the domain wall adequately the lattice spacing @xmath14 must be be sufficiently small compared to the domain wall width @xmath12 .",
    "very large lattices of linear size @xmath15 are necessary to satisfy all of these requirements : @xmath16 .",
    "accurate studies of the scaling state require us to evolve large systems to late times .",
    "unfortunately , current computational algorithms are very inefficient in their time integration .",
    "the standard euler integration of the cahn - hilliard ( ch ) and allen - cahn ( ac ) coarsening models , for conserved and non - conserved dynamics , respectively , is known to be unstable for time steps @xmath0 above a threshold fixed by the lattice spacing @xmath17  this is the `` checkerboard '' instability @xcite .",
    "this imposes a fixed time step irrespective of the natural time scale set by the physical dynamics .",
    "the domain walls move increasingly slowly , for example , the ch equation yields asymptotic domain wall velocities @xmath18 .",
    "consequently , a fixed time step results in ever - decreasing amounts of domain wall motion per step and eventually becomes wastefully accurate .",
    "ideally , one would like a stable integration algorithm , which would allow _ accuracy _ requirements rather than _ stability _ limitations to determine the integration step size .",
    "recently , eyre proved the existence of unconditionally gradient stable algorithms ( essentially a strict non - increase in free energy for every possible time step ) @xcite , and provided explicit examples of stable steps for both ch and ac dynamics @xcite .",
    "the present work is concerned with developing these methods in two directions : clarifying and expanding the class of unconditionally stable algorithms , and deriving the accuracy limitations on these algorithms .",
    "our main results for _ stability _ are the following .",
    "we have determined the parameter range for which eyre s theorem proves unconditional gradient stability ( sec .",
    "[ subsec : eyrestability ] ) , and we present eyre s theorem in appendix [ app : eyre ] . we have also determined the parameter range that is unconditionally von neumann ( vn ) stable , that is , linearly stable for any size time step ( sec .",
    "[ subsec : vonneumann ] ) .",
    "the latter range is a superset of the former , and neither appear to have been previously determined .",
    "we have also performed numerical tests of stability in dimension @xmath19 ( sec .  [ subsec : gradientstable ] ) and found that the vn stability condition appears to be sufficient for identifying unconditionally gradient stable steps .",
    "specifically , for the parameterless form of the ch equation ( see @xcite ) @xmath20 there exists a class of semi - implicit steps @xmath21                  \\nonumber   \\\\           = \\phi_t & + & \\dt \\grad^2 [ -a_1 \\phi_t - a_2   \\grad^2\\phi_t +                    \\phi_t^3 ] .",
    "\\label{eq : chdirect}\\end{aligned}\\ ] ] that may be solved for the updated field @xmath22 efficiently by means of fast fourier transform ( fft ) .",
    "the various stability conditions for these steps are depicted in terms of @xmath23 and @xmath24 in fig .",
    "[ fig : abstab ] .",
    "the stability conditions do not depend on the lattice type or dimension , on the volume fraction , or on the form of the lattice laplacian .",
    "this implies , for example , that these algorithms could be combined with adaptive mesh techniques ( see , for example , @xcite ) for independent control of spatial and temporal discretization .",
    "[ fig : abstab ] suggests that the unconditional vn stability conditions , which are widely applicable and relatively easy to analyze , may provide a reasonably accurate proxy for unconditional gradient stability .",
    "we have also determined the analogous stability conditions for the ac equation .",
    "= 3.0 in    when stability is not the limiting factor , practical limits are still imposed by _",
    "accuracy_. to maintain the domain wall profile to a given accuracy , a time step should be chosen so that the wall only moves a fraction of its width @xmath12 in a single step . for a scaling system with @xmath25 , where @xmath26 generally , the passage time @xmath27 scales like @xmath28 at late times .",
    "then the natural time step should scale as @xmath29 for ch dynamics , @xmath30 and @xmath31 while for ac dynamics @xmath32 and @xmath33 .",
    "however , we show that these stable algorithms are still not capable of accurately simulating coarsening using the natural time scale  despite their stability . for example , accuracy limits the stable ch steps given above to `` only '' @xmath34 .    to understand the limitations imposed on even stable algorithms by accuracy , we study in sec .  [",
    "sec : accuracy ] the truncation error for the ch equation for general numerical algorithms , and determine the how these terms scale with time to all orders in @xmath35 ( sec .",
    "[ subeq : fieldscaling ] ) .",
    "we develop a classification scheme for such algorithms based on the lowest order @xmath36 of @xmath37 at which truncation error fails to follow its optimal scaling and show that this term limits the accuracy of the algorithm at late times ( sec .",
    "[ subsec : pclassification ] ) .",
    "our analysis leads to the conclusion that accuracy requires a time step @xmath38 for the ch model .",
    "the algorithms in eq .",
    "( [ eq : chdirect ] ) have @xmath39 , meaning the error becomes sub - optimal at @xmath40 , the leading error term .",
    "this result is consistent with our numerical observations .",
    "our simple analysis for the natural time step , eq .  ( [ eq : optimal ] ) , corresponds to the @xmath41 class .",
    "we are unable to identify any such `` perfect '' algorithms for the ch case ; they are quite likely impossible for any nonlinear problem .",
    "next , we turn to the question of practical advantage .",
    "various computational algorithms have been developed to mitigate the impact of instabilities by increasing @xmath0 by a fixed factor compared to the simplest euler discretization .",
    "for example , the cell - dynamical - scheme ( cds ) @xcite exploits universality to choose a free energy that is convenient in terms of numerical stability .",
    "more recently , fourier spectral methods @xcite have been shown to increase the maximum @xmath0 by an impressive two orders of magnitude .",
    "however , these methods still require fixed time steps and so can not adjust to the naturally slowing ch dynamics .    in sec .",
    "[ sec : speedup ] we determine the relative advantage of integration by algorithms such as eq .",
    "( [ eq : chdirect ] ) compared to the conventional euler method . for a reasonably conservative choice of accuracy requirements , we find for an @xmath42 lattice ( currently feasible for a linux workstation ) with @xmath43 that the new methods can integrate up to finite size effects roughly a factor of @xmath7 times faster than possible with the euler method .",
    "the advantage of unconditionally stable steps increases with larger system sizes : for lattices of linear size @xmath44 we show the relative advantage in speed is order @xmath5 , regardless of spatial dimension of the system .",
    "this means that as computational power continues to increase , unconditionally gradient stable algorithms will become even more valuable .",
    "we present a summary and outlook for future developments and applications in sec .",
    "[ sec : conclusion ] .",
    "the parameterless form of the ch equation for a conserved scalar field @xcite is @xmath45 where @xmath46 is the local chemical potential given by @xmath47 and @xmath48 $ ] is the free energy functional , taken here to be @xmath49 \\equiv \\int d^dx \\left [ \\frac 1 2 ( \\grad \\phi)^2 +      \\frac 1 4 ( \\phi^2 - 1)^2   \\right ] .",
    "\\label{eq : f}\\ ] ] the second term in @xmath50 represents a double - well potential with equilibrium values @xmath51 , and eqs .",
    "( [ eq : ch2 ] ) , ( [ eq : mu ] ) , and ( [ eq : f ] ) combine to give eq .",
    "( [ eq : ch ] ) .",
    "the parameterless form of the ac equation @xcite is @xmath52    for dissipative dynamics such as the ch and ac equations , a discrete time stepping algorithm is defined to be _ gradient stable _ only if the free energy is non - increasing , @xmath53 \\leq f[\\phi_t]$ ] , for any field configuration @xmath54 .",
    "the other requirements for gradient stability , e.g.  that stable fixed points must correspond to minima of @xmath50 , or that @xmath50 should increase without bound for large @xmath55 , are already manifest in the discretized forms of these equations .",
    "gradient stability may reasonably be regarded as the ultimate stability criterion for the ch equation .    *",
    "unconditional gradient stability * means that the conditions for gradient stability hold for _ any _ size time step @xmath56 .",
    "since unconditionally stable steps are our primary concern , we will henceforth use `` stable '' or `` unstable '' to refer to the behavior for arbitrarily large @xmath35 .",
    "that is , `` stable '' implies unconditionally stable , while a fixed time step algorithm like the euler step may be referred to as `` unstable '' or conditionally stable .",
    "the euler time discretization of the ch equation is @xmath57 the euler update is `` explicit '' since the field at the earlier time step ( @xmath54 ) explicitly determines the field at the next time step ( @xmath58 ) .",
    "it is also unstable for values of @xmath35 that exceed a lattice - dependent threshold , @xmath59 @xcite .",
    "the fully implicit time step is obtained by replacing @xmath60 with @xmath61 in eq .",
    "( [ eq : cheuler ] ) , and is , like the euler step , accurate to @xmath62 .",
    "other time steps , which involve splitting @xmath46 into parts evaluated at @xmath1 and at @xmath63 , are generally called semi - implicit methods .",
    "remarkably , eyre @xcite proved that appropriate semi - implicit parametrizations can lead to stable update steps for both the ch and ac equations .",
    "to explore these possibilities , it is useful to introduce a general family of such steps for the ch equation in an arbitrary spatial dimension : @xmath64                   = \\nonumber\\\\          \\phi_t & - & a_1 \\dt \\grad^2\\phi_t - a_2 \\dt \\grad^4\\phi_t +                   a_3 \\dt \\grad^2\\phi_t^3 .",
    "\\label{eq : chgeneral}\\end{aligned}\\ ] ] this reduces to eq .",
    "( [ eq : chdirect ] ) for @xmath65 . for each of the three terms on the right - hand side of eq .",
    "( [ eq : ch ] ) there generally are _ both _ explicit and implicit contributions to eq .",
    "( [ eq : chgeneral ] ) , and this will be exploited to construct stable dynamics for any size @xmath0 . for all values of the parameters @xmath66 and @xmath67 this step gives a solution @xmath22 that is order @xmath62 accurate .",
    "the implicit terms are denoted @xmath22 , with @xmath58 reserved to represent the exact field obtained by integration of eq .",
    "( [ eq : ch ] ) over the time step @xmath35 .",
    "we choose our parameterization such that @xmath68 corresponds to the euler update eq .",
    "( [ eq : cheuler ] ) , while @xmath69 is the fully implicit step . for @xmath70",
    "we have , motivated by eyre , a mixed non - linear term with @xmath71 that combines implicit and explicit terms .",
    "it is useful to sort algorithms described by eq .",
    "( [ eq : chgeneral ] ) into three categories based on how they are implemented numerically .",
    "first , when @xmath65 we have * linear direct * steps , where the equation for @xmath22 is linear and has spatially uniform coefficients so the updated field can be found efficiently with fft methods .",
    "second , when @xmath70 but @xmath72 then the implicit equation remains linear in @xmath22 but no longer has spatially uniform coefficients .",
    "eyre outlines an iterative procedure for solving these equations @xcite , so we call these * linear iterative * steps . insisting on convergence of the iterative procedure restricts this class to a subset of parameter values . finally , for @xmath73 and @xmath74 the update equation is * nonlinear*. for some parameter values the nonlinear equation can lead , unphysically , to multiple solutions .",
    "this occurs for both the fully implicit case @xmath75 , as well as the crank - nicholson case @xmath76 , @xmath77 , whenever @xmath35 exceeds a threshold value @xcite .",
    "generally the nonlinear equations require solution by the newton - raphson method , which is complicated to implement in two or more spatial dimensions .",
    "for some parameter values this can be demonstrated to be absolutely convergent , so nonlinear steps provide a viable option  though not one we have explored numerically .",
    "the step parametrization for the ac equation analogous to eq .  ( [ eq : chgeneral ] ) is @xmath78                   = \\nonumber\\\\          \\phi_t & + & a_1 \\dt \\phi_t + a_2 \\dt \\grad^2\\phi_t -                  a_3 \\dt \\phi_t^3 ,          \\label{eq : acgeneral}\\end{aligned}\\ ] ] which we include because the theoretical stability analysis follows nearly identically for the ch and ac equations , and the stability regions are given by the same shaded regions of fig .  1 .",
    "eyre s theorem ( see appendix [ app : eyre ] ) shows that an unconditionally gradient stable algorithm results , for both the ch and ac equations , if one can split the free energy appropriately into _ contractive _ and _ expansive _ parts , @xmath79 , and treat the contractive parts implicitly and the expansive parts explicitly .",
    "that is , the ch equation ( [ eq : ch2 ] ) is discretized as @xmath80 while the ac equation ( [ eq : ac ] ) is discretized as @xmath81 where @xmath82 for lattice site @xmath83 , and where @xmath84 implies a lattice laplacian .",
    "the necessary condition on the splitting is the same for both equations and may be stated by introducing the hessian matrices @xmath85 where @xmath86 denote lattice sites .",
    "first , we must have all eigenvalues of @xmath87 non - positive and all eigenvalues of @xmath88 non - negative .",
    "second , as shown in appendix [ app : eyre ] , for @xmath89 equal to the smallest eigenvalue of @xmath90 and @xmath91 the largest eigenvalue of @xmath87 , we need @xmath92 this also automatically satisfies the convexity requirement for @xmath93 , since @xmath94 .    to identify the appropriate splittings , it is useful to break the free energy eq .",
    "( [ eq : f ] ) , in its lattice - discretized form , into three parts ( neglecting the irrelevant constant @xmath95 term ) : @xmath96 with corresponding hessian matrices @xmath97 . the first , @xmath98 , where @xmath99 is the kronecker @xmath100-function , has all eigenvalues equal to @xmath101",
    "next , @xmath102 is negative the lattice laplacian , which can always be diagonalized by going to fourier space .",
    "it immediately follows that the eigenvalues of @xmath103 are strictly non - negative .",
    "( even for irregular spatial discretizations , the @xmath104 eigenvalues must be non - negative . ) finally , @xmath105 , which has strictly non - negative eigenvalues as well .",
    "we parametrize the splitting via @xmath106 which results in the general ch step eq .",
    "( [ eq : chgeneral ] ) and ac step eq .",
    "( [ eq : acgeneral ] ) when @xmath77 .    now to obtain bounds",
    ": since the sum of matrices , @xmath107 , has eigenvalues bounded by the sum of the bounds , the minimum eigenvalue of @xmath90 satisfies @xmath108 .",
    "therefore eq .",
    "( [ eq : eyrecondition ] ) is satisfied by ensuring @xmath109 .",
    "one example that satisfies these conditions is the splitting @xmath110 and @xmath111 , since @xmath112 satisfies eq .",
    "( [ eq : eyrecondition ] ) and @xmath88 has strictly non - negative eigenvalues .",
    "this provides a gradient stable * nonlinear * step with @xmath113 and @xmath114 .",
    "this case was identified by eyre @xcite , who noted that the convexity requirement for the splitting guarantees absolute convergence of the newton - raphson method .",
    "eyre also presents a technique for identifying stable linear * direct * algorithms @xcite , which relies on the fact that @xmath115 is bounded .",
    "it exceeds unity only slightly in the ch equation and only in the interior region of a curved interface due to gibbs - thompson effects @xcite .",
    "therefore the eigenvalues of @xmath116 have an effective upper bound , approximately three . if we then take @xmath117 ( so @xmath65 and @xmath118 ) the eigenvalues of @xmath87 are of the form @xmath119 and satisfy eq .",
    "( [ eq : eyrecondition ] ) for @xmath120 if @xmath121",
    ". any value @xmath122 will give the same result , since negative values of @xmath24 can only decrease the eigenvalues of @xmath87 .",
    "these choices imply @xmath123 , which has the necessary non - negative eigenvalues for the range of @xmath23 and @xmath24 given above . therefore we can identify a class of gradient stable * direct * ch and ac steps as @xmath124 this gives the dark gray shaded region in fig .",
    "[ fig : abstab ] .",
    "these represent _ sufficient _ restrictions on the @xmath66 to satisfy the conditions for eyre s theorem ; however other values of the @xmath66 may be gradient stable as well .",
    "eyre provided specific step examples for all three implementation categories : a _ nonlinear _ step , with @xmath113 , @xmath125 , and @xmath77 , a linear _ iterative _ step with @xmath72 and the same @xmath66 as the nonlinear step , and a linear _ direct _ step with @xmath126 , @xmath118 , and @xmath65 @xcite .",
    "the nonlinear step is the example presented earlier in this section , and its gradient stability follows from eyre s theorem .",
    "however , it is not clear to us that eyre s theorem can be directly applied to the iterative steps , and in fact we find eyre s proposed iterative method to be numerically unstable , as described in sec .",
    "[ subsec : gradientstable ] . finally , the @xmath23 value in the direct step violates eq .",
    "( [ eq : eyrestability ] ) , so this case does not follow from eyre s theorem .",
    "since eyre s theorem provides , in principle , only a subset of the possible gradient stable steps , complementary approaches for determining stability are desirable . in this section",
    "we extend von neumann s ( vn ) linear stability analysis @xcite to arbitrary time steps , which we call unconditional vn stability .",
    "since any gradient stable algorithm is likely also linearly stable , the von neumann analysis would appear to identify a _",
    "superset _ of possibly gradient stable algorithms : in principle the vn analysis could also identify some unwanted _ non - linearly _ unstable algorithms . as shown in fig .",
    "[ fig : abstab ] , though , the vn stability boundary corresponds quite well with the numerically determined gradient stability line .",
    "this leads us to suggest that the approach of imposing unconditional vn stability on a broadly parametrized class of semi - implicit algorithms , followed by numerical checking , could be fruitfully adapted to a wide variety of applications .",
    "we analyze the general step eq .",
    "( [ eq : chgeneral ] ) for linear stability around a constant phase @xmath127 .",
    "it is important to realize there are _ physical _ , and therefore desirable , linear instabilities in the continuum ch and ac equations .",
    "therefore it is important to distinguish between these and the unphysical instabilities induced by the numerical implementation .",
    "take @xmath128 , and linearize the ch equation ( [ eq : ch ] ) in @xmath129 to get @xmath130 .",
    "fourier transform this to get @xmath131 here @xmath132 is the eigenvalue of the laplacian and is non - positive , with @xmath133 ( note that @xmath134 in the continuum ) . the minimum value @xmath135 depends on the lattice , spatial dimension , and specific form of the laplacian .",
    "similarly , for the same @xmath55 linearize the ac equation ( [ eq : ac ] ) in @xmath129 and fourier transform to get @xmath136 the physical instability for both eqs .",
    "( [ eq : chlin ] ) and ( [ eq : aclin ] ) occurs for @xmath137 which corresponds in the ch equation to spinodal decomposition @xcite .",
    "we stress that while these fourier modes are linearly unstable , the dynamics of spinodal decomposition is _ gradient stable _ and represents a physical decrease of the free energy , which is why it must be retained .",
    "we now linearize and fourier transform our general ch step eq .",
    "( [ eq : chgeneral ] ) as above to get @xmath138 \\eta_{\\b k , t+\\dt } =       \\nonumber \\\\ \\ \\   % % % needed due to latex bug          [ 1-\\lk \\dt \\ { & & a_1 + \\lk a_2   \\nonumber \\\\                            & & + \\phi_0 ^ 2 ( -3 a_3 + m(a_3 - 1 ) ) \\ } ] \\eta_{\\b k , t }          \\label{eq : lin_general}\\end{aligned}\\ ] ] writing this as @xmath139\\eta_{\\b k , t+\\dt } =       [ 1+\\dt{\\cal r}_{\\bf k}]\\eta_{\\b k , t } ,      \\label{eq : vneq}\\ ] ] the von neumann stability criterion is @xmath140 which implies that small deviations from the constant solution evolve to decrease in magnitude .",
    "we want to impose this stability condition for all @xmath141 and _ arbitrary _ positive @xmath35 . for large @xmath35 , eq .",
    "( [ eq : vndef ] ) implies @xmath142 . the left - hand side of eq .",
    "( [ eq : vndef ] ) can be made to violate the inequality for small @xmath35 unless @xmath143 . combining these conditions we have @xmath144 which is a _ necessary and sufficient _",
    "condition for unconditional linear stability .",
    "this condition applies to _ all _ first - order time steps that can be expressed in the form given by eq .",
    "( [ eq : vneq ] ) .",
    "we examine the linear stability condition in two steps .",
    "first , @xmath145 : @xmath146 .",
    "\\label{eq : vnspinodal}\\ ] ] this reduces to the spinodal condition , eq .",
    "( [ eq : spinodal ] ) .",
    "note that all the parameters @xmath147 are absent from eq .",
    "( [ eq : vnspinodal ] ) , so we can not interfere with the spinodal condition .",
    "this evidently follows from having a first - order accurate step .",
    "next , we check for @xmath148 , which gives @xmath149\\phi_0",
    "^ 2+\\lk ( 2a_2 - 1 ) > 0 .",
    "\\label{eq : vncondition}\\ ] ] if we choose @xmath150 , then since @xmath151 we get @xmath152\\phi_0 ^ 2 > 0 $ ] .",
    "for @xmath153 we obtain a lattice - dependent condition , that is , our inequality would contain @xmath135 .",
    "we choose to restrict ourselves to lattice-_independent _ stability conditions as these are more practical : they carry over into any lattice or spatial dimension . for this purpose",
    "we take @xmath154 .",
    "this gives the vn stable conditions",
    "@xmath155\\over2}. \\label{eq : vnstability}\\end{aligned}\\ ] ] we have let @xmath156 vary in the late - time asymptotic range of @xmath157 $ ] , where gibbs - thompson induced supersaturation has be ignored , and have imposed on @xmath23 the most restrictive value that results . for this reason algorithms near the stability boundaries should be avoided at early times .    for direct steps , with @xmath65 , the second condition in eq .",
    "( [ eq : vnstability ] ) becomes @xmath158 .",
    "this gives the lightly shaded region in fig .",
    "[ fig : abstab ] .",
    "the euler update , with @xmath68 is clearly unstable since @xmath159 _ and _ @xmath160 . for linear",
    "iterative steps , with @xmath72 , eq .  ( [ eq : vnstability ] ) becomes @xmath161 $ ] .",
    "the stability condition of the general nonlinear step can not be further simplified from eq .",
    "( [ eq : vnstability ] ) , but the special case @xmath77 gives @xmath162 $ ] .",
    "there is another special case for which the stability conditions can be imposed , namely when @xmath77 and @xmath163 . in this case",
    "the vn condition eq .",
    "( [ eq : vncondition ] ) becomes @xmath164 > 0 .",
    "\\label{eq : equala}\\ ] ] the square brackets term is again the spinodal condition and should be positive for all physically stable modes , so for @xmath165 both vn stability conditions reduce to the spinodal condition .",
    "however , these steps , which include the marginal crank - nicholson case ( @xmath166 ) and the stable fully implicit step ( @xmath167 ) suffer from having multiple solutions to the nonlinear implicit equation whenever @xmath35 exceeds some threshold , making them unsuitable .    regarding eyre s proposed steps , introduced at the end of sec .  [ subsec : eyrestability ] , we note that the direct step is vn stable , the iterative step is marginal for vn stability , and the nonlinear step , which was gradient stable by eyre s theorem , is also vn stable .",
    "the same linearization for the general ac step eq .",
    "( [ eq : acgeneral ] ) results in the same linearized equation ( [ eq : lin_general ] ) but with the substitution @xmath168 .",
    "since @xmath169 , the vn stability analysis for the ac equation is identical and also results in eq .",
    "( [ eq : vnstability ] ) .",
    "the vn stability analysis yields a considerably larger parameter range for stable steps , eq .",
    "( [ eq : vnstability ] ) , than those which are provably stable by eyre s theorem , e.g.  eq .",
    "( [ eq : eyrestability ] ) . here",
    "we determine numerically which step parametrizations are gradient stable , for purposes of comparison with the theoretical results .",
    "we focus primarily on * direct * steps , with @xmath65 , since these are an important practical class of steps .",
    "we consider only symmetric quenches of the ch equation in this section , with @xmath170 .    the primary result , shown in fig .",
    "[ fig : abstab ] , is obtained as follows .",
    "we evolved a uniformly distributed @xmath171 array of direct ch steps with the parameter values @xmath172 and @xmath173 on a @xmath174 lattice to a final time @xmath175 .",
    "we take lattice spacing @xmath176 here and throughout . at regular intervals during the evolution we tested a single direct step with @xmath177 .",
    "this step was only used for stability testing , and did not contribute to the time evolution .",
    "steps larger than @xmath178 were not employed , to avoid spurious roundoff error effects .",
    "any system that _ ever _ increased its free energy was labeled unstable , and plotted in fig .",
    "[ fig : abstab ] with a filled circle .",
    "the systems were evolved in time with multiple methods .",
    "first , we used euler updates ( @xmath179 ) evolved to @xmath180 .",
    "next , we evolved systems with direct updates both with fixed @xmath181 and with an increasing time step @xmath182 ( both to @xmath183 ) .",
    "[ fig : abstab ] shows , all vn stable algorithms were found numerically to be gradient stable , and the lightly shaded region corresponds extremely well to the gradient stable systems .",
    "indeed , the vn stability boundary for @xmath23 appears to be followed quite sharply in the numerical tests .",
    "we do find numerical gradient stability for a region where @xmath159 : this is most likely due , ironically , to a lattice - induced stabilization .",
    "that is , since the lattice laplacian @xmath132 has an implementation - dependent minimum value , the inequality ( [ eq : vncondition ] ) may be satisfied for some @xmath159 .",
    "therefore we expect the precise location of this boundary to shift slightly depending on the lattice , the spatial dimension , and the choice of lattice laplacian , but not to cross @xmath184 .    with the numerical tests described above we have tested the linear iterative step proposed by eyre @xcite and found it to be unstable",
    ".    to help illustrate numerical testing of gradient stability , we show a mixture of stable and unstable steps in figs .",
    "[ fig : energy ] and [ fig : enerror ] .",
    "the difference between gradient stable and unstable steps is striking : while neither are particularly accurate for extremely large @xmath35 , the unstable steps show a marked increase in the free energy density , while the gradient stable steps adhere to the strict non - increasing free energy condition .",
    "however , the closer view in fig .",
    "[ fig : enerror ] shows that some cost is paid in accuracy : for small values of @xmath35 , both the euler step and the unstable semi - implicit step track the physical behavior better than the stable step . while it may appear from fig .",
    "[ fig : enerror ] that moderately large steps may be used with unstable algorithms , this is not case : for example using a @xmath185 for the euler update will lead to instability via accumulated error from _ repeated _ steps .",
    "= 3.0 in    = 3.0 in",
    "with a gradient stable algorithm , it is possible to use a progressively larger time step as the characteristic dynamics become slower . the limiting factor for the increase of the time step is then an _ accuracy _ requirement .",
    "a specified accuracy criterion may be imposed on the stable steps identified in sec .",
    "[ sec : stability ] without any further theoretical development using standard numerical adaptive step - size techniques ( as described in @xcite and discussed in sec .",
    "[ subsec : directerror ] ) . naively , one would expect a time step growing as @xmath186 , for the reasons presented in sec .",
    "[ sec : intro ] .",
    "however , this is not the case : empirically we find significantly slower growth .",
    "this motivated us to study the sources of error terms in the gradient stable steps .",
    "our main result is the @xmath36 classification scheme , which determines the allowed growth rate of the time step according to eq .",
    "( [ eq : dtp ] ) .",
    "we begin with an analysis of the error magnitude associated with the various gradient stable algorithms .",
    "the exact @xmath58 , obtained by integration of eq .  (",
    "[ eq : ch ] ) from a given @xmath54 , can be expressed in terms of the fields at time @xmath1 by means of a taylor expansion : @xmath187 the euler update , eq .",
    "( [ eq : cheuler ] ) , is simply the truncation of this expansion at @xmath62 with resulting error @xmath188 given by @xmath189 other step parametrizations will have different coefficients for the @xmath190 component of the error , but the general feature of an expansion to all powers of @xmath35 will be the same . since our goal is to have a growing time step with controlled error , successively higher powers of @xmath35 will require coefficients decaying increasingly faster in time . in order to determine the limitation on",
    "how fast the time step may grow , it is essential to know the decay rates of the coefficients of @xmath191 to all orders @xmath192 .",
    "in this section we demonstrate how this can be done .",
    "we make use of the following results for asymptotic decay rates , derived in sec .",
    "[ subeq : fieldscaling ] . in the interfacial region ( defined in sec .",
    "[ subeq : fieldscaling ] ) @xmath193 whereas in the bulk , that is , all of the system not near an interface , we find @xmath194    consider first the euler step : all the @xmath190 coefficients are simply proportional to the time derivative @xmath195 evaluated at @xmath1 . if numerical stability were not a problem and we simply increased the time step according to the naive @xmath196 , we would find in the interfacial region that every order in the taylor expansion provides an @xmath197 contribution to the error , whereas in the bulk region every order provides an @xmath198 contribution .",
    "this would present an accurate solution with a @xmath199 time step , except that of course the euler step is not gradient stable for large time steps .    now consider the general step , eq .",
    "( [ eq : chgeneral ] ) . the error term in this step",
    ", @xmath200 can be written as @xmath201          \\label{eq : gen_error}\\end{aligned}\\ ] ] this peculiar form with implicit @xmath22 on the right is useful for the error analysis . by using eq .",
    "( [ eq : chgeneral ] ) iteratively , the implicit terms can be replaced by terms higher order in @xmath35 involving the field @xmath54 .",
    "for example , we can derive the @xmath40 part of the error , using @xmath202 and @xmath203 .",
    "we find the error in our general step to be @xmath204\\dt^2 + o(\\dt^3 ) ,          \\label{eq : dt2_error}\\end{aligned}\\ ] ] where the first term comes from eq .",
    "( [ eq : euler_error ] ) . now compare the time decay of the various terms . at the interface ,",
    "the @xmath205 part decays as @xmath206 , but the other terms all decay as @xmath207 .",
    "therefore , for general values of the @xmath66 and @xmath67 , to keep the @xmath40 interfacial error fixed the time step is limited to grow as @xmath34 .",
    "we see that the euler case was special because it made all but the first term in the @xmath40 error vanish . since every term in eq .",
    "( [ eq : dt2_error ] ) decays faster in the bulk than at the interface , we conclude the error is _ interface limited _",
    ", i.e. ,  the accuracy criterion at the interface will determine how fast the time step can grow .",
    "this is a generic feature , as we will show below .",
    "there are other ways besides using the euler step to make the @xmath40 interfacial error decay as @xmath206 . if the coefficients satisfy @xmath208 for some @xmath209 , then the various @xmath210 terms in eq .",
    "( [ eq : dt2_error ] ) add to give @xmath211 . in this case ,",
    "@xmath212 and so the @xmath40 coefficient decays as @xmath206 at the interface , and faster in the bulk . from this example",
    "we can construct the @xmath36 classification scheme .",
    "consider the truncation error term of order @xmath191 .",
    "this can be obtained by iterating eq .",
    "( [ eq : gen_error ] ) and can be expressed as a sum of terms of the form @xmath213 .",
    "if these terms appear in the right proportions , they combined via eq .",
    "( [ eq : ch ] ) to become proportional to @xmath195 , which decays faster by a factor of @xmath214 at the interface .",
    "this is exactly what occurs in the @xmath215 case above when eq .",
    "( [ eq : chp3 ] ) is satisfied .",
    "now consider some value @xmath216 for which all @xmath191 error terms with @xmath217 are proportional to @xmath218 , but at order @xmath219 this breaks down into a sum of terms of the type @xmath220 . in this case",
    "the order @xmath36 term provides the leading asymptotic error . focusing on interfacial region",
    ", the order @xmath36 term goes as @xmath221 according to the second term in eq .",
    "( [ eq : interfacedecay ] ) . choosing the time step to hold this term at constant error would require @xmath222 with @xmath223 , as displayed in eq .",
    "( [ eq : dtp ] ) .",
    "now we show that all higher- and lower - order terms in @xmath35 will decay faster than the @xmath37 term for this choice of @xmath3 . for @xmath217 , we have from the first term in eq .",
    "( [ eq : interfacedecay ] ) @xmath224 , so the @xmath217 terms give ever - decreasing contributions to the error . for @xmath225",
    "the error terms are of the form @xmath226 which decay as well .",
    "hence the asymptotic interfacial error is given by the @xmath227 term as advertised , and is order @xmath228 .",
    "note that for this interface limited @xmath222 all bulk terms to all orders have decaying error terms , thus establishing interface limited error as a generic feature .",
    "direct steps , with @xmath65 by definition and @xmath229 , @xmath154 for stability , fail to satisfy eq .",
    "( [ eq : chp3 ] ) and so all direct steps give @xmath39 algorithms with @xmath230 .",
    "this means that the asymptotic error magnitude should be given exactly by @xmath231 with @xmath232 .",
    "this gives a fixed amount of error at the interface , and all higher orders of @xmath35 give decaying contributions .",
    "therefore , the error magnitude is proportional to @xmath233 , and we can use numerical measurements of eq .",
    "( [ eq : directerror ] ) to develop the constant of proportionality .",
    "we determine error numerically in the usual way @xcite : compare the field @xmath234 obtained from a single step of size @xmath35 to the field @xmath235 obtained from two steps of size @xmath236 .",
    "it is straightforward to show that if the true error of the step is @xmath237 , then @xmath238 . since we expect exactly @xmath239 error , we simply take @xmath240 to be the true error .    in the bulk",
    ", the error decays as @xmath207 .",
    "the interfacial error is not decaying , but the amount of interface decays as @xmath241 , which means the error magnitude eq .",
    "( [ eq : directerror ] ) averaged over the entire system will also decay as @xmath241 , all from the interfacial contribution . to determine the error per lattice site in the interfacial region , it is necessary to divide the averaged error by the fraction of the system in the interfacial region .",
    "we do that as follows .",
    "the asymptotic free energy density is given by the product of the surface tension @xmath242 and interface density : @xmath243 , where the interfacial `` area '' @xmath244 is a @xmath245 dimensional hypersurface , and @xmath246 is the system size . for interface width @xmath12",
    ", @xmath247 represents the fraction of the system in the interfacial region . multiplying the averaged error by @xmath248 then gives the typical error in the interfacial region . the surface tension corresponding to eq .",
    "( [ eq : f ] ) is @xmath249 .",
    "we take @xmath250 as a typical measure for the interface width .",
    "we have investigated this error for a variety of direct algorithms in fig .",
    "[ fig : contour ] , where we have plotted the interfacial error as determined above divided by @xmath233 .",
    "we plot this error amplitude against @xmath23 and @xmath24 for the same shaded regions [ `` vn '' and `` e '' ] as identified in fig .",
    "[ fig : abstab ] . the typical interfacial error for a given direct step of size @xmath251",
    "may be obtained by multiplying the appropriate contour value by @xmath233 .",
    "= 2.4 in    to illustrate the advantages of stable algorithms , as well as of a detailed error analysis where it is possible , we show in fig .",
    "[ fig : driven ] how the error evolves in time for direct steps with @xmath251 versus the euler step with fixed @xmath35 .",
    "the field @xmath55 is evolved by the euler method , and during the evolution error checking is done with single steps that do not contribute to the evolution .",
    "the decay of the euler error shows that the euler method is asymptotically wastefully accurate .",
    "= 3.0 in    our single - step analysis and testing does not conclusively demonstrate that an algorithm will be reasonably behaved under successive steps , i.e. ,  there is a possibility of accumulation of error . in fig .",
    "[ fig : endrive ] we show the free energy density for systems evolved by a direct step and compare the evolution to that obtained by the euler method .",
    "it appears that the errors do not accumulate and the free energy decays properly as @xmath241 .",
    "= 3.25 in      to go beyond the @xmath39 steps with @xmath230 , it is necessary to find a stable step that satisfies eq .",
    "( [ eq : chp3 ] ) . comparing with the stability conditions , eqs .",
    "( [ eq : vnstability ] ) , we find only marginally stable algorithms with @xmath253 and @xmath254 for @xmath255 . for @xmath77",
    "this becomes the crank - nicholson method , which as noted before , has a fixed time step due to solvability considerations .",
    "however , a marginal linear iterative step is possible with @xmath72 and @xmath256 .",
    "unfortunately , whether or not the marginality is a problem , the iterative method ( given by eyre in @xcite ) fails to converge absolutely for these parameters . evidently , then",
    ", it is not possible to construct a useful @xmath257 step from the general step eq .",
    "( [ eq : chgeneral ] ) .",
    "one possible way to develop a @xmath257 step is to use a method that is both stable and second - order accurate in time .",
    "for example , a two - step method that uses both @xmath258 and @xmath54 to determine the updated field @xmath58 can be made to have no @xmath40 error .",
    "a preliminary study of vn stability for these two - step methods indicates that these are a possibility .",
    "it is worth considering the prospect of obtaining a @xmath259 step : according to the @xmath36 classification analysis this would allow the natural @xmath260 time step .",
    "however , the error terms need to be strictly proportional to @xmath195 at each order @xmath191 . to achieve this with a one - step method one needs @xmath261 eq .",
    "( [ eq : equala ] ) shows that this step will be linearly unstable when @xmath262 ( for large enough @xmath35 ) , while for @xmath263 one runs into solvability problems . at this point",
    "it seems unlikely that a @xmath259 algorithm for the ch equation will be possible .      in this section",
    "we derive the relations ( [ eq : interfacedecay ] ) and ( [ eq : bulkdecay ] ) that provided the basis for @xmath36 classification .",
    "enough is known about ch dynamics that we can explicitly analyze the leading asymptotic decay of mixed space and time derivatives to arbitrary order .",
    "we follow the review by bray @xcite , and we restrict ourselves to the power - law scaling of these terms at sufficiently late times , where all observable length scales that describe the domain wall morphology , such as the interface curvature radii , are proportional to the domain size @xmath264 .",
    "the domain wall thickness @xmath12 does not grow with time , so @xmath265 asymptotically .",
    "however , when analyzing the fields in the interfacial region , defined as the locus of points within a distance @xmath12 of a domain wall center ( i.e. , the surface @xmath266 ) , both length scales @xmath267 and @xmath12 can appear .",
    "the remainder of the system is referred to as the bulk .",
    "the scale of the chemical potential @xmath46 is proportional to interface curvature @xmath268 due to the gibbs - thompson effect , and since @xmath269 @xmath270 in the bulk , the chemical potential varies smoothly and continuously , so a laplacian simply brings in more powers of @xmath267 : @xmath271 which implies @xmath272 via the equation of motion ( [ eq : ch2 ] ) .",
    "now we use the relation @xmath273 in the bulk @xcite to relate derivatives of @xmath55 and @xmath46 .",
    "for example , @xmath274 , so @xmath275 .",
    "taking more time derivatives gives @xmath276 iterating this from the initial value for @xmath277 gives @xmath278 , the first term in eq .",
    "( [ eq : bulkdecay ] ) .",
    "when the time derivatives act on a power of the field @xmath279 , the resulting expression contains the @xmath280 fields and @xmath192 time derivatives in various combinations . in this case",
    "the asymptotic decay comes from the single term proportional to @xmath281 , which means the decay for @xmath279 derivatives is the same as the @xmath282 case , since the field @xmath55 is order unity in the bulk .",
    "to illustrate , consider @xmath283 .",
    "the second term decays as @xmath284 as advertised , while the first term goes as @xmath285 and is asymptotically negligible .    adding spatial derivatives in the bulk simply brings more factors of @xmath286 , so @xmath287 which gives the second term in eq .",
    "( [ eq : bulkdecay ] ) .    near interfaces , @xmath55 changes by an amount @xmath288 in the amount of time , @xmath289",
    ", it takes an interface to pass by .",
    "therefore we get @xmath290 in the interfacial region , in contrast to @xmath291 . in the bulk . to determine the scaling @xmath292 , consider sitting at a point just outside the interfacial region , in front of the moving interface . at a time @xmath293 later this point will be in the interfacial region , so @xmath277 will have changed from a bulk to an interfacial value .",
    "this gives @xmath294 repeating this argument for higher derivatives gives @xmath295 in the interface , the first term in eq .",
    "( [ eq : interfacedecay ] ) .    for time derivatives of @xmath279 at the interface",
    ", we again get multiple terms with the various combinations of @xmath192 time derivatives and @xmath280 fields .",
    "in this case , however , every term contributes to the asymptotic decay .",
    "essentially every time derivative , wherever it acts , brings a factor of @xmath207 , and these are the only factors causing the decay .",
    "hence @xmath296 . finally , adding spatial derivatives in the interfacial region brings factors of @xmath297 rather than @xmath286 , and",
    "so does not change the asymptotic decay .",
    "this proves the second relation in eq .",
    "( [ eq : interfacedecay ] ) .",
    "having established the possibility of controlled accuracy ch simulation with a growing step size @xmath222 , we now explore the relative computational advantage offered by such an algorithm . as described in sec .",
    "[ sec : intro ] , the goal in such simulations is to evolve as far as close as possible to the scaling regime , meaning the largest possible @xmath8 .",
    "this means evolving until finite size effects enter , since stopping earlier means a smaller system size could be chosen .",
    "finite size effects are expected to appear when @xmath298 is some fraction of the system size , so we define the simulation ending time @xmath175 by @xmath299 , or @xmath300 where @xmath44 is the linear size of the lattice and @xmath301 is a small constant factor .",
    "there is some arbitrariness in the definition of the length scale @xmath8 .",
    "we take the inverse interface density as our measure , that is @xmath302 using the interfacial area @xmath244 from sec .",
    "[ subsec : directerror ] , and its relation to the free energy density and surface tension derived therein . from our data in @xmath19",
    "we find @xmath303 , so we take @xmath304 .",
    "evolving to @xmath175 with the euler step ( or any fixed - size step ) requires @xmath305 steps , where @xmath306 is the step size .",
    "for our square lattice with @xmath176 we find @xmath307 is close to the maximum stable value .",
    "more generally , one expects @xmath308 @xcite .",
    "evolving to @xmath175 with a growing step size @xmath309 requires @xmath310 where a fixed - size step is used until some time @xmath311 , and we assume @xmath312-dependent terms are negligible .",
    "finally , we determine empirically the ratio of computer time per step @xmath313 . for direct steps , the fft involved implies @xmath314 . for lattices of size @xmath315 to @xmath316 we find @xmath317 .    putting all this together , we find the ratio of computer time cost @xmath318 for direct steps , @xmath4 , so the relative speedup over euler integration grows with the system size as @xmath5 . from @xmath319",
    "we also see the speedup factor scaling as @xmath320 , making stable steps an optimal choice when a smaller lattice spacing is desired .",
    "a @xmath257 algorithm has @xmath321 and offers a speedup factor of @xmath322 .",
    "we conclude by plugging in reasonably conservative parameter values . from fig .",
    "[ fig : contour ] we see that the typical interfacial error for the @xmath126 , @xmath118 direct step is about @xmath323 .",
    "this is to be compared to @xmath324 , the range in which @xmath55 varies . the choice @xmath325 is shown in fig .",
    "[ fig : endrive ] to give an error in the free energy density around 3% of the euler value .",
    "while this seems perhaps high , we note that this is comparable and probably smaller than the error already introduced in the euler discretization of the continuum ch equation due to the large lattice constant .",
    "it is an interesting question for future study what choice of @xmath14 and @xmath326 will give optimal accuracy and efficiency .",
    "we conclude that @xmath325 is a reasonable choice .",
    "we also take @xmath4 , @xmath327 , @xmath328 , @xmath176 , and @xmath329 as given above .",
    "these combine to give a factor @xmath330 . for a @xmath315 lattice",
    "the direct step is a factor 40 faster than the euler method , while for a @xmath6 lattice it is a factor 300 faster !",
    "we have seen that the general cahn hilliard ( ch ) step , eq .",
    "( [ eq : chgeneral ] ) , provides a range of linearly stable algorithms that prove to be gradient stable for enormous single time steps up to @xmath331 . with these steps",
    "unphysical instabilities arising from the discrete implementations are no longer the limiting factor . instead accuracy considerations dominate . for conserved cahn hilliard coarsening ,",
    "we have analyzed and tested the accuracy scaling for single dynamical time steps that _ increase _ without bound with time as @xmath332 .",
    "we find that the errors are dominated at the order @xmath333 where they are no longer proportional to @xmath334 .",
    "these dominant errors restrict the growth of the time step to grow as @xmath335 , which approaches the natural dynamical time step @xmath336 only as @xmath337 .",
    "the euler method , by contrast , is restricted to a constant @xmath0 .",
    "this is also the case for existing implicit fourier spectral algorithms .",
    "the * direct * steps obtained from eq .  ( [ eq : chgeneral ] ) with @xmath65 are linear and diagonalized in fourier space , and so can be simply integrated via fft s . a range of parameters , described by the shaded boxes in fig .",
    "[ fig : abstab ] , are stable .",
    "these direct steps exhibit @xmath39 and so allow @xmath338 , which results in speedup factors proportional to the linear size of the system .",
    "future work in further developing these methods includes determining possible @xmath257 algorithms , for which @xmath339 is possible and the relative speedup over the euler method is order @xmath322 .",
    "our preliminary work has shown that @xmath40 accurate two - step methods can be made unconditionally vn stable .",
    "it remains to test these stability predictions numerically to see if useful @xmath257 algorithms are possible .",
    "it is straightforward to construct a fourier spectral method integration algorithm for the stable steps analyzed here .",
    "in fact , the numerical cost of the spectral method would be quite small , since the direct steps already employ fft s for solving the update equation .",
    "the primary benefit of the spectral method for unstable algorithms is that it significantly enhances the maximum @xmath306 allowed by stability .",
    "it is not clear how much benefit spectral methods would bring to an already stable algorithm , but this should be explored .    with the euler step ,",
    "the simulation efficiency was strongly dependent on @xmath14 , leading to choosing values that were as large as feasible .",
    "consequently the interface profile is typically poorly resolved , modifying and introducing significant anisotropy into the surface tension .",
    "in contrast , the efficiency of these stable methods is much less dependent on the choice of lattice size , making them a useful tool in applications where a more accurate interface profile is desired .",
    "our analysis has been for errors after a single time - step .",
    "if the single - step errors are small enough , the linear stability of bulk solutions should control the errors from accumulating .",
    "for the ch equation at least , our observed @xmath340 decay of the free energy , even when @xmath341 , indicates that there is no significant curvature - dependent modification of interfacial speeds .",
    "nevertheless , it will be important to study the relationship between single - step errors and errors of the asymptotic scaling functions describing correlations to confirm this .",
    "we feel that our basic approach should be applicable in a wide variety of systems that have both nonlinearities and numerical instabilities .",
    "there are just three basic ingredients : i ) allow for a general semi - implicit parametrization , following eq .",
    "( [ eq : chgeneral ] ) ; ii ) check for unconditional von neumann ( linear ) stability of an individual update step , following sec .",
    "[ subsec : eyrestability ] ; and iii ) numerically test the vn stable algorithms for speed , accuracy , and nonlinear stability in order to pick the best parameters for further study .",
    "as long as the stability criteria are lattice independent , the resulting algorithms should be applicable on any regular lattice in any spatial dimension , and even on irregular discretizations such as used in adaptive mesh techniques .",
    "bpv - l acknowledges financial support from _ sonderforschungsbereich _ 262 and the hospitality of the university of mainz , where part of this work was completed .",
    "adr acknowledges financial support through nserc .",
    "we would like to thank mowei cheng , david eyre , baruch meerson , james miante , mathias rauscher , and jim sethna for stimulating discussions .",
    "we repeat eyre s stability theorem @xcite here to flesh out the derivation for the conserved dynamics case , and to clarify some details of the proof .",
    "in particular , there are a few misleading equations in @xcite that lack factors of the norm of the vector . more substantively",
    ", we find that eyre s theorem as originally presented was slightly more restrictive than necessary .",
    "note that questions of accuracy are not addressed in this proof , only questions of numerical stability .",
    "a central quantity in eyre s theorem is the hessian matrix @xmath342 where @xmath50 is the free energy and @xmath343 represents the field at the lattice site @xmath83 ( we consider only scalar one - component fields here ) . for free energies of interest in coarsening ,",
    "this matrix has both positive and negative eigenvalues .",
    "eyre finds a stable first - order step by splitting the free energy into _ contractive _ and _ expansive _ parts , @xmath344 , such that @xmath345 is convex and @xmath346 is concave ; that is , the eigenvalues of @xmath347 , the hessian matrix corresponding to @xmath345 , are strictly non - negative , and the eigenvalues of @xmath348 corresponding to @xmath346 are strictly non - positive , for any possible field configuration .",
    "let @xmath349 represent the lower bound for the eigenvalues of @xmath350 over all fields @xmath351 ( such a bound must exist @xcite ) , and @xmath352 represent the upper bound on the eigenvalues of @xmath353 .",
    "the main result is that if @xmath354 then the field equations of motion @xmath355 for nonconserved dynamics or @xmath356 for conserved dynamics lead to a strict non - increase of the free energy in time : @xmath357 where we have suppressed the lattice index for clarity .",
    "this holds unconditionally for all field configurations @xmath358 and all step sizes @xmath359 .",
    "convexity of @xmath345 ensures that the implicit equation for @xmath58 has a unique solution .",
    "the energy dissipation property , along with other reasonable requirements like positivity of @xmath50 , is called _ gradient stability _ by eyre @xcite . while gradient stability can be obtained for many algorithms , such as the euler step , by using a small enough @xmath35 , the algorithm defined by eqs .",
    "( [ eq : evinequal])([eq : eyrestepc ] ) guarantees it for _ arbitrarily large _",
    "even so , finding the splittings into @xmath345 and @xmath346 that lead to eq .",
    "( [ eq : evinequal ] ) can be a difficult task , and the splittings , if they exist , may not be unique .",
    "condition eq .",
    "( [ eq : evinequal ] ) corrects the corresponding condition in @xcite , @xmath360 .",
    "the current form is less restrictive since @xmath349 .",
    "an extremely useful corollary to eyre s theorem is that if the eigenvalue condition eq .",
    "( [ eq : evinequal ] ) is satisfied for a restricted set of fields @xmath351 , then eq .",
    "( [ eq : eyreresult ] ) still applies for all @xmath35 provided @xmath358 always stays within this restricted set . for example , @xmath351 could be field configurations with @xmath361 for all @xmath83 , for some constant @xmath362 .",
    "this can be useful when @xmath351 is physically restricted by the dynamics , and is employed in the * direct * algorithms discussed in sec .",
    "[ subsec : eyrestability ]    the proof of eq .",
    "( [ eq : eyreresult ] ) relies on two inequalities @xmath363 and @xmath364 where @xmath365 and @xmath366 .",
    "these are simply properties of multivariable functions , and are derived in appendix [ app : calculus ] for completeness .",
    "consider first _",
    "nonconserved dynamics_. by adding @xmath367_{\\bphi_{t+\\dt}}$ ] to both sides of the equation of motion eq .",
    "( [ eq : eyrestepnc ] ) one obtains @xmath368 substituting this into eq .",
    "( [ eq : inequal1 ] ) gives @xmath369 next use eq .",
    "( [ eq : inequal2 ] ) to complete the proof : @xmath370 where the last inequality follows by assumption eq .",
    "( [ eq : evinequal ] ) .    analyzing _ conserved dynamics _ is complicated by the laplacian in the equations of motion .",
    "consider a general dimensional lattice of @xmath192 sites with lattice laplacian @xmath371 a symmetric @xmath372 matrix with eigenvalues @xmath373 and @xmath374 for all @xmath375 .",
    "let @xmath376 represent the @xmath83th component of the @xmath67th eigenvector of @xmath326 , then we can write the kronecker delta function as @xmath377 where the pseudo - inverse @xmath378 is defined by @xmath379 note that the eigenvalue @xmath373 corresponds to the eigenvector @xmath380 for all @xmath83 , i.e. , a uniform field .",
    "now we insert eq .",
    "( [ eq : kronecker ] ) into the sum in eq .",
    "( [ eq : inequal1 ] ) and sum on @xmath381 to get @xmath382 where we have used @xmath383 , which follows from the conservation law . proceeding by analogy with the nonconserved case",
    ", we subtract @xmath384_{\\bphi_{t+\\dt}}$ ] from both sides of the equation of motion eq .",
    "( [ eq : eyrestepc ] ) to get @xmath385 substituting this into eq .",
    "( [ eq : ctheorem1 ] ) gives @xmath386 which is identical to eq .",
    "( [ eq : nctheorem2 ] ) except for the @xmath387 term . from the definition of @xmath378 and an expansion of @xmath388 in the eigenvalues",
    "@xmath389 it follows that @xmath390 so this term can be dropped from the right hand side of eq .",
    "( [ eq : ctheorem2 ] ) and the proof follows as before to yield eq .",
    "( [ eq : eyreresult ] ) .",
    "for completeness , we re - derive eqs .  ( [ eq : inequal1 ] ) and ( [ eq : inequal2 ] ) here . consider a general function @xmath391 of @xmath192 variables @xmath392 . from the fundamental theorem of calculus",
    "@xmath393 that is , we introduce the parameter @xmath394 to integrate along the `` diagonal '' path from @xmath395 to @xmath396 .",
    "similarly , we can write @xmath397 combining these gives the identity @xmath398 now consider the case where the eigenvalues of the matrix @xmath399 are bounded from below by some constant @xmath89 for all @xmath395 . in this case",
    "@xmath400 which follows straightforwardly from an expansion of @xmath401 in the basis of eigenvectors of @xmath350 , with @xmath402 .",
    "thus we have @xmath403 where the @xmath404 follows from the @xmath405 integrals . taking the function @xmath301 to be the free energy @xmath50 with @xmath406 and @xmath407 results in eq .",
    "( [ eq : inequal1 ] ) .    the second inequality results from setting @xmath408 in eq .",
    "( [ eq : firstderiv ] ) , then multiplying by @xmath409 and summing @xmath410 we then use a relation similar to eq .",
    "( [ eq : minequal ] ) , only with the eigenvalues of @xmath411 assumed to be bounded _ above _ by @xmath412 , to get @xmath413 now we can take @xmath414 and @xmath395 and @xmath401 as before to get eq .",
    "( [ eq : inequal2 ] ) .",
    "a.  j.  bray , adv .",
    "phys . * 43 * , 357 ( 1994 ) .",
    "t.  m.  rogers , k.  r.  elder , and r.  c.  desai , phys .",
    "b * 37 * , 9638 ( 1988 ) . d.  j.  eyre , `` an unconditionally stable one - step scheme for gradient systems , '' preprint . ( http://www.math.utah.edu/~eyre/research/methods/stable.ps )",
    "d.  j.  eyre , in _ computational and mathematical models of microstructural evolution _ , edited by j.",
    "w.  bullard _ et al .",
    "_ ( the materials research society , warrendale , pa , 1998 ) , pp .",
    "n.  provatas , n.  goldenfeld , and j.  dantzig , phys .",
    "lett . * 80 * , 3308 ( 1998 ) .",
    "y.  oono and s.  puri , phys .",
    "a * 38 * , 434 ( 1988 ) .",
    ".  chen and j.  shen , comput .",
    "commun .  * 108 * , 147 ( 1998 ) .",
    "j.  zhu , l .- q .",
    "chen , j.  shen , and v.  tikare , phys .",
    "e * 60 * , 3564 ( 1999 ) . for regions not near an interface ,",
    "the field is given by @xmath415 .",
    "for the interior regions of curved interfaces , @xmath46 and @xmath416 have the same sign , and thus result in a value @xmath417 .",
    "note that this excess is of order @xmath241 .",
    "w.  h.  press , s.  a.  teukolsky , w.  t.  vetterling , and b.  p.  flannery , _ numerical recipes in c _",
    "( cambridge university press , new york , 1993 ) ."
  ],
  "abstract_text": [
    "<S> we present cahn - hilliard and allen - cahn numerical integration algorithms that are unconditionally stable and so provide significantly faster accuracy - controlled simulation . </S>",
    "<S> our stability analysis is based on eyre s theorem and unconditional von neumann stability analysis , both of which we present . </S>",
    "<S> numerical tests confirm the accuracy of the von neumann approach , which is straightforward and should be widely applicable in phase - field modeling . we show that accuracy can be controlled with an unbounded time step @xmath0 that grows with time @xmath1 as @xmath2 . </S>",
    "<S> we develop a classification scheme for the step exponent @xmath3 and demonstrate that a class of simple linear algorithms gives @xmath4 . for this class </S>",
    "<S> the speed up relative to a fixed time step grows with the linear size of the system as @xmath5 , and we estimate conservatively that an @xmath6 lattice can be integrated @xmath7 times faster than with the euler method . </S>"
  ]
}
{
  "article_text": [
    "we introduce a new class of methods called mapped tent pitching ( mtp ) schemes for numerically solving hyperbolic problems .",
    "these schemes can be thought of as fully explicit or locally implicit schemes on unstructured spacetime meshes obtained by a process known in the literature as tent pitching .",
    "this process creates an advancing front in spacetime made by canopies of tent - shaped regions .",
    "spacetime tents are erected ( with time as the last or vertical dimension in spacetime ",
    "see figure  [ fig : tents_levels ] ) so that causality constraints of the hyperbolic problem are never violated and the hyperbolic problem is solved progressively in layers of tents .",
    "such meshing processes were named tent pitching in  @xcite . in this paper , we will refer to tent pitching as a discretization scheme together with all the attendant meshing techniques .",
    "in fact , the main focus of this paper is not on meshing , but rather on novel discretization techniques that exploit tent pitched meshes .    0.4",
    "0.4     0.4     0.4     today , the dominant discretization technique that use tent pitched meshes is the spacetime discontinuous galerkin ( sdg ) method .",
    "its origins can be traced back to  @xcite .",
    "it has seen active development over the years in engineering applications  @xcite and has also motivated several works in numerical analysis  @xcite .",
    "the sdg schemes use piecewise polynomials in the spacetime elements ( with no continuity constraints across mesh element interfaces ) and a dg ( discontinuous galerkin ) style spacetime discretization .",
    "different prescriptions of dg fluxes result in different methods .",
    "advanced techniques , including adaptive spacetime mesh refinement maintaining causality  @xcite , and exact conservation  @xcite , have been realized for sdg methods .",
    "the above - mentioned research into sdg methods has abundantly clarified the many advantages that tent pitched meshes offer .",
    "perhaps the primary advantage they offer is a rational way to build high order methods ( in space and time ) that incorporates spatial adaptivity and locally varying time step size , even on complex structures . without tent meshes ,",
    "many standard methods resort to ad hoc techniques ( interpolation , extrapolation , projection , etc . ) for locally adaptive time stepping  @xcite within inexpensive explicit strategies .",
    "if one is willing to pay the expense of solving global systems on spacetime slabs  @xcite , then time and space adaptivity are easy . in between these options",
    ", there are interesting alternative methods , without using tents , able to perform explicit local time stepping while maintaining high order accuracy  @xcite by dividing the spatial mesh into fine and coarse regions .",
    "the concepts we present using tents provide a different avenue for locally advancing in time . when using tents , the height of the tent pole must be restricted to ensure the solvability of the hyperbolic problem in the tent .",
    "this is referred to as the _ causality constraint _ and it restricts the maximal time advance possible at a spatial point . even if akin to the courant - friedrichs - levy ( cfl ) constraint , the causality constraint does not arise from a discretization and is different from the cfl constraint .",
    "the main novelty in mtp schemes is a mapping of tents to cylindrical domains where space and time can be separated , so that standard spatial discretizations combined with time stepping can be used for solving on each tent .",
    "mtp schemes proceed as follows : ( i ) construct a spacetime mesh using a tent pitching ( meshing ) algorithm .",
    "( ii ) map the hyperbolic equation on each tent to a spacetime cylinder .",
    "( iii )  spatially discretize on the cylinder using any appropriate existing method .",
    "( iv )  apply an explicit or implicit ( high order ) time stepping within the cylinder .",
    "( v )  map the computed solution on the cylinder back to the tent .",
    "proceeding this way , tent by tent , we obtain the entire solution .    as a result of this mapping strategy , we are able to construct fully explicit tent pitching schemes for the first time .",
    "we call these _ explicit mtp schemes_. ( note that the possibility to perform explicit time stepping within a tent did not exist with sdg methods . ) explicit mtp schemes map each tent to a cylinder , where space and time can be separated , use a spatial discretization and thereafter apply an explicit time stepping to compute the tent solution . using explicit mtp schemes , we are able to bring the well - known cache - friendliness and data locality properties of explicit methods into the world of local time stepping through unstructured spacetime tent meshes . in a later section , we will show the utility of explicit mtp schemes by applying it to a complex mach  3 wind tunnel problem using an existing dg discretization in space and an explicit time stepping .",
    "note that there is no need to develop a new spacetime formulation on tents for the euler system in order to apply the mtp scheme .",
    "the new mapping strategy also permits the creation of another class of novel methods which we call _ locally implicit mtp schemes_. here , after the mapping each tent to a cylinder , we use an implicit time stepping algorithm .",
    "this requires us to solve a small spatial system ( local to the tent ) in order to advance the hyperbolic solution on each tent .",
    "this approach also retains the advantage of being able to use standard existing spatial discretizations and well - known high order implicit runge - kutta time stepping .",
    "while the explicit mtp schemes are constrained by both the causality constraint and a cfl constraint imposed by the choice of the spatial discretization , in locally implicit mtp schemes there is no cfl constraint .",
    "the causality constraint applies , and depends on the _ local _ tent geometry and local wavespeed , but is independent of degree ( @xmath0 ) of the spatial discretization .",
    "this provides one point of contrast against traditional methods , whose global timestep ( @xmath1 ) depends on the smallest element size ( @xmath2 ) and the largest degree ( @xmath3 ) over the entire mesh .",
    "in the remainder of the paper , we will be concerned with hyperbolic problems that fit into a generic definition described next .",
    "let @xmath4 and @xmath5 be integers not less than @xmath6 .",
    "all the problems considered can be written as a system of @xmath4 equations on a spacetime cylindrical domain @xmath7 , where the spatial domain @xmath8 is contained in @xmath9 .",
    "given sufficiently regular functions @xmath10 @xmath11 and @xmath12 the problem is to find a function @xmath13 satisfying @xmath14 where @xmath15 denotes the time derivative and @xmath16 denotes the spatial divergence operator applied row wise to matrix - valued functions . to be clear",
    ", the system   can be rewritten , using subscripts to denote components ( e.g. , @xmath17 denotes the @xmath18th component of @xmath19 , @xmath20 denotes the @xmath21th component of @xmath22 , etc . ) , as @xmath23 for @xmath24 here and throughout , @xmath25 denotes differentiation along the @xmath26th direction in @xmath27 . in examples ,",
    "we will supplement   by initial conditions on @xmath8 and boundary conditions on @xmath28    we assume that the system   is _ hyperbolic in the @xmath29-direction _ , as defined in  @xcite . note that in particular , this requires that for any fixed @xmath30 and @xmath31 , the @xmath32 derivative matrix @xmath33 ( whose @xmath34th entry is @xmath35 ) is invertible , i.e. , @xmath36 \\ne 0.\\ ] ] hyperbolicity also provides , for each direction vector and each point @xmath37 , a series of real eigenvalues called characteristic speeds .",
    "let @xmath38 denote the maximum of these speeds for all directions . for simplicity , we assume that @xmath38 is given ( even though it can often be computationally estimated ) , so that the meshing process in the next section can use it as input .    geometrical definitions and meshing algorithms are given in section  [ sec : tents ] ( tents ) .",
    "transformation of tents and hyperbolic equations within them is the subject of section  [ sec : maps ] ( maps ) .",
    "two distinct approaches to designing novel mtp methods are presented in section  [ sec : twoapproaches ] . in section  [ sec : wave ] , we discuss a locally implicit mtp method for the acoustic wave equation in detail . in section  [ sec : euler ] , after giving general details pertaining to treatment of nonlinear hyperbolic conservation laws , we focus on an explicit mtp scheme for euler equations .",
    "the mtp schemes we present in later sections fall into the category of methods that use tent pitching for unstructured spacetime meshing .",
    "accordingly , in this section , we first give a general description of tent meshing , clarifying the mathematical meaning of words we have already used colloquially such as `` tent , '' `` tent pole , '' `` advancing front , '' etc .",
    ", and then give details of a specific meshing algorithm that we have chosen to implement .",
    "we now describe how a tent pitching scheme advances the numerical solution in time .",
    "we mesh @xmath8 by a simplicial conforming shape regular finite element mesh @xmath39 the mesh is unstructured to accomodate for any intricate features in the spatial geometry or in the evolving solution .",
    "let @xmath40 denote the set of continuous real - valued functions on @xmath8 which are linear on each element of @xmath41 .",
    "clearly any function in @xmath40 is completely determined by its values at the vertices @xmath42 @xmath43 , of the mesh  @xmath41 .    at the @xmath26th step of a tent pitching scheme , the numerical solution is available for all @xmath44 and all @xmath45 .",
    "the function @xmath46 is in @xmath40 .",
    "the graph of @xmath46 , denoted by @xmath47 , and is called the `` advancing front '' ( see figure  [ fig : tents_levels ] . )",
    "we present a serial version of the algorithm first .",
    "a parallel generalization is straightforward as mentioned in remark  [ rem : partents ] .",
    "a tent pitching scheme updates @xmath46 within the following general algorithmic outline :    1 .   initially , set @xmath48",
    ". then @xmath49 .",
    "the solution on @xmath50 is determined by the initial data on @xmath8 .",
    "2 .   for @xmath51",
    "do : 1 .   find a mesh vertex @xmath52 where good relative progress in time can be made and calculate the height ( in time ) @xmath53 by which we can move the advancing front at @xmath54 .",
    "one strategy to do this is detailed below in algorithm  [ alg : pitchloc ] .",
    "2 .   given the solution on the current advancing front @xmath55 , pitch a `` spacetime tent '' @xmath56 by erecting a `` tent pole '' of height @xmath53 at the point @xmath57 on  @xmath55 .",
    "let @xmath58 be the unique function that equals one at @xmath52 and is zero at all other mesh vertices",
    ". set @xmath59 define the `` vertex patch '' @xmath60 of a mesh vertex @xmath61 as the ( spatial ) open set in @xmath9 that is the interior of the union of all simplices in @xmath41 connected to  @xmath61 .",
    "then the tent @xmath56 can be expressed as @xmath62 3 .",
    "[ item:3 ] numerically solve   on @xmath56 ( e.g. , by the methods proposed in the later sections of this paper ) .",
    "initial data is obtained from the given solution on @xmath55 .",
    "if @xmath63 , then the boundary conditions required to solve   on @xmath56 are obtained from the given boundary conditions on the global boundary @xmath64 .",
    "4 .   if @xmath65 for all mesh vertices @xmath61 , then exit .    the height of the tent pole @xmath53 at each step should be determined using the causality constraint so that   is solvable on @xmath56 .",
    "the choice of the vertex @xmath52 should be made considering the height of the neighboring vertices .",
    "other authors have studied these issues  @xcite and given appropriate advancing front meshing strategies .",
    "next , we describe a simple strategy which we have chosen to implement .",
    "it applies verbatim in both two and three space dimensions .      to motivate our meshing strategy ,",
    "first let @xmath66 denote a given ( or computed ) approximation to the maximal characteristic speed at a point @xmath67 on the advancing front @xmath55 , e.g. , @xmath68 , where @xmath31 is the computed numerical solution .",
    "we want to ensure that , for all @xmath44 , we have latexmath:[\\[\\label{eq : cfl1 }    every step @xmath26 . here",
    "@xmath70 denotes the euclidean norm .",
    "this is our cfl condition .    for simplicity",
    ", we now assume that @xmath71 is independent of time and impose the following cfl condition which is more stringent than  : @xmath72 where @xmath73 in practice , it is easier to work with the following sufficient condition @xmath74 where @xmath75 and @xmath76 are the mesh vertices that are endpoints of the edge @xmath77 of length @xmath78 , @xmath79 is the maximum of @xmath80 over all elements @xmath81 which have @xmath77 as an edge , and @xmath82 is a constant that depends on the shape regularity of the mesh @xmath41 .",
    "it is easy to see that   implies  .    to obtain an advancing front satisfying   at all stages  @xmath26",
    ", we maintain a list of potential time advance @xmath83 that can be made at any vertex @xmath84 .",
    "let @xmath85 denote the set of all mesh edges connected to the vertex @xmath84 and suppose edge endpoints are enumerated so that @xmath86 for all @xmath87 .",
    "given @xmath46 satisfying  , while considering pitching a tent at @xmath88 so that   continues to hold , we want to ensure that @xmath89 hold for all @xmath87 .",
    "the latter inequality is obvious from   since we are only interested in @xmath90 .",
    "the former inequality is ensured if we choose @xmath91 as done in the algorithm  [ alg : pitchloc ] below .",
    "the algorithm also maintains a list of locations ready for pitching a tent . for this , it needs the reference heights @xmath92 ( the maximal tent pole heights on a flat advancing front ) which can be precomputed .",
    "set @xmath93 .",
    "a vertex @xmath84 is considered a location where `` good '' progress in time can be made if its index @xmath18 is in the set @xmath94 here @xmath95 is a parameter ( usually set to @xmath96 ) .",
    "while a lower value of @xmath97 identifies many vertices to progress in time moderately , a higher value of @xmath97 identifies fewer vertices where time can be advanced more aggressively .",
    "[ alg : pitchloc ] initially , @xmath48 , @xmath93 and @xmath98 . for @xmath99 ,",
    "given @xmath100 , @xmath101 , and @xmath102 , we choose the next tent pitching location ( @xmath52 ) and the tent pole height ( @xmath53 ) , and update as follows :    1 .",
    "pick any @xmath103 in @xmath102 .",
    "2 .   set @xmath104 and @xmath105 3 .",
    "update @xmath46 by  .",
    "4 .   update @xmath83 for all vertices @xmath84 adjacent to @xmath52 by @xmath106 5 .",
    "use  @xmath107 to set @xmath108 using  .",
    "[ rem : partents ] to pitch multiple tents in parallel , at the @xmath26th step , instead of picking @xmath103 arbitrarily as in algorithm  [ alg : pitchloc ] , we choose @xmath109 with the property that @xmath110 does not intersect @xmath111 for all @xmath112 . as we step through @xmath26 , we continue to pick such @xmath103 until we reach an index @xmath113 where no such @xmath103 exists .",
    "all the tents made until this point , say @xmath114 form the _ layer _ @xmath115 .",
    "( an example of tents within such layers are shown in figure  [ fig : tents_levels ]  in this example one of the corners of the domain has a singularity . )",
    "we then repeat this process to find greater indices @xmath116 and layers @xmath117 with the property that @xmath118 does not intersect @xmath119 for any distinct @xmath26 and @xmath120 in the range @xmath121 .",
    "computations on tents within each layer can proceed in parallel .",
    "in this section we discuss a mapping technique that allows us to separate space and time discretizations within tents . domains like @xmath122 formed by a tensor product of a spatial domain with a time interval",
    "are referred to as spacetime cylinders .",
    "such domains are amenable to tensor product discretizations where the space and time discretizations neatly separate . however , the tent @xmath56 in   is not of this form .",
    "therefore , we now introduce a mapping that transforms @xmath56 one - to - one onto the spacetime cylinder @xmath123    = [ fill = blue!30,fill opacity=0.5 ] = [ fill = red!20 , fill opacity=1 ] = [ draw = black!70 , draw opacity=0.7 , fill = red!20 , fill opacity=0.7 ]    ( a0 ) at ( 0,0 ) ; ( a1 ) at ( 0,1.1 ) ; ( a2 ) at ( -1.162,.283 ) ; ( a3 ) at ( -.2,.5 ) ; ( a4 ) at ( -.775,-.424 ) ; ( a5 ) at ( 1.369,.1 ) ; ( a6 ) at ( .274,-.5 ) ; ( b1 ) at ( 0,-1 . ) ;    \\(k ) at ( @xmath124 ) ; at ( k ) @xmath56 ;    ( a1)(a2)(a3 ) cycle ; ( a1)(a3)(a5 ) cycle ;    ( a2)(a3)(a5)(a6)(a4)cycle ;    ( b1)(a2)(a4 ) cycle ; ( b1)(a2)(a3 ) cycle ; ( b1)(a5)(a3 ) cycle ;    ( a1)(a2)(a4)cycle ; ( a1)(a4)(a6)cycle ; ( a1)(a6)(a5)cycle ;    ( b1)(a6)(a4)cycle ; ( b1)(a6)(a5)cycle ;    ( b1)(a1 ) ;    ( b0 ) at ( @xmath125 ) ; ( b2 ) at ( @xmath126 ) ; ( b3 ) at ( @xmath127 ) ; ( b4 ) at ( @xmath128 ) ; ( b5 ) at ( @xmath129 ) ; ( b6 ) at ( @xmath130 ) ;    ( b0)(b2)(b4)cycle ; ( b0)(b2)(b3)cycle ; ( b0)(b5)(b3)cycle ; ( b0)(b5)(b6)cycle ; ( b0)(b4)(b6)cycle ;    ( b1)(b0 ) ;    \\(o ) at ( @xmath131 ) ; ( o) + + ( 0.5,0 ) ; ( o) + + ( -0.2,-0.2 ) ; ( o) + + ( 0,0.5 ) node[above ] @xmath29 ;    ( b0 ) circle ( 2pt ) node[above , right ] @xmath54 ; at ( @xmath132 ) @xmath119 ;    ( a0 ) at ( @xmath133 ) ; ( a2 ) at ( @xmath134 ) ; ( a3 ) at ( @xmath135 ) ; ( a4 ) at ( @xmath136 ) ; ( a5 ) at ( @xmath137 ) ; ( a6 ) at ( @xmath138 ) ; ( a1 ) at ( @xmath139 ) ; ( b1 ) at ( @xmath140 ) ;    ( t0 ) at ( @xmath141 ) ; ( t2 ) at ( @xmath142 ) ; ( t3 ) at ( @xmath143 ) ; ( t4 ) at ( @xmath144 ) ; ( t5 ) at ( @xmath145 ) ; ( t6 ) at ( @xmath146 ) ;    ( b0 ) at ( @xmath147 ) ; ( b2 ) at ( @xmath148 ) ; ( b3 ) at ( @xmath149 ) ; ( b4 ) at ( @xmath150 ) ; ( b5 ) at ( @xmath151 ) ; ( b6 ) at ( @xmath152 ) ;    ( b0)(b2)(b4)cycle ; ( b0)(b2)(b3)cycle ; ( b0)(b5)(b3)cycle ; ( b0)(b5)(b6)cycle ; ( b0)(b4)(b6)cycle ;    ( b2)(b4)(b6)(b5)(b3)cycle ;    ( t2)(b2)(b3)(t3)cycle ; ( t3)(b3)(b5)(t5)cycle ; ( t5)(b5)(b6)(t6)cycle ; ( t6)(b6)(b4)(t4)cycle ; ( t2)(b2)(b4)(t4)cycle ;    ( t2)(t4)(t6)(t5)(t3)cycle ;    \\(o ) at ( @xmath131 ) ; ( o) + + ( 0.5,0 ) ; ( o) + + ( -0.2,-0.2 ) ; ( o) + + ( 0,0.5 ) node[above ] @xmath153 ;    ( kh ) at ( @xmath154 ) ; at ( kh ) @xmath155 ; ( kc ) at ( @xmath156 ) ; ( kh ) .. controls ( kc ) .. ( k ) node[midway , above ] @xmath157 ;    define the mapping @xmath158 ( see figure  [ fig : map ] ) by @xmath159 where @xmath160 for all @xmath161 in @xmath162 .",
    "note that the @xmath163 jacobian matrix of derivatives of @xmath157 takes the form @xmath164 where @xmath165^t =   [     \\hat{\\partial}_1{\\varphi}\\;\\ ,    \\hat{\\partial}_2{\\varphi}\\ ; \\cdots \\ ;    \\hat{\\partial}_n{\\varphi}],$ ] and @xmath166 here and throughout , we use abbreviated notation for derivates @xmath167 @xmath168 that also serves to distinguish differentiation on @xmath169 from differentiation ( @xmath170 ) on @xmath56 .",
    "define    [ eq : hatfgb ] @xmath171    the last equation , showing that the function @xmath172 is mapped to @xmath173 by @xmath174 , will often be abbreviated as simply @xmath175 .",
    "[ thm : map ] the function @xmath31 satisfies   in @xmath56 if and only if @xmath176 and @xmath177 satisfy @xmath178 which in expanded component form reads as @xmath179_l+    \\sum_{j=1}^n \\hat { \\partial}_j   \\left (       \\delta(\\hat x )       \\hat f_{lj } ( \\hat x , \\hat t , \\hat u(\\hat x , \\hat t ) )     \\right )    +     { \\partial}elta(\\hat x ) \\hat b_l ( \\hat x , \\hat t , \\hat",
    "u ( \\hat x , \\hat t ) ) = 0\\ ] ] for all @xmath180 in @xmath169 and all @xmath181    the proof proceeds by calculating the pull back of the system   from @xmath56 to @xmath169 using the map @xmath157 . using the given @xmath31 , define @xmath182 and @xmath183 by @xmath184 and define their pullbacks on @xmath162 by @xmath185\\ , [ { \\hat{d}}{\\varphi}]^{-1 } ( f_l \\circ { \\varphi } ) $ ] and @xmath186\\ , ( b \\circ { \\varphi } ) .",
    "$ ] by the well - known properties of the piola map ( or by direct computation ) , @xmath187\\ ,     ( { \\partial}ive f ) \\circ { \\varphi},\\ ] ] where the divergence on either side is now taken in spacetime ( @xmath188 ) .",
    "note that @xmath189 = \\delta $ ] is never zero at any point of ( the open set ) @xmath169 .",
    "writing equation   in these new notations , we obtain @xmath190 for all @xmath191 or equivalently , @xmath192 for all @xmath193 multiplying through by @xmath194 $ ] and using  , this becomes @xmath195    to finish the proof , we simplify this equation .",
    "inverting the block triangular matrix @xmath196 displayed in   and using it in the definition for @xmath197 , we obtain @xmath198   \\begin{bmatrix }    i & 0     \\\\",
    "-\\delta^{-1 }    \\hat d \\varphi     &    \\delta^{-1 } \\end{bmatrix }   f_l \\circ { \\varphi}=   \\begin{bmatrix }     \\delta   \\hat f_l    \\\\",
    "\\hat g_l   - { \\mathop{\\hat{\\mathrm{grad}}}}\\varphi \\cdot \\hat f_l \\end{bmatrix}\\ ] ] where @xmath199 is the vector whose @xmath26th component is @xmath200 and @xmath201 denotes the @xmath18th component of @xmath202 . substituting these into   and expanding ,",
    "we obtain  .",
    "theorem  [ thm : map ] maps the hyperbolic system to the cylinder which is a tensor product of a spatial domain @xmath119 with a time interval @xmath203 .",
    "this opens up the possibility to construct tensor product discretizations  rather than spacetime discretizations  within each tent .",
    "we denote by @xmath204 the spatial mesh of @xmath119 consisting of elements of @xmath41 having @xmath52 as a vertex . for the spatial discretization",
    ", we use a finite element space  @xmath205 based on the mesh @xmath204 . in order to discretize  , we multiply it with a spatial test function @xmath61 in @xmath205 , integrate over the vertex patch @xmath119 , and manipulate the terms to get an equation of the form @xmath206 for all @xmath207 and @xmath208 . details of the spatial discretization , yet unspecified , are lumped into @xmath47 .",
    "note that the temporal derivative occurs only in the first term and can be discretized using runge - kutta or other schemes . emphasizing the point that spatial discretization is thus separated from temporal discretization , we continue , leaving time undiscretized , to discuss two semidiscrete approaches .      recalling that @xmath177 depends on @xmath209 the first approach discretizes @xmath210 in @xmath205 .",
    "let the functions @xmath211 , for @xmath212 form a basis of @xmath205 .",
    "we seek an approximation to @xmath213 of the form @xmath214 where @xmath215 , the vector whose @xmath216th entry is @xmath217 , is to be found . substituting this into   and using  , we obtain @xmath218 for all @xmath208 and @xmath219 in @xmath203 . to view this as a finite - dimensional system of ordinary differential equations ( odes ) , define two maps @xmath220 and @xmath221 on @xmath222 by @xmath223_{m } =   \\int_{{\\varomega}_{{{v^{(i ) } } } } } \\hat g \\left (   \\sum_{{n}=1}^p { \\mathtt{w}}_{n } \\psi_{n}(\\hat x ) \\right ) \\psi_m(\\hat x)\\ , d\\hat x ,   \\quad [ { \\mathtt{s}}({\\mathtt{w}})]_m = s_i\\bigg(\\hat t ,   \\sum_{{n}=1}^p { \\mathtt{w}}_{n } \\psi_{n } , \\;\\psi_m\\bigg).\\ ] ] then , putting @xmath224 , we obtain the semidiscrete problem of finding a @xmath225 , given initial values @xmath226 , satisfying the ode system @xmath227      the second approach discretizes @xmath177 rather than @xmath213 , assuming that  @xmath228 is at hand .",
    "we substitute @xmath229 into the right hand side of   and obtain the following semidiscrete problem .",
    "find @xmath230 of the form @xmath231 that satisfies @xmath232 for all @xmath208 and @xmath219 in @xmath203 .",
    "with @xmath233_m = s_i \\left ( \\hat t ,   \\hat g^{-1 } \\left ( \\sum_{{n}=1}^p { \\mathtt{w}}_{n } \\psi_{n}\\right ) , \\psi_m\\right).\\ ] ] we obtain the following ode system for @xmath234 , the vector of coefficients @xmath235 . @xmath236 comparing with  , instead of a possibly nonlinear @xmath220 , we now have a linear action of the mass matrix @xmath237 in @xmath238      we first illustrate how to treat a very general linear hyperbolic system using the first approach .",
    "in the second example we illustrate the second approach using a simple nonlinear conservation law .",
    "[ eg : linear ] suppose that @xmath239 , for @xmath240 , are symmetric matrix - valued functions and @xmath241 is bounded .",
    "in addition , suppose @xmath242 is a symmetric positive definite matrix - valued function from @xmath8 to @xmath243 .",
    "a large class of linear examples can be obtained by setting @xmath244_{lj } & = \\sum_{m=1}^l { a^{(j)}}_{lm}(x ) u_m , &   [ g(x , t , u)]_{l } & =   \\sum_{m=1}^l { a^{(t)}}_{lm}(x ) u_m . \\ ] ] and @xmath245 then   can be written as @xmath246 a simple equation that fits into this example is the scalar _ transport equation_. the transport of a scalar density @xmath31 along a given divergence - free vector field @xmath247 is described by @xmath248 this fits in the setting of   with @xmath249 , @xmath250 , @xmath251,$ ] and @xmath252,$ ] for @xmath253 . a more complex system that also fits into this example is _ electromagnetic wave propagation_. given positive functions @xmath254 , @xmath255 and @xmath256 on @xmath8 , the maxwell system for electric field @xmath257 and magnetic field @xmath258 consists of @xmath259 and @xmath260 this system also fits into   with @xmath261 @xmath262 and @xmath263 $ ] and @xmath264 \\\\      [ \\epsilon^j]^t & 0     \\end{bmatrix},\\quad                       { a^{(t)}}=                       \\begin{bmatrix }                         { \\varepsilon}i &   0 \\\\                         0        & \\mu i                        \\end{bmatrix } , \\quad                                   b =                                   \\begin{bmatrix }                                     \\sigma & 0 \\\\                                     0 & 0                                   \\end{bmatrix}\\end{aligned}\\ ] ] where @xmath265 is the matrix whose @xmath34th entry is the alternator @xmath266 to solve   for @xmath31 on a spacetime tent @xmath56 , we first map   to the spacetime cylinder @xmath169 using theorem  [ thm : map ] .",
    "we find that the map @xmath267 is now given by @xmath268 where @xmath269 is the matrix function @xmath270 { a^{(j)}}.\\ ] ] following the first approach , we discretize the term @xmath271 in that form .",
    "the semidiscretization   now takes the form @xmath272 where @xmath273 is the matrix whose entries are @xmath274    [ eg : burger ] a simple two - dimensional analogue of the well - known one - dimensional inviscid burgers equation is the following scalar conservation law considered in  @xcite . in the framework leading to  , set @xmath275 @xmath276 @xmath277 @xmath278 and @xmath279 to get @xmath280 .",
    "applying theorem  [ thm : map ] to map this equation from a tent @xmath56 to the spacetime cylinder @xmath169 , we find that @xmath281 to illustrate how to use the second approach , we compute @xmath282 by solving the quadratic equation @xmath283 where @xmath284 the roots are @xmath285 . in order to choose between the two roots , we now assume that the tents are constructed so that @xmath286 throughout @xmath169 . note that since @xmath213 is the wave speed and @xmath287 is related to the tent pole height , this is the causality constraint .",
    "note also that   implies that @xmath288 , a necessary condition for the mapped system to be hyperbolic in the @xmath153-direction  cf .  .",
    "now , since   implies that @xmath289 , the only root that makes sense is the one satisfying @xmath290 . simplifying this root",
    ", we obtain @xmath291 one can now proceed with the second approach by applying a standard spatial discontinuous galerkin discretization and time stepping by a runge - kutta scheme . some regularization or slope limiting technique is needed to avoid spurious oscillations near sharp solution transitions .",
    "this issue is considered further in section  [ sec : euler ] .",
    "suppose we are given a material coefficient @xmath292 symmetric and positive definite everywhere in  @xmath8 and a damping coefficient @xmath293 .",
    "the wave equation for the linearized pressure @xmath294 is    [ eq : waveibvp ] @xmath295 while a variety of initial and boundary conditions are admissible in mtp schemes , for definiteness , we focus on these model conditions : @xmath296    for some given sufficiently smooth compatible data @xmath297 and @xmath298 . in  , @xmath299 denotes the spatial component of the outward unit normal .",
    "let us put   into the framework of   using example  [ eg : linear ] .",
    "set @xmath300 and @xmath301 then   yields @xmath302 and @xmath303 .",
    "this is readily identified to be in the form   with @xmath304 where @xmath305 denotes the @xmath120th unit ( column ) vector .",
    "the boundary condition in the new variable is @xmath306 on @xmath307 and the initial conditions take the form @xmath308 and @xmath309 on @xmath310    to describe the mtp scheme , set @xmath311 .",
    "suppose we are at the @xmath26th tent pitching step .",
    "then the solution @xmath312 has been computed on the advancing front @xmath55 , and a new tent @xmath56 has been erected at mesh vertex  @xmath52 .",
    "we now need the wave equation mapped over to @xmath155 . from example",
    "[ eg : linear ] , @xmath313 where @xmath258 is as in   and @xmath314 has the sole nonzero entry @xmath315 . in this example , it is convenient to split @xmath213 into two blocks consisting of @xmath316 and @xmath317 then for all @xmath318 , @xmath319 where @xmath320 and   can be rewritten as @xmath321 on the cylinder , this equation must be supplemented by the initial conditions @xmath322 and @xmath323 on @xmath324      for the spatial discretization , we use the brezzi - douglas - marini ( bdm ) mixed method .",
    "namely , letting @xmath325 denote the space of polynomials of degree at most  @xmath0 in @xmath326 , restricted to a spatial @xmath5-simplex  @xmath81 , set @xmath327 and @xmath328 for all simplices @xmath329 and @xmath330 on @xmath331 multiplying   by @xmath332 and integrating the first equation by parts , we obtain @xmath333 for all @xmath334 . using a basis @xmath335 of @xmath205 , the coefficients @xmath336 of the expansion of @xmath213 in this basis",
    "satisfy an ode system , which can be written using matrices @xmath273 and @xmath221 defined by    [ eq : wave - semidiscrete ] @xmath337 using prime @xmath338 to abbreviate @xmath339 , observe that   is the same as @xmath340    a realization of   for the wave equation .",
    "we utilize the first approach of  [ ssec : first ] . by applying an implicit high order multi - stage runge - kutta ( rk ) method of radau iia type ( * ? ? ?",
    "* chapter  iv.5 ) for time stepping  .",
    "note that due to the implicit nature of the scheme , there is no cfl constraint on the number of stages ( within the mapped tent ) , irrespective of the spatial polynomial degree  @xmath0 of @xmath205 .",
    "these rk methods , with @xmath341 stages , are characterized by numbers @xmath342 and @xmath343 for @xmath344 ( forming entries of a butcher tableau ) with the property that @xmath345 ( and the remaining @xmath343 are determined by the roots of appropriate jacobi polynomials ) . when applied to a standard ode @xmath346 in the interval @xmath207 , with initial condition @xmath347 , it produces approximations @xmath348 to @xmath349 at @xmath350 that satisfy @xmath351 however , since   is not in this standard form , we substitute @xmath352 into  , where @xmath353 and @xmath354 is the approximation to @xmath355 to be found . also setting @xmath356",
    ", we obtain the linear system @xmath357 which can be easily solved for the final stage solution  @xmath358 , given @xmath359 .",
    "the locally implicit mtp method was implemented within the framework of the ngsolve  @xcite package .",
    "we report the results obtained for   with @xmath360 @xmath361 , @xmath8 set to the unit square , @xmath362 and @xmath363 for @xmath364 .",
    "it is easy to see that the exact solution is the classical standing wave @xmath365 @xmath366 the spatial domain @xmath8 is meshed by a uniform grid obtained by dividing the unit square into @xmath367 congruent squares and dividing each square into two triangles by connecting its positively sloped diagonal .",
    "the parameters to be varied in each experiment are the spatial mesh size  @xmath368 and the the polynomial degree @xmath0 of the space discretization .",
    "the number of runge - kutta time stages is fixed to @xmath369 .",
    "the tent meshing algorithm is driven by an input wavespeed of 2 ( leading to conservative tent pole heights ) to mesh a time slab of size @xmath370 .",
    "this time slab is stacked in time to mesh the entire spacetime region of simulation @xmath371 . letting @xmath372 and @xmath373 denote",
    "the computed solutions at time @xmath374 , we measure the error norm @xmath77 defined by @xmath375 the observations are compiled in figure  [ fig : errp ] , where the values of @xmath77 as a function of degree @xmath0 and @xmath376 are plotted .",
    "the rate @xmath377 of the @xmath378-convergence observed is computed from the slope of the regression lines and marked near each convergence curve .",
    "we observe that @xmath77 appears to go to @xmath379 at a rate of @xmath380    0.45    table[x = h , y = e_p1s1 ] tab2d.dat ; table[x = h , y = e_p2s2 ] tab2d.dat ;",
    "table[x = h , y = e_p3s3 ] tab2d.dat ; table[x = h , y = e_p4s4 ] tab2d.dat ; table[x = h , y = e_p5s5 ] tab2d.dat ;    table[x = h , y = create col / linear regression = y = e_p1s1 ] tab2d.dat coordinate [ pos=0.97 ] ( a ) coordinate [ pos=0.81 ] ( b ) ; ( a ) -| ( b ) node [ pos=0.75,anchor = west ] ; table[x = h , y = create col / linear regression = y = e_p2s2 ] tab2d.dat coordinate [ pos=0.97 ] ( a ) coordinate [ pos=0.81 ] ( b ) ; ( a ) -| ( b ) node [ pos=0.75,anchor = west ] ; table[x = h , y = create col / linear regression = y = e_p3s3 ] tab2d.dat coordinate [ pos=0.97 ] ( a ) coordinate [ pos=0.81 ] ( b ) ; ( a ) -| ( b ) node [ pos=0.75,anchor = west ] ; table[x = h , y = create col / linear regression = y = e_p4s4 ] tab2d.dat coordinate [ pos=0.97 ] ( a ) coordinate [ pos=0.81 ] ( b ) ; ( a ) -| ( b ) node [ pos=0.75,anchor = west ] ; table[x = h , y = create col / linear regression = y = e_p5s5 ] tab2d.dat coordinate [ pos=0.97 ] ( a ) coordinate [ pos=0.81 ] ( b ) ; ( a ) -| ( b ) node [ pos=0.75,anchor = west ] ;    0.45    table[x = h , y = e_p1s1 ] tablerr3d.dat ; table[x = h , y = e_p2s2 ] tablerr3d.dat ; table[x = h , y = e_p3s3 ] tablerr3d.dat ;    table[x = h , y = create col / linear regression = y = e_p1s1 ] tablerr3d.dat coordinate [ pos=0.97 ] ( a ) coordinate [ pos=0.81 ] ( b ) ; ( a ) -| ( b ) node [ pos=0.75,anchor = west ] ; table[x = h , y = create col / linear regression = y = e_p2s2 ] tablerr3d.dat coordinate [ pos=0.97 ] ( a ) coordinate [ pos=0.81 ] ( b ) ; ( a ) -| ( b ) node [ pos=0.75,anchor = west ] ; table[x = h , y = create col / linear regression = y = e_p3s3 ] tablerr3d.dat coordinate [ pos=0.97 ] ( a ) coordinate [ pos=0.81 ] ( b ) ; ( a ) -| ( b ) node [ pos=0.75,anchor = west ] ;    next , consider the case of three spatial dimensions , where @xmath8 is set to the unit cube and subdivided in a fashion analogous to the two - dimensional case ( into @xmath381 congruent cubes , which are further subdivided into six tetrahedra ) .",
    "the remaining parameters are the same as in the two - dimensional case , except that now the exact solution is @xmath382 . note that the spacetime mesh of tents , now formed by _ four - dimensional _ simplices , continues to be made by algorithm  [ alg : pitchloc ] .",
    "the convergence history plotted in figure  [ fig : errp3d ] shows that @xmath77 , just as in the previous case , goes to zero at a rate of @xmath380",
    "in this section , we describe some techniques for handling nonlinear conservation laws , and considering the specific example of euler equations , construct a explicit mtp scheme .",
    "recall that a real function @xmath383 is called an entropy ( * ? ? ?",
    "* definition  3.4.1 ) of the system   if there exists an entropy flux @xmath384 such that every classical solution @xmath31 of   satisfies @xmath385 note that for nonsmooth  @xmath31 , this equality need not hold .",
    "the pair @xmath386 is called the entropy pair .",
    "we say that this pair satisfies the `` entropy admissibility condition '' on @xmath387 if @xmath388 holds in the sense of distributions on @xmath387 .",
    "the inequality is useful to study the violation of entropy conservation for nonsmooth solutions ( like shocks ) .",
    "nonlinear conservation laws often have multiple weak solutions and uniqueness is obtained by selecting a solution @xmath31 satisfying the entropy admissibility condition .",
    "these theoretical considerations motivate the use of numerical analogues of   in designing schemes for conservation laws .",
    "suppose that on a tent @xmath56 , we are given a solution @xmath389 of   and an entropy pair @xmath386 .",
    "the mapped solution , as before , is @xmath390 .",
    "define @xmath391    [ thm : mappedentropy ] suppose @xmath31 solves   on @xmath56 and @xmath390 solves the mapped equation  .",
    "then , whenever @xmath386 is an entropy pair for  , @xmath392 is an entropy pair for  .",
    "moreover , if @xmath383 and @xmath393 satisfies the entropy admissibility condition   on @xmath56 , then @xmath394 and @xmath395 satisfies the entropy admissibility condition on @xmath169 .    repeating the calculations in the proof of theorem  [ thm : map ] , with @xmath396 and @xmath397",
    ", we obtain @xmath398 from which the statements of the theorem follow .",
    "the addition of `` artificial viscosity '' ( a diffusion term ) to the right hand side of nonlinear conservation laws makes their solutions dissipative .",
    "when the limit of such solutions , as the diffusion term goes to zero , exist in some sense , it is referred to as a vanishing viscosity solution .",
    "it is known ( * ? ? ?",
    "* theorem  4.6.1 ) that the vanishing viscosity solution satisfies the entropy admissibility condition for entropy pairs satisfying certain conditions .",
    "motivated by such connections , the entropy viscosity regularization method of  @xcite , suggests modifying numerical schemes by selectively adding small amounts of artificial viscosity , to avoid spurious oscillations near discontinuous solutions .",
    "we borrow this technique and incorporate it into the mtp schemes obtained using the second approach ( of  [ ssec : second - approach ] ) as follows .",
    "consider the problem on the tent @xmath56 mapped to @xmath169 .",
    "we set the spatial discretization space to @xmath399 for all @xmath400 and consider a dg discretization of the mapped equation   following the second approach .",
    "accordingly the approximation @xmath401 takes the form in  .",
    "let @xmath402 and @xmath403 denote the sum of integrals over @xmath81 and @xmath404 of the appropriate inner product of its arguments , over all @xmath329 , respectively .",
    "the semidiscretization of   by the dg method takes the form @xmath405 for all @xmath406 . here",
    "@xmath407 is the so - called `` numerical flux , '' whose form varies depending on the dg method , and as usual , all derivatives are taken element by element .",
    "suppose that an entropy pair @xmath386 is given for  . on the mapped tent @xmath169 ,",
    "let @xmath392 be defined by  .",
    "suppose a numerical approximation @xmath408 has been computed at some time @xmath409 and we want to compute a numerical approximation at the next time stage , say at @xmath410 .",
    "the _ entropy residual _ of the approximation @xmath411 to @xmath31 is a weak form of the quantity @xmath412 , which by theorem  [ thm : mappedentropy ] , is non - positive .",
    "the discrete entropy residual at time @xmath413 is @xmath414 where @xmath415 is defined by @xmath416 for all @xmath406 . here",
    "@xmath417 is a numerical flux prescribed by a dg approximation to the entropy conservation equation .",
    "the term @xmath418 can be replaced by its approximation available from   while computing @xmath419 .",
    "next , following  @xcite , we quantify the amount of viscosity to be added to  .",
    "define the _ entropy viscosity coefficient _ on one spatial element @xmath420 by @xmath421 where @xmath422 is the mean value of @xmath423 on @xmath81 and @xmath424 is an effective local grid size of  @xmath205 , typically chosen as @xmath425 for some fixed number @xmath426 . to limit",
    "the viscosity added based on local wavespeed , define @xmath427 where @xmath428 is another fixed number and set @xmath429 this artificial viscosity coefficient proposed in  @xcite leads to generous viscosity at discontinuities ( where the entropy residual is high ) and little viscosity in smooth regions .",
    "finally , we modify the mapped equation   by adding to its right hand side the corresponding artificial viscosity term @xmath430 .",
    "namely , instead of solving   for @xmath431 we solve its viscous perturbation : @xmath432 for all @xmath208 , where @xmath433 is the standard interior penalty dg approximation of the viscous term @xmath434 defined below . on an interface @xmath435 shared by two elements @xmath436 and @xmath437 , with outward unit normals @xmath438 and @xmath439 , respectively , set @xmath440=w|_{t_+ } n _",
    "+ + w|_{t- } n_-$ ] , with the understanding that @xmath441 is considered zero if @xmath442 is outside @xmath119 .",
    "then @xmath443 } \\rangle}_h   -\\frac 1 2 { \\langle { [ wn],\\delta { { \\mathrm{grad}}_x}v } \\rangle}_h + \\frac{\\alpha}{2 h } { \\langle { \\delta[wn],[vn ] } \\rangle}_h.\\ ] ] here , as usual , the penalization parameter @xmath444 must be chosen large enough to obtain coercivity . applying a time stepping algorithm to",
    ", we compute the numerical solution at the next time stage @xmath445 .",
    "let @xmath446 , @xmath447 and @xmath448 denote the density , momentum , and total energy of a perfect gas occupying @xmath449 .",
    "set @xmath450 and let @xmath451 here , the pressure @xmath452 is related to the state variables by @xmath453 and @xmath454 where @xmath287 , the degrees of freedom of the gas particles , is set to @xmath455 for ideal gas . with these settings ,",
    "the system of euler equations is given by  .",
    "after mapping from a tent @xmath56 to @xmath169 , to proceed with the second approach we need to invert the nonlinear equation @xmath456 .",
    "namely , writing @xmath457 and @xmath458 , we want to explicitly compute @xmath459 .",
    "lengthy calculations ( see  @xcite ) show that the expression for @xmath228 is given by @xmath460 where @xmath461 @xmath462 and @xmath463 the well - known expressions for the entropy and entropy flux for the euler system are @xmath464 and @xmath465 with these expressions we discretize the mapped equation using the second approach , applying the previously described entropy viscosity regularization of  .      0.9    ( 0,0 ) ",
    "( 0.6,0 ) node[midway , above ] ",
    "( 0.6,0.2 ) node[near end , above , sloped ] ;    ( 0.6,0.2 )  ( 3,0.2 ) node[midway , above ] ;    ( 3,0.2 )  ( 3,1 ) node[midway , sloped , above ]  ( 0,1 ) node[midway , below ] ",
    "( 0,0 ) node[sloped , midway , above ] ;    plot coordinates ( 0,0 ) node [ below]@xmath379  plot coordinates ( 0.6,0 ) node [ below]@xmath466  plot coordinates ( 3,0 ) node[below]@xmath467  ( 3.15,0 ) node[right ] @xmath468 ; plot coordinates ( 0,0 ) node [ left]@xmath379  plot coordinates ( 0,0.2 ) node [ left]@xmath469  plot coordinates ( 0,1 ) node [ left]@xmath6  ( 0,1.15 ) node[above ] @xmath470 ;    0.9    \\(c ) at ( 1.3,3 ) .),title=\"fig:\",height=115 ] ; ( a ) ; ( a ) ( 138.8:4.08 ) node[circle , draw , inner sep=10 ] ( b ) ; ( a)(b ) ;    we consider the well - known example  @xcite of a wind tunnel with a forward facing step on which a mach 3 flow impinges .",
    "the geometry is shown in figure  [ fig : mach3:geom ] and the initial conditions are set to @xmath471 @xmath472 , and @xmath473 the boundary conditions are set such that @xmath474 is an inflow boundary and @xmath475 is a free boundary , which has no effect on the flow .",
    "all other boundaries are solid walls . anticipating the singularity at the nonconvex corner",
    ", we construct a spatial mesh with small elements near it .",
    "figure  [ fig : mach3:mesh ] shows this mesh and the unstructured locally adaptive time advance that is possible .    using the notation of ( [ eq : appr-2 ] ) and a basis @xmath476 of @xmath205",
    ", we obtain the ode system @xmath477 for @xmath478 , where @xmath479_l =     ( \\delta   f ( \\hat g^{-1}(\\hat u_h ) ) , { { \\mathrm{grad}}_x}\\psi_l ) _ h    - { \\langle {      \\delta q_f(\\hat u_h ) , \\psi_l } \\rangle}_h$ ] and @xmath480_l =     \\nu_i a_i ( \\hat g^{-1}(\\hat u_h ) , \\psi_l)$ ] .",
    "this system within each tent is solved by a time stepping scheme and a time step @xmath481 , where @xmath482 denotes the number of local time steps .",
    "for stability we need @xmath483 , but more time steps may be used for accuracy . due to the addition of artificial viscosity ,",
    "an additional fractional time step @xmath484 is chosen depending on the viscosity coefficient ( and therefore on the smoothness of the solution ) . a detailed algorithm based on the explicit euler method",
    "can be found below , where we use the notations @xmath485 and @xmath486 .    for @xmath487",
    "do :    * evaluate @xmath488 .",
    "* update solution @xmath489 .",
    "* calculate the entropy residual and the viscosity coefficient @xmath490 . *",
    "estimate time step @xmath491 for the artificial viscosity .",
    "* apply the artificial viscosity with an explicit euler method up to the time @xmath492 .",
    "this algorithm can be generalized for any runge - kutta scheme and for the following results a two - staged rk scheme was used .",
    "a kinetic flux ( see @xcite ) was used for the numerical flux @xmath407 while @xmath417 was set by @xmath493 where @xmath494 denotes the trace of @xmath495 from within the element which has @xmath496 as outward unit normal vector . for computational convenience",
    ", we use a slight variation of the entropy viscosity regularization described in  [ ssec : entrvisc ] .",
    "namely , the entropy viscosity coefficient on one element @xmath420 is set by @xmath497 and the limiting artificial viscosity is set by @xmath498 with @xmath499 for an ideal gas and the temperature @xmath500 .",
    "the constants in the calculation of the entropy viscosity coefficient were chosen as @xmath501 , @xmath502 and the penalization parameter @xmath444 in the artificial viscosity term is set to 2 .    ,",
    "with @xmath503 dg finite elements on 3951 triangles , title=\"fig:\",scaledwidth=90.0% ] , with @xmath503 dg finite elements on 3951 triangles , title=\"fig:\",scaledwidth=90.0% ]    with these settings , the results obtained with @xmath503 , are shown in figure [ fig : windtunnel_p4t4 ] .",
    "they correspond to the results  @xcite that can be found in the literature using other methods .",
    "note from the second plot that the artificial viscosity is applied only in the shocks .",
    "we have introduced new schemes , called mtp schemes , for advancing hyperbolic solutions through unstructured tent meshes .",
    "the advantages of tent pitching over traditional time stepping , amply clarified by others in the literature on sdg methods , include the ability to advance in time by different amounts at different spatial locations , easy parallelization , and linear scaling of computational complexity in the number of tents .",
    "further new advantages brought about by mtp schemes include the possibility to use existing spatial discretizations and time stepping schemes after mapping tents to cylinders .",
    "the mapping technique has opened a new avenue to perform fully explicit matrix - free local time stepping on unstructured tent meshes using explicit mtp schemes .",
    "their utility as a powerful computational tool was demonstrated on the mach  3 wind tunnel where local refinement near a rarefaction singularity permitted us to capture the shock structure using relatively few elements and standard discretizations ( in separated space and time ) .",
    "we also studied locally implicit mtp schemes and their application to the acoustic wave equation .",
    "we observed @xmath504 accuracy ( in the @xmath505 norm ) when spatial basis functions of degree @xmath0 were used .",
    "in contrast , sdg schemes report @xmath506 accuracy if spacetime basis functions of degree @xmath0 are used .",
    "thus in order to get the same accuracy , mtp schemes use one higher spatial order . despite this ,",
    "the locally implicit mtp scheme , due to its separation of time and space , is more efficient than sdg schemes . as @xmath0 increases",
    ", sdg schemes use @xmath507 spacetime basis functions per tent , while mtp schemes use @xmath508 spatial basis functions to obtain the same convergence rate . hence to propagate the solution inside a tent , an sdg scheme performs @xmath509 flops , while the implicit mtp scheme performs @xmath510 flops . since @xmath511 for @xmath512 in both two and three space dimensions ( @xmath513 ) ,",
    "the flop count favors the implicit mtp scheme as @xmath0 increases .",
    "ongoing studies aim to provide rigorous proofs of the convergence rates for the mtp schemes  @xcite and to provide computational benchmarks for specific applications  @xcite .",
    "the promises of improved performance of explicit mtp schemes , due to better ratio of flops per memory ( data locality ) and matrix - free implementation techniques ( such as sum factorization algorithms ) , will be realized in future works .",
    "years of research on sdg schemes have resulted in advanced techniques like spacetime adaptive tent mesh refinement and element - wise conservation .",
    "further studies are needed to bring such techniques to mtp schemes .                , _",
    "techniques for locally adaptive time stepping developed over the last two decades _ , in domain decomposition methods in science and engineering xx , r.  bank , m.  holst , o.  widlund , and j.  xu , eds .",
    "91 of lecture notes in computational science and engineering , springer berlin heidelberg , 2013 , pp .  377385 .                ,",
    "_ a space - time discontinuous galerkin method for the time - accurate numerical solution of hyperbolic conservation laws _ , in proceedings of the 12th aiaa computational fluid dynamics conference , no .",
    "95 - 1658 , 1995 .",
    ", _ a spacetime discontinuous galerkin method for elastodynamics analysis _ , in discontinuous galerkin methods : theory , computation and applications , b. cockburn and g. karniadakis and c. w. shu(eds ) , springer verlag , 2000 , pp ."
  ],
  "abstract_text": [
    "<S> a spacetime domain can be progressively meshed by tent shaped objects . </S>",
    "<S> numerical methods for solving hyperbolic systems using such tent meshes to advance in time have been proposed previously . </S>",
    "<S> such schemes have the ability to advance in time by different amounts at different spatial locations . </S>",
    "<S> this paper explores a technique by which standard discretizations , including explicit time stepping , can be used within tent - shaped spacetime domains . </S>",
    "<S> the technique transforms the equations within a spacetime tent to a domain where space and time are separable . after detailing techniques based on this mapping , </S>",
    "<S> several examples including the acoustic wave equation and the euler system are considered . </S>"
  ]
}
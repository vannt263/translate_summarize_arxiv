{
  "article_text": [
    "many nonlinear partial differential equations ( pdes ) in the applied sciences and engineering are _ continuity equations _ which express conservation of mass , momentum , energy , or electric charge .",
    "such equations occur in , e.g. , fluid mechanics , particle and quantum physics , plasma physics , elasticity , gas dynamics , electromagnetism , magneto - hydro - dynamics , nonlinear optics , etc . certain nonlinear pdes admit infinitely many conservation laws . although most lack a physical interpretation , these conservation laws play an important role in establishing the _ complete integrability _ of the pde .",
    "completely integrable pdes are nonlinear pdes that can be linearized by some transformation ( e.g. , the cole - hopf transformation linearizes the burgers equation ) or explicitly solved with the inverse scattering transform ( ist ) .",
    "see , e.g. , @xcite .",
    "the search for conservation laws of the korteweg - de vries ( kdv ) equation began around 1964 and the knowledge of conservation laws was paramount for the development of soliton theory .",
    "as @xcite narrates , the study of conservation laws led to the discovery of the miura transformation ( which connects solutions of the kdv and modified kdv ( mkdv ) equations ) and the lax pair @xcite , i.e. , a system of linear equations which are only compatible if the original nonlinear pde holds . in turn , the lax pair is the starting point for the ist @xcite which has been used to construct soliton solutions , i.e. , stable solutions that interact elastically upon collision .",
    "conversely , the existence of many ( independent ) conserved densities is a _ predictor _ for complete integrability .",
    "the knowledge of conservation laws also aids the study of qualitative properties of pdes , in particular , bi - hamiltonian structures and recursion operators @xcite .",
    "furthermore , if constitutive properties have been added to close `` a model , ''",
    "one should verify that conserved quantities have remained intact .",
    "another application involves numerical solvers for pdes @xcite , where one checks if the first few ( discretized ) conserved densities are preserved after each time step .",
    "there are several methods for computing conservation laws as discussed by e.g. , @xcite , @xcite , @xcite , @xcite , and @xcite .",
    "one could apply noether s theorem , which states that a ( variational ) symmetry of the pde corresponds to a conservation law . using noether s method , the differentialgeometry package in _",
    "maple _ contains tools for conservation laws developed by @xcite and @xcite . circumventing noether s theorem ,",
    "@xcite has developed four programs in reduce which solve an over - determined system of differential equations to get conservation laws .",
    "based on the integrating factor method , @xcite has written a _ maple",
    "_ program that computes a set of integrating factors ( multipliers ) on the pde . to find conservation laws , here again",
    ", one has to solve a system of differential equations .",
    "the _ maple _",
    "package pdetools by @xcite has the commands conservedcurrents and conservedcurrenttest for computing and testing conservation laws using the integrating factor method .",
    "last , conservation laws can be obtained from the lax operators , as shown by , e.g. , @xcite and @xcite .    by contrast , the method discussed in this paper uses tools from calculus , the calculus of variations , linear algebra , and differential geometry .",
    "briefly , our method works as follows . a candidate ( local ) density is assumed to be a linear combination with undetermined coefficients of monomials that are invariant under the scaling symmetry of the pde .",
    "next , the time derivative of the candidate density is computed and evaluated on the pde .",
    "subsequently , the variational derivative is applied to get a linear system for the undetermined coefficients .",
    "the solution of that system is substituted into the candidate density .",
    "once the density is known , the flux is obtained by applying a homotopy operator to invert a divergence .",
    "our method can be implemented in any major computer algebra system ( cas ) .",
    "the package conservationlawsmd.m by @xcite is a _",
    "implementation based on work by @xcite , with new features added by @xcite .",
    "this paper is organized as follows . to set the stage ,",
    "section  [ secexamples ] shows conservation laws for the zakharov - kuznetsov ( zk ) and kadomtsev - petviashvili ( kp ) equations .",
    "section  [ secnotationtools ] covers the tools that will be used in the algorithm . in section  [ secalgorithm ] ,",
    "the algorithm is presented and illustrated for the zk and kp equations .",
    "section  [ secapplications ] discusses conservation laws of pdes in multiple space dimensions , including the khokhlov - zabolotskaya ( kz ) equation and multi - dimensional versions of the sawada - kotera ( sk ) , camassa - holm ( ch ) and gardner equations .",
    "conservation laws for the multi - dimensional sk , ch , and gardner equations were not found in a literature survey and are presented here for the first time .",
    "a general conservation law for the kp equation is given in section  [ seckpequation ] .",
    "using the ( 2 + 1)-dimensional gardner equation as an example , section  [ secusingprogram ] shows how to use conservationlawsmd.m .",
    "finally , some conclusions are drawn in section  [ secconclusion ] .",
    "this paper deals with systems of polynomial pdes of order @xmath0 @xmath1 in @xmath2 dimensions where @xmath3 is the independent variable .",
    "@xmath4 denotes the dependent variable @xmath5 and its partial derivatives ( up to order @xmath6 ) with respect to @xmath7 we do not cover systems of pdes with variable coefficients .    a conservation law for ( [ definitionpdeonevar ] ) is a scalar pde in the form @xmath8 where @xmath9 of some order @xmath10 the definition follows @xcite and @xcite , and is commonly used in literature on symmetries of pdes . in physics",
    ", @xmath11 is called a conserved current .",
    "more precisely , a conservation law can be viewed as an equivalence class of conserved currents @xcite .",
    "our algorithm computes one member from each equivalence class ; usually a representative that is of lowest complexity and free of curl terms .",
    "since we work on pdes from the physical sciences , the algorithm and code are restricted to 1d , 2d , and 3d in space , but can be extended to @xmath2 dimensions .",
    "indeed , many of our applications model dynamical problems , where @xmath12 for pdes in 2d or @xmath13 for pdes in 3d in space . in either case , the additional variable , @xmath14 denotes time .    throughout the paper",
    ", we will use an alternative definition for ( [ divconlaw ] ) , @xmath15 where @xmath16 is the conserved density of some order @xmath17 and @xmath18 is the associated flux of some order @xmath19 @xcite . comparing ( [ divconlaw ] ) with ( [ genconlaw ] ) , it should be clear that @xmath20 with @xmath21    for simplicity , in the examples we will denote the dependent variables @xmath22 etc . , by @xmath23 etc .",
    "partial derivatives are denoted by subscripts , e.g. , @xmath24 is written as @xmath25 where the @xmath26 are non - negative integers . in ( [ genconlaw ] ) , @xmath27 is the _ total _ divergence operator , where @xmath28 if @xmath29 and @xmath30 if @xmath31 logically , @xmath32",
    "@xmath33 @xmath34 and @xmath35 are total derivative operators . for example , the total derivative operator @xmath36 ( in 1d ) acting on @xmath37 of order @xmath6 is defined as @xmath38 where @xmath39 is the order of @xmath40 in component @xmath41 and @xmath42 the partial derivative @xmath43 acts on any @xmath44 that appears explicitly in @xmath45 but not on @xmath41 or any partial derivatives of @xmath46 total derivative operators in multiple dimensions are defined analogously ( see section  [ secnotationtools ] ) .",
    "the algorithm described in section  [ secalgorithm ] allows one to compute local conservation laws for systems of nonlinear pdes that can be written as evolution equations .",
    "for example , if @xmath47 an evolution equation in variable @xmath48 has the form @xmath49 where @xmath50 is assumed to be smooth and @xmath51 and @xmath52 are the orders of component @xmath41 with respect to @xmath53 and @xmath54 respectively , and @xmath6 is the maximum total order of all terms in the differential function .",
    "few multi - dimensional systems of pdes are of the form ( [ evolutiondefinition ] ) .",
    "however , it is often possible to obtain a systems of evolution equations by recasting a single higher - order equation into a system of first - order equations , sometimes in conjunction with a simple transformation . if necessary",
    ", our program internally interchanges independent variables to obtain ( [ evolutiondefinition ] ) , where time is the evolution variable .",
    "however , that swap of variables is not used in this paper . for a clearer description of the algorithm ,",
    "we allow systems of evolution equations where _ any _ component of @xmath55 can play the role of evolution variable .",
    "we now introduce two well - documented pdes together with some of their conservation laws .",
    "these pdes will be used in section  [ secalgorithm ] to illustrate the steps of the algorithm .",
    "the zakharov - kuznetsov ( zk ) equation is an evolution equation that models three - dimensional ion - sound solitons in a low pressure uniform magnetized plasma @xcite . after re - scaling , it takes the form @xmath56 where @xmath57 and @xmath58 are real parameters , and @xmath59 is the laplacian in 3d .",
    "the conservation laws for the ( 2 + 1)-dimensional zk equation , @xmath60 where @xmath61 were studied by , e.g. , @xcite , @xcite , and @xcite . after correcting some of the results reported in @xcite , the polynomial conservation laws of ( [ zkequation2d ] ) are @xmath62 which corresponds to the zk equation itself , and    @xmath63   \\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\ ! \\nonumber \\\\",
    "\\label{zk2dconlaw3 }   \\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\ ! & & { \\ensuremath{\\mathcal{d}}}_t \\big ( u^3 - 3\\tfrac{\\beta}{\\alpha } ( u_x^2 + u_y^2 ) \\big ) \\!+\\ ! { \\ensuremath{\\mathcal{d}}}_x \\big ( 3 u^2 ( \\tfrac{1}{4 } \\alpha u^2 + \\beta u_{2x } ) - 6 \\beta u ( u_x^2 + u_y^2 ) + 3\\tfrac{\\beta^2}{\\alpha } ( u_{2x}^2 - u_{2y}^2 ) \\nonumber \\\\   \\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\ !   & & \\hspace*{5 mm } { } - 6\\tfrac{\\beta^2}{\\alpha } ( u_x ( u_{3x } + u_{x 2y } ) + u_y ( u_{2x y } + u_{3y } ) ) \\big ) \\!+\\ !",
    "{ \\ensuremath{\\mathcal{d}}}_y \\big ( 3 \\beta u^2 u_{xy }   + 6\\tfrac{\\beta^2}{\\alpha } u_{xy } ( u_{2x } + u_{2y } ) \\big ) = 0 , \\\\*[-5 mm ]   \\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\ ! \\nonumber \\\\",
    "\\label{zk2dconlaw4 }   \\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\ ! & & { \\ensuremath{\\mathcal{d}}}_t \\big ( t u^2 \\!-\\ !",
    "\\tfrac{2}{\\alpha } x u \\big )",
    "\\!+\\ ! { \\ensuremath{\\mathcal{d}}}_x \\big ( t(\\tfrac{2}{3 } \\alpha u^3 \\!-\\ !",
    "\\beta ( u_x^2 \\!-\\ !",
    "u_y^2 ) \\!+\\ !",
    "2 \\beta u ( u_{2x } \\!+\\ ! u_{2y } ) )   \\!-\\ ! \\tfrac{2}{\\alpha } x ( \\tfrac{1}{2 } \\alpha u^2 \\!+\\ !",
    "\\beta u_{2x } )   \\!+\\ !",
    "2 \\tfrac{\\beta}{\\alpha } u_x   \\big )   \\nonumber \\\\   \\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\!\\ !   & & \\hspace*{5 mm } { } \\!+\\ ! { \\ensuremath{\\mathcal{d}}}_y \\big ( \\!\\!-2 \\beta ( t u_x u_y \\!+\\ ! \\tfrac{1}{\\alpha } x u_{xy } ) \\big ) = 0.\\end{aligned}\\ ] ]    note that the fourth conservation law ( [ zk2dconlaw4 ] ) explicitly depends on @xmath48 and @xmath64    the well - known ( 2 + 1)-dimensional kadomtsev - petviashvili ( kp ) equation , @xmath65 for @xmath66 describes shallow water waves with wavelengths much greater than their amplitude moving in the @xmath44-direction and subject to weak variations in the @xmath67-direction @xcite .",
    "the parameter @xmath68 occurs after a re - scaling of the physical coefficients and @xmath69 obviously , the kp equation is not an evolution equation .",
    "however , it can be written as an evolution system in space variable @xmath70 @xmath71 note that @xmath72 and thus @xmath73 system ( [ kpevolutionform ] ) instead of ( [ kpequation ] ) will be used in section  [ secalgorithm ] .",
    "conservationlawsmd.m has an algorithm that will identify an evolution variable and transform the given pde into a system of evolution equations .",
    "equation ( [ kpequation ] ) expresses conservation of momentum : @xmath74 other well - documented conservation laws @xcite are @xmath75 where @xmath76 is an arbitrary function .",
    "thus , there is an infinite family of conservation laws , each of the form ( [ kpgenconlaw1 ] ) or ( [ kpgenconlaw2 ] ) . in section  [ secalgorithm ]",
    "we will show how ( [ zk2dconlaw1])-([zk2dconlaw4 ] ) are computed straightforwardly with our algorithm .",
    "we will also compute several conservation laws for the kp equation .",
    "our current code does not ( algorithmically ) compute ( [ kpgenconlaw1 ] ) and ( [ kpgenconlaw2 ] ) .",
    "instead , conservation laws obtained with the code allow the user to conjecture and test the form of ( [ kpgenconlaw1 ] ) and ( [ kpgenconlaw2 ] ) . in section  [ seckpequation ] ,",
    "we give computational details and show how ( [ kpgenconlaw1 ] ) and ( [ kpgenconlaw2 ] ) can be verified .",
    "three operators from the calculus of variations and differential geometry play a major role in the conservation law algorithm .",
    "namely , the total derivative operator , and the euler and homotopy operators .",
    "all three operators ( which act on the jet space ) can be defined algorithmically which allows for straightforward and efficient computations .",
    "the algorithm in section  [ secalgorithm ] requires that operations applied to _ differential functions _",
    "@xmath77 take place in the jet space , where one component of @xmath55 is a parameter .",
    "although in later sections , one of the space variables will serve as the parameter , in this section we arbitrarily choose @xmath48 as the parameter ( matching ( [ evolutiondefinition ] ) ) .",
    "thus , in all definitions and theorems in this section , 1d means that there is only one space variable , yet @xmath78 likewise , in 2d and 3d cases , @xmath12 and @xmath47 respectively .    using ( [ evolutiondefinition ] ) ,",
    "we assume that all partial derivatives of @xmath79 with respect to @xmath48 are eliminated from @xmath80 thus , @xmath81 with @xmath82 with @xmath83 and @xmath6 as defined earlier .",
    "each term in @xmath40 must be a monomial in jet space variables , either multiplied with a constant or variable coefficient .    the total derivative operator @xmath36 in 2d is defined as @xmath84 where @xmath39 and @xmath85 are the orders of @xmath40 for component @xmath41 with respect to @xmath44 and @xmath70 respectively .",
    "@xmath86 is defined analogously . since @xmath48 is parameter , @xmath87 ( in 2d )",
    "is defined in a simpler manner , @xmath88    if a total derivative operator were applied by hand to a differential function , @xmath77 one would use the product and chain rules to complete the computation .",
    "however , formulas like ( [ totalderivative1d ] ) , ( [ totalderivative2d ] ) , and ( [ totaltderivative ] ) are more suitable for symbolic computation .",
    "the euler operator ( also known as the variational derivative ) plays a fundamental role in the calculus of variations @xcite , and serves as a key tool in our conservation laws algorithm .",
    "the euler operator can be defined for any number of independent and dependent variables .",
    "for example in 1d , the euler operator is denoted by @xmath89 0.001pt    the 1d euler operator for dependent variable @xmath90 is defined as @xmath91 @xmath92 the 2d and 3d euler operators are defined analogously @xcite .",
    "for example , the 2d euler operator is @xmath93    the euler operator allows one to test if differential functions are exact which is a key step in the computation of conservation laws .",
    "let @xmath40 be a differential function of order @xmath94 in 1d , @xmath40 is called _ exact _",
    "if @xmath40 is a total derivative , i.e. , there exists a differential function @xmath95 such that @xmath96 in 2d or 3d , @xmath40 is _ exact _ if @xmath40 is a total divergence , i.e. , there exists a differential vector function @xmath97 such that @xmath98    0.0001pt    [ zeroeulerexact ] a differential function @xmath40 is exact if and only if @xmath99 here , @xmath100 is the vector @xmath101 which has @xmath102 components matching the number of components of @xmath103 0.001pt    0.001pt    the proof for a general multi - dimensional case is given in , e.g. , @xcite .",
    "0.001pt next , we turn to the homotopy operator @xcite , which integrates exact 1d differential functions , or inverts the total divergence of exact 2d or 3d differential functions .",
    "integration routines in cas have been unreliable when integrating exact differential expressions involving unspecified functions .",
    "often the built - in integration by parts routines fail when arbitrary functions appear in the integrand .",
    "the 1d homotopy operator offers an attractive alternative since it circumvents integration by parts altogether . 0.001pt",
    "[ onedhomotopyoperator ] let @xmath40 be an exact 1d differential function .",
    "the homotopy operator in 1d is defined @xcite as @xmath104\\,\\frac{d \\lambda}{\\lambda},\\ ] ] where @xmath105 the integrand , @xmath106 is defined as @xmath107 where @xmath39 is the order of @xmath40 in dependent variable @xmath41 with respect to @xmath64 the notation @xmath108 $ ] means that in @xmath40 one replaces @xmath79 by @xmath109 by @xmath110 and so on for all derivatives of @xmath103 @xmath111 is an auxiliary parameter that traces the homotopic path .",
    "0.001pt given an exact differential function , the 1d homotopy operator ( [ 1dhomotopy ] ) replaces integration by parts ( in @xmath112 with a sequence of differentiations followed by a standard integration with respect to @xmath113 indeed , the following theorem states one purpose of the homotopy operator . 0.001pt    [ homotopy1dtheorem ] let @xmath40 be exact , i.e. , @xmath114 for some differential function @xmath115 then , @xmath116    0.001pt    a proof for the 1d case in the language of standard calculus is given in @xcite .",
    "see @xcite for a proof based on the variational complex .",
    "0.001pt the homotopy operator ( [ 1dhomotopy ] ) has been a reliable tool for integrating exact _ polynomial _ differential expressions . for applications , see @xcite .",
    "however , the homotopy operator fails to integrate certain classes of exact rational expressions as discussed in @xcite .",
    "although , the homotopy integrator code in @xcite covers large classes of exact rational functions , we will not consider rational expressions in this paper .",
    "cas often can not invert the divergences of exact 2d and 3d differential functions , although some capabilities exist in _",
    "maple_. again , the homotopy operator is a valuable tool to compute @xmath117 when it is impossible to do so by hand or by using the available software tools . 0.001pt    [ twodhomotopyoperator ] the 2d homotopy operator is a `` vector '' operator with two components , @xmath118 where @xmath119\\,\\frac{d \\lambda}{\\lambda }   \\quad { \\rm and } \\quad { \\mathcal}{h}_{{\\mathbf}{u}(x , y)}^{(y ) } f = \\int_0 ^ 1 \\left ( \\sum_{j=1}^{n } i_{u^j(x , y)}^{(y ) } f \\right ) [ \\lambda { { \\mathbf}{u}}]\\,\\frac{d \\lambda}{\\lambda}.\\ ] ] the @xmath44-integrand , @xmath120 is given by @xmath121 with combinatorial coefficient @xmath122 where @xmath123 similarly , the @xmath67-integrand , @xmath124 is defined as @xmath125 where @xmath126    0.001pt    [ threedhomotopyoperator ] the homotopy operator in 3d is a three - component vector operator , @xmath127 where the @xmath44-component is given by @xmath128\\,\\frac{d \\lambda}{\\lambda}.\\ ] ] the @xmath67- and @xmath129-components are defined analogously .",
    "the @xmath44-integrand is given by @xmath130 with combinatorial coefficient @xmath131 where @xmath132 the integrands @xmath133 and @xmath134 are defined analogously .",
    "based on cyclic permutations , they have combinatorial coefficients @xmath135 and @xmath136 respectively .    0.001pt using homotopy operators , @xmath137 can be computed based on the following theorem .",
    "0.001pt    [ homotopy2d3dtheorem ] let @xmath40 be exact , i.e. , @xmath138 for some @xmath139 then , in the 2d case , @xmath140 analogously , in 3d one has @xmath141    0.001pt    a proof for the 2d case",
    "is given in @xcite .",
    "the 3d case could be proven with similar arguments .",
    "0.001pt unfortunately , the outcome of the homotopy operator is not unique .",
    "the homotopy integral in the 1d case has a harmless arbitrary constant .",
    "however , in the 2d and 3d cases there are infinitely many non - trivial choices for @xmath142 from vector calculus we know that @xmath143 thus , the addition of @xmath144 to @xmath145 would not alter @xmath146 more precisely , for @xmath147 in 2d , or for @xmath148 in 3d , @xmath149 where @xmath150 and @xmath151 are arbitrary functions . to obtain a concise result for @xmath117 @xcite developed an algorithm that removes curl terms .",
    "furthermore , when @xmath40 is rational @xcite , the homotopy operator may fail at the singularities of @xmath152 but rational functions are not considered in this paper .",
    "to compute a conservation law , the pde is assumed to be in the form given in ( [ evolutiondefinition ] ) for a suitable evolution variable . adhering to ( [ genconlaw ] ) , if the evolution variable is @xmath14 we construct a candidate density .",
    "however , if the evolution variable is @xmath153 @xmath70 or @xmath54 we construct a candidate component of the flux corresponding to the evolution variable . for argument",
    "s sake let us assume that the evolution variable is time .",
    "the candidate density is constructed by taking a linear combination ( with undetermined coefficients ) of terms that are invariant under the scaling symmetry of the pde .",
    "the total time derivative of the candidate is computed and evaluated on ( [ evolutiondefinition ] ) , thus removing all time derivatives from the problem .",
    "the resulting expression must be exact , so we use the euler operator and theorem  [ zeroeulerexact ] to derive the linear system that yields the undetermined coefficients .",
    "substituting these coefficients into the candidate leads to a valid density .",
    "once the density is known the homotopy operator and theorems  [ homotopy1dtheorem ] or  [ homotopy2d3dtheorem ] are used to compute the associated flux , @xmath154 taking advantage of ( [ genconlaw ] ) .",
    "in contrast to other algorithms which attempt to compute the components of @xmath155 in ( [ divconlaw ] ) all at once , our algorithm computes the density first , followed by the flux .",
    "although restricted to polynomial conservation laws , our constructive method leads to short densities ( which are free of divergences and divergence - equivalent terms ) and fluxes in which all curl terms are automatically removed .",
    "a term or expression @xmath40 is a _ divergence _ if there exists a vector * f * such that @xmath156 in the 1d case , @xmath40 is a total derivative if there exists a function @xmath157 such that @xmath96 note that @xmath158 is essentially a one - dimensional divergence .",
    "so , from here onwards , the term `` divergence '' will also cover the  total derivative \" case .",
    "two or more terms are _ divergence - equivalent _ when a linear combination of the terms is a divergence .    to illustrate the subtleties of the algorithm we intersperse the steps of the algorithm with _ two _ examples , viz . , the zk and kp equations",
    "a pde has a unique set of lie - point symmetries which may include translations , rotations , dilations , galilean boosts , and other symmetries @xcite .",
    "the application of such symmetries allows one to generate new solutions from known solutions .",
    "we will use only one type of lie - point symmetry , namely , the scaling or dilation symmetry , to formulate a `` candidate density . ''",
    "let us assume that a pde has a scaling symmetry .",
    "for example , the zk equation ( [ zkequation2d ] ) is invariant under the scaling symmetry @xmath159 where @xmath111 is an arbitrary scaling parameter , not to be confused with @xmath111 in definitions  [ onedhomotopyoperator ] through  [ threedhomotopyoperator ] . *",
    "step 1-zk * ( computing the scaling symmetry ) . to compute ( [ zkscalingsymmetry ] ) with linear algebra ,",
    "assume that ( [ zkequation2d ] ) for @xmath160 scales uniformly under @xmath161 where @xmath162 and @xmath163 @xmath164 @xmath165 and @xmath166 are undetermined ( rational ) exponents .",
    "we assume that the parameters @xmath68 and @xmath58 do not scale . by the chain rule , ( [ zkequation2d ] ) transforms into @xmath167 if @xmath168 we have ( [ zkequation2d ] ) for @xmath162 up to the scaling factor @xmath169 setting @xmath170 we find @xmath171 and @xmath172 corresponding to ( [ zkscalingsymmetry ] ) . *",
    "step 1-kp * ( computing the scaling symmetry ) . the scaling symmetry for the kp equation will be computed similarly .",
    "assume that ( [ kpevolutionform ] ) scales uniformly under @xmath173 with unknown rational exponents @xmath174 through @xmath175 applying the chain rule to get ( [ kpevolutionform ] ) expressed in the variables @xmath176 yields @xmath177 by setting @xmath178 ( [ kpkwithunknownscaledsym ] ) becomes a scaled version of ( [ kpevolutionform ] ) in the new variables @xmath162 and @xmath179 setting @xmath180 yields @xmath181 @xmath182 @xmath172 and @xmath183 hence , @xmath184 is a scaling symmetry of ( [ kpevolutionform ] ) .",
    "conservation law ( [ divconlaw ] ) must hold on solutions of the pde .",
    "therefore , we search for polynomial conservation laws that obey the scaling symmetry of the pde .",
    "indeed , we have yet to find a polynomial conservation law that does not adhere to the scaling symmetry .",
    "based on the scaling symmetry of the pde , we choose a scaling factor for one of the components of @xmath155 in ( [ divconlaw ] ) .",
    "the selected scaling factor will be called the _ rank _",
    "@xmath185 of that component .",
    "then , we construct a candidate for that component as a linear combination of monomial terms ( all of rank @xmath186 ) with undetermined coefficients . by dynamically removing divergence terms and divergence - equivalent terms that candidate is short and of low order . * step 2-zk * ( building the candidate component ) .",
    "since the zk equation ( [ zkequation2d ] ) has @xmath48 as evolution variable , we will compute the density @xmath187 of ( [ genconlaw ] ) of a fixed rank , for example , @xmath188 * ( a ) * construct a list , @xmath189 of differential terms containing all powers of dependent variables and products of dependent variables that have rank 6 or less . by ( [ zkscalingsymmetry ] )",
    ", @xmath190 has a scaling factor of 2 , so @xmath191 scales to rank 6 and @xmath192 has rank 4 .",
    "this leads to @xmath193 * ( b ) * bring all of the terms in @xmath194 up to rank 6 and put them into a new list , @xmath195 this is done by applying the total derivative operators with respect to the space variables .",
    "taking the terms in @xmath196 has rank 6 and is placed directly into @xmath195 the term @xmath192 has rank 4 and can be brought up to rank six in three ways : either by applying @xmath36 twice , by applying @xmath86 twice , or by applying each of @xmath36 and @xmath86 once , since both @xmath36 and@xmath86 have scaling factors of 1 .",
    "all three possibilities are considered and the resulting terms are put into @xmath195 similarly , the term @xmath190 can be brought up to rank 6 in five ways , and all results are placed into @xmath195 doing so , @xmath197 in which all monomials are now of rank 6 . *",
    "( c ) * with the goal of constructing a nontrivial density with the least number of terms , remove all terms that are _ divergences _ or are _ divergence - equivalent _ to other terms in @xmath195 this can be done algorithmically by applying the euler operator ( [ zeroeulerscalarux2d ] ) to each term in ( [ zkrank6qlist ] ) , yielding @xmath198 by theorem [ zeroeulerexact ] , divergences are terms corresponding to @xmath199 in ( [ zkzeroeulerofq ] ) . hence , @xmath200 @xmath201 @xmath202 @xmath203 and @xmath204 are divergences and can be removed from @xmath195 next , all divergence - equivalent terms will be removed . following @xcite , form a linear combination of the terms that remained in ( [ zkzeroeulerofq ] ) with undetermined coefficients @xmath205 gather like terms , and set it identically equal to zero , @xmath206 hence , @xmath207",
    "@xmath208 @xmath209 and @xmath210 terms with coefficients @xmath211 @xmath212 and @xmath213 are divergence - equivalent to the terms with coefficients @xmath214 @xmath215 and @xmath216 respectively . for each divergence - equivalent pair ,",
    "the terms of highest order are removed from @xmath217 in ( [ zkrank6qlist ] ) .",
    "after all divergences and divergence - equivalent terms are removed , @xmath218 * ( d ) * a candidate density is obtained by forming a linear combination of the remaining terms in @xmath217 using undetermined coefficients @xmath219 thus , the candidate density of rank 6 for ( [ zkequation2d ] ) is @xmath220 now , we turn to the kp equation ( [ kpequation ] ) .",
    "the conservation laws for the kp equation , ( [ kpgenconlaw1 ] ) and ( [ kpgenconlaw2 ] ) , involve an arbitrary functional coefficient @xmath221 the scaling factor for @xmath222 depends on the degree if @xmath222 is polynomial ; whereas there is no scaling factor if @xmath222 is non - polynomial . in general , working with undetermined functional ( instead of constant ) coefficients @xmath223 would require a sophisticated solver for pdes for @xmath40 ( see @xcite ) .",
    "therefore , we can _ not automatically _ compute ( [ kpgenconlaw1 ] ) and ( [ kpgenconlaw2 ] ) with our method .",
    "however , our algorithm can find conservation laws with explicit variable coefficients , e.g. , @xmath224 etc .",
    ", as long as the degree is specified .",
    "allowing such coefficients causes the candidate component to have a negative rank . by computing several conservation laws with explicit variable coefficients",
    "it is possible ( by pattern matching ) to guess and subsequently test the form of a conservation law with arbitrary functional coefficients . *",
    "step 2-kp * ( building a candidate @xmath67-component ) .",
    "when the kp equation is replaced by ( [ kpevolutionform ] ) , the evolution variable is @xmath225 thus , we will compute a candidate for the @xmath67-component of the flux , @xmath226 in ( [ genconlaw ] ) .",
    "the @xmath67-component will have rank equal to @xmath227 the negative rank occurs since differential terms for the component are multiplied by @xmath228 which , by ( [ kpscalingsymmetry ] ) , scales with @xmath229 where @xmath230 @xmath231 and @xmath232 are positive integers .",
    "the total degree of the variable coefficient @xmath233 is restricted to @xmath234 * ( a ) * as shown in table  [ kpcandidatetable ] , construct two lists , one with all possible coefficients @xmath235 up to degree 3 and the other with differential terms , organized so that the combined rank equals @xmath227 the rank of each term is computed using the scaling factors from ( [ kpscalingsymmetry ] ) .",
    "for example , @xmath48 and @xmath44 have scaling factors of @xmath236 and @xmath237 respectively , so @xmath238 has rank @xmath239 variable @xmath190 has scaling factor 2 , so @xmath240 has rank @xmath227 since we are computing the @xmath67-component of @xmath154 the differential terms contain only derivatives with respect to @xmath44 and @xmath241    .",
    "factors @xmath235 of degree 3 are paired with differential terms so that their products have ranks @xmath227 [ cols= \" > , < , > , < , > \" , ]     indeed , pattern matching with the results in table  [ kpconlawlist ] and some interactive work lead to ( [ kpgenconlaw1 ] ) , which can be then be verified with conservationlawsmd.m as follows",
    ".    the conservation laws in table  [ kpconlawlist ] suggest that a density has the form @xmath242 or more general , @xmath243 where @xmath222 is an arbitrary function",
    ". the corresponding flux would be harder to guess .",
    "however , it can be computed as follows .",
    "since the kp equation ( [ kpevolutionform ] ) is an evolution equation in @xmath70 we construct a suitable candidate for @xmath244 guided by the results in table  [ kpconlawlist ] , we take @xmath245 where @xmath246 and @xmath247 are undetermined coefficients , and @xmath248 is replaced by @xmath249 in agreement with ( [ kpevolutionform ] ) . as before ,",
    "we compute @xmath250 and replace @xmath248 and @xmath251 using ( [ kpevolutionform ] ) .",
    "doing so , @xmath252 by ( [ genconlaw ] ) , @xmath253 by theorem  [ zeroeulerexact ] , @xmath254 clearly , @xmath255 and @xmath256 if we set @xmath257 and @xmath258 we obtain @xmath259 in ( [ kpgenconlaw1 ] ) .",
    "application of the homotopy operator ( in this case to an expression with arbitrary functional coefficients ) yields @xmath260 this is how conservation law ( [ kpgenconlaw1 ] ) was computed .",
    "conservation law ( [ kpgenconlaw2 ] ) was obtained in a similar way .",
    "both conservation laws were then verified using the conservationlawsmd.m code .",
    "in this section we state results obtained by using our algorithm on a variety of ( 2 + 1)-  and ( 3 + 1)-dimensional nonlinear pdes .",
    "the selected pdes highlight several of the issues that arise when using our algorithm and software package conservationlawsmd.m .",
    "the ( 2 + 1)-dimensional sk equation @xcite , @xmath261 with @xmath262 is a _ completely integrable",
    "_ 2d generalization of the standard sk equation .",
    "the latter has infinitely many conservation laws ( see , e.g. , @xcite ) .",
    "our algorithm can not handle the integral terms in ( [ skequation ] ) , so we set @xmath263 doing so , ( [ skequation ] ) becomes a system of evolution equations in @xmath67 : @xmath264 application of our algorithm to ( [ sksystem ] ) yields several conservation laws , all of which have densities @xmath265 @xmath266 @xmath267 etc .",
    ", and @xmath268 @xmath269 @xmath270 etc .   like with the kp equation",
    ", this suggests that there are conservation laws with an arbitrary functional coefficient @xmath221 proceeding as in section  [ seckpequation ] and using conservationlawsmd.m , we obtained @xmath271 note that the densities in ( [ 2dskconslaw1 ] ) and ( [ 2dskconslaw2 ] ) are identical to those in ( [ kpgenconlaw1 ] ) and ( [ kpgenconlaw2 ] ) for the kp equation .",
    "these two densities occur often in ( 2 + 1)-dimensional pdes that have a @xmath272 instead of a @xmath273 term , as shown in the next example .",
    "the khokhlov - zabolotskaya ( kz ) equation or dispersionless kp equation describes the propagation of sound in non - linear media in two or three space dimensions @xcite .",
    "the ( 2 + 1)-dimensional kz equation , @xmath274 with @xmath262 can be written as a system of evolution equations in @xmath70 @xmath275 by setting @xmath276 again , two familiar densities appear in the following conservation laws , computed indirectly as we showed for the kp and sk equations , @xmath277 where @xmath222 is an arbitrary function .",
    "actually , ( [ 2dkzconslaw2 ] ) and ( [ 2dkzconslaw3 ] ) are _ nonlocal _ because , from ( [ kzequation2d ] ) , @xmath278 by swapping terms in the density and the @xmath44-component of the flux , ( [ 2dkzconslaw2 ] ) with @xmath279 can be rewritten as @xmath280 which is local .",
    "the computation of conservation laws for the ( 3 + 1)-dimensional kz equation , @xmath281 where @xmath282 is more difficult .",
    "this equation can be written as a system of evolution equations in either @xmath67 or @xmath283 although the intermediate results differ , either choice leads to equivalent conservation laws . writing ( [ kzequation3d ] ) as an evolution system in @xmath54 @xmath284 conservationlawsmd.m is able to compute a variety of conservation laws whose densities are shown in table  [ densitiesforkz3d ] .     2 & @xmath285 +    ' '' ''    0 & @xmath286 @xmath287 +    ' '' ''",
    "@xmath288 & @xmath289 +    ' '' ''    @xmath290 & @xmath291 @xmath292 +    ' '' ''",
    "@xmath236 & @xmath293 @xmath294 +    ' '' ''",
    "@xmath295 & @xmath296 @xmath297 @xmath298 +    ' '' ''    @xmath299 & @xmath300 @xmath301 +    ' '' ''",
    "@xmath302 & @xmath303 @xmath304 @xmath305 @xmath306 +    ' '' ''    @xmath307 & @xmath308 @xmath309 @xmath310 +    ' '' ''    @xmath311 & @xmath312 @xmath313 @xmath314 +    ' '' ''    & @xmath315 +    0.000001pt density @xmath285 in table  [ densitiesforkz3d ] is part of local conservation law @xmath316 which can be rewritten as a nonlocal conservation law @xmath317 in general , if a factor @xmath318 appears in a density then that factor can be replaced by @xmath319 doing so , all densities in table  [ densitiesforkz3d ] that can be expressed as @xmath320 where @xmath321 is arbitrary . introducing an arbitrary function @xmath322",
    "the conservation laws corresponding to the densities in table  [ densitiesforkz3d ] can be summarized as @xmath323 equation ( [ kzgenconlaw3 ] ) is only a conservation law when the constraints @xmath324 and @xmath325 are satisfied , where @xmath326 thus , @xmath327 must be a harmonic function and @xmath328 must satisfy the poisson equation with @xmath329 on the right hand side . combining both equations",
    "produces the biharmonic equation @xmath330 as shown by @xcite , @xmath331 has general solutions of the form @xmath332 where @xmath333 and @xmath334 treating @xmath48 as a parameter , four solutions for @xmath335 are @xmath336 this shows how @xmath328 can be written in terms of @xmath337 for every conservation law corresponding to the densities in table  [ densitiesforkz3d ] , @xmath328 could be computed using one of the equations in ( [ relategtof1])-([relategtof4 ] ) .",
    "conservation laws for the kz equation have been reported in the literature by @xcite and @xcite . however , substitution of their results into ( [ divconlaw ] ) revealed inaccuracies . after bringing the mistake to their attention ,",
    "@xcite have since corrected one of their conservation laws to match our result .      the ( 2 + 1)-dimensional ch equation , @xmath338 for @xmath262 models water waves @xcite .",
    "it is an extension of the completely integrable 1d ch equation derived by @xcite .",
    "a study by @xcite concluded that ( [ chequation ] ) is not completely integrable .",
    "obviously , ( [ chequation ] ) is a conservation law itself , @xmath339 it can be written as a system of evolution equations in @xmath225 indeed , @xmath340 note that we introduced auxiliary parameters @xmath68 and @xmath58 as coefficients of the @xmath273 and @xmath341 terms , respectively .",
    "the reason for doing so is that the ch equation ( [ chequation ] ) does not have a scaling symmetry unless we add scales on the parameters @xmath342 and @xmath343 our code guided us in finding the following conservation laws with functional coefficients , @xmath344 where @xmath222 is arbitrary and without constraints on the parameters .",
    "thus , if we set @xmath345 we have conservation laws for ( [ chequation ] ) .",
    "the ( 2 + 1)-dimensional gardner equation @xcite , @xmath346 for @xmath262 is a 2d generalization of @xmath347 which is an integrable combination of the kdv and mkdv equations due to gardner . for @xmath348 ( [ gardnerequationorig ] )",
    "reduces to the kp equation ( [ kpequation ] ) . for @xmath349 ( [ gardnerequationorig ] )",
    "becomes a modified kp equation .",
    "adding a new dependent variable , @xmath350 allows one to remove the integral terms and replace ( [ gardnerequationorig ] ) by the system @xmath351 for ( [ gardnerequationorig ] ) , we found two conservation laws with constant coefficients , @xmath352 using the methodology described for the previous examples in this section , we eventually found three conservation laws involving a variable coefficient @xmath353 @xmath354 and @xmath355 setting @xmath356 in ( [ gardnergenconlaw1 ] ) and ( [ gardnergenconlaw2 ] ) yields ( [ gardnerclpoly1 ] ) and ( [ gardnerclpoly2 ] ) , respectively .",
    "before using conservationlawsmd.m , all data files provided with the program , as well as additional data files created by the user , must be placed into one directory .",
    "next , open the _ mathematica _ notebook conservationlawsmd.nb which contains instructions for loading the code .",
    "executing the command conservationlawsmd [ ] will open a menu , offering the choice of computing conservation laws for a pde from the menu or from a data file prepared by the user .",
    "all pdes listed in the menu have matching data files .",
    "an example of a data file is shown in figure  [ dataforgardner ] .",
    "the independent space variables must be @xmath153 @xmath70 and @xmath283 the symbol @xmath48 must be used for time .",
    "dependent variables must be entered as @xmath357 @xmath358 where @xmath102 is the number of dependent variables . in a ( 1 + 1)-dimensional case ,",
    "the dependent variables ( in _ mathematica _ syntax ) are u[1][x , t ] , u[2][x , t ] , etc.in a ( 3 + 1)-dimensional cases , u[1][x , y , z , t ] , u[2][x , y , z , t ] , etc . , where @xmath48 is always the last argument .",
    "we have presented an algorithm and a software package , conservationlawsmd.m , to compute conservation laws of nonlinear polynomial pdes in multiple space dimensions .",
    "in contrast to the approach taken by researchers working with _ maple _ and _ reduce _ , our algorithm uses only tools from calculus , the calculus of variations , linear algebra , and differential geometry .",
    "in particular , we do _ not _ first compute the determining pdes for the density and the flux components and then attempt to solve these pdes .",
    "although restricted to polynomial conservation laws , our constructive method leads to short densities ( free of divergences and divergence - equivalent terms ) and curl - free fluxes .",
    "the software is easy to use , runs fast , and has been tested for a variety of multi - dimensional nonlinear pdes , demonstrating the versatility of the code .",
    "many of the test cases have been added to the menu of the program .",
    "in addition , the program allows the user to test conservation laws either computed with other methods , obtained from the literature , or conjectured after work with the code .",
    "the latter is particularly relevant for finding conservation laws involving arbitrary functions as shown in sections  [ seckpequation ] and  [ secapplications ] .",
    "currently , conservationlawsmd.m has two major limitations : ( i ) the pde must either be an evolution equation or correspond to a system of evolution equations , perhaps after an interchange of independent variables or some other transformation ; and ( ii ) the program can only generate local polynomial densities and fluxes .",
    "however , the _ testing _ capabilities of conservationlawsmd.m are more versatile .",
    "the code can be used to test conservation laws involving smooth functions of the independent variables and the densities and fluxes are not restricted to polynomial differential functions .",
    "future versions of the code will work with any number of independent variables and will cover pdes that are not of evolution type , e.g. , pdes with mixed derivatives and transcendental nonlinearities .",
    "( * data file d_kd2d.m * ) + ( * menu item 2 - 10 * ) + numdependentvariablesinput = 2 ; + independentvariablelistinput = \\{x , y } ; +   + nameinput = `` ( 2 + 1)-dimensional gardner equation '' ; + noteinput = `` any additional information can be put here . '' ; +   + weightedparametersinput = \\{beta } ; +   +   + rankrhoinput = null ;",
    "this material is based in part upon work supported by the national science foundation ( nsf ) under grant no .",
    "any opinions , findings , and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of nsf .    mark hickman ( university of canterbury , christchurch , new zealand ) and bernard deconinck ( university of washington , seattle ) are gratefully acknowledged for valuable discussions .",
    "undergraduate students jacob rezac , john - bosco tran , and travis  alan \" volz are thanked for their help with this project .",
    "we thank the anonymous referees whose constructive comments and suggestions helped us further improve the manuscript .",
    "anderson , i.m .",
    "the variational complex .",
    "dept .  of mathematics , utah state university , logan , utah , 318 pages ,",
    "manuscript available at http://www.math.usu.edu/@xmath359fg_mp/publications/vb/vb.pdf .",
    "hereman , w. , adams , p.j . ,",
    "eklund , h.l . ,",
    "hickman , m.s . , herbst , b.m . , 2009 .",
    "direct methods and symbolic software for conservation laws of nonlinear equations . in : yan ,",
    "z. ( ed . ) , advances in nonlinear waves and symbolic computation , nova science publishers , new york , pp .",
    "hereman , w. , colagrosso , m. , sayers , r. , ringler , a. , deconinck , b. , nivala , m. , hickman , m.s . , 2005 .",
    "continuous and discrete homotopy operators and the computation of conservation laws . in : wang , d. , zheng , z. ( eds . ) , differential equations with symbolic computation , birkhuser , basel , pp .  249285 .",
    "poole , d. , hereman , w. , 2009 .",
    "homotopyintegrator.m : a _ mathematica _ package for the application of the homotopy method for ( i ) integration by parts of expressions involving unspecified functions of one variable and ( ii ) the inversion of a total divergence involving unspecified functions of two or three independent variables ; software available at http://inside.mines.edu/@xmath359whereman under scientific software .",
    "poole , d. , hereman , w. , 2009 .",
    "conservationlawsmd.m : a _ mathematica _ package for the symbolic computation of conservation laws of polynomial systems of nonlinear pdes in multiple space dimensions , software available at http://inside.mines.edu/@xmath359whereman under scientific software ."
  ],
  "abstract_text": [
    "<S> a method for symbolically computing conservation laws of nonlinear partial differential equations ( pdes ) in multiple space dimensions is presented in the language of variational calculus and linear algebra . </S>",
    "<S> the steps of the method are illustrated using the zakharov - kuznetsov and kadomtsev - petviashvili equations as examples .    </S>",
    "<S> the method is algorithmic and has been implemented in _ </S>",
    "<S> mathematica_. the software package , conservationlawsmd.m , can be used to symbolically compute and test conservation laws for polynomial pdes that can be written as nonlinear evolution equations .    </S>",
    "<S> the code conservationlawsmd.m has been applied to multi - dimensional versions of the sawada - kotera , camassa - holm , gardner , and khokhlov - zabolotskaya equations .        </S>",
    "<S> conservation laws ; nonlinear pdes ; symbolic software ; complete integrability </S>"
  ]
}
{
  "article_text": [
    "periscope and meerkat are services that enable users to broadcast live video to a large number of viewers using their mobile device .",
    "they both emerged in 2015 and have since gained popularity fast .",
    "periscope , which was acquired by twitter before the service was even launched , announced in march 2016 on their one year birthday that over 110 years of live video was watched every day with the application  @xcite .",
    "also facebook has recently launched a rival service called facebook live .",
    "very little details have been released about how these streaming systems work and what kind of quality of experience ( qoe ) they deliver",
    ". one particular challenge they face is to provide low latency stream to clients because of the features that allow feedback from viewers to the broadcaster in form of a chat , for example .",
    "such interaction does not exist with `` traditional '' live video streaming systems and it has implications on the system design ( e.g. , protocols to use ) .",
    "we have measures the periscope service in two ways .",
    "we first created a crawler that queries the periscope api for ongoing live streams and used the gathered data of about 220k distinct broadcasts to analyze the usage patterns .",
    "second , we automated the process of viewing periscope broadcasts with an android smartphone and generated a few thousand viewing sessions while logging various kinds of data . using this data we examined the resulting qoe .",
    "in addition , we analyzed the video quality by post processing the video data extracted from the traffic captures .",
    "finally , we studied the application induced energy consumption on a smartphone .",
    "our key findings are the following : 1 ) 2 mbps appears to be the key boundary for access network bandwidth below which startup latency and video stalling clearly increase .",
    "2 ) periscope appears to use the hls protocol when a live broadcast attracts many participants and rtmp otherwise .",
    "3 ) hls users experience a longer playback latency for the live streams but typically fewer stall events .",
    "4 ) the video bitrate and quality are very similar for both protocols and may exhibit significant short - term variations that can be attributed to extreme time variability of the captured content .",
    "5 ) like most video apps , periscope is power hungry but , surprisingly , the power consumption grows dramatically when the chat feature is turned on while watching a broadcast .",
    "the causes are significantly increased traffic and elevated cpu and gpu load .",
    "the periscope app communicates with the servers using an api that is private in that the access is protected by ssl . to get access to it",
    ", we set up a so called ssl - capable _ man - in - the - middle proxy _",
    ", i.e. mitmproxy  @xcite , in between the mobile device and the periscope service as a transparent proxy .",
    "the proxy intercepts the https requests sent by the mobile device and pretends to be the server to the client and to be the client to the server .",
    "the proxy enables us to examine and log the exchange of requests and responses between the periscope client and servers .",
    "the periscope ios app uses the so called _ certificate pinning _ in which the certificate known to be used by the server is hard - coded into the client .",
    "therefore , we only use the android app in this study .",
    "we used both android emulators ( genymotion  @xcite ) and smartphones in the study .",
    "we generated two data sets .",
    "for the first one , we used an android emulator and developed an _",
    "inline script _ for the mitmproxy that crawls through the service by continuously querying about the ongoing live broadcasts .",
    "the obtained data was used to analyze the usage patterns ( sec .",
    "[ sec : usage ] ) .",
    "the second dataset was generated for qoe analysis ( sec .",
    "[ sec : qoe ] ) by automating the broadcast viewing process on a smartphone .",
    "the app has a `` teleport '' button which takes the user directly to a randomly selected live broadcast .",
    "automation was achieved with a script that sends tap events through android debug bridge ( adb ) to push the teleport button , wait for 60s , push the close button , push the `` home '' button and repeat all over again .",
    "the script also captures all the video and audio traffic using tcpdump .",
    "meanwhile , we ran another inline script with mitmproxy that dumped for each broadcast viewed a description and playback statistics , such as delay and stall events , which the application reports to a server at the end of a viewing session .",
    "it is mainly useful for those streaming sessions that use the rtmp protocol because after an http live streaming ( hls ) session , the app reports only the number of stall events .",
    "we also reconstruct the video data of each session and analyze it using a variety of scripts and tools . after finding and reconstructing the multimedia tcp stream using wireshark  @xcite",
    ", single segments are isolated by saving the response of http get request which contains an mpeg - ts file  @xcite ready to be played .",
    "for rtmp , we exploit the wireshark dissector which can extract the audio and video segments .",
    "the libav  @xcite tools have been used to inspect the multimedia content and decode the video in full for the analysis of sec .  [ sec : audio_video_quality ] .    in the automated viewing experiments , we used two different phones : samsung galaxy s3 and s4 .",
    "the phones were located in finland and connected to the internet by means of reverse tethering through a usb connection to a linux desktop machine providing them with over 100mbps of available bandwidth both up and down stream . in some experiments",
    ", we imposed artificial bandwidth limits with the ` tc ` command on the linux host .",
    "for latency measurement purposes ( section  [ sec : stall_latency ] ) , ntp was enabled on the desktop machine and used the same server pool as the periscope app .",
    "periscope enables users to broadcast live video for other users to view it . both public and private broadcasting is available .",
    "private streams are only viewable by chosen users .",
    "viewers can use text chat and emoticons to give feedback to the broadcaster .",
    "the chat becomes full when certain number of viewers have joined after which new joining users can not send messages",
    ". broadcasts can also be made available for replay .",
    "a user can discover public broadcasts in three ways : 1 ) the app shows a list of about 80 ranked broadcasts in addition to a couple of featured ones .",
    "2 ) the user can explore the map of the world in order to find a broadcast in a specific geographical region .",
    "the map shows only a fraction of the broadcasts available in a large region and more broadcasts become visible as the user zooms in .",
    "3 ) the user can click on the `` teleport '' button to start watching a randomly selected broadcast .",
    "[ tab : pcope_api ]    .relevant periscope api commands . [ cols=\"<,<,<\",options=\"header \" , ]     since the api is not public , we examined the http requests and responses while using the app through the mitmproxy in order to understand how the api works .",
    "the application communicates with the servers by sending post requests containing json encoded attributes to the following address : https://api.periscope.tv/api/v2/apirequest . the ` apirequest ` and its contents vary according to what the application wants to do .",
    "requests relevant to this study are listed in table  [ tab : pcope_api ] .",
    "periscope uses two kinds of protocols for the video stream delivery : real time messaging protocol ( rtmp ) using port 80 and http live streaming ( hls ) because rtmp enables low latency ( section  [ sec : qoe ] ) , while hls is employed to meet scalability demands .",
    "also facebook live uses the same set of protocols@xcite .",
    "further investigation reveals that the rtmp streams are always delivered by servers running on amazon ec2 instances .",
    "for example , the ip address that the application got when resolving vidman-eu-central-1.periscope.tv gets mapped to ec2-54-67-9-120.us-west-1.compute.amazonaws.com when performing a dns reverse lookup .",
    "in contrast , hls video segments are delivered by fastly cdn .",
    "rtmp streams use only one connection , whereas hls may sometimes use multiple connections to different servers in parallel to fetch the segments , possibly for load balancing and/or resilience reasons .",
    "we study the logic of selecting the protocol and its impact on user experience in section  [ sec : qoe ] .",
    "public streams are delivered using plaintext rtmp and http , whereas the private broadcast streams are encrypted using rtmps and https for hls .",
    "the chat uses websockets to deliver messages .",
    "we first wanted to learn about the usage patterns of periscope .",
    "the application does not provide a complete list of broadcasts and the user needs to explore the service in ways described in the previous section . in late march of 2016 , over 110 years of live video were watched every day through periscope  @xcite , which roughly translates into 40k live broadcasts ongoing all the time .",
    "we developed a crawler by writing a mitmproxy inline script that exploits the ` /mapgeobroadcastfeed ` request of the periscope api .",
    "the script intercepts the request made by the application after being launched and replays it repeatedly in a loop with modified coordinates and writes the response contents to a file .",
    "it also sets the ` include_replay ` attribute value to false in order to only discover live broadcasts .",
    "in addition , the script intercepts ` /getbroadcasts ` requests and replaces the contents with the broadcast ids found by the crawler since previous request and extracts the viewer information from the response to a file .",
    "we faced two challenges : first , we noticed that when specifying a smaller area , i.e. when user zooms in the map , new broadcasts are discovered for the same area . therefore , to find a large fraction of the broadcasts ,",
    "the crawler must explore the world using small enough areas .",
    "second , periscope servers use rate limiting so that too frequent requests will be answered with http 429 ( `` too many requests '' ) , which forces us to pace the requests in the script and increases the completion time of a crawl .",
    "if the crawl takes a long time , it will miss broadcast information .",
    "our approach is to first perform a _ deep crawl _ and then to select only the most active areas from that crawl and query only them , i.e. , perform a _",
    "targeted crawl_. the reason is that deep crawl alone would produce too coarse grained data about duration and popularity of broadcasts because it takes over 10 minutes to finish . in deep crawl",
    ", the crawler zooms into each area by dividing it into four smaller areas and recursively continues doing that until it no longer discovers substantially more broadcasts .",
    "such a crawl finds 1k-4k broadcasts .",
    "figure  [ fig : deep_crawl ] shows the cumulative number of broadcasts found as a result of crawls performed at different times of day .",
    "figure  [ fig : deep_crawl_rel ] reveals that for all the different crawls , half of the areas contain at least 80% of all the broadcasts discovered in the crawl .",
    "we select those areas from each crawl , 64 areas in total , for a _",
    "targeted crawl_. we divide them into four sets assigned to four different simultaneously running crawlers , i.e. , four emulators running periscope with different user logged in ( avoids rate limiting ) that repeatedly query the assigned areas . such targeted crawl completes in about 50s .    figure  [ fig : bc_behaviour ] plots duration and viewing statistics about four different 4h-10h long targeted crawls started at different times of the day ( note : both variables use the same scale ) .",
    "broadcast duration was calculated by subtracting its start time ( included in the description ) from the timestamp of the last moment the crawler discovered the broadcast .",
    "only broadcasts that ended during the crawl were included ( must not have been discovered during the last 60s of a crawl ) totalling to about 220k distinct broadcasts .",
    "most of the broadcasts last between 1 and 10 minutes and roughly half are shorter than 4 minutes .",
    "the distribution has a long tail with some broadcasts lasting for over a day .",
    "the crawler gathered viewer information about 134k broadcasts .",
    "over 90% of broadcasts have less than 20 viewers on average but some attract thousands of viewers .",
    "it would be nice to know the contents of the most popular broadcasts but the text descriptions are typically not very informative . over 10% of broadcasts have no viewers at all and over 80% of them are unavailable for replay afterwards ( replay information is contained in the descriptions we collect about each broadcast ) , which means that no one ever saw them .",
    "they are typically much shorter than those that have viewers ( avg durations 2min vs. 13 min ) although some last for hours .",
    "they represent about 2% of the total tracked broadcast time .",
    "the local time of day shown in figure  [ fig : bc_viewer_hour ] is determined based on the broadcaster s time zone .",
    "some viewing patterns are visible , namely a notable slump in the early hours of the day , a peak in the morning , and an increasing trend towards midnight , which suggest that broadcasts typically have local viewers .",
    "this makes sense especially from the language preferences point of view .",
    "besides the difference between broadcasts with and without any viewers , the popularity is only very weakly correlated with its duration .",
    "in this section , we study the data set generated through automated viewing with the android smartphones .",
    "it consisted of streaming sessions with and without bandwidth limit to the galaxy s3 and s4 devices .",
    "we have data of 4615 sessions in total : 1796 rtmp and 1586 hls sessions without a bandwidth limit and 18 - 91 sessions for each specific bandwidth limit .",
    "since the number of recorded sessions is limited , the results should be taken as indicative .",
    "the fact that our phone had a high - speed non - mobile internet access means that typical users may experience worse qoe because of a slower and more variable internet access with longer latency .",
    "hls seems to be used only when a broadcast is very popular .",
    "a comparison of the average number of viewers seen in an rtmp and hls session suggests that the boundary number of viewers beyond which hls is used is somewhere around 100 viewers . by examining the ip addresses from which the video was received",
    ", we noticed that 87 different amazon servers were employed to deliver the rtmp streams .",
    "we could locate only nine of them using ` maxmind.com ` , but among those nine there were at least one in each continent , except for africa , which indicates that the server is chosen based on the location of the broadcaster .",
    "all the hls streams were delivered from only two distinct ip addresses , which ` maxmind.com ` says are located somewhere in europe and in san francisco .",
    "we do not currently know how the video gets embedded into an hls stream for popular broadcasts but we assume that the rtmp stream gets possibly transcoded , repackaged , and delivered to fastly cdn by periscope servers .",
    "the fact that we used a single measurement location explains the difference in server locations observed between the protocols .",
    "as confirmed by analysis in  @xcite , the rtmp server nearest to the broadcasting device is chosen when the broadcast is initialized , while the fastly cdn server is chosen based on the location of the viewing device .",
    "since we had data from two different devices , we performed a number of welch s t - tests in order to understand whether the data sets differ significantly .",
    "only the frame rate differs statistically significantly between the two datasets .",
    "hence , we combine the data in the following analysis of video stalling and latency .",
    "we first look at playback stalling . for rtmp streams , the app reports the number of stall events and the average stall time of an event , while for hls it only reports the number of stall events . the _ stall ratio _ plotted for the rtmp streams in figure  [ fig : stallratio_rtmp_cdf ] is calculated as summed up stall time divided by the total stream duration including stall and playback time .",
    "the bandwidth limit 100 in the figure refers to the unlimited case .",
    "most streams do not stall but there is a notable number of sessions with stall ratio of 0.05 - 0.09 , which corresponds usually to a single stall event that lasts roughly 3 - 5s .",
    "the boxplots in figure  [ fig : stallratio_rtmp_bw ] suggest that a vast majority of the broadcasts are streamed with a bitrate inferior to 2 mbps because with access bandwidth greater than that , the broadcasts exhibited very little stalling . as for the broadcasts streamed using hls , comparing their stall count to that of the rtmp streams indicates that stalling is rarer with hls than with rtmp , which may be caused by hls being an adaptive streaming protocol capable for quality switching on the fly .",
    "the average video bitrate is usually between 200 and 400 kbps ( see section  [ sec : audio_video_quality ] ) , which is much less than the 2 mbps limit we found .",
    "the most likely explanation to this discrepancy is the chat feature .",
    "we measured the phone traffic with and without chat and observed a substantial increase in traffic when the chat was on .",
    "a closer look revealed that the json encoded chat messages are received even when chat is off , but when the chat is on , image downloads from amazon s3 servers appear in the traffic .",
    "the reason is that the app downloads profile pictures of chatting users and displays them next to their messages , which may cause a dramatic increase in the traffic .",
    "for instance , we saw an increase of the aggregate data rate from roughly 500kbps to 3.5mbps in one experiment .",
    "the precise effect on traffic depends on the number of chatting users , their messaging rate , the fraction of them having a profile picture , and the format and resolution of profile pictures .",
    "we also noticed that some pictures were downloaded multiple times , which indicates that the app does not cache them .",
    "each broadcast was watched for exactly 60s from the moment the teleport button was pushed .",
    "we calculate the _ join time _",
    ", often also called startup latency , by subtracting the summed up playback and stall time from 60s and plot it in figure  [ fig : jointime_rtmp_bw ] for the rtmp streams .",
    "in addition , we plot in figure  [ fig : latency_rtmp_bw ] the playback latency , which is equivalent to the end - to - end latency .",
    "the y - axis scale was cut leaving out some outliers that ranged up to 4min in the case of playback latency . both increase when bandwidth is limited . in particular , join time grows dramatically when bandwidth drops to 2mbps and below .",
    "the average playback latency was roughly a few seconds when the bandwidth was not limited .        through experiments where we controlled both the broadcasting and receiving client and captured both devices traffic",
    ", we noticed that the broadcasting client application regularly embeds an ntp timestamp into the video data , which is subsequently received by each viewing client .",
    "the experiments indicated that the ntp timestamps transmitted by the broadcasting device is very close to the tcpdump timestamps in a trace captured by a tethering machine .",
    "hence , the timestamps enable calculating the _ delivery latency _ by subtracting the ntp timestamp value from the time of receiving the packet containing it , also for the hls sessions for which the playback metadata does not include it .",
    "we calculate the average over all the latency samples for each broadcast .",
    "figure [ fig : delivery_latency_ntp ] shows the distribution of the video delivery latency for the sessions that were not bandwidth limited .",
    "even if our packet capturing machine was ntp synchronized , we sometimes observed small negative time differences indicating that the synchronization was imperfect .",
    "nevertheless , the results clearly demonstrate the impact of using hls on the delivery latency .",
    "rtmp stream delivery is very fast happening in less than 300ms for 75% of broadcasts on average , which means that the majority of the few seconds of playback latency with those streams comes from buffering .",
    "in contrast , the delivery latency with hls streams is over 5s on average . as expected",
    ", the delivery latency grows when bandwidth is limited similarly to the playback latency .",
    "a more detailed analysis of the latency can be found in  @xcite .",
    "the delivery latency we observed matches quite well with their delay breakdown results ( end - to - end delay excluding buffering ) .    in summary , hls appears to be a fallback solution to the rtmp stream .",
    "the rtmp servers can push the video data directly to viewers right after receiving it from the broadcasting client .",
    "hls delivery requires the data to be packaged in complete segments , possibly while transcoding it to multiple qualities , and the client application needs to separately request for each video segment , which all adds up to the latency .",
    "hls does produce fewer stall events but we have seen no evidence of the video bitrate being adapted to the available bandwidth ( section [ sec : audio_video_quality ] ) .",
    "it is possible that the buffer sizing strategy causes the difference in the number of stall events between the two protocols but we can not confirm this at the moment .",
    "both rtmp and hls communications employ standard codecs for audio and video , that is , aac ( advanced audio coding ) for audio  @xcite and avc ( advanced video coding ) for video  @xcite . in more details ,",
    "audio is sampled at 44,100 hz , 16 bit , encoded in variable bit rate ( vbr ) mode at about either 32 or 64 kbps , which seems enough to transmit almost any type of audio content ( e.g. , voice , music , etc . ) with the quality expected from capturing through a mobile device .",
    "video resolution is always 320@xmath0568 ( or vice versa depending on orientation ) .",
    "the video frame rate is variable , up to 30 fps .",
    "occasionally , some frames are missing hence concealment must be applied to the decoded video .",
    "this is probably due to the fact that the uploading device had some issues , e.g. , glitches in the real - time encoding or during upload .",
    "[ fig : bitrate ] shows the video bitrate , typically ranging between 200 and 400 kbps .",
    "moreover , there is almost no difference between hls and rtmp except for the maximum bitrate which is higher for rtmp .",
    "analysis of such cases reveals that poor efficiency coding schemes have been used ( e.g. , i - type frames only ) .",
    "the most common segment duration with hls is 3.6 s ( 60% of the cases ) , and it ranges between 3 and 6 s. however , the corresponding bitrate can vary significantly .",
    "in fact , in real applications rate control algorithms try to keep its average close to a given target , but this is often challenging as changes in the video content directly influences how difficult is to achieve such bitrate . to this aim , the so called quantization parameter ( qp ) is dynamically adjusted  @xcite . in short , the qp value determines how many details are discarded during video compression , hence it can be used as a very rough indication of the quality of a given video segment .",
    "note that the higher the qp , the lower the quality and vice versa .    to investigate quality , we extracted the qp and computed its average value for all the videos .",
    "[ fig : qp_vs_bitrate ] shows the qp vs bitrate for each captured video ( the whole video for rtmp and each segment for hls ) .",
    "when the quality ( i.e. , qp value ) is roughly the same , the bitrate varies in a large range . on one hand",
    ", this is an indication that the type of content strongly differ among the streams .",
    "for instance , some of them feature very static content such as one person talking on a static background while others show , e.g. , soccer matches captured from a tv screen . on the other hand ,",
    "observing how the bitrate and average qp values vary over time may provide interesting indications on the evolution of the communication , e.g. , hints about whether representation changes are used .",
    "unfortunately , we are currently unable to draw definitive conclusions since the variation could also be due to significant changes in the video content which should be analyzed in more depth .    finally , we investigated the frame type pattern used for encoding .",
    "most use a repeated ibp scheme .",
    "few encodings ( 20.0 % for rtmp and 18.4% for hls ) only employ i and p frames only ( or just i in 2 cases ) .",
    "after about 36 frames , a new i frame is inserted .",
    "although one b frame inserts a delay equal to the duration of the frame itself , in this case we speculate that the reason they are not present in some streams could be that some old hardware might not support them for encoding .",
    "we connected a samsung galaxy s4 4g+ smartphone to a monsoon power monitor  @xcite in order to measure its power consumption as instructed in  @xcite .",
    "we used the powertool software to record the data measured by the power monitor and to export it for further analysis .",
    "the screen brightness was full in all test cases and the sound was off .",
    "the phone was connected to the internet through non - commercial wifi and lte networks .",
    "figure [ fig : power_measurements ] shows the results .",
    "we measured the idle power draw in the android application menu to be around 900 to 1000 mw both with wifi and lte connections . with the periscope app on without video playback ,",
    "the power draw grows already to 1537 mw with wifi and to 2102 mw with lte because the application refreshes the available videos every 5 seconds .",
    "playing back old recorded videos with the application consume an equal amount of power as playing back live videos .",
    "the power consumption difference of rtmp vs hls is also very small .",
    "interestingly , enabling the chat feature of the periscope videos raises the power consumption to 2742 mw with wifi and up to 3599 mw with lte .",
    "this is only slightly less than when broadcasting from the application .",
    "however , the test broadcasts had no chat displayed on the screen .",
    "we further investigated the impact of the chat feature by monitoring cpu and gpu activity and network traffic .",
    "both processors use dvfs to scale power draw to dynamic workload  @xcite .",
    "we noticed an increase by roughly one third in the average cpu and gpu clock rates when the chat is enabled , which implies higher power draw by both processors .",
    "recall from section  [ sec : stall_latency ] that the chat feature may increase the amount of traffic , especially with streams having an active chat , which inevitably increases the energy consumed by wireless communication .",
    "the energy overhead of chat could be mitigated by caching profile pictures and allowing users to disable their display in the chat .",
    "live mobile streaming is subject to increasing attention , including from the sociological point of view  @xcite . in the technical domain ,",
    "research about live streaming focused on issues such as distribution optimization  @xcite , including scenarios with direct communication among devices  @xcite .",
    "the crowdsourcing of the streaming activity itself also received particular attention  @xcite .",
    "stohr et al . have analyzed the younow service  @xcite and tang et al . investigated the role of human factors in meerkat and periscope  @xcite .",
    "little is known , however , about how such mobile applications perform .",
    "most of the research has focused on systems where the mobile device is only the receiver of the live streaming , like twitch.tv  @xcite , or other mobile vod systems  @xcite .",
    "we believe that this work together with the work of wang et al .",
    "@xcite are the first to provide measurement - based analyses on the anatomy and performance of a popular mobile live streaming application .",
    "wang et al .",
    "thoroughly study the delay and its origins but , similar to us , also show results on usage patterns and video stalling , particularly the impact of buffer size .",
    "they also reveal a particular vulnerability in the service .",
    "we explored the periscope service providing insight on some key performance indicators .",
    "both usage patterns and technical characteristics of the service ( e.g. , delay and bandwidth ) were addressed .",
    "in addition , the impact of using such a service on the mobile devices was studied through the characterization of the energy consumption .",
    "we expect that our findings will contribute to a better understanding of how the challenges of mobile live streaming are being tackled in practice .",
    "this work has been financially supported by the academy of finland , grant numbers 278207 and 297892 , and the nokia center for advanced research .",
    "z.  li , j.  lin , m .-",
    "akodjenou , g.  xie , m.  a. kaafar , y.  jin , and g.  peng .",
    "watching videos from everywhere : a study of the pptv mobile vod system . in _ proc .",
    "of the 2012 acm conf . on internet measurement conference _ , pages 185198 .",
    "acm , 2012 .",
    "t.  lohmar , t.  einarsson , p.  frjdh , f.  gabin , and m.  kampmann .",
    "dynamic adaptive http streaming of live content . in _ world of wireless , mobile and multimedia networks",
    "( wowmom ) , 2011 ieee international symposium on a _ , pages 18 , june 2011 .",
    "d.  stohr , t.  li , s.  wilk , s.  santini , and w.  effelsberg .",
    "an analysis of the younow live streaming platform . in",
    "_ local computer networks conference workshops ( lcn workshops ) , 2015 ieee 40th _ , pages 673679 , oct 2015 .    j.  c. tang , g.  venolia , and k.  m. inkpen .",
    "meerkat and periscope : i stream , you stream , apps stream for live streams . in _ proceedings of the 2016 chi conference on human factors in computing systems",
    "_ , chi 16 , pages 47704780 , new york , ny , usa , 2016 .",
    "acm .          c.  zhang and j.  liu .",
    "on crowdsourced interactive live streaming : a twitch.tv-based measurement study . in _ proceedings of the 25th acm workshop on network and operating systems support for digital audio and video _ , nossdav 15 , pages 5560 , new york , ny , usa , 2015 ."
  ],
  "abstract_text": [
    "<S> live multimedia streaming from mobile devices is rapidly gaining popularity but little is known about the qoe they provide . in this paper </S>",
    "<S> , we examine the periscope service . </S>",
    "<S> we first crawl the service in order to understand its usage patterns . </S>",
    "<S> then , we study the protocols used , the typical quality of experience indicators , such as playback smoothness and latency , video quality , and the energy consumption of the android application .    </S>",
    "<S> = 10000 = 10000 </S>"
  ]
}
{
  "article_text": [
    "large astronomical surveys require novel ways for handling the data they produce .",
    "for example , the ongoing kids and viking surveys will cover 1500 square degree in optical and infra - red wavelengths @xcite and the upcoming euclid mission will cover 20000 square degree @xcite . these surveys will detect billions of galaxies for which hundreds of parameters will be quantified , leading to terabytes of data to explore .    _",
    "data pulling _ mechanisms can be used to achieve the scalability to create catalogs ( @xcite , hereafter paper i ) .",
    "the essence of data pulling is that processing steps necessary to create a catalog are determined by specifying the required target catalog .",
    "the information system will determine how existing catalogs can be used to fulfill the request and will initiate the creation of new catalogs only when no suitable ones exist .",
    "this maximizes reusability of the catalogs and minimizes unnecessary calculations .",
    "this requires full _ data lineage _ , which means that catalogs are stored with all the information required to process them .",
    "_ query driven visualization _ is a methodology to explore large data sets by limiting the processing required for visualization to the subsets of the data deemed `` interesting '' as defined by the user @xcite .",
    "related work focuses on limiting the processing of the visualization itself @xcite , the fast identification and retrieval of data @xcite or on the data representation @xcite .    in this paper , we see query driven visualization as the logical continuation of data pulling in an information system with full data lineage . the main contributions of our work follow from applying this novel viewpoint to source catalogs : ( 1 ) we limit the processing required to create the requested catalog itself , instead of the processing required for the visualization . ( 2 ) we permit requests in a more declarative form than direct database queries would allow .",
    "( 3 ) we allow the user to inspect and influence the processing from within the visualization by exporting the data lineage . ( 4 ) we achieve a high level of abstraction that allows close interoperation between software .",
    "we demonstrate our techniques with our astro - wiseimplementation and by designing new messages for the simple application messaging protocol .",
    "data pulling is an excellent opportunity for query driven visualization .",
    "the autonomous discovery and creation of catalogs permits requests that are very declarative . a scientist can request parameters of sources without having knowledge of whether these parameters have already been calculated or not .",
    "this functionality can be implemented in external software and an example program to pull catalogs is given with the ` simple puller ' of section  [ sec : qdvproto ] .",
    "compare this for example with an sql - based system @xcite : to formulate an sql query it is required to know which tables contain the required parameters , how to identify the relevant rows and columns , and often how to join tables .",
    "this becomes a non - trivial problem when catalogs are shared between multiple users and the number of catalogs and their sizes grow . at a certain stage",
    "it becomes too time consuming and error - prone to find required data by hand , especially when it is unknown whether it exists at all .",
    "an information system with data pulling often has _ persistent objects _ with _ full data lineage _ : each data set is represented as an object  in computer science terminology  that persists between sessions and users . in astro - wisethese objects are called _",
    "process targets_. a process target contains all the information required to create the data it represents from other process targets , its _",
    "dependencies_. this is called _ backward chaining _ and links every data project back to the raw data .",
    "the data lineage can be utilized in query driven visualization by having the visualization software request it .",
    "this allows the visualization software to show this information , either directly or processed in the visualization .",
    "an example of the former is given with the ` tree viewer ' in section  [ sec : qdvproto ] .",
    "furthermore , exporting the data lineage makes it possible for scientists to influence the processing by permitting the visualization software to change processing parameters .",
    "an example of this is given with the ` object viewer ' in section  [ sec : qdvproto ] .",
    "data pulling mechanisms are well suited for abstraction on different levels : firstly , pulling data does not require detailed knowledge of every processing step ; secondly , these processing details themselves can be abstracted , because of the standardized data lineage .",
    "such an abstraction allows query driven visualization to be performed between any visualization package and information system .",
    "the thoroughness of the interoperation will depend on the level of abstraction supported by both applications .",
    "we extended the simple application messaging protocol to facilitate such interoperation by designing new message types ( section  [ sec : samp ] ) .",
    "query driven visualization requires an information system responsible for creation , storage and delivery of the data . we choose to use astro - wisefor this ,",
    "although any information system with data pulling and persistent objects would be suitable , because of the abstraction through samp . in section  [ sec : sampastrowise ]",
    "we describe the details of our astro - wisesamp implementation .",
    "the _ simple application messaging protocol _ ( samp ) is an international virtual observatory alliance ( ivoa ) standard for interoperation between astronomical software .",
    "the idea behind it is akin to the unix - philosophy that tools should do one thing , should do that thing well and communicate with other programs for things they can not do .",
    "we give a short description of samp before discussing our additions .",
    "for details we refer to section  [ sec : sampprotocol ] and to the official documentation .",
    "the protocol uses a client - server model based on application defined messages .",
    "clients register with the samp huband subscribe to certain types of messages .",
    "clients can then send messages to individual clients or to any client that has registered for that kind of message .",
    "the receiving application should subsequently perform the action it has associated with the message .",
    "lastly , the hubwill relay a response back to the sender if necessary .    the expected action that corresponds to a message",
    "is determined by the type of the message .",
    "both default administrative messages and widely accepted application defined messages can be found on the samp wiki . in the rest of this section",
    "we first describe relevant existing messages and subsequently introduce our proposed messages .",
    "we list the type of the messages and a description of the intended action of the receiver .",
    "details of the messages and their parameters are given section  [ sec : sampprotocolmessages ] .",
    "several existing catalog related messages can be used in conjunction with our new messages :    * ` table.load.votable ` : load a table in votable format . *",
    "` table.load.fits ` : load a table in fits format . * ` table.highlight.row ` : highlight a single row of an identified table . * ` table.select.rowlist ` : select a list of rows of an identified table .",
    "exactly what ` highlighting ' or ` selecting ' means is left to the receiving application .",
    "tables have three identifiers in samp : a table - id that is unique within the samp session , a uri where the catalog can be found and a human readable name .",
    "these identifiers are set with one of the ` load ` messages and used as a reference in the other messages .",
    "rows are identified by their position in the table using zero - based indexing .",
    "note that these messages can refer to any tabulated data set . in this paper",
    "we limit ourselves to source catalogs only .",
    "we designed new samp messages to create a system independent way to perform pulling of catalog data .",
    "the messages should be sent from visualization software to the information system handling the data .",
    "the new message types start with ` target . ` ; this is the name that the astro - wiseinformation system uses to describe data objects that can be pulled :    * ` target.catalog.pull ` : pull a catalog and send it over samp using one of the ` table.load . *",
    "` messages .",
    "the result could be an existing catalog or a new catalog created by the pulling mechanisms .",
    "any new data that is necessary to produce the required catalog is created automatically .",
    "this message requires the following parameters , detailed below : an identifier of a catalog to select the sources from , a selection criterion and a list of requested attributes of the sources . * ` target.catalog.derive ` : derive a catalog in the same fashion as with ` target.catalog.pull ` , but do not create any new data or send the catalog data over samp .",
    "support for the ` .pull ` message is the minimum required to request catalog data from the information system .",
    "the ` .derive ` message is useful when it is necessary to inspect or modify the derivation of the catalog  using the messages in section  [ sec : samppersobj]before visualization , for example to determine whether all required data is processed already or whether new data has to be created .",
    "these two messages require three parameters which we should elaborate on ( see also section  [ sec : sampprotocolqdv ] ) :    * ` catalog - id ` : an identifier of the base catalog to select the sources from .",
    "it is left to the information system to inform scientists how to refer to a specific catalog .",
    "the ` catalog - id ` can be a unique identifier of an existing catalog , but could also be a reference to a catalog that does not yet exist , e.g. a photometric catalog for an observation that has not yet been reduced .",
    "it is also possible to designate identifiers for special catalogs , e.g. to denote the latest version of a catalog of an ongoing survey . *",
    "` query ` : a selection criterion to specify which sources of the original catalog are requested .",
    "this should be a logical expression referencing the ` attributes ` below .",
    "the exact specification of this expression is left to the information system .",
    "a logical choice would be the syntax of an ` adql ` ` where ` clause ( without the `` where ` ' itself ) .",
    "* ` attributes ` : a list of requested attributes ( parameters ) of the sources .",
    "it is not required that the catalog corresponding to the ` catalog - id ` contains these attributes .",
    "the data pulling mechanisms of the information system should try to find the requested attributes in related catalogs and should create new data sets if necessary .",
    "how an attribute should be specified , is left to the information system .",
    "several samp message types are defined for interaction with an information system with persistent objects .",
    "these messages allow the visualization software to gain information about the objects and inspect or even influence its processing . the persistent object related messages are :    * ` target.object.highlight ` : highlight an object .",
    "* ` target.object.info ` : return information about an object , see below .",
    "* ` target.object.change ` : change the value of a property of an object such as a process parameter or a dependency . * ` target.object.action ` : perform an action related to an object or property .",
    "possible actions are retrieved using the ` target.object.info ` message .",
    "the ` target.object.highlight ` message can be sent to any application , the others are supposed to be sent to the information system only .    a specific samp map is defined as a return value for the ` target.object.info ` message , containing information about the object and its properties ( see section  [ sec : sampprotocol ] for details ) . for the object itself",
    "it includes information about what properties it has , its processing status and whether the object can be modified .",
    "the properties of an object include process parameters and references to the dependencies of the object .",
    "the returned information about a property include its name , current value and optionally other values it can be set to .",
    "furthermore the information system can define actions that can be performed on the object or its properties .",
    "the new samp messages are implemented in the astro - wiseinformation system and demonstrated by a set of proof - of - concept applications .",
    "we first describe relevant existing samp applications , subsequently the astro - wise  sampconnectivity and end with the applications to demonstrate the new messages .",
    "[ fig : awesamp ] shows a diagram of the interoperability between astro - wise  and several sampapplications .",
    "we list existing samp applications that are relevant to catalog data .    * * samp hub * : the _ hub _ is the center of samp to which the other applications connect . the hub can be a standalone program or can be integrated in one of the clients , e.g. aladin  and topcatinclude one . * * topcat * : _ _ topcat _ _ is a table viewer / manipulator written in java .",
    "the visualization power of topcat  lies in its interactivity .",
    "selections performed in one window propagate to other windows and by the use of samp messages to other applications . * * aladin * : _ _ aladin _ _ is an interactive software sky atlas allowing the user to visualize digitized astronomical images up to 50k by 50k pixels , superimpose entries from astronomical catalogues or databases , and interactively access related data and information online archives for all known sources in the field .",
    "astro - wisehas samp connectivity in the interactive python prompt and on the webservices .",
    "* * awe - prompt * : the astro - wise  awe - promptis an interactive python prompt that forms the primary user interface to astro - wise .",
    "we developed a module for samp connectivity in the awe - promptand other python applications .",
    "all messages from section [ sec : samp ] are supported . * * dbviewer * : with the astro - wise  _ dbviewer _ one can view all content of the database and can send query results over samp .",
    "the dbviewer is beyond the scope of this paper .",
    "a set of proof - of - concept applications has been developed to demonstrate different ways in which samp clients can use the query driven visualization messages .",
    "they interact with the astro - wise  awe - promptthrough samp only and have little knowledge about astro - wise , if at all .    * [ sec : sampsimplepuller ] the _ simple puller _ ( fig .",
    "[ fig : scsimplepuller ] ) represents the most basic way an application can pull catalog data .",
    "its sole capability is to send a ` target.catalog.pull ` message , it can not receive messages .",
    "it requires a minimum amount of input ( section  [ sec : sampprotocolqdv ] ) : * * an identifier of the base catalog from which the sources are selected . *",
    "* a list of required attributes . * * a query to select the sources .",
    "+ the only knowledge the user needs to have about the information system is how these parameters should be specified .",
    "this service could be built into existing visualization tools quickly .",
    "the demo application uses a web - based interface with the server running locally and relies on other samp applications for the actual visualization . *",
    "[ sec : samptreeexplorer ] the _ tree viewer _ ( fig .",
    "[ fig : sctreeexplorer ] ) shows how a samp application can use the ` target.object.info ` message to give the user more information about the data lineage and derivation of a particular dataset .",
    "+ this demo application recognizes several of the classes used in astro - wiseand is able to interpret some of their properties .",
    "the application allows exploration of the dependency graph of a pulled catalog by presenting it as a dot graph . clicking on",
    "a node sends the ` target.object.highlight ` message , allowing interaction with the awe - prompt . * the _ object viewer _",
    "[ fig : scscviewer ] ) demonstrates how an application can use the object related messages ( ` target.object.info ` , ` target.object.change ` and ` target.object.action ` ) to influence the properties of process targets and other objects .",
    "it has knowledge about the astro - wise  source collectionclasses  used to represent astronomical catalogs  and allows many of the actions that can be performed in the awe - prompt  to be done through the web - based gui .",
    "these applications rely on other samp applications for the actual visualization .",
    "for example , topcat is used in fig .",
    "[ fig : qdvtopcat ] to visualize the data requested in fig .",
    "[ fig : scsimplepuller ] .             is shown . ]    .",
    "a slight bimodality between red , concentrated , galaxies and blue , extended galaxies can be seen . ]",
    "the figures depicting the prototype applications show a simple use case of the new message . first the simple puller(fig .",
    "[ fig : scsimplepuller ] ) is used to request absolute magnitudes and the inverse concentration index for the sources in a specific catalog for which a specific logical expression ( @xmath0 ) holds .",
    "catalogs in astro - wisethat can be used for data pulling are called source collectionsand are identified by an integer , in this case 100511 .",
    "other information systems might use different identifiers .",
    "attributes are referred to by their name only in astro - wise .",
    "subsequently the tree viewer(fig .",
    "[ fig : sctreeexplorer ] ) is used to inspect the dependency graph that is proposed to provide the requested catalog .",
    "the source collectionthat is responsible for the selection of the sample is highlighted .",
    "the highlighted object is shown in the object viewer(fig .",
    "[ fig : scscviewer ] ) , where the selection criterion is checked and changed if required .",
    "the dependency graph is stored persistently once the scientist has verified that the proposed is suitable for his or her scientific goals , which can be done from the object vieweras well .",
    "the dependency graph is then optimized automatically before being processed , as described in paper i. the catalog data of the last node in the dependency graph is send to topcatfor visualization ( fig .",
    "[ fig : qdvtopcat ] ) once it has been processed .",
    "this example shows how a relatively simple request can result in a complex dependency graph .",
    "nonetheless , this graph can be navigated and changed quickly due to the new samp messages .",
    "furthermore , the catalogs created to fulfill the request are created such that they are most suitable for reuse for later requests and at the same time processed in such a way that minimizes the required calculations .",
    "newly created catalogs are shared implicitly between collaborating scientists .",
    "therefore , large datasets can be explored quickly with a high level of flexibility , without requiring the scientist to know details of how the information system handles these large datasets .",
    "we give the details about samp that are necessary to describe our proposed messages and present our extensions and their astro - wiseimplementation .",
    "samp is in principle language - agnostic and is based on abstract interfaces .",
    "that is , it specifies which functions the hub and the clients must have in order to send and receive messages , but not the exact protocol that the applications use to call those functions .",
    "the rules which describe how samp functions are mapped to the internally used protocol is described in a samp _",
    "profile_. one standard profile based on xml - rpc is described in the official documentation , and this is what is used in astro - wiseand in the prototype applications .",
    "xml - rpc is a remote procedure call protocol which uses xml to encode its calls and http as a transport mechanism and is platform independent .",
    "only three data types are supported in samp , because it is language- and even communication - protocol - agnostic :    * ` string ` : a scalar value consisting of a sequence of ascii - characters . * ` list ` : an ordered array of data items . * ` map ` : an unordered associative array with a string as key .",
    "other scalar types have to be mapped to strings , and there is a specification to represent integers , floats and booleans as strings .",
    "these data types can be nested to any level : e.g. , it is possible to have a map with lists as values .    [",
    "sec : sampprotocolmessages ] samp applications communicate through messages of specific types .",
    "message types that start with ` samp . `",
    "are administrative messages defined by the protocol , the others are defined by application authors .",
    "clients are supposed to give a general reply with success or failure of a requested operation , even if no response is required .",
    "we designed new samp messages and data structures to enable query driven visualization through data pulling mechanisms .",
    "the ` target.object . * ` messages assume that the information system uses an object oriented model for science products such as catalogs ( section  [ sec : qdvintro ] ) .",
    "the proposed messages are :    * ` target.catalog.derive ` : create a catalogthrough data pulling .",
    "arguments : * * ` catalog - id ` ( string ) : identifier of the catalog to select the sources from . *",
    "* ` query ` ( string ) : selection criterion for the sources . * * ` attributes ` ( list of strings ) : names of the attributes . * ` target.catalog.pull ` : perform the same action as ` target.catalog.derive ` and send the data over samp .",
    "arguments : * * ` catalog - id ` ( string ) : identifier of the catalog to select the sources from . *",
    "* ` query ` ( string ) : selection criterion for the sources . * * ` attributes ` ( list of strings ) : names of the attributes . * ` target.object.highlight ` : highlight an object .",
    "arguments : * * ` class ` ( string ) : class of the object . *",
    "* ` object - id ` ( string ) : identifier of the object .",
    "* ` target.object.info ` : returns a samp map with information about an objectas described below .",
    "arguments : * * ` class ` ( string ) : class of the object . *",
    "* ` object - id ` ( string ) : identifier of the object . * ` target.object.change ` : change a property of an object",
    ". arguments : * * ` class ` ( string ) : class of the object . *",
    "* ` object - id ` ( string ) : identifier of the object . * * ` property - id ` ( string ) : identifier of a property of the object . *",
    "* ` value ` ( string ) : new value of the property . * ` target.object.action ` : perform an action related to a an object .",
    "arguments : * * ` class ` ( string ) : class of the object . *",
    "* ` object - id ` ( string ) : identifier of the object . * * ` property - id ` ( string , optional ) : identifier of a property of the object . * * ` action - id ` ( string ) : identifier of the action .",
    "samp data structures are defined to send information about objects between applications .",
    "the structures are designed generic enough that they could be used for any information system .",
    "information about an object itself , such as the response to an ` target.object.info ` message , is communicated through a map with the following keys :    * ` class ` ( string ) : the class of the object .",
    "a client that has knowledge about the used classes could handle known classes in a special way . *",
    "` i d ` ( string ) : identifier this object , unique in combination with the class . * ` status ` ( string ) : indication the processing status of this object ( see below ) .",
    "* ` properties ` ( list of maps ) : properties of this object ( see below ) .",
    "* ` actions ` ( list of maps ) : actions that can be performed on this object ( see below ) . * ` readonly ` ( boolean ) : flag to indicate that the object can not be modified .",
    "properties of an object , for example process parameters , are described with a map with the following keys :    * ` name ` ( string ) : name of the property , as used by the object .",
    "* ` class ` ( string ) : the class that the value of the property should have , or a primitive such as ` int ' . * ` description ` ( string ) : a human readable description of the property . * ` value ` ( string ) : the used value for the property .",
    "this is the ` i d ` of the object if the property refers to another object . *",
    "` options ` ( list of maps ) : possible values for the property , if applicable . * ` actions ` ( list of maps ) : actions that can be performed on the property . * ` readonly ` ( boolean ) : flag to indicate that the property can not be modified .",
    "an action that can be performed on an object or property is defined by a map with the following keys :    * ` i d ` ( string ) : a unique identifier for this action . *",
    "` name ` ( string ) : a human presentable name for this action .",
    "the status value of an object refers to the processing status of the object",
    ". it can have the following values :    * ` ok ` : the object has been processed , or can be processed while retrieving the result . * ` automatic ` : the object has to be processed before it can be retrieved .",
    "this can be done without user interaction . * ` new ` : this is a non persistent object , which can be processed without user interaction . *",
    "` depends ` : this is a new object , which can be processed only after human intervention .",
    "for example , to set a process parameter that has no proper default .",
    "* ` not ` : as it is , this object can not be processed , e.g. because a dependency can not be fulfilled",
    ". the scientist might be able to solve the problem , but whether this is the case is not clear to the information system .",
    "* ` unknown ` : the status is unknown .",
    "the astro - wise  awe - promptis an interactive python prompt that forms the primary user interface to astro - wise .",
    "we developed a python module for astro - wiseto use samp from the awe - prompt .",
    "this allows an astronomer to combine the large scale data handling from astro - wise  with the visualizations from other sampapplications .",
    "this section is most interesting for readers already familiar with astro - wise .",
    "all relevant terms are introduced briefly for readers new to astro - wise .",
    "the samp - related functionality that is not query driven visualization specific , is included as well for completeness .",
    "the samp module is split up in two classes , a stand - alone python samp client and a derived class with astro - wisespecific functionality :    * * sampproxy * : an instance of the _ sampproxy _ class is a basic samp client .",
    "this class contains all samp code that is not astro - wisespecific , and can therefore be used by other python applications as well . * * samp * : the _ samp _ class is derived from sampproxy and contains all astro - wisespecific code .",
    "the metadata that the class declares to the hub as stored in its ` metadata ` property is : + .... author.email              buddel@astro.rug.nl author.name               hugo buddelmeijer home.page                 http://www.astro-wise.org author.affiliation             kapteyn astronomical institute , groningen samp.name                 astro - wise samp.description.html     < p >",
    "astro - wise</p > samp.documentation.url    http://www.astro-wise.org samp.icon.url                  http://www.astro-wise.org/pics/logo-samp-astrowise.png samp.description.text     astro - wise .",
    "....      all astro - wiseobjects that represent catalog or image data can be send over samp , using the ` table.load.votable ` and ` image.load.fits ` messages respectively .",
    "source catalogs that can be used for data pulling are called _ source collections _",
    "( paper i ) .",
    "there are different source collection classes , depending on the operation used to create the catalog .",
    "for example , an _ attribute calculator _",
    "source collection is used to calculate new attributes ( parameters ) of sources .",
    "other catalog related astro - wiseclasses that can be send over samp are : the _ sourcelist _ which is primarily used to derive parameters directly from images , the non - persistent _ tableconverter _ to manipulate tabular data in python and the _ photsrccatalog _ used for photometric calibration .    image data in astro - wiseis handled by various _ frame _ classes these are beyond the scope of this paper , because its focus is on catalog data .",
    "the samp client supports sending and receiving of both the ` table.highlight.row ` and ` table.select.rowlist ` messages .",
    "sources can be highlighted either by their samp row i d , or through their astro - wiseidentifiers .",
    "a sourcelist has a ` slid ` as identifier , and sources in a sourcelist are labeled with a ` sid ` .",
    "the ` slid`-`sid ` combination uniquely identifies a source .",
    "a source collection has a ` scid ` as identifier and can contain sources from multiple sourcelists",
    ".      only source collection ( paper i ) instances can currently be exported over samp through the ` target.object.info ` message type .",
    "the following properties are send as a reply to such a message :    * all persistent properties that do not relate to data caching .",
    "references to other astro - wiseobjects are exported as the unique identifier of the object .",
    "* process parameters of attribute calculators ( paper i ) are exported as if they are regular properties . *",
    "the names of the attributes are exported as the ` attribute|%i ` properties , where the ` % i ` are consecutive integers .",
    "the ` scid`s of the source collections that the attributes originate from are exported as the ` origin|%i ` properties .",
    "the actions that can be performed on source collectionsare :    * ` commit ` : commits a transient source collection . * ` copy ` : creates a copy of a source collection . * ` make ` : process the source collection .",
    "the exact composition of sources and values of the attributes are determined .",
    "* ` send ` : broadcasts the catalog data corresponding to a source collectionover samp .",
    "only the ` attribute|%i ` properties have an action :    * ` search ` : search for source collectionsthat could be used as a dependency to provide the attribute .",
    "these will be listed in the ` options ` of the property .",
    "the query driven visualization messages from section  [ sec : sampprotocolmessages ] are supported , but only with respect to source collections .",
    "the actual data pulling is performed with the non - persistent _ source collection tree _ class .",
    "the parameters of the messages are interpreted as follows :    * ` catalog - id ` : the ` scid ` of a source collection . * ` query ` : an oracle sql ` where ` clause , with attributes in double quotes . * ` attributes ` : a list of attribute names . * ` class ` : the name of an astro - wiseclass .",
    "only source collection classes are supported at the moment .",
    "* ` object - id ` : the ` scid ` of a source collection . * ` property - id ` : the name of a property",
    ". these are either persistent properties as stored in the database , or transient properties that are derived on the fly . * ` action - id ` : the identifier of an action that can be performed on an object or property , as defined by the instance itself .",
    "the query driven visualization messages are handled as follows :    * ` target.catalog.derive ` : the ` derive ( ) ` of a source collection tree instance is called to derive a new source collection from the specified one . * ` target.catalog.pull ` : performs the same action as ` target.catalog.derive ` after which the resulting source collection is processed and broadcasted . * ` target.object.highlight ` : stores a reference to the highlighted source collection as a member of the samp instance .",
    "* ` target.object.info ` : returns information about a source collection .",
    "* ` target.object.change ` : change a property of a source collection , either directly by the samp instance , or by the object itself . * ` target.object.action ` : perform an action related to a source collection , either directly by the samp instance or by the object itself .",
    "in this paper we see query driven visualization as an extension of data pulling , with a focus on catalog data .",
    "this allows scientists to discover existing datasets and create new datasets by requesting data directly from within the visualization .",
    "new datasets are automatically created in such a way that they are most suitable for reuse in future requests , preventing duplications of data .",
    "the subsequent processing of the datasets is limited to those parts that are necessary to create the data for the requested visualization , achieving implicit scalability .    requesting existing data and creating new data is done through the same process , because data is found and processed automatically .",
    "the same mechanisms ensure that scientists have control over the methods and parameters that are used to process their data , achieving flexibility .",
    "this allows a high level of abstraction in the interoperation between software , because requests for data can be done in a conceptual way .",
    "the simple application messaging protocol is an excellent mechanism to provide such a layer abstraction and we proposed new message types to perform query driven visualization .",
    "support for these messages is implemented within astro - wiseand several prototype applications .",
    "query driven visualization allows scientists to interact with their data in a conceptual way and allows them to focus on _ what _ they want to do with the data , because _ how _ the processing is performed and _ where _ the data is stored is implicitly taken care of .",
    "current wide field surveys such as kids will produces such large datasets that this automation of administration and implicit scalability is essential",
    ". therefore , query driven data visualization is not only a bright possible future , but perhaps even an inevitable one .",
    "arnaboldi  m. , neeser  m.  j. , parker  l.  c. , rosati  p. , lombardi  m. , dietrich  j.  p. , hummel  w. ( 2007 ) eso public surveys with the vst and vista .",
    "the messenger 127:28 bethel  e. , campbell  s. , dart  e. , stockinger  k. , wu  k. ( 2006 ) accelerating network traffic analytics using query - driven visualization . in : visual analytics science and technology",
    ", 2006 ieee symposium on , pp 115122 buddelmeijer  h. , boxhoorn  d. , valentijn  e.  a. ( 2011 ) : automatic optimized discovery , creation and processing of astronomical catalogs . in prep .",
    "( paper i ) codd  e.  f. ( 1970 ) a relational model of data for large shared data banks .",
    "commun acm 13:377387 laureijs  r. ( 2009 ) euclid assessment study report for the esa cosmic visions .",
    "smith  g. , czerwinski  m. , meyers  b. , robertson  g. , tan  d. ( 2006 ) facetmap : a scalable search and browse visualization .",
    "visualization and computer graphics , ieee transactions on 12(5):797804 stockinger  k. , shalf  j. , wu  k. , bethel  e.  w. ( 2005 ) query - driven visualization of large data sets .",
    "visualization conference , ieee 0:22 stockinger  k. , bethel  e.  w. , campbell  s. , dart  e. , wu  k. ( 2006 ) detecting distributed scans using high - performance query - driven visualization . in : proceedings of the 2006 acm / ieee conference on supercomputing , acm , new york , ny , usa , sc 06"
  ],
  "abstract_text": [
    "<S> interactive visualization of astronomical catalogs requires novel techniques due to the huge volumes and complex structure of the data produced by existing and upcoming astronomical surveys . </S>",
    "<S> the creation as well as the disclosure of the catalogs can be handled by data pulling mechanisms @xcite . </S>",
    "<S> these prevent unnecessary processing and facilitate data sharing by having users request the desired end products .    in this work we present query driven visualization as a logical continuation of data pulling . </S>",
    "<S> scientists can request catalogs in a declarative way and set process parameters directly from within the visualization . </S>",
    "<S> this results in profound interoperation between software with a high level of abstraction .    </S>",
    "<S> new messages for the simple application messaging protocol are proposed to achieve this abstraction . </S>",
    "<S> support for these messages are implemented in the astro - wiseinformation system and in a set of demonstrational applications . </S>"
  ]
}
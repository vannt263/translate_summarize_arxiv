{
  "article_text": [
    "a stochastic process @xmath1 on a filtered probability space @xmath2 is an it@xmath3 process if it satisfies the following stochastic differential equation ( sde ) : [ sde ] where @xmath4 is a standard wiener process , the drift function @xmath5 and the volatility function @xmath6 are borel measurable and locally bounded . in addition",
    ", we assume @xmath7 and @xmath8 are under linear growth and locally lipschits conditions : |f(x , t)-f(y , t)|+|g(x , t)-g(y , t)|d|x - y|  , x , y^   and   t|f(x , t)|+|g(x , t)|c(1+|x| ) these conditions imply equation has a unique t - continuous solution adapted to filtration @xmath9 generated by the wiener process @xmath10 ( see @xcite , @xcite , @xcite ) and e[_0^t|x(s)|^2ds]<. also for simplicity @xmath11 is considered a non - random real number .",
    "in the general case it@xmath3 process @xmath12 depends on the history of wiener path , @xmath13 } $ ] where @xmath14}=\\lbrace w_{s}:0\\leq s\\leq t \\rbrace$ ] , in the special case that @xmath15 depends only on @xmath16 ( i.e,@xmath0 ) , it is called a path - independent solution of equation . under some additional conditions for drift and volatility functions ,",
    "if we have @xmath17 equation has a unique path - independent solution @xcite .",
    "stochastic differential equations ( sdes ) play a key role in modeling of phenomena that arise in vast variety of application areas including including finance @xcite , biology @xcite , chemistry @xcite and physics@xcite . due to the fact that finding the analytical solution of sdes is not easy , except for some special cases ,",
    "the numerical simulation methods has become a favorite topic in the study of sdes and devoted a lot of attention of researchers in recent years . at the present time",
    "several numerical methods such as _ eulermaruyama _ ( e.m . ) , _ milstein _",
    "@xcite , chain rule @xcite and also stochastic runge - kutta methods@xcite has been proposed .    in this paper",
    ", we propose an orthogonal basis expansion method for solving sdes with path - independent solutions .",
    "the orthogonal basis expansion method is one of the most popular topics in functional analysis and widely implemented for solving partial differential equations , ordinary differential equations , and integral equations .    for this purpose , we define a hilbert space appropriately and assume that path - independent solution of equation belongs to this space .",
    "then we construct an orthogonal basis for this inner product space .",
    "afterward , we consider @xmath1 in the form of orthogonal basis expansion . finally , for finding the coefficients of this expansion , we reduce to a system of nonlinear integro - differential equations . the properties of this represented method are similar to wiener chaos expansion method ( wce ) that is also referred to hermite polynomial chaos expansion .",
    "( see , e.g. @xcite , @xcite , @xcite and the references therein ) .",
    "there is a fundamental different between these two methods in basis construction .",
    "introduced basis in wce method is multi - variable hermite polynomials of the gaussian random process that have been generated by tensor product but in this new method , we represent 2-dimensional hermite polynomials .",
    "this paper is organized as follows . in section 2 ,",
    "we outline the theoretical foundation of stochastic hermite polynomials as a basis and their properties .",
    "section 3 constructs orthogonal basis expansion for functions of wiener stochastic process and describes the general procedure by applying orthogonal basis expansion method .",
    "in addition , we find basic stochastic indicators of the solution such as expectation and variance . in section 4 ,",
    "numerical solution of some particular and well - known types of sdes based on orthogonal basis expansion method is considered .",
    "examples are surveyed and their exact solutions with both these solutions and other stochastic numerical simulation like predictor - corrector @xmath18 ( e.m . ) and @xmath19 method are compared . finally , a brief conclusion is stated in section 5 .",
    "consider the space of square integrable functions with the time - dependent gaussian measure @xmath20 : ^2(,)=\\ { f(x , t);_0^t_-^f(x ,",
    "t)^2_t(dx dt ) < , } where [ measure ] _",
    "t(dx dt)=(x , t)dx",
    "dt= e^dx dt . furthermore , the inner product and norm of this hilbert space are defined as usual : f , g__t=_0^t_-^f(x , t)g(x , t)_t(dx dt ) = e__t[f(x , t)g(x , t ) ] , f _ _",
    "t = f , f__t=_0^t_-^f^2(x , t)_t(dx dt ) = e__t[f^2(x , t ) ] .",
    "consider the hermite polynomials [ h ] h_n(x)&=e^(e^ )  ,  ( n = 0 , 1 , ) .",
    "the @xmath21-th order monic hermite polynomials are reached by substituting @xmath22 in : [ hermite ] |h_n(x , t ) = ( -t)^ne^(e^)=t^h_n ( ) . in @xmath23dimensional ,",
    "@xmath21-th order hermite polynomials ( @xcite and @xcite ) are defined as follows : [ hermite ] _",
    "n(x , t ) = e^(e^ ) , where @xmath24 , \\rho)$ ] and it can be observed that , @xmath25    the _ monic hermite polynomials _ @xmath26 are generated by a three - term recursion relationship :    @xmath27    from , we can get a similar recursion relationship of the @xmath23 dimensional hermite polynomials : @xmath28 for initial condition @xmath29 , we have : [ 2 ] _",
    "n+1(x,0)=_n(x,0 )  or  _ n(x,0)=. therefore , considering , for @xmath30 $ ] , it is concluded that [ hh ] _",
    "n(x , t)=|h_n(x , t)= thus , using recursion formula , some of these hermite polynomials compute as follows : _ 0(x , t)=1  ,  _ 1(x , t)=x  ,   _ 2(x ,",
    "3(x , t)=-  ,   _ 4(x , t)=-+ .",
    "since the classical hermite polynomials of standard gaussian random variables @xmath31 are orthogonal , we have : & _ -^h_n(x)h_m(x)e^dx = _ -^h_n()h_m()e^dx + & = _ -^|h_n(x , t)|h_m(x , t)_t(dx ) = _ -^_n(x , t)_m(x , t)_t(dx)=n",
    "! _ mn . thus , the sequence @xmath32 , with respect to the weight function @xmath33 , is an orthogonal set in @xmath34 , \\rho)$ ] : [ horthogonal ] e__t[_n(x , t)_m(x ,",
    "t)]=_-^ _ n(x , t)_m(x , t)_t(dx)=_mn . similar to the other orthogonal polynomials , 2-d hermite polynomials enjoy a generating function @xcite : @xmath35 the generating function is a crucial tool for studying the stochastic hermite polynomials properties .",
    "we will utilize it frequently in our later derivations and results .",
    "if we replace @xmath36 with the wiener process @xmath37 , this stochastic process is named _ exponential martingale _",
    "applying @xmath38 s formula on this process , we obtain the following sde : [ z ] substituting @xmath39 for the exponential martingale @xmath40 in , we can infer the following theorem @xcite that is well - known as the stochastic calculus with the stochastic hermite polynomials .",
    "+    let @xmath4 be a wiener process and @xmath41 be the @xmath42 order stochastic hermite polynomial in terms of @xmath4 .",
    "for each @xmath43 and @xmath44 , we have : [ dhn ] d_n+1(w_t , t)=_n(w_t , t)dw_t .",
    "this theorem implies that the stochastic hermite polynomials @xmath41 with respect to the filtration @xmath45 and measure @xmath46 are martingale processes .",
    "+ according to @xcite , for a given positive weight function @xmath47 defined in time interval @xmath48 , there exists a unique family of monic orthogonal polynomials @xmath49 as basis of @xmath50 generated by a three - term recursion relationship such that : @xmath51 the sequence @xmath52 with respect to the weight function @xmath33 is also an orthogonal set on the space @xmath53 , \\rho).$ ] for each @xmath54 , we possess : & _ 0^t_-^(_r , m(t)_m(x , t))(_s , n(t)_n(x , t))(x , t ) dx dt= + & _ 0^t(_r , m(t)_s , n(t))(_-^_m(x , t)_n(x , t)(x , t ) dx ) dt= + & _ 0^t(_r , m(t)_s , n(t))(_mn)dt=. since the linear span of polynomials @xmath55 for @xmath56 are dense in @xmath34 , \\rho)$ ] , in order to indicate that @xmath57 is also an orthogonal basis , it would be enough to demonstrate all these polynomials can be generated by them .",
    "each polynomial in terms of variables @xmath58 and @xmath36 can be generated by the orthogonal set @xmath57 .    * proof * : for each polynomial set @xmath59 , proof is done by induction on @xmath60 . for @xmath61 , since @xmath62 , we have : t^n=_i=0^a_i,0_i,0(t)_0(x , t ) .",
    "similarly , for @xmath63 , since @xmath64 , we have : t^n x = _ i=0^a_i,1_i,1_1(x , t ) .",
    "assume for @xmath65 we have : t^n x^m = _ i=0^_k=0^ma_i , m_i , k(t)_k(x , t ) .",
    "we must show that the same formula is true for @xmath66 : t^n x^m+1 = t^n x^m x = ( _ i=0^_k=0^ma_i , k_i , k(t)_k(x , t))_1(x , t ) . on the other hand , using recursive equality , we get : ( k)_1(x , t)_k(x , t ) = ( k+1 ) _",
    "k+1(x , t)+t _ k-1(x , t ) .",
    "afterward , we have : t^n x^m+1 = _ i=0^_k=0^m((k+1)a_i , k_i , k(t))_k+1(x , t)+ _ i=0^_k=0^m(t",
    "a_i , k_i , k(t))_k-1(x , t ) .",
    "but since @xmath67 and @xmath68 , the following equality is obtained : t^n x^m+1 = _ i=0^_k=0^m+1b_i , k_i , k(t)_k(x , t ) , and consequently the proof is completed by induction .",
    "@xmath69 + because @xmath57 is an orthogonal basis in @xmath53 , \\rho)$ ] , therefore for any @xmath70 that belongs to this space we have : @xmath71.\\end{aligned}\\ ] ]    defining @xmath72 and applying , we obtain : @xmath73.\\end{aligned}\\ ] ]    consequently , the definition of @xmath74 and _ parseval s equality _ lead to calculating the expectation and variance of the stochastic process @xmath75 in each point of time interval @xmath76 $ ] by corresponding expansion coefficients : [ evar ] e__t[f(x , t)]=f_0(t )  ,  e__t[f^2(x , t)]=_n=0^f_n^2(t ) .",
    "in this section , we consider the general form of the stochastic differential equation : [ sdes ] where the drift and the diffusion coefficients @xmath7 and @xmath8 belong to @xmath77 ) $ ] and @xmath78)$ ] , respectively . according to the , stochastic process @xmath1 yields in the following expansion : [ xfg ] x_t = x(w_t , t)=_i=0^a_i(t)_i(w_t , t )  ,  a_i(t)=e__t[x_t._i(x , t ) ] .",
    "for each two it@xmath3 process @xmath79 , \\rho)$ ] , we have the following equality named it@xmath3 product formula : d(x_ty_t)=y_tdx_t+x_tdy_t+dx_tdy_t .",
    "now as the first step to find the unknown coefficients @xmath80 , we apply it@xmath3 product formula for equations and . &",
    "d(x_t_n(w_t , t))=x_td_n(w_t , t)+_n(w_t , t)dx_t+dx_td_n(w_t , t ) + & = ( _ n(w_t , t)f(x_t , t)+_n-1(w_t , t)g(x_t , t))dt+(_n(w_t , t)g(x_t , t)+x_t_n-1(w_t , t))dw_t .",
    "rewriting this equation in integral form and taking expectation , we infer the following equation : e_[x_t_n(w_t , t)]=x_0_0n+e_(_0^t[_n(w_s , s)f(x_s , s)]+[_n-1(w_s , s)g(x_s , s)]ds ) . as a matter of fact , since @xmath81 is an @xmath38 integral and also a martingale process , its expectation is equal to zero .",
    "afterward , employing the fubini s theorem which allows the order of integration to be changed in iterated integrals we have ; a_n(t)=x_0_0n+_0^t(e_[_n(w_s , s)f(x_s , s)]+e_[_n-1(w_s , s)g(x_s , s)])ds thereby , considering eq . and taking derivation , we reach a system of integro - differential equations : [ f ] a_n(t)+a_n^(t)=(e_[_n(w_t , t)f(x_t , t)]+e_[_n-1(w_t , t)g(x_t , t ) ] ) and so : [ final ] a_n^(t ) = ( e__t[_n(x , t)f(x(x , t),t)]+e__t[_n-1(x , t)g(x(x , t),t)])-a_n(t ) for solving this system of equations , we need to extract coefficients @xmath82,(@xmath83 ) as initial conditions . for @xmath84 , we get @xmath85\\big)ds$ ] , and therefore @xmath86 . for @xmath87 , since @xmath88 is continuous we have : a_n(0)= lim_t0(_0^t(e__t[_n(x , s)f(x(x , s),s)]+e__t[_n-1(x , s)g(x(x , s),s)])ds ) applying _ lhopital s rule _ into computing function limits , @xmath89 can be calculated as below : [ lopital ] a_n(0)=lim_t0(e__t[_n(x , t)f((x , t),t)]+e__t[_n-1(x , t)g((x , t),t ) ] ) .",
    "so that according to the euler approximation method @xmath90 has been put in place of @xmath1 .",
    "afterwards , we consider a finite dimensional case of this system of integro - differential equations to compute truncation form of @xmath1 as follows : x_n(w_t , t)=_n=0^na_n(t)_n(w_t , t ) .",
    "after discretization of the time interval with @xmath91 , where @xmath92 , the subsequence equality is achieved as a_n^(t_i ) = ( e__t_i[_n(x , t_i)f(x_n(x , t_i),t_i)]+e__t_i[_n-1(x , t_i)g(x_n(x , t_i),t_i)])-a_n(t_i ) . but",
    "due to the singularity of the right side of this system of integro - differential equations in @xmath93 , we can not perform rung - kutta method from @xmath94 . to find a significant approximation of @xmath95 and in order to overcome the singularity in @xmath29 , we use the euler method .",
    "substituting @xmath96 for @xmath97 , the preceding equation converts to a system of integro - differential equations : a_n(h ) = ( ( e__h[_n(x , h)f(x(x , t_h),h)]+e__h[_n-1(x , h)g(x(x , t_h),h)])+a_n(0 ) ) . the numerical solution of final system , can be done with various one step methods as euler and rung- kutta of different orders@xcite . in this paper ,",
    "the numerical solution is computed based on second - order rung - kutta method .",
    "* example 1 * consider the * geometric brownian motion * ( gbm ) model where @xmath98 and @xmath99 are the time dependent and constant parameter , respectively . from the system of equations , we obtain the following equations : a_n^(t)&= ( e__t[_n(x , t)(t)x(x , t)]+e__t[_n-1(x , t)x(x , t)])-a_n(t ) + & = ( t)a_n(t)+a_n-1(t)-a_n(t)= ( ( t)-)a_n(t)+a_n-1(t ) .",
    "it can be verified that @xmath100 is the explicit solution of this system .",
    "therefore , x_t&=_n=0^^ne^_0^t_t(s)ds _ n(w_s , s)=e^_0^t_t(s)ds_n=0^^n_n(w_s , s ) . from",
    ", we have @xmath101 , and finally the exact solution of the stock pricing model equation is : @xmath102 in a particular case @xmath103 the obtained solution is the exponential martingale process .",
    "+    llllllll & & & n=30 & & & n=40 & + & t & em & pm & exact & em & pm&exact + & 3 & 8.276397 & 4.575074 & 4.301673 & 13.521179 & 7.813891 & 7.848716 + & 2 & 1.410893 & 0.832558 & 0.855598 & 2.129019 & 1.35756 & 1.363187 + & 1.5 & 1.850382 & 1.201318 & 1.192680 & 1.0618345 & 0.762551 & 0.765961 + & 1 & 0.5971905 & 0.462382 & 0.465634 & 0.8095762 & 0.637728 & 0.638863 +    [ cols=\"^,^ \" , ]",
    "in this article , we introduced an orthogonal basis expansion method to solve stochastic differential equations with a pathindependent solution . for a truncated form of the solution ,",
    "the equation reached a closed nonlinear system of deterministic integro - differential equations for the related coefficients .",
    "the orthogonal basis expansion method provided careful analytical formulas for computing statistical moments such as mean and variance , which in this paper even the statistical moments up to the fourth order , was found . in the numerical experiments with stochastic equations , we compared the solution accuracy and the computational effectiveness of the orthogonal basis expansion and other stochastic numerical methods like the monte carlo ( mc ) , e.m . and milstein method .",
    "00 b. k. @xmath104ksendal : stochastic differential equations : an introduction with applications , 4th ed . , springer , ( 1995 ) ."
  ],
  "abstract_text": [
    "<S> in this article , we present an orthogonal basis expansion method for solving stochastic differential equations with a path - independent solution of the form @xmath0 . for this purpose </S>",
    "<S> , we define a hilbert space and construct an orthogonal basis for this inner product space with the aid of 2d - hermite polynomials . with considering @xmath1 as orthogonal basis expansion , this method is implemented and the expansion coefficients are obtained by solving a system of nonlinear integro - differential equations . </S>",
    "<S> the strength of such a method is that expectation and variance of the solution is computed by these coefficients directly . </S>",
    "<S> eventually , numerical results demonstrate its validity and efficiency in comparison with other numerical methods .    </S>",
    "<S> stochastic differential equation , 2-d hermite polynomials , orthogonal basis expansion 65l60 , 34b16 </S>"
  ]
}
{
  "article_text": [
    "in this subsection we consider a conceptual model of a ( not necessarily bi - quadratic or cooperative ) boolean network with periodic orbits of length @xmath42 , for arbitrary @xmath43 .",
    "we also discuss the problems that are involved in constructing such a network under the restrictions of theorem  [ theorem counterexample ] .",
    "consider the states @xmath44 , and the system defined by    @xmath45    one can think of @xmath46 on a conceptual level as a turing machine operating on variables numbered @xmath47 whose values are written on a circular tape .",
    "the variable @xmath48 can have one of two possible values for every @xmath9 , namely @xmath49 , and @xmath50 , and the function @xmath46 is defined by    @xmath51    thus while @xmath52 , iterating this machine will cyclically rotate the values of @xmath53 .",
    "whenever @xmath50 , the machine also will rotate the variable values , but it will invert them at the site @xmath54 .    now let us define the value of the variable @xmath48 , in such a way that this machine behaves like a counter in base two .",
    "let us require that at the times @xmath55 , @xmath56 .",
    "for all other times @xmath9 , define    @xmath57    thus the model turns into mode exactly at the times @xmath58 , and it only returns back to mode after @xmath59 for some @xmath60 .",
    "the following lemma shows in what way this machine is a counter : if the states of the system encode numbers in binary format appropriately , then @xmath61 iterations are equivalent to the addition of one unit modulo @xmath42 .",
    "[ lemma simple count ] given any state @xmath32 of the model , define @xmath62 . then @xmath63 mod @xmath42 .",
    "* proof : * consider an initial state @xmath64 and let @xmath65 be such that @xmath66 , for @xmath67 , and @xmath68 .",
    "note that @xmath69 in this case .",
    "we have @xmath70 by the definition above ( [ simple mode ] ) . by ( [ simple cycle ] ) , @xmath71 for @xmath72 , @xmath73 .",
    "therefore @xmath74 , for @xmath75 , and @xmath76 . at time @xmath77",
    ", the variable values have completed a full rotation and returned to their starting points , except that @xmath78 for @xmath75 , @xmath79 , and @xmath80 are unchanged .",
    "clearly @xmath63 in this case",
    ".    it remains to show the result for the case @xmath81 , i.e.   @xmath82 , for every @xmath83 . in that case @xmath84 by ( [ simple cycle ] ) and ( [ simple mode ] ) . in this way every value of the system is inverted at @xmath85 from 1 to 0 , so that @xmath86 for @xmath87 . therefore @xmath88 mod @xmath42 .",
    "@xmath89    [ corollary simple count ] the network given by equations ( [ simple cycle ] ) , ( [ simple function ] ) , ( [ simple mode ] ) , contains a periodic cycle of length at least @xmath42 .",
    "* proof : * since the variable @xmath48 is reset to @xmath90 for @xmath58 , lemma  [ lemma simple count ] applies at each of these time points . therefore one can start with @xmath91 , and apply lemma  [ lemma simple count ] successively to reach states @xmath92 @xmath93 , which are all different from each other .",
    "importantly , the function @xmath46 negates the values of the input @xmath94 in switching mode .",
    "this appears to be an essential non - monotonic component ( or negative feedback ) of this system .",
    "nevertheless , it is shown below that in fact one can rewrite our system in such a way that the resulting system is cooperative .      before proceeding with the proof of the main result ,",
    "consider the following generalization of the simple counter above . instead of individual boolean values , each variable @xmath95",
    "is now considered to be a vector with @xmath96 boolean entries , @xmath97 .",
    "we will treat @xmath95 as a binary code for a nonnegative integer @xmath98 . at each time",
    "@xmath9 , the system continues to be in one of two modes @xmath56 or @xmath52 , but the function @xmath46 is now replaced with a vector function @xmath99 which we describe in the next paragraph .",
    "as before , when @xmath49 we let @xmath100 .",
    "when @xmath50 , and given @xmath101 , let @xmath102 be such that @xmath103 for @xmath104 , @xmath105 .",
    "define @xmath106 by letting @xmath107 for @xmath108 , letting @xmath109 , and @xmath110 for @xmath111 .",
    "set @xmath112 .",
    "if @xmath113 , set @xmath114 . in other words ,",
    "the function @xmath115 is defined as the addition of 1 to the vector @xmath94 , in base 2 and modulo  @xmath116 .",
    "we define the generalized system    @xmath117    where @xmath99 is defined as above .",
    "the variable @xmath118 has the value @xmath90 for @xmath58 and for other values of @xmath9 :    @xmath119    [ lemma vector ] the network defined by equations ( [ vector cycle ] ) , ( [ vector mode ] ) contains a periodic cycle of length at least @xmath120 .    *",
    "proof : * for @xmath121 , define @xmath122 .",
    "note that @xmath123 mod @xmath116 .",
    "we follow an argument very analogous to lemma  [ lemma simple count ] and corollary  [ corollary simple count ] .",
    "let @xmath124 .",
    "thus the vector @xmath125 can be regarded as the representation of @xmath126 in base @xmath116 .    as in the proof of lemma  [ lemma simple count ] ,",
    "consider an initial state @xmath64 , and let @xmath65 be such that @xmath127 , for @xmath67 , and @xmath128 . as before , we have @xmath74 for @xmath129 , and @xmath76 .",
    "at time @xmath77 we have @xmath130 for @xmath75 , as well as @xmath131 , and @xmath132 are unchanged from @xmath133 . clearly @xmath63 .    in the case that @xmath134 for every @xmath83",
    ", it follows as before that @xmath135 .",
    "therefore @xmath136 for @xmath87 , and @xmath137 .    repeating this process for @xmath138 and @xmath139 as in corollary  [ corollary simple count ]",
    ", one finds states @xmath32 of the system such that @xmath140 , and which are therefore pairwise different .",
    "when @xmath141 for all @xmath142 , that is , when @xmath143 , this process reverts to @xmath144 .",
    "in this section we carry out a construction which is analogous to that in section  [ section simple ] , but in which the underlying boolean network is cooperative , bi - quadratic , and has a strongly connected digraph .",
    "we will need to define some auxiliary boolean networks with designated input and output variables .    throughout this section",
    "let @xmath145 be an arbitrary even number , and consider the set @xmath146 .",
    "define the special sequences @xmath147 , i.e. @xmath148 ones followed by @xmath148 zeros , and similarly @xmath149 @xmath150 .",
    "[ lemma transform ] let @xmath151 be an arbitrary function .",
    "there exists a boolean network @xmath152 with input vectors @xmath153 , @xmath154 , and output vector @xmath155 , such that for some fixed @xmath156 the following equation holds for every @xmath9 and @xmath157 , regardless of the initial condition of @xmath152 :      furthermore , the network @xmath152 is cooperative , every node of its associated digraph has in- and outdegree of at most 2 , and the indegree ( outdegree ) of every designated input ( output ) variable is zero .    *",
    "proof : * define the set @xmath159 , and the function @xmath160 by @xmath161 , @xmath162 , for arbitrary @xmath163 . since @xmath164 is an unordered set ,",
    "@xmath165 can be extended to a cooperative function @xmath166 ; see @xcite .",
    "the result will follow from building a boolean network that computes the function @xmath165 .",
    "consider a fixed component @xmath167 of @xmath165 . by the cooperativity of this function",
    ", one can write it in the normal form @xmath168 , where each @xmath169 is the conjunction of a number of variables , i.e.  @xmath170 .",
    "this suggests a way of computing @xmath171 : define boolean variables @xmath172 , and then let @xmath173 . repeating this procedure for all components of @xmath165 yields a boolean network which computes @xmath165 in @xmath174 steps , and which is cooperative and has indegree ( outdegree ) zero for every input ( output ) .    in order to satisfy the condition that every node have in- and outdegree of at most two",
    ", we need to modify this construction by introducing additional variables .",
    "first , note that the outdegree of every input @xmath175 can be very large .",
    "one can define two additional variables which simply copy the value of @xmath176 , then four variables that copy the value of the previous two , etc .",
    "this procedure is repeated for each @xmath175 so that at least as many copies of each variable are present as appear in the expressions of all @xmath177 .",
    "a similar cascade can be used to define each @xmath177 and @xmath171 so that each indegree is at most two .",
    "if @xmath178 , say , then one can define @xmath179 , @xmath180 , @xmath181 .",
    "similarly for longer disjunctions and each @xmath177 and also similarly for @xmath171 , in which case @xmath182 is replaced by @xmath183 at each step .",
    "this produces a computation of @xmath171 in @xmath184 steps for each @xmath142 .",
    "finally , after introducing further additional variables at each component @xmath142 if necessary to compensate for unequal lengths of the expressions for @xmath185 , the boolean vector @xmath186 can be computed in exactly @xmath187 steps .",
    "@xmath89      without loss of generality , we can assume that for every state variable @xmath32 in the network @xmath152 , there exists some input variable @xmath188 or @xmath189 and a directed path from this input towards @xmath32 .",
    "this is because if that was nt the case , one could delete @xmath32 from the system without altering equation ( [ eq b module ] ) .",
    "cooperativity of @xmath165 implies that @xmath190 and @xmath191 @xcite ; therefore each @xmath171 is non - constant and no output variable will be deleted .",
    "similarly , it will be assumed that for every state variable @xmath32 , there exists an output variable @xmath192 such that there is a directed path from @xmath32 to @xmath192 .",
    "lemma  [ lemma transform ] can be used to compute a function @xmath193 which will be used in a way analogous to @xmath46 in equation ( [ simple cycle ] ) .",
    "similarly , we need to construct a ` switch ' to determine when to turn the system into mode , which is provided by lemma  [ lemma switch ] below .",
    "note that lemma  [ lemma transform ] can not be used for this purpose because the desired output depends not only on the current state of the input @xmath194 but on the whole history ( of unknown length ) of the input sequence since the last time when @xmath194 took the value @xmath195 .",
    "[ lemma switch ] there exists @xmath196 and a boolean network @xmath19 with input vector @xmath197 , and output vector @xmath198 , such that the following holds for any initial condition of @xmath19 .",
    "consider any sequence of inputs @xmath199 , @xmath200 , such that          let @xmath65 be such that @xmath206 for @xmath207 , @xmath208 ( or @xmath209 and @xmath210 ) .",
    "then @xmath211 furthermore , the network @xmath152 is cooperative , every node of its associated digraph has in- and outdegree of at most 2 , and the indegree ( outdegree ) of every designated input ( output ) variable is zero .     which is used to compute the output @xmath212 from the input @xmath213 .",
    "the formulas for each interaction ( i.e. @xmath214 ) as well as the dependencies of @xmath215 on @xmath216 and @xmath217 on @xmath218 are omitted in this figure.,width=432 ]    * proof : * the idea for this proof is the simple system @xmath219 , @xmath220 , with inputs @xmath221 .",
    "this switch is turned on by letting both inputs @xmath222 and @xmath223 for a short time , after which @xmath216 can be turned to @xmath224 while @xmath218 is left equal to  @xmath225 . after letting @xmath226 for a short time , the switch resets and",
    "does nt restart even if @xmath223 again .",
    "let @xmath133 without loss of generality , the more general case being completely analogous .",
    "for the sake of clarity assume for now that @xmath227 , but the same construction allows for @xmath228 and @xmath210 as described below .",
    "see figure  [ figure switch ] which displays the circuit described below .",
    "define for the moment @xmath229 , @xmath230 ( a modification of this definition with additional variables and indegree two is displayed in the figure and described below ) .",
    "thus @xmath231 if and only if @xmath232 , and @xmath233 if and only if @xmath234 , since by assumption @xmath201 .",
    "( intuitively , @xmath239 is a time - transposed copy of @xmath216 where every 1 has been doubled due to the feed - forward loop at @xmath215 .",
    "also , @xmath240 is similar to a time - transposed copy of @xmath218 where every 0 has been doubled - the auxiliary variables @xmath241 only play a role at a single time step as described below .",
    "the loop @xmath242 forms the core of the switch in the system . )",
    "a simple calculation shows that @xmath243 , @xmath244 for @xmath245 . on the other hand , since @xmath246 , we infer that @xmath247 , @xmath248 for @xmath249 , @xmath250 .",
    "it follows that @xmath251 ( since @xmath252 ) , and that @xmath253 if and only if @xmath254 ( since @xmath255 ) .",
    "this in turn holds since @xmath256 . also , @xmath257 for @xmath258 .",
    "we use the data for @xmath259 and @xmath260 to compute the values of @xmath240 . from @xmath261",
    ", it follows that @xmath262 . from @xmath253",
    "it follows that @xmath263 , and using @xmath260 we similarly infer that @xmath264 for @xmath265 .",
    "also , @xmath266 .",
    "we conclude that @xmath267 , @xmath268 , regardless of the values of @xmath269 at earlier time steps .",
    "since @xmath256 , one has @xmath270 , @xmath271 , and in general @xmath272 for @xmath273",
    ". then @xmath274 , @xmath275 , @xmath276 , for @xmath277 , and @xmath278 .",
    "in particular @xmath279 for exactly @xmath102 time steps , @xmath273 , and then @xmath280 for @xmath281 . since we want the variable @xmath212 to be equal to 1 during exactly @xmath282 time steps , we define the additional variables @xmath283 calculating that @xmath284 , @xmath285 for @xmath286 , we have @xmath287 , @xmath288 , and @xmath289 , @xmath290 .    in order to define the variable @xmath291",
    ", it suffices to make a construction dual to the previous one ( recall that simply negating @xmath212 is not permitted ) .",
    "that is , define @xmath292 , and @xmath293 , in such a way that @xmath294 if and only if @xmath232 , and @xmath295 if and",
    "only if @xmath234 . define variables @xmath296 etc .",
    "similarly as above , except that every @xmath182 in the function definition is replaced by @xmath183 and vice versa . then it will necessarily follow that @xmath297 on the interval @xmath298 .",
    "using the value @xmath299 , equation ( [ eq switch ] ) is satisfied .",
    "the case @xmath228 is very similar as above . in this case",
    "@xmath300 ( instead of 0 for @xmath256 ) , @xmath301 , and therefore @xmath280 on all @xmath302 . thus @xmath303 , and @xmath304 for larger values of @xmath32 . in the case @xmath210",
    ", one can compute @xmath264 for @xmath305 .",
    "this allows the variables @xmath306 to remain equal to 1 up to and including @xmath307 .",
    "therefore @xmath287 up to and including @xmath308 .",
    "notice that this system is cooperative , and that all in- and outdegree requirements are satisfied except for the indegree of the variables @xmath309 .",
    "these terms can now be replaced in a routine manner by a cascade of variables ( see figure  [ figure switch ] ) , in such a way that @xmath231 if and only if @xmath310 , etc . ,  for some @xmath311 .",
    "this will increase the delay @xmath312 but leave the computations and the other properties of this system unchanged .",
    "@xmath89    we are ready for the construction of the cooperative counter described in the introduction .",
    "this boolean network is designed to replicate the behavior of the system described by equations ( [ vector cycle ] ) , ( [ vector mode ] ) , while ensuring its cooperativity . in order to do so",
    ", we let @xmath313 be arbitrary and @xmath145 be an even positive integer , which is large enough that there exists an injective function @xmath314 , where @xmath315 is defined as above",
    ". the cooperative network will contain @xmath316-dimensional vectors @xmath317 , with values in @xmath315 , which will be considered as proxy for states @xmath318 of the system ( [ vector cycle ] ) , ( [ vector mode ] ) .",
    "we require that @xmath319 , and that @xmath320 ( see the definitions of @xmath321 and @xmath322 above ) .",
    "this is possible if @xmath316 is large enough so that @xmath323 .",
    "we also let @xmath324 , and @xmath325 . having defined @xmath326",
    ", we define @xmath151 as @xmath327 , for @xmath328 , @xmath329 for all other @xmath330 . the function @xmath99 is defined as in section  [ section simple ] . in particular , @xmath331 .    using the function @xmath193",
    "defined above , we consider the cooperative networks @xmath152 and @xmath19 from lemmas  [ lemma transform ] and  [ lemma switch ] .",
    "recall that @xmath152 ( @xmath19 ) has variables @xmath332 ( @xmath213 ) which are specifically designated as inputs , a variable @xmath39 ( @xmath333 ) specifically designated as output , and a ` processing delay ' @xmath334 ( @xmath312 ) .",
    "the cooperative network , which will be denoted by @xmath335 , is defined by @xmath152 and @xmath19 , together with the equations           given by @xmath152 , @xmath19 , and equations ( [ cooperative cycle ] ) , ( [ cooperative turing ] ) .",
    "the variables @xmath338 are displayed in a box to indicate that they are not part of @xmath335 but only included in the proof of theorem  [ teo cooperative cycle].,width=576 ]    see figure  [ figure cooperative ] for an illustration . since both of the subnetworks used in the construction of this system contain only the boolean operators @xmath214 in their expression ( and no negations ) , it follows from ( [ cooperative cycle ] ) and ( [ cooperative turing ] ) that the same is the case for the full network ,",
    "hence the system is cooperative .",
    "* proof : * the fact that every in- and outdegree is at most 2 follows directly from equations ( [ cooperative cycle ] ) , ( [ cooperative turing ] ) and lemmas  [ lemma transform ] and  [ lemma switch ] , taking into account that the indegree ( outdegree ) of every input ( output ) variable is zero within their respective subnetwork .",
    "see also figure  [ figure cooperative ] .    in order to show the strong connectivity of the digraph ,",
    "first we show that there exists a directed path from every node in the network to the node @xmath212 , the first component in the output of @xmath19 .",
    "it is clear from the circuit defining @xmath19 that every input variable @xmath339 has a path connecting to @xmath212 ( the first @xmath148 components of @xmath213 through the variables @xmath340 and the last @xmath148 components through @xmath341 ) .",
    "therefore every component of every variable @xmath342 can reach @xmath212 as well . by the remark after lemma",
    "[ lemma transform ] , the same applies to every variable of @xmath39 , and thus to every variable in the subnetwork @xmath152 . thus the same applies also to @xmath291 , and hence to every state in the subnetwork @xmath19 .",
    "now we show that there exists a path from @xmath212 to every node in the network .",
    "suppose first that there exists @xmath343 such that neither @xmath344 or @xmath345 contains a path towards @xmath343 .",
    "this would imply that @xmath346 for every argument @xmath163 , by equation ( [ eq b module ] ) .",
    "but we have @xmath347 which is a contradiction .",
    "thus for every @xmath102 , there exists a path from either @xmath344 or @xmath345 to @xmath343 ( and therefore from @xmath212 or @xmath291 to @xmath343 ) .",
    "since there exists a path from @xmath212 to @xmath291 , it follows that there is a path from @xmath212 to every  @xmath343 .",
    "thus every component of every state @xmath342 , @xmath213 , and @xmath348 can be reached by a path from @xmath212 .",
    "every state in @xmath152 can be reached from @xmath344 and hence @xmath212 , once again by the remark after lemma  [ lemma transform ] ; the same applies to @xmath291 , and every state in the subnetwork @xmath19 . @xmath89",
    "* proof : * for the purposes of this proof , we extend the system with the auxiliary variables @xmath338 , defined by @xmath350 ; see figure  [ figure cooperative ] . these variables can not change the length of the original system",
    "s periodic orbits ( since they do nt feed back into it ) , but they can nevertheless be used for the study of the network .",
    "suppose that the system is initiated at time @xmath351 , and let @xmath352",
    ". then @xmath353 by ( [ cooperative cycle ] ) .",
    "but then @xmath354 , by ( [ cooperative turing ] ) .",
    "by lemma  [ lemma transform ] , @xmath355 is equal to either @xmath356 or @xmath357 , depending on whether @xmath358 or @xmath359 respectively . since @xmath360 , we have      where the auxiliary boolean variable @xmath118 is defined as @xmath362 if @xmath363 and @xmath364 if @xmath365 .",
    "the variable @xmath48 , similarly as @xmath366 , is defined merely for the purposes of this proof , and it does not form part of the network itself .        to see this , note that by ( [ cooperative cycle ] ) @xmath375 , for @xmath376 . since @xmath377",
    ", it also follows that @xmath378 , and @xmath379 . thus setting @xmath380",
    ", one has @xmath381 , @xmath382 for @xmath383 , @xmath384 for @xmath385 , and @xmath386 . applying lemma  [ lemma switch ] with @xmath387 , we have that @xmath388 , for @xmath389 , and @xmath390 , @xmath391 .",
    "equation  ( [ eq mode cooperative ] ) then follows directly from the definition of @xmath392 and the mode variable .",
    "it is analogous to verify that ( [ eq mode cooperative ] ) also holds in the case @xmath81 , i.e.  when @xmath393 for @xmath370 .",
    "note that using equation ( [ eq mode cooperative ] ) we can fully calculate @xmath394 , namely @xmath395 , for @xmath396 , and @xmath397 for @xmath398 ; also , necessarily @xmath399 regardless of @xmath400 , since @xmath331 .",
    "the same process can be repeated starting at time @xmath401 , @xmath402 etc .",
    ", since necessarily @xmath403 can still only hold for @xmath404",
    ".    an appropriate initial condition to reach the above situation can be given as follows .",
    "let @xmath405 , and let @xmath406 , for @xmath370 .",
    "let @xmath407 .",
    "finally , let @xmath152 ( @xmath19 ) be initialized with @xmath334 ( @xmath312 ) successive inputs of @xmath408 ( @xmath409 ) .",
    "this way for @xmath133 we guarantee that @xmath368 , @xmath406 for @xmath370 , and importantly , @xmath367 .    finally , under our standing hypotheses @xmath367 , @xmath410 , and @xmath411 for @xmath370 .",
    "define the following initial conditions for the system  ( [ vector cycle ] ) ,  ( [ vector mode ] ) : @xmath412 , @xmath87 . after calculating @xmath102 as before ,",
    "@xmath413 , we have seen that @xmath414 for @xmath396 , and @xmath415 otherwise . from the discussion above",
    ", it follows that @xmath416 for @xmath370 .",
    "this equivalence between the two systems implies in particular that the states @xmath417 are pairwise different for @xmath418 .",
    "the result follows .",
    "@xmath89      we can use proposition  [ teo cooperative properties ] and theorem  [ teo cooperative cycle ] to prove the theorem stated in the introduction .",
    "let @xmath419 be arbitrary .",
    "we prove first that there exist @xmath145 even and and integer @xmath313 such that      the second inequality is equivalent to @xmath421 ; thus let @xmath422 , for some fixed @xmath423 ( for large enough @xmath424 , @xmath316 can then be rounded up to the nearest even number while satisfying this inequality ) . using stirling s formula",
    ", we have @xmath425 for large enough @xmath316 , where @xmath426 is arbitrary and fixed .",
    "the first inequality in ( [ l l condition ] ) is satisfied if @xmath427 .",
    "but after replacing @xmath422 this is equivalent to @xmath428 .",
    "clearly this inequality is satisfied for sufficiently large @xmath424 , hence ( [ l l condition ] ) follows .    the first inequality is now used to carry out the construction of system @xmath335 , which by theorems  [ teo cooperative properties ] and  [ teo cooperative cycle ] is cooperative and bi - quadratic with strongly connected digraph , and has a periodic orbit of length greater than or equal to @xmath120 .    it remains to show that @xmath429 for large @xmath43 , where @xmath1 is the dimension of the system .",
    "let @xmath430 be the total number of variables in the subnetworks @xmath431 .",
    "note that @xmath430 depends only on @xmath432 , and not on @xmath61 . then @xmath433 .",
    "notice that @xmath434 if and only if @xmath435 , which holds if and only if            angeli , d. , ferrell , j.e . , and sontag , e.d .",
    "( 2004 ) detection of multistability , bifurcations , and hysteresis in a large class of biological positive - feedback systems , _ proc .",
    "_ 101:1822 - 1827 ."
  ],
  "abstract_text": [
    "<S> boolean networks have been the object of much attention , especially since s. kauffman proposed them in the 1960 s as models for gene regulatory networks . </S>",
    "<S> these systems are characterized by being defined on a boolean state space and by simultaneous updating at discrete time steps . of particular importance for biological applications </S>",
    "<S> are networks in which the indegree for each variable is bounded by a fixed constant , as was stressed by kauffman in his original papers .    </S>",
    "<S> an important question is which conditions on the network topology can rule out exponentially long periodic orbits in the system . in this paper </S>",
    "<S> , we consider systems with positive feedback interconnections among all variables ( known as cooperative systems ) , which in a continuous setting guarantees a very stable dynamics . </S>",
    "<S> we show that for an arbitrary constant @xmath0 and sufficiently large @xmath1 there exist @xmath1-dimensional cooperative boolean networks in which both the indegree and outdegree of each variable is bounded by two , and which nevertheless contain periodic orbits of length at least @xmath2 . in part ii of this paper we will prove an inverse result showing that any system with such a dynamic behavior must in a sense be similar to the example described .    * keywords : * boolean networks , monotone systems , periodic solutions , mathematical biology , gene regulatory networks    * ams subject classification : * 34c12 , 39a11 , 92b99 .    </S>",
    "<S> the concept of a _ boolean network _ was originally proposed in the late 1960 s by stuart kauffman to model gene regulatory behavior at the cell level @xcite . </S>",
    "<S> this type of modeling can sometimes capture the general dynamics of continuous systems in a simplified framework , e.g. without the choice of specific nonlinearities or parameter values ; see for instance  @xcite . </S>",
    "<S> boolean networks are known and used in several other disciplines such as electrical engineering , computer science , and control theory , and analogous definitions are known under various names such as sequential dynamical systems @xcite or boolean difference equations @xcite . </S>",
    "<S> an important class of _ continuous _ dynamical systems is that of so - called _ monotone systems _ , which can be roughly characterized by the absence of negative feedback interactions @xcite . </S>",
    "<S> a special case is that of _ cooperative systems _ , in which there are no direct inhibitory interactions between any two variables . </S>",
    "<S> monotone and cooperative systems have been used as a modeling tool for gene regulatory systems , for instance in @xcite . </S>",
    "<S> the assumption of monotonicity is a stringent condition which ensures that the system behavior is remarkably stable : for instance , under mild additional assumptions the generic solution of a monotone dynamical system must converge towards an equilibrium .    in the boolean case , the class of cooperative systems can be described as that corresponding to maps that can be expressed using only and and or gates , i.e.  with no use of negations . </S>",
    "<S> this can be easily seen by considering the disjunctive normal form of the boolean maps .    </S>",
    "<S> an important question in the study of cooperative boolean networks is whether some of the stability properties of continuous cooperative systems have analogues in the boolean case . </S>",
    "<S> for instance , does the assumption of cooperativity by itself limit the length of the longest cycle in an @xmath1-dimensional boolean system ? </S>",
    "<S> it was shown recently through simulations that random boolean systems tend to have shorter periodic cycles if they are cooperative , or even if they are close to cooperative in the sense of having few negative feedback interactions ; see @xcite , and also @xcite . </S>",
    "<S> nevertheless , a straighforward use of sperner s theorem shows that a cooperative @xmath1 dimensional boolean system can have a cycle of length close to @xmath3 for large @xmath1 , see @xcite and more recently @xcite .    </S>",
    "<S> one would like to know which additional assumptions rule out exponentially long periodic orbits in cooperative boolean systems . </S>",
    "<S> in @xcite suitable adaptations of the notion of _ strong cooperativity _ @xcite to boolean systems were found that limit the length of periodic orbits to @xmath4 or even to @xmath1 , the dimension of the system . in the present manuscript </S>",
    "<S> we follow up on this question by considering a different class of cooperative boolean systems in which both the indegree and the outdegree of the associated digraph is bounded .    </S>",
    "<S> we need some definitions . </S>",
    "<S> an @xmath1-dimensional _ boolean dynamical system _ or _ </S>",
    "<S> boolean network _ is a pair @xmath5 , where @xmath6 and @xmath7 . </S>",
    "<S> a state @xmath8 at time @xmath9 will be denoted by @xmath10 $ ] , or simply @xmath11 $ ] if time - dependency is ignored . </S>",
    "<S> we will have    @xmath12    the _ cooperative order _ on @xmath13 is the partial order relation defined by @xmath14 iff @xmath15 for all @xmath16 . the system is _ cooperative _ if @xmath17 implies @xmath18 .    </S>",
    "<S> we associate a directed graph @xmath19 with vertex set @xmath20 with the system . </S>",
    "<S> a pair @xmath21 is in the arc set of @xmath19 iff there exist states @xmath22 such that @xmath23 and @xmath24 for all @xmath25 with the property that @xmath26 . </S>",
    "<S> we will say that the system is _ bi - quadratic _ if both the indegree and the outdegree of all vertices in @xmath19 is at most two .    already in his 1969 papers @xcite , </S>",
    "<S> kauffman focused his attention on boolean networks where every variable can only be directly affected by a fixed number @xmath27 of other variables . in the digraph associated to the network </S>",
    "<S> , this corresponds to limiting the indegree of every node to ( at most ) @xmath27 . </S>",
    "<S> this corresponds to empirical findings about actual gene regulatory networks which show that most genes are directly regulated by a small number of proteins in a scale - free manner @xcite . </S>",
    "<S> other studies of biochemical networks show that only very few nodes are involved in the regulation of other chemicals . </S>",
    "<S> thus large subnetworks of most biochemical networks of interest will also have the property that the outdegree of each node is bounded by a small integer . </S>",
    "<S> bi - quadratic boolean networks satisfy both of these restrictions with @xmath28 . </S>",
    "<S> random boolean networks with @xmath28 have been extensively studied and tend to have dynamics in the _ ordered regime , _ which is characterized , among other properties , by the absence of exponentially long attractors ( see @xcite for a review ) . </S>",
    "<S> thus it becomes a natural question whether one can prove , for cooperative bi - quadratic boolean networks , a subexponential bound on the length of their periodic orbits , or at least a bound of the form @xmath2 for some constant @xmath29 . </S>",
    "<S> the following theorem shows that this is not the case .    </S>",
    "<S> [ theorem counterexample ] let @xmath30 be arbitrary . </S>",
    "<S> then for some sufficiently large @xmath1 there exists an @xmath1-dimensional , bi - quadratic cooperative boolean network which contains a periodic orbit of length at least @xmath2 . </S>",
    "<S> moreover the digraph @xmath19 associated with this network is strongly connected .    </S>",
    "<S> the last sentence of theorem  [ theorem counterexample ] is of interest in connection with the results in @xcite . </S>",
    "<S> there , we define a local version @xmath31 of @xmath19 for every state @xmath32 as follows : a pair @xmath21 is in the arc set of @xmath31 iff there exist a state @xmath33 such that either @xmath23 while @xmath24 for all @xmath25 , and we have @xmath26 , or @xmath34 while @xmath24 for all @xmath25 , and we have @xmath35 . </S>",
    "<S> it is shown that if @xmath36 is a periodic orbit of an @xmath1-dimensional cooperative boolean system such that @xmath31 is strongly connected for every @xmath37 , then @xmath38 ( theorem  25 of @xcite ) .    </S>",
    "<S> the proof of theorem  [ theorem counterexample ] uses a construction similar to a small turing machine operating on a long circular tape . in part  </S>",
    "<S> ii of this paper we will show that if @xmath39 is sufficiently close to @xmath40 , then all @xmath1-dimensional bi - quadratic cooperative boolean networks with periodic orbits of length @xmath41 must contain a relatively small subsystem that can be considered a turing machine operating on one or more tapes that retain the values of all other variables .    </S>",
    "<S> the remainder of this note is organized as follows : in section  [ section simple ] we introduce the main idea of the construction , but without requiring the system to be cooperative and bi - quadratic . in section  [ section main ] </S>",
    "<S> we show how to modify the construction so that the network will also be cooperative , bi - quadratic and will have a strongly connected digraph . </S>"
  ]
}
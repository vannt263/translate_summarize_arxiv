{
  "article_text": [
    "the rapid development in the existing motor vehicle technology has led to the increase in demand of automated vehicles , which are in themselves capable of various decision activities such as motion - controlling , path planning etc .this has motivated many to address a large number of algorithmic and optimisation problems .",
    "the 1939 paper by robbins@xcite , which gives the idea of _ orientable _ graphs and the paper by masayoshi et.al @xcite , are to a certain extent an inspiration to formulating our graph network .",
    "the work by dasler and mount @xcite , which basically considers motion coordination of a set of vehicles at a _ traffic - crossing _ ( intersection ) , has been a huge motivation and a much closer approach to that of ours .",
    "but unlike their work , we consider a much simpler version of a grid graph and mainly concentrate on analysing essential properties , and deriving suitable algorithms and structures to have a collision - free movement of traffic in the given graph network .",
    "further , our work also mentions the possible shortest path configurations in our defined graph .",
    "we now discuss some definitions and notations that are referred to in the rest of the paper .",
    "a road is a directed line , which is either parallel to x - axis ( @xmath8 ) or y - axis ( @xmath9 ) and it is uniquely defined by its direction and distance from the corresponding parallel axis . here direction is the constraint which restricts the movement on the road .    formally , a _ road _ is defined as a 2-tuple , @xmath10 , @xmath11 , where @xmath12 are the indices with respect to their parallel axis , @xmath13 is the direction of the road i.e. , @xmath14 ( where 0 represents @xmath15 direction and 1 represents @xmath16 direction of the respective axis ) , and @xmath17 is the distance of the road @xmath8 from x - axis , similarly for @xmath18 .",
    "we define a _ one way road network ( owrn ) _ as a network with a set of @xmath19 horizontal and @xmath20 vertical roads .",
    "formally a owrn is a 2-tuple , @xmath0 , where , @xmath21 , @xmath22 .    ]    a _ junction _ or _",
    "@xmath23 is defined as the intersection of @xmath8 and @xmath24 .",
    "formally , @xmath25 .",
    "an _ edge _ is a connection between two adjacent vertices of a road and all the edges on a road are in the same direction as that of the road .",
    "the _ boundary roads _ of a owrn are the outermost roads , i.e. , @xmath26 and @xmath27 . in this paper",
    "we term each vertex on the boundary roads as _",
    "boundary vertex _",
    ", i.e. , all the vertices with degrees 2 and 3 .",
    "a _ vehicle _ @xmath28 is defined as a 3-tuple @xmath29 , where @xmath30 is the starting time of the vehicle , @xmath31 is the speed of the vehicle , which is constant throughout the journey and each vehicle moves non - stop from its starting vertex to destination vertex ( unless a collision occurs ) , and @xmath32 is the path to be travelled by the vehicle .    a _ path _ @xmath33 of a vehicle @xmath34 is defined as the ordered set of vertices through which it traverses the owrn , formally , @xmath35 , @xmath36 , @xmath37 , and @xmath38 , @xmath39 .    a _ traffic configuration _",
    "is defined as a collection of vehicles over a owrn .",
    "formally a @xmath40 is a 2-tuple , @xmath41 , where @xmath5 is the set of vehicles @xmath42 .",
    "now , we define a _ collision _ as two vehicles @xmath43 and @xmath44 @xmath45 reaching the same vertex orthogonally at the same time .",
    "so a _ collision - free _ traffic configuration is a tc without any collisions .",
    "before considering the traffic configuration problem , we define the connectivity of a owrn .      in this section",
    ", we consider a general owrn of @xmath46 roads , and show the conditions for it to be strongly - connected .",
    "the reachability to ( and from ) the non - boundary vertices is evident from the following lemmas .",
    "[ lem:1 ] for every non - boundary vertex @xmath23 , @xmath47 , @xmath48 there exists @xmath49,@xmath50 such that we can always reach the boundary vertices @xmath51 , @xmath52 from @xmath23 .",
    "we prove this lemma by considering the two roads which intersect to form the vertex @xmath23 .    1 .   for the road",
    "@xmath8 , if @xmath53 then by definition we can reach @xmath54 from @xmath23 , i.e. , @xmath55 . otherwise we can reach @xmath56 from @xmath23 , i.e. , @xmath57 .",
    "2 .   for the road",
    "@xmath24 , if @xmath58 then by definition we can reach @xmath59 from @xmath23 , i.e. , @xmath60 . otherwise we can reach @xmath61 from @xmath23 , i.e. , @xmath62 .    from the above conditions we can clearly see that for any non - boundary vertex @xmath23 , @xmath63 such that @xmath51 , @xmath64 are reachable from @xmath23 .",
    "[ lem:2 ] for every non - boundary vertex @xmath23 there exists @xmath49,@xmath50 such that @xmath23 is reachable from the boundary vertices @xmath51 , @xmath52 .",
    "the proof of this lemma is analogous to that of lemma  [ lem:1 ] .",
    "a one way road network is strongly - connected iff the boundary roads form a cycle .",
    "the proof of this theorem follows from lemma  [ lem:3 ] and lemma  [ lem:4 ] .",
    "[ lem:3 ] if all the boundary vertices of a owrn form a cycle , then it is strongly - connected .    given two vertices @xmath23 , @xmath65 in a owrn , to reach from @xmath23 to @xmath65",
    ", we have four different possibilities    1 .   _ both boundary vertices _ : any boundary vertex is reachable from any other boundary vertex , since they all form a cycle",
    ". therefore a path exists .",
    "@xmath23 non - boundary vertex , @xmath65 boundary vertex _ : from _ lemma  [ lem:1 ] _ we know that , from any non - boundary vertex @xmath23 we can always reach a boundary vertex , and from that vertex we can reach @xmath65 as shown in @xmath66",
    ". therefore a path exists .",
    "@xmath23 boundary vertex , @xmath65 non - boundary vertex _ : from _ lemma  [ lem:2 ] _ we know that any non - boundary vertex @xmath65 is always reachable from a boundary vertex , and which in turn is reachable from @xmath23 as shown in @xmath66",
    ". therefore a path exists .",
    "4 .   _ both non - boundary vertices _ : from @xmath66 , @xmath67 and @xmath68 it is implied that there exists a path in this case too .",
    "[ lem:4 ] if a given one way road network is strongly - connected , then all the boundary vertices form a cycle .",
    "let us assume on the contrary that the boundary vertices do not form a cycle in the owrn .",
    "then there will exist a boundary vertex of degree 2 ( corner vertex ) such that either both the boundary roads are incoming or outgoing .    1 .",
    "_ both incoming roads _",
    ": in this case , we will not be able to reach any other vertex from that vertex .",
    "2 .   _ both outgoing roads _ : in this case , we will not be able to reach that vertex from any other vertex .",
    "therefore , the owrn is not strongly - connected .",
    "hence , by contradiction , we can claim that the boundary vertices of a strongly - connected owrn will always form a cycle .",
    "we now define the traffic configuration problem in a connected owrn .    given a traffic configuration @xmath69 , our objective is to find a maximum cardinality subset @xmath70 , @xmath71 , such that the new traffic configuration @xmath72 is * collision - free*.    in the following sections we discuss the hardness of the above problem , and also mention some of the restricted versions of the same .",
    "in this section we show that finding a solution to the traffic configuration problem is _ * np - hard*_. for this , we have the following theorem .",
    "given an undirected graph @xmath73 , there exists a traffic configuration @xmath69 , computable in polynomial - time , such that the cardinality of maximum independent set of @xmath74 is @xmath75 iff the maximum cardinality of @xmath70 is @xmath75 .    to prove this theorem",
    ", we reduce maximum independent set problem to the traffic configuration problem , which is achieved with the help of the following lemmas and algorithms .",
    "[ lem:5 ] for any complete graph @xmath76 , there exists a traffic configuration @xmath40 , such that every vertex in @xmath76 has a respective car , and for every edge in @xmath76 there is a collision between the respective vehicles .",
    "we prove this lemma using proof by construction .",
    "the following steps show how to construct a @xmath40 from @xmath76 .    1 .",
    "we construct a owrn of @xmath77 roads , with @xmath78 horizontal roads and @xmath19 vertical roads in which 1 .   for the road @xmath8 , @xmath79 + and @xmath80 2 .   for the road @xmath24 , @xmath81 + and @xmath82 + where @xmath83 is a numeric constant",
    "the set of vehicles @xmath5 is defined as @xmath84 and for each vehicle @xmath85 we assume 1 .",
    "the start time to be @xmath86 and the velocity to be @xmath87 .",
    "@xmath88 , where @xmath89 , @xmath90 .",
    "3 .   @xmath91 3 .",
    "now we can observe that two vehicles @xmath92 @xmath93 collide at vertex @xmath94 , where @xmath95 .",
    "we assume that each node @xmath96 in @xmath76 corresponds to a vehicle @xmath97 , and each edge between two nodes @xmath98 and @xmath99 in @xmath76 corresponds to the collision of the respective vehicles @xmath100,@xmath101 .",
    "@xmath102 we obtain the corresponding @xmath103 of @xmath76 .     in the @xmath40 obtained from lemma  [ lem:7 ]",
    "]    now to reduce any simple graph g , we first compute the corresponding tc for the complete graph @xmath104 .",
    "we then introduce 4 equi - spaced roads with directions ( @xmath105 s ) @xmath106 between every two adjacent roads @xmath8 , @xmath107 and @xmath24 , @xmath108 , respectively , in the above formed owrn ,",
    "the path of each vehicle is to be modified accordingly .",
    "we define method , where @xmath98 and @xmath109 are the two vertices in the path of @xmath43 , and @xmath110 is the total number of delays , which modify the path @xmath111 to introduce a @xmath110 number of small time delays in between the vertices @xmath98,@xmath109 , this delay will also be propagated to all the successive vertices of @xmath109 in @xmath111 .",
    "input : @xmath112 ) , no.of delays @xmath110 + output : @xmath33 after introduction of @xmath110 delays    @xmath113 are two successive vertices of @xmath98 in @xmath33 @xmath114 , is a vertex @xmath115 there is an edge @xmath116 @xmath117 is a vertex @xmath115 @xmath118 , @xmath119 @xmath120     to @xmath109 @xmath121 before delay introduction , @xmath122 after delay introduction ]    * return * common vertex in @xmath111,@xmath123    the method ( @xmath124 will return the common vertex through which both the vehicles travel . in the base case(@xmath125 )",
    "the collision method returns the starting vertex of the vehicle @xmath44 .",
    "the following algorithm makes use of the above mentioned methods to construct the required tc by introducing some number of delays in the path of each vehicle .",
    "@xmath110 @xmath126 @xmath98 = @xmath109 = * return * @xmath110    the reduction algorithm is constructed using the following properties :    1 .",
    "the number of delays introduced in the path of a vehicle @xmath43 is equal to @xmath127 .",
    "2 .   if there is an edge between two nodes @xmath12 , @xmath128 in g , then @xmath43 and @xmath44 will have collision in the tc . the number of delays introduced in the path @xmath123 before the collision of @xmath43,@xmath44 is @xmath127 .",
    "3 .   if there is no edge between two nodes @xmath12 , @xmath128 in g , then @xmath43 and @xmath44 will not have a collision in the tc .",
    "the number of delays introduced in the path @xmath123 before the collision of @xmath43,@xmath44 is @xmath129 .",
    "the method will return value true if there is an edge between @xmath127 and @xmath130 in the graph g , else false .",
    "[ lem:6 ] the maximum number of delays introduced between the two collision vertices @xmath98 and @xmath109 as defined in the reduction algorithm , will be two .",
    "the proof of this lemma follows from the above stated properties .",
    "the number of delays introduced in the path @xmath123 , before collision of vehicles @xmath43 and @xmath44 is either @xmath127,@xmath129 .",
    "the number of delays introduced in the path @xmath123 , before collision of vehicles @xmath131 and @xmath44 is either @xmath132,@xmath127 .",
    "@xmath102 the maximum number of delays that can be introduced between @xmath98 and @xmath109 is two .    from the above lemma and the reduction algorithm , we have the following lemma    [ lem:7 ] the above reduction algorithm can be solved using dynamic programming approach in polynomial - time @xmath133 , and the space complexity of both tc and owrn created is @xmath133 .",
    "[ lem:8 ] if @xmath70 be any subset of c in tc such that @xmath134 is collision - free , then @xmath70 corresponds to independent set of g.    since @xmath135 is collision - free , so no two nodes in the graph g , which corresponds to respective cars in @xmath136 , consists of an edge .",
    "thus , we can claim that @xmath70 corresponds to an independent set in g.    from _ lemma  [ lem:8 ] _ we can say that maximum @xmath70 corresponds to _ maximum independent set _ in @xmath74 .",
    "now , using _",
    "lemma  [ lem:7 ] _ and _ lemma  [ lem:8 ] _ we can prove that the traffic configuration problem is _ np - hard_.      if we constrain our vehicles to move in a straight line motion , then the corresponding graph to @xmath40 will be a bipartite graph .",
    "and _ maximum independent set _ of a bipartite graph can be computed using konig s theorem and network - flow algorithm in polynomial - time .",
    "hence , the restricted version of the problem is solvable in polynomial - time .",
    "suppose in a city of only one way road network , a person wants to travel from one point to another with minimum distance .",
    "now , the objective would be to compute the shortest path to the destination in least possible time .",
    "designing efficient algorithms to compute the shortest path in a one way road network would be useful in many applications in the areas of facility location , digital micro - fluidic bio - chips , etc .",
    "+ the length of the shortest path between two vertices in a owrn may not be the manhattan distance .",
    "there may be a pair of neighbouring vertices which are the farthest pair of vertices in the owrn metric .",
    "turn _ in a path is defined when two consecutive pair of edges are from different roads .",
    "we have the following lemmas for shortest path between any two vertices in a owrn :    [ lem:9 ] between any pair of vertices @xmath137 , @xmath138 , there exists a shortest path of at most four turns .",
    "we can observe that a shortest path of @xmath75 turns is geometrically similar to an addition of one more turn at the end of shortest path of @xmath139 turns , and the path with @xmath75 turns can be reduced if it s sub - path with @xmath139 turns can be reduced .    1 .",
    "the path with zero turns is a straight line and the path with one turn is an l shaped , which are trivial .",
    "the path with two turns , two configurations @xmath140 are possible and are valid as shown in _",
    "figure  [ fig:6]_. 3 .",
    "the path with three turns , two configurations@xmath141 shown in _ figure  [ fig:6 ] _ are valid and the other two shown below are not valid as there exist another shortest path with 1 turn .",
    "+ [ fig:4 ]   4 .",
    "the path with four turns , from the above explanation it can be easily seen that only @xmath142 are valid configurations with four turns .",
    "the path with five turns , in the below figure we can see that a five turn path will become either a one turn or four turn .",
    "+ [ fig:5 ]   + similarly we can see that for any five turn path there exist a shortest path with less number of turns .    hence we can see that there always exist a shortest path with at most 4 turns .    from _ lemma  [ lem:9 ] _",
    "we observe that there exist a shortest path between every pair of vertices in the owrn which will be a rotationaly symmetric to one of the paths shown below :    [ fig:6 ]     the upper bound on the length of the shortest path between any pair of vertices @xmath137 , @xmath138 is the perimeter of the boundary of the owrn .",
    "the proof of this lemma follows from _",
    "lemma  [ lem:1 ] _ , _ lemma  [ lem:2 ] _ and _ lemma  [ lem:9]_.",
    "we have shown all the possible configurations of the path , that connects two vertices in a owrn . in the future",
    "we will extend this work to compute various kind of facility location problems on a owrn",
    ". it will be interesting to investigate the time complexity of one - centre or k - centre problems with respect to owrn metric .",
    "other interesting problems may be to design an efficient data structure for dynamic maintenance of shortest path in directed grid graphs .",
    "99 philip dasler , david m. mount . on the complexity of an unregulated traffic crossing , may 2015 .",
    "h. e. robbins . a theorem on graphs , with an application to a problem of traffic control , 46 : 281 - 283,1939 .",
    "t. kashiwabara and t. fujisawa .",
    "np - completeness of the problem of finding a minimum - clique - number interval graph containing a given graph as a subgraph .",
    ", 657 - 660 , 1979 . t. kashiwabara and s. masuda , k. nakajima and t. fujisawa .",
    "generation of maximum independent sets of a bipartite graph and maximum cliques of a circular - arc - graph .",
    ", 13 : 161 - 174 , 1992 .",
    "masayoshi kakikura , jun - ichi takeno and masao mukaidono .",
    "a tour optimization problem in a road network with one - way paths .",
    ", 98 : 257 - 264 , 1978 .",
    "garey , m.r . and",
    "johnson , d.s .",
    ", ca : freeman , 1979 . k. c. tan and s. c. lew . .",
    ", p. 649 - 658 , 2004 - 5 .",
    "f. berger and r. klein .",
    "a traveller s problem .",
    ", socg 10 , page 176182 , new york , ny , usa , 2010 .",
    "k. m. dresner and p. stone . a multiagent approach to autonomous intersection management .",
    ", 31:591656 , 2008 . p. fiorini and z. shiller .",
    "motion planning in dynamic environments using velocity obstacles .",
    ", 17(7):760772 , july 1998 .",
    "r. rajamani .",
    "vehicle dynamics and control . , december 2011 .",
    "p. r. wurman , r. dandrea , and m. mountz .",
    "coordinating hundreds of cooperative , autonomous vehicles in warehouses .",
    ", 29(1):919 , 2008 . j. yu and s. m. lavalle .",
    "multi - agent path planning and network flow .",
    ", april 2012 . g. b. dantzig and j. h. ramser .",
    "the truck dispatching problem .",
    ", 6(1):8091 , october 1959 .",
    "marius m. solomon .",
    "algorithms for the vehicle routing and scheduling problems with time window constraints . , 35(2):254265 , march 1987 ."
  ],
  "abstract_text": [
    "<S> let @xmath0 be a one way road network where @xmath1 and @xmath2 are the sets of directed horizontal and vertical roads respectively . </S>",
    "<S> @xmath3 can be considered as a variation of directed grid graph . </S>",
    "<S> the intersections of the horizontal and vertical roads are the vertices of @xmath3 and any two consecutive vertices on a road are connected by an edge . in this work , </S>",
    "<S> we analyze the problem of collision free traffic configuration in a @xmath3 . </S>",
    "<S> a traffic configuration is a two - tuple @xmath4 , where @xmath5 is a set of cars travelling on a pre - defined path . </S>",
    "<S> we prove that finding a maximum cardinality subset @xmath6 such that @xmath7 is collision - free , is np - hard . </S>",
    "<S> lastly we investigate the properties of connectedness , shortest paths in a @xmath3 . </S>"
  ]
}
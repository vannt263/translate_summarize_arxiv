{
  "article_text": [
    "graph codes have been studied and analyzed in past , in order to try and find codes that give good error correction capability at high code rates @xcite , @xcite , @xcite . at the same time , from a practical implementation point of view , such codes require to have decoding and encoding algorithms that are efficient in terms of speed and hardware complexity .    _ expander codes _ , first suggested by sipser and spielman @xcite , proved to be theoretically capable of providing asymptotically good codes that were decodable in logarithmic time and could be implemented with a circuit whose size grew linearly with code size .",
    "these codes are constructed using a special graph , known as _ expander graph _ , and by embedding identical component codes at the nodes of this graph .",
    "@xcite analyzed the properties of expander codes , and specified lower bound on the number of errors that will always be corrected by one decoding algorithm .",
    "zemor , in his analysis in @xcite , suggested using _",
    "bipartite ramanujan _ graphs for constructing expander codes .",
    "he also provided a decoding algorithm which improved the lower bound in @xcite by a factor of 12 . in @xcite , hoholdt and justesen built on the work of tanner on graph codes , by suggesting the use of reed solomon codes as sub - codes for graphs derived from point - line incidence relations of projective planes . the decoding speed and ease of implementation , combined with error - correction performance that was scalable with increasing graph size made all these codes interesting , while considering applications related to secondary storage .    by definition , the sub - code length should remain constant , as the order of ( bipartite ) expander graph increases , during construction of a family of expander codes . for performance reasons",
    "described later , we choose to increase the sub - code length as well .",
    "hence our codes may not be called expander codes , but just graph - based , or codes . the presented work",
    "thus deals with the construction and analysis of an _ expander - like _ code , which is based on a special _ bipartite ramanujan _ graph .",
    "this bipartite graph is derived from point - hyperplane incidence relations of projective spaces of * higher dimensions * than those suggested by @xcite .",
    "we look at various properties of the codes , and in the process come across several _ generic _ interesting properties of projective geometry . also , we wanted the codes to be _ practically useful_. hence , in a companion paper , we present throughput - optimal vlsi design of decoder for such codes@xcite .    for decoding",
    ", we employ a variation of zemor s algorithm . by simulations using this algorithm",
    ", we found that the codes have excellent robustness to _ random _ as well as _",
    "burst _ errors .",
    "hence we envisage their application in data storage systems .",
    "the next section provides the basic properties of cardinalities of projective geometry that we will be using .",
    "section 3 gives relevant background information for the various concepts required in this paper .",
    "section 4 describes our code construction in detail .",
    "sections 5 - 11 give the characterization of error - correction capability for these codes , including proofs of propositions relating to bounds on error correction capacity .",
    "the remaining sections detail out the prototyping results , and also the application to two types of storage media ( namely cd - roms and dvd - r ) , before concluding the paper .",
    "in this section , we look at how finite projective spaces are generated from finite fields . for more details , refer @xcite .",
    "consider a finite field @xmath0 @xmath1 with @xmath2 elements , where @xmath2 is a power of a prime number @xmath3 i.e. @xmath4 , @xmath5 being a positive integer .",
    "a projective space of dimension @xmath6 is denoted by @xmath7 and consists of one - dimensional subspaces of the @xmath8-dimensional vector space over @xmath9 ( an extension field over @xmath9 ) , denoted by @xmath10 .",
    "elements of this vector space are of the form @xmath11 , where each @xmath12 .",
    "the total number of such elements are @xmath13 = @xmath14 .",
    "an equivalence relation between these elements is defined as follows .",
    "two non - zero elements @xmath15 , @xmath16 are _ equivalent _ if there exists an element @xmath17 gf@xmath18 such that @xmath19 .",
    "clearly , each equivalence class consists of @xmath2 elements of the field ( @xmath20 non - zero elements and @xmath21 ) , and forms a one - dimensional subspace .",
    "such 1-d vector subspace corresponds to a * point * in the projective space .",
    "points are the zero - dimensional subspaces of the projective space .",
    "therefore , the total number of points in @xmath7 are @xmath22 an @xmath23-dimensional subspace of @xmath7 consists of all the one - dimensional subspaces of an @xmath24-dimensional subspace of the vector space",
    ". the basis of this vector subspace will have @xmath24 linearly independent elements , say @xmath25 .",
    "every element of this subspace can be represented as a linear combination of these basis vectors .",
    "@xmath26 clearly , the number of elements in the vector subspace are @xmath27 .",
    "the number of points in the @xmath23-dimensional projective subspace is given by @xmath28 defined in earlier equation .",
    "various properties such as degree etc . of a @xmath29-dimensional projective subspace",
    "* remain same * , when this subspace is _ bijectively _ mapped to some @xmath30-dimensional projective subspace .",
    "the two sets of these subspaces , one for each dimension , are said to be .",
    "the number of * d*-dimensional projective subspaces of a * m*-dimensional projective space can be counted using the _",
    "gaussian coefficient_. @xmath31 for @xmath32 , the number of @xmath33-dimensional projective subspaces contained in an @xmath29-dimensional projective subspace is @xmath34 , while the number of @xmath29-dimensional projective subspaces containing a particular @xmath33-dimensional projective subspace is @xmath35 .",
    "it is a well - known fact that the lattice of subspaces in any projective space is a * modular , geometric lattice * @xcite .",
    "a projective space of dimension 2 is shown in figure [ pg_lat ] . in the figure",
    ", the top - most node represents the _ supremum _ , which is a projective space of dimension * m * in a lattice for @xmath36 .",
    "the bottom - most node represents the _ infimum _ , which is a projective space of ( notational ) dimension -1 .",
    "each node in the lattice as such is a projective subspace , called a * flat*. each horizontal level of flats represents a collection of all projective subspaces of @xmath36 of a particular dimension .",
    "for example , the first level of flats above infimum are flats of dimension 0 , the next level are flats of dimension 1 , and so on .",
    "some levels have special names .",
    "the flats of dimension 0 are called _ points _ , flats of dimension 1 are called _ lines _ , flats of dimension 2 are called planes , and flats of dimension ( m-1 ) in an overall projective space @xmath36 are called _",
    "expander codes are a family of asymptotically good , linear error - correcting codes @xcite .",
    "they can be decoded in sub - linear time(proportional to * log(n ) * , where * n * is length of codeword ) using _ parallel _ decoding algorithms .",
    "further , this can be achieved using identical _ component _ decoders , whose count is proportional to * n*. these codes are based on a class of graphs known as _",
    "expander graphs_. one construction of expander graph , used in construction of expander codes , is by considering the edge - vertex incidence graph @xmath37 of a * d*-regular graph @xmath38 .",
    "the edge - vertex incidence graph of @xmath39 , a ( 2,d)-regular bipartite graph , has vertex set @xmath40 and edge set @xmath41 vertices of @xmath37 corresponding to edges e of @xmath38 are then associated to _",
    "variables _ , while vertices of @xmath37 corresponding to vertices of @xmath38 are associated to constraints on these variables .",
    "each constraint corresponds to a set of _ linear _ restrictions on the * d * variables that are its neighbors . in particular",
    ", a constraint will require that the variables it restricts form a codeword in some linear code of length * d*. this constraint forms the * sub - code * for that expander code .",
    "further , all the constraints are required to impose * isomorphic * codes ( on different variables , of course ) .",
    "the default construction of a family of expander codes requires * d * to remain constant , as the order of @xmath38 increases .",
    "formally , let @xmath37 be a ( 2,d)-regular graph between set of *",
    "n * nodes called _ variables _ , and @xmath42**n * * nodes called _ constraints_. let _",
    "z(i , j ) _ be a function such that for each constraint @xmath43 , the variables neighboring @xmath43 are @xmath44 .",
    "let @xmath45 be an error - correcting code of block length * d*. the expander code @xmath46 is the code of block length * n * whose codewords are the words @xmath47 such that , for 1 @xmath48 @xmath49 @xmath48 @xmath42**n * * , @xmath50 is a codeword of @xmath45 .",
    "an expander graph is a graph in which every set of vertices has an unusually large number of neighbors .",
    "more formally , + let @xmath38 = ( @xmath51 ) be a graph with * n * vertices . then the graph @xmath38 is a @xmath52-expander , if every set of _ at most _ * m * vertices expands by a factor of @xmath52 .",
    "that is , @xmath53 expander codes being a subclass of ldpc codes , for whom efficient iterative decoding using variables and constraints a bipartite graph is feasible , we are interested mainly in bipartite expander graphs .",
    "the degree of  goodness \" of expansion , especially for regular graphs , can also be measured using its eigenvalues .",
    "the largest eigenvalue of a * k*-regular graph is * k*. if the second largest eigenvalue is _ much smaller _ from the first ( * k * ) , then the graph is known to be a good expander @xcite .      as pointed out earlier ,",
    "the decoding algorithm for such codes is _",
    "iterative_. hence good expander codes imply _ at least _ the following properties .    *",
    "better minimum distance than other codes of same length , * fast convergence , and * better code rate than other codes in the same class    good codes having the above properties can be identified with help of three theorems proved in @xcite . for the theorems , we assume that an expander code @xmath54 has been constructed having @xmath45 as a linear code of rate * r * , block length * d * , and minimum distance @xmath55 , and @xmath37 as the edge - vertex incidence graph of a * d*-regular graph @xmath38 with second - largest eigenvalue @xmath56 .",
    "[ 1theor ] the code @xmath54 has rate at least 2**r * * - 1 , and minimum relative distance at least @xmath57 .    [ 2theor ] if a parallel decoding round for @xmath46 , as given in @xcite , is given as input a word of relative distance @xmath58 from a codeword , then it will output a word of relative distance at most @xmath59 from that codeword .",
    "[ 3theor ] for all @xmath55 such that 1- 2h(@xmath55 ) @xmath60 0 , where h(@xmath61 ) is the binary entropy function , there exists a polynomial - time constructible family of expander codes of rate 1 - 2h(@xmath55 ) and minimum relative distance arbitrarily close to @xmath62 in which any @xmath58 @xmath63 @xmath62/48 fraction of error can be corrected by a circuit of size o(n log n ) and depth o(log",
    "n ) .    from theorem [ 1theor ]",
    ", we observe that to have high minimum relative distance , we should have _ @xmath55 as high _ , and _",
    "@xmath64 as low_. since @xmath37 has been constructed out of * d*-regular graph @xmath38 , low @xmath64 signifies high distance between first and second eigenvalues , i.e. the graph @xmath38 has to be a  good \" expander graph .",
    "further , to have high rate , @xmath45 has to have a _ high rate * r * as well _ , other than having _ high minimum relative distance @xmath55_.    from theorem [ 2theor ] , we observe that to shrink the distance of input word after one iteration maximally , we need to again have _ @xmath55 as high _ as possible , and _",
    "@xmath64 as low _ as possible",
    ". such maximal shrinking of distance , per iteration , leads to the fastest convergence possible , as is also brought out in the proof of theorem [ 3theor ] .    from theorem [ 3theor ] , we observe that to be able to correct as high fraction of errors as possible , we need to have _ @xmath55 as high _ as possible , again .    as an aside",
    ", @xmath64 is low whenever * d * is high . in pg - based bipartite graphs ,",
    "* d * does increase , as * n * increases ( hence _ expander - like _ codes ) , which hence helps in making the overall code advantageous over classical expander codes .",
    "zemor pointed out @xcite that if @xmath38 is a bipartite graph , then the % of random errors that can be corrected using a parallel iterative decoding algorithm can be * increased twelve - fold*. he also pointed out that the upper bound on minimum distance , as pointed out in theorem [ 1theor ] , can also be achieved faster , if one considers _ ramanujan graphs _ ( since @xmath64 value is low for these graphs ) .",
    "overall , he suggested using bipartite ramanujan graphs for construction of good expander codes instead .",
    "balanced regular bipartite graphs @xmath65 , which are _ symmetric balanced incomplete block designs(bibds ) _ are known to be ramanujan graphs @xcite .",
    "incidence relations of projective geometry structures give such bibds , and hence ramanujan graphs .",
    "usage of projective plane as @xmath65 along with rs codes as component codes to construct good expander - like graph codes was first reported in @xcite . for our work ,",
    "we * do not limit * to projective planes : to have better performance , we have made use of point - hyperplane incidence graphs from higher dimensional projective spaces , which also satisfy the eigenvalue properties that make a ramanujan graph .",
    "some reasons for using projective geometry are as follows .    *",
    "as detailed in a companion paper @xcite , the mapping of vertices to points and hyperplanes enables us to use several projective geometry properties for _ disproving the existence of certain bipartite subgraphs of a fixed minimum degree_. this strategy leads us to finding the minimum number of vertices required to form a complete bipartite subgraph of a given minimum degree .",
    "this number of vertices is required to calculate tight * geometric bounds * for error correction capability of the overall code .",
    "thus , we do nt need to use complicated eigenvalue arguments used by @xcite and @xcite .",
    "also , the bounds obtained in this manner are better than our predecessors .",
    "furthermore , zemor had restricted the subcodes to be constrained by @xmath66 , @xmath56 being the second largest eigenvalue of the graph .",
    "we have _ no such restriction_. * the use of projective geometry also helps in developing a perfect _ folded architecture _ of the decoder for hardware implementation , discussed later in section [ results_sec ] .",
    "this particular folding enables efficient utilization of processors and memories , while being throughput - optimal .      by choosing a  good expander \" graph , and fixing a code with high minimum relative distance @xmath55 , one can design code having the first two properties described in section [ good_code_sec ] . to simultaneously have high code rate for @xmath46 ,",
    "the component code @xmath45 also needs to have high rate * r*. _ reed - solomon _ codes are a class of non - binary , linear codes , which for a given rate , have the best minimum relative distance(so - called _ maximum distance separable",
    "_ codes ) , * and vice - versa*. hence we use rs codes as the sub - codes to our expander - like codes .      to construct an expander - like code ,",
    "we follow @xcite .",
    "we generate a * balanced regular bipartite graph * @xmath38 from a projective space . a projective space of dimension *",
    "n * over @xmath67 , @xmath68 , has at least following two properties , arising out of inherent duality :    1 .",
    "the number of subspaces of dimension @xmath23 is equal to the number of subspaces of dimension ( @xmath69 ) .",
    "2 .   the number of @xmath23-dimensional subspaces incident on each ( @xmath69)-dimensional subspace is equal to the number of ( @xmath69)-dimensional subspaces incident on each @xmath23-dimensional subspace .",
    "we associate one vertex of the graph with each @xmath23-dimensional subspace and one with each ( @xmath69)-dimensional subspace .",
    "two vertices are connected by an edge if the corresponding subspaces are incident on each other .",
    "as edges lie only between subspaces of different dimensions , the graph is bipartite with vertices associated with @xmath23-dimensional subspaces forming one set and vertices associated with ( @xmath69)-dimensional subspaces forming another . also , the two properties , listed above , ensure that both the vertex sets have the same number of elements and that each vertex has the same degree . to be able to quantify various properties of the constructed code , we hereafter specifically consider the graph , @xmath70 , obtained by taking the points and hyperplanes of @xmath71 . in this projective space",
    ", the number of points (= number of hyperplanes ) is @xmath72 .",
    "each point is incident on @xmath73 hyperplanes and each hyperplane has @xmath74 points .",
    "therefore , we have @xmath75 and @xmath76 .",
    "this implies that the block length of code @xmath77 is @xmath78 and the number of constraints in the code is @xmath79 .",
    "the second eigenvalue of @xmath38 , @xmath56 is 4 , according to a formulae by @xcite .",
    "hence the ratio @xmath64 is quite small , as required for design of  good \" expander codes .    as the expander graph",
    "@xmath38 is @xmath80-regular , the block length of the component code must also be @xmath80 @xcite .",
    "we choose the @xmath80-symbol _ shortened reed solomon code _ as the component code , with each symbol consisting of eight bits . to have performance advantage , we also @xcite as follows .",
    "if a particular vertex detects more errors than it can correct , we skip the decoding for that vertex . in zemor",
    "s algorithm , the decoding is still carried out in such case , which can lead to possibly getting a ( different ) codeword with more errors .",
    "the modification is possible because it is possible to compute , as a _ side output _ using berlekamp - massey s algorithm for rs decoding@xcite , whether the degree of errors in the current input block of symbols to the decoder be corrected or not . if not",
    ", then the algorithm can be made to skip decoding , thus preserving the errors in the input block .",
    "this _ variation in decoding _ will reduce the number of extra errors introduced by that vertex if the decoding fails . based on this decoding algorithm , a matlab model of decoder",
    "was first made , to observe code s performance as discussed next .",
    "to benchmark the error - correction performance in wake on _ random errors _ , we varied the minimum distance of the component code , and simulated the matlab decoder model .",
    "random symbol errors were introduced at random locations of the zero vector .",
    "convergence of the decoder s output back to the zero vector was checked after simulation . as our code is linear ,",
    "the performance obtained in testing for zero vector is valid for the entire code .",
    "since the errors were introduced at random locations , simulations were run over _ many different rounds _ of decoding for different _ pseudo - random sequences _ as inputs , and _ averaged _ , to get reliable results .",
    "these sequences differ in random positions in which the errors are introduced .",
    "each round of decoding for particular input further involves several iterations of execution of decoding algorithm .",
    "one iteration of decoding corresponds to both sides of the bipartite graph to finish decoding the component codes .",
    "it is _ observed experimentally _ that in case of a decoding failure , beyond 4 iterations , the number of errors in the codeword stabilizes(referred to as _ fixed point _ in @xcite ) . in the first few iterations , as the number of errors decrease in the overall code in a particular iteration , the number of errors _ on average _ to be handled by rs decoders in next iteration is lesser .",
    "hence probabilistically , and experimentally , these component decoders converge faster , thus _ increasing _ the percentage of errors being corrected in its next iteration . however , after maximum 4 iterations , it was seen that there is no further reduction in errors .",
    "this phenomenon could most probably be attributed to infinite oscillations of errors in an embedded subgraph , to be described in next section .",
    "hence we have fixed the stopping threshold of decoder to _ exactly 4 iterations _ not only in simulation , but also in the practical design of a cd - rom decoder . in simulation , if there are non - zero entries remaining after 4 iterations , then the decoding is considered to have failed . in real life , if one or more component rs decoders fail to converge at 4th iteration , then again decoding is considered to have failed .",
    "the results of our simulations are presented in tables [ tab:1 ] and [ tab:2 ] .",
    "the component codes used for these simulations have minimum distance as 5 and 7 , respectively .",
    "the  failures \" column represents the percentage of failed decoding attempts .",
    "the  average number of iterations \" column signifies the _ average _ number of iterations required for successful decoding of a corrupt codeword , over various rounds .",
    ".random errors ( @xmath81 ) [ cols=\"^,^,^\",options=\"header \" , ]      for a 72x cd - rom read system , the required data transfer rate is @xmath82 .",
    "recall from section [ results_sec ] that the decoder for our codes achieved a throughput of @xmath83 125 @xmath84 .",
    "hence , this decoder using our codes can easily be incorporated without hurting throughput . moreover , in an asic implementation , we would expect the performance to be better .      the same class of codes",
    "can also be applied to evolve encoding and decoding for dvd - rom . the main error correction in dvd - r",
    "is provided by the rspc block @xcite , which consists of an inner rs(182,172,11 ) code and an outer rs(208,192,17 ) code .",
    "the inner code can detect and correct up to 5 errors , while the outer code can detect and correct 8 errors .",
    "a detailed analysis shows @xcite that without considering erasure decoding , we can still detect and correct @xmath85 errors in a burst , in one block of 37856 bytes .",
    "if we allow for the inner decoding to mark as * erasures * , @xmath86 bytes errors can be corrected .    as an alternate decoding scheme , we substitute the rspc stage of the dvd encoding by encoders of code @xmath77 .",
    "these encoders are therefore employed during the transformation of _ data frames _ into _ recording frames_. we can replace the rspc stage with a expander - like code encoder / decoder , made from point - hyperplane graph of @xmath87 , and component rs(255,239,17 ) codes .",
    "the overall burst error correction capability _ without erasures _ turns out to be @xmath88 bytes , which is much greater than 2922 .",
    "as far as random errors are concerned , matlab simulation results show that around 1990 random errors are always corrected in one iteration of the decoding itself .",
    "the existing standard specifies that the number of random errors in 8 consecutive ecc blocks must be less than or equal to 280 .",
    "the complete details of this scheme can be found in @xcite .",
    "this particular application of our codes also brings out the fact that taking a bipartite graph @xmath38 from a _ higher - dimensional _ projective space can be advantageous in terms of better rate and better error correction capacity .",
    "we have presented the construction and performance analysis for an expander - like code that is based on a bipartite graph .",
    "the graph , derived from the incidence relations of projective spaces , offers unique advantages in terms of deriving lower bounds on error correction capabilities .",
    "there are also fundamental advantages in terms of hardware design of decoder for this code .",
    "as the size of the graph increases , practical implementation of the decoder becomes difficult .",
    "projective geometry , through lattice embedding properties , offers a natural way of efficient folding the computations which leads to using fewer processors , while guaranteeing throughput - optimality @xcite .",
    "the error - correction performance of our codes is better than previously stated in literature .",
    "this is because it relaxes some restrictions that were imposed with respect to the second largest eigenvalue of the graph .",
    "derivation of bounds of error correction have been presented , and the _ average case performance _ of the code is shown to be up to 10 times better through simulations . moreover",
    ", the code has special implicit interleaving due to the numbering of the edges .",
    "this offers great advantage in burst error corrections .",
    "a natural application of these codes with respect to data storage media ( namely cd - roms and dvd - r ) has been explored .",
    "we have presented schemes that improve the burst error performance in comparison to existing standards .",
    "the hardware design for the decoder has been completely worked out .",
    "we use xilinx rs decoder ips as the processors .",
    "the computations have been efficiently folded in order to make them fit on a xilinx lx110 t fpga .",
    "we have tested the design on the fpga and also exploited the erasure correction ability of the rs code . moreover ,",
    "a general folding strategy has been developed for higher dimensions of projective geometry that provides a methodology for practically implementing decoders of higher dimensions .",
    "overall , we believe that further research should establish even more usefulness of our expander - like codes .",
    "10 [ 1]#1 url@samestyle [ 2]#2 [ 2]l@#1=l@#1#2    t.  hoholdt and j.  justensen , `` graph codes with reed - solomon component codes , '' _ international symposium on information theory _ , pp . 20222026 , 2006 .",
    "t.  hoholdt and h.  janwa , `` optimal bipartite ramanujan graphs from balanced incomplete block designs : their characterizations and applications to expander / ldpc codes , '' _ international symposium on applied algebra , algebraic algorithms and error - correcting codes _ , 2009 .",
    "g.  zemor , `` on expander codes , '' _ ieee transactions on information theory _ , vol .",
    "47 , no .  2 ,",
    "pp . 835837 , 2001 .",
    "m.  sipser and d.  spielman , `` expander codes , '' _ ieee transactions on information theory _ , vol .",
    "42 , no .  6 , pp . 17101722 , 1996 .",
    "s.  choudhary , h.  sharma , and s.  patkar , `` optimal folding of data flow graphs based on projective geometry , '' _ submitted to world scientific journal of discrete mathematics , algorithms and applications _ , 2011 .",
    "h.  sharma , `` exploration of projective geometry - based new communication methods for many - core vlsi systems , '' ph.d .",
    "dissertation , iit bombay , 2012 .",
    "y.  m. chee and s.  ling , `` highly symmetric expanders , '' _ finite fields and their applications _ , vol .  8 , no .  3 , pp .",
    "294  310 , 2002 .    j.  b. anderson and m.  seshadri , _ source and channel coding : an algorithmic approach_.1em plus 0.5em minus 0.4emkluwer academic publishers , 1991 .",
    "a.  barg and g.  zemor , `` error exponents of expander codes , '' _ ieee transactions on information theory _ , vol .",
    "48 , no .  6 , 2002 .",
    "s.  choudhary , `` a system for error - control coding using expander - like codes , and its applications , '' master s thesis , indian institute of technology bombay , 2010 .",
    "b.  adiga , s.  choudhary , h.  sharma , and s.  patkar , `` system for error control coding using expander - like codes constructed from higher dimensional projective spaces , and their applications , '' indian patent requested ,",
    "september 2010 , 2455/mum/2010 .",
    "_ standard ecma-130 : data interchange on read - only 120 mm optical data disks ( cd - rom ) _ , http://www.ecma-international.org/ , 1996 .",
    "_ iso / iec 23912:2005 , information technology  80 mm ( 1,46 gbytes per side ) and 120 mm ( 4,70 gbytes per side ) dvd recordable disk ( dvd - r ) _ , iso , international organization for standardization , and iec , international electrotechnical commission , 2005 .",
    "before going into details of the proof , we need to establish certain * cardinalities * related to @xmath89(5,@xmath90(2 ) ) . from the discussion in section [ pg_intro ] , we get the following .    1",
    ".   any line in this space is defined by any 2 points . the unique third point lying on the lines",
    "is determined by linear combination of corresponding one - dimensional subspaces .",
    "hereafter , a line will be represented as a tuple @xmath91a , b , a+b@xmath92 .",
    "2 .   similarly , or dually , 3 hyperplanes intersect in a particular 4-d projective subspace , or flat .",
    "any plane in this space is defined by 3 non - collinear points , and their 4 unique linear dependencies in the corresponding vector space .",
    "hereafter , a plane will be represented as @xmath91a , b , c , a+b , b+c , a+c , a+b+c@xmath92 , with the non - canonical choice of non - collinear points within this plane being implicit as @xmath91a , b , c@xmath92 .",
    "a plane contains 7 lines , thus being a fano plane .",
    "a plane is reachable from 7 hyperplanes and 7 points in the corresponding lattice structure through transitive join and meet operations .",
    "such an hourglass structure will be critical in our proofs .",
    "similarly , a hyperplane is reachable from 31 points : 5 of them being independent , and others representing the linearly dependent vectors on these .",
    "proving the two theorems of section [ props ] is done by demonstrating how one can incrementally construct an embedded bipartite subgraph , by improving over minimum degree of a smaller subgraph .",
    "this requires looking at the planes involved in the construction of the embedding .    in the construction of bipartite graph mentioned in section [ code_sec ]",
    ", there exists no embedded subgraph having size of partitions as 9 , the degree of each of whose vertices has a minimum degree(@xmath52 ) of 8 .",
    "assume that such a subgraph exists .",
    "then by lemma [ 9_8 ] , any 3 points have at least 6 hyperplanes in common , and vice - versa . by lemma [ 4ind ] ,",
    "the set of 9 points contains at least 3 non - collinear points .",
    "the 6 common hyperplanes to them in the subgraph must contain the ( unique ) plane defined by the points . if one of the points is contained in some different plane , then by lemma [ 3overlap ]",
    ", this point can only be reachable from maximum 3 hyperplanes belonging to the first plane , and not ( all ) 6 common hyperplanes , a contradiction .",
    "again , from lemma [ 4ind ] , one can pick a subset of 3 independent hyperplanes out of these 6 common hyperplanes . by dual arguments",
    ", these 3 hyperplanes also must have 6 points in common , reachable from a single unique plane defined by the 3 hyperplanes .",
    "thus , a 6-a - side bipartite subgraph with reachability defined by a single plane of the underlying projective space , is embedded in the 9-a - side bipartite subgraph we are trying to construct .",
    "_ case 1 : _ out of the remaining 3 points(hyperplanes ) in the 9-a - side subgraph , we can at most choose 1 point such that it is contained in all the 6 hyperplanes .",
    "this 1 point is the @xmath93 point on the 7 - 7 hourglass passing through a single plane .",
    "it also involves the remaining @xmath93 hyperplane being incident on all these 6 + 1 points .",
    "the remaining 2 points are necessarily part of at least one other plane .",
    "this configuration of 2 remaining points and 2 remaining hyperplanes may maximally form a @xmath94 complete induced subgraph by considering whichever number of intervening planes . in terms of their minimum degree , these 2 remaining points , by lemma 3overlap , can at maximum be reachable from 3 more hyperplanes reachable from plane @xmath95 .",
    "hence the maximum degree these two points achieve is 5 , in any possible construction .",
    "this contradicts the presence of assumed subgraph having @xmath52 of 8 .",
    "_ case 2 : _ on similar lines , if we choose the 3 remaining points and hyperplanes apart from the 6-a - side subgraph to form a complete bipartite subgraph @xmath96 by any construction , then again by lemma [ 3overlap ] , they can at maximum be reachable from 3 more hyperplanes , reachable from plane @xmath95 .",
    "in such a case , they maximally achieve a minimum degree of 6 , which is still lesser than requirement of 8 .",
    "in the construction of bipartite graph mentioned in section [ code_sec ] , there exists no embedded subgraph having size of partitions as 10 , the degree of each of whose vertices has a minimum degree(@xmath52 ) of 8 .",
    "assume that such a subgraph exists .",
    "then by lemma [ 10_8 ] , any 3 points have at least 4 hyperplanes in common , and vice - versa . by lemma [ 4ind ] ,",
    "the set of 10 points contains at least 3 non - collinear points .",
    "the 4 common hyperplanes to them in the subgraph must contain the ( unique ) plane defined by the points . if one of the points is contained in some different plane , then by lemma [ 3overlap ] , this point can only be reachable from maximum 3 hyperplanes belonging to the first plane , and not ( all ) 4 common hyperplanes , a contradiction . again , from lemma [ 4ind ] , one can pick a subset of 3 independent hyperplanes out of these 4 common hyperplanes . by dual arguments , these 3 hyperplanes also must have 4 points in common , reachable from a single unique plane defined by the 3 hyperplanes .",
    "thus , a 4-a - side bipartite subgraph with reachability defined by a single plane of the underlying projective space , is embedded in the 10-a - side bipartite subgraph we are trying to construct .",
    "+ by considering only one intervening plane , we can maximum go upto 7-a - side subgraph only . hence to construct 10-a - side graph , we need to consider at least one more plane in the construction .",
    "we now individually consider the cases where the maximum number of points taken from any one of the planes is n : @xmath97 .",
    "_ case 1 : _ assume that the maximally possible set of 7 points and some number of hyperplanes are taken from the plane @xmath95 intervening the 4-a - side subgraph already present .",
    "the number of hyperplanes considered from @xmath95 could therefore be anywhere between 4 and 7 .",
    "hence we need to consider at least one more intervening plane between the remaining hyperplanes(minimum : 3 , maximum : 6 ) and the 3 remaining points . in the best possible construction ,",
    "these remaining hyperplanes and points form a biclique .",
    "then , any particular hyperplane from this biclique is reachable from a maximum of all 4 points of this biclique , plus at maximum 3 more points of plane @xmath95 ; refer lemma [ 3overlap ] .",
    "hence the degree requirement of these hyperplanes is unsatisfiable using a 7- * partition of the 10-point set , a contradiction .",
    "_ case 2 : _ next , assume that 6 points and some number of hyperplanes are taken from the plane @xmath95 intervening the 4-a - side subgraph already present",
    ". the number of hyperplanes considered from @xmath95 could therefore be anywhere between 4 and 7 .",
    "hence again we need to consider at least one more intervening plane between the remaining hyperplanes(minimum : 3 , maximum : 6 ) and the 4 remaining points . in another",
    "best possible construction , these remaining hyperplanes and points form a biclique .",
    "then , any particular hyperplane from this biclique is reachable from a maximum of all 4 points of this biclique , plus at maximum 3 more points of plane @xmath95 ; refer lemma [ 3overlap ] .",
    "hence the degree requirement of these hyperplanes is unsatisfiable using a 6- * partition of the 10-point set , a contradiction .",
    "_ case 3 : _ next , assume that 5 points and some number of hyperplanes are taken from the plane @xmath95 intervening the 4-a - side subgraph already present",
    ". the number of hyperplanes considered from @xmath95 could therefore be anywhere between 5 and 7 . hence again",
    "we need to consider at least one more intervening plane between the remaining hyperplanes(minimum : 3 , maximum : 5 ) and the 5 remaining points .",
    "+ first , we claim that under this case , a subgraph @xmath98 having one intervening plane always exists . to see that ,",
    "let s take the lone boundary case where 5 points and 4(minimum ) hyperplanes are taken from plane @xmath95 , and hence a @xmath98 biclique is not provided by incidences of @xmath95 . then",
    ", the remaining 6 hyperplanes must belong to plane / s different from @xmath95 . by lemma [ 3overlap ]",
    ", they can at maximum be reachable from 3 of the 5 points reachable from @xmath95 . to satisfy their requirement @xmath99 , they should therefore be reachable to all 5 of the remaining points .",
    "hence the set of 6 remaining hyperplanes and 5 remaining points form a @xmath100 biclique , and hence also @xmath98 . by lemma [ 4ind ] and",
    "the fact that a plane formed by 3 independent points is reachable from 7 hyperplanes , which is simultaneously minimum and maximum , this @xmath98 biclique contains exactly 1 intervening plane different from @xmath95 .",
    "+ by abuse of notation , let s call the plane intervening the always - present @xmath98 subgraph as @xmath95 .",
    "then , at maximum 7 hyperplanes can be considered from @xmath95 in the construction , and hence 3 , 4 or 5 hyperplanes and remaining 5 points need to be added to @xmath98 by considering other planes . in case",
    "when either 3 or 4 hyperplanes are considered from other planes , the set of 5 remaining points can not have their degree requirements satisfied .",
    "for , these points can be reachable from maximum 4 hyperplanes from other planes , and maximum 3 more , considering plane @xmath95(refer lemma [ 3overlap ] ) .",
    "hence we look into the case when 5 hyperplanes , and 5 points are considered by looking into other planes .",
    "+ in this case , each hyperplane out of 5 remaining hyperplanes needs to be reachable from 3 different points reachable from @xmath95 .",
    "these 3 different points can not be independent , for if they were , then the corresponding hyperplane would have been on @xmath95 rather than any other plane .",
    "hence each one out of 5 such collections of 3 points forms a line . given a plane in @xmath101 having its point set as @xmath91a , b , c , a+b , b+c , a+c , a+b+c@xmath92 , it is immediately obvious that no subset of 5 points contains 5 different lines .",
    "in fact , to have 5 different lines contained in some point subset , the minimum size of the subset required is 7 .",
    "hence all possible constructions in this case leaves at least one hyperplane not having its degree requirement satisfied , a contradiction .",
    "_ case 4 : _ finally , assume that 4 points and some number of hyperplanes are taken from the plane @xmath95 intervening the 4-a - side subgraph already present",
    ". the number of hyperplanes considered from @xmath95 could therefore be anywhere between 4 and 7 .",
    "hence again we need to consider at least one more intervening plane between the remaining hyperplanes(minimum : 3 , maximum : 6 ) and the 6 remaining points .",
    "we consider following two cases .",
    "@xmath102    in this case , we assume that the remaining 6 points contain at least one subset of size 3 forming a line .",
    "at least one point out of 3 remaining points of this 6-set will be not be part of this line(a line has maximum 3 points in @xmath101 ) .",
    "this point and the line therefore form a plane @xmath103 , which is maximal , by our assumption in case 4 . since in this case , _ any 3 _ points will have at least 4 common hyperplanes to satisfy their degree requirements , the 3 independent points of plane @xmath103 will have 4 hyperplanes in common , and vice - versa .",
    "the remaining 2 hyperplanes , hereafter referred as @xmath104 and @xmath105 , do not contain both @xmath95 and @xmath103 .",
    "more formally , by lemmas [ ptoverlap ] and [ lem5 ] , the best case occurs when +   @xmath106 @xmath107 + hence these hyperplanes can be reachable from a maximum of 6 points reachable from @xmath95 and @xmath103 .",
    "in fact , they need to be reachable from exactly 6 to satisfy their degree requirements .",
    "this reachability from 6 points by each of the 2 hyperplanes must consist of reachability from one line each from planes @xmath95 and @xmath103 .",
    "+ by lemmas [ ptoverlap ] and [ lem5 ] , the intersecting lines of @xmath104 and @xmath105 to say , @xmath95 , can not be the same . in a plane of @xmath101 denoted as @xmath91a , b , c , a+b , b+c , a+c , a+b+c@xmath92",
    ", one can clearly see that to accommodate 2 different lines , one needs to consider a subset of at least 5 points .",
    "this contradicts our construction in which we originally had 2 collections of 4 points each contained in two planes .    in this case",
    ", we assume that the remaining 6 points do not contain any subset of size 3 which is dependent .",
    "this means that any subset of triplet of points from among these define a plane .",
    "so we will arbitrarily consider two disjoint triplets from this 6 remaining points , and consider their planes @xmath103 and @xmath108 .",
    "also note that points from triplet of @xmath103 do not lie on @xmath108 , and vice - versa . for",
    ", we are assuming in this sub - case that 4 coplanar points do not exist among these 6 remaining points . again in this case , _ any 3 _ points will have at least 4 common hyperplanes to satisfy their degree requirements , and vice - versa .",
    "hence we again have 4 points and hyperplanes being considered in construction , for each of the planes @xmath95 , @xmath103 and @xmath108 .",
    "note that there may be common points and hyperplanes used in this construction .",
    "we consider 2 separate sub - subcases    @xmath109    in this case , all the 10 hyperplanes of the required graphs lie within the set of union of sets of 4 hyperplanes each being considered per plane .",
    "+ consider the 3 independent points of the triple of plane @xmath103 .",
    "none of these points can be same , or linear combination of any point reachable from plane @xmath95 .",
    "these 3 points were earlier also illustrated to be independent , and hence not reachable from @xmath108 as well .",
    "a join of plane @xmath95 and one different point reachable from plane @xmath103 in the corresponding lattice yields one different 3-d flat each , in the lattice . with respect to plane @xmath95",
    "where we are considering a set of 4 hyperplanes , it is obvious that in @xmath101 , at least 3 of these hyperplanes are independent . if the remaining hyperplane is dependent on 2 of these 3 , then a complete 3-d flat is reachable from this set of 4 hyperplanes . by lemma [ 3overlap ] ,",
    "any point of @xmath103 is reachable from at most 3 of the hyperplanes reachable from @xmath95 , that too when the 3 hyperplanes are part of a complete 3-d flat .",
    "hence it is possible that a particular point reachable from @xmath103 is also reachable from the unique 3-d flat , whenever it exists , and thus to the 3 hyperplanes of @xmath95 from this 3-d flat . since the join of different independent points of @xmath103 with plane @xmath95 gives rise to different 3-d flats , and",
    "since there is at most one 3-d flat embedded in the set of 4 hyperplanes being considered w.r.t .",
    "plane @xmath95 , at least two points reachable from plane @xmath103 can only be reachable from at most 2 hyperplanes reachable from plane @xmath95 .",
    "a similar conclusion can be reached with respect to the same 3 points of plane @xmath103 , and the hyperplanes reachable from @xmath108 , that are under consideration for this construction . in the best case ,",
    "2 distinct points out of the 3 points reachable from @xmath103 have a degree of 3 towards planes @xmath95 and @xmath108 , respectively .",
    "hence at least 1(the remaining one ) point reachable from plane @xmath103 is reachable from at most two hyperplanes each , reachable from planes @xmath95 and @xmath108 .",
    "a similar point can also be located on plane @xmath108 , the 3 points reachable from which have identical relation to the point sets of remaining 2 planes .",
    "+ without loss of generality , we further claim that at most 3 of the 10 hyperplanes used in construction remain outside of those considered for planes @xmath95 and @xmath108(or @xmath103 ) . when planes @xmath95 and @xmath108 are disjoint , they cover 8 of the 10 required hyperplanes of the construction .",
    "if the planes meet in a point , then by duality arguments , they also meet in a hyperplane .",
    "in which case , they cover 7 out of 10 required hyperplanes of the construction . if @xmath95 and @xmath108 meet in a line(the last possible scenario ) , then @xmath108 has 1 point exclusively belonging to itself . hence in all cases , either @xmath103 or @xmath108 has at most 3 points lying on it .",
    "on both these planes , we have located at least 1 point , which is reachable from at most 2 points each to the remaining 2 planes .",
    "hence in all scenarios , there exists at least one point , which can be reachable from at most 3 + 2 + 2 = 7 hyperplanes , thus invalidating the construction of this case .    in this case , all the 10 hyperplanes of the required graphs do not lie within the set of union of sets of 4 hyperplanes each being considered per plane .",
    "hence , there is at least 1 hyperplane that is not covered by planes @xmath95 , @xmath103 and @xmath108 , i.e. it is not reachable from either of these . by lemma [ 3overlap ] and",
    "the fact that in the assumption for this case , the triplet of points of @xmath103 and @xmath108 are not collinear , one can see that the points of the planes @xmath103 and @xmath108 provide degree at most 2 each to the above hyperplane .",
    "additionally , it may provide degree of / be reachable from maximum 3 points lying on plane @xmath95 . by considering the planes @xmath95 , @xmath103 and @xmath108 , we have exhausted all the points of the construction , and the maximum degree",
    "this particular hyperplane has achieved so far is 3 + 2 + 2 = 7 , that is clearly not sufficient .",
    "this section provides an _ easier , alternative _ approach towards deriving _ weaker _ upper bounds on random error correction capability of our code .",
    "this approach can be used for the extreme cases when one has to consider the code rate that is less than 0.1 ( equivalently , @xmath111 ) .",
    "the arguments in this approach are very similar to the ones given by @xcite .",
    "let @xmath112 be the @xmath113 x @xmath113 adjacency matrix of the bipartite graph @xmath114 of degree @xmath6 .",
    "that is , @xmath115 if there is an edge between the vertices indexed by @xmath49 and @xmath116 , and @xmath117 otherwise .",
    "let @xmath45 be the set of vertices of the graph @xmath38 that form the minimal configuration of failure .",
    "let @xmath118 be a column vector of size @xmath113 such that every coordinate indexed by a vertex of @xmath45 equals 1 and the other co - ordinates equal 0 .",
    "now , we have , @xmath119 where @xmath120 is the degree of vertex @xmath121 in the subgraph @xmath122 induced by the vertex set @xmath45 in @xmath38 .",
    "now , @xmath125 is orthogonal to @xmath123 and the eigenspace associated to the eigenvalue @xmath6 is of dimension 1 ( @xmath38 is connected ) .",
    "therefore , we have , @xmath134 where @xmath56 is the second largest eigenvalue of @xmath124 . considering the structure of @xmath125",
    "as explained above , we have , @xmath135 since we are looking for subgraphs in which the degree of each vertex is at least a certain value ( say @xmath136 ) , after combining the various equations and inequalities above , we get , @xmath137 finally , since @xmath138 , we can cancel it from both sides and the expression that we arrive at is , @xmath139 because of duality of points and hyperplanes , we get @xmath140 . thus , @xmath141 the above formula is also stated in @xcite in the context of finding the minimum distance of the code proposed by him using @xmath142 . in our case , the above formula should be used only for @xmath111 . for",
    "all practical values of @xmath55 ( @xmath63 15 ) , the combinatorial methods detailed earlier give a very tight bound ."
  ],
  "abstract_text": [
    "<S> we present a novel error correcting code and decoding algorithm which have construction similar to expander codes . </S>",
    "<S> the code is based on a bipartite graph derived from the subsumption relations of finite projective geometry , and reed - solomon codes as component codes . </S>",
    "<S> we use a modified version of well - known zemor s decoding algorithm for expander codes , for decoding our codes . by derivation of geometric bounds rather than eigenvalue bounds </S>",
    "<S> , it has been proved that for practical values of the code rate , the random error correction capability of our codes is much better than those derived for previously studied graph codes , including zemor s bound . </S>",
    "<S> matlab simulations further reveal that the average case performance of this code is 10 times better than these geometric bounds obtained , in almost 99% of the test cases . by exploiting the symmetry of projective space lattices , </S>",
    "<S> we have designed a corresponding decoder that has _ </S>",
    "<S> optimal throughput_. the decoder design has been prototyped on xilinx virtex 5 fpga . </S>",
    "<S> the codes are designed for potential applications in secondary storage media . as an application </S>",
    "<S> , we also discuss usage of these codes to improve the burst error correction capability of cd - rom decoder .    </S>",
    "<S> expander codes , bipartite graph , finite projective geometry . </S>"
  ]
}
{
  "article_text": [
    "information flow security is concerned with the ability of agents in a system to deduce information about the activity and secrets of other agents .",
    "an information flow security policy prohibits some agents from knowing information about other agents . in an insecure system , an agent may nevertheless be able to make inferences from its observations , that enables it to deduce facts that it is not permitted to know .",
    "in particular , a class of system design flaws , referred to as _ covert channels _ , provide unintended ways for information to flow between agents , rendering a system insecure .    defining what it is for a system to satisfy",
    "an information flow security policy has proved to be a subtle matter .",
    "a substantial literature has developed that provides a range of formal systems models and a range of definitions of security .",
    "in particular , in non - deterministic systems it has been found necessary to clarify the attack model , and distinguish between a passive attacker , which merely aims to deduce secret information from observations it is able to make from its position outside the security domain to be protected , and a more active attacker , that may have planted a trojan horse in the domain to be protected , and which seeks to use covert channels to pass information out of this domain .",
    "while this distinction turns out not to matter in asynchronous systems  @xcite , in synchronous settings , it leads to two different definitions of security , known as nondeducibility on inputs ( @xmath0 ) @xcite , and nondeducibility on strategies ( @xmath1 ) @xcite .",
    "( the term strategies in the latter refers to the strategies that a trojan horse may employ to pass information out of the security domain . )",
    "considerations of proof methods for security , and compositionality of these methods , has led to the introduction of further definitions of security , such as _ unwinding relations _ @xcite and the associated definition of _ restrictiveness _ ( @xmath2 ) @xcite .",
    "one of the dimensions along which it makes sense to evaluate a definition of security is the practicality of verification techniques it enables .",
    "the early literature on the topic was motivated primarily by theorem proving verification methods , but in recent years the feasibility of automated verification techniques has begun to be investigated  @xcite .",
    "this recent work on automated verification of security has dealt primarily with asynchronous systems models .",
    "[ [ our - contribution ] ] * our contribution * + + + + + + + + + + + + + + + + + +    in this paper we investigate the complexity of automated verification for a range of definitions of information flow in a _ synchronous _ systems model , in which agents are aware of a global clock and may use timing information in their deductions .",
    "this model is significant in that a number of timing - based attacks have been demonstrated that , e.g. , enable cryptographic keys to be deduced just from the amount of time taken to perform cryptographic operations  @xcite .",
    "it is therefore desirable that systems designs are free of timing - based covert channels ; the asynchronous definitions of security that have been the focus of much of the literature fail to ensure this .",
    "we study three definitions of security in this paper : synchronous versions of nondeducibility on inputs ( @xmath0 ) , nondeducibility on strategies ( @xmath1 ) and an unwinding based definition called restrictiveness ( @xmath2 ) .",
    "we consider just a two - agent setting , with agents @xmath3 for a low security domain and @xmath4 for a high security domain , and the ( classical ) security policy that permits @xmath4 to know about @xmath3 s activity , but prohibits @xmath3 from knowing about the activity of @xmath4 .",
    "we show that all three definitions are decidable in finite state systems , and with complexities of pspace - complete for @xmath0 , expspace - complete for @xmath1 , and polynomial time for @xmath2 . a preliminary version of this paper , with only proof sketches , appeared in  @xcite .",
    "in this extended version , we provide detailed proofs for all results .    [ [ outline - of - the - paper ] ] * outline of the paper * + + + + + + + + + + + + + + + + + + + + + +    the structure of the paper is as follows .",
    "section  [ sec : semdef ] introduces our systems model , the definitions of security that we study , and states the main results of the paper .",
    "the following sections discuss the proofs of these results .",
    "section  [ sec : ndi ] deals with nondeducibility on inputs , section  [ sec : nds ] deals with nondeducibility on strategies , and section  [ sec : res ] deals with the unwinding - based definition .",
    "related literature is discussed in section  [ sec : related ] , and section  [ sec : concl ] makes some concluding remarks .",
    "otherwise stated , we use standard notation from automata theory . given a finite set ( alphabet ) @xmath5 , we write @xmath6 for the set of finite words over @xmath5 .",
    "we denote the empty word by @xmath7 , and for @xmath8 , we write @xmath9 for the length of @xmath10 . for @xmath11",
    ", @xmath12 stands for the set of words of length @xmath13 over @xmath5 .",
    "we work with a synchronous , non - deterministic state machine model for two agents , @xmath4 and @xmath3 . at each step of the computation ,",
    "the agents ( simultaneously ) perform an action , which is resolved non - deterministically into a state transition .",
    "both agents make ( possibly incomplete ) observations of the state of the system , and do so with awareness of the time .",
    "time is discrete and measured by the number of steps in a computation .",
    "our machine model is given in the following definition .",
    "we do not make any finiteness assumptions in this section and the results in this section hold for this unconstrained model .",
    "[ def - sync - mac ] a _ synchronous machine _",
    "@xmath14 is a tuple of the form @xmath15 where    * @xmath16 is the set of states , * @xmath17 is a set of joint actions ( or joint inputs ) , each composed of an action of @xmath4 from the set @xmath18 and an action of @xmath3 from the set @xmath19 , * @xmath20 is the initial state , * @xmath21 defines state transitions resulting from the joint actions , * @xmath22 is a set of observations , * @xmath23 represents the observations made by each agent in each state .",
    "we write @xmath24 for the mapping @xmath25 , and @xmath26 for @xmath27 .",
    "we assume that machines are _ input - enabled _ , by requiring that for all @xmath28 and @xmath29 , there exists @xmath30 such that @xmath26 .",
    "we write @xmath31 for the set of synchronous machines .    a _ run _",
    "@xmath32 of @xmath14 is a finite sequence @xmath33 with : @xmath34 and @xmath35 for all @xmath36 .",
    "we write @xmath37 for the set of all runs of @xmath14 .",
    "we denote the sequence of joint actions @xmath38 in the run @xmath32 by @xmath39 . for each agent",
    "@xmath40 we define @xmath41 to be the projection of joint actions onto agent @xmath42 s actions .",
    "we write @xmath43 for the sequence of agent @xmath42 s actions in @xmath39 , e.g. , if @xmath44 then @xmath45 .      for a sequence @xmath10 , and @xmath46",
    ", we write @xmath47 for the @xmath48-th element of @xmath10 , and @xmath49 $ ] for the prefix of @xmath10 up to the @xmath48-th element .",
    "we assume agents have a _ synchronous _ view of the machine , making an observation at each moment of time and being aware of each of their own actions ( but not the actions of the other agent , which are given simultaneously and independently ) . given a synchronous machine @xmath14 , and @xmath40",
    ", we define _",
    "@xmath42 views _ by the mapping @xmath50 by : @xmath51 intuitively , this says that an agent s view of a run is the history of all its state observations as well as its own actions in the run .",
    "we say that a sequence @xmath52 of observations and actions is a",
    "_ possible @xmath42 view in a system @xmath14 _ if there exists a run @xmath53 of @xmath14 such that @xmath54 .",
    "the mapping @xmath55 extends straightforwardly to sets of runs @xmath56 , by @xmath57 .",
    "we define the length @xmath58 of a view @xmath52 to be the number of actions it contains .",
    "we remark that the model is sufficiently expressive to represent an alternate model in which agents act in turn under the control of a scheduler .",
    "we say that a synchronous machine is _ scheduled _ if for each state @xmath28 either    * for all actions @xmath59 and @xmath60 , and states @xmath61 , @xmath62 iff @xmath63 , or * for all actions @xmath64 and @xmath65 , and states @xmath61 , @xmath62 iff @xmath66 .",
    "this definition says that state transitions in a scheduled machine are determined by the actions of _ at most one _ of the agents ( the agent scheduled at that state ) ; the other agent has no control over the transition .",
    "the model involving machines under the control of a scheduler of  @xcite , in which at most one agent acts at each step of the computation , can be encoded as scheduled synchronous machines .",
    "we consider a number of different notions of information flow security .",
    "each definition provides an interpretation for the security policy @xmath67 , which states that information is permitted to flow from @xmath3 to @xmath4 , but not from @xmath4 to @xmath3 .",
    "our definitions are intended for synchronous systems , in which the agents share a clock and are able to make deductions based on the time .",
    "( much of the prior literature has concentrated on asynchronous systems , in which an agent may not know how many actions another agent has performed . )      the first definition we consider states that @xmath3 should not be able to infer @xmath4 actions from its view .    a synchronous machine @xmath14 satisfies _ non - deducibility on inputs _ ( @xmath68 ) if for every possible @xmath3 view @xmath52 in @xmath14 and every sequence of @xmath4 actions @xmath69 with @xmath70 , there exists a run @xmath71 such that @xmath72 and @xmath73 .    intuitively , in a synchronous system",
    ", @xmath3 always knows how many actions @xmath4 has performed , since this is always identical to the number of actions that @xmath3 has itself performed .",
    "in particular , if @xmath3 has made view @xmath52 , then @xmath3 knows that @xmath4 has performed @xmath58 actions .",
    "the definition says that the system is secure if this is _ all _ that @xmath3 can learn about what sequence of actions @xmath4 has performed .",
    "whatever @xmath3 observes is consistent with any sequence of actions by @xmath4 of this length is input - enabled . ] .",
    "more precisely , define @xmath74 for an @xmath3 view @xmath52 to be the set of @xmath4 action sequences @xmath75 for @xmath53 a run with @xmath76 ; this represents what @xmath3 knows about @xmath4 s actions in the run .",
    "then @xmath77 iff for all possible @xmath3 views @xmath52 we have @xmath78 .",
    "the definition of @xmath79 takes the viewpoint that a system is secure if it is not possible for @xmath3 to make any nontrivial deductions about @xmath4 behaviour , provided that @xmath4 does not actively seek to communicate information to @xmath3 .",
    "this is an appropriate definition when @xmath4 is trusted not to deliberately act so as to communicate information to @xmath3 , and the context is one where @xmath4 is equally likely to engage in any of its possible behaviours . in some circumstances , however , @xmath79 proves to be too weak a notion of security . in particular",
    ", this is the case if the attack model against which the system must be secure includes the possibility of trojan horses at the @xmath4 end of the system , which must be prevented from communicating @xmath4 secrets to @xmath3 .",
    "the following example , due in essence to wittbold and johnson @xcite shows that it is possible for a system to satisfy @xmath79 , but still allow for @xmath3 to deduce @xmath4 information .    , but not in @xmath80 , where @xmath81 .",
    "]    [ example : nds - ndi ] we present a synchronous machine that satisfies @xmath79 in fig .",
    "[ fig : nds ] .",
    "we use the convention in such figures that the observations are shown on a state @xmath82 in the form of @xmath83 .",
    "edges are labelled with joint actions @xmath84 where @xmath59 and @xmath85 .",
    "when @xmath86 is @xmath87 this means that there is such an edge for all @xmath59 . in this example",
    "the action sets are @xmath88 , @xmath89 . note that in state @xmath90 and @xmath91 , @xmath3 s observation in the next state is determined as the _ exclusive - or _ of @xmath4 s current observation and @xmath4 s action .",
    "the system is in @xmath79 since every @xmath4 action sequence is compatible with every @xmath3 view of the same length .",
    "for example , the @xmath3 view @xmath92 is consistent with @xmath4 action sequence @xmath93 and @xmath94 ( path @xmath95 ) and with @xmath4 action sequence @xmath96 and @xmath97 ( path @xmath98 ) .",
    "nevertheless , @xmath4 can communicate a bit @xmath99 of information to @xmath3 , as follows .",
    "note that @xmath4 is able to distinguish between state @xmath90 and @xmath91 by means of the observation it makes on these states ( at time 1 ) .",
    "suppose @xmath100 , then @xmath4 chooses action @xmath101 at @xmath90 and action @xmath102 at @xmath91 ; in either case the next state is @xmath103 , and @xmath3 observes @xmath101 .",
    "alternately , if @xmath104 , then @xmath4 chooses action @xmath102 at @xmath90 and action @xmath101 at @xmath91 ; in either case the next state is @xmath105 , and @xmath3 observes @xmath102 .",
    "whatever the value of @xmath99 , @xmath4 has guaranteed that @xmath3 observes @xmath99 at time 2 , so this bit has been communicated .",
    "intuitively , this means that the system fails to block trojan horses at @xmath4 from communicating with @xmath3 , even though it satisfies @xmath0 .",
    "( the structure can be repeated so that @xmath4 can communicate a message of any length to @xmath3 in plain text . )",
    "the essence of example  [ example : nds - ndi ] is that @xmath3 is able to deduce @xmath4 secrets based not just on its knowledge of the system , but also its knowledge that @xmath4 is following a particular strategy for communication of information to @xmath3 . in response to this example ,",
    "wittbold and johnson proposed the following stronger definition of security that they called _ non - deducibility on strategies_. to state this definition , we first formalize the possible communication strategies that can be used by @xmath4 .",
    "intuitively , @xmath4 s behaviour may depend on what @xmath4 has been able to observe in the system .",
    "an _ @xmath4 strategy _ in @xmath14 is a function @xmath106 mapping each possible view of @xmath4 ( in @xmath14 ) to an @xmath4 action .",
    "a run @xmath107 of @xmath14 is _ consistent with _ an @xmath4 strategy @xmath108 if for all @xmath109 , we have @xmath110 . we write @xmath111 for the set of runs of @xmath14 that are consistent with the @xmath4 strategy @xmath108 .",
    "we can now state wittbold and johnson s definition .    a synchronous system @xmath14 satisfies _ nondeducibility on strategies _ ( @xmath112 ) ,",
    "if for all @xmath4 strategies @xmath113 in @xmath14 , we have @xmath114 .",
    "intuitively , this definition says that the system is secure if @xmath3 is not able to distinguish between different @xmath4 strategies by means of its views .",
    "in example  [ example : nds - ndi ] , given an @xmath4 strategy @xmath115 satisfying @xmath116 and @xmath117 , and another @xmath4 strategy @xmath118 satisfying @xmath119 and @xmath120 , we have the @xmath3 view @xmath121 in @xmath122 but not in @xmath123 .",
    "thus , the sets of @xmath3 views differ for these two strategies , so the system is not in @xmath1 .",
    "an alternate formulation of the definition can be obtained by noting that for every possible @xmath3 view @xmath52 , there is an @xmath4 strategy @xmath108 such that @xmath124 , viz .",
    ", if @xmath125 , we take @xmath108 to be a strategy that always performs the same action at each time @xmath126 as @xmath4 performs at time @xmath48 in @xmath53 .",
    "thus , we can state the definition as follows :    [ prop : charnds ] @xmath112 iff for all @xmath4 strategies @xmath108 in @xmath14 , we have @xmath127 .",
    "it is trivial that if @xmath127 for all strategies @xmath108 then @xmath112 .",
    "conversely , suppose that @xmath112 , and let @xmath108 be any strategy . plainly @xmath128",
    "; we show the reverse containment .",
    "let @xmath129 be a possible @xmath3 view . by the above observation there exists a strategy @xmath115 such that @xmath130 .",
    "by @xmath112 , @xmath131 , so also @xmath132 , as required .",
    "this formulation makes it clear that @xmath4 can not communicate any information to @xmath3 by means of its strategies .",
    "it is also apparent that allowing @xmath4 strategies to be non - deterministic ( i.e. , functions from @xmath4 views to a _ set _ of @xmath4 actions ) would not lead to a different definition of @xmath1 , since the more choices @xmath4 has in a strategy the more @xmath3-views are compatible with that strategy .",
    "we remark that in asynchronous systems ( in which we use an asynchronous notion of view ) , similarly defined notions of non - deducibility on inputs and non - deducibility on strategies turn out to be equivalent  @xcite .",
    "the example  [ example : nds - ndi ] above shows that this is not the case in synchronous machines , where the two notions are distinct .",
    "nondeducibility - based definitions of security are quite intuitive , but they turn out to have some disadvantages as a basis for secure systems development .",
    "one is that they are not compositional : combining two systems , each secure according to such a definition , can produce a compound system that is not secure  @xcite .",
    "for this reason , some stronger , but less intuitive definitions have been advocated in the literature .",
    "one of these , mccullough s notion of restrictiveness  @xcite , is closely related to an approach to formal proof of systems security based on what are known as  unwinding relations . \" a variety of definitions of unwinding relations have been proposed in the literature  @xcite , in the context of a number of different underlying systems models and associated definitions of security for which they are intended to provide a proof technique .",
    "we propose here a variant of such definitions that is appropriate to the machine model we consider in this paper , drawing on definitions proposed by van der meyden and zhang @xcite for machines acting under the control of a scheduler .",
    "[ def - unwinding ] a _ synchronous unwinding relation _ on a system @xmath14 is a symmetric relation @xmath133 satisfying the following :    1 .",
    "@xmath134 , 2 .",
    "@xmath135 implies @xmath136 , and 3 .",
    "@xmath135 implies that for all @xmath137 and @xmath138 , if @xmath139 then there exists a state @xmath140 such that @xmath141 , and @xmath142 .    intuitively , an unwinding relation is a bisimulation - like relation over @xmath16 that shows @xmath3 observations are locally uncorrelated with @xmath4 actions .",
    "[ def : res ] a synchronous machine @xmath14 satisfies restrictiveness ( @xmath143 ) , if there exists a synchronous unwinding relation on @xmath14 .",
    "part of the significance of @xmath2 is that it provides a proof technique for our notions of nondeducibility , as shown by the following result , which relates the three notions of security we have introduced :    [ thm : containments ] the following containments hold and are strict : @xmath144 .    to show that @xmath145 we argue as follows .",
    "suppose that @xmath146 is a synchronous unwinding on @xmath14 .",
    "let @xmath52 be any possible @xmath3 view , and @xmath108 any @xmath4 strategy .",
    "we have to show that @xmath124 . for this ,",
    "let @xmath147 be a run such that @xmath125 .",
    "we show that there exists a run @xmath148 consistent with @xmath108 such that @xmath149 .",
    "we proceed inductively , showing for each @xmath150 that @xmath151 and @xmath152 , where @xmath153 is a run consistent with @xmath108 . in the base case , we have @xmath154 and the claim is trivial . for the inductive case ,",
    "let @xmath155 and @xmath156 , and take @xmath157 . since @xmath158 and @xmath159 is an unwinding relation , there exists a state @xmath160 such that @xmath161 and @xmath162 .",
    "further , we conclude that @xmath163 . since @xmath153 is consistent with @xmath108 ,",
    "so is @xmath164 , and @xmath165 as required .",
    "next we show that @xmath166 .",
    "let @xmath167 and @xmath52 be an @xmath3 observation satisfying @xmath70 .",
    "we construct a `` blind '' @xmath4 strategy @xmath108 as @xmath168 if @xmath169 and @xmath170 otherwise , where @xmath171 is an arbitrary action in @xmath18 .",
    "since @xmath172 , we have @xmath173 , so there exists a run @xmath174 such that @xmath175 . by the construction of @xmath108 we have @xmath176 .    that the inclusions are strict follows from example  [ example : nds - ndi ] and example  [ example : res - nds ] below .     in @xmath80 , but not in @xmath2 , where @xmath81",
    "every state @xmath82 is labelled with a pair @xmath83 . ]",
    "[ example : res - nds ] we present a machine in fig .",
    "[ fig : res - nds ] that satisfies @xmath1 but does not satisfy @xmath2 . in this system we let @xmath88 , @xmath89 .",
    "we use the conventions from example  [ example : nds - ndi ] .",
    "one may easily observe that the set of @xmath3 views is given by the regular language @xmath177 and all the views are compatible with every possible @xmath4 strategy .",
    "however , there does not exist a synchronous unwinding relation .",
    "suppose there were such a relation @xmath146 .",
    "then @xmath134 , and for joint actions @xmath178 and @xmath179 , we have @xmath180 , @xmath181 and @xmath182 , and we would require @xmath90 to be related to either @xmath91 or @xmath105 .",
    "however , neither @xmath91 nor @xmath105 can be related to @xmath90 : from @xmath91 user @xmath3 can only observe @xmath183 in the future , and from @xmath105 only @xmath184 can be observed by @xmath3 . note from @xmath90 both @xmath183 and @xmath184 are possible for  @xmath3 .    in the following sections , we study the complexity of the notions of security we have defined above .",
    "in this section we establish the following result :    for the class of finite state synchronous machines , @xmath79 is * pspace*-complete with respect to logspace reductions .      stating the definition in the negative , a system is not in @xmath79 if there exists an @xmath3 view @xmath52 and a sequence of @xmath4 actions @xmath185 with @xmath70 such that there exists no run @xmath32 with @xmath72 and @xmath73 .",
    "we show that @xmath79 is decidable by a procedure that searches for such an @xmath3 view @xmath52 and @xmath4 action sequence @xmath185 .",
    "the key element of the proof is to show that we need to maintain only a limited amount of information during this search , so that we can bound the length of the witness @xmath186 , and the amount of space needed to show that such a witness  exists .    to show this ,",
    "suppose we are given a machine @xmath187 .",
    "given a sequence @xmath167 and a sequence @xmath188 , we define the set @xmath189 to be the set of all final states of runs @xmath32 of @xmath14 consistent with @xmath185 and @xmath52 , such that @xmath72 and @xmath73 . for each @xmath59 , @xmath65 and @xmath190",
    ", we also define the function @xmath191 , by @xmath192 for the system @xmath14 define the labelled transition system @xmath193 as follows :    1 .",
    "@xmath194 , 2 .",
    "@xmath195 , 3 .",
    "@xmath196 , 4 .",
    "@xmath197 is the labelled transition relation defined by @xmath198 if @xmath59 , @xmath65 , @xmath199 such that @xmath200 and @xmath201 .",
    "intuitively , the component @xmath82 in a state @xmath202 is used to ensure that we generate an @xmath3 view @xmath52 that is in fact possible .",
    "the components @xmath203 in a transition @xmath204 represent the actions used to generate the run underlying @xmath52 , and the component @xmath205 is used to generate a sequence @xmath185 .",
    "the set @xmath206 represents @xmath189 .",
    "more precisely , we have the following result :    [ lem : ndilts ] if @xmath207 , then the sequence @xmath208 @xmath209 is a possible @xmath3 view , and @xmath210 is a sequence of @xmath4 actions such that @xmath211 and @xmath212 .",
    "conversely , for every possible @xmath3 view @xmath52 with @xmath213 , and sequence of @xmath4 actions @xmath210 , there exists a path @xmath214 such that @xmath215 and @xmath212 .",
    "we first show that for all @xmath167 , @xmath216 , @xmath59 , @xmath65 and @xmath190 , we have @xmath217 .",
    "to show @xmath218 , suppose that @xmath219 . then there exists a run @xmath53 of @xmath14 such that @xmath220 and @xmath221 and the final state of @xmath53 is @xmath222 .",
    "it follows that @xmath223 .",
    "thus , we may write @xmath224 , where @xmath225 , and @xmath226 .",
    "thus , the final state @xmath140 of @xmath227 is in @xmath228 . since @xmath229 and @xmath223",
    ", it follows that @xmath230 .",
    "conversely , if @xmath230 then by definition of @xmath231 there exists @xmath232 such that @xmath233 and @xmath223 . by definition of @xmath234",
    "there exists a run @xmath53 of @xmath14 such that @xmath235 and @xmath236 .",
    "taking @xmath237 , we see that @xmath227 is a run of @xmath14 with @xmath238 and @xmath239 .",
    "thus , @xmath240 , as required .",
    "this completes the proof that @xmath241 .",
    "we can now prove the two parts of the result :    * suppose @xmath242 is a run of @xmath243 , then by definition @xmath244 is a run of @xmath14 , such that @xmath245 is a possible @xmath3 view . moreover , @xmath246 for @xmath247 , where we take @xmath248 .",
    "since @xmath249 , it follows from the above using a straightforward induction that @xmath250 , where @xmath251 .",
    "* let @xmath52 be a possible @xmath3 view , then there exists a run @xmath244 of @xmath14 such that @xmath175 . given a sequence of @xmath4 actions @xmath252 , we inductively define @xmath253 and @xmath254 .",
    "it is then immediate by definition that we have a path @xmath255 in @xmath243 . by a straightforward induction using what was proved above",
    ", we have that @xmath256 , where @xmath257 and @xmath258 .",
    "we now note that for an @xmath4 action sequence @xmath185 and a possible @xmath3 view @xmath52 , with @xmath211 , there exists no run @xmath53 such that @xmath72 and @xmath73 iff @xmath259 .",
    "the existence of such a pair @xmath260 , is therefore equivalent , by lemma  [ lem : ndilts ] , to the existence of a path in @xmath243 from @xmath261 to a state @xmath262 with @xmath263 .",
    "this can be decided in @xmath264 .",
    "this proves the following theorem .",
    "@xmath265 is decidable in @xmath266 .",
    "we note , moreover , that since there are at most @xmath267 states in @xmath268 , if there exists a pair @xmath260 witnessing that @xmath269 there exists such a pair with @xmath270 .      we show that @xmath79 is * pspace*-hard already in the special case of scheduled machines .",
    "the proof is by a polynomial time reduction from the problem of deciding , given a non - deterministic finite state automaton @xmath271 on alphabet @xmath272 , if the language @xmath273 accepted by @xmath271 is equal to @xmath274 .",
    "this _ universality _",
    "problem is pspace - hard  @xcite .",
    "let @xmath275 be a non - deterministic finite state automaton ( without @xmath276-transitions ) , with states @xmath268 , initial states @xmath277 , alphabet @xmath272 , transition function @xmath278 , and final states @xmath279 .",
    "we define @xmath280 to be a scheduled machine , and use a function @xmath281 to indicate the agent ( if any ) whose actions determine transitions . in view of this , when @xmath282 and @xmath283 , we may write @xmath284 to represent that @xmath285 for all joint actions @xmath99 with @xmath286 . the components of @xmath287 are defined as follows .",
    "* @xmath288 , where @xmath289 , * @xmath290 and @xmath291 for all @xmath292 , * @xmath293 where @xmath294 and @xmath295 , * @xmath296 , * @xmath297 with @xmath298 for all @xmath28 and @xmath299 for all @xmath300 , and @xmath301 . * @xmath302 is defined as consisting of the following transitions ( using the convention noted above ) * * @xmath303 for all @xmath304 , * * @xmath305 , provided @xmath306 , * * @xmath307 and @xmath308 , * * @xmath309 and @xmath310 for all @xmath311 , * * @xmath312 for all @xmath311 , * * @xmath313 for all @xmath311 , * * for @xmath314 and @xmath315 we have @xmath316 for all @xmath317 * * for @xmath318 and @xmath319 such that @xmath320 , we have @xmath321 , * * for @xmath318 and @xmath319 such that @xmath322 , we have @xmath323 .",
    "the construction of @xmath324 from @xmath271 can be done in logspace .",
    "intuitively , the runs of @xmath324 produce two sets of @xmath3 views , depending on whether the first @xmath4 action is @xmath325 or @xmath326 . in all circumstances , runs in which @xmath4 does @xmath326 in the first step , with the first transition to @xmath90 , produce an @xmath3 view for each sequence in @xmath327 or @xmath328 by switching from to @xmath91 at the first occurrence of observation @xmath101 . runs in which @xmath4 does @xmath325 in the first step with a transition to a state in @xmath329 , correspond to simulations of @xmath271 and produce two types of @xmath3 views :    1 .   any sequence in @xmath330 ( by means of a run that stays in @xmath268 for as long as possible , and moves to @xmath105 whenever an action is not enabled ) , and 2 .",
    "any sequence of the form @xmath331 with @xmath332 ( these come from runs that pass through @xmath268 and then jump to @xmath91 ) .    in case @xmath333 , i.e. , @xmath306 , then also all sequences in @xmath334 are produced as the @xmath3 view on a run in which the first transition , with @xmath4 action @xmath325 , is to @xmath91 .",
    "note that since @xmath3 is always scheduled after the first step , replacing any action by @xmath4 after the first step in a run by any other action of @xmath4 results in another run , with no change to the @xmath3 view .",
    "thus , the only thing that needs to be checked to determine whether @xmath335 is whether the same can be said for the first step .",
    "moreover , it can be seen from the above that , for all @xmath271 , and independently of whether @xmath336 , any @xmath3 view obtained from a run in which the first @xmath4 action is @xmath325 can also be obtained from a run in which the first @xmath4 action is @xmath326 .",
    "thus , to show @xmath337 , it suffices to check that any @xmath3 view obtained from a run in which the first @xmath4 action is @xmath326 can also be obtained from a run in which the first action is @xmath325 .",
    "@xmath338 iff @xmath339 .    for",
    "the ` only if ' part , suppose @xmath338 .",
    "we show that @xmath337 .",
    "as argued above , it suffices to show that any view obtained from a run in which the first @xmath4 action is @xmath326 can also be obtained from a run in which the first action is @xmath325 .",
    "let @xmath340 @xmath341 be a run of @xmath324 , with the @xmath342 and the @xmath343 .",
    "if @xmath344 then since @xmath345 , simply by replacing the first transition by @xmath346 we obtain a run with first @xmath4 action @xmath325 that has exactly the same @xmath3 view . otherwise @xmath347 .",
    "if all @xmath348 then we may construct a run of @xmath324 with the same @xmath3 view as @xmath53 by taking any transition into @xmath268 in the first step , then remaining within @xmath268 throughout , or making a transition to @xmath105 if there is no enabled transition of @xmath271 on the given input @xmath349 . otherwise , let @xmath48 be the least index with @xmath350 .",
    "since @xmath351 , there exists a run @xmath352 of @xmath271 with @xmath353 . by construction of @xmath324",
    ", it then follows that @xmath354 is a run with the same @xmath3 view as @xmath53 but with first @xmath4 action @xmath325 .",
    "thus , @xmath337 .    for the `",
    "if ' part , suppose there is a word @xmath355 .",
    "if @xmath356 , then the transition @xmath357 is not present in @xmath324 , so there is no run starting with @xmath4 action @xmath325 that produces the @xmath3 view @xmath358 ( with @xmath359 ) that we get from @xmath360 .",
    "otherwise , for an arbitrary @xmath361 , the @xmath3 view @xmath362 can not be obtained from runs in which the first @xmath4 action is @xmath325 , because otherwise @xmath10 would be accepted by @xmath271 .",
    "however this view is obtained from a run in which the first action is @xmath326 .",
    "therefore @xmath363 .",
    "as pointed out at the beginning of this section , this lower bound result already holds for scheduled machines , and thus @xmath0 is already pspace - hard for this subclass .",
    "in this section we establish the following theorem :    [ thm - nds ] for the class of finite state synchronous machines , and with respect to log - space reductions , @xmath80 is * expspace*-complete .      for",
    "the proof that nds  is decidable in * expspace * , we show that the problem is in * dspace*@xmath364 .",
    "it is convenient for this section to consider strategies @xmath108 that are defined over the larger set @xmath365 of candidate views of @xmath4 , rather than the subset @xmath366 of possible views .",
    "we use the characterization of @xmath80 given in proposition  [ prop : charnds ] .",
    "let @xmath108 be an @xmath4 strategy , and @xmath367 be an @xmath3 view .",
    "say that @xmath108 _ excludes _",
    "@xmath367 if there does not exist a run @xmath53 consistent with @xmath108 such that @xmath368 . since always @xmath369 , by proposition  [ prop : charnds ] , a system @xmath14 satisfies @xmath1 if and only if it is not the case that there exists a possible @xmath3 view @xmath367 in @xmath14 and a strategy @xmath108 such that @xmath108 excludes @xmath367",
    ".    our decidability result and complexity bound is obtained by showing that if such a strategy exists , then there is one of a particular normal form , and it can be found using a space - bounded search .",
    "the normal form strategies have a uniform structure , in that the choice of next action on an @xmath4 view depends only on the length of the view and the set of states that @xmath4 considers possible after that view , given that @xmath3 s view @xmath367 has not yet been excluded .",
    "we call this set of states @xmath4 s _ knowledge set_.    more precisely , the knowledge sets are defined as follows .",
    "given a candidate @xmath4 view @xmath370 and a ( to be excluded ) candidate @xmath3 view @xmath371 with @xmath372 , define @xmath373 to be the set of all final states of runs @xmath53 consistent with @xmath108 such that @xmath374 and @xmath375 is a prefix of @xmath367 .",
    "these knowledge sets can be obtained in an incremental way using the update operators @xmath376 defined for each @xmath377 , @xmath378 , and @xmath379 , to map @xmath380 to @xmath381 the incremental characterisation is given in the following lemma .",
    "[ lem : delta ] suppose that @xmath382 and @xmath383",
    ". then @xmath384 .",
    "we first show that @xmath385 suppose @xmath386 .",
    "we show that @xmath387 .",
    "we have that there exists @xmath388 such that @xmath389 and @xmath390 and @xmath391 .",
    "thus there exists a run @xmath53 , consistent with @xmath108 , and with final state @xmath82 , such that @xmath374 and @xmath392 . since @xmath382",
    ", we obtain that the run @xmath393 is consistent with @xmath108 and justifies @xmath394 .",
    "conversely , suppose @xmath395 .",
    "then there exists a run @xmath227 consistent with @xmath108 , which can be written in the form @xmath393 with @xmath374 , and @xmath396 , and @xmath397 and @xmath398 .",
    "let @xmath82 be the final state of @xmath53 .",
    "then we have @xmath388 .",
    "it is now immediate that @xmath386 .",
    "the following result shows that it suffices to consider strategies in which the choice of action depends only on the time and @xmath4 s knowledge set , given the @xmath3 view being excluded .",
    "[ lem : normalform ] if there exists an @xmath4 strategy @xmath108 that excludes @xmath367 , then there exists an @xmath4 strategy @xmath399 that also excludes @xmath367 , and has the property that for all @xmath4 views @xmath185 and  @xmath400 , if @xmath401 and @xmath402 then @xmath403 .",
    "suppose that @xmath108 excludes @xmath367 . for purposes of the proof ,",
    "note that we can assume without loss of generality that @xmath367 is infinite  this helps to avoid mention of views longer than @xmath367 as a separate case .",
    "( note that it is equivalent to say that @xmath108 excludes some prefix of @xmath367 . )",
    "let @xmath404 be any mapping from @xmath405 to @xmath405 such that for all @xmath406 we have    1 .",
    "@xmath407 , 2 .",
    "@xmath408 , 3 .   if @xmath409 and @xmath410 , then @xmath411 .",
    "such a mapping always exists ; intuitively , it merely picks , at each length , a representative @xmath412_{\\sim}$ ] of the equivalence classes of the equivalence relation defined by @xmath413 if @xmath414 and @xmath415 .",
    "now define the mapping @xmath416 on @xmath405 as follows .",
    "let @xmath417 be the only possible @xmath4 view of length @xmath102 .",
    "for @xmath418 of length @xmath102 , we define @xmath419 . for longer @xmath185 ,",
    "we define @xmath420 . also , define the strategy @xmath399 by @xmath421 .",
    "we claim that for all @xmath418 we have @xmath422 .",
    "the proof is by induction on the length of @xmath185 .",
    "the base case is straightforward , since @xmath423 is consistent with all strategies , so @xmath424 , and @xmath425 for @xmath426 with @xmath427 .",
    "suppose the claim holds for @xmath418 of length @xmath48 .",
    "let @xmath428 . by induction and ( 2 ) , @xmath429 .",
    "let @xmath430 be the prefix of @xmath367 of length @xmath431 .",
    "since action @xmath432 , using lemma  [ lem : delta ] , we have that @xmath433    to see that @xmath399 has the required property , if @xmath434 with @xmath414 , then we have @xmath435 . by ( 3 )",
    "we have @xmath436 .",
    "therefore @xmath437 , by definition .",
    "since @xmath108 excludes @xmath367 , there exists a length @xmath13 such that for all @xmath418 with @xmath438 , we have @xmath439 .",
    "thus , we also have for all @xmath185 of length @xmath13 that @xmath440 .",
    "this means that @xmath399 also excludes @xmath367 .",
    "based on lemma  [ lem : normalform ] , we construct a transition system @xmath441 that simultaneously searches for the strategy @xmath108 and an @xmath3 view @xmath367 that is excluded by @xmath108 .",
    "the components are defined by :    1 .",
    "@xmath442 , 2 .",
    "@xmath443 , 3 .",
    "the transition relation @xmath444 is defined by @xmath445 if 1 .",
    "@xmath446 , and @xmath378 and @xmath447 , 2 .",
    "@xmath448 there exists @xmath449 , and a transition @xmath450 , with @xmath451 and @xmath452 , and 3 .",
    "@xmath453 .",
    "intuitively , the component @xmath454 in a state @xmath455 is used to ensure that the view @xmath367 that we construct is in fact possible in @xmath14 .",
    "the component @xmath456 represents a collection of all possible knowledge sets that @xmath4 can be in at a certain point of time , while attempting to exclude @xmath367 .",
    "more specifically , each set @xmath457 in @xmath456 corresponds to @xmath458 such that @xmath459 . in a transition",
    ", we both determine the next phase of @xmath108 , by extending @xmath108 so that @xmath460 , and extend @xmath367 to @xmath461 .",
    "moreover , an @xmath4 strategy generated by @xmath462 is only sensitive to @xmath4 s knowledge set and lengths of runs , i.e. , it satisfies that @xmath401 and @xmath402 implies @xmath403 . in the above construct",
    ", @xmath463 represents the local choice of @xmath4 that depends only on the knowledge set of @xmath4 .",
    "the following result justifies the correspondence between the transition system @xmath462 and @xmath1 .",
    "[ lem : ndsreduction ] a machine @xmath14 does not satisfy @xmath1 iff @xmath462 contains a path @xmath464 to a state where @xmath465 .",
    "we first prove the implication from left to right .",
    "suppose first that @xmath14 does not satisfy @xmath1 , witnessed by the fact that @xmath108 excludes the possible @xmath3 view @xmath466 .",
    "we may assume without loss of generality that no strict prefix of @xmath367 is excluded .",
    "by lemma  [ lem : normalform ] , we may assume that @xmath108 has the property that it takes the same value on @xmath4 views @xmath467 that have the same length and have @xmath468 .",
    "we construct a path @xmath469 in the transition system @xmath462 , by defining the functions @xmath470 for @xmath471 , and then deriving @xmath472 from @xmath473 using the equation in clause 3(b ) of the definition of @xmath462 , and deriving @xmath474 from @xmath475 and @xmath476 using the equation in clause 3(c ) .",
    "( this guarantees that each step satisfies all the conditions of the definition of @xmath444 , except the requirement in 3(b ) that @xmath477 ; we check this below . )",
    "the construction will have the property that every @xmath478 is equal to some @xmath479 with @xmath458 of length @xmath480 .",
    "this means that we may define @xmath481 .",
    "note that @xmath476 is well - defined , by the assumption on @xmath108 .",
    "more precisely , we claim that for each @xmath482 , @xmath474 is a subset of the set @xmath483 .",
    "note that this means that if @xmath484 then @xmath485 , for else we have an @xmath4 view @xmath185 of length @xmath486 such that @xmath487 , which implies that @xmath108 does not exclude @xmath367 .",
    "thus @xmath488 , as required for the right hand side of the result .",
    "the proof of the claim is by induction on @xmath48 .",
    "the base case of @xmath489 is immediate from that fact that @xmath367 is a possible view , so @xmath490 .",
    "suppose @xmath491 .",
    "we show @xmath492 for some @xmath400 of length @xmath493 .",
    "by definition of @xmath494 , there exists @xmath495 , and @xmath496 , such that with @xmath497 , we have @xmath498 . by induction , there exists @xmath418 of length @xmath48 such that @xmath499 . by lemma  [ lem : delta ]",
    ", it follows that @xmath500 , as required .",
    "it remains to show that @xmath501 for each @xmath502 .",
    "for this , note that since @xmath367 is a possible @xmath3 view , there exists a run @xmath503 such that @xmath504 for @xmath505 .",
    "a straightforward induction shows that for each @xmath48 , we have @xmath506 , so in fact @xmath501 , as required .",
    "for the other direction , suppose that @xmath507 and @xmath508 .",
    "we construct a strategy @xmath108 that excludes @xmath509 . a straightforward",
    "induction using clause 3(b ) of the definition of @xmath462 shows that @xmath367 is a possible @xmath3 view in @xmath14 .",
    "the construction of @xmath108 is done inductively , by defining a sequence of strategies @xmath510 such that if @xmath511 then @xmath512 and @xmath513 agree on all @xmath4 views of length at most @xmath480 . at each stage of the construction",
    ", we claim that for all @xmath4 views @xmath185 of length @xmath514 , if @xmath515 then @xmath516 .",
    "inductively , we let @xmath517 be any strategy and define @xmath518 if @xmath519 and @xmath520 , and @xmath521 otherwise . evidently , @xmath522 is well defined by the claim that @xmath523 then @xmath524 .",
    "also this definition plainly satisfies the condition that if @xmath511 then @xmath512 and @xmath513 agree on all views of length at most @xmath480 .",
    "note also that since @xmath525 , by the claim there does not exist an @xmath4 view @xmath185 of length @xmath13 such that @xmath526 .",
    "it follows that @xmath527 excludes @xmath367 .",
    "it therefore suffices to show that the definition satisfies the claim .",
    "note that it holds trivially for any strategy if @xmath528 .",
    "suppose that for all @xmath4 views @xmath185 of length @xmath48 , if @xmath523 then @xmath516 .",
    "let @xmath529 be an @xmath4 view of length @xmath530 with @xmath531",
    ". then also @xmath532 and @xmath533 .",
    "since @xmath512 and @xmath522 agree on views of length at most @xmath480 , we also have @xmath534 , so @xmath535 . by lemma  [ lem : delta ] , we have that @xmath536 @xmath537 , as required .",
    "we obtain the claimed complexity bound from lemma  [ lem : ndsreduction ] , simply by noting that it reduces @xmath1 to a reachability problem in the transition system @xmath462 .",
    "since the states of the system @xmath462 can be represented in space @xmath538 , we obtain from savitch s theorem that we can do the search in dspace@xmath539 .      to show that @xmath80 is * expspace*-hard",
    ", we show how to encode the game blind - peek of reif  @xcite .",
    "we need only scheduled machines for the encoding , so the problem is * expspace*-hard already for this subclass .      blind - peek is a variant of the two - player game peek introduced by stockmeyer and chandra  @xcite .",
    "a peek game consists of a box with two open sides that contains horizontally stacked plates ; the players sit at opposite sides of the box .",
    "each plate has two positions , ` in ' and ` out ' , and contains a knob at one side of the box , so that this plate can be controlled by one of the players . at each step ,",
    "one of the two players may grasp a knob from his side and push it ` in ' or ` out ' .",
    "the player may also pass .",
    "both the top of the box and the plates have holes in various positions , and each hole is associated to a player .",
    "if , just after a move of player @xmath540 , the plates are positioned so that for one of the player s holes in the top of the box , it is possible to peek through from the top of the box to the bottom ( i.e. , each plate has a hole positioned directly underneath the top hole ) , then player @xmath86 wins . in peek , both players can observe the position of all plates at all times .",
    "blind - peek  @xcite ( more formally , the game @xmath541 of that paper ) is a modification of peek in which player @xmath101 s side of the box is partially covered , so that it is not possible for player @xmath101 to see the positions of the plates controlled by player @xmath542 .",
    "we may represent the game formally as follows :    an instance @xmath543 of the blind - peek game is given by a tuple @xmath544 where @xmath13 and @xmath545 are natural numbers with @xmath546 , @xmath547 are disjunctive normal form formulas over the set of atomic propositions @xmath548 , and @xmath549\\rightarrow \\{0,1\\}$ ] represents a boolean assignment to these propositions .",
    "the size of the instance is @xmath550 .",
    "here @xmath551 , for @xmath552 , is the number of holes on the top of the box for each player .",
    "intuitively , @xmath13 gives the number of plates , and the propositions @xmath553 for @xmath554 correspond to the positions of the plates , which can be either @xmath555 ( @xmath553 false ) or @xmath556 ( @xmath553 true ) , and a state of the game @xmath543 is given by a mapping @xmath557 \\rightarrow \\{0,1\\}$ ] , with @xmath553 true at @xmath558 just when @xmath559 .",
    "the total number of states in a game is thus exponential in the size of the game .",
    "the assignment @xmath560 specifies the initial state of the game .",
    "the number @xmath545 specifies the number of plates associated to player 1 ; we take these to be plates @xmath561 .",
    "the formula @xmath562 gives the winning condition for player @xmath48 .",
    "each disjunct @xmath563 corresponds to one of the holes on the top of the box that is associated to player @xmath48 . which literals are in @xmath563 depends on how the hole in the top of the box aligns with a hole on the plates when these are in or out .",
    "if there is always an alignment with a hole on plate @xmath457 then @xmath563 contains neither @xmath553 nor @xmath564 .",
    "if there is an alignment only when the @xmath457-th plate is @xmath556 then @xmath563 contains the literal @xmath553 , and conversely , if there is an alignment only when the @xmath457-th plate is @xmath555 then @xmath563 contains the literal @xmath564 .",
    "( if there is never an alignment then we may include both @xmath553 and @xmath564 , but , obviously , we may just as well remove the hole from the game . )    players  1 and  2 play in turn by moving one of their plates or passing .",
    "as the players plate numbers partition the set @xmath565 $ ] , we can denote the moves of the players @xmath566 with @xmath567 ; if @xmath568 $ ] it is a move of player  1 , and a move of player  2 otherwise .",
    "we let @xmath569 and @xmath570 .",
    "a _ play _ @xmath571 in @xmath543 is an alternating sequence of player  1 and player  2 moves of the form @xmath572 where @xmath573 is a player  1 move in @xmath574 when @xmath575 is odd and a player  2 move in @xmath576 when @xmath575 is even .",
    "moreover , if @xmath577 then @xmath578 and if @xmath579 , then @xmath580 and @xmath581 for @xmath582",
    ".    a state @xmath558 is winning for player @xmath583 if it satisfies the formula @xmath584 .",
    "a play @xmath571 is _ winning for player @xmath583 _ if it contains a state @xmath585 immediately after a move by player @xmath583 that is winning for that player , and there is no earlier such winning state for the other player .",
    "otherwise the play is undecided .",
    "we are interested in the problem of deciding whether there is a winning strategy for player 1 , i.e. , a way for the player to choose their moves that guarantees , whatever the other player does , that player 1 will win .",
    "strategies usually choose a next move based on what the player has been able to observe over a play of the game . in the case of the game @xmath543 ,",
    "the information directly visible to player 1 in a state is just the position of plates @xmath561 .",
    "player 2 sees the position of all plates .",
    "a player also remembers the sequence of moves they have played at their turn . at each step of the play , the player is also advised whether any player has won the game .",
    "( in a physical realization of the game , if a player were to peek through a hole they would be able to see which is the topmost plate that blocks it .",
    "we assume that the player does _ not _ get this information in the formal game .",
    "one can imagine a physical realization in which a referee peeks through the holes and announces the result . )    since the winning condition is a discrete , state - based condition , deterministic strategies suffice .",
    "moreover , note that , except for the information about who has won the game , the effect of the players moves on the information directly visible to player 1 is deterministic : we can deduce the position of player 1 s plates from the moves that player 1 has made so far in the game .",
    "thus , every undecided play in which player 1 has made a particular sequence of moves yields the same view for player 1 , and on a deterministic strategy , player 1 must make the same next move on all such plays .",
    "this means that we may represent a player 1 strategy simply by a ( finite or infinite ) sequence of moves @xmath586 .",
    "such _ a strategy is winning for player 1 _ if every play with this sequence of moves by player 1 is winning for player 1 .",
    "the following result characterizes the complexity of blind - peek .    *",
    "* the game blind - peek is complete for expspace under log - space reductions .",
    "we use this result to show that nds  is expspace - hard .",
    "given an instance @xmath543 of blind - peek , we construct a synchronous system @xmath587 of size polynomial in the size of @xmath543 , with the following property : player 1 has a winning strategy in @xmath543 iff there exists an @xmath3 view @xmath588 and an @xmath4 strategy @xmath108 that excludes @xmath588 in @xmath587 .",
    "intuitively , the winning strategy @xmath589 of player 1 in the game @xmath543 will be encoded within the sequence of @xmath3 actions contained in the view @xmath588 .",
    "the role of the @xmath4 strategy @xmath108 in the machine @xmath587 is to help in the verification that the strategy @xmath589 is winning , by ensuring that the view @xmath588 can not occur when this is the case .",
    "as we can not encode the exponential number of possible states of the blind - peek game @xmath543 directly in the polynomial number of states of @xmath587 , we use an encoding trick , which is to represent the state of the game as the set of states of @xmath587 that are consistent with the @xmath4 view .",
    "roughly , each such consistent state corresponds to one of the plates ; there are some additional states for initialization and book - keeping related to the winning condition .",
    "we let @xmath590 be the number of plates that can be moved by player 2 .",
    "the machine @xmath587 will be a scheduled machine ( see section  [ sec : schedmachine ] ) , with deterministic schedule following the regular expression @xmath591 . here occurrences of @xmath4 and @xmath3 indicate which agent s action the transition is allowed to depend upon , and @xmath592 is for a system step that is independent of both agents @xmath4 and @xmath3 .",
    "we call each instance of the infinitely repeated block @xmath593 a _ round _ , and use indices , as in @xmath594 to refer to the stages of the round",
    ".    the alphabet of actions for @xmath3 and @xmath4 are @xmath19 and @xmath18 defined by : @xmath595 \\ } \\\\    a_l & = & a_l^- \\cup \\ { \\cw \\ } \\\\",
    "a_h & = & \\ { \\isopen_k \\ | \\ k \\in [ 1 .. h_1 ] \\ } \\cup \\ { \\isblocked_k \\ | \\ k \\in [ 1   \\dots n ] \\ } \\mathpunct.\\end{aligned}\\ ] ] informally , the behaviour of @xmath587 in each step is as follows :    1 .   in the first @xmath592 step of the schedule ,",
    "the machine nondeterministically makes a transition to one of @xmath13 subsystems , each of which monitors one particular plate of the game .",
    "neither @xmath4 nor @xmath3 is able to see which subsystem they are actually in during subsequent transitions .",
    "the machine then moves into the cyclically repeated rounds .",
    "the @xmath596 stage of each round allows @xmath3 to perform one move of player 1 in the game @xmath543 ( using an action @xmath566 ) or to pass ( using the action @xmath597 ) .",
    "this stage corresponds to a move according to a blindfold strategy of player  1 .",
    "3 .   in the following @xmath598 stage , agent",
    "@xmath4 is given an opportunity to assert that the last @xmath3 move has achieved a win of player  1 , by specifying a hole @xmath575 of player 1 and claiming that it is possible to peek through ( using an action @xmath599 ) .",
    "@xmath4 may also pass ( using any other action ) .",
    "4 .   the following @xmath600 stage allows @xmath3 to check , by performing a  \" action , if a winning state has been reached , as claimed by @xmath4 sometime before .",
    "if it is so , then some of the @xmath3 views will be ruled out .",
    "if it is still not a win , or @xmath4 has not yet asserted a win , or @xmath4 has made a mistake , this `` '' action will not rule out any @xmath3 view .",
    "( once a `` '' fails in this way , no @xmath3 views will be excluded thereafter . )",
    "the next stage @xmath592 simulates a move of player  2 in the game @xmath543 .",
    "6 .   during the last @xmath601 stages ,",
    "agent @xmath4 is given an opportunity to assert that the last player  2 move is not a win , and explain this claim by pointing , for each of the @xmath601 peek - holes of player  2 , to a plate @xmath575 that blocks that hole , using an action @xmath602 .",
    "the observations of the agents @xmath603 in @xmath587 are defined so that neither agent ever learns which plate is being simulated on the current run .",
    "agent @xmath3 observes the player 1 moves and a result of any",
    " \" actions .",
    "agent @xmath4 observes all moves by either player .",
    "intuitively , suppose player  1 has a winning strategy and agent @xmath3 faithfully follows this strategy in the @xmath596 stage of each round .",
    "suppose also that agent @xmath4 , who knows every previous move of the play , always makes correct assertions about whether holes are open or blocked .",
    "then @xmath3 is guaranteed to be able to eventually make a successful `` checkwin '' and get some @xmath3 views ruled out . to handle the case where @xmath4 makes incorrect assertions",
    ", the construction ensures that no @xmath3 view is eliminated if this happens .",
    "thus , the statement that there is some @xmath4 strategy that eliminates an @xmath3 view corresponds to the statement that @xmath4 has a way of making correct assertions in order to show that the player 1 strategy is winning .      formally , the state space of @xmath587 is defined as @xmath604 where @xmath20 is the initial state , and the components are as follows :    * @xmath605 encodes a clock that represents the current stage in a round of the cyclic part of the schedule , * @xmath606 represents the plate being monitored , * @xmath607 encodes whether the current plate is `` in '' or `` out '' , * @xmath608 records the most recent move in the play ( and @xmath592 for simulation steps that do not correspond to game steps ) , and * @xmath609 records the result of claims made by @xmath4 .",
    "the observation mappings for @xmath4 and @xmath3 on these states are given by :    * @xmath610 and @xmath611 , where @xmath612 and @xmath613 , and @xmath614 for all @xmath82 not of this form .",
    "* @xmath615 , and @xmath616 and @xmath617 for all @xmath618 .",
    "states of @xmath587 of type @xmath619 encode information about the effect of the play of the game so far on a particular plate : @xmath620 indicates the current stage of the simulation , @xmath621 $ ] is a _ monitored _ plate , @xmath622 is the position of the plate @xmath48 and @xmath623 is the most recent move made in the game , or @xmath592 if none .",
    "high level structure of @xmath587,height=226 ]    states of @xmath587 in @xmath624 are used to capture the effect of assertions made by @xmath4 relating to the winning conditions , and play a key role in ensuring that an @xmath3 view is eliminated under the appropriate conditions .",
    "these states form a  terminal \" part of the machine : it is not possible to return to the component @xmath625 from these states .",
    "the @xmath626 component simply tracks the simulation stages .",
    "figure  [ fig : terminal ] sketches the way that the @xmath627 components of these states are used to check winning conditions for the game and to generate observations .    intuitively , at various stages of the simulation ( viz . ,",
    "@xmath598 and @xmath628 ) , agent @xmath4 is allowed to make assertions about the state of the game .",
    "when @xmath4 makes such an assertions , @xmath587 checks whether they are true at the plate being simulated .    *",
    "if the assertion entails that there is not yet a win for player 2 , and is true of the present plate , or does not concern the present plate , then we continue the simulation .",
    "( specifically , this case occurs when the assertion is that a particular plate is blocking the hole for player 2 under consideration , and this is true or concerns another plate . ) * if the assertion entails a win for player 1 and is true of the present plate , then a transition is made to a state @xmath629 .",
    "( specifically , the assertion is that a particular player 1 hole is open , and this holds at the present plate . ) * the remaining possibility is that the assertion is false . in this case",
    "we make a transition to a state @xmath630 .",
    "( we have this case when either the assertion is that a particular player 1 hole is open , but this is false at the present plate , or is that the present plate is blocking a particular player 2 hole , but this is false . )",
    "when @xmath3 eventually performs a @xmath597 action in the appropriate phase @xmath600 , states with @xmath631 could produce either the observation @xmath101 or @xmath542 .",
    "by contrast , states with @xmath629 produce only the observation 1 .",
    "thus , the @xmath632 states result in a reduced set of views . note that we can only check assertions locally at the current plate , and the winning condition for player 1 requires that a player 1 hole be unblocked at all plates . the way that the encoding handles this is via @xmath3 s uncertainty about which plate",
    "is being monitored : if there is any plate at which the hole is blocked , then there will be a run consistent with @xmath3 s observations , monitoring this plate , at which we have @xmath631 .",
    "when @xmath3 performs @xmath597 in this run it will obtain both observations @xmath101 and @xmath542 , and the set of views is not reduced .      in general , transitions in a machine",
    "are labelled by joint actions @xmath633 of @xmath4 and @xmath3 , but since @xmath587 is a scheduled machine , at most one of these has any effect on the state . to simplify the presentation",
    ", we use the convention of writing @xmath634 with @xmath635 , to indicate that the current transition is dependent only on @xmath42 , and write @xmath636 if the transition is independent of both @xmath4 and @xmath3 ( i.e. , a system step ) . to capture the scheduler",
    ", we define the function @xmath637 so that it maps each element of the sequence @xmath638 to the element next in the sequence , with @xmath639 .    to describe the transitions we use the following predicates relating to the winning conditions .",
    "when @xmath552 is a player , @xmath640 is a hole associated to that player , @xmath641 is a plate and @xmath642 is a plate position , we define @xmath643 , to be true just when either proposition @xmath553 does not occur positively or negatively in @xmath563 , or @xmath553 occurs positively in @xmath563 and @xmath100 or @xmath564 occurs in @xmath563 and @xmath104 .",
    "intuitively , this says that when plate @xmath457 is in position @xmath99 , it is not blocking hole @xmath575 .",
    "we group the transitions according to the step of the schedule .",
    "we first describe transitions from states in @xmath644 .",
    "[ [ initial - step - bot ] ] * initial step @xmath592 * + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the initial state of @xmath587 is @xmath20 . from this state , we non - deterministically choose one plate to be monitored . this transition does not depend on any agents and has the form @xmath645 for @xmath646 $ ] , where @xmath560 is the initial state of @xmath543 .    [ [ stage - l_1 ] ] * stage @xmath596 * + + + + + + + + + + + + + + + + + + + + + + + + +    at this stage",
    ", we simulate player  1 s move of a plate @xmath575 .",
    "the special action @xmath597 is used for the pass move . for each @xmath647 , and state @xmath648",
    "there is a transition of the form : @xmath649 with @xmath650 if @xmath651 and @xmath652 otherwise .",
    "we also add @xmath653 for the pass move .    [ [ stage - h_0 ] ] * stage @xmath598 * + + + + + + + + + + + + + + + + + + + + + + + + +    at this stage @xmath4 may try to prove that player  1 can peek through some hole @xmath654 $ ] . to do this",
    ", it chooses an action @xmath599 . as it is a guess",
    ", @xmath4 might be wrong .",
    "if @xmath4 claims that player  1 can peek through hole @xmath575 and this is right at the present plate , we reach a `` winning '' state in @xmath655 , otherwise an error state . from a plate simulation state @xmath656",
    "there is a transition @xmath657 where @xmath658 if @xmath659 , and @xmath660 otherwise .",
    "@xmath4 may also intentionally choose not to declare a win , by performing any of its actions @xmath602 for @xmath661 .",
    "this is captured by the transitions @xmath662 for @xmath661 .",
    "[ [ stage - l_2 ] ] * stage @xmath600 * + + + + + + + + + + + + + + + + + + + + + + + + +    at this stage , @xmath3 can perform the action `` @xmath597 '' to check if @xmath4 has proved a win by player 1 .",
    "if the current state at this stage is a plate simulation state , then @xmath4 has not yet claimed a win for player 1 , and any past assertions made by @xmath4 about player 2 s winning condition were either true or irrelevant to the current plate . in this case",
    ", we do not have evidence for a player 1 win , so we do not wish to eliminate an @xmath3 view .",
    "thus , from states @xmath663 , we have transitions @xmath664 so that both observations 1 and 2 can be obtained .",
    "agent @xmath3 is also allowed to continue playing without checking for a win , by performing any of the actions @xmath665 with @xmath666 $ ] . for this case",
    "we have a transition @xmath667 ( we discuss the case of transitions at this stage from states in @xmath624 below . )    [ [ stage - bot ] ] * stage @xmath592 * + + + + + + + + + + + + + + + + + + + + + + + + + +    at this stage , we simulate a move of a plate by player  2 .",
    "the following transitions are in @xmath587 : @xmath668 for each @xmath669 , @xmath670 and @xmath671 $ ] ( player  2 s plates ) , and : @xmath650 if @xmath672 and @xmath652 otherwise . to model a pass move by player 2",
    "we also have a transition @xmath673    [ [ stages - h_1-to - h_h_2 ] ] * stages @xmath674 to @xmath675 * + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    in these stages , @xmath4 tries to prove that that last move by player 2 was not a winning move for player 2 .",
    "it does so by showing that all player  2 holes are blocked ( by at least one plate ) . for each player 2",
    "peek hole @xmath575 , at stage @xmath676 , agent @xmath4 chooses a plate @xmath677 $ ] and asserts that the hole is blocked by that plate using the action @xmath678 . an incorrect assertion results in a transition to an error state @xmath679 . in particular ,",
    "if the current state is indeed a win of player  2 , then some hole @xmath575 is open at all plates , and any attempt @xmath4 makes to assert that it closed at a plate causes a transition to an error state .",
    "this is encoded by the following transitions . at state @xmath680 with",
    "@xmath681 $ ] , we have @xmath682 when either @xmath683 ( plate @xmath48 is not monitored in the current state ) , or @xmath684 and not @xmath685 ( the present plate is blocking player 2 s hole @xmath575 ) . on the other hand ,",
    "if @xmath686 and @xmath685 , i.e. , player  2 s peek hole @xmath575 is not blocked by plate @xmath48 , we have the transition @xmath687    as pointed out before , the construction is designed to ensure that @xmath4 knows the exact state of the game and thus can always determine whether a peek hole is blocked or not .",
    "since we are looking for a winning strategy for player 1 , if there is a win by player 2 then the present @xmath3 strategy has failed .",
    "we would therefore like to insist that @xmath4 must play only @xmath678 actions at this stage of the process . to ensure this , we define transitions so that all @xmath4 actions other than @xmath678 cause an error transition at these stages .",
    "that is , for all @xmath4 actions @xmath599 and states of the form @xmath688 with @xmath689 , we have a transition @xmath690    this completes the description of transitions from states in @xmath691 .    [ [ transitions - from - mathbbctimes - mathbbf ] ] * transitions from @xmath624 * + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the behaviour of the machine on states in @xmath624 was described informally above .",
    "the main effect of actions is from @xmath597 actions performed at stage @xmath600 . from states with observation @xmath592 , the action @xmath597 causes an @xmath3 observation of @xmath101 or @xmath542 . for the @xmath632 states we have a transition @xmath692 and for the @xmath693 states we have transitions @xmath694 for all other cases , i.e. , for @xmath695 and an action @xmath696 , or for @xmath697 and an action @xmath99 ( appropriate to stage @xmath698 ) , we have for all @xmath613 a transition @xmath699 states at which an observation of @xmath101 or @xmath542 has already been obtained by @xmath3 act as sinks , except for scheduler moves , i.e. , we have a transition @xmath700 for all @xmath701 , @xmath702 and @xmath703 .",
    "we now give the argument for the correctness of the encoding .",
    "we first characterize the views obtained by the agents in @xmath587 . in the case of agent @xmath3 ,",
    "the structure of the possible views follows straightforwardly from the fact that the transitions as defined above follow the structure indicated in figure  [ fig : terminal ] . until a @xmath597 action is performed by @xmath3 at some stage @xmath600 state , @xmath3 observes @xmath592 .",
    "once it performs that action at this stage , it will observe either @xmath101 or @xmath542 for the remainder of time .",
    "thus , @xmath3 views are prefixes of the sequences generated by the regular expressions @xmath704 with @xmath705 or @xmath706 . here",
    "the expression @xmath707 corresponds to a round in which @xmath3 does not perform @xmath597 at stage @xmath600 .",
    "if @xmath185 is an @xmath3 view , we write @xmath708 for the subsequence of player 1 actions performed at times when the simulation is at stage @xmath596 , where we treat a @xmath597 at such a time as the action @xmath709",
    ".    the @xmath4 views are prefixes of the sequences in the regular expression @xmath710 where the observations obtained at stage @xmath598 are in @xmath711 , the observations obtained at stage @xmath674 are in @xmath712 , and all other observations before the first @xmath713 are @xmath592 .",
    "we will show that there is a correspondence between plays of the game @xmath543 and views @xmath367 of @xmath4 .",
    "in particular , given an @xmath4 view @xmath367 , let @xmath714 be the subsequence of elements of @xmath715 appearing in observations .",
    "it follows from the definition of the transition relation that @xmath716 is an alternating sequence of player 1 and player 2 actions .",
    "since the moves of @xmath543 have a deterministic effect on the states of @xmath543 , we obtain a play @xmath717 of the game @xmath543 .",
    "we define @xmath718 to be the final state @xmath719 of @xmath720 .",
    "consider an action @xmath86 of @xmath4 performed at an @xmath4 view @xmath367 at stage @xmath698 .",
    "this will be recorded in the view of @xmath4 , which will have the form @xmath721 immediately after this action .",
    "we say that the action @xmath86 is _ truthful _ at view @xmath367 , if    * @xmath722 is the view obtained at the run @xmath20 , or * @xmath367 contains an action @xmath599 ( intuitively , @xmath4 has already discharged the obligation to prove that @xmath3 wins ) , or * the stage @xmath698 is in @xmath723 ( @xmath4 makes no assertion at these stages ) , or * @xmath724 and @xmath725 and hole @xmath575 of player 1 is open in state @xmath718 , i.e. , @xmath718 satisfies @xmath726 , or * @xmath724 and @xmath727 for some @xmath575 ( this corresponds to no assertion by @xmath4 ) , or * @xmath728 for @xmath729 $ ] and @xmath730 and not @xmath731 , i.e. , player 2 s hole @xmath457 is blocked at plate @xmath48 in state @xmath718 .    note that we omit the case where @xmath732 , @xmath733 and @xmath725 ;",
    "intuitively , this corresponds to an assertion of false by @xmath4 , which has an obligation to prove that the play is winning for player 1 , and is failing to do so in this instance .",
    "we say that the view @xmath367 is truthful if for every prefix @xmath721 , the action @xmath86 is truthful at @xmath367 .",
    "we now show that , so long as the play @xmath720 is undecided , the knowledge set of @xmath4 encodes the state @xmath718 . for agent @xmath42",
    "we write @xmath734 for the set of final states of runs @xmath53 of @xmath587 with @xmath735 , representing agent @xmath42 s knowledge of the state after obtaining view @xmath185 . given a stage @xmath698 , a state @xmath558 of game @xmath543 and @xmath736",
    ", we let @xmath737 be the set defined by @xmath738\\}}$ ] . note that @xmath558 can be recovered from the set @xmath737 .",
    "[ prop : undecided ] suppose that @xmath367 is an @xmath4 view in @xmath587 of length at least 1 such that @xmath367 does not contain the observation @xmath713 and @xmath720 is an undecided play of game @xmath543 .",
    "let @xmath698 be the stage reached at the end of @xmath367 and let the final observation of @xmath367 be @xmath86 .",
    "then if @xmath367 is truthful , we have @xmath739 .",
    "we proceed by induction on the length of @xmath367 .",
    "if @xmath367 has length 1 , then it arises from a run @xmath740 so we have @xmath741 , and @xmath716 is the empty sequence , corresponding to the play @xmath742 .",
    "( since we are interested in views , we use the explicit form of runs here , with actions of both @xmath4 and @xmath3 given , rather than the shorthand form used above , which mentioned only actions of the scheduled agents and implies that action the other agents may take all possible values . ) the runs consistent with @xmath367 are @xmath743 where @xmath744 and @xmath86 is some action of @xmath3 . it is immediate that the claim holds .",
    "inductively , assume that @xmath745 is a truthful @xmath4 view in @xmath587 such that @xmath739 for some @xmath701 and @xmath746 .",
    "we need to show that @xmath747 for some @xmath748 and @xmath749 .",
    "note that @xmath750 we consider each of the possible cases of the stage @xmath698 .",
    "[ [ stage - cl_1 ] ] stage @xmath751 + + + + + + + + + + + + + + + + + + + + + + + + +    here we have either @xmath752 or @xmath753 , which records the action of @xmath3 , and the transition does not depend on @xmath171 .",
    "note that @xmath754 in this case .",
    "let @xmath755 , so that @xmath756 . for each plate @xmath757 , we have @xmath758 , and there is a unique transition @xmath759 yielding observation @xmath760 at the next state .",
    "it follows that @xmath761 .",
    "[ [ stage - ch_0 ] ] stage @xmath762 + + + + + + + + + + + + + + + + + + + + + + + + +    here we have @xmath763 , and @xmath764 and @xmath765 .",
    "since @xmath766 is undecided , @xmath718 is not a winning position for player 1 . because @xmath767 is truthful",
    ", we can not have that @xmath171 is @xmath599 for any @xmath575 , so we must have that @xmath768 for some @xmath575 .",
    "for each plate @xmath757 , we have @xmath769 , and there is a transition @xmath770 yielding observation @xmath592 at the next state for each action @xmath205 of @xmath3 .",
    "it follows that @xmath761 .",
    "[ [ stage - cl_2 ] ] stage @xmath771 + + + + + + + + + + + + + + + + + + + + + + + + +    since @xmath367 does not contain @xmath713 , here we have @xmath763 , and @xmath3 can not have performed the action @xmath597 .",
    "also @xmath764 and @xmath765 .",
    "thus , from each @xmath772 , we have a transition @xmath773 from which we obtain that @xmath774 .    [",
    "[ stage - cbot ] ] stage @xmath775 + + + + + + + + + + + + + + + + + + + + + + + + + +    here we have that @xmath776 or @xmath777 for some plate @xmath778 of player 2 .",
    "thus , @xmath779 and if @xmath755 then @xmath780 . for each plate @xmath757 , we have @xmath781 , and there is a unique transition @xmath782 yielding observation @xmath760 .",
    "it follows that @xmath783 .",
    "[ [ stage - ch_i - for - i-1ldots - h_2 ] ] stage @xmath784 for @xmath785 + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    here we have @xmath763 , and @xmath764 and @xmath765 .",
    "since @xmath767 is truthful and @xmath786 is undecided , the position is not winning for player 2 .",
    "thus , we must have that @xmath768 for some @xmath575 such that not @xmath787 .",
    "for each plate @xmath788 , we have @xmath789 , and there is a transition @xmath790 yielding observation @xmath592 for every @xmath3 action @xmath86 .",
    "it follows that @xmath783 .",
    "in fact , we can show this characterization of @xmath791 in one further case , corresponding to the state of the simulation just after player 1 plays a winning move .",
    "[ prop : undecided - final ] suppose that @xmath367 is an @xmath4 view in @xmath587 of length at least 1 such that @xmath367 does not contain the observation @xmath713 and @xmath720 is a play in which the last move is a move of player 1 by which player 1 wins the game .",
    "assume that no shorter prefix of @xmath367 has this property and let the final observation of @xmath367 be @xmath86 .",
    "then if @xmath367 is truthful , we have @xmath792 .",
    "the minimality constraint on @xmath367 implies that @xmath793 where @xmath794 is at stage @xmath596 , that @xmath795 is not a winning play for either player , and that @xmath796 is a move of player  1 such that @xmath797 . by proposition  [ prop : undecided ] , we obtain that @xmath798 for some @xmath86 . the argument for the case of @xmath799 in the proof of proposition  [ prop : undecided - final ] now yields the conclusion .",
    "[ prop : lh ] suppose that @xmath53 is a run of @xmath587 and @xmath800 is a state in @xmath691 .",
    "then there exists a run @xmath227 of @xmath587 with final state @xmath82 such that @xmath801 and @xmath802 .    by induction on the length of @xmath53 . for @xmath803 ,",
    "the statement is trivial , since we must have @xmath804 . for another base case ,",
    "suppose @xmath53 is the initial step of a run . in this case ,",
    "@xmath805 and @xmath806 and @xmath807 .",
    "if @xmath800 , then we must have @xmath808 for some @xmath575 .",
    "we may take @xmath809 and this has the required properties .    for the induction , let @xmath810 where the result holds for @xmath811 , which is at stage @xmath698 .",
    "let @xmath800 .",
    "since @xmath812 , the final observation of @xmath813 is not @xmath713 , and it follows that @xmath814 also .",
    "we have that @xmath815 for some @xmath816 , and arises in @xmath817 from some run @xmath818 with @xmath819 and @xmath820 and @xmath821 .",
    "necessarily , the final state of @xmath822 is in @xmath691 .",
    "moreover , it is in @xmath823 . by the induction hypothesis",
    ", there exists a run @xmath824 ending in the same final state as @xmath822 , with @xmath825 and @xmath826 .",
    "we consider the possibilities for the scheduler step @xmath698 of @xmath811 :    * _ case @xmath751 _ : note that at this stage , the final @xmath3 action in @xmath53 can be deduced from @xmath821 , so in fact we have @xmath827 also .",
    "let @xmath828 this is a run because @xmath824 and @xmath822 have the same final state , and the final transition in @xmath227 is identical to the final transition of the run @xmath822",
    ". then @xmath829 and @xmath830 , as required .",
    "* _ case @xmath728 for @xmath831 _ : transitions at these stages are independent of @xmath3 , so we can switch the action of @xmath3 in any transition label while keeping the states the same .",
    "so @xmath832 is a run and satisfies the required properties . *",
    "_ case @xmath833 _ : here it follows from @xmath814 that @xmath834 .",
    "hence @xmath835 for some @xmath575 , and @xmath836 .",
    "for the same reasons , @xmath837 for some @xmath838 .",
    "the transitions for @xmath665 and @xmath839 at this stage are identical .",
    "we may therefore take @xmath832 and this is a run and satisfies the required properties . * _ case @xmath840 _ : here transitions are independent of both players , so @xmath832 is a run and satisfies the required properties .",
    "this completes the proof of the inductive case .",
    "we can now prove the key result that shows that @xmath543 has a winning strategy for player  1 iff @xmath587 satisfies @xmath1 .",
    "there exists a winning strategy for player  1 in @xmath543 iff there is an @xmath3 view @xmath185 of @xmath587 and an @xmath4 strategy @xmath108 that excludes @xmath185 in @xmath587 .",
    "[ [ only - if - part ] ] only if part + + + + + + + + + + + +    assume player  1 has a winning strategy in @xmath543 . as argued before , this strategy can be given by the list @xmath841 of moves of player  1 .",
    "the number of moves player  1 needs to win is bounded : indeed , in every play of the game , a winning position for player 1 is eventually reached , and no winning position for player 2 is reached before this position . by koenig s lemma , there exists a number @xmath842 such in all plays of the game compatible with @xmath589 , player 1 has won the game at the latest , just after the @xmath842-th move .",
    "thus , we may assume that @xmath843 .",
    "we can prove that there exists an @xmath4 strategy @xmath108 in @xmath587 that excludes the @xmath3 view @xmath844 where @xmath845 denotes any letter in @xmath846 , and each @xmath847 for @xmath48 odd is the @xmath3 action that corresponds to @xmath848 at stage @xmath596 , i.e. , @xmath849 if @xmath850 for some @xmath575 , and @xmath851 if @xmath852 . the strategy @xmath4 is defined as follows . for @xmath4 views @xmath367 such that the sequence of player 1 moves in @xmath716 is a prefix of @xmath589 , we let @xmath853 be any truthful action of @xmath4 at @xmath367 . in all other cases , @xmath853 is chosen arbitrarily .",
    "we first need to show that @xmath108 is well - defined . for this , we need to show that @xmath4 is able to act truthfully whenever the sequence of player 1 moves in @xmath716 is a prefix of @xmath589 .",
    "suppose , therefore , that the sequence of player 1 moves in @xmath716 is a prefix of @xmath589 .",
    "then the play @xmath720 is not winning for player 2 , since @xmath589 is a winning strategy for player 1 .",
    "there are two possibilities : the play is undecided , or the play is winning for player 1 .",
    "if the play @xmath720 is undecided , then by proposition  [ prop : undecided ] , we have that @xmath739 .",
    "since @xmath718 is , by definition , the final state of @xmath543 reached in the play @xmath716 , if @xmath716 ends in a move of player 1 then @xmath718 is not a winning state for player 1 , and if @xmath716 ends in a move of player 2 then @xmath718 is not a winning state for player 2 . in either case , depending on the stage , it is possible to select an action that is truthful at @xmath367 .    in the other case , the play @xmath720 is already winning for player 1 .",
    "let @xmath794 be the smallest prefix of @xmath367 such that @xmath854 is winning for player 1 .",
    "since the last action in @xmath854 is a move of player 1 ( we can assume without loss of generality that the game is undecided at the initial state ) , must have that @xmath794 is at stage @xmath598 , and @xmath718 is a winning state for player 1 . in the case that @xmath855 , we choose @xmath853 to be any action @xmath599 such that @xmath718 satisfies @xmath726 , i.e. , player 1 s hole @xmath575 is open at all plates in @xmath718 .",
    "this is then a truthful action at @xmath367 . in all other cases ,",
    "we choose @xmath853 arbitrarily .",
    "( note that , by definition , after @xmath4 s first @xmath599 , any choice of @xmath4 action is truthful . )    we now argue that @xmath108 excludes view @xmath185 . to the contrary ,",
    "suppose that @xmath53 is run consistent with @xmath108 and @xmath856 .",
    "consider @xmath857 , and write this as @xmath858 .",
    "then the sequence of player 1 moves in @xmath859 is @xmath589 .",
    "since @xmath589 is a winning strategy for player 1 , the play @xmath860 is a winning play for player 1 .",
    "consider the shortest prefix @xmath861 of @xmath862 such that @xmath863 is a winning play for player 1 .",
    "then @xmath861 is at stage @xmath674 , and there is at least one @xmath4 action @xmath86 and observation @xmath864 such that @xmath865 is a prefix of @xmath367 .",
    "( in the worst case , @xmath866 and @xmath867 . ) by construction of @xmath108",
    ", @xmath86 is an action @xmath599 that is truthful at @xmath861 . using proposition  [ prop : undecided - final ] , @xmath868 for some @xmath205 . because @xmath599 is truthful at @xmath861",
    ", we obtain that @xmath869 .    in particular , the prefix @xmath822 of @xmath53 with @xmath870 has final state @xmath871 . since @xmath3 does not perform @xmath597 at stage @xmath600 in the interim ,",
    "the prefix @xmath811 of @xmath53 with @xmath872 has final state @xmath873 .",
    "but then we get that the final state of @xmath53 , after @xmath3 performs @xmath597 , is @xmath874 , which yields an @xmath3 observation of 1 rather than the final observation 2 of @xmath185 .",
    "this is a contradiction .",
    "[ [ if - part ] ] if part + + + + + + +    assume there is no winning strategy for player  1 in @xmath543 .",
    "we show that there is no @xmath4 strategy that can exclude any @xmath3 view . to the contrary ,",
    "assume an @xmath3 view @xmath185 that is excluded by an @xmath4 strategy @xmath108 .",
    "the following must hold :    1 .   the view @xmath185 contains a @xmath597 action at stage @xmath600 . indeed ,",
    "if no @xmath597 action at stage @xmath600 occurs , then all @xmath3 observations in the view must be @xmath592 . for any such sequence of @xmath3 actions ,",
    "there is always a run consistent with @xmath108 yielding @xmath3 observation @xmath592 throughout , so that , contrary to assumption , @xmath185 is not excluded by @xmath108 .",
    "the view @xmath185 is not of the form @xmath875 , with @xmath876 being a view at stage @xmath600 , and containing no prior @xmath597 action at stage @xmath600 .",
    "there is always a run consistent with @xmath108 that yields such a view .",
    "there are two possibilities .",
    "if the final state @xmath82 of a run yielding @xmath3 view @xmath876 is in @xmath691 , then the @xmath597 action extends this run to one yielding @xmath3 view @xmath877 by means of the stage @xmath600 transition @xmath878 otherwise , the state @xmath82 is in @xmath624 , and must be of the form @xmath879 , for @xmath880 , since there has not yet been a @xmath597 at stage @xmath600 . in this case , we obtain observation @xmath101 at the next step by means of a transition @xmath881 for both possible values of @xmath53 .",
    "the resulting states with observation @xmath101 are sinks , so we can extend these runs to obtain a run with @xmath3 view @xmath875 .",
    "( in either case , we may take the @xmath4 action in the final transition to be the action prescribed by @xmath108 , since this transition is independent of @xmath4 . )",
    "it follows that view @xmath185 is in the regular set @xmath882 , with @xmath876 being a view at stage @xmath600 , and containing no prior @xmath597 action at stage @xmath600 .",
    "let @xmath883 be the player  1 moves of @xmath543 corresponding to the actions taken by @xmath3 in @xmath185 at each @xmath596 stage .",
    "( these are the same as the @xmath3 actions , except that we treat @xmath597 at stage @xmath596 as corresponding to @xmath709 . )",
    "the sequence @xmath589 is a player  1 strategy in @xmath543 .",
    "this strategy can not be winning for player  1 as we have assumed that this player has no winning strategy in @xmath543 .",
    "thus , there exists some sequence @xmath884 of player  2 moves such that the play @xmath885 is not winning for player  1 .",
    "let @xmath811 be a run consistent with @xmath108 such that @xmath886 and at the @xmath887-th occurrence of stage @xmath592 , we take the transition @xmath888 corresponding to move @xmath889 by player  2 .",
    "( the choices of @xmath3 actions in this run come from @xmath876 , and the choices of @xmath4 actions are fixed by the strategy @xmath108 .",
    "the only nondeterminism remaining is in the initial step , where we choose the plate @xmath48 to be monitored in the simulation .",
    "since we will work at the level of the @xmath4 view , any choice suffices . )",
    "let @xmath890 be the @xmath4 view obtained along this run .",
    "note that by construction of @xmath811 , we obtain that @xmath891 is the play which is not winning for player 1 .",
    "we now argue that the view @xmath862 is truthful and the play @xmath860 is also not winning for player 2 .",
    "more precisely , we claim that for every prefix @xmath892 of @xmath862 , we have ( 1 ) the action @xmath893 is truthful at @xmath794 and ( 2 ) the play @xmath894 is not winning for player 2 . we proceed by induction , assuming that @xmath794 is truthful and @xmath795 is not winning for player 2 .",
    "note that since @xmath795 is also not winning for player  1 , we obtain by proposition  [ prop : undecided ] that @xmath895 for some @xmath701 and @xmath746 .",
    "we consider the possible cases for the stage @xmath698 :    1 .   if @xmath896 , then @xmath897 for some player  1 move @xmath898 . since @xmath795 is not winning for player  2 , an extension by a player  1 move also can not be winning for player  2 . but also @xmath171 is trivially truthful at @xmath794 , so both ( 1 ) and ( 2 ) hold .",
    "2 .   if @xmath762 , then @xmath899 is not winning for player 2 by assumption , so we have ( 2 ) . for ( 1 ) , note that if @xmath768 for some @xmath575 then @xmath171 is trivially truthful at @xmath794 .",
    "we show that the other case , where @xmath900 for some @xmath575 , is not possible , because it leads to a contradiction .",
    "note @xmath795 is also not a winning play for player  1 , so @xmath901 is not a winning position for player 1 , and there exists a plate @xmath757 for which not @xmath902 .",
    "this means that for the state @xmath903 , we have a transition @xmath904 it follows using proposition  [ prop : lh ] that there exists a run @xmath227 ending in state @xmath905 with @xmath906 and @xmath907 a prefix of @xmath876 .",
    "the run @xmath227 is necessarily consistent with @xmath108 because @xmath367 is consistent with @xmath108 . following the actions dictated for @xmath3 and @xmath4 by @xmath876 and @xmath108 , respectively",
    ", we may extend this to a longer run @xmath908 , still consistent with @xmath108 , with @xmath909 , also ending in state @xmath905 .",
    "but then the next @xmath597 step allows a transition to @xmath910 , and we obtain a run with @xmath3 view @xmath185 , a contradiction .",
    "3 .   if @xmath833 , then @xmath171 is trivially truthful , and @xmath899 is not winning for player 2 by assumption .",
    "4 .   for stages",
    "@xmath728 with @xmath911 , we have that @xmath899 .",
    "it is immediate that @xmath894 is not winning for either player , and it remains to show that @xmath171 is truthful at @xmath794 . + as noted above , the assumption that @xmath794 is truthful , together with the assumption that @xmath795 is not a winning play for either player , implies that @xmath912 , by proposition  [ prop : undecided ] .",
    "we will show that the desired conclusion that @xmath171 is truthful at @xmath794 follows from the weaker assumption that @xmath794 is truthful and @xmath912 : this helps with the argument for case @xmath775 , which is handled below .",
    "+ note first that @xmath171 can not be @xmath599 , since the final state of the prefix @xmath227 of @xmath53 with @xmath913 is in @xmath914 , hence in @xmath691 .",
    "so the action @xmath599 results in a transition to the state @xmath915 in @xmath53 .",
    "it follows that the final state of @xmath811 is @xmath916 , and then the subsequent action @xmath597 produces a run consistent with @xmath108 with view @xmath185 , contrary to the assumption that @xmath108 excludes @xmath185 .",
    "hence @xmath917 for some @xmath575 .",
    "+ suppose that @xmath918 .",
    "since @xmath912 , we have that @xmath919 . by proposition  [ prop : lh ]",
    ", there exists a run @xmath227 ending in state @xmath920 with @xmath921 and @xmath907 a prefix of @xmath876 .",
    "the transition @xmath922 extends this to a run whose @xmath3 view remains a prefix of @xmath876 , and by following strategy @xmath108 and the remaining @xmath3 actions in @xmath876 we may continue to extend to the point where we obtain a run @xmath923 with @xmath924 and final state @xmath916 .",
    "but then the next @xmath597 step allows a transition to @xmath910 , and we obtain a run consistent with @xmath108 with @xmath3 view @xmath185 , a contradiction .",
    "thus , in fact , we must have not @xmath918 , so that @xmath171 is truthful at @xmath794 , as required . + for the purposes of the next case , we make one further conclusion . note that by definition of the transitions for @xmath602 at stage @xmath925 , we get from @xmath912 that @xmath926 , so we preserve the weakened assumption . thus , since the above argument applies for all @xmath927 , we have that for all such @xmath457 , there exists @xmath575 such that not @xmath918 .",
    "that is , no hole of player  2 is open in @xmath901 .",
    "it follows that @xmath901 can not be a winning position of player 2 .",
    "5 .   if @xmath840 , then @xmath171 is trivially truthful , and @xmath928 , where @xmath929 is a move of player 2 . as noted above , @xmath912 for some @xmath86 .",
    "the transitions for case @xmath840 then imply that @xmath930 .",
    "we therefore satisfy the weakened assumption for the stages @xmath628 in the previous case .",
    "it therefore follows using the argument of the previous case that @xmath931 can not be a winning position of player 2 .",
    "thus , from the assumption that @xmath795 is not winning for either player , we obtain that @xmath894 is not winning for either player .",
    "this completes the argument that @xmath862 is truthful and @xmath860 is not a winning play for either player . by proposition  [ prop : undecided ] , we obtain that @xmath932 for some @xmath86 .",
    "in particular , the final state of @xmath811 must be in @xmath691 , and the next @xmath597 action then results in a run consistent with @xmath108 with @xmath3 view @xmath185 , a contradiction .",
    "again , we point out that the hardness result holds for scheduled machines already .",
    "in this section we establish the result :    [ thm - res ] for the class of finite state synchronous machines , @xmath2 is in ptime .",
    "the following lemma shows that in searching for an unwinding relation on a machine @xmath14 , it suffices to consider equivalence relations on the reachable states of @xmath14 .",
    "[ lem : unw ]    1 .",
    "if there exists a synchronous unwinding relation on @xmath14 , then there exists a largest such relation , which is transitive .",
    "if all states in @xmath14 are reachable then the largest synchronous unwinding relation ( if one exists ) is an equivalence relation .",
    "3 .   a system satisfies @xmath2 iff its restriction to its reachable states satisfies @xmath2 .    1 .",
    "first we show that the set of synchronous unwinding relations on @xmath14 is closed under union .",
    "let @xmath933 and @xmath934 be two unwinding relations on @xmath14 .",
    "clearly items  1 and  2 of def .",
    "[ def - unwinding ] hold for @xmath935 .",
    "item  3 holds as well as if @xmath936 then either @xmath937 or @xmath938 holds .",
    "assume @xmath937 , then as @xmath933 is an unwinding relation , by item  3 of def .",
    "[ def - unwinding ] , it follows that for all @xmath939 and @xmath940 , if @xmath941 there is some @xmath140 such that @xmath942 and @xmath943 , which implies @xmath944 .",
    "this implies that there exists a largest unwinding relation .",
    "+ second , the composition of two unwinding relations is an unwinding relation .",
    "again items  1 and  2 of def .",
    "[ def - unwinding ] hold for @xmath945 .",
    "assume @xmath946 .",
    "in this case there is some @xmath87 such that @xmath947 and @xmath948 . as @xmath933 is un unwinding relation , by item  3 of def .",
    "[ def - unwinding ] , for any @xmath939 and @xmath949 , if @xmath950 , there is some @xmath951 such that @xmath952 and @xmath953 .",
    "as @xmath954 , and as @xmath934 is an unwinding relation , item  3 def .",
    "[ def - unwinding ] applied with @xmath955 implies there exists some @xmath140 such that @xmath956 and @xmath957 .",
    "putting it all together , there is some @xmath140 such that @xmath956 and some @xmath951 such that @xmath958 @xmath959 .",
    "+ it follows that the transitive closure of any synchronous unwinding relation is a synchronous unwinding relation .",
    "in particular , the largest such relation must be transitive .",
    "2 .   let @xmath146 be the largest synchronous unwinding relation . by definition and the item  1 above",
    ", we already have that @xmath146 is symmetric and transitive , so it suffices to show reflexivity . let @xmath82 be a reachable state . in this case there is a run @xmath960 of @xmath14 such that @xmath961 .",
    "we need to show that @xmath962 .",
    "the proof is by induction on the length of the run .",
    "+ the base case of @xmath963 is immediate from item  1 of def .",
    "[ def - unwinding ] .",
    "suppose @xmath964 .",
    "assume @xmath965 .",
    "as @xmath966 , and applying item  3 of def .",
    "[ def - unwinding ] to the right handside copy of @xmath967 , there exists a transition @xmath968 for some @xmath969 and @xmath970 . because @xmath146 is symmetric , we have @xmath971 , and by transitivity @xmath972 .",
    "any synchronous unwinding relation is still a synchronous unwinding relation when restricted to the reachable states .",
    "conversely , given a synchronous unwinding relation on the reachable states , the ( identical ) relation which extends this to all states by union with the empty relation on unreachable states is also a synchronous unwinding relation .    using lemma  [ lem : unw ]",
    ", we can design an algorithm to compute the largest synchronous unwinding relation , or the empty relation if none exists . by part ( 3 ) of lemma  [ lem : unw ] we may assume that all the states of the machine @xmath973 are reachable .",
    "the algorithm is an adaptation of the algorithm for calculating the relational coarsest partition by kanellakis and smolka  @xcite .",
    "for a partition @xmath974 or equivalence relation @xmath975 , we write @xmath976_{p}$ ] or @xmath976_{\\approx}$ ] for the equivalence class containing element @xmath82 .",
    "we say that a partition @xmath974 of the state space @xmath16 is _ stable _ if the corresponding equivalence relation @xmath977 satisfies condition ( 3 ) of def .",
    "[ def - unwinding ] .",
    "( each corresponding to transitions with respect to some label @xmath86 ) , and partition @xmath978 , for states @xmath979 we have @xmath980 implies that that @xmath981 iff @xmath982 . in this condition",
    ", we apply the same function to @xmath82 and @xmath222 .",
    "our definition amounts to the application of different functions to @xmath82 and @xmath222 , corresponding to transitions with respect to @xmath983 and @xmath984 , respectively .",
    "] the idea of the algorithm is to compute the coarsest stable partition satisfying condition ( 2 ) of def .",
    "[ def - unwinding ] , by iteratively refining an existing partition if the latter is not stable .",
    "given the current partition @xmath974 , if there exists a ( reachable ) state @xmath82 such that condition ( 3 ) of def .",
    "[ def - unwinding ] is not satisfied with @xmath985 , the algorithm terminates and returns the empty relation : this follows from lemma  [ lem : unw].(2 ) because reflexivity is a necessary condition for the existence of an unwinding relation .",
    "otherwise , we check whether it is stable for @xmath986 .",
    "if it is , we have found the largest unwinding relation . if not , we refine the current partition based on the counterexample found .",
    "the procedure is given by algorithm  [ alg - unwin ] . in each refinement step , with the current partition equal to @xmath974 , we first compute the set @xmath987_p~|~ s{\\xrightarrow{(a_l , a_h ) } } t\\}\\ ] ] for each state @xmath82 , and @xmath3 action @xmath988 and @xmath4 action @xmath171 .",
    "rule ( 3 ) with respect to @xmath977 is equivalent to the statement that if @xmath989 then @xmath990 for all @xmath3 actions @xmath988 and @xmath4 actions @xmath991 .",
    "we first check this when @xmath992 .",
    "note that once this condition has been verified , we have verified that @xmath993 does not depend on the second argument @xmath171 . to check the non - reflexive cases",
    ", it therefore suffices to check the condition with respect to any fixed @xmath171 .",
    "@xmath994 loop : @xmath974 [ alg - unwin ]    we can now prove theorem  [ thm - res ] :    algorithm  [ alg - unwin ] terminates when no split occurs in the main loop . since ,",
    "when a split occurs , the new partition is a strict refinement of the previous one , the number of iterations of the main loop is at most @xmath995 . for each @xmath978 , computing the function @xmath996 can be done in time @xmath997 .",
    "checking the reflexive cases can be done in time @xmath998 , and the non - reflexive cases can be done in time @xmath999 . hence the @xmath1000 loop over @xmath978 can be handled in time @xmath1001 .",
    "since there are at most @xmath995 iterations , we have a total time of @xmath1002 .",
    "because @xmath1003 may be as large as @xmath1004 , this is @xmath1005 .",
    "( literature subsequent to kanellakis and smolka has shown how to optimize their algorithm using careful scheduling , union - find data stuctures and amortized analysis , as well as parallel implementation .",
    "similar optimizations may be applicable to our algorithm , but we will not pursue this here . )    to argue correctness , we first show that if there exists a synchronous unwinding @xmath146 on @xmath14 , corresponding to partition @xmath1006 , the algorithm maintains the invariant that @xmath1006 is a refinement of @xmath974 . that this holds for the initial value of @xmath974 follows from condition ( 2 ) of def .",
    "[ def - unwinding ] .",
    "the only case where @xmath974 changes value is where we have @xmath978 and @xmath138 with    1 .",
    "@xmath1007 for all @xmath1008 and @xmath1009 , ( there are no reflexivity violations ) , and 2 .",
    "@xmath1010 for some @xmath1011 and @xmath377 .    in this case",
    ", we obtain the new value @xmath1012 for @xmath974 by splitting @xmath583 into the collection @xmath1013_{\\approx_{a_3}}~|~s\\in p\\}$ ] , where @xmath1014 is defined on @xmath583 by @xmath1015 if @xmath1016 .",
    "suppose that @xmath1006 is not a refinement of @xmath1012 .",
    "since the only element of @xmath974 that changed was @xmath583 , we must have @xmath1011 with @xmath135 and @xmath1010 .",
    "the latter means that there exists @xmath1017 with ( without loss of generality ) @xmath1018 and @xmath1019 .",
    "that is , there exists @xmath1020 such that @xmath1021 , but for all @xmath140 with @xmath1022 we have @xmath1023 . because @xmath146 is a synchronous unwinding , @xmath135 , and @xmath1021 , there exists @xmath140 with @xmath1024 and @xmath142 .",
    "but because @xmath1006 refines @xmath974 , this implies that @xmath1025_p= p'$ ] , a contradiction .",
    "we conclude that in fact @xmath1012 refines @xmath974 .",
    "the correctness argument now follows straightforwardly .",
    "suppose that the algorithm outputs @xmath1026 : we show that there exists no synchronous unwinding on @xmath14 .",
    "suppose to the contrary that @xmath146 is a synchronous unwinding .",
    "at the time the algorithm terminates , we have @xmath1027 for some @xmath978 , some @xmath1008 and some @xmath1009 . without loss of generality",
    ", there exists some @xmath1017 and @xmath61 such that @xmath1028 but there exists no @xmath1029 such that @xmath1030 . by reflexivity of @xmath146",
    ", we have @xmath962 , so there exists @xmath140 such that @xmath1031 and @xmath1032 . because @xmath1006 is a refinement of @xmath974 , we obtain @xmath1033_p = p'$ ] , a contradiction .",
    "we conclude that there exists no synchronous unwinding .",
    "conversely , suppose that the algorithm outputs a partition @xmath1034 , and let @xmath977 be the corresponding equivalence relation . since @xmath974 is a refinement of @xmath1035 , we have that @xmath1036 implies @xmath1037 , so condition ( 2 ) of def .",
    "[ def - unwinding ] is satisfied .",
    "moreover , we have , for all @xmath978 , that    1",
    ".   @xmath1007 for all @xmath1008 and @xmath1009 , 2 .",
    "@xmath1016 for all @xmath1038 and @xmath377 .    together ,",
    "these imply that @xmath977 satisfies condition ( 3 ) of def .",
    "[ def - unwinding ] . finally , since @xmath974 is a partition , we have @xmath1039 , so condition ( 1 ) also holds .",
    "in asynchronous machines the verification complexities of @xmath0 and @xmath1 are both pspace - complete , and @xmath2 ( based on asynchronous unwinding ) is in polynomial time  @xcite .",
    "interestingly , pspace is also the complexity result for verifying mantel s bsp conditions  @xcite on asynchronous finite state systems . for ( asynchronous )",
    "push - down systems , the verification problem is undecidable  @xcite .    a number of works have defined notions of security for synchronous or timed systems , but fewer complexity results are known .",
    "kpf and basin @xcite define a notion similar to @xmath2 and show it is ptime decidable .",
    "similar definitions are also used in the literature on language - based security @xcite .",
    "focardi _ et al . _",
    "@xcite define a spectrum of definitions related to ours in a timed process algebraic setting , and state a decidability result for one of them , close to our notion @xmath1 . however , this result concerns an approximation to the notion  timed nondeducibility on compositions \" ( tbndc ) that is their real target , and they do not give a complexity result .",
    "beauquier and lanotte defined _ covert channels _ in timed systems with @xmath1040 transitions by using strategies  @xcite .",
    "they prove that the problem of the existence of a covert channel in such systems is decidable .",
    "however , their definition of covert channel requires that @xmath4 and @xmath3 have strategies to force a system into sets of runs with disjoint sets of @xmath3 views .",
    "the induced definition on _ free of covert channels _ appears to be a weaker notion than  @xmath1 .",
    "we remarked above that nondeducibility - based notions of security may have the disadvantage that they do not readily support a compositional approach to secure systems development , motivating the introduction of unwinding - based definitions of security .",
    "the complexity results of the present paper can be interpreted as lending further support to the value of unwinding - based definitions .",
    "we have found that the two nondeducibility notions we have considered , while both decidable , are intractable . on the other hand ,",
    "the unwinding - based notion of synchronous restrictiveness has tractable complexity .",
    "this makes this definition a more appropriate basis for automated verification of security .",
    "even if the desired security property is nondeducibility on inputs or nondeducibility on strategies , it is sufficient to verify that a system satisfies synchronous restrictiveness , since this is a stronger notion of security .",
    "it remains to be seen whether there is a significant number of practical systems that are secure according to the nondeducibility - based notions , but for which there does not exist a synchronous unwinding .",
    "if so , then an alternate methodology needs to be applied for the verification of security for such systems .",
    "a.  bossi , r.  focardi , c.  piazza , and s.  rossi .",
    "bisimulation and unwinding for verifying possibilistic security properties . in _ proc .",
    "int . conf . on verification , model checking , and abstract interpretation _ ,",
    "pages 223237 ( 2003 )        d.  dsouza , r.  holla , j.  kulkarni , r.  k. ramesh , and b.  sprick . on the decidability of model - checking information flow properties . in _ proc",
    ". int . conf . on information systems security _ ,",
    "pages 2640 , 2008 .",
    "b.  kpf and d.  a. basin .",
    "timing - sensitive information flow analysis for synchronous systems . in _ proc .",
    "european symp . on research in computer security _ ,",
    "springer lncs no .",
    "4189 , pages 243262 .",
    "springer , 2006 .",
    "p.  c. kanellakis and s.  a. smolka .",
    "expressions , finite state processes , and three problems of equivalence . in _ proc .",
    "2nd annual acm symp . on principles of distributed computing _ , pages 228240 , new york , ny , 1983 ."
  ],
  "abstract_text": [
    "<S> the paper considers the complexity of verifying that a finite state system satisfies a number of definitions of information flow security . </S>",
    "<S> the systems model considered is one in which agents operate synchronously with awareness of the global clock . </S>",
    "<S> this enables timing based attacks to be captured , whereas previous work on this topic has dealt primarily with asynchronous systems . </S>",
    "<S> versions of the notions of nondeducibility on inputs , nondeducibility on strategies , and an unwinding based notion are formulated for this model . </S>",
    "<S> all three notions are shown to be decidable , and their computational complexity is characterised . </S>"
  ]
}
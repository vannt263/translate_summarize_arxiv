{
  "article_text": [
    "the following stochastic distributed coalescence protocol was proposed by dahlia malkhi in 2006 , motivated by applications in social networking and the reliable formation of peer - to - peer networks ( see  @xcite for more on these applications ) .",
    "the objective is to coalesce @xmath0 participating agents into a single hierarchal cluster reliably and efficiently .",
    "to do so without relying on a centralized authority , the protocol first identifies each agent as a cluster ( a singleton ) , and then proceeds in rounds as follows :    each cluster flips a fair coin to determine whether it will be _ issuing _ a merge - request or _ accepting _ requests in the upcoming round .    issuing a request amounts to selecting another cluster randomly _ proportionally to its size_.    accepting requests amounts to choosing an incoming request ( if there are any ) _ uniformly _ at random and proceeding to merge with that cluster .",
    "in practice , each cluster is in fact a layered tree whose root is entrusted with running the protocol , e.g.  each root decides whether to issue / accept requests in a given round etc .",
    "when attempting to merge with another cluster , the root of cluster @xmath2 simply chooses a vertex @xmath3 uniformly out of @xmath4 $ ] , which then propagates the request to its root .",
    "this therefore corresponds to choosing the cluster @xmath5 proportionally to @xmath6 .",
    "this part of the protocol is well - justified by the fact that agents within a cluster typically have no information on the structure of other clusters in the system .",
    "a second feature of the protocol is the symmetry between the roles of issuing / accepting requests played by the clusters .",
    "clearly , every protocol enjoying this feature would have ( roughly ) at most half of its clusters become acceptors in any given round , and as such could terminate within @xmath1 rounds . furthermore , on an intuitive level , as long as all clusters are of roughly the same size ( as is the case initially ) , there are few `` collisions '' ( multiple clusters issuing a request to the same cluster ) each round and hence the effect of a round is similar to that of merging clusters according to a random perfect matching . as such , one might expect that the protocol should conclude with a roughly balanced binary tree in logarithmic time .",
    "indeed , empirical evidence by fernandess and malkhi  @xcite showed that this protocol seems highly efficient , typically taking a logarithmic number of rounds to coalesce .",
    "however , rigorous performance guarantees for the protocol were not available .",
    "while there are numerous examples of stochastic processes that have been successfully analyzed by means of identifying a single tractable parameter that controls their behavior , here it appears that the entire distribution of the cluster - sizes plays an essential role in the behavior of the system . demonstrating this is the following example",
    ": suppose that the cluster @xmath7 has size @xmath8 while all others are singletons . in this case",
    "it is easy to see that with high probability all of the merge - requests will be issued to @xmath7 , who will accept at most one of them ( we say an event holds _ with high probability _ , or w.h.p .  for brevity , if its probability tends to @xmath9 as @xmath10 ) .",
    "therefore , starting from this configuration , coalescence will take at least @xmath11 rounds w.h.p .",
    ", a polynomial slowdown . of course , this scenario is extremely unlikely to arise when starting from @xmath0 individual agents , yet possibly other mildly unbalanced configurations _ are _ likely to occur and slow the process down .    in 2007 , oded schramm proposed a novel approach to the problem , approximately reducing it to an analytic problem of determining the asymptotics of a recursively defined family of real functions . via this approximation framework schramm then gave numerical estimates suggesting that the running time of the stochastic coalescence protocol is w.h.p .",
    "super - logarithmic .",
    "unfortunately , the analytical problem itself seemed highly nontrivial and overall no bounds for the process were known .      in this work",
    "we study the stochastic coalescence process with two main consequences .",
    "first , we provide a rigorous lower bound confirming that this process w.h.p .  requires a super - logarithmic number of rounds to terminate .",
    "second , we identify the vulnerability in the protocol , namely the choice of which merge - request a cluster should approve : while the original choice seems promising in order to maintain the balance between clusters , it turns out that typical deviations in cluster - sizes are likely to be amplified by this rule and lead to irreparably unbalanced configurations . on the other hand , we show that a simple modification of this rule to favor the smallest incoming request is already enough to guarantee coalescence in @xmath1 rounds w.h.p .",
    "( here and in what follows we let @xmath12 denote that @xmath13 while @xmath14 is short for @xmath15 . )",
    "[ thm-1 ] the uniform coalescence process @xmath16 coalesces in @xmath17 rounds w.h.p .",
    "consider a modified _ size - biased _",
    "process @xmath18 where every accepting cluster @xmath2 has the following rule :    ignore requests from clusters of size larger than @xmath19 .    among other requests ( if any ) select one issued by a cluster @xmath5 of smallest size .",
    "then the coalescence time of the size - biased process satisfies @xmath20 w.h.p .",
    "observe that the new protocol is easy to implement efficiently in practice as each root can keep track of the size of its cluster and can thus include it as part of the merge - request .    .",
    "the right plot tracks the ratio between the maximum and average cluster - sizes , through a single run of each process , for @xmath21 .",
    "there , the uniform process took 128 rounds , while the size - biased process finished in 96.,title=\"fig : \" ] .",
    "the right plot tracks the ratio between the maximum and average cluster - sizes , through a single run of each process , for @xmath21 .",
    "there , the uniform process took 128 rounds , while the size - biased process finished in 96.,title=\"fig : \" ]      our simulations show that the running time of the size - biased process is approximately @xmath22 .",
    "moreover , they further demonstrate that the new size - biased process empirically performs substantially better than the uniform process even for fairly small values of @xmath0 , i.e.  the improvement appears not only asymptotically in the limit but already for ordinary input sizes .",
    "these results are summarized in figure  [ fig : runtimes ] , where the plot on the left clearly shows how the uniform process diverges from the linear ( in logarithmic scale ) trend corresponding to the runtime of the size - biased process .",
    "the rightmost plot identifies the crux of the matter : the uniform process rapidly produces a highly skewed cluster - size distribution , which slows it down considerably .",
    "there is extensive literature on stochastic coalescence processes whose various flavors fit the following scheme : the clusters act via a continuous - time process where the coalescence rate of two clusters with given masses @xmath23 ( which can be either discrete or continuous ) is dictated up to re - scaling by a rate kernel @xmath24 .",
    "a notable example of this is kingman s coalescent  @xcite , which corresponds to the kernel @xmath25 and has been intensively studied in mathematical population genetics ; see e.g.  @xcite for more on kingman s coalescent and its applications in genetics .",
    "other rate kernels that have been thoroughly studied include the additive coalescent @xmath26 which corresponds to aldous s continuum random tree  @xcite , and the multiplicative coalescent @xmath27 that corresponds to erds - rnyi random graphs  @xcite ( see the books  @xcite ) .",
    "for further information on these as well as other coalescence processes , whose applications range from physics to chemistry to biology , we refer the reader to the excellent survey of aldous  @xcite .",
    "a major difference between the classical stochastic coalescence processes mentioned above and those studied in this work is the synchronous nature of the latter ones : instead of individual merges whose occurrences are governed by independent exponentials , here the process is comprised of rounds where all clusters act simultaneously and the outcome of a round ( multiple disjoint merges ) is a function of these combined actions .",
    "this framework introduces delicate dependencies between the clusters , and rather than having the coalescence rate of two clusters be given by the rate kernel @xmath24 as a function of their masses , here it is a function of the entire cluster distribution .",
    "for instance , suppose nearly all of the mass is in one cluster @xmath2 ( which thus attracts almost all merge requests ) ; its coalescence rate with a given cluster @xmath5 in the uniform coalescence process @xmath16 clearly depends on the total number of clusters at that given moment , and similarly in the size - biased coalescence process @xmath18 it depends on the sizes of all other clusters , viewed as competing with @xmath5 over this merge .",
    "in face of these mentioned dependencies , the task of analyzing the evolution of the clusters along the high - dimensional stochastic processes @xmath16 and @xmath18 becomes highly nontrivial .    in terms of applications and related work in computer science ,",
    "the processes studied here have similar flavor to those which arose in the 1980 s , most notably the random mate algorithm introduced by reif , and used by gazit  @xcite for parallel graph components and by miller and reif  @xcite for parallel tree contraction .",
    "however , as opposed to the setting of those algorithms , a key difference here is the fact that as the process evolves through time each cluster is oblivious to the distribution of its peers at any given round ( including the total number of clusters for that matter ) .",
    "therefore for instance it is impossible for a cluster to sample from the uniform distribution over the other clusters when issuing its merge request .",
    "for another related line of works in computer science , recall that the coalescence processes studied in this work organize @xmath0 agents in a hierarchic tree , where each merged cluster reports to its acceptor cluster .",
    "this is closely related to the rich and intensively studied topic of randomized leader elections ( see e.g.  @xcite ) , where a computer network comprised of @xmath0 processors attempts to single out a leader ( in charge of communication , etc . ) by means of a distributed randomized process generating the hierarchic tree .",
    "finally , studying the dynamics of randomly merging sets is also fundamental to understanding the average - case performance of disjoint - set data structures ( see e.g.  the works of bollobs and simon  @xcite , knuth and schnhage  @xcite and yao  @xcite ) .",
    "these structures , which are of fundamental importance in computer science , store collections of disjoint sets , and support two operations : ( i ) taking the union of a pair of sets , and ( ii ) determining which set a particular element is in .",
    "see e.g.  @xcite for a survey of these data structures .",
    "the processes studied here precisely consider the evolution of a collection of disjoint sets under random merge operations , and it is plausible that the tools used here could contribute to advances in that area .      as we mentioned above , the main obstacle in the coalescence processes studied here",
    "is that since requests go to other clusters with probability proportional to their size , the largest clusters can create a bottleneck , absorbing all requests yet each granting only one per round .",
    "an intuitive approach for analyzing the size - biased process @xmath18 would be to track a statistic that would warn against this scenario , with the most obvious candidate being the size of the largest cluster .",
    "however , simulations indicate that this alone will be insufficient as the largest cluster does in fact grow out of proportion in typical runs of the process .",
    "nevertheless , the distribution of large clusters turns out to be sparse .",
    "the key idea is then to track a smoother parameter involving the _ susceptibility _ , which is essentially the second moment of the cluster - size distribution .    to simplify notation",
    "normalize the cluster - sizes to sum to 1 so that the initial distribution consists of @xmath0 clusters of size @xmath28 each . with this normalization",
    ", the susceptibility @xmath29 is defined as the sum of squares of cluster - sizes after the @xmath30-th round .",
    "( we note in passing that this parameter has played a central role in the study of the phase - transition in percolation and random graphs , see e.g.  @xcite . ) the proof that the size - biased protocol is optimal hinges on a carefully chosen potential function @xmath31 , where @xmath32 denotes the number of clusters after the @xmath30-th round and @xmath33 is an absolute constant chosen to turn @xmath34 into a supermartingale . in sections  [ sec : size - e ] and  [ sec : size - whp ] we will control the evolution of @xmath34 and prove our upper bound on the running time of the size - biased process .",
    "the analysis of the uniform process @xmath16 is delicate and relies on rigorizing and analyzing the novel framework of schramm  @xcite for approximating the problem by an analytic one .",
    "we believe this technique is of independent interest and may find additional applications in the analysis of high - dimensional stochastic processes .",
    "instead of seeking a single parameter to summarize the system behavior , one instead measures the system using the laplace transform of the entire cluster - size distribution :    [ def - f - g ] for any integer @xmath35 let @xmath36 be the @xmath37-algebra generated by the first @xmath30 rounds of the process .",
    "conditioned on @xmath36 , define the functions @xmath38 and @xmath39 on the domain @xmath40 as follows .",
    "let @xmath41 be the number of clusters and let @xmath42 be the normalized cluster - sizes after @xmath30 rounds .",
    "set @xmath43    as we will further explain in section  [ sec : oded ] , the laplace transform @xmath44 simultaneously captures all the moments of the cluster - size distribution , in a manner analogous to the moment generating function of a random variable .",
    "this form is particularly useful in our application as we will see in section  [ sec : uniform ] that the specific evaluation @xmath45 governs the expected coalescence rate .",
    "furthermore , it turns out that it is possible to estimate values of @xmath44 ( and @xmath46 ) recursively .",
    "although the resulting recursion is nonstandard and highly complex , a somewhat intricate analysis eventually produces a lower bound for the uniform process .     from his analytic approximation of the uniform coalescence process .",
    "the left plot features @xmath39 for @xmath47 and @xmath48 $ ] and demonstrates how these increase with @xmath30 .",
    "the right plot focuses on @xmath49 and suggests that @xmath50 and that in turn the coalescence rate should be super - logarithmic.,title=\"fig : \" ]   from his analytic approximation of the uniform coalescence process .",
    "the left plot features @xmath39 for @xmath47 and @xmath48 $ ] and demonstrates how these increase with @xmath30 .",
    "the right plot focuses on @xmath49 and suggests that @xmath50 and that in turn the coalescence rate should be super - logarithmic.,title=\"fig : \" ]      the rest of this paper is organized as follows . in section",
    "[ sec : oded ] we describe schramm s analytic approach for approximating the uniform process @xmath16 .",
    "sections  [ sec : size - e ] and  [ sec : size - whp ] are devoted to the size - biased process @xmath18 : in the former we prove that @xmath51=o(\\log n)$ ] and in the latter we build on this proof together with additional ideas to show that @xmath52 w.h.p .",
    "the final section , section  [ sec : uniform ] , builds upon schramm s aforementioned framework to produce a super - logarithmic lower bound for @xmath53 .",
    "in this section we describe schramm s analytic approach as it was presented in  @xcite for analyzing the uniform coalescence process @xmath16 , as well as the numerical evidence that schramm obtained based on this approach suggesting that @xmath53 is super - logarithmic . throughout this section",
    "we write approximations loosely as they were sketched by schramm and postpone any arguments on their validity ( including concentration of random variables , etc . )",
    "to section  [ sec : uniform ] , where we will turn elements from this approach into a rigorous lower bound on @xmath53 .",
    "let @xmath36 denote the @xmath37-algebra generated by the first @xmath30 rounds of the coalescence process @xmath16 .",
    "the starting point of schramm s approach was to examine the following function conditioned on @xmath36 : @xmath54 where @xmath32 is the number of clusters after @xmath30 rounds and @xmath55 denote the normalized cluster - sizes at that time ( see definition  [ def - f - g ] ) .",
    "the benefit that one could gain from understanding the behavior of @xmath38 is obvious as @xmath56 recovers the number of clusters at time @xmath30 .",
    "more interesting is the following observation of schramm regarding the role that @xmath57 plays in the evolution of the clusters .",
    "conditioned on @xmath36 , the probability that the cluster @xmath2 receives a merge request from another cluster @xmath5 is @xmath58 ( the factor @xmath59 accounts for the choice of @xmath5 to issue rather than accept requests ) .",
    "thus , the probability that @xmath2 will receive _ any _ incoming request in round @xmath60 and independently decide to be an acceptor is @xmath61 \\approx \\frac12 \\left[1-\\exp ( - w_i \\kappa_t/2)\\right]\\,.\\ ] ] on this event , @xmath2 will account for one merge at time @xmath60 , and summing this over all clusters yields @xmath62 \\approx \\kappa_t - \\frac12 \\sum_{i=1}^{\\kappa_t } \\left[1-\\exp ( - w_i \\kappa_t/2)\\right ] = \\frac12 \\left[\\kappa_t + f_t(\\kappa_t/2)\\right]\\,,\\ ] ] or equivalently , re - scaling @xmath38 into @xmath63 as in eq .  , @xmath64",
    "\\approx    \\frac {      1 + g_t(\\frac12 )    } { 2 } \\ , .\\ ] ] in order to have @xmath65 the number of clusters would need to typically drop by at least a constant factor at each round .",
    "this would require the ratio in   to be bounded away from 1 , or equivalently , @xmath49 should be bounded away from 1 .",
    "unfortunately , the evolution of the sequence @xmath66 appears to be quite complex and there does not seem to be a simple way to determine its limiting behavior .",
    "nevertheless , schramm was able to write down an approximate recursion for the expected value of @xmath67 in terms of multiple evaluations of @xmath44 by observing the following : on the above event that @xmath2 chooses to accept the merge request of some other cluster @xmath5 , by definition of the process @xmath16 the identity of the cluster @xmath5 is uniformly distributed over all @xmath68 clusters other than @xmath2 . hence , @xmath69 \\approx \\sum_i \\frac12\\left(1-e^{-w_i \\kappa_t/2 } \\right ) \\frac1{\\kappa_t}\\sum_{j \\neq",
    "i } \\left(e^{-(w_i + w_j)s } -e^{-w_i s } - e^{-w_j s}\\right)\\,.\\ ] ] ignoring the fact that the last sum in the approximation skips the diagonal terms @xmath70 , one arrives at a summation over all @xmath71 of exponents similar to those in the definition of @xmath44 with an argument of either @xmath72 , @xmath73 , or @xmath74 , which after rearranging gives @xmath75    \\approx \\frac12 f_t(s+\\kappa_t/2 ) + \\frac{1}{2\\kappa_t } f_t(s ) \\big [      f_t ( s ) + f_t(\\kappa_t/2 ) - f_t(s+\\kappa_t/2 ) \\big]\\,.\\ ] ] to turn the above into an expression for @xmath76 one needs to evaluate @xmath77 rather than @xmath78 , to which end the approximation @xmath79 \\kappa_t $ ] can be used based on  .",
    "additionally , for the starting point of the recursion , note that the initial configuration of @xmath80 for all @xmath81 has @xmath82 . altogether , schramm obtained the following deterministic analytic recurrence , whose behavior should ( approximately ) dictate the coalescence rate : @xmath83        }      \\mbox { where } \\alpha = \\tfrac12[1+g_t(\\tfrac12)]\\ , .",
    "\\end{array}\\right . \\ ] ] in light of this , aside from the task of assessing how good of an approximation the above defined functions @xmath84 provide for the random variables @xmath46 along the uniform coalescence process @xmath16 , the other key question is whether the sequence @xmath85 converges to @xmath9 as @xmath86 , and if so , at what rate .    for the latter , as the complicated definition of @xmath87 attests , analyzing the recursion of @xmath84 seems highly nontrivial",
    "moreover , a naive evaluation of @xmath85 involves exponentially many terms , making numerical simulations already challenging .",
    "the computer - assisted numerical estimates performed by schramm for the above recursion , shown in figure  [ fig : oded - numerics ] , seemed to suggest that indeed @xmath88 ( albeit very slowly ) , which should lead to a super - logarithmic coalescence time for @xmath16 . however , no rigorous results were known for the limit of @xmath85 or its stochastic counterpart @xmath49 .    as we show in section  [ sec : uniform ] , in order to turn schramm s argument into a rigorous lower bound on @xmath53 , we move our attention away from the sought value of @xmath49 and focus instead on @xmath89 . by manipulating schramm s recursion for @xmath46 and combining it with additional analytic arguments and appropriate concentration inequalities ,",
    "we show that as long as @xmath32 is large enough and @xmath90 for some fixed @xmath91 , then typically @xmath92 for some @xmath93 .",
    "since by definition @xmath94 this can be used to show that ultimately @xmath50 w.h.p . , and a careful quantitative version of this argument produces the rigorous lower bound on @xmath53 stated in theorem  [ thm-1 ] .",
    "the goal of this section is to prove that the expected time for the size - biased process to complete has logarithmic order , as stated in proposition  [ prop : e - upper ] .",
    "following a few simple observations on the process we will prove this proposition using two key lemmas , lemmas  [ lem : chi - kappa ] and  [ lem : no - a ] , whose proofs will appear in ",
    "[ sec : proof : lem : chi - kappa ] and  [ sec : proof : lem : no - a ] respectively . in section  [ sec : size - whp ] we extend the proof of this proposition using some additional ideas to establish that the coalescence time is bounded by @xmath1 w.h.p .",
    "[ prop : e - upper ] let @xmath95 denote the coalescence time of the size - biased process @xmath18 .",
    "then there exists an absolute constant @xmath96 such that @xmath97 \\leq c \\log n$ ] , where @xmath98 $ ] denotes expectation w.r.t .  an initial cluster distribution comprised of @xmath0 singletons .    throughout sections  [ sec :",
    "size - e ] and  [ sec : size - whp ] we refer only to the size - biased process and use the following notation . define the filtration @xmath36 to be the @xmath37-algebra generated by the process up to and including the @xmath30-th round .",
    "let @xmath32 denote the number of clusters after the conclusion of round @xmath30 , noting that with these definitions we are interested in bounding the expected value of the stopping time @xmath99 as mentioned in the introduction , we normalize the cluster - sizes so that they sum to @xmath9 .",
    "finally , the susceptibility @xmath29 denotes the sum of squares of the cluster - sizes at the end of round @xmath30 .    observe that by cauchy - schwarz , if @xmath55 are the cluster - sizes at the end of round @xmath30 then we always have @xmath100 with equality iff all clusters have the same size .",
    "indeed , the susceptibility @xmath29 measures the variance of the cluster - size distribution .",
    "when @xmath29 is smaller ( closer to @xmath101 ) , the distribution is more uniform .",
    "we further claim that @xmath102 to see this , note that if a cluster of size @xmath103 merges with a cluster of size @xmath104 the susceptibility increases by exactly @xmath105 .",
    "since each round only involves merges between disjoint pairs of clusters , this immediately implies that the total additive increase in susceptibility is bounded by the current sum of squares of the cluster sizes , i.e. , the current susceptibility @xmath29 .    before commencing with the proof of proposition  [ prop : e - upper ] , we present a trivial linear bound for the expected running time of the coalescence process , which will later serve as the final step in our proof . here and in what follows ,",
    "@xmath106 and @xmath107 denote probability and expectation given the initial cluster distribution @xmath108 .",
    "while the estimate featured here appears to be quite crude when @xmath108 is uniform , recall that in general @xmath109 can in fact be linear in the initial number of clusters w.h.p .",
    ", e.g.  when @xmath108 is comprised of one cluster of mass @xmath110 and @xmath111 other clusters of mass @xmath112 each .",
    "[ lem : trivial ] starting from @xmath41 clusters with an arbitrary cluster distribution @xmath113 we have @xmath114 \\leq 8\\kappa$ ] .",
    "furthermore , @xmath115 .    consider an arbitrary round in which at least @xmath116 clusters still remain .",
    "we claim that the probability that there is at least one merge in this round is at least @xmath117 .",
    "indeed , let @xmath7 be a cluster of minimal size : the probability that it decides to send a request is @xmath118 , and since there are at least two clusters and @xmath7 is the smallest one , the probability that this request goes to some @xmath5 with @xmath119 is at least @xmath118 . finally , the probability that @xmath5 is accepting requests is again @xmath118 . conditioned on these events",
    ", @xmath5 will definitely accept some request ( possibly not the one from @xmath7 as another cluster of the same size as @xmath7 may have sent it a request ) leading to at least one merge , as claimed .",
    "the process terminates when the total cumulative number of merges reaches @xmath120 .",
    "therefore , the time of completion is stochastically dominated by the sum of @xmath121 geometric random variables with success probability @xmath122 , and in particular @xmath114 \\leq 8(\\kappa-1)$ ] .    by the same reasoning , the total number of merges that occurred in the first @xmath30 rounds clearly stochastically dominates a binomial variable @xmath123 as long as @xmath124 .",
    "therefore , @xmath125 where the last inequality used the well - known chernoff bounds ( see e.g.  @xcite*theorem 2.1 ) .",
    "we next present the two main lemmas on which the proof of the proposition hinges .",
    "the key idea is to design a potential function comprised of two parts @xmath126 while identifying a certain event @xmath127 such that the following holds : @xmath128<c_1<0 $ ] and @xmath129 < c_2 $ ] where @xmath130 are absolute constants , and a similar statement holds conditioned on @xmath131 when reversing the roles of @xmath132 and @xmath133 . at this point",
    "we will establish that an appropriate linear combination of @xmath126 is a supermartingale , and the required bound on @xmath109 will follow from optional stopping .",
    "note that throughout the proof we make no attempt to optimize the absolute constants involved .",
    "the event @xmath127 of interest is defined as follows :    [ def - at ] let @xmath127 be the event that the following two properties hold after the @xmath30-th round :    [ def - at - i ] at least @xmath73 clusters have size at most @xmath134 .",
    "[ def - at - ii ] the cluster - size distribution satisfies @xmath135 .",
    "the intuition behind this definition is that property   boosts the number of tiny clusters , thereby severely retarding the growth of the largest clusters , which will tend to see incoming requests from these tiny clusters .",
    "property   ensures that most of the mass of the cluster - size distribution is on relatively large clusters , of size at least 41 times the average .",
    "examining the event @xmath127 will aid in tracking the variable @xmath136 , the normalized susceptibility ( recall from   that this quantity is always at least @xmath9 and it equals 1 whenever all clusters are of the same size ) .",
    "the next lemma , whose proof appears in  [ sec : proof : lem : chi - kappa ] , estimates the expected change in this quantity and most notably shows that it is at most @xmath137 if we condition on @xmath127 .",
    "[ lem : chi - kappa ] let @xmath138 and suppose that at the end of the @xmath30-th round one has @xmath139 . then @xmath140 & \\leq   5    \\end{aligned}\\ ] ] and furthermore @xmath141      & \\leq   -\\tfrac1{200 } \\ , .",
    "\\end{aligned}\\ ] ]    fortunately , when @xmath127 does not hold the behavior in the next round can still be advantageous in the sense that in this case the number of clusters tends to fall by at least a constant fraction .",
    "this is established by the following lemma , whose proof is postponed to  [",
    "sec : proof : lem : no - a ] .",
    "[ lem : no - a ] let @xmath142 and suppose that after the @xmath30-th round one has @xmath139 .",
    "then @xmath143 < - 2 \\cdot 10^{-7 } \\ , .\\ ] ]    we are now in a position to derive proposition  [ prop : e - upper ] from the above two lemmas .",
    "define the stopping time @xmath144 to be @xmath145 observe that the susceptibility is initially @xmath112 , its value is @xmath9 once the process arrives at a single cluster ( i.e.  at time @xmath109 ) and until that point it is nondecreasing , hence @xmath146 by lemma  [ lem : trivial ] .",
    "further define the random variable @xmath147 we claim that @xmath148 is a supermartingale .",
    "indeed , consider @xmath149 $ ] and note that the fact that @xmath150 implies in particular that @xmath139 since in that case @xmath151 .",
    "if @xmath127 holds then by   the conditional expected change in @xmath152 is below @xmath153 , while @xmath154 can only decrease ( as @xmath32 is non - increasing ) , hence @xmath155 \\leq z_t$ ] .",
    "if @xmath127 does not hold then by   the conditional expected change in @xmath152 is at most @xmath156 whereas the conditional expected change in @xmath154 is below @xmath157 due to  . by the scaling in the definition of @xmath158",
    "these add up to give @xmath159 \\leq z_t - \\frac{199}{200}$ ] .",
    "altogether , @xmath148 is indeed a supermartingale . as its increments",
    "are bounded and the stopping time @xmath144 is integrable we can apply the optional stopping theorem ( see e.g.  @xcite*chapter 5 ) and get @xmath160 at the same time , by definition of @xmath144 we have @xmath161 and so @xmath162 taking expectation in and combining it with   we find that @xmath163 \\leq o ( \\log n ) \\ , .\\ ] ] finally , conditioned on the cluster distribution at time @xmath144 we know by lemma  [ lem : trivial ] that the expected number of additional rounds it takes the process to conclude is at most @xmath164 , thus @xmath165 \\leq { \\mathbb{e}}[\\tau + 8\\kappa_\\tau]$ ] .",
    "we can now conclude that @xmath165 = o ( \\log n ) $ ] , as required .",
    "the first step in controlling the product @xmath166 is to quantify the coalescence rate in terms of the susceptibility , as achieved by the following claim .",
    "[ clm : kappa - drop ] suppose that at the end of the @xmath30-th round one has @xmath139 .",
    "then @xmath167 \\leq \\kappa_t - ( 46\\chi_t)^{-1}\\ ] ] and furthermore @xmath168    to simplify the notation let @xmath169 , @xmath170 and @xmath171 throughout the proof of the claim . further let the clusters @xmath2 be indexed in increasing order of their sizes and let @xmath172 .",
    "recall that the number of merges in round @xmath60 is precisely the number of clusters which decide to accept requests and then receive at least one incoming request from a cluster of size no larger than itself .",
    "consider the probability of the latter event for a cluster @xmath2 with @xmath173 .",
    "since the clusters are ordered by size there are at least @xmath174 clusters of size at most @xmath175 and each will send a request to @xmath2 independently with probability @xmath176 ( the factor of 2 is due to the probability of issuing rather than receiving requests this round ) .",
    "the probability that none of these clusters do so is thus at most @xmath177 ( where we used the fact that @xmath178 for any @xmath179 ) , and altogether the probability that @xmath2 accepts a merge request from one of these clusters is at least @xmath180 . summing over these clusters",
    "we conclude that @xmath181    \\geq    \\sum_{i > \\lfloor \\kappa/2 \\rfloor }    \\frac{1}{2 } \\left ( 1 - e^{-w_i \\kappa / 6 } \\right )    \\geq    \\sum_{i=1}^\\kappa    \\frac{1}{4 } \\left ( 1 - e^{-w_i \\kappa / 6 } \\right ) \\ , , \\ ] ] where the last inequality follows from the fact that the summand is increasing in @xmath175 and hence the sum over the @xmath182 largest clusters should be at least as large as the sum over the @xmath183 smallest ones .",
    "next , observe that by concavity , for all @xmath184 the final summand is at least @xmath185 which in turn is at least @xmath186 by eq .  .",
    "as this last expression always exceeds @xmath187 we get @xmath188    \\geq    \\frac{1}{38\\chi } \\sum_{w_i \\leq 6\\chi } w_i \\ , .\\ ] ] we now aim to show that much of the overall mass is spread on clusters of size at most @xmath189 . to this end recall that by definition @xmath190 while @xmath191 , hence we can write @xmath192 where @xmath193 is the random variable that accepts the value @xmath175 with probability @xmath175 for @xmath194 .",
    "this gives that @xmath195 ( with the final bound is due to markov s inequality ) and revisiting   we obtain that @xmath181   >    \\frac{1}{38\\chi } \\cdot \\frac{5}{6 }    >    \\frac{1}{46\\chi } \\ , , \\ ] ] establishing inequality .    to complete the proof of the claim it suffices to show that the random variable @xmath196 is suitably concentrated , to which end we use talagrand s inequality ( see , e.g. ,  @xcite*chapter 10 ) .",
    "in its following version we say that a function @xmath197 is @xmath33-lipschitz if changing its argument @xmath198 in any single coordinate changes @xmath199 by at most @xmath33 , and that @xmath200 is @xmath201-certifiable if for every @xmath72 and @xmath198 with @xmath202 there exists a subset @xmath203 of at most @xmath204 coordinates such that every @xmath205 that agrees with @xmath198 on the coordinates indexed by @xmath203 also has @xmath206 . in the context of a product space",
    "@xmath207 these definitions carry to the random variable that @xmath200 corresponds to via the product measure .    if @xmath208 is a @xmath33-lipschitz and @xmath201-certifiable random variable on @xmath209 then @xmath210 for any @xmath211 .",
    "observe that round @xmath60 , conditioned on @xmath36 , is clearly a product space as the actions of the individual clusters are independent : formally , each cluster chooses either to accept requests or to send a request to a random cluster .",
    "changing the action of a single cluster can only affect @xmath208 , the number of merges in round @xmath60 , by at most one merge and so @xmath208 is 1-lipschitz .",
    "also , if @xmath212 then one can identify @xmath72 clusters which accepted merge requests from smaller clusters . by fixing the decisions of the @xmath213 clusters comprising these merges ( the acceptors together with their corresponding requesters ) we must have @xmath212 regardless of the other clusters actions , as the @xmath72 acceptors will accept ( possibly different ) merge - requests no matter what .",
    "thus , @xmath208 is also 2-certifiable .",
    "let @xmath214 and assume now that @xmath215 .",
    "by the first part of the proof ( eq .  ) it then follows that @xmath216 , in which case talagrand s inequality gives @xmath217 also , note that our above bound @xmath218 implies that @xmath219 so in fact the probability of @xmath208 falling below @xmath220 is at most @xmath221 . as @xmath222",
    "we conclude that @xmath223 with probability at least @xmath224 , as required .    as the above claim demonstrated the effect of the susceptibility on the coalescence rate , we move to study the evolution of the susceptibility .",
    "the critical advantage of the size - biased process is that large clusters grow more slowly than small clusters .",
    "the intuition behind this is that larger clusters tend to receive more requests , and since clusters choose to accept their smallest incoming request , these clusters typically have more choices to minimize over .",
    "it turns out that this effect is enough to produce a useful quantitative bound on the growth of the susceptibility .",
    "[ clm : chi - grow ] suppose that after the @xmath30-th round @xmath139",
    ". then @xmath225 \\leq \\chi_t + \\frac{5}{\\kappa_t } \\ , .\\ ] ]    set @xmath169 and @xmath170 .",
    "let the clusters @xmath2 be indexed in increasing order of their sizes and let @xmath172 . for each cluster @xmath2",
    "let the random variable @xmath226 be the size of the smallest cluster that it receives a merge request from , as long as that cluster is no larger than itself , and not itself ; otherwise ( the case where @xmath2 receives no merge requests from another cluster of size less than or equal to its own ) set @xmath227 . under these definitions we have",
    "@xmath228    = \\chi + \\sum_{i=1}^\\kappa w_i { \\mathbb{e}}[x_i]\\ , , \\ ] ] since each @xmath2 is an acceptor with probability @xmath59 and if it indeed accepts a request from a cluster of size @xmath226 then the susceptibility will increase by exactly @xmath229 .    next , note that since we ordered the clusters by increasing order of size , each of the first @xmath174 clusters has size at most @xmath230 ( otherwise the last @xmath231 clusters would combine to a total mass larger than @xmath9 ) .",
    "we will use this fact to bound @xmath232 $ ] by considering two situations :    1 .   if @xmath2 receives an incoming request from at least one of the first @xmath233 clusters ( including itself ) then @xmath234 by the above argument .",
    "the probability of this is precisely @xmath235 as each of the first @xmath174 clusters @xmath5 independently sends a request to @xmath2 with probability @xmath176 ( with the factor of @xmath116 due to the decision of @xmath5 whether or not to issue requests ) .",
    "if @xmath2 gets no requests from the first @xmath236 clusters then use the trivial bound @xmath237 .    combining the two cases",
    "we deduce that @xmath238 we claim that @xmath239 is in fact always at most @xmath240 . to see this",
    ", first note that if @xmath241 then this immediately holds , e.g.  since @xmath237 .",
    "consider therefore the case where @xmath242 . since is a weighted average of @xmath230 and @xmath243 ,",
    "it increases whenever the weight on @xmath175 is increased . as @xmath244",
    "we have that in this case @xmath245 one can easily verify that the function @xmath246 satisfies @xmath247 for all @xmath248 , hence we conclude that @xmath249 in all cases , as claimed . plugging this into equation",
    "we obtain that @xmath250    \\leq    \\chi + \\frac{5}{\\kappa } \\sum_{i=1}^\\kappa w_i    =    \\chi + \\frac{5}{\\kappa } \\",
    ", , \\ ] ] as required .",
    "while the last claim allows us to limit the growth of the susceptibility , this bound is unfortunately too weak in general .",
    "for instance , when used in tandem with claim  [ clm : kappa - drop ] it results in the the susceptibility growing out of control , while the number of clusters decreases slower and slower . crucially however , conditioned on the event @xmath127 ( as given in definition  [ def - at ] ) we can refine these bounds to show that the growth of @xmath251 slows down dramatically , as the following claim establishes .",
    "[ clm : chi - grow - a ] suppose that at the end of the @xmath30-th round @xmath139 . then @xmath252 \\leq \\chi_t + ( 201 \\kappa_t)^{-1 } \\ , .\\ ] ]",
    "let @xmath169 and @xmath170 , and define the random variables @xmath226 as in the proof of claim  [ clm : chi - grow ] .",
    "by the same reasoning used to deduce inequality , only now using property   of @xmath127 according to which each of the smallest @xmath231 clusters has size at most @xmath134 , we have @xmath253 recall that equation established that @xmath254 = \\chi + \\sum_{i=1}^\\kappa w_i { \\mathbb{e}}x_i$ ] . this time we will need to bound this sum more delicately by splitting it into two parts based on whether or not @xmath255 . in the case",
    "@xmath255 we can use the trivial bound @xmath256 to arrive at @xmath257 where the last inequality is by property   of @xmath127 . for the second part of the summation we use the same weighted mean argument from the proof of claim  [ clm : chi - grow ] to deduce that when @xmath258 the r.h.s .  of   increases with the weight on @xmath175 , which in turn is at most @xmath259 .",
    "in particular , in case @xmath260 we have @xmath261 ( here we used the fact that the function @xmath262 is decreasing for @xmath263 ) . combining our bounds ,",
    "@xmath264 since @xmath265 .",
    "together with equation this completes the proof .    combining the bound on @xmath266 in claim  [ clm : kappa - drop ] with the bounds on @xmath251 from claims  [ clm : chi - grow ] and  [ clm : chi - grow - a ] will now result in the statement of lemma  [ lem : chi - kappa ]",
    ".    for convenience let @xmath169 and @xmath170 , as well as @xmath171 and @xmath267 .",
    "the first statement of the lemma is an immediate consequence of claim  [ clm : chi - grow ] , since @xmath268 and so @xmath269    \\leq    \\kappa \\ , { \\mathbb{e}}[\\chi ' \\mid { \\mathcal{f}}_t ]    \\leq    \\kappa \\bigg (      \\chi + \\frac{5}{\\kappa }    \\bigg )    =    \\chi \\kappa + 5 \\ , .\\ ] ] for the second statement , since we can break down @xmath270 into @xmath271 noticing that the last expression in the r.h.s .",
    "is at most @xmath272 , and recalling that @xmath273 ( due to eq .  ) and @xmath274 , we now obtain that @xmath275 $ ] is at most @xmath276    + { \\mathbb{e}}\\bigg[2\\chi\\cdot\\frac{1}{100\\chi } { \\mathbbm{1}}_{\\{\\kappa ' \\geq \\kappa-\\frac1{100\\chi}\\ } } \\;\\big|\\;{\\mathcal{f}}_t\\ , , a_t\\,,\\chi < 3 \\cdot 10^{-7}\\bigg ]   \\\\",
    "= \\ , & \\big ( \\kappa - \\frac{1}{100\\chi } \\big ) { \\mathbb{e}}\\bigg[\\chi ' \\;\\big|\\ ; { \\mathcal{f}}_t\\ , , a_t\\,,\\chi < 3 \\cdot 10^{-7}\\bigg ]    + \\frac1{50}{\\mathbb{p}}\\bigg ( \\kappa ' \\geq \\kappa-\\frac1{100\\chi } \\;\\big|\\;{\\mathcal{f}}_t\\ , , a_t\\,,\\chi < 3 \\cdot 10^{-7}\\bigg )   \\,.\\end{aligned}\\ ] ] applying claims  [ clm : kappa - drop ] and  [ clm : chi - grow - a ] now gives @xmath277    & \\leq \\left ( \\kappa - \\frac{1}{100\\chi } \\right ) \\left ( \\chi + \\frac{1}{201\\kappa } \\right )    + \\frac{1}{50 } \\",
    ", e^{-100 } \\\\ &",
    "< \\chi \\kappa - \\frac{1}{100 } + \\frac{1}{201 } + \\frac{1}{50 } e^{-100 } < \\chi \\kappa - \\frac{1}{200 } \\ , , \\end{aligned}\\ ] ] completing the proof .",
    "we wish to show that whenever either one of the two properties specified in @xmath127 does not hold , the expected number of clusters drops by a constant factor .",
    "suppose that property   of @xmath127 fails : in this case a constant fraction of the clusters have size which is at least a constant fraction of the average size @xmath278 .",
    "we will show that each such cluster receives an incoming request ( from another cluster of no larger size ) in the next round with a probability that is uniformly bounded from below .",
    "consequently , we will be able to conclude that the number of clusters shrinks by at least a constant factor in expectation .",
    "[ clm : no - ai ] suppose that at the end of the @xmath30-th round @xmath139 and property   of @xmath127 does not hold , i.e.  more than @xmath73 clusters have size greater than @xmath279 .",
    "then @xmath280      \\leq      ( 1 - 5 \\cdot 10^{-5 } ) \\,\\kappa_t \\ , .\\ ] ]    let @xmath169 and @xmath171 and as usual , order the clusters by increasing order of size .",
    "consider an arbitrary cluster @xmath2 which is one of the last @xmath281 clusters , and let @xmath175 denote its size . if @xmath2 opts to accept requests in this round ( with probability @xmath59 ) and any of the first @xmath183 clusters sends it a request , it will contribute a merge in this round .",
    "this occurs with probability @xmath282 where we used our assumption that @xmath283 .",
    "thus , the probability that @xmath2 contributes to a merge is at least @xmath284 .",
    "we conclude that the expected number of merges in this round is at least @xmath285 , from which the desired result follows .",
    "now suppose that property   of @xmath127 fails : here at least a constant proportion of the mass of the cluster - size distribution falls on clusters with size at most a constant multiple of the average size .",
    "such clusters behave nicely as in this window the relation between the cluster - size and the typical number of incoming requests can be bounded by a linear function .",
    "again , this will result in a constant proportion of clusters merging in the next round in expectation .",
    "[ clm : no - aii ] suppose that at the end of the @xmath30-th round @xmath139 and property   of @xmath127 does not hold , i.e. @xmath286 where @xmath175 denotes the size of @xmath2 .",
    "then @xmath287      \\leq      \\big(1 - 2 \\cdot 10^{-7}\\big ) \\ , \\kappa_t \\ , .\\ ] ]    let @xmath169 and @xmath171 .",
    "order the clusters by size and let @xmath201 be the number of clusters which are smaller than @xmath288 . since clearly at most @xmath289 clusters can have size at least @xmath288 we have @xmath290 . notice that since @xmath291 this implies that in particular @xmath292 . by the same arguments as before",
    ", each cluster @xmath2 with @xmath293 will accept a merge request from a smaller cluster with probability at least @xmath294 since we are concentrating our attention on the clusters of size @xmath255 , concavity implies that the last expression is actually at least @xmath295 we conclude that the expected number of merges in this round is at least @xmath296 where we used the fact that the @xmath175 s are sorted in increasing order to relate the sum over the cluster indices @xmath297 to the one over the first @xmath201 clusters .",
    "this gives the desired result .",
    "the proof readily follows from the combination of claims  [ clm : no - ai ] and  [ clm : no - aii ] .",
    "indeed , these claims establish that whenever the event @xmath127 fails we have @xmath298 \\leq \\big(1 - 2 \\cdot 10^{-7}\\big ) \\ , \\kappa_t\\,.\\ ] ] therefore , by the concavity of the logarithm , jensen s inequality implies that @xmath299    \\leq    \\log { \\mathbb{e}}[\\kappa_{t+1 } \\mid { \\mathcal{f}}_t\\ , , a_t^c ]    \\leq    \\log \\kappa_t + \\log ( 1 - 2 \\cdot 10^{-7 } )    <    \\log \\kappa_t - 2 \\cdot 10^{-7 } \\",
    ", , \\ ] ] as required .",
    "we now prove the upper bound in theorem  [ thm-1 ] by building upon the ideas of the previous section .",
    "recall that in the proof of proposition [ prop : e - upper ] we defined the sequence @xmath300 established that it was a supermartingale and derived the required result from optional stopping .",
    "that approach was only enough to produce a bound on @xmath165 $ ] , the expected completion time .",
    "for the stronger result on the typical value of @xmath109 we will analyze @xmath301 more delicately .",
    "namely , we estimate its increments in @xmath302 to qualify an application of an appropriate bernstein - kolmogorov large - deviation inequality for supermartingales due to freedman  @xcite .",
    "an important element in our proof is the modification of the above given variable @xmath158 into an overestimate @xmath303 which allows far better control over the increments in @xmath302 .",
    "this is defined as follows : @xmath304 where @xmath305 the purpose of the @xmath306 term is to limit the potential decrease from negative @xmath307 . in this section",
    ", we will need two - sided estimates ( in addition to one - sided bounds such as those used in the previous section ) due to the fact that we must control the @xmath302 increments .",
    "it is clear that @xmath308 as long as @xmath309 and @xmath310 .",
    "therefore , setting @xmath311 it follows that @xmath312 in what follows we will establish a large deviation estimate for @xmath313 , then use this overestimate for @xmath158 to show that w.h.p .  @xmath314 .",
    "we thus focus our attention on the sequence @xmath313 .",
    "[ lem : y - supermart ] the sequence @xmath313 is a supermartingale .    since by definition @xmath315 it suffices to consider the times @xmath316 . as we clearly have @xmath317 and claim  [ clm : chi - grow ]",
    "established that @xmath318 \\leq \\chi_t + \\frac{5}{\\kappa_t}$ ] we can deduce that @xmath319 \\leq 5 \\ , .\\ ] ] combined with lemma  [ lem : no - a ] as in the proof of proposition [ prop : e - upper ] , it then follows that @xmath320 \\leq 0 \\ , .\\ ] ] we turn to consider @xmath321 $ ] . since @xmath322 holds for all @xmath30 , it suffices to show that @xmath323 \\leq -\\frac1{200 } \\ , .\\ ] ] indeed , as in the proof of lemma  [ lem : chi - kappa ] we write @xmath324{\\mathbbm{1}}_{\\{\\kappa_{t+1 } \\geq        \\kappa_t-\\frac1{100\\chi_t}\\ } }      - \\chi_t\\kappa_t \\\\      & \\leq \\chi_{t+1}\\big(\\kappa_t - \\frac{1}{100\\chi_t}\\big ) +      2\\chi_t\\cdot\\frac1{100\\chi_t } { \\mathbbm{1}}_{\\{\\kappa_{t+1 } \\geq        \\kappa_t-\\frac1{100\\chi_t}\\}}- \\chi_t\\kappa_t \\ , ,    \\end{aligned}\\ ] ] which as before gives rise to the following : @xmath325 & < - \\frac{1}{100 } +      \\frac{1}{201 } + \\frac{1}{50}\\ ,      e^{-100 } < - \\frac{1}{200 } \\",
    ", ,    \\end{aligned}\\ ] ] and we conclude that @xmath313 is indeed a supermartingale , as required .",
    "the increments of the supermartingale @xmath313 are uniformly bounded in @xmath302 .",
    "namely , for every @xmath30 we have @xmath326 < 2 m^2 $ ] where @xmath327 .    first observe that @xmath328 since @xmath329 , we have @xmath330 , hence the last two expressions above sum to at most @xmath331 ( with room to spare ) and it remains to bound @xmath332 = o(1)$ ] for a suitably small implicit constant .",
    "observe that when @xmath333 we must have @xmath334 since @xmath335 .",
    "conversely , if @xmath336 then necessarily @xmath337 , with the last inequality due to the fact that @xmath338 and @xmath339 . combining the cases",
    "we deduce that in particular @xmath340 by claim  [ clm : chi - grow ] we have @xmath341    \\leq 5/\\kappa_t$ ] , hence we get @xmath342      \\leq \\kappa_t^2 \\,{\\mathbb{e } } [ ( \\chi_{t+1}-\\chi_t)^2 \\mid { \\mathcal{f}}_t ] + 1 + 2 \\kappa_t ( 5/\\kappa_t )      \\leq \\kappa_t^2 \\,{\\mathbb{e } } [ ( \\chi_{t+1}-\\chi_t)^2 \\mid { \\mathcal{f}}_t ] + 11 \\ ,",
    ".    \\end{aligned}\\ ] ] it remains to show that @xmath343=o(1/\\kappa_t^2)$ ] .",
    "to do so , let @xmath344 be the cluster - sizes after the @xmath30-th round and recall that by eq .   and the arguments following it we have @xmath345      =      { \\mathbb{e}}\\bigg [ \\big(\\sum_{i=1}^{\\kappa_t } 2 w_i x_i i_i\\big)^2 \\bigg ] \\",
    "] where each @xmath226 is a non - negative random variable satisfying @xmath346 ( marking the size of another cluster of no larger size that issued a request to @xmath2 or 0 if there was no such cluster ) and each @xmath347 is a bernoulli(@xmath59 ) variable independent of @xmath226 ( indicating whether or not @xmath2 chose to accept requests ) .",
    "since @xmath348 , it follows from convexity that @xmath349 hence , taking expectation while recalling that @xmath347 and @xmath226 are independent , @xmath345 \\leq 4 \\sum_{i=1}^{\\kappa_t } w_i ( { \\mathbb{e}}x_i^2 ) { \\mathbb{p}}(i_i ) = 2 \\sum_{i=1}^{\\kappa_t } w_i { \\mathbb{e}}x_i^2      \\ , , \\ ] ] and it remains to bound @xmath350 .",
    "following the same argument that led to   now gives @xmath351 as before , we now deduce that either @xmath352 , in which case clearly @xmath353 , or we have @xmath354 since @xmath355 for all @xmath356",
    "it then follows that @xmath357 ( with room to spare ) . either way we deduce that @xmath345 < 2 \\sum_i \\big ( w_i \\cdot 24/\\kappa_t^2\\big)= 48/\\kappa_t^2 \\ , , \\ ] ] and so , going back to  , @xmath358 < 48 + 11 < 60 \\ , .\\ ] ] using this bound in we can conclude the proof as we have @xmath359 < 3 \\,{\\mathbb{e}}[(\\xi_{t+1})^2 \\mid { \\mathcal{f}}_t ] + \\tfrac32m^2 < 2m^2 \\ , .",
    "\\qedhere\\ ] ]    by now we have established that @xmath313 is a supermartingale which satisfies @xmath360 for a value of @xmath361 and that in addition @xmath362 \\leq 2m^2 $ ] .",
    "we are now in a position to apply the following inequality due to freedman  @xcite ; we note the this result was originally stated for martingales yet its proof , essentially unmodified , extends also to supermartingales .",
    "[ thm : freedman ] let @xmath363 be a supermartingale with respect to a filter @xmath364 .",
    "suppose @xmath365 for all @xmath366 , and write @xmath367 $ ] . then for any @xmath368 , @xmath369    by the above theorem and a standard application of optional stopping , for any @xmath370 , integer @xmath30 and stopping time @xmath144 we have @xmath371 .",
    "in particular , letting @xmath372 and plugging @xmath373 and @xmath374 in the last inequality we deduce that @xmath375 hence , recalling the value of @xmath376 from   we have w.h.p . @xmath377 where the last inequality holds for sufficiently large @xmath0 .    in order to compare @xmath378 and @xmath379 , recall from eq .   that @xmath380 \\leq 5 $ ] whereas we established in eq .   that @xmath381 < 60 $ ] .",
    "by chebyshev s inequality , @xmath382 \\log^{-4/3 } n    \\big )    =    o\\big ( \\log^{-4/3 } n \\big ) \\ , .\\ ] ] in particular , a union bound implies that @xmath383 revisiting   this immediately implies that w.h.p . @xmath384 and since @xmath385 ( due to  ) we further have that w.h.p .",
    "@xmath386 therefore , we must have @xmath387 w.h.p .",
    ", otherwise the last two inequalities would contradict our choice of @xmath388 .",
    "this concludes the proof .",
    "in this section we use the analytic approximation framework introduced by schramm to prove the super - logarithmic lower bound stated in theorem  [ thm-1 ] for the coalescence time of the uniform process . recall that a key element in this framework is the normalized laplace transform of the cluster - size distribution , namely @xmath389 where @xmath390 ( see definition  [ def - f - g ] ) . the following proposition , whose proof entails most of the technical difficulties in our analysis of the uniform process , demonstrates the effect of @xmath49 and @xmath89 on the coalescence rate .",
    "[ prop : g - evol - conc ] let @xmath391 and @xmath392 .",
    "there exists an absolute constant @xmath96 such that , conditioned on @xmath36 , with probability at least @xmath393 we have @xmath394    we postpone the proof of this proposition to  [ sec : g - evol - conc ] in favor of showing how the relations that it establishes between @xmath395 can be used to derive the desired lower bound on @xmath109 .",
    "we claim that as long as @xmath396 satisfy eq .  , and",
    "@xmath397 then @xmath398 ; this deterministic statement is given by the following lemma :    [ lem : seq - evol ] set @xmath399 for a sufficiently large @xmath0 and let @xmath400 be a sequence of integers in @xmath401 with @xmath402 .",
    "further let @xmath403 and @xmath404 for @xmath405 be two sequences of reals in @xmath406 $ ] and suppose that for all @xmath407 the three sequences satisfy inequalities   and  .",
    "then @xmath408 for all @xmath409 .",
    "observe that the desired lower bound on the coalescence time of the uniform process @xmath16 is an immediate corollary of proposition  [ prop : g - evol - conc ] and lemma  [ lem : seq - evol ] .",
    "indeed , condition on the first @xmath30 rounds where @xmath410 and assume @xmath411 .",
    "proposition  [ prop : g - evol - conc ] implies that eqs .  ,",
    "hold except with probability @xmath412 . on this event",
    "lemma  [ lem : seq - evol ] yields @xmath413 , extending our assumption to the next round . accumulating these probabilities for all",
    "@xmath414 now shows that @xmath415 and in particular @xmath416 w.h.p .",
    ", as required .",
    "the proof proceeds by induction : assuming that @xmath417 for all @xmath418 we wish to deduce that @xmath413 .    repeatedly applying eq .   and using the induction hypothesis we find that @xmath419 since @xmath420 . following this",
    ", we claim that the set @xmath421 has size at most @xmath422 .",
    "indeed , as @xmath423 is monotone increasing for all @xmath424 , every such @xmath425 has @xmath426 where the last inequality holds for large @xmath0 .",
    "hence , if we had @xmath427 then it would follow from   that @xmath428 , contradicting the assumption of the lemma for large enough @xmath0 .    moreover , by the assumption that @xmath429 $ ] we have @xmath430 for all @xmath366 .",
    "together with the facts that @xmath431 for all @xmath432 due to   while @xmath433 for all @xmath366 we now get @xmath434 where the last inequality used the fact that @xmath435 as well as the inequality @xmath436 , valid for all @xmath437 .",
    "now , @xmath438 since @xmath439 and by the definition of @xmath440 we obtain that @xmath441 for sufficiently large @xmath0 , as claimed .",
    "this concludes the proof .",
    "the remaining sections are devoted to the proof of proposition  [ prop : g - evol - conc ] and are organized as follows . in",
    " [ sec : gt(1/2 ) ] we will relate @xmath49 to the expected change in @xmath32 . while unfortunately there is no direct recursive relation for the sequence @xmath442 , in   [ sec : rec - approx - f ] we will approximate @xmath443 $ ] ( closely related to @xmath444 ) in terms of several evaluations of @xmath46 .",
    "we will then refine our approximation of @xmath445 in   [ sec : convex - correc ] by examining @xmath446 at a point @xmath447 $ ] .",
    "finally , these ingredients will be combined into the proof of proposition  [ prop : g - evol - conc ] in   [ sec : g - evol - conc ] .",
    "the next lemma shows that the value of @xmath49 governs the expected number of merges in round @xmath60 .",
    "[ lem : ek ] suppose that after @xmath30 rounds we have @xmath139 clusters and set @xmath448 .",
    "then @xmath449 -      ( 1-{\\varepsilon}_t/2 ) \\kappa_t \\big| \\leq \\tfrac{1}{4 } \\ , .\\ ] ]    this emphasizes the importance of tracking the value of @xmath450 , as one could derive a lower bound on the coalescence time by showing that @xmath450 is sufficiently close to 1 ( that is , @xmath403 is suitably small ) . in order to prove this lemma",
    "we first require two straightforward facts on the functions involved .",
    "[ clm : g - lip ] the following holds for all @xmath30 with probability 1 .",
    "the function @xmath451 is convex , decreasing and 1-lipschitz on the domain @xmath452 .",
    "furthermore , @xmath453 for any @xmath72 .    denote the cluster - sizes at the end of round @xmath30 by @xmath55 .",
    "recall that by definition @xmath454 is an arithmetic mean of negative exponentials of @xmath72 , hence convex and decreasing .",
    "moreover , its first derivative is @xmath455 and in particular @xmath456 since @xmath457 is increasing and negative we deduce that @xmath46 is indeed 1-lipschitz . finally , since the negative exponential function is convex , jensen s inequality concludes the proof by yielding @xmath458    [ clm : exp - approx ] for any real numbers @xmath459 and @xmath460 we have @xmath461 .",
    "fix @xmath460 and consider the function @xmath462 .",
    "the desired inequality is equivalent to having @xmath463 for all @xmath459 , hence it suffices to bound @xmath464 at all local maxima , then compare that bound to its values at the endpoints @xmath465 and @xmath466 .",
    "it is easy to verify that any local extrema @xmath467 must satisfy @xmath468 , and so @xmath469 since @xmath470 for any @xmath471 , both @xmath472 and @xmath473 are at most @xmath474 , as required .",
    "let @xmath169 and @xmath171 , and as usual let @xmath475 denote the cluster - sizes at the end of @xmath30 rounds .",
    "recalling the definition of the uniform coalescence process , the number of pairs of clusters that merge in round @xmath60 is equal to the number of clusters which    [ ( a ) ]    select to be acceptors in this round , and    receive at least one incoming request in this round .",
    "( compare this simple characterization with the number of merges in the _ size - biased _ process , where one must also consider the cluster - sizes of the incoming requests relative to the size of the acceptor . )",
    "a given cluster @xmath2 becomes an acceptor with probability @xmath59 , and conditioning on this event we are left with @xmath121 other clusters , each of which may send a request to the cluster @xmath2 with probability @xmath176 ( the factor of @xmath116 accounts for the choice to issue rather than accept requests this round ) independently of its peers .",
    "altogether we conclude that the probability that @xmath2 accepts an incoming request is exactly @xmath476 and so the expected total number of merges is @xmath477    =    \\frac12 \\sum_i \\left (      1 - \\left (        1 - w_i/2      \\right)^{\\kappa-1 }    \\right ) \\ , .\\ ] ] therefore , @xmath478    & \\geq    \\frac{1}{2 } \\sum_i \\left (      1 - e^{- \\frac12 w_i ( \\kappa - 1 ) }    \\right )    =    \\frac{1 - g_t \\left ( \\frac{1}{2 } \\ , \\frac{\\kappa - 1}{\\kappa } \\right ) }    { 2}\\ ,   \\kappa    \\geq    \\frac{1 - g_t \\left ( \\frac{1}{2 } \\right ) } { 2}\\ , \\kappa    -    \\frac{1}{4 } \\ , , \\end{aligned}\\ ] ] where the last inequality is due to @xmath46 being 1-lipschitz as was established in claim  [ clm : g - lip ] . for an upper bound on the expected number of merges",
    "we apply claim  [ clm : exp - approx ] , from which it follows that @xmath478    \\leq    \\frac{1}{2 } \\sum_i    \\bigg (      1 - e^{-\\frac12 w_i ( \\kappa-1 ) } + \\frac{1}{e \\kappa }    \\bigg )    \\leq    \\frac{1}{2 } \\sum_i    \\left (      1 - e^{-\\frac12 w_i \\kappa }    \\right )    + \\frac{1}{2 e }    =    \\frac{1 - g_t \\left ( \\frac{1}{2 } \\right ) } { 2}\\ , \\kappa    +    \\frac{1}{2 e } \\ , .\\end{aligned}\\ ] ] combining these bounds gives the required result .",
    "despite the fact that there is no direct recursion for the values of @xmath49 , it turns out that on the level of expectation one can recover values of its counterpart @xmath67 from several different evaluations of @xmath46 .",
    "note that this still does not provide an estimate for the expected value of @xmath479 , as the transformation between the @xmath67 and @xmath479 unfortunately involves the number of clusters at time @xmath60 , thereby introducing nonlinearity to the approximation .",
    "[ lem : fg - evol ] suppose that after @xmath30 rounds @xmath139 and let @xmath480 .",
    "then @xmath481      >      ( 1-{\\varepsilon}_t/2 )      \\kappa_t      \\left [        \\frac{\\alpha}{\\alpha+\\beta } g_t(s )        +        \\frac{\\beta}{\\alpha + \\beta } g_t \\left ( s+ \\tfrac{1}{2 } \\right )      \\right ]      - 2 \\ , , \\ ] ] where @xmath482    although the approximation in eq .",
    "may look intractable , its structure is in fact quite useful : the leading factor @xmath483 is essentially @xmath484 $ ] from  lemma [ lem : ek ] , which is particularly convenient as we will need to divide by @xmath266 to pass from @xmath67 to @xmath479 .    as before , let @xmath169 and denote the cluster - sizes by @xmath485 .",
    "we account for the change @xmath486 as follows : should the clusters @xmath2 and @xmath5 merge in round @xmath60 , this would contribute exactly @xmath487 to @xmath488 .",
    "thus , @xmath489 $ ] is simply the sum of these expressions , weighted by the probabilities that the individual pairs merge .",
    "let us calculate the probability that @xmath2 accepts an incoming request from the cluster @xmath5 .",
    "first let @xmath490 denote the event that @xmath2 accepts an incoming request from _ some _ cluster , which was shown in the proof of lemma  [ lem : ek ] to satisfy @xmath491 .",
    "crucially , the fact that acceptors select an incoming request to merge with via a uniform law now implies that , given @xmath490 , the identity of the cluster that @xmath2 merges with is uniform over the remaining @xmath121 clusters by symmetry .",
    "in particular , the probability that @xmath2 accepts a merge request from @xmath5 equals @xmath492 and so @xmath493    =    \\sum_{i \\neq j }    \\left ( e^{-(w_i + w_j)s } - e^{-w_i s } - e^{-w_j s } \\right )    \\frac{1}{2 } \\left (      1 - \\left (        1 - w_i/2      \\right)^{\\kappa-1 }    \\right )    \\frac{1}{\\kappa-1 } \\ , .\\ ] ] the term @xmath494 is greater or equal to @xmath495^{-1 } \\geq e^{- w_i \\kappa/2 } - [ e(\\kappa-1)]^{-1 } $ ] by claim  [ clm : exp - approx ] . since @xmath496 is always negative by convexity , this gives @xmath497    \\geq    \\sum_{i \\neq j }    \\left ( e^{-(w_i + w_j)s } - e^{-w_i s } - e^{-w_j s } \\right )    \\frac{1}{2 } \\left (      1 -        e^{-w_i\\kappa/2 } + \\frac{1}{e(\\kappa-1 ) }    \\right )    \\frac{1}{\\kappa-1 } \\ , .\\end{aligned}\\ ] ] next , observe that @xmath498 hence we can sum the effect of the term @xmath499 over all @xmath500 indices @xmath501 and get @xmath497    \\geq    & \\",
    "\\frac{1}{2(\\kappa-1 ) } \\sum_{i \\neq j}\\bigg [    \\big ( e^{-(w_i + w_j)s } - e^{-w_i s } - e^{-w_j s } \\big ) \\big (      1 - e^{-w_i \\kappa/2 }    \\big ) \\bigg ] - \\frac{\\kappa}{2e(\\kappa-1 ) } \\ , .\\end{aligned}\\ ] ] note that the last expression has magnitude at most @xmath474 due to the assumption @xmath291 .",
    "furthermore , each of the @xmath500 summands in the summation over @xmath501 has magnitude at most @xmath9 , hence we may replace the factor @xmath502 with @xmath503 in front of the summation at a maximal cost of @xmath504 , giving @xmath497    & \\geq   \\frac{1}{2\\kappa } \\sum_{i \\neq j}\\bigg [    \\big ( e^{-(w_i + w_j)s } - e^{-w_i s } - e^{-w_j s } \\big )   \\big (      1 - e^{-w_i\\kappa/2 }    \\big ) \\bigg ]    - \\frac12 - \\frac{1}{e } \\nonumber\\\\   & > \\frac{1}{2\\kappa } \\sum_{i , j}\\bigg [    \\big ( e^{-(w_i + w_j)s } - e^{-w_i s } - e^{-w_j s } \\big )   \\big (      1 - e^{-w_i\\kappa/2 }    \\big ) \\bigg ]    - 2\\ , ,    \\label{eq : fg - evol-2}\\end{aligned}\\ ] ] where the last inequality is due to each of the @xmath41 diagonal terms @xmath505 having magnitude at most 1 .",
    "since addresses @xmath506 rather than @xmath446 we now focus on the following summation : @xmath507 using this in  , noting that the term @xmath508 cancels out , we find that @xmath509    & >    \\frac{1}{2\\kappa } \\left [      f_t(\\kappa s)^2      - f_t\\big(\\kappa s + \\frac{\\kappa}{2 } \\big ) f_t(\\kappa",
    "s )      + \\kappa\\ , f_t\\big(\\kappa s + \\frac{\\kappa}{2 } \\big )      + f_t\\big(\\frac{\\kappa}{2 } \\big ) f_t(\\kappa s )    \\right ] - 2 \\\\    & =    \\frac { \\kappa + f_t\\left ( \\frac{\\kappa}{2 } \\right ) } { 2 }    \\bigg [      \\frac { f_t(\\kappa s ) + f_t \\left ( \\frac{\\kappa}{2 } \\right ) }      { \\kappa + f_t \\left ( \\frac{\\kappa}{2 } \\right ) }      \\cdot \\frac{f_t(\\kappa s)}{\\kappa }      +      \\frac { \\kappa - f_t(\\kappa s ) }      { \\kappa + f_t \\left ( \\frac{\\kappa}{2 } \\right ) }      \\cdot \\frac{f_t \\left ( \\kappa s + \\frac{\\kappa}{2 } \\right ) } { \\kappa }    \\bigg ] - 2\\\\    & =    \\frac { 1 + g_t\\left ( \\frac{1}{2 } \\right ) } { 2 } \\kappa    \\left [      \\frac{\\alpha}{\\alpha+\\beta } g_t(s )      +      \\frac{\\beta}{\\alpha + \\beta } g_t \\left ( s+ \\tfrac{1}{2 } \\right )    \\right ]    - 2 \\ , , \\end{aligned}\\ ] ] where @xmath510 and @xmath511 , thus establishing  .      examine the recursion established in lemma  [ lem : fg - evol ] . in order to derive lower bounds on the @xmath44 s , we recognize the second factor in the r.h.s .  of   as a weighted arithmetic mean of two evaluations of @xmath46 .",
    "recalling that @xmath46 is a convex combination of negative exponentials , we will now estimate the `` convexity correction '' between @xmath46 and its weighted mean .",
    "it is precisely this increment which will allow us to show that @xmath46 rises toward 1 at a nontrivial rate , as the following lemma demonstrates :    [ lem : e - increment ] suppose after @xmath30 rounds @xmath139 and let @xmath512 and @xmath513",
    ". then @xmath514      \\geq       \\left [        g_t(1 ) + { \\varepsilon}_t^{13/{\\varepsilon}_t }      \\right ] \\kappa^ *      -2 \\ , .\\ ] ]    indeed , by lemma  [ lem : ek ] we recognize that @xmath515 is approximately @xmath516 $ ] , hence , postponing for the moment concentration arguments , one sees that eq .",
    "resembles the form of eq .  .",
    "our first step in proving this lemma will be to establish a lower bound similar to   which replaces the @xmath517 term by the convexity correction between @xmath46 and its weighted mean from eq .  .",
    "[ clm : g1+cvx ] suppose after @xmath30 rounds @xmath139 and let @xmath512 and @xmath513 .",
    "let @xmath518 be the secant line intersecting @xmath39 at @xmath519 and @xmath520 .",
    "let @xmath521 where @xmath522 and @xmath523 , and let @xmath524 .",
    "then @xmath525      \\geq      [ g_t(1 ) + \\delta ] \\kappa^ *      -2\\ ] ] and in addition @xmath526    applying lemma  [ lem : fg - evol ] with @xmath527 and rewriting its statement in terms of @xmath528 give @xmath529      >      ( 1-{\\varepsilon}_t/2 ) \\kappa_t      h(\\theta )      - 2      =     h(\\theta ) \\kappa^ *   - 2      =      [ g_t(\\theta ) + \\delta ] \\kappa^ *   - 2 \\ , .\\ ] ] since we established in claim  [ clm : g - lip ] that @xmath46 is decreasing , will follow from showing that @xmath530 . note that @xmath531 is a weighted mean between @xmath532 and @xmath533 , and so it is not immediate that @xmath530 . to show that this is the case",
    ", we argue as follows .    recalling the definition of @xmath531",
    ", we wish to show that @xmath534 where @xmath522 and @xmath523 .",
    "observe that @xmath535 by definition .",
    "therefore , @xmath530 if and only if @xmath536 , or equivalently @xmath537 we claim that indeed @xmath538 which would in particular imply that it holds for @xmath539 since @xmath532 with @xmath540 .",
    "in order to verify   observe that its l.h.s .",
    "is an affine function of @xmath72 whereas the r.h.s .",
    "is convex , and that equality holds for @xmath541 ( recall that @xmath542 ) and @xmath543 .",
    "thus , the affine l.h.s .",
    "does not exceed the convex r.h.s .  for any @xmath544 , as required .",
    "we now conclude that @xmath530 , establishing  .",
    "it remains to prove .",
    "since @xmath531 is a weighted arithmetic mean of @xmath545 and @xmath546 , the upper bound will follow once we show that the weight on @xmath545 exceeds the weight on @xmath547 , that is , when @xmath548 or equivalently @xmath549 this indeed holds , as claim  [ clm : g - lip ] established that @xmath453 and therefore the l.h.s .",
    "above is at least @xmath550 , where we used the fact that @xmath551 .",
    "for the lower bound in , recall from claim  [ clm : g - lip ] that @xmath46 is decreasing and @xmath542 , which together with the aforementioned fact that @xmath552 gives @xmath553 the proof is now concluded by noting that @xmath554 by definition .",
    "next , we will provide a lower bound on the convexity correction in terms of the difference between two evaluations of @xmath46 .",
    "[ clm : cvx - correction ] let @xmath555 and let @xmath556 be the secant line intersecting @xmath46 at @xmath72 and @xmath557 . for any @xmath558 , @xmath559 ^ 2 \\ , .\\ ] ]    let @xmath560 denote the secant line intersecting @xmath46 at @xmath72 and @xmath561 . since @xmath562 and @xmath46 is a decreasing convex function , @xmath563 it thus suffices to show the following to deduce the statement of the claim : @xmath564 ^ 2 \\,,\\ ] ] which has a particularly convenient l.h.s .  due to the fact that @xmath565 $ ] by definition .",
    "now let @xmath169 and let @xmath566 be the cluster - sizes at the end of round @xmath30 .",
    "we have @xmath567 - g_t(s + \\delta )      & =      \\frac{1}{2\\kappa } \\sum_i \\left [           e^{-w_i \\kappa s }        - 2e^{-w_i \\kappa ( s + \\delta ) }        +   e^{-w_i \\kappa ( s + 2\\delta ) }      \\right ] \\nonumber\\\\      & =      \\frac{1}{2\\kappa } \\sum_i e^{-w_i \\kappa s } \\left (        1        - e^{-w_i \\kappa \\delta }      \\right)^2 \\ , .\\label{eq : g - g }    \\end{aligned}\\ ] ] by cauchy - schwarz , the r.h.s .  of   satisfies @xmath568 ^ 2      =      \\frac{1}{2 } \\left [        g_t \\big ( \\frac{s}{2 } \\big )        - g_t \\big ( \\frac{s}{2 } + \\delta",
    "\\big )      \\right]^2 \\ , .",
    "\\label{eq : cvx - correction-3 }    \\end{aligned}\\ ] ] set @xmath569 , noting that @xmath570 as @xmath571 . since @xmath46 is a decreasing convex function we have @xmath572 and summing these equations for @xmath573 yields @xmath574      \\geq      \\frac{1}{k } \\left [        g_t \\big ( \\frac{s}{2 } \\big )        - g_t \\big ( \\frac{s}{2 } + \\frac{1}{2 } \\big )      \\right ] \\ , , \\ ] ] which is at least @xmath575 $ ] once again since @xmath555 and @xmath46 is convex and decreasing . therefore , since @xmath570 we can conclude that @xmath576 \\,,\\ ] ] which together with  , now establishes   and thus completes the proof .    the above claim quantified the convexity correction in terms of @xmath577 , and next we wish to estimate this quantity in terms of the key parameter @xmath480 , which governs the coalescence rate as was established by lemma  [ lem : ek ] .",
    "[ clm : g.5-g1 ] for any @xmath30 we have @xmath578 , where @xmath579 .",
    "we first claim that @xmath580 indeed , let @xmath581 , let @xmath566 be the cluster - sizes after time @xmath30 and define @xmath582 by cauchy - schwarz , @xmath583 .",
    "moreover , @xmath584 since @xmath46 is decreasing and @xmath585 , and combining these inequalities now establishes  .",
    "let @xmath586 and let @xmath587 .",
    "a repeated application of   reveals that @xmath588 and summing these equations we find that @xmath589 on the other hand , since @xmath46 is 1-lipschitz we also have @xmath590 .    at this point , recalling that @xmath579 and combining it with the above bounds gives @xmath591 the above inequality is valid for any integer @xmath587 and we now choose @xmath592 , or equivalently @xmath201 is the least integer such that @xmath593 .",
    "one should notice that indeed @xmath594 since we have @xmath595 , which in turn follows from the fact @xmath453 ( see claim  [ clm : g - lip ] ) yielding @xmath596 revisiting eq .   and using the fact that @xmath597 we find that @xmath598 , and after rearranging @xmath599 .",
    "moreover , by definition @xmath600 and as one can easily verify that @xmath601 for all @xmath602 ( which by   covers the range of @xmath403 ) , we have @xmath603 .",
    "the choice of @xmath201 further implies that @xmath604 and combining these bounds gives @xmath605 as claimed .",
    "we are now ready to establish eq .  , the quantitative bound on the convexity correction in the weighted mean of eq .  .",
    "by claim  [ clm : g1+cvx ] , in order to prove eq .",
    "it suffices to show that @xmath606 with @xmath607 as defined in the statement of that claim . using eq .   of claim  [ clm : g1+cvx ]",
    "we can write @xmath608 where @xmath556 is the secant line defined in that claim , @xmath532 and @xmath609 satisfies @xmath610 . therefore , claim  [ clm : cvx - correction ] implies that @xmath611 ^ 2 $ ] .",
    "applying claim  [ clm : g.5-g1 ] we find that @xmath612 where we consolidated the constant factors into the exponent using the fact that @xmath613 for all @xmath614 while bearing in mind that by   indeed @xmath615 .",
    "let @xmath169 and note that w.l.o.g .",
    "we may assume that @xmath41 is sufficiently large by choosing the constant @xmath33 from the statement of the proposition appropriately .",
    "let @xmath485 denote the cluster - sizes .",
    "as argued before , given @xmath36 one can realize round @xmath60 of the process by a @xmath41-dimensional product space , where clusters behave independently as follows :    for each @xmath366 , the cluster @xmath2 decides whether to send or accept requests via a fair coin toss .",
    "when sending a request @xmath2 selects its recipient cluster randomly ( proportionally to the @xmath616 s ) .    when accepting requests @xmath2 generates a random real number between 0 and 1 to be used to select the incoming merge - request it will grant ( uniformly over all the incoming requests ) .",
    "as such , conditioned on @xmath36 the variable @xmath266 is clearly 1-lipschitz w.r.t .  the above product space since changing the value corresponding to the action of one cluster can affect at most one merge",
    "thus , by a standard well - known coupling argument ( see e.g.  @xcite ) the increments of the corresponding doob martingale are bounded by 1 ( i.e.  @xmath617 where @xmath618 $ ] with @xmath619 being the @xmath37-algebra generated by the actions of clusters @xmath620 and @xmath36 ) .",
    "hoeffding s inequality now gives @xmath621\\big| > a \\;\\big|\\ ; { \\mathcal{f}}_t\\big ) \\leq 2\\exp(-a^2 / 2\\kappa)\\quad\\mbox{for any $ a>0$}\\,.\\ ] ] letting @xmath622 we recall from lemma  [ lem : ek ] that @xmath623 - \\kappa^*| \\leq \\frac{1}{4}$ ] and obtain that @xmath624 where the last inequality holds for any sufficiently large @xmath41 , thus establishing  .    to obtain eq .",
    ", recall from   that @xmath625 , implying that the random variable @xmath626 is 1-lipschitz w.r.t .  the aforementioned @xmath41-dimensional product space .",
    "furthermore , @xmath627 \\geq \\big [ g_t(1 ) + { \\varepsilon}_t^{13/{\\varepsilon}_t } \\big ] \\kappa^ * -2 $ ] due to lemma  [ lem : e - increment ] , and by the same argument as before we conclude from hoeffding s inequality that @xmath628\\kappa^ *      - \\kappa^{2/3 } \\mid { \\mathcal{f}}_t    \\right )    \\leq \\exp\\big(-\\tfrac12\\kappa^{1/3 } + o(\\kappa^{-1/3})\\big ) < \\kappa^{-100}\\,.\\end{aligned}\\ ] ] rewriting this inequality in terms of @xmath479 , with probability at least @xmath629 we have @xmath630 \\frac{\\kappa^*}{\\kappa_{t+1 } } - \\frac{\\kappa^{2/3}}{\\kappa_{t+1 } } \\geq    g_t(1 ) + { \\varepsilon}_t^{13/{\\varepsilon}_t }    - \\frac{2|\\kappa_{t+1}-\\kappa^*|+\\kappa^{2/3}}{\\kappa_{t+1 } } \\,,\\end{aligned}\\ ] ] where we used that @xmath631(\\kappa^*-\\kappa_{t+1 } ) \\geq -(g_t(0 ) + 1)|\\kappa_{t+1}-\\kappa^*| = -2|\\kappa_{t+1}-\\kappa^*|$ ] due to @xmath39 being decreasing in @xmath72 . moreover , since @xmath479 is 1-lipschitz as was shown in claim  [ clm : g - lip ] , in this event we have @xmath632 finally , recalling from eq .   that @xmath633 except with a probability of at most @xmath634 , we can conclude that with probability at least @xmath635 @xmath636 where the last inequality used the fact that @xmath637 by definition of the coalescence process ( since the merging pairs of clusters are always pairwise - disjoint ) .",
    "this yields   and therefore completes the proof of the proposition .",
    "we thank yuval peres and dahlia malkhi for suggesting the problem and for useful discussions .",
    "the starting point of our work is attributed to the analytic approximation framework of oded schramm , and e.  l.  is indebted to oded for enlightening and fruitful discussions on his approach ."
  ],
  "abstract_text": [
    "<S> the following distributed coalescence protocol was introduced by dahlia malkhi in 2006 motivated by applications in social networking . </S>",
    "<S> initially there are @xmath0 agents wishing to coalesce into one cluster via a decentralized stochastic process , where each round is as follows : every cluster flips a fair coin to dictate whether it is to issue or accept requests in this round . issuing a request amounts to contacting a cluster randomly chosen _ proportionally to its size_. a cluster accepting requests is to select an incoming one _ uniformly _ ( if there are such ) and merge with that cluster . </S>",
    "<S> empirical results by fernandess and malkhi suggested the protocol concludes in @xmath1 rounds with high probability , whereas numerical estimates by oded schramm , based on an ingenious analytic approximation , suggested that the coalescence time should be super - logarithmic .    </S>",
    "<S> our contribution is a rigorous study of the stochastic coalescence process with two consequences . </S>",
    "<S> first , we confirm that the above process indeed requires super - logarithmic time w.h.p . , where the inefficient rounds are due to oversized clusters that occasionally develop . second </S>",
    "<S> , we remedy this by showing that a simple modification produces an essentially optimal distributed protocol : if clusters favor their _ smallest _ incoming merge request then the process _ does _ terminate in @xmath1 rounds w.h.p . , and </S>",
    "<S> simulations show that the new protocol readily outperforms the original one . </S>",
    "<S> our upper bound hinges on a potential function involving the logarithm of the number of clusters and the cluster - susceptibility , carefully chosen to form a supermartingale . </S>",
    "<S> the analysis of the lower bound builds upon the novel approach of schramm which may find additional applications : rather than seeking a single parameter that controls the system behavior , instead one approximates the system by the laplace transform of the entire cluster - size distribution . </S>"
  ]
}
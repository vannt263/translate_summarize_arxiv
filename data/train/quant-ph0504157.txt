{
  "article_text": [
    "it is relatively easy to find a lower bound for the total number of queries , @xmath28 .",
    "let us try to find the target by first locating the target block and then use grover s algorithm to find the target in the block .",
    "we know that it takes @xmath29 queries to find the target in a block",
    ". the overall number of queries should be greater than @xmath4 @xcite .",
    "therefore @xmath30 .",
    "this gives a lower bound for @xmath31 : @xmath32the lower bound is rather obvious , the existence of an algorithm , that was discovered in @xcite that came so close to the lower bound was a lot more surprising .",
    "in the paper we have presented a simple algorithm for partial search of a database of @xmath0 items separated into @xmath1 blocks of @xmath15 items each , @xmath33 .",
    "the saving in the run - time as compared to an exhaustive search , is slightly better than the original partial quantum search algorithm .",
    "however , the distinguishing feature is not the savings but its simplicity . through three elementary observations about the grover search algorithm , without a single equation ,",
    "we derive one of the fastest possible search algorithms .",
    "research was partly supported by nsa , aro under contract no .",
    "daag55 - 98-c-0040 ."
  ],
  "abstract_text": [
    "<S> quite often in database search , we only need to extract portion of the information about the satisfying item . </S>",
    "<S> recently radhakrishnan and grover [ rg ] considered this problem in the following form : the database of @xmath0 items was divided into @xmath1 equally sized blocks . </S>",
    "<S> the algorithm has just to find the block containing the item of interest . </S>",
    "<S> the queries are exactly the same as in the standard database search problem . </S>",
    "<S> [ rg ] invented a quantum algorithm for this problem of partial search that took about @xmath2 fewer iterations than the quantum search algorithm . </S>",
    "<S> they also proved that the best any quantum algorithm could do would be to save @xmath3 iterations . </S>",
    "<S> the main limitation of the algorithm was that it involved complicated analysis as a result of which it has been inaccessible to most of the community . </S>",
    "<S> this paper gives a simple analysis of the algorithm . </S>",
    "<S> this analysis is based on three elementary observations about quantum search , does not require a single equation and takes less than 2 pages .    </S>",
    "<S> database search is one of the few applications for which a fast quantum algorithm is known @xcite . </S>",
    "<S> the grover algorithm has been shown to be optimal and can not be improved even by a single query @xcite . </S>",
    "<S> therefore it is of great interest to find any circumstance under which we can improve the performance of the quantum search algorithm . </S>",
    "<S> the problem of partial database search is also of independent interest . </S>",
    "<S> for example when using google to search the internet ( which is a large database ) , we are typically interested in only some of the attributes of the entity being searched - e.g. while searching for a grocery store in the neighborhood , we may only want the address of the store , not its corporate information .    </S>",
    "<S> the concept of partial search was invented recently in @xcite . </S>",
    "<S> that was a surprising result because it gave a means for improving the quantum search algorithm with no knowledge of the problem structure , except of course the block nature . </S>",
    "<S> unfortunately , that paper , though an important discovery , is mathematically , very rigorous and not accessible to most of the quantum information community . in this paper </S>",
    "<S> we set ourselves the task of designing a simple partial search algorithm that clearly brought out the nature of the algorithm .    </S>",
    "<S> the original grover search algorithm is based on two operations : ( i ) selective inversion and ( ii ) inversion about average . </S>",
    "<S> we shall denote a selective inversion of the target , followed by an inversion about average , as a grover iteration . </S>",
    "<S> figure 1 depicts this sequence of two operations which is being used to search for a single target out of twelve items . in the original algorithm </S>",
    "<S> , it takes @xmath4 grover iterations to locate the desired ( target ) item . </S>",
    "<S> the idea of partial search is a trade - off of precision for speed , i.e. we do not need the exact address of the target , but only the first several bits of it as illustrated in figure 2 .    </S>",
    "<S> let us consider a more general setup * @xmath0 items are divided into @xmath1 blocks of @xmath5 items each*. as in @xcite , we do a partial search for the appropriate block . </S>",
    "<S> the following are the three conceptual steps of the algorithm :    * step 1 : @xmath6 grover iterations ( global search ) . </S>",
    "<S> * step 2 : @xmath7 iterations of local searches in each block done in parallel . </S>",
    "<S> note that this drives the amplitude negative in the target block . * step 3 : one global inversion about average annihilates amplitudes of all items in non - target blocks and finds the target block    so the total number of queries @xmath8 is @xmath9 the coefficient of @xmath10 is @xmath11 and so the improvement over quantum searching is @xmath12 iterations , just for reference the original algorithm of @xcite achieved a saving of @xmath13 iterations after considerably more work .    in order to see qualitatively , why the above procedure works and why this is the best we can do within this framework , consider the following argument based on three simple observations ( ( a ) , ( b )  & ( c ) ) :    a. scattering out of a state - : :    if we start with all the amplitude in a single basis state , and apply    @xmath14 iterations of grover search , then the sum of the    amplitudes in all @xmath15 states will be    @xmath16 . b. going into a state </S>",
    "<S> : :    - if we stop the search algorithm @xmath14 iterations before    it finds the target , then the sum of amplitudes in all    @xmath0  states will be    @xmath17.@xmath18 in    case @xmath19 this sum becomes    @xmath20 . c.  zeroing the amplitudes in certain states </S>",
    "<S> : :    - if the amplitude in some state has to fall to zero after a grover    iteration ( step 3 of our algorithm ) , the state should have an    amplitude of two times the average before the iteration@xmath21    working backward from the final result :    * assume @xmath14 iterations in step 2 , and neglecting the initial iterations it takes for the amplitudes in the target block to come to zero , it follows by ( a ) , that after step 2 , the sum of the amplitudes in the target block should be @xmath22 . * therefore in order for step 3 to work , it follows by ( c ) , the sum of the amplitude in all states ( in non - target blocks ) , after step 1 , should have been @xmath23 * therefore by ( b ) , the saving in step 1  is @xmath24 grover iterations@xmath21 * this gives an overall saving of @xmath25 iterations . </S>",
    "<S> this function assumes its maximum value at @xmath26 which is @xmath27 </S>"
  ]
}
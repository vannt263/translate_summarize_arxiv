{
  "article_text": [
    "* modelling second - order markov dynamics . * for each system , we model the dynamics as a stochastic process .",
    "we represent the @xmath9 different components of the system with physical nodes @xmath10 and let @xmath11 denote the state or position of an entity of flow at time @xmath12 . with this notation , the flow through the system corresponds to a walker stepping between nodes , which can be described by an indexed sequence of random variables @xmath13 . in general , the probability that the flow visits node @xmath0 at time @xmath14 depends on the full history of the dynamic process : @xmath15 for all @xmath16 . in network science",
    ", it is common to assume that the direction flow takes in a dynamic process depends only on the current state and not on time : @xmath17 in other words , the dynamic process is markovian or a first - order markov process ( m1 ) .",
    "that is , it is assumed that knowledge about the relative weights of links between the nodes is sufficient to model the dynamic process in the system .",
    "all this information is captured in the transition matrix @xmath18 with elements of the form @xmath19 measuring the probability that a random walker at node @xmath0 steps to node @xmath6 and normalized such that @xmath20 . accordingly , the probability of finding the random walker at node @xmath6 at time @xmath14 is @xmath21 many ranking @xcite and community detection @xcite methods as well as epidemic models @xcite build directly on this first - order markov process .",
    "in fact , also maximal - entropy random walks are markovian , though they build on modified transition probabilities @xcite .",
    "as we argue below , random dynamics on networks can not accurately capture empirical flow pathways . as a result",
    ", a first - order markov modelling can fail to capture important phenomena in a broad range of complex systems @xcite . to capture higher - order markov effects in flow pathways @xcite , we use memory networks .",
    "a memory network consists of memory nodes ; each memory node represents the current state of the walker , the currently visited node , and the previous step or steps .",
    "the order of the markov process determines the number of steps that represent a state .",
    "for example , in a second - order markov process ( m2 ) , the walker s next step depends on the currently visited node @xmath6 and the previously visited node @xmath0 . in this case , the memory nodes @xmath3 correspond to directed links between physical nodes in the standard network .",
    "accordingly , the network of memory nodes is a form of line graph of the network without memory ( see the supplementary information , sec .  1 ) .",
    "in a third - order markov process , the walker s next step depends on the currently visited node @xmath6 and the two previously visited nodes @xmath22 and @xmath0 , and the memory nodes @xmath23 correspond to three - step pathways between physical nodes in the standard network . here",
    "we focus on a second - order markov process , but the procedure can in principle easily be generalized to higher - order markov processes , provided that sufficient data is available to fit the model .",
    "the dynamics of a second - order markov walker can now simply be modelled as a markov process on the memory network , instead of a non - markov process on the physical nodes . for a second - order markov process",
    ", the dynamics are encoded by a transition matrix with elements of the form @xmath24 measuring the probability that the walker steps from @xmath6 to @xmath25 if it came from @xmath0 in the previous step and normalized such that @xmath26 .",
    "these transitions can therefore be interpreted as movements between links . however , even in undirected networks , we must use two memory nodes for each pair of connected nodes @xmath0 and @xmath6 since the memory nodes encode the time ordering of the visits . in any case",
    ", the probability of finding the random walker at memory node @xmath27 at time @xmath14 is @xmath28 consequently , the probability of finding the random walker at physical node @xmath25 at time @xmath14 in a second - order markov process is @xmath29    * constraints on flow captured in real - world pathway data .",
    "* we collected pathway data with sequences of steps for the six well - studied and diverse systems presented in table  [ table : stats ] : flight itineraries between us _ airports _ , the airports aggregated in _ cities _ , chains of citing articles aggregated in _ journals _ , movements of _ patients _ between hospital wards in stockholm , gps - tracked _ taxis _ in san francisco , and chains of forwarded and replied _ emails _ ( see the supplementary information , sec .  1 ) .",
    "we chose these systems because their pathway data were readily available and because the outcomes of their analyses have important consequences .",
    "to explain the effects of memory , we analysed the systems with networks with and without memory .",
    "0.88@rrrrrllllllllllllllllll@ &    ' '' ''    & &    ' '' ''",
    "& &    ' '' ''    & &    ' '' ''    & &    ' '' ''    & &    ' '' ''    & &    ' '' ''    & &    ' '' ''    & ranking +   & & & & & & & & & & & & & & gain  ( % ) & & diff .",
    "( % ) + & & m1 & m2 & & m1 & m2 & & m1 & m2 & & m1 & m2 & & m1 & m2 & & m1 & m2 & & m1m2 & & m1m2 + airports & & 464 & 17,983 & & 5.7 & 47 & & 2.1 & 0.63 & & 5.2 & 3.4 & & 93 & 5.1 & & 1.2 & 6.2 & &    ' '' ''    13 & &    ' '' ''    8.2 + cities & & 413 & 15,368 & & 6.5 & 48 & & 2.8 & 0.62 & & 4.7 & 3.5 & & 32 & 5.3 & & 1.8 & 3.7 & &    ' '' ''    5.2 & &    ' '' ''    3.7 + journals & &    ' '' ''    1,983 & 201,349 & & 11 & 21 & & 4.7 & 5.4 & & 4.5 & 3.5 & & 14 & 15 & & 1.8 & 3.4 & &    ' '' ''    4.7 & &    ' '' ''    9.7 + patients & & 402 & 4,987 & & 16 & 54 & & 1.9 & 3.4 & & 3.0 & 1.0 & & 7.3 & 1.9 & & 5.0 & 4.7 & &    ' '' ''    30 & &    ' '' ''    22 + taxis & & 416 & 2,763 & & 20 & 10 & & 6.8 & 10 & & 2.2 & 1.1 & & 3.1 & 2.2 & & 1.5 & 1.7 & &    ' '' ''    7.1 & &    ' '' ''    6.5 + emails & & 144 & 1,432 & & 14 & 58 & & 5.2 & 2.7 & & 3.0 & 1.3 & & 12 & 5.8 & & 1.3 & 3.0 & &    ' '' ''    26 & &    ' '' ''    18 +    * memory dynamics better reveal real constraints on flow . * the pathways in fig .",
    "[ socialflow ] illustrate how second - order markov dynamics strongly direct flow in two real - world examples . with data from actual itineraries , figs .",
    "[ socialflow]a - b show trips to / from chicago modelled with first - order markov dynamics in a and with second - order markov dynamics in b ( see methods ) .",
    "when only the relative proportions of departures from chicago determines the next destination in the standard network representation , the trips mix randomly . with a second - order markov model , however , passengers flying to chicago are most likely to return to the city from which they came .",
    "similarly , figs .",
    "[ socialflow]c - d show the journal citation flow to / from the journal _ pnas _ with first - order markov dynamics in c and with second - order markov dynamics in d. the journal citation flow is a proxy for how researchers navigate scholarly literature , derived from a random walker moving between articles following citations and mapped onto journals .",
    "when only the fraction of citations from _ pnas _ to the specialized journals determines which journal the walker reads next , the pathways mix randomly . instead , with second - order markov dynamics taken into account , after following a citation in an article published in a more specialized journal to an article in _ pnas _",
    ", the walker tends to return to an article published in the same specialized journal or field .",
    "defined as the relative amount of flow that returns to the same physical node after two steps , the two - step return rate is twice as large when second - order markov dynamics is accounted for in citation flow and eight times as large in passenger flow . except for the taxi data ( taxis take us to destinations away from where we were ) , we found that second - order markov dynamics reveal a dramatically higher return flow in all studied systems ( table  [ table : stats ] ) .    ]    to quantify the second - order markov constraints on flow , we measured the entropy rate of a random walker on a network with and without memory @xcite .",
    "the entropy rate measures the conditional entropy , the uncertainty of the next step of the flow given the current state , weighted by the stationary distribution . in a first - order markov process , the entropy rate is the conditional entropy at each physical node weighted by the stationary distribution : @xmath30 where @xmath31 is the stationary solution of the random process . in a second - order markov process",
    ", the entropy rate is the conditional entropy at each memory node weighted by the stationary distribution : @xmath32 the more effect memory has , the more the conditional entropy will decrease in the second - order markov model . for the analysed networks , the entropy rates decrease by one to two bits when second - order markov dynamics are taken into account ( see table  [ table : stats ] ) . to put this decrease in perspective ,",
    "we can compare with an unweighted network , in which the typical number of neighbours halves for each bit the entropy rate decreases .",
    "that is , were the links unweighted , the observed decrease in entropy rates would correspond to overestimating the effective number of neighbours by 200%400% .",
    "the nodes with the strongest memory effect have high entropy with first - order and low entropy with second - order markov dynamics . for many nodes , memory",
    "greatly reduces the effective connectivity and reveals the constraints on flow ( fig .",
    "[ markovtest ] ) .    ]",
    "second - order markov constraints on flow are statistically significant . to verify that our results are based on sufficient data , we performed bootstrap resampling of pathways for all summary statistics and surrogate data testing of the entropy rate to estimate the markov order @xcite ( see fig .",
    "[ markovtest ] , methods , and the supplementary information , sec .  2 ) .",
    "all summary statistics in table  [ table : stats ] and a majority of influential nodes in all networks except patients and emails show a significant second - order markov effect that can not be explained by noise . while we focus on second - order markov dynamics in this paper , it is interesting to reflect on potential effects of higher - order markov models .",
    "for example , a second - order markov model captures real dynamics with one - step memory , including the two - step return rate , a third - order markov model captures two - step memory , including the three - step return rate , and so on . in principle",
    ", we could go to any order @xmath9 for higher accuracy . in practice , however , higher - order markov models are more complex and demand many long pathways to statistically separate real effects of memory from insufficient data @xcite . for the air - traffic data",
    ", we have enough long pathways to measure the entropy rate of a higher - order markov model .",
    "when we estimated the average amount of information necessary to determine the next destination of passengers at airports , we measured a 0.3 bit decrease from second to third order compared with 1.1 bits from first to second order ( see the supplementary information , sec .  2 and supplementary fig .",
    "while both results are statistically significant according to a surrogate data test , this small difference suggests that a second - order markov model captures most of the salient features set by the constraints on flow in air - traffic , namely , that passengers tend to return to the city from which they came .",
    "we now turn to the consequences of ignoring higher - order memory when analysing network flows in social and biological systems . to study the consequences , we modified and generalized three commonly used network techniques to capture the effects of memory in a second - order markov model : the map equation for community detection , pagerank for ranking , and two compartmental models for spreading .",
    "we begin with community detection , since simplifying and highlighting important structures of the dynamics allow us to better understand and explain the effects of second - order markov dynamics on ranking and spreading dynamics .",
    "+ * memory affects community detection .",
    "* we used the map equation framework to identify overlapping modules with long flow persistence times @xcite in networks with and without memory ( see methods and the supplementary information , sec .",
    "this information - theoretic method measures how efficient a modular description is in compressing the pathways of a random walker .",
    "the more structural information that can be exploited , the better the compression @xcite .",
    "we measured how well modules identified with first- and second - order markov dynamics can compress the more detailed model of the actual pathways ( see methods ) .",
    "table  [ table : stats ] shows that second - order markov dynamics allow for better compression , because random dynamics on networks obscure essential structural information .",
    "we quantified this structural information in terms of module size and level of module overlap .",
    "measured as the average visit frequency of a random walker in each module , and weighted by the same visit frequency to reduce the effect of small modules , we report the effective module size for all networks in table  [ table : stats ] . community detection of passenger traffic modelled as first - order markov dynamics only identifies major geographic regions , such as the west , the south , the mid - west , and the east .",
    "second - order markov dynamics reveal much more detailed travel patterns and the typical module size is more than five times smaller .",
    "analysing the hospital data , we found that patients are sent back to the previously visited ward more than half of the time , or more than three times as often as asserted by a standard network approach . as a result ,",
    "the typical module within which patients move is significantly smaller when second - order markov effects are taken into account .",
    "memory also impacts information spreading through email communication .",
    "we found that the two - step return rate was four times higher with second - order markov dynamics , thus revealing an organization with halved module sizes .",
    "we used the map equation framework because it was straightforward to generalize its mathematics to second - order markov dynamics , but the results are , in principle , universal for any method operating on the dynamics on a network @xcite .",
    "the universality is manifested in the direct effect memory in network flows has on the spectral gap @xcite .",
    "if memory favours spread across a system , the spectral gap increases , and , the other way around , if memory confines flow , the spectral gap decreases .",
    "overall , in the systems analysed here , second - order markov dynamics reveal a higher return flow that confines flow in smaller and more informative modules .",
    "memory affects the level of module overlap . in air traffic between us",
    "cities modelled with first - order markov dynamics , both las vegas and atlanta are assigned to a single major module , as shown in fig .",
    "[ memoryairclustering]a , but second - order markov dynamics reveal their different flow patterns .",
    "atlanta , with many transferring passengers and a relatively low two - step return rate ( 15% with second - order and 1.8% with first - order markov dynamics ) , is assigned to only one major module shown in red in fig .",
    "[ memoryairclustering]b .",
    "in contrast , las vegas , with traffic dominated by returning tourists ( 67% two - step return rate with second - order and 3.7% with first - order markov dynamics ) , is assigned to eight major modules , as shown in fig .",
    "[ memoryairclustering]b ( see methods ) .",
    "similarly , supplementary table  3 shows that second - order markov dynamics can reveal multidisciplinary journals in the scholarly literature .",
    "for example , an ecologist reading an article published in _ pnas",
    "_ will most likely next read an article published in an ecological journal , as shown in fig .",
    "[ socialflow]d and confirmed by the increased two - step and three - step return rates .",
    "this memory effect changes the perceived organization of the scholarly literature . with first - order markov dynamics ,",
    "_ pnas _ is assigned to a single biological field . with second - order markov dynamics , however , _",
    "pnas _ is assigned to five fields , including cell biology , ecology , and mathematics .",
    "likewise , the multidisciplinary journal _ science _ is assigned to ten fields with second - order compared to one field with first - order markov dynamics .",
    "contrarily , field - specific journals , such as ecology or plant cell , are clustered in single fields both with first- and second - order markov dynamics .",
    "measured as the average number of module assignments per physical node , we report the module assignments for all networks in table  [ table : stats ] . compared to first - order markov analysis in the systems analysed here , community detection with second - order markov dynamics reveals system organizations with more and smaller modules that overlap to a greater extent .",
    "the memory effects on community detection have interesting network - theoretical implications .",
    "community - detection methods typically identify modules with stronger internal than external connections @xcite or with relatively long flow persistence times @xcite .",
    "a problem with these methods is that they tend to assign each node to a very limited number of modules , in contrast to the observation that real modules often show pervasive overlap @xcite . rather than being a shortcoming of the algorithms ,",
    "our results show that this problem can be a result of distorted modular dynamics in standard networks that prevent the methods from capturing the underlying dynamics and uncovering the actual modules , as with the air traffic example in fig .",
    "[ memoryairclustering ] .",
    "interestingly , some heuristic algorithms for finding highly overlapping modules in standard networks can be seen as trying to account for second - order markov dynamics ( see the supplementary information , sec .",
    "the clique percolation @xcite and link clustering @xcite methods are known as topological methods that operate on the network structure without inducing flow on the links .",
    "if we take a flow perspective , the percolation of cliques can be seen as restricting flow to stay within connected cliques @xcite .",
    "also , the coupling of links by neighbour similarity can be seen as prolonging flow persistence times in highly connected modules @xcite .",
    "as we show in the methods section , they are reasonably good at identifying overlapping communities of second - order dynamics aggregated in undirected standard networks .",
    "nevertheless , using empirical data of flow pathways rather than clever assumptions has several advantages .",
    "aggregating links in standard networks inevitably destroys information that can not be fully recovered . as the benchmark test in methods shows , a method that operates directly on the flow pathways can achieve superior results .",
    "+     +    * memory affects ranking of nodes . *",
    "when going from rankings based on counting links to measuring the average visit frequency of a random walker on a standard network , i.e. , calculating the pagerank @xcite , the importance of neighbours becomes evident .",
    "similarly , when going to pagerank on a network with second - order memory , the amount of flow received from neighbours also depends on the flow s origin @xcite .",
    "we define a generalized second - order pagerank as the stationary solution of ( [ general1 ] ) @xmath33 solving ( [ general1 ] ) requires finding the dominant eigenvector of the @xmath34 transition matrix @xmath35 , where @xmath36 is the number of memory nodes .",
    "note that this matrix is asymmetric even if the original network is undirected , as a transition @xmath4 does not exist in the opposite direction @xmath37 , even if each link is bi - directional .",
    "after finding @xmath38 , the centrality of physical nodes in the original network is given simply by @xmath39 where the second equality holds because of conservation of probability ( see methods for details on ergodicity ) .    in order to illustrate the effect of second - order markov dynamics on ranking and on pagerank in particular , we focus on the journal citation network ( see the supplementary information , sec .  4 for analytical results ) .",
    "this example has practical applications because pagerank is a popular measure for ranking the scientific importance of journals @xcite . in the citation network",
    ", we observe that ten percent of the flow is reallocated when moving from a first - order to a second - order markov model ( see table  [ table : stats ] ) .",
    "some journals benefit from this reallocation and some do not .",
    "the interesting question is : which ones gain and why ?",
    "figure  [ flowcomparison]a shows why some journals increase their ranking from a first- to a second - order markov model . for example , _ ecology _ gains in total flow , which can primarily be explained by the amount of flow coming from high - quality journals ( green ) , the amount of internal flow coming from journals without crossing community boundaries ( dark blue ) , and the amount of flow returning after two steps ( dark red ) .",
    "we consider high quality flow to be flow from the top ten journals .",
    "flow from these journals comprises 1/3 of all flow in the system . for _ ecology",
    "_ , there is an increase in return flow and internal flow when moving from a first- to a second - order markov model , as well as a slight increase in flow from the top ten journals .",
    "in contrast , the large multidisciplinary journals receive less flow from other top journals . in a first - order markov model , they _ leak _",
    "flow between communities and boost each other .",
    "for example , _ science _ in a first - order markov model receives flow from and then redistributes flow to journals in multiple fields , even if no readers would cross those field boundaries .",
    "in contrast , _ science _ in a second - order markov model mainly receives flow from and redistributes flow to journals within the same fields . because a significant fraction of the flow that leaks between fields in a first - order markov model reaches multidisciplinary journals , they receive less flow in a second- relative to a first - order markov model . as fig .",
    "[ flowcomparison]b illustrates , journals that increase from a first- to a second - order markov model almost always see an increase in the flow from their primary community ( internal flow ) . in general , journals that do not depend on leaking flow between modules gain flow , and journals that do , including multidisciplinary journals ,",
    "lose flow , when two - step memory is taken into account .",
    "we now turn to discussing the advantages of using a second - order markov model for ranking journals .",
    "since we analyse rankings designed to capture dynamics , the issue with leaking flow of a first - order markov model directly provides a reason for preferring a second - order markov model .",
    "however , leaking flow is also indirectly associated with another important reason for preferring a second - order markov model .",
    "all rankings are subject to gaming , and a good ranking ought to be difficult to manipulate .",
    "for example , the journal impact factor @xcite , which simply counts the number of citations a journal receives in a given period of time , and corresponds to a zero - order markov model , can easily be manipulated by editorial policies that encourage self - citations @xcite .    a first - order markov model ,",
    "in particular one that ignores self - citations @xcite , is more difficult to exploit , because the value of a citation depends on the ranking of the citing journal . since important journals",
    "need to be cited by important journals , insignificant journals can not directly boost their own ranking .",
    "however , leaking flow is a weak point of this first - order ranking .",
    "for example , fig .",
    "[ socialflow]c illustrates that the first - order citation flows mix and leak from the ecology journals to the molecular biology journals through multidisciplinary _ pnas_. in this way , citations from ecology journals to multidisciplinary journals will indirectly boost molecular biology journals . for improving the ranking of the citing journal",
    ", leaking flow therefore creates a potential incentive to reduce the number of citations to multidisciplinary journals .",
    "this citation bias works against the principle that citations should go to the best work , and can have have negative influence on the quality of the ranking .",
    "the problem caused by leaking flow is minor for a second - order ranking , since citation flows to multidisciplinary journals tend to return and stay within the citing field .",
    "this effect not only explains why multidisciplinary journals lose and field specific journals gain when going from a first- to a second - order model as shown in fig .",
    "[ flowcomparison]b , it also reduces the influence on ranking caused by strategically excluding citations to multidisciplinary journals .",
    "for example , while the ranking of _ ecology _ improves by removing citations to _ science _ and _ pnas _ both with a first- and a second - order model , the effect is three times smaller with the second - order model . that is , a second - order markov model for ranking journals is more robust to manipulation . +",
    "* memory and spreading processes . *",
    "previous work has considered temporal and memory effects on spreading by modelling time - respecting paths in temporal networks of contacts @xcite and bidirectional paths in mobility networks of commuters @xcite .",
    "our objective is to quantify the full effect of second - order markov dynamics in general mobility patterns .",
    "therefore , here we model spreading by considering unrestricted second - order markov processes obtained from empirical pathways .",
    "we considered two classical models for spreading processes @xcite : a meta - population model that we implemented for the cities and is related to disease spreading , and a simpler model for spreading of ideas or rumours that we studied on the email dataset .",
    "both models are stochastic compartmental models . in the meta - population model ,",
    "we use sir dynamics , and in the simpler model , we use si dynamics .",
    "s , i , and r refer to different categories of individuals : susceptible individuals ( s ) are healthy individuals who have not been touched by the infection ; infected individuals ( i ) have been reached by the epidemic and in turn can transmit the infection to other individuals ; and recovered individuals ( r ) are those who reach immunization after being infected and can not spread the disease anymore .    in the meta - population model",
    ", we observe that using a second - order markov process has a negligible effect on the size of the epidemic , also known as the attack rate , and that it only slightly tends to slow down the spreading process .",
    "in contrast , in the simpler model , we observe that second - order markov dynamics significantly slow down the spreading process .",
    "we conclude that we only observe significant memory effects on the spreading dynamics when the path dependence is preserved at transmission . for the cities dataset ,",
    "the effect of second - order markov dynamics is negligible both because memory is lost at transmission between random individuals in cities , and also because travellers do not return at sufficiently high rate compared to pure commuting traffic @xcite to limit the number of disease introductions in cities @xcite .",
    "below we provide a more detailed discussion . + modelling spreading with sir dynamics and meta - populations for the cities data set .",
    "the model works in two steps , like the reaction - diffusion model proposed in ref .",
    "-  @xcite . during the reaction step , each infected",
    "individual can recover with probability @xmath40 and each susceptible individual can get infected by any infected individual in the same physical node .",
    "effectively , the infection is transmitted regardless of where individuals were one step before and , therefore , describes full mixing at the physical node level .",
    "let us define the total number of individuals in physical node @xmath0 , @xmath41 , and the total number of infected individuals in node @xmath0 , @xmath42 .",
    "we estimated the number of individuals in each city from the number of tickets in our dataset that end in the cities and considered a total population of 300 million , which is a rough estimate of the total population of the us . assuming that the transmission rate is @xmath43 , where @xmath44 is a parameter that accounts for the virulence of the disease , the probability of each susceptible individual becoming infected is @xmath45 .",
    "the transmission rate is the virulence factor divided by the total population of node @xmath0 , because we assume that each individual can get in touch with a fixed number of other individuals @xcite .    after the reaction step ,",
    "we carry out the diffusion of people in the city network with or without memory of their previous step .",
    "each individual can move to neighbouring cities with probability @xmath46 if she is ready to start a new trip in a self - memory node , indicating that she was in the same physical node in the previous step , and with probability @xmath47 if she is travelling and not in a self - memory node , indicating that she was not in the same physical node in the previous step .",
    "we use two different probabilities because the fraction of people who start a new trip from a self - memory node ( from home ) is much smaller than those who continue the trip after it started .",
    "we consider @xmath48 days@xmath49 , which is of the order of magnitude of the number of new itineraries per day divided by the total population ( we estimate @xmath50 itineraries per person per day , from our data ) .",
    "the length of stay @xmath51 can be extremely short if a city is visited just to take a connecting flight .",
    "although the length of stay is heterogeneously distributed @xcite , we simply considered an average length of stay of 2 days .",
    "that is , once a trip started , each individual has a 50% chance of spending another day in the city she is visiting or of moving to the next city . from most memory nodes , it is possible to reach a self - memory node and end the trip , such that the probability of leaving again is @xmath46 .        after starting a trip ,",
    "movements can be carried out with a first- or second - order markov process .",
    "starting from anchorage and los angeles , fig .",
    "[ spreadingfig]a shows the difference in the evolution of the spreading process .",
    "we used @xmath52 days , and two different values for the basic reproduction number @xmath53 @xmath54 and @xmath55 , which is the average number of new infections caused by each infected individual before recovering .",
    "the total fraction of infected people at the end of the epidemic is barely affected ( the difference is smaller than @xmath56 ) , and there is only a small delay in the spreading process . in order to estimate this delay , we measured the peak time , i.e. , the day in which the number of infected individuals is the highest .",
    "we averaged the peak times across different runs , with the 100 infected individuals in a particular city selected proportional to its population . for @xmath57 , we estimated the peak time with first - order memory dynamics to @xmath58 and with second - order memory dynamics to @xmath59 . for @xmath60 , we estimated the peak time first - order memory dynamics to @xmath61 and with second - order memory dynamics to @xmath62 . in both cases",
    ", the difference is @xmath63 .    to better understand these results , we repeated the analysis after first removing all but short returning itineraries , such as new york  chicago  new york . in this way",
    ", we can compare with the work on commuting traffic that has reported a slow down in the spreading process @xcite .",
    "for these dynamics , while we still do not observe an effect on the attack rate , fig .",
    "[ spreadingfig]b shows that we observe a significant effect on the peak time by modelling commuting traffic with a second - order markov process . with only commuting traffic",
    ", a second - order markov model captures that travellers spend only limited amount in other cities , thereby reducing the effective connectivity , and the number of disease introductions in cities . in the actual data ,",
    "however , the number of one - way tickets and connecting flights is sufficiently large to reduce the return rate and increase the time spent in other cities to a level at which the effect on spreading vanishes between first- and second - order dynamics @xcite .",
    "again , once random transmission occurs in a city , all memory effects are washed out in this meta - population model .",
    "therefore , the effect of a higher - order markov process is primarily influential in the beginning of the outbreak during the introduction phase when the sequence of contacts matters @xcite .",
    "overall , we conclude that the first- and second - order dynamics must be sufficiently different to show a clear difference on the spreading .",
    "to quantify precisely how different is an interesting question for further investigation . + modelling spreading with si dynamics without meta - populations for the emails data set . in the email data",
    "set , each physical node represents an individual with a memory node for each other individual from which an email was received .",
    "the target of a memory node s out - link represents the individual to which the email was forwarded to , and the weight the total number of such emails that has been forwarded .",
    "we model emails as `` hosts '' for rumours and each individual @xmath6 can become infected ( informed ) if she receives an `` infective '' email from an individual @xmath0 .",
    "when this happens , memory node @xmath3 associated with the source becomes infected , and the individual is now informed .",
    "the infective email can be forwarded to another person @xmath25 , according to the probability distribution @xmath64 . in this way , we model the spread of rumours as a simple contagion process without `` stiflers '' who no longer spread rumours @xcite .",
    "therefore , we focus on the early stages of a spreading process . to study the robustness of the effects of this second - order markov process , we also allow information to be spread independently of the source at different level of mixing between the first- and second - order markov model .",
    "see methods for details about the model .    for this model , we measured the speed of the spreading process . figure [ spreadingfig]c shows the average fraction of individuals that has heard about the rumour as a function of time , starting from a single infected memory node at time @xmath65 .",
    "the initial nodes were randomly selected among those belonging to the largest strongly connected component .",
    "we scaled the time by multiplying by the rumour spreading rate to make results independent of this parameter .",
    "overall , the spreading is much slower when emails are modelled by a markov model of second order , since this model can capture that most emails are forwarded within strongly confined modules of individuals , which also prevent them from reaching highly connected and efficient spreaders .",
    "moreover , the main difference compared with the meta - population model is that an individual informed about a rumour can participate in multiple email conversations simultaneously without an interest in informing everybody about the rumour .",
    "that is , where information spreads often depends on from where it is coming .",
    "we have shown that a second - order markov model is required to capture essential dynamical processes in a variety of integrated systems , with important consequences for community detection , ranking , and information spreading .",
    "recent work has indicated that a first - order markov model may fail to adequately predict real dynamics @xcite .",
    "that is , real dynamics often have at least one - step memory , which conventional network analysis can not capture . to bridge this gap",
    ", we generalized three commonly used methods of community detection , ranking , and spreading , to operate on a second - order markov model of flow .",
    "we used several real - world and synthetic examples to show that these methods reveal system organizations that better correspond to actual structures , including increased return flow that confines flow in smaller and more overlapping modules .",
    "previously , researchers have tried to reveal such structures with heuristic algorithms , but our approach uses more data rather than extra assumptions , and benchmark and bootstrap analyses show that these results are real and based on sufficient data .",
    "consequently , we have demonstrated that using a second - order markov model is often essential for fundamental methods in network science .",
    "the combination of our examples indicates that memory is critical for analysing network flows in general , and we expect researchers throughout the sciences to find the methods useful for analysing increasingly available pathway data .",
    "therefore , we have made data and code available online at http://www.icelab.org.umu.se/memorynetworks[www.icelab.org.umu.se/memorynetworks ] , and integrated the community - detection algorithm in the infomap sofware package available at http://www.mapequation.org[www.mapequation.org ] .",
    "our methods can be directly generalized to higher - order markov models as well .",
    "even if our statistical analysis of higher - order markov models suggests that we have captured most of the salient features in the analysed systems , other systems where longer pathway data are relevant and available may have discernible higher - order features .",
    "we expect such features to be less salient , and other means of balancing model complexity and utility may be more appropriate .",
    "we thank f.  liljeros for extracting the patient data and jstor for providing the journal citation data .",
    "we also thank d.  edler , a.  eklf , d.  kolp , c.  poletto , and d.  vilhena for many discussions .",
    "m.r .  was supported by the swedish research council grant 2012 - 3729 .",
    "r.l .  was supported by the belgian network dysco , funded by the iap programme initiated by belspo .",
    "first we provide a short description of how we assembled long real pathways into networks with and without memory .",
    "then we briefly describe how we performed and evaluated the community detection analysis and provide details for how we achieved ergodicity in the ranking analysis . in the supplementary information ,",
    "we detail how we assembled all data , performed the statistical analysis , and developed the community - detection algorithm .",
    "we also provide an illustration of how higher - order memory constraints on flow can be modelled without access to full pathways .",
    "in addition to its explanatory power , the memory model also summarizes the dynamics of a system with a limited number of parameters and makes it easy to compare the dynamics between different systems . + * assembling pathways into networks with and without memory .",
    "* figure [ fromdatatonetworks ] illustrates how we generated the networks that describe the dynamics in figs .",
    "[ socialflow]a and b : from pathways in a , via weighted links in b and c , to directed weighted networks in d and e. first we collect long pathways , in this example , of real itineraries from the research and innovative technology administration ( rita ) ( fig .",
    "[ fromdatatonetworks]a ) .",
    "the data contain each stop on 19,415,369 itineraries with average pathlength 3.3 between 464 airports in the us .",
    "we used data from the first three quarters of 2011 , which contain a sample of 10% of all itineraries during the time period . in the cities data set , we aggregated all airports within a radius of 50 kilometres and called destinations by corresponding city names .",
    "each pathway has a weight equal to the number of passengers who have purchased exactly that itinerary . to generate weighted directed links for the standard network , we counted bigrams ( city pairs ) in the itineraries ( fig .",
    "[ fromdatatonetworks]b ) . to generate weighted directed links for the memory network , we counted trigrams ( city triplets ) in the itineraries ( fig .",
    "[ fromdatatonetworks]c ) . in the airport data",
    "set , we focused on transfer traffic and disregarded one - way trips with a single flight ( 21% of all itineraries ) . in the cities",
    "data set , however , we focused on real passenger traffic for accurate modelling of disease spread and included also short pathways",
    ". therefore , in the cities data set , the typical memory averaged over all travellers is somewhat less than second order .",
    "then we assembled the links into networks .",
    "all links with the same start node in the bigrams represent out - links of the start node in the standard network ( fig .",
    "[ fromdatatonetworks]d ) .",
    "a physical node in the memory network , which corresponds to a regular node in a standard network , has one memory node for each in - link ( fig .",
    "[ fromdatatonetworks]e ) .",
    "a memory node represents a pair of nodes in the trigrams . for example , the blue memory node in fig .",
    "[ fromdatatonetworks]e represents passengers who come to chicago from new york .",
    "all links with the same start memory node in the trigrams represent out - links of the start memory node in the memory network . in this way",
    ", the memory network can maintain dependency between where passengers come from and where they go next .",
    "figures [ socialflow]a and b show the dramatic effect of maintaining second - order memory : passenger travel is much more constrained than what the standard network can capture .",
    "see the supplementary information , sec .  1 , for details of how we obtained pathways for all analysed networks and represented them as networks with and without memory .",
    "+    * a * and * b*.[fromdatatonetworks ] ]    * significance analysis with resampling . *",
    "we performed two different statistical tests to validate our results , bootstrap resampling of all summary statistics in table 1 and surrogate data testing of the markov order in fig .",
    "[ markovtest ] and supplementary fig .",
    "bootstraping allows us to assign confidence intervals to the summary statistics based on resampling of the observed dataset .",
    "accordingly , only trigrams observed in the data will occur , but possibly with different frequencies .",
    "contrarily , surrogate data testing allows us to also generate unobserved trigrams and is therefore suitable for hypothesis testing of the markov order against a null model . in turn",
    ", we describe the two methods below .    for the bootstrapping",
    ", we generated 100 bootstrap replicas for each dataset by resampling the weights of the pathways from a multinomial distribution ( for patients , taxis , and emails , we only had access to trigrams and resampled their weights directly ) .",
    "this scheme corresponds to resampling of all pathways with replacement .",
    "that is , we assume that pathways are generated independently . for the air traffic depicted in fig .",
    "[ fromdatatonetworks]a , for example , we assume that tickets are bought independently .",
    "this assumption of independence is , of course , only approximately true , but since flight tickets rarely are bought for more than a few passengers at the same time , the approximation will work well in practice .",
    "after resampling the pathways , we generated the networks as described in figs .",
    "[ fromdatatonetworks]b - e and performed any analysis as on the raw network .",
    "for each set of summary statistics , we calculated the bootstrap confidence interval by ordering the 100 bootstrap estimates and eliminated the ten smallest and ten largest estimates .",
    "in general , we report the lower and upper limits of this interval .    for the surrogate data testing ,",
    "our null hypothesis was that the flow is first - order markov , and we used the conditional entropy at each node as a test statistic .",
    "assuming that the null hypothesis is true , we estimated the probability that the conditional entropy in a second - order markov process is at least as low as the observed value .",
    "we estimated this probability , the p - value , with surrogate resampling and rejected the null hypothesis if the p - value was lower than 0.10 . for each node and for each resampling , we removed the second - order markov effect by performing random pairings between all nodes visited before and after the node given by all trigrams centred at the node . with this resampling scheme , we can single out nodes with a significant second - order markov effect . see the supplementary information , sec .  2 , for further details and for surrogate testing of higher markov orders .",
    "+ * community detection with second - order markov dynamics .",
    "* we have chosen to work with the flow - based map equation framework @xcite . in principle , we could have used alternative flow - based methods @xcite , but the map equation framework allows us to compare the community structure with first- and second - order markov dynamics by only modifying the dynamics and not the mechanics of the method .",
    "since we are interested in overlapping modules , we build our new method on a generalization of the map equation to overlapping modules @xcite .",
    "the map equation framework is an information - theoretic approach that takes advantage of the duality between compressing data and finding regularities in the data .",
    "given module assignments of all nodes in the network , the map equation measures the description length of a random walker that moves from node to node by following the links between the nodes .",
    "therefore , finding the optimal partition or cover of the network corresponds to testing different node assignments and picking the one that minimizes the description length @xcite .",
    "the map equation framework easily generalizes to higher - order markov dynamics , because memory networks only change the dynamics of the random walker as described above .",
    "therefore , instead of applying the search algorithm on the standard network , we apply it on the memory network and assign memory nodes to modules , with one important difference : since we are interested in movements with or without memory between physical nodes , the description of the random walker must reflect this process .",
    "therefore , when two or more memory nodes of the same physical node are assigned to the same module , the description length must capture the fact that the memory nodes share the same codeword .",
    "we achieve this description by summing the visit frequencies of all memory nodes of each physical node in a module and then use this visit frequency to derive the optimal codeword length .",
    "we ensure that the community detection results only depend on memory effects by representing first - order markov dynamics in a memory network , with each memory node having the out - links of its corresponding physical node in the standard network . in this way",
    ", the compression algorithm remains the same and only the dynamics change .    ]",
    "figure [ memorynetworkclustering ] illustrates the effect of second - order markov dynamics on community detection .",
    "the pathways represent air travel between san francisco , las vegas , and new york , and correspond to a subset of the itineraries in the city data . with first - order markov dynamics , there are no regularities to take advantage of in a modular description , and clustering all the cities together gives a shorter description length . with second - order markov dynamics",
    ", however , the strong out - and - back travel pattern to and from las vegas makes it more efficient to describe the dynamics as two overlapping modules , with las vegas assigned to both modules .",
    "that is , the first - order dynamics obscure the actual travel pattern and prevent a modular description from compressing the data . see the supplementary information , sec .",
    "3 , for further details .    to validate our method ,",
    "we have performed benchmark tests on synthetic pathways .",
    "we first describe how we build artificial pathways such that flow tends to stay inside predefined communities when described by a second - order markov model .",
    "then we show that infomap for memory networks , the community - detection algorithm we have developed , can recover the planted structure . however , when the artificial pathways are described by a first - order markov model in a standard network , much of the structure is washed out .",
    "we show that neither infomap nor other commonly used methods for overlapping communities can accurately recover the planted structure .",
    "we used the following algorithm to generate trigrams within and between communities :    as planted structure , we consider 128 nodes and the community size fixed to 32 nodes , like in the girvan - newman benchmark @xcite .",
    "moreover , we tune the number of communities @xmath66 . if @xmath67 , each node is assigned to a single community .",
    "if @xmath68 , multiple memberships are assigned to nodes in random order , with the constraint that no node can be assigned to the same community twice .    as synthetic pathways , we draw @xmath69 internal trigrams and @xmath70 external trigrams .",
    "internal trigrams are paths of three nodes @xmath71 such that if nodes @xmath0 and @xmath6 belong to community @xmath72 , node @xmath25 also belongs to @xmath72 . for external trigrams ,",
    "at least two of the three nodes are not assigned to the same community .",
    "below we describe a simple sampling algorithm . in these tests , we set @xmath73 , and @xmath74 and @xmath75 , respectively .",
    "the number of trigrams is relatively high compared to the network size , because to highlight the effect of memory the number of trigrams must be of the same order of magnitude as the number of memory nodes ( @xmath76 ) .",
    "internal trigrams confine flow inside communities .",
    "therefore , if the flow goes from node @xmath0 to @xmath6 in community @xmath72 , the next node @xmath25 must also belong to community @xmath72 .",
    "this constraint requires that memory nodes @xmath3 and @xmath27 are uniquely assigned to community @xmath72 , although physical nodes @xmath0 , @xmath6 and @xmath25 can have multiple memberships .",
    "we assign memberships to memory nodes and draw internal trigrams in the following way :    * we uniformly select a community @xmath72 * we uniformly sample nodes @xmath0 , @xmath6 and @xmath25 assigned to community @xmath72 . since nodes can be drawn from multiple clusters , we check that neither memory node @xmath3 nor memory node @xmath27 has been assigned to a community different from @xmath72 yet . if at least one has been assigned to a different cluster , we sample new nodes . if not , we assign the memory nodes to @xmath72 and record the trigram @xmath71 .    external trigrams guide flow between communities",
    "therefore , we draw random trigrams @xmath71 until at least two of the three nodes have no memberships in common .",
    "to measure how well infomap for memory networks recovers the planted structure , we applied the normalized mutual information ( nmi ) described in ref .",
    "-  @xcite to the community assignments of the memory nodes ( we used @xmath77 function for the normalization instead of the average ) .",
    "some memory nodes were only sampled in external trigrams and not assigned a membership by the algorithm above .",
    "since these nodes are not present in the planted structure , we also discard them in the output of infomap .",
    "figure  [ fig : m2bench ] shows the performance of infomap for memory networks with first- and second order markov dynamics , as well as the performance of standard ( undirected ) infomap @xcite with all memory nodes treated as physical nodes .",
    "infomap for memory networks recovers the planted partitions almost perfectly up to at least eight community assignments per node with 5,000 external trigrams and up to six community assignments per node with 20,000 external trigrams .",
    "however , with first - order dynamics , infomap for memory networks is only able to recover the correct partition when no overlap is present .",
    "quite the opposite , standard infomap tends to find many more modules because the algorithm considers each memory node to be `` independent , '' and there is no intrinsic compression gain from clustering memory nodes of the same physical node together .     and @xmath78 percentiles .",
    "]    to demonstrate that second - order markov information is necessary , we aggregated the trigrams into standard undirected networks and applied several commonly used algorithms for overlapping communities .",
    "since the nodes can be assigned to multiple communities , we used the definition of nmi proposed in ref .   - ",
    "@xcite for all methods except for the link clustering method .",
    "this algorithm returns a partition of non - overlapping links , which we treated as memory nodes and computed the nmi as described for infomap above .",
    "since the link clustering method only accepts unweighted graphs as input , we used a threshold of @xmath79 for link weights and @xmath80 for selecting a partition from the dendrogram , and found that results are not sensitive to these choices .",
    "further , the clique percolation method was unusably slow with all links included and we had to remove links with weights below a certain threshold .",
    "we used a threshold of @xmath81 for @xmath82 external trigrams and @xmath83 for @xmath75 external trigrams .",
    "we also had to provide the clique size ( @xmath84 ) .",
    "lclllclllclll external trigrams & & &    ' '' ''    & &    ' '' ''    & + module assignm . &",
    "& 1 & 2 & 3 & & 1 & 2 & 3 & & 1 & 2 & 3 + clique perc .",
    "@xcite & & @xmath85 & @xmath85 & @xmath85 & & @xmath85 & @xmath85 & @xmath86 & & @xmath85 & @xmath85 & @xmath86 + copra @xcite & & @xmath85 & @xmath87 & @xmath88 & & @xmath85 & @xmath88 & @xmath88 & & @xmath85 & @xmath88 & @xmath88 + link clust .",
    "@xcite & & @xmath85 & @xmath89 & @xmath90 & & @xmath85 & @xmath91 & @xmath92 & & @xmath85 & @xmath89 & @xmath93 + moses @xcite & & @xmath85 & @xmath94 & @xmath88 & & @xmath88 & @xmath88 & @xmath88 & & @xmath88 & @xmath88 & @xmath88 + oslom @xcite & & @xmath85 & @xmath95 & @xmath96 & & @xmath85 & @xmath97 & @xmath88 & & @xmath85 & @xmath98 & @xmath88 +    table  [ table : benchmark ] shows the results .",
    "the clique percolation method was the only algorithm that was able to recover the correct partition with external trigrams and multiple community assignments .",
    "however , regardless of the thresholds we tried , for more than @xmath55 community assignments per node we were not able to obtain any result after several days of running time .",
    "the reason why the algorithm is successful on this benchmark test , at least in theory , is that the number of trigrams is so high that the planted communities are cliques of 32 nodes . of all tested algorithms ,",
    "the link clustering method was the only one that obtained non - trivial solutions for three or more community assignments per node . in the next section ,",
    "we illustrate how clique percolation and link clustering can identify overlapping communities of second - order dynamics aggregated in standard networks . +",
    "* ergodic second - order markov dynamics . *",
    "the solution of ( [ lolo1 ] ) is not well - defined when the process is not ergodic , which happens when the memory network is not strongly connected , or when it contains closed cycles @xcite . to circumvent this limitation and to ensure the ergodicity of the stochastic process",
    ", we perform two modifications . first , if a memory node is a dangling node and has no out - links , we use m1 data and assign all out - links from the physical node to the dangling node . in this way , link weights and m1 data become our fallbacks when there is not enough m2 data for an ergodic process on the memory network .",
    "second , it is standard to allow walkers to randomly teleport across the system , as we mentioned before .",
    "walkers either follow links with probability @xmath99 or teleport with probability @xmath100 @xcite . therefore , the pagerank of a memory node is given by @xmath101 it is important to note that walkers do not teleport uniformly to memory nodes , but at a rate proportional to the weight @xmath102 of the corresponding link .",
    "equivalently , walkers thus teleport to physical nodes at a rate proportional to their in - strength .",
    "this choice is motivated by recent research showing that so - called _ link teleportation _ improves robustness of ranking with respect to standard teleportation @xcite . a random walk with teleportation is ergodic for any @xmath103 , whatever the topology of the underlying network , and its stationary solution can be found by using standard iteration methods .",
    "the link - teleportation scheme works well for ranking nodes , but further improvements can be made for the map equation , which also explicitly operates on the flow between nodes . for community - detection results that are more robust to the particular choice of teleportation parameter , we do not use teleportation steps between nodes and only steps along links to derive the optimal codeword lengths .",
    "we achieve the same pagerank of memory nodes in ( [ ergodicsolution ] ) by first calculating the stationary distribution with recorded teleportation to physical nodes at a rate proportional to their _ out - strength _",
    ", followed by a subsequent recorded step without teleportation . by only encoding the last step in this smart teleportation scheme @xcite ,",
    "the community detection results are based on the same ergodic node visit rates as in ( [ ergodicsolution ] ) , but without the noise on links caused by random teleportation . + * si dynamics on networks with memory . * here we describe how we model spreading with si dynamics without meta - populations for the emails data set .",
    "we assume that each memory node @xmath3 forwards @xmath104 emails per time - step , where @xmath105 is a proportionality constant and @xmath106 is the out - strength of the memory node , i.e. , the sum of the weights of the links @xmath107 .",
    "a forwarded email from memory node @xmath3 goes to a memory node , say @xmath27 , with probability @xmath64 .",
    "if @xmath3 is informed and @xmath27 is not , we assume that an email from @xmath3 to @xmath27 informs @xmath27 with probability @xmath44 , the so - called rumour spreading rate .",
    "let @xmath108 denote the overall probability that an infected memory node @xmath3 transmits the rumour to an uninformed memory node @xmath27 . since the probability that the infection is _ not _ transmitted is the probability that each email leaving @xmath3 either is forwarded to a memory node other than @xmath27 or is forwarded to @xmath27 but ignored , we have : @xmath109 where we assume that @xmath44 is small and @xmath110 is simply the weight of link @xmath107 in the memory network . in this limit",
    "the only relevant parameter is thus @xmath111 . without loss of generality",
    ", we can set @xmath112 , in which case the dynamics of the spreading process are driven by @xmath113 this equation shows that this spreading process with second - order markov dynamics corresponds to traditional spreading models but performed on memory nodes .",
    "that is , the only differences are that emails are forwarded to the next destination depending on where they come from .",
    "since rumours not necessarily need to spread between individuals that participate in the same email conversations , we allow each informed individual to send emails according to a first - order markov model with probability @xmath114 at each time step . therefore , to study the effects of memory on this spreading process , we can simply tune @xmath114 .",
    "for example , the extreme case @xmath115 corresponds to a first - order markov model .",
    "10 url # 1`#1`urlprefix[2]#2 [ 2][]#2    & .",
    "_ _ * * , ( ) .    & .",
    "_ _ * * , ( ) .    , , & .",
    "_ _ * * , ( ) .    , , , & .",
    "_ _ * * , ( ) .",
    "_ _ * * , ( ) .    & .",
    "_ _ * * , ( ) .    , & .",
    "_ _ * * , ( ) .",
    "_ et  al . _ . _",
    "_ * * , ( ) .    .",
    "_ _ * * , ( ) .",
    "* * , ( ) .    , & _ _ ( , ) .    & .",
    "_ _ * * , ( ) .    , , , &",
    "_ _ * * , ( ) .    , , , & .",
    "in _ _ , ( , ) .    , , & in _ _ , ( , ) .    & . _ _ * * , ( ) .    & . in _ _ , ( , ) .    , , & . _ _ ( ) .    & . _ _ * * , ( ) .    , , , & . _ _ * * , ( ) .    & . _ _ * * , ( ) .    , & . _ _ * * , ( ) .    , , , & . _ _ * * , ( ) .    , & . _ _ * * , ( ) .    , & . _ _ * * , ( ) .    , , & . _ _ * * , ( ) .    & . _ _ * * , ( ) .    , & . _ _ * * , ( ) .    , & . _ _ ( ) .    & . _ _ * * , ( ) .    , & . _ _ * * , ( ) .    & . _ _ * * , ( ) .    & . _ _ * * , ( ) .    , , & . _ _ * * , ( ) .    , & . _ _ * * , ( ) .    .",
    "_ _ * * , ( ) .",
    "_ _ * * , ( ) .    , , & .",
    "_ _ * * , ( ) .    &",
    "_ _ * * , ( ) .",
    "_ et  al . _ . _ _ ( ) .    , & . _",
    "_ ( ) .    .",
    "_ _ * * , ( ) .    , , &",
    "_ _ * * , ( ) .    , & .",
    "_ _ * * , ( ) .    & .",
    "_ _ * * , ( ) .    & .",
    "in _ _ , ( , ) .    , , & . _ _ * * , ( ) .    , , & . _ _ ( ) .    , & . _ _ * * , ( ) .    .",
    "_ _ * * , ( ) .",
    "_ _ * * , ( ) .    , & .",
    "_ _ * * , ( ) .    , & .",
    "_ _ * * ( ) .    , , & .",
    "_ _ * * , ( ) .    , , & .",
    "_ _ * * , ( ) .    , & .",
    "_ _ * * , ( ) .    & .",
    "_ _ * * , ( ) .    , , & .",
    "_ _ * * , ( ) .    , & .",
    "_ _ * * , ( ) .    .",
    "_ _ * * , ( ) .    & .",
    "in _ _ , ( , ) .    & .",
    "_ _ * * , ( ) .    & .",
    "_ _ * * , ( ) .",
    "here we describe how we estimate the transition probabilities from empirical data .",
    "we use empirical data that consist of large sets of multi - step pathways of varying length . to create memory networks that capture an nth - order markov process , we count all pathways of length @xmath116 in the empirical pathways of length @xmath116 or longer .",
    "take , as an example , the three pathways @xmath117    in a standard network with physical nodes @xmath0 , @xmath6 , @xmath25 , and @xmath118 , we extract the four directed links @xmath119 , @xmath120 , @xmath121 , and @xmath122 with weight 1 and the two directed links @xmath123 and @xmath124 with weight 2 , as shown in supplementary fig .  [ memnetschematic]a .",
    "these links are all pathways of length 1 that can be extracted from the three pathways in supplementary equation ( [ pathways ] ) .",
    "the weight @xmath125 of a link corresponds to the number of times the link occurs in the pathways . with @xmath126",
    "if there is no link from @xmath0 to @xmath6 , the transition probabilities take the form @xmath127    ) .",
    "( * b * ) standard network representation .",
    "( * c * ) memory network with memory nodes in black and self - memory nodes in brown .",
    "( * d * ) memory network representation . dashed links in * d * from the self - memory nodes represent the first step of each pathway in * a*. we only use self - memory nodes in the cities dataset ( see sec .  1 ) . for the other networks ,",
    "we only include the first step of each pathway in the weights of the teleportation scheme as described in the methods section of the main text .",
    "[ memnetschematic],title=\"fig : \" ] +    instead , in a memory network with memory nodes @xmath3 , @xmath27 , @xmath128 , @xmath129 , @xmath130 , and @xmath131 , we extract the five directed links @xmath107 , @xmath132 , @xmath133 , @xmath134 , and @xmath135 , all of weight 1 in this case , as shown in supplementary fig .  [ memnetschematic]d . these links are all pathways of length 2 that can be extracted from the three pathways in supplementary equation ( [ pathways ] ) . with @xmath136 to denote the weight of a link @xmath107 and @xmath137 if there is no link from @xmath3 to @xmath27 , the transition probabilities take the form @xmath138    this formalism can be extended to memory networks that capture even higher - order markov processes , but here we focus on describing memory networks that capture second - order markov processes . in this case , links between physical nodes in the standard network representation take the role of memory nodes in the memory network representation . therefore ,",
    "a memory network is a form of line graph , but we use the term memory network to highlight our purpose with this representation : to capture movements between physical nodes with transition rates that depend on the past . in network science , line graphs have recently been introduced for a different purpose , namely , to move the focus from nodes to links as a computational trick to detect overlapping modules in networks @xcite .",
    "supplementary figure  [ memnetschematic ] shows that the memory network contains more information than a line graph derived from the standard network would .",
    "memory node @xmath3 , for example , corresponds to the link @xmath119 in the standard network representation .",
    "however , this link is not connected with both link @xmath123 and link @xmath120 , as the standard network suggests , but only with link @xmath123 , as the memory network shows .    with very long empirical pathways that generate ergodic processes on the memory networks , we could directly use ( 7 ) in the main manuscript without any extra work .",
    "in practice , however , most pathways are between three and six steps long and boundary effects can influence the analysis .",
    "also , as with directed standard networks , a markov process on a memory network is rarely ergodic without introducing a small teleportation probability as described in the methods section of the main manuscript .",
    "since we are interested in second - order markov dynamics , it is convenient to store all pathway data as trigrams . from the pathways in supplementary equation ( [ pathways ] ) , we store the trigrams in the following way : +    ....      i i j 1    i j k 1    j k l 1    l l k 1     l k j 1    k j i 1    j j k 1    j k j 1 ....    the last number in each line gives the frequency of the corresponding trigram .",
    "it is straightforward to calculate the transition probability ( 6 ) in the main manuscript between memory nodes from the list of trigrams .",
    "for instance , @xmath139 , @xmath140 , etc .    to be able to initiate dynamics in physical nodes",
    ", we repeat the first physical node of pathways twice .",
    "we call the corresponding memory nodes self - memory nodes . they represent flow in a physical node that was in the same physical node in the previous step . for example",
    ", the first trigram of the pathway @xmath141 is ` i i j 1 ` with added self - memory node @xmath142 ( the three trigrams with self - memory nodes above correspond to the dashed links in supplementary fig .  [ memnetschematic]d ) . in this way",
    ", the second pair of nodes in each line forms the link between physical nodes in a standard network representation and it becomes straightforward to obtain m1 data . the procedure is to simply ignore the first node in the trigrams and , for each link between two physical nodes @xmath0 and @xmath6 , aggregate all weights to @xmath125 .",
    "we stress that we use the self - memory nodes only to obtain link weights and m1 data for teleportation steps and not for regular steps ( the city network is an exception ; see sec .  1 ) .",
    "when parsing the data , the first line of the trigram data reads literally : `` _ _ there is one link between self - memory node @xmath142 and memory node @xmath3__. '' the meaning is : `` _ _ one pathway starts in @xmath0 and continues to @xmath6 _ _ , '' and we increase the weight of memory node @xmath3 by 1 .",
    "the second line of the trigram data reads literally : `` _ _ there is one link between memory node @xmath3 and memory node @xmath27__. '' the meaning is : `` _ _ one pathway in @xmath6 came from @xmath0 and continues to @xmath25 _ _ , '' and we add a link from memory node @xmath3 to memory node @xmath27 and increase the weight of memory node @xmath27 by 1 .",
    "we compiled the airline pathways from the airline origin and destination survey ( db1b ) made public by the research and innovative technology administration ( rita ) .",
    "the data contain each stop on 19,415,369 itineraries between 464 airports in the us with average pathlength 3.3 ( 21% of length two , 53% of length three , 5% of length four , 19% of length five , 1.4% of length six , and 1.0% of length seven or longer ) .",
    "note that the origin is included in the path length , such that a path length of three corresponds to two flight legs .",
    "we used data from the first three quarters of 2011 .    in the city memory network , we aggregated all airports within a radius of 50 kilometres .",
    "since the airport data have clear starts and stops  a passenger is based in a city and most often returns to the same city at the end of the itinerary  we also include the home city itself in the analysis . in this way , we can better capture real passenger traffic and extend the analysis beyond transfer traffic .",
    "we thus represent the home city with the corresponding self - memory node in the memory network and , unlike in the other memory networks , include the self - memory nodes in the analysis .",
    "for example , we represent a pathway @xmath143 going from city @xmath0 to city @xmath25 with transfer in city @xmath6 and back with the trigrams +    ....      i i j 1    i j k 1    j k j 1    k j i 1     j i i 1 ....    and include the first and last trigrams in the analysis .",
    "in the airport memory network , we focused on transfer traffic and did not include self - memory nodes .",
    "for example , a pathway @xmath143 , representing an itinerary from airport @xmath0 to airport @xmath25 with transfer at airport @xmath6 and back , is represented by the trigrams +    ....      i i j 1    i j k 1    j k j 1    k j i 1   ....    with the first trigram ` i i j 1 ` included only for calculating the teleportation weight in the pagerank analysis .      the journal citation data were extracted from jstor ( www.jstor.org ) , a not - for - profit digital library that includes 2,227 journals and 8,227,537 citations among these journals . in order to capture memory , we extracted the underlying article - level citations .",
    "this included 1,787,351 unique articles that cite at least one other jstor article or received a citation from another jstor article .",
    "jstor does not represent the full universe of scholarly content .",
    "for example , the journal _ nature _ is not included in this subset .",
    "in addition , physics , engineering , and computer science are not well represented in this corpus of articles .",
    "however , it did offer several advantages .",
    "first , jstor made its data available for research .",
    "second , the jstor corpus has both article- and journal - level data , which were necessary for building memory networks .    for each article @xmath144 in jstor , we searched all articles @xmath145 cited by @xmath144 and all articles @xmath146 citing @xmath144 .",
    "if we found at least one cited and one citing article , then , for each cited article , we picked a random citing article and formed the trigram @xmath147 which we mapped to the trigram between the corresponding journals @xmath148 finally , we aggregated all journal trigrams into the weighted memory network . by sampling memory networks many times , we found that choosing a random citing article did not affect our ranking or community detection results @xcite ( see sec .  2 ) .",
    "the patient data derive from a database of inpatient care at hospitals in stockholm , sweden , during 2001 and 2002 @xcite .",
    "the full dataset consists of 295,108 individuals who entered at least one of 702 wards at hospitals or nursing homes in 52 different locations .",
    "our anonymised data were compiled by fredrik liljeros and are a sample of 365 days from the original data . since we are only interested in patients who entered three or more wards , the data contain records from fewer individuals than the original data and are limited to patient movements between 402 wards .",
    "we included the taxi data because we were interested in analysing a real - world system lacking strong return flow . with this data , we can contrast the dynamics in the other networks .",
    "the data are from gps receivers in smartphones of taxi drivers from the uber taxi company in the san francisco region @xcite .",
    "we further processed the data in the following way .",
    "first , because most of the taxi traffic is in the metropolitan area of san francisco , we limited our analysis to the rectangle limited by longitudes 122.456 122.388 west and latitudes 37.748 37.808 north . in that rectangle , we superimposed a hexagonal grid of 20 x 20 hexagons , depicted in supplementary fig .",
    "[ taxis_schematic ] .",
    "the distance between opposite sides in each hexagon of the grid is approximately 375 meters , or about the length of two city blocks .",
    "indeed , we observed some shorter trips in the dataset , but not many .",
    "for each of 25,000 taxi trajectories in the data set , we built chains of 2-d integer coordinates corresponding to the hexagon where the taxi is driving at a given moment .",
    "that is , geographical hexagons are the nodes of the network , and there is a link between two hexagons if they share an edge . finally , we took triplets of consecutive hexagons visited by a taxi and summarized them in trigrams , as described above . for calculating the weight of each trigram",
    ", we used the number of times that a taxi trajectory contained the trigram .",
    ", title=\"fig : \" ] +    to validate that our results are not affected by the particular choice of grid structure , we also derived memory networks from 10 x 10 and 40 x 40 hexagonal grids .",
    "the results were qualitatively the same , with small quantitative differences .",
    "the enron email dataset @xcite comprises emails between 146 users disclosed during the trial following the enron scandal .",
    "we aggregated all email addresses for each single user , and used a total of 116,525 messages between users as links . in order to establish succession between messages",
    ", we looked to common word - triplets present in the subject , overlap between the _ to _ and _ from _ fields , and message date - time .",
    "because we linked messages using their common word - triplets , many messages were linked to many other messages through their subject line headings .",
    "we removed the redundancy by leaving only one incoming link for each message , namely , the one with the latest possible time - stamp .",
    "finally , we broke the pathways into trigrams as described above .",
    "to verify that our results are based on sufficient data , we performed bootstrap resampling of pathways for all summary statistics reported in the main manuscript and below , and surrogate data testing of the entropy rate to estimate the markov order .      for each dataset , we generated 100 bootstrap replicas by resampling the pathways with replacement and then constructed the networks from the replicas .",
    "each dataset contains a large number of pathways distributed over a smaller number of unique pathways , such that each unique pathway has a weight given by the number of that unique pathway in the dataset .",
    "therefore , we generated a single bootstrap memory network by first resampling the weights of all unique pathways from a multinomial distribution and then breaking the long pathways into trigrams ( for patients , taxis , and emails , we only had access to trigrams and directly resampled their weights ) . for a given dataset",
    ", we used a multinomial distribution with as many categories as unique pathways in the dataset and with probabilities for the categories proportional to the weights of the unique pathways . from this multinomial distribution",
    ", we performed as many trials as the total number of pathways in the dataset and aggregated the outcome to resampled weights for all unique pathways .",
    "for the journal network , we constructed the bootstrap replicas differently , because the journal memory network is not constructed from pathways but from chaining article citations .",
    "the procedure described in data acquisition and processing above involves a random step , and we simply generate the bootstrap replicas by repeating this procedure . note that this procedure does not generate any variation in the standard network , but it is anyway the significance of the second - order markov results that we are interested in .",
    "for each set of summary statistics , we calculated the bootstrap confidence interval by ordering 100 bootstrap estimates and eliminated the ten smallest and ten largest estimates . in this way",
    ", the remaining estimates span the 90% bootstrap percentile confidence interval . in general , we report the lower and upper limits of this interval .",
    "if there are many trigrams with only a few observations in the data , a summary statistic of the raw data can lie outside of the bootstrap confidence interval .",
    "nevertheless , there can still be a memory effect . for a significant memory effect ,",
    "what really matters is non - overlapping confidence intervals for m1 and m2 dynamics .      for the memory effects of individual nodes reported in fig .  2 of the main manuscript , we also performed hypothesis testing to verify that our results are based on sufficient data .",
    "our null hypothesis was that the flow is a first - order markov process , and we used the conditional entropy at each node as a test statistic . assuming that the null hypothesis is true , we estimated the probability that the conditional entropy of the second - order markov process is at least as low as the observed value .",
    "we estimated this probability , the p - value , with bootstrap resampling @xcite and rejected the null hypothesis if the p - value was lower than 0.10 .",
    "to resample the data at each node @xmath0 , we used the so called symbolic surrogate procedure with constrained probabilities surrogates @xcite .",
    "we first collected all trigrams @xmath149 that pass through node @xmath0 in the first step ( @xmath150 ) .",
    "these trigrams form a set of @xmath9 pairs @xmath151 with all steps before and after node @xmath0 .",
    "to resample these pairs , we randomized the order of the set of nodes visited before node @xmath0 , @xmath152 and created random pairings with the set of nodes visited after @xmath0 , @xmath153 , thereby destroying any memory effect . after aggregating the transition probabilities for the random pairings",
    ", we calculated the conditional entropy for the randomized data .",
    "we repeated this procedure , random resampling and calculation of conditional entropy , as many times as needed to conclude that the p - value is lower or higher than 0.10 .",
    "we used the clopper - pearson method @xcite with a 90% confidence interval of the p - value to determine the stop condition .    for the air traffic data , we have sufficiently many long pathways to perform this analysis also for higher - order markov models . for order @xmath9 , we extracted all @xmath116-grams from the data .",
    "since we use the conditional entropy as a test statistics , we estimate the average amount of information necessary to determine the destination of a passenger , given information about the sequence of airports the passenger has visited . in this way",
    ", the markov order sets the horizon of how much information an observer at an airport has about passengers to determine their next step .",
    "for each markov order @xmath9 , we performed two tests : one in which we only included @xmath9-grams of length @xmath116 , and one in which we also included all shorter @xmath9-grams of length 2 , 3 ,  @xmath9 from each pathway . excluding shorter @xmath9-grams",
    "corresponds to consider only passengers that already have visited at least @xmath9 airports , which we refer to as the _ maximum memory _ of passengers at airports . including shorter @xmath9-grams corresponds to consider all passengers and all their airport visits , which we refer to as _ typical memory _ of passengers at airports .    for each markov order @xmath9",
    ", we performed the same resampling procedure as described above .",
    "we split all @xmath116-grams into two sets , one that consists of the @xmath9 first airports of each @xmath116-gram and one that consists of the @xmath9 last airports of each @xmath116-gram .",
    "then we generated resampled @xmath116-grams by randomly recombining the two sets such that each resampled @xmath116-gram begins with an @xmath9-gram from the first set and ends with an @xmath9-gram from the other set , with @xmath154 airports overlapping in the middle . in this way",
    ", the resampled @xmath116-grams will be of markov order @xmath154 . in the typical memory approach ,",
    "we only resampled the longest @xmath116-grams , since all other 2- , 3- ,  @xmath9-grams are of order @xmath154 or lower .",
    "we repeated this resampling 100 times for each markov order @xmath9 and compared the actual conditional entropies with the ones given by the null hypothesis that they are generated from markov order @xmath154 .",
    "unlike in the main text where we weight the conditional entropies by pagerank , here we use the actual visit frequencies .",
    "supplementary figure  [ markovorder ] shows the results . even if air traffic has statistically significant memory effects up to markov order four ( supplementary fig .",
    "[ markovorder]a ) , shorter itineraries dominate ( 73% of all itineraries are of length three or shorter ) and a second - order markov model accurately captures the typical memory dynamics ( supplementary fig .",
    "[ markovorder]b ) . for typical memory ,",
    "the conditional entropy drops by 1.1 bits from first to second markov order but only by 0.3 bits from second to third markov order .",
    "both results are statistically significant and we conclude that a second - order markov model seems to successfully balance model complexity and accuracy .",
    "a more thorough model selection analysis is beyond the scope of this work",
    ".     airports .",
    "( * b * ) here we consider all passengers and all their airport visits .",
    "resampled variance is less than the size of the symbols .",
    "[ markovorder],title=\"fig : \" ] +    finally , in supplementary table  [ constraintstable ] we report the conditional entropies of first- and second - order markov dynamics together with the two - step and three - step return rates . here",
    "we also complement the results reported in table  1 of the main manuscript with the 10th and 90th percentiles of the bootstrap values .",
    "the bootstrapping shows that the memory effects are significant . for airports and cities ,",
    "the data are sufficiently rich that more than two digits are significant . for the patient data ,",
    "however , many pathways through the hospitals are used by only one or a few patients .",
    "therefore , the bootstrap estimates vary more and sometimes exclude the summary statistics of the raw data .",
    "nevertheless , there is a significant effect of second - order markov dynamics in all cases .",
    "we have seen that a second - order markov model has important effects on dynamic processes on networks . to better understand these effects",
    ", we simplified the dynamics and highlighted the important structures of the dynamics with community detection , currently the best way to comprehend dynamics on a large scale @xcite .",
    "with community detection , we can compare the structure of first- and second - order markov dynamic .",
    "since we are interested in the dynamics , we have chosen to work with the flow - based map equation framework @xcite .",
    "alternative flow - based methods exist @xcite , but the map equation framework easily allows us to maintain the mechanics of the method and only modify the dynamics .",
    "that is , we can cluster physical nodes and use memory nodes for controlling the dynamics .",
    "this advantageous feature allows us to efficiently compare the first- and second - order markov dynamics .",
    "since we are interested in overlapping modules , we build our new method on a generalization of the map equation to overlapping modules@xcite .",
    "the map equation framework is an information - theoretic approach that takes advantage of the duality between compressing data and finding regularities in the data .",
    "given module assignments @xmath155 of all nodes in the network , the map equation measures the description length @xmath156 of a random walker who moves within and between modules from node to node by following the links between the nodes @xcite : @xmath157 here the entropy @xmath158 measures the average per - step description length of movements between modules derived from module - enter frequencies @xmath159 of all @xmath160 modules and @xmath161 measures the average per - step description length of movements within module @xmath0 derived from node - visit and module - exit frequencies @xmath162 .",
    "the description lengths are weighted by their frequency of use , @xmath163 and @xmath164 , respectively .",
    "the visit frequencies can be obtained by first calculating the pagerank of nodes and links with smart teleportation as described in the methods section of the main text , or directly from the data if the links represent flow themselves .    in any case , finding the optimal partition of the network by assigning each node to one or more modules corresponds to testing different node assignments and picking the one that minimizes the map equation .",
    "the challenge is to handle the large search space of possible solutions when nodes can be assigned to any number of overlapping modules .",
    "therefore , we limit the search space here and only allow each memory node to be assigned to a single module . in this way , the efficient @xcite search algorithm for hard partitions in _ infomap _",
    "@xcite can be used with only small modifications .",
    "instead of applying the search algorithm on the standard network , we apply it on the memory network that contains transition information between memory nodes ( links ) .",
    "the method is thus a form of link partitioning @xcite .",
    "the search algorithm initiates each memory node in its own module and proceeds as _ infomap _ for hard partitions of regular nodes@xcite , with one important difference : when two or more memory nodes of the same physical node are assigned to the same module , the description length must capture the fact that the memory nodes share the same codeword .",
    "that is , to obtain the visit frequency of a physical node in a module , we sum the visit frequencies of all memory nodes of that physical node in the module .",
    "we then use this visit frequency to derive the optimal codeword length .",
    "this procedure is essential to ensure that the map equation measures the optimal description length of a random walker navigating between physical nodes . in this way",
    ", the compression algorithm remains the same and only the dynamics change .",
    "moreover , we ensure that the community detection results only depend on memory effects by representing first - order markov dynamics flow in a memory network , with each memory node having the out - links of its corresponding physical node in the standard network",
    ".     +    supplementary figure  [ lasvegasclustering ] illustrates the mechanics of the map equation for first- and second - order markov dynamics .",
    "the first - order passenger trigrams in b are derived from the actual trigrams in c in two steps .",
    "we first derived the normalized out - links of the two memory nodes in las vegas .",
    "since these memory nodes should represent first - order markov dynamics , their out - links are identical and equal to the proportion of passengers flying to san francisco and new york , respectively .",
    "we then multiplied these transition probabilities by the number of passengers that arrive in las vegas from san francisco and new york , respectively . in this way , for example , @xmath165 where @xmath166 and @xmath167 further , @xmath168 corresponds to the total passenger weight involved in the set of two consecutive flight legs illustrated in supplementary fig .",
    "[ lasvegasclustering ] .",
    "@rllllllllllll@ & & &    ' '' ''    & &    ' '' ''    & &    ' '' ''    & + & & m1 & m2 & & m1 & m2 & & m1 & m2 & & m1 & m2 + ecology & & @xmath88 & 13 & & @xmath88 & 29 & & 100 & 100 & & @xmath88 & @xmath88 + cell biology & & 100 & 80 & & 100 & 68 & & @xmath88 & @xmath88 & & 100 & 100 + mathematics & & @xmath88 & 4.6 & & @xmath88 & @xmath88 & & @xmath88 & @xmath88 & & @xmath88 & @xmath88 + statistics & & @xmath88 & 1.5 & & @xmath88 & @xmath88 & & @xmath88 & @xmath88 & & @xmath88 & @xmath88 + anthropology & & @xmath88 & @xmath88 & & @xmath88 & 1.6 & & @xmath88 & @xmath88 & & @xmath88 & @xmath88 + others & & @xmath88 & 0.38@xmath169 & & @xmath88 & 1.4@xmath170 & & @xmath88 & @xmath88 & & @xmath88 & @xmath88 +     +      the link clustering @xcite and clique percolation @xcite methods can be seen as trying to account for second - order markov dynamics .",
    "they operate by increasing connectivity within modules and decreasing connectivity between modules , albeit in different ways .",
    "below we establish this flow interpretation of the two methods .",
    "* interpreting link clustering and clique percolation as flow - based methods with second - order markov dynamics . *",
    "( * a * ) link clustering interpreted as a flow - based method with second - order markov dynamics : the similarity between link @xmath171 and other links connected to node @xmath118 represented as similarity weighted out - links from memory node @xmath172 to connected memory nodes .",
    "( * b * ) clique percolation interpreted as a flow - based method with second - order markov dynamics : possible link sides of adjacent triangles sharing the link @xmath171 represented as unweighted out - links from memory node @xmath172.,title=\"fig : \" ] +    the link clustering method measures the similarity between two links @xmath173 and @xmath124 connected at a common `` keystone '' node @xmath25 as the ratio between all shared nodes and the total number of nodes reached in two steps from the keystone node via the links . that is , the similarity is @xmath174 , where @xmath175 is the set of neighbours of @xmath0 .",
    "supplementary figure  [ cliquepercolation]a illustrates the similarities between nodes . with the keystone node in the middle , the dashed link is connected to five other links .",
    "the similarity is 1 with the links in the same module , because they share all nodes two steps from the keystone node via the links .",
    "however , the similarity is only 1/7 with the links in the other module , because they only share the keystone node of all seven nodes that can be reached in two steps from the keystone node via the links . with these link weights between links ,",
    "it is clear that the link clustering method identifies two modules overlapping at the node in the centre .",
    "how can we interpret this machinery as constraints on flow ?",
    "with similarities represented as links between memory nodes , as in supplementary fig .",
    "[ cliquepercolation]a , we see that a random walker would rarely switch between the modules .",
    "conditional on being at the node in the centre , and assuming that the link self - similarity is 1 , the transition rate decreases from 1/2 to 1/7 with weights derived according to the link community procedure . in this way",
    ", the persistence time increases in the two modules and allow for efficient compression of the flow .",
    "clique percolation identifies a module as the maximum set of nodes that can participate in a percolation of adjacent cliques .",
    "a clique is a fully connected sub - graph and two cliques are adjacent if they share all nodes but one .",
    "here we consider sub - graphs of size three , triangles , such that two triangles are adjacent if they share two nodes or , equivalently , one side .",
    "supplementary figure  [ cliquepercolation]b illustrates . since a triangle can percolate between the leftmost four nodes or the rightmost nodes , the method identifies two modules overlapping at the node in the centre .",
    "how can we interpret this process as constraints on flow ?",
    "assume that a random walker steps from node @xmath160 to node @xmath118 .",
    "the two adjacent triangles that share this link @xmath171 have link sides @xmath176 and @xmath177 , respectively , connected to node @xmath118 .",
    "we now restrict the random walker to only move along those links , or back from where it came . if we use memory nodes to represent these constraints , as in supplementary fig .",
    "[ cliquepercolation]b , the transition rate between the two modules drops to zero .",
    "in fact , the random walker will be blocked by the very same module boundaries as given by the clique percolation method .",
    "again , the persistence time increases in the two modules and allow for efficient compression of the flow .    by interpreting the machinery of the two methods as constraints on flow",
    ", we see that they can be seen as trying to infer second - order markov dynamics from the structure of the standard network .",
    "moreover , those constraints give longer persistence time in modules . and indeed , as we have seen from using real data of second - order dynamics , the persistence time in modules does increase when accounting for higher - order memory effects . as a result",
    ", this flow interpretation establishes an interesting connection between two heuristic methods that operate on standard networks and our inherently flow - based method that operates on memory networks .",
    "we conclude that this flow interpretation provides more principled grounds for link clustering and clique percolation .",
    "we summarize with the results of the community detection analysis and the closely related ranking in supplementary table  [ clusteringtable ] .",
    "in addition to the results already presented in table  1 of the main manuscript , here we also report the 10th and 90th percentiles from the bootstrap analysis . because of the greedy and stochastic nature of the search algorithm , the confidence intervals are wider than for the entropies and return rates reported in supplementary table  [ constraintstable ]",
    "nevertheless , there is a significant difference between the structure of first- and second - order markov dynamics . in a second - order markov model , the dynamics",
    "are confined in smaller and more overlapping modules .",
    "so far , we have used empirical data and studied the effects of second - order markov dynamics on community detection , ranking and spreading processes . here",
    "we outline a different line of research aimed at identifying simple mechanisms for explaining the effects of memory in networks .",
    "the modelling approach can be seen as an initial step in bringing together complementary knowledge from previously disconnected areas of research : biologists have used empirical data to model animal movements in 2d with correlated random walks @xcite , computer scientists have used web logs to predict web surfer behaviour with higher - order markov models @xcite , and physicists have used theoretical models to study dynamics on networks with biased random walks @xcite . by combining the empirical work for prediction with the theoretical work for mechanistic understanding , we are in a good position to better understand the effects of memory in integrated systems .    to combine the approaches , we developed a simple network memory model that , fitted to data , can capture some basic features of second - order markov dynamics in real systems .",
    "in addition to its explanatory power , the memory model also summarizes the dynamics of a system and makes it easy to compare the dynamics between different systems .",
    "below , we first describe the memory model , then we show a procedure for fitting the model parameters to real data , and finally we illustrate , with ranking as an example , how this modelling approach can be used for a mechanistic understanding of the effects of second - order markov dynamics .",
    "we build a tractable model for memory dynamics by coarse - graining the description of second - order markov data .",
    "we define three different types of transition between nodes : a _ return step _ @xmath178 , where the walker goes from @xmath0 to @xmath6 to @xmath0 ; a _ triangular step _",
    "@xmath179 , where the walker goes from @xmath0 to @xmath6 to a neighbour of @xmath0 ; and an _ exploratory step _",
    "@xmath180 , for which the destination of the step is neither of those previously described .",
    "these events correspond to transitions of the types @xmath181 , @xmath182 , and @xmath183 , where @xmath184 is a member of the set of neighbours of @xmath0 and @xmath185 is a member of the set of nodes different from @xmath0 and the set of neighbours of @xmath0 ( in principle , we can chose the set of either in - neighbours , out - neighbours , or neighbours in an undirected sense . in this discussion",
    ", we chose the latter option for the sake of simplicity ) .",
    "the memory model is defined by assigning a different prevalence @xmath186 to each type of transition , @xmath178 , @xmath179 , and @xmath180 , respectively ( see supplementary fig .  [ figabc ] ) , where the index underlines the length of the cycle associated with the process .",
    "for instance , the probability of performing a return step from @xmath3 , and thus of observing a cycle of length @xmath55 , is @xmath187 if @xmath131 exists ; otherwise , it is zero .",
    "@xmath188 is the number of elements in @xmath184 .",
    "tuning the values of @xmath189 gives more or less importance to each type of step .",
    "importantly , the values of the parameters can easily be evaluated in empirical data , as shown below . without loss of generality",
    ", we impose the constraint @xmath190 , such that @xmath189 can be understood as the probability of an event of type @xmath191 occurring .",
    "the memory model is described by transition probabilities @xmath192 , approximating the original transition probabilities @xmath35 , and depending on the value of the above parameters and on the type of transitions between @xmath3 and @xmath27 .",
    "we now seek to find parameter values of @xmath178 , @xmath179 , and @xmath180 to model dynamics as close as possible to observed m2 data . the model is thus fitted by minimizing the difference between the observed transition probabilities @xmath35 measured from the trigrams and the transition matrix of the model @xmath192 .",
    "to do so , we look for the values of @xmath178 and @xmath179 , minimizing the kullback@xmath88leibler ( kl ) divergence @xmath193 where @xmath194 is , as before , the pagerank of node @xmath3 .",
    "minimizing the kl divergence is equivalent to maximizing the log - likelihood @xcite , but since we use the conditional entropy to quantify the constraints on flow , we find it natural to use the information - theoretic kl divergence as the objective function .    in practice , in order to minimize the kl divergence , we first analytically derive its partial derivatives with respect to @xmath178 and @xmath179 ( @xmath180 does not appear in the expression of the kl divergence because of the normalization @xmath195 .",
    "then we set the derivatives to zero and iteratively solve the two coupled equations with a simple bisection method .",
    "divergence reduction in the memory model with all parameters @xmath178 , @xmath179 , @xmath180 ( red ) , and with restricted parameters @xmath196 , @xmath197 ( blue ) model .",
    "the vertical lines correspond to @xmath178 ( red ) , @xmath179 ( green ) and @xmath196 ( blue).,title=\"fig : \" ] +    the parameters found by performing this optimization are summarized in supplementary table  [ klmodel_table ] .",
    "the table also reports values for @xmath196 , the best parameter in a simplified model where we impose that @xmath198 , and thus only differentiate between return steps and other type of steps .",
    "we quantified the relative @xmath199 reduction as 1 minus the ratio between the optimized @xmath199 divergence and the unbiased first - order markov model with @xmath200 ( @xmath201 refers to the simplified model ) ; high values of the @xmath199 reduction imply a higher relative gain of fitting the data with the memory model over a first - order markov model . in most cases ,",
    "we observe that the inclusion of memory through the parameters @xmath178 , @xmath179 , and @xmath180 significantly improves the accuracy of the modelling .",
    "a majority of networks show a high value of @xmath178 , as expected .",
    "we also observe that the reduction induced by relaxing the constraint @xmath198 tends to be small , suggesting that the definition of return steps is the most important ingredient in producing realistic pathways .",
    "supplementary figure  [ kl_fig ] shows the @xmath199 divergence reduction when tuning @xmath178 and @xmath196 .",
    "& @xmath208 red .",
    "@xmath206 + airports & & 93 ( 93 - 93 ) & & 2.8 ( 2.8 - 2.8 ) & & 4.5 ( 4.5 - 4.5 ) & & 66 ( 66 - 66 ) & & 97 ( 97 - 97 ) & & 65 ( 65 - 65 ) + cities & & 91 ( 91 - 91 ) & & 3.2 ( 3.2 - 3.2 ) & & 5.6 ( 5.6 - 5.7 ) & & 67 ( 67 - 67 ) & & 96 ( 96 - 96 ) & & 66 ( 66 - 66 ) + journals & & 67 ( 67 - 67 ) & & 25 ( 25 - 25 ) & & 7.6 ( 7.2 - 7.6 ) & & 9.6 ( 9.4 - 9.6 ) & & 72 ( 72 - 72 ) & & 7.0 ( 6.9 - 7.0 ) + patients & & 86 ( 85 - 90 ) & & 10 ( 7.4 - 11 ) & & 3.4 ( 2.8 - 3.5 ) & & 40 ( 40 - 45 ) & & 95 ( 95 - 95 ) & & 40 ( 40 - 45 ) + taxis & & 17 ( 16 - 17 ) & & 66 ( 65 - 66 ) & & 17 ( 17 - 18 ) & & 23 ( 22 - 23 ) & & 29 ( 29 - 30 ) & & 4.8 ( 4.8 - 5.0 ) + emails & & 89 ( 88 - 89 ) & & 8.9 ( 8.4 - 9.8 ) & & 1.9 ( 1.8 - 2.2 ) & & 54 ( 51 - 55 ) & & 94 ( 94 - 95 ) & & 50 ( 47 - 51 ) +    it is worth mentioning that the optimization procedure provides a unique solution because the search landscape is indeed very smooth .",
    "for example , supplementary fig .",
    "[ kl_fig ] shows that the kl divergence has a unique minimum ( the reduction has a maximum ) as a function of @xmath178 with @xmath179 fixed .",
    "also the reversed scenario , fixed @xmath178 and variation in @xmath179 , has a similar smooth form with a unique extremum .",
    "moreover , the bootstrap analysis shows that the optimal parameters are very robust .",
    "here we use the model to illustrate the effects of second - order markov dynamics on ranking .",
    "we use schematic networks and , for simplicity , we focus on unweighted networks . in this case",
    ", @xmath125 is simply the adjacency matrix @xmath209 of the network , with @xmath210 if there is a link going from @xmath0 to @xmath6 and zero otherwise .",
    "it is also useful to introduce the in- and out - degrees of each node defined by @xmath211 and @xmath212 . as a first step , we focus on the basic case when each type of transition is equally probable , @xmath200 . in this case , the memory model is equivalent to a standard markov random walk on the physical network . to show this , we first note that ( 7 ) in the main manuscript reduces to @xmath213 it is straightforward to show that the stationary solution of the process is @xmath214 if the graph is eulerian ( @xmath215 for all @xmath6 ) .",
    "one thus recovers the well - known result that the stationary probability of finding a walker on a node is proportional to its degree in undirected networks .",
    "if the underlying network is strongly connected , this is the only stationary solution of the process . by using the fact that @xmath216 and summing over @xmath6 in supplementary equation ( [ standard1 ] )",
    ", we find that @xmath217 thus recovering the standard master equation for a random walk process , driven by the transition matrix @xmath218 .",
    "if the standard random walk is ergodic on a graph , the memory model is also ergodic on the same graph for any value of @xmath178 , @xmath179 , and @xmath180 , as long as each parameter is strictly positive , such that no transition is forbidden by the bias . in systems where ergodicity is not verified , we use link teleportation as described above .",
    "the robustness of link teleportation under variations of the teleportation probability @xmath100 @xcite is clear , after noting that the stationary solution of the first - order markov process is @xmath214 when each node of the physical network has the same in - degree and out - degree ( e.g. , if the network is undirected ) , independently of @xmath99 .",
    "does not play a role . in * b",
    "* , all links are reciprocated and @xmath178 does not play a role .",
    "the stationary probability @xmath31 increases / decreases with @xmath178 ( * a * ) or @xmath179 ( * b * ) for red and blue links respectively . for solid lines ,",
    "this increase / decrease is predicted by the first - order perturbation in supplementary equation ( [ perturbation ] ) . for dashed lines ,",
    "the probability of finding a walker on a memory node is uniform in the first - order approximation , and higher - order contributions are required to predict increase or decrease .",
    "[ prfig1],title=\"fig : \" ] +    we now turn to evaluating the effects of @xmath178 , @xmath179 , and @xmath180 on pagerank . to do so , we use a perturbation analysis of @xmath99 close to @xmath219 , where a local approximation of pagerank is valid . for the sake of simplicity",
    ", we consider the case of unweighted networks .",
    "we further assume that the graph is eulerian , so that the known solution @xmath214 for @xmath200 can be used as a baseline . in this case",
    ", it is straightforward to show that the dominant contribution to the stationary solution is @xmath220 intuitively , the pagerank of memory node @xmath27 increases when the bias of the random walk process favours transitions @xmath4 over other transitions leaving @xmath3 .",
    "different types of scenarios are possible . as an illustration , we first focus on the role of @xmath178 for a network without triangles , such as the one of supplementary fig .",
    "[ prfig1]a .",
    "as expected , higher values of @xmath178 tend to favour reciprocated links .",
    "higher - order contributions , corresponding to paths of length longer than 1 , are expected to favour reciprocated links connected to many other reciprocated links , etc .",
    ", due to the iterative nature of pagerank .",
    "for instance , for memory node @xmath221 , one finds @xmath222 as shown in supplementary fig .",
    "[ prfig2 ] .",
    "for @xmath223 , in contrast , the linear approximation is uniform @xmath224 and higher - order contributions are necessary to show that the bias boosts the pagerank . from ( 11 ) in the main manuscript , we see that physical nodes are important if they have many central incoming links . in the first example of supplementary fig .",
    "[ prfig1 ] , node 2 is very central while node 4 is not . in supplementary fig .",
    "[ prfig1]b , we also illustrate the role of @xmath178 on centrality , and show that high values of @xmath178 tend to favour links belonging to many triangles , as expected .     for edges going from @xmath225 to @xmath55 and from @xmath55 to @xmath225 , illustrated in supplementary fig .",
    "[ prfig1]a , for @xmath226 , @xmath227 and @xmath228 .",
    "solid lines correspond to the linear approximation given by supplementary equation ( [ perturbation1 ] ) and supplementary equation ( [ perturbation2 ] ) .",
    "[ prfig2],title=\"fig : \" ] +"
  ],
  "abstract_text": [
    "<S> random walks on networks is the standard tool for modelling spreading processes in social and biological systems . </S>",
    "<S> this first - order markov approach is used in conventional community detection , ranking , and spreading analysis although it ignores a potentially important feature of the dynamics : where flow moves to may depend on where it comes from . </S>",
    "<S> here we analyse pathways from different systems , and while we only observe marginal consequences for disease spreading , we show that ignoring the effects of second - order markov dynamics has important consequences for community detection , ranking , and information spreading . for example , capturing dynamics with a second - order markov model allows us to reveal actual travel patterns in air traffic and to uncover multidisciplinary journals in scientific communication . </S>",
    "<S> these findings were achieved only by using more available data and making no additional assumptions , and therefore suggest that accounting for higher - order memory in network flows can help us better understand how real systems are organized and function .    </S>",
    "<S> biblabel[1]#1 .    </S>",
    "<S> a central objective of network science is to connect structure with dynamics in integrated social and biological systems @xcite . in this data - driven approach , </S>",
    "<S> the complex structure is represented with a network of nodes and links , and the dynamics are modelled with random flow on the network @xcite . </S>",
    "<S> the flow can represent ideas circulating among colleagues , passengers travelling through airports , or patients moving between hospital wards . </S>",
    "<S> conventional network models implicitly assume that where the flow moves to only depends on where it is , and that this first - order markov process suffices for performing community detection , ranking , and spreading analysis . </S>",
    "<S> claude shannon introduced higher - order memory models in 1948 @xcite , and there is a substantial body of work on analysing memory effects in , for example , time - series analysis for forecasting financial markets @xcite , correlated random walks for predicting animal movements @xcite , and exponential random graph models for capturing social networks @xcite . </S>",
    "<S> moreover , there is recent evidence that memory is necessary for accurately predicting web traffic @xcite , for improving search and navigation in information networks @xcite , and for capturing important phenomena in the spread of information @xcite and epidemics @xcite . </S>",
    "<S> nevertheless , little is known about memory effects on community detection , ranking , and spreading analysis , three principal methods in network science . </S>",
    "<S> this issue raises a fundamental question that allows us to better understand social and biological systems : what are the effects of ignoring higher - order memory in network flows on community detection , ranking , and spreading ?    to comprehend the effects of memory , we use networks in which the direction of flow depends on the weights of the outgoing links and , importantly , _ where the flow comes from_. in this paper , we focus on second - order markov dynamics such that the next step depends on the currently and previously visited node , which corresponds to a second - order markov model of flow . as an illustration </S>",
    "<S> , we use air traffic between airports of different cities with link weights derived from real itineraries ( fig .  </S>",
    "<S> [ socialflow ] ) . </S>",
    "<S> when we take first - order markov dynamics into account in the conventional network approach , nodes @xmath0 represent cities and links @xmath1 represent flight legs , with weights @xmath2 proportional to the passenger volume between cities . </S>",
    "<S> the dynamics are modelled with weighted steps between nodes on _ networks without memory _ and correspond to a first - order markov model of flow , since the direction of flow only depends on the currently visited city ( fig .  </S>",
    "<S> [ socialflow]a ) . </S>",
    "<S> this conventional approach is used in a wide range of problems , from ranking nodes @xcite and finding communities @xcite to modelling the spread of epidemics @xcite and rumours @xcite . </S>",
    "<S> however , this approach ignores where the passengers come from , and therefore the direction of passenger flow is independent of the incoming traffic . </S>",
    "<S> when we take second - order markov dynamics into account , on the other hand , _ memory nodes _ </S>",
    "<S> @xmath3 represent flight legs and links @xmath4 represent connected flight legs , with weights @xmath5 proportional to the passenger volume between cities and conditional on the previously visited city . in this way , a city </S>",
    "<S> is represented by a _ physical node _ </S>",
    "<S> @xmath6 with multiple _ memory nodes _ @xmath3 , one for each incoming flight leg from city @xmath0 , such that arriving in chicago from seattle corresponds to arriving at memory node @xmath7 of physical node @xmath8 . by modelling the dynamics on this _ network with memory _ , such that steps depend on the currently and previously visited city </S>",
    "<S> , we can better reveal actual travel patterns ( fig .  </S>",
    "<S> [ socialflow]b ) .    ]    </S>",
    "<S> while we considered passengers moving between cities in this illustration , we have analysed six diverse systems in detail , including researchers navigating between journals and patients moving between wards . </S>",
    "<S> we find that taking second - order markov dynamics into account is important for understanding the actual dynamics , because random dynamics on networks obscure essential structural information . after deriving how we model the dynamics and quantify their constraints , </S>",
    "<S> we show how the second - order markov constraints on dynamics influence three important branches of network science : community detection , ranking , and epidemic spreading . </S>"
  ]
}
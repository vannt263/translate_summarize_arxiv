{
  "article_text": [
    "lattice qcd is a powerful method to study quantum chromodynamics ( qcd ) in a nonperturbative way . in lattice qcd",
    ", a path integral is directly evaluated on a discrete space - time lattice by means of the monte carlo method . as computer technology advances pc clusters",
    "can also be used for lattice qcd simulations as well as a number of commercial supercomputers .",
    "since lattice qcd simulations demand huge computer power , it is very important to optimize the simulation codes so as to exploit the full potential of the processor .",
    "thus we optimize the hot spots of the codes such as the operation of a dirac operator to a spinor ( referred as @xmath0 hereafter ) and linear algebra of spinors , e.g.    * @xmath1 : scalar product of two spinors * @xmath2 : norm square of a spinor * @xmath3 : add two spinors with a constant factor and assign the result to one of the source spinors    in the simulation , a spinor is defined as a vector with 12 complex components on each grid point ( site ) of the lattice , and a gauge field is defined as a complex @xmath4 matrix on a link , which connects nearest neighbor sites .",
    "numerically the operation @xmath0 is a combination of a complex @xmath4 matrix times a complex vector . from a technical point of view",
    ", we should optimize these two applications separately since @xmath0 is processor limited as it needs more than one thousand floating point operations per site , while the linear algebra routines demand more data transfer than actual computations ( memory limited ) .    in this note",
    "we report our experience of the optimization of the lattice qcd codes for the new pc cluster with the amd opteron processor  @xcite which is recently installed at desy hamburg .",
    "of course the parallel computing with multiple processors is of our interest , however , we have optimized here only single processor version as a first step .",
    "we also compare benchmarks with an older pc cluster with the intel xeon processors ( see table  [ tbl : spec ] for the specification of these two processors ) .",
    ".comparison of the specification of the two processors which we use [ cols=\"^,^,^\",options=\"header \" , ]     [ tbl : comp ]    for linear algebra we have more gain as expected from the difference of the processor clock speed . the larger data cache and",
    "the improvement of memory bandwidth may reflect the result since linear algebra routines are rather memory limited .",
    "in this report , we discuss the details of the optimization of the lattice qcd codes for the amd opteron processor .",
    "tuning of prefetch distance for each application can improve performance by more than a factor of two . the prefetch instruction ,",
    "however , may cause significant slowing down in some linear algebra routines at certain lattice sizes due to bank conflict .",
    "we found that this slowing down can be cured by adopting two different prefetch distances for each source field .",
    "the effect of the modification in sse instructions can be observed only after the adjustment of the prefetch instructions .",
    "large cache effect is observed not only for the linear algebra routines but also for the @xmath0 routines when the source fields can fit into relatively large l2 data cache of the opteron processor .",
    "this suggests that the pc cluster of the opteron processor can achieve high performance when the sublattice size becomes small enough . as a next step of this work",
    ", we will develop a parallel version of the codes .",
    "the author would like to thank h. wittig and y. koma for a number of useful discussions .",
    "the author appreciate the original codes and the benchmark programs written by l.  giusti , m.  lscher and h.  wittig , which is the basis of the improvement reported here .      9 software optimization guide for amd athlon 64 and amd opteron processors ( publication  # : 25112 , issue date november 2004 )",
    "amd64 architecture programmer s manual vol .",
    "4 ( publication  # : 24592 issue date september 2003 ) sandeep.s , gcc - inline - assembly - howto ( ` http://www.ibiblio.org/gferg/ldp/ gcc-inline-assembly-howto.html ` ) + v0.1 , 01 march 2003 ."
  ],
  "abstract_text": [
    "<S> we report our experience of the optimization of the lattice qcd codes for the new opteron cluster at desy hamburg , including benchmarks . </S>",
    "<S> details of the optimization using sse / sse2 instructions and the effective use of prefetch instructions are discussed . </S>"
  ]
}
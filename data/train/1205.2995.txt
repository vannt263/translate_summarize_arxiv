{
  "article_text": [
    "this is part 3 in a sequence of papers @xcite on multiadaptive galerkin methods , @xmath0  and @xmath1 , for approximate ( numerical ) solution of odes of the form @xmath3 , \\\\",
    "u(0 ) & = u_0 ,      \\end{split }    \\label{eq : u'=f}\\ ] ] where @xmath4 \\rightarrow { \\mathbb{r}}^n$ ] is the solution to be computed , @xmath5 a given initial condition , @xmath6 a given final time , and @xmath7 \\rightarrow { \\mathbb{r}}^n$ ] a given function that is lipschitz - continuous in @xmath8 and bounded .    in the previous two parts of our series on multiadaptive galerkin methods",
    ", we proved a posteriori error estimates , through which the time steps are adaptively determined from residual feedback and stability information , obtained by solving a dual linearized problem . in this paper , we prove a priori error estimates for @xmath0 and @xmath1 .",
    "we also prove the stability estimates and interpolation estimates which are essential to the a priori error analysis .",
    "standard methods for the time - discretization of ( [ eq : u=f ] ) require that the resolution is equal for all components @xmath9 of the computed approximate solution @xmath10 of ( [ eq : u=f ] ) .",
    "this includes all standard galerkin or runge  kutta methods ; see @xcite",
    ". using the same time step sequence @xmath11 for all components could become very costly if the different components of the solution exhibit multiple time scales of different magnitudes .",
    "we therefore propose a new representation of the solution in which the difference in time scales is reflected in the _ componentwise _ time - discretization of ( [ eq : u=f ] ) , that is , each component @xmath9 is computed using an individual time step sequence @xmath12 .",
    "the multiadaptive galerkin methods @xmath0 and @xmath1 first presented in @xcite are formulated as extensions of the standard continuous and discontinuous galerkin methods @xmath13 and @xmath14 , studied earlier in detail by hulme @xcite , jamet @xcite , delfour , hager , and trochu @xcite , eriksson , johnson , and thome @xcite , and estep et al.@xcite .",
    "as such , the analysis of the @xmath0 and @xmath1 methods can be carried out within the existing framework , but the extension to multiadaptive time - stepping leads to some technical challenges , in particular , proving the appropriate interpolation estimates .",
    "local ( multiadaptive ) time - stepping has been explored before to some extent for specific applications , including specialized integrators for the @xmath15-body problem @xcite and low - order methods for conservation laws @xcite .",
    "early attempts at local time - stepping include @xcite .",
    "recently , a new class of related methods , known as asynchronous variational integrators ( avi ) with local time steps , has been proposed @xcite .",
    "the main results of this paper are a priori error estimates for the @xmath0  and @xmath1  methods , respectively , of the form @xmath16,l_1)}\\ ] ] and @xmath17,l_1)}\\ ] ] for @xmath18 or @xmath19 , where @xmath20 is an interpolation constant , @xmath21 is a ( computable ) stability factor , and @xmath22 ( or @xmath23 ) combines local time steps @xmath12 with derivatives of the exact solution @xmath8 . the norm @xmath24 is defined by @xmath25 .",
    "these estimates state that the @xmath0 method is of order @xmath26 and that the @xmath1 method is of order @xmath27 in the local time step .",
    "we refer to section [ sec : aprioriestimates ] for the exact results .",
    "it should be noted that superconvergence is obtained only at synchronized time levels , such as the end - point @xmath28 . for the general nonlinear problem",
    ", we obtain exponential estimates for the stability factor @xmath21 . in @xcite",
    ", we prove that for a parabolic model problem , the stability factor remains bounded and of unit size , independent of @xmath29 ( up to a logarithmic factor ) .",
    "the following notation is used throughout this paper .",
    "each component @xmath9 , @xmath30 , of the approximate @xmath31 solution @xmath10 of ( [ eq : u=f ] ) is a piecewise polynomial on a partition of @xmath32 $ ] into @xmath33 subintervals .",
    "subinterval @xmath34 for component @xmath35 is denoted by @xmath36 $ ] , and the length of the subinterval is given by the",
    "_ local time step _ @xmath37 .",
    "this is illustrated in figure [ fig : intervals ] . on each subinterval @xmath38",
    ", @xmath39 is a polynomial of degree @xmath40 and we refer to @xmath41 as an _ element_.    furthermore , we shall assume that the interval @xmath32 $ ] is partitioned into blocks between certain synchronized time levels @xmath42 .",
    "we refer to the set of intervals @xmath43 between two synchronized time levels @xmath44 and @xmath45 as a _ time slab _ :",
    "@xmath46 we denote the length of a time slab by @xmath47 .",
    "we also refer to the entire collection of intervals @xmath38 as the partition @xmath48 .",
    "since different components use different time steps , a local interval @xmath38 may contain nodal points for other components , that is , some @xmath49 .",
    "we denote the set of such internal nodes on a local interval @xmath38 by @xmath50 .",
    "$ ] for different components .",
    "elements between common synchronized time levels are organized in time slabs . in this example",
    ", we have @xmath51 and @xmath52.,width=377 ]      the outline of this paper is as follows . in section [ sec : definition ] , we give the full definition of the multiadaptive galerkin methods @xmath0 and @xmath1 .",
    "we also introduce the dual methods @xmath53 and @xmath54 , which are of importance to the a priori error analysis . in sections [ sec : existence ] and [ sec : stability ] , respectively , we then prove existence and stability of the discrete solutions as defined in section [ sec : definition ] .    in section [ sec :",
    "interpolation ] , we prove the interpolation estimates that we later use to prove the a  priori error estimates in section  [ sec : apriori ] . proving the interpolation estimates",
    "is technically challenging , since the function to be interpolated may be discontinuous within the interval of interpolation . to measure the regularity of the interpolated function , it is then necessary to take into consideration the size of the jump in function value and derivatives at each point of discontinuity .",
    "finally , in section [ sec : numerical ] , we present some numerical evidence for the a priori error estimates by solving a simple model problem and showing that we obtain the predicted convergence rates , @xmath55 and @xmath56 respectively , for the @xmath0 and @xmath1 methods .",
    "in this section , we give the definitions of the multiadaptive galerkin methods @xmath0 and @xmath1 .",
    "the multiadaptive methods are obtained as extensions of the standard ( monoadaptive ) galerkin methods @xmath13 and @xmath14 by extending the trial and test spaces to allow individual time step sequences for different components .    as an important tool for the a priori error analysis in section  [ sec : apriori ]",
    ", we also introduce the discrete dual problem and the discrete dual methods @xmath53 and @xmath54 .",
    "to formulate the @xmath0  method , we define the _ trial space _ @xmath58 and the _ test space _ @xmath59 as @xmath60)]^n : v_i|_{i_{ij}}\\in \\mathcal{p}^{q_{ij}}(i_{ij } ) , \\",
    "j=1,{\\dotsc},m_i , \\",
    "i=1,{\\dotsc},n \\big\\},\\\\      \\hat{v } & = \\big\\{v : v_i|_{i_{ij}}\\in \\mathcal{p}^{q_{ij}-1}(i_{ij } ) , \\",
    "j=1,{\\dotsc},m_i , \\",
    "i=1,{\\dotsc},n \\big\\},\\\\    \\end{split }    \\label{eq : spaces , mcg}\\ ] ] where @xmath61 denotes the linear space of polynomials of degree @xmath2 on an interval @xmath62 .",
    "in other words , @xmath58 is the space of vector - valued continuous piecewise polynomials of degree @xmath63 with @xmath64 on the partition @xmath48 , and @xmath59 is the space of vector - valued ( possibly discontinuous ) piecewise polynomials of degree @xmath65 on the same partition .",
    "we now define the @xmath0  method for ( [ eq : u=f ] ) as follows : find @xmath66 with @xmath67 such that @xmath68 where @xmath69 denotes the @xmath70 inner product . with a suitable choice of test function @xmath71",
    ", it follows that the global problem ( [ eq : fem , mcg ] ) can be restated as a sequence of successive local problems for each component : for @xmath30 , @xmath72 , find @xmath73 with @xmath74 given such that @xmath75 where the initial condition is specified for @xmath30 by @xmath76 .",
    "we define the _ residual _ @xmath77 of the approximate solution @xmath78 by @xmath79 . in terms of the residual ,",
    "we can rewrite ( [ eq : fem , mcg , local ] ) in the form @xmath80 that is , the residual is orthogonal to the test space on each local interval .",
    "we refer to ( [ eq : fem , mcg , local , orthogonality ] ) as the _ galerkin orthogonality _ of the @xmath0  method .      for @xmath1",
    ", we define the trial and test spaces by @xmath81 that is , both trial and test functions are vector - valued ( possibly discontinuous ) piecewise polynomials of degree @xmath63 with @xmath82 on the partition @xmath48 . by definition , the @xmath1  solution @xmath66 is left - continuous .",
    "we now define the @xmath1  method for ( [ eq : u=f ] ) as follows : find @xmath66 with @xmath83 such that @xmath84_{i , j-1 } v_i\\big(t_{i , j-1}^+\\big ) + \\int_{i_{ij } } \\dot{u}_i v_i \\ , dt    \\right ] =    \\int_0^t ( f(u,\\cdot),v ) \\ , dt \\quad \\forall v\\in \\hat{v } ,    \\label{eq : fem , mdg}\\ ] ] where denotes the jump in @xmath9 across the node , and where .",
    "the @xmath1  method in local form , corresponding to ( [ eq : fem , mcg , local ] ) , reads as follows : for @xmath30 , @xmath72 , find @xmath73 such that @xmath85_{i , j-1 } v(t_{i , j-1 } ) + \\int_{i_{ij } } \\dot{u}_i v \\ , dt = \\int_{i_{ij } } f_i(u,\\cdot ) v \\ , dt      \\quad   \\forall v\\in \\mathcal{p}^{q_{ij}}(i_{ij } ) ,      \\label{eq : fem , mdg , local}\\ ] ] where the initial condition is specified for @xmath30 by @xmath86 .",
    "the residual @xmath77 is defined on the inner of each local interval @xmath38 by @xmath87 . in terms of the residual , ( [ eq : fem , mdg , local ] )",
    "can be restated in the form @xmath85_{i , j-1 } v\\big(t_{i , j-1}^+\\big ) + \\int_{i_{ij } } r_i(u,\\cdot ) v \\ , dt = 0 \\quad      \\forall v\\in \\mathcal{p}^{q_{ij}}(i_{ij } )      \\label{eq : fem , mdg , local , orthogonality}\\ ] ] for @xmath88 , @xmath89 .",
    "we refer to ( [ eq : fem , mdg , local , orthogonality ] ) as the galerkin orthogonality of the @xmath1  method .",
    "the dual problem is the standard tool for error analysis , a priori or a posteriori , of galerkin finite element methods for the numerical solution of differential equations ; see @xcite .",
    "for the a posteriori error analysis of the multiadaptive galerkin methods @xmath0 and @xmath1 in @xcite , we formulate a continuous dual problem . for the a priori error analysis of this paper ,",
    "we formulate instead a discrete dual problem .",
    "the discrete dual problem was first introduced for the family of discontinuous galerkin methods @xmath14 in @xcite .",
    "as we shall see , the discrete dual problem can be expressed as a galerkin method for a continuous problem .",
    "the discrete dual solution @xmath90\\rightarrow { \\mathbb{r}}^n$ ] is a galerkin approximation of the exact solution @xmath91\\rightarrow { \\mathbb{r}}^n$ ] of the continuous dual problem @xmath92 where @xmath93 is an interpolant or a projection of the exact solution @xmath8 of ( [ eq : u=f ] ) , @xmath94\\rightarrow { \\mathbb{r}}^n$ ] is a given function , @xmath95 is a given initial condition , and @xmath96 that is , an appropriate mean value of the transpose of the jacobian of the right - hand side @xmath97 evaluated at @xmath98 and @xmath10 . note that by the chain rule , we have @xmath99",
    "the data @xmath100 of the dual problem allow us to obtain error estimates for different functionals @xmath101 of the error @xmath102 .",
    "we define below two new galerkin methods for the dual problem ( [ eq : dual ] ) : the dual methods @xmath53 and @xmath54 .",
    "we will later use the @xmath53 method to express the error of the @xmath0 solution of ( [ eq : u=f ] ) in terms of the @xmath53 solution of ( [ eq : dual ] ) .",
    "similarly , we will express the error of the @xmath1 solution of ( [ eq : u=f ] ) in terms of the @xmath54 solution of ( [ eq : dual ] ) .      in the formulation of the dual method of @xmath0 , we interchange the trial and test spaces of @xmath0 . with the same definitions of @xmath58 and @xmath59 as in ( [ eq : spaces , mcg ] ) , we thus define the @xmath53  method for ( [ eq : dual ] ) as follows : find @xmath104 with @xmath105 such that @xmath106 for all @xmath107 with @xmath108 , where @xmath109 notice the extra condition that the test functions should vanish at @xmath110 , which is introduced to make the dimension of the test space equal to the dimension of the trial space . integrating by parts , ( [ eq : mcgqd ] )",
    "can alternatively be expressed in the form @xmath111_{ij } v_i(t_{ij } ) - \\int_{i_{ij } } \\dot{\\phi}_i v_i \\ , dt \\right ] =    \\int_0^t ( j^{\\top}(\\pi u , u,\\cdot ) \\phi + g , v ) \\ , dt.\\ ] ]      @xmath112with the same definitions of @xmath58 and @xmath59 as in ( [ eq : spaces , mdg ] ) , we define the @xmath54  method for ( [ eq : dual ] ) as follows : find @xmath104 with @xmath105 such that @xmath113_{i , j-1 } \\phi_i\\big(t_{i , j-1}^+\\big ) + \\int_{i_{ij } } \\dot{v}_i \\phi_i \\ , dt    \\right ] =    \\int_0^t ( j(\\pi u , u,\\cdot)v,\\phi ) \\ , dt +   l_{\\psi , g}(v)\\ ] ] for all @xmath114 with @xmath115 . integrating by parts , ( [ eq : mdgqd ] ) can alternatively be expressed in the form @xmath116_{ij } v_i\\big(t_{ij}^-\\big ) - \\int_{i_{ij } } \\dot{\\phi}_i v_i \\ , dt    \\right ] =    \\int_0^t ( j^{\\top}(\\pi u , u,\\cdot)\\phi+g , v ) \\ , dt.\\ ] ]",
    "to prove existence of the discrete @xmath0 , @xmath1 , @xmath53 , and @xmath54solutions defined in the previous section , we formulate fixed point iterations for the construction of solutions .",
    "existence then follows from the banach fixed point theorem if the time steps are sufficiently small .",
    "[ lem : explicit ] let @xmath43 be a time slab with synchronized time levels @xmath44 and @xmath45 . with time reversed for the dual methods ( to simplify the notation ) , the @xmath0 , @xmath1 , @xmath53 , and @xmath54  methods can all be expressed in the following form : for all @xmath117 , find @xmath118 ( the degrees of freedom for @xmath119 on @xmath38 ) such that @xmath120}(\\tau_{ij}(t ) ) f_i(u,\\cdot ) \\ , dt,\\ ] ] where @xmath121 and @xmath122}\\}$ ] is a set of polynomial weight functions on @xmath123 $ ] .",
    "the result follows from the definitions of the @xmath0 , @xmath1 , @xmath53 , and @xmath54 methods , using an appropriate basis for the trial and test spaces .",
    "see @xcite for details .",
    "let @xmath124 be the maximum time slab length and define the lipschitz constant @xmath125 by @xmath126 \\ \\forall x , y \\in { \\mathbb{r}}^n.\\ ] ] if now @xmath127 where @xmath128 is a constant depending only on the order and method , the fixed point iteration _ ( [ eq : explicit ] ) _ converges to the unique solution of _ ( [ eq : fem , mcg ] ) _ , _ ( [ eq : fem , mdg ] ) _ , _ ( [ eq : mcgqd ] ) _ , and _ ( [ eq : mdgqd ] ) _ , respectively .",
    "the result follows by lemma [ lem : explicit ] and an application of the banach fixed point theorem .",
    "see @xcite for details .",
    "write the dual problem ( [ eq : dual ] ) for @xmath129 in the form @xmath130 for simplicity , we consider only the case @xmath131 . with @xmath132 , we have @xmath133 , and so ( [ eq : linear , dual ] ) can be written as a forward problem for @xmath134 in the form @xmath135 , \\\\",
    "w(0 ) & = w_0 ,      \\end{split}\\ ] ] where @xmath136 and @xmath137 .",
    "below , @xmath134 represents either @xmath8 or @xmath138 and , correspondingly , @xmath139 represents either the discrete @xmath140 approximation @xmath78 of @xmath8 or the discrete @xmath141 approximation @xmath142 of @xmath143 .",
    "the general exponential stability estimate is based on the following version of the discrete gronwall inequality .",
    "[ lem : gronwall ] assume that @xmath144 are nonnegative , @xmath145 for all @xmath146 , and @xmath147 for all @xmath15 .",
    "then @xmath148 for @xmath149 .    by a standard discrete gronwall inequality @xcite , @xmath150 if @xmath151 @xmath152 for @xmath153 and @xmath154 . here , @xmath155 @xmath156 , and so @xmath157 , since @xmath158 .",
    "the result now follows if we take @xmath159 .",
    "[ th : estimate , exponential ] let @xmath139 be the @xmath0 , @xmath1 , @xmath53 , or @xmath54 solution of _ ( [ eq : linear , common])_. then there is a constant @xmath160 , depending only on the highest order @xmath161 , such that if @xmath162,l_p ) } \\leq 1 $ ] for @xmath163 , then @xmath164,l_p ) } \\leq      c \\|w_0\\|_{l_p } \\exp\\left ( \\sum_{m=1}^{n-1 } k_m c \\|b\\|_{l_{\\infty}([t_{m-1},t_m],l_p ) } \\right)\\ ] ] for @xmath163 , @xmath165 .    by lemma [ lem : explicit ]",
    ", we can write the @xmath0 , @xmath1 , @xmath53 , and @xmath54  methods in the form . applied to the linear model problem ( [ eq : linear , common ] ) , we have , and so @xmath166}(\\tau_{ij}(t ) ) ( bw)_i \\ , dt \\bigg| \\\\      & \\leq &      \\vert w_i(0 ) \\vert +      c \\int_0^{t_{ij } } \\vert ( bw)_i \\vert \\ , dt      \\leq      \\vert w_i(0 ) \\vert +      c \\int_0^{t_n } \\vert ( bw)_i \\vert \\ , dt ,    \\end{aligned}\\ ] ] where @xmath45 is smallest synchronized time level for which @xmath167 .",
    "it now follows that for all @xmath168 $ ] , we have @xmath169 , and so @xmath170 the result now follows by letting @xmath171,l_p)}$ ] .",
    "see @xcite for an extension to multiadaptive time - stepping of the strong stability estimate lemma 6.1 for parabolic problems in @xcite .",
    "in this section , we introduce a pair of carefully chosen interpolants , and , which are central to the a priori error analysis of the @xmath0 and @xmath1 methods .",
    "the interpolants are defined in section  [ sec : interpolation : interpolants ] . in section  [ sec : interpolation : basic ] , we discuss the interpolation of piecewise smooth functions , that is , the interpolation of functions which may be discontinuous within the interval of interpolation , and then present the basic general interpolation estimates for the two interpolants and .    for the a priori error analysis of the @xmath0 and @xmath1 methods , we will also need a special interpolation estimate for the function @xmath172 , where @xmath173 is the jacobian of the right - hand side @xmath174 of ( [ eq : u=f ] ) and @xmath142 is the discrete dual solution as defined in section  [ sec : definition ] , including estimates for the size of the jump in function value and derivatives for the function @xmath175 at points of discontinuity .",
    "these estimates are proved in section  [ sec : interpolation : special ] , based on a representation formula for the @xmath0 and @xmath1 solutions of ( [ eq : u=f ] ) .",
    "the interpolant @xmath176 } } : v \\rightarrow \\mathcal{p}^{q}([a , b])$ ] is defined by the following conditions : @xmath177}}v(a ) = v(a)\\quad \\text { and } \\quad { \\pi_{\\mathrm{cg}}^{[q]}}v(b ) = v(b ) , \\\\      & \\int_a^b \\big(v - { \\pi_{\\mathrm{cg}}^{[q]}}v\\big ) w \\ , dx = 0 \\quad\\forall w\\in\\mathcal{p}^{q-2}([a , b ] ) ,    \\end{split}\\ ] ] where @xmath58 denotes the set of functions that are piecewise and bounded on @xmath178 $ ] . in other words , is the polynomial of degree @xmath2 that interpolates @xmath71 at the end - points of the interval @xmath178 $ ] and additionally satisfies @xmath179 projection conditions .",
    "this is illustrated in figure [ fig : picg ] .",
    "we also define the dual interpolant as the standard @xmath180-projection onto .    } } v$ ] ( dashed ) of the function @xmath181 ( solid ) on @xmath123 $ ] for @xmath182 ( left ) and @xmath183 ( right).,title=\"fig:\",width=226 ] } } v$ ] ( dashed ) of the function @xmath181 ( solid ) on @xmath123 $ ] for @xmath182 ( left ) and @xmath183 ( right).,title=\"fig:\",width=226 ]    } } v$ ] ( dashed ) of the function @xmath181 ( solid ) on @xmath123 $ ] for @xmath184 ( left ) and @xmath183 ( right).,title=\"fig:\",width=226 ] } } v$ ] ( dashed ) of the function @xmath181 ( solid ) on @xmath123 $ ] for @xmath184 ( left ) and @xmath183 ( right).,title=\"fig:\",width=226 ]    the interpolant @xmath185 } } : v \\rightarrow \\mathcal{p}^{q}([a , b])$ ] is defined by the following conditions : @xmath186}}v(b ) = v(b ) , \\\\      &",
    "\\int_a^b \\big(v - { \\pi_{\\mathrm{dg}}^{[q]}}v\\big ) w \\ , dx = 0 \\quad\\forall w\\in\\mathcal{p}^{q-1}([a , b ] ) ,    \\end{split}\\ ] ] that is , is the polynomial of degree @xmath2 that interpolates @xmath71 at the right end - point of the interval @xmath178 $ ] and additionally satisfies @xmath2 projection conditions .",
    "this is illustrated in figure [ fig : pidg ] .",
    "the dual interpolant is defined similarly , with the difference being that the left end - point @xmath187 is used for interpolation .      to estimate the size of the interpolation error @xmath188 for a given function @xmath71",
    ", we express the interpolation error in terms of the regularity of @xmath71 and the length of the interpolation interval , @xmath189 . specifically , when @xmath190 ) \\subset v$ ] for some @xmath191 , we obtain estimates of the form @xmath192 where @xmath193)}$ ] denotes the maximum norm on @xmath178 $ ] .",
    "this estimate is a simple consequence of the peano kernel theorem @xcite if one can show that the interpolant @xmath194 ) \\subset v$ ] is linear and bounded on @xmath58 and that @xmath195 is exact on @xmath196 ) \\subset v$ ] , that is , @xmath197 for all @xmath198)$ ] .    in the general case , where the interpolated function @xmath71 is only piecewise smooth ( see figure [ fig : piecewise_smooth ] )",
    ", we also need to include the size of the jump @xmath199_x$ ] in function value and derivatives at each point @xmath200 of discontinuity within @xmath201 to measure the regularity of the interpolated function @xmath71 . in @xcite , we prove the following extensions of the basic estimate ( [ eq : basic ] ) .",
    "and its interpolant @xmath202.,width=377,height=151 ]    [ lem : estimate , piecewise ] if @xmath195 is linear and bounded on @xmath58 and is exact on @xmath203 ) \\subset v$ ] , then there is a constant @xmath204 such that for all @xmath71 piecewise @xmath205 on @xmath178 $ ] with discontinuities at @xmath206 , @xmath207_{x_j } \\big|\\ ] ] for @xmath208 , @xmath209 .",
    "[ lem : derivatives , piecewise ] if @xmath195 is linear and bounded on @xmath58 and is exact on @xmath203 ) \\subset v$ ] , then there is a constant @xmath204 such that for all @xmath71 piecewise @xmath205 on @xmath178 $ ] with discontinuities at @xmath206 , @xmath210_{x_j } \\big|\\ ] ] for @xmath211 .",
    "lemmas [ lem : estimate , piecewise ] and [ lem : derivatives , piecewise ] apply to both the @xmath176}}$ ] interpolant ( for @xmath212 ) and the @xmath185}}$ ] interpolant ( for @xmath213 ) defined in section [ sec : interpolation : interpolants ] .",
    "the linearity of both interpolants follows directly from the definition of the interpolants .",
    "the proofs that both interpolants are bounded and exact on @xmath203)$ ] are given in detail in @xcite and @xcite .      to prove a priori error estimates for @xmath0 and @xmath1 in section [ sec : apriori ] , we need to estimate the interpolation error @xmath214 for the function @xmath175 defined by @xmath215 we note that @xmath216 may be discontinuous within @xmath38 if @xmath38 contains a node for some other component , which is generally the case .",
    "this is illustrated in figure [ fig : varphi ] .",
    "note that on the right - hand side @xmath174 is linearized around a mean value of @xmath93 and @xmath8 .",
    "has a node within @xmath38 , then @xmath217 may be discontinuous within @xmath38 , causing @xmath216 to be discontinuous within @xmath38.,width=377,height=226 ]    an interpolation estimate for @xmath214 follows directly from lemma [ lem : estimate , piecewise ] . to use this estimate , we need to estimate the size of the jump in function value and derivatives at each internal node @xmath218 of the partition @xmath48 . to obtain this estimate",
    ", we need to make a number of additional assumptions on the right - hand side @xmath174 of ( [ eq : u=f ] ) and the partition @xmath48 .",
    "these assumptions are discussed in section [ sec : assumptions ] . based on the assumptions and the representation formula presented in section [ sec : representation ]",
    ", we obtain the jump estimates in section [ sec : jumpestimates ] and , finally , in section [ sec : special , estimate ] , the interpolation estimate for @xmath175 .",
    "the proof of jump estimates for the multiadaptive galerkin methods @xmath0 and @xmath1 is based on expressing the solutions as certain interpolants .",
    "these representations are obtained as follows .",
    "let @xmath78 be the @xmath0  or @xmath1  solution of ( [ eq : u=f ] ) and define , for @xmath30 , @xmath219 similarly , for @xmath142 the @xmath53  or @xmath54  solution of ( [ eq : dual ] ) , we define , for @xmath30 , @xmath220 where @xmath221 .",
    "we note that @xmath222 and @xmath223 .",
    "it now turns out that @xmath78 can be expressed as an interpolant of @xmath224 .",
    "similarly , @xmath142 can be expressed as an interpolant of @xmath225 .",
    "we present these representations in lemmas [ lem : representation , cg ] and [ lem : representation , dg ] .",
    "we remind the reader about the interpolants @xmath176}}$ ] , @xmath226}}$ ] , @xmath185}}$ ] , and @xmath227}}$ ] , defined in section [ sec : interpolation : interpolants ] .",
    "[ lem : representation , cg ] the @xmath0  solution @xmath78 of _ ( [ eq : u=f ] ) _ can expressed in the form . similarly , the @xmath53  solution @xmath142 of _ ( [ eq : dual ] ) _ can be expressed in the form @xmath228}}\\tilde{\\phi}$ ] , that is , @xmath229 } \\tilde{u}_i$ ] and @xmath230 } \\tilde{\\phi}_i$ ] on each local interval @xmath38 .",
    "the representation formulas follow by the definitions of the @xmath0 and @xmath53 methods and the interpolants @xmath176}}$ ] and @xmath226}}{}$ ] .",
    "see @xcite for details .",
    "[ lem : representation , dg ] the @xmath1  solution @xmath78 of _ ( [ eq : u=f ] ) _ can expressed in the form . similarly , the @xmath54  solution @xmath142 of _ ( [ eq : dual ] ) _ can be expressed in the form @xmath231}}\\tilde{\\phi}$ ] , that is , @xmath232 } \\tilde{u}_i$ ] and @xmath233 } \\tilde{\\phi}_i$ ] on each local interval @xmath38 .",
    "the representation formulas follow by the definitions of the @xmath1 and @xmath54 methods and the interpolants @xmath185}}$ ] and @xmath227}}{}$ ] .",
    "see @xcite for details .      to estimate the size of the jump in function value and derivatives for the function @xmath175 defined in ( [ eq : varphi ] ) , we make the following assumptions .",
    "given a time slab @xmath48 , assume that for each pair of local intervals @xmath38 and @xmath234 within the time slab , we have @xmath235 and @xmath236 for some @xmath237 and some @xmath238 .",
    "the dependence on @xmath239 in the error estimates is weak ( see remark [ rem : alpha ] ) , so assumption ( a2 ) does not prevent multiadaptivity .",
    "we also assume that the problem ( [ eq : u=f ] ) is autonomous , @xmath240 noting that the dual problem nevertheless will be nonautonomous in general .",
    "furthermore , we assume that @xmath241 where @xmath242 is defined for @xmath243 and @xmath244 by @xmath245 @xmath246 , with the norm @xmath246 defined by @xmath247 @xmath248 for all @xmath249 , and @xmath250 the @xmath15th - order tensor given by @xmath251 furthermore , we choose @xmath252 such that    @xmath253    for @xmath254 , and @xmath255_t\\big\\|_{l_{\\infty } } \\leq c_f \\sum_{n=0}^p",
    "c_x^{p - n } \\big\\|\\big[x^{(n)}\\big]_t\\big\\|_{l_{\\infty}}\\ ] ] for @xmath256 and any given @xmath257 , where @xmath258 denotes a constant such that @xmath259 for @xmath260 .",
    "note that @xmath261 defines a piecewise constant function on the partition @xmath42 .",
    "note also that assumption ( a4 ) implies that each @xmath262 is bounded by @xmath263 .",
    "we further assume that there is a constant @xmath264 such that .a5 @xmath265 for each local interval @xmath38 .",
    "we summarize the list of assumptions as follows :    \\(a )    the local orders @xmath40 are equal within each time slab ;    the local time steps @xmath266 are semiuniform within each time slab ;    @xmath174 is autonomous ;    @xmath174 and its derivatives are bounded ;    the local time steps @xmath266 are small .      to estimate higher - order derivatives , we face the problem of taking higher - order derivatives of @xmath267 with respect to @xmath268 . in lemmas [ lem :",
    "estimate , derivative ] and [ lem : estimate , jump ] , we present basic estimates for composite functions @xmath269 with @xmath270 and @xmath271 . the proofs are based on a straightforward application of the chain rule and leibniz rule and are given in full detail in @xcite .    [",
    "lem : estimate , derivative ] let @xmath243 be @xmath244 times differentiable in all its variables , let @xmath271 be @xmath272 times differentiable , and let @xmath258 be a constant such that @xmath273 for @xmath260 . then there is a constant @xmath274 such that @xmath275    [ lem : estimate , jump ] let @xmath243 be @xmath276 times differentiable in all its variables , let @xmath271 be @xmath272 times differentiable , except possibly at some @xmath277 , and let @xmath258 be a constant such that @xmath278 for @xmath260 . then there is a constant @xmath274 such that @xmath279_{t } \\right|      \\leq      c \\|v\\|_{d^{p+1}({\\mathbb{r } } ) }   \\sum_{n=0}^p",
    "c_x^{p - n } \\big\\|\\big[x^{(n)}\\big]_{t}\\big\\|_{l_{\\infty}}.\\ ] ]    we now prove estimates for derivatives and jumps of the @xmath0 or @xmath1 solution @xmath78 of the general nonlinear problem ( [ eq : u=f ] ) , under the assumptions listed in section [ sec : assumptions ] . similarly , one can obtain estimates for the discrete dual solution @xmath142 and the function @xmath175 defined in ( [ eq : varphi ] ) , from which the desired interpolation estimates follow .    to obtain estimates for the multiadaptive solution @xmath78 , we first prove estimates for the function @xmath224 defined in section [ sec : representation ]",
    ". the estimates for @xmath78 then follow by induction .    to simplify the estimates , we introduce the following notation . for given @xmath280 ,",
    "let @xmath281 be a constant such that @xmath282 for @xmath283 , we define @xmath284 .",
    "temporarily , we assume that there is a constant @xmath285 such that for each @xmath272 , .a5@xmath286 @xmath287 this assumption will be removed in lemma [ lem : u , derivatives ] . in the following lemma ,",
    "we use assumptions ( a1 ) , ( a3 ) , and ( a4 ) to derive estimates for @xmath224 in terms of @xmath288 and @xmath263 .",
    "[ lem : utilde ] let @xmath78 be the @xmath0  or @xmath1  solution of _ ( [ eq : u=f ] ) _ and define @xmath224 as in _ ( [ eq : tildefunction])_. if assumptions _ ( a1 ) _ , _ ( a3 ) _ , and _",
    "( a4 ) _ hold , then there is a constant @xmath289 such that @xmath290 and @xmath291_{t_{i , j-1}}\\big\\|_{l_{\\infty } }      \\leq      c \\sum_{n=0}^{p-1 } c_{u ,",
    "p-1}^{p - n } \\big\\|\\big[u^{(n)}\\big]_{t_{i , j-1}}\\big\\|_{l_{\\infty } } , \\quad p=1,{\\dotsc},\\bar{q}+1,\\ ] ] for each local interval @xmath38 , where @xmath292 is an internal node of the time slab @xmath48 .    by definition , @xmath293 , and",
    "so the results follow directly by lemmas [ lem : estimate , derivative ] and [ lem : estimate , jump ] , noting that @xmath294 .    by lemma [",
    "lem : utilde ] , we now obtain the following estimate for the size of the jump in function value and derivatives for @xmath78 .",
    "[ lem : u , jumps ] let @xmath78 be the @xmath0  or @xmath1  solution of _ ( [ eq : u=f])_. if assumptions _ ( a1)__(a5 ) _ and _ ( a5@xmath286 ) _ hold , then there is a constant @xmath295 such that @xmath296_{t_{i , j-1}}\\big\\|_{l_{\\infty } } \\leq      c k_{ij}^{r+1-p } c_{u , r}^{r+1 } , \\quad p=0,{\\dotsc},r+1 , \\quad r = 0,{\\dotsc},\\bar{q},\\ ] ] for each local interval @xmath38 , where @xmath292 is an internal node of the time slab @xmath48 .",
    "the proof is by induction .",
    "we first note that at @xmath297 , we have @xmath298_{t }      & = &   u_i^{(p)}(t^+ ) - \\tilde{u}_i^{(p)}(t^+ ) +      \\tilde{u}_i^{(p)}(t^+ ) - \\tilde{u}_i^{(p)}(t^- ) +      \\tilde{u}_i^{(p)}(t^-)-u_i^{(p)}(t^- ) \\\\      & \\equiv & e_+ + e_0 + e_- .",
    "\\end{aligned}\\ ] ] by lemma [ lem : representation , cg ] ( or lemma [ lem : representation , dg ] ) , @xmath78 is an interpolant of @xmath224 and so , by lemma [ lem : estimate , piecewise ] , we have @xmath299_{x } \\big\\vert\\ ] ] for @xmath208 and @xmath300 .",
    "note that the second sum starts at @xmath301 rather than at @xmath302 , since @xmath224 is continuous .",
    "similarly , we have @xmath303_{x } \\big\\vert.\\ ] ] to estimate @xmath304 , we note that @xmath305 for @xmath283 , since @xmath224 is continuous . for @xmath306 , lemma [ lem : utilde ]",
    "gives @xmath307_t \\vert      \\leq      c \\sum_{n=0}^{p-1 } c_{u , p-1}^{p - n } \\|[u^{(n)}]_t\\|_{l_{\\infty}}$ ] . by assumption ( a2 ) , it then follows that ( [ eq : u , jumps , first ] ) holds for @xmath308 .",
    "assume now that ( [ eq : u , jumps , first ] ) holds for @xmath309 .",
    "then , by lemma [ lem : utilde ] and assumption ( a5@xmath286 ) , it follows that @xmath310_{x}\\big\\|_{l_{\\infty } } \\\\        & \\leq        c k_{ij}^{\\bar{r}+1-p } c_{u,\\bar{r}}^{\\bar{r}+1 } +        c \\sum k_{ij}^{m - p } c_{u , m-1}^{m - n } k_{ij}^{(\\bar{r}-1)+1-n } c_{u,\\bar{r}-1}^{(\\bar{r}-1)+1 } \\\\        & \\leq        c k_{ij}^{\\bar{r}+1-p } c_{u,\\bar{r}}^{\\bar{r}+1 }        \\left ( 1 +        \\sum ( k_{ij } c_{u,\\bar{r}-1})^{m-1-n }        \\right )        \\leq        c k_{ij}^{\\bar{r}+1-p } c_{u,\\bar{r}}^{\\bar{r}+1}.        \\end{split}\\ ] ] similarly , we obtain the estimate @xmath311 .",
    "finally , we use lemma [ lem : utilde ] and assumption ( a5@xmath286 ) to obtain the estimate @xmath312_t\\big\\|_{l_{\\infty } }      \\leq      c \\sum_{n=0}^{p-1 } c_{u , p-1}^{p - n } k_{ij}^{(\\bar{r}-1)+1-n } c_{u,\\bar{r}-1}^{(\\bar{r}-1)+1 } \\\\      & = &      c k_{ij}^{\\bar{r}+1-p } c_{u,\\bar{r}}^{\\bar{r}+1 } \\sum_{n=0}^{p-1 }   ( k_{ij } c_{u,\\bar{r}})^{p-1-n }      \\leq      c k_{ij}^{\\bar{r}+1-p } c_{u,\\bar{r}}^{\\bar{r}+1}.    \\end{aligned}\\ ] ] summing up , we thus obtain @xmath313_t \\vert \\leq |e_+| + |e_0| + |e_-| \\leq c k_{ij}^{\\bar{r}+1-p } c_{u,\\bar{r}}^{\\bar{r}+1}$ ] , and so ( [ eq : u , jumps , first ] ) follows by induction .    by lemmas [ lem : utilde ] and [ lem : u , jumps ] , we now obtain the following estimate for derivatives of the solution @xmath78 .    [",
    "lem : u , derivatives ] let @xmath78 be the @xmath0  or @xmath1  solution of _ ( [ eq : u=f])_. if assumptions _ ( a1)__(a5 ) _ hold , then there is a constant @xmath314 such that @xmath315    by lemma [ lem : representation , cg ] ( or lemma [ lem : representation , dg ] ) , @xmath78 is an interpolant of @xmath224 and so , by lemma [ lem : estimate , piecewise ] , we have @xmath316_x \\big\\vert\\ ] ] for some constant @xmath317 . for @xmath318",
    ", we thus obtain the estimate @xmath319 by assumption ( a4 ) , and so ( [ eq : u , derivatives ] ) holds for @xmath318 .    for @xmath320 , assuming that ( a5@xmath286 ) holds for @xmath321 , we use lemmas [ lem : utilde ] and [ lem : u , jumps ] ( with @xmath322 ) and assumption ( a2 ) to obtain @xmath323_x\\big\\|_{l_{\\infty } } \\\\        & \\leq        c c_{u , p-1}^{p } +        c \\sum k_{ij}^{m - p } c_{u , m-1}^{m - n } k_{ij}^{(p-1)+1-n } c_{u , p-1}^{(p-1)+1 } \\\\        & \\leq        c c_{u , p-1}^{p } \\left ( 1 + \\sum ( k_{ij } c_{u , m-1})^{m - n } \\right )        \\leq        c c_{u , p-1}^{p } ,      \\end{split}\\ ] ] where @xmath324 .",
    "this holds for all components @xmath35 and all local intervals @xmath38 within the time slab @xmath48 , and so @xmath325 where by definition @xmath321 is a constant such that for @xmath326 . starting at @xmath318",
    ", we now define @xmath327 with @xmath328 .",
    "it then follows that ( a5@xmath286 ) holds for @xmath329 with @xmath330 , and thus @xmath331 where @xmath332 .",
    "we may thus define @xmath333 .",
    "continuing , we note that ( a5@xmath286 ) holds for @xmath334 , and thus @xmath335 where @xmath336 . in this way",
    ", we obtain a sequence of constants @xmath337 , depending only on @xmath338 , @xmath339 , and @xmath239 , such that @xmath340 for @xmath341 , and so ( [ eq : u , derivatives ] ) follows if we take @xmath342 .",
    "having now removed the additional assumption ( a5@xmath286 ) , we obtain the following version of lemma [ lem : u , jumps ] .    [",
    "lem : u , jumps , new ] let @xmath78 be the @xmath0  or @xmath1  solution of _ ( [ eq : u=f])_. if assumptions _ ( a1)__(a5 ) _ hold , then there is a constant @xmath314 such that @xmath343_{t_{i , j-1}}\\big\\|_{l_{\\infty } } \\leq      c k_{ij}^{\\bar{q}+1-p } c_f^{\\bar{q}+1 } , \\quad p=0,{\\dotsc},\\bar{q},\\ ] ] for each local interval @xmath38 , where @xmath292 is an internal node of the time slab @xmath48 .",
    "similarly , we obtain estimates for the discrete dual solution @xmath142 and the function @xmath175 . in lemma",
    "[ lem : varphi ] , we present the estimates for the function @xmath175 .    [",
    "lem : varphi ] let @xmath175 be defined as in _ ( [ eq : varphi])_. if assumptions _ ( a1)__(a5 ) _ hold , then there is a constant @xmath314 such that @xmath344 and @xmath345_x \\big|      \\leq      c k_{ij}^{r_{ij}-p } c_f^{r_{ij}+1 } \\|\\phi\\|_{l_{\\infty}(\\mathcal{t},l_{\\infty } ) }      \\quad \\forall x\\in \\mathcal{n}_{ij } , \\quad p=0,{\\dotsc},q_{ij}-1,\\ ] ] with @xmath346 for the @xmath0 method and @xmath347 for the @xmath1 method .",
    "this holds for each local interval @xmath38 within the time slab @xmath48 .      using the basic interpolation estimate of section [ sec : interpolation : basic ] , we now obtain the following important interpolation estimates for the function @xmath175 .    [",
    "lem : interpolationestimate , phi ] let @xmath175 be defined as in _",
    "( [ eq : varphi])_. if assumptions _ ( a1)__(a5 ) _ hold , then there is a constant @xmath314 such that @xmath348 } \\varphi_i - \\varphi_i \\big\\|_{l_{\\infty}(i_{ij } ) }      \\leq      c k_{ij}^{q_{ij}-1 } c_f^{q_{ij } } \\|\\phi\\|_{l_{\\infty}(\\mathcal{t},l_{\\infty } ) } , \\quad q_{ij } = \\bar{q } \\geq 2,\\ ] ] and @xmath349 } \\varphi_i - \\varphi_i \\big\\|_{l_{\\infty}(i_{ij } ) }      \\leq      c k_{ij}^{q_{ij } } c_f^{q_{ij}+1 } \\|\\phi\\|_{l_{\\infty}(\\mathcal{t},l_{\\infty } ) } , \\quad q_{ij } = \\bar{q } \\geq 1,\\ ] ] for each local interval @xmath38 within the time slab @xmath48 .    to prove ( [ eq : varphi , estimate , cg ] ) , we use lemma [ lem : estimate , piecewise ] , with @xmath350 and @xmath283 , together with lemma [ lem : varphi ] , to obtain @xmath351 } \\varphi_i - \\varphi_i \\big\\|_{l_{\\infty}(i_{ij } ) }        \\leq        c k_{ij}^{q_{ij}-1 } \\big\\| \\varphi_i^{(q_{ij}-1 ) } \\big\\|_{l_{\\infty}(i_{ij } ) } +        c \\sum_{x\\in \\mathcal{n}_{ij } } \\sum_{m=0}^{q_{ij}-2 } k_{ij}^{m } \\big\\vert \\big [ \\varphi_i^{(m ) } \\big]_x \\big\\vert \\\\        & \\quad \\leq        c k_{ij}^{q_{ij}-1 } c_f^{q_{ij } } \\|\\phi\\|_{l_{\\infty}(\\mathcal{t},l_{\\infty } ) } +        c \\sum_{x\\in \\mathcal{n}_{ij } } \\sum_{m=0}^{q_{ij}-2 } k_{ij}^{m }        k_{ij}^{q_{ij}-m } c_f^{q_{ij}+1 } \\|\\phi\\|_{l_{\\infty}(\\mathcal{t},l_{\\infty } ) } \\\\        & \\quad =        c k_{ij}^{q_{ij}-1 } c_f^{q_{ij } } \\|\\phi\\|_{l_{\\infty}(\\mathcal{t},l_{\\infty } ) } +        c        k_{ij}^{q_{ij } } c_f^{q_{ij}+1 } \\|\\phi\\|_{l_{\\infty}(\\mathcal{t},l_{\\infty } ) } ,      \\end{split}\\ ] ] from which the estimate follows . the estimate for @xmath352 } \\varphi_i - \\varphi_i$ ]",
    "is obtained similarly .",
    "[ rem : alpha ] note that there is only a weak dependence on @xmath339 and @xmath239 , since the jump term contains an extra factor @xmath266 .",
    "if higher - order terms can be ignored , then the dependence on @xmath339 and @xmath239 can be removed .",
    "to prove a priori error estimates for the @xmath0 and @xmath1 methods , we derive error representations in section [ sec : errorrepresentation ] and then obtain the a priori error estimates in section  [ sec : aprioriestimates ] for the general nonlinear case .",
    "we refer to @xcite for a sharp a priori error estimate in the case of a parabolic model problem .      for each of the two methods , @xmath0  and @xmath1",
    ", we represent the error in terms of the discrete dual solution @xmath142 and an interpolant @xmath93 of the exact solution @xmath8 of ( [ eq : u=f ] ) , using the special interpolants or defined in section [ sec : interpolation ] .",
    "we write the error @xmath102 in the form @xmath353 where @xmath354 is represented in terms of the discrete dual solution and the residual of the interpolant .",
    "an estimate for the second part of the error , @xmath355 , follows directly from an interpolation estimate .    in lemma [ lem : errorrepresentation , cg ] , we present the error representation for the @xmath0  method , and then present the corresponding representation for the @xmath1  method in lemma [ lem : errorrepresentation , dg ] .",
    "the error representations are obtained directly by choosing @xmath356 as a test function for the discrete dual problems ( [ eq : mcgqd ] ) and ( [ eq : mdgqd ] ) .",
    "[ lem : errorrepresentation , cg ] let @xmath78 be the @xmath0  solution of _ ( [ eq : u=f ] ) _ , let @xmath142 be the corresponding @xmath53  solution of the dual problem _ ( [ eq : dual ] ) _ , and let @xmath93 be any trial space approximation of the exact solution @xmath8 of _ ( [ eq : u=f ] ) _ that interpolates @xmath8 at the end - points of every local interval .",
    "then @xmath357 where @xmath354 .",
    "[ lem : errorrepresentation , dg ] let @xmath78 be the @xmath1  solution of _ ( [ eq : u=f ] ) _ , let @xmath142 be the corresponding @xmath54  solution of the dual problem _ ( [ eq : dual ] ) _ , and let @xmath93 be any trial space approximation of the exact solution @xmath8 of _ ( [ eq : u=f ] ) _ that interpolates @xmath8 at the right end - point of every local interval",
    ". then @xmath358_{i , j-1 } \\phi_i\\big(t_{i , j-1}^+\\big ) +        \\int_{i_{ij } } r_i(\\pi u,\\cdot ) \\phi_i \\ , dt        \\right],\\ ] ] where @xmath354 .    with a special choice of interpolant , and respectively , we obtain the following versions of the error representations .",
    "[ cor : errorrepresentation , cg ] let @xmath78 be the @xmath0  solution of _ ( [ eq : u=f ] ) _ and let @xmath142 be the corresponding @xmath53  solution of the dual problem _",
    "( [ eq : dual])_. then @xmath359}}u,\\cdot\\big ) - f(u,\\cdot),\\phi\\big ) \\ , dt.\\ ] ]    integrate by parts and use the definition of the interpolant @xmath176}}$ ] .",
    "[ cor : errorrepresentation , dg ] let @xmath78 be the @xmath1  solution of _ ( [ eq : u=f ] ) _ and let @xmath142 be the corresponding @xmath54  solution of the dual problem _",
    "( [ eq : dual])_. then @xmath360}}u,\\cdot\\big ) - f(u,\\cdot),\\phi\\big ) \\ , dt.\\ ] ]    integrate by parts and use the definition of the interpolant @xmath185}}$ ] .      using the error representations of section",
    "[ sec : errorrepresentation ] , the stability estimates of section [ sec : stability ] , and the interpolation estimates of section [ sec : interpolation ] , we now prove our main results : a priori error estimates for general order @xmath0 and @xmath1 .",
    "[ th : apriori , cg ] let @xmath78 be the @xmath0  solution of _ ( [ eq : u=f ] ) _ and let @xmath142 be the corresponding @xmath53  solution of the dual problem _ ( [ eq : dual])_. then there is a constant @xmath204 such that @xmath361,l_2)},\\ ] ] where @xmath362 for @xmath363 , and where the stability factor @xmath21 is given by @xmath364}}u , u , \\cdot ) \\phi\\|_{l_2 } \\ , dt$ ] . furthermore",
    ", if assumptions _ ( a1)__(a5 ) _ hold , then there is a constant @xmath365 such that @xmath366,l_1)},\\ ] ] where @xmath367 for @xmath363 , and where the stability factor @xmath368 is given by @xmath369    by corollary [ cor : errorrepresentation , cg ] , we obtain @xmath370}}u,\\cdot\\big ) - f(u,\\cdot),\\phi\\big ) \\ , dt      = \\int_0^t \\big({\\pi_{\\mathrm{cg}}^{[q]}}u - u , j^{\\top}\\big({\\pi_{\\mathrm{cg}}^{[q]}}u , u,\\cdot\\big ) \\phi\\big ) \\",
    ", dt.\\ ] ] by lemma [ lem : estimate , piecewise ] , it now follows that @xmath371,l_2 ) } \\int_0^t \\big\\|j^{\\top}\\big({\\pi_{\\mathrm{cg}}^{[q]}}u , u , \\cdot\\big ) \\phi\\big\\|_{l_2 } \\",
    ", dt,\\ ] ] which proves ( [ eq : estimate , cg,1 ] ) . to prove ( [ eq : estimate , cg,2 ] ) , we note that by definition , @xmath372 } u_i - u_i$ ] is orthogonal to @xmath373 for each local interval @xmath38 , and so , recalling that @xmath374}}u ,",
    "u , \\cdot ) \\phi$ ] , @xmath375 } u_i - u_i\\big ) \\varphi_i \\ , dt      =      \\sum_{i , j }      \\int_{i_{ij } } \\big({\\pi_{\\mathrm{cg}}}^{[q_{ij } ] } u_i - u_i\\big ) \\big(\\varphi_i - { \\pi_{\\mathrm{cg}}}^{[q_{ij}-2 ] } \\varphi_i\\big ) \\ , dt ,    \\end{aligned}\\ ] ] where we take @xmath376 } \\varphi_i \\equiv 0 $ ] for @xmath377 . by lemmas [ lem : estimate , piecewise ] and [ lem : interpolationestimate , phi ]",
    ", it now follows that @xmath378 } u - u,\\varphi - { \\pi_{\\mathrm{cg}}}^{[q-2 ] } \\varphi\\big)\\big| \\ , dt \\\\        & =        \\int_0^t \\big|\\big(k^{q-1 } c_f^{q-1 } \\big({\\pi_{\\mathrm{cg}}}^{[q ] } u - u\\big ) , k^{-(q-1 ) } c_f^{-(q-1 ) } \\big(\\varphi - { \\pi_{\\mathrm{cg}}}^{[q-2 ] } \\varphi\\big)\\big)\\big| \\ , dt \\\\        & \\leq        c \\big\\|k^{2q } \\bar{\\bar{u}}^{(2q)}\\big\\|_{l_{\\infty}([0,t],l_1 ) }        \\int_0^t c_f \\|\\phi\\|_{l_{\\infty}(\\mathcal{t},l_{\\infty } ) } \\ , dt \\\\        & = c \\bar{s}(t ) \\big\\|k^{2q } \\bar{\\bar{u}}^{(2q)}\\big\\|_{l_{\\infty}([0,t],l_1 ) } ,      \\end{split}\\ ] ] where @xmath379 .",
    "similarly , we obtain the following a priori error estimate for the @xmath1 method .",
    "[ th : apriori , dg ] let @xmath78 be the @xmath1  solution of _ ( [ eq : u=f ] ) _ and let @xmath142 be the corresponding @xmath54  solution of the dual problem _",
    "( [ eq : dual])_. then there is a constant @xmath204 such that @xmath380,l_2)},\\ ] ] where @xmath362 for @xmath363 , and where the stability factor @xmath21 is given by @xmath381}}u , u , \\cdot ) \\phi\\|_{l_2 } \\ , dt$ ] . furthermore ,",
    "if assumptions _ ( a1)__(a5 ) _ hold , then there is a constant @xmath365 such that @xmath382,l_1)},\\ ] ] where @xmath383 for @xmath363 , and where the stability factor @xmath368 is given by @xmath384    using the stability estimate proved in section [ sec : stability ] , we obtain the following bound for the stability factor @xmath368 .    [ lem : stability ] assume that @xmath385 for all time slabs @xmath43 , with @xmath386 the constant in theorem [ th : estimate , exponential ] , and take @xmath387 in ( [ eq : dual ] ) .",
    "then @xmath388 where @xmath389 } c_f$ ] .",
    "_ by theorem [ th : estimate , exponential ] , we obtain @xmath390 and so @xmath391    finally , we rewrite the estimates of theorems [ th : apriori , cg ] and [ th : apriori , dg ] for special choices of data @xmath392 and @xmath393 .",
    "we first take @xmath394 . with @xmath395 for @xmath396 , @xmath397 for @xmath398 , and",
    "@xmath399 we obtain and so @xmath400 by an inverse estimate . by definition",
    ", it follows that @xmath401 .",
    "note that for this choice of @xmath393 , we have @xmath402,l_2)}=\\|g\\|_{l_1([0,t],l_{\\infty})}=1 $ ] .    we also make the choice @xmath387 .",
    "noting that @xmath403 , since @xmath404 , we obtain @xmath405 for @xmath406 and @xmath407 for @xmath408 , and @xmath409 for @xmath410 .",
    "note that for both choices of @xmath392 , we have @xmath411 .    with these choices of data , we obtain the following versions of the a priori error estimates .",
    "[ cor : apriori , cg ] let @xmath78 be the @xmath0  solution of _ ( [ eq : u=f])_. then there is a constant @xmath204 such that @xmath412,l_{\\infty } ) }      \\leq      c s(t ) \\big\\|k^{q+1 } \\bar{u}^{(q+1)}\\big\\|_{l_{\\infty}([0,t],l_2)},\\ ] ] where the stability factor @xmath364}}u , u , \\cdot ) \\phi\\|_{l_2 } \\ , dt$ ] is taken as the maximum over @xmath394 and @xmath402,l_{\\infty})}=1 $ ] .",
    "furthermore , if assumptions _ ( a1)__(a5 ) _ and the assumptions of lemma  [ lem : stability ] hold , then there is a constant @xmath413 such that @xmath414,l_1)}\\ ] ] for @xmath415 , where the stability factor @xmath368 is given by @xmath416 .",
    "[ cor : apriori , dg ] let @xmath78 be the @xmath1  solution of _ ( [ eq : u=f])_. then there is a constant @xmath204 such that @xmath412,l_{\\infty } ) }      \\leq      c s(t ) \\big\\|k^{q+1 } \\bar{u}^{(q+1)}\\big\\|_{l_{\\infty}([0,t],l_2)},\\ ] ] where the stability factor @xmath381}}u , u , \\cdot ) \\phi\\|_{l_2 } \\ , dt$ ] is taken as the maximum over @xmath394 and @xmath402,l_{\\infty})}=1 $ ] .",
    "furthermore , if assumptions _ ( a1)__(a5 ) _ and the assumptions of lemma  [ lem : stability ] hold , then there is a constant @xmath413 such that @xmath417,l_1)}\\ ] ] for @xmath415 , where the stability factor @xmath368 is given by @xmath416 .",
    "the stability factor @xmath21 that appears in the a priori error estimates is obtained from the discrete solution @xmath142 of the dual problem ( [ eq : linear , dual ] ) , and can thus be computed by solving the discrete dual problem .",
    "numerical computation of the stability factor reveals the exact nature of the problem , in particular , whether or not the problem is parabolic ; if the stability factor is of unit size and does not grow , then the problem is parabolic by definition ; see @xcite .",
    "the error representations presented in section [ sec : errorrepresentation ] are based on the galerkin orthogonalities of the @xmath0  and @xmath1  methods . in particular , for the @xmath0 method , we assume that @xmath418 in the presence of quadrature errors , this term is nonzero . as a result , we obtain an additional term of the form @xmath419 where @xmath420 is the interpolant of @xmath174 corresponding the quadrature rule that is used .",
    "a convenient choice of quadrature for the @xmath0 method is lobatto quadrature with @xmath421 nodal points @xcite , which means that the quadrature error is of order @xmath422 and so ( super)convergence of order @xmath26 is obtained also in the presence of quadrature errors .",
    "similarly for the @xmath1  method , we use radau quadrature with @xmath423 nodal points , which means that the quadrature error is of order @xmath424 , and so the @xmath27 convergence order of @xmath1 is also maintained under quadrature .",
    "we conclude by demonstrating the convergence of the multiadaptive methods in the case of a simple test problem .",
    "consider the problem @xmath425 on @xmath123 $ ] with initial condition @xmath426 .",
    "the solution is given by @xmath427 .",
    "for given @xmath428 , we take @xmath429 for @xmath430 , @xmath431 for @xmath432 , and @xmath433 for @xmath434 , and study the convergence of the error @xmath435 with decreasing @xmath436 . from the results presented in figure [ fig : convergence ] and tables [ tab : convergence , cg ] and [ tab : convergence , dg ] ,",
    "it is clear that the predicted order of convergence is obtained ."
  ],
  "abstract_text": [
    "<S> the multiadaptive continuous / discontinuous galerkin methods @xmath0 and @xmath1 for the numerical solution of initial value problems for ordinary differential equations are based on piecewise polynomial approximation of degree @xmath2 on partitions in time with time steps which may vary for different components of the computed solution . in this paper , we prove general order a priori error estimates for the @xmath0 and @xmath1 methods . to prove the error estimates </S>",
    "<S> , we represent the error in terms of a discrete dual solution and the residual of an interpolant of the exact solution . </S>",
    "<S> the estimates then follow from interpolation estimates , together with stability estimates for the discrete dual solution .    </S>",
    "<S> multiadaptivity , individual time steps , local time steps , ode , continuous galerkin , discontinuous galerkin , mcg(@xmath2 ) , mdg(@xmath2 ) , a priori error estimates , existence , stability , peano kernel theorem , interpolation estimates , piecewise smooth    65l05 , 65l07 , 65l20 , 65l50 , 65l60 , 65l70    10.1137/040604133 </S>"
  ]
}
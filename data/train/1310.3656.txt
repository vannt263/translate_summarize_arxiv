{
  "article_text": [
    "the notion of strong bisimilarity for different transition systems plays an important role in theoretical computer science .",
    "however , in some cases this relation proves to be too strong an equivalence .",
    "for instance in milner s calculus of communicating systems @xcite , which is among the most widely studied process calculi , one considers a special computation branch that is silent .",
    "this special branch , sometimes also called invisible or internal , is allowed to take several steps and in some sense remain neutral to the structure of a process .",
    "strong bisimulation treats all parts of computation equally and does not distinguish between visible and invisible steps .",
    "the desirable behavioural equivalence should take the nature of internal activities into account .",
    "there are several non - equivalent approaches towards defining weaker versions of bisimulation for transition systems with silent steps @xcite . in this paper",
    "we focus on weak bisimulation proposed by milner @xcite and its generalization .",
    "analogues of milner s weak bisimulation are established for different deterministic and probabilistic transition systems ( e.g. @xcite ) . from now on the term weak bisimulation refers to milner s relation and its analogues .",
    "we have witnessed a rapid development of the theory of coalgebras as a unifying theory of state - based systems @xcite .",
    "coalgebras to some extent are one - step entities in their nature",
    ". they can be thought of , and understood , as a representation of a single step of computation of a given process .",
    "strong bisimulation , unlike weak bisimulation , has been well captured coalgebraically ( see e.g. @xcite ) .",
    "different approaches to defining weak bisimulations for coalgebras have been presented in the literature .",
    "the earliest paper is @xcite , where rutten studies weak bisimulations for while programs . in @xcite rothe",
    "introduces a definition of weak bisimulation for coalgebras by translating a coalgebraic structure into a labelled transition system .",
    "this construction works for coalgebras of different types but does not cover the distribution functor , hence it is not applicable to different types of probabilistic systems . in @xcite",
    "weak bisimulations are introduced via weak homomorphisms . as noted by sokolova _",
    "_ in @xcite the construction from @xcite does not lead to intuitive results for probabilistic systems . in @xcite sokolova _ et al . _",
    "present a definition of weak bisimulation for classes of coalgebras of type functors obtained from bifunctors . in that paper , weak bisimulation of a system",
    "is defined as a strong bisimulation of a transformed system . however",
    ", a drawback of the proposed approach is that the transformation of a system does not follow from any general categorical construction .",
    "finally , in @xcite we present a new approach to defining weak bisimulation in two different ways , proposed in the setting of coalgebras whose type is an ordered functor . the key ingredient of the definitions is the notion of a saturator . as noted by us in @xcite",
    "the saturator is sometimes too general to model only weak bisimulation and may be used to define other known equivalences , e.g. delay bisimulation @xcite .",
    "moreover , the saturators from @xcite do not arise in any natural way .",
    "the aim of this paper is to present a general coalgebraic setting in which it is possible to introduce weak bisimulation via saturation for coalgebras whose type is a monad satisfying additional properties . here , the saturation of a coalgebra @xmath0 is reduced to taking its abstract reflexive and transitive closure @xmath1 in the so - called kleisli category for the given monad . unlike in our previous work @xcite , where the saturator was an arbitrary closure operator , the saturation in this paper",
    "is uniquely determined by the monadic structure of the type of coalgebras taken into consideration .",
    "the framework for defining weak bisimulation presented here is supported by the following two examples of models :    * labelled transition systems , * simple segala systems .",
    "unfortunately , some examples of transition systems with a well established coalgebraic treatment and a notion of weak bisimulation fail to fit the proposed framework directly .",
    "fully probabilistic systems @xcite ( see also @xcite for a coalgebraic perspective on these systems ) are among such examples .",
    "we discuss these limitations briefly in the last section of the paper .",
    "the paper is organized as follows . in section",
    "[ section : basics ] we present basic notions and facts in the theory of algebra , coalgebra , and category theory . in section [ section : lts_coalgebraically ]",
    "we recall different but equivalent ways to define weak bisimulation for labelled transition systems .",
    "moreover , we show how to view labelled transition systems from the coalgebraic perspective and how to deal with silent and visible transition labels by introducing a monadic structure on the labelled transition systems functor or embedding it into a monad . in section  [ section : hiding_invisible_transitions ] we generalize the idea of handling the invisible part of computation to any functor of the form @xmath2 , where @xmath3 is a monad and @xmath4 an endofunctor satisfying some extra properties .",
    "section [ section : saturation ] develops the theory of ordered saturation monads .",
    "these monads prove to be useful in section  [ section : weak_bisimulation ] , where we introduce weak bisimulation for coalgebras whose type is an ordered saturation monad on the category of sets and mappings . in section [ section : weak_bisimulation_final_semantics ] we present a general approach towards defining weak bisimulation semantics via final semantics for coalgebras of a monadic type whose kleisli category is order enriched",
    ". section  [ section : segala ] is devoted to ( simple ) segala systems and their weak bisimulation .",
    "finally , section [ section : summary ] is a summary .",
    "we assume the reader is familar with the following basic category theory notions and their properties : a category , a functor , a ( co)limit and an adjunction ( see e.g. @xcite for an introduction to category theory ) .",
    "let @xmath5 be a category and let @xmath6 be a functor .",
    "@xmath4-algebra _ is a morphism @xmath7 in @xmath5 . for two @xmath4-algebras @xmath7 and @xmath8 a morphism @xmath9 in @xmath5",
    "is called _ homomorphism _ provided that @xmath10 .",
    "the category of all @xmath4-algebras and homomorphisms between them is denoted by @xmath11 .",
    "dually , an _ @xmath4-coalgebra _ , is a morphism @xmath12 in @xmath5 .",
    "the domain @xmath13 of @xmath14 is called _ carrier _ and the morphism @xmath14 is sometimes also called _",
    "structure_. a _ homomorphism _ from an @xmath4-coalgebra @xmath12 to an @xmath4-coalgebra @xmath15 is a morphism @xmath16 in @xmath5 such that @xmath17 .",
    "the category of all @xmath4-coalgebras and homomorphisms between them is denoted by @xmath18 .",
    "many important transition systems can be captured using coalgebras . here",
    "are some examples . in this subsection @xmath19",
    "is a fixed set .",
    "kripke frames @xcite , one of the most widely studied semantics of modal logic ( see e.g. @xcite ) , are modelled as coalgebras of the type @xmath20 , where @xmath21 denotes the powerset functor .",
    "labelled transition systems ( see e.g. @xcite ) can be viewed as coalgebras of the type @xmath22 @xcite .",
    "see also section  [ section : lts_coalgebraically ] for a more detailed description of the coalgebraic perspective on these systems .",
    "non - deterministic automata ( e.g. @xcite ) are modelled coalgebraically as systems of the type @xmath23 , where @xmath24 ( e.g. @xcite ) .",
    "given a coalgebra @xmath25 a state @xmath26 is _ final _ whenever @xmath27 .",
    "we will elaborate more on these systems in section [ section : weak_bisimulation_final_semantics ] ( see also section [ section : hiding_invisible_transitions ] and [ section : saturation ] ) where we present an interesting example of final weak bisimulation semantics for coalgebras whose base category is different from @xmath28 .",
    "fully probabilistic systems @xcite are modelled as @xmath29-coalgebras @xcite . here",
    ", @xmath30 denotes the distribution functor which assigns to any set @xmath13 the set @xmath31\\mid \\sum_{x\\in x } \\phi(x ) = 1\\}\\ ] ] of discrete measures and to any mapping @xmath32 the mapping @xmath33 defined for @xmath34 by @xmath35 in this paper we also work with the subdistribution functor @xmath36 which extends the functor @xmath30 .",
    "this functor is defined in the same way as the distribution functor @xmath30 , but the equality @xmath37 is replaced in its definition by the inequality @xmath38 .",
    "( simple ) probabilistic systems @xcite , known in the coalgebraic literature under the name of ( simple ) segala systems , are modelled as coalgebras of the type @xmath39 and @xmath40 respectively @xcite . in this paper",
    "we will deviate from this approach and consider segala systems as coalgebras of the type @xmath41 .",
    "this treatment is highly inspired by @xcite . for a detailed definition of @xmath42 and a thorough discussion about consequences of this treatment the reader",
    "is referred to section [ section : segala ] .    for an endofunctor @xmath43 and an @xmath4-coalgebra @xmath12",
    "we define a relation @xmath44 ( i.e. a jointly monic span in @xmath5 ) to be _ aczel - mendler bisimulation _ or simply _ bisimulation _",
    "@xcite provided that there is a structure @xmath45 making @xmath46 and @xmath47 homomorphisms between @xmath48 and @xmath14 . in other words ,",
    "the following diagram commutes : @xmath49 | {   }          x\\ar[d]_{\\alpha } & r\\ar @ { } [ dr ] | {   }",
    "\\ar[d]_\\gamma \\ar[l]_{\\pi_1 } \\ar[r]^{\\pi_2 } & x \\ar[d]^{\\alpha } \\\\          fx & fr\\ar[l]^{f\\pi_1 } \\ar[r]_{f\\pi_2 } & fx      } \\ ] ] it is worth noting that there are other approaches to capture the notion of bisimulation coalgebraically which are summarized in @xcite .",
    "we choose to define strong bisimulation in aczel - mendler style because our notion of weak bisimulation introduced in this paper can be easily related to this definition .",
    "see section [ section : weak_bisimulation ] for details .",
    "a _ monad _ on @xmath5 is a triple @xmath50 , where @xmath51 is an endofunctor and @xmath52 , @xmath53 are two natural transformations for which the following diagrams commute : @xmath54_{t\\mu } \\ar[r]^{\\mu_t } & t^2\\ar[d]^{\\mu } & & t\\ar[d]_{\\eta_t}\\ar[r]^{t\\eta}\\ar@{=}[dr ] & t^2\\ar[d]^{\\mu } \\\\",
    "t^2 \\ar[r]_{\\mu } & t & & t^2 \\ar[r]_\\mu & t } \\ ] ] the transformation @xmath55 is called _ multiplication _ and @xmath56 _ unit_. any monad gives rise to the kleisli category for @xmath3 .",
    "to be more precise , if @xmath50 is a monad on a category @xmath5 then the _ klesli category _",
    "@xmath57 for @xmath3 has the class of objects equal to the class of objects of @xmath5 and for two objects @xmath58 in @xmath57 we have @xmath59 with the composition @xmath60 in @xmath57 defined between two morphisms @xmath61 and @xmath62 by @xmath63 .",
    "[ example : kleisli_powerset ] the powerset endofunctor @xmath64 is a monad whose multiplication @xmath65 and unit @xmath66 are given on their @xmath13-components by : @xmath67 the category @xmath68 consists of sets as objects and maps of the form @xmath69 as morphisms .",
    "for @xmath70 and @xmath71 the composition @xmath72 is as follows : @xmath73 for any two sets @xmath58 there is a bijective correspondence between maps @xmath69 and binary relations between elements of @xmath13 and @xmath74 .",
    "indeed , for @xmath70 we put @xmath75 , @xmath76 and for @xmath77 we define @xmath78 .",
    "it is now easy to see that the category @xmath68 is isomorphic to the category @xmath79 of sets as objects , binary relations as morphisms and relation composition as morphism composition .",
    "the distribution functor @xmath30 carries a monadic structure , with @xmath55 and @xmath56 given as follows . for any set @xmath13 define the @xmath13-component of @xmath56 by @xmath80 , where @xmath81 is the dirac distribution for @xmath82 i.e. @xmath83 and @xmath84 if @xmath85 .",
    "the @xmath13-component of @xmath55 is given by : @xmath86 the subdistribution functor @xmath36 is also a monad with @xmath55 and @xmath56 defined in the same manner .",
    "a _ filter _ on a set @xmath13 is a collection @xmath87 of subsets of @xmath13 such that    * @xmath88 , * if @xmath89 then @xmath90 , * if @xmath91 and @xmath92 then @xmath93 .",
    "we define the filter functor @xmath94 which assigns to any set @xmath13 the set @xmath95 of all filters on @xmath13 and to any map @xmath32 the map @xmath96 which assigns to any filter @xmath87 the smallest filter containing the family @xmath97 .",
    "the functor @xmath94 carries a monadic structure @xmath98 given as follows ( see e.g. @xcite ) : @xmath99 where @xmath100 with @xmath101 defined as the set of all filters on @xmath13 containing @xmath102 .    since most of the time we work with two categories at once : @xmath5 and @xmath57 , morphisms in @xmath5 will be denoted using standard arrows @xmath103 , whereas for morphisms in @xmath57 we will use the symbol @xmath104[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}$ ] . for any object @xmath13 in @xmath5 ( or equivalently in @xmath57 ) the identity map from @xmath13 to itself in @xmath5",
    "will be denoted by @xmath105 and in @xmath57 by @xmath106 or simply @xmath107 if the domain can be deduced from the context .",
    "the category @xmath5 is a subcategory of @xmath57 where the inclusion functor @xmath108 sends each object @xmath109 to itself and each morphism @xmath32 in @xmath5 to the morphism @xmath110[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}y$ ] given by @xmath111 every monad @xmath50 on a category @xmath5 arises from the composition of a left and a right adjoint given by : @xmath112 ^ -{^{\\sharp}}\\ar@{}[r]|-\\perp & \\mathcal{k}l(t)\\ar@<1.5ex>[l]^-{u_t } , } \\ ] ] where @xmath113 is a functor defined as follows . for any object @xmath114 ( i.e. @xmath109 ) the object @xmath115 is given by @xmath116 and for any morphism @xmath117[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}y$ ] in @xmath57 ( i.e. @xmath61 in @xmath5 ) the morphism @xmath118 is given by @xmath119 .",
    "we say that a functor @xmath43 _ lifts to _ an endofunctor @xmath120 provided that the following diagram commutes : @xmath121^{\\overline{f } } & \\mathcal{k}l(t )   \\\\ \\mathsf{c}\\ar[u]^{\\sharp } \\ar[r]_f & \\mathsf{c}\\ar[u]_{\\sharp } } \\ ] ] given a functor @xmath43 there is a one - to - one correspondence between its liftings @xmath122 and _ distributive laws _ @xmath123 between the functor @xmath4 and the monad @xmath3 ( see e.g. @xcite for a detailed definition and properties ) . given a distributive law @xmath124 we define @xmath120 by : @xmath125 conversely , a lifting @xmath126 gives rise to @xmath124 defined on its @xmath13-component by @xmath127 .",
    "a monad @xmath50 on a cartesian closed category @xmath5 is called _ strong _ if there is a natural transformation @xmath128 called _ tensorial strength _ satisfying the strength laws listed in e.g. @xcite .",
    "existence of strength guarantees that for any object @xmath19 the functor @xmath129 admits a lifting @xmath130 defined as follows .",
    "for any object @xmath114 we put @xmath131 and for any morphism @xmath117[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}y$ ] ( i.e. @xmath61 in @xmath5 ) we define @xmath132 existence of the transformation @xmath133 is not a strong requirement .",
    "for instance all monads on @xmath28 are strong .",
    "[ example : lifting_of_powerset ] take @xmath134 and @xmath135 .",
    "the strength @xmath136 is given by the following formula : @xmath137 hence , the functor @xmath138 lifts to @xmath139 , where for any object @xmath140 and any morphism @xmath117[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}y$ ] in @xmath68 we have : @xmath141[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}\\overline{\\sigma } y ; ( \\sigma , x ) \\mapsto \\{(\\sigma , y)\\mid y\\in f(x)\\}.\\end{aligned}\\ ] ]      in this paper we will often work with monads on kleisli categories . here , we list basic properties of such monads .",
    "everything presented below follows easily by elementary properties of adjunctions and liftings ( see e.g. @xcite and the previous subsection ) . for",
    "a monad @xmath50 on @xmath5 assume @xmath142 is a functor that lifts to @xmath143 by the corresponding distributive law @xmath144 .",
    "moreover , let @xmath145 be a monad on @xmath57 ( note that we do not assume @xmath146 to carry a monadic structure but only require its lifting @xmath147 to be a monad ) .",
    "we have the following two adjunctions : @xmath112 ^ -{^{\\sharp}}\\ar@{}[r]|-\\perp & \\mathcal{k}l(t)\\ar@<1.5ex>[r]^-{^{\\sharp}}\\ar@<1.5ex>[l]^{u_t}\\ar@{}[r]|\\perp & \\mathcal{k}l(\\overline{s})\\ar@<1.5ex>[l]^{u_{\\overline{s}}}. } \\ ] ] because the composition of two adjunctions is an adjunction , the functor @xmath148 is a left adjoint to @xmath149 .",
    "since @xmath150 , this yields a monadic structure on the functor @xmath151 .",
    "the composition @xmath60 in @xmath152 is given in terms of the composition in @xmath5 as follows .",
    "for @xmath153 and @xmath154 we have : @xmath155_{g\\cdot f } \\ar[r]^f & tsy \\ar[r]^-{tsg } & tstsz \\ar[r]^{t\\lambda_{sz } } & t^2s^2z \\ar[d]^{t^2(m_z ) } \\\\   tsz & & t^2sz\\ar[ll]^{\\mu_{sz } } & t^3sz\\ar[l]^{t\\mu_{sz } }   } \\ ] ]      a category @xmath5 is _ order enriched _ if each hom - set is a poset with the order preserved by the composition .",
    "an endofunctor on an order enriched category is called _ locally monotonic _ if it preserves the order .",
    "we say that _ arbitrary cotupling in @xmath5 is monotonic _ if for any family of objects @xmath156 and two families @xmath157 of morphisms if the coproduct @xmath158 of @xmath156 exists in @xmath5 and @xmath159 for any @xmath160 then the cotuples @xmath161:\\coprod_i x_i \\to y$ ] and @xmath162:\\coprod_i x_i \\to y$ ] satisfy @xmath163\\leqslant [ \\ { g_i\\ } ] $ ] .",
    "[ example : order_enriched ] kleisli category for any monad @xmath164 is order enriched and arbitrary cotupling in @xmath57 is monotonic .",
    "the order on hom - sets in @xmath57 is imposed by the natural pointwise order summarized in the table below . for @xmath165 and @xmath166",
    "we have :    [ cols=\"<,<\",options=\"header \" , ]",
    "labelled transition systems have been defined and thoroughly studied in the computer science literature ( see e.g. @xcite ) .",
    "we will now briefly recall some classical definitions and properties from the theory of these systems .",
    "let @xmath19 be a fixed set called _ set of alphabet letters _ or simply _ alphabet_. _ labelled transition system _ over the alphabet @xmath19 ( or _ lts _ in short ) is a triple @xmath167 , where @xmath13 is a set , called _ set of states _ , and @xmath168 is the transition relation . for an lts @xmath167 instead of writing @xmath169",
    "we write @xmath170 .",
    "[ definition : lts_bisimulation ] a symmetric relation @xmath171 is called a _ bisimulation _ on @xmath167",
    "if the following condition holds : @xmath172    from now on we assume that the alphabet we consider contains a special label , called _ internal _ or _",
    "invisible _ label , which is usually denoted by the letter @xmath173 . to be more precise",
    ", we put @xmath174 and consider a labelled transition system @xmath175 over the alphabet @xmath176 .",
    "letters in @xmath19 are called _",
    "visible_.    @xcite [ definition : lts_weak_bisimulation ] a symmetric relation @xmath171 is called _ a weak bisimulation _ on @xmath175 if the following condition holds : @xmath177 where @xmath178 is defined by @xmath179 here , @xmath180 denotes the reflexive and transitive closure of a relation .",
    "we can extend the definition of the transition @xmath181 as follows .",
    "for a word @xmath182 over the set of visible labels put @xmath183    it is an easy exercise to prove the following ( see e.g. @xcite for details ) .",
    "[ fact : lts_weak_bisimulation_equiv ] a symmetric relation @xmath171 is a weak bisimulation on @xmath175 if and only if the following condition holds : @xmath184 if we replace all occurrences of @xmath185 by @xmath186 for any @xmath182 we also get a true statement .",
    "the fact above suggests that weak bisimulation on @xmath175 can be defined as a strong bisimulation on a _ saturated model _",
    "it is worth noting that from the point of view of computation and automated reasoning the former approach to defining weak bisimulation is better since , unlike the condition in fact  [ fact : lts_weak_bisimulation_equiv ] , it does not require the knowledge of the full saturated transition .",
    "indeed , in order to show that two states @xmath188 of a labelled transition system are weakly bisimilar in the sense of the equivalent condition from fact [ fact : lts_weak_bisimulation_equiv ] one needs to consider all states @xmath189 reachable from @xmath82 via the saturated transitions and compare them with similar states reachable from @xmath190 . whereas , to prove that two states @xmath188 are weakly bisimilar in the sense of definition [ definition : lts_weak_bisimulation ] one needs to consider all states reachable from @xmath82 via single step transitions @xmath191 and compare them with _ some _ states reachable from @xmath190 via the saturated transitions .",
    "we see that the key ingredient in defining weak bisimulation for lts is the saturation . in order to describe it categorically",
    "we have to understand the nature of invisible transitions first .",
    "before we discuss the nature of internal steps , we recall how labelled transition systems are modelled coalgebraically .",
    "any lts over the alphabet @xmath176 can be viewed as a coalgebra of the type @xmath192 .",
    "given an lts @xmath175 we turn it into a @xmath192-coalgebra @xmath193 as follows : @xmath194 in this case , any coalgebraic bisimulation which is a symmetric relation satisfies the conditions from definition [ definition : lts_bisimulation ] .",
    "conversely , any relation which is a bisimulation in the sense of definition [ definition : lts_bisimulation ] is a symmetric coalgebraic bisimulation ( see e.g. @xcite for details ) .",
    "it should be noted here that the assumption about symmetry in definition  [ definition : lts_bisimulation ] serves only one purpose : it makes the definition more succinct",
    ".      our aim will be now to introduce a monadic structure on the lts functor @xmath195 which leads to a definition of saturation of an lts and which internally handles visible and invisible labels .",
    "this observation together with a similar one in subsection [ subsection : lts_extended_monad ] and their generalizations in section [ section : hiding_invisible_transitions ] lead us to a conclusion that weak bisimulation for coalgebras should not focus on specifying and handling visible and invisible parts of the functor explicitly .",
    "instead , it should assume the type of coalgebras taken into consideration is a monad with internal transitions being a part of its unit .",
    "consider the functor @xmath196 and its lifting @xmath197 as in example [ example : lifting_of_powerset ] .",
    "define two natural transformations : @xmath198 in @xmath68 as follows .",
    "for any object @xmath140 define the @xmath13-components @xmath199[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}\\overline{\\sigma_\\tau } x \\text { ( i.e. } m_x:\\sigma_\\tau\\times \\sigma_\\tau \\times x\\to \\mathcal{p}(\\sigma_\\tau\\times x ) ) \\text { and } \\\\",
    "& e_x : x{\\makebox[1.1\\width][l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}\\overline{\\sigma_\\tau}x \\text { ( i.e. } e_x : x\\to \\mathcal{p}(\\sigma_\\tau \\times x ) ) \\text { to be:}\\end{aligned}\\ ] ] @xmath200    [ fact : lts_label_monad ] the triple @xmath201 is a monad on @xmath68 .",
    "the above fact is a consequence of a more general statement , namely theorem [ theorem : main_monad_theorem ] below , and hence is left without a proof .",
    "we have the following two adjunctions : @xmath202 ^ -{^{\\sharp}}\\ar@{}[r]|-\\perp & \\mathcal{k}l(\\mathcal{p})\\ar@<1.5ex>[r]^-{^{\\sharp}}\\ar@<1.5ex>[l]^-{u_\\mathcal{p}}\\ar@{}[r]|-\\perp & \\mathcal{k}l(\\overline{\\sigma_\\tau})\\ar@<1.5ex>[l]^-{u_{\\overline{\\sigma_\\tau}}}. } \\ ] ] following the guidelines of subsection [ subsection : monads_on_kleisli ] we obtain a monadic structure on the functor @xmath203 .",
    "the composition @xmath60 in @xmath204 is given by the following formula .",
    "for @xmath205 and @xmath206 we have @xmath155_{g\\cdot f } \\ar[r]^f & \\mathcal{p}(\\sigma_\\tau \\times y ) \\ar[r]^-{\\mathcal{p}(\\sigma_\\tau \\times g ) } & \\mathcal{p}(\\sigma_\\tau \\times \\mathcal{p}(\\sigma_\\tau \\times z ) ) \\ar[r]^{\\mathcal{p}t } & \\mathcal{p}^2(\\sigma_\\tau \\times \\sigma_\\tau \\times z ) \\ar[d]^{\\mathcal{p}^2(m_z ) } \\\\",
    "\\mathcal{p}(\\sigma_\\tau \\times z ) & & \\mathcal{p}^2(\\sigma_\\tau \\times z)\\ar[ll]^{\\bigcup } & \\mathcal{p}^3(\\sigma_\\tau \\times z)\\ar[l]^{\\mathcal{p}(\\bigcup ) }   } \\ ] ] it is easy to verify that the formula for the composition is explicitly given by : @xmath207    the construction above which imposes a monadic structure on the lts functor allows us to handle @xmath173-steps internally by the monadic multiplication . in the subsection below we present a second approach of handling the @xmath173-steps inside a monad whose functor extends the lts functor .",
    "there is a second approach to handle silent steps internally in a monadic structure of the functor @xmath208 which extends the lts functor @xmath195 .",
    "it is easy to see that there is a natural transformation @xmath209 from the functor @xmath210 to @xmath211 whose components are injective maps .",
    "the @xmath13-component @xmath212 is given by : @xmath213 hence , the family of maps @xmath214 is an injective natural transformation from the lts functor @xmath195 to @xmath208 .",
    "any @xmath195-coalgebra can be turned into a @xmath208-coalgebra by post - composing it with a suitable component of @xmath215 .",
    "moreover , the functor @xmath208 comes equipped with a monadic structure which is a consequence of existence of a monadic structure on @xmath20 and @xmath211 .",
    "we leave all the details for section [ section : hiding_invisible_transitions ] . here",
    ", we only present the explicit formula for the composition @xmath60 in @xmath216 . for @xmath217 and @xmath218",
    "we have @xmath219 : @xmath220      in the previous two subsections we showed two ways of dealing with an invisible label by encoding it as a part of the unit of a monad .",
    "let us for now assume that @xmath60 is the composition in @xmath204 as in subsection [ subsection : lts_monad ] .",
    "given an lts coalgebra @xmath221 the saturated lts @xmath222 is obtained as follows : @xmath223 where @xmath224 denotes the supremum in the complete lattice @xmath225 with the relation @xmath226 given by : @xmath227 .",
    "we see that for @xmath228 : @xmath229 now consider @xmath60 to be the composition in @xmath216 as in subsection  [ subsection : lts_extended_monad ] . for an lts coalgebra @xmath193 define @xmath230 where @xmath209 is given in the previous subsection .",
    "put @xmath231 to be @xmath232 where @xmath224 denotes the supremum in @xmath233 .",
    "then for @xmath234 we have : @xmath235    weak bisimulation on @xmath221 is then any symmetric strong bisimulation on @xmath1 or on @xmath236 ( by fact [ fact : lts_weak_bisimulation_equiv ] ) .",
    "as we will see in section  [ section : weak_bisimulation ] it will also be possible to give a coalgebraic definition of weak bisimulation which is a generalization of definition [ definition : lts_weak_bisimulation ] and compare the two approaches . note here that both maps @xmath1 and @xmath236 are defined so that they abstractly represent reflexive and transitive closure of @xmath14 w.r.t .",
    "the suitable kleisli compositions and order .",
    "both @xmath237 and @xmath238 are the least fixed points of the assignments @xmath239 and @xmath240 respectively .",
    "this observation forms foundations for the theory developed in section [ section : saturation ] , [ section : weak_bisimulation ] and [ section : weak_bisimulation_final_semantics ] .",
    "throughout this paper we denote the coproduct operator by @xmath241 and the coprojection into the first and the second component of a coproduct by @xmath242 and @xmath243 respectively .    in this section",
    "we assume that @xmath50 is a monad on a category @xmath5 with binary coproducts and @xmath244 is a functor . since in this paper",
    "we are interested in coalgebras with internal moves we adopt the approach from @xcite and for now consider the type of coalgebras to be @xmath245 with @xmath246 .",
    "the lts functor @xmath195 studied in the previous section is of this form since : @xmath247 coalgebras of the type @xmath248 were studied in @xcite from the perspective of trace semantics for systems with internal moves .",
    "the motivation for considering the type @xmath248 to model systems with silent transitions is the following : the monad @xmath3 represents the branching type , the functor @xmath4 represents the visible part of the transition ( just like @xmath249 for lts ) , and @xmath250 represents the invisible label transition @xcite .",
    "the aim of this section is to generalize both strategies demonstrated in section  [ section : lts_coalgebraically ] for the lts functor for handling invisible transitions internally in a monadic structure of the type we consider .",
    "to be more precise , given some mild assumptions on @xmath3 and @xmath4 we will turn @xmath251 into a monad or embed it into one , where the monadic multiplication deals with visible and silent part of the functor internally .    in the rest of this section",
    "we assume the following .",
    "* the functor @xmath244 lifts to @xmath120 by the corresponding distributive law @xmath124 .    as a direct consequence of this assumption",
    "the functor @xmath252 lifts to the functor @xmath253 on @xmath57 .",
    "this follows by the fact that the coproducts in @xmath57 come from coproducts in the base category .",
    "the @xmath13-component of the distributive law @xmath254 associated with the lifting @xmath255 of @xmath256 is given by the composition of the following morphisms in @xmath5 : @xmath257}{\\to }   t(fx+x ) = tf_\\tau x.\\ ] ] see also e.g. @xcite for a discussion on liftings of coproducts of functors .",
    "we say that @xmath258 is _ a category with zero morphisms _ provided that for any @xmath259 there is a morphism @xmath260 such that @xmath261 the proof of the lemma below follows directly by the definition of zero morphisms .    for any endofunctor",
    "@xmath262 the family @xmath263 is a natural transformation from @xmath264 to @xmath250 .",
    "@xcite[lemma : milius_monad ] let @xmath265 be a monad on a category @xmath258 with binary coproducts and let @xmath266 be a natural transformation from an endofunctor @xmath267 on @xmath258 .",
    "define @xmath268 as follows :    * @xmath269 , * @xmath270 , * @xmath271 , @xmath272 + id}{\\implies } hs^2+hs+\\mathcal{i}d\\stackrel{[h\\mu,\\mathsf{inl}]+id}{\\implies}hs+\\mathcal{i}d = \\tilde{s}.\\end{aligned}\\ ] ]    then the triple @xmath268 is a monad .",
    "we are now ready to formulate the main result of this subsection .",
    "[ theorem : main_monad_theorem ] assume that @xmath57 is a category with zero morphisms .",
    "define a triple @xmath273 , where @xmath274 and @xmath275)+id}{\\implies } \\overline{f } + ( \\overline{f}+\\mathcal{i}d ) \\stackrel{[\\mathsf{inl},id]}{\\implies } \\overline{f}+\\mathcal{i}d.\\end{aligned}\\ ] ] then the triple @xmath273 is a monad on @xmath57 .",
    "this theorem follows directly by lemma [ lemma : milius_monad ] . indeed ,",
    "if we put @xmath276 to be the identity monad on @xmath57 , @xmath277 and @xmath278 then we get @xmath279 , @xmath280 and @xmath281_{m } \\ar@{=>}[drr]|{\\overline{f}[0,id ] + i d } \\ar@{=>}[rr]^{\\overline{f}(0+id)+id } & & \\overline{f}(\\mathcal{i}d+\\mathcal{i}d)+(\\overline{f } + \\mathcal{i}d)\\ar@{=>}[d]^{\\overline{f}[id , id ] + i d } \\\\ \\overline{f}+\\mathcal{i}d & & \\overline{f}+(\\overline{f } + \\mathcal{i}d ) \\ar@{=>}[ll]^{[\\mathsf{inl},id ] } } \\ ] ] hence , if @xmath57 admits zero morphisms then the functor @xmath282 carries a monadic structure which is obtained by composing two adjunctions : @xmath112 ^ -{^{\\sharp}}\\ar@{}[r]|-\\perp & \\mathcal{k}l(t)\\ar@<1.5ex>[r]^-{^{\\sharp}}\\ar@<1.5ex>[l]^-{u_\\mathcal{t}}\\ar@{}[r]|-\\perp & \\mathcal{k}l(\\overline{f_\\tau})\\ar@<1.5ex>[l]^-{u_{\\overline{f_\\tau}}}. } \\ ] ] following the guidelines of subsection [ subsection : monads_on_kleisli ] we derive the formula for the composition in @xmath283 . for @xmath284 , @xmath285 we have the following : @xmath286 ^ -{tf_\\tau g } & tf_\\tau tf_\\tau z \\ar@{=}[r ] & t(ftf_\\tau z + tf_\\tau z)\\ar[d]_{t(\\lambda_{f_\\tau z}+id_{tf_\\tau z } ) }    \\ar@/^5pc/[dd]^{t\\lambda^\\tau_{f_\\tau z } } &   \\\\ x\\ar@{-->}[dd]_{g\\cdot f } \\ar[u]^f   &   &   t(tf f_\\tau z + t f_\\tau z ) \\ar[d]_{t[t\\mathsf{inl},t\\mathsf{inr } ] }   \\\\   & & tt(ff_\\tau z+f_\\tau z)=t^2 f_\\tau",
    "^2 z \\ar[d]^{t^2(m_z)}\\\\   tf_\\tau z & t^2f_\\tau z\\ar[l]^{\\mu_{f_\\tau z } } & t^3f_\\tau z\\ar[l]^{t\\mu_{f_\\tau z } }   &   } \\ ] ]    before we list some examples of application of this theorem we want to make a remark concerning the assumption about @xmath57 admitting zero morphisms . it is clear that not all monads satisfy this property .",
    "a simple example is the non - empty powerset monad @xmath287 on @xmath28 whose kleisli category fails to admit zero morphisms . in order to deal with this problem in the next subsection we present a second strategy towards handling internal moves inside a monadic structure which does not require the kleisli category to satisfy any extra requirements .",
    "an example of an application of theorem [ theorem : main_monad_theorem ] has already been witnessed in the previous section , namely fact [ fact : lts_label_monad ] .",
    "there @xmath288 , @xmath289 and the zero morphisms in @xmath68 are given by @xmath290 to see a second example of an application of this theorem the reader is referred to section [ section : segala ] .",
    "there , @xmath3 is taken to be the convex distribution monad @xmath42 and @xmath289 .",
    "since @xmath291 admits zero morphisms the construction from theorem  [ theorem : main_monad_theorem ] will yield a monadic structure on a lifting @xmath292 of the functor @xmath196 .",
    "below , we present a third example which will be used in section  [ section : weak_bisimulation_final_semantics ] in order to show an interesting case of final weak bisimulation semantics for the base category different from @xmath28 .",
    "[ example : na_monad ] let @xmath288 and @xmath293 . for the sake of simplicity and clarity of notation we identify @xmath294 with the functor @xmath295 which is naturally isomorphic to it .",
    "the functor @xmath256 lifts to @xmath296 given by @xcite : @xmath297[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}f_\\tau y ; \\left \\ { \\begin{array}{ccc } ( \\sigma , x ) & \\mapsto & \\{(\\sigma , y)\\mid y\\in f(x)\\ } \\\\ \\checked & \\mapsto & \\{\\checked\\ } \\end{array } \\right.\\\\   & \\text { for any morphism } f : x{\\makebox[1.1\\width][l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}y \\text { in } \\mathcal{k}l(\\mathcal{p } ) \\text { ( i.e. } f : x\\to \\mathcal{p}y).\\end{aligned}\\ ] ] the distributive law @xmath298 associated with this lifting is given on the @xmath13-component by : @xmath299 in this case , it is not difficult to verify that the monadic structure from theorem  [ theorem : main_monad_theorem ] is the following : @xmath300[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}f_\\tau x ; x\\mapsto \\{(\\tau , x)\\ } ,   \\\\ &",
    "m_x : f_\\tau f_\\tau x{\\makebox[1.1\\width][l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}f_\\tau x ; \\left \\ { \\begin{array}{cccc } ( \\sigma,\\tau , x ) & \\mapsto & \\{(\\sigma , x)\\ } &    \\\\",
    "( \\tau,\\sigma , x ) & \\mapsto & \\{(\\sigma , x)\\ } & \\\\ ( \\sigma_1,\\sigma_2,x ) & \\mapsto & \\varnothing & \\text { for } \\sigma_1 \\neq \\tau , \\sigma_2\\neq \\tau,\\\\ ( \\tau,\\checked ) & \\mapsto & \\{\\checked\\ } & \\\\ ( \\sigma,\\checked ) & \\mapsto & \\varnothing & \\text { for } \\sigma \\neq \\tau , \\\\ \\checked & \\mapsto & \\{\\checked\\}.    \\end{array } \\right.\\end{aligned}\\ ] ] by subsection [ subsection : monads_on_kleisli ] we get a monadic structure on @xmath301 .",
    "given two morphisms @xmath302 and @xmath303 their composition @xmath304 in @xmath305 is : @xmath306    the intuition behind introducing a monadic structure on @xmath255 as above is the following .",
    "if we carefully study the definition of the multiplication @xmath307 in theorem [ theorem : main_monad_theorem ] we see that it kills all visible - visible transitions using the zero morphisms and leaves the rest somewhat intact . by",
    " visible - visible transitions \" we mean the part of the composition @xmath308 which is underlined in the following formula : @xmath309 in the case of the functor @xmath197 from subsection [ subsection : lts_monad ] this part is given by @xmath310 , i.e. by pairs of visible labels .      in the previous subsection we introduced a monadic structure on the functor @xmath251 in a natural way so that the monadic multiplication deals with silent and visible part of the functor @xmath251 by killing the visible - visible transitions .",
    "this was possible thanks to the assumption about existence of zero morphisms in @xmath57 .",
    "what if , in general , the category @xmath57 does not have this property ?",
    "the solution we propose here is to consider a free monad @xmath311 over @xmath4 . in this subsection instead of imposing a monadic structure on the functor @xmath248",
    ", we will embed it into the monad @xmath312 .    since we will only use a direct construction of a free monad , a curious reader",
    "is referred to @xcite for a detailed definition of this notion . in the rest of the subsection",
    "we assume the following :    * the functor @xmath4 admits a free @xmath4-algebra @xmath313 in @xmath11 ( = initial @xmath314-algebra in @xmath315 ) for any object @xmath13 .",
    "@xcite[lemma : free_monad_algebra ] for an object @xmath13 and a morphism @xmath32 in @xmath5 let @xmath316 denote the carrier of @xmath313 and let @xmath317 denote the unique morphism for which the following diagram commutes : @xmath318^{i_x}\\ar@{-->}[d]_{f(f^{*}f)+id } & & f^{*}x\\ar@{-->}[d]^{f^{*}f } \\\\",
    "ff^{*}y+x\\ar[r]_{id+f } &   ff^{*}y+y\\ar[r]_-{i_y } & f^{*}y } \\label{diagram:1_lemma_barr}\\end{aligned}\\ ] ] the assignment @xmath311 is functorial . define a transformation @xmath319 , whose @xmath13-component @xmath320 is the unique morphism making the following diagram commute : @xmath321^{i_{f^{*}x}}\\ar@{-->}[d]_{f(m_x)+id } & &   f^{*}f^{*}x\\ar@{-->}[d]^{m_x } \\\\ ff^{*}x+f^{*}x\\ar[rr]_{[i_x\\circ \\mathsf{inl},id ] } & & f^{*}x } \\label{diagram:2_lemma_barr}\\end{aligned}\\ ] ] then the triple @xmath322 , where @xmath323 , is a free monad over @xmath4 .",
    "the remaining part of this subsection is devoted to proving that the functor @xmath311 lifts to a free monad over @xmath122 in @xmath57 .",
    "@xcite[lemma : adjuntion_lifting ] the adjunction @xmath324 lifts to an adjunction @xmath325 between categories of algebras . to be more precise",
    ", we have the following diagram in which the vertical arrows are the forgetful functors : @xmath326 \\ar@<1.5ex>[r]^-{\\hat{^{\\sharp}}}\\ar@{}[r]|-\\perp   & \\mathcal{k}l(t)^{\\overline{f}}\\ar[dd]\\ar@<1.5ex>[l]^{\\hat{u_t}}\\\\\\\\ \\mathsf{c}\\ar@<1.5ex>[r]^-{^{\\sharp}}\\ar@{}[r]|-\\perp & \\mathcal{k}l(t ) \\ar@<1.5ex>[l]^-{u_t } } \\ ] ] here , @xmath327 is defined for any object @xmath7 and a homomorphism @xmath9 between @xmath7 and @xmath8 by @xmath328 and @xmath329 .    for any object @xmath114 the morphism",
    "@xmath330 is a free @xmath122-algebra over @xmath13 in @xmath331 ( = initial @xmath332-algebra in @xmath333 ) .",
    "since @xmath4 lifts to @xmath122 , the functor @xmath334 lifts to @xmath335 with the corresponding lifting @xmath336 given on its @xmath74-component by : @xmath337}{\\to } t(fy+x).\\ ] ] here , the reader is once again referred to @xcite for a discussion on liftings of coproducts of functors . by lemma [ lemma : adjuntion_lifting ] and",
    "the fact that the initial object is a colimit over the empty diagram together with the fact that any left adjoint preserves colimits we infer that @xmath338 is initial in @xmath333 .",
    "this proves the assertion .",
    "let @xmath339 denote the functor obtained by following the guidelines of the construction from lemma [ lemma : free_monad_algebra ] using the family @xmath340 of all free @xmath122-algebras .",
    "[ theorem : monad_free ] we have :    * @xmath311 lifts to @xmath341 , * @xmath342 is a free monad over @xmath122 .    by the definition of @xmath341 it follows that for any object @xmath109 ( i.e. @xmath114 ) we have @xmath343 . therefore , in order to prove that @xmath311 lifts to @xmath341 it is enough to show that for any @xmath32 we have @xmath344 .",
    "we will do this by showing that the morphism @xmath345 makes the diagram ( [ diagram:1_lemma_barr ] ) commute in the category @xmath57 .",
    "we have @xmath346^\\sharp,\\ ] ] where , all coproducts in the above expression except for the last one live in @xmath57 .",
    "the last coproduct is taken in @xmath5 .",
    "this identity follows by the fact that any functor which is a left adjoint commutes with colimits . hence , the following diagram commutes in @xmath57 : @xmath347|{\\circ}^{i_x^\\sharp } \\ar[d]|{\\circ}_{\\overline{f}((f^{*}f)^\\sharp)+1_x } \\ar[dr]|{(ff^{\\ast}f+f)^\\sharp } & & f^{*}x\\ar[d]|{\\circ}^{(f^{*}f)^\\sharp } \\\\",
    "ff^{*}y+x\\ar[r]|{\\circ}_{1+f^\\sharp } &   ff^{*}y+y\\ar[r]|{\\circ}_{i_y^\\sharp } & f^{*}y } \\ ] ] since @xmath348 is the unique morphism for which this diagram commutes , we get that @xmath344 .",
    "this proves the first statement .",
    "we will now prove the second statement . by the definition of @xmath341 and lemma [ lemma : free_monad_algebra ]",
    "the functor @xmath341 is a free monad over @xmath122 . in order to complete the proof we have to show that the unit and the multiplication of the monad @xmath341 obtained by following the guidelines of lemma  [ lemma : free_monad_algebra ] coincide with @xmath349 and @xmath350 respectively .",
    "we proceed as in the first part of the proof .",
    "we take the morphism @xmath351 and show it makes the diagram ( [ diagram:2_lemma_barr ] ) commute for @xmath341 in @xmath57 . by uniqueness , we get that @xmath350 is the multiplication of the free monad @xmath352 and @xmath349 is its unit .",
    "this completes the proof .",
    "note that in the above proof we did not refer to the distributive law associated with the lifting @xmath341 of @xmath311 .",
    "we will now give its explicit description . by subsection  [ subsection : monads ]",
    "this distributive law @xmath353 is given by @xmath354 .",
    "it follows directly by the definition of @xmath341 that @xmath355 is the unique morphism making the following diagram commute in @xmath5 ( existence and uniqueness of @xmath356 is guaranteed by the fact that @xmath357 is an initial @xmath358-algebra ) : @xmath359^{i_{tx}}\\ar@{-->}[d]_{f(\\lambda^{*}_{tx})+id } & & &   f^{*}tx\\ar@{-->}[d]^{\\lambda^{*}_{tx } } \\\\ ftf^{*}x+tx\\ar[r]_{\\lambda+id}&tff^{*}x+tx \\ar[r]_{[t\\mathsf{inl},t\\mathsf{inr } ] } &   t(ff^{*}x+x)\\ar[r]_-{ti_{f^{*}x } } & tf^{*}x } \\ ] ]    the adjunctions @xmath360 yield a monadic structure on @xmath312 . by subsection [",
    "subsection : monads_on_kleisli ] the composition @xmath60 in @xmath361 is given for @xmath362 and @xmath363 by : @xmath155_{g\\cdot f } \\ar[r]^f & tf^*y \\ar[r]^{tf^{*}g } & tf^{*}tf^{*}z \\ar[r]^{t\\lambda^*_{f^{*}z } } & t^2f^{{*}}f^{{*}}z \\ar[d]^{t^2(m_z^\\sharp ) } \\ar[dl]|{t^2(m_z ) } \\\\",
    "tf^{*}z & & t^2f^{*}z\\ar[ll]^{\\mu_{f^{*}z } } & t^3f^{*}z\\ar[l]^{t\\mu_{f^{*}z } }   } \\ ] ] we will now elaborate more on the example that was briefly discussed in subsection  [ subsection : lts_extended_monad ] .",
    "take @xmath288 and @xmath364 .",
    "it is easy to see that the functor @xmath4 satisfies the assumptions from the beginning of this subsection and that lemma  [ lemma : free_monad_algebra ] yields @xmath365 with @xmath307 and @xmath366 defined on their @xmath13-components as follows : @xmath367 the lifting @xmath368 is given by : @xmath369 by theorem [ theorem : monad_free ] the triple @xmath342 is a monad on @xmath68 which , by subsection  [ subsection : monads_on_kleisli ] , yields a monadic structure on @xmath370 . for @xmath217 and @xmath218",
    "we have @xmath219 : @xmath220    we end this subsection with the following lemma .",
    "there is a natural transformation @xmath209 from @xmath371 to @xmath311 given for any object @xmath109 by @xmath372    the above result implies that any @xmath248-coalgebra can be naturally translated into a @xmath312-coalgebra . to be more precise for @xmath373 we put @xmath374",
    "although the functor @xmath248 is not necessarily a monad , any @xmath248-coalgebra can be turned into a @xmath312-coalgebra .",
    "the functor @xmath312 carries a monadic structure that handles internal transitions .",
    "therefore , from now on coalgebras with internal moves will be considered as coalgebras whose type is a monad without referring to their visible and invisible part of the transition explicitly .",
    "recall that for labelled transition systems the saturated map @xmath1 can in fact be thought of as the reflexive and transitive closure of @xmath221 w.r.t .",
    "the kleisli composition  @xmath60 and the partial order @xmath226 given in section [ section : lts_coalgebraically ] .",
    "it is easy to see that it satisfies the following conditions : @xmath375 , @xmath376 and @xmath377 and @xmath1 is the least morphism with these properties .",
    "the aim of this section is to present a definition of an ordered saturation monad which generalizes this idea .",
    "a monad @xmath50 on @xmath5 whose kleisli category is order enriched is called _ ordered saturation monad _ provided that in @xmath57 for any morphism @xmath378[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}x$ ] there is a morphism @xmath379[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}x$ ] satisfying the following conditions :    1 .",
    "[ axiom:1 ] @xmath380 , 2 .",
    "[ axiom:2 ] @xmath376 , 3 .   [ axioms:3 ]",
    "@xmath377 , 4 .",
    "[ axiom:3.5 ] if @xmath381[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}x$ ] satisfies @xmath382 , @xmath383 and @xmath384 then @xmath385 , 5 .",
    "[ axioms:4 ] for any @xmath32 in @xmath5 and any @xmath386[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}y$ ] in @xmath57 we have : @xmath387    from now on , unless stated otherwise , in this section we assume that @xmath50 is an ordered saturation monad .",
    "[ lemma : saturation : properties ] for any @xmath388[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}x$ ] in @xmath57 we have :    * @xmath389 , * @xmath390 , * @xmath391 .    to prove the first assertion we use condition ( [ axiom:2 ] ) and see @xmath392 .",
    "moreover , by condition ( [ axiom:3.5 ] ) since @xmath393 , @xmath394 and @xmath377 it follows that @xmath395 .",
    "the last two assertions follow easily",
    ".    we will often refer to @xmath180 operator as _ saturation _ operator and call a structure @xmath14 _ saturated _ if @xmath396 ( i.e. if @xmath397 and @xmath398 ) .",
    "we will now discuss conditions ( [ axiom:1])-([axioms:4 ] ) .",
    "at first let us focus on the last condition .",
    "it says that if a morphism @xmath399 is a ( lax or oplax ) homomorphism between two structures @xmath14 and @xmath400 then it is also a ( lax or oplax ) homomorphism between their saturations @xmath1 and @xmath401 .",
    "this technical property proves to be useful in section [ section : weak_bisimulation ] when defining weak bisimulation and studying its properties .",
    "its stronger version is also used in theorem [ theorem : saturation_fixed_point ] in order to pinpoint the relation between @xmath1 and the least fixpoint of the assignment @xmath239 .",
    "let us now focus on conditions ( [ axiom:1])-([axiom:3.5 ] ) . saturating a structure @xmath14",
    "can be thought of as an abstract way to consider its reflexive and transitive closure .",
    "indeed , the first four axioms say that given a coalgebra @xmath14 the structure @xmath1 is the least coalgebra closed under the composition such that @xmath380 and @xmath376",
    ". however , it may not be instantly clear to the reader why we choose conditions ( [ axiom:1])-([axiom:3.5 ] ) to define the saturator and not any other .",
    "these conditions bare some resemblance to the axioms of kleene algebra @xmath402 @xcite and kleene monad @xcite .",
    "we are intentionally not using those , as some of our main examples fit the framework presented above but would not fit the kleene monad framework . to be more precise ,",
    "one of the requirements for a monad to be a kleene monad is that the composition in @xmath57 distributes over finite suprema .",
    "however , the monad used to model segala systems described in section  [ section : segala ] gives rise to its kleisli category where the composition does not satisfy this property .",
    "here , we would also like to give a categorical interpretation of saturated coalgebras and conditions ( [ axiom:1])-([axiom:3.5 ] ) .",
    "any order enriched category is a special type of a @xmath403-category with the @xmath403-cell structure imposed by the partial order on its hom - sets . in an arbitrary",
    "2-categorical setting one can introduce the notion of a monad _ in _ a @xmath403-category as a @xmath107-cell @xmath404 with the same domain and codomain whose unit and multiplication are given by @xmath403-cells @xmath405 and @xmath406 satisfying the usual monad laws ( see e.g. @xcite for basic definitions and properties from @xmath403-category theory ) . in this case any ordinary monad on a category is a monad in @xmath407 , the 2-category of all categories as objects , functors as 1-cells and natural transformations as 2-cells .",
    "now , if we view the order enriched category @xmath57 as a 2-category then the saturated coalgebras are exactly monads _ in _ @xmath57 with the unit and the multiplication given by the @xmath403-cells @xmath408 and @xmath398 respectively ( the monad laws hold vacuously in this setting )",
    ". a  careful study of the definition of a free monad over a functor @xcite leads to a conclusion that by conditions ( [ axiom:2 ] ) and ( [ axiom:3.5 ] ) the saturated coalgebra @xmath379[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}x$ ] can be in fact thought of as a free monad over @xmath14 .",
    "the following theorem shows the connection between saturation and the least fixed point of the assignment @xmath239 .",
    "[ theorem : saturation_fixed_point ] assume that hom - sets in @xmath57 admit finite joins and that for any @xmath117[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}y$ ] and @xmath386[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}y$ ] in @xmath57 we have : @xmath409 then @xmath410 .",
    "in the first part of the proof we show that for any @xmath388[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}x$ ] if @xmath411 for a structure @xmath412[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}x$ ] then @xmath413 .",
    ". then @xmath414 . by implication ( [ assumption : additional ] ) we get @xmath415 . since @xmath416 we can infer that @xmath417 in order to complete the proof we need to show that @xmath418 . the proof below is a simplification of a proof generated by prover9 @xcite .",
    "the following properties hold .",
    "1 .   @xmath419 . by condition ( [ axioms:4 ] ) and",
    "lemma  [ lemma : saturation : properties ] since @xmath420 [ property : a ] 2 .",
    "@xmath421 . by the equality @xmath422 and the implication ( [ assumption : additional ] ) .",
    "[ property : b ] 3 .   @xmath423 . by the following inequalities : @xmath424",
    "4 .   @xmath425 . by multiplying the previous equality by @xmath14 .",
    "[ property : c ] 5 .",
    "substitute @xmath14 with @xmath427 in ( [ property : c ] ) .",
    "we get : @xmath428 we use ( [ property : a ] ) and obtain : @xmath429 by applying ( [ property : b ] ) and @xmath430 we get the desired conclusion . [ property : e ] 6 .   @xmath431 . if @xmath432 then @xmath433",
    ". moreover , since @xmath434 we get @xmath435 which proves the assertion .",
    "[ property : f ] 7 .   @xmath436 . by ( [ property",
    ": e ] ) we get @xmath437 by applying ( [ property : f ] ) with @xmath438 and @xmath439 and by using ( [ property : a ] ) we get : @xmath440[property : g ] 8 .   @xmath418 . by ( [ property : g ] ) and the fact that @xmath441 .",
    "the last equality follows by @xmath442    it is important to see that a monad @xmath3 is an ordered saturation monad satisfying implication ( [ assumption : additional ] ) if and only if the identity monad @xmath250 on the kleisli category @xmath57 is an ordered saturation monad .",
    "we do not know if the above theorem remains true if we remove implication ( [ assumption : additional ] ) from the assumptions .",
    "we leave it as an open problem .",
    "the purpose of this subsection is to list different sufficient conditions that guarantee a given monad is an ordered saturation monad .",
    "the subsection is divided into three independent paragraphs .",
    "the results presented here are used in subsection [ subsection : saturation_for_lts ] and section  [ section : segala ] in order to prove that the monads associated with labelled transition systems and segala systems are ordered saturation monads .",
    "the purpose of this paragraph is to show that any kleene monad @xcite is an ordered saturation monad .",
    "a monad @xmath3 is called _ additive _ if the category @xmath57 is enriched over join - semilattices with a least element . to be more precise , for any two objects @xmath443",
    "the set @xmath444 is a join - semilattice with the join operation given by @xmath445 and the smallest element @xmath446 satisfying :    * @xmath447 for any @xmath448[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}y$ ] and @xmath449[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}x$ ] , * @xmath450 for any @xmath448[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}y$ ] and @xmath451[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}z$ ] , * @xmath452 for any @xmath117[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}y$ ] .",
    "an additive monad @xmath50 is called _ kleene monad _",
    "@xcite if for any composable morphisms @xmath453 in @xmath57 the assignments : @xmath454 both have least fixpoints w.r.t .",
    "the order on @xmath444 and for any morphism @xmath455 with a suitable domain and codomain : @xmath456 these two conditions can be equivalently restated in terms of a single identity given by @xcite : @xmath457    [ theorem : kleene_monad_ordered_saturation ] any kleene monad is an ordered saturation monad which additionally satisfies : @xmath458 for any @xmath388[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}x$ ] , @xmath117[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}y$ ] and @xmath386[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}y$ ] .    for any @xmath388[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}x$ ] we define @xmath379[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}x$ ] to be @xmath459 conditions ( [ axiom:1 ] ) and ( [ axiom:2 ] ) are obviously true . to see ( [ axioms:3 ] )",
    "holds set @xmath460 , @xmath461 and @xmath462 in identity ( [ identity_kleene:1 ] ) .",
    "then @xmath463 and @xmath464 condition ( [ axiom:3.5 ] ) follows directly from ( [ axiom:1])-([axioms:3 ] ) as if @xmath400 satisfies @xmath382 , @xmath383 and @xmath465 it follows that @xmath466 . since @xmath410 is also the least fixpoint of the assignment @xmath467 we get @xmath385 . to prove the last assertion assume @xmath468 .",
    "we have @xmath469 .",
    "hence @xmath470 .",
    "let @xmath471 . then @xmath472 . by the properties of a kleene monad we get @xmath473 .",
    "hence , @xmath474 . since @xmath475 we get @xmath476 .",
    "analogous reasoning proves the implication for the inverse inequality .",
    "[ example : powerset_kleene_monad ] it is an easy exercise to prove that the powerset monad @xmath20 is a kleene monad ( see @xcite for details ) . for any @xmath20-coalgebra @xmath477",
    "the structure @xmath478 is given by @xmath479 , where @xmath480 is the @xmath13-component of the unit of @xmath20 . as we have seen in example   [ example : kleisli_powerset ] any structure @xmath477 may be viewed as a relation @xmath481 .",
    "the relation @xmath482 associated with @xmath483 is exactly the reflexive and transitive closure of @xmath484 .    as a direct consequence of theorem [ theorem :",
    "kleene_monad_ordered_saturation ] we get the following .",
    "[ coro : kleene_identity ] if @xmath3 is a kleene monad then the identity monad @xmath250 on @xmath57 is an ordered saturation monad .",
    "the aim of this paragraph is to show that if a monad @xmath3 satisfies the properties listed below it is an ordered saturation monad .",
    "this fact will be used in section [ section : segala ] to prove that the convex distribution monad @xmath42 is an ordered saturation monad .",
    "we say that a category is _ enriched over @xmath485-complete partial orders _ or simply _",
    "@xmath485-cpo enriched _ if each hom - set is a poset in which a supremum of every countable directed family of morphisms @xmath486 exists and that the composition preserves these suprema .    in this paragraph",
    "we assume the following :    * @xmath57 is @xmath485-cpo enriched , * hom - sets in @xmath57 admit finite joins , * for any @xmath388[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}x$ ] , any @xmath32 in @xmath5 and @xmath386[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}y$ ] the following implications hold : @xmath487    note that although we assume that hom - sets in @xmath57 admit finite joins , the composition does not necessarily distribute over them in general .    [",
    "theorem : dcpo_enriched_monads_star_monads ] if @xmath3 is a monad satisfying the above properties then it is an ordered saturation monad , where for any morphism @xmath388[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}x$ ] the morphism @xmath1 is given by @xmath488    the first two axioms of ordered saturation monad follow directly by the definition of @xmath1 . to see condition ( [ axioms:3 ] )",
    "holds note that @xmath489 where the equality marked with @xmath490 follows by the fact that @xmath57 is @xmath485-cpo enriched .",
    "condition   ( [ axiom:3.5 ] ) follows directly from the definition of @xmath1 .",
    "indeed , if @xmath400 satisfies the assumptions listed in condition  ( [ axiom:3.5 ] ) then @xmath491 . now by induction hypothesis assume that @xmath492 .",
    "then @xmath493 .",
    "this proves that for any @xmath494 we have @xmath492 .",
    "hence , @xmath495 finally , to prove condition ( [ axioms:4 ] ) assume @xmath496 . by our assumptions we infer that @xmath497 . by induction hypothesis",
    "assume that @xmath498 and consider @xmath499 this and the fact that the monad is @xmath485-cpo enriched proves that @xmath500 .",
    "using a similar argument we prove the assertion for the inverse inequality .      in this paragraph",
    "we assume the following :    * @xmath3 is an ordered saturation monad with saturation denoted by @xmath180 , * a functor @xmath142 lifts to @xmath143 , * @xmath145 is a monad on the category @xmath57 .",
    "note that @xmath276 does not have to be a monad and we only assume that its lifting @xmath147 is . by composing two adjunctions @xmath502",
    "we introduce a monadic structure on @xmath503 .",
    "the formula for the composition @xmath504 in @xmath505 can be found in subsection [ subsection : monads_on_kleisli ] .",
    "it can be also expressed in terms of the composition @xmath60 in @xmath57 as follows . for @xmath153 and @xmath154",
    "we have @xmath506 the aim of this paragraph is to prove that given some mild assumptions on @xmath147 , the monad @xmath501 is an ordered saturation monad .",
    "we will see examples of application of the theorems below in subsection [ subsection : saturation_for_lts ] and in section [ section : segala ] .",
    "[ theorem : ordered_saturation_monad_ts ] assume @xmath147 is locally monotonic and @xmath507 = ( m_x\\cdot \\overline{s}\\alpha)^ { * } \\label{identity : distributivity_s_over_star}\\end{aligned}\\ ] ] for any @xmath388[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}\\overline{s}x$ ] in @xmath57 .",
    "then @xmath501 is an ordered saturation monad .    in the first part of the proof",
    "we show that the kleisli category for the monad @xmath501 is order enriched .",
    "for any two objects @xmath58 we have @xmath508 .",
    "we impose an order on each hom - set @xmath509 by considering the partial order from @xmath510 .",
    "let @xmath511 and @xmath512 be morphisms in @xmath505 and let @xmath513 and @xmath514 .",
    "we have @xmath515    this proves that @xmath505 is an order enriched category .",
    "we will now show that the monad @xmath501 is an ordered saturation monad .",
    "let @xmath388[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}\\overline{s}x$ ] .",
    "we define @xmath516[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}\\overline{s}x$ ] by : @xmath517 we will prove that @xmath518 satisfies the desired properties from the definition of an ordered saturation monad . indeed , to see that condition ( [ axiom:1 ] ) holds , it is enough to see that @xmath519 . hence , @xmath520",
    "to prove that condition ( [ axiom:2 ] ) is satisfied , note that @xmath521 .",
    "therefore , @xmath522 . to see condition  ( [ axioms:3 ] )",
    "holds consider @xmath523    to see condition ( [ axiom:3.5 ] ) is true , take any @xmath381[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}\\overline{s}x$ ] and assume @xmath524 , @xmath383 and @xmath525 .",
    "the first two inequalities imply that @xmath526 ( i.e. @xmath527 ) and @xmath528 .",
    "the third implies that @xmath529 .",
    "this precisely means that @xmath530 .",
    "hence , @xmath531 by the fact that @xmath3 is an ordered saturation monad we infer @xmath532 .",
    "this means that @xmath533 which proves the assertion",
    ". we will now prove condition ( [ axioms:4 ] ) holds .",
    "consider a morphism @xmath32 in @xmath5 and @xmath386[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}\\overline{s}y$ ] .",
    "we will show the following implication : @xmath534 note that @xmath535 .",
    "we have : @xmath536 this implies that @xmath537 since @xmath3 is ordered saturation monad we get : @xmath538 \\cdot   \\overline{s}f^{\\sharp},\\\\ m_y\\cdot \\overline{s}e_y\\cdot\\overline{s}f^{\\sharp}\\cdot ( m_x \\cdot \\overline{s}\\alpha)^{*}\\cdot e_x & \\leqslant   m_y\\cdot \\overline{s}(\\beta^\\bigstar)\\cdot \\overline{s } f^{\\sharp}\\cdot e_x,\\\\ m_y\\cdot \\overline{s}e_y\\cdot\\overline{s}f^{\\sharp}\\cdot \\alpha^{\\bigstar } & \\leqslant m_y\\cdot \\overline{s}\\beta^\\bigstar\\cdot   e_y\\cdot f^{\\sharp},\\\\ f^{\\sharp\\sharp}\\bullet \\alpha^\\bigstar & \\leqslant \\beta^\\bigstar \\bullet f^{\\sharp\\sharp}.\\end{aligned}\\ ] ] the implication with the inverse inequality is proved analogously .",
    "identity ( [ identity : distributivity_s_over_star ] ) can be intuitively understood as a form of distributivity of @xmath147 and its monadic multiplication over @xmath180 .",
    "we will show this law on a more concrete example .",
    "the left hand side of this identity spelled out in the case of @xmath3 being a kleene monad looks as follows : @xmath539 the right hands side of this identity is @xmath540 .",
    "the next theorem gives sufficient conditions for ( [ identity : distributivity_s_over_star ] ) to hold in the setting of @xmath485-cpo enriched category @xmath57 satisfying additional properties . to see the intuition behind identity ( [ eq : star_equation ] ) the reader is referred to example [ example_lts_saturation ] .",
    "[ theorem_star_monad_s ] assume that :    * the keisli category @xmath57 is @xmath485-cpo enriched , * hom - sets in @xmath57 admit finite joins , * @xmath147 is locally continuous , i.e. @xmath541 for any countable directed family of morphisms @xmath542 , * for any @xmath388[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}\\overline{s } x$ ] we have @xmath543 .",
    "then the monad @xmath501 is an ordered saturation monad .    by our assumptions and theorem [",
    "theorem : dcpo_enriched_monads_star_monads ] we have @xmath544 for any @xmath14 .",
    "since any locally continuous functor is locally monotonic , by theorem  [ theorem : ordered_saturation_monad_ts ] we only need to show that @xmath545 = ( m_x\\cdot \\overline{s}\\alpha)^{*}.$ ] we have @xmath546 .",
    "therefore , @xmath547 = \\bigvee_n m_x\\cdot \\overline{s}\\left [ \\left ( m_x\\cdot \\overline{s}(\\alpha\\vee e_x)\\right)^n \\cdot e_x\\right ] = \\\\ & \\bigvee_n m_x\\cdot \\overline{s}\\left [ \\left ( m_x\\cdot \\overline{s}(\\alpha\\vee e_x)\\right)^n \\right ] \\cdot \\overline{s } e_x = \\\\ & \\bigvee_n m_x\\cdot\\underbrace { \\left(\\overline{s } m_x\\cdot \\overline{s}^2(\\alpha\\vee e_x)\\right)\\cdot   \\ldots \\cdot \\left(\\overline{s } m_x\\cdot \\overline{s}^2(\\alpha\\vee e_x)\\right)}_\\text{n }   \\cdot \\overline{s } e_x\\end{aligned}\\ ] ] we have : @xmath548 this implies that : @xmath549      here , we deal with coalgebras whose type functors are of the form @xmath550 for @xmath551 and @xmath552 .",
    "the subsection is divided into two paragraphs . in the first paragraph",
    "we revisit the saturation procedure for lts stated in subsection  [ subsection : lts_monad ] and [ subsection : saturation_lts ] .",
    "the second paragraph is devoted to non - deterministic automata saturation .",
    "as noted in example [ example : lifting_of_powerset ] the functor @xmath553 lifts to @xmath197 by the corresponding distributive law given by the strength @xmath554 of @xmath20 .",
    "moreover , the strength map @xmath555 satisfies : @xmath556 hence , for any family @xmath557 of morphisms we have : @xmath558 consider the monad @xmath201 from subsection [ subsection : lts_monad ] .",
    "we have the following .    [",
    "theorem : lts_monad_ordered_saturation_monad ] the lts monad @xmath559 is an ordered saturation monad with the saturation operator defined for any @xmath193 by : @xmath560 where @xmath180 denotes the saturation operator for @xmath20-coalgebras .",
    "the proof follows directly by the fact that the category @xmath68 is enriched over complete join - semilattices , by the properties above and theorem [ theorem_star_monad_s ] ( take @xmath288 and @xmath561 ) .",
    "[ example_lts_saturation ] let @xmath562 , @xmath563 and consider the lts coalgebra @xmath221 whose structure is given by : @xmath564[f- ] } \\selecttips{cm } { } \\xymatrix@-1pc {   x\\ar[r]^{\\tau } & y \\ar@(ur , dr)^{\\sigma}\\\\ z\\ar[u]^{\\sigma } } \\ ] ] consider the coalgebras @xmath565 the first structure is an lts coalgebra with the set of states given by @xmath566 .",
    "the second can be viewed as a @xmath20-coalgebra over the same state space .",
    "they are depicted below .",
    "@xmath564[f- ] } \\selecttips{cm } { }   \\xymatrix@-1pc { \\tau z \\ar[d]_{\\tau }   & \\tau y \\ar[d]^{\\tau } & \\ar[l]_{\\tau } \\tau x \\\\ \\sigma x \\ar[ur]^{\\sigma } & \\sigma y   \\ar@(dl , dr)|{\\sigma } & { \\sigma z } \\ar@/^2pc/[ll]^{\\sigma } } \\qquad   \\xymatrix@-1pc { \\tau z \\ar[d ]   & \\tau y \\ar[d ]   & \\ar[l ] \\tau x \\\\",
    "\\sigma x   \\ar[ur ] & \\sigma y    & { \\sigma z } } \\ ] ] finally , consider the coalgebras : @xmath567 the first structure should be considered a @xmath20-coalgebra and it is simply the reflexive and transitive closure of the @xmath20-coalgebra @xmath568 .",
    "the second is a labelled transition system coalgebra .",
    "they are both depicted below .",
    "+ @xmath564[f- ] } \\selecttips{cm } { }   \\xymatrix@-1pc { \\tau z \\ar[r ] \\ar[dr]|{\\phantom { a } } \\ar@(ul , ur ) \\ar[d ]   & \\tau y \\ar@(ul , ur ) \\ar[d ] & \\ar[l ] \\ar@(ul , ur ) \\tau x \\ar[dl]\\\\ \\sigma x\\ar@(dl , dr ) \\ar[r ] \\ar[ur ] & \\sigma y \\ar@(dl , dr )   & { \\sigma z } \\ar@(dl , dr ) } \\qquad   \\xymatrix@-1pc {   x\\ar[r]^{\\sigma,\\tau } \\ar@(dl , ul)^\\tau & y \\ar@(ur , dr)^{\\sigma,\\tau}\\\\ z\\ar[u]^{\\sigma } \\ar@(dl , dr)_\\tau \\ar[ur]_\\sigma } \\ ] ] to summarize , since the monadic multiplication of @xmath569 commutes with the reflexive and transitive closure @xmath180 in @xmath68 we can first turn an lts coalgebra @xmath14 into an endomorphism @xmath570 in @xmath68 and saturate it afterwards to obtain the map @xmath571 . precomposing the saturated map with @xmath572 in @xmath68 yields the desired labelled transition system .      here",
    ", we take @xmath573 this functor lifts to @xmath574 with the corresponding distributive law @xmath575 given in example [ example : na_monad ] .",
    "it is easy to see that for an arbitrary non - empty family @xmath557 of morphisms we have : @xmath576 let @xmath577 be the monad from example [ example : na_monad ] . by a similar reasoning as we used in the previous paragraph",
    "the @xmath28-based monad @xmath578 is an ordered saturation monad . for any @xmath579",
    "we have : @xmath580 it should be noted that , in fact , a stronger condition holds .",
    "[ theorem : nondeterministic_automata_kleisli ] the monad @xmath574 is an ordered saturation monad .    since @xmath20 is a kleene monad , by corollary [ coro : kleene_identity ] the identity monad on @xmath68 is an ordered saturation monad .",
    "the remaining part of the proof is similar to the proof of theorem [ theorem : lts_monad_ordered_saturation_monad ] and hence is omitted .    the small difference between the fact that @xmath581 is an ordered saturation monad and that @xmath296 is one lies in condition  ( [ axioms:4 ] ) from the definition of ordered saturation monad . by the above theorem this condition now holds for any morphism @xmath582 taken from @xmath68 .",
    "the reader is referred to section [ section : weak_bisimulation_final_semantics ] to see an interesting example of an application of the above theorem .",
    "we will use it to demonstrate what final weak bisimulation semantics is for non - deterministic automata considered as @xmath255-coalgebras in the base category @xmath68 .",
    "the aim of this section is to define weak bisimulation and study its properties in the setting of @xmath28-based coalgebras . here",
    ", we assume that @xmath3 is an ordered saturation monad on @xmath28 .",
    "we restrict ourselves to this category intentionally since it is easier for us to formulate the definition of weak bisimulation and study its properties .",
    "the next section describes the more general case from the point of view of final weak bisimulation semantics .",
    "note that in this section and in the definition of weak bisimulation we do not consider any visible or silent part of the type functor @xmath3 .",
    "we assume this is handled internally by its monadic structure .",
    "this section is motivated by our results presented in @xcite . in this case",
    "though , a saturator is not an arbitrary closure operator , but it is directly linked to the type @xmath3 via the theory presented in section  [ section : saturation ] .    [ definition : weak_bisimulation ] we say that a symmetric relation @xmath583 is a _ weak bisimulation _ on @xmath584 if there is a coalgebraic structure @xmath585 such that in the category @xmath57 we have : @xmath586    these two inequalities can be restated in terms of the composition in @xmath28 as follows : @xmath587 they amount to the commutativity of the following ( lax ) diagram in @xmath28 : @xmath588 |{\\leqslant }          x\\ar[d]_{\\alpha } &   r\\ar[d]^{\\gamma } \\ar[l]_{\\pi_1 } \\ar[r]^{\\pi_2 } \\ar @ { } [ dr ] |{\\leqslant } &   x \\ar[d]^{\\alpha^ { * } } & \\\\          tx & tr\\ar[l]^{t\\pi_1 } \\ar[r]_{t\\pi_2 } & tx      } \\ ] ] the assumption about symmetry of @xmath589 allows us to formulate the definition in a more compact way , with only one diagram , and this is the only reason why we use it .",
    "let @xmath590 be the lts monad from subsection [ subsection : lts_monad ] and let @xmath14 be an lts coalgebra . as we have seen in subsection [ subsection : lts_monad ] and [ subsection : saturation_for_lts ] its saturation @xmath1 is given by : @xmath591 it is easy to see that a relation @xmath589 on @xmath14 is a weak bisimulation according to the above definition if and only if it is a weak bisimulation in the sense of definition  [ definition : lts_weak_bisimulation ] . to see another example the reader is referred to section  [ section : segala ] .",
    "if a relation @xmath171 is a strong bisimulation on @xmath1 then it is a weak bisimulation on @xmath14 .",
    "given a morphism @xmath32 a _ kernel pair _ is a pullback of @xmath592 . for more information on kernel pairs and @xmath28-endofunctors weakly preserving kernel pairs the reader",
    "is referred to e.g. @xcite .",
    "[ lemma : weak_implies_strong ] let @xmath3 weakly preserve kernel pairs .",
    "if @xmath171 is an equivalence relation and a weak bisimulation on @xmath584 then there is a structure @xmath585 such that the following diagram commutes : @xmath593 | { = }          x\\ar[d]_{\\alpha^ { * } } & r\\ar @ { } [ dr ] | { = } \\ar[d]_\\gamma \\ar[l]_{\\pi_1 } \\ar[r]^{\\pi_2 } & x \\ar[d]^{\\alpha^ { * } } \\\\",
    "tx & tr\\ar[l]^{t\\pi_1 } \\ar[r]_{t\\pi_2 } & tx      } \\ ] ] in other words , @xmath589 is a strong bisimulation on @xmath594 .    since @xmath589 is a symmetric relation and a weak bisimulation there is a structure @xmath595 such that @xmath596 and @xmath597 . by the properties of saturation",
    "we can infer that @xmath598 .",
    "let @xmath599_{r}$ ] .",
    "since @xmath600 we have @xmath601 .",
    "therefore , @xmath602 let @xmath603 .",
    "hence , @xmath604 since @xmath605 and @xmath606 we get @xmath607 .",
    "therefore , @xmath608 ( i.e. @xmath609 ) . since @xmath589 with @xmath610 and @xmath611 is a pullback of @xmath612 and since @xmath3 weakly preserves kernel pairs there is a structure @xmath613 making the following diagram commute : @xmath614^{t p } & t(x / r ) \\\\ & t r \\ar[r]^{t \\pi_2}\\ar[u]_{t \\pi_1 } & t x \\ar[u]_{t p}\\\\ r\\ar@/^/[uur]^{\\alpha^{*}\\circ \\pi_1 } \\ar@/_/[urr]_{\\alpha^{*}\\circ \\pi_2}\\ar@{.>}[ru]|{\\gamma ' } } \\ ] ] hence , @xmath613 is a coalgebra for which @xmath615 are homomorphisms from @xmath616 to @xmath1 .",
    "this proves the assertion .",
    "we say that a monad @xmath3 whose kleisli category is order enriched _",
    "weakly lax preserves pullbacks _ provided that for any pullback diagram on the left the diagram on the right is a weak pullback diagram : @xmath617_{p_1}\\ar[r]^{p_2 } & b\\ar[d]^g \\\\ a\\ar[r]_f & c } \\qquad   \\xymatrix { tp\\ar[d]_{tp_1}\\ar[r]^{tp_2 } & tb\\ar[d]^{tg } \\\\ ta\\ar[r]_{tf } & tc } \\ ] ] such that for any object @xmath13 with @xmath618 , @xmath619 and @xmath620 there is @xmath621 satisfying @xmath622 and @xmath623 : +   + @xmath624^{q_2 } \\ar[d]_{q_1}\\ar@{}[dr]|\\leqslant    & tb\\ar[d]^{tg } \\ar@{}[drrr]|\\implies & & & x\\ar@{}[dr]|\\leqslant   \\ar[r]|-\\xi\\ar@(ur , ul)^{q_2 } [ rr]_\\leqslant \\ar@(dl , l)_{q_1}[dr ] & tp\\ar[d]^{tp_1}\\ar[r]_{tp_2 } & tb\\ar[d]^{tg}\\\\   ta\\ar[r]_{tf } & tc & & & & ta\\ar[r]_{tf } & tc } \\ ] ]    the powerset monad weakly preserves pullbacks and also weakly lax preserves them . to see this consider two maps @xmath625 .",
    "their pullback is given by @xmath626 , @xmath627 and @xmath628 .",
    "assume that for an object @xmath13 and morphisms @xmath629 and @xmath630 we have @xmath631 . for @xmath26 let @xmath632 and @xmath633 such that @xmath634 and @xmath635 .",
    "by our assumption we get @xmath636 .",
    "this means that for any @xmath637 there is @xmath638 such that @xmath639 .",
    "define @xmath640 on @xmath26 by @xmath641 .",
    "the map @xmath642 satisfies the desired properties . by a similar argument",
    "we can prove that the lts monads @xmath195 and @xmath208 from section [ section : lts_coalgebraically ] also satisfy this property .",
    "the following assertions are true :    * let arbitrary cotupling in @xmath57 be monotonic .",
    "if @xmath643 is a family of weak bisimulations on @xmath644 then @xmath645 is a weak bisimulation on this structure . * if @xmath589 and @xmath276 are weak bisimulations on @xmath644 and if @xmath3 weakly lax preserves pullbacks then @xmath646 is a weak bisimulation .",
    "we will now prove the first assertion .",
    "let @xmath643 be a family of weak bisimulations on @xmath644 with suitable structures @xmath647 .",
    "let the coproduct in @xmath648 of the family of coalgebras @xmath649 be denoted by @xmath650 ( such a coproduct always exists for coalgebras over",
    "@xmath28 - see e.g. @xcite for details ) . since arbitrary cotupling in @xmath57 is monotonic and since the coproducts in @xmath57 come from the base category we have : @xmath651^{\\pi_2 } r_i\\ar@(ur , ul)[rr]^{\\mathsf{in}_i } \\ar[d]_{\\gamma_i } \\ar@{}[dr]|\\leqslant & x\\ar[d]_{\\alpha^{*}}\\ar@{}[dr]|\\geqslant & \\coprod_i r_i \\ar[l]_{p_2 } \\ar[d]^\\gamma \\\\ tr_i\\ar[r]_{t\\pi_2}\\ar@(dr , dl)[rr]_{t\\mathsf{in}_i }   & tx & t\\coprod_i r_i \\ar[l]^{tp_2 } } \\qquad   \\xymatrix@-0.5pc { & \\\\ \\ar[r]^{\\pi_1 } r_i\\ar@(ur , ul)[rr]^{\\mathsf{in}_i } \\ar[d]_{\\gamma_i } \\ar@{}[dr]|\\geqslant & x\\ar[d]_{\\alpha}\\ar@{}[dr]|\\leqslant & \\coprod_i r_i \\ar[l]_{p_1 } \\ar[d]^\\gamma \\\\ tr_i\\ar[r]_{t\\pi_1}\\ar@(dr , dl)[rr]_{t\\mathsf{in}_i }   & tx & t\\coprod_i r_i \\ar[l]^{tp_1 } } \\ ] ] in the above diagrams @xmath652 denotes the coprojection into the @xmath653-th component , and @xmath654 , @xmath655 the cotuples @xmath656 $ ] and @xmath657 $ ] respectively .",
    "hence , the following inequalities hold in @xmath57 : @xmath658 define @xmath659 and consider a right inverse @xmath455 of this map .",
    "define @xmath660 by : @xmath661 by the inequality ( [ inequality : weak_1 ] ) we have @xmath662 .",
    "since @xmath663 we have : @xmath664 by the inequality ( [ inequality : weak_2 ] ) using a similar argument as above we prove @xmath665 .    to prove the second assertion consider weak bisimulations @xmath589 and @xmath276 with structures @xmath666 and @xmath667 respectively .",
    "let @xmath102 with @xmath668 and @xmath669 be the pullback of @xmath47 and @xmath670 . by our assumptions we have",
    "@xmath671_{p_2 } \\ar@/^0.5pc/[dr]^{p_1 } \\\\ r\\ar@{}[dr]|\\leqslant \\ar[d]_{\\gamma_r^{*}}\\ar[r]^{\\pi_2 } & x\\ar@{}[dr]|\\leqslant \\ar[d]_{\\alpha^ { * } } & s\\ar[d]^{\\gamma_s^{*}}\\ar[l]_{\\pi_1 } \\\\",
    "tr\\ar[r]_{t\\pi_2 } & tx & ts\\ar[l]^{t\\pi_1}\\\\ & ta\\ar@/^0.5pc/[ul]^{tp_2 } \\ar@/_0.5pc/[ur]_{tp_1 } } \\qquad   \\xymatrix@-0.5pc { & a\\ar@{-->}[d]_{\\exists \\xi } \\ar@/^1pc/[ddr]^{\\gamma_s^{*}\\circ p_1 } \\ar@/_1pc/[ddl]_{\\gamma_r^{*}\\circ p_2 }   \\ar@{}[ddl]|\\leqslant\\ar@{}[ddr]|\\leqslant   \\\\ & ta\\ar[dr]_{tp_1 } \\ar[dl]^{tp_2 } \\\\",
    "tr\\ar[dr]_{t\\pi_1 } & & ts\\ar[dl]^{t\\pi_1}\\\\ & tx } \\ ] ] note that the set @xmath102 is given by @xmath672 .",
    "define the map @xmath673 .",
    "surjectivity of @xmath674 allows us to introduce a coalgebraic structure on @xmath646 as follows @xmath675 where @xmath455 is a right inverse of @xmath674 .",
    "moreover , we have : @xmath676 similarily we prove that @xmath677 .",
    "the following lemma and theorem are a direct consequences of the results above .",
    "assume that arbitrary cotupling in @xmath57 is monotonic .",
    "then the greatest weak bisimulation @xmath678 on a coalgebra @xmath644 exists",
    ". moreover , if additionally @xmath3 weakly lax preserves pullbacks then @xmath678 is an equivalence relation .",
    "[ theorem : weak_bisim_eq_strong_on_saturated ] assume that arbitrary cotupling in @xmath57 is monotonic and let @xmath3 weakly lax preserve pullbacks .",
    "the greatest weak bisimulation @xmath678 on a coalgebra @xmath644 coincides with the greatest strong bisimulation on @xmath594 .",
    "assume that the category @xmath648 admits the terminal object @xmath679 and let @xmath680 denote the unique homomorphism from a coalgebra @xmath644 to the final coalgebra @xmath681 . by theorem [ theorem : weak_bisim_eq_strong_on_saturated ] and the usual coinduction principle",
    "@xcite weak coinduction rule can be stated as follows .",
    "if the assumptions of theorem [ theorem : weak_bisim_eq_strong_on_saturated ] are met then for any @xmath644 we have : @xmath682 however , the lemma below says that in order to calculate @xmath683 it is enough to compose @xmath680 with @xmath684 .",
    "[ lemma : beh_map ] for any @xmath644 we have : @xmath685    by the definition of an ordered saturation monad the map @xmath686 is also a homomorphism from @xmath1 to @xmath687 . therefore , @xmath688 is a homomorphism from @xmath1 to @xmath681 . by uniqueness",
    "we can infer the desired equality .",
    "[ theorem : weak_coinduction ] assume that arbitrary cotupling in @xmath57 is monotonic and let @xmath3 weakly lax preserve pullbacks .",
    "then for any @xmath188 we have @xmath689",
    "this section is devoted to defining weak bisimulation semantics via terminal object in a general setting of coalgebras whose type is a monad @xmath3 with @xmath57 an order enriched category .",
    "we define the following categories .",
    "let @xmath690 denote the category of all @xmath3-coalgebras and lax homomorphisms between them . to be more precise",
    "if @xmath644 and @xmath691 are @xmath3-coalgebras then a morphism @xmath32 is a _ lax homomorphism _ if @xmath692 .",
    "let @xmath693 denote a full subcategory of @xmath690 consisting of @xmath3-coalgebras @xmath644 satisfying @xmath694 and @xmath398 . we can restate the above two conditions using the composition in @xmath5 and order in @xmath57 as follows : @xmath695_{id}\\\\ & x\\ar[u]_{\\alpha}\\ar@/^1pc/[lu]^{\\eta_x}\\ar@{}[lu]|{\\phantom{aa}\\leqslant } } \\qquad   \\xymatrix { tx\\ar[d]_{t\\alpha } & x\\ar[l]_{\\alpha}\\ar[d]^\\alpha\\ar@{}[ld]|\\leqslant \\\\ ttx \\ar[r]_\\mu & tx } \\ ] ] it is worth noting that , although these two conditions are not the conditions that define eilenberg - moore algebras for a monad @xcite , they are somewhat partly dual to them .",
    "indeed , only some arrows are reversed and partial order introduced to the diagrams .",
    "such categories have been considered in modern mathematical literature under a name of _",
    "@xmath3-monoids _ or _",
    "kleisli @xmath3-algebras _ ( see e.g. @xcite ) . if @xmath3 is the filter monad @xmath94 on @xmath28 then the category @xmath696 is equivalent to the category @xmath697 of topological spaces and continuous maps @xcite .",
    "let @xmath698 denote the category with objects from @xmath699 and morphisms being standard homomorphisms from @xmath700 .",
    "in particular , the category @xmath698 is a full subcategory of @xmath700 .",
    "now assume the following :    1 .",
    "the inclusion functor @xmath701 has a left adjoint denoted by @xmath180,[adjunction_a ] @xmath702 ^ -{(-)^{*}}\\ar@{}[r]|-\\perp &   \\mathsf{c}_{t,\\leqslant}^{*}\\ar@<1.5ex>[l ] } \\ ] ] 2 .",
    "the functor @xmath703 lifts to @xmath704 , i.e. [ adjunction_b ] @xmath705^{(-)^{*}}\\ar[d ] & \\mathsf{c}_{t}^{*}\\ar[d]\\\\ \\mathsf{c}_{t,\\leqslant}\\ar[r]_{(-)^ { * } } & \\mathsf{c}_{t,\\leqslant}^ { * } } \\ ] ] 3 .",
    "the functor @xmath703 is the identity on morphisms .",
    "[ adjunction_c ]    if @xmath3 is an ordered saturation monad then the functor @xmath706 that assigns to any coalgebra @xmath644 the saturated coalgebra @xmath1 and which is the identity on morphisms satisfies ( [ adjunction_a ] ) , ( [ adjunction_b ] ) and ( [ adjunction_c ] ) .",
    "this follows directly by the definition of ordered saturation monads and that @xmath707 iff @xmath708 .",
    "assume the category @xmath700 admits a final object @xmath679 .",
    "let @xmath686 denote the unique homomorphism from @xmath644 to @xmath679 .",
    "we define _ weak bisimulation semantics morphism _ for any @xmath3-coalgebra @xmath644 by @xmath709 using a similar argument as in the proof of lemma [ lemma : beh_map ] we show the following .    [ theorem_wbeh ] for any @xmath644 we have : @xmath710    we end this section with an example of weak bisimulation semantics for coalgebras considered in a category different from @xmath28 .",
    "consider the monad @xmath296 from example [ example : na_monad ] .",
    "as stated in theorem [ theorem : nondeterministic_automata_kleisli ] it is an ordered saturation monad .",
    "let the @xmath550-coalgebra @xmath681 be defined by : @xmath711 this coalgebra considered in @xmath68 as an @xmath255-coalgebra @xmath712[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}\\overline{f_\\tau } \\sigma_\\tau ^\\ast$ ] is the final object in @xmath713 @xcite .",
    "for any non - deterministic automaton coalgebra @xmath714 considered in @xmath68 as a coalgebra @xmath388[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}\\overline{f_\\tau } x$ ] the unique homomorphism @xmath715[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}\\sigma^{*}_\\tau$ ] is given by the map @xmath716 which assigns to any state @xmath82 the set of words it accepts @xcite . for a word @xmath717",
    "we have : @xmath718 by subsection [ subsection : saturation_for_lts ] and theorem [ theorem_wbeh ] it is easy to see that the weak bisimulation semantics morphism @xmath719 is in this case given by the following . for a word @xmath720",
    "we have @xmath721 provided that @xmath722 it is easy to see that for @xmath723 we have @xmath724 if and only if @xmath725 any coalgebra @xmath726 may be viewed as a non - deterministic automaton with silent transitions @xcite . by identity ( [ identity : trace_equivalence ] ) we can infer that @xmath724 if and only if @xmath82 and @xmath727 admit the same weak traces @xcite , i.e. if and only if @xmath728 , where @xmath729 is given as follows .",
    "we have @xmath730 provided that : @xmath731",
    "( simple ) probabilistic systems @xcite , known in the coalgebraic literature under the name of ( simple ) segala systems , are modelled as coalgebras of the type @xmath732 and @xmath733 respectively @xcite and require extra care .",
    "although the powerset functor @xmath20 and the distribution functor @xmath30 are endowed with natural monadic structures , the combination @xmath734 lacks one as there is no distributive law @xmath735 between the monads @xcite . in order to deal with this obstacle",
    ", we adopt a variant of one of the approaches proposed in @xcite that was further generalised in @xcite . later in this section",
    "we introduce the monad @xmath42 which is inspired by the work of jacobs @xcite . as will be demonstrated , @xmath42 is suitable for modelling the combination of possibilistic and probabilistic observations .",
    "in particular , we will show that the monad @xmath736 can be used to model simple segala systems and their probabilistic weak bisimulations @xcite .",
    "although lynch and segala in @xcite and segala in @xcite present and study probabilistic systems in their full generality , the notion of a probabilistic weak bisimulation is defined in their work only for simple systems .",
    "therefore , we start the section by recalling the definitions proposed in @xcite concerning simple segala systems only . for a simple segala system coalgebra @xmath737 , a state @xmath26 and @xmath738 we write @xmath739 if @xmath740 . for a state @xmath26 and a measure",
    "@xmath741 a pair @xmath742 is called a _ step _ in @xmath14 if there is @xmath743 and @xmath744 such that @xmath739 and @xmath745 for any @xmath189 .",
    "a _ combined step _ in @xmath14 is a pair @xmath742 , where @xmath26 and @xmath741 for which there is a countable family of positive numbers @xmath746 such that @xmath747 and a countable family of steps @xmath748 in @xmath14 such that @xmath749 .",
    "note that for the sake of simplicity and clarity of notation the definition of a combined step is a slight modification of a similar definition presented in @xcite . to be more precise",
    ", segala also considers a possibility of a deadlock in a combined step .",
    "however , for simple segala systems deadlocks are not taken into account .",
    "hence , the notion of weak arrows @xmath750 presented here remains the same regardless of this small difference between the two definitions and is defined as follows . for any natural number @xmath494",
    "we define @xmath751 inductively by :    * @xmath752 and @xmath753 for @xmath754 , * @xmath755 if there is a combined step @xmath742 in @xmath737 such that if @xmath756 then @xmath757 and @xmath758 and if @xmath759 then @xmath760 otherwise @xmath761 and @xmath762 .    for any @xmath743",
    "we write @xmath763 whenever @xmath764 for some @xmath494 .",
    "@xcite[definition : prob_weak_bisimulation_segala ] we say that an equivalence relation @xmath589 on @xmath13 is a _",
    "probabilistic weak bisimulation _ on @xmath14 if the following condition is satisfied : @xmath765 where @xmath766 .",
    "segala in @xcite also introduces a standard ( i.e. not probabilistic ) bisimulation . in this definition one",
    "does not consider a convex combination of measures .",
    "segala argues that the probabilistic version is more suitable for probabilistic systems ( see ( * ? ? ?",
    "* example  8.3.1 ) for more details ) .    in this section",
    "we only work with finitary simple segala systems , i.e. simple segala systems for which the functor @xmath30 is replaced with the functor @xmath767 which assigns to any set @xmath13 the set @xmath768 of measures on @xmath13 with finite support . in this case",
    "we also modify the definition of a combined step where , instead of a countable family of positive numbers , we assume the family @xmath769 to be finite . the main reason for this simplification is that in order to put segala systems into our framework , we need to provide the type functor with a monadic structure .",
    "the suitable monad to do so is the monad @xmath42 which is described below .",
    "as we will see , this monad only deals with measures with finite ( not countable ) support and their finite convex combinations .",
    "we leave developing the theory describing an analogous monad which deals with countable measures and countable convex combinations as an open problem . to summarize , from now on we assume the following :    * in the definition of a combined step presented above we consider only a finite family of non - negative numbers @xmath770 and a finite family of steps .",
    "with this change we also alter the definition of @xmath750 .",
    "hence , if we refer to definition [ definition : prob_weak_bisimulation_segala ] then we refer to the version with finitary combined steps .",
    "the rest of this section is devoted to presentation of the monad @xmath42 , introducing a monadic structure on @xmath736 ( subsection  [ subsection : monad_cm ] ) and studying its properties from the point of view of definition of weak bisimulation from section  [ section : weak_bisimulation ] .",
    "we end this section with theorem  [ theorem : segala_final ] which claims that segala s definition of weak bisimulation and our approach coincide for simple segala systems .",
    "the aim of this subsection is to present the monad @xmath42 which is highly inspired by the work of jacobs @xcite . a part of the results below come from @xcite .",
    "however , a part of the construction of this monad diverges slightly from jacobs original construction @xcite .",
    "see remark [ remark : diverge_cm ] below for a detailed discussion .    by @xmath771",
    "we denote the semiring @xmath772 of non - negative real numbers with ordinary addition and multiplication . by a @xmath771-_semimodule",
    "_ we mean a commutative monoid with actions @xmath773 satisfying axioms listed in e.g. @xcite . for a set @xmath13 and a mapping @xmath32 put @xmath774 we will often denote elements @xmath775 using the formal sum notation by @xmath776 or simply by @xmath777 if @xmath778 .",
    "the set @xmath779 carries a monoid structure via pointwise operation of addition , and @xmath771-action via @xmath780 which turn @xmath779 into a free semimodule over @xmath13 ( see e.g. @xcite for details ) . let the category of all @xmath771-semimodules and homomorphisms be denoted by @xmath781 .",
    "we have the following adjunction which yields a monadic structure on @xmath782 ( the left arrow is the forgetful functor ) : @xmath202 ^ -{\\mathcal{m}}\\ar@{}[r]|-\\perp &   \\mathsf{smod}_{[0,\\infty)}(\\mathsf{set}).\\ar@<1.5ex>[l ] } \\ ] ] for any @xmath771-semimodule @xmath783 and any non - empty subset @xmath784 define its convex closure by : @xmath785 the operator @xmath786 is a closure operator @xcite .",
    "we call a subset @xmath784 _ convex _ if @xmath787",
    ". put @xmath788 the set @xmath789 ordered by inclusion forms an _ affine complete lattice _ ( i.e. a poset with joins of all non - empty subsets ) with joins over non - empty index sets @xmath790 given by @xmath791 . following @xcite we define :    * @xmath792 for @xmath793 , * @xmath794 , * for any @xmath795 and @xmath796 put @xmath797 .",
    "[ remark : diverge_cm ] the remaining part of the construction of the monad @xmath42 diverges slightly from the construction proposed in jacobs work @xcite . to be more precise , in order to present a general definition of the monad @xmath42",
    ", jacobs considers the category @xmath798 of semimodules which are affine complete lattices over an arbitrary zero sum - free semifield implies @xmath799 .",
    "it is a _ semifield _ if all non - zero elements have multiplicative inverses . ]",
    "@xmath276 which is itself an affine complete lattice .",
    "the monad @xmath42 from @xcite is then obtained by composing two adjunctions @xmath800 , with the second adjunction yielding the convex combinations monad @xmath801 .",
    "however , the semiring @xmath771 we consider here does not satisfy the desired properties .",
    "although it is a zero sum - free semifield , it is not an affine complete lattice .",
    "we can turn the semiring @xmath771 into an affine complete lattice by extending it with the greatest element @xmath802 .",
    "however , the new structure @xmath803 $ ] is not a semifield anymore .",
    "since we are not aware of any construction of a zero sum - free semifield which is an affine complete lattice that contains @xmath771 as a subalgebra we deviate from @xcite and build the convex combinations monad @xmath801 directly on the category of @xmath771-semimodules .",
    "note that , strictly speaking , by considering @xmath771-semimodules we go outside of the scope of jacobs setting .",
    "nevertheless , many results stated in @xcite hold in our setting as the assumption about @xmath276 being an affine complete lattice is only used in the definition of the category @xmath804 .",
    "the proof of the statement below is direct and goes along the lines of the proof of ( * ? ?",
    "* lemma 4.2 ) and hence we omit it .",
    "we have :    * @xmath789 with the operations above is a @xmath771-semimodule .",
    "* the semimodule operations of @xmath789 preserve arbitrary non - empty joins .",
    "* for a semimodule homomorphism @xmath805 put @xmath806 the assignment @xmath801 is an endofunctor @xmath807 .    for",
    "a @xmath771-semimodule @xmath783 consider the following maps @xmath808 it is easy to see that these are well defined @xmath771-semimodule homomorphisms .",
    "moreover , they induce natural transformations @xmath809 and @xmath810 between suitable endofunctors on @xmath811 .",
    "the proof of the following theorem is a straightforward verification of monad axioms .",
    "the triple @xmath812 is a monad on @xmath811 .",
    "the composition of the following two adjunctions yields a monad @xmath813 : @xmath202 ^ -{\\mathcal{m}}\\ar@{}[r]|-\\perp &   \\mathsf{smod}_{[0,\\infty)}(\\mathsf{set})\\ar@<1.5ex>[l ] \\ar@<1.5ex>[r]^-{^\\sharp } \\ar@{}[r]|-\\perp &   \\mathcal{k}l(\\mathcal{c } ) \\ar@<1.5ex>[l]^-{u_\\mathcal{c}}.           } \\ ] ] for a set @xmath13 and a map @xmath32 we have : @xmath814 the unit and the multiplication of @xmath42 are given on their @xmath13-components by : @xmath815 the formula for the composition in @xmath291 is the same as the one given in @xcite for jacobs monad . for @xmath816 and @xmath817",
    "we have : @xmath818    the proof of the lemma below is a direct translation of ( * ? ? ?",
    "* section  6 ) and hence we omit it .    [",
    "lemma : basic_properties_of_cm ] we have the following :    * the kleisli category @xmath291 is enriched over directed complete partial orders with the order on hom - sets given by @xmath819 * if @xmath820[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}y\\}_{i\\in i}$ ] is a non - empty family of morphisms then @xmath821 exists and is given by @xmath822 . moreover , for any @xmath823[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}z$ ] we have @xmath824 * let @xmath825 .",
    "then for any @xmath117[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}y$ ] in @xmath291 we have @xmath826 .",
    "the monad @xmath42 is an ordered saturation monad .    by the fact that @xmath291 is enriched over directed complete partial orders and by theorem [ theorem : dcpo_enriched_monads_star_monads ]",
    "it follows that we only need to show the implication below . for any @xmath388[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}x$ ] and @xmath386[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}y$ ] in @xmath291 and any @xmath32 in @xmath28 we have : @xmath827 indeed , by lemma [ lemma : basic_properties_of_cm ] it follows that @xmath828 for any @xmath32 .",
    "we will now prove that @xmath829 .",
    "since we always have @xmath830 , it is enough to show that @xmath831 . for @xmath26 assume @xmath832 .",
    "we have @xmath833 .",
    "this precisely means that @xmath834 .",
    "hence , @xmath835 which proves the assertion . now to prove the required implications assume @xmath836 for @xmath837 .",
    "we have @xmath838    by the above result and theorem [ theorem : dcpo_enriched_monads_star_monads ] it follows that for any @xmath388[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}x$ ] in @xmath291 we have : @xmath839 let us introduce some notation . for a coalgebra @xmath840 and @xmath26",
    "we write @xmath841 if we have @xmath842 .",
    "let @xmath843 denote the relation inductively defined as follows :    * @xmath844 , * if @xmath845 where @xmath846 and @xmath847 and @xmath848 then @xmath849.\\ ] ]    we have @xmath850 for any natural number @xmath494 . by induction on @xmath494 we prove the following lemma .",
    "we have @xmath851 if and only if @xmath852 .",
    "define @xmath853    we have @xmath854 if and only if @xmath855 .",
    "this follows directly by : @xmath856 the last equality holds since @xmath857 is an ascending family of convex sets .",
    "the monad @xmath42 comes with strength @xmath858 given by @xmath859 this yields a lifting @xmath860 of the functor @xmath861 . since @xmath291 is a category with zero morphisms we may introduce a monadic structure on @xmath862 as in subsection [ subsec : monad_on_tf ] .",
    "the unit @xmath366 and the multiplication @xmath307 of @xmath569 are given on their @xmath13-components by : @xmath863    the monad @xmath736 obtained by composing two adjunctions @xmath202\\ar@{}[r]|-\\perp &   \\mathcal{k}l(\\mathcal{cm } ) \\ar@<1.5ex>[l ] \\ar@<1.5ex>[r ] \\ar@{}[r]|-\\perp &   \\mathcal{k}l(\\overline{\\sigma}_\\tau ) \\ar@<1.5ex>[l ] .        }",
    "\\]]is an ordered saturation monad .",
    "we will prove that all assumptions of theorem [ theorem_star_monad_s ] are satisfied for @xmath864 and @xmath865 .",
    "the first two assumptions hold by lemma [ lemma : basic_properties_of_cm ] .",
    "we will now show that @xmath569 is locally continuous .",
    "we see that for any non - empty family @xmath820[l]{\\ensuremath{\\longrightarrow\\makebox{$\\mkern-24mu\\color{white}{\\bullet}\\mkern+12mu$}\\makebox{$\\mkern-21mu\\circ\\mkern+10mu$}\\ignorespacesafterend}}}y\\}_{i\\in i}$ ] of morphisms in @xmath291 we have @xmath866 .",
    "this means that @xmath867 .",
    "finally , we will show that the last assumption of theorem [ theorem_star_monad_s ] holds , namely : @xmath868 indeed , by lemma  [ lemma : basic_properties_of_cm ] we have @xmath869    following the guidelines of the proof of theorem [ theorem : ordered_saturation_monad_ts ] the formula for saturation of a coalgebra @xmath870 is given by @xmath871 .",
    "our aim now will be to describe the structure @xmath872 and its transitions .",
    "the lemmas below will be used in the next subsection .",
    "note that the coalgebra @xmath568 is in fact a @xmath42-coalgebra with a state - space given by @xmath873 .",
    "hence we adopt the notation for @xmath42-coalgebras introduced in this subsection . from now on , in order to avoid heavy notation , we will denote @xmath874 and @xmath875 by @xmath103 and @xmath876 respectively .",
    "[ lemma : m_sigma_1 ] assume @xmath754 .",
    "we have :    * @xmath877 if and only if @xmath878 , * @xmath879 if and only if the following conditions are met : 1 .   @xmath880 for any @xmath881 and @xmath189 , 2 .",
    "@xmath882 for some @xmath883 such that @xmath884 for any @xmath727 .",
    "it follows directly by the definition of the monad @xmath201 .",
    "[ lemma : tau_sigma_segala ] for any @xmath494 and @xmath738 if @xmath885 then @xmath886    the assertion follows directly by induction and lemma [ lemma : m_sigma_1 ] .",
    "[ lemma : one_letter_saturated ] assume @xmath754 .",
    "if @xmath887 then @xmath880 for @xmath888 and @xmath189 .    we will prove the assertion for @xmath889 by induction .",
    "the assertion is true for @xmath890 .",
    "assume it holds for @xmath889 and take @xmath891 .",
    "this means that there is @xmath892 and @xmath893 such that @xmath894.\\ ] ] by lemma [ lemma : m_sigma_1 ] it follows that @xmath895 . by induction hypothesis it follows that for any @xmath896 we have @xmath897 for @xmath881 , @xmath189 .",
    "hence , @xmath880 for @xmath881 and @xmath189 .",
    "consider a segala system @xmath898 and define a @xmath736-coalgebra @xmath899 as follows : @xmath900 since any simple segala system can also be considered a segala system the above construction is applicable to simple segala systems . from now on a @xmath736-coalgebra @xmath870 is called _ ( simple ) segala system _ whenever it is obtained via the above construction from a ( simple ) segala system .",
    "consider a simple segala system for @xmath901 whose state space is @xmath902 and whose structure is given by : @xmath903[f- ] } \\selecttips{cm } { }   \\xymatrix { x_1\\ar@/_1pc/[r]|{\\frac{2}{3},a } \\ar@/_1pc/[d]|{1,b } \\ar@/^1pc/[d]|{\\frac{1}{3},a } & x_2 \\ar@/_1pc/[l]|{1,a}\\\\ x_3 } } } \\ ] ] then the @xmath736-coalgebra associated with it has the structure given by : @xmath904\\},\\\\ x_2 & \\mapsto & \\ { p \\cdot ( a , x_1 ) \\mid p\\in [ 0,1 ] \\ } ,   \\\\ x_3 & \\mapsto & \\{0\\ } , \\end{array}\\end{aligned}\\ ] ] which is depicted in the following diagram : @xmath564[f- ] } \\selecttips{cm } { }   \\xymatrix { x_3 & x_1\\ar@/_1pc/[r]_{p_1\\cdot \\frac{1}{3},a } \\ar@/_1pc/[l]_{p_2,b } \\ar@/^1pc/[l]^{p_1\\cdot \\frac{2}{3},a } & x_2 \\ar@/_1pc/[l]_{p , a } } \\ ] ]    the aim of this subsection is to prove that the probabilistic weak bisimulation for simple segala systems from definition [ definition : prob_weak_bisimulation_segala ] coincides with the coalgebraic weak bisimulation from section [ section : weak_bisimulation ] for these systems considered as @xmath736-coalgebras .",
    "assume @xmath870 is a simple segala system obtained from a @xmath905-coalgebra whose strong and weak arrows , defined at the beginning of this section , are denoted by @xmath103 and @xmath906 respectively .",
    "note that we also use the symbol @xmath103 to denote the relation @xmath907 .",
    "however , since the state space of the @xmath42-coalgebra @xmath908 is different from the state space of the simple segala system taken into consideration this symbol overloading should not lead to any ambiguity .",
    "[ lemma : prob_weak_implies_weak ] for any @xmath26 if @xmath909 then @xmath910",
    ". moreover , if @xmath911 then @xmath912 for any @xmath738 .",
    "we will show the above statement holds for @xmath913 and @xmath889 for any @xmath494 .",
    "indeed , the two conditions hold for @xmath914 and @xmath890 . now assume that both assertions are true for @xmath494 .",
    "let @xmath755 for @xmath738 .",
    "this means that there is a combined step @xmath742 such that for @xmath756 we have @xmath757 and @xmath915 in the above , if @xmath759 then @xmath760 otherwise @xmath761 and @xmath762 .",
    "the fact that @xmath209 is a combined step with the above properties implies that @xmath916 where @xmath917 and @xmath918 and @xmath919 .",
    "hence , by lemma [ lemma : m_sigma_1 ] it follows that @xmath920 . by induction hypothesis",
    "we have    * @xmath921 , * @xmath922 .",
    "moreover , @xmath923 hence , by the definition of @xmath924 and the fact that @xmath920 we can infer that @xmath925 now , to prove that the condition @xmath926 implies @xmath927 it is enough to see that by the previous condition we have @xmath928 .",
    "then by lemma  [ lemma : tau_sigma_segala ] we get @xmath929    an expression @xmath930 for which there is a letter @xmath738 such that @xmath931 and @xmath880 for any @xmath881 and @xmath189 is called _ simple probabilistic expression over _ @xmath932 .",
    "[ lemma : simple_prob_exp_arrow ] if @xmath933 and @xmath934 is a simple probabilistic expression over @xmath932 then @xmath935",
    ".    we will again prove the assertion for relations @xmath889 and @xmath913 by induction .",
    "it is true for @xmath890 and @xmath914 .",
    "now assume it holds for @xmath889 and @xmath913 and take @xmath936 , where @xmath937 is a simple probabilistic expression over @xmath932 . by the definition of @xmath924",
    "this means that    * @xmath938 and * @xmath939 and * @xmath940 such that    @xmath941.\\ ] ] since @xmath937 is a simple probabilistic expression over @xmath932 it follows that @xmath942 for any @xmath943 and @xmath944 are simple probabilistic expressions over @xmath932 and @xmath945 .",
    "this , together with lemma [ lemma : one_letter_saturated ] , means that the letters @xmath946 satisfy @xmath947 .",
    "therefore , by induction hypothesis and the definition of @xmath948 it follows that @xmath949 .",
    "[ theorem : segala_final ] assume @xmath171 is an equivalence relation .",
    "the following conditions are equivalent :    * @xmath589 is a weak bisimulation in the sense of definition [ definition : prob_weak_bisimulation_segala ] , * @xmath589 is a weak bisimulation on @xmath14 in the sense of definition [ definition : weak_bisimulation ] .",
    "assume @xmath589 is a weak bisimulation the sense of definition [ definition : prob_weak_bisimulation_segala ] .",
    "this means that for any pair @xmath950 the following holds . if for a letter @xmath738 we have @xmath951 then @xmath952 and @xmath953 .",
    "since @xmath767 is a subfunctor of @xmath782 we have @xmath954 this precisely means that there is an element @xmath955 such that    * @xmath956 and * @xmath957 .",
    "define @xmath958 as follows : @xmath959 it is easy to show that by lemma [ lemma : prob_weak_implies_weak ] the structure @xmath48 satisfies the desired properties of definition [ definition : weak_bisimulation ] . now conversely , let @xmath958 be a structure satisfying the conditions in definition [ definition : weak_bisimulation ] for @xmath14 . consider @xmath950 and let @xmath960 .",
    "then @xmath961 . let @xmath962 denote the element such that @xmath963 and put @xmath964 . since @xmath965 is a simple probabilistic expression over @xmath932 then so is @xmath937 .",
    "since @xmath966 by lemma [ lemma : simple_prob_exp_arrow ] it follows that @xmath967 . hence , @xmath589 is a weak bisimulation in the sense of definition  [ definition : prob_weak_bisimulation_segala ] .",
    "this paper presents a general setting in which it is possible to define and study properties of weak bisimulation for coalgebras . in this",
    "setting we require from the type of coalgebras we consider to be a monad whose kleisli category is order enriched .",
    "however , not all monads satisfying this condition fit into our framework as not always the adjunction @xmath968 described in section [ section : weak_bisimulation_final_semantics ] exists .",
    "for instance , consider the subdistribution monad @xmath36 . since the class of objects of @xmath969 consists only of coalgebras @xmath970 for any set @xmath13 , there fails to be a left adjoint to the inclusion functor @xmath971 .",
    "it is worth noting that in @xcite a coalgebraic weak bisimulation for @xmath972-coalgebras has been successfully defined and studied .",
    "however , the authors extend the type they consider and work with coalgebras whose type is the following functor : @xmath973 ) \\text { for any object } x , \\\\ & \\mathcal{g}_{\\sigma_\\tau } f(\\nu ) = \\nu \\circ ( id_{\\mathcal{p}\\sigma_\\tau } \\times f^{-1 } ) \\text { for } f : x\\to y \\text { and } \\nu \\in \\mathcal{g}_{\\sigma_\\tau } x.\\end{aligned}\\ ] ] we believe that a similar approach can be adopted here to fit these coalgebras into our setting .",
    "nevertheless , we leave it as an open problem .",
    "recall that in section [ section : hiding_invisible_transitions ] given a functor @xmath251 we proposed two ways to handle the invisible transition by a monadic structure .",
    "although these methods lead to two different notions of saturation , at least for lts weak bisimulation coincides for both of them .",
    "it would be very interesting to see how does the notion of weak bisimulation behave for these two approaches in general .",
    "we also plan to investigate the properties of the category @xmath699 of saturated @xmath3-coalgebras that is used in section  [ section : weak_bisimulation_final_semantics ] to express saturation via existence of a certain adjunction .",
    "i would like to thank alexandra silva for valuable remarks on an early version of this paper .",
    "i am very grateful to the anonymous referees for various comments that have hopefully made this paper more interesting and more pleasant to read .",
    "finally , i would like to thank tony barrett and bartek jaboski for their linguistic and technical support ."
  ],
  "abstract_text": [
    "<S> the paper introduces the notion of a weak bisimulation for coalgebras whose type is a monad satisfying some extra properties . </S>",
    "<S> in the first part of the paper we argue that systems with silent moves should be modelled coalgebraically as coalgebras whose type is a monad . </S>",
    "<S> we show that the visible and invisible part of the functor can be handled internally inside a monadic structure . in the second part </S>",
    "<S> we introduce the notion of an ordered saturation monad , study its properties , and show that it allows us to present two approaches towards defining weak bisimulation for coalgebras and compare them . </S>",
    "<S> we support the framework presented in this paper by two main examples of models : labelled transition systems and simple segala systems . </S>"
  ]
}
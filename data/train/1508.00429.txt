{
  "article_text": [
    "recurrent neural networks have been shown to be able to store memory patterns as fixed point attractors of the dynamics of the network .",
    "the prototypical learning rule for storing memories in attractor neural networks is hebbian learning , which can store up to @xmath0 uncorrelated patterns in a recurrent network of @xmath1 neurons .",
    "this is very far from the maximal capacity @xmath2 , which can be achieved by supervised rules , e.g.  by the perceptron learning rule . however , these rules are problematic for neurons in the neocortex or the hippocampus , since they rely on the computation of a supervisory error signal for each neuron of the network .",
    "we show here that the total synaptic input received by a neuron during the presentation of a sufficiently strong stimulus contains implicit information about the error , which can be extracted by setting three thresholds on the total input , defining depression and potentiation regions .",
    "the resulting learning rule implements basic biological constraints , and our simulations show that a network implementing it gets very close to the maximal capacity , both in the dense and sparse regimes , across all values of storage robustness .",
    "the rule predicts that when the total synaptic inputs goes beyond a threshold , no potentiation should occur .",
    "one of the fundamental challenges in neuroscience is to understand how we store and retrieve memories for a long period of time .",
    "such long - term memory is fundamental for a variety of our cognitive functions .",
    "a popular theoretical framework for storing and retrieving memories in recurrent neural networks is the attractor network model framework @xcite .",
    "attractors , i.e.  stable states of the dynamics of a recurrent network , are set by modification of synaptic efficacies in a recurrent network .",
    "synaptic plasticity rules specify how the efficacy of a synapse is affected by pre- and post - synaptic neural activity .",
    "in particular , hebbian synaptic plasticity rules lead to long - term potentiation ( ltp ) for correlated pre- and post - synaptic activities , and long - term depression ( ltd ) for anticorrelated activities .",
    "these learning rules build excitatory feedback loops in the synaptic connectivity , resulting in the emergence of attractors that are correlated with the patterns of activity that were imposed on the network through external inputs .",
    "once a set of patterns become attractors of a network ( in other words when the network `` learns '' the patterns ) , upon a brief initial activation of a subpopulation of neurons , the network state evolves towards the learned stable state ( the network `` retrieves '' a past stored memory ) , and remains in that state after removal of the external inputs ( and hence maintains the information in short - term memory ) .",
    "the set of initial network states leading to a memorized state is called the _ basin of attraction _ , whose size determines how robust a memory is .",
    "the attractor neural network scenario was originally explored in networks of binary neurons @xcite , and then extended from the 90s to networks of spiking neurons @xcite .",
    "experimental evidence in different areas of the brain , including inferotemporal cortex @xcite and prefrontal cortex @xcite , has provided support for the attractor neural network framework , using electrophysiological recordings in awake monkeys performing delayed response tasks . in such experiments ,",
    "the monkey has to maintain information in short - term ( working ) memory in a ` delay period ' to be able to perform the task .",
    "consistent with the attractor network scenario , some neurons exhibit selective persistent activity during the delay period .",
    "this persistent activity of ensembles of cortical neurons has thus been hypothesized to form the basis of the working memory of stimuli shown in these tasks .",
    "one of the most studied properties of attractor neural network as a model of memory is its storage capacity , i.e. how many random patterns can be learned in a recurrent network of @xmath1 neurons in the large @xmath1 limit .",
    "storage capacity depends both on the network architecture and on the synaptic learning rule . in many models ,",
    "the storage capacity scales with @xmath1 .",
    "in particular , the hopfield network @xcite that uses a hebbian learning rule has a storage capacity of @xmath0 in the limit of @xmath3 @xcite .",
    "later studies showed how the capacity depends on the connection probability in a randomly connected network @xcite and on the coding level ( fraction of active neurons in a pattern ) @xcite .",
    "a natural question is , what is the maximal capacity of a given network architecture , over all possible learning rules ?",
    "this question was answered by elizabeth gardner , who showed that the capacity of fully connected networks of binary neurons with dense patterns scales as @xmath2 @xcite , a storage capacity which is much larger than the one of the hopfield model .",
    "the next question is what learning rules are able to saturate the gardner bound ?",
    "a simple learning rule that is guaranteed to achieve this bound is the perceptron learning rule ( plr ) @xcite applied to each neuron independently .",
    "however , unlike the rule used in the hopfield model , the perceptron learning rule is a supervised rule that needs an explicit `` error signal '' in order to achieve the gardner bound .",
    "while such an error signal might be available in the cerebellum @xcite , it is unclear how error signals targeting individual neurons might be implemented in cortical excitatory synapses .",
    "therefore , it remains unclear whether and how networks with realistic learning rules might approach the gardner bound .",
    "the goal of the present paper is to propose a learning rule whose capacity approaches the maximal capacity of recurrent neural networks by transforming the original perceptron learning rule such that the new rule does not explicitly use an error signal .",
    "the perceptron learning rule modifies the synaptic weights by comparing the desired output with the actual output to obtain an error signal , subsequently changing the weights in the opposite direction of the error signal .",
    "we argue that the total synaptic inputs ( ` local fields ' ) received by a neuron during the presentation of a stimulus contain some information about the current error ( i.e. whether the neuron will end up in the right state after the stimulus is removed ) .",
    "we use this insight to build a field dependent learning rule that contains three thresholds separating no plasticity , ltp and ltd regions .",
    "this rule implements basic biological constraints : ( a ) it uses only information local to the synapse ; ( b ) the new patterns can be learned incrementally , i.e. it is an online rule ; ( c ) it does not need an explicit error signal ; ( d ) synapses obey dale s principle , i.e. excitatory synapses are not allowed to have negative weights .",
    "we studied the capacity and the size of the basins of attraction for a binary recurrent neural network in which excitatory synapses are endowed with this rule , while a global inhibition term controls the global activity level .",
    "we investigated how the strength of external fields and the presence of correlations in the inputs affect the memory capacity .",
    "finally , we investigated the statistical properties of the connectivity matrix ( distribution of synaptic weights , degree of symmetry ) .",
    "binary @xmath4 neurons and an aggregated inhibitory unit .",
    "the global inhibition is a function of the state of the network and the external fields , i.e. @xmath5 . a memory pattern @xmath6 is encoded as strong external fields , i.e. @xmath7 and presented to the network during the learning phase . *",
    "b. * each neuron receives excitatory recurrent inputs ( thin black arrows ) from the other neurons , a global inhibitory input ( red connections ) , and a strong binary external field ( @xmath8 ; thick black arrows ) .",
    "all these inputs are summed to obtain the total field , which is then compared to a neuronal threshold @xmath9 ; the output of the neuron is a step function of the result . ]",
    "we simulated a network of @xmath1 binary ( mcculloch - pitts ) neurons , fully - connected with excitatory synapses ( fig  [ fig : network]a ) .",
    "all the neurons feed a population of inhibitory neurons which is modeled as a single aggregated inhibitory unit .",
    "this state - dependent global inhibition projects back onto all the neurons , stabilizing the network and controlling its activity level . at each time step , the activity ( or the state ) of neuron @xmath10 ( @xmath11 ) is described by a binary variable @xmath12 .",
    "the state is a step function of the _ local field _",
    "@xmath13 of the neuron : @xmath14 where @xmath15 is the heaviside function ( @xmath16 if @xmath17 and @xmath18 otherwise ) and @xmath9 is a neuronal threshold .",
    "the local field @xmath13 represents the overall input received by the neuron from its excitatory and inhibitory connections ( fig  [ fig : network]b ) .",
    "the excitatory connections are of two kinds : recurrent connections from within the excitatory population , and external inputs .",
    "the recurrent excitatory connections are mediated by synaptic weights , denoted by a matrix @xmath19 whose elements @xmath20 ( the weight of the synapse from neuron @xmath21 to @xmath10 ) are continuous non - negative variables ( @xmath22 ; @xmath23 ) . in the following , and in all our simulations , we assume that the weights are initialized randomly before the training takes place ( see materials and methods ) .    therefore , in the absence of external inputs , the local field of each neuron @xmath10 is given by : @xmath24 where @xmath25 represents the inhibitory input .    for the sake of simplicity , we simulated a synchronous update process , in which the activity of each neuron @xmath26 is computed from the local field @xmath27 at the previous time step , and all updates happen in parallel .",
    "the network was designed so that , in absence of external input and prior to the training process , it should spontaneously stabilize itself to some fixed overall average activity level @xmath28 ( fraction of active neurons , or sparseness ) , regardless of the initial conditions . in particular",
    ", we aimed at avoiding trivial attractors ( the all - off and all - on states ) . to this end , we model the inhibitory feedback ( in absence of external inputs ) as a linear function of the overall excitatory activity : @xmath29 the parameters @xmath30 and @xmath31 can be understood as follows : @xmath30 is the average inhibitory activity when the excitatory network has the desired activity level @xmath28 , i.e. when @xmath32 ; @xmath31 measures the strength of the inhibitory feedback onto the excitatory network .",
    "this expression can be interpreted as a first - order approximation of the inhibitory activity as a function of the excitatory activity around some reference value @xmath33 , which is reasonable under the assumption that the deviations from @xmath33 are small enough . indeed , by properly setting these two parameters in relation to the other network parameters ( such as @xmath9 and the average connection strength ) it is possible to achieve the desired goal of a self - stabilizing network .",
    "in the training process , the network is presented a set of @xmath34 patterns in the form of strong external inputs , representing the memories which need to be stored .",
    "we denote the patterns as @xmath35 ( where @xmath36 and @xmath37 ) , and assume that each entry @xmath38 is drawn randomly and independently . for simplicity , the coding level @xmath28 for the patterns was set equal to the spontaneous activity level of the network , i.e.   @xmath39 with probability @xmath28 , 0 otherwise . during the presentation of a pattern @xmath40 , each neuron @xmath10 receives an external binary input @xmath41 , where @xmath42 denotes the strength of the external inputs , which we parameterized as @xmath43 . in addition",
    ", the external input also affects the inhibitory part of the network , eliciting a response which indirectly downregulates the excitatory neurons .",
    "we model this effect as an additional term @xmath44 in the expression for the inhibitory term ( eq .  [ eq : i0 ] ) , which therefore becomes : @xmath45 the general expression for the local field @xmath27 then reads : @xmath46 in the absence of external fields , @xmath47 for all @xmath10 , and thus eqs .",
    "[ eq : i ] and  [ eq : vi ] reduce to the previous expressions eqs .",
    "[ eq : i0 ] and  [ eq : vi0 ] .",
    "the goal of the learning process is to find values of @xmath20 s such that the patterns @xmath35 become attractors of the network dynamics .",
    "qualitatively , this means that , if the training process is successful , then whenever the network state gets sufficiently close to one of the stored patterns , i.e.  whenever the hamming distance @xmath48 between the current network state and a pattern @xmath40 is sufficiently small , the network dynamics in the absence of external inputs should drive the network state towards a fixed point equal to the pattern itself ( or very close to it ) .",
    "the general underlying idea is that , after a pattern is successfully learned , some brief external input which initializes the network close to the learned state would be sufficient for the network to recognize and retrieve the pattern .",
    "the maximum value of @xmath49 for which this property holds is then called the basin of attraction size ( or just basin size hereafter for simplicity ) ; indeed , there is generally a trade - off between the number of patterns which can be stored according to this criterion and the size of their basin of attraction .",
    "more precisely , the requirement that a pattern @xmath50 is a fixed point of the network dynamics in the absence of external fields can be reduced to a condition for each neuron @xmath10 ( cfr .",
    "[ eq : i ] and  [ eq : vi ] ) : @xmath51 this condition only guarantees that , if the network is initialized into a state @xmath52 , then it will not spontaneously change its state , i.e.  it implements a zero - size basin of attraction . a simple way to enlarge the basin size is to make the requirement in eq .  [ eq : fixedpoint ] more stringent , by enforcing a more stringent constraint for local fields : @xmath53 where @xmath54 is a robustness parameter .",
    "when @xmath55 , we recover the previous zero - basin - size scenario ; increasing @xmath56 we make the neurons response more robust towards noise in their inputs , and thus we enlarge the basin of attraction of the stored patterns ( but then fewer patterns can be stored , as noted above ) .      in the training phase ,",
    "the network is presented with patterns as strong external fields @xmath57 .",
    "patterns are presented sequentially in random order . for each pattern @xmath40",
    ", we simulated the following scheme :    * step 1 * : the pattern is presented ( i.e.  the external inputs @xmath57 are set to @xmath58 ) .",
    "a single step of synchronous updating is performed ( eqs .",
    "[ eq : theta ] , [ eq : i ] and  [ eq : vi ] ) .",
    "if the external inputs are strong enough , i.e.  @xmath59 is large enough , this updating sets the network in a state corresponding to the presented pattern .    *",
    "step 2 * : learning occurs .",
    "each neuron @xmath10 may update its synaptic weights depending on 1 ) their current value @xmath60 , 2 ) the state of the pre - synaptic neurons , and 3 ) the value of the local field @xmath27 .",
    "therefore , all the information required is locally accessible , and no explicit error signals are used .",
    "the new synaptic weights @xmath61 are set to : @xmath62 where @xmath63 is the learning rate , and @xmath64 and @xmath65 are two auxiliary learning thresholds set as @xmath66    we refer to this update scheme as `` three - threshold learning rule '' ( 3trl ) .",
    "after some number of presentations , we checked whether the patterns are learned by presenting a noisy version of these patterns , and checking whether the patterns ( or network states which are very close to the patterns ) are fixed points of the network dynamics .    ) , due to the central limit theorem .",
    "@xmath30 is set such that , on average , a fraction @xmath28 of the local fields are above the neuronal threshold @xmath9 ; in the case of @xmath67 , this means that the gaussian is centered on @xmath9 ( left panel ) . in our model",
    "( fig  [ fig : network]b ) , the desired output is given as a strong external input , whose distribution across the population is bimodal ( with two delta functions on @xmath47 and @xmath68 ) ; therefore , the distribution of the local fields during stimulus presentation becomes bimodal as well ( right panel ) .",
    "the left and right bumps of this distribution correspond to cases where the desired outputs are zero and one , respectively .",
    "note that , since the external input also elicits an inhibitory response , the neurons in the network which are not directly affected by the external input ( i.e.  those with desired output equal to zero ) are effectively hyperpolarized .",
    "if @xmath42 is sufficiently large , the two distributions do not overlap , and the four cases of the plr can be mapped to the four regions determined from the three thresholds , indicated by vertical dashed lines ( see text ) . ]     and non - zero robustness . * * a. * before learning begins , the distribution of local field of neurons is a gaussian distribution ( due to central limit theorem ) centered around neuronal threshold @xmath9 both for neurons with the desired output zero ( off neurons ) and with the desired output one ( on neurons ) .",
    "the goal is to have the local field distribution of on neurons ( red curve ) to be above the threshold @xmath9 , and that of off neurons to be below @xmath9 . *",
    "b. * once any of the to - be - stored patterns are presented as strong external fields , right before the learning process starts , the local field distribution of the off neuron shifts toward the left - side centered around @xmath69 , whereas the distribution of the on neurons moves toward the right - side , centered around @xmath70 , with a negligible overlap between the two curves if the external field is strong enough .",
    "thanks to the strong external fields and global inhibition , the local fields of the on and off neurons are well separated . * c. * due to the learning process , the local fields within the depression region [ i.e. @xmath71 get pushed to the left - side , below @xmath64 , whereas those within the potentiation region get pushed further to the right - side , above @xmath65 .",
    "if the learning process is successful , it will result in a region @xmath72 which no longer contain local fields , with two sharp peaks on @xmath64 and @xmath65 . *",
    "d. * after successful learning , once the external fields are removed , the blue and red curves come closer , with a gap equal to @xmath73 .",
    "the larger the robustness parameter @xmath56 , the more the gap between the left- and right - side of the distribution .",
    "notice that now the red curve is fully above @xmath9 which means those neurons remain stably on , while the the blue curve is fully below @xmath9 , which means those neurons are stably off .",
    "therefore the corresponding pattern is successfully stored by the network . ]",
    "when @xmath74 , @xmath59 is large enough , and @xmath75 , the update rule described by eq .",
    "[ eq : update ] is essentially equivalent to the perceptron learning rule for the task described in eq .",
    "[ eq : fixedpointeps ] .",
    "this can be shown as follows ( see also fig  [ fig : rule ] for a graphical representation of the case @xmath67 and @xmath55 ) : when a stimulus is presented , the population of neurons is divided in two groups , one for which @xmath47 and one for which @xmath68 .",
    "the net effect of the stimulus presentation on the local field has to take into account the indirect effect through the inhibitory part of the network ( see eq .",
    "[ eq : i ] ) , and thus is equal to @xmath76 for the @xmath47 population and to @xmath77 for the @xmath68 population . before learning ,",
    "the distribution of the local fields across the excitatory population , in the limit @xmath78 , is a gaussian whose standard deviation is proportional to @xmath79 , due to the central limit theorem ; moreover , the parameter @xmath30 is set so that the average activity level of the network is @xmath28 , which means that the center of the gaussian will be within a distance of order @xmath79 from the neuronal threshold @xmath9 ( this also applies if we use different values for the spontaneous activity level and the pattern activity level ) .",
    "therefore , if @xmath80 is large enough , the state of the network during stimulus presentation will be effectively clamped to the desired output , i.e.  @xmath81 for all @xmath10 .",
    "this fact has two consequences : 1 ) the local field potential can be used to detect the desired output by just comparing it to the threshold , and 2 ) each neuron @xmath10 will receive , as its recurrent inputs @xmath82 , the rest of the pattern @xmath83 .",
    "furthermore , due to the choice of the secondary thresholds @xmath64 and @xmath65 in eqs .",
    "[ eq : theta0 ] and  [ eq : theta1 ] , the difference between the local field and @xmath64 ( or @xmath65 ) during stimulus presentation for the @xmath47 population ( or @xmath68 , respectively ) is equal to the difference between the local field and @xmath84 ( or @xmath85 , respectively ) in the absence of external stimuli , provided the recurrent inputs are the same .",
    "therefore , the value of the local field @xmath27 during stimulus presentation in relation to the three thresholds @xmath9 , @xmath64 and @xmath65 is sufficient to determine whether an error is made with respect to the constraints of eq .",
    "[ eq : fixedpointeps ] , and which kind of error is made . following these observations , it is straightforward to map the standard perceptron learning rule on the 4 different cases which may occur ( see fig  [ fig : rule ] ) , resulting in eq .",
    "[ eq : update ] .    in fig  [ fig : potentials ]",
    "we demonstrate the effect of the learning rule on the distribution of the local field potentials as measured from a simulation ( with @xmath67 and @xmath86 ) : the initial distribution of the local fields of the neurons , before the learning process takes place and in the absence of external fields , is well described by a gaussian distribution centered on the neuronal threshold @xmath9 ( see fig  [ fig : potentials]a ) with a standard deviation which scales as @xmath79 . during a pattern presentation ,",
    "the resulting distribution becomes a bimodal one ; before learning takes place , the distribution is given by the sum of two gaussians of equal width , centered around @xmath87 and @xmath88 ( fig  [ fig : potentials]b ) .",
    "the left gaussian corresponds to the cases where @xmath47 and the right one to the cases where @xmath68 .",
    "having applied the learning rule , we observe that the depression region ( i.e.  the interval @xmath89 ) and the potentiation region ( i.e.  @xmath90 ) gets depleted ( fig  [ fig : potentials]c ) . in the testing phase , when the external inputs are absent , the left and right parts of the distribution come closer , such that the distance between the two peaks is equal to at least @xmath91 ( fig  [ fig : potentials]d ) .",
    "this margin between the local fields of the on and off neurons makes the attractors more robust .      since our proposed learning rule is able to mimic ( or approximate , depending on the parameters ) the perceptron learning rule , which is known to be able to solve the task posed by eq .",
    "[ eq : fixedpointeps ] whenever a solution exists , we expect that a network implementing such rule can get close to maximal capacity in terms of the number of memories which it can store at a given robustness level .",
    "the storage capacity , denoted by @xmath92 , is measured as a ratio of the maximum number of patterns @xmath34 which can successfully be stored to the number of neurons @xmath1 , in the limit of large @xmath1 . as mentioned above , it is a function of the basin size .",
    "neurons in the dense regime @xmath67 ) when the strength of the external field is large ( @xmath93 ) such that the on and off neuronal populations are well separated .",
    "the points indicate @xmath94 probability of successful storage at a given basin size , optimized over the robustness parameter @xmath56 .",
    "the error bars show the @xmath95 $ ] probability interval for successful storage .",
    "the blue plot shows the performance of the hopfield model with @xmath96 neurons .",
    "the maximal capacity at zero basin size ( the gardner bound ) is equal to @xmath97 .",
    "* b. * to compare the result of simulation of our model with the analytical results , we plotted the critical capacity as a function of the robustness parameter @xmath56 .",
    "the dark red curve is the critical capacity versus @xmath56 for our model obtained form analytical calculations ( see materials and methods ) , the cyan line shows the result of simulations of our model , and the dark blue shows the gardner bound for a network with no constraints on synaptic weights . the difference between the two theoretical curves is due to the constraints on the weights in our network . ]",
    "we used the following definition for the basin size : a set of @xmath34 patterns is said to be successfully stored at a size @xmath98 if , for each pattern , the retrieval rate when starting from a state in which a fraction @xmath98 of the pattern was randomized is at least @xmath99 .",
    "the retrieval rate is measured by the probability that the network dynamics is able to bring the network state to an attractor within @xmath100 distance from the pattern , in at most @xmath101 steps .",
    "the distance between the state of the network and a pattern @xmath40 is measured by the normalized hamming distance @xmath102 .",
    "therefore , at coding level @xmath67 , reaching a basin size @xmath98 means that the network can successfully recover patterns starting from a state at distance @xmath103 .",
    "fig  [ fig : capacitybasin]a shows the maximal capacity as a function of the basin size for a simulated network of @xmath96 neurons .",
    "we simulated many pairs of ( @xmath104 ) with different random seeds , obtaining a probability of success for each pair .",
    "the red line shows the points for which the probability of successful storage is @xmath94 , and the error bars span @xmath105 to @xmath106 success probability .",
    "the capacity was optimized over the robustness parameter @xmath56 .",
    "the maximal capacity ( the gardner bound ) in the limit of @xmath107 at the zero basin size is @xmath108 for our model ( see materials and methods for the calculation ) , as for a network with unconstrained synaptic weights @xcite . in fig",
    "[ fig : capacitybasin]a , we also compare our network with the hopfield model .",
    "our network stores close to the maximal capacity at zero basin size , at least eleven times more than the hopfield model . across the range of basin sizes , 3tlr achieves more than twice the capacity that can be achieved with the hopfield model .",
    "the enlargement of the basin of attraction was achieved by increasing the robustness parameter @xmath56 .",
    "we computed the maximal theoretical capacity as a function of @xmath56 at @xmath78 ( see materials and methods ) and compared it to our simulations , and to the maximal theoretical capacity of the hopfield network .",
    "the results are shown in fig  [ fig : capacitybasin]b .",
    "for any given value of @xmath56 , the cyan curve shows the maximum @xmath109 for which the success ratio with our network was at least @xmath94 across different runs .",
    "the difference between the theory and the experiments in our model can be ascribed to several factors : the finite size of the network ; the choice of the finite learning rate @xmath63 , and the fact that we imposed a hard limit on the number of pattern presentations ( see number of iterations in table  [ tab : param ] ) , while the perceptron rule for excitatory synaptic connectivity is only guaranteed to be optimal in the limit of @xmath110 , with a number of presentations inversely proportional to @xmath63 @xcite .",
    "note that the correspondence between the plr and the 3tlr is only perfect in the large @xmath59 limit , and is only approximate otherwise , as can be shown by comparing explicitly the synaptic matrices obtained by both algorithms on the same set of patterns ( see materials and methods . )    ) in order to quantify its effect on the learning process .",
    "the critical capacity is plotted as a function of @xmath59 at a fixed robustness @xmath111 in the dense regime @xmath67 .",
    "the simulations show that there is a very sharp drop in the maximum @xmath109 when @xmath59 goes below @xmath112 . ]",
    "a crucial ingredient of the 3tlr is having a strong external input which effectively acts as a supervisory signal .",
    "how strong do the external fields need to be ? how much does the capacity depend on this strength ? to answer these questions , we measured the maximum number of stored patterns as a function of the parameter @xmath59 which determines the strength of external fields as @xmath80 .",
    "this parameter , in fact , determines how far the two gaussian distributions of the local field are ; as shown in fig  [ fig : rule ] , the distance between the two peaks of the distribution is @xmath42 . for large enough @xmath59 ,",
    "the overlap of these two distributions is negligible and the capacity is maximal ; but as we lower @xmath59 , the overlap increases , causing the learning rule to make mistakes , i.e.  when it should potentiate , it depresses the synapses and vice versa . in our simulations with @xmath96 neurons in the dense regime @xmath67 at a fixed epsilon @xmath111 , we varied @xmath59 and computed the maximum @xmath109 that can be achieved with a fixed number of iterations ( @xmath113 ) .",
    "the capacity indeed gradually decreases as @xmath59 decreases , until it reaches a threshold , below which there is a sharp drop of capacity ( see fig  [ fig : gamma ] ) . with the above values for the parameters , this transition occurs at @xmath114 .     at sparseness @xmath115 . * the theoretical calculations",
    "is compared with the simulations for @xmath115 .",
    "note that the capacity in the sparse regime is higher than in the dense regime . ]",
    "the 3tlr can also be adapted to work in a sparser regime , at a coding level lower than @xmath94 .",
    "however , the average activity level of the network is determined by @xmath30 , and their relationship also involves the variance of the distribution of the synaptic weights when @xmath116 ( see materials and methods ) . during the learning process , the variance of the weights changes , which implies that the parameter @xmath30 must adapt correspondingly . in our simulations , this adaptation was performed after each complete presentation of the whole pattern set . in practice",
    ", this additional self - stabilizing mechanism could still be performed in an unsupervised fashion along with ( or in alternation with ) the learning process . using this adjustment , we simulated the network at @xmath115 and compared the results with the theoretical calculations .",
    "as shown in fig  [ fig : sparse ] , we can achieve at least @xmath117 of the critical capacity across different values of the robustness parameter @xmath56 .     at @xmath118 .",
    "* patterns are organized in categories , with a correlation @xmath119 with the prototype of the corresponding category ( see text ) . ]",
    "we also investigated numerically the effect of correlations in the input patterns .",
    "the plr is able to learn correlated patterns as long as a solution to the learning problem exists . as the 3tlr approximates the plr",
    ", we expect the 3tlr to be able to learn correlated patterns as well . as a simple model of correlation , we tested patterns organized in @xmath120 categories @xcite .",
    "each category was defined by a randomly generated prototype .",
    "prototypes were uncorrelated from category to category . for each category",
    ", we then generated @xmath121 patterns independently with a specified correlation coefficient @xmath119 with the corresponding prototype .",
    "we show in fig  [ fig : correlated ] the results of simulations with @xmath122 , @xmath115 and @xmath123 .",
    "the figure shows that the learning rule reaches a capacity that is essentially independent of @xmath119 , in the range @xmath124 .",
    "we next investigated the statistical properties of the connectivity matrix after the learning process .",
    "previous studies have shown that the distribution of synaptic weights in perceptrons with excitatory synapses becomes at maximal capacity a delta function at zero weight , plus a truncated gaussian for strictly positive weights @xcite .",
    "our model differs from this setting because of the global inhibitory feedback . despite this difference , the distribution of weights in our network bear similarities with the results obtained in these previous studies : the distribution exhibits a peak at zero weight ( ` silent ' , or ` potential ' synapses ) , while the distribution of strictly positive weights resembles a truncated gaussian .",
    "finally , the fraction of silent synapses increases with the robustness parameter ( see fig  [ fig : weightdistribution ] ) .",
    "we have also computed the degree of symmetry of the weight matrix .",
    "the symmetry degree is computed as the pearson correlation coefficient between the reciprocal weights in pairs of neurons .",
    "we observe a general trend towards an increasingly symmetric weight matrix as more patterns are stored , for all values of the robustness parameter @xmath56 ( see fig  [ fig : symmetry ] ) .     and",
    "@xmath125 is computed at different values of @xmath109 for three values of @xmath56 .",
    "as @xmath109 increases the weight matrix tends to be more symmetric , but gets saturated for high @xmath109 .",
    "for the same values of @xmath109 , as the robustness increases , the correlation also increases , so the weight matrix becomes more symmetric .",
    "error bars ( across 10 runs ) are smaller than the symbols . ]",
    "we presented a biologically - plausible learning rule that is characterized by three thresholds , and is able to store memory patterns close to the maximal storage capacity in a recurrent neural networks without the need of an explicit `` error signal '' .",
    "we demonstrated how the learning rule can be considered a transformed version of the plr in the limit of a strong external field .",
    "our network implements the separation between excitatory and inhibitory neurons , with learning occurring only at excitatory - to - excitatory synapses .",
    "we simulated a recurrent network with @xmath96 binary neurons , reaching to @xmath126 at zero basin size .",
    "we then used a robustness parameter @xmath56 to enlarge the basin size .",
    "the simulations showed that we are close to the theoretical capacity across the whole investigated range of values of @xmath56 .",
    "we expect that as @xmath1 increases and the learning rate gets smaller , this difference would go to zero .",
    "two crucial ingredients of the 3tlr are necessary : ( 1 ) strong external inputs , ( 2 ) three learning thresholds which are set according to the statistics of inputs to the neuron .",
    "the learning rule only uses information that is local to a synapse and corresponding neurons . like classic hebbian learning rules ,",
    "our 3tlr works in an online fashion .",
    "in addition , it can also perform as a ` palimpsest ' @xcite : in case the total number of patterns exceeds the maximal capacity ( at a certain basin size ) the network begins to forget patterns that are not being presented anymore .",
    "the 3tlr can be framed in the setting of the classic bienenstock - cooper - munro ( bcm ) theory @xcite , with additional requirements to adapt it to the attractor network scenario .",
    "the original bcm theory uses firing - rate units , and prescribes that synaptic modifications should be proportional to ( 1 ) the synaptic input , and ( 2 ) a function @xmath127 of the total input @xmath128 ( or , equivalently , of the total output ) .",
    "the function @xmath127 is subject to two conditions : ( 1 ) @xmath129 ( or @xmath130 ) when @xmath131 ( or @xmath132 , respectively ) ; ( 2 ) @xmath133 .",
    "the parameter @xmath9 is also assumed to change , but on a longer time scale ( such that the changes reflect the statistics of the inputs ) ; this ( metaplastic ) adaptation has the goal of avoiding the trivial situations in which all inputs elicit indistinguishable responses .",
    "this ( loosely specified ) framework ensures that , under reasonable conditions , the resulting units become highly selective to a subset of the inputs , and has been mainly used to model the developmental stages of primary sensory cortex .",
    "the arising selectivity is spontaneous and completely unsupervised : in absence of further specifications , the units become selective to a random subset of the inputs ( e.g.  depending on random initial conditions ) .    our model is defined on simpler ( binary ) units ; however , if we define @xmath134 , then @xmath135 behaves according to the prescriptions of the bcm theory .",
    "furthermore , we have essentially assumed the same slow metaplastic adaptation mechanism of bcm , even though we have assigned this role explicitly to the inhibitory part of the network ( see materials and methods ) . on the other hand ,",
    "our model has additional requirements : ( 1 ) @xmath136 when @xmath137 or @xmath138 , ( 2 ) plasticity occurs during presentation of external inputs , which in turn are strong enough to drive the network towards a desired state .",
    "the second requirement ensures that the network units become selective to a specific subset of the inputs , as opposed to a random subset as in the original bcm theory , and thus that they are able to collectively behave as an attractor network .",
    "the first requirement ensures that each unit operates close to critical capacity .",
    "indeed , these additional requirements involve extra parameters with respect to the bcm theory , and we implicitly assume these parameters to also slowly adapt according to the statistics of the inputs during network formation and development .",
    "a variant of the bcm theory , known as abs rule @xcite introduced a lower threshold for ltd , analogous to our @xmath64 , motivated by experimental evidence ; however , a high threshold for ltp , analogous to our @xmath65 , was not used there , or  to our knowledge  in any other bcm variant .",
    "the idea of stopping plasticity above some value of the ` local field ' has been introduced previously to stabilize the learning process in feed - forward networks with discrete synapses @xcite .",
    "our study goes beyond these previous works in generalizing such a high threshold to recurrent networks , and showing that the resulting networks achieve close to maximal capacity .      in vitro experiments",
    "have characterized how synaptic plasticity depends on voltage @xcite and firing rate @xcite , both variables that are expected to have a monotonic relationship with the total excitatory synaptic inputs received by a neuron . in both cases ,",
    "a low value of the controlling variable leads to no changes ; intermediate values lead to depression ; and high values to potentiation .",
    "these three regimes are consistent with the three regions for @xmath139 in fig  [ fig : rule ] .",
    "the 3tlr predicts that a fourth region should occur at sufficiently high values of the voltage and/or firing rates .",
    "most of the studies investigating the dependence of plasticity on firing rate or voltage have not reported a decrease in plasticity at high values of the controlling variables , but these studies might have not increased sufficiently such variables . to our knowledge , a single study has found that at high rates , the plasticity vs rate curve is a decreasing function of the input rate @xcite .",
    "another test of the model consists in comparing the statistics of the synaptic connectivity with experimental data . as it has been argued in several recent studies @xcite , networks with plastic excitatory synapses",
    "are generically sparse close to maximal capacity , with a connection probability that decreases with the robustness of information storage , consistent with short range cortical connectivity @xcite .",
    "our network is no exception , though the fraction of silent synapses that we observe is significantly lower than in models that lack inhibition .",
    "furthermore , network that are close to maximal capacity tends to have a connectivity matrix that has a significant degree of symmetry , as illustrated by the over - representation of bidirectionally connected pairs of neurons , and the tendency of bidirectionally connected pairs to form stronger synapses than unidirectionally connected pairs as observed in cortex @xcite , except in barrel cortex @xcite .",
    "again , the 3tlr we have proposed here reproduces this feature ( fig  [ fig : symmetry ] ) , consistent with the fact that the rule approaches the optimal capacity .",
    "our network uses the simplest possible single neuron model @xcite . one obvious direction for future work would be to implement the learning rule in a network of more realistic neuron models such as firing rate models or spiking neuron models .",
    "another potential direction would be to understand the biophysical mechanisms leading to the high threshold in the 3tlr . in any case",
    ", we believe the results discussed here provide a significant step in the quest for understanding how learning rules in cortical networks can optimize information storage capacity .",
    "the main equations of the network , the neuron model , the learning rule , and the criteria for stopping the learning algorithm are outlined in the results section , eqs .",
    "[ eq : theta]-[eq : fixedpointeps ] .",
    "we present here additional details about network simulations .      before applying the learning rule , we required the network to have stable dynamics around a desired activity level @xmath28 .",
    "a network with only excitatory neurons is highly unstable and typically converges towards the trivial all - off and all - on states ; therefore , we implemented a global inhibition such that the network operates around activity level @xmath28 .",
    "the basal inhibitory term ( @xmath30 ) and the inhibitory reaction term ( @xmath44 ) are defined as :    @xmath140    where @xmath141 and @xmath142 is the inverse of @xmath143 , @xmath144 is defined as @xmath145 ; @xmath146 and @xmath147 are the mean and standard deviation of the synaptic weights , respectively . with these definitions",
    "the network dynamics is stable in the sense that the activity level converges to @xmath28 very fast , regardless of the initial condition .    in eq .",
    "[ eq : h0 ] , we see that @xmath30 depends on the activity level @xmath28 and on the standard deviation of the weights @xmath148 . in the dense regime ,",
    "@xmath67 , we have @xmath149 , therefore the rightmost term of eq .",
    "[ eq : h0 ] vanishes , which means that in this regime @xmath30 is independent of @xmath148 .",
    "however , in sparser regimes , the network must be endowed with a mechanism to adjust for the changes in standard deviation , otherwise the learning process would bring the network out of the stable state , changing the basal activity level .",
    "in contrast , the mean synaptic efficacy @xmath146 does not change significantly during the learning process .    in all our simulations ,",
    "the initial values for @xmath150 were sampled from a gaussian distribution with mean and standard deviation equal to one , after which negative values were set to zero .",
    "this has the effect the @xmath151 is slightly higher than one .",
    "we also set @xmath23 for all @xmath10 .",
    "table  [ tab : param ] shows the values of the parameters used in the simulations , in the dense and sparse regimes .",
    ".*table of parameters in the simulation * [ cols=\"<,<,<\",options=\"header \" , ]     [ tab : param ]      in order to determine the degree to which the 3tlr is able to mimic the prl , and the effect of deviations from the latter rule , we tested both rules on the same tasks . in these simulations , every part of the simulation code was kept identical  including the pseudo - random numbers used to choose the initial state and the arbitrary permutations for the update order of the units  except for the learning rule .",
    "we tested the network in the dense case @xmath67 , at @xmath123 , varying the storage load @xmath109 , using @xmath152 samples for each point .",
    "we compared the probability of solving the learning task and the distribution of the discrepancies ( absolute value of the differences ) in the values of the resulting synaptic weights .",
    "we tested two values of the parameter @xmath59 , @xmath153 ( as in fig  [ fig : capacitybasin ] ) and @xmath154 .",
    "we found that at @xmath155 there was absolutely no difference between the two rules , while at @xmath93 the 3tlr performed slightly worse , and significant deviations from the plr started to appear close to the maximal capacity of the 3tlr ( see fig  [ fig:3tlr_vs_plr ] ) .",
    "( blue curve , left axis ) and the plr ( red curve ) ; the results for the 3tlr at @xmath155 are identical to those of the plr ( red curve ) .",
    "the orange points show the absolute difference of weights between the final values of the weights for the plr at @xmath93 and the plr ( right axis ) : the points show the median of the distribution , while the error bars span the @xmath156th-@xmath157th percentiles , showing that , while the distribution is concentrated at near - zero values , outliers appear at the critical capacity of the 3tlr algorithm .",
    "( note that the average value of the weights is in all cases approximately @xmath158 ; also compare the discrepancies with the overall distribution of the weights , fig  [ fig : weightdistribution ] . ) ]        in this section , we present the details of the calculations for the typical storage capacity of our network in the limit of @xmath78 , using the gardner analysis @xcite .",
    "the capacity is defined as the maximum value of @xmath92 such that a solution to eq .",
    "[ eq : fixedpointeps ] can typically be found .",
    "we can rewrite eq .",
    "[ eq : fixedpointeps ] as @xmath159 where @xmath160    eq .  [ eq : constr_1 ] becomes : @xmath161    let us now consider a single unit @xmath10 .",
    "we write @xmath162 , and re - parametrize the weights as @xmath163 , and also define @xmath164 dropping the index @xmath10 and neglecting terms of order @xmath165 , we obtain : @xmath166    our goal is to compute the quenched entropy of this problem , i.e.  the scaled average of the logarithm of the volume of @xmath19 which satisfies the above equation : @xmath167    the computation proceeds along the lines of @xcite , by using the so - called replica trick to perform the average of the logarithm of @xmath168 , exploiting the identity : @xmath169 performing the computation for integer values of @xmath170 and using an analytical continuation to perform the limit @xmath171 .",
    "we perform the calculation using the replica - symmetric ( rs ) ansatz , which is believed to give exact results in the case of perceptron models with continuous weights .",
    "the final expression for the entropy depends on six order parameters ; the first three are @xmath172 , @xmath173 and @xmath174 , whose meaning is @xmath175 where we used @xmath176 and @xmath177 to denote two different _ replicas _ of the system , which can simply be interpreted as two independent solutions to the constraint equation .",
    "@xmath172 is called the self - overlap , and is equal to @xmath178 in our case , while @xmath173 is the mutual - overlap .",
    "the remaining order parameters are the conjugate quantities @xmath179 , @xmath180 and @xmath181 . the entropy expression is : @xmath182 where @xmath183 we used the usual notation @xmath184 to denote gaussian integrals , and defined @xmath185 . in the following , we will also use the shorthand @xmath186 .",
    "we also used the notation @xmath187 to denote the average over the output @xmath188 , i.e.  @xmath189 for any function @xmath190 .",
    "the value of the order parameters is found by extremizing @xmath191 . the notation and the following computations",
    "can be simplified using : @xmath192",
    "the extremization of @xmath191 then results in the system of equations : @xmath193    the integrals over @xmath194 in the last three equations can be performed explicitly , yielding : @xmath195      at critical capacity , the space of the solutions shrinks to a point , and the mutual overlap tends to become equal to the self overlap : @xmath196 , i.e.  @xmath197 . in this limit ,",
    "the conjugate order parameters diverge as : @xmath198    using these conditions , and calling @xmath199 the critical value of @xmath109 , the saddle point equations , [ eq : saddle_1st ] to [ eq : saddle_last ] , become : @xmath200 where we defined @xmath201    these equations can be solved numerically to find the six parameters @xmath199 , @xmath172 , @xmath202 , @xmath203 , @xmath204 and @xmath174 .",
    "note that in the special case @xmath205 these equations have a degenerate solution with @xmath206 and the same @xmath199 as in the case of unbounded synaptic weights ( e.g.  @xmath207 for @xmath67 ) .",
    "this is because in that case the original problem has the property that scaling all weights by a factor of @xmath208 is equivalent to scaling the boundary @xmath146 by a factor of @xmath209 ( see eq .",
    "[ eq : constr_2 ] ) ; therefore , the optimal strategy is to exploit this property by setting @xmath210 , i.e.  effectively reducing the problem to the unbounded case . of course",
    ", this strategy can only be pursued up to the available precision in a practical setting .",
    "10                                                                          brcher s , artola a , singer w. intracellular injection of ca2 + chelators blocks induction of long - term depression in rat visual cortex .",
    "proceedings of the national academy of sciences . 1992;89(1):123127 ."
  ],
  "abstract_text": [
    "<S> understanding the theoretical foundations of how memories are encoded and retrieved in neural populations is a central challenge in neuroscience . </S>",
    "<S> a popular theoretical scenario for modeling memory function is the attractor neural network scenario , whose prototype is the hopfield model . </S>",
    "<S> the model simplicity and the locality of the synaptic update rules come at the cost of a poor storage capacity , compared with the capacity achieved with perceptron learning algorithms . here , by transforming the perceptron learning rule , we present an online learning rule for a recurrent neural network that achieves near - maximal storage capacity without an explicit supervisory error signal , relying only upon locally accessible information . </S>",
    "<S> the fully - connected network consists of excitatory binary neurons with plastic recurrent connections and non - plastic inhibitory feedback stabilizing the network dynamics ; the memory patterns to be memorized are presented online as strong afferent currents , producing a bimodal distribution for the neuron synaptic inputs . </S>",
    "<S> synapses corresponding to active inputs are modified as a function of the value of the local fields with respect to three thresholds . above the highest threshold , and below the lowest threshold , </S>",
    "<S> no plasticity occurs . in between these two thresholds , potentiation / depression occurs when the local field is above / below an intermediate threshold . </S>",
    "<S> we simulated and analyzed a network of binary neurons implementing this rule and measured its storage capacity for different sizes of the basins of attraction . </S>",
    "<S> the storage capacity obtained through numerical simulations is shown to be close to the value predicted by analytical calculations . </S>",
    "<S> we also measured the dependence of capacity on the strength of external inputs . </S>",
    "<S> finally , we quantified the statistics of the resulting synaptic connectivity matrix , and found that both the fraction of zero weight synapses and the degree of symmetry of the weight matrix increase with the number of stored patterns . </S>"
  ]
}
{
  "article_text": [
    "one challenge in constraint programming is to develop effective search methods to deal with common modelling patterns .",
    "one such pattern is row and column symmetry @xcite : many problems can be modelled by a matrix of decision variables @xcite where the rows and columns of the matrix are fully or partially interchangeable .",
    "such symmetry is a source of combinatorial complexity .",
    "it is therefore important to develop techniques to deal with this type of symmetry .",
    "we study here simple constraints that can be posted to break row and column symmetries , and analyse their effectiveness both theoretically and experimentally .",
    "we prove that we can compute in polynomial time the lexicographically smallest representative of an equivalence class in a matrix model with row and column symmetry if the number of rows ( or of columns ) is bounded and thus remove all symmetric solutions .",
    "we are therefore able for the first time to see how much symmetry is left by these commonly used symmetry breaking constraints .",
    "a constraint satisfaction problem ( csp ) consists of a set of variables , each with a domain of values , and a set of constraints specifying allowed values for subsets of variables .",
    "when solving a csp , we often use propagation algorithms to prune the search space by enforcing properties like domain consistency .",
    "a constraint is _ domain consistent _",
    "( _ dc _ ) iff when a variable in the scope of a constraint is assigned any value in its domain , there exist compatible values in the domains of all the other variables in the scope of the constraint .",
    "a csp is domain consistent iff every constraint is domain consistent .",
    "an important feature of many csps is symmetry .",
    "symmetries can act on variables or values ( or both ) .",
    "a _ variable symmetry _ is a bijection @xmath0 on the variable indices that preserves solutions .",
    "that is , if @xmath1\\}$ ] is a solution then @xmath2\\}$ ] is also .",
    "a _ value symmetry _ is a bijection @xmath3 on the values that preserves solutions .",
    "that is , if @xmath1\\}$ ] is a solution then @xmath4\\}$ ] is also .",
    "a simple but effective method to deal with symmetry is to add _ symmetry breaking constraints _ which eliminate symmetric solutions .",
    "for example , crawford _ et al .",
    "_ proposed the general lex - leader method that posts lexicographical ordering constraints to eliminate all but the lexicographically least solution in each symmetry class @xcite .",
    "many problems are naturally modelled by a matrix of decision variables with variable symmetry in which the rows and/or columns are interchangeable @xcite .",
    "we say that a csp containing a matrix of decision variables has row symmetry iff given a solution , any permutation of the rows is also a solution .",
    "similarly , it has column symmetry iff given a solution , any permutation of the columns is also a solution .    the equidistant frequency permutation array ( efpa ) problem is a challenging problem in coding theory .",
    "the goal is to find a set of @xmath5 code words , each of length @xmath6 such that each word contains @xmath7 copies of the symbols 1 to @xmath8 , and each pair of code words is hamming distance @xmath9 apart .",
    "for example , for @xmath10 , @xmath11 , @xmath12 , @xmath13 , one solution is :    @xmath14    this problem has applications in communication theory , and is related to other combinatorial problems like finding orthogonal latin squares .",
    "@xcite consider a model for this problem with a @xmath5 by @xmath6 array of variables with domains @xmath15 to @xmath8 .",
    "this model has row and column symmetry since we can permute the rows and columns and still have a solution .",
    "to break all row symmetry we can post lexicographical ordering constraints on the rows . similarly , to break all column symmetry we can post lexicographical ordering constraints on the columns . when we have both row and column symmetry , we can post a @xmath16 constraint that lexicographically orders both the rows and columns @xcite . this does not eliminate all symmetry since it may not break symmetries which permute both rows and columns .",
    "nevertheless , it is often effective in practice .",
    "consider again solution .",
    "if we order the rows of lexicographically , we get a solution with lexicographically ordered rows and columns :    @xmath17    similarly if we order the columns of lexicographically , we get a different solution in which both rows and columns are again ordered lexicographically :    @xmath18    all three solutions are thus in the same row and column symmetry class . however , both    and satisfy the constraint .",
    "therefore can leave multiple solutions in each symmetry class .",
    "the lex - leader method breaks all symmetry by ensuring that any solution is the lexicographically smallest in its symmetry class @xcite .",
    "this requires linearly ordering the matrix .",
    "lexicographically ordering the rows and columns is consistent with a linearization that takes the matrix in row - wise order ( i.e. appending rows in order ) .",
    "we therefore consider a complete symmetry breaking constraint  which ensures that the row - wise linearization of the matrix is lexicographically smaller than all its row or column permutations , or compositions of row and column permutations .",
    "consider the symmetric solutions to .",
    "if we linearize these solutions row - wise , the first two are lexicographically larger than the third .",
    "hence , the first two solutions are eliminated by the  constraint .    breaks all row and column symmetries .",
    "unfortunately , posting such a constraint is problematic since it is np - hard to check if a complete assignment satisfies   @xcite .",
    "we now give our first major result .",
    "we prove that if we can bound the number of rows ( or columns ) , then there is a polynomial time method to break all row and column symmetry .",
    "for example , in the efpa problem , the number of columns might equal the fixed word size of our computer .",
    "[ tm : fpt ] for a @xmath19 by @xmath20 matrix , we can check if a complete assignment satisfies a  constraint in @xmath21 time .",
    "* proof :  * consider the matrix model @xmath22 .",
    "we exploit the fact that with no row symmetry and just column symmetry , lexicographically ordering the columns gives the lex - leader assignment .",
    "let @xmath23 be a row permutation of @xmath22 .",
    "to obtain @xmath24 , the smallest column permutation of @xmath25 we lexicographically sort the @xmath20 columns of @xmath25 in @xmath26 time .",
    "finally , we check that @xmath27   \\leq_{\\rm lex } [ z_{1,1},\\ldots , z_{1,m},\\ldots , z_{n,1},\\ldots , z_{n , m}]$ ] , where @xmath28 is the lexicographic comparison of two vectors .",
    "this ensures that @xmath22 is lexicographically smaller than or equal to any column permutation of this row permutation .",
    "if we do this for each of the @xmath29 non - identity row permutations , then @xmath22 is lexicographically smaller than or equal to any row permutation .",
    "this means that we have the lex - leader assignment .",
    "this can be done in time @xmath30 , which for bounded @xmath19 is polynomial .",
    "this result easily generalizes to when rows and columns are partially interchangeable . in the experimental section ,",
    "we show that this gives an effective method to break _ all _ row and column symmetry .",
    "when the number of both rows and columns is large , breaking all row and column symmetry is computationally challenging .",
    "in this situation , we can post a constraint @xcite . however , as we saw in the running example , this may not break all symmetry . in fact , it can leave @xmath31 symmetric solutions in an @xmath32 matrix model .",
    "[ tm : expsol ] there exists a class of @xmath33 by @xmath33 0/1 matrix models on which leaves @xmath31 symmetric solutions , for all @xmath34 .",
    "* proof :  * consider a @xmath33 by @xmath33 matrix model with the constraints that the matrix contains @xmath35 non - zero entries , and each row and column contains between one and two non - zero entries .",
    "this model has row and column symmetry since row and column permutations leave the constraints unchanged",
    ". there exists a class of symmetric solutions to the problem that satisfy a constraint of the form : @xmath36 where @xmath37 is a @xmath19 by @xmath19 matrix of zeroes , @xmath38 is the reflection of the identity matrix , and @xmath39 is any permutation matrix ( a matrix with one non - zero entry on each row and column ) .",
    "for example , as there are exactly two possible permutation matrices of order 2 , there are two symmetric 4 by 4 solutions with lexicographically ordered rows and columns : @xmath40 in general , there are @xmath31 row and column symmetries of @xmath39 . hence , leaves @xmath31 symmetric solutions .    having decided to break row and column symmetry with ,",
    "how do we propagate it ?",
    "one option is to decompose it into two @xmath41 constraints , one on the rows and the other on the columns .",
    "a @xmath41 constraint ensures that a sequence of vectors are lexicographically ordered .",
    "enforcing domain consistency on each @xmath41 constraint takes polynomial time @xcite .",
    "however , this decomposition hinders propagation .",
    "for example , in the matrix of decision variables with domains : @xmath42  constraints on the rows and columns ensure the second row is lexicographically larger than the first row and lexicographically smaller than the third , and the second column is lexicographically larger than the first column and lexicographically smaller than the third .",
    "both such  constraints are dc . however , the corresponding @xmath16 constraint is not since there is no solution in which the top left variable is set to 1 . we might therefore consider a specialized propagator for the constraint",
    "unfortunately , whilst checking a constraint takes polynomial time , enforcing dc on this constraint is np - hard .",
    "thus , even when posting just to break row and column symmetry , there are computational limits on our ability to prune symmetric branches from the search tree .",
    "[ t : lex_double ] enforcing dc on the @xmath16 constraint is np - hard .",
    "* proof :  * ( outline ) we reduce an instance of 1-in-3sat on positive clauses to a partially instantiated instance of the constraint with 0/1 variables .",
    "the constructed @xmath16 constraint has a solution iff the 1-in-3 sat formula is satisfiable .",
    "hence , it is np - hard to enforce dc on the @xmath16 constraint  @xcite , even with a bounded number of values .",
    "the full proof appears in  @xcite .",
    "we consider two special cases where we can check a constraint that breaks all row and column symmetry in polynomial time . in both cases , we show that we can do even better than check the constraint in polynomial time .",
    "we prove that in these cases we can enforce dc on a constraint that breaks all row and column symmetry in polynomial time .",
    "this provides a counterpoint to our result that enforcing dc on is np - hard in general .",
    "an all - different matrix is a matrix model in which every value is different .",
    "it was shown in  @xcite that when an all - different matrix has row and column symmetry , then @xmath43 is equivalent to ensuring that the top left entry is the smallest value , and the first row and column are ordered .",
    "let  be such a symmetry breaking constraint .",
    "dc can be enforced on @xmath44 in polynomial time .",
    "* proof :  * consider the @xmath19 by @xmath20 matrix model @xmath22 .",
    "we post @xmath45 constraints : @xmath46 , @xmath47 , @xmath48 for @xmath49 and @xmath50 .",
    "the constraint graph of this decomposition is acyclic . therefore enforcing dc on the decomposition achieves dc on @xmath44 .",
    "each constraint in the decomposition can be made dc in constant time ( assuming we can change bounds in constant time ) .",
    "hence , dc can be enforced on @xmath44 in @xmath45 time .",
    "note that , when applied to an all - different matrix with row and column symmetry , the general method for breaking symmetry in all - different problems proposed in @xcite will post binary inequalities logically equivalent to @xmath44 .",
    "a matrix model of a function is one in which all entries are 0/1 and each row sum is 1 . if a matrix model of a function has row and column symmetry then @xmath43 ensures the rows and columns are lexicographically ordered , the row sums are 1 , and the sums of the columns are in decreasing order , as was shown in @xcite .",
    "we denote this symmetry breaking constraint as @xmath51 .",
    "enforcing dc on @xmath51 takes polynomial time , in contrast to partial row and column interchangeability in matrix models of functions , which is np - hard  @xcite .",
    "dc can be enforced on @xmath51 in polynomial time .",
    "* proof :  * we will show that @xmath51 can be encoded with a set of @xmath52 constraints .",
    "consider the @xmath19 by @xmath20 matrix model @xmath22 . for each row",
    "@xmath53 we introduce an extra variable @xmath54 and a @xmath52 constraint on @xmath55 $ ] where @xmath56 is a delimiter between @xmath57 and @xmath54 .",
    "each @xmath52 constraint ensures that exactly one position in the @xmath53th row is set to @xmath15 and the variable @xmath54 stores this position .",
    "the automaton s states are represented by the 3-tuple @xmath58 where @xmath59 is the row sum , @xmath9 is the current position and @xmath60 records the position of the 1 on this row .",
    "this automaton has @xmath61 states and a constant number of transitions from each state , so the total number of transitions is @xmath62 .",
    "the complexity of propagating this constraint is @xmath63 .",
    "we also post a @xmath52 constraint over @xmath64 to ensure that they form a decreasing sequence of numbers and the number of occurrences of each value is decreasing .",
    "the first condition ensures that rows and columns are lexicographically ordered and the second condition ensures that the sums of the columns are decreasing .",
    "the states of this automaton are 3-tuples @xmath65 where @xmath5 is the last value , @xmath59 is the number of occurrences of this value , and @xmath66 is the number of occurrences of the previous value .",
    "this automaton has @xmath67 states , while the number of transition from each state is bounded .",
    "therefore propagating this constraint requires time @xmath68 .",
    "this decomposition is logically equivalent to the @xmath51 constraint , therefore it is sound .",
    "completeness follows from the fact that the decomposition has a berge acyclic constraint graph .",
    "therefore , enforcing dc on each @xmath52 constraint enforces dc on @xmath51 in @xmath69 time .",
    "problems with row and column symmetry also often contain value symmetries .",
    "for example , the efpa problem has row , column and value symmetry .",
    "we therefore turn to the problem of breaking row , column and value symmetry .",
    "consider again the solution .",
    "if we interchange the values 1 and 2 , we get a symmetric solution :    @xmath70    in fact , all values in this csp are interchangeable .",
    "how do we break value symmetry in addition to breaking row and column symmetry ?",
    "for example , huczynska _ et al .",
    "_ write about their first model of the efpa problem`` to break some of the symmetry , we apply lexicographic ordering ( lex - ordering ) constraints to the rows and columns  these two constraint sets do not explicitly order the symbols",
    ". it would be possible to order the symbols by using value symmetry breaking constraints .",
    "however we leave this for future work . '' _",
    "( page 53 of @xcitewe turn to this future work of breaking row , column and value symmetry .",
    "we first note that the interaction of the problem and constraints can in some circumstances break all value symmetry .",
    "for instance , in our ( and huczynska _ et al . _",
    "s ) model of the efpa problem , _ all _ value symmetry is already eliminated .",
    "this appears to have been missed by @xcite .",
    "consider any solution of the efpa problem which satisfies    ( e.g. or ) . by ordering columns lexicographically ,",
    "ensures that the first row is ordered .",
    "in addition , the problem constraints ensure @xmath7 copies of the symbols 1 to @xmath8 to appear in the first row .",
    "hence , the first row is forced to be : @xmath71 all value symmetry is broken as we can not permute the occurrences of any of the values .      in general , value symmetries may remain after we have broken row and column symmetry .",
    "how can we eliminate these value symmetries ?",
    "puget has given a general method for breaking any number of value symmetries in polynomial time @xcite .",
    "given a surjection problem in which all values occur at least once , he introduces variables @xmath72 to represent the index of the first occurrence of each value : @xmath73 value symmetry on the @xmath74 is transformed into variable symmetry on the @xmath72 .",
    "this variable symmetry is especially easy to break as the @xmath72 take all different values .",
    "we simply need to post appropriate ordering constraints on the @xmath72 .",
    "consider , for example , the inversion symmetry which maps @xmath15 onto @xmath20 , @xmath75 onto @xmath76 , etc .",
    "puget s method breaks this symmetry with the single ordering constraint : @xmath77 .",
    "unfortunately puget s method for breaking value symmetry is not compatible in general with breaking row and column symmetry using .",
    "this corrects theorem 6 and corollary 7 in @xcite which claim that , provided we use the same ordering of variables in each method , it is compatible to post lex - leader constraints to break variable symmetry and puget s constraints to break value symmetry .",
    "there is no ordering of variables in puget s method which is compatible with breaking row and column symmetry using the lex - leader method ( or any method like based on it ) .",
    "there exist problems on which posting  and applying puget s method for breaking value symmetry remove all solutions in a symmetry class irrespective of the ordering on variables used by puget s method .",
    "* proof :  * consider a 3 by 3 matrix model with constraints that all values between 0 and 8 occur , and that the average of the non - zero values along every row and column are all different from each other .",
    "this problem has row and column symmetry since we can permute any pair of rows or columns without changing the average of the non - zero values .",
    "in addition , it has a value symmetry that maps @xmath53 onto @xmath78 for @xmath79 .",
    "this maps an average of @xmath80 onto @xmath81 . if the averages were all - different before they remain so after .",
    "consider the following two solutions : @xmath82 both matrices satisfy  as the smallest entry occurs in the top left corner and both the first row and column are ordered .",
    "they are therefore both the lex leader members of their symmetry class .",
    "puget s method for breaking value symmetry will simply ensure that the first occurrence of 1 in some ordering of the matrix is before that of 8 in the same ordering .",
    "however , comparing the two solutions , it can not be the case that the middle square is both before _ and _ after the bottom right square in the given ordering used by puget s method . hence",
    ", whichever ordering of variables is used by puget s method , one of these solutions will be eliminated . all solutions in this symmetry class",
    "are thus eliminated .",
    "we can pinpoint the mistake in puget s proof which allows him to conclude incorrectly that his method for value symmetry can be safely combined with variable symmetry breaking methods like .",
    "puget introduces a matrix of 0/1 variables @xmath83 and observes that variable symmetries @xmath0 on variables @xmath74 correspond to row symmetries on the matrix @xmath84 , while value symmetries @xmath3 of the variables @xmath74 correspond to column symmetries of the matrix . using the lex - leader method on a column - wise linearisation of the matrix",
    ", he derives the value symmetry breaking constraints on the @xmath85 variables .",
    "finally , he claims that we can derive the variable symmetry breaking constraints on the @xmath86 variables with the same method ( equation ( 13 ) of @xcite ) .",
    "however , this requires a row - wise linearisation of the matrix .",
    "unfortunately , combining symmetry breaking constraints based on row and column - wise linearisations can , as in our example , eliminate all solutions in a symmetry class .",
    "in fact , we can give an even stronger counter - example to theorem 6 in @xcite which shows that it is incompatible to post together variable and value symmetry breaking constraints _ irrespective _ of the orderings of variables used by _ both _ the variable and the value symmetry breaking method .",
    "there exist problems on which posting lex - leader constraints to break variable symmetries and applying puget s method to break value symmetries remove all solutions in a symmetry class irrespective of the orderings on variables used by both methods .",
    "* proof :  * consider variables @xmath87 to @xmath88 taking values 1 to 4 , an all - different constraint over @xmath87 to @xmath88 and a constraint that the neighbouring differences are either all equal or are not an arithmetic sequence .",
    "these constraints permit solutions like @xmath89 ( neighbouring differences are all equal ) and @xmath90 ( neighbouring differences are not an arithmetic sequence ) .",
    "they rule out assignments like @xmath91 ( neighbouring differences form the arithmetic sequence @xmath92 ) .",
    "this problem has a variable symmetry @xmath0 which reflects a solution , swapping @xmath87 with @xmath88 , and @xmath93 with @xmath94 , and a value symmetry @xmath3 that inverts a solution , swapping @xmath15 with @xmath95 , and @xmath75 with @xmath96 .",
    "consider @xmath97 and @xmath98 .",
    "these two assignments form a symmetry class of solutions .",
    "suppose we break variable symmetry with a lex - leader constraint on @xmath87 to @xmath88 .",
    "this will permit the solution @xmath97 and eliminate the solution @xmath98 .",
    "suppose we break the value symmetry using puget s method on the same ordering of variables .",
    "this will ensure that @xmath15 first occurs before @xmath95 . but",
    "this will eliminate the solution @xmath97 .",
    "hence , all solutions in this symmetry class are eliminated . in this case , both variable and value symmetry breaking use the same order on variables .",
    "however , we can show that all solutions in at least one symmetry class are eliminated whatever the orders used by both the variable and value symmetry breaking .",
    "the proof is by case analysis . in each case",
    ", we consider a set of symmetry classes of solutions , and show that the combination of the lex - leader constraints to break variable symmetries and puget s method to break value symmetries eliminates all solutions from one symmetry class . in the first case , suppose the variable and value symmetry breaking constraints eliminate @xmath98 and permit @xmath97 . in the second case , suppose they eliminate @xmath97 and permit @xmath98 .",
    "this case is symmetric to the first except we need to reverse the names of the variables throughout the proof .",
    "we therefore consider just the first case . in this case",
    ", the lex - leader constraint breaks the variable symmetry by putting either @xmath87 first in its ordering variables or @xmath94 first .",
    "suppose @xmath87 goes first in the ordering used by the lex - leader constraint .",
    "puget s method ensures that the first occurrence of 1 is before that of 4 .",
    "puget s method therefore uses an ordering on variables which puts @xmath94 before @xmath93 .",
    "consider now the symmetry class of solutions : @xmath90 and @xmath99 .",
    "puget s method eliminates the first solution as 4 occurs before 1 in any ordering that put @xmath94 before @xmath93 . and",
    "the lex - leader constraint eliminates the second solution as @xmath87 is larger than its symmetry @xmath88 .",
    "therefore all solutions in this symmetry class are eliminated .",
    "suppose , on the other hand , @xmath94 goes first in the lex - leader constraint .",
    "consider now the symmetry class of solutions : @xmath89 and @xmath100 .",
    "the lex - leader constraint eliminates the first solution as @xmath94 is greater than its symmetry @xmath93 .",
    "suppose now that the second solution is not eliminated .",
    "puget s method ensures the first occurrence of 1 is before that of 4 .",
    "puget s method therefore uses an ordering on variables which puts @xmath88 before @xmath87 .",
    "consider now the symmetry class of solutions : @xmath101 and @xmath102 .",
    "puget s method eliminates the first solution as 4 occurs before 1 in any ordering that put @xmath88 before @xmath87 . and",
    "the lex - leader constraint eliminates the second solution as @xmath94 is larger than its symmetry @xmath93 .",
    "therefore all solutions in this symmetry class are eliminated .",
    "we end with a special but common case where variable and value symmetry breaking do not conflict . when values partition into interchangeable sets , puget s method is equivalent to breaking symmetry by enforcing value precedence @xcite .",
    "given any two interchangeable values @xmath53 and @xmath103 with @xmath104 , a value  constraint ensures that if @xmath53 occurs then the first occurrence of @xmath53 is before that of @xmath103 .",
    "it is safe to break row and column symmetry with  and value symmetry with  when value precedence considers variables either in a row - wise or in a column - wise order .",
    "this is a simple consequence of theorem 1 in @xcite .",
    "it follows that it is also safe to use  to break value symmetry when using constraints like derivable from the lex - leader method .",
    "a promising alternative to for breaking row and column symmetries is @xcite .",
    "this is also derived from the lex leader method , but now applied to a snake - wise unfolding of the matrix . to break column symmetry , ensures that the first column is lexicographically smaller than or equal to both the second and third columns , the reverse of the second column is lexicographically smaller than or equal to the reverse of both the third and fourth columns , and so on up till the penultimate column is compared to the final column . to break row symmetry , ensures that each neighbouring pair of rows , @xmath105 and @xmath106 satisfy the entwined lexicographical ordering : @xmath107    like , is an incomplete symmetry breaking method .",
    "in fact , like , it may leave a large number of symmetric solutions .",
    "[ tm : snake - expsol ] there exists a class of @xmath33 by @xmath108 0/1 matrix models on which leaves @xmath109 symmetric solutions , for all @xmath34 .",
    "* proof :  * consider the following 4 by 4 matrix : @xmath110 this is a permutation matrix as there is a single 1 on each row and column .",
    "it satisfies the constraints .",
    "in fact , we can add any 5th column which reading top to bottom is lexicographically larger than or equal to @xmath111 and reading bottom to top is lexicographically larger than or equal to @xmath111 .",
    "we shall add a 4 bit column with 2 bits set .",
    "that is , reading top to bottom : @xmath112 , @xmath113 , @xmath114 or @xmath115 .",
    "note that all 4 of these 4 by 5 matrices are row and column symmetries of each other .",
    "for instance , consider the row and column symmetry @xmath0 that reflects the matrix in the horizontal axis , and swaps the 1st column with the 2nd , and the 3rd with the 4th : @xmath116 in general , we consider the @xmath33 by @xmath33 permutation matrix : @xmath117 this satisfies the constraints . we can add any @xmath108th column which reading top to bottom is lexicographically larger than or equal to the @xmath118th column and reading bottom",
    "to top is lexicographically larger than or equal to the @xmath33th column .",
    "in fact , we can add any column with eactly @xmath19 of the @xmath33 bits set .",
    "this gives us a set of @xmath33 by @xmath108 matrices that are row and column symmetries of each other .",
    "there are @xmath119 bit vectors with exactly @xmath19 of @xmath33 bits set .",
    "hence , we have @xmath119 matrices which satisfy that are in the same row and column symmetry class . using stirling s formula , this grows as @xmath109 .",
    "the proof of theorem  [ tm : fpt ] gives a polynomial method to break all row and column symmetry .",
    "this allows us to compare symmetry breaking methods for matrix models like and , not only with respect to each other but for the first time in absolute terms .",
    "our aim is to evaluate : first , whether the worst - case scenarios identified in theorems  [ tm : expsol ] and  [ tm : snake - expsol ] are indicative of what can be expected in practice ; second , how effective these methods are with respect to each other ; third , in cases where they differ significantly , how much closer the best of them is to the optimal .    to answer these questions , we experimented with different symmetry breaking constraints : @xmath16 , the column - wise ( @xmath120 ) or the row - wise ( @xmath121 ) @xcite .",
    "we use @xmath122 to denote no symmetry breaking constraints . for each problem",
    "instance we found the total number of solutions left by symmetry breaking constraints ( @xmath123 ) and computed how many of them were symmetric based on the method outlined in the proof of theorem  [ tm : fpt ] .",
    "the number of _ non symmetric _ solutions is equal to the number of symmetry classes ( @xmath124 ) if the search space is exhausted . in all instances",
    "at least one model exhausted the search space to compute the of symmetry classes , shown in the column @xmath125 .",
    "we use ` @xmath126 ' to indicate that the search is not completed within the time limit . as the  model typically could not exhaust the search space within the time limit , we use ` @xmath127 ' to indicate a lower bound on the number of solutions . finally , we used a variable ordering heuristic that follows the corresponding lex - leader variable ordering in each set of symmetry breaking constraints ( i.e. row - wise snake ordering with @xmath121 ) .",
    "we ran experiments in gecode 3.3.0 on an intel xeon x5550 , 2.66 ghz , 32 gb ram with @xmath128 sec timeout .    _ unconstrained problems .",
    "_ we first evaluated the effectiveness of symmetry breaking constraints in the absence of problem constraints .",
    "this gives the `` pure '' effect of these constraints at eliminating row and column symmetry .",
    "we considered a problem with a matrix @xmath129 , @xmath130 $ ] , @xmath131 $ ] , @xmath132 $ ] whose rows and columns are interchangeable .",
    "table  [ t : t2 ] summarizes the results .",
    "the first part presents typical results for 0/1 matrices whilst the second part presents results for larger domains .",
    "the results support the exponential worst case in theorems  [ tm : expsol ] and  [ tm : snake - expsol ] , as the ratio of solutions found to symmetry classes increases from 1.25 ( 3,3,2 ) to over 6 ( 6,6,2 ) , approximately doubling with each increase of the matrix size .",
    "as we increase the problem size , the number of symmetric solutions left by and  grows rapidly .",
    "interestingly , @xmath120 achieves better pruning on 0/1 matrices , while @xmath16 performs better with larger domains .    .[t",
    ": t4 ] covering arrays .",
    "number of solutions found by posting different sets of symmetry breaking constraints .",
    "@xmath133 is the number of vectors , @xmath134 is the length of a vector , @xmath135 is the size of the domains , @xmath136 is the covering strength . [ cols=\">,^,^,^,^,^,^\",options=\"header \" , ]     _ constrained problems . _ our second set of experiments was on three benchmark domains : equidistant frequency permutation array ( efpa ) , balanced incomplete block designs and covering array ( ca ) problems .",
    "we used the non - boolean model of efpa  @xcite ( table  [ t : t1 ] ) , the boolean matrix model of bibd  @xcite ( table  [ t : t3 ] ) and a simple model of ca  @xcite ( table  [ t : t4 ] ) .",
    "we consider the satisfaction version of the ca problem with a given number of vectors @xmath133 . in all problems",
    "instances the @xmath16 , @xmath121 and @xmath120 constraints show their effectiveness , leaving only a small fraction of symmetric solutions .",
    "note that @xmath120 often leaves fewer symmetric solutions .",
    "however , it is significantly slower compared to @xmath16 and @xmath121 because it tends to prune later ( thereby exploring larger search trees ) .",
    "for example , the number of failures for the @xmath137 efpa problem is @xmath138 , @xmath139 and @xmath140 for @xmath16 , @xmath121 and @xmath120 respectively .",
    "on efpa problems , @xmath121 is about twice as fast as @xmath16 and leaves less solutions .",
    "on the ca problems @xmath16 and @xmath121 show similar results , while @xmath16 performs better on bibd problems in terms of the number of solution left .",
    "overall , our results show that @xmath16 and @xmath141 prune most of the symmetric solutions . @xmath120",
    "slightly outperforms @xmath16 and @xmath121 in terms of the number of solutions left , but it explores larger search trees and is about two orders of magnitude slower",
    ". however , there is little difference overall in the amount of symmetry eliminated by the three methods .",
    "lubiw proved that any matrix has a row and column permutation in which rows and columns are lexicographically ordered and gave a nearly linear time algorithm to compute such a matrix @xcite .",
    "shlyakhter and flener _",
    "independently proposed eliminating row and column symmetry using @xcite . to break some of the remaining symmetry ,",
    "frisch , jefferson and miguel suggested ensuring that the first row is less than or equal to all permutations of all other rows @xcite . as an alternative to ordering both rows and columns lexicographically , frisch _ et al . _ proposed ordering the rows lexicographically but the columns with a multiset ordering @xcite .",
    "more recently , grayland _ et al .",
    "_ have proposed , an alternative to based on linearizing the matrix in a snake - like way @xcite .",
    "an alternative way to break the symmetry of interchangeable values is to convert it into a variable symmetry by channelling into a dual 0/1 viewpoint in which @xmath142 iff @xmath143 , and using lexicographical ordering constraints on the columns of the 0/1 matrix @xcite .",
    "however , this hinders propagation @xcite .",
    "finally , dynamic methods like sbds have been proposed to remove symmetry from the search tree @xcite .",
    "unfortunately , dynamic techniques tend not to work well with row and columns symmetries as the number of symmetries is usually too large .",
    "we have provided a number of positive and negative results on dealing with row and column symmetry . to eliminate some ( but not all ) symmetry we can post static constraints like and . on the positive side , we proposed the first polynomial time method to eliminate _ all _ row and column symmetry when the number of rows ( or columns ) is bounded . on the negative side",
    ", we argued that and can leave a large number of symmetric solutions .",
    "in addition , we proved that propagating completely is np - hard .",
    "finally , we showed that it is not always safe to combine puget s value symmetry breaking constraints with row and column symmetry breaking constraints , correcting a claim made in the literature .",
    "flener , p. , frisch , a. , hnich , b. , kiziltan , z. , miguel , i. , pearson , j. , walsh , t. : breaking row and column symmetry in matrix models . in : 8th international conference on principles and practices of constraint programming ( cp-2002 ) , springer ( 2002 )    flener , p. , frisch , a. ,",
    "hnich , b. , kiziltan , z. , miguel , i. , walsh , t. : matrix modelling .",
    "technical report apes-36 - 2001 , apes group ( 2001 ) presented at formul01 ( workshop on modelling and problem formulation ) , cp2001 post - conference workshop .",
    "crawford , j. , ginsberg , m. , luks , g. , roy , a. : symmetry breaking predicates for search problems . in : proceedings of 5th international conference on knowledge representation and reasoning , ( kr 96 ) .",
    "( 1996 ) 148159    huczynska , s. , mckay , p. , miguel , i. , nightingale , p. : modelling equidistant frequency permutation arrays : an application of constraints to mathematics . in gent , i. ,",
    "ed . : principles and practice of constraint programming - cp 2009 , 15th international conference , cp 2009 ,",
    "lisbon , portugal , september 20 - 24 , ( 2009 ) 5064        carlsson , m. , beldiceanu , n. : arc - consistency for a chain of lexicographic ordering constraints .",
    "technical report t2002 - 18 , swedish institute of computer science ( 2002 ) .",
    "katsirelos , g. , narodytska , n. , walsh , t. : breaking generator symmetry in : proceedings of symcon09 - 9th international workshop on symmetry and constraint satisfaction problems , colocated with cp2009 .",
    "flener , p. , frisch , a. , hnich , b. , kiziltan , z. , miguel , i. , pearson , j. , walsh , t. : symmetry in matrix models .",
    "technical report apes-30 - 2001 , apes group ( 2001 ) presented at symcon01 ( symmetry in constraints ) , cp2001 post - conference workshop .",
    "puget , j.f . : breaking all value symmetries in surjection problems . in van beek ,",
    ": proceedings of 11th international conference on principles and practice of constraint programming ( cp2005 ) , springer ( 2005 )    law , y. , lee , j. : global constraints for integer and set value precedence . in : proceedings of 10th international conference on principles and practice of constraint programming ( cp2004 ) , springer ( 2004 ) 362376      grayland , a. , miguel , i. , roney - dougal , c. : snake lex : an alternative to double lex . in gent , i.p . ,",
    "ed . : proceedings of 15th international conference on principles and practice of constraint programming .",
    "springer ( 2009 ) 391399        frisch , a. , jefferson , c. , miguel , i. : constraints for breaking more row and column symmetries . in rossi , f. ,",
    "ed . : proceedings of 9th international conference on principles and practice of constraint programming ( cp2003 ) , springer ( 2003 )"
  ],
  "abstract_text": [
    "<S> we consider a common type of symmetry where we have a matrix of decision variables with interchangeable rows and columns . a simple and efficient method to deal with such row and column symmetry is to post symmetry breaking constraints like and . </S>",
    "<S> we provide a number of positive and negative results on posting such symmetry breaking constraints . on the positive side </S>",
    "<S> , we prove that we can compute in polynomial time a unique representative of an equivalence class in a matrix model with row and column symmetry if the number of rows ( or of columns ) is bounded and in a number of other special cases . on the negative side </S>",
    "<S> , we show that whilst and are often effective in practice , they can leave a large number of symmetric solutions in the worst case . </S>",
    "<S> in addition , we prove that propagating completely is np - hard . </S>",
    "<S> finally we consider how to break row , column and value symmetry , correcting a result in the literature about the safeness of combining different symmetry breaking constraints . </S>",
    "<S> we end with the first experimental study on how much symmetry is left by and on some benchmark problems . </S>"
  ]
}
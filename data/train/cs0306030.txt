{
  "article_text": [
    "the overall security infrastructure of the eu datagrid ( edg)@xcite project has been described elsewhere@xcite . in brief , it consists of certificate authorities ( ca ) granting x.509 cryptographic certificates to users and hosts , and providing authentication ; and virtual organisations ( vo ) which authorize users to use resources allocated to the vo .",
    "authorization information is currently published as vo membership lists using ldap , but voms , a system based on attribute certificates has been developed and described@xcite .",
    "this paper describes ways in which this authorization information is used to control access to local resources , such as unix accounts , disk filesystems and the virtual filesystems exported by file and web servers .",
    "the remote job execution middleware used by edg is based on the globus@xcite gatekeeper , and this uses a static mapping from grid identities , based on x.509 certificates , to local unix user accounts .",
    "a text file lists grid identities and corresponding local accounts and when a job is received for execution , it is forked as a process owned by the local unix user account .",
    "whilst adaquate for small virtual organisations , this procedure is insufficient for vos with hundreds of users at tens of sites . to address the maintainence of the list of acceptable grid identities",
    ", edg has developed software to allow vos to publish membership lists and for sites to construct the mapping text file@xcite .",
    "however , this still leaves the creation and management of the local unix accounts themselves . to address this for edg",
    ", we have developed a system of dynamically allocated pool accounts@xcite , which are created by the site administrator and then allocated to users as new job or file server requests are received . a directory of lock files",
    "is maintained to retain a one - to - one mapping between grid identities and allocated user accounts .",
    "this also ensures that if two requests overlap , they are assigned to the same unix user account , which allows sharing of files between multipart jobs , and between jobs and fileserver requests .",
    "since unix operating systems implement filesystem permissions in terms of unix accounts , this also provides a rudimentary way of preventing jobs from different grid users from interfering with each other .",
    "accounts may be returned to the pool of unused accounts once all jobs running as that account have terminated and after leaving a grace period for file retrieval . since the account allocation book keeping is maintained by lock files , this is straightforward to implement as a unix shell script which is run periodically and which can be tailored to individual site requirements .",
    "to describe fine - grained access control of files and other file - like resources , edg has developed gacl@xcite , a format for access control lists , written in xml and in terms of grid identities or virtual organisation membership .",
    "each gacl access control list is divided into one or more entries , each of which has a set of permissions which are granted if that entry s credential requirements are met .",
    "permissions are to read ( to read files ) , list ( to obtain directory listings ) , write ( to create or write to files , to create directories , or to delete files or directories ) and admin ( to modify access control lists . )",
    "an entry may have one or more credentials which must be present , including x.509 certificate identities , vo groups or voms attribute certificates .",
    "two generic credentials , authuser ( any user with a valid certificate ) and anyuser ( any user irrespective of credentials ) , allow access to be granted to users with no affiliation to the site .    an api and library are provided for manipulating gacl lists , and this is the foundation of the filesystem and fileserver access control described in the remainder of this paper , and of the eu datagrid storage element described elsewhere@xcite .",
    "we have paid particular attention to applying the gacl access control to standard local filesystem operations , using the slashgrid@xcite framework described here .",
    "most applications use a filesystem interface to access local files on the same machine .",
    "this organises data into files , contained in a hierarchy of folders or directories , each accessible by name . for interactive use ,",
    "a graphical file browser is commonly used , displaying files as icons which may be opened and accessed using a mouse .",
    "file access within an applications uses an analogous programming interface , which in most programming languages is based on a set of functions to ` open ' , ` read ' , ` write ' etc .    the security associated with these operations is traditionally tied to credentials which only have meaning on the machine ( or in some cases the computing site or cluster ) in question .",
    "typically , this takes the form of a short username or group name , and a specific file may have one user who has permission to write to that file . for edg testbed sites , these are dynamically allocated pool accounts , but there may be static accounts in other parts of the system , such as user - interface hosts .",
    "as we connect machines and sites together with grid technology , these local credentials become increasingly inappropriate for managing authorisation to use resources , as they can not readily be shared across the grid .",
    "for example , a user may have the username mcnab at one site , but amcnab at another , and at a third site user mcnab may be a completely different individual .",
    "although the pool accounts system described above automates the management of local accounts , the system can not readily be used when creating long lived files , since the username they are owned by is only temporarily associated with a specific grid identity .    initially to resolve this shortcoming ,",
    "we have produced a file system framework , slashgrid , which allows file and directory authorisation to depend on long - lived grid identities .",
    "slashgrid creates a hierarchy of directories under /grid where an application s username , whether static or temporary , is irrelevant to whether it can create , read or modify files : what matters are the grid credentials the application currently holds on behalf of the user , wherever they are on the grid .    for interoperability with other products of the eu datagrid and related projects",
    ", slashgrid uses the gacl library and access control lists stored in per - directory or per - file control files .",
    "slashgrid has also been designed to be readily extensible , by the use of third - party plugins to add additional filesystem types . in particular , we have implemented an http / https filesystem , in which the contents of remote websites can be accessed by applications as if they were local files , and in the case of https , may prove the user s identity to remote servers to obtain access to restricted files .",
    "this has the potential to allow existing applications to operate on the grid , indifferent to the true location of the files they manipulate , with remote grid file access provided as a service by the operating system layer .",
    "web browsers represent the most common , familiar and most widely installed application used to access remote resources on the current internet .",
    "however , most websites are built using http technology , which can only implement cumbersome authentication and authorisation mechanisms .",
    "typically , this involves the user choosing a short memorable password for each site to which they need to identify themselves .",
    "consequently , the user may find themselves having to enter multiple usernames and passwords as they pass between websites run by their employer , their bank , online merchants etc . as well as",
    "the inconvenience involved , this is also vulnerable to `` brute force '' attacks by third parties due to the short length of the passwords .    since the mid-1990 s",
    ", most web browsers have also supported the https protocol , which uses x.509 digital certificates and has been widely used to provide authentication of websites to users .",
    "this allows a user to send credit card details to a merchant s website , for instance , with some confidence that the site is not being impersonated by a malicious third party .",
    "although the corresponding user authentication to websites has been supported since the adoption of https , it has been far less used , due to the administrative overhead and cost of verifying users identity before giving them a meaningful x.509 user certificate .    however , with the large - scale deployment of x.509 certificates to members edg and other grid projects across the world , this is changing , and it is now practical to base a high energy physics collaboration s website on https rather than http technology , without requiring users to install any special software",
    ".    the gridpp project , which represents the uk involvement in edg , has chosen to implement its collaboration website in this way , and to produce a general website management tool , gridsite@xcite , which is flexible enough for other projects to use for their own sites .",
    "since gridsite is able to uniquely and securely identify users by their x.509 certificate , they can be granted rights to edit and upload webpages , images and binary files .",
    "this is enforced using the gacl access control lists described above .",
    "access control can be specified in terms of individuals or virtual organisation groups , with membership managed by the group s administrators through the same web interface .",
    "this has allowed gridpp to devolve maintenance of the website down to the level of those directly involved in each area of work .",
    "since the administration of group authorisation is also devolved , the administrative overhead normally carried by the website manager is greatly reduced .",
    "since gridsite permits several users to maintain a set of documents , this has also made collaboration between gridpp members at different institutions considerably easier ; and tools are provided to retain old versions and record document histories to automate the book - keeping of who has changed a document and at what date .",
    "initially , gridsite has been implemented as a self - contained executable run from the web server to handle each http or https request .",
    "it has now been divided into standalone executables to handle interactive management of the site and groups by administrators , and a loadable module which is dynamically linked directly into the apache@xcite webserver used . by incorporating gridsite and gacl technology directly in the webserver , all technologies support by the webserver , including static file serving , and",
    "dynamic content provided by cgi scipts , php , asp or jsp server - parsed pages , for example , can be subject to grid - based access control .",
    "this flexibility allows a gridsite server to simultaneously operate as an efficient file server , as a web host with dynamic content and as a grid host with grid services in java and other languages operating in their favoured environments .",
    "future developments will include porting of the slashgrid filesystems framework and the gridsite server management system to platforms other than linux .",
    "support for additional authorization credentials , such as globus cas , will be added to the gacl library , along with support for access control languages recommended by the ggf authorization working group ."
  ],
  "abstract_text": [
    "<S> the eu datagrid has deployed a grid testbed at approximately 20 sites across europe , with several hundred registered users . </S>",
    "<S> this paper describes authorisation systems produced by gridpp and currently used on the eu datagrid testbed , including local unix pool accounts and fine - grained access control with access control lists and grid - aware filesystems , fileservers and web developement environments . </S>"
  ]
}
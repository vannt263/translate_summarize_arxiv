{
  "article_text": [
    "classical molecular dynamics ( md ) , which solves newton s laws of motion for a system made up of atoms and/or molecules , is a powerful and widely used tool to study both simple and complex systems . with the power of modern computers",
    ", these systems can range in size from a few thousand to many millions of atoms .",
    "of particular interest for modern hardware are codes which can take advantage of multicore processors and increasingly accelerators , such as graphics processing units ( gpus ) .",
    "a number of well - established classical md packages exist which may be used to simulate very large systems in various contexts [ e.g. , lammps , dl_poly , namd ] .",
    "these codes are able to address large systems by means of domain decomposition and message passing , usually via the message passing interface ( mpi ) .",
    "some of these codes are important for general purposes , while others are more fashioned for particular fields , such as large biomolecules or proteins .",
    "the code described here , moldy , is one specifically developed with metals and alloys in mind .",
    "this allows the code to be used for a wide range of problems of practical interest , such as the properties of materials undergoing deformation , defect propagation and radiation damage .",
    "it is not our intention to put forward a replacement for codes of the type mentioned above , but to provide a complementary option which allows users to simulate modestly large systems on desktop machines .",
    "the increasing proliferation of multicore machines makes openmp an ideal route to allow users less familiar with mpi the chance to adapt the code incrementally without the additional complexity involved with message passing .",
    "further , the inclusion of standard directives in future versions of openmp to distribute work to accelerated hardware such as graphical processing units ( gpus ) would place the code in a good position to access these resources .",
    "the code is a direct descendant of a fortran code `` moldy '' which was first developed at the united kingdom atomic energy research establishment @xcite , with conventional constant volume and constant pressure ensembles and deforming systems under constant stress using the extended lagrangian formulation of parrinello and rahman @xcite . in moldy",
    ", the atoms interact via short - range pairwise potentials and are free of bond constraints or long - range interactions .",
    "these two simplifications are retained in the current version .",
    "the code was extended to include the embedded atom method @xcite , or finnis - sinclair potentials @xcite .",
    "this feature specifically aims the code at the simulation of metals and alloys .",
    "in retaining fortran as the language of the updated version , we have made the decision to restrict development to level of the fortran 1995 standard .",
    "this is for reasons of portability : compiler support for some features of later fortran standards is currently not complete .",
    "this means some design compromises from a software engineering point of view .",
    "for example , an abstract potential type , or class , might have been preferable for extensibility and flexibility . instead , at the moment",
    ", the potential is introduced at compile time as a fixed module , so the code is recompiled for each different material .",
    "however , the existing design does not preclude refactoring to make use of these attractive language features in future .",
    "we hope the level of compiler support for fortran 2003 features will improve rapidly in the near future .    in the following section we provide a brief background on molecular dynamics which makes clear the issues addressed in the paper .",
    "section 3 goes on to discuss the structure of the code and in particular how the potentials should be represented . a number of different potentials are included as examples .",
    "importantly , this section also discusses the strategy for the parallelisation of the force loop using openmp .",
    "section  4 gives an overview of how the code is run in practice and how the user deals with input and output .",
    "section  5 shows results for the parallel performance of the code for a number of idealised problems and considers a number of simple example applications .",
    "these applications present an opportunity for visualisation and local crystal structure determination , which are provided as part of the package .",
    "a summary and conclusions are presented in section  6 .",
    "on account of the screening properties of the conduction electrons , metals can be described by short range interatomic potential .",
    "this offer significant advantages for molecular dynamics simulations , in particular since each atom interacts only with a finite number of neighbours the computer time to calculate forces scales as @xmath1 rather than @xmath2 for generalised long ranged forces , or @xmath3/@xmath4 for coulombic ewald sums or fast multipole techniques .    for simulations of large numbers of atoms ,",
    "it is essential that the electronic degrees of freedom are integrated out , and forces depend only on the atomic positions .",
    "however , since the electrons are delocalised , the forces can not be simply pairwise interactions between atoms .",
    "the delocalisation also suggests that an expansion in two- , three , four - body terms may not converge quickly , if at all @xcite . since 1984 potentials involving a function of some measure of the local density",
    "have become the methods of choice .",
    "the two most prominent are the embedded atom ( eam ) and the second - moment tight - binding methods , also called finnis - sinclair ( fs ) @xcite . in these",
    "the cohesive energy is written as : @xmath5 \\right ) \\label{ucoh}\\ ] ]    where @xmath6 and @xmath7 are short - ranged pairwise potentials , and @xmath8 is a function of the sum of @xmath7 s .",
    "the form of the second term means that an expansion of the potential in @xmath9-atom terms does not converge @xcite .",
    "the interpretations of @xmath7 s are subtly different . in eam",
    "the @xmath10 represents the electron density from the atom @xmath11 at site @xmath12 - it depends only on the type of atom at @xmath11 . in fs @xmath13",
    "is the square of the tight binding hopping integral between @xmath11 and @xmath12 - it depends on both types of atom @xcite . in both cases",
    "@xmath7 is a function only of the interatomic distance .",
    "similarly the eam `` embedding function '' @xmath14 depends on the atom at site @xmath12 , while in the fs picture , @xmath8 is a universal function for a canonical @xmath15-band , independent of atom types - the square root . in practice ,",
    "these distinctions only become important when more than one atomic type is considered .",
    "a number of potentials which appear to be different actually take the same form as eq .",
    "these include the `` magnetic '' type potentials@xcite , rescaled potentials@xcite and the metallic - covalent fec potential of hepburn - ackland @xcite .",
    "similarly , simple pairwise potentials such as morse or lennard - jones can be cast into this form by setting @xmath16 .",
    "the form of the potential allows one to define the `` energy of an atom '' .",
    "this concept is both useful and meaningless .",
    "it is useful because deviations from the mean value can be used to highlight defects or hotspots in a simulation , but meaningless because the physically meaningful quantities , total energy and forces , are independent of how the energy is partitioned between atoms .",
    "the code implements several different ensembles .",
    "the `` total energy '' reported by moldy comprises only the kinetic energy of the movable particles and the cohesive energy of the system . however the additional degrees of freedom of the extended lagrangian introduced by the thermostat and barostat can exchange energy with the system . thus the only ensemble in which total energy is conserved is nvep , i.e. without barostat or thermostat .",
    "the standard `` molecular dynamics '' ensemble is nvep - constant particle number , volume , energy and momentum ( p=0 ) .",
    "the momentum constraint distinguishes it slightly from microcanonical nve .",
    "the nose - hoover @xcite thermostat can be applied to produce an nvtp canonical ensemble .",
    "this couples the system to an external heat bath .",
    "the temperature is defined by the kinetic energy via the relation :    @xmath17    where @xmath18 is the boltzmann constant , @xmath19 and @xmath20 are the particle masses and momenta and ( 3n-3 ) is the number of degrees of freedom once total momentum is conserved .",
    "the nose - hoover thermostat is an extended hamiltonian , which can be interpreted as an external heat reservoir , with an additional degree of freedom .",
    "this heat reservoir controls the temperature through exchange of kinetic energy with the system . to define a heat bath kinetic energy we introduce an effective mass @xmath21 and momentum @xmath22 .",
    "the equations of motion are then    @xmath23    @xmath24    @xmath25    thus @xmath26 is the degree of freedom associated with the thermostat , effectively a thermodynamic friction and @xmath27 is `` thermal inertia '' , which determines the rate of heat transfer and how closely the temperature is maintained near to the target temperature @xmath28 .",
    "the value of @xmath21 depends on the heat conduction in the system and must be specified in the input to the code .",
    "it is possible to choose @xmath21 to reproduce missing effects such as electronic heat conduction .",
    "the parrinello - rahman method @xcite is implemented for simulations in the npep ( or with nose , nptp ) ensemble .",
    "there are a number of anomalies in that paper@xcite , including lack of rotational invariance and missing cross terms in the derivatives , and these are reproduced faithfully by the code .    the positions * @xmath29 * are written as a product of fractional coordinates @xmath30 and a 3@xmath313 `` boxmatrix '' @xmath32 $ ] defining the simulation volume    @xmath33    from which a strain matrix with respect to a reference structure @xmath34 is defined by    @xmath35    where prime denotes the transpose .",
    "the boxmatrix introduces nine additional degrees of freedom , three stretches , three shears and three rotations .",
    "equations of motion for these degrees of freedom come from the stresses on the supercell .",
    "the strain definition is non - unique , but is sensible in the limit of small strain .",
    "the parrinello - rahman lagrangian contains the kinetic and potential energy of the particles , pressure times volume , a fictitious `` kinetic energy '' associated with the boxmatrix and a complex term arising from the non - hydrostatic stresses .",
    "@xmath36    where @xmath37 are the volume and unstrained volume , respectively ; p is the external hydrostatic pressure , * s * is the external stress .",
    "a constant term @xmath38tr@xmath39 is ignored .",
    "the scalar @xmath40 is the equivalent of a mass associated with the box degrees of freedom .",
    "it determines how rapidly the box changes shape in response to stress and can be related loosely to elastic constants .",
    "typically it takes a value of similar order of magnitude to the sum of the atomic masses . from all this analysis ,",
    "the equation of motion for the boxmatrix degrees of freedom is    @xmath41\\ ] ]    where @xmath42 is the internal stress tensor from the kinetic energy and virial and @xmath43 is the reciprocal space equivalent of the boxmatrix    @xmath44      the code offers a range of different boundary conditions . for infinite simulations ,",
    "the simulation cell is repeated periodically , and the minimum image convention for forces is applied where for purposes of eq.[ucoh ] @xmath45 refers to the shortest vector between atom @xmath12 and either @xmath11 or any of its periodic images .",
    "each atomic trajectory is followed faithfully , there is no explicit wraparound of the atoms ( i.e position is stored as * r * = @xmath46 rather than * x * = @xmath47 .",
    "this allows diffusion calculation to be done reliably .    as an alternative ,",
    "free boundary conditions are also possible , where there are no repeated cell or periodic boundary conditions .    for surface calculations , free surface in the @xmath48 direction",
    "can be combined with minimum image convention in the @xmath49 and @xmath50 directions . for surface calculation in crystals",
    "there is a surface tension ( different from the surface energy ) @xcite .",
    "ideally , one would like to have an infinitely thick slab so this 2d tension would be balanced by an infinitesimal 3d strain : in practice an infinite slab is not possible , and the correct boundary condition to simulate macroscopic material is to impose constant supercell lengths with ( nvt ) minimum image forces in @xmath51 and free boundaries in @xmath48 .",
    "relaxation perpendicular to and within the surface is then still possible .",
    "for interface calculation ( e.g. grain boundaries ) the interface may expand , so the boundary condition should be constant ( zero ) stress perpendicular to the boundary and constant strain within the boundary .",
    "once again this will generate internal stresses in the simulation , which in reality are balanced by infinitesimal strains in the bulk .",
    "finite strain rate boundary conditions can be applied using the _ strainloops _ variable .",
    "this multiplies the boxmatrix by the strain matrix every _ nsteps _ , and continues the calculation for a total of _",
    "strainloops*nsteps _ timesteps .",
    "this enables an external shear or compression to be applied stepwise to the system . by reducing the values of _ nsteps _ and _ straintensor _ while increasing _",
    "strainloops _ it is possible to make this shear as smooth as one wishes .    a similar method can be used to achieve finite temperature gradient : the _ tempsp _ parameter increments the target temperature every _ nsteps _ timesteps .",
    "this then allows the thermostat to add or extract the additional energy .",
    "the equations of motion for atomic and box degrees of freedom can be integrated using either of two methods : velocity verlet@xcite or third - order predictor - corrector@xcite .",
    "velocity verlet is time - reversible , and so tends to give better energy conservation ( see section  [ section : integration_error ] ) . by contrast , the third - order predictor - corrector gives more accurate atomic trajectories .      in some case",
    "it is desirable to fix atoms so that they do not move under external forcing .",
    "moldy fixes the fractional coordinates of all atoms with @xmath52 , at constant values . by applying an external strain to the boxmatrix , it is possible to move rigid blocks of atoms around to apply external strains to the system .",
    "there are possible consequences of this : any unusual behaviour at the interface between fixed and not fixed atoms is likely to be unphysical , and phonons or sound waves are reflected from such surfaces .",
    "the stress calculation ignores any forces acting between fixed atoms .      at the start of the calculation",
    "all atoms are assigned velocities drawn from a uniform random distribution and scaled such that the kinetic energy is equal to the target temperature ( as input ) and the total momentum is zero .",
    "if all atoms are started on their crystallographic positions , this means that the initial state has all its energy in kinetic degrees of freedom .",
    "after nvep equilibration , the temperature will typically drop to one half of the initial value , while in nvtp the thermostat will supply energy to maintain the required temperature . to ensure that there is some initial variation in potential energy , it is possible to displace all atoms randomly using the _ dsp _ parameter .    a special parameter group _ pka , pkavx , pkavy , pkavz _ and _ epka _ , allows the user to specify a single particle s initial kinetic energy and direction of motion .",
    "this enables radiation damage simulations to be done by defining the incoming or primary knock - on atom .",
    "moldy can calculate a number of thermodynamic quantities .",
    "the simplest of these are quantities defined for a microstate , number of degrees of freedom , coordinates and their time derivatives : @xmath53 ; temperature @xmath54 potential energy , @xmath55 ; kinetic energy @xmath56 ; total energy @xmath57 , volume @xmath58 and enthalpy @xmath59 , where p is the external pressure .",
    "more complicated are those quantities which can be defined through the various fluctuation theorems@xcite . for example",
    "the specific heat capacities    @xmath60    @xmath61    the compressibility @xmath62    and the thermal expansion @xmath63    where @xmath64 is the variation from the average values , @xmath65 found by keeping a running average of @xmath66 .",
    "these quantities can be calculated as running averages over a molecular dynamics simulation .",
    "however great care has to be taken to obtain good results .",
    "the simulation must be correctly sampling the ensemble throughout , so proper equilibration is essential .",
    "secondly , these quantities converge slowly with time , so extended runs are needed . in each case",
    "it is possible to calculate the same quantity from a series of runs varying the external t , v or p , measuring the mean values of microstate quantities , and obtaining @xmath67 , @xmath68 , @xmath69 or @xmath70 from the slope .",
    "moldy defines the following system of units , naturally applicable to molecular dynamics , and uses these internally : length in @xmath71 , mass in atomic mass units ( @xmath72 ) and energy in electron volts .",
    "the units of time are constructed as a combination of these base units with dimensions @xmath73 . as this gives an unusual number",
    "@xmath74x@xmath75 we convert all input from femtoseconds to model units and output from model units to femtoseconds for human consumption .",
    "hence timescales are always considered by the user in fs .",
    "similarly , the internal units of pressure are constructed as a combination of the base units with dimensions @xmath76 ) . however , for convenience , all input and output concerning pressure are in units of gpa .",
    "the necessary conversions to and from internal units are done automatically .",
    "similarly , temperature is input and output in kelvin .",
    "this module provides the interface to the potential .",
    "the material choice is made at compile - time ( using preprocessor directives in the @xmath77 ) . by design",
    ", the core code only interacts with the public interface of ` potential_m ` and not the actual potential as supplied by the relevant material module .",
    "therefore , each material module must conform to the well defined interface .",
    "public routines fall into two categories in a material module : those of the potentials themselves and those of inquiry routines .",
    "a material module must provide public functions for the pair potential @xmath6 , the cohesive potential @xmath7 , the embedding function @xmath78 , and their derivatives :    ....   function vee_src(r , na1 , na2 )   function dvee_src(r , na1 , na2 )   function phi_src(r , na1 , na2 )   function dphi_src(r , na1 , na2 )   function emb_src(rho , na1 )   function demb_src(rho , na1 ) ....    where the arguments for the pairwise potential are of the following type :    ....      real ( kind_wp ) : : vee_src        !",
    "< result ( ev )      real ( kind_wp ) , intent(in ) : : r !",
    "< separation ( angstrom )      integer , intent(in ) : : na1       !",
    "< atomic number atom 1      integer , intent(in ) : : na2       ! < atomic number atom 2 ....    the @xmath6 and @xmath7 potentials accept two species arguments , allowing one to specify asymmetric potentials , _ e.g. _",
    "@xmath79 , @xmath80 .",
    "the embedding function is only a function of @xmath81 for a given species .",
    "in addition to the @xmath6 , @xmath7 , and @xmath78 potentials , any material module must provide two inquiry routines :    ....    subroutine get_supported_potential_range(rmin , rmax )      real(kind_wp ) , intent(out ) : : rmin , rmax !",
    "< range in angstroms ....",
    "this returns the minimum and maximum range over which the potential acts .",
    "moldy uses this information when setting link - cell and neighbour list sizes and in deciding whether to calculate the potential for a particle pair .",
    "the implementation of this routine is not specified and is free to the user .",
    "examples are found in the supplied material modules .    ....",
    "subroutine check_supported_atomic_numbers(species_number , spna , ierror )      integer , intent(in ) : : species_number        !",
    "< number of species      integer , intent(in ) : : spna(species_number ) !",
    "< atomic numbers of the species      integer , intent(out ) : : ierror                !",
    "< return error code ....    at startup , this routine checks that the available material module can support the particles contained within the simulation s system file , and should return non - zero ` ierror ` if this is not the case .",
    "moldy will halt execution before the simulation begins , and report the condition . in the case of the _ generic _ potential module , this routine loads the required potential coefficients from coefficients files or returns an error if the files are not found .",
    "[ available potentials ]      the process of choosing a material module is one which might employ function pointers , available in fortran 2003 onwards .",
    "however , as we adhere to fortran 95 standards for portability , we have ruled this out as an option .",
    "consequently , a material module is chosen at compile time , suitable for the simulation to be performed .",
    "there are two stages required to introduce an additional material module to the code :    1 .",
    "create a material module conformant to the potential interface .",
    "2 .   edit a single line in ` potential_m.f90 ` to optionally `` use '' this module , e.g. : + ....    ! material module choice - use one material module only .    use generic_atvf ....    for convenience , one can make use of the ` material ` variable to allow the choice to be made from within the _ makefile_.    the above forms the core code of moldy",
    ". the code s design makes it easy to change potentials without any changes to the main code .",
    "consequently , we have provided a potentials module , which delivers an abstract interface through which the code accesses a selected set of potential functions from _ material module_. a material module can be written or modified by the user and is required at compile - time , however it must conform to the defined potential interface .",
    "the following material modules are provided in the initial release : +   + ` iron_carbon `  complete asymmetric potential set for fe - c simulations @xcite + ` zirconium `  single species zr hcp potential @xcite + ` pairpot `  multispecies lennard - jones potential with parameters read at runtime + ` morse `  multispecies morse potential with parameters read at runtime + ` generic_atvf `  generic potential loading module to load cubic spline potential coefficients from disk at runtime @xcite + the generic potentials currently offer single species potentials for al , cs , k , li , mo , na , nb , rb , ta , v , w , cu , au , ag , ni , ti , zr , and pt .",
    "in addition , ni - al cross species potentials are included .",
    "each potential is specified in a coefficients file .",
    "an example of a coefficients file is given here :    .... # atvf format ni / al fitted to apb001 and elastic constants # 13              # principal atomic number 28              # second atomic number ( used only for cross potential ) 4               # number of coefficients ( vee ) 1               # number of coefficients ( phi ) 0.0             # minimum potential radius 4.35174         # maximum potential radius -0.6469208776   1.1392692848   -0.6655106072   1.4680219296 # a_k coefficients ( v ) 4.35174 4.24473 3.88803 2.96061                           # r_k coefficients ( v ) 0.0             # a_k coefficients ( phi ) 1.0             # r_k coefficients ( phi ) # end of input # ....    coefficients files must conform to the naming convention which moldy employs : _ pot_xxx_yyy.in _ where _ xxx _ and _ yyy _ are the atomic numbers of the two species involved suitably prefixed with zeros .",
    "for example , the al potential ( single species ) is _",
    "pot_013_013.in _ , whereas the ni - al cross potential is provided by both _",
    "pot_013_028.in _ and _ pot_028_013.in_. additional materials can be provided by supplying the appropriate potential files .    for morse and lennard jones potentials it is still necessary to specify an atomic number , which will determine the mass .",
    "although these potentials can not represent specific materials , units are still required .",
    "it is recommended that parameters be chosen such that lattice parameters and binding energies lie in the @xmath71 and @xmath82 range as moldy makes some internal checks for unphysical values .",
    "moldy uses a hybrid neighbour - list / link - cell method@xcite .",
    "the link - cell method , or lcm was designed for a large number of particles , because when using lcm the calculation scales as @xmath1 .",
    "when a neighbour list is used in the traditional way , a calculation tends to scale as @xmath1 at each timestep at which the list is consulted , but as @xmath2 at each timestep in which the list is updated .",
    "the hybrid method , removes the remaining @xmath2 scaling because the neighbour list is rebuilt but from neighbours within adjacent link cells , and the link cells are fixed in fractional coordinate space .    in a dynamic simulation",
    "the link cells in the nl - lcm must be large enough to include all neighbours which might come into range of an atom within the cell / list update period .",
    "moldy ensures that link cells are a minimum size according to the maximum range of the acting potentials , plus a user - defined padding size ` rpad ` given in the parameter file .",
    "the neighbour list is calculated relatively infrequently , but for large systems , this can be costly .",
    "the neighbour list is the second most intensive task after the force calculation , and in tests we find the neighbourlist quickly becomes a bottleneck .",
    "the calculation is implemented as a nested loop over link - cells and their adjacent cells . as calculation of the neighbour list",
    "does not change the state of the system , the lists for each particle can be calculated independently .",
    "we find that applying a simple loop over a single link - cell index works effectively .",
    "the code has been parallelised for shared - memory systems using openmp .",
    "this type of system is often found in modern hardware , as multi - core processors have become increasingly standard , and look to increase further in both core number and ubiquity .",
    "the two targets for parallelisation of moldy are the force and neighbourlist calculations .    for reasons of efficiency ,",
    "moldy maintains an asymmetric neighbour list , such that for two atoms @xmath12 and @xmath11 , if @xmath11 is in the neighbour list of @xmath12 , the reverse is not true .",
    "this allows the force @xmath83 to be calculated once and applied to both particles @xmath12 and @xmath11 , without double counting .",
    "we adopt a particle - based parallelisation , as this promises the most even load - balance and maps sensibly onto the particle based loops .",
    "this implies that a particular openmp thread will have assigned to it a set of particles , for which it is responsible . in what follows ,",
    "this thread is referred to as the parent of these particles .",
    "to calculate the total force on a particle @xmath12 , we sum the force components @xmath83 for all the neighbours of @xmath12 .",
    "the difficulty in this approach arises when the force @xmath83 is also to be applied to @xmath12 s neighbouring particle @xmath11 , where @xmath11 does not belong to the same openmp thread as @xmath12 .",
    "there is a real and unacceptable risk that two threads will attempt to update the force on @xmath11 at the same time - those threads being the parent thread of @xmath12 whose neighbour is @xmath11 , and the parent thread of @xmath11 itself . in order to avoid this behaviour , synchronisation must be employed , such that only one thread may update the cumulative force on @xmath11 at a time . however , a simple synchronisation like atomic updates or a critical region , proves too costly for the force calculation , as the necessary synchronisation introduces a substantial overhead to this intensive region of code .",
    "it should be noted that it is possible to avoid any kind of synchronisation by maintaining a symmetric neighbourlist , at the cost of having to calculate @xmath83 twice .",
    "this factor of two penalty is only worth taking if a synchronisation mechanism results in less than 50% relative efficiency .    to combat this",
    ", we have established a mechanism that results in far fewer synchronisation calls .",
    "we adopt the approach of locking access to particles within defined regions of the simulation volume , encompassing the range of influence of a particular particle - by design , the link - cell scale .",
    "establishing locks on the link - cells allows us to lock / unlock a larger region of space , a correspondingly infrequent number of times .",
    "this manifests as a larger wait time should a non - parental thread need to access a particle . by ordering the particles array by increasing link - cell index , it is possible to space out the regions of the simulation volume being acted on by separate threads .",
    "this generally minimises the number of times different threads will be working within range of each other , and hence , minimises the time spent waiting for locks .",
    "this mechanism is designed to perform well for larger problem sizes .    from this basis ,",
    "three schemes were considered , as follows : +   + a : the parent thread locks the link - cell containing its child particle @xmath12 , and also the link - cell of the neighbour particle @xmath11 .",
    "link - cells can be locked and unlocked as infrequently as the link - cells change .",
    "+ b : the parent thread locks each link - cell within the sphere of influence of a particle , and only releases these locks when the link - cell or the current particle @xmath12 changes from that of the previously considered particle @xmath84 .",
    "this involves locking 8 cells per thread .",
    "+ c : the parent thread locks the link cell of the neighbouring particle @xmath11 only , and releases when the neighbouring cell changes from that of the previously considered neighbour @xmath85 .",
    "this involves locking only one cell per thread , and calculating a private accumulator of the force on the child particle @xmath12 , updating this at the end with a similar lock / unlock on @xmath12 s cell .",
    "+ scheme a is the simplest , but if not careful , schemes like this can result in deadlock if two threads are visiting neighbours in the link - cells of each other s child particles .",
    "scheme b is an overly conservative approach , locking more of the simulation volume than is strictly necessary at one time .",
    "this scheme also requires extra care to be taken over locking order , to avoid deadlocking situations .",
    "scheme c has been adopted , as it benefits from locking only one link - cell at a time , which eliminates the possibility of deadlock , and decreases the number and duration of waits .    for moldy",
    ", the neighbour list is constructed from the link cells so that atoms in the same link cell are contiguous .",
    "this means that in the loop over neighbours , at most 8 lock / unlock commands need to be sent .",
    "tests showed that this is considerably faster than double - calculation of the potential for large systems , albeit at the cost of some coding complexity .",
    "the scheme is illustrated in the pseudocode snippet below .    .... !",
    "$ omp parallel    neighbour_link_cell = 0 ! !",
    "( null value = neighbour link - cell is not set )    !",
    "$ omp do    ! !",
    "calculate force on particles and their neighbours    particleloop : do i = 1 , number of particles        ! temporary force accumulator for particle i      force_i = 0        neighbourloop : do j = 1 , number of neighbours of particle i                ! global index of i particle 's j neighbour        neighbour_idx = neighbours(j , i )                   force_ij = calculate force between i and j                     !",
    "! set / reset region locks when changing neighbour link cell        if ( linked_cell_of(neighbour_idx ) .ne .",
    "neighbour_link_cell ) then          ! !",
    "if we hold a lock on an old link cell , unset it          if ( neighbour_link_cell .gt .",
    "0 ) then             call omp_unset_lock(lock(neighbour_link_cell ) )          end if          ! ! set neighbour link cell to the current link - cell and lock it",
    "neighbour_link_cell = linked_cell_of(neighbour_idx )            call omp_set_lock(lock(neighbour_link_cell ) )        end if                   ! !",
    "update force of particle 's neighbour        force(neighbour_idx ) + = force_ij                   ! !",
    "update temporary force accumulator for particle i        ! !",
    "do not update force on i yet .",
    "force_i + = force_ij                   end do neighbourloop        ! !",
    "set / reset region locks when updating own particle      if ( linked_cell_of(i ) .ne .",
    "neighbour_link_cell ) then        call omp_unset_lock(lock(neighbour_link_cell ) )        ! !",
    "set neighlc to the current link - cell        neighbour_link_cell = linked_cell_of(i )        call omp_set_lock(lock(neighbour_link_cell ) )      end if      force(i ) -= force_ij      end do particleloop    !",
    "$ omp end do nowait ! !",
    "release all locks call omp_unset_lock(lock(neighbour_link_cell ) ) ....",
    "moldy utilises two main input files : the _ parameter _ file , and the _ system _ file .",
    "these two are sufficient to describe a physical system and the features of a simulation .",
    "the main output files moldy creates are the default output file ( equivalent to stdout ) , and the unformatted checkpoint / restart file .",
    "input and output filenames can be specified by the user in the main parameter file .",
    "the main input file is _",
    "params.in_ , and must always have this name .",
    "this file contains all the parameters of the simulation , including specification of other file names , physical parameters of the simulation , verification parameters for the system file , and non - physical simulation parameters governing flow control and loop counters .",
    "the parameter file contains key - value pairs .",
    "comments can be placed at any point at the end of a line or on separate lines .",
    "many parameters have defaults , in which case specification is not necessary . the parameter list is given in tab .",
    "[ parametertable ] .    ll x keyword & default & description + file_system & system.in & file describing atomic positions in system ( the system file ) + file_textout & moldin.out & file for text output + file_checkpointread & - & input checkpoint filename + file_checkpointwrite & - & output checkpoint filename + file_dumpx1 & - & file to output per iteration data + boxmass & - & mass of the box in units of a.m.u . per constituent particle + deltat & - & timestep in fs + rpad & 0.0 & padding thickness over potential cutoff in (for link cell ) + temprq & - & required temperature in the md in kelvin + press & 0.0 & required external pressure in gpa + ivol & - & switch defining volume behaviour of the system + iquen & - & switch between molecular dynamics and molecular statics + nose & 0.0 & softness of damping in the nose thermostat ( 0.0 : no damping ) + dsp & 0.0 & random displacement from input particle positions ( in  ) + pka & 0 & prints out position of a single chosen atom each nprint steps + epka & 0 & initial energy of atom epka + pkavx , pkavy , pkavz & 0,0,0 & direction of motion of pka + straintensor & @xmath86 & strain tensor in one unrolled 9 element value + nm & - & the number of particles in the simulation + nspec & - & the number of distinct species in the simulation + nsteps & 0 & number of timesteps to be done in a run + nbrupdate & - & frequency of updating list of neighbours ( md steps ) + strainloops & 1 & number of loops of applying the strain tensor + restart & 0 & switch defining whether a restart file is read at startup + nprint & 100 & frequency of printing of thermodynamic averages ( md steps ) + nchkpt & -1 & frequency with which to checkpoint ( md steps ) + nposav & 0 & prints sys_avs.out : positions averaged over final nposav timesteps + nnbrs & 150 & maximum size of the neighbour list + tjob & - & maximum execution time in seconds + tfinalise & - & time reserved for finalising the job + iverlet & 0 & algorithm choice ( 0=predictor - corrector , 1=verlet ) + prevsteps & 0 & number of timesteps done previously ( _ e.g. , _ if restarting ) + lastprint & 0 & number of timesteps since last printing of run averages + lastchkpt & 0 & number of timesteps since last checkpoint + dumpx1 & .false . & flag to write per - iteration data to file + write_rdf & .false . & flag to write the final radial distribution function to file on completion +    to get started with the code",
    ", some parameters of note are the following :    boxmass : :    in parrinello - rahman dynamics , the box itself is dynamically evolved .",
    "the box mass determines the magnitude of the reaction of the box as    the system evolves .",
    "the mass is specified in atomic mass units per    particle .",
    "rpad : :    the neighbour list is constructed from particles within the potential    range .",
    "a padding distance is added to maintain the completeness of the    neighbourlist as particles move into and out of the potential range    between neighbourlist updates .",
    "a rule of thumb for the padding    distance is the expected maximum drift of particles over the course of    the time between neighbour - list recalculation",
    ". this will be system    dependent and vary a lot between , e.g. solid and liquid .",
    "ivol : :    this integer parameter is a switch which controls the md details .",
    "accepted values are ( 0 ) constant pressure ; ( 1 ) constant volume ; ( 2 )    free surface on z , constant volume on x , y ; ( 3 ) cluster : free surface    on x , y , z , ( 4 ) grain boundary : constant volume on x , y , constant    pressure on z. ( 5 ) pillar compression : free - surface - on - xy ,    constant - volume - on - z .",
    "iquen : :    integer parameter to choose between molecular dynamics , molecular    statics ( quenching ) or `` boxquenching '' .",
    "nose : :    the nose - hoover thermostat parameter ; related to the @xmath21    defined above , large values correspond to slow relaxation .",
    "straintensor : :    an external strain can be applied on the simulation volume ( box ) after    construction .",
    "this is a 3x3 matrix , but can be specified here unrolled    as nine values , _",
    "restart : :    this controls whether a checkpoint / restart file is read in .",
    "accepted    values are ( 0 ) new simulation , do not read restart ; ( -1 ) read a    restart file but calculate fresh initial velocities ; ( 1 ) use the    entire restart file to continue from a previous calculation      the system file ( by default _",
    "system.in_ ) contains information on the physical system including system size , shape and contents .",
    "an example system file looks like this :    .... 4000                  # number of particles included in this file 1 1 1                 # number of replications of the system in x , y , z 56.2719571 0.0 0.0    # size of the system volume ( 3x3 ) 00.0   32.4886349 0.0 # 0.0 0.0    51.8247969 #      0.0333333351     0.0000000000     0.000000000     40   91.22      0.0833333351     0.0500000000     0.000000000     40   91.22      0.0666666651     0.0000000000     0.050000000     40   91.22      0.0166666651     0.0500000000     0.050000000     40   91.22 . .",
    "....    the first line contains the number of particles in the system file itself",
    ". the simulation cell will be populated with a number of copies of these particles , depending on the number of replications entered on line two .",
    "lines 3 - 5 are the unreplicated system volume size and shape in angstroms .",
    "after that follows @xmath88 lines each giving the fractional coordinates , the atomic number and mass of the particle .    the system file can be considered as defining a unit cell .",
    "the replication feature allows a simulation to be constructed from any number of replications of this unit cell , and is particularly useful for creating large volumes of regular lattice positions .",
    "thus an equivalent to the above file specifying all positions would be :    .... 4                  # number of particles included in this file 10 10 10                 # number of replications of the system in x , y , z 5.62719571 0.0 0.0    # size of the system volume ( 3x3 ) 00.0   3.24886349 0.0 # 0.0 0.0    5.18247969 #      0.333333351     0.0000000000    0.000000000     40   91.22      0.833333351     0.500000000     0.000000000     40   91.22      0.666666651     0.0000000000    0.500000000     40   91.22      0.166666651     0.5000000000    0.500000000     40   91.22 ....      moldy allows full checkpoint / restart governed by the ` restart ` and ` nchkpt ` keys in the parameter file ( section  [ parameterfile ] ) .",
    "the file contains the entire simulation parameter set , particle positions , velocities , accelerations and jolts , the atomic number , species , and mass index arrays and bulk thermodynamic properties of the system .",
    "checkpoint / restart files are created every ` nchkpt ` timesteps ( set in the parameter file ) and at the end of a simulation .",
    "the output file system.out can be used in place of _",
    "system.in _ to restart the simulation .",
    "it is also in a format readable by ballviewer @xcite .",
    "moldy includes several examples that may be used to help gain familiarity with the procedure for setting up and running simulations .",
    "these examples are stored in the ` trunk / examples/ ` directory and are documented on the moldy wiki website : https://www.wiki.ed.ac.uk/display/computersim/moldy . tab .  [",
    "tab : examples ] lists the set of examples at time of writing ; these may be added to in the future .",
    "[ tab : examples ]    .set of examples included with the initial release of moldy . [",
    "cols=\"<,>,<\",options=\"header \" , ]      we tested the shear boundary conditions by calculating the elastic constants of iron .",
    "elastic constants vary with temperature in a way which is often well described by the semi empirical expression    @xmath89    where @xmath90 and @xmath91 are empirical parameters@xcite . a resonant ultrasound spectroscopy study @xcite suggested that the @xmath92 elastic modulus dropped by over 15% between 0 and 500k .",
    "equation [ varshni ] then implied that it would go to zero above 2000k .",
    "we calculated the modulus from distorting a unit cell of 2000 atoms according to the c strain and evaluating the elastic constant from fitting the total energy at each temperature to a quadratic in the strain .",
    "this is cross - checked with the stress - strain relation .",
    "since the potential is fitted to the zero temperature elastic moduli , good agreement at low temperature is expected . in fig .",
    "[ fig : cprime ] we show that although the calculated c softens , it does not do so as much as in the experiment .",
    "this suggests that the potential does not fully account for the physics behind the softening .",
    "the c elastic constant involves the same strain as the bain transformation from bcc to fcc , which is also not correctly reproduced .",
    "we also investigated the effect of carbon on diffusion in iron .",
    "the diffusion d(t ) temperature dependence and energy of migration for carbon in bcc iron was evaluated for temperature ranging up to 1800k with a 2000 + 1c atom cell .",
    "the energy of migration of a carbon interstitial was found to be considerably higher than that for the vacancy ; @xmath93ev@xmath94ev .",
    "the carbon occupies the octahedral @xmath95 site and the nearest adjacent site ( e.g. @xmath96 ) lies along the ( 010)-type direction .",
    "however , fig .",
    "[ fig : c - diff ] shows evidence of correlated migration along various directions ( e.g. event at 2500fs ) and multiple correlated motion along a ( 100 ) direction ( e.g. event at 7000fs ) .",
    "this suggests that the martensite - type tetragonal strain field around the c can persist , enabling secondary jumps to occur @xcite .",
    "we also investigated a 1999 + 1c iron system with a carbon and a vacancy .",
    "now we find a trapping and detrapping effect : the fastest migrating species is the vacancy , followed by the vacancy - carbon complex and finally the isolated carbon ( see fig .",
    "[ fig : cv - diff ] ) .",
    "thus the carbon acts as a weak trap for the vacancy , slowing its migration : by contrast the vacancy enhances the migration of the carbon .",
    "even the weak vacancy trapping effect means that the overall self - diffusion rate of fe is reduced by more than an order of magnitude due to the presence of 0.05% carbon .",
    "we described a thoroughly updated and parallelised flexible molecular dynamics code moldy , which previously existed in many different versions .",
    "the program is interfaced with ballviewer , a bespoke graphics package for identifying local crystal structures and visualising md outputs .",
    "furthermore , we demonstrated the parallel capabilities of moldy using up to 16 threads to run simulations of systems exceeding one million atoms .",
    "it was shown that the strong and weak scaling of the code provided by openmp parallelisation were good out to a 16-thread system .",
    "moldy comes with its own test suite and we have presented applications , which illustrate some of the code features that are missing in many standard codes , such as variable boundary conditions , quenching , autocorrelation , complete stress and strain tensors .",
    "these applications show some features which are interesting in their own right , for example the crystallographic reorientation of a single nanocrystal of copper under uniaxial compression and the 100-fold reduction in iron self - diffusion due to a small amount of carbon .",
    "this work was supported by the epsrc under grant number ep / f010680/1 and by the eu - fp7 project getmat .",
    "we are grateful to mark bull for discussions on openmp .",
    "we also thank our codehost http://code.google.com/p/moldy/ .",
    "40 g.j.ackland , 1987 .",
    "non - pairwise potentials and defect modelling for transition metals .",
    "d.phil thesis , university of oxford .",
    "finnis , m. w. , harker , a. h. , 1988 .",
    "moldy6 - a molecular dynamics program for simulation of pure metals .",
    "tech . rep .",
    "aere r-13182 , uk aea harwell laboratory .",
    "refson , k. , 2000 .",
    "moldy : a portable molecular dynamics simulation program for serial and parallel computers .",
    "computer physics communications 126 ( 3 ) , 310 - 329 .",
    "parrinello , m. , rahman , a. , 1981 .",
    "polymorphic transitions in single crystals : a new molecular dynamics method",
    ". journal of applied physics 52 ( 12 ) , 7182 - 7190 .",
    "daw , m. s. , baskes , m. i. , jun 1984 .",
    "embedded - atom method : derivation and application to impurities , surfaces , and other defects in metals .",
    "phys . rev .",
    "b 29 ( 12 ) , 6443 - 6453 .",
    "finnis , m. w. , sinclair , j. e. , 1984 . a simple empirical n - body potential for transition metals . philosophical magazine a 50 ( 45 - 55 ) . v. heine , i. j. robertson , m. c. payne , j. n. murrell , j. c. phillips and d. weaire,1991 phil.trans.roy.soc 334 393 ackland , g. j. , finnis , m. w. , vitek , v. , 1988 .",
    "validity of the second moment tight - binding model .",
    "journal of physics f : metal physics 18 ( 8) , l153 .",
    "dudarev s and derlet p. ( 2005 )",
    "journal of physics : condensed matter 17 , 7097 .",
    "ackland , g.j .",
    "journal of nuclear materials 351 , 1 - 3 , 20 - 27 ( 2006 ) hepburn , d.j . ,",
    "ackland , g.j . , and olsson p. phil.mag 89 34 - 36 3393 ( 2009 ) hepburn , d.j . ,",
    "ackland , g.j . , 2008 .",
    "metallic - covalent interatomic potential for carbon in iron .",
    "phys . rev .",
    "b 78 ( 16 ) , 165115 .",
    "hoover , w. g. , 1985 .",
    "canonical dynamics : equilibrium phase - space distributions .",
    "a 31 ( 3 ) , 1695 - 1697 .",
    "nose , s. , 1984 . a unified formulation of the constant temperature molecular dynamics methods .",
    "the journal of chemical physics 81 ( 1 ) , 511 - 519 . nose , s and klein , m mol phys 50 , 1055 ( 1983 ) .",
    "cleveland , c.l . ,",
    ". 89 4987 ( 1989 ) wentzcovitch r.m .",
    "phys.rev.b 44 , 2358 ( 1991 ) ackland , g.j . and r. thetford , r .",
    "phil . mag .",
    "a * 56 * , 15 ( 1987 ) .",
    "allen , m.p . and tildesley , d.j . computer simulation of liquids oup ( 1987 ) .",
    "ackland , g. j. , mendelev , m. i. , srolovitz , d. j. , han , s. , barashev , a. v. , 2004 .",
    "development of an interatomic potential for phosphorus impurities in @xmath69-iron .",
    "journal of physics : condensed matter 16 ( 27 ) , s2629 .",
    "mendelev , m. i. , ackland , g. j. , 2007 . development of an interatomic potential for the simulation of phase transformations in zirconium .",
    "philosophical magazine letters 87 ( 5 ) , 349 - 359 .",
    "ackland , g. j. , tichy , g. , vitek , v. , finnis , m. w. , 1987 .",
    "simple n - body potentials for the noble metals and nickel . philosophical magazine a 56 ( 6 ) , 735 - 756 .",
    "fincham d. and heyes , d.m .",
    ", advances in chemical physics .",
    "wiley , new york ( 1985 ) , p. 493",
    "l. verlet phys .",
    "159 98 ( 1967 ) c.w .",
    "gear , numerical initial value problems in ordinary differential equations , prentice hall , englewood , 1973 ackland , g. j. , jones , a. p. , 2006 . applications of local crystal structure measures in experiment and simulation .",
    "phys . rev .",
    "b 73 ( 5 ) , 054104 .",
    "hairer , e. , lubich , c. , wanner , g. , 2003 . geometric numerical integration illustrated by the strmer / verlet method .",
    "acta numerica 12 , 399 - 450 .",
    "tschopp , m. a. , spearot , d. e. , mcdowell , d. l. , 2007 .",
    "atomistic simulations of homogeneous dislocation nucleation in single crystal copper .",
    "modelling and simulation in materials science and engineering 15 ( 7 ) , 693 .",
    "mendelev , m. i. , mishin , y. , oct 2009 .",
    "molecular dynamics study of self - diffusion in bcc fe .",
    "b 80 ( 14 ) , 144111 .",
    "sivak , a. , romanov , v. , chernov , v. , 2007 .",
    "self - point defects diffusion in bcc iron .",
    "13rd international conference on fusion reactor materials , 3693 .",
    "harder , j. , bacon , d. , 11 1986 .",
    "point - defect and stacking - fault properties in bodycentered - cubic metals with n - body interatomic potentials . philosophical magazine",
    "a - physics of condensed matter structure defects and mechanical properties 54 ( 5 ) , 651 - 661 .",
    "calder , a. , bacon , d. , 1993 . a molecular dynamics study of displacement cascades in @xmath69-iron .",
    "journal of nuclear materials 207 , 25 - 45 .",
    "osetsky , y. , mikhin , a. , serra , a. , 1995 .",
    "study of copper precipitates in alpha - iron by computer - simulation .",
    "interatomic potentials and properties of fe and cu . philosophical magazine",
    "a - physics of condensed matter structure defects and mechanical properties 72 ( 2 ) , 361 - 381 .",
    "domain , c. , becquart , c. s. , dec 2001 .",
    "ab initio calculations of defects in fe and dilute fe - cu alloys .",
    "b 65 ( 2 ) , 024103 .",
    "fu , c .- c . ,",
    "willaime , f. , ordejn , p. , apr 2004 .",
    "stability and mobility of mono and di - interstitials in @xmath69-fe .",
    "92 ( 17 ) , 175503 .",
    "angers , r. , claisse , f. , 1968 .",
    "improvement of kryukov and zhukhovitskii method for measurement of diffusion .",
    "application to self - diffusion in alpha iron .",
    "canadian metallurgical quarterly 7 ( 2 ) , 73 .",
    "schaefer , h .- e . , maier , k. , weller , m. , herlach , d. , seeger , a. , diehl , j. , 1977 .",
    "vacancy formation in iron investigated by positron annihilation in thermal equilibrium .",
    "scripta metallurgica 11 ( 9 ) , 803 - 809 .",
    "vehanen , a. , hautojarvi , p. , johansson , j. , yli - kauppila , j. and moser , p. , vacancies and carbon impurities in @xmath69 - iron : electron irradiation , phys .",
    "b 25 1982 , p. 762 .",
    "de schepper , l. , segers , d. , dorikens - vanpraet , l. , dorikens , m. , knuyt , g. , stals , l. m. , moser , p. , may 1983 .",
    "positron annihilation on pure and carbon - doped @xmath69-iron in thermal equilibrium .",
    "b 27 ( 9 ) , 5257 - 5269 . romanov , v. a. , sivak , a. b. , chernov , v. m. , 2006 .",
    "vopr . at .",
    "nauki tekh .",
    ": materialoved .",
    "i novye mater .",
    "66 ( 129 ) .",
    "varshni , y. p. , nov 1970 .",
    "temperature dependence of the elastic constants .",
    "b 2 ( 10 ) , 3952 - 3958 .",
    "adams , j. j. , agosta , d. s. , leisure , r. g. , ledbetter , h. , 2006 .",
    "elastic constants of monocrystal iron from 3 to 500 k. journal of applied physics 100 ( 11 ) , 113530 .",
    "mclellan , r. b. , wasz , m. l. , 1988 .",
    "carbon - vacancy interactions in b.c.c .",
    "physica status solidi ( a ) 110 ( 2 ) , 421 - 427 ."
  ],
  "abstract_text": [
    "<S> we describe a parallelised version of the moldy molecular dynamics program . </S>",
    "<S> this fortran code is aimed at systems which may be described by short - range potentials and specifically those which may be addressed with the embedded atom method . </S>",
    "<S> this includes a wide range of transition metals and alloys . </S>",
    "<S> moldy provides a range of options in terms of the molecular dynamics ensemble used and the boundary conditions which may be applied . </S>",
    "<S> a number of standard potentials are provided , and the modular structure of the code allows new potentials to be added easily . </S>",
    "<S> the code is parallelised using openmp and can therefore be run on shared memory systems , including modern multicore processors . </S>",
    "<S> particular attention is paid to the updates required in the main force loop , where synchronisation is often required in openmp implementations of molecular dynamics . </S>",
    "<S> we examine the performance of the parallel code in detail and give some examples of applications to realistic problems , including the dynamic compression of copper and carbon migration in an iron - carbon alloy .    molecular dynamics ; embedded atom method ; openmp    _ manuscript title : _ the moldy short - range molecular dynamics package + _ authors : _ </S>",
    "<S> g  j  ackland k  dmellow s  l  daraszewicz d  j  hepburn m  uhrin k  stratford + _ program title : _ moldy + _ journal reference : _ + _ catalogue identifier : _ </S>",
    "<S> + _ licensing provisions : _ </S>",
    "<S> gnu general public license version 2 + _ programming language : _ fortran 95 / openmp + _ computer : _ any + _ operating system : _ any + _ ram : _ 100 mb or more + _ number of processors used : _ any + _ supplementary material : _ requires openmp for parallel execution + _ keywords : _ molecular dynamics ; embedded atom method ; openmp + _ pacs : _ </S>",
    "<S> 71.15.pd , 71.20.be + _ classification : _ 7.7 other condensed matter inc . </S>",
    "<S> simulation of liquids and solids + _ nature of problem : _ moldy addresses the problem of many atoms ( of order @xmath0 ) interacting via a classical interatomic potential on a timescale of microseconds . </S>",
    "<S> it is designed for problems where statistics must be gathered over a number of equivalent runs , such as measuring thermodynamic properities , diffusion , radiation damage , fracture , twinning deformation , nucleation and growth of phase transitions , sputtering etc . in the vast majority of materials , the interactions are non - pairwise , and the code must be able to deal with many - body forces . + _ solution method : _ molecular dynamics involves integrating newton s equations of motion . </S>",
    "<S> moldy uses verlet ( for good energy conservation ) or predictor - corrector ( for accurate trajectories ) algorithms . </S>",
    "<S> it is parallelised using open mp . </S>",
    "<S> it also includes a static minimisation routine to find the lowest energy structure . </S>",
    "<S> boundary conditions for surfaces , clusters , grain boundaries , thermostat ( nose ) , barostat ( parrinello - rahman ) , and externally applied strain are provided . </S>",
    "<S> the initial configuration can be either a repeated unit cell or have all atoms given explictly . </S>",
    "<S> initial velocities are generated internally , but it is also possible to specify the velocity of a particular atom . a wide range of interatomic force models are implemented , including embedded atom , morse or lennard jones . </S>",
    "<S> thus the program is especially well suited to calculations of metals . </S>",
    "<S> + _ restrictions : _ the code is designed for short - ranged potentials , and there is no ewald sum . thus for long range interactions where all particles interact with all others , the order - n scaling will fail . </S>",
    "<S> different interatomic potential forms require recompilation of the code . </S>",
    "<S> + _ additional comments : _ there is a set of associated open - source analysis software for postprocessing and visualisation . </S>",
    "<S> this includes local crystal structure recognition and identification of topological defects . </S>",
    "<S> + _ running time : _ a set of test modules for running time are provided . </S>",
    "<S> the code scales as order n. the parallelisation shows near - linear scaling with number of processors in a shared memory environment </S>",
    "<S> . a typical run of a few tens of nanometers for a few nanoseconds will run on a timescale of days on a multiprocessor desktop . </S>"
  ]
}
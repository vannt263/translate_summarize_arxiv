{
  "article_text": [
    "object tracking plays a crucial role for successful implementation of various kinds of vision applications such as surveillance , human robot interaction , activity recognition , navigation of intelligent vehicles , and the like . to ensure robust performance",
    ", object tracking almost always struggles against dynamic natural scenes .",
    "one of the toughest challenges confronted by any tracking algorithm is to locate a target robustly in the presence of outliers resulting from partial occlusion or background clutter .",
    "an outlier can be defined as a statistical observation different in any physical value ( for example , color , shape , position , motion vector , and so on ) from the others belonging to a target in question .",
    "outliers make it hard not only to locate a target but also to update its object model correctly .    in the object tracking domain , there are roughly two different approaches to deal with outliers .",
    "one approach is to use a robust motion estimator@xcite or a robust similarity measure@xcite , designed to preserve its original performance to some extent in the presence of outliers .",
    "an obvious problem of this approach is that trackers are prone to drift when the ratio of outliers exceeds a estimator - specific threshold .",
    "for example , median flow tracker @xcite is based on the assumption that the occluded portion of a target is less than 50 percent of its whole area .",
    "the other approach identifies and removes outliers explicitly to minimize their influence on target localization .",
    "an inherent problem in this kind of approach is how to identify outliers faithfully and how to restore inliers promptly from disocclusion .",
    "previous works @xcite mainly focus on the detection of occlusion and disocclusion , showing reactive behavior of target tracking depending on instantaneous scene structure .        in this paper",
    "we consider outliers as important as inliers for object tracking and propose a motion estimation algorithm based on concurrent tracking of inliers and outliers .",
    "our approach is quite different from most of the existing methods which simply discard detected outliers and pay little or no attention to employing them as an important source of information for motion estimation .",
    "the rest of the paper is organized as follows . in section [ sec : concurrent_tracker ] , we present our approach and give a detailed description of its individual parts . in section [ sec : experiment ] , we evaluate the performance of our proposed tracker and compare the result to other state - of - the - art methods on benchmark tracking data sets .",
    "finally , in section [ sec : conclusion ] , we conclude the paper .",
    "our tracker is similar to median - flow tracker @xcite in estimating target motion based on optical flow and making use of pyramidal implementation of the lucas - kanade tracker @xcite .",
    "the proposed tracker accepts as input a pair of images @xmath0 , @xmath1 and a bounding box @xmath2 surrounding a target in question , either determined manually or determined automatically by a target detection algorithm prior to target tracking .",
    "the proposed tracker outputs an updated estimate of the target location in the form of a bounding box @xmath3 .",
    "a set of grid points @xmath4 is initialized uniformly across the bounding box @xmath2 ( figure [ fig : basic_tracker]a ) . for these points ,",
    "optical flow is computed by lucas - kanade tracker .",
    "let @xmath5 be a set of estimated flows .",
    "unreliable flows are then identified based on the forward - backward ( fb ) error criterion introduced in @xcite .    for evaluation of fb error",
    ", the proposed tracker computes the optical flow backwardly from @xmath1 to @xmath0 for the set of tracked points @xmath6 , which generates a set of backward flows @xmath7 .",
    "the fb error is computed by employing euclidean distance between @xmath8 and @xmath9 and the flows whose fb error is larger than a predefined threshold @xmath10 are considered as unreliable and eventually filtered out .",
    "we will call the grid points @xmath11 associated with the remaining reliable flow _ matched _ points and the others _ unmatched _ points .",
    "note that the tracked points may fail to be matched during optical flow estimation by the lucas - kanade tracker .",
    "we do not distinguish such unmatched points from the points filtered out and simply call both of them _ unmatched _ points .",
    "considering only in - plane rotation , scale change , and translation , a rigid transformation @xmath12 is then estimated from the matched motion flows by ransac @xcite estimator .",
    "we adopt rigid transformation because more general transformation such as full affine transformation or homography is more error - prone for most tracking tasks .",
    "finally the bounding box @xmath3 is obtained by applying the estimated transformation to @xmath2 : @xmath13    figure [ fig : basic_tracker ] illustrates the tracking procedure of the proposed tracker . in figure",
    "[ fig : basic_tracker]b , unreliable flows which are filtered out by fb test with a threshold value @xmath14 is depicted in black while the matched flows are depicted in green or red according to whether it is classified as inlier ( green ) or outlier ( red ) by ransac estimator .",
    "the basic flow tracker described in section [ ssec : basic_tracker ] has a limited performance for several reasons although it is robust to outliers to some extent .",
    "for example , the tracker may fail even in the presence of a small fraction of outliers if the outliers have motion flows similar to those of the inliers and not filtered out since a small drift can lead a tracker to fail for long - term operation .",
    "this situation is not rare in actual tracking tasks .",
    "in addition , the tracker may fail if the number of outliers exceeds the number of inliers and the outliers form consistent motion flows as in the case of partial occlusion . in such case",
    "the tracker will drift along a direction of the outlier motion .",
    "a more severe problem is that the tracker may not recognize a tracking failure when target motion estimation is carried out in a normal manner .",
    "we solve the aforementioned problems by extend the functionality of the basic flow tracker to track inliers and outliers separately at the same time , which we call the basic flow tracker with the extended functionality a _ concurrent tracker _ ( or simply a tracker in the remaining part of this paper ) .",
    "let @xmath11 be tracking points and @xmath15 be the states of the tracking points at time @xmath16 , where @xmath17 initially , the tracking points @xmath18 are initialized by uniform grid points across the bounding box @xmath19 and their states are set to be _ inlier _",
    "( @xmath20 ) .",
    "the concurrent tracker accepts a pair of images @xmath0 , @xmath1 and a bounding box @xmath2 and a model state @xmath21 and outputs @xmath3 and @xmath22 , where @xmath23 .",
    "the tracking points @xmath11 always are reinitialized by the uniform grid points within the bounding box @xmath2 .",
    "the tracker firstly estimates optical flows and then filters out unreliable flows as in the basic flow tracker of section [ ssec : basic_tracker ] .",
    "let @xmath24 be the set of unmatched points ; @xmath25 be the set of matched points ; and @xmath26 be the set of matched flows .",
    "the set of matched points @xmath27 are further divided into two sets of matched inliers @xmath28 and matched outliers @xmath29 .",
    "similarly @xmath30 is divided into @xmath31 and @xmath32 .",
    "next , the tracker estimates two rigid transformations of @xmath33 for inlier flows @xmath31 and @xmath34 for outlier flows @xmath32 by applying ransac estimator respectively to the two sets of matched flows .",
    "if @xmath33 is estimated successfully ( ii.e .",
    ", in case the number of matched inlier flows is sufficiently large for estimating the rigid transformation and the estimated transformation is supported by a number of matched inlier flows more than a predefined threshold ) , the tracker updates the bounding box as follows : @xmath35 if it fails to estimate @xmath33 , the tracker fails ( ii.e .",
    ", in the event of the insufficient number of matched flows for estimating the rigid transformation or the estimated transformation is supported by too small number of inliers ) and stops all the remaining steps , and simply returns the previous state : @xmath36 @xmath37    in case we succeed to estimate both of @xmath33 and @xmath34 , the states of tracking points are updated as follows .",
    "first , those flows far away from the estimated transformation are determined as unreliable and filtered out .",
    "let @xmath38 and @xmath39 be the remaining flow points after the filtering , given by @xmath40 @xmath41 where @xmath42 is residual given by @xmath43 and @xmath44 and @xmath45 are the estimated variance of the inlier residuals and outlier residuals respectively , and @xmath46 and @xmath46 are constants .    the points in @xmath38 and @xmath39 can be regarded as error - free and the model state is updated based on these points .",
    "the model state is updated according to the following rules :    1 .",
    "@xmath47 is set to be _ outlier _ if @xmath48 .",
    "@xmath47 is set to be _ inlier _ if @xmath49 and @xmath50 .",
    "@xmath47 is set to be _ outlier _ , otherwise .    in actual implementation , before the state update",
    ", the inlier points in @xmath38 are smoothed by median filtering to remove noise and then dilated .",
    "the median filtering and dilation is applied to a rectangular grid after mapping the points on the rectangular grids , which gives a smoothed version of @xmath38 .",
    "the outlier points in @xmath39 are also smoothed by median filtering but not dilated . after applying smoothing",
    ", some inlier points in @xmath38 and outlier points in @xmath39 may overlap ; in this case , outlier points always have a higher priority according to the update rules above .    in case",
    "it fails to estimate @xmath34 , the model state is updated according to the following rules :    1 .",
    "@xmath47 is set to be _ inlier _ if @xmath49 .",
    "@xmath47 is set to be _ outlier _ , otherwise .",
    "concurrent observation of inlier motion and outlier motion provides a powerful cue for the restoration of target inliers from disocclusion . in case inlier motion and outlier motion",
    "are successfully estimated and the two estimated motions are sufficiently different from each other , one of the following two cases holds .",
    "one case is that the target is currently occluded by an occluding object and the target and the occluding object have different motion .",
    "the other case is that current target roi ( region of interest ) includes part of its background and the target is moving while the target roi contains part of the background . in either case , if a large motion difference is detected , restoration conditions are checked to determine the current outliers as inliers .",
    "although the primary goal of this step is to restore disoccluded target region as inliers , the inliers currently misclassified as outliers due to classification errors can also be restored through the step .",
    "although a motion difference between inliers and outliers is detected from the step above , if the difference is not sufficiently large , there is a risk of wrong restoration which leads to drift or tracking failure .",
    "for example , if outliers have a large motion variance , some outliers can be classified as inliers .",
    "therefore , it is very important to measure motion difference reliably .",
    "a simple checking based on euclidean distance between two average motion vectors of inliers and outliers is not adequate .",
    "it is because pure rotation or scale change without translation gives zero mean motion and euclidean distance does not reflect motion variance .",
    "therefore , in order to estimate a statically meaningful motion difference , we measure distance of two rigid transformations instead of comparing motion vectors directly . the distance is measured based on mahalanobis distance under the assumption that the motion vectors follow gaussian distribution .",
    "mahalanobis distance between inlier motion and outlier motion is estimated as follows : @xmath51 @xmath52 @xmath53 where @xmath54 is the estimated distance between two transformations , @xmath33 is the estimated transformation from the matched inlier motions between the previous frame and current frame and @xmath34 is the estimated transformation from the matched outlier motions respectively .",
    "@xmath11 is the location of the tracking points in the previous frame and @xmath55 is the estimated common variance of the two distributions of inliers and outlier motions . in ( [ eq : common_sigma ] ) , @xmath44 ( @xmath45 ) is the variance of the residuals of the matched inliers ( outliers ) with respect to @xmath33 ( @xmath34 ) and it is computed by    @xmath56    where @xmath57 is the number of matched inliers .",
    "the condition for inlier restoration is satisfied when the estimated mahalanobis distance @xmath58 , estimated distance of the two transformations @xmath59 , and the ratio of outliers are larger than predefined thresholds respectively :    @xmath60    in case the condition @xmath61 is satisfied , we classify the matched outliers whose overall motion is more close to @xmath33 than @xmath34 and its residual from @xmath33 is less than a predefined threshold as inliers .",
    "finally , state of tracking points is updated as follows :    @xmath62    where @xmath63 @xmath64    in our implementation , the parameters are empirically set to be @xmath65 , @xmath66 , @xmath67 , and @xmath68 .",
    "figure [ fig : motion_restoration ] shows an example of inlier restoration based on motion cue .",
    "the left figure shows the state of inliers and outliers before applying restoration and the right figure shows an updated state after restoration . in this example , estimated measures were @xmath69 , @xmath70 , and 12 inliers were restored .",
    "one problem of the restoration precedure using motion difference described in subsection [ ssec : restore_motion ] is that the restoration is performed only when a significant motion difference occurs .",
    "this restoration condition can cause problems in two respects .",
    "firstly , inliers may be misclassified as outliers by various causes such as abrupt illumination change , 3d motion , and deformation of target as well as occlusion . in that case",
    "the restoration condition can not be met if there is no external occluding object or included background .    secondly ,",
    "as the restoration is delayed until the ratio of outliers exceeds some threshold by ( [ eq : condition ] ) , the rate of unrecovered inliers possibly exceeds true outliers when the size of an occluding object is relatively small as illustrated in figure [ fig : restoration_problem ] , which leads to wrong estimation of outlier motion , @xmath34 . in figure",
    "[ fig : restoration_problem ] , a moving car crosses the road and the tracking points occluded by a street lamp turn into outliers rapidly .",
    "in this case , however , disoccluded tracking points can not be recovered as the majority of outliers consists of misclassified inliers and thus they will give a motion estimate similar to inlier motion .    to overcome these difficulties , as a complementary step , we perform an additional step of inlier restoration by using an appearance reference model after the restoration step based on motion difference .",
    "the restoration procedure using a reference model is as follows .",
    "the appearance reference model is initialized by the initial target region of the image and the state of grid points of the reference model all set to be inliers .",
    "we first compute optical flow between the reference model and the estimated target region in a current frame for the grid points of the reference model .",
    "next , we check whether the grid points of the reference model succeeds to match or not and set the state of current tracking point to be inlier if the match succeeds and the state of matched grid point of the reference model is inlier",
    ".      frame to frame motion estimation based on optical flow is prone to drift in the presence of background interference , occlusion , fast illumination changes , and deformation of a target .",
    "even a minute drift at early stage can lead a tracker to totally fail in long term tracking .",
    "the appearance reference model described earlier is used not only to restore inliers but also to compensate for possible motion drift of the tracker .",
    "let @xmath71 be the matched point pairs between the reference model and the current frame in the previous inlier restoration step , where @xmath72 is the inlier points in the reference model whose state is inlier and @xmath73 is the matched point in the current frame from the estimation of optical flow . if there exists a rigid transformation and the number of matched points is larger than a predefined threshold , the motion drift is compensated by updating current target location to be the transformed location of the reference location by the estimated transformation .",
    "a subtle and well - known problem caused from the use of a reference model is how to update the model to adapt to the appearance change .",
    "fixing the reference model with the initial model does not suffer from drift or occlusion but can not adapt to the change of the target . on the other hand , too frequent update of the model may lose its basic role as a reference .",
    "our strategy is that the reference model is updated only when the mean intensity or scale of the current target estimate is different from the reference model significantly more than 10 percent and the ratio of outliers is less than a predefined threshold , @xmath74 .",
    "the actual update of the reference model is done simply by replacing it with the current target region and the state of the tracking points .",
    "the idea of compensation of motion drift by using an appearance reference model is motivated from the work by zhang iet.al .",
    ", @xcite , where a klt feature tracker is combinatorially used to detect occlusion and remedy drift of color - based particle filter tracker .",
    ".test dataset . [ cols=\"^,^\",options=\"header \" , ]     table [ table : runtime ] shows the average runtime of the proposed trackers on the test dataset .",
    "we are able to observe that even with @xmath75 tracker it runs at more than 100 frames per seconds without using any hardware acceleration , which is rarely observable in other trackers .",
    "this real time performance makes the proposed method more attractive and portable .      in this experiment",
    "we demonstrate the performance of our concurrent tracker ( @xmath75 ) by comparing it with several recent state of the art trackers including : mil tracker ( mil ) @xcite , pn tracker ( pn ) @xcite , and locally orderless tracker ( lot ) @xcite . in case of mil tracker ,",
    "scale of the detected bounding boxes are adjusted to be the same with the scale of ground truth for fair comparison as mil tracker does not adopt to scale change .",
    "all code come from the original authors .",
    "the quantitative comparisons are shown in table [ table : accuracy_comp ] and table [ table : success_comp ] . the best performance",
    "are shown in * bold*. the results show that our concurrent tracker overall shows significant improvement of tracking performance especially in terms of tracking accuracy compared with state - of - the - art algorithms",
    ". it also is worth to note that the performance improvement is most significant for the video sequences that involve partial or severe occlusions like ft_face , lot_human , lot_shop , mil_coke11 , mil_dollar , and oal_dudek , demonstrating robustness against partial occlusions of the proposed tracker . in cases of prost_board , prost_box , tld_car , tld_volkswagen sequences",
    "for which pn tracker @xcite obtains best score , the sequences contain challenging intervals where target objects disappear completely from camera view .",
    "different from pn tracker , current implementation of the proposed tracker does not have detection functionality and failed to recover from such full disappearances .",
    "in this paper we proposed a new tracking algorithm based on concurrent tracking of inliers and outliers . by tracking inliers and outliers concurrently , we are able to minimize possible misclassification errors regarding target state ( occlusion / disocclusion ) , giving more reliable tracking performance .",
    "the experimental results shows that our tracker can track targets reliably without drift in various challenging scenarios , confirming the effectiveness of the proposed tracking paradigm .",
    "one limit of our tracker is that it is hard to be recovered from the tracking failures due to moving target during full occlusion .",
    "our future work is to extend the proposed tracker to cope with such failures by combining it with other detectors ."
  ],
  "abstract_text": [
    "<S> in object tracking , outlier is one of primary factors which degrade performance of image - based tracking algorithms . in this respect , therefore , most of the existing methods simply discard detected outliers and pay little or no attention to employing them as an important source of information for motion estimation . </S>",
    "<S> we consider outliers as important as inliers for object tracking and propose a motion estimation algorithm based on concurrent tracking of inliers and outliers . </S>",
    "<S> our tracker makes use of pyramidal implementation of the lucas - kanade tracker to estimate motion flows of inliers and outliers and final target motion is estimated robustly based on both of these information . </S>",
    "<S> experimental results from challenging benchmark video sequences confirm enhanced tracking performance , showing highly stable target tracking under severe occlusion compared with state - of - the - art algorithms . </S>",
    "<S> the proposed algorithm runs at more than 100 frames per second even without using a hardware accelerator , which makes the proposed method more practical and portable . </S>"
  ]
}
{
  "article_text": [
    "the first ideas of using quantum devices for computation were expressed at the beginning of the eighties by manin @xcite , see also @xcite , and feynman @xcite . they observed that simulating quantum mechanics on a classical computer is extremly hard , probably infeasible , since it leads to differential equations whose dimensions are exponential in the number of system components . to overcome this",
    ", they suggested the idea to simulate quantum mechanics using quantum devices itself .    in 1985 ,",
    "deutsch @xcite developed the rigorous theoretical basis of quantum computation  the model of a quantum turing machine , which became the so far most serious and still standing challenge to the turing - church thesis ( the latter stating that , roughly , every reasonable physical computing device can be simulated with only polynomial increase of resources on a classical turing machine ) .    a breakthrough for quantum computing happened in 1994 , when shor @xcite showed that efficient factorization of integers would be possible on a quantum computer , which in turn , would mean the possibility of breaking the foremost public key codes like the rsa cryptosystem .",
    "another fundamental contribution was grover s @xcite discovery of an efficient quantum search algorithm in 1996 ( we give some further comments on both shor s and grover s algorithms later on ) .",
    "since then we witness an explosion of efforts , broad research on quantum algorithms for all kinds of ( mostly discrete ) problems , on quantum cryptography , and quantum information theory .",
    "physicists are intensively working on how to construct quantum computers , that means , finding quantum mechanical systems that can be manipulated to fulfill the abstractly proposed requirements . systems with a few qubits are already successfully realized in laboratories .",
    "important forerunners for the development of quantum algorithms for monte carlo related , numerical problems were the work of boyer , brassard , hyer , mosca , and tapp @xcite , @xcite on quantum counting and the results of beals , buhrman , cleve , mosca and de wolf @xcite and nayak and wu @xcite on lower bounds .      in the classical physical world , in classical computation , a bit is represented by two states of a physical system ( e.g. charge or no charge ) @xmath2 , @xmath3 . in the ( sub)atomic world , which is governed by the laws of quantum mechanics , we have , along with the classical states @xmath2 , @xmath3 ( such states could be , e.g. , spin up or spin down of an electron ) , also their superpositions : @xmath4 that is , the linear combination of the classical states @xmath2 and @xmath3 .",
    "the crucial problem however is that if the system is in state @xmath5 , we can not access , measure @xmath6 and @xmath7 directly . instead , a measurement destroys the superposition , causing the system to return to state @xmath2 with probability @xmath8 and to state @xmath3 with probability @xmath9 .    the mathematical framework for a quantum bit , that is , a quantum system with two classical basis states , is the two dimensional complex hilbert space @xmath10 .",
    "let @xmath11 be its unit vector basis .",
    "following quantum mechanical notation , we write @xmath2 instead of @xmath12 and @xmath3 instead of @xmath13 . the unit sphere of @xmath14 , i.e.",
    ", the set of all elements of norm 1 , is the set of states of the qubit .",
    "a system of @xmath15 interacting qubits ( @xmath15-qubit system ) is represented by the tensor product @xmath16 which is the @xmath17-dimensional complex hilbert space .",
    "it has the canonical basis @xmath18 we make further notational conventions : @xmath19 where @xmath20 .",
    "the vectors @xmath21 are called classical states , while a general state has the form @xmath22 as in the case of a single qubit , measuring an @xmath15-qubit system in a superposition state @xmath23 results in one of the classical states @xmath24 with probability @xmath25 .",
    "so a state is a linear combination of all possible classical states , the coefficients giving the probability that after measurement the system moves to this state .",
    "+   + one more notational convention : if @xmath26 contains a number inside , or a symbol which is used to denote such a number , we mean the canonical basis vector corresponding to this number , if @xmath26 contains just a general symbol , like @xmath27 , we mean any vector of @xmath28 ( this should be clear from the context ) .      how to use such systems for computing ? to make this clear , let us first consider an example of a classical computation ",
    "the addition of two @xmath15-bit numbers , which we write as follows : @xmath29 this computation is realized using circuits of classical gates ( and , or , not , xor ) in the usual way : add the last bits , then the second last plus the carry bit etc .",
    "let us emphasize here : _ classically , we add two numbers at a time . _ +   + how to operate @xmath15-qubit quantum systems ?",
    "which operations are allowed ?",
    "schrdinger s equation implies : all evolutions of a quantum system must be represented by unitary transforms of @xmath28 .",
    "here is the starting point : +   + _ quantum computing assumes that we are able to perform a number of elementary unitary transforms ( quantum gates ) on the system . _ +   + what are these operations ?",
    "let us consider one standard set @xmath30 of them .",
    "first we describe the one - qubit gates ",
    "these are gates that manipulate only one component of the tensor product @xmath31 .",
    "the walsh - hadamard gate @xmath32 is defined by @xmath33 ( the values on the basis vectors define the unitary transform uniquely ) .",
    "its action on the @xmath34-th component of @xmath28 is then given by the unitary operator @xmath35 where @xmath36 stands for the identity operator on @xmath14 .",
    "for a real parameter @xmath37 the phase shift @xmath38 is defined as @xmath39 we define @xmath40 in the respective way .",
    "next we consider two - qubit gates  they manipulate any chosen two components of @xmath41 .",
    "the quantum xor gate ( also called controlled - not gate ) @xmath42 is given by @xmath43 that is , if the first bit is zero , nothing happens to the second , and if the first is one , the second is negated ( controlled not ) .",
    "we can look at this gate also as follows : the xor of the two bits replaces the second bit .",
    "denote by @xmath44 the unitary operator given by applying @xmath45 to the @xmath46-th and @xmath47-th component , that is , @xmath48 where @xmath49 now we define @xmath50 the following two results can be found , e.g. , in @xcite .",
    "the set @xmath30 is a universal system of gates  each unitary transform of @xmath28 can be represented as a finite composition of elements of @xmath30 ( up to a complex scalar factor ) .",
    "the set @xmath30 is still an infinite set .",
    "now consider the following finite subset : @xmath51    the set @xmath52 forms an approximately universal system of gates  each unitary transform of @xmath28 can be approximated in the operator norm to each precision by a finite composition of elements of @xmath52 ( again up to a complex factor ) .",
    "so once we can implement these gates we can do all unitary transforms ( of course , the efficiency of such an approximation is still an issue , we will come back to that later on ) .",
    "physicists are working on implementations of these gates in various quantum systems such as photons , trapped ions , magnetic resonance systems etc .",
    "let me emphasize some crucial points : + 1 .",
    "these gates can transform classical states into superpositions .",
    "for example , the hadamard gate applied to the first and then to the second qubit : @xmath53 2 . they also act on superpositions .",
    "for instance : + 2.1 the quantum xor : @xmath54 2.2 quantum addition of binary numbers : @xmath55 _ that is , in the quantum world , we add all possible binary @xmath15-digit numbers in parallel _ ( assuming that all @xmath56 ) .",
    "so , is a quantum computer an ideal parallel computer , with exponentially many processors ?",
    "not exactly , it is not that easy !",
    "we can not access all components of the superposition .",
    "we have to measure , thus destroying all results but one !",
    "we would get @xmath57 with probability @xmath58 . in this sense",
    "a quantum computer is like a black box  we can manipulate it , but we can not  look into it  .",
    "anyway , we have reached the quantum model of computation ( the general way a quantum algorithm should look like ) : +   + * quantum model of computation : * @xmath59 the cost of the algorithm is defined to be the number of gates @xmath60 .",
    "we may allow for a classical computation after each measurement to determine the next starting state , and , after the last measurement , the final result ( see @xcite for a formal approach ) . then , speaking about the cost of the algorithm , we also have to take into account the needed classical gates .",
    "a quantum algorithm is said to solve a given problem if it produces a solution with probability @xmath61 ( any fixed constant @xmath62 would do , since the success probability can always be increased by suitable repetitions ) .",
    "what can we do with a quantum computer that we can not do on a classical computer ?",
    "a simple answer related to monte carlo algorithms can be given as follows : on classical computers , pseudo - random numbers ( that is , in fact , fully deterministic numbers ) are used instead of random numbers . a quantum computer would provide us with true randomness .",
    "it is simple to let a quantum computer act as a random number generator : +   + @xmath63 & \\downarrow&\\mbox{(walsh - hadamard transform)}\\\\[.2 cm ] & \\displaystyle 2^{-m/2}\\sum_{i=0}^{2^{m}-1}\\lg i\\rs&\\\\[.2 cm ] & \\downarrow&\\mbox{(measurement)}\\\\[.2 cm ] & \\lg i\\rs\\,\\,\\mbox{with probability}\\,\\,\\ , 2^{-m}&\\end{aligned}\\ ] ] so , on a quantum computer , we can implement monte carlo with true ( physically based ) randomness .",
    "let us go one step further : what can be done on a quantum computer that a _ randomized _ classical computer ( that is , a classical computer with access to true randomness ) can not do ?",
    "we already mentioned shor s result @xcite : an algorithm which , for a composite integer @xmath64 , finds a nontrivial factor with cost @xmath65 .",
    "no polynomial in @xmath66 classical ( deterministic or randomized ) algorithm is known .",
    "recall that there are polynomial randomized prime number tests ( see solovay and strassen @xcite , and rabin @xcite ) , but they do nt give the factors when they find compositeness .",
    "although not very likely , it is not excluded that there are polynomial classical factoring algorithms ( maybe even with cost @xmath65 ) .",
    "so formally , the above result does not strictly prove the superiority of quantum computing .",
    "matters are different with grover s result @xcite .",
    "the problem is the following : given @xmath67 with the property that there is a unique @xmath68 with @xmath69 , find this @xmath68 .",
    "it is not difficult to see that classical ( deterministic or randomized ) algorithms need cost @xmath70 .",
    "grover @xcite produced a quantum algorithm that solves the problem with cost @xmath71 .",
    "here we have to extend the above model of computation by what is called a quantum query ( quantum subroutine , quantum oracle ) , which is given by the unitary map @xmath72 defined as @xmath73 where @xmath74 is addition modulo 2 , and we assumed @xmath75 .",
    "note that if the last qubit is set to zero , @xmath76 is like a subroutine which writes the function value to the last entry .",
    "this is what we essentially assume in the design of most numerical and monte carlo algorithms : the function we want to handle , e.g. , integrate , is given as a subroutine .",
    "( in the quantum setting , addition modulo 2 guarantees that @xmath76 is a bijection on the classical states and thus , extends to a unitary operator . ) it can be shown that such a quantum query can always be implemented efficiently ( with only a constant factor increase of resources ) , once we have a classical implementation for @xmath77 .",
    "a quantum computation is then still given by the scheme in section 1.3 , but with the difference that @xmath78 .",
    "it is important to mention that the rest of the @xmath79 should not depend on @xmath77 , that is , the algorithm gets its information about @xmath77 only through query calls .",
    "the cost is defined to be the number of query calls , multiplied by the number of qubits , plus the number of gates .",
    "now we consider numerical problems .",
    "let us formulate the general integration problem : given a set @xmath80 , a measure @xmath81 on it , and a @xmath81-integrable function @xmath82 , compute ( approximate ) @xmath83 as its simplest instant , this includes computing the mean ( and hence the sum ) of a finite sequence : @xmath84 @xmath85    [ theo:1](brassard , hyer , mosca , and tapp @xcite ) for all @xmath86 , @xmath87 , there is a quantum algorithm which computes the mean @xmath88 for all sequences @xmath89 with @xmath90 with cost @xmath91 and error @xmath92 .",
    "we use the @xmath93 notation to indicate that we suppress possible logarithmic factors . the result",
    "is easily extended to real valued @xmath94 $ ] .",
    "we have to specify how a quantum algorithm can access such values of @xmath77 . without loss of generality",
    "we suppose that @xmath64 is of the form @xmath95 .",
    "we assume that we have a quantum query ( subroutine ) providing essentially the first @xmath96 digits of @xmath89 for some suitable @xmath96 .",
    "more precisely , we can use the unitary mapping @xmath76 on @xmath97 defined as @xmath98_{m_2}\\rs \\quad(0\\le i<2^{m_1},\\,0\\le y<2^{m_2}).\\ ] ] here @xmath74 is addition modulo @xmath99 and @xmath100_{m_2}$ ] is the @xmath96-bit integer @xmath101 if @xmath102 and @xmath103 if @xmath104 .",
    "( if we have to deal with functions taking values in other intervals , say @xmath105 $ ] , we use a similar encoding as a binary integer , @xmath100_{m_2}=\\lfloor 2^{m_2}(f(i)-a)/(b - a)\\rfloor$ ] if @xmath106 and @xmath100_{m_2}=2^{m_2}-1 $ ] if @xmath107 . )",
    "we say that a quantum algorithm computes a number with error @xmath108 , if with probability @xmath61 the result of the algorithm is within @xmath108 of that number . for more details on queries for numerical problems and the error definition",
    "we refer to @xcite .",
    "theorem [ theo:1 ] should be viewed under the aspect of huge @xmath64 and moderate @xmath60 . for comparison ,",
    "let us mention that for classical deterministic algorithms the error at cost @xmath60 for @xmath109 is @xmath110 ( even @xmath111 for any fixed @xmath112 suffices ) . in the classical randomized setting we obtain @xmath113 ( see @xcite for details on the latter two statements ) .    how to treat integration ?",
    "define the hlder classes @xmath114 for @xmath115 , @xmath116 , and @xmath117 as @xmath118^d)\\ , : \\ :   \\vert f \\vert_\\infty",
    "\\le 1,\\\\     & & |\\partial^{\\alpha } f ( x ) - \\partial^{\\alpha } f ( y ) | \\le |x - y|^{\\varrho } ,      |{\\alpha } |=r   \\}.\\end{aligned}\\ ] ] here @xmath119^d)$ ] stands for the set of @xmath120 times continuously differentiable functions on @xmath121^d$ ] , @xmath122 denotes the supremum norm , @xmath123 represents a multiindex , and @xmath124 is the respective partial derivative .",
    "because of its relation to monte carlo methodology it is interesting to describe the idea behind the algorithm : we use the technique of separation of the main part ( in other words , of introducing a control variate ) to reduce integration to summation in an optimal way .",
    "let @xmath127 be some interpolation operator with @xmath60 nodes @xmath128^d$ ] suitable for @xmath114 in the sense that it gives the optimal approximation order @xmath129 represent @xmath130 clearly , @xmath131 is a quadrature , which can be computed exactly , classically , with @xmath132 cost .",
    "the second part is approximated suitably ( see @xcite for details ) in the form @xmath133 where @xmath64 may be much larger than @xmath60 .",
    "finally we use quantum computation to approximate the mean on the right hand side .",
    "it can be shown that the order of the error is the product of the following contributions : @xmath134 note that if the last term of ( [ a1 ] ) were approximated by standard monte carlo , we would get the exponent @xmath135 .",
    "compare this result with the classical deterministic setting , where the best we can achieve is an error @xmath136 at cost @xmath132 and with the classical randomized setting with optimal error @xmath137 .",
    "look at the exponents when @xmath138 is small !",
    "it follows that the speedup over the deterministic setting can be polynomial with arbitrarily large power .",
    "note that in @xcite , section 6 , a class of functions of low smoothness is considered and it is proved that for this class the gain of quantum over classical deterministic computation is even exponential .",
    "a similar situation is observed in @xcite for path integration .",
    "a crucial assumption for the summation algorithm in theorem [ theo:1 ] , and thus also for theorem [ theo:2 ] , is the uniform boundedness of the set of sequences ( with bounds independent of @xmath60 and @xmath64 ) .",
    "this raised the problem whether the quantum gain was tied to that assumption .",
    "in particular , what happens in the case of square summability , which is the most important case for monte carlo , that is , @xmath139 or @xmath140 ( see the definitions below ) ? will quantum computation retain its superiority or will monte carlo catch up ? even more generally , what about @xmath141 or @xmath142 for @xmath143 ?",
    "let us first look at the discrete problem .",
    "denote @xmath144 the summation problem for this class was settled in @xcite ( case ( i ) and ( ii ) ) and in @xcite ( case ( iii ) ) .",
    "the latter answered a question posed in @xcite .",
    "again , a comparison to the two classical settings might be illustrative ( see @xcite for details ) : in the classical deterministic case , for @xmath109 , nothing better than @xmath110 can be obtained , in the classical randomized case the optimal rates are @xmath148 if @xmath149 , and @xmath150 if @xmath151 .",
    "now we consider integration in the sobolev classes @xmath152 , which are defined by @xmath153^d ) \\ ,   : \\ ,    \\vert \\partial^{\\alpha } f \\vert_{l_p }   \\le 1 ,   \\",
    "|{\\alpha } | \\le r    \\},\\ ] ] where @xmath154 , @xmath155 , and @xmath124 is the weak partial derivative .",
    "the following result is proved in @xcite .",
    "it answers another question from @xcite .",
    "the approach consists of a new discretization technique , by which one can derive ( optimal ) integration algorithms for @xmath152 from ( optimal ) summation algorithms for @xmath156 .",
    "let @xmath145 , @xmath157 , @xmath158 ( sobolev embedding condition ) .",
    "for all @xmath60 , there is a quantum algorithm which computes the integral of functions @xmath142 with cost @xmath91 and error @xmath159 .    in the classical",
    "deterministic setting the optimal rate is @xmath160 , while in the classical randomized setting we have @xmath161 if @xmath149 , and @xmath162 if @xmath151 ( see @xcite , @xcite , and the references therein ) . the quantum rate for @xmath151 comes as a surprise . after previous results one",
    "was tempted to conjecture that the quantum setting could reduce the exponent of the classical randomized setting by at most 1/2 .",
    "now we see ( @xmath163 ) that there can even be a reduction by 1 .    are these results about quantum algorithms optimal ?",
    "in other words , is it possible to improve the rates by other , better quantum algorithms ? to verify optimality , we have to establish lower bounds valid for all possible quantum algorithms .",
    "it turns out that all the results about summation and integration presented here are optimal ( up to logarithmic factors , at least ) .",
    "the following was the first matching lower bound for summation .",
    "it shows that the rate in theorem [ theo:1 ] is optimal .",
    "[ theo:6](nayak and wu @xcite ) there are constants @xmath164 such that for all @xmath86 with @xmath165 the following holds : each quantum algorithm which computes the mean @xmath88 for all sequences @xmath89 with @xmath166 using at most @xmath60 quantum queries has error not smaller than @xmath167 .",
    "[ theo:8 ] the rates established in theorem [ theo:2 ] ( integration in @xmath114 ) , theorem [ theo:3 ] ( mean of sequences in @xmath156 ) , and theorem [ theo:5 ] ( integration in @xmath152 ) are optimal ( up to logarithmic factors ) .    in the following table",
    "we summarize the results .",
    "the respective entries give the optimal rates at cost @xmath60 , constants and logarithmic factors are suppressed .",
    "the constant @xmath112 in the first column does not depend on @xmath60 and @xmath64 .",
    "@xmath168                      l. grover ( 1996 ) : a fast quantum mechanical algorithm for database search .",
    "28 annual acm symp . on the theory of computing , 212219 , acm press new york .",
    "see also http://arxiv.org/abs/quant-ph/9605043 .",
    "s.  heinrich and e.  novak ( 2001a ) : optimal summation and integration by deterministic , randomized , and quantum algorithms . in : k .-",
    "fang , f.  j. hickernell , and h.  niederreiter , editors , monte carlo and quasi - monte carlo methods 2000 , springer - verlag , berlin ( to appear ) , see also http://arxiv.org/abs/quant-ph/0105114",
    ".                      p. w. shor ( 1994 ) : algorithms for quantum computation : discrete logarithms and factoring .",
    "proceedings of the 35th annual symposium on foundations of computer science , ieee computer society press , los alamitos , ca , pp .",
    "see also http://arxiv.org/abs/quant-ph/9508027 ."
  ],
  "abstract_text": [
    "<S> quantum computing was so far mainly concerned with discrete problems . recently </S>",
    "<S> , e. novak and the author studied quantum algorithms for high dimensional integration and dealt with the question , which advantages quantum computing can bring over classical deterministic or randomized methods for this type of problem .    in this paper </S>",
    "<S> we give a short introduction to the basic ideas of quantum computing and survey recent results on high dimensional integration . </S>",
    "<S> we discuss connections to the monte carlo methology and compare the optimal error rates of quantum algorithms to those of classical deterministic and randomized algorithms .    * introduction *    one of the most challenging questions of today , in the overlap of computer science , mathematics , and physics , is the exploration of potential capabilities of quantum computers . </S>",
    "<S> milestones were the algorithm of shor @xcite , who showed that quantum computers could factor large integers efficiently ( which is widely believed to be infeasible on classical computers ) and the quantum search algorithm of grover @xcite , which provides a quadratic speedup over deterministic and randomized classical algorithms of searching a database .    </S>",
    "<S> so far research was mainly concentrated on discrete problems like the above and many others one encounters in computer science . </S>",
    "<S> much less is known about computational problems of analysis , including such typical field of application of monte carlo methods as high dimensional integration . </S>",
    "<S> we seek to understand how well these problems can be solved in the quantum model of computation ( that is , on a  hypothetical  quantum computer ) and how the outcome compares to the efficiency of deterministic or monte carlo algorithms on a classical ( i.  e.  non - quantum ) computer .    </S>",
    "<S> abrams and williams @xcite suggested first ideas about quantum integration algorithms . </S>",
    "<S> a systematic study was begun by novak @xcite , who considered integration of functions from hlder spaces . </S>",
    "<S> this line of research was continued by the author @xcite , where quantum algorithms for the integration of @xmath0-functions and , as a key prerequisite , for the computation of the mean of @xmath1-summable sequences were constructed . in @xcite a rigorous model of quantum computation for numerical problems was developed , as well . </S>",
    "<S> the case of integration of functions from sobolev spaces is considered in @xcite , and more on the computation of the mean is presented in @xcite . </S>",
    "<S> these papers also established matching lower bounds . </S>",
    "<S> a short survey of first results can be found in @xcite . </S>",
    "<S> path integration is studied by traub and woniakowski in @xcite .    combining these results with previous ones of information - based complexity theory about the best possible ways of solving the respective problems deterministically or by monte carlo on classical computers , we are now in a position to fairly well answer the question where quantum computation can provide a speedup in high dimensional integration and where not . there are cases where quantum algorithms yield an exponential speedup over deterministic algorithms and a quadratic speedup over randomized ones ( on classical computers ) .    </S>",
    "<S> moreover , there is a close connection of quantum algorithms with monte carlo : while computations are carried out on superpositions of classical states of qubit systems , and thus in high parallelism , the result can only be accessed through a measurement , which destroys the superposition and outputs any one of the superposed states  with a certain probability . </S>",
    "<S> thus , these algorithms are probabilistic , monte carlo , while , on the other hand , completely different laws govern the computation . </S>",
    "<S> nevertheless various monte carlo techniques can be put into use to construct quantum algorithms ( which then , combined with special quantum techniques , outperform their classical counterparts ) .    </S>",
    "<S> we start with a brief introduction to the ideas of quantum computing . </S>",
    "<S> then we consider the question , what quantum computers could do in numerical ( monte carlo related ) problems and survey recent results on summation and high dimensional integration . </S>",
    "<S> we discuss how to use monte carlo methodology for the development of quantum algorithms . </S>",
    "<S> complexity issues and comparisons of the potential of deterministic , randomized and quantum algorithms are considered , as well .    for further reading on quantum computation </S>",
    "<S> we recommend the surveys by aharonov @xcite , ekert , hayden , and inamori @xcite , shor @xcite , and the monographs by pittenger @xcite , gruska @xcite , and nielsen and chuang @xcite . for notions and results in information - based complexity theory </S>",
    "<S> see the monographs by traub , wasilkowski , and woniakowski @xcite and novak @xcite , and the survey heinrich @xcite of the randomized setting . </S>"
  ]
}
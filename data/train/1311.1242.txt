{
  "article_text": [
    "let @xmath0 be the braid group on @xmath1 strands as introduced by artin  @xcite .",
    "a group presentation for @xmath0 is given by the ( standard ) generators @xmath2 satisfying the braid relations @xmath3 a _ positive braid _ on @xmath1 strands is an element @xmath4 in @xmath0 that can be written as positive braid word @xmath5 with @xmath6 , where @xmath7 , which is independent of the choice of a positive braid word for @xmath4 , is called the _ length _ of @xmath4 .",
    "links obtained as the ( standard ) closure of positive braids contain much studied classes of links ; for example , torus links , algebraic links and lorenz links .",
    "the _ signature _ is a classical link invariant introduced by trotter  @xcite .",
    "the _ first betti number _",
    "@xmath8 of a link @xmath9 is defined to be the smallest first betti number of seifert surfaces for @xmath9 .",
    "the _ ( three ) genus _ of a knot is half its first betti number . by the first betti number @xmath10 and the signature @xmath11 of a braid @xmath4 , we mean the first betti number and the signature , respectively , of the link obtained as the closure of @xmath4 .",
    "a braid is said to be _ non - trivial _ if its closure is not an unlink ; that is if its first betti number is non - zero . in this paper",
    "we relate the first betti number and the signature for positive braids .",
    "all that follows is motivated by the following conjecture .",
    "[ conj : c>0]for all non - trivial positive braids @xmath4 , the signature is linearly bounded as follows @xmath12    this would be optimal since there are families of positive braids on which the ratio @xmath13 gets arbitrarily close to @xmath14 .",
    "for example , positive braids @xmath15 that have the @xmath16 torus knots as closures .",
    "we provide a linear lower bound as in the conjecture .",
    "however , the linear factor is smaller than @xmath17    [ thm : k>0 ] for all positive braids @xmath4 , the signature is linearly bounded from below as follows @xmath18    we put theorem  [ thm : k>0 ] in context by recapitulating previously established facts about the first betti number , the signature , and the slice genus of positive braids .",
    "the first betti number of positive braids is fully understood since bennequin s inequality provides the following formula  @xcite .",
    "@xmath19 where @xmath20 is the length of @xmath4 , @xmath1 is the number of strands of @xmath4 , and @xmath21 equals @xmath22 plus the number of generators @xmath23 that are not used in a positive braid word for @xmath4 . for the signature one has that @xmath24 holds for all links @xmath9",
    "this is immediate from the definition of the signature ; see section  [ sec : sig ] .",
    "rudolph showed that the signature is strictly negative for non - trivial positive braids  @xcite .",
    "stoimenow provided a monotonically growing function @xmath25 of order @xmath26 such that @xmath27  @xcite . by a result of murasugi",
    ", @xmath28 is a lower bound for the smooth slice genus of knots  @xcite .",
    "kauffman and taylor generalized murasugi s result to the topological slice genus  @xcite , which is notoriously difficult to determine even for torus knots .",
    "therefore , rudolph and stoimenow s results provide lower bounds for the topological slice genus of knots that are closures of positive braids . similarly , theorem  [ thm : k>0 ] yields the following corollary .",
    "the topological slice genus of positive braid knots is at least one percent of their genus . in other words , for a knot obtained as the closure of a positive @xmath1-braid @xmath4 , the topological slice genus is at least @xmath29 .    in the stronger ,",
    "smooth setting much more is known .",
    "indeed , on knots that are closures of positive braids the smooth slice genus even agrees with the genus .",
    "this follows from rudolph s slice - bennequin inequality  @xcite , which is based on the local thom conjecture as proved by kronheimer and mrowka  @xcite .",
    "we prove theorem  [ thm : k>0 ] via the study of the asymptotic signature .",
    "gambaudo and ghys observed that on the braid group on @xmath1 strands the signature is a quasi - morphism of defect @xmath30 : for any two @xmath1-braids @xmath31 and @xmath4 , we have @xmath32 see ( * ? ? ? * proposition 5.1 ) .",
    "therefore , the homogenization @xmath33 called the _",
    "asymptotic signature _ of @xmath4 , is well - defined . noting that @xmath34 we see that the above conjecture implies the following homogenized analog .",
    "[ conjhomo : c>0]for all positive braids @xmath4 , the homogenization of the signature is linearly bounded as follows @xmath35    we provide such a linear bound , but our factor is @xmath36 rather than @xmath14 .",
    "[ thm:1/16 ] for every positive braid @xmath4 , we have @xmath37    next we recall known linear bounds for the signature of non - trivial positive braids with fixed number of strands @xmath1 , which of course yield analogs for the asymptotic signature . if @xmath38 , then the closure of @xmath4 is the torus link @xmath39 and @xmath40 . for @xmath41 , stoimenow ( and by different methods yoshiaki uchida )",
    "has shown @xmath42 @xcite .",
    "the case @xmath43 is our main concern in this text .    for every positive 4-braid @xmath4",
    ", we have @xmath44    our interest in the main proposition stems from the fact that it implies theorem  [ thm : k>0 ] and theorem  [ thm:1/16 ] .",
    "indeed , theorem  [ thm:1/16 ] follows immediately from the main proposition and the following observation , which we prove at the end of section  [ sec : sig ] .",
    "let @xmath45 be a positive constant such that @xmath46 ( respectively @xmath47 ) holds for all non - trivial positive @xmath1-braids .",
    "then @xmath48 holds for all non - trivial positive braids @xmath4 .",
    "the reduction lemma remains true when the strict inequalities are replaced by inequalities .",
    "the upshot of the main proposition is that it provides a bound with a factor that is strictly larger than @xmath49 . if one is only interested in the fact that some linear bound exists for positive @xmath50-braids , stoimenow provided such a bound with the factor @xmath51  ( * ? ? ?",
    "* theorem  4.2 ) .",
    "in fact , we even establish @xmath52 without relying on the main proposition ; see proposition  [ prop : thirdsigbound ] .",
    "however , these results do not provide linear bounds for general positive braids when combined with the reduction lemma .",
    "for example , applying the reduction lemma to just recovers rudolph s result that for all non - trivial positive braid @xmath4 , one has @xmath53 .",
    "in section  [ sec : sigtosig ] we use the main proposition to prove theorem  [ thm : k>0 ]",
    ". sections  [ sec : surfacesandfencediagrams ] and  [ sec : sig ] contain generalities on positive braids and their signature , which are applied to @xmath50-braids in section  [ sec:4braids ] to prove and the main proposition .",
    "all considerations will be restricted to braids with @xmath54 because the signature and the first betti number are additive on disjoint unions of positive braids .",
    "we conclude the introduction with some evidence to support our conjectured @xmath55-bound . for positive @xmath56-braids , the conjecture holds . and",
    ", for positive @xmath50-braids up to @xmath57 crossings , it is also checked ; compare stoimenow s table in  @xcite .",
    "all non - trivial torus links satisfy @xmath58 , which can be checked using the gordon - litherland - murasugi reduction formulas  ( * ? ? ?",
    "* theorem  5.2 ) . more generally , the conjecture holds for all algebraic links .",
    "this can be checked using the formula provided by shinohara ; see  @xcite . using shinohara s formula one can also check that the conjecture holds for a lot of other families of positive braid knots that are cables of positive braid knots",
    ". an improved version of the first inequality of  ( * ? ? ?",
    "* theorem  3 ) shows that the conjecture holds for positive braids that are given by a positive braid word of the form @xmath59 with @xmath60 .",
    "i thank sebastian baader for all the fruitful discussions and for providing figure  [ fig : fencediag ] .",
    "thanks also to livio liechti for valuable suggestions .",
    "finally , i thank the referee for many suggestions and improvements to the text .",
    "this project is supported by the swiss national science foundation .",
    "in this section we provide consequences of the main proposition , including a proof of theorem  [ thm : k>0 ] .",
    "in addition to the main proposition , this uses the reduction lemma and proposition  [ prop : thirdsigbound ] , which are proven in section  [ sec : sig ] and section  [ sec:4braids ] .    having a linear bound @xmath61 for all positive braids on @xmath1 or fewer strands yields a bound @xmath62 for all positive braids on @xmath1 or fewer strands .",
    "the converse is true up to an additive constant :    [ lemma : asymsig > c->sig > cl-(b-1 ) ] let @xmath45 be a positive constant such that @xmath63 for all positive @xmath1-braids @xmath4 .",
    "then , for every positive @xmath1-braid @xmath4 , we have @xmath64    lemma  [ lemma : asymsig > c->sig > cl-(b-1 ) ] is an immediate consequence of the fact that the signature and its homogenization stay close . that is , for every @xmath4 in @xmath0 , we have @xmath65 which follows from @xmath66 being a quasi - morphism of defect @xmath30 .    for positive @xmath50-braids with non - split closure ( i.e.  @xmath54 ) , applying lemma  [ lemma : asymsig > c->sig > cl-(b-1 ) ] to the main proposition and using yields @xmath67 .",
    "therefore , we get the following affine signature bound for positive @xmath50-braids .",
    "[ cor:5/12 ] if @xmath4 is a positive @xmath50-braid , then @xmath68 .",
    "corollary  [ cor:5/12 ] can be used to prove the following proposition .",
    "[ prop : siggeqcb ] if @xmath4 is a positive @xmath50-braid , then @xmath69    in turn , proposition  [ prop : siggeqcb ] implies theorem  [ thm : k>0 ] by the reduction lemma since we have @xmath70    set @xmath71 .",
    "corollary  [ cor:5/12 ] can be written as @xmath72 for all positive @xmath50-braids @xmath4 .",
    "the constant @xmath45 is chosen such that yields @xmath73 whenever @xmath74 .",
    "on the other hand , we have @xmath75 for all non - trivial positive @xmath50-braids ; see proposition  [ prop : thirdsigbound ] , which can be written as @xmath76 .",
    "in particular , @xmath77 for all positive @xmath50-braids with @xmath78 .",
    "if one were able to strengthen corollary  [ cor:5/12 ] to a linear bound for the signature with factor @xmath79 or even @xmath14 , then theorem  [ thm : k>0 ] would follow immediately from the reduction lemma with factor @xmath36 or @xmath80 , respectively , rather than @xmath81 .",
    "applying lemma  [ lemma : asymsig > c->sig > cl-(b-1 ) ] to theorem  [ thm:1/16 ] yields the following affine linear bound .",
    "[ cor:1/16 ] for every positive braid @xmath4 on at most @xmath1 strands , we have @xmath82    corollary  [ cor:1/16 ] can also be proved by applying a slight modification of the proof of the reduction lemma to corollary  [ cor:5/12 ] . with this",
    ", the constant @xmath83 is improved to be @xmath84 .",
    "corollary  [ cor:1/16 ] shows that the topological slice genus of positive braid knots grows asymptotically at least as fast as @xmath36 of the genus .",
    "in this section we recall how to switch between three ways of viewing positive braids ; namely , by their braid diagrams , by their associated minimal seifert surface , and by their fence diagrams . in this article ,",
    "a _ seifert surface _ for a link @xmath9 in @xmath85 is a possibly non - connected , oriented , embedded surface with oriented boundary @xmath9 .",
    "seifert surfaces that minimize the first betti number are called minimal seifert surfaces .",
    "when drawing braid diagrams for a braid @xmath86 , we start with the leftmost generator , then draw the second generator on top , and so one .",
    "for example , the positive 3-braid @xmath87 is represented by @xmath88[d(1.4)]!{\\vcrossneg } [ ul]!{\\xcapv[1]@(0 ) } [ ld ] [ ur]!{\\vcrossneg } [ urr]!{\\xcapv[1]@(0 ) } [ ld ] } \\hspace{-0.5pc}$ ] , where the generators @xmath89 and @xmath90 are represented by @xmath91[d(1.5)l]!{\\vcrossneg } [ urr]!{\\xcapv[1]@(0 ) } [ ld ] } \\hspace{-0.5pc}$ ] and @xmath91[d(1.5)]!{\\vcrossneg } [ ul]!{\\xcapv[1]@(0 ) } [ ld ] } ~$ ] , respectively .",
    "we orient all strands of braids in the same direction , say upwards , and closures of braids are oriented accordingly .",
    "closures of positive braids have a unique minimal seifert surface . indeed , non - split ( i.e.  @xmath54 ) positive braids links are fibered  @xcite and , therefore , the fiber surface is the unique minimal seifert surface .",
    "if a positive braid link has @xmath92 , then it also has a unique minimal seifert surface , which is given as the disjoint union of minimal seifert surfaces of the @xmath21 pieces .",
    "we note that for a positive braid @xmath4 , @xmath21 is equal to the number of components of the closure of @xmath4 that can be separated by spheres .",
    "this follows from the fact that the closure of a positive braid word in which all generators appear are fibered and , therefore , can not be separated by a sphere .    since in a braid diagram associated with a positive braid word",
    "all crossings are positive , replacing every crossing with a horizontal line still allows one to describe positive braids .",
    "this yields _ fence diagrams _ of positive braids as depicted in figure  [ fig : fencediag ] ; compare rudolph  @xcite .",
    "a nice feature of fence diagrams is that the fence diagram of a positive braid @xmath4 , seen as a graph in @xmath85 , is a deformation retract of the minimal seifert surface of the closure of @xmath4 .    .",
    "]    in particular , the first betti number of a positive braid is equal to the first betti number of the corresponding fence diagram . we feel that all the above becomes very clear by considering an example .",
    "figure  [ fig : fencediag ] provides the braid diagram , the fence diagram , and the minimal seifert surface of the closure , for one positive 4-braid word . in what follows",
    "we depict positive braids using fence diagrams .    as there are several positive braid words for most positive braids , there are also several fence diagrams .",
    "two fence diagrams for the same positive braid are related by moves corresponding to the braid relations .",
    "the relation @xmath93 for @xmath94 is incorporated by looking at fence diagrams up to planar isotopy , e.g.@xmath95!{\\xcapv[1.5]@(0 ) } [ lu]!{\\xcapv[1.5]@(0 ) } [ lu]!{\\xcapv[1.5]@(0 ) } [ lu]!{\\xcapv[1.5]@(0 ) } [ u(0.5)rr ] ! { \\xcaph[1]@(0 ) } [ d(0.5)lll ] ! { \\xcaph[1]@(0 ) } } \\hspace{-0.75pc}=~\\xygraph { ! { 0;/r0.7pc/ : } [ u(0.75)]!{\\xcapv[1.5]@(0 ) } [ lu]!{\\xcapv[1.5]@(0 ) } [ lu]!{\\xcapv[1.5]@(0 ) } [ lu]!{\\xcapv[1.5]@(0 ) } [ u(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5)r ] ! { \\xcaph[1]@(0 ) } } \\hspace{-0.75pc}=~\\xygraph { ! { 0;/r0.7pc/ : } [ u(0.5)]!{\\xcapv[1]@(0 ) } [ lu]!{\\xcapv[1]@(0 ) } [ lu]!{\\xcapv[1]@(0 ) } [ lu]!{\\xcapv[1]@(0 ) } [ u(0.5)]!{\\xcaph[1]@(0 ) } [ r ] ! { \\xcaph[1]@(0 ) } } \\hspace{-0.25pc}$ ] .",
    "the braid relation @xmath96 for @xmath97 corresponds to the move @xmath98!{\\xcapv[2]@(0 ) } [ lu]!{\\xcapv[2]@(0 ) } [ lu]!{\\xcapv[2]@(0 ) } [ u(0.5)r ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1pc}=~\\xygraph { ! { 0;/r0.7pc/ : } [ u(1)]!{\\xcapv[2]@(0 ) } [ lu]!{\\xcapv[2]@(0 ) } [ lu]!{\\xcapv[2]@(0 ) } [ u(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1pc}.$ ]",
    "in this section we recall the definition and properties of the signature .",
    "also , we prove the reduction lemma .    the signature of a link @xmath9 in @xmath85 , denoted by @xmath99 , is defined as follows .",
    "choose any seifert surface @xmath100 for @xmath9 and define the _",
    "_ seifert form__a bilinear form @xmath101 on the first integer homology group of @xmath100as follows : represent classes @xmath102 in @xmath103 by immersed curves @xmath104 in @xmath100 and let @xmath105 be the curve obtained by moving @xmath106 a small amount along the outward pointing normal vector field of @xmath100 . then @xmath107 is set to be the linking number of @xmath108 and @xmath105 , where the linking number of non - embedded disjoint curves in @xmath85 is defined by taking embedded perturbations contained in disjoint neighborhoods of the original curves .",
    "writing @xmath109 in a basis for @xmath103 yields a _",
    "seifert matrix _",
    "@xmath110 for @xmath9 .",
    "the number of positive eigenvalues minus the number of negative eigenvalues of the symmetrization of @xmath110 yields a link invariant , the _ signature _ ; see  @xcite and  @xcite .",
    "there are different sign conventions for the signature in the literature .",
    "we choose sign conventions ( for example in the definition of the linking number ) such that positive braids have negative signature .",
    "in particular , @xmath111 ( rather than @xmath112 ) for all positive integers @xmath113 .    the signature is additive on disjoint and connected sums of links .",
    "note that the connected sum of links with more than one component is only well - defined if one specifies which components to connect .",
    "however , all possible resulting links have the same signature .",
    "[ lemma : sigandunion ] if a link @xmath9 is a disjoint or a connected sum of links @xmath114 , then @xmath115 .",
    "lemma  [ lemma : sigandunion ] follows from the fact that the direct sum of seifert matrices @xmath116 for @xmath117 provides a seifert matrix @xmath118 for @xmath9 .",
    "the fact that deleting the first row and the first column of a symmetric matrix changes its signature by at most @xmath119 yields the following lemma ; see  @xcite .",
    "[ lemma : bandcutting ] if a seifert surface @xmath100 for a link @xmath9 is obtained from a seifert surface @xmath120 for a link @xmath121 by adding or deleting a 1-handle , then @xmath122    let us now discuss properties of the signature of braids .",
    "firstly , if we permute braids cyclically , then they have the same closure and thus the same signature : let @xmath123 be a braid in some @xmath0 , then @xmath124 has the same closure and thus the same signature as @xmath4 . if we add or delete a generator in a braid word , then the signature of the corresponding braid changes by at most @xmath119 .",
    "this is a consequence of lemma  [ lemma : bandcutting ] . as mentioned in the introduction , @xmath66 is a quasi - morphism on the @xmath1-strand braid group .",
    "[ lemma : sigisaqm ] for any two @xmath1-braids @xmath125 , we have @xmath126 .",
    "using the fact that cyclic permutations of a braid have the same signature , we can state this as follows .",
    "[ cor : sigisaqm ] for @xmath1-braids",
    "@xmath127 , we have @xmath128    lemma  [ lemma : sigisaqm ] is based on lemma  [ lemma : bandcutting ] and the fact that there is a seifert surface for @xmath129 that can be obtained from the connected sum of seifert surfaces for @xmath31 and @xmath4 by adding @xmath30 1-handles ; see gambaudo and ghys for a proof  ( * ? ? ? * proof of proposition 5.1 ) .",
    "[ rem : sigisaqm ] if @xmath31 or @xmath4 can be written as a braid without one or several generators @xmath130 , then the statement of lemma  [ lemma : sigisaqm ] is true with defect strictly smaller than @xmath30 .",
    "namely , @xmath131 where @xmath132 and @xmath133 denote 1 plus the number of generators that are not needed in a braid word for @xmath31 and @xmath4 , respectively .",
    "in particular , if @xmath134 , then @xmath135 for all integers @xmath113 and all generators @xmath136 .    before using the above on positive @xmath50-braids to prove the main proposition , we prove the reduction lemma .",
    "we prove the statement only for @xmath66 ; the proof for @xmath137 is similar .",
    "let @xmath4 be a non - trivial positive braid word in some braid group @xmath138 .",
    "without loss of generality , we assume that every generator @xmath139 with @xmath140 is contained in @xmath4 at least once ( i.e.  @xmath54 ) .",
    "the idea of the proof is to delete generators in @xmath4 such that a connected sum of braids on @xmath1 or fewer strands remains .    for @xmath141 in @xmath142 , we denote by @xmath143 the braid obtained from @xmath4 by deleting all but one ( say the leftmost ) @xmath144 for all @xmath145 in @xmath146 .",
    "figure  [ fig : betaifrombeta ] illustrates how @xmath143 is obtained from @xmath4 .",
    "@xmath147!{\\xcapv[6]@(0 ) } [ lu]!{\\xcapv[6]@(0 ) } [ lu]!{\\xcapv[6]@(0 ) } [ lu]!{\\xcapv[6]@(0 ) } [ lu]!{\\xcapv[6]@(0 ) } [ lu]!{\\xcapv[6]@(0 ) } [ lu]!{\\xcapv[6]@(0 ) } [ lu]!{\\xcapv[6]@(0 ) } [ u(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{cyan}\\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{black}\\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ]",
    "! { \\xcaph[1]@(0 ) } [ u(1)l ] !",
    "{ \\color{cyan}\\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{black}\\xcaph[1]@(0 ) } [ dl ] !",
    "{ \\xcaph[1]@(0 ) } [ u(2)lllllll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] !",
    "{ \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{cyan}\\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{black}\\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ u(1)lllll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{cyan}\\xcaph[1]@(0 ) } [ d(0.5 ) ] !",
    "{ \\color{black}\\xcaph[1]@(0 ) } [ u(0.5)llll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ lll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\color{black}\\xcaph[1]@(0 ) } } \\hspace{10 cm } ~\\xygraph { ! { 0;/r0.7pc/ : } [ u(3)]!{\\xcapv[6]@(0 ) } [ lu]!{\\xcapv[6]@(0 ) } [ lu]!{\\xcapv[6]@(0 ) } [ lu]!{\\xcapv[6]@(0 ) } [ lu]!{\\xcapv[6]@(0 ) } [ lu]!{\\xcapv[6]@(0 ) } [ lu]!{\\xcapv[6]@(0 ) } [ lu]!{\\xcapv[6]@(0 ) } [ u(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ dr ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ u(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ dl ] ! { \\xcaph[1]@(0 ) } [ u(2)lllllll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ dr ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ u(1)lllll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ dr ] ! { \\xcaph[1]@(0 ) } [ u(0.5)llll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ lll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] !",
    "{ \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\color{black}\\xcaph[1]@(0 ) } } \\hspace{-3.8pc}$ ]    the closure of such a @xmath143 is a connected sum of closures of positive braids on @xmath1 or fewer strands . since we have @xmath148 , there is an @xmath141 such that @xmath149 we fix such an @xmath141 .",
    "let @xmath150 be positive braids on at most @xmath1 strands such that the closure of @xmath143 is the connected sum of the closures of the @xmath151 .",
    "thus , additivity of the first betti number and the signature on connected sums ( see lemma  [ lemma : sigandunion ] ) , the assumption @xmath152 for non - trivial positive braids on @xmath1 strands , and   yield @xmath153 the braid @xmath143 is obtained from @xmath4 by deleting @xmath154 of the generators . since by lemma  [ lemma : bandcutting ] deleting one generator",
    "changes the signature by at most @xmath119 , we get @xmath155",
    "in this section we provide a @xmath49-linear bound for the signature of positive @xmath50-braids and we prove the main proposition .",
    "let @xmath4 be a positive @xmath50-braid and choose a positive braid word @xmath158 for @xmath4 or cyclic permutations of @xmath4 such that the number of @xmath159 in this braid word is minimal among all possible such positive braid words .",
    "without loss of generality , we assume that @xmath160 does contain all three generators @xmath136 at least once . by applying cyclic permutations and braid relations",
    ", we can arrange that the first two letters of @xmath160 are not @xmath90 .",
    "for example , we consider @xmath161!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ u(0.5)r ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l]!{\\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5)lll ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.75pc}$ ] instead of @xmath162!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ u(0.5)r ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5)lll ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.75pc}$ ] .",
    "let @xmath163 be the blocks of consecutive @xmath90 and @xmath164 the number of @xmath130 in @xmath160 .",
    "of course @xmath165 holds , and , by the assumption of minimality of the number of @xmath90 in @xmath160 , we have at least two generators between two consecutive @xmath166 , which yields @xmath167 .",
    "therefore , @xmath168    we first show @xmath169 .",
    "let @xmath170 denote the braid obtained from @xmath4 by removing @xmath171 and @xmath138 . by remark  [ rem : sigisaqm ] , we have @xmath172 the closure of @xmath170 is a connected sum of the torus links @xmath173 this yields @xmath174 by lemma  [ lemma : sigandunion ] .",
    "therefore , @xmath175 where in the last line and @xmath176 are used .",
    "we observe that if inequality   is a strict inequality , then the above calculation proves @xmath156 .",
    "thus , it remains to consider @xmath160 satisfying @xmath177 , which implies that the inequalities @xmath165 and @xmath178 are equalities .",
    "therefore , the blocks @xmath166 consist of a single @xmath159 and in @xmath160 we have exactly two generators between two consecutive @xmath166 .",
    "we write @xmath160 as @xmath179 , for some @xmath180 in @xmath181 .",
    "since @xmath4 contains all types of generators and is non - trivial , we have @xmath182 . removing all but",
    "the last two @xmath159 in @xmath160 yields a positive @xmath50-braid @xmath183 with @xmath184 the braid @xmath183 satisfies @xmath185 , which is seen as follows .",
    "the braid @xmath183 equals @xmath186 with @xmath187 , where @xmath108 is @xmath188 , @xmath189 or @xmath190 .",
    "the closure of @xmath191 with @xmath187 is the torus link @xmath192 , for which @xmath185 holds .",
    "the closure of @xmath193 is a connected sum of the torus link @xmath194 and the closure of the @xmath56-braid @xmath195 , which both satisfy @xmath185 .",
    "similarly , the closure of @xmath196 is a connected sum of the torus link @xmath197 and the closure of the @xmath56-braid @xmath198 .",
    "the strategy for the proof of the main proposition is the following . to a braid @xmath4",
    "we add roughly @xmath201 generators such that the resulting braid @xmath202 is simple enough that one can prove @xmath203 .",
    "since @xmath204 holds by lemma  [ lemma : bandcutting ] , we conclude that @xmath205 holds .",
    "in fact , this only works for a part of the braid ( at least for @xmath206 of the braid in terms of length ) and for the rest of the braid we are only able to prove @xmath207 . combining this yields @xmath208 .",
    "[ lemma:4->6 ] let @xmath209 be a positive @xmath50-braid of length @xmath50 .",
    "if @xmath209 is not @xmath210!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ u(0.5)r ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.5pc } \\quad\\text{or}\\quad a_{2 } a_{3 } a_{3 } a_{2}=~\\xygraph { ! { 0;/r0.7pc/ : } [ u(1.25)]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ u(0.5)r ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1pc},\\ ] ] then one can add two generators to @xmath209 such that it becomes @xmath211!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ u(0.5)r ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ lll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ lll ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.5pc},\\ ] ] @xmath212!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ u(0.5)rr ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] !",
    "{ \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ lll ] ! { \\xcaph[1]@(0 ) }",
    "[ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.5pc } , \\quad\\text{or}\\quad r= a_{3 } a_{2 } a_{1 } a_{3 } a_{2 } a_{1}=~\\xygraph { ! { 0;/r0.7pc/ : } [ u(1.5)]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ u(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ lll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.5pc}.\\ ] ]      we assume that @xmath209 is represented as a braid word such that the number of @xmath213 in @xmath209 is minimal . for example ,",
    "@xmath214!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ u(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.5pc}$ ] is not considered because it represents the same braid as @xmath215!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ u(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.5pc}$ ] .",
    "we group all possible @xmath209 according to the number of @xmath216 contained in @xmath209 and proceed case by case .",
    "cases are consider only up to rotations and reflections .",
    "newly added generators are marked in blue .",
    "the braids of length @xmath50 with no @xmath213 are @xmath217!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ u(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.25pc}$ ] , @xmath218!{\\xcapv[2]@(0 ) } [ lu]!{\\xcapv[2]@(0 ) } [ lu]!{\\xcapv[2]@(0 ) } [ lu]!{\\xcapv[2]@(0 ) } [ u(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } [ ur ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1pc}$ ] , and @xmath98!{\\xcapv[1.5]@(0 ) } [ lu]!{\\xcapv[1.5]@(0 ) } [ lu]!{\\xcapv[1.5]@(0 ) } [ lu]!{\\xcapv[1.5]@(0 ) } [ u(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } [ u(0.5)r ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } } \\hspace{-0.5pc}.$ ] in @xmath217!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ u(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.5pc}$ ] we first add one @xmath213 to get @xmath219!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ u(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{cyan}\\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\color{black}\\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.75pc}=~\\xygraph { ! { 0;/r0.7pc/ : } [ u(1.5)]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ u(0.5)r ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.75pc}$ ] and then add a @xmath220 to get @xmath219!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ u(0.5)r ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{cyan}\\xcaph[1]@(0 ) } [ lll ] ! { \\color{black}\\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.75pc}=~\\xygraph { ! { 0;/r0.7pc/ : } [ u(1.75)]!{\\xcapv[3.5]@(0 ) } [ lu]!{\\xcapv[3.5]@(0 ) } [ lu]!{\\xcapv[3.5]@(0 ) } [ lu]!{\\xcapv[3.5]@(0 ) } [ u(0.5)r ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{black}\\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\color{black}\\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } } \\hspace{-2pc}=~\\xygraph { ! { 0;/r0.7pc/ : } [ u(1.5)]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ u(0.5)rr ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ lll ] !",
    "{ \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.5pc}=~l$ ] . in the other cases we add two",
    "@xmath213 as follows .",
    "@xmath221!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ u(0.5)r ] ! { \\color{cyan}\\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\color{black}\\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{cyan}\\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\color{black}\\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } [ u(1.5)r ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.75pc}=l \\et \\;\\xygraph { ! { 0;/r0.7pc/ : } [ u(1.25)]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ u(0.5)r ] ! { \\color{cyan}\\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\color{black}\\xcaph[1]@(0 ) } [ r ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\color{cyan}\\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\color{black}\\xcaph[1]@(0 ) } [ r ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.5pc}=\\delta.\\ ] ]    the following are all @xmath209 with one @xmath213 .",
    "we have always indicated how to add two generators ( blue ) yielding @xmath222 , or @xmath223 .",
    "@xmath224!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ u(0.5)r ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{cyan}\\xcaph[1]@(0 ) } [ lll ] ! { \\color{black}\\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{cyan}\\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\color{black}\\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.75pc}=l , \\hspace{1pc}\\xygraph { ! { 0;/r0.7pc/ : } [ u(1.5)]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ u(0.5)r ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ lll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{cyan}\\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\color{black}\\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\color{cyan}\\xcaph[1]@(0)\\color{black } } } \\hspace{-1.5pc}=l,\\hspace{1pc}\\xygraph { ! { 0;/r0.7pc/ : } [ u(1.5)]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ u(0.5)r ] ! { \\color{cyan}\\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ lll ] ! { \\color{black}\\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.75pc}=l,\\et\\xygraph { ! { 0;/r0.7pc/ : } [ u(1.5)]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ u(0.5)r ] ! { \\color{cyan}\\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{black}\\xcaph[1]@(0 ) } [ lll ] ! { \\color{cyan}\\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{black}\\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.75pc}=l\\ ] ]    if @xmath209 contains two @xmath213 , but is not @xmath225!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ u(0.5)r ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.5pc}\\vel a_{2 } a_{3 } a_{3 } a_{2}=\\xygraph { ! { 0;/r0.7pc/ : } [ u(1.25)]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ u(0.5)r ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.5pc},\\ ] ] then it is one of the following ( as before , it is indicated in blue which generators to add ) .",
    "@xmath221!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ u(0.5)r ]",
    "! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{cyan}\\xcaph[1]@(0 ) } [ lll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{black}\\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.75pc}=l,\\hspace{1pc}\\xygraph { ! { 0;/r0.7pc/ : } [ u(1.25)]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ u(0.5)r ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{cyan}\\xcaph[1]@(0 ) } [ lll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{black}\\xcaph[1]@(0 ) } [ d(0.5)ll ] !",
    "{ \\xcaph[1]@(0 ) } [ r ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.75pc}=\\delta,\\hspace{1pc}\\xygraph { ! { 0;/r0.7pc/ : } [ u(1.25)]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ u(0.5)r ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{cyan}\\xcaph[1]@(0 ) } [ lll ] !",
    "{ \\xcaph[1]@(0 ) } [ ur ] !",
    "{ \\color{black}\\xcaph[1]@(0 ) } } \\hspace{-1.5pc}=\\delta,\\hspace{1pc}\\xygraph { ! { 0;/r0.7pc/ : } [ u(1.5)]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ u(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{cyan}\\xcaph[1]@(0 ) } [ lll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{black}\\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.75pc}=\\delta,~\\xygraph { ! { 0;/r0.7pc/ : } [ u(1.25)]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ u(0.5)rr ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{cyan}\\xcaph[1]@(0 ) } [ lll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{black}\\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.75pc}=l.\\ ] ]    finally , there are the following two @xmath209 with three or four @xmath213 .",
    "@xmath226!{\\xcapv[3.5]@(0 ) } [ lu]!{\\xcapv[3.5]@(0 ) } [ lu]!{\\xcapv[3.5]@(0 ) } [ lu]!{\\xcapv[3.5]@(0 ) } [ u(0.5)r ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{cyan}\\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\color{black}\\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\color{cyan}\\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{black}\\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.75pc}=l\\et\\xygraph { ! { 0;/r0.7pc/ : } [ u(2)]!{\\xcapv[3.5]@(0 ) } [ lu]!{\\xcapv[3.5]@(0 ) } [ lu]!{\\xcapv[3.5]@(0 ) } [ lu]!{\\xcapv[3.5]@(0 ) } [ u(0.5)r ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{cyan}\\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\color{black}\\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\color{cyan}\\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\color{black}\\xcaph[1]@(0 ) } } \\hspace{-1.75pc}=l.\\qedhere\\ ] ]    let @xmath227 be a positive 4-braid of length @xmath7 .",
    "we fix a positive integer @xmath113 that is a multiple of @xmath50 and study @xmath228 , which is a braid of length @xmath229 .",
    "first , we write @xmath228 as @xmath230 , where every @xmath166 is a positive braid of length @xmath50 .",
    "let @xmath145 be the number of @xmath231!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ u(0.5)r ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.5pc}$ ] and @xmath232!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ u(0.5)r ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.5pc}$ ] among the @xmath166 .",
    "we may assume that @xmath145 is less or equal than @xmath233 .",
    "for if this were not the case , we switch @xmath228 to one of the cyclic permutations @xmath234 or @xmath235 , which have the same closure as @xmath228 .",
    "it is easy to see that if we decompose @xmath236 and @xmath237 into blocks of length @xmath50 and add up the number of @xmath218!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ u(0.5)r ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.5pc}$ ] and @xmath218!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ u(0.5)r ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.5pc}$ ] in all three decompositions , we get at most @xmath238 ; thus , @xmath239 for at least one of @xmath236 and @xmath237 .",
    "now , we apply lemma  [ lemma:4->6 ] to change @xmath228 to @xmath240 , where the @xmath241 are braid words of length 4 or 6 that are chosen as follows . if @xmath166 is @xmath218!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ u(0.5)r ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.5pc}$ ] or @xmath218!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ u(0.5)r ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.5pc}$ ] , then @xmath241 is @xmath166 . otherwise , @xmath241 is equal to @xmath242 or @xmath223 such that @xmath241 can be obtained from @xmath166 by adding @xmath243 generators , which is possible by lemma  [ lemma:4->6 ] . by lemma  [ lemma : bandcutting ]",
    "we have @xmath244    for a given braid @xmath31 , let @xmath245 denote the braid obtained from a braid diagram for @xmath31 by a planar rotation of @xmath246 degrees .",
    "then the following holds @xmath247 before proving , we use it to finish the proof . since @xmath248 and @xmath249 have the same closure ( up to changing the orientation ) and @xmath66 is a quasi - morphism of defect @xmath56 , we get @xmath250 therefore , @xmath251 and thus @xmath252      let us study @xmath256 the braid diagrams for @xmath222 , and @xmath223 and their rotation by @xmath246 degrees define the same braid : we have @xmath257!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ u(0.5)rr ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ lll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.75pc}=l^\\text{rot } , ~r = ~\\xygraph { ! { 0;/r0.7pc/ : } [ u(1.5)]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ lu]!{\\xcapv[3]@(0 ) } [ u(0.5 ) ] ! { \\xcaph[1]@(0 ) }",
    "[ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ lll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.75pc } = r^\\text{rot } \\text { and } \\delta = ~\\xygraph { ! { 0;/r0.7pc/ : } [ u(1.25)]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ u(0.5)r ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ lll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ lll ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.5pc } = ~\\xygraph { ! { 0;/r0.7pc/ : } [ u(1.25)]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ u(0.5)rr ] ! { \\xcaph[1]@(0 ) } [ lll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ lll ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.75pc } = \\delta^\\text{rot}.\\ ] ] therefore , if @xmath258 is @xmath222 , or @xmath223 , then @xmath259 ; and thus , @xmath260 otherwise , that is if @xmath258 is @xmath218!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ u(0.5)r ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.5pc}$ ] or @xmath218!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ lu]!{\\xcapv[2.5]@(0 ) } [ u(0.5)r ] ! { \\xcaph[1]@(0 ) } [ d(0.5 ) ] ! { \\xcaph[1]@(0 ) } [ d(0.5)l ] ! { \\xcaph[1]@(0 ) } [ d(0.5)ll ] ! { \\xcaph[1]@(0 ) } } \\hspace{-1.5pc}$ ] , we apply corollary  [ cor : sigisaqm ] to get @xmath261 where @xmath262 since the closure of @xmath263 is a connected sum of two @xmath264 and one @xmath265 .",
    "therefore , we have @xmath266      now   follows from murasugi s formula for the signature of torus links of braid index @xmath50 , which implies that @xmath269 holds for all positive integers @xmath270 ; see  ( * ? ? ?",
    "* proposition 9.2 ) or use  ( * ? ? ? * theorem  5.2 ) .",
    "daniel bennequin .",
    "entrelacements et quations de pfaff . in _ third schnepfenried geometry conference , vol . 1 ( schnepfenried , 1982 ) _ , volume 107 of _ astrisque _ , pages 87161 .",
    "france , paris , 1983 .",
    "john  r. stallings .",
    "constructions of fibred knots and links . in _ algebraic and geometric topology ( proc .",
    "pure math . ,",
    "stanford univ . , stanford , calif . , 1976 ) ,",
    "part 2 _ , proc .",
    "pure math . , xxxii , pages 5560 .",
    "soc . , providence , r.i . , 1978 ."
  ],
  "abstract_text": [
    "<S> we provide linear lower bounds for the signature of positive braids in terms of the three genus of their braid closure . this yields linear bounds for the topological slice genus of knots that arise as closures of positive braids . </S>"
  ]
}
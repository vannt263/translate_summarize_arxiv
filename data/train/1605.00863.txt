{
  "article_text": [
    "data centres are expanding both in terms of their size and their importance as computational platforms for cloud computing , web search , social networking , and so on .",
    "there is an increasing demand that data centres incorporate more and more servers but so that overall computational efficiency is not compromised through excessive traffic",
    ". a key factor as to the eventual performance of a data centre is the _ data centre network _ ( _ dcn _ ) ; that is , the interconnection fabric of the servers and switches within the data centre . as we strive to incorporate more and more servers ,",
    "new topologies are being developed so as to cope with the increase in scale and best utilize the additional computational power .",
    "it is with topological aspects of dcns that we are concerned in this paper .",
    "the traditional design of a dcn is _ switch - centric _ so that the routing intelligence resides amongst the switches , with the servers behaving only as computational nodes . in switch - centric",
    "dcns , there are no direct server - to - server links ; only server - to - switch and switch - to - switch links .",
    "switch - centric dcns are traditionally tree - like with servers located at the ` leaves ' of the tree - like structure .",
    "examples include elastictree @xcite , vl2 @xcite , hyperx @xcite , portland @xcite , and flattened butterfly @xcite , although the dominating switch - centric dcn is fat - tree @xcite . whilst it is generally acknowledged that tree - like , switch - centric dcns have their limitations when it comes to , for example , scalability , due to the size of routing tables at the switches , switch - centric dcns remain popular and can usually be constructed from commodity hardware . a more recent paradigm , namely the _ server - centric _ dcn , has emerged so that deficiencies of the tree - like , switch - centric dcns might be ameliorated .",
    "server - centric dcns reflect that the routing intelligence resides within the servers with switches operating only as dumb crossbars . in server - centric dcns",
    "there are only server - to - switch and server - to - server links .",
    "however , server - centric dcns also suffer from deficiencies such as packet relay overheads caused by the need to route packets within the server ; moreover , server - centric dcns have yet to make it into the commercial mainstream ( the reader is referred to @xcite for an overview of the state of the art as regards dcn architectural design ) .",
    "it is with the construction of switch - centric dcns that we are concerned here .",
    "it is difficult to design computationally efficient ( switch - centric ) dcns so as to incorporate large numbers of servers as there are additional considerations to take into account .",
    "for example , switches and ( especially ) servers in data centres have a limited number of ports with a consequence being that the more servers there are , the greater the average or worst - case link - count between two distinct servers ; hence , there is a packet latency overhead to be borne .",
    "also , so as to better support routing , fault - tolerance , and load - balancing , we would prefer that there are numerous alternative paths within the dcn joining any two distinct servers ; that is , that there is _ path diversity_. there are many other design parameters to bear in mind relating to , for example , incremental scalability , throughput , cost , oversubscription , energy consumption , latency , and security ( see , for example , @xcite for an overview ) .",
    "the upshot is that the dcn designer has to simultaneously secure a number of performance characteristics , some of which are competing against each other ; this makes the dcn design space difficult to work in .      a recent proposal in @xcite advocated the use of _ combinatorial design theory _ in order to design switch - centric dcns ; these dcns have beneficial properties as regards incorporating more servers and possessing path diversity yet it is possible to limit the worst - case link - length of server - to - server shortest paths ( and so , ultimately , achieve better control over packet latency in a dcn ) .",
    "the use of combinatorial designs within the study of general interconnection networks is not new and originated in @xcite where the targeted networks involved processors communicating via buses ( the reader is referred to @xcite for a range of applications of combinatorial design theory within computer science ) .",
    "a hypergraph framework was developed in @xcite where the hypergraph nodes represent the processors and the hyperedges the buses .",
    "likewise , an analogous framework was developed in @xcite but where the hypergraph nodes and edges both represent switches so that the pendant servers ` hang off ' some of the switches ( we present a detailed description of this framework in section  [ sec : composition ] ) . in @xcite , the ubiquitous switch - centric fat - tree dcn from @xcite",
    "was used as a yardstick against which to compare the new dcn designs developed in @xcite under the normalization that all dcns are to have the same worst - case link - length of server - to - server shortest paths , namely @xmath1 , as this equals the worst - case link - length of server - to - server shortest paths in the fat - tree dcn .",
    "it was shown that more servers can be incorporated within the new dcns yet , crucially , the resulting dcns have good path diversity .",
    "it is the algebraic properties ( relating to symmetry and balance ) possessed by transversal designs that enable the constructions and analysis as described in @xcite .",
    "one slight difficulty with the original and novel approach taken in @xcite is that some of the path diversity results derived there are incorrect ( as we explain later in section  [ sec : difficulties ] ) .      in this paper",
    "we return to the framework of @xcite and formulate and prove path diversity results for the switch - centric dcns constructed using the methods of that paper . as our concern is entirely with topological properties of dcns ,",
    "henceforth we abstract our dcns as undirected graphs where the nodes are to represent servers and switches and the edges point - to - point links .",
    "the crux of the construction in @xcite is ( essentially ) to build a bipartite graph using a systematic method , called the @xmath0-step method , involving a different ` base ' bipartite graph and a transversal design , and to convert the resulting bipartite graph into switch - centric dcns ( in a variety of ways ) . after explaining how hypergraphs and transversal designs can all be considered as bipartite graphs in section  [ sec : basics ] , in section  [ sec:3stepconstruction ] we provide a detailed description of the 3-step framework from @xcite and explain how the bipartite graphs constructed are converted into switch - centric dcns .",
    "next , we revisit the results from @xcite . in particular , in section  [ sec : onetoonepathdiv ] we correct and extend the analysis in @xcite and affirm that using the @xmath0-step method from @xcite , we can build switch - centric dcns : with many more servers than the fat - tree dcn yet so that , like the fat - tree , every server - to - server shortest path has length at most @xmath1 ; and so that ( assuming some numeric conditions on the base bipartite graph and the transversal design ) we can find pairwise link - disjoint paths from all of the servers adjacent to a particular switch to all of the servers adjacent to any other switch .",
    "moreover , we provide an upper bound on the lengths of the paths constructed in terms of the diameter of the base bipartite graph ( see theorem  [ thm : main ] )",
    ". we also deal with a scenario missing from @xcite ( see part ( _ b _ ) of theorem  [ thm : main ] ) . as we explain , the general situation is more subtle than was assumed in @xcite .",
    "the dcn path diversity , as we have described it above , comes about from building bipartite graphs ( which are subsequently converted to dcns ) so that given any two distinct nodes , there are numerous node - disjoint paths joining these two nodes ; that is , these bipartite graphs have one - to - one path diversity . in section",
    "[ sec : onetomanypathdiv ] , we go on to show that we can actually build numerous edge - disjoint paths from a source node to different destination nodes in our bipartite graphs ; that is , we have one - to - many path diversity .",
    "the dcns obtained from these bipartite graphs are such that ( assuming some numeric conditions on the base bipartite graph and the transversal design ) we can find pairwise link - disjoint paths from all of the servers adjacent to some switch to any identically - sized collection of servers ( irrespective of which switch they are adjacent to ) .",
    "consequently , we show that our dcns provide support for additional communication patterns that are prevalent within data centre networks .",
    "it should be noted that one - to - many and many - to - many communication patterns are commonplace in data centres ; for example in applications involving mapreduce .",
    "this paper is unashamedly theoretical .",
    "however , we demonstrate that not only is there interesting combinatorics within the practical world of dcn design but that combinatorial mathematics can potentially contribute to the dcn design space on a practical level .",
    "we feel that the mathematical aspects of dcns have so far remained almost completely unexamined and we advocate a closer theoretical scrutiny of dcns both as a model of computation and in relation to the vast swathes of research on general interconnection networks .",
    "we mention some practical considerations and directions for further research in the conclusion .",
    "we begin by briefly reviewing some architectural aspects of switch - centric dcns that are pertinent to our subsequent research .",
    "we then move on to the discrete structures featuring in @xcite , namely hypergraphs , bipartite graphs , and transversal designs . so that we might fully describe and understand the constructions in @xcite , as well as our own upcoming analysis of switch - centric dcns , we eventually amalgamate hypergraphs , bipartite graphs , and transversal designs so that by the end of this section , we will have developed an encompassing bipartite graph framework for the design of switch - centric dcns .",
    "general graph - theoretic concepts can be obtained in @xcite .",
    "a switch - centric dcn is abstracted as a graph ( which we also refer to as a dcn ) where the nodes are partitioned into two sets : there are _ server - nodes _ ; and there are _ switch - nodes_. of course , the server - nodes correspond to servers in the dcn and the switch - nodes to switches ; note that immediately there are practical design limitations imposed by the number of _ ports _ in a real switch and the number of _ nic ports _ in a real server ( we sometimes talk of the number of ports of a switch - node rather than its degree ) .",
    "furthermore , in switch - centric dcns there are no links joining one server - node directly to another server - node ( because all routing within a switch - centric dcn falls within the purview of the switches ) .",
    "of concern to us in this paper will be incorporating a comparatively large number of server - nodes within our dcns but so that the maximum length of a shortest path joining any two server - nodes , that is , the _ diameter _ of the dcn , is kept within a given bound , where the _ length _ of such a path is the number of distinct links on the path .",
    "essentially , we will be comparing dcns as to how many server - nodes they incorporate but when their diameters are normalized .",
    "however , dcns must also possess other properties to make them usable within a data centre context .",
    "for example , they also need to : be scalable and incrementally scalable ( that is , have the capacity to cope with increases in components and data ) ; have low message latency ; provide for high overall throughput ( under a range of traffic patterns ) ; be able to tolerate ( a limited number of ) faults ; be energy efficient ; be both economically and physically viable ; and support virtualization ( that is , the partitioning of the dcn into virtual networks on a dynamic basis ) , amongst many other things .",
    "support for some of these properties can be measured using graph theory ; for example , the diameter of the dcn gives guidance as regards the expected message latency .",
    "of particular interest to us will be _ path diversity _ which we define ( somewhat informally ) as the capacity to send data without inducing additional congestion or so as to cope with existing congestion or faults .",
    "there are two contexts of interest to us : the _ one - to - one _ ( or _ unicast _ ) context , when a source server - node wishes to send data to a destination server - node by the utilization of independent paths ( we will return to what we mean by ` independent ' soon ) ; and the _ one - to - many _ ( or _ multicast _ ) context , when a source server - node wishes to send data to a number of destination server - nodes so that the different transmissions do not induce congestion .",
    "path diversity is highly relevant to a number of the above properties such as latency and scalability , where different paths are used to split and balance loads , and fault tolerance , where different paths provide alternative means of transit in the case of faults . that this is the case in the one - to - one context is obvious ; however , the need for data centres to support data replication and applications like mapreduce @xcite makes path diversity crucial in a one - to - many context too .",
    "as we shall soon see , just as with latency , the independence of paths can be considered graph - theoretically .      hypergraphs",
    "provide the original framework for the _ @xmath0-step construction _ ( to be defined later ) as employed in @xcite : in @xcite , hypergraphs were used to model bus interconnection networks ; and in @xcite , hypergraphs were used to model data centre networks . for the moment , and in order to appreciate the context of @xcite , we retain this hypergraph framework before we phrase all content in this introduction within an encompassing bipartite graph framework .    a _ hypergraph _ @xmath2 consists of a finite set @xmath3 of _ nodes _ together with a finite set @xmath4 of _ hyperedges _ where each hyperedge is a non - empty set of nodes and each node appears in at least one hyperedge",
    ". the _ degree _ of a node is the number of hyperedges containing it and the _ rank _ of a hyperedge is its size as a subset of @xmath3 .",
    "a hypergraph is _ regular _ ( resp . _",
    "uniform _ ) if every node has the same degree ( resp .",
    "every hyperedge has the same rank ) with this degree ( resp .",
    "rank ) being the _ degree _ ( resp .",
    "_ rank _ ) of the hypergraph .",
    "every graph @xmath5 has a natural representation as a hypergraph : the nodes of the hypergraph are @xmath3 ; and the hyperedges are @xmath4 , where the hyperedge @xmath6 consists of the pair of nodes incident with the edge @xmath6 of @xmath7 .",
    "we can represent any hypergraph @xmath8 as a bipartite graph : the node set of the bipartite graph is @xmath9 ; and there is an edge @xmath10 , for @xmath11 and @xmath12 , in the bipartite graph if , and only if , @xmath13 in the hypergraph .",
    "it is clear that this yields a one - to - one correspondence between hypergraphs and bipartite graphs ( without isolated nodes ) that come complete with a partition of the elements into a ` left - hand side ' , which will correspond to the nodes of the hypergraph , and a ` right - hand side ' , which will correspond to the hyperedges of the hypergraph .",
    "we assume ( henceforth ) that every bipartite graph comes equipped with such a partition and for clarity from now on we refer to the nodes on the left - hand side as _ nodes _ and the nodes on the right - hand side as _ blocks _",
    "( this is in keeping with our upcoming realisation of transversal designs as bipartite graphs ) .",
    "likewise , we refer to the degree of a node as its _ degree _ and the degree of a block as its _ rank_. a bipartite graph corresponding to a regular , uniform hypergraph of degree @xmath14 and rank @xmath15 is called a _",
    "@xmath16-bipartite graph_. every bipartite graph ( and so every hypergraph ) also describes its _ dual bipartite graph _ ( or alternatively its dual hypergraph ) where the roles of the nodes on the left - hand side and the blocks on the right - hand side of the partition are reversed in the definition of the bipartite graph ; so , for example , the dual bipartite graph of a @xmath16-bipartite graph is regular of degree @xmath15 and uniform of rank @xmath14 .    note that if @xmath7 is a bipartite graph then it corresponds to a hypergraph via our representation above and it also corresponds to a hypergraph via the natural representation highlighted in section  [ sec : hypergraphs ] .",
    "the two hypergraphs corresponding to the same bipartite graph are different and we are never interested in the representation of a bipartite graph as a hypergraph via the natural representation of section  [ sec : hypergraphs ] .",
    "a _ path _ in some hypergraph @xmath8 ( or the corresponding bipartite graph ) is an alternating sequence of nodes and hyperedges so that all nodes are distinct , all hyperedges are distinct , and a node @xmath11 follows or preceeds a hyperedge @xmath12 in the sequence only if @xmath13 in the hypergraph ( or @xmath10 is an edge in the corresponding bipartite graph ) .",
    "the first element of some path is the _ source _ and the final element the _",
    "destination_. the _ length _ of any path is its length in the bipartite graph corresponding to the hypergraph , and the _ distance _ between two distinct elements of @xmath9 is the length of a shortest path joining these two elements in the corresponding bipartite graph .",
    "the _ diameter _ of @xmath17 is the maximum of the distances between every pair of distinct nodes of @xmath3 , and the _ line - diameter _ of @xmath17 is the maximum of the distances between every pair of distinct hyperedges of @xmath4 .",
    "we have two remarks .",
    "first , we have traditional notions of diameter and line - diameter in any bipartite graph .",
    "note that our notion of diameter in a bipartite graph , which is the longest shortest node - to - node path ( and so ignores node - to - block and block - to - block paths ) , is different from the usual graph - theoretic notion of diameter in a bipartite graph ( the same comment can be made as regards line - diameter ) .",
    "when we talk of the diameter or line - diameter of a bipartite graph , we mean with respect to _ our _ notion of diameter or line - diameter , respectively ; if we need to talk of the traditional notion of graph diameter then we will make this clear .",
    "second , our notion of path length in a hypergraph differs from that in @xcite where the length is the number of nodes ( resp .",
    "hyperedges ) in a hyperedge - to - hyperedge ( resp .",
    "node - to - node ) path .",
    "there is no real consequence to this difference ; essentially , our notion of path length is double that in @xcite .",
    "however , we shall soon move to an exclusively bipartite graph - theoretic formulation in which our notion of length is the natural one to adopt",
    ".    we shall be interested in building sets of paths in some hypergraph @xmath17 so that the paths might have the same sources or destinations ; moreover , we shall require that these paths do not ` interfere ' with one another ( or are ` independent ' as we mentioned earlier ) .",
    "we say that a set of paths in @xmath17 is :    * _ pairwise internally - disjoint _ if any source or destination only appears as a source or destination , and any node or hyperedge that is not a source or destination appears on at most one path * _ pairwise edge - disjoint _ if every pair @xmath18 is such that @xmath19 follows or precedes @xmath6 on some path at most once across all paths from this set .      given some hypergraph @xmath8 , our intention is to ultimately transform this hypergraph into a dcn by considering both the nodes and the hyperedges as switch - nodes so that the switch - nodes corresponding to the nodes ( which we shall later call the level-@xmath20 switch - nodes , with the switch - nodes corresponding to the hyperedges the level @xmath21-switch - nodes ) also have adjacent server - nodes , which we have yet to define ( this intention is best appreciated by working with the corresponding bipartite graph rather than the hypergraph ; the upcoming fig .  [ methodace1 ] provides a visualization of what we mean ) .",
    "consequently , we can regard a hypergraph @xmath17 as modelling a switch - centric dcn @xmath22 where there are two levels of switch - nodes .",
    "suppose that we have a set of pairwise internally - disjoint paths from one node of @xmath17 to another node of @xmath17 .",
    "this translates to a set of pairwise internally - disjoint paths in @xmath22 from a level-@xmath20 switch - node to another level-@xmath20 switch - node .",
    "we can use these paths for the simultaneous transfer of data from server - nodes adjacent to the source level-@xmath20 switch - node to server - nodes adjacent to the destination level-@xmath20 switch - node . in order to facilitate this data transfer",
    "we require that level-@xmath20 switch - nodes are non - blocking whereas the level-@xmath21 switch - nodes can be blocking ; recall that a switch - node is _ non - blocking _ when no contention arises when simultaneously sending data through the switch - node on two distinct input links and out on two distinct output links , and _ blocking _ otherwise .",
    "if our paths in @xmath17 are only pairwise edge - disjoint then we require that all switch - nodes of @xmath22 are non - blocking .",
    "the notion of a transversal design is crucial to what follows .",
    "[ def : transversal ] let @xmath23 .",
    "a _ @xmath24$]-transversal design _",
    "@xmath25 is a triple @xmath26 where : @xmath27 ; @xmath28 is a partition of @xmath29 into @xmath15 equal - sized _ groups _ ( each of size @xmath30 ) ; and @xmath31 is a family of @xmath32 subsets of @xmath29 , each of size @xmath15 and called a",
    "_ block _ , so that    * @xmath33 , for @xmath34 , @xmath35 * each pair of elements @xmath36 , where @xmath37 , @xmath38 and @xmath39 , is contained in exactly @xmath20 block .",
    "we adopt a graph - theoretic perspective on transversal designs as defined in definition  [ def : transversal ] : we think of the @xmath24$]-transversal design @xmath25 as a bipartite graph where the elements of @xmath29 ( resp .",
    "@xmath40 ) lie on the left - hand side ( resp .",
    "right - hand side ) of the partition , and so are called nodes ( resp . blocks ) within the bipartite graph , and so that in this bipartite graph there is an edge @xmath41 , for @xmath42 and @xmath43 , if , and only if , in the transversal design the element @xmath44 is in the block @xmath45 .",
    "note that the bipartite graph corresponding to the transversal design from definition  [ def : transversal ] is a @xmath46-bipartite graph .",
    "henceforth , we adopt our bipartite graph framework and regard both hypergraphs and transversal designs as bipartite graphs ( unless we state otherwise ) .",
    "there is an intimate relationship involving transversal designs , _ orthogonal arrays _ and _ mutually orthogonal latin squares _ , although there is no need to give definitions here .",
    "however , it is well known : that there are @xmath15 mutually orthogonal latin squares of order @xmath30 if , and only if , there is a @xmath47$]-orthogonal array if , and only if , there is a @xmath47$]-transversal design ; and that there are at most @xmath48 mutually orthogonal latin squares of order @xmath30 ( see , for example , @xcite ) .",
    "hence , if we have a @xmath24$]-transversal design then @xmath49 . also , if @xmath30 is a prime power then a @xmath24$]-transversal design exists whenever @xmath50 ( again , see @xcite ) .",
    "we shall use these facts later on .",
    "the study of the existence of @xmath24$]-transversal designs , for various @xmath15 and @xmath30 , is a long - standing area of research .",
    "we require one final bit of notation .",
    "if @xmath25 is some transversal design , as in definition  [ def : transversal ] , and @xmath51 and @xmath52 are nodes in distinct groups then we refer to the unique block adjacent to both @xmath51 and @xmath52 as the block _ generated _ by @xmath51 and @xmath52 .",
    "we now describe the _ @xmath0-step construction _ for building bipartite graphs ( or , equivalently , hypergraphs ) by using a ` base ' bipartite graph and a transversal design ( which we think of as a bipartite graph ) .",
    "this construction originated in @xcite and was used in @xcite .",
    "we then explain how this construction was subsequently extended in @xcite both by iteration and by composition so as to yield switch - centric dcns .",
    "the @xmath0-step construction proceeds as follows .",
    ": let @xmath53 be a connected @xmath16-bipartite graph so that there are @xmath54 nodes ( on the left - hand side of the partition , each of degree @xmath14 ) and @xmath6 blocks ( on the right - hand side , each of rank @xmath15 ) .",
    "such an @xmath53 can be visualized as in fig .",
    "[ ddeltabipartite ] ( ordinarily , we represent nodes as circles and blocks as squares ) .",
    "[ 0.68 ] -bipartite graph @xmath53.,title=\"fig : \" ]    : let @xmath25 be a @xmath24$]-transversal design . in particular , there are @xmath15 groups of @xmath30 nodes ( on the left - hand side ) as well as @xmath32 blocks ( on the right - hand side ) .",
    "such a @xmath25 can be visualized as in fig .",
    "[ deltaktransversal ] . build the bipartite graph @xmath17 as follows . for every node @xmath44 of @xmath53 , introduce a group @xmath55 of @xmath30 nodes of @xmath17 ; we say that the group of nodes @xmath55 of @xmath17 is _ associated with _ the node @xmath44 of @xmath53 .",
    "for every block @xmath45 of @xmath53 , adjacent to the nodes @xmath56 in @xmath53 , introduce a copy of @xmath25 , denoted @xmath57 , rooted on the @xmath15 groups of nodes @xmath58 ; so , _ associated with _ the block @xmath45 of @xmath53 , we have a set @xmath59 of @xmath32 blocks in @xmath17 .",
    "we refer to the @xmath15 groups of nodes @xmath58 as the _ roots _ of the copy @xmath57 of @xmath25 in @xmath17 .",
    "such a bipartite graph @xmath17 can be visualized as in fig .",
    "[ 3steptwo ] where two of the copies of @xmath25 are partially shown ( note that they might have some roots in common but their respective sets of blocks are always disjoint as are their sets of edges ) .",
    "the bipartite graph @xmath53 provides a template as to how we introduce copies of @xmath25 to form @xmath17 .",
    "[ 0.68 ] $ ] -transversal design @xmath25.,title=\"fig : \" ]    [ 0.68 ]   and @xmath25 to get @xmath17.,title=\"fig : \" ]    note that :    * each node of @xmath17 can be indexed as @xmath60 , where @xmath61 and @xmath62 , so that @xmath44 is the node of @xmath53 to which the group @xmath55 in which @xmath60 sits is associated and @xmath63 is the index of the node @xmath60 in this group * each block of @xmath17 can be indexed as @xmath64 , where @xmath65 and @xmath66 , so that @xmath45 is the block of @xmath53 to which the set of blocks @xmath59 in which @xmath64 sits is associated and @xmath67 is the block of @xmath25 to which @xmath64 corresponds .",
    "in addition , each node of @xmath25 can be indexed @xmath68 , where @xmath69 and @xmath62 , so that @xmath70 is the group of nodes in which @xmath68 sits and @xmath63 is the index of @xmath68 in that group .",
    ": let @xmath71 be the bipartite graph obtained from the bipartite graph @xmath17 by reversing the roles of nodes and blocks ( so , @xmath71 is the dual bipartite graph of @xmath17 ) .",
    "note that the bipartite graph @xmath71 is regular of degree @xmath15 and uniform of rank @xmath72 .",
    "we refer to the @xmath73-bipartite graph @xmath17 ( resp . the @xmath74-bipartite graph @xmath71 ) constructed above as having been constructed by the @xmath21-step ( resp .",
    "@xmath0-step ) method using the @xmath16-bipartite graph @xmath53 and the @xmath24$]-transversal design @xmath25 .",
    "note that @xmath17 ( resp .",
    "@xmath71 ) has @xmath75 nodes ( resp . @xmath76",
    "nodes ) and @xmath76 blocks ( resp .",
    "@xmath75 blocks ) .",
    "our intention with our constructions is to ultimately design switch - centric dcns with beneficial properties ( as we outlined in section  [ sec : hyperdcns ] ) .",
    "whilst there are many properties we would like our dcns to have , it is important that dcns can integrate a large number of server - nodes so that the server - node - to - server - node distances are short and so that there is redundancy as to which ( short ) server - node - to - server - node routes we choose to use . in our framework of bipartite graphs",
    ", this translates as building bipartite graphs with a large number of nodes and with redundant ( short ) node - to - node paths . as a first step ,",
    "the following result was proven in @xcite ( it is actually derivable from the proofs of our upcoming results ) and allows us control over the length of shortest block - to - block paths in @xmath21-step constructions ( and so shortest node - to - node paths in @xmath0-step constructions ) .    [",
    "thm : linediameter ] suppose that the @xmath73-bipartite graph @xmath17 has been constructed using the @xmath21-step method using the @xmath16-bipartite graph @xmath53 and the @xmath24$]-transversal design @xmath25",
    ". if @xmath53 has line - diameter @xmath77 then @xmath17 has line - diameter @xmath78 .",
    "of course , if @xmath71 is the dual bipartite graph of @xmath17 in theorem  [ thm : linediameter ] then it has diameter @xmath78 .",
    "we reiterate that our notion of diameter and line - diameter differs from that in @xcite ( where the length of a block - to - block path is the number of nodes on that path ; so , in @xcite the bound @xmath77 in our theorem  [ thm : linediameter ] appears as @xmath79 ) .",
    "we can iterate the @xmath0-step construction ( as was done in @xcite ) . note that if @xmath53 is a @xmath16-bipartite graph of line - diameter @xmath77 , with @xmath54 nodes and @xmath6 blocks , then the bipartite graph @xmath80 resulting from the @xmath21-step construction ( using @xmath53 and some @xmath24$]-transversal design @xmath25 ) is a @xmath73-bipartite graph of line - diameter @xmath78 .",
    "so , repeating the @xmath21-step construction but with @xmath80 replacing @xmath53 ( we keep the same @xmath25 , although we do not have to ) yields a @xmath81-bipartite graph @xmath82 of line - diameter @xmath78 . by iterating this construction , we can clearly obtain a @xmath83-bipartite graph @xmath84 of line - diameter @xmath78 . converting @xmath84 into @xmath85 results in a bipartite graph with @xmath86 nodes , with @xmath87 blocks , with diameter @xmath78 , and that is regular of degree @xmath15 and uniform of rank @xmath88 .      new methods of composing bipartite graphs ( built according to the @xmath0-step construction ) so as to obtain switch - centric dcns were also derived in @xcite . in @xcite , @xmath89",
    "such methods were given : methods @xmath90 , @xmath91 and @xmath92 are different cases of method @xmath93 , below ; and method @xmath94 is method @xmath95 .",
    "in what follows , let @xmath17 be a @xmath96-bipartite graph where @xmath97 and where there are @xmath54 nodes and @xmath6 blocks .",
    ": we take @xmath98 copies of @xmath17 where @xmath99 and @xmath100 . for each node @xmath101 of @xmath17 : we remove the corresponding node in each of the @xmath98 copies of @xmath17 and introduce a new switch - node ( common to all copies of @xmath17 ) ; we make all of the @xmath102 edges incident with the @xmath98 original nodes incident with this new switch - node ; and we attach @xmath103 pendant server - nodes to the new switch - node .",
    "all blocks of @xmath17 are considered as switch - nodes .",
    "we follow @xcite and call the new switch - nodes _ level-@xmath20 switch - nodes _ and the original switch - nodes _ level-@xmath21 switch - nodes_. the construction of the switch - centric dcn @xmath104 from @xmath17 via this method can be visualised as in fig .",
    "[ methodacgte2 ] , where we only show the construction for the @xmath98 nodes coresponding to one node of @xmath17 . note that every switch - node of @xmath104 has @xmath105 ports . also , there is some choice as regards the parameter @xmath98 ( so that choosing different values for @xmath98 yields different values for @xmath106 ) .",
    "we illustrate the special case when @xmath107 in fig .",
    "[ methodace1 ] , where @xmath17 is a @xmath108-bipartite graph . the general case when @xmath100 corresponds to method @xmath91 of @xcite ; the special case when @xmath109 corresponds to method @xmath90 ; and the special case when @xmath110 corresponds to method @xmath92 . in this latter case ,",
    "the aim is to ensure that every level-@xmath20 switch - node is adjacent to roughly the same number of level-@xmath21 switch - nodes as it is server - nodes .",
    "note that : the number of server - nodes in @xmath104 is @xmath111 ; the number of level-@xmath20 switch - nodes is @xmath54 ; and the number of level-@xmath21 switch - nodes is @xmath112 .",
    "[ 0.68 ]   when @xmath113.,title=\"fig : \" ]    [ 0.68 ]   when @xmath107.,title=\"fig : \" ]    : we now work with a switch - centric dcn as constructed by method @xmath93 .",
    "let every level-@xmath20 switch - node have @xmath106 adjacent server - nodes .",
    "suppose that there is an even number of level-@xmath20 switch - nodes .",
    "partition the set of level-@xmath20 switch - nodes into pairs . for each pair of switch - nodes @xmath114",
    ": remove @xmath115 server - nodes that are adjacent to @xmath116 and remove @xmath117 server - nodes that are adjacent to @xmath118 ; and make every server - node that is adjacent to the switch - node @xmath116 or the switch - node @xmath118 also adjacent to the other switch - node .",
    "note that the number of ports of any switch - node has not changed but that every server - node is now adjacent to @xmath21 switch - nodes .",
    "the philosophy behind this construction is to better tolerate the failure of a level-1 switch - node .",
    "the construction can be visualized as in fig .",
    "[ methodb ] where paired level-@xmath20 switch - nodes have the same shade of grey and where @xmath119 .",
    "[ 0.68 ] .,title=\"fig : \" ]      in @xcite , switch - centric dcns constructed using the @xmath0-step method allied with methods @xmath93 and @xmath95 were favourably compared with the @xmath0-level fat - tree dcn from @xcite with regard to the number of server - nodes therein when the diameter and the number of ports of a switch - node are held constant .",
    "the reader is referred to @xcite for full details as regards the topology of fat - tree and to tables 24 in @xcite for the complete comparison ; however , we include a replicated table here purely for illustrative purposes . in table",
    "[ tab : comparisontable ] ( which is table  2 from @xcite ) : the number of ports of any switch - node is forced to be @xmath120 ; the diameters of the dcns resulting from using the @xmath0-step method , iteration and composition are forced to be ( at most ) @xmath1 ( like that of fat - tree ) ; and the numbers of server - nodes and switch - nodes in the resulting dcns are as given ( note that the length of a server - node - to - server - node path as defined in @xcite is the number of switch - nodes on it , which is one less than our notion of length which is the number of links on the path ) .",
    ".comparing switch - centric dcns built with switch - nodes with @xmath120 ports [ cols=\"<,^,^,^,^\",options=\"header \" , ]     [ tab : comparisontable ]    * the bipartite graph @xmath71 is obtained using the @xmath0-step method starting with a @xmath121-bipartite graph @xmath53 , that has @xmath122 nodes , @xmath122 blocks , and diameter and line - diameter @xmath89 ( such a bipartite graph @xmath53 exists ; see @xcite ) , and a @xmath123$]-transversal design @xmath25 .",
    "the dcn @xmath71 in table  [ tab : comparisontable ] is the dcn obtained by simply regarding every node of the bipartite graph @xmath71 as a server - node ( note that in this dcn we require that every server - node has @xmath124 nic ports ) ; the dcn @xmath125 ( resp .",
    "@xmath126 , @xmath127 ) is obtained by employing method @xmath93 with @xmath107 ( resp .",
    "@xmath128 , @xmath129 ) ; and the dcn @xmath130 is obtained by employing method @xmath95 with @xmath125 ( note that the number of switch - nodes entry in table  2 in @xcite is incorrect ) . * the bipartite graph @xmath131 is obtained using the @xmath0-step method iterated twice , starting with a @xmath132-bipartite graph @xmath133 , that has @xmath134 nodes , @xmath134 blocks , and diameter and line - diameter @xmath89 ( such a bipartite graph @xmath133 exists ; see @xcite ) , and a @xmath135$]-transversal design @xmath136 ( actually , in @xcite this transversal design is not mentioned ; it does , however , exist ) .",
    "the dcn @xmath137 in table  [ tab : comparisontable ] is the dcn obtained by simply regarding every node of the bipartite graph @xmath137 as a server - node ( note that the number of server - nodes entry in table  2 in @xcite is incorrect , though the correct number is stated in the text ) ; and the dcn @xmath125 is obtained by employing method @xmath93 with @xmath107 ( note that the numbers of server - nodes and of switch - nodes entries in table  2 in @xcite are incorrect ) .",
    "it is clear from table  [ tab : comparisontable ] ( and from @xcite ) that we can build much bigger server - centric dcns using the @xmath0-step method and the subsequent iterations and compositions than fat - tree but without increasing the diameter ( which is a proxy for latency ) ; of course , we would wish the new dcns to have other properties that make them attractive within a data centre context .",
    "establishing such properties was essentially the whole point of @xcite and we continue with this line of research in what follows .    before we move to our main results ,",
    "let us comment on using the @xmath21-step method as opposed to the @xmath0-step method when building our switch - centric dcns ( the same comment was made in @xcite ) .",
    "note that when one uses the ( iterated ) @xmath21-step method , whilst the rank of the resulting bipartite graph stays the same , the degree grows .",
    "were we to attach server - nodes to the switch - nodes that replace the nodes of the @xmath21-step bipartite graph @xmath17 , rather than the @xmath0-step bipartite graph @xmath71 , the number of ports of the level-@xmath21 switch - nodes ( which would be @xmath15 ) would be much less than the number of ports of the level-@xmath20 switch - nodes . hence , it makes more sense to proceed as we have done above .",
    "so far , we have set the scene from @xcite and described a method by which we can build bipartite graphs ( the @xmath0-step method ) which can then be transformed into switch - centric dcns with many more servers than fat - tree whilst maintaining the diameter of fat - tree , i.e. , @xmath1 .",
    "however , as we mentioned earlier , there are many more aspects to the design of dcns with an important one being path diversity . in what follows ,",
    "we highlight some problems with the proofs of one - to - one path diversity in @xcite for bipartite graphs built using the @xmath0-step method .",
    "we then provide not only correct proofs as regards one - to - one path diversity but we also extend and improve the analysis in @xcite with new results .",
    "we end the section by applying our constructions so as to build dcns with good one - to - one path diversity properties .      in order to detail the difficulties in @xcite ,",
    "we adopt the terminology of @xcite .",
    "there are slight problems with the proof of theorem 2 in @xcite ( although they are easily surmountable ) .",
    "for example , in subcases ( 1.2 ) and ( 2.2 ) , @xmath138 and consequently we can not generate the blocks @xmath139 and @xmath140 . also , in subcase ( 2.1 ) , the situation where @xmath141 is not considered",
    "; it could be that @xmath142 , for some @xmath143 .",
    "an attempt was also made in @xcite to extend theorem 2 of @xcite : see theorem  3 of @xcite .",
    "assumptions concerning the connectivity of @xmath53 are made and the existence of additional paths in @xmath71 to those constructed in the proof of theorem  2 are claimed in the situation when the two blocks @xmath64 and @xmath144 are such that @xmath145 ( recall our method of indexing in section  [ subsec:3step ] which we adopt here )",
    ". however , there are serious flaws in the proof of theorem  3 of @xcite , so much so that the theorem is untrue . in short , theorem  3 of @xcite claims that if there are @xmath146 pairwise internally - disjoint paths in @xmath53 from @xmath45 to @xmath147 then there are @xmath148 pairwise internally - disjoint paths in @xmath17 from @xmath64 to @xmath144 .",
    "this does not make sense : the maximum number of pairwise internally - disjoint paths in @xmath17 from @xmath64 to @xmath144 is @xmath15 ( as the bipartite graph @xmath17 has rank @xmath15 ) and so we must have that @xmath149 .",
    "for instance , in example 1 of @xcite , the bipartite graph @xmath53 is the cycle of length @xmath150 ( @xmath53 is derived from the cycle of length @xmath151 using its natural representation as a hypergraph ; see section  [ sec : hypergraphs ] ) , so that @xmath152 , @xmath153 , and there @xmath21 internally - disjoint paths from any block of @xmath53 to any other block of @xmath53 .",
    "a @xmath154$]-transversal design @xmath25 is used and the bipartite graph @xmath71 built by the @xmath0-step method has rank @xmath1 and degree @xmath21 . however ,",
    "if theorem  3 of @xcite were true then there would be @xmath89 pairwise disjoint paths from @xmath64 to @xmath144 in @xmath71 which clearly can not be the case .",
    "we now resurrect ( some of ) the proofs of the main results from @xcite and extend the results claimed in that paper .",
    "the following lemma proves most useful .",
    "[ lem : genblocks ] let @xmath25 be some @xmath24$]-transversal design with groups of nodes @xmath155@xmath156 .",
    "let @xmath67 be some block of @xmath25 . for each @xmath69 ,",
    "let @xmath157 be the unique node of @xmath70 that is adjacent to @xmath67 .",
    "set @xmath158 .",
    "let @xmath159 be a set of distinct pairs of nodes so that : exactly one node of any pair in @xmath159 is in @xmath160 and no node of @xmath160 is in more than one pair of @xmath159 ; and no pair in @xmath159 is such that both nodes lie in the same group . the blocks generated by the pairs in @xmath159 are all distinct and different from @xmath67 .",
    "suppose that @xmath161 , where @xmath162 with @xmath163 and where @xmath69 .",
    "let @xmath164 be the block generated by @xmath165 and @xmath51 . if @xmath166 then @xmath67 is adjacent to the distinct nodes @xmath167 and @xmath51 in @xmath168 which yields a contradiction .",
    "suppose that @xmath169 , where @xmath170 .",
    "let @xmath171 be the block generated by @xmath172 and @xmath52 .",
    "suppose that @xmath173 ; hence , @xmath164 is adjacent to both @xmath165 and @xmath172 with @xmath39 .",
    "as any two nodes lying in distinct groups in @xmath25 are adjacent to a unique block of @xmath25 , we must have that @xmath174 ; but this yields a contradiction as above .",
    "hence , the blocks generated by the pairs in @xmath159 are all distinct and all different from @xmath67 .",
    "we use this lemma throughout , both explicitly and implicitly .    our main result in the one - to - one context",
    "is concerned with building as many pairwise internally - disjoint paths as we can from any block to any other block in the bipartite graph built using the @xmath21-step method ( or , equivalently , from any node to any other node in the bipartite graph built using the @xmath0-step method ) .",
    "we explain the impact of the existence of these paths on the path diversity of subsequently built dcns presently .",
    "one added and significant complication in the proof of the following result comes about when the transversal design @xmath25 is a @xmath175$]-transversal design ( so , there is the potential for @xmath176 paths ) .",
    "[ thm : main ] let @xmath177 .",
    "let @xmath17 be built by the @xmath21-step method from the @xmath16-bipartite graph @xmath53 using the @xmath24$]-transversal design @xmath25 .",
    "* let @xmath45 and @xmath147 be distinct blocks of @xmath53 so that there are @xmath178 pairwise internally - disjoint paths in @xmath53 from @xmath45 to @xmath147 , each of length at most @xmath179 .",
    "there are @xmath180 pairwise internally - disjoint paths from any block @xmath181 of @xmath17 to any other block @xmath182 of @xmath17 .",
    "furthermore , if @xmath183 then there are @xmath15 pairwise internally - disjoint paths from any block @xmath181 of @xmath17 to any other block @xmath182 of @xmath17 .",
    "all paths have length at most @xmath184 .",
    "* if @xmath181 and @xmath185 are distinct blocks of @xmath17 then there are @xmath15 pairwise internally - disjoint paths from @xmath181 to @xmath185 , each of length at most @xmath1 and lying entirely within @xmath57 .",
    "recall that we mentioned in section  [ sec : tdesigns ] that necessarily @xmath49 .",
    ": suppose that : @xmath186 ; @xmath79 ; and the distinct nodes @xmath187 and @xmath188 are common neighbours in @xmath53 of @xmath45 and @xmath147 .",
    "we ` batch ' the groups of nodes of @xmath57 and @xmath189 together so that in each of @xmath57 and @xmath189 , the @xmath190 groups of nodes form @xmath20 batch of @xmath30 groups and @xmath20 batch of @xmath20 group as follows :    * for @xmath191 , define @xmath192 * the remaining @xmath48 groups within @xmath57 are @xmath193 and the remaining @xmath48 groups within @xmath189 are @xmath194 so that : * * any group of the form @xmath195 , where @xmath196 , is associated with some node @xmath197 of @xmath53 that is adjacent to both @xmath45 and @xmath147 if , and only if , the group @xmath198 is associated with the same node @xmath44 of @xmath53 ( so , if @xmath195 and @xmath198 are associated with the same node @xmath197 of @xmath53 then they are the same group in @xmath17 ) .    for each @xmath199 , let @xmath200 ( resp .",
    "@xmath201 ) be the unique node of @xmath195 ( resp .",
    "@xmath198 ) that is adjacent to @xmath181 ( resp .",
    "@xmath182 ) in @xmath17 . note that the pair @xmath202 and @xmath203 lie in the same group of nodes in @xmath17 if , and only if , both @xmath195 and @xmath198 are associated with the same node @xmath44 of @xmath53 and this node @xmath44 is adjacent to both @xmath45 and @xmath147 in @xmath53 .",
    "the situation can be visualized as in fig .",
    "[ basicsetupcaseai ] ( where in this case @xmath45 and @xmath147 have @xmath204 common neighbours in @xmath53 and where , for example , @xmath205 but @xmath206 ) .    [ 0.68 ]     let @xmath207 and @xmath208 so that :    * if @xmath209 then @xmath210 , for @xmath211 * if @xmath212 then @xmath213 , @xmath214 and @xmath210 , for @xmath215 .",
    "we are now ready to generate some blocks within @xmath57 and @xmath189 in @xmath17 . for each @xmath216 :    * let @xmath217 be the unique block of @xmath57 in @xmath17 generated by the nodes @xmath200 and @xmath218 * let @xmath219 be the unique block of @xmath189 in @xmath17 generated by the nodes @xmath201 and @xmath220 .",
    "so , we have generated @xmath48 blocks in @xmath57 and @xmath48 blocks in @xmath189 .",
    "note that any block of @xmath57 is necessarily distinct from any block of @xmath189 . by lemma  [ lem : genblocks ] applied twice to both @xmath57 and @xmath189 , all blocks of @xmath221 are distinct and different from @xmath181 , and all blocks of @xmath222 are distinct and different from @xmath182 .",
    "call these two sets of blocks our working sets of blocks .",
    "we are now in a position to build some paths from @xmath181 to @xmath182 in @xmath17 .",
    "if @xmath209 then define the paths :    * @xmath223 as @xmath224 * @xmath225 as @xmath226 , if @xmath227 , and as @xmath228@xmath182 , if @xmath205 ( note that @xmath229 ) .    if @xmath212 then define the paths :    * @xmath223 as @xmath230 ( note that @xmath231 ) * @xmath225 as @xmath232 ( note that @xmath233 )",
    "we ll now build paths from @xmath181 to @xmath182 using nodes from the groups @xmath234 .",
    "for each @xmath235 :    * if @xmath236 then define the path : * * @xmath237 as @xmath238 ( note that @xmath210 ) * if @xmath239 then define the path : * * @xmath237 as @xmath240 .",
    "note that out of all of the @xmath30 ` @xmath241-paths ' constructed above , the only way that we can have that two of our paths are not internally - disjoint is when @xmath212 but @xmath227 ( in which case @xmath223 and @xmath225 share the common node @xmath242 ) . in this case , choose @xmath243 .",
    "let @xmath244 be the block of @xmath57 in @xmath17 generated by @xmath245 and @xmath246 , and let @xmath247 be the block of @xmath189 in @xmath17 generated by @xmath248 and @xmath246 ( in essence , we have dispensed with the blocks @xmath249 and @xmath250 and replaced them with the blocks @xmath244 and @xmath247 in our working sets of blocks ) .",
    "the conditions of lemma  [ lem : genblocks ] still hold and so the blocks in our working sets of blocks are all distinct and different from @xmath181 and @xmath182 .",
    "redefine the paths :    * @xmath223 as @xmath226 * @xmath225 as @xmath251 .",
    "the paths from the resulting set of @xmath30 @xmath241-paths are now pairwise internally - disjoint and each has length at most @xmath1 .",
    "let @xmath252 ( resp .",
    "@xmath253 ) be the unique node of @xmath254 ( resp .",
    "@xmath255 ) that is adjacent to @xmath181 ( resp .",
    "@xmath182 ) in @xmath17 .",
    "suppose that @xmath256 .",
    "in this case , we build the path @xmath257 defined as @xmath258 .",
    "this path is clearly internally - disjoint from all of the @xmath30 @xmath241-paths constructed above . alternatively , suppose that @xmath259 . if @xmath260 then there is a node @xmath261 .",
    "let @xmath262 be the block of @xmath57 within @xmath17 generated by @xmath252 and @xmath263 , and let @xmath264 be the block of @xmath189 within @xmath17 generated by @xmath253 and @xmath263 . by lemma  [ lem : genblocks ] , these blocks are different from @xmath181 , @xmath182 and all other blocks used within the @xmath30 @xmath241-paths constructed above ( even when we make the amendments to our working sets of blocks as detailed in the preceding paragraph ) .",
    "define the path @xmath265 as @xmath266 .",
    "this path has length @xmath1 and is clearly internally - disjoint from all of the @xmath30 @xmath241-paths constructed above .    on the other hand ,",
    "suppose that @xmath267 ; so , @xmath268 .",
    "in particular , a @xmath269$]-transversal design exists .",
    "we deal with this case from scratch .",
    "there is exactly one @xmath269$]-transversal design up to isomorphism and this is the transversal design depicted in fig .",
    "[ 32trans ] .",
    "[ 0.68 ] $ ] -transversal design.,title=\"fig : \" ]    in some @xmath269$]-transversal design , let the set of blocks be @xmath270 and let the group of nodes @xmath271 be @xmath272 , for @xmath273 .",
    ", we must have the set of edges @xmath274 w.l.o.g .",
    ", the node @xmath275 is adjacent to @xmath276 , and @xmath276 is adjacent to one other block .",
    "the only possible block that @xmath276 can be adjacent to is @xmath277 ( as otherwise we would have two nodes in different groups adjacent to @xmath21 distinct blocks ) .",
    "name the blocks and nodes of @xmath57 as in fig .",
    "[ 32trans ] .",
    "suppose that @xmath278 ( it is easy to see that there is an automorphism of @xmath57 mapping any block to any other block ) .",
    "there are two cases to consider : when @xmath45 and @xmath147 have @xmath0 common neighbours in @xmath53 ; and when they have only @xmath21 common neighbours in @xmath53 .",
    "however , before we deal with these cases , choose any @xmath0 distinct nodes in @xmath57 . a tedious case - by - case analysis yields that no matter which @xmath0 nodes are chosen , there are @xmath0 pairwise internally - disjoint paths from @xmath277 to the @xmath0 nodes within @xmath57 . for example",
    ", suppose that the @xmath0 chosen nodes are @xmath279 , @xmath280 and @xmath281 .",
    "the @xmath0 paths are : @xmath282 ; @xmath283 ; and @xmath284 .",
    "it turns out that if the @xmath0 chosen nodes are in @xmath0 different groups then the length of any path is at most @xmath151 , whereas if the @xmath0 chosen nodes are in @xmath21 different groups then the length of any path is at most @xmath0 .",
    "suppose that @xmath45 and @xmath147 have @xmath0 common neighbours in @xmath53 .",
    "choose the @xmath0 nodes in @xmath57 as the neighbours of @xmath182 in @xmath189 .",
    "consequently , from above , we clearly obtain @xmath0 pairwise internally - disjoint paths from @xmath181 to @xmath182 as required",
    ". moreover , each path has length at most @xmath1 .",
    "suppose that @xmath45 and @xmath147 have only @xmath21 common neighbours in @xmath53 where the groups corresponding to these neighbours are @xmath272 and @xmath285 , with @xmath286 , @xmath39 .",
    "choose @xmath0 nodes in @xmath189 as the two neighbours of @xmath182 in @xmath272 and @xmath285 , call them @xmath287 and @xmath288 , plus one other node , call it @xmath51 , say , from one of these groups , with the remaining unchosen node from these two groups being denoted by @xmath52 .",
    "by above , there are @xmath0 pairwise internally - disjoint paths , @xmath289 , @xmath290 and @xmath291 , in @xmath189 from @xmath182 to @xmath287 , @xmath288 and @xmath51 , and we may assume that these paths do not involve @xmath52 ; for if one does then it must be the path to @xmath51 , in which case we simply choose @xmath52 as our third chosen node , above , instead of @xmath51 ( it is not difficult to see that the path to @xmath51 has length at most @xmath0 ) . by above , there are also @xmath0 pairwise internally - disjoint paths , @xmath292 , @xmath293 and @xmath294 , in @xmath57 from @xmath277 to @xmath287 , @xmath288 and @xmath51 , each of length at most @xmath0 ; moreover , these paths do not share any nodes with the paths @xmath289 , @xmath290 and @xmath291 apart from the end - nodes .",
    "consequently , we clearly obtain @xmath0 pairwise internally - disjoint paths from @xmath181 to @xmath182 as required .",
    "moreover , each path has length at most @xmath1 .",
    ": suppose that : @xmath186 ; @xmath79 ; and there is exactly one common neighbour in @xmath53 of @xmath45 and @xmath147 , namely the node @xmath187 .",
    "as @xmath79 , there is a path in @xmath53 of the form @xmath295 where @xmath296 and where @xmath187 does not appear on this path ( note that @xmath297 ) .",
    "we ` batch ' our groups similarly to as we did before :    * define @xmath298 , @xmath299 and @xmath300 * the remaining @xmath48 groups within @xmath57 are @xmath193 and the remaining @xmath48 groups in @xmath189 are @xmath194 .    note that we necessarily have that the groups @xmath195 and @xmath198 are distinct , for @xmath301 ( as are the groups @xmath254 and @xmath255 ) .    for each @xmath199 , let @xmath200 ( resp .",
    "@xmath201 ) be the unique node of @xmath195 ( resp .",
    "@xmath198 ) that is adjacent to @xmath181 ( resp .",
    "@xmath182 ) in @xmath17 .",
    "also , let @xmath302 ( resp .",
    "@xmath303 ) be the unique node of @xmath254 ( resp .",
    "@xmath255 ) that is adjacent to @xmath181 ( resp .",
    "@xmath182 ) in @xmath17 .",
    "we construct the paths @xmath304 , for @xmath305 , exactly as we did in case ( _ a_)(_i _ ) .",
    "in addition , define the paths @xmath306 as @xmath307 and @xmath308 as @xmath309 .",
    "if we can find a path in @xmath17 from @xmath252 to @xmath253 so that no node or block of this path , apart from the nodes and blocks of @xmath306 and @xmath308 , lies in @xmath57 or @xmath189 then we are done . in @xmath17",
    ": there is a path of length @xmath21 lying entirely within @xmath310 so that the source is @xmath252 and the destination is some node @xmath311 ; there is a path of length @xmath21 lying entirely within @xmath312 so that the source is @xmath311 and the destination is some node @xmath313 ; @xmath314 ; there is a path of length @xmath21 lying entirely within @xmath315 so that the source is @xmath316 and the destination is @xmath303 .",
    "we clearly have a required path of length at most @xmath179 .",
    "so , we have constructed @xmath317 pairwise internally - disjoint paths from @xmath181 to @xmath182 so that @xmath30 of these paths have length at most @xmath1 and the remaining path has length at most @xmath179 .",
    ": suppose that : @xmath186 ; @xmath79 ; and there are no common neighbours in @xmath53 of @xmath45 and @xmath147 .",
    "as @xmath79 , there are paths in @xmath53 of the form @xmath318 and @xmath319 where @xmath320 and where these paths are internally - disjoint .",
    "we ` batch ' our groups similarly to as we did before :    * define @xmath321 and @xmath322 * choose @xmath48 groups within @xmath57 ( different from @xmath323 ) as @xmath193 and choose @xmath48 groups in @xmath189 ( different from @xmath324 ) as @xmath194 .",
    "note that we necessarily have that the groups @xmath195 and @xmath198 are distinct , for @xmath325 .",
    "for each @xmath199 , let @xmath200 ( resp .",
    "@xmath201 ) be the unique node of @xmath195 ( resp .",
    "@xmath198 ) that is adjacent to @xmath181 ( resp .",
    "@xmath182 ) in @xmath17 .",
    "let @xmath207 and @xmath208 . for each @xmath216 ,",
    "let @xmath217 be the block of @xmath57 generated by @xmath200 and @xmath218 , and let @xmath219 be the block of @xmath189 generated by @xmath201 and @xmath220 . by lemma  [ lem : genblocks ] applied twice to both @xmath57 and @xmath189 , all blocks of @xmath221 are distinct and different from @xmath181 , and all blocks of @xmath222 are distinct and different from @xmath182 .    for @xmath216 ,",
    "let @xmath326 be the path @xmath327 and let @xmath328 be the path @xmath329 . define the path @xmath330 as @xmath331 and the path @xmath332 as @xmath333 . in @xmath17",
    ": there are @xmath30 paths of length @xmath21 from the nodes @xmath334 of @xmath335 to distinct nodes @xmath336 of @xmath337 , respectively , so that all blocks on these paths lie in @xmath310 and are distinct ; there are @xmath30 paths of length @xmath21 from the nodes @xmath336 of @xmath337 to distinct nodes @xmath338 of @xmath339 , respectively , so that all blocks on these paths lie in @xmath312 and are distinct ; @xmath314 ; and there are @xmath30 paths of length @xmath21 from @xmath340 to the nodes @xmath341 of @xmath342 , respectively , so that all blocks on these paths lie in @xmath315 and are distinct .",
    "we can clearly piece all of the paths together to obtain @xmath30 pairwise internally - disjoint paths from @xmath181 to @xmath182 so that each path has length at most @xmath184 .",
    "we can build another path from @xmath181 to @xmath182 that is internally - disjoint from the @xmath30 paths just constructed by proceeding exactly as we did above or in case ( _ a_)(_ii _ ) , corresponding to the alternative path from @xmath45 to @xmath147 in @xmath53 .",
    "this path has length at most @xmath179 .",
    ": suppose that @xmath343 or @xmath344 .    by choosing the appropriate construction from the cases above , depending upon whether there is a common neighbour of @xmath45 and @xmath147 in @xmath53",
    ", we can clearly construct @xmath180 pairwise internally - disjoint paths from @xmath181 to @xmath182 so that : if there is a common neighbour of @xmath45 and @xmath147 in @xmath53 , all paths have length at most @xmath1 ; and if there is no common neighbour of @xmath45 and @xmath147 in @xmath17 , all paths have length at most @xmath184 .",
    ": consider the case when our two blocks are @xmath181 and @xmath185 .",
    "suppose that the block @xmath45 of @xmath53 is adjacent to the nodes @xmath56 . for each @xmath69",
    ", let @xmath345 be adjacent to @xmath181 in @xmath17 and let @xmath346 be adjacent to @xmath185 in @xmath17 . w.l.o.g .",
    "suppose that @xmath347 , for @xmath348 , and that @xmath349 , for @xmath350 .",
    "suppose that @xmath351 . for each @xmath352 ,",
    "let @xmath353 be the block of @xmath57 that is generated by @xmath165 and @xmath354 , and let @xmath355 be the block of @xmath57 that is generated by @xmath356 and @xmath357 . by lemma  [ lem : genblocks ] , all blocks",
    "@xmath358 are distinct and different from @xmath181 and @xmath185 . hence : if @xmath359 is the path @xmath360 , for @xmath352 ; if @xmath361 is the path @xmath362@xmath363 ; and if @xmath359 is the path @xmath364 , for @xmath365 , then paths in the resulting set are pairwise internally - disjoint , with each path having length at most @xmath89 .    if @xmath366 then the above construction trivially yields @xmath15 paths of length @xmath21 from @xmath181 to @xmath185 .",
    "suppose that @xmath367 .",
    "choose @xmath368 and let @xmath369 ( resp .",
    "@xmath370 ) be the block of @xmath57 generated by @xmath279 and @xmath371 ( resp .",
    "@xmath372 and @xmath371 )",
    ". clearly , @xmath369 , @xmath370 , @xmath181 and @xmath185 are all distinct .",
    "so , if @xmath292 is the path @xmath373 and @xmath359 is the path @xmath364 , for @xmath374 , then we obtain @xmath15 pairwise internally - disjoint paths , with all paths having length @xmath21 except one which has length @xmath1 .",
    "theorem  [ thm : main ] is clearly optimal in the sense that the maximal number of pairwise internally - disjoint paths is always constructed ( this follows from a simple application of menger s theorem ) .",
    "also , irrespective of the erroneous proofs in @xcite , theorem  [ thm : main](_b _ ) extends the claimed results in @xcite by deriving @xmath15 pairwise internally - disjoint paths from any block @xmath181 in @xmath17 to any block @xmath185 ( this scenario was not dealt with in @xcite ) .",
    "note also that the chance to obtain more than @xmath180 pairwise internally - disjoint paths comes about when we force @xmath317 and choose a @xmath175$]-transversal design ( if one exists ) .    of course ,",
    "theorem  [ thm : main ] yields path diversity in any dcn constructed using the @xmath0-step method with methods @xmath93 and @xmath95 .",
    "suppose that method @xmath93 has been used to construct a dcn where the number of server - nodes adjacent to some level-@xmath20 switch - node is at most the number of level-@xmath21 switch - nodes adjacent to the level-@xmath20 switch - node . if all level-@xmath20 switch - nodes are non - blocking then we can simultaneously facilitate data transfers from all the server - nodes adjacent to some level-@xmath20 switch - node to all the server - nodes adjacent to any other level-@xmath20 switch - node ( in fact , we need only that the source and destination level-@xmath20 switch - nodes are non - blocking ; all other level-@xmath20 switch - nodes can be blocking ) .      in this section ,",
    "we apply theorem  [ thm : main ] and p[rovide ome concrete illustrations of how we can obtain switch - centric dcns that have the same diameter as fat - tree yet have more server - nodes and significant one - to - one path diversity .",
    "the primary difficulty in the proof of theorem  [ thm : main ] is in dealing with when the @xmath24$]-transversal design is such that @xmath317 ( recall , @xmath375 ) .",
    "however , dealing with this difficulty is worth it as having the capability to use @xmath175$]-transversal designs when applying the construction means that we obtain more flexibility as to the number of switch ports necessarily required in the resulting dcns , as we illustrate now . in what follows ,",
    "we limit ourselves ( on the grounds of practicality ) to switch - nodes with at most @xmath376 ports . if we were only to use @xmath24$]-transversal designs where @xmath377@xmath378 ( note that each of these @xmath24$]-transversal designs exists ; see section  [ sec : tdesigns ] ) in the ( one - iteration ) @xmath0-step method then ( assuming that we use bipartite graphs @xmath53 that have the same number of nodes as blocks ; that is , for which @xmath379 ) we need level-@xmath21 switch - nodes with @xmath380 , @xmath381 , @xmath382 , @xmath383 , @xmath384 , @xmath120 , @xmath385 , @xmath386 or @xmath387 ports .",
    "if we allow @xmath24$]-transversal designs where @xmath388 ( again , note that each of these @xmath24$]-transversal designs exists ; see section  [ sec : tdesigns ] ) then we have added flexibility in that we can also build dcns with level-@xmath21 switch - nodes with @xmath1 , @xmath389 , @xmath390 , @xmath391 , @xmath392 , @xmath393 or @xmath394 ports ; of course , to ensure that we obtain full path diversity , we need that @xmath53 has at least @xmath21 internally - disjoint paths joining any two distinct blocks .    as regards finding large , regular , uniform bipartite graphs of line - diameter @xmath89 and so that there are at least @xmath21 internally - disjoint paths joining any two distinct blocks , this is not as straightforward as it is if we drop the second stipulation .",
    "there is an extensive literature as regards the construction of regular , uniform bipartite graphs of a given degree and where the degree is equal to the rank ( see , for example , @xcite ) but in so far as we are aware , the construction of such graphs with any added stipulations ( relating to connectivity , for example ) has not been considered .",
    "nevertheless , there are simple constructions that enable us to apply theorem  [ thm : main ] to the full , as we now illustrate .    from @xcite",
    ", there is a regular , uniform bipartite graph of degree and rank @xmath395 with @xmath396 nodes and @xmath396 blocks , and which has graph - theoretic diameter @xmath89 .",
    "enumerate the nodes as @xmath397 and the blocks as @xmath398 .",
    "take two disjoint copies of this graph and add @xmath399 edges joining @xmath400 in one graph to @xmath401 in the other graph ; moreover , the nodes ( resp . blocks ) of the new bipartite graph are exactly the nodes ( resp . blocks ) of the original disjoint copies .",
    "the resulting graph is a regular , uniform bipartite graph of degree and rank @xmath124 with graph - theoretic diameter at most @xmath151 ; furthermore , there are clearly at least @xmath21 internally - disjoint paths joining any pair of distinct blocks or any pair of distinct nodes where these paths have length at most @xmath1 .",
    "take this bipartite graph as @xmath53 .",
    "apply the @xmath0-step method using a @xmath402$]-transversal design .",
    "this results in a bipartite graph with @xmath403 nodes , @xmath404 blocks , degree @xmath124 , and rank @xmath392 .",
    "now apply method @xmath93 with @xmath405 and we obtain a dcn of diameter @xmath1 and with @xmath406 server - nodes , @xmath403 level-@xmath20 switch - nodes , @xmath407 level-@xmath21 switch - nodes and so that all switch - nodes have @xmath392 ports . by theorem  [ thm : main ] , there are paths from the @xmath408 server - nodes adjacent to the same level-@xmath20 switch - node @xmath409 to the @xmath408 server - nodes adjacent to another level-@xmath20 switch - node @xmath410 so that the only switch - nodes that lie on more than one of these paths are @xmath409 and @xmath410 and so that the length of each of these paths is at most @xmath150 . in addition , we have spare capacity at the level-@xmath20 switch - nodes @xmath409 and @xmath410 as @xmath124 links to level-@xmath21 switch - nodes are not used .",
    "alternatively ( for an increase in the number of server - nodes incorporated and in path diversity but so that more ports are required on switch - nodes ) , apply the @xmath0-step method using a @xmath123$]-transversal design .",
    "this results in a bipartite graph with @xmath411 nodes , @xmath412 blocks , degree @xmath124 , and rank @xmath120 .",
    "now apply method @xmath93 with @xmath405 and we obtain a dcn of diameter @xmath1 and with @xmath413 server - nodes , @xmath411 level-@xmath20 switch - nodes , @xmath414 level-@xmath21 switch - nodes and so that all switch - nodes have @xmath120 ports . by theorem  [ thm : main ] , there are paths from the @xmath415 server - nodes adjacent to the same level-@xmath20 switch - node @xmath409 to the @xmath415 server - nodes adjacent to another level-@xmath20 switch - node @xmath410 so that the only switch - nodes that lie on more than one of these paths are @xmath409 and @xmath410 and so that the length of each of these paths is at most @xmath150 .",
    "the actual construction used will be dominated by the available hardware ; that is , numbers of server - nodes and switch - nodes and the radix of switch - nodes .    undertaking more iterations of the @xmath21-step construction before building our dcns yields that if we use @xmath24$]-transversal designs where @xmath416@xmath417 then we need level-@xmath21 switch - nodes with@xmath418 , @xmath419 , @xmath420 or @xmath421 ports ; and if we use @xmath24$]-transversal designs where @xmath422@xmath423 then we need level-@xmath21 switch - nodes with an alternative range of port numbers . as an illustration , iterating the @xmath21-step method by mixing the use of @xmath424$]- and @xmath269$]-transversal designs , we can build dcns where the level-@xmath21 switch - nodes need @xmath1 , @xmath380 , @xmath389 , @xmath425 , @xmath408 , @xmath426 , @xmath383 , @xmath427 , @xmath428 , @xmath393 , @xmath385 , @xmath429 and @xmath430 ports .",
    "what is more , by theorem  [ thm : main ] , any bipartite graph built using the @xmath21-step method iterated more than once necessarily has maximal path diversity ( as applying the @xmath21-step method once always yields a bipartite graph where there are at least @xmath21 internally - disjoint paths joining any two distinct blocks ) .",
    "it has already been established in @xcite that the @xmath21-step and @xmath0-step methodologies are viable when it comes to building switch - centric dcns that can host more server - nodes than a fat - tree and retain an acceptable level of ( one - to - one ) path diversity whilst maintaining a diameter of @xmath1 ; we further cement this viability in this paper .",
    "an important point to note is that we need not choose our bipartite graph @xmath53 to be as large as we can ; as we have shown , smaller bipartite graphs might yield dcns with a sufficiently large number of server - nodes and optimal one - to - one path diversity .",
    "we now work towards building @xmath15 pairwise edge - disjoint paths from any block in some bipartite graph @xmath17 built using the @xmath21-step method to the blocks of any given multi - set of @xmath15 blocks ( so , there might possibly be repeated blocks ; here , @xmath17 and @xmath15 are as in the statement of theorem  [ thm : main ] but where @xmath344 ) .",
    "henceforth , when we write ` set ' we often mean ` multi - set ' .",
    "we begin by working only within some transversal design .",
    "[ thm : startpaths ] let @xmath25 be any @xmath24$]-transversal design where @xmath23 and where @xmath344 .",
    "let @xmath67 be any block and let @xmath431 be any @xmath15 nodes or blocks , called target - nodes or target - blocks , as appropriate , where there may be repetitions . for each @xmath432",
    ", there is a path @xmath359 from @xmath67 to @xmath433 of length at most @xmath395 so that these paths are pairwise edge - disjoint .    for each group of nodes @xmath434 within @xmath25 , where @xmath170 , let @xmath172 be the ( unique ) node of @xmath434 adjacent to the block @xmath67 ; we call the nodes @xmath435 _ root - nodes_. consider some group @xmath434",
    ". there may be target - nodes that are identical to the root - node @xmath172 ; call these target - nodes _ rooted _ , with the remaining target - nodes in @xmath434 called _ non - rooted_. call the number of rooted target - nodes in @xmath434 the _ multiplicity _ of the root - node @xmath172 .",
    "there are two essential cases : ( _ a _ ) we have @xmath15 target - nodes and no target - blocks ; ( _ b _ ) we have at least @xmath20 target - block .    : suppose that we have @xmath15 target - nodes and no target - blocks .",
    "we rank the groups of @xmath25 as @xmath436 in decreasing order of the number of occurrences of non - rooted target nodes within the group , with ties broken according to decreasing multiplicity of the root - nodes ( and then arbitrarily ) .",
    "we attempt to match the non - rooted target - nodes in @xmath437 with the root - nodes @xmath438 in this order but only if the root - node has multiplicity @xmath439 ( that is , we skip over root - nodes of non - zero multiplicity ; note that any skipped root - node is identical to at least @xmath20 target - node ) .",
    "if we are successful then we attempt to match the non - rooted target - nodes in @xmath440 by continuing down our list of root - nodes ( again , skipping over root - nodes of non - zero multiplicity ) .",
    "if we are successful then we attempt to match the non - rooted target - nodes in @xmath441 , and so on .",
    "there are three possibilities .",
    "* we successfully match every non - rooted target - node without running out of root - nodes ( of multiplicity @xmath439 ) .",
    "this happens when @xmath442 has non - zero multiplicity or when there is a root - node with multiplicity at least @xmath21 .",
    "* we successfully match all but one of the non - rooted target - nodes and the final non - rooted target - node does not lie in @xmath437 , in which case we match this target - node with @xmath442 .",
    "this happens when @xmath442 has multiplicity @xmath439 , every root - node has multiplicity at most @xmath20 , and there is a non - rooted target - node that does not lie in @xmath437 .",
    "* we have one non - rooted target - node of @xmath437 remaining to be matched and also the root - node @xmath442 unmatched .",
    "this happens when all of the non - rooted target - nodes lie in @xmath437 and @xmath442 has multiplicity @xmath439 .",
    "consider sub - case ( _ ii _ ) .",
    "we extend our matching so that every root - node of multiplicity @xmath20 is matched with the unique target - node that is identical to it .",
    "we have a complete matching of root - nodes to target - nodes so that no target - node is matched with the root - node in its own group unless the target - node is ( the unique target - node ) identical to the root - node . for every pair @xmath443 where @xmath444 is a root - node matched with a target - node @xmath445 and",
    "so that @xmath444 and @xmath445 do not lie in the same group , let @xmath446 be the block generated by @xmath444 and @xmath445 .",
    "call the resulting set of blocks the @xmath67-blocks . by lemma  [ lem : genblocks ] ,",
    "all of the @xmath67-blocks are distinct and different from @xmath67 .",
    "if @xmath446 is a @xmath67-block then define the path @xmath447 as @xmath448 ; and if the target - node @xmath445 is identical to the root - node @xmath444 then define the path @xmath447 as @xmath449 .",
    "the resulting @xmath15 paths are pairwise internally - disjoint .    consider sub - case ( _ iii _ ) .",
    "we have an almost complete matching of root - nodes to target - nodes so that no target - node is matched with the root - node in its own group , except that some target - node @xmath450 of @xmath437 is not matched and nor is the root - node @xmath442 .",
    "as we did above , we generate a set of @xmath67-blocks , one for each matched - pair .",
    "again , these @xmath67-blocks are all distinct and different from @xmath67 , and by proceeding as above we obtain @xmath451 pairwise internally - disjoint paths from @xmath67 to target - nodes .",
    "consider @xmath450 and @xmath442 .",
    "as @xmath452 , there is some node @xmath51 in the group @xmath440 that is neither a root - node nor a target - node .",
    "let @xmath453 ( resp .",
    "@xmath454 ) be the block generated by @xmath442 and @xmath51 ( resp . @xmath51 and @xmath450 ) . by lemma  [ lem : genblocks ]",
    ", @xmath453 is different from @xmath67 and every @xmath67-block ; also , @xmath454 is different from @xmath67 and @xmath453 .",
    "however , it could be that @xmath454 is identical to some @xmath67-block ( for this to happen we would need that @xmath450 is identical to some other target - node ) .",
    "if @xmath445 is the target - node of @xmath437 matched with @xmath455 then @xmath454 is different from @xmath456 .",
    "hence , there are at most @xmath457 @xmath67-blocks with which @xmath454 might be identical . as we have at least @xmath451 choices for @xmath51 in @xmath440 ( recall , @xmath344 ) , we can always choose @xmath51 so that @xmath454 is different from every @xmath67-block .",
    "define the path @xmath458 as @xmath459 .",
    "the resulting @xmath15 paths from @xmath67 to the target - nodes are pairwise internally - disjoint .",
    "consider sub - case ( _ i _ ) .",
    "we can extend our matching so that every root - node of non - zero multiplicity is matched with one target - node that is identical to it .",
    "hence , we have a partial matching of root - nodes to target - nodes so that no target - node is matched with the root - node in its own group unless the target - node is identical to the root - node .",
    "as we did above , we generate a set of @xmath67-blocks , one for each matched - pair where the root - node in the pair is different from its matched target - node .",
    "again , these @xmath67-blocks are all distinct and different from @xmath67 , and we obtain pairwise internally - disjoint paths from @xmath67 to all of the target - nodes involved .",
    "we also obtain paths of length @xmath20 from @xmath67 to every target - node that is identical to a root - node and has been matched with it .",
    "if there are no root - nodes of multiplicity greater than @xmath20 then the resulting @xmath15 paths are pairwise internally - disjoint and we are done .",
    "so , suppose that we have paths @xmath460 that are pairwise internally - disjoint and that there are @xmath461 root - nodes of multiplicity at least @xmath21 with @xmath462 unmatched root - nodes ( so , @xmath462 is the number of target - nodes remaining to be dealt with ; of course , @xmath463 ) . note that any group in which some hitherto unmatched root - node lies , apart from @xmath437 if @xmath442 is still unmatched ( that is , has multiplicity @xmath439 ) , contains no target - nodes ( because of the order in which we initially match target - nodes to root - nodes ) and the groups containing unmatched root - nodes are either @xmath464 , if @xmath442 is matched , or @xmath465 , if @xmath442 is unmatched .",
    "suppose that @xmath367 ; hence , there is exactly one root - node @xmath466 , where @xmath467 , of multiplicity greater than @xmath20 and this multiplicity is @xmath21 .",
    "w.l.o.g . let the solitary target - node remaining to be dealt with be @xmath468 ( which is identical to both @xmath466 and some other target - node @xmath469 ) , with the solitary root - node remaining to be dealt with being either @xmath470 or @xmath471 , as appropriate . if @xmath472 then we must have @xmath473 and @xmath474 with @xmath475 and @xmath476 so that the two target nodes @xmath469 and @xmath468 are both equal to @xmath442 ( note that in this case we define no @xmath67-blocks ) .",
    "let @xmath477 ( resp .",
    "@xmath478 , @xmath479 ) be the block generated by @xmath480 and @xmath442 ( resp . @xmath455 and @xmath481 , @xmath481 and @xmath480 ) .",
    "the blocks @xmath67 , @xmath477 , @xmath478 and @xmath479 are all distinct .",
    "define the path @xmath293 as @xmath482 and the path @xmath292 as @xmath483 ; the two paths are internally - disjoint and we are done .",
    "alternatively , suppose that @xmath367 and @xmath484 ( and so @xmath260 ) . if @xmath485 then there is a non - rooted target - node in each @xmath434 , for @xmath486 , with the unmatched root - node being @xmath442 .",
    "choose @xmath487 .",
    "otherwise , if @xmath488 then @xmath489 contains at most @xmath20 target - node , which , if it exists , is rooted , with the unmatched root - node being either @xmath442 or @xmath470 . choose @xmath490 .",
    "whichever is the case , let @xmath444 be the unmatched root - node ( and so @xmath491 ) .",
    "let @xmath492 ( resp .",
    "@xmath493 ) be the block generated by @xmath51 and @xmath468 ( resp . @xmath444 and @xmath51 ) . by lemma  [ lem : genblocks ] , the @xmath67-blocks , @xmath67 , @xmath492 and @xmath493 are all distinct .",
    "define the path @xmath494 as @xmath495 so as to obtain @xmath15 pairwise internally - disjoint paths from @xmath67 to the target - nodes ; hence , we are done .",
    "now suppose that @xmath351 ( note that @xmath496 ) . as stated above ,",
    "the root - nodes remaining to be dealt with are either @xmath497 or @xmath498 .",
    "suppose that the root - nodes remaining to be dealt with are @xmath497 and the target - nodes remaining to be dealt with are @xmath499 ( of course , every such target - node is identical to an already matched root - node ) .",
    "for each @xmath500 , let @xmath501 and choose @xmath502 ( from our earlier remark , there are no target - nodes in @xmath503 ) . for each @xmath504",
    ", let @xmath505 be the block generated by @xmath506 and @xmath507 , and let @xmath508 be the block generated by @xmath470 and @xmath509 ; call these blocks the @xmath510-blocks . by lemma  [ lem : genblocks ] , the @xmath510-blocks are distinct and each @xmath510-block is different from every @xmath67-block and @xmath67",
    ". for each @xmath500 , let @xmath511 be the block generated by @xmath512 and @xmath433 ; call these blocks the @xmath513-blocks .",
    "by lemma  [ lem : genblocks ] , each @xmath513-block is different from @xmath67 , every @xmath67-block and from every @xmath510-block ( note that any @xmath433 is a root - node and so not adjacent to any @xmath67-block or @xmath510-block ) .",
    "however , it is possible that @xmath514 , for @xmath39 ( for this to happen we would need that @xmath515 , as otherwise we would have two root - nodes adjacent to both @xmath67 and another block ) . note that for each @xmath500 : we have @xmath48 possible choices within @xmath503 for @xmath512 ; and for @xmath516 , where @xmath517 , the block @xmath518 , generated by @xmath519 and @xmath433 , is different from the block @xmath520 , generated by @xmath521 and @xmath433 .",
    "choose @xmath522 and @xmath523 .",
    "suppose we have that @xmath524 ; if so then re - choose @xmath525 .",
    "necessarily , @xmath526 . choose @xmath527 .",
    "suppose that @xmath528 ; if so then re - choose @xmath529 .",
    "suppose that @xmath530 ; if so then re - choose @xmath531 .",
    "necessarily , @xmath532 are distinct",
    ". proceed in this way until @xmath533 have been chosen .",
    "note that as @xmath496 , the above procedure can always be completed . what results is the set of distinct blocks @xmath534 . for each @xmath535 , define the path @xmath536 as @xmath537 , and define the path @xmath494 as @xmath538 .",
    "the resulting @xmath15 paths @xmath539 from @xmath67 to the target - nodes are pairwise internally - disjoint .    alternatively ,",
    "suppose that the root - nodes remaining to be dealt with are @xmath498 .",
    "we proceed exactly as above except that we start from a node @xmath540 that is different from any target - node ( such a node exists ) .",
    "we obtain our pairwise internally - disjoint paths as before .    :",
    "suppose that there is at least @xmath20 target - block .",
    "we may assume that the @xmath541 target - nodes @xmath542 , where @xmath543 , lie within the groups @xmath544 and that the target - blocks are @xmath545 .",
    "suppose that some target - block @xmath546 is adjacent to some root - node @xmath172 of some group @xmath434 , where @xmath547 and @xmath548 .",
    "remove the target - block @xmath549 ( temporarily ) from our set of targets and include the new target - node @xmath550 .",
    "iterate this process .",
    "hence , w.l.o.g .",
    "we may assume that : our target - nodes are the original target - nodes @xmath542 along with the new target - nodes @xmath551 , where each new target - node @xmath552 is adjacent to the now removed old target - block @xmath546 ; and our target - blocks are @xmath553 with none of these target - blocks adjacent to any root - node in the groups @xmath554 .",
    "for each @xmath547 : let the node @xmath555 be adjacent to @xmath556 ; and ( temporarily ) remove the target - block @xmath556 and include the new target - node @xmath557 .",
    "apply the construction in case ( _ a _ ) to our new set of @xmath15 target - nodes .",
    "we obtain @xmath15 paths , one from @xmath67 to each of our target - nodes so that these paths are internally - disjoint .",
    "consider some new target - node @xmath552 , where @xmath558 . by the construction of our paths",
    ", the path corresponding to this new target - node is @xmath559 and @xmath552 does not appear on any other path ( there is no repetition of @xmath552 in our set of target - nodes ) .",
    "extend the path @xmath559 to the path @xmath560 , for @xmath348 .",
    "consider some new target - node @xmath557 , where @xmath547 .",
    "suppose that the edge @xmath561 appears on some path . by the construction of our paths ,",
    "the only way that this can happen is if this edge is the last edge on the path from @xmath67 to @xmath557 .",
    "if this is the case then truncate this path at @xmath556 .",
    "alternatively , if the edge @xmath561 does not appear on some path then we extend the path from @xmath67 to @xmath557 by the addition of the edge to @xmath556 .",
    "consequently , we obtain a set of paths from @xmath67 to each of our original target - nodes and target - blocks so that these paths are pairwise edge - disjoint .",
    "note that : target - nodes only appear as destinations and apart from possibly target - nodes , no node appears on more than one path ; and no block appears on more than one path except possibly for some target - blocks ( which might appear as internal nodes on paths ) .",
    "the result follows .",
    "note that the construction in theorem  [ thm : startpaths ] is weaker than those in the previous section as we obtain only that paths are pairwise edge - disjoint rather than pairwise internally - disjoint .",
    "however , we do obtain the following result as an immediate corollary of the construction in theorem  [ thm : startpaths ] .",
    "let @xmath25 be any @xmath24$]-transversal design where @xmath23 and where @xmath344 .",
    "let @xmath67 be any block and let @xmath431 be any @xmath15 nodes , called target - nodes , where there may be repetitions . for each @xmath432",
    ", there is a path @xmath359 from @xmath67 to @xmath433 of length at most @xmath395 , so that the paths @xmath539 are pairwise internally - disjoint .",
    "we now build some many - to - many edge - disjoint paths within some transversal design .",
    "[ thm : endpaths ] let @xmath25 be any @xmath24$]-transversal design where @xmath562 and @xmath23 .",
    "let @xmath563 where @xmath564 .",
    "suppose that we are given @xmath541 nodes , the target - nodes , and @xmath462 blocks , the target - blocks , so that there might be repetitions amongst the target - nodes and target - blocks .",
    "suppose that @xmath565 is a group of nodes that contains no target - nodes .",
    "there exists a set @xmath566 of @xmath567 distinct nodes of @xmath565 such that there are @xmath567 pairwise internally - disjoint paths , each of length at most @xmath0 , the sources of which are the nodes of @xmath566 and the destinations of which are all the target - nodes and target - blocks .",
    "suppose that @xmath568 ( we ll deal with the case when @xmath366 later ) and suppose that the distinct target - blocks are @xmath569 , so that the target - blocks @xmath570 all lie in @xmath571 . furthermore , suppose that for each @xmath572 , the target - block @xmath546 is repeated @xmath400 times in the set of target - blocks .",
    "so , @xmath573 . we define that @xmath574 , for @xmath575 if , and only if , @xmath546 and @xmath576 are adjacent to the same node of @xmath565 .",
    "let @xmath577 ( where @xmath578 ) be representatives from the resulting equivalence classes ( so , @xmath579 ) and let @xmath580 be the node of @xmath565 adjacent to @xmath546 , for @xmath581 .",
    "thus , we immediately obtain @xmath14 paths @xmath582 of length @xmath20 from distinct nodes of @xmath565 to the target - blocks @xmath577 .    for ease of notation",
    ", we rename some of the groups of nodes of @xmath25 as @xmath583 so that no target - node lies in any of these groups ( note that the number of such groups is @xmath584 and so this is possible ) . for each @xmath585 and each @xmath586 , choose @xmath587 , and for each @xmath588 and each @xmath589 , choose @xmath587 , so that all chosen nodes are distinct . for each @xmath585 and each @xmath586 ,",
    "let @xmath590 be the unique node adjacent to @xmath546 , and for each @xmath588 and each @xmath589 , let @xmath590 be the unique node adjacent to @xmath546 .",
    "for each @xmath585 and each @xmath586 , let @xmath591 be the block generated by @xmath592 and @xmath593 , and for each @xmath588 and each @xmath589 , let @xmath591 be the block generated by @xmath592 and @xmath593 . call the resulting blocks generated the @xmath67-blocks .",
    "in particular , as every @xmath67-block is adjacent to a different node of @xmath565 , all @xmath67-blocks are distinct . moreover , as no target - block is adjacent to the same node of @xmath565 that any @xmath67-block is adjacent to , every @xmath67-block is different from every target - block . for each @xmath585 and each @xmath586 , define the path @xmath594 as @xmath595 , and for each @xmath588 and each @xmath589 , define the path @xmath594 as @xmath595 .",
    "the paths from the set @xmath596 are clearly internally - disjoint .",
    "write @xmath597 and suppose that the target - nodes are @xmath598 .",
    "let @xmath599 be distinct nodes of @xmath600 . for each @xmath601",
    ", let @xmath602 be the block generated by @xmath603 and @xmath604 . as above , all such blocks are distinct and different from any block generated so far . for each @xmath601",
    ", define the path @xmath605 as @xmath606 .",
    "the resulting set of paths @xmath607 is as required .    alternatively ,",
    "if @xmath366 then we dispense with the above construction of paths to target - blocks and proceed identically as regards the target - nodes .",
    "the result clearly follows .",
    "we are now in a position to use theorems  [ thm : startpaths ]  and  [ thm : endpaths ] to obtain the main result of this section .",
    "[ thm : mainonetomany ] let @xmath608 so that @xmath344 .",
    "let @xmath17 be built by the @xmath21-step method applied to the connected @xmath16-bipartite graph @xmath53 using the @xmath24$]-transversal design @xmath25 .",
    "let @xmath95 be some block of @xmath17 and let @xmath609 be blocks of @xmath17 that are not necessarily distinct but different from @xmath95 .",
    "there exists paths from @xmath95 to @xmath609 so that no edge of @xmath17 appears in more than one of these paths .",
    "let @xmath610 be the exact distinct blocks of @xmath53 such that @xmath611 contains the blocks @xmath609 within @xmath17 ( in particular , @xmath612 ) , and let @xmath613 be the block of @xmath53 such that @xmath614 contains the block @xmath95 within @xmath17 .",
    "let @xmath615 be a tree within @xmath53 that is rooted at @xmath613 and is such that : every block of @xmath616 appears in @xmath615 ; and all leaves of @xmath615 are blocks within @xmath616 .",
    "we use the tree @xmath615 as a skeleton so as to build our required paths in @xmath17 .    call the blocks @xmath609 the _ @xmath17-target - blocks_. label every node @xmath44 ( resp .",
    "block @xmath45 ) in @xmath615 with a non - negative integer @xmath617 ( resp .",
    "@xmath618 ) detailing the number of @xmath17-target - blocks that are associated with a block of @xmath615 that is a descendant of @xmath44 ( resp . a descendent of @xmath45 or with @xmath45 itself ) .",
    "so , for example , the root @xmath613 is such that @xmath619 and any leaf ( block ) @xmath45 of @xmath615 is such that @xmath618 is the number of @xmath17-target - blocks within @xmath57 .",
    "suppose that @xmath44 is some node of @xmath615 whose children are all leaves ( and so blocks ) .",
    "suppose that w.l.o.g .",
    "these children are @xmath620 . for each @xmath621 , by theorem  [ thm : endpaths ]",
    ", there exists a set @xmath622 of @xmath623 nodes of the group of nodes of @xmath17 associated with the node @xmath44 of @xmath53 so that there are @xmath623 pairwise internally - disjoint paths from the nodes of @xmath622 to the @xmath17-target - blocks associated with @xmath624 where each of these paths has length at most @xmath0 ( note that the edges of these paths lie in @xmath625 ; of course , the edges of @xmath625 are disjoint from the edges of @xmath626 , for any @xmath39 ) .",
    "consequently , we obtain a multi - set @xmath627 of @xmath617 nodes in the group of nodes in @xmath17 associated with the node @xmath44 of @xmath53 so that there are @xmath617 paths in @xmath628 from the nodes of @xmath629 to the @xmath17-target - blocks associated with the blocks @xmath620 .",
    "these @xmath617 paths are pairwise internally - disjoint but they might have common sources .",
    "suppose that @xmath45 is some non - root block of @xmath615 whose children are w.l.o.g . @xmath630 and so that the following holds :    * associated with each child @xmath631 is a multi - set @xmath622 of @xmath632 nodes in the group of nodes of @xmath17 associated with the node @xmath631 of @xmath53 * for each child @xmath631 , there are @xmath632 paths from the nodes of @xmath622 to the @xmath17-target - blocks associated with blocks that are descendants of @xmath631 in @xmath25 so that all of these paths have length at most @xmath633 * no edge of @xmath17 appears in more than one of the @xmath634 paths that are associated with some child of @xmath45 .",
    "let @xmath635 be the node of @xmath615 that is the parent of @xmath45 . by theorem  [ thm : endpaths ]",
    ", there is a set @xmath636 of @xmath637 nodes in the group of nodes of @xmath17 associated with @xmath635 together with @xmath637 paths from the nodes of @xmath636 to the nodes of @xmath638 in union with the @xmath17-target - blocks associated with @xmath45 where the paths are pairwise internally - disjoint and each path has length at most @xmath0 .",
    "hence , by concatenating the paths involved , we have @xmath639 paths from the nodes of @xmath636 to the @xmath17-target - blocks associated with all descendant blocks of @xmath635 in @xmath615 where no edge of @xmath17 appears in more than one of these paths and the length of any of these paths is at most @xmath640 .    finally , suppose that the children of @xmath613 in @xmath615 are w.l.o.g .",
    "@xmath630 and are such that the following holds :    * associated with each child @xmath631 is a multi - set @xmath622 of @xmath632 nodes in the group of nodes of @xmath17 associated with the node @xmath631 of @xmath53 * for each child @xmath631 , there are @xmath632 paths from the nodes of @xmath622 to the @xmath17-target - blocks associated with blocks that are descendants of @xmath631 in @xmath25 so that all of these paths have length at most @xmath633 * no edge of @xmath17 appears in more than one of the @xmath634 paths that are associated with some child of @xmath613 .    by theorem  [ thm : startpaths ] , we obtain paths from @xmath95 to the nodes of @xmath641 in union with the multi - set of blocks associated with @xmath613 so that no edge of @xmath17 appears in more than one of these paths and all paths have length at most @xmath395 . consequently , by concatenating paths , we obtain @xmath15 paths from @xmath95 to @xmath609 so that no edge of @xmath17 appears in more than one of these paths and the paths have length at most @xmath642 .",
    "the result follows by induction .",
    "moreover , it is easy to see that if the depth of @xmath615 is @xmath643 then the length of the longest of these paths is at most @xmath644 .",
    "we have two remarks as regards theorem  [ thm : mainonetomany ] : first , note the additional bound of @xmath644 on the lengths of the paths derived in the proof of theorem  [ thm : mainonetomany ] in terms of the height @xmath643 of the tree @xmath615 ; and , second , this theorem is weaker than theorem  [ thm : main ] in that in theorem  [ thm : mainonetomany ] the paths constructed are pairwise edge - disjoint rather than pairwise internally - disjoint as they are in theorem  [ thm : main ] .    of course , armed with the constructions of switch - centric dcns from section  [ sec : composition ]",
    ", it should be clear how we can obtain pairwise edge - disjoint paths joining all the server - nodes adjacent to some level-@xmath20 switch - node in some appropriately constructed dcn to any identically - sized set of distinct server - nodes ( irrespective of whether they are adjacent to different level-@xmath20 switch - nodes ) , so long as the number of server - nodes adjacent to some level-@xmath20 switch - node is no more than the number of level-@xmath21 switch - nodes adjacent to it .",
    "in this paper , we have shown how combinatorial design theory can be used to build switch - centric dcns of diameter at most @xmath1 and with many more server - nodes than the fat - tree dcn but so that there is still considerable one - to - one and one - to - many path diversity .",
    "we regard the more general demonstration that combinatorial mathematics can enhance the design of modern - day computational infrastructures such as data centres as one of the primary contributions of this paper . whilst we have demonstrated that combinatorial mathematics has the potential to add to and improve the design of dcns , the dcns obtained by our constructions need to be studied in much greater detail with regard to the numerous other properties that a switch - centric dcn has to have in order to make it viable as a practical dcn .",
    "for example : although we bound the diameter of our dcns , we need to derive ( optimal ) routing algorithms ( within bipartite graphs built using the @xmath21-step method ) so as to meet these bounds ; and ( as was noted in @xcite , it would be beneficial if the bisection width of the dcns constructed in this paper could be ascertained ( bisection width is often used as a proxy for throughput in dcns )",
    ".      it would be interesting to discover more mechanisms for converting bipartite graphs constructed using the @xmath21-step method into dcns than those developed in @xcite and detailed in section  [ sec : composition ] .",
    "we envisage that such a study would go hand - in - hand with research into building dcns which possess yet more beneficial properties as regards their efficacy as dcns ( as highlighted above ) .    as we mention in section  [ sec : applyingcons ] , our constructions have drawn attention to a hitherto unstudied problem in combinatorics namely the construction of regular , uniform bipartite graphs with additional properties such as having at least @xmath21 internally - disjoint paths joining any two blocks . it would be interesting to study problems such as this in a solely mathematical context .",
    "our results have hinted that the study of transversal designs as bipartite graphs and in a graph - theoretic context is worth pursuing .",
    "for example , if one looks at theorem  [ thm : main ] then there are @xmath15 pairwise internally - disjoint paths , each of length at most @xmath1 , joining any two distinct blocks in some transversal design @xmath25 ; and if one looks at theorem  [ thm : startpaths ] then , if @xmath344 , there are @xmath15 pairwise edge - disjoint paths , each of length at most @xmath1 , joining any given source block with any given multi - set of @xmath15 target blocks in some transversal design @xmath25 .",
    "such results might be of independent interest within some appropriate network context . within a dcn @xmath22 built using the @xmath21-step method , there are many ` copies ' of the bipartite graph corresponding to the chosen transversal design .",
    "these copies and the above constructions might be utilized where there is traffic localization , e.g. , in a virtualization context where many guest dcns are embedded within the dcn @xmath22 .        j.h .",
    "ahn , n. binkert , a. davis , m. mclaren and r.s .",
    "schreiber , `` hyperx : topology , routing , and packaging of efficient large - scale networks '' , _ proc . of conf . on high performance computing networking , storage and analysis _",
    ", 2009 , article no .",
    "41 .",
    "colbourn , j.h .",
    "dinitz and d.r .",
    "stinson , `` applications of combinatorial designs to communications , cryptography and networking '' , surveys in combinatorics ( ed . j.d .",
    "lamb and d.a .",
    "preece ) , cambridge university press , 1999 , pp .",
    "37100 .",
    "a. greenberg , j.r .",
    "hamilton , n. jain , s. kandula , c. kim , p. lahiri , d.a .",
    "maltz , p. patel and s. sengupta , `` vl2 : a scalable and flexible data center network '' , _ sigcomm computer communication review _ , vol .",
    "39 , no . 4 , 2009 , pp . 5162 .",
    "b. heller , s. seetharaman , p. mahadevan , y. yiakoumis , p. sharma , s. banerjee and n. mckeown , `` elastictree : saving energy in data center networks '' , _ proc .",
    "_ _ 7__th usenix conf . on networked systems design and implementation _  , 2006 , pp .",
    "249264 .",
    "mysore , a. pamboris , n. farrington , n. huang , p. miri , s. radhakrishnan , v. subramanya and a. vahdat , `` portland : a scalable fault - tolerant layer 2 data center network fabric '' , _ sigcomm computer communication review _",
    "39 , no . 4 , 2009 , pp . 3950 .",
    "g. qu , z. fang , j. zhang and s .- q .",
    "zheng , `` switch - centric data center network structures based on hypergraphs and combinatorial block designs '' , _ ieee transactions on parallel and distributed systems _ , vol .",
    "26 , no . 4 , 2015 , pp ."
  ],
  "abstract_text": [
    "<S> the theory of combinatorial designs has recently been used in order to build switch - centric data centre networks incorporating a large number of servers , in comparison with the popular fat - tree data centre network . </S>",
    "<S> the construction employed , called the @xmath0-step method , revolves around an appropriately chosen ( but relatively small ) bipartite graph and a transversal design . in this paper , we clarify and extend these recent results . </S>",
    "<S> in particular , we prove the following path diversity results : in a one - to - one context , we prove that in these data centre networks there are pairwise link - disjoint paths joining all the servers adjacent to some switch with all the servers adjacent to any other switch so that we retain control of the path lengths ( these results are optimal in terms of the numbers of paths constructed and we prove that we have a wide choice of bipartite graph and transversal design to which we can apply the @xmath0-step method ) ; and in a one - to - many context , we prove that there are pairwise link - disjoint paths from all the servers adjacent to some switch to any identically - sized collection of target servers where these target servers need not be adjacent to the same switch ( again , we keep control of the path lengths ) . </S>",
    "<S> our constructions and analysis are undertaken on bipartite graphs with the applications to data centre networks being easily derived . </S>",
    "<S> our results strengthen the overall competitiveness of data centre networks constructed using the @xmath0-step method , in comparison with fat - tree data centre networks , and , more generally , show the potential of results and methodologies from combinatorics to data centre network design .    </S>",
    "<S> data centre networks , switch - centric data centre networks , fat - trees , combinatorial designs , bipartite graphs , path diversity </S>"
  ]
}
{
  "article_text": [
    "the surface code  @xcite is one of the simplest and most studied quantum error correcting codes .",
    "it can be realized on a two - dimensional grid of qubits such that the codespace is defined by simple four - qubit parity check operators acting on nearest - neighbor qubits .",
    "recent years have witnessed a surge of interest in the surface code as a promising architecture for a scalable quantum computing  @xcite .",
    "experimental advances in manufacturing of multi - qubit devices  @xcite give us hope that a small - scale quantum memory based on the surface code may become a reality soon . given high operational costs of a quantum hardware compared with the classical one , it is crucial to put enough efforts in optimizing algorithmic , or software aspects of error correction . in the present paper we focus on optimizing the decoding algorithm that takes as input measured syndromes of the parity checks and computes a recovery operation returning a corrupted state of the memory back to the codespace .",
    "as the name suggests , the maximum likelihood decoder ( mld ) is an algorithm that finds a recovery operation maximizing the probability of a successful error correction conditioned on the observed error syndrome . by definition",
    ", mld is the optimal error correction algorithm for a fixed quantum code and a fixed noise model .",
    "the first rigorous definition of mld for the surface codes was proposed by dennis et al  @xcite .",
    "an important observation made in  @xcite was that the computational problem associated with mld can be reduced to computing the partition function of a classical ising - like hamiltonian on the two - dimensional lattice .",
    "this observation has generated a vast body of work exploring connections between mld and the statistical physics of disordered ising - like hamiltonians , see for instance  @xcite .",
    "the insights made in  @xcite have also guided the search for efficient implementations of mld .",
    "although an exact and efficient algorithm for mld remains an elusive goal , several approximate polynomial - time algorithms have been discovered , most notably the renormalization group decoder due to duclos - cianci and poulin  @xcite , and the markov chain monte carlo method due to hutter , wootton , and loss  @xcite . in the case of concatenated codes",
    "an efficient exact algorithm for mld based on the message passing algorithm was proposed by poulin  @xcite . by comparing mld with the level - by - level decoder commonly used for concatenated codes , ref .",
    "@xcite found that mld offers a significant advantage with almost two - fold increase of the error threshold for the depolarizing noise and a significant reduction of the logical error probability .",
    "here we propose an alternative method of implementing mld in the case of the surface code for two simple noise models known as the bit - flip noise and the depolarizing noise .",
    "our method combines the ideas of dennis et al  @xcite and the standard classical - to - quantum mapping from classical 2d spin systems in the thermal equilibrium to quantum 1d spin chains .",
    "it enables us to reduce the computational problem associated with mld to simulating a particular type of quantum dynamics for a chain of qubits .    in the case of the bit - flip noise",
    ", mld can be reduced to simulating a quantum circuit with a special type of two - qubit nearest - neighbor gates known as matchgates .",
    "it was shown by valiant  @xcite that quantum circuits composed of matchgates can be efficiently simulated by classical means .",
    "matchgate circuits and their generalizations give rise to efficient holographic algorithms for certain combinatorial problems  @xcite and efficient tensor network contraction methods  @xcite .",
    "matchgate - based algorithms have been used to simulate quantum dynamics in systems of fermionic modes with quadratic interactions  @xcite and study statistics of dimer coverings in classical lattice models  @xcite .",
    "here we demonstrate that matchgates also have applications for quantum error correction . our simulation algorithm based on fermionic gaussian states",
    "@xcite provides an exact implementation of mld with the running time @xmath0 , where @xmath1 is the number of code qubits .",
    "the same algorithm can also be applied to a noise model with independent bit - flip and phase - flip errors .",
    "we note that a similar but technically different algorithm has been used by merz and chalker in the numerical study of the random - bond 2d ising model  @xcite .    in the case of the depolarizing noise",
    ", mld can be reduced to simulating the dynamics generated by matrix product operators with a small bond dimension . to perform the simulation",
    "efficiently we conjecture that all intermediate states generated by this dynamics are weakly entangled .",
    "this enables us to employ a vast body of efficient classical algorithms for simulating weakly entangled quantum spin chains based on matrix product states ( mps ) , see  @xcite .",
    "our approximate implementation of mld for the depolarizing noise has running time @xmath2 where @xmath3 is a parameter that controls the approximation precision ( the bond dimension of the mps ) .",
    "although we do not have any rigorous arguments in support of the weak entanglement conjecture , it reflects the physical intuition that the classical 2d spin system associated with mld has a finite correlation length for error rates below the threshold  @xcite .",
    "accordingly , one should expect that the classical - to - quantum mapping can not generate highly entangled states since the latter require long - range correlations .",
    "furthermore , we have justified the conjecture numerically by applying the mps - based decoder to the bit - flip noise  .",
    "we observed that the logical error probabilities of the exact mld and the mps - based decoder with a relatively small bond dimension @xmath5 are virtually indistinguishable .",
    "likewise , in the case of the depolarizing noise we observed that the logical error probability exhibits a fast convergence as a function of @xmath3 suggesting that the mps - based decoder with @xmath5 implements nearly exact mld .",
    "finally , we benchmark the exact and the approximate implementations of mld against the commonly studied minimum weight matching ( mwm ) decoder  @xcite .",
    "the benchmarking was performed for a fixed code distance @xmath6 and a wide range of error rates . in the case of the bit - flip noise we observed",
    "that the mwm decoder approximates the logical error probability of mld within a factor of two .",
    "the observed difference between mld and the mwm decoder can be attributed to the fact that the latter ignores the error degeneracy  @xcite . since the observed difference is relatively small ,",
    "we conclude that ignoring the error degeneracy does not have a significant impact on the decoder s performance for the studied noise model . in the case of the depolarizing noise",
    "we observed that the mps - based decoder is far superior than the mwm decoder offering more than two orders of magnitude reduction of the logical error probability even for small values of @xmath3 .",
    "this can be attributed to the fact that the mwm decoder often fails to find the minimum weight error consistent with the syndrome since it ignores correlations between @xmath7 and @xmath8 errors  @xcite .",
    "the rest of the paper is organized as follows .",
    "we formally define the maximum likelihood decoder , the studied noise models , and the surface code in sections  [ sect : mld],[sect : noise ] , and  [ sect : scodes ] respectively .",
    "our exact implementation of mld for the bit - flip noise is described in section  [ sect : xnoise ] .",
    "the approximate implementation of mld based on matrix product states is presented in section  [ sect : xyznoise ] . a comparison between the exact mld , the approximate mld with various bond dimensions @xmath3 , and the minimum weight matching decoder is presented in section  [ sect : numerics ] that describes our numerical results .",
    "in this section we formally define mld . we consider a quantum memory composed of @xmath1 physical qubits .",
    "let @xmath9 be the full @xmath1-qubit hilbert space and @xmath10 be the group of @xmath1-qubit pauli operators .",
    "by definition , any element of @xmath10 has a form @xmath11 , where @xmath12 are single - qubit pauli operators and @xmath13 is an overall phase factor .",
    "a quantum code of stabilizer type is defined by an abelian _ stabilizer group _ @xmath14 such that @xmath15 .",
    "quantum codewords are @xmath1-qubit states invariant under the action of any element of @xmath16 .",
    "such states define a _ codespace _ @xmath17 the encoding step amounts to initializing the memory in some ( unknown ) state @xmath18 supported on the codespace @xmath19 .",
    "we shall consider a stochastic pauli noise described by a linear map @xmath20 where @xmath21 is some normalized probability distribution on the pauli group . since the initial state @xmath18 is supported on the codespace @xmath19 , one has @xmath22 for any @xmath23 . by the same token ,",
    "@xmath24 whenever @xmath25 .",
    "given a pauli operator @xmath26 , a subset @xmath27 is called a _ coset _ of @xmath16 .",
    "clearly , @xmath10 is a disjoint union of cosets @xmath28 , where @xmath29 is some fixed representative of @xmath30 .",
    "the above shows that errors in the same coset have the same action on the codespace .",
    "thus @xmath31 where the sum ranges over all cosets of @xmath16 and @xmath32 for simplicity , here we assumed that all coset representatives @xmath29 are hermitian operators .",
    "we shall refer to the quantity @xmath33 as a _",
    "coset probability_.    at the decoding step one attempts to guess the coset of the stabilizer group that contains the actual error based on a partial information about the error known as a syndrome .",
    "more precisely , let @xmath34 be some fixed set of generators of @xmath16 .",
    "since the generators @xmath35 pairwise commute , they can be diagonalized simultaneously",
    ". a configuration of eigenvalues @xmath36 can be described by a _ syndrome _",
    "@xmath37 such that @xmath38 for all @xmath39 .",
    "assuming that the generators @xmath35 are independent , there are @xmath40 possible syndromes .",
    "the full hilbert space can be decomposed into a direct sum of syndrome subspaces @xmath41 where @xmath42 .",
    "note that the codespace @xmath19 corresponds to the zero syndrome . a pauli operator @xmath26 is said to have a syndrome @xmath43 iff @xmath44 for all @xmath39 .",
    "equivalently , @xmath45 has a syndrome @xmath43 iff @xmath46 . for each syndrome",
    "@xmath43 let us choose some fixed pauli operator @xmath47 with the syndrome @xmath43 .",
    "one can easily check that the set of all pauli operators with a syndrome @xmath43 coincides with the coset @xmath48 , where @xmath49 is a group known as the centralizer of @xmath16 .",
    "note that @xmath50 .",
    "thus each coset of @xmath51 can be partitioned into a disjoint union of several cosets of @xmath16 . in the present paper we only consider stabilizer codes with a single logical qubit .",
    "let @xmath52 be the logical pauli operators on the encoded qubit .",
    "then each coset of @xmath51 consists of four disjoint cosets of @xmath16 , namely , @xmath53 where @xmath54 @xmath55    the decoding step starts by a _ syndrome measurement _ that projects the corrupted state @xmath56 onto one of the syndrome subspaces @xmath57 .",
    "the above arguments show that @xmath58 has support on @xmath57 iff @xmath59 .",
    "thus the syndrome measurement reveals the coset of @xmath51 that contains the error @xmath45 , whereas our goal is to determine which coset of @xmath16 contains @xmath45 . using eqs .",
    "( [ eq : final1],[eq : cg1]-[eq : cg3 ] ) one can write the post - measurement ( unnormalized ) state as @xmath60 where @xmath43 is the observed syndrome . here",
    "we assumed for simplicity that @xmath47 and the logical operators @xmath61 are hermitian .",
    "this shows that the effective noise model conditioned on the syndrome can be described by applying one of the four pauli errors @xmath62 , and @xmath63 with probabilities @xmath64 , and @xmath65 respectively .",
    "clearly , the best possible error correction algorithm for this effective noise model is to choose a recovery operator as the most likely of the four errors .",
    "equivalently , we should choose a recovery operator as any pauli operator that belongs to the most likely of the four cosets @xmath66 which we denote @xmath67 .",
    "these steps can be summarized as follows .",
    "the final step of the decoding is to apply the optimal recovery operator @xmath68 .",
    "it results in a state @xmath69 .",
    "we conclude that mld correctly identifies the coset of @xmath16 that contains the actual error and maps the corrupted state @xmath56 back to the encoded state @xmath18 with a probability @xmath70 in what follows we shall always ignore overall phase factors of pauli operators .",
    "such phase factors are irrelevant for our purposes since they do not change the outcome of error correction .",
    "we shall consider a stochastic i.i.d .",
    "pauli noise @xmath71 where @xmath72 and @xmath73 is called an _ error rate_. two commonly studied noise models are the classical bit - flip noise where only @xmath7-type errors are allowed ( the x - noise ) and the depolarizing noise where all types of errors are equally likely .",
    "the formal definitions are given below .",
    "@xmath74 the corresponding probability distributions on the pauli group are @xmath75 for the depolarizing noise and @xmath76 for the x - noise . here",
    "@xmath77 denotes the hamming weight of @xmath45 , that is , the number of qubits on which @xmath45 acts nontrivialy , while @xmath78 denotes the subgroup generated by single - qubit pauli @xmath7 operators .",
    "one may also consider a noise model with independent bit - flip and phase - flip errors , that is , @xmath79 and @xmath80 .",
    "since there are no correlations between the two types of errors , one can perform error correction independently for bit - flip and phase - flip errors . furthermore , since correcting phase - flip errors is equivalent to correcting bit - flip errors on the surface code lattice rotated by @xmath81 , it suffices to consider the @xmath7-noise model only .",
    "we consider the surface code on a square lattice of size @xmath82 with open boundary conditions .",
    "the boundaries parallel to the horizontal ( vertical ) axis are smooth ( rough ) . the surface code lattice with @xmath83 is shown on fig .  [ fig : d3 ] .",
    "for the chosen geometry the surface code encodes one logical qubit into @xmath84 physical qubits with the minimum distance @xmath85 .",
    "we shall always consider odd values of @xmath85 such that the code corrects any combination of @xmath86 single qubit errors .",
    "let @xmath87 and @xmath88 be the stabilizers of the surface code associated with a site @xmath89 and a plaquette @xmath90 respectively .",
    "we have @xmath91 , where the product runs over all edges @xmath92 making up the boundary of @xmath90 .",
    "likewise , @xmath93 , where the product runs over all edges @xmath92 incident to @xmath89 .",
    "let @xmath94 and @xmath95 be the subgroups of the pauli group @xmath10 generated by all site stabilizers and all plaquette stabilizers respectively .",
    "finally , let @xmath96 be the full stabilizer group .",
    "logical pauli operators @xmath97 are shown on fig .",
    "[ fig : logical ] , while @xmath98 .     surface code .",
    "solid dots , stars , and diamonds indicate locations of qubits , site stabilizers , and plaquette stabilizers respectively .",
    "stabilizers located near the boundary act only on three qubits .",
    "the distance-@xmath85 surface code has @xmath99 qubits on horizontal edges , @xmath100 qubits on vertical edges , and @xmath101 stabilizers of each type .",
    "[ fig : d3 ] , height=226 ]     ( left ) and @xmath102 ( right ) .",
    "[ fig : logical ] , width=264 ]    by a slight abuse of notations , below we shall often identify a pauli operator @xmath45 with the subset of edges in the lattice on which @xmath45 acts non - trivially .",
    "in this section we consider the x - noise and describe an exact implementation of mld .",
    "we begin by specializing mld to the x - noise ( section  [ sect : mld4x ] ) and describing our algorithm ( section  [ sect : algorithm1 ] ) .",
    "a reader interested only in the question of _ how _ the algorithm works can skip the remaining sections explaining _ why _ it works and proving its correctness .",
    "specifically , section  [ sect : reduction ] shows how to express the coset probability as a matrix element of a matchgate quantum circuit .",
    "our derivation partially follows the one of refs .",
    ". an efficient method of simulating matchgate circuits based on fermionic gaussian states is described in section  [ sect : gaussian ] .",
    "the material of this section mostly follows ref .",
    "@xcite .",
    "let @xmath43 be the input syndrome and @xmath103 be some fixed pauli error consistent with @xmath43 .",
    "we can always choose @xmath104 , that is , such that @xmath47 acts on any qubit by @xmath105 or @xmath7 .",
    "indeed , since only @xmath7-type errors can appear with a non - zero probability , the syndromes of all plaquette stabilizers must be zero .",
    "let @xmath106 be the syndrome of a site stabilizer @xmath87 .",
    "we choose the desired error @xmath47 by connecting each site @xmath89 with a non - zero syndrome @xmath106 to the left boundary by a horizontal string of @xmath7 errors and adding all such strings modulo two .",
    "note that @xmath47 can be constructed in time @xmath107 .",
    "let @xmath21 be the probability distribution on the pauli group describing the x - noise , see section  [ sect : noise ] . to implement the ml decoder it suffices to compute the four coset probabilities @xmath64 , and @xmath65 as defined in section  [ sect : mld ] .",
    "note that @xmath108 since any element of these two cosets acts by pauli @xmath8 on at least @xmath85 qubits .",
    "choose any logical operator @xmath109 and let @xmath110 .",
    "from now on we shall assume that @xmath45 is fixed .",
    "since @xmath8-type errors are not allowed , one has @xmath111 .",
    "thus it suffices to compute the coset probability @xmath112 .      in this section",
    "we describe an algorithm that takes as input an @xmath7-type pauli operator @xmath45 and outputs the coset probability @xmath112 .",
    "the algorithm has running time @xmath0 .",
    "let us begin by introducing some notations .",
    "the sets of all horizontal and vertical edges of the surface code lattice will be denoted @xmath113 and @xmath114 respectively . for the code of distance @xmath85 one has @xmath115 and @xmath116 .",
    "we partition the set @xmath113 into columns of edges such that @xmath117 where @xmath118 denotes the @xmath119-th leftmost column of horizontal edges , see fig .",
    "[ fig : layers ] .",
    "edges of every column @xmath118 will be labeled by integers @xmath120 starting from the top edge .",
    "likewise , @xmath121 where @xmath122 denotes the @xmath119-th leftmost column of vertical edges , see fig .  [",
    "fig : layers ] . edges of every column @xmath122 will be labeled by integers @xmath123 starting from the top edge .",
    "we shall refer to @xmath118 and @xmath122 as horizontal and vertical columns respectively .     and vertical columns @xmath124 .",
    "every edge is identified with the respective code qubit ( solid dot ) .",
    "[ fig : layers ] , height=188 ]    for each edge @xmath92 of the surface code lattice define a weight @xmath125 recall that @xmath126 is the error rate .    for",
    "any integer @xmath127 and a vector @xmath128 let @xmath129 be the anti - symmetric matrix of size @xmath130 that contains @xmath131 above the main diagonal and @xmath132 below the main diagonal .",
    "for example , if @xmath133 then @xmath134.\\ ] ] let @xmath135 be the diagonal matrix of size @xmath136 that contains @xmath131 on the main diagonal . define also a standard antisymmetric matrix @xmath137 } & & & \\\\ & & \\ddots & & \\\\ & & & { \\left [ { \\begin{array}}{cc }   0 & 1\\\\ -1 & 0 \\\\ { \\end{array}}\\right ] }   & \\\\ -1 & & & & 0 \\\\ { \\end{array}}\\right]\\ ] ] such that @xmath138 has size @xmath139 .",
    "the matrix @xmath138 contains @xmath140 blocks of size @xmath141 on the main diagonal and two non - zero elements @xmath142 .",
    "all remaining elements of @xmath138 are zero .",
    "let @xmath105 be the identity matrix of size @xmath139 .",
    "the first step of our algorithm is to compute the probability of the input error @xmath143 and the coefficients @xmath144 defined in eq .",
    "( [ eq : wj ] ) .",
    "this step takes time @xmath107 . at each subsequent step of the algorithm",
    "we maintain a pair @xmath145 , where @xmath146 is an antisymmetric real matrix of size @xmath139 and @xmath147 is a real number .",
    "the algorithm calls two functions simulatehorizontal@xmath148 and simulatevertical@xmath148 that update the pair @xmath145 by applying a simple combination of matrix inversions and matrix multiplications .",
    "if implemented naively , each matrix inversion and each matrix multiplication takes time @xmath149 .",
    "likewise , computing each determinant takes time @xmath149 .",
    "simple counting then shows that the overall running time of the algorithm is @xmath150 .",
    "suggestions on improving stability of the algorithm against rounding errors can be found in section  [ sect : numerics ] .",
    "consider any stabilizer @xmath151 .",
    "a simple algebra shows that @xmath152 where @xmath144 are the weights defined in eq .",
    "( [ eq : wj ] ) .",
    "thus @xmath153 where @xmath154 is the list of coefficients @xmath144 and @xmath155    since the factor @xmath156 is easy to compute , below we concentrate on computing @xmath157 .",
    "we shall express @xmath157 as a matrix element of a certain quantum circuit acting on @xmath85 qubits .",
    "the circuit will be composed of single - qubit and two - qubit gates @xmath158 \\quad \\mbox{and}\\quad   g'(w)\\equiv   \\left [ { \\begin{array}}{cccc } 1 & 0 & 0 & w \\\\ 0 & 1 & w & 0 \\\\ 0 & w & 1 & 0\\\\ w & 0 & 0 & 1\\\\ { \\end{array}}\\right]\\ ] ] where @xmath159 is a real parameter .",
    "we note that @xmath160 and @xmath161 are not unitary gates .",
    "let @xmath162 be the hilbert space of @xmath85 qubits .",
    "for each horizontal column @xmath118 and each vertical column @xmath122 defined at fig .",
    "[ fig : layers ] define linear operators @xmath163 acting on @xmath164 such that @xmath165 and @xmath166 here the subscripts indicate the qubits acted upon by each gate and @xmath167 denotes the @xmath168-th edge of the respective columns @xmath118 and @xmath122 counting from the top to the bottom . finally , define a state @xmath169 is the set of all @xmath85-bit binary strings with the even hamming weight .",
    "[ lem : mgates ] one has @xmath170 where @xmath171 is a quantum circuit on @xmath85 qubits shown at fig .",
    "[ fig : mgates ] .",
    "-noise model is equivalent to computing the matrix element @xmath172 , where @xmath173 is a quantum circuit on @xmath85 qubits shown above and @xmath174 is the superposition of all even - weight @xmath85-bit strings .",
    "the above example is for @xmath83 .",
    "each gate depends on a parameter @xmath144 defined in eq .",
    "( [ eq : wj ] ) .",
    "[ fig : mgates ] , height=226 ]    the gates @xmath160 and @xmath161 defined in eq .",
    "( [ eq : gates ] ) are examples of the so - called matchgates discovered by valiant  @xcite .",
    "it was shown in  @xcite that quantum circuits composed of matchgates can be efficiently simulated by classical means . in the next section we describe an alternative algorithm for computing the quantity @xmath175 based on fermionic gaussian states with a running time @xmath0 .",
    "( for comparison , the original algorithm of ref .",
    "@xcite would have running time @xmath176 since it requires computing the pfaffian of a matrix of size @xmath107 . )    in the rest of this section we prove lemma  [ lem : mgates ] .    [ prop : trivial ] for any subset @xmath177 such that @xmath178 is even for all @xmath179 there exists a unique @xmath151 such that @xmath180 .",
    "recall that a subset of edges @xmath68 is called a cycle iff any site has even number of incident edges from @xmath68 .",
    "let us first show that for any @xmath177 there exists exactly one cycle @xmath68 such that @xmath180 .",
    "indeed , consider any vertical column @xmath122 .",
    "it comprises a set of sites @xmath181 and a set of edges @xmath182 ( listed in the order from the top to the bottom ) . since @xmath183 and @xmath184 , the cycle condition at @xmath185 uniquely determines @xmath186 .",
    "once @xmath186 is determined , the cycle condition @xmath187 uniquely determines @xmath188 .",
    "continuing in this fashion uniquely determines @xmath189 .",
    "since @xmath122 can be any vertical column , we conclude that @xmath68 is uniquely determined by @xmath190 .",
    "it remains to note that @xmath191 coincides with the set of cycles that have even intersection with any column @xmath118 .",
    "let @xmath192 be the pauli operator constructed in proposition  [ prop : trivial ] .",
    "then @xmath193 where the sum ranges over all subsets @xmath190 such that @xmath178 is even for all @xmath119 .",
    "let @xmath194 .",
    "we can regard @xmath195 as a binary @xmath85-bit string such that @xmath196 iff the @xmath168-th edge of @xmath118 belongs to @xmath190 .",
    "let @xmath197 be the basis vector corresponding to @xmath195 . since @xmath198 , we have @xmath199 where @xmath200 are the edges comprising the column @xmath118 listed in the order from the top to the bottom and @xmath160 is the single - qubit gate defined in eq .",
    "( [ eq : gates ] ) .",
    "consider now some vertical column @xmath122 .",
    "let @xmath182 be the edges comprising @xmath122 listed in the order from the top to the bottom .",
    "we claim that @xmath201 where @xmath161 is the two - qubit gate defined in eq .",
    "( [ eq : gates ] ) and @xmath202 denotes the gate @xmath161 applied to the pair of qubits @xmath203 .",
    "one can easily check eq .",
    "( [ eq : zloops4 ] ) by noting that @xmath204 and following the arguments given in proof of proposition  [ prop : trivial ] to reconstruct @xmath205 from @xmath195 and @xmath206 .",
    "let @xmath207 be the set of all @xmath85-bit strings with even hamming weight .",
    "combining eqs .",
    "( [ eq : zloops2],[eq : zloops3],[eq : zloops4 ] ) one arrives at @xmath208 where @xmath209 and @xmath210 are the linear operators on @xmath164 defined in eqs .",
    "( [ eq : hath],[eq : hatv ] ) .",
    "let @xmath211 be the subspace spanned by vectors @xmath212 with @xmath213 .",
    "note that the operators @xmath209 and @xmath210 preserve @xmath214 since the gates @xmath160 and @xmath161 preserve the hamming weight modulo two .",
    "the above observations imply that @xmath215 , which completes the proof of lemma  [ lem : mgates ] .",
    "let @xmath164 be the hilbert space of @xmath85 qubits .",
    "for each @xmath216 define a _",
    "majorana operator _",
    "@xmath217 acting on @xmath164 such that @xmath218 the majorana operators obey the well - known commutation rules @xmath219 we shall often use a formula",
    "@xmath220    a _ covariance matrix _ of a pure ( unnormalized ) state @xmath221 is a @xmath139 matrix @xmath146 with matrix elements @xmath222 from eq .",
    "( [ eq : cr ] ) one can easily check that @xmath146 is a real anti - symmetric matrix .",
    "consider as an example the state @xmath174 defined in eq .",
    "( [ eq : psi ] ) .",
    "let us compute its covariance matrix @xmath146 .",
    "one can easily check that @xmath174 is a stabilizer state with the stabilizer group @xmath223 applying eq .",
    "( [ eq : useful ] ) one can get an alternative set of generators that are quadratic in majorana operators , @xmath224 this shows that @xmath225 for all @xmath226 and @xmath227 .",
    "furthermore , @xmath228 whenever @xmath229 anti - commutes with at least one of the generators defined in eq .",
    "( [ eq : gens ] ) . combining the above observations one can easily check that @xmath230 , where @xmath138 is the standard anti - symmetric matrix defined in eq .",
    "( [ eq : m0 ] ) .",
    "a state @xmath221 is said to obey the wick s theorem iff the expectation value of any even tuple of majorana operators on @xmath231 can be computed from its covariance matrix @xmath146 using the formula @xmath232 where @xmath233 is the norm of @xmath231 , @xmath234 is the @xmath235 submatrix of @xmath146 formed by the rows and columns @xmath236 , and @xmath237 is the pfaffian  @xcite . recall that the pfaffian of an anti - symmetric matrix @xmath238 of size @xmath235 is defined as @xmath239 where @xmath240 stands for the anti - symmetrization over all @xmath241 permutations of indexes .",
    "for example , @xmath242 for @xmath243 and @xmath244 for @xmath245 .",
    "a state @xmath221 is called a ( fermionic ) _ gaussian state _ iff it obeys the wick s theorem and , in addition , all odd tuples of majorana operators have zero expectation value on @xmath231 . by definition ,",
    "a gaussian state @xmath231 is fully specified by the pair @xmath145 , where @xmath146 is the covariance matrix of @xmath231 and @xmath246 is the norm .",
    "below we shall identify a gaussian state and the corresponding pair @xmath145 .",
    "we shall need the following well - known facts , see for instance ref .",
    "@xcite .",
    "a state @xmath231 is gaussian iff its covariance matrix obeys @xmath247 .",
    "one can easily check that standard anti - symmetric matrix @xmath138 defined in eq .",
    "( [ eq : m0 ] ) satisfies @xmath248 .",
    "this shows that @xmath174 is a gaussian state with the covariance matrix @xmath138 and the norm @xmath249 .",
    "let @xmath250 and @xmath251 be gaussian states of @xmath85 qubits .",
    "then @xmath252 be a ( complex ) anti - symmetric matrix of size @xmath139 .",
    "consider an operator @xmath253 then @xmath254 maps gaussian states to gaussian states .",
    "the last fact will be very important for us since the operators @xmath209 and @xmath210 constructed in section  [ sect : reduction ] have the form eq .",
    "( [ eq : w ] ) .",
    "indeed , consider the gates @xmath255 and @xmath256 where @xmath257 are defined in eq .",
    "( [ eq : gates ] ) and the subscripts indicate which qubits are acted upon by the gate .",
    "one can easily check that @xmath258 , where @xmath259 is defined through @xmath260 .",
    "likewise , @xmath261 . from eq .",
    "( [ eq : useful ] ) and eq .",
    "( [ eq : hath ] ) one gets @xmath262 where @xmath263 is defined through @xmath264 likewise , eq .",
    "( [ eq : hatv ] ) implies @xmath265 since @xmath174 is a gaussian state , fact  3 implies that all intermediate states obtained from @xmath174 by applying the operators @xmath209 and @xmath210 are gaussian .",
    "therefore @xmath266 can be efficiently computed if we have a rule describing how the covariance matrix and the norm of a gaussian state change upon application of @xmath209 and @xmath210 .",
    "the desired rule can be obtained using a fermionic version of the jamiolkowski duality between states and linear maps introduced in  @xcite .",
    "let us first define a fermionic version of the maximally entangled state for a bipartite system of @xmath267 qubits .",
    "let @xmath268 be the majorana operators defined for a system of @xmath269 qubits according to eq .",
    "( [ eq : majorana ] ) .",
    "define a @xmath269-qubit state normalized @xmath270 such that @xmath270 has a stabilizer group @xmath271 one can easily check that @xmath270 has a covariance matrix @xmath272,\\ ] ] where each block has dimensions @xmath139 .",
    "fact  1 implies that @xmath270 is a gaussian state .",
    "let @xmath273 be the operator defined in eq .",
    "( [ eq : w ] ) .",
    "define a @xmath269-qubit state @xmath274 note that @xmath275 is a gaussian state due to fact  3 .",
    "let @xmath276\\ ] ] be the covariance matrix of @xmath275 .",
    "here @xmath277 are some matrices of size @xmath278 .",
    "let @xmath279 .",
    "we shall need the following fact proved in  @xcite .",
    "let @xmath250 be a gaussian state .",
    "then @xmath280 , where @xmath281 and @xmath282    it remains to compute @xmath283 for the two special cases @xmath284 and @xmath285 .",
    "we shall perform the calculation for @xmath284 since both cases are quite similar .",
    "first we note that @xmath254 is a product of operators acting on disjoint pairs of majorana modes @xmath286 .",
    "accordingly , @xmath275 is a product of states involving disjoint @xmath287-tuples of majorana modes @xmath288 .",
    "it suffices to compute the covariance matrix and the norm for each of those @xmath287-tuples .",
    "equivalently , it suffices to do the calculation for @xmath289 . in this case",
    "@xmath290 is the single - qubit operator defined in eq .",
    "( [ eq : gates ] ) . by definition",
    ", @xmath270 is a two - qubit state with stabilizers @xmath291 and @xmath292 .",
    "it can be written explicitly as @xmath293 hence @xmath294 this state has norm @xmath295 to compute the covariance matrix @xmath296 we shall use a shorthand notation @xmath297 by definition , @xmath298 a straightforward calculation shows that the only non - zero elements ( with @xmath299 ) of @xmath296 are @xmath300 @xmath301 @xmath302 and @xmath303 thus @xmath304,\\ ] ] where @xmath305 \\quad \\mbox{and } \\quad b=\\left [ { \\begin{array}}{cc } s & 0 \\\\ 0 & s \\\\ { \\end{array}}\\right].\\ ] ] for an arbitrary @xmath85 we just need to take a direct sum of @xmath85 matrices @xmath296 as above and take the product of @xmath85 normalizing coefficients @xmath306 defined above .",
    "this yields @xmath307 whereas @xmath296 is given by eq .",
    "( [ eq : mw ] ) where @xmath308 and @xmath309 with @xmath310 combining the above analysis and fact  4 we infer that the function simulatehorizontal@xmath148 defined in section  [ sect : algorithm1 ] describes how the covariance matrix and the norm of a gaussian state change under application of the operator @xmath209 .",
    "a similar calculation shows that the function simulatevertical@xmath148 describes how the covariance matrix and the norm of a gaussian state change under application of the operator @xmath210 .",
    "the very last step of algorithm  1 correspond to computing the overlap between @xmath174 and the final state @xmath311 using eq .",
    "( [ eq : overlap ] ) .",
    "this completes the proof of correctness of algorithm  1 .",
    "in this section we describe an approximate algorithm for computing the coset probabilities .",
    "it is applicable to a general stochastic i.i.d .",
    "pauli noise including the depolarizing noise .",
    "we assume some level of familiarity with matrix product states and tensor networks , see  @xcite or  @xcite for a thorough review . for the sake of completeness",
    "we summarize some basic facts about matrix product states in section  [ sect : truncate ] .",
    "let @xmath312 be one of the cosets @xmath313 defined in section  [ sect : mld ] .",
    "our goal is to compute the coset probability @xmath33 .",
    "let @xmath314 be any probability distribution on the single - qubit pauli group .",
    "for example , @xmath315 for the depolarizing noise with a rate @xmath126 . by definition , @xmath316 where the product ranges over all edges of the surface code lattice .",
    "let us parameterize @xmath317 by binary variables @xmath318 associated with sites @xmath89 and plaquettes @xmath90 such that @xmath319 here we used a convention @xmath320 and @xmath321 .",
    "let @xmath92 be some edge of the surface code lattice with endpoints @xmath322 and adjacent plaquettes @xmath323 , see fig .",
    "[ fig : edge ] .",
    "let @xmath324 be the restriction of @xmath68 onto the qubit @xmath92 .",
    "clearly , @xmath324 depends only on the bits @xmath325 and @xmath326 .",
    "thus we can write @xmath327 where @xmath328 is a function of just four binary variables @xmath329 .",
    "for horizontal edges located at the left or the right boundary of the lattice the variable @xmath330 or @xmath331 respectively is missing . likewise , for horizontal edges located at the top or the bottom boundary the variable @xmath332 or @xmath333 respectively is missing .",
    "we arrive at @xmath334 where the sums range over binary strings @xmath335 corresponding to all possible configurations of variables @xmath336 and @xmath337     onto the edge @xmath92 depends only on the variables @xmath330 , @xmath331 and @xmath332 , @xmath333 .",
    "[ fig : edge ] , height=75 ]    the righthand side of eq .",
    "( [ eq : coset2 ] ) coincides with the contraction value of a properly defined tensor network on a two - dimensional grid . to define this tensor network ,",
    "consider the extended surface code lattice shown on fig .",
    "[ fig : network ] .",
    "the extended lattice has three types of nodes which we call @xmath43-nodes , @xmath338-nodes , and @xmath339-nodes .",
    "each @xmath43-node represents a location of a stabilizer ( either a site stabilizer @xmath87 or plaquette stabilizer @xmath88 ) while @xmath338-nodes and @xmath339-nodes represent code qubits located on horizontal and vertical edges of the original surface code lattice respectively .",
    "we shall refer to edges of the extended lattice as _ links _ to distinguish them from edges of the original surface code lattice .    .",
    "locations of stabilizers are represented by @xmath43-nodes .",
    "code qubits located on horizontal and vertical edges of the original lattice are represented by @xmath338-nodes and @xmath339-nodes respectively . in general , the extended lattice has dimensions @xmath340 .",
    "[ fig : network ] , height=151 ]    consider any configuration of variables @xmath341 and the corresponding term @xmath342 in eq .",
    "( [ eq : coset2 ] ) .",
    "for each site stabilizer @xmath87 let us copy the corresponding variable @xmath343 to all links incident to the @xmath43-node @xmath89 . likewise , for each plaquette stabilizer @xmath88 let us copy the corresponding variable @xmath344 to all links incident to the @xmath43-node @xmath90 .",
    "we obtain a labeling of the links by binary variables @xmath345 with the property that all links incident to any @xmath43-node have the same label .",
    "let us call such a link labeling _ valid_. by definition , @xmath342 is a product of terms @xmath346 associated with @xmath338-nodes and @xmath339-nodes @xmath92 of the extended lattice .",
    "since @xmath347 and @xmath259 are uniquely determined by the link labeling @xmath345 , we can also write @xmath348 as a function of @xmath349 , that is , @xmath350 .",
    "this shows that @xmath351 where the product is over all @xmath338-nodes and @xmath339-nodes and the sum ranges over all valid link labelings .",
    "we can now extend the sum in eq .",
    "( [ eq : coset3 ] ) to _ all _ link labelings @xmath349 by adding extra terms @xmath352 associated with @xmath43-nodes @xmath92 such that @xmath353 iff all links incident to @xmath92 have the same label and @xmath354 otherwise .",
    "we arrive at @xmath355 now the product ranges over all nodes of the extended lattice and the sum ranges over all link labelings . furthermore , by construction , each term @xmath356 depends only on the labels of links incident to the node @xmath92 . the expression in the righthand side of eq .",
    "( [ eq : coset4 ] ) is known as a contraction value of the tensor network defined by the collection of tensors @xmath356 .",
    "tensor networks are usually represented by diagrams like the one shown on fig .",
    "[ fig : network ] such that each box on the diagram carries a tensor with several indexes .",
    "indexes of a tensor are associated with the links emanating from the corresponding box .",
    "diagrams representing the tensors @xmath356 are shown on eqs .",
    "( [ eq : snode],[eq : hnode],[eq : vnode ] ) .",
    "all tensor indexes @xmath357 on these diagrams take values @xmath358 . for tensors located at the boundary some of the indexes may be missing .",
    "note that the order of arguments of @xmath324 is interchanged in eqs .",
    "( [ eq : hnode],[eq : vnode ] ) .",
    "this is simply because the qubits located on horizontal edges ( @xmath338-nodes ) have site stabilizers on the left and on the right whereas qubits located on vertical edges ( @xmath339-nodes ) have site stabilizers on the top and on the bottom .",
    "@xmath359{snode.pdf } } \\quad = \\left\\ { { \\begin{array}}{rcl } 1 & \\mbox{if } & i = j = k = l\\\\ 0 & & \\mbox{otherwise } \\\\ { \\end{array}}\\right.\\ ] ]    @xmath360{snode.pdf}}= \\pi_1(f_e g_e(j , l;i , k))\\ ] ]    @xmath361{snode.pdf}}= \\pi_1(f_e g_e(i , k ; j , l))\\ ] ]      let @xmath362 and @xmath363 be the set of matrix product states and matrix product operators defined on a chain of @xmath364 qubits and having the bond dimension @xmath3 . in this section",
    "we shall identify a matrix product state ( operator ) with the corresponding tensor network . consider a partition of the extended surface code lattice into columns shown on fig .",
    "[ fig : slices ] .",
    "each column @xmath122 and each internal column @xmath118 defines a matrix product operator @xmath365 and @xmath366 respectively .",
    "the first and the last columns @xmath367 define matrix product states @xmath368 .",
    "here we identify horizontal links of the lattice with physical indexes of mpo and mps , while vertical links correspond to virtual indexes . by definition , contracting a consecutive pair of columns is equivalent to taking the product of the corresponding mpos .",
    "thus eq .",
    "( [ eq : coset4 ] ) can be rewritten as @xmath369     and ` vertical ' columns @xmath124 ( here @xmath83 ) .",
    "[ fig : slices ] , height=170 ]    to approximate the righthand side of eq .",
    "( [ eq : network2 ] ) we shall employ the algorithm proposed by murg , verstraete and cirac  @xcite .",
    "the approximation accuracy of the algorithm is controlled by an integer parameter @xmath370 such that the algorithm becomes exact if @xmath3 is exponentially large in @xmath85 . at each step of the algorithm",
    "we maintain a state @xmath371 .",
    "such a state can be described by a list of @xmath364 tensors of dimension @xmath372 which requires @xmath373 real parameters .",
    "we begin by initializing @xmath374 . note that @xmath375 .",
    "each step of the algorithm updates @xmath231 according to @xmath376 ( even steps ) or @xmath377 ( odd steps ) .",
    "this update is realized simply by taking the product of tensors of @xmath231 with the respective tensors of @xmath209 or @xmath210 which takes time @xmath373 . since @xmath209 and @xmath210 map @xmath362 to @xmath378",
    ", extra measures have to be taken to reduce the bond dimension after each update .",
    "to this end we apply the truncation algorithm described in section  4.5 of ref .",
    "we shall use a function truncate@xmath379 that takes as input a state @xmath380 and returns a state @xmath371 approximating @xmath381 .",
    "such an approximation is obtained by computing the schmidt decomposition of @xmath381 across each bipartite cut of the chain and retaining only the @xmath3 largest schmidt coefficients .",
    "a detailed implementation of the function truncate@xmath379 is described in the next section .",
    "the last step of the algorithm is to compute the inner product between the final state @xmath371 and @xmath382 .",
    "this can be done in time @xmath383 by applying the standard contraction method for mps . as we explain in the next section ,",
    "each call to the function truncate@xmath379 involves @xmath364 qr - decompositions and svd - decompositions on matrices of size @xmath384 and @xmath385 respectively , which takes time @xmath383 .",
    "since we need one truncation for each column of the lattice , the overall running time of the algorithm is @xmath386 .",
    "the above steps can be summarized as follows .",
    "@xmath387      in this section we describe implementation of the function truncate@xmath379 in algorithm  2 .",
    "our implementation closely follows section  4.5 of ref .",
    "@xcite . for the sake of completeness , we begin by summarizing the necessary facts about matrix product states .",
    "below we use a notation @xmath388 for the number of qubits per column of the lattice .",
    "a matrix product state @xmath389 describing a chain of @xmath390 qubits is defined by a list of @xmath391 matrices @xmath392 , where @xmath393 is a qubit index ( site of the chain ) .",
    "any amplitude of @xmath231 in the standard basis is expressed as a product of @xmath390 matrices @xmath394 we shall use a shorthand notation @xmath395 for the pair of matrices @xmath396 at some particular qubit @xmath43 .",
    "likewise @xmath397 will stand for the full matrix product state .",
    "the @xmath390-qubit state defined in eq .",
    "( [ eq : mps ] ) will be denoted @xmath398 .",
    "let @xmath399 and @xmath400 be the number of rows and columns respectively in @xmath401 ( we shall always assume @xmath402 and @xmath403 have the same dimensions ) . since we want the the product of matrices in eq .",
    "( [ eq : mps ] ) to be a @xmath404 matrix ( a complex number ) , dimensions of the matrices must satisfy @xmath405 a matrix product state is said to have a _ bond dimension _ @xmath3 iff @xmath406 and @xmath407 for all qubits @xmath43 .",
    "let @xmath362 be the set of all matrix product states @xmath397 on @xmath390 qubits with the bond dimension @xmath3 .",
    "we shall say that @xmath395 has a _ left canonical form _",
    "( lcf ) or _ right canonical form _ ( rcf ) iff @xmath408 or @xmath409 respectively . here",
    "@xmath410 denotes the identity matrix of size @xmath411 .",
    "the importance of lcf and rcf comes from the following lemma . here and below we use a notation @xmath412 for the column vector @xmath413{^{\\mathsf{t}}}$ ] with ` @xmath414 ' at the @xmath168-th coordinate .",
    "[ lem : lcf ] suppose @xmath395 has lcf for @xmath415 . for each",
    "@xmath416 define a state @xmath417 with amplitudes @xmath418 then @xmath419 form an orthonormal family of vectors , i.e. , @xmath420 for all @xmath421 .    indeed , using the definition of @xmath422 the inner product @xmath423 can be written as @xmath424 where the sum runs over @xmath425 .",
    "the lcf at qubit @xmath414 implies @xmath426 .",
    "hence @xmath427 is equal to @xmath428 where the sum runs over @xmath429 .",
    "applying the same argument to the remaining qubits one arrives at @xmath430 .",
    "exactly the same arguments show that if @xmath395 has rcf for all @xmath431 then states @xmath432 with amplitudes @xmath433 form an orthonormal family for @xmath434 .",
    "the first step of the function truncate is transforming all matrices @xmath395 to lcf .",
    "we shall describe this step by a function leftcanonical(@xmath397 ) that takes as input a matrix product state @xmath435 and returns a pair @xmath436 , where @xmath437 is a scalar and @xmath438 is a matrix product state such that @xmath439 and @xmath440 has lcf at every qubit .",
    "we shall define leftcanonical(@xmath397 ) by the following algorithm .",
    "let us explain the qr - decomposition step in the above algorithm and prove its correctness .",
    "consider any qubit @xmath43 and represent @xmath395 as a block matrix @xmath441.\\ ] ] note that @xmath395 has @xmath442 rows and @xmath400 columns .",
    "let @xmath443 . applying the ` economic ' qr - decomposition to @xmath395 one",
    "gets @xmath444 where @xmath445 has dimensions @xmath446 , @xmath447 has dimensions @xmath448 , and columns of @xmath445 form an orthonormal family of vectors , that is , @xmath449 .",
    "finally , @xmath447 is an upper triangular matrix ( this property will not be important for us ) .",
    "let us write @xmath450,\\ ] ] where @xmath451 have dimensions @xmath452 .",
    "the property @xmath449 is equivalent to @xmath453 .",
    "hence @xmath454 defined in the above algorithm has lcf .",
    "note that dimensions of @xmath455 may or may not be equal to the ones of @xmath401 .",
    "let @xmath456 be the updated version of @xmath457 defined in the algorithm .",
    "obviously @xmath458 for any @xmath459 .",
    "thus @xmath460 is equal to @xmath461 for all @xmath462 and for all @xmath463 .",
    "the last step of the algorithm ( @xmath464 ) applies a qr - decomposition to a column vector @xmath465 , possibly updated by the previous step of the algorithm .",
    "hence @xmath445 is a unit - norm column vector of size @xmath466 while @xmath447 is a scalar which determines normalization of the overall state .",
    "this proves that @xmath439 and @xmath440 has lcf at every qubit .",
    "suppose the input matrix product state @xmath397 has bond dimension @xmath3 .",
    "then the computational cost of each qr - decomposition is @xmath467 .",
    "therefore , the function leftcanonical(@xmath397 ) can be computed in time @xmath468 . since no step of the algorithm increases dimensions of the matrices , the final matrix product state @xmath440 also has bond dimension @xmath3 .",
    "we are now ready to describe the function truncate .",
    "choose any integer @xmath469 and partition the chain as @xmath470 , where @xmath471 consider a matrix product state @xmath397 such that @xmath395 has lcf for all @xmath472 and rcf for all @xmath473 .",
    "suppose also that the matrices @xmath401 have dimensions at most @xmath3 for all @xmath473 and at most @xmath474 for all @xmath472 .",
    "we assume that @xmath475 ( we shall be interested in the case @xmath476 ) . using the orthonormal families of states @xmath422 and @xmath477 defined in eqs .",
    "( [ eq : phi],[eq : theta ] ) one can write @xmath398 as latexmath:[\\[\\label{eq } \\psi(a)=\\sum_{\\alpha=1}^{r(m ) } \\sum_{\\beta=1}^{c(m ) } \\sum_{x=0,1 } a_x(m)_{\\alpha,\\beta }     the schmidt decomposition of @xmath398 with respect to the partition @xmath479 and truncate this decomposition by retaining only the @xmath3 largest schmidt coefficients . to this end",
    "consider the singular value decomposition ( svd ) of @xmath480 , namely , @xmath481= u s v^\\dag,\\ ] ] where the matrices @xmath482 have dimensions @xmath483 with @xmath484 the matrix @xmath485 is diagonal such that @xmath486 is the @xmath168-th largest singular value of @xmath480 .",
    "the matrices @xmath487 and @xmath114 are isometries , that is , @xmath488 let us represent @xmath114 as a block matrix @xmath489,\\ ] ] where @xmath490 and @xmath491 have dimensions @xmath492 . using the above svd one can rewrite @xmath398 as @xmath493 where @xmath494 and @xmath495 are orthonormal family of @xmath1 states defined as @xmath496 we conclude that eq .",
    "( [ eq : svd1 ] ) defines the schmidt decomposition of @xmath398 with respect to the partition @xmath479 , while @xmath486 are the schmidt coefficients . the best rank-@xmath3 approximation to @xmath398 which we denote @xmath497",
    "is obtained from eq .",
    "( [ eq : svd1 ] ) by retaining @xmath3 largest schmidt coefficients , that is , @xmath498 decompose matrices @xmath482 into blocks such that @xmath499 , \\ ;   s=\\left [ { \\begin{array}}{cc } s ' & 0 \\\\ 0 & s '' \\\\ { \\end{array}}\\right ] , \\ ;   v'=\\left [ { \\begin{array}}{c|c } v ' & v '' \\\\",
    "{ \\end{array}}\\right].\\ ] ] by definition , @xmath500 have dimensions @xmath501 furthermore , @xmath502 is a square diagonal matrix that contains @xmath3 largest singular values of @xmath480 , while @xmath503 and @xmath504 are isometries , that is , @xmath505 and @xmath506 .",
    "we conclude that @xmath507 , where @xmath508 for @xmath473 and for @xmath509 , @xmath510 the fact that @xmath504 is an isometry implies that @xmath511 has rcf , so we can apply the above procedure again with @xmath512 and @xmath513 .",
    "starting from @xmath514 and moving towards the left boundary of the chain one can reduce the bond dimension from @xmath474 to @xmath3 .",
    "the above truncation algorithm can be summarized as follows .",
    "here we decomposed @xmath504 into blocks @xmath515 and @xmath516 similar to eq .",
    "( [ eq : vblock ] ) .",
    "we have studied the following combinations of noise models and decoders :      for each of the above combinations we estimated the probability of a logical error  the decoding outcome in which the recovery operator differs from the actual error by a logical pauli operator ( we do not differentiate between @xmath517 , or @xmath102 logical errors ) .",
    "the performance of each decoder was measured in terms of its error threshold and its _ badness _ parameter  the ratio between the logical error probabilities of a given decoder and the best available decoder for the considered noise model .",
    "thus badness @xmath518 for any decoder with smaller values indicating better decoders .",
    "the exact ml decoder and mps decoders were implemented as described in section  [ sect : xnoise ] and section  [ sect : xyznoise ] respectively .",
    "the mwm decoder was implemented by a reduction from the minimum weight perfect matching problem to the maximum weight matching problem as described in ref .",
    "@xcite .     is between @xmath519 and @xmath520 , which is in a good agreement with the estimate @xmath521 of ref .",
    "@xcite which calculated the phase transition point in the respective spin model .",
    "each curve has data points at error rates @xmath522 . to compute the logical error probability ,",
    "at least @xmath523 failed error correction trials have been accumulated for each datapoint .",
    "[ fig : xth ] , height=245 ]    let us first discuss our results for the x - noise .",
    "the threshold error rate @xmath524 of the ml decoder coincides with the critical density of anti - ferromagnetic bonds in the random - bond ising model on the nishimori line  @xcite .",
    "the latter has been estimated numerically by mertz and chalker  @xcite who found @xmath525 .",
    "our data shown at fig .  [ fig : xth ] suggest that @xmath526 which is in a good agreement with the estimate of ref .  @xcite . for comparison",
    ", the mwm decoder is known to have the threshold @xmath527 , see  @xcite .",
    "the curves representing the exact mld and mps decoders with @xmath528 are too close to be distinguishable on the main plot .",
    "the red curve represents the standard minimum weight matching decoder .",
    "the inset shows badness of various decoders as a function of the error rate .",
    "we define the badness as the ratio between logical error probabilities of a given decoder and the optimal decoder ( mld ) .",
    "each curve has data points at error rates @xmath529 . to compute the logical error probability ,",
    "at least @xmath530 failed error correction trials have been accumulated for each datapoint .",
    "[ fig : xcomp ] , height=302 ]    the performance of different decoders for a fixed code distance @xmath6 and a wide range of error rates is shown at fig .",
    "[ fig : xcomp ] .",
    "we observed that the mwm decoder remains nearly optimal for all simulated error rates with the badness parameter @xmath531 , even though for these error rates the logical error probability changes by several orders of magnitude .",
    "the slight difference between mld and the mwm decoder can be explained by the fact that the latter ignores the error degeneracy  @xcite .",
    "the data shown on fig .  [ fig : xcomp ] suggests that for x - noise ignoring the error degeneracy does not have a significant impact on the performance , even for large error rates and large code distances .",
    "perhaps more surprisingly , fig .",
    "[ fig : xcomp ] demonstrates that the mps decoder with a relatively small bond dimension @xmath528 is virtually indistinguishable from the optimal one in terms of the logical error probability .",
    "this serves as a numerical proof of correctness for the mps decoder .",
    "we observed numerically that the exact mld algorithm described in section  [ sect : xnoise ] becomes very sensitive to rounding errors in the regime of large code distances and small error rates .",
    "one way to suppress rounding errors is to enforce an orthogonality condition @xmath532 on the covariance matrix @xmath146 in algorithm  1 .",
    "the orthogonality condition is satisfied automatically if all arithmetic operations are perfect ( because @xmath146 represents a covariance matrix of a pure gaussian state , see section  [ sect : gaussian ] for details ) . in practice ,",
    "we observed that the orthogonality can be quickly lost if no special measures are taken .",
    "a simple and computationally cheap solution of the above problem is to compute the qr - decomposition @xmath533 , where @xmath445 is an orthogonal matrix and @xmath447 is an upper - triangular matrix .",
    "note that @xmath532 is possible only if @xmath447 is a diagonal matrix with entries @xmath534 on the diagonal .",
    "this form of @xmath447 can be easily enforced by setting all off - diagonal entries of @xmath447 to zero and replacing each diagonal entry @xmath535 by the sign of @xmath535 .",
    "let @xmath536 be the resulting diagonal matrix .",
    "we found that replacing @xmath146 by @xmath537 after each call to the functions simulatehorizontal and simulatevertical in algorithm  1 makes the algorithm more stable against rounding errors .",
    "let us now discuss the depolarizing noise .",
    "in this case we only have an approximate implementation of mld with no direct means of estimating the approximation precision .",
    "hence the first natural question is whether the mps decoder with a fixed bond dimension @xmath3 has a non - zero error threshold @xmath524 .",
    "our data suggests ( although not conclusively ) that the answer is ` yes ' .",
    "most importantly , we observed an exponential decay of the logical error probability as a function of the code distance @xmath85 for a fixed error rate , see fig .",
    "[ fig : xyzdecay ] , where we used @xmath5 .",
    "assuming that the observed decay does not saturate for larger @xmath85 , the data shown at fig .",
    "[ fig : xyzdecay ] gives a lower bound @xmath538 .",
    "the logical error probability as a function of the error rate for a fixed @xmath85 is shown on fig .",
    "[ fig : xyzth ] which also exhibits a typical threshold - like behavior and suggests that @xmath539 .",
    "previously studied approximate versions of mld such as the renormalization group decoder  @xcite and the markov chain decoder  @xcite , as well the mwm decoder  @xcite have error thresholds between @xmath540 and @xmath541 .",
    "the threshold of the exact ml decoder corresponding to the phase transition point in the disordered eight - vertex ising model is known to be @xmath542 , see ref .  @xcite .",
    "since the correlation length of the ising model diverges at the phase transition point , we expect that the mps decoder can only achieve this optimal threshold if the bond dimension @xmath3 is a growing function of the code distance @xmath85 .     as a function of the code distance @xmath85 for a fixed error rate @xmath543",
    ". to compute the logical error probability , at least @xmath530 failed error correction trials have been accumulated for each datapoint .",
    "[ fig : xyzdecay ] , height=245 ]     as a function of the error rate @xmath126 . assuming a non - zero error threshold @xmath524",
    ", the data suggest that @xmath539 . to compute the logical error probability ,",
    "at least @xmath523 failed error correction trials have been accumulated for each datapoint .",
    "[ fig : xyzth ] , height=245 ]    the performance of different decoders for a fixed code distance @xmath6 and a wide range of error rates is shown at fig .",
    "[ fig : xyzcomp ] . in a striking contrast with the analogous x - noise data",
    ", we observed that the mwm decoder becomes highly non - optimal in the regime of small error rates with the badness parameter above @xmath544 .",
    "this can be attributed to the fact that mwm decoder often fails to find the minimum weight error consistent with the syndrome since it ignores correlations between @xmath7 and @xmath8 errors  @xcite .",
    "we also observed that the logical error probability of mps decoders converges very quickly as one increases the bond dimension .",
    "the data shown on fig .  [ fig : xyzcomp ] indicates that the mps decoder with @xmath5 is nearly optimal for all error rates and all code distances @xmath545 .    while the logical error probability is the most natural figure of merit",
    ", one may also ask how well the mps - based algorithm with a small bond dimension @xmath3 approximates the coset probabilities for some fixed syndrome . for simplicity",
    ", we considered the trivial syndrome , that is , the cosets @xmath546 , and @xmath547 .",
    "we observed a very fast convergence for the most likely coset and a poor convergence for the remaining cosets , see tables  [ table : cosetx],[table : cosetxyz ] .",
    "since the only goal of the decoder is to identify the most likely coset , the slower convergence for some of unlikely cosets might not be a serious drawback .",
    ".x - noise : probabilities of the two cosets computed by the mps algorithm .",
    "the simulation parameters are @xmath548 and @xmath6 .",
    "the exact values of the coset probabilities are @xmath549 and @xmath550 . [ cols=\"^,^,^\",options=\"header \" , ]      is shown .",
    "the red curve represents the minimum weight matching decoder .",
    "the inset shows badness of various decoders as a function of the error rate .",
    "we define the badness as the ratio between logical error probabilities of a given decoder and the best decoder ( mps decoder with @xmath551 ) .",
    "each curve has data points at error rates @xmath552 . to compute the logical error probability ,",
    "at least @xmath530 failed error correction trials have been accumulated for each datapoint .",
    "[ fig : xyzcomp ] , height=302 ]    the mps decoder offers a lot of possibilities for improvement .",
    "one rather obvious improvement ( employed in the above simulations ) is to use a single run of algorithm  2 to compute two different coset probabilities . indeed , suppose we choose the logical operator @xmath102 supported in the right - most column of the lattice denoted @xmath553 on fig .",
    "[ fig : slices ] .",
    "then the tensor networks constructed for the cosets @xmath554 and @xmath555 are exactly the same except for the column @xmath553 .",
    "since we contract the network column by column starting from the left - most column @xmath556 , the difference between the two cosets manifests itself only in the very last step of algorithm  2 ( computing the inner product @xmath557 ) .",
    "since this step takes a negligible time compared with the rest of the algorithm , it makes sense to compute both probabilities @xmath558 and @xmath559 by performing a single network contraction .",
    "the same observation applies to the probabilities @xmath560 and @xmath561 .",
    "we also expect that a choice of the standard error @xmath47 consistent with the syndrome @xmath43 may affect the convergence of the algorithm .",
    "while we have chosen @xmath47 by connecting each syndrome to the left / top boundary , it may be advantageous to choose @xmath47 as a small - weight error , for example , using the mwm decoder .",
    "finally , a challenging open problem is how to extend the mps decoder to noisy syndrome extraction .",
    "a naive extension would require a contraction of a 3d tensor network .",
    "we anticipate that this problem can be attacked using recently developed algorithms for simulating 2d quantum systems based on projected entangled pairs states ( peps ) , see  @xcite .",
    "it should be emphasized that the mps - based decoder is applicable to any noise model that can be described by a stochastic i.i.d .",
    "pauli noise .",
    "in contrast , the decoder based on matchgates is only applicable to noise models with independent bit - flip and phase - flip errors ."
  ],
  "abstract_text": [
    "<S> we describe two implementations of the optimal error correction algorithm known as the maximum likelihood decoder ( mld ) for the 2d surface code with a noiseless syndrome extraction . </S>",
    "<S> first , we show how to implement mld exactly in time @xmath0 , where @xmath1 is the number of code qubits . </S>",
    "<S> our implementation uses a reduction from mld to simulation of matchgate quantum circuits . </S>",
    "<S> this reduction however requires a special noise model with independent bit - flip and phase - flip errors . </S>",
    "<S> secondly , we show how to implement mld approximately for more general noise models using matrix product states ( mps ) . </S>",
    "<S> our implementation has running time @xmath2 where @xmath3 is a parameter that controls the approximation precision . </S>",
    "<S> the key step of our algorithm , borrowed from the dmrg method , is a subroutine for contracting a tensor network on the two - dimensional grid . </S>",
    "<S> the subroutine uses mps with a bond dimension @xmath3 to approximate the sequence of tensors arising in the course of contraction . </S>",
    "<S> we benchmark the mps - based decoder against the standard minimum weight matching decoder observing a significant reduction of the logical error probability for @xmath4 . </S>"
  ]
}